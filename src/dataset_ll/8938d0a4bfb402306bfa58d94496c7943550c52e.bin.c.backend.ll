source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208007069
@global_var_1001c090.3 = global i32 0
@global_var_1001c09c.4 = local_unnamed_addr global i32* @global_var_1001c090.3
@global_var_1001c278.6 = global i32 0
@global_var_10000314.7 = constant i32 1207996001
@global_var_10000320.8 = constant [3 x i8] c"8`\00"
@global_var_1001c204.10 = local_unnamed_addr global i32 0
@global_var_10000588.11 = constant [3 x i8] c";{\00"
@global_var_100005b4.12 = constant i32 939524096
@global_var_1001c208.14 = local_unnamed_addr global i32 0
@global_var_10000f54.15 = constant [3 x i8] c"8~\00"
@global_var_10000f64.16 = constant [3 x i8] c"8~\00"
@global_var_10000f74.17 = constant [3 x i8] c"8~\00"
@global_var_100016f0.18 = constant i32 939524096
@global_var_10001c14.19 = constant [3 x i8] c"8`\00"
@global_var_1000225c.20 = constant [3 x i8] c"8`\00"
@global_var_10002f10.21 = constant i32 939524104
@global_var_10002f40.22 = constant i32 939524096
@global_var_10003240.23 = constant i32 939524096
@global_var_10003f14.24 = constant [3 x i8] c"8`\00"
@global_var_10004004.25 = constant [3 x i8] c"9!\00"
@global_var_1001c214.26 = local_unnamed_addr global i32 0
@global_var_100045c8.27 = constant [3 x i8] c"8`\00"
@global_var_100045d0.28 = constant [3 x i8] c"8`\00"
@global_var_100045d8.29 = constant [3 x i8] c"8`\00"
@global_var_100046d8.30 = constant [3 x i8] c"9@\00"
@global_var_1000bacc.31 = constant i32 788529152
@global_var_10004a20.32 = constant [3 x i8] c"8`\00"
@global_var_10004a28.33 = constant [3 x i8] c"8`\00"
@global_var_10004a30.34 = constant [3 x i8] c"8`\00"
@global_var_10004a38.35 = constant [3 x i8] c"8`\00"
@global_var_10004aa4.36 = constant [3 x i8] c"8`\00"
@global_var_10004aac.37 = constant [3 x i8] c"8`\00"
@global_var_10004ab4.38 = constant [3 x i8] c"8`\00"
@global_var_10004bf8.39 = constant i32 939572197
@global_var_10004c3c.40 = constant i32 939526087
@global_var_10004c78.41 = constant [3 x i8] c"8`\00"
@global_var_10004cac.42 = constant [3 x i8] c"8`\00"
@global_var_10004cb4.43 = constant i32 939524118
@global_var_10004cf0.44 = constant [3 x i8] c"8`\00"
@global_var_10004cf8.45 = constant i32 939524119
@global_var_10004d34.46 = constant [3 x i8] c"8`\00"
@global_var_1001c20c.47 = local_unnamed_addr global i32 0
@global_var_1001c210.48 = local_unnamed_addr global i32 0
@global_var_10004d68.49 = constant [3 x i8] c"8`\00"
@global_var_10004de4.50 = constant [3 x i8] c"8`\00"
@global_var_10004dec.51 = constant [3 x i8] c"8`\00"
@global_var_10004e50.52 = constant i32 1207977881
@global_var_10004eec.53 = constant [3 x i8] c"8`\00"
@global_var_10004f7c.54 = constant [3 x i8] c"8`\00"
@global_var_10004f84.55 = constant [3 x i8] c"8`\00"
@global_var_10004ff4.56 = constant [3 x i8] c"8`\00"
@global_var_10004ffc.57 = constant i32 1207976241
@global_var_100050ac.58 = constant [3 x i8] c"8`\00"
@global_var_100050b4.59 = constant [3 x i8] c"8`\00"
@global_var_100050bc.60 = constant [3 x i8] c"8`\00"
@global_var_100050c4.61 = constant [3 x i8] c"8`\00"
@global_var_100050cc.62 = constant [3 x i8] c"8`\00"
@global_var_100052f0.63 = constant [3 x i8] c"8`\00"
@global_var_100052f8.64 = constant [3 x i8] c"8`\00"
@global_var_10005300.65 = constant [3 x i8] c"8`\00"
@global_var_10005308.66 = constant [3 x i8] c"8`\00"
@global_var_10005310.67 = constant [3 x i8] c"8`\00"
@global_var_10005348.68 = constant [3 x i8] c"8`\00"
@global_var_100053ac.69 = constant [3 x i8] c"8`\00"
@global_var_100053b4.70 = constant [3 x i8] c"8`\00"
@global_var_100053bc.71 = constant [3 x i8] c"8`\00"
@global_var_100053c4.72 = constant [3 x i8] c"8`\00"
@global_var_100053cc.73 = constant [3 x i8] c"8`\00"
@global_var_1001c1e8.74 = local_unnamed_addr global i32 268471264
@global_var_1001c1e0.75 = local_unnamed_addr global i32 -1
@global_var_10005584.77 = constant [3 x i8] c"8`\00"
@global_var_10005594.78 = constant [3 x i8] c"8`\00"
@global_var_1000560c.79 = constant i32 1207962709
@global_var_1001c2e0.80 = global i32 0
@global_var_1001c2e4.81 = local_unnamed_addr global i32 0
@global_var_1000565c.82 = constant [3 x i8] c"8`\00"
@global_var_10005664.83 = constant [3 x i8] c"8`\00"
@global_var_1001c2e2.84 = local_unnamed_addr global i32 0
@global_var_1001c218.85 = local_unnamed_addr global i32 0
@global_var_100056ec.86 = constant [3 x i8] c"8`\00"
@global_var_10005748.87 = constant [3 x i8] c"8`\00"
@global_var_10005780.88 = constant [3 x i8] c"8`\00"
@global_var_10005788.89 = constant [3 x i8] c"8`\00"
@global_var_10005844.90 = constant i32 1207972765
@global_var_10005880.91 = constant i32 1207961357
@global_var_1000589c.92 = constant [3 x i8] c";a\00"
@global_var_10005900.93 = constant i32 1207961149
@global_var_10005954.94 = constant [3 x i8] c"8`\00"
@global_var_1000bad0.95 = constant i32 167772160
@global_var_1000598c.96 = constant [3 x i8] c"8`\00"
@global_var_100059a0.97 = constant i32 1207973701
@global_var_10005a40.98 = constant [3 x i8] c":`\00"
@global_var_10005a50.99 = constant [3 x i8] c"8`\00"
@global_var_10005a58.100 = constant [3 x i8] c"8`\00"
@global_var_1001c1e4.101 = local_unnamed_addr global i32 -1
@global_var_10005c18.103 = constant i32 939589631
@global_var_10005cd0.104 = constant i32 939589631
@global_var_10005da4.105 = constant i32 939589631
@global_var_10005db0.106 = constant i32 1006685388
@global_var_10005de8.107 = constant i32 1207962005
@global_var_10005df0.108 = constant [3 x i8] c"|q\00"
@global_var_1000bad4.109 = constant i32 1
@global_var_10005e98.110 = constant i32 939589631
@global_var_1001c29c.111 = local_unnamed_addr global i32 0
@global_var_1001c290.112 = local_unnamed_addr global i32 0
@global_var_1001c298.113 = local_unnamed_addr global i32 0
@global_var_1001c294.114 = local_unnamed_addr global i32 0
@global_var_100062cc.115 = constant [3 x i8] c"9A\00"
@global_var_10006350.116 = constant i32 939524096
@global_var_10006384.117 = constant i32 1006665728
@global_var_100063b0.118 = constant i32 939524098
@global_var_100063f8.119 = constant [3 x i8] c"8`\00"
@global_var_1000646c.120 = constant i32 939524128
@global_var_10006518.121 = constant [3 x i8] c"8c\00"
@global_var_1001c238.122 = local_unnamed_addr global i32 0
@global_var_1001c22c.123 = local_unnamed_addr global i32 0
@global_var_1001c220.124 = local_unnamed_addr global i32 0
@global_var_1001c224.125 = local_unnamed_addr global i32 0
@global_var_10006b28.127 = constant [3 x i8] c"8`\00"
@global_var_1001c230.128 = local_unnamed_addr global i32 0
@global_var_1001c234.129 = local_unnamed_addr global i32 0
@global_var_1001c2a0.130 = global i32 0
@global_var_1001c2b4.131 = global i32 0
@global_var_1000bb58.132 = constant i32 0
@global_var_1001c2a2.133 = local_unnamed_addr global i32 0
@global_var_1001c2c0.134 = local_unnamed_addr global i32 0
@global_var_1001c2a8.135 = local_unnamed_addr global i32 0
@global_var_1001c2a9.136 = local_unnamed_addr global i32 0
@global_var_1001c2a4.137 = local_unnamed_addr global i32 0
@global_var_1000bb54.138 = constant [5 x i8] c"&;; \00"
@global_var_1000baf0.140 = constant [8 x i8] c"0125!8 \00"
@global_var_1001c2c2.141 = local_unnamed_addr global i32 0
@global_var_1000badc.142 = constant [5 x i8] c"5:?;\00"
@global_var_1000bae4.143 = constant [9 x i8] c"<!: acam\00"
@global_var_1000baf8.144 = constant [6 x i8] c"509=:\00"
@global_var_1000bb00.145 = constant [6 x i8] c"\22=.,\22\00"
@global_var_1000bb08.146 = constant i32 1663122969
@global_var_1000bb18.147 = constant [6 x i8] c"efg`a\00"
@global_var_1000bb20.148 = constant [5 x i8] c"!'1&\00"
@global_var_1000bb28.149 = constant i32 455883832
@global_var_1000bb34.150 = constant i32 124138003
@global_var_1000bb40.151 = constant [5 x i8] c"efg`\00"
@global_var_1000bb48.152 = constant i32 941499172
@global_var_1001c2ac.153 = local_unnamed_addr global i32 0
@global_var_1001c2b0.154 = local_unnamed_addr global i32 0
@global_var_1001c2aa.155 = local_unnamed_addr global i32 0
@global_var_1001c2c4.156 = local_unnamed_addr global i32 0
@global_var_1001c2b8.157 = local_unnamed_addr global i32 0
@global_var_100073d4.159 = constant [3 x i8] c"8`\00"
@global_var_100073dc.160 = constant i32 939524096
@global_var_1000bb5c.161 = constant i32 -18184
@global_var_1001c2f0.183 = global i32 0
@global_var_1001c1ec.184 = local_unnamed_addr global i32 -555811921
@global_var_1000bb98.185 = constant i32 1441136640
@global_var_1001c2f8.186 = local_unnamed_addr global i32 0
@global_var_1000bb9c.187 = constant [11 x i8] c"8!$0z78!6T\00"
@global_var_1001c2fc.188 = local_unnamed_addr global i32 0
@global_var_100083a8.189 = constant [3 x i8] c"8`\00"
@global_var_1001c300.190 = local_unnamed_addr global i32 0
@global_var_1001c304.191 = local_unnamed_addr global i32 0
@global_var_100083c8.192 = constant [3 x i8] c"8`\00"
@global_var_1001c308.193 = local_unnamed_addr global i32 0
@global_var_1001c30c.194 = local_unnamed_addr global i32 0
@global_var_1000bba8.195 = constant i32 -294715392
@global_var_100083ec.196 = constant [3 x i8] c"8`\00"
@global_var_1001c310.197 = local_unnamed_addr global i32 0
@global_var_1001c314.198 = local_unnamed_addr global i32 0
@global_var_1000bbac.199 = constant [37 x i8] c"&;; t'1:$5=t>!' t=:217 10t-;!&t'<= T\00"
@global_var_10008414.200 = constant i32 939524132
@global_var_1001c31c.201 = local_unnamed_addr global i32 0
@global_var_1001c318.202 = local_unnamed_addr global i32 0
@global_var_1000bbd4.203 = constant [7 x i8] c"'<188T\00"
@global_var_1000843c.204 = constant [3 x i8] c"8`\00"
@global_var_1001c320.205 = local_unnamed_addr global i32 0
@global_var_1001c324.206 = local_unnamed_addr global i32 0
@global_var_1000bbdc.207 = constant [8 x i8] c"1:5681T\00"
@global_var_10008464.208 = constant [3 x i8] c"8`\00"
@global_var_1001c328.209 = local_unnamed_addr global i32 0
@global_var_1001c32c.210 = local_unnamed_addr global i32 0
@global_var_1000bbe4.211 = constant [8 x i8] c"'-' 19T\00"
@global_var_10008488.212 = constant [3 x i8] c"8`\00"
@global_var_1001c330.213 = local_unnamed_addr global i32 0
@global_var_1001c334.214 = local_unnamed_addr global i32 0
@global_var_1000bbec.215 = constant [4 x i8] c"'<T\00"
@global_var_100084ac.216 = constant i32 939524099
@global_var_1001c33c.217 = local_unnamed_addr global i32 0
@global_var_1001c338.218 = local_unnamed_addr global i32 0
@global_var_1000bbf0.219 = constant i32 2067152186
@global_var_100084d4.220 = constant [3 x i8] c"8`\00"
@global_var_1001c340.221 = local_unnamed_addr global i32 0
@global_var_1001c344.222 = local_unnamed_addr global i32 0
@global_var_1000bc04.223 = constant i32 421337862
@global_var_100084f8.224 = constant i32 939524120
@global_var_1001c34c.225 = local_unnamed_addr global i32 0
@global_var_1001c348.226 = local_unnamed_addr global i32 0
@global_var_1000bc20.227 = constant [10 x i8] c":7;&&17 T\00"
@global_var_10008520.228 = constant i32 939524105
@global_var_1001c354.229 = local_unnamed_addr global i32 0
@global_var_1001c350.230 = local_unnamed_addr global i32 0
@global_var_1000bc2c.231 = constant [17 x i8] c"{6=:{6!'-6;,t$'T\00"
@global_var_10008548.232 = constant [3 x i8] c"8`\00"
@global_var_1001c358.233 = local_unnamed_addr global i32 0
@global_var_1001c35c.234 = local_unnamed_addr global i32 0
@global_var_1000bc40.235 = constant [23 x i8] c"{6=:{6!'-6;,t?=88tymtT\00"
@global_var_1000856c.236 = constant i32 939524118
@global_var_1001c364.237 = local_unnamed_addr global i32 0
@global_var_1001c360.238 = local_unnamed_addr global i32 0
@global_var_1000bc58.239 = constant [8 x i8] c"{$&;7{T\00"
@global_var_10008594.240 = constant [3 x i8] c"8`\00"
@global_var_1001c368.241 = local_unnamed_addr global i32 0
@global_var_1001c36c.242 = local_unnamed_addr global i32 0
@global_var_1000bc60.243 = constant [6 x i8] c"{1,1T\00"
@global_var_100085b8.244 = constant [3 x i8] c"8`\00"
@global_var_1001c370.245 = local_unnamed_addr global i32 0
@global_var_1001c374.246 = local_unnamed_addr global i32 0
@global_var_1000bc68.247 = constant [5 x i8] c"{20T\00"
@global_var_100085dc.248 = constant i32 939524100
@global_var_1001c37c.249 = local_unnamed_addr global i32 0
@global_var_1001c378.250 = local_unnamed_addr global i32 0
@global_var_1000bc70.251 = constant [7 x i8] c"{95$'T\00"
@global_var_10008604.252 = constant [3 x i8] c"8`\00"
@global_var_1001c380.253 = local_unnamed_addr global i32 0
@global_var_1001c384.254 = local_unnamed_addr global i32 0
@global_var_1000bc78.255 = constant [15 x i8] c"{$&;7{:1 { 7$T\00"
@global_var_10008628.256 = constant [3 x i8] c"8`\00"
@global_var_1001c388.257 = local_unnamed_addr global i32 0
@global_var_1001c38c.258 = local_unnamed_addr global i32 0
@global_var_1000bc88.259 = constant [9 x i8] c"{' 5 !'T\00"
@global_var_1000864c.260 = constant [3 x i8] c"8`\00"
@global_var_1001c400.261 = local_unnamed_addr global i32 0
@global_var_1001c404.262 = local_unnamed_addr global i32 0
@global_var_1000bc94.263 = constant [8 x i8] c"z5:=91T\00"
@global_var_10008670.264 = constant [3 x i8] c"8`\00"
@global_var_1001c408.265 = local_unnamed_addr global i32 0
@global_var_1001c40c.266 = local_unnamed_addr global i32 0
@global_var_1000bc9c.267 = constant [17 x i8] c"{$&;7{:1 {&;! 1T\00"
@global_var_10008694.268 = constant [3 x i8] c"8`\00"
@global_var_1001c390.269 = local_unnamed_addr global i32 0
@global_var_1001c394.270 = local_unnamed_addr global i32 0
@global_var_1000bcb0.271 = constant [24 x i8] c"3e567`09;ga<:$f8=1d?>2T\00"
@global_var_100086bc.272 = constant [3 x i8] c"8`\00"
@global_var_1001c398.273 = local_unnamed_addr global i32 0
@global_var_1001c39c.274 = local_unnamed_addr global i32 0
@global_var_1000bcc8.275 = constant [9 x i8] c"5''#;&0T\00"
@global_var_1000bcd4.276 = constant [15 x i8] c"{01\22{#5 7<0;3T\00"
@global_var_100086e8.277 = constant [3 x i8] c"8`\00"
@global_var_1001c3a0.278 = local_unnamed_addr global i32 0
@global_var_1001c3a4.279 = local_unnamed_addr global i32 0
@global_var_1000bce4.280 = constant [20 x i8] c"{01\22{9='7{#5 7<0;3T\00"
@global_var_1000870c.281 = constant [3 x i8] c"8`\00"
@global_var_1001c3a8.282 = local_unnamed_addr global i32 0
@global_var_1001c3ac.283 = local_unnamed_addr global i32 0
@global_var_1000872c.284 = constant [3 x i8] c"8`\00"
@global_var_1001c3b0.285 = local_unnamed_addr global i32 0
@global_var_1001c3b4.286 = local_unnamed_addr global i32 0
@global_var_1000bcf8.287 = constant [11 x i8] c"0\22&<18$1&T\00"
@global_var_10008750.288 = constant [3 x i8] c"8`\00"
@global_var_1001c410.289 = local_unnamed_addr global i32 0
@global_var_1001c414.290 = local_unnamed_addr global i32 0
@global_var_1000bd5c.291 = constant i32 473889
@global_var_10008774.292 = constant i32 939524117
@global_var_1001c3bc.293 = local_unnamed_addr global i32 0
@global_var_1001c3b8.294 = local_unnamed_addr global i32 0
@global_var_1000bd04.295 = constant [18 x i8] c"{1 7{&1';8\22z7;:2T\00"
@global_var_1000879c.296 = constant i32 939524113
@global_var_1001c3c4.297 = local_unnamed_addr global i32 0
@global_var_1001c3c0.298 = local_unnamed_addr global i32 0
@global_var_1000bd18.299 = constant [13 x i8] c":591'1&\221&tT\00"
@global_var_100087c4.300 = constant i32 939524108
@global_var_1001c3cc.301 = local_unnamed_addr global i32 0
@global_var_1001c3c8.302 = local_unnamed_addr global i32 0
@global_var_100087e8.303 = constant [3 x i8] c"8`\00"
@global_var_1001c3d0.304 = local_unnamed_addr global i32 0
@global_var_1001c3d4.305 = local_unnamed_addr global i32 0
@global_var_10008808.306 = constant [3 x i8] c"8`\00"
@global_var_1001c3d8.307 = local_unnamed_addr global i32 0
@global_var_1001c3dc.308 = local_unnamed_addr global i32 0
@global_var_1000bd28.309 = constant [9 x i8] c"$662*7!E\00"
@global_var_1000882c.310 = constant [3 x i8] c"8`\00"
@global_var_1001c3e0.311 = local_unnamed_addr global i32 0
@global_var_1001c3e4.312 = local_unnamed_addr global i32 0
@global_var_1000bd34.313 = constant [6 x i8] c";3=:T\00"
@global_var_10008850.314 = constant [3 x i8] c"8`\00"
@global_var_1001c3e8.315 = local_unnamed_addr global i32 0
@global_var_1001c3ec.316 = local_unnamed_addr global i32 0
@global_var_1000bd3c.317 = constant [7 x i8] c"1: 1&T\00"
@global_var_10008874.318 = constant [3 x i8] c"8`\00"
@global_var_1001c3f0.319 = local_unnamed_addr global i32 0
@global_var_1001c3f4.320 = local_unnamed_addr global i32 0
@global_var_1000bd44.321 = constant [24 x i8] c"e365`70;9ag:<$ef1=d?2>T\00"
@global_var_1001c3fc.322 = local_unnamed_addr global i32 0
@global_var_1001c3f8.323 = local_unnamed_addr global i32 0
@global_var_10008c04.324 = constant i32 939524096
@global_var_10008f4c.325 = constant i32 1207959564
@global_var_10009428.326 = constant i32 939524118
@global_var_1000ab4c.327 = constant [3 x i8] c"8`\00"
@global_var_10009580.328 = constant i32 939524105
@global_var_1000959c.329 = constant i32 939589631
@global_var_100096c4.330 = constant i32 1207959797
@global_var_100096c8.331 = constant i32 939524108
@global_var_1001c25c.332 = global i32 0
@global_var_10009e40.333 = constant i32 939524118
@global_var_10009ec8.334 = constant i32 939524118
@global_var_1001c418.335 = global i32 0
@global_var_1001c2c8.336 = global i32 0
@global_var_1001c1f0 = external global i32
@global_var_1000be80.338 = constant i32 33554944
@global_var_1001c24c.339 = local_unnamed_addr global i32 0
@global_var_1001c498.340 = global i32 0
@global_var_1000a124.341 = constant i32 939524108
@global_var_1000a178.342 = constant i32 939524108
@global_var_1000a22c.343 = constant [3 x i8] c"8`\00"
@global_var_1000a2d8.344 = constant [3 x i8] c"8`\00"
@global_var_1000a600.345 = constant i32 1207959640
@global_var_1000a63c.346 = constant i32 1207959580
@global_var_1001c1fc.347 = local_unnamed_addr global i32* @global_var_1000be80.338
@global_var_1000a830.348 = constant i32 939524130
@global_var_1001c1b0.349 = global i32 0
@global_var_1001c240.350 = local_unnamed_addr global i32 0
@global_var_1000a8c4.351 = constant i32 1207960053
@global_var_1000a8c8.352 = constant [3 x i8] c"= \00"
@global_var_1001c084.353 = global i32 -1
@global_var_1001c250.354 = local_unnamed_addr global i32 0
@global_var_1001c254.355 = local_unnamed_addr global i32 0
@global_var_1000bd74.356 = constant [10 x i8] c"/dev/null\00"
@global_var_1001c258.357 = local_unnamed_addr global i32 0
@global_var_1001c244.359 = local_unnamed_addr global i32 0
@global_var_1001c248.360 = local_unnamed_addr global i32 0
@global_var_1000ae64.361 = constant i32 939524096
@global_var_1000b0f0.363 = constant i32 939524118
@global_var_1000b2ec.364 = constant i32 939589631
@global_var_1001c270.365 = local_unnamed_addr global i32 0
@global_var_1001c1c8.366 = global i32 0
@global_var_1000b810.367 = constant i32 939524129
@global_var_1001c264.368 = local_unnamed_addr global i32 0
@global_var_1000b884.369 = constant [3 x i8] c"8`\00"
@global_var_1000b8bc.370 = constant i32 939524129
@global_var_1001c268.371 = local_unnamed_addr global i32 0
@global_var_1001c26c.372 = local_unnamed_addr global i32 0
@global_var_1001c088.373 = global i32 0
@global_var_1001c274.2 = local_unnamed_addr global i8 0
@global_var_1001c200.9 = local_unnamed_addr global i8 0
@global_var_1001c201.13 = global i8 0
@global_var_1001c0a0.76 = local_unnamed_addr global i8 1
@global_var_1001c21c.102 = local_unnamed_addr global i16 0
@global_var_1001c228.126 = global i16 0
@global_var_1001c2b6.139 = local_unnamed_addr global i16 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000ba40(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001c274.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001c09c.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001c09c.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001c09c.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001c274.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001c274.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 268550292 to i32*), align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 268550292
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @function_1000ac38(i32 268457872, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268483244, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @function_10000238(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000238:
  %ctr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %ctr.global-to-local, align 4
  %v0_10000244 = load i32, i32* @lr, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  call void @__pseudo_cond_branch(i1 %tmp4, i32 %v0_10000244)
  %v1_10000248 = add i32 %tmp, 4
  %v2_10000248 = inttoptr i32 %v1_10000248 to i8*
  %v3_10000248 = load i8, i8* %v2_10000248, align 1
  %v4_10000248 = zext i8 %v3_10000248 to i32
  %v4_10000250 = icmp eq i32 %v4_10000248, %arg3
  br i1 %v4_10000250, label %dec_label_pc_10000278, label %dec_label_pc_1000026c.preheader

dec_label_pc_1000026c.preheader:                  ; preds = %dec_label_pc_10000238
  %v0_10000270.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000026c

dec_label_pc_1000025c:                            ; preds = %dec_label_pc_1000026c
  %v1_1000025c = add i32 %v0_1000025c.in, 12
  %v2_1000025c = inttoptr i32 %v1_1000025c to i8*
  %v3_1000025c = load i8, i8* %v2_1000025c, align 1
  %v4_1000025c = zext i8 %v3_1000025c to i32
  %v4_10000264 = icmp eq i32 %v4_1000025c, %arg3
  br i1 %v4_10000264, label %dec_label_pc_10000278, label %dec_label_pc_1000026c

dec_label_pc_1000026c:                            ; preds = %dec_label_pc_1000026c.preheader, %dec_label_pc_1000025c
  %v0_10000270 = phi i32 [ %v0_10000270.pre, %dec_label_pc_1000026c.preheader ], [ %v1_10000270, %dec_label_pc_1000025c ]
  %v0_1000025c.in = phi i32 [ %tmp, %dec_label_pc_1000026c.preheader ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v0_1000025c = add i32 %v0_1000025c.in, 8
  %v1_10000270 = add i32 %v0_10000270, -1
  store i32 %v1_10000270, i32* %ctr.global-to-local, align 4
  %v2_10000270 = icmp eq i32 %v1_10000270, 0
  br i1 %v2_10000270, label %dec_label_pc_10000274, label %dec_label_pc_1000025c

dec_label_pc_10000274:                            ; preds = %dec_label_pc_1000026c
  ret i32 %arg4

dec_label_pc_10000278:                            ; preds = %dec_label_pc_1000025c, %dec_label_pc_10000238
  %v0_10000278 = phi i32 [ %tmp, %dec_label_pc_10000238 ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v1_10000278 = inttoptr i32 %v0_10000278 to i32*
  %v2_10000278 = load i32, i32* %v1_10000278, align 4
  ret i32 %v2_10000278

; uselistorder directives
  uselistorder i32 %v1_10000270, { 2, 1, 0 }
  uselistorder i32 %v0_1000025c.in, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000026c, { 1, 0 }
}

define i32 @function_10000280(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10000280:
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268436160, i32* @lr, align 4
  %v0_100002bc = call i32 @function_100090e4()
  %v3_100002c0 = icmp eq i32 %v0_100002bc, -1
  br i1 %v3_100002c0, label %dec_label_pc_100002d0, label %dec_label_pc_100002c8

dec_label_pc_100002c8:                            ; preds = %dec_label_pc_10000280
  %tmp14 = icmp slt i32 %v0_100002bc, 1
  br i1 %tmp14, label %dec_label_pc_100002f8, label %dec_label_pc_100002d0

dec_label_pc_100002d0:                            ; preds = %dec_label_pc_100002c8, %dec_label_pc_10000280
  ret i32 %v0_100002bc

dec_label_pc_100002f8:                            ; preds = %dec_label_pc_100002c8
  store i32 268436220, i32* @lr, align 4
  %v0_100002f8 = call i32 @function_100090e4()
  %v3_100002fc = icmp eq i32 %v0_100002f8, -1
  br i1 %v3_100002fc, label %dec_label_pc_10000320, label %dec_label_pc_10000304

dec_label_pc_10000304:                            ; preds = %dec_label_pc_100002f8
  %v3_10000304 = icmp eq i32 %v0_100002f8, 0
  br i1 %v3_10000304, label %dec_label_pc_1000030c, label %dec_label_pc_10000328

dec_label_pc_1000030c:                            ; preds = %dec_label_pc_10000304
  %v0_1000030c = load i32, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10000314.7 to i32), i32* @lr, align 4
  %v1_10000310 = call i32 @function_1000a8e4(i32 %v0_1000030c)
  store i32 268436248, i32* @lr, align 4
  %v0_10000314 = call i32 @function_10009174()
  store i32 ptrtoint ([3 x i8]* @global_var_10000320.8 to i32), i32* @lr, align 4
  %v2_1000031c = call i32 @function_100091bc(i32 %v0_10000314, i32 9)
  br label %dec_label_pc_10000320

dec_label_pc_10000320:                            ; preds = %dec_label_pc_10000358, %dec_label_pc_10000328, %dec_label_pc_100002f8, %dec_label_pc_10000374, %dec_label_pc_1000030c
  %v0_10000324 = call i32 @function_1000a860()
  br label %dec_label_pc_10000328

dec_label_pc_10000328:                            ; preds = %dec_label_pc_10000304, %dec_label_pc_10000320
  %v3_1000032c = load i8, i8* @global_var_1001c200.9, align 1
  %v3_10000330 = icmp eq i8 %v3_1000032c, 0
  br i1 %v3_10000330, label %dec_label_pc_10000320, label %dec_label_pc_10000338

dec_label_pc_10000338:                            ; preds = %dec_label_pc_10000328
  %v4_1000032c = zext i8 %v3_1000032c to i32
  %v3_10000340 = load i32, i32* @global_var_1001c204.10, align 4
  %v1_10000348 = inttoptr i32 %v3_10000340 to i32*
  %v2_10000348 = load i32, i32* %v1_10000348, align 4
  %v1_1000034c = add i32 %v2_10000348, 4
  %v2_1000034c = inttoptr i32 %v1_1000034c to i8*
  %v3_1000034c = load i8, i8* %v2_1000034c, align 1
  %v4_1000034c = zext i8 %v3_1000034c to i32
  %v1_10000350 = load i32, i32* @r30, align 4
  %v4_10000350 = icmp eq i32 %v4_1000034c, %v1_10000350
  br i1 %v4_10000350, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000358:                            ; preds = %dec_label_pc_10000338, %dec_label_pc_10000360
  %v0_1000035c = phi i32 [ %v1_1000035c, %dec_label_pc_10000360 ], [ %v4_1000032c, %dec_label_pc_10000338 ]
  %v0_10000358 = phi i32 [ %v1_10000358, %dec_label_pc_10000360 ], [ 0, %dec_label_pc_10000338 ]
  %v1_10000358 = add i32 %v0_10000358, 1
  %v1_1000035c = add i32 %v0_1000035c, -1
  %v2_1000035c = icmp eq i32 %v1_1000035c, 0
  br i1 %v2_1000035c, label %dec_label_pc_10000320, label %dec_label_pc_10000360

dec_label_pc_10000360:                            ; preds = %dec_label_pc_10000358
  %v1_10000360 = mul i32 %v1_10000358, 4
  %v2_10000364 = add i32 %v1_10000360, %v3_10000340
  %v3_10000364 = inttoptr i32 %v2_10000364 to i32*
  %v4_10000364 = load i32, i32* %v3_10000364, align 4
  %v1_10000368 = add i32 %v4_10000364, 4
  %v2_10000368 = inttoptr i32 %v1_10000368 to i8*
  %v3_10000368 = load i8, i8* %v2_10000368, align 1
  %v4_10000368 = zext i8 %v3_10000368 to i32
  %v4_1000036c = icmp eq i32 %v4_10000368, %v1_10000350
  br i1 %v4_1000036c, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000374:                            ; preds = %dec_label_pc_10000360, %dec_label_pc_10000338
  %v0_10000374 = phi i32 [ %v2_10000348, %dec_label_pc_10000338 ], [ %v4_10000364, %dec_label_pc_10000360 ]
  %v1_10000374 = inttoptr i32 %v0_10000374 to i32*
  %v2_10000374 = load i32, i32* %v1_10000374, align 4
  call void @__pseudo_call(i32 %v2_10000374)
  br label %dec_label_pc_10000320

; uselistorder directives
  uselistorder i32 %v1_1000035c, { 1, 0 }
  uselistorder i8 %v3_1000032c, { 1, 0 }
  uselistorder label %dec_label_pc_10000358, { 1, 0 }
  uselistorder label %dec_label_pc_10000328, { 1, 0 }
  uselistorder label %dec_label_pc_10000320, { 3, 0, 1, 4, 2 }
}

define i32 @function_10000394(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000394:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10000394 = call i32 @__asm_mfcr()
  store i32 %v0_10000394, i32* %r3.global-to-local, align 4
  %v0_100003a4 = load i32, i32* @r30, align 4
  %v0_100003c4 = load i32, i32* @r24, align 4
  %v0_100003cc = load i32, i32* @r26, align 4
  %v0_100003d4 = load i32, i32* @r28, align 4
  %v0_100003d8 = load i32, i32* @r29, align 4
  %tmp25 = icmp ult i32 %arg2, 4
  br i1 %tmp25, label %dec_label_pc_100003f4, label %dec_label_pc_100003e8

dec_label_pc_100003e8:                            ; preds = %dec_label_pc_10000394
  %v3_100003e8 = icmp eq i32 %arg2, 4
  %v1_100003ec = inttoptr i32 %v0_10000394 to i32*
  %v2_100003ec = load i32, i32* %v1_100003ec, align 4
  store i32 %v2_100003ec, i32* %r25.global-to-local, align 4
  br i1 %v3_100003e8, label %dec_label_pc_100003f4, label %dec_label_pc_1000043c

dec_label_pc_100003f4:                            ; preds = %dec_label_pc_100003e8, %dec_label_pc_100005e8, %dec_label_pc_10000454, %dec_label_pc_10000448, %dec_label_pc_1000043c, %dec_label_pc_10000394, %dec_label_pc_1000061c
  %v1_10000408 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10000394)
  store i32 %v0_100003c4, i32* @r24, align 4
  store i32 %v0_100003cc, i32* @r26, align 4
  store i32 %v0_100003d4, i32* @r28, align 4
  store i32 %v0_100003d8, i32* @r29, align 4
  store i32 %v0_100003a4, i32* @r30, align 4
  %v0_10000438 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000438

dec_label_pc_1000043c:                            ; preds = %dec_label_pc_100003e8
  %v3_1000043c = icmp eq i32 %arg2, 5
  %v1_10000440 = add i32 %v0_10000394, 4
  %v2_10000440 = inttoptr i32 %v1_10000440 to i8*
  %v3_10000440 = load i8, i8* %v2_10000440, align 1
  %v4_10000440 = zext i8 %v3_10000440 to i32
  store i32 %v4_10000440, i32* %r22.global-to-local, align 4
  br i1 %v3_1000043c, label %dec_label_pc_100003f4, label %dec_label_pc_10000448

dec_label_pc_10000448:                            ; preds = %dec_label_pc_1000043c
  %v1_10000448 = add i32 %v0_10000394, 5
  %v2_10000448 = inttoptr i32 %v1_10000448 to i8*
  %v3_10000448 = load i8, i8* %v2_10000448, align 1
  %v4_10000448 = zext i8 %v3_10000448 to i32
  store i32 %v4_10000448, i32* @r26, align 4
  %v3_1000044c = icmp eq i8 %v3_10000448, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000044c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000044c, label %dec_label_pc_100003f4, label %dec_label_pc_10000454

dec_label_pc_10000454:                            ; preds = %dec_label_pc_10000448
  %v1_10000454 = mul nuw nsw i32 %v4_10000448, 5
  store i32 %v1_10000454, i32* @r27, align 4
  %v1_10000458 = add i32 %arg2, -6
  store i32 %v1_10000458, i32* @r28, align 4
  %v2_1000045c = icmp ult i32 %v1_10000458, %v1_10000454
  br i1 %v2_1000045c, label %dec_label_pc_100003f4, label %dec_label_pc_10000464

dec_label_pc_10000464:                            ; preds = %dec_label_pc_10000454
  store i32 %v4_10000448, i32* %r3.global-to-local, align 4
  store i32 268436592, i32* @lr, align 4
  %v2_1000046c = call i32 @function_1000a148(i32 %v4_10000448, i32 24)
  store i32 %v2_1000046c, i32* %r3.global-to-local, align 4
  %v0_10000470 = load i32, i32* @r31, align 4
  %v1_10000470 = add i32 %v0_10000470, 6
  store i32 %v1_10000470, i32* @r29, align 4
  store i32 %v2_1000046c, i32* %r20.global-to-local, align 4
  %v0_10000478 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000478 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000478 = or i1 %v0_10000478, %v1_10000478
  br i1 %v2_10000478, label %dec_label_pc_100004d4thread-pre-split, label %dec_label_pc_1000047c

dec_label_pc_1000047c:                            ; preds = %dec_label_pc_10000464
  %v0_1000047c = load i32, i32* @r27, align 4
  store i32 %v2_1000046c, i32* %r11.global-to-local, align 4
  %tmp29 = mul i32 %v0_1000047c, -858993459
  store i32 2, i32* %r10.global-to-local, align 4
  store i32 %tmp29, i32* %r9.global-to-local, align 4
  store i32 %tmp29, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004a4:                            ; preds = %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge, %dec_label_pc_1000047c
  %v2_100004b0 = phi i32 [ %v1_100004c0, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v2_1000046c, %dec_label_pc_1000047c ]
  %v0_100004ac = phi i32 [ %v0_100004a4.pre, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v1_10000470, %dec_label_pc_1000047c ]
  %v1_100004a4 = add i32 %v0_100004ac, 4
  %v2_100004a4 = inttoptr i32 %v1_100004a4 to i8*
  %v3_100004a4 = load i8, i8* %v2_100004a4, align 1
  %v1_100004a8 = inttoptr i32 %v0_100004ac to i32*
  %v2_100004a8 = load i32, i32* %v1_100004a8, align 4
  store i32 %v2_100004a8, i32* %r9.global-to-local, align 4
  %v1_100004ac = add i32 %v0_100004ac, 5
  store i32 %v1_100004ac, i32* @r29, align 4
  %v3_100004b0 = add i32 %v2_100004b0, 20
  %v4_100004b0 = inttoptr i32 %v3_100004b0 to i8*
  store i8 %v3_100004a4, i8* %v4_100004b0, align 1
  %v0_100004b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b4 = add i32 %v1_100004b4, 4
  %v3_100004b4 = inttoptr i32 %v2_100004b4 to i32*
  store i32 %v0_100004b4, i32* %v3_100004b4, align 4
  %v0_100004b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b8 = add i32 %v1_100004b8, 16
  %v3_100004b8 = inttoptr i32 %v2_100004b8 to i32*
  store i32 %v0_100004b8, i32* %v3_100004b8, align 4
  %v0_100004bc = load i32, i32* %r10.global-to-local, align 4
  %v1_100004bc = trunc i32 %v0_100004bc to i16
  %v2_100004bc = load i32, i32* %r11.global-to-local, align 4
  %v3_100004bc = inttoptr i32 %v2_100004bc to i16*
  store i16 %v1_100004bc, i16* %v3_100004bc, align 2
  %v0_100004c0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100004c0 = add i32 %v0_100004c0, 24
  store i32 %v1_100004c0, i32* %r11.global-to-local, align 4
  %v0_100004c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100004c4 = add i32 %v0_100004c4, -1
  store i32 %v1_100004c4, i32* %ctr.global-to-local, align 4
  %v2_100004c4 = icmp eq i32 %v1_100004c4, 0
  br i1 %v2_100004c4, label %dec_label_pc_100004c8, label %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge

dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge: ; preds = %dec_label_pc_100004a4
  %v0_100004a4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004c8:                            ; preds = %dec_label_pc_100004a4
  %v0_100004c8 = load i32, i32* @r26, align 4
  %v1_100004c8 = mul i32 %v0_100004c8, -5
  %v0_100004cc = load i32, i32* @r30, align 4
  %v2_100004cc = add i32 %v0_100004cc, %v1_100004c8
  store i32 %v2_100004cc, i32* %r9.global-to-local, align 4
  %v1_100004d0 = add i32 %v2_100004cc, -6
  store i32 %v1_100004d0, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4thread-pre-split:            ; preds = %dec_label_pc_10000464
  %v0_100004d4.pr = load i32, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4:                            ; preds = %dec_label_pc_100004d4thread-pre-split, %dec_label_pc_100004c8
  %v0_100004d4 = phi i32 [ %v0_100004d4.pr, %dec_label_pc_100004d4thread-pre-split ], [ %v1_100004d0, %dec_label_pc_100004c8 ]
  %v3_100004d4 = icmp eq i32 %v0_100004d4, 0
  store i32 0, i32* %r21.global-to-local, align 4
  br i1 %v3_100004d4, label %dec_label_pc_100005d8, label %dec_label_pc_100004e0

dec_label_pc_100004e0:                            ; preds = %dec_label_pc_100004d4
  %v0_100004e0 = load i32, i32* @r29, align 4
  %v1_100004e0 = inttoptr i32 %v0_100004e0 to i8*
  %v2_100004e0 = load i8, i8* %v1_100004e0, align 1
  %v3_100004e0 = zext i8 %v2_100004e0 to i32
  store i32 %v3_100004e0, i32* @r24, align 4
  %v3_100004e4 = icmp eq i8 %v2_100004e0, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100004e4, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100004e4, label %dec_label_pc_100005b0, label %dec_label_pc_100004ec

dec_label_pc_100004ec:                            ; preds = %dec_label_pc_100004e0
  store i32 %v3_100004e0, i32* %r3.global-to-local, align 4
  store i32 268436728, i32* @lr, align 4
  %v2_100004f4 = call i32 @function_1000a148(i32 %v3_100004e0, i32 8)
  store i32 %v2_100004f4, i32* %r3.global-to-local, align 4
  store i32 %v2_100004f4, i32* %r21.global-to-local, align 4
  %v0_100004fc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100004fc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100004fc = or i1 %v0_100004fc, %v1_100004fc
  br i1 %v2_100004fc, label %dec_label_pc_100005b0, label %dec_label_pc_10000500

dec_label_pc_10000500:                            ; preds = %dec_label_pc_100004ec
  %v0_10000500 = load i32, i32* @r28, align 4
  %v1_10000500 = add i32 %v0_10000500, -1
  %v4_10000500 = icmp eq i32 %v1_10000500, 0
  store i32 %v1_10000500, i32* %ctr.global-to-local, align 4
  br i1 %v4_10000500, label %dec_label_pc_100005d8, label %dec_label_pc_1000050c

dec_label_pc_1000050c:                            ; preds = %dec_label_pc_10000500
  %v0_1000050c = load i32, i32* @r29, align 4
  %v1_1000050c = add i32 %v0_1000050c, 1
  %v2_1000050c = inttoptr i32 %v1_1000050c to i8*
  %v3_1000050c = load i8, i8* %v2_1000050c, align 1
  store i32 %v1_1000050c, i32* %r9.global-to-local, align 4
  %v3_10000514 = add i32 %v2_100004f4, 4
  %v4_10000514 = inttoptr i32 %v3_10000514 to i8*
  store i8 %v3_1000050c, i8* %v4_10000514, align 1
  %v0_10000518 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10000518 = add i32 %v0_10000518, -1
  store i32 %v1_10000518, i32* %ctr.global-to-local, align 4
  %v2_10000518 = icmp eq i32 %v1_10000518, 0
  br i1 %v2_10000518, label %dec_label_pc_100005d8, label %dec_label_pc_1000051c

dec_label_pc_1000051c:                            ; preds = %dec_label_pc_1000050c
  store i32 %v1_10000518, i32* %r11.global-to-local, align 4
  %v0_10000520 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000520 = add i32 %v0_10000520, 1
  %v2_10000520 = inttoptr i32 %v1_10000520 to i8*
  %v3_10000520 = load i8, i8* %v2_10000520, align 1
  %v4_10000520 = zext i8 %v3_10000520 to i32
  %v1_10000528 = add i32 %v0_10000518, -2
  store i32 %v1_10000528, i32* @r29, align 4
  %v2_1000052c = icmp slt i32 %v1_10000528, %v4_10000520
  br i1 %v2_1000052c, label %dec_label_pc_100005d8, label %dec_label_pc_10000534

dec_label_pc_10000534:                            ; preds = %dec_label_pc_1000051c
  %v1_10000534 = add i32 %v0_10000520, 2
  store i32 %v1_10000534, i32* @r28, align 4
  %v0_10000538 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000538 = add i32 %v0_10000538, 8
  store i32 %v1_10000538, i32* %r23.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000057c

dec_label_pc_10000548:                            ; preds = %dec_label_pc_1000057c
  %v5_100005a4 = icmp eq i32 %v2_100005a4, 0
  br i1 %v5_100005a4, label %dec_label_pc_100005d8, label %dec_label_pc_1000054c

dec_label_pc_1000054c:                            ; preds = %dec_label_pc_10000548
  %v1_1000054c = load i32, i32* @r28, align 4
  %v2_1000054c = add i32 %v1_1000054c, %v0_100005a4
  %v3_1000054c = inttoptr i32 %v2_1000054c to i8*
  %v4_1000054c = load i8, i8* %v3_1000054c, align 1
  store i32 %v2_1000054c, i32* %r3.global-to-local, align 4
  %v1_10000554 = add i32 %v2_1000054c, 1
  store i32 %v1_10000554, i32* %r9.global-to-local, align 4
  %v2_10000558 = load i32, i32* @r30, align 4
  %v3_10000558 = add i32 %v2_10000558, 4
  %v4_10000558 = inttoptr i32 %v3_10000558 to i8*
  store i8 %v4_1000054c, i8* %v4_10000558, align 1
  %v0_1000055c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000055c = add i32 %v0_1000055c, -1
  %v4_1000055c = icmp eq i32 %v1_1000055c, 0
  %v0_10000560 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000560 = add i32 %v0_10000560, 1
  store i32 %v1_10000560, i32* @r28, align 4
  br i1 %v4_1000055c, label %dec_label_pc_100005d8, label %dec_label_pc_10000568

dec_label_pc_10000568:                            ; preds = %dec_label_pc_1000054c
  %v0_10000568 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000568 = add i32 %v0_10000568, 1
  %v2_10000568 = inttoptr i32 %v1_10000568 to i8*
  %v3_10000568 = load i8, i8* %v2_10000568, align 1
  %v4_10000568 = zext i8 %v3_10000568 to i32
  store i32 %v1_1000055c, i32* %r9.global-to-local, align 4
  %v1_10000570 = add i32 %v0_1000055c, -2
  store i32 %v1_10000570, i32* @r29, align 4
  %v2_10000574 = icmp slt i32 %v1_10000570, %v4_10000568
  br i1 %v2_10000574, label %dec_label_pc_100005d8, label %dec_label_pc_1000057c

dec_label_pc_1000057c:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_10000534
  %v0_10000580 = phi i32 [ %v4_10000568, %dec_label_pc_10000568 ], [ %v4_10000520, %dec_label_pc_10000534 ]
  %v1_10000580 = add nuw nsw i32 %v0_10000580, 1
  store i32 %v1_10000580, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000588.11 to i32), i32* @lr, align 4
  %v2_10000584 = call i32 @function_1000a148(i32 %v1_10000580, i32 1)
  store i32 %v2_10000584, i32* %r3.global-to-local, align 4
  %v0_10000588 = load i32, i32* @r27, align 4
  %v1_10000588 = add i32 %v0_10000588, 1
  store i32 %v1_10000588, i32* @r27, align 4
  %v1_1000058c = load i32, i32* @r30, align 4
  %v2_1000058c = inttoptr i32 %v1_1000058c to i32*
  store i32 %v2_10000584, i32* %v2_1000058c, align 4
  %v0_10000590 = load i32, i32* @r28, align 4
  %v0_10000594 = load i32, i32* @r31, align 4
  %v0_10000598 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000598, i32* @r30, align 4
  store i32 268436896, i32* @lr, align 4
  %v3_1000059c = call i32 @function_10008960(i32 %v2_10000584, i32 %v0_10000590, i32 %v0_10000594)
  store i32 %v3_1000059c, i32* %r3.global-to-local, align 4
  %v0_100005a0 = load i32, i32* @r27, align 4
  %v1_100005a0 = load i32, i32* @r24, align 4
  %v4_100005a0 = icmp eq i32 %v0_100005a0, %v1_100005a0
  %v0_100005a4 = load i32, i32* @r31, align 4
  %v1_100005a4 = load i32, i32* @r29, align 4
  %v2_100005a4 = sub i32 %v1_100005a4, %v0_100005a4
  store i32 %v2_100005a4, i32* %r11.global-to-local, align 4
  %v0_100005a8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100005a8 = add i32 %v0_100005a8, 8
  store i32 %v1_100005a8, i32* %r23.global-to-local, align 4
  br i1 %v4_100005a0, label %dec_label_pc_100005b0, label %dec_label_pc_10000548

dec_label_pc_100005b0:                            ; preds = %dec_label_pc_1000057c, %dec_label_pc_100004ec, %dec_label_pc_100004e0
  %v0_100005b0 = call i32 @function_100097b8()
  %v2_100005b8 = inttoptr i32 %v0_100005b0 to i32*
  store i32 0, i32* %v2_100005b8, align 4
  %v0_100005bc = load i32, i32* %r22.global-to-local, align 4
  %v0_100005c0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100005c0, i32* %r3.global-to-local, align 4
  %v0_100005c4 = load i32, i32* @r26, align 4
  %v0_100005c8 = load i32, i32* %r20.global-to-local, align 4
  %v0_100005cc = load i32, i32* @r24, align 4
  %v0_100005d0 = load i32, i32* %r21.global-to-local, align 4
  store i32 268436952, i32* @lr, align 4
  %v6_100005d4 = call i32 @function_10000280(i32 %v0_100005c0, i32 %v0_100005bc, i32 %v0_100005c4, i32 %v0_100005c8, i32 %v0_100005cc, i32 %v0_100005d0)
  store i32 %v6_100005d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005d8

dec_label_pc_100005d8:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_1000054c, %dec_label_pc_10000548, %dec_label_pc_1000051c, %dec_label_pc_1000050c, %dec_label_pc_10000500, %dec_label_pc_100004d4, %dec_label_pc_100005b0
  %v0_100005d8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100005d8 = icmp eq i32 %v0_100005d8, 0
  br i1 %v3_100005d8, label %dec_label_pc_100005e8, label %dec_label_pc_100005e0

dec_label_pc_100005e0:                            ; preds = %dec_label_pc_100005d8
  store i32 %v0_100005d8, i32* @r3, align 4
  store i32 268436968, i32* @lr, align 4
  %v0_100005e4 = call i32 @function_1000a1b8()
  store i32 %v0_100005e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005e8

dec_label_pc_100005e8:                            ; preds = %dec_label_pc_100005d8, %dec_label_pc_100005e0
  %v0_100005e8 = load i32, i32* %r21.global-to-local, align 4
  %v3_100005e8 = icmp eq i32 %v0_100005e8, 0
  br i1 %v3_100005e8, label %dec_label_pc_100003f4, label %dec_label_pc_100005f0

dec_label_pc_100005f0:                            ; preds = %dec_label_pc_100005e8
  %v0_100005f0 = load i32, i32* @r24, align 4
  %tmp27 = icmp slt i32 %v0_100005f0, 1
  br i1 %tmp27, label %dec_label_pc_1000061c, label %dec_label_pc_100005f8

dec_label_pc_100005f8:                            ; preds = %dec_label_pc_100005f0
  br label %dec_label_pc_100005fc

dec_label_pc_100005fc:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f8
  %v0_100006146 = phi i32 [ %v0_100005f0, %dec_label_pc_100005f8 ], [ %v0_10000614, %dec_label_pc_10000614 ]
  %v0_10000604 = phi i32 [ %v0_100005e8, %dec_label_pc_100005f8 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  %v0_100005fc = phi i32 [ 0, %dec_label_pc_100005f8 ], [ %v1_10000614, %dec_label_pc_10000614 ]
  %v1_100005fc = mul i32 %v0_100005fc, 8
  %v1_10000600 = add i32 %v0_100005fc, 1
  store i32 %v1_10000600, i32* @r31, align 4
  %v2_10000604 = add i32 %v1_100005fc, %v0_10000604
  %v3_10000604 = inttoptr i32 %v2_10000604 to i32*
  %v4_10000604 = load i32, i32* %v3_10000604, align 4
  store i32 %v4_10000604, i32* @r3, align 4
  %v3_10000608 = icmp eq i32 %v4_10000604, 0
  br i1 %v3_10000608, label %dec_label_pc_10000614, label %dec_label_pc_10000610

dec_label_pc_10000610:                            ; preds = %dec_label_pc_100005fc
  store i32 268437012, i32* @lr, align 4
  %v0_10000610 = call i32 @function_1000a1b8()
  store i32 %v0_10000610, i32* %r3.global-to-local, align 4
  %v0_10000614.pre = load i32, i32* @r24, align 4
  %v1_10000614.pre = load i32, i32* @r31, align 4
  %v0_1000061c.pre.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_10000614

dec_label_pc_10000614:                            ; preds = %dec_label_pc_100005fc, %dec_label_pc_10000610
  %v0_1000061c.pre = phi i32 [ %v0_10000604, %dec_label_pc_100005fc ], [ %v0_1000061c.pre.pre, %dec_label_pc_10000610 ]
  %v1_10000614 = phi i32 [ %v1_10000600, %dec_label_pc_100005fc ], [ %v1_10000614.pre, %dec_label_pc_10000610 ]
  %v0_10000614 = phi i32 [ %v0_100006146, %dec_label_pc_100005fc ], [ %v0_10000614.pre, %dec_label_pc_10000610 ]
  %v4_10000614 = icmp eq i32 %v0_10000614, %v1_10000614
  br i1 %v4_10000614, label %dec_label_pc_1000061c, label %dec_label_pc_100005fc

dec_label_pc_1000061c:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f0
  %v0_1000061c = phi i32 [ %v0_100005e8, %dec_label_pc_100005f0 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  store i32 %v0_1000061c, i32* @r3, align 4
  store i32 268437028, i32* @lr, align 4
  %v0_10000620 = call i32 @function_1000a1b8()
  store i32 %v0_10000620, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100003f4

; uselistorder directives
  uselistorder i32 %v0_10000614, { 1, 0 }
  uselistorder i32 %v1_10000614, { 1, 0 }
  uselistorder i32 %v0_100005fc, { 1, 0 }
  uselistorder i32 %v2_100005a4, { 1, 0 }
  uselistorder i32 %v0_100005a4, { 1, 0 }
  uselistorder i32 %v2_1000054c, { 1, 0, 2 }
  uselistorder i32 %v1_10000518, { 0, 2, 1 }
  uselistorder i32 %v3_100004e0, { 1, 0, 2 }
  uselistorder i32 %v1_100004c4, { 1, 0 }
  uselistorder i32 %v1_100004c0, { 1, 0 }
  uselistorder i32 %v0_100004ac, { 0, 2, 1 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %v4_10000448, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10000394, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 3, 17, 6, 2, 9, 10, 7, 8, 11, 12, 13, 14, 15, 16, 1, 0 }
  uselistorder i32* %r21.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r20.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg2, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10000614, { 1, 0 }
  uselistorder label %dec_label_pc_100005e8, { 1, 0 }
  uselistorder label %dec_label_pc_100005d8, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_100003f4, { 6, 1, 2, 3, 4, 0, 5 }
}

define i32 @function_10000628(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10000628:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_1000066c, label %dec_label_pc_10000640

dec_label_pc_10000640:                            ; preds = %dec_label_pc_10000628
  %v0_10000640 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000640 = add i32 %v0_10000640, 4
  %v2_10000640 = inttoptr i32 %v1_10000640 to i8*
  %v3_10000640 = load i8, i8* %v2_10000640, align 1
  %v4_10000640 = zext i8 %v3_10000640 to i32
  %v4_10000648 = icmp eq i32 %v4_10000640, %arg3
  br i1 %v4_10000648, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000654:                            ; preds = %dec_label_pc_10000664
  %v1_10000654 = add i32 %v0_10000654.in, 12
  %v2_10000654 = inttoptr i32 %v1_10000654 to i8*
  %v3_10000654 = load i8, i8* %v2_10000654, align 1
  %v4_10000654 = zext i8 %v3_10000654 to i32
  %v4_1000065c = icmp eq i32 %v4_10000654, %arg3
  br i1 %v4_1000065c, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000664:                            ; preds = %dec_label_pc_10000640, %dec_label_pc_10000654
  %v0_10000668 = phi i32 [ %v1_10000668, %dec_label_pc_10000654 ], [ %arg1, %dec_label_pc_10000640 ]
  %v0_10000654.in = phi i32 [ %v0_10000654, %dec_label_pc_10000654 ], [ %v0_10000640, %dec_label_pc_10000640 ]
  %v0_10000654 = add i32 %v0_10000654.in, 8
  store i32 %v0_10000654, i32* %r4.global-to-local, align 4
  %v1_10000668 = add i32 %v0_10000668, -1
  %v2_10000668 = icmp eq i32 %v1_10000668, 0
  br i1 %v2_10000668, label %dec_label_pc_1000066c, label %dec_label_pc_10000654

dec_label_pc_1000066c:                            ; preds = %dec_label_pc_10000664, %dec_label_pc_10000680, %dec_label_pc_10000628
  ret i32 %arg4

dec_label_pc_10000680:                            ; preds = %dec_label_pc_10000654, %dec_label_pc_10000640
  %v0_10000680 = phi i32 [ %v0_10000640, %dec_label_pc_10000640 ], [ %v0_10000654, %dec_label_pc_10000654 ]
  %v1_10000680 = inttoptr i32 %v0_10000680 to i32*
  %v2_10000680 = load i32, i32* %v1_10000680, align 4
  %v3_10000684 = icmp eq i32 %v2_10000680, 0
  br i1 %v3_10000684, label %dec_label_pc_1000066c, label %dec_label_pc_1000068c

dec_label_pc_1000068c:                            ; preds = %dec_label_pc_10000680
  store i32 268437136, i32* @lr, align 4
  %v1_1000068c = call i32 @function_10009b50(i32 %v2_10000680)
  ret i32 %v1_1000068c

; uselistorder directives
  uselistorder i32 %v1_10000668, { 1, 0 }
  uselistorder i32 %v0_10000654, { 1, 0, 2 }
  uselistorder i32 %v0_10000654.in, { 1, 0 }
  uselistorder i32 %v0_10000640, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000066c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000664, { 1, 0 }
}

define i32 @function_100006a8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100006a8:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_100006ec, label %dec_label_pc_100006c0

dec_label_pc_100006c0:                            ; preds = %dec_label_pc_100006a8
  %v0_100006c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100006c0 = add i32 %v0_100006c0, 4
  %v2_100006c0 = inttoptr i32 %v1_100006c0 to i8*
  %v3_100006c0 = load i8, i8* %v2_100006c0, align 1
  %v4_100006c0 = zext i8 %v3_100006c0 to i32
  %v4_100006c8 = icmp eq i32 %v4_100006c0, %arg3
  br i1 %v4_100006c8, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006d4:                            ; preds = %dec_label_pc_100006e4
  %v1_100006d4 = add i32 %v0_100006d4.in, 12
  %v2_100006d4 = inttoptr i32 %v1_100006d4 to i8*
  %v3_100006d4 = load i8, i8* %v2_100006d4, align 1
  %v4_100006d4 = zext i8 %v3_100006d4 to i32
  %v4_100006dc = icmp eq i32 %v4_100006d4, %arg3
  br i1 %v4_100006dc, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006e4:                            ; preds = %dec_label_pc_100006c0, %dec_label_pc_100006d4
  %v0_100006e8 = phi i32 [ %v1_100006e8, %dec_label_pc_100006d4 ], [ %arg1, %dec_label_pc_100006c0 ]
  %v0_100006d4.in = phi i32 [ %v0_100006d4, %dec_label_pc_100006d4 ], [ %v0_100006c0, %dec_label_pc_100006c0 ]
  %v0_100006d4 = add i32 %v0_100006d4.in, 8
  store i32 %v0_100006d4, i32* %r4.global-to-local, align 4
  %v1_100006e8 = add i32 %v0_100006e8, -1
  %v2_100006e8 = icmp eq i32 %v1_100006e8, 0
  br i1 %v2_100006e8, label %dec_label_pc_100006ec, label %dec_label_pc_100006d4

dec_label_pc_100006ec:                            ; preds = %dec_label_pc_100006e4, %dec_label_pc_10000700, %dec_label_pc_100006a8
  ret i32 %arg4

dec_label_pc_10000700:                            ; preds = %dec_label_pc_100006d4, %dec_label_pc_100006c0
  %v0_10000700 = phi i32 [ %v0_100006c0, %dec_label_pc_100006c0 ], [ %v0_100006d4, %dec_label_pc_100006d4 ]
  %v1_10000700 = inttoptr i32 %v0_10000700 to i32*
  %v2_10000700 = load i32, i32* %v1_10000700, align 4
  store i32 %v2_10000700, i32* @r3, align 4
  %v3_10000704 = icmp eq i32 %v2_10000700, 0
  br i1 %v3_10000704, label %dec_label_pc_100006ec, label %dec_label_pc_1000070c

dec_label_pc_1000070c:                            ; preds = %dec_label_pc_10000700
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268437268, i32* @lr, align 4
  %v2_10000710 = call i32 @function_10008a04(i32 %v2_10000700, i32 10)
  ret i32 %v2_10000710

; uselistorder directives
  uselistorder i32 %v1_100006e8, { 1, 0 }
  uselistorder i32 %v0_100006d4, { 1, 0, 2 }
  uselistorder i32 %v0_100006d4.in, { 1, 0 }
  uselistorder i32 %v0_100006c0, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100006ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100006e4, { 1, 0 }
}

define i32 @function_1000072c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000072c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_10000730 = load i32, i32* @lr, align 4
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v0_1000074c = load i32, i32* @r28, align 4
  store i32 268437336, i32* @lr, align 4
  %v2_10000754 = call i32 @function_1000a148(i32 1, i32 8)
  %v3_10000758 = load i8, i8* @global_var_1001c200.9, align 1
  %v4_10000758 = zext i8 %v3_10000758 to i32
  store i32 %v4_10000758, i32* %r4.global-to-local, align 4
  store i32 %v2_10000754, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000076c = load i32, i32* @global_var_1001c204.10, align 4
  %v2_10000770 = inttoptr i32 %v2_10000754 to i32*
  store i32 268448928, i32* %v2_10000770, align 4
  %v0_10000774 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000774 = mul i32 %v0_10000774, 4
  store i32 %v1_10000774, i32* %r4.global-to-local, align 4
  %v0_10000778 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000778 = trunc i32 %v0_10000778 to i8
  %v2_10000778 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000778 = add i32 %v2_10000778, 4
  %v4_10000778 = inttoptr i32 %v3_10000778 to i8*
  store i8 %v1_10000778, i8* %v4_10000778, align 1
  %v0_1000077c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000077c = add i32 %v0_1000077c, 4
  store i32 %v1_1000077c, i32* %r4.global-to-local, align 4
  store i32 268437380, i32* @lr, align 4
  %v3_10000780 = call i32 @function_1000a2b8(i32 %v3_1000076c, i32 %v1_1000077c, i32 268448928)
  %v3_10000784 = load i8, i8* @global_var_1001c200.9, align 1
  %v4_10000784 = zext i8 %v3_10000784 to i32
  store i32 %v3_10000780, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c201.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000794 = mul nuw nsw i32 %v4_10000784, 4
  %v0_10000798 = load i32, i32* @r28, align 4
  %v3_10000798 = add i32 %v1_10000794, %v3_10000780
  %v4_10000798 = inttoptr i32 %v3_10000798 to i32*
  store i32 %v0_10000798, i32* %v4_10000798, align 4
  %v0_100007a0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007a0, i32* @global_var_1001c204.10, align 4
  %v0_100007a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007a4 = trunc i32 %v0_100007a4 to i8
  store i8 %v1_100007a4, i8* @global_var_1001c200.9, align 1
  store i32 268437420, i32* @lr, align 4
  %v2_100007a8 = call i32 @function_1000a148(i32 1, i32 8)
  %v3_100007ac = load i8, i8* @global_var_1001c200.9, align 1
  %v4_100007ac = zext i8 %v3_100007ac to i32
  store i32 %v4_100007ac, i32* %r4.global-to-local, align 4
  store i32 %v2_100007a8, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_100007c0 = load i32, i32* @global_var_1001c204.10, align 4
  %v2_100007c4 = inttoptr i32 %v2_100007a8 to i32*
  store i32 268450172, i32* %v2_100007c4, align 4
  %v0_100007c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007c8 = mul i32 %v0_100007c8, 4
  store i32 %v1_100007c8, i32* %r4.global-to-local, align 4
  %v0_100007cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100007cc = trunc i32 %v0_100007cc to i8
  %v2_100007cc = load i32, i32* %r28.global-to-local, align 4
  %v3_100007cc = add i32 %v2_100007cc, 4
  %v4_100007cc = inttoptr i32 %v3_100007cc to i8*
  store i8 %v1_100007cc, i8* %v4_100007cc, align 1
  %v0_100007d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007d0 = add i32 %v0_100007d0, 4
  store i32 %v1_100007d0, i32* %r4.global-to-local, align 4
  store i32 268437464, i32* @lr, align 4
  %v3_100007d4 = call i32 @function_1000a2b8(i32 %v3_100007c0, i32 %v1_100007d0, i32 268450172)
  %v3_100007d8 = load i8, i8* @global_var_1001c200.9, align 1
  %v4_100007d8 = zext i8 %v3_100007d8 to i32
  store i32 %v3_100007d4, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c201.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100007e8 = mul nuw nsw i32 %v4_100007d8, 4
  %v0_100007ec = load i32, i32* @r28, align 4
  %v3_100007ec = add i32 %v1_100007e8, %v3_100007d4
  %v4_100007ec = inttoptr i32 %v3_100007ec to i32*
  store i32 %v0_100007ec, i32* %v4_100007ec, align 4
  %v0_100007f4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007f4, i32* @global_var_1001c204.10, align 4
  %v0_100007f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007f8 = trunc i32 %v0_100007f8 to i8
  store i8 %v1_100007f8, i8* @global_var_1001c200.9, align 1
  store i32 268437504, i32* @lr, align 4
  %v2_100007fc = call i32 @function_1000a148(i32 1, i32 8)
  %v3_10000800 = load i8, i8* @global_var_1001c200.9, align 1
  %v4_10000800 = zext i8 %v3_10000800 to i32
  store i32 %v4_10000800, i32* %r4.global-to-local, align 4
  store i32 %v2_100007fc, i32* %r28.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10000814 = load i32, i32* @global_var_1001c204.10, align 4
  %v2_10000818 = inttoptr i32 %v2_100007fc to i32*
  store i32 268451164, i32* %v2_10000818, align 4
  %v0_1000081c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000081c = mul i32 %v0_1000081c, 4
  store i32 %v1_1000081c, i32* %r4.global-to-local, align 4
  %v0_10000820 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000820 = trunc i32 %v0_10000820 to i8
  %v2_10000820 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000820 = add i32 %v2_10000820, 4
  %v4_10000820 = inttoptr i32 %v3_10000820 to i8*
  store i8 %v1_10000820, i8* %v4_10000820, align 1
  %v0_10000824 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000824 = add i32 %v0_10000824, 4
  store i32 %v1_10000824, i32* %r4.global-to-local, align 4
  store i32 268437548, i32* @lr, align 4
  %v3_10000828 = call i32 @function_1000a2b8(i32 %v3_10000814, i32 %v1_10000824, i32 268451164)
  %v3_1000082c = load i8, i8* @global_var_1001c200.9, align 1
  %v4_1000082c = zext i8 %v3_1000082c to i32
  store i32 %v3_10000828, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c201.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000083c = mul nuw nsw i32 %v4_1000082c, 4
  %v0_10000840 = load i32, i32* @r28, align 4
  %v3_10000840 = add i32 %v1_1000083c, %v3_10000828
  %v4_10000840 = inttoptr i32 %v3_10000840 to i32*
  store i32 %v0_10000840, i32* %v4_10000840, align 4
  %v0_10000848 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000848, i32* @global_var_1001c204.10, align 4
  %v0_1000084c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000084c = trunc i32 %v0_1000084c to i8
  store i8 %v1_1000084c, i8* @global_var_1001c200.9, align 1
  store i32 268437588, i32* @lr, align 4
  %v2_10000850 = call i32 @function_1000a148(i32 1, i32 8)
  %v3_10000854 = load i8, i8* @global_var_1001c200.9, align 1
  %v4_10000854 = zext i8 %v3_10000854 to i32
  store i32 %v4_10000854, i32* %r4.global-to-local, align 4
  store i32 %v2_10000850, i32* %r28.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_10000868 = load i32, i32* @global_var_1001c204.10, align 4
  %v2_1000086c = inttoptr i32 %v2_10000850 to i32*
  store i32 268448104, i32* %v2_1000086c, align 4
  %v0_10000870 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000870 = mul i32 %v0_10000870, 4
  store i32 %v1_10000870, i32* %r4.global-to-local, align 4
  %v0_10000874 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000874 = trunc i32 %v0_10000874 to i8
  %v2_10000874 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000874 = add i32 %v2_10000874, 4
  %v4_10000874 = inttoptr i32 %v3_10000874 to i8*
  store i8 %v1_10000874, i8* %v4_10000874, align 1
  %v0_10000878 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000878 = add i32 %v0_10000878, 4
  store i32 %v1_10000878, i32* %r4.global-to-local, align 4
  store i32 268437632, i32* @lr, align 4
  %v3_1000087c = call i32 @function_1000a2b8(i32 %v3_10000868, i32 %v1_10000878, i32 268448104)
  %v3_10000880 = load i8, i8* @global_var_1001c200.9, align 1
  %v4_10000880 = zext i8 %v3_10000880 to i32
  store i32 %v3_1000087c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c201.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000890 = mul nuw nsw i32 %v4_10000880, 4
  %v0_10000894 = load i32, i32* @r28, align 4
  %v3_10000894 = add i32 %v1_10000890, %v3_1000087c
  %v4_10000894 = inttoptr i32 %v3_10000894 to i32*
  store i32 %v0_10000894, i32* %v4_10000894, align 4
  %v0_1000089c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000089c, i32* @global_var_1001c204.10, align 4
  %v0_100008a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008a0 = trunc i32 %v0_100008a0 to i8
  store i8 %v1_100008a0, i8* @global_var_1001c200.9, align 1
  store i32 268437672, i32* @lr, align 4
  %v2_100008a4 = call i32 @function_1000a148(i32 1, i32 8)
  %v3_100008a8 = load i8, i8* @global_var_1001c200.9, align 1
  %v4_100008a8 = zext i8 %v3_100008a8 to i32
  store i32 %v4_100008a8, i32* %r4.global-to-local, align 4
  store i32 %v2_100008a4, i32* %r28.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_100008bc = load i32, i32* @global_var_1001c204.10, align 4
  %v2_100008c0 = inttoptr i32 %v2_100008a4 to i32*
  store i32 268446660, i32* %v2_100008c0, align 4
  %v0_100008c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100008c4 = mul i32 %v0_100008c4, 4
  store i32 %v1_100008c4, i32* %r4.global-to-local, align 4
  %v0_100008c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008c8 = trunc i32 %v0_100008c8 to i8
  %v2_100008c8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100008c8 = add i32 %v2_100008c8, 4
  %v4_100008c8 = inttoptr i32 %v3_100008c8 to i8*
  store i8 %v1_100008c8, i8* %v4_100008c8, align 1
  %v0_100008cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100008cc = add i32 %v0_100008cc, 4
  store i32 %v1_100008cc, i32* %r4.global-to-local, align 4
  store i32 268437716, i32* @lr, align 4
  %v3_100008d0 = call i32 @function_1000a2b8(i32 %v3_100008bc, i32 %v1_100008cc, i32 268446660)
  %v3_100008d4 = load i8, i8* @global_var_1001c200.9, align 1
  %v4_100008d4 = zext i8 %v3_100008d4 to i32
  store i32 %v3_100008d0, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c201.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100008e4 = mul nuw nsw i32 %v4_100008d4, 4
  %v0_100008e8 = load i32, i32* @r28, align 4
  %v3_100008e8 = add i32 %v1_100008e4, %v3_100008d0
  %v4_100008e8 = inttoptr i32 %v3_100008e8 to i32*
  store i32 %v0_100008e8, i32* %v4_100008e8, align 4
  %v0_100008f0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100008f0, i32* @global_var_1001c204.10, align 4
  %v0_100008f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008f4 = trunc i32 %v0_100008f4 to i8
  store i8 %v1_100008f4, i8* @global_var_1001c200.9, align 1
  store i32 268437756, i32* @lr, align 4
  %v2_100008f8 = call i32 @function_1000a148(i32 1, i32 8)
  %v3_100008fc = load i8, i8* @global_var_1001c200.9, align 1
  %v4_100008fc = zext i8 %v3_100008fc to i32
  store i32 %v4_100008fc, i32* %r4.global-to-local, align 4
  store i32 %v2_100008f8, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_10000910 = load i32, i32* @global_var_1001c204.10, align 4
  %v2_10000914 = inttoptr i32 %v2_100008f8 to i32*
  store i32 268445152, i32* %v2_10000914, align 4
  %v0_10000918 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000918 = mul i32 %v0_10000918, 4
  store i32 %v1_10000918, i32* %r4.global-to-local, align 4
  %v0_1000091c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000091c = trunc i32 %v0_1000091c to i8
  %v2_1000091c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000091c = add i32 %v2_1000091c, 4
  %v4_1000091c = inttoptr i32 %v3_1000091c to i8*
  store i8 %v1_1000091c, i8* %v4_1000091c, align 1
  %v0_10000920 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000920 = add i32 %v0_10000920, 4
  store i32 %v1_10000920, i32* %r4.global-to-local, align 4
  store i32 268437800, i32* @lr, align 4
  %v3_10000924 = call i32 @function_1000a2b8(i32 %v3_10000910, i32 %v1_10000920, i32 268445152)
  %v3_10000928 = load i8, i8* @global_var_1001c200.9, align 1
  %v4_10000928 = zext i8 %v3_10000928 to i32
  store i32 %v3_10000924, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c201.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000938 = mul nuw nsw i32 %v4_10000928, 4
  %v0_1000093c = load i32, i32* @r28, align 4
  %v3_1000093c = add i32 %v1_10000938, %v3_10000924
  %v4_1000093c = inttoptr i32 %v3_1000093c to i32*
  store i32 %v0_1000093c, i32* %v4_1000093c, align 4
  %v0_10000944 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000944, i32* @global_var_1001c204.10, align 4
  %v0_10000948 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000948 = trunc i32 %v0_10000948 to i8
  store i8 %v1_10000948, i8* @global_var_1001c200.9, align 1
  store i32 268437840, i32* @lr, align 4
  %v2_1000094c = call i32 @function_1000a148(i32 1, i32 8)
  %v3_10000950 = load i8, i8* @global_var_1001c200.9, align 1
  %v4_10000950 = zext i8 %v3_10000950 to i32
  store i32 %v4_10000950, i32* %r4.global-to-local, align 4
  store i32 %v2_1000094c, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_10000964 = load i32, i32* @global_var_1001c204.10, align 4
  %v2_10000968 = inttoptr i32 %v2_1000094c to i32*
  store i32 268443544, i32* %v2_10000968, align 4
  %v0_1000096c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000096c = mul i32 %v0_1000096c, 4
  store i32 %v1_1000096c, i32* %r4.global-to-local, align 4
  %v0_10000970 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000970 = trunc i32 %v0_10000970 to i8
  %v2_10000970 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000970 = add i32 %v2_10000970, 4
  %v4_10000970 = inttoptr i32 %v3_10000970 to i8*
  store i8 %v1_10000970, i8* %v4_10000970, align 1
  %v0_10000974 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000974 = add i32 %v0_10000974, 4
  store i32 %v1_10000974, i32* %r4.global-to-local, align 4
  store i32 268437884, i32* @lr, align 4
  %v3_10000978 = call i32 @function_1000a2b8(i32 %v3_10000964, i32 %v1_10000974, i32 268443544)
  %v3_1000097c = load i8, i8* @global_var_1001c200.9, align 1
  %v4_1000097c = zext i8 %v3_1000097c to i32
  store i32 %v3_10000978, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c201.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000098c = mul nuw nsw i32 %v4_1000097c, 4
  %v0_10000990 = load i32, i32* @r28, align 4
  %v3_10000990 = add i32 %v1_1000098c, %v3_10000978
  %v4_10000990 = inttoptr i32 %v3_10000990 to i32*
  store i32 %v0_10000990, i32* %v4_10000990, align 4
  %v0_10000998 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000998, i32* @global_var_1001c204.10, align 4
  %v0_1000099c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000099c = trunc i32 %v0_1000099c to i8
  store i8 %v1_1000099c, i8* @global_var_1001c200.9, align 1
  store i32 268437924, i32* @lr, align 4
  %v2_100009a0 = call i32 @function_1000a148(i32 1, i32 8)
  %v3_100009a4 = load i8, i8* @global_var_1001c200.9, align 1
  %v4_100009a4 = zext i8 %v3_100009a4 to i32
  store i32 %v4_100009a4, i32* %r4.global-to-local, align 4
  store i32 %v2_100009a0, i32* %r28.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_100009b8 = load i32, i32* @global_var_1001c204.10, align 4
  %v2_100009bc = inttoptr i32 %v2_100009a0 to i32*
  store i32 268441936, i32* %v2_100009bc, align 4
  %v0_100009c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c0 = mul i32 %v0_100009c0, 4
  store i32 %v1_100009c0, i32* %r4.global-to-local, align 4
  %v0_100009c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009c4 = trunc i32 %v0_100009c4 to i8
  %v2_100009c4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100009c4 = add i32 %v2_100009c4, 4
  %v4_100009c4 = inttoptr i32 %v3_100009c4 to i8*
  store i8 %v1_100009c4, i8* %v4_100009c4, align 1
  %v0_100009c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c8 = add i32 %v0_100009c8, 4
  store i32 %v1_100009c8, i32* %r4.global-to-local, align 4
  store i32 268437968, i32* @lr, align 4
  %v3_100009cc = call i32 @function_1000a2b8(i32 %v3_100009b8, i32 %v1_100009c8, i32 268441936)
  %v3_100009d0 = load i8, i8* @global_var_1001c200.9, align 1
  %v4_100009d0 = zext i8 %v3_100009d0 to i32
  store i32 %v3_100009cc, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c201.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100009e0 = mul nuw nsw i32 %v4_100009d0, 4
  %v0_100009e4 = load i32, i32* @r28, align 4
  %v3_100009e4 = add i32 %v1_100009e0, %v3_100009cc
  %v4_100009e4 = inttoptr i32 %v3_100009e4 to i32*
  store i32 %v0_100009e4, i32* %v4_100009e4, align 4
  %v0_100009ec = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100009ec, i32* @global_var_1001c204.10, align 4
  %v0_100009f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009f0 = trunc i32 %v0_100009f0 to i8
  store i8 %v1_100009f0, i8* @global_var_1001c200.9, align 1
  store i32 268438008, i32* @lr, align 4
  %v2_100009f4 = call i32 @function_1000a148(i32 1, i32 8)
  %v3_100009f8 = load i8, i8* @global_var_1001c200.9, align 1
  %v4_100009f8 = zext i8 %v3_100009f8 to i32
  store i32 %v4_100009f8, i32* %r4.global-to-local, align 4
  store i32 %v2_100009f4, i32* %r28.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10000a0c = load i32, i32* @global_var_1001c204.10, align 4
  %v2_10000a10 = inttoptr i32 %v2_100009f4 to i32*
  store i32 268439748, i32* %v2_10000a10, align 4
  %v0_10000a14 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a14 = mul i32 %v0_10000a14, 4
  store i32 %v1_10000a14, i32* %r4.global-to-local, align 4
  %v0_10000a18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a18 = trunc i32 %v0_10000a18 to i8
  %v2_10000a18 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a18 = add i32 %v2_10000a18, 4
  %v4_10000a18 = inttoptr i32 %v3_10000a18 to i8*
  store i8 %v1_10000a18, i8* %v4_10000a18, align 1
  %v0_10000a1c = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a1c = add i32 %v0_10000a1c, 4
  store i32 %v1_10000a1c, i32* %r4.global-to-local, align 4
  store i32 268438052, i32* @lr, align 4
  %v3_10000a20 = call i32 @function_1000a2b8(i32 %v3_10000a0c, i32 %v1_10000a1c, i32 268439748)
  %v3_10000a24 = load i8, i8* @global_var_1001c200.9, align 1
  %v4_10000a24 = zext i8 %v3_10000a24 to i32
  store i32 %v3_10000a20, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c201.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a34 = mul nuw nsw i32 %v4_10000a24, 4
  %v0_10000a38 = load i32, i32* @r28, align 4
  %v3_10000a38 = add i32 %v1_10000a34, %v3_10000a20
  %v4_10000a38 = inttoptr i32 %v3_10000a38 to i32*
  store i32 %v0_10000a38, i32* %v4_10000a38, align 4
  %v0_10000a40 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a40, i32* @global_var_1001c204.10, align 4
  %v0_10000a44 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a44 = trunc i32 %v0_10000a44 to i8
  store i8 %v1_10000a44, i8* @global_var_1001c200.9, align 1
  store i32 268438092, i32* @lr, align 4
  %v2_10000a48 = call i32 @function_1000a148(i32 1, i32 8)
  %v3_10000a4c = load i8, i8* @global_var_1001c200.9, align 1
  %v4_10000a4c = zext i8 %v3_10000a4c to i32
  store i32 %v4_10000a4c, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a48, i32* %r28.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_10000a60 = load i32, i32* @global_var_1001c204.10, align 4
  %v2_10000a64 = inttoptr i32 %v2_10000a48 to i32*
  store i32 268438276, i32* %v2_10000a64, align 4
  %v0_10000a68 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a68 = mul i32 %v0_10000a68, 4
  store i32 %v1_10000a68, i32* %r4.global-to-local, align 4
  %v0_10000a6c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a6c = trunc i32 %v0_10000a6c to i8
  %v2_10000a6c = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a6c = add i32 %v2_10000a6c, 4
  %v4_10000a6c = inttoptr i32 %v3_10000a6c to i8*
  store i8 %v1_10000a6c, i8* %v4_10000a6c, align 1
  %v0_10000a70 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a70 = add i32 %v0_10000a70, 4
  store i32 %v1_10000a70, i32* %r4.global-to-local, align 4
  store i32 268438136, i32* @lr, align 4
  %v3_10000a74 = call i32 @function_1000a2b8(i32 %v3_10000a60, i32 %v1_10000a70, i32 268438276)
  %v3_10000a78 = load i8, i8* @global_var_1001c200.9, align 1
  %v4_10000a78 = zext i8 %v3_10000a78 to i32
  store i32 %v3_10000a74, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c201.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a88 = mul nuw nsw i32 %v4_10000a78, 4
  %v0_10000a8c = load i32, i32* @r28, align 4
  %v3_10000a8c = add i32 %v1_10000a88, %v3_10000a74
  %v4_10000a8c = inttoptr i32 %v3_10000a8c to i32*
  store i32 %v0_10000a8c, i32* %v4_10000a8c, align 4
  %v0_10000a94 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a94 = trunc i32 %v0_10000a94 to i8
  store i8 %v1_10000a94, i8* @global_var_1001c200.9, align 1
  %v0_10000a98 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a98, i32* @global_var_1001c204.10, align 4
  store i32 268438176, i32* @lr, align 4
  %v2_10000a9c = call i32 @function_1000a148(i32 1, i32 8)
  %v3_10000aa0 = load i8, i8* @global_var_1001c200.9, align 1
  %v4_10000aa0 = zext i8 %v3_10000aa0 to i32
  store i32 %v4_10000aa0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r28.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_10000ab4 = load i32, i32* @global_var_1001c204.10, align 4
  %v2_10000ab8 = inttoptr i32 %v2_10000a9c to i32*
  store i32 268441112, i32* %v2_10000ab8, align 4
  %v0_10000abc = load i32, i32* %r4.global-to-local, align 4
  %v1_10000abc = mul i32 %v0_10000abc, 4
  store i32 %v1_10000abc, i32* %r4.global-to-local, align 4
  %v0_10000ac0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ac0 = trunc i32 %v0_10000ac0 to i8
  %v2_10000ac0 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000ac0 = add i32 %v2_10000ac0, 4
  %v4_10000ac0 = inttoptr i32 %v3_10000ac0 to i8*
  store i8 %v1_10000ac0, i8* %v4_10000ac0, align 1
  %v0_10000ac4 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000ac4 = add i32 %v0_10000ac4, 4
  store i32 %v1_10000ac4, i32* %r4.global-to-local, align 4
  store i32 268438220, i32* @lr, align 4
  %v3_10000ac8 = call i32 @function_1000a2b8(i32 %v3_10000ab4, i32 %v1_10000ac4, i32 268441112)
  %v3_10000acc = load i8, i8* @global_var_1001c200.9, align 1
  %v4_10000acc = zext i8 %v3_10000acc to i32
  store i32 %v3_10000ac8, i32* @global_var_1001c204.10, align 4
  store i32 ptrtoint (i8* @global_var_1001c201.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000ad8 = mul nuw nsw i32 %v4_10000acc, 4
  %v0_10000adc = load i32, i32* @r28, align 4
  %v3_10000adc = add i32 %v1_10000ad8, %v3_10000ac8
  %v4_10000adc = inttoptr i32 %v3_10000adc to i32*
  store i32 %v0_10000adc, i32* %v4_10000adc, align 4
  %v0_10000ae4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ae4 = trunc i32 %v0_10000ae4 to i8
  store i8 %v1_10000ae4, i8* @global_var_1001c200.9, align 1
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 %v0_1000074c, i32* @r28, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_1001c201.13 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001c200.9, { 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10000b04(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000b04:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-90 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10000b08 = load i32, i32* @lr, align 4
  store i32 %v0_10000b08, i32* %r0.global-to-local, align 4
  %v0_10000b0c = call i32 @__asm_mfcr()
  store i32 %v0_10000b0c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10000b1c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000b0c, i32* %r18.global-to-local, align 4
  %v0_10000b50 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10000b58 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10000b60 = load i32, i32* @r30, align 4
  %v0_10000b64 = load i32, i32* @r31, align 4
  store i32 268438392, i32* @lr, align 4
  %v2_10000b74 = call i32 @function_1000a148(i32 4, i32 4)
  store i32 %v2_10000b74, i32* %r19.global-to-local, align 4
  %v0_10000b7c = load i32, i32* @r28, align 4
  %v0_10000b88 = load i32, i32* @r29, align 4
  store i32 %v0_10000b88, i32* %r3.global-to-local, align 4
  store i32 268438416, i32* @lr, align 4
  %v4_10000b8c = inttoptr i32 %v0_10000b7c to i32*
  %v5_10000b8c = call i32 @function_100006a8(i32 %v0_10000b88, i32* %v4_10000b8c, i32 2, i32 0)
  %v0_10000b9c = load i32, i32* @r28, align 4
  %v1_10000ba0 = urem i32 %v5_10000b8c, 256
  store i32 %v1_10000ba0, i32* %r14.global-to-local, align 4
  %v0_10000ba4 = load i32, i32* @r29, align 4
  store i32 %v0_10000ba4, i32* %r3.global-to-local, align 4
  store i32 268438444, i32* @lr, align 4
  %v4_10000ba8 = inttoptr i32 %v0_10000b9c to i32*
  %v5_10000ba8 = call i32 @function_100006a8(i32 %v0_10000ba4, i32* %v4_10000ba8, i32 3, i32 65535)
  %v0_10000bac = load i32, i32* @r28, align 4
  store i32 %v5_10000ba8, i32* %r24.global-to-local, align 4
  %v0_10000bbc = load i32, i32* @r29, align 4
  store i32 %v0_10000bbc, i32* %r3.global-to-local, align 4
  store i32 268438468, i32* @lr, align 4
  %v4_10000bc0 = inttoptr i32 %v0_10000bac to i32*
  %v5_10000bc0 = call i32 @function_100006a8(i32 %v0_10000bbc, i32* %v4_10000bc0, i32 4, i32 64)
  %v0_10000bc4 = load i32, i32* @r28, align 4
  %v1_10000bd0 = urem i32 %v5_10000bc0, 256
  store i32 %v1_10000bd0, i32* %r20.global-to-local, align 4
  %v0_10000bd4 = load i32, i32* @r29, align 4
  store i32 %v0_10000bd4, i32* %r3.global-to-local, align 4
  store i32 268438492, i32* @lr, align 4
  %v4_10000bd8 = inttoptr i32 %v0_10000bc4 to i32*
  %v5_10000bd8 = call i32 @function_100006a8(i32 %v0_10000bd4, i32* %v4_10000bd8, i32 5, i32 1)
  %v0_10000be8 = load i32, i32* @r28, align 4
  %v1_10000bec = urem i32 %v5_10000bd8, 256
  store i32 %v1_10000bec, i32* @r31, align 4
  %v0_10000bf0 = load i32, i32* @r29, align 4
  store i32 %v0_10000bf0, i32* %r3.global-to-local, align 4
  store i32 268438520, i32* @lr, align 4
  %v4_10000bf4 = inttoptr i32 %v0_10000be8 to i32*
  %v5_10000bf4 = call i32 @function_100006a8(i32 %v0_10000bf0, i32* %v4_10000bf4, i32 6, i32 65535)
  %v0_10000bfc = load i32, i32* @r28, align 4
  store i32 %v5_10000bf4, i32* %r26.global-to-local, align 4
  %v0_10000c0c = load i32, i32* @r29, align 4
  store i32 %v0_10000c0c, i32* %r3.global-to-local, align 4
  store i32 268438548, i32* @lr, align 4
  %v4_10000c10 = inttoptr i32 %v0_10000bfc to i32*
  %v5_10000c10 = call i32 @function_100006a8(i32 %v0_10000c0c, i32* %v4_10000c10, i32 7, i32 65535)
  %v0_10000c14 = load i32, i32* @r28, align 4
  store i32 %v5_10000c10, i32* %r27.global-to-local, align 4
  %v0_10000c24 = load i32, i32* @r29, align 4
  store i32 %v0_10000c24, i32* %r3.global-to-local, align 4
  store i32 268438572, i32* @lr, align 4
  %v4_10000c28 = inttoptr i32 %v0_10000c14 to i32*
  %v5_10000c28 = call i32 @function_100006a8(i32 %v0_10000c24, i32* %v4_10000c28, i32 0, i32 512)
  %v0_10000c2c = load i32, i32* @r28, align 4
  store i32 %v5_10000c28, i32* %r15.global-to-local, align 4
  %v0_10000c3c = load i32, i32* @r29, align 4
  store i32 %v0_10000c3c, i32* %r3.global-to-local, align 4
  store i32 268438596, i32* @lr, align 4
  %v4_10000c40 = inttoptr i32 %v0_10000c2c to i32*
  %v5_10000c40 = call i32 @function_100006a8(i32 %v0_10000c3c, i32* %v4_10000c40, i32 1, i32 1)
  %v0_10000c44 = load i32, i32* @r28, align 4
  %v1_10000c50 = urem i32 %v5_10000c40, 256
  store i32 %v1_10000c50, i32* %r21.global-to-local, align 4
  %v0_10000c54 = load i32, i32* @r29, align 4
  store i32 %v0_10000c54, i32* %r3.global-to-local, align 4
  store i32 268438620, i32* @lr, align 4
  %v4_10000c58 = inttoptr i32 %v0_10000c44 to i32*
  %v5_10000c58 = call i32 @function_100006a8(i32 %v0_10000c54, i32* %v4_10000c58, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10000c60 = load i32, i32* @global_var_1001c208.14, align 4
  %v0_10000c64 = load i32, i32* @r28, align 4
  store i32 %v5_10000c58, i32* %r30.global-to-local, align 4
  %v0_10000c70 = load i32, i32* @r29, align 4
  store i32 %v0_10000c70, i32* %r3.global-to-local, align 4
  store i32 268438648, i32* @lr, align 4
  %v4_10000c74 = inttoptr i32 %v0_10000c64 to i32*
  %v5_10000c74 = call i32 @function_100006a8(i32 %v0_10000c70, i32* %v4_10000c74, i32 25, i32 %v3_10000c60)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268438668, i32* @lr, align 4
  %v3_10000c88 = call i32 @function_10009dec(i32 2, i32 3, i32 6)
  store i32 %v3_10000c88, i32* %r3.global-to-local, align 4
  %v3_10000c8c = icmp eq i32 %v3_10000c88, -1
  store i1 %v3_10000c8c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10000c88, i32* %r23.global-to-local, align 4
  br i1 %v3_10000c8c, label %dec_label_pc_10000e30, label %dec_label_pc_10000c98

dec_label_pc_10000c98:                            ; preds = %dec_label_pc_10000b04
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10000ca4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268438708, i32* @lr, align 4
  %v4_10000cb0 = call i32 @function_10009db0(i32 0, i32 3, i32 %v2_10000ca4, i32 4)
  store i32 %v4_10000cb0, i32* %r3.global-to-local, align 4
  %v3_10000cb4 = icmp eq i32 %v4_10000cb0, -1
  store i1 %v3_10000cb4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000cb4, label %dec_label_pc_10000e28, label %dec_label_pc_10000cbc

dec_label_pc_10000cbc:                            ; preds = %dec_label_pc_10000c98
  %v0_10000cbc = load i32, i32* %r18.global-to-local, align 4
  %v1_10000cbc = icmp slt i32 %v0_10000cbc, 0
  %v3_10000cbc = icmp eq i32 %v0_10000cbc, 0
  store i1 %v1_10000cbc, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000cbc, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10000cc8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000cc8 = urem i32 %v0_10000cc8, 65536
  store i32 %v1_10000cc8, i32* %r24.global-to-local, align 4
  %v0_10000ccc = load i32, i32* %r26.global-to-local, align 4
  %v1_10000ccc = urem i32 %v0_10000ccc, 65536
  store i32 %v1_10000ccc, i32* %r16.global-to-local, align 4
  %v0_10000cd0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000cd0 = urem i32 %v0_10000cd0, 65536
  store i32 %v1_10000cd0, i32* %r17.global-to-local, align 4
  %v0_10000cd4 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000cd4 = urem i32 %v0_10000cd4, 256
  store i32 %v1_10000cd4, i32* %r3.global-to-local, align 4
  %tmp37 = icmp slt i32 %v0_10000cbc, 1
  br i1 %tmp37, label %dec_label_pc_10000e90, label %dec_label_pc_10000cdc

dec_label_pc_10000cdc:                            ; preds = %dec_label_pc_10000cbc
  %v0_10000cdc = load i32, i32* @r31, align 4
  %v3_10000cdc = icmp eq i32 %v0_10000cdc, 0
  store i1 %v3_10000cdc, i1* %cr2_eq.global-to-local, align 1
  %v3_10000ce0 = icmp eq i32 %v1_10000cd4, 0
  store i1 %v3_10000ce0, i1* %cr3_eq.global-to-local, align 1
  %v0_10000ce4 = load i32, i32* %r15.global-to-local, align 4
  %v1_10000ce4 = urem i32 %v0_10000ce4, 65536
  %v0_10000cc8.not = or i32 %v0_10000cc8, -65536
  %v1_10000ce8 = xor i32 %v0_10000cc8.not, 65535
  store i32 %v1_10000ce8, i32* %r11.global-to-local, align 4
  %v1_10000cf0 = add nuw nsw i32 %v1_10000ce4, 66
  store i32 %v1_10000cf0, i32* %r0.global-to-local, align 4
  %v1_10000cf4 = add nuw nsw i32 %v1_10000ce4, 28
  store i32 %v1_10000cf4, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10000ce4, 66
  %v1_10000cf8 = urem i32 %fold, 65536
  store i32 %v1_10000cf8, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10000ce4, 28
  %v1_10000cfc = urem i32 %fold8, 65536
  store i32 %v1_10000cfc, i32* %r26.global-to-local, align 4
  %v1_10000d00 = urem i32 %v1_10000ce8, 65536
  store i32 %v1_10000d00, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10000ce4, 8
  %v1_10000d04 = urem i32 %fold9, 65536
  store i32 %v1_10000d04, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10000d38

dec_label_pc_10000d10:                            ; preds = %dec_label_pc_10000e04
  %v0_10000d10 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d10 = add i32 %v0_10000d10, 16
  %v2_10000d10 = inttoptr i32 %v1_10000d10 to i32*
  %v3_10000d10 = load i32, i32* %v2_10000d10, align 4
  store i32 %v3_10000d10, i32* %r0.global-to-local, align 4
  %v1_10000d14 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000d14 = add i32 %v1_10000d14, 16
  %v3_10000d14 = inttoptr i32 %v2_10000d14 to i32*
  store i32 %v3_10000d10, i32* %v3_10000d14, align 4
  br label %dec_label_pc_10000d18

dec_label_pc_10000d18:                            ; preds = %dec_label_pc_10000e20, %dec_label_pc_10000d10
  %v3_10000d18 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10000d18, i32* %r9.global-to-local, align 4
  %v0_10000d1c = load i32, i32* @r28, align 4
  %v1_10000d1c = trunc i32 %v0_10000d1c to i16
  %v2_10000d1c = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d1c = add i32 %v2_10000d1c, 4
  %v4_10000d1c = inttoptr i32 %v3_10000d1c to i16*
  store i16 %v1_10000d1c, i16* %v4_10000d1c, align 2
  %v0_10000d20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000d20 = add i32 %v0_10000d20, 1
  store i32 %v1_10000d20, i32* %r31.global-to-local, align 4
  %v0_10000d24 = load i32, i32* %r16.global-to-local, align 4
  %v1_10000d24 = trunc i32 %v0_10000d24 to i16
  %v2_10000d24 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d24 = inttoptr i32 %v2_10000d24 to i16*
  store i16 %v1_10000d24, i16* %v3_10000d24, align 2
  %v0_10000d28 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d28 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000d28 = icmp slt i32 %v0_10000d28, %v1_10000d28
  %v4_10000d28 = icmp eq i32 %v0_10000d28, %v1_10000d28
  store i1 %v4_10000d28, i1* %cr7_eq.global-to-local, align 1
  %v0_10000d2c = load i32, i32* %r17.global-to-local, align 4
  %v1_10000d2c = trunc i32 %v0_10000d2c to i16
  %v2_10000d2c = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d2c = add i32 %v2_10000d2c, 2
  %v4_10000d2c = inttoptr i32 %v3_10000d2c to i16*
  store i16 %v1_10000d2c, i16* %v4_10000d2c, align 2
  %v0_10000d30 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10000d30, i32* %stack_var_-104, align 4
  br i1 %v2_10000d28, label %dec_label_pc_10000d38, label %dec_label_pc_10000e94

dec_label_pc_10000d38:                            ; preds = %dec_label_pc_10000d18, %dec_label_pc_10000cdc
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268438852, i32* @lr, align 4
  %v2_10000d40 = call i32 @function_1000a148(i32 1510, i32 4)
  store i32 %v2_10000d40, i32* %r3.global-to-local, align 4
  %v3_10000d44 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10000d44, i32* %r9.global-to-local, align 4
  %v0_10000d48 = load i32, i32* @r31, align 4
  %v1_10000d48 = mul i32 %v0_10000d48, 4
  store i32 %v1_10000d48, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10000d50 = load i32, i32* %r19.global-to-local, align 4
  %v3_10000d50 = add i32 %v1_10000d50, %v1_10000d48
  %v4_10000d50 = inttoptr i32 %v3_10000d50 to i32*
  store i32 %v2_10000d40, i32* %v4_10000d50, align 4
  %v0_10000d54 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000d54 = mul i32 %v0_10000d54, 4
  store i32 %v1_10000d54, i32* %r9.global-to-local, align 4
  %v1_10000d58 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000d58 = add i32 %v1_10000d58, %v1_10000d54
  %v3_10000d58 = inttoptr i32 %v2_10000d58 to i32*
  %v4_10000d58 = load i32, i32* %v3_10000d58, align 4
  store i32 %v4_10000d58, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10000d60 = inttoptr i32 %v4_10000d58 to i32*
  %v2_10000d60 = load i32, i32* %v1_10000d60, align 4
  store i32 %v2_10000d60, i32* %r0.global-to-local, align 4
  %v1_10000d64 = add i32 %v4_10000d58, 38
  store i32 %v1_10000d64, i32* %r30.global-to-local, align 4
  %v0_10000d68 = load i32, i32* %r20.global-to-local, align 4
  %v1_10000d68 = trunc i32 %v0_10000d68 to i8
  %v3_10000d68 = add i32 %v4_10000d58, 8
  %v4_10000d68 = inttoptr i32 %v3_10000d68 to i8*
  store i8 %v1_10000d68, i8* %v4_10000d68, align 1
  %v0_10000d6c = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d6c = add i32 %v0_10000d6c, 58
  store i32 %v1_10000d6c, i32* %r29.global-to-local, align 4
  %v1_10000d70 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10000d70, i32* %r0.global-to-local, align 4
  %v0_10000d74 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000d74 = trunc i32 %v0_10000d74 to i16
  %v2_10000d74 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000d74 = add i32 %v2_10000d74, 4
  %v4_10000d74 = inttoptr i32 %v3_10000d74 to i16*
  store i16 %v1_10000d74, i16* %v4_10000d74, align 2
  %v1_10000d78 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10000d78, i32* %r0.global-to-local, align 4
  %v0_10000d7c = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d7c = add i32 %v0_10000d7c, 20
  store i32 %v1_10000d7c, i32* %r9.global-to-local, align 4
  %v2_10000d80 = inttoptr i32 %v0_10000d7c to i32*
  store i32 %v1_10000d78, i32* %v2_10000d80, align 4
  %v0_10000d84 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d84 = add i32 %v0_10000d84, 24
  store i32 %v1_10000d84, i32* %r11.global-to-local, align 4
  %v0_10000d88 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000d88 = trunc i32 %v0_10000d88 to i8
  %v3_10000d88 = add i32 %v0_10000d84, 1
  %v4_10000d88 = inttoptr i32 %v3_10000d88 to i8*
  store i8 %v1_10000d88, i8* %v4_10000d88, align 1
  %v0_10000d8c = load i32, i32* %r22.global-to-local, align 4
  %v1_10000d8c = trunc i32 %v0_10000d8c to i16
  %v2_10000d8c = load i32, i32* %r31.global-to-local, align 4
  %v3_10000d8c = add i32 %v2_10000d8c, 2
  %v4_10000d8c = inttoptr i32 %v3_10000d8c to i16*
  store i16 %v1_10000d8c, i16* %v4_10000d8c, align 2
  %v0_10000d90 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10000d90, label %dec_label_pc_10000d9c, label %dec_label_pc_10000d94

dec_label_pc_10000d94:                            ; preds = %dec_label_pc_10000d38
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10000d98 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000d98 = add i32 %v2_10000d98, 6
  %v4_10000d98 = inttoptr i32 %v3_10000d98 to i16*
  store i16 16384, i16* %v4_10000d98, align 2
  br label %dec_label_pc_10000d9c

dec_label_pc_10000d9c:                            ; preds = %dec_label_pc_10000d38, %dec_label_pc_10000d94
  %v2_10000da0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000da0 = add i32 %v2_10000da0, 9
  %v4_10000da0 = inttoptr i32 %v3_10000da0 to i8*
  store i8 47, i8* %v4_10000da0, align 1
  store i32 25944, i32* %r0.global-to-local, align 4
  %v2_10000da8 = load i32, i32* %r9.global-to-local, align 4
  %v3_10000da8 = add i32 %v2_10000da8, 2
  %v4_10000da8 = inttoptr i32 %v3_10000da8 to i16*
  store i16 25944, i16* %v4_10000da8, align 2
  %v2_10000db0 = load i32, i32* %r11.global-to-local, align 4
  %v3_10000db0 = add i32 %v2_10000db0, 12
  %v4_10000db0 = inttoptr i32 %v3_10000db0 to i16*
  store i16 2048, i16* %v4_10000db0, align 2
  %v3_10000db4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10000c74, i32* %r11.global-to-local, align 4
  %v1_10000dbc = mul i32 %v3_10000db4, 24
  store i32 %v1_10000dbc, i32* %r9.global-to-local, align 4
  %v0_10000dc0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000dc0 = add i32 %v0_10000dc0, 38
  %v2_10000dc0 = inttoptr i32 %v1_10000dc0 to i32*
  %v3_10000dc0 = load i32, i32* %v2_10000dc0, align 4
  store i32 %v3_10000dc0, i32* %r0.global-to-local, align 4
  %v2_10000dc4 = add i32 %v0_10000dc0, 12
  %v3_10000dc4 = inttoptr i32 %v2_10000dc4 to i32*
  store i32 %v5_10000c74, i32* %v3_10000dc4, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10000dcc = load i32, i32* %r9.global-to-local, align 4
  %v1_10000dcc = load i32, i32* %r25.global-to-local, align 4
  %v2_10000dcc = add i32 %v1_10000dcc, %v0_10000dcc
  store i32 %v2_10000dcc, i32* %r9.global-to-local, align 4
  %v1_10000dd0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10000dd0, i32* %r0.global-to-local, align 4
  %v0_10000dd4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000dd4 = add i32 %v0_10000dd4, 16
  %v2_10000dd4 = inttoptr i32 %v1_10000dd4 to i32*
  %v3_10000dd4 = load i32, i32* %v2_10000dd4, align 4
  store i32 %v3_10000dd4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10000ddc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10000ddc, i32* %r0.global-to-local, align 4
  %v1_10000de0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000de0 = add i32 %v1_10000de0, 38
  %v3_10000de0 = inttoptr i32 %v2_10000de0 to i32*
  store i32 %v1_10000ddc, i32* %v3_10000de0, align 4
  %v0_10000de4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10000de4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000de4 = add i32 %v1_10000de4, 16
  %v3_10000de4 = inttoptr i32 %v2_10000de4 to i32*
  store i32 %v0_10000de4, i32* %v3_10000de4, align 4
  %v0_10000de8 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000de8 = trunc i32 %v0_10000de8 to i8
  %v2_10000de8 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000de8 = add i32 %v2_10000de8, 1
  %v4_10000de8 = inttoptr i32 %v3_10000de8 to i8*
  store i8 %v1_10000de8, i8* %v4_10000de8, align 1
  %v0_10000dec = load i32, i32* %r26.global-to-local, align 4
  %v1_10000dec = trunc i32 %v0_10000dec to i16
  %v2_10000dec = load i32, i32* %r30.global-to-local, align 4
  %v3_10000dec = add i32 %v2_10000dec, 2
  %v4_10000dec = inttoptr i32 %v3_10000dec to i16*
  store i16 %v1_10000dec, i16* %v4_10000dec, align 2
  %v0_10000df0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000df0 = trunc i32 %v0_10000df0 to i16
  %v2_10000df0 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000df0 = add i32 %v2_10000df0, 4
  %v4_10000df0 = inttoptr i32 %v3_10000df0 to i16*
  store i16 %v1_10000df0, i16* %v4_10000df0, align 2
  %v0_10000df4 = load i32, i32* %r20.global-to-local, align 4
  %v1_10000df4 = trunc i32 %v0_10000df4 to i8
  %v2_10000df4 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000df4 = add i32 %v2_10000df4, 8
  %v4_10000df4 = inttoptr i32 %v3_10000df4 to i8*
  store i8 %v1_10000df4, i8* %v4_10000df4, align 1
  %v0_10000df8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10000df8, label %dec_label_pc_10000e04, label %dec_label_pc_10000dfc

dec_label_pc_10000dfc:                            ; preds = %dec_label_pc_10000d9c
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_10000e00 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000e00 = add i32 %v2_10000e00, 6
  %v4_10000e00 = inttoptr i32 %v3_10000e00 to i16*
  store i16 16384, i16* %v4_10000e00, align 2
  br label %dec_label_pc_10000e04

dec_label_pc_10000e04:                            ; preds = %dec_label_pc_10000d9c, %dec_label_pc_10000dfc
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10000e08 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000e08 = add i32 %v2_10000e08, 9
  %v4_10000e08 = inttoptr i32 %v3_10000e08 to i8*
  store i8 17, i8* %v4_10000e08, align 1
  %v0_10000e0c = call i32 @function_10005f3c()
  store i32 %v0_10000e0c, i32* %r3.global-to-local, align 4
  %v1_10000e10 = add i32 %v0_10000e0c, -1024
  store i32 %v1_10000e10, i32* %r0.global-to-local, align 4
  %v1_10000e14 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000e14 = add i32 %v1_10000e14, 12
  %v3_10000e14 = inttoptr i32 %v2_10000e14 to i32*
  store i32 %v0_10000e0c, i32* %v3_10000e14, align 4
  %v0_10000e18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000e18 = sub i32 -1, %v0_10000e18
  store i32 %v1_10000e18, i32* %r0.global-to-local, align 4
  %v0_10000e1c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000e1c, label %dec_label_pc_10000e20, label %dec_label_pc_10000d10

dec_label_pc_10000e20:                            ; preds = %dec_label_pc_10000e04
  %v1_10000e20 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000e20 = add i32 %v1_10000e20, 16
  %v3_10000e20 = inttoptr i32 %v2_10000e20 to i32*
  store i32 %v1_10000e18, i32* %v3_10000e20, align 4
  br label %dec_label_pc_10000d18

dec_label_pc_10000e28:                            ; preds = %dec_label_pc_10000c98
  %v0_10000e28 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000e28, i32* %r3.global-to-local, align 4
  store i32 268439088, i32* @lr, align 4
  %v0_10000e2c = call i32 @function_1000909c()
  store i32 %v0_10000e2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000e30

dec_label_pc_10000e30:                            ; preds = %dec_label_pc_10000b04, %dec_label_pc_10000e28
  store i32 %v0_10000b1c, i32* %r0.global-to-local, align 4
  %v1_10000e44 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10000b0c)
  store i32 %v0_10000b50, i32* %r28.global-to-local, align 4
  store i32 %v0_10000b58, i32* %r29.global-to-local, align 4
  store i32 %v0_10000b60, i32* %r30.global-to-local, align 4
  store i32 %v0_10000b64, i32* %r31.global-to-local, align 4
  %v0_10000e8c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000e8c

dec_label_pc_10000e90:                            ; preds = %dec_label_pc_10000cbc
  %v3_10000e90 = icmp eq i32 %v1_10000cd4, 0
  store i1 %v3_10000e90, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10000e94

dec_label_pc_10000e94:                            ; preds = %dec_label_pc_10000d18, %dec_label_pc_10000e90
  store i32 %v5_10000c74, i32* %r0.global-to-local, align 4
  %v0_10000e98 = load i32, i32* %r21.global-to-local, align 4
  %v3_10000e98 = icmp eq i32 %v0_10000e98, 0
  store i1 %v3_10000e98, i1* %cr2_eq.global-to-local, align 1
  %v2_10000e9c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10000e9c, i32* %r14.global-to-local, align 4
  %v0_10000ea0 = load i32, i32* %r15.global-to-local, align 4
  %v1_10000ea0 = add i32 %v0_10000ea0, 8
  store i32 %v1_10000ea0, i32* %r21.global-to-local, align 4
  %v3_10000ea4 = icmp eq i32 %v5_10000c74, -1
  store i1 %v3_10000ea4, i1* %cr7_eq.global-to-local, align 1
  %v1_10000ea8 = add i32 %v0_10000ea0, 66
  store i32 %v1_10000ea8, i32* %r22.global-to-local, align 4
  %v0_10000eac = call i32 @__asm_mfcr()
  store i32 %v0_10000eac, i32* %r3.global-to-local, align 4
  %v1_10000eb0 = mul i32 %v0_10000eac, 268435456
  store i32 %v1_10000eb0, i32* %r20.global-to-local, align 4
  %v2_10000f44 = ptrtoint i32* %stack_var_-100 to i32
  %v2_10000f68 = ptrtoint i32* %stack_var_-92 to i32
  %v2_10000f78 = ptrtoint i32* %stack_var_-90 to i32
  %v0_10000eb4.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000eb4.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10000eb4.outer

dec_label_pc_10000eb4.outer:                      ; preds = %dec_label_pc_10001018, %dec_label_pc_10000e94
  %v1_10000eb4.ph = phi i1 [ %v1_10000eb4.pre, %dec_label_pc_10000e94 ], [ %v1_10001018, %dec_label_pc_10001018 ]
  %v0_10000eb4.ph = phi i1 [ %v0_10000eb4.pre, %dec_label_pc_10000e94 ], [ %v0_10001018, %dec_label_pc_10001018 ]
  %v2_10000eb4 = or i1 %v1_10000eb4.ph, %v0_10000eb4.ph
  br label %dec_label_pc_10000eb4

dec_label_pc_10000eb4:                            ; preds = %dec_label_pc_10000eb4.outer, %dec_label_pc_10000eb4
  br i1 %v2_10000eb4, label %dec_label_pc_10000eb4, label %dec_label_pc_10000eb8

dec_label_pc_10000eb8:                            ; preds = %dec_label_pc_10000eb4, %dec_label_pc_10001018
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000ec8

dec_label_pc_10000ec8:                            ; preds = %dec_label_pc_10000f88, %dec_label_pc_10000eb8
  %v0_10000ec8 = phi i32 [ %v1_10001008, %dec_label_pc_10000f88 ], [ 0, %dec_label_pc_10000eb8 ]
  %v1_10000ec8 = mul i32 %v0_10000ec8, 24
  store i32 %v1_10000ec8, i32* %r0.global-to-local, align 4
  %v1_10000ecc = mul i32 %v0_10000ec8, 4
  store i32 %v1_10000ecc, i32* %r11.global-to-local, align 4
  %v1_10000ed0 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000ed0 = add i32 %v1_10000ed0, %v1_10000ecc
  %v3_10000ed0 = inttoptr i32 %v2_10000ed0 to i32*
  %v4_10000ed0 = load i32, i32* %v3_10000ed0, align 4
  store i32 %v4_10000ed0, i32* %r28.global-to-local, align 4
  %v1_10000ed4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000ed4 = add i32 %v1_10000ed4, %v1_10000ec8
  %v1_10000ed8 = add i32 %v2_10000ed4, 20
  %v2_10000ed8 = inttoptr i32 %v1_10000ed8 to i8*
  %v3_10000ed8 = load i8, i8* %v2_10000ed8, align 1
  %v4_10000ed8 = zext i8 %v3_10000ed8 to i32
  store i32 %v4_10000ed8, i32* %r9.global-to-local, align 4
  %v1_10000edc = add i32 %v4_10000ed0, 24
  store i32 %v1_10000edc, i32* @r30, align 4
  %v1_10000ee0 = add i32 %v4_10000ed0, 38
  store i32 %v1_10000ee0, i32* @r31, align 4
  %v1_10000ee4 = add i32 %v4_10000ed0, 58
  store i32 %v1_10000ee4, i32* %r27.global-to-local, align 4
  %v3_10000ee8 = icmp eq i8 %v3_10000ed8, 31
  store i1 %v3_10000ee8, i1* %cr7_eq.global-to-local, align 1
  %tmp39 = icmp ult i8 %v3_10000ed8, 32
  br i1 %tmp39, label %dec_label_pc_10001020, label %dec_label_pc_10000ef0

dec_label_pc_10000ef0:                            ; preds = %dec_label_pc_10000ec8
  %v0_10000ef0 = load i32, i32* %r20.global-to-local, align 4
  %v1_10000ef0 = mul i32 %v0_10000ef0, 16
  %v2_10000ef0 = udiv i32 %v0_10000ef0, 268435456
  %v3_10000ef0 = or i32 %v2_10000ef0, %v1_10000ef0
  store i32 %v3_10000ef0, i32* %r20.global-to-local, align 4
  %v1_10000ef4 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10000ef0)
  %v1_10000ef8 = mul nuw i32 %v2_10000ef0, 268435456
  %v2_10000ef8 = urem i32 %v0_10000ef0, 268435456
  %v3_10000ef8 = or i32 %v1_10000ef8, %v2_10000ef8
  store i32 %v3_10000ef8, i32* %r20.global-to-local, align 4
  %v0_10000efc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10000efc, label %dec_label_pc_10001054, label %dec_label_pc_10000f00

dec_label_pc_10000f00:                            ; preds = %dec_label_pc_10001020, %dec_label_pc_10000ef0
  store i32 65535, i32* @r29, align 4
  %v0_10000f08 = load i32, i32* %r24.global-to-local, align 4
  %v4_10000f08 = icmp eq i32 %v0_10000f08, 65535
  store i1 %v4_10000f08, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000f08, label %dec_label_pc_1000106c, label %dec_label_pc_10000f10

dec_label_pc_10000f10:                            ; preds = %dec_label_pc_10001054, %dec_label_pc_10000f00
  %v1_10000f10 = phi i32 [ %v1_10001064, %dec_label_pc_10001054 ], [ 65535, %dec_label_pc_10000f00 ]
  %v0_10000f10 = load i32, i32* %r16.global-to-local, align 4
  %v4_10000f10 = icmp eq i32 %v0_10000f10, %v1_10000f10
  store i1 %v4_10000f10, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000f10, label %dec_label_pc_1000108c, label %dec_label_pc_10000f18

dec_label_pc_10000f18:                            ; preds = %dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge, %dec_label_pc_10000f10
  %v1_10000f18 = phi i32 [ %v1_10000f18.pre, %dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge ], [ %v1_10000f10, %dec_label_pc_10000f10 ]
  %v0_10000f18 = load i32, i32* %r17.global-to-local, align 4
  %v4_10000f18 = icmp eq i32 %v0_10000f18, %v1_10000f18
  store i1 %v4_10000f18, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000f18, label %dec_label_pc_1000109c, label %dec_label_pc_10000f20

dec_label_pc_10000f20:                            ; preds = %dec_label_pc_1000108c, %dec_label_pc_10000f18
  %v0_10000f20 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000f20, label %dec_label_pc_100010a8, label %dec_label_pc_10000f24

dec_label_pc_10000f24:                            ; preds = %dec_label_pc_1000109c, %dec_label_pc_10000f20
  %v0_10000f24 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000f24 = add i32 %v0_10000f24, 16
  %v2_10000f24 = inttoptr i32 %v1_10000f24 to i32*
  %v3_10000f24 = load i32, i32* %v2_10000f24, align 4
  store i32 %v3_10000f24, i32* %r0.global-to-local, align 4
  %v1_10000f28 = load i32, i32* @r31, align 4
  %v2_10000f28 = add i32 %v1_10000f28, 16
  %v3_10000f28 = inttoptr i32 %v2_10000f28 to i32*
  store i32 %v3_10000f24, i32* %v3_10000f28, align 4
  br label %dec_label_pc_10000f2c

dec_label_pc_10000f2c:                            ; preds = %dec_label_pc_100010a8, %dec_label_pc_10000f24
  %v0_10000f2c = call i32 @function_10005f3c()
  store i32 %v0_10000f2c, i32* %r3.global-to-local, align 4
  store i32 %v0_10000f2c, i32* %stack_var_-100, align 4
  %v0_10000f34 = call i32 @function_10005f3c()
  store i32 %v0_10000f34, i32* %r3.global-to-local, align 4
  store i32 %v0_10000f34, i32* %stack_var_-96, align 4
  %v0_10000f3c = call i32 @function_10005f3c()
  store i32 %v0_10000f3c, i32* %stack_var_-92, align 4
  %v0_10000f48 = load i32, i32* @r30, align 4
  store i32 %v0_10000f48, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000f54.15 to i32), i32* @lr, align 4
  %v3_10000f50 = call i32 @function_10008960(i32 %v0_10000f48, i32 %v2_10000f44, i32 4)
  %v0_10000f54 = load i32, i32* @r30, align 4
  %v1_10000f54 = add i32 %v0_10000f54, 6
  store i32 %v1_10000f54, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000f64.16 to i32), i32* @lr, align 4
  %v3_10000f60 = call i32 @function_10008960(i32 %v1_10000f54, i32 %v2_10000e9c, i32 4)
  %v0_10000f64 = load i32, i32* @r30, align 4
  %v1_10000f64 = add i32 %v0_10000f64, 4
  store i32 %v1_10000f64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000f74.17 to i32), i32* @lr, align 4
  %v3_10000f70 = call i32 @function_10008960(i32 %v1_10000f64, i32 %v2_10000f68, i32 2)
  %v0_10000f74 = load i32, i32* @r30, align 4
  %v1_10000f74 = add i32 %v0_10000f74, 10
  store i32 %v1_10000f74, i32* %r3.global-to-local, align 4
  store i32 268439428, i32* @lr, align 4
  %v3_10000f80 = call i32 @function_10008960(i32 %v1_10000f74, i32 %v2_10000f78, i32 2)
  store i32 %v3_10000f80, i32* %r3.global-to-local, align 4
  %v0_10000f84 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10000f84, label %dec_label_pc_10000f88, label %dec_label_pc_100010b4

dec_label_pc_10000f88:                            ; preds = %dec_label_pc_10000f2c, %dec_label_pc_100010b4
  %v0_10000f88 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000f88 = trunc i32 %v0_10000f88 to i16
  %v2_10000f88 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000f88 = add i32 %v2_10000f88, 10
  %v4_10000f88 = inttoptr i32 %v3_10000f88 to i16*
  store i16 %v1_10000f88, i16* %v4_10000f88, align 2
  %v0_10000f90 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000f90, i32* @r3, align 4
  %v2_10000f94 = call i32 @function_100043cc(i32 %v0_10000f90, i32 20)
  %v3_10000f94 = trunc i32 %v2_10000f94 to i16
  %v4_10000f9c = add i32 %v0_10000f90, 10
  %v5_10000f9c = inttoptr i32 %v4_10000f9c to i16*
  store i16 %v3_10000f94, i16* %v5_10000f9c, align 2
  %v0_10000fa0 = load i32, i32* @r31, align 4
  store i32 %v0_10000fa0, i32* @r3, align 4
  %v0_10000fa4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000fa4 = trunc i32 %v0_10000fa4 to i16
  %v3_10000fa4 = add i32 %v0_10000fa0, 10
  %v4_10000fa4 = inttoptr i32 %v3_10000fa4 to i16*
  store i16 %v1_10000fa4, i16* %v4_10000fa4, align 2
  %v2_10000fa8 = call i32 @function_100043cc(i32 %v0_10000fa0, i32 20)
  %v3_10000fa8 = trunc i32 %v2_10000fa8 to i16
  %v0_10000fac = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10000fac, i32* @r4, align 4
  %v3_10000fb0 = load i32, i32* @r31, align 4
  %v4_10000fb0 = add i32 %v3_10000fb0, 10
  %v5_10000fb0 = inttoptr i32 %v4_10000fb0 to i16*
  store i16 %v3_10000fa8, i16* %v5_10000fb0, align 2
  %v0_10000fb4 = load i32, i32* %r21.global-to-local, align 4
  %v0_10000fb8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000fb8 = trunc i32 %v0_10000fb8 to i16
  %v2_10000fb8 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000fb8 = add i32 %v2_10000fb8, 6
  %v4_10000fb8 = inttoptr i32 %v3_10000fb8 to i16*
  store i16 %v1_10000fb8, i16* %v4_10000fb8, align 2
  %v0_10000fbc = load i32, i32* @r31, align 4
  store i32 %v0_10000fbc, i32* %r3.global-to-local, align 4
  %v0_10000fc0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000fc0 = add i32 %v0_10000fc0, 4
  %v2_10000fc0 = inttoptr i32 %v1_10000fc0 to i16*
  %v3_10000fc0 = load i16, i16* %v2_10000fc0, align 2
  %v4_10000fc0 = zext i16 %v3_10000fc0 to i32
  %v4_10000fc4 = call i32 @function_10004430(i32 %v0_10000fbc, i32 %v0_10000fac, i32 %v4_10000fc0, i32 %v0_10000fb4)
  %v5_10000fc4 = trunc i32 %v4_10000fc4 to i16
  store i32 %v4_10000fc4, i32* %r3.global-to-local, align 4
  %v3_10000fc8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10000fc8, i32* %r0.global-to-local, align 4
  %v0_10000fcc = load i32, i32* %r28.global-to-local, align 4
  %v1_10000fcc = add i32 %v0_10000fcc, 16
  %v2_10000fcc = inttoptr i32 %v1_10000fcc to i32*
  %v3_10000fcc = load i32, i32* %v2_10000fcc, align 4
  store i32 %v3_10000fcc, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10000fd4 = mul i32 %v3_10000fc8, 24
  store i32 %v1_10000fd4, i32* %r0.global-to-local, align 4
  %v3_10000fd8 = load i32, i32* %r27.global-to-local, align 4
  %v4_10000fd8 = add i32 %v3_10000fd8, 6
  %v5_10000fd8 = inttoptr i32 %v4_10000fd8 to i16*
  store i16 %v5_10000fc4, i16* %v5_10000fd8, align 2
  %v0_10000fdc = load i32, i32* %r28.global-to-local, align 4
  %v0_10000fe0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000fe0, i32* %r3.global-to-local, align 4
  %v0_10000fe4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000fe4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000fe4 = add i32 %v1_10000fe4, %v0_10000fe4
  %v0_10000fe8 = load i32, i32* %r9.global-to-local, align 4
  %v3_10000fe8 = trunc i32 %v0_10000fe8 to i16
  %v5_10000fe8 = inttoptr i32 %v2_10000fe4 to i16*
  store i16 %v3_10000fe8, i16* %v5_10000fe8, align 2
  %v0_10000fec = load i32, i32* %r11.global-to-local, align 4
  %v2_10000fec = add i32 %v2_10000fe4, 4
  %v3_10000fec = inttoptr i32 %v2_10000fec to i32*
  store i32 %v0_10000fec, i32* %v3_10000fec, align 4
  %v0_10000ff0 = load i32, i32* %r22.global-to-local, align 4
  %v0_10000ff4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000ff4 = trunc i32 %v0_10000ff4 to i16
  %v3_10000ff4 = add i32 %v2_10000fe4, 2
  %v4_10000ff4 = inttoptr i32 %v3_10000ff4 to i16*
  store i16 %v1_10000ff4, i16* %v4_10000ff4, align 2
  store i32 268439556, i32* @lr, align 4
  %v6_10001000 = call i32 @function_10009d70(i32 %v0_10000fe0, i32 %v0_10000fdc, i32 %v0_10000ff0, i32 16384, i32 %v2_10000fe4, i32 16)
  store i32 %v6_10001000, i32* %r3.global-to-local, align 4
  %v3_10001004 = load i32, i32* %stack_var_-104, align 4
  %v1_10001008 = add i32 %v3_10001004, 1
  store i32 %v1_10001008, i32* %r9.global-to-local, align 4
  %v1_1000100c = load i32, i32* %r18.global-to-local, align 4
  %v2_1000100c = icmp slt i32 %v1_10001008, %v1_1000100c
  %v4_1000100c = icmp eq i32 %v1_10001008, %v1_1000100c
  store i1 %v4_1000100c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001008, i32* %stack_var_-104, align 4
  br i1 %v2_1000100c, label %dec_label_pc_10000ec8, label %dec_label_pc_10001018

dec_label_pc_10001018:                            ; preds = %dec_label_pc_10000f88
  %v0_10001018 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001018 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001018 = or i1 %v0_10001018, %v1_10001018
  br i1 %v2_10001018, label %dec_label_pc_10000eb4.outer, label %dec_label_pc_10000eb8

dec_label_pc_10001020:                            ; preds = %dec_label_pc_10000ec8
  %v1_10001020 = add i32 %v2_10000ed4, 16
  %v2_10001020 = inttoptr i32 %v1_10001020 to i32*
  %v3_10001020 = load i32, i32* %v2_10001020, align 4
  store i32 %v3_10001020, i32* %r29.global-to-local, align 4
  %v0_10001024 = call i32 @function_10005f3c()
  store i32 %v0_10001024, i32* %r3.global-to-local, align 4
  %v3_10001028 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001028, i32* %r9.global-to-local, align 4
  %v0_1000102c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000102c = mul i32 %v0_1000102c, 16
  %v2_1000102c = udiv i32 %v0_1000102c, 268435456
  %v3_1000102c = or i32 %v2_1000102c, %v1_1000102c
  store i32 %v3_1000102c, i32* %r20.global-to-local, align 4
  %v1_10001030 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000102c)
  %v1_10001034 = mul nuw i32 %v2_1000102c, 268435456
  %v2_10001034 = urem i32 %v0_1000102c, 268435456
  %v3_10001034 = or i32 %v1_10001034, %v2_10001034
  store i32 %v3_10001034, i32* %r20.global-to-local, align 4
  %v0_10001038 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001038 = mul i32 %v0_10001038, 24
  %v1_1000103c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000103c = add i32 %v1_1000103c, %v1_10001038
  store i32 %v2_1000103c, i32* %r9.global-to-local, align 4
  %v1_10001040 = add i32 %v2_1000103c, 20
  %v2_10001040 = inttoptr i32 %v1_10001040 to i8*
  %v3_10001040 = load i8, i8* %v2_10001040, align 1
  %v4_10001040 = zext i8 %v3_10001040 to i32
  store i32 %v4_10001040, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10001040, 64
  %v2_10001044 = zext i8 %tmp to i32
  %v3_10001044 = lshr i32 %v0_10001024, %v2_10001044
  store i32 %v3_10001044, i32* %r3.global-to-local, align 4
  %v0_10001048 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001048 = add i32 %v3_10001044, %v0_10001048
  store i32 %v2_10001048, i32* %r29.global-to-local, align 4
  %v1_1000104c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000104c = add i32 %v1_1000104c, 16
  %v3_1000104c = inttoptr i32 %v2_1000104c to i32*
  store i32 %v2_10001048, i32* %v3_1000104c, align 4
  %v0_10001050 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001050, label %dec_label_pc_10001054, label %dec_label_pc_10000f00

dec_label_pc_10001054:                            ; preds = %dec_label_pc_10001020, %dec_label_pc_10000ef0
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10001058 = call i32 @function_10005f3c()
  store i32 %v0_10001058, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10001060 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001060 = add i32 %v1_10001060, 12
  %v3_10001060 = inttoptr i32 %v2_10001060 to i32*
  store i32 %v0_10001058, i32* %v3_10001060, align 4
  %v0_10001064 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001064 = load i32, i32* @r29, align 4
  %v4_10001064 = icmp eq i32 %v0_10001064, %v1_10001064
  store i1 %v4_10001064, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001064, label %dec_label_pc_1000106c, label %dec_label_pc_10000f10

dec_label_pc_1000106c:                            ; preds = %dec_label_pc_10001054, %dec_label_pc_10000f00
  %v0_1000106c = call i32 @function_10005f3c()
  %v0_10001070 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001070 = load i32, i32* @r29, align 4
  %v4_10001070 = icmp eq i32 %v0_10001070, %v1_10001070
  store i1 %v4_10001070, i1* %cr7_eq.global-to-local, align 1
  %v1_10001074 = urem i32 %v0_1000106c, 65536
  store i32 %v1_10001074, i32* %r3.global-to-local, align 4
  %v1_10001078 = add nsw i32 %v1_10001074, -1000
  store i32 %v1_10001078, i32* %r0.global-to-local, align 4
  %v1_1000107c = trunc i32 %v0_1000106c to i16
  %v2_1000107c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000107c = add i32 %v2_1000107c, 4
  %v4_1000107c = inttoptr i32 %v3_1000107c to i16*
  store i16 %v1_1000107c, i16* %v4_1000107c, align 2
  %v0_10001080 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001080 = sub i32 -1, %v0_10001080
  store i32 %v1_10001080, i32* %r0.global-to-local, align 4
  %v1_10001084 = trunc i32 %v1_10001080 to i16
  %v2_10001084 = load i32, i32* @r31, align 4
  %v3_10001084 = add i32 %v2_10001084, 4
  %v4_10001084 = inttoptr i32 %v3_10001084 to i16*
  store i16 %v1_10001084, i16* %v4_10001084, align 2
  br i1 %v4_10001070, label %dec_label_pc_1000108c, label %dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge

dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge: ; preds = %dec_label_pc_1000106c
  %v1_10000f18.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10000f18

dec_label_pc_1000108c:                            ; preds = %dec_label_pc_1000106c, %dec_label_pc_10000f10
  %v0_1000108c = call i32 @function_10005f3c()
  %v1_1000108c = trunc i32 %v0_1000108c to i16
  store i32 %v0_1000108c, i32* %r3.global-to-local, align 4
  %v0_10001090 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001090 = load i32, i32* @r29, align 4
  %v4_10001090 = icmp eq i32 %v0_10001090, %v1_10001090
  store i1 %v4_10001090, i1* %cr7_eq.global-to-local, align 1
  %v3_10001094 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001094 = add i32 %v3_10001094, 58
  %v5_10001094 = inttoptr i32 %v4_10001094 to i16*
  store i16 %v1_1000108c, i16* %v5_10001094, align 2
  br i1 %v4_10001090, label %dec_label_pc_1000109c, label %dec_label_pc_10000f20

dec_label_pc_1000109c:                            ; preds = %dec_label_pc_1000108c, %dec_label_pc_10000f18
  %v0_1000109c = call i32 @function_10005f3c()
  %v1_1000109c = trunc i32 %v0_1000109c to i16
  store i32 %v0_1000109c, i32* %r3.global-to-local, align 4
  %v3_100010a0 = load i32, i32* %r27.global-to-local, align 4
  %v4_100010a0 = add i32 %v3_100010a0, 2
  %v5_100010a0 = inttoptr i32 %v4_100010a0 to i16*
  store i16 %v1_1000109c, i16* %v5_100010a0, align 2
  %v0_100010a4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100010a4, label %dec_label_pc_100010a8, label %dec_label_pc_10000f24

dec_label_pc_100010a8:                            ; preds = %dec_label_pc_1000109c, %dec_label_pc_10000f20
  %v0_100010a8 = call i32 @function_10005f3c()
  store i32 %v0_100010a8, i32* %r3.global-to-local, align 4
  %v1_100010ac = load i32, i32* @r31, align 4
  %v2_100010ac = add i32 %v1_100010ac, 16
  %v3_100010ac = inttoptr i32 %v2_100010ac to i32*
  store i32 %v0_100010a8, i32* %v3_100010ac, align 4
  br label %dec_label_pc_10000f2c

dec_label_pc_100010b4:                            ; preds = %dec_label_pc_10000f2c
  %v0_100010b4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100010b4 = add i32 %v0_100010b4, 8
  store i32 %v1_100010b4, i32* @r3, align 4
  %v0_100010b8 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_100010b8, i32* @r4, align 4
  %v0_100010bc = call i32 @function_10006110()
  store i32 %v0_100010bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000f88

; uselistorder directives
  uselistorder i32 %v0_1000109c, { 1, 0 }
  uselistorder i32 %v0_1000108c, { 1, 0 }
  uselistorder i32 %v1_10001080, { 1, 0 }
  uselistorder i32 %v1_10001074, { 1, 0 }
  uselistorder i32 %v0_1000106c, { 1, 0 }
  uselistorder i32 %v1_10001064, { 1, 0 }
  uselistorder i32 %v0_1000102c, { 2, 1, 0 }
  uselistorder i1 %v1_10001018, { 1, 0 }
  uselistorder i1 %v0_10001018, { 1, 0 }
  uselistorder i32 %v1_10001008, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10000fe4, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10000fc4, { 1, 0 }
  uselistorder i32 %v0_10000ef0, { 2, 1, 0 }
  uselistorder i32 %v4_10000ed0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000ecc, { 1, 0 }
  uselistorder i32 %v1_10000e18, { 1, 0 }
  uselistorder i32 %v1_10000d54, { 1, 0 }
  uselistorder i32 %v1_10000d48, { 1, 0 }
  uselistorder i32 %v1_10000ce4, { 1, 0 }
  uselistorder i32 %v0_10000ce4, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10000cd4, { 1, 2, 0 }
  uselistorder i32 %v0_10000cc8, { 1, 0 }
  uselistorder i32 %v5_10000c74, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 9, 10, 11, 12, 13, 3, 14, 4, 15, 16, 17, 18, 19, 20, 21, 22, 1, 29, 23, 24, 25, 26, 27, 28, 5, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r27.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9, 10 }
  uselistorder i32* %r20.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 12, 26, 27, 28, 29, 30 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32 66, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000f88, { 1, 0 }
  uselistorder label %dec_label_pc_10000eb8, { 1, 0 }
  uselistorder label %dec_label_pc_10000eb4, { 1, 0 }
  uselistorder label %dec_label_pc_10000e94, { 1, 0 }
  uselistorder label %dec_label_pc_10000e30, { 1, 0 }
  uselistorder label %dec_label_pc_10000e04, { 1, 0 }
  uselistorder label %dec_label_pc_10000d9c, { 1, 0 }
}

define i32 @function_100010c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100010c4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_100010c8 = load i32, i32* @lr, align 4
  store i32 %v0_100010c8, i32* %r0.global-to-local, align 4
  %v0_100010cc = call i32 @__asm_mfcr()
  store i32 %v0_100010cc, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r26.global-to-local, align 4
  %v0_100010dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100010cc, i32* %r19.global-to-local, align 4
  %v0_10001110 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001118 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10001120 = load i32, i32* @r30, align 4
  %v0_10001124 = load i32, i32* @r31, align 4
  store i32 268439864, i32* @lr, align 4
  %v2_10001134 = call i32 @function_1000a148(i32 4, i32 4)
  store i32 %v2_10001134, i32* %r20.global-to-local, align 4
  %v0_1000113c = load i32, i32* @r28, align 4
  %v0_10001148 = load i32, i32* @r29, align 4
  store i32 %v0_10001148, i32* %r3.global-to-local, align 4
  store i32 268439888, i32* @lr, align 4
  %v4_1000114c = inttoptr i32 %v0_1000113c to i32*
  %v5_1000114c = call i32 @function_100006a8(i32 %v0_10001148, i32* %v4_1000114c, i32 2, i32 0)
  %v0_1000115c = load i32, i32* @r28, align 4
  %v1_10001160 = urem i32 %v5_1000114c, 256
  store i32 %v1_10001160, i32* %r14.global-to-local, align 4
  %v0_10001164 = load i32, i32* @r29, align 4
  store i32 %v0_10001164, i32* %r3.global-to-local, align 4
  store i32 268439916, i32* @lr, align 4
  %v4_10001168 = inttoptr i32 %v0_1000115c to i32*
  %v5_10001168 = call i32 @function_100006a8(i32 %v0_10001164, i32* %v4_10001168, i32 3, i32 65535)
  %v0_1000116c = load i32, i32* @r28, align 4
  store i32 %v5_10001168, i32* %r25.global-to-local, align 4
  %v0_1000117c = load i32, i32* @r29, align 4
  store i32 %v0_1000117c, i32* %r3.global-to-local, align 4
  store i32 268439940, i32* @lr, align 4
  %v4_10001180 = inttoptr i32 %v0_1000116c to i32*
  %v5_10001180 = call i32 @function_100006a8(i32 %v0_1000117c, i32* %v4_10001180, i32 4, i32 64)
  %v0_10001184 = load i32, i32* @r28, align 4
  %v1_10001190 = urem i32 %v5_10001180, 256
  store i32 %v1_10001190, i32* %r21.global-to-local, align 4
  %v0_10001194 = load i32, i32* @r29, align 4
  store i32 %v0_10001194, i32* %r3.global-to-local, align 4
  store i32 268439964, i32* @lr, align 4
  %v4_10001198 = inttoptr i32 %v0_10001184 to i32*
  %v5_10001198 = call i32 @function_100006a8(i32 %v0_10001194, i32* %v4_10001198, i32 5, i32 1)
  %v0_100011a8 = load i32, i32* @r28, align 4
  %v1_100011ac = urem i32 %v5_10001198, 256
  store i32 %v1_100011ac, i32* @r31, align 4
  %v0_100011b0 = load i32, i32* @r29, align 4
  store i32 %v0_100011b0, i32* %r3.global-to-local, align 4
  store i32 268439992, i32* @lr, align 4
  %v4_100011b4 = inttoptr i32 %v0_100011a8 to i32*
  %v5_100011b4 = call i32 @function_100006a8(i32 %v0_100011b0, i32* %v4_100011b4, i32 6, i32 65535)
  %v0_100011bc = load i32, i32* @r28, align 4
  store i32 %v5_100011b4, i32* %r24.global-to-local, align 4
  %v0_100011cc = load i32, i32* @r29, align 4
  store i32 %v0_100011cc, i32* %r3.global-to-local, align 4
  store i32 268440020, i32* @lr, align 4
  %v4_100011d0 = inttoptr i32 %v0_100011bc to i32*
  %v5_100011d0 = call i32 @function_100006a8(i32 %v0_100011cc, i32* %v4_100011d0, i32 7, i32 65535)
  %v0_100011d4 = load i32, i32* @r28, align 4
  store i32 %v5_100011d0, i32* %r27.global-to-local, align 4
  %v0_100011e4 = load i32, i32* @r29, align 4
  store i32 %v0_100011e4, i32* %r3.global-to-local, align 4
  store i32 268440044, i32* @lr, align 4
  %v4_100011e8 = inttoptr i32 %v0_100011d4 to i32*
  %v5_100011e8 = call i32 @function_100006a8(i32 %v0_100011e4, i32* %v4_100011e8, i32 0, i32 512)
  %v0_100011ec = load i32, i32* @r28, align 4
  store i32 %v5_100011e8, i32* %r16.global-to-local, align 4
  %v0_100011fc = load i32, i32* @r29, align 4
  store i32 %v0_100011fc, i32* %r3.global-to-local, align 4
  store i32 268440068, i32* @lr, align 4
  %v4_10001200 = inttoptr i32 %v0_100011ec to i32*
  %v5_10001200 = call i32 @function_100006a8(i32 %v0_100011fc, i32* %v4_10001200, i32 1, i32 1)
  %v0_10001204 = load i32, i32* @r28, align 4
  %v1_10001210 = urem i32 %v5_10001200, 256
  store i32 %v1_10001210, i32* %r15.global-to-local, align 4
  %v0_10001214 = load i32, i32* @r29, align 4
  store i32 %v0_10001214, i32* %r3.global-to-local, align 4
  store i32 268440092, i32* @lr, align 4
  %v4_10001218 = inttoptr i32 %v0_10001204 to i32*
  %v5_10001218 = call i32 @function_100006a8(i32 %v0_10001214, i32* %v4_10001218, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10001220 = load i32, i32* @global_var_1001c208.14, align 4
  %v0_10001224 = load i32, i32* @r28, align 4
  store i32 %v5_10001218, i32* %r30.global-to-local, align 4
  %v0_10001230 = load i32, i32* @r29, align 4
  store i32 %v0_10001230, i32* %r3.global-to-local, align 4
  store i32 268440120, i32* @lr, align 4
  %v4_10001234 = inttoptr i32 %v0_10001224 to i32*
  %v5_10001234 = call i32 @function_100006a8(i32 %v0_10001230, i32* %v4_10001234, i32 25, i32 %v3_10001220)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268440140, i32* @lr, align 4
  %v3_10001248 = call i32 @function_10009dec(i32 2, i32 3, i32 6)
  store i32 %v3_10001248, i32* %r3.global-to-local, align 4
  %v3_1000124c = icmp eq i32 %v3_10001248, -1
  store i1 %v3_1000124c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001248, i32* %r23.global-to-local, align 4
  br i1 %v3_1000124c, label %dec_label_pc_100013e4, label %dec_label_pc_10001258

dec_label_pc_10001258:                            ; preds = %dec_label_pc_100010c4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001264 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268440180, i32* @lr, align 4
  %v4_10001270 = call i32 @function_10009db0(i32 0, i32 3, i32 %v2_10001264, i32 4)
  store i32 %v4_10001270, i32* %r3.global-to-local, align 4
  %v3_10001274 = icmp eq i32 %v4_10001270, -1
  store i1 %v3_10001274, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001274, label %dec_label_pc_100013dc, label %dec_label_pc_1000127c

dec_label_pc_1000127c:                            ; preds = %dec_label_pc_10001258
  %v0_1000127c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000127c = icmp slt i32 %v0_1000127c, 0
  %v3_1000127c = icmp eq i32 %v0_1000127c, 0
  store i1 %v1_1000127c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000127c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10001288 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001288 = urem i32 %v0_10001288, 65536
  store i32 %v1_10001288, i32* %r25.global-to-local, align 4
  %v0_1000128c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000128c = urem i32 %v0_1000128c, 65536
  store i32 %v1_1000128c, i32* %r17.global-to-local, align 4
  %v0_10001290 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001290 = urem i32 %v0_10001290, 65536
  store i32 %v1_10001290, i32* %r18.global-to-local, align 4
  %v0_10001294 = load i32, i32* %r30.global-to-local, align 4
  %v1_10001294 = urem i32 %v0_10001294, 256
  store i32 %v1_10001294, i32* %r3.global-to-local, align 4
  %tmp33 = icmp slt i32 %v0_1000127c, 1
  br i1 %tmp33, label %dec_label_pc_10001444, label %dec_label_pc_1000129c

dec_label_pc_1000129c:                            ; preds = %dec_label_pc_1000127c
  %v0_1000129c = load i32, i32* @r31, align 4
  %v3_1000129c = icmp eq i32 %v0_1000129c, 0
  store i1 %v3_1000129c, i1* %cr2_eq.global-to-local, align 1
  %v3_100012a0 = icmp eq i32 %v1_10001294, 0
  store i1 %v3_100012a0, i1* %cr3_eq.global-to-local, align 1
  %v0_100012a4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100012a4 = urem i32 %v0_100012a4, 65536
  %v0_10001288.not = or i32 %v0_10001288, -65536
  %v1_100012a8 = xor i32 %v0_10001288.not, 65535
  store i32 %v1_100012a8, i32* %r11.global-to-local, align 4
  %v1_100012b0 = add nuw nsw i32 %v1_100012a4, 52
  store i32 %v1_100012b0, i32* %r0.global-to-local, align 4
  %v1_100012b4 = add nuw nsw i32 %v1_100012a4, 28
  store i32 %v1_100012b4, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_100012a4, 52
  %v1_100012b8 = urem i32 %fold, 65536
  store i32 %v1_100012b8, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_100012a4, 28
  %v1_100012bc = urem i32 %fold8, 65536
  store i32 %v1_100012bc, i32* %r24.global-to-local, align 4
  %v1_100012c0 = urem i32 %v1_100012a8, 65536
  store i32 %v1_100012c0, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_100012a4, 8
  %v1_100012c4 = urem i32 %fold9, 65536
  store i32 %v1_100012c4, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100012f8

dec_label_pc_100012d0:                            ; preds = %dec_label_pc_100013b8
  %v0_100012d0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100012d0 = add i32 %v0_100012d0, 16
  %v2_100012d0 = inttoptr i32 %v1_100012d0 to i32*
  %v3_100012d0 = load i32, i32* %v2_100012d0, align 4
  store i32 %v3_100012d0, i32* %r0.global-to-local, align 4
  %v1_100012d4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100012d4 = add i32 %v1_100012d4, 16
  %v3_100012d4 = inttoptr i32 %v2_100012d4 to i32*
  store i32 %v3_100012d0, i32* %v3_100012d4, align 4
  br label %dec_label_pc_100012d8

dec_label_pc_100012d8:                            ; preds = %dec_label_pc_100013d4, %dec_label_pc_100012d0
  %v3_100012d8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100012d8, i32* %r9.global-to-local, align 4
  %v0_100012dc = load i32, i32* @r28, align 4
  %v1_100012dc = trunc i32 %v0_100012dc to i16
  %v2_100012dc = load i32, i32* %r29.global-to-local, align 4
  %v3_100012dc = add i32 %v2_100012dc, 4
  %v4_100012dc = inttoptr i32 %v3_100012dc to i16*
  store i16 %v1_100012dc, i16* %v4_100012dc, align 2
  %v0_100012e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100012e0 = add i32 %v0_100012e0, 1
  store i32 %v1_100012e0, i32* %r31.global-to-local, align 4
  %v0_100012e4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100012e4 = trunc i32 %v0_100012e4 to i16
  %v2_100012e4 = load i32, i32* %r29.global-to-local, align 4
  %v3_100012e4 = inttoptr i32 %v2_100012e4 to i16*
  store i16 %v1_100012e4, i16* %v3_100012e4, align 2
  %v0_100012e8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100012e8 = load i32, i32* %r19.global-to-local, align 4
  %v2_100012e8 = icmp slt i32 %v0_100012e8, %v1_100012e8
  %v4_100012e8 = icmp eq i32 %v0_100012e8, %v1_100012e8
  store i1 %v4_100012e8, i1* %cr7_eq.global-to-local, align 1
  %v0_100012ec = load i32, i32* %r18.global-to-local, align 4
  %v1_100012ec = trunc i32 %v0_100012ec to i16
  %v2_100012ec = load i32, i32* %r29.global-to-local, align 4
  %v3_100012ec = add i32 %v2_100012ec, 2
  %v4_100012ec = inttoptr i32 %v3_100012ec to i16*
  store i16 %v1_100012ec, i16* %v4_100012ec, align 2
  %v0_100012f0 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100012f0, i32* %stack_var_-104, align 4
  br i1 %v2_100012e8, label %dec_label_pc_100012f8, label %dec_label_pc_10001448

dec_label_pc_100012f8:                            ; preds = %dec_label_pc_100012d8, %dec_label_pc_1000129c
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268440324, i32* @lr, align 4
  %v2_10001300 = call i32 @function_1000a148(i32 1510, i32 4)
  store i32 %v2_10001300, i32* %r3.global-to-local, align 4
  %v3_10001304 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001304, i32* %r9.global-to-local, align 4
  %v0_10001308 = load i32, i32* @r31, align 4
  %v1_10001308 = mul i32 %v0_10001308, 4
  store i32 %v1_10001308, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10001310 = load i32, i32* %r20.global-to-local, align 4
  %v3_10001310 = add i32 %v1_10001310, %v1_10001308
  %v4_10001310 = inttoptr i32 %v3_10001310 to i32*
  store i32 %v2_10001300, i32* %v4_10001310, align 4
  %v0_10001314 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001314 = mul i32 %v0_10001314, 4
  store i32 %v1_10001314, i32* %r9.global-to-local, align 4
  %v1_10001318 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001318 = add i32 %v1_10001318, %v1_10001314
  %v3_10001318 = inttoptr i32 %v2_10001318 to i32*
  %v4_10001318 = load i32, i32* %v3_10001318, align 4
  store i32 %v4_10001318, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10001320 = inttoptr i32 %v4_10001318 to i32*
  %v2_10001320 = load i32, i32* %v1_10001320, align 4
  store i32 %v2_10001320, i32* %r0.global-to-local, align 4
  %v1_10001324 = add i32 %v4_10001318, 24
  store i32 %v1_10001324, i32* %r30.global-to-local, align 4
  %v0_10001328 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001328 = trunc i32 %v0_10001328 to i8
  %v3_10001328 = add i32 %v4_10001318, 8
  %v4_10001328 = inttoptr i32 %v3_10001328 to i8*
  store i8 %v1_10001328, i8* %v4_10001328, align 1
  %v0_1000132c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000132c = add i32 %v0_1000132c, 44
  store i32 %v1_1000132c, i32* %r29.global-to-local, align 4
  %v1_10001330 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001330, i32* %r0.global-to-local, align 4
  %v0_10001334 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001334 = trunc i32 %v0_10001334 to i16
  %v2_10001334 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001334 = add i32 %v2_10001334, 4
  %v4_10001334 = inttoptr i32 %v3_10001334 to i16*
  store i16 %v1_10001334, i16* %v4_10001334, align 2
  %v1_10001338 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001338, i32* %r0.global-to-local, align 4
  %v0_1000133c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000133c = add i32 %v0_1000133c, 20
  store i32 %v1_1000133c, i32* %r9.global-to-local, align 4
  %v2_10001340 = inttoptr i32 %v0_1000133c to i32*
  store i32 %v1_10001338, i32* %v2_10001340, align 4
  %v0_10001344 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001344 = trunc i32 %v0_10001344 to i8
  %v2_10001344 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001344 = add i32 %v2_10001344, 1
  %v4_10001344 = inttoptr i32 %v3_10001344 to i8*
  store i8 %v1_10001344, i8* %v4_10001344, align 1
  %v0_10001348 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001348 = trunc i32 %v0_10001348 to i16
  %v2_10001348 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001348 = add i32 %v2_10001348, 2
  %v4_10001348 = inttoptr i32 %v3_10001348 to i16*
  store i16 %v1_10001348, i16* %v4_10001348, align 2
  %v0_1000134c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000134c, label %dec_label_pc_10001358, label %dec_label_pc_10001350

dec_label_pc_10001350:                            ; preds = %dec_label_pc_100012f8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001354 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001354 = add i32 %v2_10001354, 6
  %v4_10001354 = inttoptr i32 %v3_10001354 to i16*
  store i16 16384, i16* %v4_10001354, align 2
  br label %dec_label_pc_10001358

dec_label_pc_10001358:                            ; preds = %dec_label_pc_100012f8, %dec_label_pc_10001350
  store i32 2048, i32* %r0.global-to-local, align 4
  %v2_10001360 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001360 = add i32 %v2_10001360, 9
  %v4_10001360 = inttoptr i32 %v3_10001360 to i8*
  store i8 47, i8* %v4_10001360, align 1
  %v0_10001364 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001364 = trunc i32 %v0_10001364 to i16
  %v2_10001364 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001364 = add i32 %v2_10001364, 2
  %v4_10001364 = inttoptr i32 %v3_10001364 to i16*
  store i16 %v1_10001364, i16* %v4_10001364, align 2
  %v3_10001368 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10001234, i32* %r11.global-to-local, align 4
  %v1_10001370 = mul i32 %v3_10001368, 24
  store i32 %v1_10001370, i32* %r9.global-to-local, align 4
  %v0_10001374 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001374 = add i32 %v0_10001374, 24
  %v2_10001374 = inttoptr i32 %v1_10001374 to i32*
  %v3_10001374 = load i32, i32* %v2_10001374, align 4
  store i32 %v3_10001374, i32* %r0.global-to-local, align 4
  %v2_10001378 = add i32 %v0_10001374, 12
  %v3_10001378 = inttoptr i32 %v2_10001378 to i32*
  store i32 %v5_10001234, i32* %v3_10001378, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10001380 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001380 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001380 = add i32 %v1_10001380, %v0_10001380
  store i32 %v2_10001380, i32* %r9.global-to-local, align 4
  %v1_10001384 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001384, i32* %r0.global-to-local, align 4
  %v0_10001388 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001388 = add i32 %v0_10001388, 16
  %v2_10001388 = inttoptr i32 %v1_10001388 to i32*
  %v3_10001388 = load i32, i32* %v2_10001388, align 4
  store i32 %v3_10001388, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001390 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001390, i32* %r0.global-to-local, align 4
  %v1_10001394 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001394 = add i32 %v1_10001394, 24
  %v3_10001394 = inttoptr i32 %v2_10001394 to i32*
  store i32 %v1_10001390, i32* %v3_10001394, align 4
  %v0_10001398 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001398 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001398 = add i32 %v1_10001398, 16
  %v3_10001398 = inttoptr i32 %v2_10001398 to i32*
  store i32 %v0_10001398, i32* %v3_10001398, align 4
  %v0_1000139c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000139c = trunc i32 %v0_1000139c to i8
  %v2_1000139c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000139c = add i32 %v2_1000139c, 1
  %v4_1000139c = inttoptr i32 %v3_1000139c to i8*
  store i8 %v1_1000139c, i8* %v4_1000139c, align 1
  %v0_100013a0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100013a0 = trunc i32 %v0_100013a0 to i16
  %v2_100013a0 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013a0 = add i32 %v2_100013a0, 2
  %v4_100013a0 = inttoptr i32 %v3_100013a0 to i16*
  store i16 %v1_100013a0, i16* %v4_100013a0, align 2
  %v0_100013a4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100013a4 = trunc i32 %v0_100013a4 to i16
  %v2_100013a4 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013a4 = add i32 %v2_100013a4, 4
  %v4_100013a4 = inttoptr i32 %v3_100013a4 to i16*
  store i16 %v1_100013a4, i16* %v4_100013a4, align 2
  %v0_100013a8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100013a8 = trunc i32 %v0_100013a8 to i8
  %v2_100013a8 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013a8 = add i32 %v2_100013a8, 8
  %v4_100013a8 = inttoptr i32 %v3_100013a8 to i8*
  store i8 %v1_100013a8, i8* %v4_100013a8, align 1
  %v0_100013ac = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100013ac, label %dec_label_pc_100013b8, label %dec_label_pc_100013b0

dec_label_pc_100013b0:                            ; preds = %dec_label_pc_10001358
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_100013b4 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013b4 = add i32 %v2_100013b4, 6
  %v4_100013b4 = inttoptr i32 %v3_100013b4 to i16*
  store i16 16384, i16* %v4_100013b4, align 2
  br label %dec_label_pc_100013b8

dec_label_pc_100013b8:                            ; preds = %dec_label_pc_10001358, %dec_label_pc_100013b0
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100013bc = load i32, i32* %r30.global-to-local, align 4
  %v3_100013bc = add i32 %v2_100013bc, 9
  %v4_100013bc = inttoptr i32 %v3_100013bc to i8*
  store i8 17, i8* %v4_100013bc, align 1
  %v0_100013c0 = call i32 @function_10005f3c()
  store i32 %v0_100013c0, i32* %r3.global-to-local, align 4
  %v1_100013c4 = add i32 %v0_100013c0, -1024
  store i32 %v1_100013c4, i32* %r0.global-to-local, align 4
  %v1_100013c8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100013c8 = add i32 %v1_100013c8, 12
  %v3_100013c8 = inttoptr i32 %v2_100013c8 to i32*
  store i32 %v0_100013c0, i32* %v3_100013c8, align 4
  %v0_100013cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100013cc = sub i32 -1, %v0_100013cc
  store i32 %v1_100013cc, i32* %r0.global-to-local, align 4
  %v0_100013d0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100013d0, label %dec_label_pc_100013d4, label %dec_label_pc_100012d0

dec_label_pc_100013d4:                            ; preds = %dec_label_pc_100013b8
  %v1_100013d4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100013d4 = add i32 %v1_100013d4, 16
  %v3_100013d4 = inttoptr i32 %v2_100013d4 to i32*
  store i32 %v1_100013cc, i32* %v3_100013d4, align 4
  br label %dec_label_pc_100012d8

dec_label_pc_100013dc:                            ; preds = %dec_label_pc_10001258
  %v0_100013dc = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_100013dc, i32* %r3.global-to-local, align 4
  store i32 268440548, i32* @lr, align 4
  %v0_100013e0 = call i32 @function_1000909c()
  store i32 %v0_100013e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100013e4

dec_label_pc_100013e4:                            ; preds = %dec_label_pc_100010c4, %dec_label_pc_100013dc
  store i32 %v0_100010dc, i32* %r0.global-to-local, align 4
  %v1_100013f8 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100010cc)
  store i32 %v0_10001110, i32* %r28.global-to-local, align 4
  store i32 %v0_10001118, i32* %r29.global-to-local, align 4
  store i32 %v0_10001120, i32* %r30.global-to-local, align 4
  store i32 %v0_10001124, i32* %r31.global-to-local, align 4
  %v0_10001440 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001440

dec_label_pc_10001444:                            ; preds = %dec_label_pc_1000127c
  %v3_10001444 = icmp eq i32 %v1_10001294, 0
  store i1 %v3_10001444, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10001448

dec_label_pc_10001448:                            ; preds = %dec_label_pc_100012d8, %dec_label_pc_10001444
  store i32 %v5_10001234, i32* %r0.global-to-local, align 4
  %v0_1000144c = load i32, i32* %r15.global-to-local, align 4
  %v3_1000144c = icmp eq i32 %v0_1000144c, 0
  store i1 %v3_1000144c, i1* %cr2_eq.global-to-local, align 1
  %v0_10001450 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001450 = add i32 %v0_10001450, 8
  store i32 %v1_10001450, i32* %r22.global-to-local, align 4
  %v1_10001454 = add i32 %v0_10001450, 52
  store i32 %v1_10001454, i32* %r24.global-to-local, align 4
  %v3_10001458 = icmp eq i32 %v5_10001234, -1
  store i1 %v3_10001458, i1* %cr7_eq.global-to-local, align 1
  %v0_1000145c = call i32 @__asm_mfcr()
  store i32 %v0_1000145c, i32* %r3.global-to-local, align 4
  %v1_10001460 = mul i32 %v0_1000145c, 268435456
  store i32 %v1_10001460, i32* %r21.global-to-local, align 4
  %v0_10001464.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001464.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001464.outer

dec_label_pc_10001464.outer:                      ; preds = %dec_label_pc_1000156c, %dec_label_pc_10001448
  %v1_10001464.ph = phi i1 [ %v1_10001464.pre, %dec_label_pc_10001448 ], [ %v1_1000156c, %dec_label_pc_1000156c ]
  %v0_10001464.ph = phi i1 [ %v0_10001464.pre, %dec_label_pc_10001448 ], [ %v0_1000156c, %dec_label_pc_1000156c ]
  %v2_10001464 = or i1 %v1_10001464.ph, %v0_10001464.ph
  br label %dec_label_pc_10001464

dec_label_pc_10001464:                            ; preds = %dec_label_pc_10001464.outer, %dec_label_pc_10001464
  br i1 %v2_10001464, label %dec_label_pc_10001464, label %dec_label_pc_10001468

dec_label_pc_10001468:                            ; preds = %dec_label_pc_10001464, %dec_label_pc_1000156c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001478

dec_label_pc_10001478:                            ; preds = %dec_label_pc_100014dc, %dec_label_pc_10001468
  %v0_10001478 = phi i32 [ %v1_1000155c, %dec_label_pc_100014dc ], [ 0, %dec_label_pc_10001468 ]
  %v1_10001478 = mul i32 %v0_10001478, 24
  store i32 %v1_10001478, i32* %r0.global-to-local, align 4
  %v1_1000147c = mul i32 %v0_10001478, 4
  store i32 %v1_1000147c, i32* %r11.global-to-local, align 4
  %v1_10001480 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001480 = add i32 %v1_10001480, %v1_1000147c
  %v3_10001480 = inttoptr i32 %v2_10001480 to i32*
  %v4_10001480 = load i32, i32* %v3_10001480, align 4
  store i32 %v4_10001480, i32* %r28.global-to-local, align 4
  %v1_10001484 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001484 = add i32 %v1_10001484, %v1_10001478
  %v1_10001488 = add i32 %v2_10001484, 20
  %v2_10001488 = inttoptr i32 %v1_10001488 to i8*
  %v3_10001488 = load i8, i8* %v2_10001488, align 1
  %v4_10001488 = zext i8 %v3_10001488 to i32
  store i32 %v4_10001488, i32* %r9.global-to-local, align 4
  %v1_1000148c = add i32 %v4_10001480, 24
  store i32 %v1_1000148c, i32* @r31, align 4
  %v1_10001490 = add i32 %v4_10001480, 44
  store i32 %v1_10001490, i32* @r30, align 4
  %v3_10001494 = icmp eq i8 %v3_10001488, 31
  store i1 %v3_10001494, i1* %cr7_eq.global-to-local, align 1
  %tmp35 = icmp ult i8 %v3_10001488, 32
  br i1 %tmp35, label %dec_label_pc_10001574, label %dec_label_pc_1000149c

dec_label_pc_1000149c:                            ; preds = %dec_label_pc_10001478
  %v0_1000149c = load i32, i32* %r21.global-to-local, align 4
  %v1_1000149c = mul i32 %v0_1000149c, 16
  %v2_1000149c = udiv i32 %v0_1000149c, 268435456
  %v3_1000149c = or i32 %v2_1000149c, %v1_1000149c
  store i32 %v3_1000149c, i32* %r21.global-to-local, align 4
  %v1_100014a0 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000149c)
  %v1_100014a4 = mul nuw i32 %v2_1000149c, 268435456
  %v2_100014a4 = urem i32 %v0_1000149c, 268435456
  %v3_100014a4 = or i32 %v1_100014a4, %v2_100014a4
  store i32 %v3_100014a4, i32* %r21.global-to-local, align 4
  %v0_100014a8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100014a8, label %dec_label_pc_100015a8, label %dec_label_pc_100014ac

dec_label_pc_100014ac:                            ; preds = %dec_label_pc_10001574, %dec_label_pc_1000149c
  store i32 65535, i32* @r29, align 4
  %v0_100014b4 = load i32, i32* %r25.global-to-local, align 4
  %v4_100014b4 = icmp eq i32 %v0_100014b4, 65535
  store i1 %v4_100014b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100014b4, label %dec_label_pc_100015c0, label %dec_label_pc_100014bc

dec_label_pc_100014bc:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_100014ac
  %v1_100014bc = phi i32 [ %v1_100015b8, %dec_label_pc_100015a8 ], [ 65535, %dec_label_pc_100014ac ]
  %v0_100014bc = load i32, i32* %r17.global-to-local, align 4
  %v4_100014bc = icmp eq i32 %v0_100014bc, %v1_100014bc
  store i1 %v4_100014bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100014bc, label %dec_label_pc_100015e0, label %dec_label_pc_100014c4

dec_label_pc_100014c4:                            ; preds = %dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge, %dec_label_pc_100014bc
  %v1_100014c4 = phi i32 [ %v1_100014c4.pre, %dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge ], [ %v1_100014bc, %dec_label_pc_100014bc ]
  %v0_100014c4 = load i32, i32* %r18.global-to-local, align 4
  %v4_100014c4 = icmp eq i32 %v0_100014c4, %v1_100014c4
  store i1 %v4_100014c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100014c4, label %dec_label_pc_100015f0, label %dec_label_pc_100014cc

dec_label_pc_100014cc:                            ; preds = %dec_label_pc_100015e0, %dec_label_pc_100014c4
  %v0_100014cc = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100014cc, label %dec_label_pc_100015fc, label %dec_label_pc_100014d0

dec_label_pc_100014d0:                            ; preds = %dec_label_pc_100015f0, %dec_label_pc_100014cc
  %v0_100014d0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100014d0 = add i32 %v0_100014d0, 16
  %v2_100014d0 = inttoptr i32 %v1_100014d0 to i32*
  %v3_100014d0 = load i32, i32* %v2_100014d0, align 4
  store i32 %v3_100014d0, i32* %r0.global-to-local, align 4
  %v1_100014d4 = load i32, i32* @r31, align 4
  %v2_100014d4 = add i32 %v1_100014d4, 16
  %v3_100014d4 = inttoptr i32 %v2_100014d4 to i32*
  store i32 %v3_100014d0, i32* %v3_100014d4, align 4
  %v0_100014d8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100014d8, label %dec_label_pc_100014dc, label %dec_label_pc_10001608

dec_label_pc_100014dc:                            ; preds = %dec_label_pc_100014d0, %dec_label_pc_100015fc, %dec_label_pc_10001608
  %v0_100014dc = load i32, i32* %r27.global-to-local, align 4
  %v1_100014dc = trunc i32 %v0_100014dc to i16
  %v2_100014dc = load i32, i32* %r28.global-to-local, align 4
  %v3_100014dc = add i32 %v2_100014dc, 10
  %v4_100014dc = inttoptr i32 %v3_100014dc to i16*
  store i16 %v1_100014dc, i16* %v4_100014dc, align 2
  %v0_100014e4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100014e4, i32* @r3, align 4
  %v2_100014e8 = call i32 @function_100043cc(i32 %v0_100014e4, i32 20)
  %v3_100014e8 = trunc i32 %v2_100014e8 to i16
  %v4_100014f0 = add i32 %v0_100014e4, 10
  %v5_100014f0 = inttoptr i32 %v4_100014f0 to i16*
  store i16 %v3_100014e8, i16* %v5_100014f0, align 2
  %v0_100014f4 = load i32, i32* @r31, align 4
  store i32 %v0_100014f4, i32* @r3, align 4
  %v0_100014f8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100014f8 = trunc i32 %v0_100014f8 to i16
  %v3_100014f8 = add i32 %v0_100014f4, 10
  %v4_100014f8 = inttoptr i32 %v3_100014f8 to i16*
  store i16 %v1_100014f8, i16* %v4_100014f8, align 2
  %v2_100014fc = call i32 @function_100043cc(i32 %v0_100014f4, i32 20)
  %v3_100014fc = trunc i32 %v2_100014fc to i16
  %v0_10001500 = load i32, i32* @r30, align 4
  store i32 %v0_10001500, i32* @r4, align 4
  %v3_10001504 = load i32, i32* @r31, align 4
  %v4_10001504 = add i32 %v3_10001504, 10
  %v5_10001504 = inttoptr i32 %v4_10001504 to i16*
  store i16 %v3_100014fc, i16* %v5_10001504, align 2
  %v0_10001508 = load i32, i32* %r22.global-to-local, align 4
  %v0_1000150c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000150c = trunc i32 %v0_1000150c to i16
  %v2_1000150c = load i32, i32* @r30, align 4
  %v3_1000150c = add i32 %v2_1000150c, 6
  %v4_1000150c = inttoptr i32 %v3_1000150c to i16*
  store i16 %v1_1000150c, i16* %v4_1000150c, align 2
  %v0_10001510 = load i32, i32* @r31, align 4
  store i32 %v0_10001510, i32* %r3.global-to-local, align 4
  %v0_10001514 = load i32, i32* @r30, align 4
  %v1_10001514 = add i32 %v0_10001514, 4
  %v2_10001514 = inttoptr i32 %v1_10001514 to i16*
  %v3_10001514 = load i16, i16* %v2_10001514, align 2
  %v4_10001514 = zext i16 %v3_10001514 to i32
  %v4_10001518 = call i32 @function_10004430(i32 %v0_10001510, i32 %v0_10001500, i32 %v4_10001514, i32 %v0_10001508)
  %v5_10001518 = trunc i32 %v4_10001518 to i16
  store i32 %v4_10001518, i32* %r3.global-to-local, align 4
  %v3_1000151c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000151c, i32* %r0.global-to-local, align 4
  %v0_10001520 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001520 = add i32 %v0_10001520, 16
  %v2_10001520 = inttoptr i32 %v1_10001520 to i32*
  %v3_10001520 = load i32, i32* %v2_10001520, align 4
  store i32 %v3_10001520, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001528 = mul i32 %v3_1000151c, 24
  store i32 %v1_10001528, i32* %r0.global-to-local, align 4
  %v3_1000152c = load i32, i32* @r30, align 4
  %v4_1000152c = add i32 %v3_1000152c, 6
  %v5_1000152c = inttoptr i32 %v4_1000152c to i16*
  store i16 %v5_10001518, i16* %v5_1000152c, align 2
  %v0_10001530 = load i32, i32* %r28.global-to-local, align 4
  %v0_10001534 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001534, i32* %r3.global-to-local, align 4
  %v0_10001538 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001538 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001538 = add i32 %v1_10001538, %v0_10001538
  %v0_1000153c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000153c = trunc i32 %v0_1000153c to i16
  %v5_1000153c = inttoptr i32 %v2_10001538 to i16*
  store i16 %v3_1000153c, i16* %v5_1000153c, align 2
  %v0_10001540 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001540 = add i32 %v2_10001538, 4
  %v3_10001540 = inttoptr i32 %v2_10001540 to i32*
  store i32 %v0_10001540, i32* %v3_10001540, align 4
  %v0_10001544 = load i32, i32* %r24.global-to-local, align 4
  %v0_10001548 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001548 = trunc i32 %v0_10001548 to i16
  %v3_10001548 = add i32 %v2_10001538, 2
  %v4_10001548 = inttoptr i32 %v3_10001548 to i16*
  store i16 %v1_10001548, i16* %v4_10001548, align 2
  store i32 268440920, i32* @lr, align 4
  %v6_10001554 = call i32 @function_10009d70(i32 %v0_10001534, i32 %v0_10001530, i32 %v0_10001544, i32 16384, i32 %v2_10001538, i32 16)
  store i32 %v6_10001554, i32* %r3.global-to-local, align 4
  %v3_10001558 = load i32, i32* %stack_var_-104, align 4
  %v1_1000155c = add i32 %v3_10001558, 1
  store i32 %v1_1000155c, i32* %r9.global-to-local, align 4
  %v1_10001560 = load i32, i32* %r19.global-to-local, align 4
  %v2_10001560 = icmp slt i32 %v1_1000155c, %v1_10001560
  %v4_10001560 = icmp eq i32 %v1_1000155c, %v1_10001560
  store i1 %v4_10001560, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_1000155c, i32* %stack_var_-104, align 4
  br i1 %v2_10001560, label %dec_label_pc_10001478, label %dec_label_pc_1000156c

dec_label_pc_1000156c:                            ; preds = %dec_label_pc_100014dc
  %v0_1000156c = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000156c = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_1000156c = or i1 %v0_1000156c, %v1_1000156c
  br i1 %v2_1000156c, label %dec_label_pc_10001464.outer, label %dec_label_pc_10001468

dec_label_pc_10001574:                            ; preds = %dec_label_pc_10001478
  %v1_10001574 = add i32 %v2_10001484, 16
  %v2_10001574 = inttoptr i32 %v1_10001574 to i32*
  %v3_10001574 = load i32, i32* %v2_10001574, align 4
  store i32 %v3_10001574, i32* %r29.global-to-local, align 4
  %v0_10001578 = call i32 @function_10005f3c()
  store i32 %v0_10001578, i32* %r3.global-to-local, align 4
  %v3_1000157c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000157c, i32* %r9.global-to-local, align 4
  %v0_10001580 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001580 = mul i32 %v0_10001580, 16
  %v2_10001580 = udiv i32 %v0_10001580, 268435456
  %v3_10001580 = or i32 %v2_10001580, %v1_10001580
  store i32 %v3_10001580, i32* %r21.global-to-local, align 4
  %v1_10001584 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001580)
  %v1_10001588 = mul nuw i32 %v2_10001580, 268435456
  %v2_10001588 = urem i32 %v0_10001580, 268435456
  %v3_10001588 = or i32 %v1_10001588, %v2_10001588
  store i32 %v3_10001588, i32* %r21.global-to-local, align 4
  %v0_1000158c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000158c = mul i32 %v0_1000158c, 24
  %v1_10001590 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001590 = add i32 %v1_10001590, %v1_1000158c
  store i32 %v2_10001590, i32* %r9.global-to-local, align 4
  %v1_10001594 = add i32 %v2_10001590, 20
  %v2_10001594 = inttoptr i32 %v1_10001594 to i8*
  %v3_10001594 = load i8, i8* %v2_10001594, align 1
  %v4_10001594 = zext i8 %v3_10001594 to i32
  store i32 %v4_10001594, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10001594, 64
  %v2_10001598 = zext i8 %tmp to i32
  %v3_10001598 = lshr i32 %v0_10001578, %v2_10001598
  store i32 %v3_10001598, i32* %r3.global-to-local, align 4
  %v0_1000159c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000159c = add i32 %v3_10001598, %v0_1000159c
  store i32 %v2_1000159c, i32* %r29.global-to-local, align 4
  %v1_100015a0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100015a0 = add i32 %v1_100015a0, 16
  %v3_100015a0 = inttoptr i32 %v2_100015a0 to i32*
  store i32 %v2_1000159c, i32* %v3_100015a0, align 4
  %v0_100015a4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100015a4, label %dec_label_pc_100015a8, label %dec_label_pc_100014ac

dec_label_pc_100015a8:                            ; preds = %dec_label_pc_10001574, %dec_label_pc_1000149c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100015ac = call i32 @function_10005f3c()
  store i32 %v0_100015ac, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_100015b4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100015b4 = add i32 %v1_100015b4, 12
  %v3_100015b4 = inttoptr i32 %v2_100015b4 to i32*
  store i32 %v0_100015ac, i32* %v3_100015b4, align 4
  %v0_100015b8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100015b8 = load i32, i32* @r29, align 4
  %v4_100015b8 = icmp eq i32 %v0_100015b8, %v1_100015b8
  store i1 %v4_100015b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100015b8, label %dec_label_pc_100015c0, label %dec_label_pc_100014bc

dec_label_pc_100015c0:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_100014ac
  %v0_100015c0 = call i32 @function_10005f3c()
  %v0_100015c4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100015c4 = load i32, i32* @r29, align 4
  %v4_100015c4 = icmp eq i32 %v0_100015c4, %v1_100015c4
  store i1 %v4_100015c4, i1* %cr7_eq.global-to-local, align 1
  %v1_100015c8 = urem i32 %v0_100015c0, 65536
  store i32 %v1_100015c8, i32* %r3.global-to-local, align 4
  %v1_100015cc = add nsw i32 %v1_100015c8, -1000
  store i32 %v1_100015cc, i32* %r0.global-to-local, align 4
  %v1_100015d0 = trunc i32 %v0_100015c0 to i16
  %v2_100015d0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100015d0 = add i32 %v2_100015d0, 4
  %v4_100015d0 = inttoptr i32 %v3_100015d0 to i16*
  store i16 %v1_100015d0, i16* %v4_100015d0, align 2
  %v0_100015d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100015d4 = sub i32 -1, %v0_100015d4
  store i32 %v1_100015d4, i32* %r0.global-to-local, align 4
  %v1_100015d8 = trunc i32 %v1_100015d4 to i16
  %v2_100015d8 = load i32, i32* @r31, align 4
  %v3_100015d8 = add i32 %v2_100015d8, 4
  %v4_100015d8 = inttoptr i32 %v3_100015d8 to i16*
  store i16 %v1_100015d8, i16* %v4_100015d8, align 2
  br i1 %v4_100015c4, label %dec_label_pc_100015e0, label %dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge

dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge: ; preds = %dec_label_pc_100015c0
  %v1_100014c4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100014c4

dec_label_pc_100015e0:                            ; preds = %dec_label_pc_100015c0, %dec_label_pc_100014bc
  %v0_100015e0 = call i32 @function_10005f3c()
  %v1_100015e0 = trunc i32 %v0_100015e0 to i16
  store i32 %v0_100015e0, i32* %r3.global-to-local, align 4
  %v0_100015e4 = load i32, i32* %r18.global-to-local, align 4
  %v1_100015e4 = load i32, i32* @r29, align 4
  %v4_100015e4 = icmp eq i32 %v0_100015e4, %v1_100015e4
  store i1 %v4_100015e4, i1* %cr7_eq.global-to-local, align 1
  %v3_100015e8 = load i32, i32* %r28.global-to-local, align 4
  %v4_100015e8 = add i32 %v3_100015e8, 44
  %v5_100015e8 = inttoptr i32 %v4_100015e8 to i16*
  store i16 %v1_100015e0, i16* %v5_100015e8, align 2
  br i1 %v4_100015e4, label %dec_label_pc_100015f0, label %dec_label_pc_100014cc

dec_label_pc_100015f0:                            ; preds = %dec_label_pc_100015e0, %dec_label_pc_100014c4
  %v0_100015f0 = call i32 @function_10005f3c()
  %v1_100015f0 = trunc i32 %v0_100015f0 to i16
  store i32 %v0_100015f0, i32* %r3.global-to-local, align 4
  %v3_100015f4 = load i32, i32* @r30, align 4
  %v4_100015f4 = add i32 %v3_100015f4, 2
  %v5_100015f4 = inttoptr i32 %v4_100015f4 to i16*
  store i16 %v1_100015f0, i16* %v5_100015f4, align 2
  %v0_100015f8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100015f8, label %dec_label_pc_100015fc, label %dec_label_pc_100014d0

dec_label_pc_100015fc:                            ; preds = %dec_label_pc_100015f0, %dec_label_pc_100014cc
  %v0_100015fc = call i32 @function_10005f3c()
  store i32 %v0_100015fc, i32* %r3.global-to-local, align 4
  %v1_10001600 = load i32, i32* @r31, align 4
  %v2_10001600 = add i32 %v1_10001600, 16
  %v3_10001600 = inttoptr i32 %v2_10001600 to i32*
  store i32 %v0_100015fc, i32* %v3_10001600, align 4
  %v0_10001604 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001604, label %dec_label_pc_100014dc, label %dec_label_pc_10001608

dec_label_pc_10001608:                            ; preds = %dec_label_pc_100014d0, %dec_label_pc_100015fc
  %v0_10001608 = load i32, i32* @r30, align 4
  %v1_10001608 = add i32 %v0_10001608, 8
  store i32 %v1_10001608, i32* @r3, align 4
  %v0_1000160c = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_1000160c, i32* @r4, align 4
  %v0_10001610 = call i32 @function_10006110()
  store i32 %v0_10001610, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100014dc

; uselistorder directives
  uselistorder i32 %v0_100015f0, { 1, 0 }
  uselistorder i32 %v0_100015e0, { 1, 0 }
  uselistorder i32 %v1_100015d4, { 1, 0 }
  uselistorder i32 %v1_100015c8, { 1, 0 }
  uselistorder i32 %v0_100015c0, { 1, 0 }
  uselistorder i32 %v1_100015b8, { 1, 0 }
  uselistorder i32 %v0_10001580, { 2, 1, 0 }
  uselistorder i1 %v1_1000156c, { 1, 0 }
  uselistorder i1 %v0_1000156c, { 1, 0 }
  uselistorder i32 %v1_1000155c, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10001538, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10001518, { 1, 0 }
  uselistorder i32 %v0_1000149c, { 2, 1, 0 }
  uselistorder i32 %v4_10001480, { 1, 0, 2 }
  uselistorder i32 %v1_1000147c, { 1, 0 }
  uselistorder i32 %v1_100013cc, { 1, 0 }
  uselistorder i32 %v1_10001314, { 1, 0 }
  uselistorder i32 %v1_10001308, { 1, 0 }
  uselistorder i32 %v1_100012a4, { 1, 0 }
  uselistorder i32 %v0_100012a4, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10001294, { 1, 2, 0 }
  uselistorder i32 %v0_10001288, { 1, 0 }
  uselistorder i32 %v5_10001234, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 19, 20, 21, 22, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 4, 5, 17, 18 }
  uselistorder i32* %r31.global-to-local, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 28, 29, 3, 30, 31, 32, 33, 34, 4, 5, 6, 7, 0, 15, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 1, 2 }
  uselistorder i32* %r29.global-to-local, { 6, 5, 7, 8, 0, 4, 1, 2, 3 }
  uselistorder i32* %r28.global-to-local, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10 }
  uselistorder i32* %r26.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r25.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r21.global-to-local, { 8, 9, 7, 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r16.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 28, 29, 30, 31, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22, 18, 19, 20, 21, 8, 23, 24, 25, 26, 27 }
  uselistorder i1* %cr7_eq.global-to-local, { 10, 11, 12, 4, 13, 0, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 3, 1, 0, 2, 4 }
  uselistorder i1* %cr2_eq.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_10001608, { 1, 0 }
  uselistorder label %dec_label_pc_100014dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001468, { 1, 0 }
  uselistorder label %dec_label_pc_10001464, { 1, 0 }
  uselistorder label %dec_label_pc_10001448, { 1, 0 }
  uselistorder label %dec_label_pc_100013e4, { 1, 0 }
  uselistorder label %dec_label_pc_100013b8, { 1, 0 }
  uselistorder label %dec_label_pc_10001358, { 1, 0 }
}

define i32 @function_10001618(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001618:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10001620 = call i32 @__asm_mfcr()
  store i32 %v0_10001620, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000164c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001654 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268441208, i32* @lr, align 4
  %v2_10001674 = call i32 @function_1000a148(i32 4, i32 4)
  store i32 %v2_10001674, i32* %r27.global-to-local, align 4
  %v0_10001680 = load i32, i32* @r30, align 4
  store i32 %v0_10001680, i32* %r3.global-to-local, align 4
  store i32 268441224, i32* @lr, align 4
  %v2_10001684 = call i32 @function_1000a148(i32 %v0_10001680, i32 4)
  %v0_1000168c = load i32, i32* @r28, align 4
  store i32 %v2_10001684, i32* %r26.global-to-local, align 4
  %v0_1000169c = load i32, i32* @r29, align 4
  store i32 %v0_1000169c, i32* %r3.global-to-local, align 4
  store i32 268441252, i32* @lr, align 4
  %v4_100016a0 = inttoptr i32 %v0_1000168c to i32*
  %v5_100016a0 = call i32 @function_100006a8(i32 %v0_1000169c, i32* %v4_100016a0, i32 7, i32 65535)
  %v0_100016ac = load i32, i32* @r28, align 4
  %v1_100016b4 = urem i32 %v5_100016a0, 65536
  store i32 %v1_100016b4, i32* %r21.global-to-local, align 4
  %v0_100016b8 = load i32, i32* @r29, align 4
  store i32 %v0_100016b8, i32* %r3.global-to-local, align 4
  store i32 268441280, i32* @lr, align 4
  %v4_100016bc = inttoptr i32 %v0_100016ac to i32*
  %v5_100016bc = call i32 @function_100006a8(i32 %v0_100016b8, i32* %v4_100016bc, i32 6, i32 65535)
  %v0_100016c0 = load i32, i32* @r28, align 4
  %v1_100016c4 = urem i32 %v5_100016bc, 65536
  store i32 %v1_100016c4, i32* %r22.global-to-local, align 4
  %v0_100016d0 = load i32, i32* @r29, align 4
  store i32 %v0_100016d0, i32* %r3.global-to-local, align 4
  store i32 268441304, i32* @lr, align 4
  %v4_100016d4 = inttoptr i32 %v0_100016c0 to i32*
  %v5_100016d4 = call i32 @function_100006a8(i32 %v0_100016d0, i32* %v4_100016d4, i32 0, i32 1024)
  %v0_100016d8 = load i32, i32* @r28, align 4
  %v1_100016dc = urem i32 %v5_100016d4, 65536
  store i32 %v1_100016dc, i32* @r31, align 4
  %v0_100016e4 = load i32, i32* @r29, align 4
  store i32 %v0_100016e4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100016f0.18 to i32), i32* @lr, align 4
  %v4_100016ec = inttoptr i32 %v0_100016d8 to i32*
  %v5_100016ec = call i32 @function_100006a8(i32 %v0_100016e4, i32* %v4_100016ec, i32 1, i32 1)
  store i32 %v5_100016ec, i32* %r3.global-to-local, align 4
  %v0_100016fc = load i32, i32* %r22.global-to-local, align 4
  %v4_100016fc = icmp eq i32 %v0_100016fc, 65535
  %v1_10001704 = urem i32 %v5_100016ec, 256
  store i32 %v1_10001704, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_100016fc, label %dec_label_pc_10001900, label %dec_label_pc_10001718

dec_label_pc_10001718:                            ; preds = %dec_label_pc_10001618, %dec_label_pc_10001900
  %v0_10001718 = load i32, i32* @r30, align 4
  %v1_10001718 = icmp slt i32 %v0_10001718, 0
  %v3_10001718 = icmp eq i32 %v0_10001718, 0
  store i1 %v1_10001718, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001718, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10001718, 1
  br i1 %tmp38, label %dec_label_pc_100017d8, label %dec_label_pc_10001720

dec_label_pc_10001720:                            ; preds = %dec_label_pc_10001718
  %v0_10001724 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001724, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10001730 = load i32, i32* %r21.global-to-local, align 4
  %v4_10001730 = icmp eq i32 %v0_10001730, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_10001880 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10001730, label %dec_label_pc_10001850, label %dec_label_pc_10001744

dec_label_pc_10001744:                            ; preds = %dec_label_pc_10001720, %dec_label_pc_100017b8
  %v0_10001750 = phi i32 [ %v0_100017cc, %dec_label_pc_100017b8 ], [ 0, %dec_label_pc_10001720 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10001750 = add i32 %v0_10001750, 1
  store i32 %v1_10001750, i32* %r24.global-to-local, align 4
  store i32 268441432, i32* @lr, align 4
  %v2_10001754 = call i32 @function_1000a148(i32 65535, i32 1)
  %v0_10001758 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001758 = trunc i32 %v0_10001758 to i16
  %v2_10001758 = load i32, i32* @r28, align 4
  %v3_10001758 = add i32 %v2_10001758, 2
  %v4_10001758 = inttoptr i32 %v3_10001758 to i16*
  store i16 %v1_10001758, i16* %v4_10001758, align 2
  %v1_1000175c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000175c = load i32, i32* %r27.global-to-local, align 4
  %v3_1000175c = add i32 %v2_1000175c, %v1_1000175c
  %v4_1000175c = inttoptr i32 %v3_1000175c to i32*
  store i32 %v2_10001754, i32* %v4_1000175c, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441456, i32* @lr, align 4
  %v3_1000176c = call i32 @function_10009dec(i32 2, i32 2, i32 0)
  store i32 %v3_1000176c, i32* %r3.global-to-local, align 4
  %v3_10001774 = icmp eq i32 %v3_1000176c, -1
  %v1_1000177c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000177c = load i32, i32* %r26.global-to-local, align 4
  %v3_1000177c = add i32 %v2_1000177c, %v1_1000177c
  %v4_1000177c = inttoptr i32 %v3_1000177c to i32*
  store i32 %v3_1000176c, i32* %v4_1000177c, align 4
  br i1 %v3_10001774, label %dec_label_pc_100018b4, label %dec_label_pc_10001784

dec_label_pc_10001784:                            ; preds = %dec_label_pc_10001744
  %v0_10001784 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001784, i32* %stack_var_-72, align 4
  store i32 268441492, i32* @lr, align 4
  %v0_10001790 = load i32, i32* %r3.global-to-local, align 4
  %v3_10001790 = call i32 @function_10009bb8(i32 %v0_10001790, i32 %v2_10001880, i32 16)
  store i32 %v3_10001790, i32* %r3.global-to-local, align 4
  %v0_10001794 = load i32, i32* @r28, align 4
  %v1_10001794 = add i32 %v0_10001794, 20
  %v2_10001794 = inttoptr i32 %v1_10001794 to i8*
  %v3_10001794 = load i8, i8* %v2_10001794, align 1
  %v2_10001798 = icmp ugt i8 %v3_10001794, 31
  br i1 %v2_10001798, label %dec_label_pc_100017b8, label %dec_label_pc_100017a0

dec_label_pc_100017a0:                            ; preds = %dec_label_pc_10001784
  %v1_100017a0 = add i32 %v0_10001794, 16
  %v2_100017a0 = inttoptr i32 %v1_100017a0 to i32*
  %v3_100017a0 = load i32, i32* %v2_100017a0, align 4
  store i32 %v3_100017a0, i32* %r29.global-to-local, align 4
  %v0_100017a4 = call i32 @function_10005f3c()
  store i32 %v0_100017a4, i32* %r3.global-to-local, align 4
  %v0_100017a8 = load i32, i32* @r28, align 4
  %v1_100017a8 = add i32 %v0_100017a8, 20
  %v2_100017a8 = inttoptr i32 %v1_100017a8 to i8*
  %v3_100017a8 = load i8, i8* %v2_100017a8, align 1
  %tmp = urem i8 %v3_100017a8, 64
  %v2_100017ac = zext i8 %tmp to i32
  %v3_100017ac = lshr i32 %v0_100017a4, %v2_100017ac
  %v0_100017b0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100017b0 = add i32 %v3_100017ac, %v0_100017b0
  store i32 %v2_100017b0, i32* %r3.global-to-local, align 4
  %v2_100017b4 = add i32 %v0_100017a8, 4
  %v3_100017b4 = inttoptr i32 %v2_100017b4 to i32*
  store i32 %v2_100017b0, i32* %v3_100017b4, align 4
  br label %dec_label_pc_100017b8

dec_label_pc_100017b8:                            ; preds = %dec_label_pc_10001784, %dec_label_pc_100017a0
  %v0_100017b8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100017b8 = load i32, i32* %r26.global-to-local, align 4
  %v2_100017b8 = add i32 %v1_100017b8, %v0_100017b8
  %v3_100017b8 = inttoptr i32 %v2_100017b8 to i32*
  %v4_100017b8 = load i32, i32* %v3_100017b8, align 4
  store i32 %v4_100017b8, i32* @r3, align 4
  %v1_100017c4 = add i32 %v0_100017b8, 4
  store i32 %v1_100017c4, i32* %r25.global-to-local, align 4
  store i32 268441548, i32* @lr, align 4
  %v0_100017c8 = call i32 @function_10009bec()
  store i32 %v0_100017c8, i32* %r3.global-to-local, align 4
  %v0_100017cc = load i32, i32* %r24.global-to-local, align 4
  %v1_100017cc = load i32, i32* @r30, align 4
  %v4_100017cc = icmp eq i32 %v0_100017cc, %v1_100017cc
  %v0_100017d0 = load i32, i32* @r28, align 4
  %v1_100017d0 = add i32 %v0_100017d0, 24
  store i32 %v1_100017d0, i32* @r28, align 4
  br i1 %v4_100017cc, label %dec_label_pc_100017d8, label %dec_label_pc_10001744

dec_label_pc_100017d8:                            ; preds = %dec_label_pc_100017b8, %dec_label_pc_10001830, %dec_label_pc_10001718
  %v0_100017d8 = load i32, i32* %r23.global-to-local, align 4
  %v3_100017d8 = icmp eq i32 %v0_100017d8, 0
  store i1 %v3_100017d8, i1* %cr3_eq.global-to-local, align 1
  %v0_100017dc.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100017dc.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100017dc.outer

dec_label_pc_100017dc.outer:                      ; preds = %dec_label_pc_10001810, %dec_label_pc_10001948, %dec_label_pc_100017d8
  %v1_100017dc.ph39 = phi i1 [ %v1_100017dc.pre, %dec_label_pc_100017d8 ], [ %v1_10001948, %dec_label_pc_10001948 ], [ %v1_10001810, %dec_label_pc_10001810 ]
  %v0_100017dc.ph40 = phi i1 [ %v0_100017dc.pre, %dec_label_pc_100017d8 ], [ %v0_10001948, %dec_label_pc_10001948 ], [ %v0_10001810, %dec_label_pc_10001810 ]
  %v2_100017dc = or i1 %v1_100017dc.ph39, %v0_100017dc.ph40
  br label %dec_label_pc_100017dc

dec_label_pc_100017dc:                            ; preds = %dec_label_pc_100017dc.outer, %dec_label_pc_100017dc
  br i1 %v2_100017dc, label %dec_label_pc_100017dc, label %dec_label_pc_100017e0

dec_label_pc_100017e0:                            ; preds = %dec_label_pc_10001948, %dec_label_pc_10001810, %dec_label_pc_100017dc
  %v0_100017e0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100017e0, label %dec_label_pc_100017e4, label %dec_label_pc_1000190c

dec_label_pc_100017e4:                            ; preds = %dec_label_pc_100017e0
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100017ec

dec_label_pc_100017ec:                            ; preds = %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge, %dec_label_pc_100017e4
  %v0_100017f0 = phi i32 [ %v0_10001808, %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge ], [ 0, %dec_label_pc_100017e4 ]
  %v0_10001800 = phi i32 [ %v0_100017ec.pre, %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge ], [ 0, %dec_label_pc_100017e4 ]
  %v1_100017ec = load i32, i32* %r26.global-to-local, align 4
  %v2_100017ec = add i32 %v1_100017ec, %v0_10001800
  %v3_100017ec = inttoptr i32 %v2_100017ec to i32*
  %v4_100017ec = load i32, i32* %v3_100017ec, align 4
  store i32 %v4_100017ec, i32* %r3.global-to-local, align 4
  %v1_100017f0 = add i32 %v0_100017f0, 1
  store i32 %v1_100017f0, i32* %r28.global-to-local, align 4
  %v1_100017f4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100017f4 = add i32 %v1_100017f4, %v0_10001800
  %v3_100017f4 = inttoptr i32 %v2_100017f4 to i32*
  %v4_100017f4 = load i32, i32* %v3_100017f4, align 4
  %v0_100017f8 = load i32, i32* @r31, align 4
  %v1_10001800 = add i32 %v0_10001800, 4
  store i32 %v1_10001800, i32* %r29.global-to-local, align 4
  store i32 268441608, i32* @lr, align 4
  %v4_10001804 = call i32 @function_10009d38(i32 %v4_100017ec, i32 %v4_100017f4, i32 %v0_100017f8, i32 16384)
  store i32 %v4_10001804, i32* %r3.global-to-local, align 4
  %v0_10001808 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001808 = load i32, i32* @r30, align 4
  %v4_10001808 = icmp eq i32 %v0_10001808, %v1_10001808
  br i1 %v4_10001808, label %dec_label_pc_10001810, label %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge

dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge: ; preds = %dec_label_pc_100017ec
  %v0_100017ec.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100017ec

dec_label_pc_10001810:                            ; preds = %dec_label_pc_100017ec
  %v0_10001810 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001810 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001810 = or i1 %v0_10001810, %v1_10001810
  br i1 %v2_10001810, label %dec_label_pc_100017dc.outer, label %dec_label_pc_100017e0

dec_label_pc_10001830:                            ; preds = %dec_label_pc_10001894, %dec_label_pc_100018b0
  %v0_10001830 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001830 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001830 = add i32 %v1_10001830, %v0_10001830
  %v3_10001830 = inttoptr i32 %v2_10001830 to i32*
  %v4_10001830 = load i32, i32* %v3_10001830, align 4
  store i32 %v4_10001830, i32* @r3, align 4
  %v1_1000183c = add i32 %v0_10001830, 4
  store i32 %v1_1000183c, i32* %r25.global-to-local, align 4
  store i32 268441668, i32* @lr, align 4
  %v0_10001840 = call i32 @function_10009bec()
  store i32 %v0_10001840, i32* %r3.global-to-local, align 4
  %v0_10001844 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001844 = load i32, i32* @r30, align 4
  %v4_10001844 = icmp eq i32 %v0_10001844, %v1_10001844
  %v0_10001848 = load i32, i32* @r28, align 4
  %v1_10001848 = add i32 %v0_10001848, 24
  store i32 %v1_10001848, i32* @r28, align 4
  br i1 %v4_10001844, label %dec_label_pc_100017d8, label %dec_label_pc_10001850

dec_label_pc_10001850:                            ; preds = %dec_label_pc_10001720, %dec_label_pc_10001830
  %v0_1000185c = phi i32 [ %v0_10001844, %dec_label_pc_10001830 ], [ 0, %dec_label_pc_10001720 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_1000185c = add i32 %v0_1000185c, 1
  store i32 %v1_1000185c, i32* %r24.global-to-local, align 4
  store i32 268441700, i32* @lr, align 4
  %v2_10001860 = call i32 @function_1000a148(i32 65535, i32 1)
  store i32 %v2_10001860, i32* %r3.global-to-local, align 4
  %v1_10001864 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001864 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001864 = add i32 %v2_10001864, %v1_10001864
  %v4_10001864 = inttoptr i32 %v3_10001864 to i32*
  store i32 %v2_10001860, i32* %v4_10001864, align 4
  %v0_10001868 = call i32 @function_10005f3c()
  %v1_10001868 = trunc i32 %v0_10001868 to i16
  %v3_1000186c = load i32, i32* @r28, align 4
  %v4_1000186c = add i32 %v3_1000186c, 2
  %v5_1000186c = inttoptr i32 %v4_1000186c to i16*
  store i16 %v1_10001868, i16* %v5_1000186c, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441728, i32* @lr, align 4
  %v3_1000187c = call i32 @function_10009dec(i32 2, i32 2, i32 0)
  store i32 %v3_1000187c, i32* %r3.global-to-local, align 4
  %v3_10001884 = icmp eq i32 %v3_1000187c, -1
  %v1_1000188c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000188c = load i32, i32* %r26.global-to-local, align 4
  %v3_1000188c = add i32 %v2_1000188c, %v1_1000188c
  %v4_1000188c = inttoptr i32 %v3_1000188c to i32*
  store i32 %v3_1000187c, i32* %v4_1000188c, align 4
  br i1 %v3_10001884, label %dec_label_pc_100018b4, label %dec_label_pc_10001894

dec_label_pc_10001894:                            ; preds = %dec_label_pc_10001850
  %v0_10001894 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001894, i32* %stack_var_-72, align 4
  store i32 268441764, i32* @lr, align 4
  %v0_100018a0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100018a0 = call i32 @function_10009bb8(i32 %v0_100018a0, i32 %v2_10001880, i32 16)
  store i32 %v3_100018a0, i32* %r3.global-to-local, align 4
  %v0_100018a4 = load i32, i32* @r28, align 4
  %v1_100018a4 = add i32 %v0_100018a4, 20
  %v2_100018a4 = inttoptr i32 %v1_100018a4 to i8*
  %v3_100018a4 = load i8, i8* %v2_100018a4, align 1
  %v2_100018a8 = icmp ugt i8 %v3_100018a4, 31
  br i1 %v2_100018a8, label %dec_label_pc_10001830, label %dec_label_pc_100018b0

dec_label_pc_100018b0:                            ; preds = %dec_label_pc_10001894
  %v1_10001818 = add i32 %v0_100018a4, 16
  %v2_10001818 = inttoptr i32 %v1_10001818 to i32*
  %v3_10001818 = load i32, i32* %v2_10001818, align 4
  store i32 %v3_10001818, i32* %r29.global-to-local, align 4
  %v0_1000181c = call i32 @function_10005f3c()
  store i32 %v0_1000181c, i32* %r3.global-to-local, align 4
  %v0_10001820 = load i32, i32* @r28, align 4
  %v1_10001820 = add i32 %v0_10001820, 20
  %v2_10001820 = inttoptr i32 %v1_10001820 to i8*
  %v3_10001820 = load i8, i8* %v2_10001820, align 1
  %tmp43 = urem i8 %v3_10001820, 64
  %v2_10001824 = zext i8 %tmp43 to i32
  %v3_10001824 = lshr i32 %v0_1000181c, %v2_10001824
  %v0_10001828 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001828 = add i32 %v3_10001824, %v0_10001828
  store i32 %v2_10001828, i32* %r3.global-to-local, align 4
  %v2_1000182c = add i32 %v0_10001820, 4
  %v3_1000182c = inttoptr i32 %v2_1000182c to i32*
  store i32 %v2_10001828, i32* %v3_1000182c, align 4
  br label %dec_label_pc_10001830

dec_label_pc_100018b4:                            ; preds = %dec_label_pc_10001744, %dec_label_pc_10001850
  %v1_100018c8 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10001620)
  store i32 %v0_1000164c, i32* %r28.global-to-local, align 4
  store i32 %v0_10001654, i32* %r29.global-to-local, align 4
  %v0_100018fc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100018fc

dec_label_pc_10001900:                            ; preds = %dec_label_pc_10001618
  %v0_10001900 = call i32 @function_10005f3c()
  store i32 %v0_10001900, i32* %r3.global-to-local, align 4
  %v1_10001904 = urem i32 %v0_10001900, 65536
  store i32 %v1_10001904, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10001718

dec_label_pc_1000190c:                            ; preds = %dec_label_pc_100017e0
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001914

dec_label_pc_10001914:                            ; preds = %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge, %dec_label_pc_1000190c
  %v0_1000191c = phi i32 [ %v0_10001940, %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge ], [ 0, %dec_label_pc_1000190c ]
  %v0_10001914 = phi i32 [ %v0_10001914.pre, %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge ], [ 0, %dec_label_pc_1000190c ]
  %v1_10001914 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001914 = add i32 %v1_10001914, %v0_10001914
  %v3_10001914 = inttoptr i32 %v2_10001914 to i32*
  %v4_10001914 = load i32, i32* %v3_10001914, align 4
  store i32 %v4_10001914, i32* @r29, align 4
  %v0_10001918 = load i32, i32* @r31, align 4
  store i32 %v0_10001918, i32* @r4, align 4
  %v1_1000191c = add i32 %v0_1000191c, 1
  store i32 %v1_1000191c, i32* %r25.global-to-local, align 4
  store i32 %v4_10001914, i32* @r3, align 4
  %v0_10001924 = call i32 @function_10006110()
  store i32 %v0_10001924, i32* %r3.global-to-local, align 4
  %v0_10001928 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001928 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001928 = add i32 %v1_10001928, %v0_10001928
  %v3_10001928 = inttoptr i32 %v2_10001928 to i32*
  %v4_10001928 = load i32, i32* %v3_10001928, align 4
  store i32 %v4_10001928, i32* %r3.global-to-local, align 4
  %v0_1000192c = load i32, i32* @r29, align 4
  %v0_10001930 = load i32, i32* @r31, align 4
  %v1_10001938 = add i32 %v0_10001928, 4
  store i32 %v1_10001938, i32* %r28.global-to-local, align 4
  store i32 268441920, i32* @lr, align 4
  %v4_1000193c = call i32 @function_10009d38(i32 %v4_10001928, i32 %v0_1000192c, i32 %v0_10001930, i32 16384)
  store i32 %v4_1000193c, i32* %r3.global-to-local, align 4
  %v0_10001940 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001940 = load i32, i32* @r30, align 4
  %v4_10001940 = icmp eq i32 %v0_10001940, %v1_10001940
  br i1 %v4_10001940, label %dec_label_pc_10001948, label %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge

dec_label_pc_10001914.dec_label_pc_10001914_crit_edge: ; preds = %dec_label_pc_10001914
  %v0_10001914.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001914

dec_label_pc_10001948:                            ; preds = %dec_label_pc_10001914
  %v0_10001948 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001948 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001948 = or i1 %v0_10001948, %v1_10001948
  br i1 %v2_10001948, label %dec_label_pc_100017dc.outer, label %dec_label_pc_100017e0

; uselistorder directives
  uselistorder i1 %v1_10001948, { 1, 0 }
  uselistorder i1 %v0_10001948, { 1, 0 }
  uselistorder i32 %v0_10001940, { 1, 0 }
  uselistorder i32 %v0_10001928, { 1, 0 }
  uselistorder i32 %v0_10001830, { 1, 0 }
  uselistorder i1 %v1_10001810, { 1, 0 }
  uselistorder i1 %v0_10001810, { 1, 0 }
  uselistorder i32 %v0_10001808, { 1, 0 }
  uselistorder i32 %v0_10001800, { 2, 0, 1 }
  uselistorder i32 %v0_100017cc, { 1, 0 }
  uselistorder i32 %v0_100017b8, { 1, 0 }
  uselistorder i32 %v2_10001880, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 9, 10, 11, 12, 28, 13, 14, 16, 17, 18, 19, 20, 21, 15, 22, 23, 2, 24, 25, 26, 27, 29, 30, 31, 3, 4, 5, 6, 7, 8, 0, 1 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 3, 4, 5, 7, 8, 9, 6, 13, 10, 11, 12, 0, 1, 2 }
  uselistorder i32* %r24.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r22.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 0, 2, 1, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100018b4, { 1, 0 }
  uselistorder label %dec_label_pc_10001850, { 1, 0 }
  uselistorder label %dec_label_pc_10001830, { 1, 0 }
  uselistorder label %dec_label_pc_100017dc, { 1, 0 }
  uselistorder label %dec_label_pc_100017dc.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100017d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100017b8, { 1, 0 }
  uselistorder label %dec_label_pc_10001744, { 1, 0 }
  uselistorder label %dec_label_pc_10001718, { 1, 0 }
}

define i32 @function_10001950(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001950:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10001954 = load i32, i32* @lr, align 4
  store i32 %v0_10001954, i32* %r0.global-to-local, align 4
  %v0_10001958 = call i32 @__asm_mfcr()
  store i32 %v0_10001958, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10001968 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001958, i32* %r21.global-to-local, align 4
  %v0_100019a0 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100019a8 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268442052, i32* @lr, align 4
  %v2_100019c0 = call i32 @function_1000a148(i32 16, i32 16)
  store i32 %v2_100019c0, i32* %r22.global-to-local, align 4
  %v0_100019cc = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100019cc, i32* %r3.global-to-local, align 4
  store i32 268442068, i32* @lr, align 4
  %v2_100019d0 = call i32 @function_1000a148(i32 %v0_100019cc, i32 4)
  %v0_100019d4 = load i32, i32* @r28, align 4
  store i32 %v2_100019d0, i32* %r23.global-to-local, align 4
  %v0_100019e4 = load i32, i32* @r29, align 4
  store i32 %v0_100019e4, i32* %r3.global-to-local, align 4
  store i32 268442092, i32* @lr, align 4
  %v4_100019e8 = inttoptr i32 %v0_100019d4 to i32*
  %v5_100019e8 = call i32 @function_100006a8(i32 %v0_100019e4, i32* %v4_100019e8, i32 2, i32 0)
  %v5_100019f8 = trunc i32 %v5_100019e8 to i8
  %v0_10001a00 = load i32, i32* @r28, align 4
  %v0_10001a04 = load i32, i32* @r29, align 4
  store i32 %v0_10001a04, i32* %r3.global-to-local, align 4
  store i32 268442124, i32* @lr, align 4
  %v4_10001a08 = inttoptr i32 %v0_10001a00 to i32*
  %v5_10001a08 = call i32 @function_100006a8(i32 %v0_10001a04, i32* %v4_10001a08, i32 3, i32 65535)
  %v0_10001a0c = load i32, i32* @r28, align 4
  store i32 %v5_10001a08, i32* @r31, align 4
  %v0_10001a1c = load i32, i32* @r29, align 4
  store i32 %v0_10001a1c, i32* %r3.global-to-local, align 4
  store i32 268442148, i32* @lr, align 4
  %v4_10001a20 = inttoptr i32 %v0_10001a0c to i32*
  %v5_10001a20 = call i32 @function_100006a8(i32 %v0_10001a1c, i32* %v4_10001a20, i32 4, i32 64)
  %v0_10001a24 = load i32, i32* @r28, align 4
  %v5_10001a30 = trunc i32 %v5_10001a20 to i8
  %v0_10001a38 = load i32, i32* @r29, align 4
  store i32 %v0_10001a38, i32* %r3.global-to-local, align 4
  store i32 268442176, i32* @lr, align 4
  %v4_10001a3c = inttoptr i32 %v0_10001a24 to i32*
  %v5_10001a3c = call i32 @function_100006a8(i32 %v0_10001a38, i32* %v4_10001a3c, i32 5, i32 1)
  %v1_10001a44 = urem i32 %v5_10001a3c, 256
  %v0_10001a50 = load i32, i32* @r28, align 4
  %v0_10001a58 = load i32, i32* @r29, align 4
  store i32 %v0_10001a58, i32* %r3.global-to-local, align 4
  store i32 268442208, i32* @lr, align 4
  %v4_10001a5c = inttoptr i32 %v0_10001a50 to i32*
  %v5_10001a5c = call i32 @function_100006a8(i32 %v0_10001a58, i32* %v4_10001a5c, i32 7, i32 65535)
  %v0_10001a60 = load i32, i32* @r28, align 4
  %v5_10001a6c = trunc i32 %v5_10001a5c to i16
  %v0_10001a74 = load i32, i32* @r29, align 4
  store i32 %v0_10001a74, i32* %r3.global-to-local, align 4
  store i32 268442236, i32* @lr, align 4
  %v4_10001a78 = inttoptr i32 %v0_10001a60 to i32*
  %v5_10001a78 = call i32 @function_100006a8(i32 %v0_10001a74, i32* %v4_10001a78, i32 11, i32 1)
  %v0_10001a7c = load i32, i32* @r28, align 4
  %v1_10001a80 = urem i32 %v5_10001a78, 256
  %v0_10001a90 = load i32, i32* @r29, align 4
  store i32 %v0_10001a90, i32* %r3.global-to-local, align 4
  store i32 268442264, i32* @lr, align 4
  %v4_10001a94 = inttoptr i32 %v0_10001a7c to i32*
  %v5_10001a94 = call i32 @function_100006a8(i32 %v0_10001a90, i32* %v4_10001a94, i32 12, i32 1)
  %v0_10001a98 = load i32, i32* @r28, align 4
  %v1_10001aa4 = urem i32 %v5_10001a94, 256
  %v0_10001aa8 = load i32, i32* @r29, align 4
  store i32 %v0_10001aa8, i32* %r3.global-to-local, align 4
  store i32 268442288, i32* @lr, align 4
  %v4_10001aac = inttoptr i32 %v0_10001a98 to i32*
  %v5_10001aac = call i32 @function_100006a8(i32 %v0_10001aa8, i32* %v4_10001aac, i32 13, i32 1)
  %v0_10001ab0 = load i32, i32* @r28, align 4
  %v1_10001abc = urem i32 %v5_10001aac, 256
  %v0_10001ac0 = load i32, i32* @r29, align 4
  store i32 %v0_10001ac0, i32* %r3.global-to-local, align 4
  store i32 268442312, i32* @lr, align 4
  %v4_10001ac4 = inttoptr i32 %v0_10001ab0 to i32*
  %v5_10001ac4 = call i32 @function_100006a8(i32 %v0_10001ac0, i32* %v4_10001ac4, i32 14, i32 1)
  %v0_10001ac8 = load i32, i32* @r28, align 4
  %v1_10001ad4 = urem i32 %v5_10001ac4, 256
  %v0_10001ad8 = load i32, i32* @r29, align 4
  store i32 %v0_10001ad8, i32* %r3.global-to-local, align 4
  store i32 268442336, i32* @lr, align 4
  %v4_10001adc = inttoptr i32 %v0_10001ac8 to i32*
  %v5_10001adc = call i32 @function_100006a8(i32 %v0_10001ad8, i32* %v4_10001adc, i32 15, i32 1)
  %v0_10001ae0 = load i32, i32* @r28, align 4
  %v1_10001aec = urem i32 %v5_10001adc, 256
  %v0_10001af0 = load i32, i32* @r29, align 4
  store i32 %v0_10001af0, i32* %r3.global-to-local, align 4
  store i32 268442360, i32* @lr, align 4
  %v4_10001af4 = inttoptr i32 %v0_10001ae0 to i32*
  %v5_10001af4 = call i32 @function_100006a8(i32 %v0_10001af0, i32* %v4_10001af4, i32 16, i32 1)
  %v0_10001b00 = load i32, i32* @r28, align 4
  %v1_10001b04 = urem i32 %v5_10001af4, 256
  %v0_10001b08 = load i32, i32* @r29, align 4
  store i32 %v0_10001b08, i32* %r3.global-to-local, align 4
  store i32 268442384, i32* @lr, align 4
  %v4_10001b0c = inttoptr i32 %v0_10001b00 to i32*
  %v5_10001b0c = call i32 @function_100006a8(i32 %v0_10001b08, i32* %v4_10001b0c, i32 0, i32 768)
  %v0_10001b10 = load i32, i32* @r28, align 4
  store i32 %v5_10001b0c, i32* %r25.global-to-local, align 4
  %v0_10001b20 = load i32, i32* @r29, align 4
  store i32 %v0_10001b20, i32* %r3.global-to-local, align 4
  store i32 268442408, i32* @lr, align 4
  %v4_10001b24 = inttoptr i32 %v0_10001b10 to i32*
  %v5_10001b24 = call i32 @function_100006a8(i32 %v0_10001b20, i32* %v4_10001b24, i32 1, i32 1)
  %v1_10001b2c = urem i32 %v5_10001b24, 256
  store i32 %v1_10001b2c, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268442428, i32* @lr, align 4
  %v3_10001b38 = call i32 @function_10009dec(i32 2, i32 3, i32 6)
  store i32 %v3_10001b38, i32* %r3.global-to-local, align 4
  %v3_10001b3c = icmp eq i32 %v3_10001b38, -1
  store i1 %v3_10001b3c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001b38, i32* %r24.global-to-local, align 4
  br i1 %v3_10001b3c, label %dec_label_pc_10001cfc, label %dec_label_pc_10001b48

dec_label_pc_10001b48:                            ; preds = %dec_label_pc_10001950
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001b54 = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268442468, i32* @lr, align 4
  %v4_10001b60 = call i32 @function_10009db0(i32 0, i32 3, i32 %v2_10001b54, i32 4)
  store i32 %v4_10001b60, i32* %r3.global-to-local, align 4
  %v3_10001b64 = icmp eq i32 %v4_10001b60, -1
  store i1 %v3_10001b64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001b64, label %dec_label_pc_10001cf4, label %dec_label_pc_10001b6c

dec_label_pc_10001b6c:                            ; preds = %dec_label_pc_10001b48
  %v0_10001b6c = load i32, i32* %r21.global-to-local, align 4
  %v1_10001b6c = icmp slt i32 %v0_10001b6c, 0
  %v3_10001b6c = icmp eq i32 %v0_10001b6c, 0
  store i1 %v1_10001b6c, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10001b6c, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10001b78 = load i32, i32* @r31, align 4
  %v1_10001b78 = urem i32 %v0_10001b78, 65536
  store i32 %v1_10001b78, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10001b6c, 1
  br i1 %tmp49, label %dec_label_pc_10001e94, label %dec_label_pc_10001b80

dec_label_pc_10001b80:                            ; preds = %dec_label_pc_10001b6c
  %v4_10001b80 = sext i16 %v5_10001a6c to i32
  store i32 %v4_10001b80, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_10001c24 = ptrtoint i32* %stack_var_-368 to i32
  %v2_10001c30 = ptrtoint i32* %stack_var_-384 to i32
  %v2_10001c34 = ptrtoint i32* %stack_var_-404 to i32
  %v4_10001c6c = zext i16 %tmp13 to i32
  %v1_10001c9c = and i32 %tmp, 1179648
  %v3_10001db0 = icmp eq i32 %v1_10001a44, 0
  %v4_10001dd0 = sext i8 %v5_100019f8 to i32
  %v4_10001dd8 = sext i8 %v5_10001a30 to i32
  %v1_10001ca0 = and i32 %tmp, 327680
  %v3_10001ca0 = icmp eq i32 %v1_10001ca0, 0
  %v4_10001ca8 = icmp eq i32 %v1_10001c9c, 1179648
  br label %dec_label_pc_10001b8c

dec_label_pc_10001b8c:                            ; preds = %dec_label_pc_10001e80, %dec_label_pc_10001cb4, %dec_label_pc_10001b80
  %v0_10001b8c = load i32, i32* %r25.global-to-local, align 4
  %v1_10001b8c = add i32 %v0_10001b8c, 40
  store i32 %v1_10001b8c, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268442528, i32* @lr, align 4
  %v3_10001b9c53 = call i32 @function_10009dec(i32 2, i32 1, i32 0)
  store i32 %v3_10001b9c53, i32* %r3.global-to-local, align 4
  %v3_10001ba055 = icmp eq i32 %v3_10001b9c53, -1
  store i1 %v3_10001ba055, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001b9c53, i32* %r28.global-to-local, align 4
  br i1 %v3_10001ba055, label %dec_label_pc_10001e80, label %dec_label_pc_10001bac

dec_label_pc_10001bac:                            ; preds = %dec_label_pc_10001b8c, %dec_label_pc_10001c8c
  store i32 3, i32* @r4, align 4
  store i32 268442556, i32* @lr, align 4
  %v1_10001bb8 = call i32 @function_10008fb4(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10001bc4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001bc4, i32* %r3.global-to-local, align 4
  store i32 268442576, i32* @lr, align 4
  %v2_10001bcc = call i32 @function_10008fb4(i32 %v0_10001bc4)
  store i32 %v2_10001bcc, i32* %r3.global-to-local, align 4
  %v3_10001bd0 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001bd8 = mul i32 %v3_10001bd0, 24
  store i32 %v1_10001bd8, i32* %r0.global-to-local, align 4
  %v0_10001be0 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001be0 = add i32 %v0_10001be0, %v1_10001bd8
  store i32 %v2_10001be0, i32* %r11.global-to-local, align 4
  %v1_10001be4 = add i32 %v2_10001be0, 20
  %v2_10001be4 = inttoptr i32 %v1_10001be4 to i8*
  %v3_10001be4 = load i8, i8* %v2_10001be4, align 1
  %v4_10001be4 = zext i8 %v3_10001be4 to i32
  store i32 %v4_10001be4, i32* %r9.global-to-local, align 4
  %v3_10001be8 = icmp eq i8 %v3_10001be4, 31
  store i1 %v3_10001be8, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_10001be4, 32
  %v1_10001cc0 = add i32 %v2_10001be0, 16
  %v2_10001cc0 = inttoptr i32 %v1_10001cc0 to i32*
  %v3_10001cc0 = load i32, i32* %v2_10001cc0, align 4
  br i1 %tmp50, label %dec_label_pc_10001cc0, label %dec_label_pc_10001bf0

dec_label_pc_10001bf0:                            ; preds = %dec_label_pc_10001bac
  store i32 %v3_10001cc0, i32* %r0.global-to-local, align 4
  %v0_10001bf8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001bf8, label %dec_label_pc_10001ce8, label %dec_label_pc_10001bfc

dec_label_pc_10001bfc:                            ; preds = %dec_label_pc_10001cc0, %dec_label_pc_10001bf0
  %stack_var_-396.0 = phi i32 [ %v2_10001cdc, %dec_label_pc_10001cc0 ], [ %v3_10001cc0, %dec_label_pc_10001bf0 ]
  store i32 %v4_10001b80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10001c04

dec_label_pc_10001c04:                            ; preds = %dec_label_pc_10001ce8, %dec_label_pc_10001bfc
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10001ce8 ], [ %stack_var_-396.0, %dec_label_pc_10001bfc ]
  %storemerge = phi i16 [ %v1_10001ce8, %dec_label_pc_10001ce8 ], [ %v5_10001a6c, %dec_label_pc_10001bfc ]
  %v0_10001c0c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001c0c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001c14.19 to i32), i32* @lr, align 4
  %v0_10001c10 = call i32 @function_10009bec()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268442652, i32* @lr, align 4
  %v0_10001c18 = call i32 @function_1000946c()
  store i32 %v0_10001c18, i32* %r3.global-to-local, align 4
  store i32 %v0_10001c18, i32* @r31, align 4
  %v4_10001c60 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_10001c70 = zext i16 %storemerge to i32
  %v4_10001c74 = icmp eq i16 %storemerge, %tmp13
  %v4_10001c60.not = xor i1 %v4_10001c60, true
  br label %dec_label_pc_10001c20

dec_label_pc_10001c20:                            ; preds = %dec_label_pc_10001c7c, %dec_label_pc_10001c04
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10001c30, i32* %r7.global-to-local, align 4
  store i32 %v2_10001c34, i32* %r8.global-to-local, align 4
  %v0_10001c38 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001c38, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268442692, i32* @lr, align 4
  %v6_10001c40 = call i32 @function_10009cf8(i32 %v0_10001c38, i32 %v2_10001c24, i32 256, i32 16384, i32 %v2_10001c30, i32 %v2_10001c34)
  store i32 %v6_10001c40, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10001c4c = icmp eq i32 %v6_10001c40, -1
  store i1 %v3_10001c4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001c4c, label %dec_label_pc_10001cfc, label %dec_label_pc_10001c58

dec_label_pc_10001c58:                            ; preds = %dec_label_pc_10001c20
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_10001c60, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10001c40, 41
  %or.cond = or i1 %tmp51, %v4_10001c60.not
  br i1 %or.cond, label %dec_label_pc_10001c7c, label %dec_label_pc_10001c6c

dec_label_pc_10001c6c:                            ; preds = %dec_label_pc_10001c58
  store i32 %v4_10001c6c, i32* %r0.global-to-local, align 4
  store i32 %v4_10001c70, i32* %r8.global-to-local, align 4
  store i1 %v4_10001c74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001c74, label %dec_label_pc_10001c98, label %dec_label_pc_10001c7c

dec_label_pc_10001c7c:                            ; preds = %dec_label_pc_10001c58, %dec_label_pc_10001cb0, %dec_label_pc_10001c6c
  store i32 268442752, i32* @lr, align 4
  %v0_10001c7c = call i32 @function_1000946c()
  %v0_10001c80 = load i32, i32* @r31, align 4
  %v2_10001c80 = sub i32 %v0_10001c7c, %v0_10001c80
  store i32 %v2_10001c80, i32* %r3.global-to-local, align 4
  %v3_10001c84 = icmp eq i32 %v2_10001c80, 10
  store i1 %v3_10001c84, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_10001c80, 11
  br i1 %tmp52, label %dec_label_pc_10001c20, label %dec_label_pc_10001c8c

dec_label_pc_10001c8c:                            ; preds = %dec_label_pc_10001c7c
  %v0_10001c8c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001c8c, i32* %r3.global-to-local, align 4
  store i32 268442772, i32* @lr, align 4
  %v0_10001c90 = call i32 @function_1000909c()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268442528, i32* @lr, align 4
  %v3_10001b9c = call i32 @function_10009dec(i32 2, i32 1, i32 0)
  store i32 %v3_10001b9c, i32* %r3.global-to-local, align 4
  %v3_10001ba0 = icmp eq i32 %v3_10001b9c, -1
  store i1 %v3_10001ba0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001b9c, i32* %r28.global-to-local, align 4
  br i1 %v3_10001ba0, label %dec_label_pc_10001e80, label %dec_label_pc_10001bac

dec_label_pc_10001c98:                            ; preds = %dec_label_pc_10001c6c
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_10001c9c, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10001ca8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001ca8, label %dec_label_pc_10001d5c, label %dec_label_pc_10001cb0

dec_label_pc_10001cb0:                            ; preds = %dec_label_pc_10001c98
  br i1 %v3_10001ca0, label %dec_label_pc_10001c7c, label %dec_label_pc_10001cb4

dec_label_pc_10001cb4:                            ; preds = %dec_label_pc_10001cb0
  %v0_10001cb4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001cb4, i32* %r3.global-to-local, align 4
  store i32 268442812, i32* @lr, align 4
  %v0_10001cb8 = call i32 @function_1000909c()
  store i32 %v0_10001cb8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001b8c

dec_label_pc_10001cc0:                            ; preds = %dec_label_pc_10001bac
  store i32 %v3_10001cc0, i32* %r29.global-to-local, align 4
  %v0_10001cc4 = call i32 @function_10005f3c()
  store i32 %v0_10001cc4, i32* %r3.global-to-local, align 4
  %v3_10001cc8 = load i32, i32* %stack_var_-408, align 4
  %v1_10001ccc = mul i32 %v3_10001cc8, 24
  %v1_10001cd0 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001cd0 = add i32 %v1_10001cd0, %v1_10001ccc
  store i32 %v2_10001cd0, i32* %r9.global-to-local, align 4
  %v1_10001cd4 = add i32 %v2_10001cd0, 20
  %v2_10001cd4 = inttoptr i32 %v1_10001cd4 to i8*
  %v3_10001cd4 = load i8, i8* %v2_10001cd4, align 1
  %v4_10001cd4 = zext i8 %v3_10001cd4 to i32
  store i32 %v4_10001cd4, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_10001cd4, 64
  %v2_10001cd8 = zext i8 %tmp56 to i32
  %v3_10001cd8 = lshr i32 %v0_10001cc4, %v2_10001cd8
  store i32 %v3_10001cd8, i32* %r3.global-to-local, align 4
  %v0_10001cdc = load i32, i32* %r29.global-to-local, align 4
  %v2_10001cdc = add i32 %v3_10001cd8, %v0_10001cdc
  store i32 %v2_10001cdc, i32* %r29.global-to-local, align 4
  %v0_10001ce4 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001ce4, label %dec_label_pc_10001ce8, label %dec_label_pc_10001bfc

dec_label_pc_10001ce8:                            ; preds = %dec_label_pc_10001cc0, %dec_label_pc_10001bf0
  %stack_var_-396.2 = phi i32 [ %v2_10001cdc, %dec_label_pc_10001cc0 ], [ %v3_10001cc0, %dec_label_pc_10001bf0 ]
  %v0_10001ce8 = call i32 @function_10005f3c()
  %v1_10001ce8 = trunc i32 %v0_10001ce8 to i16
  store i32 %v0_10001ce8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001c04

dec_label_pc_10001cf4:                            ; preds = %dec_label_pc_10001b48
  %v0_10001cf4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001cf4, i32* %r3.global-to-local, align 4
  store i32 268442876, i32* @lr, align 4
  %v0_10001cf8 = call i32 @function_1000909c()
  store i32 %v0_10001cf8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001cfc

dec_label_pc_10001cfc:                            ; preds = %dec_label_pc_10001c20, %dec_label_pc_10001950, %dec_label_pc_10001cf4
  store i32 %v0_10001968, i32* %r0.global-to-local, align 4
  %v1_10001d10 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001958)
  store i32 %v0_100019a0, i32* %r28.global-to-local, align 4
  store i32 %v0_100019a8, i32* %r29.global-to-local, align 4
  %v0_10001d58 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001d58

dec_label_pc_10001d5c:                            ; preds = %dec_label_pc_10001c98
  %v3_10001d5c = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001d5c, i32* %r29.global-to-local, align 4
  %v0_10001d60 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10001d60, i32* @r3, align 4
  %v0_10001d64 = load i32, i32* @r30, align 4
  %v1_10001d64 = add i32 %v0_10001d64, 2
  %v2_10001d64 = inttoptr i32 %v1_10001d64 to i16*
  %v3_10001d64 = load i16, i16* %v2_10001d64, align 2
  %v4_10001d64 = zext i16 %v3_10001d64 to i32
  store i32 %v4_10001d64, i32* %r11.global-to-local, align 4
  %v1_10001d68 = mul i32 %v3_10001d5c, 16
  store i32 %v1_10001d68, i32* %r9.global-to-local, align 4
  %v1_10001d6c = mul i32 %v3_10001d5c, 4
  store i32 %v1_10001d6c, i32* @r29, align 4
  %v1_10001d70 = load i32, i32* %r22.global-to-local, align 4
  %v3_10001d70 = add i32 %v1_10001d70, %v1_10001d68
  %v4_10001d70 = inttoptr i32 %v3_10001d70 to i32*
  store i32 %tmp14, i32* %v4_10001d70, align 4
  %v0_10001d74 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001d74 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001d74 = add i32 %v1_10001d74, %v0_10001d74
  store i32 %v2_10001d74, i32* %r9.global-to-local, align 4
  %v0_10001d78 = load i32, i32* %r8.global-to-local, align 4
  %v1_10001d78 = trunc i32 %v0_10001d78 to i16
  %v3_10001d78 = add i32 %v2_10001d74, 14
  %v4_10001d78 = inttoptr i32 %v3_10001d78 to i16*
  store i16 %v1_10001d78, i16* %v4_10001d78, align 2
  %v0_10001d7c = load i32, i32* @r30, align 4
  %v1_10001d7c = add i32 %v0_10001d7c, 4
  %v2_10001d7c = inttoptr i32 %v1_10001d7c to i32*
  %v3_10001d7c = load i32, i32* %v2_10001d7c, align 4
  store i32 %v3_10001d7c, i32* %r0.global-to-local, align 4
  %v0_10001d80 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001d80 = trunc i32 %v0_10001d80 to i16
  %v2_10001d80 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001d80 = add i32 %v2_10001d80, 12
  %v4_10001d80 = inttoptr i32 %v3_10001d80 to i16*
  store i16 %v1_10001d80, i16* %v4_10001d80, align 2
  %v0_10001d84 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001d84 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001d84 = add i32 %v1_10001d84, 4
  %v3_10001d84 = inttoptr i32 %v2_10001d84 to i32*
  store i32 %v0_10001d84, i32* %v3_10001d84, align 4
  %v0_10001d88 = load i32, i32* @r30, align 4
  %v1_10001d88 = add i32 %v0_10001d88, 8
  %v2_10001d88 = inttoptr i32 %v1_10001d88 to i32*
  %v3_10001d88 = load i32, i32* %v2_10001d88, align 4
  store i32 %v3_10001d88, i32* %r0.global-to-local, align 4
  %v1_10001d8c = load i32, i32* %r9.global-to-local, align 4
  %v2_10001d8c = add i32 %v1_10001d8c, 8
  %v3_10001d8c = inttoptr i32 %v2_10001d8c to i32*
  store i32 %v3_10001d88, i32* %v3_10001d8c, align 4
  store i32 268443028, i32* @lr, align 4
  %v0_10001d90 = call i32 @function_10009ff0()
  store i32 %v0_10001d90, i32* %r3.global-to-local, align 4
  %v3_10001d94 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001d94, i32* %r0.global-to-local, align 4
  %v1_10001d98 = load i32, i32* @r29, align 4
  %v2_10001d98 = load i32, i32* %r23.global-to-local, align 4
  %v3_10001d98 = add i32 %v2_10001d98, %v1_10001d98
  %v4_10001d98 = inttoptr i32 %v3_10001d98 to i32*
  store i32 %v0_10001d90, i32* %v4_10001d98, align 4
  %v0_10001d9c = load i32, i32* %r0.global-to-local, align 4
  %v1_10001d9c = mul i32 %v0_10001d9c, 4
  store i32 %v1_10001d9c, i32* %r0.global-to-local, align 4
  %v0_10001da0 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001da0 = add i32 %v0_10001da0, %v1_10001d9c
  %v3_10001da0 = inttoptr i32 %v2_10001da0 to i32*
  %v4_10001da0 = load i32, i32* %v3_10001da0, align 4
  store i32 %v4_10001da0, i32* @r31, align 4
  store i32 %v1_10001a44, i32* %r0.global-to-local, align 4
  %v1_10001da8 = inttoptr i32 %v4_10001da0 to i32*
  %v2_10001da8 = load i32, i32* %v1_10001da8, align 4
  store i32 %v2_10001da8, i32* %r9.global-to-local, align 4
  %v1_10001dac = add i32 %v4_10001da0, 20
  store i32 %v1_10001dac, i32* @r30, align 4
  store i1 %v3_10001db0, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10001db8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001db8, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10001dc0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10001dc4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001dc4 = trunc i32 %v0_10001dc4 to i16
  %v2_10001dc4 = load i32, i32* @r31, align 4
  %v3_10001dc4 = add i32 %v2_10001dc4, 4
  %v4_10001dc4 = inttoptr i32 %v3_10001dc4 to i16*
  store i16 %v1_10001dc4, i16* %v4_10001dc4, align 2
  %v1_10001dc8 = load i32, i32* @r31, align 4
  %v2_10001dc8 = inttoptr i32 %v1_10001dc8 to i32*
  store i32 %v1_10001dc0, i32* %v2_10001dc8, align 4
  %v0_10001dcc = load i32, i32* %r26.global-to-local, align 4
  %v1_10001dcc = trunc i32 %v0_10001dcc to i16
  %v2_10001dcc = load i32, i32* @r31, align 4
  %v3_10001dcc = add i32 %v2_10001dcc, 2
  %v4_10001dcc = inttoptr i32 %v3_10001dcc to i16*
  store i16 %v1_10001dcc, i16* %v4_10001dcc, align 2
  store i32 %v4_10001dd0, i32* %r9.global-to-local, align 4
  %v2_10001dd4 = load i32, i32* @r31, align 4
  %v3_10001dd4 = add i32 %v2_10001dd4, 1
  %v4_10001dd4 = inttoptr i32 %v3_10001dd4 to i8*
  store i8 %v5_100019f8, i8* %v4_10001dd4, align 1
  store i32 %v4_10001dd8, i32* %r0.global-to-local, align 4
  %v2_10001ddc = load i32, i32* @r31, align 4
  %v3_10001ddc = add i32 %v2_10001ddc, 8
  %v4_10001ddc = inttoptr i32 %v3_10001ddc to i8*
  store i8 %v5_10001a30, i8* %v4_10001ddc, align 1
  %v0_10001de0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001de0, label %dec_label_pc_10001dec, label %dec_label_pc_10001de4

dec_label_pc_10001de4:                            ; preds = %dec_label_pc_10001d5c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001de8 = load i32, i32* @r31, align 4
  %v3_10001de8 = add i32 %v2_10001de8, 6
  %v4_10001de8 = inttoptr i32 %v3_10001de8 to i16*
  store i16 16384, i16* %v4_10001de8, align 2
  br label %dec_label_pc_10001dec

dec_label_pc_10001dec:                            ; preds = %dec_label_pc_10001d5c, %dec_label_pc_10001de4
  %v2_10001df4 = load i32, i32* @r31, align 4
  %v3_10001df4 = add i32 %v2_10001df4, 9
  %v4_10001df4 = inttoptr i32 %v3_10001df4 to i8*
  store i8 6, i8* %v4_10001df4, align 1
  %v3_10001df8 = load i32, i32* @global_var_1001c208.14, align 4
  store i32 %v3_10001df8, i32* %r0.global-to-local, align 4
  %v1_10001dfc = load i32, i32* @r31, align 4
  %v2_10001dfc = add i32 %v1_10001dfc, 12
  %v3_10001dfc = inttoptr i32 %v2_10001dfc to i32*
  store i32 %v3_10001df8, i32* %v3_10001dfc, align 4
  %v3_10001e00 = load i32, i32* %stack_var_-408, align 4
  %v1_10001e04 = mul i32 %v3_10001e00, 16
  store i32 %v1_10001e04, i32* %r9.global-to-local, align 4
  %v1_10001e08 = load i32, i32* %r22.global-to-local, align 4
  %v2_10001e08 = add i32 %v1_10001e08, %v1_10001e04
  %v3_10001e08 = inttoptr i32 %v2_10001e08 to i32*
  %v4_10001e08 = load i32, i32* %v3_10001e08, align 4
  store i32 %v4_10001e08, i32* %r0.global-to-local, align 4
  store i32 %v2_10001e08, i32* %r9.global-to-local, align 4
  %v1_10001e10 = add i32 %v2_10001e08, 12
  %v2_10001e10 = inttoptr i32 %v1_10001e10 to i16*
  %v3_10001e10 = load i16, i16* %v2_10001e10, align 2
  %v4_10001e10 = zext i16 %v3_10001e10 to i32
  store i32 %v4_10001e10, i32* %r11.global-to-local, align 4
  %v1_10001e14 = load i32, i32* @r31, align 4
  %v2_10001e14 = add i32 %v1_10001e14, 16
  %v3_10001e14 = inttoptr i32 %v2_10001e14 to i32*
  store i32 %v4_10001e08, i32* %v3_10001e14, align 4
  %v0_10001e18 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001e18 = trunc i32 %v0_10001e18 to i16
  %v2_10001e18 = load i32, i32* @r31, align 4
  %v3_10001e18 = add i32 %v2_10001e18, 20
  %v4_10001e18 = inttoptr i32 %v3_10001e18 to i16*
  store i16 %v1_10001e18, i16* %v4_10001e18, align 2
  %v0_10001e1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e1c = add i32 %v0_10001e1c, 8
  %v2_10001e1c = inttoptr i32 %v1_10001e1c to i32*
  %v3_10001e1c = load i32, i32* %v2_10001e1c, align 4
  store i32 %v3_10001e1c, i32* %r0.global-to-local, align 4
  %v0_10001e20 = load i32, i32* @r30, align 4
  %v1_10001e20 = add i32 %v0_10001e20, 12
  %v2_10001e20 = inttoptr i32 %v1_10001e20 to i32*
  %v3_10001e20 = load i32, i32* %v2_10001e20, align 4
  store i32 %v3_10001e20, i32* %r11.global-to-local, align 4
  %v2_10001e24 = add i32 %v0_10001e20, 4
  %v3_10001e24 = inttoptr i32 %v2_10001e24 to i32*
  store i32 %v3_10001e1c, i32* %v3_10001e24, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10001e2c = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10001e2c, i32* %r11.global-to-local, align 4
  %v0_10001e30 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e30 = add i32 %v0_10001e30, 14
  %v2_10001e30 = inttoptr i32 %v1_10001e30 to i16*
  %v3_10001e30 = load i16, i16* %v2_10001e30, align 2
  %v4_10001e30 = zext i16 %v3_10001e30 to i32
  store i32 %v4_10001e30, i32* %r0.global-to-local, align 4
  %v1_10001e34 = add i32 %v0_10001e30, 4
  %v2_10001e34 = inttoptr i32 %v1_10001e34 to i32*
  %v3_10001e34 = load i32, i32* %v2_10001e34, align 4
  store i32 %v3_10001e34, i32* %r10.global-to-local, align 4
  %v1_10001e38 = or i32 %v1_10001e2c, 1114112
  store i32 %v1_10001e38, i32* %r11.global-to-local, align 4
  %v2_10001e3c = load i32, i32* @r30, align 4
  %v3_10001e3c = add i32 %v2_10001e3c, 2
  %v4_10001e3c = inttoptr i32 %v3_10001e3c to i16*
  store i16 %v3_10001e30, i16* %v4_10001e3c, align 2
  %v0_10001e40 = load i32, i32* %r10.global-to-local, align 4
  %v1_10001e40 = load i32, i32* @r30, align 4
  %v2_10001e40 = add i32 %v1_10001e40, 8
  %v3_10001e40 = inttoptr i32 %v2_10001e40 to i32*
  store i32 %v0_10001e40, i32* %v3_10001e40, align 4
  %v0_10001e44 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001e44 = load i32, i32* @r30, align 4
  %v2_10001e44 = add i32 %v1_10001e44, 12
  %v3_10001e44 = inttoptr i32 %v2_10001e44 to i32*
  store i32 %v0_10001e44, i32* %v3_10001e44, align 4
  %v0_10001e48 = call i32 @function_10005f3c()
  %v1_10001e48 = trunc i32 %v0_10001e48 to i16
  store i32 %v1_10001a80, i32* %r9.global-to-local, align 4
  %v3_10001e50 = load i32, i32* @r30, align 4
  %v4_10001e50 = add i32 %v3_10001e50, 14
  %v5_10001e50 = inttoptr i32 %v4_10001e50 to i16*
  store i16 %v1_10001e48, i16* %v5_10001e50, align 2
  %v0_10001e54 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001e54, i32* @r4, align 4
  %v0_10001e58 = load i32, i32* @r31, align 4
  %v1_10001e58 = add i32 %v0_10001e58, 40
  store i32 %v1_10001e58, i32* @r3, align 4
  %v0_10001e5c = load i32, i32* @r30, align 4
  %v1_10001e5c = add i32 %v0_10001e5c, 12
  %v2_10001e5c = inttoptr i32 %v1_10001e5c to i32*
  %v3_10001e5c = load i32, i32* %v2_10001e5c, align 4
  store i32 %v3_10001e5c, i32* %r0.global-to-local, align 4
  %v1_10001e60 = call i32 @__asm_rlwimi(i32 %v1_10001a80, i32 21, i32 10, i32 10)
  store i32 %v1_10001e60, i32* %r0.global-to-local, align 4
  %v1_10001e64 = call i32 @__asm_rlwimi(i32 %v1_10001aa4, i32 20, i32 11, i32 11)
  store i32 %v1_10001e64, i32* %r0.global-to-local, align 4
  %v1_10001e68 = call i32 @__asm_rlwimi(i32 %v1_10001abc, i32 19, i32 12, i32 12)
  store i32 %v1_10001e68, i32* %r0.global-to-local, align 4
  %v1_10001e6c = call i32 @__asm_rlwimi(i32 %v1_10001ad4, i32 18, i32 13, i32 13)
  store i32 %v1_10001e6c, i32* %r0.global-to-local, align 4
  %v1_10001e70 = call i32 @__asm_rlwimi(i32 %v1_10001aec, i32 17, i32 14, i32 14)
  store i32 %v1_10001e70, i32* %r0.global-to-local, align 4
  %v1_10001e74 = call i32 @__asm_rlwimi(i32 %v1_10001b04, i32 16, i32 15, i32 15)
  store i32 %v1_10001e74, i32* %r0.global-to-local, align 4
  %v1_10001e78 = load i32, i32* @r30, align 4
  %v2_10001e78 = add i32 %v1_10001e78, 12
  %v3_10001e78 = inttoptr i32 %v2_10001e78 to i32*
  store i32 %v1_10001e74, i32* %v3_10001e78, align 4
  %v0_10001e7c = call i32 @function_10006110()
  store i32 %v0_10001e7c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001e80

dec_label_pc_10001e80:                            ; preds = %dec_label_pc_10001b8c, %dec_label_pc_10001c8c, %dec_label_pc_10001dec
  %v3_10001e80 = load i32, i32* %stack_var_-408, align 4
  %v1_10001e84 = add i32 %v3_10001e80, 1
  store i32 %v1_10001e84, i32* %r9.global-to-local, align 4
  %v1_10001e88 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001e88 = icmp slt i32 %v1_10001e84, %v1_10001e88
  %v4_10001e88 = icmp eq i32 %v1_10001e84, %v1_10001e88
  store i1 %v4_10001e88, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001e84, i32* %stack_var_-408, align 4
  br i1 %v2_10001e88, label %dec_label_pc_10001b8c, label %dec_label_pc_10001e94.loopexit

dec_label_pc_10001e94.loopexit:                   ; preds = %dec_label_pc_10001e80
  %v0_10001ea0.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10001ea0.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_10001e94

dec_label_pc_10001e94:                            ; preds = %dec_label_pc_10001e94.loopexit, %dec_label_pc_10001b6c
  %v1_10001ea0.pre = phi i1 [ %v1_10001ea0.pre.pre, %dec_label_pc_10001e94.loopexit ], [ %v1_10001b6c, %dec_label_pc_10001b6c ]
  %v0_10001ea0.pre = phi i1 [ %v0_10001ea0.pre.pre, %dec_label_pc_10001e94.loopexit ], [ %v3_10001b6c, %dec_label_pc_10001b6c ]
  %v0_10001e94 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001e94 = icmp eq i32 %v0_10001e94, 0
  store i1 %v3_10001e94, i1* %cr2_eq.global-to-local, align 1
  %v0_10001e98 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001e98 = add i32 %v0_10001e98, 40
  store i32 %v1_10001e98, i32* %r26.global-to-local, align 4
  %v1_10001e9c = add i32 %v0_10001e98, 20
  store i32 %v1_10001e9c, i32* @r31, align 4
  br label %dec_label_pc_10001ea0.outer

dec_label_pc_10001ea0.outer:                      ; preds = %dec_label_pc_10001f74, %dec_label_pc_10001e94
  %v1_10001ea0.ph = phi i1 [ %v1_10001ea0.pre, %dec_label_pc_10001e94 ], [ %v1_10001f74, %dec_label_pc_10001f74 ]
  %v0_10001ea0.ph = phi i1 [ %v0_10001ea0.pre, %dec_label_pc_10001e94 ], [ %v0_10001f74, %dec_label_pc_10001f74 ]
  %v2_10001ea0 = or i1 %v1_10001ea0.ph, %v0_10001ea0.ph
  br label %dec_label_pc_10001ea0

dec_label_pc_10001ea0:                            ; preds = %dec_label_pc_10001ea0.outer, %dec_label_pc_10001ea0
  br i1 %v2_10001ea0, label %dec_label_pc_10001ea0, label %dec_label_pc_10001ea4

dec_label_pc_10001ea4:                            ; preds = %dec_label_pc_10001ea0, %dec_label_pc_10001f74
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10001eb4 = load i32, i32* %r19.global-to-local, align 4
  %v4_10001eb4 = icmp eq i32 %v0_10001eb4, 65535
  store i1 %v4_10001eb4, i1* %cr4_eq.global-to-local, align 1
  %v0_10001eb8 = load i32, i32* @r31, align 4
  %v1_10001eb8 = urem i32 %v0_10001eb8, 65536
  store i32 %v1_10001eb8, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001ec4

dec_label_pc_10001ec4:                            ; preds = %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge, %dec_label_pc_10001ea4
  %v0_10001ed0 = phi i1 [ %v0_10001ed0.pre, %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge ], [ %v4_10001eb4, %dec_label_pc_10001ea4 ]
  %v0_10001ec4 = phi i32 [ %v1_10001f64, %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge ], [ 0, %dec_label_pc_10001ea4 ]
  %v1_10001ec4 = mul i32 %v0_10001ec4, 4
  store i32 %v1_10001ec4, i32* %r0.global-to-local, align 4
  %v0_10001ec8 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001ec8 = add i32 %v0_10001ec8, %v1_10001ec4
  %v3_10001ec8 = inttoptr i32 %v2_10001ec8 to i32*
  %v4_10001ec8 = load i32, i32* %v3_10001ec8, align 4
  store i32 %v4_10001ec8, i32* @r29, align 4
  %v1_10001ecc = add i32 %v4_10001ec8, 20
  store i32 %v1_10001ecc, i32* %r28.global-to-local, align 4
  br i1 %v0_10001ed0, label %dec_label_pc_10001f7c, label %dec_label_pc_10001ed4

dec_label_pc_10001ed4:                            ; preds = %dec_label_pc_10001ec4
  %v1_10001ed4 = add i32 %v4_10001ec8, 40
  store i32 %v1_10001ed4, i32* @r3, align 4
  %v0_10001ed8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001ed8, i32* @r4, align 4
  %v0_10001edc = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001edc, label %dec_label_pc_10001ee0, label %dec_label_pc_10001f90

dec_label_pc_10001ee0:                            ; preds = %dec_label_pc_10001ed4, %dec_label_pc_10001f7c, %dec_label_pc_10001f90
  %v2_10001ee0 = phi i32 [ %v4_10001ec8, %dec_label_pc_10001ed4 ], [ %v0_10001f88, %dec_label_pc_10001f7c ], [ %v2_10001ee0.pre, %dec_label_pc_10001f90 ]
  %v0_10001ee0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001ee0 = trunc i32 %v0_10001ee0 to i16
  %v3_10001ee0 = add i32 %v2_10001ee0, 10
  %v4_10001ee0 = inttoptr i32 %v3_10001ee0 to i16*
  store i16 %v1_10001ee0, i16* %v4_10001ee0, align 2
  %v0_10001ee8 = load i32, i32* @r29, align 4
  store i32 %v0_10001ee8, i32* @r3, align 4
  %v2_10001eec = call i32 @function_100043cc(i32 %v0_10001ee8, i32 20)
  %v3_10001eec = trunc i32 %v2_10001eec to i16
  store i32 %v2_10001eec, i32* %r3.global-to-local, align 4
  %v3_10001ef0 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001ef0, i32* %r9.global-to-local, align 4
  %v3_10001ef4 = load i32, i32* @r29, align 4
  %v4_10001ef4 = add i32 %v3_10001ef4, 10
  %v5_10001ef4 = inttoptr i32 %v4_10001ef4 to i16*
  store i16 %v3_10001eec, i16* %v5_10001ef4, align 2
  %v0_10001ef8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001ef8, i32* @r4, align 4
  %v0_10001efc = load i32, i32* %r9.global-to-local, align 4
  %v1_10001efc = mul i32 %v0_10001efc, 16
  store i32 %v1_10001efc, i32* %r9.global-to-local, align 4
  %v0_10001f00 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001f00 = trunc i32 %v0_10001f00 to i16
  %v3_10001f00 = add i32 %v0_10001ef8, 16
  %v4_10001f00 = inttoptr i32 %v3_10001f00 to i16*
  store i16 %v1_10001f00, i16* %v4_10001f00, align 2
  %v0_10001f04 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001f04 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001f04 = add i32 %v1_10001f04, %v0_10001f04
  store i32 %v2_10001f04, i32* %r9.global-to-local, align 4
  %v0_10001f08 = load i32, i32* @r30, align 4
  %v1_10001f0c = add i32 %v2_10001f04, 4
  %v2_10001f0c = inttoptr i32 %v1_10001f0c to i32*
  %v3_10001f0c = load i32, i32* %v2_10001f0c, align 4
  store i32 %v3_10001f0c, i32* %r11.global-to-local, align 4
  %v0_10001f10 = load i32, i32* @r31, align 4
  %v0_10001f14 = load i32, i32* @r29, align 4
  store i32 %v0_10001f14, i32* %r3.global-to-local, align 4
  %v1_10001f18 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001f18 = add i32 %v1_10001f18, 4
  %v3_10001f18 = inttoptr i32 %v2_10001f18 to i32*
  store i32 %v3_10001f0c, i32* %v3_10001f18, align 4
  %v0_10001f1c = load i32, i32* %r11.global-to-local, align 4
  %v1_10001f1c = add i32 %v0_10001f1c, 1
  store i32 %v1_10001f1c, i32* %r11.global-to-local, align 4
  %v1_10001f20 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001f20 = add i32 %v1_10001f20, 4
  %v3_10001f20 = inttoptr i32 %v2_10001f20 to i32*
  store i32 %v1_10001f1c, i32* %v3_10001f20, align 4
  %v0_10001f24 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001f24 = add i32 %v0_10001f24, 8
  %v2_10001f24 = inttoptr i32 %v1_10001f24 to i32*
  %v3_10001f24 = load i32, i32* %v2_10001f24, align 4
  store i32 %v3_10001f24, i32* %r0.global-to-local, align 4
  %v1_10001f28 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001f28 = add i32 %v1_10001f28, 8
  %v3_10001f28 = inttoptr i32 %v2_10001f28 to i32*
  store i32 %v3_10001f24, i32* %v3_10001f28, align 4
  %v4_10001f2c = call i32 @function_10004430(i32 %v0_10001f14, i32 %v0_10001ef8, i32 %v0_10001f08, i32 %v0_10001f10)
  %v5_10001f2c = trunc i32 %v4_10001f2c to i16
  store i32 %v4_10001f2c, i32* %r3.global-to-local, align 4
  %v3_10001f30 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001f30, i32* %r7.global-to-local, align 4
  %v0_10001f34 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001f34 = add i32 %v0_10001f34, 2
  %v2_10001f34 = inttoptr i32 %v1_10001f34 to i16*
  %v3_10001f34 = load i16, i16* %v2_10001f34, align 2
  %v4_10001f34 = zext i16 %v3_10001f34 to i32
  store i32 %v4_10001f34, i32* %r0.global-to-local, align 4
  %v0_10001f38 = load i32, i32* @r29, align 4
  %v1_10001f3c = mul i32 %v3_10001f30, 24
  store i32 %v1_10001f3c, i32* %r7.global-to-local, align 4
  %v4_10001f40 = add i32 %v0_10001f34, 16
  %v5_10001f40 = inttoptr i32 %v4_10001f40 to i16*
  store i16 %v5_10001f2c, i16* %v5_10001f40, align 2
  %v0_10001f44 = load i32, i32* %r26.global-to-local, align 4
  %v0_10001f48 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001f48, i32* %r3.global-to-local, align 4
  %v0_10001f4c = load i32, i32* %r7.global-to-local, align 4
  %v1_10001f4c = load i32, i32* %r20.global-to-local, align 4
  %v2_10001f4c = add i32 %v1_10001f4c, %v0_10001f4c
  store i32 %v2_10001f4c, i32* %r7.global-to-local, align 4
  %v0_10001f54 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001f54 = trunc i32 %v0_10001f54 to i16
  %v3_10001f54 = add i32 %v2_10001f4c, 2
  %v4_10001f54 = inttoptr i32 %v3_10001f54 to i16*
  store i16 %v1_10001f54, i16* %v4_10001f54, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268443488, i32* @lr, align 4
  %v6_10001f5c = call i32 @function_10009d70(i32 %v0_10001f48, i32 %v0_10001f38, i32 %v0_10001f44, i32 16384, i32 %v2_10001f4c, i32 16)
  store i32 %v6_10001f5c, i32* %r3.global-to-local, align 4
  %v3_10001f60 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001f60, i32* %r9.global-to-local, align 4
  %v1_10001f64 = add i32 %v3_10001f60, 1
  store i32 %v1_10001f64, i32* %r0.global-to-local, align 4
  %v1_10001f68 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001f68 = icmp slt i32 %v1_10001f64, %v1_10001f68
  %v4_10001f68 = icmp eq i32 %v1_10001f64, %v1_10001f68
  store i1 %v4_10001f68, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001f64, i32* %stack_var_-408, align 4
  br i1 %v2_10001f68, label %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge, label %dec_label_pc_10001f74

dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge: ; preds = %dec_label_pc_10001ee0
  %v0_10001ed0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10001ec4

dec_label_pc_10001f74:                            ; preds = %dec_label_pc_10001ee0
  %v0_10001f74 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10001f74 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10001f74 = or i1 %v0_10001f74, %v1_10001f74
  br i1 %v2_10001f74, label %dec_label_pc_10001ea0.outer, label %dec_label_pc_10001ea4

dec_label_pc_10001f7c:                            ; preds = %dec_label_pc_10001ec4
  %v0_10001f7c = call i32 @function_10005f3c()
  %v1_10001f7c = trunc i32 %v0_10001f7c to i16
  %v0_10001f80 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001f80, i32* @r4, align 4
  %v3_10001f84 = load i32, i32* @r29, align 4
  %v4_10001f84 = add i32 %v3_10001f84, 4
  %v5_10001f84 = inttoptr i32 %v4_10001f84 to i16*
  store i16 %v1_10001f7c, i16* %v5_10001f84, align 2
  %v0_10001f88 = load i32, i32* @r29, align 4
  %v1_10001f88 = add i32 %v0_10001f88, 40
  store i32 %v1_10001f88, i32* @r3, align 4
  %v0_10001f8c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001f8c, label %dec_label_pc_10001ee0, label %dec_label_pc_10001f90

dec_label_pc_10001f90:                            ; preds = %dec_label_pc_10001ed4, %dec_label_pc_10001f7c
  %v0_10001f90 = call i32 @function_10006110()
  store i32 %v0_10001f90, i32* %r3.global-to-local, align 4
  %v2_10001ee0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001ee0

; uselistorder directives
  uselistorder i32 %v0_10001f88, { 1, 0 }
  uselistorder i1 %v1_10001f74, { 1, 0 }
  uselistorder i1 %v0_10001f74, { 1, 0 }
  uselistorder i32 %v1_10001f64, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10001f2c, { 1, 0 }
  uselistorder i32 %v0_10001ef8, { 1, 0, 2 }
  uselistorder i32 %v2_10001eec, { 1, 0 }
  uselistorder i32 %v1_10001ec4, { 1, 0 }
  uselistorder i32 %v1_10001e84, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10001e08, { 1, 0, 2 }
  uselistorder i32 %v1_10001e04, { 1, 0 }
  uselistorder i32 %v1_10001d9c, { 1, 0 }
  uselistorder i32 %v1_10001d68, { 1, 0 }
  uselistorder i32 %v0_10001ce8, { 1, 0 }
  uselistorder i32 %v2_10001cdc, { 1, 2, 0 }
  uselistorder i1 %v4_10001c60, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10001cc0, { 1, 3, 0, 2 }
  uselistorder i32 %v1_10001c9c, { 1, 0 }
  uselistorder i32 %v1_10001a44, { 1, 0 }
  uselistorder i8 %v5_10001a30, { 1, 0 }
  uselistorder i8 %v5_100019f8, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 30, 12, 13, 14, 15, 16, 17, 18, 27, 28, 20, 19, 21, 22, 23, 24, 25, 26, 3, 2, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 1, 0 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i32 268442528, { 1, 0 }
  uselistorder label %dec_label_pc_10001f90, { 1, 0 }
  uselistorder label %dec_label_pc_10001ee0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001ea4, { 1, 0 }
  uselistorder label %dec_label_pc_10001ea0, { 1, 0 }
  uselistorder label %dec_label_pc_10001e80, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001dec, { 1, 0 }
  uselistorder label %dec_label_pc_10001cfc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001c7c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001bac, { 1, 0 }
}

define i32 @function_10001f98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001f98:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10001f9c = load i32, i32* @lr, align 4
  store i32 %v0_10001f9c, i32* %r0.global-to-local, align 4
  %v0_10001fa0 = call i32 @__asm_mfcr()
  store i32 %v0_10001fa0, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10001fb0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001fa0, i32* %r21.global-to-local, align 4
  %v0_10001fe8 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001ff0 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268443660, i32* @lr, align 4
  %v2_10002008 = call i32 @function_1000a148(i32 16, i32 16)
  store i32 %v2_10002008, i32* %r22.global-to-local, align 4
  %v0_10002014 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10002014, i32* %r3.global-to-local, align 4
  store i32 268443676, i32* @lr, align 4
  %v2_10002018 = call i32 @function_1000a148(i32 %v0_10002014, i32 4)
  %v0_1000201c = load i32, i32* @r28, align 4
  store i32 %v2_10002018, i32* %r23.global-to-local, align 4
  %v0_1000202c = load i32, i32* @r29, align 4
  store i32 %v0_1000202c, i32* %r3.global-to-local, align 4
  store i32 268443700, i32* @lr, align 4
  %v4_10002030 = inttoptr i32 %v0_1000201c to i32*
  %v5_10002030 = call i32 @function_100006a8(i32 %v0_1000202c, i32* %v4_10002030, i32 2, i32 0)
  %v5_10002040 = trunc i32 %v5_10002030 to i8
  %v0_10002048 = load i32, i32* @r28, align 4
  %v0_1000204c = load i32, i32* @r29, align 4
  store i32 %v0_1000204c, i32* %r3.global-to-local, align 4
  store i32 268443732, i32* @lr, align 4
  %v4_10002050 = inttoptr i32 %v0_10002048 to i32*
  %v5_10002050 = call i32 @function_100006a8(i32 %v0_1000204c, i32* %v4_10002050, i32 3, i32 65535)
  %v0_10002054 = load i32, i32* @r28, align 4
  store i32 %v5_10002050, i32* @r31, align 4
  %v0_10002064 = load i32, i32* @r29, align 4
  store i32 %v0_10002064, i32* %r3.global-to-local, align 4
  store i32 268443756, i32* @lr, align 4
  %v4_10002068 = inttoptr i32 %v0_10002054 to i32*
  %v5_10002068 = call i32 @function_100006a8(i32 %v0_10002064, i32* %v4_10002068, i32 4, i32 64)
  %v0_1000206c = load i32, i32* @r28, align 4
  %v5_10002078 = trunc i32 %v5_10002068 to i8
  %v0_10002080 = load i32, i32* @r29, align 4
  store i32 %v0_10002080, i32* %r3.global-to-local, align 4
  store i32 268443784, i32* @lr, align 4
  %v4_10002084 = inttoptr i32 %v0_1000206c to i32*
  %v5_10002084 = call i32 @function_100006a8(i32 %v0_10002080, i32* %v4_10002084, i32 5, i32 1)
  %v1_1000208c = urem i32 %v5_10002084, 256
  %v0_10002098 = load i32, i32* @r28, align 4
  %v0_100020a0 = load i32, i32* @r29, align 4
  store i32 %v0_100020a0, i32* %r3.global-to-local, align 4
  store i32 268443816, i32* @lr, align 4
  %v4_100020a4 = inttoptr i32 %v0_10002098 to i32*
  %v5_100020a4 = call i32 @function_100006a8(i32 %v0_100020a0, i32* %v4_100020a4, i32 7, i32 65535)
  %v0_100020a8 = load i32, i32* @r28, align 4
  %v5_100020b4 = trunc i32 %v5_100020a4 to i16
  %v0_100020bc = load i32, i32* @r29, align 4
  store i32 %v0_100020bc, i32* %r3.global-to-local, align 4
  store i32 268443844, i32* @lr, align 4
  %v4_100020c0 = inttoptr i32 %v0_100020a8 to i32*
  %v5_100020c0 = call i32 @function_100006a8(i32 %v0_100020bc, i32* %v4_100020c0, i32 11, i32 0)
  %v0_100020c4 = load i32, i32* @r28, align 4
  %v1_100020c8 = urem i32 %v5_100020c0, 256
  %v0_100020d8 = load i32, i32* @r29, align 4
  store i32 %v0_100020d8, i32* %r3.global-to-local, align 4
  store i32 268443872, i32* @lr, align 4
  %v4_100020dc = inttoptr i32 %v0_100020c4 to i32*
  %v5_100020dc = call i32 @function_100006a8(i32 %v0_100020d8, i32* %v4_100020dc, i32 12, i32 1)
  %v0_100020e0 = load i32, i32* @r28, align 4
  %v1_100020ec = urem i32 %v5_100020dc, 256
  %v0_100020f0 = load i32, i32* @r29, align 4
  store i32 %v0_100020f0, i32* %r3.global-to-local, align 4
  store i32 268443896, i32* @lr, align 4
  %v4_100020f4 = inttoptr i32 %v0_100020e0 to i32*
  %v5_100020f4 = call i32 @function_100006a8(i32 %v0_100020f0, i32* %v4_100020f4, i32 13, i32 1)
  %v0_100020f8 = load i32, i32* @r28, align 4
  %v1_10002104 = urem i32 %v5_100020f4, 256
  %v0_10002108 = load i32, i32* @r29, align 4
  store i32 %v0_10002108, i32* %r3.global-to-local, align 4
  store i32 268443920, i32* @lr, align 4
  %v4_1000210c = inttoptr i32 %v0_100020f8 to i32*
  %v5_1000210c = call i32 @function_100006a8(i32 %v0_10002108, i32* %v4_1000210c, i32 14, i32 0)
  %v0_10002110 = load i32, i32* @r28, align 4
  %v1_1000211c = urem i32 %v5_1000210c, 256
  %v0_10002120 = load i32, i32* @r29, align 4
  store i32 %v0_10002120, i32* %r3.global-to-local, align 4
  store i32 268443944, i32* @lr, align 4
  %v4_10002124 = inttoptr i32 %v0_10002110 to i32*
  %v5_10002124 = call i32 @function_100006a8(i32 %v0_10002120, i32* %v4_10002124, i32 15, i32 0)
  %v0_10002128 = load i32, i32* @r28, align 4
  %v1_10002134 = urem i32 %v5_10002124, 256
  %v0_10002138 = load i32, i32* @r29, align 4
  store i32 %v0_10002138, i32* %r3.global-to-local, align 4
  store i32 268443968, i32* @lr, align 4
  %v4_1000213c = inttoptr i32 %v0_10002128 to i32*
  %v5_1000213c = call i32 @function_100006a8(i32 %v0_10002138, i32* %v4_1000213c, i32 16, i32 0)
  %v0_10002148 = load i32, i32* @r28, align 4
  %v1_1000214c = urem i32 %v5_1000213c, 256
  %v0_10002150 = load i32, i32* @r29, align 4
  store i32 %v0_10002150, i32* %r3.global-to-local, align 4
  store i32 268443992, i32* @lr, align 4
  %v4_10002154 = inttoptr i32 %v0_10002148 to i32*
  %v5_10002154 = call i32 @function_100006a8(i32 %v0_10002150, i32* %v4_10002154, i32 0, i32 768)
  %v0_10002158 = load i32, i32* @r28, align 4
  store i32 %v5_10002154, i32* %r25.global-to-local, align 4
  %v0_10002168 = load i32, i32* @r29, align 4
  store i32 %v0_10002168, i32* %r3.global-to-local, align 4
  store i32 268444016, i32* @lr, align 4
  %v4_1000216c = inttoptr i32 %v0_10002158 to i32*
  %v5_1000216c = call i32 @function_100006a8(i32 %v0_10002168, i32* %v4_1000216c, i32 1, i32 1)
  %v1_10002174 = urem i32 %v5_1000216c, 256
  store i32 %v1_10002174, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444036, i32* @lr, align 4
  %v3_10002180 = call i32 @function_10009dec(i32 2, i32 3, i32 6)
  store i32 %v3_10002180, i32* %r3.global-to-local, align 4
  %v3_10002184 = icmp eq i32 %v3_10002180, -1
  store i1 %v3_10002184, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002180, i32* %r24.global-to-local, align 4
  br i1 %v3_10002184, label %dec_label_pc_10002344, label %dec_label_pc_10002190

dec_label_pc_10002190:                            ; preds = %dec_label_pc_10001f98
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000219c = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268444076, i32* @lr, align 4
  %v4_100021a8 = call i32 @function_10009db0(i32 0, i32 3, i32 %v2_1000219c, i32 4)
  store i32 %v4_100021a8, i32* %r3.global-to-local, align 4
  %v3_100021ac = icmp eq i32 %v4_100021a8, -1
  store i1 %v3_100021ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100021ac, label %dec_label_pc_1000233c, label %dec_label_pc_100021b4

dec_label_pc_100021b4:                            ; preds = %dec_label_pc_10002190
  %v0_100021b4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100021b4 = icmp slt i32 %v0_100021b4, 0
  %v3_100021b4 = icmp eq i32 %v0_100021b4, 0
  store i1 %v1_100021b4, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_100021b4, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_100021c0 = load i32, i32* @r31, align 4
  %v1_100021c0 = urem i32 %v0_100021c0, 65536
  store i32 %v1_100021c0, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_100021b4, 1
  br i1 %tmp49, label %dec_label_pc_100024dc, label %dec_label_pc_100021c8

dec_label_pc_100021c8:                            ; preds = %dec_label_pc_100021b4
  %v4_100021c8 = sext i16 %v5_100020b4 to i32
  store i32 %v4_100021c8, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_1000226c = ptrtoint i32* %stack_var_-368 to i32
  %v2_10002278 = ptrtoint i32* %stack_var_-384 to i32
  %v2_1000227c = ptrtoint i32* %stack_var_-404 to i32
  %v4_100022b4 = zext i16 %tmp13 to i32
  %v1_100022e4 = and i32 %tmp, 1179648
  %v3_100023f8 = icmp eq i32 %v1_1000208c, 0
  %v4_10002418 = sext i8 %v5_10002040 to i32
  %v4_10002420 = sext i8 %v5_10002078 to i32
  %v1_100022e8 = and i32 %tmp, 327680
  %v3_100022e8 = icmp eq i32 %v1_100022e8, 0
  %v4_100022f0 = icmp eq i32 %v1_100022e4, 1179648
  br label %dec_label_pc_100021d4

dec_label_pc_100021d4:                            ; preds = %dec_label_pc_100024c8, %dec_label_pc_100022fc, %dec_label_pc_100021c8
  %v0_100021d4 = load i32, i32* %r25.global-to-local, align 4
  %v1_100021d4 = add i32 %v0_100021d4, 40
  store i32 %v1_100021d4, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444136, i32* @lr, align 4
  %v3_100021e453 = call i32 @function_10009dec(i32 2, i32 1, i32 0)
  store i32 %v3_100021e453, i32* %r3.global-to-local, align 4
  %v3_100021e855 = icmp eq i32 %v3_100021e453, -1
  store i1 %v3_100021e855, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100021e453, i32* %r28.global-to-local, align 4
  br i1 %v3_100021e855, label %dec_label_pc_100024c8, label %dec_label_pc_100021f4

dec_label_pc_100021f4:                            ; preds = %dec_label_pc_100021d4, %dec_label_pc_100022d4
  store i32 3, i32* @r4, align 4
  store i32 268444164, i32* @lr, align 4
  %v1_10002200 = call i32 @function_10008fb4(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_1000220c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000220c, i32* %r3.global-to-local, align 4
  store i32 268444184, i32* @lr, align 4
  %v2_10002214 = call i32 @function_10008fb4(i32 %v0_1000220c)
  store i32 %v2_10002214, i32* %r3.global-to-local, align 4
  %v3_10002218 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002220 = mul i32 %v3_10002218, 24
  store i32 %v1_10002220, i32* %r0.global-to-local, align 4
  %v0_10002228 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002228 = add i32 %v0_10002228, %v1_10002220
  store i32 %v2_10002228, i32* %r11.global-to-local, align 4
  %v1_1000222c = add i32 %v2_10002228, 20
  %v2_1000222c = inttoptr i32 %v1_1000222c to i8*
  %v3_1000222c = load i8, i8* %v2_1000222c, align 1
  %v4_1000222c = zext i8 %v3_1000222c to i32
  store i32 %v4_1000222c, i32* %r9.global-to-local, align 4
  %v3_10002230 = icmp eq i8 %v3_1000222c, 31
  store i1 %v3_10002230, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_1000222c, 32
  %v1_10002308 = add i32 %v2_10002228, 16
  %v2_10002308 = inttoptr i32 %v1_10002308 to i32*
  %v3_10002308 = load i32, i32* %v2_10002308, align 4
  br i1 %tmp50, label %dec_label_pc_10002308, label %dec_label_pc_10002238

dec_label_pc_10002238:                            ; preds = %dec_label_pc_100021f4
  store i32 %v3_10002308, i32* %r0.global-to-local, align 4
  %v0_10002240 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002240, label %dec_label_pc_10002330, label %dec_label_pc_10002244

dec_label_pc_10002244:                            ; preds = %dec_label_pc_10002308, %dec_label_pc_10002238
  %stack_var_-396.0 = phi i32 [ %v2_10002324, %dec_label_pc_10002308 ], [ %v3_10002308, %dec_label_pc_10002238 ]
  store i32 %v4_100021c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000224c

dec_label_pc_1000224c:                            ; preds = %dec_label_pc_10002330, %dec_label_pc_10002244
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10002330 ], [ %stack_var_-396.0, %dec_label_pc_10002244 ]
  %storemerge = phi i16 [ %v1_10002330, %dec_label_pc_10002330 ], [ %v5_100020b4, %dec_label_pc_10002244 ]
  %v0_10002254 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002254, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000225c.20 to i32), i32* @lr, align 4
  %v0_10002258 = call i32 @function_10009bec()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268444260, i32* @lr, align 4
  %v0_10002260 = call i32 @function_1000946c()
  store i32 %v0_10002260, i32* %r3.global-to-local, align 4
  store i32 %v0_10002260, i32* @r31, align 4
  %v4_100022a8 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_100022b8 = zext i16 %storemerge to i32
  %v4_100022bc = icmp eq i16 %storemerge, %tmp13
  %v4_100022a8.not = xor i1 %v4_100022a8, true
  br label %dec_label_pc_10002268

dec_label_pc_10002268:                            ; preds = %dec_label_pc_100022c4, %dec_label_pc_1000224c
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10002278, i32* %r7.global-to-local, align 4
  store i32 %v2_1000227c, i32* %r8.global-to-local, align 4
  %v0_10002280 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002280, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268444300, i32* @lr, align 4
  %v6_10002288 = call i32 @function_10009cf8(i32 %v0_10002280, i32 %v2_1000226c, i32 256, i32 16384, i32 %v2_10002278, i32 %v2_1000227c)
  store i32 %v6_10002288, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10002294 = icmp eq i32 %v6_10002288, -1
  store i1 %v3_10002294, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002294, label %dec_label_pc_10002344, label %dec_label_pc_100022a0

dec_label_pc_100022a0:                            ; preds = %dec_label_pc_10002268
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_100022a8, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10002288, 41
  %or.cond = or i1 %tmp51, %v4_100022a8.not
  br i1 %or.cond, label %dec_label_pc_100022c4, label %dec_label_pc_100022b4

dec_label_pc_100022b4:                            ; preds = %dec_label_pc_100022a0
  store i32 %v4_100022b4, i32* %r0.global-to-local, align 4
  store i32 %v4_100022b8, i32* %r8.global-to-local, align 4
  store i1 %v4_100022bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100022bc, label %dec_label_pc_100022e0, label %dec_label_pc_100022c4

dec_label_pc_100022c4:                            ; preds = %dec_label_pc_100022a0, %dec_label_pc_100022f8, %dec_label_pc_100022b4
  store i32 268444360, i32* @lr, align 4
  %v0_100022c4 = call i32 @function_1000946c()
  %v0_100022c8 = load i32, i32* @r31, align 4
  %v2_100022c8 = sub i32 %v0_100022c4, %v0_100022c8
  store i32 %v2_100022c8, i32* %r3.global-to-local, align 4
  %v3_100022cc = icmp eq i32 %v2_100022c8, 10
  store i1 %v3_100022cc, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_100022c8, 11
  br i1 %tmp52, label %dec_label_pc_10002268, label %dec_label_pc_100022d4

dec_label_pc_100022d4:                            ; preds = %dec_label_pc_100022c4
  %v0_100022d4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100022d4, i32* %r3.global-to-local, align 4
  store i32 268444380, i32* @lr, align 4
  %v0_100022d8 = call i32 @function_1000909c()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444136, i32* @lr, align 4
  %v3_100021e4 = call i32 @function_10009dec(i32 2, i32 1, i32 0)
  store i32 %v3_100021e4, i32* %r3.global-to-local, align 4
  %v3_100021e8 = icmp eq i32 %v3_100021e4, -1
  store i1 %v3_100021e8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100021e4, i32* %r28.global-to-local, align 4
  br i1 %v3_100021e8, label %dec_label_pc_100024c8, label %dec_label_pc_100021f4

dec_label_pc_100022e0:                            ; preds = %dec_label_pc_100022b4
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_100022e4, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_100022f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100022f0, label %dec_label_pc_100023a4, label %dec_label_pc_100022f8

dec_label_pc_100022f8:                            ; preds = %dec_label_pc_100022e0
  br i1 %v3_100022e8, label %dec_label_pc_100022c4, label %dec_label_pc_100022fc

dec_label_pc_100022fc:                            ; preds = %dec_label_pc_100022f8
  %v0_100022fc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100022fc, i32* %r3.global-to-local, align 4
  store i32 268444420, i32* @lr, align 4
  %v0_10002300 = call i32 @function_1000909c()
  store i32 %v0_10002300, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100021d4

dec_label_pc_10002308:                            ; preds = %dec_label_pc_100021f4
  store i32 %v3_10002308, i32* %r29.global-to-local, align 4
  %v0_1000230c = call i32 @function_10005f3c()
  store i32 %v0_1000230c, i32* %r3.global-to-local, align 4
  %v3_10002310 = load i32, i32* %stack_var_-408, align 4
  %v1_10002314 = mul i32 %v3_10002310, 24
  %v1_10002318 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002318 = add i32 %v1_10002318, %v1_10002314
  store i32 %v2_10002318, i32* %r9.global-to-local, align 4
  %v1_1000231c = add i32 %v2_10002318, 20
  %v2_1000231c = inttoptr i32 %v1_1000231c to i8*
  %v3_1000231c = load i8, i8* %v2_1000231c, align 1
  %v4_1000231c = zext i8 %v3_1000231c to i32
  store i32 %v4_1000231c, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_1000231c, 64
  %v2_10002320 = zext i8 %tmp56 to i32
  %v3_10002320 = lshr i32 %v0_1000230c, %v2_10002320
  store i32 %v3_10002320, i32* %r3.global-to-local, align 4
  %v0_10002324 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002324 = add i32 %v3_10002320, %v0_10002324
  store i32 %v2_10002324, i32* %r29.global-to-local, align 4
  %v0_1000232c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000232c, label %dec_label_pc_10002330, label %dec_label_pc_10002244

dec_label_pc_10002330:                            ; preds = %dec_label_pc_10002308, %dec_label_pc_10002238
  %stack_var_-396.2 = phi i32 [ %v2_10002324, %dec_label_pc_10002308 ], [ %v3_10002308, %dec_label_pc_10002238 ]
  %v0_10002330 = call i32 @function_10005f3c()
  %v1_10002330 = trunc i32 %v0_10002330 to i16
  store i32 %v0_10002330, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000224c

dec_label_pc_1000233c:                            ; preds = %dec_label_pc_10002190
  %v0_1000233c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_1000233c, i32* %r3.global-to-local, align 4
  store i32 268444484, i32* @lr, align 4
  %v0_10002340 = call i32 @function_1000909c()
  store i32 %v0_10002340, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002344

dec_label_pc_10002344:                            ; preds = %dec_label_pc_10002268, %dec_label_pc_10001f98, %dec_label_pc_1000233c
  store i32 %v0_10001fb0, i32* %r0.global-to-local, align 4
  %v1_10002358 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001fa0)
  store i32 %v0_10001fe8, i32* %r28.global-to-local, align 4
  store i32 %v0_10001ff0, i32* %r29.global-to-local, align 4
  %v0_100023a0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100023a0

dec_label_pc_100023a4:                            ; preds = %dec_label_pc_100022e0
  %v3_100023a4 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100023a4, i32* %r29.global-to-local, align 4
  %v0_100023a8 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100023a8, i32* @r3, align 4
  %v0_100023ac = load i32, i32* @r30, align 4
  %v1_100023ac = add i32 %v0_100023ac, 2
  %v2_100023ac = inttoptr i32 %v1_100023ac to i16*
  %v3_100023ac = load i16, i16* %v2_100023ac, align 2
  %v4_100023ac = zext i16 %v3_100023ac to i32
  store i32 %v4_100023ac, i32* %r11.global-to-local, align 4
  %v1_100023b0 = mul i32 %v3_100023a4, 16
  store i32 %v1_100023b0, i32* %r9.global-to-local, align 4
  %v1_100023b4 = mul i32 %v3_100023a4, 4
  store i32 %v1_100023b4, i32* @r29, align 4
  %v1_100023b8 = load i32, i32* %r22.global-to-local, align 4
  %v3_100023b8 = add i32 %v1_100023b8, %v1_100023b0
  %v4_100023b8 = inttoptr i32 %v3_100023b8 to i32*
  store i32 %tmp14, i32* %v4_100023b8, align 4
  %v0_100023bc = load i32, i32* %r22.global-to-local, align 4
  %v1_100023bc = load i32, i32* %r9.global-to-local, align 4
  %v2_100023bc = add i32 %v1_100023bc, %v0_100023bc
  store i32 %v2_100023bc, i32* %r9.global-to-local, align 4
  %v0_100023c0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100023c0 = trunc i32 %v0_100023c0 to i16
  %v3_100023c0 = add i32 %v2_100023bc, 14
  %v4_100023c0 = inttoptr i32 %v3_100023c0 to i16*
  store i16 %v1_100023c0, i16* %v4_100023c0, align 2
  %v0_100023c4 = load i32, i32* @r30, align 4
  %v1_100023c4 = add i32 %v0_100023c4, 4
  %v2_100023c4 = inttoptr i32 %v1_100023c4 to i32*
  %v3_100023c4 = load i32, i32* %v2_100023c4, align 4
  store i32 %v3_100023c4, i32* %r0.global-to-local, align 4
  %v0_100023c8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100023c8 = trunc i32 %v0_100023c8 to i16
  %v2_100023c8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100023c8 = add i32 %v2_100023c8, 12
  %v4_100023c8 = inttoptr i32 %v3_100023c8 to i16*
  store i16 %v1_100023c8, i16* %v4_100023c8, align 2
  %v0_100023cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100023cc = load i32, i32* %r9.global-to-local, align 4
  %v2_100023cc = add i32 %v1_100023cc, 4
  %v3_100023cc = inttoptr i32 %v2_100023cc to i32*
  store i32 %v0_100023cc, i32* %v3_100023cc, align 4
  %v0_100023d0 = load i32, i32* @r30, align 4
  %v1_100023d0 = add i32 %v0_100023d0, 8
  %v2_100023d0 = inttoptr i32 %v1_100023d0 to i32*
  %v3_100023d0 = load i32, i32* %v2_100023d0, align 4
  store i32 %v3_100023d0, i32* %r0.global-to-local, align 4
  %v1_100023d4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100023d4 = add i32 %v1_100023d4, 8
  %v3_100023d4 = inttoptr i32 %v2_100023d4 to i32*
  store i32 %v3_100023d0, i32* %v3_100023d4, align 4
  store i32 268444636, i32* @lr, align 4
  %v0_100023d8 = call i32 @function_10009ff0()
  store i32 %v0_100023d8, i32* %r3.global-to-local, align 4
  %v3_100023dc = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100023dc, i32* %r0.global-to-local, align 4
  %v1_100023e0 = load i32, i32* @r29, align 4
  %v2_100023e0 = load i32, i32* %r23.global-to-local, align 4
  %v3_100023e0 = add i32 %v2_100023e0, %v1_100023e0
  %v4_100023e0 = inttoptr i32 %v3_100023e0 to i32*
  store i32 %v0_100023d8, i32* %v4_100023e0, align 4
  %v0_100023e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100023e4 = mul i32 %v0_100023e4, 4
  store i32 %v1_100023e4, i32* %r0.global-to-local, align 4
  %v0_100023e8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100023e8 = add i32 %v0_100023e8, %v1_100023e4
  %v3_100023e8 = inttoptr i32 %v2_100023e8 to i32*
  %v4_100023e8 = load i32, i32* %v3_100023e8, align 4
  store i32 %v4_100023e8, i32* @r31, align 4
  store i32 %v1_1000208c, i32* %r0.global-to-local, align 4
  %v1_100023f0 = inttoptr i32 %v4_100023e8 to i32*
  %v2_100023f0 = load i32, i32* %v1_100023f0, align 4
  store i32 %v2_100023f0, i32* %r9.global-to-local, align 4
  %v1_100023f4 = add i32 %v4_100023e8, 20
  store i32 %v1_100023f4, i32* @r30, align 4
  store i1 %v3_100023f8, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10002400 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002400, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10002408 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_1000240c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000240c = trunc i32 %v0_1000240c to i16
  %v2_1000240c = load i32, i32* @r31, align 4
  %v3_1000240c = add i32 %v2_1000240c, 4
  %v4_1000240c = inttoptr i32 %v3_1000240c to i16*
  store i16 %v1_1000240c, i16* %v4_1000240c, align 2
  %v1_10002410 = load i32, i32* @r31, align 4
  %v2_10002410 = inttoptr i32 %v1_10002410 to i32*
  store i32 %v1_10002408, i32* %v2_10002410, align 4
  %v0_10002414 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002414 = trunc i32 %v0_10002414 to i16
  %v2_10002414 = load i32, i32* @r31, align 4
  %v3_10002414 = add i32 %v2_10002414, 2
  %v4_10002414 = inttoptr i32 %v3_10002414 to i16*
  store i16 %v1_10002414, i16* %v4_10002414, align 2
  store i32 %v4_10002418, i32* %r9.global-to-local, align 4
  %v2_1000241c = load i32, i32* @r31, align 4
  %v3_1000241c = add i32 %v2_1000241c, 1
  %v4_1000241c = inttoptr i32 %v3_1000241c to i8*
  store i8 %v5_10002040, i8* %v4_1000241c, align 1
  store i32 %v4_10002420, i32* %r0.global-to-local, align 4
  %v2_10002424 = load i32, i32* @r31, align 4
  %v3_10002424 = add i32 %v2_10002424, 8
  %v4_10002424 = inttoptr i32 %v3_10002424 to i8*
  store i8 %v5_10002078, i8* %v4_10002424, align 1
  %v0_10002428 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002428, label %dec_label_pc_10002434, label %dec_label_pc_1000242c

dec_label_pc_1000242c:                            ; preds = %dec_label_pc_100023a4
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002430 = load i32, i32* @r31, align 4
  %v3_10002430 = add i32 %v2_10002430, 6
  %v4_10002430 = inttoptr i32 %v3_10002430 to i16*
  store i16 16384, i16* %v4_10002430, align 2
  br label %dec_label_pc_10002434

dec_label_pc_10002434:                            ; preds = %dec_label_pc_100023a4, %dec_label_pc_1000242c
  %v2_1000243c = load i32, i32* @r31, align 4
  %v3_1000243c = add i32 %v2_1000243c, 9
  %v4_1000243c = inttoptr i32 %v3_1000243c to i8*
  store i8 6, i8* %v4_1000243c, align 1
  %v3_10002440 = load i32, i32* @global_var_1001c208.14, align 4
  store i32 %v3_10002440, i32* %r0.global-to-local, align 4
  %v1_10002444 = load i32, i32* @r31, align 4
  %v2_10002444 = add i32 %v1_10002444, 12
  %v3_10002444 = inttoptr i32 %v2_10002444 to i32*
  store i32 %v3_10002440, i32* %v3_10002444, align 4
  %v3_10002448 = load i32, i32* %stack_var_-408, align 4
  %v1_1000244c = mul i32 %v3_10002448, 16
  store i32 %v1_1000244c, i32* %r9.global-to-local, align 4
  %v1_10002450 = load i32, i32* %r22.global-to-local, align 4
  %v2_10002450 = add i32 %v1_10002450, %v1_1000244c
  %v3_10002450 = inttoptr i32 %v2_10002450 to i32*
  %v4_10002450 = load i32, i32* %v3_10002450, align 4
  store i32 %v4_10002450, i32* %r0.global-to-local, align 4
  store i32 %v2_10002450, i32* %r9.global-to-local, align 4
  %v1_10002458 = add i32 %v2_10002450, 12
  %v2_10002458 = inttoptr i32 %v1_10002458 to i16*
  %v3_10002458 = load i16, i16* %v2_10002458, align 2
  %v4_10002458 = zext i16 %v3_10002458 to i32
  store i32 %v4_10002458, i32* %r11.global-to-local, align 4
  %v1_1000245c = load i32, i32* @r31, align 4
  %v2_1000245c = add i32 %v1_1000245c, 16
  %v3_1000245c = inttoptr i32 %v2_1000245c to i32*
  store i32 %v4_10002450, i32* %v3_1000245c, align 4
  %v0_10002460 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002460 = trunc i32 %v0_10002460 to i16
  %v2_10002460 = load i32, i32* @r31, align 4
  %v3_10002460 = add i32 %v2_10002460, 20
  %v4_10002460 = inttoptr i32 %v3_10002460 to i16*
  store i16 %v1_10002460, i16* %v4_10002460, align 2
  %v0_10002464 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002464 = add i32 %v0_10002464, 8
  %v2_10002464 = inttoptr i32 %v1_10002464 to i32*
  %v3_10002464 = load i32, i32* %v2_10002464, align 4
  store i32 %v3_10002464, i32* %r0.global-to-local, align 4
  %v0_10002468 = load i32, i32* @r30, align 4
  %v1_10002468 = add i32 %v0_10002468, 12
  %v2_10002468 = inttoptr i32 %v1_10002468 to i32*
  %v3_10002468 = load i32, i32* %v2_10002468, align 4
  store i32 %v3_10002468, i32* %r11.global-to-local, align 4
  %v2_1000246c = add i32 %v0_10002468, 4
  %v3_1000246c = inttoptr i32 %v2_1000246c to i32*
  store i32 %v3_10002464, i32* %v3_1000246c, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10002474 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10002474, i32* %r11.global-to-local, align 4
  %v0_10002478 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002478 = add i32 %v0_10002478, 14
  %v2_10002478 = inttoptr i32 %v1_10002478 to i16*
  %v3_10002478 = load i16, i16* %v2_10002478, align 2
  %v4_10002478 = zext i16 %v3_10002478 to i32
  store i32 %v4_10002478, i32* %r0.global-to-local, align 4
  %v1_1000247c = add i32 %v0_10002478, 4
  %v2_1000247c = inttoptr i32 %v1_1000247c to i32*
  %v3_1000247c = load i32, i32* %v2_1000247c, align 4
  store i32 %v3_1000247c, i32* %r10.global-to-local, align 4
  %v1_10002480 = or i32 %v1_10002474, 1114112
  store i32 %v1_10002480, i32* %r11.global-to-local, align 4
  %v2_10002484 = load i32, i32* @r30, align 4
  %v3_10002484 = add i32 %v2_10002484, 2
  %v4_10002484 = inttoptr i32 %v3_10002484 to i16*
  store i16 %v3_10002478, i16* %v4_10002484, align 2
  %v0_10002488 = load i32, i32* %r10.global-to-local, align 4
  %v1_10002488 = load i32, i32* @r30, align 4
  %v2_10002488 = add i32 %v1_10002488, 8
  %v3_10002488 = inttoptr i32 %v2_10002488 to i32*
  store i32 %v0_10002488, i32* %v3_10002488, align 4
  %v0_1000248c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000248c = load i32, i32* @r30, align 4
  %v2_1000248c = add i32 %v1_1000248c, 12
  %v3_1000248c = inttoptr i32 %v2_1000248c to i32*
  store i32 %v0_1000248c, i32* %v3_1000248c, align 4
  %v0_10002490 = call i32 @function_10005f3c()
  %v1_10002490 = trunc i32 %v0_10002490 to i16
  store i32 %v1_100020c8, i32* %r9.global-to-local, align 4
  %v3_10002498 = load i32, i32* @r30, align 4
  %v4_10002498 = add i32 %v3_10002498, 14
  %v5_10002498 = inttoptr i32 %v4_10002498 to i16*
  store i16 %v1_10002490, i16* %v5_10002498, align 2
  %v0_1000249c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000249c, i32* @r4, align 4
  %v0_100024a0 = load i32, i32* @r31, align 4
  %v1_100024a0 = add i32 %v0_100024a0, 40
  store i32 %v1_100024a0, i32* @r3, align 4
  %v0_100024a4 = load i32, i32* @r30, align 4
  %v1_100024a4 = add i32 %v0_100024a4, 12
  %v2_100024a4 = inttoptr i32 %v1_100024a4 to i32*
  %v3_100024a4 = load i32, i32* %v2_100024a4, align 4
  store i32 %v3_100024a4, i32* %r0.global-to-local, align 4
  %v1_100024a8 = call i32 @__asm_rlwimi(i32 %v1_100020c8, i32 21, i32 10, i32 10)
  store i32 %v1_100024a8, i32* %r0.global-to-local, align 4
  %v1_100024ac = call i32 @__asm_rlwimi(i32 %v1_100020ec, i32 20, i32 11, i32 11)
  store i32 %v1_100024ac, i32* %r0.global-to-local, align 4
  %v1_100024b0 = call i32 @__asm_rlwimi(i32 %v1_10002104, i32 19, i32 12, i32 12)
  store i32 %v1_100024b0, i32* %r0.global-to-local, align 4
  %v1_100024b4 = call i32 @__asm_rlwimi(i32 %v1_1000211c, i32 18, i32 13, i32 13)
  store i32 %v1_100024b4, i32* %r0.global-to-local, align 4
  %v1_100024b8 = call i32 @__asm_rlwimi(i32 %v1_10002134, i32 17, i32 14, i32 14)
  store i32 %v1_100024b8, i32* %r0.global-to-local, align 4
  %v1_100024bc = call i32 @__asm_rlwimi(i32 %v1_1000214c, i32 16, i32 15, i32 15)
  store i32 %v1_100024bc, i32* %r0.global-to-local, align 4
  %v1_100024c0 = load i32, i32* @r30, align 4
  %v2_100024c0 = add i32 %v1_100024c0, 12
  %v3_100024c0 = inttoptr i32 %v2_100024c0 to i32*
  store i32 %v1_100024bc, i32* %v3_100024c0, align 4
  %v0_100024c4 = call i32 @function_10006110()
  store i32 %v0_100024c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100024c8

dec_label_pc_100024c8:                            ; preds = %dec_label_pc_100021d4, %dec_label_pc_100022d4, %dec_label_pc_10002434
  %v3_100024c8 = load i32, i32* %stack_var_-408, align 4
  %v1_100024cc = add i32 %v3_100024c8, 1
  store i32 %v1_100024cc, i32* %r9.global-to-local, align 4
  %v1_100024d0 = load i32, i32* %r21.global-to-local, align 4
  %v2_100024d0 = icmp slt i32 %v1_100024cc, %v1_100024d0
  %v4_100024d0 = icmp eq i32 %v1_100024cc, %v1_100024d0
  store i1 %v4_100024d0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100024cc, i32* %stack_var_-408, align 4
  br i1 %v2_100024d0, label %dec_label_pc_100021d4, label %dec_label_pc_100024dc.loopexit

dec_label_pc_100024dc.loopexit:                   ; preds = %dec_label_pc_100024c8
  %v0_100024e8.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_100024e8.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_100024dc

dec_label_pc_100024dc:                            ; preds = %dec_label_pc_100024dc.loopexit, %dec_label_pc_100021b4
  %v1_100024e8.pre = phi i1 [ %v1_100024e8.pre.pre, %dec_label_pc_100024dc.loopexit ], [ %v1_100021b4, %dec_label_pc_100021b4 ]
  %v0_100024e8.pre = phi i1 [ %v0_100024e8.pre.pre, %dec_label_pc_100024dc.loopexit ], [ %v3_100021b4, %dec_label_pc_100021b4 ]
  %v0_100024dc = load i32, i32* %r27.global-to-local, align 4
  %v3_100024dc = icmp eq i32 %v0_100024dc, 0
  store i1 %v3_100024dc, i1* %cr2_eq.global-to-local, align 1
  %v0_100024e0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100024e0 = add i32 %v0_100024e0, 40
  store i32 %v1_100024e0, i32* %r26.global-to-local, align 4
  %v1_100024e4 = add i32 %v0_100024e0, 20
  store i32 %v1_100024e4, i32* @r31, align 4
  br label %dec_label_pc_100024e8.outer

dec_label_pc_100024e8.outer:                      ; preds = %dec_label_pc_100025bc, %dec_label_pc_100024dc
  %v1_100024e8.ph = phi i1 [ %v1_100024e8.pre, %dec_label_pc_100024dc ], [ %v1_100025bc, %dec_label_pc_100025bc ]
  %v0_100024e8.ph = phi i1 [ %v0_100024e8.pre, %dec_label_pc_100024dc ], [ %v0_100025bc, %dec_label_pc_100025bc ]
  %v2_100024e8 = or i1 %v1_100024e8.ph, %v0_100024e8.ph
  br label %dec_label_pc_100024e8

dec_label_pc_100024e8:                            ; preds = %dec_label_pc_100024e8.outer, %dec_label_pc_100024e8
  br i1 %v2_100024e8, label %dec_label_pc_100024e8, label %dec_label_pc_100024ec

dec_label_pc_100024ec:                            ; preds = %dec_label_pc_100024e8, %dec_label_pc_100025bc
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_100024fc = load i32, i32* %r19.global-to-local, align 4
  %v4_100024fc = icmp eq i32 %v0_100024fc, 65535
  store i1 %v4_100024fc, i1* %cr4_eq.global-to-local, align 1
  %v0_10002500 = load i32, i32* @r31, align 4
  %v1_10002500 = urem i32 %v0_10002500, 65536
  store i32 %v1_10002500, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000250c

dec_label_pc_1000250c:                            ; preds = %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge, %dec_label_pc_100024ec
  %v0_10002518 = phi i1 [ %v0_10002518.pre, %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge ], [ %v4_100024fc, %dec_label_pc_100024ec ]
  %v0_1000250c = phi i32 [ %v1_100025ac, %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge ], [ 0, %dec_label_pc_100024ec ]
  %v1_1000250c = mul i32 %v0_1000250c, 4
  store i32 %v1_1000250c, i32* %r0.global-to-local, align 4
  %v0_10002510 = load i32, i32* %r23.global-to-local, align 4
  %v2_10002510 = add i32 %v0_10002510, %v1_1000250c
  %v3_10002510 = inttoptr i32 %v2_10002510 to i32*
  %v4_10002510 = load i32, i32* %v3_10002510, align 4
  store i32 %v4_10002510, i32* @r29, align 4
  %v1_10002514 = add i32 %v4_10002510, 20
  store i32 %v1_10002514, i32* %r28.global-to-local, align 4
  br i1 %v0_10002518, label %dec_label_pc_100025c4, label %dec_label_pc_1000251c

dec_label_pc_1000251c:                            ; preds = %dec_label_pc_1000250c
  %v1_1000251c = add i32 %v4_10002510, 40
  store i32 %v1_1000251c, i32* @r3, align 4
  %v0_10002520 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10002520, i32* @r4, align 4
  %v0_10002524 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002524, label %dec_label_pc_10002528, label %dec_label_pc_100025d8

dec_label_pc_10002528:                            ; preds = %dec_label_pc_1000251c, %dec_label_pc_100025c4, %dec_label_pc_100025d8
  %v2_10002528 = phi i32 [ %v4_10002510, %dec_label_pc_1000251c ], [ %v0_100025d0, %dec_label_pc_100025c4 ], [ %v2_10002528.pre, %dec_label_pc_100025d8 ]
  %v0_10002528 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002528 = trunc i32 %v0_10002528 to i16
  %v3_10002528 = add i32 %v2_10002528, 10
  %v4_10002528 = inttoptr i32 %v3_10002528 to i16*
  store i16 %v1_10002528, i16* %v4_10002528, align 2
  %v0_10002530 = load i32, i32* @r29, align 4
  store i32 %v0_10002530, i32* @r3, align 4
  %v2_10002534 = call i32 @function_100043cc(i32 %v0_10002530, i32 20)
  %v3_10002534 = trunc i32 %v2_10002534 to i16
  store i32 %v2_10002534, i32* %r3.global-to-local, align 4
  %v3_10002538 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002538, i32* %r9.global-to-local, align 4
  %v3_1000253c = load i32, i32* @r29, align 4
  %v4_1000253c = add i32 %v3_1000253c, 10
  %v5_1000253c = inttoptr i32 %v4_1000253c to i16*
  store i16 %v3_10002534, i16* %v5_1000253c, align 2
  %v0_10002540 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002540, i32* @r4, align 4
  %v0_10002544 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002544 = mul i32 %v0_10002544, 16
  store i32 %v1_10002544, i32* %r9.global-to-local, align 4
  %v0_10002548 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002548 = trunc i32 %v0_10002548 to i16
  %v3_10002548 = add i32 %v0_10002540, 16
  %v4_10002548 = inttoptr i32 %v3_10002548 to i16*
  store i16 %v1_10002548, i16* %v4_10002548, align 2
  %v0_1000254c = load i32, i32* %r22.global-to-local, align 4
  %v1_1000254c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000254c = add i32 %v1_1000254c, %v0_1000254c
  store i32 %v2_1000254c, i32* %r9.global-to-local, align 4
  %v0_10002550 = load i32, i32* @r30, align 4
  %v1_10002554 = add i32 %v2_1000254c, 4
  %v2_10002554 = inttoptr i32 %v1_10002554 to i32*
  %v3_10002554 = load i32, i32* %v2_10002554, align 4
  store i32 %v3_10002554, i32* %r11.global-to-local, align 4
  %v0_10002558 = load i32, i32* @r31, align 4
  %v0_1000255c = load i32, i32* @r29, align 4
  store i32 %v0_1000255c, i32* %r3.global-to-local, align 4
  %v1_10002560 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002560 = add i32 %v1_10002560, 4
  %v3_10002560 = inttoptr i32 %v2_10002560 to i32*
  store i32 %v3_10002554, i32* %v3_10002560, align 4
  %v0_10002564 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002564 = add i32 %v0_10002564, 1
  store i32 %v1_10002564, i32* %r11.global-to-local, align 4
  %v1_10002568 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002568 = add i32 %v1_10002568, 4
  %v3_10002568 = inttoptr i32 %v2_10002568 to i32*
  store i32 %v1_10002564, i32* %v3_10002568, align 4
  %v0_1000256c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000256c = add i32 %v0_1000256c, 8
  %v2_1000256c = inttoptr i32 %v1_1000256c to i32*
  %v3_1000256c = load i32, i32* %v2_1000256c, align 4
  store i32 %v3_1000256c, i32* %r0.global-to-local, align 4
  %v1_10002570 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002570 = add i32 %v1_10002570, 8
  %v3_10002570 = inttoptr i32 %v2_10002570 to i32*
  store i32 %v3_1000256c, i32* %v3_10002570, align 4
  %v4_10002574 = call i32 @function_10004430(i32 %v0_1000255c, i32 %v0_10002540, i32 %v0_10002550, i32 %v0_10002558)
  %v5_10002574 = trunc i32 %v4_10002574 to i16
  store i32 %v4_10002574, i32* %r3.global-to-local, align 4
  %v3_10002578 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002578, i32* %r7.global-to-local, align 4
  %v0_1000257c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000257c = add i32 %v0_1000257c, 2
  %v2_1000257c = inttoptr i32 %v1_1000257c to i16*
  %v3_1000257c = load i16, i16* %v2_1000257c, align 2
  %v4_1000257c = zext i16 %v3_1000257c to i32
  store i32 %v4_1000257c, i32* %r0.global-to-local, align 4
  %v0_10002580 = load i32, i32* @r29, align 4
  %v1_10002584 = mul i32 %v3_10002578, 24
  store i32 %v1_10002584, i32* %r7.global-to-local, align 4
  %v4_10002588 = add i32 %v0_1000257c, 16
  %v5_10002588 = inttoptr i32 %v4_10002588 to i16*
  store i16 %v5_10002574, i16* %v5_10002588, align 2
  %v0_1000258c = load i32, i32* %r26.global-to-local, align 4
  %v0_10002590 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002590, i32* %r3.global-to-local, align 4
  %v0_10002594 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002594 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002594 = add i32 %v1_10002594, %v0_10002594
  store i32 %v2_10002594, i32* %r7.global-to-local, align 4
  %v0_1000259c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000259c = trunc i32 %v0_1000259c to i16
  %v3_1000259c = add i32 %v2_10002594, 2
  %v4_1000259c = inttoptr i32 %v3_1000259c to i16*
  store i16 %v1_1000259c, i16* %v4_1000259c, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268445096, i32* @lr, align 4
  %v6_100025a4 = call i32 @function_10009d70(i32 %v0_10002590, i32 %v0_10002580, i32 %v0_1000258c, i32 16384, i32 %v2_10002594, i32 16)
  store i32 %v6_100025a4, i32* %r3.global-to-local, align 4
  %v3_100025a8 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100025a8, i32* %r9.global-to-local, align 4
  %v1_100025ac = add i32 %v3_100025a8, 1
  store i32 %v1_100025ac, i32* %r0.global-to-local, align 4
  %v1_100025b0 = load i32, i32* %r21.global-to-local, align 4
  %v2_100025b0 = icmp slt i32 %v1_100025ac, %v1_100025b0
  %v4_100025b0 = icmp eq i32 %v1_100025ac, %v1_100025b0
  store i1 %v4_100025b0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100025ac, i32* %stack_var_-408, align 4
  br i1 %v2_100025b0, label %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge, label %dec_label_pc_100025bc

dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge: ; preds = %dec_label_pc_10002528
  %v0_10002518.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_1000250c

dec_label_pc_100025bc:                            ; preds = %dec_label_pc_10002528
  %v0_100025bc = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_100025bc = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_100025bc = or i1 %v0_100025bc, %v1_100025bc
  br i1 %v2_100025bc, label %dec_label_pc_100024e8.outer, label %dec_label_pc_100024ec

dec_label_pc_100025c4:                            ; preds = %dec_label_pc_1000250c
  %v0_100025c4 = call i32 @function_10005f3c()
  %v1_100025c4 = trunc i32 %v0_100025c4 to i16
  %v0_100025c8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100025c8, i32* @r4, align 4
  %v3_100025cc = load i32, i32* @r29, align 4
  %v4_100025cc = add i32 %v3_100025cc, 4
  %v5_100025cc = inttoptr i32 %v4_100025cc to i16*
  store i16 %v1_100025c4, i16* %v5_100025cc, align 2
  %v0_100025d0 = load i32, i32* @r29, align 4
  %v1_100025d0 = add i32 %v0_100025d0, 40
  store i32 %v1_100025d0, i32* @r3, align 4
  %v0_100025d4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100025d4, label %dec_label_pc_10002528, label %dec_label_pc_100025d8

dec_label_pc_100025d8:                            ; preds = %dec_label_pc_1000251c, %dec_label_pc_100025c4
  %v0_100025d8 = call i32 @function_10006110()
  store i32 %v0_100025d8, i32* %r3.global-to-local, align 4
  %v2_10002528.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002528

; uselistorder directives
  uselistorder i32 %v0_100025d0, { 1, 0 }
  uselistorder i1 %v1_100025bc, { 1, 0 }
  uselistorder i1 %v0_100025bc, { 1, 0 }
  uselistorder i32 %v1_100025ac, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10002574, { 1, 0 }
  uselistorder i32 %v0_10002540, { 1, 0, 2 }
  uselistorder i32 %v2_10002534, { 1, 0 }
  uselistorder i32 %v1_1000250c, { 1, 0 }
  uselistorder i32 %v1_100024cc, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10002450, { 1, 0, 2 }
  uselistorder i32 %v1_1000244c, { 1, 0 }
  uselistorder i32 %v1_100023e4, { 1, 0 }
  uselistorder i32 %v1_100023b0, { 1, 0 }
  uselistorder i32 %v0_10002330, { 1, 0 }
  uselistorder i32 %v2_10002324, { 1, 2, 0 }
  uselistorder i1 %v4_100022a8, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10002308, { 1, 3, 0, 2 }
  uselistorder i32 %v1_100022e4, { 1, 0 }
  uselistorder i32 %v1_1000208c, { 1, 0 }
  uselistorder i8 %v5_10002078, { 1, 0 }
  uselistorder i8 %v5_10002040, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 30, 12, 13, 14, 15, 16, 17, 18, 27, 28, 20, 19, 21, 22, 23, 24, 25, 26, 3, 2, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0, 1 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i32 268444136, { 1, 0 }
  uselistorder i32 1179648, { 2, 0, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_100025d8, { 1, 0 }
  uselistorder label %dec_label_pc_10002528, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100024ec, { 1, 0 }
  uselistorder label %dec_label_pc_100024e8, { 1, 0 }
  uselistorder label %dec_label_pc_100024c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002434, { 1, 0 }
  uselistorder label %dec_label_pc_10002344, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100022c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100021f4, { 1, 0 }
}

define i32 @function_100025e0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100025e0:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_100025e4 = load i32, i32* @lr, align 4
  store i32 %v0_100025e4, i32* %r0.global-to-local, align 4
  %v0_100025e8 = call i32 @__asm_mfcr()
  store i32 %v0_100025e8, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_100025f8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100025e8, i32* %r21.global-to-local, align 4
  %v0_10002638 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002640 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10002648 = load i32, i32* @r30, align 4
  store i32 268445268, i32* @lr, align 4
  %v2_10002650 = call i32 @function_1000a148(i32 4, i32 4)
  store i32 %v2_10002650, i32* %r22.global-to-local, align 4
  %v0_10002658 = load i32, i32* @r28, align 4
  %v0_10002664 = load i32, i32* @r29, align 4
  store i32 %v0_10002664, i32* %r3.global-to-local, align 4
  store i32 268445292, i32* @lr, align 4
  %v4_10002668 = inttoptr i32 %v0_10002658 to i32*
  %v5_10002668 = call i32 @function_100006a8(i32 %v0_10002664, i32* %v4_10002668, i32 2, i32 0)
  %v5_10002678 = trunc i32 %v5_10002668 to i8
  %v0_10002680 = load i32, i32* @r28, align 4
  %v0_10002684 = load i32, i32* @r29, align 4
  store i32 %v0_10002684, i32* %r3.global-to-local, align 4
  store i32 268445324, i32* @lr, align 4
  %v4_10002688 = inttoptr i32 %v0_10002680 to i32*
  %v5_10002688 = call i32 @function_100006a8(i32 %v0_10002684, i32* %v4_10002688, i32 3, i32 65535)
  %v0_1000268c = load i32, i32* @r28, align 4
  store i32 %v5_10002688, i32* %r18.global-to-local, align 4
  %v0_1000269c = load i32, i32* @r29, align 4
  store i32 %v0_1000269c, i32* %r3.global-to-local, align 4
  store i32 268445348, i32* @lr, align 4
  %v4_100026a0 = inttoptr i32 %v0_1000268c to i32*
  %v5_100026a0 = call i32 @function_100006a8(i32 %v0_1000269c, i32* %v4_100026a0, i32 4, i32 64)
  %v0_100026a4 = load i32, i32* @r28, align 4
  %v5_100026b0 = trunc i32 %v5_100026a0 to i8
  %v0_100026b8 = load i32, i32* @r29, align 4
  store i32 %v0_100026b8, i32* %r3.global-to-local, align 4
  store i32 268445376, i32* @lr, align 4
  %v4_100026bc = inttoptr i32 %v0_100026a4 to i32*
  %v5_100026bc = call i32 @function_100006a8(i32 %v0_100026b8, i32* %v4_100026bc, i32 5, i32 0)
  %v0_100026cc = load i32, i32* @r28, align 4
  %v1_100026d0 = urem i32 %v5_100026bc, 256
  store i32 %v1_100026d0, i32* @r31, align 4
  %v0_100026d4 = load i32, i32* @r29, align 4
  store i32 %v0_100026d4, i32* %r3.global-to-local, align 4
  store i32 268445404, i32* @lr, align 4
  %v4_100026d8 = inttoptr i32 %v0_100026cc to i32*
  %v5_100026d8 = call i32 @function_100006a8(i32 %v0_100026d4, i32* %v4_100026d8, i32 6, i32 65535)
  %v0_100026e0 = load i32, i32* @r28, align 4
  store i32 %v5_100026d8, i32* %r19.global-to-local, align 4
  %v0_100026f0 = load i32, i32* @r29, align 4
  store i32 %v0_100026f0, i32* %r3.global-to-local, align 4
  store i32 268445432, i32* @lr, align 4
  %v4_100026f4 = inttoptr i32 %v0_100026e0 to i32*
  %v5_100026f4 = call i32 @function_100006a8(i32 %v0_100026f0, i32* %v4_100026f4, i32 7, i32 65535)
  %v0_100026fc = load i32, i32* @r28, align 4
  store i32 %v5_100026f4, i32* %r20.global-to-local, align 4
  %v0_1000270c = load i32, i32* @r29, align 4
  store i32 %v0_1000270c, i32* %r3.global-to-local, align 4
  store i32 268445460, i32* @lr, align 4
  %v4_10002710 = inttoptr i32 %v0_100026fc to i32*
  %v5_10002710 = call i32 @function_100006a8(i32 %v0_1000270c, i32* %v4_10002710, i32 17, i32 65535)
  %v0_10002718 = load i32, i32* @r28, align 4
  store i32 %v5_10002710, i32* %r15.global-to-local, align 4
  %v0_10002728 = load i32, i32* @r29, align 4
  store i32 %v0_10002728, i32* %r3.global-to-local, align 4
  store i32 268445488, i32* @lr, align 4
  %v4_1000272c = inttoptr i32 %v0_10002718 to i32*
  %v5_1000272c = call i32 @function_100006a8(i32 %v0_10002728, i32* %v4_1000272c, i32 18, i32 65535)
  %v0_10002730 = load i32, i32* @r28, align 4
  store i32 %v5_1000272c, i32* %r17.global-to-local, align 4
  %v0_10002740 = load i32, i32* @r29, align 4
  store i32 %v0_10002740, i32* %r3.global-to-local, align 4
  store i32 268445512, i32* @lr, align 4
  %v4_10002744 = inttoptr i32 %v0_10002730 to i32*
  %v5_10002744 = call i32 @function_100006a8(i32 %v0_10002740, i32* %v4_10002744, i32 11, i32 0)
  %v0_10002748 = load i32, i32* @r28, align 4
  %v0_10002758 = load i32, i32* @r29, align 4
  store i32 %v0_10002758, i32* %r3.global-to-local, align 4
  store i32 268445536, i32* @lr, align 4
  %v4_1000275c = inttoptr i32 %v0_10002748 to i32*
  %v5_1000275c = call i32 @function_100006a8(i32 %v0_10002758, i32* %v4_1000275c, i32 12, i32 1)
  %v0_10002760 = load i32, i32* @r28, align 4
  store i32 %v5_1000275c, i32* %r14.global-to-local, align 4
  %v0_10002770 = load i32, i32* @r29, align 4
  store i32 %v0_10002770, i32* %r3.global-to-local, align 4
  store i32 268445560, i32* @lr, align 4
  %v4_10002774 = inttoptr i32 %v0_10002760 to i32*
  %v5_10002774 = call i32 @function_100006a8(i32 %v0_10002770, i32* %v4_10002774, i32 13, i32 0)
  %v0_10002778 = load i32, i32* @r28, align 4
  store i32 %v5_10002774, i32* %r24.global-to-local, align 4
  %v0_10002788 = load i32, i32* @r29, align 4
  store i32 %v0_10002788, i32* %r3.global-to-local, align 4
  store i32 268445584, i32* @lr, align 4
  %v4_1000278c = inttoptr i32 %v0_10002778 to i32*
  %v5_1000278c = call i32 @function_100006a8(i32 %v0_10002788, i32* %v4_1000278c, i32 14, i32 0)
  %v0_10002790 = load i32, i32* @r28, align 4
  store i32 %v5_1000278c, i32* %r27.global-to-local, align 4
  %v0_100027a0 = load i32, i32* @r29, align 4
  store i32 %v0_100027a0, i32* %r3.global-to-local, align 4
  store i32 268445608, i32* @lr, align 4
  %v4_100027a4 = inttoptr i32 %v0_10002790 to i32*
  %v5_100027a4 = call i32 @function_100006a8(i32 %v0_100027a0, i32* %v4_100027a4, i32 15, i32 0)
  %v0_100027a8 = load i32, i32* @r28, align 4
  store i32 %v5_100027a4, i32* %r26.global-to-local, align 4
  %v0_100027b8 = load i32, i32* @r29, align 4
  store i32 %v0_100027b8, i32* %r3.global-to-local, align 4
  store i32 268445632, i32* @lr, align 4
  %v4_100027bc = inttoptr i32 %v0_100027a8 to i32*
  %v5_100027bc = call i32 @function_100006a8(i32 %v0_100027b8, i32* %v4_100027bc, i32 16, i32 0)
  %v0_100027c0 = load i32, i32* @r28, align 4
  store i32 %v5_100027bc, i32* %r30.global-to-local, align 4
  %v0_100027d0 = load i32, i32* @r29, align 4
  store i32 %v0_100027d0, i32* %r3.global-to-local, align 4
  store i32 268445656, i32* @lr, align 4
  %v4_100027d4 = inttoptr i32 %v0_100027c0 to i32*
  %v5_100027d4 = call i32 @function_100006a8(i32 %v0_100027d0, i32* %v4_100027d4, i32 0, i32 512)
  %v0_100027d8 = load i32, i32* @r28, align 4
  store i32 %v5_100027d4, i32* %r16.global-to-local, align 4
  %v0_100027e8 = load i32, i32* @r29, align 4
  store i32 %v0_100027e8, i32* %r3.global-to-local, align 4
  store i32 268445680, i32* @lr, align 4
  %v4_100027ec = inttoptr i32 %v0_100027d8 to i32*
  %v5_100027ec = call i32 @function_100006a8(i32 %v0_100027e8, i32* %v4_100027ec, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100027f4 = load i32, i32* @global_var_1001c208.14, align 4
  %v1_100027f8 = urem i32 %v5_100027ec, 256
  %v0_100027fc = load i32, i32* @r28, align 4
  %v0_10002808 = load i32, i32* @r29, align 4
  store i32 %v0_10002808, i32* %r3.global-to-local, align 4
  store i32 268445712, i32* @lr, align 4
  %v5_1000280c = inttoptr i32 %v0_100027fc to i32*
  %v6_1000280c = call i32 @function_10000628(i32 %v0_10002808, i32* %v5_1000280c, i32 25, i32 %v3_100027f4, i32 268566528)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268445732, i32* @lr, align 4
  %v3_10002820 = call i32 @function_10009dec(i32 2, i32 3, i32 6)
  store i32 %v3_10002820, i32* %r3.global-to-local, align 4
  %v3_10002824 = icmp eq i32 %v3_10002820, -1
  store i32 %v3_10002820, i32* %r23.global-to-local, align 4
  br i1 %v3_10002824, label %dec_label_pc_10002b64, label %dec_label_pc_10002830

dec_label_pc_10002830:                            ; preds = %dec_label_pc_100025e0
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000283c = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268445772, i32* @lr, align 4
  %v4_10002848 = call i32 @function_10009db0(i32 0, i32 3, i32 %v2_1000283c, i32 4)
  store i32 %v4_10002848, i32* %r3.global-to-local, align 4
  %v3_1000284c = icmp eq i32 %v4_10002848, -1
  br i1 %v3_1000284c, label %dec_label_pc_10002b5c, label %dec_label_pc_10002854

dec_label_pc_10002854:                            ; preds = %dec_label_pc_10002830
  %v0_10002854 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002854 = icmp slt i32 %v0_10002854, 0
  %v3_10002854 = icmp eq i32 %v0_10002854, 0
  store i1 %v1_10002854, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10002854, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10002860 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002860 = urem i32 %v0_10002860, 65536
  store i32 %v1_10002860, i32* %r18.global-to-local, align 4
  %v0_10002864 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002864 = urem i32 %v0_10002864, 65536
  store i32 %v1_10002864, i32* %r19.global-to-local, align 4
  %v0_10002868 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002868 = urem i32 %v0_10002868, 65536
  store i32 %v1_10002868, i32* %r20.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10002854, 1
  br i1 %tmp40, label %dec_label_pc_10002b3c, label %dec_label_pc_10002870

dec_label_pc_10002870:                            ; preds = %dec_label_pc_10002854
  %v0_10002874 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002874 = urem i32 %v0_10002874, 256
  %v0_10002878 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002878 = add i32 %v0_10002878, 40
  store i32 %v1_10002878, i32* %r24.global-to-local, align 4
  %v3_1000287c = icmp eq i32 %v1_10002874, 0
  store i1 %v3_1000287c, i1* %cr3_eq.global-to-local, align 1
  %v1_10002880 = urem i32 %v5_10002744, 2
  store i32 %v1_10002880, i32* %r9.global-to-local, align 4
  %v0_10002884 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002884 = urem i32 %v0_10002884, 2
  store i32 %v1_10002884, i32* %r28.global-to-local, align 4
  %v1_10002888 = urem i32 %v0_10002874, 2
  store i32 %v1_10002888, i32* %r26.global-to-local, align 4
  %v1_1000288c = urem i32 %v1_10002878, 65536
  store i32 %v1_1000288c, i32* %r0.global-to-local, align 4
  %v0_10002894 = load i32, i32* @r31, align 4
  %v3_10002894 = icmp eq i32 %v0_10002894, 0
  store i1 %v3_10002894, i1* %cr2_eq.global-to-local, align 1
  %v5_10002898 = trunc i32 %v1_10002878 to i16
  %v0_1000289c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000289c = urem i32 %v0_1000289c, 2
  store i32 %v1_1000289c, i32* %r14.global-to-local, align 4
  %v0_100028a0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100028a0 = urem i32 %v0_100028a0, 2
  store i32 %v1_100028a0, i32* %r27.global-to-local, align 4
  %v0_100028a4 = load i32, i32* %r30.global-to-local, align 4
  %v1_100028a4 = urem i32 %v0_100028a4, 2
  %v4_100028f4 = sext i8 %v5_10002678 to i32
  br label %dec_label_pc_100028ac

dec_label_pc_100028ac:                            ; preds = %dec_label_pc_1000298c, %dec_label_pc_10002870
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268445880, i32* @lr, align 4
  %v2_100028b4 = call i32 @function_1000a148(i32 1510, i32 1)
  store i32 %v2_100028b4, i32* %r3.global-to-local, align 4
  %v3_100028b8 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_100028b8, i32* %r9.global-to-local, align 4
  %v0_100028bc = load i32, i32* @r31, align 4
  %v1_100028bc = mul i32 %v0_100028bc, 4
  store i32 %v1_100028bc, i32* %r0.global-to-local, align 4
  %v1_100028c0 = load i32, i32* %r22.global-to-local, align 4
  %v3_100028c0 = add i32 %v1_100028c0, %v1_100028bc
  %v4_100028c0 = inttoptr i32 %v3_100028c0 to i32*
  store i32 %v2_100028b4, i32* %v4_100028c0, align 4
  %v0_100028c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100028c4 = mul i32 %v0_100028c4, 4
  store i32 %v1_100028c4, i32* %r9.global-to-local, align 4
  %v1_100028c8 = load i32, i32* %r22.global-to-local, align 4
  %v2_100028c8 = add i32 %v1_100028c8, %v1_100028c4
  %v3_100028c8 = inttoptr i32 %v2_100028c8 to i32*
  %v4_100028c8 = load i32, i32* %v3_100028c8, align 4
  store i32 %v4_100028c8, i32* @r31, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100028d0 = inttoptr i32 %v4_100028c8 to i32*
  %v2_100028d0 = load i32, i32* %v1_100028d0, align 4
  store i32 %v2_100028d0, i32* %r0.global-to-local, align 4
  %v1_100028d4 = add i32 %v4_100028c8, 20
  store i32 %v1_100028d4, i32* @r30, align 4
  %v0_100028d8 = load i32, i32* %r18.global-to-local, align 4
  %v1_100028d8 = trunc i32 %v0_100028d8 to i16
  %v3_100028d8 = add i32 %v4_100028c8, 4
  %v4_100028d8 = inttoptr i32 %v3_100028d8 to i16*
  store i16 %v1_100028d8, i16* %v4_100028d8, align 2
  %v1_100028dc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100028dc, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100028e4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_100028e8 = load i32, i32* @r31, align 4
  %v2_100028e8 = inttoptr i32 %v1_100028e8 to i32*
  store i32 %v1_100028e4, i32* %v2_100028e8, align 4
  %v2_100028f0 = load i32, i32* @r31, align 4
  %v3_100028f0 = add i32 %v2_100028f0, 8
  %v4_100028f0 = inttoptr i32 %v3_100028f0 to i8*
  store i8 %v5_100026b0, i8* %v4_100028f0, align 1
  store i32 %v4_100028f4, i32* %r9.global-to-local, align 4
  %v2_100028f8 = load i32, i32* @r31, align 4
  %v3_100028f8 = add i32 %v2_100028f8, 1
  %v4_100028f8 = inttoptr i32 %v3_100028f8 to i8*
  store i8 %v5_10002678, i8* %v4_100028f8, align 1
  store i32 %v1_10002878, i32* %r0.global-to-local, align 4
  %v2_10002900 = load i32, i32* @r31, align 4
  %v3_10002900 = add i32 %v2_10002900, 2
  %v4_10002900 = inttoptr i32 %v3_10002900 to i16*
  store i16 %v5_10002898, i16* %v4_10002900, align 2
  %v0_10002904 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002904, label %dec_label_pc_10002910, label %dec_label_pc_10002908

dec_label_pc_10002908:                            ; preds = %dec_label_pc_100028ac
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_1000290c = load i32, i32* @r31, align 4
  %v3_1000290c = add i32 %v2_1000290c, 6
  %v4_1000290c = inttoptr i32 %v3_1000290c to i16*
  store i16 16384, i16* %v4_1000290c, align 2
  br label %dec_label_pc_10002910

dec_label_pc_10002910:                            ; preds = %dec_label_pc_100028ac, %dec_label_pc_10002908
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10002914 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002914 = trunc i32 %v0_10002914 to i16
  %v2_10002914 = load i32, i32* @r31, align 4
  %v3_10002914 = add i32 %v2_10002914, 20
  %v4_10002914 = inttoptr i32 %v3_10002914 to i16*
  store i16 %v1_10002914, i16* %v4_10002914, align 2
  %v0_10002918 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002918 = trunc i32 %v0_10002918 to i8
  %v2_10002918 = load i32, i32* @r31, align 4
  %v3_10002918 = add i32 %v2_10002918, 9
  %v4_10002918 = inttoptr i32 %v3_10002918 to i8*
  store i8 %v1_10002918, i8* %v4_10002918, align 1
  %v0_1000291c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000291c = trunc i32 %v0_1000291c to i16
  %v2_1000291c = load i32, i32* @r30, align 4
  %v3_1000291c = add i32 %v2_1000291c, 2
  %v4_1000291c = inttoptr i32 %v3_1000291c to i16*
  store i16 %v1_1000291c, i16* %v4_1000291c, align 2
  %v1_10002924 = load i32, i32* @r31, align 4
  %v2_10002924 = add i32 %v1_10002924, 12
  %v3_10002924 = inttoptr i32 %v2_10002924 to i32*
  store i32 %v6_1000280c, i32* %v3_10002924, align 4
  %v3_10002928 = load i32, i32* %stack_var_-136, align 4
  %v1_1000292c = mul i32 %v3_10002928, 24
  %v1_10002930 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002930 = add i32 %v1_10002930, %v1_1000292c
  store i32 %v2_10002930, i32* %r9.global-to-local, align 4
  %v1_10002934 = add i32 %v2_10002930, 16
  %v2_10002934 = inttoptr i32 %v1_10002934 to i32*
  %v3_10002934 = load i32, i32* %v2_10002934, align 4
  store i32 %v3_10002934, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_1000293c = load i32, i32* @r31, align 4
  %v2_1000293c = add i32 %v1_1000293c, 16
  %v3_1000293c = inttoptr i32 %v2_1000293c to i32*
  store i32 %v3_10002934, i32* %v3_1000293c, align 4
  %v0_10002940 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002940 = load i32, i32* @r30, align 4
  %v2_10002940 = add i32 %v1_10002940, 4
  %v3_10002940 = inttoptr i32 %v2_10002940 to i32*
  store i32 %v0_10002940, i32* %v3_10002940, align 4
  %v0_10002944 = load i32, i32* @r30, align 4
  %v1_10002944 = add i32 %v0_10002944, 12
  %v2_10002944 = inttoptr i32 %v1_10002944 to i32*
  %v3_10002944 = load i32, i32* %v2_10002944, align 4
  store i32 %v3_10002944, i32* %r0.global-to-local, align 4
  %v1_10002948 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10002948, i32* %r0.global-to-local, align 4
  store i32 %v1_10002880, i32* %r9.global-to-local, align 4
  %v1_10002950 = call i32 @__asm_rlwimi(i32 %v1_10002880, i32 21, i32 10, i32 10)
  store i32 %v1_10002950, i32* %r0.global-to-local, align 4
  %v1_10002954 = call i32 @__asm_rlwimi(i32 %v1_1000289c, i32 20, i32 11, i32 11)
  store i32 %v1_10002954, i32* %r0.global-to-local, align 4
  %v1_10002958 = call i32 @__asm_rlwimi(i32 %v1_10002888, i32 19, i32 12, i32 12)
  store i32 %v1_10002958, i32* %r0.global-to-local, align 4
  %v1_1000295c = call i32 @__asm_rlwimi(i32 %v1_100028a0, i32 18, i32 13, i32 13)
  store i32 %v1_1000295c, i32* %r0.global-to-local, align 4
  %v1_10002960 = call i32 @__asm_rlwimi(i32 %v1_10002884, i32 17, i32 14, i32 14)
  store i32 %v1_10002960, i32* %r0.global-to-local, align 4
  %v1_10002964 = call i32 @__asm_rlwimi(i32 %v1_100028a4, i32 16, i32 15, i32 15)
  store i32 %v1_10002964, i32* %r0.global-to-local, align 4
  %v1_10002968 = load i32, i32* @r30, align 4
  %v2_10002968 = add i32 %v1_10002968, 12
  %v3_10002968 = inttoptr i32 %v2_10002968 to i32*
  store i32 %v1_10002964, i32* %v3_10002968, align 4
  %v0_1000296c = call i32 @function_10005f3c()
  %v1_1000296c = trunc i32 %v0_1000296c to i16
  %v0_10002970 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10002970, i32* @r4, align 4
  %v3_10002974 = load i32, i32* @r30, align 4
  %v4_10002974 = add i32 %v3_10002974, 14
  %v5_10002974 = inttoptr i32 %v4_10002974 to i16*
  store i16 %v1_1000296c, i16* %v5_10002974, align 2
  %v0_10002978 = load i32, i32* @r31, align 4
  %v1_10002978 = add i32 %v0_10002978, 40
  store i32 %v1_10002978, i32* @r3, align 4
  %v0_1000297c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000297c, label %dec_label_pc_1000298c, label %dec_label_pc_10002980

dec_label_pc_10002980:                            ; preds = %dec_label_pc_10002910
  %v0_10002980 = load i32, i32* @r30, align 4
  %v1_10002980 = add i32 %v0_10002980, 12
  %v2_10002980 = inttoptr i32 %v1_10002980 to i32*
  %v3_10002980 = load i32, i32* %v2_10002980, align 4
  %v1_10002984 = or i32 %v3_10002980, 524288
  store i32 %v1_10002984, i32* %r0.global-to-local, align 4
  store i32 %v1_10002984, i32* %v2_10002980, align 4
  br label %dec_label_pc_1000298c

dec_label_pc_1000298c:                            ; preds = %dec_label_pc_10002910, %dec_label_pc_10002980
  %v0_1000298c = call i32 @function_10006110()
  store i32 %v0_1000298c, i32* %r3.global-to-local, align 4
  %v3_10002990 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10002990, i32* %r9.global-to-local, align 4
  %v1_10002994 = add i32 %v3_10002990, 1
  %v1_10002998 = load i32, i32* %r21.global-to-local, align 4
  %v2_10002998 = icmp slt i32 %v1_10002994, %v1_10002998
  store i32 %v1_10002994, i32* %stack_var_-136, align 4
  br i1 %v2_10002998, label %dec_label_pc_100028ac, label %dec_label_pc_100029a4

dec_label_pc_100029a4:                            ; preds = %dec_label_pc_1000298c
  store i32 %v6_1000280c, i32* %r0.global-to-local, align 4
  %v0_100029a8 = load i32, i32* %r16.global-to-local, align 4
  %v1_100029a8 = add i32 %v0_100029a8, 20
  store i32 %v1_100029a8, i32* @r30, align 4
  store i32 %v1_100027f8, i32* %r9.global-to-local, align 4
  %v3_100029b0 = icmp eq i32 %v6_1000280c, -1
  store i1 %v3_100029b0, i1* %cr2_eq.global-to-local, align 1
  %v3_100029b4 = icmp eq i32 %v1_100027f8, 0
  store i1 %v3_100029b4, i1* %cr3_eq.global-to-local, align 1
  %v0_100029b8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100029b8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100029b8.preheader

dec_label_pc_100029b8.preheader:                  ; preds = %dec_label_pc_10002a98, %dec_label_pc_10002b3c, %dec_label_pc_100029a4
  %v1_100029b8 = phi i1 [ %v1_10002854, %dec_label_pc_10002b3c ], [ %v1_100029b8.pre, %dec_label_pc_100029a4 ], [ %v1_10002a98, %dec_label_pc_10002a98 ]
  %v0_100029b8 = phi i1 [ %v3_10002854, %dec_label_pc_10002b3c ], [ %v0_100029b8.pre, %dec_label_pc_100029a4 ], [ %v0_10002a98, %dec_label_pc_10002a98 ]
  %v2_100029b8 = or i1 %v1_100029b8, %v0_100029b8
  br label %dec_label_pc_100029b8

dec_label_pc_100029b8:                            ; preds = %dec_label_pc_100029b8.preheader, %dec_label_pc_100029b8
  br i1 %v2_100029b8, label %dec_label_pc_100029b8, label %dec_label_pc_100029bc

dec_label_pc_100029bc:                            ; preds = %dec_label_pc_100029b8, %dec_label_pc_10002a98
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100029c0 = load i32, i32* @r30, align 4
  %v1_100029c0 = urem i32 %v0_100029c0, 65536
  store i32 %v1_100029c0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100029d0

dec_label_pc_100029d0:                            ; preds = %dec_label_pc_10002a28, %dec_label_pc_100029bc
  %v0_100029d0 = phi i32 [ %v1_10002a88, %dec_label_pc_10002a28 ], [ 0, %dec_label_pc_100029bc ]
  %v1_100029d0 = mul i32 %v0_100029d0, 24
  store i32 %v1_100029d0, i32* %r0.global-to-local, align 4
  %v1_100029d4 = mul i32 %v0_100029d0, 4
  %v1_100029d8 = load i32, i32* %r22.global-to-local, align 4
  %v2_100029d8 = add i32 %v1_100029d8, %v1_100029d4
  %v3_100029d8 = inttoptr i32 %v2_100029d8 to i32*
  %v4_100029d8 = load i32, i32* %v3_100029d8, align 4
  store i32 %v4_100029d8, i32* %r28.global-to-local, align 4
  %v1_100029dc = load i32, i32* %r25.global-to-local, align 4
  %v2_100029dc = add i32 %v1_100029dc, %v1_100029d0
  %v1_100029e0 = add i32 %v2_100029dc, 20
  %v2_100029e0 = inttoptr i32 %v1_100029e0 to i8*
  %v3_100029e0 = load i8, i8* %v2_100029e0, align 1
  %v4_100029e0 = zext i8 %v3_100029e0 to i32
  store i32 %v4_100029e0, i32* %r9.global-to-local, align 4
  %v1_100029e4 = add i32 %v4_100029d8, 20
  store i32 %v1_100029e4, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_100029e0, 32
  br i1 %tmp41, label %dec_label_pc_10002aa0, label %dec_label_pc_100029f0

dec_label_pc_100029f0:                            ; preds = %dec_label_pc_100029d0
  %v0_100029f0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100029f0, label %dec_label_pc_10002ac8, label %dec_label_pc_100029f4

dec_label_pc_100029f4:                            ; preds = %dec_label_pc_10002aa0, %dec_label_pc_100029f0
  store i32 65535, i32* @r29, align 4
  %v0_100029fc = load i32, i32* %r18.global-to-local, align 4
  %v4_100029fc = icmp eq i32 %v0_100029fc, 65535
  br i1 %v4_100029fc, label %dec_label_pc_10002ae0, label %dec_label_pc_10002a04

dec_label_pc_10002a04:                            ; preds = %dec_label_pc_10002ac8, %dec_label_pc_100029f4
  %v1_10002a04 = phi i32 [ %v1_10002ad8, %dec_label_pc_10002ac8 ], [ 65535, %dec_label_pc_100029f4 ]
  %v0_10002a04 = load i32, i32* %r19.global-to-local, align 4
  %v4_10002a04 = icmp eq i32 %v0_10002a04, %v1_10002a04
  br i1 %v4_10002a04, label %dec_label_pc_10002af0, label %dec_label_pc_10002a0c

dec_label_pc_10002a0c:                            ; preds = %dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge, %dec_label_pc_10002a04
  %v1_10002a0c = phi i32 [ %v1_10002a0c.pre, %dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge ], [ %v1_10002a04, %dec_label_pc_10002a04 ]
  %v0_10002a0c = load i32, i32* %r20.global-to-local, align 4
  %v4_10002a0c = icmp eq i32 %v0_10002a0c, %v1_10002a0c
  br i1 %v4_10002a0c, label %dec_label_pc_10002b00, label %dec_label_pc_10002a14

dec_label_pc_10002a14:                            ; preds = %dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge, %dec_label_pc_10002a0c
  %v1_10002a14 = phi i32 [ %v1_10002a14.pre, %dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge ], [ %v1_10002a0c, %dec_label_pc_10002a0c ]
  %v0_10002a14 = load i32, i32* %r15.global-to-local, align 4
  %v4_10002a14 = icmp eq i32 %v0_10002a14, %v1_10002a14
  br i1 %v4_10002a14, label %dec_label_pc_10002b10, label %dec_label_pc_10002a1c

dec_label_pc_10002a1c:                            ; preds = %dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge, %dec_label_pc_10002a14
  %v1_10002a1c = phi i32 [ %v1_10002a1c.pre, %dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge ], [ %v1_10002a14, %dec_label_pc_10002a14 ]
  %v0_10002a1c = load i32, i32* %r17.global-to-local, align 4
  %v4_10002a1c = icmp eq i32 %v0_10002a1c, %v1_10002a1c
  br i1 %v4_10002a1c, label %dec_label_pc_10002b20, label %dec_label_pc_10002a24

dec_label_pc_10002a24:                            ; preds = %dec_label_pc_10002b10, %dec_label_pc_10002a1c
  %v0_10002a24 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002a24, label %dec_label_pc_10002a28, label %dec_label_pc_10002b2c

dec_label_pc_10002a28:                            ; preds = %dec_label_pc_10002a24, %dec_label_pc_10002b20, %dec_label_pc_10002b2c
  %v0_10002a28 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002a28 = trunc i32 %v0_10002a28 to i16
  %v2_10002a28 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002a28 = add i32 %v2_10002a28, 10
  %v4_10002a28 = inttoptr i32 %v3_10002a28 to i16*
  store i16 %v1_10002a28, i16* %v4_10002a28, align 2
  %v0_10002a30 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002a30, i32* @r3, align 4
  %v2_10002a34 = call i32 @function_100043cc(i32 %v0_10002a30, i32 20)
  %v3_10002a34 = trunc i32 %v2_10002a34 to i16
  %v0_10002a38 = load i32, i32* @r31, align 4
  store i32 %v0_10002a38, i32* @r4, align 4
  %v4_10002a3c = add i32 %v0_10002a30, 10
  %v5_10002a3c = inttoptr i32 %v4_10002a3c to i16*
  store i16 %v3_10002a34, i16* %v5_10002a3c, align 2
  %v0_10002a40 = load i32, i32* %r27.global-to-local, align 4
  %v0_10002a44 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002a44 = trunc i32 %v0_10002a44 to i16
  %v2_10002a44 = load i32, i32* @r31, align 4
  %v3_10002a44 = add i32 %v2_10002a44, 16
  %v4_10002a44 = inttoptr i32 %v3_10002a44 to i16*
  store i16 %v1_10002a44, i16* %v4_10002a44, align 2
  %v0_10002a48 = load i32, i32* @r30, align 4
  %v0_10002a4c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002a4c, i32* %r3.global-to-local, align 4
  %v4_10002a50 = call i32 @function_10004430(i32 %v0_10002a4c, i32 %v0_10002a38, i32 %v0_10002a40, i32 %v0_10002a48)
  %v5_10002a50 = trunc i32 %v4_10002a50 to i16
  store i32 %v4_10002a50, i32* %r3.global-to-local, align 4
  %v3_10002a54 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10002a54, i32* %r7.global-to-local, align 4
  %v0_10002a58 = load i32, i32* @r31, align 4
  %v1_10002a58 = add i32 %v0_10002a58, 2
  %v2_10002a58 = inttoptr i32 %v1_10002a58 to i16*
  %v3_10002a58 = load i16, i16* %v2_10002a58, align 2
  %v4_10002a58 = zext i16 %v3_10002a58 to i32
  store i32 %v4_10002a58, i32* %r0.global-to-local, align 4
  %v0_10002a5c = load i32, i32* %r28.global-to-local, align 4
  %v1_10002a60 = mul i32 %v3_10002a54, 24
  store i32 %v1_10002a60, i32* %r7.global-to-local, align 4
  %v4_10002a64 = add i32 %v0_10002a58, 16
  %v5_10002a64 = inttoptr i32 %v4_10002a64 to i16*
  store i16 %v5_10002a50, i16* %v5_10002a64, align 2
  %v0_10002a68 = load i32, i32* %r24.global-to-local, align 4
  %v0_10002a6c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002a6c, i32* %r3.global-to-local, align 4
  %v0_10002a70 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002a70 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002a70 = add i32 %v1_10002a70, %v0_10002a70
  store i32 %v2_10002a70, i32* %r7.global-to-local, align 4
  %v0_10002a78 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002a78 = trunc i32 %v0_10002a78 to i16
  %v3_10002a78 = add i32 %v2_10002a70, 2
  %v4_10002a78 = inttoptr i32 %v3_10002a78 to i16*
  store i16 %v1_10002a78, i16* %v4_10002a78, align 2
  store i32 268446340, i32* @lr, align 4
  %v6_10002a80 = call i32 @function_10009d70(i32 %v0_10002a6c, i32 %v0_10002a5c, i32 %v0_10002a68, i32 16384, i32 %v2_10002a70, i32 16)
  store i32 %v6_10002a80, i32* %r3.global-to-local, align 4
  %v3_10002a84 = load i32, i32* %stack_var_-136, align 4
  %v1_10002a88 = add i32 %v3_10002a84, 1
  store i32 %v1_10002a88, i32* %r9.global-to-local, align 4
  %v1_10002a8c = load i32, i32* %r21.global-to-local, align 4
  %v2_10002a8c = icmp slt i32 %v1_10002a88, %v1_10002a8c
  store i32 %v1_10002a88, i32* %stack_var_-136, align 4
  br i1 %v2_10002a8c, label %dec_label_pc_100029d0, label %dec_label_pc_10002a98

dec_label_pc_10002a98:                            ; preds = %dec_label_pc_10002a28
  %v0_10002a98 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002a98 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002a98 = or i1 %v0_10002a98, %v1_10002a98
  br i1 %v2_10002a98, label %dec_label_pc_100029b8.preheader, label %dec_label_pc_100029bc

dec_label_pc_10002aa0:                            ; preds = %dec_label_pc_100029d0
  %v1_10002aa0 = add i32 %v2_100029dc, 16
  %v2_10002aa0 = inttoptr i32 %v1_10002aa0 to i32*
  %v3_10002aa0 = load i32, i32* %v2_10002aa0, align 4
  store i32 %v3_10002aa0, i32* %r29.global-to-local, align 4
  %v0_10002aa4 = call i32 @function_10005f3c()
  store i32 %v0_10002aa4, i32* %r3.global-to-local, align 4
  %v3_10002aa8 = load i32, i32* %stack_var_-136, align 4
  %v1_10002aac = mul i32 %v3_10002aa8, 24
  %v1_10002ab0 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002ab0 = add i32 %v1_10002ab0, %v1_10002aac
  store i32 %v2_10002ab0, i32* %r9.global-to-local, align 4
  %v1_10002ab4 = add i32 %v2_10002ab0, 20
  %v2_10002ab4 = inttoptr i32 %v1_10002ab4 to i8*
  %v3_10002ab4 = load i8, i8* %v2_10002ab4, align 1
  %v4_10002ab4 = zext i8 %v3_10002ab4 to i32
  store i32 %v4_10002ab4, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10002ab4, 64
  %v2_10002ab8 = zext i8 %tmp to i32
  %v3_10002ab8 = lshr i32 %v0_10002aa4, %v2_10002ab8
  store i32 %v3_10002ab8, i32* %r3.global-to-local, align 4
  %v0_10002abc = load i32, i32* %r29.global-to-local, align 4
  %v2_10002abc = add i32 %v3_10002ab8, %v0_10002abc
  store i32 %v2_10002abc, i32* %r29.global-to-local, align 4
  %v1_10002ac0 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002ac0 = add i32 %v1_10002ac0, 16
  %v3_10002ac0 = inttoptr i32 %v2_10002ac0 to i32*
  store i32 %v2_10002abc, i32* %v3_10002ac0, align 4
  %v0_10002ac4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002ac4, label %dec_label_pc_10002ac8, label %dec_label_pc_100029f4

dec_label_pc_10002ac8:                            ; preds = %dec_label_pc_10002aa0, %dec_label_pc_100029f0
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10002acc = call i32 @function_10005f3c()
  store i32 %v0_10002acc, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10002ad4 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002ad4 = add i32 %v1_10002ad4, 12
  %v3_10002ad4 = inttoptr i32 %v2_10002ad4 to i32*
  store i32 %v0_10002acc, i32* %v3_10002ad4, align 4
  %v0_10002ad8 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002ad8 = load i32, i32* @r29, align 4
  %v4_10002ad8 = icmp eq i32 %v0_10002ad8, %v1_10002ad8
  br i1 %v4_10002ad8, label %dec_label_pc_10002ae0, label %dec_label_pc_10002a04

dec_label_pc_10002ae0:                            ; preds = %dec_label_pc_10002ac8, %dec_label_pc_100029f4
  %v0_10002ae0 = call i32 @function_10005f3c()
  %v1_10002ae0 = trunc i32 %v0_10002ae0 to i16
  store i32 %v0_10002ae0, i32* %r3.global-to-local, align 4
  %v0_10002ae4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002ae4 = load i32, i32* @r29, align 4
  %v4_10002ae4 = icmp eq i32 %v0_10002ae4, %v1_10002ae4
  %v3_10002ae8 = load i32, i32* %r28.global-to-local, align 4
  %v4_10002ae8 = add i32 %v3_10002ae8, 4
  %v5_10002ae8 = inttoptr i32 %v4_10002ae8 to i16*
  store i16 %v1_10002ae0, i16* %v5_10002ae8, align 2
  br i1 %v4_10002ae4, label %dec_label_pc_10002af0, label %dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge

dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge: ; preds = %dec_label_pc_10002ae0
  %v1_10002a0c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002a0c

dec_label_pc_10002af0:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002a04
  %v0_10002af0 = call i32 @function_10005f3c()
  %v1_10002af0 = trunc i32 %v0_10002af0 to i16
  store i32 %v0_10002af0, i32* %r3.global-to-local, align 4
  %v0_10002af4 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002af4 = load i32, i32* @r29, align 4
  %v4_10002af4 = icmp eq i32 %v0_10002af4, %v1_10002af4
  %v3_10002af8 = load i32, i32* %r28.global-to-local, align 4
  %v4_10002af8 = add i32 %v3_10002af8, 20
  %v5_10002af8 = inttoptr i32 %v4_10002af8 to i16*
  store i16 %v1_10002af0, i16* %v5_10002af8, align 2
  br i1 %v4_10002af4, label %dec_label_pc_10002b00, label %dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge

dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge: ; preds = %dec_label_pc_10002af0
  %v1_10002a14.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002a14

dec_label_pc_10002b00:                            ; preds = %dec_label_pc_10002af0, %dec_label_pc_10002a0c
  %v0_10002b00 = call i32 @function_10005f3c()
  %v1_10002b00 = trunc i32 %v0_10002b00 to i16
  store i32 %v0_10002b00, i32* %r3.global-to-local, align 4
  %v0_10002b04 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002b04 = load i32, i32* @r29, align 4
  %v4_10002b04 = icmp eq i32 %v0_10002b04, %v1_10002b04
  %v3_10002b08 = load i32, i32* @r31, align 4
  %v4_10002b08 = add i32 %v3_10002b08, 2
  %v5_10002b08 = inttoptr i32 %v4_10002b08 to i16*
  store i16 %v1_10002b00, i16* %v5_10002b08, align 2
  br i1 %v4_10002b04, label %dec_label_pc_10002b10, label %dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge

dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge: ; preds = %dec_label_pc_10002b00
  %v1_10002a1c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002a1c

dec_label_pc_10002b10:                            ; preds = %dec_label_pc_10002b00, %dec_label_pc_10002a14
  %v0_10002b10 = call i32 @function_10005f3c()
  store i32 %v0_10002b10, i32* %r3.global-to-local, align 4
  %v0_10002b14 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002b14 = load i32, i32* @r29, align 4
  %v4_10002b14 = icmp eq i32 %v0_10002b14, %v1_10002b14
  %v1_10002b18 = load i32, i32* @r31, align 4
  %v2_10002b18 = add i32 %v1_10002b18, 4
  %v3_10002b18 = inttoptr i32 %v2_10002b18 to i32*
  store i32 %v0_10002b10, i32* %v3_10002b18, align 4
  br i1 %v4_10002b14, label %dec_label_pc_10002b20, label %dec_label_pc_10002a24

dec_label_pc_10002b20:                            ; preds = %dec_label_pc_10002b10, %dec_label_pc_10002a1c
  %v0_10002b20 = call i32 @function_10005f3c()
  store i32 %v0_10002b20, i32* %r3.global-to-local, align 4
  %v1_10002b24 = load i32, i32* @r31, align 4
  %v2_10002b24 = add i32 %v1_10002b24, 8
  %v3_10002b24 = inttoptr i32 %v2_10002b24 to i32*
  store i32 %v0_10002b20, i32* %v3_10002b24, align 4
  %v0_10002b28 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002b28, label %dec_label_pc_10002a28, label %dec_label_pc_10002b2c

dec_label_pc_10002b2c:                            ; preds = %dec_label_pc_10002a24, %dec_label_pc_10002b20
  %v0_10002b2c = load i32, i32* %r28.global-to-local, align 4
  %v1_10002b2c = add i32 %v0_10002b2c, 40
  store i32 %v1_10002b2c, i32* @r3, align 4
  %v0_10002b30 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10002b30, i32* @r4, align 4
  %v0_10002b34 = call i32 @function_10006110()
  store i32 %v0_10002b34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002a28

dec_label_pc_10002b3c:                            ; preds = %dec_label_pc_10002854
  store i32 %v6_1000280c, i32* %r0.global-to-local, align 4
  %v0_10002b40 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002b40 = add i32 %v0_10002b40, 40
  store i32 %v1_10002b40, i32* %r24.global-to-local, align 4
  store i32 %v1_100027f8, i32* %r9.global-to-local, align 4
  %v1_10002b48 = add i32 %v0_10002b40, 20
  store i32 %v1_10002b48, i32* @r30, align 4
  %v3_10002b4c = icmp eq i32 %v6_1000280c, -1
  store i1 %v3_10002b4c, i1* %cr2_eq.global-to-local, align 1
  %v3_10002b50 = icmp eq i32 %v1_100027f8, 0
  store i1 %v3_10002b50, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100029b8.preheader

dec_label_pc_10002b5c:                            ; preds = %dec_label_pc_10002830
  %v0_10002b5c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002b5c, i32* %r3.global-to-local, align 4
  store i32 268446564, i32* @lr, align 4
  %v0_10002b60 = call i32 @function_1000909c()
  store i32 %v0_10002b60, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002b64

dec_label_pc_10002b64:                            ; preds = %dec_label_pc_100025e0, %dec_label_pc_10002b5c
  store i32 %v0_100025f8, i32* %r0.global-to-local, align 4
  %v1_10002b78 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100025e8)
  store i32 %v0_10002638, i32* %r28.global-to-local, align 4
  store i32 %v0_10002640, i32* %r29.global-to-local, align 4
  store i32 %v0_10002648, i32* %r30.global-to-local, align 4
  %v0_10002bc0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002bc0

; uselistorder directives
  uselistorder i32 %v0_10002b00, { 1, 0 }
  uselistorder i32 %v0_10002af0, { 1, 0 }
  uselistorder i32 %v0_10002ae0, { 1, 0 }
  uselistorder i32 %v1_10002ad8, { 1, 0 }
  uselistorder i1 %v1_10002a98, { 1, 0 }
  uselistorder i1 %v0_10002a98, { 1, 0 }
  uselistorder i32 %v1_10002a88, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10002a50, { 1, 0 }
  uselistorder i32 %v1_100028c4, { 1, 0 }
  uselistorder i32 %v1_100028bc, { 1, 0 }
  uselistorder i32 %v1_100028a0, { 1, 0 }
  uselistorder i32 %v1_1000289c, { 1, 0 }
  uselistorder i32 %v1_10002888, { 1, 0 }
  uselistorder i32 %v1_10002884, { 1, 0 }
  uselistorder i32 %v1_10002880, { 2, 1, 0 }
  uselistorder i32 %v1_10002878, { 1, 2, 0, 3 }
  uselistorder i32 %v6_1000280c, { 0, 4, 2, 1, 3 }
  uselistorder i32 %v1_100027f8, { 3, 0, 2, 1 }
  uselistorder i8 %v5_10002678, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 20, 21, 22, 23, 25, 26, 27, 28, 29 }
  uselistorder label %dec_label_pc_10002b64, { 1, 0 }
  uselistorder label %dec_label_pc_10002b2c, { 1, 0 }
  uselistorder label %dec_label_pc_10002a28, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100029bc, { 1, 0 }
  uselistorder label %dec_label_pc_100029b8, { 1, 0 }
  uselistorder label %dec_label_pc_100029b8.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000298c, { 1, 0 }
  uselistorder label %dec_label_pc_10002910, { 1, 0 }
}

define i32 @function_10002bc4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002bc4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_10002bc8 = load i32, i32* @lr, align 4
  store i32 %v0_10002bc8, i32* %r0.global-to-local, align 4
  %v0_10002bcc = call i32 @__asm_mfcr()
  store i32 %v0_10002bcc, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_10002bdc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10002bcc, i32* %r24.global-to-local, align 4
  %v0_10002c1c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002c24 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10002c30 = load i32, i32* @r31, align 4
  store i32 268446776, i32* @lr, align 4
  %v2_10002c34 = call i32 @function_1000a148(i32 4, i32 4)
  store i32 %v2_10002c34, i32* %r25.global-to-local, align 4
  %v0_10002c3c = load i32, i32* @r28, align 4
  %v0_10002c48 = load i32, i32* @r29, align 4
  store i32 %v0_10002c48, i32* %r3.global-to-local, align 4
  store i32 268446800, i32* @lr, align 4
  %v4_10002c4c = inttoptr i32 %v0_10002c3c to i32*
  %v5_10002c4c = call i32 @function_100006a8(i32 %v0_10002c48, i32* %v4_10002c4c, i32 2, i32 0)
  %v5_10002c5c = trunc i32 %v5_10002c4c to i8
  %v0_10002c64 = load i32, i32* @r28, align 4
  %v0_10002c68 = load i32, i32* @r29, align 4
  store i32 %v0_10002c68, i32* %r3.global-to-local, align 4
  store i32 268446832, i32* @lr, align 4
  %v4_10002c6c = inttoptr i32 %v0_10002c64 to i32*
  %v5_10002c6c = call i32 @function_100006a8(i32 %v0_10002c68, i32* %v4_10002c6c, i32 3, i32 65535)
  %v0_10002c70 = load i32, i32* @r28, align 4
  store i32 %v5_10002c6c, i32* %r21.global-to-local, align 4
  %v0_10002c80 = load i32, i32* @r29, align 4
  store i32 %v0_10002c80, i32* %r3.global-to-local, align 4
  store i32 268446856, i32* @lr, align 4
  %v4_10002c84 = inttoptr i32 %v0_10002c70 to i32*
  %v5_10002c84 = call i32 @function_100006a8(i32 %v0_10002c80, i32* %v4_10002c84, i32 4, i32 64)
  %v0_10002c88 = load i32, i32* @r28, align 4
  %v5_10002c94 = trunc i32 %v5_10002c84 to i8
  %v0_10002c9c = load i32, i32* @r29, align 4
  store i32 %v0_10002c9c, i32* %r3.global-to-local, align 4
  store i32 268446884, i32* @lr, align 4
  %v4_10002ca0 = inttoptr i32 %v0_10002c88 to i32*
  %v5_10002ca0 = call i32 @function_100006a8(i32 %v0_10002c9c, i32* %v4_10002ca0, i32 5, i32 1)
  %v0_10002cb0 = load i32, i32* @r28, align 4
  %v1_10002cb4 = urem i32 %v5_10002ca0, 256
  store i32 %v1_10002cb4, i32* @r31, align 4
  %v0_10002cb8 = load i32, i32* @r29, align 4
  store i32 %v0_10002cb8, i32* %r3.global-to-local, align 4
  store i32 268446912, i32* @lr, align 4
  %v4_10002cbc = inttoptr i32 %v0_10002cb0 to i32*
  %v5_10002cbc = call i32 @function_100006a8(i32 %v0_10002cb8, i32* %v4_10002cbc, i32 6, i32 65535)
  %v0_10002cc4 = load i32, i32* @r28, align 4
  store i32 %v5_10002cbc, i32* %r22.global-to-local, align 4
  %v0_10002cd4 = load i32, i32* @r29, align 4
  store i32 %v0_10002cd4, i32* %r3.global-to-local, align 4
  store i32 268446940, i32* @lr, align 4
  %v4_10002cd8 = inttoptr i32 %v0_10002cc4 to i32*
  %v5_10002cd8 = call i32 @function_100006a8(i32 %v0_10002cd4, i32* %v4_10002cd8, i32 7, i32 65535)
  %v0_10002ce0 = load i32, i32* @r28, align 4
  store i32 %v5_10002cd8, i32* %r23.global-to-local, align 4
  %v0_10002cf0 = load i32, i32* @r29, align 4
  store i32 %v0_10002cf0, i32* %r3.global-to-local, align 4
  store i32 268446968, i32* @lr, align 4
  %v4_10002cf4 = inttoptr i32 %v0_10002ce0 to i32*
  %v5_10002cf4 = call i32 @function_100006a8(i32 %v0_10002cf0, i32* %v4_10002cf4, i32 17, i32 65535)
  %v0_10002cf8 = load i32, i32* @r28, align 4
  store i32 %v5_10002cf4, i32* %r19.global-to-local, align 4
  %v0_10002d08 = load i32, i32* @r29, align 4
  store i32 %v0_10002d08, i32* %r3.global-to-local, align 4
  store i32 268446992, i32* @lr, align 4
  %v4_10002d0c = inttoptr i32 %v0_10002cf8 to i32*
  %v5_10002d0c = call i32 @function_100006a8(i32 %v0_10002d08, i32* %v4_10002d0c, i32 18, i32 0)
  %v0_10002d10 = load i32, i32* @r28, align 4
  store i32 %v5_10002d0c, i32* %r20.global-to-local, align 4
  %v0_10002d20 = load i32, i32* @r29, align 4
  store i32 %v0_10002d20, i32* %r3.global-to-local, align 4
  store i32 268447016, i32* @lr, align 4
  %v4_10002d24 = inttoptr i32 %v0_10002d10 to i32*
  %v5_10002d24 = call i32 @function_100006a8(i32 %v0_10002d20, i32* %v4_10002d24, i32 11, i32 0)
  %v0_10002d28 = load i32, i32* @r28, align 4
  store i32 %v5_10002d24, i32* %r14.global-to-local, align 4
  %v0_10002d38 = load i32, i32* @r29, align 4
  store i32 %v0_10002d38, i32* %r3.global-to-local, align 4
  store i32 268447040, i32* @lr, align 4
  %v4_10002d3c = inttoptr i32 %v0_10002d28 to i32*
  %v5_10002d3c = call i32 @function_100006a8(i32 %v0_10002d38, i32* %v4_10002d3c, i32 12, i32 0)
  %v0_10002d40 = load i32, i32* @r28, align 4
  store i32 %v5_10002d3c, i32* %r17.global-to-local, align 4
  %v0_10002d50 = load i32, i32* @r29, align 4
  store i32 %v0_10002d50, i32* %r3.global-to-local, align 4
  store i32 268447064, i32* @lr, align 4
  %v4_10002d54 = inttoptr i32 %v0_10002d40 to i32*
  %v5_10002d54 = call i32 @function_100006a8(i32 %v0_10002d50, i32* %v4_10002d54, i32 13, i32 0)
  %v0_10002d58 = load i32, i32* @r28, align 4
  store i32 %v5_10002d54, i32* %r18.global-to-local, align 4
  %v0_10002d68 = load i32, i32* @r29, align 4
  store i32 %v0_10002d68, i32* %r3.global-to-local, align 4
  store i32 268447088, i32* @lr, align 4
  %v4_10002d6c = inttoptr i32 %v0_10002d58 to i32*
  %v5_10002d6c = call i32 @function_100006a8(i32 %v0_10002d68, i32* %v4_10002d6c, i32 14, i32 0)
  %v0_10002d70 = load i32, i32* @r28, align 4
  %v0_10002d80 = load i32, i32* @r29, align 4
  store i32 %v0_10002d80, i32* %r3.global-to-local, align 4
  store i32 268447112, i32* @lr, align 4
  %v4_10002d84 = inttoptr i32 %v0_10002d70 to i32*
  %v5_10002d84 = call i32 @function_100006a8(i32 %v0_10002d80, i32* %v4_10002d84, i32 15, i32 1)
  %v0_10002d88 = load i32, i32* @r28, align 4
  store i32 %v5_10002d84, i32* %r16.global-to-local, align 4
  %v0_10002d98 = load i32, i32* @r29, align 4
  store i32 %v0_10002d98, i32* %r3.global-to-local, align 4
  store i32 268447136, i32* @lr, align 4
  %v4_10002d9c = inttoptr i32 %v0_10002d88 to i32*
  %v5_10002d9c = call i32 @function_100006a8(i32 %v0_10002d98, i32* %v4_10002d9c, i32 16, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10002da4 = load i32, i32* @global_var_1001c208.14, align 4
  %v0_10002da8 = load i32, i32* @r28, align 4
  store i32 %v5_10002d9c, i32* %r30.global-to-local, align 4
  %v0_10002db4 = load i32, i32* @r29, align 4
  store i32 %v0_10002db4, i32* %r3.global-to-local, align 4
  store i32 268447164, i32* @lr, align 4
  %v5_10002db8 = inttoptr i32 %v0_10002da8 to i32*
  %v6_10002db8 = call i32 @function_10000628(i32 %v0_10002db4, i32* %v5_10002db8, i32 25, i32 %v3_10002da4, i32 268566528)
  store i32 %v6_10002db8, i32* %r15.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447184, i32* @lr, align 4
  %v3_10002dcc = call i32 @function_10009dec(i32 2, i32 3, i32 6)
  store i32 %v3_10002dcc, i32* %r3.global-to-local, align 4
  %v3_10002dd0 = icmp eq i32 %v3_10002dcc, -1
  store i32 %v3_10002dcc, i32* %r26.global-to-local, align 4
  br i1 %v3_10002dd0, label %dec_label_pc_10003108, label %dec_label_pc_10002ddc

dec_label_pc_10002ddc:                            ; preds = %dec_label_pc_10002bc4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002de8 = ptrtoint i32* %stack_var_-120 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268447224, i32* @lr, align 4
  %v4_10002df4 = call i32 @function_10009db0(i32 0, i32 3, i32 %v2_10002de8, i32 4)
  store i32 %v4_10002df4, i32* %r3.global-to-local, align 4
  %v3_10002df8 = icmp eq i32 %v4_10002df4, -1
  br i1 %v3_10002df8, label %dec_label_pc_10003100, label %dec_label_pc_10002e00

dec_label_pc_10002e00:                            ; preds = %dec_label_pc_10002ddc
  %v0_10002e00 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002e00 = icmp slt i32 %v0_10002e00, 0
  %v3_10002e00 = icmp eq i32 %v0_10002e00, 0
  store i1 %v1_10002e00, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10002e00, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  %v0_10002e0c = load i32, i32* %r21.global-to-local, align 4
  %v1_10002e0c = urem i32 %v0_10002e0c, 65536
  store i32 %v1_10002e0c, i32* %r21.global-to-local, align 4
  %v0_10002e10 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002e10 = urem i32 %v0_10002e10, 65536
  store i32 %v1_10002e10, i32* %r22.global-to-local, align 4
  %v0_10002e14 = load i32, i32* %r23.global-to-local, align 4
  %v1_10002e14 = urem i32 %v0_10002e14, 65536
  store i32 %v1_10002e14, i32* %r23.global-to-local, align 4
  %v0_10002e18 = load i32, i32* %r14.global-to-local, align 4
  %v1_10002e18 = urem i32 %v0_10002e18, 256
  store i32 %v1_10002e18, i32* %r14.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10002e00, 1
  br i1 %tmp40, label %dec_label_pc_10002f7c, label %dec_label_pc_10002e20

dec_label_pc_10002e20:                            ; preds = %dec_label_pc_10002e00
  store i32 %v5_10002d6c, i32* %r0.global-to-local, align 4
  %v0_10002e24 = load i32, i32* @r31, align 4
  %v3_10002e24 = icmp eq i32 %v0_10002e24, 0
  store i1 %v3_10002e24, i1* %cr3_eq.global-to-local, align 1
  %v0_10002e28 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002e28 = urem i32 %v0_10002e28, 2
  store i32 %v1_10002e28, i32* %r29.global-to-local, align 4
  %v0_10002e2c = load i32, i32* %r17.global-to-local, align 4
  %v1_10002e2c = urem i32 %v0_10002e2c, 2
  store i32 %v1_10002e2c, i32* %r17.global-to-local, align 4
  %v0_10002e30 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002e30 = urem i32 %v0_10002e30, 2
  store i32 %v1_10002e30, i32* %r18.global-to-local, align 4
  %v1_10002e34 = urem i32 %v5_10002d6c, 2
  store i32 %v1_10002e34, i32* %r28.global-to-local, align 4
  %v0_10002e38 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002e38 = urem i32 %v0_10002e38, 2
  store i32 %v1_10002e38, i32* %r30.global-to-local, align 4
  %v1_10002e3c = urem i32 %v0_10002e18, 2
  store i32 %v1_10002e3c, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_10002e8c = sext i8 %v5_10002c5c to i32
  %v4_10002e94 = sext i8 %v5_10002c94 to i32
  br label %dec_label_pc_10002e44

dec_label_pc_10002e44:                            ; preds = %dec_label_pc_10002ea8, %dec_label_pc_10002e20
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268447312, i32* @lr, align 4
  %v2_10002e4c = call i32 @function_1000a148(i32 128, i32 1)
  store i32 %v2_10002e4c, i32* %r3.global-to-local, align 4
  %v3_10002e50 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002e50, i32* %r9.global-to-local, align 4
  %v0_10002e54 = load i32, i32* @r31, align 4
  %v1_10002e54 = mul i32 %v0_10002e54, 4
  store i32 %v1_10002e54, i32* %r0.global-to-local, align 4
  %v1_10002e58 = load i32, i32* %r25.global-to-local, align 4
  %v3_10002e58 = add i32 %v1_10002e58, %v1_10002e54
  %v4_10002e58 = inttoptr i32 %v3_10002e58 to i32*
  store i32 %v2_10002e4c, i32* %v4_10002e58, align 4
  %v0_10002e5c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e5c = mul i32 %v0_10002e5c, 4
  store i32 %v1_10002e5c, i32* %r9.global-to-local, align 4
  %v1_10002e60 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002e60 = add i32 %v1_10002e60, %v1_10002e5c
  %v3_10002e60 = inttoptr i32 %v2_10002e60 to i32*
  %v4_10002e60 = load i32, i32* %v3_10002e60, align 4
  store i32 %v4_10002e60, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10002e68 = inttoptr i32 %v4_10002e60 to i32*
  %v2_10002e68 = load i32, i32* %v1_10002e68, align 4
  store i32 %v2_10002e68, i32* %r0.global-to-local, align 4
  %v1_10002e6c = add i32 %v4_10002e60, 20
  store i32 %v1_10002e6c, i32* %r11.global-to-local, align 4
  %v0_10002e70 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002e70 = trunc i32 %v0_10002e70 to i16
  %v3_10002e70 = add i32 %v4_10002e60, 4
  %v4_10002e70 = inttoptr i32 %v3_10002e70 to i16*
  store i16 %v1_10002e70, i16* %v4_10002e70, align 2
  %v1_10002e74 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002e74, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10002e7c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 60, i32* %r9.global-to-local, align 4
  %v1_10002e84 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002e84 = inttoptr i32 %v1_10002e84 to i32*
  store i32 %v1_10002e7c, i32* %v2_10002e84, align 4
  %v0_10002e88 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e88 = trunc i32 %v0_10002e88 to i16
  %v2_10002e88 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e88 = add i32 %v2_10002e88, 2
  %v4_10002e88 = inttoptr i32 %v3_10002e88 to i16*
  store i16 %v1_10002e88, i16* %v4_10002e88, align 2
  store i32 %v4_10002e8c, i32* %r0.global-to-local, align 4
  %v2_10002e90 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e90 = add i32 %v2_10002e90, 1
  %v4_10002e90 = inttoptr i32 %v3_10002e90 to i8*
  store i8 %v5_10002c5c, i8* %v4_10002e90, align 1
  store i32 %v4_10002e94, i32* %r9.global-to-local, align 4
  %v2_10002e98 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e98 = add i32 %v2_10002e98, 8
  %v4_10002e98 = inttoptr i32 %v3_10002e98 to i8*
  store i8 %v5_10002c94, i8* %v4_10002e98, align 1
  %v0_10002e9c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002e9c, label %dec_label_pc_10002ea8, label %dec_label_pc_10002ea0

dec_label_pc_10002ea0:                            ; preds = %dec_label_pc_10002e44
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002ea4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002ea4 = add i32 %v2_10002ea4, 6
  %v4_10002ea4 = inttoptr i32 %v3_10002ea4 to i16*
  store i16 16384, i16* %v4_10002ea4, align 2
  br label %dec_label_pc_10002ea8

dec_label_pc_10002ea8:                            ; preds = %dec_label_pc_10002e44, %dec_label_pc_10002ea0
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10002eac = load i32, i32* %r15.global-to-local, align 4
  %v1_10002eac = load i32, i32* %r31.global-to-local, align 4
  %v2_10002eac = add i32 %v1_10002eac, 12
  %v3_10002eac = inttoptr i32 %v2_10002eac to i32*
  store i32 %v0_10002eac, i32* %v3_10002eac, align 4
  %v0_10002eb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002eb0 = trunc i32 %v0_10002eb0 to i8
  %v2_10002eb0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002eb0 = add i32 %v2_10002eb0, 9
  %v4_10002eb0 = inttoptr i32 %v3_10002eb0 to i8*
  store i8 %v1_10002eb0, i8* %v4_10002eb0, align 1
  %v0_10002eb4 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002eb4 = trunc i32 %v0_10002eb4 to i16
  %v2_10002eb4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002eb4 = add i32 %v2_10002eb4, 20
  %v4_10002eb4 = inttoptr i32 %v3_10002eb4 to i16*
  store i16 %v1_10002eb4, i16* %v4_10002eb4, align 2
  %v3_10002eb8 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002eb8, i32* %r9.global-to-local, align 4
  %v0_10002ebc = load i32, i32* %r23.global-to-local, align 4
  %v1_10002ebc = trunc i32 %v0_10002ebc to i16
  %v2_10002ebc = load i32, i32* %r11.global-to-local, align 4
  %v3_10002ebc = add i32 %v2_10002ebc, 2
  %v4_10002ebc = inttoptr i32 %v3_10002ebc to i16*
  store i16 %v1_10002ebc, i16* %v4_10002ebc, align 2
  %v0_10002ec0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002ec0 = mul i32 %v0_10002ec0, 24
  %v1_10002ec4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002ec4 = add i32 %v1_10002ec4, %v1_10002ec0
  store i32 %v2_10002ec4, i32* %r9.global-to-local, align 4
  %v1_10002ec8 = add i32 %v2_10002ec4, 16
  %v2_10002ec8 = inttoptr i32 %v1_10002ec8 to i32*
  %v3_10002ec8 = load i32, i32* %v2_10002ec8, align 4
  store i32 %v3_10002ec8, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10002ed0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002ed0 = add i32 %v1_10002ed0, 16
  %v3_10002ed0 = inttoptr i32 %v2_10002ed0 to i32*
  store i32 %v3_10002ec8, i32* %v3_10002ed0, align 4
  %v0_10002ed4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002ed4 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002ed4 = add i32 %v1_10002ed4, 4
  %v3_10002ed4 = inttoptr i32 %v2_10002ed4 to i32*
  store i32 %v0_10002ed4, i32* %v3_10002ed4, align 4
  %v0_10002ed8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002ed8 = add i32 %v0_10002ed8, 12
  %v2_10002ed8 = inttoptr i32 %v1_10002ed8 to i32*
  %v3_10002ed8 = load i32, i32* %v2_10002ed8, align 4
  store i32 %v3_10002ed8, i32* %r0.global-to-local, align 4
  %v1_10002edc = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  store i32 %v1_10002edc, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10002ee4 = call i32 @__asm_rlwimi(i32 %v1_10002e3c, i32 21, i32 10, i32 10)
  store i32 %v1_10002ee4, i32* %r0.global-to-local, align 4
  %v1_10002ee8 = call i32 @__asm_rlwimi(i32 %v1_10002e2c, i32 20, i32 11, i32 11)
  store i32 %v1_10002ee8, i32* %r0.global-to-local, align 4
  %v1_10002eec = call i32 @__asm_rlwimi(i32 %v1_10002e30, i32 19, i32 12, i32 12)
  store i32 %v1_10002eec, i32* %r0.global-to-local, align 4
  %v1_10002ef0 = call i32 @__asm_rlwimi(i32 %v1_10002e34, i32 18, i32 13, i32 13)
  store i32 %v1_10002ef0, i32* %r0.global-to-local, align 4
  %v1_10002ef4 = call i32 @__asm_rlwimi(i32 %v1_10002e28, i32 17, i32 14, i32 14)
  store i32 %v1_10002ef4, i32* %r0.global-to-local, align 4
  %v1_10002ef8 = call i32 @__asm_rlwimi(i32 %v1_10002e38, i32 16, i32 15, i32 15)
  %v1_10002efc = load i32, i32* %r11.global-to-local, align 4
  %v2_10002efc = add i32 %v1_10002efc, 12
  %v3_10002efc = inttoptr i32 %v2_10002efc to i32*
  store i32 %v1_10002ef8, i32* %v3_10002efc, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_10002f04 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f04 = add i32 %v2_10002f04, 40
  %v4_10002f04 = inttoptr i32 %v3_10002f04 to i8*
  store i8 2, i8* %v4_10002f04, align 1
  %v0_10002f08 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f08 = trunc i32 %v0_10002f08 to i8
  %v2_10002f08 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f08 = add i32 %v2_10002f08, 41
  %v4_10002f08 = inttoptr i32 %v3_10002f08 to i8*
  store i8 %v1_10002f08, i8* %v4_10002f08, align 1
  %v0_10002f0c = call i32 @function_10005f3c()
  %v2_10002f14 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f14 = add i32 %v2_10002f14, 46
  %v4_10002f14 = inttoptr i32 %v3_10002f14 to i8*
  store i8 8, i8* %v4_10002f14, align 1
  %v1_10002f18 = urem i32 %v0_10002f0c, 16
  store i32 %v1_10002f18, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v2_10002f24 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f24 = add i32 %v2_10002f24, 44
  %v4_10002f24 = inttoptr i32 %v3_10002f24 to i8*
  store i8 4, i8* %v4_10002f24, align 1
  %v0_10002f28 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002f28 = add i32 %v0_10002f28, 1400
  store i32 %v1_10002f28, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_10002f30 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f30 = trunc i32 %v0_10002f30 to i8
  %v2_10002f30 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f30 = add i32 %v2_10002f30, 45
  %v4_10002f30 = inttoptr i32 %v3_10002f30 to i8*
  store i8 %v1_10002f30, i8* %v4_10002f30, align 1
  %v0_10002f34 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002f34 = trunc i32 %v0_10002f34 to i8
  %v2_10002f34 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f34 = add i32 %v2_10002f34, 47
  %v4_10002f34 = inttoptr i32 %v3_10002f34 to i8*
  store i8 %v1_10002f34, i8* %v4_10002f34, align 1
  %v0_10002f38 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002f38 = trunc i32 %v0_10002f38 to i16
  %v2_10002f38 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f38 = add i32 %v2_10002f38, 42
  %v4_10002f38 = inttoptr i32 %v3_10002f38 to i16*
  store i16 %v1_10002f38, i16* %v4_10002f38, align 2
  %v0_10002f3c = call i32 @function_10005f3c()
  store i32 %v0_10002f3c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v1_10002f48 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002f48 = add i32 %v1_10002f48, 52
  %v3_10002f48 = inttoptr i32 %v2_10002f48 to i32*
  store i32 0, i32* %v3_10002f48, align 4
  %v0_10002f4c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f4c = trunc i32 %v0_10002f4c to i8
  %v2_10002f4c = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f4c = add i32 %v2_10002f4c, 56
  %v4_10002f4c = inttoptr i32 %v3_10002f4c to i8*
  store i8 %v1_10002f4c, i8* %v4_10002f4c, align 1
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r9.global-to-local, align 4
  %v1_10002f58 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002f58 = add i32 %v1_10002f58, 48
  %v3_10002f58 = inttoptr i32 %v2_10002f58 to i32*
  store i32 %v0_10002f3c, i32* %v3_10002f58, align 4
  %v0_10002f5c = load i32, i32* %r0.global-to-local, align 4
  %v1_10002f5c = trunc i32 %v0_10002f5c to i8
  %v2_10002f5c = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f5c = add i32 %v2_10002f5c, 59
  %v4_10002f5c = inttoptr i32 %v3_10002f5c to i8*
  store i8 %v1_10002f5c, i8* %v4_10002f5c, align 1
  %v0_10002f60 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f60 = trunc i32 %v0_10002f60 to i8
  %v2_10002f60 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f60 = add i32 %v2_10002f60, 57
  %v4_10002f60 = inttoptr i32 %v3_10002f60 to i8*
  store i8 %v1_10002f60, i8* %v4_10002f60, align 1
  %v0_10002f64 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f64 = trunc i32 %v0_10002f64 to i8
  %v2_10002f64 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f64 = add i32 %v2_10002f64, 58
  %v4_10002f64 = inttoptr i32 %v3_10002f64 to i8*
  store i8 %v1_10002f64, i8* %v4_10002f64, align 1
  %v3_10002f68 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002f68, i32* %r9.global-to-local, align 4
  %v1_10002f6c = add i32 %v3_10002f68, 1
  store i32 %v1_10002f6c, i32* %r31.global-to-local, align 4
  %v1_10002f70 = load i32, i32* %r24.global-to-local, align 4
  %v2_10002f70 = icmp slt i32 %v1_10002f6c, %v1_10002f70
  store i32 %v1_10002f6c, i32* %stack_var_-120, align 4
  br i1 %v2_10002f70, label %dec_label_pc_10002e44, label %dec_label_pc_10002f7c.loopexit

dec_label_pc_10002f7c.loopexit:                   ; preds = %dec_label_pc_10002ea8
  %v0_10002f80.pre = load i32, i32* %r14.global-to-local, align 4
  %v0_10002f84.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002f84.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10002f7c

dec_label_pc_10002f7c:                            ; preds = %dec_label_pc_10002f7c.loopexit, %dec_label_pc_10002e00
  %v1_10002f84.pre = phi i1 [ %v1_10002f84.pre.pre, %dec_label_pc_10002f7c.loopexit ], [ %v1_10002e00, %dec_label_pc_10002e00 ]
  %v0_10002f84.pre = phi i1 [ %v0_10002f84.pre.pre, %dec_label_pc_10002f7c.loopexit ], [ %v3_10002e00, %dec_label_pc_10002e00 ]
  %v0_10002f80 = phi i32 [ %v0_10002f80.pre, %dec_label_pc_10002f7c.loopexit ], [ %v1_10002e18, %dec_label_pc_10002e00 ]
  %v0_10002f7c = load i32, i32* %r15.global-to-local, align 4
  %v3_10002f7c = icmp eq i32 %v0_10002f7c, -1
  store i1 %v3_10002f7c, i1* %cr2_eq.global-to-local, align 1
  %v3_10002f80 = icmp eq i32 %v0_10002f80, 0
  store i1 %v3_10002f80, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10002f84.outer

dec_label_pc_10002f84.outer:                      ; preds = %dec_label_pc_10003060, %dec_label_pc_10002f7c
  %v1_10002f84.ph = phi i1 [ %v1_10002f84.pre, %dec_label_pc_10002f7c ], [ %v1_10003060, %dec_label_pc_10003060 ]
  %v0_10002f84.ph = phi i1 [ %v0_10002f84.pre, %dec_label_pc_10002f7c ], [ %v0_10003060, %dec_label_pc_10003060 ]
  %v2_10002f84 = or i1 %v1_10002f84.ph, %v0_10002f84.ph
  br label %dec_label_pc_10002f84

dec_label_pc_10002f84:                            ; preds = %dec_label_pc_10002f84.outer, %dec_label_pc_10002f84
  br i1 %v2_10002f84, label %dec_label_pc_10002f84, label %dec_label_pc_10002f88

dec_label_pc_10002f88:                            ; preds = %dec_label_pc_10002f84, %dec_label_pc_10003060
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10002f98

dec_label_pc_10002f98:                            ; preds = %dec_label_pc_10002ff0, %dec_label_pc_10002f88
  %v0_10002f98 = phi i32 [ %v1_10003050, %dec_label_pc_10002ff0 ], [ 0, %dec_label_pc_10002f88 ]
  %v1_10002f98 = mul i32 %v0_10002f98, 24
  store i32 %v1_10002f98, i32* %r0.global-to-local, align 4
  %v1_10002f9c = mul i32 %v0_10002f98, 4
  store i32 %v1_10002f9c, i32* %r11.global-to-local, align 4
  %v1_10002fa0 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002fa0 = add i32 %v1_10002fa0, %v1_10002f9c
  %v3_10002fa0 = inttoptr i32 %v2_10002fa0 to i32*
  %v4_10002fa0 = load i32, i32* %v3_10002fa0, align 4
  store i32 %v4_10002fa0, i32* %r28.global-to-local, align 4
  %v1_10002fa4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002fa4 = add i32 %v1_10002fa4, %v1_10002f98
  %v1_10002fa8 = add i32 %v2_10002fa4, 20
  %v2_10002fa8 = inttoptr i32 %v1_10002fa8 to i8*
  %v3_10002fa8 = load i8, i8* %v2_10002fa8, align 1
  %v4_10002fa8 = zext i8 %v3_10002fa8 to i32
  store i32 %v4_10002fa8, i32* %r9.global-to-local, align 4
  %v1_10002fac = add i32 %v4_10002fa0, 20
  store i32 %v1_10002fac, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_10002fa8, 32
  br i1 %tmp41, label %dec_label_pc_10003068, label %dec_label_pc_10002fb8

dec_label_pc_10002fb8:                            ; preds = %dec_label_pc_10002f98
  %v0_10002fb8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002fb8, label %dec_label_pc_10003090, label %dec_label_pc_10002fbc

dec_label_pc_10002fbc:                            ; preds = %dec_label_pc_10003068, %dec_label_pc_10002fb8
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10002fc4 = load i32, i32* %r21.global-to-local, align 4
  %v4_10002fc4 = icmp eq i32 %v0_10002fc4, 65535
  br i1 %v4_10002fc4, label %dec_label_pc_100030a8, label %dec_label_pc_10002fcc

dec_label_pc_10002fcc:                            ; preds = %dec_label_pc_10003090, %dec_label_pc_10002fbc
  %v1_10002fcc = phi i32 [ %v1_100030a0, %dec_label_pc_10003090 ], [ 65535, %dec_label_pc_10002fbc ]
  %v0_10002fcc = load i32, i32* %r22.global-to-local, align 4
  %v4_10002fcc = icmp eq i32 %v0_10002fcc, %v1_10002fcc
  br i1 %v4_10002fcc, label %dec_label_pc_100030b8, label %dec_label_pc_10002fd4

dec_label_pc_10002fd4:                            ; preds = %dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge, %dec_label_pc_10002fcc
  %v1_10002fd4 = phi i32 [ %v1_10002fd4.pre, %dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge ], [ %v1_10002fcc, %dec_label_pc_10002fcc ]
  %v0_10002fd4 = load i32, i32* %r23.global-to-local, align 4
  %v4_10002fd4 = icmp eq i32 %v0_10002fd4, %v1_10002fd4
  br i1 %v4_10002fd4, label %dec_label_pc_100030c8, label %dec_label_pc_10002fdc

dec_label_pc_10002fdc:                            ; preds = %dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge, %dec_label_pc_10002fd4
  %v1_10002fdc = phi i32 [ %v1_10002fdc.pre, %dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge ], [ %v1_10002fd4, %dec_label_pc_10002fd4 ]
  %v0_10002fdc = load i32, i32* %r19.global-to-local, align 4
  %v4_10002fdc = icmp eq i32 %v0_10002fdc, %v1_10002fdc
  br i1 %v4_10002fdc, label %dec_label_pc_100030d8, label %dec_label_pc_10002fe4

dec_label_pc_10002fe4:                            ; preds = %dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge, %dec_label_pc_10002fdc
  %v1_10002fe4 = phi i32 [ %v1_10002fe4.pre, %dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge ], [ %v1_10002fdc, %dec_label_pc_10002fdc ]
  %v0_10002fe4 = load i32, i32* %r20.global-to-local, align 4
  %v4_10002fe4 = icmp eq i32 %v0_10002fe4, %v1_10002fe4
  br i1 %v4_10002fe4, label %dec_label_pc_100030e8, label %dec_label_pc_10002fec

dec_label_pc_10002fec:                            ; preds = %dec_label_pc_100030d8, %dec_label_pc_10002fe4
  %v0_10002fec = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002fec, label %dec_label_pc_10002ff0, label %dec_label_pc_100030f4

dec_label_pc_10002ff0:                            ; preds = %dec_label_pc_10002fec, %dec_label_pc_100030e8, %dec_label_pc_100030f4
  %v0_10002ff0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002ff0 = trunc i32 %v0_10002ff0 to i16
  %v2_10002ff0 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002ff0 = add i32 %v2_10002ff0, 10
  %v4_10002ff0 = inttoptr i32 %v3_10002ff0 to i16*
  store i16 %v1_10002ff0, i16* %v4_10002ff0, align 2
  %v0_10002ff8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002ff8, i32* @r3, align 4
  %v2_10002ffc = call i32 @function_100043cc(i32 %v0_10002ff8, i32 20)
  %v3_10002ffc = trunc i32 %v2_10002ffc to i16
  %v0_10003000 = load i32, i32* @r31, align 4
  store i32 %v0_10003000, i32* @r4, align 4
  %v4_10003004 = add i32 %v0_10002ff8, 10
  %v5_10003004 = inttoptr i32 %v4_10003004 to i16*
  store i16 %v3_10002ffc, i16* %v5_10003004, align 2
  %v0_1000300c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000300c = trunc i32 %v0_1000300c to i16
  %v2_1000300c = load i32, i32* @r31, align 4
  %v3_1000300c = add i32 %v2_1000300c, 16
  %v4_1000300c = inttoptr i32 %v3_1000300c to i16*
  store i16 %v1_1000300c, i16* %v4_1000300c, align 2
  %v0_10003014 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003014, i32* %r3.global-to-local, align 4
  %v4_10003018 = call i32 @function_10004430(i32 %v0_10003014, i32 %v0_10003000, i32 40, i32 40)
  %v5_10003018 = trunc i32 %v4_10003018 to i16
  store i32 %v4_10003018, i32* %r3.global-to-local, align 4
  %v3_1000301c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000301c, i32* %r7.global-to-local, align 4
  %v0_10003020 = load i32, i32* @r31, align 4
  %v1_10003020 = add i32 %v0_10003020, 2
  %v2_10003020 = inttoptr i32 %v1_10003020 to i16*
  %v3_10003020 = load i16, i16* %v2_10003020, align 2
  %v4_10003020 = zext i16 %v3_10003020 to i32
  store i32 %v4_10003020, i32* %r0.global-to-local, align 4
  %v0_10003024 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003028 = mul i32 %v3_1000301c, 24
  store i32 %v1_10003028, i32* %r7.global-to-local, align 4
  %v4_1000302c = add i32 %v0_10003020, 16
  %v5_1000302c = inttoptr i32 %v4_1000302c to i16*
  store i16 %v5_10003018, i16* %v5_1000302c, align 2
  %v0_10003034 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003034, i32* %r3.global-to-local, align 4
  %v0_10003038 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003038 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003038 = add i32 %v1_10003038, %v0_10003038
  store i32 %v2_10003038, i32* %r7.global-to-local, align 4
  %v0_10003040 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003040 = trunc i32 %v0_10003040 to i16
  %v3_10003040 = add i32 %v2_10003038, 2
  %v4_10003040 = inttoptr i32 %v3_10003040 to i16*
  store i16 %v1_10003040, i16* %v4_10003040, align 2
  store i32 268447820, i32* @lr, align 4
  %v6_10003048 = call i32 @function_10009d70(i32 %v0_10003034, i32 %v0_10003024, i32 60, i32 16384, i32 %v2_10003038, i32 16)
  store i32 %v6_10003048, i32* %r3.global-to-local, align 4
  %v3_1000304c = load i32, i32* %stack_var_-120, align 4
  %v1_10003050 = add i32 %v3_1000304c, 1
  store i32 %v1_10003050, i32* %r9.global-to-local, align 4
  %v1_10003054 = load i32, i32* %r24.global-to-local, align 4
  %v2_10003054 = icmp slt i32 %v1_10003050, %v1_10003054
  store i32 %v1_10003050, i32* %stack_var_-120, align 4
  br i1 %v2_10003054, label %dec_label_pc_10002f98, label %dec_label_pc_10003060

dec_label_pc_10003060:                            ; preds = %dec_label_pc_10002ff0
  %v0_10003060 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003060 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003060 = or i1 %v0_10003060, %v1_10003060
  br i1 %v2_10003060, label %dec_label_pc_10002f84.outer, label %dec_label_pc_10002f88

dec_label_pc_10003068:                            ; preds = %dec_label_pc_10002f98
  %v1_10003068 = add i32 %v2_10002fa4, 16
  %v2_10003068 = inttoptr i32 %v1_10003068 to i32*
  %v3_10003068 = load i32, i32* %v2_10003068, align 4
  store i32 %v3_10003068, i32* %r29.global-to-local, align 4
  %v0_1000306c = call i32 @function_10005f3c()
  store i32 %v0_1000306c, i32* %r3.global-to-local, align 4
  %v3_10003070 = load i32, i32* %stack_var_-120, align 4
  %v1_10003074 = mul i32 %v3_10003070, 24
  %v1_10003078 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003078 = add i32 %v1_10003078, %v1_10003074
  store i32 %v2_10003078, i32* %r9.global-to-local, align 4
  %v1_1000307c = add i32 %v2_10003078, 20
  %v2_1000307c = inttoptr i32 %v1_1000307c to i8*
  %v3_1000307c = load i8, i8* %v2_1000307c, align 1
  %v4_1000307c = zext i8 %v3_1000307c to i32
  store i32 %v4_1000307c, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_1000307c, 64
  %v2_10003080 = zext i8 %tmp to i32
  %v3_10003080 = lshr i32 %v0_1000306c, %v2_10003080
  store i32 %v3_10003080, i32* %r3.global-to-local, align 4
  %v0_10003084 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003084 = add i32 %v3_10003080, %v0_10003084
  store i32 %v2_10003084, i32* %r29.global-to-local, align 4
  %v1_10003088 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003088 = add i32 %v1_10003088, 16
  %v3_10003088 = inttoptr i32 %v2_10003088 to i32*
  store i32 %v2_10003084, i32* %v3_10003088, align 4
  %v0_1000308c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000308c, label %dec_label_pc_10003090, label %dec_label_pc_10002fbc

dec_label_pc_10003090:                            ; preds = %dec_label_pc_10003068, %dec_label_pc_10002fb8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003094 = call i32 @function_10005f3c()
  store i32 %v0_10003094, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_1000309c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000309c = add i32 %v1_1000309c, 12
  %v3_1000309c = inttoptr i32 %v2_1000309c to i32*
  store i32 %v0_10003094, i32* %v3_1000309c, align 4
  %v0_100030a0 = load i32, i32* %r21.global-to-local, align 4
  %v1_100030a0 = load i32, i32* %r29.global-to-local, align 4
  %v4_100030a0 = icmp eq i32 %v0_100030a0, %v1_100030a0
  br i1 %v4_100030a0, label %dec_label_pc_100030a8, label %dec_label_pc_10002fcc

dec_label_pc_100030a8:                            ; preds = %dec_label_pc_10003090, %dec_label_pc_10002fbc
  %v0_100030a8 = call i32 @function_10005f3c()
  %v1_100030a8 = trunc i32 %v0_100030a8 to i16
  store i32 %v0_100030a8, i32* %r3.global-to-local, align 4
  %v0_100030ac = load i32, i32* %r22.global-to-local, align 4
  %v1_100030ac = load i32, i32* %r29.global-to-local, align 4
  %v4_100030ac = icmp eq i32 %v0_100030ac, %v1_100030ac
  %v3_100030b0 = load i32, i32* %r28.global-to-local, align 4
  %v4_100030b0 = add i32 %v3_100030b0, 4
  %v5_100030b0 = inttoptr i32 %v4_100030b0 to i16*
  store i16 %v1_100030a8, i16* %v5_100030b0, align 2
  br i1 %v4_100030ac, label %dec_label_pc_100030b8, label %dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge

dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge: ; preds = %dec_label_pc_100030a8
  %v1_10002fd4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002fd4

dec_label_pc_100030b8:                            ; preds = %dec_label_pc_100030a8, %dec_label_pc_10002fcc
  %v0_100030b8 = call i32 @function_10005f3c()
  %v1_100030b8 = trunc i32 %v0_100030b8 to i16
  store i32 %v0_100030b8, i32* %r3.global-to-local, align 4
  %v0_100030bc = load i32, i32* %r23.global-to-local, align 4
  %v1_100030bc = load i32, i32* %r29.global-to-local, align 4
  %v4_100030bc = icmp eq i32 %v0_100030bc, %v1_100030bc
  %v3_100030c0 = load i32, i32* %r28.global-to-local, align 4
  %v4_100030c0 = add i32 %v3_100030c0, 20
  %v5_100030c0 = inttoptr i32 %v4_100030c0 to i16*
  store i16 %v1_100030b8, i16* %v5_100030c0, align 2
  br i1 %v4_100030bc, label %dec_label_pc_100030c8, label %dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge

dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge: ; preds = %dec_label_pc_100030b8
  %v1_10002fdc.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002fdc

dec_label_pc_100030c8:                            ; preds = %dec_label_pc_100030b8, %dec_label_pc_10002fd4
  %v0_100030c8 = call i32 @function_10005f3c()
  %v1_100030c8 = trunc i32 %v0_100030c8 to i16
  store i32 %v0_100030c8, i32* %r3.global-to-local, align 4
  %v0_100030cc = load i32, i32* %r19.global-to-local, align 4
  %v1_100030cc = load i32, i32* %r29.global-to-local, align 4
  %v4_100030cc = icmp eq i32 %v0_100030cc, %v1_100030cc
  %v3_100030d0 = load i32, i32* @r31, align 4
  %v4_100030d0 = add i32 %v3_100030d0, 2
  %v5_100030d0 = inttoptr i32 %v4_100030d0 to i16*
  store i16 %v1_100030c8, i16* %v5_100030d0, align 2
  br i1 %v4_100030cc, label %dec_label_pc_100030d8, label %dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge

dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge: ; preds = %dec_label_pc_100030c8
  %v1_10002fe4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002fe4

dec_label_pc_100030d8:                            ; preds = %dec_label_pc_100030c8, %dec_label_pc_10002fdc
  %v0_100030d8 = call i32 @function_10005f3c()
  store i32 %v0_100030d8, i32* %r3.global-to-local, align 4
  %v0_100030dc = load i32, i32* %r20.global-to-local, align 4
  %v1_100030dc = load i32, i32* %r29.global-to-local, align 4
  %v4_100030dc = icmp eq i32 %v0_100030dc, %v1_100030dc
  %v1_100030e0 = load i32, i32* @r31, align 4
  %v2_100030e0 = add i32 %v1_100030e0, 4
  %v3_100030e0 = inttoptr i32 %v2_100030e0 to i32*
  store i32 %v0_100030d8, i32* %v3_100030e0, align 4
  br i1 %v4_100030dc, label %dec_label_pc_100030e8, label %dec_label_pc_10002fec

dec_label_pc_100030e8:                            ; preds = %dec_label_pc_100030d8, %dec_label_pc_10002fe4
  %v0_100030e8 = call i32 @function_10005f3c()
  store i32 %v0_100030e8, i32* %r3.global-to-local, align 4
  %v1_100030ec = load i32, i32* @r31, align 4
  %v2_100030ec = add i32 %v1_100030ec, 8
  %v3_100030ec = inttoptr i32 %v2_100030ec to i32*
  store i32 %v0_100030e8, i32* %v3_100030ec, align 4
  %v0_100030f0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100030f0, label %dec_label_pc_10002ff0, label %dec_label_pc_100030f4

dec_label_pc_100030f4:                            ; preds = %dec_label_pc_10002fec, %dec_label_pc_100030e8
  %v0_100030f4 = call i32 @function_10005f3c()
  %v1_100030f4 = trunc i32 %v0_100030f4 to i16
  store i32 %v0_100030f4, i32* %r3.global-to-local, align 4
  %v3_100030f8 = load i32, i32* @r31, align 4
  %v4_100030f8 = add i32 %v3_100030f8, 18
  %v5_100030f8 = inttoptr i32 %v4_100030f8 to i16*
  store i16 %v1_100030f4, i16* %v5_100030f8, align 2
  br label %dec_label_pc_10002ff0

dec_label_pc_10003100:                            ; preds = %dec_label_pc_10002ddc
  %v0_10003100 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003100, i32* %r3.global-to-local, align 4
  store i32 268448008, i32* @lr, align 4
  %v0_10003104 = call i32 @function_1000909c()
  store i32 %v0_10003104, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003108

dec_label_pc_10003108:                            ; preds = %dec_label_pc_10002bc4, %dec_label_pc_10003100
  store i32 %v0_10002bdc, i32* %r0.global-to-local, align 4
  %v1_1000311c = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002bcc)
  store i32 %v0_10002c1c, i32* %r28.global-to-local, align 4
  store i32 %v0_10002c24, i32* %r29.global-to-local, align 4
  store i32 %v0_10002c30, i32* %r31.global-to-local, align 4
  %v0_10003164 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003164

; uselistorder directives
  uselistorder i32 %v0_100030f4, { 1, 0 }
  uselistorder i32 %v0_100030c8, { 1, 0 }
  uselistorder i32 %v0_100030b8, { 1, 0 }
  uselistorder i32 %v0_100030a8, { 1, 0 }
  uselistorder i32 %v1_100030a0, { 1, 0 }
  uselistorder i1 %v1_10003060, { 1, 0 }
  uselistorder i1 %v0_10003060, { 1, 0 }
  uselistorder i32 %v1_10003050, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003018, { 1, 0 }
  uselistorder i32 %v1_10002f9c, { 1, 0 }
  uselistorder i32 %v1_10002e5c, { 1, 0 }
  uselistorder i32 %v1_10002e54, { 1, 0 }
  uselistorder i32 %v1_10002e3c, { 1, 0 }
  uselistorder i32 %v1_10002e38, { 1, 0 }
  uselistorder i32 %v1_10002e34, { 1, 0 }
  uselistorder i32 %v1_10002e30, { 1, 0 }
  uselistorder i32 %v1_10002e2c, { 1, 0 }
  uselistorder i32 %v1_10002e28, { 1, 0 }
  uselistorder i32 %v1_10002e18, { 1, 0 }
  uselistorder i8 %v5_10002c94, { 1, 0 }
  uselistorder i8 %v5_10002c5c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 25, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 10, 9, 11, 7, 12, 8, 13, 1, 2, 4, 3, 5, 6, 14, 15 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 23, 24, 26, 27, 28, 29, 30 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003108, { 1, 0 }
  uselistorder label %dec_label_pc_100030f4, { 1, 0 }
  uselistorder label %dec_label_pc_10002ff0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002f88, { 1, 0 }
  uselistorder label %dec_label_pc_10002f84, { 1, 0 }
  uselistorder label %dec_label_pc_10002ea8, { 1, 0 }
}

define i32 @function_10003168(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003168:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10003170 = call i32 @__asm_mfcr()
  store i32 %v0_10003170, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000319c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100031a4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268448200, i32* @lr, align 4
  %v2_100031c4 = call i32 @function_1000a148(i32 4, i32 4)
  store i32 %v2_100031c4, i32* %r27.global-to-local, align 4
  %v0_100031d0 = load i32, i32* @r30, align 4
  store i32 %v0_100031d0, i32* %r3.global-to-local, align 4
  store i32 268448216, i32* @lr, align 4
  %v2_100031d4 = call i32 @function_1000a148(i32 %v0_100031d0, i32 4)
  %v0_100031dc = load i32, i32* @r28, align 4
  store i32 %v2_100031d4, i32* %r26.global-to-local, align 4
  %v0_100031ec = load i32, i32* @r29, align 4
  store i32 %v0_100031ec, i32* %r3.global-to-local, align 4
  store i32 268448244, i32* @lr, align 4
  %v4_100031f0 = inttoptr i32 %v0_100031dc to i32*
  %v5_100031f0 = call i32 @function_100006a8(i32 %v0_100031ec, i32* %v4_100031f0, i32 7, i32 65535)
  %v0_100031fc = load i32, i32* @r28, align 4
  %v1_10003204 = urem i32 %v5_100031f0, 65536
  store i32 %v1_10003204, i32* %r21.global-to-local, align 4
  %v0_10003208 = load i32, i32* @r29, align 4
  store i32 %v0_10003208, i32* %r3.global-to-local, align 4
  store i32 268448272, i32* @lr, align 4
  %v4_1000320c = inttoptr i32 %v0_100031fc to i32*
  %v5_1000320c = call i32 @function_100006a8(i32 %v0_10003208, i32* %v4_1000320c, i32 6, i32 65535)
  %v0_10003210 = load i32, i32* @r28, align 4
  %v1_10003214 = urem i32 %v5_1000320c, 65536
  store i32 %v1_10003214, i32* %r22.global-to-local, align 4
  %v0_10003220 = load i32, i32* @r29, align 4
  store i32 %v0_10003220, i32* %r3.global-to-local, align 4
  store i32 268448296, i32* @lr, align 4
  %v4_10003224 = inttoptr i32 %v0_10003210 to i32*
  %v5_10003224 = call i32 @function_100006a8(i32 %v0_10003220, i32* %v4_10003224, i32 0, i32 512)
  %v0_10003228 = load i32, i32* @r28, align 4
  %v1_1000322c = urem i32 %v5_10003224, 65536
  store i32 %v1_1000322c, i32* @r31, align 4
  %v0_10003234 = load i32, i32* @r29, align 4
  store i32 %v0_10003234, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10003240.23 to i32), i32* @lr, align 4
  %v4_1000323c = inttoptr i32 %v0_10003228 to i32*
  %v5_1000323c = call i32 @function_100006a8(i32 %v0_10003234, i32* %v4_1000323c, i32 1, i32 1)
  store i32 %v5_1000323c, i32* %r3.global-to-local, align 4
  %v0_1000324c = load i32, i32* %r22.global-to-local, align 4
  %v4_1000324c = icmp eq i32 %v0_1000324c, 65535
  %v1_10003254 = urem i32 %v5_1000323c, 256
  store i32 %v1_10003254, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_1000324c, label %dec_label_pc_10003450, label %dec_label_pc_10003268

dec_label_pc_10003268:                            ; preds = %dec_label_pc_10003168, %dec_label_pc_10003450
  %v0_10003268 = load i32, i32* @r30, align 4
  %v1_10003268 = icmp slt i32 %v0_10003268, 0
  %v3_10003268 = icmp eq i32 %v0_10003268, 0
  store i1 %v1_10003268, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10003268, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10003268, 1
  br i1 %tmp38, label %dec_label_pc_10003328, label %dec_label_pc_10003270

dec_label_pc_10003270:                            ; preds = %dec_label_pc_10003268
  %v0_10003274 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003274, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10003280 = load i32, i32* %r21.global-to-local, align 4
  %v4_10003280 = icmp eq i32 %v0_10003280, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_100033d0 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10003280, label %dec_label_pc_100033a0, label %dec_label_pc_10003294

dec_label_pc_10003294:                            ; preds = %dec_label_pc_10003270, %dec_label_pc_10003308
  %v0_100032a0 = phi i32 [ %v0_1000331c, %dec_label_pc_10003308 ], [ 0, %dec_label_pc_10003270 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_100032a0 = add i32 %v0_100032a0, 1
  store i32 %v1_100032a0, i32* %r24.global-to-local, align 4
  store i32 268448424, i32* @lr, align 4
  %v2_100032a4 = call i32 @function_1000a148(i32 65535, i32 1)
  %v0_100032a8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100032a8 = trunc i32 %v0_100032a8 to i16
  %v2_100032a8 = load i32, i32* @r28, align 4
  %v3_100032a8 = add i32 %v2_100032a8, 2
  %v4_100032a8 = inttoptr i32 %v3_100032a8 to i16*
  store i16 %v1_100032a8, i16* %v4_100032a8, align 2
  %v1_100032ac = load i32, i32* %r25.global-to-local, align 4
  %v2_100032ac = load i32, i32* %r27.global-to-local, align 4
  %v3_100032ac = add i32 %v2_100032ac, %v1_100032ac
  %v4_100032ac = inttoptr i32 %v3_100032ac to i32*
  store i32 %v2_100032a4, i32* %v4_100032ac, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448448, i32* @lr, align 4
  %v3_100032bc = call i32 @function_10009dec(i32 2, i32 2, i32 17)
  store i32 %v3_100032bc, i32* %r3.global-to-local, align 4
  %v3_100032c4 = icmp eq i32 %v3_100032bc, -1
  %v1_100032cc = load i32, i32* %r25.global-to-local, align 4
  %v2_100032cc = load i32, i32* %r26.global-to-local, align 4
  %v3_100032cc = add i32 %v2_100032cc, %v1_100032cc
  %v4_100032cc = inttoptr i32 %v3_100032cc to i32*
  store i32 %v3_100032bc, i32* %v4_100032cc, align 4
  br i1 %v3_100032c4, label %dec_label_pc_10003404, label %dec_label_pc_100032d4

dec_label_pc_100032d4:                            ; preds = %dec_label_pc_10003294
  %v0_100032d4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100032d4, i32* %stack_var_-72, align 4
  store i32 268448484, i32* @lr, align 4
  %v0_100032e0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100032e0 = call i32 @function_10009bb8(i32 %v0_100032e0, i32 %v2_100033d0, i32 16)
  store i32 %v3_100032e0, i32* %r3.global-to-local, align 4
  %v0_100032e4 = load i32, i32* @r28, align 4
  %v1_100032e4 = add i32 %v0_100032e4, 20
  %v2_100032e4 = inttoptr i32 %v1_100032e4 to i8*
  %v3_100032e4 = load i8, i8* %v2_100032e4, align 1
  %v2_100032e8 = icmp ugt i8 %v3_100032e4, 31
  br i1 %v2_100032e8, label %dec_label_pc_10003308, label %dec_label_pc_100032f0

dec_label_pc_100032f0:                            ; preds = %dec_label_pc_100032d4
  %v1_100032f0 = add i32 %v0_100032e4, 16
  %v2_100032f0 = inttoptr i32 %v1_100032f0 to i32*
  %v3_100032f0 = load i32, i32* %v2_100032f0, align 4
  store i32 %v3_100032f0, i32* %r29.global-to-local, align 4
  %v0_100032f4 = call i32 @function_10005f3c()
  store i32 %v0_100032f4, i32* %r3.global-to-local, align 4
  %v0_100032f8 = load i32, i32* @r28, align 4
  %v1_100032f8 = add i32 %v0_100032f8, 20
  %v2_100032f8 = inttoptr i32 %v1_100032f8 to i8*
  %v3_100032f8 = load i8, i8* %v2_100032f8, align 1
  %tmp = urem i8 %v3_100032f8, 64
  %v2_100032fc = zext i8 %tmp to i32
  %v3_100032fc = lshr i32 %v0_100032f4, %v2_100032fc
  %v0_10003300 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003300 = add i32 %v3_100032fc, %v0_10003300
  store i32 %v2_10003300, i32* %r3.global-to-local, align 4
  %v2_10003304 = add i32 %v0_100032f8, 4
  %v3_10003304 = inttoptr i32 %v2_10003304 to i32*
  store i32 %v2_10003300, i32* %v3_10003304, align 4
  br label %dec_label_pc_10003308

dec_label_pc_10003308:                            ; preds = %dec_label_pc_100032d4, %dec_label_pc_100032f0
  %v0_10003308 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003308 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003308 = add i32 %v1_10003308, %v0_10003308
  %v3_10003308 = inttoptr i32 %v2_10003308 to i32*
  %v4_10003308 = load i32, i32* %v3_10003308, align 4
  store i32 %v4_10003308, i32* @r3, align 4
  %v1_10003314 = add i32 %v0_10003308, 4
  store i32 %v1_10003314, i32* %r25.global-to-local, align 4
  store i32 268448540, i32* @lr, align 4
  %v0_10003318 = call i32 @function_10009bec()
  store i32 %v0_10003318, i32* %r3.global-to-local, align 4
  %v0_1000331c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000331c = load i32, i32* @r30, align 4
  %v4_1000331c = icmp eq i32 %v0_1000331c, %v1_1000331c
  %v0_10003320 = load i32, i32* @r28, align 4
  %v1_10003320 = add i32 %v0_10003320, 24
  store i32 %v1_10003320, i32* @r28, align 4
  br i1 %v4_1000331c, label %dec_label_pc_10003328, label %dec_label_pc_10003294

dec_label_pc_10003328:                            ; preds = %dec_label_pc_10003308, %dec_label_pc_10003380, %dec_label_pc_10003268
  %v0_10003328 = load i32, i32* %r23.global-to-local, align 4
  %v3_10003328 = icmp eq i32 %v0_10003328, 0
  store i1 %v3_10003328, i1* %cr3_eq.global-to-local, align 1
  %v0_1000332c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000332c.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_1000332c.outer

dec_label_pc_1000332c.outer:                      ; preds = %dec_label_pc_10003360, %dec_label_pc_10003498, %dec_label_pc_10003328
  %v1_1000332c.ph39 = phi i1 [ %v1_1000332c.pre, %dec_label_pc_10003328 ], [ %v1_10003498, %dec_label_pc_10003498 ], [ %v1_10003360, %dec_label_pc_10003360 ]
  %v0_1000332c.ph40 = phi i1 [ %v0_1000332c.pre, %dec_label_pc_10003328 ], [ %v0_10003498, %dec_label_pc_10003498 ], [ %v0_10003360, %dec_label_pc_10003360 ]
  %v2_1000332c = or i1 %v1_1000332c.ph39, %v0_1000332c.ph40
  br label %dec_label_pc_1000332c

dec_label_pc_1000332c:                            ; preds = %dec_label_pc_1000332c.outer, %dec_label_pc_1000332c
  br i1 %v2_1000332c, label %dec_label_pc_1000332c, label %dec_label_pc_10003330

dec_label_pc_10003330:                            ; preds = %dec_label_pc_10003498, %dec_label_pc_10003360, %dec_label_pc_1000332c
  %v0_10003330 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003330, label %dec_label_pc_10003334, label %dec_label_pc_1000345c

dec_label_pc_10003334:                            ; preds = %dec_label_pc_10003330
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000333c

dec_label_pc_1000333c:                            ; preds = %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge, %dec_label_pc_10003334
  %v0_10003340 = phi i32 [ %v0_10003358, %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge ], [ 0, %dec_label_pc_10003334 ]
  %v0_10003350 = phi i32 [ %v0_1000333c.pre, %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge ], [ 0, %dec_label_pc_10003334 ]
  %v1_1000333c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000333c = add i32 %v1_1000333c, %v0_10003350
  %v3_1000333c = inttoptr i32 %v2_1000333c to i32*
  %v4_1000333c = load i32, i32* %v3_1000333c, align 4
  store i32 %v4_1000333c, i32* %r3.global-to-local, align 4
  %v1_10003340 = add i32 %v0_10003340, 1
  store i32 %v1_10003340, i32* %r28.global-to-local, align 4
  %v1_10003344 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003344 = add i32 %v1_10003344, %v0_10003350
  %v3_10003344 = inttoptr i32 %v2_10003344 to i32*
  %v4_10003344 = load i32, i32* %v3_10003344, align 4
  %v0_10003348 = load i32, i32* @r31, align 4
  %v1_10003350 = add i32 %v0_10003350, 4
  store i32 %v1_10003350, i32* %r29.global-to-local, align 4
  store i32 268448600, i32* @lr, align 4
  %v4_10003354 = call i32 @function_10009d38(i32 %v4_1000333c, i32 %v4_10003344, i32 %v0_10003348, i32 16384)
  store i32 %v4_10003354, i32* %r3.global-to-local, align 4
  %v0_10003358 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003358 = load i32, i32* @r30, align 4
  %v4_10003358 = icmp eq i32 %v0_10003358, %v1_10003358
  br i1 %v4_10003358, label %dec_label_pc_10003360, label %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge

dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge: ; preds = %dec_label_pc_1000333c
  %v0_1000333c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000333c

dec_label_pc_10003360:                            ; preds = %dec_label_pc_1000333c
  %v0_10003360 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003360 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003360 = or i1 %v0_10003360, %v1_10003360
  br i1 %v2_10003360, label %dec_label_pc_1000332c.outer, label %dec_label_pc_10003330

dec_label_pc_10003380:                            ; preds = %dec_label_pc_100033e4, %dec_label_pc_10003400
  %v0_10003380 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003380 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003380 = add i32 %v1_10003380, %v0_10003380
  %v3_10003380 = inttoptr i32 %v2_10003380 to i32*
  %v4_10003380 = load i32, i32* %v3_10003380, align 4
  store i32 %v4_10003380, i32* @r3, align 4
  %v1_1000338c = add i32 %v0_10003380, 4
  store i32 %v1_1000338c, i32* %r25.global-to-local, align 4
  store i32 268448660, i32* @lr, align 4
  %v0_10003390 = call i32 @function_10009bec()
  store i32 %v0_10003390, i32* %r3.global-to-local, align 4
  %v0_10003394 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003394 = load i32, i32* @r30, align 4
  %v4_10003394 = icmp eq i32 %v0_10003394, %v1_10003394
  %v0_10003398 = load i32, i32* @r28, align 4
  %v1_10003398 = add i32 %v0_10003398, 24
  store i32 %v1_10003398, i32* @r28, align 4
  br i1 %v4_10003394, label %dec_label_pc_10003328, label %dec_label_pc_100033a0

dec_label_pc_100033a0:                            ; preds = %dec_label_pc_10003270, %dec_label_pc_10003380
  %v0_100033ac = phi i32 [ %v0_10003394, %dec_label_pc_10003380 ], [ 0, %dec_label_pc_10003270 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_100033ac = add i32 %v0_100033ac, 1
  store i32 %v1_100033ac, i32* %r24.global-to-local, align 4
  store i32 268448692, i32* @lr, align 4
  %v2_100033b0 = call i32 @function_1000a148(i32 65535, i32 1)
  store i32 %v2_100033b0, i32* %r3.global-to-local, align 4
  %v1_100033b4 = load i32, i32* %r25.global-to-local, align 4
  %v2_100033b4 = load i32, i32* %r27.global-to-local, align 4
  %v3_100033b4 = add i32 %v2_100033b4, %v1_100033b4
  %v4_100033b4 = inttoptr i32 %v3_100033b4 to i32*
  store i32 %v2_100033b0, i32* %v4_100033b4, align 4
  %v0_100033b8 = call i32 @function_10005f3c()
  %v1_100033b8 = trunc i32 %v0_100033b8 to i16
  %v3_100033bc = load i32, i32* @r28, align 4
  %v4_100033bc = add i32 %v3_100033bc, 2
  %v5_100033bc = inttoptr i32 %v4_100033bc to i16*
  store i16 %v1_100033b8, i16* %v5_100033bc, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448720, i32* @lr, align 4
  %v3_100033cc = call i32 @function_10009dec(i32 2, i32 2, i32 17)
  store i32 %v3_100033cc, i32* %r3.global-to-local, align 4
  %v3_100033d4 = icmp eq i32 %v3_100033cc, -1
  %v1_100033dc = load i32, i32* %r25.global-to-local, align 4
  %v2_100033dc = load i32, i32* %r26.global-to-local, align 4
  %v3_100033dc = add i32 %v2_100033dc, %v1_100033dc
  %v4_100033dc = inttoptr i32 %v3_100033dc to i32*
  store i32 %v3_100033cc, i32* %v4_100033dc, align 4
  br i1 %v3_100033d4, label %dec_label_pc_10003404, label %dec_label_pc_100033e4

dec_label_pc_100033e4:                            ; preds = %dec_label_pc_100033a0
  %v0_100033e4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100033e4, i32* %stack_var_-72, align 4
  store i32 268448756, i32* @lr, align 4
  %v0_100033f0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100033f0 = call i32 @function_10009bb8(i32 %v0_100033f0, i32 %v2_100033d0, i32 16)
  store i32 %v3_100033f0, i32* %r3.global-to-local, align 4
  %v0_100033f4 = load i32, i32* @r28, align 4
  %v1_100033f4 = add i32 %v0_100033f4, 20
  %v2_100033f4 = inttoptr i32 %v1_100033f4 to i8*
  %v3_100033f4 = load i8, i8* %v2_100033f4, align 1
  %v2_100033f8 = icmp ugt i8 %v3_100033f4, 31
  br i1 %v2_100033f8, label %dec_label_pc_10003380, label %dec_label_pc_10003400

dec_label_pc_10003400:                            ; preds = %dec_label_pc_100033e4
  %v1_10003368 = add i32 %v0_100033f4, 16
  %v2_10003368 = inttoptr i32 %v1_10003368 to i32*
  %v3_10003368 = load i32, i32* %v2_10003368, align 4
  store i32 %v3_10003368, i32* %r29.global-to-local, align 4
  %v0_1000336c = call i32 @function_10005f3c()
  store i32 %v0_1000336c, i32* %r3.global-to-local, align 4
  %v0_10003370 = load i32, i32* @r28, align 4
  %v1_10003370 = add i32 %v0_10003370, 20
  %v2_10003370 = inttoptr i32 %v1_10003370 to i8*
  %v3_10003370 = load i8, i8* %v2_10003370, align 1
  %tmp43 = urem i8 %v3_10003370, 64
  %v2_10003374 = zext i8 %tmp43 to i32
  %v3_10003374 = lshr i32 %v0_1000336c, %v2_10003374
  %v0_10003378 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003378 = add i32 %v3_10003374, %v0_10003378
  store i32 %v2_10003378, i32* %r3.global-to-local, align 4
  %v2_1000337c = add i32 %v0_10003370, 4
  %v3_1000337c = inttoptr i32 %v2_1000337c to i32*
  store i32 %v2_10003378, i32* %v3_1000337c, align 4
  br label %dec_label_pc_10003380

dec_label_pc_10003404:                            ; preds = %dec_label_pc_10003294, %dec_label_pc_100033a0
  %v1_10003418 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10003170)
  store i32 %v0_1000319c, i32* %r28.global-to-local, align 4
  store i32 %v0_100031a4, i32* %r29.global-to-local, align 4
  %v0_1000344c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000344c

dec_label_pc_10003450:                            ; preds = %dec_label_pc_10003168
  %v0_10003450 = call i32 @function_10005f3c()
  store i32 %v0_10003450, i32* %r3.global-to-local, align 4
  %v1_10003454 = urem i32 %v0_10003450, 65536
  store i32 %v1_10003454, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10003268

dec_label_pc_1000345c:                            ; preds = %dec_label_pc_10003330
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10003464

dec_label_pc_10003464:                            ; preds = %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge, %dec_label_pc_1000345c
  %v0_1000346c = phi i32 [ %v0_10003490, %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge ], [ 0, %dec_label_pc_1000345c ]
  %v0_10003464 = phi i32 [ %v0_10003464.pre, %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge ], [ 0, %dec_label_pc_1000345c ]
  %v1_10003464 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003464 = add i32 %v1_10003464, %v0_10003464
  %v3_10003464 = inttoptr i32 %v2_10003464 to i32*
  %v4_10003464 = load i32, i32* %v3_10003464, align 4
  store i32 %v4_10003464, i32* @r29, align 4
  %v0_10003468 = load i32, i32* @r31, align 4
  store i32 %v0_10003468, i32* @r4, align 4
  %v1_1000346c = add i32 %v0_1000346c, 1
  store i32 %v1_1000346c, i32* %r25.global-to-local, align 4
  store i32 %v4_10003464, i32* @r3, align 4
  %v0_10003474 = call i32 @function_10006110()
  store i32 %v0_10003474, i32* %r3.global-to-local, align 4
  %v0_10003478 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003478 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003478 = add i32 %v1_10003478, %v0_10003478
  %v3_10003478 = inttoptr i32 %v2_10003478 to i32*
  %v4_10003478 = load i32, i32* %v3_10003478, align 4
  store i32 %v4_10003478, i32* %r3.global-to-local, align 4
  %v0_1000347c = load i32, i32* @r29, align 4
  %v0_10003480 = load i32, i32* @r31, align 4
  %v1_10003488 = add i32 %v0_10003478, 4
  store i32 %v1_10003488, i32* %r28.global-to-local, align 4
  store i32 268448912, i32* @lr, align 4
  %v4_1000348c = call i32 @function_10009d38(i32 %v4_10003478, i32 %v0_1000347c, i32 %v0_10003480, i32 16384)
  store i32 %v4_1000348c, i32* %r3.global-to-local, align 4
  %v0_10003490 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003490 = load i32, i32* @r30, align 4
  %v4_10003490 = icmp eq i32 %v0_10003490, %v1_10003490
  br i1 %v4_10003490, label %dec_label_pc_10003498, label %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge

dec_label_pc_10003464.dec_label_pc_10003464_crit_edge: ; preds = %dec_label_pc_10003464
  %v0_10003464.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10003464

dec_label_pc_10003498:                            ; preds = %dec_label_pc_10003464
  %v0_10003498 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003498 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003498 = or i1 %v0_10003498, %v1_10003498
  br i1 %v2_10003498, label %dec_label_pc_1000332c.outer, label %dec_label_pc_10003330

; uselistorder directives
  uselistorder i1 %v1_10003498, { 1, 0 }
  uselistorder i1 %v0_10003498, { 1, 0 }
  uselistorder i32 %v0_10003490, { 1, 0 }
  uselistorder i32 %v0_10003478, { 1, 0 }
  uselistorder i32 %v0_10003380, { 1, 0 }
  uselistorder i1 %v1_10003360, { 1, 0 }
  uselistorder i1 %v0_10003360, { 1, 0 }
  uselistorder i32 %v0_10003358, { 1, 0 }
  uselistorder i32 %v0_10003350, { 2, 0, 1 }
  uselistorder i32 %v0_1000331c, { 1, 0 }
  uselistorder i32 %v0_10003308, { 1, 0 }
  uselistorder i32 %v2_100033d0, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 21, 6, 7, 9, 10, 11, 12, 13, 14, 8, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder i8 31, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_10003404, { 1, 0 }
  uselistorder label %dec_label_pc_100033a0, { 1, 0 }
  uselistorder label %dec_label_pc_10003380, { 1, 0 }
  uselistorder label %dec_label_pc_1000332c, { 1, 0 }
  uselistorder label %dec_label_pc_1000332c.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003328, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003308, { 1, 0 }
  uselistorder label %dec_label_pc_10003294, { 1, 0 }
  uselistorder label %dec_label_pc_10003268, { 1, 0 }
}

define i32 @function_100034a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100034a0:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_100034a4 = load i32, i32* @lr, align 4
  store i32 %v0_100034a4, i32* %r0.global-to-local, align 4
  %v0_100034a8 = call i32 @__asm_mfcr()
  store i32 %v0_100034a8, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_100034b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100034a8, i32* %r19.global-to-local, align 4
  %v0_100034ec = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100034f4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100034fc = load i32, i32* @r30, align 4
  %v0_10003500 = load i32, i32* @r31, align 4
  store i32 268449044, i32* @lr, align 4
  %v2_10003510 = call i32 @function_1000a148(i32 4, i32 4)
  store i32 %v2_10003510, i32* %r20.global-to-local, align 4
  %v0_10003518 = load i32, i32* @r28, align 4
  %v0_10003524 = load i32, i32* @r29, align 4
  store i32 %v0_10003524, i32* %r3.global-to-local, align 4
  store i32 268449068, i32* @lr, align 4
  %v4_10003528 = inttoptr i32 %v0_10003518 to i32*
  %v5_10003528 = call i32 @function_100006a8(i32 %v0_10003524, i32* %v4_10003528, i32 2, i32 0)
  %v0_10003538 = load i32, i32* @r28, align 4
  %v1_1000353c = urem i32 %v5_10003528, 256
  store i32 %v1_1000353c, i32* %r15.global-to-local, align 4
  %v0_10003540 = load i32, i32* @r29, align 4
  store i32 %v0_10003540, i32* %r3.global-to-local, align 4
  store i32 268449096, i32* @lr, align 4
  %v4_10003544 = inttoptr i32 %v0_10003538 to i32*
  %v5_10003544 = call i32 @function_100006a8(i32 %v0_10003540, i32* %v4_10003544, i32 3, i32 65535)
  %v0_10003548 = load i32, i32* @r28, align 4
  store i32 %v5_10003544, i32* %r23.global-to-local, align 4
  %v0_10003558 = load i32, i32* @r29, align 4
  store i32 %v0_10003558, i32* %r3.global-to-local, align 4
  store i32 268449120, i32* @lr, align 4
  %v4_1000355c = inttoptr i32 %v0_10003548 to i32*
  %v5_1000355c = call i32 @function_100006a8(i32 %v0_10003558, i32* %v4_1000355c, i32 4, i32 64)
  %v0_10003560 = load i32, i32* @r28, align 4
  %v1_1000356c = urem i32 %v5_1000355c, 256
  store i32 %v1_1000356c, i32* %r16.global-to-local, align 4
  %v0_10003570 = load i32, i32* @r29, align 4
  store i32 %v0_10003570, i32* %r3.global-to-local, align 4
  store i32 268449144, i32* @lr, align 4
  %v4_10003574 = inttoptr i32 %v0_10003560 to i32*
  %v5_10003574 = call i32 @function_100006a8(i32 %v0_10003570, i32* %v4_10003574, i32 5, i32 0)
  %v0_10003584 = load i32, i32* @r28, align 4
  %v1_10003588 = urem i32 %v5_10003574, 256
  store i32 %v1_10003588, i32* @r31, align 4
  %v0_1000358c = load i32, i32* @r29, align 4
  store i32 %v0_1000358c, i32* %r3.global-to-local, align 4
  store i32 268449172, i32* @lr, align 4
  %v4_10003590 = inttoptr i32 %v0_10003584 to i32*
  %v5_10003590 = call i32 @function_100006a8(i32 %v0_1000358c, i32* %v4_10003590, i32 6, i32 65535)
  %v0_10003598 = load i32, i32* @r28, align 4
  store i32 %v5_10003590, i32* %r24.global-to-local, align 4
  %v0_100035a8 = load i32, i32* @r29, align 4
  store i32 %v0_100035a8, i32* %r3.global-to-local, align 4
  store i32 268449200, i32* @lr, align 4
  %v4_100035ac = inttoptr i32 %v0_10003598 to i32*
  %v5_100035ac = call i32 @function_100006a8(i32 %v0_100035a8, i32* %v4_100035ac, i32 7, i32 65535)
  %v0_100035b0 = load i32, i32* @r28, align 4
  store i32 %v5_100035ac, i32* %r25.global-to-local, align 4
  %v0_100035c0 = load i32, i32* @r29, align 4
  store i32 %v0_100035c0, i32* %r3.global-to-local, align 4
  store i32 268449224, i32* @lr, align 4
  %v4_100035c4 = inttoptr i32 %v0_100035b0 to i32*
  %v5_100035c4 = call i32 @function_100006a8(i32 %v0_100035c0, i32* %v4_100035c4, i32 0, i32 512)
  %v0_100035c8 = load i32, i32* @r28, align 4
  store i32 %v5_100035c4, i32* %r26.global-to-local, align 4
  %v0_100035d8 = load i32, i32* @r29, align 4
  store i32 %v0_100035d8, i32* %r3.global-to-local, align 4
  store i32 268449248, i32* @lr, align 4
  %v4_100035dc = inttoptr i32 %v0_100035c8 to i32*
  %v5_100035dc = call i32 @function_100006a8(i32 %v0_100035d8, i32* %v4_100035dc, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100035e4 = load i32, i32* @global_var_1001c208.14, align 4
  %v0_100035e8 = load i32, i32* @r28, align 4
  %v1_100035f0 = urem i32 %v5_100035dc, 256
  store i32 %v1_100035f0, i32* %r17.global-to-local, align 4
  %v0_100035f4 = load i32, i32* @r29, align 4
  store i32 %v0_100035f4, i32* %r3.global-to-local, align 4
  store i32 268449276, i32* @lr, align 4
  %v4_100035f8 = inttoptr i32 %v0_100035e8 to i32*
  %v5_100035f8 = call i32 @function_100006a8(i32 %v0_100035f4, i32* %v4_100035f8, i32 25, i32 %v3_100035e4)
  store i32 %v5_100035f8, i32* %r30.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268449296, i32* @lr, align 4
  %v3_1000360c = call i32 @function_10009dec(i32 2, i32 3, i32 17)
  store i32 %v3_1000360c, i32* %r3.global-to-local, align 4
  %v3_10003610 = icmp eq i32 %v3_1000360c, -1
  store i32 %v3_1000360c, i32* %r21.global-to-local, align 4
  br i1 %v3_10003610, label %dec_label_pc_1000386c, label %dec_label_pc_1000361c

dec_label_pc_1000361c:                            ; preds = %dec_label_pc_100034a0
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003628 = ptrtoint i32* %stack_var_-104 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268449336, i32* @lr, align 4
  %v4_10003634 = call i32 @function_10009db0(i32 0, i32 3, i32 %v2_10003628, i32 4)
  store i32 %v4_10003634, i32* %r3.global-to-local, align 4
  %v3_10003638 = icmp eq i32 %v4_10003634, -1
  br i1 %v3_10003638, label %dec_label_pc_10003864, label %dec_label_pc_10003640

dec_label_pc_10003640:                            ; preds = %dec_label_pc_1000361c
  %v0_10003640 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003640 = urem i32 %v0_10003640, 65536
  store i32 %v1_10003640, i32* %r18.global-to-local, align 4
  %v0_10003644 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003644 = urem i32 %v0_10003644, 65536
  store i32 %v1_10003644, i32* %r22.global-to-local, align 4
  %v0_1000364c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000364c = urem i32 %v0_1000364c, 65536
  store i32 %v1_1000364c, i32* %r23.global-to-local, align 4
  %v0_10003650 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003650 = urem i32 %v0_10003650, 65536
  store i32 %v1_10003650, i32* %r24.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10003640, 1461
  br i1 %tmp30, label %dec_label_pc_1000365c, label %dec_label_pc_10003658

dec_label_pc_10003658:                            ; preds = %dec_label_pc_10003640
  store i32 1460, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_1000365c

dec_label_pc_1000365c:                            ; preds = %dec_label_pc_10003640, %dec_label_pc_10003658
  %v0_1000396c = phi i32 [ %v1_10003640, %dec_label_pc_10003640 ], [ 1460, %dec_label_pc_10003658 ]
  %v0_1000365c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000365c = icmp slt i32 %v0_1000365c, 0
  %v3_1000365c = icmp eq i32 %v0_1000365c, 0
  store i1 %v1_1000365c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000365c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %tmp31 = icmp slt i32 %v0_1000365c, 1
  br i1 %tmp31, label %dec_label_pc_10003964, label %dec_label_pc_1000366c

dec_label_pc_1000366c:                            ; preds = %dec_label_pc_1000365c
  %v0_1000366c = load i32, i32* @r31, align 4
  %v3_1000366c = icmp eq i32 %v0_1000366c, 0
  %v1_10003670 = add nuw nsw i32 %v0_1000396c, 28
  store i32 %v1_10003670, i32* %r25.global-to-local, align 4
  %v1_10003674 = add nuw nsw i32 %v0_1000396c, 8
  store i32 %v1_10003674, i32* %r26.global-to-local, align 4
  %v1_10003678 = urem i32 %v1_10003670, 65536
  store i32 %v1_10003678, i32* @r28, align 4
  %v1_1000367c = urem i32 %v1_10003674, 65536
  store i32 %v1_1000367c, i32* @r29, align 4
  br i1 %v3_1000366c, label %dec_label_pc_10003684, label %dec_label_pc_100038cc

dec_label_pc_10003684:                            ; preds = %dec_label_pc_1000366c
  br label %dec_label_pc_10003688

dec_label_pc_10003688:                            ; preds = %dec_label_pc_10003688, %dec_label_pc_10003684
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268449428, i32* @lr, align 4
  %v2_10003690 = call i32 @function_1000a148(i32 1510, i32 1)
  store i32 %v2_10003690, i32* %r3.global-to-local, align 4
  %v3_10003694 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003694, i32* %r9.global-to-local, align 4
  %v0_10003698 = load i32, i32* @r31, align 4
  %v1_10003698 = mul i32 %v0_10003698, 4
  store i32 %v1_10003698, i32* %r0.global-to-local, align 4
  %v1_1000369c = load i32, i32* %r20.global-to-local, align 4
  %v3_1000369c = add i32 %v1_1000369c, %v1_10003698
  %v4_1000369c = inttoptr i32 %v3_1000369c to i32*
  store i32 %v2_10003690, i32* %v4_1000369c, align 4
  %v0_100036a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036a0 = mul i32 %v0_100036a0, 4
  store i32 %v1_100036a0, i32* %r9.global-to-local, align 4
  %v1_100036a4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100036a4 = add i32 %v1_100036a4, %v1_100036a0
  %v3_100036a4 = inttoptr i32 %v2_100036a4 to i32*
  %v4_100036a4 = load i32, i32* %v3_100036a4, align 4
  store i32 %v4_100036a4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100036ac = inttoptr i32 %v4_100036a4 to i32*
  %v2_100036ac = load i32, i32* %v1_100036ac, align 4
  store i32 %v2_100036ac, i32* %r0.global-to-local, align 4
  %v1_100036b0 = add i32 %v4_100036a4, 20
  store i32 %v1_100036b0, i32* %r10.global-to-local, align 4
  %v0_100036b4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100036b4 = trunc i32 %v0_100036b4 to i8
  %v3_100036b4 = add i32 %v4_100036a4, 8
  %v4_100036b4 = inttoptr i32 %v3_100036b4 to i8*
  store i8 %v1_100036b4, i8* %v4_100036b4, align 1
  %v1_100036b8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100036b8, i32* %r0.global-to-local, align 4
  %v0_100036bc = load i32, i32* @r30, align 4
  %v1_100036bc = load i32, i32* %r11.global-to-local, align 4
  %v2_100036bc = add i32 %v1_100036bc, 12
  %v3_100036bc = inttoptr i32 %v2_100036bc to i32*
  store i32 %v0_100036bc, i32* %v3_100036bc, align 4
  %v1_100036c0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100036c4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100036c4 = trunc i32 %v0_100036c4 to i16
  %v2_100036c4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036c4 = add i32 %v2_100036c4, 4
  %v4_100036c4 = inttoptr i32 %v3_100036c4 to i16*
  store i16 %v1_100036c4, i16* %v4_100036c4, align 2
  %v1_100036c8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100036c8 = inttoptr i32 %v1_100036c8 to i32*
  store i32 %v1_100036c0, i32* %v2_100036c8, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100036d0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036d0 = add i32 %v2_100036d0, 9
  %v4_100036d0 = inttoptr i32 %v3_100036d0 to i8*
  store i8 17, i8* %v4_100036d0, align 1
  %v0_100036d4 = load i32, i32* %r15.global-to-local, align 4
  %v1_100036d4 = trunc i32 %v0_100036d4 to i8
  %v2_100036d4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036d4 = add i32 %v2_100036d4, 1
  %v4_100036d4 = inttoptr i32 %v3_100036d4 to i8*
  store i8 %v1_100036d4, i8* %v4_100036d4, align 1
  %v0_100036d8 = load i32, i32* @r28, align 4
  %v1_100036d8 = trunc i32 %v0_100036d8 to i16
  %v2_100036d8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036d8 = add i32 %v2_100036d8, 2
  %v4_100036d8 = inttoptr i32 %v3_100036d8 to i16*
  store i16 %v1_100036d8, i16* %v4_100036d8, align 2
  %v3_100036dc = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100036dc, i32* %r9.global-to-local, align 4
  %v0_100036e0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100036e0 = trunc i32 %v0_100036e0 to i16
  %v2_100036e0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036e0 = add i32 %v2_100036e0, 20
  %v4_100036e0 = inttoptr i32 %v3_100036e0 to i16*
  store i16 %v1_100036e0, i16* %v4_100036e0, align 2
  %v0_100036e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036e4 = add i32 %v0_100036e4, 1
  store i32 %v1_100036e4, i32* %r31.global-to-local, align 4
  %v1_100036e8 = mul i32 %v0_100036e4, 24
  store i32 %v1_100036e8, i32* %r9.global-to-local, align 4
  %v1_100036ec = load i32, i32* %r19.global-to-local, align 4
  %v2_100036ec = icmp slt i32 %v1_100036e4, %v1_100036ec
  %v0_100036f0 = load i32, i32* @r29, align 4
  %v1_100036f0 = trunc i32 %v0_100036f0 to i16
  %v2_100036f0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100036f0 = add i32 %v2_100036f0, 4
  %v4_100036f0 = inttoptr i32 %v3_100036f0 to i16*
  store i16 %v1_100036f0, i16* %v4_100036f0, align 2
  %v0_100036f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036f4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100036f4 = add i32 %v1_100036f4, %v0_100036f4
  store i32 %v2_100036f4, i32* %r9.global-to-local, align 4
  %v0_100036f8 = load i32, i32* %r24.global-to-local, align 4
  %v1_100036f8 = trunc i32 %v0_100036f8 to i16
  %v2_100036f8 = load i32, i32* %r10.global-to-local, align 4
  %v3_100036f8 = add i32 %v2_100036f8, 2
  %v4_100036f8 = inttoptr i32 %v3_100036f8 to i16*
  store i16 %v1_100036f8, i16* %v4_100036f8, align 2
  %v0_100036fc = load i32, i32* %r9.global-to-local, align 4
  %v1_100036fc = add i32 %v0_100036fc, 16
  %v2_100036fc = inttoptr i32 %v1_100036fc to i32*
  %v3_100036fc = load i32, i32* %v2_100036fc, align 4
  store i32 %v3_100036fc, i32* %r0.global-to-local, align 4
  %v1_10003700 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003700 = add i32 %v1_10003700, 16
  %v3_10003700 = inttoptr i32 %v2_10003700 to i32*
  store i32 %v3_100036fc, i32* %v3_10003700, align 4
  %v0_10003704 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10003704, i32* %stack_var_-104, align 4
  br i1 %v2_100036ec, label %dec_label_pc_10003688, label %dec_label_pc_1000370c

dec_label_pc_1000370c:                            ; preds = %dec_label_pc_100038d4, %dec_label_pc_10003688
  %v0_1000370c = load i32, i32* @r30, align 4
  %v3_1000370c = icmp eq i32 %v0_1000370c, -1
  store i1 %v3_1000370c, i1* %cr2_eq.global-to-local, align 1
  %v0_10003710 = load i32, i32* %r17.global-to-local, align 4
  %v3_10003710 = icmp eq i32 %v0_10003710, 0
  store i1 %v3_10003710, i1* %cr3_eq.global-to-local, align 1
  %v0_10003714.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003714.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10003714.preheader

dec_label_pc_10003714.preheader:                  ; preds = %dec_label_pc_100037e0, %dec_label_pc_10003964, %dec_label_pc_1000370c
  %v1_10003714 = phi i1 [ %v1_1000365c, %dec_label_pc_10003964 ], [ %v1_10003714.pre, %dec_label_pc_1000370c ], [ %v1_100037e0, %dec_label_pc_100037e0 ]
  %v0_10003714 = phi i1 [ %v3_1000365c, %dec_label_pc_10003964 ], [ %v0_10003714.pre, %dec_label_pc_1000370c ], [ %v0_100037e0, %dec_label_pc_100037e0 ]
  %v2_10003714 = or i1 %v1_10003714, %v0_10003714
  br label %dec_label_pc_10003714

dec_label_pc_10003714:                            ; preds = %dec_label_pc_10003714.preheader, %dec_label_pc_10003714
  br i1 %v2_10003714, label %dec_label_pc_10003714, label %dec_label_pc_10003718

dec_label_pc_10003718:                            ; preds = %dec_label_pc_10003714, %dec_label_pc_100037e0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10003728

dec_label_pc_10003728:                            ; preds = %dec_label_pc_10003770, %dec_label_pc_10003718
  %v0_10003728 = phi i32 [ %v1_100037d0, %dec_label_pc_10003770 ], [ 0, %dec_label_pc_10003718 ]
  %v1_10003728 = mul i32 %v0_10003728, 24
  store i32 %v1_10003728, i32* %r0.global-to-local, align 4
  %v1_1000372c = mul i32 %v0_10003728, 4
  store i32 %v1_1000372c, i32* %r11.global-to-local, align 4
  %v1_10003730 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003730 = add i32 %v1_10003730, %v1_1000372c
  %v3_10003730 = inttoptr i32 %v2_10003730 to i32*
  %v4_10003730 = load i32, i32* %v3_10003730, align 4
  store i32 %v4_10003730, i32* %r28.global-to-local, align 4
  %v1_10003734 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003734 = add i32 %v1_10003734, %v1_10003728
  store i32 %v2_10003734, i32* %r10.global-to-local, align 4
  %v1_10003738 = add i32 %v2_10003734, 20
  %v2_10003738 = inttoptr i32 %v1_10003738 to i8*
  %v3_10003738 = load i8, i8* %v2_10003738, align 1
  %v4_10003738 = zext i8 %v3_10003738 to i32
  store i32 %v4_10003738, i32* %r9.global-to-local, align 4
  %v1_1000373c = add i32 %v4_10003730, 20
  store i32 %v1_1000373c, i32* @r31, align 4
  %tmp32 = icmp ult i8 %v3_10003738, 32
  br i1 %tmp32, label %dec_label_pc_100037e8, label %dec_label_pc_10003748

dec_label_pc_10003748:                            ; preds = %dec_label_pc_10003728
  %v0_10003748 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003748, label %dec_label_pc_10003810, label %dec_label_pc_1000374c

dec_label_pc_1000374c:                            ; preds = %dec_label_pc_100037e8, %dec_label_pc_10003748
  store i32 65535, i32* @r29, align 4
  %v0_10003754 = load i32, i32* %r22.global-to-local, align 4
  %v4_10003754 = icmp eq i32 %v0_10003754, 65535
  br i1 %v4_10003754, label %dec_label_pc_10003828, label %dec_label_pc_1000375c

dec_label_pc_1000375c:                            ; preds = %dec_label_pc_10003810, %dec_label_pc_1000374c
  %v1_1000375c = phi i32 [ %v1_10003820, %dec_label_pc_10003810 ], [ 65535, %dec_label_pc_1000374c ]
  %v0_1000375c = load i32, i32* %r23.global-to-local, align 4
  %v4_1000375c = icmp eq i32 %v0_1000375c, %v1_1000375c
  br i1 %v4_1000375c, label %dec_label_pc_10003838, label %dec_label_pc_10003764

dec_label_pc_10003764:                            ; preds = %dec_label_pc_10003828.dec_label_pc_10003764_crit_edge, %dec_label_pc_1000375c
  %v1_10003764 = phi i32 [ %v1_10003764.pre, %dec_label_pc_10003828.dec_label_pc_10003764_crit_edge ], [ %v1_1000375c, %dec_label_pc_1000375c ]
  %v0_10003764 = load i32, i32* %r24.global-to-local, align 4
  %v4_10003764 = icmp eq i32 %v0_10003764, %v1_10003764
  br i1 %v4_10003764, label %dec_label_pc_10003848, label %dec_label_pc_1000376c

dec_label_pc_1000376c:                            ; preds = %dec_label_pc_10003838, %dec_label_pc_10003764
  %v0_1000376c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000376c, label %dec_label_pc_10003770, label %dec_label_pc_10003854

dec_label_pc_10003770:                            ; preds = %dec_label_pc_1000376c, %dec_label_pc_10003848, %dec_label_pc_10003854
  %v0_10003770 = load i32, i32* @r30, align 4
  %v1_10003770 = trunc i32 %v0_10003770 to i16
  %v2_10003770 = load i32, i32* %r28.global-to-local, align 4
  %v3_10003770 = add i32 %v2_10003770, 10
  %v4_10003770 = inttoptr i32 %v3_10003770 to i16*
  store i16 %v1_10003770, i16* %v4_10003770, align 2
  %v0_10003778 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003778, i32* @r3, align 4
  %v2_1000377c = call i32 @function_100043cc(i32 %v0_10003778, i32 20)
  %v3_1000377c = trunc i32 %v2_1000377c to i16
  %v0_10003780 = load i32, i32* @r31, align 4
  store i32 %v0_10003780, i32* @r4, align 4
  %v4_10003784 = add i32 %v0_10003778, 10
  %v5_10003784 = inttoptr i32 %v4_10003784 to i16*
  store i16 %v3_1000377c, i16* %v5_10003784, align 2
  %v0_10003788 = load i32, i32* %r26.global-to-local, align 4
  %v0_1000378c = load i32, i32* @r30, align 4
  %v1_1000378c = trunc i32 %v0_1000378c to i16
  %v2_1000378c = load i32, i32* @r31, align 4
  %v3_1000378c = add i32 %v2_1000378c, 6
  %v4_1000378c = inttoptr i32 %v3_1000378c to i16*
  store i16 %v1_1000378c, i16* %v4_1000378c, align 2
  %v0_10003790 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003790, i32* %r3.global-to-local, align 4
  %v0_10003794 = load i32, i32* @r31, align 4
  %v1_10003794 = add i32 %v0_10003794, 4
  %v2_10003794 = inttoptr i32 %v1_10003794 to i16*
  %v3_10003794 = load i16, i16* %v2_10003794, align 2
  %v4_10003794 = zext i16 %v3_10003794 to i32
  %v4_10003798 = call i32 @function_10004430(i32 %v0_10003790, i32 %v0_10003780, i32 %v4_10003794, i32 %v0_10003788)
  %v5_10003798 = trunc i32 %v4_10003798 to i16
  store i32 %v4_10003798, i32* %r3.global-to-local, align 4
  %v3_1000379c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000379c, i32* %r7.global-to-local, align 4
  %v0_100037a0 = load i32, i32* @r31, align 4
  %v1_100037a0 = add i32 %v0_100037a0, 2
  %v2_100037a0 = inttoptr i32 %v1_100037a0 to i16*
  %v3_100037a0 = load i16, i16* %v2_100037a0, align 2
  %v4_100037a0 = zext i16 %v3_100037a0 to i32
  store i32 %v4_100037a0, i32* %r0.global-to-local, align 4
  %v0_100037a4 = load i32, i32* %r28.global-to-local, align 4
  %v1_100037a8 = mul i32 %v3_1000379c, 24
  store i32 %v1_100037a8, i32* %r7.global-to-local, align 4
  %v4_100037ac = add i32 %v0_100037a0, 6
  %v5_100037ac = inttoptr i32 %v4_100037ac to i16*
  store i16 %v5_10003798, i16* %v5_100037ac, align 2
  %v0_100037b0 = load i32, i32* %r25.global-to-local, align 4
  %v0_100037b4 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100037b4, i32* %r3.global-to-local, align 4
  %v0_100037b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_100037b8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100037b8 = add i32 %v1_100037b8, %v0_100037b8
  store i32 %v2_100037b8, i32* %r7.global-to-local, align 4
  %v0_100037c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100037c0 = trunc i32 %v0_100037c0 to i16
  %v3_100037c0 = add i32 %v2_100037b8, 2
  %v4_100037c0 = inttoptr i32 %v3_100037c0 to i16*
  store i16 %v1_100037c0, i16* %v4_100037c0, align 2
  store i32 268449740, i32* @lr, align 4
  %v6_100037c8 = call i32 @function_10009d70(i32 %v0_100037b4, i32 %v0_100037a4, i32 %v0_100037b0, i32 16384, i32 %v2_100037b8, i32 16)
  store i32 %v6_100037c8, i32* %r3.global-to-local, align 4
  %v3_100037cc = load i32, i32* %stack_var_-104, align 4
  %v1_100037d0 = add i32 %v3_100037cc, 1
  store i32 %v1_100037d0, i32* %r9.global-to-local, align 4
  %v1_100037d4 = load i32, i32* %r19.global-to-local, align 4
  %v2_100037d4 = icmp slt i32 %v1_100037d0, %v1_100037d4
  store i32 %v1_100037d0, i32* %stack_var_-104, align 4
  br i1 %v2_100037d4, label %dec_label_pc_10003728, label %dec_label_pc_100037e0

dec_label_pc_100037e0:                            ; preds = %dec_label_pc_10003770
  %v0_100037e0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100037e0 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100037e0 = or i1 %v0_100037e0, %v1_100037e0
  br i1 %v2_100037e0, label %dec_label_pc_10003714.preheader, label %dec_label_pc_10003718

dec_label_pc_100037e8:                            ; preds = %dec_label_pc_10003728
  %v1_100037e8 = add i32 %v2_10003734, 16
  %v2_100037e8 = inttoptr i32 %v1_100037e8 to i32*
  %v3_100037e8 = load i32, i32* %v2_100037e8, align 4
  store i32 %v3_100037e8, i32* %r29.global-to-local, align 4
  %v0_100037ec = call i32 @function_10005f3c()
  store i32 %v0_100037ec, i32* %r3.global-to-local, align 4
  %v3_100037f0 = load i32, i32* %stack_var_-104, align 4
  %v1_100037f4 = mul i32 %v3_100037f0, 24
  %v1_100037f8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100037f8 = add i32 %v1_100037f8, %v1_100037f4
  store i32 %v2_100037f8, i32* %r9.global-to-local, align 4
  %v1_100037fc = add i32 %v2_100037f8, 20
  %v2_100037fc = inttoptr i32 %v1_100037fc to i8*
  %v3_100037fc = load i8, i8* %v2_100037fc, align 1
  %v4_100037fc = zext i8 %v3_100037fc to i32
  store i32 %v4_100037fc, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100037fc, 64
  %v2_10003800 = zext i8 %tmp to i32
  %v3_10003800 = lshr i32 %v0_100037ec, %v2_10003800
  store i32 %v3_10003800, i32* %r3.global-to-local, align 4
  %v0_10003804 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003804 = add i32 %v3_10003800, %v0_10003804
  store i32 %v2_10003804, i32* %r29.global-to-local, align 4
  %v1_10003808 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003808 = add i32 %v1_10003808, 16
  %v3_10003808 = inttoptr i32 %v2_10003808 to i32*
  store i32 %v2_10003804, i32* %v3_10003808, align 4
  %v0_1000380c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000380c, label %dec_label_pc_10003810, label %dec_label_pc_1000374c

dec_label_pc_10003810:                            ; preds = %dec_label_pc_100037e8, %dec_label_pc_10003748
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003814 = call i32 @function_10005f3c()
  store i32 %v0_10003814, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_1000381c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000381c = add i32 %v1_1000381c, 12
  %v3_1000381c = inttoptr i32 %v2_1000381c to i32*
  store i32 %v0_10003814, i32* %v3_1000381c, align 4
  %v0_10003820 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003820 = load i32, i32* @r29, align 4
  %v4_10003820 = icmp eq i32 %v0_10003820, %v1_10003820
  br i1 %v4_10003820, label %dec_label_pc_10003828, label %dec_label_pc_1000375c

dec_label_pc_10003828:                            ; preds = %dec_label_pc_10003810, %dec_label_pc_1000374c
  %v0_10003828 = call i32 @function_10005f3c()
  %v1_10003828 = trunc i32 %v0_10003828 to i16
  store i32 %v0_10003828, i32* %r3.global-to-local, align 4
  %v0_1000382c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000382c = load i32, i32* @r29, align 4
  %v4_1000382c = icmp eq i32 %v0_1000382c, %v1_1000382c
  %v3_10003830 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003830 = add i32 %v3_10003830, 4
  %v5_10003830 = inttoptr i32 %v4_10003830 to i16*
  store i16 %v1_10003828, i16* %v5_10003830, align 2
  br i1 %v4_1000382c, label %dec_label_pc_10003838, label %dec_label_pc_10003828.dec_label_pc_10003764_crit_edge

dec_label_pc_10003828.dec_label_pc_10003764_crit_edge: ; preds = %dec_label_pc_10003828
  %v1_10003764.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003764

dec_label_pc_10003838:                            ; preds = %dec_label_pc_10003828, %dec_label_pc_1000375c
  %v0_10003838 = call i32 @function_10005f3c()
  %v1_10003838 = trunc i32 %v0_10003838 to i16
  store i32 %v0_10003838, i32* %r3.global-to-local, align 4
  %v0_1000383c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000383c = load i32, i32* @r29, align 4
  %v4_1000383c = icmp eq i32 %v0_1000383c, %v1_1000383c
  %v3_10003840 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003840 = add i32 %v3_10003840, 20
  %v5_10003840 = inttoptr i32 %v4_10003840 to i16*
  store i16 %v1_10003838, i16* %v5_10003840, align 2
  br i1 %v4_1000383c, label %dec_label_pc_10003848, label %dec_label_pc_1000376c

dec_label_pc_10003848:                            ; preds = %dec_label_pc_10003838, %dec_label_pc_10003764
  %v0_10003848 = call i32 @function_10005f3c()
  %v1_10003848 = trunc i32 %v0_10003848 to i16
  store i32 %v0_10003848, i32* %r3.global-to-local, align 4
  %v3_1000384c = load i32, i32* @r31, align 4
  %v4_1000384c = add i32 %v3_1000384c, 2
  %v5_1000384c = inttoptr i32 %v4_1000384c to i16*
  store i16 %v1_10003848, i16* %v5_1000384c, align 2
  %v0_10003850 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003850, label %dec_label_pc_10003770, label %dec_label_pc_10003854

dec_label_pc_10003854:                            ; preds = %dec_label_pc_1000376c, %dec_label_pc_10003848
  %v0_10003854 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003854 = add i32 %v0_10003854, 28
  store i32 %v1_10003854, i32* @r3, align 4
  %v0_10003858 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10003858, i32* @r4, align 4
  %v0_1000385c = call i32 @function_10006110()
  store i32 %v0_1000385c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003770

dec_label_pc_10003864:                            ; preds = %dec_label_pc_1000361c
  %v0_10003864 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10003864, i32* %r3.global-to-local, align 4
  store i32 268449900, i32* @lr, align 4
  %v0_10003868 = call i32 @function_1000909c()
  store i32 %v0_10003868, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000386c

dec_label_pc_1000386c:                            ; preds = %dec_label_pc_100034a0, %dec_label_pc_10003864
  store i32 %v0_100034b8, i32* %r0.global-to-local, align 4
  %v1_10003880 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100034a8)
  store i32 %v0_100034ec, i32* %r28.global-to-local, align 4
  store i32 %v0_100034f4, i32* %r29.global-to-local, align 4
  store i32 %v0_100034fc, i32* %r30.global-to-local, align 4
  store i32 %v0_10003500, i32* %r31.global-to-local, align 4
  %v0_100038c8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100038c8

dec_label_pc_100038cc:                            ; preds = %dec_label_pc_1000366c
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100038d4

dec_label_pc_100038d4:                            ; preds = %dec_label_pc_100038d4, %dec_label_pc_100038cc
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268450016, i32* @lr, align 4
  %v2_100038dc = call i32 @function_1000a148(i32 1510, i32 1)
  store i32 %v2_100038dc, i32* %r3.global-to-local, align 4
  %v3_100038e0 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100038e0, i32* %r9.global-to-local, align 4
  %v0_100038e4 = load i32, i32* @r31, align 4
  %v1_100038e4 = mul i32 %v0_100038e4, 4
  store i32 %v1_100038e4, i32* %r0.global-to-local, align 4
  %v1_100038e8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100038e8 = add i32 %v1_100038e8, %v1_100038e4
  %v4_100038e8 = inttoptr i32 %v3_100038e8 to i32*
  store i32 %v2_100038dc, i32* %v4_100038e8, align 4
  %v0_100038ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100038ec = mul i32 %v0_100038ec, 4
  store i32 %v1_100038ec, i32* %r9.global-to-local, align 4
  %v1_100038f0 = load i32, i32* %r20.global-to-local, align 4
  %v2_100038f0 = add i32 %v1_100038f0, %v1_100038ec
  %v3_100038f0 = inttoptr i32 %v2_100038f0 to i32*
  %v4_100038f0 = load i32, i32* %v3_100038f0, align 4
  store i32 %v4_100038f0, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100038f8 = inttoptr i32 %v4_100038f0 to i32*
  %v2_100038f8 = load i32, i32* %v1_100038f8, align 4
  store i32 %v2_100038f8, i32* %r0.global-to-local, align 4
  %v1_100038fc = add i32 %v4_100038f0, 20
  store i32 %v1_100038fc, i32* %r10.global-to-local, align 4
  %v0_10003900 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003900 = trunc i32 %v0_10003900 to i8
  %v3_10003900 = add i32 %v4_100038f0, 8
  %v4_10003900 = inttoptr i32 %v3_10003900 to i8*
  store i8 %v1_10003900, i8* %v4_10003900, align 1
  %v1_10003904 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003904, i32* %r0.global-to-local, align 4
  %v0_10003908 = load i32, i32* @r30, align 4
  %v1_10003908 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003908 = add i32 %v1_10003908, 12
  %v3_10003908 = inttoptr i32 %v2_10003908 to i32*
  store i32 %v0_10003908, i32* %v3_10003908, align 4
  %v1_1000390c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10003910 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003910 = trunc i32 %v0_10003910 to i16
  %v2_10003910 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003910 = add i32 %v2_10003910, 4
  %v4_10003910 = inttoptr i32 %v3_10003910 to i16*
  store i16 %v1_10003910, i16* %v4_10003910, align 2
  %v1_10003914 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003914 = inttoptr i32 %v1_10003914 to i32*
  store i32 %v1_1000390c, i32* %v2_10003914, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_1000391c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000391c = add i32 %v2_1000391c, 9
  %v4_1000391c = inttoptr i32 %v3_1000391c to i8*
  store i8 17, i8* %v4_1000391c, align 1
  %v0_10003920 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003920 = trunc i32 %v0_10003920 to i8
  %v2_10003920 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003920 = add i32 %v2_10003920, 1
  %v4_10003920 = inttoptr i32 %v3_10003920 to i8*
  store i8 %v1_10003920, i8* %v4_10003920, align 1
  %v0_10003924 = load i32, i32* @r28, align 4
  %v1_10003924 = trunc i32 %v0_10003924 to i16
  %v2_10003924 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003924 = add i32 %v2_10003924, 2
  %v4_10003924 = inttoptr i32 %v3_10003924 to i16*
  store i16 %v1_10003924, i16* %v4_10003924, align 2
  %v3_10003928 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003928, i32* %r9.global-to-local, align 4
  %v0_1000392c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000392c = trunc i32 %v0_1000392c to i16
  %v2_1000392c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000392c = add i32 %v2_1000392c, 20
  %v4_1000392c = inttoptr i32 %v3_1000392c to i16*
  store i16 %v1_1000392c, i16* %v4_1000392c, align 2
  %v0_10003930 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003930 = add i32 %v0_10003930, 1
  store i32 %v1_10003930, i32* %r31.global-to-local, align 4
  %v1_10003934 = mul i32 %v0_10003930, 24
  %v1_10003938 = load i32, i32* %r19.global-to-local, align 4
  %v2_10003938 = icmp slt i32 %v1_10003930, %v1_10003938
  %v1_1000393c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000393c = add i32 %v1_1000393c, %v1_10003934
  store i32 %v2_1000393c, i32* %r9.global-to-local, align 4
  %v1_10003940 = add i32 %v2_1000393c, 16
  %v2_10003940 = inttoptr i32 %v1_10003940 to i32*
  %v3_10003940 = load i32, i32* %v2_10003940, align 4
  store i32 %v3_10003940, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r9.global-to-local, align 4
  %v2_10003948 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003948 = add i32 %v2_10003948, 6
  %v4_10003948 = inttoptr i32 %v3_10003948 to i16*
  store i16 16384, i16* %v4_10003948, align 2
  %v0_1000394c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000394c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000394c = add i32 %v1_1000394c, 16
  %v3_1000394c = inttoptr i32 %v2_1000394c to i32*
  store i32 %v0_1000394c, i32* %v3_1000394c, align 4
  %v0_10003950 = load i32, i32* @r29, align 4
  %v1_10003950 = trunc i32 %v0_10003950 to i16
  %v2_10003950 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003950 = add i32 %v2_10003950, 4
  %v4_10003950 = inttoptr i32 %v3_10003950 to i16*
  store i16 %v1_10003950, i16* %v4_10003950, align 2
  %v0_10003954 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003954 = trunc i32 %v0_10003954 to i16
  %v2_10003954 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003954 = add i32 %v2_10003954, 2
  %v4_10003954 = inttoptr i32 %v3_10003954 to i16*
  store i16 %v1_10003954, i16* %v4_10003954, align 2
  %v0_10003958 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10003958, i32* %stack_var_-104, align 4
  br i1 %v2_10003938, label %dec_label_pc_100038d4, label %dec_label_pc_1000370c

dec_label_pc_10003964:                            ; preds = %dec_label_pc_1000365c
  %v0_10003964 = load i32, i32* %r30.global-to-local, align 4
  %v3_10003964 = icmp eq i32 %v0_10003964, -1
  store i1 %v3_10003964, i1* %cr2_eq.global-to-local, align 1
  %v0_10003968 = load i32, i32* %r17.global-to-local, align 4
  %v3_10003968 = icmp eq i32 %v0_10003968, 0
  store i1 %v3_10003968, i1* %cr3_eq.global-to-local, align 1
  %v1_1000396c = add nuw nsw i32 %v0_1000396c, 28
  store i32 %v1_1000396c, i32* %r25.global-to-local, align 4
  %v1_10003970 = add nuw nsw i32 %v0_1000396c, 8
  store i32 %v1_10003970, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003714.preheader

; uselistorder directives
  uselistorder i32 %v1_100038ec, { 1, 0 }
  uselistorder i32 %v1_100038e4, { 1, 0 }
  uselistorder i32 %v0_10003848, { 1, 0 }
  uselistorder i32 %v0_10003838, { 1, 0 }
  uselistorder i32 %v0_10003828, { 1, 0 }
  uselistorder i32 %v1_10003820, { 1, 0 }
  uselistorder i1 %v1_100037e0, { 1, 0 }
  uselistorder i1 %v0_100037e0, { 1, 0 }
  uselistorder i32 %v1_100037d0, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003798, { 1, 0 }
  uselistorder i32 %v1_1000372c, { 1, 0 }
  uselistorder i32 %v1_100036a0, { 1, 0 }
  uselistorder i32 %v1_10003698, { 1, 0 }
  uselistorder i32 %v0_1000396c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10003640, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 20, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32* %r18.global-to-local, { 1, 2, 0 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_10006110, { 10, 9, 8, 7, 6, 5, 4, 3, 0, 1, 2 }
  uselistorder i32 1510, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder label %dec_label_pc_1000386c, { 1, 0 }
  uselistorder label %dec_label_pc_10003854, { 1, 0 }
  uselistorder label %dec_label_pc_10003770, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003718, { 1, 0 }
  uselistorder label %dec_label_pc_10003714, { 1, 0 }
  uselistorder label %dec_label_pc_10003714.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000365c, { 1, 0 }
}

define i32 @function_1000397c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000397c:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v0_10003980 = load i32, i32* @lr, align 4
  store i32 %v0_10003980, i32* %r0.global-to-local, align 4
  %v0_10003984 = call i32 @__asm_mfcr()
  store i32 %v0_10003984, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  store i32 %v0_10003984, i32* %r23.global-to-local, align 4
  %v0_100039bc = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100039c4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100039cc = load i32, i32* @r30, align 4
  store i32 268450284, i32* @lr, align 4
  %v2_100039e8 = call i32 @function_1000a148(i32 4, i32 4)
  store i32 %v2_100039e8, i32* %r24.global-to-local, align 4
  %v0_100039f0 = load i32, i32* @r28, align 4
  %v0_100039f4 = load i32, i32* @r29, align 4
  store i32 %v0_100039f4, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 268450308, i32* @lr, align 4
  %v4_10003a00 = inttoptr i32 %v0_100039f0 to i32*
  %v5_10003a00 = call i32 @function_100006a8(i32 %v0_100039f4, i32* %v4_10003a00, i32 2, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v0_10003a10 = load i32, i32* @r28, align 4
  %v1_10003a14 = urem i32 %v5_10003a00, 256
  store i32 %v1_10003a14, i32* %r19.global-to-local, align 4
  %v0_10003a18 = load i32, i32* @r29, align 4
  store i32 %v0_10003a18, i32* %r3.global-to-local, align 4
  store i32 268450336, i32* @lr, align 4
  %v4_10003a1c = inttoptr i32 %v0_10003a10 to i32*
  %v5_10003a1c = call i32 @function_100006a8(i32 %v0_10003a18, i32* %v4_10003a1c, i32 3, i32 65535)
  %v0_10003a20 = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 64, i32* %r6.global-to-local, align 4
  store i32 %v5_10003a1c, i32* %r21.global-to-local, align 4
  %v0_10003a30 = load i32, i32* @r29, align 4
  store i32 %v0_10003a30, i32* %r3.global-to-local, align 4
  store i32 268450360, i32* @lr, align 4
  %v4_10003a34 = inttoptr i32 %v0_10003a20 to i32*
  %v5_10003a34 = call i32 @function_100006a8(i32 %v0_10003a30, i32* %v4_10003a34, i32 4, i32 64)
  %v0_10003a38 = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_10003a44 = urem i32 %v5_10003a34, 256
  store i32 %v1_10003a44, i32* %r26.global-to-local, align 4
  %v0_10003a48 = load i32, i32* @r29, align 4
  store i32 %v0_10003a48, i32* %r3.global-to-local, align 4
  store i32 268450384, i32* @lr, align 4
  %v4_10003a4c = inttoptr i32 %v0_10003a38 to i32*
  %v5_10003a4c = call i32 @function_100006a8(i32 %v0_10003a48, i32* %v4_10003a4c, i32 5, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_10003a5c = load i32, i32* @r28, align 4
  %v1_10003a60 = urem i32 %v5_10003a4c, 256
  store i32 %v1_10003a60, i32* @r31, align 4
  %v0_10003a64 = load i32, i32* @r29, align 4
  store i32 %v0_10003a64, i32* %r3.global-to-local, align 4
  store i32 268450412, i32* @lr, align 4
  %v4_10003a68 = inttoptr i32 %v0_10003a5c to i32*
  %v5_10003a68 = call i32 @function_100006a8(i32 %v0_10003a64, i32* %v4_10003a68, i32 6, i32 65535)
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 27015, i32* %r6.global-to-local, align 4
  %v0_10003a74 = load i32, i32* @r28, align 4
  store i32 %v5_10003a68, i32* %r22.global-to-local, align 4
  %v0_10003a7c = load i32, i32* @r29, align 4
  store i32 %v0_10003a7c, i32* %r3.global-to-local, align 4
  store i32 268450436, i32* @lr, align 4
  %v4_10003a80 = inttoptr i32 %v0_10003a74 to i32*
  %v5_10003a80 = call i32 @function_100006a8(i32 %v0_10003a7c, i32* %v4_10003a80, i32 7, i32 27015)
  store i32 %v5_10003a80, i32* %r29.global-to-local, align 4
  store i32 25, i32* %r3.global-to-local, align 4
  store i32 268450448, i32* @lr, align 4
  %v1_10003a8c = call i32 @function_10008278(i32 25)
  store i32 25, i32* %r3.global-to-local, align 4
  %v3_10003a98 = call i32 @function_100081c4(i32 25, i32* nonnull %stack_var_-84)
  store i32 %v3_10003a98, i32* %r30.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268450480, i32* @lr, align 4
  %v3_10003aac = call i32 @function_10009dec(i32 2, i32 3, i32 17)
  store i32 %v3_10003aac, i32* %r3.global-to-local, align 4
  %v3_10003ab0 = icmp eq i32 %v3_10003aac, -1
  store i32 %v3_10003aac, i32* %r25.global-to-local, align 4
  br i1 %v3_10003ab0, label %dec_label_pc_10003d00, label %dec_label_pc_10003abc

dec_label_pc_10003abc:                            ; preds = %dec_label_pc_1000397c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10003ac8 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10003ac8, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-88, align 4
  store i32 268450520, i32* @lr, align 4
  %v4_10003ad4 = call i32 @function_10009db0(i32 0, i32 3, i32 %v2_10003ac8, i32 4)
  store i32 %v4_10003ad4, i32* %r3.global-to-local, align 4
  %v3_10003ad8 = icmp eq i32 %v4_10003ad4, -1
  br i1 %v3_10003ad8, label %dec_label_pc_10003cf8, label %dec_label_pc_10003ae0

dec_label_pc_10003ae0:                            ; preds = %dec_label_pc_10003abc
  %v0_10003ae0 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003ae0 = icmp slt i32 %v0_10003ae0, 0
  %v3_10003ae0 = icmp eq i32 %v0_10003ae0, 0
  store i1 %v1_10003ae0, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10003ae0, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10003ae8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003ae8 = urem i32 %v0_10003ae8, 65536
  store i32 %v1_10003ae8, i32* %r20.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  %v0_10003af0 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003af0 = urem i32 %v0_10003af0, 65536
  store i32 %v1_10003af0, i32* %r21.global-to-local, align 4
  %v0_10003af4 = load i32, i32* %r29.global-to-local, align 4
  %v1_10003af4 = urem i32 %v0_10003af4, 65536
  store i32 %v1_10003af4, i32* %r22.global-to-local, align 4
  %tmp32 = icmp slt i32 %v0_10003ae0, 1
  br i1 %tmp32, label %dec_label_pc_10003bcc.outer, label %dec_label_pc_10003afc

dec_label_pc_10003afc:                            ; preds = %dec_label_pc_10003ae0
  %v0_10003afc = load i32, i32* @r31, align 4
  %v3_10003afc = icmp eq i32 %v0_10003afc, 0
  store i1 %v3_10003afc, i1* %cr3_eq.global-to-local, align 1
  store i32 4, i32* %r29.global-to-local, align 4
  store i32 5, i32* %r28.global-to-local, align 4
  store i32 16384, i32* %r18.global-to-local, align 4
  store i32 17, i32* %r17.global-to-local, align 4
  store i32 -1, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10003b1c

dec_label_pc_10003b1c:                            ; preds = %dec_label_pc_10003b78, %dec_label_pc_10003afc
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268450600, i32* @lr, align 4
  %v2_10003b24 = call i32 @function_1000a148(i32 128, i32 1)
  store i32 %v2_10003b24, i32* %r3.global-to-local, align 4
  %v3_10003b28 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003b28, i32* %r0.global-to-local, align 4
  %v0_10003b2c = load i32, i32* @r31, align 4
  %v1_10003b2c = mul i32 %v0_10003b2c, 4
  store i32 %v1_10003b2c, i32* %r9.global-to-local, align 4
  %v0_10003b30 = load i32, i32* @r30, align 4
  %v2_10003b34 = load i32, i32* %r24.global-to-local, align 4
  %v3_10003b34 = add i32 %v2_10003b34, %v1_10003b2c
  %v4_10003b34 = inttoptr i32 %v3_10003b34 to i32*
  store i32 %v2_10003b24, i32* %v4_10003b34, align 4
  %v0_10003b38 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b38 = mul i32 %v0_10003b38, 4
  store i32 %v1_10003b38, i32* %r0.global-to-local, align 4
  %v0_10003b3c = load i32, i32* %r24.global-to-local, align 4
  %v2_10003b3c = add i32 %v0_10003b3c, %v1_10003b38
  %v3_10003b3c = inttoptr i32 %v2_10003b3c to i32*
  %v4_10003b3c = load i32, i32* %v3_10003b3c, align 4
  store i32 %v4_10003b3c, i32* %r10.global-to-local, align 4
  %v1_10003b40 = inttoptr i32 %v4_10003b3c to i32*
  %v2_10003b40 = load i32, i32* %v1_10003b40, align 4
  store i32 %v2_10003b40, i32* %r0.global-to-local, align 4
  %v1_10003b44 = add i32 %v4_10003b3c, 32
  store i32 %v1_10003b44, i32* %r3.global-to-local, align 4
  %v0_10003b48 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003b48 = trunc i32 %v0_10003b48 to i16
  %v3_10003b48 = add i32 %v4_10003b3c, 4
  %v4_10003b48 = inttoptr i32 %v3_10003b48 to i16*
  store i16 %v1_10003b48, i16* %v4_10003b48, align 2
  %v0_10003b4c = load i32, i32* %r10.global-to-local, align 4
  %v1_10003b4c = add i32 %v0_10003b4c, 20
  store i32 %v1_10003b4c, i32* %r8.global-to-local, align 4
  %v1_10003b50 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003b50, i32* %r0.global-to-local, align 4
  %v1_10003b54 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10003b54, i32* %r0.global-to-local, align 4
  %v1_10003b58 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003b58 = inttoptr i32 %v1_10003b58 to i32*
  store i32 %v1_10003b54, i32* %v2_10003b58, align 4
  %v0_10003b5c = load i32, i32* %r19.global-to-local, align 4
  %v1_10003b5c = trunc i32 %v0_10003b5c to i8
  %v2_10003b5c = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b5c = add i32 %v2_10003b5c, 1
  %v4_10003b5c = inttoptr i32 %v3_10003b5c to i8*
  store i8 %v1_10003b5c, i8* %v4_10003b5c, align 1
  %v3_10003b60 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003b60, i32* %r9.global-to-local, align 4
  %v0_10003b64 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003b64 = trunc i32 %v0_10003b64 to i8
  %v2_10003b64 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b64 = add i32 %v2_10003b64, 8
  %v4_10003b64 = inttoptr i32 %v3_10003b64 to i8*
  store i8 %v1_10003b64, i8* %v4_10003b64, align 1
  %v0_10003b68 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003b68 = add i32 %v0_10003b68, 32
  store i32 %v1_10003b68, i32* %r9.global-to-local, align 4
  %v1_10003b6c = trunc i32 %v1_10003b68 to i16
  %v2_10003b6c = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b6c = add i32 %v2_10003b6c, 2
  %v4_10003b6c = inttoptr i32 %v3_10003b6c to i16*
  store i16 %v1_10003b6c, i16* %v4_10003b6c, align 2
  %v0_10003b70 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003b70, label %dec_label_pc_10003b78, label %dec_label_pc_10003b74

dec_label_pc_10003b74:                            ; preds = %dec_label_pc_10003b1c
  %v0_10003b74 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003b74 = trunc i32 %v0_10003b74 to i16
  %v2_10003b74 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b74 = add i32 %v2_10003b74, 6
  %v4_10003b74 = inttoptr i32 %v3_10003b74 to i16*
  store i16 %v1_10003b74, i16* %v4_10003b74, align 2
  br label %dec_label_pc_10003b78

dec_label_pc_10003b78:                            ; preds = %dec_label_pc_10003b1c, %dec_label_pc_10003b74
  %v0_10003b78 = load i32, i32* %r17.global-to-local, align 4
  %v1_10003b78 = trunc i32 %v0_10003b78 to i8
  %v2_10003b78 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b78 = add i32 %v2_10003b78, 9
  %v4_10003b78 = inttoptr i32 %v3_10003b78 to i8*
  store i8 %v1_10003b78, i8* %v4_10003b78, align 1
  %v0_10003b7c = load i32, i32* %r21.global-to-local, align 4
  %v1_10003b7c = trunc i32 %v0_10003b7c to i16
  %v2_10003b7c = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b7c = add i32 %v2_10003b7c, 20
  %v4_10003b7c = inttoptr i32 %v3_10003b7c to i16*
  store i16 %v1_10003b7c, i16* %v4_10003b7c, align 2
  %v3_10003b80 = load i32, i32* %stack_var_-88, align 4
  %v3_10003b84 = load i32, i32* @global_var_1001c208.14, align 4
  store i32 %v3_10003b84, i32* %r0.global-to-local, align 4
  %v1_10003b88 = mul i32 %v3_10003b80, 24
  store i32 %v1_10003b88, i32* %r9.global-to-local, align 4
  %v0_10003b8c = load i32, i32* %r22.global-to-local, align 4
  %v1_10003b8c = trunc i32 %v0_10003b8c to i16
  %v2_10003b8c = load i32, i32* %r8.global-to-local, align 4
  %v3_10003b8c = add i32 %v2_10003b8c, 2
  %v4_10003b8c = inttoptr i32 %v3_10003b8c to i16*
  store i16 %v1_10003b8c, i16* %v4_10003b8c, align 2
  %v0_10003b90 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b90 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003b90 = add i32 %v1_10003b90, 12
  %v3_10003b90 = inttoptr i32 %v2_10003b90 to i32*
  store i32 %v0_10003b90, i32* %v3_10003b90, align 4
  %v0_10003b94 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003b94 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003b94 = add i32 %v1_10003b94, %v0_10003b94
  store i32 %v2_10003b94, i32* %r9.global-to-local, align 4
  %v1_10003b98 = add i32 %v2_10003b94, 16
  %v2_10003b98 = inttoptr i32 %v1_10003b98 to i32*
  %v3_10003b98 = load i32, i32* %v2_10003b98, align 4
  store i32 %v3_10003b98, i32* %r0.global-to-local, align 4
  %v3_10003b9c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003b9c, i32* %r11.global-to-local, align 4
  %v0_10003ba0 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003ba0 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003ba0 = add i32 %v1_10003ba0, 28
  %v3_10003ba0 = inttoptr i32 %v2_10003ba0 to i32*
  store i32 %v0_10003ba0, i32* %v3_10003ba0, align 4
  %v0_10003ba4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003ba4 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003ba4 = add i32 %v1_10003ba4, 16
  %v3_10003ba4 = inttoptr i32 %v2_10003ba4 to i32*
  store i32 %v0_10003ba4, i32* %v3_10003ba4, align 4
  %v0_10003ba8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003ba8 = add i32 %v0_10003ba8, 12
  store i32 %v1_10003ba8, i32* %r11.global-to-local, align 4
  %v1_10003bac = trunc i32 %v1_10003ba8 to i16
  %v2_10003bac = load i32, i32* %r8.global-to-local, align 4
  %v3_10003bac = add i32 %v2_10003bac, 4
  %v4_10003bac = inttoptr i32 %v3_10003bac to i16*
  store i16 %v1_10003bac, i16* %v4_10003bac, align 2
  %v3_10003bb0 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003bb0, i32* %r5.global-to-local, align 4
  store i32 268450744, i32* @lr, align 4
  %v3_10003bb4 = call i32 @function_10008960(i32 %v3_10003bb0, i32 %v0_10003b30, i32 %v3_10003bb0)
  store i32 %v3_10003bb4, i32* %r3.global-to-local, align 4
  %v3_10003bb8 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003bb8, i32* %r9.global-to-local, align 4
  %v1_10003bbc = add i32 %v3_10003bb8, 1
  %v1_10003bc0 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003bc0 = icmp slt i32 %v1_10003bbc, %v1_10003bc0
  store i32 %v1_10003bbc, i32* %stack_var_-88, align 4
  br i1 %v2_10003bc0, label %dec_label_pc_10003b1c, label %dec_label_pc_10003bcc.preheader.loopexit

dec_label_pc_10003bcc.preheader.loopexit:         ; preds = %dec_label_pc_10003b78
  %v0_10003bcc.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003bcc.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10003bcc.outer

dec_label_pc_10003bcc.outer:                      ; preds = %dec_label_pc_10003c98, %dec_label_pc_10003ae0, %dec_label_pc_10003bcc.preheader.loopexit
  %v1_10003bcc.ph34 = phi i1 [ %v1_10003ae0, %dec_label_pc_10003ae0 ], [ %v1_10003bcc.pre.pre, %dec_label_pc_10003bcc.preheader.loopexit ], [ %v1_10003c98, %dec_label_pc_10003c98 ]
  %v0_10003bcc.ph35 = phi i1 [ %v3_10003ae0, %dec_label_pc_10003ae0 ], [ %v0_10003bcc.pre.pre, %dec_label_pc_10003bcc.preheader.loopexit ], [ %v0_10003c98, %dec_label_pc_10003c98 ]
  %v2_10003bcc = or i1 %v1_10003bcc.ph34, %v0_10003bcc.ph35
  br label %dec_label_pc_10003bcc

dec_label_pc_10003bcc:                            ; preds = %dec_label_pc_10003bcc.outer, %dec_label_pc_10003bcc
  br i1 %v2_10003bcc, label %dec_label_pc_10003bcc, label %dec_label_pc_10003bd0

dec_label_pc_10003bd0:                            ; preds = %dec_label_pc_10003bcc, %dec_label_pc_10003c98
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003be0

dec_label_pc_10003be0:                            ; preds = %dec_label_pc_10003c20, %dec_label_pc_10003bd0
  %v0_10003bf0 = phi i32 [ %v1_10003c88, %dec_label_pc_10003c20 ], [ 0, %dec_label_pc_10003bd0 ]
  %v1_10003be0 = mul i32 %v0_10003bf0, 24
  store i32 65535, i32* %r30.global-to-local, align 4
  %v1_10003bec = load i32, i32* %r27.global-to-local, align 4
  %v2_10003bec = add i32 %v1_10003bec, %v1_10003be0
  store i32 %v2_10003bec, i32* %r10.global-to-local, align 4
  %v1_10003bf0 = mul i32 %v0_10003bf0, 4
  store i32 %v1_10003bf0, i32* %r0.global-to-local, align 4
  %v1_10003bf4 = add i32 %v2_10003bec, 20
  %v2_10003bf4 = inttoptr i32 %v1_10003bf4 to i8*
  %v3_10003bf4 = load i8, i8* %v2_10003bf4, align 1
  %v4_10003bf4 = zext i8 %v3_10003bf4 to i32
  store i32 %v4_10003bf4, i32* %r9.global-to-local, align 4
  %v0_10003bf8 = load i32, i32* %r24.global-to-local, align 4
  %v2_10003bf8 = add i32 %v0_10003bf8, %v1_10003bf0
  %v3_10003bf8 = inttoptr i32 %v2_10003bf8 to i32*
  %v4_10003bf8 = load i32, i32* %v3_10003bf8, align 4
  store i32 %v4_10003bf8, i32* %r28.global-to-local, align 4
  %v1_10003c00 = add i32 %v4_10003bf8, 20
  store i32 %v1_10003c00, i32* @r31, align 4
  %tmp33 = icmp ult i8 %v3_10003bf4, 32
  br i1 %tmp33, label %dec_label_pc_10003ca0, label %dec_label_pc_10003c08

dec_label_pc_10003c08:                            ; preds = %dec_label_pc_10003be0
  %v0_10003c08 = load i32, i32* %r20.global-to-local, align 4
  %v4_10003c08 = icmp eq i32 %v0_10003c08, 65535
  br i1 %v4_10003c08, label %dec_label_pc_10003ccc, label %dec_label_pc_10003c10

dec_label_pc_10003c10:                            ; preds = %dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge, %dec_label_pc_10003c08
  %v1_10003c10 = phi i32 [ %v1_10003c10.pre, %dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge ], [ 65535, %dec_label_pc_10003c08 ]
  %v0_10003c10 = load i32, i32* %r21.global-to-local, align 4
  %v4_10003c10 = icmp eq i32 %v0_10003c10, %v1_10003c10
  br i1 %v4_10003c10, label %dec_label_pc_10003cdc, label %dec_label_pc_10003c18

dec_label_pc_10003c18:                            ; preds = %dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge, %dec_label_pc_10003c10
  %v1_10003c18 = phi i32 [ %v1_10003c18.pre, %dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge ], [ %v1_10003c10, %dec_label_pc_10003c10 ]
  %v0_10003c18 = load i32, i32* %r22.global-to-local, align 4
  %v4_10003c18 = icmp eq i32 %v0_10003c18, %v1_10003c18
  br i1 %v4_10003c18, label %dec_label_pc_10003cec, label %dec_label_pc_10003c20

dec_label_pc_10003c20:                            ; preds = %dec_label_pc_10003cdc, %dec_label_pc_10003c18, %dec_label_pc_10003cec
  %v0_10003c20 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003c20 = trunc i32 %v0_10003c20 to i16
  %v2_10003c20 = load i32, i32* %r28.global-to-local, align 4
  %v3_10003c20 = add i32 %v2_10003c20, 10
  %v4_10003c20 = inttoptr i32 %v3_10003c20 to i16*
  store i16 %v1_10003c20, i16* %v4_10003c20, align 2
  %v0_10003c28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003c28, i32* @r3, align 4
  %v2_10003c2c = call i32 @function_100043cc(i32 %v0_10003c28, i32 20)
  %v3_10003c2c = trunc i32 %v2_10003c2c to i16
  store i32 %v2_10003c2c, i32* %r3.global-to-local, align 4
  %v3_10003c30 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003c30, i32* %r6.global-to-local, align 4
  %v3_10003c34 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003c34 = add i32 %v3_10003c34, 10
  %v5_10003c34 = inttoptr i32 %v4_10003c34 to i16*
  store i16 %v3_10003c2c, i16* %v5_10003c34, align 2
  %v0_10003c38 = load i32, i32* @r31, align 4
  store i32 %v0_10003c38, i32* @r4, align 4
  %v0_10003c3c = load i32, i32* %r26.global-to-local, align 4
  %v1_10003c3c = trunc i32 %v0_10003c3c to i16
  %v3_10003c3c = add i32 %v0_10003c38, 6
  %v4_10003c3c = inttoptr i32 %v3_10003c3c to i16*
  store i16 %v1_10003c3c, i16* %v4_10003c3c, align 2
  %v0_10003c40 = load i32, i32* %r6.global-to-local, align 4
  %v1_10003c40 = add i32 %v0_10003c40, 12
  store i32 %v1_10003c40, i32* %r6.global-to-local, align 4
  %v0_10003c44 = load i32, i32* @r31, align 4
  %v1_10003c44 = add i32 %v0_10003c44, 4
  %v2_10003c44 = inttoptr i32 %v1_10003c44 to i16*
  %v3_10003c44 = load i16, i16* %v2_10003c44, align 2
  %v4_10003c44 = zext i16 %v3_10003c44 to i32
  store i32 %v4_10003c44, i32* %r5.global-to-local, align 4
  %v0_10003c48 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003c48, i32* %r3.global-to-local, align 4
  %v4_10003c4c = call i32 @function_10004430(i32 %v0_10003c48, i32 %v0_10003c38, i32 %v4_10003c44, i32 %v1_10003c40)
  %v5_10003c4c = trunc i32 %v4_10003c4c to i16
  store i32 %v4_10003c4c, i32* %r3.global-to-local, align 4
  %v3_10003c50 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003c50, i32* %r7.global-to-local, align 4
  %v0_10003c54 = load i32, i32* @r31, align 4
  %v1_10003c54 = add i32 %v0_10003c54, 2
  %v2_10003c54 = inttoptr i32 %v1_10003c54 to i16*
  %v3_10003c54 = load i16, i16* %v2_10003c54, align 2
  %v4_10003c54 = zext i16 %v3_10003c54 to i32
  store i32 %v4_10003c54, i32* %r0.global-to-local, align 4
  %v0_10003c58 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003c5c = mul i32 %v3_10003c50, 24
  store i32 %v1_10003c5c, i32* %r7.global-to-local, align 4
  %v3_10003c60 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003c60, i32* %r5.global-to-local, align 4
  %v4_10003c64 = add i32 %v0_10003c54, 6
  %v5_10003c64 = inttoptr i32 %v4_10003c64 to i16*
  store i16 %v5_10003c4c, i16* %v5_10003c64, align 2
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10003c6c = load i32, i32* %r7.global-to-local, align 4
  %v1_10003c6c = load i32, i32* %r27.global-to-local, align 4
  %v2_10003c6c = add i32 %v1_10003c6c, %v0_10003c6c
  store i32 %v2_10003c6c, i32* %r7.global-to-local, align 4
  %v0_10003c70 = load i32, i32* %r5.global-to-local, align 4
  %v1_10003c70 = add i32 %v0_10003c70, 32
  store i32 %v1_10003c70, i32* %r5.global-to-local, align 4
  %v0_10003c74 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003c74 = trunc i32 %v0_10003c74 to i16
  %v3_10003c74 = add i32 %v2_10003c6c, 2
  %v4_10003c74 = inttoptr i32 %v3_10003c74 to i16*
  store i16 %v1_10003c74, i16* %v4_10003c74, align 2
  %v0_10003c78 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003c78, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268450948, i32* @lr, align 4
  %v6_10003c80 = call i32 @function_10009d70(i32 %v0_10003c78, i32 %v0_10003c58, i32 %v1_10003c70, i32 16384, i32 %v2_10003c6c, i32 16)
  store i32 %v6_10003c80, i32* %r3.global-to-local, align 4
  %v3_10003c84 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003c84, i32* %r9.global-to-local, align 4
  %v1_10003c88 = add i32 %v3_10003c84, 1
  store i32 %v1_10003c88, i32* %r11.global-to-local, align 4
  %v1_10003c8c = load i32, i32* %r23.global-to-local, align 4
  %v2_10003c8c = icmp slt i32 %v1_10003c88, %v1_10003c8c
  store i32 %v1_10003c88, i32* %stack_var_-88, align 4
  br i1 %v2_10003c8c, label %dec_label_pc_10003be0, label %dec_label_pc_10003c98

dec_label_pc_10003c98:                            ; preds = %dec_label_pc_10003c20
  %v0_10003c98 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003c98 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003c98 = or i1 %v0_10003c98, %v1_10003c98
  br i1 %v2_10003c98, label %dec_label_pc_10003bcc.outer, label %dec_label_pc_10003bd0

dec_label_pc_10003ca0:                            ; preds = %dec_label_pc_10003be0
  %v1_10003ca0 = add i32 %v2_10003bec, 16
  %v2_10003ca0 = inttoptr i32 %v1_10003ca0 to i32*
  %v3_10003ca0 = load i32, i32* %v2_10003ca0, align 4
  store i32 %v3_10003ca0, i32* %r29.global-to-local, align 4
  %v0_10003ca4 = call i32 @function_10005f3c()
  store i32 %v0_10003ca4, i32* %r3.global-to-local, align 4
  %v3_10003ca8 = load i32, i32* %stack_var_-88, align 4
  %v0_10003cac = load i32, i32* %r20.global-to-local, align 4
  %v1_10003cac = load i32, i32* %r30.global-to-local, align 4
  %v4_10003cac = icmp eq i32 %v0_10003cac, %v1_10003cac
  %v1_10003cb0 = mul i32 %v3_10003ca8, 24
  %v1_10003cb4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003cb4 = add i32 %v1_10003cb4, %v1_10003cb0
  store i32 %v2_10003cb4, i32* %r9.global-to-local, align 4
  %v1_10003cb8 = add i32 %v2_10003cb4, 20
  %v2_10003cb8 = inttoptr i32 %v1_10003cb8 to i8*
  %v3_10003cb8 = load i8, i8* %v2_10003cb8, align 1
  %v4_10003cb8 = zext i8 %v3_10003cb8 to i32
  store i32 %v4_10003cb8, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10003cb8, 64
  %v2_10003cbc = zext i8 %tmp to i32
  %v3_10003cbc = lshr i32 %v0_10003ca4, %v2_10003cbc
  store i32 %v3_10003cbc, i32* %r3.global-to-local, align 4
  %v0_10003cc0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003cc0 = add i32 %v3_10003cbc, %v0_10003cc0
  store i32 %v2_10003cc0, i32* %r29.global-to-local, align 4
  %v1_10003cc4 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003cc4 = add i32 %v1_10003cc4, 16
  %v3_10003cc4 = inttoptr i32 %v2_10003cc4 to i32*
  store i32 %v2_10003cc0, i32* %v3_10003cc4, align 4
  br i1 %v4_10003cac, label %dec_label_pc_10003ccc, label %dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge

dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge: ; preds = %dec_label_pc_10003ca0
  %v1_10003c10.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003c10

dec_label_pc_10003ccc:                            ; preds = %dec_label_pc_10003ca0, %dec_label_pc_10003c08
  %v0_10003ccc = call i32 @function_10005f3c()
  %v1_10003ccc = trunc i32 %v0_10003ccc to i16
  store i32 %v0_10003ccc, i32* %r3.global-to-local, align 4
  %v0_10003cd0 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003cd0 = load i32, i32* %r30.global-to-local, align 4
  %v4_10003cd0 = icmp eq i32 %v0_10003cd0, %v1_10003cd0
  %v3_10003cd4 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003cd4 = add i32 %v3_10003cd4, 4
  %v5_10003cd4 = inttoptr i32 %v4_10003cd4 to i16*
  store i16 %v1_10003ccc, i16* %v5_10003cd4, align 2
  br i1 %v4_10003cd0, label %dec_label_pc_10003cdc, label %dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge

dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge: ; preds = %dec_label_pc_10003ccc
  %v1_10003c18.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003c18

dec_label_pc_10003cdc:                            ; preds = %dec_label_pc_10003ccc, %dec_label_pc_10003c10
  %v0_10003cdc = call i32 @function_10005f3c()
  %v1_10003cdc = trunc i32 %v0_10003cdc to i16
  store i32 %v0_10003cdc, i32* %r3.global-to-local, align 4
  %v0_10003ce0 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003ce0 = load i32, i32* %r30.global-to-local, align 4
  %v4_10003ce0 = icmp eq i32 %v0_10003ce0, %v1_10003ce0
  %v3_10003ce4 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003ce4 = add i32 %v3_10003ce4, 20
  %v5_10003ce4 = inttoptr i32 %v4_10003ce4 to i16*
  store i16 %v1_10003cdc, i16* %v5_10003ce4, align 2
  br i1 %v4_10003ce0, label %dec_label_pc_10003cec, label %dec_label_pc_10003c20

dec_label_pc_10003cec:                            ; preds = %dec_label_pc_10003cdc, %dec_label_pc_10003c18
  %v0_10003cec = call i32 @function_10005f3c()
  %v1_10003cec = trunc i32 %v0_10003cec to i16
  store i32 %v0_10003cec, i32* %r3.global-to-local, align 4
  %v3_10003cf0 = load i32, i32* @r31, align 4
  %v4_10003cf0 = add i32 %v3_10003cf0, 2
  %v5_10003cf0 = inttoptr i32 %v4_10003cf0 to i16*
  store i16 %v1_10003cec, i16* %v5_10003cf0, align 2
  br label %dec_label_pc_10003c20

dec_label_pc_10003cf8:                            ; preds = %dec_label_pc_10003abc
  %v0_10003cf8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003cf8, i32* %r3.global-to-local, align 4
  store i32 268451072, i32* @lr, align 4
  %v0_10003cfc = call i32 @function_1000909c()
  store i32 %v0_10003cfc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003d00

dec_label_pc_10003d00:                            ; preds = %dec_label_pc_1000397c, %dec_label_pc_10003cf8
  store i32 %v0_10003980, i32* %r0.global-to-local, align 4
  %v1_10003d14 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10003984)
  store i32 %v0_100039bc, i32* %r28.global-to-local, align 4
  store i32 %v0_100039c4, i32* %r29.global-to-local, align 4
  store i32 %v0_100039cc, i32* %r30.global-to-local, align 4
  %v0_10003d58 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003d58

; uselistorder directives
  uselistorder i32 %v0_10003cec, { 1, 0 }
  uselistorder i32 %v0_10003cdc, { 1, 0 }
  uselistorder i32 %v0_10003ccc, { 1, 0 }
  uselistorder i1 %v1_10003c98, { 1, 0 }
  uselistorder i1 %v0_10003c98, { 1, 0 }
  uselistorder i32 %v1_10003c88, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003c4c, { 1, 0 }
  uselistorder i32 %v2_10003c2c, { 1, 0 }
  uselistorder i32 %v1_10003bf0, { 1, 0 }
  uselistorder i32 %v1_10003b38, { 1, 0 }
  uselistorder i32 %v1_10003b2c, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 3, 1, 4, 2, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 1 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003d00, { 1, 0 }
  uselistorder label %dec_label_pc_10003c20, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003bd0, { 1, 0 }
  uselistorder label %dec_label_pc_10003bcc, { 1, 0 }
  uselistorder label %dec_label_pc_10003bcc.outer, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10003b78, { 1, 0 }
}

define i32 @function_10003d5c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003d5c:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2184 = alloca i32, align 4
  %stack_var_-2180 = alloca i32, align 4
  %stack_var_-2148 = alloca i32, align 4
  %v0_10003d60 = load i32, i32* @lr, align 4
  store i32 %v0_10003d60, i32* %r0.global-to-local, align 4
  %v0_10003d64 = call i32 @__asm_mfcr()
  store i32 %v0_10003d64, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r14.global-to-local, align 4
  %v0_10003d74 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003d64, i32* %r15.global-to-local, align 4
  %v0_10003d94 = load i32, i32* @r24, align 4
  %v0_10003d98 = load i32, i32* @r25, align 4
  %v0_10003d9c = load i32, i32* @r26, align 4
  %v0_10003da0 = load i32, i32* @r27, align 4
  %v0_10003da4 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10003db4 = load i32, i32* @r31, align 4
  %v0_10003dc8 = load i32, i32* @r30, align 4
  store i32 268451280, i32* @lr, align 4
  %v2_10003dcc = call i32 @function_1000a148(i32 4, i32 4)
  store i32 %v2_10003dcc, i32* %r16.global-to-local, align 4
  %v0_10003dd4 = load i32, i32* @r28, align 4
  %v0_10003de0 = load i32, i32* @r29, align 4
  store i32 %v0_10003de0, i32* %r3.global-to-local, align 4
  store i32 268451304, i32* @lr, align 4
  %v4_10003de4 = inttoptr i32 %v0_10003dd4 to i32*
  %v5_10003de4 = call i32 @function_100006a8(i32 %v0_10003de0, i32* %v4_10003de4, i32 2, i32 0)
  %v5_10003df4 = trunc i32 %v5_10003de4 to i8
  %v0_10003dfc = load i32, i32* @r28, align 4
  %v0_10003e00 = load i32, i32* @r29, align 4
  store i32 %v0_10003e00, i32* %r3.global-to-local, align 4
  store i32 268451336, i32* @lr, align 4
  %v4_10003e04 = inttoptr i32 %v0_10003dfc to i32*
  %v5_10003e04 = call i32 @function_100006a8(i32 %v0_10003e00, i32* %v4_10003e04, i32 3, i32 65535)
  %v0_10003e08 = load i32, i32* @r28, align 4
  store i32 %v5_10003e04, i32* %r19.global-to-local, align 4
  %v0_10003e18 = load i32, i32* @r29, align 4
  store i32 %v0_10003e18, i32* %r3.global-to-local, align 4
  store i32 268451360, i32* @lr, align 4
  %v4_10003e1c = inttoptr i32 %v0_10003e08 to i32*
  %v5_10003e1c = call i32 @function_100006a8(i32 %v0_10003e18, i32* %v4_10003e1c, i32 4, i32 64)
  %v0_10003e20 = load i32, i32* @r28, align 4
  %v5_10003e2c = trunc i32 %v5_10003e1c to i8
  %v0_10003e34 = load i32, i32* @r29, align 4
  store i32 %v0_10003e34, i32* %r3.global-to-local, align 4
  store i32 268451388, i32* @lr, align 4
  %v4_10003e38 = inttoptr i32 %v0_10003e20 to i32*
  %v5_10003e38 = call i32 @function_100006a8(i32 %v0_10003e34, i32* %v4_10003e38, i32 5, i32 0)
  %v0_10003e48 = load i32, i32* @r28, align 4
  %v1_10003e4c = urem i32 %v5_10003e38, 256
  store i32 %v1_10003e4c, i32* %r27.global-to-local, align 4
  %v0_10003e50 = load i32, i32* @r29, align 4
  store i32 %v0_10003e50, i32* %r3.global-to-local, align 4
  store i32 268451416, i32* @lr, align 4
  %v4_10003e54 = inttoptr i32 %v0_10003e48 to i32*
  %v5_10003e54 = call i32 @function_100006a8(i32 %v0_10003e50, i32* %v4_10003e54, i32 6, i32 65535)
  %v0_10003e58 = load i32, i32* @r28, align 4
  store i32 %v5_10003e54, i32* %r20.global-to-local, align 4
  %v0_10003e68 = load i32, i32* @r29, align 4
  store i32 %v0_10003e68, i32* %r3.global-to-local, align 4
  store i32 268451440, i32* @lr, align 4
  %v4_10003e6c = inttoptr i32 %v0_10003e58 to i32*
  %v5_10003e6c = call i32 @function_100006a8(i32 %v0_10003e68, i32* %v4_10003e6c, i32 7, i32 53)
  %v0_10003e74 = load i32, i32* @r28, align 4
  store i32 %v5_10003e6c, i32* %r23.global-to-local, align 4
  %v0_10003e84 = load i32, i32* @r29, align 4
  store i32 %v0_10003e84, i32* %r3.global-to-local, align 4
  store i32 268451468, i32* @lr, align 4
  %v4_10003e88 = inttoptr i32 %v0_10003e74 to i32*
  %v5_10003e88 = call i32 @function_100006a8(i32 %v0_10003e84, i32* %v4_10003e88, i32 9, i32 65535)
  %v0_10003e8c = load i32, i32* @r28, align 4
  store i32 %v5_10003e88, i32* %r24.global-to-local, align 4
  %v0_10003e9c = load i32, i32* @r29, align 4
  store i32 %v0_10003e9c, i32* %r3.global-to-local, align 4
  store i32 268451492, i32* @lr, align 4
  %v4_10003ea0 = inttoptr i32 %v0_10003e8c to i32*
  %v5_10003ea0 = call i32 @function_100006a8(i32 %v0_10003e9c, i32* %v4_10003ea0, i32 0, i32 12)
  %v0_10003eac = load i32, i32* @r28, align 4
  store i32 %v5_10003ea0, i32* %r26.global-to-local, align 4
  %v0_10003eb4 = load i32, i32* @r29, align 4
  store i32 %v0_10003eb4, i32* %r3.global-to-local, align 4
  store i32 268451516, i32* @lr, align 4
  %v4_10003eb8 = inttoptr i32 %v0_10003eac to i32*
  %v5_10003eb8 = call i32 @function_10000238(i32 %v0_10003eb4, i32* %v4_10003eb8, i32 8, i32 0)
  store i32 %v5_10003eb8, i32* %r25.global-to-local, align 4
  store i32 26, i32* %r3.global-to-local, align 4
  store i32 268451528, i32* @lr, align 4
  %v1_10003ec4 = call i32 @function_10008278(i32 26)
  store i32 26, i32* %r3.global-to-local, align 4
  %v3_10003ed0 = call i32 @function_100081c4(i32 26, i32* null)
  store i32 %v3_10003ed0, i32* %r3.global-to-local, align 4
  store i32 268451552, i32* @lr, align 4
  %v2_10003edc = call i32 @function_10009204(i32 %v3_10003ed0, i32 0)
  store i32 %v2_10003edc, i32* @r31, align 4
  store i32 26, i32* %r3.global-to-local, align 4
  store i32 268451564, i32* @lr, align 4
  %v1_10003ee8 = call i32 @function_100081ec(i32 26)
  store i32 %v1_10003ee8, i32* %r3.global-to-local, align 4
  %v0_10003eec = load i32, i32* @r31, align 4
  %v1_10003eec = icmp slt i32 %v0_10003eec, 0
  %v3_10003eec = icmp eq i32 %v0_10003eec, 0
  store i1 %v3_10003eec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10003eec, label %dec_label_pc_10003fbc, label %dec_label_pc_10003ef4

dec_label_pc_10003ef4:                            ; preds = %dec_label_pc_10003d5c
  %v2_10003ef4 = ptrtoint i32* %stack_var_-2148 to i32
  store i32 %v2_10003ef4, i32* %r28.global-to-local, align 4
  store i32 %v0_10003eec, i32* %r3.global-to-local, align 4
  store i32 268451592, i32* @lr, align 4
  %v3_10003f04 = call i32 @function_100092d4(i32 %v0_10003eec, i32 %v2_10003ef4, i32 2048)
  store i32 %v3_10003f04, i32* %r30.global-to-local, align 4
  %v0_10003f0c = load i32, i32* @r31, align 4
  store i32 %v0_10003f0c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003f14.24 to i32), i32* @lr, align 4
  %v0_10003f10 = call i32 @function_1000909c()
  store i32 27, i32* %r3.global-to-local, align 4
  store i32 268451612, i32* @lr, align 4
  %v1_10003f18 = call i32 @function_10008278(i32 27)
  store i32 27, i32* %r3.global-to-local, align 4
  %v3_10003f24 = call i32 @function_100081c4(i32 27, i32* null)
  %v0_10003f28 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v2_10003ef4, i32* %r3.global-to-local, align 4
  %v3_10003f34 = bitcast i32* %stack_var_-2148 to i8*
  %v4_10003f34 = call i32 @function_10008c8c(i8* %v3_10003f34, i32 %v0_10003f28, i32 %v3_10003f24)
  store i32 %v4_10003f34, i32* @r31, align 4
  store i32 27, i32* %r3.global-to-local, align 4
  store i32 268451652, i32* @lr, align 4
  %v1_10003f40 = call i32 @function_100081ec(i32 27)
  store i32 %v1_10003f40, i32* %r3.global-to-local, align 4
  %v0_10003f44 = load i32, i32* @r31, align 4
  %v3_10003f44 = icmp eq i32 %v0_10003f44, -1
  store i1 %v3_10003f44, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003f44, label %dec_label_pc_10003fbc, label %dec_label_pc_10003f4c

dec_label_pc_10003f4c:                            ; preds = %dec_label_pc_10003ef4
  %v0_10003f4c = load i32, i32* %r30.global-to-local, align 4
  %v3_10003f4c = icmp sgt i32 %v0_10003f4c, %v0_10003f44
  %v4_10003f4c = icmp eq i32 %v0_10003f4c, %v0_10003f44
  store i1 %v4_10003f4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003f4c, label %dec_label_pc_10003f54, label %dec_label_pc_10003fbc

dec_label_pc_10003f54:                            ; preds = %dec_label_pc_10003f4c
  %v2_10003f54 = sub i32 %v0_10003f4c, %v0_10003f44
  store i32 %v2_10003f54, i32* %r0.global-to-local, align 4
  %v1_10003f58 = add i32 %v0_10003f4c, -1
  store i32 %v1_10003f58, i32* %r3.global-to-local, align 4
  store i32 %v2_10003f54, i32* %ctr.global-to-local, align 4
  %v0_10003f64 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003f64 = add i32 %v0_10003f64, %v0_10003f44
  store i32 %v2_10003f64, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10003f6c = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_10003f6c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003f70

dec_label_pc_10003f70:                            ; preds = %dec_label_pc_10003fb4, %dec_label_pc_10003f54
  %v0_10003fb8 = phi i32 [ %v1_10003fb8, %dec_label_pc_10003fb4 ], [ %v2_10003f54, %dec_label_pc_10003f54 ]
  %v0_10003fb4 = phi i32 [ %v1_10003fb4, %dec_label_pc_10003fb4 ], [ %v0_10003f44, %dec_label_pc_10003f54 ]
  %v0_10003f7c = phi i32 [ %v1_10003f7c, %dec_label_pc_10003fb4 ], [ %v2_10003f64, %dec_label_pc_10003f54 ]
  %v0_10003f70 = phi i32 [ %v0_10003f704, %dec_label_pc_10003fb4 ], [ 0, %dec_label_pc_10003f54 ]
  %v3_10003f70 = icmp eq i32 %v0_10003f70, 0
  store i1 %v3_10003f70, i1* %cr7_eq.global-to-local, align 1
  %v1_10003f74 = inttoptr i32 %v0_10003f7c to i8*
  %v2_10003f74 = load i8, i8* %v1_10003f74, align 1
  %v3_10003f74 = zext i8 %v2_10003f74 to i32
  store i32 %v3_10003f74, i32* %r9.global-to-local, align 4
  %v4_10003f78 = icmp eq i32 %v1_10003f58, %v0_10003fb4
  %v1_10003f7c = add i32 %v0_10003f7c, 1
  store i32 %v1_10003f7c, i32* %r11.global-to-local, align 4
  br i1 %v3_10003f70, label %dec_label_pc_10003f8c, label %dec_label_pc_10003f9c

dec_label_pc_10003f8c:                            ; preds = %dec_label_pc_10003f70
  %v3_10003f8c = icmp eq i8 %v2_10003f74, 9
  store i1 %v3_10003f8c, i1* %cr7_eq.global-to-local, align 1
  switch i8 %v2_10003f74, label %dec_label_pc_10003f98 [
    i8 32, label %dec_label_pc_10003fb4
    i8 9, label %dec_label_pc_10003fb4
  ]

dec_label_pc_10003f98:                            ; preds = %dec_label_pc_10003f8c
  store i32 1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10003f9c

dec_label_pc_10003f9c:                            ; preds = %dec_label_pc_10003f70, %dec_label_pc_10003f98
  %v0_10003f705 = phi i32 [ %v0_10003f70, %dec_label_pc_10003f70 ], [ 1, %dec_label_pc_10003f98 ]
  %v1_10003f9c = add nuw nsw i32 %v3_10003f74, 208
  %v1_10003fa0 = urem i32 %v1_10003f9c, 256
  store i32 %v1_10003fa0, i32* %r0.global-to-local, align 4
  %v2_10003fa4 = icmp ugt i32 %v1_10003fa0, 9
  %v3_10003fa4 = icmp eq i32 %v1_10003fa0, 9
  store i1 %v3_10003fa4, i1* %cr7_eq.global-to-local, align 1
  %v3_10003f80.not = icmp ne i8 %v2_10003f74, 46
  %brmerge.not = and i1 %v3_10003f80.not, %v2_10003fa4
  %brmerge26 = or i1 %v4_10003f78, %brmerge.not
  br i1 %brmerge26, label %dec_label_pc_10003ff0, label %dec_label_pc_10003fb4

dec_label_pc_10003fb4:                            ; preds = %dec_label_pc_10003f9c, %dec_label_pc_10003f8c, %dec_label_pc_10003f8c
  %v0_10003f704 = phi i32 [ 0, %dec_label_pc_10003f8c ], [ 0, %dec_label_pc_10003f8c ], [ %v0_10003f705, %dec_label_pc_10003f9c ]
  %v1_10003fb4 = add i32 %v0_10003fb4, 1
  %v1_10003fb8 = add i32 %v0_10003fb8, -1
  store i32 %v1_10003fb8, i32* %ctr.global-to-local, align 4
  %v2_10003fb8 = icmp eq i32 %v1_10003fb8, 0
  br i1 %v2_10003fb8, label %dec_label_pc_10003fbc, label %dec_label_pc_10003f70

dec_label_pc_10003fbc:                            ; preds = %dec_label_pc_10003fb4, %dec_label_pc_10003f4c, %dec_label_pc_10003ef4, %dec_label_pc_10003d5c
  %v0_10003fbc = call i32 @function_10005f3c()
  %v1_10003fc0 = urem i32 %v0_10003fbc, 4
  store i32 %v1_10003fc0, i32* %r3.global-to-local, align 4
  %v3_10003fc4 = icmp eq i32 %v1_10003fc0, 1
  store i1 %v3_10003fc4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003fc4, label %dec_label_pc_100043a8, label %dec_label_pc_10003fcc

dec_label_pc_10003fcc:                            ; preds = %dec_label_pc_10003fbc
  %v1_10003fc4 = icmp eq i32 %v1_10003fc0, 0
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10003fc4, label %dec_label_pc_100043c0, label %dec_label_pc_10003fd4

dec_label_pc_10003fd4:                            ; preds = %dec_label_pc_10003fcc
  %v2_10003fd4 = icmp eq i32 %v1_10003fc0, 3
  %v3_10003fd4 = icmp eq i32 %v1_10003fc0, 2
  store i1 %v3_10003fd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003fd4, label %dec_label_pc_100043b4, label %dec_label_pc_10003fdc

dec_label_pc_10003fdc:                            ; preds = %dec_label_pc_10003fd4
  store i1 %v2_10003fd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10003fd4, label %dec_label_pc_10003fe4, label %dec_label_pc_10004020

dec_label_pc_10003fe4:                            ; preds = %dec_label_pc_10003fdc
  store i32 67240450, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_10003ff0:                            ; preds = %dec_label_pc_10003f9c
  %v2_10003ff0 = sub i32 %v0_10003fb4, %v0_10003f44
  store i32 %v2_10003f6c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004004.25 to i32), i32* @lr, align 4
  %v3_10004000 = call i32 @function_10008960(i32 %v2_10003f6c, i32 %v2_10003f64, i32 %v2_10003ff0)
  %v2_10004004 = ptrtoint i32* %stack_var_-2184 to i32
  %v2_10004008 = add i32 %v2_10003ff0, %v2_10004004
  store i32 %v2_10004008, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10004010 = add i32 %v2_10004008, 4
  %v4_10004010 = inttoptr i32 %v3_10004010 to i8*
  store i8 0, i8* %v4_10004010, align 1
  store i32 %v2_10003f6c, i32* %r3.global-to-local, align 4
  store i32 268451868, i32* @lr, align 4
  %v1_10004018 = call i32 @function_10009b50(i32 %v2_10003f6c)
  store i32 %v1_10004018, i32* %r3.global-to-local, align 4
  store i32 %v1_10004018, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_10004020:                            ; preds = %dec_label_pc_10003fdc, %dec_label_pc_10003fe4, %dec_label_pc_100043c0, %dec_label_pc_100043b4, %dec_label_pc_100043a8, %dec_label_pc_10003ff0
  %v0_10004020 = load i32, i32* %r25.global-to-local, align 4
  %v3_10004020 = icmp eq i32 %v0_10004020, 0
  store i1 %v3_10004020, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004020, label %dec_label_pc_10004348, label %dec_label_pc_10004028

dec_label_pc_10004028:                            ; preds = %dec_label_pc_10004020
  store i32 %v0_10004020, i32* %r3.global-to-local, align 4
  store i32 268451888, i32* @lr, align 4
  %v1_1000402c = inttoptr i32 %v0_10004020 to i8*
  %v2_1000402c = call i32 @function_100088dc(i8* %v1_1000402c)
  store i32 %v2_1000402c, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268451908, i32* @lr, align 4
  %v3_10004040 = call i32 @function_10009dec(i32 2, i32 3, i32 17)
  store i32 %v3_10004040, i32* %r3.global-to-local, align 4
  %v3_10004044 = icmp eq i32 %v3_10004040, -1
  store i1 %v3_10004044, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10004040, i32* %r22.global-to-local, align 4
  br i1 %v3_10004044, label %dec_label_pc_10004348, label %dec_label_pc_10004050

dec_label_pc_10004050:                            ; preds = %dec_label_pc_10004028
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000405c = ptrtoint i32* %stack_var_-2184 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-2184, align 4
  store i32 268451948, i32* @lr, align 4
  %v4_10004068 = call i32 @function_10009db0(i32 0, i32 3, i32 %v2_1000405c, i32 4)
  store i32 %v4_10004068, i32* %r3.global-to-local, align 4
  %v3_1000406c = icmp eq i32 %v4_10004068, -1
  store i1 %v3_1000406c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000406c, label %dec_label_pc_10004340, label %dec_label_pc_10004074

dec_label_pc_10004074:                            ; preds = %dec_label_pc_10004050
  %v0_10004074 = load i32, i32* %r15.global-to-local, align 4
  %v1_10004074 = icmp slt i32 %v0_10004074, 0
  %v3_10004074 = icmp eq i32 %v0_10004074, 0
  store i1 %v1_10004074, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10004074, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000407c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000407c = urem i32 %v0_1000407c, 65536
  store i32 %v1_1000407c, i32* %r17.global-to-local, align 4
  %v0_10004080 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004080 = urem i32 %v0_10004080, 65536
  store i32 %v1_10004080, i32* %r18.global-to-local, align 4
  %v0_10004084 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004084 = urem i32 %v0_10004084, 65536
  store i32 %v1_10004084, i32* %r19.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_1000408c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000408c = urem i32 %v0_1000408c, 65536
  store i32 %v1_1000408c, i32* %r20.global-to-local, align 4
  %v0_10004090 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004090 = urem i32 %v0_10004090, 256
  store i32 %v1_10004090, i32* %r23.global-to-local, align 4
  %tmp53 = icmp slt i32 %v0_10004074, 1
  %v1_10004334 = load i32, i32* @r29, align 4
  %v2_10004334 = add i32 %v1_10004334, %v1_10004090
  store i32 %v2_10004334, i32* @r24, align 4
  br i1 %tmp53, label %dec_label_pc_100041f8.preheader, label %dec_label_pc_10004098

dec_label_pc_10004098:                            ; preds = %dec_label_pc_10004074
  %v1_1000409c = icmp slt i32 %v1_10004334, 0
  %v3_1000409c = icmp eq i32 %v1_10004334, 0
  store i1 %v1_1000409c, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_1000409c, i1* %cr3_eq.global-to-local, align 1
  %v1_100040a0 = urem i32 %v2_10004334, 65536
  %v0_100040a4 = load i32, i32* %r27.global-to-local, align 4
  %v3_100040a4 = icmp eq i32 %v0_100040a4, 0
  store i1 %v3_100040a4, i1* %cr2_eq.global-to-local, align 1
  %v1_100040a8 = add nuw nsw i32 %v1_100040a0, 27
  store i32 %v1_100040a8, i32* %r0.global-to-local, align 4
  %v1_100040ac = add nuw nsw i32 %v1_100040a0, 47
  store i32 %v1_100040ac, i32* %r9.global-to-local, align 4
  %fold = add i32 %v2_10004334, 47
  %v1_100040b0 = urem i32 %fold, 65536
  store i32 %v1_100040b0, i32* %r26.global-to-local, align 4
  %fold3 = add i32 %v2_10004334, 27
  %v1_100040b4 = urem i32 %fold3, 65536
  store i32 %v1_100040b4, i32* %r27.global-to-local, align 4
  %v1_100040b8 = add i32 %v1_10004334, 1
  store i32 %v1_100040b8, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_10004108 = sext i8 %v5_10003df4 to i32
  %v4_10004110 = sext i8 %v5_10003e2c to i32
  br label %dec_label_pc_100040c0

dec_label_pc_100040c0:                            ; preds = %dec_label_pc_100041d0, %dec_label_pc_10004098
  store i32 600, i32* %r3.global-to-local, align 4
  store i32 268452044, i32* @lr, align 4
  %v2_100040c8 = call i32 @function_1000a148(i32 600, i32 1)
  store i32 %v2_100040c8, i32* %r3.global-to-local, align 4
  %v3_100040cc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100040cc, i32* %r0.global-to-local, align 4
  %v0_100040d0 = load i32, i32* @r31, align 4
  %v1_100040d0 = mul i32 %v0_100040d0, 4
  store i32 %v1_100040d0, i32* %r9.global-to-local, align 4
  %v2_100040d4 = load i32, i32* %r16.global-to-local, align 4
  %v3_100040d4 = add i32 %v2_100040d4, %v1_100040d0
  %v4_100040d4 = inttoptr i32 %v3_100040d4 to i32*
  store i32 %v2_100040c8, i32* %v4_100040d4, align 4
  %v0_100040d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100040d8 = mul i32 %v0_100040d8, 4
  store i32 %v1_100040d8, i32* %r0.global-to-local, align 4
  %v0_100040dc = load i32, i32* %r16.global-to-local, align 4
  %v2_100040dc = add i32 %v0_100040dc, %v1_100040d8
  %v3_100040dc = inttoptr i32 %v2_100040dc to i32*
  %v4_100040dc = load i32, i32* %v3_100040dc, align 4
  store i32 %v4_100040dc, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100040e4 = inttoptr i32 %v4_100040dc to i32*
  %v2_100040e4 = load i32, i32* %v1_100040e4, align 4
  store i32 %v2_100040e4, i32* %r9.global-to-local, align 4
  %v1_100040e8 = add i32 %v4_100040dc, 20
  store i32 %v1_100040e8, i32* %r10.global-to-local, align 4
  %v0_100040ec = load i32, i32* %r17.global-to-local, align 4
  %v1_100040ec = trunc i32 %v0_100040ec to i16
  %v3_100040ec = add i32 %v4_100040dc, 4
  %v4_100040ec = inttoptr i32 %v3_100040ec to i16*
  store i16 %v1_100040ec, i16* %v4_100040ec, align 2
  %v0_100040f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100040f0 = add i32 %v0_100040f0, 28
  store i32 %v1_100040f0, i32* %r8.global-to-local, align 4
  %v1_100040f4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100040f4, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_100040fc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100040fc, i32* %r9.global-to-local, align 4
  %v1_10004100 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004100 = inttoptr i32 %v1_10004100 to i32*
  store i32 %v1_100040fc, i32* %v2_10004100, align 4
  %v0_10004104 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004104 = trunc i32 %v0_10004104 to i16
  %v2_10004104 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004104 = add i32 %v2_10004104, 2
  %v4_10004104 = inttoptr i32 %v3_10004104 to i16*
  store i16 %v1_10004104, i16* %v4_10004104, align 2
  store i32 %v4_10004108, i32* %r0.global-to-local, align 4
  %v2_1000410c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000410c = add i32 %v2_1000410c, 1
  %v4_1000410c = inttoptr i32 %v3_1000410c to i8*
  store i8 %v5_10003df4, i8* %v4_1000410c, align 1
  store i32 %v4_10004110, i32* %r7.global-to-local, align 4
  %v2_10004114 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004114 = add i32 %v2_10004114, 8
  %v4_10004114 = inttoptr i32 %v3_10004114 to i8*
  store i8 %v5_10003e2c, i8* %v4_10004114, align 1
  %v0_10004118 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004118, label %dec_label_pc_10004124, label %dec_label_pc_1000411c

dec_label_pc_1000411c:                            ; preds = %dec_label_pc_100040c0
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10004120 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004120 = add i32 %v2_10004120, 6
  %v4_10004120 = inttoptr i32 %v3_10004120 to i16*
  store i16 16384, i16* %v4_10004120, align 2
  br label %dec_label_pc_10004124

dec_label_pc_10004124:                            ; preds = %dec_label_pc_100040c0, %dec_label_pc_1000411c
  store i32 268566528, i32* %r7.global-to-local, align 4
  %v2_1000412c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000412c = add i32 %v2_1000412c, 9
  %v4_1000412c = inttoptr i32 %v3_1000412c to i8*
  store i8 17, i8* %v4_1000412c, align 1
  %v0_10004130 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004130 = add i32 %v0_10004130, 41
  store i32 %v1_10004130, i32* %r9.global-to-local, align 4
  %v0_10004134 = load i32, i32* %r27.global-to-local, align 4
  %v1_10004134 = trunc i32 %v0_10004134 to i16
  %v2_10004134 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004134 = add i32 %v2_10004134, 4
  %v4_10004134 = inttoptr i32 %v3_10004134 to i16*
  store i16 %v1_10004134, i16* %v4_10004134, align 2
  %v0_10004138 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004138 = load i32, i32* %r23.global-to-local, align 4
  %v2_10004138 = add i32 %v1_10004138, %v0_10004138
  store i32 %v2_10004138, i32* %r30.global-to-local, align 4
  %v3_1000413c = load i32, i32* @global_var_1001c208.14, align 4
  store i32 %v3_1000413c, i32* %r0.global-to-local, align 4
  %v1_10004140 = add i32 %v2_10004138, 1
  store i32 %v1_10004140, i32* %r31.global-to-local, align 4
  %v0_10004144 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004144 = trunc i32 %v0_10004144 to i16
  %v2_10004144 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004144 = add i32 %v2_10004144, 2
  %v4_10004144 = inttoptr i32 %v3_10004144 to i16*
  store i16 %v1_10004144, i16* %v4_10004144, align 2
  %v0_10004148 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004148, i32* %r3.global-to-local, align 4
  %v0_1000414c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000414c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000414c = add i32 %v1_1000414c, 12
  %v3_1000414c = inttoptr i32 %v2_1000414c to i32*
  store i32 %v0_1000414c, i32* %v3_1000414c, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_10004154 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004154 = trunc i32 %v0_10004154 to i16
  %v2_10004154 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004154 = add i32 %v2_10004154, 20
  %v4_10004154 = inttoptr i32 %v3_10004154 to i16*
  store i16 %v1_10004154, i16* %v4_10004154, align 2
  %v0_10004158 = load i32, i32* %r25.global-to-local, align 4
  %v0_1000415c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000415c = trunc i32 %v0_1000415c to i16
  %v2_1000415c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000415c = add i32 %v2_1000415c, 2
  %v4_1000415c = inttoptr i32 %v3_1000415c to i16*
  store i16 %v1_1000415c, i16* %v4_1000415c, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10004164 = load i32, i32* %r8.global-to-local, align 4
  %v3_10004164 = add i32 %v2_10004164, 4
  %v4_10004164 = inttoptr i32 %v3_10004164 to i16*
  store i16 1, i16* %v4_10004164, align 2
  %v0_10004168 = load i32, i32* @r28, align 4
  %v0_1000416c = load i32, i32* @r21, align 4
  %v1_1000416c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000416c = add i32 %v1_1000416c, 16
  %v3_1000416c = inttoptr i32 %v2_1000416c to i32*
  store i32 %v0_1000416c, i32* %v3_1000416c, align 4
  %v0_10004170 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004170 = trunc i32 %v0_10004170 to i16
  %v2_10004170 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004170 = add i32 %v2_10004170, 28
  %v4_10004170 = inttoptr i32 %v3_10004170 to i16*
  store i16 %v1_10004170, i16* %v4_10004170, align 2
  %v0_10004174 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004174 = trunc i32 %v0_10004174 to i8
  %v2_10004174 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004174 = add i32 %v2_10004174, 40
  %v4_10004174 = inttoptr i32 %v3_10004174 to i8*
  store i8 %v1_10004174, i8* %v4_10004174, align 1
  store i32 268452220, i32* @lr, align 4
  %v3_10004178 = call i32 @function_10008960(i32 %v0_10004148, i32 %v0_10004158, i32 %v0_10004168)
  store i32 %v3_10004178, i32* %r3.global-to-local, align 4
  %v0_1000417c = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_1000417c = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_1000417c = or i1 %v0_1000417c, %v1_1000417c
  br i1 %v2_1000417c, label %dec_label_pc_100041c8, label %dec_label_pc_10004180

dec_label_pc_10004180:                            ; preds = %dec_label_pc_10004124
  %v0_10004180 = load i32, i32* @r29, align 4
  store i32 %v0_10004180, i32* %ctr.global-to-local, align 4
  %v0_10004184 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004184, i32* %r3.global-to-local, align 4
  %v0_10004188 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10004188, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100041a8

dec_label_pc_10004198:                            ; preds = %dec_label_pc_100041a8
  %v1_10004198 = urem i32 %v1_100041ac, 256
  br label %dec_label_pc_1000419c

dec_label_pc_1000419c:                            ; preds = %dec_label_pc_100041b8, %dec_label_pc_10004198
  %v0_100041a4 = phi i32 [ %v0_100041a4.pre, %dec_label_pc_100041b8 ], [ %v0_100041a418, %dec_label_pc_10004198 ]
  %v0_100041a0 = phi i32 [ %v0_100041bc, %dec_label_pc_100041b8 ], [ %v0_100041a016, %dec_label_pc_10004198 ]
  %v2_100041b813 = phi i32 [ %v0_100041bc, %dec_label_pc_100041b8 ], [ %v2_100041b8, %dec_label_pc_10004198 ]
  %v0_1000419c = phi i32 [ %v0_1000419c.pre, %dec_label_pc_100041b8 ], [ %v0_100041a8, %dec_label_pc_10004198 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_100041b8 ], [ %v1_10004198, %dec_label_pc_10004198 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  %v1_1000419c = add i32 %v0_1000419c, 1
  store i32 %v1_1000419c, i32* %r10.global-to-local, align 4
  %v1_100041a0 = add i32 %v0_100041a0, 1
  store i32 %v1_100041a0, i32* %r3.global-to-local, align 4
  %v1_100041a4 = add i32 %v0_100041a4, -1
  store i32 %v1_100041a4, i32* %ctr.global-to-local, align 4
  %v2_100041a4 = icmp eq i32 %v1_100041a4, 0
  br i1 %v2_100041a4, label %dec_label_pc_100041d0.loopexit, label %dec_label_pc_100041a8

dec_label_pc_100041a8:                            ; preds = %dec_label_pc_1000419c, %dec_label_pc_10004180
  %v0_100041a418 = phi i32 [ %v1_100041a4, %dec_label_pc_1000419c ], [ %v0_10004180, %dec_label_pc_10004180 ]
  %v0_100041a016 = phi i32 [ %v1_100041a0, %dec_label_pc_1000419c ], [ %v0_10004184, %dec_label_pc_10004180 ]
  %v2_100041b8 = phi i32 [ %v2_100041b813, %dec_label_pc_1000419c ], [ %v0_10004188, %dec_label_pc_10004180 ]
  %v0_100041b8 = phi i32 [ %storemerge, %dec_label_pc_1000419c ], [ 0, %dec_label_pc_10004180 ]
  %v0_100041a8 = phi i32 [ %v1_1000419c, %dec_label_pc_1000419c ], [ 0, %dec_label_pc_10004180 ]
  %v1_100041a8 = load i32, i32* %r25.global-to-local, align 4
  %v2_100041a8 = add i32 %v1_100041a8, %v0_100041a8
  %v3_100041a8 = inttoptr i32 %v2_100041a8 to i8*
  %v4_100041a8 = load i8, i8* %v3_100041a8, align 1
  %v5_100041a8 = zext i8 %v4_100041a8 to i32
  store i32 %v5_100041a8, i32* %r0.global-to-local, align 4
  %v1_100041ac = add nsw i32 %v0_100041b8, 1
  store i32 %v1_100041ac, i32* %r11.global-to-local, align 4
  %v3_100041b0 = icmp eq i8 %v4_100041a8, 46
  store i1 %v3_100041b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100041b0, label %dec_label_pc_100041b8, label %dec_label_pc_10004198

dec_label_pc_100041b8:                            ; preds = %dec_label_pc_100041a8
  %v1_100041b8 = trunc i32 %v0_100041b8 to i8
  %v3_100041b8 = inttoptr i32 %v2_100041b8 to i8*
  store i8 %v1_100041b8, i8* %v3_100041b8, align 1
  %v0_100041bc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_100041bc, i32* %r9.global-to-local, align 4
  %v0_1000419c.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_100041a4.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000419c

dec_label_pc_100041c8:                            ; preds = %dec_label_pc_10004124
  %v0_100041c8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100041c8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100041d0

dec_label_pc_100041d0.loopexit:                   ; preds = %dec_label_pc_1000419c
  %extract.t = trunc i32 %storemerge to i8
  br label %dec_label_pc_100041d0

dec_label_pc_100041d0:                            ; preds = %dec_label_pc_100041d0.loopexit, %dec_label_pc_100041c8
  %v2_100041d0 = phi i32 [ %v2_100041b813, %dec_label_pc_100041d0.loopexit ], [ %v0_100041c8, %dec_label_pc_100041c8 ]
  %v0_100041d0.off0 = phi i8 [ %extract.t, %dec_label_pc_100041d0.loopexit ], [ 0, %dec_label_pc_100041c8 ]
  %v3_100041d0 = inttoptr i32 %v2_100041d0 to i8*
  store i8 %v0_100041d0.off0, i8* %v3_100041d0, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100041d8 = load i32, i32* %r30.global-to-local, align 4
  %v1_100041d8 = load i32, i32* @r29, align 4
  %v2_100041d8 = add i32 %v1_100041d8, %v0_100041d8
  store i32 %v2_100041d8, i32* %r9.global-to-local, align 4
  %v3_100041dc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100041dc, i32* %r11.global-to-local, align 4
  %v3_100041e0 = add i32 %v2_100041d8, 4
  %v4_100041e0 = inttoptr i32 %v3_100041e0 to i16*
  store i16 1, i16* %v4_100041e0, align 2
  %v0_100041e4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100041e4 = add i32 %v0_100041e4, 1
  store i32 %v1_100041e4, i32* %r31.global-to-local, align 4
  %v0_100041e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100041e8 = trunc i32 %v0_100041e8 to i16
  %v2_100041e8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100041e8 = add i32 %v2_100041e8, 2
  %v4_100041e8 = inttoptr i32 %v3_100041e8 to i16*
  store i16 %v1_100041e8, i16* %v4_100041e8, align 2
  %v0_100041ec = load i32, i32* %r31.global-to-local, align 4
  %v1_100041ec = load i32, i32* %r15.global-to-local, align 4
  %v2_100041ec = icmp slt i32 %v0_100041ec, %v1_100041ec
  %v4_100041ec = icmp eq i32 %v0_100041ec, %v1_100041ec
  store i1 %v4_100041ec, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100041ec, i32* %stack_var_-2184, align 4
  br i1 %v2_100041ec, label %dec_label_pc_100040c0, label %dec_label_pc_100041f8.preheader.loopexit

dec_label_pc_100041f8.preheader.loopexit:         ; preds = %dec_label_pc_100041d0
  %v0_100041f8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100041f8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100041f8.preheader

dec_label_pc_100041f8.preheader:                  ; preds = %dec_label_pc_100042f0, %dec_label_pc_10004074, %dec_label_pc_100041f8.preheader.loopexit
  %v1_100041f8 = phi i1 [ %v1_10004074, %dec_label_pc_10004074 ], [ %v1_100041f8.pre, %dec_label_pc_100041f8.preheader.loopexit ], [ %v1_100042f0, %dec_label_pc_100042f0 ]
  %v0_100041f8 = phi i1 [ %v3_10004074, %dec_label_pc_10004074 ], [ %v0_100041f8.pre, %dec_label_pc_100041f8.preheader.loopexit ], [ %v0_100042f0, %dec_label_pc_100042f0 ]
  %v2_100041f8 = or i1 %v1_100041f8, %v0_100041f8
  br label %dec_label_pc_100041f8

dec_label_pc_100041f8:                            ; preds = %dec_label_pc_100041f8.preheader, %dec_label_pc_100041f8
  br i1 %v2_100041f8, label %dec_label_pc_100041f8, label %dec_label_pc_100041fc

dec_label_pc_100041fc:                            ; preds = %dec_label_pc_100041f8, %dec_label_pc_100042f0
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_1000420c = load i32, i32* %r19.global-to-local, align 4
  %v4_1000420c = icmp eq i32 %v0_1000420c, 65535
  store i1 %v4_1000420c, i1* %cr7_eq.global-to-local, align 1
  %v0_10004210 = load i32, i32* %r18.global-to-local, align 4
  %v2_10004210 = icmp slt i32 %v0_10004210, 65535
  %v4_10004210 = icmp eq i32 %v0_10004210, 65535
  store i1 %v2_10004210, i1* %cr3_lt.global-to-local, align 1
  store i1 %v4_10004210, i1* %cr3_eq.global-to-local, align 1
  %v0_10004214 = load i32, i32* %r20.global-to-local, align 4
  %v4_10004214 = icmp eq i32 %v0_10004214, 65535
  store i1 %v4_10004214, i1* %cr2_eq.global-to-local, align 1
  %v0_10004218 = load i32, i32* @r24, align 4
  %v1_10004218 = add i32 %v0_10004218, 27
  store i32 %v1_10004218, i32* @r30, align 4
  %v0_1000421c = call i32 @__asm_mfcr()
  store i32 %v0_1000421c, i32* %r3.global-to-local, align 4
  %v1_10004220 = mul i32 %v0_1000421c, 268435456
  store i32 %v1_10004220, i32* @r26, align 4
  %v0_10004224 = load i32, i32* %r17.global-to-local, align 4
  %v1_10004224 = load i32, i32* %r0.global-to-local, align 4
  %v4_10004224 = icmp eq i32 %v0_10004224, %v1_10004224
  store i1 %v4_10004224, i1* %cr7_eq.global-to-local, align 1
  %v0_10004228 = load i32, i32* @r24, align 4
  %v1_10004228 = add i32 %v0_10004228, 47
  store i32 %v1_10004228, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10004230 = call i32 @__asm_mfcr()
  store i32 %v0_10004230, i32* %r3.global-to-local, align 4
  %v1_10004234 = mul i32 %v0_10004230, 268435456
  store i32 %v1_10004234, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r25, align 4
  %v0_1000423c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000423c

dec_label_pc_1000423c:                            ; preds = %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge, %dec_label_pc_100041fc
  %v0_10004240 = phi i32 [ %v0_10004240.pre, %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge ], [ %v1_10004234, %dec_label_pc_100041fc ]
  %v0_1000423c = phi i32 [ %v1_100042e0, %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge ], [ %v0_1000423c.pre, %dec_label_pc_100041fc ]
  %v1_1000423c = mul i32 %v0_1000423c, 4
  store i32 %v1_1000423c, i32* %r0.global-to-local, align 4
  %v1_10004240 = mul i32 %v0_10004240, 16
  %v2_10004240 = udiv i32 %v0_10004240, 268435456
  %v3_10004240 = or i32 %v2_10004240, %v1_10004240
  store i32 %v3_10004240, i32* %r27.global-to-local, align 4
  %v1_10004244 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10004240)
  %v1_10004248 = mul nuw i32 %v2_10004240, 268435456
  %v2_10004248 = urem i32 %v0_10004240, 268435456
  %v3_10004248 = or i32 %v1_10004248, %v2_10004248
  store i32 %v3_10004248, i32* @r27, align 4
  %v0_1000424c = load i32, i32* %r16.global-to-local, align 4
  %v1_1000424c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000424c = add i32 %v1_1000424c, %v0_1000424c
  %v3_1000424c = inttoptr i32 %v2_1000424c to i32*
  %v4_1000424c = load i32, i32* %v3_1000424c, align 4
  store i32 %v4_1000424c, i32* @r29, align 4
  %v1_10004250 = add i32 %v4_1000424c, 20
  store i32 %v1_10004250, i32* @r28, align 4
  %v0_10004254 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004254, label %dec_label_pc_100042f8, label %dec_label_pc_10004258

dec_label_pc_10004258:                            ; preds = %dec_label_pc_1000423c
  %v0_10004258 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004258, label %dec_label_pc_10004304, label %dec_label_pc_1000425c

dec_label_pc_1000425c:                            ; preds = %dec_label_pc_100042f8, %dec_label_pc_10004258
  %v0_1000425c = load i32, i32* @r26, align 4
  %v1_1000425c = mul i32 %v0_1000425c, 16
  %v2_1000425c = udiv i32 %v0_1000425c, 268435456
  %v3_1000425c = or i32 %v2_1000425c, %v1_1000425c
  store i32 %v3_1000425c, i32* %r26.global-to-local, align 4
  %v1_10004260 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000425c)
  %v1_10004264 = mul nuw i32 %v2_1000425c, 268435456
  %v2_10004264 = urem i32 %v0_1000425c, 268435456
  %v3_10004264 = or i32 %v1_10004264, %v2_10004264
  store i32 %v3_10004264, i32* @r26, align 4
  %v0_10004268 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004268, label %dec_label_pc_1000431c, label %dec_label_pc_1000426c

dec_label_pc_1000426c:                            ; preds = %dec_label_pc_10004304, %dec_label_pc_1000425c
  %v0_1000426c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000426c, label %dec_label_pc_10004328, label %dec_label_pc_10004270

dec_label_pc_10004270:                            ; preds = %dec_label_pc_1000431c, %dec_label_pc_1000426c, %dec_label_pc_10004328
  %v0_10004270 = load i32, i32* @r29, align 4
  %v1_10004270 = add i32 %v0_10004270, 41
  store i32 %v1_10004270, i32* %r3.global-to-local, align 4
  %v0_10004274 = load i32, i32* %r23.global-to-local, align 4
  store i32 268452476, i32* @lr, align 4
  %v2_10004278 = inttoptr i32 %v1_10004270 to i8*
  %v3_10004278 = call i32 @function_10005ffc(i8* %v2_10004278, i32 %v0_10004274)
  %v0_1000427c = load i32, i32* @r25, align 4
  %v1_1000427c = trunc i32 %v0_1000427c to i16
  %v2_1000427c = load i32, i32* @r29, align 4
  %v3_1000427c = add i32 %v2_1000427c, 10
  %v4_1000427c = inttoptr i32 %v3_1000427c to i16*
  store i16 %v1_1000427c, i16* %v4_1000427c, align 2
  %v0_10004284 = load i32, i32* @r29, align 4
  store i32 %v0_10004284, i32* @r3, align 4
  %v2_10004288 = call i32 @function_100043cc(i32 %v0_10004284, i32 20)
  %v3_10004288 = trunc i32 %v2_10004288 to i16
  %v0_1000428c = load i32, i32* @r28, align 4
  store i32 %v0_1000428c, i32* @r4, align 4
  %v3_10004290 = load i32, i32* @r29, align 4
  %v4_10004290 = add i32 %v3_10004290, 10
  %v5_10004290 = inttoptr i32 %v4_10004290 to i16*
  store i16 %v3_10004288, i16* %v5_10004290, align 2
  %v0_10004294 = load i32, i32* @r30, align 4
  %v0_10004298 = load i32, i32* @r25, align 4
  %v1_10004298 = trunc i32 %v0_10004298 to i16
  %v2_10004298 = load i32, i32* @r28, align 4
  %v3_10004298 = add i32 %v2_10004298, 6
  %v4_10004298 = inttoptr i32 %v3_10004298 to i16*
  store i16 %v1_10004298, i16* %v4_10004298, align 2
  %v0_1000429c = load i32, i32* @r29, align 4
  store i32 %v0_1000429c, i32* %r3.global-to-local, align 4
  %v0_100042a0 = load i32, i32* @r28, align 4
  %v1_100042a0 = add i32 %v0_100042a0, 4
  %v2_100042a0 = inttoptr i32 %v1_100042a0 to i16*
  %v3_100042a0 = load i16, i16* %v2_100042a0, align 2
  %v4_100042a0 = zext i16 %v3_100042a0 to i32
  %v4_100042a4 = call i32 @function_10004430(i32 %v0_1000429c, i32 %v0_1000428c, i32 %v4_100042a0, i32 %v0_10004294)
  %v5_100042a4 = trunc i32 %v4_100042a4 to i16
  store i32 %v4_100042a4, i32* %r3.global-to-local, align 4
  %v3_100042a8 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100042a8, i32* %r7.global-to-local, align 4
  %v0_100042ac = load i32, i32* @r28, align 4
  %v1_100042ac = add i32 %v0_100042ac, 2
  %v2_100042ac = inttoptr i32 %v1_100042ac to i16*
  %v3_100042ac = load i16, i16* %v2_100042ac, align 2
  %v4_100042ac = zext i16 %v3_100042ac to i32
  store i32 %v4_100042ac, i32* %r0.global-to-local, align 4
  %v0_100042b0 = load i32, i32* @r29, align 4
  %v1_100042b4 = mul i32 %v3_100042a8, 24
  store i32 %v1_100042b4, i32* %r7.global-to-local, align 4
  %v4_100042b8 = add i32 %v0_100042ac, 6
  %v5_100042b8 = inttoptr i32 %v4_100042b8 to i16*
  store i16 %v5_100042a4, i16* %v5_100042b8, align 2
  %v0_100042bc = load i32, i32* @r31, align 4
  %v0_100042c0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100042c0, i32* %r3.global-to-local, align 4
  %v0_100042c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100042c4 = load i32, i32* %r14.global-to-local, align 4
  %v2_100042c4 = add i32 %v1_100042c4, %v0_100042c4
  store i32 %v2_100042c4, i32* %r7.global-to-local, align 4
  %v0_100042cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100042cc = trunc i32 %v0_100042cc to i16
  %v3_100042cc = add i32 %v2_100042c4, 2
  %v4_100042cc = inttoptr i32 %v3_100042cc to i16*
  store i16 %v1_100042cc, i16* %v4_100042cc, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  %v0_100042d4 = load i32, i32* @r21, align 4
  %v2_100042d4 = add i32 %v2_100042c4, 4
  %v3_100042d4 = inttoptr i32 %v2_100042d4 to i32*
  store i32 %v0_100042d4, i32* %v3_100042d4, align 4
  store i32 268452572, i32* @lr, align 4
  %v6_100042d8 = call i32 @function_10009d70(i32 %v0_100042c0, i32 %v0_100042b0, i32 %v0_100042bc, i32 16384, i32 %v2_100042c4, i32 16)
  store i32 %v6_100042d8, i32* %r3.global-to-local, align 4
  %v3_100042dc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100042dc, i32* %r9.global-to-local, align 4
  %v1_100042e0 = add i32 %v3_100042dc, 1
  store i32 %v1_100042e0, i32* %r0.global-to-local, align 4
  %v1_100042e4 = load i32, i32* %r15.global-to-local, align 4
  %v2_100042e4 = icmp slt i32 %v1_100042e0, %v1_100042e4
  %v4_100042e4 = icmp eq i32 %v1_100042e0, %v1_100042e4
  store i1 %v4_100042e4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100042e0, i32* %stack_var_-2184, align 4
  br i1 %v2_100042e4, label %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge, label %dec_label_pc_100042f0

dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge: ; preds = %dec_label_pc_10004270
  %v0_10004240.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000423c

dec_label_pc_100042f0:                            ; preds = %dec_label_pc_10004270
  %v0_100042f0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100042f0 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100042f0 = or i1 %v0_100042f0, %v1_100042f0
  br i1 %v2_100042f0, label %dec_label_pc_100041f8.preheader, label %dec_label_pc_100041fc

dec_label_pc_100042f8:                            ; preds = %dec_label_pc_1000423c
  %v0_100042f8 = call i32 @function_10005f3c()
  %v1_100042f8 = trunc i32 %v0_100042f8 to i16
  store i32 %v0_100042f8, i32* %r3.global-to-local, align 4
  %v3_100042fc = load i32, i32* @r29, align 4
  %v4_100042fc = add i32 %v3_100042fc, 4
  %v5_100042fc = inttoptr i32 %v4_100042fc to i16*
  store i16 %v1_100042f8, i16* %v5_100042fc, align 2
  %v0_10004300 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004300, label %dec_label_pc_10004304, label %dec_label_pc_1000425c

dec_label_pc_10004304:                            ; preds = %dec_label_pc_100042f8, %dec_label_pc_10004258
  %v0_10004304 = call i32 @function_10005f3c()
  %v1_10004304 = trunc i32 %v0_10004304 to i16
  store i32 %v0_10004304, i32* %r3.global-to-local, align 4
  %v0_10004308 = load i32, i32* @r26, align 4
  %v1_10004308 = mul i32 %v0_10004308, 16
  %v2_10004308 = udiv i32 %v0_10004308, 268435456
  %v3_10004308 = or i32 %v2_10004308, %v1_10004308
  store i32 %v3_10004308, i32* %r26.global-to-local, align 4
  %v1_1000430c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10004308)
  %v1_10004310 = mul nuw i32 %v2_10004308, 268435456
  %v2_10004310 = urem i32 %v0_10004308, 268435456
  %v3_10004310 = or i32 %v1_10004310, %v2_10004310
  store i32 %v3_10004310, i32* @r26, align 4
  %v3_10004314 = load i32, i32* @r29, align 4
  %v4_10004314 = add i32 %v3_10004314, 20
  %v5_10004314 = inttoptr i32 %v4_10004314 to i16*
  store i16 %v1_10004304, i16* %v5_10004314, align 2
  %v0_10004318 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004318, label %dec_label_pc_1000431c, label %dec_label_pc_1000426c

dec_label_pc_1000431c:                            ; preds = %dec_label_pc_10004304, %dec_label_pc_1000425c
  %v0_1000431c = call i32 @function_10005f3c()
  %v1_1000431c = trunc i32 %v0_1000431c to i16
  store i32 %v0_1000431c, i32* %r3.global-to-local, align 4
  %v3_10004320 = load i32, i32* @r28, align 4
  %v4_10004320 = add i32 %v3_10004320, 2
  %v5_10004320 = inttoptr i32 %v4_10004320 to i16*
  store i16 %v1_1000431c, i16* %v5_10004320, align 2
  %v0_10004324 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004324, label %dec_label_pc_10004328, label %dec_label_pc_10004270

dec_label_pc_10004328:                            ; preds = %dec_label_pc_1000431c, %dec_label_pc_1000426c
  %v0_10004328 = call i32 @function_10005f3c()
  %v1_10004328 = trunc i32 %v0_10004328 to i16
  store i32 %v0_10004328, i32* %r3.global-to-local, align 4
  %v3_1000432c = load i32, i32* @r29, align 4
  %v4_1000432c = add i32 %v3_1000432c, 28
  %v5_1000432c = inttoptr i32 %v4_1000432c to i16*
  store i16 %v1_10004328, i16* %v5_1000432c, align 2
  br label %dec_label_pc_10004270

dec_label_pc_10004340:                            ; preds = %dec_label_pc_10004050
  %v0_10004340 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10004340, i32* %r3.global-to-local, align 4
  store i32 268452680, i32* @lr, align 4
  %v0_10004344 = call i32 @function_1000909c()
  store i32 %v0_10004344, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004348

dec_label_pc_10004348:                            ; preds = %dec_label_pc_10004028, %dec_label_pc_10004020, %dec_label_pc_10004340
  store i32 %v0_10003d74, i32* %r0.global-to-local, align 4
  %v1_1000435c = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003d64)
  store i32 %v0_10003d94, i32* %r24.global-to-local, align 4
  store i32 %v0_10003d98, i32* %r25.global-to-local, align 4
  store i32 %v0_10003d9c, i32* %r26.global-to-local, align 4
  store i32 %v0_10003da0, i32* %r27.global-to-local, align 4
  store i32 %v0_10003da4, i32* %r28.global-to-local, align 4
  store i32 %v0_10003dc8, i32* %r30.global-to-local, align 4
  store i32 %v0_10003db4, i32* %r31.global-to-local, align 4
  %v0_100043a4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100043a4

dec_label_pc_100043a8:                            ; preds = %dec_label_pc_10003fbc
  store i32 1246898730, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_100043b4:                            ; preds = %dec_label_pc_10003fd4
  store i32 1074151430, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_100043c0:                            ; preds = %dec_label_pc_10003fcc
  store i32 134744072, i32* @r21, align 4
  br label %dec_label_pc_10004020

; uselistorder directives
  uselistorder i32 %v0_10004328, { 1, 0 }
  uselistorder i32 %v0_1000431c, { 1, 0 }
  uselistorder i32 %v0_10004308, { 2, 1, 0 }
  uselistorder i32 %v0_10004304, { 1, 0 }
  uselistorder i32 %v0_100042f8, { 1, 0 }
  uselistorder i1 %v1_100042f0, { 1, 0 }
  uselistorder i1 %v0_100042f0, { 1, 0 }
  uselistorder i32 %v1_100042e0, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_100042a4, { 1, 0 }
  uselistorder i32 %v0_1000425c, { 2, 1, 0 }
  uselistorder i32 %v0_10004240, { 2, 1, 0 }
  uselistorder i32 %v1_10004234, { 1, 0 }
  uselistorder i32 %v0_100041bc, { 2, 0, 1 }
  uselistorder i32 %v1_100041ac, { 1, 0 }
  uselistorder i32 %v1_100041a4, { 0, 2, 1 }
  uselistorder i32 %v1_100040d8, { 1, 0 }
  uselistorder i32 %v1_100040d0, { 1, 0 }
  uselistorder i32 %v2_10004334, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10004334, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10004090, { 1, 0 }
  uselistorder i32 %v0_10004020, { 1, 0, 2 }
  uselistorder i1 %v2_10003fd4, { 1, 0 }
  uselistorder i32 %v1_10003fc0, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10003fb8, { 2, 1, 0 }
  uselistorder i32 %v1_10003fa0, { 1, 2, 0 }
  uselistorder i32 %v1_10003f7c, { 1, 0 }
  uselistorder i32 %v0_10003f70, { 1, 0 }
  uselistorder i32 %v2_10003f6c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_10003f4c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10003f44, { 1, 2, 0, 3, 5, 4, 6 }
  uselistorder i32 %v0_10003eec, { 1, 0, 2, 3 }
  uselistorder i8 %v5_10003e2c, { 1, 0 }
  uselistorder i8 %v5_10003df4, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r31.global-to-local, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r30.global-to-local, { 8, 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 29, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 2, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 3, 0 }
  uselistorder i32* %r28.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r27.global-to-local, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r26.global-to-local, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r25.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r24.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %ctr.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 41, { 2, 3, 4, 0, 1 }
  uselistorder i32 47, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @function_10009b50, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_100006a8, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 103, 104, 105, 106, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102 }
  uselistorder label %dec_label_pc_10004348, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004270, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100041fc, { 1, 0 }
  uselistorder label %dec_label_pc_100041f8, { 1, 0 }
  uselistorder label %dec_label_pc_100041f8.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10004124, { 1, 0 }
  uselistorder label %dec_label_pc_10004020, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_10003f9c, { 1, 0 }
}

define i32 @function_100043cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100043cc:
  %tmp = or i32 %arg1, 1
  %tmp8 = icmp eq i32 %tmp, 1
  br i1 %tmp8, label %dec_label_pc_10004400, label %dec_label_pc_100043d8

dec_label_pc_100043d8:                            ; preds = %dec_label_pc_100043cc
  %v1_100043d8 = add i32 %arg1, -2
  %v1_100043dc = udiv i32 %v1_100043d8, 2
  %v1_100043e0 = add nuw i32 %v1_100043dc, 1
  %v0_100043ec.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100043ec

dec_label_pc_100043ec:                            ; preds = %dec_label_pc_100043ec, %dec_label_pc_100043d8
  %v0_100043fc = phi i32 [ %v1_100043fc, %dec_label_pc_100043ec ], [ %v1_100043e0, %dec_label_pc_100043d8 ]
  %v0_100043f8 = phi i32 [ %v2_100043f8, %dec_label_pc_100043ec ], [ 0, %dec_label_pc_100043d8 ]
  %v0_100043f4 = phi i32 [ %v1_100043f4, %dec_label_pc_100043ec ], [ %v0_100043ec.pre, %dec_label_pc_100043d8 ]
  %v1_100043ec = inttoptr i32 %v0_100043f4 to i16*
  %v2_100043ec = load i16, i16* %v1_100043ec, align 2
  %v3_100043ec = zext i16 %v2_100043ec to i32
  %v1_100043f4 = add i32 %v0_100043f4, 2
  store i32 %v1_100043f4, i32* @r3, align 4
  %v2_100043f8 = add i32 %v3_100043ec, %v0_100043f8
  %v1_100043fc = add i32 %v0_100043fc, -1
  %v2_100043fc = icmp eq i32 %v1_100043fc, 0
  br i1 %v2_100043fc, label %dec_label_pc_10004400.loopexit, label %dec_label_pc_100043ec

dec_label_pc_10004400.loopexit:                   ; preds = %dec_label_pc_100043ec
  %tmp11 = mul i32 %v1_100043dc, -2
  %tmp10 = add i32 %v1_100043d8, %tmp11
  br label %dec_label_pc_10004400

dec_label_pc_10004400:                            ; preds = %dec_label_pc_10004400.loopexit, %dec_label_pc_100043cc
  %v0_1000440c = phi i32 [ 0, %dec_label_pc_100043cc ], [ %v2_100043f8, %dec_label_pc_10004400.loopexit ]
  %v0_10004400 = phi i32 [ %arg1, %dec_label_pc_100043cc ], [ %tmp10, %dec_label_pc_10004400.loopexit ]
  %v3_10004400 = icmp eq i32 %v0_10004400, 1
  br i1 %v3_10004400, label %dec_label_pc_10004408, label %dec_label_pc_10004410

dec_label_pc_10004408:                            ; preds = %dec_label_pc_10004400
  %v0_10004408 = load i32, i32* @r3, align 4
  %v1_10004408 = add i32 %v0_10004408, 1
  %v2_10004408 = inttoptr i32 %v1_10004408 to i8*
  %v3_10004408 = load i8, i8* %v2_10004408, align 1
  %v4_10004408 = zext i8 %v3_10004408 to i32
  %v2_1000440c = add i32 %v4_10004408, %v0_1000440c
  br label %dec_label_pc_10004410

dec_label_pc_10004410:                            ; preds = %dec_label_pc_10004400, %dec_label_pc_10004408
  %v0_10004410 = phi i32 [ %v0_1000440c, %dec_label_pc_10004400 ], [ %v2_1000440c, %dec_label_pc_10004408 ]
  %v1_10004410 = urem i32 %v0_10004410, 65536
  %v1_10004414 = udiv i32 %v0_10004410, 65536
  %v2_10004418 = add nuw nsw i32 %v1_10004410, %v1_10004414
  %v1_1000441c = udiv i32 %v2_10004418, 65536
  %v2_10004420 = add nuw nsw i32 %v1_1000441c, %v2_10004418
  %v1_10004424 = urem i32 %v2_10004420, 65536
  %v1_10004428 = xor i32 %v1_10004424, 65535
  ret i32 %v1_10004428

; uselistorder directives
  uselistorder i32 %v2_10004418, { 1, 0 }
  uselistorder i32 %v0_1000440c, { 1, 0 }
  uselistorder i32 %v1_100043fc, { 1, 0 }
  uselistorder i32 %v1_100043f4, { 1, 0 }
  uselistorder label %dec_label_pc_10004410, { 1, 0 }
}

define i32 @function_10004430(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004430:
  %r0.global-to-local = alloca i32, align 4
  %v1_10004434 = add i32 %arg1, 12
  %v2_10004434 = inttoptr i32 %v1_10004434 to i32*
  %v3_10004434 = load i32, i32* %v2_10004434, align 4
  %v1_10004438 = add i32 %arg1, 16
  %v2_10004438 = inttoptr i32 %v1_10004438 to i32*
  %v3_10004438 = load i32, i32* %v2_10004438, align 4
  %tmp = icmp slt i32 %arg3, 2
  br i1 %tmp, label %dec_label_pc_10004474, label %dec_label_pc_10004440

dec_label_pc_10004440:                            ; preds = %dec_label_pc_10004430
  %v1_10004440 = add i32 %arg3, -2
  %v1_10004448 = icmp slt i32 %v1_10004440, 0
  %v1_1000444c = udiv i32 %v1_10004440, 2
  %v1_10004450 = add nuw i32 %v1_1000444c, 1
  br i1 %v1_10004448, label %dec_label_pc_100044dc, label %dec_label_pc_1000445c.preheader

dec_label_pc_1000445c.preheader:                  ; preds = %dec_label_pc_100044dc, %dec_label_pc_10004440
  %v0_100044704 = phi i32 [ 1, %dec_label_pc_100044dc ], [ %v1_10004450, %dec_label_pc_10004440 ]
  %v0_1000445c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000445c

dec_label_pc_1000445c:                            ; preds = %dec_label_pc_1000445c.preheader, %dec_label_pc_1000445c
  %v0_10004470 = phi i32 [ %v0_100044704, %dec_label_pc_1000445c.preheader ], [ %v1_10004470, %dec_label_pc_1000445c ]
  %v0_1000446c = phi i32 [ 0, %dec_label_pc_1000445c.preheader ], [ %v2_1000446c, %dec_label_pc_1000445c ]
  %v0_10004464 = phi i32 [ %v0_1000445c.pre, %dec_label_pc_1000445c.preheader ], [ %v1_10004464, %dec_label_pc_1000445c ]
  %v1_1000445c = inttoptr i32 %v0_10004464 to i16*
  %v2_1000445c = load i16, i16* %v1_1000445c, align 2
  %v3_1000445c = zext i16 %v2_1000445c to i32
  store i32 %v3_1000445c, i32* %r0.global-to-local, align 4
  %v1_10004464 = add i32 %v0_10004464, 2
  %v2_1000446c = add i32 %v3_1000445c, %v0_1000446c
  %v1_10004470 = add i32 %v0_10004470, -1
  %v2_10004470 = icmp eq i32 %v1_10004470, 0
  br i1 %v2_10004470, label %dec_label_pc_10004474.loopexit, label %dec_label_pc_1000445c

dec_label_pc_10004474.loopexit:                   ; preds = %dec_label_pc_1000445c
  %tmp14 = mul i32 %v0_100044704, -2
  %tmp13 = add i32 %tmp14, %arg3
  %v3_10004468 = icmp eq i32 %tmp13, 1
  br i1 %v3_10004468, label %dec_label_pc_100044c8, label %dec_label_pc_10004478

dec_label_pc_10004474:                            ; preds = %dec_label_pc_10004430
  %v3_10004430 = icmp eq i32 %arg3, 1
  br i1 %v3_10004430, label %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, label %dec_label_pc_10004478

dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge: ; preds = %dec_label_pc_10004474
  %v0_100044c8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100044c8

dec_label_pc_10004478:                            ; preds = %dec_label_pc_10004474.loopexit, %dec_label_pc_10004474, %dec_label_pc_100044c8
  %v0_10004490 = phi i32 [ 0, %dec_label_pc_10004474 ], [ %v2_100044cc, %dec_label_pc_100044c8 ], [ %v2_1000446c, %dec_label_pc_10004474.loopexit ]
  %v1_10004478 = urem i32 %v3_10004434, 65536
  %v1_1000447c = udiv i32 %v3_10004434, 65536
  %v2_10004480 = add nuw nsw i32 %v1_10004478, %v1_1000447c
  store i32 %v2_10004480, i32* %r0.global-to-local, align 4
  %v1_10004484 = urem i32 %v3_10004438, 65536
  %v1_10004488 = add i32 %arg1, 9
  %v2_10004488 = inttoptr i32 %v1_10004488 to i8*
  %v3_10004488 = load i8, i8* %v2_10004488, align 1
  %v4_10004488 = zext i8 %v3_10004488 to i32
  %v1_1000448c = udiv i32 %v3_10004438, 65536
  %v2_10004490 = add i32 %v0_10004490, %v1_1000448c
  %v2_10004498 = add i32 %v2_10004490, %v4_10004488
  %v2_10004494 = add i32 %v2_10004480, %arg2
  %v2_1000449c = add i32 %v2_10004494, %v1_10004484
  %v2_100044a0 = add i32 %v2_1000449c, %v2_10004498
  store i32 %v2_100044a0, i32* %r0.global-to-local, align 4
  %v1_100044a4 = call i32 @__asm_rlwinm.(i32 %v2_100044a0, i32 16, i32 16, i32 31)
  %v4_100044a4 = icmp eq i32 %v1_100044a4, 0
  br i1 %v4_100044a4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044ac:                            ; preds = %dec_label_pc_10004478, %dec_label_pc_100044ac
  %v1_100044b0 = phi i32 [ %v1_100044b4, %dec_label_pc_100044ac ], [ %v1_100044a4, %dec_label_pc_10004478 ]
  %v0_100044ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100044ac = urem i32 %v0_100044ac, 65536
  %v2_100044b0 = add i32 %v1_100044ac, %v1_100044b0
  store i32 %v2_100044b0, i32* %r0.global-to-local, align 4
  %v1_100044b4 = call i32 @__asm_rlwinm.(i32 %v2_100044b0, i32 16, i32 16, i32 31)
  %v4_100044b4 = icmp eq i32 %v1_100044b4, 0
  br i1 %v4_100044b4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044bc:                            ; preds = %dec_label_pc_100044ac, %dec_label_pc_10004478
  %v0_100044bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100044bc = urem i32 %v0_100044bc, 65536
  %v1_100044c0 = xor i32 %v1_100044bc, 65535
  ret i32 %v1_100044c0

dec_label_pc_100044c8:                            ; preds = %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, %dec_label_pc_10004474.loopexit
  %v0_100044c8 = phi i32 [ %v1_10004464, %dec_label_pc_10004474.loopexit ], [ %v0_100044c8.pre, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v0_100044cc10 = phi i32 [ %v2_1000446c, %dec_label_pc_10004474.loopexit ], [ 0, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v1_100044c8 = inttoptr i32 %v0_100044c8 to i8*
  %v2_100044c8 = load i8, i8* %v1_100044c8, align 1
  %v3_100044c8 = zext i8 %v2_100044c8 to i32
  store i32 %v3_100044c8, i32* %r0.global-to-local, align 4
  %v2_100044cc = add i32 %v3_100044c8, %v0_100044cc10
  br label %dec_label_pc_10004478

dec_label_pc_100044dc:                            ; preds = %dec_label_pc_10004440
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000445c.preheader

; uselistorder directives
  uselistorder i32 %v1_100044b4, { 1, 0 }
  uselistorder i32 %v1_10004470, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 %arg3, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100044ac, { 1, 0 }
  uselistorder label %dec_label_pc_10004478, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000445c, { 1, 0 }
}

define i32 @function_100044e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100044e8:
  %v3_100044fc = load i32, i32* @global_var_1001c214.26, align 4
  store i32 268453124, i32* @lr, align 4
  %v2_10004500 = call i32 @function_100091bc(i32 %v3_100044fc, i32 9)
  ret i32 %v2_10004500
}

define i32 @function_10004514(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004514:
  %r26.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-8792 = alloca i32, align 4
  %stack_var_-8760 = alloca i8, align 1
  %stack_var_-8776 = alloca i8, align 1
  %stack_var_-4151 = alloca i32, align 4
  %stack_var_-8247 = alloca i32, align 4
  %v0_10004524 = load i32, i32* @r27, align 4
  %v2_10004528 = ptrtoint i32* %stack_var_-8247 to i32
  store i32 %v2_10004528, i32* @r27, align 4
  %v2_10004530 = ptrtoint i32* %stack_var_-4151 to i32
  %v0_10004534 = load i32, i32* @r29, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_10004544 = load i32, i32* @r25, align 4
  %v2_10004548 = ptrtoint i8* %stack_var_-8776 to i32
  %v0_1000454c = load i32, i32* @r30, align 4
  %v2_10004550 = ptrtoint i8* %stack_var_-8760 to i32
  store i32 %v2_10004550, i32* @r30, align 4
  %v0_10004554 = load i32, i32* @r31, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_1000455c = load i32, i32* @r23, align 4
  %v0_10004564 = load i32, i32* @r28, align 4
  store i32 268453228, i32* @lr, align 4
  %v3_10004568 = call i32 @function_100098a0(i32 %v2_10004528, i32 0, i32 4096)
  store i32 268453244, i32* @lr, align 4
  %v3_10004578 = call i32 @function_100098a0(i32 %v2_10004530, i32 0, i32 4096)
  store i32 268453260, i32* @lr, align 4
  %v3_10004588 = call i32 @function_100098a0(i32 %v2_10004550, i32 0, i32 513)
  %v0_10004594 = load i32, i32* @r29, align 4
  %v0_10004598 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004598, i32* %stack_var_-8792, align 4
  %v3_100045a8 = trunc i32 %v0_10004594 to i8
  %v4_100045a8 = call i32 @function_10008db8(i8 %v3_100045a8, i32 16, i32 %v2_10004548)
  store i32 268453300, i32* @lr, align 4
  %v2_100045b0 = call i32 @function_100088dc(i8* nonnull %stack_var_-8776)
  %v3_100045b4 = icmp eq i32 %v2_100045b0, 2
  br i1 %v3_100045b4, label %dec_label_pc_10004af4, label %dec_label_pc_100045bc

dec_label_pc_100045bc:                            ; preds = %dec_label_pc_10004514, %dec_label_pc_10004af4
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100045c8.27 to i32), i32* @lr, align 4
  %v1_100045c4 = call i32 @function_10008278(i32 15)
  store i32 ptrtoint ([3 x i8]* @global_var_100045d0.28 to i32), i32* @lr, align 4
  %v1_100045cc = call i32 @function_10008278(i32 16)
  store i32 ptrtoint ([3 x i8]* @global_var_100045d8.29 to i32), i32* @lr, align 4
  %v1_100045d4 = call i32 @function_10008278(i32 17)
  store i32 268453344, i32* @lr, align 4
  %v1_100045dc = call i32 @function_10008278(i32 19)
  %v3_100045e8 = call i32 @function_100081c4(i32 19, i32* null)
  store i32 268453368, i32* @lr, align 4
  %v2_100045f4 = call i32 @function_10009204(i32 %v3_100045e8, i32 0)
  %v3_100045f8 = icmp eq i32 %v2_100045f4, -1
  store i32 %v2_100045f4, i32* @r28, align 4
  br i1 %v3_100045f8, label %dec_label_pc_10004a40, label %dec_label_pc_10004604

dec_label_pc_10004604:                            ; preds = %dec_label_pc_100045bc
  %v2_10004604 = ptrtoint i32* %stack_var_-8792 to i32
  store i32 %v2_10004604, i32* %r26.global-to-local, align 4
  store i32 268453400, i32* @lr, align 4
  %v4_1000461488 = call i32 @function_10008b3c(i8* nonnull %stack_var_-8760, i32 512, i32 %v2_100045f4)
  %v3_1000461890 = icmp eq i32 %v4_1000461488, 0
  br i1 %v3_1000461890, label %dec_label_pc_100047c0.loopexit, label %dec_label_pc_10004620

dec_label_pc_10004620:                            ; preds = %dec_label_pc_10004604, %dec_label_pc_10004608.backedge
  %v3_10004620 = load i8, i8* %stack_var_-8760, align 1
  %v3_10004624 = icmp eq i8 %v3_10004620, 0
  br i1 %v3_10004624, label %dec_label_pc_10004608.backedge, label %dec_label_pc_1000462c

dec_label_pc_10004608.backedge:                   ; preds = %dec_label_pc_10004640, %dec_label_pc_10004620, %dec_label_pc_100046b0, %dec_label_pc_10004748, %dec_label_pc_10004794
  %v0_10004610.pre = load i32, i32* @r28, align 4
  store i32 268453400, i32* @lr, align 4
  %v4_10004614 = call i32 @function_10008b3c(i8* nonnull %stack_var_-8760, i32 512, i32 %v0_10004610.pre)
  %v3_10004618 = icmp eq i32 %v4_10004614, 0
  br i1 %v3_10004618, label %dec_label_pc_100047c0.loopexit, label %dec_label_pc_10004620

dec_label_pc_1000462c:                            ; preds = %dec_label_pc_10004620
  %v3_1000462c = icmp eq i8 %v3_10004620, 58
  store i32 3, i32* @r31, align 4
  br i1 %v3_1000462c, label %dec_label_pc_10004660, label %dec_label_pc_1000463c

dec_label_pc_1000463c:                            ; preds = %dec_label_pc_1000462c
  %v1_10004644.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10004640

dec_label_pc_10004640:                            ; preds = %dec_label_pc_10004654, %dec_label_pc_1000463c
  %v0_10004640 = phi i32 [ %v1_10004640, %dec_label_pc_10004654 ], [ 0, %dec_label_pc_1000463c ]
  %v1_10004640 = add i32 %v0_10004640, 1
  %v2_10004644 = add i32 %v1_10004640, %v1_10004644.pre
  %v3_10004644 = inttoptr i32 %v2_10004644 to i8*
  %v4_10004644 = load i8, i8* %v3_10004644, align 1
  %v3_10004648 = icmp eq i8 %v4_10004644, 0
  br i1 %v3_10004648, label %dec_label_pc_10004608.backedge, label %dec_label_pc_10004654

dec_label_pc_10004654:                            ; preds = %dec_label_pc_10004640
  %v3_1000464c = icmp eq i8 %v4_10004644, 58
  br i1 %v3_1000464c, label %dec_label_pc_10004658, label %dec_label_pc_10004640

dec_label_pc_10004658:                            ; preds = %dec_label_pc_10004654
  %v1_10004658 = add i32 %v0_10004640, 4
  store i32 %v1_10004658, i32* @r31, align 4
  %v1_1000465c = add i32 %v0_10004640, 3
  br label %dec_label_pc_10004660

dec_label_pc_10004660:                            ; preds = %dec_label_pc_1000462c, %dec_label_pc_10004658
  %v1_100046b8 = phi i32 [ 2, %dec_label_pc_1000462c ], [ %v1_1000465c, %dec_label_pc_10004658 ]
  %v0_10004660 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004660 = add i32 %v0_10004660, %v1_100046b8
  %v1_10004668 = add i32 %v2_10004660, 32
  %v2_10004668 = inttoptr i32 %v1_10004668 to i8*
  %v3_10004668 = load i8, i8* %v2_10004668, align 1
  %v3_1000466c = icmp eq i8 %v3_10004668, 0
  br i1 %v3_1000466c, label %dec_label_pc_100046b0, label %dec_label_pc_10004674

dec_label_pc_10004674:                            ; preds = %dec_label_pc_10004660
  %v3_10004674 = icmp eq i8 %v3_10004668, 32
  %v1_10004678 = add i32 %v1_100046b8, 1
  store i32 %v1_10004678, i32* @r31, align 4
  br i1 %v3_10004674, label %dec_label_pc_100046b0, label %dec_label_pc_10004680

dec_label_pc_10004680:                            ; preds = %dec_label_pc_10004674
  %v0_10004688 = load i32, i32* @r30, align 4
  %v2_10004688 = add i32 %v0_10004688, %v1_10004678
  br label %dec_label_pc_10004694

dec_label_pc_10004694:                            ; preds = %dec_label_pc_10004694, %dec_label_pc_10004680
  %v0_10004698 = phi i32 [ %v1_10004698, %dec_label_pc_10004694 ], [ %v1_100046b8, %dec_label_pc_10004680 ]
  %v0_1000469c = phi i32 [ %v1_1000469c, %dec_label_pc_10004694 ], [ %v2_10004688, %dec_label_pc_10004680 ]
  %v1_10004694 = inttoptr i32 %v0_1000469c to i8*
  %v2_10004694 = load i8, i8* %v1_10004694, align 1
  %v1_10004698 = add i32 %v0_10004698, 1
  %v1_1000469c = add i32 %v0_1000469c, 1
  %tmp60 = or i8 %v2_10004694, 32
  %tmp61 = icmp eq i8 %tmp60, 32
  br i1 %tmp61, label %dec_label_pc_100046ac, label %dec_label_pc_10004694

dec_label_pc_100046ac:                            ; preds = %dec_label_pc_10004694
  %v1_100046ac = add i32 %v0_10004698, 2
  store i32 %v1_100046ac, i32* @r31, align 4
  br label %dec_label_pc_100046b0

dec_label_pc_100046b0:                            ; preds = %dec_label_pc_10004674, %dec_label_pc_10004660, %dec_label_pc_100046ac
  %v1_100046b0 = phi i32 [ %v1_100046b8, %dec_label_pc_10004674 ], [ %v1_100046b8, %dec_label_pc_10004660 ], [ %v1_10004698, %dec_label_pc_100046ac ]
  %v2_100046b0 = add i32 %v1_100046b0, %v0_10004660
  %v0_100046b8 = load i32, i32* @r30, align 4
  %v2_100046b8 = add i32 %v0_100046b8, %v1_100046b8
  store i32 %v2_100046b8, i32* @r29, align 4
  %v3_100046bc = add i32 %v2_100046b0, 32
  %v4_100046bc = inttoptr i32 %v3_100046bc to i8*
  store i8 0, i8* %v4_100046bc, align 1
  %v0_100046c0 = load i32, i32* @r29, align 4
  store i32 268453576, i32* @lr, align 4
  %v1_100046c4 = inttoptr i32 %v0_100046c0 to i8*
  %v2_100046c4 = call i32 @function_100088dc(i8* %v1_100046c4)
  %v0_100046d0 = load i32, i32* @r29, align 4
  %v3_100046d4 = inttoptr i32 %v0_100046d0 to i8*
  %v4_100046d4 = call i32 @function_10008c8c(i8* %v3_100046d4, i32 %v2_100046c4, i32 %v2_10004548)
  %v3_100046dc = icmp eq i32 %v4_100046d4, -1
  br i1 %v3_100046dc, label %dec_label_pc_10004608.backedge, label %dec_label_pc_100046e8.preheader

dec_label_pc_100046e8.preheader:                  ; preds = %dec_label_pc_100046b0
  %v0_100046e8.pre = load i32, i32* @r31, align 4
  %v0_100046f0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100046e8.outer

dec_label_pc_100046e8.outer:                      ; preds = %dec_label_pc_10004a90, %dec_label_pc_100046e8.preheader
  %v0_1000470428.ph = phi i32 [ %v1_10004a78, %dec_label_pc_10004a90 ], [ 0, %dec_label_pc_100046e8.preheader ]
  %v0_100046e8.ph = phi i32 [ %v1_1000479c76, %dec_label_pc_10004a90 ], [ %v0_100046e8.pre, %dec_label_pc_100046e8.preheader ]
  %v0_10004748.ph = phi i32 [ 1, %dec_label_pc_10004a90 ], [ 0, %dec_label_pc_100046e8.preheader ]
  br label %dec_label_pc_100046e8

dec_label_pc_100046e8:                            ; preds = %dec_label_pc_100046e8.outer, %dec_label_pc_10004a80
  %v0_1000470428 = phi i32 [ %v1_10004a78, %dec_label_pc_10004a80 ], [ %v0_1000470428.ph, %dec_label_pc_100046e8.outer ]
  %v0_100046e8 = phi i32 [ %v1_1000479c76, %dec_label_pc_10004a80 ], [ %v0_100046e8.ph, %dec_label_pc_100046e8.outer ]
  %v1_100046e8 = add i32 %v0_100046e8, 1
  %v2_100046f0 = add i32 %v1_100046e8, %v0_100046f0.pre
  %v1_1000471c68 = inttoptr i32 %v2_100046f0 to i8*
  %v2_1000471c69 = load i8, i8* %v1_1000471c68, align 1
  store i32 %v1_100046e8, i32* @r31, align 4
  %v3_1000472471 = icmp eq i8 %v2_1000471c69, 0
  br i1 %v3_1000472471, label %dec_label_pc_10004748, label %dec_label_pc_10004734

dec_label_pc_100046f8:                            ; preds = %dec_label_pc_10004734
  %v3_1000472879 = icmp eq i8 %v3_1000472879.in, 9
  br i1 %v3_1000472879, label %dec_label_pc_10004738, label %dec_label_pc_10004704

dec_label_pc_10004704:                            ; preds = %dec_label_pc_100046f8
  %v3_100046f8 = icmp eq i32 %v0_100046f875, 1
  br i1 %v3_100046f8, label %dec_label_pc_10004a78, label %dec_label_pc_1000470c

dec_label_pc_1000470c:                            ; preds = %dec_label_pc_10004704, %dec_label_pc_10004a78
  %v0_1000470c = phi i32 [ %v1_10004a78, %dec_label_pc_10004a78 ], [ %v0_1000473874, %dec_label_pc_10004704 ]
  %v2_1000470c = icmp sgt i32 %v0_1000470c, 6
  br i1 %v2_1000470c, label %dec_label_pc_10004748, label %dec_label_pc_10004718

dec_label_pc_10004718:                            ; preds = %dec_label_pc_10004738, %dec_label_pc_1000470c
  %v0_1000470427 = phi i32 [ %v0_1000473874, %dec_label_pc_10004738 ], [ %v0_1000470c, %dec_label_pc_1000470c ]
  %v0_100046f825 = phi i32 [ 1, %dec_label_pc_10004738 ], [ 0, %dec_label_pc_1000470c ]
  %v0_1000471c22 = add i32 %v0_1000474078, 1
  %v1_10004718 = add i32 %v1_1000479c76, 1
  %v1_1000471c = inttoptr i32 %v0_1000471c22 to i8*
  %v2_1000471c = load i8, i8* %v1_1000471c, align 1
  store i32 %v1_10004718, i32* @r31, align 4
  %v3_10004724 = icmp eq i8 %v2_1000471c, 0
  br i1 %v3_10004724, label %dec_label_pc_10004748, label %dec_label_pc_10004734

dec_label_pc_10004734:                            ; preds = %dec_label_pc_100046e8, %dec_label_pc_10004718
  %v3_1000472879.in = phi i8 [ %v2_1000471c, %dec_label_pc_10004718 ], [ %v2_1000471c69, %dec_label_pc_100046e8 ]
  %v3_1000472c80.in = phi i8 [ %v2_1000471c, %dec_label_pc_10004718 ], [ %v2_1000471c69, %dec_label_pc_100046e8 ]
  %v0_1000474078 = phi i32 [ %v0_1000471c22, %dec_label_pc_10004718 ], [ %v2_100046f0, %dec_label_pc_100046e8 ]
  %v1_1000479c76 = phi i32 [ %v1_10004718, %dec_label_pc_10004718 ], [ %v1_100046e8, %dec_label_pc_100046e8 ]
  %v0_100046f875 = phi i32 [ %v0_100046f825, %dec_label_pc_10004718 ], [ 0, %dec_label_pc_100046e8 ]
  %v0_1000473874 = phi i32 [ %v0_1000470427, %dec_label_pc_10004718 ], [ %v0_1000470428, %dec_label_pc_100046e8 ]
  %v3_1000472c80 = icmp eq i8 %v3_1000472c80.in, 32
  br i1 %v3_1000472c80, label %dec_label_pc_10004738, label %dec_label_pc_100046f8

dec_label_pc_10004738:                            ; preds = %dec_label_pc_10004734, %dec_label_pc_100046f8
  %tmp62 = icmp slt i32 %v0_1000473874, 7
  br i1 %tmp62, label %dec_label_pc_10004718, label %dec_label_pc_10004748

dec_label_pc_10004748:                            ; preds = %dec_label_pc_10004718, %dec_label_pc_1000470c, %dec_label_pc_10004738, %dec_label_pc_100046e8
  %v1_1000479c.lcssa = phi i32 [ %v1_100046e8, %dec_label_pc_100046e8 ], [ %v1_1000479c76, %dec_label_pc_10004738 ], [ %v1_1000479c76, %dec_label_pc_1000470c ], [ %v1_10004718, %dec_label_pc_10004718 ]
  %v3_10004748 = icmp eq i32 %v0_10004748.ph, 0
  br i1 %v3_10004748, label %dec_label_pc_10004608.backedge, label %dec_label_pc_10004754

dec_label_pc_10004754:                            ; preds = %dec_label_pc_10004748
  %v0_10004754 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004754 = add i32 %v0_10004754, %v1_1000479c.lcssa
  %v1_10004758 = add i32 %v2_10004754, 32
  %v2_10004758 = inttoptr i32 %v1_10004758 to i8*
  %v3_10004758 = load i8, i8* %v2_10004758, align 1
  %v3_1000475c = icmp eq i8 %v3_10004758, 0
  br i1 %v3_1000475c, label %dec_label_pc_10004794, label %dec_label_pc_10004764

dec_label_pc_10004764:                            ; preds = %dec_label_pc_10004754
  %v3_10004764 = icmp eq i8 %v3_10004758, 32
  br i1 %v3_10004764, label %dec_label_pc_10004794, label %dec_label_pc_1000476c

dec_label_pc_1000476c:                            ; preds = %dec_label_pc_10004764
  %v1_1000476c = add i32 %v1_1000479c.lcssa, 1
  %v2_10004770 = add i32 %v1_1000476c, %v0_100046f0.pre
  br label %dec_label_pc_1000477c

dec_label_pc_1000477c:                            ; preds = %dec_label_pc_1000477c, %dec_label_pc_1000476c
  %v0_10004780 = phi i32 [ %v1_10004780, %dec_label_pc_1000477c ], [ %v1_1000479c.lcssa, %dec_label_pc_1000476c ]
  %v0_10004784 = phi i32 [ %v1_10004784, %dec_label_pc_1000477c ], [ %v2_10004770, %dec_label_pc_1000476c ]
  %v1_1000477c = inttoptr i32 %v0_10004784 to i8*
  %v2_1000477c = load i8, i8* %v1_1000477c, align 1
  %v1_10004780 = add i32 %v0_10004780, 1
  %v1_10004784 = add i32 %v0_10004784, 1
  %tmp63 = or i8 %v2_1000477c, 32
  %tmp64 = icmp eq i8 %tmp63, 32
  br i1 %tmp64, label %dec_label_pc_10004794, label %dec_label_pc_1000477c

dec_label_pc_10004794:                            ; preds = %dec_label_pc_1000477c, %dec_label_pc_10004764, %dec_label_pc_10004754
  %v1_10004794 = phi i32 [ %v1_1000479c.lcssa, %dec_label_pc_10004764 ], [ %v1_1000479c.lcssa, %dec_label_pc_10004754 ], [ %v1_10004780, %dec_label_pc_1000477c ]
  %v2_10004794 = add i32 %v1_10004794, %v0_10004754
  %v2_1000479c = add i32 %v1_1000479c.lcssa, %v0_100046f0.pre
  store i32 %v2_1000479c, i32* @r31, align 4
  %v3_100047a0 = add i32 %v2_10004794, 32
  %v4_100047a0 = inttoptr i32 %v3_100047a0 to i8*
  store i8 0, i8* %v4_100047a0, align 1
  %v0_100047a4 = load i32, i32* @r31, align 4
  store i32 268453804, i32* @lr, align 4
  %v1_100047a8 = inttoptr i32 %v0_100047a4 to i8*
  %v2_100047a8 = call i32 @function_100088dc(i8* %v1_100047a8)
  %v2_100047ac = icmp sgt i32 %v2_100047a8, 15
  br i1 %v2_100047ac, label %dec_label_pc_10004608.backedge, label %dec_label_pc_100047b4

dec_label_pc_100047b4:                            ; preds = %dec_label_pc_10004794
  %v0_100047b4 = load i32, i32* @r31, align 4
  store i32 %v2_10004604, i32* @r3, align 4
  %v2_100047bc = bitcast i32* %stack_var_-8792 to i8*
  %v3_100047bc = call i32 @function_10008904(i8* %v2_100047bc, i32 %v0_100047b4)
  br label %dec_label_pc_100047c0

dec_label_pc_100047c0.loopexit:                   ; preds = %dec_label_pc_10004608.backedge, %dec_label_pc_10004604
  %.pre = bitcast i32* %stack_var_-8792 to i8*
  br label %dec_label_pc_100047c0

dec_label_pc_100047c0:                            ; preds = %dec_label_pc_100047c0.loopexit, %dec_label_pc_100047b4
  %v1_100047cc.pre-phi = phi i8* [ %.pre, %dec_label_pc_100047c0.loopexit ], [ %v2_100047bc, %dec_label_pc_100047b4 ]
  store i32 268453832, i32* @lr, align 4
  %v0_100047c4 = call i32 @function_1000909c()
  store i32 268453840, i32* @lr, align 4
  %v2_100047cc = call i32 @function_100088dc(i8* %v1_100047cc.pre-phi)
  %v3_100047d0 = icmp eq i32 %v2_100047cc, 0
  br i1 %v3_100047d0, label %dec_label_pc_10004a98, label %dec_label_pc_100047d8

dec_label_pc_100047d8:                            ; preds = %dec_label_pc_100047c0
  %v3_100047e0 = call i32 @function_100081c4(i32 15, i32* null)
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268453868, i32* @lr, align 4
  %v1_100047e8 = call i32 @function_100095e8(i32 %v3_100047e0)
  store i32 %v1_100047e8, i32* @r23, align 4
  %v3_100047ec = icmp eq i32 %v1_100047e8, 0
  br i1 %v3_100047ec, label %dec_label_pc_10004a20, label %dec_label_pc_100047f4

dec_label_pc_100047f4:                            ; preds = %dec_label_pc_100047d8
  store i32 0, i32* @r28, align 4
  store i32 268453888, i32* @lr, align 4
  %v1_100047fc7 = inttoptr i32 %v1_100047e8 to i32*
  %v2_100047fc8 = call i32 @function_100096f8(i32* %v1_100047fc7)
  %v3_1000480011 = icmp eq i32 %v2_100047fc8, 0
  br i1 %v3_1000480011, label %dec_label_pc_10004a14, label %dec_label_pc_10004808.preheader.lr.ph

dec_label_pc_10004808.preheader.lr.ph:            ; preds = %dec_label_pc_100047f4
  %v2_1000483c = bitcast i32* %stack_var_-8247 to i8*
  %v1_100049ac = bitcast i32* %stack_var_-4151 to i8*
  br label %dec_label_pc_10004808.preheader

dec_label_pc_100047f8.loopexit:                   ; preds = %dec_label_pc_10004810, %dec_label_pc_10004828, %dec_label_pc_10004890
  %v0_100047f8 = load i32, i32* @r23, align 4
  store i32 268453888, i32* @lr, align 4
  %v1_100047fc = inttoptr i32 %v0_100047f8 to i32*
  %v2_100047fc = call i32 @function_100096f8(i32* %v1_100047fc)
  %v3_10004800 = icmp eq i32 %v2_100047fc, 0
  br i1 %v3_10004800, label %dec_label_pc_10004a14, label %dec_label_pc_10004808.preheader

dec_label_pc_10004808.preheader:                  ; preds = %dec_label_pc_10004808.preheader.lr.ph, %dec_label_pc_100047f8.loopexit
  %v0_1000481035 = phi i32 [ %v2_100047fc8, %dec_label_pc_10004808.preheader.lr.ph ], [ %v2_100047fc, %dec_label_pc_100047f8.loopexit ]
  br label %dec_label_pc_10004808

dec_label_pc_10004808:                            ; preds = %dec_label_pc_10004808.preheader, %dec_label_pc_100049fc
  %v0_10004810 = phi i32 [ %v0_1000481035, %dec_label_pc_10004808.preheader ], [ %v2_10004a08, %dec_label_pc_100049fc ]
  %v0_10004808 = load i32, i32* @r28, align 4
  %v3_10004808 = icmp eq i32 %v0_10004808, 0
  br i1 %v3_10004808, label %dec_label_pc_10004810, label %dec_label_pc_10004a14

dec_label_pc_10004810:                            ; preds = %dec_label_pc_10004808
  %v1_10004810 = add i32 %v0_10004810, 11
  %v2_10004810 = inttoptr i32 %v1_10004810 to i8*
  %v3_10004810 = load i8, i8* %v2_10004810, align 1
  %v4_10004810 = zext i8 %v3_10004810 to i32
  store i32 %v1_10004810, i32* @r30, align 4
  %v1_10004818 = add nuw nsw i32 %v4_10004810, 208
  %v1_1000481c = urem i32 %v1_10004818, 256
  %v2_10004820 = icmp ugt i32 %v1_1000481c, 9
  br i1 %v2_10004820, label %dec_label_pc_100047f8.loopexit, label %dec_label_pc_10004828

dec_label_pc_10004828:                            ; preds = %dec_label_pc_10004810
  %v3_10004830 = call i32 @function_100081c4(i32 15, i32* null)
  store i32 %v2_10004528, i32* @r3, align 4
  %v3_1000483c = call i32 @function_10008904(i8* %v2_1000483c, i32 %v3_10004830)
  store i32 268453960, i32* @lr, align 4
  %v2_10004844 = call i32 @function_100088dc(i8* %v2_1000483c)
  %v0_10004848 = load i32, i32* @r30, align 4
  %v0_1000484c = load i32, i32* @r27, align 4
  %v2_1000484c = add i32 %v0_1000484c, %v2_10004844
  store i32 %v2_1000484c, i32* @r3, align 4
  %v2_10004850 = inttoptr i32 %v2_1000484c to i8*
  %v3_10004850 = call i32 @function_10008904(i8* %v2_10004850, i32 %v0_10004848)
  store i32 268453980, i32* @lr, align 4
  %v2_10004858 = call i32 @function_100088dc(i8* %v2_1000483c)
  %v3_10004868 = call i32 @function_100081c4(i32 16, i32* null)
  %v0_10004870 = load i32, i32* @r27, align 4
  %v2_10004870 = add i32 %v2_10004858, %v0_10004870
  store i32 %v2_10004870, i32* @r3, align 4
  %v2_10004874 = inttoptr i32 %v2_10004870 to i8*
  %v3_10004874 = call i32 @function_10008904(i8* %v2_10004874, i32 %v3_10004868)
  store i32 4096, i32* @r5, align 4
  store i32 268454024, i32* @lr, align 4
  %v3_10004884 = call i32 @function_1000931c(i32 %v2_10004528, i32 %v2_10004530, i32 4096)
  %v3_10004888 = icmp eq i32 %v3_10004884, -1
  br i1 %v3_10004888, label %dec_label_pc_100047f8.loopexit, label %dec_label_pc_10004890

dec_label_pc_10004890:                            ; preds = %dec_label_pc_10004828
  %v3_10004898 = call i32 @function_100081c4(i32 15, i32* null)
  store i32 %v2_10004528, i32* @r3, align 4
  %v3_100048a4 = call i32 @function_10008904(i8* %v2_1000483c, i32 %v3_10004898)
  store i32 268454064, i32* @lr, align 4
  %v2_100048ac = call i32 @function_100088dc(i8* %v2_1000483c)
  %v0_100048b0 = load i32, i32* @r30, align 4
  %v0_100048b4 = load i32, i32* @r27, align 4
  %v2_100048b4 = add i32 %v0_100048b4, %v2_100048ac
  store i32 %v2_100048b4, i32* @r3, align 4
  %v2_100048b8 = inttoptr i32 %v2_100048b4 to i8*
  %v3_100048b8 = call i32 @function_10008904(i8* %v2_100048b8, i32 %v0_100048b0)
  store i32 268454084, i32* @lr, align 4
  %v2_100048c0 = call i32 @function_100088dc(i8* %v2_1000483c)
  %v3_100048d0 = call i32 @function_100081c4(i32 17, i32* null)
  %v0_100048d8 = load i32, i32* @r27, align 4
  %v2_100048d8 = add i32 %v2_100048c0, %v0_100048d8
  store i32 %v2_100048d8, i32* @r3, align 4
  %v2_100048dc = inttoptr i32 %v2_100048d8 to i8*
  %v3_100048dc = call i32 @function_10008904(i8* %v2_100048dc, i32 %v3_100048d0)
  store i32 268454120, i32* @lr, align 4
  %v1_100048e4 = call i32 @function_100095e8(i32 %v2_10004528)
  store i32 %v1_100048e4, i32* @r25, align 4
  %v3_100048e8 = icmp eq i32 %v1_100048e4, 0
  br i1 %v3_100048e8, label %dec_label_pc_100047f8.loopexit, label %dec_label_pc_100048f0

dec_label_pc_100048f0.loopexit:                   ; preds = %dec_label_pc_10004910, %dec_label_pc_100049ac
  %v0_100048f0.pre = load i32, i32* @r25, align 4
  br label %dec_label_pc_100048f0

dec_label_pc_100048f0:                            ; preds = %dec_label_pc_10004890, %dec_label_pc_100048f0.loopexit
  %v0_100048f0 = phi i32 [ %v0_100048f0.pre, %dec_label_pc_100048f0.loopexit ], [ %v1_100048e4, %dec_label_pc_10004890 ]
  store i32 268454136, i32* @lr, align 4
  %v1_100048f4 = inttoptr i32 %v0_100048f0 to i32*
  %v2_100048f4 = call i32 @function_100096f8(i32* %v1_100048f4)
  store i32 4096, i32* @r4, align 4
  store i32 %v2_100048f4, i32* @r31, align 4
  %v3_100048fc = icmp eq i32 %v2_100048f4, 0
  %v0_10004900 = load i32, i32* @r28, align 4
  store i32 %v2_10004530, i32* @r3, align 4
  %v3_10004900.not = icmp ne i32 %v0_10004900, 0
  %brmerge = or i1 %v3_100048fc, %v3_10004900.not
  br i1 %brmerge, label %dec_label_pc_100049fc, label %dec_label_pc_10004910

dec_label_pc_10004910:                            ; preds = %dec_label_pc_100048f0
  store i32 268454164, i32* @lr, align 4
  %v0_10004910 = call i32 @function_10008984()
  %v3_1000491c = call i32 @function_100081c4(i32 15, i32* null)
  store i32 %v2_10004528, i32* @r3, align 4
  %v3_10004928 = call i32 @function_10008904(i8* %v2_1000483c, i32 %v3_1000491c)
  store i32 268454196, i32* @lr, align 4
  %v2_10004930 = call i32 @function_100088dc(i8* %v2_1000483c)
  %v0_10004934 = load i32, i32* @r30, align 4
  %v0_10004938 = load i32, i32* @r27, align 4
  %v2_10004938 = add i32 %v0_10004938, %v2_10004930
  store i32 %v2_10004938, i32* @r3, align 4
  %v2_1000493c = inttoptr i32 %v2_10004938 to i8*
  %v3_1000493c = call i32 @function_10008904(i8* %v2_1000493c, i32 %v0_10004934)
  store i32 268454216, i32* @lr, align 4
  %v2_10004944 = call i32 @function_100088dc(i8* %v2_1000483c)
  %v3_10004954 = call i32 @function_100081c4(i32 17, i32* null)
  %v0_1000495c = load i32, i32* @r27, align 4
  %v2_1000495c = add i32 %v2_10004944, %v0_1000495c
  store i32 %v2_1000495c, i32* @r3, align 4
  %v2_10004960 = inttoptr i32 %v2_1000495c to i8*
  %v3_10004960 = call i32 @function_10008904(i8* %v2_10004960, i32 %v3_10004954)
  store i32 268454252, i32* @lr, align 4
  %v2_10004968 = call i32 @function_100088dc(i8* %v2_1000483c)
  %v0_10004974 = load i32, i32* @r27, align 4
  %v2_10004974 = add i32 %v0_10004974, %v2_10004968
  store i32 %v2_10004974, i32* @r3, align 4
  %v2_10004978 = inttoptr i32 %v2_10004974 to i8*
  %v3_10004978 = call i32 @function_10008904(i8* %v2_10004978, i32 ptrtoint (i32* @global_var_1000bacc.31 to i32))
  store i32 268454276, i32* @lr, align 4
  %v2_10004980 = call i32 @function_100088dc(i8* %v2_1000483c)
  %v0_10004984 = load i32, i32* @r31, align 4
  %v1_10004984 = add i32 %v0_10004984, 11
  %v0_10004988 = load i32, i32* @r27, align 4
  %v2_10004988 = add i32 %v0_10004988, %v2_10004980
  store i32 %v2_10004988, i32* @r3, align 4
  %v2_1000498c = inttoptr i32 %v2_10004988 to i8*
  %v3_1000498c = call i32 @function_10008904(i8* %v2_1000498c, i32 %v1_10004984)
  store i32 268454304, i32* @lr, align 4
  %v3_1000499c = call i32 @function_1000931c(i32 %v2_10004528, i32 %v2_10004530, i32 4096)
  %v3_100049a0 = icmp eq i32 %v3_1000499c, -1
  br i1 %v3_100049a0, label %dec_label_pc_100048f0.loopexit, label %dec_label_pc_100049ac

dec_label_pc_100049ac:                            ; preds = %dec_label_pc_10004910
  store i32 268454320, i32* @lr, align 4
  %v2_100049ac = call i32 @function_100088dc(i8* %v1_100049ac)
  %v4_100049bc = call i32 @function_10008c8c(i8* %v1_100049ac, i32 %v2_100049ac, i32 %v2_10004604)
  %v3_100049c4 = icmp eq i32 %v4_100049bc, -1
  %v0_100049c8 = load i32, i32* @r30, align 4
  store i32 %v0_100049c8, i32* @r3, align 4
  br i1 %v3_100049c4, label %dec_label_pc_100048f0.loopexit, label %dec_label_pc_100049d0

dec_label_pc_100049d0:                            ; preds = %dec_label_pc_100049ac
  store i32 268454356, i32* @lr, align 4
  %v2_100049d0 = call i32 @function_10008a04(i32 %v0_100049c8, i32 10)
  store i32 268454364, i32* @lr, align 4
  %v2_100049d8 = call i32 @function_100091bc(i32 %v2_100049d0, i32 9)
  %v0_100049dc = load i32, i32* @r25, align 4
  store i32 268454372, i32* @lr, align 4
  %v1_100049e0 = inttoptr i32 %v0_100049dc to i32*
  %v2_100049e0 = call i32 @function_100096f8(i32* %v1_100049e0)
  store i32 1, i32* @r28, align 4
  store i32 %v2_100049e0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100049fc

dec_label_pc_100049fc:                            ; preds = %dec_label_pc_100048f0, %dec_label_pc_100049d0
  %v0_100049fc = load i32, i32* @r25, align 4
  store i32 268454404, i32* @lr, align 4
  %v1_10004a00 = inttoptr i32 %v0_100049fc to i32*
  %v2_10004a00 = call i32 @function_10009544(i32* %v1_10004a00)
  %v0_10004a04 = load i32, i32* @r23, align 4
  store i32 268454412, i32* @lr, align 4
  %v1_10004a08 = inttoptr i32 %v0_10004a04 to i32*
  %v2_10004a08 = call i32 @function_100096f8(i32* %v1_10004a08)
  %v3_10004a0c = icmp eq i32 %v2_10004a08, 0
  br i1 %v3_10004a0c, label %dec_label_pc_10004a14, label %dec_label_pc_10004808

dec_label_pc_10004a14:                            ; preds = %dec_label_pc_100047f8.loopexit, %dec_label_pc_100049fc, %dec_label_pc_10004808, %dec_label_pc_100047f4
  %v0_10004a14 = load i32, i32* @r23, align 4
  %v0_10004a18 = load i32, i32* @r28, align 4
  %v1_10004a18 = urem i32 %v0_10004a18, 256
  store i32 %v1_10004a18, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004a20.32 to i32), i32* @lr, align 4
  %v1_10004a1c = inttoptr i32 %v0_10004a14 to i32*
  %v2_10004a1c = call i32 @function_10009544(i32* %v1_10004a1c)
  br label %dec_label_pc_10004a20

dec_label_pc_10004a20:                            ; preds = %dec_label_pc_100047d8, %dec_label_pc_10004a14
  store i32 ptrtoint ([3 x i8]* @global_var_10004a28.33 to i32), i32* @lr, align 4
  %v1_10004a24 = call i32 @function_1000a8e4(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a30.34 to i32), i32* @lr, align 4
  %v1_10004a2c = call i32 @function_100081ec(i32 15)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a38.35 to i32), i32* @lr, align 4
  %v1_10004a34 = call i32 @function_100081ec(i32 16)
  store i32 268454464, i32* @lr, align 4
  %v1_10004a3c = call i32 @function_100081ec(i32 17)
  br label %dec_label_pc_10004a40

dec_label_pc_10004a40:                            ; preds = %dec_label_pc_100045bc, %dec_label_pc_10004a20
  %v0_10004a44 = load i32, i32* @r31, align 4
  store i32 %v0_1000455c, i32* @r23, align 4
  store i32 %v0_10004544, i32* @r25, align 4
  store i32 %v0_10004524, i32* @r27, align 4
  store i32 %v0_10004564, i32* @r28, align 4
  store i32 %v0_10004534, i32* @r29, align 4
  store i32 %v0_1000454c, i32* @r30, align 4
  store i32 %v0_10004554, i32* @r31, align 4
  ret i32 %v0_10004a44

dec_label_pc_10004a78:                            ; preds = %dec_label_pc_10004704
  %v3_10004704 = icmp eq i32 %v0_1000473874, 0
  %v1_10004a78 = add i32 %v0_1000473874, 1
  br i1 %v3_10004704, label %dec_label_pc_10004a80, label %dec_label_pc_1000470c

dec_label_pc_10004a80:                            ; preds = %dec_label_pc_10004a78
  %v0_10004a80 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004a80 = add i32 %v0_10004a80, %v1_1000479c76
  %v1_10004a84 = add i32 %v2_10004a80, 33
  %v2_10004a84 = inttoptr i32 %v1_10004a84 to i8*
  %v3_10004a84 = load i8, i8* %v2_10004a84, align 1
  %v3_10004a88 = icmp eq i8 %v3_10004a84, 65
  br i1 %v3_10004a88, label %dec_label_pc_10004a90, label %dec_label_pc_100046e8

dec_label_pc_10004a90:                            ; preds = %dec_label_pc_10004a80
  br label %dec_label_pc_100046e8.outer

dec_label_pc_10004a98:                            ; preds = %dec_label_pc_100047c0
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004aa4.36 to i32), i32* @lr, align 4
  %v1_10004aa0 = call i32 @function_100081ec(i32 15)
  store i32 ptrtoint ([3 x i8]* @global_var_10004aac.37 to i32), i32* @lr, align 4
  %v1_10004aa8 = call i32 @function_100081ec(i32 16)
  store i32 ptrtoint ([3 x i8]* @global_var_10004ab4.38 to i32), i32* @lr, align 4
  %v1_10004ab0 = call i32 @function_100081ec(i32 17)
  store i32 268454588, i32* @lr, align 4
  %v1_10004ab8 = call i32 @function_100081ec(i32 19)
  %v0_10004ac0 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000455c, i32* @r23, align 4
  store i32 %v0_10004544, i32* @r25, align 4
  store i32 %v0_10004524, i32* @r27, align 4
  store i32 %v0_10004564, i32* @r28, align 4
  store i32 %v0_10004534, i32* @r29, align 4
  store i32 %v0_1000454c, i32* @r30, align 4
  store i32 %v0_10004554, i32* @r31, align 4
  ret i32 %v0_10004ac0

dec_label_pc_10004af4:                            ; preds = %dec_label_pc_10004514
  store i8 48, i8* %stack_var_-8776, align 1
  br label %dec_label_pc_100045bc

; uselistorder directives
  uselistorder i32 %v2_10004a08, { 1, 0 }
  uselistorder i32 %v1_1000479c.lcssa, { 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_1000473874, { 2, 0, 4, 1, 3 }
  uselistorder i32 %v1_1000479c76, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_1000471c22, { 1, 0 }
  uselistorder i32 %v1_100046b8, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_10004604, { 1, 0, 2 }
  uselistorder i32 %v2_10004548, { 1, 0 }
  uselistorder i32 %v2_10004528, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i8* %stack_var_-8776, { 2, 0, 1 }
  uselistorder i8* %stack_var_-8760, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-8792, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_10008a04, { 1, 0 }
  uselistorder i32 268453888, { 1, 0 }
  uselistorder i8 58, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_10008b3c, { 1, 0 }
  uselistorder i32 268453400, { 1, 0 }
  uselistorder label %dec_label_pc_10004a40, { 1, 0 }
  uselistorder label %dec_label_pc_10004a20, { 1, 0 }
  uselistorder label %dec_label_pc_10004a14, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100049fc, { 1, 0 }
  uselistorder label %dec_label_pc_100048f0, { 1, 0 }
  uselistorder label %dec_label_pc_100048f0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10004808, { 1, 0 }
  uselistorder label %dec_label_pc_10004808.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100047f8.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004748, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10004734, { 1, 0 }
  uselistorder label %dec_label_pc_1000470c, { 1, 0 }
  uselistorder label %dec_label_pc_100046e8, { 1, 0 }
  uselistorder label %dec_label_pc_100046b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004660, { 1, 0 }
  uselistorder label %dec_label_pc_10004608.backedge, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10004620, { 1, 0 }
  uselistorder label %dec_label_pc_100045bc, { 1, 0 }
}

define i32 @function_10004b18(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004b18:
  %r11.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-8436 = alloca i32, align 4
  %stack_var_-8440 = alloca i32, align 4
  %stack_var_-8456 = alloca i32, align 4
  %stack_var_-8444 = alloca i32, align 4
  %stack_var_-8448 = alloca i32, align 4
  %stack_var_-8452 = alloca i32, align 4
  %stack_var_-4176 = alloca i32, align 4
  %stack_var_-8400 = alloca i32, align 4
  %stack_var_-8336 = alloca i32, align 4
  %stack_var_-8416 = alloca i32, align 4
  %stack_var_-8272 = alloca i32, align 4
  %stack_var_-8432 = alloca i32, align 4
  %v0_10004b24 = load i32, i32* @r30, align 4
  %v0_10004b44 = load i32, i32* @r22, align 4
  %v0_10004b58 = load i32, i32* @r27, align 4
  %v0_10004b5c = load i32, i32* @r28, align 4
  %v0_10004b60 = load i32, i32* @r29, align 4
  %v0_10004b64 = load i32, i32* @r31, align 4
  store i32 268454764, i32* @lr, align 4
  %v0_10004b68 = call i32 @function_1000946c()
  store i32 %v0_10004b68, i32* @r30, align 4
  store i32 268454772, i32* @lr, align 4
  %v0_10004b70 = call i32 @function_100090e4()
  store i32 %v0_10004b70, i32* @global_var_1001c214.26, align 4
  %tmp95 = icmp slt i32 %v0_10004b70, 1
  br i1 %tmp95, label %dec_label_pc_10004bd4, label %dec_label_pc_10004b84

dec_label_pc_10004b84:                            ; preds = %dec_label_pc_10004e3c, %dec_label_pc_10004d34, %dec_label_pc_10004bd4, %dec_label_pc_10004b18
  %v0_10004bd0 = phi i32 [ -1, %dec_label_pc_10004d34 ], [ -1, %dec_label_pc_10004bd4 ], [ %v0_10004b70, %dec_label_pc_10004b18 ], [ 0, %dec_label_pc_10004e3c ]
  store i32 %v0_10004b44, i32* @r22, align 4
  store i32 %v0_10004b58, i32* @r27, align 4
  store i32 %v0_10004b5c, i32* @r28, align 4
  store i32 %v0_10004b60, i32* @r29, align 4
  store i32 %v0_10004b24, i32* @r30, align 4
  store i32 %v0_10004b64, i32* @r31, align 4
  ret i32 %v0_10004bd0

dec_label_pc_10004bd4:                            ; preds = %dec_label_pc_10004b18
  %v3_10004bd4 = icmp eq i32 %v0_10004b70, -1
  br i1 %v3_10004bd4, label %dec_label_pc_10004b84, label %dec_label_pc_10004bdc

dec_label_pc_10004bdc:                            ; preds = %dec_label_pc_10004bd4
  store i32 0, i32* @r28, align 4
  store i32 2, i32* %stack_var_-8432, align 4
  store i32 ptrtoint (i32* @global_var_10004bf8.39 to i32), i32* @lr, align 4
  %v1_10004bf4 = call i32 @function_10004514(i32 48101)
  store i32 268454928, i32* @lr, align 4
  %v3_10004c0c = call i32 @function_10009dec(i32 2, i32 1, i32 0)
  %v3_10004c10 = icmp eq i32 %v3_10004c0c, -1
  store i32 %v3_10004c0c, i32* @r31, align 4
  br i1 %v3_10004c10, label %dec_label_pc_10004c34, label %dec_label_pc_10004c1c

dec_label_pc_10004c1c:                            ; preds = %dec_label_pc_10004bdc
  %v2_10004c1c = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268454952, i32* @lr, align 4
  %v3_10004c24 = call i32 @function_10009bb8(i32 %v2_10004c1c, i32 16, i32 16)
  %v0_10004c28 = load i32, i32* @r31, align 4
  store i32 268454964, i32* @lr, align 4
  %v2_10004c30 = call i32 @function_10009c90(i32 %v0_10004c28, i32 1)
  br label %dec_label_pc_10004c34

dec_label_pc_10004c34:                            ; preds = %dec_label_pc_10004bdc, %dec_label_pc_10004c1c
  store i32 ptrtoint (i32* @global_var_10004c3c.40 to i32), i32* @lr, align 4
  %v1_10004c38 = call i32 @function_10004514(i32 1991)
  store i32 268454996, i32* @lr, align 4
  %v3_10004c50 = call i32 @function_10009dec(i32 2, i32 1, i32 0)
  %v3_10004c54 = icmp eq i32 %v3_10004c50, -1
  store i32 %v3_10004c50, i32* @r31, align 4
  br i1 %v3_10004c54, label %dec_label_pc_10004c78, label %dec_label_pc_10004c60

dec_label_pc_10004c60:                            ; preds = %dec_label_pc_10004c34
  %v2_10004c60 = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268455020, i32* @lr, align 4
  %v3_10004c68 = call i32 @function_10009bb8(i32 %v2_10004c60, i32 16, i32 16)
  %v0_10004c6c = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004c78.41 to i32), i32* @lr, align 4
  %v2_10004c74 = call i32 @function_10009c90(i32 %v0_10004c6c, i32 1)
  br label %dec_label_pc_10004c78

dec_label_pc_10004c78:                            ; preds = %dec_label_pc_10004c34, %dec_label_pc_10004c60
  store i32 268455048, i32* @lr, align 4
  %v3_10004c84 = call i32 @function_10009dec(i32 2, i32 1, i32 0)
  %v3_10004c88 = icmp eq i32 %v3_10004c84, -1
  store i32 %v3_10004c84, i32* @r31, align 4
  br i1 %v3_10004c88, label %dec_label_pc_10004cac, label %dec_label_pc_10004c94

dec_label_pc_10004c94:                            ; preds = %dec_label_pc_10004c78
  %v2_10004c94 = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268455072, i32* @lr, align 4
  %v3_10004c9c = call i32 @function_10009bb8(i32 %v2_10004c94, i32 16, i32 16)
  %v0_10004ca0 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004cac.42 to i32), i32* @lr, align 4
  %v2_10004ca8 = call i32 @function_10009c90(i32 %v0_10004ca0, i32 1)
  br label %dec_label_pc_10004cac

dec_label_pc_10004cac:                            ; preds = %dec_label_pc_10004c78, %dec_label_pc_10004c94
  store i32 ptrtoint (i32* @global_var_10004cb4.43 to i32), i32* @lr, align 4
  %v1_10004cb0 = call i32 @function_10004514(i32 22)
  store i32 268455116, i32* @lr, align 4
  %v3_10004cc8 = call i32 @function_10009dec(i32 2, i32 1, i32 0)
  %v3_10004ccc = icmp eq i32 %v3_10004cc8, -1
  store i32 %v3_10004cc8, i32* @r31, align 4
  br i1 %v3_10004ccc, label %dec_label_pc_10004cf0, label %dec_label_pc_10004cd8

dec_label_pc_10004cd8:                            ; preds = %dec_label_pc_10004cac
  %v2_10004cd8 = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268455140, i32* @lr, align 4
  %v3_10004ce0 = call i32 @function_10009bb8(i32 %v2_10004cd8, i32 16, i32 16)
  %v0_10004ce4 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004cf0.44 to i32), i32* @lr, align 4
  %v2_10004cec = call i32 @function_10009c90(i32 %v0_10004ce4, i32 1)
  br label %dec_label_pc_10004cf0

dec_label_pc_10004cf0:                            ; preds = %dec_label_pc_10004cac, %dec_label_pc_10004cd8
  store i32 ptrtoint (i32* @global_var_10004cf8.45 to i32), i32* @lr, align 4
  %v1_10004cf4 = call i32 @function_10004514(i32 23)
  store i32 268455184, i32* @lr, align 4
  %v3_10004d0c = call i32 @function_10009dec(i32 2, i32 1, i32 0)
  %v3_10004d10 = icmp eq i32 %v3_10004d0c, -1
  store i32 %v3_10004d0c, i32* @r31, align 4
  br i1 %v3_10004d10, label %dec_label_pc_10004d34, label %dec_label_pc_10004d1c

dec_label_pc_10004d1c:                            ; preds = %dec_label_pc_10004cf0
  %v2_10004d1c = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268455208, i32* @lr, align 4
  %v3_10004d24 = call i32 @function_10009bb8(i32 %v2_10004d1c, i32 16, i32 16)
  %v0_10004d28 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004d34.46 to i32), i32* @lr, align 4
  %v2_10004d30 = call i32 @function_10009c90(i32 %v0_10004d28, i32 1)
  br label %dec_label_pc_10004d34

dec_label_pc_10004d34:                            ; preds = %dec_label_pc_10004cf0, %dec_label_pc_10004d1c
  store i32 268455232, i32* @lr, align 4
  %v1_10004d3c = call i32 @function_1000a8e4(i32 5)
  store i32 4096, i32* @r3, align 4
  store i32 268455240, i32* @lr, align 4
  %v0_10004d44 = call i32 @function_10009ff0()
  store i32 %v0_10004d44, i32* %r11.global-to-local, align 4
  %v0_10004d54 = load i32, i32* @r28, align 4
  %v1_10004d54 = trunc i32 %v0_10004d54 to i8
  %v3_10004d54 = inttoptr i32 %v0_10004d44 to i8*
  store i8 %v1_10004d54, i8* %v3_10004d54, align 1
  %v2_10004d58 = ptrtoint i32* %stack_var_-8272 to i32
  store i32 %v2_10004d58, i32* %r21.global-to-local, align 4
  %v0_10004d5c = load i32, i32* @r28, align 4
  store i32 %v0_10004d5c, i32* @global_var_1001c20c.47, align 4
  %v0_10004d60 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10004d60, i32* @global_var_1001c210.48, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004d68.49 to i32), i32* @lr, align 4
  %v1_10004d64 = call i32 @function_10008278(i32 15)
  store i32 268455280, i32* @lr, align 4
  %v1_10004d6c = call i32 @function_10008278(i32 16)
  %v3_10004d78 = call i32 @function_100081c4(i32 15, i32* null)
  store i32 %v2_10004d58, i32* @r3, align 4
  %v2_10004d84 = bitcast i32* %stack_var_-8272 to i8*
  %v3_10004d84 = call i32 @function_10008904(i8* %v2_10004d84, i32 %v3_10004d78)
  %v0_10004d88 = load i32, i32* %r21.global-to-local, align 4
  %v2_10004d88 = add i32 %v0_10004d88, %v3_10004d84
  store i32 %v2_10004d88, i32* %r29.global-to-local, align 4
  store i32 268455312, i32* @lr, align 4
  %v0_10004d8c = call i32 @function_1000912c()
  %v2_10004d90 = ptrtoint i32* %stack_var_-8416 to i32
  %v3_10004d98 = trunc i32 %v0_10004d8c to i8
  %v4_10004d98 = call i32 @function_10008db8(i8 %v3_10004d98, i32 10, i32 %v2_10004d90)
  store i32 %v2_10004d88, i32* @r3, align 4
  %v2_10004da4 = inttoptr i32 %v2_10004d88 to i8*
  %v3_10004da4 = call i32 @function_10008904(i8* %v2_10004da4, i32 %v4_10004d98)
  %v0_10004dac = load i32, i32* %r29.global-to-local, align 4
  %v2_10004dac = add i32 %v0_10004dac, %v3_10004da4
  store i32 %v2_10004dac, i32* %r29.global-to-local, align 4
  %v3_10004db4 = call i32 @function_100081c4(i32 16, i32* null)
  store i32 %v2_10004dac, i32* @r3, align 4
  %v2_10004dc0 = inttoptr i32 %v2_10004dac to i8*
  %v3_10004dc0 = call i32 @function_10008904(i8* %v2_10004dc0, i32 %v3_10004db4)
  store i32 %v3_10004dc0, i32* @r31, align 4
  store i32 268455384, i32* @lr, align 4
  %v2_10004dd4 = call i32 @function_10009204(i32 %v2_10004d58, i32 0)
  %v3_10004dd8 = icmp eq i32 %v2_10004dd4, -1
  br i1 %v3_10004dd8, label %dec_label_pc_10004b84, label %dec_label_pc_10004de0

dec_label_pc_10004de0:                            ; preds = %dec_label_pc_10004d34
  store i32 ptrtoint ([3 x i8]* @global_var_10004de4.50 to i32), i32* @lr, align 4
  %v0_10004de0 = call i32 @function_1000909c()
  store i32 ptrtoint ([3 x i8]* @global_var_10004dec.51 to i32), i32* @lr, align 4
  %v1_10004de8 = call i32 @function_100081ec(i32 15)
  store i32 268455412, i32* @lr, align 4
  %v1_10004df0 = call i32 @function_100081ec(i32 16)
  %v3_10004df4 = load i32, i32* @global_var_1001c210.48, align 4
  store i32 268455428, i32* @lr, align 4
  %v3_10004e00 = call i32 @function_1000931c(i32 %v2_10004d58, i32 %v3_10004df4, i32 4095)
  %v3_10004e04 = icmp eq i32 %v3_10004e00, -1
  br i1 %v3_10004e04, label %dec_label_pc_10004e14, label %dec_label_pc_10004e0c

dec_label_pc_10004e0c:                            ; preds = %dec_label_pc_10004de0
  %v3_10004e0c = load i32, i32* @global_var_1001c210.48, align 4
  %v0_10004e10 = load i32, i32* @r28, align 4
  %v3_10004e10 = trunc i32 %v0_10004e10 to i8
  %v4_10004e10 = add i32 %v3_10004e0c, %v3_10004e00
  %v5_10004e10 = inttoptr i32 %v4_10004e10 to i8*
  store i8 %v3_10004e10, i8* %v5_10004e10, align 1
  br label %dec_label_pc_10004e14

dec_label_pc_10004e14:                            ; preds = %dec_label_pc_10004de0, %dec_label_pc_10004e0c
  %v0_10004e14 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004e14 = load i32, i32* @r31, align 4
  %v2_10004e14 = add i32 %v1_10004e14, %v0_10004e14
  store i32 %v2_10004d58, i32* @r3, align 4
  %v0_10004e1c = load i32, i32* %r21.global-to-local, align 4
  %v2_10004e1c = sub i32 %v2_10004e14, %v0_10004e1c
  store i32 %v2_10004e1c, i32* @r4, align 4
  %v0_10004e20 = load i32, i32* @r30, align 4
  store i32 %v0_10004e20, i32* %r29.global-to-local, align 4
  store i32 268455464, i32* @lr, align 4
  %v0_10004e24 = call i32 @function_10008984()
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r22, align 4
  %v2_10004e30 = ptrtoint i32* %stack_var_-8336 to i32
  store i32 %v2_10004e30, i32* %r20.global-to-local, align 4
  %v2_10004e34 = ptrtoint i32* %stack_var_-8400 to i32
  store i32 %v2_10004e34, i32* %r19.global-to-local, align 4
  %v2_10004e38 = ptrtoint i32* %stack_var_-4176 to i32
  %v2_10004f08 = bitcast i32* %stack_var_-8336 to i8*
  %v2_10004f4c = bitcast i32* %stack_var_-8400 to i8*
  br label %dec_label_pc_10004e3c

dec_label_pc_10004e3c:                            ; preds = %dec_label_pc_10004ecc, %dec_label_pc_10004e14
  store i32 268455492, i32* @lr, align 4
  %v1_10004e40 = call i32 @function_10008278(i32 15)
  %v3_10004e4c = call i32 @function_100081c4(i32 15, i32* null)
  store i32 268455508, i32* @lr, align 4
  %v1_10004e50 = call i32 @function_100095e8(i32 %v3_10004e4c)
  store i32 %v1_10004e50, i32* @r27, align 4
  %v3_10004e54 = icmp eq i32 %v1_10004e50, 0
  br i1 %v3_10004e54, label %dec_label_pc_10004b84, label %dec_label_pc_10004e5c

dec_label_pc_10004e5c:                            ; preds = %dec_label_pc_10004e3c
  store i32 268455524, i32* @lr, align 4
  %v1_10004e60 = call i32 @function_100081ec(i32 15)
  %v0_10004e6415 = load i32, i32* @r27, align 4
  store i32 268455532, i32* @lr, align 4
  %v1_10004e6816 = inttoptr i32 %v0_10004e6415 to i32*
  %v2_10004e6817 = call i32 @function_100096f8(i32* %v1_10004e6816)
  %v3_10004e6c20 = icmp eq i32 %v2_10004e6817, 0
  br i1 %v3_10004e6c20, label %dec_label_pc_10004ecc, label %dec_label_pc_10004e74.preheader

dec_label_pc_10004e74.preheader:                  ; preds = %dec_label_pc_10004e5c, %dec_label_pc_10004e64.backedge
  %v0_10004e7423 = phi i32 [ %v2_10004e68, %dec_label_pc_10004e64.backedge ], [ %v2_10004e6817, %dec_label_pc_10004e5c ]
  br label %dec_label_pc_10004e74

dec_label_pc_10004e74:                            ; preds = %dec_label_pc_10004e74.preheader, %dec_label_pc_10004eb8
  %v0_10004e88 = phi i32 [ %v0_10004e7423, %dec_label_pc_10004e74.preheader ], [ %v2_10004ec0, %dec_label_pc_10004eb8 ]
  %v1_10004e74 = add i32 %v0_10004e88, 11
  %v2_10004e74 = inttoptr i32 %v1_10004e74 to i8*
  %v3_10004e74 = load i8, i8* %v2_10004e74, align 1
  %v4_10004e74 = zext i8 %v3_10004e74 to i32
  %v1_10004e78 = add nuw nsw i32 %v4_10004e74, 208
  %v1_10004e7c = urem i32 %v1_10004e78, 256
  %v2_10004e80 = icmp ugt i32 %v1_10004e7c, 9
  br i1 %v2_10004e80, label %dec_label_pc_10004e64.backedge, label %dec_label_pc_10004e88

dec_label_pc_10004e88:                            ; preds = %dec_label_pc_10004e74
  %v0_10004e8c = load i32, i32* @r22, align 4
  %v1_10004e8c = add i32 %v0_10004e8c, 1
  store i32 %v1_10004e8c, i32* @r22, align 4
  store i32 268455576, i32* @lr, align 4
  %v3_10004e94 = call i32 @function_1000a698(i8* %v2_10004e74, i32 %v1_10004e7c)
  %v0_10004e98 = load i32, i32* @r28, align 4
  %v2_10004e98 = icmp slt i32 %v0_10004e98, %v3_10004e94
  store i32 %v3_10004e94, i32* %r30.global-to-local, align 4
  br i1 %v2_10004e98, label %dec_label_pc_10004ed8, label %dec_label_pc_10004ea4

dec_label_pc_10004ea4:                            ; preds = %dec_label_pc_10004e88
  store i32 268455596, i32* @lr, align 4
  %v0_10004ea8 = call i32 @function_1000946c()
  %v0_10004eac = load i32, i32* @r29, align 4
  %v2_10004eac = sub i32 %v0_10004ea8, %v0_10004eac
  %tmp96 = icmp slt i32 %v2_10004eac, 601
  br i1 %tmp96, label %dec_label_pc_10005034, label %dec_label_pc_10004eb8

dec_label_pc_10004eb8:                            ; preds = %dec_label_pc_10004ea4
  %v0_10004eb8 = load i32, i32* @r27, align 4
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 268455620, i32* @lr, align 4
  %v1_10004ec0 = inttoptr i32 %v0_10004eb8 to i32*
  %v2_10004ec0 = call i32 @function_100096f8(i32* %v1_10004ec0)
  %v3_10004ec4 = icmp eq i32 %v2_10004ec0, 0
  br i1 %v3_10004ec4, label %dec_label_pc_10004ecc, label %dec_label_pc_10004e74

dec_label_pc_10004ecc:                            ; preds = %dec_label_pc_10004e64.backedge, %dec_label_pc_10004eb8, %dec_label_pc_10004e5c
  %v0_10004ecc = load i32, i32* @r27, align 4
  store i32 268455636, i32* @lr, align 4
  %v1_10004ed0 = inttoptr i32 %v0_10004ecc to i32*
  %v2_10004ed0 = call i32 @function_10009544(i32* %v1_10004ed0)
  br label %dec_label_pc_10004e3c

dec_label_pc_10004ed8:                            ; preds = %dec_label_pc_10004e88
  store i32 268455648, i32* @lr, align 4
  %v0_10004edc = call i32 @function_1000946c()
  store i32 %v0_10004edc, i32* %r18.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004eec.53 to i32), i32* @lr, align 4
  %v1_10004ee8 = call i32 @function_10008278(i32 15)
  store i32 268455668, i32* @lr, align 4
  %v1_10004ef0 = call i32 @function_10008278(i32 16)
  %v3_10004efc = call i32 @function_100081c4(i32 15, i32* null)
  store i32 %v2_10004e30, i32* @r3, align 4
  %v3_10004f08 = call i32 @function_10008904(i8* %v2_10004f08, i32 %v3_10004efc)
  %v0_10004f0c = load i32, i32* @r31, align 4
  %v0_10004f10 = load i32, i32* %r20.global-to-local, align 4
  %v2_10004f10 = add i32 %v0_10004f10, %v3_10004f08
  store i32 %v2_10004f10, i32* %r28.global-to-local, align 4
  store i32 %v2_10004f10, i32* @r3, align 4
  %v2_10004f18 = inttoptr i32 %v2_10004f10 to i8*
  %v3_10004f18 = call i32 @function_10008904(i8* %v2_10004f18, i32 %v0_10004f0c)
  store i32 %v3_10004f18, i32* %r29.global-to-local, align 4
  %v3_10004f28 = call i32 @function_100081c4(i32 16, i32* null)
  %v2_10004f30 = add i32 %v3_10004f18, %v2_10004f10
  store i32 %v2_10004f30, i32* @r3, align 4
  %v2_10004f34 = inttoptr i32 %v2_10004f30 to i8*
  %v3_10004f34 = call i32 @function_10008904(i8* %v2_10004f34, i32 %v3_10004f28)
  %v3_10004f40 = call i32 @function_100081c4(i32 15, i32* null)
  store i32 %v2_10004e34, i32* @r3, align 4
  %v3_10004f4c = call i32 @function_10008904(i8* %v2_10004f4c, i32 %v3_10004f40)
  %v0_10004f50 = load i32, i32* @r31, align 4
  %v0_10004f54 = load i32, i32* %r19.global-to-local, align 4
  %v2_10004f54 = add i32 %v0_10004f54, %v3_10004f4c
  store i32 %v2_10004f54, i32* %r28.global-to-local, align 4
  store i32 %v2_10004f54, i32* @r3, align 4
  %v2_10004f5c = inttoptr i32 %v2_10004f54 to i8*
  %v3_10004f5c = call i32 @function_10008904(i8* %v2_10004f5c, i32 %v0_10004f50)
  store i32 %v3_10004f5c, i32* %r29.global-to-local, align 4
  %v3_10004f6c = call i32 @function_100081c4(i32 34, i32* null)
  %v2_10004f74 = add i32 %v3_10004f5c, %v2_10004f54
  store i32 %v2_10004f74, i32* @r3, align 4
  %v2_10004f78 = inttoptr i32 %v2_10004f74 to i8*
  %v3_10004f78 = call i32 @function_10008904(i8* %v2_10004f78, i32 %v3_10004f6c)
  store i32 ptrtoint ([3 x i8]* @global_var_10004f84.55 to i32), i32* @lr, align 4
  %v1_10004f80 = call i32 @function_100081ec(i32 15)
  store i32 268455820, i32* @lr, align 4
  %v1_10004f88 = call i32 @function_100081ec(i32 16)
  store i32 4095, i32* @r5, align 4
  store i32 268455836, i32* @lr, align 4
  %v3_10004f98 = call i32 @function_1000931c(i32 %v2_10004e30, i32 %v2_10004d58, i32 4095)
  %v3_10004f9c = icmp eq i32 %v3_10004f98, -1
  store i32 %v3_10004f98, i32* %r29.global-to-local, align 4
  br i1 %v3_10004f9c, label %dec_label_pc_10005088, label %dec_label_pc_10004fa8

dec_label_pc_10004fa8:                            ; preds = %dec_label_pc_10004ed8
  %v0_10004fa8 = load i32, i32* @r1, align 4
  %v2_10004fa8 = add i32 %v0_10004fa8, %v3_10004f98
  %v3_10004fb0 = add i32 %v2_10004fa8, 192
  %v4_10004fb0 = inttoptr i32 %v3_10004fb0 to i8*
  store i8 0, i8* %v4_10004fb0, align 1
  store i32 268455868, i32* @lr, align 4
  %v1_10004fb8 = call i32 @function_10008278(i32 35)
  %v3_10004fc4 = call i32 @function_100081c4(i32 35, i32* null)
  %v0_10004fc8 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004fc8 = add i32 %v0_10004fc8, -1
  %v4_10004fd4 = call i32 @function_10008c8c(i8* %v2_10004d84, i32 %v1_10004fc8, i32 %v3_10004fc4)
  %v3_10004fd8 = icmp eq i32 %v4_10004fd4, -1
  br i1 %v3_10004fd8, label %dec_label_pc_10004ff4, label %dec_label_pc_10004fe0

dec_label_pc_10004fe0:                            ; preds = %dec_label_pc_10004fa8
  store i32 268455912, i32* @lr, align 4
  %v1_10004fe4 = call i32 @function_100094b4(i32 %v2_10004d58)
  %v0_10004fe8 = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004ff4.56 to i32), i32* @lr, align 4
  %v2_10004ff0 = call i32 @function_100091bc(i32 %v0_10004fe8, i32 9)
  br label %dec_label_pc_10004ff4

dec_label_pc_10004ff4:                            ; preds = %dec_label_pc_10004fa8, %dec_label_pc_10004fe0
  store i32 ptrtoint (i32* @global_var_10004ffc.57 to i32), i32* @lr, align 4
  %v1_10004ff8 = call i32 @function_100081ec(i32 35)
  store i32 268455936, i32* @lr, align 4
  %v0_10004ffc = call i32 @function_1000912c()
  %v0_10005000 = load i32, i32* %r30.global-to-local, align 4
  %v4_10005000 = icmp eq i32 %v0_10005000, %v0_10004ffc
  br i1 %v4_10005000, label %dec_label_pc_10005028, label %dec_label_pc_10005008

dec_label_pc_10005008:                            ; preds = %dec_label_pc_10004ff4
  store i32 268455948, i32* @lr, align 4
  %v0_10005008 = call i32 @function_10009174()
  %v0_1000500c = load i32, i32* %r30.global-to-local, align 4
  %v4_1000500c = icmp eq i32 %v0_1000500c, %v0_10005008
  br i1 %v4_1000500c, label %dec_label_pc_10005028, label %dec_label_pc_10005014

dec_label_pc_10005014:                            ; preds = %dec_label_pc_10005008
  %v3_10005014 = load i32, i32* @global_var_1001c210.48, align 4
  %v3_1000501c = call i32 @function_10008d38(i8* %v2_10004d84, i32 %v3_10005014)
  %v3_10005020 = icmp eq i32 %v3_1000501c, 0
  br i1 %v3_10005020, label %dec_label_pc_10005064, label %dec_label_pc_10005014.dec_label_pc_10005028_crit_edge

dec_label_pc_10005014.dec_label_pc_10005028_crit_edge: ; preds = %dec_label_pc_10005014
  %v0_10005028.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005028

dec_label_pc_10005028:                            ; preds = %dec_label_pc_10005014.dec_label_pc_10005028_crit_edge, %dec_label_pc_10005008, %dec_label_pc_10004ff4
  %v0_10005028 = phi i32 [ %v0_10005028.pre, %dec_label_pc_10005014.dec_label_pc_10005028_crit_edge ], [ %v0_10005008, %dec_label_pc_10005008 ], [ %v0_10004ffc, %dec_label_pc_10004ff4 ]
  store i32 %v0_10005028, i32* %r28.global-to-local, align 4
  %v0_1000502c = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_1000502c, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004e64.backedge

dec_label_pc_10004e64.backedge:                   ; preds = %dec_label_pc_10004e74, %dec_label_pc_10005028, %dec_label_pc_10005058, %dec_label_pc_1000532c, %dec_label_pc_10005034, %dec_label_pc_1000503c
  %v0_10004e64 = load i32, i32* @r27, align 4
  store i32 268455532, i32* @lr, align 4
  %v1_10004e68 = inttoptr i32 %v0_10004e64 to i32*
  %v2_10004e68 = call i32 @function_100096f8(i32* %v1_10004e68)
  %v3_10004e6c = icmp eq i32 %v2_10004e68, 0
  br i1 %v3_10004e6c, label %dec_label_pc_10004ecc, label %dec_label_pc_10004e74.preheader

dec_label_pc_10005034:                            ; preds = %dec_label_pc_10004ea4
  %v0_10005034 = load i32, i32* %r30.global-to-local, align 4
  %tmp97 = icmp slt i32 %v0_10005034, 401
  br i1 %tmp97, label %dec_label_pc_10004e64.backedge, label %dec_label_pc_1000503c

dec_label_pc_1000503c:                            ; preds = %dec_label_pc_10005034
  %v0_10005044 = load i32, i32* @r22, align 4
  %v1_10005048 = urem i32 %v0_10005044, 10
  %v4_10005050 = icmp eq i32 %v1_10005048, 0
  br i1 %v4_10005050, label %dec_label_pc_10005058, label %dec_label_pc_10004e64.backedge

dec_label_pc_10005058:                            ; preds = %dec_label_pc_1000503c
  store i32 268456032, i32* @lr, align 4
  %v1_1000505c = call i32 @function_1000a8e4(i32 1)
  br label %dec_label_pc_10004e64.backedge

dec_label_pc_10005064:                            ; preds = %dec_label_pc_10005014
  store i32 268456052, i32* @lr, align 4
  %v2_10005070 = call i32 @function_10009204(i32 %v2_10004d58, i32 0)
  %v3_10005074 = icmp eq i32 %v2_10005070, -1
  store i32 %v2_10005070, i32* @r31, align 4
  br i1 %v3_10005074, label %dec_label_pc_10005394, label %dec_label_pc_10005080

dec_label_pc_10005080:                            ; preds = %dec_label_pc_10005064, %dec_label_pc_10005394
  store i32 268456072, i32* @lr, align 4
  %v0_10005084 = call i32 @function_1000909c()
  br label %dec_label_pc_10005088

dec_label_pc_10005088:                            ; preds = %dec_label_pc_10004ed8, %dec_label_pc_10005080
  store i32 268456088, i32* @lr, align 4
  %v2_10005094 = call i32 @function_10009204(i32 %v2_10004e30, i32 0)
  %v3_10005098 = icmp eq i32 %v2_10005094, -1
  store i32 %v2_10005094, i32* %r24.global-to-local, align 4
  br i1 %v3_10005098, label %dec_label_pc_1000532c, label %dec_label_pc_100050a4

dec_label_pc_100050a4:                            ; preds = %dec_label_pc_10005088
  store i32 ptrtoint ([3 x i8]* @global_var_100050ac.58 to i32), i32* @lr, align 4
  %v1_100050a8 = call i32 @function_10008278(i32 20)
  store i32 ptrtoint ([3 x i8]* @global_var_100050b4.59 to i32), i32* @lr, align 4
  %v1_100050b0 = call i32 @function_10008278(i32 21)
  store i32 ptrtoint ([3 x i8]* @global_var_100050bc.60 to i32), i32* @lr, align 4
  %v1_100050b8 = call i32 @function_10008278(i32 22)
  store i32 ptrtoint ([3 x i8]* @global_var_100050c4.61 to i32), i32* @lr, align 4
  %v1_100050c0 = call i32 @function_10008278(i32 23)
  store i32 ptrtoint ([3 x i8]* @global_var_100050cc.62 to i32), i32* @lr, align 4
  %v1_100050c8 = call i32 @function_10008278(i32 24)
  store i32 268456148, i32* @lr, align 4
  %v1_100050d0 = call i32 @function_10008278(i32 36)
  %v3_100050dc = call i32 @function_100081c4(i32 20, i32* nonnull %stack_var_-8452)
  store i32 %v3_100050dc, i32* @r31, align 4
  %v3_100050ec = call i32 @function_100081c4(i32 21, i32* nonnull %stack_var_-8448)
  store i32 %v3_100050ec, i32* %r29.global-to-local, align 4
  %v3_100050fc = call i32 @function_100081c4(i32 22, i32* nonnull %stack_var_-8444)
  store i32 %v3_100050fc, i32* %r28.global-to-local, align 4
  %v3_1000510c = call i32 @function_100081c4(i32 23, i32* nonnull %stack_var_-8456)
  store i32 %v3_1000510c, i32* %r26.global-to-local, align 4
  %v3_1000511c = call i32 @function_100081c4(i32 24, i32* nonnull %stack_var_-8440)
  store i32 %v3_1000511c, i32* %r25.global-to-local, align 4
  %v3_1000512c = call i32 @function_100081c4(i32 36, i32* nonnull %stack_var_-8436)
  store i32 %v3_1000512c, i32* %r23.global-to-local, align 4
  %v0_10005134105 = load i32, i32* %r24.global-to-local, align 4
  store i32 268456260, i32* @lr, align 4
  %v3_10005140106 = call i32 @function_100092d4(i32 %v0_10005134105, i32 %v2_10004e38, i32 4096)
  %tmp98108 = icmp slt i32 %v3_10005140106, 1
  br i1 %tmp98108, label %dec_label_pc_100053a4, label %dec_label_pc_1000514c

dec_label_pc_1000514c:                            ; preds = %dec_label_pc_100050a4, %dec_label_pc_10005134.backedge
  %v3_10005140109 = phi i32 [ %v3_10005140, %dec_label_pc_10005134.backedge ], [ %v3_10005140106, %dec_label_pc_100050a4 ]
  %v3_10005144110.in = phi i32 [ %v3_10005140, %dec_label_pc_10005134.backedge ], [ %v3_10005140106, %dec_label_pc_100050a4 ]
  %v3_10005144110 = icmp eq i32 %v3_10005144110.in, 0
  %v3_1000514c = load i32, i32* %stack_var_-8452, align 4
  %v2_10005150 = icmp slt i32 %v3_10005140109, %v3_1000514c
  br i1 %v2_10005150, label %dec_label_pc_10005190, label %dec_label_pc_10005158

dec_label_pc_10005158:                            ; preds = %dec_label_pc_1000514c
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1000516c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000516c

dec_label_pc_1000516c:                            ; preds = %dec_label_pc_10005158, %dec_label_pc_10005188
  %v0_1000518c = phi i32 [ %v3_10005140109, %dec_label_pc_10005158 ], [ %v1_1000518c, %dec_label_pc_10005188 ]
  %v0_10005188 = phi i32 [ %v2_10004e38, %dec_label_pc_10005158 ], [ %v1_10005188, %dec_label_pc_10005188 ]
  %v1_1000516c = phi i32 [ 0, %dec_label_pc_10005158 ], [ %v1_1000516c27, %dec_label_pc_10005188 ]
  %v2_1000516c = add i32 %v1_1000516c, %v0_1000516c.pre
  %v3_1000516c = inttoptr i32 %v2_1000516c to i8*
  %v4_1000516c = load i8, i8* %v3_1000516c, align 1
  %v1_10005170 = add i32 %v1_1000516c, 1
  store i32 %v1_10005170, i32* %r11.global-to-local, align 4
  %v1_10005174 = inttoptr i32 %v0_10005188 to i8*
  %v2_10005174 = load i8, i8* %v1_10005174, align 1
  %v4_1000517c = icmp eq i8 %v2_10005174, %v4_1000516c
  br i1 %v4_1000517c, label %dec_label_pc_100052e4, label %dec_label_pc_10005184

dec_label_pc_10005184:                            ; preds = %dec_label_pc_1000516c
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005188

dec_label_pc_10005188:                            ; preds = %dec_label_pc_100052e4, %dec_label_pc_10005184
  %v1_1000516c27 = phi i32 [ %v1_10005170, %dec_label_pc_100052e4 ], [ 0, %dec_label_pc_10005184 ]
  %v1_10005188 = add i32 %v0_10005188, 1
  %v1_1000518c = add i32 %v0_1000518c, -1
  %v2_1000518c = icmp eq i32 %v1_1000518c, 0
  br i1 %v2_1000518c, label %dec_label_pc_10005190, label %dec_label_pc_1000516c

dec_label_pc_10005190:                            ; preds = %dec_label_pc_10005188, %dec_label_pc_1000514c
  %v3_10005190 = load i32, i32* %stack_var_-8448, align 4
  %v2_10005194 = icmp slt i32 %v3_10005140109, %v3_10005190
  br i1 %v2_10005194, label %dec_label_pc_100051d4, label %dec_label_pc_1000519c

dec_label_pc_1000519c:                            ; preds = %dec_label_pc_10005190
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_10005144110, label %dec_label_pc_100051d4, label %dec_label_pc_100051b0.preheader

dec_label_pc_100051b0.preheader:                  ; preds = %dec_label_pc_1000519c
  %v0_100051b0.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100051b0

dec_label_pc_100051b0:                            ; preds = %dec_label_pc_100051b0.preheader, %dec_label_pc_100051d0
  %v0_100051d0 = phi i32 [ %v3_10005140109, %dec_label_pc_100051b0.preheader ], [ %v1_100051d0, %dec_label_pc_100051d0 ]
  %storemerge.in = phi i32 [ %v2_10004e38, %dec_label_pc_100051b0.preheader ], [ %storemerge, %dec_label_pc_100051d0 ]
  %v1_100051b0 = phi i32 [ 0, %dec_label_pc_100051b0.preheader ], [ %v1_100051b033, %dec_label_pc_100051d0 ]
  %v2_100051b0 = add i32 %v1_100051b0, %v0_100051b0.pre
  %v3_100051b0 = inttoptr i32 %v2_100051b0 to i8*
  %v4_100051b0 = load i8, i8* %v3_100051b0, align 1
  %v1_100051b4 = add i32 %v1_100051b0, 1
  store i32 %v1_100051b4, i32* %r11.global-to-local, align 4
  %v1_100051b8 = inttoptr i32 %storemerge.in to i8*
  %v2_100051b8 = load i8, i8* %v1_100051b8, align 1
  %v4_100051c0 = icmp eq i8 %v2_100051b8, %v4_100051b0
  br i1 %v4_100051c0, label %dec_label_pc_10005358, label %dec_label_pc_100051c8

dec_label_pc_100051c8:                            ; preds = %dec_label_pc_100051b0
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100051d0

dec_label_pc_100051d0:                            ; preds = %dec_label_pc_10005358, %dec_label_pc_100051c8
  %v1_100051b033 = phi i32 [ %v1_100051b4, %dec_label_pc_10005358 ], [ 0, %dec_label_pc_100051c8 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_100051d0 = add i32 %v0_100051d0, -1
  %v2_100051d0 = icmp eq i32 %v1_100051d0, 0
  br i1 %v2_100051d0, label %dec_label_pc_100051d4, label %dec_label_pc_100051b0

dec_label_pc_100051d4:                            ; preds = %dec_label_pc_100051d0, %dec_label_pc_1000519c, %dec_label_pc_10005190
  %v3_100051d4 = load i32, i32* %stack_var_-8444, align 4
  %v2_100051d8 = icmp slt i32 %v3_10005140109, %v3_100051d4
  br i1 %v2_100051d8, label %dec_label_pc_10005218, label %dec_label_pc_100051e0

dec_label_pc_100051e0:                            ; preds = %dec_label_pc_100051d4
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_10005144110, label %dec_label_pc_10005218, label %dec_label_pc_100051f4.preheader

dec_label_pc_100051f4.preheader:                  ; preds = %dec_label_pc_100051e0
  %v0_100051f4.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100051f4

dec_label_pc_100051f4:                            ; preds = %dec_label_pc_100051f4.preheader, %dec_label_pc_10005214
  %v0_10005214 = phi i32 [ %v3_10005140109, %dec_label_pc_100051f4.preheader ], [ %v1_10005214, %dec_label_pc_10005214 ]
  %storemerge3.in = phi i32 [ %v2_10004e38, %dec_label_pc_100051f4.preheader ], [ %storemerge3, %dec_label_pc_10005214 ]
  %v1_100051f4 = phi i32 [ 0, %dec_label_pc_100051f4.preheader ], [ %v1_100051f439, %dec_label_pc_10005214 ]
  %v2_100051f4 = add i32 %v1_100051f4, %v0_100051f4.pre
  %v3_100051f4 = inttoptr i32 %v2_100051f4 to i8*
  %v4_100051f4 = load i8, i8* %v3_100051f4, align 1
  %v1_100051f8 = add i32 %v1_100051f4, 1
  store i32 %v1_100051f8, i32* %r11.global-to-local, align 4
  %v1_100051fc = inttoptr i32 %storemerge3.in to i8*
  %v2_100051fc = load i8, i8* %v1_100051fc, align 1
  %v4_10005204 = icmp eq i8 %v2_100051fc, %v4_100051f4
  br i1 %v4_10005204, label %dec_label_pc_10005364, label %dec_label_pc_1000520c

dec_label_pc_1000520c:                            ; preds = %dec_label_pc_100051f4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005214

dec_label_pc_10005214:                            ; preds = %dec_label_pc_10005364, %dec_label_pc_1000520c
  %v1_100051f439 = phi i32 [ %v1_100051f8, %dec_label_pc_10005364 ], [ 0, %dec_label_pc_1000520c ]
  %storemerge3 = add i32 %storemerge3.in, 1
  %v1_10005214 = add i32 %v0_10005214, -1
  %v2_10005214 = icmp eq i32 %v1_10005214, 0
  br i1 %v2_10005214, label %dec_label_pc_10005218, label %dec_label_pc_100051f4

dec_label_pc_10005218:                            ; preds = %dec_label_pc_10005214, %dec_label_pc_100051e0, %dec_label_pc_100051d4
  %v3_10005218 = load i32, i32* %stack_var_-8456, align 4
  %v2_1000521c = icmp slt i32 %v3_10005140109, %v3_10005218
  br i1 %v2_1000521c, label %dec_label_pc_1000525c, label %dec_label_pc_10005224

dec_label_pc_10005224:                            ; preds = %dec_label_pc_10005218
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_10005144110, label %dec_label_pc_1000525c, label %dec_label_pc_10005238.preheader

dec_label_pc_10005238.preheader:                  ; preds = %dec_label_pc_10005224
  %v0_10005238.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10005238

dec_label_pc_10005238:                            ; preds = %dec_label_pc_10005238.preheader, %dec_label_pc_10005258
  %v0_10005258 = phi i32 [ %v3_10005140109, %dec_label_pc_10005238.preheader ], [ %v1_10005258, %dec_label_pc_10005258 ]
  %storemerge4.in = phi i32 [ %v2_10004e38, %dec_label_pc_10005238.preheader ], [ %storemerge4, %dec_label_pc_10005258 ]
  %v1_10005238 = phi i32 [ 0, %dec_label_pc_10005238.preheader ], [ %v1_1000523845, %dec_label_pc_10005258 ]
  %v2_10005238 = add i32 %v1_10005238, %v0_10005238.pre
  %v3_10005238 = inttoptr i32 %v2_10005238 to i8*
  %v4_10005238 = load i8, i8* %v3_10005238, align 1
  %v1_1000523c = add i32 %v1_10005238, 1
  store i32 %v1_1000523c, i32* %r11.global-to-local, align 4
  %v1_10005240 = inttoptr i32 %storemerge4.in to i8*
  %v2_10005240 = load i8, i8* %v1_10005240, align 1
  %v4_10005248 = icmp eq i8 %v2_10005240, %v4_10005238
  br i1 %v4_10005248, label %dec_label_pc_10005370, label %dec_label_pc_10005250

dec_label_pc_10005250:                            ; preds = %dec_label_pc_10005238
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005258

dec_label_pc_10005258:                            ; preds = %dec_label_pc_10005370, %dec_label_pc_10005250
  %v1_1000523845 = phi i32 [ %v1_1000523c, %dec_label_pc_10005370 ], [ 0, %dec_label_pc_10005250 ]
  %storemerge4 = add i32 %storemerge4.in, 1
  %v1_10005258 = add i32 %v0_10005258, -1
  %v2_10005258 = icmp eq i32 %v1_10005258, 0
  br i1 %v2_10005258, label %dec_label_pc_1000525c, label %dec_label_pc_10005238

dec_label_pc_1000525c:                            ; preds = %dec_label_pc_10005258, %dec_label_pc_10005224, %dec_label_pc_10005218
  %v3_1000525c = load i32, i32* %stack_var_-8440, align 4
  %v2_10005260 = icmp slt i32 %v3_10005140109, %v3_1000525c
  br i1 %v2_10005260, label %dec_label_pc_100052a0, label %dec_label_pc_10005268

dec_label_pc_10005268:                            ; preds = %dec_label_pc_1000525c
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_10005144110, label %dec_label_pc_100052a0, label %dec_label_pc_1000527c.preheader

dec_label_pc_1000527c.preheader:                  ; preds = %dec_label_pc_10005268
  %v0_1000527c.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_1000527c

dec_label_pc_1000527c:                            ; preds = %dec_label_pc_1000527c.preheader, %dec_label_pc_1000529c
  %v0_1000529c = phi i32 [ %v3_10005140109, %dec_label_pc_1000527c.preheader ], [ %v1_1000529c, %dec_label_pc_1000529c ]
  %storemerge5.in = phi i32 [ %v2_10004e38, %dec_label_pc_1000527c.preheader ], [ %storemerge5, %dec_label_pc_1000529c ]
  %v1_1000527c = phi i32 [ 0, %dec_label_pc_1000527c.preheader ], [ %v1_1000527c51, %dec_label_pc_1000529c ]
  %v2_1000527c = add i32 %v1_1000527c, %v0_1000527c.pre
  %v3_1000527c = inttoptr i32 %v2_1000527c to i8*
  %v4_1000527c = load i8, i8* %v3_1000527c, align 1
  %v1_10005280 = add i32 %v1_1000527c, 1
  store i32 %v1_10005280, i32* %r11.global-to-local, align 4
  %v1_10005284 = inttoptr i32 %storemerge5.in to i8*
  %v2_10005284 = load i8, i8* %v1_10005284, align 1
  %v4_1000528c = icmp eq i8 %v2_10005284, %v4_1000527c
  br i1 %v4_1000528c, label %dec_label_pc_1000537c, label %dec_label_pc_10005294

dec_label_pc_10005294:                            ; preds = %dec_label_pc_1000527c
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000529c

dec_label_pc_1000529c:                            ; preds = %dec_label_pc_1000537c, %dec_label_pc_10005294
  %v1_1000527c51 = phi i32 [ %v1_10005280, %dec_label_pc_1000537c ], [ 0, %dec_label_pc_10005294 ]
  %storemerge5 = add i32 %storemerge5.in, 1
  %v1_1000529c = add i32 %v0_1000529c, -1
  %v2_1000529c = icmp eq i32 %v1_1000529c, 0
  br i1 %v2_1000529c, label %dec_label_pc_100052a0, label %dec_label_pc_1000527c

dec_label_pc_100052a0:                            ; preds = %dec_label_pc_1000529c, %dec_label_pc_10005268, %dec_label_pc_1000525c
  %v3_100052a0 = load i32, i32* %stack_var_-8436, align 4
  %v2_100052a4 = icmp slt i32 %v3_10005140109, %v3_100052a0
  br i1 %v2_100052a4, label %dec_label_pc_10005134.backedge, label %dec_label_pc_100052ac

dec_label_pc_100052ac:                            ; preds = %dec_label_pc_100052a0
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_10005144110, label %dec_label_pc_10005134.backedge, label %dec_label_pc_100052c0.lr.ph

dec_label_pc_10005134.backedge:                   ; preds = %dec_label_pc_100052bc.backedge, %dec_label_pc_100052ac, %dec_label_pc_100052a0
  %v0_10005134 = load i32, i32* %r24.global-to-local, align 4
  store i32 268456260, i32* @lr, align 4
  %v3_10005140 = call i32 @function_100092d4(i32 %v0_10005134, i32 %v2_10004e38, i32 4096)
  %tmp98 = icmp slt i32 %v3_10005140, 1
  br i1 %tmp98, label %dec_label_pc_100053a4, label %dec_label_pc_1000514c

dec_label_pc_100052c0.lr.ph:                      ; preds = %dec_label_pc_100052ac
  %v0_100052c0.pre = load i32, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_100052c0

dec_label_pc_100052c0:                            ; preds = %dec_label_pc_100052c0.lr.ph, %dec_label_pc_100052bc.backedge
  %v0_100052bc = phi i32 [ %v3_10005140109, %dec_label_pc_100052c0.lr.ph ], [ %v1_100052bc, %dec_label_pc_100052bc.backedge ]
  %storemerge21.in = phi i32 [ %v2_10004e38, %dec_label_pc_100052c0.lr.ph ], [ %storemerge21, %dec_label_pc_100052bc.backedge ]
  %v1_100052c0 = phi i32 [ 0, %dec_label_pc_100052c0.lr.ph ], [ %v1_100052c057, %dec_label_pc_100052bc.backedge ]
  %v2_100052c0 = add i32 %v1_100052c0, %v0_100052c0.pre
  %v3_100052c0 = inttoptr i32 %v2_100052c0 to i8*
  %v4_100052c0 = load i8, i8* %v3_100052c0, align 1
  %v1_100052c4 = add i32 %v1_100052c0, 1
  store i32 %v1_100052c4, i32* %r11.global-to-local, align 4
  %v1_100052c8 = inttoptr i32 %storemerge21.in to i8*
  %v2_100052c8 = load i8, i8* %v1_100052c8, align 1
  %v4_100052d0 = icmp eq i8 %v2_100052c8, %v4_100052c0
  br i1 %v4_100052d0, label %dec_label_pc_10005388, label %dec_label_pc_100052d8

dec_label_pc_100052d8:                            ; preds = %dec_label_pc_100052c0
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100052bc.backedge

dec_label_pc_100052bc.backedge:                   ; preds = %dec_label_pc_10005388, %dec_label_pc_100052d8
  %v1_100052c057 = phi i32 [ 0, %dec_label_pc_100052d8 ], [ %v1_100052c4, %dec_label_pc_10005388 ]
  %storemerge21 = add i32 %storemerge21.in, 1
  %v1_100052bc = add i32 %v0_100052bc, -1
  %v2_100052bc = icmp eq i32 %v1_100052bc, 0
  br i1 %v2_100052bc, label %dec_label_pc_10005134.backedge, label %dec_label_pc_100052c0

dec_label_pc_100052e4:                            ; preds = %dec_label_pc_1000516c
  %v4_10005178 = icmp eq i32 %v3_1000514c, %v1_10005170
  br i1 %v4_10005178, label %dec_label_pc_100052e8, label %dec_label_pc_10005188

dec_label_pc_100052e8:                            ; preds = %dec_label_pc_100052e4, %dec_label_pc_10005358, %dec_label_pc_10005364, %dec_label_pc_10005370, %dec_label_pc_1000537c, %dec_label_pc_10005388
  store i32 ptrtoint ([3 x i8]* @global_var_100052f0.63 to i32), i32* @lr, align 4
  %v1_100052ec = call i32 @function_100081ec(i32 20)
  store i32 ptrtoint ([3 x i8]* @global_var_100052f8.64 to i32), i32* @lr, align 4
  %v1_100052f4 = call i32 @function_100081ec(i32 21)
  store i32 ptrtoint ([3 x i8]* @global_var_10005300.65 to i32), i32* @lr, align 4
  %v1_100052fc = call i32 @function_100081ec(i32 22)
  store i32 ptrtoint ([3 x i8]* @global_var_10005308.66 to i32), i32* @lr, align 4
  %v1_10005304 = call i32 @function_100081ec(i32 23)
  store i32 ptrtoint ([3 x i8]* @global_var_10005310.67 to i32), i32* @lr, align 4
  %v1_1000530c = call i32 @function_100081ec(i32 24)
  store i32 268456728, i32* @lr, align 4
  %v1_10005314 = call i32 @function_100081ec(i32 36)
  store i32 268456736, i32* @lr, align 4
  %v0_1000531c = call i32 @function_1000909c()
  %v0_10005320 = load i32, i32* %r30.global-to-local, align 4
  store i32 268456748, i32* @lr, align 4
  %v2_10005328 = call i32 @function_100091bc(i32 %v0_10005320, i32 9)
  br label %dec_label_pc_1000532c

dec_label_pc_1000532c:                            ; preds = %dec_label_pc_10005088, %dec_label_pc_100053a4, %dec_label_pc_100052e8
  store i32 64, i32* @r4, align 4
  store i32 %v2_10004e30, i32* @r3, align 4
  store i32 268456760, i32* @lr, align 4
  %v0_10005334 = call i32 @function_10008984()
  store i32 %v2_10004e34, i32* @r3, align 4
  store i32 64, i32* @r4, align 4
  %v0_10005340 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10005340, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005348.68 to i32), i32* @lr, align 4
  %v0_10005344 = call i32 @function_10008984()
  store i32 268456784, i32* @lr, align 4
  %v1_1000534c = call i32 @function_1000a8e4(i32 1)
  %v0_10005350 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10005350, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004e64.backedge

dec_label_pc_10005358:                            ; preds = %dec_label_pc_100051b0
  %v4_100051bc = icmp eq i32 %v3_10005190, %v1_100051b4
  br i1 %v4_100051bc, label %dec_label_pc_100052e8, label %dec_label_pc_100051d0

dec_label_pc_10005364:                            ; preds = %dec_label_pc_100051f4
  %v4_10005200 = icmp eq i32 %v3_100051d4, %v1_100051f8
  br i1 %v4_10005200, label %dec_label_pc_100052e8, label %dec_label_pc_10005214

dec_label_pc_10005370:                            ; preds = %dec_label_pc_10005238
  %v4_10005244 = icmp eq i32 %v3_10005218, %v1_1000523c
  br i1 %v4_10005244, label %dec_label_pc_100052e8, label %dec_label_pc_10005258

dec_label_pc_1000537c:                            ; preds = %dec_label_pc_1000527c
  %v4_10005288 = icmp eq i32 %v3_1000525c, %v1_10005280
  br i1 %v4_10005288, label %dec_label_pc_100052e8, label %dec_label_pc_1000529c

dec_label_pc_10005388:                            ; preds = %dec_label_pc_100052c0
  %v4_100052cc = icmp eq i32 %v3_100052a0, %v1_100052c4
  br i1 %v4_100052cc, label %dec_label_pc_100052e8, label %dec_label_pc_100052bc.backedge

dec_label_pc_10005394:                            ; preds = %dec_label_pc_10005064
  %v0_10005394 = load i32, i32* %r30.global-to-local, align 4
  store i32 268456864, i32* @lr, align 4
  %v2_1000539c = call i32 @function_100091bc(i32 %v0_10005394, i32 9)
  br label %dec_label_pc_10005080

dec_label_pc_100053a4:                            ; preds = %dec_label_pc_10005134.backedge, %dec_label_pc_100050a4
  store i32 ptrtoint ([3 x i8]* @global_var_100053ac.69 to i32), i32* @lr, align 4
  %v1_100053a8 = call i32 @function_100081ec(i32 20)
  store i32 ptrtoint ([3 x i8]* @global_var_100053b4.70 to i32), i32* @lr, align 4
  %v1_100053b0 = call i32 @function_100081ec(i32 21)
  store i32 ptrtoint ([3 x i8]* @global_var_100053bc.71 to i32), i32* @lr, align 4
  %v1_100053b8 = call i32 @function_100081ec(i32 22)
  store i32 ptrtoint ([3 x i8]* @global_var_100053c4.72 to i32), i32* @lr, align 4
  %v1_100053c0 = call i32 @function_100081ec(i32 23)
  store i32 ptrtoint ([3 x i8]* @global_var_100053cc.73 to i32), i32* @lr, align 4
  %v1_100053c8 = call i32 @function_100081ec(i32 24)
  store i32 268456916, i32* @lr, align 4
  %v1_100053d0 = call i32 @function_100081ec(i32 36)
  store i32 268456924, i32* @lr, align 4
  %v0_100053d8 = call i32 @function_1000909c()
  br label %dec_label_pc_1000532c

; uselistorder directives
  uselistorder i32 %v1_100052bc, { 1, 0 }
  uselistorder i32 %v1_100052c4, { 1, 0, 2 }
  uselistorder i32 %v1_100052c0, { 1, 0 }
  uselistorder i32 %v3_10005140, { 2, 1, 0 }
  uselistorder i32 %v1_1000529c, { 1, 0 }
  uselistorder i32 %v1_1000527c, { 1, 0 }
  uselistorder i32 %v1_10005258, { 1, 0 }
  uselistorder i32 %v1_10005238, { 1, 0 }
  uselistorder i32 %v1_10005214, { 1, 0 }
  uselistorder i32 %v1_100051f4, { 1, 0 }
  uselistorder i32 %v1_100051d0, { 1, 0 }
  uselistorder i32 %v1_100051b0, { 1, 0 }
  uselistorder i32 %v1_1000518c, { 1, 0 }
  uselistorder i32 %v1_1000516c, { 1, 0 }
  uselistorder i1 %v3_10005144110, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_10005140109, { 11, 3, 10, 0, 9, 2, 8, 1, 7, 5, 6, 4 }
  uselistorder i32 %v2_10004e68, { 1, 0 }
  uselistorder i32 %v2_10004ec0, { 1, 0 }
  uselistorder i32 %v1_10004e7c, { 1, 0 }
  uselistorder i32 %v2_10004e38, { 1, 7, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v2_10004dac, { 1, 0, 2 }
  uselistorder i32 %v2_10004d88, { 1, 0, 2 }
  uselistorder i32 %v2_10004d58, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_10004b70, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-8432, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %stack_var_-8452, { 1, 0 }
  uselistorder i32* %stack_var_-8448, { 1, 0 }
  uselistorder i32* %stack_var_-8444, { 1, 0 }
  uselistorder i32* %stack_var_-8456, { 1, 0 }
  uselistorder i32* %stack_var_-8440, { 1, 0 }
  uselistorder i32* %stack_var_-8436, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 4, 3, 5, 7, 6, 8, 10, 9, 11, 13, 12, 14, 16, 15, 17, 18, 19 }
  uselistorder i32 268456260, { 1, 0 }
  uselistorder i32 (i32*)* @function_100096f8, { 3, 2, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 268455532, { 1, 0 }
  uselistorder i32 (i32)* @function_100095e8, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000931c, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000532c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100052e8, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100052c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000527c, { 1, 0 }
  uselistorder label %dec_label_pc_10005238, { 1, 0 }
  uselistorder label %dec_label_pc_100051f4, { 1, 0 }
  uselistorder label %dec_label_pc_100051b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000516c, { 1, 0 }
  uselistorder label %dec_label_pc_1000514c, { 1, 0 }
  uselistorder label %dec_label_pc_10005088, { 1, 0 }
  uselistorder label %dec_label_pc_10005080, { 1, 0 }
  uselistorder label %dec_label_pc_10004e64.backedge, { 3, 2, 5, 4, 1, 0 }
  uselistorder label %dec_label_pc_10004ff4, { 1, 0 }
  uselistorder label %dec_label_pc_10004e74, { 1, 0 }
  uselistorder label %dec_label_pc_10004e74.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10004e14, { 1, 0 }
  uselistorder label %dec_label_pc_10004d34, { 1, 0 }
  uselistorder label %dec_label_pc_10004cf0, { 1, 0 }
  uselistorder label %dec_label_pc_10004cac, { 1, 0 }
  uselistorder label %dec_label_pc_10004c78, { 1, 0 }
  uselistorder label %dec_label_pc_10004c34, { 1, 0 }
}

define i32 @function_100053e0() local_unnamed_addr {
dec_label_pc_100053e0:
  store i32 268457440, i32* @global_var_1001c1e8.74, align 4
  %v0_100053f0 = load i32, i32* @r3, align 4
  ret i32 %v0_100053f0
}

define i32 @function_100053f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100053f4:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v0_10005414 = load i32, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  store i32 268566528, i32* @r28, align 4
  %v0_10005424 = load i32, i32* @r31, align 4
  store i32 268566528, i32* @r31, align 4
  %v2_10005430 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10005430, i32* @r30, align 4
  store i32 1, i32* %stack_var_-56, align 4
  store i32 268457020, i32* @lr, align 4
  %v3_10005438 = call i32 @function_10009dec(i32 2, i32 1, i32 0)
  %v3_1000543c = icmp eq i32 %v3_10005438, -1
  store i32 %v3_10005438, i32* @global_var_1001c1e0.75, align 4
  br i1 %v3_1000543c, label %dec_label_pc_100054ec, label %dec_label_pc_10005458

dec_label_pc_10005458:                            ; preds = %dec_label_pc_100053f4
  %v2_10005440 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268457052, i32* @lr, align 4
  %v5_10005458 = call i32 @function_10009db0(i32 %v3_10005438, i32 1, i32 2, i32 %v2_10005440)
  %v3_1000545c = load i32, i32* @global_var_1001c1e0.75, align 4
  store i32 3, i32* @r4, align 4
  store i32 268457076, i32* @lr, align 4
  %v2_10005470 = call i32 @function_10008fb4(i32 %v3_1000545c)
  store i32 4, i32* @r4, align 4
  store i32 268457096, i32* @lr, align 4
  %v2_10005484 = call i32 @function_10008fb4(i32 %v3_1000545c)
  %v3_10005488 = load i8, i8* @global_var_1001c0a0.76, align 1
  %v3_10005490 = icmp eq i8 %v3_10005488, 0
  br i1 %v3_10005490, label %dec_label_pc_10005510, label %dec_label_pc_1000549c

dec_label_pc_1000549c:                            ; preds = %dec_label_pc_10005458
  store i32 2, i32* %stack_var_-52, align 4
  %v0_100054b0 = call i32 @function_100097b8()
  %v0_100054b4 = load i32, i32* @r27, align 4
  %v2_100054b4 = inttoptr i32 %v0_100054b0 to i32*
  store i32 %v0_100054b4, i32* %v2_100054b4, align 4
  store i32 %v0_100054b0, i32* @r29, align 4
  %v3_100054c4 = load i32, i32* @global_var_1001c1e0.75, align 4
  store i32 268457164, i32* @lr, align 4
  %v3_100054c8 = call i32 @function_10009bb8(i32 %v3_100054c4, i32 %v2_10005430, i32 16)
  %v3_100054d0 = icmp eq i32 %v3_100054c8, -1
  br i1 %v3_100054d0, label %dec_label_pc_10005558, label %dec_label_pc_100054dc

dec_label_pc_100054dc:                            ; preds = %dec_label_pc_10005510, %dec_label_pc_1000549c
  %v3_100054e4 = load i32, i32* @global_var_1001c1e0.75, align 4
  store i32 268457196, i32* @lr, align 4
  %v2_100054e8 = call i32 @function_10009c90(i32 %v3_100054e4, i32 1)
  br label %dec_label_pc_100054ec

dec_label_pc_100054ec:                            ; preds = %dec_label_pc_100053f4, %dec_label_pc_100054dc
  %v0_1000550c = phi i32 [ -1, %dec_label_pc_100053f4 ], [ %v2_100054e8, %dec_label_pc_100054dc ]
  store i32 %v0_10005414, i32* @r28, align 4
  store i32 %v0_10005424, i32* @r31, align 4
  ret i32 %v0_1000550c

dec_label_pc_10005510:                            ; preds = %dec_label_pc_10005458
  store i32 2, i32* %stack_var_-52, align 4
  %v0_1000552c = call i32 @function_100097b8()
  %v0_10005530 = load i32, i32* @r27, align 4
  %v2_10005530 = inttoptr i32 %v0_1000552c to i32*
  store i32 %v0_10005530, i32* %v2_10005530, align 4
  store i32 %v0_1000552c, i32* @r29, align 4
  %v3_10005540 = load i32, i32* @global_var_1001c1e0.75, align 4
  store i32 268457288, i32* @lr, align 4
  %v3_10005544 = call i32 @function_10009bb8(i32 %v3_10005540, i32 %v2_10005430, i32 16)
  %v3_1000554c = icmp eq i32 %v3_10005544, -1
  br i1 %v3_1000554c, label %dec_label_pc_10005558, label %dec_label_pc_100054dc

dec_label_pc_10005558:                            ; preds = %dec_label_pc_10005510, %dec_label_pc_1000549c
  %v0_10005558 = load i32, i32* @r29, align 4
  %v1_10005558 = inttoptr i32 %v0_10005558 to i32*
  %v2_10005558 = load i32, i32* %v1_10005558, align 4
  %v3_1000555c = load i32, i32* @global_var_1001c1e0.75, align 4
  store i32 %v3_1000555c, i32* @r3, align 4
  %v3_10005560 = icmp eq i32 %v2_10005558, 99
  br i1 %v3_10005560, label %dec_label_pc_100055c8, label %dec_label_pc_10005568

dec_label_pc_10005568:                            ; preds = %dec_label_pc_100055c8, %dec_label_pc_10005558, %dec_label_pc_100055d4
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005584.77 to i32), i32* @lr, align 4
  %v0_10005580 = call i32 @function_10009bec()
  store i32 268457356, i32* @lr, align 4
  %v1_10005588 = call i32 @function_1000a8e4(i32 5)
  store i32 ptrtoint ([3 x i8]* @global_var_10005594.78 to i32), i32* @lr, align 4
  %v0_10005590 = call i32 @function_1000909c()
  store i32 268457376, i32* @lr, align 4
  %v1_1000559c = call i32 @function_10004514(i32 46576)
  store i32 268457380, i32* @lr, align 4
  %v1_100055a0 = call i32 @function_100053f4(i32 %v1_1000559c)
  store i32 %v0_10005414, i32* @r28, align 4
  store i32 %v0_10005424, i32* @r31, align 4
  ret i32 %v1_100055a0

dec_label_pc_100055c8:                            ; preds = %dec_label_pc_10005558
  %v3_100055c8 = load i8, i8* @global_var_1001c0a0.76, align 1
  %v3_100055cc = icmp eq i8 %v3_100055c8, 0
  br i1 %v3_100055cc, label %dec_label_pc_10005568, label %dec_label_pc_100055d4

dec_label_pc_100055d4:                            ; preds = %dec_label_pc_100055c8
  %v0_100055d8 = load i32, i32* @r27, align 4
  %v1_100055d8 = trunc i32 %v0_100055d8 to i8
  store i8 %v1_100055d8, i8* @global_var_1001c0a0.76, align 1
  br label %dec_label_pc_10005568

; uselistorder directives
  uselistorder i32 %v2_10005430, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i32)* @function_10004514, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_10009c90, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009bb8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001c0a0.76, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005568, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100054ec, { 1, 0 }
}

define i32 @function_100055e0() local_unnamed_addr {
dec_label_pc_100055e0:
  %r28.global-to-local = alloca i32, align 4
  store i32 268457472, i32* @lr, align 4
  %v1_100055fc = call i32 @function_10008278(i32 2)
  %v3_10005608 = call i32 @function_100081c4(i32 2, i32* null)
  store i32 268457488, i32* @lr, align 4
  %v1_1000560c = call i32 @function_10006260(i32 %v3_10005608)
  store i32 %v1_1000560c, i32* @r31, align 4
  store i32 268457500, i32* @lr, align 4
  %v1_10005618 = call i32 @function_100081ec(i32 2)
  %v0_1000561c = load i32, i32* @r31, align 4
  %v3_1000561c = icmp eq i32 %v0_1000561c, 0
  br i1 %v3_1000561c, label %dec_label_pc_10005680, label %dec_label_pc_10005624

dec_label_pc_10005624:                            ; preds = %dec_label_pc_100055e0
  %v1_10005624 = add i32 %v0_1000561c, 4
  %v2_10005624 = inttoptr i32 %v1_10005624 to i32*
  %v3_10005624 = load i32, i32* %v2_10005624, align 4
  store i32 %v3_10005624, i32* %r28.global-to-local, align 4
  %v0_10005628 = call i32 @function_10005f3c()
  %v0_1000562c = load i32, i32* @r31, align 4
  %v1_1000562c = inttoptr i32 %v0_1000562c to i8*
  %v2_1000562c = load i8, i8* %v1_1000562c, align 1
  %v3_1000562c = zext i8 %v2_1000562c to i32
  %v2_10005638 = urem i32 %v0_10005628, %v3_1000562c
  %v1_1000564c = mul nuw nsw i32 %v2_10005638, 4
  %v1_10005650 = load i32, i32* %r28.global-to-local, align 4
  %v2_10005650 = add i32 %v1_10005650, %v1_1000564c
  %v3_10005650 = inttoptr i32 %v2_10005650 to i32*
  %v4_10005650 = load i32, i32* %v3_10005650, align 4
  store i32 %v4_10005650, i32* @global_var_1001c2e4.81, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000565c.82 to i32), i32* @lr, align 4
  %v1_10005658 = call i32 @function_1000621c(i32 %v0_1000562c)
  store i32 ptrtoint ([3 x i8]* @global_var_10005664.83 to i32), i32* @lr, align 4
  %v1_10005660 = call i32 @function_10008278(i32 1)
  %v3_1000566c = call i32 @function_100081c4(i32 1, i32* null)
  %v4_1000566c = inttoptr i32 %v3_1000566c to i16*
  %v3_10005670 = load i16, i16* %v4_1000566c, align 2
  store i16 %v3_10005670, i16* bitcast (i32* @global_var_1001c2e2.84 to i16*), align 4
  store i32 268457600, i32* @lr, align 4
  %v1_1000567c = call i32 @function_100081ec(i32 1)
  br label %dec_label_pc_10005680

dec_label_pc_10005680:                            ; preds = %dec_label_pc_100055e0, %dec_label_pc_10005624
  %v0_10005698 = phi i32 [ %v1_10005618, %dec_label_pc_100055e0 ], [ %v1_1000567c, %dec_label_pc_10005624 ]
  ret i32 %v0_10005698

; uselistorder directives
  uselistorder label %dec_label_pc_10005680, { 1, 0 }
}

define i32 @function_1000569c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000569c:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r15.global-to-local, align 4
  %stack_var_-1136 = alloca i32, align 4
  %stack_var_-1600 = alloca i32, align 4
  %stack_var_-1612 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1608 = alloca i32, align 4
  %stack_var_-1264 = alloca i32, align 4
  %stack_var_-1392 = alloca i32, align 4
  %stack_var_-1620 = alloca i32, align 4
  %stack_var_-1624 = alloca i16, align 2
  %stack_var_-1584 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1520 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000569c = load i32, i32* @lr, align 4
  store i32 %v0_1000569c, i32* %r0.global-to-local, align 4
  %v0_100056a4 = load i32, i32* @r31, align 4
  store i32 268457648, i32* @lr, align 4
  %v0_100056ac = call i32 @function_100090e4()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_100056ac, i32* @global_var_1001c218.85, align 4
  %tmp47 = icmp slt i32 %v0_100056ac, 1
  br i1 %tmp47, label %dec_label_pc_100056d4, label %dec_label_pc_100056c0

dec_label_pc_100056c0:                            ; preds = %dec_label_pc_100056d4, %dec_label_pc_1000569c
  store i32 %v0_1000569c, i32* %r0.global-to-local, align 4
  store i32 %v0_100056a4, i32* @r31, align 4
  ret i32 %v0_100056ac

dec_label_pc_100056d4:                            ; preds = %dec_label_pc_1000569c
  %v3_100056d4 = icmp eq i32 %v0_100056ac, -1
  br i1 %v3_100056d4, label %dec_label_pc_100056c0, label %dec_label_pc_100056dc

dec_label_pc_100056dc:                            ; preds = %dec_label_pc_100056d4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %stack_var_-24, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100056ec.86 to i32), i32* @lr, align 4
  %v1_100056e8 = call i32 @function_10008278(i32 28)
  store i32 268457716, i32* @lr, align 4
  %v1_100056f0 = call i32 @function_10008278(i32 29)
  %v3_100056fc = call i32 @function_100081c4(i32 28, i32* null)
  store i32 268457740, i32* @lr, align 4
  %v2_10005708 = call i32 @function_10009204(i32 %v3_100056fc, i32 2)
  %v3_1000570c = icmp eq i32 %v2_10005708, -1
  store i32 %v2_10005708, i32* @r31, align 4
  br i1 %v3_1000570c, label %dec_label_pc_10005754, label %dec_label_pc_10005718

dec_label_pc_10005718:                            ; preds = %dec_label_pc_10005754, %dec_label_pc_100056dc
  %v0_1000571c = phi i32 [ %v2_10005768, %dec_label_pc_10005754 ], [ %v2_10005708, %dec_label_pc_100056dc ]
  %v2_10005724 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268457776, i32* @lr, align 4
  %v3_1000572c = call i32 @function_10008ecc(i32 %v0_1000571c, i32 -2147199228, i32 %v2_10005724)
  br label %dec_label_pc_10005730

dec_label_pc_10005730:                            ; preds = %dec_label_pc_10005730, %dec_label_pc_10005718
  %v0_10005734 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005748.87 to i32), i32* @lr, align 4
  %v3_10005744 = call i32 @function_10008ecc(i32 %v0_10005734, i32 -2147199227, i32 0)
  store i32 268457808, i32* @lr, align 4
  %v1_1000574c = call i32 @function_1000a8e4(i32 10)
  br label %dec_label_pc_10005730

dec_label_pc_10005754:                            ; preds = %dec_label_pc_100056dc
  %v3_1000575c = call i32 @function_100081c4(i32 29, i32* null)
  store i32 268457836, i32* @lr, align 4
  %v2_10005768 = call i32 @function_10009204(i32 %v3_1000575c, i32 2)
  %v3_1000576c = icmp eq i32 %v2_10005768, -1
  store i32 %v2_10005768, i32* @r31, align 4
  br i1 %v3_1000576c, label %dec_label_pc_10005778, label %dec_label_pc_10005718

dec_label_pc_10005778:                            ; preds = %dec_label_pc_10005754
  store i32 ptrtoint ([3 x i8]* @global_var_10005780.88 to i32), i32* @lr, align 4
  %v1_1000577c = call i32 @function_100081ec(i32 28)
  store i32 ptrtoint ([3 x i8]* @global_var_10005788.89 to i32), i32* @lr, align 4
  %v1_10005784 = call i32 @function_100081ec(i32 29)
  %v0_1000578c = call i32 @function_1000a860()
  %v0_10005794 = load i32, i32* @lr, align 4
  %v0_10005798 = load i32, i32* @r29, align 4
  %v2_1000579c = ptrtoint i32* %stack_var_-1520 to i32
  store i32 %v2_1000579c, i32* @r29, align 4
  %v0_100057a0 = load i32, i32* @r28, align 4
  store i32 %v0_1000578c, i32* @r28, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100057b4 = load i32, i32* @r21, align 4
  store i32 0, i32* %stack_var_-1620, align 4
  store i32 268566528, i32* @r21, align 4
  %v0_100057c0 = load i32, i32* @r22, align 4
  store i32 268566528, i32* @r22, align 4
  %v0_100057c8 = load i32, i32* @r24, align 4
  %v2_100057cc = ptrtoint i32* %stack_var_-1552 to i32
  store i32 %v2_100057cc, i32* @r24, align 4
  %v0_100057d0 = load i32, i32* @r25, align 4
  store i32 268566528, i32* @r25, align 4
  %v0_100057d8 = load i32, i32* @r31, align 4
  store i32 2, i32* @r31, align 4
  %v0_100057e0 = load i32, i32* %r15.global-to-local, align 4
  %v0_100057e4 = load i32, i32* %r16.global-to-local, align 4
  %v0_100057e8 = load i32, i32* %r17.global-to-local, align 4
  %v0_100057ec = load i32, i32* %r18.global-to-local, align 4
  %v0_100057f0 = load i32, i32* %r19.global-to-local, align 4
  %v0_100057f4 = load i32, i32* @r20, align 4
  %v0_100057f8 = load i32, i32* @r23, align 4
  %v0_10005800 = load i32, i32* @r27, align 4
  %v0_10005804 = load i32, i32* @r30, align 4
  store i32 268457996, i32* @lr, align 4
  %v1_10005808 = call i32 @function_10009e6c(i32 %v2_1000579c)
  store i32 %v2_1000579c, i32* @r3, align 4
  store i32 268458008, i32* @lr, align 4
  %v2_10005814 = call i32 @function_10009e20(i32 %v2_1000579c, i32 2)
  store i32 268458024, i32* @lr, align 4
  %v3_10005824 = call i32 @function_100093f4(i32 0, i32 %v2_1000579c, i32 0)
  store i32 268458036, i32* @lr, align 4
  %v2_10005830 = call i32 @function_10009e98(i32 17, i32 1)
  store i32 ptrtoint (i32* @global_var_10005844.90 to i32), i32* @lr, align 4
  %v2_10005840 = call i32 @function_10009e98(i32 5, i32 268456928)
  store i32 268458056, i32* @lr, align 4
  %v1_10005844 = call i32 @function_10008be0(i32 %v2_10005840)
  store i32 -1350886823, i32* %r9.global-to-local, align 4
  store i32 -1350886823, i32* @global_var_1001c2e4.81, align 4
  store i16 232, i16* bitcast (i32* @global_var_1001c2e2.84 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v1_10005844, i32* @global_var_1001c208.14, align 4
  store i16 2, i16* bitcast (i32* @global_var_1001c2e0.80 to i16*), align 4
  store i32 268458096, i32* @lr, align 4
  %v2_1000586c = call i32 @function_10008304(i32 %v1_10005844, i32 -1350886823)
  store i32 268457440, i32* %r9.global-to-local, align 4
  store i32 268457440, i32* @global_var_1001c1e8.74, align 4
  store i32 ptrtoint (i32* @global_var_10005880.91 to i32), i32* @lr, align 4
  %v1_1000587c = call i32 @function_100053f4(i32 %v2_1000586c)
  store i32 268458116, i32* @lr, align 4
  %v1_10005880 = call i32 @function_10005f8c(i32 %v1_1000587c)
  store i32 %v2_100057cc, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268458128, i32* @lr, align 4
  %v0_1000588c = call i32 @function_10008984()
  %v0_10005890 = load i32, i32* @r28, align 4
  %v3_10005890 = icmp eq i32 %v0_10005890, 2
  br i1 %v3_10005890, label %dec_label_pc_10005a04, label %dec_label_pc_10005898

dec_label_pc_10005898:                            ; preds = %dec_label_pc_10005a04, %dec_label_pc_10005778, %dec_label_pc_10005a14
  %v0_10005898 = call i32 @function_10005f3c()
  %v2_1000589c = ptrtoint i32* %stack_var_-1584 to i32
  store i32 %v2_1000589c, i32* @r27, align 4
  store i32 %v0_10005898, i32* %r29.global-to-local, align 4
  %v0_100058a4 = load i32, i32* @r31, align 4
  %v1_100058a4 = inttoptr i32 %v0_100058a4 to i32*
  %v2_100058a4 = load i32, i32* %v1_100058a4, align 4
  %v2_100058a8 = ptrtoint i16* %stack_var_-1624 to i32
  store i32 %v2_100058a8, i32* @r30, align 4
  store i32 0, i32* @r26, align 4
  store i32 268458164, i32* @lr, align 4
  %v1_100058b0 = inttoptr i32 %v2_100058a4 to i8*
  %v2_100058b0 = call i32 @function_100088dc(i8* %v1_100058b0)
  store i32 %v2_100058b0, i32* %r28.global-to-local, align 4
  %v0_100058b8 = load i32, i32* @r31, align 4
  %v1_100058b8 = inttoptr i32 %v0_100058b8 to i32*
  %v2_100058b8 = load i32, i32* %v1_100058b8, align 4
  %v1_100058bc = sub i32 20, %v2_100058b0
  store i32 %v1_100058bc, i32* @r28, align 4
  store i32 268458180, i32* @lr, align 4
  %v1_100058c0 = inttoptr i32 %v2_100058b8 to i8*
  %v2_100058c0 = call i32 @function_100088dc(i8* %v1_100058c0)
  %v0_100058c4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100058c4 = load i32, i32* @r28, align 4
  %v2_100058c4 = urem i32 %v0_100058c4, %v1_100058c4
  %v2_100058c8 = sub i32 %v0_100058c4, %v2_100058c4
  store i32 %v2_100058c8, i32* %r0.global-to-local, align 4
  %v2_100058d0 = add i32 %v2_100058c4, %v2_100058c0
  %v0_100058dc = load i32, i32* @r30, align 4
  %v2_100058dc = add i32 %v0_100058dc, %v2_100058d0
  store i32 %v2_100058dc, i32* @r29, align 4
  store i32 268458212, i32* @lr, align 4
  %v2_100058e0 = bitcast i32* %stack_var_-1584 to i8*
  %v3_100058e0 = call i32 @function_10005ffc(i8* %v2_100058e0, i32 %v2_100058d0)
  %v0_100058e4 = load i32, i32* @r31, align 4
  %v1_100058e4 = inttoptr i32 %v0_100058e4 to i32*
  %v2_100058e4 = load i32, i32* %v1_100058e4, align 4
  store i32 %v2_100058e4, i32* @r3, align 4
  %v0_100058e8 = load i32, i32* @r26, align 4
  %v1_100058e8 = trunc i32 %v0_100058e8 to i8
  %v2_100058e8 = load i32, i32* @r29, align 4
  %v3_100058e8 = add i32 %v2_100058e8, 40
  %v4_100058e8 = inttoptr i32 %v3_100058e8 to i8*
  store i8 %v1_100058e8, i8* %v4_100058e8, align 1
  %v2_100058f0 = inttoptr i32 %v2_100058e4 to i8*
  %v3_100058f0 = call i32 @function_10008904(i8* %v2_100058f0, i32 %v2_1000589c)
  store i32 32, i32* @r4, align 4
  store i32 %v2_1000589c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10005900.93 to i32), i32* @lr, align 4
  %v0_100058fc = call i32 @function_10008984()
  %v0_10005900 = call i32 @function_10005f3c()
  store i32 %v0_10005900, i32* %r28.global-to-local, align 4
  %v0_10005908 = load i32, i32* @r31, align 4
  %v1_10005908 = inttoptr i32 %v0_10005908 to i32*
  %v2_10005908 = load i32, i32* %v1_10005908, align 4
  store i32 268458256, i32* @lr, align 4
  %v1_1000590c = inttoptr i32 %v2_10005908 to i8*
  %v2_1000590c = call i32 @function_100088dc(i8* %v1_1000590c)
  store i32 %v2_1000590c, i32* %r29.global-to-local, align 4
  %v0_10005914 = load i32, i32* @r31, align 4
  %v1_10005914 = inttoptr i32 %v0_10005914 to i32*
  %v2_10005914 = load i32, i32* %v1_10005914, align 4
  %v1_10005918 = sub i32 20, %v2_1000590c
  store i32 %v1_10005918, i32* @r29, align 4
  store i32 268458272, i32* @lr, align 4
  %v1_1000591c = inttoptr i32 %v2_10005914 to i8*
  %v2_1000591c = call i32 @function_100088dc(i8* %v1_1000591c)
  %v0_10005920 = load i32, i32* %r28.global-to-local, align 4
  %v1_10005920 = load i32, i32* @r29, align 4
  %v2_10005920 = urem i32 %v0_10005920, %v1_10005920
  %v2_10005924 = sub i32 %v0_10005920, %v2_10005920
  store i32 %v2_10005924, i32* %r0.global-to-local, align 4
  %v2_1000592c = add i32 %v2_10005920, %v2_1000591c
  %v0_10005938 = load i32, i32* @r30, align 4
  %v2_10005938 = add i32 %v0_10005938, %v2_1000592c
  store i32 %v2_10005938, i32* @r28, align 4
  store i32 268458304, i32* @lr, align 4
  %v3_1000593c = call i32 @function_10005ffc(i8* %v2_100058e0, i32 %v2_1000592c)
  %v0_10005940 = load i32, i32* @r26, align 4
  %v1_10005940 = trunc i32 %v0_10005940 to i8
  %v2_10005940 = load i32, i32* @r28, align 4
  %v3_10005940 = add i32 %v2_10005940, 40
  %v4_10005940 = inttoptr i32 %v3_10005940 to i8*
  store i8 %v1_10005940, i8* %v4_10005940, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_10005954.94 to i32), i32* @lr, align 4
  %v2_10005950 = call i32 @function_1000928c(i32 15, i32 %v2_1000589c)
  store i32 268458332, i32* @lr, align 4
  %v1_10005958 = call i32 @function_10008278(i32 5)
  %v3_10005964 = call i32 @function_100081c4(i32 5, i32* nonnull %stack_var_-1620)
  %v3_10005968 = load i32, i32* %stack_var_-1620, align 4
  store i32 268458360, i32* @lr, align 4
  %v3_10005974 = call i32 @function_100094fc(i32 1, i32 %v3_10005964, i32 %v3_10005968)
  store i32 ptrtoint ([3 x i8]* @global_var_1000598c.96 to i32), i32* @lr, align 4
  %v3_10005988 = call i32 @function_100094fc(i32 1, i32 ptrtoint (i32* @global_var_1000bad0.95 to i32), i32 1)
  store i32 268458388, i32* @lr, align 4
  %v1_10005990 = call i32 @function_100081ec(i32 5)
  store i32 268458392, i32* @lr, align 4
  %v1_10005994 = call i32 @function_1000072c(i32 %v1_10005990)
  store i32 268458396, i32* @lr, align 4
  %v1_10005998 = call i32 @function_10004b18(i32 %v1_10005994)
  store i32 ptrtoint (i32* @global_var_100059a0.97 to i32), i32* @lr, align 4
  %v1_1000599c = call i32 @function_1000569c(i32 %v1_10005998)
  store i32 268458404, i32* @lr, align 4
  %v0_100059a0 = call i32 @function_100090e4()
  %tmp48 = icmp slt i32 %v0_100059a0, 1
  br i1 %tmp48, label %dec_label_pc_10005a3c, label %dec_label_pc_100059ac

dec_label_pc_100059ac:                            ; preds = %dec_label_pc_10005898
  store i32 %v0_10005794, i32* %r0.global-to-local, align 4
  store i32 %v0_100057e0, i32* %r15.global-to-local, align 4
  store i32 %v0_100057e4, i32* %r16.global-to-local, align 4
  store i32 %v0_100057e8, i32* %r17.global-to-local, align 4
  store i32 %v0_100057ec, i32* %r18.global-to-local, align 4
  store i32 %v0_100057f0, i32* %r19.global-to-local, align 4
  store i32 %v0_100057f4, i32* @r20, align 4
  store i32 %v0_100057b4, i32* @r21, align 4
  store i32 %v0_100057c0, i32* @r22, align 4
  store i32 %v0_100057f8, i32* @r23, align 4
  store i32 %v0_100057c8, i32* @r24, align 4
  store i32 %v0_100057d0, i32* @r25, align 4
  store i32 %v0_10005800, i32* @r27, align 4
  store i32 %v0_100057a0, i32* @r28, align 4
  store i32 %v0_10005798, i32* @r29, align 4
  store i32 %v0_10005804, i32* @r30, align 4
  store i32 %v0_100057d8, i32* @r31, align 4
  ret i32 0

dec_label_pc_10005a04:                            ; preds = %dec_label_pc_10005778
  %v0_10005a04 = load i32, i32* @r31, align 4
  %v1_10005a04 = add i32 %v0_10005a04, 4
  %v2_10005a04 = inttoptr i32 %v1_10005a04 to i32*
  %v3_10005a04 = load i32, i32* %v2_10005a04, align 4
  store i32 268458508, i32* @lr, align 4
  %v1_10005a08 = inttoptr i32 %v3_10005a04 to i8*
  %v2_10005a08 = call i32 @function_100088dc(i8* %v1_10005a08)
  %v2_10005a0c = icmp sgt i32 %v2_10005a08, 31
  br i1 %v2_10005a0c, label %dec_label_pc_10005898, label %dec_label_pc_10005a14

dec_label_pc_10005a14:                            ; preds = %dec_label_pc_10005a04
  %v0_10005a14 = load i32, i32* @r31, align 4
  %v1_10005a14 = add i32 %v0_10005a14, 4
  %v2_10005a14 = inttoptr i32 %v1_10005a14 to i32*
  %v3_10005a14 = load i32, i32* %v2_10005a14, align 4
  store i32 %v2_100057cc, i32* @r3, align 4
  %v2_10005a1c = bitcast i32* %stack_var_-1552 to i8*
  %v3_10005a1c = call i32 @function_10008904(i8* %v2_10005a1c, i32 %v3_10005a14)
  %v0_10005a20 = load i32, i32* @r31, align 4
  %v1_10005a20 = add i32 %v0_10005a20, 4
  %v2_10005a20 = inttoptr i32 %v1_10005a20 to i32*
  %v3_10005a20 = load i32, i32* %v2_10005a20, align 4
  store i32 %v3_10005a20, i32* %r29.global-to-local, align 4
  store i32 268458540, i32* @lr, align 4
  %v1_10005a28 = inttoptr i32 %v3_10005a20 to i8*
  %v2_10005a28 = call i32 @function_100088dc(i8* %v1_10005a28)
  store i32 %v2_10005a28, i32* @r4, align 4
  store i32 %v3_10005a20, i32* @r3, align 4
  store i32 268458552, i32* @lr, align 4
  %v0_10005a34 = call i32 @function_10008984()
  br label %dec_label_pc_10005898

dec_label_pc_10005a3c:                            ; preds = %dec_label_pc_10005898
  store i32 ptrtoint ([3 x i8]* @global_var_10005a40.98 to i32), i32* @lr, align 4
  %v1_10005a3c = call i32 @function_100093ac(i32 %v0_100059a0)
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 %v1_10005a3c, i32* %r17.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005a50.99 to i32), i32* @lr, align 4
  %v0_10005a4c = call i32 @function_1000909c()
  store i32 ptrtoint ([3 x i8]* @global_var_10005a58.100 to i32), i32* @lr, align 4
  %v0_10005a54 = call i32 @function_1000909c()
  store i32 268458592, i32* @lr, align 4
  %v0_10005a5c = call i32 @function_1000909c()
  %v2_10005a60 = ptrtoint i32* %stack_var_-1392 to i32
  store i32 %v2_10005a60, i32* @r28, align 4
  store i32 268458600, i32* @lr, align 4
  %v1_10005a64 = call i32 @function_1000072c(i32 %v0_10005a5c)
  %v2_10005a68 = ptrtoint i32* %stack_var_-1264 to i32
  store i32 %v2_10005a68, i32* @r29, align 4
  store i32 268458608, i32* @lr, align 4
  %v1_10005a6c = call i32 @function_10004b18(i32 %v1_10005a64)
  store i32 268566528, i32* @r20, align 4
  store i32 268458616, i32* @lr, align 4
  %v1_10005a74 = call i32 @function_1000569c(i32 %v1_10005a6c)
  store i32 268566528, i32* @r26, align 4
  store i32 268458624, i32* @lr, align 4
  %v1_10005a7c = call i32 @function_10006a40(i32 %v1_10005a74)
  store i32 268566528, i32* %r18.global-to-local, align 4
  %v2_10005a84 = ptrtoint i32* %stack_var_-1608 to i32
  store i32 %v2_10005a84, i32* %r15.global-to-local, align 4
  %v2_10005a88 = ptrtoint i32* %stack_var_-1616 to i32
  store i32 %v2_10005a88, i32* %r16.global-to-local, align 4
  %v2_10005ec0 = ptrtoint i32* %stack_var_-1136 to i32
  %v2_10005d80 = ptrtoint i32* %stack_var_-1612 to i32
  %v1_10005e18 = bitcast i32* %stack_var_-1552 to i8*
  %v2_10005ddc = ptrtoint i32* %stack_var_-1600 to i32
  br label %dec_label_pc_10005a8c

dec_label_pc_10005a8c:                            ; preds = %dec_label_pc_10005ee4, %dec_label_pc_10005e80, %dec_label_pc_10005e74, %dec_label_pc_10005e14, %dec_label_pc_10005c64, %dec_label_pc_10005c54, %dec_label_pc_10005b44, %dec_label_pc_10005f24, %dec_label_pc_10005f18, %dec_label_pc_10005e98, %dec_label_pc_10005e60, %dec_label_pc_10005d9c, %dec_label_pc_10005cc8, %dec_label_pc_10005c18, %dec_label_pc_10005a3c
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10005a9c50 = load i32, i32* @r28, align 4
  %v4_10005a9c52 = inttoptr i32 %v2_10005a9c50 to i32*
  store i32 0, i32* %v4_10005a9c52, align 4
  %v0_10005aa053 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005aa054 = add i32 %v0_10005aa053, 4
  store i32 %v1_10005aa054, i32* %r9.global-to-local, align 4
  %v0_10005aa455 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005aa456 = add i32 %v0_10005aa455, -1
  store i32 %v1_10005aa456, i32* %ctr.global-to-local, align 4
  %v2_10005aa457 = icmp eq i32 %v1_10005aa456, 0
  br i1 %v2_10005aa457, label %dec_label_pc_10005aa8, label %dec_label_pc_10005a9c.dec_label_pc_10005a9c_crit_edge

dec_label_pc_10005a9c.dec_label_pc_10005a9c_crit_edge: ; preds = %dec_label_pc_10005a8c, %dec_label_pc_10005a9c.dec_label_pc_10005a9c_crit_edge
  %v1_10005aa058 = phi i32 [ %v1_10005aa0, %dec_label_pc_10005a9c.dec_label_pc_10005a9c_crit_edge ], [ %v1_10005aa054, %dec_label_pc_10005a8c ]
  %v0_10005a9c.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10005a9c = load i32, i32* @r28, align 4
  %v3_10005a9c = add i32 %v2_10005a9c, %v1_10005aa058
  %v4_10005a9c = inttoptr i32 %v3_10005a9c to i32*
  store i32 %v0_10005a9c.pre, i32* %v4_10005a9c, align 4
  %v0_10005aa0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005aa0 = add i32 %v0_10005aa0, 4
  store i32 %v1_10005aa0, i32* %r9.global-to-local, align 4
  %v0_10005aa4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005aa4 = add i32 %v0_10005aa4, -1
  store i32 %v1_10005aa4, i32* %ctr.global-to-local, align 4
  %v2_10005aa4 = icmp eq i32 %v1_10005aa4, 0
  br i1 %v2_10005aa4, label %dec_label_pc_10005aa8, label %dec_label_pc_10005a9c.dec_label_pc_10005a9c_crit_edge

dec_label_pc_10005aa8:                            ; preds = %dec_label_pc_10005a9c.dec_label_pc_10005a9c_crit_edge, %dec_label_pc_10005a8c
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10005ab859 = load i32, i32* @r29, align 4
  %v4_10005ab861 = inttoptr i32 %v2_10005ab859 to i32*
  store i32 0, i32* %v4_10005ab861, align 4
  %v0_10005abc62 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005abc63 = add i32 %v0_10005abc62, 4
  store i32 %v1_10005abc63, i32* %r9.global-to-local, align 4
  %v0_10005ac064 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005ac065 = add i32 %v0_10005ac064, -1
  store i32 %v1_10005ac065, i32* %ctr.global-to-local, align 4
  %v2_10005ac066 = icmp eq i32 %v1_10005ac065, 0
  br i1 %v2_10005ac066, label %dec_label_pc_10005ac4, label %dec_label_pc_10005ab8.dec_label_pc_10005ab8_crit_edge

dec_label_pc_10005ab8.dec_label_pc_10005ab8_crit_edge: ; preds = %dec_label_pc_10005aa8, %dec_label_pc_10005ab8.dec_label_pc_10005ab8_crit_edge
  %v1_10005abc67 = phi i32 [ %v1_10005abc, %dec_label_pc_10005ab8.dec_label_pc_10005ab8_crit_edge ], [ %v1_10005abc63, %dec_label_pc_10005aa8 ]
  %v0_10005ab8.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10005ab8 = load i32, i32* @r29, align 4
  %v3_10005ab8 = add i32 %v2_10005ab8, %v1_10005abc67
  %v4_10005ab8 = inttoptr i32 %v3_10005ab8 to i32*
  store i32 %v0_10005ab8.pre, i32* %v4_10005ab8, align 4
  %v0_10005abc = load i32, i32* %r9.global-to-local, align 4
  %v1_10005abc = add i32 %v0_10005abc, 4
  store i32 %v1_10005abc, i32* %r9.global-to-local, align 4
  %v0_10005ac0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005ac0 = add i32 %v0_10005ac0, -1
  store i32 %v1_10005ac0, i32* %ctr.global-to-local, align 4
  %v2_10005ac0 = icmp eq i32 %v1_10005ac0, 0
  br i1 %v2_10005ac0, label %dec_label_pc_10005ac4, label %dec_label_pc_10005ab8.dec_label_pc_10005ab8_crit_edge

dec_label_pc_10005ac4:                            ; preds = %dec_label_pc_10005ab8.dec_label_pc_10005ab8_crit_edge, %dec_label_pc_10005aa8
  %v3_10005ac4 = load i32, i32* @global_var_1001c1e0.75, align 4
  %v3_10005ac8 = icmp eq i32 %v3_10005ac4, -1
  br i1 %v3_10005ac8, label %dec_label_pc_10005af0, label %dec_label_pc_10005ad0

dec_label_pc_10005ad0:                            ; preds = %dec_label_pc_10005ac4
  %v1_10005ad0 = call i32 @__asm_rlwinm(i32 %v3_10005ac4, i32 29, i32 3, i32 29)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10005ad8 = load i32, i32* @r30, align 4
  %v2_10005ad8 = add i32 %v1_10005ad8, %v1_10005ad0
  %v1_10005adc = urem i32 %v3_10005ac4, 32
  %v1_10005ae0 = add i32 %v2_10005ad8, 232
  %v2_10005ae0 = inttoptr i32 %v1_10005ae0 to i32*
  %v3_10005ae0 = load i32, i32* %v2_10005ae0, align 4
  %v3_10005ae4 = shl i32 1, %v1_10005adc
  store i32 %v3_10005ae4, i32* %r0.global-to-local, align 4
  %v2_10005ae8 = or i32 %v3_10005ae0, %v3_10005ae4
  store i32 %v2_10005ae8, i32* %r9.global-to-local, align 4
  store i32 %v2_10005ae8, i32* %v2_10005ae0, align 4
  br label %dec_label_pc_10005af0

dec_label_pc_10005af0:                            ; preds = %dec_label_pc_10005ac4, %dec_label_pc_10005ad0
  %v3_10005af0 = load i32, i32* @global_var_1001c1e4.101, align 4
  store i32 %v3_10005af0, i32* %r0.global-to-local, align 4
  %v3_10005af8 = icmp eq i32 %v3_10005af0, -1
  br i1 %v3_10005af8, label %dec_label_pc_10005cdc, label %dec_label_pc_10005b00

dec_label_pc_10005b00:                            ; preds = %dec_label_pc_10005cdc, %dec_label_pc_10005af0, %dec_label_pc_10005d34
  %v3_10005c2c = phi i32 [ -1, %dec_label_pc_10005cdc ], [ %v3_10005af0, %dec_label_pc_10005af0 ], [ %v3_10005c2c.pre, %dec_label_pc_10005d34 ]
  %v3_10005b00 = load i8, i8* bitcast (i16* @global_var_1001c21c.102 to i8*), align 2
  %v3_10005b04 = icmp eq i8 %v3_10005b00, 0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10005c34 = call i32 @__asm_rlwinm(i32 %v3_10005c2c, i32 29, i32 3, i32 29)
  %v1_10005c38 = urem i32 %v3_10005c2c, 32
  %v1_10005c3c = load i32, i32* @r30, align 4
  %v2_10005c3c = add i32 %v1_10005c3c, %v1_10005c34
  %v0_10005c40 = load i32, i32* %r0.global-to-local, align 4
  %v3_10005c40 = shl i32 %v0_10005c40, %v1_10005c38
  store i32 %v3_10005c40, i32* %r0.global-to-local, align 4
  br i1 %v3_10005b04, label %dec_label_pc_10005c2c, label %dec_label_pc_10005b0c

dec_label_pc_10005b0c:                            ; preds = %dec_label_pc_10005b00
  %v1_10005b24 = add i32 %v2_10005c3c, 360
  %v2_10005b24 = inttoptr i32 %v1_10005b24 to i32*
  %v3_10005b24 = load i32, i32* %v2_10005b24, align 4
  %v2_10005b28 = or i32 %v3_10005b24, %v3_10005c40
  store i32 %v2_10005b28, i32* %r9.global-to-local, align 4
  store i32 %v2_10005b28, i32* %v2_10005b24, align 4
  br label %dec_label_pc_10005b30

dec_label_pc_10005b30:                            ; preds = %dec_label_pc_10005c2c, %dec_label_pc_10005b0c
  %v3_10005b30 = load i32, i32* @global_var_1001c1e4.101, align 4
  store i32 %v3_10005b30, i32* %r0.global-to-local, align 4
  %v3_10005b34 = load i32, i32* @global_var_1001c1e0.75, align 4
  %v2_10005b38 = icmp slt i32 %v3_10005b34, %v3_10005b30
  br i1 %v2_10005b38, label %dec_label_pc_10005b40, label %dec_label_pc_10005b44

dec_label_pc_10005b40:                            ; preds = %dec_label_pc_10005b30
  br label %dec_label_pc_10005b44

dec_label_pc_10005b44:                            ; preds = %dec_label_pc_10005b30, %dec_label_pc_10005b40
  %v0_10005b4c = phi i32 [ %v3_10005b34, %dec_label_pc_10005b30 ], [ %v3_10005b30, %dec_label_pc_10005b40 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10005b4c = add i32 %v0_10005b4c, 1
  store i32 10, i32* %stack_var_-1608, align 4
  store i32 268458860, i32* @lr, align 4
  %v5_10005b68 = call i32 @function_10009364(i32 %v1_10005b4c, i32 %v2_10005a60, i32 %v2_10005a68, i32 0, i32 %v2_10005a84)
  %v6_10005b68 = trunc i32 %v5_10005b68 to i16
  %v4_10005b6c = icmp eq i16 %v6_10005b68, -1
  br i1 %v4_10005b6c, label %dec_label_pc_10005a8c, label %dec_label_pc_10005b74

dec_label_pc_10005b74:                            ; preds = %dec_label_pc_10005b44
  %v4_10005b74 = icmp eq i16 %v6_10005b68, 0
  br i1 %v4_10005b74, label %dec_label_pc_10005b7c, label %dec_label_pc_10005ba8

dec_label_pc_10005b7c:                            ; preds = %dec_label_pc_10005b74
  %v0_10005b80 = load i32, i32* %r19.global-to-local, align 4
  store i16 0, i16* %stack_var_-1624, align 2
  %v2_10005b90 = srem i32 %v0_10005b80, 6
  %v1_10005b94 = sub i32 %v0_10005b80, %v2_10005b90
  store i32 %v1_10005b94, i32* %r9.global-to-local, align 4
  store i32 %v2_10005b90, i32* %r0.global-to-local, align 4
  %v1_10005b9c = add i32 %v0_10005b80, 1
  store i32 %v1_10005b9c, i32* %r19.global-to-local, align 4
  %v3_10005ba0 = icmp eq i32 %v2_10005b90, 0
  br i1 %v3_10005ba0, label %dec_label_pc_10005d50, label %dec_label_pc_10005ba8

dec_label_pc_10005ba8:                            ; preds = %dec_label_pc_10005b74, %dec_label_pc_10005b7c, %dec_label_pc_10005d50
  %v3_10005ba8 = load i32, i32* @global_var_1001c1e0.75, align 4
  %v3_10005bac = icmp eq i32 %v3_10005ba8, -1
  br i1 %v3_10005bac, label %dec_label_pc_10005bd0, label %dec_label_pc_10005bb4

dec_label_pc_10005bb4:                            ; preds = %dec_label_pc_10005ba8
  %v1_10005bb4 = call i32 @__asm_rlwinm(i32 %v3_10005ba8, i32 29, i32 3, i32 29)
  %v1_10005bb8 = urem i32 %v3_10005ba8, 32
  %v1_10005bbc = load i32, i32* @r30, align 4
  %v2_10005bbc = add i32 %v1_10005bbc, %v1_10005bb4
  store i32 %v2_10005bbc, i32* %r9.global-to-local, align 4
  %v1_10005bc0 = add i32 %v2_10005bbc, 232
  %v2_10005bc0 = inttoptr i32 %v1_10005bc0 to i32*
  %v3_10005bc0 = load i32, i32* %v2_10005bc0, align 4
  %v3_10005bc4 = lshr i32 %v3_10005bc0, %v1_10005bb8
  store i32 %v3_10005bc4, i32* %r0.global-to-local, align 4
  %v1_10005bc8 = urem i32 %v3_10005bc4, 2
  store i32 %v1_10005bc8, i32* %r9.global-to-local, align 4
  %v3_10005bc8 = icmp eq i32 %v1_10005bc8, 0
  br i1 %v3_10005bc8, label %dec_label_pc_10005bd0, label %dec_label_pc_10005dd4

dec_label_pc_10005bd0:                            ; preds = %dec_label_pc_10005bb4, %dec_label_pc_10005ba8
  %v3_10005bd0 = load i8, i8* bitcast (i16* @global_var_1001c21c.102 to i8*), align 2
  %v4_10005bd0 = zext i8 %v3_10005bd0 to i32
  store i32 %v4_10005bd0, i32* @r31, align 4
  %v3_10005bd4 = icmp eq i8 %v3_10005bd0, 0
  %v3_10005c54 = load i32, i32* @global_var_1001c1e4.101, align 4
  br i1 %v3_10005bd4, label %dec_label_pc_10005c54, label %dec_label_pc_10005bdc

dec_label_pc_10005bdc:                            ; preds = %dec_label_pc_10005bd0
  store i32 268566528, i32* @r31, align 4
  %v1_10005be4 = call i32 @__asm_rlwinm(i32 %v3_10005c54, i32 29, i32 3, i32 29)
  %v1_10005be8 = urem i32 %v3_10005c54, 32
  %v1_10005bec = load i32, i32* @r30, align 4
  %v2_10005bec = add i32 %v1_10005bec, %v1_10005be4
  store i32 %v2_10005bec, i32* %r9.global-to-local, align 4
  %v1_10005bf0 = add i32 %v2_10005bec, 360
  %v2_10005bf0 = inttoptr i32 %v1_10005bf0 to i32*
  %v3_10005bf0 = load i32, i32* %v2_10005bf0, align 4
  %v3_10005bf4 = lshr i32 %v3_10005bf0, %v1_10005be8
  store i32 %v3_10005bf4, i32* %r0.global-to-local, align 4
  %v1_10005bfc = urem i32 %v3_10005bf4, 2
  %v3_10005bfc = icmp eq i32 %v1_10005bfc, 0
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i8 0, i8* bitcast (i16* @global_var_1001c21c.102 to i8*), align 2
  br i1 %v3_10005bfc, label %dec_label_pc_10005c0c, label %dec_label_pc_10005d6c

dec_label_pc_10005c0c:                            ; preds = %dec_label_pc_10005bdc
  %v3_10005c0c = icmp eq i32 %v3_10005c54, -1
  br i1 %v3_10005c0c, label %dec_label_pc_10005c18, label %dec_label_pc_10005c14

dec_label_pc_10005c14:                            ; preds = %dec_label_pc_10005c0c
  store i32 ptrtoint (i32* @global_var_10005c18.103 to i32), i32* @lr, align 4
  %v0_10005c14 = call i32 @function_1000909c()
  br label %dec_label_pc_10005c18

dec_label_pc_10005c18:                            ; preds = %dec_label_pc_10005c0c, %dec_label_pc_10005c14
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c1e4.101, align 4
  store i32 268459048, i32* @lr, align 4
  %v1_10005c24 = call i32 @function_1000a8e4(i32 1)
  br label %dec_label_pc_10005a8c

dec_label_pc_10005c2c:                            ; preds = %dec_label_pc_10005b00
  %v1_10005c44 = add i32 %v2_10005c3c, 232
  %v2_10005c44 = inttoptr i32 %v1_10005c44 to i32*
  %v3_10005c44 = load i32, i32* %v2_10005c44, align 4
  %v2_10005c48 = or i32 %v3_10005c44, %v3_10005c40
  store i32 %v2_10005c48, i32* %r9.global-to-local, align 4
  store i32 %v2_10005c48, i32* %v2_10005c44, align 4
  br label %dec_label_pc_10005b30

dec_label_pc_10005c54:                            ; preds = %dec_label_pc_10005bd0
  store i32 268566528, i32* @r27, align 4
  %v3_10005c5c = icmp eq i32 %v3_10005c54, -1
  br i1 %v3_10005c5c, label %dec_label_pc_10005a8c, label %dec_label_pc_10005c64

dec_label_pc_10005c64:                            ; preds = %dec_label_pc_10005c54
  %v1_10005c64 = call i32 @__asm_rlwinm(i32 %v3_10005c54, i32 29, i32 3, i32 29)
  %v1_10005c68 = urem i32 %v3_10005c54, 32
  %v1_10005c6c = load i32, i32* @r30, align 4
  %v2_10005c6c = add i32 %v1_10005c6c, %v1_10005c64
  store i32 %v2_10005c6c, i32* %r9.global-to-local, align 4
  %v1_10005c70 = add i32 %v2_10005c6c, 232
  %v2_10005c70 = inttoptr i32 %v1_10005c70 to i32*
  %v3_10005c70 = load i32, i32* %v2_10005c70, align 4
  %v3_10005c74 = lshr i32 %v3_10005c70, %v1_10005c68
  store i32 %v3_10005c74, i32* %r0.global-to-local, align 4
  %v1_10005c78 = urem i32 %v3_10005c74, 2
  store i32 %v1_10005c78, i32* %r9.global-to-local, align 4
  %v3_10005c78 = icmp eq i32 %v1_10005c78, 0
  br i1 %v3_10005c78, label %dec_label_pc_10005a8c, label %dec_label_pc_10005c80

dec_label_pc_10005c80:                            ; preds = %dec_label_pc_10005c64
  %v0_10005c80 = load i32, i32* @r31, align 4
  %v6_10005c80 = trunc i32 %v0_10005c80 to i16
  store i16 %v6_10005c80, i16* %stack_var_-1624, align 2
  %v0_10005c84 = call i32 @function_100097b8()
  %v0_10005c88 = load i32, i32* @r31, align 4
  %v2_10005c88 = inttoptr i32 %v0_10005c84 to i32*
  store i32 %v0_10005c88, i32* %v2_10005c88, align 4
  store i32 %v0_10005c84, i32* @r23, align 4
  %v3_10005c98 = load i32, i32* @global_var_1001c1e4.101, align 4
  store i32 268459172, i32* @lr, align 4
  %v4_10005ca0 = call i32 @function_10009cc0(i32 %v3_10005c98, i32 %v2_100058a8, i32 2, i32 16386)
  %v3_10005ca4 = icmp eq i32 %v4_10005ca0, -1
  br i1 %v3_10005ca4, label %dec_label_pc_10005e74, label %dec_label_pc_10005cac

dec_label_pc_10005cac:                            ; preds = %dec_label_pc_10005c80
  %v3_10005cac = icmp eq i32 %v4_10005ca0, 0
  br i1 %v3_10005cac, label %dec_label_pc_10005e88, label %dec_label_pc_10005cb4

dec_label_pc_10005cb4:                            ; preds = %dec_label_pc_10005cac
  %v3_10005cb4 = load i16, i16* %stack_var_-1624, align 2
  %v4_10005cb4 = sext i16 %v3_10005cb4 to i32
  %v4_10005cb8 = icmp eq i16 %v3_10005cb4, 0
  br i1 %v4_10005cb8, label %dec_label_pc_10005f24, label %dec_label_pc_10005cc0

dec_label_pc_10005cc0:                            ; preds = %dec_label_pc_10005cb4
  %tmp49 = icmp ult i16 %v3_10005cb4, 1025
  br i1 %tmp49, label %dec_label_pc_10005ebc, label %dec_label_pc_10005cc8

dec_label_pc_10005cc8:                            ; preds = %dec_label_pc_10005cc0
  store i32 ptrtoint (i32* @global_var_10005cd0.104 to i32), i32* @lr, align 4
  %v0_10005ccc = call i32 @function_1000909c()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c1e4.101, align 4
  br label %dec_label_pc_10005a8c

dec_label_pc_10005cdc:                            ; preds = %dec_label_pc_10005af0
  store i32 268459244, i32* @lr, align 4
  %v3_10005ce8 = call i32 @function_10009dec(i32 2, i32 1, i32 0)
  %v3_10005cec = icmp eq i32 %v3_10005ce8, -1
  store i32 %v3_10005ce8, i32* @r31, align 4
  store i32 %v3_10005ce8, i32* @global_var_1001c1e4.101, align 4
  br i1 %v3_10005cec, label %dec_label_pc_10005b00, label %dec_label_pc_10005cfc

dec_label_pc_10005cfc:                            ; preds = %dec_label_pc_10005cdc
  store i32 3, i32* @r4, align 4
  store i32 268459276, i32* @lr, align 4
  %v1_10005d08 = call i32 @function_10008fb4(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10005d14 = load i32, i32* @r31, align 4
  store i32 268459296, i32* @lr, align 4
  %v2_10005d1c = call i32 @function_10008fb4(i32 %v0_10005d14)
  %v3_10005d20 = load i32, i32* @global_var_1001c1e8.74, align 4
  store i32 %v3_10005d20, i32* %r0.global-to-local, align 4
  %v3_10005d24 = icmp eq i32 %v3_10005d20, 0
  br i1 %v3_10005d24, label %dec_label_pc_10005d34, label %dec_label_pc_10005d2c

dec_label_pc_10005d2c:                            ; preds = %dec_label_pc_10005cfc
  store i32 %v3_10005d20, i32* %ctr.global-to-local, align 4
  store i32 268459316, i32* @lr, align 4
  %v2_10005d30 = call i32 @function_10008be0(i32 %v2_10005d1c)
  br label %dec_label_pc_10005d34

dec_label_pc_10005d34:                            ; preds = %dec_label_pc_10005cfc, %dec_label_pc_10005d2c
  %v3_10005d34 = load i32, i32* @global_var_1001c1e4.101, align 4
  store i32 %v3_10005d34, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i8 1, i8* bitcast (i16* @global_var_1001c21c.102 to i8*), align 2
  store i32 268459340, i32* @lr, align 4
  %v0_10005d48 = call i32 @function_10009bec()
  %v3_10005c2c.pre = load i32, i32* @global_var_1001c1e4.101, align 4
  br label %dec_label_pc_10005b00

dec_label_pc_10005d50:                            ; preds = %dec_label_pc_10005b7c
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005d58 = load i32, i32* @global_var_1001c1e4.101, align 4
  store i32 268459368, i32* @lr, align 4
  %v4_10005d64 = call i32 @function_10009d38(i32 %v3_10005d58, i32 %v2_100058a8, i32 2, i32 16384)
  br label %dec_label_pc_10005ba8

dec_label_pc_10005d6c:                            ; preds = %dec_label_pc_10005bdc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-1616, align 4
  store i32 4, i32* %stack_var_-1612, align 4
  store i32 268459408, i32* @lr, align 4
  %v5_10005d8c = call i32 @function_10009c54(i32 1, i32 4, i32 %v2_10005a88, i32 %v2_10005d80, i32 4)
  %v3_10005d90 = load i32, i32* %stack_var_-1616, align 4
  store i32 %v3_10005d90, i32* %r0.global-to-local, align 4
  %v3_10005d94 = icmp eq i32 %v3_10005d90, 0
  br i1 %v3_10005d94, label %dec_label_pc_10005e14, label %dec_label_pc_10005d9c

dec_label_pc_10005d9c:                            ; preds = %dec_label_pc_10005d6c
  store i32 ptrtoint (i32* @global_var_10005da4.105 to i32), i32* @lr, align 4
  %v0_10005da0 = call i32 @function_1000909c()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c1e4.101, align 4
  %v0_10005dac = call i32 @function_10005f3c()
  %v1_10005dac = sext i32 %v0_10005dac to i64
  %v5_10005db8 = mul nuw nsw i64 %v1_10005dac, 3435973837
  %v1_10005dbc2 = udiv i64 %v5_10005db8, 34359738368
  %v1_10005dbc = trunc i64 %v1_10005dbc2 to i32
  %v1_10005dc0 = mul i32 %v1_10005dbc, 10
  store i32 %v1_10005dc0, i32* %r0.global-to-local, align 4
  %v3_10005dc4 = sub i32 %v0_10005dac, %v1_10005dc0
  %v1_10005dc8 = add i32 %v3_10005dc4, 1
  store i32 268459472, i32* @lr, align 4
  %v1_10005dcc = call i32 @function_1000a8e4(i32 %v1_10005dc8)
  br label %dec_label_pc_10005a8c

dec_label_pc_10005dd4:                            ; preds = %dec_label_pc_10005bb4
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 16, i32* %stack_var_-1616, align 4
  store i32 ptrtoint (i32* @global_var_10005de8.107 to i32), i32* @lr, align 4
  %v3_10005de4 = call i32 @function_10009b84(i32 %v2_10005ddc, i32 %v2_10005a88, i32 %v1_10005bc8)
  store i32 268459500, i32* @lr, align 4
  %v1_10005de8 = call i32 @function_1000677c(i32 %v3_10005de4)
  store i32 ptrtoint ([3 x i8]* @global_var_10005df0.108 to i32), i32* @lr, align 4
  %v1_10005dec = call i32 @function_100044e8(i32 %v1_10005de8)
  %v0_10005df0 = load i32, i32* %r17.global-to-local, align 4
  %v1_10005df0 = sub i32 0, %v0_10005df0
  store i32 268459516, i32* @lr, align 4
  %v2_10005df8 = call i32 @function_100091bc(i32 %v1_10005df0, i32 9)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005e00 = load i32, i32* @global_var_1001c218.85, align 4
  %v3_10005e04 = icmp eq i32 %v3_10005e00, 0
  br i1 %v3_10005e04, label %dec_label_pc_10005e0c, label %dec_label_pc_10005eb0

dec_label_pc_10005e0c:                            ; preds = %dec_label_pc_10005dd4, %dec_label_pc_10005eb0
  %v0_10005e10 = call i32 @function_1000a860()
  br label %dec_label_pc_10005e14

dec_label_pc_10005e14:                            ; preds = %dec_label_pc_10005d6c, %dec_label_pc_10005e0c
  store i32 268459548, i32* @lr, align 4
  %v2_10005e18 = call i32 @function_100088dc(i8* %v1_10005e18)
  %v3_10005e18 = trunc i32 %v2_10005e18 to i8
  %v7_10005e1c = sext i8 %v3_10005e18 to i16
  store i16 %v7_10005e1c, i16* %stack_var_-1624, align 2
  store i32 268459556, i32* @lr, align 4
  %v2_10005e20 = call i32 @function_10008be0(i32 %v2_10005e18)
  store i32 %v2_10005e20, i32* @global_var_1001c208.14, align 4
  %v0_10005e2c = load i32, i32* @r31, align 4
  %v1_10005e2c = add i32 %v0_10005e2c, -15900
  %v2_10005e2c = inttoptr i32 %v1_10005e2c to i32*
  %v3_10005e2c = load i32, i32* %v2_10005e2c, align 4
  store i32 268459584, i32* @lr, align 4
  %v4_10005e3c = call i32 @function_10009d38(i32 %v3_10005e2c, i32 ptrtoint (i32* @global_var_1000bad4.109 to i32), i32 4, i32 16384)
  %v0_10005e40 = load i32, i32* @r31, align 4
  %v1_10005e40 = add i32 %v0_10005e40, -15900
  %v2_10005e40 = inttoptr i32 %v1_10005e40 to i32*
  %v3_10005e40 = load i32, i32* %v2_10005e40, align 4
  store i32 268459604, i32* @lr, align 4
  %v4_10005e50 = call i32 @function_10009d38(i32 %v3_10005e40, i32 %v2_100058a8, i32 1, i32 16384)
  %v3_10005e54 = load i16, i16* %stack_var_-1624, align 2
  %v4_10005e58 = icmp eq i16 %v3_10005e54, 0
  br i1 %v4_10005e58, label %dec_label_pc_10005a8c, label %dec_label_pc_10005e60

dec_label_pc_10005e60:                            ; preds = %dec_label_pc_10005e14
  %v4_10005e54 = sext i16 %v3_10005e54 to i32
  %v0_10005e60 = load i32, i32* @r31, align 4
  %v1_10005e60 = add i32 %v0_10005e60, -15900
  %v2_10005e60 = inttoptr i32 %v1_10005e60 to i32*
  %v3_10005e60 = load i32, i32* %v2_10005e60, align 4
  store i32 268459632, i32* @lr, align 4
  %v5_10005e6c = call i32 @function_10009d38(i32 %v3_10005e60, i32 %v2_100057cc, i32 %v4_10005e54, i32 16384)
  br label %dec_label_pc_10005a8c

dec_label_pc_10005e74:                            ; preds = %dec_label_pc_10005ebc, %dec_label_pc_10005c80
  %v0_10005e74 = load i32, i32* @r23, align 4
  %v1_10005e74 = inttoptr i32 %v0_10005e74 to i32*
  %v2_10005e74 = load i32, i32* %v1_10005e74, align 4
  %v3_10005e78 = icmp eq i32 %v2_10005e74, 11
  br i1 %v3_10005e78, label %dec_label_pc_10005a8c, label %dec_label_pc_10005e80

dec_label_pc_10005e80:                            ; preds = %dec_label_pc_10005e74
  %v3_10005e80 = icmp eq i32 %v2_10005e74, 4
  br i1 %v3_10005e80, label %dec_label_pc_10005a8c, label %dec_label_pc_10005e88

dec_label_pc_10005e88:                            ; preds = %dec_label_pc_10005edc, %dec_label_pc_10005e80, %dec_label_pc_10005cac
  %v3_10005e88 = load i32, i32* @global_var_1001c1e4.101, align 4
  %v3_10005e8c = icmp eq i32 %v3_10005e88, -1
  br i1 %v3_10005e8c, label %dec_label_pc_10005e98, label %dec_label_pc_10005e94

dec_label_pc_10005e94:                            ; preds = %dec_label_pc_10005e88
  store i32 ptrtoint (i32* @global_var_10005e98.110 to i32), i32* @lr, align 4
  %v0_10005e94 = call i32 @function_1000909c()
  br label %dec_label_pc_10005e98

dec_label_pc_10005e98:                            ; preds = %dec_label_pc_10005e88, %dec_label_pc_10005e94
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c1e4.101, align 4
  store i32 268459692, i32* @lr, align 4
  %v1_10005ea8 = call i32 @function_1000a8e4(i32 1)
  br label %dec_label_pc_10005a8c

dec_label_pc_10005eb0:                            ; preds = %dec_label_pc_10005dd4
  store i32 268459704, i32* @lr, align 4
  %v2_10005eb4 = call i32 @function_100091bc(i32 %v3_10005e00, i32 9)
  br label %dec_label_pc_10005e0c

dec_label_pc_10005ebc:                            ; preds = %dec_label_pc_10005cc0
  %v0_10005ebc = load i32, i32* @r31, align 4
  %v1_10005ebc = load i32, i32* @r23, align 4
  %v2_10005ebc = inttoptr i32 %v1_10005ebc to i32*
  store i32 %v0_10005ebc, i32* %v2_10005ebc, align 4
  store i32 %v2_10005ec0, i32* @r31, align 4
  %v3_10005ecc = load i32, i32* @global_var_1001c1e4.101, align 4
  store i32 268459732, i32* @lr, align 4
  %v5_10005ed0 = call i32 @function_10009cc0(i32 %v3_10005ecc, i32 %v2_10005ec0, i32 %v4_10005cb4, i32 16386)
  %v3_10005ed4 = icmp eq i32 %v5_10005ed0, -1
  br i1 %v3_10005ed4, label %dec_label_pc_10005e74, label %dec_label_pc_10005edc

dec_label_pc_10005edc:                            ; preds = %dec_label_pc_10005ebc
  %v3_10005edc = icmp eq i32 %v5_10005ed0, 0
  br i1 %v3_10005edc, label %dec_label_pc_10005e88, label %dec_label_pc_10005ee4

dec_label_pc_10005ee4:                            ; preds = %dec_label_pc_10005edc
  %v3_10005ee4 = load i32, i32* @global_var_1001c1e4.101, align 4
  store i32 268459768, i32* @lr, align 4
  %v4_10005ef4 = call i32 @function_10009cc0(i32 %v3_10005ee4, i32 %v2_100058a8, i32 2, i32 16384)
  %v3_10005ef8 = load i32, i32* @global_var_1001c1e4.101, align 4
  %v3_10005efc = load i16, i16* %stack_var_-1624, align 2
  %v4_10005efc = sext i16 %v3_10005efc to i32
  store i32 268459788, i32* @lr, align 4
  %v5_10005f08 = call i32 @function_10009cc0(i32 %v3_10005ef8, i32 %v2_10005ec0, i32 %v4_10005efc, i32 16384)
  %v3_10005f0c = load i16, i16* %stack_var_-1624, align 2
  %v4_10005f10 = icmp eq i16 %v3_10005f0c, 0
  br i1 %v4_10005f10, label %dec_label_pc_10005a8c, label %dec_label_pc_10005f18

dec_label_pc_10005f18:                            ; preds = %dec_label_pc_10005ee4
  %v4_10005f0c = sext i16 %v3_10005f0c to i32
  store i32 268459808, i32* @lr, align 4
  %v3_10005f1c = call i32 @function_10000394(i32 %v2_10005ec0, i32 %v4_10005f0c)
  br label %dec_label_pc_10005a8c

dec_label_pc_10005f24:                            ; preds = %dec_label_pc_10005cb4
  %v3_10005f24 = load i32, i32* @global_var_1001c1e4.101, align 4
  store i32 268459832, i32* @lr, align 4
  %v4_10005f34 = call i32 @function_10009cc0(i32 %v3_10005f24, i32 %v2_100058a8, i32 2, i32 16384)
  br label %dec_label_pc_10005a8c

; uselistorder directives
  uselistorder i16 %v3_10005f0c, { 1, 0 }
  uselistorder i16 %v3_10005e54, { 1, 0 }
  uselistorder i32 %v3_10005ce8, { 1, 0, 2 }
  uselistorder i32 %v1_10005c78, { 1, 0 }
  uselistorder i32 %v3_10005c54, { 0, 2, 5, 3, 1, 4 }
  uselistorder i32 %v1_10005bc8, { 2, 1, 0 }
  uselistorder i32 %v2_10005b90, { 1, 0, 2 }
  uselistorder i32 %v0_10005b80, { 2, 0, 1 }
  uselistorder i32 %v2_10005c3c, { 1, 0 }
  uselistorder i32 %v1_10005ac0, { 1, 0 }
  uselistorder i32 %v1_10005abc, { 1, 0 }
  uselistorder i32 %v1_10005aa4, { 1, 0 }
  uselistorder i32 %v1_10005aa0, { 1, 0 }
  uselistorder i32 %v2_10005ec0, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10005a88, { 1, 0, 2 }
  uselistorder i32 %v2_1000592c, { 1, 0 }
  uselistorder i32 %v2_100058d0, { 1, 0 }
  uselistorder i32 %v2_100058a8, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_10005844, { 1, 0 }
  uselistorder i32 %v2_1000579c, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_10005768, { 1, 2, 0 }
  uselistorder i32 %v0_100056ac, { 3, 1, 0, 2 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-1552, { 1, 0, 2 }
  uselistorder i16* %stack_var_-1624, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-1620, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 19, 18, 14, 20, 21, 23, 22, 13, 24, 25, 26, 27, 12 }
  uselistorder i32* %r18.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r16.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r15.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 20, 21, 10, 11, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 17, 18, 19 }
  uselistorder i32* %ctr.global-to-local, { 0, 4, 3, 2, 5, 6, 8, 7, 1, 9, 10 }
  uselistorder i8* bitcast (i16* @global_var_1001c21c.102 to i8*), { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1001c1e4.101, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 14, 13, 15, 16 }
  uselistorder i32 (i32)* @function_1000569c, { 1, 0 }
  uselistorder i32 (i32)* @function_10004b18, { 1, 0 }
  uselistorder i32 (i32)* @function_1000072c, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100094fc, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_10008904, { 21, 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 (i8*, i32)* @function_10005ffc, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @function_10009e98, { 1, 0 }
  uselistorder i32* @r24, { 1, 2, 3, 5, 6, 4, 7, 0, 8, 9, 10, 11, 12, 13 }
  uselistorder label %dec_label_pc_10005e98, { 1, 0 }
  uselistorder label %dec_label_pc_10005e14, { 1, 0 }
  uselistorder label %dec_label_pc_10005e0c, { 1, 0 }
  uselistorder label %dec_label_pc_10005d34, { 1, 0 }
  uselistorder label %dec_label_pc_10005c18, { 1, 0 }
  uselistorder label %dec_label_pc_10005ba8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005b44, { 1, 0 }
  uselistorder label %dec_label_pc_10005b00, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005af0, { 1, 0 }
  uselistorder label %dec_label_pc_10005ab8.dec_label_pc_10005ab8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005a9c.dec_label_pc_10005a9c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005a8c, { 7, 8, 0, 9, 1, 2, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_10005898, { 2, 0, 1 }
}

define i32 @function_10005f3c() local_unnamed_addr {
dec_label_pc_10005f3c:
  %v3_10005f44 = load i32, i32* @global_var_1001c29c.111, align 4
  %v3_10005f4c = load i32, i32* @global_var_1001c290.112, align 4
  %v1_10005f54 = udiv i32 %v3_10005f44, 524288
  %v3_10005f58 = load i32, i32* @global_var_1001c298.113, align 4
  %v1_10005f5c = mul i32 %v3_10005f4c, 2048
  %v2_10005f60 = xor i32 %v1_10005f54, %v3_10005f44
  %v2_10005f64 = xor i32 %v1_10005f5c, %v3_10005f4c
  %v3_10005f68 = load i32, i32* @global_var_1001c294.114, align 4
  %v2_10005f6c = xor i32 %v2_10005f60, %v2_10005f64
  %v1_10005f70 = udiv i32 %v2_10005f64, 256
  %v2_10005f74 = xor i32 %v2_10005f6c, %v1_10005f70
  store i32 %v3_10005f68, i32* @global_var_1001c290.112, align 4
  store i32 %v3_10005f58, i32* @global_var_1001c294.114, align 4
  store i32 %v3_10005f44, i32* @global_var_1001c298.113, align 4
  store i32 %v2_10005f74, i32* @global_var_1001c29c.111, align 4
  ret i32 %v2_10005f74

; uselistorder directives
  uselistorder i32 %v2_10005f74, { 1, 0 }
  uselistorder i32 %v3_10005f4c, { 1, 0 }
  uselistorder i32 %v3_10005f44, { 2, 1, 0 }
}

define i32 @function_10005f8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005f8c:
  store i32 268459948, i32* @lr, align 4
  %v0_10005fa8 = call i32 @function_1000946c()
  store i32 %v0_10005fa8, i32* @global_var_1001c290.112, align 4
  store i32 268459960, i32* @lr, align 4
  %v0_10005fb4 = call i32 @function_1000912c()
  store i32 268459968, i32* @lr, align 4
  %v0_10005fbc = call i32 @function_10009174()
  %v2_10005fc0 = xor i32 %v0_10005fb4, %v0_10005fbc
  store i32 %v2_10005fc0, i32* @global_var_1001c294.114, align 4
  store i32 268459980, i32* @lr, align 4
  %v1_10005fc8 = call i32 @function_100097c4(i32 %v0_10005fbc)
  %v3_10005fcc = load i32, i32* @global_var_1001c294.114, align 4
  %v2_10005fdc = xor i32 %v3_10005fcc, %v1_10005fc8
  store i32 %v2_10005fdc, i32* @global_var_1001c29c.111, align 4
  store i32 %v1_10005fc8, i32* @global_var_1001c298.113, align 4
  ret i32 %v1_10005fc8

; uselistorder directives
  uselistorder i32 %v1_10005fc8, { 2, 1, 0 }
  uselistorder i32 %v0_10005fbc, { 1, 0 }
  uselistorder i32 ()* @function_10009174, { 2, 1, 0 }
}

define i32 @function_10005ffc(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10005ffc:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-72 = alloca i32, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v2_10006018 = ptrtoint i32* %stack_var_-72 to i32
  store i32 268460092, i32* @lr, align 4
  %v1_10006038 = call i32 @function_10008278(i32 33)
  %v3_10006044 = call i32 @function_100081c4(i32 33, i32* null)
  %v2_10006050 = inttoptr i32 %v3_10006044 to i8*
  %v3_10006050 = call i32 @function_10009930(i32 %v2_10006018, i8* %v2_10006050)
  %v3_10006054 = icmp eq i32 %arg2, 0
  br i1 %v3_10006054, label %dec_label_pc_100060d8, label %dec_label_pc_1000605c

dec_label_pc_1000605c:                            ; preds = %dec_label_pc_10005ffc
  %v1_1000605c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000605c = add i32 %v1_1000605c, %arg2
  store i32 %v2_1000605c, i32* %r26.global-to-local, align 4
  %v1_100060b0 = bitcast i32* %stack_var_-72 to i8*
  br label %dec_label_pc_10006070

dec_label_pc_10006070:                            ; preds = %dec_label_pc_10006070, %dec_label_pc_1000605c
  %v3_10006070 = load i32, i32* @global_var_1001c29c.111, align 4
  %v3_10006078 = load i32, i32* @global_var_1001c290.112, align 4
  %v1_1000607c = udiv i32 %v3_10006070, 524288
  %v3_10006080 = load i32, i32* @global_var_1001c298.113, align 4
  %v1_10006084 = mul i32 %v3_10006078, 2048
  %v2_10006088 = xor i32 %v1_1000607c, %v3_10006070
  %v2_1000608c = xor i32 %v1_10006084, %v3_10006078
  %v3_10006090 = load i32, i32* @global_var_1001c294.114, align 4
  %v2_10006094 = xor i32 %v2_10006088, %v2_1000608c
  %v1_10006098 = udiv i32 %v2_1000608c, 256
  %v2_1000609c = xor i32 %v2_10006094, %v1_10006098
  store i32 %v2_1000609c, i32* %r29.global-to-local, align 4
  store i32 %v3_10006090, i32* @global_var_1001c290.112, align 4
  store i32 %v2_1000609c, i32* @global_var_1001c29c.111, align 4
  store i32 %v3_10006080, i32* @global_var_1001c294.114, align 4
  store i32 %v3_10006070, i32* @global_var_1001c298.113, align 4
  store i32 268460212, i32* @lr, align 4
  %v2_100060b0 = call i32 @function_100088dc(i8* %v1_100060b0)
  %v0_100060b4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100060b4 = urem i32 %v0_100060b4, %v2_100060b0
  store i32 %v2_100060b4, i32* %r29.global-to-local, align 4
  %v0_100060c0 = load i32, i32* @r1, align 4
  %v2_100060c0 = add i32 %v0_100060c0, %v2_100060b4
  %v1_100060c4 = add i32 %v2_100060c0, 8
  %v2_100060c4 = inttoptr i32 %v1_100060c4 to i8*
  %v3_100060c4 = load i8, i8* %v2_100060c4, align 1
  %v2_100060c8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100060c8 = inttoptr i32 %v2_100060c8 to i8*
  store i8 %v3_100060c4, i8* %v3_100060c8, align 1
  %v0_100060cc = load i32, i32* %r31.global-to-local, align 4
  %v1_100060cc = add i32 %v0_100060cc, 1
  store i32 %v1_100060cc, i32* %r31.global-to-local, align 4
  %v1_100060d0 = load i32, i32* %r26.global-to-local, align 4
  %v4_100060d0 = icmp eq i32 %v1_100060cc, %v1_100060d0
  br i1 %v4_100060d0, label %dec_label_pc_100060d8, label %dec_label_pc_10006070

dec_label_pc_100060d8:                            ; preds = %dec_label_pc_10006070, %dec_label_pc_10005ffc
  store i32 268460256, i32* @lr, align 4
  %v1_100060dc = call i32 @function_100081ec(i32 33)
  ret i32 %v1_100060dc

; uselistorder directives
  uselistorder i32 %v3_10006078, { 1, 0 }
  uselistorder i32 %v3_10006070, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_100081ec, { 0, 3, 2, 1, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 (i32, i32*)* @function_100081c4, { 30, 28, 29, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 (i32)* @function_10008278, { 0, 1, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_10006110() local_unnamed_addr {
dec_label_pc_10006110:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %v0_10006110 = load i32, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_10006110, 1
  br i1 %tmp19, label %dec_label_pc_10006110.dec_label_pc_100061c4_crit_edge, label %dec_label_pc_10006128

dec_label_pc_10006110.dec_label_pc_100061c4_crit_edge: ; preds = %dec_label_pc_10006110
  %v0_100061d4.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100061c4

dec_label_pc_10006128:                            ; preds = %dec_label_pc_10006110
  %v3_10006138 = load i32, i32* @global_var_1001c29c.111, align 4
  store i32 %v3_10006138, i32* %r7.global-to-local, align 4
  %v3_1000613c = load i32, i32* @global_var_1001c298.113, align 4
  store i32 %v3_1000613c, i32* %r5.global-to-local, align 4
  %v3_10006140 = load i32, i32* @global_var_1001c294.114, align 4
  store i32 %v3_10006140, i32* %r6.global-to-local, align 4
  %v3_10006144 = load i32, i32* @global_var_1001c290.112, align 4
  br label %dec_label_pc_10006170

dec_label_pc_1000614c:                            ; preds = %dec_label_pc_10006170
  %v1_1000614c = load i32, i32* @r3, align 4
  %v2_1000614c = inttoptr i32 %v1_1000614c to i32*
  store i32 %v2_10006194, i32* %v2_1000614c, align 4
  %v0_10006150 = load i32, i32* @r4, align 4
  %v1_10006150 = add i32 %v0_10006150, -4
  store i32 %v1_10006150, i32* @r4, align 4
  %v0_10006154 = load i32, i32* @r3, align 4
  %v1_10006154 = add i32 %v0_10006154, 4
  br label %dec_label_pc_10006158

dec_label_pc_10006158:                            ; preds = %dec_label_pc_100061a8, %dec_label_pc_1000614c
  %v0_10006158 = phi i32 [ %v0_10006158.pr, %dec_label_pc_100061a8 ], [ %v1_10006150, %dec_label_pc_1000614c ]
  %storemerge = phi i32 [ %v1_100061ac, %dec_label_pc_100061a8 ], [ %v1_10006154, %dec_label_pc_1000614c ]
  store i32 %storemerge, i32* @r3, align 4
  %v0_1000615c = load i32, i32* %r6.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_10006158, 1
  br i1 %tmp20, label %dec_label_pc_100061b4, label %dec_label_pc_10006164

dec_label_pc_10006164:                            ; preds = %dec_label_pc_10006158
  %v0_10006164 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10006164, i32* %r6.global-to-local, align 4
  %v0_10006168 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10006168, i32* %r5.global-to-local, align 4
  %v0_1000616c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000616c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10006170

dec_label_pc_10006170:                            ; preds = %dec_label_pc_10006128, %dec_label_pc_10006164
  %v0_10006210 = phi i32 [ %v3_10006140, %dec_label_pc_10006128 ], [ %v0_10006164, %dec_label_pc_10006164 ]
  %v0_100061f4 = phi i32 [ %v3_1000613c, %dec_label_pc_10006128 ], [ %v0_10006168, %dec_label_pc_10006164 ]
  %v0_100061f8 = phi i32 [ %v3_10006138, %dec_label_pc_10006128 ], [ %v0_1000616c, %dec_label_pc_10006164 ]
  %v0_100061d8 = phi i32 [ %v3_10006144, %dec_label_pc_10006128 ], [ %v0_1000615c, %dec_label_pc_10006164 ]
  %v0_100061a0 = phi i32 [ %v0_10006110, %dec_label_pc_10006128 ], [ %v0_10006158, %dec_label_pc_10006164 ]
  %v2_10006170 = icmp sgt i32 %v0_100061a0, 3
  %v1_10006174 = mul i32 %v0_100061d8, 2048
  %v1_10006178 = udiv i32 %v0_100061f8, 524288
  %v2_1000617c = xor i32 %v1_10006174, %v0_100061d8
  %v2_10006180 = xor i32 %v1_10006178, %v0_100061f8
  %v2_10006188 = xor i32 %v2_10006180, %v2_1000617c
  %v1_1000618c = udiv i32 %v2_1000617c, 256
  %v2_10006194 = xor i32 %v2_10006188, %v1_1000618c
  store i32 %v2_10006194, i32* %r0.global-to-local, align 4
  br i1 %v2_10006170, label %dec_label_pc_1000614c, label %dec_label_pc_1000619c

dec_label_pc_1000619c:                            ; preds = %dec_label_pc_10006170
  %v3_10006184 = icmp eq i32 %v0_100061a0, 1
  store i32 %v2_10006194, i32* %r0.global-to-local, align 4
  %v1_100061a0 = add i32 %v0_100061a0, -2
  store i32 %v1_100061a0, i32* @r4, align 4
  br i1 %v3_10006184, label %dec_label_pc_100061d8, label %dec_label_pc_100061a8

dec_label_pc_100061a8:                            ; preds = %dec_label_pc_1000619c
  %v1_100061a8 = trunc i32 %v2_10006194 to i16
  %v2_100061a8 = load i32, i32* @r3, align 4
  %v3_100061a8 = inttoptr i32 %v2_100061a8 to i16*
  store i16 %v1_100061a8, i16* %v3_100061a8, align 2
  %v0_100061ac = load i32, i32* @r3, align 4
  %v1_100061ac = add i32 %v0_100061ac, 2
  %v0_10006158.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_10006158

dec_label_pc_100061b4:                            ; preds = %dec_label_pc_10006158
  %v0_100061b4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100061b4, i32* @global_var_1001c29c.111, align 4
  %v0_100061b8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_100061b8, i32* @global_var_1001c298.113, align 4
  %v0_100061bc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_100061bc, i32* @global_var_1001c294.114, align 4
  store i32 %v0_1000615c, i32* @global_var_1001c290.112, align 4
  br label %dec_label_pc_100061c4

dec_label_pc_100061c4:                            ; preds = %dec_label_pc_10006110.dec_label_pc_100061c4_crit_edge, %dec_label_pc_100061b4
  %v0_100061d4 = phi i32 [ %v0_100061d4.pre, %dec_label_pc_10006110.dec_label_pc_100061c4_crit_edge ], [ %storemerge, %dec_label_pc_100061b4 ]
  ret i32 %v0_100061d4

dec_label_pc_100061d8:                            ; preds = %dec_label_pc_1000619c
  store i32 %v2_10006194, i32* %r0.global-to-local, align 4
  store i32 %v0_100061f4, i32* @global_var_1001c294.114, align 4
  store i32 %v0_100061f8, i32* @global_var_1001c298.113, align 4
  store i32 %v2_10006194, i32* @global_var_1001c29c.111, align 4
  store i32 %v0_10006210, i32* @global_var_1001c290.112, align 4
  %v1_10006214 = trunc i32 %v2_10006194 to i8
  %v2_10006214 = load i32, i32* @r3, align 4
  %v3_10006214 = inttoptr i32 %v2_10006214 to i8*
  store i8 %v1_10006214, i8* %v3_10006214, align 1
  %v0_10006218 = load i32, i32* @r3, align 4
  ret i32 %v0_10006218

; uselistorder directives
  uselistorder i32 %v2_10006194, { 2, 1, 0, 3, 4, 6, 5 }
  uselistorder i32 %v0_100061d8, { 1, 0 }
  uselistorder i32 %v0_100061f8, { 1, 2, 0 }
  uselistorder i32 %v0_10006110, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_100061c4, { 1, 0 }
  uselistorder label %dec_label_pc_10006170, { 1, 0 }
}

define i32 @function_1000621c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000621c:
  store i32 %arg1, i32* @r31, align 4
  %v3_10006228 = icmp eq i32 %arg1, 0
  br i1 %v3_10006228, label %dec_label_pc_1000624c, label %dec_label_pc_10006234

dec_label_pc_10006234:                            ; preds = %dec_label_pc_1000621c
  %v1_10006234 = add i32 %arg1, 4
  %v2_10006234 = inttoptr i32 %v1_10006234 to i32*
  %v3_10006234 = load i32, i32* %v2_10006234, align 4
  store i32 %v3_10006234, i32* @r3, align 4
  %v3_10006238 = icmp eq i32 %v3_10006234, 0
  br i1 %v3_10006238, label %dec_label_pc_10006244, label %dec_label_pc_10006240

dec_label_pc_10006240:                            ; preds = %dec_label_pc_10006234
  store i32 268460612, i32* @lr, align 4
  %v0_10006240 = call i32 @function_1000a1b8()
  %v0_10006244.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006244

dec_label_pc_10006244:                            ; preds = %dec_label_pc_10006234, %dec_label_pc_10006240
  %v0_10006244 = phi i32 [ %arg1, %dec_label_pc_10006234 ], [ %v0_10006244.pre, %dec_label_pc_10006240 ]
  store i32 %v0_10006244, i32* @r3, align 4
  store i32 268460620, i32* @lr, align 4
  %v0_10006248 = call i32 @function_1000a1b8()
  br label %dec_label_pc_1000624c

dec_label_pc_1000624c:                            ; preds = %dec_label_pc_1000621c, %dec_label_pc_10006244
  %v0_1000625c = phi i32 [ 0, %dec_label_pc_1000621c ], [ %v0_10006248, %dec_label_pc_10006244 ]
  ret i32 %v0_1000625c

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000624c, { 1, 0 }
  uselistorder label %dec_label_pc_10006244, { 1, 0 }
}

define i32 @function_10006260(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006260:
  %cr4_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp60 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-4308 = alloca i32, align 4
  %stack_var_-4312 = alloca i32, align 4
  %stack_var_-2096 = alloca i32, align 4
  %stack_var_-2108 = alloca i16, align 2
  %stack_var_-4284 = alloca i32, align 4
  %stack_var_-4300 = alloca i32, align 4
  %stack_var_-4143 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4156 = alloca i32, align 4
  %v0_10006264 = load i32, i32* @lr, align 4
  store i32 %v0_10006264, i32* %r0.global-to-local, align 4
  %v0_10006268 = call i32 @__asm_mfcr()
  %v0_10006270 = load i32, i32* @r29, align 4
  store i32 %v0_10006268, i32* @r29, align 4
  %v2_10006284 = ptrtoint i32* %stack_var_-4156 to i32
  %v2_1000628c = ptrtoint i32* %stack_var_-4144 to i32
  store i32 %v2_1000628c, i32* %r26.global-to-local, align 4
  %v0_10006290 = load i32, i32* %r0.global-to-local, align 4
  %v0_100062b0 = load i32, i32* @r28, align 4
  store i32 268460736, i32* @lr, align 4
  %v2_100062bc = call i32 @function_1000a148(i32 1, i32 8)
  store i32 %v2_100062bc, i32* %r25.global-to-local, align 4
  %v0_100062c4 = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100062cc.115 to i32), i32* @lr, align 4
  %v1_100062c8 = inttoptr i32 %v0_100062c4 to i8*
  %v2_100062c8 = call i32 @function_100088dc(i8* %v1_100062c8)
  %v2_100062cc = ptrtoint i32* %stack_var_-4143 to i32
  store i32 %v2_100062cc, i32* %r10.global-to-local, align 4
  %v1_100062d0 = add i32 %v2_100062c8, 1
  store i32 %v2_1000628c, i32* %r7.global-to-local, align 4
  %v1_100062dc = add i32 %v2_100062c8, 2
  store i32 %v1_100062dc, i32* %ctr.global-to-local, align 4
  %tmp94 = icmp sgt i32 %v1_100062d0, -1
  br i1 %tmp94, label %dec_label_pc_10006304.preheader, label %dec_label_pc_10006304.preheader.thread

dec_label_pc_10006304.preheader:                  ; preds = %dec_label_pc_10006260
  %v3_100062d8 = icmp eq i32 %v1_100062d0, 0
  %v1_1000630413 = or i32 %v2_100062cc, 1
  store i32 %v1_1000630413, i32* %r11.global-to-local, align 4
  store i32 %v1_100062d0, i32* %ctr.global-to-local, align 4
  br i1 %v3_100062d8, label %dec_label_pc_10006334, label %dec_label_pc_1000630c.lr.ph

dec_label_pc_1000630c.lr.ph:                      ; preds = %dec_label_pc_10006304.preheader
  %v0_1000630c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000630c

dec_label_pc_100062f0:                            ; preds = %dec_label_pc_1000631c
  %v3_100062f0 = inttoptr i32 %v2_100062f0 to i8*
  store i8 %v2_1000630c, i8* %v3_100062f0, align 1
  %v0_100062f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100062f4 = urem i32 %v0_100062f4, 256
  %v0_100062f8 = load i32, i32* %r10.global-to-local, align 4
  %v1_100062f8 = add i32 %v0_100062f8, 1
  store i32 %v1_100062f8, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100062fc

dec_label_pc_100062fc:                            ; preds = %dec_label_pc_10006324, %dec_label_pc_100062f0
  %v0_10006300 = phi i32 [ %v0_10006300.pre, %dec_label_pc_10006324 ], [ %v1_100062f8, %dec_label_pc_100062f0 ]
  %v0_1000631c20 = phi i32 [ 0, %dec_label_pc_10006324 ], [ %v1_100062f4, %dec_label_pc_100062f0 ]
  %v0_100062fc = load i32, i32* @r29, align 4
  %v1_100062fc = add i32 %v0_100062fc, 1
  store i32 %v1_100062fc, i32* @r29, align 4
  store i32 %v0_10006300, i32* %r10.global-to-local, align 4
  %v1_10006304 = add i32 %v0_10006300, 1
  store i32 %v1_10006304, i32* %r11.global-to-local, align 4
  %v0_10006308 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006308 = add i32 %v0_10006308, -1
  store i32 %v1_10006308, i32* %ctr.global-to-local, align 4
  %v2_10006308 = icmp eq i32 %v1_10006308, 0
  br i1 %v2_10006308, label %dec_label_pc_10006334, label %dec_label_pc_1000630c

dec_label_pc_1000630c:                            ; preds = %dec_label_pc_1000630c.lr.ph, %dec_label_pc_100062fc
  %v2_100062f0 = phi i32 [ %v2_100062cc, %dec_label_pc_1000630c.lr.ph ], [ %v0_10006300, %dec_label_pc_100062fc ]
  %v0_10006324 = phi i32 [ 0, %dec_label_pc_1000630c.lr.ph ], [ %v0_1000631c20, %dec_label_pc_100062fc ]
  %v0_1000630c = phi i32 [ %v0_1000630c.pre, %dec_label_pc_1000630c.lr.ph ], [ %v1_100062fc, %dec_label_pc_100062fc ]
  %v1_1000630c = inttoptr i32 %v0_1000630c to i8*
  %v2_1000630c = load i8, i8* %v1_1000630c, align 1
  %v3_1000630c = zext i8 %v2_1000630c to i32
  store i32 %v3_1000630c, i32* %r0.global-to-local, align 4
  %v3_10006310 = icmp eq i8 %v2_1000630c, 46
  br i1 %v3_10006310, label %dec_label_pc_10006324, label %dec_label_pc_1000631c

dec_label_pc_1000631c:                            ; preds = %dec_label_pc_1000630c
  %v3_10006314 = icmp eq i8 %v2_1000630c, 0
  %v1_1000631c = add nsw i32 %v0_10006324, 1
  store i32 %v1_1000631c, i32* %r9.global-to-local, align 4
  br i1 %v3_10006314, label %dec_label_pc_10006324, label %dec_label_pc_100062f0

dec_label_pc_10006324:                            ; preds = %dec_label_pc_1000631c, %dec_label_pc_1000630c
  %v1_10006324 = trunc i32 %v0_10006324 to i8
  %v2_10006324 = load i32, i32* %r7.global-to-local, align 4
  %v3_10006324 = inttoptr i32 %v2_10006324 to i8*
  store i8 %v1_10006324, i8* %v3_10006324, align 1
  %v0_10006328 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006328, i32* %r7.global-to-local, align 4
  %v0_10006300.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100062fc

dec_label_pc_10006334:                            ; preds = %dec_label_pc_100062fc, %dec_label_pc_10006304.preheader.thread, %dec_label_pc_10006304.preheader
  %v2_1000633c = phi i32 [ %v2_100062cc, %dec_label_pc_10006304.preheader ], [ %v2_100062cc, %dec_label_pc_10006304.preheader.thread ], [ %v0_10006300, %dec_label_pc_100062fc ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000633c = inttoptr i32 %v2_1000633c to i8*
  store i8 0, i8* %v3_1000633c, align 1
  %v2_10006340 = ptrtoint i32* %stack_var_-4300 to i32
  store i32 -1, i32* @r30, align 4
  store i32 1, i32* %r27.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006350.116 to i32), i32* @lr, align 4
  %v1_1000634c = bitcast i32* %stack_var_-4144 to i8*
  %v2_1000634c = call i32 @function_100088dc(i8* %v1_1000634c)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10006354 = load i32, i32* %r26.global-to-local, align 4
  %v2_10006354 = add i32 %v0_10006354, %v2_1000634c
  store i32 %v2_10006354, i32* %r29.global-to-local, align 4
  %v0_10006360 = load i32, i32* @r30, align 4
  %v3_10006360 = icmp eq i32 %v0_10006360, -1
  store i1 %v3_10006360, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-4300, align 4
  %v2_10006368 = ptrtoint i32* %stack_var_-4284 to i32
  store i32 %v2_10006368, i32* @r31, align 4
  %v2_10006370 = ptrtoint i16* %stack_var_-2108 to i32
  store i32 %v2_10006370, i32* %r19.global-to-local, align 4
  store i32 268460924, i32* @lr, align 4
  %v2_10006378 = call i32 @function_100088dc(i8* %v1_1000634c)
  %v1_1000637c = add i32 %v2_10006378, 17
  store i32 %v1_1000637c, i32* %r23.global-to-local, align 4
  %v0_10006380 = call i32 @function_10005f3c()
  %v1_10006380 = sext i32 %v0_10006380 to i64
  store i32 16, i32* @r4, align 4
  %v5_10006394 = mul nuw nsw i64 %v1_10006380, 2147516417
  store i32 %v2_10006340, i32* @r3, align 4
  %v2_1000639c = ptrtoint i32* %stack_var_-2096 to i32
  store i32 %v2_1000639c, i32* %r20.global-to-local, align 4
  %v1_100063a02 = udiv i64 %v5_10006394, 140737488355328
  %v1_100063a0 = trunc i64 %v1_100063a02 to i32
  store i32 %v1_100063a0, i32* %r0.global-to-local, align 4
  %v2_100063a4 = add i32 %v1_100063a0, %v0_10006380
  store i32 %v2_100063a4, i32* %r9.global-to-local, align 4
  %v1_100063a8 = urem i32 %v2_100063a4, 65536
  store i32 %v1_100063a8, i32* %r22.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100063b0.118 to i32), i32* @lr, align 4
  %v0_100063ac = call i32 @function_10008984()
  store i32 2, i32* %stack_var_-4300, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  store i32 134744072, i32* %r11.global-to-local, align 4
  %v0_100063c4 = load i32, i32* %r29.global-to-local, align 4
  store i32 53, i32* %r9.global-to-local, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_100063dc = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100063dc, i32* %stack_var_-4156, align 4
  %v3_100063e4 = add i32 %v0_100063c4, 3
  %v4_100063e4 = inttoptr i32 %v3_100063e4 to i16*
  store i16 1, i16* %v4_100063e4, align 2
  %v0_100063e8 = load i32, i32* %r10.global-to-local, align 4
  %v1_100063e8 = trunc i32 %v0_100063e8 to i16
  %v2_100063e8 = load i32, i32* %r29.global-to-local, align 4
  %v3_100063e8 = add i32 %v2_100063e8, 1
  %v4_100063e8 = inttoptr i32 %v3_100063e8 to i16*
  store i16 %v1_100063e8, i16* %v4_100063e8, align 2
  %v2_1000648c = ptrtoint i32* %stack_var_-4312 to i32
  %v2_100064c0 = ptrtoint i32* %stack_var_-4308 to i32
  %v1_100065b0 = bitcast i32* %stack_var_-2096 to i8*
  %v4_100065c8 = zext i16 %tmp60 to i32
  %v3_100065cc = icmp eq i16 %tmp60, 0
  br label %dec_label_pc_100063ec

dec_label_pc_100063ec:                            ; preds = %dec_label_pc_1000652c, %dec_label_pc_10006334
  %v0_100063ec = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100063ec, label %dec_label_pc_100063f8, label %dec_label_pc_100063f0

dec_label_pc_100063f0:                            ; preds = %dec_label_pc_100063ec
  store i32 ptrtoint ([3 x i8]* @global_var_100063f8.119 to i32), i32* @lr, align 4
  %v0_100063f4 = call i32 @function_1000909c()
  br label %dec_label_pc_100063f8

dec_label_pc_100063f8:                            ; preds = %dec_label_pc_100063ec, %dec_label_pc_100063f0
  store i32 268461064, i32* @lr, align 4
  %v3_10006404 = call i32 @function_10009dec(i32 2, i32 2, i32 0)
  store i32 %v3_10006404, i32* @r3, align 4
  %v3_10006408 = icmp eq i32 %v3_10006404, -1
  store i1 %v3_10006408, i1* %cr4_eq.global-to-local, align 1
  store i32 %v3_10006404, i32* @r30, align 4
  br i1 %v3_10006408, label %dec_label_pc_10006534, label %dec_label_pc_10006414

dec_label_pc_10006414:                            ; preds = %dec_label_pc_100063f8
  store i32 268461088, i32* @lr, align 4
  %v0_1000641c = call i32 @function_10009bec()
  %v3_10006420 = icmp eq i32 %v0_1000641c, -1
  br i1 %v3_10006420, label %dec_label_pc_10006534, label %dec_label_pc_10006428

dec_label_pc_10006428:                            ; preds = %dec_label_pc_10006414
  %v0_10006428 = load i32, i32* @r30, align 4
  %v0_10006430 = load i32, i32* %r23.global-to-local, align 4
  store i32 268461116, i32* @lr, align 4
  %v4_10006438 = call i32 @function_10009d38(i32 %v0_10006428, i32 %v2_10006284, i32 %v0_10006430, i32 16384)
  %v3_1000643c = icmp eq i32 %v4_10006438, -1
  br i1 %v3_1000643c, label %dec_label_pc_10006534, label %dec_label_pc_10006444

dec_label_pc_10006444:                            ; preds = %dec_label_pc_10006428
  %v0_10006444 = load i32, i32* @r30, align 4
  store i32 %v0_10006444, i32* @r4, align 4
  store i32 268461144, i32* @lr, align 4
  %v2_10006454 = call i32 @function_10008fb4(i32 3)
  %v0_10006458 = load i32, i32* @r30, align 4
  store i32 %v0_10006458, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1000646c.120 to i32), i32* @lr, align 4
  %v2_10006468 = call i32 @function_10008fb4(i32 4)
  store i32 32, i32* %r0.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000647c139 = load i32, i32* @r31, align 4
  %v4_1000647c141 = inttoptr i32 %v2_1000647c139 to i32*
  store i32 0, i32* %v4_1000647c141, align 4
  %v0_10006480142 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006480143 = add i32 %v0_10006480142, 4
  store i32 %v1_10006480143, i32* %r9.global-to-local, align 4
  %v0_10006484144 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006484145 = add i32 %v0_10006484144, -1
  store i32 %v1_10006484145, i32* %ctr.global-to-local, align 4
  %v2_10006484146 = icmp eq i32 %v1_10006484145, 0
  br i1 %v2_10006484146, label %dec_label_pc_10006488, label %dec_label_pc_1000647c.dec_label_pc_1000647c_crit_edge

dec_label_pc_1000647c.dec_label_pc_1000647c_crit_edge: ; preds = %dec_label_pc_10006444, %dec_label_pc_1000647c.dec_label_pc_1000647c_crit_edge
  %v1_10006480147 = phi i32 [ %v1_10006480, %dec_label_pc_1000647c.dec_label_pc_1000647c_crit_edge ], [ %v1_10006480143, %dec_label_pc_10006444 ]
  %v0_1000647c.pre = load i32, i32* %r11.global-to-local, align 4
  %v2_1000647c = load i32, i32* @r31, align 4
  %v3_1000647c = add i32 %v2_1000647c, %v1_10006480147
  %v4_1000647c = inttoptr i32 %v3_1000647c to i32*
  store i32 %v0_1000647c.pre, i32* %v4_1000647c, align 4
  %v0_10006480 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006480 = add i32 %v0_10006480, 4
  store i32 %v1_10006480, i32* %r9.global-to-local, align 4
  %v0_10006484 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006484 = add i32 %v0_10006484, -1
  store i32 %v1_10006484, i32* %ctr.global-to-local, align 4
  %v2_10006484 = icmp eq i32 %v1_10006484, 0
  br i1 %v2_10006484, label %dec_label_pc_10006488, label %dec_label_pc_1000647c.dec_label_pc_1000647c_crit_edge

dec_label_pc_10006488:                            ; preds = %dec_label_pc_1000647c.dec_label_pc_1000647c_crit_edge, %dec_label_pc_10006444
  %v0_10006488 = load i32, i32* @r30, align 4
  %v1_10006488 = call i32 @__asm_rlwinm(i32 %v0_10006488, i32 29, i32 3, i32 29)
  store i32 %v1_10006488, i32* %r9.global-to-local, align 4
  store i32 %v2_1000648c, i32* %r0.global-to-local, align 4
  %v2_10006490 = add i32 %v1_10006488, %v2_1000648c
  store i32 %v2_10006490, i32* %r29.global-to-local, align 4
  %v0_10006494 = load i32, i32* @r30, align 4
  %v1_10006494 = urem i32 %v0_10006494, 32
  store i32 %v1_10006494, i32* %r28.global-to-local, align 4
  %v1_10006498 = add i32 %v2_10006490, 28
  %v2_10006498 = inttoptr i32 %v1_10006498 to i32*
  %v3_10006498 = load i32, i32* %v2_10006498, align 4
  %v3_100064a0 = shl i32 1, %v1_10006494
  %v1_100064a4 = add i32 %v0_10006494, 1
  %v2_100064a8 = or i32 %v3_100064a0, %v3_10006498
  store i32 %v2_100064a8, i32* %r9.global-to-local, align 4
  store i32 %v2_100064a8, i32* %v2_10006498, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 %v2_100064c0, i32* %r7.global-to-local, align 4
  store i32 5, i32* %stack_var_-4308, align 4
  store i32 268461264, i32* @lr, align 4
  %v5_100064cc = call i32 @function_10009364(i32 %v1_100064a4, i32 %v2_10006368, i32 0, i32 0, i32 %v2_100064c0)
  %v3_100064d0 = icmp eq i32 %v5_100064cc, -1
  br i1 %v3_100064d0, label %dec_label_pc_10006544, label %dec_label_pc_100064d8

dec_label_pc_100064d8:                            ; preds = %dec_label_pc_10006488
  %v3_100064d8 = icmp eq i32 %v5_100064cc, 0
  br i1 %v3_100064d8, label %dec_label_pc_10006524, label %dec_label_pc_100064e0

dec_label_pc_100064e0:                            ; preds = %dec_label_pc_100064d8
  %v0_100064e0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100064e0 = add i32 %v0_100064e0, 28
  %v2_100064e0 = inttoptr i32 %v1_100064e0 to i32*
  %v3_100064e0 = load i32, i32* %v2_100064e0, align 4
  %v1_100064e4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100064e4 = urem i32 %v1_100064e4, 32
  %v3_100064e4 = sub i32 0, %v1_100064e4
  %v4_100064e4 = urem i32 %v3_100064e4, 32
  %v5_100064e4 = shl i32 %v3_100064e0, %v4_100064e4
  %v6_100064e4 = xor i32 %v4_100064e4, 31
  %v7_100064e4 = lshr i32 %v3_100064e0, %v6_100064e4
  %v8_100064e4 = udiv i32 %v7_100064e4, 2
  %v9_100064e4 = or i32 %v8_100064e4, %v5_100064e4
  %v10_100064e4 = and i32 %v1_100064e4, 32
  %v11_100064e4 = icmp ne i32 %v10_100064e4, 0
  %v12_100064e4 = lshr i32 -1, %v2_100064e4
  %v13_100064e4 = select i1 %v11_100064e4, i32 0, i32 %v12_100064e4
  %v14_100064e4 = and i32 %v9_100064e4, %v13_100064e4
  %v15_100064e4 = ashr i32 %v3_100064e0, 31
  %v16_100064e4 = sub i32 -1, %v13_100064e4
  %v17_100064e4 = and i32 %v15_100064e4, %v16_100064e4
  %v18_100064e4 = or i32 %v14_100064e4, %v17_100064e4
  store i32 %v18_100064e4, i32* %r0.global-to-local, align 4
  %v1_100064e8 = urem i32 %v18_100064e4, 2
  store i32 %v1_100064e8, i32* %r9.global-to-local, align 4
  %v3_100064e8 = icmp eq i32 %v1_100064e8, 0
  br i1 %v3_100064e8, label %dec_label_pc_10006544, label %dec_label_pc_100064f0

dec_label_pc_100064f0:                            ; preds = %dec_label_pc_100064e0
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_10006504 = load i32, i32* @r30, align 4
  store i32 268461324, i32* @lr, align 4
  %v6_10006508 = call i32 @function_10009cf8(i32 %v0_10006504, i32 %v2_10006370, i32 2048, i32 16384, i32 0, i32 0)
  store i32 %v6_10006508, i32* %r29.global-to-local, align 4
  %v0_10006510 = load i32, i32* %r26.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006518.121 to i32), i32* @lr, align 4
  %v1_10006514 = inttoptr i32 %v0_10006510 to i8*
  %v2_10006514 = call i32 @function_100088dc(i8* %v1_10006514)
  %v1_10006518 = add i32 %v2_10006514, 17
  %v2_1000651c = icmp ult i32 %v6_10006508, %v1_10006518
  br i1 %v2_1000651c, label %dec_label_pc_10006524, label %dec_label_pc_100065a8

dec_label_pc_10006524:                            ; preds = %dec_label_pc_100065a8, %dec_label_pc_100064f0, %dec_label_pc_100065c8, %dec_label_pc_100064d8
  %v0_10006524 = load i32, i32* %r27.global-to-local, align 4
  %v3_10006524 = icmp eq i32 %v0_10006524, 5
  br i1 %v3_10006524, label %dec_label_pc_10006544, label %dec_label_pc_1000652c

dec_label_pc_1000652c:                            ; preds = %dec_label_pc_10006534, %dec_label_pc_10006524
  %v0_1000652c = phi i32 [ %v0_1000653c, %dec_label_pc_10006534 ], [ %v0_10006524, %dec_label_pc_10006524 ]
  %v1_1000652c = add i32 %v0_1000652c, 1
  store i32 %v1_1000652c, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100063ec

dec_label_pc_10006534:                            ; preds = %dec_label_pc_10006428, %dec_label_pc_10006414, %dec_label_pc_100063f8
  store i32 268461372, i32* @lr, align 4
  %v1_10006538 = call i32 @function_1000a8e4(i32 1)
  %v0_1000653c = load i32, i32* %r27.global-to-local, align 4
  %v3_1000653c = icmp eq i32 %v0_1000653c, 5
  br i1 %v3_1000653c, label %dec_label_pc_10006544, label %dec_label_pc_1000652c

dec_label_pc_10006544:                            ; preds = %dec_label_pc_10006534, %dec_label_pc_10006524, %dec_label_pc_100064e0, %dec_label_pc_10006488, %dec_label_pc_100065d4.backedge, %dec_label_pc_100065d4.preheader
  store i32 268461388, i32* @lr, align 4
  %v0_10006548 = call i32 @function_1000909c()
  %v0_1000654c = load i32, i32* %r25.global-to-local, align 4
  %v1_1000654c = inttoptr i32 %v0_1000654c to i8*
  %v2_1000654c = load i8, i8* %v1_1000654c, align 1
  %v3_1000654c = zext i8 %v2_1000654c to i32
  store i32 %v3_1000654c, i32* %r0.global-to-local, align 4
  %v3_10006550 = icmp eq i8 %v2_1000654c, 0
  br i1 %v3_10006550, label %dec_label_pc_100066c0, label %dec_label_pc_10006558

dec_label_pc_10006558:                            ; preds = %dec_label_pc_10006544, %dec_label_pc_100066d0
  %v0_1000655c = phi i32 [ %v0_1000654c, %dec_label_pc_10006544 ], [ 0, %dec_label_pc_100066d0 ]
  store i32 %v0_10006290, i32* %r0.global-to-local, align 4
  %v1_10006570 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006268)
  store i32 %v0_100062b0, i32* %r28.global-to-local, align 4
  store i32 %v0_10006270, i32* %r29.global-to-local, align 4
  ret i32 %v0_1000655c

dec_label_pc_100065a8:                            ; preds = %dec_label_pc_100064f0
  store i32 %v2_1000639c, i32* %r26.global-to-local, align 4
  store i32 268461492, i32* @lr, align 4
  %v2_100065b0 = call i32 @function_100088dc(i8* %v1_100065b0)
  %v3_100065b4 = load i16, i16* %stack_var_-2108, align 2
  %v4_100065b4 = sext i16 %v3_100065b4 to i32
  store i32 %v4_100065b4, i32* %r0.global-to-local, align 4
  %v0_100065b8 = load i32, i32* %r20.global-to-local, align 4
  %v1_100065bc = load i32, i32* %r22.global-to-local, align 4
  %v4_100065bc = icmp eq i32 %v4_100065b4, %v1_100065bc
  %v2_100065b8 = add i32 %v2_100065b0, 5
  %v1_100065c0 = add i32 %v2_100065b8, %v0_100065b8
  br i1 %v4_100065bc, label %dec_label_pc_100065c8, label %dec_label_pc_10006524

dec_label_pc_100065c8:                            ; preds = %dec_label_pc_100065a8
  store i32 %v4_100065c8, i32* %r28.global-to-local, align 4
  br i1 %v3_100065cc, label %dec_label_pc_10006524, label %dec_label_pc_100065d4.preheader

dec_label_pc_100065d4.preheader:                  ; preds = %dec_label_pc_100065c8
  %v1_100065d48 = add nsw i32 %v4_100065c8, -1
  store i32 %v1_100065d48, i32* %r0.global-to-local, align 4
  %v1_100065dc9 = urem i32 %v1_100065d48, 65536
  store i32 %v1_100065dc9, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_100065e411 = icmp eq i32 %v1_100065dc9, 65535
  br i1 %v4_100065e411, label %dec_label_pc_10006544, label %dec_label_pc_100065ec

dec_label_pc_100065ec:                            ; preds = %dec_label_pc_100065d4.preheader, %dec_label_pc_100065d4.backedge
  %v0_100065d449 = phi i32 [ %v1_100065dc, %dec_label_pc_100065d4.backedge ], [ %v1_100065dc9, %dec_label_pc_100065d4.preheader ]
  %v0_10006648 = phi i32 [ %storemerge, %dec_label_pc_100065d4.backedge ], [ %v1_100065c0, %dec_label_pc_100065d4.preheader ]
  store i32 %v0_10006648, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_100065f8110 = inttoptr i32 %v0_10006648 to i8*
  %v2_100065f8111 = load i8, i8* %v1_100065f8110, align 1
  %v3_100065f8112 = zext i8 %v2_100065f8111 to i32
  store i32 %v3_100065f8112, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_10006600113 = icmp eq i8 %v2_100065f8111, 0
  br i1 %v3_10006600113, label %dec_label_pc_10006644, label %dec_label_pc_10006610.preheader

dec_label_pc_10006610.preheader:                  ; preds = %dec_label_pc_100065ec, %dec_label_pc_100066e0
  %v2_100065f8119 = phi i8 [ %v2_100065f8, %dec_label_pc_100066e0 ], [ %v2_100065f8111, %dec_label_pc_100065ec ]
  %v3_10006608122.in = phi i8 [ %v2_100065f8, %dec_label_pc_100066e0 ], [ %v2_100065f8111, %dec_label_pc_100065ec ]
  %v1_10006604121.in = phi i32 [ %v3_100065f8, %dec_label_pc_100066e0 ], [ %v3_100065f8112, %dec_label_pc_100065ec ]
  %v1_100065fc120 = phi i32 [ %v1_100065fc, %dec_label_pc_100066e0 ], [ 1, %dec_label_pc_100065ec ]
  %v0_100065f8118 = phi i32 [ %v1_100066e4, %dec_label_pc_100066e0 ], [ %v0_10006648, %dec_label_pc_100065ec ]
  %v0_100065fc117 = phi i32 [ %v0_100065fc28, %dec_label_pc_100066e0 ], [ 0, %dec_label_pc_100065ec ]
  %v0_10006644116 = phi i32 [ %v2_100066e0, %dec_label_pc_100066e0 ], [ 1, %dec_label_pc_100065ec ]
  br label %dec_label_pc_10006610

dec_label_pc_10006610:                            ; preds = %dec_label_pc_10006610.preheader, %dec_label_pc_10006614
  %v1_100066e0 = phi i32 [ 0, %dec_label_pc_10006614 ], [ %v1_100065fc120, %dec_label_pc_10006610.preheader ]
  %v0_10006620.in = phi i32 [ %v3_10006630, %dec_label_pc_10006614 ], [ %v1_10006604121.in, %dec_label_pc_10006610.preheader ]
  %v0_100066e4 = phi i32 [ %v2_1000662c, %dec_label_pc_10006614 ], [ %v0_100065f8118, %dec_label_pc_10006610.preheader ]
  %v0_10006610.in = phi i8 [ %v2_10006630, %dec_label_pc_10006614 ], [ %v3_10006608122.in, %dec_label_pc_10006610.preheader ]
  %v1_10006610.in = phi i8 [ %v2_10006630, %dec_label_pc_10006614 ], [ %v2_100065f8119, %dec_label_pc_10006610.preheader ]
  %v0_100065fc28 = phi i32 [ 1, %dec_label_pc_10006614 ], [ %v0_100065fc117, %dec_label_pc_10006610.preheader ]
  %v0_10006610 = icmp eq i8 %v0_10006610.in, -65
  %v1_10006610 = icmp ult i8 %v1_10006610.in, -65
  %v2_10006610 = or i1 %v0_10006610, %v1_10006610
  br i1 %v2_10006610, label %dec_label_pc_100066e0, label %dec_label_pc_10006614

dec_label_pc_10006614:                            ; preds = %dec_label_pc_10006610
  %v0_10006620 = mul nuw nsw i32 %v0_10006620.in, 256
  %v1_10006614 = add i32 %v0_100066e4, 1
  %v2_10006614 = inttoptr i32 %v1_10006614 to i8*
  %v3_10006614 = load i8, i8* %v2_10006614, align 1
  %v4_10006614 = zext i8 %v3_10006614 to i32
  store i32 1, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10006620 = or i32 %v4_10006614, -49152
  %v1_10006628 = add nsw i32 %v2_10006620, %v0_10006620
  %v0_1000662c = load i32, i32* %r19.global-to-local, align 4
  %v2_1000662c = add i32 %v1_10006628, %v0_1000662c
  store i32 %v2_1000662c, i32* %r9.global-to-local, align 4
  %v1_10006630 = inttoptr i32 %v2_1000662c to i8*
  %v2_10006630 = load i8, i8* %v1_10006630, align 1
  %v3_10006630 = zext i8 %v2_10006630 to i32
  store i32 %v3_10006630, i32* %r0.global-to-local, align 4
  %v3_10006634 = icmp eq i8 %v2_10006630, 0
  br i1 %v3_10006634, label %dec_label_pc_10006644, label %dec_label_pc_10006610

dec_label_pc_10006644:                            ; preds = %dec_label_pc_100065ec, %dec_label_pc_100066e0, %dec_label_pc_10006614
  %v0_10006644103 = phi i32 [ %v0_10006644116, %dec_label_pc_10006614 ], [ 1, %dec_label_pc_100065ec ], [ %v2_100066e0, %dec_label_pc_100066e0 ]
  %v1_10006644 = phi i32 [ 1, %dec_label_pc_10006614 ], [ 0, %dec_label_pc_100065ec ], [ %v0_100065fc28, %dec_label_pc_100066e0 ]
  %v2_10006644 = add i32 %v1_10006644, %v0_10006644103
  store i32 %v2_10006644, i32* %r10.global-to-local, align 4
  %v2_10006648 = add i32 %v2_10006644, %v0_10006648
  %v3_10006648 = inttoptr i32 %v2_10006648 to i16*
  %v4_10006648 = load i16, i16* %v3_10006648, align 2
  %v5_10006648 = zext i16 %v4_10006648 to i32
  store i32 %v5_10006648, i32* %r0.global-to-local, align 4
  %v1_10006650 = add i32 %v2_10006648, 10
  store i32 %v1_10006650, i32* @r29, align 4
  %v3_10006654 = icmp eq i16 %v4_10006648, 1
  br i1 %v3_10006654, label %dec_label_pc_100066f8, label %dec_label_pc_1000665c

dec_label_pc_1000665c:                            ; preds = %dec_label_pc_100066f8, %dec_label_pc_10006644
  store i32 %v1_10006650, i32* %r9.global-to-local, align 4
  %v1_10006668124 = inttoptr i32 %v1_10006650 to i8*
  %v2_10006668125 = load i8, i8* %v1_10006668124, align 1
  %v3_10006668126 = zext i8 %v2_10006668125 to i32
  store i32 %v3_10006668126, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_10006670127 = icmp eq i8 %v2_10006668125, 0
  %v1_10006674128 = mul nuw nsw i32 %v3_10006668126, 256
  store i32 %v1_10006674128, i32* %r10.global-to-local, align 4
  br i1 %v3_10006670127, label %dec_label_pc_100066b4, label %dec_label_pc_10006680.preheader

dec_label_pc_10006680.preheader:                  ; preds = %dec_label_pc_1000665c, %dec_label_pc_100066ec
  %v2_10006668133 = phi i8 [ %v2_10006668, %dec_label_pc_100066ec ], [ %v2_10006668125, %dec_label_pc_1000665c ]
  %v3_10006678136.in = phi i8 [ %v2_10006668, %dec_label_pc_100066ec ], [ %v2_10006668125, %dec_label_pc_1000665c ]
  %v1_10006674135 = phi i32 [ %v1_10006674, %dec_label_pc_100066ec ], [ %v1_10006674128, %dec_label_pc_1000665c ]
  %v1_1000666c134 = phi i32 [ %v1_1000666c, %dec_label_pc_100066ec ], [ 1, %dec_label_pc_1000665c ]
  %v0_10006668132 = phi i32 [ %v1_100066f0, %dec_label_pc_100066ec ], [ %v1_10006650, %dec_label_pc_1000665c ]
  %v0_1000666c131 = phi i32 [ %v0_1000666c38, %dec_label_pc_100066ec ], [ 0, %dec_label_pc_1000665c ]
  %v0_100066b4130 = phi i32 [ %v2_100066ec, %dec_label_pc_100066ec ], [ 1, %dec_label_pc_1000665c ]
  br label %dec_label_pc_10006680

dec_label_pc_10006680:                            ; preds = %dec_label_pc_10006680.preheader, %dec_label_pc_10006684
  %v1_100066ec = phi i32 [ 0, %dec_label_pc_10006684 ], [ %v1_1000666c134, %dec_label_pc_10006680.preheader ]
  %v0_10006690 = phi i32 [ %v1_100066a8, %dec_label_pc_10006684 ], [ %v1_10006674135, %dec_label_pc_10006680.preheader ]
  %v0_100066f0 = phi i32 [ %v2_1000669c, %dec_label_pc_10006684 ], [ %v0_10006668132, %dec_label_pc_10006680.preheader ]
  %v0_10006680.in = phi i8 [ %v2_100066a0, %dec_label_pc_10006684 ], [ %v3_10006678136.in, %dec_label_pc_10006680.preheader ]
  %v1_10006680.in = phi i8 [ %v2_100066a0, %dec_label_pc_10006684 ], [ %v2_10006668133, %dec_label_pc_10006680.preheader ]
  %v0_1000666c38 = phi i32 [ 1, %dec_label_pc_10006684 ], [ %v0_1000666c131, %dec_label_pc_10006680.preheader ]
  %v0_10006680 = icmp eq i8 %v0_10006680.in, -65
  %v1_10006680 = icmp ult i8 %v1_10006680.in, -65
  %v2_10006680 = or i1 %v0_10006680, %v1_10006680
  br i1 %v2_10006680, label %dec_label_pc_100066ec, label %dec_label_pc_10006684

dec_label_pc_10006684:                            ; preds = %dec_label_pc_10006680
  %v1_10006684 = add i32 %v0_100066f0, 1
  %v2_10006684 = inttoptr i32 %v1_10006684 to i8*
  %v3_10006684 = load i8, i8* %v2_10006684, align 1
  %v4_10006684 = zext i8 %v3_10006684 to i32
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10006690 = or i32 %v4_10006684, -49152
  %v1_10006698 = add nsw i32 %v2_10006690, %v0_10006690
  %v0_1000669c = load i32, i32* %r19.global-to-local, align 4
  %v2_1000669c = add i32 %v1_10006698, %v0_1000669c
  store i32 %v2_1000669c, i32* %r9.global-to-local, align 4
  %v1_100066a0 = inttoptr i32 %v2_1000669c to i8*
  %v2_100066a0 = load i8, i8* %v1_100066a0, align 1
  %v3_100066a0 = zext i8 %v2_100066a0 to i32
  store i32 %v3_100066a0, i32* %r0.global-to-local, align 4
  %v3_100066a4 = icmp eq i8 %v2_100066a0, 0
  %v1_100066a8 = mul nuw nsw i32 %v3_100066a0, 256
  store i32 %v1_100066a8, i32* %r10.global-to-local, align 4
  br i1 %v3_100066a4, label %dec_label_pc_100066b4, label %dec_label_pc_10006680

dec_label_pc_100066b4:                            ; preds = %dec_label_pc_1000665c, %dec_label_pc_100066ec, %dec_label_pc_10006684
  %v0_100066b4109 = phi i32 [ %v0_100066b4130, %dec_label_pc_10006684 ], [ 1, %dec_label_pc_1000665c ], [ %v2_100066ec, %dec_label_pc_100066ec ]
  %v1_100066b4 = phi i32 [ 1, %dec_label_pc_10006684 ], [ 0, %dec_label_pc_1000665c ], [ %v0_1000666c38, %dec_label_pc_100066ec ]
  %v2_100066b4 = add i32 %v1_100066b4, %v0_100066b4109
  %v2_100066b8 = add i32 %v2_100066b4, %v1_10006650
  br label %dec_label_pc_100065d4.backedge

dec_label_pc_100065d4.backedge:                   ; preds = %dec_label_pc_100066b4, %dec_label_pc_10006764
  %v0_100065d4 = phi i32 [ %v0_100065d449, %dec_label_pc_100066b4 ], [ %v0_100065d4.pre, %dec_label_pc_10006764 ]
  %storemerge = phi i32 [ %v2_100066b8, %dec_label_pc_100066b4 ], [ %v2_10006768, %dec_label_pc_10006764 ]
  %v1_100065d4 = add i32 %v0_100065d4, -1
  store i32 %v1_100065d4, i32* %r0.global-to-local, align 4
  %v1_100065dc = urem i32 %v1_100065d4, 65536
  store i32 %v1_100065dc, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_100065e4 = icmp eq i32 %v1_100065dc, 65535
  br i1 %v4_100065e4, label %dec_label_pc_10006544, label %dec_label_pc_100065ec

dec_label_pc_100066c0:                            ; preds = %dec_label_pc_10006544
  %v1_100066c0 = add i32 %v0_1000654c, 4
  %v2_100066c0 = inttoptr i32 %v1_100066c0 to i32*
  %v3_100066c0 = load i32, i32* %v2_100066c0, align 4
  store i32 %v3_100066c0, i32* @r3, align 4
  %v3_100066c4 = icmp eq i32 %v3_100066c0, 0
  br i1 %v3_100066c4, label %dec_label_pc_100066d0, label %dec_label_pc_100066cc

dec_label_pc_100066cc:                            ; preds = %dec_label_pc_100066c0
  store i32 268461776, i32* @lr, align 4
  %v0_100066cc = call i32 @function_1000a1b8()
  %v0_100066d0.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_100066d0

dec_label_pc_100066d0:                            ; preds = %dec_label_pc_100066c0, %dec_label_pc_100066cc
  %v0_100066d0 = phi i32 [ %v0_1000654c, %dec_label_pc_100066c0 ], [ %v0_100066d0.pre, %dec_label_pc_100066cc ]
  store i32 %v0_100066d0, i32* @r3, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 268461788, i32* @lr, align 4
  %v0_100066d8 = call i32 @function_1000a1b8()
  br label %dec_label_pc_10006558

dec_label_pc_100066e0:                            ; preds = %dec_label_pc_10006610
  %v2_100066e0 = add i32 %v1_100066e0, %v0_10006644116
  store i32 %v2_100066e0, i32* %r10.global-to-local, align 4
  %v1_100066e4 = add i32 %v0_100066e4, 1
  store i32 %v1_100066e4, i32* %r9.global-to-local, align 4
  %v1_100065f8 = inttoptr i32 %v1_100066e4 to i8*
  %v2_100065f8 = load i8, i8* %v1_100065f8, align 1
  %v3_100065f8 = zext i8 %v2_100065f8 to i32
  store i32 %v3_100065f8, i32* %r0.global-to-local, align 4
  %v1_100065fc = xor i32 %v0_100065fc28, 1
  store i32 %v1_100065fc, i32* %r11.global-to-local, align 4
  %v3_10006600 = icmp eq i8 %v2_100065f8, 0
  br i1 %v3_10006600, label %dec_label_pc_10006644, label %dec_label_pc_10006610.preheader

dec_label_pc_100066ec:                            ; preds = %dec_label_pc_10006680
  %v2_100066ec = add i32 %v1_100066ec, %v0_100066b4130
  %v1_100066f0 = add i32 %v0_100066f0, 1
  store i32 %v1_100066f0, i32* %r9.global-to-local, align 4
  %v1_10006668 = inttoptr i32 %v1_100066f0 to i8*
  %v2_10006668 = load i8, i8* %v1_10006668, align 1
  %v3_10006668 = zext i8 %v2_10006668 to i32
  store i32 %v3_10006668, i32* %r0.global-to-local, align 4
  %v1_1000666c = xor i32 %v0_1000666c38, 1
  store i32 %v1_1000666c, i32* %r11.global-to-local, align 4
  %v3_10006670 = icmp eq i8 %v2_10006668, 0
  %v1_10006674 = mul nuw nsw i32 %v3_10006668, 256
  store i32 %v1_10006674, i32* %r10.global-to-local, align 4
  br i1 %v3_10006670, label %dec_label_pc_100066b4, label %dec_label_pc_10006680.preheader

dec_label_pc_100066f8:                            ; preds = %dec_label_pc_10006644
  %v1_100066f8 = add i32 %v2_10006648, 2
  %v2_100066f8 = inttoptr i32 %v1_100066f8 to i16*
  %v3_100066f8 = load i16, i16* %v2_100066f8, align 2
  %v4_100066f8 = zext i16 %v3_100066f8 to i32
  store i32 %v4_100066f8, i32* %r0.global-to-local, align 4
  %v3_100066fc = icmp eq i16 %v3_100066f8, 1
  br i1 %v3_100066fc, label %dec_label_pc_10006704, label %dec_label_pc_1000665c

dec_label_pc_10006704:                            ; preds = %dec_label_pc_100066f8
  %v1_10006704 = add i32 %v2_10006648, 8
  %v2_10006704 = inttoptr i32 %v1_10006704 to i16*
  %v3_10006704 = load i16, i16* %v2_10006704, align 2
  %v4_10006704 = zext i16 %v3_10006704 to i32
  store i32 %v4_10006704, i32* %r0.global-to-local, align 4
  %v3_10006708 = icmp eq i16 %v3_10006704, 4
  br i1 %v3_10006708, label %dec_label_pc_10006710, label %dec_label_pc_10006764

dec_label_pc_10006710:                            ; preds = %dec_label_pc_10006704
  %v2_10006710 = inttoptr i32 %v1_10006650 to i8*
  %v3_10006710 = load i8, i8* %v2_10006710, align 1
  %v4_10006710 = zext i8 %v3_10006710 to i32
  store i32 %v4_10006710, i32* %r0.global-to-local, align 4
  store i32 %v4_10006710, i32* %stack_var_-4312, align 4
  %v1_10006718 = add i32 %v2_10006648, 11
  %v2_10006718 = inttoptr i32 %v1_10006718 to i8*
  %v3_10006718 = load i8, i8* %v2_10006718, align 1
  %v4_10006718 = zext i8 %v3_10006718 to i32
  store i32 %v4_10006718, i32* %r9.global-to-local, align 4
  %v1_10006720 = add i32 %v2_10006648, 12
  %v2_10006720 = inttoptr i32 %v1_10006720 to i8*
  %v3_10006720 = load i8, i8* %v2_10006720, align 1
  %v4_10006720 = zext i8 %v3_10006720 to i32
  store i32 %v4_10006720, i32* %r0.global-to-local, align 4
  %v1_10006728 = add i32 %v2_10006648, 13
  %v2_10006728 = inttoptr i32 %v1_10006728 to i8*
  %v3_10006728 = load i8, i8* %v2_10006728, align 1
  %v4_10006728 = zext i8 %v3_10006728 to i32
  store i32 %v4_10006728, i32* %r9.global-to-local, align 4
  %v0_10006730 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006730 = inttoptr i32 %v0_10006730 to i8*
  %v2_10006730 = load i8, i8* %v1_10006730, align 1
  %v3_10006730 = zext i8 %v2_10006730 to i32
  %v1_10006734 = add i32 %v0_10006730, 4
  %v2_10006734 = inttoptr i32 %v1_10006734 to i32*
  %v3_10006734 = load i32, i32* %v2_10006734, align 4
  %v1_10006738 = mul nuw nsw i32 %v3_10006730, 4
  %v1_1000673c = add nuw nsw i32 %v1_10006738, 4
  store i32 268461892, i32* @lr, align 4
  %v3_10006740 = sext i8 %v3_10006728 to i32
  %v4_10006740 = call i32 @function_1000a2b8(i32 %v3_10006734, i32 %v1_1000673c, i32 %v3_10006740)
  %v0_10006744 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006744 = inttoptr i32 %v0_10006744 to i8*
  %v2_10006744 = load i8, i8* %v1_10006744, align 1
  %v3_10006744 = zext i8 %v2_10006744 to i32
  %v3_10006748 = load i32, i32* %stack_var_-4312, align 4
  store i32 %v3_10006748, i32* %r0.global-to-local, align 4
  %v1_1000674c = add nuw nsw i32 %v3_10006744, 1
  store i32 %v1_1000674c, i32* %r11.global-to-local, align 4
  %v1_10006750 = mul nuw nsw i32 %v3_10006744, 4
  store i32 %v1_10006750, i32* %r9.global-to-local, align 4
  %v3_10006754 = add i32 %v1_10006750, %v4_10006740
  %v4_10006754 = inttoptr i32 %v3_10006754 to i32*
  store i32 %v3_10006748, i32* %v4_10006754, align 4
  %v0_10006758 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006758 = trunc i32 %v0_10006758 to i8
  %v2_10006758 = load i32, i32* %r25.global-to-local, align 4
  %v3_10006758 = inttoptr i32 %v2_10006758 to i8*
  store i8 %v1_10006758, i8* %v3_10006758, align 1
  %v1_1000675c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000675c = add i32 %v1_1000675c, 4
  %v3_1000675c = inttoptr i32 %v2_1000675c to i32*
  store i32 %v4_10006740, i32* %v3_1000675c, align 4
  %v0_10006760 = load i32, i32* @r31, align 4
  %v1_10006760 = add i32 %v0_10006760, 8
  %v2_10006760 = inttoptr i32 %v1_10006760 to i16*
  %v3_10006760 = load i16, i16* %v2_10006760, align 2
  %v4_10006760 = zext i16 %v3_10006760 to i32
  store i32 %v4_10006760, i32* %r0.global-to-local, align 4
  %v0_10006768.pre = load i32, i32* @r29, align 4
  %v0_100065d4.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10006764

dec_label_pc_10006764:                            ; preds = %dec_label_pc_10006704, %dec_label_pc_10006710
  %v0_100065d4.pre = phi i32 [ %v0_100065d449, %dec_label_pc_10006704 ], [ %v0_100065d4.pre.pre, %dec_label_pc_10006710 ]
  %v0_10006768 = phi i32 [ %v1_10006650, %dec_label_pc_10006704 ], [ %v0_10006768.pre, %dec_label_pc_10006710 ]
  %v0_10006764 = phi i32 [ %v4_10006704, %dec_label_pc_10006704 ], [ %v4_10006760, %dec_label_pc_10006710 ]
  store i32 %v0_10006764, i32* %r0.global-to-local, align 4
  %v2_10006768 = add i32 %v0_10006764, %v0_10006768
  br label %dec_label_pc_100065d4.backedge

dec_label_pc_10006304.preheader.thread:           ; preds = %dec_label_pc_10006260
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100063041355 = or i32 %v2_100062cc, 1
  store i32 %v1_100063041355, i32* %r11.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006334

; uselistorder directives
  uselistorder i32 %v1_10006750, { 1, 0 }
  uselistorder i32 %v4_10006740, { 1, 0 }
  uselistorder i32 %v1_1000666c, { 1, 0 }
  uselistorder i8 %v2_10006668, { 2, 3, 1, 0 }
  uselistorder i32 %v1_100066f0, { 1, 2, 0 }
  uselistorder i32 %v2_100066ec, { 1, 0 }
  uselistorder i32 %v1_100065fc, { 1, 0 }
  uselistorder i32 %v3_100065f8, { 1, 0 }
  uselistorder i8 %v2_100065f8, { 2, 3, 1, 0 }
  uselistorder i32 %v1_100066e4, { 1, 2, 0 }
  uselistorder i32 %v2_100066e0, { 2, 1, 0 }
  uselistorder i32 %v1_100065dc, { 1, 0, 2 }
  uselistorder i8 %v2_100066a0, { 2, 3, 0, 1 }
  uselistorder i32 %v2_1000669c, { 1, 2, 0 }
  uselistorder i32 %v0_1000666c38, { 2, 0, 1 }
  uselistorder i32 %v0_100066b4130, { 1, 0 }
  uselistorder i32 %v1_10006674128, { 1, 0 }
  uselistorder i32 %v1_10006650, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %v3_10006630, { 1, 0 }
  uselistorder i8 %v2_10006630, { 2, 3, 0, 1 }
  uselistorder i32 %v2_1000662c, { 1, 2, 0 }
  uselistorder i32 %v0_100065fc28, { 2, 0, 1 }
  uselistorder i32 %v0_10006644116, { 1, 0 }
  uselistorder i32 %v0_10006648, { 2, 0, 1, 3 }
  uselistorder i32 %v1_100065dc9, { 2, 1, 0 }
  uselistorder i32 %v0_1000654c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1000653c, { 1, 0 }
  uselistorder i32 %v1_100064e8, { 1, 0 }
  uselistorder i32 %v4_100064e4, { 1, 0 }
  uselistorder i32 %v1_100064e4, { 1, 2, 0 }
  uselistorder i32 %v3_100064e0, { 2, 1, 0 }
  uselistorder i32 %v1_10006494, { 1, 0 }
  uselistorder i32 %v0_10006494, { 1, 0 }
  uselistorder i32 %v1_10006484, { 1, 0 }
  uselistorder i32 %v1_10006480, { 1, 0 }
  uselistorder i8 %v2_1000630c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10006308, { 1, 0 }
  uselistorder i32 %v0_10006300, { 0, 3, 2, 1 }
  uselistorder i32 %v1_100062d0, { 0, 2, 1 }
  uselistorder i32 %v2_100062cc, { 2, 0, 1, 4, 3, 5 }
  uselistorder i32 %v0_10006268, { 1, 0 }
  uselistorder i16* %stack_var_-2108, { 1, 0 }
  uselistorder i16 %tmp60, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 0, 11, 12, 16, 13, 21, 22, 14, 15, 17, 18, 20, 19 }
  uselistorder i32* %r28.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r25.global-to-local, { 1, 2, 4, 3, 0, 6, 5, 7 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 5, 7, 4, 15, 6, 14, 8, 9, 10, 12, 13, 11, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 11, 3, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 2, 3, 5, 6, 7, 8, 10, 13, 14, 9, 30, 11, 12, 29, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 8, 9, 3, 4, 6, 5, 1, 7 }
  uselistorder i8 -65, { 2, 0, 3, 1 }
  uselistorder i32 65535, { 52, 53, 19, 20, 54, 55, 9, 8, 7, 56, 57, 21, 22, 23, 10, 11, 58, 24, 59, 25, 60, 0, 12, 61, 62, 26, 27, 28, 63, 64, 65, 66, 67, 68, 29, 30, 1, 13, 69, 70, 31, 32, 33, 34, 2, 14, 71, 72, 35, 36, 37, 38, 39, 73, 15, 40, 41, 74, 16, 42, 43, 75, 76, 77, 78, 79, 80, 44, 45, 3, 17, 81, 82, 5, 46, 47, 48, 4, 18, 83, 84, 6, 49, 50, 51 }
  uselistorder i32 (i32)* @function_1000a8e4, { 6, 10, 9, 8, 7, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009d38, { 4, 8, 7, 6, 5, 3, 2, 1, 0 }
  uselistorder i16 1, { 2, 3, 0, 1, 4 }
  uselistorder i32 53, { 1, 0 }
  uselistorder label %dec_label_pc_10006764, { 1, 0 }
  uselistorder label %dec_label_pc_100066d0, { 1, 0 }
  uselistorder label %dec_label_pc_100065d4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_100066b4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10006680, { 1, 0 }
  uselistorder label %dec_label_pc_10006680.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006644, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10006610, { 1, 0 }
  uselistorder label %dec_label_pc_10006610.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100065ec, { 1, 0 }
  uselistorder label %dec_label_pc_10006558, { 1, 0 }
  uselistorder label %dec_label_pc_10006544, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10006524, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000647c.dec_label_pc_1000647c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100063f8, { 1, 0 }
  uselistorder label %dec_label_pc_10006334, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000630c, { 1, 0 }
}

define i32 @function_1000677c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000677c:
  %v3_10006790 = load i32, i32* @global_var_1001c238.122, align 4
  store i32 268461976, i32* @lr, align 4
  %v2_10006794 = call i32 @function_100091bc(i32 %v3_10006790, i32 9)
  ret i32 %v2_10006794
}

define i32 @function_100067a8() local_unnamed_addr {
dec_label_pc_100067a8:
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_100067b0 = load i32, i32* @r31, align 4
  %v0_100067b4 = load i32, i32* @r3, align 4
  store i32 %v0_100067b4, i32* @r31, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_100067c4 = add i32 %v0_100067b4, 4
  %v2_100067c4 = inttoptr i32 %v1_100067c4 to i32*
  %v3_100067c4 = load i32, i32* %v2_100067c4, align 4
  %v3_100067cc = icmp eq i32 %v3_100067c4, -1
  br i1 %v3_100067cc, label %dec_label_pc_100067e4, label %dec_label_pc_100067e0

dec_label_pc_100067e0:                            ; preds = %dec_label_pc_100067a8
  store i32 268462052, i32* @lr, align 4
  %v0_100067e0 = call i32 @function_1000909c()
  br label %dec_label_pc_100067e4

dec_label_pc_100067e4:                            ; preds = %dec_label_pc_100067a8, %dec_label_pc_100067e0
  store i32 268462068, i32* @lr, align 4
  %v3_100067f0 = call i32 @function_10009dec(i32 2, i32 1, i32 0)
  store i32 356, i32* @r4, align 4
  %v0_100067fc = load i32, i32* @r31, align 4
  %v1_100067fc = add i32 %v0_100067fc, 28
  store i32 %v1_100067fc, i32* @r3, align 4
  %v3_10006800 = icmp eq i32 %v3_100067f0, -1
  %v2_10006804 = add i32 %v0_100067fc, 4
  %v3_10006804 = inttoptr i32 %v2_10006804 to i32*
  store i32 %v3_100067f0, i32* %v3_10006804, align 4
  br i1 %v3_10006800, label %dec_label_pc_100067e4.dec_label_pc_1000687c_crit_edge, label %dec_label_pc_1000680c

dec_label_pc_100067e4.dec_label_pc_1000687c_crit_edge: ; preds = %dec_label_pc_100067e4
  %v0_10006890.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000687c

dec_label_pc_1000680c:                            ; preds = %dec_label_pc_100067e4
  %v0_1000680c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000680c = load i32, i32* @r31, align 4
  %v2_1000680c = add i32 %v1_1000680c, 24
  %v3_1000680c = inttoptr i32 %v2_1000680c to i32*
  store i32 %v0_1000680c, i32* %v3_1000680c, align 4
  store i32 268462100, i32* @lr, align 4
  %v0_10006810 = call i32 @function_10008984()
  %v0_10006814 = load i32, i32* @r31, align 4
  %v1_10006814 = add i32 %v0_10006814, 4
  %v2_10006814 = inttoptr i32 %v1_10006814 to i32*
  %v3_10006814 = load i32, i32* %v2_10006814, align 4
  store i32 %v3_10006814, i32* %r29.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 268462124, i32* @lr, align 4
  %v2_10006828 = call i32 @function_10008fb4(i32 %v3_10006814)
  store i32 4, i32* @r4, align 4
  store i32 268462144, i32* @lr, align 4
  %v2_1000683c = call i32 @function_10008fb4(i32 %v3_10006814)
  %v3_10006844 = load i32, i32* @global_var_1001c22c.123, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_1000684c = load i32, i32* @r31, align 4
  %v2_10006854 = add i32 %v0_1000684c, 8
  %v3_10006854 = inttoptr i32 %v2_10006854 to i32*
  store i32 %v3_10006844, i32* %v3_10006854, align 4
  %v0_1000685c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000685c = load i32, i32* @r31, align 4
  %v2_1000685c = add i32 %v1_1000685c, 12
  %v3_1000685c = inttoptr i32 %v2_1000685c to i32*
  store i32 %v0_1000685c, i32* %v3_1000685c, align 4
  %v0_10006864 = load i32, i32* @r31, align 4
  %v1_10006864 = add i32 %v0_10006864, 4
  %v2_10006864 = inttoptr i32 %v1_10006864 to i32*
  %v3_10006864 = load i32, i32* %v2_10006864, align 4
  store i32 %v3_10006864, i32* @r3, align 4
  %v1_10006868 = add i32 %v0_10006864, 16
  %v2_10006868 = inttoptr i32 %v1_10006868 to i32*
  %v3_10006868 = load i32, i32* %v2_10006868, align 4
  store i32 %v3_10006868, i32* %r9.global-to-local, align 4
  store i32 268462204, i32* @lr, align 4
  %v0_10006878 = call i32 @function_10009bec()
  br label %dec_label_pc_1000687c

dec_label_pc_1000687c:                            ; preds = %dec_label_pc_100067e4.dec_label_pc_1000687c_crit_edge, %dec_label_pc_1000680c
  %v0_10006890 = phi i32 [ %v0_10006890.pre, %dec_label_pc_100067e4.dec_label_pc_1000687c_crit_edge ], [ %v0_10006878, %dec_label_pc_1000680c ]
  store i32 %v0_100067b0, i32* @r31, align 4
  ret i32 %v0_10006890

; uselistorder directives
  uselistorder i32 ()* @function_10008984, { 8, 7, 2, 1, 0, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_1000687c, { 1, 0 }
  uselistorder label %dec_label_pc_100067e4, { 1, 0 }
}

define i32 @function_10006894(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10006894:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10006898 = load i32, i32* @lr, align 4
  store i32 %v0_10006898, i32* %r0.global-to-local, align 4
  %v3_100068a4 = load i32, i32* @global_var_1001c220.124, align 4
  %v1_100068b0 = mul i32 %v3_100068a4, 16
  store i32 %v1_100068b0, i32* %r9.global-to-local, align 4
  %v0_100068b4 = load i32, i32* @r28, align 4
  %v3_100068bc = load i32, i32* @global_var_1001c224.125, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  %v1_100068c8 = add i32 %v1_100068b0, 16
  %v0_100068e0 = load i32, i32* @r29, align 4
  %v0_100068e4 = load i32, i32* @r30, align 4
  store i32 268462320, i32* @lr, align 4
  %v3_100068ec = call i32 @function_1000a2b8(i32 %v3_100068bc, i32 %v1_100068c8, i32 %v1_100068b0)
  store i32 %v3_100068ec, i32* %r25.global-to-local, align 4
  %v0_100068f4 = load i32, i32* @r28, align 4
  store i32 %v3_100068ec, i32* @global_var_1001c224.125, align 4
  %v3_100068fc = load i32, i32* @global_var_1001c220.124, align 4
  store i32 %v3_100068fc, i32* %r24.global-to-local, align 4
  store i32 268462340, i32* @lr, align 4
  %v1_10006900 = inttoptr i32 %v0_100068f4 to i8*
  %v2_10006900 = call i32 @function_100088dc(i8* %v1_10006900)
  %sext = mul i32 %v2_10006900, 16777216
  %v1_10006904 = sdiv i32 %sext, 16777216
  %v2_10006904 = add nsw i32 %v1_10006904, 1
  store i32 %v2_10006904, i32* @r29, align 4
  store i32 %v1_10006904, i32* @r30, align 4
  store i32 %v2_10006904, i32* @r3, align 4
  store i32 268462356, i32* @lr, align 4
  %v0_10006910 = call i32 @function_10009ff0()
  %v0_10006914 = load i32, i32* @r28, align 4
  %v0_10006918 = load i32, i32* @r29, align 4
  store i32 %v0_10006910, i32* %r31.global-to-local, align 4
  store i32 268462372, i32* @lr, align 4
  %v3_10006920 = call i32 @function_10008960(i32 %v0_10006914, i32 %v0_10006918, i32 %v0_10006918)
  %v0_10006924 = load i32, i32* @r30, align 4
  %tmp21 = icmp slt i32 %v0_10006924, 1
  %extract.t6 = trunc i32 %v0_10006924 to i8
  br i1 %tmp21, label %dec_label_pc_10006948, label %dec_label_pc_1000692c

dec_label_pc_1000692c:                            ; preds = %dec_label_pc_10006894
  store i32 %v0_10006924, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006934

dec_label_pc_10006934:                            ; preds = %dec_label_pc_10006934, %dec_label_pc_1000692c
  %v1_1000693c = phi i32 [ %v1_10006940, %dec_label_pc_10006934 ], [ 0, %dec_label_pc_1000692c ]
  %v1_10006934 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006934 = add i32 %v1_10006934, %v1_1000693c
  %v3_10006934 = inttoptr i32 %v2_10006934 to i8*
  %v4_10006934 = load i8, i8* %v3_10006934, align 1
  %v5_10006934 = zext i8 %v4_10006934 to i32
  %v1_10006938 = xor i32 %v5_10006934, 84
  store i32 %v1_10006938, i32* %r0.global-to-local, align 4
  %v3_1000693c = trunc i32 %v1_10006938 to i8
  store i8 %v3_1000693c, i8* %v3_10006934, align 1
  %v0_10006940 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006940 = add i32 %v0_10006940, 1
  store i32 %v1_10006940, i32* %r9.global-to-local, align 4
  %v0_10006944 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006944 = add i32 %v0_10006944, -1
  store i32 %v1_10006944, i32* %ctr.global-to-local, align 4
  %v2_10006944 = icmp eq i32 %v1_10006944, 0
  br i1 %v2_10006944, label %dec_label_pc_10006948.loopexit, label %dec_label_pc_10006934

dec_label_pc_10006948.loopexit:                   ; preds = %dec_label_pc_10006934
  %v0_10006960.pre = load i32, i32* @r30, align 4
  %extract.t = trunc i32 %v0_10006960.pre to i8
  br label %dec_label_pc_10006948

dec_label_pc_10006948:                            ; preds = %dec_label_pc_10006948.loopexit, %dec_label_pc_10006894
  %v0_10006960.off0 = phi i8 [ %extract.t, %dec_label_pc_10006948.loopexit ], [ %extract.t6, %dec_label_pc_10006894 ]
  %v3_10006948 = load i32, i32* @global_var_1001c220.124, align 4
  %v0_1000694c = load i32, i32* %r23.global-to-local, align 4
  %v3_10006950 = load i32, i32* @global_var_1001c224.125, align 4
  %v1_10006954 = mul i32 %v3_10006948, 16
  %v2_10006958 = add i32 %v3_10006950, %v1_10006954
  store i32 %v2_10006958, i32* %r9.global-to-local, align 4
  %v0_1000695c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000695c = mul i32 %v0_1000695c, 16
  store i32 %v1_1000695c, i32* %r0.global-to-local, align 4
  %v3_10006960 = add i32 %v2_10006958, 12
  %v4_10006960 = inttoptr i32 %v3_10006960 to i8*
  store i8 %v0_10006960.off0, i8* %v4_10006960, align 1
  %v0_10006964 = load i32, i32* %r31.global-to-local, align 4
  %v1_10006964 = load i32, i32* %r25.global-to-local, align 4
  %v2_10006964 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006964 = add i32 %v2_10006964, %v1_10006964
  %v4_10006964 = inttoptr i32 %v3_10006964 to i32*
  store i32 %v0_10006964, i32* %v4_10006964, align 4
  %v3_10006968 = load i32, i32* @global_var_1001c220.124, align 4
  store i32 %v3_10006968, i32* @r30, align 4
  %v3_1000696c = load i32, i32* @global_var_1001c224.125, align 4
  store i32 %v3_1000696c, i32* %r25.global-to-local, align 4
  store i32 268462452, i32* @lr, align 4
  %v1_10006970 = inttoptr i32 %v0_1000694c to i8*
  %v2_10006970 = call i32 @function_100088dc(i8* %v1_10006970)
  %sext1 = mul i32 %v2_10006970, 16777216
  %v1_10006974 = sdiv i32 %sext1, 16777216
  %v2_10006974 = add nsw i32 %v1_10006974, 1
  store i32 %v2_10006974, i32* @r29, align 4
  store i32 %v1_10006974, i32* @r28, align 4
  store i32 %v2_10006974, i32* @r3, align 4
  store i32 268462468, i32* @lr, align 4
  %v0_10006980 = call i32 @function_10009ff0()
  %v0_10006984 = load i32, i32* %r23.global-to-local, align 4
  %v0_10006988 = load i32, i32* @r29, align 4
  store i32 %v0_10006980, i32* %r31.global-to-local, align 4
  store i32 268462484, i32* @lr, align 4
  %v3_10006990 = call i32 @function_10008960(i32 %v0_10006984, i32 %v0_10006988, i32 %v0_10006988)
  %v0_10006994 = load i32, i32* @r28, align 4
  %tmp22 = icmp slt i32 %v0_10006994, 1
  %extract.t8 = trunc i32 %v0_10006994 to i8
  br i1 %tmp22, label %dec_label_pc_100069b8, label %dec_label_pc_1000699c

dec_label_pc_1000699c:                            ; preds = %dec_label_pc_10006948
  store i32 %v0_10006994, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100069a4

dec_label_pc_100069a4:                            ; preds = %dec_label_pc_100069a4, %dec_label_pc_1000699c
  %v1_100069ac = phi i32 [ %v1_100069b0, %dec_label_pc_100069a4 ], [ 0, %dec_label_pc_1000699c ]
  %v1_100069a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100069a4 = add i32 %v1_100069a4, %v1_100069ac
  %v3_100069a4 = inttoptr i32 %v2_100069a4 to i8*
  %v4_100069a4 = load i8, i8* %v3_100069a4, align 1
  %v5_100069a4 = zext i8 %v4_100069a4 to i32
  %v1_100069a8 = xor i32 %v5_100069a4, 84
  store i32 %v1_100069a8, i32* %r0.global-to-local, align 4
  %v3_100069ac = trunc i32 %v1_100069a8 to i8
  store i8 %v3_100069ac, i8* %v3_100069a4, align 1
  %v0_100069b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100069b0 = add i32 %v0_100069b0, 1
  store i32 %v1_100069b0, i32* %r9.global-to-local, align 4
  %v0_100069b4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100069b4 = add i32 %v0_100069b4, -1
  store i32 %v1_100069b4, i32* %ctr.global-to-local, align 4
  %v2_100069b4 = icmp eq i32 %v1_100069b4, 0
  br i1 %v2_100069b4, label %dec_label_pc_100069b8.loopexit, label %dec_label_pc_100069a4

dec_label_pc_100069b8.loopexit:                   ; preds = %dec_label_pc_100069a4
  %v0_100069cc.pre = load i32, i32* @r28, align 4
  %extract.t7 = trunc i32 %v0_100069cc.pre to i8
  br label %dec_label_pc_100069b8

dec_label_pc_100069b8:                            ; preds = %dec_label_pc_100069b8.loopexit, %dec_label_pc_10006948
  %v0_100069cc.off0 = phi i8 [ %extract.t7, %dec_label_pc_100069b8.loopexit ], [ %extract.t8, %dec_label_pc_10006948 ]
  %v3_100069b8 = load i32, i32* @global_var_1001c220.124, align 4
  %v3_100069c0 = load i32, i32* @global_var_1001c224.125, align 4
  %v1_100069c4 = mul i32 %v3_100069b8, 16
  %v2_100069c8 = or i32 %v1_100069c4, 13
  %v3_100069cc = add i32 %v2_100069c8, %v3_100069c0
  %v4_100069cc = inttoptr i32 %v3_100069cc to i8*
  store i8 %v0_100069cc.off0, i8* %v4_100069cc, align 1
  %v0_100069d0 = load i32, i32* @r30, align 4
  %v1_100069d0 = mul i32 %v0_100069d0, 16
  %v1_100069d4 = load i32, i32* %r25.global-to-local, align 4
  %v2_100069d4 = add i32 %v1_100069d4, %v1_100069d0
  store i32 %v2_100069d4, i32* %r9.global-to-local, align 4
  %v3_100069d8 = load i32, i32* @global_var_1001c220.124, align 4
  %v3_100069dc = load i32, i32* @global_var_1001c224.125, align 4
  %v1_100069e0 = mul i32 %v3_100069d8, 16
  %v3_100069e4 = load i16, i16* @global_var_1001c228.126, align 2
  %v4_100069e4 = zext i16 %v3_100069e4 to i32
  store i32 %v4_100069e4, i32* %r7.global-to-local, align 4
  %v2_100069e8 = add i32 %v3_100069dc, %v1_100069e0
  store i32 %v2_100069e8, i32* %r11.global-to-local, align 4
  store i32 %v0_10006898, i32* %r0.global-to-local, align 4
  %v1_100069f0 = add i32 %v3_100069d8, 1
  store i32 %v1_100069f0, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_1001c228.126 to i32), i32* %r8.global-to-local, align 4
  %v0_100069f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100069f8 = add i32 %v2_100069d4, 4
  %v3_100069f8 = inttoptr i32 %v2_100069f8 to i32*
  store i32 %v0_100069f8, i32* %v3_100069f8, align 4
  %v0_10006a00 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006a00, i32* @global_var_1001c220.124, align 4
  store i32 %v0_100068b4, i32* @r28, align 4
  store i32 %v0_100068e0, i32* @r29, align 4
  store i32 %v0_100068e4, i32* @r30, align 4
  %v0_10006a30 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006a30 = trunc i32 %v0_10006a30 to i16
  %v2_10006a30 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006a30 = add i32 %v2_10006a30, 10
  %v4_10006a30 = inttoptr i32 %v3_10006a30 to i16*
  store i16 %v1_10006a30, i16* %v4_10006a30, align 2
  %v0_10006a34 = load i32, i32* %r7.global-to-local, align 4
  %v1_10006a34 = trunc i32 %v0_10006a34 to i16
  %v2_10006a34 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006a34 = add i32 %v2_10006a34, 8
  %v4_10006a34 = inttoptr i32 %v3_10006a34 to i16*
  store i16 %v1_10006a34, i16* %v4_10006a34, align 2
  %v0_10006a38 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006a38 = trunc i32 %v0_10006a38 to i16
  store i16 %v1_10006a38, i16* @global_var_1001c228.126, align 2
  ret i32 %v3_10006990

; uselistorder directives
  uselistorder i32 %v3_100069d8, { 1, 0 }
  uselistorder i32 %v1_100069b4, { 1, 0 }
  uselistorder i32 %v1_100069b0, { 1, 0 }
  uselistorder i32 %v0_10006994, { 1, 0, 2 }
  uselistorder i32 %v1_10006944, { 1, 0 }
  uselistorder i32 %v1_10006940, { 1, 0 }
  uselistorder i32 %v0_10006924, { 1, 0, 2 }
  uselistorder i32 %v1_100068b0, { 2, 1, 0 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i8*)* @function_100088dc, { 0, 1, 3, 4, 5, 6, 7, 28, 2, 22, 23, 24, 25, 26, 27, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 (i32, i32, i32)* @function_1000a2b8, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10006a40(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006a40:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r14.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i16 @__decompiler_undefined_function_1()
  %tmp54 = call i16 @__decompiler_undefined_function_1()
  %tmp55 = call i8 @__decompiler_undefined_function_2()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1912 = alloca i32, align 4
  %stack_var_-1920 = alloca i32, align 4
  %stack_var_-1908 = alloca i32, align 4
  %stack_var_-1744 = alloca i32, align 4
  %stack_var_-1872 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1888 = alloca i32, align 4
  %stack_var_-1928 = alloca i32, align 4
  %stack_var_-1916 = alloca i64, align 8
  %v0_10006a40 = load i32, i32* @lr, align 4
  store i32 %v0_10006a40, i32* %r0.global-to-local, align 4
  %v0_10006a48 = call i32 @__asm_mfcr()
  store i32 %v0_10006a48, i32* %r3.global-to-local, align 4
  %v0_10006a4c = load i32, i32* %r14.global-to-local, align 4
  %v0_10006a80 = load i32, i32* @r27, align 4
  %v0_10006a84 = load i32, i32* @r28, align 4
  %v0_10006a88 = load i32, i32* @r29, align 4
  %v0_10006a8c = load i32, i32* @r30, align 4
  %v0_10006a94 = load i32, i32* %r0.global-to-local, align 4
  store i32 268462752, i32* @lr, align 4
  %v0_10006a9c = call i32 @function_100090e4()
  store i32 %v0_10006a9c, i32* %r3.global-to-local, align 4
  %v1_10006aa0 = icmp slt i32 %v0_10006a9c, 0
  %v3_10006aa0 = icmp eq i32 %v0_10006a9c, 0
  store i1 %v1_10006aa0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006aa0, i1* %cr7_eq.global-to-local, align 1
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10006a9c, i32* @global_var_1001c238.122, align 4
  %tmp97 = icmp slt i32 %v0_10006a9c, 1
  br i1 %tmp97, label %dec_label_pc_10006b10, label %dec_label_pc_10006ab0

dec_label_pc_10006ab0:                            ; preds = %dec_label_pc_10006b10, %dec_label_pc_10006a40
  store i32 %v0_10006a94, i32* %r0.global-to-local, align 4
  store i32 %v0_10006a4c, i32* %r14.global-to-local, align 4
  %v1_10006ac4 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006a48)
  store i32 %v0_10006a80, i32* %r27.global-to-local, align 4
  store i32 %v0_10006a84, i32* @r28, align 4
  store i32 %v0_10006a88, i32* @r29, align 4
  store i32 %v0_10006a8c, i32* @r30, align 4
  ret i32 %v0_10006a9c

dec_label_pc_10006b10:                            ; preds = %dec_label_pc_10006a40
  %v1_10006b10 = icmp slt i32 %v0_10006a9c, -1
  %v3_10006b10 = icmp eq i32 %v0_10006a9c, -1
  store i1 %v1_10006b10, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b10, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b10, label %dec_label_pc_10006ab0, label %dec_label_pc_10006b18

dec_label_pc_10006b18:                            ; preds = %dec_label_pc_10006b10
  store i32 268462876, i32* @lr, align 4
  %v1_10006b18 = call i32 @function_10008be0(i32 %v0_10006a9c)
  store i32 %v1_10006b18, i32* %r3.global-to-local, align 4
  store i32 %v1_10006b18, i32* @global_var_1001c208.14, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006b28.127 to i32), i32* @lr, align 4
  %v1_10006b24 = call i32 @function_10005f8c(i32 %v1_10006b18)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268462900, i32* @lr, align 4
  %v0_10006b30 = call i32 @function_1000946c()
  store i32 %v0_10006b30, i32* @global_var_1001c22c.123, align 4
  store i32 356, i32* %r3.global-to-local, align 4
  store i32 268462916, i32* @lr, align 4
  %v2_10006b40 = call i32 @function_1000a148(i32 356, i32 388)
  store i32 %v2_10006b40, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_10006b40, i32* @global_var_1001c230.128, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 356, i32* %ctr.global-to-local, align 4
  store i32 %v2_10006b40, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10006b6c = add i32 %v2_10006b40, 4
  store i32 %v1_10006b6c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006b70

dec_label_pc_10006b70:                            ; preds = %dec_label_pc_10006b70.dec_label_pc_10006b70_crit_edge, %dec_label_pc_10006b18
  %v1_10006b78 = phi i32 [ %v1_10006b78.pre, %dec_label_pc_10006b70.dec_label_pc_10006b70_crit_edge ], [ %v1_10006b6c, %dec_label_pc_10006b18 ]
  %v0_10006b78 = phi i32 [ %v0_10006b78.pre, %dec_label_pc_10006b70.dec_label_pc_10006b70_crit_edge ], [ -1, %dec_label_pc_10006b18 ]
  %v0_10006b74 = phi i32 [ %v0_10006b88, %dec_label_pc_10006b70.dec_label_pc_10006b70_crit_edge ], [ 0, %dec_label_pc_10006b18 ]
  %v1_10006b70 = mul i32 %v0_10006b74, 388
  store i32 %v1_10006b70, i32* %r9.global-to-local, align 4
  %v1_10006b74 = add i32 %v0_10006b74, 1
  store i32 %v1_10006b74, i32* %r10.global-to-local, align 4
  %v2_10006b78 = inttoptr i32 %v1_10006b78 to i32*
  store i32 %v0_10006b78, i32* %v2_10006b78, align 4
  %v0_10006b7c = load i32, i32* %r11.global-to-local, align 4
  %v1_10006b7c = add i32 %v0_10006b7c, 388
  store i32 %v1_10006b7c, i32* %r11.global-to-local, align 4
  %v0_10006b80 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006b80 = load i32, i32* %r8.global-to-local, align 4
  %v0_10006b84 = load i32, i32* %r0.global-to-local, align 4
  %v2_10006b80 = add i32 %v0_10006b80, 12
  %v2_10006b84 = add i32 %v2_10006b80, %v1_10006b80
  %v3_10006b84 = inttoptr i32 %v2_10006b84 to i32*
  store i32 %v0_10006b84, i32* %v3_10006b84, align 4
  %v0_10006b88 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006b88, i32* %r9.global-to-local, align 4
  %v0_10006b8c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b8c = add i32 %v0_10006b8c, -1
  store i32 %v1_10006b8c, i32* %ctr.global-to-local, align 4
  %v2_10006b8c = icmp eq i32 %v1_10006b8c, 0
  br i1 %v2_10006b8c, label %dec_label_pc_10006b90, label %dec_label_pc_10006b70.dec_label_pc_10006b70_crit_edge

dec_label_pc_10006b70.dec_label_pc_10006b70_crit_edge: ; preds = %dec_label_pc_10006b70
  %v0_10006b78.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_10006b78.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006b70

dec_label_pc_10006b90:                            ; preds = %dec_label_pc_10006b70
  store i32 356, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i64 356, i64* %stack_var_-1916, align 8
  store i32 268463016, i32* @lr, align 4
  %v3_10006ba4 = call i32 @function_10009dec(i32 2, i32 3, i32 6)
  %v4_10006ba4 = trunc i32 %v3_10006ba4 to i16
  store i32 %v3_10006ba4, i32* %r3.global-to-local, align 4
  %v2_10006ba8 = icmp slt i16 %v4_10006ba4, -1
  %v4_10006ba8 = icmp eq i16 %v4_10006ba4, -1
  store i1 %v2_10006ba8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006ba8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10006ba4, i32* %r29.global-to-local, align 4
  store i32 %v3_10006ba4, i32* @global_var_1001c234.129, align 4
  br i1 %v4_10006ba8, label %dec_label_pc_10007194, label %dec_label_pc_10006bbc

dec_label_pc_10006bbc:                            ; preds = %dec_label_pc_10006b90
  store i32 3, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268463052, i32* @lr, align 4
  %v1_10006bc8 = call i32 @function_10008fb4(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_10006bd0 = or i32 %v1_10006bc8, 2048
  store i32 %v1_10006bd0, i32* %r5.global-to-local, align 4
  %v0_10006bd4 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10006bd4, i32* %r3.global-to-local, align 4
  store i32 268463072, i32* @lr, align 4
  %v2_10006bdc = call i32 @function_10008fb4(i32 %v0_10006bd4)
  %v3_10006be4 = load i32, i32* @global_var_1001c234.129, align 4
  store i32 %v3_10006be4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10006bf4 = ptrtoint i64* %stack_var_-1916 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i64 1, i64* %stack_var_-1916, align 8
  store i32 268463108, i32* @lr, align 4
  %v5_10006c00 = call i32 @function_10009db0(i32 %v3_10006be4, i32 0, i32 3, i32 %v2_10006bf4)
  store i32 %v5_10006c00, i32* %r3.global-to-local, align 4
  %v1_10006c04 = icmp slt i32 %v5_10006c00, 0
  %v3_10006c04 = icmp eq i32 %v5_10006c00, 0
  store i1 %v1_10006c04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c04, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c04, label %dec_label_pc_10006c0c, label %dec_label_pc_1000819c

dec_label_pc_10006c0c:                            ; preds = %dec_label_pc_10006bbc, %dec_label_pc_10006c0c
  %v0_10006c0c = call i32 @function_10005f3c()
  store i32 %v0_10006c0c, i32* %r3.global-to-local, align 4
  %v1_10006c10 = urem i32 %v0_10006c0c, 65536
  store i32 %v1_10006c10, i32* @r20, align 4
  %v1_10006c14 = icmp ult i32 %v1_10006c10, 1023
  %v3_10006c14 = icmp eq i32 %v1_10006c10, 1023
  store i1 %v1_10006c14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c14, i1* %cr7_eq.global-to-local, align 1
  %tmp98 = icmp ult i32 %v1_10006c10, 1024
  br i1 %tmp98, label %dec_label_pc_10006c0c, label %dec_label_pc_10006c1c

dec_label_pc_10006c1c:                            ; preds = %dec_label_pc_10006c0c
  store i32 268566528, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r29.global-to-local, align 4
  %v3_10006c24 = load i32, i32* @global_var_1001c2a0.130, align 4
  store i32 %v3_10006c24, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c2a0.130 to i32), i32* @r21, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c2b4.131 to i32), i32* @r22, align 4
  %v1_10006c34 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10006c34, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r28.global-to-local, align 4
  %v1_10006c3c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10006c3c, i32* %r0.global-to-local, align 4
  store i32 40, i32* %r9.global-to-local, align 4
  store i32 %v1_10006c3c, i32* @global_var_1001c2a0.130, align 4
  store i32 ptrtoint (i32* @global_var_1000bb58.132 to i32), i32* @r28, align 4
  store i16 40, i16* bitcast (i32* @global_var_1001c2a2.133 to i16*), align 4
  %v0_10006c50 = call i32 @function_10005f3c()
  %v1_10006c50 = trunc i32 %v0_10006c50 to i16
  store i32 %v0_10006c50, i32* %r3.global-to-local, align 4
  %v3_10006c54 = load i32, i32* @global_var_1001c2c0.134, align 4
  store i32 %v3_10006c54, i32* %r11.global-to-local, align 4
  store i32 64, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r9.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1001c2a8.135 to i8*), align 4
  %v1_10006c64 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10006c64, i32* %r11.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v0_10006c6c = load i32, i32* %r9.global-to-local, align 4
  %v1_10006c6c = trunc i32 %v0_10006c6c to i8
  store i8 %v1_10006c6c, i8* bitcast (i32* @global_var_1001c2a9.136 to i8*), align 4
  store i16 %v1_10006c50, i16* bitcast (i32* @global_var_1001c2a4.137 to i16*), align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000bb54.138 to i32), i32* @r29, align 4
  store i32 %v1_10006c64, i32* @global_var_1001c2c0.134, align 4
  store i16 23, i16* @global_var_1001c2b6.139, align 2
  store i32 ptrtoint ([8 x i8]* @global_var_1000baf0.140 to i32), i32* @r27, align 4
  %v0_10006c8c = load i32, i32* @r20, align 4
  %v1_10006c8c = trunc i32 %v0_10006c8c to i16
  store i16 %v1_10006c8c, i16* bitcast (i32* @global_var_1001c2b4.131 to i16*), align 4
  %v2_10006c90 = ptrtoint i32* %stack_var_-1928 to i32
  store i32 %v2_10006c90, i32* %r14.global-to-local, align 4
  %v0_10006c94 = call i32 @function_10005f3c()
  %v1_10006c94 = trunc i32 %v0_10006c94 to i16
  %v0_10006c98 = load i32, i32* @r28, align 4
  store i16 %v1_10006c94, i16* bitcast (i32* @global_var_1001c2c2.141 to i16*), align 4
  store i32 4, i32* %r5.global-to-local, align 4
  %v0_10006ca4 = load i32, i32* @r29, align 4
  store i32 %v0_10006ca4, i32* %r3.global-to-local, align 4
  %v3_10006ca8 = load i32, i32* @global_var_1001c2c0.134, align 4
  %v1_10006cac = or i32 %v3_10006ca8, 131072
  store i32 %v1_10006cac, i32* %r0.global-to-local, align 4
  store i32 %v1_10006cac, i32* @global_var_1001c2c0.134, align 4
  store i32 268463288, i32* @lr, align 4
  %v4_10006cb4 = call i32 @function_10006894(i32 %v0_10006ca4, i32 %v0_10006c98, i32 4)
  %v0_10006cc0 = load i32, i32* @r29, align 4
  store i32 %v0_10006cc0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268463308, i32* @lr, align 4
  %v5_10006cc8 = call i32 @function_10006894(i32 %v0_10006cc0, i32 ptrtoint ([5 x i8]* @global_var_1000badc.142 to i32), i32 8)
  %v0_10006cd4 = load i32, i32* @r29, align 4
  store i32 %v0_10006cd4, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268463328, i32* @lr, align 4
  %v5_10006cdc = call i32 @function_10006894(i32 %v0_10006cd4, i32 ptrtoint ([9 x i8]* @global_var_1000bae4.143 to i32), i32 12)
  %v0_10006ce0 = load i32, i32* @r28, align 4
  %v0_10006ce4 = load i32, i32* @r27, align 4
  store i32 %v0_10006ce4, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268463344, i32* @lr, align 4
  %v4_10006cec = call i32 @function_10006894(i32 %v0_10006ce4, i32 %v0_10006ce0, i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1000baf8.144 to i32), i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268463364, i32* @lr, align 4
  %v4_10006d00 = call i32 @function_10006894(i32 ptrtoint ([6 x i8]* @global_var_1000baf8.144 to i32), i32 10, i32 10)
  store i32 9, i32* %r5.global-to-local, align 4
  %v0_10006d10 = load i32, i32* @r29, align 4
  store i32 %v0_10006d10, i32* %r3.global-to-local, align 4
  store i32 268463384, i32* @lr, align 4
  %v5_10006d14 = call i32 @function_10006894(i32 %v0_10006d10, i32 ptrtoint ([6 x i8]* @global_var_1000bb00.145 to i32), i32 9)
  %v0_10006d18 = load i32, i32* @r29, align 4
  store i32 %v0_10006d18, i32* %r3.global-to-local, align 4
  %v0_10006d1c = load i32, i32* @r27, align 4
  store i32 11, i32* %r5.global-to-local, align 4
  store i32 268463400, i32* @lr, align 4
  %v5_10006d24 = call i32 @function_10006894(i32 %v0_10006d18, i32 %v0_10006d1c, i32 11)
  %v0_10006d30 = load i32, i32* @r29, align 4
  store i32 %v0_10006d30, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268463420, i32* @lr, align 4
  %v4_10006d38 = call i32 @function_10006894(i32 %v0_10006d30, i32 ptrtoint (i32* @global_var_1000bb08.146 to i32), i32 17)
  %v0_10006d40 = load i32, i32* @r29, align 4
  store i32 %v0_10006d40, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268463440, i32* @lr, align 4
  %v5_10006d4c = call i32 @function_10006894(i32 %v0_10006d40, i32 ptrtoint ([6 x i8]* @global_var_1000bb18.147 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1000bb20.148 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268463460, i32* @lr, align 4
  %v4_10006d60 = call i32 @function_10006894(i32 ptrtoint ([5 x i8]* @global_var_1000bb20.148 to i32), i32 8, i32 8)
  %v0_10006d6c = load i32, i32* @r27, align 4
  store i32 %v0_10006d6c, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268463480, i32* @lr, align 4
  %v4_10006d74 = call i32 @function_10006894(i32 %v0_10006d6c, i32 ptrtoint (i32* @global_var_1000bb28.149 to i32), i32 15)
  %v0_10006d80 = load i32, i32* @r27, align 4
  store i32 %v0_10006d80, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268463500, i32* @lr, align 4
  %v4_10006d88 = call i32 @function_10006894(i32 %v0_10006d80, i32 ptrtoint (i32* @global_var_1000bb34.150 to i32), i32 15)
  store i32 ptrtoint ([5 x i8]* @global_var_1000bb40.151 to i32), i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268463520, i32* @lr, align 4
  %v4_10006d9c = call i32 @function_10006894(i32 ptrtoint ([5 x i8]* @global_var_1000bb40.151 to i32), i32 9, i32 9)
  %v0_10006da4 = load i32, i32* @r27, align 4
  store i32 %v0_10006da4, i32* %r3.global-to-local, align 4
  store i32 14, i32* %r5.global-to-local, align 4
  store i32 268463540, i32* @lr, align 4
  %v4_10006db0 = call i32 @function_10006894(i32 %v0_10006da4, i32 ptrtoint (i32* @global_var_1000bb48.152 to i32), i32 14)
  store i32 %v4_10006db0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006db4

dec_label_pc_10006db4:                            ; preds = %dec_label_pc_100073ec, %dec_label_pc_10006c1c
  %v3_10006db4 = load i32, i32* @global_var_1001c22c.123, align 4
  store i32 %v3_10006db4, i32* @r31, align 4
  %v0_10006db8 = load i32, i32* @r23, align 4
  %v2_10006db8 = icmp slt i32 %v0_10006db8, %v3_10006db4
  %v4_10006db8 = icmp eq i32 %v0_10006db8, %v3_10006db4
  store i1 %v2_10006db8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006db8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006db8, label %dec_label_pc_10006fd8, label %dec_label_pc_10006dc0

dec_label_pc_10006dc0:                            ; preds = %dec_label_pc_10006db4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006dc4 = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v2_10006dc4, i32* %r28.global-to-local, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 0, i32* @r30, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006dd4

dec_label_pc_10006dd4:                            ; preds = %dec_label_pc_10006f04.dec_label_pc_10006dd4_crit_edge, %dec_label_pc_10006dc0
  %v0_10006dd4 = phi i32 [ %v0_10006dd4.pre, %dec_label_pc_10006f04.dec_label_pc_10006dd4_crit_edge ], [ 0, %dec_label_pc_10006dc0 ]
  store i32 %v0_10006dd4, i32* %stack_var_-1888, align 4
  %v0_10006de4 = call i32 @function_10005f3c()
  %v1_10006de4 = trunc i32 %v0_10006de4 to i16
  store i32 %v0_10006de4, i32* %r3.global-to-local, align 4
  store i16 %v1_10006de4, i16* bitcast (i32* @global_var_1001c2a4.137 to i16*), align 4
  %v3_10006df0 = load i32, i32* @global_var_1001c208.14, align 4
  store i32 %v3_10006df0, i32* %r0.global-to-local, align 4
  store i32 %v3_10006df0, i32* @global_var_1001c2ac.153, align 4
  br label %dec_label_pc_10006df8.preheader

dec_label_pc_10006df8.preheader:                  ; preds = %dec_label_pc_10006dd4, %dec_label_pc_1000719c
  br label %dec_label_pc_10006df8

dec_label_pc_10006df8:                            ; preds = %dec_label_pc_10007238, %dec_label_pc_1000722c, %dec_label_pc_10007220, %dec_label_pc_10007214, %dec_label_pc_10007208, %dec_label_pc_10007200, %dec_label_pc_100071f8, %dec_label_pc_100071f0, %dec_label_pc_100071e4, %dec_label_pc_100071d0, %dec_label_pc_100071c4, %dec_label_pc_100071b0, %dec_label_pc_10006efc, %dec_label_pc_10006ef4, %dec_label_pc_10006eec, %dec_label_pc_10006ee4, %dec_label_pc_10006edc, %dec_label_pc_10006ed4, %dec_label_pc_10006ecc, %dec_label_pc_10006ec4, %dec_label_pc_10006ebc, %dec_label_pc_10006eb4, %dec_label_pc_10006eac, %dec_label_pc_10006e9c, %dec_label_pc_10006e6c, %dec_label_pc_10006e3c, %dec_label_pc_10006e34, %dec_label_pc_10006e24, %dec_label_pc_10006e1c, %dec_label_pc_10006e14, %dec_label_pc_10006df8, %dec_label_pc_10006df8.preheader
  %v0_10006df8 = call i32 @function_10005f3c()
  store i32 %v0_10006df8, i32* %r3.global-to-local, align 4
  %v1_10006dfc = urem i32 %v0_10006df8, 256
  store i32 %v1_10006dfc, i32* %r11.global-to-local, align 4
  %v1_10006e00 = udiv i32 %v0_10006df8, 16777216
  store i32 %v1_10006e00, i32* %r10.global-to-local, align 4
  %v1_10006e04 = icmp ult i32 %v1_10006dfc, 127
  %v3_10006e04 = icmp eq i32 %v1_10006dfc, 127
  store i1 %v1_10006e04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e04, i1* %cr7_eq.global-to-local, align 1
  %v1_10006e08 = call i32 @__asm_rlwinm(i32 %v0_10006df8, i32 24, i32 24, i32 31)
  store i32 %v1_10006e08, i32* @r9, align 4
  %v1_10006e0c = call i32 @__asm_rlwinm(i32 %v0_10006df8, i32 16, i32 24, i32 31)
  store i32 %v1_10006e0c, i32* %r3.global-to-local, align 4
  %v0_10006e10 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006e10, label %dec_label_pc_10006df8, label %dec_label_pc_10006e14

dec_label_pc_10006e14:                            ; preds = %dec_label_pc_10006df8
  %v0_10006e14 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006e14 = icmp slt i32 %v0_10006e14, 0
  %v3_10006e14 = icmp eq i32 %v0_10006e14, 0
  store i1 %v1_10006e14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e14, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e14, label %dec_label_pc_10006df8, label %dec_label_pc_10006e1c

dec_label_pc_10006e1c:                            ; preds = %dec_label_pc_10006e14
  %v1_10006e1c = icmp slt i32 %v0_10006e14, 3
  %v3_10006e1c = icmp eq i32 %v0_10006e14, 3
  store i1 %v1_10006e1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e1c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e1c, label %dec_label_pc_10006df8, label %dec_label_pc_10006e24

dec_label_pc_10006e24:                            ; preds = %dec_label_pc_10006e1c
  %v1_10006e24 = add i32 %v0_10006e14, 241
  %v1_10006e28 = urem i32 %v1_10006e24, 256
  store i32 %v1_10006e28, i32* %r0.global-to-local, align 4
  %v1_10006e2c = icmp eq i32 %v1_10006e28, 0
  %v3_10006e2c = icmp eq i32 %v1_10006e28, 1
  store i1 %v1_10006e2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e2c, i1* %cr7_eq.global-to-local, align 1
  %tmp99 = or i32 %v1_10006e28, 1
  %tmp100 = icmp eq i32 %tmp99, 1
  br i1 %tmp100, label %dec_label_pc_10006df8, label %dec_label_pc_10006e34

dec_label_pc_10006e34:                            ; preds = %dec_label_pc_10006e24
  %v1_10006e34 = icmp slt i32 %v0_10006e14, 56
  %v3_10006e34 = icmp eq i32 %v0_10006e14, 56
  store i1 %v1_10006e34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e34, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e34, label %dec_label_pc_10006df8, label %dec_label_pc_10006e3c

dec_label_pc_10006e3c:                            ; preds = %dec_label_pc_10006e34
  %v1_10006e3c = icmp slt i32 %v0_10006e14, 10
  %v3_10006e3c = icmp eq i32 %v0_10006e14, 10
  store i1 %v1_10006e3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e3c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e3c, label %dec_label_pc_10006df8, label %dec_label_pc_10006e44

dec_label_pc_10006e44:                            ; preds = %dec_label_pc_10006e3c
  %v1_10006e44 = icmp slt i32 %v0_10006e14, 192
  %v3_10006e44 = icmp eq i32 %v0_10006e14, 192
  store i1 %v1_10006e44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e44, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e44, label %dec_label_pc_1000719c, label %dec_label_pc_10006e4c

dec_label_pc_10006e4c:                            ; preds = %dec_label_pc_10006e44
  %v1_10006e4c = icmp slt i32 %v0_10006e14, 172
  %v3_10006e4c = icmp eq i32 %v0_10006e14, 172
  store i1 %v1_10006e4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e4c, label %dec_label_pc_100071a8, label %dec_label_pc_10006e54

dec_label_pc_10006e54:                            ; preds = %dec_label_pc_10006e4c
  %v1_10006e54 = icmp slt i32 %v0_10006e14, 100
  %v3_10006e54 = icmp eq i32 %v0_10006e14, 100
  store i1 %v1_10006e54, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e54, label %dec_label_pc_100071bc, label %dec_label_pc_10006e5c

dec_label_pc_10006e5c:                            ; preds = %dec_label_pc_10006e54
  %v1_10006e5c = icmp slt i32 %v0_10006e14, 169
  %v3_10006e5c = icmp eq i32 %v0_10006e14, 169
  store i1 %v1_10006e5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e5c, label %dec_label_pc_100071d0, label %dec_label_pc_10006e64

dec_label_pc_10006e64:                            ; preds = %dec_label_pc_10006e5c
  %v1_10006e64 = icmp slt i32 %v0_10006e14, 198
  %v3_10006e64 = icmp eq i32 %v0_10006e14, 198
  store i1 %v1_10006e64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e64, label %dec_label_pc_100071dc, label %dec_label_pc_10006e6c

dec_label_pc_10006e6c:                            ; preds = %dec_label_pc_10006e64
  %v1_10006e6c = icmp ult i32 %v0_10006e14, 223
  %v2_10006e6c = icmp ugt i32 %v0_10006e14, 223
  %v3_10006e6c = icmp eq i32 %v0_10006e14, 223
  store i1 %v1_10006e6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006e6c, label %dec_label_pc_10006df8, label %dec_label_pc_10006e74

dec_label_pc_10006e74:                            ; preds = %dec_label_pc_10006e6c
  %v1_10006e74 = icmp slt i32 %v0_10006e14, 106
  %v3_10006e74 = icmp eq i32 %v0_10006e14, 106
  store i1 %v1_10006e74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e74, label %dec_label_pc_100071f0, label %dec_label_pc_10006e7c

dec_label_pc_10006e7c:                            ; preds = %dec_label_pc_10006e74
  %v1_10006e7c = icmp slt i32 %v0_10006e14, 150
  %v3_10006e7c = icmp eq i32 %v0_10006e14, 150
  store i1 %v1_10006e7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e7c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e7c, label %dec_label_pc_10007214, label %dec_label_pc_10006e84

dec_label_pc_10006e84:                            ; preds = %dec_label_pc_10006e7c
  %v1_10006e84 = icmp slt i32 %v0_10006e14, 49
  %v3_10006e84 = icmp eq i32 %v0_10006e14, 49
  store i1 %v1_10006e84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e84, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e84, label %dec_label_pc_10007220, label %dec_label_pc_10006e8c

dec_label_pc_10006e8c:                            ; preds = %dec_label_pc_10006e84
  %v1_10006e8c = icmp slt i32 %v0_10006e14, 178
  %v3_10006e8c = icmp eq i32 %v0_10006e14, 178
  store i1 %v1_10006e8c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e8c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e8c, label %dec_label_pc_1000722c, label %dec_label_pc_10006e94

dec_label_pc_10006e94:                            ; preds = %dec_label_pc_10006e8c
  %v1_10006e94 = icmp slt i32 %v0_10006e14, 160
  %v3_10006e94 = icmp eq i32 %v0_10006e14, 160
  store i1 %v1_10006e94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e94, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e94, label %dec_label_pc_10007238, label %dec_label_pc_10006e9c

dec_label_pc_10006e9c:                            ; preds = %dec_label_pc_10006e94
  %v1_10006e9c = add i32 %v0_10006e14, 250
  %v1_10006ea0 = urem i32 %v1_10006e9c, 256
  store i32 %v1_10006ea0, i32* %r0.global-to-local, align 4
  %v1_10006ea4 = icmp eq i32 %v1_10006ea0, 0
  %v3_10006ea4 = icmp eq i32 %v1_10006ea0, 1
  store i1 %v1_10006ea4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ea4, i1* %cr7_eq.global-to-local, align 1
  %tmp101 = or i32 %v1_10006ea0, 1
  %tmp102 = icmp eq i32 %tmp101, 1
  br i1 %tmp102, label %dec_label_pc_10006df8, label %dec_label_pc_10006eac

dec_label_pc_10006eac:                            ; preds = %dec_label_pc_10006e9c
  %v1_10006eac = icmp slt i32 %v0_10006e14, 11
  %v3_10006eac = icmp eq i32 %v0_10006e14, 11
  store i1 %v1_10006eac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006eac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006eac, label %dec_label_pc_10006df8, label %dec_label_pc_10006eb4

dec_label_pc_10006eb4:                            ; preds = %dec_label_pc_10006eac
  %v1_10006eb4 = icmp slt i32 %v0_10006e14, 21
  %v3_10006eb4 = icmp eq i32 %v0_10006e14, 21
  store i1 %v1_10006eb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006eb4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006eb4, label %dec_label_pc_10006df8, label %dec_label_pc_10006ebc

dec_label_pc_10006ebc:                            ; preds = %dec_label_pc_10006eb4
  %v1_10006ebc = icmp slt i32 %v0_10006e14, 22
  %v3_10006ebc = icmp eq i32 %v0_10006e14, 22
  store i1 %v1_10006ebc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ebc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ebc, label %dec_label_pc_10006df8, label %dec_label_pc_10006ec4

dec_label_pc_10006ec4:                            ; preds = %dec_label_pc_10006ebc
  %v1_10006ec4 = icmp slt i32 %v0_10006e14, 26
  %v3_10006ec4 = icmp eq i32 %v0_10006e14, 26
  store i1 %v1_10006ec4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ec4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ec4, label %dec_label_pc_10006df8, label %dec_label_pc_10006ecc

dec_label_pc_10006ecc:                            ; preds = %dec_label_pc_10006ec4
  %v1_10006ecc = icmp slt i32 %v0_10006e14, 28
  %v3_10006ecc = icmp eq i32 %v0_10006e14, 28
  store i1 %v1_10006ecc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ecc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ecc, label %dec_label_pc_10006df8, label %dec_label_pc_10006ed4

dec_label_pc_10006ed4:                            ; preds = %dec_label_pc_10006ecc
  %v1_10006ed4 = icmp slt i32 %v0_10006e14, 29
  %v3_10006ed4 = icmp eq i32 %v0_10006e14, 29
  store i1 %v1_10006ed4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ed4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ed4, label %dec_label_pc_10006df8, label %dec_label_pc_10006edc

dec_label_pc_10006edc:                            ; preds = %dec_label_pc_10006ed4
  %v1_10006edc = icmp slt i32 %v0_10006e14, 30
  %v3_10006edc = icmp eq i32 %v0_10006e14, 30
  store i1 %v1_10006edc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006edc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006edc, label %dec_label_pc_10006df8, label %dec_label_pc_10006ee4

dec_label_pc_10006ee4:                            ; preds = %dec_label_pc_10006edc
  %v1_10006ee4 = icmp slt i32 %v0_10006e14, 33
  %v3_10006ee4 = icmp eq i32 %v0_10006e14, 33
  store i1 %v1_10006ee4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ee4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ee4, label %dec_label_pc_10006df8, label %dec_label_pc_10006eec

dec_label_pc_10006eec:                            ; preds = %dec_label_pc_10006ee4
  %v1_10006eec = icmp slt i32 %v0_10006e14, 55
  %v3_10006eec = icmp eq i32 %v0_10006e14, 55
  store i1 %v1_10006eec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006eec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006eec, label %dec_label_pc_10006df8, label %dec_label_pc_10006ef4

dec_label_pc_10006ef4:                            ; preds = %dec_label_pc_10006eec
  %v1_10006ef4 = icmp slt i32 %v0_10006e14, 214
  %v3_10006ef4 = icmp eq i32 %v0_10006e14, 214
  store i1 %v1_10006ef4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ef4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ef4, label %dec_label_pc_10006df8, label %dec_label_pc_10006efc

dec_label_pc_10006efc:                            ; preds = %dec_label_pc_10006ef4
  %v1_10006efc = icmp slt i32 %v0_10006e14, 215
  %v3_10006efc = icmp eq i32 %v0_10006e14, 215
  store i1 %v1_10006efc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006efc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006efc, label %dec_label_pc_10006df8, label %dec_label_pc_10006efc.dec_label_pc_10006f04.loopexit_crit_edge

dec_label_pc_10006efc.dec_label_pc_10006f04.loopexit_crit_edge: ; preds = %dec_label_pc_10006efc
  %v0_10006f08.pre.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10006f04

dec_label_pc_10006f04:                            ; preds = %dec_label_pc_10007238, %dec_label_pc_1000722c, %dec_label_pc_10007220, %dec_label_pc_10007214, %dec_label_pc_10007208, %dec_label_pc_100071e4, %dec_label_pc_100071d0, %dec_label_pc_100071c4, %dec_label_pc_100071b0, %dec_label_pc_100071dc, %dec_label_pc_100071bc, %dec_label_pc_100071a8, %dec_label_pc_10006efc.dec_label_pc_10006f04.loopexit_crit_edge, %dec_label_pc_1000719c.dec_label_pc_10006f04_crit_edge
  %v0_10006f10 = phi i32 [ %v0_10006f1014, %dec_label_pc_1000719c.dec_label_pc_10006f04_crit_edge ], [ %v1_10006e0c, %dec_label_pc_10006efc.dec_label_pc_10006f04.loopexit_crit_edge ], [ %v1_10006e0c, %dec_label_pc_100071a8 ], [ %v1_10006e0c, %dec_label_pc_100071bc ], [ %v1_10006e0c, %dec_label_pc_100071dc ], [ %v1_10006e0c, %dec_label_pc_100071b0 ], [ %v1_10006e0c, %dec_label_pc_100071c4 ], [ %v1_10006e0c, %dec_label_pc_100071d0 ], [ %v1_10006e0c, %dec_label_pc_100071e4 ], [ %v1_10006e0c, %dec_label_pc_10007208 ], [ %v1_10006e0c, %dec_label_pc_10007214 ], [ %v1_10006e0c, %dec_label_pc_10007220 ], [ %v1_10006e0c, %dec_label_pc_1000722c ], [ %v1_10006e0c, %dec_label_pc_10007238 ]
  %v0_10006f08 = phi i32 [ %v0_1000719c, %dec_label_pc_1000719c.dec_label_pc_10006f04_crit_edge ], [ %v0_10006f08.pre.pre, %dec_label_pc_10006efc.dec_label_pc_10006f04.loopexit_crit_edge ], [ %v0_100071a8, %dec_label_pc_100071a8 ], [ %v0_100071bc, %dec_label_pc_100071bc ], [ %v0_100071dc, %dec_label_pc_100071dc ], [ %v0_100071a8, %dec_label_pc_100071b0 ], [ %v0_100071bc, %dec_label_pc_100071c4 ], [ %v0_100071d0, %dec_label_pc_100071d0 ], [ %v0_100071dc, %dec_label_pc_100071e4 ], [ %v0_100071f0, %dec_label_pc_10007208 ], [ %v0_10007214, %dec_label_pc_10007214 ], [ %v0_10007220, %dec_label_pc_10007220 ], [ %v0_1000722c, %dec_label_pc_1000722c ], [ %v0_10007238, %dec_label_pc_10007238 ]
  %v0_10006f04 = phi i32 [ %v0_10006f04.pre, %dec_label_pc_1000719c.dec_label_pc_10006f04_crit_edge ], [ %v0_10006e14, %dec_label_pc_10006efc.dec_label_pc_10006f04.loopexit_crit_edge ], [ 172, %dec_label_pc_100071a8 ], [ 100, %dec_label_pc_100071bc ], [ 198, %dec_label_pc_100071dc ], [ 172, %dec_label_pc_100071b0 ], [ 100, %dec_label_pc_100071c4 ], [ 169, %dec_label_pc_100071d0 ], [ 198, %dec_label_pc_100071e4 ], [ 106, %dec_label_pc_10007208 ], [ 150, %dec_label_pc_10007214 ], [ 49, %dec_label_pc_10007220 ], [ 178, %dec_label_pc_1000722c ], [ 160, %dec_label_pc_10007238 ]
  %v1_10006f04 = mul i32 %v0_10006f04, 16777216
  %v1_10006f08 = mul i32 %v0_10006f08, 65536
  %v2_10006f0c = or i32 %v1_10006f04, %v1_10006f08
  %v1_10006f10 = mul i32 %v0_10006f10, 256
  %v1_10006f14 = load i32, i32* %r10.global-to-local, align 4
  %v2_10006f14 = or i32 %v2_10006f0c, %v1_10006f14
  store i32 %v2_10006f14, i32* %r0.global-to-local, align 4
  %v0_10006f18 = load i32, i32* @r21, align 4
  store i32 %v0_10006f18, i32* @r3, align 4
  %v2_10006f1c = or i32 %v2_10006f14, %v1_10006f10
  store i32 %v2_10006f1c, i32* %r9.global-to-local, align 4
  store i32 %v2_10006f1c, i32* @global_var_1001c2b0.154, align 4
  %v0_10006f28 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006f28 = trunc i32 %v0_10006f28 to i16
  store i16 %v1_10006f28, i16* bitcast (i32* @global_var_1001c2aa.155 to i16*), align 4
  %v2_10006f2c = call i32 @function_100043cc(i32 %v0_10006f18, i32 20)
  %v3_10006f2c = trunc i32 %v2_10006f2c to i16
  %v3_10006f30 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006f30 = trunc i64 %v3_10006f30 to i32
  store i32 %v4_10006f30, i32* %r9.global-to-local, align 4
  store i16 %v3_10006f2c, i16* bitcast (i32* @global_var_1001c2aa.155 to i16*), align 4
  %v4_10006f40 = mul nsw i64 %v3_10006f30, 1717986919
  %v5_10006f40 = udiv i64 %v4_10006f40, 4294967296
  %v6_10006f40 = trunc i64 %v5_10006f40 to i32
  %tmp = icmp slt i32 %v4_10006f30, 0
  %v1_10006f44 = zext i1 %tmp to i32
  %v2_10006f44 = ashr i32 %v4_10006f30, 31
  %v3_10006f44 = and i32 %v2_10006f44, -2
  %v4_10006f44 = or i32 %v3_10006f44, %v1_10006f44
  store i32 %v4_10006f44, i32* %r11.global-to-local, align 4
  %v1_10006f4842 = udiv i64 %v4_10006f40, 17179869184
  %v1_10006f48 = trunc i64 %v1_10006f4842 to i32
  %v2_10006f48 = ashr i32 %v6_10006f40, 31
  %v3_10006f48 = and i32 %v2_10006f48, -1073741824
  %v4_10006f48 = or i32 %v3_10006f48, %v1_10006f48
  %v2_10006f4c = sub nsw i32 %v4_10006f48, %v4_10006f44
  %v1_10006f50 = mul i32 %v2_10006f4c, 10
  %v2_10006f54 = icmp slt i32 %v4_10006f30, %v1_10006f50
  %v4_10006f54 = icmp eq i32 %v4_10006f30, %v1_10006f50
  store i1 %v2_10006f54, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006f54, i1* %cr7_eq.global-to-local, align 1
  %.3 = select i1 %v4_10006f54, i16 2323, i16 23
  store i16 %.3, i16* @global_var_1001c2b6.139, align 2
  %v3_10006f64 = load i32, i32* @global_var_1001c2b0.154, align 4
  store i32 %v3_10006f64, i32* %r0.global-to-local, align 4
  %v0_10006f68 = load i32, i32* @r22, align 4
  store i32 %v0_10006f68, i32* @r4, align 4
  %v0_10006f6c = load i32, i32* %r29.global-to-local, align 4
  %v1_10006f6c = trunc i32 %v0_10006f6c to i16
  store i16 %v1_10006f6c, i16* bitcast (i32* @global_var_1001c2c4.156 to i16*), align 4
  store i32 20, i32* %r5.global-to-local, align 4
  store i32 %v3_10006f64, i32* @global_var_1001c2b8.157, align 4
  %v0_10006f7c = load i32, i32* @r21, align 4
  store i32 %v0_10006f7c, i32* %r3.global-to-local, align 4
  %v4_10006f80 = call i32 @function_10004430(i32 %v0_10006f7c, i32 %v0_10006f68, i32 20, i32 20)
  %v5_10006f80 = trunc i32 %v4_10006f80 to i16
  store i16 %v5_10006f80, i16* bitcast (i32* @global_var_1001c2c4.156 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10006f90 = load i32, i32* @global_var_1001c2b0.154, align 4
  store i32 %v3_10006f90, i32* %r9.global-to-local, align 4
  %v0_10006f94 = load i32, i32* @r21, align 4
  %v3_10006f98 = load i16, i16* @global_var_1001c2b6.139, align 2
  %v4_10006f98 = zext i16 %v3_10006f98 to i32
  store i32 %v4_10006f98, i32* %r11.global-to-local, align 4
  store i32 40, i32* %r5.global-to-local, align 4
  %v3_10006fa0 = load i32, i32* @global_var_1001c234.129, align 4
  store i32 %v3_10006fa0, i32* %r3.global-to-local, align 4
  %v1_10006fa4 = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v1_10006fa4, i32* %r7.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 2, i32* %stack_var_-1888, align 4
  store i32 268464064, i32* @lr, align 4
  %v6_10006fbc = call i32 @function_10009d70(i32 %v3_10006fa0, i32 %v0_10006f94, i32 40, i32 16384, i32 %v1_10006fa4, i32 16)
  store i32 %v6_10006fbc, i32* %r3.global-to-local, align 4
  %v3_10006fc0 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006fc0 = trunc i64 %v3_10006fc0 to i32
  %v1_10006fc4 = add i32 %v4_10006fc0, 1
  store i32 %v1_10006fc4, i32* %r9.global-to-local, align 4
  %v1_10006fc8 = icmp slt i32 %v1_10006fc4, 483
  %v3_10006fc8 = icmp eq i32 %v1_10006fc4, 483
  store i1 %v1_10006fc8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006fc8, i1* %cr7_eq.global-to-local, align 1
  %v5_10006fcc = sext i32 %v1_10006fc4 to i64
  store i64 %v5_10006fcc, i64* %stack_var_-1916, align 8
  %tmp103 = icmp slt i32 %v1_10006fc4, 484
  br i1 %tmp103, label %dec_label_pc_10006f04.dec_label_pc_10006dd4_crit_edge, label %dec_label_pc_10006fd4

dec_label_pc_10006f04.dec_label_pc_10006dd4_crit_edge: ; preds = %dec_label_pc_10006f04
  %v0_10006dd4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10006dd4

dec_label_pc_10006fd4:                            ; preds = %dec_label_pc_10006f04
  %v0_10006fd4 = load i32, i32* @r31, align 4
  store i32 %v0_10006fd4, i32* @r23, align 4
  br label %dec_label_pc_10006fd8

dec_label_pc_10006fd8:                            ; preds = %dec_label_pc_10006db4, %dec_label_pc_10006fd4
  %v0_10006fd8 = call i32 @function_100097b8()
  store i32 %v0_10006fd8, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 %v0_10006fd8, i32* %r24.global-to-local, align 4
  %v2_10006ff0 = ptrtoint i32* %stack_var_-1616 to i32
  %v4_1000703c = zext i8 %tmp55 to i32
  %v1_10007040 = icmp ult i8 %tmp55, 6
  %v3_10007040 = icmp eq i8 %tmp55, 6
  %v4_10007048 = zext i16 %tmp54 to i32
  %v1_10007050 = icmp ult i16 %tmp54, 23
  %v3_10007050 = icmp eq i16 %tmp54, 23
  %v4_10007060 = zext i16 %tmp53 to i32
  %v1_10007070 = and i32 %tmp52, 131072
  %v3_10007070 = icmp eq i32 %v1_10007070, 0
  %v1_10007098 = add i32 %tmp51, -1
  %v2_1000709c = icmp slt i32 %v1_10007098, %tmp50
  %v4_1000709c = icmp eq i32 %v1_10007098, %tmp50
  %v1_10007078 = and i32 %tmp52, 1048576
  %v3_10007078 = icmp eq i32 %v1_10007078, 0
  %v1_10007080 = and i32 %tmp52, 262144
  %v3_10007080 = icmp eq i32 %v1_10007080, 0
  %v1_10007088 = and i32 %tmp52, 65536
  %v3_10007088 = icmp eq i32 %v1_10007088, 0
  %v1_10007058 = icmp ult i16 %tmp54, 2323
  %v3_10007058 = icmp eq i16 %tmp54, 2323
  br label %dec_label_pc_10006fe4

dec_label_pc_10006fe4:                            ; preds = %dec_label_pc_10007090, %dec_label_pc_10007088, %dec_label_pc_10007080, %dec_label_pc_10007060, %dec_label_pc_10007058, %dec_label_pc_1000703c, %dec_label_pc_10007028, %dec_label_pc_10007078, %dec_label_pc_1000706c, %dec_label_pc_10007020, %dec_label_pc_100081b0, %dec_label_pc_10006fd8
  %v1_10006fec = phi i32 [ %v0_10006fd8, %dec_label_pc_10006fd8 ], [ %v1_10006fec.pre.pre, %dec_label_pc_100081b0 ], [ %v0_10007014, %dec_label_pc_10007020 ], [ %v0_10007014, %dec_label_pc_1000706c ], [ %v0_10007014, %dec_label_pc_10007078 ], [ %v0_10007014, %dec_label_pc_10007028 ], [ %v0_10007014, %dec_label_pc_1000703c ], [ %v0_10007014, %dec_label_pc_10007058 ], [ %v0_10007014, %dec_label_pc_10007060 ], [ %v0_10007014, %dec_label_pc_10007080 ], [ %v0_10007014, %dec_label_pc_10007088 ], [ %v0_10007014, %dec_label_pc_10007090 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006fec = inttoptr i32 %v1_10006fec to i32*
  store i32 0, i32* %v2_10006fec, align 4
  store i32 1514, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v3_10006ffc = load i32, i32* @global_var_1001c234.129, align 4
  store i32 %v3_10006ffc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268464140, i32* @lr, align 4
  %v6_10007008 = call i32 @function_10009cf8(i32 %v3_10006ffc, i32 %v2_10006ff0, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_10007008, i32* %r3.global-to-local, align 4
  %tmp104 = icmp slt i32 %v6_10007008, 1
  br i1 %tmp104, label %dec_label_pc_10007250, label %dec_label_pc_10007014

dec_label_pc_10007014:                            ; preds = %dec_label_pc_10006fe4
  %v0_10007014 = load i32, i32* %r24.global-to-local, align 4
  %v1_10007014 = inttoptr i32 %v0_10007014 to i32*
  %v2_10007014 = load i32, i32* %v1_10007014, align 4
  store i32 %v2_10007014, i32* %r0.global-to-local, align 4
  %v1_10007018 = icmp slt i32 %v2_10007014, 11
  %v3_10007018 = icmp eq i32 %v2_10007014, 11
  store i1 %v1_10007018, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007018, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007018, label %dec_label_pc_10007250, label %dec_label_pc_10007020

dec_label_pc_10007020:                            ; preds = %dec_label_pc_10007014
  %v1_10007020 = icmp ult i32 %v6_10007008, 39
  %v3_10007020 = icmp eq i32 %v6_10007008, 39
  store i1 %v1_10007020, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007020, i1* %cr7_eq.global-to-local, align 1
  %tmp105 = icmp ult i32 %v6_10007008, 40
  br i1 %tmp105, label %dec_label_pc_10006fe4, label %dec_label_pc_10007028

dec_label_pc_10007028:                            ; preds = %dec_label_pc_10007020
  store i32 %tmp56, i32* %r9.global-to-local, align 4
  %v3_10007030 = load i32, i32* @global_var_1001c208.14, align 4
  store i32 %v3_10007030, i32* %r0.global-to-local, align 4
  %v2_10007034 = icmp slt i32 %tmp56, %v3_10007030
  %v4_10007034 = icmp eq i32 %tmp56, %v3_10007030
  store i1 %v2_10007034, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007034, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10007034, label %dec_label_pc_1000703c, label %dec_label_pc_10006fe4

dec_label_pc_1000703c:                            ; preds = %dec_label_pc_10007028
  store i32 %v4_1000703c, i32* %r0.global-to-local, align 4
  store i1 %v1_10007040, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007040, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007040, label %dec_label_pc_10007048, label %dec_label_pc_10006fe4

dec_label_pc_10007048:                            ; preds = %dec_label_pc_1000703c
  store i32 %v4_10007048, i32* %r8.global-to-local, align 4
  store i32 %v4_10007048, i32* %r0.global-to-local, align 4
  store i1 %v1_10007050, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007050, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007050, label %dec_label_pc_10007060, label %dec_label_pc_10007058

dec_label_pc_10007058:                            ; preds = %dec_label_pc_10007048
  store i1 %v1_10007058, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007058, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007058, label %dec_label_pc_10007060, label %dec_label_pc_10006fe4

dec_label_pc_10007060:                            ; preds = %dec_label_pc_10007058, %dec_label_pc_10007048
  store i32 %v4_10007060, i32* %r0.global-to-local, align 4
  %v1_10007064 = load i32, i32* @r20, align 4
  %v2_10007064 = icmp slt i32 %v4_10007060, %v1_10007064
  %v4_10007064 = icmp eq i32 %v4_10007060, %v1_10007064
  store i1 %v2_10007064, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007064, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10007064, label %dec_label_pc_1000706c, label %dec_label_pc_10006fe4

dec_label_pc_1000706c:                            ; preds = %dec_label_pc_10007060
  store i32 %tmp52, i32* %r0.global-to-local, align 4
  store i32 %v1_10007070, i32* %r9.global-to-local, align 4
  br i1 %v3_10007070, label %dec_label_pc_10006fe4, label %dec_label_pc_10007078

dec_label_pc_10007078:                            ; preds = %dec_label_pc_1000706c
  store i32 %v1_10007078, i32* %r10.global-to-local, align 4
  br i1 %v3_10007078, label %dec_label_pc_10006fe4, label %dec_label_pc_10007080

dec_label_pc_10007080:                            ; preds = %dec_label_pc_10007078
  store i32 %v1_10007080, i32* %r11.global-to-local, align 4
  br i1 %v3_10007080, label %dec_label_pc_10007088, label %dec_label_pc_10006fe4

dec_label_pc_10007088:                            ; preds = %dec_label_pc_10007080
  br i1 %v3_10007088, label %dec_label_pc_10007090, label %dec_label_pc_10006fe4

dec_label_pc_10007090:                            ; preds = %dec_label_pc_10007088
  store i32 %tmp51, i32* %r9.global-to-local, align 4
  store i32 %tmp50, i32* %r0.global-to-local, align 4
  store i32 %v1_10007098, i32* %r10.global-to-local, align 4
  store i1 %v2_1000709c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000709c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000709c, label %dec_label_pc_100070a4, label %dec_label_pc_10006fe4

dec_label_pc_100070a4:                            ; preds = %dec_label_pc_10007090
  %v0_100070a4 = load i32, i32* @r31, align 4
  %v1_100070a4 = icmp slt i32 %v0_100070a4, 355
  %v2_100070a4 = icmp sgt i32 %v0_100070a4, 355
  %v3_100070a4 = icmp eq i32 %v0_100070a4, 355
  store i1 %v1_100070a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100070a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100070a4, label %dec_label_pc_10007250, label %dec_label_pc_100070ac

dec_label_pc_100070ac:                            ; preds = %dec_label_pc_100070a4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v1_100070b0 = mul i32 %v0_100070a4, 388
  store i32 %v1_100070b0, i32* %r11.global-to-local, align 4
  %v3_100070b4 = load i32, i32* @global_var_1001c230.128, align 4
  store i32 %v3_100070b4, i32* %r0.global-to-local, align 4
  %v2_100070b8 = add i32 %v3_100070b4, %v1_100070b0
  store i32 %v2_100070b8, i32* @r3, align 4
  %v1_100070bc = add i32 %v2_100070b8, 12
  %v2_100070bc = inttoptr i32 %v1_100070bc to i32*
  %v3_100070bc = load i32, i32* %v2_100070bc, align 4
  store i32 %v3_100070bc, i32* %r9.global-to-local, align 4
  %v1_100070c0 = icmp slt i32 %v3_100070bc, 0
  %v3_100070c0 = icmp eq i32 %v3_100070bc, 0
  store i1 %v1_100070c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100070c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100070c0, label %dec_label_pc_100081ac, label %dec_label_pc_100070c8

dec_label_pc_100070c8:                            ; preds = %dec_label_pc_100070ac
  %v1_100070c8 = sub i32 356, %v0_100070a4
  store i32 %v1_100070c8, i32* %r11.global-to-local, align 4
  store i32 %v0_100070a4, i32* %r29.global-to-local, align 4
  store i32 %v1_100070c8, i32* %ctr.global-to-local, align 4
  %v1_100070d4 = add i32 %v2_100070b8, 388
  store i32 %v1_100070d4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100070d8

dec_label_pc_100070d8:                            ; preds = %dec_label_pc_100070e0, %dec_label_pc_100070c8
  %v0_100070e0 = phi i32 [ %v1_100070e8, %dec_label_pc_100070e0 ], [ %v1_100070d4, %dec_label_pc_100070c8 ]
  %v0_100070dc = phi i32 [ %v1_100070dc, %dec_label_pc_100070e0 ], [ %v1_100070c8, %dec_label_pc_100070c8 ]
  %v0_100070d8 = phi i32 [ %v1_100070d8, %dec_label_pc_100070e0 ], [ %v0_100070a4, %dec_label_pc_100070c8 ]
  %v1_100070d8 = add i32 %v0_100070d8, 1
  store i32 %v1_100070d8, i32* @r29, align 4
  %v1_100070dc = add i32 %v0_100070dc, -1
  store i32 %v1_100070dc, i32* %ctr.global-to-local, align 4
  %v2_100070dc = icmp eq i32 %v1_100070dc, 0
  br i1 %v2_100070dc, label %dec_label_pc_10007250, label %dec_label_pc_100070e0

dec_label_pc_100070e0:                            ; preds = %dec_label_pc_100070d8
  %v1_100070e0 = add i32 %v0_100070e0, 12
  %v2_100070e0 = inttoptr i32 %v1_100070e0 to i32*
  %v3_100070e0 = load i32, i32* %v2_100070e0, align 4
  store i32 %v3_100070e0, i32* %r0.global-to-local, align 4
  store i32 %v0_100070e0, i32* @r3, align 4
  %v1_100070e8 = add i32 %v0_100070e0, 388
  store i32 %v1_100070e8, i32* %r9.global-to-local, align 4
  %v1_100070ec = icmp slt i32 %v3_100070e0, 0
  %v3_100070ec = icmp eq i32 %v3_100070e0, 0
  store i1 %v1_100070ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100070ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100070ec, label %dec_label_pc_100081b0, label %dec_label_pc_100070d8

dec_label_pc_10007194:                            ; preds = %dec_label_pc_10006b90, %dec_label_pc_1000819c
  %v0_10007198 = call i32 @function_1000a860()
  store i32 %v0_10007198, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000719c

dec_label_pc_1000719c:                            ; preds = %dec_label_pc_10006e44, %dec_label_pc_10007194
  %v0_10006f1014 = phi i32 [ %v0_10007198, %dec_label_pc_10007194 ], [ %v1_10006e0c, %dec_label_pc_10006e44 ]
  %v0_1000719c = load i32, i32* @r9, align 4
  %v1_1000719c = icmp slt i32 %v0_1000719c, 168
  %v3_1000719c = icmp eq i32 %v0_1000719c, 168
  store i1 %v1_1000719c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000719c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000719c, label %dec_label_pc_10006df8.preheader, label %dec_label_pc_1000719c.dec_label_pc_10006f04_crit_edge

dec_label_pc_1000719c.dec_label_pc_10006f04_crit_edge: ; preds = %dec_label_pc_1000719c
  %v0_10006f04.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006f04

dec_label_pc_100071a8:                            ; preds = %dec_label_pc_10006e4c
  %v0_100071a8 = load i32, i32* @r9, align 4
  %v1_100071a8 = icmp ult i32 %v0_100071a8, 15
  %v3_100071a8 = icmp eq i32 %v0_100071a8, 15
  store i1 %v1_100071a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071a8, i1* %cr7_eq.global-to-local, align 1
  %tmp106 = icmp ult i32 %v0_100071a8, 16
  br i1 %tmp106, label %dec_label_pc_10006f04, label %dec_label_pc_100071b0

dec_label_pc_100071b0:                            ; preds = %dec_label_pc_100071a8
  %v1_100071b0 = icmp ult i32 %v0_100071a8, 31
  %v3_100071b0 = icmp eq i32 %v0_100071a8, 31
  store i1 %v1_100071b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071b0, i1* %cr7_eq.global-to-local, align 1
  %tmp107 = icmp ult i32 %v0_100071a8, 32
  br i1 %tmp107, label %dec_label_pc_10006df8, label %dec_label_pc_10006f04

dec_label_pc_100071bc:                            ; preds = %dec_label_pc_10006e54
  %v0_100071bc = load i32, i32* @r9, align 4
  %v1_100071bc = icmp ult i32 %v0_100071bc, 63
  %v3_100071bc = icmp eq i32 %v0_100071bc, 63
  store i1 %v1_100071bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071bc, i1* %cr7_eq.global-to-local, align 1
  %tmp108 = icmp ult i32 %v0_100071bc, 64
  br i1 %tmp108, label %dec_label_pc_10006f04, label %dec_label_pc_100071c4

dec_label_pc_100071c4:                            ; preds = %dec_label_pc_100071bc
  %v1_100071c4 = icmp ult i32 %v0_100071bc, 126
  %v3_100071c4 = icmp eq i32 %v0_100071bc, 126
  store i1 %v1_100071c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071c4, i1* %cr7_eq.global-to-local, align 1
  %tmp109 = icmp ult i32 %v0_100071bc, 127
  br i1 %tmp109, label %dec_label_pc_10006df8, label %dec_label_pc_10006f04

dec_label_pc_100071d0:                            ; preds = %dec_label_pc_10006e5c
  %v0_100071d0 = load i32, i32* @r9, align 4
  %v1_100071d0 = icmp slt i32 %v0_100071d0, 255
  %v3_100071d0 = icmp eq i32 %v0_100071d0, 255
  store i1 %v1_100071d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100071d0, label %dec_label_pc_10006df8, label %dec_label_pc_10006f04

dec_label_pc_100071dc:                            ; preds = %dec_label_pc_10006e64
  %v0_100071dc = load i32, i32* @r9, align 4
  %v1_100071dc = icmp ult i32 %v0_100071dc, 17
  %v3_100071dc = icmp eq i32 %v0_100071dc, 17
  store i1 %v1_100071dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071dc, i1* %cr7_eq.global-to-local, align 1
  %tmp110 = icmp ult i32 %v0_100071dc, 18
  br i1 %tmp110, label %dec_label_pc_10006f04, label %dec_label_pc_100071e4

dec_label_pc_100071e4:                            ; preds = %dec_label_pc_100071dc
  %v1_100071e4 = icmp eq i32 %v0_100071dc, 18
  %v3_100071e4 = icmp eq i32 %v0_100071dc, 19
  store i1 %v1_100071e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071e4, i1* %cr7_eq.global-to-local, align 1
  %tmp111 = icmp ult i32 %v0_100071dc, 20
  br i1 %tmp111, label %dec_label_pc_10006df8, label %dec_label_pc_10006f04

dec_label_pc_100071f0:                            ; preds = %dec_label_pc_10006e74
  %v0_100071f0 = load i32, i32* @r9, align 4
  %v1_100071f0 = icmp slt i32 %v0_100071f0, 186
  %v3_100071f0 = icmp eq i32 %v0_100071f0, 186
  store i1 %v1_100071f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100071f0, label %dec_label_pc_10006df8, label %dec_label_pc_100071f8

dec_label_pc_100071f8:                            ; preds = %dec_label_pc_100071f0
  %v1_100071f8 = icmp slt i32 %v0_100071f0, 187
  %v3_100071f8 = icmp eq i32 %v0_100071f0, 187
  store i1 %v1_100071f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100071f8, label %dec_label_pc_10006df8, label %dec_label_pc_10007200

dec_label_pc_10007200:                            ; preds = %dec_label_pc_100071f8
  %v1_10007200 = icmp slt i32 %v0_100071f0, 185
  %v3_10007200 = icmp eq i32 %v0_100071f0, 185
  store i1 %v1_10007200, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007200, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007200, label %dec_label_pc_10006df8, label %dec_label_pc_10007208

dec_label_pc_10007208:                            ; preds = %dec_label_pc_10007200
  %v1_10007208 = icmp slt i32 %v0_100071f0, 184
  %v3_10007208 = icmp eq i32 %v0_100071f0, 184
  store i1 %v1_10007208, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007208, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007208, label %dec_label_pc_10006df8, label %dec_label_pc_10006f04

dec_label_pc_10007214:                            ; preds = %dec_label_pc_10006e7c
  %v0_10007214 = load i32, i32* @r9, align 4
  %v1_10007214 = icmp slt i32 %v0_10007214, 31
  %v3_10007214 = icmp eq i32 %v0_10007214, 31
  store i1 %v1_10007214, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007214, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007214, label %dec_label_pc_10006df8, label %dec_label_pc_10006f04

dec_label_pc_10007220:                            ; preds = %dec_label_pc_10006e84
  %v0_10007220 = load i32, i32* @r9, align 4
  %v1_10007220 = icmp slt i32 %v0_10007220, 51
  %v3_10007220 = icmp eq i32 %v0_10007220, 51
  store i1 %v1_10007220, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007220, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007220, label %dec_label_pc_10006df8, label %dec_label_pc_10006f04

dec_label_pc_1000722c:                            ; preds = %dec_label_pc_10006e8c
  %v0_1000722c = load i32, i32* @r9, align 4
  %v1_1000722c = icmp slt i32 %v0_1000722c, 62
  %v3_1000722c = icmp eq i32 %v0_1000722c, 62
  store i1 %v1_1000722c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000722c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000722c, label %dec_label_pc_10006df8, label %dec_label_pc_10006f04

dec_label_pc_10007238:                            ; preds = %dec_label_pc_10006e94
  %v0_10007238 = load i32, i32* @r9, align 4
  %v1_10007238 = icmp slt i32 %v0_10007238, 13
  %v3_10007238 = icmp eq i32 %v0_10007238, 13
  store i1 %v1_10007238, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007238, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007238, label %dec_label_pc_10006df8, label %dec_label_pc_10006f04

dec_label_pc_10007250:                            ; preds = %dec_label_pc_100070a4, %dec_label_pc_10007014, %dec_label_pc_10006fe4, %dec_label_pc_100070d8
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10007268132 = load i32, i32* @r1, align 4
  %v3_10007268133 = add i32 %v2_10007268132, 64
  %v4_10007268134 = inttoptr i32 %v3_10007268133 to i32*
  store i32 0, i32* %v4_10007268134, align 4
  %v0_1000726c135 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000726c136 = add i32 %v0_1000726c135, -1
  store i32 %v1_1000726c136, i32* %ctr.global-to-local, align 4
  %v2_1000726c137 = icmp eq i32 %v1_1000726c136, 0
  br i1 %v2_1000726c137, label %dec_label_pc_10007270, label %dec_label_pc_10007260.dec_label_pc_10007260_crit_edge

dec_label_pc_10007260.dec_label_pc_10007260_crit_edge: ; preds = %dec_label_pc_10007250, %dec_label_pc_10007260.dec_label_pc_10007260_crit_edge
  %v0_10007260.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10007268.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10007260 = add i32 %v0_10007260.pre, 64
  store i32 %v1_10007260, i32* %r10.global-to-local, align 4
  %v1_10007264 = add i32 %v0_10007260.pre, 4
  store i32 %v1_10007264, i32* %r9.global-to-local, align 4
  %v2_10007268 = load i32, i32* @r1, align 4
  %v3_10007268 = add i32 %v2_10007268, %v1_10007260
  %v4_10007268 = inttoptr i32 %v3_10007268 to i32*
  store i32 %v0_10007268.pre, i32* %v4_10007268, align 4
  %v0_1000726c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000726c = add i32 %v0_1000726c, -1
  store i32 %v1_1000726c, i32* %ctr.global-to-local, align 4
  %v2_1000726c = icmp eq i32 %v1_1000726c, 0
  br i1 %v2_1000726c, label %dec_label_pc_10007270, label %dec_label_pc_10007260.dec_label_pc_10007260_crit_edge

dec_label_pc_10007270:                            ; preds = %dec_label_pc_10007260.dec_label_pc_10007260_crit_edge, %dec_label_pc_10007250
  store i32 32, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10007288126 = load i32, i32* @r1, align 4
  %v3_10007288127 = add i32 %v2_10007288126, 192
  %v4_10007288128 = inttoptr i32 %v3_10007288127 to i32*
  store i32 0, i32* %v4_10007288128, align 4
  %v0_1000728c129 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000728c130 = add i32 %v0_1000728c129, -1
  store i32 %v1_1000728c130, i32* %ctr.global-to-local, align 4
  %v2_1000728c131 = icmp eq i32 %v1_1000728c130, 0
  br i1 %v2_1000728c131, label %dec_label_pc_10007290, label %dec_label_pc_10007280.dec_label_pc_10007280_crit_edge

dec_label_pc_10007280.dec_label_pc_10007280_crit_edge: ; preds = %dec_label_pc_10007270, %dec_label_pc_10007280.dec_label_pc_10007280_crit_edge
  %v0_10007280.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10007288.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10007280 = add i32 %v0_10007280.pre, 192
  %v1_10007284 = add i32 %v0_10007280.pre, 4
  store i32 %v1_10007284, i32* %r9.global-to-local, align 4
  %v2_10007288 = load i32, i32* @r1, align 4
  %v3_10007288 = add i32 %v2_10007288, %v1_10007280
  %v4_10007288 = inttoptr i32 %v3_10007288 to i32*
  store i32 %v0_10007288.pre, i32* %v4_10007288, align 4
  %v0_1000728c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000728c = add i32 %v0_1000728c, -1
  store i32 %v1_1000728c, i32* %ctr.global-to-local, align 4
  %v2_1000728c = icmp eq i32 %v1_1000728c, 0
  br i1 %v2_1000728c, label %dec_label_pc_10007290, label %dec_label_pc_10007280.dec_label_pc_10007280_crit_edge

dec_label_pc_10007290:                            ; preds = %dec_label_pc_10007280.dec_label_pc_10007280_crit_edge, %dec_label_pc_10007270
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  %v0_100072a4 = load i32, i32* %r0.global-to-local, align 4
  %v5_100072a4 = sext i32 %v0_100072a4 to i64
  store i64 %v5_100072a4, i64* %stack_var_-1916, align 8
  %v2_100073bc = ptrtoint i32* %stack_var_-1872 to i32
  %v2_100073c0 = ptrtoint i32* %stack_var_-1744 to i32
  %v2_100073c8 = ptrtoint i32* %stack_var_-1908 to i32
  %v2_10007fa0 = ptrtoint i32* %stack_var_-1920 to i32
  %v2_10007fb0 = ptrtoint i32* %stack_var_-1912 to i32
  br label %dec_label_pc_1000730c

dec_label_pc_100072ac:                            ; preds = %dec_label_pc_1000730c
  %v3_100072ac = load i32, i32* @global_var_1001c22c.123, align 4
  store i32 %v3_100072ac, i32* %r0.global-to-local, align 4
  %v1_100072b0 = add i32 %v2_1000731c, 8
  %v2_100072b0 = inttoptr i32 %v1_100072b0 to i32*
  %v3_100072b0 = load i32, i32* %v2_100072b0, align 4
  store i32 %v3_100072b0, i32* %r9.global-to-local, align 4
  %v2_100072b4 = sub i32 %v3_100072ac, %v3_100072b0
  store i32 %v2_100072b4, i32* %r0.global-to-local, align 4
  %v2_100072b8 = icmp ult i32 %v2_100072b4, 30
  %v3_100072b8 = icmp ugt i32 %v2_100072b4, 30
  %v4_100072b8 = icmp eq i32 %v2_100072b4, 30
  store i1 %v2_100072b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100072b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100072b8, label %dec_label_pc_1000734c, label %dec_label_pc_100072c0

dec_label_pc_100072c0:                            ; preds = %dec_label_pc_10007334, %dec_label_pc_100072ac
  %v1_100072c0 = icmp slt i32 %v3_10007320, 1
  store i1 %v1_100072c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007324, i1* %cr7_eq.global-to-local, align 1
  %v1_10007508 = add i32 %v2_1000731c, 4
  %v2_10007508 = inttoptr i32 %v1_10007508 to i32*
  %v3_10007508 = load i32, i32* %v2_10007508, align 4
  store i32 %v3_10007508, i32* %r3.global-to-local, align 4
  br i1 %v3_10007324, label %dec_label_pc_10007508, label %dec_label_pc_100072c8

dec_label_pc_100072c8:                            ; preds = %dec_label_pc_100072c0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100072d0 = call i32 @__asm_rlwinm(i32 %v3_10007508, i32 29, i32 3, i32 29)
  %v0_100072d4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100072d4 = icmp slt i32 %v0_100072d4, %v3_10007508
  %v4_100072d4 = icmp eq i32 %v0_100072d4, %v3_10007508
  store i1 %v2_100072d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100072d4, i1* %cr7_eq.global-to-local, align 1
  %v1_100072d8 = load i32, i32* %r14.global-to-local, align 4
  %v2_100072d8 = add i32 %v1_100072d8, %v1_100072d0
  store i32 %v2_100072d8, i32* %r11.global-to-local, align 4
  %v1_100072dc = urem i32 %v3_10007508, 32
  store i32 %v1_100072dc, i32* %r10.global-to-local, align 4
  %v1_100072e0 = add i32 %v2_100072d8, 56
  %v2_100072e0 = inttoptr i32 %v1_100072e0 to i32*
  %v3_100072e0 = load i32, i32* %v2_100072e0, align 4
  %v0_100072e4 = load i32, i32* %r0.global-to-local, align 4
  %v3_100072e4 = shl i32 %v0_100072e4, %v1_100072dc
  store i32 %v3_100072e4, i32* %r0.global-to-local, align 4
  %v2_100072e8 = or i32 %v3_100072e4, %v3_100072e0
  store i32 %v2_100072e8, i32* %r9.global-to-local, align 4
  store i32 %v2_100072e8, i32* %v2_100072e0, align 4
  br i1 %v2_100072d4, label %dec_label_pc_100072f4, label %dec_label_pc_100072f8

dec_label_pc_100072f4:                            ; preds = %dec_label_pc_100072c8
  store i32 %v3_10007508, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100072f8

dec_label_pc_100072f8:                            ; preds = %dec_label_pc_10007508, %dec_label_pc_100072c8, %dec_label_pc_1000732c, %dec_label_pc_10007530, %dec_label_pc_100074fc, %dec_label_pc_100072f4
  %v3_100072f8 = load i64, i64* %stack_var_-1916, align 8
  %v4_100072f8 = trunc i64 %v3_100072f8 to i32
  %v1_100072fc = add i32 %v4_100072f8, 1
  store i32 %v1_100072fc, i32* %r9.global-to-local, align 4
  %v1_10007300 = icmp slt i32 %v1_100072fc, 355
  %v2_10007300 = icmp sgt i32 %v1_100072fc, 355
  %v3_10007300 = icmp eq i32 %v1_100072fc, 355
  store i1 %v1_10007300, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007300, i1* %cr7_eq.global-to-local, align 1
  %v5_10007304 = sext i32 %v1_100072fc to i64
  store i64 %v5_10007304, i64* %stack_var_-1916, align 8
  br i1 %v2_10007300, label %dec_label_pc_1000739c, label %dec_label_pc_1000730c

dec_label_pc_1000730c:                            ; preds = %dec_label_pc_10007380, %dec_label_pc_100072f8, %dec_label_pc_10007290
  %v0_10007310 = phi i32 [ 0, %dec_label_pc_10007290 ], [ %v1_100072fc, %dec_label_pc_100072f8 ], [ %v1_1000738c, %dec_label_pc_10007380 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v1_10007310 = mul i32 %v0_10007310, 388
  store i32 %v1_10007310, i32* %r9.global-to-local, align 4
  %v3_10007314 = load i32, i32* @global_var_1001c230.128, align 4
  store i32 %v3_10007314, i32* %r0.global-to-local, align 4
  store i32 30, i32* %r11.global-to-local, align 4
  %v2_1000731c = add i32 %v3_10007314, %v1_10007310
  store i32 %v2_1000731c, i32* @r29, align 4
  %v1_10007320 = add i32 %v2_1000731c, 12
  %v2_10007320 = inttoptr i32 %v1_10007320 to i32*
  %v3_10007320 = load i32, i32* %v2_10007320, align 4
  store i32 %v3_10007320, i32* %r10.global-to-local, align 4
  %v1_10007324 = icmp eq i32 %v3_10007320, 0
  %v2_10007324 = icmp ugt i32 %v3_10007320, 1
  %v3_10007324 = icmp eq i32 %v3_10007320, 1
  store i1 %v1_10007324, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007324, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007324, label %dec_label_pc_100072ac, label %dec_label_pc_1000732c

dec_label_pc_1000732c:                            ; preds = %dec_label_pc_1000730c
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v1_10007324, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10007324, label %dec_label_pc_100072f8, label %dec_label_pc_10007334

dec_label_pc_10007334:                            ; preds = %dec_label_pc_1000732c
  %v3_10007334 = load i32, i32* @global_var_1001c22c.123, align 4
  store i32 %v3_10007334, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_1000733c = add i32 %v2_1000731c, 8
  %v2_1000733c = inttoptr i32 %v1_1000733c to i32*
  %v3_1000733c = load i32, i32* %v2_1000733c, align 4
  store i32 %v3_1000733c, i32* %r9.global-to-local, align 4
  %v2_10007340 = sub i32 %v3_10007334, %v3_1000733c
  store i32 %v2_10007340, i32* %r0.global-to-local, align 4
  %v2_10007344 = icmp ult i32 %v2_10007340, 5
  %v3_10007344 = icmp ugt i32 %v2_10007340, 5
  %v4_10007344 = icmp eq i32 %v2_10007340, 5
  store i1 %v2_10007344, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007344, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007344, label %dec_label_pc_1000734c, label %dec_label_pc_100072c0

dec_label_pc_1000734c:                            ; preds = %dec_label_pc_10007334, %dec_label_pc_100072ac
  %v1_1000734c = add i32 %v2_1000731c, 4
  %v2_1000734c = inttoptr i32 %v1_1000734c to i32*
  %v3_1000734c = load i32, i32* %v2_1000734c, align 4
  store i32 %v3_1000734c, i32* %r3.global-to-local, align 4
  store i32 268464980, i32* @lr, align 4
  %v0_10007350 = call i32 @function_1000909c()
  store i32 %v0_10007350, i32* %r3.global-to-local, align 4
  %v0_10007354 = load i32, i32* @r29, align 4
  %v1_10007354 = add i32 %v0_10007354, 12
  %v2_10007354 = inttoptr i32 %v1_10007354 to i32*
  %v3_10007354 = load i32, i32* %v2_10007354, align 4
  store i32 %v3_10007354, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v1_1000735c = icmp ult i32 %v3_10007354, 2
  %v3_1000735c = icmp eq i32 %v3_10007354, 2
  store i1 %v1_1000735c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000735c, i1* %cr7_eq.global-to-local, align 1
  %v2_10007360 = add i32 %v0_10007354, 4
  %v3_10007360 = inttoptr i32 %v2_10007360 to i32*
  store i32 -1, i32* %v3_10007360, align 4
  %tmp113 = icmp ult i32 %v3_10007354, 3
  br i1 %tmp113, label %dec_label_pc_100074fc, label %dec_label_pc_10007368

dec_label_pc_10007368:                            ; preds = %dec_label_pc_1000734c
  %v0_10007368 = load i32, i32* @r29, align 4
  %v1_10007368 = add i32 %v0_10007368, 384
  %v2_10007368 = inttoptr i32 %v1_10007368 to i8*
  %v3_10007368 = load i8, i8* %v2_10007368, align 1
  %v4_10007368 = zext i8 %v3_10007368 to i32
  %v1_1000736c = add nuw nsw i32 %v4_10007368, 1
  %v1_10007370 = urem i32 %v1_1000736c, 256
  store i32 %v1_10007370, i32* %r9.global-to-local, align 4
  %v1_10007374 = icmp ult i32 %v1_10007370, 10
  %v3_10007374 = icmp eq i32 %v1_10007370, 10
  store i1 %v1_10007374, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007374, i1* %cr7_eq.global-to-local, align 1
  %v1_10007378 = trunc i32 %v1_1000736c to i8
  store i8 %v1_10007378, i8* %v2_10007368, align 1
  %v0_1000737c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000737c, label %dec_label_pc_100074fc, label %dec_label_pc_10007380

dec_label_pc_10007380:                            ; preds = %dec_label_pc_10007368
  %v0_10007380 = load i32, i32* @r29, align 4
  store i32 %v0_10007380, i32* @r3, align 4
  store i32 268465032, i32* @lr, align 4
  %v0_10007384 = call i32 @function_100067a8()
  store i32 %v0_10007384, i32* %r3.global-to-local, align 4
  %v3_10007388 = load i64, i64* %stack_var_-1916, align 8
  %v4_10007388 = trunc i64 %v3_10007388 to i32
  %v1_1000738c = add i32 %v4_10007388, 1
  store i32 %v1_1000738c, i32* %r9.global-to-local, align 4
  %v1_10007390 = icmp slt i32 %v1_1000738c, 355
  %v3_10007390 = icmp eq i32 %v1_1000738c, 355
  store i1 %v1_10007390, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007390, i1* %cr7_eq.global-to-local, align 1
  %v5_10007394 = sext i32 %v1_1000738c to i64
  store i64 %v5_10007394, i64* %stack_var_-1916, align 8
  %tmp114 = icmp slt i32 %v1_1000738c, 356
  br i1 %tmp114, label %dec_label_pc_1000730c, label %dec_label_pc_1000739c

dec_label_pc_1000739c:                            ; preds = %dec_label_pc_10007380, %dec_label_pc_100072f8
  %v0_1000739c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000739c = load i32, i32* @r31, align 4
  %v2_1000739c = icmp slt i32 %v0_1000739c, %v1_1000739c
  %v4_1000739c = icmp eq i32 %v0_1000739c, %v1_1000739c
  store i1 %v2_1000739c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000739c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_1000739c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 1, i32* %stack_var_-1908, align 4
  br i1 %v2_1000739c, label %dec_label_pc_100073b8, label %dec_label_pc_100073bc

dec_label_pc_100073b8:                            ; preds = %dec_label_pc_1000739c
  store i32 %v1_1000739c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100073bc

dec_label_pc_100073bc:                            ; preds = %dec_label_pc_1000739c, %dec_label_pc_100073b8
  %v0_100073cc = phi i32 [ %v0_1000739c, %dec_label_pc_1000739c ], [ %v1_1000739c, %dec_label_pc_100073b8 ]
  store i32 %v2_100073c0, i32* %r5.global-to-local, align 4
  store i32 %v2_100073c8, i32* %r7.global-to-local, align 4
  %v1_100073cc = add i32 %v0_100073cc, 1
  store i32 %v1_100073cc, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100073d4.159 to i32), i32* @lr, align 4
  %v5_100073d0 = call i32 @function_10009364(i32 %v1_100073cc, i32 %v2_100073bc, i32 %v2_100073c0, i32 0, i32 %v2_100073c8)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100073dc.160 to i32), i32* @lr, align 4
  %v0_100073d8 = call i32 @function_1000946c()
  store i32 %v0_100073d8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_100073d8, i32* @global_var_1001c22c.123, align 4
  %v0_100073e4 = load i32, i32* %r30.global-to-local, align 4
  %v5_100073e4 = sext i32 %v0_100073e4 to i64
  store i64 %v5_100073e4, i64* %stack_var_-1916, align 8
  br label %dec_label_pc_10007400

dec_label_pc_100073ec:                            ; preds = %dec_label_pc_10007454, %dec_label_pc_10007e74, %dec_label_pc_10007438, %dec_label_pc_10007400, %dec_label_pc_10008158, %dec_label_pc_1000812c, %dec_label_pc_10007ea8
  %v3_100073ec = load i64, i64* %stack_var_-1916, align 8
  %v4_100073ec = trunc i64 %v3_100073ec to i32
  store i32 %v4_100073ec, i32* %r9.global-to-local, align 4
  %v1_100073f0 = add i32 %v4_100073ec, 1
  store i32 %v1_100073f0, i32* %r0.global-to-local, align 4
  %v1_100073f4 = icmp slt i32 %v1_100073f0, 355
  %v2_100073f4 = icmp sgt i32 %v1_100073f0, 355
  %v3_100073f4 = icmp eq i32 %v1_100073f0, 355
  store i1 %v1_100073f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100073f4, i1* %cr7_eq.global-to-local, align 1
  %v5_100073f8 = sext i32 %v1_100073f0 to i64
  store i64 %v5_100073f8, i64* %stack_var_-1916, align 8
  br i1 %v2_100073f4, label %dec_label_pc_10006db4, label %dec_label_pc_10007400

dec_label_pc_10007400:                            ; preds = %dec_label_pc_100073ec, %dec_label_pc_100073bc
  %v0_10007400 = phi i32 [ %v1_100073f0, %dec_label_pc_100073ec ], [ 0, %dec_label_pc_100073bc ]
  %v1_10007400 = mul i32 %v0_10007400, 388
  store i32 %v1_10007400, i32* %r0.global-to-local, align 4
  %v3_10007408 = load i32, i32* @global_var_1001c230.128, align 4
  store i32 %v3_10007408, i32* %r9.global-to-local, align 4
  %v2_1000740c = add i32 %v3_10007408, %v1_10007400
  store i32 %v2_1000740c, i32* %r28.global-to-local, align 4
  %v1_10007410 = add i32 %v2_1000740c, 4
  %v2_10007410 = inttoptr i32 %v1_10007410 to i32*
  %v3_10007410 = load i32, i32* %v2_10007410, align 4
  store i32 %v3_10007410, i32* %r3.global-to-local, align 4
  %v1_10007414 = icmp slt i32 %v3_10007410, -1
  %v3_10007414 = icmp eq i32 %v3_10007410, -1
  store i1 %v1_10007414, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007414, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007414, label %dec_label_pc_100073ec, label %dec_label_pc_1000741c

dec_label_pc_1000741c:                            ; preds = %dec_label_pc_10007400
  %v1_1000741c = call i32 @__asm_rlwinm(i32 %v3_10007410, i32 29, i32 3, i32 29)
  %v0_10007420 = load i32, i32* %r3.global-to-local, align 4
  %v1_10007420 = urem i32 %v0_10007420, 32
  store i32 %v1_10007420, i32* %r11.global-to-local, align 4
  %v1_10007424 = load i32, i32* %r14.global-to-local, align 4
  %v2_10007424 = add i32 %v1_10007424, %v1_1000741c
  store i32 %v2_10007424, i32* %r9.global-to-local, align 4
  %v1_10007428 = add i32 %v2_10007424, 184
  %v2_10007428 = inttoptr i32 %v1_10007428 to i32*
  %v3_10007428 = load i32, i32* %v2_10007428, align 4
  %v3_1000742c = lshr i32 %v3_10007428, %v1_10007420
  store i32 %v3_1000742c, i32* %r0.global-to-local, align 4
  %v1_10007430 = urem i32 %v3_1000742c, 2
  store i32 %v1_10007430, i32* %r9.global-to-local, align 4
  %v3_10007430 = icmp eq i32 %v1_10007430, 0
  br i1 %v3_10007430, label %dec_label_pc_10007438, label %dec_label_pc_10007f9c

dec_label_pc_10007438:                            ; preds = %dec_label_pc_1000741c, %dec_label_pc_10008034
  %v0_10007438 = phi i32 [ %v0_10007420, %dec_label_pc_1000741c ], [ %v0_10007438.pre, %dec_label_pc_10008034 ]
  %v1_10007438 = call i32 @__asm_rlwinm(i32 %v0_10007438, i32 29, i32 3, i32 29)
  %v0_1000743c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000743c = urem i32 %v0_1000743c, 32
  store i32 %v1_1000743c, i32* %r11.global-to-local, align 4
  %v1_10007440 = load i32, i32* %r14.global-to-local, align 4
  %v2_10007440 = add i32 %v1_10007440, %v1_10007438
  store i32 %v2_10007440, i32* %r9.global-to-local, align 4
  %v1_10007444 = add i32 %v2_10007440, 56
  %v2_10007444 = inttoptr i32 %v1_10007444 to i32*
  %v3_10007444 = load i32, i32* %v2_10007444, align 4
  %v3_10007448 = lshr i32 %v3_10007444, %v1_1000743c
  store i32 %v3_10007448, i32* %r0.global-to-local, align 4
  %v1_1000744c = urem i32 %v3_10007448, 2
  %v3_1000744c = icmp eq i32 %v1_1000744c, 0
  br i1 %v3_1000744c, label %dec_label_pc_100073ec, label %dec_label_pc_10007454.preheader

dec_label_pc_10007454.preheader:                  ; preds = %dec_label_pc_10007438
  %v0_10007454.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10007454

dec_label_pc_10007454:                            ; preds = %dec_label_pc_10007454.preheader, %dec_label_pc_100074c0
  %v0_10007ec4 = phi i32 [ %v0_10007454.pre, %dec_label_pc_10007454.preheader ], [ %v0_100074d4, %dec_label_pc_100074c0 ]
  %v1_10007454 = add i32 %v0_10007ec4, 12
  %v2_10007454 = inttoptr i32 %v1_10007454 to i32*
  %v3_10007454 = load i32, i32* %v2_10007454, align 4
  store i32 %v3_10007454, i32* %r10.global-to-local, align 4
  %v1_10007458 = icmp slt i32 %v3_10007454, 0
  %v3_10007458 = icmp eq i32 %v3_10007454, 0
  store i1 %v1_10007458, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007458, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007458, label %dec_label_pc_100073ec, label %dec_label_pc_10007460

dec_label_pc_10007460:                            ; preds = %dec_label_pc_10007454
  %v1_10007460 = add i32 %v0_10007ec4, 24
  %v2_10007460 = inttoptr i32 %v1_10007460 to i32*
  %v3_10007460 = load i32, i32* %v2_10007460, align 4
  store i32 %v3_10007460, i32* %r0.global-to-local, align 4
  %v1_10007464 = add i32 %v0_10007ec4, 28
  store i32 %v1_10007464, i32* %r26.global-to-local, align 4
  %v1_10007468 = icmp slt i32 %v3_10007460, 356
  %v3_10007468 = icmp eq i32 %v3_10007460, 356
  store i1 %v1_10007468, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007468, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007468, label %dec_label_pc_10007ebc, label %dec_label_pc_10007470

dec_label_pc_10007470:                            ; preds = %dec_label_pc_10007460, %dec_label_pc_10007ebc
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10007478 = load i32, i32* %r24.global-to-local, align 4
  %v2_10007478 = inttoptr i32 %v1_10007478 to i32*
  store i32 0, i32* %v2_10007478, align 4
  %v0_1000747c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000747c = add i32 %v0_1000747c, 24
  %v2_1000747c = inttoptr i32 %v1_1000747c to i32*
  %v3_1000747c = load i32, i32* %v2_1000747c, align 4
  store i32 %v3_1000747c, i32* %r5.global-to-local, align 4
  %v1_10007480 = add i32 %v0_1000747c, 4
  %v2_10007480 = inttoptr i32 %v1_10007480 to i32*
  %v3_10007480 = load i32, i32* %v2_10007480, align 4
  store i32 %v3_10007480, i32* %r3.global-to-local, align 4
  %v0_10007484 = load i32, i32* %r26.global-to-local, align 4
  %v2_10007484 = add i32 %v0_10007484, %v3_1000747c
  store i32 %v2_10007484, i32* @r29, align 4
  %v1_10007488 = sub i32 356, %v3_1000747c
  store i32 %v1_10007488, i32* %r5.global-to-local, align 4
  store i32 268465300, i32* @lr, align 4
  %v4_10007490 = call i32 @function_10009cc0(i32 %v3_10007480, i32 %v2_10007484, i32 %v1_10007488, i32 16384)
  store i32 %v4_10007490, i32* %r3.global-to-local, align 4
  %tmp116 = icmp slt i32 %v4_10007490, 1
  br i1 %tmp116, label %dec_label_pc_10007e68, label %dec_label_pc_1000749c

dec_label_pc_1000749c:                            ; preds = %dec_label_pc_10007470
  store i32 %v4_10007490, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100074a8

dec_label_pc_100074a8:                            ; preds = %dec_label_pc_100074b8, %dec_label_pc_1000749c
  %v0_100074bc38 = phi i32 [ %v1_100074bc, %dec_label_pc_100074b8 ], [ %v4_10007490, %dec_label_pc_1000749c ]
  %v1_100074b4 = phi i32 [ %v1_100074b8, %dec_label_pc_100074b8 ], [ 0, %dec_label_pc_1000749c ]
  %v1_100074a8 = load i32, i32* @r29, align 4
  %v2_100074a8 = add i32 %v1_100074a8, %v1_100074b4
  %v3_100074a8 = inttoptr i32 %v2_100074a8 to i8*
  %v4_100074a8 = load i8, i8* %v3_100074a8, align 1
  %v5_100074a8 = zext i8 %v4_100074a8 to i32
  store i32 %v5_100074a8, i32* %r0.global-to-local, align 4
  %v3_100074ac = icmp eq i8 %v4_100074a8, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100074ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100074ac, label %dec_label_pc_100074b4, label %dec_label_pc_100074b8

dec_label_pc_100074b4:                            ; preds = %dec_label_pc_100074a8
  %v0_100074b4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100074b4 = trunc i32 %v0_100074b4 to i8
  store i8 %v3_100074b4, i8* %v3_100074a8, align 1
  %v0_100074b8.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100074bc.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100074b8

dec_label_pc_100074b8:                            ; preds = %dec_label_pc_100074a8, %dec_label_pc_100074b4
  %v0_100074bc = phi i32 [ %v0_100074bc38, %dec_label_pc_100074a8 ], [ %v0_100074bc.pre, %dec_label_pc_100074b4 ]
  %v0_100074b8 = phi i32 [ %v1_100074b4, %dec_label_pc_100074a8 ], [ %v0_100074b8.pre, %dec_label_pc_100074b4 ]
  %v1_100074b8 = add i32 %v0_100074b8, 1
  store i32 %v1_100074b8, i32* %r9.global-to-local, align 4
  %v1_100074bc = add i32 %v0_100074bc, -1
  store i32 %v1_100074bc, i32* %ctr.global-to-local, align 4
  %v2_100074bc = icmp eq i32 %v1_100074bc, 0
  br i1 %v2_100074bc, label %dec_label_pc_100074c0, label %dec_label_pc_100074a8

dec_label_pc_100074c0:                            ; preds = %dec_label_pc_100074b8, %dec_label_pc_10007e6c
  %v0_100074c0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100074c0 = add i32 %v0_100074c0, 24
  %v2_100074c0 = inttoptr i32 %v1_100074c0 to i32*
  %v3_100074c0 = load i32, i32* %v2_100074c0, align 4
  %v3_100074c4 = load i32, i32* @global_var_1001c22c.123, align 4
  store i32 %v3_100074c4, i32* %r0.global-to-local, align 4
  %v2_100074c8 = add i32 %v3_100074c0, %v4_10007490
  store i32 %v2_100074c8, i32* %r5.global-to-local, align 4
  store i32 %v2_100074c8, i32* %v2_100074c0, align 4
  %v0_100074d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100074d0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100074d0 = add i32 %v1_100074d0, 8
  %v3_100074d0 = inttoptr i32 %v2_100074d0 to i32*
  store i32 %v0_100074d0, i32* %v3_100074d0, align 4
  %v0_100074d4 = load i32, i32* %r28.global-to-local, align 4
  %v1_100074d4 = add i32 %v0_100074d4, 12
  %v2_100074d4 = inttoptr i32 %v1_100074d4 to i32*
  %v3_100074d4 = load i32, i32* %v2_100074d4, align 4
  store i32 %v3_100074d4, i32* %r10.global-to-local, align 4
  %v1_100074d8 = icmp ult i32 %v3_100074d4, 10
  %v2_100074d8 = icmp ugt i32 %v3_100074d4, 10
  %v3_100074d8 = icmp eq i32 %v3_100074d4, 10
  store i1 %v1_100074d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100074d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100074d8, label %dec_label_pc_10007454, label %dec_label_pc_100074e0

dec_label_pc_100074e0:                            ; preds = %dec_label_pc_100074c0
  %v1_100074e4 = mul i32 %v3_100074d4, 4
  store i32 %v1_100074e4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000bb5c.161 to i32), i32* %r11.global-to-local, align 4
  %v2_100074ec = add i32 %v1_100074e4, ptrtoint (i32* @global_var_1000bb5c.161 to i32)
  %v3_100074ec = inttoptr i32 %v2_100074ec to i32*
  %v4_100074ec = load i32, i32* %v3_100074ec, align 4
  %v2_100074f0 = add i32 %v4_100074ec, ptrtoint (i32* @global_var_1000bb5c.161 to i32)
  store i32 %v2_100074f0, i32* %r9.global-to-local, align 4
  store i32 %v2_100074f0, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_100074f0)
  br label %dec_label_pc_100074fc

dec_label_pc_100074fc:                            ; preds = %dec_label_pc_10007368, %dec_label_pc_1000734c, %dec_label_pc_100074e0
  %v0_100074fc = load i32, i32* %r27.global-to-local, align 4
  %v1_100074fc = load i32, i32* @r29, align 4
  %v2_100074fc = add i32 %v1_100074fc, 12
  %v3_100074fc = inttoptr i32 %v2_100074fc to i32*
  store i32 %v0_100074fc, i32* %v3_100074fc, align 4
  %v0_10007500 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007500 = trunc i32 %v0_10007500 to i8
  %v2_10007500 = load i32, i32* @r29, align 4
  %v3_10007500 = add i32 %v2_10007500, 384
  %v4_10007500 = inttoptr i32 %v3_10007500 to i8*
  store i8 %v1_10007500, i8* %v4_10007500, align 1
  br label %dec_label_pc_100072f8

dec_label_pc_10007508:                            ; preds = %dec_label_pc_100072c0
  %v1_1000750c = call i32 @__asm_rlwinm(i32 %v3_10007508, i32 29, i32 3, i32 29)
  %v0_10007510 = load i32, i32* @r31, align 4
  %v2_10007510 = icmp slt i32 %v0_10007510, %v3_10007508
  %v4_10007510 = icmp eq i32 %v0_10007510, %v3_10007508
  store i1 %v2_10007510, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007510, i1* %cr7_eq.global-to-local, align 1
  %v1_10007514 = load i32, i32* %r14.global-to-local, align 4
  %v2_10007514 = add i32 %v1_10007514, %v1_1000750c
  store i32 %v2_10007514, i32* %r11.global-to-local, align 4
  %v1_10007518 = urem i32 %v3_10007508, 32
  store i32 %v1_10007518, i32* %r0.global-to-local, align 4
  %v1_1000751c = add i32 %v2_10007514, 184
  %v2_1000751c = inttoptr i32 %v1_1000751c to i32*
  %v3_1000751c = load i32, i32* %v2_1000751c, align 4
  %v0_10007520 = load i32, i32* %r10.global-to-local, align 4
  %v3_10007520 = shl i32 %v0_10007520, %v1_10007518
  store i32 %v3_10007520, i32* %r0.global-to-local, align 4
  %v2_10007524 = or i32 %v3_10007520, %v3_1000751c
  store i32 %v2_10007524, i32* %r9.global-to-local, align 4
  store i32 %v2_10007524, i32* %v2_1000751c, align 4
  br i1 %v2_10007510, label %dec_label_pc_10007530, label %dec_label_pc_100072f8

dec_label_pc_10007530:                            ; preds = %dec_label_pc_10007508
  store i32 %v3_10007508, i32* @r31, align 4
  br label %dec_label_pc_100072f8

dec_label_pc_10007e68:                            ; preds = %dec_label_pc_10007470
  %v3_10007494 = icmp eq i32 %v4_10007490, 0
  br i1 %v3_10007494, label %dec_label_pc_1000814c, label %dec_label_pc_10007e6c

dec_label_pc_10007e6c:                            ; preds = %dec_label_pc_10007e68
  %v1_10007e6c = icmp slt i32 %v4_10007490, -1
  %v3_10007e6c = icmp eq i32 %v4_10007490, -1
  store i1 %v1_10007e6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e6c, label %dec_label_pc_10007e74, label %dec_label_pc_100074c0

dec_label_pc_10007e74:                            ; preds = %dec_label_pc_10007e6c
  %v0_10007e74 = load i32, i32* %r24.global-to-local, align 4
  %v1_10007e74 = inttoptr i32 %v0_10007e74 to i32*
  %v2_10007e74 = load i32, i32* %v1_10007e74, align 4
  store i32 %v2_10007e74, i32* %r0.global-to-local, align 4
  %v1_10007e78 = icmp slt i32 %v2_10007e74, 11
  %v3_10007e78 = icmp eq i32 %v2_10007e74, 11
  store i1 %v1_10007e78, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e78, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e78, label %dec_label_pc_100073ec, label %dec_label_pc_10007e80

dec_label_pc_10007e80:                            ; preds = %dec_label_pc_10007e74, %dec_label_pc_1000814c
  %v0_10007e80 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007e80 = add i32 %v0_10007e80, 4
  %v2_10007e80 = inttoptr i32 %v1_10007e80 to i32*
  %v3_10007e80 = load i32, i32* %v2_10007e80, align 4
  store i32 %v3_10007e80, i32* %r3.global-to-local, align 4
  store i32 268467848, i32* @lr, align 4
  %v0_10007e84 = call i32 @function_1000909c()
  store i32 %v0_10007e84, i32* %r3.global-to-local, align 4
  %v0_10007e88 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007e88 = add i32 %v0_10007e88, 384
  %v2_10007e88 = inttoptr i32 %v1_10007e88 to i8*
  %v3_10007e88 = load i8, i8* %v2_10007e88, align 1
  %v4_10007e88 = zext i8 %v3_10007e88 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10007e90 = add nuw nsw i32 %v4_10007e88, 1
  store i32 %v1_10007e90, i32* %r9.global-to-local, align 4
  %v2_10007e94 = add i32 %v0_10007e88, 4
  %v3_10007e94 = inttoptr i32 %v2_10007e94 to i32*
  store i32 -1, i32* %v3_10007e94, align 4
  %v0_10007e98 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007e98 = urem i32 %v0_10007e98, 256
  store i32 %v1_10007e98, i32* %r9.global-to-local, align 4
  %v1_10007e9c = icmp ult i32 %v1_10007e98, 9
  %v3_10007e9c = icmp eq i32 %v1_10007e98, 9
  store i1 %v1_10007e9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e9c, i1* %cr7_eq.global-to-local, align 1
  %v1_10007ea0 = trunc i32 %v0_10007e98 to i8
  %v2_10007ea0 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007ea0 = add i32 %v2_10007ea0, 384
  %v4_10007ea0 = inttoptr i32 %v3_10007ea0 to i8*
  store i8 %v1_10007ea0, i8* %v4_10007ea0, align 1
  %v0_10007ea4 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10007ea4 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10007ea4 = or i1 %v0_10007ea4, %v1_10007ea4
  br i1 %v2_10007ea4, label %dec_label_pc_10008158, label %dec_label_pc_10007ea8

dec_label_pc_10007ea8:                            ; preds = %dec_label_pc_10007e80
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10007eb0 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007eb0 = add i32 %v1_10007eb0, 12
  %v3_10007eb0 = inttoptr i32 %v2_10007eb0 to i32*
  store i32 0, i32* %v3_10007eb0, align 4
  %v0_10007eb4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007eb4 = trunc i32 %v0_10007eb4 to i8
  %v2_10007eb4 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007eb4 = add i32 %v2_10007eb4, 384
  %v4_10007eb4 = inttoptr i32 %v3_10007eb4 to i8*
  store i8 %v1_10007eb4, i8* %v4_10007eb4, align 1
  br label %dec_label_pc_100073ec

dec_label_pc_10007ebc:                            ; preds = %dec_label_pc_10007460
  store i32 292, i32* %r5.global-to-local, align 4
  store i32 %v1_10007464, i32* %r3.global-to-local, align 4
  %v1_10007ec4 = add i32 %v0_10007ec4, 92
  store i32 268467916, i32* @lr, align 4
  %v3_10007ec8 = call i32 @function_100097fc(i32 %v1_10007464, i32 %v1_10007ec4, i32 292)
  store i32 %v3_10007ec8, i32* %r3.global-to-local, align 4
  %v0_10007ecc = load i32, i32* %r28.global-to-local, align 4
  %v1_10007ecc = add i32 %v0_10007ecc, 24
  %v2_10007ecc = inttoptr i32 %v1_10007ecc to i32*
  %v3_10007ecc = load i32, i32* %v2_10007ecc, align 4
  store i32 %v3_10007ecc, i32* %r9.global-to-local, align 4
  %v1_10007ed0 = add i32 %v3_10007ecc, -64
  store i32 %v1_10007ed0, i32* %r5.global-to-local, align 4
  store i32 %v1_10007ed0, i32* %v2_10007ecc, align 4
  br label %dec_label_pc_10007470

dec_label_pc_10007f9c:                            ; preds = %dec_label_pc_1000741c
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 %v2_10007fb0, i32* %r7.global-to-local, align 4
  store i32 4, i32* %stack_var_-1912, align 4
  store i32 0, i32* %stack_var_-1920, align 4
  store i32 268468160, i32* @lr, align 4
  %v5_10007fbc = call i32 @function_10009c54(i32 1, i32 4, i32 %v2_10007fa0, i32 %v2_10007fb0, i32 %v1_10007430)
  store i32 %v5_10007fbc, i32* %r3.global-to-local, align 4
  %v3_10007fc0 = load i32, i32* %stack_var_-1920, align 4
  store i32 %v3_10007fc0, i32* %r0.global-to-local, align 4
  %v2_10007fc4 = or i32 %v3_10007fc0, %v5_10007fbc
  %v5_10007fc4 = icmp eq i32 %v2_10007fc4, 0
  br i1 %v5_10007fc4, label %dec_label_pc_10007fcc, label %dec_label_pc_1000812c

dec_label_pc_10007fcc:                            ; preds = %dec_label_pc_10007f9c
  store i32 2, i32* %r10.global-to-local, align 4
  %v1_10007fd0 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007fd0 = add i32 %v1_10007fd0, 12
  %v3_10007fd0 = inttoptr i32 %v2_10007fd0 to i32*
  store i32 2, i32* %v3_10007fd0, align 4
  %v0_10007fd4 = call i32 @function_10005f3c()
  %v3_10007fdc = load i16, i16* @global_var_1001c228.126, align 2
  %v4_10007fdc = zext i16 %v3_10007fdc to i32
  store i32 %v4_10007fdc, i32* %r11.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007fe4 = load i32, i32* @global_var_1001c220.124, align 4
  store i32 %v3_10007fe4, i32* %r10.global-to-local, align 4
  %v1_10007fec = icmp slt i32 %v3_10007fe4, 0
  %v3_10007fec = icmp eq i32 %v3_10007fe4, 0
  store i1 %v1_10007fec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007fec, i1* %cr7_eq.global-to-local, align 1
  %v2_10007fe8 = urem i32 %v0_10007fd4, %v4_10007fdc
  %v2_10007ff0 = sub i32 %v0_10007fd4, %v2_10007fe8
  store i32 %v2_10007ff0, i32* %r0.global-to-local, align 4
  store i32 %v2_10007fe8, i32* %r3.global-to-local, align 4
  %tmp118 = icmp slt i32 %v3_10007fe4, 1
  br i1 %tmp118, label %dec_label_pc_10008030, label %dec_label_pc_10008000

dec_label_pc_10008000:                            ; preds = %dec_label_pc_10007fcc
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v3_10007fe4, i32* %ctr.global-to-local, align 4
  %v3_10008008 = load i32, i32* @global_var_1001c224.125, align 4
  store i32 %v3_10008008, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000800c

dec_label_pc_1000800c:                            ; preds = %dec_label_pc_10008028, %dec_label_pc_10008000
  %v0_1000802c = phi i32 [ %v1_1000802c, %dec_label_pc_10008028 ], [ %v3_10007fe4, %dec_label_pc_10008000 ]
  %v0_10008028 = phi i32 [ %v1_10008028, %dec_label_pc_10008028 ], [ %v3_10008008, %dec_label_pc_10008000 ]
  store i32 %v0_10008028, i32* %r9.global-to-local, align 4
  %v1_10008010 = add i32 %v0_10008028, 8
  %v2_10008010 = inttoptr i32 %v1_10008010 to i16*
  %v3_10008010 = load i16, i16* %v2_10008010, align 2
  %v4_10008010 = zext i16 %v3_10008010 to i32
  store i32 %v4_10008010, i32* %r0.global-to-local, align 4
  %v2_10008014 = icmp ult i32 %v4_10008010, %v2_10007fe8
  %v3_10008014 = icmp ugt i32 %v4_10008010, %v2_10007fe8
  %v4_10008014 = icmp eq i32 %v4_10008010, %v2_10007fe8
  br i1 %v3_10008014, label %dec_label_pc_10008028, label %dec_label_pc_1000801c

dec_label_pc_1000801c:                            ; preds = %dec_label_pc_1000800c
  %v1_1000801c = add i32 %v0_10008028, 10
  %v2_1000801c = inttoptr i32 %v1_1000801c to i16*
  %v3_1000801c = load i16, i16* %v2_1000801c, align 2
  %v4_1000801c = zext i16 %v3_1000801c to i32
  store i32 %v4_1000801c, i32* %r0.global-to-local, align 4
  %v2_10008020 = icmp ult i32 %v4_1000801c, %v2_10007fe8
  %v3_10008020 = icmp ugt i32 %v4_1000801c, %v2_10007fe8
  %v4_10008020 = icmp eq i32 %v4_1000801c, %v2_10007fe8
  br i1 %v3_10008020, label %dec_label_pc_10008034.loopexit, label %dec_label_pc_10008028

dec_label_pc_10008028:                            ; preds = %dec_label_pc_1000801c, %dec_label_pc_1000800c
  %v4_100080207 = phi i1 [ %v4_10008020, %dec_label_pc_1000801c ], [ %v4_10008014, %dec_label_pc_1000800c ]
  %v2_100080205 = phi i1 [ %v2_10008020, %dec_label_pc_1000801c ], [ %v2_10008014, %dec_label_pc_1000800c ]
  %v1_10008028 = add i32 %v0_10008028, 16
  store i32 %v1_10008028, i32* %r0.global-to-local, align 4
  %v1_1000802c = add i32 %v0_1000802c, -1
  store i32 %v1_1000802c, i32* %ctr.global-to-local, align 4
  %v2_1000802c = icmp eq i32 %v1_1000802c, 0
  br i1 %v2_1000802c, label %dec_label_pc_10008030.loopexit, label %dec_label_pc_1000800c

dec_label_pc_10008030.loopexit:                   ; preds = %dec_label_pc_10008028
  store i1 %v2_100080205, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100080207, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10008030

dec_label_pc_10008030:                            ; preds = %dec_label_pc_10008030.loopexit, %dec_label_pc_10007fcc
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008034

dec_label_pc_10008034.loopexit:                   ; preds = %dec_label_pc_1000801c
  store i1 %v2_10008020, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008020, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10008034

dec_label_pc_10008034:                            ; preds = %dec_label_pc_10008034.loopexit, %dec_label_pc_10008030
  %v0_1000803c = phi i32 [ %v0_10008028, %dec_label_pc_10008034.loopexit ], [ 0, %dec_label_pc_10008030 ]
  %v0_10008034 = load i32, i32* %r28.global-to-local, align 4
  %v1_10008034 = add i32 %v0_10008034, 4
  %v2_10008034 = inttoptr i32 %v1_10008034 to i32*
  %v3_10008034 = load i32, i32* %v2_10008034, align 4
  store i32 %v3_10008034, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_1000803c = inttoptr i32 %v0_10008034 to i32*
  store i32 %v0_1000803c, i32* %v2_1000803c, align 4
  %v0_10008040 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008040 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008040 = add i32 %v1_10008040, 24
  %v3_10008040 = inttoptr i32 %v2_10008040 to i32*
  store i32 %v0_10008040, i32* %v3_10008040, align 4
  %v0_10007438.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007438

dec_label_pc_1000812c:                            ; preds = %dec_label_pc_10007f9c
  %v0_1000812c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000812c = add i32 %v0_1000812c, 4
  %v2_1000812c = inttoptr i32 %v1_1000812c to i32*
  %v3_1000812c = load i32, i32* %v2_1000812c, align 4
  store i32 %v3_1000812c, i32* %r3.global-to-local, align 4
  store i32 268468532, i32* @lr, align 4
  %v0_10008130 = call i32 @function_1000909c()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_1000813c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000813c = add i32 %v1_1000813c, 4
  %v3_1000813c = inttoptr i32 %v2_1000813c to i32*
  store i32 -1, i32* %v3_1000813c, align 4
  %v0_10008140 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008140 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008140 = add i32 %v1_10008140, 12
  %v3_10008140 = inttoptr i32 %v2_10008140 to i32*
  store i32 %v0_10008140, i32* %v3_10008140, align 4
  %v0_10008144 = load i32, i32* @r31, align 4
  %v1_10008144 = trunc i32 %v0_10008144 to i8
  %v2_10008144 = load i32, i32* %r28.global-to-local, align 4
  %v3_10008144 = add i32 %v2_10008144, 384
  %v4_10008144 = inttoptr i32 %v3_10008144 to i8*
  store i8 %v1_10008144, i8* %v4_10008144, align 1
  br label %dec_label_pc_100073ec

dec_label_pc_1000814c:                            ; preds = %dec_label_pc_10007e68
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_10008150 = load i32, i32* %r24.global-to-local, align 4
  %v2_10008150 = inttoptr i32 %v1_10008150 to i32*
  store i32 104, i32* %v2_10008150, align 4
  br label %dec_label_pc_10007e80

dec_label_pc_10008158:                            ; preds = %dec_label_pc_10007e80
  %v0_10008158 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008158, i32* @r3, align 4
  store i32 268468576, i32* @lr, align 4
  %v0_1000815c = call i32 @function_100067a8()
  store i32 %v0_1000815c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100073ec

dec_label_pc_1000819c:                            ; preds = %dec_label_pc_10006bbc
  %v3_100081a0 = load i32, i32* @global_var_1001c234.129, align 4
  store i32 %v3_100081a0, i32* %r3.global-to-local, align 4
  store i32 268468648, i32* @lr, align 4
  %v0_100081a4 = call i32 @function_1000909c()
  store i32 %v0_100081a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007194

dec_label_pc_100081ac:                            ; preds = %dec_label_pc_100070ac
  store i32 %v0_100070a4, i32* @r29, align 4
  br label %dec_label_pc_100081b0

dec_label_pc_100081b0:                            ; preds = %dec_label_pc_100070e0, %dec_label_pc_100081ac
  %v1_100081b0 = phi i32 [ %v2_100070b8, %dec_label_pc_100081ac ], [ %v0_100070e0, %dec_label_pc_100070e0 ]
  %v2_100081b0 = add i32 %v1_100081b0, 16
  %v3_100081b0 = inttoptr i32 %v2_100081b0 to i32*
  store i32 %tmp50, i32* %v3_100081b0, align 4
  %v0_100081b4 = load i32, i32* @r29, align 4
  store i32 %v0_100081b4, i32* @r31, align 4
  %v0_100081b8 = load i32, i32* %r8.global-to-local, align 4
  %v1_100081b8 = trunc i32 %v0_100081b8 to i16
  %v2_100081b8 = load i32, i32* @r3, align 4
  %v3_100081b8 = add i32 %v2_100081b8, 20
  %v4_100081b8 = inttoptr i32 %v3_100081b8 to i16*
  store i16 %v1_100081b8, i16* %v4_100081b8, align 2
  store i32 268468672, i32* @lr, align 4
  %v0_100081bc = call i32 @function_100067a8()
  store i32 %v0_100081bc, i32* %r3.global-to-local, align 4
  %v1_10006fec.pre.pre = load i32, i32* %r24.global-to-local, align 4
  br label %dec_label_pc_10006fe4

; uselistorder directives
  uselistorder i32 %v1_1000802c, { 2, 1, 0 }
  uselistorder i32 %v1_10008028, { 1, 0 }
  uselistorder i32 %v4_1000801c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10008010, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10008028, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_10007fe8, { 3, 2, 1, 6, 5, 4, 0, 7 }
  uselistorder i32 %v3_10007fe4, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v1_10007e98, { 1, 2, 0 }
  uselistorder i32 %v0_10007e98, { 1, 0 }
  uselistorder i32 %v2_10007e74, { 1, 0, 2 }
  uselistorder i32 %v1_10007518, { 1, 0 }
  uselistorder i32 %v1_100074e4, { 1, 0 }
  uselistorder i32 %v3_100074d4, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_100074d4, { 1, 0 }
  uselistorder i32 %v1_100074bc, { 2, 1, 0 }
  uselistorder i32 %v1_100074b8, { 1, 0 }
  uselistorder i32 %v1_100074b4, { 1, 0 }
  uselistorder i32 %v4_10007490, { 3, 2, 6, 0, 1, 4, 5, 7 }
  uselistorder i32 %v3_1000747c, { 1, 0, 2 }
  uselistorder i32 %v1_10007464, { 1, 0, 2 }
  uselistorder i32 %v3_10007460, { 1, 0, 2 }
  uselistorder i32 %v3_10007454, { 1, 0, 2 }
  uselistorder i32 %v0_10007ec4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000743c, { 1, 0 }
  uselistorder i32 %v1_10007430, { 2, 1, 0 }
  uselistorder i32 %v1_10007420, { 1, 0 }
  uselistorder i32 %v0_10007420, { 1, 0 }
  uselistorder i32 %v3_10007410, { 0, 2, 1, 3 }
  uselistorder i32 %v1_100073f0, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_1000738c, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v1_10007370, { 1, 2, 0 }
  uselistorder i32 %v1_1000736c, { 1, 0 }
  uselistorder i32 %v3_10007354, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10007340, { 2, 1, 0, 3 }
  uselistorder i1 %v3_10007324, { 2, 0, 1 }
  uselistorder i1 %v1_10007324, { 1, 0, 2 }
  uselistorder i32 %v3_10007320, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v2_1000731c, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %v1_100072fc, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v1_100072dc, { 1, 0 }
  uselistorder i32 %v3_10007508, { 5, 0, 8, 7, 9, 4, 1, 3, 2, 6, 10 }
  uselistorder i32 %v2_100072b4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1000728c, { 1, 0 }
  uselistorder i32 %v1_1000726c, { 1, 0 }
  uselistorder i32 %v0_10007238, { 1, 2, 0 }
  uselistorder i32 %v0_1000722c, { 1, 2, 0 }
  uselistorder i32 %v0_10007220, { 1, 2, 0 }
  uselistorder i32 %v0_10007214, { 1, 2, 0 }
  uselistorder i32 %v0_100071f0, { 2, 1, 4, 3, 6, 5, 7, 8, 0 }
  uselistorder i32 %v0_100071dc, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_100071d0, { 1, 2, 0 }
  uselistorder i32 %v0_100071bc, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_100071a8, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_1000719c, { 1, 2, 0 }
  uselistorder i32 %v1_100070e8, { 1, 0 }
  uselistorder i32 %v3_100070e0, { 1, 0, 2 }
  uselistorder i32 %v1_100070dc, { 2, 1, 0 }
  uselistorder i32 %v1_100070d8, { 1, 0 }
  uselistorder i32 %v0_100070e0, { 0, 3, 2, 1 }
  uselistorder i32 %v3_100070bc, { 1, 0, 2 }
  uselistorder i32 %v0_100070a4, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v3_10007030, { 1, 0, 2 }
  uselistorder i32 %v2_10007014, { 1, 0, 2 }
  uselistorder i32 %v0_10007014, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_10007008, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_10007058, { 1, 0 }
  uselistorder i32 %v1_10007080, { 1, 0 }
  uselistorder i32 %v1_10007078, { 1, 0 }
  uselistorder i32 %v1_10007098, { 2, 1, 0 }
  uselistorder i32 %v1_10007070, { 1, 0 }
  uselistorder i32 %v4_10007060, { 1, 0, 2 }
  uselistorder i32 %v1_10006fc4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_10006f50, { 1, 0 }
  uselistorder i32 %v4_10006f30, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10006ea0, { 3, 1, 2, 0 }
  uselistorder i32 %v1_10006e28, { 3, 1, 2, 0 }
  uselistorder i32 %v0_10006e14, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 23, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 36, 35, 34, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 51, 53, 52, 54, 55 }
  uselistorder i32 %v1_10006dfc, { 1, 2, 0 }
  uselistorder i32 %v0_10006df8, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10006de4, { 1, 0 }
  uselistorder i32 %v3_10006db4, { 1, 0, 2 }
  uselistorder i32 %v0_10006c50, { 1, 0 }
  uselistorder i32 %v1_10006c10, { 3, 1, 2, 0 }
  uselistorder i32 %v5_10006c00, { 1, 0, 2 }
  uselistorder i32 %v3_10006ba4, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10006b8c, { 1, 0 }
  uselistorder i32 %v0_10006b88, { 1, 0 }
  uselistorder i32 %v2_10006b40, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10006a9c, { 3, 2, 1, 4, 0, 5, 7, 6, 8 }
  uselistorder i64* %stack_var_-1916, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-1888, { 0, 2, 1, 3 }
  uselistorder i32 %tmp56, { 1, 2, 0 }
  uselistorder i8 %tmp55, { 2, 1, 0 }
  uselistorder i16 %tmp54, { 0, 1, 4, 3, 2 }
  uselistorder i32 %tmp52, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 20, 21, 25, 22, 23, 24, 26, 27, 49, 50, 28, 51, 52, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 25, 28, 27, 29, 30, 31, 18, 32, 33, 34, 35, 36, 37, 38, 39, 2, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 3, 4, 1, 2, 5, 6 }
  uselistorder i32* %r28.global-to-local, { 4, 1, 2, 3, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 20, 15, 16, 17, 18, 0, 19, 21, 22, 23 }
  uselistorder i32* %r24.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r14.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 21, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 8, 5, 6, 9, 10, 7, 11, 19, 12, 13, 15, 14, 16, 17, 18 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 22, 21, 23, 24, 25, 26, 27, 33, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 63, 64, 66, 67, 68 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 17, 18, 7, 8, 9, 19, 20, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* %cr7_lt.global-to-local, { 22, 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 23, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88 }
  uselistorder i1* %cr7_eq.global-to-local, { 24, 25, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 23, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90 }
  uselistorder i16* @global_var_1001c228.126, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_10009c54, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009cc0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_10009364, { 2, 1, 0 }
  uselistorder i32 ()* @function_100067a8, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10009cf8, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10009d70, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16384, { 1, 18, 0, 2, 19, 21, 22, 23, 24, 25, 26, 20, 3, 27, 4, 28, 29, 30, 5, 7, 6, 8, 31, 9, 32, 11, 33, 10, 13, 34, 12, 15, 14, 16, 35, 36, 17, 37, 38 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10004430, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_100043cc, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 33, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 192, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_10006894, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16* @global_var_1001c2b6.139, { 2, 0, 1 }
  uselistorder i16 23, { 2, 3, 1, 0 }
  uselistorder i8 64, { 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 1024, { 1, 0 }
  uselistorder i32 65536, { 69, 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68 }
  uselistorder i32 ()* @function_10005f3c, { 75, 74, 73, 72, 71, 70, 68, 69, 22, 21, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 3, 2, 1, 0, 9, 8, 7, 6, 5, 4, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009db0, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 2048, { 5, 3, 0, 1, 2, 4, 6 }
  uselistorder i32 388, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 356, { 3, 4, 5, 0, 7, 8, 1, 2, 9, 6 }
  uselistorder i32 ()* @function_1000946c, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_10005f8c, { 1, 0 }
  uselistorder i32 (i32)* @function_10008be0, { 2, 1, 3, 0 }
  uselistorder i32 ()* @function_100090e4, { 5, 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_100081b0, { 1, 0 }
  uselistorder label %dec_label_pc_10007e80, { 1, 0 }
  uselistorder label %dec_label_pc_100074fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100074c0, { 1, 0 }
  uselistorder label %dec_label_pc_100074b8, { 1, 0 }
  uselistorder label %dec_label_pc_10007470, { 1, 0 }
  uselistorder label %dec_label_pc_10007454, { 1, 0 }
  uselistorder label %dec_label_pc_10007438, { 1, 0 }
  uselistorder label %dec_label_pc_100073ec, { 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100073bc, { 1, 0 }
  uselistorder label %dec_label_pc_100072f8, { 3, 0, 4, 2, 5, 1 }
  uselistorder label %dec_label_pc_10007280.dec_label_pc_10007280_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10007260.dec_label_pc_10007260_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10007250, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000719c, { 1, 0 }
  uselistorder label %dec_label_pc_10007194, { 1, 0 }
  uselistorder label %dec_label_pc_10006fe4, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_10006fd8, { 1, 0 }
  uselistorder label %dec_label_pc_10006f04, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 10, 8, 11, 13, 12 }
  uselistorder label %dec_label_pc_10006df8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006c0c, { 1, 0 }
}

define i32 @function_100081c4(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_100081c4:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_100081c4 = icmp eq i32* %arg2, null
  %v1_100081cc = mul i32 %arg1, 8
  store i32 %v1_100081cc, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c2f0.183 to i32), i32* %r9.global-to-local, align 4
  br i1 %v3_100081c4, label %dec_label_pc_100081e4, label %dec_label_pc_100081dc

dec_label_pc_100081dc:                            ; preds = %dec_label_pc_100081c4
  %v1_100081dc = add i32 %v1_100081cc, add (i32 ptrtoint (i32* @global_var_1001c2f0.183 to i32), i32 4)
  %v2_100081dc = inttoptr i32 %v1_100081dc to i16*
  %v3_100081dc = load i16, i16* %v2_100081dc, align 4
  %v4_100081dc = zext i16 %v3_100081dc to i32
  store i32 %v4_100081dc, i32* %arg2, align 4
  %v0_100081e4.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_100081e4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100081e4

dec_label_pc_100081e4:                            ; preds = %dec_label_pc_100081c4, %dec_label_pc_100081dc
  %v1_100081e4 = phi i32 [ ptrtoint (i32* @global_var_1001c2f0.183 to i32), %dec_label_pc_100081c4 ], [ %v1_100081e4.pre, %dec_label_pc_100081dc ]
  %v0_100081e4 = phi i32 [ %v1_100081cc, %dec_label_pc_100081c4 ], [ %v0_100081e4.pre, %dec_label_pc_100081dc ]
  %v2_100081e4 = add i32 %v0_100081e4, %v1_100081e4
  %v3_100081e4 = inttoptr i32 %v2_100081e4 to i32*
  %v4_100081e4 = load i32, i32* %v3_100081e4, align 4
  store i32 %v4_100081e4, i32* %r3.global-to-local, align 4
  ret i32 %v4_100081e4

; uselistorder directives
  uselistorder i32 %v1_100081cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100081e4, { 1, 0 }
}

define i32 @function_100081ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_100081ec:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_100081f0 = mul i32 %arg1, 8
  %v2_100081f8 = add i32 %v1_100081f0, ptrtoint (i32* @global_var_1001c2f0.183 to i32)
  %v1_10008200 = add i32 %v1_100081f0, add (i32 ptrtoint (i32* @global_var_1001c2f0.183 to i32), i32 4)
  %v2_10008200 = inttoptr i32 %v1_10008200 to i16*
  %v3_10008200 = load i16, i16* %v2_10008200, align 4
  %v3_10008204 = icmp eq i16 %v3_10008200, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008204, i1* %cr7_eq.global-to-local, align 1
  %v3_10008208 = load i32, i32* @global_var_1001c1ec.184, align 4
  %v1_1000820c = udiv i32 %v3_10008208, 16777216
  store i32 %v1_1000820c, i32* @r5, align 4
  %v1_10008210 = urem i32 %v3_10008208, 256
  store i32 %v1_10008210, i32* %r6.global-to-local, align 4
  %v1_10008214 = call i32 @__asm_rlwinm(i32 %v3_10008208, i32 24, i32 24, i32 31)
  %v1_10008218 = call i32 @__asm_rlwinm(i32 %v3_10008208, i32 16, i32 24, i32 31)
  %v0_1000821c = load i32, i32* @lr, align 4
  %v1_1000821c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_1000821c = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_1000821c = or i1 %v1_1000821c, %v2_1000821c
  call void @__pseudo_cond_branch(i1 %v3_1000821c, i32 %v0_1000821c)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10008224 = inttoptr i32 %v2_100081f8 to i32*
  br label %dec_label_pc_10008224

dec_label_pc_10008224:                            ; preds = %dec_label_pc_10008224, %dec_label_pc_100081ec
  %v1_10008230 = phi i32 [ %v1_10008264, %dec_label_pc_10008224 ], [ 0, %dec_label_pc_100081ec ]
  %v2_10008224 = load i32, i32* %v1_10008224, align 4
  %v2_10008228 = add i32 %v2_10008224, %v1_10008230
  %v3_10008228 = inttoptr i32 %v2_10008228 to i8*
  %v4_10008228 = load i8, i8* %v3_10008228, align 1
  %v5_10008228 = zext i8 %v4_10008228 to i32
  %v0_1000822c = load i32, i32* %r6.global-to-local, align 4
  %v2_1000822c = xor i32 %v0_1000822c, %v5_10008228
  %v3_10008230 = trunc i32 %v2_1000822c to i8
  store i8 %v3_10008230, i8* %v3_10008228, align 1
  %v2_10008234 = load i32, i32* %v1_10008224, align 4
  %v0_10008238 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008238 = add i32 %v0_10008238, %v2_10008234
  %v3_10008238 = inttoptr i32 %v2_10008238 to i8*
  %v4_10008238 = load i8, i8* %v3_10008238, align 1
  %v5_10008238 = zext i8 %v4_10008238 to i32
  %v2_1000823c = xor i32 %v5_10008238, %v1_10008214
  %v3_10008240 = trunc i32 %v2_1000823c to i8
  store i8 %v3_10008240, i8* %v3_10008238, align 1
  %v2_10008244 = load i32, i32* %v1_10008224, align 4
  %v0_10008248 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008248 = add i32 %v0_10008248, %v2_10008244
  %v3_10008248 = inttoptr i32 %v2_10008248 to i8*
  %v4_10008248 = load i8, i8* %v3_10008248, align 1
  %v5_10008248 = zext i8 %v4_10008248 to i32
  %v2_1000824c = xor i32 %v5_10008248, %v1_10008218
  %v3_10008250 = trunc i32 %v2_1000824c to i8
  store i8 %v3_10008250, i8* %v3_10008248, align 1
  %v2_10008254 = load i32, i32* %v1_10008224, align 4
  %v0_10008258 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008258 = add i32 %v0_10008258, %v2_10008254
  %v3_10008258 = inttoptr i32 %v2_10008258 to i8*
  %v4_10008258 = load i8, i8* %v3_10008258, align 1
  %v5_10008258 = zext i8 %v4_10008258 to i32
  %v0_1000825c = load i32, i32* @r5, align 4
  %v2_1000825c = xor i32 %v0_1000825c, %v5_10008258
  %v3_10008260 = trunc i32 %v2_1000825c to i8
  store i8 %v3_10008260, i8* %v3_10008258, align 1
  %v0_10008264 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008264 = add i32 %v0_10008264, 1
  store i32 %v1_10008264, i32* %r10.global-to-local, align 4
  %v3_10008268 = load i16, i16* %v2_10008200, align 4
  %v4_10008268 = zext i16 %v3_10008268 to i32
  %v2_1000826c = icmp slt i32 %v4_10008268, %v1_10008264
  %v3_1000826c = icmp sgt i32 %v4_10008268, %v1_10008264
  %v4_1000826c = icmp eq i32 %v4_10008268, %v1_10008264
  store i1 %v2_1000826c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000826c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000826c, label %dec_label_pc_10008224, label %dec_label_pc_10008274

dec_label_pc_10008274:                            ; preds = %dec_label_pc_10008224
  ret i32 %v2_100081f8

; uselistorder directives
  uselistorder i32 %v4_10008268, { 2, 1, 0 }
  uselistorder i32 %v1_10008264, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10008208, { 2, 3, 1, 0 }
  uselistorder i32 %v1_100081f0, { 1, 0 }
}

define i32 @function_10008278(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008278:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_1000827c = mul i32 %arg1, 8
  %v2_10008284 = add i32 %v1_1000827c, ptrtoint (i32* @global_var_1001c2f0.183 to i32)
  %v1_1000828c = add i32 %v1_1000827c, add (i32 ptrtoint (i32* @global_var_1001c2f0.183 to i32), i32 4)
  %v2_1000828c = inttoptr i32 %v1_1000828c to i16*
  %v3_1000828c = load i16, i16* %v2_1000828c, align 4
  %v3_10008290 = icmp eq i16 %v3_1000828c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008290, i1* %cr7_eq.global-to-local, align 1
  %v3_10008294 = load i32, i32* @global_var_1001c1ec.184, align 4
  %v1_10008298 = udiv i32 %v3_10008294, 16777216
  store i32 %v1_10008298, i32* @r5, align 4
  %v1_1000829c = urem i32 %v3_10008294, 256
  store i32 %v1_1000829c, i32* %r6.global-to-local, align 4
  %v1_100082a0 = call i32 @__asm_rlwinm(i32 %v3_10008294, i32 24, i32 24, i32 31)
  %v1_100082a4 = call i32 @__asm_rlwinm(i32 %v3_10008294, i32 16, i32 24, i32 31)
  %v0_100082a8 = load i32, i32* @lr, align 4
  %v1_100082a8 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_100082a8 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_100082a8 = or i1 %v1_100082a8, %v2_100082a8
  call void @__pseudo_cond_branch(i1 %v3_100082a8, i32 %v0_100082a8)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_100082b0 = inttoptr i32 %v2_10008284 to i32*
  br label %dec_label_pc_100082b0

dec_label_pc_100082b0:                            ; preds = %dec_label_pc_100082b0, %dec_label_pc_10008278
  %v1_100082bc = phi i32 [ %v1_100082f0, %dec_label_pc_100082b0 ], [ 0, %dec_label_pc_10008278 ]
  %v2_100082b0 = load i32, i32* %v1_100082b0, align 4
  %v2_100082b4 = add i32 %v2_100082b0, %v1_100082bc
  %v3_100082b4 = inttoptr i32 %v2_100082b4 to i8*
  %v4_100082b4 = load i8, i8* %v3_100082b4, align 1
  %v5_100082b4 = zext i8 %v4_100082b4 to i32
  %v0_100082b8 = load i32, i32* %r6.global-to-local, align 4
  %v2_100082b8 = xor i32 %v0_100082b8, %v5_100082b4
  %v3_100082bc = trunc i32 %v2_100082b8 to i8
  store i8 %v3_100082bc, i8* %v3_100082b4, align 1
  %v2_100082c0 = load i32, i32* %v1_100082b0, align 4
  %v0_100082c4 = load i32, i32* %r10.global-to-local, align 4
  %v2_100082c4 = add i32 %v0_100082c4, %v2_100082c0
  %v3_100082c4 = inttoptr i32 %v2_100082c4 to i8*
  %v4_100082c4 = load i8, i8* %v3_100082c4, align 1
  %v5_100082c4 = zext i8 %v4_100082c4 to i32
  %v2_100082c8 = xor i32 %v5_100082c4, %v1_100082a0
  %v3_100082cc = trunc i32 %v2_100082c8 to i8
  store i8 %v3_100082cc, i8* %v3_100082c4, align 1
  %v2_100082d0 = load i32, i32* %v1_100082b0, align 4
  %v0_100082d4 = load i32, i32* %r10.global-to-local, align 4
  %v2_100082d4 = add i32 %v0_100082d4, %v2_100082d0
  %v3_100082d4 = inttoptr i32 %v2_100082d4 to i8*
  %v4_100082d4 = load i8, i8* %v3_100082d4, align 1
  %v5_100082d4 = zext i8 %v4_100082d4 to i32
  %v2_100082d8 = xor i32 %v5_100082d4, %v1_100082a4
  %v3_100082dc = trunc i32 %v2_100082d8 to i8
  store i8 %v3_100082dc, i8* %v3_100082d4, align 1
  %v2_100082e0 = load i32, i32* %v1_100082b0, align 4
  %v0_100082e4 = load i32, i32* %r10.global-to-local, align 4
  %v2_100082e4 = add i32 %v0_100082e4, %v2_100082e0
  %v3_100082e4 = inttoptr i32 %v2_100082e4 to i8*
  %v4_100082e4 = load i8, i8* %v3_100082e4, align 1
  %v5_100082e4 = zext i8 %v4_100082e4 to i32
  %v0_100082e8 = load i32, i32* @r5, align 4
  %v2_100082e8 = xor i32 %v0_100082e8, %v5_100082e4
  %v3_100082ec = trunc i32 %v2_100082e8 to i8
  store i8 %v3_100082ec, i8* %v3_100082e4, align 1
  %v0_100082f0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100082f0 = add i32 %v0_100082f0, 1
  store i32 %v1_100082f0, i32* %r10.global-to-local, align 4
  %v3_100082f4 = load i16, i16* %v2_1000828c, align 4
  %v4_100082f4 = zext i16 %v3_100082f4 to i32
  %v2_100082f8 = icmp slt i32 %v4_100082f4, %v1_100082f0
  %v3_100082f8 = icmp sgt i32 %v4_100082f4, %v1_100082f0
  %v4_100082f8 = icmp eq i32 %v4_100082f4, %v1_100082f0
  store i1 %v2_100082f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100082f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100082f8, label %dec_label_pc_100082b0, label %dec_label_pc_10008300

dec_label_pc_10008300:                            ; preds = %dec_label_pc_100082b0
  ret i32 %v2_10008284

; uselistorder directives
  uselistorder i32 %v4_100082f4, { 2, 1, 0 }
  uselistorder i32 %v1_100082f0, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10008294, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000827c, { 1, 0 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 5, 4, 7, 6 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1001c2f0.183 to i32), i32 4), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001c2f0.183 to i32), { 1, 3, 0, 2, 4 }
}

define i32 @function_10008304(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008304:
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  store i32 2, i32* @r3, align 4
  store i32 5, i32* %r19.global-to-local, align 4
  store i32 23, i32* %r20.global-to-local, align 4
  store i32 6, i32* %r21.global-to-local, align 4
  store i32 10, i32* %r22.global-to-local, align 4
  store i32 19, i32* %r23.global-to-local, align 4
  store i32 8, i32* %r24.global-to-local, align 4
  store i32 14, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r26.global-to-local, align 4
  %v0_10008358 = load i32, i32* @r28, align 4
  store i32 268469092, i32* @lr, align 4
  %v0_10008360 = call i32 @function_10009ff0()
  store i32 %v0_10008360, i32* %r28.global-to-local, align 4
  store i32 268469120, i32* @lr, align 4
  %v3_1000837c = call i32 @function_10008960(i32 ptrtoint (i32* @global_var_1000bb98.185 to i32), i32 2, i32 2)
  %v0_10008380 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008380, i32* @global_var_1001c2f8.186, align 4
  store i32 10, i32* @r3, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1000bb9c.187 to i32), i32* @r28, align 4
  %v0_10008390 = load i32, i32* %r26.global-to-local, align 4
  %v1_10008390 = trunc i32 %v0_10008390 to i16
  store i16 %v1_10008390, i16* bitcast (i32* @global_var_1001c2fc.188 to i16*), align 4
  store i32 268469144, i32* @lr, align 4
  %v0_10008394 = call i32 @function_10009ff0()
  %v0_10008398 = load i32, i32* @r28, align 4
  store i32 %v0_10008394, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100083a8.189 to i32), i32* @lr, align 4
  %v4_100083a4 = call i32 @function_10008960(i32 %v0_10008398, i32 10, i32 10)
  store i32 10, i32* @r3, align 4
  store i32 %v0_10008394, i32* @global_var_1001c300.190, align 4
  %v0_100083b0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100083b0 = trunc i32 %v0_100083b0 to i16
  store i16 %v1_100083b0, i16* bitcast (i32* @global_var_1001c304.191 to i16*), align 4
  store i32 268469176, i32* @lr, align 4
  %v0_100083b4 = call i32 @function_10009ff0()
  %v0_100083b8 = load i32, i32* @r28, align 4
  store i32 %v0_100083b4, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100083c8.192 to i32), i32* @lr, align 4
  %v4_100083c4 = call i32 @function_10008960(i32 %v0_100083b8, i32 10, i32 10)
  store i32 2, i32* @r3, align 4
  store i32 %v0_100083b4, i32* @global_var_1001c308.193, align 4
  %v0_100083d0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100083d0 = trunc i32 %v0_100083d0 to i16
  store i16 %v1_100083d0, i16* bitcast (i32* @global_var_1001c30c.194 to i16*), align 4
  store i32 268469208, i32* @lr, align 4
  %v0_100083d4 = call i32 @function_10009ff0()
  store i32 %v0_100083d4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100083ec.196 to i32), i32* @lr, align 4
  %v3_100083e8 = call i32 @function_10008960(i32 ptrtoint (i32* @global_var_1000bba8.195 to i32), i32 2, i32 2)
  store i32 36, i32* @r3, align 4
  %v0_100083f0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100083f0, i32* @global_var_1001c310.197, align 4
  store i32 7, i32* %r27.global-to-local, align 4
  %v0_100083f8 = load i32, i32* %r26.global-to-local, align 4
  %v1_100083f8 = trunc i32 %v0_100083f8 to i16
  store i16 %v1_100083f8, i16* bitcast (i32* @global_var_1001c314.198 to i16*), align 4
  store i32 268469248, i32* @lr, align 4
  %v0_100083fc = call i32 @function_10009ff0()
  store i32 %v0_100083fc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008414.200 to i32), i32* @lr, align 4
  %v4_10008410 = call i32 @function_10008960(i32 ptrtoint ([37 x i8]* @global_var_1000bbac.199 to i32), i32 36, i32 36)
  store i32 6, i32* @r3, align 4
  store i16 36, i16* bitcast (i32* @global_var_1001c31c.201 to i16*), align 4
  %v0_10008420 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008420, i32* @global_var_1001c318.202, align 4
  store i32 268469288, i32* @lr, align 4
  %v0_10008424 = call i32 @function_10009ff0()
  store i32 %v0_10008424, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000843c.204 to i32), i32* @lr, align 4
  %v4_10008438 = call i32 @function_10008960(i32 ptrtoint ([7 x i8]* @global_var_1000bbd4.203 to i32), i32 6, i32 6)
  store i32 7, i32* @r3, align 4
  %v0_10008440 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008440, i32* @global_var_1001c320.205, align 4
  store i32 16, i32* %r26.global-to-local, align 4
  %v0_10008448 = load i32, i32* %r21.global-to-local, align 4
  %v1_10008448 = trunc i32 %v0_10008448 to i16
  store i16 %v1_10008448, i16* bitcast (i32* @global_var_1001c324.206 to i16*), align 4
  store i32 268469328, i32* @lr, align 4
  %v0_1000844c = call i32 @function_10009ff0()
  store i32 %v0_1000844c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008464.208 to i32), i32* @lr, align 4
  %v4_10008460 = call i32 @function_10008960(i32 ptrtoint ([8 x i8]* @global_var_1000bbdc.207 to i32), i32 7, i32 7)
  store i32 7, i32* @r3, align 4
  %v0_10008468 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008468, i32* @global_var_1001c328.209, align 4
  %v0_1000846c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000846c = trunc i32 %v0_1000846c to i16
  store i16 %v1_1000846c, i16* bitcast (i32* @global_var_1001c32c.210 to i16*), align 4
  store i32 268469364, i32* @lr, align 4
  %v0_10008470 = call i32 @function_10009ff0()
  store i32 %v0_10008470, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008488.212 to i32), i32* @lr, align 4
  %v4_10008484 = call i32 @function_10008960(i32 ptrtoint ([8 x i8]* @global_var_1000bbe4.211 to i32), i32 7, i32 7)
  store i32 3, i32* @r3, align 4
  %v0_1000848c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000848c, i32* @global_var_1001c330.213, align 4
  %v0_10008490 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008490 = trunc i32 %v0_10008490 to i16
  store i16 %v1_10008490, i16* bitcast (i32* @global_var_1001c334.214 to i16*), align 4
  store i32 268469400, i32* @lr, align 4
  %v0_10008494 = call i32 @function_10009ff0()
  store i32 %v0_10008494, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100084ac.216 to i32), i32* @lr, align 4
  %v4_100084a8 = call i32 @function_10008960(i32 ptrtoint ([4 x i8]* @global_var_1000bbec.215 to i32), i32 3, i32 3)
  store i32 19, i32* @r3, align 4
  store i16 3, i16* bitcast (i32* @global_var_1001c33c.217 to i16*), align 4
  %v0_100084b8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100084b8, i32* @global_var_1001c338.218, align 4
  store i32 268469440, i32* @lr, align 4
  %v0_100084bc = call i32 @function_10009ff0()
  store i32 %v0_100084bc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100084d4.220 to i32), i32* @lr, align 4
  %v3_100084d0 = call i32 @function_10008960(i32 ptrtoint (i32* @global_var_1000bbf0.219 to i32), i32 19, i32 19)
  store i32 24, i32* @r3, align 4
  %v0_100084d8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100084d8, i32* @global_var_1001c340.221, align 4
  %v0_100084dc = load i32, i32* %r23.global-to-local, align 4
  %v1_100084dc = trunc i32 %v0_100084dc to i16
  store i16 %v1_100084dc, i16* bitcast (i32* @global_var_1001c344.222 to i16*), align 4
  store i32 268469476, i32* @lr, align 4
  %v0_100084e0 = call i32 @function_10009ff0()
  store i32 %v0_100084e0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100084f8.224 to i32), i32* @lr, align 4
  %v3_100084f4 = call i32 @function_10008960(i32 ptrtoint (i32* @global_var_1000bc04.223 to i32), i32 24, i32 24)
  store i32 9, i32* @r3, align 4
  store i16 24, i16* bitcast (i32* @global_var_1001c34c.225 to i16*), align 4
  %v0_10008504 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008504, i32* @global_var_1001c348.226, align 4
  store i32 268469516, i32* @lr, align 4
  %v0_10008508 = call i32 @function_10009ff0()
  store i32 %v0_10008508, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008520.228 to i32), i32* @lr, align 4
  %v4_1000851c = call i32 @function_10008960(i32 ptrtoint ([10 x i8]* @global_var_1000bc20.227 to i32), i32 9, i32 9)
  store i32 16, i32* @r3, align 4
  store i16 9, i16* bitcast (i32* @global_var_1001c354.229 to i16*), align 4
  %v0_1000852c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000852c, i32* @global_var_1001c350.230, align 4
  store i32 268469556, i32* @lr, align 4
  %v0_10008530 = call i32 @function_10009ff0()
  store i32 %v0_10008530, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008548.232 to i32), i32* @lr, align 4
  %v4_10008544 = call i32 @function_10008960(i32 ptrtoint ([17 x i8]* @global_var_1000bc2c.231 to i32), i32 16, i32 16)
  store i32 22, i32* @r3, align 4
  %v0_1000854c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000854c, i32* @global_var_1001c358.233, align 4
  %v0_10008550 = load i32, i32* %r26.global-to-local, align 4
  %v1_10008550 = trunc i32 %v0_10008550 to i16
  store i16 %v1_10008550, i16* bitcast (i32* @global_var_1001c35c.234 to i16*), align 4
  store i32 268469592, i32* @lr, align 4
  %v0_10008554 = call i32 @function_10009ff0()
  store i32 %v0_10008554, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000856c.236 to i32), i32* @lr, align 4
  %v4_10008568 = call i32 @function_10008960(i32 ptrtoint ([23 x i8]* @global_var_1000bc40.235 to i32), i32 22, i32 22)
  store i32 7, i32* @r3, align 4
  store i16 22, i16* bitcast (i32* @global_var_1001c364.237 to i16*), align 4
  %v0_10008578 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008578, i32* @global_var_1001c360.238, align 4
  store i32 268469632, i32* @lr, align 4
  %v0_1000857c = call i32 @function_10009ff0()
  store i32 %v0_1000857c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008594.240 to i32), i32* @lr, align 4
  %v4_10008590 = call i32 @function_10008960(i32 ptrtoint ([8 x i8]* @global_var_1000bc58.239 to i32), i32 7, i32 7)
  store i32 5, i32* @r3, align 4
  %v0_10008598 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008598, i32* @global_var_1001c368.241, align 4
  %v0_1000859c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000859c = trunc i32 %v0_1000859c to i16
  store i16 %v1_1000859c, i16* bitcast (i32* @global_var_1001c36c.242 to i16*), align 4
  store i32 268469668, i32* @lr, align 4
  %v0_100085a0 = call i32 @function_10009ff0()
  store i32 %v0_100085a0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100085b8.244 to i32), i32* @lr, align 4
  %v4_100085b4 = call i32 @function_10008960(i32 ptrtoint ([6 x i8]* @global_var_1000bc60.243 to i32), i32 5, i32 5)
  store i32 4, i32* @r3, align 4
  %v0_100085bc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100085bc, i32* @global_var_1001c370.245, align 4
  %v0_100085c0 = load i32, i32* %r19.global-to-local, align 4
  %v1_100085c0 = trunc i32 %v0_100085c0 to i16
  store i16 %v1_100085c0, i16* bitcast (i32* @global_var_1001c374.246 to i16*), align 4
  store i32 268469704, i32* @lr, align 4
  %v0_100085c4 = call i32 @function_10009ff0()
  store i32 %v0_100085c4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100085dc.248 to i32), i32* @lr, align 4
  %v4_100085d8 = call i32 @function_10008960(i32 ptrtoint ([5 x i8]* @global_var_1000bc68.247 to i32), i32 4, i32 4)
  store i32 6, i32* @r3, align 4
  store i16 4, i16* bitcast (i32* @global_var_1001c37c.249 to i16*), align 4
  %v0_100085e8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100085e8, i32* @global_var_1001c378.250, align 4
  store i32 268469744, i32* @lr, align 4
  %v0_100085ec = call i32 @function_10009ff0()
  store i32 %v0_100085ec, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008604.252 to i32), i32* @lr, align 4
  %v4_10008600 = call i32 @function_10008960(i32 ptrtoint ([7 x i8]* @global_var_1000bc70.251 to i32), i32 6, i32 6)
  store i32 14, i32* @r3, align 4
  %v0_10008608 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008608, i32* @global_var_1001c380.253, align 4
  %v0_1000860c = load i32, i32* %r21.global-to-local, align 4
  %v1_1000860c = trunc i32 %v0_1000860c to i16
  store i16 %v1_1000860c, i16* bitcast (i32* @global_var_1001c384.254 to i16*), align 4
  store i32 268469780, i32* @lr, align 4
  %v0_10008610 = call i32 @function_10009ff0()
  store i32 %v0_10008610, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008628.256 to i32), i32* @lr, align 4
  %v4_10008624 = call i32 @function_10008960(i32 ptrtoint ([15 x i8]* @global_var_1000bc78.255 to i32), i32 14, i32 14)
  store i32 8, i32* @r3, align 4
  %v0_1000862c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000862c, i32* @global_var_1001c388.257, align 4
  %v0_10008630 = load i32, i32* %r25.global-to-local, align 4
  %v1_10008630 = trunc i32 %v0_10008630 to i16
  store i16 %v1_10008630, i16* bitcast (i32* @global_var_1001c38c.258 to i16*), align 4
  store i32 268469816, i32* @lr, align 4
  %v0_10008634 = call i32 @function_10009ff0()
  store i32 %v0_10008634, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000864c.260 to i32), i32* @lr, align 4
  %v4_10008648 = call i32 @function_10008960(i32 ptrtoint ([9 x i8]* @global_var_1000bc88.259 to i32), i32 8, i32 8)
  store i32 7, i32* @r3, align 4
  %v0_10008650 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008650, i32* @global_var_1001c400.261, align 4
  %v0_10008654 = load i32, i32* %r24.global-to-local, align 4
  %v1_10008654 = trunc i32 %v0_10008654 to i16
  store i16 %v1_10008654, i16* bitcast (i32* @global_var_1001c404.262 to i16*), align 4
  store i32 268469852, i32* @lr, align 4
  %v0_10008658 = call i32 @function_10009ff0()
  store i32 %v0_10008658, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008670.264 to i32), i32* @lr, align 4
  %v4_1000866c = call i32 @function_10008960(i32 ptrtoint ([8 x i8]* @global_var_1000bc94.263 to i32), i32 7, i32 7)
  store i32 16, i32* @r3, align 4
  %v0_10008674 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008674, i32* @global_var_1001c408.265, align 4
  %v0_10008678 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008678 = trunc i32 %v0_10008678 to i16
  store i16 %v1_10008678, i16* bitcast (i32* @global_var_1001c40c.266 to i16*), align 4
  store i32 268469888, i32* @lr, align 4
  %v0_1000867c = call i32 @function_10009ff0()
  store i32 %v0_1000867c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008694.268 to i32), i32* @lr, align 4
  %v4_10008690 = call i32 @function_10008960(i32 ptrtoint ([17 x i8]* @global_var_1000bc9c.267 to i32), i32 16, i32 16)
  store i32 23, i32* @r3, align 4
  %v0_10008698 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008698, i32* @global_var_1001c390.269, align 4
  store i32 268500992, i32* %r27.global-to-local, align 4
  %v0_100086a0 = load i32, i32* %r26.global-to-local, align 4
  %v1_100086a0 = trunc i32 %v0_100086a0 to i16
  store i16 %v1_100086a0, i16* bitcast (i32* @global_var_1001c394.270 to i16*), align 4
  store i32 268469928, i32* @lr, align 4
  %v0_100086a4 = call i32 @function_10009ff0()
  store i32 %v0_100086a4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100086bc.272 to i32), i32* @lr, align 4
  %v4_100086b8 = call i32 @function_10008960(i32 ptrtoint ([24 x i8]* @global_var_1000bcb0.271 to i32), i32 23, i32 23)
  store i32 8, i32* @r3, align 4
  %v0_100086c0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100086c0, i32* @global_var_1001c398.273, align 4
  store i32 268500992, i32* %r26.global-to-local, align 4
  %v0_100086c8 = load i32, i32* %r20.global-to-local, align 4
  %v1_100086c8 = trunc i32 %v0_100086c8 to i16
  store i16 %v1_100086c8, i16* bitcast (i32* @global_var_1001c39c.274 to i16*), align 4
  store i32 268469968, i32* @lr, align 4
  %v0_100086cc = call i32 @function_10009ff0()
  store i32 %v0_100086cc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1000bcd4.276 to i32), i32* %r26.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100086e8.277 to i32), i32* @lr, align 4
  %v4_100086e4 = call i32 @function_10008960(i32 ptrtoint ([9 x i8]* @global_var_1000bcc8.275 to i32), i32 8, i32 8)
  store i32 14, i32* @r3, align 4
  %v0_100086ec = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100086ec, i32* @global_var_1001c3a0.278, align 4
  %v0_100086f0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100086f0 = trunc i32 %v0_100086f0 to i16
  store i16 %v1_100086f0, i16* bitcast (i32* @global_var_1001c3a4.279 to i16*), align 4
  store i32 268470008, i32* @lr, align 4
  %v0_100086f4 = call i32 @function_10009ff0()
  %v0_100086f8 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100086f4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([20 x i8]* @global_var_1000bce4.280 to i32), i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000870c.281 to i32), i32* @lr, align 4
  %v4_10008708 = call i32 @function_10008960(i32 %v0_100086f8, i32 14, i32 14)
  store i32 19, i32* @r3, align 4
  %v0_10008710 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008710, i32* @global_var_1001c3a8.282, align 4
  %v0_10008714 = load i32, i32* %r25.global-to-local, align 4
  %v1_10008714 = trunc i32 %v0_10008714 to i16
  store i16 %v1_10008714, i16* bitcast (i32* @global_var_1001c3ac.283 to i16*), align 4
  store i32 268470044, i32* @lr, align 4
  %v0_10008718 = call i32 @function_10009ff0()
  %v0_1000871c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10008718, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000872c.284 to i32), i32* @lr, align 4
  %v4_10008728 = call i32 @function_10008960(i32 %v0_1000871c, i32 19, i32 19)
  store i32 10, i32* @r3, align 4
  %v0_10008730 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008730, i32* @global_var_1001c3b0.285, align 4
  %v0_10008734 = load i32, i32* %r23.global-to-local, align 4
  %v1_10008734 = trunc i32 %v0_10008734 to i16
  store i16 %v1_10008734, i16* bitcast (i32* @global_var_1001c3b4.286 to i16*), align 4
  store i32 268470076, i32* @lr, align 4
  %v0_10008738 = call i32 @function_10009ff0()
  store i32 %v0_10008738, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008750.288 to i32), i32* @lr, align 4
  %v4_1000874c = call i32 @function_10008960(i32 ptrtoint ([11 x i8]* @global_var_1000bcf8.287 to i32), i32 10, i32 10)
  store i32 21, i32* @r3, align 4
  %v0_10008754 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008754, i32* @global_var_1001c410.289, align 4
  %v0_10008758 = load i32, i32* %r22.global-to-local, align 4
  %v1_10008758 = trunc i32 %v0_10008758 to i16
  store i16 %v1_10008758, i16* bitcast (i32* @global_var_1001c414.290 to i16*), align 4
  store i32 268470112, i32* @lr, align 4
  %v0_1000875c = call i32 @function_10009ff0()
  store i32 %v0_1000875c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008774.292 to i32), i32* @lr, align 4
  %v3_10008770 = call i32 @function_10008960(i32 ptrtoint (i32* @global_var_1000bd5c.291 to i32), i32 21, i32 21)
  store i32 17, i32* @r3, align 4
  store i16 21, i16* bitcast (i32* @global_var_1001c3bc.293 to i16*), align 4
  %v0_10008780 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008780, i32* @global_var_1001c3b8.294, align 4
  store i32 268470152, i32* @lr, align 4
  %v0_10008784 = call i32 @function_10009ff0()
  store i32 %v0_10008784, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000879c.296 to i32), i32* @lr, align 4
  %v4_10008798 = call i32 @function_10008960(i32 ptrtoint ([18 x i8]* @global_var_1000bd04.295 to i32), i32 17, i32 17)
  store i32 12, i32* @r3, align 4
  store i16 17, i16* bitcast (i32* @global_var_1001c3c4.297 to i16*), align 4
  %v0_100087a8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100087a8, i32* @global_var_1001c3c0.298, align 4
  store i32 268470192, i32* @lr, align 4
  %v0_100087ac = call i32 @function_10009ff0()
  store i32 %v0_100087ac, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100087c4.300 to i32), i32* @lr, align 4
  %v4_100087c0 = call i32 @function_10008960(i32 ptrtoint ([13 x i8]* @global_var_1000bd18.299 to i32), i32 12, i32 12)
  store i32 14, i32* @r3, align 4
  store i16 12, i16* bitcast (i32* @global_var_1001c3cc.301 to i16*), align 4
  %v0_100087d0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100087d0, i32* @global_var_1001c3c8.302, align 4
  store i32 268470232, i32* @lr, align 4
  %v0_100087d4 = call i32 @function_10009ff0()
  %v0_100087d8 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100087d4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100087e8.303 to i32), i32* @lr, align 4
  %v4_100087e4 = call i32 @function_10008960(i32 %v0_100087d8, i32 14, i32 14)
  store i32 19, i32* @r3, align 4
  %v0_100087ec = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100087ec, i32* @global_var_1001c3d0.304, align 4
  %v0_100087f0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100087f0 = trunc i32 %v0_100087f0 to i16
  store i16 %v1_100087f0, i16* bitcast (i32* @global_var_1001c3d4.305 to i16*), align 4
  store i32 268470264, i32* @lr, align 4
  %v0_100087f4 = call i32 @function_10009ff0()
  %v0_100087f8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100087f4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008808.306 to i32), i32* @lr, align 4
  %v4_10008804 = call i32 @function_10008960(i32 %v0_100087f8, i32 19, i32 19)
  store i32 8, i32* @r3, align 4
  %v0_1000880c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000880c, i32* @global_var_1001c3d8.307, align 4
  %v0_10008810 = load i32, i32* %r23.global-to-local, align 4
  %v1_10008810 = trunc i32 %v0_10008810 to i16
  store i16 %v1_10008810, i16* bitcast (i32* @global_var_1001c3dc.308 to i16*), align 4
  store i32 268470296, i32* @lr, align 4
  %v0_10008814 = call i32 @function_10009ff0()
  store i32 %v0_10008814, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000882c.310 to i32), i32* @lr, align 4
  %v4_10008828 = call i32 @function_10008960(i32 ptrtoint ([9 x i8]* @global_var_1000bd28.309 to i32), i32 8, i32 8)
  store i32 5, i32* @r3, align 4
  %v0_10008830 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008830, i32* @global_var_1001c3e0.311, align 4
  %v0_10008834 = load i32, i32* %r24.global-to-local, align 4
  %v1_10008834 = trunc i32 %v0_10008834 to i16
  store i16 %v1_10008834, i16* bitcast (i32* @global_var_1001c3e4.312 to i16*), align 4
  store i32 268470332, i32* @lr, align 4
  %v0_10008838 = call i32 @function_10009ff0()
  store i32 %v0_10008838, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008850.314 to i32), i32* @lr, align 4
  %v4_1000884c = call i32 @function_10008960(i32 ptrtoint ([6 x i8]* @global_var_1000bd34.313 to i32), i32 5, i32 5)
  store i32 6, i32* @r3, align 4
  %v0_10008854 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008854, i32* @global_var_1001c3e8.315, align 4
  %v0_10008858 = load i32, i32* %r19.global-to-local, align 4
  %v1_10008858 = trunc i32 %v0_10008858 to i16
  store i16 %v1_10008858, i16* bitcast (i32* @global_var_1001c3ec.316 to i16*), align 4
  store i32 268470368, i32* @lr, align 4
  %v0_1000885c = call i32 @function_10009ff0()
  store i32 %v0_1000885c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008874.318 to i32), i32* @lr, align 4
  %v4_10008870 = call i32 @function_10008960(i32 ptrtoint ([7 x i8]* @global_var_1000bd3c.317 to i32), i32 6, i32 6)
  store i32 23, i32* @r3, align 4
  %v0_10008878 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008878, i32* @global_var_1001c3f0.319, align 4
  %v0_1000887c = load i32, i32* %r21.global-to-local, align 4
  %v1_1000887c = trunc i32 %v0_1000887c to i16
  store i16 %v1_1000887c, i16* bitcast (i32* @global_var_1001c3f4.320 to i16*), align 4
  store i32 268470404, i32* @lr, align 4
  %v0_10008880 = call i32 @function_10009ff0()
  store i32 %v0_10008880, i32* %r28.global-to-local, align 4
  store i32 268470424, i32* @lr, align 4
  %v4_10008894 = call i32 @function_10008960(i32 ptrtoint ([24 x i8]* @global_var_1000bd44.321 to i32), i32 23, i32 23)
  %v0_1000889c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000889c = trunc i32 %v0_1000889c to i16
  store i16 %v1_1000889c, i16* bitcast (i32* @global_var_1001c3fc.322 to i16*), align 4
  %v0_100088a0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100088a0, i32* @global_var_1001c3f8.323, align 4
  store i32 %v0_10008358, i32* @r28, align 4
  ret i32 %v4_10008894

; uselistorder directives
  uselistorder i32 21, { 0, 1, 6, 7, 8, 2, 3, 4, 5, 9, 10, 11, 12 }
  uselistorder i32 (i32, i32, i32)* @function_10008960, { 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_100088dc(i8* %arg1) local_unnamed_addr {
dec_label_pc_100088dc:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_100088dc = load i8, i8* %arg1, align 1
  %v3_100088e8 = icmp eq i8 %v3_100088dc, 0
  %v0_100088ec = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100088e8, i32 %v0_100088ec)
  br label %dec_label_pc_100088f0

dec_label_pc_100088f0:                            ; preds = %dec_label_pc_100088f0, %dec_label_pc_100088dc
  %v0_100088f0 = phi i32 [ %v1_100088f0, %dec_label_pc_100088f0 ], [ 0, %dec_label_pc_100088dc ]
  %v1_100088f0 = add i32 %v0_100088f0, 1
  %v2_100088f4 = add i32 %v1_100088f0, %tmp
  %v3_100088f4 = inttoptr i32 %v2_100088f4 to i8*
  %v4_100088f4 = load i8, i8* %v3_100088f4, align 1
  %v3_100088f8 = icmp eq i8 %v4_100088f4, 0
  br i1 %v3_100088f8, label %dec_label_pc_10008900, label %dec_label_pc_100088f0

dec_label_pc_10008900:                            ; preds = %dec_label_pc_100088f0
  ret i32 %v1_100088f0
}

define i32 @function_10008904(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008904:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10008904 = load i8, i8* %arg1, align 1
  %v3_10008908 = icmp eq i8 %v2_10008904, 0
  br i1 %v3_10008908, label %dec_label_pc_10008954, label %dec_label_pc_10008910

dec_label_pc_10008910:                            ; preds = %dec_label_pc_10008904
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008914

dec_label_pc_10008914:                            ; preds = %dec_label_pc_10008914, %dec_label_pc_10008910
  %v0_10008914 = phi i32 [ %v1_10008914, %dec_label_pc_10008914 ], [ 0, %dec_label_pc_10008910 ]
  %v1_10008914 = add i32 %v0_10008914, 1
  store i32 %v1_10008914, i32* %r9.global-to-local, align 4
  %v2_10008918 = add i32 %v1_10008914, %tmp
  %v3_10008918 = inttoptr i32 %v2_10008918 to i8*
  %v4_10008918 = load i8, i8* %v3_10008918, align 1
  %v3_1000891c = icmp eq i8 %v4_10008918, 0
  br i1 %v3_1000891c, label %dec_label_pc_10008924, label %dec_label_pc_10008914

dec_label_pc_10008924:                            ; preds = %dec_label_pc_10008914
  %v3_10008924 = icmp eq i32 %v1_10008914, -1
  br i1 %v3_10008924, label %dec_label_pc_1000894c, label %dec_label_pc_1000892c

dec_label_pc_1000892c:                            ; preds = %dec_label_pc_10008924
  %phitmp = add i32 %v0_10008914, 2
  br label %dec_label_pc_10008930

dec_label_pc_10008930:                            ; preds = %dec_label_pc_10008954, %dec_label_pc_1000892c
  %v0_10008930 = phi i32 [ 1, %dec_label_pc_10008954 ], [ %phitmp, %dec_label_pc_1000892c ]
  store i32 %v0_10008930, i32* %ctr.global-to-local, align 4
  %v2_10008940.pre = load i32, i32* @r3, align 4
  %v2_100089388 = load i8, i8* %arg1, align 1
  %v1_1000893c10 = add i32 %tmp, 1
  store i32 %v1_1000893c10, i32* %r4.global-to-local, align 4
  %v3_1000894011 = inttoptr i32 %v2_10008940.pre to i8*
  store i8 %v2_100089388, i8* %v3_1000894011, align 1
  %v0_1000894412 = load i32, i32* @r3, align 4
  %v1_1000894413 = add i32 %v0_1000894412, 1
  store i32 %v1_1000894413, i32* %r3.global-to-local, align 4
  %v0_1000894814 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000894815 = add i32 %v0_1000894814, -1
  store i32 %v1_1000894815, i32* %ctr.global-to-local, align 4
  %v2_1000894816 = icmp eq i32 %v1_1000894815, 0
  br i1 %v2_1000894816, label %dec_label_pc_1000894c.loopexit, label %dec_label_pc_10008938.dec_label_pc_10008938_crit_edge

dec_label_pc_10008938.dec_label_pc_10008938_crit_edge: ; preds = %dec_label_pc_10008930, %dec_label_pc_10008938.dec_label_pc_10008938_crit_edge
  %v1_1000894417 = phi i32 [ %v1_10008944, %dec_label_pc_10008938.dec_label_pc_10008938_crit_edge ], [ %v1_1000894413, %dec_label_pc_10008930 ]
  %v0_10008938.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10008938 = inttoptr i32 %v0_10008938.pre to i8*
  %v2_10008938 = load i8, i8* %v1_10008938, align 1
  %v1_1000893c = add i32 %v0_10008938.pre, 1
  store i32 %v1_1000893c, i32* %r4.global-to-local, align 4
  %v3_10008940 = inttoptr i32 %v1_1000894417 to i8*
  store i8 %v2_10008938, i8* %v3_10008940, align 1
  %v0_10008944 = load i32, i32* %r3.global-to-local, align 4
  %v1_10008944 = add i32 %v0_10008944, 1
  store i32 %v1_10008944, i32* %r3.global-to-local, align 4
  %v0_10008948 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008948 = add i32 %v0_10008948, -1
  store i32 %v1_10008948, i32* %ctr.global-to-local, align 4
  %v2_10008948 = icmp eq i32 %v1_10008948, 0
  br i1 %v2_10008948, label %dec_label_pc_1000894c.loopexit, label %dec_label_pc_10008938.dec_label_pc_10008938_crit_edge

dec_label_pc_1000894c.loopexit:                   ; preds = %dec_label_pc_10008938.dec_label_pc_10008938_crit_edge, %dec_label_pc_10008930
  %v0_1000894c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000894c

dec_label_pc_1000894c:                            ; preds = %dec_label_pc_1000894c.loopexit, %dec_label_pc_10008924
  %v0_1000894c = phi i32 [ %v0_1000894c.pre, %dec_label_pc_1000894c.loopexit ], [ -1, %dec_label_pc_10008924 ]
  store i32 %v0_1000894c, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000894c

dec_label_pc_10008954:                            ; preds = %dec_label_pc_10008904
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008930

; uselistorder directives
  uselistorder i32 %v0_1000894c, { 1, 0 }
  uselistorder i32 %v1_10008948, { 1, 0 }
  uselistorder i32 %v1_10008944, { 1, 0 }
  uselistorder i32 %v1_10008914, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10008938.dec_label_pc_10008938_crit_edge, { 1, 0 }
}

define i32 @function_10008960(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008960:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10008960 = icmp eq i32 %arg3, 0
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v0_10008968 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008960, i32 %v0_10008968)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008970

dec_label_pc_10008970:                            ; preds = %dec_label_pc_10008970, %dec_label_pc_10008960
  %v0_10008970 = phi i32 [ %v1_10008978, %dec_label_pc_10008970 ], [ 0, %dec_label_pc_10008960 ]
  %v2_10008970 = add i32 %v0_10008970, %arg2
  %v3_10008970 = inttoptr i32 %v2_10008970 to i8*
  %v4_10008970 = load i8, i8* %v3_10008970, align 1
  %v4_10008974 = add i32 %v0_10008970, %arg1
  %v5_10008974 = inttoptr i32 %v4_10008974 to i8*
  store i8 %v4_10008970, i8* %v5_10008974, align 1
  %v0_10008978 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008978 = add i32 %v0_10008978, 1
  store i32 %v1_10008978, i32* %r9.global-to-local, align 4
  %v0_1000897c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000897c = add i32 %v0_1000897c, -1
  store i32 %v1_1000897c, i32* %ctr.global-to-local, align 4
  %v2_1000897c = icmp eq i32 %v1_1000897c, 0
  br i1 %v2_1000897c, label %dec_label_pc_10008980, label %dec_label_pc_10008970

dec_label_pc_10008980:                            ; preds = %dec_label_pc_10008970
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000897c, { 1, 0 }
  uselistorder i32 %v1_10008978, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10008984() local_unnamed_addr {
dec_label_pc_10008984:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10008984 = load i32, i32* @r4, align 4
  store i32 %v0_10008984, i32* %r0.global-to-local, align 4
  %v3_10008984 = icmp eq i32 %v0_10008984, 0
  store i32 %v0_10008984, i32* %ctr.global-to-local, align 4
  %v0_1000898c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008984, i32 %v0_1000898c)
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100089983 = load i32, i32* @r3, align 4
  %v5_100089984 = inttoptr i32 %v2_100089983 to i8*
  store i8 0, i8* %v5_100089984, align 1
  %v0_1000899c5 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000899c6 = add i32 %v0_1000899c5, 1
  store i32 %v1_1000899c6, i32* %r9.global-to-local, align 4
  %v0_100089a07 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100089a08 = add i32 %v0_100089a07, -1
  store i32 %v1_100089a08, i32* %ctr.global-to-local, align 4
  %v2_100089a09 = icmp eq i32 %v1_100089a08, 0
  br i1 %v2_100089a09, label %dec_label_pc_100089a4, label %dec_label_pc_10008998.dec_label_pc_10008998_crit_edge

dec_label_pc_10008998.dec_label_pc_10008998_crit_edge: ; preds = %dec_label_pc_10008984, %dec_label_pc_10008998.dec_label_pc_10008998_crit_edge
  %v1_1000899c10 = phi i32 [ %v1_1000899c, %dec_label_pc_10008998.dec_label_pc_10008998_crit_edge ], [ %v1_1000899c6, %dec_label_pc_10008984 ]
  %v0_10008998.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %v0_10008998.pre to i8
  %v2_10008998 = load i32, i32* @r3, align 4
  %v4_10008998 = add i32 %v2_10008998, %v1_1000899c10
  %v5_10008998 = inttoptr i32 %v4_10008998 to i8*
  store i8 %extract.t, i8* %v5_10008998, align 1
  %v0_1000899c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000899c = add i32 %v0_1000899c, 1
  store i32 %v1_1000899c, i32* %r9.global-to-local, align 4
  %v0_100089a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100089a0 = add i32 %v0_100089a0, -1
  store i32 %v1_100089a0, i32* %ctr.global-to-local, align 4
  %v2_100089a0 = icmp eq i32 %v1_100089a0, 0
  br i1 %v2_100089a0, label %dec_label_pc_100089a4, label %dec_label_pc_10008998.dec_label_pc_10008998_crit_edge

dec_label_pc_100089a4:                            ; preds = %dec_label_pc_10008998.dec_label_pc_10008998_crit_edge, %dec_label_pc_10008984
  %v0_100089a4 = load i32, i32* @r3, align 4
  ret i32 %v0_100089a4

; uselistorder directives
  uselistorder i32 %v1_100089a0, { 1, 0 }
  uselistorder i32 %v1_1000899c, { 1, 0 }
  uselistorder i32 %v0_10008984, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10008998.dec_label_pc_10008998_crit_edge, { 1, 0 }
}

define i32 @function_100089a8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100089a8:
  %v3_100089a8 = icmp sgt i32 %arg4, %arg2
  br i1 %v3_100089a8, label %dec_label_pc_100089b4, label %dec_label_pc_100089bc

dec_label_pc_100089b4:                            ; preds = %dec_label_pc_100089d8, %dec_label_pc_100089a8, %dec_label_pc_100089bc
  ret i32 -1

dec_label_pc_100089bc:                            ; preds = %dec_label_pc_100089a8
  %tmp = icmp slt i32 %arg2, 1
  br i1 %tmp, label %dec_label_pc_100089b4, label %dec_label_pc_100089c4

dec_label_pc_100089c4:                            ; preds = %dec_label_pc_100089bc
  br label %dec_label_pc_100089e0

dec_label_pc_100089d4:                            ; preds = %dec_label_pc_100089e0
  br label %dec_label_pc_100089d8

dec_label_pc_100089d8:                            ; preds = %dec_label_pc_100089f8, %dec_label_pc_100089d4
  %v0_100089e01 = phi i32 [ %v1_100089e4, %dec_label_pc_100089f8 ], [ 0, %dec_label_pc_100089d4 ]
  %v1_100089d8 = add i32 %v0_100089fc, 1
  %v1_100089dc = add i32 %v0_100089dc, -1
  %v2_100089dc = icmp eq i32 %v1_100089dc, 0
  br i1 %v2_100089dc, label %dec_label_pc_100089b4, label %dec_label_pc_100089e0

dec_label_pc_100089e0:                            ; preds = %dec_label_pc_100089d8, %dec_label_pc_100089c4
  %v0_100089dc = phi i32 [ %v1_100089dc, %dec_label_pc_100089d8 ], [ %arg2, %dec_label_pc_100089c4 ]
  %v0_100089fc = phi i32 [ %v1_100089d8, %dec_label_pc_100089d8 ], [ 0, %dec_label_pc_100089c4 ]
  %v0_100089e0 = phi i32 [ %v0_100089e01, %dec_label_pc_100089d8 ], [ 0, %dec_label_pc_100089c4 ]
  %v2_100089e0 = add i32 %v0_100089e0, %arg3
  %v3_100089e0 = inttoptr i32 %v2_100089e0 to i8*
  %v4_100089e0 = load i8, i8* %v3_100089e0, align 1
  %v1_100089e4 = add i32 %v0_100089e0, 1
  %v2_100089e8 = add i32 %v0_100089fc, %arg1
  %v3_100089e8 = inttoptr i32 %v2_100089e8 to i8*
  %v4_100089e8 = load i8, i8* %v3_100089e8, align 1
  %v4_100089f0 = icmp eq i8 %v4_100089e8, %v4_100089e0
  br i1 %v4_100089f0, label %dec_label_pc_100089f8, label %dec_label_pc_100089d4

dec_label_pc_100089f8:                            ; preds = %dec_label_pc_100089e0
  %v4_100089ec = icmp eq i32 %v1_100089e4, %arg4
  br i1 %v4_100089ec, label %dec_label_pc_100089fc, label %dec_label_pc_100089d8

dec_label_pc_100089fc:                            ; preds = %dec_label_pc_100089f8
  %v1_100089fc = add i32 %v0_100089fc, 1
  ret i32 %v1_100089fc

; uselistorder directives
  uselistorder i32 %v0_100089e0, { 1, 0 }
  uselistorder label %dec_label_pc_100089b4, { 0, 2, 1 }
}

define i32 @function_10008a04(i32 %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %r5.global-to-local = alloca i32, align 4
  %v0_10008a04.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008a04

dec_label_pc_10008a04:                            ; preds = %dec_label_pc_10008a20, %dec_label_pc_10008a04, %bb
  %v0_10008a04 = phi i32 [ %v0_10008a04.pre, %bb ], [ %v1_10008a08, %dec_label_pc_10008a04 ], [ %v1_10008a08, %dec_label_pc_10008a20 ]
  %v1_10008a04 = inttoptr i32 %v0_10008a04 to i8*
  %v2_10008a04 = load i8, i8* %v1_10008a04, align 1
  %v1_10008a08 = add i32 %v0_10008a04, 1
  %v3_10008a14 = icmp eq i8 %v2_10008a04, 32
  br i1 %v3_10008a14, label %dec_label_pc_10008a04, label %dec_label_pc_10008a20

dec_label_pc_10008a20:                            ; preds = %dec_label_pc_10008a04
  %v2_10008a04.off = add i8 %v2_10008a04, -9
  %tmp = icmp ult i8 %v2_10008a04.off, 2
  br i1 %tmp, label %dec_label_pc_10008a04, label %dec_label_pc_10008a2c

dec_label_pc_10008a2c:                            ; preds = %dec_label_pc_10008a20
  %v3_10008a2c = icmp eq i8 %v2_10008a04, 45
  br i1 %v3_10008a2c, label %dec_label_pc_10008ad8, label %dec_label_pc_10008a34

dec_label_pc_10008a34:                            ; preds = %dec_label_pc_10008a2c
  %v3_10008a34 = icmp eq i8 %v2_10008a04, 43
  br i1 %v3_10008a34, label %dec_label_pc_10008b30, label %dec_label_pc_10008a3c

dec_label_pc_10008a3c:                            ; preds = %dec_label_pc_10008a34, %dec_label_pc_10008b30
  %v0_10008acc26 = phi i32 [ %v1_10008a08, %dec_label_pc_10008a34 ], [ %v1_10008b34, %dec_label_pc_10008b30 ]
  %v0_10008a5c5.in = phi i8 [ %v2_10008a04, %dec_label_pc_10008a34 ], [ %v2_10008b30, %dec_label_pc_10008b30 ]
  br label %dec_label_pc_10008a48

dec_label_pc_10008a48:                            ; preds = %dec_label_pc_10008ad8, %dec_label_pc_10008a3c
  %v0_10008acc25 = phi i32 [ %v1_10008ae0, %dec_label_pc_10008ad8 ], [ %v0_10008acc26, %dec_label_pc_10008a3c ]
  %v0_10008a5c4.in = phi i8 [ %v2_10008ad8, %dec_label_pc_10008ad8 ], [ %v0_10008a5c5.in, %dec_label_pc_10008a3c ]
  %v0_10008b20 = phi i32 [ 1, %dec_label_pc_10008ad8 ], [ 0, %dec_label_pc_10008a3c ]
  %v1_10008a58 = phi i32 [ -2147483648, %dec_label_pc_10008ad8 ], [ 2147483647, %dec_label_pc_10008a3c ]
  %v2_10008a48 = udiv i32 %v1_10008a58, %arg1
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_10008a54 = mul i32 %v2_10008a48, %arg1
  %v2_10008a58 = sub i32 %v1_10008a58, %v2_10008a54
  br label %dec_label_pc_10008a5c

dec_label_pc_10008a5c:                            ; preds = %dec_label_pc_10008acc, %dec_label_pc_10008a48
  %v0_10008acc = phi i32 [ %v1_10008ad0, %dec_label_pc_10008acc ], [ %v0_10008acc25, %dec_label_pc_10008a48 ]
  %v0_10008ac0 = phi i32 [ %v0_10008ab817, %dec_label_pc_10008acc ], [ 0, %dec_label_pc_10008a48 ]
  %v0_10008ab0 = phi i32 [ %v0_10008b1011, %dec_label_pc_10008acc ], [ 0, %dec_label_pc_10008a48 ]
  %v0_10008aa8 = phi i32 [ %v0_10008b049, %dec_label_pc_10008acc ], [ 0, %dec_label_pc_10008a48 ]
  %v1_10008a9c.in = phi i8 [ %v2_10008acc, %dec_label_pc_10008acc ], [ %v0_10008a5c4.in, %dec_label_pc_10008a48 ]
  %v1_10008a9c = zext i8 %v1_10008a9c.in to i32
  %v1_10008a60 = add nsw i32 %v1_10008a9c, -48
  %fold = add nuw nsw i32 %v1_10008a9c, 208
  %v1_10008a68 = urem i32 %fold, 256
  %tmp27 = icmp ult i32 %v1_10008a68, 10
  br i1 %tmp27, label %dec_label_pc_10008aa0, label %dec_label_pc_10008a74

dec_label_pc_10008a74:                            ; preds = %dec_label_pc_10008a5c
  %v1_10008a74 = add nuw nsw i32 %v1_10008a9c, 191
  %v1_10008a78 = urem i32 %v1_10008a74, 256
  %tmp28 = icmp ult i32 %v1_10008a78, 26
  br i1 %tmp28, label %dec_label_pc_10008a9c, label %dec_label_pc_10008a88

dec_label_pc_10008a88:                            ; preds = %dec_label_pc_10008a74
  %v1_10008a88 = add nuw nsw i32 %v1_10008a9c, 159
  %v1_10008a8c = urem i32 %v1_10008a88, 256
  %v2_10008a90 = icmp ugt i32 %v1_10008a8c, 25
  br i1 %v2_10008a90, label %dec_label_pc_10008b04, label %dec_label_pc_10008a98

dec_label_pc_10008a98:                            ; preds = %dec_label_pc_10008a88
  br label %dec_label_pc_10008a9c

dec_label_pc_10008a9c:                            ; preds = %dec_label_pc_10008a74, %dec_label_pc_10008a98
  %v0_10008a9c = phi i32 [ 55, %dec_label_pc_10008a74 ], [ 87, %dec_label_pc_10008a98 ]
  %v2_10008a9c = sub nsw i32 %v1_10008a9c, %v0_10008a9c
  br label %dec_label_pc_10008aa0

dec_label_pc_10008aa0:                            ; preds = %dec_label_pc_10008a5c, %dec_label_pc_10008a9c
  %v1_10008ac8 = phi i32 [ %v1_10008a60, %dec_label_pc_10008a5c ], [ %v2_10008a9c, %dec_label_pc_10008a9c ]
  %v2_10008aa0 = icmp slt i32 %v1_10008ac8, %arg1
  br i1 %v2_10008aa0, label %dec_label_pc_10008aa8, label %dec_label_pc_10008b04

dec_label_pc_10008aa8:                            ; preds = %dec_label_pc_10008aa0
  %v1_10008aa8 = icmp slt i32 %v0_10008aa8, 0
  br i1 %v1_10008aa8, label %dec_label_pc_10008aec, label %dec_label_pc_10008ab0

dec_label_pc_10008ab0:                            ; preds = %dec_label_pc_10008aa8
  %v3_10008ab0 = icmp ugt i32 %v0_10008ab0, %v2_10008a48
  br i1 %v3_10008ab0, label %dec_label_pc_10008aec, label %dec_label_pc_10008ab8

dec_label_pc_10008ab8:                            ; preds = %dec_label_pc_10008ab0
  %v4_10008ab8 = icmp eq i32 %v0_10008ac0, %v2_10008a48
  br i1 %v4_10008ab8, label %dec_label_pc_10008af4, label %dec_label_pc_10008ac0

dec_label_pc_10008ac0:                            ; preds = %dec_label_pc_10008af4, %dec_label_pc_10008ab8
  %v2_10008ac0 = mul i32 %v0_10008ac0, %arg1
  %v2_10008ac8 = add i32 %v1_10008ac8, %v2_10008ac0
  store i32 %v2_10008ac8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008acc

dec_label_pc_10008acc:                            ; preds = %dec_label_pc_10008af4, %dec_label_pc_10008aec, %dec_label_pc_10008ac0
  %v0_10008ab817 = phi i32 [ %v2_10008a48, %dec_label_pc_10008af4 ], [ %v0_10008ac0, %dec_label_pc_10008aec ], [ %v2_10008ac8, %dec_label_pc_10008ac0 ]
  %v0_10008b1011 = phi i32 [ %v2_10008a48, %dec_label_pc_10008af4 ], [ %v0_10008ab0, %dec_label_pc_10008aec ], [ %v2_10008ac8, %dec_label_pc_10008ac0 ]
  %v0_10008b049 = phi i32 [ -1, %dec_label_pc_10008af4 ], [ -1, %dec_label_pc_10008aec ], [ 1, %dec_label_pc_10008ac0 ]
  %v1_10008acc = inttoptr i32 %v0_10008acc to i8*
  %v2_10008acc = load i8, i8* %v1_10008acc, align 1
  %v1_10008ad0 = add i32 %v0_10008acc, 1
  br label %dec_label_pc_10008a5c

dec_label_pc_10008ad8:                            ; preds = %dec_label_pc_10008a2c
  %v1_10008ad8 = inttoptr i32 %v1_10008a08 to i8*
  %v2_10008ad8 = load i8, i8* %v1_10008ad8, align 1
  %v1_10008ae0 = add i32 %v0_10008a04, 2
  br label %dec_label_pc_10008a48

dec_label_pc_10008aec:                            ; preds = %dec_label_pc_10008ab0, %dec_label_pc_10008aa8
  br label %dec_label_pc_10008acc

dec_label_pc_10008af4:                            ; preds = %dec_label_pc_10008ab8
  %v3_10008af4 = icmp sgt i32 %v1_10008ac8, %v2_10008a58
  br i1 %v3_10008af4, label %dec_label_pc_10008acc, label %dec_label_pc_10008ac0

dec_label_pc_10008b04:                            ; preds = %dec_label_pc_10008aa0, %dec_label_pc_10008a88
  %v1_10008b04 = icmp slt i32 %v0_10008aa8, 0
  br i1 %v1_10008b04, label %dec_label_pc_10008b20, label %dec_label_pc_10008b0c

dec_label_pc_10008b0c:                            ; preds = %dec_label_pc_10008b04
  %v3_10008b0c = icmp eq i32 %v0_10008b20, 0
  %v0_10008b14 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008b0c, i32 %v0_10008b14)
  %v0_10008b18 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008b18 = sub i32 0, %v0_10008b18
  ret i32 %v1_10008b18

dec_label_pc_10008b20:                            ; preds = %dec_label_pc_10008b04
  %v1_10008b20 = xor i32 %v0_10008b20, 1
  %v2_10008b28 = sub nuw i32 -2147483648, %v1_10008b20
  ret i32 %v2_10008b28

dec_label_pc_10008b30:                            ; preds = %dec_label_pc_10008a34
  %v1_10008b30 = inttoptr i32 %v1_10008a08 to i8*
  %v2_10008b30 = load i8, i8* %v1_10008b30, align 1
  %v1_10008b34 = add i32 %v0_10008a04, 2
  br label %dec_label_pc_10008a3c

; uselistorder directives
  uselistorder i32 %v2_10008ac8, { 1, 0, 2 }
  uselistorder i32 %v1_10008ac8, { 1, 0, 2 }
  uselistorder i32 %v1_10008a9c, { 2, 4, 3, 0, 1 }
  uselistorder i32 %v0_10008ac0, { 2, 0, 1 }
  uselistorder i32 %v0_10008acc, { 1, 0 }
  uselistorder i32 %v2_10008a48, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10008a08, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10008a04, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 208, { 1, 0, 2, 3 }
  uselistorder i32 -2147483648, { 1, 0 }
  uselistorder i8 32, { 10, 2, 3, 4, 0, 5, 6, 7, 1, 8, 11, 12, 13, 14, 15, 16, 9 }
  uselistorder i32 %arg1, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_10008aa0, { 1, 0 }
  uselistorder label %dec_label_pc_10008a9c, { 1, 0 }
  uselistorder label %dec_label_pc_10008a3c, { 1, 0 }
}

define i32 @function_10008b3c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008b3c:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v0_10008b68 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  br label %dec_label_pc_10008b70

dec_label_pc_10008b70:                            ; preds = %dec_label_pc_10008b9c.dec_label_pc_10008b70_crit_edge, %dec_label_pc_10008b3c
  %v0_10008b74 = phi i32 [ %v0_10008b74.pre, %dec_label_pc_10008b9c.dec_label_pc_10008b70_crit_edge ], [ %arg3, %dec_label_pc_10008b3c ]
  %v0_10008b70 = phi i32 [ %v1_10008b88, %dec_label_pc_10008b9c.dec_label_pc_10008b70_crit_edge ], [ %tmp, %dec_label_pc_10008b3c ]
  store i32 1, i32* @r5, align 4
  store i32 268471168, i32* @lr, align 4
  %v4_10008b7c = call i32 @function_100092d4(i32 %v0_10008b74, i32 %v0_10008b70, i32 1)
  %v0_10008b80 = load i32, i32* @r31, align 4
  %v3_10008b84 = icmp eq i32 %v4_10008b7c, 1
  %v1_10008b88 = add i32 %v0_10008b80, 1
  store i32 %v1_10008b88, i32* @r31, align 4
  %v0_10008b90 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10008b84, label %dec_label_pc_10008b90, label %dec_label_pc_10008ba8

dec_label_pc_10008b90:                            ; preds = %dec_label_pc_10008b70
  %v1_10008b90 = add i32 %v0_10008b90, 1
  store i32 %v1_10008b90, i32* %r30.global-to-local, align 4
  %v0_10008b94 = load i32, i32* %r28.global-to-local, align 4
  %v3_10008b94 = icmp sgt i32 %v0_10008b94, %v1_10008b90
  br i1 %v3_10008b94, label %dec_label_pc_10008b9c, label %dec_label_pc_10008ba8

dec_label_pc_10008b9c:                            ; preds = %dec_label_pc_10008b90
  %v1_10008b9c = inttoptr i32 %v0_10008b80 to i8*
  %v2_10008b9c = load i8, i8* %v1_10008b9c, align 1
  %v3_10008ba0 = icmp eq i8 %v2_10008b9c, 10
  br i1 %v3_10008ba0, label %dec_label_pc_10008ba8, label %dec_label_pc_10008b9c.dec_label_pc_10008b70_crit_edge

dec_label_pc_10008b9c.dec_label_pc_10008b70_crit_edge: ; preds = %dec_label_pc_10008b9c
  %v0_10008b74.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008b70

dec_label_pc_10008ba8:                            ; preds = %dec_label_pc_10008b70, %dec_label_pc_10008b9c, %dec_label_pc_10008b90
  %v1_10008bb0 = phi i32 [ %v1_10008b90, %dec_label_pc_10008b9c ], [ %v1_10008b90, %dec_label_pc_10008b90 ], [ %v0_10008b90, %dec_label_pc_10008b70 ]
  %tmp12 = icmp slt i32 %v1_10008bb0, 0
  %v1_10008ba8 = zext i1 %tmp12 to i32
  %v2_10008ba8 = ashr i32 %v1_10008bb0, 31
  %v3_10008ba8 = and i32 %v2_10008ba8, -2
  %v4_10008ba8 = or i32 %v3_10008ba8, %v1_10008ba8
  %v2_10008bb0 = xor i32 %v4_10008ba8, %v1_10008bb0
  %v2_10008bb8 = sub i32 %v4_10008ba8, %v2_10008bb0
  %tmp13 = icmp slt i32 %v2_10008bb8, 0
  %v1_10008bc0 = zext i1 %tmp13 to i32
  %v2_10008bc0 = ashr i32 %v2_10008bb8, 31
  %v3_10008bc0 = and i32 %v2_10008bc0, -2
  %v4_10008bc0 = or i32 %v3_10008bc0, %v1_10008bc0
  %v0_10008bc8 = load i32, i32* %r27.global-to-local, align 4
  %v2_10008bc8 = and i32 %v4_10008bc0, %v0_10008bc8
  store i32 %v0_10008b68, i32* @r31, align 4
  ret i32 %v2_10008bc8

; uselistorder directives
  uselistorder i32 %v2_10008bb8, { 1, 0 }
  uselistorder i32 %v4_10008ba8, { 1, 0 }
  uselistorder i32 %v1_10008bb0, { 1, 2, 0 }
  uselistorder i32 %v1_10008b88, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100092d4, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10008ba8, { 1, 2, 0 }
}

define i32 @function_10008be0(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008be0:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_10008bf8 = load i32, i32* @r31, align 4
  store i32 16, i32* %stack_var_-40, align 4
  %v0_10008c00 = call i32 @function_100097b8()
  %v2_10008c0c = inttoptr i32 %v0_10008c00 to i32*
  store i32 0, i32* %v2_10008c0c, align 4
  store i32 268471324, i32* @lr, align 4
  %v3_10008c18 = call i32 @function_10009dec(i32 2, i32 2, i32 0)
  store i32 %v3_10008c18, i32* @r3, align 4
  %v3_10008c20 = icmp eq i32 %v3_10008c18, -1
  store i32 %v3_10008c18, i32* @r31, align 4
  br i1 %v3_10008c20, label %dec_label_pc_10008c70, label %dec_label_pc_10008c3c

dec_label_pc_10008c3c:                            ; preds = %dec_label_pc_10008be0
  %v2_10008bec = ptrtoint i32* %stack_var_-36 to i32
  store i32 2, i32* %stack_var_-36, align 4
  store i32 268471380, i32* @lr, align 4
  %v0_10008c50 = call i32 @function_10009bec()
  %v2_10008c58 = ptrtoint i32* %stack_var_-40 to i32
  %v0_10008c5c = load i32, i32* @r31, align 4
  store i32 268471396, i32* @lr, align 4
  %v3_10008c60 = call i32 @function_10009c20(i32 %v0_10008c5c, i32 %v2_10008bec, i32 %v2_10008c58)
  store i32 268471404, i32* @lr, align 4
  %v0_10008c68 = call i32 @function_1000909c()
  br label %dec_label_pc_10008c70

dec_label_pc_10008c70:                            ; preds = %dec_label_pc_10008be0, %dec_label_pc_10008c3c
  %v0_10008c70 = phi i32 [ 0, %dec_label_pc_10008be0 ], [ 134744072, %dec_label_pc_10008c3c ]
  store i32 %v0_10008bf8, i32* @r31, align 4
  ret i32 %v0_10008c70

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 ()* @function_10009bec, { 10, 9, 7, 8, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009dec, { 27, 25, 26, 23, 24, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 0, 8, 7, 1, 6, 3, 2, 5, 4 }
  uselistorder label %dec_label_pc_10008c70, { 1, 0 }
}

define i32 @function_10008c8c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008c8c:
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp16 = ptrtoint i8* %arg1 to i32
  %v3_10008c8c = load i8, i8* %tmp, align 1
  %v3_10008c98 = icmp eq i8 %v3_10008c8c, 0
  br i1 %v3_10008c98, label %dec_label_pc_10008cb0, label %dec_label_pc_10008ca0

dec_label_pc_10008ca0:                            ; preds = %dec_label_pc_10008c8c, %dec_label_pc_10008ca0
  %v0_10008ca0 = phi i32 [ %v1_10008ca0, %dec_label_pc_10008ca0 ], [ 0, %dec_label_pc_10008c8c ]
  %v1_10008ca0 = add i32 %v0_10008ca0, 1
  %v3_10008ca4 = add i32 %v1_10008ca0, %arg3
  %v4_10008ca4 = inttoptr i32 %v3_10008ca4 to i8*
  %v5_10008ca4 = load i8, i8* %v4_10008ca4, align 1
  %v3_10008ca8 = icmp eq i8 %v5_10008ca4, 0
  br i1 %v3_10008ca8, label %dec_label_pc_10008cb0, label %dec_label_pc_10008ca0

dec_label_pc_10008cb0:                            ; preds = %dec_label_pc_10008ca0, %dec_label_pc_10008c8c
  %v0_10008ce011 = phi i32 [ 0, %dec_label_pc_10008c8c ], [ %v1_10008ca0, %dec_label_pc_10008ca0 ]
  %v1_10008cb0 = icmp slt i32 %arg2, 0
  %v1_10008cb4 = add i32 %arg2, 1
  br i1 %v1_10008cb0, label %dec_label_pc_10008d2c, label %dec_label_pc_10008cc8

dec_label_pc_10008cc8:                            ; preds = %dec_label_pc_10008cb0, %dec_label_pc_10008d2c, %dec_label_pc_10008d20
  %v2_10008cd48 = phi i32 [ %v1_10008cd8, %dec_label_pc_10008d20 ], [ 0, %dec_label_pc_10008d2c ], [ 0, %dec_label_pc_10008cb0 ]
  %v0_10008ccc6 = phi i32 [ %v1_10008cd0, %dec_label_pc_10008d20 ], [ %tmp16, %dec_label_pc_10008d2c ], [ %tmp16, %dec_label_pc_10008cb0 ]
  %v0_10008cc8 = phi i32 [ %v0_10008d14, %dec_label_pc_10008d20 ], [ 1, %dec_label_pc_10008d2c ], [ %v1_10008cb4, %dec_label_pc_10008cb0 ]
  %v1_10008cc8 = add i32 %v0_10008cc8, -1
  %v2_10008cc8 = icmp eq i32 %v1_10008cc8, 0
  br i1 %v2_10008cc8, label %dec_label_pc_10008d18, label %dec_label_pc_10008ccc

dec_label_pc_10008ccc:                            ; preds = %dec_label_pc_10008cc8, %dec_label_pc_10008d10
  %v2_10008cd4 = phi i32 [ 0, %dec_label_pc_10008d10 ], [ %v2_10008cd48, %dec_label_pc_10008cc8 ]
  %v0_10008ccc = phi i32 [ %v1_10008cd0, %dec_label_pc_10008d10 ], [ %v0_10008ccc6, %dec_label_pc_10008cc8 ]
  %v0_10008d14 = phi i32 [ %v1_10008d14, %dec_label_pc_10008d10 ], [ %v1_10008cc8, %dec_label_pc_10008cc8 ]
  %v1_10008ccc = inttoptr i32 %v0_10008ccc to i8*
  %v2_10008ccc = load i8, i8* %v1_10008ccc, align 1
  %v3_10008ccc = zext i8 %v2_10008ccc to i32
  %v1_10008cd0 = add i32 %v0_10008ccc, 1
  %v3_10008cd4 = add i32 %v2_10008cd4, %arg3
  %v4_10008cd4 = inttoptr i32 %v3_10008cd4 to i8*
  %v5_10008cd4 = load i8, i8* %v4_10008cd4, align 1
  %v6_10008cd4 = zext i8 %v5_10008cd4 to i32
  %v1_10008cd8 = add i32 %v2_10008cd4, 1
  %v1_10008cdc = add nuw nsw i32 %v3_10008ccc, 191
  %v1_10008ce4 = urem i32 %v1_10008cdc, 256
  %v2_10008ce8 = icmp ugt i32 %v1_10008ce4, 25
  %v1_10008cec = add nuw nsw i32 %v6_10008cd4, 191
  %v1_10008cf0 = urem i32 %v1_10008cec, 256
  %v2_10008cf4 = icmp ugt i32 %v1_10008cf0, 25
  br i1 %v2_10008ce8, label %dec_label_pc_10008d00, label %dec_label_pc_10008cfc

dec_label_pc_10008cfc:                            ; preds = %dec_label_pc_10008ccc
  %v1_10008cfc = or i32 %v3_10008ccc, 96
  br i1 %v2_10008cf4, label %dec_label_pc_10008d08, label %dec_label_pc_10008d04

dec_label_pc_10008d00:                            ; preds = %dec_label_pc_10008ccc
  br i1 %v2_10008cf4, label %dec_label_pc_10008d08, label %dec_label_pc_10008d04

dec_label_pc_10008d04:                            ; preds = %dec_label_pc_10008cfc, %dec_label_pc_10008d00
  %v1_10008d0814 = phi i32 [ %v1_10008cfc, %dec_label_pc_10008cfc ], [ %v3_10008ccc, %dec_label_pc_10008d00 ]
  %v1_10008d04 = or i32 %v6_10008cd4, 96
  br label %dec_label_pc_10008d08

dec_label_pc_10008d08:                            ; preds = %dec_label_pc_10008cfc, %dec_label_pc_10008d00, %dec_label_pc_10008d04
  %v1_10008d08 = phi i32 [ %v1_10008cfc, %dec_label_pc_10008cfc ], [ %v3_10008ccc, %dec_label_pc_10008d00 ], [ %v1_10008d0814, %dec_label_pc_10008d04 ]
  %v0_10008d08 = phi i32 [ %v6_10008cd4, %dec_label_pc_10008cfc ], [ %v6_10008cd4, %dec_label_pc_10008d00 ], [ %v1_10008d04, %dec_label_pc_10008d04 ]
  %v4_10008d08 = icmp eq i32 %v0_10008d08, %v1_10008d08
  br i1 %v4_10008d08, label %dec_label_pc_10008d20, label %dec_label_pc_10008d10

dec_label_pc_10008d10:                            ; preds = %dec_label_pc_10008d08
  %v1_10008d14 = add i32 %v0_10008d14, -1
  %v2_10008d14 = icmp eq i32 %v1_10008d14, 0
  br i1 %v2_10008d14, label %dec_label_pc_10008d18, label %dec_label_pc_10008ccc

dec_label_pc_10008d18:                            ; preds = %dec_label_pc_10008cc8, %dec_label_pc_10008d10
  ret i32 -1

dec_label_pc_10008d20:                            ; preds = %dec_label_pc_10008d08
  %v4_10008ce0.le = icmp eq i32 %v0_10008ce011, %v1_10008cd8
  br i1 %v4_10008ce0.le, label %dec_label_pc_10008d24, label %dec_label_pc_10008cc8

dec_label_pc_10008d24:                            ; preds = %dec_label_pc_10008d20
  %v2_10008d24 = sub i32 %v1_10008cd0, %tmp16
  ret i32 %v2_10008d24

dec_label_pc_10008d2c:                            ; preds = %dec_label_pc_10008cb0
  br label %dec_label_pc_10008cc8

; uselistorder directives
  uselistorder i32 %v1_10008d14, { 1, 0 }
  uselistorder i32 %v1_10008cfc, { 1, 0 }
  uselistorder i1 %v2_10008cf4, { 1, 0 }
  uselistorder i32 %v1_10008cd8, { 1, 0 }
  uselistorder i32 %v3_10008ccc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10008d14, { 1, 0 }
  uselistorder i32 %v0_10008ccc, { 1, 0 }
  uselistorder i32 %v2_10008cd4, { 1, 0 }
  uselistorder i32 %tmp16, { 2, 0, 1 }
  uselistorder i32 25, { 7, 8, 11, 4, 9, 5, 10, 0, 1, 6, 2, 3 }
  uselistorder i32 191, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10008d18, { 1, 0 }
  uselistorder label %dec_label_pc_10008d08, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008d04, { 1, 0 }
  uselistorder label %dec_label_pc_10008ccc, { 1, 0 }
  uselistorder label %dec_label_pc_10008cc8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008ca0, { 1, 0 }
}

define i32 @function_10008d38(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008d38:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_10008d38 = load i8, i8* %arg1, align 1
  %v3_10008d40 = icmp eq i8 %v2_10008d38, 0
  br i1 %v3_10008d40, label %dec_label_pc_10008d58, label %dec_label_pc_10008d48

dec_label_pc_10008d48:                            ; preds = %dec_label_pc_10008d38, %dec_label_pc_10008d48
  %v0_10008d48 = phi i32 [ %v1_10008d48, %dec_label_pc_10008d48 ], [ 0, %dec_label_pc_10008d38 ]
  %v1_10008d48 = add i32 %v0_10008d48, 1
  %v2_10008d4c = add i32 %v1_10008d48, %tmp
  %v3_10008d4c = inttoptr i32 %v2_10008d4c to i8*
  %v4_10008d4c = load i8, i8* %v3_10008d4c, align 1
  %v3_10008d50 = icmp eq i8 %v4_10008d4c, 0
  br i1 %v3_10008d50, label %dec_label_pc_10008d58, label %dec_label_pc_10008d48

dec_label_pc_10008d58:                            ; preds = %dec_label_pc_10008d48, %dec_label_pc_10008d38
  %v0_10008d78 = phi i32 [ 0, %dec_label_pc_10008d38 ], [ %v1_10008d48, %dec_label_pc_10008d48 ]
  %v1_10008d58 = inttoptr i32 %arg2 to i8*
  %v2_10008d58 = load i8, i8* %v1_10008d58, align 1
  %v3_10008d60 = icmp eq i8 %v2_10008d58, 0
  br i1 %v3_10008d60, label %dec_label_pc_10008d78, label %dec_label_pc_10008d68

dec_label_pc_10008d68:                            ; preds = %dec_label_pc_10008d58, %dec_label_pc_10008d68
  %v0_10008d68 = phi i32 [ %v1_10008d68, %dec_label_pc_10008d68 ], [ 0, %dec_label_pc_10008d58 ]
  %v1_10008d68 = add i32 %v0_10008d68, 1
  %v2_10008d6c = add i32 %v1_10008d68, %arg2
  %v3_10008d6c = inttoptr i32 %v2_10008d6c to i8*
  %v4_10008d6c = load i8, i8* %v3_10008d6c, align 1
  %v3_10008d70 = icmp eq i8 %v4_10008d6c, 0
  br i1 %v3_10008d70, label %dec_label_pc_10008d78, label %dec_label_pc_10008d68

dec_label_pc_10008d78:                            ; preds = %dec_label_pc_10008d68, %dec_label_pc_10008d58
  %v0_10008d7c = phi i32 [ 0, %dec_label_pc_10008d58 ], [ %v1_10008d68, %dec_label_pc_10008d68 ]
  %v4_10008d78 = icmp eq i32 %v0_10008d78, %v0_10008d7c
  br i1 %v4_10008d78, label %dec_label_pc_10008d90, label %dec_label_pc_10008d88

dec_label_pc_10008d88:                            ; preds = %dec_label_pc_10008d94, %dec_label_pc_10008d78
  ret i32 0

dec_label_pc_10008d90:                            ; preds = %dec_label_pc_10008d78
  %v2_10008d90 = icmp eq i32 %v0_10008d78, 0
  br i1 %v2_10008d90, label %dec_label_pc_10008db0, label %dec_label_pc_10008d94

dec_label_pc_10008d94:                            ; preds = %dec_label_pc_10008d90, %dec_label_pc_10008dac
  %v0_10008dac = phi i32 [ %v1_10008dac, %dec_label_pc_10008dac ], [ %v0_10008d78, %dec_label_pc_10008d90 ]
  %v0_10008d9c = phi i32 [ %v1_10008da0, %dec_label_pc_10008dac ], [ %arg2, %dec_label_pc_10008d90 ]
  %v0_10008d94 = phi i32 [ %v1_10008d98, %dec_label_pc_10008dac ], [ %tmp, %dec_label_pc_10008d90 ]
  %v1_10008d94 = inttoptr i32 %v0_10008d94 to i8*
  %v2_10008d94 = load i8, i8* %v1_10008d94, align 1
  %v1_10008d9c = inttoptr i32 %v0_10008d9c to i8*
  %v2_10008d9c = load i8, i8* %v1_10008d9c, align 1
  %v4_10008da4 = icmp eq i8 %v2_10008d94, %v2_10008d9c
  br i1 %v4_10008da4, label %dec_label_pc_10008dac, label %dec_label_pc_10008d88

dec_label_pc_10008dac:                            ; preds = %dec_label_pc_10008d94
  %v1_10008da0 = add i32 %v0_10008d9c, 1
  %v1_10008d98 = add i32 %v0_10008d94, 1
  %v1_10008dac = add i32 %v0_10008dac, -1
  %v2_10008dac = icmp eq i32 %v1_10008dac, 0
  br i1 %v2_10008dac, label %dec_label_pc_10008db0, label %dec_label_pc_10008d94

dec_label_pc_10008db0:                            ; preds = %dec_label_pc_10008dac, %dec_label_pc_10008d90
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_10008dac, { 1, 0 }
  uselistorder i32 %v0_10008d94, { 1, 0 }
  uselistorder i32 %v0_10008d9c, { 1, 0 }
  uselistorder label %dec_label_pc_10008d94, { 1, 0 }
  uselistorder label %dec_label_pc_10008d68, { 1, 0 }
  uselistorder label %dec_label_pc_10008d48, { 1, 0 }
}

define i32 @function_10008db8(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008db8:
  %cr6_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp17 = sext i8 %arg1 to i32
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10008db8 = icmp eq i32 %arg3, 0
  %v4_10008dbc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10008dbc, i32* %stack_var_-64, align 4
  %v5_10008dbc = ptrtoint i32* %stack_var_-64 to i32
  br i1 %v4_10008db8, label %dec_label_pc_10008dd8, label %dec_label_pc_10008dc4

dec_label_pc_10008dc4:                            ; preds = %dec_label_pc_10008db8
  %v0_10008dc4 = load i32, i32* %r3.global-to-local, align 4
  %v3_10008dc4 = icmp eq i32 %v0_10008dc4, 0
  store i1 %v3_10008dc4, i1* %cr6_eq.global-to-local, align 1
  br i1 %v3_10008dc4, label %dec_label_pc_10008dcc, label %dec_label_pc_10008de4

dec_label_pc_10008dcc:                            ; preds = %dec_label_pc_10008dc4
  store i32 48, i32* %r0.global-to-local, align 4
  %v4_10008dd0 = add i32 %arg3, 1
  %v5_10008dd0 = inttoptr i32 %v4_10008dd0 to i8*
  store i8 0, i8* %v5_10008dd0, align 1
  %v0_10008dd4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008dd4 = trunc i32 %v0_10008dd4 to i8
  store i8 %v1_10008dd4, i8* %tmp, align 1
  br label %dec_label_pc_10008dd8

dec_label_pc_10008dd8:                            ; preds = %dec_label_pc_10008e64, %dec_label_pc_10008db8, %dec_label_pc_10008dcc
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10008de4:                            ; preds = %dec_label_pc_10008dc4
  %v2_10008dc4 = icmp sgt i32 %v0_10008dc4, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10008de4.not = icmp ne i32 %arg2, 10
  %brmerge = or i1 %v2_10008dc4, %v3_10008de4.not
  br i1 %brmerge, label %dec_label_pc_10008df8, label %dec_label_pc_10008eac

dec_label_pc_10008df8:                            ; preds = %dec_label_pc_10008de4, %dec_label_pc_10008eac
  %v0_10008dfc2 = phi i32 [ %v0_10008dc4, %dec_label_pc_10008de4 ], [ %v1_10008eac, %dec_label_pc_10008eac ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10008de4 ], [ 1, %dec_label_pc_10008eac ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008dfc

dec_label_pc_10008dfc:                            ; preds = %dec_label_pc_10008e28.dec_label_pc_10008dfc_crit_edge, %dec_label_pc_10008df8
  %v1_10008e00 = phi i32 [ %v1_10008e00.pre, %dec_label_pc_10008e28.dec_label_pc_10008dfc_crit_edge ], [ 32, %dec_label_pc_10008df8 ]
  %v0_10008e00 = phi i32 [ %v0_10008e00.pre, %dec_label_pc_10008e28.dec_label_pc_10008dfc_crit_edge ], [ %v5_10008dbc, %dec_label_pc_10008df8 ]
  %v1_10008e10 = phi i32 [ %v0_10008dfc.pre, %dec_label_pc_10008e28.dec_label_pc_10008dfc_crit_edge ], [ %v0_10008dfc2, %dec_label_pc_10008df8 ]
  %v2_10008dfc = udiv i32 %v1_10008e10, %arg2
  %v2_10008e00 = add i32 %v0_10008e00, %v1_10008e00
  store i32 %v2_10008e00, i32* %r11.global-to-local, align 4
  %v1_10008e04 = add i32 %v1_10008e00, -1
  store i32 %v1_10008e04, i32* %r10.global-to-local, align 4
  %v2_10008e08 = mul i32 %v2_10008dfc, %arg2
  %v3_10008e0c = icmp ult i32 %v1_10008e10, %arg2
  store i1 %v3_10008e0c, i1* %cr6_eq.global-to-local, align 1
  %v2_10008e10 = sub i32 %v1_10008e10, %v2_10008e08
  store i32 %v2_10008e10, i32* %r9.global-to-local, align 4
  store i32 %v2_10008dfc, i32* %r3.global-to-local, align 4
  %tmp22 = icmp slt i32 %v2_10008e10, 10
  %storemerge15.v = select i1 %tmp22, i32 48, i32 55
  %storemerge15 = add i32 %storemerge15.v, %v2_10008e10
  %v0_10008e28.off0 = trunc i32 %storemerge15 to i8
  store i32 %storemerge15, i32* %r0.global-to-local, align 4
  %v3_10008e28 = add i32 %v2_10008e00, 8
  %v4_10008e28 = inttoptr i32 %v3_10008e28 to i8*
  store i8 %v0_10008e28.off0, i8* %v4_10008e28, align 1
  %v0_10008e2c = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10008e2c, label %dec_label_pc_10008e30, label %dec_label_pc_10008e28.dec_label_pc_10008dfc_crit_edge

dec_label_pc_10008e28.dec_label_pc_10008dfc_crit_edge: ; preds = %dec_label_pc_10008dfc
  %v0_10008dfc.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10008e00.pre = load i32, i32* @r1, align 4
  %v1_10008e00.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008dfc

dec_label_pc_10008e30:                            ; preds = %dec_label_pc_10008dfc
  %v0_10008e30 = load i32, i32* %r8.global-to-local, align 4
  %v3_10008e30 = icmp eq i32 %v0_10008e30, 0
  br i1 %v3_10008e30, label %dec_label_pc_10008e38, label %dec_label_pc_10008e98

dec_label_pc_10008e38:                            ; preds = %dec_label_pc_10008e30
  %v0_10008e38 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008e38 = add i32 %v0_10008e38, 1
  store i32 %v1_10008e38, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008e3c

dec_label_pc_10008e3c:                            ; preds = %dec_label_pc_10008e98, %dec_label_pc_10008e38
  %v1_10008e44 = phi i32 [ %v1_10008e40.pre, %dec_label_pc_10008e98 ], [ %v1_10008e38, %dec_label_pc_10008e38 ]
  %v2_10008e3c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10008e3c, i32* %r9.global-to-local, align 4
  %v2_10008e40 = add i32 %v1_10008e44, %v2_10008e3c
  %v3_10008e40 = inttoptr i32 %v2_10008e40 to i8*
  %v4_10008e40 = load i8, i8* %v3_10008e40, align 1
  %v5_10008e40 = zext i8 %v4_10008e40 to i32
  store i32 %v5_10008e40, i32* %r0.global-to-local, align 4
  store i32 %v2_10008e40, i32* %r9.global-to-local, align 4
  %v3_10008e48 = icmp eq i8 %v4_10008e40, 0
  br i1 %v3_10008e48, label %dec_label_pc_10008ec0, label %dec_label_pc_10008e50

dec_label_pc_10008e50:                            ; preds = %dec_label_pc_10008e3c
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008e54

dec_label_pc_10008e54:                            ; preds = %dec_label_pc_10008e54, %dec_label_pc_10008e50
  %v0_10008e54 = phi i32 [ %v1_10008e54, %dec_label_pc_10008e54 ], [ 0, %dec_label_pc_10008e50 ]
  %v1_10008e54 = add i32 %v0_10008e54, 1
  store i32 %v1_10008e54, i32* %r10.global-to-local, align 4
  %v2_10008e58 = add i32 %v1_10008e54, %v2_10008e40
  %v3_10008e58 = inttoptr i32 %v2_10008e58 to i8*
  %v4_10008e58 = load i8, i8* %v3_10008e58, align 1
  %v5_10008e58 = zext i8 %v4_10008e58 to i32
  store i32 %v5_10008e58, i32* %r0.global-to-local, align 4
  %v3_10008e5c = icmp eq i8 %v4_10008e58, 0
  br i1 %v3_10008e5c, label %dec_label_pc_10008e64, label %dec_label_pc_10008e54

dec_label_pc_10008e64:                            ; preds = %dec_label_pc_10008e54
  %v3_10008e64 = icmp eq i32 %v1_10008e54, -1
  br i1 %v3_10008e64, label %dec_label_pc_10008dd8, label %dec_label_pc_10008e6c

dec_label_pc_10008e6c:                            ; preds = %dec_label_pc_10008e64
  store i32 %arg3, i32* %r11.global-to-local, align 4
  %phitmp = add i32 %v0_10008e54, 2
  br label %dec_label_pc_10008e70

dec_label_pc_10008e70:                            ; preds = %dec_label_pc_10008ec0, %dec_label_pc_10008e6c
  %v0_10008e70 = phi i32 [ 1, %dec_label_pc_10008ec0 ], [ %phitmp, %dec_label_pc_10008e6c ]
  store i32 %v0_10008e70, i32* %r10.global-to-local, align 4
  store i32 %v0_10008e70, i32* %ctr.global-to-local, align 4
  %v2_10008e7824 = load i8, i8* %v3_10008e40, align 1
  %v3_10008e7825 = zext i8 %v2_10008e7824 to i32
  store i32 %v3_10008e7825, i32* %r0.global-to-local, align 4
  %v1_10008e7c26 = add i32 %v2_10008e40, 1
  store i32 %v1_10008e7c26, i32* %r9.global-to-local, align 4
  store i8 %v2_10008e7824, i8* %tmp, align 1
  %v0_10008e8428 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008e8429 = add i32 %v0_10008e8428, 1
  store i32 %v1_10008e8429, i32* %r11.global-to-local, align 4
  %v0_10008e8830 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008e8831 = add i32 %v0_10008e8830, -1
  store i32 %v1_10008e8831, i32* %ctr.global-to-local, align 4
  %v2_10008e8832 = icmp eq i32 %v1_10008e8831, 0
  br i1 %v2_10008e8832, label %dec_label_pc_10008e8c, label %dec_label_pc_10008e78.dec_label_pc_10008e78_crit_edge

dec_label_pc_10008e78.dec_label_pc_10008e78_crit_edge: ; preds = %dec_label_pc_10008e70, %dec_label_pc_10008e78.dec_label_pc_10008e78_crit_edge
  %v1_10008e8433 = phi i32 [ %v1_10008e84, %dec_label_pc_10008e78.dec_label_pc_10008e78_crit_edge ], [ %v1_10008e8429, %dec_label_pc_10008e70 ]
  %v0_10008e78.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10008e78 = inttoptr i32 %v0_10008e78.pre to i8*
  %v2_10008e78 = load i8, i8* %v1_10008e78, align 1
  %v3_10008e78 = zext i8 %v2_10008e78 to i32
  store i32 %v3_10008e78, i32* %r0.global-to-local, align 4
  %v1_10008e7c = add i32 %v0_10008e78.pre, 1
  store i32 %v1_10008e7c, i32* %r9.global-to-local, align 4
  %v3_10008e80 = inttoptr i32 %v1_10008e8433 to i8*
  store i8 %v2_10008e78, i8* %v3_10008e80, align 1
  %v0_10008e84 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008e84 = add i32 %v0_10008e84, 1
  store i32 %v1_10008e84, i32* %r11.global-to-local, align 4
  %v0_10008e88 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008e88 = add i32 %v0_10008e88, -1
  store i32 %v1_10008e88, i32* %ctr.global-to-local, align 4
  %v2_10008e88 = icmp eq i32 %v1_10008e88, 0
  br i1 %v2_10008e88, label %dec_label_pc_10008e8c, label %dec_label_pc_10008e78.dec_label_pc_10008e78_crit_edge

dec_label_pc_10008e8c:                            ; preds = %dec_label_pc_10008e78.dec_label_pc_10008e78_crit_edge, %dec_label_pc_10008e70
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10008e98:                            ; preds = %dec_label_pc_10008e30
  %v0_10008e98.pre = load i32, i32* @r1, align 4
  %v1_10008e98.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10008e98 = add i32 %v1_10008e98.pre, %v0_10008e98.pre
  store i32 %v2_10008e98, i32* %r9.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_10008ea0 = add i32 %v2_10008e98, 8
  %v4_10008ea0 = inttoptr i32 %v3_10008ea0 to i8*
  store i8 45, i8* %v4_10008ea0, align 1
  %v1_10008e40.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008e3c

dec_label_pc_10008eac:                            ; preds = %dec_label_pc_10008de4
  %v1_10008eac = sub i32 0, %v0_10008dc4
  store i32 %v1_10008eac, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008df8

dec_label_pc_10008ec0:                            ; preds = %dec_label_pc_10008e3c
  store i32 %arg3, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008e70

; uselistorder directives
  uselistorder i32 %v1_10008eac, { 1, 0 }
  uselistorder i32 %v1_10008e88, { 1, 0 }
  uselistorder i32 %v1_10008e84, { 1, 0 }
  uselistorder i32 %v0_10008e70, { 1, 0 }
  uselistorder i32 %v1_10008e54, { 0, 1, 3, 2 }
  uselistorder i32 %v2_10008dfc, { 1, 0 }
  uselistorder i32 %v1_10008e10, { 1, 0, 2 }
  uselistorder i32 %v1_10008e00, { 1, 0 }
  uselistorder i32 %v0_10008dc4, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 7, 9, 2, 3, 5, 4, 8, 6, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg3, { 1, 4, 5, 6, 2, 3, 0, 7, 9, 8 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_10008e78.dec_label_pc_10008e78_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10008df8, { 1, 0 }
  uselistorder label %dec_label_pc_10008dd8, { 0, 2, 1 }
}

define i32 @function_10008ecc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008ecc:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_10008edc = icmp eq i32 %arg2, -2143521772
  %v2_10008ef0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008ef0, i32* %stack_var_-32, align 4
  br i1 %v4_10008edc, label %dec_label_pc_10008f50, label %dec_label_pc_10008f10

dec_label_pc_10008f10:                            ; preds = %dec_label_pc_10008ecc
  %v3_10008f10 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_10008f10, label %dec_label_pc_10008f28, label %dec_label_pc_10008f18

dec_label_pc_10008f18:                            ; preds = %dec_label_pc_10008f10
  %v3_10008f1c = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10008f1c, label %dec_label_pc_10008f44, label %dec_label_pc_10008f70

dec_label_pc_10008f28:                            ; preds = %dec_label_pc_10008f10
  %v1_10008f28 = xor i32 %arg2, -2143551488
  %v3_10008f2c = icmp eq i32 %v1_10008f28, 29717
  br i1 %v3_10008f2c, label %dec_label_pc_10008f60, label %dec_label_pc_10008f34

dec_label_pc_10008f34:                            ; preds = %dec_label_pc_10008f28
  %v3_10008f38 = icmp eq i32 %v1_10008f28, 29718
  br i1 %v3_10008f38, label %dec_label_pc_10008f68, label %dec_label_pc_10008f70

dec_label_pc_10008f44:                            ; preds = %dec_label_pc_10008f18
  store i32 ptrtoint (i32* @global_var_10008f4c.325 to i32), i32* @lr, align 4
  %v2_10008f48 = inttoptr i32 %arg3 to i32*
  %v3_10008f48 = call i32 @function_10009950(i32* %v2_10008f48, i32 %arg1)
  br label %dec_label_pc_10008f58

dec_label_pc_10008f50:                            ; preds = %dec_label_pc_10008ecc
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10008f54

dec_label_pc_10008f54:                            ; preds = %dec_label_pc_10008f68, %dec_label_pc_10008f60, %dec_label_pc_10008f50
  store i32 268472152, i32* @lr, align 4
  %v0_10008f54 = call i32 @function_100099ec()
  br label %dec_label_pc_10008f58

dec_label_pc_10008f58:                            ; preds = %dec_label_pc_10008f44, %dec_label_pc_10008f54
  %storemerge = phi i32 [ %v0_10008f54, %dec_label_pc_10008f54 ], [ %v3_10008f48, %dec_label_pc_10008f44 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008f9c

dec_label_pc_10008f60:                            ; preds = %dec_label_pc_10008f28
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_10008f54

dec_label_pc_10008f68:                            ; preds = %dec_label_pc_10008f34
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_10008f54

dec_label_pc_10008f70:                            ; preds = %dec_label_pc_10008f34, %dec_label_pc_10008f18
  %v0_10008f80 = call i32 @__asm_mfcr()
  %v1_10008f84 = and i32 %v0_10008f80, 268435456
  %v3_10008f84 = icmp eq i32 %v1_10008f84, 0
  store i32 %v0_10008f80, i32* %r31.global-to-local, align 4
  br i1 %v3_10008f84, label %dec_label_pc_10008f9c, label %dec_label_pc_10008f90

dec_label_pc_10008f90:                            ; preds = %dec_label_pc_10008f70
  %v0_10008f90 = call i32 @function_100097b8()
  %v0_10008f94 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008f94 = inttoptr i32 %v0_10008f90 to i32*
  store i32 %v0_10008f94, i32* %v2_10008f94, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008f9c

dec_label_pc_10008f9c:                            ; preds = %dec_label_pc_10008f70, %dec_label_pc_10008f58, %dec_label_pc_10008f90
  %v0_10008fa0 = phi i32 [ %v0_10008f80, %dec_label_pc_10008f70 ], [ %storemerge, %dec_label_pc_10008f58 ], [ -1, %dec_label_pc_10008f90 ]
  ret i32 %v0_10008fa0

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10008f9c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008f58, { 1, 0 }
}

define i32 @function_10008fb4(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008fb4:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_10008fc8 = load i32, i32* @r4, align 4
  %v1_10008fc8 = add i32 %v0_10008fc8, -12
  %v2_10008fcc = icmp ugt i32 %v1_10008fc8, 2
  %v2_10008fd4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008fd4, i32* %stack_var_-32, align 4
  br i1 %v2_10008fcc, label %dec_label_pc_10009000, label %dec_label_pc_10008ff0

dec_label_pc_10008ff0:                            ; preds = %dec_label_pc_10008fb4
  store i32 268472312, i32* @lr, align 4
  %v2_10008ff4 = call i32 @function_10009038(i32 3)
  store i32 %v2_10008ff4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009020

dec_label_pc_10009000:                            ; preds = %dec_label_pc_10008fb4
  %v0_10009004 = call i32 @__asm_mfcr()
  %v1_10009008 = and i32 %v0_10009004, 268435456
  %v3_10009008 = icmp eq i32 %v1_10009008, 0
  store i32 %v0_10009004, i32* %r31.global-to-local, align 4
  br i1 %v3_10009008, label %dec_label_pc_10009020, label %dec_label_pc_10009014

dec_label_pc_10009014:                            ; preds = %dec_label_pc_10009000
  %v0_10009014 = call i32 @function_100097b8()
  %v0_10009018 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009018 = inttoptr i32 %v0_10009014 to i32*
  store i32 %v0_10009018, i32* %v2_10009018, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009020

dec_label_pc_10009020:                            ; preds = %dec_label_pc_10009000, %dec_label_pc_10008ff0, %dec_label_pc_10009014
  %v0_10009024 = phi i32 [ %v0_10009004, %dec_label_pc_10009000 ], [ %v2_10008ff4, %dec_label_pc_10008ff0 ], [ -1, %dec_label_pc_10009014 ]
  ret i32 %v0_10009024

; uselistorder directives
  uselistorder label %dec_label_pc_10009020, { 2, 0, 1 }
}

define i32 @function_10009038(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009038:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_10009050 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009050, i32* %stack_var_-32, align 4
  %v0_1000906c = call i32 @__asm_mfcr()
  %v1_10009070 = and i32 %v0_1000906c, 268435456
  %v3_10009070 = icmp eq i32 %v1_10009070, 0
  store i32 %v0_1000906c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009070, label %dec_label_pc_10009088, label %dec_label_pc_1000907c

dec_label_pc_1000907c:                            ; preds = %dec_label_pc_10009038
  %v0_1000907c = call i32 @function_100097b8()
  %v0_10009080 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009080 = inttoptr i32 %v0_1000907c to i32*
  store i32 %v0_10009080, i32* %v2_10009080, align 4
  br label %dec_label_pc_10009088

dec_label_pc_10009088:                            ; preds = %dec_label_pc_10009038, %dec_label_pc_1000907c
  %v0_10009098 = phi i32 [ %v0_1000906c, %dec_label_pc_10009038 ], [ -1, %dec_label_pc_1000907c ]
  ret i32 %v0_10009098

; uselistorder directives
  uselistorder label %dec_label_pc_10009088, { 1, 0 }
}

define i32 @function_1000909c() local_unnamed_addr {
dec_label_pc_1000909c:
  %r31.global-to-local = alloca i32, align 4
  %v0_100090b4 = call i32 @__asm_mfcr()
  %v1_100090b8 = and i32 %v0_100090b4, 268435456
  %v3_100090b8 = icmp eq i32 %v1_100090b8, 0
  store i32 %v0_100090b4, i32* %r31.global-to-local, align 4
  br i1 %v3_100090b8, label %dec_label_pc_100090d0, label %dec_label_pc_100090c4

dec_label_pc_100090c4:                            ; preds = %dec_label_pc_1000909c
  %v0_100090c4 = call i32 @function_100097b8()
  %v0_100090c8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100090c8 = inttoptr i32 %v0_100090c4 to i32*
  store i32 %v0_100090c8, i32* %v2_100090c8, align 4
  br label %dec_label_pc_100090d0

dec_label_pc_100090d0:                            ; preds = %dec_label_pc_1000909c, %dec_label_pc_100090c4
  %v0_100090e0 = phi i32 [ %v0_100090b4, %dec_label_pc_1000909c ], [ -1, %dec_label_pc_100090c4 ]
  ret i32 %v0_100090e0

; uselistorder directives
  uselistorder label %dec_label_pc_100090d0, { 1, 0 }
}

define i32 @function_100090e4() local_unnamed_addr {
dec_label_pc_100090e4:
  %r31.global-to-local = alloca i32, align 4
  %v0_100090fc = call i32 @__asm_mfcr()
  %v1_10009100 = and i32 %v0_100090fc, 268435456
  %v3_10009100 = icmp eq i32 %v1_10009100, 0
  store i32 %v0_100090fc, i32* %r31.global-to-local, align 4
  br i1 %v3_10009100, label %dec_label_pc_10009118, label %dec_label_pc_1000910c

dec_label_pc_1000910c:                            ; preds = %dec_label_pc_100090e4
  %v0_1000910c = call i32 @function_100097b8()
  %v0_10009110 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009110 = inttoptr i32 %v0_1000910c to i32*
  store i32 %v0_10009110, i32* %v2_10009110, align 4
  br label %dec_label_pc_10009118

dec_label_pc_10009118:                            ; preds = %dec_label_pc_100090e4, %dec_label_pc_1000910c
  %v0_10009128 = phi i32 [ %v0_100090fc, %dec_label_pc_100090e4 ], [ -1, %dec_label_pc_1000910c ]
  ret i32 %v0_10009128

; uselistorder directives
  uselistorder label %dec_label_pc_10009118, { 1, 0 }
}

define i32 @function_1000912c() local_unnamed_addr {
dec_label_pc_1000912c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009144 = call i32 @__asm_mfcr()
  %v1_10009148 = and i32 %v0_10009144, 268435456
  %v3_10009148 = icmp eq i32 %v1_10009148, 0
  store i32 %v0_10009144, i32* %r31.global-to-local, align 4
  br i1 %v3_10009148, label %dec_label_pc_10009160, label %dec_label_pc_10009154

dec_label_pc_10009154:                            ; preds = %dec_label_pc_1000912c
  %v0_10009154 = call i32 @function_100097b8()
  %v0_10009158 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009158 = inttoptr i32 %v0_10009154 to i32*
  store i32 %v0_10009158, i32* %v2_10009158, align 4
  br label %dec_label_pc_10009160

dec_label_pc_10009160:                            ; preds = %dec_label_pc_1000912c, %dec_label_pc_10009154
  %v0_10009170 = phi i32 [ %v0_10009144, %dec_label_pc_1000912c ], [ -1, %dec_label_pc_10009154 ]
  ret i32 %v0_10009170

; uselistorder directives
  uselistorder label %dec_label_pc_10009160, { 1, 0 }
}

define i32 @function_10009174() local_unnamed_addr {
dec_label_pc_10009174:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000918c = call i32 @__asm_mfcr()
  %v1_10009190 = and i32 %v0_1000918c, 268435456
  %v3_10009190 = icmp eq i32 %v1_10009190, 0
  store i32 %v0_1000918c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009190, label %dec_label_pc_100091a8, label %dec_label_pc_1000919c

dec_label_pc_1000919c:                            ; preds = %dec_label_pc_10009174
  %v0_1000919c = call i32 @function_100097b8()
  %v0_100091a0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100091a0 = inttoptr i32 %v0_1000919c to i32*
  store i32 %v0_100091a0, i32* %v2_100091a0, align 4
  br label %dec_label_pc_100091a8

dec_label_pc_100091a8:                            ; preds = %dec_label_pc_10009174, %dec_label_pc_1000919c
  %v0_100091b8 = phi i32 [ %v0_1000918c, %dec_label_pc_10009174 ], [ -1, %dec_label_pc_1000919c ]
  ret i32 %v0_100091b8

; uselistorder directives
  uselistorder label %dec_label_pc_100091a8, { 1, 0 }
}

define i32 @function_100091bc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100091bc:
  %r31.global-to-local = alloca i32, align 4
  %v0_100091d4 = call i32 @__asm_mfcr()
  %v1_100091d8 = and i32 %v0_100091d4, 268435456
  %v3_100091d8 = icmp eq i32 %v1_100091d8, 0
  store i32 %v0_100091d4, i32* %r31.global-to-local, align 4
  br i1 %v3_100091d8, label %dec_label_pc_100091f0, label %dec_label_pc_100091e4

dec_label_pc_100091e4:                            ; preds = %dec_label_pc_100091bc
  %v0_100091e4 = call i32 @function_100097b8()
  %v0_100091e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100091e8 = inttoptr i32 %v0_100091e4 to i32*
  store i32 %v0_100091e8, i32* %v2_100091e8, align 4
  br label %dec_label_pc_100091f0

dec_label_pc_100091f0:                            ; preds = %dec_label_pc_100091bc, %dec_label_pc_100091e4
  %v0_10009200 = phi i32 [ %v0_100091d4, %dec_label_pc_100091bc ], [ -1, %dec_label_pc_100091e4 ]
  ret i32 %v0_10009200

; uselistorder directives
  uselistorder label %dec_label_pc_100091f0, { 1, 0 }
}

define i32 @function_10009204(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009204:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10009218 = and i32 %arg2, 64
  %v3_10009218 = icmp eq i32 %v1_10009218, 0
  br i1 %v3_10009218, label %dec_label_pc_10009244, label %dec_label_pc_10009228

dec_label_pc_10009228:                            ; preds = %dec_label_pc_10009204
  %v2_10009230 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009230, i32* %stack_var_-32, align 4
  %v0_10009240 = load i32, i32* @r5, align 4
  br label %dec_label_pc_10009244

dec_label_pc_10009244:                            ; preds = %dec_label_pc_10009204, %dec_label_pc_10009228
  %v0_10009244 = phi i32 [ 0, %dec_label_pc_10009204 ], [ %v0_10009240, %dec_label_pc_10009228 ]
  store i32 %v0_10009244, i32* @r5, align 4
  %v0_1000924c = call i32 @__asm_mfcr()
  %v1_10009250 = and i32 %v0_1000924c, 268435456
  %v3_10009250 = icmp eq i32 %v1_10009250, 0
  store i32 %v0_1000924c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009250, label %dec_label_pc_10009268, label %dec_label_pc_1000925c

dec_label_pc_1000925c:                            ; preds = %dec_label_pc_10009244
  %v0_1000925c = call i32 @function_100097b8()
  %v0_10009260 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009260 = inttoptr i32 %v0_1000925c to i32*
  store i32 %v0_10009260, i32* %v2_10009260, align 4
  br label %dec_label_pc_10009268

dec_label_pc_10009268:                            ; preds = %dec_label_pc_10009244, %dec_label_pc_1000925c
  %v0_10009278 = phi i32 [ %v0_1000924c, %dec_label_pc_10009244 ], [ -1, %dec_label_pc_1000925c ]
  ret i32 %v0_10009278

; uselistorder directives
  uselistorder label %dec_label_pc_10009268, { 1, 0 }
  uselistorder label %dec_label_pc_10009244, { 1, 0 }
}

define i32 @function_1000927c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000927c:
  store i32 %arg1, i32* @r5, align 4
  %v2_10009288 = call i32 @function_10009204(i32 577, i32 577)
  ret i32 %v2_10009288
}

define i32 @function_1000928c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000928c:
  %r31.global-to-local = alloca i32, align 4
  %v0_100092a4 = call i32 @__asm_mfcr()
  %v1_100092a8 = and i32 %v0_100092a4, 268435456
  %v3_100092a8 = icmp eq i32 %v1_100092a8, 0
  store i32 %v0_100092a4, i32* %r31.global-to-local, align 4
  br i1 %v3_100092a8, label %dec_label_pc_100092c0, label %dec_label_pc_100092b4

dec_label_pc_100092b4:                            ; preds = %dec_label_pc_1000928c
  %v0_100092b4 = call i32 @function_100097b8()
  %v0_100092b8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100092b8 = inttoptr i32 %v0_100092b4 to i32*
  store i32 %v0_100092b8, i32* %v2_100092b8, align 4
  br label %dec_label_pc_100092c0

dec_label_pc_100092c0:                            ; preds = %dec_label_pc_1000928c, %dec_label_pc_100092b4
  %v0_100092d0 = phi i32 [ %v0_100092a4, %dec_label_pc_1000928c ], [ -1, %dec_label_pc_100092b4 ]
  ret i32 %v0_100092d0

; uselistorder directives
  uselistorder label %dec_label_pc_100092c0, { 1, 0 }
}

define i32 @function_100092d4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100092d4:
  %r31.global-to-local = alloca i32, align 4
  %v0_100092ec = call i32 @__asm_mfcr()
  %v1_100092f0 = and i32 %v0_100092ec, 268435456
  %v3_100092f0 = icmp eq i32 %v1_100092f0, 0
  store i32 %v0_100092ec, i32* %r31.global-to-local, align 4
  br i1 %v3_100092f0, label %dec_label_pc_10009308, label %dec_label_pc_100092fc

dec_label_pc_100092fc:                            ; preds = %dec_label_pc_100092d4
  %v0_100092fc = call i32 @function_100097b8()
  %v0_10009300 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009300 = inttoptr i32 %v0_100092fc to i32*
  store i32 %v0_10009300, i32* %v2_10009300, align 4
  br label %dec_label_pc_10009308

dec_label_pc_10009308:                            ; preds = %dec_label_pc_100092d4, %dec_label_pc_100092fc
  %v0_10009318 = phi i32 [ %v0_100092ec, %dec_label_pc_100092d4 ], [ -1, %dec_label_pc_100092fc ]
  ret i32 %v0_10009318

; uselistorder directives
  uselistorder label %dec_label_pc_10009308, { 1, 0 }
}

define i32 @function_1000931c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000931c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009334 = call i32 @__asm_mfcr()
  %v1_10009338 = and i32 %v0_10009334, 268435456
  %v3_10009338 = icmp eq i32 %v1_10009338, 0
  store i32 %v0_10009334, i32* %r31.global-to-local, align 4
  br i1 %v3_10009338, label %dec_label_pc_10009350, label %dec_label_pc_10009344

dec_label_pc_10009344:                            ; preds = %dec_label_pc_1000931c
  %v0_10009344 = call i32 @function_100097b8()
  %v0_10009348 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009348 = inttoptr i32 %v0_10009344 to i32*
  store i32 %v0_10009348, i32* %v2_10009348, align 4
  br label %dec_label_pc_10009350

dec_label_pc_10009350:                            ; preds = %dec_label_pc_1000931c, %dec_label_pc_10009344
  %v0_10009360 = phi i32 [ %v0_10009334, %dec_label_pc_1000931c ], [ -1, %dec_label_pc_10009344 ]
  ret i32 %v0_10009360

; uselistorder directives
  uselistorder label %dec_label_pc_10009350, { 1, 0 }
}

define i32 @function_10009364(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10009364:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000937c = call i32 @__asm_mfcr()
  %v1_10009380 = and i32 %v0_1000937c, 268435456
  %v3_10009380 = icmp eq i32 %v1_10009380, 0
  store i32 %v0_1000937c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009380, label %dec_label_pc_10009398, label %dec_label_pc_1000938c

dec_label_pc_1000938c:                            ; preds = %dec_label_pc_10009364
  %v0_1000938c = call i32 @function_100097b8()
  %v0_10009390 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009390 = inttoptr i32 %v0_1000938c to i32*
  store i32 %v0_10009390, i32* %v2_10009390, align 4
  br label %dec_label_pc_10009398

dec_label_pc_10009398:                            ; preds = %dec_label_pc_10009364, %dec_label_pc_1000938c
  %v0_100093a8 = phi i32 [ %v0_1000937c, %dec_label_pc_10009364 ], [ -1, %dec_label_pc_1000938c ]
  ret i32 %v0_100093a8

; uselistorder directives
  uselistorder label %dec_label_pc_10009398, { 1, 0 }
}

define i32 @function_100093ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_100093ac:
  %r31.global-to-local = alloca i32, align 4
  %v0_100093c4 = call i32 @__asm_mfcr()
  %v1_100093c8 = and i32 %v0_100093c4, 268435456
  %v3_100093c8 = icmp eq i32 %v1_100093c8, 0
  store i32 %v0_100093c4, i32* %r31.global-to-local, align 4
  br i1 %v3_100093c8, label %dec_label_pc_100093e0, label %dec_label_pc_100093d4

dec_label_pc_100093d4:                            ; preds = %dec_label_pc_100093ac
  %v0_100093d4 = call i32 @function_100097b8()
  %v0_100093d8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100093d8 = inttoptr i32 %v0_100093d4 to i32*
  store i32 %v0_100093d8, i32* %v2_100093d8, align 4
  br label %dec_label_pc_100093e0

dec_label_pc_100093e0:                            ; preds = %dec_label_pc_100093ac, %dec_label_pc_100093d4
  %v0_100093f0 = phi i32 [ %v0_100093c4, %dec_label_pc_100093ac ], [ -1, %dec_label_pc_100093d4 ]
  ret i32 %v0_100093f0

; uselistorder directives
  uselistorder label %dec_label_pc_100093e0, { 1, 0 }
}

define i32 @function_100093f4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100093f4:
  %r31.global-to-local = alloca i32, align 4
  %v3_100093f4 = icmp eq i32 %arg2, 0
  br i1 %v3_100093f4, label %dec_label_pc_10009434, label %dec_label_pc_1000941c

dec_label_pc_1000941c:                            ; preds = %dec_label_pc_100093f4
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_10009434, label %dec_label_pc_10009424

dec_label_pc_10009424:                            ; preds = %dec_label_pc_1000941c
  %v0_10009424 = call i32 @function_100097b8()
  %v2_1000942c = inttoptr i32 %v0_10009424 to i32*
  store i32 22, i32* %v2_1000942c, align 4
  %v0_10009458.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009454

dec_label_pc_10009434:                            ; preds = %dec_label_pc_1000941c, %dec_label_pc_100093f4
  %v0_10009438 = call i32 @__asm_mfcr()
  %v1_1000943c = and i32 %v0_10009438, 268435456
  %v3_1000943c = icmp eq i32 %v1_1000943c, 0
  store i32 %v0_10009438, i32* %r31.global-to-local, align 4
  br i1 %v3_1000943c, label %dec_label_pc_10009454, label %dec_label_pc_10009448

dec_label_pc_10009448:                            ; preds = %dec_label_pc_10009434
  %v0_10009448 = call i32 @function_100097b8()
  %v0_1000944c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000944c = inttoptr i32 %v0_10009448 to i32*
  store i32 %v0_1000944c, i32* %v2_1000944c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009454

dec_label_pc_10009454:                            ; preds = %dec_label_pc_10009434, %dec_label_pc_10009424, %dec_label_pc_10009448
  %v0_10009458 = phi i32 [ %v0_10009438, %dec_label_pc_10009434 ], [ %v0_10009458.pre, %dec_label_pc_10009424 ], [ -1, %dec_label_pc_10009448 ]
  ret i32 %v0_10009458

; uselistorder directives
  uselistorder label %dec_label_pc_10009454, { 2, 0, 1 }
}

define i32 @function_1000946c() local_unnamed_addr {
dec_label_pc_1000946c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009484 = call i32 @__asm_mfcr()
  %v1_10009488 = and i32 %v0_10009484, 268435456
  %v3_10009488 = icmp eq i32 %v1_10009488, 0
  store i32 %v0_10009484, i32* %r31.global-to-local, align 4
  br i1 %v3_10009488, label %dec_label_pc_100094a0, label %dec_label_pc_10009494

dec_label_pc_10009494:                            ; preds = %dec_label_pc_1000946c
  %v0_10009494 = call i32 @function_100097b8()
  %v0_10009498 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009498 = inttoptr i32 %v0_10009494 to i32*
  store i32 %v0_10009498, i32* %v2_10009498, align 4
  br label %dec_label_pc_100094a0

dec_label_pc_100094a0:                            ; preds = %dec_label_pc_1000946c, %dec_label_pc_10009494
  %v0_100094b0 = phi i32 [ %v0_10009484, %dec_label_pc_1000946c ], [ -1, %dec_label_pc_10009494 ]
  ret i32 %v0_100094b0

; uselistorder directives
  uselistorder label %dec_label_pc_100094a0, { 1, 0 }
}

define i32 @function_100094b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100094b4:
  %r31.global-to-local = alloca i32, align 4
  %v0_100094cc = call i32 @__asm_mfcr()
  %v1_100094d0 = and i32 %v0_100094cc, 268435456
  %v3_100094d0 = icmp eq i32 %v1_100094d0, 0
  store i32 %v0_100094cc, i32* %r31.global-to-local, align 4
  br i1 %v3_100094d0, label %dec_label_pc_100094e8, label %dec_label_pc_100094dc

dec_label_pc_100094dc:                            ; preds = %dec_label_pc_100094b4
  %v0_100094dc = call i32 @function_100097b8()
  %v0_100094e0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100094e0 = inttoptr i32 %v0_100094dc to i32*
  store i32 %v0_100094e0, i32* %v2_100094e0, align 4
  br label %dec_label_pc_100094e8

dec_label_pc_100094e8:                            ; preds = %dec_label_pc_100094b4, %dec_label_pc_100094dc
  %v0_100094f8 = phi i32 [ %v0_100094cc, %dec_label_pc_100094b4 ], [ -1, %dec_label_pc_100094dc ]
  ret i32 %v0_100094f8

; uselistorder directives
  uselistorder label %dec_label_pc_100094e8, { 1, 0 }
}

define i32 @function_100094fc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100094fc:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009514 = call i32 @__asm_mfcr()
  %v1_10009518 = and i32 %v0_10009514, 268435456
  %v3_10009518 = icmp eq i32 %v1_10009518, 0
  store i32 %v0_10009514, i32* %r31.global-to-local, align 4
  br i1 %v3_10009518, label %dec_label_pc_10009530, label %dec_label_pc_10009524

dec_label_pc_10009524:                            ; preds = %dec_label_pc_100094fc
  %v0_10009524 = call i32 @function_100097b8()
  %v0_10009528 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009528 = inttoptr i32 %v0_10009524 to i32*
  store i32 %v0_10009528, i32* %v2_10009528, align 4
  br label %dec_label_pc_10009530

dec_label_pc_10009530:                            ; preds = %dec_label_pc_100094fc, %dec_label_pc_10009524
  %v0_10009540 = phi i32 [ %v0_10009514, %dec_label_pc_100094fc ], [ -1, %dec_label_pc_10009524 ]
  ret i32 %v0_10009540

; uselistorder directives
  uselistorder label %dec_label_pc_10009530, { 1, 0 }
}

define i32 @function_10009544(i32* %arg1) local_unnamed_addr {
dec_label_pc_10009544:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10009560 = ptrtoint i32* %stack_var_-40 to i32
  %v2_10009568 = load i32, i32* %arg1, align 4
  store i32 %v2_10009560, i32* @r3, align 4
  %v3_10009574 = icmp eq i32 %v2_10009568, -1
  br i1 %v3_10009574, label %dec_label_pc_1000957c, label %dec_label_pc_10009590

dec_label_pc_1000957c:                            ; preds = %dec_label_pc_10009544
  %v0_1000957c = call i32 @function_100097b8()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009588 = inttoptr i32 %v0_1000957c to i32*
  store i32 9, i32* %v2_10009588, align 4
  %v0_100095d4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100095d0

dec_label_pc_10009590:                            ; preds = %dec_label_pc_10009544
  %v3_10009590 = call i32 @function_1000ab54(i32 %v2_10009560, i32 ptrtoint ([3 x i8]* @global_var_1000ab4c.327 to i32))
  %v0_10009598 = call i32 @function_1000ab4c()
  %v0_100095a0 = load i32, i32* @r31, align 4
  %v1_100095a0 = inttoptr i32 %v0_100095a0 to i32*
  %v2_100095a0 = load i32, i32* %v1_100095a0, align 4
  store i32 %v2_100095a0, i32* @r29, align 4
  store i32 -1, i32* %v1_100095a0, align 4
  store i32 %v2_10009560, i32* @r3, align 4
  %v2_100095b0 = call i32 @function_1000ab54(i32 %v2_10009560, i32 1)
  %v0_100095b4 = load i32, i32* @r31, align 4
  %v1_100095b4 = add i32 %v0_100095b4, 12
  %v2_100095b4 = inttoptr i32 %v1_100095b4 to i32*
  %v3_100095b4 = load i32, i32* %v2_100095b4, align 4
  store i32 %v3_100095b4, i32* @r3, align 4
  store i32 268473788, i32* @lr, align 4
  %v0_100095b8 = call i32 @function_1000a1b8()
  %v0_100095bc = load i32, i32* @r31, align 4
  store i32 %v0_100095bc, i32* @r3, align 4
  store i32 268473796, i32* @lr, align 4
  %v0_100095c0 = call i32 @function_1000a1b8()
  store i32 268473804, i32* @lr, align 4
  %v0_100095c8 = call i32 @function_1000909c()
  store i32 %v0_100095c8, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100095d0

dec_label_pc_100095d0:                            ; preds = %dec_label_pc_1000957c, %dec_label_pc_10009590
  %v0_100095d4 = phi i32 [ %v0_100095d4.pre, %dec_label_pc_1000957c ], [ %v0_100095c8, %dec_label_pc_10009590 ]
  ret i32 %v0_100095d4

; uselistorder directives
  uselistorder i32 %v2_10009560, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100095d0, { 1, 0 }
}

define i32 @function_100095e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100095e8:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  %v0_100095e8 = load i32, i32* @lr, align 4
  store i32 %v0_100095e8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 268473864, i32* @lr, align 4
  %v2_10009604 = call i32 @function_10009204(i32 18432, i32 18432)
  %v1_10009608 = icmp slt i32 %v2_10009604, 0
  br i1 %v1_10009608, label %dec_label_pc_100096e0, label %dec_label_pc_10009610

dec_label_pc_10009610:                            ; preds = %dec_label_pc_100095e8
  %v2_10009610 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10009610, i32* @r4, align 4
  store i32 268473880, i32* @lr, align 4
  %v1_10009614 = call i32 @function_1000af28(i32 %v2_10009610)
  %v1_10009618 = icmp slt i32 %v1_10009614, 0
  br i1 %v1_10009618, label %dec_label_pc_1000963c, label %dec_label_pc_10009620

dec_label_pc_10009620:                            ; preds = %dec_label_pc_10009610
  %v0_10009620 = load i32, i32* @r29, align 4
  store i32 2, i32* @r4, align 4
  store i32 268473908, i32* @lr, align 4
  %v2_10009630 = call i32 @function_10008fb4(i32 %v0_10009620)
  %tmp5 = icmp sgt i32 %v2_10009630, -1
  br i1 %tmp5, label %dec_label_pc_1000965c, label %dec_label_pc_1000963c

dec_label_pc_1000963c:                            ; preds = %dec_label_pc_10009620, %dec_label_pc_10009610
  %v0_1000963c = call i32 @function_100097b8()
  store i32 0, i32* @r31, align 4
  store i32 %v0_1000963c, i32* @r28, align 4
  %v1_1000964c = inttoptr i32 %v0_1000963c to i32*
  %v2_1000964c = load i32, i32* %v1_1000964c, align 4
  store i32 268473940, i32* @lr, align 4
  %v0_10009650 = call i32 @function_1000909c()
  %v1_10009654 = load i32, i32* @r28, align 4
  %v2_10009654 = inttoptr i32 %v1_10009654 to i32*
  store i32 %v2_1000964c, i32* %v2_10009654, align 4
  br label %dec_label_pc_100096e0

dec_label_pc_1000965c:                            ; preds = %dec_label_pc_10009620
  store i32 48, i32* @r3, align 4
  store i32 268473956, i32* @lr, align 4
  %v0_10009660 = call i32 @function_10009ff0()
  store i32 %v0_10009660, i32* %r31.global-to-local, align 4
  %v3_10009664 = icmp eq i32 %v0_10009660, 0
  br i1 %v3_10009664, label %dec_label_pc_100096b8, label %dec_label_pc_1000966c

dec_label_pc_1000966c:                            ; preds = %dec_label_pc_1000965c
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10009670 = load i32, i32* @r29, align 4
  %v2_10009670 = inttoptr i32 %v0_10009660 to i32*
  store i32 %v0_10009670, i32* %v2_10009670, align 4
  %v0_10009674 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009674 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009674 = add i32 %v1_10009674, 4
  %v3_10009674 = inttoptr i32 %v2_10009674 to i32*
  store i32 %v0_10009674, i32* %v3_10009674, align 4
  %v0_10009678 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009678 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009678 = add i32 %v1_10009678, 16
  %v3_10009678 = inttoptr i32 %v2_10009678 to i32*
  store i32 %v0_10009678, i32* %v3_10009678, align 4
  %v0_1000967c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000967c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000967c = add i32 %v1_1000967c, 8
  %v3_1000967c = inttoptr i32 %v2_1000967c to i32*
  store i32 %v0_1000967c, i32* %v3_1000967c, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_10009684 = icmp ugt i32 %tmp, 511
  %v1_10009688 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009688 = add i32 %v1_10009688, 20
  %v3_10009688 = inttoptr i32 %v2_10009688 to i32*
  store i32 %tmp, i32* %v3_10009688, align 4
  br i1 %v2_10009684, label %dec_label_pc_10009698, label %dec_label_pc_10009690

dec_label_pc_10009690:                            ; preds = %dec_label_pc_1000966c
  store i32 512, i32* %r0.global-to-local, align 4
  %v1_10009694 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009694 = add i32 %v1_10009694, 20
  %v3_10009694 = inttoptr i32 %v2_10009694 to i32*
  store i32 512, i32* %v3_10009694, align 4
  br label %dec_label_pc_10009698

dec_label_pc_10009698:                            ; preds = %dec_label_pc_1000966c, %dec_label_pc_10009690
  %v0_10009698 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009698 = add i32 %v0_10009698, 20
  %v2_10009698 = inttoptr i32 %v1_10009698 to i32*
  %v3_10009698 = load i32, i32* %v2_10009698, align 4
  store i32 268474020, i32* @lr, align 4
  %v2_100096a0 = call i32 @function_1000a148(i32 1, i32 %v3_10009698)
  %v3_100096a4 = icmp eq i32 %v2_100096a0, 0
  %v1_100096a8 = load i32, i32* @r31, align 4
  %v2_100096a8 = add i32 %v1_100096a8, 12
  %v3_100096a8 = inttoptr i32 %v2_100096a8 to i32*
  store i32 %v2_100096a0, i32* %v3_100096a8, align 4
  br i1 %v3_100096a4, label %dec_label_pc_100096b0, label %dec_label_pc_100096d4

dec_label_pc_100096b0:                            ; preds = %dec_label_pc_10009698
  %v0_100096b0 = load i32, i32* @r31, align 4
  store i32 %v0_100096b0, i32* @r3, align 4
  store i32 268474040, i32* @lr, align 4
  %v0_100096b4 = call i32 @function_1000a1b8()
  br label %dec_label_pc_100096b8

dec_label_pc_100096b8:                            ; preds = %dec_label_pc_1000965c, %dec_label_pc_100096b0
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_100096c4.330 to i32), i32* @lr, align 4
  %v0_100096c0 = call i32 @function_1000909c()
  %v0_100096c4 = call i32 @function_100097b8()
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_100096cc = inttoptr i32 %v0_100096c4 to i32*
  store i32 12, i32* %v2_100096cc, align 4
  br label %dec_label_pc_100096e0

dec_label_pc_100096d4:                            ; preds = %dec_label_pc_10009698
  %v0_100096dc = call i32 @function_1000ab4c()
  br label %dec_label_pc_100096e0

dec_label_pc_100096e0:                            ; preds = %dec_label_pc_100095e8, %dec_label_pc_100096b8, %dec_label_pc_1000963c, %dec_label_pc_100096d4
  store i32 %v0_100095e8, i32* %r0.global-to-local, align 4
  %v0_100096e4 = load i32, i32* @r31, align 4
  ret i32 %v0_100096e4

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32)* @function_1000a148, { 41, 43, 42, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 1, 0, 6, 5, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 4, 3, 2 }
  uselistorder i32 512, { 6, 8, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ()* @function_1000909c, { 20, 19, 18, 37, 36, 35, 34, 32, 33, 27, 26, 31, 30, 29, 28, 4, 3, 2, 25, 24, 23, 22, 21, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 18432, { 1, 0 }
  uselistorder label %dec_label_pc_100096e0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100096b8, { 1, 0 }
  uselistorder label %dec_label_pc_10009698, { 1, 0 }
}

define i32 @function_100096f8(i32* %arg1) local_unnamed_addr {
dec_label_pc_100096f8:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_100096fc = load i32, i32* @lr, align 4
  store i32 %v0_100096fc, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10009714 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10009714, i32* @r3, align 4
  %v3_10009720 = call i32 @function_1000ab54(i32 %v2_10009714, i32 ptrtoint ([3 x i8]* @global_var_1000ab4c.327 to i32))
  %v0_10009728 = call i32 @function_1000ab4c()
  br label %dec_label_pc_1000972c

dec_label_pc_1000972c:                            ; preds = %dec_label_pc_10009768, %dec_label_pc_100096f8
  %v0_1000972c = load i32, i32* @r31, align 4
  %v1_1000972c = add i32 %v0_1000972c, 4
  %v2_1000972c = inttoptr i32 %v1_1000972c to i32*
  %v3_1000972c = load i32, i32* %v2_1000972c, align 4
  store i32 %v3_1000972c, i32* %r0.global-to-local, align 4
  %v1_10009730 = add i32 %v0_1000972c, 8
  %v2_10009730 = inttoptr i32 %v1_10009730 to i32*
  %v3_10009730 = load i32, i32* %v2_10009730, align 4
  store i32 %v3_10009730, i32* %r9.global-to-local, align 4
  %v3_10009734 = icmp ugt i32 %v3_10009730, %v3_1000972c
  br i1 %v3_10009734, label %dec_label_pc_10009768, label %dec_label_pc_1000973c

dec_label_pc_1000973c:                            ; preds = %dec_label_pc_1000972c
  %v1_1000973c = inttoptr i32 %v0_1000972c to i32*
  %v2_1000973c = load i32, i32* %v1_1000973c, align 4
  store i32 %v2_1000973c, i32* @r3, align 4
  %v1_10009740 = add i32 %v0_1000972c, 12
  %v2_10009740 = inttoptr i32 %v1_10009740 to i32*
  %v3_10009740 = load i32, i32* %v2_10009740, align 4
  %v1_10009744 = add i32 %v0_1000972c, 20
  %v2_10009744 = inttoptr i32 %v1_10009744 to i32*
  %v3_10009744 = load i32, i32* %v2_10009744, align 4
  store i32 %v3_10009744, i32* @r5, align 4
  store i32 268474188, i32* @lr, align 4
  %v4_10009748 = inttoptr i32 %v2_1000973c to i32*
  %v5_10009748 = call i32 @function_1000af9c(i32* %v4_10009748, i32 %v3_10009740, i32 %v3_10009744, i32 %v3_10009730)
  %v2_1000974c = icmp sgt i32 %v5_10009748, 0
  br i1 %v2_1000974c, label %dec_label_pc_1000975c, label %dec_label_pc_10009754

dec_label_pc_10009754:                            ; preds = %dec_label_pc_1000973c
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10009794

dec_label_pc_1000975c:                            ; preds = %dec_label_pc_1000973c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10009760 = load i32, i32* @r31, align 4
  %v2_10009760 = add i32 %v1_10009760, 8
  %v3_10009760 = inttoptr i32 %v2_10009760 to i32*
  store i32 %v5_10009748, i32* %v3_10009760, align 4
  %v0_10009764 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009764 = load i32, i32* @r31, align 4
  %v2_10009764 = add i32 %v1_10009764, 4
  %v3_10009764 = inttoptr i32 %v2_10009764 to i32*
  store i32 %v0_10009764, i32* %v3_10009764, align 4
  %v0_10009768.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009768

dec_label_pc_10009768:                            ; preds = %dec_label_pc_1000972c, %dec_label_pc_1000975c
  %v1_1000977c = phi i32 [ %v0_1000972c, %dec_label_pc_1000972c ], [ %v0_10009768.pre, %dec_label_pc_1000975c ]
  %v1_10009768 = add i32 %v1_1000977c, 4
  %v2_10009768 = inttoptr i32 %v1_10009768 to i32*
  %v3_10009768 = load i32, i32* %v2_10009768, align 4
  store i32 %v3_10009768, i32* %r9.global-to-local, align 4
  %v1_1000976c = add i32 %v1_1000977c, 12
  %v2_1000976c = inttoptr i32 %v1_1000976c to i32*
  %v3_1000976c = load i32, i32* %v2_1000976c, align 4
  store i32 %v3_1000976c, i32* %r11.global-to-local, align 4
  %v2_10009770 = add i32 %v3_1000976c, %v3_10009768
  store i32 %v2_10009770, i32* @r29, align 4
  %v1_10009774 = add i32 %v2_10009770, 8
  %v2_10009774 = inttoptr i32 %v1_10009774 to i16*
  %v3_10009774 = load i16, i16* %v2_10009774, align 2
  %v4_10009774 = zext i16 %v3_10009774 to i32
  %v2_10009778 = add i32 %v4_10009774, %v3_10009768
  store i32 %v2_10009778, i32* %r0.global-to-local, align 4
  store i32 %v2_10009778, i32* %v2_10009768, align 4
  %v0_10009780 = load i32, i32* @r29, align 4
  %v1_10009780 = add i32 %v0_10009780, 4
  %v2_10009780 = inttoptr i32 %v1_10009780 to i32*
  %v3_10009780 = load i32, i32* %v2_10009780, align 4
  store i32 %v3_10009780, i32* %r0.global-to-local, align 4
  %v1_10009784 = load i32, i32* @r31, align 4
  %v2_10009784 = add i32 %v1_10009784, 16
  %v3_10009784 = inttoptr i32 %v2_10009784 to i32*
  store i32 %v3_10009780, i32* %v3_10009784, align 4
  %v0_10009788 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009788 = load i32, i32* %r11.global-to-local, align 4
  %v2_10009788 = add i32 %v1_10009788, %v0_10009788
  %v3_10009788 = inttoptr i32 %v2_10009788 to i32*
  %v4_10009788 = load i32, i32* %v3_10009788, align 4
  store i32 %v4_10009788, i32* %r0.global-to-local, align 4
  %v3_1000978c = icmp eq i32 %v4_10009788, 0
  br i1 %v3_1000978c, label %dec_label_pc_1000972c, label %dec_label_pc_10009794

dec_label_pc_10009794:                            ; preds = %dec_label_pc_10009768, %dec_label_pc_10009754
  store i32 %v2_10009714, i32* @r3, align 4
  %v2_1000979c = call i32 @function_1000ab54(i32 %v2_10009714, i32 1)
  store i32 %v0_100096fc, i32* %r0.global-to-local, align 4
  %v0_100097a4 = load i32, i32* @r29, align 4
  ret i32 %v0_100097a4

; uselistorder directives
  uselistorder i32 %v1_1000977c, { 1, 0 }
  uselistorder i32 %v0_1000972c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_10009714, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10009768, { 1, 0 }
}

define i32 @function_100097b8() local_unnamed_addr {
dec_label_pc_100097b8:
  ret i32 ptrtoint (i32* @global_var_1001c25c.332 to i32)
}

define i32 @function_100097c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100097c4:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_100097cc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268474328, i32* @lr, align 4
  %v1_100097d4 = call i32 @function_1000b3dc(i32 %v2_100097cc)
  %v3_100097dc = load i32, i32* %stack_var_-24, align 4
  %v2_100097e0 = add i32 %v3_100097dc, %tmp
  %v1_100097e8 = mul i32 %v2_100097e0, 10000
  %v1_100097f4 = and i32 %v1_100097e8, 2147483632
  ret i32 %v1_100097f4
}

define i32 @function_100097fc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100097fc:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_100097fc = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* @r11, align 4
  br i1 %v2_100097fc, label %dec_label_pc_10009810, label %dec_label_pc_1000980c

dec_label_pc_1000980c:                            ; preds = %dec_label_pc_100097fc
  %v0_1000980c = call i32 @function_1000b5a0()
  store i32 %v0_1000980c, i32* @r3, align 4
  br label %dec_label_pc_10009810

dec_label_pc_10009810:                            ; preds = %dec_label_pc_100097fc, %dec_label_pc_1000980c
  %v1_10009810 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10009810, i32* %r9.global-to-local, align 4
  %v4_10009810 = icmp eq i32 %v1_10009810, 0
  %v2_10009814 = add i32 %arg3, %arg2
  store i32 %v2_10009814, i32* %r4.global-to-local, align 4
  %v0_10009818 = load i32, i32* @r3, align 4
  %v2_10009818 = add i32 %v0_10009818, %arg3
  store i32 %v2_10009818, i32* %r10.global-to-local, align 4
  br i1 %v4_10009810, label %dec_label_pc_10009840, label %dec_label_pc_10009820

dec_label_pc_10009820:                            ; preds = %dec_label_pc_10009810
  %v1_10009820 = urem i32 %v2_10009818, 4
  %v3_10009820 = icmp eq i32 %v1_10009820, 0
  br i1 %v3_10009820, label %dec_label_pc_10009828, label %dec_label_pc_10009874

dec_label_pc_10009828:                            ; preds = %dec_label_pc_1000988c.dec_label_pc_10009828_crit_edge, %dec_label_pc_10009820
  %v1_10009834.pre = phi i32 [ %v1_10009834.pre.pre, %dec_label_pc_1000988c.dec_label_pc_10009828_crit_edge ], [ %v2_10009818, %dec_label_pc_10009820 ]
  %v0_10009828 = phi i32 [ %v1_1000988c, %dec_label_pc_1000988c.dec_label_pc_10009828_crit_edge ], [ %v1_10009810, %dec_label_pc_10009820 ]
  store i32 %v0_10009828, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000982c

dec_label_pc_1000982c:                            ; preds = %dec_label_pc_1000982c, %dec_label_pc_10009828
  %v1_10009834 = phi i32 [ %v2_10009838, %dec_label_pc_1000982c ], [ %v1_10009834.pre, %dec_label_pc_10009828 ]
  %v0_1000982c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000982c = add i32 %v0_1000982c, -4
  %v2_1000982c = inttoptr i32 %v1_1000982c to i32*
  %v3_1000982c = load i32, i32* %v2_1000982c, align 4
  %v1_10009830 = add i32 %v0_1000982c, -8
  %v2_10009830 = inttoptr i32 %v1_10009830 to i32*
  %v3_10009830 = load i32, i32* %v2_10009830, align 4
  store i32 %v3_10009830, i32* %r9.global-to-local, align 4
  store i32 %v1_10009830, i32* %r4.global-to-local, align 4
  %v2_10009834 = add i32 %v1_10009834, -4
  %v3_10009834 = inttoptr i32 %v2_10009834 to i32*
  store i32 %v3_1000982c, i32* %v3_10009834, align 4
  %v0_10009838 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009838 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009838 = add i32 %v1_10009838, -8
  %v3_10009838 = inttoptr i32 %v2_10009838 to i32*
  store i32 %v0_10009838, i32* %v3_10009838, align 4
  store i32 %v2_10009838, i32* %r10.global-to-local, align 4
  %v0_1000983c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000983c = add i32 %v0_1000983c, -1
  store i32 %v1_1000983c, i32* %ctr.global-to-local, align 4
  %v2_1000983c = icmp eq i32 %v1_1000983c, 0
  br i1 %v2_1000983c, label %dec_label_pc_10009840, label %dec_label_pc_1000982c

dec_label_pc_10009840:                            ; preds = %dec_label_pc_1000982c, %dec_label_pc_1000988c, %dec_label_pc_10009810
  %v0_10009840 = load i32, i32* @r11, align 4
  %v1_10009840 = urem i32 %v0_10009840, 8
  store i32 %v1_10009840, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_10009840, 4
  br i1 %tmp, label %dec_label_pc_10009858, label %dec_label_pc_1000984c

dec_label_pc_1000984c:                            ; preds = %dec_label_pc_10009840
  %v0_1000984c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000984c = add i32 %v0_1000984c, -4
  %v2_1000984c = inttoptr i32 %v1_1000984c to i32*
  %v3_1000984c = load i32, i32* %v2_1000984c, align 4
  store i32 %v1_1000984c, i32* %r4.global-to-local, align 4
  %v1_10009850 = add nsw i32 %v1_10009840, -4
  store i32 %v1_10009850, i32* %r5.global-to-local, align 4
  %v1_10009854 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009854 = add i32 %v1_10009854, -4
  %v3_10009854 = inttoptr i32 %v2_10009854 to i32*
  store i32 %v3_1000984c, i32* %v3_10009854, align 4
  store i32 %v2_10009854, i32* %r10.global-to-local, align 4
  %v0_10009858.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009858

dec_label_pc_10009858:                            ; preds = %dec_label_pc_10009840, %dec_label_pc_1000984c
  %v0_10009860 = phi i32 [ %v1_10009840, %dec_label_pc_10009840 ], [ %v0_10009858.pre, %dec_label_pc_1000984c ]
  %v3_10009858 = icmp eq i32 %v0_10009860, 0
  br i1 %v3_10009858, label %dec_label_pc_10009898, label %dec_label_pc_10009860

dec_label_pc_10009860:                            ; preds = %dec_label_pc_10009858
  store i32 %v0_10009860, i32* %ctr.global-to-local, align 4
  %v2_10009868.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009864

dec_label_pc_10009864:                            ; preds = %dec_label_pc_10009864, %dec_label_pc_10009860
  %v2_10009868 = phi i32 [ %v3_10009868, %dec_label_pc_10009864 ], [ %v2_10009868.pre, %dec_label_pc_10009860 ]
  %v0_10009864 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009864 = add i32 %v0_10009864, -1
  %v2_10009864 = inttoptr i32 %v1_10009864 to i8*
  %v3_10009864 = load i8, i8* %v2_10009864, align 1
  store i32 %v1_10009864, i32* %r4.global-to-local, align 4
  %v3_10009868 = add i32 %v2_10009868, -1
  %v4_10009868 = inttoptr i32 %v3_10009868 to i8*
  store i8 %v3_10009864, i8* %v4_10009868, align 1
  store i32 %v3_10009868, i32* %r10.global-to-local, align 4
  %v0_1000986c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000986c = add i32 %v0_1000986c, -1
  store i32 %v1_1000986c, i32* %ctr.global-to-local, align 4
  %v2_1000986c = icmp eq i32 %v1_1000986c, 0
  br i1 %v2_1000986c, label %dec_label_pc_10009898, label %dec_label_pc_10009864

dec_label_pc_10009874:                            ; preds = %dec_label_pc_10009820
  %v1_10009874 = sub nsw i32 4, %v1_10009820
  store i32 %v1_10009874, i32* %ctr.global-to-local, align 4
  %v2_1000987c = sub i32 %arg3, %v1_10009874
  store i32 %v2_1000987c, i32* @r11, align 4
  %v1_100098808 = add i32 %v2_10009814, -1
  %v2_100098809 = inttoptr i32 %v1_100098808 to i8*
  %v3_1000988010 = load i8, i8* %v2_100098809, align 1
  store i32 %v1_100098808, i32* %r4.global-to-local, align 4
  %v3_1000988412 = add i32 %v2_10009818, -1
  %v4_1000988413 = inttoptr i32 %v3_1000988412 to i8*
  store i8 %v3_1000988010, i8* %v4_1000988413, align 1
  store i32 %v3_1000988412, i32* %r10.global-to-local, align 4
  %v0_1000988814 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000988815 = add i32 %v0_1000988814, -1
  store i32 %v1_1000988815, i32* %ctr.global-to-local, align 4
  %v2_1000988816 = icmp eq i32 %v1_1000988815, 0
  br i1 %v2_1000988816, label %dec_label_pc_1000988c, label %dec_label_pc_10009880.dec_label_pc_10009880_crit_edge

dec_label_pc_10009880.dec_label_pc_10009880_crit_edge: ; preds = %dec_label_pc_10009874, %dec_label_pc_10009880.dec_label_pc_10009880_crit_edge
  %v3_1000988417 = phi i32 [ %v3_10009884, %dec_label_pc_10009880.dec_label_pc_10009880_crit_edge ], [ %v3_1000988412, %dec_label_pc_10009874 ]
  %v0_10009880.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10009880 = add i32 %v0_10009880.pre, -1
  %v2_10009880 = inttoptr i32 %v1_10009880 to i8*
  %v3_10009880 = load i8, i8* %v2_10009880, align 1
  store i32 %v1_10009880, i32* %r4.global-to-local, align 4
  %v3_10009884 = add i32 %v3_1000988417, -1
  %v4_10009884 = inttoptr i32 %v3_10009884 to i8*
  store i8 %v3_10009880, i8* %v4_10009884, align 1
  store i32 %v3_10009884, i32* %r10.global-to-local, align 4
  %v0_10009888 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009888 = add i32 %v0_10009888, -1
  store i32 %v1_10009888, i32* %ctr.global-to-local, align 4
  %v2_10009888 = icmp eq i32 %v1_10009888, 0
  br i1 %v2_10009888, label %dec_label_pc_1000988c, label %dec_label_pc_10009880.dec_label_pc_10009880_crit_edge

dec_label_pc_1000988c:                            ; preds = %dec_label_pc_10009880.dec_label_pc_10009880_crit_edge, %dec_label_pc_10009874
  %v0_1000988c = load i32, i32* @r11, align 4
  %v1_1000988c = call i32 @__asm_rlwinm.(i32 %v0_1000988c, i32 29, i32 3, i32 31)
  store i32 %v1_1000988c, i32* %r9.global-to-local, align 4
  %v4_1000988c = icmp eq i32 %v1_1000988c, 0
  br i1 %v4_1000988c, label %dec_label_pc_10009840, label %dec_label_pc_1000988c.dec_label_pc_10009828_crit_edge

dec_label_pc_1000988c.dec_label_pc_10009828_crit_edge: ; preds = %dec_label_pc_1000988c
  %v1_10009834.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009828

dec_label_pc_10009898:                            ; preds = %dec_label_pc_10009864, %dec_label_pc_10009858
  %v0_10009898 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_10009898

; uselistorder directives
  uselistorder i32 %v1_1000988c, { 1, 2, 0 }
  uselistorder i32 %v1_10009888, { 1, 0 }
  uselistorder i32 %v3_10009884, { 1, 2, 0 }
  uselistorder i32 %v1_1000986c, { 1, 0 }
  uselistorder i32 %v3_10009868, { 1, 2, 0 }
  uselistorder i32 %v1_10009840, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000983c, { 1, 0 }
  uselistorder i32 %v2_10009838, { 1, 2, 0 }
  uselistorder i32 %v1_10009820, { 1, 0 }
  uselistorder i32 %v2_10009818, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 8, 9, 1, 5, 2, 7, 3, 6, 4 }
  uselistorder i32* %r10.global-to-local, { 8, 0, 9, 1, 5, 2, 6, 3, 7, 4 }
  uselistorder i32* %ctr.global-to-local, { 0, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 3, 0, 1, 4, 2, 5 }
  uselistorder label %dec_label_pc_10009880.dec_label_pc_10009880_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009858, { 1, 0 }
  uselistorder label %dec_label_pc_10009840, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009810, { 1, 0 }
}

define i32 @function_100098a0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100098a0:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_100098a0 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_100098a0, i32* %r9.global-to-local, align 4
  %v4_100098a0 = icmp eq i32 %v1_100098a0, 0
  %v1_100098a8 = add i32 %arg1, -4
  store i32 %v1_100098a8, i32* %r11.global-to-local, align 4
  %v1_100098ac = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_100098b0 = call i32 @__asm_rlwimi(i32 %v1_100098ac, i32 16, i32 0, i32 15)
  %v2_100098b0 = trunc i32 %v1_100098b0 to i8
  br i1 %v4_100098a0, label %dec_label_pc_100098d8, label %dec_label_pc_100098b8

dec_label_pc_100098b8:                            ; preds = %dec_label_pc_100098a0
  %v0_100098b8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100098b8 = urem i32 %v0_100098b8, 4
  %v3_100098b8 = icmp eq i32 %v1_100098b8, 0
  br i1 %v3_100098b8, label %dec_label_pc_100098b8.dec_label_pc_100098c0_crit_edge, label %dec_label_pc_10009908

dec_label_pc_100098b8.dec_label_pc_100098c0_crit_edge: ; preds = %dec_label_pc_100098b8
  %v0_100098c0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100098c0

dec_label_pc_100098c0:                            ; preds = %dec_label_pc_10009920.dec_label_pc_100098c0_crit_edge, %dec_label_pc_100098b8.dec_label_pc_100098c0_crit_edge
  %v0_100098c4.pre = phi i32 [ %v0_100098b8, %dec_label_pc_100098b8.dec_label_pc_100098c0_crit_edge ], [ %v0_100098c4.pre.pre, %dec_label_pc_10009920.dec_label_pc_100098c0_crit_edge ]
  %v0_100098c0 = phi i32 [ %v0_100098c0.pre, %dec_label_pc_100098b8.dec_label_pc_100098c0_crit_edge ], [ %v1_10009920, %dec_label_pc_10009920.dec_label_pc_100098c0_crit_edge ]
  store i32 %v0_100098c0, i32* %ctr.global-to-local, align 4
  %v1_100098c8 = sext i8 %v2_100098b0 to i32
  br label %dec_label_pc_100098c4

dec_label_pc_100098c4:                            ; preds = %dec_label_pc_100098c4, %dec_label_pc_100098c0
  %v0_100098c4 = phi i32 [ %v1_100098d0, %dec_label_pc_100098c4 ], [ %v0_100098c4.pre, %dec_label_pc_100098c0 ]
  %v1_100098c4 = add i32 %v0_100098c4, 4
  store i32 %v1_100098c4, i32* %r9.global-to-local, align 4
  %v4_100098c8 = inttoptr i32 %v1_100098c4 to i32*
  store i32 %v1_100098c8, i32* %v4_100098c8, align 4
  %v2_100098cc = load i32, i32* %r9.global-to-local, align 4
  %v3_100098cc = add i32 %v2_100098cc, 4
  %v4_100098cc = inttoptr i32 %v3_100098cc to i32*
  store i32 %v1_100098c8, i32* %v4_100098cc, align 4
  %v0_100098d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100098d0 = add i32 %v0_100098d0, 4
  store i32 %v1_100098d0, i32* %r11.global-to-local, align 4
  %v0_100098d4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100098d4 = add i32 %v0_100098d4, -1
  store i32 %v1_100098d4, i32* %ctr.global-to-local, align 4
  %v2_100098d4 = icmp eq i32 %v1_100098d4, 0
  br i1 %v2_100098d4, label %dec_label_pc_100098d8, label %dec_label_pc_100098c4

dec_label_pc_100098d8:                            ; preds = %dec_label_pc_100098c4, %dec_label_pc_10009920, %dec_label_pc_100098a0
  %v0_100098d8 = load i32, i32* %r5.global-to-local, align 4
  %v1_100098d8 = urem i32 %v0_100098d8, 8
  store i32 %v1_100098d8, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_100098d8, 4
  br i1 %tmp, label %dec_label_pc_100098ec, label %dec_label_pc_100098e4

dec_label_pc_100098e4:                            ; preds = %dec_label_pc_100098d8
  %v1_100098e4 = sext i8 %v2_100098b0 to i32
  %v2_100098e4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100098e4 = add i32 %v2_100098e4, 4
  %v4_100098e4 = inttoptr i32 %v3_100098e4 to i32*
  store i32 %v1_100098e4, i32* %v4_100098e4, align 4
  store i32 %v3_100098e4, i32* %r11.global-to-local, align 4
  %v0_100098e8 = load i32, i32* @r5, align 4
  %v1_100098e8 = add i32 %v0_100098e8, -4
  store i32 %v1_100098e8, i32* @r5, align 4
  br label %dec_label_pc_100098ec

dec_label_pc_100098ec:                            ; preds = %dec_label_pc_100098d8, %dec_label_pc_100098e4
  %v0_100098ec = phi i32 [ %v1_100098d8, %dec_label_pc_100098d8 ], [ %v1_100098e8, %dec_label_pc_100098e4 ]
  %v3_100098ec = icmp eq i32 %v0_100098ec, 0
  %v0_100098f0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100098ec, i32 %v0_100098f0)
  %v0_100098f4 = load i32, i32* @r5, align 4
  store i32 %v0_100098f4, i32* %ctr.global-to-local, align 4
  %v0_100098f8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100098f8 = add i32 %v0_100098f8, 3
  store i32 %v1_100098f8, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100098fc

dec_label_pc_100098fc:                            ; preds = %dec_label_pc_100098fc, %dec_label_pc_100098ec
  %v3_100098fc = phi i32 [ %v4_100098fc, %dec_label_pc_100098fc ], [ %v1_100098f8, %dec_label_pc_100098ec ]
  %v4_100098fc = add i32 %v3_100098fc, 1
  %v5_100098fc = inttoptr i32 %v4_100098fc to i8*
  store i8 %v2_100098b0, i8* %v5_100098fc, align 1
  store i32 %v4_100098fc, i32* %r9.global-to-local, align 4
  %v0_10009900 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009900 = add i32 %v0_10009900, -1
  store i32 %v1_10009900, i32* %ctr.global-to-local, align 4
  %v2_10009900 = icmp eq i32 %v1_10009900, 0
  br i1 %v2_10009900, label %dec_label_pc_1000992c, label %dec_label_pc_100098fc

dec_label_pc_10009908:                            ; preds = %dec_label_pc_100098b8
  %v1_10009908 = sub nsw i32 4, %v1_100098b8
  store i32 %v1_10009908, i32* %ctr.global-to-local, align 4
  %v1_10009910 = load i32, i32* %r5.global-to-local, align 4
  %v2_10009910 = sub i32 %v1_10009910, %v1_10009908
  store i32 %v2_10009910, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009914

dec_label_pc_10009914:                            ; preds = %dec_label_pc_10009914, %dec_label_pc_10009908
  %v3_10009914 = phi i32 [ %v1_10009918, %dec_label_pc_10009914 ], [ %v0_100098b8, %dec_label_pc_10009908 ]
  %v4_10009914 = add i32 %v3_10009914, 4
  %v5_10009914 = inttoptr i32 %v4_10009914 to i8*
  store i8 %v2_100098b0, i8* %v5_10009914, align 1
  %v0_10009918 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009918 = add i32 %v0_10009918, 1
  store i32 %v1_10009918, i32* %r11.global-to-local, align 4
  %v0_1000991c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000991c = add i32 %v0_1000991c, -1
  store i32 %v1_1000991c, i32* %ctr.global-to-local, align 4
  %v2_1000991c = icmp eq i32 %v1_1000991c, 0
  br i1 %v2_1000991c, label %dec_label_pc_10009920, label %dec_label_pc_10009914

dec_label_pc_10009920:                            ; preds = %dec_label_pc_10009914
  %v0_10009920 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009920 = call i32 @__asm_rlwinm.(i32 %v0_10009920, i32 29, i32 3, i32 31)
  store i32 %v1_10009920, i32* %r9.global-to-local, align 4
  %v4_10009920 = icmp eq i32 %v1_10009920, 0
  br i1 %v4_10009920, label %dec_label_pc_100098d8, label %dec_label_pc_10009920.dec_label_pc_100098c0_crit_edge

dec_label_pc_10009920.dec_label_pc_100098c0_crit_edge: ; preds = %dec_label_pc_10009920
  %v0_100098c4.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100098c0

dec_label_pc_1000992c:                            ; preds = %dec_label_pc_100098fc
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10009920, { 1, 2, 0 }
  uselistorder i32 %v1_1000991c, { 1, 0 }
  uselistorder i32 %v1_10009918, { 1, 0 }
  uselistorder i32 %v1_10009900, { 1, 0 }
  uselistorder i32 %v4_100098fc, { 1, 2, 0 }
  uselistorder i32 %v1_100098d8, { 2, 1, 0 }
  uselistorder i32 %v1_100098d4, { 1, 0 }
  uselistorder i32 %v1_100098d0, { 1, 0 }
  uselistorder i32 %v1_100098b8, { 1, 0 }
  uselistorder i32 %v0_100098b8, { 2, 1, 0 }
  uselistorder i8 %v2_100098b0, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 55, 56, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder label %dec_label_pc_100098ec, { 1, 0 }
  uselistorder label %dec_label_pc_100098d8, { 1, 0, 2 }
}

define i32 @function_10009930(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_10009930:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10009930 = add i32 %arg1, -1
  %v1_10009934 = sub i32 %v2_10009930, %tmp
  store i32 %v1_10009934, i32* %r9.global-to-local, align 4
  %v2_100099384 = load i8, i8* %arg2, align 1
  %v1_1000993c6 = add i32 %tmp, 1
  store i32 %v1_1000993c6, i32* %r4.global-to-local, align 4
  %v3_100099407 = icmp eq i8 %v2_100099384, 0
  store i1 %v3_100099407, i1* %cr7_eq.global-to-local, align 1
  %v5_100099448 = inttoptr i32 %arg1 to i8*
  store i8 %v2_100099384, i8* %v5_100099448, align 1
  %v0_100099489 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100099489, label %dec_label_pc_1000994c, label %dec_label_pc_10009938.dec_label_pc_10009938_crit_edge

dec_label_pc_10009938.dec_label_pc_10009938_crit_edge: ; preds = %dec_label_pc_10009930, %dec_label_pc_10009938.dec_label_pc_10009938_crit_edge
  %v0_10009938.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_10009944.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10009938 = inttoptr i32 %v0_10009938.pre to i8*
  %v2_10009938 = load i8, i8* %v1_10009938, align 1
  %v1_1000993c = add i32 %v0_10009938.pre, 1
  store i32 %v1_1000993c, i32* %r4.global-to-local, align 4
  %v3_10009940 = icmp eq i8 %v2_10009938, 0
  store i1 %v3_10009940, i1* %cr7_eq.global-to-local, align 1
  %v4_10009944 = add i32 %v1_1000993c, %v2_10009944.pre
  %v5_10009944 = inttoptr i32 %v4_10009944 to i8*
  store i8 %v2_10009938, i8* %v5_10009944, align 1
  %v0_10009948 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009948, label %dec_label_pc_1000994c, label %dec_label_pc_10009938.dec_label_pc_10009938_crit_edge

dec_label_pc_1000994c:                            ; preds = %dec_label_pc_10009938.dec_label_pc_10009938_crit_edge, %dec_label_pc_10009930
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009938.dec_label_pc_10009938_crit_edge, { 1, 0 }
}

define i32 @function_10009950(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009950:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10009954 = load i32, i32* @lr, align 4
  store i32 %v0_10009954, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10009964 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268474744, i32* @lr, align 4
  %v3_10009974 = call i32 @function_10008ecc(i32 1076655123, i32 %v2_10009964, i32 %v2_10009964)
  %v2_10009978 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10009978, i32* @r4, align 4
  store i32 %v3_10009974, i32* @r30, align 4
  %v3_1000997c = icmp eq i32 %v3_10009974, 0
  %v0_10009984 = load i32, i32* @r31, align 4
  br i1 %v3_1000997c, label %dec_label_pc_1000998c, label %dec_label_pc_100099d4

dec_label_pc_1000998c:                            ; preds = %dec_label_pc_10009950
  %v1_10009984 = add i32 %v0_10009984, 17
  %v3_100099a4 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_100099a4, i32* %r0.global-to-local, align 4
  %v2_100099a8 = add i32 %v0_10009984, 4
  %v3_100099a8 = inttoptr i32 %v2_100099a8 to i32*
  store i32 %tmp7, i32* %v3_100099a8, align 4
  %v0_100099ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100099ac = load i32, i32* @r31, align 4
  %v2_100099ac = inttoptr i32 %v1_100099ac to i32*
  store i32 %v0_100099ac, i32* %v2_100099ac, align 4
  %v0_100099b0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100099b0 = load i32, i32* @r31, align 4
  %v2_100099b0 = add i32 %v1_100099b0, 8
  %v3_100099b0 = inttoptr i32 %v2_100099b0 to i32*
  store i32 %v0_100099b0, i32* %v3_100099b0, align 4
  %v0_100099b4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100099b4 = load i32, i32* @r31, align 4
  %v2_100099b4 = add i32 %v1_100099b4, 12
  %v3_100099b4 = inttoptr i32 %v2_100099b4 to i32*
  store i32 %v0_100099b4, i32* %v3_100099b4, align 4
  %v3_100099b8 = load i32, i32* @r31, align 4
  %v4_100099b8 = add i32 %v3_100099b8, 16
  %v5_100099b8 = inttoptr i32 %v4_100099b8 to i8*
  store i8 %tmp4, i8* %v5_100099b8, align 1
  %v1_100099bc = load i32, i32* @r31, align 4
  %v2_100099bc = add i32 %v1_100099bc, 52
  %v3_100099bc = inttoptr i32 %v2_100099bc to i32*
  store i32 %tmp3, i32* %v3_100099bc, align 4
  %v1_100099c0 = load i32, i32* @r31, align 4
  %v2_100099c0 = add i32 %v1_100099c0, 56
  %v3_100099c0 = inttoptr i32 %v2_100099c0 to i32*
  store i32 %tmp2, i32* %v3_100099c0, align 4
  store i32 268474824, i32* @lr, align 4
  %v6_100099c4 = sext i8 %tmp4 to i32
  %v8_100099c4 = call i32 @function_1000b63c(i32 %v1_10009984, i32 %v2_10009978, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_100099c4, i32 %tmp7)
  store i32 268474836, i32* @lr, align 4
  %v3_100099d0 = call i32 @function_100098a0(i32 %v8_100099c4, i32 0, i32 13)
  %v0_100099d8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100099d4

dec_label_pc_100099d4:                            ; preds = %dec_label_pc_10009950, %dec_label_pc_1000998c
  %v0_100099d8 = phi i32 [ %v3_10009974, %dec_label_pc_10009950 ], [ %v0_100099d8.pre, %dec_label_pc_1000998c ]
  store i32 %v0_10009954, i32* %r0.global-to-local, align 4
  ret i32 %v0_100099d8

; uselistorder directives
  uselistorder i32 %v2_10009964, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 6, 7, 8, 0, 1, 9, 10, 2, 11, 12, 3, 13, 14, 4, 15, 16, 5 }
  uselistorder label %dec_label_pc_100099d4, { 1, 0 }
}

define i32 @function_100099ec() local_unnamed_addr {
dec_label_pc_100099ec:
  %r27.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_100099ec = load i32, i32* @r4, align 4
  %v3_100099ec = icmp eq i32 %v0_100099ec, 1
  %v0_100099fc = load i32, i32* @r3, align 4
  store i32 %v0_100099fc, i32* %r27.global-to-local, align 4
  %v0_10009a04 = load i32, i32* @r5, align 4
  store i32 %v0_10009a04, i32* @r31, align 4
  br i1 %v3_100099ec, label %dec_label_pc_10009a28, label %dec_label_pc_10009a0c

dec_label_pc_10009a0c:                            ; preds = %dec_label_pc_100099ec
  %v3_10009a0c = icmp eq i32 %v0_100099ec, 2
  br i1 %v3_10009a0c, label %dec_label_pc_10009a48, label %dec_label_pc_10009a14

dec_label_pc_10009a14:                            ; preds = %dec_label_pc_10009a0c
  %v3_10009a14 = icmp eq i32 %v0_100099ec, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_10009a14, label %dec_label_pc_10009a50, label %dec_label_pc_10009a34

dec_label_pc_10009a28:                            ; preds = %dec_label_pc_100099ec
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_10009a50

dec_label_pc_10009a34:                            ; preds = %dec_label_pc_10009a14
  %v0_10009a34 = call i32 @function_100097b8()
  store i32 -1, i32* @r28, align 4
  %v2_10009a40 = inttoptr i32 %v0_10009a34 to i32*
  store i32 22, i32* %v2_10009a40, align 4
  br label %dec_label_pc_10009b38

dec_label_pc_10009a48:                            ; preds = %dec_label_pc_10009a0c
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_10009a50

dec_label_pc_10009a50:                            ; preds = %dec_label_pc_10009a14, %dec_label_pc_10009a28, %dec_label_pc_10009a48
  %v1_10009a50 = inttoptr i32 %v0_10009a04 to i32*
  %v2_10009a50 = load i32, i32* %v1_10009a50, align 4
  store i32 19, i32* @r5, align 4
  %v1_10009a58 = add i32 %v0_10009a04, 4
  %v2_10009a58 = inttoptr i32 %v1_10009a58 to i32*
  %v3_10009a58 = load i32, i32* %v2_10009a58, align 4
  store i32 %v3_10009a58, i32* %r9.global-to-local, align 4
  %v1_10009a5c = add i32 %v0_10009a04, 17
  store i32 %v1_10009a5c, i32* @r4, align 4
  %v1_10009a60 = add i32 %v0_10009a04, 8
  %v2_10009a60 = inttoptr i32 %v1_10009a60 to i32*
  %v3_10009a60 = load i32, i32* %v2_10009a60, align 4
  %v2_10009a64 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10009a64, i32* @r3, align 4
  %v2_10009a6c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10009a50, i32* %stack_var_-72, align 4
  store i32 268475036, i32* @lr, align 4
  %v0_10009a98 = call i32 @function_1000b5a0()
  %v0_10009a9c = load i32, i32* %r27.global-to-local, align 4
  %v0_10009aa0 = load i32, i32* @r30, align 4
  store i32 268475056, i32* @lr, align 4
  %v3_10009aac = call i32 @function_10008ecc(i32 %v0_10009a9c, i32 %v0_10009aa0, i32 %v2_10009a6c)
  store i32 %v3_10009aac, i32* @r28, align 4
  %v3_10009ab0 = icmp eq i32 %v3_10009aac, 0
  br i1 %v3_10009ab0, label %dec_label_pc_10009ab8, label %dec_label_pc_10009b38

dec_label_pc_10009ab8:                            ; preds = %dec_label_pc_10009a50
  %v0_10009ab8 = load i32, i32* @r30, align 4
  %v3_10009abc = icmp eq i32 %v0_10009ab8, -2144570348
  br i1 %v3_10009abc, label %dec_label_pc_10009ac4, label %dec_label_pc_10009b34

dec_label_pc_10009ac4:                            ; preds = %dec_label_pc_10009ab8
  %v0_10009ac4 = call i32 @function_100097b8()
  store i32 %v0_10009ac4, i32* @r29, align 4
  %v0_10009ad4 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009adc = inttoptr i32 %v0_10009ac4 to i32*
  %v2_10009adc = load i32, i32* %v1_10009adc, align 4
  store i32 %v2_10009adc, i32* @r30, align 4
  store i32 268475112, i32* @lr, align 4
  %v3_10009ae4 = call i32 @function_10008ecc(i32 %v0_10009ad4, i32 1076655123, i32 %v2_10009a6c)
  %v3_10009ae8 = icmp eq i32 %v3_10009ae4, 0
  br i1 %v3_10009ae8, label %dec_label_pc_10009af8, label %dec_label_pc_10009af0

dec_label_pc_10009af0:                            ; preds = %dec_label_pc_10009ac4
  %v0_10009af0 = load i32, i32* @r30, align 4
  %v1_10009af0 = load i32, i32* @r29, align 4
  %v2_10009af0 = inttoptr i32 %v1_10009af0 to i32*
  store i32 %v0_10009af0, i32* %v2_10009af0, align 4
  br label %dec_label_pc_10009b38

dec_label_pc_10009af8:                            ; preds = %dec_label_pc_10009ac4
  %v0_10009af8 = load i32, i32* @r31, align 4
  %v1_10009af8 = add i32 %v0_10009af8, 8
  %v2_10009af8 = inttoptr i32 %v1_10009af8 to i32*
  %v3_10009af8 = load i32, i32* %v2_10009af8, align 4
  %v1_10009b00 = call i32 @__asm_rlwinm(i32 %v3_10009af8, i32 0, i32 19, i32 20)
  %v1_10009b04 = call i32 @__asm_rlwinm(i32 %v3_10009a60, i32 0, i32 19, i32 20)
  store i32 %v1_10009b04, i32* %r9.global-to-local, align 4
  %v4_10009b08 = icmp eq i32 %v1_10009b00, %v1_10009b04
  br i1 %v4_10009b08, label %dec_label_pc_10009b10, label %dec_label_pc_10009b24

dec_label_pc_10009b10:                            ; preds = %dec_label_pc_10009af8
  %v1_10009b10 = and i32 %v3_10009af8, 768
  store i32 %v1_10009b10, i32* %r9.global-to-local, align 4
  %v3_10009b10 = icmp eq i32 %v1_10009b10, 0
  br i1 %v3_10009b10, label %dec_label_pc_10009b34, label %dec_label_pc_10009b18

dec_label_pc_10009b18:                            ; preds = %dec_label_pc_10009b10
  %v1_10009b18 = call i32 @__asm_rlwinm(i32 %v3_10009a60, i32 0, i32 22, i32 23)
  %v0_10009b1c = load i32, i32* %r9.global-to-local, align 4
  %v4_10009b1c = icmp eq i32 %v0_10009b1c, %v1_10009b18
  br i1 %v4_10009b1c, label %dec_label_pc_10009b34, label %dec_label_pc_10009b24

dec_label_pc_10009b24:                            ; preds = %dec_label_pc_10009af8, %dec_label_pc_10009b18
  store i32 -1, i32* @r28, align 4
  %v1_10009b2c = load i32, i32* @r29, align 4
  %v2_10009b2c = inttoptr i32 %v1_10009b2c to i32*
  store i32 22, i32* %v2_10009b2c, align 4
  br label %dec_label_pc_10009b38

dec_label_pc_10009b34:                            ; preds = %dec_label_pc_10009ab8, %dec_label_pc_10009b18, %dec_label_pc_10009b10
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10009b38

dec_label_pc_10009b38:                            ; preds = %dec_label_pc_10009a50, %dec_label_pc_10009b24, %dec_label_pc_10009af0, %dec_label_pc_10009a34, %dec_label_pc_10009b34
  %v0_10009b3c = load i32, i32* @r28, align 4
  ret i32 %v0_10009b3c

; uselistorder directives
  uselistorder i32 %v0_10009a04, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_10008ecc, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10009b38, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10009b34, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009b24, { 1, 0 }
  uselistorder label %dec_label_pc_10009a50, { 2, 1, 0 }
}

define i32 @function_10009b50(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009b50:
  %stack_var_-24 = alloca i32, align 4
  %v2_10009b58 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10009b58, i32* @r4, align 4
  store i32 268475236, i32* @lr, align 4
  %v1_10009b60 = bitcast i32* %stack_var_-24 to i8*
  %v2_10009b60 = call i32 @function_1000b670(i8* %v1_10009b60)
  %v3_10009b64 = icmp eq i32 %v2_10009b60, 0
  br i1 %v3_10009b64, label %dec_label_pc_10009b74, label %dec_label_pc_10009b70

dec_label_pc_10009b70:                            ; preds = %dec_label_pc_10009b50
  %v3_10009b70 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10009b74

dec_label_pc_10009b74:                            ; preds = %dec_label_pc_10009b50, %dec_label_pc_10009b70
  %v0_10009b80 = phi i32 [ -1, %dec_label_pc_10009b50 ], [ %v3_10009b70, %dec_label_pc_10009b70 ]
  ret i32 %v0_10009b80

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009b74, { 1, 0 }
}

define i32 @function_10009b84(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009b84:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009b98 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475304, i32* @lr, align 4
  %v2_10009ba4 = call i32 @function_1000aea4(i32 5, i32 %v2_10009b98)
  ret i32 %v2_10009ba4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009bb8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009bb8:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009bcc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475356, i32* @lr, align 4
  %v2_10009bd8 = call i32 @function_1000aea4(i32 2, i32 %v2_10009bcc)
  ret i32 %v2_10009bd8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009bec() local_unnamed_addr {
dec_label_pc_10009bec:
  %stack_var_-24 = alloca i32, align 4
  %v0_10009bf4 = load i32, i32* @r3, align 4
  store i32 %v0_10009bf4, i32* %stack_var_-24, align 4
  %v2_10009c00 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475408, i32* @lr, align 4
  %v2_10009c0c = call i32 @function_1000aea4(i32 3, i32 %v2_10009c00)
  ret i32 %v2_10009c0c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009c20(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009c20:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009c34 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475460, i32* @lr, align 4
  %v2_10009c40 = call i32 @function_1000aea4(i32 6, i32 %v2_10009c34)
  ret i32 %v2_10009c40

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009c54(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10009c54:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009c68 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268475520, i32* @lr, align 4
  %v2_10009c7c = call i32 @function_1000aea4(i32 15, i32 %v2_10009c68)
  ret i32 %v2_10009c7c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 15, { 0, 38, 25, 26, 6, 27, 7, 28, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 18, 19, 20, 21, 22, 23, 29, 24, 30, 31, 2, 32, 33, 3, 34, 35, 4, 36, 37, 5 }
}

define i32 @function_10009c90(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009c90:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009ca4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475568, i32* @lr, align 4
  %v2_10009cac = call i32 @function_1000aea4(i32 4, i32 %v2_10009ca4)
  ret i32 %v2_10009cac

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009cc0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009cc0:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009cd4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475624, i32* @lr, align 4
  %v2_10009ce4 = call i32 @function_1000aea4(i32 10, i32 %v2_10009cd4)
  ret i32 %v2_10009ce4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009cf8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10009cf8:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009d0c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268475688, i32* @lr, align 4
  %v2_10009d24 = call i32 @function_1000aea4(i32 12, i32 %v2_10009d0c)
  ret i32 %v2_10009d24

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009d38(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009d38:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009d4c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475744, i32* @lr, align 4
  %v2_10009d5c = call i32 @function_1000aea4(i32 9, i32 %v2_10009d4c)
  ret i32 %v2_10009d5c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 9, { 0, 6, 7, 8, 18, 19, 20, 9, 10, 21, 1, 22, 2, 23, 3, 11, 12, 13, 14, 15, 24, 16, 25, 4, 38, 26, 27, 28, 5, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 17 }
}

define i32 @function_10009d70(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10009d70:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009d84 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268475808, i32* @lr, align 4
  %v2_10009d9c = call i32 @function_1000aea4(i32 11, i32 %v2_10009d84)
  ret i32 %v2_10009d9c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009db0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009db0:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009dc4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268475868, i32* @lr, align 4
  %v2_10009dd8 = call i32 @function_1000aea4(i32 14, i32 %v2_10009dc4)
  ret i32 %v2_10009dd8

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009dec(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009dec:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009e00 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475920, i32* @lr, align 4
  %v2_10009e0c = call i32 @function_1000aea4(i32 1, i32 %v2_10009e00)
  ret i32 %v2_10009e0c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000aea4, { 2, 1, 0, 5, 6, 11, 7, 10, 9, 4, 3, 8 }
}

define i32 @function_10009e20(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009e20:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_10009e50, label %dec_label_pc_10009e3c

dec_label_pc_10009e3c:                            ; preds = %dec_label_pc_10009e20
  %v0_10009e3c = call i32 @function_100097b8()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009e48 = inttoptr i32 %v0_10009e3c to i32*
  store i32 22, i32* %v2_10009e48, align 4
  %v0_10009e5c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009e58

dec_label_pc_10009e50:                            ; preds = %dec_label_pc_10009e20
  %v0_10009e50 = call i32 @function_10009fa0()
  store i32 %v0_10009e50, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009e58

dec_label_pc_10009e58:                            ; preds = %dec_label_pc_10009e3c, %dec_label_pc_10009e50
  %v0_10009e5c = phi i32 [ %v0_10009e5c.pre, %dec_label_pc_10009e3c ], [ %v0_10009e50, %dec_label_pc_10009e50 ]
  ret i32 %v0_10009e5c

; uselistorder directives
  uselistorder label %dec_label_pc_10009e58, { 1, 0 }
}

define i32 @function_10009e6c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009e6c:
  store i32 268476036, i32* @lr, align 4
  %v3_10009e80 = call i32 @function_100098a0(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @function_10009e98(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009e98:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_10009e98 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_10009e98, label %dec_label_pc_10009ec4, label %dec_label_pc_10009eb4

dec_label_pc_10009eb4:                            ; preds = %dec_label_pc_10009e98
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_10009ec4, label %dec_label_pc_10009ebc

dec_label_pc_10009ebc:                            ; preds = %dec_label_pc_10009eb4
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_10009ef4.lr.ph, label %dec_label_pc_10009ec4

dec_label_pc_10009ec4:                            ; preds = %dec_label_pc_10009ebc, %dec_label_pc_10009eb4, %dec_label_pc_10009e98
  %v0_10009ec4 = call i32 @function_100097b8()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009ed0 = inttoptr i32 %v0_10009ec4 to i32*
  store i32 22, i32* %v2_10009ed0, align 4
  %v0_10009f64.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f60

dec_label_pc_10009ef4.lr.ph:                      ; preds = %dec_label_pc_10009ebc
  %v2_10009ee4 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10009ee4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_10009ef422 = add i32 %v2_10009ee4, 128
  %v3_10009ef423 = inttoptr i32 %v2_10009ef422 to i32*
  store i32 0, i32* %v3_10009ef423, align 4
  %v0_10009ef824 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009ef825 = add i32 %v0_10009ef824, -1
  store i32 %v1_10009ef825, i32* %r11.global-to-local, align 4
  %v1_10009efc26 = mul i32 %v1_10009ef825, 4
  %v1_10009f0027 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009f0028 = add i32 %v1_10009f0027, %v1_10009efc26
  store i32 %v2_10009f0028, i32* %r9.global-to-local, align 4
  %v0_10009f0429 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009f0430 = add i32 %v0_10009f0429, -1
  store i32 %v1_10009f0430, i32* %ctr.global-to-local, align 4
  %v2_10009f0431 = icmp eq i32 %v1_10009f0430, 0
  br i1 %v2_10009f0431, label %dec_label_pc_10009f08, label %dec_label_pc_10009ef4.dec_label_pc_10009ef4_crit_edge

dec_label_pc_10009ef4.dec_label_pc_10009ef4_crit_edge: ; preds = %dec_label_pc_10009ef4.lr.ph, %dec_label_pc_10009ef4.dec_label_pc_10009ef4_crit_edge
  %v2_10009f0032 = phi i32 [ %v2_10009f00, %dec_label_pc_10009ef4.dec_label_pc_10009ef4_crit_edge ], [ %v2_10009f0028, %dec_label_pc_10009ef4.lr.ph ]
  %v0_10009ef4.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10009ef4 = add i32 %v2_10009f0032, 4
  %v3_10009ef4 = inttoptr i32 %v2_10009ef4 to i32*
  store i32 %v0_10009ef4.pre, i32* %v3_10009ef4, align 4
  %v0_10009ef8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009ef8 = add i32 %v0_10009ef8, -1
  store i32 %v1_10009ef8, i32* %r11.global-to-local, align 4
  %v1_10009efc = mul i32 %v1_10009ef8, 4
  %v1_10009f00 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009f00 = add i32 %v1_10009f00, %v1_10009efc
  store i32 %v2_10009f00, i32* %r9.global-to-local, align 4
  %v0_10009f04 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009f04 = add i32 %v0_10009f04, -1
  store i32 %v1_10009f04, i32* %ctr.global-to-local, align 4
  %v2_10009f04 = icmp eq i32 %v1_10009f04, 0
  br i1 %v2_10009f04, label %dec_label_pc_10009f08, label %dec_label_pc_10009ef4.dec_label_pc_10009ef4_crit_edge

dec_label_pc_10009f08:                            ; preds = %dec_label_pc_10009ef4.dec_label_pc_10009ef4_crit_edge, %dec_label_pc_10009ef4.lr.ph
  %v0_10009f0c.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_10009f08 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_10009f08, i32* @r3, align 4
  store i32 %v0_10009f0c.pre, i32* @r4, align 4
  %v0_10009f10 = call i32 @function_10009fa0()
  %v1_10009f14 = icmp slt i32 %v0_10009f10, 0
  br i1 %v1_10009f14, label %dec_label_pc_10009f5c, label %dec_label_pc_10009f1c

dec_label_pc_10009f1c:                            ; preds = %dec_label_pc_10009f08
  %v0_10009f20 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009f28 = call i32 @function_10009f78(i32 ptrtoint (i32* @global_var_1001c418.335 to i32), i32 %v0_10009f20)
  %v2_10009f34 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268476236, i32* @lr, align 4
  %v4_10009f48 = call i32 @function_1000b730(i32 %v0_10009f20, i32* nonnull %stack_var_-296, i32 %v2_10009f34)
  %v1_10009f4c = icmp slt i32 %v4_10009f48, 0
  br i1 %v1_10009f4c, label %dec_label_pc_10009f5c, label %dec_label_pc_10009f54

dec_label_pc_10009f54:                            ; preds = %dec_label_pc_10009f1c
  %v3_10009f54 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_10009f54, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f60

dec_label_pc_10009f5c:                            ; preds = %dec_label_pc_10009f1c, %dec_label_pc_10009f08
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f60

dec_label_pc_10009f60:                            ; preds = %dec_label_pc_10009f54, %dec_label_pc_10009ec4, %dec_label_pc_10009f5c
  %v0_10009f64 = phi i32 [ %v3_10009f54, %dec_label_pc_10009f54 ], [ %v0_10009f64.pre, %dec_label_pc_10009ec4 ], [ -1, %dec_label_pc_10009f5c ]
  ret i32 %v0_10009f64

; uselistorder directives
  uselistorder i32 %v1_10009f04, { 1, 0 }
  uselistorder i32 %v2_10009f00, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009f60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009ef4.dec_label_pc_10009ef4_crit_edge, { 1, 0 }
}

define i32 @function_10009f78(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009f78:
  %v1_10009f78 = add i32 %arg2, -1
  %v1_10009f7c = call i32 @__asm_rlwinm(i32 %v1_10009f78, i32 29, i32 3, i32 29)
  %v1_10009f80 = urem i32 %v1_10009f78, 32
  %v2_10009f84 = add i32 %v1_10009f7c, %arg1
  %v3_10009f84 = inttoptr i32 %v2_10009f84 to i32*
  %v4_10009f84 = load i32, i32* %v3_10009f84, align 4
  %v3_10009f8c = shl i32 1, %v1_10009f80
  %v2_10009f90 = and i32 %v4_10009f84, %v3_10009f8c
  %v2_10009f94 = icmp ne i32 %v2_10009f90, 0
  %v5_10009f98 = zext i1 %v2_10009f94 to i32
  ret i32 %v5_10009f98
}

define i32 @function_10009fa0() local_unnamed_addr {
dec_label_pc_10009fa0:
  %r0.global-to-local = alloca i32, align 4
  %v0_10009fa0 = load i32, i32* @r4, align 4
  %v1_10009fa0 = add i32 %v0_10009fa0, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10009fa8 = call i32 @__asm_rlwinm(i32 %v1_10009fa0, i32 29, i32 3, i32 29)
  %v1_10009fac = urem i32 %v1_10009fa0, 32
  %v1_10009fb0 = load i32, i32* @r3, align 4
  %v2_10009fb0 = add i32 %v1_10009fb0, %v1_10009fa8
  %v3_10009fb0 = inttoptr i32 %v2_10009fb0 to i32*
  %v4_10009fb0 = load i32, i32* %v3_10009fb0, align 4
  %v0_10009fb4 = load i32, i32* %r0.global-to-local, align 4
  %v3_10009fb4 = shl i32 %v0_10009fb4, %v1_10009fac
  store i32 %v3_10009fb4, i32* %r0.global-to-local, align 4
  %v2_10009fb8 = or i32 %v3_10009fb4, %v4_10009fb0
  store i32 %v2_10009fb8, i32* %v3_10009fb0, align 4
  ret i32 0
}

define i32 @function_10009fc8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009fc8:
  %v1_10009fc8 = add i32 %arg2, -1
  %v1_10009fd0 = call i32 @__asm_rlwinm(i32 %v1_10009fc8, i32 29, i32 3, i32 29)
  %v1_10009fd4 = urem i32 %v1_10009fc8, 32
  %v2_10009fd8 = add i32 %v1_10009fd0, %arg1
  %v3_10009fd8 = inttoptr i32 %v2_10009fd8 to i32*
  %v4_10009fd8 = load i32, i32* %v3_10009fd8, align 4
  %v3_10009fdc = shl i32 -2, %v1_10009fd4
  %v4_10009fdc = sub nsw i32 32, %v1_10009fd4
  %v5_10009fdc = lshr i32 -2, %v4_10009fdc
  %v6_10009fdc = or i32 %v5_10009fdc, %v3_10009fdc
  %v2_10009fe0 = and i32 %v6_10009fdc, %v4_10009fd8
  store i32 %v2_10009fe0, i32* %v3_10009fd8, align 4
  ret i32 0
}

define i32 @function_10009ff0() local_unnamed_addr {
dec_label_pc_10009ff0:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10009ff0 = load i32, i32* @r3, align 4
  %v3_10009ff0 = icmp eq i32 %v0_10009ff0, 0
  br i1 %v3_10009ff0, label %dec_label_pc_1000a00c.thread, label %dec_label_pc_1000a00c

dec_label_pc_1000a00c.thread:                     ; preds = %dec_label_pc_10009ff0
  br label %dec_label_pc_1000a018

dec_label_pc_1000a00c:                            ; preds = %dec_label_pc_10009ff0
  %v3_1000a010 = icmp ugt i32 %v0_10009ff0, -8
  br i1 %v3_1000a010, label %dec_label_pc_1000a120, label %dec_label_pc_1000a018

dec_label_pc_1000a018:                            ; preds = %dec_label_pc_1000a00c.thread, %dec_label_pc_1000a00c
  %v0_1000a01c16 = phi i32 [ 1, %dec_label_pc_1000a00c.thread ], [ %v0_10009ff0, %dec_label_pc_1000a00c ]
  %v1_1000a01c = add i32 %v0_1000a01c16, 4
  store i32 ptrtoint (i32* @global_var_1001c2c8.336 to i32), i32* @r29, align 4
  store i32 %v1_1000a01c, i32* %stack_var_-40, align 4
  %v0_1000a02c = call i32 @function_1000ab4c()
  %v2_1000a034 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1000a03c = call i32 @function_1000a3e8(i32* inttoptr (i32 268550640 to i32*), i32 %v2_1000a034)
  store i32 %v3_1000a03c, i32* %r31.global-to-local, align 4
  %v0_1000a048 = call i32 @function_1000ab4c()
  %v3_1000a04c = icmp eq i32 %v3_1000a03c, 0
  br i1 %v3_1000a04c, label %dec_label_pc_1000a054, label %dec_label_pc_1000a104.thread

dec_label_pc_1000a104.thread:                     ; preds = %dec_label_pc_1000a018
  br label %dec_label_pc_1000a118

dec_label_pc_1000a054:                            ; preds = %dec_label_pc_1000a018
  %v3_1000a058 = load i32, i32* @global_var_1001c24c.339, align 4
  store i32 %v3_1000a058, i32* %r31.global-to-local, align 4
  %v3_1000a05c = load i32, i32* %stack_var_-40, align 4
  %v2_1000a060 = icmp ult i32 %v3_1000a05c, %v3_1000a058
  br i1 %v2_1000a060, label %dec_label_pc_1000a078, label %dec_label_pc_1000a068

dec_label_pc_1000a068:                            ; preds = %dec_label_pc_1000a054
  %v1_1000a06c = sub i32 0, %v3_1000a058
  %v2_1000a068 = add i32 %v3_1000a058, -1
  %v1_1000a070 = add i32 %v2_1000a068, %v3_1000a05c
  %v2_1000a074 = and i32 %v1_1000a070, %v1_1000a06c
  store i32 %v2_1000a074, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a078

dec_label_pc_1000a078:                            ; preds = %dec_label_pc_1000a054, %dec_label_pc_1000a068
  %v0_1000a084 = call i32 @function_1000ab4c()
  %v0_1000a088 = load i32, i32* %r31.global-to-local, align 4
  store i32 268476560, i32* @lr, align 4
  %v1_1000a08c = call i32 @function_1000b36c(i32 %v0_1000a088)
  %v3_1000a090 = icmp eq i32 %v1_1000a08c, -1
  br i1 %v3_1000a090, label %dec_label_pc_1000a0b0, label %dec_label_pc_1000a098

dec_label_pc_1000a098:                            ; preds = %dec_label_pc_1000a078
  %v1_1000a098 = add i32 %v1_1000a08c, 3
  %v1_1000a09c = call i32 @__asm_rlwinm(i32 %v1_1000a098, i32 0, i32 0, i32 29)
  store i32 %v1_1000a09c, i32* @r30, align 4
  %v4_1000a0a0 = icmp eq i32 %v1_1000a09c, %v1_1000a08c
  br i1 %v4_1000a0a0, label %dec_label_pc_1000a0b0, label %dec_label_pc_1000a0a8

dec_label_pc_1000a0a8:                            ; preds = %dec_label_pc_1000a098
  %v2_1000a0a8 = sub i32 %v1_1000a09c, %v1_1000a08c
  store i32 268476592, i32* @lr, align 4
  %v1_1000a0ac = call i32 @function_1000b36c(i32 %v2_1000a0a8)
  br label %dec_label_pc_1000a0b0

dec_label_pc_1000a0b0:                            ; preds = %dec_label_pc_1000a098, %dec_label_pc_1000a078, %dec_label_pc_1000a0a8
  %v0_1000a0b8 = call i32 @function_1000ab4c()
  %v0_1000a0bc = load i32, i32* @r30, align 4
  %v3_1000a0bc = icmp eq i32 %v0_1000a0bc, -1
  br i1 %v3_1000a0bc, label %dec_label_pc_1000a120, label %dec_label_pc_1000a104

dec_label_pc_1000a104:                            ; preds = %dec_label_pc_1000a0b0
  store i32 ptrtoint (i32* @global_var_1001c2c8.336 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001c1f0 to i32), i32* @r29, align 4
  %v0_1000a0d8 = call i32 @function_1000ab4c()
  %v0_1000a0dc = load i32, i32* @r31, align 4
  %v0_1000a0e0 = load i32, i32* @r30, align 4
  %v0_1000a0e4 = load i32, i32* @r29, align 4
  store i32 268476652, i32* @lr, align 4
  %v3_1000a0e8 = inttoptr i32 %v0_1000a0e4 to i32*
  %v4_1000a0e8 = call i32 @function_1000a56c(i32* %v3_1000a0e8, i32 %v0_1000a0e0, i32 %v0_1000a0dc)
  %v0_1000a0ec = load i32, i32* @r29, align 4
  %v2_1000a0f4 = inttoptr i32 %v0_1000a0ec to i32*
  %v3_1000a0f4 = call i32 @function_1000a3e8(i32* %v2_1000a0f4, i32 %v2_1000a034)
  store i32 %v3_1000a0f4, i32* %r31.global-to-local, align 4
  %v0_1000a100 = call i32 @function_1000ab4c()
  %v3_1000a104 = icmp eq i32 %v3_1000a0f4, 0
  br i1 %v3_1000a104, label %dec_label_pc_1000a118.thread, label %dec_label_pc_1000a118

dec_label_pc_1000a118.thread:                     ; preds = %dec_label_pc_1000a104
  br label %dec_label_pc_1000a120

dec_label_pc_1000a118:                            ; preds = %dec_label_pc_1000a104, %dec_label_pc_1000a104.thread
  %v0_1000a118.pr6 = phi i32 [ %v3_1000a03c, %dec_label_pc_1000a104.thread ], [ %v3_1000a0f4, %dec_label_pc_1000a104 ]
  %v3_1000a10c = load i32, i32* %stack_var_-40, align 4
  %v2_1000a110 = inttoptr i32 %v0_1000a118.pr6 to i32*
  store i32 %v3_1000a10c, i32* %v2_1000a110, align 4
  %v0_1000a114 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a114 = add i32 %v0_1000a114, 4
  store i32 %v1_1000a114, i32* @r31, align 4
  %v3_1000a118 = icmp eq i32 %v1_1000a114, 0
  br i1 %v3_1000a118, label %dec_label_pc_1000a120, label %dec_label_pc_1000a130

dec_label_pc_1000a120:                            ; preds = %dec_label_pc_1000a118.thread, %dec_label_pc_1000a118, %dec_label_pc_1000a0b0, %dec_label_pc_1000a00c
  %v0_1000a120 = call i32 @function_100097b8()
  %v2_1000a128 = inttoptr i32 %v0_1000a120 to i32*
  store i32 12, i32* %v2_1000a128, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000a130

dec_label_pc_1000a130:                            ; preds = %dec_label_pc_1000a118, %dec_label_pc_1000a120
  %v0_1000a134 = phi i32 [ %v1_1000a114, %dec_label_pc_1000a118 ], [ 0, %dec_label_pc_1000a120 ]
  ret i32 %v0_1000a134

; uselistorder directives
  uselistorder i32 %v1_1000a114, { 1, 0, 2 }
  uselistorder i32 %v1_1000a09c, { 1, 0, 2 }
  uselistorder i32 %v1_1000a08c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000a058, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000a03c, { 1, 0, 2 }
  uselistorder i32 %v0_10009ff0, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_1000a130, { 1, 0 }
  uselistorder label %dec_label_pc_1000a120, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000a0b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a078, { 1, 0 }
  uselistorder label %dec_label_pc_1000a018, { 1, 0 }
}

define i32 @function_1000a148(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a148:
  %v3_1000a148 = icmp eq i32 %arg1, 0
  %v2_1000a158 = mul i32 %arg2, %arg1
  store i32 %v2_1000a158, i32* @r31, align 4
  br i1 %v3_1000a148, label %dec_label_pc_1000a184, label %dec_label_pc_1000a164

dec_label_pc_1000a164:                            ; preds = %dec_label_pc_1000a148
  %v2_1000a164 = udiv i32 %v2_1000a158, %arg1
  store i32 0, i32* @r30, align 4
  %v4_1000a16c = icmp eq i32 %v2_1000a164, %arg2
  br i1 %v4_1000a16c, label %dec_label_pc_1000a184, label %dec_label_pc_1000a174

dec_label_pc_1000a174:                            ; preds = %dec_label_pc_1000a164
  %v0_1000a174 = call i32 @function_100097b8()
  %v2_1000a17c = inttoptr i32 %v0_1000a174 to i32*
  store i32 12, i32* %v2_1000a17c, align 4
  br label %dec_label_pc_1000a1a0

dec_label_pc_1000a184:                            ; preds = %dec_label_pc_1000a164, %dec_label_pc_1000a148
  store i32 %v2_1000a158, i32* @r3, align 4
  store i32 268476812, i32* @lr, align 4
  %v0_1000a188 = call i32 @function_10009ff0()
  %v0_1000a18c = load i32, i32* @r31, align 4
  store i32 %v0_1000a188, i32* @r30, align 4
  %v3_1000a190 = icmp eq i32 %v0_1000a188, 0
  br i1 %v3_1000a190, label %dec_label_pc_1000a1a0, label %dec_label_pc_1000a19c

dec_label_pc_1000a19c:                            ; preds = %dec_label_pc_1000a184
  store i32 268476832, i32* @lr, align 4
  %v3_1000a19c = call i32 @function_100098a0(i32 0, i32 %v0_1000a18c, i32 %v0_1000a18c)
  br label %dec_label_pc_1000a1a0

dec_label_pc_1000a1a0:                            ; preds = %dec_label_pc_1000a184, %dec_label_pc_1000a174, %dec_label_pc_1000a19c
  %v0_1000a1a4 = load i32, i32* @r30, align 4
  ret i32 %v0_1000a1a4

; uselistorder directives
  uselistorder i32 %v0_1000a18c, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a1a0, { 2, 0, 1 }
}

define i32 @function_1000a1b8() local_unnamed_addr {
dec_label_pc_1000a1b8:
  %v0_1000a1b8 = load i32, i32* @r3, align 4
  %v3_1000a1b8 = icmp eq i32 %v0_1000a1b8, 0
  br i1 %v3_1000a1b8, label %dec_label_pc_1000a2a4, label %dec_label_pc_1000a1d0

dec_label_pc_1000a1d0:                            ; preds = %dec_label_pc_1000a1b8
  %v1_1000a1d4 = add i32 %v0_1000a1b8, -4
  %v2_1000a1d4 = inttoptr i32 %v1_1000a1d4 to i32*
  %v3_1000a1d4 = load i32, i32* %v2_1000a1d4, align 4
  store i32 %v3_1000a1d4, i32* @r28, align 4
  %v0_1000a1e8 = call i32 @function_1000ab4c()
  %v0_1000a1f0 = load i32, i32* @r28, align 4
  store i32 268476924, i32* @lr, align 4
  %v4_1000a1f8 = call i32 @function_1000a56c(i32* nonnull @global_var_1001c1f0, i32 %v1_1000a1d4, i32 %v0_1000a1f0)
  %v3_1000a200 = load i32, i32* @global_var_1001c24c.339, align 4
  store i32 %v4_1000a1f8, i32* @r29, align 4
  %v1_1000a208 = inttoptr i32 %v4_1000a1f8 to i32*
  %v2_1000a208 = load i32, i32* %v1_1000a208, align 4
  store i32 %v2_1000a208, i32* @r27, align 4
  %v1_1000a20c = mul i32 %v3_1000a200, 8
  %v2_1000a210 = icmp ult i32 %v2_1000a208, %v1_1000a20c
  br i1 %v2_1000a210, label %dec_label_pc_1000a244, label %dec_label_pc_1000a218

dec_label_pc_1000a218:                            ; preds = %dec_label_pc_1000a1d0
  store i32 ptrtoint (i32* @global_var_1001c498.340 to i32), i32* @r28, align 4
  %v0_1000a228 = call i32 @function_1000ab4c()
  store i32 268476980, i32* @lr, align 4
  %v1_1000a230 = call i32 @function_1000b36c(i32 0)
  %v0_1000a234 = load i32, i32* @r31, align 4
  %v4_1000a234 = icmp eq i32 %v0_1000a234, %v1_1000a230
  br i1 %v4_1000a234, label %dec_label_pc_1000a24c, label %dec_label_pc_1000a23c

dec_label_pc_1000a23c:                            ; preds = %dec_label_pc_1000a218
  %v0_1000a240 = call i32 @function_1000ab4c()
  br label %dec_label_pc_1000a244

dec_label_pc_1000a244:                            ; preds = %dec_label_pc_1000a1d0, %dec_label_pc_1000a23c
  br label %dec_label_pc_1000a2a0

dec_label_pc_1000a24c:                            ; preds = %dec_label_pc_1000a218
  %v0_1000a24c = load i32, i32* @r29, align 4
  %v1_1000a24c = add i32 %v0_1000a24c, 4
  %v2_1000a24c = inttoptr i32 %v1_1000a24c to i32*
  %v3_1000a24c = load i32, i32* %v2_1000a24c, align 4
  %v3_1000a250 = icmp eq i32 %v3_1000a24c, 0
  br i1 %v3_1000a250, label %dec_label_pc_1000a260, label %dec_label_pc_1000a258

dec_label_pc_1000a258:                            ; preds = %dec_label_pc_1000a24c
  %v1_1000a258 = add i32 %v0_1000a24c, 8
  %v2_1000a258 = inttoptr i32 %v1_1000a258 to i32*
  %v3_1000a258 = load i32, i32* %v2_1000a258, align 4
  %v2_1000a25c = add i32 %v3_1000a24c, 8
  %v3_1000a25c = inttoptr i32 %v2_1000a25c to i32*
  store i32 %v3_1000a258, i32* %v3_1000a25c, align 4
  %v0_1000a260.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000a260

dec_label_pc_1000a260:                            ; preds = %dec_label_pc_1000a24c, %dec_label_pc_1000a258
  %v0_1000a260 = phi i32 [ %v0_1000a24c, %dec_label_pc_1000a24c ], [ %v0_1000a260.pre, %dec_label_pc_1000a258 ]
  %v1_1000a260 = add i32 %v0_1000a260, 8
  %v2_1000a260 = inttoptr i32 %v1_1000a260 to i32*
  %v3_1000a260 = load i32, i32* %v2_1000a260, align 4
  %v1_1000a264 = add i32 %v0_1000a260, 4
  %v2_1000a264 = inttoptr i32 %v1_1000a264 to i32*
  %v3_1000a264 = load i32, i32* %v2_1000a264, align 4
  %v3_1000a268 = icmp eq i32 %v3_1000a260, 0
  br i1 %v3_1000a268, label %dec_label_pc_1000a278, label %dec_label_pc_1000a270

dec_label_pc_1000a270:                            ; preds = %dec_label_pc_1000a260
  %v2_1000a270 = add i32 %v3_1000a260, 4
  %v3_1000a270 = inttoptr i32 %v2_1000a270 to i32*
  store i32 %v3_1000a264, i32* %v3_1000a270, align 4
  br label %dec_label_pc_1000a27c

dec_label_pc_1000a278:                            ; preds = %dec_label_pc_1000a260
  store i32 %v3_1000a264, i32* @global_var_1001c1f0, align 4
  br label %dec_label_pc_1000a27c

dec_label_pc_1000a27c:                            ; preds = %dec_label_pc_1000a270, %dec_label_pc_1000a278
  %v0_1000a284 = call i32 @function_1000ab4c()
  %v0_1000a288 = load i32, i32* @r27, align 4
  %v1_1000a288 = load i32, i32* @r29, align 4
  %v0_1000a290 = load i32, i32* @r31, align 4
  %v2_1000a288 = sub i32 12, %v0_1000a288
  %v1_1000a28c = add i32 %v2_1000a288, %v1_1000a288
  %v2_1000a290 = sub i32 %v1_1000a28c, %v0_1000a290
  store i32 268477080, i32* @lr, align 4
  %v1_1000a294 = call i32 @function_1000b36c(i32 %v2_1000a290)
  br label %dec_label_pc_1000a2a0

dec_label_pc_1000a2a0:                            ; preds = %dec_label_pc_1000a244, %dec_label_pc_1000a27c
  %v0_1000a2a0 = call i32 @function_1000ab4c()
  br label %dec_label_pc_1000a2a4

dec_label_pc_1000a2a4:                            ; preds = %dec_label_pc_1000a1b8, %dec_label_pc_1000a2a0
  %.0 = phi i32 [ undef, %dec_label_pc_1000a1b8 ], [ %v0_1000a2a0, %dec_label_pc_1000a2a0 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1000a260, { 1, 0 }
  uselistorder i32 (i32)* @function_1000b36c, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a2a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a2a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a27c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a260, { 1, 0 }
  uselistorder label %dec_label_pc_1000a244, { 1, 0 }
}

define i32 @function_1000a2b8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a2b8:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v3_1000a2b8 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_1000a2b8, label %dec_label_pc_1000a2d4, label %dec_label_pc_1000a2e0

dec_label_pc_1000a2d4:                            ; preds = %dec_label_pc_1000a2b8
  store i32 ptrtoint ([3 x i8]* @global_var_1000a2d8.344 to i32), i32* @lr, align 4
  %v0_1000a2d4 = call i32 @function_1000a1b8()
  br label %dec_label_pc_1000a2ec

dec_label_pc_1000a2e0:                            ; preds = %dec_label_pc_1000a2b8
  %v3_1000a2e0 = icmp eq i32 %arg1, 0
  br i1 %v3_1000a2e0, label %dec_label_pc_1000a2ec, label %dec_label_pc_1000a2f8

dec_label_pc_1000a2ec:                            ; preds = %dec_label_pc_1000a2e0, %dec_label_pc_1000a2d4
  %storemerge = phi i32 [ 0, %dec_label_pc_1000a2d4 ], [ %arg2, %dec_label_pc_1000a2e0 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268477168, i32* @lr, align 4
  %v0_1000a2ec = call i32 @function_10009ff0()
  store i32 %v0_1000a2ec, i32* @r28, align 4
  br label %dec_label_pc_1000a3d0

dec_label_pc_1000a2f8:                            ; preds = %dec_label_pc_1000a2e0
  %v1_1000a2f8 = add i32 %arg2, 7
  %v1_1000a2fc = add i32 %arg1, -4
  store i32 %v1_1000a2fc, i32* %r27.global-to-local, align 4
  %v1_1000a300 = call i32 @__asm_rlwinm(i32 %v1_1000a2f8, i32 0, i32 0, i32 29)
  store i32 %v1_1000a300, i32* @r31, align 4
  %v2_1000a304 = inttoptr i32 %v1_1000a2fc to i32*
  %v3_1000a304 = load i32, i32* %v2_1000a304, align 4
  store i32 %v3_1000a304, i32* @r30, align 4
  %v2_1000a308 = icmp ugt i32 %v1_1000a300, 11
  br i1 %v2_1000a308, label %dec_label_pc_1000a314, label %dec_label_pc_1000a310

dec_label_pc_1000a310:                            ; preds = %dec_label_pc_1000a2f8
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_1000a314

dec_label_pc_1000a314:                            ; preds = %dec_label_pc_1000a2f8, %dec_label_pc_1000a310
  %v0_1000a394 = phi i32 [ %v1_1000a300, %dec_label_pc_1000a2f8 ], [ 12, %dec_label_pc_1000a310 ]
  %v3_1000a314 = icmp ugt i32 %v0_1000a394, %v3_1000a304
  br i1 %v3_1000a314, label %dec_label_pc_1000a31c, label %dec_label_pc_1000a394

dec_label_pc_1000a31c:                            ; preds = %dec_label_pc_1000a314
  store i32 ptrtoint (i32* @global_var_1001c2c8.336 to i32), i32* @r29, align 4
  %v0_1000a328 = call i32 @function_1000ab4c()
  %v0_1000a330 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a330 = load i32, i32* @r30, align 4
  %v2_1000a330 = add i32 %v1_1000a330, %v0_1000a330
  %v1_1000a334 = load i32, i32* @r31, align 4
  %v2_1000a334 = sub i32 %v1_1000a334, %v1_1000a330
  %v4_1000a33c = call i32 @function_1000a488(i32* nonnull @global_var_1001c1f0, i32 %v2_1000a330, i32 %v2_1000a334)
  store i32 %v4_1000a33c, i32* %r27.global-to-local, align 4
  %v0_1000a348 = call i32 @function_1000ab4c()
  %v3_1000a34c = icmp eq i32 %v4_1000a33c, 0
  br i1 %v3_1000a34c, label %dec_label_pc_1000a360, label %dec_label_pc_1000a354

dec_label_pc_1000a354:                            ; preds = %dec_label_pc_1000a31c
  %v0_1000a354 = load i32, i32* @r30, align 4
  %v2_1000a354 = add i32 %v0_1000a354, %v4_1000a33c
  %v1_1000a358 = load i32, i32* @r28, align 4
  %v2_1000a358 = add i32 %v1_1000a358, -4
  %v3_1000a358 = inttoptr i32 %v2_1000a358 to i32*
  store i32 %v2_1000a354, i32* %v3_1000a358, align 4
  br label %dec_label_pc_1000a3d0

dec_label_pc_1000a360:                            ; preds = %dec_label_pc_1000a31c
  %v0_1000a360 = load i32, i32* @r31, align 4
  %v1_1000a360 = add i32 %v0_1000a360, -4
  store i32 %v1_1000a360, i32* @r3, align 4
  store i32 268477288, i32* @lr, align 4
  %v0_1000a364 = call i32 @function_10009ff0()
  store i32 %v0_1000a364, i32* @r3, align 4
  store i32 %v0_1000a364, i32* @r31, align 4
  %v3_1000a368 = icmp eq i32 %v0_1000a364, 0
  br i1 %v3_1000a368, label %dec_label_pc_1000a370, label %dec_label_pc_1000a378

dec_label_pc_1000a370:                            ; preds = %dec_label_pc_1000a360
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000a3d0

dec_label_pc_1000a378:                            ; preds = %dec_label_pc_1000a360
  %v0_1000a378 = load i32, i32* @r28, align 4
  store i32 %v0_1000a378, i32* @r4, align 4
  %v0_1000a37c = load i32, i32* @r30, align 4
  %v1_1000a37c = add i32 %v0_1000a37c, -4
  store i32 %v1_1000a37c, i32* @r5, align 4
  store i32 268477316, i32* @lr, align 4
  %v0_1000a380 = call i32 @function_1000b5a0()
  %v0_1000a384 = load i32, i32* @r28, align 4
  store i32 %v0_1000a384, i32* @r3, align 4
  store i32 268477324, i32* @lr, align 4
  %v0_1000a388 = call i32 @function_1000a1b8()
  %v0_1000a38c = load i32, i32* @r31, align 4
  store i32 %v0_1000a38c, i32* @r28, align 4
  br label %dec_label_pc_1000a3d0

dec_label_pc_1000a394:                            ; preds = %dec_label_pc_1000a314
  %v1_1000a394 = add i32 %v0_1000a394, 28
  %v3_1000a398 = icmp ugt i32 %v1_1000a394, %v3_1000a304
  br i1 %v3_1000a398, label %dec_label_pc_1000a3d0, label %dec_label_pc_1000a3a0

dec_label_pc_1000a3a0:                            ; preds = %dec_label_pc_1000a394
  store i32 ptrtoint (i32* @global_var_1001c2c8.336 to i32), i32* @r29, align 4
  %v0_1000a3ac = call i32 @function_1000ab4c()
  %v0_1000a3b4 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a3b4 = load i32, i32* @r31, align 4
  %v2_1000a3b4 = add i32 %v1_1000a3b4, %v0_1000a3b4
  %v1_1000a3b8 = load i32, i32* @r30, align 4
  %v2_1000a3b8 = sub i32 %v1_1000a3b8, %v1_1000a3b4
  store i32 268477380, i32* @lr, align 4
  %v4_1000a3c0 = call i32 @function_1000a56c(i32* nonnull @global_var_1001c1f0, i32 %v2_1000a3b4, i32 %v2_1000a3b8)
  %v0_1000a3c8 = call i32 @function_1000ab4c()
  %v0_1000a3cc = load i32, i32* @r31, align 4
  %v1_1000a3cc = load i32, i32* @r28, align 4
  %v2_1000a3cc = add i32 %v1_1000a3cc, -4
  %v3_1000a3cc = inttoptr i32 %v2_1000a3cc to i32*
  store i32 %v0_1000a3cc, i32* %v3_1000a3cc, align 4
  br label %dec_label_pc_1000a3d0

dec_label_pc_1000a3d0:                            ; preds = %dec_label_pc_1000a394, %dec_label_pc_1000a378, %dec_label_pc_1000a370, %dec_label_pc_1000a354, %dec_label_pc_1000a2ec, %dec_label_pc_1000a3a0
  %v0_1000a3d4 = load i32, i32* @r28, align 4
  ret i32 %v0_1000a3d4

; uselistorder directives
  uselistorder i32 %v1_1000a3b4, { 1, 0 }
  uselistorder i32 %v4_1000a33c, { 1, 0, 2 }
  uselistorder i32 %v1_1000a330, { 1, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1001c1f0, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @function_10009ff0, { 2, 1, 0, 5, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 4, 3 }
  uselistorder i32 ()* @function_1000a1b8, { 4, 3, 7, 6, 5, 11, 10, 9, 8, 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000a3d0, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000a314, { 1, 0 }
}

define i32 @function_1000a3e8(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a3e8:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_1000a3e8 = inttoptr i32 %arg2 to i32*
  %v2_1000a3e8 = load i32, i32* %v1_1000a3e8, align 4
  %v1_1000a3ec = add i32 %v2_1000a3e8, 3
  store i32 %v1_1000a3ec, i32* %r9.global-to-local, align 4
  %v1_1000a3f0 = call i32 @__asm_rlwinm(i32 %v1_1000a3ec, i32 0, i32 0, i32 29)
  %v2_1000a3f4 = icmp ugt i32 %v1_1000a3f0, 11
  br i1 %v2_1000a3f4, label %dec_label_pc_1000a478.preheader, label %dec_label_pc_1000a3fc

dec_label_pc_1000a3fc:                            ; preds = %dec_label_pc_1000a3e8
  br label %dec_label_pc_1000a478.preheader

dec_label_pc_1000a478.preheader:                  ; preds = %dec_label_pc_1000a3e8, %dec_label_pc_1000a3fc
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000a3fc ], [ %v1_1000a3f0, %dec_label_pc_1000a3e8 ]
  %v0_1000a45c = phi i32 [ 12, %dec_label_pc_1000a3fc ], [ %v1_1000a3f0, %dec_label_pc_1000a3e8 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_1000a4785 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000a4785, label %dec_label_pc_1000a480, label %dec_label_pc_1000a408

dec_label_pc_1000a408:                            ; preds = %dec_label_pc_1000a478.preheader, %dec_label_pc_1000a474
  %v0_1000a474 = phi i32 [ %storemerge, %dec_label_pc_1000a474 ], [ %storemerge2, %dec_label_pc_1000a478.preheader ]
  %v1_1000a408 = inttoptr i32 %v0_1000a474 to i32*
  %v2_1000a408 = load i32, i32* %v1_1000a408, align 4
  store i32 %v2_1000a408, i32* %r10.global-to-local, align 4
  %v2_1000a40c = icmp ult i32 %v2_1000a408, %v0_1000a45c
  br i1 %v2_1000a40c, label %dec_label_pc_1000a474, label %dec_label_pc_1000a414

dec_label_pc_1000a414:                            ; preds = %dec_label_pc_1000a408
  %v1_1000a414 = add i32 %v0_1000a45c, 44
  %v2_1000a418 = icmp ult i32 %v2_1000a408, %v1_1000a414
  br i1 %v2_1000a418, label %dec_label_pc_1000a420, label %dec_label_pc_1000a45c

dec_label_pc_1000a420:                            ; preds = %dec_label_pc_1000a414
  %v1_1000a420 = add i32 %v0_1000a474, 4
  %v2_1000a420 = inttoptr i32 %v1_1000a420 to i32*
  %v3_1000a420 = load i32, i32* %v2_1000a420, align 4
  store i32 %v3_1000a420, i32* %r11.global-to-local, align 4
  %v3_1000a424 = icmp eq i32 %v3_1000a420, 0
  br i1 %v3_1000a424, label %dec_label_pc_1000a434, label %dec_label_pc_1000a42c

dec_label_pc_1000a42c:                            ; preds = %dec_label_pc_1000a420
  %v1_1000a42c = add i32 %v0_1000a474, 8
  %v2_1000a42c = inttoptr i32 %v1_1000a42c to i32*
  %v3_1000a42c = load i32, i32* %v2_1000a42c, align 4
  %v2_1000a430 = add i32 %v3_1000a420, 8
  %v3_1000a430 = inttoptr i32 %v2_1000a430 to i32*
  store i32 %v3_1000a42c, i32* %v3_1000a430, align 4
  %v0_1000a434.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000a450.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a434

dec_label_pc_1000a434:                            ; preds = %dec_label_pc_1000a420, %dec_label_pc_1000a42c
  %v0_1000a450 = phi i32 [ %v2_1000a408, %dec_label_pc_1000a420 ], [ %v0_1000a450.pre, %dec_label_pc_1000a42c ]
  %v0_1000a434 = phi i32 [ %v0_1000a474, %dec_label_pc_1000a420 ], [ %v0_1000a434.pre, %dec_label_pc_1000a42c ]
  %v1_1000a434 = add i32 %v0_1000a434, 8
  %v2_1000a434 = inttoptr i32 %v1_1000a434 to i32*
  %v3_1000a434 = load i32, i32* %v2_1000a434, align 4
  %v1_1000a438 = add i32 %v0_1000a434, 4
  %v2_1000a438 = inttoptr i32 %v1_1000a438 to i32*
  %v3_1000a438 = load i32, i32* %v2_1000a438, align 4
  %v3_1000a43c = icmp eq i32 %v3_1000a434, 0
  store i32 %v0_1000a450, i32* %r11.global-to-local, align 4
  br i1 %v3_1000a43c, label %dec_label_pc_1000a450, label %dec_label_pc_1000a444

dec_label_pc_1000a444:                            ; preds = %dec_label_pc_1000a434
  %v2_1000a448 = add i32 %v3_1000a434, 4
  %v3_1000a448 = inttoptr i32 %v2_1000a448 to i32*
  store i32 %v3_1000a438, i32* %v3_1000a448, align 4
  br label %dec_label_pc_1000a464

dec_label_pc_1000a450:                            ; preds = %dec_label_pc_1000a434
  store i32 %v3_1000a438, i32* %arg1, align 4
  br label %dec_label_pc_1000a464

dec_label_pc_1000a45c:                            ; preds = %dec_label_pc_1000a414
  %v2_1000a45c = sub i32 %v2_1000a408, %v0_1000a45c
  store i32 %v2_1000a45c, i32* %v1_1000a408, align 4
  br label %dec_label_pc_1000a464

dec_label_pc_1000a464:                            ; preds = %dec_label_pc_1000a450, %dec_label_pc_1000a444, %dec_label_pc_1000a45c
  %v0_1000a464 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a464 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000a464 = sub i32 %v1_1000a464, %v0_1000a464
  store i32 %v2_1000a464, i32* %r9.global-to-local, align 4
  %v0_1000a468 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000a468, i32* %v1_1000a3e8, align 4
  %v0_1000a46c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a46c = add i32 %v0_1000a46c, 12
  ret i32 %v1_1000a46c

dec_label_pc_1000a474:                            ; preds = %dec_label_pc_1000a408
  %v1_1000a474 = add i32 %v0_1000a474, 4
  %storemerge.in = inttoptr i32 %v1_1000a474 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_1000a478 = icmp eq i32 %storemerge, 0
  br i1 %v3_1000a478, label %dec_label_pc_1000a478.dec_label_pc_1000a480_crit_edge, label %dec_label_pc_1000a408

dec_label_pc_1000a478.dec_label_pc_1000a480_crit_edge: ; preds = %dec_label_pc_1000a474
  br label %dec_label_pc_1000a480

dec_label_pc_1000a480:                            ; preds = %dec_label_pc_1000a478.dec_label_pc_1000a480_crit_edge, %dec_label_pc_1000a478.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000a434, { 1, 0 }
  uselistorder i32 %v2_1000a408, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000a474, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000a45c, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000a464, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a434, { 1, 0 }
  uselistorder label %dec_label_pc_1000a408, { 1, 0 }
  uselistorder label %dec_label_pc_1000a478.preheader, { 1, 0 }
}

define i32 @function_1000a488(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a488:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000a488 = load i32, i32* %arg1, align 4
  store i32 %v2_1000a488, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_1000a490 = add i32 %arg3, 3
  %v3_1000a5143 = icmp eq i32 %v2_1000a488, 0
  br i1 %v3_1000a5143, label %dec_label_pc_1000a51c, label %dec_label_pc_1000a498

dec_label_pc_1000a498:                            ; preds = %dec_label_pc_1000a488, %dec_label_pc_1000a510
  %v0_1000a510 = phi i32 [ %v3_1000a510, %dec_label_pc_1000a510 ], [ %v2_1000a488, %dec_label_pc_1000a488 ]
  %v1_1000a498 = inttoptr i32 %v0_1000a510 to i32*
  %v2_1000a498 = load i32, i32* %v1_1000a498, align 4
  %v2_1000a49c = sub i32 %v0_1000a510, %v2_1000a498
  %v1_1000a4a0 = add i32 %v2_1000a49c, 12
  %v3_1000a4a4 = icmp ugt i32 %v1_1000a4a0, %arg2
  br i1 %v3_1000a4a4, label %dec_label_pc_1000a510, label %dec_label_pc_1000a4ac

dec_label_pc_1000a4ac:                            ; preds = %dec_label_pc_1000a498
  %v4_1000a4a4 = icmp eq i32 %v1_1000a4a0, %arg2
  br i1 %v4_1000a4a4, label %dec_label_pc_1000a4b4, label %dec_label_pc_1000a51c

dec_label_pc_1000a4b4:                            ; preds = %dec_label_pc_1000a4ac
  %v1_1000a4b4 = call i32 @__asm_rlwinm(i32 %v1_1000a490, i32 0, i32 0, i32 29)
  %v2_1000a4b8 = icmp ult i32 %v2_1000a498, %v1_1000a4b4
  br i1 %v2_1000a4b8, label %dec_label_pc_1000a51c, label %dec_label_pc_1000a4c0

dec_label_pc_1000a4c0:                            ; preds = %dec_label_pc_1000a4b4
  %v1_1000a4c0 = add i32 %v1_1000a4b4, 44
  %v2_1000a4c4 = icmp ult i32 %v2_1000a498, %v1_1000a4c0
  br i1 %v2_1000a4c4, label %dec_label_pc_1000a4cc, label %dec_label_pc_1000a500

dec_label_pc_1000a4cc:                            ; preds = %dec_label_pc_1000a4c0
  %v0_1000a4cc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a4cc = add i32 %v0_1000a4cc, 4
  %v2_1000a4cc = inttoptr i32 %v1_1000a4cc to i32*
  %v3_1000a4cc = load i32, i32* %v2_1000a4cc, align 4
  %v3_1000a4d0 = icmp eq i32 %v3_1000a4cc, 0
  br i1 %v3_1000a4d0, label %dec_label_pc_1000a4e0, label %dec_label_pc_1000a4d8

dec_label_pc_1000a4d8:                            ; preds = %dec_label_pc_1000a4cc
  %v1_1000a4d8 = add i32 %v0_1000a4cc, 8
  %v2_1000a4d8 = inttoptr i32 %v1_1000a4d8 to i32*
  %v3_1000a4d8 = load i32, i32* %v2_1000a4d8, align 4
  %v2_1000a4dc = add i32 %v3_1000a4cc, 8
  %v3_1000a4dc = inttoptr i32 %v2_1000a4dc to i32*
  store i32 %v3_1000a4d8, i32* %v3_1000a4dc, align 4
  %v0_1000a4e0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a4e0

dec_label_pc_1000a4e0:                            ; preds = %dec_label_pc_1000a4cc, %dec_label_pc_1000a4d8
  %v0_1000a4e0 = phi i32 [ %v0_1000a4cc, %dec_label_pc_1000a4cc ], [ %v0_1000a4e0.pre, %dec_label_pc_1000a4d8 ]
  %v1_1000a4e0 = add i32 %v0_1000a4e0, 8
  %v2_1000a4e0 = inttoptr i32 %v1_1000a4e0 to i32*
  %v3_1000a4e0 = load i32, i32* %v2_1000a4e0, align 4
  %v1_1000a4e4 = add i32 %v0_1000a4e0, 4
  %v2_1000a4e4 = inttoptr i32 %v1_1000a4e4 to i32*
  %v3_1000a4e4 = load i32, i32* %v2_1000a4e4, align 4
  %v3_1000a4e8 = icmp eq i32 %v3_1000a4e0, 0
  br i1 %v3_1000a4e8, label %dec_label_pc_1000a4f8, label %dec_label_pc_1000a4f0

dec_label_pc_1000a4f0:                            ; preds = %dec_label_pc_1000a4e0
  %v2_1000a4f0 = add i32 %v3_1000a4e0, 4
  %v3_1000a4f0 = inttoptr i32 %v2_1000a4f0 to i32*
  store i32 %v3_1000a4e4, i32* %v3_1000a4f0, align 4
  ret i32 %v2_1000a498

dec_label_pc_1000a4f8:                            ; preds = %dec_label_pc_1000a4e0
  %v1_1000a4f8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a4f8 = inttoptr i32 %v1_1000a4f8 to i32*
  store i32 %v3_1000a4e4, i32* %v2_1000a4f8, align 4
  ret i32 %v2_1000a498

dec_label_pc_1000a500:                            ; preds = %dec_label_pc_1000a4c0
  %v2_1000a500 = sub i32 %v2_1000a498, %v1_1000a4b4
  %v1_1000a508 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000a508 = inttoptr i32 %v1_1000a508 to i32*
  store i32 %v2_1000a500, i32* %v2_1000a508, align 4
  ret i32 %v1_1000a4b4

dec_label_pc_1000a510:                            ; preds = %dec_label_pc_1000a498
  %v1_1000a510 = add i32 %v0_1000a510, 4
  %v2_1000a510 = inttoptr i32 %v1_1000a510 to i32*
  %v3_1000a510 = load i32, i32* %v2_1000a510, align 4
  store i32 %v3_1000a510, i32* %r11.global-to-local, align 4
  %v3_1000a514 = icmp eq i32 %v3_1000a510, 0
  br i1 %v3_1000a514, label %dec_label_pc_1000a514.dec_label_pc_1000a51c.loopexit_crit_edge, label %dec_label_pc_1000a498

dec_label_pc_1000a514.dec_label_pc_1000a51c.loopexit_crit_edge: ; preds = %dec_label_pc_1000a510
  br label %dec_label_pc_1000a51c

dec_label_pc_1000a51c:                            ; preds = %dec_label_pc_1000a488, %dec_label_pc_1000a514.dec_label_pc_1000a51c.loopexit_crit_edge, %dec_label_pc_1000a4ac, %dec_label_pc_1000a4b4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1000a510, { 1, 2, 0 }
  uselistorder i32 %v0_1000a4e0, { 1, 0 }
  uselistorder i32 %v1_1000a4b4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000a498, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1000a510, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000a51c, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000a4e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a498, { 1, 0 }
}

define i32 @function_1000a524(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a524:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000a524 = icmp eq i32 %arg3, 0
  %v2_1000a528 = add i32 %arg2, 4
  %v3_1000a528 = inttoptr i32 %v2_1000a528 to i32*
  store i32 %arg4, i32* %v3_1000a528, align 4
  %v2_1000a52c = add i32 %arg2, 8
  %v3_1000a52c = inttoptr i32 %v2_1000a52c to i32*
  store i32 %arg3, i32* %v3_1000a52c, align 4
  br i1 %v3_1000a524, label %dec_label_pc_1000a53c, label %dec_label_pc_1000a534

dec_label_pc_1000a534:                            ; preds = %dec_label_pc_1000a524
  %v2_1000a534 = add i32 %arg3, 4
  %v3_1000a534 = inttoptr i32 %v2_1000a534 to i32*
  store i32 %arg2, i32* %v3_1000a534, align 4
  br label %dec_label_pc_1000a540

dec_label_pc_1000a53c:                            ; preds = %dec_label_pc_1000a524
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000a540

dec_label_pc_1000a540:                            ; preds = %dec_label_pc_1000a534, %dec_label_pc_1000a53c
  %v3_1000a540 = icmp eq i32 %arg4, 0
  %v0_1000a544 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a540, i32 %v0_1000a544)
  %v2_1000a548 = add i32 %arg4, 8
  %v3_1000a548 = inttoptr i32 %v2_1000a548 to i32*
  store i32 %arg2, i32* %v3_1000a548, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_1000a540, { 1, 0 }
}

define i32 @function_1000a550(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a550:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000a550 = icmp eq i32 %arg3, 0
  br i1 %v3_1000a550, label %dec_label_pc_1000a560, label %dec_label_pc_1000a558

dec_label_pc_1000a558:                            ; preds = %dec_label_pc_1000a550
  %v2_1000a558 = add i32 %arg3, 4
  %v3_1000a558 = inttoptr i32 %v2_1000a558 to i32*
  store i32 %arg2, i32* %v3_1000a558, align 4
  br label %dec_label_pc_1000a564

dec_label_pc_1000a560:                            ; preds = %dec_label_pc_1000a550
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000a564

dec_label_pc_1000a564:                            ; preds = %dec_label_pc_1000a558, %dec_label_pc_1000a560
  %v2_1000a564 = add i32 %arg2, 8
  %v3_1000a564 = inttoptr i32 %v2_1000a564 to i32*
  store i32 %arg3, i32* %v3_1000a564, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a564, { 1, 0 }
}

define i32 @function_1000a56c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a56c:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000a584 = load i32, i32* %arg1, align 4
  store i32 %v2_1000a584, i32* @r31, align 4
  %v2_1000a588 = add i32 %arg3, %arg2
  store i32 %v2_1000a588, i32* %r3.global-to-local, align 4
  %v3_1000a59c7 = icmp eq i32 %v2_1000a584, 0
  %v1_1000a5a08 = add i32 %v2_1000a584, 12
  %tmp69 = icmp uge i32 %v1_1000a5a08, %arg2
  %or.cond10 = or i1 %v3_1000a59c7, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000a5ac, label %dec_label_pc_1000a594

dec_label_pc_1000a594:                            ; preds = %dec_label_pc_1000a56c, %dec_label_pc_1000a594
  %v0_1000a5f411 = phi i32 [ %v3_1000a598, %dec_label_pc_1000a594 ], [ %v2_1000a584, %dec_label_pc_1000a56c ]
  store i32 %v0_1000a5f411, i32* %r11.global-to-local, align 4
  %v1_1000a598 = add i32 %v0_1000a5f411, 4
  %v2_1000a598 = inttoptr i32 %v1_1000a598 to i32*
  %v3_1000a598 = load i32, i32* %v2_1000a598, align 4
  store i32 %v3_1000a598, i32* @r31, align 4
  %v3_1000a59c = icmp eq i32 %v3_1000a598, 0
  %v1_1000a5a0 = add i32 %v3_1000a598, 12
  %tmp6 = icmp uge i32 %v1_1000a5a0, %arg2
  %or.cond = or i1 %v3_1000a59c, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000a5ac, label %dec_label_pc_1000a594

dec_label_pc_1000a5ac:                            ; preds = %dec_label_pc_1000a594, %dec_label_pc_1000a56c
  %v0_1000a5e8.lcssa = phi i32 [ 0, %dec_label_pc_1000a56c ], [ %v0_1000a5f411, %dec_label_pc_1000a594 ]
  %v0_1000a5f4.lcssa = phi i32 [ %v2_1000a584, %dec_label_pc_1000a56c ], [ %v3_1000a598, %dec_label_pc_1000a594 ]
  %v3_1000a59c.lcssa = phi i1 [ %v3_1000a59c7, %dec_label_pc_1000a56c ], [ %v3_1000a59c, %dec_label_pc_1000a594 ]
  br i1 %v3_1000a59c.lcssa, label %dec_label_pc_1000a664, label %dec_label_pc_1000a5b4

dec_label_pc_1000a5b4:                            ; preds = %dec_label_pc_1000a5ac
  %v1_1000a5b4 = inttoptr i32 %v0_1000a5f4.lcssa to i32*
  %v2_1000a5b4 = load i32, i32* %v1_1000a5b4, align 4
  %v2_1000a5b8 = sub i32 %v0_1000a5f4.lcssa, %v2_1000a5b4
  %v1_1000a5bc = add i32 %v2_1000a5b8, 12
  %v3_1000a5c0 = icmp ugt i32 %v1_1000a5bc, %v2_1000a588
  br i1 %v3_1000a5c0, label %dec_label_pc_1000a664, label %dec_label_pc_1000a5c8

dec_label_pc_1000a5c8:                            ; preds = %dec_label_pc_1000a5b4
  %v4_1000a5c0 = icmp eq i32 %v1_1000a5bc, %v2_1000a588
  %v2_1000a5cc = add i32 %v2_1000a5b4, %arg3
  store i32 %v2_1000a5cc, i32* @r29, align 4
  br i1 %v4_1000a5c0, label %dec_label_pc_1000a5d4, label %dec_label_pc_1000a604

dec_label_pc_1000a5d4:                            ; preds = %dec_label_pc_1000a5c8
  %v3_1000a5d4 = icmp eq i32 %v0_1000a5e8.lcssa, 0
  br i1 %v3_1000a5d4, label %dec_label_pc_1000a658, label %dec_label_pc_1000a5dc

dec_label_pc_1000a5dc:                            ; preds = %dec_label_pc_1000a5d4
  %v1_1000a5dc = add i32 %v0_1000a5e8.lcssa, 12
  %v4_1000a5e0 = icmp eq i32 %v1_1000a5dc, %arg2
  br i1 %v4_1000a5e0, label %dec_label_pc_1000a5e8, label %dec_label_pc_1000a658

dec_label_pc_1000a5e8:                            ; preds = %dec_label_pc_1000a5dc
  %v1_1000a5e8 = inttoptr i32 %v0_1000a5e8.lcssa to i32*
  %v2_1000a5e8 = load i32, i32* %v1_1000a5e8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000a5f0 = add i32 %v0_1000a5e8.lcssa, 8
  %v2_1000a5f0 = inttoptr i32 %v1_1000a5f0 to i32*
  %v3_1000a5f0 = load i32, i32* %v2_1000a5f0, align 4
  %v2_1000a5f8 = add i32 %v2_1000a5e8, %v2_1000a5cc
  store i32 %v2_1000a5f8, i32* @r29, align 4
  %v5_1000a5fc = call i32 @function_1000a550(i32* %arg1, i32 %v0_1000a5f4.lcssa, i32 %v3_1000a5f0, i32 %v2_1000a588)
  store i32 %v5_1000a5fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a658

dec_label_pc_1000a604:                            ; preds = %dec_label_pc_1000a5c8
  %v1_1000a604 = add i32 %v0_1000a5f4.lcssa, 4
  %v2_1000a604 = inttoptr i32 %v1_1000a604 to i32*
  %v3_1000a604 = load i32, i32* %v2_1000a604, align 4
  %v3_1000a608 = icmp eq i32 %v3_1000a604, 0
  br i1 %v3_1000a608, label %dec_label_pc_1000a640, label %dec_label_pc_1000a610

dec_label_pc_1000a610:                            ; preds = %dec_label_pc_1000a604
  %v1_1000a610 = inttoptr i32 %v3_1000a604 to i32*
  %v2_1000a610 = load i32, i32* %v1_1000a610, align 4
  %v2_1000a614 = sub i32 %v3_1000a604, %v2_1000a610
  %v1_1000a618 = add i32 %v2_1000a614, 12
  %v4_1000a61c = icmp eq i32 %v2_1000a588, %v1_1000a618
  br i1 %v4_1000a61c, label %dec_label_pc_1000a624, label %dec_label_pc_1000a640

dec_label_pc_1000a624:                            ; preds = %dec_label_pc_1000a610
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000a630 = add i32 %v2_1000a610, %v2_1000a5cc
  store i32 %v2_1000a630, i32* @r29, align 4
  store i32 %v3_1000a604, i32* @r31, align 4
  %v5_1000a638 = call i32 @function_1000a550(i32* %arg1, i32 %v3_1000a604, i32 %v0_1000a5e8.lcssa, i32 %v2_1000a588)
  store i32 %v5_1000a638, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a658

dec_label_pc_1000a640:                            ; preds = %dec_label_pc_1000a610, %dec_label_pc_1000a604
  %v2_1000a640 = add i32 %v0_1000a5f4.lcssa, %arg3
  store i32 %v2_1000a640, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268478040, i32* @lr, align 4
  %v5_1000a654 = call i32 @function_1000a524(i32* %arg1, i32 %v2_1000a640, i32 %v0_1000a5e8.lcssa, i32 %v3_1000a604)
  store i32 %v5_1000a654, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a658

dec_label_pc_1000a658:                            ; preds = %dec_label_pc_1000a5dc, %dec_label_pc_1000a5d4, %dec_label_pc_1000a624, %dec_label_pc_1000a5e8, %dec_label_pc_1000a640
  %v0_1000a658 = load i32, i32* @r31, align 4
  store i32 %v0_1000a658, i32* @r30, align 4
  %v0_1000a65c = load i32, i32* @r29, align 4
  %v2_1000a65c = inttoptr i32 %v0_1000a658 to i32*
  store i32 %v0_1000a65c, i32* %v2_1000a65c, align 4
  br label %dec_label_pc_1000a680

dec_label_pc_1000a664:                            ; preds = %dec_label_pc_1000a5b4, %dec_label_pc_1000a5ac
  %v2_1000a664 = add i32 %v2_1000a588, -12
  %v3_1000a664 = inttoptr i32 %v2_1000a664 to i32*
  store i32 %arg3, i32* %v3_1000a664, align 4
  %v0_1000a668 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000a668 = add i32 %v0_1000a668, -12
  store i32 %v1_1000a668, i32* @r30, align 4
  %v0_1000a66c = load i32, i32* %r11.global-to-local, align 4
  %v0_1000a670 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000a670, i32* %r3.global-to-local, align 4
  %v0_1000a674 = load i32, i32* @r31, align 4
  store i32 268478080, i32* @lr, align 4
  %v4_1000a67c = inttoptr i32 %v0_1000a670 to i32*
  %v5_1000a67c = call i32 @function_1000a524(i32* %v4_1000a67c, i32 %v1_1000a668, i32 %v0_1000a66c, i32 %v0_1000a674)
  store i32 %v5_1000a67c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a680

dec_label_pc_1000a680:                            ; preds = %dec_label_pc_1000a658, %dec_label_pc_1000a664
  %v0_1000a684 = load i32, i32* @r30, align 4
  store i32 %v0_1000a684, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000a684

; uselistorder directives
  uselistorder i32 %v3_1000a604, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000a5bc, { 1, 0 }
  uselistorder i32 %v0_1000a5f4.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000a5e8.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000a598, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000a588, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 7, 8, 9, 5, 1, 10, 11, 2, 3, 4, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32*, i32, i32, i32)* @function_1000a550, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000a680, { 1, 0 }
  uselistorder label %dec_label_pc_1000a658, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000a594, { 1, 0 }
}

define i32 @function_1000a698(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a698:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* %r26.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1000a6d0 = load i32, i32* bitcast (i32** @global_var_1001c1fc.347 to i32*), align 4
  %v2_1000a6dc27 = load i8, i8* %arg1, align 1
  %v3_1000a6dc28 = zext i8 %v2_1000a6dc27 to i32
  %v1_1000a6e029 = mul nuw nsw i32 %v3_1000a6dc28, 2
  %v2_1000a6e430 = add i32 %v1_1000a6e029, %v3_1000a6d0
  %v3_1000a6e431 = inttoptr i32 %v2_1000a6e430 to i16*
  %v4_1000a6e432 = load i16, i16* %v3_1000a6e431, align 2
  %v1_1000a6e834 = and i16 %v4_1000a6e432, 32
  %v3_1000a6e835 = icmp eq i16 %v1_1000a6e834, 0
  br i1 %v3_1000a6e835, label %dec_label_pc_1000a6f0, label %dec_label_pc_1000a6d8

dec_label_pc_1000a6d8:                            ; preds = %dec_label_pc_1000a698, %dec_label_pc_1000a6d8
  %v0_1000a71036 = phi i32 [ %v1_1000a6d8, %dec_label_pc_1000a6d8 ], [ %tmp, %dec_label_pc_1000a698 ]
  %v1_1000a6d8 = add i32 %v0_1000a71036, 1
  store i32 %v1_1000a6d8, i32* %r31.global-to-local, align 4
  %v1_1000a6dc = inttoptr i32 %v1_1000a6d8 to i8*
  %v2_1000a6dc = load i8, i8* %v1_1000a6dc, align 1
  %v3_1000a6dc = zext i8 %v2_1000a6dc to i32
  %v1_1000a6e0 = mul nuw nsw i32 %v3_1000a6dc, 2
  %v2_1000a6e4 = add i32 %v1_1000a6e0, %v3_1000a6d0
  %v3_1000a6e4 = inttoptr i32 %v2_1000a6e4 to i16*
  %v4_1000a6e4 = load i16, i16* %v3_1000a6e4, align 2
  %v1_1000a6e8 = and i16 %v4_1000a6e4, 32
  %v3_1000a6e8 = icmp eq i16 %v1_1000a6e8, 0
  br i1 %v3_1000a6e8, label %dec_label_pc_1000a6f0, label %dec_label_pc_1000a6d8

dec_label_pc_1000a6f0:                            ; preds = %dec_label_pc_1000a6d8, %dec_label_pc_1000a698
  %v0_1000a710.lcssa = phi i32 [ %tmp, %dec_label_pc_1000a698 ], [ %v1_1000a6d8, %dec_label_pc_1000a6d8 ]
  %v2_1000a6dc.lcssa = phi i8 [ %v2_1000a6dc27, %dec_label_pc_1000a698 ], [ %v2_1000a6dc, %dec_label_pc_1000a6d8 ]
  %v3_1000a6f0 = icmp eq i8 %v2_1000a6dc.lcssa, 43
  br i1 %v3_1000a6f0, label %dec_label_pc_1000a710, label %dec_label_pc_1000a6f8

dec_label_pc_1000a6f8:                            ; preds = %dec_label_pc_1000a6f0
  %v3_1000a6f8 = icmp eq i8 %v2_1000a6dc.lcssa, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000a6f8, label %dec_label_pc_1000a710, label %dec_label_pc_1000a714

dec_label_pc_1000a710:                            ; preds = %dec_label_pc_1000a6f0, %dec_label_pc_1000a6f8
  %storemerge = phi i32 [ 1, %dec_label_pc_1000a6f8 ], [ 0, %dec_label_pc_1000a6f0 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_1000a710 = add i32 %v0_1000a710.lcssa, 1
  store i32 %v1_1000a710, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a714

dec_label_pc_1000a714:                            ; preds = %dec_label_pc_1000a6f8, %dec_label_pc_1000a710
  %v1_1000a714 = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_1000a714 = icmp eq i32 %v1_1000a714, 0
  br i1 %v4_1000a714, label %dec_label_pc_1000a720, label %dec_label_pc_1000a714.dec_label_pc_1000a75c_crit_edge

dec_label_pc_1000a714.dec_label_pc_1000a75c_crit_edge: ; preds = %dec_label_pc_1000a714
  %v0_1000a75c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a75c

dec_label_pc_1000a720:                            ; preds = %dec_label_pc_1000a714
  %v0_1000a720 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a720 = inttoptr i32 %v0_1000a720 to i8*
  %v2_1000a720 = load i8, i8* %v1_1000a720, align 1
  %v0_1000a724 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a724 = add i32 %v0_1000a724, 10
  store i32 %v1_1000a724, i32* %r30.global-to-local, align 4
  %v3_1000a728 = icmp eq i8 %v2_1000a720, 48
  br i1 %v3_1000a728, label %dec_label_pc_1000a730, label %dec_label_pc_1000a750

dec_label_pc_1000a730:                            ; preds = %dec_label_pc_1000a720
  %v1_1000a730 = add i32 %v0_1000a720, 1
  %v2_1000a730 = inttoptr i32 %v1_1000a730 to i8*
  %v3_1000a730 = load i8, i8* %v2_1000a730, align 1
  %v4_1000a730 = zext i8 %v3_1000a730 to i32
  store i32 %v1_1000a730, i32* %r31.global-to-local, align 4
  %v1_1000a734 = add i32 %v0_1000a724, 8
  store i32 %v1_1000a734, i32* %r30.global-to-local, align 4
  %v1_1000a738 = or i32 %v4_1000a730, 32
  %v3_1000a740 = icmp eq i32 %v1_1000a738, 120
  br i1 %v3_1000a740, label %dec_label_pc_1000a748, label %dec_label_pc_1000a750

dec_label_pc_1000a748:                            ; preds = %dec_label_pc_1000a730
  %v1_1000a748 = mul i32 %v1_1000a734, 2
  store i32 %v1_1000a748, i32* %r30.global-to-local, align 4
  %v1_1000a74c = add i32 %v0_1000a720, 2
  store i32 %v1_1000a74c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a750

dec_label_pc_1000a750:                            ; preds = %dec_label_pc_1000a730, %dec_label_pc_1000a720, %dec_label_pc_1000a748
  %v0_1000a80415 = phi i32 [ %v1_1000a730, %dec_label_pc_1000a748 ], [ %tmp, %dec_label_pc_1000a720 ], [ %v1_1000a730, %dec_label_pc_1000a730 ]
  %v0_1000a750 = phi i32 [ %v1_1000a748, %dec_label_pc_1000a748 ], [ %v1_1000a724, %dec_label_pc_1000a720 ], [ %v1_1000a734, %dec_label_pc_1000a730 ]
  %tmp22 = icmp slt i32 %v0_1000a750, 17
  br i1 %tmp22, label %dec_label_pc_1000a75c, label %dec_label_pc_1000a758

dec_label_pc_1000a758:                            ; preds = %dec_label_pc_1000a750
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a75c

dec_label_pc_1000a75c:                            ; preds = %dec_label_pc_1000a714.dec_label_pc_1000a75c_crit_edge, %dec_label_pc_1000a750, %dec_label_pc_1000a758
  %v0_1000a80414 = phi i32 [ %tmp, %dec_label_pc_1000a714.dec_label_pc_1000a75c_crit_edge ], [ %v0_1000a80415, %dec_label_pc_1000a750 ], [ %v0_1000a80415, %dec_label_pc_1000a758 ]
  %v1_1000a770 = phi i32 [ %v0_1000a75c.pre, %dec_label_pc_1000a714.dec_label_pc_1000a75c_crit_edge ], [ %v0_1000a750, %dec_label_pc_1000a750 ], [ 16, %dec_label_pc_1000a758 ]
  %v1_1000a75c = add i32 %v1_1000a770, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1000a764 = icmp ugt i32 %v1_1000a75c, 34
  br i1 %v2_1000a764, label %dec_label_pc_1000a7fc, label %dec_label_pc_1000a76c

dec_label_pc_1000a76c:                            ; preds = %dec_label_pc_1000a75c
  %v2_1000a770 = udiv i32 -1, %v1_1000a770
  store i32 %v2_1000a770, i32* @r29, align 4
  %v2_1000a774 = mul i32 %v2_1000a770, %v1_1000a770
  %v1_1000a778 = sub i32 -1, %v2_1000a774
  %v1_1000a77c = urem i32 %v1_1000a778, 256
  store i32 %v1_1000a77c, i32* @r27, align 4
  %v0_1000a788.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a788

dec_label_pc_1000a784:                            ; preds = %dec_label_pc_1000a7f0, %dec_label_pc_1000a7d8
  %v1_1000a78c.pre = phi i32 [ %v1_1000a790, %dec_label_pc_1000a7f0 ], [ %v1_1000a78c.pre.pre, %dec_label_pc_1000a7d8 ]
  %v0_1000a78c.pre = phi i32 [ %v2_1000a7f4, %dec_label_pc_1000a7f0 ], [ %v0_1000a78c.pre.pre, %dec_label_pc_1000a7d8 ]
  %v0_1000a784 = phi i32 [ %v1_1000a794, %dec_label_pc_1000a7f0 ], [ %v0_1000a784.pre, %dec_label_pc_1000a7d8 ]
  br label %dec_label_pc_1000a788

dec_label_pc_1000a788:                            ; preds = %dec_label_pc_1000a76c, %dec_label_pc_1000a784
  %v0_1000a80412 = phi i32 [ %v0_1000a80414, %dec_label_pc_1000a76c ], [ %v0_1000a784, %dec_label_pc_1000a784 ]
  %v0_1000a794 = phi i32 [ %v0_1000a788.pre, %dec_label_pc_1000a76c ], [ %v0_1000a784, %dec_label_pc_1000a784 ]
  %v1_1000a790 = phi i32 [ %v2_1000a770, %dec_label_pc_1000a76c ], [ %v1_1000a78c.pre, %dec_label_pc_1000a784 ]
  %v0_1000a7f0 = phi i32 [ 0, %dec_label_pc_1000a76c ], [ %v0_1000a78c.pre, %dec_label_pc_1000a784 ]
  %v1_1000a788 = inttoptr i32 %v0_1000a794 to i8*
  %v2_1000a788 = load i8, i8* %v1_1000a788, align 1
  %v3_1000a788 = zext i8 %v2_1000a788 to i32
  %v3_1000a78c = icmp ugt i32 %v0_1000a7f0, %v1_1000a790
  %v1_1000a794 = add i32 %v0_1000a794, 1
  store i32 %v1_1000a794, i32* %r31.global-to-local, align 4
  %v1_1000a798 = add nsw i32 %v3_1000a788, -48
  %v1_1000a79c = or i32 %v3_1000a788, 32
  %v1_1000a7a0 = urem i32 %v1_1000a798, 256
  %tmp23 = icmp ult i32 %v1_1000a7a0, 10
  br i1 %tmp23, label %dec_label_pc_1000a7c0, label %dec_label_pc_1000a7b0

dec_label_pc_1000a7b0:                            ; preds = %dec_label_pc_1000a788
  %tmp24 = icmp ult i32 %v1_1000a79c, 97
  br i1 %tmp24, label %dec_label_pc_1000a7c0, label %dec_label_pc_1000a7bc

dec_label_pc_1000a7bc:                            ; preds = %dec_label_pc_1000a7b0
  %v1_1000a7b0 = add nsw i32 %v1_1000a79c, -87
  %v1_1000a7bc = urem i32 %v1_1000a7b0, 256
  br label %dec_label_pc_1000a7c0

dec_label_pc_1000a7c0:                            ; preds = %dec_label_pc_1000a7b0, %dec_label_pc_1000a788, %dec_label_pc_1000a7bc
  %v1_1000a7f4 = phi i32 [ 40, %dec_label_pc_1000a7b0 ], [ %v1_1000a7a0, %dec_label_pc_1000a788 ], [ %v1_1000a7bc, %dec_label_pc_1000a7bc ]
  %v1_1000a7c0 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a7c0 = icmp slt i32 %v1_1000a7f4, %v1_1000a7c0
  br i1 %v2_1000a7c0, label %dec_label_pc_1000a7c8, label %dec_label_pc_1000a7fc

dec_label_pc_1000a7c8:                            ; preds = %dec_label_pc_1000a7c0
  br i1 %v3_1000a78c, label %dec_label_pc_1000a7d8, label %dec_label_pc_1000a7cc

dec_label_pc_1000a7cc:                            ; preds = %dec_label_pc_1000a7c8
  %v1_1000a7cc = load i32, i32* @r27, align 4
  %v0_1000a7d0.not = icmp ne i32 %v0_1000a7f0, %v1_1000a790
  %tmp25 = icmp ule i32 %v1_1000a7f4, %v1_1000a7cc
  %or.cond = or i1 %tmp25, %v0_1000a7d0.not
  br i1 %or.cond, label %dec_label_pc_1000a7f0, label %dec_label_pc_1000a7d8

dec_label_pc_1000a7d8:                            ; preds = %dec_label_pc_1000a7cc, %dec_label_pc_1000a7c8
  %v0_1000a7d8 = call i32 @function_100097b8()
  %v0_1000a7dc = load i32, i32* @r28, align 4
  %v1_1000a7dc = load i32, i32* %r26.global-to-local, align 4
  %v2_1000a7dc = and i32 %v1_1000a7dc, %v0_1000a7dc
  store i32 %v2_1000a7dc, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_1000a7e8 = inttoptr i32 %v0_1000a7d8 to i32*
  store i32 34, i32* %v2_1000a7e8, align 4
  %v0_1000a784.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000a78c.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a78c.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000a784

dec_label_pc_1000a7f0:                            ; preds = %dec_label_pc_1000a7cc
  %v2_1000a7f0 = mul i32 %v1_1000a7c0, %v0_1000a7f0
  %v2_1000a7f4 = add i32 %v2_1000a7f0, %v1_1000a7f4
  store i32 %v2_1000a7f4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a784

dec_label_pc_1000a7fc:                            ; preds = %dec_label_pc_1000a7c0, %dec_label_pc_1000a75c
  %v0_1000a804 = phi i32 [ %v0_1000a80414, %dec_label_pc_1000a75c ], [ %v0_1000a80412, %dec_label_pc_1000a7c0 ]
  %v0_1000a7fc = load i32, i32* %r25.global-to-local, align 4
  %v3_1000a7fc = icmp eq i32 %v0_1000a7fc, 0
  br i1 %v3_1000a7fc, label %dec_label_pc_1000a808, label %dec_label_pc_1000a804

dec_label_pc_1000a804:                            ; preds = %dec_label_pc_1000a7fc
  %v2_1000a804 = inttoptr i32 %v0_1000a7fc to i32*
  store i32 %v0_1000a804, i32* %v2_1000a804, align 4
  br label %dec_label_pc_1000a808

dec_label_pc_1000a808:                            ; preds = %dec_label_pc_1000a7fc, %dec_label_pc_1000a804
  %v0_1000a808 = load i32, i32* %r26.global-to-local, align 4
  %v3_1000a808 = icmp eq i32 %v0_1000a808, 0
  %v0_1000a80c = load i32, i32* @r28, align 4
  %v1_1000a80c = sub i32 0, %v0_1000a80c
  %tmp40 = lshr i32 %v1_1000a80c, 31
  %tmp41 = add nuw i32 %tmp40, 2147483647
  store i32 %tmp41, i32* @r31, align 4
  %v0_1000a84c.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_1000a808, label %dec_label_pc_1000a83c, label %dec_label_pc_1000a824

dec_label_pc_1000a824:                            ; preds = %dec_label_pc_1000a808
  %v3_1000a824 = icmp ugt i32 %v0_1000a84c.pre.pre, %tmp41
  br i1 %v3_1000a824, label %dec_label_pc_1000a82c, label %dec_label_pc_1000a83c

dec_label_pc_1000a82c:                            ; preds = %dec_label_pc_1000a824
  %v0_1000a82c = call i32 @function_100097b8()
  %v2_1000a834 = inttoptr i32 %v0_1000a82c to i32*
  store i32 34, i32* %v2_1000a834, align 4
  %v0_1000a838 = load i32, i32* @r31, align 4
  store i32 %v0_1000a838, i32* %r8.global-to-local, align 4
  %v0_1000a83c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000a83c

dec_label_pc_1000a83c:                            ; preds = %dec_label_pc_1000a808, %dec_label_pc_1000a824, %dec_label_pc_1000a82c
  %v0_1000a84c.pre = phi i32 [ %v0_1000a84c.pre.pre, %dec_label_pc_1000a824 ], [ %v0_1000a838, %dec_label_pc_1000a82c ], [ %v0_1000a84c.pre.pre, %dec_label_pc_1000a808 ]
  %v0_1000a83c = phi i32 [ %v0_1000a80c, %dec_label_pc_1000a824 ], [ %v0_1000a83c.pre, %dec_label_pc_1000a82c ], [ %v0_1000a80c, %dec_label_pc_1000a808 ]
  %v3_1000a83c = icmp eq i32 %v0_1000a83c, 0
  br i1 %v3_1000a83c, label %dec_label_pc_1000a848, label %dec_label_pc_1000a844

dec_label_pc_1000a844:                            ; preds = %dec_label_pc_1000a83c
  %v1_1000a844 = sub i32 0, %v0_1000a84c.pre
  store i32 %v1_1000a844, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a848

dec_label_pc_1000a848:                            ; preds = %dec_label_pc_1000a83c, %dec_label_pc_1000a844
  %v0_1000a84c = phi i32 [ %v1_1000a844, %dec_label_pc_1000a844 ], [ %v0_1000a84c.pre, %dec_label_pc_1000a83c ]
  ret i32 %v0_1000a84c

; uselistorder directives
  uselistorder i32 %v0_1000a84c.pre, { 1, 0 }
  uselistorder i32 %v0_1000a84c.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000a7f4, { 1, 0 }
  uselistorder i32 %v1_1000a7a0, { 1, 0 }
  uselistorder i32 %v1_1000a79c, { 1, 0 }
  uselistorder i32 %v1_1000a794, { 1, 0 }
  uselistorder i32 %v3_1000a788, { 1, 0 }
  uselistorder i32 %v0_1000a7f0, { 1, 0, 2 }
  uselistorder i32 %v1_1000a790, { 0, 2, 1 }
  uselistorder i32 %v0_1000a784, { 1, 0 }
  uselistorder i32 %v2_1000a770, { 1, 0, 2 }
  uselistorder i32 %v1_1000a748, { 1, 0 }
  uselistorder i32 %v1_1000a734, { 1, 0, 2 }
  uselistorder i8 %v2_1000a6dc.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000a6d8, { 0, 2, 3, 1 }
  uselistorder i32 %v3_1000a6d0, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 7, 2, 3, 6, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder i32 34, { 0, 1, 3, 2 }
  uselistorder i32 26, { 6, 0, 4, 5, 1, 7, 2, 8, 3, 9 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000a848, { 1, 0 }
  uselistorder label %dec_label_pc_1000a83c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a808, { 1, 0 }
  uselistorder label %dec_label_pc_1000a7c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a788, { 1, 0 }
  uselistorder label %dec_label_pc_1000a75c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a750, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a714, { 1, 0 }
  uselistorder label %dec_label_pc_1000a710, { 1, 0 }
  uselistorder label %dec_label_pc_1000a6d8, { 1, 0 }
}

define i32 @function_1000a860() local_unnamed_addr {
dec_label_pc_1000a860:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000a878 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000a884 = load i32, i32* @r3, align 4
  store i32 %v0_1000a884, i32* @r31, align 4
  store i32 %v2_1000a878, i32* @r3, align 4
  %v3_1000a890 = call i32 @function_1000ab54(i32 %v2_1000a878, i32 ptrtoint ([3 x i8]* @global_var_1000ab4c.327 to i32))
  %v0_1000a898 = call i32 @function_1000ab4c()
  %v3_1000a8a0 = load i32, i32* @global_var_1001c240.350, align 4
  %v3_1000a8a4 = icmp eq i32 %v3_1000a8a0, 0
  br i1 %v3_1000a8a4, label %dec_label_pc_1000a8b8, label %dec_label_pc_1000a8ac

dec_label_pc_1000a8ac:                            ; preds = %dec_label_pc_1000a860
  %v0_1000a8ac = load i32, i32* @r31, align 4
  %v3_1000a8b4 = call i32 @unknown_0(i32 %v0_1000a8ac, i32 268566528)
  br label %dec_label_pc_1000a8b8

dec_label_pc_1000a8b8:                            ; preds = %dec_label_pc_1000a860, %dec_label_pc_1000a8ac
  store i32 %v2_1000a878, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v2_1000a8c0 = call i32 @function_1000ab54(i32 %v2_1000a878, i32 1)
  store i32 %v2_1000a8c0, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a8c8.352 to i32), i32* @lr, align 4
  %v1_1000a8c4 = call i32 @function_1000aab8(i32 %v2_1000a8c0)
  %v0_1000a8dc = load i32, i32* @r31, align 4
  %v1_1000a8e0 = call i32 @function_1000aeec(i32 %v0_1000a8dc)
  ret i32 %v1_1000a8e0

; uselistorder directives
  uselistorder i32 %v2_1000a878, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @function_1000ab54, { 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_1000a8b8, { 1, 0 }
}

define i32 @function_1000a8e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a8e4:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000a8e4 = icmp eq i32 %arg1, 0
  br i1 %v3_1000a8e4, label %dec_label_pc_1000aa98, label %dec_label_pc_1000a914.lr.ph

dec_label_pc_1000a914.lr.ph:                      ; preds = %dec_label_pc_1000a8e4
  %v2_1000a908 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000a908, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000a91442 = add i32 %v2_1000a908, 132
  %v3_1000a91443 = inttoptr i32 %v2_1000a91442 to i32*
  store i32 0, i32* %v3_1000a91443, align 4
  %v0_1000a91844 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a91845 = add i32 %v0_1000a91844, -1
  store i32 %v1_1000a91845, i32* %r11.global-to-local, align 4
  %v1_1000a91c46 = mul i32 %v1_1000a91845, 4
  %v1_1000a92047 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000a92048 = add i32 %v1_1000a92047, %v1_1000a91c46
  %v0_1000a92449 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a92450 = add i32 %v0_1000a92449, -1
  store i32 %v1_1000a92450, i32* %ctr.global-to-local, align 4
  %v2_1000a92451 = icmp eq i32 %v1_1000a92450, 0
  br i1 %v2_1000a92451, label %dec_label_pc_1000a928, label %dec_label_pc_1000a914.dec_label_pc_1000a914_crit_edge

dec_label_pc_1000a914.dec_label_pc_1000a914_crit_edge: ; preds = %dec_label_pc_1000a914.lr.ph, %dec_label_pc_1000a914.dec_label_pc_1000a914_crit_edge
  %v2_1000a92052 = phi i32 [ %v2_1000a920, %dec_label_pc_1000a914.dec_label_pc_1000a914_crit_edge ], [ %v2_1000a92048, %dec_label_pc_1000a914.lr.ph ]
  %v0_1000a914.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a914 = add i32 %v2_1000a92052, 8
  %v3_1000a914 = inttoptr i32 %v2_1000a914 to i32*
  store i32 %v0_1000a914.pre, i32* %v3_1000a914, align 4
  %v0_1000a918 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a918 = add i32 %v0_1000a918, -1
  store i32 %v1_1000a918, i32* %r11.global-to-local, align 4
  %v1_1000a91c = mul i32 %v1_1000a918, 4
  %v1_1000a920 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000a920 = add i32 %v1_1000a920, %v1_1000a91c
  %v0_1000a924 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a924 = add i32 %v0_1000a924, -1
  store i32 %v1_1000a924, i32* %ctr.global-to-local, align 4
  %v2_1000a924 = icmp eq i32 %v1_1000a924, 0
  br i1 %v2_1000a924, label %dec_label_pc_1000a928, label %dec_label_pc_1000a914.dec_label_pc_1000a914_crit_edge

dec_label_pc_1000a928:                            ; preds = %dec_label_pc_1000a914.dec_label_pc_1000a914_crit_edge, %dec_label_pc_1000a914.lr.ph
  %v0_1000a93c.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a928 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000a928, i32* @r29, align 4
  store i32 %v2_1000a928, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000a93c.pre, i32* %stack_var_-440, align 4
  %v0_1000a940 = call i32 @function_10009fa0()
  store i32 %v0_1000a940, i32* %r3.global-to-local, align 4
  %v1_1000a944 = icmp slt i32 %v0_1000a940, 0
  br i1 %v1_1000a944, label %dec_label_pc_1000aaa0, label %dec_label_pc_1000a94c

dec_label_pc_1000a94c:                            ; preds = %dec_label_pc_1000a928
  %v2_1000a94c = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_1000a94c, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268478816, i32* @lr, align 4
  %v3_1000a95c = call i32 @function_100093f4(i32 0, i32 %v2_1000a928, i32 %v2_1000a94c)
  store i32 %v3_1000a95c, i32* %r3.global-to-local, align 4
  %v3_1000a960 = icmp eq i32 %v3_1000a95c, 0
  br i1 %v3_1000a960, label %dec_label_pc_1000a968, label %dec_label_pc_1000aaa0

dec_label_pc_1000a968:                            ; preds = %dec_label_pc_1000a94c
  store i32 %v2_1000a94c, i32* %r3.global-to-local, align 4
  %v2_1000a970 = call i32 @function_10009f78(i32 %v2_1000a94c, i32 17)
  store i32 %v2_1000a970, i32* %r3.global-to-local, align 4
  %v3_1000a974 = icmp eq i32 %v2_1000a970, 0
  br i1 %v3_1000a974, label %dec_label_pc_1000a994.lr.ph, label %dec_label_pc_1000aa60

dec_label_pc_1000a994.lr.ph:                      ; preds = %dec_label_pc_1000a968
  store i32 %v2_1000a908, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000a91443, align 4
  %v0_1000a99833 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a99834 = add i32 %v0_1000a99833, -1
  store i32 %v1_1000a99834, i32* %r11.global-to-local, align 4
  %v1_1000a99c35 = mul i32 %v1_1000a99834, 4
  %v1_1000a9a036 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a9a037 = add i32 %v1_1000a9a036, %v1_1000a99c35
  %v0_1000a9a438 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a9a439 = add i32 %v0_1000a9a438, -1
  store i32 %v1_1000a9a439, i32* %ctr.global-to-local, align 4
  %v2_1000a9a440 = icmp eq i32 %v1_1000a9a439, 0
  br i1 %v2_1000a9a440, label %dec_label_pc_1000a9a8, label %dec_label_pc_1000a994.dec_label_pc_1000a994_crit_edge

dec_label_pc_1000a994.dec_label_pc_1000a994_crit_edge: ; preds = %dec_label_pc_1000a994.lr.ph, %dec_label_pc_1000a994.dec_label_pc_1000a994_crit_edge
  %v2_1000a9a041 = phi i32 [ %v2_1000a9a0, %dec_label_pc_1000a994.dec_label_pc_1000a994_crit_edge ], [ %v2_1000a9a037, %dec_label_pc_1000a994.lr.ph ]
  %v0_1000a994.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a994 = add i32 %v2_1000a9a041, 8
  %v3_1000a994 = inttoptr i32 %v2_1000a994 to i32*
  store i32 %v0_1000a994.pre, i32* %v3_1000a994, align 4
  %v0_1000a998 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a998 = add i32 %v0_1000a998, -1
  store i32 %v1_1000a998, i32* %r11.global-to-local, align 4
  %v1_1000a99c = mul i32 %v1_1000a998, 4
  %v1_1000a9a0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a9a0 = add i32 %v1_1000a9a0, %v1_1000a99c
  %v0_1000a9a4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a9a4 = add i32 %v0_1000a9a4, -1
  store i32 %v1_1000a9a4, i32* %ctr.global-to-local, align 4
  %v2_1000a9a4 = icmp eq i32 %v1_1000a9a4, 0
  br i1 %v2_1000a9a4, label %dec_label_pc_1000a9a8, label %dec_label_pc_1000a994.dec_label_pc_1000a994_crit_edge

dec_label_pc_1000a9a8:                            ; preds = %dec_label_pc_1000a994.dec_label_pc_1000a994_crit_edge, %dec_label_pc_1000a994.lr.ph
  store i32 %v2_1000a928, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000a9b0 = call i32 @function_10009fa0()
  store i32 %v0_1000a9b0, i32* %r3.global-to-local, align 4
  %v1_1000a9b4 = icmp slt i32 %v0_1000a9b0, 0
  br i1 %v1_1000a9b4, label %dec_label_pc_1000aaa0, label %dec_label_pc_1000a9bc

dec_label_pc_1000a9bc:                            ; preds = %dec_label_pc_1000a9a8
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000a9c4 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268478924, i32* @lr, align 4
  %v4_1000a9c8 = call i32 @function_1000b730(i32 17, i32* null, i32 %v2_1000a9c4)
  store i32 %v4_1000a9c8, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000a9c8, -1
  br i1 %tmp30, label %dec_label_pc_1000a9fc, label %dec_label_pc_1000a9d4

dec_label_pc_1000a9d4:                            ; preds = %dec_label_pc_1000a9bc
  %v0_1000a9d4 = call i32 @function_100097b8()
  store i32 %v0_1000a9d4, i32* %r3.global-to-local, align 4
  %v1_1000a9dc = inttoptr i32 %v0_1000a9d4 to i32*
  %v2_1000a9dc = load i32, i32* %v1_1000a9dc, align 4
  store i32 %v2_1000a9dc, i32* @r28, align 4
  store i32 %v0_1000a9d4, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268478960, i32* @lr, align 4
  %v3_1000a9ec = call i32 @function_100093f4(i32 2, i32 %v2_1000a94c, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1000a9f4 = load i32, i32* @r28, align 4
  %v1_1000a9f4 = load i32, i32* @r29, align 4
  %v2_1000a9f4 = inttoptr i32 %v1_1000a9f4 to i32*
  store i32 %v0_1000a9f4, i32* %v2_1000a9f4, align 4
  %v0_1000aab4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aaa4

dec_label_pc_1000a9fc:                            ; preds = %dec_label_pc_1000a9bc
  %v3_1000a9fc = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1000a94c, i32* @r28, align 4
  %v3_1000aa08 = icmp eq i32 %v3_1000a9fc, 1
  br i1 %v3_1000aa08, label %dec_label_pc_1000aa10, label %dec_label_pc_1000aa44

dec_label_pc_1000aa10:                            ; preds = %dec_label_pc_1000a9fc
  store i32 %v2_1000a908, i32* %r3.global-to-local, align 4
  store i32 268479004, i32* @lr, align 4
  %v2_1000aa18 = call i32 @function_1000b324(i32 %v2_1000a908, i32 %v2_1000a908)
  store i32 %v2_1000aa18, i32* %r3.global-to-local, align 4
  store i32 %v2_1000aa18, i32* @r31, align 4
  %v0_1000aa20 = call i32 @function_100097b8()
  store i32 %v0_1000aa20, i32* %r3.global-to-local, align 4
  store i32 %v0_1000aa20, i32* @r29, align 4
  %v1_1000aa30 = inttoptr i32 %v0_1000aa20 to i32*
  %v2_1000aa30 = load i32, i32* %v1_1000aa30, align 4
  store i32 %v2_1000aa30, i32* @r28, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268479036, i32* @lr, align 4
  %v3_1000aa38 = call i32 @function_100093f4(i32 2, i32 %v2_1000a94c, i32 0)
  store i32 %v3_1000aa38, i32* %r3.global-to-local, align 4
  %v0_1000aa3c = load i32, i32* @r28, align 4
  %v1_1000aa3c = load i32, i32* @r29, align 4
  %v2_1000aa3c = inttoptr i32 %v1_1000aa3c to i32*
  store i32 %v0_1000aa3c, i32* %v2_1000aa3c, align 4
  %v0_1000aa6c.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000aa6c

dec_label_pc_1000aa44:                            ; preds = %dec_label_pc_1000a9fc
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268479060, i32* @lr, align 4
  %v3_1000aa50 = call i32 @function_100093f4(i32 2, i32 %v2_1000a94c, i32 0)
  br label %dec_label_pc_1000aa60

dec_label_pc_1000aa60:                            ; preds = %dec_label_pc_1000a968, %dec_label_pc_1000aa44
  store i32 %v2_1000a908, i32* %r3.global-to-local, align 4
  store i32 268479080, i32* @lr, align 4
  %v2_1000aa64 = call i32 @function_1000b324(i32 %v2_1000a908, i32 %v2_1000a908)
  store i32 %v2_1000aa64, i32* %r3.global-to-local, align 4
  store i32 %v2_1000aa64, i32* @r31, align 4
  br label %dec_label_pc_1000aa6c

dec_label_pc_1000aa6c:                            ; preds = %dec_label_pc_1000aa10, %dec_label_pc_1000aa60
  %v0_1000aa6c = phi i32 [ %v0_1000aa6c.pr, %dec_label_pc_1000aa10 ], [ %v2_1000aa64, %dec_label_pc_1000aa60 ]
  %v3_1000aa6c = icmp eq i32 %v0_1000aa6c, 0
  br i1 %v3_1000aa6c, label %dec_label_pc_1000aa98, label %dec_label_pc_1000aa74

dec_label_pc_1000aa74:                            ; preds = %dec_label_pc_1000aa6c
  %v3_1000aa84 = load i32, i32* %stack_var_-440, align 4
  %v0_1000aa88 = call i32 @__asm_mfcr()
  store i32 %v0_1000aa88, i32* %r3.global-to-local, align 4
  %v1_1000aa8c = call i32 @__asm_rlwinm(i32 %v0_1000aa88, i32 30, i32 31, i32 31)
  %v2_1000aa90 = add i32 %v3_1000aa84, %v1_1000aa8c
  store i32 %v2_1000aa90, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aaa4

dec_label_pc_1000aa98:                            ; preds = %dec_label_pc_1000aa6c, %dec_label_pc_1000a8e4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aaa4

dec_label_pc_1000aaa0:                            ; preds = %dec_label_pc_1000a94c, %dec_label_pc_1000a9a8, %dec_label_pc_1000a928
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aaa4

dec_label_pc_1000aaa4:                            ; preds = %dec_label_pc_1000aa98, %dec_label_pc_1000aa74, %dec_label_pc_1000a9d4, %dec_label_pc_1000aaa0
  %v0_1000aab4 = phi i32 [ 0, %dec_label_pc_1000aa98 ], [ %v2_1000aa90, %dec_label_pc_1000aa74 ], [ %v0_1000aab4.pre, %dec_label_pc_1000a9d4 ], [ -1, %dec_label_pc_1000aaa0 ]
  ret i32 %v0_1000aab4

; uselistorder directives
  uselistorder i32 %v1_1000a9a4, { 1, 0 }
  uselistorder i32 %v2_1000a94c, { 2, 1, 3, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_1000a924, { 1, 0 }
  uselistorder i32 %v2_1000a908, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 5, 7, 6, 1, 8, 2, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20, 3, 21, 22, 4, 23, 24, 0 }
  uselistorder i32* %r11.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32, i32)* @function_1000b324, { 1, 0 }
  uselistorder i32 17, { 2, 37, 38, 3, 39, 4, 19, 20, 5, 6, 21, 22, 23, 7, 24, 25, 26, 8, 9, 10, 11, 12, 13, 14, 27, 15, 28, 29, 30, 16, 17, 18, 31, 0, 32, 1, 33, 34, 35, 36 }
  uselistorder label %dec_label_pc_1000aaa4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000aaa0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000aa6c, { 1, 0 }
  uselistorder label %dec_label_pc_1000aa60, { 1, 0 }
  uselistorder label %dec_label_pc_1000a994.dec_label_pc_1000a994_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a914.dec_label_pc_1000a914_crit_edge, { 1, 0 }
}

define i32 @function_1000aab8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ab08:
  %v3_1000ab0c = load i32, i32* @global_var_1001c250.354, align 4
  %v3_1000ab10 = icmp eq i32 %v3_1000ab0c, 0
  br i1 %v3_1000ab10, label %dec_label_pc_1000ab20, label %dec_label_pc_1000ab18

dec_label_pc_1000ab18:                            ; preds = %dec_label_pc_1000ab08
  %v2_1000ab1c = load i32, i32* @r4, align 4
  %v3_1000ab1c = call i32 @unknown_0(i32 268566528, i32 %v2_1000ab1c)
  store i32 %v3_1000ab1c, i32* @r3, align 4
  br label %dec_label_pc_1000ab20

dec_label_pc_1000ab20:                            ; preds = %dec_label_pc_1000ab08, %dec_label_pc_1000ab18
  %v3_1000ab24 = load i32, i32* @global_var_1001c254.355, align 4
  %v3_1000ab28 = icmp eq i32 %v3_1000ab24, 0
  br i1 %v3_1000ab28, label %dec_label_pc_1000ab20.dec_label_pc_1000ab38_crit_edge, label %dec_label_pc_1000ab30

dec_label_pc_1000ab20.dec_label_pc_1000ab38_crit_edge: ; preds = %dec_label_pc_1000ab20
  %v0_1000ab48.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000ab38

dec_label_pc_1000ab30:                            ; preds = %dec_label_pc_1000ab20
  %v2_1000ab34 = load i32, i32* @r4, align 4
  %v3_1000ab34 = call i32 @unknown_0(i32 268566528, i32 %v2_1000ab34)
  br label %dec_label_pc_1000ab38

dec_label_pc_1000ab38:                            ; preds = %dec_label_pc_1000ab20.dec_label_pc_1000ab38_crit_edge, %dec_label_pc_1000ab30
  %v0_1000ab48 = phi i32 [ %v0_1000ab48.pre, %dec_label_pc_1000ab20.dec_label_pc_1000ab38_crit_edge ], [ %v3_1000ab34, %dec_label_pc_1000ab30 ]
  ret i32 %v0_1000ab48

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000ab38, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab20, { 1, 0 }
}

define i32 @function_1000ab4c() local_unnamed_addr {
dec_label_pc_1000ab4c:
  ret i32 0
}

define i32 @function_1000ab54(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ab54:
  %v0_1000ab54 = load i32, i32* @r3, align 4
  ret i32 %v0_1000ab54
}

define i32 @function_1000ab58(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ab58:
  store i32 %arg2, i32* @r30, align 4
  store i32 1, i32* @r4, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268479356, i32* @lr, align 4
  %v1_1000ab78 = call i32 @function_10008fb4(i32 1)
  %v3_1000ab7c = icmp eq i32 %v1_1000ab78, -1
  br i1 %v3_1000ab7c, label %dec_label_pc_1000ab84, label %dec_label_pc_1000aba4

dec_label_pc_1000ab84:                            ; preds = %dec_label_pc_1000ab58
  %v0_1000ab88 = load i32, i32* @r30, align 4
  store i32 268479384, i32* @lr, align 4
  %v3_1000ab94 = call i32 @function_10009204(i32 ptrtoint ([10 x i8]* @global_var_1000bd74.356 to i32), i32 %v0_1000ab88)
  %v1_1000ab98 = load i32, i32* @r31, align 4
  %v4_1000ab98 = icmp eq i32 %v3_1000ab94, %v1_1000ab98
  br i1 %v4_1000ab98, label %dec_label_pc_1000aba4, label %dec_label_pc_1000aba0

dec_label_pc_1000aba0:                            ; preds = %dec_label_pc_1000ab84
  %v1_1000aba0 = call i32 @function_1000b7f4(i32 %v3_1000ab94)
  br label %dec_label_pc_1000aba4

dec_label_pc_1000aba4:                            ; preds = %dec_label_pc_1000ab58, %dec_label_pc_1000ab84, %dec_label_pc_1000aba0
  %v0_1000abb4 = phi i32 [ %v1_1000ab78, %dec_label_pc_1000ab58 ], [ %v3_1000ab94, %dec_label_pc_1000ab84 ], [ %v1_1000aba0, %dec_label_pc_1000aba0 ]
  ret i32 %v0_1000abb4

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10009204, { 0, 4, 9, 1, 8, 7, 6, 5, 3, 2 }
  uselistorder i32 (i32)* @function_10008fb4, { 0, 5, 13, 12, 15, 14, 9, 8, 11, 10, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1000aba4, { 2, 1, 0 }
}

define i32 @function_1000abb8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000abb8:
  %v3_1000abd8 = load i32, i32* @global_var_1001c258.357, align 4
  %v3_1000abdc = icmp eq i32 %v3_1000abd8, 0
  br i1 %v3_1000abdc, label %dec_label_pc_1000ac00, label %dec_label_pc_1000ac24

dec_label_pc_1000ac00:                            ; preds = %dec_label_pc_1000abb8
  store i32 1, i32* @global_var_1001c258.357, align 4
  store i32 4096, i32* @global_var_1001c24c.339, align 4
  br label %dec_label_pc_1000ac24

dec_label_pc_1000ac24:                            ; preds = %dec_label_pc_1000ac00, %dec_label_pc_1000abb8
  %v0_1000ac34 = load i32, i32* @r3, align 4
  ret i32 %v0_1000ac34
}

define i32 @function_1000ac38(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000ac38:
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000ac50 = mul i32 %arg2, 4
  %v2_1000ac54 = add i32 %tmp, %v1_1000ac50
  %v0_1000ac58 = load i32, i32* @r9, align 4
  store i32 %v0_1000ac58, i32* @global_var_1001c244.359, align 4
  %v1_1000ac5c = add i32 %v2_1000ac54, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_1000ac5c, i32* @global_var_1001c248.360, align 4
  store i32 %arg6, i32* @global_var_1001c254.355, align 4
  store i32 %arg1, i32* %r25.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_1000ac7c = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* %r27.global-to-local, align 4
  %v4_1000ac84 = icmp eq i32 %v1_1000ac5c, %v2_1000ac7c
  br i1 %v4_1000ac84, label %dec_label_pc_1000ac8c, label %dec_label_pc_1000ac90

dec_label_pc_1000ac8c:                            ; preds = %dec_label_pc_1000ac38
  store i32 %v2_1000ac54, i32* @global_var_1001c248.360, align 4
  br label %dec_label_pc_1000ac90

dec_label_pc_1000ac90:                            ; preds = %dec_label_pc_1000ac38, %dec_label_pc_1000ac8c
  %v2_1000ac90 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268479648, i32* @lr, align 4
  %v3_1000ac9c = call i32 @function_100098a0(i32 %v2_1000ac90, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001c248.360, align 4
  br label %dec_label_pc_1000acac

dec_label_pc_1000acac:                            ; preds = %dec_label_pc_1000acac, %dec_label_pc_1000ac90
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000ac90 ], [ %v1_1000acb0, %dec_label_pc_1000acac ]
  %v1_1000acac = inttoptr i32 %storemerge to i32*
  %v2_1000acac = load i32, i32* %v1_1000acac, align 4
  %v1_1000acb0 = add i32 %storemerge, 4
  %v3_1000acb4 = icmp eq i32 %v2_1000acac, 0
  br i1 %v3_1000acb4, label %dec_label_pc_1000acbc, label %dec_label_pc_1000acac

dec_label_pc_1000acbc:                            ; preds = %dec_label_pc_1000acac
  store i32 %v1_1000acb0, i32* %r29.global-to-local, align 4
  %v1_1000ace812 = inttoptr i32 %v1_1000acb0 to i32*
  %v2_1000ace813 = load i32, i32* %v1_1000ace812, align 4
  %v3_1000acec16 = icmp eq i32 %v2_1000ace813, 0
  br i1 %v3_1000acec16, label %dec_label_pc_1000acf4, label %dec_label_pc_1000acc4

dec_label_pc_1000acc4:                            ; preds = %dec_label_pc_1000acbc, %dec_label_pc_1000ace4
  %v0_1000acd8 = phi i32 [ %v1_1000ace4, %dec_label_pc_1000ace4 ], [ %v1_1000acb0, %dec_label_pc_1000acbc ]
  %v0_1000accc = phi i32 [ %v2_1000ace8, %dec_label_pc_1000ace4 ], [ %v2_1000ace813, %dec_label_pc_1000acbc ]
  %v2_1000acc4 = icmp ugt i32 %v0_1000accc, 14
  br i1 %v2_1000acc4, label %dec_label_pc_1000ace4, label %dec_label_pc_1000accc

dec_label_pc_1000accc:                            ; preds = %dec_label_pc_1000acc4
  %v1_1000accc = mul i32 %v0_1000accc, 8
  %v2_1000acd4 = add i32 %v1_1000accc, %v2_1000ac90
  store i32 %v2_1000acd4, i32* @r3, align 4
  store i32 %v0_1000acd8, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268479716, i32* @lr, align 4
  %v0_1000ace0 = call i32 @function_1000b5a0()
  %v0_1000ace4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000ace4

dec_label_pc_1000ace4:                            ; preds = %dec_label_pc_1000acc4, %dec_label_pc_1000accc
  %v0_1000ace4 = phi i32 [ %v0_1000acd8, %dec_label_pc_1000acc4 ], [ %v0_1000ace4.pre, %dec_label_pc_1000accc ]
  %v1_1000ace4 = add i32 %v0_1000ace4, 8
  store i32 %v1_1000ace4, i32* %r29.global-to-local, align 4
  %v1_1000ace8 = inttoptr i32 %v1_1000ace4 to i32*
  %v2_1000ace8 = load i32, i32* %v1_1000ace8, align 4
  %v3_1000acec = icmp eq i32 %v2_1000ace8, 0
  br i1 %v3_1000acec, label %dec_label_pc_1000acf4, label %dec_label_pc_1000acc4

dec_label_pc_1000acf4:                            ; preds = %dec_label_pc_1000ace4, %dec_label_pc_1000acbc
  %v1_1000acf8 = call i32 @function_1000b944(i32 %v2_1000ac90)
  store i32 %v1_1000acf8, i32* @r3, align 4
  store i32 268479744, i32* @lr, align 4
  %v1_1000acfc = call i32 @function_1000abb8(i32 %v1_1000acf8)
  %v3_1000ad04 = icmp eq i32 %tmp27, 0
  br i1 %v3_1000ad04, label %dec_label_pc_1000ad0c, label %dec_label_pc_1000ad10

dec_label_pc_1000ad0c:                            ; preds = %dec_label_pc_1000acf4
  br label %dec_label_pc_1000ad10

dec_label_pc_1000ad10:                            ; preds = %dec_label_pc_1000acf4, %dec_label_pc_1000ad0c
  %v0_1000ad18 = phi i32 [ %tmp27, %dec_label_pc_1000acf4 ], [ 4096, %dec_label_pc_1000ad0c ]
  store i32 %v0_1000ad18, i32* @global_var_1001c24c.339, align 4
  %v3_1000ad1c = icmp eq i32 %tmp26, -1
  br i1 %v3_1000ad1c, label %dec_label_pc_1000ad24, label %dec_label_pc_1000ad58

dec_label_pc_1000ad24:                            ; preds = %dec_label_pc_1000ad10
  store i32 268479784, i32* @lr, align 4
  %v1_1000ad24 = call i32 @function_1000b25c(i32 268566528)
  store i32 %v1_1000ad24, i32* %r29.global-to-local, align 4
  store i32 268479792, i32* @lr, align 4
  %v0_1000ad2c = call i32 @function_1000b1cc()
  %v4_1000ad30 = icmp eq i32 %v1_1000ad24, %v0_1000ad2c
  br i1 %v4_1000ad30, label %dec_label_pc_1000ad38, label %dec_label_pc_1000ad74

dec_label_pc_1000ad38:                            ; preds = %dec_label_pc_1000ad24
  store i32 268479804, i32* @lr, align 4
  %v1_1000ad38 = call i32 @function_1000b214(i32 %v0_1000ad2c)
  store i32 %v1_1000ad38, i32* %r29.global-to-local, align 4
  store i32 268479812, i32* @lr, align 4
  %v0_1000ad40 = call i32 @function_1000b184()
  %v4_1000ad44 = icmp eq i32 %v1_1000ad38, %v0_1000ad40
  br i1 %v4_1000ad44, label %dec_label_pc_1000ad4c.thread, label %dec_label_pc_1000ad74

dec_label_pc_1000ad4c.thread:                     ; preds = %dec_label_pc_1000ad38
  br label %dec_label_pc_1000ada4

dec_label_pc_1000ad58:                            ; preds = %dec_label_pc_1000ad10
  %v4_1000ad5c = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000ad5c, label %dec_label_pc_1000ad64, label %dec_label_pc_1000ad74

dec_label_pc_1000ad64:                            ; preds = %dec_label_pc_1000ad58
  br label %dec_label_pc_1000ad74

dec_label_pc_1000ad74:                            ; preds = %dec_label_pc_1000ad64, %dec_label_pc_1000ad58, %dec_label_pc_1000ad38, %dec_label_pc_1000ad24
  store i32 268479876, i32* @lr, align 4
  %v2_1000ad80 = call i32 @function_1000ab58(i32 0, i32 32768)
  store i32 268479892, i32* @lr, align 4
  %v2_1000ad90 = call i32 @function_1000ab58(i32 1, i32 32770)
  store i32 268479908, i32* @lr, align 4
  %v2_1000ada0 = call i32 @function_1000ab58(i32 2, i32 32770)
  br label %dec_label_pc_1000ada4

dec_label_pc_1000ada4:                            ; preds = %dec_label_pc_1000ad4c.thread, %dec_label_pc_1000ad74
  %v0_1000adb0 = load i32, i32* @r30, align 4
  %v1_1000adb0 = inttoptr i32 %v0_1000adb0 to i32*
  %v2_1000adb0 = load i32, i32* %v1_1000adb0, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000adb0, i32* inttoptr (i32 268550644 to i32*), align 4
  %v0_1000add0 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000add0, i32* @global_var_1001c250.354, align 4
  br i1 false, label %dec_label_pc_1000add8, label %dec_label_pc_1000ae50

dec_label_pc_1000add8:                            ; preds = %dec_label_pc_1000ada4, %dec_label_pc_1000add8
  br i1 undef, label %dec_label_pc_1000add8, label %dec_label_pc_1000ae50

dec_label_pc_1000ae50:                            ; preds = %dec_label_pc_1000add8, %dec_label_pc_1000ada4
  %v0_1000adfc = load i32, i32* %r28.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000adfc)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000ae60 = call i32 @function_100097b8()
  %v2_1000ae68 = inttoptr i32 %v0_1000ae60 to i32*
  store i32 0, i32* %v2_1000ae68, align 4
  %v0_1000ae94 = load i32, i32* %r25.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000ae94)
  %v0_1000aea0 = call i32 @function_1000a860()
  ret i32 %v0_1000aea0

; uselistorder directives
  uselistorder i32 %v2_1000ace8, { 1, 0 }
  uselistorder i32 %v1_1000ace4, { 2, 1, 0 }
  uselistorder i32 %v1_1000acb0, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000ac90, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 6, 7, 1, 2, 4, 3, 0, 5 }
  uselistorder i32 ()* @function_1000a860, { 0, 4, 3, 2, 1 }
  uselistorder i1 false, { 0, 5, 6, 7, 1, 2, 3, 4, 8, 9 }
  uselistorder i32 (i32, i32)* @function_1000ab58, { 0, 2, 1 }
  uselistorder i32 4096, { 1, 3, 4, 0, 8, 5, 9, 6, 10, 7, 2 }
  uselistorder i32 14, { 32, 0, 2, 1, 12, 4, 3, 13, 9, 10, 14, 15, 11, 16, 17, 18, 5, 19, 20, 21, 6, 22, 23, 24, 25, 26, 7, 27, 28, 29, 30, 31, 8 }
  uselistorder i32* @r9, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11 }
  uselistorder label %dec_label_pc_1000add8, { 1, 0 }
  uselistorder label %dec_label_pc_1000ada4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad10, { 1, 0 }
  uselistorder label %dec_label_pc_1000ace4, { 1, 0 }
  uselistorder label %dec_label_pc_1000acc4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac90, { 1, 0 }
}

define i32 @function_1000aea4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000aea4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aebc = call i32 @__asm_mfcr()
  %v1_1000aec0 = and i32 %v0_1000aebc, 268435456
  %v3_1000aec0 = icmp eq i32 %v1_1000aec0, 0
  store i32 %v0_1000aebc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aec0, label %dec_label_pc_1000aed8, label %dec_label_pc_1000aecc

dec_label_pc_1000aecc:                            ; preds = %dec_label_pc_1000aea4
  %v0_1000aecc = call i32 @function_100097b8()
  %v0_1000aed0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aed0 = inttoptr i32 %v0_1000aecc to i32*
  store i32 %v0_1000aed0, i32* %v2_1000aed0, align 4
  br label %dec_label_pc_1000aed8

dec_label_pc_1000aed8:                            ; preds = %dec_label_pc_1000aea4, %dec_label_pc_1000aecc
  %v0_1000aee8 = phi i32 [ %v0_1000aebc, %dec_label_pc_1000aea4 ], [ -1, %dec_label_pc_1000aecc ]
  ret i32 %v0_1000aee8

; uselistorder directives
  uselistorder label %dec_label_pc_1000aed8, { 1, 0 }
}

define i32 @function_1000aeec(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000aeec:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000af00

dec_label_pc_1000af00:                            ; preds = %dec_label_pc_1000af00.backedge, %dec_label_pc_1000aeec
  %v0_1000af0c = call i32 @__asm_mfcr()
  %v1_1000af10 = and i32 %v0_1000af0c, 268435456
  %v3_1000af10 = icmp eq i32 %v1_1000af10, 0
  store i32 %v0_1000af0c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000af10, label %dec_label_pc_1000af00.backedge, label %dec_label_pc_1000af1c

dec_label_pc_1000af1c:                            ; preds = %dec_label_pc_1000af00
  %v0_1000af1c = call i32 @function_100097b8()
  %v0_1000af20 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000af20 = inttoptr i32 %v0_1000af1c to i32*
  store i32 %v0_1000af20, i32* %v2_1000af20, align 4
  br label %dec_label_pc_1000af00.backedge

dec_label_pc_1000af00.backedge:                   ; preds = %dec_label_pc_1000af1c, %dec_label_pc_1000af00
  br label %dec_label_pc_1000af00
}

define i32 @function_1000af28(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000af28:
  %stack_var_-104 = alloca i32, align 4
  %v2_1000af34 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000af34, i32* @r29, align 4
  %v0_1000af3c = load i32, i32* @r4, align 4
  store i32 %v0_1000af3c, i32* @r30, align 4
  %v0_1000af4c = call i32 @__asm_mfcr()
  %v1_1000af50 = and i32 %v0_1000af4c, 268435456
  %v3_1000af50 = icmp eq i32 %v1_1000af50, 0
  store i32 -1, i32* @r28, align 4
  store i32 %v0_1000af4c, i32* @r31, align 4
  br i1 %v3_1000af50, label %dec_label_pc_1000af6c, label %dec_label_pc_1000af60

dec_label_pc_1000af60:                            ; preds = %dec_label_pc_1000af28
  %v0_1000af60 = call i32 @function_100097b8()
  %v0_1000af64 = load i32, i32* @r31, align 4
  %v2_1000af64 = inttoptr i32 %v0_1000af60 to i32*
  store i32 %v0_1000af64, i32* %v2_1000af64, align 4
  br label %dec_label_pc_1000af84

dec_label_pc_1000af6c:                            ; preds = %dec_label_pc_1000af28
  %v3_1000af6c = icmp eq i32 %v0_1000af4c, 0
  store i32 %v0_1000af4c, i32* @r28, align 4
  br i1 %v3_1000af6c, label %dec_label_pc_1000af80, label %dec_label_pc_1000af84

dec_label_pc_1000af80:                            ; preds = %dec_label_pc_1000af6c
  %v0_1000af74 = load i32, i32* @r30, align 4
  store i32 268480388, i32* @lr, align 4
  %v4_1000af80 = call i32 @function_1000b4f0(i32* nonnull %stack_var_-104, i32 %v0_1000af74, i32 0)
  br label %dec_label_pc_1000af84

dec_label_pc_1000af84:                            ; preds = %dec_label_pc_1000af6c, %dec_label_pc_1000af60, %dec_label_pc_1000af80
  %v0_1000af88 = load i32, i32* @r28, align 4
  ret i32 %v0_1000af88

; uselistorder directives
  uselistorder i32 %v0_1000af4c, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000af84, { 2, 0, 1 }
}

define i32 @function_1000af9c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000af9c:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_1000afb0 = call i32 @function_1000b02c()
  store i32 %v0_1000afb0, i32* @r30, align 4
  %tmp18 = icmp slt i32 %v0_1000afb0, 1
  br i1 %tmp18, label %dec_label_pc_1000b014, label %dec_label_pc_1000afbc

dec_label_pc_1000afbc:                            ; preds = %dec_label_pc_1000af9c
  %v0_1000afbc = load i32, i32* @r31, align 4
  %v2_1000afbc = add i32 %v0_1000afbc, %v0_1000afb0
  store i32 %v2_1000afbc, i32* %r29.global-to-local, align 4
  %v2_1000b0043 = icmp ult i32 %v0_1000afbc, %v2_1000afbc
  br i1 %v2_1000b0043, label %dec_label_pc_1000afc4, label %dec_label_pc_1000b014

dec_label_pc_1000afc4:                            ; preds = %dec_label_pc_1000afbc, %dec_label_pc_1000afc4
  %v1_1000afd4 = phi i32 [ %v2_1000b000, %dec_label_pc_1000afc4 ], [ %v0_1000afbc, %dec_label_pc_1000afbc ]
  %v1_1000b00810.in = phi i32 [ %v2_1000b000, %dec_label_pc_1000afc4 ], [ %v0_1000afbc, %dec_label_pc_1000afbc ]
  %v1_1000b00c11.in = phi i32 [ %v2_1000b000, %dec_label_pc_1000afc4 ], [ %v0_1000afbc, %dec_label_pc_1000afbc ]
  %v1_1000b00810 = add i32 %v1_1000b00810.in, 11
  %v1_1000b00c11 = add i32 %v1_1000b00c11.in, 19
  %v1_1000afc4 = add i32 %v1_1000afd4, 4
  %v2_1000afc4 = inttoptr i32 %v1_1000afc4 to i32*
  %v3_1000afc4 = load i32, i32* %v2_1000afc4, align 4
  store i32 %v3_1000afc4, i32* %r11.global-to-local, align 4
  %v1_1000afc8 = add i32 %v1_1000afd4, 12
  %v2_1000afc8 = inttoptr i32 %v1_1000afc8 to i32*
  %v3_1000afc8 = load i32, i32* %v2_1000afc8, align 4
  %v1_1000afcc = add i32 %v1_1000afd4, 16
  %v2_1000afcc = inttoptr i32 %v1_1000afcc to i16*
  %v3_1000afcc = load i16, i16* %v2_1000afcc, align 2
  %v4_1000afcc = zext i16 %v3_1000afcc to i32
  store i32 %v4_1000afcc, i32* %r5.global-to-local, align 4
  %v1_1000afd0 = add i32 %v1_1000afd4, 18
  %v2_1000afd0 = inttoptr i32 %v1_1000afd0 to i8*
  %v3_1000afd0 = load i8, i8* %v2_1000afd0, align 1
  %v4_1000afd0 = zext i8 %v3_1000afd0 to i32
  store i32 %v4_1000afd0, i32* %r9.global-to-local, align 4
  store i32 %v3_1000afc8, i32* %v2_1000afc4, align 4
  %v0_1000afd8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000afd8 = load i32, i32* @r31, align 4
  %v2_1000afd8 = inttoptr i32 %v1_1000afd8 to i32*
  store i32 %v0_1000afd8, i32* %v2_1000afd8, align 4
  %v0_1000afdc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000afdc = trunc i32 %v0_1000afdc to i8
  %v2_1000afdc = load i32, i32* @r31, align 4
  %v3_1000afdc = add i32 %v2_1000afdc, 10
  %v4_1000afdc = inttoptr i32 %v3_1000afdc to i8*
  store i8 %v1_1000afdc, i8* %v4_1000afdc, align 1
  %v0_1000afe0 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000afe0 = trunc i32 %v0_1000afe0 to i16
  %v2_1000afe0 = load i32, i32* @r31, align 4
  %v3_1000afe0 = add i32 %v2_1000afe0, 8
  %v4_1000afe0 = inttoptr i32 %v3_1000afe0 to i16*
  store i16 %v1_1000afe0, i16* %v4_1000afe0, align 2
  %v0_1000afe4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000afe4 = add i32 %v0_1000afe4, -19
  store i32 %v1_1000afe4, i32* %r5.global-to-local, align 4
  store i32 268480492, i32* @lr, align 4
  %v3_1000afe8 = call i32 @function_100097fc(i32 %v1_1000b00810, i32 %v1_1000b00c11, i32 %v1_1000afe4)
  %v0_1000afec = load i32, i32* @r31, align 4
  %v1_1000afec = add i32 %v0_1000afec, 8
  %v2_1000afec = inttoptr i32 %v1_1000afec to i16*
  %v3_1000afec = load i16, i16* %v2_1000afec, align 2
  %v4_1000afec = zext i16 %v3_1000afec to i32
  store i32 %v4_1000afec, i32* %r5.global-to-local, align 4
  store i32 268480508, i32* @lr, align 4
  %v3_1000aff8 = call i32 @function_100097fc(i32 %v0_1000afec, i32 %v0_1000afec, i32 %v4_1000afec)
  %v0_1000affc = load i32, i32* @r31, align 4
  %v1_1000affc = add i32 %v0_1000affc, 8
  %v2_1000affc = inttoptr i32 %v1_1000affc to i16*
  %v3_1000affc = load i16, i16* %v2_1000affc, align 2
  %v4_1000affc = zext i16 %v3_1000affc to i32
  %v2_1000b000 = add i32 %v4_1000affc, %v0_1000affc
  store i32 %v2_1000b000, i32* @r31, align 4
  %v1_1000b004 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b004 = icmp ult i32 %v2_1000b000, %v1_1000b004
  br i1 %v2_1000b004, label %dec_label_pc_1000afc4, label %dec_label_pc_1000b004.dec_label_pc_1000b014.loopexit_crit_edge

dec_label_pc_1000b004.dec_label_pc_1000b014.loopexit_crit_edge: ; preds = %dec_label_pc_1000afc4
  %v0_1000b018.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000b014

dec_label_pc_1000b014:                            ; preds = %dec_label_pc_1000afbc, %dec_label_pc_1000b004.dec_label_pc_1000b014.loopexit_crit_edge, %dec_label_pc_1000af9c
  %v0_1000b018 = phi i32 [ %v0_1000afb0, %dec_label_pc_1000af9c ], [ %v0_1000b018.pre.pre, %dec_label_pc_1000b004.dec_label_pc_1000b014.loopexit_crit_edge ], [ %v0_1000afb0, %dec_label_pc_1000afbc ]
  ret i32 %v0_1000b018

; uselistorder directives
  uselistorder i32 %v2_1000b000, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v0_1000afec, { 1, 0, 2 }
  uselistorder i32 %v1_1000afd4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000afbc, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_1000afb0, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_100097fc, { 1, 0, 2 }
  uselistorder i32 11, { 0, 30, 29, 2, 10, 11, 12, 13, 14, 15, 3, 16, 1, 17, 18, 19, 20, 21, 22, 4, 23, 24, 5, 25, 26, 8, 6, 27, 28, 9, 7 }
  uselistorder label %dec_label_pc_1000b014, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000afc4, { 1, 0 }
}

define i32 @function_1000b02c() local_unnamed_addr {
dec_label_pc_1000b02c:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000b030 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000b030, i32* %stack_var_-48, align 4
  %v5_1000b030 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v4_1000b030, i32* %r9.global-to-local, align 4
  %v0_1000b03c = load i32, i32* @r5, align 4
  %v1_1000b03c = add i32 %v0_1000b03c, 30
  %v1_1000b040 = call i32 @__asm_rlwinm(i32 %v1_1000b03c, i32 0, i32 0, i32 27)
  store i32 %v5_1000b030, i32* @r31, align 4
  %v1_1000b050 = load i32, i32* @r1, align 4
  %v3_1000b050 = sub i32 %v1_1000b050, %v1_1000b040
  %v4_1000b050 = inttoptr i32 %v3_1000b050 to i32*
  store i32 %v4_1000b030, i32* %v4_1000b050, align 4
  %v0_1000b054 = load i32, i32* @r4, align 4
  store i32 %v0_1000b054, i32* @r28, align 4
  %v0_1000b058 = load i32, i32* @r5, align 4
  store i32 %v0_1000b058, i32* @r23, align 4
  %v0_1000b05c = load i32, i32* @r3, align 4
  store i32 %v0_1000b05c, i32* @r22, align 4
  %v1_1000b060 = add i32 %v3_1000b050, 23
  %v1_1000b064 = call i32 @__asm_rlwinm(i32 %v1_1000b060, i32 0, i32 0, i32 27)
  store i32 %v1_1000b064, i32* @r27, align 4
  store i32 %v1_1000b064, i32* %r4.global-to-local, align 4
  %v0_1000b074 = call i32 @__asm_mfcr()
  %v1_1000b078 = and i32 %v0_1000b074, 268435456
  store i32 %v1_1000b078, i32* %r9.global-to-local, align 4
  %v3_1000b078 = icmp eq i32 %v1_1000b078, 0
  store i32 %v0_1000b074, i32* %r30.global-to-local, align 4
  br i1 %v3_1000b078, label %dec_label_pc_1000b090, label %dec_label_pc_1000b084

dec_label_pc_1000b084:                            ; preds = %dec_label_pc_1000b02c
  %v0_1000b084 = call i32 @function_100097b8()
  %v0_1000b088 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000b088 = inttoptr i32 %v0_1000b084 to i32*
  store i32 %v0_1000b088, i32* %v2_1000b088, align 4
  br label %dec_label_pc_1000b09c

dec_label_pc_1000b090:                            ; preds = %dec_label_pc_1000b02c
  %v3_1000b090 = icmp eq i32 %v0_1000b074, -1
  store i32 %v0_1000b074, i32* %r24.global-to-local, align 4
  br i1 %v3_1000b090, label %dec_label_pc_1000b09c, label %dec_label_pc_1000b0a4

dec_label_pc_1000b09c:                            ; preds = %dec_label_pc_1000b090, %dec_label_pc_1000b084
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b168

dec_label_pc_1000b0a4:                            ; preds = %dec_label_pc_1000b090
  %v0_1000b0a4 = load i32, i32* @r28, align 4
  store i32 %v0_1000b0a4, i32* %r29.global-to-local, align 4
  store i32 %v1_1000b064, i32* %r30.global-to-local, align 4
  store i32 -1, i32* @r25, align 4
  store i32 -1, i32* %r26.global-to-local, align 4
  %v2_1000b14c12 = add i32 %v0_1000b074, %v1_1000b064
  %v1_1000b15013 = load i32, i32* @r23, align 4
  %v2_1000b15014 = add i32 %v1_1000b15013, %v0_1000b0a4
  store i32 %v2_1000b15014, i32* %r10.global-to-local, align 4
  %v2_1000b15415 = icmp ult i32 %v1_1000b064, %v2_1000b14c12
  %v1_1000b15817 = add i32 %v0_1000b0a4, 19
  store i32 %v1_1000b15817, i32* @r3, align 4
  %v1_1000b15c18 = add i32 %v1_1000b064, 19
  store i32 %v1_1000b15c18, i32* @r4, align 4
  br i1 %v2_1000b15415, label %dec_label_pc_1000b0b8, label %dec_label_pc_1000b164

dec_label_pc_1000b0b8:                            ; preds = %dec_label_pc_1000b0a4, %dec_label_pc_1000b100
  %v0_1000b0b819 = phi i32 [ %v2_1000b148, %dec_label_pc_1000b100 ], [ %v1_1000b064, %dec_label_pc_1000b0a4 ]
  %v1_1000b0b8 = add i32 %v0_1000b0b819, 16
  %v2_1000b0b8 = inttoptr i32 %v1_1000b0b8 to i16*
  %v3_1000b0b8 = load i16, i16* %v2_1000b0b8, align 2
  %v4_1000b0b8 = zext i16 %v3_1000b0b8 to i32
  %v1_1000b0bc = add nuw nsw i32 %v4_1000b0b8, 7
  store i32 %v1_1000b0bc, i32* %r9.global-to-local, align 4
  %v1_1000b0c0 = call i32 @__asm_rlwinm(i32 %v1_1000b0bc, i32 0, i32 0, i32 28)
  %v0_1000b0c4 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000b0c4 = add i32 %v1_1000b0c0, %v0_1000b0c4
  store i32 %v3_1000b0c4, i32* %r11.global-to-local, align 4
  %v1_1000b0c8 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000b0c8 = icmp ugt i32 %v3_1000b0c4, %v1_1000b0c8
  br i1 %v3_1000b0c8, label %dec_label_pc_1000b0d0, label %dec_label_pc_1000b100

dec_label_pc_1000b0d0:                            ; preds = %dec_label_pc_1000b0b8
  %v0_1000b0d0 = load i32, i32* @r22, align 4
  %v0_1000b0d4 = load i32, i32* @r25, align 4
  %v0_1000b0d8 = load i32, i32* %r26.global-to-local, align 4
  store i32 268480740, i32* @lr, align 4
  %v4_1000b0e0 = call i32 @function_1000b2a4(i32 %v0_1000b0d0, i32 %v0_1000b0d4, i32 %v0_1000b0d8, i32 0)
  %v0_1000b0e4 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b0e4 = load i32, i32* @r28, align 4
  %v4_1000b0e4 = icmp eq i32 %v0_1000b0e4, %v1_1000b0e4
  br i1 %v4_1000b0e4, label %dec_label_pc_1000b0ec, label %dec_label_pc_1000b164

dec_label_pc_1000b0ec:                            ; preds = %dec_label_pc_1000b0d0
  %v0_1000b0ec = call i32 @function_100097b8()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000b0f8 = inttoptr i32 %v0_1000b0ec to i32*
  store i32 22, i32* %v2_1000b0f8, align 4
  %v0_1000b16c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b168

dec_label_pc_1000b100:                            ; preds = %dec_label_pc_1000b0b8
  %v2_1000b0c0 = trunc i32 %v1_1000b0c0 to i16
  %v0_1000b100 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b100 = inttoptr i32 %v0_1000b100 to i32*
  %v2_1000b100 = load i32, i32* %v1_1000b100, align 4
  store i32 %v2_1000b100, i32* %r9.global-to-local, align 4
  %v1_1000b104 = add i32 %v0_1000b100, 4
  %v2_1000b104 = inttoptr i32 %v1_1000b104 to i32*
  %v3_1000b104 = load i32, i32* %v2_1000b104, align 4
  store i32 %v3_1000b104, i32* %r10.global-to-local, align 4
  %v1_1000b108 = add i32 %v0_1000b100, 8
  %v2_1000b108 = inttoptr i32 %v1_1000b108 to i32*
  %v3_1000b108 = load i32, i32* %v2_1000b108, align 4
  store i32 %v3_1000b108, i32* @r25, align 4
  %v1_1000b10c = add i32 %v0_1000b100, 12
  %v2_1000b10c = inttoptr i32 %v1_1000b10c to i32*
  %v3_1000b10c = load i32, i32* %v2_1000b10c, align 4
  store i32 %v3_1000b10c, i32* %r26.global-to-local, align 4
  %v2_1000b110 = inttoptr i32 %v0_1000b0c4 to i32*
  store i32 %v2_1000b100, i32* %v2_1000b110, align 4
  %v0_1000b114 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b114 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b114 = add i32 %v1_1000b114, 4
  %v3_1000b114 = inttoptr i32 %v2_1000b114 to i32*
  store i32 %v0_1000b114, i32* %v3_1000b114, align 4
  %v0_1000b118 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b118 = add i32 %v0_1000b118, 8
  %v2_1000b118 = inttoptr i32 %v1_1000b118 to i32*
  %v3_1000b118 = load i32, i32* %v2_1000b118, align 4
  store i32 %v3_1000b118, i32* %r9.global-to-local, align 4
  %v1_1000b11c = add i32 %v0_1000b118, 12
  %v2_1000b11c = inttoptr i32 %v1_1000b11c to i32*
  %v3_1000b11c = load i32, i32* %v2_1000b11c, align 4
  store i32 %v3_1000b11c, i32* %r10.global-to-local, align 4
  %v3_1000b120 = load i32, i32* %r29.global-to-local, align 4
  %v4_1000b120 = add i32 %v3_1000b120, 16
  %v5_1000b120 = inttoptr i32 %v4_1000b120 to i16*
  store i16 %v2_1000b0c0, i16* %v5_1000b120, align 2
  %v0_1000b124 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b124 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b124 = add i32 %v1_1000b124, 8
  %v3_1000b124 = inttoptr i32 %v2_1000b124 to i32*
  store i32 %v0_1000b124, i32* %v3_1000b124, align 4
  %v0_1000b128 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b128 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b128 = add i32 %v1_1000b128, 12
  %v3_1000b128 = inttoptr i32 %v2_1000b128 to i32*
  store i32 %v0_1000b128, i32* %v3_1000b128, align 4
  %v0_1000b12c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b12c = add i32 %v0_1000b12c, 18
  %v2_1000b12c = inttoptr i32 %v1_1000b12c to i8*
  %v3_1000b12c = load i8, i8* %v2_1000b12c, align 1
  %v2_1000b130 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000b130 = add i32 %v2_1000b130, 18
  %v4_1000b130 = inttoptr i32 %v3_1000b130 to i8*
  store i8 %v3_1000b12c, i8* %v4_1000b130, align 1
  %v0_1000b134 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000b134, i32* %r29.global-to-local, align 4
  %v0_1000b138 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b138 = add i32 %v0_1000b138, 16
  %v2_1000b138 = inttoptr i32 %v1_1000b138 to i16*
  %v3_1000b138 = load i16, i16* %v2_1000b138, align 2
  %v4_1000b138 = zext i16 %v3_1000b138 to i32
  %v1_1000b13c = add nsw i32 %v4_1000b138, -19
  store i32 %v1_1000b13c, i32* @r5, align 4
  store i32 268480836, i32* @lr, align 4
  %v0_1000b140 = call i32 @function_1000b5a0()
  %v0_1000b144 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b144 = add i32 %v0_1000b144, 16
  %v2_1000b144 = inttoptr i32 %v1_1000b144 to i16*
  %v3_1000b144 = load i16, i16* %v2_1000b144, align 2
  %v4_1000b144 = zext i16 %v3_1000b144 to i32
  %v2_1000b148 = add i32 %v4_1000b144, %v0_1000b144
  store i32 %v2_1000b148, i32* %r30.global-to-local, align 4
  %v1_1000b14c.pre = load i32, i32* %r24.global-to-local, align 4
  %v0_1000b150.pre = load i32, i32* @r28, align 4
  %v0_1000b158.pre = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b14c = add i32 %v1_1000b14c.pre, %v1_1000b064
  %v1_1000b150 = load i32, i32* @r23, align 4
  %v2_1000b150 = add i32 %v1_1000b150, %v0_1000b150.pre
  store i32 %v2_1000b150, i32* %r10.global-to-local, align 4
  %v2_1000b154 = icmp ult i32 %v2_1000b148, %v2_1000b14c
  %v1_1000b158 = add i32 %v0_1000b158.pre, 19
  store i32 %v1_1000b158, i32* @r3, align 4
  %v1_1000b15c = add i32 %v2_1000b148, 19
  store i32 %v1_1000b15c, i32* @r4, align 4
  br i1 %v2_1000b154, label %dec_label_pc_1000b0b8, label %dec_label_pc_1000b164

dec_label_pc_1000b164:                            ; preds = %dec_label_pc_1000b0a4, %dec_label_pc_1000b100, %dec_label_pc_1000b0d0
  %v1_1000b164 = phi i32 [ %v0_1000b0e4, %dec_label_pc_1000b0d0 ], [ %v0_1000b0a4, %dec_label_pc_1000b0a4 ], [ %v0_1000b158.pre, %dec_label_pc_1000b100 ]
  %v0_1000b164 = phi i32 [ %v1_1000b0e4, %dec_label_pc_1000b0d0 ], [ %v0_1000b0a4, %dec_label_pc_1000b0a4 ], [ %v0_1000b150.pre, %dec_label_pc_1000b100 ]
  %v2_1000b164 = sub i32 %v1_1000b164, %v0_1000b164
  store i32 %v2_1000b164, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b168

dec_label_pc_1000b168:                            ; preds = %dec_label_pc_1000b0ec, %dec_label_pc_1000b09c, %dec_label_pc_1000b164
  %v0_1000b16c = phi i32 [ %v0_1000b16c.pre, %dec_label_pc_1000b0ec ], [ -1, %dec_label_pc_1000b09c ], [ %v2_1000b164, %dec_label_pc_1000b164 ]
  %v0_1000b168 = load i32, i32* @r1, align 4
  %v1_1000b168 = inttoptr i32 %v0_1000b168 to i32*
  %v2_1000b168 = load i32, i32* %v1_1000b168, align 4
  store i32 %v2_1000b168, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000b16c

; uselistorder directives
  uselistorder i32 %v2_1000b148, { 2, 1, 3, 0 }
  uselistorder i32 %v0_1000b100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000b0c0, { 1, 0 }
  uselistorder i32 %v0_1000b074, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_1000b064, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 18, { 4, 5, 6, 0, 3, 7, 8, 1, 9, 2, 10, 11 }
  uselistorder i32 22, { 0, 1, 2, 3, 13, 4, 5, 6, 7, 14, 15, 16, 8, 9, 10, 11, 12 }
  uselistorder i32 7, { 28, 42, 10, 11, 21, 12, 13, 22, 14, 15, 23, 16, 17, 24, 25, 18, 26, 27, 0, 29, 1, 30, 2, 31, 32, 33, 3, 4, 34, 5, 35, 6, 36, 19, 37, 20, 7, 38, 39, 8, 40, 41, 9, 43 }
  uselistorder i32 19, { 23, 24, 1, 2, 0, 15, 16, 17, 3, 5, 4, 18, 7, 6, 19, 10, 11, 20, 21, 22, 12, 13, 14, 25, 26, 27, 28, 8, 9 }
  uselistorder i32* @r25, { 4, 5, 6, 1, 2, 3, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* @r27, { 25, 17, 18, 40, 41, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21, 19, 20, 1, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0, 38, 39, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 23, { 14, 9, 15, 0, 1, 10, 2, 3, 11, 12, 13, 4, 5, 6, 7, 8 }
  uselistorder i32* @r22, { 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* @r23, { 8, 0, 9, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* @r1, { 7, 8, 2, 3, 4, 1, 5, 0, 9, 6, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 16, 17, 18, 27, 23, 25, 24, 26, 0, 29, 28, 1, 2, 3, 21, 22, 19, 20, 4, 5, 6, 7, 8, 9, 15, 10, 12, 13, 11, 14, 30 }
  uselistorder i32 27, { 4, 5, 6, 0, 7, 1, 8, 2, 9, 3, 10, 11 }
  uselistorder i32 30, { 6, 7, 3, 2, 1, 0, 4, 5 }
  uselistorder label %dec_label_pc_1000b168, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b164, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000b0b8, { 1, 0 }
}

define i32 @function_1000b184() local_unnamed_addr {
dec_label_pc_1000b184:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b19c = call i32 @__asm_mfcr()
  %v1_1000b1a0 = and i32 %v0_1000b19c, 268435456
  %v3_1000b1a0 = icmp eq i32 %v1_1000b1a0, 0
  store i32 %v0_1000b19c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b1a0, label %dec_label_pc_1000b1b8, label %dec_label_pc_1000b1ac

dec_label_pc_1000b1ac:                            ; preds = %dec_label_pc_1000b184
  %v0_1000b1ac = call i32 @function_100097b8()
  %v0_1000b1b0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b1b0 = inttoptr i32 %v0_1000b1ac to i32*
  store i32 %v0_1000b1b0, i32* %v2_1000b1b0, align 4
  br label %dec_label_pc_1000b1b8

dec_label_pc_1000b1b8:                            ; preds = %dec_label_pc_1000b184, %dec_label_pc_1000b1ac
  %v0_1000b1c8 = phi i32 [ %v0_1000b19c, %dec_label_pc_1000b184 ], [ -1, %dec_label_pc_1000b1ac ]
  ret i32 %v0_1000b1c8

; uselistorder directives
  uselistorder label %dec_label_pc_1000b1b8, { 1, 0 }
}

define i32 @function_1000b1cc() local_unnamed_addr {
dec_label_pc_1000b1cc:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b1e4 = call i32 @__asm_mfcr()
  %v1_1000b1e8 = and i32 %v0_1000b1e4, 268435456
  %v3_1000b1e8 = icmp eq i32 %v1_1000b1e8, 0
  store i32 %v0_1000b1e4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b1e8, label %dec_label_pc_1000b200, label %dec_label_pc_1000b1f4

dec_label_pc_1000b1f4:                            ; preds = %dec_label_pc_1000b1cc
  %v0_1000b1f4 = call i32 @function_100097b8()
  %v0_1000b1f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b1f8 = inttoptr i32 %v0_1000b1f4 to i32*
  store i32 %v0_1000b1f8, i32* %v2_1000b1f8, align 4
  br label %dec_label_pc_1000b200

dec_label_pc_1000b200:                            ; preds = %dec_label_pc_1000b1cc, %dec_label_pc_1000b1f4
  %v0_1000b210 = phi i32 [ %v0_1000b1e4, %dec_label_pc_1000b1cc ], [ -1, %dec_label_pc_1000b1f4 ]
  ret i32 %v0_1000b210

; uselistorder directives
  uselistorder label %dec_label_pc_1000b200, { 1, 0 }
}

define i32 @function_1000b214(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b214:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b22c = call i32 @__asm_mfcr()
  %v1_1000b230 = and i32 %v0_1000b22c, 268435456
  %v3_1000b230 = icmp eq i32 %v1_1000b230, 0
  store i32 %v0_1000b22c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b230, label %dec_label_pc_1000b248, label %dec_label_pc_1000b23c

dec_label_pc_1000b23c:                            ; preds = %dec_label_pc_1000b214
  %v0_1000b23c = call i32 @function_100097b8()
  %v0_1000b240 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b240 = inttoptr i32 %v0_1000b23c to i32*
  store i32 %v0_1000b240, i32* %v2_1000b240, align 4
  br label %dec_label_pc_1000b248

dec_label_pc_1000b248:                            ; preds = %dec_label_pc_1000b214, %dec_label_pc_1000b23c
  %v0_1000b258 = phi i32 [ %v0_1000b22c, %dec_label_pc_1000b214 ], [ -1, %dec_label_pc_1000b23c ]
  ret i32 %v0_1000b258

; uselistorder directives
  uselistorder label %dec_label_pc_1000b248, { 1, 0 }
}

define i32 @function_1000b25c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b25c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b274 = call i32 @__asm_mfcr()
  %v1_1000b278 = and i32 %v0_1000b274, 268435456
  %v3_1000b278 = icmp eq i32 %v1_1000b278, 0
  store i32 %v0_1000b274, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b278, label %dec_label_pc_1000b290, label %dec_label_pc_1000b284

dec_label_pc_1000b284:                            ; preds = %dec_label_pc_1000b25c
  %v0_1000b284 = call i32 @function_100097b8()
  %v0_1000b288 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b288 = inttoptr i32 %v0_1000b284 to i32*
  store i32 %v0_1000b288, i32* %v2_1000b288, align 4
  br label %dec_label_pc_1000b290

dec_label_pc_1000b290:                            ; preds = %dec_label_pc_1000b25c, %dec_label_pc_1000b284
  %v0_1000b2a0 = phi i32 [ %v0_1000b274, %dec_label_pc_1000b25c ], [ -1, %dec_label_pc_1000b284 ]
  ret i32 %v0_1000b2a0

; uselistorder directives
  uselistorder label %dec_label_pc_1000b290, { 1, 0 }
}

define i32 @function_1000b2a4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000b2a4:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000b2a4 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000b2d0 = call i32 @__asm_mfcr()
  %v1_1000b2d4 = and i32 %v0_1000b2d0, 268435456
  %v3_1000b2d4 = icmp eq i32 %v1_1000b2d4, 0
  store i32 %v0_1000b2d0, i32* %r31.global-to-local, align 4
  store i32 %v0_1000b2d0, i32* %r0.global-to-local, align 4
  br i1 %v3_1000b2d4, label %dec_label_pc_1000b2f8, label %dec_label_pc_1000b2e8

dec_label_pc_1000b2e8:                            ; preds = %dec_label_pc_1000b2a4
  %v0_1000b2e8 = call i32 @function_100097b8()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000b2f0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b2f0 = inttoptr i32 %v0_1000b2e8 to i32*
  store i32 %v0_1000b2f0, i32* %v2_1000b2f0, align 4
  %v0_1000b2fc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b2fc

dec_label_pc_1000b2f8:                            ; preds = %dec_label_pc_1000b2a4
  %v3_1000b2e0 = icmp eq i32 %v0_1000b2d0, 0
  br i1 %v3_1000b2e0, label %dec_label_pc_1000b308, label %dec_label_pc_1000b2fc

dec_label_pc_1000b2fc:                            ; preds = %dec_label_pc_1000b2f8, %dec_label_pc_1000b2e8
  %v0_1000b2fc = phi i32 [ %v0_1000b2d0, %dec_label_pc_1000b2f8 ], [ %v0_1000b2fc.pre, %dec_label_pc_1000b2e8 ]
  %tmp = icmp slt i32 %v0_1000b2fc, 0
  %v1_1000b300 = zext i1 %tmp to i32
  %v2_1000b300 = ashr i32 %v0_1000b2fc, 31
  %v3_1000b300 = and i32 %v2_1000b300, -2
  %v4_1000b300 = or i32 %v3_1000b300, %v1_1000b300
  br label %dec_label_pc_1000b310

dec_label_pc_1000b308:                            ; preds = %dec_label_pc_1000b2f8
  %v3_1000b308 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000b310

dec_label_pc_1000b310:                            ; preds = %dec_label_pc_1000b2fc, %dec_label_pc_1000b308
  %v0_1000b320 = phi i32 [ %v4_1000b300, %dec_label_pc_1000b2fc ], [ %v3_1000b308, %dec_label_pc_1000b308 ]
  store i32 %v0_1000b2a4, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b320

; uselistorder directives
  uselistorder i32 %v0_1000b2fc, { 1, 0 }
  uselistorder i32 %v0_1000b2d0, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 8, 7, 1, 0, 9, 10, 6, 11, 2, 12, 3, 13, 4, 5 }
  uselistorder label %dec_label_pc_1000b310, { 1, 0 }
}

define i32 @function_1000b324(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b324:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b33c = call i32 @__asm_mfcr()
  %v1_1000b340 = and i32 %v0_1000b33c, 268435456
  %v3_1000b340 = icmp eq i32 %v1_1000b340, 0
  store i32 %v0_1000b33c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b340, label %dec_label_pc_1000b358, label %dec_label_pc_1000b34c

dec_label_pc_1000b34c:                            ; preds = %dec_label_pc_1000b324
  %v0_1000b34c = call i32 @function_100097b8()
  %v0_1000b350 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b350 = inttoptr i32 %v0_1000b34c to i32*
  store i32 %v0_1000b350, i32* %v2_1000b350, align 4
  br label %dec_label_pc_1000b358

dec_label_pc_1000b358:                            ; preds = %dec_label_pc_1000b324, %dec_label_pc_1000b34c
  %v0_1000b368 = phi i32 [ %v0_1000b33c, %dec_label_pc_1000b324 ], [ -1, %dec_label_pc_1000b34c ]
  ret i32 %v0_1000b368

; uselistorder directives
  uselistorder label %dec_label_pc_1000b358, { 1, 0 }
}

define i32 @function_1000b36c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b36c:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000b388 = load i32, i32* @global_var_1001c270.365, align 4
  %v3_1000b38c = icmp eq i32 %v3_1000b388, 0
  br i1 %v3_1000b38c, label %dec_label_pc_1000b394, label %dec_label_pc_1000b3a0

dec_label_pc_1000b394:                            ; preds = %dec_label_pc_1000b36c
  store i32 268481432, i32* @lr, align 4
  %v1_1000b394 = call i32 @function_1000b960(i32 0)
  %v1_1000b398 = icmp slt i32 %v1_1000b394, 0
  br i1 %v1_1000b398, label %dec_label_pc_1000b3c0, label %dec_label_pc_1000b394.dec_label_pc_1000b3a0_crit_edge

dec_label_pc_1000b394.dec_label_pc_1000b3a0_crit_edge: ; preds = %dec_label_pc_1000b394
  %v0_1000b3a0.pre = load i32, i32* @r30, align 4
  %v3_1000b3a4.pre = load i32, i32* @global_var_1001c270.365, align 4
  br label %dec_label_pc_1000b3a0

dec_label_pc_1000b3a0:                            ; preds = %dec_label_pc_1000b394.dec_label_pc_1000b3a0_crit_edge, %dec_label_pc_1000b36c
  %v3_1000b3a4 = phi i32 [ %v3_1000b3a4.pre, %dec_label_pc_1000b394.dec_label_pc_1000b3a0_crit_edge ], [ %v3_1000b388, %dec_label_pc_1000b36c ]
  %v1_1000b3ac = phi i32 [ %v0_1000b3a0.pre, %dec_label_pc_1000b394.dec_label_pc_1000b3a0_crit_edge ], [ %arg1, %dec_label_pc_1000b36c ]
  %v3_1000b3a0 = icmp eq i32 %v1_1000b3ac, 0
  store i32 %v3_1000b3a4, i32* @r31, align 4
  br i1 %v3_1000b3a0, label %dec_label_pc_1000b3c4, label %dec_label_pc_1000b3b4

dec_label_pc_1000b3b4:                            ; preds = %dec_label_pc_1000b3a0
  %v2_1000b3ac = add i32 %v1_1000b3ac, %v3_1000b3a4
  store i32 268481464, i32* @lr, align 4
  %v1_1000b3b4 = call i32 @function_1000b960(i32 %v2_1000b3ac)
  %tmp6 = icmp sgt i32 %v1_1000b3b4, -1
  br i1 %tmp6, label %dec_label_pc_1000b3b4.dec_label_pc_1000b3c4_crit_edge, label %dec_label_pc_1000b3c0

dec_label_pc_1000b3b4.dec_label_pc_1000b3c4_crit_edge: ; preds = %dec_label_pc_1000b3b4
  %v0_1000b3c8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b3c4

dec_label_pc_1000b3c0:                            ; preds = %dec_label_pc_1000b3b4, %dec_label_pc_1000b394
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000b3c4

dec_label_pc_1000b3c4:                            ; preds = %dec_label_pc_1000b3b4.dec_label_pc_1000b3c4_crit_edge, %dec_label_pc_1000b3a0, %dec_label_pc_1000b3c0
  %v0_1000b3c8 = phi i32 [ %v0_1000b3c8.pre, %dec_label_pc_1000b3b4.dec_label_pc_1000b3c4_crit_edge ], [ %v3_1000b3a4, %dec_label_pc_1000b3a0 ], [ -1, %dec_label_pc_1000b3c0 ]
  ret i32 %v0_1000b3c8

; uselistorder directives
  uselistorder i32 %v3_1000b3a4, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000b960, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3c4, { 2, 0, 1 }
}

define i32 @function_1000b3dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b3dc:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b3f4 = call i32 @__asm_mfcr()
  %v1_1000b3f8 = and i32 %v0_1000b3f4, 268435456
  %v3_1000b3f8 = icmp eq i32 %v1_1000b3f8, 0
  store i32 %v0_1000b3f4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b3f8, label %dec_label_pc_1000b410, label %dec_label_pc_1000b404

dec_label_pc_1000b404:                            ; preds = %dec_label_pc_1000b3dc
  %v0_1000b404 = call i32 @function_100097b8()
  %v0_1000b408 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b408 = inttoptr i32 %v0_1000b404 to i32*
  store i32 %v0_1000b408, i32* %v2_1000b408, align 4
  br label %dec_label_pc_1000b410

dec_label_pc_1000b410:                            ; preds = %dec_label_pc_1000b3dc, %dec_label_pc_1000b404
  %v0_1000b420 = phi i32 [ %v0_1000b3f4, %dec_label_pc_1000b3dc ], [ -1, %dec_label_pc_1000b404 ]
  ret i32 %v0_1000b420

; uselistorder directives
  uselistorder label %dec_label_pc_1000b410, { 1, 0 }
}

define i32 @function_1000b424(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b424:
  %r10.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 268481612, i32* @lr, align 4
  %v3_1000b448 = call i32 @function_100098a0(i32 %arg2, i32 0, i32 104)
  %v2_1000b44c = load i32, i32* %arg1, align 4
  %v1_1000b450 = add i32 %tmp, 4
  %v2_1000b450 = inttoptr i32 %v1_1000b450 to i32*
  %v3_1000b450 = load i32, i32* %v2_1000b450, align 4
  store i32 %v3_1000b450, i32* %r10.global-to-local, align 4
  %v1_1000b454 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b454 = inttoptr i32 %v1_1000b454 to i32*
  store i32 %v2_1000b44c, i32* %v2_1000b454, align 4
  %v0_1000b458 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b458 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b458 = add i32 %v1_1000b458, 4
  %v3_1000b458 = inttoptr i32 %v2_1000b458 to i32*
  store i32 %v0_1000b458, i32* %v3_1000b458, align 4
  %v0_1000b45c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b45c = add i32 %v0_1000b45c, 8
  %v2_1000b45c = inttoptr i32 %v1_1000b45c to i32*
  %v3_1000b45c = load i32, i32* %v2_1000b45c, align 4
  %v1_1000b460 = add i32 %v0_1000b45c, 12
  %v2_1000b460 = inttoptr i32 %v1_1000b460 to i32*
  %v3_1000b460 = load i32, i32* %v2_1000b460, align 4
  store i32 %v3_1000b460, i32* %r10.global-to-local, align 4
  %v1_1000b464 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b464 = add i32 %v1_1000b464, 8
  %v3_1000b464 = inttoptr i32 %v2_1000b464 to i32*
  store i32 %v3_1000b45c, i32* %v3_1000b464, align 4
  %v0_1000b468 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b468 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b468 = add i32 %v1_1000b468, 12
  %v3_1000b468 = inttoptr i32 %v2_1000b468 to i32*
  store i32 %v0_1000b468, i32* %v3_1000b468, align 4
  %v0_1000b46c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b46c = add i32 %v0_1000b46c, 16
  %v2_1000b46c = inttoptr i32 %v1_1000b46c to i32*
  %v3_1000b46c = load i32, i32* %v2_1000b46c, align 4
  %v1_1000b470 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b470 = add i32 %v1_1000b470, 16
  %v3_1000b470 = inttoptr i32 %v2_1000b470 to i32*
  store i32 %v3_1000b46c, i32* %v3_1000b470, align 4
  %v0_1000b474 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b474 = add i32 %v0_1000b474, 20
  %v2_1000b474 = inttoptr i32 %v1_1000b474 to i32*
  %v3_1000b474 = load i32, i32* %v2_1000b474, align 4
  %v1_1000b478 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b478 = add i32 %v1_1000b478, 20
  %v3_1000b478 = inttoptr i32 %v2_1000b478 to i32*
  store i32 %v3_1000b474, i32* %v3_1000b478, align 4
  %v0_1000b47c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b47c = add i32 %v0_1000b47c, 24
  %v2_1000b47c = inttoptr i32 %v1_1000b47c to i32*
  %v3_1000b47c = load i32, i32* %v2_1000b47c, align 4
  %v1_1000b480 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b480 = add i32 %v1_1000b480, 24
  %v3_1000b480 = inttoptr i32 %v2_1000b480 to i32*
  store i32 %v3_1000b47c, i32* %v3_1000b480, align 4
  %v0_1000b484 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b484 = add i32 %v0_1000b484, 28
  %v2_1000b484 = inttoptr i32 %v1_1000b484 to i32*
  %v3_1000b484 = load i32, i32* %v2_1000b484, align 4
  %v1_1000b488 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b488 = add i32 %v1_1000b488, 28
  %v3_1000b488 = inttoptr i32 %v2_1000b488 to i32*
  store i32 %v3_1000b484, i32* %v3_1000b488, align 4
  %v0_1000b48c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b48c = add i32 %v0_1000b48c, 32
  %v2_1000b48c = inttoptr i32 %v1_1000b48c to i32*
  %v3_1000b48c = load i32, i32* %v2_1000b48c, align 4
  %v1_1000b490 = add i32 %v0_1000b48c, 36
  %v2_1000b490 = inttoptr i32 %v1_1000b490 to i32*
  %v3_1000b490 = load i32, i32* %v2_1000b490, align 4
  store i32 %v3_1000b490, i32* %r10.global-to-local, align 4
  %v1_1000b494 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b494 = add i32 %v1_1000b494, 32
  %v3_1000b494 = inttoptr i32 %v2_1000b494 to i32*
  store i32 %v3_1000b48c, i32* %v3_1000b494, align 4
  %v0_1000b498 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b498 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b498 = add i32 %v1_1000b498, 36
  %v3_1000b498 = inttoptr i32 %v2_1000b498 to i32*
  store i32 %v0_1000b498, i32* %v3_1000b498, align 4
  %v0_1000b49c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b49c = add i32 %v0_1000b49c, 48
  %v2_1000b49c = inttoptr i32 %v1_1000b49c to i32*
  %v3_1000b49c = load i32, i32* %v2_1000b49c, align 4
  %v1_1000b4a0 = add i32 %v0_1000b49c, 52
  %v2_1000b4a0 = inttoptr i32 %v1_1000b4a0 to i32*
  %v3_1000b4a0 = load i32, i32* %v2_1000b4a0, align 4
  store i32 %v3_1000b4a0, i32* %r10.global-to-local, align 4
  %v1_1000b4a4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4a4 = add i32 %v1_1000b4a4, 48
  %v3_1000b4a4 = inttoptr i32 %v2_1000b4a4 to i32*
  store i32 %v3_1000b49c, i32* %v3_1000b4a4, align 4
  %v0_1000b4a8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b4a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4a8 = add i32 %v1_1000b4a8, 52
  %v3_1000b4a8 = inttoptr i32 %v2_1000b4a8 to i32*
  store i32 %v0_1000b4a8, i32* %v3_1000b4a8, align 4
  %v0_1000b4ac = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b4ac = add i32 %v0_1000b4ac, 56
  %v2_1000b4ac = inttoptr i32 %v1_1000b4ac to i32*
  %v3_1000b4ac = load i32, i32* %v2_1000b4ac, align 4
  %v1_1000b4b0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4b0 = add i32 %v1_1000b4b0, 56
  %v3_1000b4b0 = inttoptr i32 %v2_1000b4b0 to i32*
  store i32 %v3_1000b4ac, i32* %v3_1000b4b0, align 4
  %v0_1000b4b4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b4b4 = add i32 %v0_1000b4b4, 64
  %v2_1000b4b4 = inttoptr i32 %v1_1000b4b4 to i32*
  %v3_1000b4b4 = load i32, i32* %v2_1000b4b4, align 4
  %v1_1000b4b8 = add i32 %v0_1000b4b4, 68
  %v2_1000b4b8 = inttoptr i32 %v1_1000b4b8 to i32*
  %v3_1000b4b8 = load i32, i32* %v2_1000b4b8, align 4
  store i32 %v3_1000b4b8, i32* %r10.global-to-local, align 4
  %v1_1000b4bc = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4bc = add i32 %v1_1000b4bc, 64
  %v3_1000b4bc = inttoptr i32 %v2_1000b4bc to i32*
  store i32 %v3_1000b4b4, i32* %v3_1000b4bc, align 4
  %v0_1000b4c0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b4c0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4c0 = add i32 %v1_1000b4c0, 68
  %v3_1000b4c0 = inttoptr i32 %v2_1000b4c0 to i32*
  store i32 %v0_1000b4c0, i32* %v3_1000b4c0, align 4
  %v0_1000b4c4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b4c4 = add i32 %v0_1000b4c4, 72
  %v2_1000b4c4 = inttoptr i32 %v1_1000b4c4 to i32*
  %v3_1000b4c4 = load i32, i32* %v2_1000b4c4, align 4
  %v1_1000b4c8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4c8 = add i32 %v1_1000b4c8, 72
  %v3_1000b4c8 = inttoptr i32 %v2_1000b4c8 to i32*
  store i32 %v3_1000b4c4, i32* %v3_1000b4c8, align 4
  %v0_1000b4cc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b4cc = add i32 %v0_1000b4cc, 80
  %v2_1000b4cc = inttoptr i32 %v1_1000b4cc to i32*
  %v3_1000b4cc = load i32, i32* %v2_1000b4cc, align 4
  %v1_1000b4d0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4d0 = add i32 %v1_1000b4d0, 80
  %v3_1000b4d0 = inttoptr i32 %v2_1000b4d0 to i32*
  store i32 %v3_1000b4cc, i32* %v3_1000b4d0, align 4
  %v0_1000b4d4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b4d4 = add i32 %v0_1000b4d4, 88
  %v2_1000b4d4 = inttoptr i32 %v1_1000b4d4 to i32*
  %v3_1000b4d4 = load i32, i32* %v2_1000b4d4, align 4
  %v1_1000b4d8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4d8 = add i32 %v1_1000b4d8, 88
  %v3_1000b4d8 = inttoptr i32 %v2_1000b4d8 to i32*
  store i32 %v3_1000b4d4, i32* %v3_1000b4d8, align 4
  ret i32 %v3_1000b448

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 16, 15, 18 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000b4f0(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b4f0:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000b4f4 = load i32, i32* @lr, align 4
  store i32 %v0_1000b4f4, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268481816, i32* @lr, align 4
  %v3_1000b514 = call i32 @function_100098a0(i32 %arg2, i32 0, i32 88)
  %v0_1000b518 = load i32, i32* @r28, align 4
  %v1_1000b518 = inttoptr i32 %v0_1000b518 to i32*
  %v2_1000b518 = load i32, i32* %v1_1000b518, align 4
  store i32 %v2_1000b518, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000b520 = load i32, i32* @r29, align 4
  %v2_1000b520 = add i32 %v1_1000b520, 4
  %v3_1000b520 = inttoptr i32 %v2_1000b520 to i32*
  store i32 %v2_1000b518, i32* %v3_1000b520, align 4
  %v0_1000b524 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b524 = load i32, i32* @r29, align 4
  %v2_1000b524 = inttoptr i32 %v1_1000b524 to i32*
  store i32 %v0_1000b524, i32* %v2_1000b524, align 4
  %v0_1000b528 = load i32, i32* @r28, align 4
  %v1_1000b528 = add i32 %v0_1000b528, 4
  %v2_1000b528 = inttoptr i32 %v1_1000b528 to i32*
  %v3_1000b528 = load i32, i32* %v2_1000b528, align 4
  store i32 %v3_1000b528, i32* %r0.global-to-local, align 4
  %v1_1000b52c = load i32, i32* @r29, align 4
  %v2_1000b52c = add i32 %v1_1000b52c, 12
  %v3_1000b52c = inttoptr i32 %v2_1000b52c to i32*
  store i32 %v3_1000b528, i32* %v3_1000b52c, align 4
  %v0_1000b530 = load i32, i32* @r28, align 4
  %v1_1000b530 = add i32 %v0_1000b530, 8
  %v2_1000b530 = inttoptr i32 %v1_1000b530 to i32*
  %v3_1000b530 = load i32, i32* %v2_1000b530, align 4
  store i32 %v3_1000b530, i32* %r0.global-to-local, align 4
  %v1_1000b534 = load i32, i32* @r29, align 4
  %v2_1000b534 = add i32 %v1_1000b534, 16
  %v3_1000b534 = inttoptr i32 %v2_1000b534 to i32*
  store i32 %v3_1000b530, i32* %v3_1000b534, align 4
  %v0_1000b538 = load i32, i32* @r28, align 4
  %v1_1000b538 = add i32 %v0_1000b538, 12
  %v2_1000b538 = inttoptr i32 %v1_1000b538 to i16*
  %v3_1000b538 = load i16, i16* %v2_1000b538, align 2
  %v4_1000b538 = zext i16 %v3_1000b538 to i32
  store i32 %v4_1000b538, i32* %r0.global-to-local, align 4
  %v1_1000b53c = load i32, i32* @r29, align 4
  %v2_1000b53c = add i32 %v1_1000b53c, 20
  %v3_1000b53c = inttoptr i32 %v2_1000b53c to i32*
  store i32 %v4_1000b538, i32* %v3_1000b53c, align 4
  %v0_1000b540 = load i32, i32* @r28, align 4
  %v1_1000b540 = add i32 %v0_1000b540, 16
  %v2_1000b540 = inttoptr i32 %v1_1000b540 to i32*
  %v3_1000b540 = load i32, i32* %v2_1000b540, align 4
  store i32 %v3_1000b540, i32* %r0.global-to-local, align 4
  %v1_1000b544 = load i32, i32* @r29, align 4
  %v2_1000b544 = add i32 %v1_1000b544, 24
  %v3_1000b544 = inttoptr i32 %v2_1000b544 to i32*
  store i32 %v3_1000b540, i32* %v3_1000b544, align 4
  %v0_1000b548 = load i32, i32* @r28, align 4
  %v1_1000b548 = add i32 %v0_1000b548, 20
  %v2_1000b548 = inttoptr i32 %v1_1000b548 to i32*
  %v3_1000b548 = load i32, i32* %v2_1000b548, align 4
  store i32 %v3_1000b548, i32* %r0.global-to-local, align 4
  %v1_1000b54c = load i32, i32* @r29, align 4
  %v2_1000b54c = add i32 %v1_1000b54c, 28
  %v3_1000b54c = inttoptr i32 %v2_1000b54c to i32*
  store i32 %v3_1000b548, i32* %v3_1000b54c, align 4
  %v0_1000b550 = load i32, i32* @r28, align 4
  %v1_1000b550 = add i32 %v0_1000b550, 24
  %v2_1000b550 = inttoptr i32 %v1_1000b550 to i32*
  %v3_1000b550 = load i32, i32* %v2_1000b550, align 4
  store i32 %v3_1000b550, i32* %r0.global-to-local, align 4
  %v0_1000b554 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b554 = load i32, i32* @r29, align 4
  %v2_1000b554 = add i32 %v1_1000b554, 32
  %v3_1000b554 = inttoptr i32 %v2_1000b554 to i32*
  store i32 %v0_1000b554, i32* %v3_1000b554, align 4
  %v0_1000b558 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b558 = load i32, i32* @r29, align 4
  %v2_1000b558 = add i32 %v1_1000b558, 36
  %v3_1000b558 = inttoptr i32 %v2_1000b558 to i32*
  store i32 %v0_1000b558, i32* %v3_1000b558, align 4
  %v0_1000b55c = load i32, i32* @r28, align 4
  %v1_1000b55c = add i32 %v0_1000b55c, 28
  %v2_1000b55c = inttoptr i32 %v1_1000b55c to i32*
  %v3_1000b55c = load i32, i32* %v2_1000b55c, align 4
  store i32 %v3_1000b55c, i32* %r0.global-to-local, align 4
  %v1_1000b560 = load i32, i32* @r29, align 4
  %v2_1000b560 = add i32 %v1_1000b560, 44
  %v3_1000b560 = inttoptr i32 %v2_1000b560 to i32*
  store i32 %v3_1000b55c, i32* %v3_1000b560, align 4
  %v0_1000b564 = load i32, i32* @r28, align 4
  %v1_1000b564 = add i32 %v0_1000b564, 32
  %v2_1000b564 = inttoptr i32 %v1_1000b564 to i32*
  %v3_1000b564 = load i32, i32* %v2_1000b564, align 4
  store i32 %v3_1000b564, i32* %r0.global-to-local, align 4
  %v1_1000b568 = load i32, i32* @r29, align 4
  %v2_1000b568 = add i32 %v1_1000b568, 48
  %v3_1000b568 = inttoptr i32 %v2_1000b568 to i32*
  store i32 %v3_1000b564, i32* %v3_1000b568, align 4
  %v0_1000b56c = load i32, i32* @r28, align 4
  %v1_1000b56c = add i32 %v0_1000b56c, 36
  %v2_1000b56c = inttoptr i32 %v1_1000b56c to i32*
  %v3_1000b56c = load i32, i32* %v2_1000b56c, align 4
  store i32 %v3_1000b56c, i32* %r0.global-to-local, align 4
  %v1_1000b570 = load i32, i32* @r29, align 4
  %v2_1000b570 = add i32 %v1_1000b570, 52
  %v3_1000b570 = inttoptr i32 %v2_1000b570 to i32*
  store i32 %v3_1000b56c, i32* %v3_1000b570, align 4
  %v0_1000b574 = load i32, i32* @r28, align 4
  %v1_1000b574 = add i32 %v0_1000b574, 40
  %v2_1000b574 = inttoptr i32 %v1_1000b574 to i32*
  %v3_1000b574 = load i32, i32* %v2_1000b574, align 4
  store i32 %v3_1000b574, i32* %r0.global-to-local, align 4
  %v1_1000b578 = load i32, i32* @r29, align 4
  %v2_1000b578 = add i32 %v1_1000b578, 56
  %v3_1000b578 = inttoptr i32 %v2_1000b578 to i32*
  store i32 %v3_1000b574, i32* %v3_1000b578, align 4
  %v0_1000b57c = load i32, i32* @r28, align 4
  %v1_1000b57c = add i32 %v0_1000b57c, 48
  %v2_1000b57c = inttoptr i32 %v1_1000b57c to i32*
  %v3_1000b57c = load i32, i32* %v2_1000b57c, align 4
  store i32 %v3_1000b57c, i32* %r0.global-to-local, align 4
  %v1_1000b580 = load i32, i32* @r29, align 4
  %v2_1000b580 = add i32 %v1_1000b580, 64
  %v3_1000b580 = inttoptr i32 %v2_1000b580 to i32*
  store i32 %v3_1000b57c, i32* %v3_1000b580, align 4
  %v0_1000b584 = load i32, i32* @r28, align 4
  %v1_1000b584 = add i32 %v0_1000b584, 56
  %v2_1000b584 = inttoptr i32 %v1_1000b584 to i32*
  %v3_1000b584 = load i32, i32* %v2_1000b584, align 4
  %v1_1000b588 = load i32, i32* @r29, align 4
  %v2_1000b588 = add i32 %v1_1000b588, 72
  %v3_1000b588 = inttoptr i32 %v2_1000b588 to i32*
  store i32 %v3_1000b584, i32* %v3_1000b588, align 4
  store i32 %v0_1000b4f4, i32* %r0.global-to-local, align 4
  ret i32 %v3_1000b514

; uselistorder directives
  uselistorder i32 72, { 2, 0, 1 }
  uselistorder i32 64, { 19, 13, 14, 2, 21, 15, 0, 1, 12, 16, 17, 18, 3, 4, 20, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 56, { 7, 8, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 40, { 9, 0, 4, 1, 5, 6, 7, 8, 10, 3, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 52, { 4, 1, 2, 3, 5, 6, 0, 7 }
  uselistorder i32 48, { 3, 4, 1, 2, 5, 0, 6, 7 }
  uselistorder i32 36, { 9, 10, 6, 7, 0, 1, 8, 2, 3, 4, 5 }
  uselistorder i32 24, { 20, 21, 7, 8, 0, 1, 9, 27, 28, 29, 22, 23, 24, 10, 11, 12, 13, 14, 16, 17, 18, 19, 15, 2, 3, 4, 5, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 6 }
  uselistorder i32 20, { 27, 28, 19, 20, 21, 22, 29, 30, 31, 32, 23, 5, 0, 1, 24, 2, 25, 26, 6, 7, 8, 9, 33, 10, 34, 35, 36, 37, 38, 11, 39, 40, 41, 42, 43, 44, 45, 46, 12, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 13, 57, 58, 59, 60, 61, 62, 63, 64, 14, 65, 66, 67, 68, 69, 70, 15, 71, 72, 73, 74, 75, 76, 77, 16, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 3, 17, 90, 91, 92, 4, 18, 93, 94, 95 }
  uselistorder i32 16, { 90, 91, 75, 76, 92, 93, 94, 95, 96, 20, 89, 77, 174, 175, 97, 98, 46, 47, 48, 78, 49, 50, 79, 80, 102, 99, 81, 82, 51, 23, 84, 85, 18, 0, 19, 1, 2, 86, 3, 83, 88, 52, 87, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 24, 157, 158, 159, 160, 161, 4, 25, 100, 5, 6, 101, 103, 104, 26, 105, 106, 107, 108, 109, 110, 111, 27, 112, 113, 114, 29, 115, 28, 116, 117, 31, 118, 119, 7, 120, 121, 122, 30, 123, 124, 33, 125, 126, 127, 128, 129, 32, 37, 130, 131, 132, 8, 133, 134, 9, 10, 21, 136, 135, 34, 36, 35, 41, 137, 138, 139, 11, 140, 141, 12, 13, 22, 143, 142, 38, 40, 39, 144, 43, 145, 42, 146, 147, 14, 148, 44, 149, 150, 151, 15, 152, 155, 156, 153, 154, 162, 163, 16, 164, 45, 165, 166, 167, 17, 168, 171, 172, 169, 170, 173 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000b5a0() local_unnamed_addr {
dec_label_pc_1000b5a0:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000b5a0 = load i32, i32* @r5, align 4
  %v1_1000b5a0 = call i32 @__asm_rlwinm.(i32 %v0_1000b5a0, i32 29, i32 3, i32 31)
  store i32 %v1_1000b5a0, i32* %r9.global-to-local, align 4
  %v4_1000b5a0 = icmp eq i32 %v1_1000b5a0, 0
  %v0_1000b5a4 = load i32, i32* @r4, align 4
  %v1_1000b5a4 = add i32 %v0_1000b5a4, -4
  store i32 %v1_1000b5a4, i32* %r4.global-to-local, align 4
  %v0_1000b5a8 = load i32, i32* @r3, align 4
  %v1_1000b5a8 = add i32 %v0_1000b5a8, -4
  store i32 %v1_1000b5a8, i32* @r11, align 4
  br i1 %v4_1000b5a0, label %dec_label_pc_1000b5d0, label %dec_label_pc_1000b5b0

dec_label_pc_1000b5b0:                            ; preds = %dec_label_pc_1000b5a0
  %v1_1000b5b0 = urem i32 %v1_1000b5a8, 4
  %v3_1000b5b0 = icmp eq i32 %v1_1000b5b0, 0
  br i1 %v3_1000b5b0, label %dec_label_pc_1000b5b8, label %dec_label_pc_1000b60c

dec_label_pc_1000b5b8:                            ; preds = %dec_label_pc_1000b62c.dec_label_pc_1000b5b8_crit_edge, %dec_label_pc_1000b5b0
  %v1_1000b5c4.pre = phi i32 [ %v1_1000b5a8, %dec_label_pc_1000b5b0 ], [ %v1_1000b5c4.pre.pre, %dec_label_pc_1000b62c.dec_label_pc_1000b5b8_crit_edge ]
  %v0_1000b5b8 = phi i32 [ %v1_1000b5a0, %dec_label_pc_1000b5b0 ], [ %v1_1000b62c, %dec_label_pc_1000b62c.dec_label_pc_1000b5b8_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000b5b0 ], [ %v2_1000b614, %dec_label_pc_1000b62c.dec_label_pc_1000b5b8_crit_edge ]
  store i32 %v0_1000b5b8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000b5bc

dec_label_pc_1000b5bc:                            ; preds = %dec_label_pc_1000b5bc, %dec_label_pc_1000b5b8
  %v1_1000b5c4 = phi i32 [ %v2_1000b5c8, %dec_label_pc_1000b5bc ], [ %v1_1000b5c4.pre, %dec_label_pc_1000b5b8 ]
  %v0_1000b5bc = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b5bc = add i32 %v0_1000b5bc, 4
  %v2_1000b5bc = inttoptr i32 %v1_1000b5bc to i32*
  %v3_1000b5bc = load i32, i32* %v2_1000b5bc, align 4
  %v1_1000b5c0 = add i32 %v0_1000b5bc, 8
  %v2_1000b5c0 = inttoptr i32 %v1_1000b5c0 to i32*
  %v3_1000b5c0 = load i32, i32* %v2_1000b5c0, align 4
  store i32 %v3_1000b5c0, i32* %r9.global-to-local, align 4
  store i32 %v1_1000b5c0, i32* %r4.global-to-local, align 4
  %v2_1000b5c4 = add i32 %v1_1000b5c4, 4
  %v3_1000b5c4 = inttoptr i32 %v2_1000b5c4 to i32*
  store i32 %v3_1000b5bc, i32* %v3_1000b5c4, align 4
  %v0_1000b5c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b5c8 = load i32, i32* @r11, align 4
  %v2_1000b5c8 = add i32 %v1_1000b5c8, 8
  %v3_1000b5c8 = inttoptr i32 %v2_1000b5c8 to i32*
  store i32 %v0_1000b5c8, i32* %v3_1000b5c8, align 4
  store i32 %v2_1000b5c8, i32* @r11, align 4
  %v0_1000b5cc = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b5cc = add i32 %v0_1000b5cc, -1
  store i32 %v1_1000b5cc, i32* %ctr.global-to-local, align 4
  %v2_1000b5cc = icmp eq i32 %v1_1000b5cc, 0
  br i1 %v2_1000b5cc, label %dec_label_pc_1000b5d0, label %dec_label_pc_1000b5bc

dec_label_pc_1000b5d0:                            ; preds = %dec_label_pc_1000b5bc, %dec_label_pc_1000b62c, %dec_label_pc_1000b5a0
  %.1 = phi i32 [ undef, %dec_label_pc_1000b5a0 ], [ %v2_1000b614, %dec_label_pc_1000b62c ], [ %.0, %dec_label_pc_1000b5bc ]
  %v1_1000b5d0 = urem i32 %.1, 8
  store i32 %v1_1000b5d0, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000b5d0, 4
  br i1 %tmp, label %dec_label_pc_1000b5e8, label %dec_label_pc_1000b5dc

dec_label_pc_1000b5dc:                            ; preds = %dec_label_pc_1000b5d0
  %v0_1000b5dc = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b5dc = add i32 %v0_1000b5dc, 4
  %v2_1000b5dc = inttoptr i32 %v1_1000b5dc to i32*
  %v3_1000b5dc = load i32, i32* %v2_1000b5dc, align 4
  store i32 %v1_1000b5dc, i32* %r4.global-to-local, align 4
  %v1_1000b5e0 = add nsw i32 %v1_1000b5d0, -4
  store i32 %v1_1000b5e0, i32* @r5, align 4
  %v1_1000b5e4 = load i32, i32* @r11, align 4
  %v2_1000b5e4 = add i32 %v1_1000b5e4, 4
  %v3_1000b5e4 = inttoptr i32 %v2_1000b5e4 to i32*
  store i32 %v3_1000b5dc, i32* %v3_1000b5e4, align 4
  store i32 %v2_1000b5e4, i32* @r11, align 4
  %v0_1000b5e8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000b5e8

dec_label_pc_1000b5e8:                            ; preds = %dec_label_pc_1000b5d0, %dec_label_pc_1000b5dc
  %v0_1000b5e8 = phi i32 [ %v1_1000b5d0, %dec_label_pc_1000b5d0 ], [ %v0_1000b5e8.pre, %dec_label_pc_1000b5dc ]
  %v3_1000b5e8 = icmp eq i32 %v0_1000b5e8, 0
  %v0_1000b5ec = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b5e8, i32 %v0_1000b5ec)
  %v0_1000b5f0 = load i32, i32* @r5, align 4
  store i32 %v0_1000b5f0, i32* %ctr.global-to-local, align 4
  %v0_1000b5f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b5f4 = add i32 %v0_1000b5f4, 3
  store i32 %v1_1000b5f4, i32* %r4.global-to-local, align 4
  %v0_1000b5f8 = load i32, i32* @r11, align 4
  %v1_1000b5f8 = add i32 %v0_1000b5f8, 3
  store i32 %v1_1000b5f8, i32* %r9.global-to-local, align 4
  %v1_1000b5fc9 = add i32 %v0_1000b5f4, 4
  %v2_1000b5fc10 = inttoptr i32 %v1_1000b5fc9 to i8*
  %v3_1000b5fc11 = load i8, i8* %v2_1000b5fc10, align 1
  store i32 %v1_1000b5fc9, i32* %r4.global-to-local, align 4
  %v3_1000b60013 = add i32 %v0_1000b5f8, 4
  %v4_1000b60014 = inttoptr i32 %v3_1000b60013 to i8*
  store i8 %v3_1000b5fc11, i8* %v4_1000b60014, align 1
  store i32 %v3_1000b60013, i32* %r9.global-to-local, align 4
  %v0_1000b60415 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b60416 = add i32 %v0_1000b60415, -1
  store i32 %v1_1000b60416, i32* %ctr.global-to-local, align 4
  %v2_1000b60417 = icmp eq i32 %v1_1000b60416, 0
  br i1 %v2_1000b60417, label %dec_label_pc_1000b638, label %dec_label_pc_1000b5fc.dec_label_pc_1000b5fc_crit_edge

dec_label_pc_1000b5fc.dec_label_pc_1000b5fc_crit_edge: ; preds = %dec_label_pc_1000b5e8, %dec_label_pc_1000b5fc.dec_label_pc_1000b5fc_crit_edge
  %v3_1000b60018 = phi i32 [ %v3_1000b600, %dec_label_pc_1000b5fc.dec_label_pc_1000b5fc_crit_edge ], [ %v3_1000b60013, %dec_label_pc_1000b5e8 ]
  %v0_1000b5fc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b5fc = add i32 %v0_1000b5fc.pre, 1
  %v2_1000b5fc = inttoptr i32 %v1_1000b5fc to i8*
  %v3_1000b5fc = load i8, i8* %v2_1000b5fc, align 1
  store i32 %v1_1000b5fc, i32* %r4.global-to-local, align 4
  %v3_1000b600 = add i32 %v3_1000b60018, 1
  %v4_1000b600 = inttoptr i32 %v3_1000b600 to i8*
  store i8 %v3_1000b5fc, i8* %v4_1000b600, align 1
  store i32 %v3_1000b600, i32* %r9.global-to-local, align 4
  %v0_1000b604 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b604 = add i32 %v0_1000b604, -1
  store i32 %v1_1000b604, i32* %ctr.global-to-local, align 4
  %v2_1000b604 = icmp eq i32 %v1_1000b604, 0
  br i1 %v2_1000b604, label %dec_label_pc_1000b638, label %dec_label_pc_1000b5fc.dec_label_pc_1000b5fc_crit_edge

dec_label_pc_1000b60c:                            ; preds = %dec_label_pc_1000b5b0
  %v1_1000b60c = sub nsw i32 4, %v1_1000b5b0
  store i32 %v1_1000b60c, i32* %ctr.global-to-local, align 4
  %v1_1000b614 = load i32, i32* @r5, align 4
  %v2_1000b614 = sub i32 %v1_1000b614, %v1_1000b60c
  br label %dec_label_pc_1000b618

dec_label_pc_1000b618:                            ; preds = %dec_label_pc_1000b618.dec_label_pc_1000b618_crit_edge, %dec_label_pc_1000b60c
  %v2_1000b620 = phi i32 [ %v1_1000b624, %dec_label_pc_1000b618.dec_label_pc_1000b618_crit_edge ], [ %v1_1000b5a8, %dec_label_pc_1000b60c ]
  %v0_1000b618 = phi i32 [ %v0_1000b618.pre, %dec_label_pc_1000b618.dec_label_pc_1000b618_crit_edge ], [ %v1_1000b5a4, %dec_label_pc_1000b60c ]
  %v1_1000b618 = add i32 %v0_1000b618, 4
  %v2_1000b618 = inttoptr i32 %v1_1000b618 to i8*
  %v3_1000b618 = load i8, i8* %v2_1000b618, align 1
  %v1_1000b61c = add i32 %v0_1000b618, 1
  store i32 %v1_1000b61c, i32* %r4.global-to-local, align 4
  %v3_1000b620 = add i32 %v2_1000b620, 4
  %v4_1000b620 = inttoptr i32 %v3_1000b620 to i8*
  store i8 %v3_1000b618, i8* %v4_1000b620, align 1
  %v0_1000b624 = load i32, i32* @r11, align 4
  %v1_1000b624 = add i32 %v0_1000b624, 1
  store i32 %v1_1000b624, i32* @r11, align 4
  %v0_1000b628 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b628 = add i32 %v0_1000b628, -1
  store i32 %v1_1000b628, i32* %ctr.global-to-local, align 4
  %v2_1000b628 = icmp eq i32 %v1_1000b628, 0
  br i1 %v2_1000b628, label %dec_label_pc_1000b62c, label %dec_label_pc_1000b618.dec_label_pc_1000b618_crit_edge

dec_label_pc_1000b618.dec_label_pc_1000b618_crit_edge: ; preds = %dec_label_pc_1000b618
  %v0_1000b618.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b618

dec_label_pc_1000b62c:                            ; preds = %dec_label_pc_1000b618
  %v1_1000b62c = call i32 @__asm_rlwinm.(i32 %v2_1000b614, i32 29, i32 3, i32 31)
  store i32 %v1_1000b62c, i32* %r9.global-to-local, align 4
  %v4_1000b62c = icmp eq i32 %v1_1000b62c, 0
  br i1 %v4_1000b62c, label %dec_label_pc_1000b5d0, label %dec_label_pc_1000b62c.dec_label_pc_1000b5b8_crit_edge

dec_label_pc_1000b62c.dec_label_pc_1000b5b8_crit_edge: ; preds = %dec_label_pc_1000b62c
  %v1_1000b5c4.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000b5b8

dec_label_pc_1000b638:                            ; preds = %dec_label_pc_1000b5fc.dec_label_pc_1000b5fc_crit_edge, %dec_label_pc_1000b5e8
  %v0_1000b638 = load i32, i32* @r3, align 4
  ret i32 %v0_1000b638

; uselistorder directives
  uselistorder i32 %v1_1000b62c, { 1, 2, 0 }
  uselistorder i32 %v1_1000b628, { 1, 0 }
  uselistorder i32 %v1_1000b624, { 1, 0 }
  uselistorder i32 %v0_1000b618, { 1, 0 }
  uselistorder i32 %v2_1000b614, { 2, 1, 0 }
  uselistorder i32 %v1_1000b604, { 1, 0 }
  uselistorder i32 %v3_1000b600, { 1, 2, 0 }
  uselistorder i32 %v1_1000b5d0, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000b5cc, { 1, 0 }
  uselistorder i32 %v2_1000b5c8, { 1, 2, 0 }
  uselistorder i32 %v1_1000b5b0, { 1, 0 }
  uselistorder i32 %v1_1000b5a8, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2, 3 }
  uselistorder i32* @r11, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 5, 6, 0, 7, 8, 1, 2, 3, 4 }
  uselistorder i32 29, { 33, 34, 29, 31, 30, 32, 3, 4, 37, 38, 35, 36, 39, 40, 27, 28, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 25, 26, 15, 16, 19, 20, 21, 22, 17, 18, 23, 24, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000b5fc.dec_label_pc_1000b5fc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b5e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000b5d0, { 1, 0, 2 }
}

define i32 @function_1000b63c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000b63c:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268482136, i32* @lr, align 4
  %v0_1000b654 = call i32 @function_1000b5a0()
  %v0_1000b65c = load i32, i32* @r28, align 4
  %v1_1000b65c = load i32, i32* @r29, align 4
  %v2_1000b65c = add i32 %v1_1000b65c, %v0_1000b65c
  ret i32 %v2_1000b65c

; uselistorder directives
  uselistorder i32* @r28, { 8, 9, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 1, 71, 72, 73, 74, 75, 76, 293, 294, 295, 296, 297, 2, 46, 47, 48, 7, 49, 257, 258, 259, 260, 261, 262, 263, 264, 265, 279, 280, 281, 282, 10, 11, 12, 13, 14, 77, 78, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 21, 3, 22, 23, 24, 25, 26, 4, 41, 31, 0, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 50, 51, 52, 53, 54, 55, 56, 79, 80, 81, 82, 83, 84, 85, 5, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 285, 283, 284, 286, 287, 6, 288, 289, 290, 291, 292 }
}

define i32 @function_1000b670(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000b670:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000b670 = icmp eq i8* %arg1, null
  br i1 %v3_1000b670, label %dec_label_pc_1000b728, label %dec_label_pc_1000b678

dec_label_pc_1000b678:                            ; preds = %dec_label_pc_1000b670
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000b68c.pre = load i32, i32* bitcast (i32** @global_var_1001c1fc.347 to i32*), align 4
  br label %dec_label_pc_1000b688

dec_label_pc_1000b688:                            ; preds = %dec_label_pc_1000b678, %dec_label_pc_1000b700
  %v0_1000b700 = phi i32 [ 0, %dec_label_pc_1000b678 ], [ %v2_1000b708, %dec_label_pc_1000b700 ]
  %v0_1000b704 = phi i32 [ 1, %dec_label_pc_1000b678 ], [ %v1_1000b704, %dec_label_pc_1000b700 ]
  %v0_1000b688 = phi i32 [ %tmp, %dec_label_pc_1000b678 ], [ %v0_1000b6883, %dec_label_pc_1000b700 ]
  %v1_1000b688 = inttoptr i32 %v0_1000b688 to i8*
  %v2_1000b688 = load i8, i8* %v1_1000b688, align 1
  %v3_1000b688 = zext i8 %v2_1000b688 to i32
  %v1_1000b690 = mul nuw nsw i32 %v3_1000b688, 2
  %v2_1000b694 = add i32 %v1_1000b690, %v3_1000b68c.pre
  %v3_1000b694 = inttoptr i32 %v2_1000b694 to i16*
  %v4_1000b694 = load i16, i16* %v3_1000b694, align 2
  %v1_1000b698 = and i16 %v4_1000b694, 8
  %v3_1000b698 = icmp eq i16 %v1_1000b698, 0
  br i1 %v3_1000b698, label %dec_label_pc_1000b728, label %dec_label_pc_1000b6a0

dec_label_pc_1000b6a0:                            ; preds = %dec_label_pc_1000b688
  br label %dec_label_pc_1000b6b8

dec_label_pc_1000b6a8:                            ; preds = %dec_label_pc_1000b6b8
  %v1_1000b6bc = mul i32 %v1_1000b708, 10
  %v2_1000b6c4 = add i32 %v3_1000b6b8, %v1_1000b6bc
  %v1_1000b6a8 = add i32 %v2_1000b6c4, -48
  %v1_1000b6ac = add i32 %v0_1000b6f0, 1
  %v2_1000b6b0 = icmp sgt i32 %v1_1000b6a8, 255
  br i1 %v2_1000b6b0, label %dec_label_pc_1000b728, label %dec_label_pc_1000b6b8

dec_label_pc_1000b6b8:                            ; preds = %dec_label_pc_1000b6a8, %dec_label_pc_1000b6a0
  %v1_1000b708 = phi i32 [ %v1_1000b6a8, %dec_label_pc_1000b6a8 ], [ 0, %dec_label_pc_1000b6a0 ]
  %v0_1000b6f0 = phi i32 [ %v1_1000b6ac, %dec_label_pc_1000b6a8 ], [ %v0_1000b688, %dec_label_pc_1000b6a0 ]
  %v1_1000b6b8 = inttoptr i32 %v0_1000b6f0 to i8*
  %v2_1000b6b8 = load i8, i8* %v1_1000b6b8, align 1
  %v3_1000b6b8 = zext i8 %v2_1000b6b8 to i32
  %v1_1000b6c0 = mul nuw nsw i32 %v3_1000b6b8, 2
  %v2_1000b6c8 = add i32 %v1_1000b6c0, %v3_1000b68c.pre
  %v3_1000b6c8 = inttoptr i32 %v2_1000b6c8 to i16*
  %v4_1000b6c8 = load i16, i16* %v3_1000b6c8, align 2
  %v5_1000b6c8 = zext i16 %v4_1000b6c8 to i32
  %v1_1000b6cc = and i32 %v5_1000b6c8, 8
  %v3_1000b6cc = icmp eq i32 %v1_1000b6cc, 0
  br i1 %v3_1000b6cc, label %dec_label_pc_1000b6d4, label %dec_label_pc_1000b6a8

dec_label_pc_1000b6d4:                            ; preds = %dec_label_pc_1000b6b8
  %v2_1000b6d4 = icmp sgt i32 %v0_1000b704, 3
  br i1 %v2_1000b6d4, label %dec_label_pc_1000b6ec, label %dec_label_pc_1000b6dc

dec_label_pc_1000b6dc:                            ; preds = %dec_label_pc_1000b6d4
  %v3_1000b6dc = icmp eq i8 %v2_1000b6b8, 46
  br i1 %v3_1000b6dc, label %dec_label_pc_1000b6e4, label %dec_label_pc_1000b728

dec_label_pc_1000b6e4:                            ; preds = %dec_label_pc_1000b6dc
  %v1_1000b6e4 = add i32 %v0_1000b6f0, 1
  br label %dec_label_pc_1000b700

dec_label_pc_1000b6ec:                            ; preds = %dec_label_pc_1000b6d4
  %v3_1000b6ec = icmp eq i8 %v2_1000b6b8, 0
  %v1_1000b6f0 = add i32 %v0_1000b6f0, 1
  br i1 %v3_1000b6ec, label %dec_label_pc_1000b700, label %dec_label_pc_1000b6f8

dec_label_pc_1000b6f8:                            ; preds = %dec_label_pc_1000b6ec
  %v1_1000b6f8 = and i32 %v5_1000b6c8, 32
  %v3_1000b6f8 = icmp eq i32 %v1_1000b6f8, 0
  br i1 %v3_1000b6f8, label %dec_label_pc_1000b728, label %dec_label_pc_1000b700

dec_label_pc_1000b700:                            ; preds = %dec_label_pc_1000b6f8, %dec_label_pc_1000b6ec, %dec_label_pc_1000b6e4
  %v0_1000b6883 = phi i32 [ %v1_1000b6f0, %dec_label_pc_1000b6f8 ], [ %v1_1000b6f0, %dec_label_pc_1000b6ec ], [ %v1_1000b6e4, %dec_label_pc_1000b6e4 ]
  %v1_1000b700 = mul i32 %v0_1000b700, 256
  %v1_1000b704 = add nuw nsw i32 %v0_1000b704, 1
  %v2_1000b708 = or i32 %v1_1000b708, %v1_1000b700
  store i32 %v2_1000b708, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000b704, 5
  br i1 %tmp10, label %dec_label_pc_1000b688, label %dec_label_pc_1000b714

dec_label_pc_1000b714:                            ; preds = %dec_label_pc_1000b700
  %v0_1000b714 = load i32, i32* @r4, align 4
  %v3_1000b714 = icmp eq i32 %v0_1000b714, 0
  %v0_1000b71c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b714, i32 %v0_1000b71c)
  %v0_1000b720 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b720 = load i32, i32* @r4, align 4
  %v2_1000b720 = inttoptr i32 %v1_1000b720 to i32*
  store i32 %v0_1000b720, i32* %v2_1000b720, align 4
  ret i32 1

dec_label_pc_1000b728:                            ; preds = %dec_label_pc_1000b6dc, %dec_label_pc_1000b6f8, %dec_label_pc_1000b688, %dec_label_pc_1000b6a8, %dec_label_pc_1000b670
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000b708, { 1, 0 }
  uselistorder i32 %v1_1000b704, { 1, 0 }
  uselistorder i32 %v0_1000b6f0, { 0, 1, 3, 2 }
  uselistorder i32 5, { 23, 5, 24, 25, 41, 26, 27, 42, 43, 3, 2, 1, 44, 6, 7, 45, 0, 46, 47, 4, 48, 28, 29, 30, 31, 32, 33, 34, 49, 8, 10, 50, 9, 51, 13, 52, 12, 53, 11, 35, 54, 14, 16, 55, 36, 56, 15, 37, 57, 17, 38, 58, 18, 39, 59, 20, 60, 19, 40, 61, 22, 62, 21, 63, 64, 65, 66, 67 }
  uselistorder i8 0, { 5, 10, 0, 11, 12, 8, 13, 14, 15, 16, 17, 18, 1, 19, 20, 21, 22, 23, 25, 27, 24, 2, 26, 3, 28, 29, 6, 9, 30, 31, 32, 33, 34, 35, 36, 37, 4, 38, 39, 40, 41, 7, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i8 46, { 1, 2, 3, 0 }
  uselistorder i32 8, { 124, 3, 138, 139, 61, 40, 41, 62, 63, 64, 65, 66, 67, 142, 143, 11, 140, 141, 12, 128, 127, 125, 126, 109, 110, 111, 129, 130, 131, 132, 133, 134, 4, 42, 43, 44, 5, 144, 6, 68, 69, 70, 71, 72, 73, 30, 31, 45, 29, 28, 46, 32, 33, 47, 48, 7, 8, 9, 49, 50, 52, 53, 34, 35, 54, 36, 55, 57, 56, 51, 58, 59, 60, 15, 74, 75, 16, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 37, 88, 89, 90, 91, 92, 93, 94, 95, 38, 96, 97, 98, 99, 100, 101, 102, 103, 104, 13, 105, 106, 107, 108, 14, 17, 112, 18, 113, 19, 114, 20, 115, 21, 116, 22, 117, 23, 118, 119, 24, 120, 25, 121, 26, 122, 27, 123, 0, 1, 10, 135, 136, 39, 137, 2 }
  uselistorder i32 255, { 2, 0, 1 }
  uselistorder i32 -48, { 2, 0, 1 }
  uselistorder i32 10, { 79, 41, 13, 40, 2, 3, 6, 5, 0, 14, 15, 16, 23, 8, 7, 24, 10, 9, 25, 26, 27, 28, 29, 30, 31, 17, 32, 33, 34, 18, 19, 35, 36, 39, 37, 4, 38, 20, 1, 21, 11, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 12, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 22, 78 }
  uselistorder i16 0, { 0, 1, 2, 4, 5, 6, 7, 9, 8, 3, 10, 11, 12, 13 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000b728, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000b688, { 1, 0 }
}

define i32 @function_1000b730(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b730:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000b734 = load i32, i32* @lr, align 4
  store i32 %v0_1000b734, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000b740 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000b750 = add i32 %tmp, 4
  store i32 %v1_1000b750, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000b758 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000b758, i32* @r3, align 4
  br i1 %v3_1000b740, label %dec_label_pc_1000b780, label %dec_label_pc_1000b760

dec_label_pc_1000b760:                            ; preds = %dec_label_pc_1000b730
  %v2_1000b760 = load i32, i32* %arg2, align 4
  store i32 %v2_1000b760, i32* %r0.global-to-local, align 4
  store i32 268482412, i32* @lr, align 4
  %v0_1000b768 = call i32 @function_1000b5a0()
  %v0_1000b76c = load i32, i32* @r31, align 4
  %v1_1000b76c = add i32 %v0_1000b76c, 132
  %v2_1000b76c = inttoptr i32 %v1_1000b76c to i32*
  %v3_1000b76c = load i32, i32* %v2_1000b76c, align 4
  store i32 %v3_1000b76c, i32* %r0.global-to-local, align 4
  %v1_1000b778 = add i32 %v0_1000b76c, 136
  %v2_1000b778 = inttoptr i32 %v1_1000b778 to i32*
  %v3_1000b778 = load i32, i32* %v2_1000b778, align 4
  store i32 %v3_1000b778, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b780

dec_label_pc_1000b780:                            ; preds = %dec_label_pc_1000b730, %dec_label_pc_1000b760
  store i32 268482464, i32* @lr, align 4
  %v0_1000b79c = call i32 @function_1000b994()
  %v0_1000b7a0 = load i32, i32* @r30, align 4
  %v3_1000b7a0 = icmp eq i32 %v0_1000b7a0, 0
  store i32 %v0_1000b79c, i32* @r31, align 4
  br i1 %v3_1000b7a0, label %dec_label_pc_1000b7dc, label %dec_label_pc_1000b7b0

dec_label_pc_1000b7b0:                            ; preds = %dec_label_pc_1000b780
  %v1_1000b7a8 = icmp slt i32 %v0_1000b79c, 0
  %v1_1000b7b0 = add i32 %v0_1000b7a0, 4
  store i32 %v1_1000b7b0, i32* @r3, align 4
  %v2_1000b7b4 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000b7b4, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000b7a8, label %dec_label_pc_1000b7dc, label %dec_label_pc_1000b7c0

dec_label_pc_1000b7c0:                            ; preds = %dec_label_pc_1000b7b0
  %v3_1000b7c0 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000b7c0, i32* %r0.global-to-local, align 4
  %v2_1000b7c4 = inttoptr i32 %v0_1000b7a0 to i32*
  store i32 %v3_1000b7c0, i32* %v2_1000b7c4, align 4
  store i32 268482508, i32* @lr, align 4
  %v0_1000b7c8 = call i32 @function_1000b5a0()
  %v1_1000b7d4 = load i32, i32* @r30, align 4
  %v2_1000b7d4 = add i32 %v1_1000b7d4, 136
  %v3_1000b7d4 = inttoptr i32 %v2_1000b7d4 to i32*
  %v0_1000b7d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b7d8 = load i32, i32* @r30, align 4
  %v2_1000b7d8 = add i32 %v1_1000b7d8, 132
  %v3_1000b7d8 = inttoptr i32 %v2_1000b7d8 to i32*
  store i32 %v0_1000b7d8, i32* %v3_1000b7d8, align 4
  %v0_1000b7e0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b7dc

dec_label_pc_1000b7dc:                            ; preds = %dec_label_pc_1000b7b0, %dec_label_pc_1000b780, %dec_label_pc_1000b7c0
  %v0_1000b7e0 = phi i32 [ %v0_1000b79c, %dec_label_pc_1000b7b0 ], [ %v0_1000b79c, %dec_label_pc_1000b780 ], [ %v0_1000b7e0.pre, %dec_label_pc_1000b7c0 ]
  store i32 %v0_1000b734, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b7e0

; uselistorder directives
  uselistorder i32 %v0_1000b79c, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 ()* @function_1000b5a0, { 2, 1, 6, 4, 0, 3, 5, 7 }
  uselistorder i32* @r5, { 21, 22, 1, 23, 24, 0, 25, 26, 27, 10, 11, 12, 30, 20, 7, 8, 31, 32, 33, 34, 3, 13, 6, 28, 29, 2, 4, 5, 14, 18, 19, 16, 17, 9, 15 }
  uselistorder i32 128, { 7, 8, 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32* @r30, { 161, 162, 163, 164, 0, 143, 1, 48, 49, 50, 165, 168, 166, 167, 144, 145, 146, 138, 139, 140, 141, 142, 147, 148, 152, 149, 150, 151, 7, 8, 9, 10, 11, 12, 13, 2, 14, 3, 15, 22, 23, 16, 17, 18, 4, 19, 20, 21, 34, 35, 36, 37, 38, 39, 40, 41, 42, 24, 26, 27, 25, 28, 29, 30, 31, 32, 33, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 5, 58, 59, 6, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 154, 155, 153, 156, 157, 158, 159, 160 }
  uselistorder i32* null, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r31, { 2, 305, 306, 307, 284, 3, 285, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 314, 315, 308, 9, 309, 310, 311, 312, 313, 82, 83, 286, 287, 288, 289, 290, 291, 276, 277, 278, 279, 280, 281, 282, 283, 292, 293, 294, 298, 295, 296, 297, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 112, 4, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 20, 21, 22, 23, 127, 128, 129, 130, 131, 24, 25, 26, 27, 28, 29, 39, 40, 41, 42, 43, 30, 31, 32, 33, 34, 35, 36, 37, 38, 71, 72, 0, 73, 5, 74, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 77, 78, 79, 80, 81, 6, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 132, 133, 134, 135, 136, 137, 138, 139, 140, 1, 7, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 8, 299, 300, 301, 302, 303, 304 }
  uselistorder label %dec_label_pc_1000b7dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b780, { 1, 0 }
}

define i32 @function_1000b7f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b828.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000b80c = call i32 @function_1000ab4c()
  %v2_1000b814 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000b814, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000b82c33 = add i32 %v2_1000b814, 124
  %v4_1000b82c34 = inttoptr i32 %v3_1000b82c33 to i32*
  store i32 0, i32* %v4_1000b82c34, align 4
  %v0_1000b83035 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b83036 = add i32 %v0_1000b83035, -1
  store i32 %v1_1000b83036, i32* %r9.global-to-local, align 4
  %v0_1000b83437 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b83438 = add i32 %v0_1000b83437, -1
  store i32 %v1_1000b83438, i32* %ctr.global-to-local, align 4
  %v2_1000b83439 = icmp eq i32 %v1_1000b83438, 0
  br i1 %v2_1000b83439, label %dec_label_pc_1000b838, label %dec_label_pc_1000b828.dec_label_pc_1000b828_crit_edge

dec_label_pc_1000b828.dec_label_pc_1000b828_crit_edge: ; preds = %dec_label_pc_1000b828.lr.ph, %dec_label_pc_1000b828.dec_label_pc_1000b828_crit_edge
  %v1_1000b83040 = phi i32 [ %v1_1000b830, %dec_label_pc_1000b828.dec_label_pc_1000b828_crit_edge ], [ %v1_1000b83036, %dec_label_pc_1000b828.lr.ph ]
  %v0_1000b82c.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b82c.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b828 = mul i32 %v1_1000b83040, 4
  %v3_1000b82c = add i32 %v1_1000b828, %v1_1000b82c.pre
  %v4_1000b82c = inttoptr i32 %v3_1000b82c to i32*
  store i32 %v0_1000b82c.pre, i32* %v4_1000b82c, align 4
  %v0_1000b830 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b830 = add i32 %v0_1000b830, -1
  store i32 %v1_1000b830, i32* %r9.global-to-local, align 4
  %v0_1000b834 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b834 = add i32 %v0_1000b834, -1
  store i32 %v1_1000b834, i32* %ctr.global-to-local, align 4
  %v2_1000b834 = icmp eq i32 %v1_1000b834, 0
  br i1 %v2_1000b834, label %dec_label_pc_1000b838, label %dec_label_pc_1000b828.dec_label_pc_1000b828_crit_edge

dec_label_pc_1000b838:                            ; preds = %dec_label_pc_1000b828.dec_label_pc_1000b828_crit_edge, %dec_label_pc_1000b828.lr.ph
  store i32 %v2_1000b814, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000b840 = call i32 @function_10009fa0()
  %v3_1000b844 = icmp eq i32 %v0_1000b840, 0
  br i1 %v3_1000b844, label %dec_label_pc_1000b84c, label %dec_label_pc_1000b85c

dec_label_pc_1000b84c:                            ; preds = %dec_label_pc_1000b838
  store i32 268482652, i32* @lr, align 4
  %v3_1000b858 = call i32 @function_100093f4(i32 1, i32 %v2_1000b814, i32 0)
  br label %dec_label_pc_1000b85c

dec_label_pc_1000b85c:                            ; preds = %dec_label_pc_1000b838, %dec_label_pc_1000b84c
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000b860 = load i32, i32* @global_var_1001c264.368, align 4
  %v3_1000b864 = icmp eq i32 %v3_1000b860, 0
  br i1 %v3_1000b864, label %dec_label_pc_1000b86c, label %dec_label_pc_1000b894

dec_label_pc_1000b86c:                            ; preds = %dec_label_pc_1000b85c
  store i32 1, i32* @global_var_1001c264.368, align 4
  br label %dec_label_pc_1000b874

dec_label_pc_1000b874:                            ; preds = %dec_label_pc_1000b8f0, %dec_label_pc_1000b86c
  store i32 ptrtoint (i32* @global_var_1001c1c8.366 to i32), i32* %r29.global-to-local, align 4
  %v0_1000b880 = call i32 @function_1000ab4c()
  store i32 268482700, i32* @lr, align 4
  %v1_1000b888 = call i32 @function_1000b9dc(i32 6)
  %v0_1000b890 = call i32 @function_1000ab4c()
  %v3_1000b898.pre = load i32, i32* @global_var_1001c264.368, align 4
  br label %dec_label_pc_1000b894

dec_label_pc_1000b894:                            ; preds = %dec_label_pc_1000b85c, %dec_label_pc_1000b874
  %v0_1000b90c = phi i32 [ %v3_1000b860, %dec_label_pc_1000b85c ], [ %v3_1000b898.pre, %dec_label_pc_1000b874 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000b89c = icmp eq i32 %v0_1000b90c, 1
  br i1 %v3_1000b89c, label %dec_label_pc_1000b8dc.lr.ph, label %dec_label_pc_1000b90c

dec_label_pc_1000b8dc.lr.ph:                      ; preds = %dec_label_pc_1000b894
  %v2_1000b8a8 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001c264.368, align 4
  store i32 ptrtoint (i32* @global_var_1000b8bc.370 to i32), i32* @lr, align 4
  %v3_1000b8b8 = call i32 @function_100098a0(i32 %v2_1000b8a8, i32 0, i32 140)
  store i32 %v2_1000b814, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000b82c33, i32* %r9.global-to-local, align 4
  %v2_1000b8e425 = add i32 %v2_1000b814, 256
  %v3_1000b8e426 = inttoptr i32 %v2_1000b8e425 to i32*
  store i32 -1, i32* %v3_1000b8e426, align 4
  %v0_1000b8e827 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b8e828 = add i32 %v0_1000b8e827, -1
  store i32 %v1_1000b8e828, i32* %r11.global-to-local, align 4
  %v0_1000b8ec29 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b8ec30 = add i32 %v0_1000b8ec29, -1
  store i32 %v1_1000b8ec30, i32* %ctr.global-to-local, align 4
  %v2_1000b8ec31 = icmp eq i32 %v1_1000b8ec30, 0
  br i1 %v2_1000b8ec31, label %dec_label_pc_1000b8f0, label %dec_label_pc_1000b8dc.dec_label_pc_1000b8dc_crit_edge

dec_label_pc_1000b8dc.dec_label_pc_1000b8dc_crit_edge: ; preds = %dec_label_pc_1000b8dc.lr.ph, %dec_label_pc_1000b8dc.dec_label_pc_1000b8dc_crit_edge
  %v1_1000b8e832 = phi i32 [ %v1_1000b8e8, %dec_label_pc_1000b8dc.dec_label_pc_1000b8dc_crit_edge ], [ %v1_1000b8e828, %dec_label_pc_1000b8dc.lr.ph ]
  %v1_1000b8e0.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000b8e4.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b8dc = mul i32 %v1_1000b8e832, 4
  %v2_1000b8e0 = add i32 %v1_1000b8dc, %v1_1000b8e0.pre
  store i32 %v2_1000b8e0, i32* %r9.global-to-local, align 4
  %v2_1000b8e4 = add i32 %v2_1000b8e0, 132
  %v3_1000b8e4 = inttoptr i32 %v2_1000b8e4 to i32*
  store i32 %v0_1000b8e4.pre, i32* %v3_1000b8e4, align 4
  %v0_1000b8e8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b8e8 = add i32 %v0_1000b8e8, -1
  store i32 %v1_1000b8e8, i32* %r11.global-to-local, align 4
  %v0_1000b8ec = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b8ec = add i32 %v0_1000b8ec, -1
  store i32 %v1_1000b8ec, i32* %ctr.global-to-local, align 4
  %v2_1000b8ec = icmp eq i32 %v1_1000b8ec, 0
  br i1 %v2_1000b8ec, label %dec_label_pc_1000b8f0, label %dec_label_pc_1000b8dc.dec_label_pc_1000b8dc_crit_edge

dec_label_pc_1000b8f0:                            ; preds = %dec_label_pc_1000b8dc.dec_label_pc_1000b8dc_crit_edge, %dec_label_pc_1000b8dc.lr.ph
  store i32 268482824, i32* @lr, align 4
  %v4_1000b904 = call i32 @function_1000b730(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000b874

dec_label_pc_1000b90c:                            ; preds = %dec_label_pc_1000b894
  %v3_1000b90c = icmp eq i32 %v0_1000b90c, 2
  br i1 %v3_1000b90c, label %dec_label_pc_1000b914, label %dec_label_pc_1000b920

dec_label_pc_1000b914:                            ; preds = %dec_label_pc_1000b90c
  store i32 3, i32* @global_var_1001c264.368, align 4
  br label %dec_label_pc_1000b920

dec_label_pc_1000b920:                            ; preds = %dec_label_pc_1000b90c, %dec_label_pc_1000b914
  %v3_1000b920 = phi i32 [ %v0_1000b90c, %dec_label_pc_1000b90c ], [ 3, %dec_label_pc_1000b914 ]
  %v1_1000b928 = icmp ne i32 %v3_1000b920, 3
  call void @__pseudo_cond_branch(i1 %v1_1000b928, i32 268482876)
  store i32 4, i32* @global_var_1001c264.368, align 4
  %v1_1000b938 = call i32 @function_1000aeec(i32 127)
  ret i32 %v1_1000b938

; uselistorder directives
  uselistorder i32 %v1_1000b8ec, { 1, 0 }
  uselistorder i32 %v1_1000b8e8, { 1, 0 }
  uselistorder i32 %v1_1000b834, { 1, 0 }
  uselistorder i32 %v1_1000b830, { 1, 0 }
  uselistorder i32 %v2_1000b814, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 2, 5, 6, 8, 7, 3, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32)* @function_1000aeec, { 1, 0 }
  uselistorder i32 127, { 0, 1, 3, 2 }
  uselistorder i32 3, { 0, 6, 31, 94, 97, 98, 99, 100, 92, 95, 96, 46, 102, 101, 8, 103, 104, 105, 67, 68, 1, 7, 32, 33, 47, 48, 49, 50, 2, 52, 53, 54, 55, 56, 9, 57, 34, 58, 10, 51, 65, 35, 3, 89, 36, 59, 60, 62, 63, 61, 64, 66, 4, 69, 70, 12, 37, 5, 11, 71, 14, 72, 38, 13, 73, 74, 75, 15, 39, 16, 76, 77, 78, 17, 40, 18, 79, 80, 20, 41, 19, 81, 82, 42, 83, 21, 22, 23, 84, 85, 43, 86, 24, 25, 26, 87, 88, 27, 44, 28, 90, 91, 29, 45, 30, 93 }
  uselistorder i32 (i32, i32*, i32)* @function_1000b730, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 256, { 72, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 75, 21, 22, 23, 24, 25, 26, 27, 28, 76, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 73, 45, 46, 47, 48, 49, 50, 51, 52, 74, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71 }
  uselistorder i32 (i32, i32, i32)* @function_100098a0, { 1, 6, 9, 0, 2, 8, 7, 5, 4, 3 }
  uselistorder i32 2, { 213, 41, 0, 1, 58, 59, 214, 60, 215, 61, 216, 30, 2, 3, 4, 42, 113, 126, 217, 114, 31, 62, 43, 63, 33, 32, 34, 64, 65, 115, 66, 67, 116, 117, 68, 118, 5, 6, 119, 120, 39, 121, 44, 122, 69, 125, 8, 7, 71, 70, 72, 35, 200, 75, 76, 74, 73, 45, 9, 10, 11, 123, 124, 77, 46, 78, 79, 80, 81, 47, 83, 82, 84, 49, 48, 85, 86, 87, 88, 89, 90, 36, 40, 127, 201, 12, 37, 202, 13, 128, 129, 130, 131, 132, 133, 134, 91, 135, 136, 50, 137, 138, 139, 140, 141, 93, 142, 92, 143, 144, 145, 146, 147, 148, 149, 150, 94, 151, 51, 95, 96, 152, 153, 97, 98, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 14, 15, 16, 17, 18, 19, 99, 164, 52, 165, 166, 167, 168, 169, 20, 21, 22, 23, 24, 25, 100, 170, 53, 171, 172, 173, 174, 175, 101, 177, 176, 26, 27, 102, 178, 54, 179, 180, 181, 182, 183, 103, 185, 184, 28, 29, 104, 186, 55, 105, 106, 187, 188, 107, 108, 189, 190, 191, 192, 193, 194, 196, 197, 198, 195, 109, 199, 56, 203, 204, 205, 110, 111, 207, 208, 209, 206, 112, 210, 57, 211, 38, 212 }
  uselistorder i32* @global_var_1001c264.368, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 33, 34, 0, 35, 2, 1, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 4, 29, 5, 30, 31, 32 }
  uselistorder i32 (i32, i32, i32)* @function_100093f4, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 ()* @function_10009fa0, { 2, 1, 0, 4, 3 }
  uselistorder i32* @r4, { 76, 77, 78, 73, 74, 79, 35, 1, 36, 7, 37, 86, 85, 5, 4, 80, 82, 83, 72, 81, 9, 8, 75, 10, 11, 12, 6, 38, 39, 84, 13, 14, 15, 40, 19, 20, 21, 16, 17, 18, 27, 28, 29, 3, 66, 67, 68, 69, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 41, 0, 2, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71 }
  uselistorder i32 6, { 12, 13, 61, 1, 14, 15, 26, 16, 17, 27, 18, 19, 28, 29, 30, 2, 31, 0, 32, 33, 34, 35, 3, 36, 37, 38, 4, 39, 40, 41, 42, 5, 6, 43, 44, 45, 20, 7, 46, 47, 21, 8, 48, 22, 49, 23, 9, 50, 51, 52, 53, 24, 10, 54, 55, 56, 57, 58, 25, 11, 59, 60 }
  uselistorder i32 4, { 130, 0, 1, 368, 369, 370, 371, 372, 69, 70, 373, 374, 131, 375, 376, 2, 200, 201, 152, 153, 202, 203, 205, 377, 384, 3, 4, 5, 6, 7, 347, 349, 348, 345, 346, 316, 317, 318, 319, 350, 351, 352, 353, 354, 355, 356, 357, 358, 8, 154, 9, 79, 155, 156, 378, 379, 380, 132, 381, 382, 383, 10, 204, 133, 11, 206, 207, 208, 209, 210, 134, 135, 157, 136, 158, 159, 160, 82, 78, 161, 162, 163, 164, 12, 166, 167, 173, 174, 165, 175, 72, 176, 71, 80, 178, 81, 179, 180, 181, 182, 183, 177, 168, 169, 170, 171, 172, 192, 13, 193, 14, 194, 195, 196, 73, 137, 197, 303, 184, 138, 84, 83, 85, 185, 186, 187, 74, 188, 75, 189, 190, 191, 15, 198, 199, 76, 211, 212, 213, 16, 214, 215, 216, 217, 90, 218, 219, 17, 18, 89, 220, 221, 19, 86, 88, 87, 222, 223, 20, 224, 225, 95, 226, 21, 22, 227, 94, 228, 91, 229, 93, 92, 230, 231, 232, 101, 23, 24, 233, 234, 25, 235, 236, 237, 100, 26, 27, 96, 238, 97, 99, 98, 239, 240, 241, 242, 243, 244, 139, 103, 102, 245, 246, 28, 247, 248, 249, 104, 250, 251, 29, 30, 105, 252, 106, 108, 107, 253, 254, 31, 255, 256, 113, 257, 258, 32, 33, 112, 259, 109, 111, 110, 260, 261, 262, 263, 34, 264, 265, 266, 267, 140, 268, 35, 269, 270, 36, 271, 115, 272, 114, 141, 273, 274, 275, 276, 37, 277, 278, 279, 280, 142, 281, 38, 282, 283, 39, 284, 117, 285, 116, 143, 286, 287, 288, 289, 290, 291, 144, 119, 118, 292, 293, 294, 295, 40, 297, 298, 145, 299, 300, 301, 124, 302, 41, 42, 146, 296, 123, 120, 122, 121, 304, 305, 306, 307, 308, 147, 148, 43, 310, 311, 149, 312, 313, 314, 129, 315, 44, 45, 150, 309, 128, 125, 127, 126, 46, 320, 321, 47, 48, 322, 323, 49, 50, 324, 325, 51, 52, 326, 327, 53, 54, 328, 329, 55, 56, 330, 331, 57, 332, 58, 333, 334, 59, 60, 335, 336, 61, 62, 337, 338, 63, 64, 339, 340, 65, 66, 341, 342, 67, 343, 344, 359, 360, 361, 362, 363, 364, 77, 365, 68, 366, 367, 151 }
  uselistorder i32 32, { 19, 20, 48, 37, 38, 27, 28, 15, 16, 35, 36, 29, 0, 1, 2, 17, 39, 18, 40, 3, 4, 5, 6, 22, 30, 23, 21, 33, 7, 8, 9, 24, 34, 10, 11, 12, 13, 14, 25, 26, 31, 32, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 31, { 1, 2, 28, 29, 17, 30, 31, 3, 4, 0, 5, 32, 33, 18, 19, 20, 21, 24, 25, 22, 23, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 14, 26, 27 }
  uselistorder i32 ()* @function_1000ab4c, { 3, 2, 1, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 21, 20, 19 }
  uselistorder label %dec_label_pc_1000b920, { 1, 0 }
  uselistorder label %dec_label_pc_1000b8dc.dec_label_pc_1000b8dc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b894, { 1, 0 }
  uselistorder label %dec_label_pc_1000b85c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b828.dec_label_pc_1000b828_crit_edge, { 1, 0 }
}

define i32 @function_1000b944(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b944:
  %v1_1000b944 = add i32 %arg1, 28
  %v2_1000b944 = inttoptr i32 %v1_1000b944 to i32*
  %v3_1000b944 = load i32, i32* %v2_1000b944, align 4
  store i32 %v3_1000b944, i32* @global_var_1001c268.371, align 4
  %v1_1000b954 = add i32 %arg1, 44
  %v2_1000b954 = inttoptr i32 %v1_1000b954 to i32*
  %v3_1000b954 = load i32, i32* %v2_1000b954, align 4
  store i32 %v3_1000b954, i32* @global_var_1001c26c.372, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 7, 0, 5, 6, 1, 2, 3, 4 }
  uselistorder i32 28, { 45, 16, 17, 5, 6, 18, 15, 44, 7, 9, 10, 11, 12, 8, 13, 14, 2, 3, 4, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 40, 41, 42, 1, 43 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000b960(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b960:
  store i32 %arg1, i32* @global_var_1001c270.365, align 4
  %v0_1000b988 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000b988)
  %v1_1000b990 = call i32 @function_1000ba0c(i32 12)
  ret i32 %v1_1000b990

; uselistorder directives
  uselistorder i32 12, { 16, 40, 41, 23, 24, 42, 43, 44, 45, 99, 100, 101, 102, 6, 97, 103, 0, 1, 9, 98, 5, 17, 18, 10, 25, 46, 47, 19, 48, 49, 50, 20, 21, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 22, 38, 7, 39, 33, 8, 92, 51, 11, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 12, 64, 65, 66, 67, 68, 69, 70, 13, 71, 72, 73, 74, 75, 76, 77, 78, 79, 14, 80, 81, 82, 83, 84, 85, 86, 87, 88, 15, 89, 90, 91, 93, 94, 95, 96, 2, 3, 4 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 6, 10, 5, 11, 7, 12, 4, 0, 8, 1, 3, 2, 9 }
  uselistorder i1 true, { 2, 0, 1 }
  uselistorder i32* @global_var_1001c270.365, { 1, 0, 2 }
}

define i32 @function_1000b994() local_unnamed_addr {
dec_label_pc_1000b994:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b9ac = call i32 @__asm_mfcr()
  %v1_1000b9b0 = and i32 %v0_1000b9ac, 268435456
  %v3_1000b9b0 = icmp eq i32 %v1_1000b9b0, 0
  store i32 %v0_1000b9ac, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b9b0, label %dec_label_pc_1000b9c8, label %dec_label_pc_1000b9bc

dec_label_pc_1000b9bc:                            ; preds = %dec_label_pc_1000b994
  %v0_1000b9bc = call i32 @function_100097b8()
  %v0_1000b9c0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b9c0 = inttoptr i32 %v0_1000b9bc to i32*
  store i32 %v0_1000b9c0, i32* %v2_1000b9c0, align 4
  br label %dec_label_pc_1000b9c8

dec_label_pc_1000b9c8:                            ; preds = %dec_label_pc_1000b994, %dec_label_pc_1000b9bc
  %v0_1000b9d8 = phi i32 [ %v0_1000b9ac, %dec_label_pc_1000b994 ], [ -1, %dec_label_pc_1000b9bc ]
  ret i32 %v0_1000b9d8

; uselistorder directives
  uselistorder i32 268435456, { 43, 25, 44, 32, 45, 46, 47, 48, 33, 34, 49, 50, 26, 31, 37, 51, 27, 30, 35, 36, 28, 52, 41, 39, 42, 40, 38, 53, 54, 29, 2, 0, 1, 5, 3, 4, 8, 6, 7, 9, 10, 13, 11, 12, 16, 14, 15, 17, 20, 18, 19, 23, 21, 22, 24 }
  uselistorder i32 ()* @__asm_mfcr, { 12, 48, 11, 39, 10, 9, 8, 7, 38, 37, 6, 5, 4, 47, 40, 25, 3, 46, 42, 36, 35, 45, 2, 14, 16, 13, 15, 20, 1, 0, 44, 43, 41, 34, 33, 32, 31, 30, 29, 28, 27, 26, 24, 23, 22, 21, 19, 18, 17 }
  uselistorder label %dec_label_pc_1000b9c8, { 1, 0 }
}

define i32 @function_1000b9dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b9dc:
  %v0_1000b9dc = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268483060, i32* @lr, align 4
  %v0_1000b9f0 = call i32 @function_1000912c()
  %v0_1000b9f8 = load i32, i32* @r29, align 4
  store i32 %v0_1000b9dc, i32* @lr, align 4
  %v2_1000ba08 = call i32 @function_100091bc(i32 %v0_1000b9f0, i32 %v0_1000b9f8)
  ret i32 %v2_1000ba08

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_100091bc, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_1000912c, { 0, 3, 2, 1 }
}

define i32 @function_1000ba0c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ba0c:
  store i32 %arg1, i32* @r29, align 4
  %v0_1000ba20 = call i32 @function_100097b8()
  %v0_1000ba24 = load i32, i32* @r29, align 4
  %v2_1000ba24 = inttoptr i32 %v0_1000ba20 to i32*
  store i32 %v0_1000ba24, i32* %v2_1000ba24, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 ()* @function_100097b8, { 23, 15, 52, 14, 34, 13, 12, 11, 10, 33, 32, 31, 9, 8, 0, 7, 6, 37, 36, 21, 22, 51, 50, 49, 48, 30, 29, 28, 47, 35, 26, 5, 4, 46, 40, 27, 25, 45, 3, 17, 19, 16, 18, 24, 2, 1, 44, 43, 42, 41, 39, 38, 20 }
  uselistorder i32* @r29, { 294, 295, 317, 318, 319, 14, 15, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 320, 321, 322, 323, 324, 1, 64, 296, 297, 298, 299, 292, 293, 300, 2, 301, 302, 303, 304, 305, 306, 16, 17, 18, 85, 86, 87, 88, 89, 90, 91, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 42, 43, 44, 45, 36, 37, 38, 39, 40, 41, 3, 55, 56, 57, 4, 58, 59, 60, 46, 0, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 65, 66, 67, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 5, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 6, 177, 7, 178, 8, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 9, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 10, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 11, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 12, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 308, 307, 309, 310, 311, 13, 312, 313, 314, 315, 316 }
}

define i32 @function_1000ba40(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ba40:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001c084.353 to i32), i32* %r31.global-to-local, align 4
  %v3_1000ba5c = load i32, i32* @global_var_1001c084.353, align 4
  %v3_1000ba60 = icmp eq i32 %v3_1000ba5c, -1
  br i1 %v3_1000ba60, label %dec_label_pc_1000ba7c, label %dec_label_pc_1000ba68

dec_label_pc_1000ba68:                            ; preds = %dec_label_pc_1000ba40, %dec_label_pc_1000ba68
  %v0_1000ba68 = phi i32 [ %v3_1000ba70, %dec_label_pc_1000ba68 ], [ %v3_1000ba5c, %dec_label_pc_1000ba40 ]
  call void @__pseudo_call(i32 %v0_1000ba68)
  %v0_1000ba70 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000ba70 = add i32 %v0_1000ba70, -4
  %v2_1000ba70 = inttoptr i32 %v1_1000ba70 to i32*
  %v3_1000ba70 = load i32, i32* %v2_1000ba70, align 4
  store i32 %v1_1000ba70, i32* %r31.global-to-local, align 4
  %v3_1000ba74 = icmp eq i32 %v3_1000ba70, -1
  br i1 %v3_1000ba74, label %dec_label_pc_1000ba7c, label %dec_label_pc_1000ba68

dec_label_pc_1000ba7c:                            ; preds = %dec_label_pc_1000ba68, %dec_label_pc_1000ba40
  %v0_1000ba8c = load i32, i32* @r3, align 4
  ret i32 %v0_1000ba8c

; uselistorder directives
  uselistorder i32 %v3_1000ba70, { 1, 0 }
  uselistorder i32 -4, { 0, 13, 14, 15, 7, 8, 9, 10, 11, 12, 16, 17, 1, 2, 3, 4, 5, 6 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 2, 0 }
  uselistorder i32 -1, { 143, 144, 0, 39, 93, 273, 11, 12, 13, 274, 94, 275, 9, 10, 95, 96, 14, 97, 40, 41, 266, 80, 42, 209, 43, 44, 45, 46, 47, 210, 211, 212, 213, 214, 219, 48, 286, 284, 49, 276, 277, 81, 98, 278, 17, 18, 99, 283, 15, 16, 195, 3, 82, 267, 268, 34, 145, 282, 279, 50, 146, 100, 147, 19, 20, 148, 149, 150, 37, 51, 151, 152, 78, 101, 102, 103, 104, 215, 216, 21, 22, 23, 105, 217, 218, 106, 83, 79, 220, 221, 52, 53, 54, 55, 280, 281, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 285, 69, 153, 107, 24, 222, 223, 108, 1, 109, 110, 154, 70, 71, 111, 2, 112, 25, 113, 72, 114, 26, 224, 84, 155, 115, 85, 156, 157, 158, 116, 159, 160, 73, 163, 117, 28, 118, 27, 119, 164, 120, 74, 165, 166, 167, 121, 122, 161, 162, 184, 77, 4, 185, 186, 123, 29, 187, 188, 189, 190, 191, 124, 38, 168, 86, 169, 170, 88, 171, 172, 87, 173, 174, 175, 89, 176, 177, 178, 75, 179, 180, 125, 30, 126, 31, 181, 182, 183, 192, 76, 193, 194, 127, 128, 129, 130, 131, 132, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 35, 36, 225, 226, 227, 228, 229, 133, 134, 135, 230, 231, 136, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 250, 32, 252, 253, 255, 254, 33, 256, 257, 258, 259, 5, 260, 6, 261, 262, 7, 263, 8, 264, 265, 137, 138, 269, 139, 270, 140, 141, 271, 272, 142, 90, 91, 92 }
  uselistorder i32 1, { 278, 507, 1045, 643, 644, 724, 723, 353, 349, 352, 351, 348, 350, 727, 726, 725, 41, 0, 1031, 1032, 1033, 1034, 567, 42, 1046, 1047, 1048, 1049, 516, 515, 514, 12, 13, 15, 16, 14, 415, 134, 728, 100, 101, 223, 283, 513, 512, 730, 729, 486, 485, 487, 483, 482, 484, 481, 488, 645, 28, 29, 31, 30, 731, 490, 219, 646, 732, 35, 33, 32, 34, 647, 589, 1053, 1050, 736, 735, 734, 733, 500, 498, 495, 499, 497, 496, 648, 1052, 737, 900, 901, 902, 642, 903, 568, 36, 37, 39, 38, 40, 222, 220, 221, 17, 18, 20, 21, 19, 282, 546, 738, 517, 1051, 506, 649, 650, 741, 740, 739, 87, 84, 85, 86, 83, 88, 489, 590, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 847, 756, 755, 476, 477, 758, 757, 23, 22, 24, 941, 535, 27, 26, 25, 1054, 1055, 474, 472, 475, 473, 78, 79, 77, 80, 81, 82, 759, 651, 760, 54, 53, 55, 652, 761, 158, 159, 591, 762, 56, 299, 89, 491, 421, 135, 298, 215, 501, 480, 763, 281, 216, 503, 505, 504, 502, 764, 217, 765, 420, 848, 766, 214, 916, 917, 536, 537, 551, 918, 919, 547, 920, 769, 768, 767, 523, 519, 520, 524, 518, 522, 525, 521, 1, 905, 904, 906, 907, 942, 943, 526, 944, 945, 771, 770, 921, 922, 923, 653, 924, 43, 44, 45, 46, 1028, 1029, 570, 569, 1030, 218, 844, 846, 845, 654, 925, 538, 493, 492, 494, 1035, 280, 279, 926, 927, 539, 540, 552, 928, 8, 11, 9, 10, 946, 91, 90, 92, 93, 94, 95, 96, 97, 98, 99, 967, 154, 157, 156, 155, 947, 130, 133, 132, 131, 50, 51, 553, 592, 849, 850, 655, 851, 852, 656, 853, 854, 856, 860, 861, 857, 858, 859, 862, 657, 863, 658, 659, 864, 660, 661, 865, 871, 872, 577, 717, 779, 778, 777, 776, 775, 774, 773, 772, 152, 144, 143, 141, 137, 149, 140, 139, 145, 136, 138, 146, 142, 151, 150, 153, 148, 147, 866, 867, 662, 868, 869, 663, 870, 66, 57, 60, 62, 64, 63, 65, 59, 58, 67, 61, 855, 664, 478, 479, 550, 880, 881, 885, 882, 888, 883, 527, 528, 884, 548, 529, 530, 541, 531, 532, 886, 887, 549, 533, 534, 542, 889, 665, 890, 891, 666, 892, 893, 894, 897, 898, 895, 896, 554, 899, 593, 787, 786, 785, 784, 783, 718, 782, 781, 780, 116, 110, 108, 102, 109, 112, 111, 105, 103, 104, 106, 114, 115, 113, 117, 107, 1012, 667, 555, 511, 509, 510, 508, 948, 788, 49, 47, 48, 669, 595, 873, 594, 874, 668, 670, 876, 877, 875, 571, 878, 671, 672, 673, 674, 675, 676, 879, 578, 800, 799, 798, 797, 721, 796, 795, 794, 793, 792, 791, 790, 789, 75, 73, 74, 5, 72, 6, 70, 71, 76, 69, 677, 678, 679, 382, 680, 597, 596, 572, 802, 801, 681, 576, 908, 686, 682, 909, 683, 910, 684, 911, 685, 912, 913, 914, 543, 687, 915, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 579, 814, 813, 812, 811, 810, 809, 808, 807, 806, 805, 804, 803, 207, 211, 210, 204, 202, 205, 203, 212, 209, 208, 206, 213, 929, 698, 930, 931, 932, 933, 934, 3, 573, 935, 936, 2, 937, 938, 939, 940, 817, 816, 719, 720, 815, 414, 413, 1013, 1016, 1014, 574, 1015, 201, 1017, 1018, 1019, 699, 700, 949, 950, 951, 952, 953, 954, 957, 955, 956, 958, 959, 960, 701, 961, 556, 580, 962, 963, 964, 575, 965, 966, 820, 819, 818, 393, 383, 391, 406, 407, 401, 408, 409, 410, 411, 412, 398, 392, 399, 400, 387, 388, 402, 403, 404, 395, 394, 405, 396, 397, 390, 389, 386, 385, 384, 968, 969, 970, 702, 557, 581, 971, 822, 821, 425, 423, 434, 442, 443, 436, 444, 438, 429, 447, 439, 435, 445, 446, 437, 440, 431, 441, 428, 427, 426, 422, 424, 448, 433, 432, 430, 972, 973, 703, 974, 975, 976, 704, 705, 582, 977, 598, 599, 823, 190, 185, 178, 187, 196, 174, 175, 199, 189, 191, 192, 194, 183, 186, 197, 198, 184, 188, 193, 195, 180, 179, 200, 182, 181, 176, 177, 978, 602, 979, 980, 600, 981, 706, 707, 601, 824, 295, 286, 284, 296, 294, 297, 288, 291, 292, 293, 287, 290, 289, 285, 982, 983, 984, 985, 708, 558, 583, 986, 603, 604, 825, 264, 259, 253, 262, 273, 255, 254, 276, 260, 274, 275, 270, 271, 272, 268, 269, 265, 266, 263, 261, 267, 252, 277, 258, 257, 256, 251, 987, 988, 989, 709, 559, 584, 990, 605, 606, 607, 826, 309, 306, 310, 320, 300, 302, 312, 311, 323, 313, 307, 321, 322, 317, 318, 319, 315, 308, 316, 314, 324, 305, 304, 303, 301, 991, 992, 993, 994, 710, 544, 560, 585, 995, 608, 609, 610, 611, 612, 830, 829, 828, 827, 457, 452, 461, 467, 450, 454, 464, 455, 465, 462, 466, 468, 469, 470, 458, 453, 451, 471, 463, 456, 460, 459, 449, 996, 997, 998, 999, 711, 545, 561, 586, 1000, 613, 614, 615, 616, 617, 618, 619, 620, 621, 834, 833, 832, 831, 333, 328, 337, 343, 326, 330, 340, 331, 341, 338, 342, 344, 345, 346, 334, 329, 327, 347, 339, 332, 336, 335, 325, 1001, 624, 1002, 1003, 622, 1004, 712, 713, 623, 835, 173, 171, 168, 166, 165, 170, 172, 163, 167, 164, 160, 162, 161, 169, 1005, 1006, 1007, 1009, 1010, 1008, 562, 587, 1011, 625, 626, 627, 836, 250, 225, 235, 247, 248, 224, 238, 244, 240, 239, 234, 226, 246, 242, 243, 230, 231, 237, 236, 241, 227, 245, 249, 233, 232, 228, 229, 1020, 1021, 1022, 1024, 1025, 1023, 563, 588, 1026, 628, 629, 630, 841, 840, 839, 838, 837, 369, 356, 367, 376, 355, 354, 371, 372, 379, 374, 365, 357, 368, 373, 377, 378, 361, 362, 370, 375, 358, 380, 366, 364, 363, 359, 360, 4, 631, 632, 633, 634, 635, 636, 637, 638, 639, 1027, 640, 641, 418, 417, 416, 419, 564, 68, 565, 7, 1036, 714, 1040, 715, 1041, 1037, 1038, 1039, 1042, 1043, 121, 129, 128, 118, 127, 119, 124, 123, 122, 120, 126, 125, 1044, 716, 566, 52, 843, 842, 381, 722 }
  uselistorder label %dec_label_pc_1000ba68, { 1, 0 }
}

define i32 @function_1000ba90() local_unnamed_addr {
dec_label_pc_1000ba90:
  %v0_1000baa8 = load i32, i32* @r3, align 4
  ret i32 %v0_1000baa8

; uselistorder directives
  uselistorder i32* @r3, { 11, 13, 185, 186, 187, 14, 22, 188, 109, 0, 110, 32, 195, 21, 19, 3, 25, 189, 191, 31, 192, 193, 194, 176, 30, 177, 9, 18, 179, 181, 180, 190, 33, 159, 34, 35, 111, 26, 16, 112, 113, 114, 115, 116, 117, 118, 119, 120, 15, 28, 4, 17, 121, 1, 2, 5, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 74, 6, 75, 76, 90, 91, 29, 92, 93, 94, 20, 166, 167, 168, 10, 169, 170, 7, 83, 84, 85, 86, 87, 88, 89, 95, 12, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 171, 172, 8, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 173, 174, 175, 178, 182, 183, 184, 23, 24, 27 }
}

define i32 @function_1000baac() local_unnamed_addr {
entry:
  store i32 268483260, i32* @lr, align 4
  %v0_1000bab8 = call i32 @function_100000b8()
  ret i32 %v0_1000bab8

; uselistorder directives
  uselistorder i32 0, { 888, 229, 889, 43, 230, 164, 890, 231, 891, 892, 41, 42, 893, 894, 895, 0, 831, 832, 833, 87, 86, 834, 896, 897, 898, 44, 899, 900, 901, 902, 592, 232, 233, 430, 838, 839, 165, 840, 903, 20, 593, 594, 904, 905, 906, 907, 234, 595, 596, 597, 598, 599, 600, 601, 88, 609, 610, 908, 909, 235, 927, 928, 236, 933, 935, 158, 936, 237, 934, 1, 910, 911, 89, 912, 913, 238, 166, 239, 914, 915, 47, 48, 916, 917, 918, 240, 921, 922, 923, 45, 46, 924, 925, 926, 556, 557, 558, 559, 560, 90, 561, 562, 563, 228, 564, 91, 843, 845, 24, 846, 49, 847, 844, 841, 842, 2, 815, 811, 812, 813, 814, 159, 3, 850, 848, 849, 160, 851, 852, 816, 817, 818, 819, 820, 241, 821, 822, 853, 854, 242, 855, 167, 856, 865, 866, 92, 857, 858, 859, 860, 861, 862, 863, 864, 4, 5, 422, 431, 432, 433, 50, 51, 434, 6, 243, 835, 435, 436, 437, 438, 439, 440, 441, 442, 244, 443, 937, 938, 939, 940, 941, 942, 943, 944, 602, 603, 52, 604, 605, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 444, 565, 754, 919, 920, 445, 535, 623, 655, 446, 929, 93, 930, 886, 881, 887, 882, 791, 931, 932, 447, 448, 624, 625, 626, 53, 94, 627, 628, 71, 629, 631, 630, 163, 566, 567, 7, 75, 25, 76, 26, 656, 77, 657, 27, 28, 658, 78, 29, 95, 245, 246, 21, 22, 632, 824, 825, 826, 827, 99, 97, 96, 828, 98, 101, 100, 429, 102, 633, 54, 634, 635, 636, 867, 103, 868, 869, 637, 638, 55, 104, 639, 8, 105, 683, 106, 659, 449, 450, 109, 451, 452, 453, 454, 455, 156, 456, 247, 457, 458, 461, 459, 108, 460, 248, 462, 463, 464, 465, 466, 110, 467, 468, 171, 469, 423, 79, 471, 472, 473, 474, 475, 476, 58, 59, 477, 478, 56, 57, 479, 480, 481, 482, 483, 484, 170, 168, 489, 490, 249, 491, 485, 486, 487, 488, 492, 23, 424, 425, 493, 494, 107, 495, 496, 497, 502, 503, 504, 505, 169, 506, 507, 111, 508, 509, 510, 511, 512, 513, 18, 498, 112, 499, 500, 113, 501, 250, 470, 82, 536, 537, 30, 251, 80, 31, 32, 252, 81, 33, 538, 9, 175, 174, 539, 540, 541, 542, 543, 544, 173, 172, 545, 60, 61, 546, 547, 253, 114, 548, 549, 115, 550, 116, 551, 117, 552, 553, 660, 514, 515, 516, 517, 157, 518, 519, 254, 520, 521, 522, 523, 524, 176, 525, 526, 62, 63, 527, 528, 529, 64, 65, 530, 531, 532, 10, 533, 255, 256, 257, 534, 258, 17, 16, 15, 14, 13, 554, 177, 555, 569, 119, 568, 118, 570, 571, 121, 572, 120, 573, 574, 123, 575, 122, 576, 577, 125, 578, 124, 579, 580, 127, 581, 126, 582, 583, 129, 584, 128, 585, 11, 259, 260, 19, 588, 586, 587, 161, 589, 590, 178, 261, 262, 263, 264, 265, 591, 34, 640, 651, 641, 12, 642, 643, 644, 645, 162, 646, 647, 648, 649, 650, 35, 130, 70, 69, 131, 652, 66, 268, 653, 266, 267, 179, 654, 84, 792, 793, 83, 794, 132, 795, 85, 796, 133, 661, 662, 269, 663, 664, 135, 134, 665, 270, 666, 667, 668, 669, 670, 671, 672, 136, 673, 674, 675, 180, 676, 677, 271, 678, 72, 73, 679, 137, 680, 681, 682, 272, 181, 182, 183, 184, 138, 684, 273, 685, 686, 687, 688, 274, 689, 690, 691, 186, 185, 692, 275, 693, 694, 695, 696, 697, 139, 698, 276, 699, 700, 701, 702, 703, 277, 704, 705, 706, 187, 188, 189, 190, 143, 142, 707, 708, 36, 141, 140, 709, 710, 711, 37, 712, 713, 714, 715, 144, 191, 716, 145, 717, 278, 718, 719, 720, 279, 721, 722, 723, 724, 280, 725, 726, 727, 192, 193, 194, 195, 196, 197, 198, 199, 728, 729, 146, 730, 731, 281, 732, 733, 734, 735, 736, 737, 282, 738, 739, 740, 208, 200, 201, 202, 203, 204, 205, 206, 207, 147, 741, 742, 283, 743, 744, 745, 746, 284, 749, 750, 67, 748, 747, 285, 751, 752, 753, 209, 210, 211, 212, 213, 214, 215, 148, 755, 756, 286, 757, 758, 759, 760, 287, 763, 764, 68, 762, 761, 288, 765, 766, 767, 216, 217, 218, 152, 151, 768, 769, 289, 38, 150, 149, 770, 771, 772, 290, 39, 773, 774, 775, 776, 153, 219, 777, 154, 778, 291, 779, 780, 781, 782, 783, 784, 785, 786, 787, 292, 788, 789, 790, 220, 221, 222, 223, 797, 155, 798, 293, 799, 800, 801, 802, 803, 804, 805, 806, 807, 294, 808, 809, 810, 224, 225, 226, 227, 823, 829, 830, 836, 837, 870, 74, 871, 872, 295, 873, 874, 875, 876, 877, 878, 879, 880, 883, 40, 884, 885, 945, 946, 947, 426, 427, 428, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966 }
  uselistorder i32* @lr, { 8, 745, 746, 747, 716, 748, 749, 750, 751, 752, 753, 754, 755, 713, 10, 756, 364, 365, 9, 717, 718, 366, 367, 368, 369, 370, 371, 765, 766, 770, 771, 772, 773, 774, 775, 776, 778, 767, 769, 757, 758, 759, 760, 761, 762, 763, 764, 719, 721, 720, 682, 683, 684, 685, 686, 687, 722, 723, 724, 725, 729, 726, 727, 728, 11, 12, 658, 659, 660, 622, 591, 13, 281, 14, 15, 623, 624, 16, 714, 17, 18, 19, 20, 21, 22, 23, 777, 24, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 768, 25, 26, 27, 28, 29, 30, 386, 711, 387, 730, 433, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 466, 434, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 136, 137, 138, 139, 140, 141, 142, 143, 113, 114, 115, 116, 117, 118, 155, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 435, 436, 437, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 0, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 328, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 4, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 5, 417, 418, 419, 420, 421, 422, 1, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 572, 565, 566, 567, 568, 569, 570, 571, 2, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 603, 596, 597, 598, 599, 600, 601, 602, 3, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 625, 627, 628, 629, 626, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 715, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 6, 7 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i64 @__decompiler_undefined_function_3() local_unnamed_addr
